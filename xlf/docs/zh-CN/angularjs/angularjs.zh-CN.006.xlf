<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="angularjs">
    <body>
      <group id="angularjs">
        <trans-unit id="a104f18bb62aee421639fe99f1a6b3715893e9cd" translate="yes" xml:space="preserve">
          <source>This method can be called to remove the &lt;code&gt;ng-pristine&lt;/code&gt; class and set the control to its dirty state (&lt;code&gt;ng-dirty&lt;/code&gt; class). A model is considered to be dirty when the control has been changed from when first compiled.</source>
          <target state="translated">可以调用此方法以删除 &lt;code&gt;ng-pristine&lt;/code&gt; 类并将控件设置为脏状态（ &lt;code&gt;ng-dirty&lt;/code&gt; 类）。当控件从首次编译时被更改时，模型被认为是肮脏的。</target>
        </trans-unit>
        <trans-unit id="be236d70e3b76ac627108d742a7d930b6e5345dc" translate="yes" xml:space="preserve">
          <source>This method can be called to remove the &lt;code&gt;ng-touched&lt;/code&gt; class and set the control to its untouched state (&lt;code&gt;ng-untouched&lt;/code&gt; class). Upon compilation, a model is set as untouched by default, however this function can be used to restore that state if the model has already been touched by the user.</source>
          <target state="translated">可以调用此方法以删除 &lt;code&gt;ng-touched&lt;/code&gt; 类并将控件设置为其未触摸状态（ &lt;code&gt;ng-untouched&lt;/code&gt; 类）。编译时，默认情况下将模型设置为未触摸，但是如果用户已经触摸过该模型，则可以使用此功能恢复该状态。</target>
        </trans-unit>
        <trans-unit id="09d3c1d51e251c93d6c1a6dd38b04fbbfccbd791" translate="yes" xml:space="preserve">
          <source>This method can be called to remove the &lt;code&gt;ng-untouched&lt;/code&gt; class and set the control to its touched state (&lt;code&gt;ng-touched&lt;/code&gt; class). A model is considered to be touched when the user has first focused the control element and then shifted focus away from the control (blur event).</source>
          <target state="translated">这个方法可以被调用以除去 &lt;code&gt;ng-untouched&lt;/code&gt; 类，并设置控制到它的触摸状态（ &lt;code&gt;ng-touched&lt;/code&gt; 类）。当用户首先将控制元素聚焦然后将焦点从控件移开（模糊事件）时，就认为该模型已被触摸。</target>
        </trans-unit>
        <trans-unit id="039cf05d82b99db28639e2f0df0e8df9fed6d706" translate="yes" xml:space="preserve">
          <source>This method can be called within $parsers/$formatters or a custom validation implementation. However, in most cases it should be sufficient to use the &lt;code&gt;ngModel.$validators&lt;/code&gt; and &lt;code&gt;ngModel.$asyncValidators&lt;/code&gt; collections which will call &lt;code&gt;$setValidity&lt;/code&gt; automatically.</source>
          <target state="translated">可以在$ parsers / $ formatters或自定义验证实现中调用此方法。但是，在大多数情况下，使用 &lt;code&gt;ngModel.$validators&lt;/code&gt; 和 &lt;code&gt;ngModel.$asyncValidators&lt;/code&gt; 集合就足够了，它们将自动调用 &lt;code&gt;$setValidity&lt;/code&gt; setValidity。</target>
        </trans-unit>
        <trans-unit id="2a0539f5b7dcaa5c95fe933397c2c13fa49ebc03" translate="yes" xml:space="preserve">
          <source>This method can be used to change which mocked responses &lt;code&gt;$httpBackend&lt;/code&gt; returns, when defining them with &lt;a href=&quot;%24httpbackend#when.html&quot;&gt;$httpBackend.when()&lt;/a&gt; (and shortcut methods). By default, &lt;code&gt;$httpBackend&lt;/code&gt; returns the first definition that matches. When setting &lt;code&gt;$http.matchLatestDefinitionEnabled(true)&lt;/code&gt;, it will use the last response that matches, i.e. the one that was added last.</source>
          <target state="translated">当使用&lt;a href=&quot;%24httpbackend#when.html&quot;&gt;$ httpBackend.when（）&lt;/a&gt;（和快捷方式方法）定义响应时，此方法可用于更改 &lt;code&gt;$httpBackend&lt;/code&gt; 返回的模拟响应。默认情况下， &lt;code&gt;$httpBackend&lt;/code&gt; 返回匹配的第一个定义。设置 &lt;code&gt;$http.matchLatestDefinitionEnabled(true)&lt;/code&gt; ，它将使用匹配的最后一个响应，即最后添加的一个。</target>
        </trans-unit>
        <trans-unit id="dcc61f9b44cb07452831de5334ffe49067b455e3" translate="yes" xml:space="preserve">
          <source>This method can be used to change which mocked responses &lt;code&gt;$httpBackend&lt;/code&gt; returns, when defining them with &lt;a href=&quot;../../ngmock/service/%24httpbackend#when.html&quot;&gt;$httpBackend.when()&lt;/a&gt; (and shortcut methods). By default, &lt;code&gt;$httpBackend&lt;/code&gt; returns the first definition that matches. When setting &lt;code&gt;$http.matchLatestDefinitionEnabled(true)&lt;/code&gt;, it will use the last response that matches, i.e. the one that was added last.</source>
          <target state="translated">当使用&lt;a href=&quot;../../ngmock/service/%24httpbackend#when.html&quot;&gt;$ httpBackend.when（）&lt;/a&gt;（和快捷方式方法）定义响应时，此方法可用于更改 &lt;code&gt;$httpBackend&lt;/code&gt; 返回的模拟响应。默认情况下， &lt;code&gt;$httpBackend&lt;/code&gt; 返回匹配的第一个定义。设置 &lt;code&gt;$http.matchLatestDefinitionEnabled(true)&lt;/code&gt; ，它将使用匹配的最后一个响应，即最后添加的一个。</target>
        </trans-unit>
        <trans-unit id="95660a3cb5771d7b45b7bbb186218a518c26a470" translate="yes" xml:space="preserve">
          <source>This method does not work with code minification / obfuscation. For this reason the following annotation strategies are supported.</source>
          <target state="translated">此方法不能与代码精简/混淆一起使用。因此,支持以下注解策略。</target>
        </trans-unit>
        <trans-unit id="3743c06b6e4464fc92789fb6a0e779ba20b62ec9" translate="yes" xml:space="preserve">
          <source>This method flushes all types of tasks (not only timeouts), which is unintuitive. It is recommended to use &lt;a href=&quot;%24flushpendingtasks&quot;&gt;&lt;code&gt;$flushPendingTasks&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">此方法刷新所有类型的任务（不仅超时），这是不直观的。建议改用&lt;a href=&quot;%24flushpendingtasks&quot;&gt; &lt;code&gt;$flushPendingTasks&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8360fbd33c9d5e68f4591a6c59f7a211a01b3d67" translate="yes" xml:space="preserve">
          <source>This method is called by ngModel internally when the bound scope value changes. Application developers usually do not have to call this function themselves.</source>
          <target state="translated">当绑定的范围值发生变化时,ngModel会在内部调用这个方法。应用开发者通常不需要自己调用这个函数。</target>
        </trans-unit>
        <trans-unit id="72b7c97b0517d0df1caf70a23a32b6f05272b2eb" translate="yes" xml:space="preserve">
          <source>This method is deprecated. Use &lt;a href=&quot;%24compileprovider#aHrefSanitizationTrustedUrlList.html&quot;&gt;aHrefSanitizationTrustedUrlList&lt;/a&gt; instead.</source>
          <target state="translated">This method is deprecated. Use &lt;a href=&quot;%24compileprovider#aHrefSanitizationTrustedUrlList.html&quot;&gt;aHrefSanitizationTrustedUrlList&lt;/a&gt; instead.</target>
        </trans-unit>
        <trans-unit id="4a9b174d9781fe7f514ce48f7b9ebfe656cdf51f" translate="yes" xml:space="preserve">
          <source>This method is deprecated. Use &lt;a href=&quot;%24compileprovider#imgSrcSanitizationTrustedUrlList.html&quot;&gt;imgSrcSanitizationTrustedUrlList&lt;/a&gt; instead.</source>
          <target state="translated">This method is deprecated. Use &lt;a href=&quot;%24compileprovider#imgSrcSanitizationTrustedUrlList.html&quot;&gt;imgSrcSanitizationTrustedUrlList&lt;/a&gt; instead.</target>
        </trans-unit>
        <trans-unit id="753582e916c429d5b2dcd76cf9cbadb31194bc4c" translate="yes" xml:space="preserve">
          <source>This method is deprecated. Use &lt;a href=&quot;%24scedelegateprovider#bannedResourceUrlList.html&quot;&gt;bannedResourceUrlList&lt;/a&gt; instead.</source>
          <target state="translated">This method is deprecated. Use &lt;a href=&quot;%24scedelegateprovider#bannedResourceUrlList.html&quot;&gt;bannedResourceUrlList&lt;/a&gt; instead.</target>
        </trans-unit>
        <trans-unit id="246a8d841d5ed0951cb806948e108ae1472dcf34" translate="yes" xml:space="preserve">
          <source>This method is deprecated. Use &lt;a href=&quot;%24scedelegateprovider#trustedResourceUrlList.html&quot;&gt;trustedResourceUrlList&lt;/a&gt; instead.</source>
          <target state="translated">This method is deprecated. Use &lt;a href=&quot;%24scedelegateprovider#trustedResourceUrlList.html&quot;&gt;trustedResourceUrlList&lt;/a&gt; instead.</target>
        </trans-unit>
        <trans-unit id="111861b1f33e6ba16e0e2a46b6e09b6bdb15aa32" translate="yes" xml:space="preserve">
          <source>This method is getter / setter.</source>
          <target state="translated">这个方法是getter/setter。</target>
        </trans-unit>
        <trans-unit id="ae01763d0e34b30b2df6b37f5dcec088ef8e5dfa" translate="yes" xml:space="preserve">
          <source>This method is getter only.</source>
          <target state="translated">本方法只适用于getter。</target>
        </trans-unit>
        <trans-unit id="c81e50c18dfe60ee4fd5f2abbf2491d1ef6cf978" translate="yes" xml:space="preserve">
          <source>This method is used to flush the pending callbacks and animation frames to either start an animation or conclude an animation. Note that this will not actually close an actively running animation (see &lt;a href=&quot;%24animate#closeAndFlush.html&quot;&gt;&lt;code&gt;closeAndFlush()&lt;/code&gt;&lt;/a&gt; for that).</source>
          <target state="translated">此方法用于刷新挂起的回调和动画帧以开始动画或结束动画。请注意，这实际上不会关闭正在运行的动画（请参见&lt;a href=&quot;%24animate#closeAndFlush.html&quot;&gt; &lt;code&gt;closeAndFlush()&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="d2f5be6e2442f3e5478eb9133bc83673c67fcec1" translate="yes" xml:space="preserve">
          <source>This method must be called during the &lt;a href=&quot;../../ng/type/angular.module#config.html&quot;&gt;config&lt;/a&gt; phase. Once the &lt;code&gt;$sanitize&lt;/code&gt; service has been instantiated, this method has no effect.</source>
          <target state="translated">必须在&lt;a href=&quot;../../ng/type/angular.module#config.html&quot;&gt;配置&lt;/a&gt;阶段调用此方法。一旦 &lt;code&gt;$sanitize&lt;/code&gt; 服务已被实例化，这种方法没有任何效果。</target>
        </trans-unit>
        <trans-unit id="b8fcc4fc5c0078d0531686af3fc817e06fcdb9f7" translate="yes" xml:space="preserve">
          <source>This method returns a &lt;strong&gt;shallow copy&lt;/strong&gt; of the controls that are currently part of this form. The controls can be instances of &lt;a href=&quot;form.formcontroller&quot;&gt;&lt;code&gt;FormController&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;../directive/ngform&quot;&gt;&quot;child-forms&quot;&lt;/a&gt;) and of &lt;a href=&quot;ngmodel.ngmodelcontroller&quot;&gt;&lt;code&gt;NgModelController&lt;/code&gt;&lt;/a&gt;. If you need access to the controls of child-forms, you have to call &lt;code&gt;$getControls()&lt;/code&gt; recursively on them. This can be used for example to iterate over all controls to validate them.</source>
          <target state="translated">此方法返回当前属于此窗体的控件的&lt;strong&gt;浅表副本&lt;/strong&gt;。控件可以是&lt;a href=&quot;form.formcontroller&quot;&gt; &lt;code&gt;FormController&lt;/code&gt; &lt;/a&gt;（&lt;a href=&quot;../directive/ngform&quot;&gt;&amp;ldquo;子窗体&amp;rdquo;&lt;/a&gt;）和&lt;a href=&quot;ngmodel.ngmodelcontroller&quot;&gt; &lt;code&gt;NgModelController&lt;/code&gt; 的实例&lt;/a&gt;。如果您需要访问子窗体的控件，则必须对它们进行递归调用 &lt;code&gt;$getControls()&lt;/code&gt; 。例如，这可以用于遍历所有控件以验证它们。</target>
        </trans-unit>
        <trans-unit id="7eb2bbddf37cf7ff14a48397a4375854d8e571a9" translate="yes" xml:space="preserve">
          <source>This method sets the form's &lt;code&gt;$pristine&lt;/code&gt; state to true, the &lt;code&gt;$dirty&lt;/code&gt; state to false, removes the &lt;code&gt;ng-dirty&lt;/code&gt; class and adds the &lt;code&gt;ng-pristine&lt;/code&gt; class. Additionally, it sets the &lt;code&gt;$submitted&lt;/code&gt; state to false.</source>
          <target state="translated">此方法将窗体的 &lt;code&gt;$pristine&lt;/code&gt; 状态设置为true，将 &lt;code&gt;$dirty&lt;/code&gt; 状态设置为false，删除 &lt;code&gt;ng-dirty&lt;/code&gt; 类并添加 &lt;code&gt;ng-pristine&lt;/code&gt; 类。此外，它将 &lt;code&gt;$submitted&lt;/code&gt; 状态设置为false。</target>
        </trans-unit>
        <trans-unit id="00f75c22912ee6d84e2b4439725f1730667f3fa5" translate="yes" xml:space="preserve">
          <source>This method should be called when a control wants to change the view value; typically, this is done from within a DOM event handler. For example, the &lt;a href=&quot;../directive/input&quot;&gt;input&lt;/a&gt; directive calls it when the value of the input changes and &lt;a href=&quot;../directive/select&quot;&gt;select&lt;/a&gt; calls it when an option is selected.</source>
          <target state="translated">当控件要更改视图值时，应调用此方法。通常，这是在DOM事件处理程序中完成的。例如，&lt;a href=&quot;../directive/input&quot;&gt;输入&lt;/a&gt;伪指令在输入值更改时调用它，在选择选项时&lt;a href=&quot;../directive/select&quot;&gt;选择&lt;/a&gt;调用它。</target>
        </trans-unit>
        <trans-unit id="f87b6459717eafeb949467a7b18ce6ab71215fa0" translate="yes" xml:space="preserve">
          <source>This method takes all types of tasks (not only timeouts) into account, which is unintuitive. It is recommended to use &lt;a href=&quot;%24verifynopendingtasks&quot;&gt;&lt;code&gt;$verifyNoPendingTasks&lt;/code&gt;&lt;/a&gt; instead, which additionally allows checking for timeouts only (with &lt;code&gt;$verifyNoPendingTasks('$timeout')&lt;/code&gt;).</source>
          <target state="translated">此方法将所有类型的任务（不仅是超时）都考虑在内，这是不直观的。建议改用&lt;a href=&quot;%24verifynopendingtasks&quot;&gt; &lt;code&gt;$verifyNoPendingTasks&lt;/code&gt; &lt;/a&gt;，它另外只允许检查超时（使用 &lt;code&gt;$verifyNoPendingTasks('$timeout')&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="d2705a3d550a46eddae0f388fab27d18be36a157" translate="yes" xml:space="preserve">
          <source>This method will add each of the injectables to the injector and execute all of the config and run blocks for each module passed to the method.</source>
          <target state="translated">该方法将把每一个注射剂添加到注射器中,并为传递给该方法的每个模块执行所有的配置和运行块。</target>
        </trans-unit>
        <trans-unit id="2a37d1349d00a1da78883f5fe65c38c4d72feb8f" translate="yes" xml:space="preserve">
          <source>This method will also propagate to all the controls contained in this form.</source>
          <target state="translated">这个方法也会传播到这个表单中包含的所有控件。</target>
        </trans-unit>
        <trans-unit id="27ac794b33b9e4188249c87bb5a53b20e784a575" translate="yes" xml:space="preserve">
          <source>This method will close all pending animations (both &lt;a href=&quot;../../nganimate#javascript-based-animations.html&quot;&gt;Javascript&lt;/a&gt; and &lt;a href=&quot;../../nganimate/service/%24animatecss&quot;&gt;CSS&lt;/a&gt;) and it will also flush any remaining animation frames and/or callbacks.</source>
          <target state="translated">此方法将关闭所有待处理的动画（包括&lt;a href=&quot;../../nganimate#javascript-based-animations.html&quot;&gt;Javascript&lt;/a&gt;和&lt;a href=&quot;../../nganimate/service/%24animatecss&quot;&gt;CSS&lt;/a&gt;），还将刷新所有剩余的动画帧和/或回调。</target>
        </trans-unit>
        <trans-unit id="915cfaa2d3ed2fa450c656592c6f02599354a0d6" translate="yes" xml:space="preserve">
          <source>This might also happen because some third-party frameworks place animation duration defaults across many element or className selectors in order to make their code small and reusable.</source>
          <target state="translated">这种情况也可能发生,因为一些第三方框架将动画持续时间默认值放置在许多元素或className选择器中,以使其代码小而可重用。</target>
        </trans-unit>
        <trans-unit id="6ee006904db7800e4b79b052720172e93492d2b3" translate="yes" xml:space="preserve">
          <source>This mock implementation can be used to respond with static or dynamic responses via the &lt;code&gt;expect&lt;/code&gt; and &lt;code&gt;when&lt;/code&gt; apis and their shortcuts (&lt;code&gt;expectGET&lt;/code&gt;, &lt;code&gt;whenPOST&lt;/code&gt;, etc).</source>
          <target state="translated">这种模拟实现可以通过使用与静态或动态响应响应的 &lt;code&gt;expect&lt;/code&gt; 和 &lt;code&gt;when&lt;/code&gt; API和其快捷方式（ &lt;code&gt;expectGET&lt;/code&gt; ， &lt;code&gt;whenPOST&lt;/code&gt; 等）。</target>
        </trans-unit>
        <trans-unit id="fb22f4802e38eb9995c979b6ca1295aabe3cf8e8" translate="yes" xml:space="preserve">
          <source>This mode is implemented by the &lt;a href=&quot;../api/ng/service/%24sce&quot;&gt;&lt;code&gt;$sce&lt;/code&gt;&lt;/a&gt; service and various core directives.</source>
          <target state="translated">此模式由&lt;a href=&quot;../api/ng/service/%24sce&quot;&gt; &lt;code&gt;$sce&lt;/code&gt; &lt;/a&gt;服务和各种核心指令实现。</target>
        </trans-unit>
        <trans-unit id="c233a6582d2d1e6bb77664600a84be278e1f11d2" translate="yes" xml:space="preserve">
          <source>This module allows the usage of any identifier that follows ES6 identifier naming convention to be used as an identifier in an AngularJS expression. ES6 delegates some of the identifier rules definition to Unicode, this module uses ES6 and Unicode 8.0 identifiers convention.</source>
          <target state="translated">该模块允许使用任何遵循ES6标识符命名惯例的标识符作为AngularJS表达式中的标识符。ES6将部分标识符规则的定义委托给Unicode,本模块使用ES6和Unicode 8.0标识符约定。</target>
        </trans-unit>
        <trans-unit id="da9bb8e1f58198b53e9f9b910bc27da80d253883" translate="yes" xml:space="preserve">
          <source>This object has the following properties:</source>
          <target state="translated">该对象具有以下属性:</target>
        </trans-unit>
        <trans-unit id="e7dde314902c57d9644c192713d0db6e938ac456" translate="yes" xml:space="preserve">
          <source>This object is a map where the keys are the name of the slot to fill and the value is an element selector used to match the HTML to the slot. The element selector should be in normalized form (e.g. &lt;code&gt;myElement&lt;/code&gt;) and will match the standard element variants (e.g. &lt;code&gt;my-element&lt;/code&gt;, &lt;code&gt;my:element&lt;/code&gt;, &lt;code&gt;data-my-element&lt;/code&gt;, etc).</source>
          <target state="translated">该对象是一个映射，其中的键是要填充的插槽的名称，而值是用于将HTML与插槽匹配的元素选择器。元素选择器应采用规范化形式（例如 &lt;code&gt;myElement&lt;/code&gt; ），并将与标准元素变体（例如 &lt;code&gt;my-element&lt;/code&gt; ， &lt;code&gt;my:element&lt;/code&gt; ， &lt;code&gt;data-my-element&lt;/code&gt; 等）匹配。</target>
        </trans-unit>
        <trans-unit id="f1709dc043ae963fcb6fd267e6b932727b496895" translate="yes" xml:space="preserve">
          <source>This page explains the AngularJS initialization process and how you can manually initialize AngularJS if necessary.</source>
          <target state="translated">本页解释了AngularJS的初始化过程,以及在必要时如何手动初始化AngularJS。</target>
        </trans-unit>
        <trans-unit id="5492bee79da51e22fa46e5f05f5e53037f44de5d" translate="yes" xml:space="preserve">
          <source>This property is deprecated. Use &lt;a href=&quot;%24httpprovider#xsrfTrustedOrigins.html&quot;&gt;xsrfTrustedOrigins&lt;/a&gt; instead.</source>
          <target state="translated">This property is deprecated. Use &lt;a href=&quot;%24httpprovider#xsrfTrustedOrigins.html&quot;&gt;xsrfTrustedOrigins&lt;/a&gt; instead.</target>
        </trans-unit>
        <trans-unit id="2b833d5b65cdc313f0a542c48b1308d0e041ebe8" translate="yes" xml:space="preserve">
          <source>This property is used only if the &lt;code&gt;compile&lt;/code&gt; property is not defined.</source>
          <target state="translated">仅当未定义 &lt;code&gt;compile&lt;/code&gt; 属性时，才使用此属性。</target>
        </trans-unit>
        <trans-unit id="883346a7fad915ebeff0e77021b15cf3830eda47" translate="yes" xml:space="preserve">
          <source>This property is used to bind scope properties directly to the controller. It can be either &lt;code&gt;true&lt;/code&gt; or an object hash with the same format as the &lt;code&gt;scope&lt;/code&gt; property.</source>
          <target state="translated">此属性用于将范围属性直接绑定到控制器。它可以是 &lt;code&gt;true&lt;/code&gt; ，也可以是具有与 &lt;code&gt;scope&lt;/code&gt; 属性相同格式的对象哈希。</target>
        </trans-unit>
        <trans-unit id="a357c7aacd82c6ccff19e2526aedf02dcd86f146" translate="yes" xml:space="preserve">
          <source>This provider allows controller registration via the &lt;a href=&quot;%24controllerprovider#register.html&quot;&gt;register&lt;/a&gt; method.</source>
          <target state="translated">该提供程序允许通过&lt;a href=&quot;%24controllerprovider#register.html&quot;&gt;register&lt;/a&gt;方法注册控制器。</target>
        </trans-unit>
        <trans-unit id="0617c66c55cb594ee37dad4d27bb3dac77e7f902" translate="yes" xml:space="preserve">
          <source>This section briefly touches on all of the important parts of AngularJS using a simple example. For a more in-depth explanation, see the &lt;a href=&quot;https://code.angularjs.org/1.7.8/docs/guide/tutorial/&quot;&gt;tutorial&lt;/a&gt;.</source>
          <target state="translated">本节使用一个简单的示例简要介绍AngularJS的所有重要部分。有关更深入的说明，请参见&lt;a href=&quot;https://code.angularjs.org/1.7.8/docs/guide/tutorial/&quot;&gt;教程&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5bb3d5509db140228243eca3e2250fca46e665b9" translate="yes" xml:space="preserve">
          <source>This section briefly touches on all of the important parts of AngularJS using a simple example. For a more in-depth explanation, see the &lt;a href=&quot;https://code.angularjs.org/1.8.2/docs/guide/tutorial/&quot;&gt;tutorial&lt;/a&gt;.</source>
          <target state="translated">This section briefly touches on all of the important parts of AngularJS using a simple example. For a more in-depth explanation, see the &lt;a href=&quot;https://code.angularjs.org/1.8.2/docs/guide/tutorial/&quot;&gt;tutorial&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="e465c56fdc1919202e61b4c838abdb2efdbe6b09" translate="yes" xml:space="preserve">
          <source>This section is useful to you if you're already familiar with the ICU MessageFormat syntax.</source>
          <target state="translated">如果你已经熟悉ICU MessageFormat语法,本节对你很有用。</target>
        </trans-unit>
        <trans-unit id="629fe3d641b010dc22c32cf60d9c51461dbc815f" translate="yes" xml:space="preserve">
          <source>This section motivates and explains AngularJS's use of DI. For how to use DI, see above.</source>
          <target state="translated">本节激励并解释AngularJS对DI的使用。关于如何使用DI,请参见上文。</target>
        </trans-unit>
        <trans-unit id="4b368495e290571221704fff68dedde03e3d8a9d" translate="yes" xml:space="preserve">
          <source>This service handles the lifecycle of callbacks to handle JSONP requests. Override this service if you wish to customise where the callbacks are stored and how they vary compared to the requested url.</source>
          <target state="translated">该服务处理回调的生命周期,以处理JSONP请求。如果你想自定义回调的存储位置,以及它们与请求的url相比如何变化,那么就覆盖这个服务。</target>
        </trans-unit>
        <trans-unit id="91d45badcd0e43333ab51b6632a69a56a2a8478d" translate="yes" xml:space="preserve">
          <source>This service is just a simple decorator for &lt;a href=&quot;../../ng/service/%24timeout&quot;&gt;$timeout&lt;/a&gt; service that adds a &quot;flush&quot; and &quot;verifyNoPendingTasks&quot; methods.</source>
          <target state="translated">该服务只是&lt;a href=&quot;../../ng/service/%24timeout&quot;&gt;$ timeout&lt;/a&gt;服务的简单装饰器，它添加了&amp;ldquo; flush&amp;rdquo;和&amp;ldquo; verifyNoPendingTasks&amp;rdquo;方法。</target>
        </trans-unit>
        <trans-unit id="11801c68b71dbf7b43ee58c584c0b6ddc76ef833" translate="yes" xml:space="preserve">
          <source>This service is just a simple decorator for &lt;a href=&quot;../ng/service/%24timeout&quot;&gt;$timeout&lt;/a&gt; service that adds a &quot;flush&quot; and &quot;verifyNoPendingTasks&quot; methods.</source>
          <target state="translated">该服务只是&lt;a href=&quot;../ng/service/%24timeout&quot;&gt;$ timeout&lt;/a&gt;服务的简单装饰器，它添加了&amp;ldquo; flush&amp;rdquo;和&amp;ldquo; verifyNoPendingTasks&amp;rdquo;方法。</target>
        </trans-unit>
        <trans-unit id="1f835173917891572ec34a779591da7e750f83cc" translate="yes" xml:space="preserve">
          <source>This service is just a simple decorator for &lt;a href=&quot;ng/service/%24timeout&quot;&gt;$timeout&lt;/a&gt; service that adds a &quot;flush&quot; and &quot;verifyNoPendingTasks&quot; methods.</source>
          <target state="translated">该服务只是&lt;a href=&quot;ng/service/%24timeout&quot;&gt;$ timeout&lt;/a&gt;服务的简单装饰器，它添加了&amp;ldquo; flush&amp;rdquo;和&amp;ldquo; verifyNoPendingTasks&amp;rdquo;方法。</target>
        </trans-unit>
        <trans-unit id="0ea40af4b0cece7853eaf6005c23cbc42ab9d2f2" translate="yes" xml:space="preserve">
          <source>This should not be used to watch for changes in objects that are (or contain) &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/File&quot;&gt;File&lt;/a&gt; objects due to limitations with &lt;a href=&quot;../function/angular.copy&quot;&gt;&lt;code&gt;angular.copy&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">由于&lt;a href=&quot;../function/angular.copy&quot;&gt; &lt;code&gt;angular.copy&lt;/code&gt; 的&lt;/a&gt;限制，不应将其用于监视&lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/File&quot;&gt;文件&lt;/a&gt;对象（或包含文件对象）中的更改。</target>
        </trans-unit>
        <trans-unit id="8a1af7647b98d0fb330f0d8c1c4942701a28f04d" translate="yes" xml:space="preserve">
          <source>This significantly reduces the overhead. It is far easier to pay the small overhead and have an application that's secure and can be audited to verify that with much more ease than bolting security onto an application later.</source>
          <target state="translated">这大大降低了开销。付出小的开销,拥有一个安全的应用程序,并且可以通过审计来验证,这比以后把安全问题栓在应用程序上要容易得多。</target>
        </trans-unit>
        <trans-unit id="9fef39daed2db411efe5a4c7dfa116cf26686648" translate="yes" xml:space="preserve">
          <source>This simple example shows a formatter that would convert the model value to uppercase:</source>
          <target state="translated">这个简单的例子显示了一个将模型值转换为大写的格式器。</target>
        </trans-unit>
        <trans-unit id="c4a9089b94815bb38543c89a6cef1127501717c7" translate="yes" xml:space="preserve">
          <source>This simple example shows a parser that would convert text input value to lowercase:</source>
          <target state="translated">这个简单的例子展示了一个将文本输入值转换为小写的解析器。</target>
        </trans-unit>
        <trans-unit id="514273f310733c11cdf3627df583ea49721cf88c" translate="yes" xml:space="preserve">
          <source>This site and all of its contents are referring to AngularJS (version 1.x), if you are looking for the latest Angular, please visit &lt;a href=&quot;https://angular.io/&quot;&gt;angular.io&lt;/a&gt;.</source>
          <target state="translated">该站点及其所有内容均引用AngularJS（版本1.x），如果您正在寻找最新的Angular，请访问&lt;a href=&quot;https://angular.io/&quot;&gt;angular.io&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3996593ddc4d041ab4093149112bcf781b10defe" translate="yes" xml:space="preserve">
          <source>This site refers to AngularJS (v1.x). &lt;a href=&quot;https://angular.io/&quot;&gt;Go to the latest Angular&lt;/a&gt;.</source>
          <target state="translated">该站点引用AngularJS（v1.x）。&lt;a href=&quot;https://angular.io/&quot;&gt;转到最新的Angular&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="13256ca7859242e20651198514af51bbfcbee712" translate="yes" xml:space="preserve">
          <source>This syntax extension is provided by way of the &lt;code&gt;ngMessageFormat&lt;/code&gt; module that your application can depend upon (shipped separately as &lt;code&gt;angular-message-format.min.js&lt;/code&gt; and &lt;code&gt;angular-message-format.js&lt;/code&gt;.) A current limitation of the &lt;code&gt;ngMessageFormat&lt;/code&gt; module, is that it does not support redefining the &lt;code&gt;$interpolate&lt;/code&gt; start and end symbols. Only the default &lt;code&gt;{{&lt;/code&gt; and &lt;code&gt;}}&lt;/code&gt; are allowed.</source>
          <target state="translated">此语法扩展是通过您的应用程序可以依赖的 &lt;code&gt;ngMessageFormat&lt;/code&gt; 模块提供的（分别作为 &lt;code&gt;angular-message-format.min.js&lt;/code&gt; 和 &lt;code&gt;angular-message-format.js&lt;/code&gt; 装运。） &lt;code&gt;ngMessageFormat&lt;/code&gt; 模块的当前限制是：它不支持重新定义 &lt;code&gt;$interpolate&lt;/code&gt; 开始和结束符号。仅允许使用默认的 &lt;code&gt;{{&lt;/code&gt; 和 &lt;code&gt;}}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fa80acf811fb7d3bc5d4d2945ffc786c2f86cb56" translate="yes" xml:space="preserve">
          <source>This syntax extension, while based on MessageFormat, has been designed to be backwards compatible with existing AngularJS interpolation expressions. The key rule is simply this: &lt;strong&gt;All interpolations are done inside double curlies.&lt;/strong&gt; The top level comma operator after an expression inside the double curlies causes MessageFormat extensions to be recognized. Such a top level comma is otherwise illegal in an AngularJS expression and is used by MessageFormat to specify the function (such as plural/select) and it's related syntax.</source>
          <target state="translated">该语法扩展虽然基于MessageFormat，但被设计为与现有AngularJS插值表达式向后兼容。关键规则很简单：&lt;strong&gt;所有插值均在双毛轮内完成。&lt;/strong&gt;在双curl内的表达式后的顶级逗号运算符使MessageFormat扩展被识别。否则，此类顶级逗号在AngularJS表达式中是非法的，并由MessageFormat用于指定函数（例如，复数/选择）及其相关语法。</target>
        </trans-unit>
        <trans-unit id="e599113b0edd4e670329932acb818d5adc536965" translate="yes" xml:space="preserve">
          <source>This technique is often used in unit tests to mock out a service's dependencies.</source>
          <target state="translated">在单元测试中经常使用这种技术来模拟服务的依赖关系。</target>
        </trans-unit>
        <trans-unit id="addac971dd419fb36735ec5e40bf3e153ccc3c01" translate="yes" xml:space="preserve">
          <source>This test describes the requirements of a ToDo list, specifically, that it should be able to filter the list of items.</source>
          <target state="translated">这个测试描述了对ToDo列表的要求,具体来说,就是它应该能够过滤列表中的项目。</target>
        </trans-unit>
        <trans-unit id="00229fe7fc0568eb82dd05f9f9c12e34d0b73a38" translate="yes" xml:space="preserve">
          <source>This type extends the &lt;a href=&quot;ngcomponentrouter/type/router&quot;&gt;&lt;code&gt;Router&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此类型扩展了&lt;a href=&quot;ngcomponentrouter/type/router&quot;&gt; &lt;code&gt;Router&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9a55be7ee54799e91a1baaf9ec346a8b069e7054" translate="yes" xml:space="preserve">
          <source>This type extends the &lt;a href=&quot;router&quot;&gt;&lt;code&gt;Router&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此类型扩展了&lt;a href=&quot;router&quot;&gt; &lt;code&gt;Router&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3c90b3267c6b0702ff318db2cb8b8a8a313f9b31" translate="yes" xml:space="preserve">
          <source>This type extends the &lt;a href=&quot;type/router&quot;&gt;&lt;code&gt;Router&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此类型扩展了&lt;a href=&quot;type/router&quot;&gt; &lt;code&gt;Router&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="194bdef428dc42d35d6d30db6c9d019109b9627e" translate="yes" xml:space="preserve">
          <source>This usually happens when the &lt;a href=&quot;../../nganimate&quot;&gt;ngAnimate module&lt;/a&gt; is included, but no actual animations are defined for &lt;a href=&quot;ngshow&quot;&gt;&lt;code&gt;ngShow&lt;/code&gt;&lt;/a&gt; / &lt;a href=&quot;nghide&quot;&gt;&lt;code&gt;ngHide&lt;/code&gt;&lt;/a&gt;. Internet Explorer is affected more often than other browsers.</source>
          <target state="translated">通常在包含&lt;a href=&quot;../../nganimate&quot;&gt;ngAnimate模块&lt;/a&gt;时发生这种情况，但是没有为&lt;a href=&quot;ngshow&quot;&gt; &lt;code&gt;ngShow&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;nghide&quot;&gt; &lt;code&gt;ngHide&lt;/code&gt; &lt;/a&gt;定义实际的动画。与其他浏览器相比，Internet Explorer受到的影响更大。</target>
        </trans-unit>
        <trans-unit id="89941c3846f435420c0a0b5a2605676a55d335a2" translate="yes" xml:space="preserve">
          <source>This will ensure that all services in your application are properly annotated. See the &lt;a href=&quot;di#using-strict-dependency-injection.html&quot;&gt;dependency injection strict mode&lt;/a&gt; docs for more.</source>
          <target state="translated">这将确保正确注释应用程序中的所有服务。有关更多信息，请参见&lt;a href=&quot;di#using-strict-dependency-injection.html&quot;&gt;依赖项注入严格模式&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="f281cdd5d821befaa87c95331b8e4df644d3d012" translate="yes" xml:space="preserve">
          <source>This will not render properly, unless we do some scope magic.</source>
          <target state="translated">这将无法正常渲染,除非我们做一些范围魔法。</target>
        </trans-unit>
        <trans-unit id="7b981c7b156731dee59fa70a3a4d07e3181b03de" translate="yes" xml:space="preserve">
          <source>This will work:</source>
          <target state="translated">这将是工作。</target>
        </trans-unit>
        <trans-unit id="aa02d37789c0eb90c790d94a8e42c3470d3ddc29" translate="yes" xml:space="preserve">
          <source>Those that stray from AngularJS standards (such as modifying AngularJS's core) may have difficulty updating, so keeping to AngularJS standards is not just a functionality issue, it's also critical in order to facilitate rapid security updates.</source>
          <target state="translated">那些游离于AngularJS标准之外的标准(比如修改AngularJS的核心)可能会给更新带来困难,所以保持AngularJS标准不仅仅是一个功能问题,为了方便快速的安全更新也是至关重要的。</target>
        </trans-unit>
        <trans-unit id="18ff4d25dda80968c984aa603ada71e7f8445542" translate="yes" xml:space="preserve">
          <source>Though we have a core group of core contributors at Google, AngularJS is an open source project with hundreds of contributors. We'd love you to be one of them. When you're ready, please read the &lt;a href=&quot;https://code.angularjs.org/1.7.8/docs/misc/contribute&quot;&gt;Guide for contributing to AngularJS&lt;/a&gt;.</source>
          <target state="translated">尽管我们在Google拥有核心的核心贡献者小组，但是AngularJS是一个开放源代码项目，拥有数百个贡献者。我们希望您成为其中一员。准备就绪后，请阅读&lt;a href=&quot;https://code.angularjs.org/1.7.8/docs/misc/contribute&quot;&gt;AngularJS贡献指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c121b639ed0c89a5b45299557fb90f827f49791c" translate="yes" xml:space="preserve">
          <source>Though we have a core group of core contributors at Google, AngularJS is an open source project with hundreds of contributors. We'd love you to be one of them. When you're ready, please read the &lt;a href=&quot;https://code.angularjs.org/1.8.2/docs/misc/contribute&quot;&gt;Guide for contributing to AngularJS&lt;/a&gt;.</source>
          <target state="translated">Though we have a core group of core contributors at Google, AngularJS is an open source project with hundreds of contributors. We'd love you to be one of them. When you're ready, please read the &lt;a href=&quot;https://code.angularjs.org/1.8.2/docs/misc/contribute&quot;&gt;Guide for contributing to AngularJS&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="d2c02671e16ad1b484fd37216c00f1f05c7c934d" translate="yes" xml:space="preserve">
          <source>Timestamp representing the desired time in &lt;em&gt;UTC&lt;/em&gt;</source>
          <target state="translated">时间戳记，以&lt;em&gt;UTC&lt;/em&gt;表示所需时间&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bf36ae8fcb1d23b61ad6567c0e9d250610eb4692" translate="yes" xml:space="preserve">
          <source>Timezone to be used for formatting. It understands UTC/GMT and the continental US time zone abbreviations, but for general use, use a time zone offset, for example, &lt;code&gt;'+0430'&lt;/code&gt; (4 hours, 30 minutes east of the Greenwich meridian) If not specified, the timezone of the browser will be used.</source>
          <target state="translated">用于格式化的时区。它了解UTC / GMT和美国大陆时区的缩写，但对于一般用途，请使用时区偏移量，例如 &lt;code&gt;'+0430'&lt;/code&gt; （格林威治子午线以东4小时30分钟）。如果未指定，则为使用浏览器。</target>
        </trans-unit>
        <trans-unit id="791214dda21a45673e6a00a407416e403372c00e" translate="yes" xml:space="preserve">
          <source>Timezones</source>
          <target state="translated">Timezones</target>
        </trans-unit>
        <trans-unit id="a6f821f5dc3ea799d7cb08f9d99e08572d83b3a9" translate="yes" xml:space="preserve">
          <source>To actually start the animation we need to run &lt;code&gt;animation.start()&lt;/code&gt; which will then return a promise that we can hook into to detect when the animation ends. If we choose not to run the animation then we MUST run &lt;code&gt;animation.end()&lt;/code&gt; to perform a cleanup on the element (since some CSS classes and styles may have been applied to the element during the preparation phase). Note that all other properties such as duration, delay, transitions and keyframes are just properties and that changing them will not reconfigure the parameters of the animation.</source>
          <target state="translated">要真正开始动画，我们需要运行 &lt;code&gt;animation.start()&lt;/code&gt; ，然后将返回一个promise，我们可以将其挂钩以检测动画何时结束。如果选择不运行动画，则必须运行 &lt;code&gt;animation.end()&lt;/code&gt; 对元素进行清理（因为在准备阶段可能已将某些CSS类和样式应用于该元素）。请注意，所有其他属性（例如持续时间，延迟，过渡和关键帧）仅是属性，并且更改它们不会重新配置动画的参数。</target>
        </trans-unit>
        <trans-unit id="e9fc69ae1586e6188ab11de16fef9caf3e9a3443" translate="yes" xml:space="preserve">
          <source>To add or overwrite these defaults, simply add or remove a property from these configuration objects. To add headers for an HTTP method other than POST or PUT, simply add a new object with the lowercased HTTP method name as the key, e.g. &lt;code&gt;$httpProvider.defaults.headers.get = { 'My-Header' : 'value' }&lt;/code&gt;.</source>
          <target state="translated">要添加或覆盖这些默认值，只需在这些配置对象中添加或删除属性。要为POST或PUT以外的HTTP方法添加标头，只需添加一个新对象，并以小写的HTTP方法名称作为键，例如 &lt;code&gt;$httpProvider.defaults.headers.get = { 'My-Header' : 'value' }&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="440d40ccd05fbc44211e69b24f08900b7177a1db" translate="yes" xml:space="preserve">
          <source>To allow styling of form as well as controls, &lt;code&gt;ngModel&lt;/code&gt; adds these CSS classes:</source>
          <target state="translated">为了允许样式以及控件的样式， &lt;code&gt;ngModel&lt;/code&gt; 添加了以下CSS类：</target>
        </trans-unit>
        <trans-unit id="978b24255f9e2043c3815ab1e3ee6525a4048630" translate="yes" xml:space="preserve">
          <source>To allow the minifiers to rename the function parameters and still be able to inject the right services, the function needs to be annotated with the &lt;code&gt;$inject&lt;/code&gt; property. The &lt;code&gt;$inject&lt;/code&gt; property is an array of service names to inject.</source>
          <target state="translated">为了允许Minifier重命名函数参数并仍然能够注入正确的服务，需要使用 &lt;code&gt;$inject&lt;/code&gt; 属性对函数进行注释。该 &lt;code&gt;$inject&lt;/code&gt; 属性是服务名称的数组注入。</target>
        </trans-unit>
        <trans-unit id="227bb446f977c7e7c29690779a58e5dcd3f7bc4a" translate="yes" xml:space="preserve">
          <source>To be secure by default, AngularJS makes sure bindings go through that sanitization, or any similar validation process, unless there's a good reason to trust the given value in this context. That trust is formalized with a function call. This means that as a developer, you can assume all untrusted bindings are safe. Then, to audit your code for binding security issues, you just need to ensure the values you mark as trusted indeed are safe - because they were received from your server, sanitized by your library, etc. You can organize your codebase to help with this - perhaps allowing only the files in a specific directory to do this. Ensuring that the internal API exposed by that code doesn't markup arbitrary values as safe then becomes a more manageable task.</source>
          <target state="translated">为了保证默认情况下的安全,AngularJS会确保绑定经过该消毒,或任何类似的验证过程,除非有一个很好的理由来信任这个上下文中的给定值。这种信任是通过一个函数调用来正式确定的。这意味着,作为开发人员,你可以假设所有不信任的绑定都是安全的。然后,要审计你的代码是否存在绑定安全问题,你只需要确保你标记为信任的值确实是安全的--因为它们是从你的服务器接收的,经过你的库的消毒等等。你可以组织你的代码库来帮助解决这个问题--也许只允许特定目录下的文件来做这件事。确保该代码所暴露的内部API不会将任意值标记为安全值,那么就变成了一个更容易管理的任务。</target>
        </trans-unit>
        <trans-unit id="a3936bf1237487c27fb7d5526e836b9e6d510539" translate="yes" xml:space="preserve">
          <source>To bind the model to a non-string value, you can use one of the following strategies:</source>
          <target state="translated">要将模型绑定到一个非字符串值,您可以使用以下策略之一。</target>
        </trans-unit>
        <trans-unit id="23a4965aa6aa6aa1e840b66494467e36b1d73b3a" translate="yes" xml:space="preserve">
          <source>To cancel a timeout request, call &lt;code&gt;$timeout.cancel(promise)&lt;/code&gt;.</source>
          <target state="translated">要取消超时请求，请调用 &lt;code&gt;$timeout.cancel(promise)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="56d3d8bb492af54889dcc66038949954edcd5e47" translate="yes" xml:space="preserve">
          <source>To configure the &lt;code&gt;$location&lt;/code&gt; service, retrieve the &lt;a href=&quot;../api/ng/provider/%24locationprovider&quot;&gt;$locationProvider&lt;/a&gt; and set the parameters as follows:</source>
          <target state="translated">要配置 &lt;code&gt;$location&lt;/code&gt; 服务，请检索&lt;a href=&quot;../api/ng/provider/%24locationprovider&quot;&gt;$ locationProvider&lt;/a&gt;并按如下所示设置参数：</target>
        </trans-unit>
        <trans-unit id="14e661d075a8d1d3220a38ac7fd86eacc04d62de" translate="yes" xml:space="preserve">
          <source>To cope with this you simply ensure that your 'element' transclude directive is wrapped in an element, such as a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">为了解决这个问题，您只需确保将'element'transclude指令包装在一个元素中，例如 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="31fe0e47804d71db9cfd7fffc117d4ab85d47fab" translate="yes" xml:space="preserve">
          <source>To disable comment and css class directives use the &lt;code&gt;$compileProvider&lt;/code&gt;:</source>
          <target state="translated">要禁用注释和CSS类指令，请使用 &lt;code&gt;$compileProvider&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="5387d2c27cc9dee45bb8cdc85e369fc9f5f17777" translate="yes" xml:space="preserve">
          <source>To disable the mouse click and drag functionality, add &lt;code&gt;ng-swipe-disable-mouse&lt;/code&gt; to the &lt;code&gt;ng-swipe-left&lt;/code&gt; or &lt;code&gt;ng-swipe-right&lt;/code&gt; DOM Element.</source>
          <target state="translated">要禁用鼠标单击和拖动功能，请将 &lt;code&gt;ng-swipe-disable-mouse&lt;/code&gt; 添加到 &lt;code&gt;ng-swipe-left&lt;/code&gt; 或 &lt;code&gt;ng-swipe-right&lt;/code&gt; DOM元素中。</target>
        </trans-unit>
        <trans-unit id="5bc2cad6e2a562908f313cb486e4136ebcb8eee1" translate="yes" xml:space="preserve">
          <source>To do this, we need to use the &lt;code&gt;transclude&lt;/code&gt; option.</source>
          <target state="translated">为此，我们需要使用 &lt;code&gt;transclude&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="035a6a87408acdde8a23ee0cf037d6f472188af6" translate="yes" xml:space="preserve">
          <source>To ease the transition between native inputs and custom controls, ngAria now supports &lt;a href=&quot;../api/ng/directive/ngvalue&quot;&gt;ngValue&lt;/a&gt; and &lt;a href=&quot;../api/ng/directive/ngchecked&quot;&gt;ngChecked&lt;/a&gt;. The original directives were created for native inputs only, so ngAria extends support to custom elements by managing &lt;code&gt;aria-checked&lt;/code&gt; for accessibility.</source>
          <target state="translated">为了简化本机输入和自定义控件之间的转换，ngAria现在支持&lt;a href=&quot;../api/ng/directive/ngvalue&quot;&gt;ngValue&lt;/a&gt;和&lt;a href=&quot;../api/ng/directive/ngchecked&quot;&gt;ngChecked&lt;/a&gt;。原始指令仅用于本机输入，因此ngAria通过管理 &lt;code&gt;aria-checked&lt;/code&gt; 的可访问性，将支持扩展到自定义元素。</target>
        </trans-unit>
        <trans-unit id="5d168eb9b869dbfb344d7855a584554963333f9c" translate="yes" xml:space="preserve">
          <source>To enable strict di mode, you have two options:</source>
          <target state="translated">要启用严格di模式,你有两个选择。</target>
        </trans-unit>
        <trans-unit id="4fb64437b796f4ba9a62ece5fde0e8c967dba837" translate="yes" xml:space="preserve">
          <source>To examine the scope in the debugger:</source>
          <target state="translated">在调试器中检查作用域。</target>
        </trans-unit>
        <trans-unit id="b590774031a2cf4725192dcbb7db9c57480cef1d" translate="yes" xml:space="preserve">
          <source>To explicitly remove a header automatically added via $httpProvider.defaults.headers on a per request basis, Use the &lt;code&gt;headers&lt;/code&gt; property, setting the desired header to &lt;code&gt;undefined&lt;/code&gt;. For example:</source>
          <target state="translated">要显式删除通过$ httpProvider.defaults.headers在每个请求基础上自动添加的 &lt;code&gt;headers&lt;/code&gt; ，请使用headers属性，将所需的标头设置为 &lt;code&gt;undefined&lt;/code&gt; 。例如：</target>
        </trans-unit>
        <trans-unit id="c80d1fb8ce1e4bf1cd40c9acaf0eb4fe7ea79e3f" translate="yes" xml:space="preserve">
          <source>To help with this, the injected parameters can, optionally, be enclosed with underscores. These are ignored by the injector when the reference name is resolved.</source>
          <target state="translated">为了帮助解决这个问题,注入的参数可以选择性地用下划线括起来。当引用名被解析时,这些参数会被注入者忽略。</target>
        </trans-unit>
        <trans-unit id="220d6276002b8cffd3f24e9bec07ba42bc0c1add" translate="yes" xml:space="preserve">
          <source>To illustrate further how Controller components work in AngularJS, let's create a little app with the following components:</source>
          <target state="translated">为了进一步说明Controller组件在AngularJS中是如何工作的,让我们用以下组件创建一个小程序。</target>
        </trans-unit>
        <trans-unit id="4f97b5d532edfe4940fd9b38ad40a3cd6585eed2" translate="yes" xml:space="preserve">
          <source>To illustrate this, consider the &lt;code&gt;ng-bind-html&lt;/code&gt; directive. It renders its value directly as HTML: we call that the &lt;em&gt;context&lt;/em&gt;. When given an untrusted input, AngularJS will attempt to sanitize it before rendering if a sanitizer is available, and throw otherwise. To bypass sanitization and render the input as-is, you will need to mark it as trusted for that context before attempting to bind it.</source>
          <target state="translated">为了说明这一点，请考虑 &lt;code&gt;ng-bind-html&lt;/code&gt; 指令。它直接将其值呈现为HTML：我们称其为&lt;em&gt;context&lt;/em&gt;。如果提供了不受信任的输入，AngularJS将尝试在呈现之前（如果有可用的清理程序）清理它，否则抛出该异常。要绕过清理并按原样呈现输入，您需要在尝试绑定它之前将其标记为对该上下文可信。</target>
        </trans-unit>
        <trans-unit id="902ec43adccfdb69ffa83ad123da01d2e0b94c0b" translate="yes" xml:space="preserve">
          <source>To illustrate this, see the example below. Notice that we've added a &lt;code&gt;link&lt;/code&gt; function in &lt;code&gt;script.js&lt;/code&gt; that redefines &lt;code&gt;name&lt;/code&gt; as &lt;code&gt;Jeff&lt;/code&gt;. What do you think the &lt;code&gt;{{name}}&lt;/code&gt; binding will resolve to now?</source>
          <target state="translated">为了说明这一点，请参见下面的示例。请注意，我们在 &lt;code&gt;script.js&lt;/code&gt; 中添加了一个 &lt;code&gt;link&lt;/code&gt; 函数，该函数将 &lt;code&gt;name&lt;/code&gt; 重定义为 &lt;code&gt;Jeff&lt;/code&gt; 。您认为 &lt;code&gt;{{name}}&lt;/code&gt; 绑定将解决什么？</target>
        </trans-unit>
        <trans-unit id="e178b4a4fddd5e3eedf206140142188444cdeb8c" translate="yes" xml:space="preserve">
          <source>To learn more about enabling animation support, click here to visit the &lt;a href=&quot;../../nganimate&quot;&gt;ngAnimate module page&lt;/a&gt;.</source>
          <target state="translated">要了解有关启用动画支持的更多信息，请单击此处访问&lt;a href=&quot;../../nganimate&quot;&gt;ngAnimate模块页面&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="adee17c33df52d3638d95bce546f5bc1b50438c9" translate="yes" xml:space="preserve">
          <source>To learn more about what's possible be sure to visit the &lt;a href=&quot;nganimate/service/%24animatecss&quot;&gt;$animateCss service&lt;/a&gt;.</source>
          <target state="translated">要了解更多信息，请务必访问&lt;a href=&quot;nganimate/service/%24animatecss&quot;&gt;$ animateCss服务&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="97a771699a9dc113a310959b23249232d9279e3f" translate="yes" xml:space="preserve">
          <source>To manage the responsibility of dependency creation, each AngularJS application has an &lt;a href=&quot;../api/ng/function/angular.injector&quot;&gt;injector&lt;/a&gt;. The injector is a &lt;a href=&quot;http://en.wikipedia.org/wiki/Service_locator_pattern&quot;&gt;service locator&lt;/a&gt; that is responsible for construction and lookup of dependencies.</source>
          <target state="translated">为了管理依赖关系创建的责任，每个AngularJS应用程序都有一个&lt;a href=&quot;../api/ng/function/angular.injector&quot;&gt;注射器&lt;/a&gt;。注入程序是一个&lt;a href=&quot;http://en.wikipedia.org/wiki/Service_locator_pattern&quot;&gt;服务定位器&lt;/a&gt;，负责构造和查找依赖项。</target>
        </trans-unit>
        <trans-unit id="87b7d6ced2affdb289caee17d8f374aa66ff02f9" translate="yes" xml:space="preserve">
          <source>To minimize creation of DOM elements, &lt;code&gt;ngRepeat&lt;/code&gt; uses a function to &quot;keep track&quot; of all items in the collection and their corresponding DOM elements. For example, if an item is added to the collection, &lt;code&gt;ngRepeat&lt;/code&gt; will know that all other items already have DOM elements, and will not re-render them.</source>
          <target state="translated">为了最大程度地减少DOM元素的创建， &lt;code&gt;ngRepeat&lt;/code&gt; 使用一个函数来&amp;ldquo;跟踪&amp;rdquo;集合中的所有项目及其对应的DOM元素。例如，如果将一个项目添加到集合中，则 &lt;code&gt;ngRepeat&lt;/code&gt; 将知道所有其他项目已经具有DOM元素，并且不会重新呈现它们。</target>
        </trans-unit>
        <trans-unit id="dec799d727684b5ec439ffba56606b33413cfdb2" translate="yes" xml:space="preserve">
          <source>To prevent double execution of the handler, use only one of the &lt;a href=&quot;ngsubmit&quot;&gt;ngSubmit&lt;/a&gt; or &lt;a href=&quot;ngclick&quot;&gt;ngClick&lt;/a&gt; directives. This is because of the following form submission rules in the HTML specification:</source>
          <target state="translated">为防止重复执行该处理程序，请仅使用&lt;a href=&quot;ngsubmit&quot;&gt;ngSubmit&lt;/a&gt;或&lt;a href=&quot;ngclick&quot;&gt;ngClick&lt;/a&gt;指令之一。这是由于HTML规范中的以下表单提交规则：</target>
        </trans-unit>
        <trans-unit id="7f0c03c455bcc97cd1a6acf7ad3e2c93c1a12ed0" translate="yes" xml:space="preserve">
          <source>To prevent this, you can apply styles to the &lt;code&gt;ng-[event]-prepare&lt;/code&gt; class, which is added as soon as an animation is initialized, but removed before the actual animation starts (after waiting for a &lt;code&gt;$digest&lt;/code&gt;). This class is only added for &lt;em&gt;structural&lt;/em&gt; animations (&lt;code&gt;enter&lt;/code&gt;, &lt;code&gt;move&lt;/code&gt;, and &lt;code&gt;leave&lt;/code&gt;).</source>
          <target state="translated">为防止这种情况，您可以将样式应用于 &lt;code&gt;ng-[event]-prepare&lt;/code&gt; 类，该类在初始化动画后立即添加，但在实际动画开始之前已删除（在等待 &lt;code&gt;$digest&lt;/code&gt; ）。此类仅用于&lt;em&gt;结构&lt;/em&gt;动画（ &lt;code&gt;enter&lt;/code&gt; ， &lt;code&gt;move&lt;/code&gt; 和 &lt;code&gt;leave&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="fea899b0c5f1ec32df106a9c01c18f45fc405eb5" translate="yes" xml:space="preserve">
          <source>To protect against these, explicitly setup &lt;code&gt;overflow: hidden&lt;/code&gt; css rule for all potential svg tags within the sanitized content:</source>
          <target state="translated">为了防止这些情况，请明确设置 &lt;code&gt;overflow: hidden&lt;/code&gt; 清理内容中所有潜在svg标签的隐藏 CSS规则：</target>
        </trans-unit>
        <trans-unit id="943f7d13999a1f50a97c045b022c8dd2e2f3dcbb" translate="yes" xml:space="preserve">
          <source>To repeat a series of elements instead of just one parent element, ngRepeat (as well as other ng directives) supports extending the range of the repeater by defining explicit start and end points by using &lt;strong&gt;ng-repeat-start&lt;/strong&gt; and &lt;strong&gt;ng-repeat-end&lt;/strong&gt; respectively. The &lt;strong&gt;ng-repeat-start&lt;/strong&gt; directive works the same as &lt;strong&gt;ng-repeat&lt;/strong&gt;, but will repeat all the HTML code (including the tag it's defined on) up to and including the ending HTML tag where &lt;strong&gt;ng-repeat-end&lt;/strong&gt; is placed.</source>
          <target state="translated">重复一系列元素而不是仅仅一个父元素，ngRepeat的（以及其他纳克指令）通过使用定义明确的开始和结束点延伸的中继器的范围的载体&lt;strong&gt;纳克重复启动&lt;/strong&gt;和&lt;strong&gt;NG-重复端&lt;/strong&gt;分别。在&lt;strong&gt;NG-重复启动&lt;/strong&gt;指令的工作方式相同&lt;strong&gt;NG-重复&lt;/strong&gt;，但会重复所有的HTML代码（包括它的定义标签）截至及包括结束HTML标签，其中&lt;strong&gt;NG-重复结束&lt;/strong&gt;放置。</target>
        </trans-unit>
        <trans-unit id="f668b9db355d141127ee33b275331ca28c9dfb88" translate="yes" xml:space="preserve">
          <source>To retrieve the associated scope in console execute: &lt;code&gt;angular.element($0).scope()&lt;/code&gt;</source>
          <target state="translated">要在控制台中检索关联的范围，请执行： &lt;code&gt;angular.element($0).scope()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="de4573d3b8e714d7e13c12a8ebcb5312e186616d" translate="yes" xml:space="preserve">
          <source>To retrieve the template later, simply use it in your component:</source>
          <target state="translated">要在以后检索模板,只需在你的组件中使用它。</target>
        </trans-unit>
        <trans-unit id="6b58c4c9070bb055028259d5cf6d5b517e4abcc6" translate="yes" xml:space="preserve">
          <source>To reveal the location of the calls to &lt;code&gt;$log&lt;/code&gt; in the JavaScript console, you can &quot;blackbox&quot; the AngularJS source in your browser:</source>
          <target state="translated">要显示在JavaScript控制台中调用 &lt;code&gt;$log&lt;/code&gt; 的位置，您可以在浏览器中&amp;ldquo;黑盒&amp;rdquo; AngularJS源：</target>
        </trans-unit>
        <trans-unit id="2541170fa16acdab2fc366c6c63c6f8ff8ecc82c" translate="yes" xml:space="preserve">
          <source>To see a complete demo, see the &lt;a href=&quot;https://code.angularjs.org/1.7.8/docs/guide/tutorial/step_14&quot;&gt;animation step in the phonecat tutorial&lt;/a&gt;.</source>
          <target state="translated">要查看完整的演示，请参阅&lt;a href=&quot;https://code.angularjs.org/1.7.8/docs/guide/tutorial/step_14&quot;&gt;phonecat教程中&lt;/a&gt;的动画步骤。</target>
        </trans-unit>
        <trans-unit id="7d67033ffde197e94525afd34a2c98fae0d38d45" translate="yes" xml:space="preserve">
          <source>To see a complete demo, see the &lt;a href=&quot;https://code.angularjs.org/1.8.2/docs/guide/tutorial/step_14&quot;&gt;animation step in the phonecat tutorial&lt;/a&gt;.</source>
          <target state="translated">To see a complete demo, see the &lt;a href=&quot;https://code.angularjs.org/1.8.2/docs/guide/tutorial/step_14&quot;&gt;animation step in the phonecat tutorial&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="b8d8130d29419030e1a83b2c86e3ff758ba4c5db" translate="yes" xml:space="preserve">
          <source>To see the functional implementation check out &lt;code&gt;src/ngAnimate/animate.js&lt;/code&gt;.</source>
          <target state="translated">要查看功能实现，请查看 &lt;code&gt;src/ngAnimate/animate.js&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="48944de5e140f1f4917a4abe8d0e9716456f969d" translate="yes" xml:space="preserve">
          <source>To setup the application to run with this http backend, you have to create a module that depends on the &lt;code&gt;ngMockE2E&lt;/code&gt; and your application modules and defines the fake backend:</source>
          <target state="translated">要将应用程序设置为与此http后端一起运行，您必须创建一个模块，该模块依赖于 &lt;code&gt;ngMockE2E&lt;/code&gt; 和您的应用程序模块并定义伪造的后端：</target>
        </trans-unit>
        <trans-unit id="22caed9641a69d6681b70e0e73387ff932f2cc11" translate="yes" xml:space="preserve">
          <source>To solve the issue of lack of isolation, the directive declares a new &lt;code&gt;isolated&lt;/code&gt; scope. An isolated scope does not prototypically inherit from the parent scope, and therefore we don't have to worry about accidentally clobbering any properties.</source>
          <target state="translated">为了解决缺少隔离的问题，该指令声明了一个新的 &lt;code&gt;isolated&lt;/code&gt; 范围。隔离的作用域通常不会从父作用域继承，因此我们不必担心会意外破坏任何属性。</target>
        </trans-unit>
        <trans-unit id="837139ebaec8a9499b512e4cd4d6e386dac34296" translate="yes" xml:space="preserve">
          <source>To systematically block XSS security bugs, AngularJS treats all values as untrusted by default in HTML or sensitive URL bindings. When binding untrusted values, AngularJS will automatically run security checks on them (sanitizations, trusted URL resource, depending on context), or throw when it cannot guarantee the security of the result. That behavior depends strongly on contexts: HTML can be sanitized, but template URLs cannot, for instance.</source>
          <target state="translated">为了系统性地阻断XSS安全漏洞,AngularJS在HTML或敏感URL绑定中,默认将所有值都视为不可信。当绑定不受信任的值时,AngularJS会自动对其进行安全检查(根据上下文,消毒,可信任的URL资源),或者在无法保证结果的安全性时抛出。这种行为很大程度上取决于上下文。例如,HTML可以被消毒,但模板URL不能。</target>
        </trans-unit>
        <trans-unit id="3a25c283d366fb9b4b8a14a99d214847f2dc0c90" translate="yes" xml:space="preserve">
          <source>To systematically block XSS security bugs, AngularJS treats all values as untrusted by default in HTML or sensitive URL bindings. When binding untrusted values, AngularJS will automatically run security checks on them (sanitizations, whitelists, depending on context), or throw when it cannot guarantee the security of the result. That behavior depends strongly on contexts: HTML can be sanitized, but template URLs cannot, for instance.</source>
          <target state="translated">为了系统性地阻断XSS安全漏洞,AngularJS在HTML或敏感的URL绑定中,默认将所有的值都视为不可信任。当绑定不受信任的值时,AngularJS会自动对其进行安全检查(根据上下文进行消毒、白名单),或者在无法保证结果安全时进行抛出。这种行为在很大程度上取决于上下文。例如,HTML可以被消毒,但模板URL不能。</target>
        </trans-unit>
        <trans-unit id="06ebef4f171a37657a117bc224081111b0d7f222" translate="yes" xml:space="preserve">
          <source>To take advantage of this, your server needs to set a token in a JavaScript readable session cookie called &lt;code&gt;XSRF-TOKEN&lt;/code&gt; on the first HTTP GET request. On subsequent XHR requests the server can verify that the cookie matches the &lt;code&gt;X-XSRF-TOKEN&lt;/code&gt; HTTP header, and therefore be sure that only JavaScript running on your domain could have sent the request. The token must be unique for each user and must be verifiable by the server (to prevent the JavaScript from making up its own tokens). We recommend that the token is a digest of your site's authentication cookie with a &lt;a href=&quot;https://en.wikipedia.org/wiki/Salt_(cryptography)&quot;&gt;salt&lt;/a&gt; for added security.</source>
          <target state="translated">为了利用这一点，您的服务器需要在第一个HTTP GET请求的名为 &lt;code&gt;XSRF-TOKEN&lt;/code&gt; 的JavaScript可读会话cookie中设置令牌。在随后的XHR请求上，服务器可以验证cookie是否与 &lt;code&gt;X-XSRF-TOKEN&lt;/code&gt; HTTP标头匹配，因此，请确保只有在您的域上运行的JavaScript才可以发送请求。令牌对于每个用户必须是唯一的，并且必须可由服务器验证（以防止JavaScript构成自己的令牌）。我们建议令牌是您网站的身份验证Cookie的摘要，并添加&lt;a href=&quot;https://en.wikipedia.org/wiki/Salt_(cryptography)&quot;&gt;盐&lt;/a&gt;以增强安全性。</target>
        </trans-unit>
        <trans-unit id="a0203afddf9d65db821d61605534ec6d67099780" translate="yes" xml:space="preserve">
          <source>To turn the tinfoil shielding on in our app, we need to create a config function via the module API and have the UnicornLauncherProvider injected into it:</source>
          <target state="translated">为了在我们的应用中开启锡纸屏蔽,我们需要通过模块API创建一个config函数,并让UnicornLauncherProvider注入其中。</target>
        </trans-unit>
        <trans-unit id="553205f92ef2e18fbc6290adc32954aaf6a56cd0" translate="yes" xml:space="preserve">
          <source>To understand the extension, take a look at the ICU MessageFormat syntax as specified by the ICU documentation. Anywhere in that MessageFormat that you have regular message text and you want to substitute an expression, just put it in double curlies instead of single curlies that MessageFormat dictates. This has a huge advantage. &lt;strong&gt;You are no longer limited to simple identifiers for substitutions&lt;/strong&gt;. Because you are using double curlies, you can stick in any arbitrary interpolation syntax there, including nesting more MessageFormat expressions!</source>
          <target state="translated">要了解扩展名，请查看ICU文档指定的ICU MessageFormat语法。在该MessageFormat中您具有常规消息文本并且想要替换表达式的任何位置，只需将其放入Double curl中，而不是MessageFormat规定的单个curl中即可。这具有巨大的优势。&lt;strong&gt;您不再局限于替换的简单标识符&lt;/strong&gt;。因为您使用的是双curly，所以您可以在其中使用任意插值语法，包括嵌套更多MessageFormat表达式！</target>
        </trans-unit>
        <trans-unit id="668388e5a3f0bc129762bfbfd5aa23b7c1098592" translate="yes" xml:space="preserve">
          <source>To understand, let's look at a real-world example with &lt;code&gt;ngRepeat&lt;/code&gt;:</source>
          <target state="translated">为了理解，让我们来看一个使用 &lt;code&gt;ngRepeat&lt;/code&gt; 的真实示例：</target>
        </trans-unit>
        <trans-unit id="3d7ed49b07662b8833b62e5f33bb9164b025e055" translate="yes" xml:space="preserve">
          <source>To use &lt;code&gt;jQuery&lt;/code&gt;, simply ensure it is loaded before the &lt;code&gt;angular.js&lt;/code&gt; file. You can also use the &lt;a href=&quot;../directive/ngjq&quot;&gt;&lt;code&gt;ngJq&lt;/code&gt;&lt;/a&gt; directive to specify that jqlite should be used over jQuery, or to use a specific version of jQuery if multiple versions exist on the page.</source>
          <target state="translated">要使用 &lt;code&gt;jQuery&lt;/code&gt; ，只需确保已在 &lt;code&gt;angular.js&lt;/code&gt; 文件之前加载了它。您还可以使用&lt;a href=&quot;../directive/ngjq&quot;&gt; &lt;code&gt;ngJq&lt;/code&gt; &lt;/a&gt;指令来指定应在jQuery上使用jqlite，或者如果页面上存在多个版本，则使用特定版本的jQuery。</target>
        </trans-unit>
        <trans-unit id="0b532a90142adf829020e98b53c46a1fe9b0e63b" translate="yes" xml:space="preserve">
          <source>To use DI, there needs to be a place where all the things that should work together are registered. In AngularJS, this is the purpose of the &lt;a href=&quot;module&quot;&gt;modules&lt;/a&gt;. When AngularJS starts, it will use the configuration of the module with the name defined by the &lt;code&gt;ng-app&lt;/code&gt; directive, including the configuration of all modules that this module depends on.</source>
          <target state="translated">要使用DI，必须在所有应该一起工作的地方进行注册。在AngularJS中，这就是&lt;a href=&quot;module&quot;&gt;模块&lt;/a&gt;的目的。AngularJS启动时，它将使用 &lt;code&gt;ng-app&lt;/code&gt; 指令定义的名称使用模块的配置，包括该模块所依赖的所有模块的配置。</target>
        </trans-unit>
        <trans-unit id="61b10e4c62d5b605a789c76144449e0198436d85" translate="yes" xml:space="preserve">
          <source>To use an AngularJS service, you add it as a dependency for the component (controller, service, filter or directive) that depends on the service. AngularJS's &lt;a href=&quot;di&quot;&gt;dependency injection&lt;/a&gt; subsystem takes care of the rest.</source>
          <target state="translated">要使用AngularJS服务，请将其添加为依赖于该服务的组件（控制器，服务，过滤器或指令）的依赖项。AngularJS的&lt;a href=&quot;di&quot;&gt;依赖注入&lt;/a&gt;子系统负责其余的工作。</target>
        </trans-unit>
        <trans-unit id="eb5a31df8b9aafc070a499ecf9c86a92d155038d" translate="yes" xml:space="preserve">
          <source>To use it for serializing &lt;code&gt;$http&lt;/code&gt; request parameters, set it as the &lt;code&gt;paramSerializer&lt;/code&gt; property:</source>
          <target state="translated">要将其用于序列化 &lt;code&gt;$http&lt;/code&gt; 请求参数，请将其设置为 &lt;code&gt;paramSerializer&lt;/code&gt; 属性：</target>
        </trans-unit>
        <trans-unit id="34fe5ca24f7655ef4c0df8a8ce1da864c5daffcc" translate="yes" xml:space="preserve">
          <source>To wrap it up, let's summarize the most important points:</source>
          <target state="translated">总结一下,我们总结一下最重要的几点。</target>
        </trans-unit>
        <trans-unit id="67e87905406bc002d915c4e863d71aecb21a48f5" translate="yes" xml:space="preserve">
          <source>Toaster Notifications</source>
          <target state="translated">多士炉通知</target>
        </trans-unit>
        <trans-unit id="89699e63b193e1ad3c1e57e75c1c6bbec6885d66" translate="yes" xml:space="preserve">
          <source>Token for the literal value. The literal name value must be a valid literal name.</source>
          <target state="translated">字符值的标记,字符值必须是有效的字符名。字面名称的值必须是有效的字面名称。</target>
        </trans-unit>
        <trans-unit id="4fa8cc860c52b268dc6a3adcde7305e9415db5bb" translate="yes" xml:space="preserve">
          <source>Tools</source>
          <target state="translated">Tools</target>
        </trans-unit>
        <trans-unit id="43fad2672c530239402dc3cd0dc6902dc62473f7" translate="yes" xml:space="preserve">
          <source>Tools like &lt;a href=&quot;https://github.com/angular/protractor&quot;&gt;Protractor&lt;/a&gt; and &lt;a href=&quot;https://github.com/angular/angularjs-batarang&quot;&gt;Batarang&lt;/a&gt; need this information to run, but you can disable this in production for a significant performance boost with:</source>
          <target state="translated">诸如&lt;a href=&quot;https://github.com/angular/protractor&quot;&gt;Protractor&lt;/a&gt;和&lt;a href=&quot;https://github.com/angular/angularjs-batarang&quot;&gt;Batarang之&lt;/a&gt;类的工具都需要运行此信息，但是您可以在生产中禁用此信息，以通过以下方法显着提高性能：</target>
        </trans-unit>
        <trans-unit id="c1530f9880b2af5eaf175a15ace085e93796c97a" translate="yes" xml:space="preserve">
          <source>Tools like &lt;a href=&quot;https://github.com/olov/ng-annotate&quot;&gt;ng-annotate&lt;/a&gt; let you use implicit dependency annotations in your app and automatically add inline array annotations prior to minifying. If you decide to take this approach, you probably want to use &lt;code&gt;ng-strict-di&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/olov/ng-annotate&quot;&gt;ng-annotate之&lt;/a&gt;类的工具可让您在应用程序中使用隐式依赖项注释，并在最小化之前自动添加内联数组注释。如果您决定采用这种方法，则可能要使用 &lt;code&gt;ng-strict-di&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aafa2966091cfe18b0886a79db159933dbbadccd" translate="yes" xml:space="preserve">
          <source>Total number of child scopes.</source>
          <target state="translated">儿童范围总数:</target>
        </trans-unit>
        <trans-unit id="a47abbef75ed2b9d1d65dbb4c1ee8007c1065795" translate="yes" xml:space="preserve">
          <source>Total number of watchers.</source>
          <target state="translated">观察者总人数。</target>
        </trans-unit>
        <trans-unit id="4d568499903ebd2d220b4d1aebe5751fe7c8e35c" translate="yes" xml:space="preserve">
          <source>Tracking and Duplicates</source>
          <target state="translated">追踪和复制</target>
        </trans-unit>
        <trans-unit id="66e03a0ac4dbd759832dd1962270988fb63c7705" translate="yes" xml:space="preserve">
          <source>Transclude fallback content</source>
          <target state="translated">包括后备内容</target>
        </trans-unit>
        <trans-unit id="2ff8fb7265f6145db1964ce88bbfd53d7161548a" translate="yes" xml:space="preserve">
          <source>Transcluded content exists on a scope that inherits from outside a directive but exists as a child of the directive's containing scope. If the containing scope is suspended the transcluded scope will also be suspended, even if the scope from which the transcluded scope inherits is not suspended.</source>
          <target state="translated">Transcluded 内容存在于从指令外部继承的作用域上,但它是作为指令的包含作用域的子代而存在。如果包含的作用域被暂停,则转入的作用域也将被暂停,即使转入的作用域所继承的作用域没有被暂停。</target>
        </trans-unit>
        <trans-unit id="795ce1bfcced4d4049cae5ddaeacbcb0c25e5cff" translate="yes" xml:space="preserve">
          <source>Transclusion</source>
          <target state="translated">Transclusion</target>
        </trans-unit>
        <trans-unit id="a5ed75b850fe44412f536f842d6bad363b3d1dc0" translate="yes" xml:space="preserve">
          <source>Transclusion Functions</source>
          <target state="translated">Transclusion功能</target>
        </trans-unit>
        <trans-unit id="989bb50d78d8c039c498ff1aa5c4035592d45823" translate="yes" xml:space="preserve">
          <source>Transclusion Scopes</source>
          <target state="translated">Transclusion Scopes</target>
        </trans-unit>
        <trans-unit id="bd9f20a87bc27f598593beab138842764756b017" translate="yes" xml:space="preserve">
          <source>Transclusion is the process of extracting a collection of DOM elements from one part of the DOM and copying them to another part of the DOM, while maintaining their connection to the original AngularJS scope from where they were taken.</source>
          <target state="translated">Transclusion是将DOM元素集合从DOM的一个部分提取出来,然后复制到DOM的另一个部分,同时保持它们与原始AngularJS作用域的联系。</target>
        </trans-unit>
        <trans-unit id="34a69ce955b679dd8ef55bd68ef5d2fb2de59126" translate="yes" xml:space="preserve">
          <source>Transclusion is used (often with &lt;a href=&quot;../directive/ngtransclude&quot;&gt;&lt;code&gt;ngTransclude&lt;/code&gt;&lt;/a&gt;) to insert the original contents of a directive's element into a specified place in the template of the directive. The benefit of transclusion, over simply moving the DOM elements manually, is that the transcluded content has access to the properties on the scope from which it was taken, even if the directive has isolated scope. See the &lt;a href=&quot;../../../guide/directive#creating-a-directive-that-wraps-other-elements.html&quot;&gt;Directives Guide&lt;/a&gt;.</source>
          <target state="translated">使用包含（通常与&lt;a href=&quot;../directive/ngtransclude&quot;&gt; &lt;code&gt;ngTransclude&lt;/code&gt; 结合使用&lt;/a&gt;）将指令元素的原始内容插入到指令模板中的指定位置。相对于简单地手动移动DOM元素而言，包含的好处在于，即使指令具有隔离的范围，被包含的内容也可以访问其来源范围内的属性。请参阅《&lt;a href=&quot;../../../guide/directive#creating-a-directive-that-wraps-other-elements.html&quot;&gt;指令指南》&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5f5aa3a8fc4b42447f88fc712a14afe2cdc1f412" translate="yes" xml:space="preserve">
          <source>Transforming Requests and Responses</source>
          <target state="translated">转变请求和响应</target>
        </trans-unit>
        <trans-unit id="e66820e4851b71dffa2d6714b446c9480ae287d1" translate="yes" xml:space="preserve">
          <source>Translated strings/datetime formats can vary greatly in length. For example, &lt;code&gt;June 3, 1977&lt;/code&gt; will be translated to Spanish as &lt;code&gt;3 de junio de 1977&lt;/code&gt;.</source>
          <target state="translated">转换后的字符串/日期时间格式的长度可以相差很大。例如， &lt;code&gt;June 3, 1977&lt;/code&gt; 将被翻译成西班牙语1977年5月3 &lt;code&gt;3 de junio de 1977&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5ea519c83af9abea32e76f378b69d1f735efd77a" translate="yes" xml:space="preserve">
          <source>Translation length</source>
          <target state="translated">翻译长度</target>
        </trans-unit>
        <trans-unit id="529ba88fd78ba49c6c2f6f2560bd2ca3b71c2359" translate="yes" xml:space="preserve">
          <source>Triggering and debouncing model updates</source>
          <target state="translated">触发和解除模型更新</target>
        </trans-unit>
        <trans-unit id="b30aa7b64c97b21bb201e26ce39656a62ae3ba6f" translate="yes" xml:space="preserve">
          <source>Triggers a removeClass animation surrounding the removal of the provided CSS class(es). Upon execution, the removeClass operation will only be handled after the next digest and it will not trigger an animation if element does not contain the CSS class or if the class is added at a later step. Note that class-based animations are treated differently compared to structural animations (like enter, move and leave) since the CSS classes may be added/removed at different points depending if CSS or JavaScript animations are used.</source>
          <target state="translated">在删除所提供的CSS类时触发removeClass动画。在执行时,只有在下一个摘要之后才会处理removeClass操作,如果元素中不包含CSS类,或者CSS类是在以后添加的,则不会触发动画。请注意,与结构性动画(如进入、移动和离开)相比,基于类的动画被区别对待,因为CSS类可能在不同的点添加/删除,这取决于是否使用了CSS或JavaScript动画。</target>
        </trans-unit>
        <trans-unit id="a8c60d34c5c475354e584429d0db24f6b56f4c26" translate="yes" xml:space="preserve">
          <source>Triggers an addClass animation surrounding the addition of the provided CSS class(es). Upon execution, the addClass operation will only be handled after the next digest and it will not trigger an animation if element already contains the CSS class or if the class is removed at a later step. Note that class-based animations are treated differently compared to structural animations (like enter, move and leave) since the CSS classes may be added/removed at different points depending if CSS or JavaScript animations are used.</source>
          <target state="translated">在添加CSS类时触发addClass动画。在执行时,addClass操作只会在下一个摘要之后被处理,如果元素已经包含CSS类,或者在以后的步骤中删除了CSS类,它将不会触发动画。请注意,与结构性动画(如进入、移动和离开)相比,基于类的动画被区别对待,因为CSS类可能在不同的点添加/删除,这取决于是否使用了CSS或JavaScript动画。</target>
        </trans-unit>
        <trans-unit id="a1ea2af226764114c06246658ad6eb3995bac408" translate="yes" xml:space="preserve">
          <source>Triggers an animation and then removes the element from the DOM. When the function is called a promise is returned that will be resolved during the next digest once the animation has completed.</source>
          <target state="translated">触发一个动画,然后从DOM中移除元素。当函数被调用时,将返回一个承诺,该承诺将在动画完成后的下一个摘要中被解析。</target>
        </trans-unit>
        <trans-unit id="d33a09cfae6955e8ea96021c02a14a6f2135e6d2" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;value&lt;/code&gt; is &quot;empty&quot;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是&amp;ldquo;空&amp;rdquo;，则为true 。</target>
        </trans-unit>
        <trans-unit id="7e9f928080be6817472e3edba6cd3728c6b44b07" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;value&lt;/code&gt; is a &lt;code&gt;Date&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是 &lt;code&gt;Date&lt;/code&gt; ,则为True 。</target>
        </trans-unit>
        <trans-unit id="9d4620ea3af47d4b59be6c1ad6d376625a3bc5a3" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;value&lt;/code&gt; is a &lt;code&gt;Function&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是 &lt;code&gt;Function&lt;/code&gt; ,则为True 。</target>
        </trans-unit>
        <trans-unit id="f2dc22bb4abc37c763c32e208299d55940817939" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;value&lt;/code&gt; is a &lt;code&gt;Number&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是 &lt;code&gt;Number&lt;/code&gt; ,则为True 。</target>
        </trans-unit>
        <trans-unit id="629f2e041c0522e13feab339a108446527250afa" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;value&lt;/code&gt; is a &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是 &lt;code&gt;String&lt;/code&gt; ,则为True 。</target>
        </trans-unit>
        <trans-unit id="c7206f8d3d0972b3265fbd63b451b2d141ee6fe8" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;value&lt;/code&gt; is a DOM element (or wrapped jQuery element).</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是DOM元素（或包装的jQuery元素），则为true 。</target>
        </trans-unit>
        <trans-unit id="e55cf1550d8a7a76c67c0e00faabad1dcabda075" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;value&lt;/code&gt; is an &lt;code&gt;Array&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是 &lt;code&gt;Array&lt;/code&gt; ,则为True 。</target>
        </trans-unit>
        <trans-unit id="b7156770c7f10d6373aa8baaafb2baaeb8df6fff" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;value&lt;/code&gt; is an &lt;code&gt;Object&lt;/code&gt; but not &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是一个 &lt;code&gt;Object&lt;/code&gt; ,则为true，但不为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="61bd97fd0cb8d2d1c177255faefe3a90f7d26d11" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;value&lt;/code&gt; is defined.</source>
          <target state="translated">如果定义了 &lt;code&gt;value&lt;/code&gt; 则为True 。</target>
        </trans-unit>
        <trans-unit id="f4ccefcaf72f594cb16e5d8ae91db2c94271cc38" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;value&lt;/code&gt; is undefined.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 未定义，则为真。</target>
        </trans-unit>
        <trans-unit id="0aa8d4b081c0f21cabda208483e50d393282d028" translate="yes" xml:space="preserve">
          <source>True if SCE is enabled, false otherwise.</source>
          <target state="translated">如果启用SCE,则为真,否则为假。</target>
        </trans-unit>
        <trans-unit id="9974e802cce85a25ca164e8503f6d27e58b29226" translate="yes" xml:space="preserve">
          <source>True if SCE is enabled, false otherwise. If you want to set the value, you have to do it at module config time on &lt;a href=&quot;../provider/%24sceprovider&quot;&gt;$sceProvider&lt;/a&gt;.</source>
          <target state="translated">如果启用了SCE，则为true，否则为false。如果要设置值，则必须在模块配置时在&lt;a href=&quot;../provider/%24sceprovider&quot;&gt;$ sceProvider&lt;/a&gt;上进行设置。</target>
        </trans-unit>
        <trans-unit id="7b26669371aa537bd9fb78e54420fba225d69357" translate="yes" xml:space="preserve">
          <source>True if all of the containing forms and controls are valid.</source>
          <target state="translated">如果所有包含的表单和控件都有效,则为真。</target>
        </trans-unit>
        <trans-unit id="43aa5083507a3dfc1a3cb7fdf232cd1f4bf4e91f" translate="yes" xml:space="preserve">
          <source>True if arguments are equal.</source>
          <target state="translated">如果参数相同,则为真。</target>
        </trans-unit>
        <trans-unit id="9d333018eec7b900f39b653771161777b87197ae" translate="yes" xml:space="preserve">
          <source>True if at least one containing control or form is invalid.</source>
          <target state="translated">如果至少一个包含的控件或表单无效,则为真。</target>
        </trans-unit>
        <trans-unit id="181d1025fe366a64c937b96da6ec883bbf6e7ba0" translate="yes" xml:space="preserve">
          <source>True if at least one error on the control.</source>
          <target state="translated">如果控制上至少有一个错误,则为真。</target>
        </trans-unit>
        <trans-unit id="56ff20210bccab95fcbf58367144ac067af68148" translate="yes" xml:space="preserve">
          <source>True if control has lost focus.</source>
          <target state="translated">如果控制失去焦点,则为真。</target>
        </trans-unit>
        <trans-unit id="c7fbe9ee2795fbddf37ec8d8c2d62f113e612f3b" translate="yes" xml:space="preserve">
          <source>True if control has not lost focus yet.</source>
          <target state="translated">如果控制还没有失去焦点,则为真。</target>
        </trans-unit>
        <trans-unit id="3fa62205eae963b6a217b7f9c96dcf716528f35e" translate="yes" xml:space="preserve">
          <source>True if there is no error.</source>
          <target state="translated">如果没有错误,则为真。</target>
        </trans-unit>
        <trans-unit id="25ffcfd59486b9a5399542b4690b410851ea2474" translate="yes" xml:space="preserve">
          <source>True if user has already interacted with the control.</source>
          <target state="translated">如果用户已经与控件进行了交互,则为真。</target>
        </trans-unit>
        <trans-unit id="dbcbfbb295b5a8ea5518852d000e90ababb1c7f2" translate="yes" xml:space="preserve">
          <source>True if user has already interacted with the form.</source>
          <target state="translated">如果用户已经与表单进行了交互,则为真。</target>
        </trans-unit>
        <trans-unit id="29b344f09475639539f4e83c2d015aaaed0bbd1d" translate="yes" xml:space="preserve">
          <source>True if user has not interacted with the control yet.</source>
          <target state="translated">如果用户还没有与控件交互,则为真。</target>
        </trans-unit>
        <trans-unit id="635c3755d9bde31ca73c1d749bc707a37d18b709" translate="yes" xml:space="preserve">
          <source>True if user has not interacted with the form yet.</source>
          <target state="translated">如果用户还没有与表单交互,则为真。</target>
        </trans-unit>
        <trans-unit id="65825ee641a9445d6459e2ab76bdc68b70985738" translate="yes" xml:space="preserve">
          <source>True if user has submitted the form even if its invalid.</source>
          <target state="translated">如果用户已经提交了表单,即使表单无效,也为真。</target>
        </trans-unit>
        <trans-unit id="b88445bdd7bea1365372168f7dbf74b80d853d03" translate="yes" xml:space="preserve">
          <source>Try it here: enter text in text box and watch the greeting change.</source>
          <target state="translated">在这里尝试一下:在文本框中输入文字,然后看着问候语的变化。</target>
        </trans-unit>
        <trans-unit id="df5a54a82b0bebef0de0f478ec3ab5b4c9f5c3ea" translate="yes" xml:space="preserve">
          <source>Try out the Live Preview above, and then let's walk through the example and describe what's going on.</source>
          <target state="translated">试试上面的实时预览,然后我们通过这个例子来描述一下是怎么回事。</target>
        </trans-unit>
        <trans-unit id="2701a94c0eb55cbd958a87dff3e959673ff1bf53" translate="yes" xml:space="preserve">
          <source>Tutorial</source>
          <target state="translated">Tutorial</target>
        </trans-unit>
        <trans-unit id="5392c950bdde4be7e5f5b8fdc6a1ca5f21e905cf" translate="yes" xml:space="preserve">
          <source>Twitter</source>
          <target state="translated">Twitter</target>
        </trans-unit>
        <trans-unit id="96e344023c95f59d40b4739ed0a85a635eee1b78" translate="yes" xml:space="preserve">
          <source>Two different declaration styles are included below:</source>
          <target state="translated">下面包括两种不同的声明风格。</target>
        </trans-unit>
        <trans-unit id="ecb76bbc89ca1321805d931b227686253a851eed" translate="yes" xml:space="preserve">
          <source>Two objects or values are considered equivalent if at least one of the following is true:</source>
          <target state="translated">如果以下至少一项为真,则认为两个对象或值是等价的:</target>
        </trans-unit>
        <trans-unit id="85d3dd1c7508b8b456f004ed6161495afea6f854" translate="yes" xml:space="preserve">
          <source>Two-way binding to $location</source>
          <target state="translated">双向绑定到$location</target>
        </trans-unit>
        <trans-unit id="3deb7456519697ecf4eefc455516c969a3681bae" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">Type</target>
        </trans-unit>
        <trans-unit id="e80662327a53bb36ba8ecc569bceb07d8d355e87" translate="yes" xml:space="preserve">
          <source>Type components in ng</source>
          <target state="translated">类型组件</target>
        </trans-unit>
        <trans-unit id="a435bd7da8a147120f1a4b79e547e5c008143436" translate="yes" xml:space="preserve">
          <source>Type components in ngComponentRouter</source>
          <target state="translated">ngComponentRouter中的组件类型。</target>
        </trans-unit>
        <trans-unit id="50a5d371f802a731c130768b7356728d742c17f8" translate="yes" xml:space="preserve">
          <source>Type components in ngMock</source>
          <target state="translated">ngMock中的组件类型</target>
        </trans-unit>
        <trans-unit id="ee3fb11d05c90c37311491cf33008925b13b487f" translate="yes" xml:space="preserve">
          <source>Type:</source>
          <target state="translated">Type:</target>
        </trans-unit>
        <trans-unit id="a37965c6d74cd91c105a5af7d17ac48c2ae2ac45" translate="yes" xml:space="preserve">
          <source>Typical usage</source>
          <target state="translated">典型用途</target>
        </trans-unit>
        <trans-unit id="c8d61bd71fa3d7cafbb7128d3d9893fb96df94a4" translate="yes" xml:space="preserve">
          <source>Typically beforeAll is used to make many assertions about a single operation. This can cut down test run-time as the test setup doesn't need to be re-run, and enabling focussed tests each with a single assertion.</source>
          <target state="translated">通常beforeAll用于对一个操作进行许多断言。这可以减少测试运行时间,因为测试设置不需要重新运行,并使每一个测试都能以单一的断言为中心。</target>
        </trans-unit>
        <trans-unit id="e6f0ae9524ce6acd2d2f63e97dbf18fe3aca600b" translate="yes" xml:space="preserve">
          <source>Typically, when you create an application you need to set up the initial state for the AngularJS &lt;code&gt;$scope&lt;/code&gt;. You set up the initial state of a scope by attaching properties to the &lt;code&gt;$scope&lt;/code&gt; object. The properties contain the &lt;strong&gt;view model&lt;/strong&gt; (the model that will be presented by the view). All the &lt;code&gt;$scope&lt;/code&gt; properties will be available to the &lt;a href=&quot;templates&quot;&gt;template&lt;/a&gt; at the point in the DOM where the Controller is registered.</source>
          <target state="translated">通常，在创建应用程序时，需要为AngularJS &lt;code&gt;$scope&lt;/code&gt; 设置初始状态。您可以通过将属性附加到 &lt;code&gt;$scope&lt;/code&gt; 对象来设置作用域的初始状态。这些属性包含&lt;strong&gt;视图模型&lt;/strong&gt;（&lt;strong&gt;视图&lt;/strong&gt;将显示的模型）。在&lt;a href=&quot;templates&quot;&gt;模板&lt;/a&gt;中注册Controller的点，所有 &lt;code&gt;$scope&lt;/code&gt; 属性都可用于模板。</target>
        </trans-unit>
        <trans-unit id="82ca3e622f497504b13ae95ba5174ca088e4d1be" translate="yes" xml:space="preserve">
          <source>Typically, you don't use &lt;code&gt;ngBind&lt;/code&gt; directly, but instead you use the double curly markup like &lt;code&gt;{{ expression }}&lt;/code&gt; which is similar but less verbose.</source>
          <target state="translated">通常，您不直接使用 &lt;code&gt;ngBind&lt;/code&gt; ，而是使用类似 &lt;code&gt;{{ expression }}&lt;/code&gt; 的双重卷曲标记，它虽然相似，但比较冗长。</target>
        </trans-unit>
        <trans-unit id="f6a19ff69e8d695fff05426906779eaaae870446" translate="yes" xml:space="preserve">
          <source>Typically, you would call this method following each test case that asserts requests using an &quot;afterEach&quot; clause.</source>
          <target state="translated">通常情况下,你会在每个使用 &quot;afterEach &quot;子句断言请求的测试用例后调用这个方法。</target>
        </trans-unit>
        <trans-unit id="7fdf8e24fee9641029d910c77e727fa987ff0d84" translate="yes" xml:space="preserve">
          <source>Typically, you would configure or override the &lt;a href=&quot;%24scedelegate&quot;&gt;$sceDelegate&lt;/a&gt; instead of the &lt;code&gt;$sce&lt;/code&gt; service to customize the way Strict Contextual Escaping works in AngularJS. This is because, while the &lt;code&gt;$sce&lt;/code&gt; provides numerous shorthand methods, etc., you really only need to override 3 core functions (&lt;code&gt;trustAs&lt;/code&gt;, &lt;code&gt;getTrusted&lt;/code&gt; and &lt;code&gt;valueOf&lt;/code&gt;) to replace the way things work because &lt;code&gt;$sce&lt;/code&gt; delegates to &lt;code&gt;$sceDelegate&lt;/code&gt; for these operations.</source>
          <target state="translated">通常，您将配置或覆盖&lt;a href=&quot;%24scedelegate&quot;&gt;$ sceDelegate&lt;/a&gt;而不是 &lt;code&gt;$sce&lt;/code&gt; 服务，以自定义严格上下文转义在AngularJS中的工作方式。这是因为，尽管 &lt;code&gt;$sce&lt;/code&gt; 提供了许多速记方法等，但实际上您只需要重写3个核心函数（ &lt;code&gt;trustAs&lt;/code&gt; ， &lt;code&gt;getTrusted&lt;/code&gt; 和 &lt;code&gt;valueOf&lt;/code&gt; ）来替换工作方式，因为 &lt;code&gt;$sce&lt;/code&gt; 将这些操作委托给 &lt;code&gt;$sceDelegate&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4949e7b471c62f07ef5e8f49abbfc90b2fcee84d" translate="yes" xml:space="preserve">
          <source>URL format</source>
          <target state="translated">URL格式</target>
        </trans-unit>
        <trans-unit id="e18613f7569df4e87d46ab0c50bd2f0aa9fd3721" translate="yes" xml:space="preserve">
          <source>URL of content to load.</source>
          <target state="translated">要加载的内容的URL。</target>
        </trans-unit>
        <trans-unit id="30e531717661ab3417ebc4cbe0c1de475ab6be26" translate="yes" xml:space="preserve">
          <source>URL of the request.</source>
          <target state="translated">请求的URL。</target>
        </trans-unit>
        <trans-unit id="d7bbc289db7f0b0052507421a9bcb3e65c45c45e" translate="yes" xml:space="preserve">
          <source>URL that was before it was changed.</source>
          <target state="translated">改之前的URL。</target>
        </trans-unit>
        <trans-unit id="218f37ac7c7d3d4188879070d19d295a2d90c29a" translate="yes" xml:space="preserve">
          <source>Under the hood</source>
          <target state="translated">引擎盖下</target>
        </trans-unit>
        <trans-unit id="443978f12d579b038c008dea8e752b5d3e01d6d0" translate="yes" xml:space="preserve">
          <source>Understanding How Scopes Work with Transcluded Directives</source>
          <target state="translated">了解作用域如何与转入指令一起工作</target>
        </trans-unit>
        <trans-unit id="b476afa4e9575435e81ebe1e34e1ccc258d54e8e" translate="yes" xml:space="preserve">
          <source>Understanding Scopes</source>
          <target state="translated">了解范围</target>
        </trans-unit>
        <trans-unit id="3aea8612a3778098d091872872cceefb5e6bd7de" translate="yes" xml:space="preserve">
          <source>Understanding View</source>
          <target state="translated">了解视图</target>
        </trans-unit>
        <trans-unit id="629ffb1444dbbb1b0dac1c29021a48b25b040df3" translate="yes" xml:space="preserve">
          <source>Unique scope ID (monotonically increasing) useful for debugging.</source>
          <target state="translated">唯一的作用域ID(单调递增),对调试有用。</target>
        </trans-unit>
        <trans-unit id="438d23452047f4defac8e18aecae37372fcea335" translate="yes" xml:space="preserve">
          <source>Unit Testing</source>
          <target state="translated">单元测试</target>
        </trans-unit>
        <trans-unit id="3b563841706d01128f360a08ae70337b23f59c44" translate="yes" xml:space="preserve">
          <source>Unit testing with mock $httpBackend</source>
          <target state="translated">使用mock $httpBackend进行单元测试</target>
        </trans-unit>
        <trans-unit id="03f9dd1dbb0519b8fb0d50867eeaf9173813a3e3" translate="yes" xml:space="preserve">
          <source>Unit testing, as the name implies, is about testing individual units of code. Unit tests try to answer questions such as &quot;Did I think about the logic correctly?&quot; or &quot;Does the sort function order the list in the right order?&quot;</source>
          <target state="translated">单元测试,顾名思义,就是测试各个代码单元。单元测试试图回答一些问题,比如 &quot;我考虑的逻辑是否正确?&quot;或者 &quot;排序函数是否按照正确的顺序排列列表?&quot;</target>
        </trans-unit>
        <trans-unit id="57c368e336d005ba762d838d65c9d99e26f84dac" translate="yes" xml:space="preserve">
          <source>Unit tests only have to load relevant modules, which keeps them fast.</source>
          <target state="translated">单元测试只需要加载相关的模块,这样可以保持测试的速度。</target>
        </trans-unit>
        <trans-unit id="3fb4e286e502a759b76367b0dba26a4db6774e6a" translate="yes" xml:space="preserve">
          <source>Unit-testing Component Controllers</source>
          <target state="translated">单元测试组件控制器</target>
        </trans-unit>
        <trans-unit id="c532fb030d4057cff1a4adcec6eb4756fc91ef75" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;angular.extend&quot;&gt;extend()&lt;/a&gt;, &lt;code&gt;merge()&lt;/code&gt; recursively descends into object properties of source objects, performing a deep copy.</source>
          <target state="translated">与&lt;a href=&quot;angular.extend&quot;&gt;extend（）&lt;/a&gt;不同， &lt;code&gt;merge()&lt;/code&gt; 递归地归入源对象的对象属性，执行深层复制。</target>
        </trans-unit>
        <trans-unit id="c99e4d44f0c339bd48a75c15f4c96bd079f56c71" translate="yes" xml:space="preserve">
          <source>Unlike ES262's &lt;a href=&quot;http://www.ecma-international.org/ecma-262/5.1/#sec-15.4.4.18&quot;&gt;Array.prototype.forEach&lt;/a&gt;, providing 'undefined' or 'null' values for &lt;code&gt;obj&lt;/code&gt; will not throw a TypeError, but rather just return the value provided.</source>
          <target state="translated">与ES262的&lt;a href=&quot;http://www.ecma-international.org/ecma-262/5.1/#sec-15.4.4.18&quot;&gt;Array.prototype.forEach&lt;/a&gt;不同，为 &lt;code&gt;obj&lt;/code&gt; 提供'undefined'或'null'值不会抛出TypeError，而只是返回所提供的值。</target>
        </trans-unit>
        <trans-unit id="209c8097836b9258765844c6a5792b2eb42a2408" translate="yes" xml:space="preserve">
          <source>Unlike services, there can be many instances of the same type of controller in an application.</source>
          <target state="translated">与服务不同,在一个应用程序中,可以有许多相同类型的控制器实例。</target>
        </trans-unit>
        <trans-unit id="41ae88da458d1d682765ae9e4d1fc2981948283c" translate="yes" xml:space="preserve">
          <source>Unlike simple values, object-literals are watched until every key is defined. See &lt;a href=&quot;http://www.bennadel.com/blog/2760-one-time-data-bindings-for-object-literal-expressions-in-angularjs-1-3.htm&quot;&gt;http://www.bennadel.com/blog/2760-one-time-data-bindings-for-object-literal-expressions-in-angularjs-1-3.htm&lt;/a&gt;</source>
          <target state="translated">与简单值不同，将监视对象文字，直到定义了每个键。参见&lt;a href=&quot;http://www.bennadel.com/blog/2760-one-time-data-bindings-for-object-literal-expressions-in-angularjs-1-3.htm&quot;&gt;http://www.bennadel.com/blog/2760-one-time-data-bindings-for-object-literal-expressions-in-angularjs-1-3.htm&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="73ae224e8735ac30c004ffdc6115aecdf9718361" translate="yes" xml:space="preserve">
          <source>Up until AngularJS 1.3, &lt;code&gt;$cookies&lt;/code&gt; exposed properties that represented the current browser cookie values. In version 1.4, this behavior has changed, and &lt;code&gt;$cookies&lt;/code&gt; now provides a standard api of getters, setters etc.</source>
          <target state="translated">直到AngularJS 1.3， &lt;code&gt;$cookies&lt;/code&gt; 公开表示当前浏览器cookie值的属性。在版本1.4中，此行为已更改，并且 &lt;code&gt;$cookies&lt;/code&gt; 现在提供了标准的getter，setter等api。</target>
        </trans-unit>
        <trans-unit id="6a24966329bd38080b15cb29a9d8d9bbe7a67aba" translate="yes" xml:space="preserve">
          <source>Update the view value.</source>
          <target state="translated">更新视图值。</target>
        </trans-unit>
        <trans-unit id="48d94c781db18d8b60bf067bb589536cbf58bd78" translate="yes" xml:space="preserve">
          <source>Updates may be pending by a debounced event or because the input is waiting for a some future event defined in &lt;code&gt;ng-model-options&lt;/code&gt;. This method is rarely needed as &lt;code&gt;NgModelController&lt;/code&gt; usually handles calling this in response to input events.</source>
          <target state="translated">更新可能会因反跳事件而挂起，或者因为输入正在等待 &lt;code&gt;ng-model-options&lt;/code&gt; 中定义的某个将来的事件。很少需要此方法，因为 &lt;code&gt;NgModelController&lt;/code&gt; 通常会响应输入事件来处理调用此方法。</target>
        </trans-unit>
        <trans-unit id="a5ece24f05232383c973b3dcd8d5ec955602e4f9" translate="yes" xml:space="preserve">
          <source>Updates may be pending by a debounced event or because the input is waiting for a some future event defined in &lt;code&gt;ng-model-options&lt;/code&gt;. This method is typically needed by the reset button of a form that uses &lt;code&gt;ng-model-options&lt;/code&gt; to pend updates.</source>
          <target state="translated">更新可能会因反跳事件而挂起，或者因为输入正在等待 &lt;code&gt;ng-model-options&lt;/code&gt; 中定义的某个将来的事件。使用 &lt;code&gt;ng-model-options&lt;/code&gt; 进行更新的表单的重置按钮通常需要此方法。</target>
        </trans-unit>
        <trans-unit id="c32c26b09b60884932de0735cac06908d3f7ccf0" translate="yes" xml:space="preserve">
          <source>Updates may be pending by a debounced event or because the input is waiting for a some future event defined in &lt;code&gt;ng-model-options&lt;/code&gt;. this method is rarely needed as &lt;code&gt;NgModelController&lt;/code&gt; usually handles calling this in response to input events.</source>
          <target state="translated">更新可能会因反跳事件而挂起，或者因为输入正在等待 &lt;code&gt;ng-model-options&lt;/code&gt; 中定义的某个将来的事件。很少需要此方法，因为 &lt;code&gt;NgModelController&lt;/code&gt; 通常会响应输入事件来处理调用此方法。</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="e78c2b095e755aab9f8caa006dd4fd278929ad41" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;%24interval#flush.html&quot;&gt;&lt;code&gt;$interval.flush(millis)&lt;/code&gt;&lt;/a&gt; to move forward by &lt;code&gt;millis&lt;/code&gt; milliseconds and trigger any functions scheduled to run in that time.</source>
          <target state="translated">使用&lt;a href=&quot;%24interval#flush.html&quot;&gt; &lt;code&gt;$interval.flush(millis)&lt;/code&gt; &lt;/a&gt;通过向前移动 &lt;code&gt;millis&lt;/code&gt; 毫秒，触发计划在这段时间运行的任何功能。</target>
        </trans-unit>
        <trans-unit id="9d10cf3ebaf3f699b7cd183a40113d2096935796" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;../provider/%24interpolateprovider#endSymbol.html&quot;&gt;&lt;code&gt;$interpolateProvider.endSymbol&lt;/code&gt;&lt;/a&gt; to change the symbol.</source>
          <target state="translated">使用&lt;a href=&quot;../provider/%24interpolateprovider#endSymbol.html&quot;&gt; &lt;code&gt;$interpolateProvider.endSymbol&lt;/code&gt; &lt;/a&gt;更改符号。</target>
        </trans-unit>
        <trans-unit id="d014a1c84c0cea27fad3b0edad9bcbb55cee2222" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;../provider/%24interpolateprovider#startSymbol.html&quot;&gt;&lt;code&gt;$interpolateProvider.startSymbol&lt;/code&gt;&lt;/a&gt; to change the symbol.</source>
          <target state="translated">使用&lt;a href=&quot;../provider/%24interpolateprovider#startSymbol.html&quot;&gt; &lt;code&gt;$interpolateProvider.startSymbol&lt;/code&gt; &lt;/a&gt;更改符号。</target>
        </trans-unit>
        <trans-unit id="6a641c4af45db61a4d45240e4bc451c61620dd29" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;ngif&quot;&gt;&lt;code&gt;ngIf&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;ngswitch&quot;&gt;&lt;code&gt;ngSwitch&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;ngshow&quot;&gt;&lt;code&gt;ngShow&lt;/code&gt;&lt;/a&gt; / &lt;a href=&quot;nghide&quot;&gt;&lt;code&gt;ngHide&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;ngif&quot;&gt; &lt;code&gt;ngIf&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;ngswitch&quot;&gt; &lt;code&gt;ngSwitch&lt;/code&gt; &lt;/a&gt;代替&lt;a href=&quot;ngshow&quot;&gt; &lt;code&gt;ngShow&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;nghide&quot;&gt; &lt;code&gt;ngHide&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="218b05a9d83c943a410d416413419b99ab64cf02" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;$anchorScrollProvider&lt;/code&gt; to disable automatic scrolling whenever &lt;a href=&quot;../service/%24location#hash.html&quot;&gt;$location.hash()&lt;/a&gt; changes.</source>
          <target state="translated">每当&lt;a href=&quot;../service/%24location#hash.html&quot;&gt;$ location.hash（）&lt;/a&gt;更改时，请使用 &lt;code&gt;$anchorScrollProvider&lt;/code&gt; 禁用自动滚动。</target>
        </trans-unit>
        <trans-unit id="b968b0787da9eecc71135a165258514b44ef0734" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;$anchorScrollProvider&lt;/code&gt; to disable automatic scrolling whenever &lt;a href=&quot;service/%24location#hash.html&quot;&gt;$location.hash()&lt;/a&gt; changes.</source>
          <target state="translated">每当&lt;a href=&quot;service/%24location#hash.html&quot;&gt;$ location.hash（）&lt;/a&gt;更改时，请使用 &lt;code&gt;$anchorScrollProvider&lt;/code&gt; 禁用自动滚动。</target>
        </trans-unit>
        <trans-unit id="354512147e4e601cc546a9ec65841a61f9421903" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;$cookiesProvider&lt;/code&gt; to change the default behavior of the &lt;a href=&quot;../service/%24cookies&quot;&gt;$cookies&lt;/a&gt; service.</source>
          <target state="translated">使用 &lt;code&gt;$cookiesProvider&lt;/code&gt; 更改&lt;a href=&quot;../service/%24cookies&quot;&gt;$ cookies&lt;/a&gt;服务的默认行为。</target>
        </trans-unit>
        <trans-unit id="a148f7331f736ce00c51361a431bda51bee1ed1d" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;$cookiesProvider&lt;/code&gt; to change the default behavior of the &lt;a href=&quot;ngcookies/service/%24cookies&quot;&gt;$cookies&lt;/a&gt; service.</source>
          <target state="translated">使用 &lt;code&gt;$cookiesProvider&lt;/code&gt; 更改&lt;a href=&quot;ngcookies/service/%24cookies&quot;&gt;$ cookies&lt;/a&gt;服务的默认行为。</target>
        </trans-unit>
        <trans-unit id="ef936e3e20232f9a1650cc302f357cad6c4156ca" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;$cookiesProvider&lt;/code&gt; to change the default behavior of the &lt;a href=&quot;service/%24cookies&quot;&gt;$cookies&lt;/a&gt; service.</source>
          <target state="translated">使用 &lt;code&gt;$cookiesProvider&lt;/code&gt; 更改&lt;a href=&quot;service/%24cookies&quot;&gt;$ cookies&lt;/a&gt;服务的默认行为。</target>
        </trans-unit>
        <trans-unit id="15fb01e25077c75bad5d011e5094bc75c8f3d896" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;$httpProvider&lt;/code&gt; to change the default behavior of the &lt;a href=&quot;../service/%24http&quot;&gt;$http&lt;/a&gt; service.</source>
          <target state="translated">使用 &lt;code&gt;$httpProvider&lt;/code&gt; 更改&lt;a href=&quot;../service/%24http&quot;&gt;$ http&lt;/a&gt;服务的默认行为。</target>
        </trans-unit>
        <trans-unit id="687465cea5c0906f2e3249d57fd88fb9d657fefe" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;$httpProvider&lt;/code&gt; to change the default behavior of the &lt;a href=&quot;service/%24http&quot;&gt;$http&lt;/a&gt; service.</source>
          <target state="translated">使用 &lt;code&gt;$httpProvider&lt;/code&gt; 更改&lt;a href=&quot;service/%24http&quot;&gt;$ http&lt;/a&gt;服务的默认行为。</target>
        </trans-unit>
        <trans-unit id="2392b2da1088beefbc29590ab2eda9ddba143d0a" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;$resourceProvider&lt;/code&gt; to change the default behavior of the &lt;a href=&quot;../service/%24resource&quot;&gt;&lt;code&gt;$resource&lt;/code&gt;&lt;/a&gt; service.</source>
          <target state="translated">使用 &lt;code&gt;$resourceProvider&lt;/code&gt; 更改&lt;a href=&quot;../service/%24resource&quot;&gt; &lt;code&gt;$resource&lt;/code&gt; &lt;/a&gt;服务的默认行为。</target>
        </trans-unit>
        <trans-unit id="b88771011fc3cd5358447dc36675101538ddffcf" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;$resourceProvider&lt;/code&gt; to change the default behavior of the &lt;a href=&quot;ngresource/service/%24resource&quot;&gt;&lt;code&gt;$resource&lt;/code&gt;&lt;/a&gt; service.</source>
          <target state="translated">使用 &lt;code&gt;$resourceProvider&lt;/code&gt; 更改&lt;a href=&quot;ngresource/service/%24resource&quot;&gt; &lt;code&gt;$resource&lt;/code&gt; &lt;/a&gt;服务的默认行为。</target>
        </trans-unit>
        <trans-unit id="7ca460ac7b4debf1921b9d34cfa7a7f3a1ebd02a" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;$resourceProvider&lt;/code&gt; to change the default behavior of the &lt;a href=&quot;service/%24resource&quot;&gt;&lt;code&gt;$resource&lt;/code&gt;&lt;/a&gt; service.</source>
          <target state="translated">使用 &lt;code&gt;$resourceProvider&lt;/code&gt; 更改&lt;a href=&quot;service/%24resource&quot;&gt; &lt;code&gt;$resource&lt;/code&gt; &lt;/a&gt;服务的默认行为。</target>
        </trans-unit>
        <trans-unit id="cc1ec7cfcbd0280881371f3aa4ee3069843966fe" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;ng-class=&quot;{'ng-hide': expression}&lt;/code&gt; instead of instead of &lt;a href=&quot;ngshow&quot;&gt;&lt;code&gt;ngShow&lt;/code&gt;&lt;/a&gt; / &lt;a href=&quot;nghide&quot;&gt;&lt;code&gt;ngHide&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用 &lt;code&gt;ng-class=&quot;{'ng-hide': expression}&lt;/code&gt; 代替&lt;a href=&quot;ngshow&quot;&gt; &lt;code&gt;ngShow&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;nghide&quot;&gt; &lt;code&gt;ngHide&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="252932316ac080237bfbd49d94e69b42c8202774" translate="yes" xml:space="preserve">
          <source>Use controllers to:</source>
          <target state="translated">使用控制器来。</target>
        </trans-unit>
        <trans-unit id="ec78e24bb1beaec2fff0a05e747e3a518fdbd042" translate="yes" xml:space="preserve">
          <source>Use sharedInjector when you want to take advantage of Jasmine's &lt;code&gt;beforeAll()&lt;/code&gt;, or mocha's &lt;code&gt;before()&lt;/code&gt; methods. Call &lt;code&gt;module.sharedInjector()&lt;/code&gt; before you setup any other hooks that will create (i.e call &lt;code&gt;module()&lt;/code&gt;) or use (i.e call &lt;code&gt;inject()&lt;/code&gt;) the injector.</source>
          <target state="translated">当您想利用Jasmine的 &lt;code&gt;beforeAll()&lt;/code&gt; 或mocha的 &lt;code&gt;before()&lt;/code&gt; 方法时，请使用sharedInjector 。在设置任何其他将创建（例如，调用 &lt;code&gt;module()&lt;/code&gt; ）或使用（例如，调用 &lt;code&gt;inject()&lt;/code&gt; ）注入器的）钩子之前，请调用 &lt;code&gt;module.sharedInjector()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb362d3d265854877b73c2022104238b8f662f3f" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;$locationProvider&lt;/code&gt; to configure how the application deep linking paths are stored.</source>
          <target state="translated">使用 &lt;code&gt;$locationProvider&lt;/code&gt; 配置应用程序深层链接路径的存储方式。</target>
        </trans-unit>
        <trans-unit id="7a7084daedcbcf3cf58f8478d3a4ef6d9e3042e1" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;$logProvider&lt;/code&gt; to configure how the application logs messages</source>
          <target state="translated">使用 &lt;code&gt;$logProvider&lt;/code&gt; 配置应用程序记录消息的方式</target>
        </trans-unit>
        <trans-unit id="359920a71e60b24c3e8679f4d1142b9de40dfe80" translate="yes" xml:space="preserve">
          <source>Use the latest AngularJS possible</source>
          <target state="translated">尽可能使用最新的AngularJS</target>
        </trans-unit>
        <trans-unit id="9d4a7cc07d13aee2118147eae5b6204e02526bb6" translate="yes" xml:space="preserve">
          <source>Use the special CSS selector &lt;code&gt;ng-hide.ng-hide-animate&lt;/code&gt; to set &lt;code&gt;{display: none}&lt;/code&gt; or similar on the affected elements.</source>
          <target state="translated">使用特殊的CSS选择器 &lt;code&gt;ng-hide.ng-hide-animate&lt;/code&gt; 在受影响的元素上设置 &lt;code&gt;{display: none}&lt;/code&gt; 或类似设置。</target>
        </trans-unit>
        <trans-unit id="01b6831d8484c409e8aabc8e2f585a365a461d33" translate="yes" xml:space="preserve">
          <source>Use this directive to &lt;strong&gt;auto-bootstrap&lt;/strong&gt; an AngularJS application. The &lt;code&gt;ngApp&lt;/code&gt; directive designates the &lt;strong&gt;root element&lt;/strong&gt; of the application and is typically placed near the root element of the page - e.g. on the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; tags.</source>
          <target state="translated">使用此指令&lt;strong&gt;自动引导&lt;/strong&gt; AngularJS应用程序。所述 &lt;code&gt;ngApp&lt;/code&gt; 指令指定&lt;strong&gt;根元素&lt;/strong&gt;的应用程序的，并且通常放置在页面的根元素近-例如在 &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; 或 &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; 标记。</target>
        </trans-unit>
        <trans-unit id="cffba56063404188829cf8f1f82edf386bbc1e59" translate="yes" xml:space="preserve">
          <source>Use this directive to force the angular.element library. This should be used to force either jqLite by leaving ng-jq blank or setting the name of the jquery variable under window (eg. jQuery).</source>
          <target state="translated">使用这条指令来强制使用angular.Element库。这应该用来强制jqLite,让ng-jq留空,或者在window下设置jquery变量的名称(例如jQuery)。</target>
        </trans-unit>
        <trans-unit id="294fecfb6e5d5ea18318309468bfa41aee69ee2b" translate="yes" xml:space="preserve">
          <source>Use this function to manually start up AngularJS application.</source>
          <target state="translated">使用此功能可以手动启动AngularJS应用程序。</target>
        </trans-unit>
        <trans-unit id="c6f82f5bd67956f87473eb69dd807927f89430cf" translate="yes" xml:space="preserve">
          <source>Use this function to reload the current application with debug information turned on. This takes precedence over a call to &lt;code&gt;$compileProvider.debugInfoEnabled(false)&lt;/code&gt;.</source>
          <target state="translated">使用此功能可以在打开调试信息的情况下重新加载当前应用程序。这优先于对 &lt;code&gt;$compileProvider.debugInfoEnabled(false)&lt;/code&gt; 的调用。</target>
        </trans-unit>
        <trans-unit id="d5a771a46afd23a79112854e27f186a09e2c9ba1" translate="yes" xml:space="preserve">
          <source>Use this method to configure services by injecting their &lt;a href=&quot;angular.module#provider.html&quot;&gt;&lt;code&gt;providers&lt;/code&gt;&lt;/a&gt;, e.g. for adding routes to the &lt;a href=&quot;../../ngroute/provider/%24routeprovider&quot;&gt;$routeProvider&lt;/a&gt;.</source>
          <target state="translated">使用此方法通过注入服务的&lt;a href=&quot;angular.module#provider.html&quot;&gt; &lt;code&gt;providers&lt;/code&gt; &lt;/a&gt;来配置服务，例如，将路由添加到&lt;a href=&quot;../../ngroute/provider/%24routeprovider&quot;&gt;$ routeProvider&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="94c8a5728df153aa8ef0f96f8c05e84b03dfd3da" translate="yes" xml:space="preserve">
          <source>Use this method to disable automatic scrolling.</source>
          <target state="translated">使用此方法可禁用自动滚动。</target>
        </trans-unit>
        <trans-unit id="b46c8e2625e9d1d564150470d764ef83f44ed6cd" translate="yes" xml:space="preserve">
          <source>Use this method to register work which should be performed when the injector is done loading all modules.</source>
          <target state="translated">使用此方法来注册当注入器完成所有模块的加载时应该执行的工作。</target>
        </trans-unit>
        <trans-unit id="e2c9ca4a68dc2a6884892d41b5a73fcdd5783521" translate="yes" xml:space="preserve">
          <source>Used for configuring routes.</source>
          <target state="translated">用于配置路由。</target>
        </trans-unit>
        <trans-unit id="1e20f817510e56e9b96cac2070c3e22126811c3b" translate="yes" xml:space="preserve">
          <source>Used for configuring the ARIA attributes injected and managed by ngAria.</source>
          <target state="translated">用于配置由ngAria注入和管理的ARIA属性。</target>
        </trans-unit>
        <trans-unit id="655c8e5a053e43f0c11ecfabef9bcc1912abfe26" translate="yes" xml:space="preserve">
          <source>Used for configuring the interpolation markup. Defaults to &lt;code&gt;{{&lt;/code&gt; and &lt;code&gt;}}&lt;/code&gt;.</source>
          <target state="translated">用于配置插值标记。默认为 &lt;code&gt;{{&lt;/code&gt; 和 &lt;code&gt;}}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1fb44e414995a58ae7d8e047aff02bcff4d56e5c" translate="yes" xml:space="preserve">
          <source>Used to configure the options passed to the &lt;a href=&quot;../service/%24http&quot;&gt;&lt;code&gt;$http&lt;/code&gt;&lt;/a&gt; service when making a template request.</source>
          <target state="translated">用于在发出模板请求时配置传递给&lt;a href=&quot;../service/%24http&quot;&gt; &lt;code&gt;$http&lt;/code&gt; &lt;/a&gt;服务的选项。</target>
        </trans-unit>
        <trans-unit id="e98fe6396bfb3427cbaf00c58b5487eb76c4659a" translate="yes" xml:space="preserve">
          <source>Used to configure the options passed to the &lt;a href=&quot;service/%24http&quot;&gt;&lt;code&gt;$http&lt;/code&gt;&lt;/a&gt; service when making a template request.</source>
          <target state="translated">用于在发出模板请求时配置传递给&lt;a href=&quot;service/%24http&quot;&gt; &lt;code&gt;$http&lt;/code&gt; &lt;/a&gt;服务的选项。</target>
        </trans-unit>
        <trans-unit id="1992cf3bd475bebb63dff75def762449cd8f0921" translate="yes" xml:space="preserve">
          <source>Used to get and set whether animations are enabled or not on the entire application or on an element and its children. This function can be called in four ways:</source>
          <target state="translated">用于获取和设置是否在整个应用程序或一个元素及其子元素上启用动画。该函数有四种调用方式。</target>
        </trans-unit>
        <trans-unit id="77ca86ada0f9252bb106a6e6efdbff01c4a20438" translate="yes" xml:space="preserve">
          <source>Using $animate in your directive code</source>
          <target state="translated">在你的指令代码中使用$animate</target>
        </trans-unit>
        <trans-unit id="613a81888b42fb0d4ca5df60f2f42af801bb1b12" translate="yes" xml:space="preserve">
          <source>Using $location</source>
          <target state="translated">使用$location</target>
        </trans-unit>
        <trans-unit id="27c0cbbddba59723567250ee8aaf043d300dad88" translate="yes" xml:space="preserve">
          <source>Using $location outside of the scope life-cycle</source>
          <target state="translated">在 scope 生命周期之外使用 $location。</target>
        </trans-unit>
        <trans-unit id="29169efc69847444ce3da0120339548bb93f2578" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;../api/ngaria&quot;&gt;ngAria&lt;/a&gt; is as simple as requiring the ngAria module in your application. ngAria hooks into standard AngularJS directives and quietly injects accessibility support into your application at runtime.</source>
          <target state="translated">使用&lt;a href=&quot;../api/ngaria&quot;&gt;ngAria&lt;/a&gt;就像在应用程序中需要ngAria模块一样简单。ngAria挂接到标准AngularJS指令，并在运行时悄悄地将可访问性支持注入您的应用程序。</target>
        </trans-unit>
        <trans-unit id="187503b822cc41efce6fddb7ffa2ed2aec83c324" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;controller as&lt;/code&gt; makes it obvious which controller you are accessing in the template when multiple controllers apply to an element.</source>
          <target state="translated">当多个控制器应用于一个元素时，使用 &lt;code&gt;controller as&lt;/code&gt; 可以很明显地在模板中访问哪个控制器。</target>
        </trans-unit>
        <trans-unit id="75fa788af800c949aecf96d72fda73c3d6a4da58" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;ngStrictDi&lt;/code&gt;, you would see something like this:</source>
          <target state="translated">使用 &lt;code&gt;ngStrictDi&lt;/code&gt; ，您将看到类似以下内容：</target>
        </trans-unit>
        <trans-unit id="618b214c025a81d4cdc55abe11cf88128651105c" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;select&lt;/code&gt;&lt;strong&gt;&lt;code&gt;as&lt;/code&gt;&lt;/strong&gt; will bind the result of the &lt;code&gt;select&lt;/code&gt; expression to the model, but the value of the &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; html elements will be either the index (for array data sources) or property name (for object data sources) of the value within the collection. If a &lt;strong&gt;&lt;code&gt;track by&lt;/code&gt;&lt;/strong&gt; expression is used, the result of that expression will be set as the value of the &lt;code&gt;option&lt;/code&gt; and &lt;code&gt;select&lt;/code&gt; elements.</source>
          <target state="translated">使用 &lt;code&gt;select&lt;/code&gt; &lt;strong&gt; &lt;code&gt;as&lt;/code&gt; &lt;/strong&gt;将 &lt;code&gt;select&lt;/code&gt; 表达式的结果绑定到模型，但是 &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; html元素的值将是索引（对于数组数据源）或属性名（对于对象数据源）集合中的值。如果使用&lt;strong&gt; &lt;code&gt;track by&lt;/code&gt; &lt;/strong&gt;表达式&lt;strong&gt;跟踪，&lt;/strong&gt;则该表达式的结果将设置为 &lt;code&gt;option&lt;/code&gt; 和 &lt;code&gt;select&lt;/code&gt; 元素的值。</target>
        </trans-unit>
        <trans-unit id="b48a3f6a40b09344260d8ec7bc24924a4a77ab6a" translate="yes" xml:space="preserve">
          <source>Using ARIA in HTML</source>
          <target state="translated">在HTML中使用ARIA</target>
        </trans-unit>
        <trans-unit id="c4171cbd1d6f3ea14fcb721dacfb4707975d43ea" translate="yes" xml:space="preserve">
          <source>Using AngularJS markup like &lt;code&gt;{{hash}}&lt;/code&gt; in a &lt;code&gt;src&lt;/code&gt; attribute doesn't work right: The browser will fetch from the URL with the literal text &lt;code&gt;{{hash}}&lt;/code&gt; until AngularJS replaces the expression inside &lt;code&gt;{{hash}}&lt;/code&gt;. The &lt;code&gt;ngSrc&lt;/code&gt; directive solves this problem.</source>
          <target state="translated">在 &lt;code&gt;src&lt;/code&gt; 属性中使用类似 &lt;code&gt;{{hash}}&lt;/code&gt; 的 AngularJS标记无法正常工作：浏览器将使用文本文本 &lt;code&gt;{{hash}}&lt;/code&gt; 从URL提取，直到AngularJS替换 &lt;code&gt;{{hash}}&lt;/code&gt; 中的表达式。该 &lt;code&gt;ngSrc&lt;/code&gt; 指令解决了这个问题。</target>
        </trans-unit>
        <trans-unit id="1544e2d4e4ae1fb37109d1352ffdb29d3bc70e81" translate="yes" xml:space="preserve">
          <source>Using AngularJS markup like &lt;code&gt;{{hash}}&lt;/code&gt; in a &lt;code&gt;srcset&lt;/code&gt; attribute doesn't work right: The browser will fetch from the URL with the literal text &lt;code&gt;{{hash}}&lt;/code&gt; until AngularJS replaces the expression inside &lt;code&gt;{{hash}}&lt;/code&gt;. The &lt;code&gt;ngSrcset&lt;/code&gt; directive solves this problem.</source>
          <target state="translated">在 &lt;code&gt;srcset&lt;/code&gt; 属性中使用类似 &lt;code&gt;{{hash}}&lt;/code&gt; 的 AngularJS标记无法正常工作：浏览器将使用文本文本 &lt;code&gt;{{hash}}&lt;/code&gt; 从URL获取，直到AngularJS替换 &lt;code&gt;{{hash}}&lt;/code&gt; 中的表达式。该 &lt;code&gt;ngSrcset&lt;/code&gt; 指令解决了这个问题。</target>
        </trans-unit>
        <trans-unit id="1c81f10b2e8d7a29e274525eca136b9b2754c57d" translate="yes" xml:space="preserve">
          <source>Using AngularJS markup like &lt;code&gt;{{hash}}&lt;/code&gt; in an href attribute will make the link go to the wrong URL if the user clicks it before AngularJS has a chance to replace the &lt;code&gt;{{hash}}&lt;/code&gt; markup with its value. Until AngularJS replaces the markup the link will be broken and will most likely return a 404 error. The &lt;code&gt;ngHref&lt;/code&gt; directive solves this problem.</source>
          <target state="translated">在href属性中使用 &lt;code&gt;{{hash}}&lt;/code&gt; 之类的AngularJS标记会使链接转到错误的URL（如果用户在AngularJS有机会用其值替换 &lt;code&gt;{{hash}}&lt;/code&gt; 标记之前单击链接）。在AngularJS替换标记之前，链接将断开，并且很可能会返回404错误。该 &lt;code&gt;ngHref&lt;/code&gt; 指令解决了这个问题。</target>
        </trans-unit>
        <trans-unit id="26651671e648d817c38c64754ab40d68a2c9123a" translate="yes" xml:space="preserve">
          <source>Using CSS classes</source>
          <target state="translated">使用CSS类</target>
        </trans-unit>
        <trans-unit id="22c59955943e9707b80f15aec8a1b0a32409db33" translate="yes" xml:space="preserve">
          <source>Using Dependency Injection</source>
          <target state="translated">使用依赖注入</target>
        </trans-unit>
        <trans-unit id="3f12d56b74c2eb2c6b5988dda7a6704cc676d3d4" translate="yes" xml:space="preserve">
          <source>Using Factory recipes, you can also define AngularJS's filters and animations, but the controllers are a bit special. You create a controller as a custom type that declares its dependencies as arguments for its constructor function. This constructor is then registered with a module. Let's take a look at the &lt;code&gt;DemoController&lt;/code&gt;, created in one of the early examples:</source>
          <target state="translated">使用Factory配方，您还可以定义AngularJS的过滤器和动画，但是控制器有些特殊。您将控制器创建为自定义类型，该控制器将其依赖项声明为其构造函数的参数。然后，此构造函数将在模块中注册。让我们看一下在早期示例之一中创建的 &lt;code&gt;DemoController&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="142274a4bb4939c13a749da4226dd8927425fd22" translate="yes" xml:space="preserve">
          <source>Using Local Caches</source>
          <target state="translated">使用本地缓存</target>
        </trans-unit>
        <trans-unit id="e8729bc93021a2e5283ed88952093ee0c9a0a8f3" translate="yes" xml:space="preserve">
          <source>Using Protractor</source>
          <target state="translated">使用量角器</target>
        </trans-unit>
        <trans-unit id="cf6f695a6a43d5695aeb78a9aefcac36d5324914" translate="yes" xml:space="preserve">
          <source>Using Strict Dependency Injection</source>
          <target state="translated">使用严格的依赖注入</target>
        </trans-unit>
        <trans-unit id="9e041c266624208fa4e65afd24d87690238c5434" translate="yes" xml:space="preserve">
          <source>Using a Service</source>
          <target state="translated">使用服务</target>
        </trans-unit>
        <trans-unit id="1870160824edb5f5d781284d76bb684b36c8a3ae" translate="yes" xml:space="preserve">
          <source>Using a custom comparator</source>
          <target state="translated">使用自定义比较器</target>
        </trans-unit>
        <trans-unit id="1513de7002759ec420dfa96ea93dd443a199efcb" translate="yes" xml:space="preserve">
          <source>Using an element for the &lt;code&gt;myCustomer&lt;/code&gt; directive is clearly the right choice because you're not decorating an element with some &quot;customer&quot; behavior; you're defining the core behavior of the element as a customer component.</source>
          <target state="translated">为 &lt;code&gt;myCustomer&lt;/code&gt; 指令使用元素显然是正确的选择，因为您没有以某种&amp;ldquo;客户&amp;rdquo;行为来装饰元素。您正在将元素的核心行为定义为客户组件。</target>
        </trans-unit>
        <trans-unit id="0b7f582cdde801c5eb7ccd1f5f093fd2b744221d" translate="yes" xml:space="preserve">
          <source>Using beforeAll()</source>
          <target state="translated">使用 beforeAll()</target>
        </trans-unit>
        <trans-unit id="3bf81a946b8d6c54f33bc47f1e13b86d15e48e46" translate="yes" xml:space="preserve">
          <source>Using filters in controllers, services, and directives</source>
          <target state="translated">在控制器、服务和指令中使用过滤器。</target>
        </trans-unit>
        <trans-unit id="e5733313ce1e48569bbeb7efa880f179d91eb616" translate="yes" xml:space="preserve">
          <source>Using filters in view templates</source>
          <target state="translated">在视图模板中使用过滤器</target>
        </trans-unit>
        <trans-unit id="77968546fbbe30427c877e1f02f60fd695c65843" translate="yes" xml:space="preserve">
          <source>Using interceptors</source>
          <target state="translated">使用拦截器</target>
        </trans-unit>
        <trans-unit id="ebf3d55846a7cd7f43e5f8cb0e431673ff8d2495" translate="yes" xml:space="preserve">
          <source>Using ngAria</source>
          <target state="translated">使用ngAria</target>
        </trans-unit>
        <trans-unit id="0f90dda5b5582c6398d02b0a5b0ebe328da00024" translate="yes" xml:space="preserve">
          <source>Using ngDisabled with ngAria:</source>
          <target state="translated">用ngAria使用ngDisabled。</target>
        </trans-unit>
        <trans-unit id="1937d07736980fa1e1cf14044c2d1eaa38088d68" translate="yes" xml:space="preserve">
          <source>Using ngRepeat to generate select options</source>
          <target state="translated">使用ngRepeat生成选择选项</target>
        </trans-unit>
        <trans-unit id="5f900837ceda875bf4c544ccac4d6058c4d6e857" translate="yes" xml:space="preserve">
          <source>Using ngValue to bind the model to an array of objects</source>
          <target state="translated">使用ngValue将模型绑定到对象数组上</target>
        </trans-unit>
        <trans-unit id="175501655ff7f1694fc035936c74e9c893e388e0" translate="yes" xml:space="preserve">
          <source>Using orderBy inside a controller</source>
          <target state="translated">在控制器中使用orderBy</target>
        </trans-unit>
        <trans-unit id="e38d72e573ba15e9d4f27541cef1ca49dafb855c" translate="yes" xml:space="preserve">
          <source>Using select with ngOptions and setting a default value</source>
          <target state="translated">使用ngOptions选择并设置默认值</target>
        </trans-unit>
        <trans-unit id="0726f73ae0c0e6e634886be4cf9fd3ceb9cfeaff" translate="yes" xml:space="preserve">
          <source>Using strict di mode in your production application will throw errors when an injectable function is not &lt;a href=&quot;di#dependency-annotation.html&quot;&gt;annotated explicitly&lt;/a&gt;. Strict di mode is intended to help you make sure that your code will work when minified. However, it also will force you to make sure that your injectable functions are explicitly annotated which will improve angular's performance when injecting dependencies in your injectable functions because it doesn't have to dynamically discover a function's dependencies. It is recommended to automate the explicit annotation via a tool like &lt;a href=&quot;https://github.com/olov/ng-annotate&quot;&gt;ng-annotate&lt;/a&gt; when you deploy to production (and enable strict di mode)</source>
          <target state="translated">如果未&lt;a href=&quot;di#dependency-annotation.html&quot;&gt;显式注释&lt;/a&gt;可注入函数，则在生产应用程序中使用严格的di模式将引发错误。严格的di模式旨在帮助您确保代码最小化。但是，这也将迫使您确保对可注入函数进行显式注释，这将在向可注入函数中注入依赖项时提高angular的性能，因为它不必动态发现函数的依赖项。建议在部署到生产环境时通过&lt;a href=&quot;https://github.com/olov/ng-annotate&quot;&gt;ng-annotate之&lt;/a&gt;类的工具自动执行显式注释（并启用严格的di模式）</target>
        </trans-unit>
        <trans-unit id="9c094e712cb148afcafcaaa4238f6b76abc53b26" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;$inject&lt;/code&gt; property annotation</source>
          <target state="translated">使用 &lt;code&gt;$inject&lt;/code&gt; 属性注释</target>
        </trans-unit>
        <trans-unit id="cc139db8875164b29e6054bd8d872efa13f3e432" translate="yes" xml:space="preserve">
          <source>Using the inline array annotation (preferred)</source>
          <target state="translated">使用内联数组注解(首选)</target>
        </trans-unit>
        <trans-unit id="a32ba4858e6ecdf40bb878f10445086068b003aa" translate="yes" xml:space="preserve">
          <source>Using this mode requires URL rewriting on server side, basically you have to rewrite all your links to entry point of your application (e.g. index.html). Requiring a &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; tag is also important for this case, as it allows AngularJS to differentiate between the part of the url that is the application base and the path that should be handled by the application.</source>
          <target state="translated">使用此模式需要在服务器端重写URL，基本上，您必须重写指向应用程序入口点的所有链接（例如index.html）。在这种情况下，需要 &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; 标记也很重要，因为它允许AngularJS区分作为应用程序基础的url部分和应由应用程序处理的路径。</target>
        </trans-unit>
        <trans-unit id="dd90e467c164134d79cd404122f3459c75ef6850" translate="yes" xml:space="preserve">
          <source>Using your favorite element inspector, look for attributes added by ngAria in your own code.</source>
          <target state="translated">使用你喜欢的元素检查器,在你自己的代码中寻找ngAria添加的属性。</target>
        </trans-unit>
        <trans-unit id="a66911e37d51e0c3a3a47af728e0570297be65e2" translate="yes" xml:space="preserve">
          <source>Usually, it's not necessary to write to properties in AngularJS, as the built-in directives handle the most common use cases (instead of the above example, you would use &lt;a href=&quot;ngvalue&quot;&gt;&lt;code&gt;ngValue&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">通常，没有必要在AngularJS中写入属性，因为内置指令处理最常见的用例（而不是上面的示例，您将使用&lt;a href=&quot;ngvalue&quot;&gt; &lt;code&gt;ngValue&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="9117e3d156ca57a740fa2681f3cbe9bcb779f7cd" translate="yes" xml:space="preserve">
          <source>Usually, you don't call &lt;code&gt;$digest()&lt;/code&gt; directly in &lt;a href=&quot;../directive/ngcontroller&quot;&gt;controllers&lt;/a&gt; or in &lt;a href=&quot;../provider/%24compileprovider#directive.html&quot;&gt;directives&lt;/a&gt;. Instead, you should call &lt;a href=&quot;%24rootscope.scope#%24apply.html&quot;&gt;$apply()&lt;/a&gt; (typically from within a &lt;a href=&quot;../provider/%24compileprovider#directive.html&quot;&gt;directive&lt;/a&gt;), which will force a &lt;code&gt;$digest()&lt;/code&gt;.</source>
          <target state="translated">通常，您不会直接在&lt;a href=&quot;../directive/ngcontroller&quot;&gt;控制器&lt;/a&gt;或&lt;a href=&quot;../provider/%24compileprovider#directive.html&quot;&gt;指令中&lt;/a&gt;调用 &lt;code&gt;$digest()&lt;/code&gt; 。相反，您应该调用&lt;a href=&quot;%24rootscope.scope#%24apply.html&quot;&gt;$ apply（）&lt;/a&gt;（通常从&lt;a href=&quot;../provider/%24compileprovider#directive.html&quot;&gt;指令内部&lt;/a&gt;），这将强制使用 &lt;code&gt;$digest()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dd74d182c641e4c78502d863b44d0aeff1575e54" translate="yes" xml:space="preserve">
          <source>Validation</source>
          <target state="translated">Validation</target>
        </trans-unit>
        <trans-unit id="8dce170de238b1feda2ecd9674ea3ca0d068fbcb" translate="yes" xml:space="preserve">
          <source>Value</source>
          <target state="translated">Value</target>
        </trans-unit>
        <trans-unit id="5cff1d4dcbaa6169803c618f64323129b1539f3d" translate="yes" xml:space="preserve">
          <source>Value Recipe</source>
          <target state="translated">超值配方</target>
        </trans-unit>
        <trans-unit id="c113bc7c7f7db6557f503b649e374f64b15937e5" translate="yes" xml:space="preserve">
          <source>Value for this literal. All literal values must be primitives or &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">此文字的值。所有文字值都必须是原语或 &lt;code&gt;undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="48274bf7792e3199e036a65ed34f449dc89eaf60" translate="yes" xml:space="preserve">
          <source>Value may be:</source>
          <target state="translated">价值可能是:</target>
        </trans-unit>
        <trans-unit id="5c7b89964a32b7847cc384c42d59157b6aa66118" translate="yes" xml:space="preserve">
          <source>Value or a promise</source>
          <target state="translated">价值或承诺</target>
        </trans-unit>
        <trans-unit id="6c81a08fcf7fb2e50a04e9b948fa82e0ea17df4a" translate="yes" xml:space="preserve">
          <source>Value services are similar to constant services, except that they cannot be injected into a module configuration function (see &lt;a href=&quot;../../ng/type/angular.module#config.html&quot;&gt;&lt;code&gt;angular.Module&lt;/code&gt;&lt;/a&gt;) but they can be overridden by an AngularJS &lt;a href=&quot;%24provide#decorator.html&quot;&gt;decorator&lt;/a&gt;.</source>
          <target state="translated">值服务类似于常量服务，不同之处在于它们不能被注入模块配置函数（请参见&lt;a href=&quot;../../ng/type/angular.module#config.html&quot;&gt; &lt;code&gt;angular.Module&lt;/code&gt; &lt;/a&gt;），但是可以被AngularJS &lt;a href=&quot;%24provide#decorator.html&quot;&gt;装饰器&lt;/a&gt;覆盖。</target>
        </trans-unit>
        <trans-unit id="3aa197e2c8a5fb13e9b7816824a89f4b3c5b3507" translate="yes" xml:space="preserve">
          <source>Value stabilization algorithm</source>
          <target state="translated">价值稳定算法</target>
        </trans-unit>
        <trans-unit id="6c469ec6aaa554802630547915725303bf8f8b8f" translate="yes" xml:space="preserve">
          <source>Value to be stored.</source>
          <target state="translated">要存储的值。</target>
        </trans-unit>
        <trans-unit id="605788684850e8a238a8726e1a0cb4c5099a9922" translate="yes" xml:space="preserve">
          <source>Value to set the attribute to. The value can be an interpolated string.</source>
          <target state="translated">设置属性的值。该值可以是一个内插的字符串。</target>
        </trans-unit>
        <trans-unit id="19de69cb601f53a4ea7af22a65c71ae63251365c" translate="yes" xml:space="preserve">
          <source>Variable</source>
          <target state="translated">Variable</target>
        </trans-unit>
        <trans-unit id="a47ec135f296824132839931bbbe778322d52156" translate="yes" xml:space="preserve">
          <source>Verifies that all of the requests defined via the &lt;code&gt;expect&lt;/code&gt; api were made. If any of the requests were not made, verifyNoOutstandingExpectation throws an exception.</source>
          <target state="translated">验证所有通过定义的请求的 &lt;code&gt;expect&lt;/code&gt; API作了。如果未发出任何请求，则verifyNoOutstandingExpectation会引发异常。</target>
        </trans-unit>
        <trans-unit id="2b0950bdfc9c6382c1d7d6a757ca980cb3de9e74" translate="yes" xml:space="preserve">
          <source>Verifies that there are no outstanding requests that need to be flushed.</source>
          <target state="translated">核查是否有需要冲刷的未决请求。</target>
        </trans-unit>
        <trans-unit id="d7f325a18a825f860634333d989a1d777ced5162" translate="yes" xml:space="preserve">
          <source>Verifies that there are no pending tasks that need to be flushed. It throws an error if there are still pending tasks.</source>
          <target state="translated">验证是否没有需要刷新的待处理任务。如果仍有待处理的任务,则会抛出错误。</target>
        </trans-unit>
        <trans-unit id="7c6656dc823a752a3eb9bcea6c50275b8cfac7b8" translate="yes" xml:space="preserve">
          <source>Via CSS styles: overwriting styles in the ng-animate CSS class</source>
          <target state="translated">通过CSS样式:覆盖ng-animate CSS类中的样式。</target>
        </trans-unit>
        <trans-unit id="56b71e89fb1079caaadefd0889e9a22e8b0560e3" translate="yes" xml:space="preserve">
          <source>Videos</source>
          <target state="translated">Videos</target>
        </trans-unit>
        <trans-unit id="aa76b6711f0b6f7b9b50c7a4cf8c5e8df5a2790e" translate="yes" xml:space="preserve">
          <source>Videos:</source>
          <target state="translated">Videos:</target>
        </trans-unit>
        <trans-unit id="69bd4ef9fbd0894a22759c3766b859defbdedbc8" translate="yes" xml:space="preserve">
          <source>View</source>
          <target state="translated">View</target>
        </trans-unit>
        <trans-unit id="8a0159fc319678e56cbe357335bec37e3f693d44" translate="yes" xml:space="preserve">
          <source>View &amp;mdash; The template (HTML with data bindings) that is rendered into the View.</source>
          <target state="translated">视图&amp;mdash;呈现到视图中的模板（带有数据绑定的HTML）。</target>
        </trans-unit>
        <trans-unit id="a0f83aaccc440d1cf25ada9bc1856e7eb2641833" translate="yes" xml:space="preserve">
          <source>View-independent business logic: Services</source>
          <target state="translated">独立于视图的业务逻辑。服务</target>
        </trans-unit>
        <trans-unit id="80fbd7d99df33af15d63e1fddfb91adaa3951721" translate="yes" xml:space="preserve">
          <source>Views and routes (see the example)</source>
          <target state="translated">视图和路线(见示例)</target>
        </trans-unit>
        <trans-unit id="346631241a6bd165883391eb2bf20f0dac472e27" translate="yes" xml:space="preserve">
          <source>W3C Accessibility Testing</source>
          <target state="translated">W3C无障碍测试</target>
        </trans-unit>
        <trans-unit id="6173f8eb0b947a810d1db5e56255e90b7667262d" translate="yes" xml:space="preserve">
          <source>Watch and observe the URL.</source>
          <target state="translated">看着观察网址。</target>
        </trans-unit>
        <trans-unit id="3db346c9726b530d1a2ae4cfb73287c8e81c97cc" translate="yes" xml:space="preserve">
          <source>Watching &lt;em&gt;by reference&lt;/em&gt; (&lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24watch.html&quot;&gt;scope.$watch&lt;/a&gt;&lt;code&gt;(watchExpression, listener)&lt;/code&gt;) detects a change when the whole value returned by the watch expression switches to a new value. If the value is an array or an object, changes inside it are not detected. This is the most efficient strategy.</source>
          <target state="translated">观看&lt;em&gt;通过引用&lt;/em&gt;（&lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24watch.html&quot;&gt;范围。$手表&lt;/a&gt; &lt;code&gt;(watchExpression, listener)&lt;/code&gt; ）检测到变化时的钟表表达式返回的整个值切换到一个新的值。如果值是数组或对象，则不会检测到其内部的更改。这是最有效的策略。</target>
        </trans-unit>
        <trans-unit id="473a9c40eedd5fb0f115c451dd30526bd2c650ad" translate="yes" xml:space="preserve">
          <source>Watching &lt;em&gt;by value&lt;/em&gt; (&lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24watch.html&quot;&gt;scope.$watch&lt;/a&gt;&lt;code&gt;(watchExpression, listener, true)&lt;/code&gt;) detects any change in an arbitrarily nested data structure. It is the most powerful change detection strategy, but also the most expensive. A full traversal of the nested data structure is needed on each digest, and a full copy of it needs to be held in memory.</source>
          <target state="translated">看&lt;em&gt;由值&lt;/em&gt;（&lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24watch.html&quot;&gt;范围。$手表&lt;/a&gt; &lt;code&gt;(watchExpression, listener, true)&lt;/code&gt; ）检测在任意嵌套的数据结构的任何改变。它是最强大的变更检测策略，但也是最昂贵的。每个摘要都需要对嵌套数据结构进行完整遍历，并且需要将其完整副本保留在内存中。</target>
        </trans-unit>
        <trans-unit id="2af6bb4a94b9a1cb0fd67c6d5fc0095196e94650" translate="yes" xml:space="preserve">
          <source>Watching &lt;em&gt;collection contents&lt;/em&gt; (&lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24watchCollection.html&quot;&gt;scope.$watchCollection&lt;/a&gt;&lt;code&gt;(watchExpression, listener)&lt;/code&gt;) detects changes that occur inside an array or an object: When items are added, removed, or reordered. The detection is shallow - it does not reach into nested collections. Watching collection contents is more expensive than watching by reference, because copies of the collection contents need to be maintained. However, the strategy attempts to minimize the amount of copying required.</source>
          <target state="translated">看&lt;em&gt;收集内容&lt;/em&gt;（&lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24watchCollection.html&quot;&gt;。范围$ watchCollection &lt;/a&gt; &lt;code&gt;(watchExpression, listener)&lt;/code&gt; ）检测的阵列或对象内所发生的变化：当添加的物品，移除或重新排序。检测很浅-不会进入嵌套集合。观看收藏内容比通过参考观看要贵得多，因为需要维护收藏内容的副本。但是，该策略试图使所需的复制量最小化。</target>
        </trans-unit>
        <trans-unit id="e57f32a79f955dc80e7b98c93ef9c5dff9e8992b" translate="yes" xml:space="preserve">
          <source>We also &lt;strong&gt;must&lt;/strong&gt; include animations for the views that are being entered and removed (otherwise anchoring wouldn't be possible since the new view would be inserted right away).</source>
          <target state="translated">我们还&lt;strong&gt;必须&lt;/strong&gt;为要输入和删除的视图添加动画（否则将无法进行锚定，因为将立即插入新视图）。</target>
        </trans-unit>
        <trans-unit id="48d50b84720d06df376f308744283f116a6daf37" translate="yes" xml:space="preserve">
          <source>We also changed all expressions in the page to read and write variables within that controller instance by prefixing them with &lt;code&gt;invoice.&lt;/code&gt; . The possible currencies are defined in the controller and added to the template using &lt;a href=&quot;../api/ng/directive/ngrepeat&quot;&gt;&lt;code&gt;ng-repeat&lt;/code&gt;&lt;/a&gt;. As the controller contains a &lt;code&gt;total&lt;/code&gt; function we are also able to bind the result of that function to the DOM using &lt;code&gt;{{ invoice.total(...) }}&lt;/code&gt;.</source>
          <target state="translated">我们还更改了页面中的所有表达式，以在控制器实例中通过在其前面加上 &lt;code&gt;invoice.&lt;/code&gt; 变量来读写变量。。可能的货币在控制器中定义，并使用&lt;a href=&quot;../api/ng/directive/ngrepeat&quot;&gt; &lt;code&gt;ng-repeat&lt;/code&gt; &lt;/a&gt;添加到模板中。由于控制器包含一个 &lt;code&gt;total&lt;/code&gt; 函数，因此我们也可以使用 &lt;code&gt;{{ invoice.total(...) }}&lt;/code&gt; 将该函数的结果绑定到DOM 。</target>
        </trans-unit>
        <trans-unit id="e45e195299e27595cc434211c5af3181e81a8bd7" translate="yes" xml:space="preserve">
          <source>We are now ready to launch unicorns, but notice that UnicornLauncher depends on our &lt;code&gt;apiToken&lt;/code&gt;. We can satisfy this dependency on &lt;code&gt;apiToken&lt;/code&gt; using the Factory recipe:</source>
          <target state="translated">我们现在可以启动独角兽了，但是请注意UnicornLauncher取决于我们的 &lt;code&gt;apiToken&lt;/code&gt; 。我们可以使用Factory配方满足对 &lt;code&gt;apiToken&lt;/code&gt; 的依赖：</target>
        </trans-unit>
        <trans-unit id="ac1ea31a9d43166687a50ed3692e05ce4153dc7a" translate="yes" xml:space="preserve">
          <source>We are using the &lt;a href=&quot;../service/%24sce&quot;&gt;$sce&lt;/a&gt; service here and include the &lt;a href=&quot;../../ngsanitize&quot;&gt;$sanitize&lt;/a&gt; module to automatically remove &quot;bad&quot; content like inline event listener (e.g. &lt;code&gt;&amp;lt;span onclick=&quot;...&quot;&amp;gt;&lt;/code&gt;). However, as we are using &lt;code&gt;$sce&lt;/code&gt; the model can still decide to provide unsafe content if it marks that content using the &lt;code&gt;$sce&lt;/code&gt; service.</source>
          <target state="translated">我们在这里使用&lt;a href=&quot;../service/%24sce&quot;&gt;$ sce&lt;/a&gt;服务，并包括&lt;a href=&quot;../../ngsanitize&quot;&gt;$ sanitize&lt;/a&gt;模块来自动删除&amp;ldquo;不良&amp;rdquo;内容，例如内联事件监听器（例如 &lt;code&gt;&amp;lt;span onclick=&quot;...&quot;&amp;gt;&lt;/code&gt; ）。但是，当我们使用 &lt;code&gt;$sce&lt;/code&gt; ，如果模型使用 &lt;code&gt;$sce&lt;/code&gt; 服务标记了不安全的内容，则该模型仍可以决定提供不安全的内容。</target>
        </trans-unit>
        <trans-unit id="0ddbe3412df53532770a5870b95d26cf007568fd" translate="yes" xml:space="preserve">
          <source>We attach our controller to the DOM using the &lt;code&gt;ng-controller&lt;/code&gt; directive. The &lt;code&gt;greeting&lt;/code&gt; property can now be data-bound to the template:</source>
          <target state="translated">我们使用 &lt;code&gt;ng-controller&lt;/code&gt; 指令将控制器附加到DOM 。现在， &lt;code&gt;greeting&lt;/code&gt; 属性可以绑定到模板：</target>
        </trans-unit>
        <trans-unit id="ddeae2cedf9a788113de391be2a82b5796c82f33" translate="yes" xml:space="preserve">
          <source>We can also make use of &lt;strong&gt;CSS Keyframes&lt;/strong&gt; by referencing the keyframe animation within the starting CSS class:</source>
          <target state="translated">我们还可以通过引用起始CSS类中的关键帧动画来使用&lt;strong&gt;CSS关键&lt;/strong&gt;帧：</target>
        </trans-unit>
        <trans-unit id="a40a9d552fb5bc988807680efe848c3a0e26cf2b" translate="yes" xml:space="preserve">
          <source>We can also make use of CSS keyframes by placing them within the CSS classes.</source>
          <target state="translated">我们也可以通过将CSS关键帧放在CSS类中来利用。</target>
        </trans-unit>
        <trans-unit id="844c06e399ab04678015537239ffb4d4f3dc9652" translate="yes" xml:space="preserve">
          <source>We can now attach a transition onto the &lt;code&gt;.banner.ng-anchor&lt;/code&gt; CSS class and then ngAnimate will handle the entire transition for us as well as the addition and removal of any changes of CSS classes between the elements:</source>
          <target state="translated">现在，我们可以将过渡添加到 &lt;code&gt;.banner.ng-anchor&lt;/code&gt; CSS类上，然后ngAnimate将为我们处理整个过渡以及在元素之间添加和删除CSS类的任何更改：</target>
        </trans-unit>
        <trans-unit id="4e80494b0409a0d993fa81a7d1f333388f5be423" translate="yes" xml:space="preserve">
          <source>We can show this by adding another property, &lt;code&gt;vojta&lt;/code&gt;, to our scope and trying to access it from within our directive's template:</source>
          <target state="translated">我们可以通过在我们的范围内添加另一个属性 &lt;code&gt;vojta&lt;/code&gt; 并尝试从指令的模板中访问它来显示这一点：</target>
        </trans-unit>
        <trans-unit id="fce0871e367a5372f3bc98dd4c0252dc8c77c3c6" translate="yes" xml:space="preserve">
          <source>We can specify functions to run at configuration and run time for a module by calling the &lt;code&gt;config&lt;/code&gt; and &lt;code&gt;run&lt;/code&gt; methods. These functions are injectable with dependencies just like the factory functions above.</source>
          <target state="translated">我们可以通过调用 &lt;code&gt;config&lt;/code&gt; 和 &lt;code&gt;run&lt;/code&gt; 方法来指定要在模块的配置和运行时运行的函数。这些函数可以注入依赖项，就像上面的工厂函数一样。</target>
        </trans-unit>
        <trans-unit id="e36459843d047d9df4a4211084dc5c402b38cf07" translate="yes" xml:space="preserve">
          <source>We can then use the component like this:</source>
          <target state="translated">我们就可以这样使用这个组件。</target>
        </trans-unit>
        <trans-unit id="21324a462f2b8d5e0c7c5b4446052c135414c236" translate="yes" xml:space="preserve">
          <source>We could then configure the unicornLauncherProvider like this:</source>
          <target state="translated">然后我们可以像这样配置unicornLauncherProvider。</target>
        </trans-unit>
        <trans-unit id="ac57f6df21dcb977cf78d72cfa768c34c7356753" translate="yes" xml:space="preserve">
          <source>We create an &lt;a href=&quot;module&quot;&gt;AngularJS Module&lt;/a&gt;, &lt;code&gt;myApp&lt;/code&gt;, for our application. Then we add the controller's constructor function to the module using the &lt;code&gt;.controller()&lt;/code&gt; method. This keeps the controller's constructor function out of the global scope.</source>
          <target state="translated">我们创建一个&lt;a href=&quot;module&quot;&gt;AngularJS模块&lt;/a&gt;， &lt;code&gt;myApp&lt;/code&gt; ，我们的应用程序。然后，使用 &lt;code&gt;.controller()&lt;/code&gt; 方法将控制器的构造函数添加到模块中。这使控制器的构造函数不属于全局范围。</target>
        </trans-unit>
        <trans-unit id="90dc4f28f2aa88baf0a0053350aecee511d1b878" translate="yes" xml:space="preserve">
          <source>We do our best to intercept calls to &quot;unimplemented&quot; methods, but since the list of methods is incomplete we might be missing some non-standard methods. This can result in errors like: &quot;Date.prototype.foo called on incompatible Object&quot;.</source>
          <target state="translated">我们尽力拦截对 &quot;未实现 &quot;方法的调用,但由于方法列表不完整,我们可能会遗漏一些非标准方法。这可能会导致错误,比如 &quot;Date.prototype.foo在不兼容的对象上被调用&quot;.</target>
        </trans-unit>
        <trans-unit id="e6fc82dc5284ffbf38ea98e85e63bcc39b7510a8" translate="yes" xml:space="preserve">
          <source>We have built &lt;a href=&quot;https://github.com/angular/protractor&quot;&gt;Protractor&lt;/a&gt;, an end to end test runner which simulates user interactions that will help you verify the health of your AngularJS application.</source>
          <target state="translated">我们已经构建了&lt;a href=&quot;https://github.com/angular/protractor&quot;&gt;Protractor&lt;/a&gt;，这是一个端到端的测试运行器，它可以模拟用户交互，从而帮助您验证AngularJS应用程序的运行状况。</target>
        </trans-unit>
        <trans-unit id="eff730b8cb2d8bb324e06d0e737eb8eccaed14f5" translate="yes" xml:space="preserve">
          <source>We have set up a guide to many resources provided by the community, where you can find lots of additional information and material on these topics, a list of complimentary libraries, and much more.</source>
          <target state="translated">我们为社区提供的许多资源设置了一个指南,在这里你可以找到许多关于这些主题的额外信息和材料,免费图书馆的列表,以及更多。</target>
        </trans-unit>
        <trans-unit id="ca17b1356cdf6d9a99a47902186386c56a19dd9d" translate="yes" xml:space="preserve">
          <source>We have used an &lt;strong&gt;inline injection annotation&lt;/strong&gt; to explicitly specify the dependency of the Controller on the &lt;code&gt;$scope&lt;/code&gt; service provided by AngularJS. See the guide on &lt;a href=&quot;di&quot;&gt;Dependency Injection&lt;/a&gt; for more information.</source>
          <target state="translated">我们使用了&lt;strong&gt;内联注入注释&lt;/strong&gt;来显式指定Controller对AngularJS提供的 &lt;code&gt;$scope&lt;/code&gt; 服务的依赖关系。有关更多信息，请参见&lt;a href=&quot;di&quot;&gt;依赖注入&lt;/a&gt;指南。</target>
        </trans-unit>
        <trans-unit id="9ca11f9dea4678a83cbe765017c379b901fb7de5" translate="yes" xml:space="preserve">
          <source>We inject the $compile service and $rootScope before each jasmine test. The $compile service is used to render the aGreatEye directive. After rendering the directive we ensure that the directive has replaced the content and &quot;lidless, wreathed in flame, 2 times&quot; is present.</source>
          <target state="translated">我们在每次jasmine测试前注入$compile服务和$rootScope。$compile服务用于渲染aGreatEye指令。在渲染指令后,我们确保指令已经替换了内容,并且 &quot;无睑,被火焰包围,2次 &quot;是存在的。</target>
        </trans-unit>
        <trans-unit id="ae572490bcf1a384d00d809014f9ef3a389a0f5d" translate="yes" xml:space="preserve">
          <source>We moved the &lt;code&gt;convertCurrency&lt;/code&gt; function and the definition of the existing currencies into the new file &lt;code&gt;finance2.js&lt;/code&gt;. But how does the controller get a hold of the now separated function?</source>
          <target state="translated">我们将 &lt;code&gt;convertCurrency&lt;/code&gt; 函数和现有货币的定义移至新文件 &lt;code&gt;finance2.js&lt;/code&gt; 中。但是控制器如何控制现在分离的功能？</target>
        </trans-unit>
        <trans-unit id="023a9b93224bd84cddfe8a629e03f8aa9c858380" translate="yes" xml:space="preserve">
          <source>We register an event &lt;code&gt;element.on('$destroy', ...)&lt;/code&gt;. What fires this &lt;code&gt;$destroy&lt;/code&gt; event?</source>
          <target state="translated">我们注册一个事件 &lt;code&gt;element.on('$destroy', ...)&lt;/code&gt; 。是什么触发此 &lt;code&gt;$destroy&lt;/code&gt; 事件？</target>
        </trans-unit>
        <trans-unit id="9d48b2c91f5a6af75293c06facac5a89ab2fa1aa" translate="yes" xml:space="preserve">
          <source>We saw earlier how to use &lt;code&gt;=attr&lt;/code&gt; in the &lt;code&gt;scope&lt;/code&gt; option, but in the above example, we're using &lt;code&gt;&amp;amp;attr&lt;/code&gt; instead. The &lt;code&gt;&amp;amp;&lt;/code&gt; binding allows a directive to trigger evaluation of an expression in the context of the original scope, at a specific time. Any legal expression is allowed, including an expression which contains a function call. Because of this, &lt;code&gt;&amp;amp;&lt;/code&gt; bindings are ideal for binding callback functions to directive behaviors.</source>
          <target state="translated">我们之前已经看到了如何在 &lt;code&gt;scope&lt;/code&gt; 选项中使用 &lt;code&gt;=attr&lt;/code&gt; ，但是在上面的示例中，我们使用的是 &lt;code&gt;&amp;amp;attr&lt;/code&gt; 。所述 &lt;code&gt;&amp;amp;&lt;/code&gt; 绑定允许一个指令以在原始范围的上下文中表达的触发评价，在特定的时间。允许使用任何合法表达式，包括包含函数调用的表达式。因此， &lt;code&gt;&amp;amp;&lt;/code&gt; 绑定是将回调函数绑定到指令行为的理想选择。</target>
        </trans-unit>
        <trans-unit id="d1926692f60d5568acf1d0bee7f667e3d7c0c99e" translate="yes" xml:space="preserve">
          <source>We want to run the function we pass by invoking it from the directive's scope, but have it run in the context of the scope where it's registered.</source>
          <target state="translated">我们希望通过从指令的作用域中调用函数来运行我们传递的函数,但要在它注册的作用域的上下文中运行。</target>
        </trans-unit>
        <trans-unit id="e8e0776ae3afa2fad60ff172ae662a5d77e9f6f7" translate="yes" xml:space="preserve">
          <source>We would expect AngularJS to be able to bind to this, but when we check the console we see something like &lt;code&gt;Error: Invalid value for attribute cx=&quot;{{cx}}&quot;&lt;/code&gt;. Because of the SVG DOM API's restrictions, you cannot simply write &lt;code&gt;cx=&quot;{{cx}}&quot;&lt;/code&gt;.</source>
          <target state="translated">我们希望AngularJS能够绑定到它，但是当我们检查控制台时，我们会看到类似 &lt;code&gt;Error: Invalid value for attribute cx=&quot;{{cx}}&quot;&lt;/code&gt; 。由于SVG DOM API的限制，您不能简单地编写 &lt;code&gt;cx=&quot;{{cx}}&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="252941e0a55657728f76a621bbe228cd9bed318b" translate="yes" xml:space="preserve">
          <source>We'll go over a few common examples of directives, then dive deep into the different options and compilation process.</source>
          <target state="translated">我们将介绍几个常见的指令示例,然后深入了解不同的选项和编译过程。</target>
        </trans-unit>
        <trans-unit id="3db74eddb5abe4c6d69ca5073939b2ffdcd30492" translate="yes" xml:space="preserve">
          <source>We've just learned how AngularJS splits the life-cycle into configuration phase and run phase and how you can provide configuration to your application via the config function. Since the config function runs in the configuration phase when no services are available, it doesn't have access even to simple value objects created via the Value recipe.</source>
          <target state="translated">我们刚刚学习了AngularJS如何将生命周期分为配置阶段和运行阶段,以及如何通过config函数为应用提供配置。由于config函数在配置阶段运行时没有服务,所以它甚至无法访问通过Value配方创建的简单值对象。</target>
        </trans-unit>
        <trans-unit id="e7c295f69a771afaeb6fd0ffad7c2c66be9dc3e3" translate="yes" xml:space="preserve">
          <source>We've moved the duplication out and into the &lt;code&gt;beforeEach&lt;/code&gt; block. Each individual test now only contains the code specific to that test, and not code that is general across all tests. As you expand your tests, keep an eye out for locations where you can use &lt;code&gt;beforeEach&lt;/code&gt; to tidy up tests. &lt;code&gt;beforeEach&lt;/code&gt; isn't the only function of this sort that Jasmine provides, and the &lt;a href=&quot;http://jasmine.github.io/1.3/introduction.html#section-Setup_and_Teardown&quot;&gt;documentation lists the others&lt;/a&gt;.</source>
          <target state="translated">我们已经将重复项移到了 &lt;code&gt;beforeEach&lt;/code&gt; 块中。现在，每个单独的测试仅包含特定于该测试的代码，而不包含所有测试中通用的代码。当你扩大你的测试，留意了地点，你可以使用 &lt;code&gt;beforeEach&lt;/code&gt; 收拾测试。 &lt;code&gt;beforeEach&lt;/code&gt; 并不是Jasmine提供的这种唯一功能，并且&lt;a href=&quot;http://jasmine.github.io/1.3/introduction.html#section-Setup_and_Teardown&quot;&gt;文档列出了其他功能&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a5f49816240da5c5e93a09a217e5e15251e2f600" translate="yes" xml:space="preserve">
          <source>We've seen that you can pass in models to a directive using the isolate scope, but sometimes it's desirable to be able to pass in an entire template rather than a string or an object. Let's say that we want to create a &quot;dialog box&quot; component. The dialog box should be able to wrap any arbitrary content.</source>
          <target state="translated">我们已经看到,你可以使用隔离作用域将模型传入指令,但有时希望能够传入整个模板,而不是一个字符串或一个对象。比方说,我们想创建一个 &quot;对话框 &quot;组件。对话框应该能够包裹任何任意的内容。</target>
        </trans-unit>
        <trans-unit id="abb1d6054f0ea55e7ce30bf24912bdf732c1589f" translate="yes" xml:space="preserve">
          <source>Web browsers are sometimes picky about what values they consider valid for attributes.</source>
          <target state="translated">Web浏览器有时会对他们认为有效的属性值进行挑剔。</target>
        </trans-unit>
        <trans-unit id="4f9f39d112f26b6b483e5752ed5019d0587ba101" translate="yes" xml:space="preserve">
          <source>WebAIM</source>
          <target state="translated">WebAIM</target>
        </trans-unit>
        <trans-unit id="216b85a80c0458fafdebd3ba9ff38b76e657305e" translate="yes" xml:space="preserve">
          <source>What are Directives?</source>
          <target state="translated">什么是指令?</target>
        </trans-unit>
        <trans-unit id="12c179e827df1ac7383cddb213d45ff08f32ebad" translate="yes" xml:space="preserve">
          <source>What are decorators?</source>
          <target state="translated">什么是装饰师?</target>
        </trans-unit>
        <trans-unit id="f9f442481556abfd102cc7155daba690e1a9a733" translate="yes" xml:space="preserve">
          <source>What changed?</source>
          <target state="translated">是什么改变了?</target>
        </trans-unit>
        <trans-unit id="6352305971f4abc98ce5ffab5abff8ed01207f3c" translate="yes" xml:space="preserve">
          <source>What changed? Our &lt;code&gt;currencyConverter&lt;/code&gt; service of the &lt;code&gt;finance&lt;/code&gt; module now uses the &lt;a href=&quot;../api/ng/service/%24http&quot;&gt;&lt;code&gt;$http&lt;/code&gt;&lt;/a&gt;, a built-in service provided by AngularJS for accessing a server backend. &lt;code&gt;$http&lt;/code&gt; is a wrapper around &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;http://en.wikipedia.org/wiki/JSONP&quot;&gt;JSONP&lt;/a&gt; transports.</source>
          <target state="translated">发生了什么变化？现在，我们的 &lt;code&gt;finance&lt;/code&gt; 模块的 &lt;code&gt;currencyConverter&lt;/code&gt; 服务使用AngularJS提供的内置服务&lt;a href=&quot;../api/ng/service/%24http&quot;&gt; &lt;code&gt;$http&lt;/code&gt; &lt;/a&gt;来访问服务器后端。 &lt;code&gt;$http&lt;/code&gt; 是&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot;&gt; &lt;code&gt;XMLHttpRequest&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;http://en.wikipedia.org/wiki/JSONP&quot;&gt;JSONP&lt;/a&gt;传输的包装。</target>
        </trans-unit>
        <trans-unit id="c9eedc43181be3fbaa803cb63186981f99ccc887" translate="yes" xml:space="preserve">
          <source>What does it not do?</source>
          <target state="translated">它不做什么?</target>
        </trans-unit>
        <trans-unit id="3cfacea0972e3e84df3a18186fd33468ca795ebb" translate="yes" xml:space="preserve">
          <source>What does this &lt;code&gt;transclude&lt;/code&gt; option do, exactly? &lt;code&gt;transclude&lt;/code&gt; makes the contents of a directive with this option have access to the scope &lt;strong&gt;outside&lt;/strong&gt; of the directive rather than inside.</source>
          <target state="translated">确切地说，这个 &lt;code&gt;transclude&lt;/code&gt; 选项有什么作用？ &lt;code&gt;transclude&lt;/code&gt; 使具有此选项的指令的内容可以访问指令&lt;strong&gt;外部&lt;/strong&gt;而不是内部的范围。</target>
        </trans-unit>
        <trans-unit id="ada0e0f2c7af87060d54e95e4a96fd7138d3489e" translate="yes" xml:space="preserve">
          <source>What is AngularJS?</source>
          <target state="translated">什么是AngularJS?</target>
        </trans-unit>
        <trans-unit id="447644911a568d0214e937333a19ccc004de8c3e" translate="yes" xml:space="preserve">
          <source>What is a Module?</source>
          <target state="translated">什么是模块?</target>
        </trans-unit>
        <trans-unit id="fe08c3c8244699c5a8b273b2cab8b4200356ffcb" translate="yes" xml:space="preserve">
          <source>What is a locale ID?</source>
          <target state="translated">什么是locale ID?</target>
        </trans-unit>
        <trans-unit id="beba7ea743f1dc2173ee282f653943a35f2a106b" translate="yes" xml:space="preserve">
          <source>What is ngMessageFormat?</source>
          <target state="translated">什么是ngMessageFormat?</target>
        </trans-unit>
        <trans-unit id="3943480da5771dbbb46c706aaaea42bf22c5390d" translate="yes" xml:space="preserve">
          <source>What is returned</source>
          <target state="translated">返回的内容</target>
        </trans-unit>
        <trans-unit id="fbe9fcf5a0f59f8dbc56de5c706eccfe1288f8b9" translate="yes" xml:space="preserve">
          <source>What trusted context types are supported?</source>
          <target state="translated">支持哪些可信上下文类型?</target>
        </trans-unit>
        <trans-unit id="a4e67c138282d3bd3498f65dbfecf946d52210e9" translate="yes" xml:space="preserve">
          <source>What we want to be able to do is separate the scope inside a directive from the scope outside, and then map the outer scope to a directive's inner scope. We can do this by creating what we call an &lt;strong&gt;isolate scope&lt;/strong&gt;. To do this, we can use a &lt;a href=&quot;../api/ng/service/%24compile#-scope-.html&quot;&gt;directive's &lt;code&gt;scope&lt;/code&gt;&lt;/a&gt; option:</source>
          <target state="translated">我们想要做的是将指令内部的作用域与外部作用域分开，然后将外部作用域映射到指令的内部作用域。我们可以通过创建&lt;strong&gt;隔离范围&lt;/strong&gt;来做到这一点。为此，我们可以使用&lt;a href=&quot;../api/ng/service/%24compile#-scope-.html&quot;&gt;指令的 &lt;code&gt;scope&lt;/code&gt; &lt;/a&gt;选项：</target>
        </trans-unit>
        <trans-unit id="be6b5657e71d140a3fc95978d677de4ea44df671" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;$animate&lt;/code&gt; is called it returns a promise that can be used to capture when the animation has ended. Therefore if we were to trigger an animation (within our directive code) then we can continue performing directive and scope related activities after the animation has ended by chaining onto the returned promise that animation method returns.</source>
          <target state="translated">当 &lt;code&gt;$animate&lt;/code&gt; 被称为它返回时，可以使用动画已经结束拍摄的承诺。因此，如果要触发动画（在指令代码内），则可以在动画结束后继续执行与指令和范围相关的活动，方法是链接到动画方法返回的承诺中。</target>
        </trans-unit>
        <trans-unit id="e5e660649c875315903afc08f2df11dfa21f3355" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;$setViewValue&lt;/code&gt; is called, the new &lt;code&gt;value&lt;/code&gt; will be staged for committing through the &lt;code&gt;$parsers&lt;/code&gt; and &lt;code&gt;$validators&lt;/code&gt; pipelines. If there are no special &lt;a href=&quot;../directive/ngmodeloptions&quot;&gt;&lt;code&gt;ngModelOptions&lt;/code&gt;&lt;/a&gt; specified then the staged value is sent directly for processing through the &lt;code&gt;$parsers&lt;/code&gt; pipeline. After this, the &lt;code&gt;$validators&lt;/code&gt; and &lt;code&gt;$asyncValidators&lt;/code&gt; are called and the value is applied to &lt;code&gt;$modelValue&lt;/code&gt;. Finally, the value is set to the &lt;strong&gt;expression&lt;/strong&gt; specified in the &lt;code&gt;ng-model&lt;/code&gt; attribute and all the registered change listeners, in the &lt;code&gt;$viewChangeListeners&lt;/code&gt; list are called.</source>
          <target state="translated">当 &lt;code&gt;$setViewValue&lt;/code&gt; 被调用时，新的 &lt;code&gt;value&lt;/code&gt; 将上演过犯 &lt;code&gt;$parsers&lt;/code&gt; 和 &lt;code&gt;$validators&lt;/code&gt; 管道。如果没有指定特殊的&lt;a href=&quot;../directive/ngmodeloptions&quot;&gt; &lt;code&gt;ngModelOptions&lt;/code&gt; ,&lt;/a&gt;则暂存值将直接通过 &lt;code&gt;$parsers&lt;/code&gt; 管道发送以进行处理。之后，将调用 &lt;code&gt;$validators&lt;/code&gt; 和 &lt;code&gt;$asyncValidators&lt;/code&gt; 并将该值应用于 &lt;code&gt;$modelValue&lt;/code&gt; 。最后，将该值设置为 &lt;code&gt;ng-model&lt;/code&gt; 属性中指定的&lt;strong&gt;表达式&lt;/strong&gt;，并调用 &lt;code&gt;$viewChangeListeners&lt;/code&gt; 列表中的所有已注册的更改侦听器。</target>
        </trans-unit>
        <trans-unit id="15cbb91f0e77da9c30b5e74feba1ad5742a72dcd" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;objectEquality == true&lt;/code&gt;, inequality of the &lt;code&gt;watchExpression&lt;/code&gt; is determined according to the &lt;a href=&quot;../function/angular.equals&quot;&gt;&lt;code&gt;angular.equals&lt;/code&gt;&lt;/a&gt; function. To save the value of the object for later comparison, the &lt;a href=&quot;../function/angular.copy&quot;&gt;&lt;code&gt;angular.copy&lt;/code&gt;&lt;/a&gt; function is used. This therefore means that watching complex objects will have adverse memory and performance implications.</source>
          <target state="translated">当 &lt;code&gt;objectEquality == true&lt;/code&gt; ，所述的不等式 &lt;code&gt;watchExpression&lt;/code&gt; 根据确定&lt;a href=&quot;../function/angular.equals&quot;&gt; &lt;code&gt;angular.equals&lt;/code&gt; &lt;/a&gt;功能。为了保存对象的值以供以后比较，使用了&lt;a href=&quot;../function/angular.copy&quot;&gt; &lt;code&gt;angular.copy&lt;/code&gt; &lt;/a&gt;函数。因此，这意味着观看复杂的对象将对内存和性能产生不利影响。</target>
        </trans-unit>
        <trans-unit id="8ce2cc0dab402897ec4863ce029e781d2d6d52fb" translate="yes" xml:space="preserve">
          <source>When AngularJS compiles the HTML, it processes the &lt;code&gt;ng-controller&lt;/code&gt; directive, which in turn asks the injector to create an instance of the controller and its dependencies.</source>
          <target state="translated">当AngularJS编译HTML时，它会处理 &lt;code&gt;ng-controller&lt;/code&gt; 指令，该指令又要求注入器创建控制器及其依赖项的实例。</target>
        </trans-unit>
        <trans-unit id="ec9b10f946fc02c68139f8c80da5ef591eb2ef7e" translate="yes" xml:space="preserve">
          <source>When AngularJS evaluates &lt;code&gt;{{name}}&lt;/code&gt;, it first looks at the scope associated with the given element for the &lt;code&gt;name&lt;/code&gt; property. If no such property is found, it searches the parent scope and so on until the root scope is reached. In JavaScript this behavior is known as prototypical inheritance, and child scopes prototypically inherit from their parents.</source>
          <target state="translated">当AngularJS评估 &lt;code&gt;{{name}}&lt;/code&gt; 时，它首先查看与给定元素关联的 &lt;code&gt;name&lt;/code&gt; 属性的范围。如果找不到这样的属性，它将搜索父范围，依此类推，直到达到根范围为止。在JavaScript中，此行为称为原型继承，子作用域原型也从其父级继承。</target>
        </trans-unit>
        <trans-unit id="51c935ad5701756b22938226bcc6b67e883b4629" translate="yes" xml:space="preserve">
          <source>When DOM elements are re-used, ngRepeat updates the scope for the element, which will automatically update any active bindings on the template. However, other functionality will not be updated, because the element is not re-created:</source>
          <target state="translated">当DOM元素被重新使用时,ngRepeat会更新该元素的作用域,从而自动更新模板上的任何活动绑定。然而,其他功能不会被更新,因为元素没有被重新创建。</target>
        </trans-unit>
        <trans-unit id="185ed32d1839cf6b6b86790a50f091c5cad18d3a" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;replace&lt;/code&gt; directive encounters the same attribute on the original and the replace node, it will simply deduplicate the attribute and join the values with a space or with a &lt;code&gt;;&lt;/code&gt; in case of the &lt;code&gt;style&lt;/code&gt; attribute.</source>
          <target state="translated">当 &lt;code&gt;replace&lt;/code&gt; 指令在原始节点和replace节点上遇到相同的属性时，它将简单地对属性进行重复数据删除，并使用空格或 &lt;code&gt;;&lt;/code&gt; 将值连接在一起。如果是 &lt;code&gt;style&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="5c230d77dd585240729675f16f4ddd67901e2eba" translate="yes" xml:space="preserve">
          <source>When a directive requests transclusion, the compiler extracts its contents and provides a &lt;strong&gt;transclusion function&lt;/strong&gt; to the directive's &lt;code&gt;link&lt;/code&gt; function and &lt;code&gt;controller&lt;/code&gt;. This transclusion function is a special &lt;strong&gt;linking function&lt;/strong&gt; that will return the compiled contents linked to a new transclusion scope.</source>
          <target state="translated">当指令请求包含时，编译器将提取其内容，并将&lt;strong&gt;包含功能&lt;/strong&gt;提供给该指令的 &lt;code&gt;link&lt;/code&gt; 函数和 &lt;code&gt;controller&lt;/code&gt; 。此包含函数是一个特殊的&lt;strong&gt;链接函数&lt;/strong&gt;，它将返回链接到新的包含范围的已编译内容。</target>
        </trans-unit>
        <trans-unit id="27ba11fbb2203f0c5d97308aa2a93fd81f5c7f9e" translate="yes" xml:space="preserve">
          <source>When a user clicks on this link,</source>
          <target state="translated">当用户点击这个链接时。</target>
        </trans-unit>
        <trans-unit id="fbf62f2a97f03d4ac746191d9d45dd4869d7d443" translate="yes" xml:space="preserve">
          <source>When an &lt;code&gt;offset&lt;/code&gt; is specified, the matching works as follows. First, the exact value of the AngularJS expression is matched against the exact matches (i.e. &lt;code&gt;=N&lt;/code&gt; selectors) to find a match. If there is one, that message is used. If there was no match, then the offset value is subtracted from the value of the expression and locale specific pluralization rules are applied to this new value to obtain its plural category (such as &amp;ldquo;one&amp;rdquo;, &amp;ldquo;few&amp;rdquo;, &amp;ldquo;many&amp;rdquo;, etc.) and a match is attempted against the keyword selectors and the matching message is used. If there was no match, then the &amp;ldquo;other&amp;rdquo; category (required) is used. The value of the &lt;code&gt;#&lt;/code&gt; character inside a message is the value of original expression reduced by the offset value that was specified.</source>
          <target state="translated">当 &lt;code&gt;offset&lt;/code&gt; 被指定时，所述匹配的工作原理如下。首先，将AngularJS表达式的精确值与精确匹配项（即 &lt;code&gt;=N&lt;/code&gt; 选择器）进行匹配以找到匹配项。如果有一个，则使用该消息。如果不匹配，则从表达式的值中减去偏移值，并将特定于语言环境的复数规则应用于此新值以获得其复数类别（例如&amp;ldquo;一个&amp;rdquo;，&amp;ldquo;少数&amp;rdquo;，&amp;ldquo;许多&amp;rdquo;等） 。），并尝试与关键字选择器进行匹配，并使用匹配的消息。如果不存在匹配项，则使用&amp;ldquo;其他&amp;rdquo;类别（必填）。消息中的 &lt;code&gt;#&lt;/code&gt; 字符的值是原始表达式的值减去指定的偏移值。</target>
        </trans-unit>
        <trans-unit id="a149b30987e7663899511dac68ffedfef81a9f01" translate="yes" xml:space="preserve">
          <source>When an AngularJS application needs some data from a server, it calls the $http service, which sends the request to a real server using $httpBackend service. With dependency injection, it is easy to inject $httpBackend mock (which has the same API as $httpBackend) and use it to verify the requests and respond with some testing data without sending a request to a real server.</source>
          <target state="translated">当一个AngularJS应用需要从服务器上获取一些数据时,它会调用$http服务,它使用$httpBackend服务将请求发送到真正的服务器。通过依赖注入,可以很容易地注入$httpBackend mock(它与$httpBackend具有相同的API),并使用它来验证请求并响应一些测试数据,而无需向真实服务器发送请求。</target>
        </trans-unit>
        <trans-unit id="0819d9d7539f9a79a347a5055715a2649bfc1a04" translate="yes" xml:space="preserve">
          <source>When an AngularJS application starts with a given application module, AngularJS creates a new instance of injector, which in turn creates a registry of recipes as a union of all recipes defined in the core &quot;ng&quot; module, application module and its dependencies. The injector then consults the recipe registry when it needs to create an object for your application.</source>
          <target state="translated">当一个AngularJS应用用一个给定的应用模块启动时,AngularJS会创建一个新的注入器实例,进而创建一个配方注册表,作为核心 &quot;ng &quot;模块、应用模块及其依赖关系中定义的所有配方的联合。然后,当注入器需要为你的应用程序创建一个对象时,它就会参考配方注册表。</target>
        </trans-unit>
        <trans-unit id="65f2bf10923606bb898bed54285676cbbd6a723c" translate="yes" xml:space="preserve">
          <source>When an anchor animation occurs, ngAnimate will clone the starting element and position it exactly where the starting element is located on screen via absolute positioning. The cloned element will be placed inside of the root element of the application (where ng-app was defined) and all of the CSS classes of the starting element will be applied. The element will then animate into the &lt;code&gt;out&lt;/code&gt; and &lt;code&gt;in&lt;/code&gt; animations and will eventually reach the coordinates and match the dimensions of the destination element. During the entire animation a CSS class of &lt;code&gt;.ng-animate-shim&lt;/code&gt; will be applied to both the starting and destination elements in order to hide them from being visible (the CSS styling for the class is: &lt;code&gt;visibility:hidden&lt;/code&gt;). Once the anchor reaches its destination then it will be removed and the destination element will become visible since the shim class will be removed.</source>
          <target state="translated">发生锚动画时，ngAnimate将克隆起始元素，并通过绝对定位将其精确定位到屏幕上起始元素所在的位置。克隆的元素将放置在应用程序的根元素（定义ng-app）的内部，并且将应用起始元素的所有CSS类。该元素将动画，然后进入 &lt;code&gt;out&lt;/code&gt; 和 &lt;code&gt;in&lt;/code&gt; 动画和最终到达的坐标和匹配目标元件的尺寸。在整个动画过程中， &lt;code&gt;.ng-animate-shim&lt;/code&gt; 的CSS类将同时应用于开始和目标元素，以使它们不可见（该类的CSS样式为：visible &lt;code&gt;visibility:hidden&lt;/code&gt; ）。一旦锚到达其目的地，则将其移除，并且由于将移除垫片类，因此目的地元素将变得可见。</target>
        </trans-unit>
        <trans-unit id="14f3f7bcb4a87c6124202a009713b7534c14dfdf" translate="yes" xml:space="preserve">
          <source>When an external event (such as a user action, timer or XHR) is received, the associated &lt;a href=&quot;expression&quot;&gt;expression&lt;/a&gt; must be applied to the scope through the &lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24apply.html&quot;&gt;$apply()&lt;/a&gt; method so that all listeners are updated correctly.</source>
          <target state="translated">收到外部事件（例如用户操作，计时器或XHR）时，必须通过&lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24apply.html&quot;&gt;$ apply（）&lt;/a&gt;方法将关联的&lt;a href=&quot;expression&quot;&gt;表达式&lt;/a&gt;应用于作用域，以便正确更新所有侦听器。</target>
        </trans-unit>
        <trans-unit id="c139d2a36c5e7dae8ba86d6f3fc970378a2fd7a1" translate="yes" xml:space="preserve">
          <source>When an isolate scope is used for a directive (see above), &lt;code&gt;bindToController: true&lt;/code&gt; will allow a component to have its properties bound to the controller, rather than to scope.</source>
          <target state="translated">当隔离范围用于指令时（请参见上文）， &lt;code&gt;bindToController: true&lt;/code&gt; 将允许组件将其属性绑定到控制器，而不是绑定到范围。</target>
        </trans-unit>
        <trans-unit id="3153ef599b44531bab9272b7bd946ae582bdb412" translate="yes" xml:space="preserve">
          <source>When an item in the &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; menu is selected, the array element or object property represented by the selected option will be bound to the model identified by the &lt;code&gt;ngModel&lt;/code&gt; directive.</source>
          <target state="translated">&lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; 菜单中的一项时，由selected选项表示的数组元素或对象属性将绑定到 &lt;code&gt;ngModel&lt;/code&gt; 指令标识的模型。</target>
        </trans-unit>
        <trans-unit id="3a676ca96b413f93e2b10f02f22a45badb9199fb" translate="yes" xml:space="preserve">
          <source>When an item in the &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; menu is selected, the value of the selected option will be bound to the model identified by the &lt;code&gt;ngModel&lt;/code&gt; directive. With static or repeated options, this is the content of the &lt;code&gt;value&lt;/code&gt; attribute or the textContent of the &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt;, if the value attribute is missing. Value and textContent can be interpolated.</source>
          <target state="translated">&lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; 菜单中的项目时，所选选项的值将绑定到 &lt;code&gt;ngModel&lt;/code&gt; 指令标识的模型。对于静态或重复选项，这是 &lt;code&gt;value&lt;/code&gt; 属性的内容或 &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; 的textContent（如果缺少value属性）。值和textContent可以插值。</target>
        </trans-unit>
        <trans-unit id="d91d5acbcb6e8adb1db7278d2b85940b8c059799" translate="yes" xml:space="preserve">
          <source>When an item is added, a new instance of the template is added to the DOM.</source>
          <target state="translated">当一个项目被添加时,一个新的模板实例被添加到DOM中。</target>
        </trans-unit>
        <trans-unit id="6812fd0a944e938e939802bbf208e98821182752" translate="yes" xml:space="preserve">
          <source>When an item is removed, its template instance is removed from the DOM.</source>
          <target state="translated">当一个项目被移除时,它的模板实例将从DOM中移除。</target>
        </trans-unit>
        <trans-unit id="81dc823adbdf6d2fe5dc8bb040d0c817d8aeaa14" translate="yes" xml:space="preserve">
          <source>When caching is enabled, &lt;a href=&quot;%24http&quot;&gt;&lt;code&gt;$http&lt;/code&gt;&lt;/a&gt; stores the response from the server using the relevant cache object. The next time the same request is made, the response is returned from the cache without sending a request to the server.</source>
          <target state="translated">启用缓存后，&lt;a href=&quot;%24http&quot;&gt; &lt;code&gt;$http&lt;/code&gt; &lt;/a&gt;使用相关的缓存对象存储来自服务器的响应。下次发出相同请求时，将从缓存中返回响应，而不会向服务器发送请求。</target>
        </trans-unit>
        <trans-unit id="789467cb9245497d6ba720add302b2f1f1af706a" translate="yes" xml:space="preserve">
          <source>When called with a single argument the method acts as a setter, setting the &lt;code&gt;search&lt;/code&gt; component of &lt;code&gt;$location&lt;/code&gt; to the specified value.</source>
          <target state="translated">当使用单个参数调用时，该方法充当设置器，将 &lt;code&gt;$location&lt;/code&gt; 的 &lt;code&gt;search&lt;/code&gt; 组件设置为指定值。</target>
        </trans-unit>
        <trans-unit id="14865eb2b6a51a444dc86a06c71f0100af295db4" translate="yes" xml:space="preserve">
          <source>When called, it scrolls to the element related to the specified &lt;code&gt;hash&lt;/code&gt; or (if omitted) to the current value of &lt;a href=&quot;%24location#hash.html&quot;&gt;$location.hash()&lt;/a&gt;, according to the rules specified in the &lt;a href=&quot;http://www.w3.org/html/wg/drafts/html/master/browsers.html#an-indicated-part-of-the-document&quot;&gt;HTML5 spec&lt;/a&gt;.</source>
          <target state="translated">调用时，它会根据&lt;a href=&quot;http://www.w3.org/html/wg/drafts/html/master/browsers.html#an-indicated-part-of-the-document&quot;&gt;HTML5规范中&lt;/a&gt;指定的规则滚动到与指定的 &lt;code&gt;hash&lt;/code&gt; 相关的元素，或者滚动到（如果省略的话）到&lt;a href=&quot;%24location#hash.html&quot;&gt;$ location.hash（）&lt;/a&gt;的当前值。</target>
        </trans-unit>
        <trans-unit id="e711b7dd7dcf0670b3366c5231f7791291b42079" translate="yes" xml:space="preserve">
          <source>When called, it scrolls to the element related to the specified &lt;code&gt;hash&lt;/code&gt; or (if omitted) to the current value of &lt;a href=&quot;service/%24location#hash.html&quot;&gt;$location.hash()&lt;/a&gt;, according to the rules specified in the &lt;a href=&quot;http://www.w3.org/html/wg/drafts/html/master/browsers.html#an-indicated-part-of-the-document&quot;&gt;HTML5 spec&lt;/a&gt;.</source>
          <target state="translated">调用时，它会根据&lt;a href=&quot;http://www.w3.org/html/wg/drafts/html/master/browsers.html#an-indicated-part-of-the-document&quot;&gt;HTML5规范中&lt;/a&gt;指定的规则滚动到与指定的 &lt;code&gt;hash&lt;/code&gt; 相关的元素，或者滚动到（如果省略的话）到&lt;a href=&quot;service/%24location#hash.html&quot;&gt;$ location.hash（）&lt;/a&gt;的当前值。</target>
        </trans-unit>
        <trans-unit id="20cc03eae13b474c55c6832e1df3a3881e25f1de" translate="yes" xml:space="preserve">
          <source>When calling instance methods, the instance itself is used as the request body (if the action should have a body). By default, only actions using &lt;code&gt;POST&lt;/code&gt;, &lt;code&gt;PUT&lt;/code&gt; or &lt;code&gt;PATCH&lt;/code&gt; have request bodies, but you can use the &lt;code&gt;hasBody&lt;/code&gt; configuration option to specify whether an action should have a body or not (regardless of its HTTP method).</source>
          <target state="translated">调用实例方法时，实例本身用作请求主体（如果操作应具有主体）。默认情况下，只有使用 &lt;code&gt;POST&lt;/code&gt; ， &lt;code&gt;PUT&lt;/code&gt; 或 &lt;code&gt;PATCH&lt;/code&gt; 的动作才具有请求主体，但是您可以使用 &lt;code&gt;hasBody&lt;/code&gt; 配置选项来指定一个动作是否应该具有主体（无论其HTTP方法如何）。</target>
        </trans-unit>
        <trans-unit id="839a4c899e007e634295e0d40ee38c44ffb9e7a9" translate="yes" xml:space="preserve">
          <source>When child scopes are no longer needed, it is the responsibility of the child scope creator to destroy them via &lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24destroy.html&quot;&gt;scope.$destroy()&lt;/a&gt; API. This will stop propagation of &lt;code&gt;$digest&lt;/code&gt; calls into the child scope and allow for memory used by the child scope models to be reclaimed by the garbage collector.</source>
          <target state="translated">当不再需要子范围时，子范围创建者有责任通过&lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24destroy.html&quot;&gt;scope。$ destroy（）&lt;/a&gt; API 销毁它们。这将停止将 &lt;code&gt;$digest&lt;/code&gt; 调用传播到子作用域，并允许垃圾回收器回收该子作用域模型使用的内存。</target>
        </trans-unit>
        <trans-unit id="22459911d88501ffcc063a47051430d4e2088c3f" translate="yes" xml:space="preserve">
          <source>When comparing deferreds/promises to the familiar behavior of try/catch/throw, think of &lt;code&gt;reject&lt;/code&gt; as the &lt;code&gt;throw&lt;/code&gt; keyword in JavaScript. This also means that if you &quot;catch&quot; an error via a promise error callback and you want to forward the error to the promise derived from the current promise, you have to &quot;rethrow&quot; the error by returning a rejection constructed via &lt;code&gt;reject&lt;/code&gt;.</source>
          <target state="translated">将延迟/承诺与熟悉的try / catch / throw行为进行比较时，请将 &lt;code&gt;reject&lt;/code&gt; 视为JavaScript中的 &lt;code&gt;throw&lt;/code&gt; 关键字。这也意味着，如果您通过promise错误回调&amp;ldquo;捕获&amp;rdquo;错误，并且想要将错误转发到从当前promise派生的promise，则必须通过返回一个由 &lt;code&gt;reject&lt;/code&gt; 创建的拒绝来&amp;ldquo; throwth&amp;rdquo;错误。</target>
        </trans-unit>
        <trans-unit id="7544d7a6d40240f2568b1c59cdeebb817b07875a" translate="yes" xml:space="preserve">
          <source>When designing web applications, consider security threats from:</source>
          <target state="translated">在设计Web应用程序时,要考虑到来自的安全威胁。</target>
        </trans-unit>
        <trans-unit id="1be6f29866ea88fbd287202394805d3eb43fe1cb" translate="yes" xml:space="preserve">
          <source>When digest loop is done and all the values have settled, process the queue of watch deregistration tasks. For each watch to be deregistered, check if it still evaluates to a value that is not &lt;code&gt;undefined&lt;/code&gt;. If that's the case, deregister the watch. Otherwise, keep dirty-checking the watch in the future digest loops by following the same algorithm starting from step 1</source>
          <target state="translated">当摘要循环完成并且所有值都已确定时，请处理监视取消注册任务队列。对于要注销的每只手表，请检查其是否仍然评估为 &lt;code&gt;undefined&lt;/code&gt; 。在这种情况下，请注销手表的注册。否则，请遵循从步骤1开始的相同算法，在以后的摘要循环中继续对手表进行脏检查。</target>
        </trans-unit>
        <trans-unit id="ada11b8bb4889ba1645ad55c7065dc38a11b087e" translate="yes" xml:space="preserve">
          <source>When filters are executed</source>
          <target state="translated">当过滤器被执行时</target>
        </trans-unit>
        <trans-unit id="bc763fc382925e726e695a57a972bb42b82d1fcf" translate="yes" xml:space="preserve">
          <source>When interacting with &lt;code&gt;Scope&lt;/code&gt; in tests, additional helper methods are available on the instances of &lt;code&gt;Scope&lt;/code&gt; type. See &lt;a href=&quot;../../ngmock/type/%24rootscope.scope&quot;&gt;ngMock Scope&lt;/a&gt; for additional details.</source>
          <target state="translated">在测试中与 &lt;code&gt;Scope&lt;/code&gt; 交互时，在 &lt;code&gt;Scope&lt;/code&gt; 类型的实例上可以使用其他辅助方法。有关其他详细信息，请参见&lt;a href=&quot;../../ngmock/type/%24rootscope.scope&quot;&gt;ngMock Scope&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2316ea99ea91caa4a7fb2d4b06f1b8e10ed600db" translate="yes" xml:space="preserve">
          <source>When internationalizing your app, you need to do thorough testing to make sure UI components behave as expected even when their contents vary greatly in content size.</source>
          <target state="translated">当您的应用程序国际化时,您需要进行彻底的测试,以确保UI组件的行为与预期一致,即使它们的内容大小差异很大。</target>
        </trans-unit>
        <trans-unit id="750c827a48343dda9e5fe8addc1f6d41b2ad613b" translate="yes" xml:space="preserve">
          <source>When interpolating text or attributes:</source>
          <target state="translated">当插值文字或属性时。</target>
        </trans-unit>
        <trans-unit id="3383a24d31d85f720ecee22674153dda0032675f" translate="yes" xml:space="preserve">
          <source>When items are reordered, their respective templates are reordered in the DOM.</source>
          <target state="translated">当项目被重新排序时,它们各自的模板会在DOM中重新排序。</target>
        </trans-unit>
        <trans-unit id="6632f6bff4755ea5460332c4224ec9a11c1cb149" translate="yes" xml:space="preserve">
          <source>When nesting elements with structural animations, such as &lt;code&gt;ngIf&lt;/code&gt;, into elements that have class-based animations such as &lt;code&gt;ngClass&lt;/code&gt;, it sometimes happens that before the actual animation starts, there is a brief flicker or flash of content where the animated element is briefly visible.</source>
          <target state="translated">当嵌套元素与结构动画，如 &lt;code&gt;ngIf&lt;/code&gt; ，到具有基于类的动画，比如元素 &lt;code&gt;ngClass&lt;/code&gt; ，有时会发生实际的动画开始之前，有一个短暂的闪烁或内容闪存，其中动画元素是短暂可见。</target>
        </trans-unit>
        <trans-unit id="f71bcb4df00d381895c0df3a5c8a7dbd4ffa348d" translate="yes" xml:space="preserve">
          <source>When ngAnimate is animating an element it will apply the &lt;code&gt;ng-animate&lt;/code&gt; CSS class to the element for the duration of the animation. This is a temporary CSS class and it will be removed once the animation is over (for both JavaScript and CSS-based animations).</source>
          <target state="translated">当ngAnimate对元素进行动画处理时，它将在动画期间将 &lt;code&gt;ng-animate&lt;/code&gt; CSS类应用于该元素。这是一个临时CSS类，动画结束后将被删除（对于基于JavaScript和基于CSS的动画）。</target>
        </trans-unit>
        <trans-unit id="3b8455755d949278198fe66a8823e52081309775" translate="yes" xml:space="preserve">
          <source>When not to use Components:</source>
          <target state="translated">什么时候不使用组件。</target>
        </trans-unit>
        <trans-unit id="db24cd6da9f265a13bfb64937b5a890c8a693e5a" translate="yes" xml:space="preserve">
          <source>When provided, replaces the &lt;code&gt;bannedResourceUrlList&lt;/code&gt; with the value provided. This must be an array or null. A snapshot of this array is used so further changes to the array are ignored.</source>
          <target state="translated">When provided, replaces the &lt;code&gt;bannedResourceUrlList&lt;/code&gt; with the value provided. This must be an array or null. A snapshot of this array is used so further changes to the array are ignored.</target>
        </trans-unit>
        <trans-unit id="6625b1391d7be3b24e194fa9d4b7155f0f6abba7" translate="yes" xml:space="preserve">
          <source>When provided, replaces the resourceUrlBlacklist with the value provided. This must be an array or null. A snapshot of this array is used so further changes to the array are ignored.</source>
          <target state="translated">当提供时,用提供的值替换资源UrlBlacklist。这个值必须是一个数组或空值。这个数组的快照被使用,所以对数组的进一步修改将被忽略。</target>
        </trans-unit>
        <trans-unit id="4d9fdadc8992417ef4226cc2cbace2ccffdff1f6" translate="yes" xml:space="preserve">
          <source>When provided, replaces the resourceUrlWhitelist with the value provided. This must be an array or null. A snapshot of this array is used so further changes to the array are ignored. Follow &lt;a href=&quot;../service/%24sce#resourceUrlPatternItem.html&quot;&gt;this link&lt;/a&gt; for a description of the items allowed in this array.</source>
          <target state="translated">提供时，用提供的值替换resourceUrlWhitelist。该值必须为数组或null。使用此阵列的快照，因此将忽略对该阵列的进一步更改。单击&lt;a href=&quot;../service/%24sce#resourceUrlPatternItem.html&quot;&gt;此链接&lt;/a&gt;以获取此数组中允许的项目的描述。</target>
        </trans-unit>
        <trans-unit id="2a10e5defd097da13b777d840b25c295f260ebeb" translate="yes" xml:space="preserve">
          <source>When provided, replaces the trustedResourceUrlList with the value provided. This must be an array or null. A snapshot of this array is used so further changes to the array are ignored. Follow &lt;a href=&quot;../service/%24sce#resourceUrlPatternItem.html&quot;&gt;this link&lt;/a&gt; for a description of the items allowed in this array.</source>
          <target state="translated">When provided, replaces the trustedResourceUrlList with the value provided. This must be an array or null. A snapshot of this array is used so further changes to the array are ignored. Follow &lt;a href=&quot;../service/%24sce#resourceUrlPatternItem.html&quot;&gt;this link&lt;/a&gt; for a description of the items allowed in this array.</target>
        </trans-unit>
        <trans-unit id="fefb6e795ed34de308a60ccca17742a8573190c3" translate="yes" xml:space="preserve">
          <source>When should I use $location?</source>
          <target state="translated">什么时候应该使用$location?</target>
        </trans-unit>
        <trans-unit id="fc081f8c14691f7b31edca6d4fe98a8c36e29d01" translate="yes" xml:space="preserve">
          <source>When specifying the &lt;code&gt;placeholder&lt;/code&gt; attribute of &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt;, Internet Explorer will temporarily insert the placeholder value as the textarea's content. If the placeholder value contains interpolation (&lt;code&gt;{{ ... }}&lt;/code&gt;), an error will be logged in the console when AngularJS tries to update the value of the by-then-removed text node. This doesn't affect the functionality of the textarea, but can be undesirable.</source>
          <target state="translated">当指定 &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; 的 &lt;code&gt;placeholder&lt;/code&gt; 属性时，Internet Explorer会临时插入占位符值作为textarea的内容。如果占位符值包含插值（ &lt;code&gt;{{ ... }}&lt;/code&gt; ），则当AngularJS尝试更新&amp;ldquo;然后被移除&amp;rdquo;文本节点的值时，控制台中将记录错误。这不会影响文本区域的功能，但是可能是不希望的。</target>
        </trans-unit>
        <trans-unit id="9f2ae1c603fd24b2d92261b8648add410fc1b1db" translate="yes" xml:space="preserve">
          <source>When testing promises, it's important to know that the resolution of promises is tied to the &lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24digest.html&quot;&gt;digest cycle&lt;/a&gt;. That means a promise's &lt;code&gt;then&lt;/code&gt;, &lt;code&gt;catch&lt;/code&gt; and &lt;code&gt;finally&lt;/code&gt; callback functions are only called after a digest has run. In tests, you can trigger a digest by calling a scope's &lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24apply.html&quot;&gt;&lt;code&gt;$apply&lt;/code&gt; function&lt;/a&gt;. If you don't have a scope in your test, you can inject the &lt;a href=&quot;../api/ng/service/%24rootscope&quot;&gt;$rootScope&lt;/a&gt; and call &lt;code&gt;$apply&lt;/code&gt; on it. There is also an example of testing promises in the &lt;a href=&quot;../api/ng/service/%24q#testing.html&quot;&gt;&lt;code&gt;$q&lt;/code&gt; service documentation&lt;/a&gt;.</source>
          <target state="translated">在测试promise时，重要的是要知道promise的分辨率与&lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24digest.html&quot;&gt;摘要周期有关&lt;/a&gt;。这意味着仅在摘要运行后才调用promise的 &lt;code&gt;then&lt;/code&gt; ， &lt;code&gt;catch&lt;/code&gt; 和 &lt;code&gt;finally&lt;/code&gt; 回调函数。在测试中，您可以通过调用作用域的&lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24apply.html&quot;&gt; &lt;code&gt;$apply&lt;/code&gt; 函数&lt;/a&gt;来触发摘要。如果您的测试中没有示波器，则可以注入&lt;a href=&quot;../api/ng/service/%24rootscope&quot;&gt;$ rootScope&lt;/a&gt;并对其调用 &lt;code&gt;$apply&lt;/code&gt; 。&lt;a href=&quot;../api/ng/service/%24q#testing.html&quot;&gt; &lt;code&gt;$q&lt;/code&gt; 服务文档中&lt;/a&gt;还有一个测试promise的示例。</target>
        </trans-unit>
        <trans-unit id="2a9b3721c7237b75d3afd4715763f1ab811416bc" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;ngHide&lt;/code&gt; expression evaluates to a truthy value then the &lt;code&gt;.ng-hide&lt;/code&gt; CSS class is added to the class attribute on the element causing it to become hidden. When falsy, the &lt;code&gt;.ng-hide&lt;/code&gt; CSS class is removed from the element causing the element not to appear hidden.</source>
          <target state="translated">当 &lt;code&gt;ngHide&lt;/code&gt; 表达式的值为真值时， &lt;code&gt;.ng-hide&lt;/code&gt; CSS类添加到元素上的class属性，使其隐藏。伪造时，将从元素中删除 &lt;code&gt;.ng-hide&lt;/code&gt; CSS类，以使该元素不会隐藏。</target>
        </trans-unit>
        <trans-unit id="a297ab931629d5a0763f7da3d096f081788fc874" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;ngShow&lt;/code&gt; expression evaluates to a falsy value then the &lt;code&gt;.ng-hide&lt;/code&gt; CSS class is added to the class attribute on the element causing it to become hidden. When truthy, the &lt;code&gt;.ng-hide&lt;/code&gt; CSS class is removed from the element causing the element not to appear hidden.</source>
          <target state="translated">当 &lt;code&gt;ngShow&lt;/code&gt; 表达式的值为假值时， &lt;code&gt;.ng-hide&lt;/code&gt; CSS类添加到该元素的class属性上，从而使其隐藏。没错时， &lt;code&gt;.ng-hide&lt;/code&gt; CSS类将从元素中删除，从而使元素不会隐藏。</target>
        </trans-unit>
        <trans-unit id="4bfc193dcf03be5fdd2e2cdb87b257d2455c123e" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;willBreak&lt;/code&gt; service is instantiated, AngularJS will throw an error because of strict mode. This is useful when using a tool like &lt;a href=&quot;https://github.com/olov/ng-annotate&quot;&gt;ng-annotate&lt;/a&gt; to ensure that all of your application components have annotations.</source>
          <target state="translated">当 &lt;code&gt;willBreak&lt;/code&gt; 服务被实例化，AngularJS将抛出，因为严格模式的错误。当使用&lt;a href=&quot;https://github.com/olov/ng-annotate&quot;&gt;ng-annotate之&lt;/a&gt;类的工具来确保所有应用程序组件都具有注释时，这很有用。</target>
        </trans-unit>
        <trans-unit id="c7c18ae4170652195c550cf6ea2dba7c36696d41" translate="yes" xml:space="preserve">
          <source>When the above example is compiled, the compiler visits every node and looks for directives.</source>
          <target state="translated">当上面的例子被编译时,编译器会访问每一个节点并寻找指令。</target>
        </trans-unit>
        <trans-unit id="4f3975f977c06069a05aff73f180e1132f61ab9c" translate="yes" xml:space="preserve">
          <source>When the application containing &lt;code&gt;angular_de-de.js&lt;/code&gt; script instead of the generic angular.js script starts, AngularJS is automatically pre-configured with localization rules for the german locale.</source>
          <target state="translated">当包含 &lt;code&gt;angular_de-de.js&lt;/code&gt; 脚本而不是通用angular.js脚本的应用程序启动时，AngularJS会自动使用德语语言环境的本地化规则进行预配置。</target>
        </trans-unit>
        <trans-unit id="9dc89b2e726de5f584f7c7b43803949e197d4a32" translate="yes" xml:space="preserve">
          <source>When the browser calls into JavaScript the code executes outside the AngularJS execution context, which means that AngularJS is unaware of model modifications. To properly process model modifications the execution has to enter the AngularJS execution context using the &lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24apply.html&quot;&gt;&lt;code&gt;$apply&lt;/code&gt;&lt;/a&gt; method. Only model modifications which execute inside the &lt;code&gt;$apply&lt;/code&gt; method will be properly accounted for by AngularJS. For example if a directive listens on DOM events, such as &lt;a href=&quot;../api/ng/directive/ngclick&quot;&gt;&lt;code&gt;ng-click&lt;/code&gt;&lt;/a&gt; it must evaluate the expression inside the &lt;code&gt;$apply&lt;/code&gt; method.</source>
          <target state="translated">当浏览器调用JavaScript时，代码将在AngularJS执行上下文之外执行，这意味着AngularJS不了解模型修改。为了正确地处理模型修改，执行必须使用&lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24apply.html&quot;&gt; &lt;code&gt;$apply&lt;/code&gt; &lt;/a&gt;方法进入AngularJS执行上下文。AngularJS将只考虑在 &lt;code&gt;$apply&lt;/code&gt; 方法内部执行的模型修改。例如，如果某个指令侦听DOM事件（例如&lt;a href=&quot;../api/ng/directive/ngclick&quot;&gt; &lt;code&gt;ng-click&lt;/code&gt; ),&lt;/a&gt;则它必须在 &lt;code&gt;$apply&lt;/code&gt; 方法内评估表达式。</target>
        </trans-unit>
        <trans-unit id="c4a0073d43d8ed80547cc46f1c39992f55fe9dcd" translate="yes" xml:space="preserve">
          <source>When the data is returned from the server then the object is an instance of the resource type and all of the non-GET methods are available with &lt;code&gt;$&lt;/code&gt; prefix. This allows you to easily support CRUD operations (create, read, update, delete) on server-side data.</source>
          <target state="translated">当从服务器返回数据时，该对象是资源类型的实例，并且所有非GET方法都可以使用 &lt;code&gt;$&lt;/code&gt; 前缀。这使您可以轻松地支持服务器端数据的CRUD操作（创建，读取，更新，删除）。</target>
        </trans-unit>
        <trans-unit id="a1ed9027d5eb4faa2d10f802af6772e8ffd7a989" translate="yes" xml:space="preserve">
          <source>When the expression changes, the previously added classes are removed and only then are the new classes added.</source>
          <target state="translated">当表达式发生变化时,之前添加的类会被删除,然后才会添加新的类。</target>
        </trans-unit>
        <trans-unit id="3821805d3a6f4eb90bb7345d51e2b2e665b5adba" translate="yes" xml:space="preserve">
          <source>When the first argument is a native DOM or jqLite/jQuery element, the function enables / disables animations on this element &lt;em&gt;and all its children&lt;/em&gt;: &lt;code&gt;$animate.enabled(myElement, false)&lt;/code&gt;. You can still use it to re-enable animations for a child element, even if you have disabled them on a parent element. And compared to the &lt;code&gt;classNameFilter&lt;/code&gt;, you can change the animation status at runtime instead of during the config phase.</source>
          <target state="translated">当第一个参数是本机DOM或jqLit​​e / jQuery元素时，该函数启用/禁用此元素&lt;em&gt;及其所有子&lt;/em&gt;元素的动画： &lt;code&gt;$animate.enabled(myElement, false)&lt;/code&gt; 。您仍然可以使用它为子元素重新启用动画，即使您已在父元素上禁用了动画也是如此。与 &lt;code&gt;classNameFilter&lt;/code&gt; 相比，您可以在运行时而不是在配置阶段更改动画状态。</target>
        </trans-unit>
        <trans-unit id="d2b8c3726e19191da644ea15837b664d0107b25a" translate="yes" xml:space="preserve">
          <source>When the original node and the replace template declare the same directive(s), they will be &lt;a href=&quot;../../../guide/compiler#double-compilation-and-how-to-avoid-it.html&quot;&gt;compiled twice&lt;/a&gt; because the compiler does not deduplicate them. In many cases, this is not noticable, but e.g. &lt;a href=&quot;../directive/ngmodel&quot;&gt;&lt;code&gt;ngModel&lt;/code&gt;&lt;/a&gt; will attach &lt;code&gt;$formatters&lt;/code&gt; and &lt;code&gt;$parsers&lt;/code&gt; twice.</source>
          <target state="translated">当原始节点和替换模板声明相同的指令时，它们将被&lt;a href=&quot;../../../guide/compiler#double-compilation-and-how-to-avoid-it.html&quot;&gt;编译两次，&lt;/a&gt;因为编译器不会对它们进行重复数据删除。在许多情况下，这不是很明显，但是例如&lt;a href=&quot;../directive/ngmodel&quot;&gt; &lt;code&gt;ngModel&lt;/code&gt; &lt;/a&gt;将 &lt;code&gt;$formatters&lt;/code&gt; 和 &lt;code&gt;$parsers&lt;/code&gt; 附加两次。</target>
        </trans-unit>
        <trans-unit id="7907a149033c64f8dcc623cf80201a3de41eea12" translate="yes" xml:space="preserve">
          <source>When the original node and the replace template declare the same directive(s), they will be &lt;a href=&quot;../../../guide/compiler#double-compilation-and-how-to-avoid-it.html&quot;&gt;compiled twice&lt;/a&gt; because the compiler does not deduplicate them. In many cases, this is not noticeable, but e.g. &lt;a href=&quot;../directive/ngmodel&quot;&gt;&lt;code&gt;ngModel&lt;/code&gt;&lt;/a&gt; will attach &lt;code&gt;$formatters&lt;/code&gt; and &lt;code&gt;$parsers&lt;/code&gt; twice.</source>
          <target state="translated">When the original node and the replace template declare the same directive(s), they will be &lt;a href=&quot;../../../guide/compiler#double-compilation-and-how-to-avoid-it.html&quot;&gt;compiled twice&lt;/a&gt; because the compiler does not deduplicate them. In many cases, this is not noticeable, but e.g. &lt;a href=&quot;../directive/ngmodel&quot;&gt; &lt;code&gt;ngModel&lt;/code&gt; &lt;/a&gt; will attach &lt;code&gt;$formatters&lt;/code&gt; and &lt;code&gt;$parsers&lt;/code&gt; twice.</target>
        </trans-unit>
        <trans-unit id="fd9c02d96b63bdc77f81f45e93ccaf214f2bcea7" translate="yes" xml:space="preserve">
          <source>When the replace template has a directive at the root node that uses &lt;a href=&quot;%24compile#-transclude-.html&quot;&gt;&lt;code&gt;transclude: element&lt;/code&gt;&lt;/a&gt;, e.g. &lt;a href=&quot;../directive/ngif&quot;&gt;&lt;code&gt;ngIf&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../directive/ngrepeat&quot;&gt;&lt;code&gt;ngRepeat&lt;/code&gt;&lt;/a&gt;, the DOM structure or scope inheritance can be incorrect. See the following issues:</source>
          <target state="translated">如果替换模板在根节点上具有使用&lt;a href=&quot;../directive/ngif&quot;&gt; &lt;code&gt;ngIf&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;%24compile#-transclude-.html&quot;&gt; &lt;code&gt;transclude: element&lt;/code&gt; &lt;/a&gt;的指令，例如ngIf或&lt;a href=&quot;../directive/ngrepeat&quot;&gt; &lt;code&gt;ngRepeat&lt;/code&gt; &lt;/a&gt;，则DOM结构或范围继承可能不正确。请参阅以下问题：</target>
        </trans-unit>
        <trans-unit id="9342cec159ce1c208d8802a510ac44a9f06fba8a" translate="yes" xml:space="preserve">
          <source>When the user clicks the &lt;code&gt;x&lt;/code&gt; in the dialog, the directive's &lt;code&gt;close&lt;/code&gt; function is called, thanks to &lt;code&gt;ng-click.&lt;/code&gt; This call to &lt;code&gt;close&lt;/code&gt; on the isolated scope actually evaluates the expression &lt;code&gt;hideDialog(message)&lt;/code&gt; in the context of the original scope, thus running &lt;code&gt;Controller&lt;/code&gt;'s &lt;code&gt;hideDialog&lt;/code&gt; function.</source>
          <target state="translated">当用户单击对话框中的 &lt;code&gt;x&lt;/code&gt; 时，由于 &lt;code&gt;ng-click.&lt;/code&gt; ，该指令的 &lt;code&gt;close&lt;/code&gt; 函数被调用。对隔离范围的 &lt;code&gt;close&lt;/code&gt; 调用实际上是在原始范围的上下文中计算表达式 &lt;code&gt;hideDialog(message)&lt;/code&gt; ，从而运行 &lt;code&gt;Controller&lt;/code&gt; 的 &lt;code&gt;hideDialog&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="88a38c58d7d80b367d19d209a82c71a873027d20" translate="yes" xml:space="preserve">
          <source>When there are multiple directives defined on a single DOM element, sometimes it is necessary to specify the order in which the directives are applied. The &lt;code&gt;priority&lt;/code&gt; is used to sort the directives before their &lt;code&gt;compile&lt;/code&gt; functions get called. Priority is defined as a number. Directives with greater numerical &lt;code&gt;priority&lt;/code&gt; are compiled first. Pre-link functions are also run in priority order, but post-link functions are run in reverse order. The order of directives with the same priority is undefined. The default priority is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">当在单个DOM元素上定义了多个指令时，有时必须指定指令的应用顺序。将 &lt;code&gt;priority&lt;/code&gt; 使用它们之前的指令排序 &lt;code&gt;compile&lt;/code&gt; 函数被调用。优先级定义为数字。首先编译具有更高数字 &lt;code&gt;priority&lt;/code&gt; 指令。链接前功能也按优先级顺序运行，但链接后功能则以相反顺序运行。具有相同优先级的指令的顺序是不确定的。默认优先级为 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="848b2612d0c87e93e24fbe2550122caa0f1c577b" translate="yes" xml:space="preserve">
          <source>When this css rule is loaded by the browser, all html elements (including their children) that are tagged with the &lt;code&gt;ngCloak&lt;/code&gt; directive are hidden. When AngularJS encounters this directive during the compilation of the template it deletes the &lt;code&gt;ngCloak&lt;/code&gt; element attribute, making the compiled element visible.</source>
          <target state="translated">当浏览器加载此CSS规则时，所有带有 &lt;code&gt;ngCloak&lt;/code&gt; 指令标记的html元素（包括其子元素）都将被隐藏。当AngularJS在模板编译期间遇到此指令时，它将删除 &lt;code&gt;ngCloak&lt;/code&gt; 元素属性，从而使编译后的元素可见。</target>
        </trans-unit>
        <trans-unit id="2fc91990fa11ae11c26ee5a24353aaebf1125812" translate="yes" xml:space="preserve">
          <source>When this property is set to true (default is &lt;code&gt;false&lt;/code&gt;), the HTML compiler will collect DOM nodes between nodes with the attributes &lt;code&gt;directive-name-start&lt;/code&gt; and &lt;code&gt;directive-name-end&lt;/code&gt;, and group them together as the directive elements. It is recommended that this feature be used on directives which are not strictly behavioral (such as &lt;a href=&quot;../directive/ngclick&quot;&gt;&lt;code&gt;ngClick&lt;/code&gt;&lt;/a&gt;), and which do not manipulate or replace child nodes (such as &lt;a href=&quot;../directive/nginclude&quot;&gt;&lt;code&gt;ngInclude&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">当此属性设置为true（默认为 &lt;code&gt;false&lt;/code&gt; ）时，HTML编译器将收集属性为 &lt;code&gt;directive-name-start&lt;/code&gt; 和 &lt;code&gt;directive-name-end&lt;/code&gt; 节点之间的DOM节点，并将它们作为指令元素组合在一起。建议将此功能用于行为严格的指令（例如&lt;a href=&quot;../directive/ngclick&quot;&gt; &lt;code&gt;ngClick&lt;/code&gt; &lt;/a&gt;），并且不要操纵或替换子节点（例如&lt;a href=&quot;../directive/nginclude&quot;&gt; &lt;code&gt;ngInclude&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="0235d8d7bcd040be16e73b4398069ebc939ca474" translate="yes" xml:space="preserve">
          <source>When to use directives, controllers or services</source>
          <target state="translated">何时使用指令、控制器或服务?</target>
        </trans-unit>
        <trans-unit id="799c93d8465b6c7356d72990ebf0c31dcca5897e" translate="yes" xml:space="preserve">
          <source>When unit testing (using &lt;a href=&quot;../../ngmock&quot;&gt;ngMock&lt;/a&gt;), it is necessary to call &lt;a href=&quot;../../ngmock/service/%24httpbackend#flush.html&quot;&gt;$httpBackend.flush()&lt;/a&gt; to flush each pending request using trained responses.</source>
          <target state="translated">&lt;a href=&quot;../../ngmock&quot;&gt;在进行&lt;/a&gt;单元测试时（使用ngMock），有必要调用&lt;a href=&quot;../../ngmock/service/%24httpbackend#flush.html&quot;&gt;$ httpBackend.flush（）&lt;/a&gt;使用经过训练的响应来刷新每个未决的请求。</target>
        </trans-unit>
        <trans-unit id="866465e227471da7aace7e851aaccc0bf7b51a44" translate="yes" xml:space="preserve">
          <source>When used with standard inputs, the view value will always be a string (which is in some cases parsed into another type, such as a &lt;code&gt;Date&lt;/code&gt; object for &lt;code&gt;input[date]&lt;/code&gt;.) However, custom controls might also pass objects to this method. In this case, we should make a copy of the object before passing it to &lt;code&gt;$setViewValue&lt;/code&gt;. This is because &lt;code&gt;ngModel&lt;/code&gt; does not perform a deep watch of objects, it only looks for a change of identity. If you only change the property of the object then ngModel will not realize that the object has changed and will not invoke the &lt;code&gt;$parsers&lt;/code&gt; and &lt;code&gt;$validators&lt;/code&gt; pipelines. For this reason, you should not change properties of the copy once it has been passed to &lt;code&gt;$setViewValue&lt;/code&gt;. Otherwise you may cause the model value on the scope to change incorrectly.</source>
          <target state="translated">与标准输入一起使用时，视图值将始终为字符串（在某些情况下，该值将解析为另一种类型，例如 &lt;code&gt;input[date]&lt;/code&gt; 的 &lt;code&gt;Date&lt;/code&gt; 对象。）但是，自定义控件也可能将对象传递给此方法。在这种情况下，我们应该在将对象传递给 &lt;code&gt;$setViewValue&lt;/code&gt; 之前对其进行复制。这是因为 &lt;code&gt;ngModel&lt;/code&gt; 不会对对象进行深入监视，它只会查找标识的更改。如果仅更改对象的属性，则ngModel将不会意识到该对象已更改，并且不会调用 &lt;code&gt;$parsers&lt;/code&gt; 和 &lt;code&gt;$validators&lt;/code&gt; 管道。因此，一旦将副本传递给副本，就不应更改其属性。 &lt;code&gt;$setViewValue&lt;/code&gt; 。否则，可能导致示波器上的模型值更改不正确。</target>
        </trans-unit>
        <trans-unit id="cc64a729cd2e490dc065221b82d1cb45ab84daeb" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;../api/ngroute/provider/%24routeprovider&quot;&gt;$routeProvider&lt;/a&gt;, you can often avoid some boilerplate, by passing the resolved route dependencies directly to the component. Since 1.5, ngRoute automatically assigns the resolves to the route scope property &lt;code&gt;$resolve&lt;/code&gt; (you can also configure the property name via &lt;code&gt;resolveAs&lt;/code&gt;). When using components, you can take advantage of this and pass resolves directly into your component without creating an extra route controller:</source>
          <target state="translated">使用&lt;a href=&quot;../api/ngroute/provider/%24routeprovider&quot;&gt;$ routeProvider时&lt;/a&gt;，通常可以通过将已解决的路由依赖关系直接传递给组件来避免一些重复。从1.5开始，ngRoute自动将解析分配给路由范围属性 &lt;code&gt;$resolve&lt;/code&gt; （您也可以通过 &lt;code&gt;resolveAs&lt;/code&gt; 配置属性名称）。使用组件时，您可以利用此优势并将解析直接传递到您的组件中，而无需创建额外的路由控制器：</target>
        </trans-unit>
        <trans-unit id="9ba0f63480183afb2de1595c7ae8b25bef84a87f" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;ngshow&quot;&gt;&lt;code&gt;ngShow&lt;/code&gt;&lt;/a&gt; and / or &lt;a href=&quot;nghide&quot;&gt;&lt;code&gt;ngHide&lt;/code&gt;&lt;/a&gt; to toggle between elements, it can happen that both the element to show and the element to hide are visible for a very short time.</source>
          <target state="translated">使用&lt;a href=&quot;ngshow&quot;&gt; &lt;code&gt;ngShow&lt;/code&gt; &lt;/a&gt;和/或&lt;a href=&quot;nghide&quot;&gt; &lt;code&gt;ngHide&lt;/code&gt; &lt;/a&gt;在元素之间切换时，可能会在很短的时间内同时显示要显示的元素和要隐藏的元素。</target>
        </trans-unit>
        <trans-unit id="2d06d724db84ddaaec9c56ac07d4b9edf55b4c22" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;$location&lt;/code&gt; service during testing, you are outside of the angular's &lt;a href=&quot;../api/ng/type/%24rootscope.scope&quot;&gt;scope&lt;/a&gt; life-cycle. This means it's your responsibility to call &lt;code&gt;scope.$apply()&lt;/code&gt;.</source>
          <target state="translated">在测试期间使用 &lt;code&gt;$location&lt;/code&gt; 服务时，您不在角度&lt;a href=&quot;../api/ng/type/%24rootscope.scope&quot;&gt;范围的&lt;/a&gt;生命周期内。这意味着调用 &lt;code&gt;scope.$apply()&lt;/code&gt; 是您的责任。</target>
        </trans-unit>
        <trans-unit id="308def7ce1040ce8f8e90c771104d822bf9c454e" translate="yes" xml:space="preserve">
          <source>When using a directive that takes an expression:</source>
          <target state="translated">当使用接受表达式的指令时。</target>
        </trans-unit>
        <trans-unit id="9af3cc5f2e0ae3fda308cd5ccc2df4b745158ea7" translate="yes" xml:space="preserve">
          <source>When using a directive with bidirectional binding and parameters that will not change:</source>
          <target state="translated">当使用具有双向绑定和参数不会改变的指令时。</target>
        </trans-unit>
        <trans-unit id="ce320691763ef56ed7bc8d8107895e1c4a8418eb" translate="yes" xml:space="preserve">
          <source>When using this type of annotation, take care to keep the annotation array in sync with the parameters in the function declaration.</source>
          <target state="translated">在使用这种类型的注解时,注意保持注解数组与函数声明中的参数同步。</target>
        </trans-unit>
        <trans-unit id="0788f3e044fd333f645148040ef0b7a3426b7c04" translate="yes" xml:space="preserve">
          <source>When you call a transclude function it returns a DOM fragment that is pre-bound to a &lt;strong&gt;transclusion scope&lt;/strong&gt;. This scope is special, in that it is a child of the directive's scope (and so gets destroyed when the directive's scope gets destroyed) but it inherits the properties of the scope from which it was taken.</source>
          <target state="translated">调用transclude函数时，它将返回预先绑定到&lt;strong&gt;包含范围&lt;/strong&gt;的DOM片段。此范围是特殊的，因为它是指令范围的子级（因此，在销毁指令范围时会被销毁），但是它继承了从中获取该范围的属性。</target>
        </trans-unit>
        <trans-unit id="adc8cb01135df3a93cfcf63923b01b0b4bcfd2e2" translate="yes" xml:space="preserve">
          <source>When you call a transclusion function you can pass in a &lt;strong&gt;clone attach function&lt;/strong&gt;. This function accepts two parameters, &lt;code&gt;function(clone, scope) { ... }&lt;/code&gt;, where the &lt;code&gt;clone&lt;/code&gt; is a fresh compiled copy of your transcluded content and the &lt;code&gt;scope&lt;/code&gt; is the newly created transclusion scope, which the clone will be linked to.</source>
          <target state="translated">调用包含函数时，可以传入&lt;strong&gt;克隆附加函数&lt;/strong&gt;。此函数接受两个参数， &lt;code&gt;function(clone, scope) { ... }&lt;/code&gt; ，其中 &lt;code&gt;clone&lt;/code&gt; 是被包含内容的新编译副本，并且该 &lt;code&gt;scope&lt;/code&gt; 是将与该链接链接的新创建的包含范围。</target>
        </trans-unit>
        <trans-unit id="c0d63bac8ebb474dd0a18c50994a65c24b136a76" translate="yes" xml:space="preserve">
          <source>When you call the &lt;code&gt;absUrl()&lt;/code&gt; method, the returned value is a full url with its segments encoded.</source>
          <target state="translated">当您调用 &lt;code&gt;absUrl()&lt;/code&gt; 方法时，返回的值是带有段编码的完整URL。</target>
        </trans-unit>
        <trans-unit id="96856534f37714d279ae2c0dc01f3e86884722a6" translate="yes" xml:space="preserve">
          <source>When you call the &lt;code&gt;url()&lt;/code&gt; method, the returned value is path, search and hash, in the form &lt;code&gt;/path?search=a&amp;amp;b=c#hash&lt;/code&gt;. The segments are encoded as well.</source>
          <target state="translated">当您调用 &lt;code&gt;url()&lt;/code&gt; 方法时，返回的值为path，search和hash，格式为 &lt;code&gt;/path?search=a&amp;amp;b=c#hash&lt;/code&gt; 。段也被编码。</target>
        </trans-unit>
        <trans-unit id="8e2a897977982bc35240ddd6d90240a08cedadc8" translate="yes" xml:space="preserve">
          <source>When you request a service, the &lt;a href=&quot;%24injector&quot;&gt;$injector&lt;/a&gt; is responsible for finding the correct &lt;strong&gt;service provider&lt;/strong&gt;, instantiating it and then calling its &lt;code&gt;$get&lt;/code&gt;&lt;strong&gt;service factory&lt;/strong&gt; function to get the instance of the &lt;strong&gt;service&lt;/strong&gt;.</source>
          <target state="translated">当您请求服务时，&lt;a href=&quot;%24injector&quot;&gt;$ injector&lt;/a&gt;负责查找正确的&lt;strong&gt;服务提供者&lt;/strong&gt;，将其实例化，然后调用其 &lt;code&gt;$get&lt;/code&gt; &lt;strong&gt;service factory&lt;/strong&gt;函数以获取&lt;strong&gt;服务&lt;/strong&gt;的实例。</target>
        </trans-unit>
        <trans-unit id="aa6de81ecf4cb6e26917389d536bee77c7c57932" translate="yes" xml:space="preserve">
          <source>When you use HTML5 history API mode, you will not need special hashbang links. All you have to do is specify regular URL links, such as: &lt;code&gt;&amp;lt;a href=&quot;/some?foo=bar&quot;&amp;gt;link&amp;lt;/a&amp;gt;&lt;/code&gt;</source>
          <target state="translated">使用HTML5历史记录API模式时，不需要特殊的hashbang链接。您所需要做的就是指定常规的URL链接，例如： &lt;code&gt;&amp;lt;a href=&quot;/some?foo=bar&quot;&amp;gt;link&amp;lt;/a&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8d89b9c3c7ad0e72f71a638e459b847a4a1b6c92" translate="yes" xml:space="preserve">
          <source>Whenever an animation is started, &lt;code&gt;ngAnimate&lt;/code&gt; applies the &lt;code&gt;ng-animate&lt;/code&gt; class to the element for the whole duration of the animation. By applying CSS transition / animation styling to that class, you can skip an animation:</source>
          <target state="translated">每当启动动画时， &lt;code&gt;ngAnimate&lt;/code&gt; 都会在整个 &lt;code&gt;ng-animate&lt;/code&gt; 中将ng-animate类应用于该元素。通过对该类应用CSS过渡/动画样式，您可以跳过动画：</target>
        </trans-unit>
        <trans-unit id="986037565cd6579ad9d0ba68772c304b34c53a56" translate="yes" xml:space="preserve">
          <source>Whenever an inner message is attached (becomes visible) or removed (becomes hidden) then the enter and leave animation is triggered for each particular element bound to the &lt;code&gt;ngMessage&lt;/code&gt; directive.</source>
          <target state="translated">每当附加了内部消息（变为可见）或删除内部消息（变为隐藏）时，就会为绑定到 &lt;code&gt;ngMessage&lt;/code&gt; 指令的每个特定元素触发进入和离开动画。</target>
        </trans-unit>
        <trans-unit id="65ee722d839e36aed52fa460253fb75029459549" translate="yes" xml:space="preserve">
          <source>Whenever the &lt;code&gt;ngMessages&lt;/code&gt; directive contains one or more visible messages then the &lt;code&gt;.ng-active&lt;/code&gt; CSS class will be added to the element. The &lt;code&gt;.ng-inactive&lt;/code&gt; CSS class will be applied when there are no messages present. Therefore, CSS transitions and keyframes as well as JavaScript animations can hook into the animations whenever these classes are added/removed.</source>
          <target state="translated">只要 &lt;code&gt;ngMessages&lt;/code&gt; 指令包含一个或多个可见消息，就会将 &lt;code&gt;.ng-active&lt;/code&gt; CSS类添加到元素中。所述 &lt;code&gt;.ng-inactive&lt;/code&gt; 当没有本消息CSS类将被应用。因此，每当添加/删除这些类时，CSS过渡和关键帧以及JavaScript动画就可以挂接到这些动画中。</target>
        </trans-unit>
        <trans-unit id="7960d3c2618b44613a36486dbb58d967ec476048" translate="yes" xml:space="preserve">
          <source>Whenever your application makes requests to a server there are potential security issues that need to be blocked. Both server and the client must cooperate in order to eliminate these threats. AngularJS comes pre-configured with strategies that address these issues, but for this to work backend server cooperation is required.</source>
          <target state="translated">每当你的应用程序向服务器发出请求时,就会有潜在的安全问题需要被阻止。为了消除这些威胁,服务器和客户端都必须合作。AngularJS 预先配置了解决这些问题的策略,但要做到这一点,需要后端服务器的配合。</target>
        </trans-unit>
        <trans-unit id="460854c303f2e0076b9be3c2cbeafbd2741f25c0" translate="yes" xml:space="preserve">
          <source>Where the compiler has created a new scope, the scope and either &lt;code&gt;ng-scope&lt;/code&gt; or &lt;code&gt;ng-isolated-scope&lt;/code&gt; CSS class are attached to the corresponding element. These scope references can then be accessed via &lt;code&gt;element.scope()&lt;/code&gt; and &lt;code&gt;element.isolateScope()&lt;/code&gt;.</source>
          <target state="translated">在编译器创建了新作用域的情况下，该作用域以及 &lt;code&gt;ng-scope&lt;/code&gt; 或 &lt;code&gt;ng-isolated-scope&lt;/code&gt; CSS类将附加到相应的元素。然后可以通过 &lt;code&gt;element.scope()&lt;/code&gt; 和 &lt;code&gt;element.isolateScope()&lt;/code&gt; 访问这些范围引用。</target>
        </trans-unit>
        <trans-unit id="7e741bc3dcef0123eeda11543758853be2aac149" translate="yes" xml:space="preserve">
          <source>Where:</source>
          <target state="translated">Where:</target>
        </trans-unit>
        <trans-unit id="750881ed39d8d4dbbabc8a525246358035450087" translate="yes" xml:space="preserve">
          <source>Whether &lt;code&gt;ngInclude&lt;/code&gt; should call &lt;a href=&quot;../service/%24anchorscroll&quot;&gt;$anchorScroll&lt;/a&gt; to scroll the viewport after the content is loaded.</source>
          <target state="translated">无论 &lt;code&gt;ngInclude&lt;/code&gt; 应该调用&lt;a href=&quot;../service/%24anchorscroll&quot;&gt;$ anchorScroll&lt;/a&gt;内容加载后滚动视口。</target>
        </trans-unit>
        <trans-unit id="95e30e407f19a0df15c35e9a06f966233d1296da" translate="yes" xml:space="preserve">
          <source>Whether &lt;code&gt;ngView&lt;/code&gt; should call &lt;a href=&quot;../../ng/service/%24anchorscroll&quot;&gt;$anchorScroll&lt;/a&gt; to scroll the viewport after the view is updated.</source>
          <target state="translated">无论 &lt;code&gt;ngView&lt;/code&gt; 应该调用&lt;a href=&quot;../../ng/service/%24anchorscroll&quot;&gt;$ anchorScroll&lt;/a&gt;视图更新后滚动视口。</target>
        </trans-unit>
        <trans-unit id="b0799f71a28a8d4e41670e7cf10ec92b54b2fb4f" translate="yes" xml:space="preserve">
          <source>Whether or not to ignore the exception when the request fails or the template is empty</source>
          <target state="translated">当请求失败或模板为空时,是否要忽略异常。</target>
        </trans-unit>
        <trans-unit id="7a494ff3bb52752d0bc384651bd7d37989465cdc" translate="yes" xml:space="preserve">
          <source>Whether the current state is valid (true), invalid (false), pending (undefined), or skipped (null). Pending is used for unfulfilled &lt;code&gt;$asyncValidators&lt;/code&gt;. Skipped is used by AngularJS when validators do not run because of parse errors and when &lt;code&gt;$asyncValidators&lt;/code&gt; do not run because any of the &lt;code&gt;$validators&lt;/code&gt; failed.</source>
          <target state="translated">当前状态是有效（true），无效（false），未决（undefined）还是已跳过（null）。待处理用于未实现的 &lt;code&gt;$asyncValidators&lt;/code&gt; 。当验证器由于解析错误而无法运行，并且 &lt;code&gt;$asyncValidators&lt;/code&gt; 由于任何 &lt;code&gt;$validators&lt;/code&gt; 失败而无法运行时，AngularJS将使用Skipped 。</target>
        </trans-unit>
        <trans-unit id="a7d197b14bb22dde26e7930ba72573db4afd74e5" translate="yes" xml:space="preserve">
          <source>Whether the injector should be in strict mode, which disallows argument name annotation inference.</source>
          <target state="translated">注入器是否应该采用严格模式,即不允许参数名注释推理。</target>
        </trans-unit>
        <trans-unit id="64739ed39c37793d5116ffd8cf13bce51648999d" translate="yes" xml:space="preserve">
          <source>Whether to generate an error when a rejected promise is not handled.</source>
          <target state="translated">当拒绝的承诺未被处理时,是否产生错误。</target>
        </trans-unit>
        <trans-unit id="04340f702909efe15652bdcae7630aa8d0a6c6a3" translate="yes" xml:space="preserve">
          <source>Which directives support animations?</source>
          <target state="translated">哪些指令支持动画?</target>
        </trans-unit>
        <trans-unit id="202e1367c10ec97bf55bcb003c4e2b1a5fb4d701" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;ngMessages&lt;/code&gt; will by default only display one error element at a time, the &lt;code&gt;ng-messages-multiple&lt;/code&gt; attribute can be applied to the &lt;code&gt;ngMessages&lt;/code&gt; container element to cause it to display all applicable error messages at once:</source>
          <target state="translated">虽然 &lt;code&gt;ngMessages&lt;/code&gt; 默认情况下一次仅显示一个错误元素，但是 &lt;code&gt;ng-messages-multiple&lt;/code&gt; 属性可以应用于 &lt;code&gt;ngMessages&lt;/code&gt; 容器元素，以使其一次显示所有适用的错误消息：</target>
        </trans-unit>
        <trans-unit id="b61c2bda7d6957ce6223a10bb226a52513d7256a" translate="yes" xml:space="preserve">
          <source>While a plural category may match many numbers (for example, in en-US locale, &quot;other&quot; can match any number that is not 1), an explicit number rule can only match one number. For example, the explicit number rule for &quot;3&quot; matches the number 3. There are examples of plural categories and explicit number rules throughout the rest of this documentation.</source>
          <target state="translated">虽然一个复数类别可能会匹配许多数字(例如,在美国语言中,&quot;其他 &quot;可以匹配任何非 1 的数字),但一个显式数字规则只能匹配一个数字。例如,&quot;3 &quot;的显式数字规则匹配的是数字3。在本文档的其余部分,还有复数类别和显式数字规则的例子。</target>
        </trans-unit>
        <trans-unit id="65f1a4c7640c97be8f83de892ee1d05acd23dd84" translate="yes" xml:space="preserve">
          <source>While it is recommended to register injectables directly with the &lt;a href=&quot;../api/ng/type/angular.module&quot;&gt;module API&lt;/a&gt;, it is also possible to register services, directives etc. by injecting &lt;a href=&quot;../api/auto/service/%24provide&quot;&gt;$provide&lt;/a&gt; or the individual service providers into the config function:</source>
          <target state="translated">虽然建议直接使用&lt;a href=&quot;../api/ng/type/angular.module&quot;&gt;模块API&lt;/a&gt;注册可注入对象，但也可以通过将&lt;a href=&quot;../api/auto/service/%24provide&quot;&gt;$ provide&lt;/a&gt;或各个服务提供者注入config函数来注册服务，指令等：</target>
        </trans-unit>
        <trans-unit id="79ae9ea22fa5db92c007dbd07a4fbcab0aa55fb4" translate="yes" xml:space="preserve">
          <source>While it's possible to bootstrap more than one AngularJS application per page, we don't actively test against this scenario. It's possible that you'll run into problems, especially with complex apps, so caution is advised.</source>
          <target state="translated">虽然每个页面有可能引导一个以上的AngularJS应用,但我们不会主动针对这种情况进行测试。你有可能会遇到问题,特别是对于复杂的应用程序,所以建议谨慎行事。</target>
        </trans-unit>
        <trans-unit id="a82dee00b39d8daed1da5528800a8c7ddbde426f" translate="yes" xml:space="preserve">
          <source>While the constructor-style use is supported, not all of the supporting methods from ES6 promises are available yet.</source>
          <target state="translated">虽然支持构造函数式的使用,但还不是所有ES6承诺的支持方法都可以使用。</target>
        </trans-unit>
        <trans-unit id="6cf978fc045daec3f25c0b99dc31760cd612ada9" translate="yes" xml:space="preserve">
          <source>While the example above is simple, it will not scale to large applications. Instead we recommend that you break your application to multiple modules like this:</source>
          <target state="translated">虽然上面的例子很简单,但它不会扩展到大型应用程序。相反,我们建议你将你的应用程序分解成多个模块,就像这样。</target>
        </trans-unit>
        <trans-unit id="fc6d8b80151efa65b509365d35de859e6d9b813c" translate="yes" xml:space="preserve">
          <source>While this may seem obvious it can be very difficult to call an individual function on a typical project. The reason is that the developers often mix concerns resulting in a piece of code which does everything. It makes an XHR request, it sorts the response data, and then it manipulates the DOM.</source>
          <target state="translated">虽然这看起来很明显,但在一个典型的项目中调用一个单独的函数是非常困难的。原因是开发人员经常混合关注的问题,导致一段代码什么都做。它发出XHR请求,对响应数据进行排序,然后对DOM进行操作。</target>
        </trans-unit>
        <trans-unit id="5d61d9a0a6e161682e0342ed06bfaa12eee85ebc" translate="yes" xml:space="preserve">
          <source>Why Dependency Injection?</source>
          <target state="translated">为什么要进行依赖性注入?</target>
        </trans-unit>
        <trans-unit id="669ff9e2a6793d3b75b94d0260040d47b3cbc679" translate="yes" xml:space="preserve">
          <source>Why is !important used?</source>
          <target state="translated">为什么要使用 !important?</target>
        </trans-unit>
        <trans-unit id="4616c58d9adc2d069251d8014e9dc1d4fb26a27f" translate="yes" xml:space="preserve">
          <source>Why mixing interpolation and expressions is bad practice:</source>
          <target state="translated">为什么将插值和表达式混用是不好的做法。</target>
        </trans-unit>
        <trans-unit id="d77989c1e3c0e0ace735631597dc367ffdfa6f32" translate="yes" xml:space="preserve">
          <source>Why?</source>
          <target state="translated">Why?</target>
        </trans-unit>
        <trans-unit id="fe732beca5e5d6794c8f103701bc47f9200286b7" translate="yes" xml:space="preserve">
          <source>Wijmo</source>
          <target state="translated">Wijmo</target>
        </trans-unit>
        <trans-unit id="4e29d9f8eb0462f006ae4c5ebd1af4e619375ebd" translate="yes" xml:space="preserve">
          <source>Window (&lt;code&gt;_blank|_self|_parent|_top&lt;/code&gt;) or named frame to open links in.</source>
          <target state="translated">用于打开链接的窗口（ &lt;code&gt;_blank|_self|_parent|_top&lt;/code&gt; ）或命名框架。</target>
        </trans-unit>
        <trans-unit id="fe79e3ee2d8eb6ed6e7fd0f621cd5a2c2e7958e5" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;ng-attr-cx&lt;/code&gt; you can work around this problem.</source>
          <target state="translated">使用 &lt;code&gt;ng-attr-cx&lt;/code&gt; 可以解决此问题。</target>
        </trans-unit>
        <trans-unit id="92df544bb7dbfe3ed04da3c434faef5602b4df3f" translate="yes" xml:space="preserve">
          <source>With AngularJS, we try to make it easy for you to do the right thing. For your XHR requests, we provide dependency injection, so your requests can be simulated. For the DOM, we abstract it, so you can test your model without having to manipulate the DOM directly. Your tests can then assert that the data has been sorted without having to create or look at the state of the DOM or to wait for any XHR requests to return data. The individual sort function can be tested in isolation.</source>
          <target state="translated">通过AngularJS,我们试图让你轻松做正确的事情。对于你的XHR请求,我们提供了依赖注入,所以你的请求可以被模拟。对于DOM,我们将其抽象化,所以你可以测试你的模型,而不必直接操作DOM。然后,你的测试可以断言数据已经被排序,而不需要创建或查看DOM的状态或等待任何XHR请求返回数据。单独的排序函数可以单独进行测试。</target>
        </trans-unit>
        <trans-unit id="c904b9835f56cd4b8010fe7952def1410fb5ce78" translate="yes" xml:space="preserve">
          <source>With a custom directive, you can add your own validation functions to the &lt;code&gt;$validators&lt;/code&gt; object on the &lt;a href=&quot;../api/ng/type/ngmodel.ngmodelcontroller&quot;&gt;&lt;code&gt;ngModelController&lt;/code&gt;&lt;/a&gt;. To get a hold of the controller, you require it in the directive as shown in the example below.</source>
          <target state="translated">使用自定义指令，可以将自己的验证函数添加到&lt;a href=&quot;../api/ng/type/ngmodel.ngmodelcontroller&quot;&gt; &lt;code&gt;ngModelController&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;$validators&lt;/code&gt; 对象中。要保留控制器，请在指令中要求它，如下例所示。</target>
        </trans-unit>
        <trans-unit id="a60123e9d2c9b6a9ca6c91377139ec6cb84cf751" translate="yes" xml:space="preserve">
          <source>With a single &lt;code&gt;boolean&lt;/code&gt; argument, it enables / disables animations globally: &lt;code&gt;$animate.enabled(false)&lt;/code&gt; disables all animations in your app.</source>
          <target state="translated">使用单个 &lt;code&gt;boolean&lt;/code&gt; 参数，它全局启用/禁用动画： &lt;code&gt;$animate.enabled(false)&lt;/code&gt; 禁用应用程序中的所有动画。</target>
        </trans-unit>
        <trans-unit id="0274004d1046e354f1b8c888093840ce67dd401a" translate="yes" xml:space="preserve">
          <source>With great power comes great responsibility</source>
          <target state="translated">大权在握,责任重大</target>
        </trans-unit>
        <trans-unit id="e5f24a86f871dcff0ad29cacea167d5d0ae19285" translate="yes" xml:space="preserve">
          <source>With ngStrictDi</source>
          <target state="translated">与ngStrictDi</target>
        </trans-unit>
        <trans-unit id="6bc76b8300fa6874bf5e467e1724761bef42ad90" translate="yes" xml:space="preserve">
          <source>With that you're ready to get started!</source>
          <target state="translated">有了这些,你就可以开始了!</target>
        </trans-unit>
        <trans-unit id="7169bbb61c830c1a8ef9311d0bf2f73b129f4feb" translate="yes" xml:space="preserve">
          <source>With the options &lt;code&gt;timeSecondsFormat&lt;/code&gt; and &lt;code&gt;timeStripZeroSeconds&lt;/code&gt; it is possible to adjust the value that is displayed in the control. Note that browsers may apply their own formatting in the user interface.</source>
          <target state="translated">使用选项 &lt;code&gt;timeSecondsFormat&lt;/code&gt; 和 &lt;code&gt;timeStripZeroSeconds&lt;/code&gt; ，可以调整控件中显示的值。请注意，浏览器可能会在用户界面中应用自己的格式。</target>
        </trans-unit>
        <trans-unit id="87980928967a29927ee2e7486ea2f236908cb941" translate="yes" xml:space="preserve">
          <source>With these generated CSS class names present on the element at the time, AngularJS automatically figures out whether to perform a CSS and/or JavaScript animation. Note that you can't have both CSS and JavaScript animations based on the same CSS class. See &lt;a href=&quot;../api/nganimate#css-js-animations-together.html&quot;&gt;here&lt;/a&gt; for more details.</source>
          <target state="translated">当这些生成的CSS类名称同时出现在元素上时，AngularJS会自动确定是否执行CSS和/或JavaScript动画。请注意，您不能同时具有基于同一CSS类的CSS和JavaScript动画。有关更多详细信息，请参见&lt;a href=&quot;../api/nganimate#css-js-animations-together.html&quot;&gt;此处&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bc6fe5b6fbbc1fe7d11a4ca05c3c7616c7423766" translate="yes" xml:space="preserve">
          <source>Within this element we then create separate elements for each of the possible errors that &lt;code&gt;myField&lt;/code&gt; could have. The &lt;code&gt;ngMessage&lt;/code&gt; attribute is used to declare which element(s) will appear for which error - for example, setting &lt;code&gt;ng-message=&quot;required&quot;&lt;/code&gt; specifies that this particular element should be displayed when there is no value present for the required field &lt;code&gt;myField&lt;/code&gt; (because the key &lt;code&gt;required&lt;/code&gt; will be &lt;code&gt;true&lt;/code&gt; in the object &lt;code&gt;myForm.myField.$error&lt;/code&gt;).</source>
          <target state="translated">然后，在该元素内，为 &lt;code&gt;myField&lt;/code&gt; 可能遇到的每个错误创建单独的元素。所述 &lt;code&gt;ngMessage&lt;/code&gt; 属性用于哪一个元素（一个或多个）将出现针对错误声明-例如，设定 &lt;code&gt;ng-message=&quot;required&quot;&lt;/code&gt; 指定，当有存在用于所需的字段没有值这个特定元素应显示 &lt;code&gt;myField&lt;/code&gt; （因为 &lt;code&gt;required&lt;/code&gt; 的键在对象 &lt;code&gt;myForm.myField.$error&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b3b7a4861859ba576e767644c3fb5fc7d5721768" translate="yes" xml:space="preserve">
          <source>Wrap the contents of the directive's element (if &lt;code&gt;transclude&lt;/code&gt; is true).</source>
          <target state="translated">包装指令元素的内容（如果 &lt;code&gt;transclude&lt;/code&gt; 为true）。</target>
        </trans-unit>
        <trans-unit id="72722f4c797732533ba7026d7c3df1c24de1bdad" translate="yes" xml:space="preserve">
          <source>Wraps a raw DOM element or HTML string as a &lt;a href=&quot;http://jquery.com&quot;&gt;jQuery&lt;/a&gt; element.</source>
          <target state="translated">将原始DOM元素或HTML字符串包装为&lt;a href=&quot;http://jquery.com&quot;&gt;jQuery&lt;/a&gt;元素。</target>
        </trans-unit>
        <trans-unit id="f548d42d1d697e0d1a7c80979624da1857e7b6ec" translate="yes" xml:space="preserve">
          <source>Wraps an object that might be a value or a (3rd party) then-able promise into a $q promise. This is useful when you are dealing with an object that might or might not be a promise, or if the promise comes from a source that can't be trusted.</source>
          <target state="translated">将一个可能是值或(第三方)当时可承诺的对象包装成一个$q承诺。当你在处理一个可能是或不是承诺的对象时,或者当承诺来自一个不可信任的来源时,这很有用。</target>
        </trans-unit>
        <trans-unit id="112f691d9f7b0f7f4199996d2ace4cb10376c810" translate="yes" xml:space="preserve">
          <source>Write a debug message</source>
          <target state="translated">写一个调试信息</target>
        </trans-unit>
        <trans-unit id="7c443f819e3b3e21bba19ef5c0641ab5f0b1a0f1" translate="yes" xml:space="preserve">
          <source>Write a log message</source>
          <target state="translated">写一个日志信息</target>
        </trans-unit>
        <trans-unit id="0c268d45897d3597f5960cb0d5bfc9a80c50dc1b" translate="yes" xml:space="preserve">
          <source>Write a warning message</source>
          <target state="translated">写一个警告信息</target>
        </trans-unit>
        <trans-unit id="45f921887871d529540460a3b822817a4d735c76" translate="yes" xml:space="preserve">
          <source>Write an error message</source>
          <target state="translated">写一个错误信息</target>
        </trans-unit>
        <trans-unit id="7f78db32dc4888f39b2190a2a882a95f3b231138" translate="yes" xml:space="preserve">
          <source>Write an information message</source>
          <target state="translated">写一个信息留言</target>
        </trans-unit>
        <trans-unit id="6933a8aedae8c9e62cf74573670c5a9e472a670e" translate="yes" xml:space="preserve">
          <source>Writing Unit Tests that use $http</source>
          <target state="translated">编写使用$http的单元测试</target>
        </trans-unit>
        <trans-unit id="c4a1cc5507181a8c87b6fee1ad4eff525f395654" translate="yes" xml:space="preserve">
          <source>Writing your own filter is very easy: just register a new filter factory function with your module. Internally, this uses the &lt;a href=&quot;../api/ng/provider/%24filterprovider&quot;&gt;&lt;code&gt;filterProvider&lt;/code&gt;&lt;/a&gt;. This factory function should return a new filter function which takes the input value as the first argument. Any filter arguments are passed in as additional arguments to the filter function.</source>
          <target state="translated">编写自己的过滤器非常容易：只需在模块中注册一个新的过滤器工厂功能。在内部，它使用&lt;a href=&quot;../api/ng/provider/%24filterprovider&quot;&gt; &lt;code&gt;filterProvider&lt;/code&gt; &lt;/a&gt;。此工厂函数应返回一个新的过滤器函数，该函数将输入值作为第一个参数。任何过滤器参数都将作为其他参数传递给过滤器函数。</target>
        </trans-unit>
        <trans-unit id="b5466fc435a09ee3e765475bc830ed969868c046" translate="yes" xml:space="preserve">
          <source>XSRF</source>
          <target state="translated">XSRF</target>
        </trans-unit>
        <trans-unit id="8fff039853f5c2bbb8a28d056b579c7dcb7d137f" translate="yes" xml:space="preserve">
          <source>YES</source>
          <target state="translated">YES</target>
        </trans-unit>
        <trans-unit id="5397e0583f14f6c88de06b1ef28f460a1fb5b0ae" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="translated">Yes</target>
        </trans-unit>
        <trans-unit id="0682716a71bb47f20dfc13ef2209287ea8964cf9" translate="yes" xml:space="preserve">
          <source>Yes (binds to controller)</source>
          <target state="translated">是(与控制器绑定</target>
        </trans-unit>
        <trans-unit id="78db440be0ac76a9abe2906ac933955bbdf8e6bb" translate="yes" xml:space="preserve">
          <source>Yes (default &lt;code&gt;function() {}&lt;/code&gt;)</source>
          <target state="translated">是（默认 &lt;code&gt;function() {}&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="20405af6249fcf2f3cbc25821788782c0960a9d3" translate="yes" xml:space="preserve">
          <source>Yes (default: &lt;code&gt;$ctrl&lt;/code&gt;)</source>
          <target state="translated">是（默认： &lt;code&gt;$ctrl&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="8fa6f7a1c6faa45037571019b52212a0c4d263d5" translate="yes" xml:space="preserve">
          <source>Yes (default: false)</source>
          <target state="translated">是(默认:假</target>
        </trans-unit>
        <trans-unit id="b2de96ae5856057391d617d6b0650fb35486be33" translate="yes" xml:space="preserve">
          <source>Yes (deprecated)</source>
          <target state="translated">是(已废弃)</target>
        </trans-unit>
        <trans-unit id="3bcedb4f835fb2143087b97ec15aa4e83fe50624" translate="yes" xml:space="preserve">
          <source>Yes, injectable</source>
          <target state="translated">是,注射式</target>
        </trans-unit>
        <trans-unit id="9214e124b8d46401dfc684da1de9c5dd4e767005" translate="yes" xml:space="preserve">
          <source>Yes, you can. However, this is strongly discouraged. SCE gives you a lot of security benefits for little coding overhead. It will be much harder to take an SCE disabled application and either secure it on your own or enable SCE at a later stage. It might make sense to disable SCE for cases where you have a lot of existing code that was written before SCE was introduced and you're migrating them a module at a time. Also do note that this is an app-wide setting, so if you are writing a library, you will cause security bugs applications using it.</source>
          <target state="translated">是的,你可以。但是,我们强烈不鼓励这样做。SCE给你提供了很多安全方面的好处,而你只需花费很少的编码费用。将一个禁用SCE的应用程序,并自行保护它的安全,或者在以后的阶段启用SCE,这将会困难得多。如果你有很多现有的代码是在引入SCE之前编写的,并且你要一次一个模块地迁移它们,那么禁用SCE可能是有意义的。另外要注意的是,这是一个应用程序范围内的设置,所以如果你正在编写一个库,你会导致安全错误应用程序使用它。</target>
        </trans-unit>
        <trans-unit id="f995d213639053fe3fe26c3f46a1783739820dec" translate="yes" xml:space="preserve">
          <source>You also need to include ES6 shims for browsers that do not support ES6 code (Internet Explorer, iOs &amp;lt; 8, Android &amp;lt; 5.0, Windows Mobile &amp;lt; 10):</source>
          <target state="translated">对于不支持ES6代码的浏览器（Internet Explorer，iOs &amp;lt;8，Android &amp;lt;5.0，Windows Mobile &amp;lt;10），还需要包括ES6垫片：</target>
        </trans-unit>
        <trans-unit id="1c96c31bec32911ba04c5e3d3bed2875c7164a10" translate="yes" xml:space="preserve">
          <source>You can add an &lt;code&gt;ng-strict-di&lt;/code&gt; directive on the same element as &lt;code&gt;ng-app&lt;/code&gt; to opt into strict DI mode:</source>
          <target state="translated">您可以在与 &lt;code&gt;ng-app&lt;/code&gt; 相同的元素上添加 &lt;code&gt;ng-strict-di&lt;/code&gt; 指令，以选择进入严格的DI模式：</target>
        </trans-unit>
        <trans-unit id="88bbb3b1f6ce9bf8a5d73da2df05cc9c51c2659c" translate="yes" xml:space="preserve">
          <source>You can also access the &lt;code&gt;scope&lt;/code&gt; with &lt;code&gt;this&lt;/code&gt; in your templates:</source>
          <target state="translated">您还可以在模板中使用 &lt;code&gt;this&lt;/code&gt; 访问 &lt;code&gt;scope&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="d51687a76b88f9824bb332d32231a33249f7bc8a" translate="yes" xml:space="preserve">
          <source>You can also include the locale specific js file in the index.html page. For example, if one client requires German locale, you would serve index_de-de.html which will look something like this:</source>
          <target state="translated">你也可以在index.html页面中包含特定语言的js文件。例如,如果一个客户需要德语语言,你将提供index_de-de.html,它将看起来像这样。</target>
        </trans-unit>
        <trans-unit id="3a9ae66260a1d157f9089d2cc179f9d5301eddf4" translate="yes" xml:space="preserve">
          <source>You can also register services via the &lt;a href=&quot;../api/auto/service/%24provide&quot;&gt;&lt;code&gt;$provide&lt;/code&gt;&lt;/a&gt; service inside of a module's &lt;code&gt;config&lt;/code&gt; function:</source>
          <target state="translated">您还可以通过模块的 &lt;code&gt;config&lt;/code&gt; 函数内部的&lt;a href=&quot;../api/auto/service/%24provide&quot;&gt; &lt;code&gt;$provide&lt;/code&gt; &lt;/a&gt;服务注册服务：</target>
        </trans-unit>
        <trans-unit id="1edb9a1866cb37ee7c8a705d58855e4474dd410b" translate="yes" xml:space="preserve">
          <source>You can also retrieve this information during runtime via the &lt;a href=&quot;../../auto/service/%24injector#modules.html&quot;&gt;&lt;code&gt;$injector.modules&lt;/code&gt;&lt;/a&gt; property:</source>
          <target state="translated">您还可以在运行时通过&lt;a href=&quot;../../auto/service/%24injector#modules.html&quot;&gt; &lt;code&gt;$injector.modules&lt;/code&gt; &lt;/a&gt;属性检索此信息：</target>
        </trans-unit>
        <trans-unit id="c0befbcac9d9d01e3b63469abfe82d85e3d9b811" translate="yes" xml:space="preserve">
          <source>You can also specify a default callback parameter name in &lt;code&gt;$http.defaults.jsonpCallbackParam&lt;/code&gt;. Initially this is set to &lt;code&gt;'callback'&lt;/code&gt;.</source>
          <target state="translated">您还可以在 &lt;code&gt;$http.defaults.jsonpCallbackParam&lt;/code&gt; 指定默认的回调参数名称。最初，此设置为 &lt;code&gt;'callback'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2d7de2c0112d4f97aedc82feb2a43df55ef558dd" translate="yes" xml:space="preserve">
          <source>You can also use filters in controllers, services, and directives.</source>
          <target state="translated">你也可以在控制器、服务和指令中使用过滤器。</target>
        </trans-unit>
        <trans-unit id="f24ea7e29cd48bf6faab0eecdf7cb90ba2c45ec3" translate="yes" xml:space="preserve">
          <source>You can also use one of the other &lt;a href=&quot;animations#how-to-selectively-enable-disable-and-skip-animations.html&quot;&gt;strategies to disable animations&lt;/a&gt;.</source>
          <target state="translated">您还可以使用其他&lt;a href=&quot;animations#how-to-selectively-enable-disable-and-skip-animations.html&quot;&gt;策略之一来禁用动画&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fe13f233d33f2317c9e1140e034697845e05b195" translate="yes" xml:space="preserve">
          <source>You can augment or replace the default transformations by modifying these properties by adding to or replacing the array.</source>
          <target state="translated">您可以通过向数组添加或替换这些属性来增强或替换默认的变换。</target>
        </trans-unit>
        <trans-unit id="26d14f4eedb4fae61a21533414d119b82202b35c" translate="yes" xml:space="preserve">
          <source>You can change the &lt;code&gt;updateOn&lt;/code&gt; and &lt;code&gt;debounce&lt;/code&gt; configuration to test different scenarios. This is done with &lt;a href=&quot;../type/ngmodel.ngmodelcontroller#%24overrideModelOptions.html&quot;&gt;$overrideModelOptions&lt;/a&gt;.</source>
          <target state="translated">您可以更改 &lt;code&gt;updateOn&lt;/code&gt; 和 &lt;code&gt;debounce&lt;/code&gt; 配置以测试不同的方案。这是通过&lt;a href=&quot;../type/ngmodel.ngmodelcontroller#%24overrideModelOptions.html&quot;&gt;$ overrideModelOptions&lt;/a&gt;完成的。</target>
        </trans-unit>
        <trans-unit id="95f072e3df7c685fac0ab3d9573d46c0869d70b1" translate="yes" xml:space="preserve">
          <source>You can change the sorting order by setting &lt;code&gt;reverse&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;. By default, items are sorted in ascending order.</source>
          <target state="translated">您可以通过将 &lt;code&gt;reverse&lt;/code&gt; 设置为 &lt;code&gt;true&lt;/code&gt; 来更改排序顺序。默认情况下，项目按升序排序。</target>
        </trans-unit>
        <trans-unit id="5b7cb231a27ab416f35141ff7bd108e5cc769047" translate="yes" xml:space="preserve">
          <source>You can check for a specific type of tasks only, by specifying a &lt;code&gt;taskType&lt;/code&gt;.</source>
          <target state="translated">您可以通过指定 &lt;code&gt;taskType&lt;/code&gt; 来仅检查特定类型的任务。</target>
        </trans-unit>
        <trans-unit id="c7b4afaad293e0ab8ad424a0b72a63e37e669388" translate="yes" xml:space="preserve">
          <source>You can check whether a control is legitimately disabled for a screen reader by visiting &lt;a href=&quot;chrome://accessibility&quot;&gt;chrome://accessibility&lt;/a&gt; and inspecting &lt;a href=&quot;http://www.paciellogroup.com/blog/2015/01/the-browser-accessibility-tree/&quot;&gt;the accessibility tree&lt;/a&gt;.</source>
          <target state="translated">您可以通过访问&lt;a href=&quot;chrome://accessibility&quot;&gt;chrome：// accessibility&lt;/a&gt;并检查&lt;a href=&quot;http://www.paciellogroup.com/blog/2015/01/the-browser-accessibility-tree/&quot;&gt;可访问性树，&lt;/a&gt;检查是否已合法禁用屏幕阅读器的控件。</target>
        </trans-unit>
        <trans-unit id="101c4d02cff99099bc46b58888f7e3b1b5c073de" translate="yes" xml:space="preserve">
          <source>You can compose any directives by using them within templates.</source>
          <target state="translated">您可以通过在模板中使用它们来组成任何指令。</target>
        </trans-unit>
        <trans-unit id="b731cd6d9510d79f51557d5ef94ff727e5832fe3" translate="yes" xml:space="preserve">
          <source>You can define routes through &lt;a href=&quot;../provider/%24routeprovider&quot;&gt;$routeProvider&lt;/a&gt;'s API.</source>
          <target state="translated">您可以通过&lt;a href=&quot;../provider/%24routeprovider&quot;&gt;$ routeProvider&lt;/a&gt;的API 定义路由。</target>
        </trans-unit>
        <trans-unit id="31fd1fd68039c2988acf76d4b52a6bd46babbbf5" translate="yes" xml:space="preserve">
          <source>You can delay the model update/validation by using the &lt;code&gt;debounce&lt;/code&gt; key with the &lt;a href=&quot;../api/ng/directive/ngmodeloptions&quot;&gt;ngModelOptions&lt;/a&gt; directive. This delay will also apply to parsers, validators and model flags like &lt;code&gt;$dirty&lt;/code&gt; or &lt;code&gt;$pristine&lt;/code&gt;.</source>
          <target state="translated">您可以通过在&lt;a href=&quot;../api/ng/directive/ngmodeloptions&quot;&gt;ngModelOptions&lt;/a&gt;指令中使用 &lt;code&gt;debounce&lt;/code&gt; 键来延迟模型的更新/验证。此延迟也将应用于解析器，验证器和模型标志，例如 &lt;code&gt;$dirty&lt;/code&gt; 或 &lt;code&gt;$pristine&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="394cd1db28c6a0eb81e64282e2056f4d03a03ffd" translate="yes" xml:space="preserve">
          <source>You can disallow this method by using strict injection mode.</source>
          <target state="translated">您可以通过使用严格的注入模式来禁止这种方法。</target>
        </trans-unit>
        <trans-unit id="f2d0006b7fc5df06a67c045557923aa476a252da" translate="yes" xml:space="preserve">
          <source>You can find a community &lt;a href=&quot;https://github.com/johnpapa/angular-styleguide&quot;&gt;style guide&lt;/a&gt; to help yourself when application grows.</source>
          <target state="translated">您可以找到社区&lt;a href=&quot;https://github.com/johnpapa/angular-styleguide&quot;&gt;样式指南，&lt;/a&gt;以在应用程序增长时帮助自己。</target>
        </trans-unit>
        <trans-unit id="b4ffdd20ca6d801378c6461b645c060b2afbe103" translate="yes" xml:space="preserve">
          <source>You can find out more about using decorators in the &lt;a href=&quot;../../../guide/decorators&quot;&gt;decorators&lt;/a&gt; guide.</source>
          <target state="translated">您可以在&lt;a href=&quot;../../../guide/decorators&quot;&gt;装饰器&lt;/a&gt;指南中找到有关使用装饰器的更多信息。</target>
        </trans-unit>
        <trans-unit id="d817692a7365bfe66193ce98eb6fc60b3b2851d4" translate="yes" xml:space="preserve">
          <source>You can no longer use the &lt;code&gt;JSON_CALLBACK&lt;/code&gt; string as a placeholder for specifying where the callback parameter value should go.</source>
          <target state="translated">您不能再将 &lt;code&gt;JSON_CALLBACK&lt;/code&gt; 字符串用作占位符，以指定回调参数值应到达的位置。</target>
        </trans-unit>
        <trans-unit id="81b72c68d5c402b72c089494c02ceecaa5f99cad" translate="yes" xml:space="preserve">
          <source>You can override this for input directives whose concept of being empty is different from the default. The &lt;code&gt;checkboxInputType&lt;/code&gt; directive does this because in its case a value of &lt;code&gt;false&lt;/code&gt; implies empty.</source>
          <target state="translated">您可以为输入指令覆盖它，此输入指令的空概念与默认概念不同。该 &lt;code&gt;checkboxInputType&lt;/code&gt; 指令，这样做是因为在其案值 &lt;code&gt;false&lt;/code&gt; 意味着空。</target>
        </trans-unit>
        <trans-unit id="03e6bebea554786a5c69bfdcefb68b743a5a8836" translate="yes" xml:space="preserve">
          <source>You can package code as reusable modules.</source>
          <target state="translated">你可以将代码打包成可重用的模块。</target>
        </trans-unit>
        <trans-unit id="d1d497079860e0aef5a7334e1b6d3f917d87d536" translate="yes" xml:space="preserve">
          <source>You can pass special characters to &lt;code&gt;$location&lt;/code&gt; service and it will encode them according to rules specified in &lt;a href=&quot;http://www.ietf.org/rfc/rfc3986.txt&quot;&gt;RFC 3986&lt;/a&gt;. When you access the methods:</source>
          <target state="translated">您可以将特殊字符传递给 &lt;code&gt;$location&lt;/code&gt; 服务，它将根据&lt;a href=&quot;http://www.ietf.org/rfc/rfc3986.txt&quot;&gt;RFC 3986中&lt;/a&gt;指定的规则对它们进行编码。当您访问方法时：</target>
        </trans-unit>
        <trans-unit id="9b734f12bf70df0a2e00394730665d5415debb85" translate="yes" xml:space="preserve">
          <source>You can pre-bundle the desired locale file with AngularJS by concatenating the content of the locale-specific file to the end of &lt;code&gt;angular.js&lt;/code&gt; or &lt;code&gt;angular.min.js&lt;/code&gt; file.</source>
          <target state="translated">您可以通过将特定于语言环境的文件的内容连接到 &lt;code&gt;angular.js&lt;/code&gt; 或 &lt;code&gt;angular.min.js&lt;/code&gt; 文件的末尾，来使用AngularJS预先捆绑所需的语言环境文件。</target>
        </trans-unit>
        <trans-unit id="85dc3a060a6c674c82381f94eb04968eb861374e" translate="yes" xml:space="preserve">
          <source>You can prevent this unwanted behavior by adding CSS to the &lt;code&gt;.ng-animate&lt;/code&gt; class, that is added for the whole duration of each animation. Simply overwrite the transition / animation duration. In the case of the spinner, this would be:</source>
          <target state="translated">您可以通过将CSS添加到 &lt;code&gt;.ng-animate&lt;/code&gt; 类中来防止这种有害行为，该类在每个动画的整个过程中都被添加。只需覆盖过渡/动画持续时间。对于微调器，这将是：</target>
        </trans-unit>
        <trans-unit id="6def1729bd1768b2cd779c4ef6b6f8325f5c9a2f" translate="yes" xml:space="preserve">
          <source>You can see the state of a router by inspecting the read-only field &lt;code&gt;router.navigating&lt;/code&gt;. This may be useful for showing a spinner, for instance.</source>
          <target state="translated">您可以通过检查只读字段 &lt;code&gt;router.navigating&lt;/code&gt; 来查看路由器的状态。例如，这对于显示微调框可能很有用。</target>
        </trans-unit>
        <trans-unit id="2b352ff8d883043445bd8981d7dc50aa0f230033" translate="yes" xml:space="preserve">
          <source>You can specify &lt;code&gt;templateUrl&lt;/code&gt; as a string representing the URL or as a function which takes two arguments &lt;code&gt;tElement&lt;/code&gt; and &lt;code&gt;tAttrs&lt;/code&gt; (described in the &lt;code&gt;compile&lt;/code&gt; function api below) and returns a string value representing the url. In either case, the template URL is passed through &lt;a href=&quot;%24sce#getTrustedResourceUrl.html&quot;&gt;$sce.getTrustedResourceUrl&lt;/a&gt;.</source>
          <target state="translated">您可以将 &lt;code&gt;templateUrl&lt;/code&gt; 指定为表示URL的字符串，或者指定为使用两个参数 &lt;code&gt;tElement&lt;/code&gt; 和 &lt;code&gt;tAttrs&lt;/code&gt; （在下面的 &lt;code&gt;compile&lt;/code&gt; 函数api中进行描述）并返回表示URL的字符串值的函数。无论哪种情况，模板URL都通过&lt;a href=&quot;%24sce#getTrustedResourceUrl.html&quot;&gt;$ sce.getTrustedResourceUrl&lt;/a&gt;传递。</target>
        </trans-unit>
        <trans-unit id="5a119aa77141737eb79be52385e2aee416f621dd" translate="yes" xml:space="preserve">
          <source>You can specify an &lt;strong&gt;AngularJS module&lt;/strong&gt; to be used as the root module for the application. This module will be loaded into the &lt;a href=&quot;../../auto/service/%24injector&quot;&gt;&lt;code&gt;$injector&lt;/code&gt;&lt;/a&gt; when the application is bootstrapped. It should contain the application code needed or have dependencies on other modules that will contain the code. See &lt;a href=&quot;../function/angular.module&quot;&gt;&lt;code&gt;angular.module&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">您可以指定一个&lt;strong&gt;AngularJS模块&lt;/strong&gt;用作应用程序的根模块。引导应用程序时，此模块将加载到&lt;a href=&quot;../../auto/service/%24injector&quot;&gt; &lt;code&gt;$injector&lt;/code&gt; &lt;/a&gt;。它应该包含所需的应用程序代码，或者对包含该代码的其他模块具有依赖性。有关更多信息，请参见&lt;a href=&quot;../function/angular.module&quot;&gt; &lt;code&gt;angular.module&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="83e67cbe288ebfb9dc5625d108d58f784c85db1d" translate="yes" xml:space="preserve">
          <source>You can specify that all undefined settings are automatically inherited from an ancestor by including a property with key of &lt;code&gt;&quot;*&quot;&lt;/code&gt; and value of &lt;code&gt;&quot;$inherit&quot;&lt;/code&gt;.</source>
          <target state="translated">您可以通过包含键为 &lt;code&gt;&quot;*&quot;&lt;/code&gt; 且值为 &lt;code&gt;&quot;$inherit&quot;&lt;/code&gt; 的属性来指定所有未定义的设置自动从祖先继承。</target>
        </trans-unit>
        <trans-unit id="1b455448fb10c3feb0f72d94c3ebc50d20590d06" translate="yes" xml:space="preserve">
          <source>You can specify that an &lt;code&gt;ngModelOptions&lt;/code&gt; setting should be inherited from a parent &lt;code&gt;ngModelOptions&lt;/code&gt; directive by giving it the value of &lt;code&gt;&quot;$inherit&quot;&lt;/code&gt;. Then it will inherit that setting from the first &lt;code&gt;ngModelOptions&lt;/code&gt; directive found by traversing up the DOM tree. If there is no ancestor element containing an &lt;code&gt;ngModelOptions&lt;/code&gt; directive then default settings will be used.</source>
          <target state="translated">您可以通过 &lt;code&gt;ngModelOptions&lt;/code&gt; 指定值 &lt;code&gt;&quot;$inherit&quot;&lt;/code&gt; 来指定从父 &lt;code&gt;ngModelOptions&lt;/code&gt; 指令继承ngModelOptions设置。然后它将从通过遍历DOM树找到的第一个 &lt;code&gt;ngModelOptions&lt;/code&gt; 指令继承该设置。如果不存在包含 &lt;code&gt;ngModelOptions&lt;/code&gt; 指令的祖先元素，则将使用默认设置。</target>
        </trans-unit>
        <trans-unit id="cee8cd455fdb5702144ad7cd54e9ed881038580b" translate="yes" xml:space="preserve">
          <source>You can specify that you want to insert a named transclusion slot, instead of the default slot, by providing the slot name as the value of the &lt;code&gt;ng-transclude&lt;/code&gt; or &lt;code&gt;ng-transclude-slot&lt;/code&gt; attribute.</source>
          <target state="translated">您可以通过提供插槽名称作为 &lt;code&gt;ng-transclude&lt;/code&gt; 或 &lt;code&gt;ng-transclude-slot&lt;/code&gt; 属性的值来指定要插入命名的包含插槽，而不是默认插槽。</target>
        </trans-unit>
        <trans-unit id="9bda3f14d47124d3a0cc71d6522064e0dae9bd21" translate="yes" xml:space="preserve">
          <source>You can specify the timezone that date/time input directives expect by providing its name in the &lt;code&gt;timezone&lt;/code&gt; property.</source>
          <target state="translated">您可以通过在 &lt;code&gt;timezone&lt;/code&gt; 属性中提供其名称来指定日期/时间输入指令期望的时区。</target>
        </trans-unit>
        <trans-unit id="d238ae2804d6180fbe63f8987fedec23e3737291" translate="yes" xml:space="preserve">
          <source>You can specify which of the CSP related AngularJS features should be deactivated by providing a value for the &lt;code&gt;ng-csp&lt;/code&gt; attribute. The options are as follows:</source>
          <target state="translated">您可以通过提供 &lt;code&gt;ng-csp&lt;/code&gt; 属性的值来指定应停用与CSP相关的AngularJS功能。选项如下：</target>
        </trans-unit>
        <trans-unit id="7a6cfaefefd7e989f4c8416822c363b3e888bae2" translate="yes" xml:space="preserve">
          <source>You can think of a module as a container for the different parts of your app &amp;ndash; controllers, services, filters, directives, etc.</source>
          <target state="translated">您可以将模块视为应用程序不同部分（控制器，服务，过滤器，指令等）的容器。</target>
        </trans-unit>
        <trans-unit id="46083d20e43265af397b4bfea5060f6934b0e4f7" translate="yes" xml:space="preserve">
          <source>You can think of the scope and its properties as the data which is used to render the view. The scope is the single source-of-truth for all things view related.</source>
          <target state="translated">您可以将 scope 和它的属性看作是用于呈现视图的数据。范围是所有与视图相关的事情的唯一真理来源。</target>
        </trans-unit>
        <trans-unit id="bb7e801aed6bfa3b80705913fe37098596068e96" translate="yes" xml:space="preserve">
          <source>You can try evaluating different expressions here:</source>
          <target state="translated">你可以在这里尝试评估不同的表达式。</target>
        </trans-unit>
        <trans-unit id="01fb93ff7e945210b06d2632d87e6c20f7132855" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;%24injector#modules.html&quot;&gt;&lt;code&gt;$injector.modules&lt;/code&gt;&lt;/a&gt; to check whether a module has been loaded into the injector, which may indicate whether the script has been executed already.</source>
          <target state="translated">您可以使用&lt;a href=&quot;%24injector#modules.html&quot;&gt; &lt;code&gt;$injector.modules&lt;/code&gt; &lt;/a&gt;来检查是否已将模块加载到注入器中，这可能表明脚本是否已经执行。</target>
        </trans-unit>
        <trans-unit id="fea4b46d76068b50a2610c7aa3ba09e4bbacf753" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;../api/ng/service/%24animate#pin.html&quot;&gt;&lt;code&gt;$animate.pin(element, parentHost)&lt;/code&gt;&lt;/a&gt; to associate an element with another element that belongs to your application. Simply call it before the element is added to the DOM / before the animation starts, with the element you want to animate, and the element which should be its assumed parent.</source>
          <target state="translated">您可以使用&lt;a href=&quot;../api/ng/service/%24animate#pin.html&quot;&gt; &lt;code&gt;$animate.pin(element, parentHost)&lt;/code&gt; &lt;/a&gt;将一个元素与另一个属于您应用程序的元素相关联。只需在将元素添加到DOM之前/在动画开始之前调用它，并添加要动画的元素以及应作为其假定父元素的元素即可。</target>
        </trans-unit>
        <trans-unit id="90d096931a4a9014361011def3c70b0d88433ec1" translate="yes" xml:space="preserve">
          <source>You can use a set of closed braces (&lt;code&gt;{}&lt;/code&gt;) as a placeholder for the number that you want substituted into pluralized strings. In the previous example, AngularJS will replace &lt;code&gt;{}&lt;/code&gt; with &lt;code&gt;{{personCount}}&lt;/code&gt;. The closed braces &lt;code&gt;{}&lt;/code&gt; is a placeholder for {{numberExpression}}.</source>
          <target state="translated">您可以使用一组封闭的花括号（ &lt;code&gt;{}&lt;/code&gt; ）作为要替换为复数字符串的数字的占位符。在前面的示例中，AngularJS将 &lt;code&gt;{}&lt;/code&gt; 替换为 &lt;code&gt;{{personCount}}&lt;/code&gt; 。右括号 &lt;code&gt;{}&lt;/code&gt; 是{{numberExpression}}的占位符。</target>
        </trans-unit>
        <trans-unit id="5751169a6fe8d45d1d7e022ef3cd59712b6c869a" translate="yes" xml:space="preserve">
          <source>You can use interceptors to transform the request or response, perform additional operations, and modify the returned instance/collection. The following example, uses &lt;code&gt;request&lt;/code&gt; and &lt;code&gt;response&lt;/code&gt; interceptors to augment the returned instance with additional info:</source>
          <target state="translated">您可以使用拦截器来转换请求或响应，执行其他操作以及修改返回的实例/集合。下面的示例使用 &lt;code&gt;request&lt;/code&gt; 和 &lt;code&gt;response&lt;/code&gt; 拦截器，以附加信息扩展返回的实例：</target>
        </trans-unit>
        <trans-unit id="48fdf349ff70b287ccf87f104b20e5eb02329746" translate="yes" xml:space="preserve">
          <source>You can use one of the following two ways to specify what javascript method should be called when a form is submitted:</source>
          <target state="translated">您可以使用以下两种方式之一来指定当表单被提交时应该调用哪个javascript方法。</target>
        </trans-unit>
        <trans-unit id="07a40d48550dced6bc4ecac1abed1172cae9631a" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;*&lt;/code&gt; key to specify a debounce value that applies to all events that are not specifically listed. In the following example, &lt;code&gt;mouseup&lt;/code&gt; would have a debounce delay of 1000:</source>
          <target state="translated">您可以使用 &lt;code&gt;*&lt;/code&gt; 键指定一个防抖动值，该值适用于所有未明确列出的事件。在下面的示例中， &lt;code&gt;mouseup&lt;/code&gt; 的反跳延迟为1000：</target>
        </trans-unit>
        <trans-unit id="d05623d5cd6b9d05013708bdfc786b9260096b60" translate="yes" xml:space="preserve">
          <source>You can use these values in the following combinations:</source>
          <target state="translated">您可以在以下组合中使用这些值。</target>
        </trans-unit>
        <trans-unit id="263ffe9bf05101cfe6ef8170633d8aab69c73c0c" translate="yes" xml:space="preserve">
          <source>You can use this property to find out information about a module via the &lt;a href=&quot;../../ng/type/angular.module#info.html&quot;&gt;&lt;code&gt;myModule.info(...)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">您可以使用此属性通过&lt;a href=&quot;../../ng/type/angular.module#info.html&quot;&gt; &lt;code&gt;myModule.info(...)&lt;/code&gt; &lt;/a&gt;方法查找有关模块的信息。</target>
        </trans-unit>
        <trans-unit id="e06feb7fe4556feaddf828bb776f3d4141d0137a" translate="yes" xml:space="preserve">
          <source>You can work around this Internet Explorer issue by using &lt;code&gt;ng-attr-placeholder&lt;/code&gt; instead of &lt;code&gt;placeholder&lt;/code&gt; on textareas, whenever you need interpolation in the placeholder value. You can find more details on &lt;code&gt;ngAttr&lt;/code&gt; in the &lt;a href=&quot;../../../guide/interpolation#-ngattr-for-binding-to-arbitrary-attributes.html&quot;&gt;Interpolation&lt;/a&gt; section of the Developer Guide.</source>
          <target state="translated">您可以通过使用变通解决此Internet Explorer问题 &lt;code&gt;ng-attr-placeholder&lt;/code&gt; ，而不是 &lt;code&gt;placeholder&lt;/code&gt; 的文字区域，当你需要在占位符值内插。您可以在《开发人员指南》的&amp;ldquo; &lt;a href=&quot;../../../guide/interpolation#-ngattr-for-binding-to-arbitrary-attributes.html&quot;&gt;插值&amp;rdquo;&lt;/a&gt;部分中找到有关 &lt;code&gt;ngAttr&lt;/code&gt; 的更多详细信息。</target>
        </trans-unit>
        <trans-unit id="8ac5062f58db70425ec02718519256c0e23fa9ef" translate="yes" xml:space="preserve">
          <source>You can write localizable plural and gender based messages in AngularJS interpolation expressions and &lt;code&gt;$interpolate&lt;/code&gt; calls.</source>
          <target state="translated">您可以在AngularJS插值表达式和 &lt;code&gt;$interpolate&lt;/code&gt; 调用中编写可本地化的基于复数和性别的消息。</target>
        </trans-unit>
        <trans-unit id="ce12a7493c6ecee3f467f8d9177628fab6c55d2f" translate="yes" xml:space="preserve">
          <source>You can't declare functions or create regular expressions from within AngularJS expressions. This is to avoid complex model transformation logic inside templates. Such logic is better placed in a controller or in a dedicated filter where it can be tested properly.</source>
          <target state="translated">你不能从AngularJS表达式内部声明函数或创建正则表达式。这是为了避免在模板内部出现复杂的模型转换逻辑。这样的逻辑最好放在控制器或专门的过滤器中,在那里可以进行适当的测试。</target>
        </trans-unit>
        <trans-unit id="9fa7a3275cffe456f2eb657d1f253178c3dc76c7" translate="yes" xml:space="preserve">
          <source>You cannot call &lt;code&gt;sharedInjector()&lt;/code&gt; from within a context already using &lt;code&gt;sharedInjector()&lt;/code&gt;.</source>
          <target state="translated">你不能调用 &lt;code&gt;sharedInjector()&lt;/code&gt; 已经在使用从上下文中 &lt;code&gt;sharedInjector()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="77d8fda0634d7c68c1d8703be68103783c2c733c" translate="yes" xml:space="preserve">
          <source>You cannot spy on &lt;code&gt;angular.element&lt;/code&gt; if you are using Jasmine version 1.x. See &lt;a href=&quot;https://github.com/angular/angular.js/issues/14251&quot;&gt;https://github.com/angular/angular.js/issues/14251&lt;/a&gt; for more information.</source>
          <target state="translated">如果您使用的是Jasmine版本1.x，则无法监视 &lt;code&gt;angular.element&lt;/code&gt; 。有关更多信息，请参见&lt;a href=&quot;https://github.com/angular/angular.js/issues/14251&quot;&gt;https://github.com/angular/angular.js/issues/14251&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="018339fa9294575012128284f4fe322332b53dbc" translate="yes" xml:space="preserve">
          <source>You cannot use Unicode characters for variable names in the &lt;a href=&quot;ng/directive/ngrepeat&quot;&gt;&lt;code&gt;ngRepeat&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;ng/directive/ngoptions&quot;&gt;&lt;code&gt;ngOptions&lt;/code&gt;&lt;/a&gt; expressions (e.g. &lt;code&gt;ng-repeat=&quot;f in поля&quot;&lt;/code&gt;), because even with &lt;code&gt;ngParseExt&lt;/code&gt; included, these special expressions are not parsed by the &lt;a href=&quot;ng/service/%24parse&quot;&gt;&lt;code&gt;$parse&lt;/code&gt;&lt;/a&gt; service.</source>
          <target state="translated">您不能在&lt;a href=&quot;ng/directive/ngrepeat&quot;&gt; &lt;code&gt;ngRepeat&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;ng/directive/ngoptions&quot;&gt; &lt;code&gt;ngOptions&lt;/code&gt; &lt;/a&gt;表达式（例如 &lt;code&gt;ng-repeat=&quot;f in поля&quot;&lt;/code&gt; ）中使用Unicode字符作为变量名，因为即使包含了 &lt;code&gt;ngParseExt&lt;/code&gt; ，这些特殊表达式也不会被&lt;a href=&quot;ng/service/%24parse&quot;&gt; &lt;code&gt;$parse&lt;/code&gt; &lt;/a&gt;服务解析。</target>
        </trans-unit>
        <trans-unit id="82db794867be25f27eff07c0ebfe6ef16a361fd2" translate="yes" xml:space="preserve">
          <source>You configure ngPluralize by providing 2 attributes: &lt;code&gt;count&lt;/code&gt; and &lt;code&gt;when&lt;/code&gt;. You can also provide an optional attribute, &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">您可以通过提供2个属性来配置ngPluralize： &lt;code&gt;count&lt;/code&gt; 和 &lt;code&gt;when&lt;/code&gt; 。您还可以提供可选属性 &lt;code&gt;offset&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7a92bea5f50a4fe4227230c04e414a92ac0d6314" translate="yes" xml:space="preserve">
          <source>You define a response to a request by chaining a call to &lt;code&gt;respond()&lt;/code&gt; onto a definition or expectation. If you provide a &lt;strong&gt;callback&lt;/strong&gt; as the first parameter to &lt;code&gt;respond(callback)&lt;/code&gt; then you can dynamically generate a response based on the properties of the request.</source>
          <target state="translated">您可以通过将对response &lt;code&gt;respond()&lt;/code&gt; 的调用链接到定义或期望上来定义对请求的响应。如果将&lt;strong&gt;回调&lt;/strong&gt;作为第一个要 &lt;code&gt;respond(callback)&lt;/code&gt; 参数（回调），则可以基于请求的属性动态生成响应。</target>
        </trans-unit>
        <trans-unit id="3b530477dd3a42f3e637e20d02b029d89614e05e" translate="yes" xml:space="preserve">
          <source>You may also bypass sanitization for values you know are safe. To do so, bind to an explicitly trusted value via &lt;a href=&quot;../service/%24sce#trustAsHtml.html&quot;&gt;$sce.trustAsHtml&lt;/a&gt;. See the example under &lt;a href=&quot;../service/%24sce#show-me-an-example-using-sce-.html&quot;&gt;Strict Contextual Escaping (SCE)&lt;/a&gt;.</source>
          <target state="translated">您也可以绕过消毒处理以获取已知的安全值。为此，请通过&lt;a href=&quot;../service/%24sce#trustAsHtml.html&quot;&gt;$ sce.trustAsHtml&lt;/a&gt;绑定到显式信任的值。请参阅&lt;a href=&quot;../service/%24sce#show-me-an-example-using-sce-.html&quot;&gt;严格上下文转义（SCE）&lt;/a&gt;下的示例。</target>
        </trans-unit>
        <trans-unit id="ccf7fee42b89952589b444c9ec99cb8e2d50cc8c" translate="yes" xml:space="preserve">
          <source>You may also want to setup a separate CSS file for defining CSS-based animations.</source>
          <target state="translated">你可能还想设置一个单独的CSS文件来定义基于CSS的动画。</target>
        </trans-unit>
        <trans-unit id="af0393d281a0768d6f723f736ccec7c3b256d9bd" translate="yes" xml:space="preserve">
          <source>You may be wondering why &lt;code&gt;!important&lt;/code&gt; is used for the &lt;code&gt;.ng-hide&lt;/code&gt; CSS class. This is because the &lt;code&gt;.ng-hide&lt;/code&gt; selector can be easily overridden by heavier selectors. For example, something as simple as changing the display style on a HTML list item would make hidden elements appear visible. This also becomes a bigger issue when dealing with CSS frameworks.</source>
          <target state="translated">您可能想知道为什么 &lt;code&gt;!important&lt;/code&gt; 用于 &lt;code&gt;.ng-hide&lt;/code&gt; CSS类。这是因为 &lt;code&gt;.ng-hide&lt;/code&gt; 选择器很容易被较重的选择器覆盖。例如，更改HTML列表项上的显示样式这样简单的操作将使隐藏的元素看起来可见。在处理CSS框架时，这也成为一个更大的问题。</target>
        </trans-unit>
        <trans-unit id="da49d4f2bcb633f38bc6cc9dce6a58efe4115346" translate="yes" xml:space="preserve">
          <source>You may find it helpful to play with the following example as you read the explanations below:</source>
          <target state="translated">在阅读下面的解释时,你可能会发现玩下面的例子很有帮助。</target>
        </trans-unit>
        <trans-unit id="605dd76e4ddd6491f31f4de2f358fa35adf6f2ab" translate="yes" xml:space="preserve">
          <source>You may want to disable the default behavior when unit-testing modules that depend on &lt;code&gt;ngRoute&lt;/code&gt;, in order to avoid an unexpected request for the default route's template.</source>
          <target state="translated">您可能需要在依赖 &lt;code&gt;ngRoute&lt;/code&gt; 的模块测试模块时禁用默认行为，以避免意外请求默认路由的模板。</target>
        </trans-unit>
        <trans-unit id="7f2e00b178abf5124fd75182086557120e8701b5" translate="yes" xml:space="preserve">
          <source>You may want to disable this in production for a significant performance boost. See &lt;a href=&quot;../../../guide/production#disabling-debug-data.html&quot;&gt;Disabling Debug Data&lt;/a&gt; for more.</source>
          <target state="translated">您可能要在生产中禁用此功能，以显着提高性能。有关更多&lt;a href=&quot;../../../guide/production#disabling-debug-data.html&quot;&gt;信息&lt;/a&gt;，请参见禁用调试数据。</target>
        </trans-unit>
        <trans-unit id="fbe35a7e05fed427062fb336bdada506f2694242" translate="yes" xml:space="preserve">
          <source>You might also be interested in an in-depth explanation of the compilation process that's available in the &lt;a href=&quot;compiler&quot;&gt;compiler guide&lt;/a&gt;.</source>
          <target state="translated">您可能还对&lt;a href=&quot;compiler&quot;&gt;编译器指南中&lt;/a&gt;提供的有关编译过程的深入说明感兴趣。</target>
        </trans-unit>
        <trans-unit id="0cb1f5c75cf0eca323a45284e434512ab65554de" translate="yes" xml:space="preserve">
          <source>You need to require the &lt;code&gt;ngAnimateMock&lt;/code&gt; module in your test suite for instance &lt;code&gt;beforeEach(module('ngAnimateMock'))&lt;/code&gt;</source>
          <target state="translated">您需要在测试套件中需要 &lt;code&gt;ngAnimateMock&lt;/code&gt; 模块，例如 &lt;code&gt;beforeEach(module('ngAnimateMock'))&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="df9ca6c1a182b06893d38928adf19d45fa7352c6" translate="yes" xml:space="preserve">
          <source>You should avoid dynamically changing the content of an interpolated string (e.g. attribute value or text node). Your changes are likely to be overwritten, when the original string gets evaluated. This restriction applies to both directly changing the content via JavaScript or indirectly using a directive.</source>
          <target state="translated">你应该避免动态地改变一个内插字符串的内容(如属性值或文本节点)。当原始字符串被评估时,您的更改很可能被覆盖。这个限制既适用于通过JavaScript直接改变内容,也适用于使用指令间接改变内容。</target>
        </trans-unit>
        <trans-unit id="0812fdddd6459d04d8044a62593320f963934181" translate="yes" xml:space="preserve">
          <source>You should avoid generating the URL for the JSONP request from user provided data. Provide additional query parameters via &lt;code&gt;params&lt;/code&gt; property of the &lt;code&gt;config&lt;/code&gt; parameter, rather than modifying the URL itself.</source>
          <target state="translated">您应该避免从用户提供的数据生成JSONP请求的URL。通过 &lt;code&gt;config&lt;/code&gt; 参数的 &lt;code&gt;params&lt;/code&gt; 属性提供其他查询参数，而不是修改URL本身。</target>
        </trans-unit>
        <trans-unit id="18cb9bb0017681d3d8101f157e43e02a6c34118b" translate="yes" xml:space="preserve">
          <source>You should call &lt;code&gt;angular.bootstrap()&lt;/code&gt;&lt;em&gt;after&lt;/em&gt; you've loaded or defined your modules. You cannot add controllers, services, directives, etc after an application bootstraps.</source>
          <target state="translated">加载或定义模块&lt;em&gt;后，&lt;/em&gt;应调用 &lt;code&gt;angular.bootstrap()&lt;/code&gt; 。应用程序引导后，您将无法添加控制器，服务，指令等。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="708894bed891642020be330ee41f65279a12308c" translate="yes" xml:space="preserve">
          <source>You should instead delegate the computation of complex expressions to the scope, like this:</source>
          <target state="translated">你应该把复杂表达式的计算委托给作用域,就像这样。</target>
        </trans-unit>
        <trans-unit id="00d05d0613122422197d607d0f5d480b82b7256a" translate="yes" xml:space="preserve">
          <source>You should never need to use this service directly, instead use the higher-level abstractions: &lt;a href=&quot;%24http&quot;&gt;$http&lt;/a&gt; or &lt;a href=&quot;../../ngresource/service/%24resource&quot;&gt;$resource&lt;/a&gt;.</source>
          <target state="translated">您永远不需要直接使用此服务，而应使用更高级别的抽象：&lt;a href=&quot;%24http&quot;&gt;$ http&lt;/a&gt;或&lt;a href=&quot;../../ngresource/service/%24resource&quot;&gt;$ resource&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8227b8f9162f84070a9b441550a8349a405f2d71" translate="yes" xml:space="preserve">
          <source>You should not modify this object. It should be treated as immutable.</source>
          <target state="translated">你不应该修改这个对象。它应该被视为不可更改的对象。</target>
        </trans-unit>
        <trans-unit id="5baf54133cc48e19725486ae5426bdd4a9f40085" translate="yes" xml:space="preserve">
          <source>You should not use &lt;a href=&quot;../../../guide/interpolation&quot;&gt;interpolation&lt;/a&gt; in the value of the &lt;code&gt;class&lt;/code&gt; attribute, when using the &lt;code&gt;ngClass&lt;/code&gt; directive on the same element. See &lt;a href=&quot;../../../guide/interpolation#known-issues.html&quot;&gt;here&lt;/a&gt; for more info.</source>
          <target state="translated">在同一元素上使用 &lt;code&gt;ngClass&lt;/code&gt; 指令时，不应在 &lt;code&gt;class&lt;/code&gt; 属性的值中使用&lt;a href=&quot;../../../guide/interpolation&quot;&gt;插值&lt;/a&gt;。有关更多信息，请参见&lt;a href=&quot;../../../guide/interpolation#known-issues.html&quot;&gt;此处&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="98d2de094c98f1cd2bdd5d2d54fef7a1683a9b0b" translate="yes" xml:space="preserve">
          <source>You should not use &lt;a href=&quot;../../../guide/interpolation&quot;&gt;interpolation&lt;/a&gt; in the value of the &lt;code&gt;style&lt;/code&gt; attribute, when using the &lt;code&gt;ngStyle&lt;/code&gt; directive on the same element. See &lt;a href=&quot;../../../guide/interpolation#known-issues.html&quot;&gt;here&lt;/a&gt; for more info.</source>
          <target state="translated">在同一元素上使用 &lt;code&gt;ngStyle&lt;/code&gt; 指令时，不应在 &lt;code&gt;style&lt;/code&gt; 属性的值中使用&lt;a href=&quot;../../../guide/interpolation&quot;&gt;插值&lt;/a&gt;。有关更多信息，请参见&lt;a href=&quot;../../../guide/interpolation#known-issues.html&quot;&gt;此处&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7c2fbe7ded595dba74eca502191373f662514b48" translate="yes" xml:space="preserve">
          <source>You should use &lt;a href=&quot;%24provide#service.html&quot;&gt;$provide.service(class)&lt;/a&gt; if you define your service as a type/class.</source>
          <target state="translated">如果将服务定义为类型/类，则应使用&lt;a href=&quot;%24provide#service.html&quot;&gt;$ provide.service（class）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bea982bb9c2f6821b3f44edf8dad402dddc73177" translate="yes" xml:space="preserve">
          <source>You should use the Provider recipe only when you want to expose an API for application-wide configuration that must be made before the application starts. This is usually interesting only for reusable services whose behavior might need to vary slightly between applications.</source>
          <target state="translated">只有当您想为应用程序范围内的配置公开一个必须在应用程序启动前进行的 API 时,才应使用 Provider 配方。这通常只适用于可重用的服务,因为这些服务的行为可能需要在不同的应用程序之间略有不同。</target>
        </trans-unit>
        <trans-unit id="189b161d716479306fb70aa6bdfa4c20ff0c5f21" translate="yes" xml:space="preserve">
          <source>You use this behavior by adding &lt;code&gt;ng-model-options=&quot;{ getterSetter: true }&quot;&lt;/code&gt; to an element that has &lt;code&gt;ng-model&lt;/code&gt; attached to it. You can also add &lt;code&gt;ng-model-options=&quot;{ getterSetter: true }&quot;&lt;/code&gt; to a &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;, which will enable this behavior for all &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;s within it. See &lt;a href=&quot;ngmodeloptions&quot;&gt;&lt;code&gt;ngModelOptions&lt;/code&gt;&lt;/a&gt; for more.</source>
          <target state="translated">通过将 &lt;code&gt;ng-model-options=&quot;{ getterSetter: true }&quot;&lt;/code&gt; 到已附加 &lt;code&gt;ng-model&lt;/code&gt; 的元素来使用此行为。您还可以将 &lt;code&gt;ng-model-options=&quot;{ getterSetter: true }&quot;&lt;/code&gt; 到 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; ，这将对其中的所有 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 启用此行为。有关更多信息，请参见&lt;a href=&quot;ngmodeloptions&quot;&gt; &lt;code&gt;ngModelOptions&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7ea026120b5159e1c3d1c13abf1a26ff24877e8b" translate="yes" xml:space="preserve">
          <source>You will need to escape curly braces or the &lt;code&gt;#&lt;/code&gt; character inside message texts if you want them to be treated literally with no special meaning. You may quote/escape any character in your message text by preceding it with a &lt;code&gt;\&lt;/code&gt; (backslash) character. The backslash character removes any special meaning to the character that immediately follows it. Therefore, you can escape or quote the backslash itself by preceding it with another backslash character.</source>
          <target state="translated">如果希望字面意义上没有特殊含义，请在消息文本中使用花括号或 &lt;code&gt;#&lt;/code&gt; 字符进行转义。您可以在消息文本中用 &lt;code&gt;\&lt;/code&gt; （反斜杠）字符加引号/转义字符。反斜杠字符删除紧随其后的字符的任何特殊含义。因此，可以通过在反斜杠前面加上另一个反斜杠字符来对其进行转义或引用。</target>
        </trans-unit>
        <trans-unit id="2921d662338c8a9c41ad8161d433030686dc6951" translate="yes" xml:space="preserve">
          <source>You would then inject and use this service like this:</source>
          <target state="translated">然后你会像这样注入和使用这个服务。</target>
        </trans-unit>
        <trans-unit id="e70f2e38922e0df09ef7e7e8ce8d7191454edd9b" translate="yes" xml:space="preserve">
          <source>```html</source>
          <target state="translated">```html</target>
        </trans-unit>
        <trans-unit id="86f7e437faa5a7fce15d1ddcb9eaeaea377667b8" translate="yes" xml:space="preserve">
          <source>a</source>
          <target state="translated">a</target>
        </trans-unit>
        <trans-unit id="9bb8776e05f401bf226d4252d267bbb3918ac6cc" translate="yes" xml:space="preserve">
          <source>a (directive)</source>
          <target state="translated">a(指令)</target>
        </trans-unit>
        <trans-unit id="18b2c9e8cc1c31ba37b4b0c75cc55e65bb713d22" translate="yes" xml:space="preserve">
          <source>a &lt;strong&gt;string&lt;/strong&gt; containing the name of the directive to pass to the linking function</source>
          <target state="translated">一个&lt;strong&gt;字符串&lt;/strong&gt;包含指令的名称传递给链接功能</target>
        </trans-unit>
        <trans-unit id="af7d197c6e53486aa8dd1d58aa11f54606cd204d" translate="yes" xml:space="preserve">
          <source>a callback function called when a change is detected.</source>
          <target state="translated">检测到变化时调用的回调函数。</target>
        </trans-unit>
        <trans-unit id="31011fccb5641632048dbe4f55f910c10dc6ced5" translate="yes" xml:space="preserve">
          <source>a container for the different parts of an app including controllers, services, filters, directives which configures the Injector</source>
          <target state="translated">应用程序不同部分的容器,包括控制器、服务、过滤器、配置Injector的指令。</target>
        </trans-unit>
        <trans-unit id="3ded06ab2199592f273fd39802162cd99749e136" translate="yes" xml:space="preserve">
          <source>a delete button that calls the bound &lt;code&gt;onDelete&lt;/code&gt; function of the heroList component</source>
          <target state="translated">一个删除按钮，该按钮调用heroList组件的绑定 &lt;code&gt;onDelete&lt;/code&gt; 函数</target>
        </trans-unit>
        <trans-unit id="32d8a4a7d0456b1b2b1a671c3249e60a44f45f0f" translate="yes" xml:space="preserve">
          <source>a function which represents the compiled expression:</source>
          <target state="translated">一个表示编译后的表达式的函数。</target>
        </trans-unit>
        <trans-unit id="bc00f7308a724af915cc60f837b686441f35ab88" translate="yes" xml:space="preserve">
          <source>a hash of options for the new child that will override the parent's options</source>
          <target state="translated">新孩子的选项哈希,将覆盖父母的选项。</target>
        </trans-unit>
        <trans-unit id="706108cda1287413fa8f990c4835b11f413067b0" translate="yes" xml:space="preserve">
          <source>a hash of settings to override the previous options</source>
          <target state="translated">覆盖之前选项的设置哈希。</target>
        </trans-unit>
        <trans-unit id="f05813f5739579fdd1d4b57cb660b6867f734ef7" translate="yes" xml:space="preserve">
          <source>a link function which is used to bind template (a DOM element/tree) to a scope. Where:</source>
          <target state="translated">一个链接函数,用于将模板(一个DOM元素/树)绑定到一个作用域。其中</target>
        </trans-unit>
        <trans-unit id="55695b0bf53f0f8364445a33b3ca2a369f478309" translate="yes" xml:space="preserve">
          <source>a new &lt;code&gt;ModelOptions&lt;/code&gt; object initialized with the given options.</source>
          <target state="translated">使用给定选项初始化的新 &lt;code&gt;ModelOptions&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="379191e5b7fd6f760277a7555deef3fd119a2078" translate="yes" xml:space="preserve">
          <source>a promise for the HTTP response data of the given URL.</source>
          <target state="translated">给定URL的HTTP响应数据的承诺。</target>
        </trans-unit>
        <trans-unit id="becf8e47f951a02fd2b3105e8eb5160d4e08c6f1" translate="yes" xml:space="preserve">
          <source>a promise that resolves or rejects as soon as one of the &lt;code&gt;promises&lt;/code&gt; resolves or rejects, with the value or reason from that promise.</source>
          <target state="translated">只要其中一个 &lt;code&gt;promises&lt;/code&gt; 解决或拒绝，承诺就会解决或拒绝，并带有该承诺的价值或理由。</target>
        </trans-unit>
        <trans-unit id="a5020c7b91f56938a8a85c71f7f5a4fe172243e4" translate="yes" xml:space="preserve">
          <source>a route controller in a &lt;a href=&quot;../api/ngroute/provider/%24routeprovider&quot;&gt;$route definition&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../api/ngroute/provider/%24routeprovider&quot;&gt;$ route定义中&lt;/a&gt;的路由控制器。</target>
        </trans-unit>
        <trans-unit id="dff4b804ed724a8ff290ba2788703c19231cfda7" translate="yes" xml:space="preserve">
          <source>a serialized string of the argument</source>
          <target state="translated">参数的序列化字符串</target>
        </trans-unit>
        <trans-unit id="43daaff24d820f678dcec7a0ed85e0273e11ee74" translate="yes" xml:space="preserve">
          <source>a string value corresponding to the message key.</source>
          <target state="translated">与信息键对应的字符串值。</target>
        </trans-unit>
        <trans-unit id="188a7880e1b109e7fc9b2e2e6f2a1becbcd44689" translate="yes" xml:space="preserve">
          <source>a string value corresponding to the remote template.</source>
          <target state="translated">对应远程模板的字符串值。</target>
        </trans-unit>
        <trans-unit id="d2a9fe0146bf173c8e3a464f80b97a3d24f52244" translate="yes" xml:space="preserve">
          <source>aHrefSanitizationTrustedUrlList([regexp]);</source>
          <target state="translated">aHrefSanitizationTrustedUrlList([regexp]);</target>
        </trans-unit>
        <trans-unit id="414899530854dc40d6f390553e4322f52a52895f" translate="yes" xml:space="preserve">
          <source>aHrefSanitizationWhitelist();</source>
          <target state="translated">aHrefSanitizationWhitelist();</target>
        </trans-unit>
        <trans-unit id="b079c945daaff59541f623646ce5f9d2e0585dd1" translate="yes" xml:space="preserve">
          <source>aHrefSanitizationWhitelist([regexp]);</source>
          <target state="translated">aHrefSanitizationWhitelist([regexp]);</target>
        </trans-unit>
        <trans-unit id="0bfda8d377c2609cd9d50c5b636b767072ce4e18" translate="yes" xml:space="preserve">
          <source>ability to use other services (have dependencies)</source>
          <target state="translated">可以使用其他服务(有依赖性)。</target>
        </trans-unit>
        <trans-unit id="ef2d5d4fccdd96167467a3b99c1b7a180c5f7743" translate="yes" xml:space="preserve">
          <source>absUrl();</source>
          <target state="translated">absUrl();</target>
        </trans-unit>
        <trans-unit id="6b7378531c25e5fb815d3a0902f391d65d520c77" translate="yes" xml:space="preserve">
          <source>access variables and functions from the scope</source>
          <target state="translated">从范围内访问变量和函数</target>
        </trans-unit>
        <trans-unit id="326b426f9ac7a96ed6baf62f8838565416d27df8" translate="yes" xml:space="preserve">
          <source>actions</source>
          <target state="translated">actions</target>
        </trans-unit>
        <trans-unit id="58d1bbce297de3c304a9fefc3b483181872a5c6b" translate="yes" xml:space="preserve">
          <source>add</source>
          <target state="translated">add</target>
        </trans-unit>
        <trans-unit id="aec0daec959795395dcc905b9847b0612640147b" translate="yes" xml:space="preserve">
          <source>add and remove</source>
          <target state="translated">增减</target>
        </trans-unit>
        <trans-unit id="cc8b8c2195e53bb8255cd71b8e16455a756e3798" translate="yes" xml:space="preserve">
          <source>add and remove (&lt;a href=&quot;../api/ng/directive/form#css-classes.html&quot;&gt;various classes&lt;/a&gt;)</source>
          <target state="translated">添加和删​​除（&lt;a href=&quot;../api/ng/directive/form#css-classes.html&quot;&gt;各种类&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="9c802e4d0f2125c8ccd099abde937d2b0bf2441a" translate="yes" xml:space="preserve">
          <source>add and remove (&lt;a href=&quot;../api/ng/directive/ngmodel#css-classes.html&quot;&gt;various classes&lt;/a&gt;)</source>
          <target state="translated">添加和删​​除（&lt;a href=&quot;../api/ng/directive/ngmodel#css-classes.html&quot;&gt;各种类&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="f281cc8b5a559ab097bfd79225f63810cb81fb0f" translate="yes" xml:space="preserve">
          <source>add and remove (&lt;a href=&quot;ng/directive/form#css-classes.html&quot;&gt;various classes&lt;/a&gt;)</source>
          <target state="translated">添加和删​​除（&lt;a href=&quot;ng/directive/form#css-classes.html&quot;&gt;各种类&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="ffad39d7805a618c642328731b65205c308b4f01" translate="yes" xml:space="preserve">
          <source>add and remove (&lt;a href=&quot;ng/directive/ngmodel#css-classes.html&quot;&gt;various classes&lt;/a&gt;)</source>
          <target state="translated">添加和删​​除（&lt;a href=&quot;ng/directive/ngmodel#css-classes.html&quot;&gt;各种类&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="b5ff19582dcaad51bc41694d9238b32371b5ef56" translate="yes" xml:space="preserve">
          <source>add and remove (the &lt;code&gt;ng-active&lt;/code&gt;/&lt;code&gt;ng-inactive&lt;/code&gt; classes)</source>
          <target state="translated">添加和删​​除（ &lt;code&gt;ng-active&lt;/code&gt; / &lt;code&gt;ng-inactive&lt;/code&gt; 类）</target>
        </trans-unit>
        <trans-unit id="ef3a686b4dece25feec634e5096ce9bfa0ab02e9" translate="yes" xml:space="preserve">
          <source>add and remove (the &lt;code&gt;ng-hide&lt;/code&gt; class)</source>
          <target state="translated">添加和删​​除（ &lt;code&gt;ng-hide&lt;/code&gt; 类）</target>
        </trans-unit>
        <trans-unit id="4606cae7f1920e3c492cfaeabdc8c17954ded6e2" translate="yes" xml:space="preserve">
          <source>addClass</source>
          <target state="translated">addClass</target>
        </trans-unit>
        <trans-unit id="5344edbbbb944d873756285888c51ebfd1edc4eb" translate="yes" xml:space="preserve">
          <source>addClass - &lt;code&gt;{string|null}&lt;/code&gt; - space-separated CSS classes to add to the element</source>
          <target state="translated">addClass- &lt;code&gt;{string|null}&lt;/code&gt; -要添加到元素的以空格分隔的CSS类</target>
        </trans-unit>
        <trans-unit id="1ce7c21f30af5f5b10fedbd5346fdf4de554a180" translate="yes" xml:space="preserve">
          <source>addClass(element, className, [options]);</source>
          <target state="translated">addClass(element,className,[options])。</target>
        </trans-unit>
        <trans-unit id="7d5c1898c8ce2da11d160f1391c7b4d49f3e4fa8" translate="yes" xml:space="preserve">
          <source>addClass: function(element, addedClasses, doneFunction, options)</source>
          <target state="translated">addClass:function(element,addedClasses,doneFunction,options)</target>
        </trans-unit>
        <trans-unit id="8a69fd19bd1b272f2742ad56fc2a3b8cfc501eb3" translate="yes" xml:space="preserve">
          <source>addLiteral(literalName, literalValue);</source>
          <target state="translated">addLiteral(literalName,literalValue)。</target>
        </trans-unit>
        <trans-unit id="7355adcfc3b67f4cb2d06cc684bfdbbc71a5354b" translate="yes" xml:space="preserve">
          <source>addPropertySecurityContext(elementName, propertyName, ctx);</source>
          <target state="translated">addPropertySecurityContext(elementName,propertyName,ctx)。</target>
        </trans-unit>
        <trans-unit id="333e96f32ede786dad3a524ea79bfedd0348fa8d" translate="yes" xml:space="preserve">
          <source>addValidAttrs(attrs);</source>
          <target state="translated">addValidAttrs(attrs);</target>
        </trans-unit>
        <trans-unit id="93587ca72e1d30ccc9c8bea63361be352f4ff1f6" translate="yes" xml:space="preserve">
          <source>addValidElements(elements);</source>
          <target state="translated">addValidElements(elements);</target>
        </trans-unit>
        <trans-unit id="0e60fa4d785ab2bc105ccf6c990933a65342e4cd" translate="yes" xml:space="preserve">
          <source>additional parameters to the executed function.</source>
          <target state="translated">执行函数的附加参数。</target>
        </trans-unit>
        <trans-unit id="94196134a8d9bdb1401da3bc2115cca0f04a7280" translate="yes" xml:space="preserve">
          <source>additionally, the current &lt;code&gt;step&lt;/code&gt; is respected, so the nearest value that satisfies a step is used.</source>
          <target state="translated">additionally, the current &lt;code&gt;step&lt;/code&gt; is respected, so the nearest value that satisfies a step is used.</target>
        </trans-unit>
        <trans-unit id="405906c9d5be6ae5393ca65fb0e7c38e0d585ecb" translate="yes" xml:space="preserve">
          <source>after</source>
          <target state="translated">after</target>
        </trans-unit>
        <trans-unit id="23df66181ba9e1f5fc4b8bd4eeeae0d7bf480aa4" translate="yes" xml:space="preserve">
          <source>after the ngSwitch contents change and just before the former contents are removed from the DOM</source>
          <target state="translated">在ngSwitch的内容发生变化后,在之前的内容被从DOM中移除之前。</target>
        </trans-unit>
        <trans-unit id="edfb3ff06c7d19c0160ebeef6b4e7aed6ac4f75f" translate="yes" xml:space="preserve">
          <source>after the ngSwitch contents change and the matched child element is placed inside the container</source>
          <target state="translated">当ngSwitch的内容发生变化并且匹配的子元素被放置在容器中之后</target>
        </trans-unit>
        <trans-unit id="0203ff87b54e01303123f3cf6037e798d281c86c" translate="yes" xml:space="preserve">
          <source>aliasing special properties of &lt;a href=&quot;ngrepeat&quot;&gt;&lt;code&gt;ngRepeat&lt;/code&gt;&lt;/a&gt;, as seen in the demo below.</source>
          <target state="translated">别名&lt;a href=&quot;ngrepeat&quot;&gt; &lt;code&gt;ngRepeat&lt;/code&gt; 的&lt;/a&gt;特殊属性，如下面的演示所示。</target>
        </trans-unit>
        <trans-unit id="7fd4541bdbf63dfb2866c26ed51bd47d9e487d39" translate="yes" xml:space="preserve">
          <source>all(promises);</source>
          <target state="translated">all(promises);</target>
        </trans-unit>
        <trans-unit id="853ec6940d908211cb464751067ad975ac2f9e24" translate="yes" xml:space="preserve">
          <source>allOrNothing</source>
          <target state="translated">allOrNothing</target>
        </trans-unit>
        <trans-unit id="2f805a6387252234e96b3821364c6eb5940fab41" translate="yes" xml:space="preserve">
          <source>allow read/write access to the current browser location</source>
          <target state="translated">允许对当前浏览器的位置进行读/写访问。</target>
        </trans-unit>
        <trans-unit id="9cb6ff12fb81d5cd585d45ce555565a410036da6" translate="yes" xml:space="preserve">
          <source>amount</source>
          <target state="translated">amount</target>
        </trans-unit>
        <trans-unit id="ae8a168eb2baeaf9900333f86cc98d0863e7118c" translate="yes" xml:space="preserve">
          <source>an &lt;a href=&quot;%24animate#animate.html&quot;&gt;animate()&lt;/a&gt; call that adds and removes classes will fire the &lt;code&gt;setClass&lt;/code&gt; event, but if it either removes or adds classes, it will fire &lt;code&gt;animate&lt;/code&gt; instead.</source>
          <target state="translated">一个添加和删​​除类的&lt;a href=&quot;%24animate#animate.html&quot;&gt;animate（）&lt;/a&gt;调用将触发 &lt;code&gt;setClass&lt;/code&gt; 事件，但如果删除或添加类，则将触发 &lt;code&gt;animate&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5465699dad7e5dd0885fad9e0bac00ac26c21aef" translate="yes" xml:space="preserve">
          <source>an &lt;strong&gt;array&lt;/strong&gt; containing the names of directives to pass to the linking function. The argument passed to the linking function will be an array of controllers in the same order as the names in the &lt;code&gt;require&lt;/code&gt; property</source>
          <target state="translated">一个包含要传递给链接函数的指令名称的&lt;strong&gt;数组&lt;/strong&gt;。传递给链接函数的参数将是一个控制器数组，其顺序与 &lt;code&gt;require&lt;/code&gt; 属性中的名称相同</target>
        </trans-unit>
        <trans-unit id="ee788da6d46e8da3b0f49448dd52abefd07cc965" translate="yes" xml:space="preserve">
          <source>an &lt;strong&gt;object&lt;/strong&gt; whose property values are the names of the directives to pass to the linking function. The argument passed to the linking function will also be an object with matching keys, whose values will hold the corresponding controllers.</source>
          <target state="translated">一个&lt;strong&gt;对象，&lt;/strong&gt;其属性值是要传递给链接函数的指令的名称。传递给链接函数的参数也将是带有匹配键的对象，其键值将保存相应的控制器。</target>
        </trans-unit>
        <trans-unit id="05821434eff3a62ba5342040d2111f2be08735ae" translate="yes" xml:space="preserve">
          <source>an AngularJS expression evaluating to a key/value object (this is typically the $error object on an ngModel instance).</source>
          <target state="translated">一个AngularJS表达式,评估到一个key/value对象(这通常是ngModel实例中的$error对象)。</target>
        </trans-unit>
        <trans-unit id="5223bbc2ad5e3fff9138baae8bfe21fbad43a2e8" translate="yes" xml:space="preserve">
          <source>an array of modules to load into the application. Each item in the array should be the name of a predefined module or a (DI annotated) function that will be invoked by the injector as a &lt;code&gt;config&lt;/code&gt; block. See: &lt;a href=&quot;../../ng/function/angular.module&quot;&gt;modules&lt;/a&gt;</source>
          <target state="translated">一组要加载到应用程序中的模块。数组中的每个项目都应该是预定义模块的名称或（由DI注释）函数，注入器将其作为 &lt;code&gt;config&lt;/code&gt; 块来调用。另请：&lt;a href=&quot;../../ng/function/angular.module&quot;&gt;模块&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="da8d44712011870c5d24be6adc4a4262f3092988" translate="yes" xml:space="preserve">
          <source>an array of modules to load into the application. Each item in the array should be the name of a predefined module or a (DI annotated) function that will be invoked by the injector as a &lt;code&gt;config&lt;/code&gt; block. See: &lt;a href=&quot;angular.module&quot;&gt;modules&lt;/a&gt;</source>
          <target state="translated">一组要加载到应用程序中的模块。数组中的每个项目都应该是预定义模块的名称或（由DI注释）函数，注入器将其作为 &lt;code&gt;config&lt;/code&gt; 块来调用。另请：&lt;a href=&quot;angular.module&quot;&gt;模块&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="90631e69762c1d19d90bb8a46a025cb21f8df921" translate="yes" xml:space="preserve">
          <source>an expression value corresponding to the message key.</source>
          <target state="translated">与消息键对应的表达式值。</target>
        </trans-unit>
        <trans-unit id="45bfa910dd3346062d5b2f2326e6e9dc3d003dab" translate="yes" xml:space="preserve">
          <source>an input to change the hero location, in the form of a reusable editableField component. Instead of manipulating the hero object itself, it sends a changeset upwards to the heroDetail, which sends it upwards to the heroList component, which updates the original data.</source>
          <target state="translated">一个改变英雄位置的输入,以一个可重用的editableField组件的形式。它不是操作英雄对象本身,而是向上发送一个变化集到 heroDetail,再由 heroDetail 向上发送到 heroList 组件,再由 heroList 更新原始数据。</target>
        </trans-unit>
        <trans-unit id="c4f8c3e56d6ea7a98b8ce583803f04e27a178c17" translate="yes" xml:space="preserve">
          <source>an interpolation function which is used to compute the interpolated string. The function has these parameters:</source>
          <target state="translated">一个内插函数,用于计算内插后的字符串。该函数有以下参数:</target>
        </trans-unit>
        <trans-unit id="96f5899ab1e42548965ebb0918a658b5082f3063" translate="yes" xml:space="preserve">
          <source>an object for defining configuration options for the application. The following keys are supported:</source>
          <target state="translated">对象,用于定义应用程序的配置选项。支持以下键:</target>
        </trans-unit>
        <trans-unit id="41b1bb86f322794c4b59d2029143d339dffe9c38" translate="yes" xml:space="preserve">
          <source>an object with start and end methods and details about the animation.</source>
          <target state="translated">一个包含开始和结束方法以及动画细节的对象。</target>
        </trans-unit>
        <trans-unit id="cff5806805287a8a5091b7bfe03e2728bc65d27b" translate="yes" xml:space="preserve">
          <source>an object with the following properties:</source>
          <target state="translated">一个具有以下属性的对象:</target>
        </trans-unit>
        <trans-unit id="4954dcbf2681a7fe5b463d449cf3d333a65ac2c9" translate="yes" xml:space="preserve">
          <source>an optional CSS class that will be applied to the element for the duration of the animation. If this value is left as empty then a CSS class of &lt;code&gt;ng-inline-animate&lt;/code&gt; will be applied to the element. (Note that if no animation is detected then this value will not be applied to the element.)</source>
          <target state="translated">一个可选的CSS类，将在动画持续时间内应用于该元素。如果将此值保留为空，则将 &lt;code&gt;ng-inline-animate&lt;/code&gt; 的CSS类应用于该元素。（请注意，如果未检测到动画，则此值将不会应用于元素。）</target>
        </trans-unit>
        <trans-unit id="1d26a64bb51575a5bcd5ac9fbf9d191a30bdb33f" translate="yes" xml:space="preserve">
          <source>an optional application &lt;a href=&quot;../function/angular.module&quot;&gt;module&lt;/a&gt; name to load.</source>
          <target state="translated">要加载的可选应用程序&lt;a href=&quot;../function/angular.module&quot;&gt;模块&lt;/a&gt;名称。</target>
        </trans-unit>
        <trans-unit id="0488f5c3e9c27a3de0f15222f058d92b00c3b4b3" translate="yes" xml:space="preserve">
          <source>an optional collection of options/styles that will be applied to the element. The object can have the following properties:</source>
          <target state="translated">一个可选的选项/样式集合,将被应用到元素上。该对象可以有以下属性。</target>
        </trans-unit>
        <trans-unit id="a2c5893ec3808730c9b54a09da7acd2bf4523a33" translate="yes" xml:space="preserve">
          <source>and you have an open redirect at &lt;code&gt;http://myapp.example.com/clickThru?...&lt;/code&gt;.</source>
          <target state="translated">并且您在 &lt;code&gt;http://myapp.example.com/clickThru?...&lt;/code&gt; 上有一个打开的重定向。</target>
        </trans-unit>
        <trans-unit id="842189d4cd0bc95c4173244059d6d935e9356ac8" translate="yes" xml:space="preserve">
          <source>angular-cache</source>
          <target state="translated">angular-cache</target>
        </trans-unit>
        <trans-unit id="d7e63c60af3e6ef654163ec8b1c37cc03f53eaa9" translate="yes" xml:space="preserve">
          <source>angular-gettext</source>
          <target state="translated">angular-gettext</target>
        </trans-unit>
        <trans-unit id="c487ffd8e0d32705e106c533a87219506b11ba3e" translate="yes" xml:space="preserve">
          <source>angular-localization</source>
          <target state="translated">angular-localization</target>
        </trans-unit>
        <trans-unit id="8931440bc4f416e51cbf0352e8eb4d6290f8cb98" translate="yes" xml:space="preserve">
          <source>angular-mocks</source>
          <target state="translated">angular-mocks</target>
        </trans-unit>
        <trans-unit id="c2ae28680459087103593b97c1765a429cde3da8" translate="yes" xml:space="preserve">
          <source>angular-translate</source>
          <target state="translated">angular-translate</target>
        </trans-unit>
        <trans-unit id="aaa278f1b58592edfbbe6ca17892adbdfa0a2687" translate="yes" xml:space="preserve">
          <source>angular.Module</source>
          <target state="translated">angular.Module</target>
        </trans-unit>
        <trans-unit id="e40c3c2a579932b4257eb890dc2cf82cb08001ef" translate="yes" xml:space="preserve">
          <source>angular.UNSAFE_restoreLegacyJqLiteXHTMLReplacement</source>
          <target state="translated">angular.UNSAFE_restoreLegacyJqLiteXHTMLReplacement</target>
        </trans-unit>
        <trans-unit id="acfc966f1c3eefd5dd5b33f6d3dbfe7f9950e7b7" translate="yes" xml:space="preserve">
          <source>angular.bind</source>
          <target state="translated">angular.bind</target>
        </trans-unit>
        <trans-unit id="6ef24dc5123e24ec1e73047cde117ea0f862b2f0" translate="yes" xml:space="preserve">
          <source>angular.bootstrap</source>
          <target state="translated">angular.bootstrap</target>
        </trans-unit>
        <trans-unit id="084f87c8d616dd8a72696e5cf75deae9362862e5" translate="yes" xml:space="preserve">
          <source>angular.copy</source>
          <target state="translated">angular.copy</target>
        </trans-unit>
        <trans-unit id="289117ee4fa89c021b09358307f9d29cb37d8626" translate="yes" xml:space="preserve">
          <source>angular.element</source>
          <target state="translated">angular.element</target>
        </trans-unit>
        <trans-unit id="8afc39aae7b640aac6a01dd764d887dbd319f348" translate="yes" xml:space="preserve">
          <source>angular.equals</source>
          <target state="translated">angular.equals</target>
        </trans-unit>
        <trans-unit id="d873104aaefb9d2c622a0e88dcf407718c2aafa1" translate="yes" xml:space="preserve">
          <source>angular.errorHandlingConfig</source>
          <target state="translated">angular.errorHandlingConfig</target>
        </trans-unit>
        <trans-unit id="ed43f3d91ba70ecd827ccb60e527cfed4540f35a" translate="yes" xml:space="preserve">
          <source>angular.extend</source>
          <target state="translated">angular.extend</target>
        </trans-unit>
        <trans-unit id="cc6fb334efbeace88d8ceda6a5d7209e3118dbcb" translate="yes" xml:space="preserve">
          <source>angular.forEach</source>
          <target state="translated">angular.forEach</target>
        </trans-unit>
        <trans-unit id="62bdb1d8f928bc2bdc3f55efdcf7d77864b06fd0" translate="yes" xml:space="preserve">
          <source>angular.fromJson</source>
          <target state="translated">angular.fromJson</target>
        </trans-unit>
        <trans-unit id="4713e41f57d71e268719a99dfa1156ecc3f56e18" translate="yes" xml:space="preserve">
          <source>angular.identity</source>
          <target state="translated">angular.identity</target>
        </trans-unit>
        <trans-unit id="18fd123be33edd3f46be16fe125cee585e9d6658" translate="yes" xml:space="preserve">
          <source>angular.injector</source>
          <target state="translated">angular.injector</target>
        </trans-unit>
        <trans-unit id="a31286add7fedab0d10de3a6f8a1276a3d044fd7" translate="yes" xml:space="preserve">
          <source>angular.isArray</source>
          <target state="translated">angular.isArray</target>
        </trans-unit>
        <trans-unit id="a54b37a2ae4b2efe3b863e28f197f8bca414e84d" translate="yes" xml:space="preserve">
          <source>angular.isDate</source>
          <target state="translated">angular.isDate</target>
        </trans-unit>
        <trans-unit id="443d8001d6a2cfe5ee7b5dbb4dc43a921d8a655f" translate="yes" xml:space="preserve">
          <source>angular.isDefined</source>
          <target state="translated">angular.isDefined</target>
        </trans-unit>
        <trans-unit id="c5b4400f11a2785d8be78fc0285ab6f07dd0ea79" translate="yes" xml:space="preserve">
          <source>angular.isElement</source>
          <target state="translated">angular.isElement</target>
        </trans-unit>
        <trans-unit id="1626b820c4590a7a3d0f71f624c6eb27ff61c638" translate="yes" xml:space="preserve">
          <source>angular.isFunction</source>
          <target state="translated">angular.isFunction</target>
        </trans-unit>
        <trans-unit id="6215687c5f8e1138ccaeb373658114af663989d4" translate="yes" xml:space="preserve">
          <source>angular.isNumber</source>
          <target state="translated">angular.isNumber</target>
        </trans-unit>
        <trans-unit id="e36c7b6570948cd73e0a796be751f7f1c7580320" translate="yes" xml:space="preserve">
          <source>angular.isObject</source>
          <target state="translated">angular.isObject</target>
        </trans-unit>
        <trans-unit id="e08cee9768a2f187a1f78dbb4130f90b065061e4" translate="yes" xml:space="preserve">
          <source>angular.isString</source>
          <target state="translated">angular.isString</target>
        </trans-unit>
        <trans-unit id="87d70f613ad68ddfbcbb25bf4bae84dbdaba4188" translate="yes" xml:space="preserve">
          <source>angular.isUndefined</source>
          <target state="translated">angular.isUndefined</target>
        </trans-unit>
        <trans-unit id="28df3c32b0096ff9d4f14e07b7084b2fe5df2937" translate="yes" xml:space="preserve">
          <source>angular.merge</source>
          <target state="translated">angular.merge</target>
        </trans-unit>
        <trans-unit id="89245787aa22672a9ec82e9ed193d77097a2e6f6" translate="yes" xml:space="preserve">
          <source>angular.mock</source>
          <target state="translated">angular.mock</target>
        </trans-unit>
        <trans-unit id="1057bc6bd1438c33e847fb263764825ea118f181" translate="yes" xml:space="preserve">
          <source>angular.mock.TzDate</source>
          <target state="translated">angular.mock.TzDate</target>
        </trans-unit>
        <trans-unit id="7ec2b7e84c01f4afbad10499e58ba9f1065a5228" translate="yes" xml:space="preserve">
          <source>angular.mock.dump</source>
          <target state="translated">angular.mock.dump</target>
        </trans-unit>
        <trans-unit id="4e1079a20a1c73595c70f494588e444108f058ab" translate="yes" xml:space="preserve">
          <source>angular.mock.inject</source>
          <target state="translated">angular.mock.inject</target>
        </trans-unit>
        <trans-unit id="0d9140c8b28b1003d4507e89fd0da492bce0f6ee" translate="yes" xml:space="preserve">
          <source>angular.mock.module</source>
          <target state="translated">angular.mock.module</target>
        </trans-unit>
        <trans-unit id="4db998eb9346c0678276d430fd1b6b43e1bfd89b" translate="yes" xml:space="preserve">
          <source>angular.mock.module.sharedInjector</source>
          <target state="translated">angular.mock.module.sharedInjector</target>
        </trans-unit>
        <trans-unit id="2201cf904d4135c875c0348c1491f8238491bda1" translate="yes" xml:space="preserve">
          <source>angular.module</source>
          <target state="translated">angular.module</target>
        </trans-unit>
        <trans-unit id="de91fecfc925b0b2cc27240fee7feb67743a18c8" translate="yes" xml:space="preserve">
          <source>angular.noop</source>
          <target state="translated">angular.noop</target>
        </trans-unit>
        <trans-unit id="b5a10803ae3d33076df4c531c9b92c93bd5fcc7f" translate="yes" xml:space="preserve">
          <source>angular.reloadWithDebugInfo</source>
          <target state="translated">angular.reloadWithDebugInfo</target>
        </trans-unit>
        <trans-unit id="ffb5ee41f2a070bfebdb128f99d8450e49dc3adc" translate="yes" xml:space="preserve">
          <source>angular.toJson</source>
          <target state="translated">angular.toJson</target>
        </trans-unit>
        <trans-unit id="acdaaaa7dc75ed39e2adedd65e5cb3b904c954c5" translate="yes" xml:space="preserve">
          <source>angular.version</source>
          <target state="translated">angular.version</target>
        </trans-unit>
        <trans-unit id="169a3090b90513760e751a009bbdcafd7df68c87" translate="yes" xml:space="preserve">
          <source>angularEvent</source>
          <target state="translated">angularEvent</target>
        </trans-unit>
        <trans-unit id="34a06e08bdac778f5cdfd18ba031db64177c92df" translate="yes" xml:space="preserve">
          <source>animate(element, from, to, [className], [options]);</source>
          <target state="translated">animate(element,from,to,[className],[options])。</target>
        </trans-unit>
        <trans-unit id="14155a2181766fbab4e269351165909947ec1d2f" translate="yes" xml:space="preserve">
          <source>animate: function(element, fromStyles, toStyles, doneFunction, options)</source>
          <target state="translated">animate:function(Element,fromStyles,toStyles,doneFunction,options)</target>
        </trans-unit>
        <trans-unit id="50c35784ca24ea93b1c251c898d50534def5512c" translate="yes" xml:space="preserve">
          <source>animation name</source>
          <target state="translated">动画名称</target>
        </trans-unit>
        <trans-unit id="87c02be138ad482141b1bf75111827d854ea62d6" translate="yes" xml:space="preserve">
          <source>animation(name, animationFactory);</source>
          <target state="translated">animation(name,animationFactory)。</target>
        </trans-unit>
        <trans-unit id="163b455b1500578e51ec68fe8d87553e543a7876" translate="yes" xml:space="preserve">
          <source>animationFactory</source>
          <target state="translated">animationFactory</target>
        </trans-unit>
        <trans-unit id="d278a42f8c25340bff558c0af33746ccabb6eeda" translate="yes" xml:space="preserve">
          <source>animationRunner</source>
          <target state="translated">animationRunner</target>
        </trans-unit>
        <trans-unit id="4c5e9e0c2e3f4a31c61cab98557f6c664dcb4a54" translate="yes" xml:space="preserve">
          <source>animationRunner the animation runner</source>
          <target state="translated">animationRunner动画运行器</target>
        </trans-unit>
        <trans-unit id="1a34f73a15c76cd6560e9bbde1d7e06ae2a5c71d" translate="yes" xml:space="preserve">
          <source>annotate(fn, [strictDi]);</source>
          <target state="translated">annotate(fn,[strictDi])。</target>
        </trans-unit>
        <trans-unit id="f26a883d1c94f85aeae879c2e851936374fdf0a0" translate="yes" xml:space="preserve">
          <source>any non-numerical value is set to &lt;code&gt;(max + min) / 2&lt;/code&gt;.</source>
          <target state="translated">any non-numerical value is set to &lt;code&gt;(max + min) / 2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="50cfea78b44cc7bc3769f7ad6be73b7ef777fe31" translate="yes" xml:space="preserve">
          <source>any number of functions which will be injected using the injector.</source>
          <target state="translated">任何数量的函数,将使用注入器注入。</target>
        </trans-unit>
        <trans-unit id="cbebd8699f5c656ea45d3945ebb9dd830cb6a101" translate="yes" xml:space="preserve">
          <source>any number of modules which are represented as string aliases or as anonymous module initialization functions. The modules are used to configure the injector. The 'ng' and 'ngMock' modules are automatically loaded. If an object literal is passed each key-value pair will be registered on the module via &lt;a href=&quot;../../auto/service/%24provide&quot;&gt;$provide&lt;/a&gt;.value, the key being the string name (or token) to associate with the value on the injector.</source>
          <target state="translated">表示为字符串别名或匿名模块初始化函数的任何数量的模块。这些模块用于配置进样器。&amp;ldquo; ng&amp;rdquo;和&amp;ldquo; ngMock&amp;rdquo;模块会自动加载。如果传递了对象文字，则每个键值对将通过&lt;a href=&quot;../../auto/service/%24provide&quot;&gt;$ provide&lt;/a&gt; .value 在模块上注册，键是要与注入器上的值关联的字符串名称（或令牌）。</target>
        </trans-unit>
        <trans-unit id="073409b35c0c0f930de30627faccf49f13191a84" translate="yes" xml:space="preserve">
          <source>any numerical value that is less than the current min val, or greater than the current max val is set to the min / max val respectively.</source>
          <target state="translated">任何小于当前最小值或大于当前最大值的数值分别被设置为最小/最大值。</target>
        </trans-unit>
        <trans-unit id="b7ec3ce2d598d853d6424780cb28b3afd4e2473d" translate="yes" xml:space="preserve">
          <source>any object to turn into string.</source>
          <target state="translated">任何对象变成字符串。</target>
        </trans-unit>
        <trans-unit id="2fc3755cd6bceda22809a5406c917a80f78fcdc5" translate="yes" xml:space="preserve">
          <source>any string which can contain &lt;code&gt;{{}}&lt;/code&gt; markup.</source>
          <target state="translated">可以包含 &lt;code&gt;{{}}&lt;/code&gt; 标记的任何字符串。</target>
        </trans-unit>
        <trans-unit id="d8bc79225279efa2fa4466ac1769cf173cdcb84f" translate="yes" xml:space="preserve">
          <source>anyPropertyKey</source>
          <target state="translated">anyPropertyKey</target>
        </trans-unit>
        <trans-unit id="3030e728f154bf51419109efb93b6b8aeec9a976" translate="yes" xml:space="preserve">
          <source>args</source>
          <target state="translated">args</target>
        </trans-unit>
        <trans-unit id="e4da0169f8ee9bb9ce2fe06c120e2b8ce022d3f5" translate="yes" xml:space="preserve">
          <source>aria-checked</source>
          <target state="translated">aria-checked</target>
        </trans-unit>
        <trans-unit id="d5fe59cc1871df7168888f1c4f3da7789e897a42" translate="yes" xml:space="preserve">
          <source>aria-checked, aria-valuemin, aria-valuemax, aria-valuenow, aria-invalid, aria-required, input roles</source>
          <target state="translated">aria-checked,aria-valuemin,aria-valuemax,aria-valuenow,aria-invalid,aria-required,input roles.</target>
        </trans-unit>
        <trans-unit id="574e314c2ead52924e57153fec36ea9a20af000a" translate="yes" xml:space="preserve">
          <source>aria-disabled</source>
          <target state="translated">aria-disabled</target>
        </trans-unit>
        <trans-unit id="90a7593352d8c689d57f37ffaacbf4c62a6c651b" translate="yes" xml:space="preserve">
          <source>aria-hidden</source>
          <target state="translated">aria-hidden</target>
        </trans-unit>
        <trans-unit id="7795a4309336e0340c95cced20ca0948d629b4a9" translate="yes" xml:space="preserve">
          <source>aria-invalid</source>
          <target state="translated">aria-invalid</target>
        </trans-unit>
        <trans-unit id="9e93023b7188c2db241a52468e43440beb3d4827" translate="yes" xml:space="preserve">
          <source>aria-live</source>
          <target state="translated">aria-live</target>
        </trans-unit>
        <trans-unit id="77b4ddb06eaf152e3dc51d63fbb49c3286acb31f" translate="yes" xml:space="preserve">
          <source>aria-readonly</source>
          <target state="translated">aria-readonly</target>
        </trans-unit>
        <trans-unit id="94bd81e6c0ebe2d9a57e2ba5ac2ee72e5f7afb53" translate="yes" xml:space="preserve">
          <source>aria-required</source>
          <target state="translated">aria-required</target>
        </trans-unit>
        <trans-unit id="90983d5633a71a7048532951c379dc59b217a063" translate="yes" xml:space="preserve">
          <source>aria-valuemax</source>
          <target state="translated">aria-valuemax</target>
        </trans-unit>
        <trans-unit id="f32e849c5ec1dc3616b9fd81906fa67dedc52ff9" translate="yes" xml:space="preserve">
          <source>aria-valuemin</source>
          <target state="translated">aria-valuemin</target>
        </trans-unit>
        <trans-unit id="1adf2b45cbb6530bac7108ab2cfed5cf715dec50" translate="yes" xml:space="preserve">
          <source>aria-valuenow</source>
          <target state="translated">aria-valuenow</target>
        </trans-unit>
        <trans-unit id="19edc1210777ba4d45049c29280d9cc5e1064c25" translate="yes" xml:space="preserve">
          <source>array</source>
          <target state="translated">array</target>
        </trans-unit>
        <trans-unit id="577ae834d195d782658ea89d73d4c3e4866fd706" translate="yes" xml:space="preserve">
          <source>as CSS class:</source>
          <target state="translated">作为CSS类。</target>
        </trans-unit>
        <trans-unit id="840026553d79a9da447f68666152e193eace3610" translate="yes" xml:space="preserve">
          <source>as attribute:</source>
          <target state="translated">作为属性。</target>
        </trans-unit>
        <trans-unit id="169bb17a5f699de7f8cb1f8b0484f92b84304e03" translate="yes" xml:space="preserve">
          <source>as element:</source>
          <target state="translated">作为元素。</target>
        </trans-unit>
        <trans-unit id="b116a5b7748ff3cc4dd3169437134d5fa71b0abe" translate="yes" xml:space="preserve">
          <source>assertEmpty();</source>
          <target state="translated">assertEmpty();</target>
        </trans-unit>
        <trans-unit id="5cc38f752fbcd20e0ede374ade87a15a97c630bb" translate="yes" xml:space="preserve">
          <source>assignable &lt;a href=&quot;../../../guide/expression&quot;&gt;Expression&lt;/a&gt; to bind to.</source>
          <target state="translated">要绑定的可分配&lt;a href=&quot;../../../guide/expression&quot;&gt;表达式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5b7edbd04742370944887cede91e6592b42168d1" translate="yes" xml:space="preserve">
          <source>at least one &lt;a href=&quot;%24rootscope.scope#%24digest.html&quot;&gt;$digest cycle&lt;/a&gt; will be performed after &lt;code&gt;expression&lt;/code&gt; execution.</source>
          <target state="translated">&lt;code&gt;expression&lt;/code&gt; 执行后至少要执行一个&lt;a href=&quot;%24rootscope.scope#%24digest.html&quot;&gt;$ digest循环&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d7f67a250d8254339cc572b200990d99fe1baf29" translate="yes" xml:space="preserve">
          <source>attributes</source>
          <target state="translated">attributes</target>
        </trans-unit>
        <trans-unit id="130856e90bbab066b8bff5aef533f2fbad235efb" translate="yes" xml:space="preserve">
          <source>attrs</source>
          <target state="translated">attrs</target>
        </trans-unit>
        <trans-unit id="0d612c12d2ac33625bf3e0351b6f5e4f73829fa8" translate="yes" xml:space="preserve">
          <source>auto</source>
          <target state="translated">auto</target>
        </trans-unit>
        <trans-unit id="cac128d85d9b3d4e3d16037672a113a7a3b261fb" translate="yes" xml:space="preserve">
          <source>autoscroll</source>
          <target state="translated">autoscroll</target>
        </trans-unit>
        <trans-unit id="71051decbb3eca6f79368145b80a9f8f850d7727" translate="yes" xml:space="preserve">
          <source>aware of docroot/context from which the application is loaded</source>
          <target state="translated">意识到加载应用程序的docroot/context。</target>
        </trans-unit>
        <trans-unit id="cbc13ba1beddc85fae40d5033c2a906fc8a9e615" translate="yes" xml:space="preserve">
          <source>bannedResourceUrlList</source>
          <target state="translated">bannedResourceUrlList</target>
        </trans-unit>
        <trans-unit id="162fed3a9c4cd993b9faa61313b1cb13dfb348bb" translate="yes" xml:space="preserve">
          <source>bannedResourceUrlList([bannedResourceUrlList]);</source>
          <target state="translated">bannedResourceUrlList([bannedResourceUrlList]);</target>
        </trans-unit>
        <trans-unit id="8cbd0a74c6efdb39943b290bb82c9d6b2a6ee5a6" translate="yes" xml:space="preserve">
          <source>begin</source>
          <target state="translated">begin</target>
        </trans-unit>
        <trans-unit id="a949f399728844e8c30720f47d3006283047975b" translate="yes" xml:space="preserve">
          <source>bind();</source>
          <target state="translated">bind();</target>
        </trans-unit>
        <trans-unit id="de97464b94cd65657a2ecd7c108e1d89b7a2afb1" translate="yes" xml:space="preserve">
          <source>bindToController</source>
          <target state="translated">bindToController</target>
        </trans-unit>
        <trans-unit id="da3fe922683e598dda35cf79f8402e7036236b0b" translate="yes" xml:space="preserve">
          <source>bindings</source>
          <target state="translated">bindings</target>
        </trans-unit>
        <trans-unit id="2325d20186382d4e93e362f765f1f70fe128ee38" translate="yes" xml:space="preserve">
          <source>blacklist</source>
          <target state="translated">blacklist</target>
        </trans-unit>
        <trans-unit id="190c059ecd4f2e56f8305e2937324828ed1ead38" translate="yes" xml:space="preserve">
          <source>blueimp-fileupload for AngularJS</source>
          <target state="translated">blueimp-fileupload for AngularJS。</target>
        </trans-unit>
        <trans-unit id="b58ccb7871e0261dfe6de9e4f5274543ebbebeb8" translate="yes" xml:space="preserve">
          <source>broadcast</source>
          <target state="translated">broadcast</target>
        </trans-unit>
        <trans-unit id="46994abe629a11abbf27bc5c871783c56252dd69" translate="yes" xml:space="preserve">
          <source>browserTrigger</source>
          <target state="translated">browserTrigger</target>
        </trans-unit>
        <trans-unit id="877621137926045b49299299f2d3475ae339a61b" translate="yes" xml:space="preserve">
          <source>but some of your templates are hosted on other domains you control such as &lt;code&gt;http://srv01.assets.example.com/&lt;/code&gt;, &lt;code&gt;http://srv02.assets.example.com/&lt;/code&gt;, etc.</source>
          <target state="translated">但你的一些模板托管在你的控制，如其他领域 &lt;code&gt;http://srv01.assets.example.com/&lt;/code&gt; ， &lt;code&gt;http://srv02.assets.example.com/&lt;/code&gt; 等。</target>
        </trans-unit>
        <trans-unit id="c288f0ce0b3aef25df2b0e1cd1e040c2e3e587c0" translate="yes" xml:space="preserve">
          <source>but the scopes will inherit prototypically from different scopes to their &lt;code&gt;$parent&lt;/code&gt;.</source>
          <target state="translated">但是作用域原型将从不同的作用域继承到它们的 &lt;code&gt;$parent&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aff989d6652269707fc47b298eaf4e3ee87f65f4" translate="yes" xml:space="preserve">
          <source>but this will not work:</source>
          <target state="translated">但这是行不通的。</target>
        </trans-unit>
        <trans-unit id="724175b1a8337227fe8870a8833eb806b76198f0" translate="yes" xml:space="preserve">
          <source>cache a specific response - set config.cache value to TRUE or to a cache object</source>
          <target state="translated">缓存一个特定的响应--将config.cache值设置为 &quot;TRUE &quot;或缓存对象。</target>
        </trans-unit>
        <trans-unit id="1734c3f5ac3155f420a99cb58fdf47a50edfc0a8" translate="yes" xml:space="preserve">
          <source>cache all responses - set the default cache value to TRUE or to a cache object</source>
          <target state="translated">缓存所有响应-将默认缓存值设置为 &quot;TRUE &quot;或缓存对象。</target>
        </trans-unit>
        <trans-unit id="434f756dca9578d143eeca19d6f627fe526235e6" translate="yes" xml:space="preserve">
          <source>cacheId</source>
          <target state="translated">cacheId</target>
        </trans-unit>
        <trans-unit id="3aef7ed4858c4fd8a90214c8beb6982ca436a8ca" translate="yes" xml:space="preserve">
          <source>call &lt;code&gt;$setViewValue&lt;/code&gt; method, whenever the user interacts with the control and model needs to be updated. This is usually done inside a DOM Event listener.</source>
          <target state="translated">每当用户与控件交互并且需要更新模型时，都调用 &lt;code&gt;$setViewValue&lt;/code&gt; 方法。这通常是在DOM事件监听器中完成的。</target>
        </trans-unit>
        <trans-unit id="b4d5b37bf7a986c138ede89e0806f366b5cb1830" translate="yes" xml:space="preserve">
          <source>callback</source>
          <target state="translated">callback</target>
        </trans-unit>
        <trans-unit id="731e833c4a19e6f39c4bc41eb6b12834fd6b31f1" translate="yes" xml:space="preserve">
          <source>callbackPath</source>
          <target state="translated">callbackPath</target>
        </trans-unit>
        <trans-unit id="14dc69de2a1e6087529f02b62fd2888c90d741d3" translate="yes" xml:space="preserve">
          <source>caller</source>
          <target state="translated">caller</target>
        </trans-unit>
        <trans-unit id="db8ce75ae53155b9f218960a43ae8b1e8c02c2b4" translate="yes" xml:space="preserve">
          <source>can create functions</source>
          <target state="translated">可以创建功能</target>
        </trans-unit>
        <trans-unit id="ee5486cc556478a60a26970ecc14457607891544" translate="yes" xml:space="preserve">
          <source>can create primitives</source>
          <target state="translated">可以创建基元</target>
        </trans-unit>
        <trans-unit id="dac29db03a3e7c45ab887dc423aa190004f70acd" translate="yes" xml:space="preserve">
          <source>can have dependencies</source>
          <target state="translated">可以有依赖性</target>
        </trans-unit>
        <trans-unit id="1c7e2c912e3b7dbb0a0c98890434f247ef0768b6" translate="yes" xml:space="preserve">
          <source>cancel([promise]);</source>
          <target state="translated">cancel([promise]);</target>
        </trans-unit>
        <trans-unit id="5bc3e47c7fdf2f9907d58b16de826f38b1259d58" translate="yes" xml:space="preserve">
          <source>cancel(animationRunner);</source>
          <target state="translated">cancel(animationRunner);</target>
        </trans-unit>
        <trans-unit id="4f70136abe7b9258b5514dad34f2da6d156dffe7" translate="yes" xml:space="preserve">
          <source>cancel(promise);</source>
          <target state="translated">cancel(promise);</target>
        </trans-unit>
        <trans-unit id="42063b59621b05ee7a679e016473663ab1e80c3a" translate="yes" xml:space="preserve">
          <source>caseInsensitiveMatch</source>
          <target state="translated">caseInsensitiveMatch</target>
        </trans-unit>
        <trans-unit id="ccadf5de3d738fbe992636fbe8daf8e3fae6b80c" translate="yes" xml:space="preserve">
          <source>cause</source>
          <target state="translated">cause</target>
        </trans-unit>
        <trans-unit id="df7aab38d211d1b2aba4e26f2e6a1d2098395488" translate="yes" xml:space="preserve">
          <source>check if a controller with given name is registered via &lt;code&gt;$controllerProvider&lt;/code&gt;</source>
          <target state="translated">检查给定名称的控制器是否通过 &lt;code&gt;$controllerProvider&lt;/code&gt; 注册</target>
        </trans-unit>
        <trans-unit id="8bdb257d0869949981da5c708b76d76605c0af5f" translate="yes" xml:space="preserve">
          <source>check if evaluating the string on the current scope returns a constructor</source>
          <target state="translated">检查在当前作用域中评估字符串是否返回一个构造函数。</target>
        </trans-unit>
        <trans-unit id="57018890029a5ca0506e051ea1f395b61b2a6106" translate="yes" xml:space="preserve">
          <source>checkbox</source>
          <target state="translated">checkbox</target>
        </trans-unit>
        <trans-unit id="d80a05355eb77272dccf26e73f9d554a520a954d" translate="yes" xml:space="preserve">
          <source>className</source>
          <target state="translated">className</target>
        </trans-unit>
        <trans-unit id="3c3e62555a91b543538f8b3245c62fd4f6db4e5a" translate="yes" xml:space="preserve">
          <source>classNameFilter([expression]);</source>
          <target state="translated">classNameFilter([expression]);</target>
        </trans-unit>
        <trans-unit id="24cae32cbee8b4b5816713f154a40fe2df0adb87" translate="yes" xml:space="preserve">
          <source>classVal</source>
          <target state="translated">classVal</target>
        </trans-unit>
        <trans-unit id="7fb4c90ded6fbb6855d5f176554ffa0ea42388ff" translate="yes" xml:space="preserve">
          <source>clobbering user input by overwriting it</source>
          <target state="translated">覆盖用户输入的信息,使用户的输入被淹没。</target>
        </trans-unit>
        <trans-unit id="c37ff1bfc55740e0740226b95e9d08cd0c86a596" translate="yes" xml:space="preserve">
          <source>closeAndFlush();</source>
          <target state="translated">closeAndFlush();</target>
        </trans-unit>
        <trans-unit id="2037de437c80264ccbce8a8b61d0bf9f593d2322" translate="yes" xml:space="preserve">
          <source>collection</source>
          <target state="translated">collection</target>
        </trans-unit>
        <trans-unit id="5aba39998cf27c8ef94342577ad9ebeb9f463d7d" translate="yes" xml:space="preserve">
          <source>commentDirectivesEnabled(enabled);</source>
          <target state="translated">commentDirectivesEnabled(enabled);</target>
        </trans-unit>
        <trans-unit id="ce0a49abc9442bd4e296b8c48d50f5fd2153b073" translate="yes" xml:space="preserve">
          <source>comparator</source>
          <target state="translated">comparator</target>
        </trans-unit>
        <trans-unit id="36d0981b3375d78be03ea98700ecec8f4e4bd4f9" translate="yes" xml:space="preserve">
          <source>compile</source>
          <target state="translated">compile</target>
        </trans-unit>
        <trans-unit id="619fb7d090dcc14860e43539c9678d893b195223" translate="yes" xml:space="preserve">
          <source>compile function</source>
          <target state="translated">编译功能</target>
        </trans-unit>
        <trans-unit id="a41ec2fa885d28dc95ed5390662352cc679a3b8f" translate="yes" xml:space="preserve">
          <source>compile the DOM treating the &lt;a href=&quot;../api/ng/directive/ngapp&quot;&gt;&lt;code&gt;ngApp&lt;/code&gt;&lt;/a&gt; directive as the root of the compilation. This allows you to tell it to treat only a portion of the DOM as an AngularJS application.</source>
          <target state="translated">编译将&lt;a href=&quot;../api/ng/directive/ngapp&quot;&gt; &lt;code&gt;ngApp&lt;/code&gt; &lt;/a&gt;指令视为编译根的DOM 。这使您可以告诉它仅将DOM的一部分视为AngularJS应用程序。</target>
        </trans-unit>
        <trans-unit id="79aeecd9743c66b9ac32bb23ba40b903bd867f61" translate="yes" xml:space="preserve">
          <source>component(name, options);</source>
          <target state="translated">component(name,options)。</target>
        </trans-unit>
        <trans-unit id="f71e5995177c9cbdd530543c3b5b6a750250117b" translate="yes" xml:space="preserve">
          <source>componentName</source>
          <target state="translated">componentName</target>
        </trans-unit>
        <trans-unit id="dfba7aade0868074c2861c98e2a9a92f3178a51b" translate="yes" xml:space="preserve">
          <source>config</source>
          <target state="translated">config</target>
        </trans-unit>
        <trans-unit id="dad39b1340f5e81b523db660b952fe576c7e3977" translate="yes" xml:space="preserve">
          <source>config(config);</source>
          <target state="translated">config(config);</target>
        </trans-unit>
        <trans-unit id="3f03e95fcc2408b112b3f02d6c26371489172350" translate="yes" xml:space="preserve">
          <source>config(configFn);</source>
          <target state="translated">config(configFn);</target>
        </trans-unit>
        <trans-unit id="4fcf288fd3f9fdb863872111e662433eeaab03c4" translate="yes" xml:space="preserve">
          <source>configFn</source>
          <target state="translated">configFn</target>
        </trans-unit>
        <trans-unit id="0652e436f42d75f5672a8bd9ae2f398a55115d51" translate="yes" xml:space="preserve">
          <source>configuration</source>
          <target state="translated">configuration</target>
        </trans-unit>
        <trans-unit id="6edc9d0d3b7323196588f09d3e69c0e707ddd214" translate="yes" xml:space="preserve">
          <source>constant name</source>
          <target state="translated">常名</target>
        </trans-unit>
        <trans-unit id="022143400e27034e2b452902910052aa5d3d40bf" translate="yes" xml:space="preserve">
          <source>constant(name, object);</source>
          <target state="translated">constant(name,object)。</target>
        </trans-unit>
        <trans-unit id="4eda1f65916982031b9996a7352588a92e2a256c" translate="yes" xml:space="preserve">
          <source>constant(name, value);</source>
          <target state="translated">constant(name,value)。</target>
        </trans-unit>
        <trans-unit id="8a1c1339801686eb9bf9a9ac5b4719b8c8b8fc9b" translate="yes" xml:space="preserve">
          <source>constructor</source>
          <target state="translated">constructor</target>
        </trans-unit>
        <trans-unit id="255a762c36cdae2fe950e67e8b8a4efb260e7540" translate="yes" xml:space="preserve">
          <source>container</source>
          <target state="translated">container</target>
        </trans-unit>
        <trans-unit id="ec2727b3b71f07635f726026bef44352ec89e452" translate="yes" xml:space="preserve">
          <source>context</source>
          <target state="translated">context</target>
        </trans-unit>
        <trans-unit id="485de35f978382a7931552705084adc608782e98" translate="yes" xml:space="preserve">
          <source>context where the model is stored so that controllers, directives and expressions can access it</source>
          <target state="translated">存储模型的上下文,以便控制器、指令和表达式可以访问它。</target>
        </trans-unit>
        <trans-unit id="2aeede80be6f6dfc0aa4d1cbd6487e24e27a81be" translate="yes" xml:space="preserve">
          <source>control</source>
          <target state="translated">control</target>
        </trans-unit>
        <trans-unit id="9214ada1a69c999c230aeef26b11135fccadd140" translate="yes" xml:space="preserve">
          <source>control object, either a &lt;a href=&quot;form.formcontroller&quot;&gt;&lt;code&gt;form.FormController&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;ngmodel.ngmodelcontroller&quot;&gt;&lt;code&gt;ngModel.NgModelController&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">控制对象，可以是&lt;a href=&quot;form.formcontroller&quot;&gt; &lt;code&gt;form.FormController&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;ngmodel.ngmodelcontroller&quot;&gt; &lt;code&gt;ngModel.NgModelController&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f79a2222c311aaf3748e792896911891d1ff255b" translate="yes" xml:space="preserve">
          <source>controller</source>
          <target state="translated">controller</target>
        </trans-unit>
        <trans-unit id="3393f80dead0e92d893797bf9753446eea4c40e1" translate="yes" xml:space="preserve">
          <source>controller(name, constructor);</source>
          <target state="translated">controller(name,constructor)。</target>
        </trans-unit>
        <trans-unit id="c4312397de3d25f72ed2080de2f2babdc151d494" translate="yes" xml:space="preserve">
          <source>controllerAs</source>
          <target state="translated">controllerAs</target>
        </trans-unit>
        <trans-unit id="ee9f38e186ba06f57b7b74d7e626b94e13ce2556" translate="yes" xml:space="preserve">
          <source>count</source>
          <target state="translated">count</target>
        </trans-unit>
        <trans-unit id="f647f69aa4e0dca2154dbc32752637dcac0be56d" translate="yes" xml:space="preserve">
          <source>create the application &lt;a href=&quot;../api/auto/service/%24injector&quot;&gt;injector&lt;/a&gt;</source>
          <target state="translated">创建应用程序&lt;a href=&quot;../api/auto/service/%24injector&quot;&gt;注入器&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6e8cf6dc320940291233bbd8d2ca95e4fe3444aa" translate="yes" xml:space="preserve">
          <source>createCallback(url);</source>
          <target state="translated">createCallback(url);</target>
        </trans-unit>
        <trans-unit id="513123c7fa9777c8daa2fb60229e9768193a68c8" translate="yes" xml:space="preserve">
          <source>createChild(options);</source>
          <target state="translated">createChild(options);</target>
        </trans-unit>
        <trans-unit id="96eb6bc4bfbabdd67086be1fb93b2aad86b5b2ea" translate="yes" xml:space="preserve">
          <source>cssClassDirectivesEnabled(enabled);</source>
          <target state="translated">cssClassDirectivesEnabled(enabled);</target>
        </trans-unit>
        <trans-unit id="4024700fd9f055274c529971e23ba54c20b0907c" translate="yes" xml:space="preserve">
          <source>ctx</source>
          <target state="translated">ctx</target>
        </trans-unit>
        <trans-unit id="001517ee5d3d0c7f4481ec2cd77c6aefd2fa802e" translate="yes" xml:space="preserve">
          <source>currency</source>
          <target state="translated">currency</target>
        </trans-unit>
        <trans-unit id="17899e3230216b05a3a19ba5b02ad7fa35cba0c5" translate="yes" xml:space="preserve">
          <source>currency (filter)</source>
          <target state="translated">货币</target>
        </trans-unit>
        <trans-unit id="405ab5d2b930fe3725b3cb1ace051f9fd3d6d7af" translate="yes" xml:space="preserve">
          <source>current</source>
          <target state="translated">current</target>
        </trans-unit>
        <trans-unit id="0da51e9d88714e1d42bf061215fcb94e1ec317f3" translate="yes" xml:space="preserve">
          <source>current value if used as getter or itself (chaining) if used as setter</source>
          <target state="translated">如果作为getter使用,则为当前值;如果作为setter使用,则为自身值(链式)。</target>
        </trans-unit>
        <trans-unit id="83c235fa7153604b78de8f539a6e1ea81badd05c" translate="yes" xml:space="preserve">
          <source>customFilter([filterFn]);</source>
          <target state="translated">customFilter([filterFn]);</target>
        </trans-unit>
        <trans-unit id="a17c9aaa61e80a1bf71d0d850af4e5baa9800bbd" translate="yes" xml:space="preserve">
          <source>data</source>
          <target state="translated">data</target>
        </trans-unit>
        <trans-unit id="e927d0677c77241b707442314346326278051dd6" translate="yes" xml:space="preserve">
          <source>date</source>
          <target state="translated">date</target>
        </trans-unit>
        <trans-unit id="1fed21df96f828bf4b17f3ade9d398644550665d" translate="yes" xml:space="preserve">
          <source>date (filter)</source>
          <target state="translated">日期</target>
        </trans-unit>
        <trans-unit id="79c4025f6426154a006772464eb9319e97b987a9" translate="yes" xml:space="preserve">
          <source>datetime-local</source>
          <target state="translated">datetime-local</target>
        </trans-unit>
        <trans-unit id="20a7d198d6afda6008beaadca12aaabe231fb979" translate="yes" xml:space="preserve">
          <source>debug();</source>
          <target state="translated">debug();</target>
        </trans-unit>
        <trans-unit id="11f91401a5caa7f84f60657a9bca5965ed824b1b" translate="yes" xml:space="preserve">
          <source>debug.logs</source>
          <target state="translated">debug.logs</target>
        </trans-unit>
        <trans-unit id="e6e0c9c822e67f9478cd303d5b7ece8c29fb4f85" translate="yes" xml:space="preserve">
          <source>debugEnabled([flag]);</source>
          <target state="translated">debugEnabled([flag]);</target>
        </trans-unit>
        <trans-unit id="db5d35916228e56660a5a8fac73a6225c3985e7b" translate="yes" xml:space="preserve">
          <source>debugInfoEnabled([enabled]);</source>
          <target state="translated">debugInfoEnabled([enabled]);</target>
        </trans-unit>
        <trans-unit id="ca321cad00ed1863a8f075f33678ed2975cf9b7f" translate="yes" xml:space="preserve">
          <source>decorFn</source>
          <target state="translated">decorFn</target>
        </trans-unit>
        <trans-unit id="ee329fb660d413c67e1d067f80ee172e6e8b17ed" translate="yes" xml:space="preserve">
          <source>decorator</source>
          <target state="translated">decorator</target>
        </trans-unit>
        <trans-unit id="e814d39b8c647482ee13d32af75b33398d6425dc" translate="yes" xml:space="preserve">
          <source>decorator(name, decorFn);</source>
          <target state="translated">decorator(name,decorFn)。</target>
        </trans-unit>
        <trans-unit id="e49ce7f4d04a7768ca7de99536b8e613882bdde9" translate="yes" xml:space="preserve">
          <source>decorator(name, decorator);</source>
          <target state="translated">decorator(name,decorator)。</target>
        </trans-unit>
        <trans-unit id="c5589a55905e805e54d0f51283348a0503beaab1" translate="yes" xml:space="preserve">
          <source>default: &lt;code&gt;$element.parent()&lt;/code&gt; resp. &lt;code&gt;$element&lt;/code&gt; for &lt;code&gt;transclude:'element'&lt;/code&gt; resp. &lt;code&gt;transclude:true&lt;/code&gt;.</source>
          <target state="translated">默认值： &lt;code&gt;$element.parent()&lt;/code&gt; 分别。 &lt;code&gt;$element&lt;/code&gt; for &lt;code&gt;transclude:'element'&lt;/code&gt; element'resp。 &lt;code&gt;transclude:true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3b9d266e2ef305531f5a197b746021bf59090e45" translate="yes" xml:space="preserve">
          <source>defaults</source>
          <target state="translated">defaults</target>
        </trans-unit>
        <trans-unit id="2c23ae73fe80881dcfc64aec3d4e6419187ce51c" translate="yes" xml:space="preserve">
          <source>defer();</source>
          <target state="translated">defer();</target>
        </trans-unit>
        <trans-unit id="349221fc49e362e20c2cc36cb013b199bb94b8ed" translate="yes" xml:space="preserve">
          <source>defines the parent to which the &lt;code&gt;cloneLinkingFn&lt;/code&gt; will add the cloned elements.</source>
          <target state="translated">定义 &lt;code&gt;cloneLinkingFn&lt;/code&gt; 将克隆的元素添加到的父对象。</target>
        </trans-unit>
        <trans-unit id="ab464f0252045aaf075411f0f1a6aed0797306c1" translate="yes" xml:space="preserve">
          <source>delay</source>
          <target state="translated">delay</target>
        </trans-unit>
        <trans-unit id="deb0c5efabe5381fec4da90741ac9ac67289b4ec" translate="yes" xml:space="preserve">
          <source>delayed/lazy initialization</source>
          <target state="translated">延迟/缓慢的初始化</target>
        </trans-unit>
        <trans-unit id="c451d26cc712fc49d59c203e486f0271dc52dfed" translate="yes" xml:space="preserve">
          <source>delete(url, [config]);</source>
          <target state="translated">delete(url,[config])。</target>
        </trans-unit>
        <trans-unit id="52913b58f7309ec1a10aef837f481b9cecc9707a" translate="yes" xml:space="preserve">
          <source>dependency injection container</source>
          <target state="translated">依赖注入容器</target>
        </trans-unit>
        <trans-unit id="0cf1bc84bb8baca804f9015a158e88642d415ffa" translate="yes" xml:space="preserve">
          <source>destination</source>
          <target state="translated">destination</target>
        </trans-unit>
        <trans-unit id="7af5b5c0ddd59324f0fbb610d085e24b862405a0" translate="yes" xml:space="preserve">
          <source>destroy();</source>
          <target state="translated">destroy();</target>
        </trans-unit>
        <trans-unit id="c3b8bd8133fead79ea023f3a6bba36ff2fbef59d" translate="yes" xml:space="preserve">
          <source>digestTtl(limit);</source>
          <target state="translated">digestTtl(limit);</target>
        </trans-unit>
        <trans-unit id="3d981bf920ab98c455a9796d062745b9d6b5cbfb" translate="yes" xml:space="preserve">
          <source>directive</source>
          <target state="translated">directive</target>
        </trans-unit>
        <trans-unit id="47b62e4cb2459e9ef19a8817586e10c8648f22ee" translate="yes" xml:space="preserve">
          <source>directive in module &lt;a href=&quot;../../nganimate&quot;&gt;ngAnimate&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../nganimate&quot;&gt;ngAnimate&lt;/a&gt;模块中的指令</target>
        </trans-unit>
        <trans-unit id="0111c19cb3ab20c7c050a43b401903feb7ea963e" translate="yes" xml:space="preserve">
          <source>directive in module &lt;a href=&quot;../../ngcomponentrouter&quot;&gt;ngComponentRouter&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../ngcomponentrouter&quot;&gt;ngComponentRouter&lt;/a&gt;模块中的指令</target>
        </trans-unit>
        <trans-unit id="82aed0239debf8325e9be4f6bed1c9c18a2fe125" translate="yes" xml:space="preserve">
          <source>directive in module &lt;a href=&quot;../../ngmessages&quot;&gt;ngMessages&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../ngmessages&quot;&gt;ngMessages&lt;/a&gt;模块中的指令</target>
        </trans-unit>
        <trans-unit id="9d171814614f791eb4b283550352d1fb4e11f06f" translate="yes" xml:space="preserve">
          <source>directive in module &lt;a href=&quot;../../ngroute&quot;&gt;ngRoute&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../ngroute&quot;&gt;ngRoute&lt;/a&gt;模块中的指令</target>
        </trans-unit>
        <trans-unit id="2a66c70c6e27b86a0f31ab611cf6a2218895fbf8" translate="yes" xml:space="preserve">
          <source>directive in module &lt;a href=&quot;../../ngtouch&quot;&gt;ngTouch&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../ngtouch&quot;&gt;ngTouch&lt;/a&gt;模块中的指令</target>
        </trans-unit>
        <trans-unit id="dbc2b432a84848b99b7873866c196a072fca402b" translate="yes" xml:space="preserve">
          <source>directive in module &lt;a href=&quot;https://code.angularjs.org/1.7.8/docs/api/ng&quot;&gt;ng&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://code.angularjs.org/1.7.8/docs/api/ng&quot;&gt;ng&lt;/a&gt;模块中的指令</target>
        </trans-unit>
        <trans-unit id="8d5a49a5ec875fa0d91d2962766558c31c917fef" translate="yes" xml:space="preserve">
          <source>directive in module &lt;a href=&quot;https://code.angularjs.org/1.8.2/docs/api/ng&quot;&gt;ng&lt;/a&gt;</source>
          <target state="translated">directive in module &lt;a href=&quot;https://code.angularjs.org/1.8.2/docs/api/ng&quot;&gt;ng&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="86637b3ffda5786b80965a8ea6d3ce474e20fbbe" translate="yes" xml:space="preserve">
          <source>directive(name, directiveFactory);</source>
          <target state="translated">directive(name,directiveFactory)。</target>
        </trans-unit>
        <trans-unit id="33b8875e5606c60e0239a2bc975e0b44cba62d4a" translate="yes" xml:space="preserve">
          <source>directiveFactory</source>
          <target state="translated">directiveFactory</target>
        </trans-unit>
        <trans-unit id="a937ebb2f9de267c334d1a23a85791e538aa721c" translate="yes" xml:space="preserve">
          <source>disableAutoScrolling();</source>
          <target state="translated">disableAutoScrolling();</target>
        </trans-unit>
        <trans-unit id="a7f719bf74e49f78da1a4edfed258b184a7054ff" translate="yes" xml:space="preserve">
          <source>dst</source>
          <target state="translated">dst</target>
        </trans-unit>
        <trans-unit id="bc03739443888c892beb69b563c0fbd968153207" translate="yes" xml:space="preserve">
          <source>eagerInstantiationEnabled([enabled]);</source>
          <target state="translated">eagerInstantiationEnabled([enabled]);</target>
        </trans-unit>
        <trans-unit id="6d1f7dd43b36cf6e1ef51a3c3f6d1344e4d9d46d" translate="yes" xml:space="preserve">
          <source>egghead.io</source>
          <target state="translated">egghead.io</target>
        </trans-unit>
        <trans-unit id="dece05484839df110745b0a800297c33cc078287" translate="yes" xml:space="preserve">
          <source>element</source>
          <target state="translated">element</target>
        </trans-unit>
        <trans-unit id="eb6166ad40e221ebed68bfdab1bbce8cc65810c7" translate="yes" xml:space="preserve">
          <source>elementName</source>
          <target state="translated">elementName</target>
        </trans-unit>
        <trans-unit id="6851b3982dec35e29a2f2f6d0b028f8311aa1a47" translate="yes" xml:space="preserve">
          <source>elements</source>
          <target state="translated">elements</target>
        </trans-unit>
        <trans-unit id="a88b7dcd1a9e3e17770bbaa6d7515b31a2d7e85d" translate="yes" xml:space="preserve">
          <source>email</source>
          <target state="translated">email</target>
        </trans-unit>
        <trans-unit id="2e96e89125f4c1aef797410a4bfdb32c0632ef0c" translate="yes" xml:space="preserve">
          <source>emit</source>
          <target state="translated">emit</target>
        </trans-unit>
        <trans-unit id="f086997bda9bf63d6c9e59f0964a38dfbc6f8f54" translate="yes" xml:space="preserve">
          <source>enable or disable debug level messages</source>
          <target state="translated">启用或禁用调试级消息</target>
        </trans-unit>
        <trans-unit id="f6e41a60eca4bef5b429034e2b153253f2761beb" translate="yes" xml:space="preserve">
          <source>enable/disable Strict Contextual Escaping (SCE) in a module</source>
          <target state="translated">在模块中启用/禁用严格上下文转义(SCE)。</target>
        </trans-unit>
        <trans-unit id="8bc933cbe3b110e20547014b2993b107c2447c75" translate="yes" xml:space="preserve">
          <source>enableSvg([flag]);</source>
          <target state="translated">enableSvg([flag]);</target>
        </trans-unit>
        <trans-unit id="3ea3f9802accf8817bacd6f3df46a73b93ccddec" translate="yes" xml:space="preserve">
          <source>enabled</source>
          <target state="translated">enabled</target>
        </trans-unit>
        <trans-unit id="877a1c6f470f456114603d0e490364f4872a1631" translate="yes" xml:space="preserve">
          <source>enabled([element], [enabled]);</source>
          <target state="translated">enabled([元素],[enabled])。</target>
        </trans-unit>
        <trans-unit id="4a4ad8e3c4fe48aa830c680066f76acae5438ebe" translate="yes" xml:space="preserve">
          <source>enabled([value]);</source>
          <target state="translated">enabled([value]);</target>
        </trans-unit>
        <trans-unit id="201ad6c99ab5d8e0205ef873c7f6fc97ad74a5ae" translate="yes" xml:space="preserve">
          <source>end symbol.</source>
          <target state="translated">尾号。</target>
        </trans-unit>
        <trans-unit id="fdb2ad96fab569039bb49548ff185e1481af777c" translate="yes" xml:space="preserve">
          <source>endSymbol();</source>
          <target state="translated">endSymbol();</target>
        </trans-unit>
        <trans-unit id="30d00ba2d57c5ad464794297a7ae81c8a2a1b978" translate="yes" xml:space="preserve">
          <source>endSymbol([value]);</source>
          <target state="translated">endSymbol([value]);</target>
        </trans-unit>
        <trans-unit id="3674951ec264a72168cb2d89a5f634e512f6629d" translate="yes" xml:space="preserve">
          <source>enter</source>
          <target state="translated">enter</target>
        </trans-unit>
        <trans-unit id="d8dd377cb3e469adeb813af0eaaf26d9079ab62b" translate="yes" xml:space="preserve">
          <source>enter and leave</source>
          <target state="translated">进出</target>
        </trans-unit>
        <trans-unit id="2f6b8815207bb3d7f8a683bc4ad4c01c61ea035b" translate="yes" xml:space="preserve">
          <source>enter(element, parent, [after], [options]);</source>
          <target state="translated">enter(element,parent,[after],[options])。</target>
        </trans-unit>
        <trans-unit id="3ff05e39b6db7ae28005ad2565bca502710e96f5" translate="yes" xml:space="preserve">
          <source>enter, leave, and move</source>
          <target state="translated">进退</target>
        </trans-unit>
        <trans-unit id="72a898ee4de48190f7f76cec0956a5a5a7f56a1a" translate="yes" xml:space="preserve">
          <source>enter, leave, move: function(element, doneFunction, options)</source>
          <target state="translated">enter,leave,move:function(element,doneFunction,options)</target>
        </trans-unit>
        <trans-unit id="664e31f5f10da2f404d6364c868a8167c13e1acf" translate="yes" xml:space="preserve">
          <source>error();</source>
          <target state="translated">error();</target>
        </trans-unit>
        <trans-unit id="d95befb3b2a5832a908a4db4f3534e5e6e8d05fe" translate="yes" xml:space="preserve">
          <source>error.logs</source>
          <target state="translated">error.logs</target>
        </trans-unit>
        <trans-unit id="7e3bdbd182f7effdc78c07b78699dcbfec75d71c" translate="yes" xml:space="preserve">
          <source>errorCallback</source>
          <target state="translated">errorCallback</target>
        </trans-unit>
        <trans-unit id="84c8e2fd7b284a052478ebb0c729104f129ccb8a" translate="yes" xml:space="preserve">
          <source>errorOnUnhandledRejections([value]);</source>
          <target state="translated">errorOnUnhandledRejections([value]);</target>
        </trans-unit>
        <trans-unit id="5006ed0248a019713b762563076292379daf07b4" translate="yes" xml:space="preserve">
          <source>event</source>
          <target state="translated">event</target>
        </trans-unit>
        <trans-unit id="201f780d7a628efcc7dc2aa79a23bd8657fced73" translate="yes" xml:space="preserve">
          <source>event | container</source>
          <target state="translated">容器</target>
        </trans-unit>
        <trans-unit id="4b4e79c5041a3518a8f1f56a688f67404e6cd0c9" translate="yes" xml:space="preserve">
          <source>eventData</source>
          <target state="translated">eventData</target>
        </trans-unit>
        <trans-unit id="c6b2d1e59b7df1013f4f87d97ff1bffc5a212b6c" translate="yes" xml:space="preserve">
          <source>eventType</source>
          <target state="translated">eventType</target>
        </trans-unit>
        <trans-unit id="5d42ad1769f229c76031f30a404b4f7863d68de0" translate="yes" xml:space="preserve">
          <source>exception</source>
          <target state="translated">exception</target>
        </trans-unit>
        <trans-unit id="86b77de2442fe05048f19c766138a551aa2543be" translate="yes" xml:space="preserve">
          <source>exp</source>
          <target state="translated">exp</target>
        </trans-unit>
        <trans-unit id="cb8acb66ef8c8601ef87dc98152d7f55e2c4e1ef" translate="yes" xml:space="preserve">
          <source>expect(method, url, [data], [headers], [keys]);</source>
          <target state="translated">expect(method,url,[data],[headers],[keys])。</target>
        </trans-unit>
        <trans-unit id="fdffe4d2bdd2f77ebd6338c0b222668ae5ab4121" translate="yes" xml:space="preserve">
          <source>expectDELETE(url, [headers], [keys]);</source>
          <target state="translated">expectDELETE(url,[headers],[keys])。</target>
        </trans-unit>
        <trans-unit id="d34c2f8382fe1bb3d5a846704dbafd43df6177d0" translate="yes" xml:space="preserve">
          <source>expectGET(url, [headers], [keys]);</source>
          <target state="translated">expectGET(url,[headers],[keys])。</target>
        </trans-unit>
        <trans-unit id="b589fbac0470ac5b1ead26d2a8d55be33e19e8ba" translate="yes" xml:space="preserve">
          <source>expectHEAD(url, [headers], [keys]);</source>
          <target state="translated">expectHEAD(url,[headers],[keys])。</target>
        </trans-unit>
        <trans-unit id="fbe90b6b30245b31434fb5e458c93f34612977d9" translate="yes" xml:space="preserve">
          <source>expectJSONP(url, [keys]);</source>
          <target state="translated">expectJSONP(url,[keys])。</target>
        </trans-unit>
        <trans-unit id="068de8bdba72b9723e5e3c8198bcfa1e17e763b2" translate="yes" xml:space="preserve">
          <source>expectPATCH(url, [data], [headers], [keys]);</source>
          <target state="translated">expectPATCH(url,[data],[headers],[keys])。</target>
        </trans-unit>
        <trans-unit id="5e361ddfe0995ac36991c116e0534f23733c6dec" translate="yes" xml:space="preserve">
          <source>expectPOST(url, [data], [headers], [keys]);</source>
          <target state="translated">expectPOST(url,[data],[headers],[keys])。</target>
        </trans-unit>
        <trans-unit id="f8976da304fdadbd1255de84166111cfb98c1e94" translate="yes" xml:space="preserve">
          <source>expectPUT(url, [data], [headers], [keys]);</source>
          <target state="translated">expectPUT(url,[data],[headers],[keys])。</target>
        </trans-unit>
        <trans-unit id="8f35f2ad3a859c1c29f961b65f7d51a7a26ed108" translate="yes" xml:space="preserve">
          <source>expectRoute(method, url);</source>
          <target state="translated">expectRoute(method,url)。</target>
        </trans-unit>
        <trans-unit id="f4c179cec9f41981b02442dccb7656db22cf776b" translate="yes" xml:space="preserve">
          <source>exposes &quot;raw&quot; object with properties that can be directly modified</source>
          <target state="translated">暴露 &quot;原始 &quot;对象,其属性可以直接修改。</target>
        </trans-unit>
        <trans-unit id="cd073c3c2c6f87a99b8741f9ec06932558451cd6" translate="yes" xml:space="preserve">
          <source>exposes jQuery-style getters and setters</source>
          <target state="translated">暴露jQuery风格的getters和setters</target>
        </trans-unit>
        <trans-unit id="ec9814396ba26fa02dc3261046ba55a3b4bb32a6" translate="yes" xml:space="preserve">
          <source>expression</source>
          <target state="translated">expression</target>
        </trans-unit>
        <trans-unit id="dd3542698c8d474d084009d0f54effe3f281f317" translate="yes" xml:space="preserve">
          <source>expression to match against &lt;code&gt;ng-switch-when&lt;/code&gt;. On child elements add:</source>
          <target state="translated">匹配 &lt;code&gt;ng-switch-when&lt;/code&gt; 的表达式。在子元素上添加：</target>
        </trans-unit>
        <trans-unit id="937ab7a36113c2ad802ec17e0352cb05719ca9de" translate="yes" xml:space="preserve">
          <source>extend HTML with custom attributes and elements</source>
          <target state="translated">用自定义属性和元素扩展HTML</target>
        </trans-unit>
        <trans-unit id="7b202d57f214af016fe2923be40110740dd5bb91" translate="yes" xml:space="preserve">
          <source>factory</source>
          <target state="translated">factory</target>
        </trans-unit>
        <trans-unit id="51431ec4744ac283eb7231d4a8574ddcb6c42491" translate="yes" xml:space="preserve">
          <source>factory(name, $getFn);</source>
          <target state="translated">factory(name,$getFn)。</target>
        </trans-unit>
        <trans-unit id="debb1a6bfaabae284e1dd5fbd69356412cd946ed" translate="yes" xml:space="preserve">
          <source>factory(name, providerFunction);</source>
          <target state="translated">工厂(name,providerFunction)。</target>
        </trans-unit>
        <trans-unit id="4bb4ca75941b7bbc5bc6a12be44b22fc9c8d234e" translate="yes" xml:space="preserve">
          <source>filter</source>
          <target state="translated">filter</target>
        </trans-unit>
        <trans-unit id="ccf0eff8251d5d2e6b0a72571f7bc0ab830ed392" translate="yes" xml:space="preserve">
          <source>filter (filter)</source>
          <target state="translated">滤波器</target>
        </trans-unit>
        <trans-unit id="2a7cce727e6ce3450f80d2eba3aaabc860e697cf" translate="yes" xml:space="preserve">
          <source>filter in module &lt;a href=&quot;../../ngsanitize&quot;&gt;ngSanitize&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../ngsanitize&quot;&gt;ngSanitize&lt;/a&gt;模块中的过滤器</target>
        </trans-unit>
        <trans-unit id="b58b121cec378be53223d364b8103a9b646bb9a2" translate="yes" xml:space="preserve">
          <source>filter in module &lt;a href=&quot;https://code.angularjs.org/1.7.8/docs/api/ng&quot;&gt;ng&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://code.angularjs.org/1.7.8/docs/api/ng&quot;&gt;ng&lt;/a&gt;模块中的过滤器</target>
        </trans-unit>
        <trans-unit id="a49525f30e63f2049225fa212c85fe2320a4f736" translate="yes" xml:space="preserve">
          <source>filter in module &lt;a href=&quot;https://code.angularjs.org/1.8.2/docs/api/ng&quot;&gt;ng&lt;/a&gt;</source>
          <target state="translated">filter in module &lt;a href=&quot;https://code.angularjs.org/1.8.2/docs/api/ng&quot;&gt;ng&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d575ec7fb7ae300e3127e48dcf5b4f9c341a07b2" translate="yes" xml:space="preserve">
          <source>filter(name, filterFactory);</source>
          <target state="translated">filter(name,filterFactory)。</target>
        </trans-unit>
        <trans-unit id="13d83525d97c19f216e466d7c5ad44c265937cdc" translate="yes" xml:space="preserve">
          <source>filterFactory</source>
          <target state="translated">filterFactory</target>
        </trans-unit>
        <trans-unit id="9a73b41a3e25b1fe4ae7f66722179d67dcfb66d7" translate="yes" xml:space="preserve">
          <source>filterFn</source>
          <target state="translated">filterFn</target>
        </trans-unit>
        <trans-unit id="112f3a99b283a4e1788dedd8e0e5d35375c33747" translate="yes" xml:space="preserve">
          <source>flag</source>
          <target state="translated">flag</target>
        </trans-unit>
        <trans-unit id="7173ae30958deb9e47aa164e00f376f52584ad19" translate="yes" xml:space="preserve">
          <source>flush();</source>
          <target state="translated">flush();</target>
        </trans-unit>
        <trans-unit id="dfd237798ca041be9fbe0ab0e537b4d8298ea118" translate="yes" xml:space="preserve">
          <source>flush([count], [skip]);</source>
          <target state="translated">flush([count],[skip])。</target>
        </trans-unit>
        <trans-unit id="c1402bea9f88134f8bc07cb2f6e2553c3f5a671a" translate="yes" xml:space="preserve">
          <source>flush([delay]);</source>
          <target state="translated">flush([delay]);</target>
        </trans-unit>
        <trans-unit id="993c16ab62f88a46c3eca8c365b9879968f6a56f" translate="yes" xml:space="preserve">
          <source>flush(millis);</source>
          <target state="translated">flush(millis);</target>
        </trans-unit>
        <trans-unit id="47fdd9283ded80c62bb5e40ce65b0e49a48675b3" translate="yes" xml:space="preserve">
          <source>fn</source>
          <target state="translated">fn</target>
        </trans-unit>
        <trans-unit id="02ed8b1bddbce9e00f5850e2cb77e952d834581b" translate="yes" xml:space="preserve">
          <source>fns</source>
          <target state="translated">fns</target>
        </trans-unit>
        <trans-unit id="dc7b7daa04fef718ab8736c4d7325598e61a3b33" translate="yes" xml:space="preserve">
          <source>for array data sources:</source>
          <target state="translated">用于阵列数据源。</target>
        </trans-unit>
        <trans-unit id="cafe3d63b7da090a87138adde8ac83f43dfb0c57" translate="yes" xml:space="preserve">
          <source>for directives that need to perform actions in compile and pre-link functions, because they aren't available</source>
          <target state="translated">用于需要在编译和预链接函数中执行动作的指令,因为它们不可用。</target>
        </trans-unit>
        <trans-unit id="b7670c86af4cb114f150fe62360301f9949f6746" translate="yes" xml:space="preserve">
          <source>for example, &lt;code&gt;ngOptions&lt;/code&gt; will do so when a &lt;code&gt;track by&lt;/code&gt; clause is included in the comprehension expression or if the select is given the &lt;code&gt;multiple&lt;/code&gt; attribute.</source>
          <target state="translated">例如， &lt;code&gt;ngOptions&lt;/code&gt; 将这样做时， &lt;code&gt;track by&lt;/code&gt; 被包括在理解表达，或者如果选择给出子句 &lt;code&gt;multiple&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="f42678cc70796a97bf5bc3ea4d9fab04eba12378" translate="yes" xml:space="preserve">
          <source>for object data sources:</source>
          <target state="translated">为对象数据源。</target>
        </trans-unit>
        <trans-unit id="d00b39815c187d832cef3239eb7a77580728dc47" translate="yes" xml:space="preserve">
          <source>form</source>
          <target state="translated">form</target>
        </trans-unit>
        <trans-unit id="61e62b67c352e9c95ac08a1e01814af5b0b0ba11" translate="yes" xml:space="preserve">
          <source>form (directive)</source>
          <target state="translated">表格</target>
        </trans-unit>
        <trans-unit id="77ab24d984abc898aa6b04bd2ba231c82ccb745e" translate="yes" xml:space="preserve">
          <source>form / ngForm</source>
          <target state="translated">表格/ngForm</target>
        </trans-unit>
        <trans-unit id="4d9bd194eea91ba31eceb828e539bad68e682c7c" translate="yes" xml:space="preserve">
          <source>form.FormController</source>
          <target state="translated">form.FormController</target>
        </trans-unit>
        <trans-unit id="785987648f85190cfde9eadc69fc7c46fe8a7433" translate="yes" xml:space="preserve">
          <source>format</source>
          <target state="translated">format</target>
        </trans-unit>
        <trans-unit id="85135001148e5c30ae56e85b9f779455ac95e18a" translate="yes" xml:space="preserve">
          <source>formats the value of an expression for display to the user</source>
          <target state="translated">格式化表达式的值,以便显示给用户。</target>
        </trans-unit>
        <trans-unit id="ca3ad6fbb8a83c0baf4db36b289fd1296aae5ee9" translate="yes" xml:space="preserve">
          <source>fractionSize</source>
          <target state="translated">fractionSize</target>
        </trans-unit>
        <trans-unit id="0b1e95cfd9775191a7224d0a218ae79187e80c1d" translate="yes" xml:space="preserve">
          <source>from</source>
          <target state="translated">from</target>
        </trans-unit>
        <trans-unit id="942a84d29aa490822331c9095e5b784b79ed8b03" translate="yes" xml:space="preserve">
          <source>from - &lt;code&gt;{Object|null}&lt;/code&gt; - CSS properties &amp;amp; values at the beginning of the animation</source>
          <target state="translated">从- &lt;code&gt;{Object|null}&lt;/code&gt; - CSS的开头动画的属性和值</target>
        </trans-unit>
        <trans-unit id="dda2f47c36a01d6dff7f5514b2c96de5bb42ff3d" translate="yes" xml:space="preserve">
          <source>full URL</source>
          <target state="translated">完整网址</target>
        </trans-unit>
        <trans-unit id="c218e39efa2e1aae69f39d2054528369ce1e1f46" translate="yes" xml:space="preserve">
          <source>function</source>
          <target state="translated">function</target>
        </trans-unit>
        <trans-unit id="9f411fbc41512390f09aa4194c2d4d420ca6bbcd" translate="yes" xml:space="preserve">
          <source>function available to directives - DEPRECATED.</source>
          <target state="translated">可供指令使用的功能----已取消。</target>
        </trans-unit>
        <trans-unit id="48f4611c3d5b0ac6a0c91073b5d2f392f0380a4a" translate="yes" xml:space="preserve">
          <source>function in module &lt;a href=&quot;../../ngmock&quot;&gt;ngMock&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../ngmock&quot;&gt;ngMock&lt;/a&gt;模块中的功能</target>
        </trans-unit>
        <trans-unit id="77c1501b90526395365d09f99fa02c98cb416963" translate="yes" xml:space="preserve">
          <source>function in module &lt;a href=&quot;https://code.angularjs.org/1.7.8/docs/api/ng&quot;&gt;ng&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://code.angularjs.org/1.7.8/docs/api/ng&quot;&gt;ng&lt;/a&gt;模块中的功能</target>
        </trans-unit>
        <trans-unit id="187d172e6bec1ea023678bcdaea03195fdfb79b9" translate="yes" xml:space="preserve">
          <source>function in module &lt;a href=&quot;https://code.angularjs.org/1.8.2/docs/api/ng&quot;&gt;ng&lt;/a&gt;</source>
          <target state="translated">function in module &lt;a href=&quot;https://code.angularjs.org/1.8.2/docs/api/ng&quot;&gt;ng&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="005a50334d33a38a723b1db11dd3faf29d3bedb2" translate="yes" xml:space="preserve">
          <source>get(cacheId);</source>
          <target state="translated">get(cacheId);</target>
        </trans-unit>
        <trans-unit id="d2c2f7019d27df382aae1474a42251734ae97c2d" translate="yes" xml:space="preserve">
          <source>get(key);</source>
          <target state="translated">get(key);</target>
        </trans-unit>
        <trans-unit id="cb02ade0695bd9427d9d12f83cdc79528d7f45ac" translate="yes" xml:space="preserve">
          <source>get(name, [caller]);</source>
          <target state="translated">get(name,[caller])。</target>
        </trans-unit>
        <trans-unit id="1b6aa88178cd386db7e6f6e59df1053b31367b51" translate="yes" xml:space="preserve">
          <source>get(url, [config]);</source>
          <target state="translated">get(url,[config])。</target>
        </trans-unit>
        <trans-unit id="13300e1c80eda74b6ff8b14081724fc0ee5416c2" translate="yes" xml:space="preserve">
          <source>getAll();</source>
          <target state="translated">getAll();</target>
        </trans-unit>
        <trans-unit id="11e2d0e3cfda6ab2a8aed0b68742304b84ab843f" translate="yes" xml:space="preserve">
          <source>getObject(key);</source>
          <target state="translated">getObject(key);</target>
        </trans-unit>
        <trans-unit id="d0ec47d3bfb6fc32354d73b84d4e8b4e8202d704" translate="yes" xml:space="preserve">
          <source>getOption(name);</source>
          <target state="translated">getOption(name);</target>
        </trans-unit>
        <trans-unit id="97a040f4d452cafdf708229143c844e00f42664a" translate="yes" xml:space="preserve">
          <source>getResponse(callbackPath);</source>
          <target state="translated">getResponse(callbackPath);</target>
        </trans-unit>
        <trans-unit id="27eb84097baaa0bfb02994e9af554a0f37e92d9f" translate="yes" xml:space="preserve">
          <source>getTrusted(type, maybeTrusted);</source>
          <target state="translated">getTrusted(type,maybeTrusted)。</target>
        </trans-unit>
        <trans-unit id="79ba6eb7d9b88ec662619b9907db0b5108f3a864" translate="yes" xml:space="preserve">
          <source>getTrustedCss(value);</source>
          <target state="translated">getTrustedCss(value);</target>
        </trans-unit>
        <trans-unit id="fc70e88a40dcbd4d0757bfb956d803623d2d5912" translate="yes" xml:space="preserve">
          <source>getTrustedHtml(value);</source>
          <target state="translated">getTrustedHtml(value);</target>
        </trans-unit>
        <trans-unit id="870fd3326442cb10007e0707cff9b63a2b366141" translate="yes" xml:space="preserve">
          <source>getTrustedJs(value);</source>
          <target state="translated">getTrustedJs(value);</target>
        </trans-unit>
        <trans-unit id="93db87de12a3fd001092d3dd6fb63b7af3ec32ba" translate="yes" xml:space="preserve">
          <source>getTrustedResourceUrl(value);</source>
          <target state="translated">getTrustedResourceUrl(value);</target>
        </trans-unit>
        <trans-unit id="dae21969c8522a157bb2f491d00264f56aff5bea" translate="yes" xml:space="preserve">
          <source>getTrustedUrl(value);</source>
          <target state="translated">getTrustedUrl(value);</target>
        </trans-unit>
        <trans-unit id="57b752316b777d8004d25d03ae168cfe92901a15" translate="yes" xml:space="preserve">
          <source>has(name);</source>
          <target state="translated">has(name);</target>
        </trans-unit>
        <trans-unit id="2346ad27d7568ba9896f1b7da6b5991251debdf2" translate="yes" xml:space="preserve">
          <source>hash</source>
          <target state="translated">hash</target>
        </trans-unit>
        <trans-unit id="5011f8c863ac0929fe6f292bb4c5780a2b68a457" translate="yes" xml:space="preserve">
          <source>hash([hash]);</source>
          <target state="translated">hash([hash]);</target>
        </trans-unit>
        <trans-unit id="7b3406e76e32f7bd7efc7d17d790718fa6b1d176" translate="yes" xml:space="preserve">
          <source>hashPrefix([prefix]);</source>
          <target state="translated">hashPrefix([prefix]);</target>
        </trans-unit>
        <trans-unit id="e949ab70bba0802d7f2a30ac9c254ded0a053780" translate="yes" xml:space="preserve">
          <source>hashbang URLs in all browsers</source>
          <target state="translated">所有浏览器中的哈希邦网址</target>
        </trans-unit>
        <trans-unit id="2742e9f75a3216ba049cd4a687ccd4f30f3eeb19" translate="yes" xml:space="preserve">
          <source>head(url, [config]);</source>
          <target state="translated">head(url,[config])。</target>
        </trans-unit>
        <trans-unit id="26b47e3d825258ae534f85838d81e93ddd46db1f" translate="yes" xml:space="preserve">
          <source>headers</source>
          <target state="translated">headers</target>
        </trans-unit>
        <trans-unit id="8c617edd42200ec961f3e4700877ccc486005b22" translate="yes" xml:space="preserve">
          <source>host of current URL.</source>
          <target state="translated">当前URL的主机。</target>
        </trans-unit>
        <trans-unit id="3565db349b4ddc2cce331ecf3cf17a773858b8d9" translate="yes" xml:space="preserve">
          <source>host();</source>
          <target state="translated">host();</target>
        </trans-unit>
        <trans-unit id="950a39b6c2934bb72f2def76c71e88e9c035385f" translate="yes" xml:space="preserve">
          <source>html</source>
          <target state="translated">html</target>
        </trans-unit>
        <trans-unit id="42ecd656fcf59d096f584731f50607fa1e0f31af" translate="yes" xml:space="preserve">
          <source>html5Mode object if used as getter or itself (chaining) if used as setter</source>
          <target state="translated">html5Mode对象(如果用作getter)或其本身(链式)(如果用作setter)。</target>
        </trans-unit>
        <trans-unit id="be78385bc3b2282b25b438455f850a1c1919e3a6" translate="yes" xml:space="preserve">
          <source>html5Mode([mode]);</source>
          <target state="translated">html5Mode([mode]);</target>
        </trans-unit>
        <trans-unit id="233e9fc440ca4105099cbb152164be799308509d" translate="yes" xml:space="preserve">
          <source>httpOptions([value]);</source>
          <target state="translated">httpOptions([value]);</target>
        </trans-unit>
        <trans-unit id="77a7e87262d487488d8a620545c9be9bdf0ad8a8" translate="yes" xml:space="preserve">
          <source>i18n and l10n</source>
          <target state="translated">i18n和l10n</target>
        </trans-unit>
        <trans-unit id="87ea5dfc8b8e384d848979496e706390b497e547" translate="yes" xml:space="preserve">
          <source>id</source>
          <target state="translated">id</target>
        </trans-unit>
        <trans-unit id="0efee61c10bc322d0b636ba3dd5c3a2656badd1f" translate="yes" xml:space="preserve">
          <source>ident</source>
          <target state="translated">ident</target>
        </trans-unit>
        <trans-unit id="3ee960eafc0de0ce67b2ced9b75883258ad922a4" translate="yes" xml:space="preserve">
          <source>identifierContinue</source>
          <target state="translated">identifierContinue</target>
        </trans-unit>
        <trans-unit id="36d73a020a0d73243593ff0d61214b4a9b6252aa" translate="yes" xml:space="preserve">
          <source>identifierStart</source>
          <target state="translated">identifierStart</target>
        </trans-unit>
        <trans-unit id="c7c64915aab4b5eadd4a0ebb5a0dfe588ec94483" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;true&lt;/code&gt;, then the returned function returns undefined unless all embedded expressions evaluate to a value other than &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">如果为 &lt;code&gt;true&lt;/code&gt; ，则返回的函数将返回undefined，除非所有嵌入式表达式的求值都不是 &lt;code&gt;undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5e1027a9303d68e8318ab9ea216affe307f740d5" translate="yes" xml:space="preserve">
          <source>if a form has 2+ input fields and no buttons or input[type=submit] then hitting enter doesn't trigger submit</source>
          <target state="translated">如果一个表单有2个以上的输入字段,但没有按钮或输入[type=submit],那么点击回车就不会触发提交。</target>
        </trans-unit>
        <trans-unit id="7bf5a74fcd92925173a43bf767c0d6f5ee7f74fc" translate="yes" xml:space="preserve">
          <source>if a form has one or more input fields and one or more buttons or input[type=submit] then hitting enter in any of the input fields will trigger the click handler on the &lt;em&gt;first&lt;/em&gt; button or input[type=submit] (&lt;code&gt;ngClick&lt;/code&gt;) &lt;em&gt;and&lt;/em&gt; a submit handler on the enclosing form (&lt;code&gt;ngSubmit&lt;/code&gt;)</source>
          <target state="translated">如果窗体具有一个或多个输入字段和一个或多个按钮或输入[类型=提交]然后打在任何输入字段的输入将触发点击事件处理的&lt;em&gt;第一&lt;/em&gt;按钮或输入[类型=提交]（ &lt;code&gt;ngClick&lt;/code&gt; ）&lt;em&gt;和&lt;/em&gt; &lt;code&gt;ngSubmit&lt;/code&gt; 表格（ngSubmit）上的提交处理程序</target>
        </trans-unit>
        <trans-unit id="7f838edcb4897951ffed7eb0c3cfe4916930cfae" translate="yes" xml:space="preserve">
          <source>if both an &lt;a href=&quot;%24animate#addClass.html&quot;&gt;addClass()&lt;/a&gt; and a &lt;a href=&quot;%24animate#removeClass.html&quot;&gt;removeClass()&lt;/a&gt; action are performed during the same animation, the event fired will be &lt;code&gt;setClass&lt;/code&gt;. This is true even for &lt;code&gt;ngClass&lt;/code&gt;.</source>
          <target state="translated">如果在同一动画中同时执行了&lt;a href=&quot;%24animate#addClass.html&quot;&gt;addClass（）&lt;/a&gt;和&lt;a href=&quot;%24animate#removeClass.html&quot;&gt;removeClass（）&lt;/a&gt;动作，则触发的事件将为 &lt;code&gt;setClass&lt;/code&gt; 。即使对于 &lt;code&gt;ngClass&lt;/code&gt; 也是如此。</target>
        </trans-unit>
        <trans-unit id="507febdbe24537c5c5c88559f729b9667eea2650" translate="yes" xml:space="preserve">
          <source>if on the other hand, you need the element to be cloned, the view reference from the original example would not point to the clone, but rather to the original template that was cloned. In this case, you can access the clone either via the &lt;code&gt;cloneAttachFn&lt;/code&gt; or the value returned by the linking function:</source>
          <target state="translated">if on the other hand, you need the element to be cloned, the view reference from the original example would not point to the clone, but rather to the original template that was cloned. In this case, you can access the clone either via the &lt;code&gt;cloneAttachFn&lt;/code&gt; or the value returned by the linking function:</target>
        </trans-unit>
        <trans-unit id="d80461d979f5fa743fdcee0c823cb918980bf71e" translate="yes" xml:space="preserve">
          <source>if on the other hand, you need the element to be cloned, the view reference from the original example would not point to the clone, but rather to the original template that was cloned. In this case, you can access the clone via the cloneAttachFn:</source>
          <target state="translated">如果另一方面,你需要克隆元素,那么原始示例中的视图引用将不会指向克隆,而是指向被克隆的原始模板。在这种情况下,你可以通过cloneAttachFn来访问克隆。</target>
        </trans-unit>
        <trans-unit id="02ccf4c652bc623f16f244e914779c4b6a5a1ce5" translate="yes" xml:space="preserve">
          <source>if set to true then the interpolation string must have embedded expression in order to return an interpolation function. Strings with no embedded expression will return null for the interpolation function.</source>
          <target state="translated">如果设置为true,那么内插字符串必须有内嵌表达式才能返回内插函数。没有嵌入表达式的字符串将返回插值函数的空值。</target>
        </trans-unit>
        <trans-unit id="2b3d3a95b94109fbbe58b69f50f5cf2ef9b9e459" translate="yes" xml:space="preserve">
          <source>if the &lt;code&gt;$viewValue&lt;/code&gt; has changed:</source>
          <target state="translated">如果 &lt;code&gt;$viewValue&lt;/code&gt; 已更改：</target>
        </trans-unit>
        <trans-unit id="432ca0d7b08c70e0405cdb632ae015dc4702014c" translate="yes" xml:space="preserve">
          <source>if the above doesn't apply, &lt;code&gt;JSON.stringify&lt;/code&gt; is used.</source>
          <target state="translated">如果以上都不适用，则使用 &lt;code&gt;JSON.stringify&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="19515d9c603096a818b4caa7d950534567dd085e" translate="yes" xml:space="preserve">
          <source>if the input has continued to be invalid since the model will stay &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">如果输入继续无效，因为模型将保持为 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="803de741bf70da9a228bdc467ce6085edb92b659" translate="yes" xml:space="preserve">
          <source>if the model is changed programmatically and not by a change to the input value</source>
          <target state="translated">如果模型是以程序方式而不是通过改变输入值来改变的。</target>
        </trans-unit>
        <trans-unit id="b2bda1c4fdec16cb2c36301a056329fd40e3784d" translate="yes" xml:space="preserve">
          <source>if the value is an object that is not a &lt;code&gt;Number&lt;/code&gt;, &lt;code&gt;Date&lt;/code&gt; or &lt;code&gt;Array&lt;/code&gt;, $interpolate looks for a custom &lt;code&gt;toString()&lt;/code&gt; function on the object, and uses that. Custom means that &lt;code&gt;myObject.toString !== Object.prototype.toString&lt;/code&gt;.</source>
          <target state="translated">如果值是不是 &lt;code&gt;Number&lt;/code&gt; ， &lt;code&gt;Date&lt;/code&gt; 或 &lt;code&gt;Array&lt;/code&gt; 的对象，则$ interpolate会在该对象上查找自定义的 &lt;code&gt;toString()&lt;/code&gt; 函数，并使用该函数。Custom表示 &lt;code&gt;myObject.toString !== Object.prototype.toString&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="08bdc633831822cd59f38d0f46bf2b75c8acb68e" translate="yes" xml:space="preserve">
          <source>if the value returned from the &lt;code&gt;$parsers&lt;/code&gt; transformation pipeline has not changed</source>
          <target state="translated">如果 &lt;code&gt;$parsers&lt;/code&gt; 转换管道返回的值未更改</target>
        </trans-unit>
        <trans-unit id="2b9a85cfb6bf9d142d6c5a7c4730745770a85eb0" translate="yes" xml:space="preserve">
          <source>if this attribute is present on the app element, the injector will be created in &quot;strict-di&quot; mode. This means that the application will fail to invoke functions which do not use explicit function annotation (and are thus unsuitable for minification), as described in &lt;a href=&quot;../../../guide/di&quot;&gt;the Dependency Injection guide&lt;/a&gt;, and useful debugging info will assist in tracking down the root of these bugs.</source>
          <target state="translated">如果该属性存在于app元素上，则将以&amp;ldquo; strict-di&amp;rdquo;模式创建注射器。这意味着应用程序将无法调用不使用显式函数注释（因此不适合缩小）的函数，如&lt;a href=&quot;../../../guide/di&quot;&gt;Dependency Injection指南中所述&lt;/a&gt;，有用的调试信息将有助于跟踪这些错误的根源。</target>
        </trans-unit>
        <trans-unit id="a769690388438502d9de64ec551cba562b6eb16a" translate="yes" xml:space="preserve">
          <source>ignoreRequestError</source>
          <target state="translated">ignoreRequestError</target>
        </trans-unit>
        <trans-unit id="61ac78eec7078e6109d18a088928cc7319941a7e" translate="yes" xml:space="preserve">
          <source>imgSrcSanitizationTrustedUrlList([regexp]);</source>
          <target state="translated">imgSrcSanitizationTrustedUrlList([regexp]);</target>
        </trans-unit>
        <trans-unit id="f35e826bc5e7bcb5de3ffcd27ee45fd435a942bb" translate="yes" xml:space="preserve">
          <source>imgSrcSanitizationWhitelist();</source>
          <target state="translated">imgSrcSanitizationWhitelist();</target>
        </trans-unit>
        <trans-unit id="39236f912494fb59c5ff59ca111e63e458db0c59" translate="yes" xml:space="preserve">
          <source>imgSrcSanitizationWhitelist([regexp]);</source>
          <target state="translated">imgSrcSanitizationWhitelist([regexp]);</target>
        </trans-unit>
        <trans-unit id="84ff79da75a283c2fb2e4c75aef36804b9051457" translate="yes" xml:space="preserve">
          <source>implement &lt;code&gt;$render&lt;/code&gt; method, which is responsible for rendering the data after it passed the &lt;a href=&quot;../api/ng/type/ngmodel.ngmodelcontroller#%24formatters.html&quot;&gt;&lt;code&gt;NgModelController.$formatters&lt;/code&gt;&lt;/a&gt;,</source>
          <target state="translated">实现 &lt;code&gt;$render&lt;/code&gt; 方法，它是负责呈现数据它通过后&lt;a href=&quot;../api/ng/type/ngmodel.ngmodelcontroller#%24formatters.html&quot;&gt; &lt;code&gt;NgModelController.$formatters&lt;/code&gt; &lt;/a&gt;，</target>
        </trans-unit>
        <trans-unit id="c0e561f457040d6e0445c999d22e973d6fc9d730" translate="yes" xml:space="preserve">
          <source>in one of the following forms:</source>
          <target state="translated">以下列形式之一:</target>
        </trans-unit>
        <trans-unit id="46536b1cdb518e74f8160a58423beeaa0068412a" translate="yes" xml:space="preserve">
          <source>increased render speed by creating the options in a documentFragment instead of individually</source>
          <target state="translated">通过在documentFragment中创建选项来提高渲染速度,而不是单独创建。</target>
        </trans-unit>
        <trans-unit id="59bd0a3ff43b32849b319e645d4798d8a5d1e889" translate="yes" xml:space="preserve">
          <source>info</source>
          <target state="translated">info</target>
        </trans-unit>
        <trans-unit id="02c16cba7c4af0b71152fbce31a89d04a2826279" translate="yes" xml:space="preserve">
          <source>info();</source>
          <target state="translated">info();</target>
        </trans-unit>
        <trans-unit id="be01f8af1782575a9dfaefc425ad8ce42d090df5" translate="yes" xml:space="preserve">
          <source>info([info]);</source>
          <target state="translated">info([info]);</target>
        </trans-unit>
        <trans-unit id="4a2f83d4eeb375d4cb45c4519899823e59be9ca1" translate="yes" xml:space="preserve">
          <source>info.logs</source>
          <target state="translated">info.logs</target>
        </trans-unit>
        <trans-unit id="941c0332d6aefd4c6c03f173e028fd45046fc611" translate="yes" xml:space="preserve">
          <source>initializationFn</source>
          <target state="translated">initializationFn</target>
        </trans-unit>
        <trans-unit id="5f6bb758a703b23a552bbd05bf3b269470bff935" translate="yes" xml:space="preserve">
          <source>initializing data during development, or for examples, as seen throughout these docs.</source>
          <target state="translated">在开发过程中初始化数据,或在这些文档中看到的例子。</target>
        </trans-unit>
        <trans-unit id="5f49560034d50bd4521145b746657a72e3d4f17b" translate="yes" xml:space="preserve">
          <source>injecting data via server side scripting.</source>
          <target state="translated">通过服务器端脚本注入数据。</target>
        </trans-unit>
        <trans-unit id="140f86aae51ab9e1cda9b4254fe98a74eb54c1a1" translate="yes" xml:space="preserve">
          <source>input</source>
          <target state="translated">input</target>
        </trans-unit>
        <trans-unit id="067942f073ffae8ee86838066d3485fbee59de42" translate="yes" xml:space="preserve">
          <source>input (directive)</source>
          <target state="translated">输入端</target>
        </trans-unit>
        <trans-unit id="5d8d4a4d29eeef8d4270faa01567a381724dd03d" translate="yes" xml:space="preserve">
          <source>input in module &lt;a href=&quot;https://code.angularjs.org/1.8.2/docs/api/ng&quot;&gt;ng&lt;/a&gt;</source>
          <target state="translated">input in module &lt;a href=&quot;https://code.angularjs.org/1.8.2/docs/api/ng&quot;&gt;ng&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8dd66dfb0c23f3eab53eb3bc66f567255b972637" translate="yes" xml:space="preserve">
          <source>input[checkbox]</source>
          <target state="translated">input[checkbox]</target>
        </trans-unit>
        <trans-unit id="c480eba59a678ef24d387469f1600953c8a28972" translate="yes" xml:space="preserve">
          <source>input[date]</source>
          <target state="translated">input[date]</target>
        </trans-unit>
        <trans-unit id="1ee7834a1915d47139d9d1a61f0c2bf0742ce47d" translate="yes" xml:space="preserve">
          <source>input[datetime-local]</source>
          <target state="translated">input[datetime-local]</target>
        </trans-unit>
        <trans-unit id="f17419dc225e026437605a1d23ed0c92bc2e6140" translate="yes" xml:space="preserve">
          <source>input[email]</source>
          <target state="translated">input[email]</target>
        </trans-unit>
        <trans-unit id="778ba5cdb39da6bc219bd02e4167fa6170358c5f" translate="yes" xml:space="preserve">
          <source>input[month]</source>
          <target state="translated">input[month]</target>
        </trans-unit>
        <trans-unit id="f96cc8345ffbff9d47335b88bc2f6575ce7e217a" translate="yes" xml:space="preserve">
          <source>input[number]</source>
          <target state="translated">input[number]</target>
        </trans-unit>
        <trans-unit id="cde06c1e3f1755200ba512fc9cbf48c6dc12efbb" translate="yes" xml:space="preserve">
          <source>input[radio]</source>
          <target state="translated">input[radio]</target>
        </trans-unit>
        <trans-unit id="3a1931a3a2d71c1b67878211f39b1624dde95c8f" translate="yes" xml:space="preserve">
          <source>input[range]</source>
          <target state="translated">input[range]</target>
        </trans-unit>
        <trans-unit id="fcfebb46312ed453d7d5480f5a84733293fcff88" translate="yes" xml:space="preserve">
          <source>input[text]</source>
          <target state="translated">input[text]</target>
        </trans-unit>
        <trans-unit id="96cee2082dbd7ec6ccffceee5c21bd87fbb270c1" translate="yes" xml:space="preserve">
          <source>input[time]</source>
          <target state="translated">input[time]</target>
        </trans-unit>
        <trans-unit id="865c711d83d6a35a7ebe516ed590d314f41576e8" translate="yes" xml:space="preserve">
          <source>input[url]</source>
          <target state="translated">input[url]</target>
        </trans-unit>
        <trans-unit id="b98d6ad53db0224f8f097fe86bede7868dd864cc" translate="yes" xml:space="preserve">
          <source>input[week]</source>
          <target state="translated">input[week]</target>
        </trans-unit>
        <trans-unit id="c230c759ceab65786b50ab8f2c7814a85a3a861e" translate="yes" xml:space="preserve">
          <source>instance actions: &lt;code&gt;instance.$action([parameters], [success], [error])&lt;/code&gt;</source>
          <target state="translated">实例操作： &lt;code&gt;instance.$action([parameters], [success], [error])&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f8bd1dafe11c6da95f1ab36ffccb6dfd0639f0b8" translate="yes" xml:space="preserve">
          <source>instanceCache</source>
          <target state="translated">instanceCache</target>
        </trans-unit>
        <trans-unit id="b1e1a4787bc0b04ece5cf1a3ef12e68d233c8a97" translate="yes" xml:space="preserve">
          <source>instantiate(Type, [locals]);</source>
          <target state="translated">instantiate(Type,[locals])。</target>
        </trans-unit>
        <trans-unit id="f31e5c1a53472c0fdebbb784c4d80944f6edf08b" translate="yes" xml:space="preserve">
          <source>integration with AngularJS application life-cycle</source>
          <target state="translated">与AngularJS应用程序生命周期的整合</target>
        </trans-unit>
        <trans-unit id="d05222ed3044b12f9f0bb1fb503a8cc582ba3f35" translate="yes" xml:space="preserve">
          <source>interceptors</source>
          <target state="translated">interceptors</target>
        </trans-unit>
        <trans-unit id="c36aa2f30162f3a92ead96ab2a750949a93d222a" translate="yes" xml:space="preserve">
          <source>invoke(fn, [self], [locals]);</source>
          <target state="translated">invoke(fn,[self],[locals])。</target>
        </trans-unit>
        <trans-unit id="f67929386a0710f3f47a68002f68463fd76b0d63" translate="yes" xml:space="preserve">
          <source>invokeApply</source>
          <target state="translated">invokeApply</target>
        </trans-unit>
        <trans-unit id="9670aac098ff6f96883cae6d9ad8f916a7983c25" translate="yes" xml:space="preserve">
          <source>isEnabled();</source>
          <target state="translated">isEnabled();</target>
        </trans-unit>
        <trans-unit id="faf87ac8631fe5f8acb6795db6609253f6ecda90" translate="yes" xml:space="preserve">
          <source>isValid</source>
          <target state="translated">isValid</target>
        </trans-unit>
        <trans-unit id="eb5779e2b2ea151568ab81e2c47b7350768d5f27" translate="yes" xml:space="preserve">
          <source>isolate</source>
          <target state="translated">isolate</target>
        </trans-unit>
        <trans-unit id="92a4924e8e1ddb5a5b5a9030ebcabc1bf76fb677" translate="yes" xml:space="preserve">
          <source>isolation - if the user forgets to set &lt;code&gt;title&lt;/code&gt; attribute of the dialog widget the dialog template will bind to parent scope property. This is unpredictable and undesirable.</source>
          <target state="translated">隔离-如果用户忘记设置对话框小部件的 &lt;code&gt;title&lt;/code&gt; 属性，则对话框模板将绑定到父作用域属性。这是不可预测的，也是不可取的。</target>
        </trans-unit>
        <trans-unit id="947f1ea66e4603e1109cfa009bb825ab812c7cbf" translate="yes" xml:space="preserve">
          <source>it will execute after the function that scheduled the evaluation (preferably before DOM rendering).</source>
          <target state="translated">它将在预定评估的函数之后执行(最好是在DOM渲染之前)。</target>
        </trans-unit>
        <trans-unit id="bef4aaaa11015ef79d88f3701f4c69ad690eb4c7" translate="yes" xml:space="preserve">
          <source>iterator</source>
          <target state="translated">iterator</target>
        </trans-unit>
        <trans-unit id="e15b23dd31361791009baab73d7e755c284b30fd" translate="yes" xml:space="preserve">
          <source>iterator offset of the repeated element (0..length-1)</source>
          <target state="translated">重复元素的迭代器偏移量(0...长度-1)</target>
        </trans-unit>
        <trans-unit id="8d6c215fbe115f38a9a28d4948a607e47ffda206" translate="yes" xml:space="preserve">
          <source>jQuery object.</source>
          <target state="translated">jQuery对象。</target>
        </trans-unit>
        <trans-unit id="a6c2faf848638dd7620c975050312c7d71da0a70" translate="yes" xml:space="preserve">
          <source>jQuery/jqLite Extras</source>
          <target state="translated">jQuery/jqLite Extras</target>
        </trans-unit>
        <trans-unit id="23558b2fb802d2cf8396134618c0ede0fdfd1753" translate="yes" xml:space="preserve">
          <source>jqLite also provides a method restoring pre-1.8 insecure treatment of XHTML-like tags. This legacy behavior turns input like &lt;code&gt;&amp;lt;div /&amp;gt;&amp;lt;span /&amp;gt;&lt;/code&gt; to &lt;code&gt;&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;&lt;/code&gt; instead of &lt;code&gt;&amp;lt;div&amp;gt;&amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt; like version 1.8 &amp;amp; newer do. To restore it, invoke:</source>
          <target state="translated">jqLite also provides a method restoring pre-1.8 insecure treatment of XHTML-like tags. This legacy behavior turns input like &lt;code&gt;&amp;lt;div /&amp;gt;&amp;lt;span /&amp;gt;&lt;/code&gt; to &lt;code&gt;&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;&lt;/code&gt; instead of &lt;code&gt;&amp;lt;div&amp;gt;&amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt; like version 1.8 &amp;amp; newer do. To restore it, invoke:</target>
        </trans-unit>
        <trans-unit id="df20484128826dc9233a70b7395344f98e830e3d" translate="yes" xml:space="preserve">
          <source>jqLite is a tiny, API-compatible subset of jQuery that allows AngularJS to manipulate the DOM in a cross-browser compatible way. jqLite implements only the most commonly needed functionality with the goal of having a very small footprint.</source>
          <target state="translated">jqLite是一个微小的、API兼容的jQuery子集,它允许AngularJS以一种跨浏览器兼容的方式操作DOM。</target>
        </trans-unit>
        <trans-unit id="c15d3092c4aaf95e91bb81c711843014ea88cefb" translate="yes" xml:space="preserve">
          <source>jqLite provides only the following jQuery methods:</source>
          <target state="translated">jqLite只提供以下jQuery方法。</target>
        </trans-unit>
        <trans-unit id="05d97e6e9834ccf063c552e404b9ecafc5e4d662" translate="yes" xml:space="preserve">
          <source>json</source>
          <target state="translated">json</target>
        </trans-unit>
        <trans-unit id="f091f8ca4d9a2939f28c1eb04032e457994e12e8" translate="yes" xml:space="preserve">
          <source>json (filter)</source>
          <target state="translated">json(过滤器)</target>
        </trans-unit>
        <trans-unit id="476e905ddc6b4dca4072ce4649eb3d0d82395692" translate="yes" xml:space="preserve">
          <source>jsonp(url, [config]);</source>
          <target state="translated">jsonp(url,[config])。</target>
        </trans-unit>
        <trans-unit id="80251262ebf220e6cc9cdd19ab2b61611578858b" translate="yes" xml:space="preserve">
          <source>just after the &lt;code&gt;ngIf&lt;/code&gt; contents change and a new DOM element is created and injected into the &lt;code&gt;ngIf&lt;/code&gt; container</source>
          <target state="translated">在 &lt;code&gt;ngIf&lt;/code&gt; 内容更改并创建新的DOM元素之后，并将其注入 &lt;code&gt;ngIf&lt;/code&gt; 容器中</target>
        </trans-unit>
        <trans-unit id="05124b784fd95a9b350d2a2ae8c464225198d911" translate="yes" xml:space="preserve">
          <source>just before classes are added and classes are removed from the element at the same time</source>
          <target state="translated">就在添加类之前,同时从元素中删除类。</target>
        </trans-unit>
        <trans-unit id="05885b7efbe2ba0e0dfff080e55645a2a074717f" translate="yes" xml:space="preserve">
          <source>just before the &lt;code&gt;ngIf&lt;/code&gt; contents are removed from the DOM</source>
          <target state="translated">从DOM中移除 &lt;code&gt;ngIf&lt;/code&gt; 内容之前</target>
        </trans-unit>
        <trans-unit id="098d98b1191c51a23ab0e59c5afcb981d2994b21" translate="yes" xml:space="preserve">
          <source>just before the class is applied to the element</source>
          <target state="translated">就在该类应用到元素之前</target>
        </trans-unit>
        <trans-unit id="fc993888328d3d78f99986f44d90443c9b8660ee" translate="yes" xml:space="preserve">
          <source>just before the class is removed from the element</source>
          <target state="translated">就在该类从元素中移除之前</target>
        </trans-unit>
        <trans-unit id="a62f2225bf70bfaccbc7f1ef2a397836717377de" translate="yes" xml:space="preserve">
          <source>key</source>
          <target state="translated">key</target>
        </trans-unit>
        <trans-unit id="eb4e903a70a4fd44052b7e282b347cc9de690a80" translate="yes" xml:space="preserve">
          <source>key-value map of &lt;code&gt;cacheId&lt;/code&gt; to the result of calling &lt;code&gt;cache#info&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cacheId&lt;/code&gt; 的键值映射到调用 &lt;code&gt;cache#info&lt;/code&gt; 的结果</target>
        </trans-unit>
        <trans-unit id="5944ae25418ceabcf285dca1d721b77888dac89b" translate="yes" xml:space="preserve">
          <source>keys</source>
          <target state="translated">keys</target>
        </trans-unit>
        <trans-unit id="8b18b4cceb9efeaa6ed86ddd4a8be52500db7524" translate="yes" xml:space="preserve">
          <source>keys are validation tokens (error names),</source>
          <target state="translated">键是验证令牌(错误名称)。</target>
        </trans-unit>
        <trans-unit id="87e6b001d85c53a80493ae9fb30f370b6beb50a7" translate="yes" xml:space="preserve">
          <source>keys are validations tokens (error names).</source>
          <target state="translated">键是验证令牌(错误名称)。</target>
        </trans-unit>
        <trans-unit id="692ac74ba1f0a1cb7b728396cc138add5536da3b" translate="yes" xml:space="preserve">
          <source>knows about all internal life-cycle phases, integrates with &lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24watch.html&quot;&gt;$watch&lt;/a&gt;, ...</source>
          <target state="translated">知道所有内部生命周期阶段，并与&lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24watch.html&quot;&gt;$ watch&lt;/a&gt;集成，...</target>
        </trans-unit>
        <trans-unit id="a2def7dc70741b1587c5a05c7c875b4a06f72ab3" translate="yes" xml:space="preserve">
          <source>lack of behavior expressiveness</source>
          <target state="translated">不善言辞</target>
        </trans-unit>
        <trans-unit id="31aed9e37eb93350fa0862e61ae686529394cfa7" translate="yes" xml:space="preserve">
          <source>leave</source>
          <target state="translated">leave</target>
        </trans-unit>
        <trans-unit id="66cfb65a4fd7aaf2c79d9c1439c940e7bff2bce7" translate="yes" xml:space="preserve">
          <source>leave(element, [options]);</source>
          <target state="translated">leave(element,[options])。</target>
        </trans-unit>
        <trans-unit id="e4d68c5a97e466323c2fbe2b655ab578066a1cd5" translate="yes" xml:space="preserve">
          <source>limit</source>
          <target state="translated">limit</target>
        </trans-unit>
        <trans-unit id="8aa3b179b01033866334b54a2bb9e2cd0134ea9c" translate="yes" xml:space="preserve">
          <source>limitTo</source>
          <target state="translated">limitTo</target>
        </trans-unit>
        <trans-unit id="38512e2fabaeebb90b38738964000c81aad9fa75" translate="yes" xml:space="preserve">
          <source>limitTo (filter)</source>
          <target state="translated">limitTo</target>
        </trans-unit>
        <trans-unit id="4f0aa52d656a3d75867f784b7e9c5d23bf1321c0" translate="yes" xml:space="preserve">
          <source>link</source>
          <target state="translated">link</target>
        </trans-unit>
        <trans-unit id="4d9d0a825018617148496e72d19e218592a147c1" translate="yes" xml:space="preserve">
          <source>link functions</source>
          <target state="translated">链接功能</target>
        </trans-unit>
        <trans-unit id="71fc4f19ca0e9912058fa0b94850aae8f052cfa2" translate="yes" xml:space="preserve">
          <source>linky</source>
          <target state="translated">linky</target>
        </trans-unit>
        <trans-unit id="a6beb29655ce58b596d4247840378cfc799414db" translate="yes" xml:space="preserve">
          <source>listener</source>
          <target state="translated">listener</target>
        </trans-unit>
        <trans-unit id="7573d274b8c8dd417a5e4cbc6c359fc7db1c1c65" translate="yes" xml:space="preserve">
          <source>literalName</source>
          <target state="translated">literalName</target>
        </trans-unit>
        <trans-unit id="d2fa106090729ea0f9a5e4944ed2afd6dd3e6415" translate="yes" xml:space="preserve">
          <source>literalValue</source>
          <target state="translated">literalValue</target>
        </trans-unit>
        <trans-unit id="008db62a7e9c185a0f26c1764b41b43529412ad3" translate="yes" xml:space="preserve">
          <source>load the &lt;a href=&quot;module&quot;&gt;module&lt;/a&gt; associated with the directive.</source>
          <target state="translated">加载与指令关联的&lt;a href=&quot;module&quot;&gt;模块&lt;/a&gt;。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
