<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="angularjs">
    <body>
      <group id="angularjs">
        <trans-unit id="8cd86c75fc7a16bf892639137450bfd3eefeac9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$timeout&lt;/code&gt;: Pending timeouts (via &lt;a href=&quot;%24timeout&quot;&gt;&lt;code&gt;$timeout&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;$timeout&lt;/code&gt; ：等待超时（通过&lt;a href=&quot;%24timeout&quot;&gt; &lt;code&gt;$timeout&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="f4030ab89071f67fc913b064bc6745c828e87306" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$transclude&lt;/code&gt; - A transclude linking function pre-bound to the correct transclusion scope: &lt;code&gt;function([scope], cloneLinkingFn, futureParentElement, slotName)&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;$transclude&lt;/code&gt; 一个预先链接到正确的包含范围的包含链接函数： &lt;code&gt;function([scope], cloneLinkingFn, futureParentElement, slotName)&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="88625547e1d3dd6aea0b06e5147468fadbf848b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;&lt;/code&gt; or &lt;code&gt;&amp;amp;attr&lt;/code&gt; - provides a way to execute an expression in the context of the parent scope. If no &lt;code&gt;attr&lt;/code&gt; name is specified then the attribute name is assumed to be the same as the local name. Given &lt;code&gt;&amp;lt;my-component my-attr=&quot;count = count + value&quot;&amp;gt;&lt;/code&gt; and the isolate scope definition &lt;code&gt;scope: {
localFn:'&amp;amp;myAttr' }&lt;/code&gt;, the isolate scope property &lt;code&gt;localFn&lt;/code&gt; will point to a function wrapper for the &lt;code&gt;count = count + value&lt;/code&gt; expression. Often it's desirable to pass data from the isolated scope via an expression to the parent scope. This can be done by passing a map of local variable names and values into the expression wrapper fn. For example, if the expression is &lt;code&gt;increment(amount)&lt;/code&gt; then we can specify the amount value by calling the &lt;code&gt;localFn&lt;/code&gt; as &lt;code&gt;localFn({amount: 22})&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;amp;&lt;/code&gt; 或 &lt;code&gt;&amp;amp;attr&lt;/code&gt; -提供一种在父作用域的上下文中执行表达式的方法。如果未指定 &lt;code&gt;attr&lt;/code&gt; 名称，则假定属性名称与本地名称相同。给定 &lt;code&gt;&amp;lt;my-component my-attr=&quot;count = count + value&quot;&amp;gt;&lt;/code&gt; 和隔离范围定义 &lt;code&gt;scope: { localFn:'&amp;amp;myAttr' }&lt;/code&gt; ，隔离范围属性 &lt;code&gt;localFn&lt;/code&gt; 将指向 &lt;code&gt;count = count + value&lt;/code&gt; 的函数包装表达。通常，需要将数据从隔离范围通过表达式传递到父范围。这可以通过将局部变量名称和值的映射传递到表达式包装器fn中来完成。例如，如果表达式是 &lt;code&gt;increment(amount)&lt;/code&gt; 然后我们可以通过将 &lt;code&gt;localFn&lt;/code&gt; 调用为 &lt;code&gt;localFn({amount: 22})&lt;/code&gt; 来指定金额值。</target>
        </trans-unit>
        <trans-unit id="8b73fd3e4123cc56472fb162568d4edb1de1d812" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;&lt;/code&gt; or &lt;code&gt;&amp;lt;attr&lt;/code&gt; - set up a one-way (one-directional) binding between a local scope property and an expression passed via the attribute &lt;code&gt;attr&lt;/code&gt;. The expression is evaluated in the context of the parent scope. If no &lt;code&gt;attr&lt;/code&gt; name is specified then the attribute name is assumed to be the same as the local name.</source>
          <target state="translated">&lt;code&gt;&amp;lt;&lt;/code&gt; 或 &lt;code&gt;&amp;lt;attr&lt;/code&gt; -在本地范围属性和通过属性 &lt;code&gt;attr&lt;/code&gt; 传递的表达式之间建立单向（单向）绑定。该表达式在父作用域的上下文中求值。如果未指定 &lt;code&gt;attr&lt;/code&gt; 名称，则假定属性名称与本地名称相同。</target>
        </trans-unit>
        <trans-unit id="4c93e6723e2f012293083cf8df433db8952b0089" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;a href=&quot;/some/path&quot; internal-link&amp;gt;link&amp;lt;/a&amp;gt;&lt;/code&gt; will be rewritten</source>
          <target state="translated">&lt;code&gt;&amp;lt;a href=&quot;/some/path&quot; internal-link&amp;gt;link&amp;lt;/a&amp;gt;&lt;/code&gt; 将被重写</target>
        </trans-unit>
        <trans-unit id="ca85bd57db47701654feaf58ce22da660ea45aa8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;a href=&quot;/some/path&quot;&amp;gt;link&amp;lt;/a&amp;gt;&lt;/code&gt; will perform a full page reload</source>
          <target state="translated">&lt;code&gt;&amp;lt;a href=&quot;/some/path&quot;&amp;gt;link&amp;lt;/a&amp;gt;&lt;/code&gt; 将执行整页重新加载</target>
        </trans-unit>
        <trans-unit id="421fd87c4cfbb2e340cfb5bce7a8401b7d87c1f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'A'&lt;/code&gt; - only matches attribute name</source>
          <target state="translated">&lt;code&gt;'A'&lt;/code&gt; -仅匹配属性名称</target>
        </trans-unit>
        <trans-unit id="0969bafeaaf7cb189f1ce25a57b59ec4d5ec52b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'AEC'&lt;/code&gt; - matches either attribute or element or class name</source>
          <target state="translated">&lt;code&gt;'AEC'&lt;/code&gt; -匹配属性或元素或类名称</target>
        </trans-unit>
        <trans-unit id="be80ac22a150162e81e647877538e5f836cc9640" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'C'&lt;/code&gt; - only matches class name</source>
          <target state="translated">&lt;code&gt;'C'&lt;/code&gt; -仅匹配类别名称</target>
        </trans-unit>
        <trans-unit id="d561c70c26589e36e4407cf47190e56037dcea39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'E'&lt;/code&gt; - only matches element name</source>
          <target state="translated">&lt;code&gt;'E'&lt;/code&gt; -仅匹配元素名称</target>
        </trans-unit>
        <trans-unit id="2ef5665019adfadd791d2729e0112ac8b1483542" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'EEE'&lt;/code&gt;: Day in Week, (Sun-Sat)</source>
          <target state="translated">&lt;code&gt;'EEE'&lt;/code&gt; ：星期几，（星期日至六）</target>
        </trans-unit>
        <trans-unit id="50a71144bfa0907e5bcd9ce3d5cc89868adb9af7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'EEEE'&lt;/code&gt;: Day in Week,(Sunday-Saturday)</source>
          <target state="translated">&lt;code&gt;'EEEE'&lt;/code&gt; ：星期几，（周日至周六）</target>
        </trans-unit>
        <trans-unit id="1a328b9537d02cdbe570fca917f76f0454d324b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'G'&lt;/code&gt;, &lt;code&gt;'GG'&lt;/code&gt;, &lt;code&gt;'GGG'&lt;/code&gt;: The abbreviated form of the era string (e.g. 'AD')</source>
          <target state="translated">&lt;code&gt;'G'&lt;/code&gt; ， &lt;code&gt;'GG'&lt;/code&gt; ， &lt;code&gt;'GGG'&lt;/code&gt; ：时代字符串的缩写形式（例如'AD'）</target>
        </trans-unit>
        <trans-unit id="e5d80882c8061f72b524bc49426365a32a257e00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'GGGG'&lt;/code&gt;: The long form of the era string (e.g. 'Anno Domini')</source>
          <target state="translated">&lt;code&gt;'GGGG'&lt;/code&gt; ：时代字符串的长形式（例如'Anno Domini'）</target>
        </trans-unit>
        <trans-unit id="5c2d6a4ae2ac477f6629f97d03fa5b61a40e9b2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'H'&lt;/code&gt;: Hour in day (0-23)</source>
          <target state="translated">&lt;code&gt;'H'&lt;/code&gt; ：一天中的小时（0-23）</target>
        </trans-unit>
        <trans-unit id="92467cf9effd6f49d7085b9b8653117a607e75ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'HH'&lt;/code&gt;: Hour in day, padded (00-23)</source>
          <target state="translated">&lt;code&gt;'HH'&lt;/code&gt; ：一天中的小时，填充（00-23）</target>
        </trans-unit>
        <trans-unit id="8a0a1b29878917c99f174ff736a7463018e0cbf3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'LLLL'&lt;/code&gt;: Stand-alone month in year (January-December)</source>
          <target state="translated">&lt;code&gt;'LLLL'&lt;/code&gt; ：一年中的独立月份（1月至12月）</target>
        </trans-unit>
        <trans-unit id="8b354fc28323ff9f322bdd282f57cc638f669cea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'M'&lt;/code&gt; - only matches comment</source>
          <target state="translated">&lt;code&gt;'M'&lt;/code&gt; -仅与评论匹配</target>
        </trans-unit>
        <trans-unit id="06f3df2fed67deb4a7874eea81e2fbab50991779" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'M'&lt;/code&gt;: Month in year (1-12)</source>
          <target state="translated">&lt;code&gt;'M'&lt;/code&gt; ：一年中的月份（1-12）</target>
        </trans-unit>
        <trans-unit id="2f28c7091360ca91edabcbe6cbd2c248c8d6df2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'MM'&lt;/code&gt;: Month in year, padded (01-12)</source>
          <target state="translated">&lt;code&gt;'MM'&lt;/code&gt; ：一年中的月份，填充（01-12）</target>
        </trans-unit>
        <trans-unit id="d4feab245a646de1d779a8ac25edc60ead89aa71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'MMM'&lt;/code&gt;: Month in year (Jan-Dec)</source>
          <target state="translated">&lt;code&gt;'MMM'&lt;/code&gt; ：一年中的月份（1月-12月）</target>
        </trans-unit>
        <trans-unit id="29e6dfe23e2ed107945f132f3ed9346844347823" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'MMMM'&lt;/code&gt;: Month in year (January-December)</source>
          <target state="translated">&lt;code&gt;'MMMM'&lt;/code&gt; ：一年中的月份（1月-12月）</target>
        </trans-unit>
        <trans-unit id="a32ecbaa2dcd462708ab46be2ac422f0cc0e67b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'Z'&lt;/code&gt;: 4 digit (+sign) representation of the timezone offset (-1200-+1200)</source>
          <target state="translated">&lt;code&gt;'Z'&lt;/code&gt; ：时区偏移量（-1200- + 1200）的4位数字（+符号）</target>
        </trans-unit>
        <trans-unit id="6302338100642d0f374d7065a8e20e48d4758fbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'a'&lt;/code&gt;: AM/PM marker</source>
          <target state="translated">&lt;code&gt;'a'&lt;/code&gt; ：AM / PM标记</target>
        </trans-unit>
        <trans-unit id="90b0789d5186ad0f16e7ddeef5ccd47cc4687c24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'d'&lt;/code&gt;: Day in month (1-31)</source>
          <target state="translated">&lt;code&gt;'d'&lt;/code&gt; ：每月中的一天（1-31）</target>
        </trans-unit>
        <trans-unit id="0e3452b787cd2276bcd3e67074c648d11eb6511d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'dd'&lt;/code&gt;: Day in month, padded (01-31)</source>
          <target state="translated">&lt;code&gt;'dd'&lt;/code&gt; ：每月中的某天，填充（01-31）</target>
        </trans-unit>
        <trans-unit id="a97780a7803724d81b9d5f0afb45a63453f34255" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'element'&lt;/code&gt; - transclude the whole of the directive's element including any directives on this element that are defined at a lower priority than this directive. When used, the &lt;code&gt;template&lt;/code&gt; property is ignored.</source>
          <target state="translated">&lt;code&gt;'element'&lt;/code&gt; - transclude the whole of the directive's element including any directives on this element that are defined at a lower priority than this directive. When used, the &lt;code&gt;template&lt;/code&gt; property is ignored.</target>
        </trans-unit>
        <trans-unit id="6378ef6805e9c7dcffacdc0930f63f1aaa77320c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'element'&lt;/code&gt; - transclude the whole of the directive's element including any directives on this element that defined at a lower priority than this directive. When used, the &lt;code&gt;template&lt;/code&gt; property is ignored.</source>
          <target state="translated">&lt;code&gt;'element'&lt;/code&gt; element'-包含该指令的所有元素，包括该元素上所有比该指令优先级低的指令。使用时，忽略 &lt;code&gt;template&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="3c1e771a51135e21e055caecca9b92e31b0232de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'fullDate'&lt;/code&gt;: equivalent to &lt;code&gt;'EEEE, MMMM d, y'&lt;/code&gt; for en_US locale (e.g. Friday, September 3, 2010)</source>
          <target state="translated">&lt;code&gt;'fullDate'&lt;/code&gt; ：在en_US语言环境中相当于 &lt;code&gt;'EEEE, MMMM d, y'&lt;/code&gt; （例如，2010年9月3日，星期五）</target>
        </trans-unit>
        <trans-unit id="3eb6af31030bd2baca93aca59a220af295305477" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'h'&lt;/code&gt;: Hour in AM/PM, (1-12)</source>
          <target state="translated">&lt;code&gt;'h'&lt;/code&gt; ：以AM / PM为小时，（1-12）</target>
        </trans-unit>
        <trans-unit id="6b2eac549e03e2dc96a0c80cad0a3dda7ef1f434" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'hh'&lt;/code&gt;: Hour in AM/PM, padded (01-12)</source>
          <target state="translated">&lt;code&gt;'hh'&lt;/code&gt; ：以AM / PM表示的小时，填充（01-12）</target>
        </trans-unit>
        <trans-unit id="27a7f059529eb400535e22614ed6e40a4bf0e231" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'longDate'&lt;/code&gt;: equivalent to &lt;code&gt;'MMMM d, y'&lt;/code&gt; for en_US locale (e.g. September 3, 2010)</source>
          <target state="translated">&lt;code&gt;'longDate'&lt;/code&gt; ：在en_US语言环境中等效于 &lt;code&gt;'MMMM d, y'&lt;/code&gt; （例如2010年9月3日）</target>
        </trans-unit>
        <trans-unit id="c619c05794cc0276b81fde54ac0ec3a5139a0f5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'m'&lt;/code&gt;: Minute in hour (0-59)</source>
          <target state="translated">&lt;code&gt;'m'&lt;/code&gt; ：以小时为单位的分钟（0-59）</target>
        </trans-unit>
        <trans-unit id="0390304b92147bdf876f9de9be9e6a6b0669a1a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'medium'&lt;/code&gt;: equivalent to &lt;code&gt;'MMM d, y h:mm:ss a'&lt;/code&gt; for en_US locale (e.g. Sep 3, 2010 12:05:08 PM)</source>
          <target state="translated">&lt;code&gt;'medium'&lt;/code&gt; ：对于en_US语言环境 &lt;code&gt;'MMM d, y h:mm:ss a'&lt;/code&gt; 相当于&amp;ldquo; MMM d，yh：mm：ss a&amp;rdquo;（例如，2010年9月3日，12：05：08 PM）</target>
        </trans-unit>
        <trans-unit id="16e7c68cf6d9b2b392283fa0034867b0f0e5be32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'mediumDate'&lt;/code&gt;: equivalent to &lt;code&gt;'MMM d, y'&lt;/code&gt; for en_US locale (e.g. Sep 3, 2010)</source>
          <target state="translated">&lt;code&gt;'mediumDate'&lt;/code&gt; ：在en_US语言环境中等效于 &lt;code&gt;'MMM d, y'&lt;/code&gt; （例如2010年9月3日）</target>
        </trans-unit>
        <trans-unit id="8b4f4c842a81b831bac7dff1d5826ff6683f3b34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'mediumTime'&lt;/code&gt;: equivalent to &lt;code&gt;'h:mm:ss a'&lt;/code&gt; for en_US locale (e.g. 12:05:08 PM)</source>
          <target state="translated">&lt;code&gt;'mediumTime'&lt;/code&gt; ：等于en_US语言环境的 &lt;code&gt;'h:mm:ss a'&lt;/code&gt; （例如12:05:08 PM）</target>
        </trans-unit>
        <trans-unit id="469d17a3c8653da67806972907e8ddf6cda14bc9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'mm'&lt;/code&gt;: Minute in hour, padded (00-59)</source>
          <target state="translated">&lt;code&gt;'mm'&lt;/code&gt; ：以分钟为单位，填充（00-59）</target>
        </trans-unit>
        <trans-unit id="99f6b6074b979d185b013adbeee07ce417afe272" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'s'&lt;/code&gt;: Second in minute (0-59)</source>
          <target state="translated">&lt;code&gt;'s'&lt;/code&gt; ：分钟（0-59）</target>
        </trans-unit>
        <trans-unit id="d06db156974a571757ea1e03202102319abb8edc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'short'&lt;/code&gt;: equivalent to &lt;code&gt;'M/d/yy h:mm a'&lt;/code&gt; for en_US locale (e.g. 9/3/10 12:05 PM)</source>
          <target state="translated">&lt;code&gt;'short'&lt;/code&gt; ：在en_US语言环境中相当于 &lt;code&gt;'M/d/yy h:mm a'&lt;/code&gt; （例如9/3/10 12:05 PM）</target>
        </trans-unit>
        <trans-unit id="9e1addb5268d3d32c463920a6040c062e89da990" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'shortDate'&lt;/code&gt;: equivalent to &lt;code&gt;'M/d/yy'&lt;/code&gt; for en_US locale (e.g. 9/3/10)</source>
          <target state="translated">&lt;code&gt;'shortDate'&lt;/code&gt; ：等于en_US语言环境的 &lt;code&gt;'M/d/yy'&lt;/code&gt; （例如9/3/10）</target>
        </trans-unit>
        <trans-unit id="cc41b46afd44c36976dcae9bf343e3b37894f617" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'shortTime'&lt;/code&gt;: equivalent to &lt;code&gt;'h:mm a'&lt;/code&gt; for en_US locale (e.g. 12:05 PM)</source>
          <target state="translated">&lt;code&gt;'shortTime'&lt;/code&gt; ：等于en_US语言环境的 &lt;code&gt;'h:mm a'&lt;/code&gt; （例如12:05 PM）</target>
        </trans-unit>
        <trans-unit id="8dec6d4834788541c4af7bca9267798ea4d1298e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'ss'&lt;/code&gt;: Second in minute, padded (00-59)</source>
          <target state="translated">&lt;code&gt;'ss'&lt;/code&gt; ：分钟，填充（00-59）</target>
        </trans-unit>
        <trans-unit id="0c6184bda41d2ff90825ec7fe25259838c166476" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'sss'&lt;/code&gt;: Millisecond in second, padded (000-999)</source>
          <target state="translated">&lt;code&gt;'sss'&lt;/code&gt; ：毫秒，填充（000-999）</target>
        </trans-unit>
        <trans-unit id="1a6644dc88aac5d9f59e076745c0805b3a21df85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'w'&lt;/code&gt;: Week of year (0-53). Week 1 is the week with the first Thursday of the year</source>
          <target state="translated">&lt;code&gt;'w'&lt;/code&gt; ：一年中的星期（0-53）。第一周是一年中的第一个星期四</target>
        </trans-unit>
        <trans-unit id="10032ab0b231d6778b4478446d3a3f97431deaa8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'ww'&lt;/code&gt;: Week of year, padded (00-53). Week 01 is the week with the first Thursday of the year</source>
          <target state="translated">&lt;code&gt;'ww'&lt;/code&gt; ：一年中的某周，填充（00-53）。第一周是一年中的第一个星期四</target>
        </trans-unit>
        <trans-unit id="d15283963a9c9b2ae64bcff8162f439d3f6e4daf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'y'&lt;/code&gt;: 1 digit representation of year, e.g. (AD 1 =&amp;gt; 1, AD 199 =&amp;gt; 199)</source>
          <target state="translated">&lt;code&gt;'y'&lt;/code&gt; ：年份的1位数字表示，例如（AD 1 =&amp;gt; 1，AD 199 =&amp;gt; 199）</target>
        </trans-unit>
        <trans-unit id="3dd39b1667b5ef9dd807cb7139e1d265438f638c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'yy'&lt;/code&gt;: 2 digit representation of year, padded (00-99). (e.g. AD 2001 =&amp;gt; 01, AD 2010 =&amp;gt; 10)</source>
          <target state="translated">&lt;code&gt;'yy'&lt;/code&gt; ：年份的2位数字表示，填充（00-99）。（例如，AD 2001 =&amp;gt; 01，AD 2010 =&amp;gt; 10）</target>
        </trans-unit>
        <trans-unit id="efe81a29cb10a83d3e13b939233c61ab1d9d1a04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'yyyy'&lt;/code&gt;: 4 digit representation of year (e.g. AD 1 =&amp;gt; 0001, AD 2010 =&amp;gt; 2010)</source>
          <target state="translated">&lt;code&gt;'yyyy'&lt;/code&gt; ：年份的 4位数字表示（例如，AD 1 =&amp;gt; 0001，AD 2010 =&amp;gt; 2010）</target>
        </trans-unit>
        <trans-unit id="90d1af0e349665059fb59cd047c66e8aff65956e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(key, value) in expression&lt;/code&gt; &amp;ndash; where &lt;code&gt;key&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt; can be any user defined identifiers, and &lt;code&gt;expression&lt;/code&gt; is the scope expression giving the collection to enumerate.</source>
          <target state="translated">&lt;code&gt;(key, value) in expression&lt;/code&gt; &amp;ndash;其中， &lt;code&gt;key&lt;/code&gt; 和 &lt;code&gt;value&lt;/code&gt; 可以是任何用户定义的标识符，而 &lt;code&gt;expression&lt;/code&gt; 是给出要枚举的集合的作用域表达式。</target>
        </trans-unit>
        <trans-unit id="f3af284ec449b09d12963fe6391b6587a8b6fade" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;**&lt;/code&gt;: matches zero or more occurrences of &lt;em&gt;any&lt;/em&gt; character. As such, it's not appropriate for use in a scheme, domain, etc. as it would match too much. (e.g. http://**.example.com/ would match &lt;a href=&quot;http://evil.com/?ignore=.example.com/&quot;&gt;http://evil.com/?ignore=.example.com/&lt;/a&gt; and that might not have been the intention.) Its usage at the very end of the path is ok. (e.g. &lt;a href=&quot;http://foo.example.com/templates/**&quot;&gt;http://foo.example.com/templates/**&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;**&lt;/code&gt; ：匹配零个或多个出现的&lt;em&gt;任何&lt;/em&gt;字符。因此，它不适合在方案，域等中使用，因为它会匹配太多。（例如，http：//**.example.com/将与&lt;a href=&quot;http://evil.com/?ignore=.example.com/&quot;&gt;http://evil.com/?ignore=.example.com/&lt;/a&gt;匹配，而这可能并非故意。）在路径的最后使用还可以 （例如&lt;a href=&quot;http://foo.example.com/templates/**&quot;&gt;http://foo.example.com/templates/**&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="85211e19768804adf714f984824a1301c8bd1728" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt;: matches zero or more occurrences of any character other than one of the following 6 characters: '&lt;code&gt;:&lt;/code&gt;', '&lt;code&gt;/&lt;/code&gt;', '&lt;code&gt;.&lt;/code&gt;', '&lt;code&gt;?&lt;/code&gt;', '&lt;code&gt;&amp;amp;&lt;/code&gt;' and '&lt;code&gt;;&lt;/code&gt;'. It's a useful wildcard for use for matching resource URL lists.</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt; : matches zero or more occurrences of any character other than one of the following 6 characters: ' &lt;code&gt;:&lt;/code&gt; ', ' &lt;code&gt;/&lt;/code&gt; ', ' &lt;code&gt;.&lt;/code&gt; ', ' &lt;code&gt;?&lt;/code&gt; ', ' &lt;code&gt;&amp;amp;&lt;/code&gt; ' and ' &lt;code&gt;;&lt;/code&gt; '. It's a useful wildcard for use for matching resource URL lists.</target>
        </trans-unit>
        <trans-unit id="a712c883416ef1dd325016811cf86f98bf8a2148" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt;: matches zero or more occurrences of any character other than one of the following 6 characters: '&lt;code&gt;:&lt;/code&gt;', '&lt;code&gt;/&lt;/code&gt;', '&lt;code&gt;.&lt;/code&gt;', '&lt;code&gt;?&lt;/code&gt;', '&lt;code&gt;&amp;amp;&lt;/code&gt;' and '&lt;code&gt;;&lt;/code&gt;'. It's a useful wildcard for use in a whitelist.</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt; ：匹配以下六个字符之一以外的任何零个或多个出现的字符：' &lt;code&gt;:&lt;/code&gt; '，' &lt;code&gt;/&lt;/code&gt; '，' &lt;code&gt;.&lt;/code&gt; '，' &lt;code&gt;?&lt;/code&gt; '，' &lt;code&gt;&amp;amp;&lt;/code&gt; '和' &lt;code&gt;;&lt;/code&gt; '。这是用于白名单中的有用通配符。</target>
        </trans-unit>
        <trans-unit id="56b6f9405c013038abc60c31538d49a7922da466" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-1&lt;/code&gt;, if the 1st value is &quot;less than&quot; the 2nd value (compared using the &lt;code&gt;&amp;lt;&lt;/code&gt; operator).</source>
          <target state="translated">&lt;code&gt;-1&lt;/code&gt; ，如果第一个值&amp;ldquo;小于&amp;rdquo;第二个值（使用 &lt;code&gt;&amp;lt;&lt;/code&gt; 运算符比较）。</target>
        </trans-unit>
        <trans-unit id="591ffe0f6935c96365fd287143293e851e64a446" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt;, if the values are equal (by strict equality comparison, i.e. using &lt;code&gt;===&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; 如果值相等，则返回0（通过严格相等比较，即使用 &lt;code&gt;===&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="025357d9e6915ad915e4343ef9b1039849fa7183" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt;, otherwise.</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; ，否则。</target>
        </trans-unit>
        <trans-unit id="7d4aba58c3b62237a9885cb4f78ac6589d3e8996" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=&lt;/code&gt; or &lt;code&gt;=attr&lt;/code&gt; - set up a bidirectional binding between a local scope property and an expression passed via the attribute &lt;code&gt;attr&lt;/code&gt;. The expression is evaluated in the context of the parent scope. If no &lt;code&gt;attr&lt;/code&gt; name is specified then the attribute name is assumed to be the same as the local name. Given &lt;code&gt;&amp;lt;my-component my-attr=&quot;parentModel&quot;&amp;gt;&lt;/code&gt; and the isolate scope definition &lt;code&gt;scope: {
localModel: '=myAttr' }&lt;/code&gt;, the property &lt;code&gt;localModel&lt;/code&gt; on the directive's scope will reflect the value of &lt;code&gt;parentModel&lt;/code&gt; on the parent scope. Changes to &lt;code&gt;parentModel&lt;/code&gt; will be reflected in &lt;code&gt;localModel&lt;/code&gt; and vice versa. If the binding expression is non-assignable, or if the attribute isn't optional and doesn't exist, an exception (&lt;a href=&quot;https://code.angularjs.org/1.7.8/docs/api/ng/service/error/%24compile/nonassign&quot;&gt;&lt;code&gt;$compile:nonassign&lt;/code&gt;&lt;/a&gt;) will be thrown upon discovering changes to the local value, since it will be impossible to sync them back to the parent scope.</source>
          <target state="translated">&lt;code&gt;=&lt;/code&gt; 或 &lt;code&gt;=attr&lt;/code&gt; -在本地范围属性和通过属性 &lt;code&gt;attr&lt;/code&gt; 传递的表达式之间建立双向绑定。该表达式在父作用域的上下文中求值。如果未指定 &lt;code&gt;attr&lt;/code&gt; 名称，则假定属性名称与本地名称相同。给定 &lt;code&gt;&amp;lt;my-component my-attr=&quot;parentModel&quot;&amp;gt;&lt;/code&gt; 和隔离范围定义 &lt;code&gt;scope: { localModel: '=myAttr' }&lt;/code&gt; ，指令范围内的属性 &lt;code&gt;localModel&lt;/code&gt; 将反映父范围内 &lt;code&gt;parentModel&lt;/code&gt; 的值。对 &lt;code&gt;parentModel&lt;/code&gt; 的更改将反映在 &lt;code&gt;localModel&lt;/code&gt; 中反之亦然。如果绑定表达式是不可分配的，或者该属性不是可选的并且不存在，则在发现对本地值的更改时将引发异常（&lt;a href=&quot;https://code.angularjs.org/1.7.8/docs/api/ng/service/error/%24compile/nonassign&quot;&gt; &lt;code&gt;$compile:nonassign&lt;/code&gt; &lt;/a&gt;），因为将无法同步它们回到父范围。</target>
        </trans-unit>
        <trans-unit id="331e1bbf381a42072735b78f93e05c9b17d79d8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=&lt;/code&gt; or &lt;code&gt;=attr&lt;/code&gt; - set up a bidirectional binding between a local scope property and an expression passed via the attribute &lt;code&gt;attr&lt;/code&gt;. The expression is evaluated in the context of the parent scope. If no &lt;code&gt;attr&lt;/code&gt; name is specified then the attribute name is assumed to be the same as the local name. Given &lt;code&gt;&amp;lt;my-component my-attr=&quot;parentModel&quot;&amp;gt;&lt;/code&gt; and the isolate scope definition &lt;code&gt;scope: {
localModel: '=myAttr' }&lt;/code&gt;, the property &lt;code&gt;localModel&lt;/code&gt; on the directive's scope will reflect the value of &lt;code&gt;parentModel&lt;/code&gt; on the parent scope. Changes to &lt;code&gt;parentModel&lt;/code&gt; will be reflected in &lt;code&gt;localModel&lt;/code&gt; and vice versa. If the binding expression is non-assignable, or if the attribute isn't optional and doesn't exist, an exception (&lt;a href=&quot;https://code.angularjs.org/1.8.2/docs/api/ng/service/error/%24compile/nonassign&quot;&gt;&lt;code&gt;$compile:nonassign&lt;/code&gt;&lt;/a&gt;) will be thrown upon discovering changes to the local value, since it will be impossible to sync them back to the parent scope.</source>
          <target state="translated">&lt;code&gt;=&lt;/code&gt; or &lt;code&gt;=attr&lt;/code&gt; - set up a bidirectional binding between a local scope property and an expression passed via the attribute &lt;code&gt;attr&lt;/code&gt; . The expression is evaluated in the context of the parent scope. If no &lt;code&gt;attr&lt;/code&gt; name is specified then the attribute name is assumed to be the same as the local name. Given &lt;code&gt;&amp;lt;my-component my-attr=&quot;parentModel&quot;&amp;gt;&lt;/code&gt; and the isolate scope definition &lt;code&gt;scope: { localModel: '=myAttr' }&lt;/code&gt; , the property &lt;code&gt;localModel&lt;/code&gt; on the directive's scope will reflect the value of &lt;code&gt;parentModel&lt;/code&gt; on the parent scope. Changes to &lt;code&gt;parentModel&lt;/code&gt; will be reflected in &lt;code&gt;localModel&lt;/code&gt; and vice versa. If the binding expression is non-assignable, or if the attribute isn't optional and doesn't exist, an exception (&lt;a href=&quot;https://code.angularjs.org/1.8.2/docs/api/ng/service/error/%24compile/nonassign&quot;&gt; &lt;code&gt;$compile:nonassign&lt;/code&gt; &lt;/a&gt;) will be thrown upon discovering changes to the local value, since it will be impossible to sync them back to the parent scope.</target>
        </trans-unit>
        <trans-unit id="276e096706d29741cc00a5d39cb9abf46320dd89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?&lt;/code&gt; - Attempt to locate the required controller or pass &lt;code&gt;null&lt;/code&gt; to the &lt;code&gt;link&lt;/code&gt; fn if not found.</source>
          <target state="translated">&lt;code&gt;?&lt;/code&gt; -尝试找到所需的控制器，或者如果未找到，则将 &lt;code&gt;null&lt;/code&gt; 传递给 &lt;code&gt;link&lt;/code&gt; fn。</target>
        </trans-unit>
        <trans-unit id="3addafa45ca1035c29fe7542bccb53677faf5102" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?^&lt;/code&gt; - Attempt to locate the required controller by searching the element and its parents or pass &lt;code&gt;null&lt;/code&gt; to the &lt;code&gt;link&lt;/code&gt; fn if not found.</source>
          <target state="translated">&lt;code&gt;?^&lt;/code&gt; -尝试通过搜索元素及其父元素来定位所需的控制器，或者如果未找到，则将 &lt;code&gt;null&lt;/code&gt; 传递给 &lt;code&gt;link&lt;/code&gt; fn。</target>
        </trans-unit>
        <trans-unit id="242a7dd16b1e9f05b4f27a2ded61f207cd716052" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?^^&lt;/code&gt; - Attempt to locate the required controller by searching the element's parents, or pass &lt;code&gt;null&lt;/code&gt; to the &lt;code&gt;link&lt;/code&gt; fn if not found.</source>
          <target state="translated">&lt;code&gt;?^^&lt;/code&gt; -尝试通过搜索元素的父元素来定位所需的控制器，或者如果未找到，则将 &lt;code&gt;null&lt;/code&gt; 传递给 &lt;code&gt;link&lt;/code&gt; fn。</target>
        </trans-unit>
        <trans-unit id="8eec78f6cd576d162c890f95185586acb9332aed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@&lt;/code&gt; or &lt;code&gt;@attr&lt;/code&gt; - bind a local scope property to the value of DOM attribute. The result is always a string since DOM attributes are strings. If no &lt;code&gt;attr&lt;/code&gt; name is specified then the attribute name is assumed to be the same as the local name. Given &lt;code&gt;&amp;lt;my-component
my-attr=&quot;hello {{name}}&quot;&amp;gt;&lt;/code&gt; and the isolate scope definition &lt;code&gt;scope: { localName:'@myAttr' }&lt;/code&gt;, the directive's scope property &lt;code&gt;localName&lt;/code&gt; will reflect the interpolated value of &lt;code&gt;hello
{{name}}&lt;/code&gt;. As the &lt;code&gt;name&lt;/code&gt; attribute changes so will the &lt;code&gt;localName&lt;/code&gt; property on the directive's scope. The &lt;code&gt;name&lt;/code&gt; is read from the parent scope (not the directive's scope).</source>
          <target state="translated">&lt;code&gt;@&lt;/code&gt; 或@ &lt;code&gt;@attr&lt;/code&gt; 将本地范围属性绑定到DOM属性的值。由于DOM属性是字符串，因此结果始终是字符串。如果未指定 &lt;code&gt;attr&lt;/code&gt; 名称，则假定属性名称与本地名称相同。给定 &lt;code&gt;&amp;lt;my-component my-attr=&quot;hello {{name}}&quot;&amp;gt;&lt;/code&gt; 和隔离范围定义 &lt;code&gt;scope: { localName:'@myAttr' }&lt;/code&gt; ，指令的范围属性 &lt;code&gt;localName&lt;/code&gt; 将反映 &lt;code&gt;hello {{name}}&lt;/code&gt; 。随着 &lt;code&gt;name&lt;/code&gt; 属性的更改，指令范围内的 &lt;code&gt;localName&lt;/code&gt; 属性也会更改。该 &lt;code&gt;name&lt;/code&gt; 是从父范围（而不是指令的范围）读取。</target>
        </trans-unit>
        <trans-unit id="d08163529d1ee05684bfc3c8986615ba4859c2a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A&lt;/code&gt; - Attribute (default): &lt;code&gt;&amp;lt;div my-directive=&quot;exp&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; -属性（默认）： &lt;code&gt;&amp;lt;div my-directive=&quot;exp&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eb477ad6dcfb6c5b5c633fa0dc3e80aca744b57d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Array.&amp;lt;Promise&amp;gt;&lt;/code&gt;&lt;code&gt;Object.&amp;lt;Promise&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Array.&amp;lt;Promise&amp;gt;&lt;/code&gt;&lt;code&gt;Object.&amp;lt;Promise&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e17dc35a734b3aa8c0c11b0ac16ecb292c964bf4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Array.&amp;lt;String&amp;gt;&lt;/code&gt;&lt;code&gt;Object&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Array.&amp;lt;String&amp;gt;&lt;/code&gt;&lt;code&gt;Object&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4155223cd29801d5d59519db0542889866ff99b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Array&lt;/code&gt;: An array of function and/or string predicates. If a predicate cannot determine the relative order of two items, the next predicate is used as a tie-breaker.</source>
          <target state="translated">&lt;code&gt;Array&lt;/code&gt; ：函数和/或字符串谓词的数组。如果谓词无法确定两个项目的相对顺序，则将下一个谓词用作决胜局。</target>
        </trans-unit>
        <trans-unit id="6274ede8c21162f9306686e7250f2cf51cc4ae07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Array&lt;/code&gt;&lt;code&gt;ArrayLike&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Array&lt;/code&gt;&lt;code&gt;ArrayLike&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="49f3bf1ba4e71d9ec66c6a80f9faa6811176b261" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Array&lt;/code&gt;&lt;code&gt;ArrayLike&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;&lt;code&gt;number&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Array&lt;/code&gt;&lt;code&gt;ArrayLike&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;&lt;code&gt;number&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="30c15f5438017ec8fea6cbe3317b4e7d4a20d884" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Array&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Array&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8f8fecfc6db73aeedd84373054de9dd52597646a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;C&lt;/code&gt; - Class: &lt;code&gt;&amp;lt;div class=&quot;my-directive: exp;&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;C&lt;/code&gt; -类： &lt;code&gt;&amp;lt;div class=&quot;my-directive: exp;&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0ee569e2fcb14b32fcee365083b58066596e1df4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ComponentInstructions&lt;/code&gt; is a public API. Instances of &lt;code&gt;ComponentInstruction&lt;/code&gt; are passed to route lifecycle hooks, like &lt;code&gt;$routerCanActivate&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ComponentInstructions&lt;/code&gt; 是一个公共API。 &lt;code&gt;ComponentInstruction&lt;/code&gt; 的实例传递给路由生命周期挂钩，例如 &lt;code&gt;$routerCanActivate&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dfe4f4b9b96296cc929f1fe6a262391fc87886a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Constructor&lt;/code&gt;: a new instance of the provider will be created using &lt;a href=&quot;%24injector#instantiate.html&quot;&gt;$injector.instantiate()&lt;/a&gt;, then treated as &lt;code&gt;object&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Constructor&lt;/code&gt; ：将使用&lt;a href=&quot;%24injector#instantiate.html&quot;&gt;$ injector.instantiate（）&lt;/a&gt;创建提供者的新实例，然后将其视为 &lt;code&gt;object&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="030a553c41310b0a32b753cba6f1fa77bbdd8f96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Date&lt;/code&gt;&lt;code&gt;number&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Date&lt;/code&gt;&lt;code&gt;number&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="85726497c0d9fec73a653c5e30caef7348c1ead4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - Element name (default): &lt;code&gt;&amp;lt;my-directive&amp;gt;&amp;lt;/my-directive&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -元素名称（默认）： &lt;code&gt;&amp;lt;my-directive&amp;gt;&amp;lt;/my-directive&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6f5be366661d75b470e3e2ce0ec596f570daad80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FormController&lt;/code&gt; keeps track of all its controls and nested forms as well as the state of them, such as being valid/invalid or dirty/pristine.</source>
          <target state="translated">&lt;code&gt;FormController&lt;/code&gt; 会跟踪其所有控件和嵌套表单以及它们的状态，例如有效/无效或脏/原始。</target>
        </trans-unit>
        <trans-unit id="adbe3f67ea70880bacd5589162452bfdf199f9a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Function&lt;/code&gt;: A getter function. This function will be called with each item as argument and the return value will be used for sorting.</source>
          <target state="translated">&lt;code&gt;Function&lt;/code&gt; ：吸气功能。该函数将以每个项目作为参数来调用，并且返回值将用于排序。</target>
        </trans-unit>
        <trans-unit id="6b1e40d77fd626280f8064bb19a89d5d843321cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;M&lt;/code&gt; - Comment: &lt;code&gt;&amp;lt;!-- directive: my-directive exp --&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;M&lt;/code&gt; -注释： &lt;code&gt;&amp;lt;!-- directive: my-directive exp --&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="678595eccf1ff6c2450de5e2208bfd68bdbd5cdf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NgModelController&lt;/code&gt; provides API for the &lt;a href=&quot;../directive/ngmodel&quot;&gt;&lt;code&gt;ngModel&lt;/code&gt;&lt;/a&gt; directive. The controller contains services for data-binding, validation, CSS updates, and value formatting and parsing. It purposefully does not contain any logic which deals with DOM rendering or listening to DOM events. Such DOM related logic should be provided by other directives which make use of &lt;code&gt;NgModelController&lt;/code&gt; for data-binding to control elements. AngularJS provides this DOM logic for most &lt;a href=&quot;../directive/input&quot;&gt;&lt;code&gt;input&lt;/code&gt;&lt;/a&gt; elements. At the end of this page you can find a &lt;a href=&quot;ngmodel.ngmodelcontroller#custom-control-example.html&quot;&gt;custom control example&lt;/a&gt; that uses &lt;code&gt;ngModelController&lt;/code&gt; to bind to &lt;code&gt;contenteditable&lt;/code&gt; elements.</source>
          <target state="translated">&lt;code&gt;NgModelController&lt;/code&gt; 为&lt;a href=&quot;../directive/ngmodel&quot;&gt; &lt;code&gt;ngModel&lt;/code&gt; &lt;/a&gt;指令提供API 。控制器包含用于数据绑定，验证，CSS更新以及值格式和解析的服务。它故意不包含任何处理DOM呈现或侦听DOM事件的逻辑。此类与DOM相关的逻辑应由使用 &lt;code&gt;NgModelController&lt;/code&gt; 进行数据绑定到控制元素的其他指令提供。 AngularJS为大多数&lt;a href=&quot;../directive/input&quot;&gt; &lt;code&gt;input&lt;/code&gt; &lt;/a&gt;元素提供了此DOM逻辑。在此页面的结尾，您可以找到一个使用 &lt;code&gt;ngModelController&lt;/code&gt; 绑定到 &lt;code&gt;contenteditable&lt;/code&gt; 元素的&lt;a href=&quot;ngmodel.ngmodelcontroller#custom-control-example.html&quot;&gt;自定义控件示例&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="25de0f6ee742520f08515369b24e6a360a62025b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NgModelController&lt;/code&gt; provides API for the &lt;a href=&quot;directive/ngmodel&quot;&gt;&lt;code&gt;ngModel&lt;/code&gt;&lt;/a&gt; directive. The controller contains services for data-binding, validation, CSS updates, and value formatting and parsing. It purposefully does not contain any logic which deals with DOM rendering or listening to DOM events. Such DOM related logic should be provided by other directives which make use of &lt;code&gt;NgModelController&lt;/code&gt; for data-binding to control elements. AngularJS provides this DOM logic for most &lt;a href=&quot;directive/input&quot;&gt;&lt;code&gt;input&lt;/code&gt;&lt;/a&gt; elements. At the end of this page you can find a &lt;a href=&quot;type/ngmodel.ngmodelcontroller#custom-control-example.html&quot;&gt;custom control example&lt;/a&gt; that uses &lt;code&gt;ngModelController&lt;/code&gt; to bind to &lt;code&gt;contenteditable&lt;/code&gt; elements.</source>
          <target state="translated">&lt;code&gt;NgModelController&lt;/code&gt; 为&lt;a href=&quot;directive/ngmodel&quot;&gt; &lt;code&gt;ngModel&lt;/code&gt; &lt;/a&gt;指令提供API 。控制器包含用于数据绑定，验证，CSS更新以及值格式和解析的服务。它故意不包含任何处理DOM呈现或侦听DOM事件的逻辑。此类与DOM相关的逻辑应由使用 &lt;code&gt;NgModelController&lt;/code&gt; 进行数据绑定到控制元素的其他指令提供。 AngularJS为大多数&lt;a href=&quot;directive/input&quot;&gt; &lt;code&gt;input&lt;/code&gt; &lt;/a&gt;元素提供了此DOM逻辑。在此页面的结尾，您可以找到一个使用 &lt;code&gt;ngModelController&lt;/code&gt; 绑定到 &lt;code&gt;contenteditable&lt;/code&gt; 元素的&lt;a href=&quot;type/ngmodel.ngmodelcontroller#custom-control-example.html&quot;&gt;自定义控件示例&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a69d39e4a6f42d306e1d072c6d4937020d012d32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NgModelController&lt;/code&gt;&lt;code&gt;FormController&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;NgModelController&lt;/code&gt;&lt;code&gt;FormController&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0bf8f0d9b31ea6dc7a1165f01ac3cb490830f275" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object&lt;/code&gt;: A pattern object can be used to filter specific properties on objects contained by &lt;code&gt;array&lt;/code&gt;. For example &lt;code&gt;{name:&quot;M&quot;, phone:&quot;1&quot;}&lt;/code&gt; predicate will return an array of items which have property &lt;code&gt;name&lt;/code&gt; containing &quot;M&quot; and property &lt;code&gt;phone&lt;/code&gt; containing &quot;1&quot;. A special property name (&lt;code&gt;$&lt;/code&gt; by default) can be used (e.g. as in &lt;code&gt;{$: &quot;text&quot;}&lt;/code&gt;) to accept a match against any property of the object or its nested object properties. That's equivalent to the simple substring match with a &lt;code&gt;string&lt;/code&gt; as described above. The special property name can be overwritten, using the &lt;code&gt;anyPropertyKey&lt;/code&gt; parameter. The predicate can be negated by prefixing the string with &lt;code&gt;!&lt;/code&gt;. For example &lt;code&gt;{name: &quot;!M&quot;}&lt;/code&gt; predicate will return an array of items which have property &lt;code&gt;name&lt;/code&gt; not containing &quot;M&quot;.</source>
          <target state="translated">&lt;code&gt;Object&lt;/code&gt; ：模式对象可用于过滤 &lt;code&gt;array&lt;/code&gt; 包含的对象的特定属性。例如， &lt;code&gt;{name:&quot;M&quot;, phone:&quot;1&quot;}&lt;/code&gt; 谓词将返回属性 &lt;code&gt;name&lt;/code&gt; &amp;ldquo; M&amp;rdquo;且属性 &lt;code&gt;phone&lt;/code&gt; &amp;ldquo; 1&amp;rdquo; 的项目数组。可以使用特殊的属性名称（默认情况下 &lt;code&gt;$&lt;/code&gt; ）（例如，在 &lt;code&gt;{$: &quot;text&quot;}&lt;/code&gt; ）接受对象的任何属性或其嵌套对象属性的匹配。这等同于简单的字符串匹配以 &lt;code&gt;string&lt;/code&gt; 如上所述。可以使用 &lt;code&gt;anyPropertyKey&lt;/code&gt; 覆盖特殊属性名称参数。可以通过在字符串前面加上 &lt;code&gt;!&lt;/code&gt; 来否定谓词。。例如， &lt;code&gt;{name: &quot;!M&quot;}&lt;/code&gt; 谓词将返回属性 &lt;code&gt;name&lt;/code&gt; 不包含&amp;ldquo; M&amp;rdquo; 的项的数组。</target>
        </trans-unit>
        <trans-unit id="f2938534d39f20b732428343c451ffcdae68acdd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object&lt;/code&gt;: then it should have a &lt;code&gt;$get&lt;/code&gt; method. The &lt;code&gt;$get&lt;/code&gt; method will be invoked using &lt;a href=&quot;%24injector#invoke.html&quot;&gt;$injector.invoke()&lt;/a&gt; when an instance needs to be created.</source>
          <target state="translated">&lt;code&gt;Object&lt;/code&gt; ：那么它应该具有 &lt;code&gt;$get&lt;/code&gt; 方法。在 &lt;code&gt;$get&lt;/code&gt; 方法将使用调用&lt;a href=&quot;%24injector#invoke.html&quot;&gt;$ injector.invoke（）&lt;/a&gt;时，要创建一个实例需求。</target>
        </trans-unit>
        <trans-unit id="db2b774592ddfd5ff96412c611cf34fbc920134d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object&lt;/code&gt;&lt;code&gt;Array&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Object&lt;/code&gt;&lt;code&gt;Array&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="89a29f0edb8f921d20f37b7ad5fd2f5c6bd8a55d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object&lt;/code&gt;&lt;code&gt;Array&lt;/code&gt;&lt;code&gt;Date&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;&lt;code&gt;number&lt;/code&gt;&lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Object&lt;/code&gt;&lt;code&gt;Array&lt;/code&gt;&lt;code&gt;Date&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;&lt;code&gt;number&lt;/code&gt;&lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c996207dcead9d7a10fdd4ed9ec7d64d47d683d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object&lt;/code&gt;&lt;code&gt;Array&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;&lt;code&gt;number&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Object&lt;/code&gt;&lt;code&gt;Array&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;&lt;code&gt;number&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cc58c9b95cd0422a0cfa28d4c1dd5b9bac33891c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object&lt;/code&gt;&lt;code&gt;Module&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Object&lt;/code&gt;&lt;code&gt;Module&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0a3ec6be53242c12e63b930f0663cd3fbb8183c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object&lt;/code&gt;&lt;code&gt;function()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Object&lt;/code&gt;&lt;code&gt;function()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="42d283f68d36e0bf78bfb675694e1b1f2576c1c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object&lt;/code&gt;&lt;code&gt;function(Object)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Object&lt;/code&gt;&lt;code&gt;function(Object)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e336b5b9d4ca78a2e639e8b6953b69ada856e5a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Object&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="710c7dc609d05df37f5d0c5e6633b583180e0da6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RegExp&lt;/code&gt;&lt;code&gt;ng.$compileProvider&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;RegExp&lt;/code&gt;&lt;code&gt;ng.$compileProvider&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ea596c6bc79857b297df36ecd7164d42cae989a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Route&lt;/code&gt;&lt;code&gt;Undefined&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Route&lt;/code&gt;&lt;code&gt;Undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bc209144ce76de5ff5dffcc953ad54f6463fd044" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SpicyController&lt;/code&gt; is just a plain JavaScript function. As an (optional) naming convention the name starts with capital letter and ends with &quot;Controller&quot;.</source>
          <target state="translated">&lt;code&gt;SpicyController&lt;/code&gt; 只是一个普通的JavaScript函数。作为一种（可选的）命名约定，名称以大写字母开头，以&amp;ldquo; Controller&amp;rdquo;结尾。</target>
        </trans-unit>
        <trans-unit id="ea6e21883a77d2efdad2ed609bea3d27cb413992" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[caseInsensitiveMatch=false]&lt;/code&gt; - &lt;code&gt;{boolean=}&lt;/code&gt; - match routes without being case sensitive</source>
          <target state="translated">&lt;code&gt;[caseInsensitiveMatch=false]&lt;/code&gt; - &lt;code&gt;{boolean=}&lt;/code&gt; -匹配路由而不区分大小写</target>
        </trans-unit>
        <trans-unit id="0075ca0cd929238aff13a889c6003eec4f60e8fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[reloadOnSearch=true]&lt;/code&gt; - &lt;code&gt;{boolean=}&lt;/code&gt; - reload route when only &lt;code&gt;$location.search()&lt;/code&gt; or &lt;code&gt;$location.hash()&lt;/code&gt; changes.</source>
          <target state="translated">&lt;code&gt;[reloadOnSearch=true]&lt;/code&gt; - &lt;code&gt;{boolean=}&lt;/code&gt; -仅在 &lt;code&gt;$location.search()&lt;/code&gt; 或 &lt;code&gt;$location.hash()&lt;/code&gt; 更改时重新加载路由。</target>
        </trans-unit>
        <trans-unit id="b37ba5a61f5e746c8cb037a2ce84d76bcd845445" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[reloadOnUrl=true]&lt;/code&gt; - &lt;code&gt;{boolean=}&lt;/code&gt; - reload route when any part of the URL changes (including the path) even if the new URL maps to the same route.</source>
          <target state="translated">&lt;code&gt;[reloadOnUrl=true]&lt;/code&gt; - &lt;code&gt;{boolean=}&lt;/code&gt; -当URL的任何部分更改（包括路径）时，即使新URL映射到同一路由，也要重新加载路由。</target>
        </trans-unit>
        <trans-unit id="04e413c5721d051e89a88262b5d8729da9410a88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;^&lt;/code&gt; - Locate the required controller by searching the element and its parents. Throw an error if not found.</source>
          <target state="translated">&lt;code&gt;^&lt;/code&gt; -通过搜索元素及其父元素找到所需的控制器。如果找不到，则引发错误。</target>
        </trans-unit>
        <trans-unit id="bdcdb1a5d927603ee992af605dfd4ad5c5fe7c7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;^^&lt;/code&gt; - Locate the required controller by searching the element's parents. Throw an error if not found.</source>
          <target state="translated">&lt;code&gt;^^&lt;/code&gt; -通过搜索元素的父级找到所需的控制器。如果找不到，则引发错误。</target>
        </trans-unit>
        <trans-unit id="df4c2c12e1c0672689604b12ac1824d4aec3407a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;addClass&lt;/code&gt; - A space separated list of CSS classes that will be added to the element and spread across the animation.</source>
          <target state="translated">&lt;code&gt;addClass&lt;/code&gt; -用空格分隔的CSS类列表，这些类将添加到元素中并分布在整个动画中。</target>
        </trans-unit>
        <trans-unit id="11b594a5a642e38fa53af414b7bb750a4cdb6288" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allOrNothing&lt;/code&gt; is useful for interpolating URLs. &lt;code&gt;ngSrc&lt;/code&gt; and &lt;code&gt;ngSrcset&lt;/code&gt; use this behavior.</source>
          <target state="translated">&lt;code&gt;allOrNothing&lt;/code&gt; 对于内插URL很有用。 &lt;code&gt;ngSrc&lt;/code&gt; 和 &lt;code&gt;ngSrcset&lt;/code&gt; 使用此行为。</target>
        </trans-unit>
        <trans-unit id="eb1e935aa495651ee593c95aa6fd72c6d9b333b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allowInvalid&lt;/code&gt;: boolean value which indicates that the model can be set with values that did not validate correctly instead of the default behavior of setting the model to undefined.</source>
          <target state="translated">&lt;code&gt;allowInvalid&lt;/code&gt; ：布尔值，指示可以使用未正确验证的值来设置模型，而不是将模型设置为未定义的默认行为。</target>
        </trans-unit>
        <trans-unit id="e51aeb627397bcc1b8658947574917c448553c75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;angular.copy&lt;/code&gt; does not check if destination and source are of the same type. It's the developer's responsibility to make sure they are compatible.</source>
          <target state="translated">&lt;code&gt;angular.copy&lt;/code&gt; 不会检查目标和源是否为同一类型。确保它们兼容是开发人员的责任。</target>
        </trans-unit>
        <trans-unit id="c8b20d6fdbd254d2a3f020b8e0c28b846790e494" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;angular.merge&lt;/code&gt; also does not support merging objects with circular references.</source>
          <target state="translated">&lt;code&gt;angular.merge&lt;/code&gt; 还不支持合并具有圆形参考的对象。</target>
        </trans-unit>
        <trans-unit id="768bef476452668e0c5f7963d5fb224e99333821" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;angular.resumeBootstrap()&lt;/code&gt; takes an optional array of modules that should be added to the original list of modules that the app was about to be bootstrapped with.</source>
          <target state="translated">&lt;code&gt;angular.resumeBootstrap()&lt;/code&gt; 采用可选的模块数组，应将其添加到应用程序将要自举的原始模块列表中。</target>
        </trans-unit>
        <trans-unit id="d23f1289abccdbc303d87403bcffb8937081cefe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;applyClassesEarly&lt;/code&gt; - Whether or not the classes being added or removed will be used when detecting the animation. This is set by &lt;code&gt;$animate&lt;/code&gt; when enter/leave/move animations are fired to ensure that the CSS classes are resolved in time. (Note that this will prevent any transitions from occurring on the classes being added and removed.)</source>
          <target state="translated">&lt;code&gt;applyClassesEarly&lt;/code&gt; -检测动画时是否使用要添加或删除的类。当触发输入/离开/移动动画以确保CSS类及时解析时，此设置由 &lt;code&gt;$animate&lt;/code&gt; 。（请注意，这将防止在添加和删除的类上发生任何过渡。）</target>
        </trans-unit>
        <trans-unit id="25f2299b1e7c02b3b494e75bf39f91c831ef7879" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;array&lt;/code&gt; / &lt;code&gt;object&lt;/code&gt;: an expression which evaluates to an array / object to iterate over.</source>
          <target state="translated">&lt;code&gt;array&lt;/code&gt; / &lt;code&gt;object&lt;/code&gt; ：一个表达式，其结果为要迭代的数组/对象。</target>
        </trans-unit>
        <trans-unit id="13d616fba019934893c24626dd683403282d59e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;array&lt;/code&gt;: array of controller instances</source>
          <target state="translated">&lt;code&gt;array&lt;/code&gt; ：控制器实例的数组</target>
        </trans-unit>
        <trans-unit id="ea7cfa683bc8e28b8816aca72130c9572ada6d40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assign&lt;/code&gt; &amp;ndash; &lt;code&gt;{?function(context, value)}&lt;/code&gt; &amp;ndash; if the expression is assignable, this will be set to a function to change its value on the given context.</source>
          <target state="translated">&lt;code&gt;assign&lt;/code&gt; &amp;ndash; &lt;code&gt;{?function(context, value)}&lt;/code&gt; &amp;ndash;如果表达式是可分配的，它将被设置为一个函数，以在给定的上下文中更改其值。</target>
        </trans-unit>
        <trans-unit id="fd29b2e6ba513c69a51141925b54a8b1bc28948c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attrs&lt;/code&gt; is a hash object with key-value pairs of normalized attribute names and their corresponding attribute values.</source>
          <target state="translated">&lt;code&gt;attrs&lt;/code&gt; 是一个哈希对象，具有标准化属性名称及其对应的属性值的键-值对。</target>
        </trans-unit>
        <trans-unit id="e900eb1334388f3a65a60acbb090e856fd92eb6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bindings&lt;/code&gt; &amp;ndash; &lt;code&gt;{object=}&lt;/code&gt; &amp;ndash; defines bindings between DOM attributes and component properties. Component properties are always bound to the component controller and not to the scope. See &lt;a href=&quot;../service/%24compile#-bindtocontroller-.html&quot;&gt;&lt;code&gt;bindToController&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;bindings&lt;/code&gt; &amp;ndash; &lt;code&gt;{object=}&lt;/code&gt; &amp;ndash;定义DOM属性和组件属性之间的绑定。组件属性始终绑定到组件控制器，而不是作用域。参见&lt;a href=&quot;../service/%24compile#-bindtocontroller-.html&quot;&gt; &lt;code&gt;bindToController&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3e3c235c0f048c351ea50a9d2f0830bcdfc5916b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;&lt;code&gt;$sanitizeProvider&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt;&lt;code&gt;$sanitizeProvider&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7c00b10b49c2aedb1cdcf5f9dc1ac8f615268fe7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;&lt;code&gt;Object&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt;&lt;code&gt;Object&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3b39b03a8af0842e2238cbf4158aa056dcf59d18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;&lt;code&gt;ng.$qProvider&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt;&lt;code&gt;ng.$qProvider&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7e868289ed64280fae08519e316807bffbf4e883" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;&lt;code&gt;number&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt;&lt;code&gt;number&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="33da9fab0b4b53f772b31ae8a9d70da1f9e4cd60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;&lt;code&gt;object&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt;&lt;code&gt;object&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8a0cdab7b6af98404b78712346ab17998ef3e7b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bubbles&lt;/code&gt;: &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/Event/bubbles&quot;&gt;Event.bubbles&lt;/a&gt;. Not applicable to all events.</source>
          <target state="translated">&lt;code&gt;bubbles&lt;/code&gt; ：&lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/Event/bubbles&quot;&gt;Event.bubbles&lt;/a&gt;。不适用于所有事件。</target>
        </trans-unit>
        <trans-unit id="b41bf1988ff51eeca7ea6e27544bf8cf02df6596" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cancel&lt;/code&gt; is called either on a &lt;code&gt;touchcancel&lt;/code&gt; or &lt;code&gt;pointercancel&lt;/code&gt; from the browser, or when we begin scrolling as described above.</source>
          <target state="translated">&lt;code&gt;cancel&lt;/code&gt; 在浏览器的 &lt;code&gt;touchcancel&lt;/code&gt; 或 &lt;code&gt;pointercancel&lt;/code&gt; 上，或者当我们如上所述开始滚动时，调用cancel。</target>
        </trans-unit>
        <trans-unit id="cf30eebaf18256c21d7e27f9381f8b572a1662b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cancelable&lt;/code&gt;: &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/Event/cancelable&quot;&gt;Event.cancelable&lt;/a&gt;. Not applicable to all events.</source>
          <target state="translated">&lt;code&gt;cancelable&lt;/code&gt; ：&lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/Event/cancelable&quot;&gt;Event.cancelable&lt;/a&gt;。不适用于所有事件。</target>
        </trans-unit>
        <trans-unit id="f7e90ffb64e324910d608e87a7579d85f36b215f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;catch(errorCallback)&lt;/code&gt; &amp;ndash; shorthand for &lt;code&gt;promise.then(null, errorCallback)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;catch(errorCallback)&lt;/code&gt; &amp;ndash; Promise.then的简写 &lt;code&gt;promise.then(null, errorCallback)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1ffc8a416c5a3e29580420c09c60b8c944c10517" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;charcode&lt;/code&gt;: &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/KeyboardEvent/charcode&quot;&gt;charCode&lt;/a&gt; for keyboard events (keydown, keypress, and keyup).</source>
          <target state="translated">&lt;code&gt;charcode&lt;/code&gt; ：键盘事件（keydown，keypress和keyup）的&lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/KeyboardEvent/charcode&quot;&gt;charCode&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3f9621a2bc8472f4304a72cb638e562e87e2a812" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cleanupStyles&lt;/code&gt; - Whether or not the provided &lt;code&gt;from&lt;/code&gt; and &lt;code&gt;to&lt;/code&gt; styles will be removed once the animation is closed. This is useful for when the styles are used purely for the sake of the animation and do not have a lasting visual effect on the element (e.g. a collapse and open animation). By default this value is set to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cleanupStyles&lt;/code&gt; -无论是否提供 &lt;code&gt;from&lt;/code&gt; 和 &lt;code&gt;to&lt;/code&gt; 一旦动画被关闭样式将被删除。当仅出于动画目的使用样式并且对元素没有持久的视觉效果（例如，折叠和打开动画）时，这很有用。默认情况下，此值设置为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9b26fb58436b12c397715dc5ec21bc8d52f95602" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cloneAttachFn(clonedElement, scope)&lt;/code&gt; where:</source>
          <target state="translated">&lt;code&gt;cloneAttachFn(clonedElement, scope)&lt;/code&gt; 其中：</target>
        </trans-unit>
        <trans-unit id="50eb39711a70c9fa088bba8a66c7191894c56127" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cloneAttachFn&lt;/code&gt; - If &lt;code&gt;cloneAttachFn&lt;/code&gt; is provided, then the link function will clone the &lt;code&gt;template&lt;/code&gt; and call the &lt;code&gt;cloneAttachFn&lt;/code&gt; function allowing the caller to attach the cloned elements to the DOM document at the appropriate place. The &lt;code&gt;cloneAttachFn&lt;/code&gt; is called as:</source>
          <target state="translated">&lt;code&gt;cloneAttachFn&lt;/code&gt; -如果提供了 &lt;code&gt;cloneAttachFn&lt;/code&gt; ，则链接函数将克隆 &lt;code&gt;template&lt;/code&gt; 并调用 &lt;code&gt;cloneAttachFn&lt;/code&gt; 函数，从而允许调用者在适当的位置将克隆的元素附加到DOM文档。该 &lt;code&gt;cloneAttachFn&lt;/code&gt; 被称为：</target>
        </trans-unit>
        <trans-unit id="80f80f58d022034b4408356f305f0ebe5d559940" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cloneLinkingFn&lt;/code&gt;: (optional) argument to create clones of the original transcluded content.</source>
          <target state="translated">&lt;code&gt;cloneLinkingFn&lt;/code&gt; ：（可选）参数，用于创建原始已包含内容的副本。</target>
        </trans-unit>
        <trans-unit id="fe0bce1e019253801bbea8dba33b481fb88cf4a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;clonedElement&lt;/code&gt; - is a clone of the original &lt;code&gt;element&lt;/code&gt; passed into the compiler.</source>
          <target state="translated">&lt;code&gt;clonedElement&lt;/code&gt; -是传递给编译器的原始 &lt;code&gt;element&lt;/code&gt; 的副本。</target>
        </trans-unit>
        <trans-unit id="c36f008d8d2600fca06e8f74498e98f321d6c8f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;codeName&lt;/code&gt; &amp;ndash; &lt;code&gt;{string}&lt;/code&gt; &amp;ndash; Code name of the release, such as &quot;jiggling-armfat&quot;.</source>
          <target state="translated">&lt;code&gt;codeName&lt;/code&gt; &amp;ndash; &lt;code&gt;{string}&lt;/code&gt; &amp;ndash;版本号，例如&amp;ldquo; jiggling-armfat&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="849900f7345afe9bc98b2d56bd0297e48e89b41b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;component&lt;/code&gt;, &lt;code&gt;loader&lt;/code&gt;, &lt;code&gt;redirectTo&lt;/code&gt; (requires exactly one of these)</source>
          <target state="translated">&lt;code&gt;component&lt;/code&gt; ， &lt;code&gt;loader&lt;/code&gt; ， &lt;code&gt;redirectTo&lt;/code&gt; （完全需要其中之一）</target>
        </trans-unit>
        <trans-unit id="f77ee27682ccf9fa647bc92baab0067fe8d248c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;constant&lt;/code&gt; &amp;ndash; &lt;code&gt;{boolean}&lt;/code&gt; &amp;ndash; whether the expression is made entirely of JavaScript constant literals.</source>
          <target state="translated">&lt;code&gt;constant&lt;/code&gt; &amp;ndash; &lt;code&gt;{boolean}&lt;/code&gt; &amp;ndash;表达式是否完全由JavaScript常量文字组成。</target>
        </trans-unit>
        <trans-unit id="53c96bd8601bdfa54bd985ab7eaa6b45dd18b92f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;contenteditable&lt;/code&gt; is an HTML5 attribute, which tells the browser to let the element contents be edited in place by the user.</source>
          <target state="translated">&lt;code&gt;contenteditable&lt;/code&gt; 是HTML5属性，它告诉浏览器让用户在适当位置编辑元素内容。</target>
        </trans-unit>
        <trans-unit id="0a4b7c22538d3a7bddc9055a1cad25fe5ca00735" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;context&lt;/code&gt; &amp;ndash; &lt;code&gt;{object}&lt;/code&gt; &amp;ndash; an object against which any expressions embedded in the strings are evaluated against (typically a scope object).</source>
          <target state="translated">&lt;code&gt;context&lt;/code&gt; &amp;ndash; &lt;code&gt;{object}&lt;/code&gt; &amp;ndash;一个对象，字符串中嵌入的任何表达式都将针对此对象进行评估（通常是一个范围对象）。</target>
        </trans-unit>
        <trans-unit id="36cd6e0d0044fb9e73606584644452f42d047ac3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;context&lt;/code&gt;: evaluation context for all expressions embedded in the interpolated text</source>
          <target state="translated">&lt;code&gt;context&lt;/code&gt; ：插值文本中嵌入的所有表达式的评估上下文</target>
        </trans-unit>
        <trans-unit id="6f438b7d6871106411793e3f211b7f98a01b9526" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;controller(name)&lt;/code&gt; - retrieves the controller of the current element or its parent. By default retrieves controller associated with the &lt;code&gt;ngController&lt;/code&gt; directive. If &lt;code&gt;name&lt;/code&gt; is provided as camelCase directive name, then the controller for this directive will be retrieved (e.g. &lt;code&gt;'ngModel'&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;controller(name)&lt;/code&gt; -检索当前元素或其父元素的控制器。默认情况下，检索与 &lt;code&gt;ngController&lt;/code&gt; 指令关联的控制器。如果提供 &lt;code&gt;name&lt;/code&gt; 作为camelCase指令名称，则将检索该指令的控制器（例如 &lt;code&gt;'ngModel'&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="e8dc122ef38d075f5ac28b2898dea3061d2aff4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;controller&lt;/code&gt; &amp;ndash; &lt;code&gt;{(string|Function)=}&lt;/code&gt; &amp;ndash; Controller fn that should be associated with newly created scope or the name of a &lt;a href=&quot;../../ng/type/angular.module#controller.html&quot;&gt;registered controller&lt;/a&gt; if passed as a string.</source>
          <target state="translated">&lt;code&gt;controller&lt;/code&gt; &amp;ndash; &lt;code&gt;{(string|Function)=}&lt;/code&gt; &amp;ndash;控制器fn，如果以字符串形式传递，则应与新创建的范围或已&lt;a href=&quot;../../ng/type/angular.module#controller.html&quot;&gt;注册控制器&lt;/a&gt;的名称相关联。</target>
        </trans-unit>
        <trans-unit id="f5c992f453aa5a9abfe5ea57c299b7e772446661" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;controller&lt;/code&gt; &amp;ndash; &lt;code&gt;{(string|function()=}&lt;/code&gt; &amp;ndash; controller constructor function that should be associated with newly created scope or the name of a &lt;a href=&quot;../service/%24compile#-controller-.html&quot;&gt;registered controller&lt;/a&gt; if passed as a string. An empty &lt;code&gt;noop&lt;/code&gt; function by default.</source>
          <target state="translated">&lt;code&gt;controller&lt;/code&gt; &amp;ndash; &lt;code&gt;{(string|function()=}&lt;/code&gt; &amp;ndash;控制器构造函数，如果通过字符串传递，则应与新创建的作用域或已&lt;a href=&quot;../service/%24compile#-controller-.html&quot;&gt;注册控制器&lt;/a&gt;的名称相关联。默认为空 &lt;code&gt;noop&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="7fabc11cdc1ae9046c9631fb94f694c8cefaa149" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;controller&lt;/code&gt; - the directive's required controller instance(s) - Instances are shared among all directives, which allows the directives to use the controllers as a communication channel. The exact value depends on the directive's &lt;code&gt;require&lt;/code&gt; property:</source>
          <target state="translated">&lt;code&gt;controller&lt;/code&gt; -指令所需的控制器实例-实例在所有指令之间共享，这允许指令将控制器用作通信通道。确切的值取决于指令的 &lt;code&gt;require&lt;/code&gt; 属性：</target>
        </trans-unit>
        <trans-unit id="c572e71c3f4e1084c861f50e25a84070007aed98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;controller&lt;/code&gt; is the directive's required controller instance(s) or its own controller (if any). The exact value depends on the directive's require property.</source>
          <target state="translated">&lt;code&gt;controller&lt;/code&gt; 是指令的必需控制器实例或它自己的控制器（如果有）。确切的值取决于指令的require属性。</target>
        </trans-unit>
        <trans-unit id="666f9edafe49d10e7cbe582943a6a628f7b810fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;controller&lt;/code&gt;: The controller constructor as defined in the route definition.</source>
          <target state="translated">&lt;code&gt;controller&lt;/code&gt; ：路由定义中定义的控制器构造函数。</target>
        </trans-unit>
        <trans-unit id="de97795b4693ffcc0599376a82d2281b8aed5968" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;controllerAs&lt;/code&gt; &amp;ndash; &lt;code&gt;{string=}&lt;/code&gt; &amp;ndash; An identifier name for a reference to the controller. If present, the controller will be published to scope under the &lt;code&gt;controllerAs&lt;/code&gt; name.</source>
          <target state="translated">&lt;code&gt;controllerAs&lt;/code&gt; &amp;ndash; &lt;code&gt;{string=}&lt;/code&gt; &amp;ndash;引用控制器的标识符名称。如果存在，则控制器将在 &lt;code&gt;controllerAs&lt;/code&gt; 名称下发布到作用域。</target>
        </trans-unit>
        <trans-unit id="35044f6b10114bdaecdf847efcb2c9e15190dc13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;controllerAs&lt;/code&gt; &amp;ndash; &lt;code&gt;{string=}&lt;/code&gt; &amp;ndash; identifier name for to reference the controller in the component's scope. If present, the controller will be published to scope under the &lt;code&gt;controllerAs&lt;/code&gt; name. If not present, this will default to be &lt;code&gt;$ctrl&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;controllerAs&lt;/code&gt; &amp;ndash; &lt;code&gt;{string=}&lt;/code&gt; &amp;ndash;标识符名称，用于在组件范围内引用控制器。如果存在，则控制器将在 &lt;code&gt;controllerAs&lt;/code&gt; 名称下发布到作用域。如果不存在，则默认为 &lt;code&gt;$ctrl&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e3d9f7929e336c9abb89233aca14a78b56a06ef8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;currentScope&lt;/code&gt; - &lt;code&gt;{Scope}&lt;/code&gt;: the scope that is currently handling the event. Once the event propagates through the scope hierarchy, this property is set to null.</source>
          <target state="translated">&lt;code&gt;currentScope&lt;/code&gt; - &lt;code&gt;{Scope}&lt;/code&gt; ：当前处理事件的范围。一旦事件在范围层次结构中传播，此属性将设置为null。</target>
        </trans-unit>
        <trans-unit id="0d9e426278d320271f7630aabfe54819ef13c371" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data&lt;/code&gt; (optional)</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; （可选）</target>
        </trans-unit>
        <trans-unit id="7e0474374d4d2afa718094e485fb0f5f77bcaada" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data&lt;/code&gt; - an object with these properties:</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; -具有以下属性的对象：</target>
        </trans-unit>
        <trans-unit id="a18023ef6854a9ba57dd74ff2eeff9f4146dd3d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data&lt;/code&gt;: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CompositionEvent/data&quot;&gt;data&lt;/a&gt; for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CompositionEvent&quot;&gt;CompositionEvents&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; ：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CompositionEvent/data&quot;&gt;数据&lt;/a&gt;的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CompositionEvent&quot;&gt;CompositionEvents&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6918d6bf4c0e7097e9358db9fb2c4a7015b50414" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;date&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;date&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f088a34d0260aa96981df421799e14d87b17c980" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;debounce&lt;/code&gt;: integer value which contains the debounce model update value in milliseconds. A value of 0 triggers an immediate update. If an object is supplied instead, you can specify a custom value for each event. For example:</source>
          <target state="translated">&lt;code&gt;debounce&lt;/code&gt; ：整数值，其中包含以毫秒为单位的去抖动模型更新值。值为0触发立即更新。如果提供了一个对象，则可以为每个事件指定一个自定义值。例如：</target>
        </trans-unit>
        <trans-unit id="6553d251504f706217cffde2f636caa643840444" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default&lt;/code&gt; events are those that are bound to the control, and when fired, update the &lt;code&gt;$viewValue&lt;/code&gt; via &lt;a href=&quot;../type/ngmodel.ngmodelcontroller#%24setViewValue.html&quot;&gt;$setViewValue&lt;/a&gt;. Every event that is not listed in &lt;code&gt;updateOn&lt;/code&gt; is considered a &quot;default&quot; event, since different control types have different default events.</source>
          <target state="translated">&lt;code&gt;default&lt;/code&gt; 的事件是那些被绑定到控制和发射时，更新 &lt;code&gt;$viewValue&lt;/code&gt; 通过&lt;a href=&quot;../type/ngmodel.ngmodelcontroller#%24setViewValue.html&quot;&gt;$ setViewValue&lt;/a&gt;。由于不同的控件类型具有不同的默认事件，因此未在 &lt;code&gt;updateOn&lt;/code&gt; 中列出的每个事件均被视为&amp;ldquo;默认&amp;rdquo;事件。</target>
        </trans-unit>
        <trans-unit id="ccf86cca2b957aa302b0a368196c4a0622a85d41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;defaultPrevented&lt;/code&gt; - &lt;code&gt;{boolean}&lt;/code&gt;: true if &lt;code&gt;preventDefault&lt;/code&gt; was called.</source>
          <target state="translated">&lt;code&gt;defaultPrevented&lt;/code&gt; - &lt;code&gt;{boolean}&lt;/code&gt; ：如果为true &lt;code&gt;preventDefault&lt;/code&gt; 被调用。</target>
        </trans-unit>
        <trans-unit id="ec6fd0574a59e4f3c8e45c08d5336bdff9fd85d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;delay&lt;/code&gt; - A number value representing the total delay of the transition and/or keyframe (note that a value of 1 is 1000ms). If a value of &lt;code&gt;true&lt;/code&gt; is used then whatever delay value is detected from the CSS classes will be mirrored on the elements styles (e.g. by setting delay true then the style value of the element will be &lt;code&gt;transition-delay: DETECTED_VALUE&lt;/code&gt;). Using &lt;code&gt;true&lt;/code&gt; is useful when you want the CSS classes and inline styles to all share the same CSS delay value.</source>
          <target state="translated">&lt;code&gt;delay&lt;/code&gt; -表示过渡和/或关键帧的总延迟的数字值（请注意，值1为1000ms）。如果使用 &lt;code&gt;true&lt;/code&gt; 值，则将从CSS类中检测到的任何延迟值都将反映在元素样式上（例如，通过将delay设置为true，则该元素的样式值将是 &lt;code&gt;transition-delay: DETECTED_VALUE&lt;/code&gt; ）。当您希望CSS类和内联样式都共享相同的CSS延迟值时，使用 &lt;code&gt;true&lt;/code&gt; 很有用。</target>
        </trans-unit>
        <trans-unit id="02471651a4d351152eb294709b0ba5c877f477fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;disable&lt;/code&gt;: The result of this expression will be used to disable the rendered &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; element. Return &lt;code&gt;true&lt;/code&gt; to disable.</source>
          <target state="translated">&lt;code&gt;disable&lt;/code&gt; ：此表达式的结果将用于禁用呈现的 &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; 元素。返回 &lt;code&gt;true&lt;/code&gt; 以禁用。</target>
        </trans-unit>
        <trans-unit id="0c9dad2247678fa44b131fd1964fb6d12c9728f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dot&lt;/code&gt; &amp;ndash; &lt;code&gt;{number}&lt;/code&gt; &amp;ndash; Dot version number, such as &quot;18&quot;.</source>
          <target state="translated">&lt;code&gt;dot&lt;/code&gt; &amp;ndash; &lt;code&gt;{number}&lt;/code&gt; &amp;ndash;点版本号，例如&amp;ldquo; 18&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="e79cef804615e19ff5db231b7f25acd8a56f8ec8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;duration&lt;/code&gt; - A number value representing the total duration of the transition and/or keyframe (note that a value of 1 is 1000ms). If a value of &lt;code&gt;0&lt;/code&gt; is provided then the animation will be skipped entirely.</source>
          <target state="translated">&lt;code&gt;duration&lt;/code&gt; -表示过渡和/或关键帧的总持续时间的数字值（请注意，值1为1000ms）。如果提供的值为 &lt;code&gt;0&lt;/code&gt; ，则动画将完全跳过。</target>
        </trans-unit>
        <trans-unit id="b6c3c6a475ab5086c4c21a1ec807864bb9588f34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;easing&lt;/code&gt; - The CSS easing value that will be applied to the transition or keyframe animation (or both).</source>
          <target state="translated">&lt;code&gt;easing&lt;/code&gt; -将应用于过渡或关键帧动画（或两者）的CSS缓动值。</target>
        </trans-unit>
        <trans-unit id="0b70259ab6e67325e6bba346bea7cd9b78055fb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;elapsedTime&lt;/code&gt;: the elapsedTime for &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/TransitionEvent&quot;&gt;TransitionEvent&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/AnimationEvent&quot;&gt;AnimationEvent&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;elapsedTime&lt;/code&gt; ：&lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/TransitionEvent&quot;&gt;TransitionEvent&lt;/a&gt;和&lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/AnimationEvent&quot;&gt;AnimationEvent&lt;/a&gt;的elapsedTime 。</target>
        </trans-unit>
        <trans-unit id="82faa5e3e808394b144d0d2b0847b84203127404" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;element&lt;/code&gt; - The captured DOM element that the animation was fired on.</source>
          <target state="translated">&lt;code&gt;element&lt;/code&gt; -捕获的DOM元素的动画是上触发。</target>
        </trans-unit>
        <trans-unit id="cb8a638a7d243a71595b7e1ec1c2bcc7f94a2a09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;element&lt;/code&gt; is the jqLite-wrapped element that this directive matches.</source>
          <target state="translated">&lt;code&gt;element&lt;/code&gt; 是此伪指令匹配的jqLit​​e包装的元素。</target>
        </trans-unit>
        <trans-unit id="a04cc99d013452cf909001c6f62d716617ccb9a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;end&lt;/code&gt; - This method will cancel the animation and remove all applied CSS classes and styles.</source>
          <target state="translated">&lt;code&gt;end&lt;/code&gt; -此方法将取消动画并删除所有应用的CSS类和样式。</target>
        </trans-unit>
        <trans-unit id="324cab10f9312cb328ca55bc90b5af8b75fcbc2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;end&lt;/code&gt; is called when a swipe is successfully completed with a &lt;code&gt;touchend&lt;/code&gt;, &lt;code&gt;mouseup&lt;/code&gt; or &lt;code&gt;pointerup&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;end&lt;/code&gt; 时轻扫可以成功地与一个完成被称为 &lt;code&gt;touchend&lt;/code&gt; ， &lt;code&gt;mouseup&lt;/code&gt; 或 &lt;code&gt;pointerup&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="289cb15261e3ed613cf954e9f37fb5d7b1f21ee5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;event&lt;/code&gt; - The DOM event (e.g. enter, leave, move). When used, a generated CSS class of &lt;code&gt;ng-EVENT&lt;/code&gt; and &lt;code&gt;ng-EVENT-active&lt;/code&gt; will be applied to the element during the animation. Multiple events can be provided when spaces are used as a separator. (Note that this will not perform any DOM operation.)</source>
          <target state="translated">&lt;code&gt;event&lt;/code&gt; -DOM事件（例如，进入，离开，移动）。使用时，将在动画期间将生成的 &lt;code&gt;ng-EVENT&lt;/code&gt; 和 &lt;code&gt;ng-EVENT-active&lt;/code&gt; CSS类应用于元素。当使用空格作为分隔符时，可以提供多个事件。（请注意，这不会执行任何DOM操作。）</target>
        </trans-unit>
        <trans-unit id="1ed2634a78173c6734900e086430541787a2c645" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eventFn&lt;/code&gt;: &lt;code&gt;function(element, ... , doneFunction, options)&lt;/code&gt; The element to animate, the &lt;code&gt;doneFunction&lt;/code&gt; and the options fed into the animation. Depending on the type of animation additional arguments will be injected into the animation function. The list below explains the function signatures for the different animation methods:</source>
          <target state="translated">&lt;code&gt;eventFn&lt;/code&gt; ： &lt;code&gt;function(element, ... , doneFunction, options)&lt;/code&gt; 要设置动画的元素， &lt;code&gt;doneFunction&lt;/code&gt; 和输入动画的选项。根据动画的类型，其他参数将被注入到动画函数中。下面的列表说明了不同动画方法的功能签名：</target>
        </trans-unit>
        <trans-unit id="53daf6b23a94cf05e663b5e53b06a84092c9371f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expression&lt;/code&gt;&lt;code&gt;RegExp&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;expression&lt;/code&gt;&lt;code&gt;RegExp&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="004d270be9666e35719fdcccdc2ded48c1db2637" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;factory&lt;/code&gt; - &lt;code&gt;{string|Function}&lt;/code&gt;: If &lt;code&gt;string&lt;/code&gt; then it is an alias for a service. Otherwise if function, then it is &lt;a href=&quot;../../auto/service/%24injector#invoke.html&quot;&gt;injected&lt;/a&gt; and the return value is treated as the dependency. If the result is a promise, it is resolved before its value is injected into the controller. Be aware that &lt;code&gt;ngRoute.$routeParams&lt;/code&gt; will still refer to the previous route within these resolve functions. Use &lt;code&gt;$route.current.params&lt;/code&gt; to access the new route parameters, instead.</source>
          <target state="translated">&lt;code&gt;factory&lt;/code&gt; - &lt;code&gt;{string|Function}&lt;/code&gt; ：如果 &lt;code&gt;string&lt;/code&gt; 那么它是一个服务的别名。否则，如果有函数，则将其&lt;a href=&quot;../../auto/service/%24injector#invoke.html&quot;&gt;注入&lt;/a&gt;，并将返回值视为依赖项。如果结果是承诺，则将其解析，然后将其值注入控制器。请注意， &lt;code&gt;ngRoute.$routeParams&lt;/code&gt; 仍将引用这些解析函数中的上一条路由。使用 &lt;code&gt;$route.current.params&lt;/code&gt; 来访问新的路由参数。</target>
        </trans-unit>
        <trans-unit id="2a7e488a50f35770b6fe7faf6fbd0122858dcc59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; - the template will replace the contents of the directive's element.</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; -模板将替换指令元素的内容。</target>
        </trans-unit>
        <trans-unit id="ae1e37c2f9ee70ba41f00c299d08775742e4fcc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; if the compiler may ignore directives on comments</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; 如果编译器可能忽略注释指令，则返回false</target>
        </trans-unit>
        <trans-unit id="072d2a05e6d8ee27fcfc865c9ae562a59f9a3e16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; if the compiler may ignore directives on element classes</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; 如果编译器可能忽略元素类上的指令，则返回false</target>
        </trans-unit>
        <trans-unit id="b9a2d5745ae63d4643b98602d174427d890209ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; or &lt;code&gt;{enabled: false}&lt;/code&gt; (default) - see &lt;a href=&quot;%24location#hashbang-mode-default-mode-.html&quot;&gt;Hashbang mode&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; 或 &lt;code&gt;{enabled: false}&lt;/code&gt; （默认）-请参见&lt;a href=&quot;%24location#hashbang-mode-default-mode-.html&quot;&gt;Hashbang模式&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6e503894d1c454b83b37b35e67c141fc054266cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt;: A short hand for a function which will look for a substring match in a case insensitive way. Primitive values are converted to strings. Objects are not compared against primitives, unless they have a custom &lt;code&gt;toString&lt;/code&gt; method (e.g. &lt;code&gt;Date&lt;/code&gt; objects).</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; ：该函数的缩写形式，它将以不区分大小写的方式查找子字符串匹配。原始值将转换为字符串。除非对象具有自定义的 &lt;code&gt;toString&lt;/code&gt; 方法（例如 &lt;code&gt;Date&lt;/code&gt; 对象），否则不将它们与基元进行比较。</target>
        </trans-unit>
        <trans-unit id="25a3629244295d5b90c767a1d53e9f2eda998a4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;finally(callback, notifyCallback)&lt;/code&gt; &amp;ndash; allows you to observe either the fulfillment or rejection of a promise, but to do so without modifying the final value. This is useful to release resources or do some clean-up that needs to be done whether the promise was rejected or resolved. See the &lt;a href=&quot;https://github.com/kriskowal/q/wiki/API-Reference#promisefinallycallback&quot;&gt;full specification&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;finally(callback, notifyCallback)&lt;/code&gt; &amp;ndash;允许您观察承诺的实现或拒绝，但无需修改最终值即可。这对于释放资源或进行一些清理工作很有用，无论承诺是被拒绝还是被解决。有关更多信息，请参见&lt;a href=&quot;https://github.com/kriskowal/q/wiki/API-Reference#promisefinallycallback&quot;&gt;完整规范&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="199eff7709bd2482aac2bbe453f233af5ffdd2e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;format&lt;/code&gt; string can also be one of the following predefined &lt;a href=&quot;../../../guide/i18n&quot;&gt;localizable formats&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;format&lt;/code&gt; 字符串也可以是以下预定义的&lt;a href=&quot;../../../guide/i18n&quot;&gt;本地化格式之一&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="276879e95d7b4df2b7d4bf0fe7afa4dae8a9761d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;format&lt;/code&gt; string can be composed of the following elements:</source>
          <target state="translated">&lt;code&gt;format&lt;/code&gt; 字符串可以由以下元素组成：</target>
        </trans-unit>
        <trans-unit id="ab41ba228793aacc2ebd7d815af8e82148ed74c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;format&lt;/code&gt; string can contain literal values. These need to be escaped by surrounding with single quotes (e.g. &lt;code&gt;&quot;h 'in the morning'&quot;&lt;/code&gt;). In order to output a single quote, escape it - i.e., two single quotes in a sequence (e.g. &lt;code&gt;&quot;h 'o''clock'&quot;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;format&lt;/code&gt; 字符串可以包含文字值。这些需要用单引号引起来（例如 &lt;code&gt;&quot;h 'in the morning'&quot;&lt;/code&gt; ）。为了输出一个单引号，请将其转义-即序列中的两个单引号（例如 &lt;code&gt;&quot;h 'o''clock'&quot;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="d63bc250c76a1ae170058ba9bcbb7f827b13d340" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;from&lt;/code&gt; - The starting CSS styles (a key/value object) that will be applied at the start of the animation.</source>
          <target state="translated">&lt;code&gt;from&lt;/code&gt; -将在动画的开始被应用的起始CSS样式（一个键/值对象）。</target>
        </trans-unit>
        <trans-unit id="0f08eed1fd3b2d8e38851e3cf3f09a5940040718" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;full&lt;/code&gt; &amp;ndash; &lt;code&gt;{string}&lt;/code&gt; &amp;ndash; Full version string, such as &quot;0.9.18&quot;.</source>
          <target state="translated">&lt;code&gt;full&lt;/code&gt; &amp;ndash; &lt;code&gt;{string}&lt;/code&gt; &amp;ndash;完整版本的字符串，例如&amp;ldquo; 0.9.18&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="429d93bd0d17f08b0e40c3d6da80921b6aaa0529" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;function()&lt;/code&gt;&lt;code&gt;Array.&amp;lt;(string|function())&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;function()&lt;/code&gt;&lt;code&gt;Array.&amp;lt;(string|function())&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8381cd528c610c6de08afd482276f0dfb52b0986" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;function()&lt;/code&gt;&lt;code&gt;Array&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;function()&lt;/code&gt;&lt;code&gt;Array&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="861f0cd9e655adce6cb03c08c08c4778fdf53e44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;function()&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;function()&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a594959a16a19ad965cfd1447521b9bd7209cd2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;function()&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;&lt;code&gt;Array.&amp;lt;(function()|string)&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;function()&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;&lt;code&gt;Array.&amp;lt;(function()|string)&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c73e01ceae203cf62e3b98ca7cc2b8a116d66429" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;function(actual, expected)&lt;/code&gt;: The function will be given the object value and the predicate value to compare and should return true if both values should be considered equal.</source>
          <target state="translated">&lt;code&gt;function(actual, expected)&lt;/code&gt; ：将为该函数提供要比较的对象值和谓词值，如果两个值均应相等，则应返回true。</target>
        </trans-unit>
        <trans-unit id="2e939e5d6fafeda79432f990ec440682a26aa0bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;function(actual, expected)&lt;/code&gt;&lt;code&gt;true&lt;/code&gt;&lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;function(actual, expected)&lt;/code&gt; &lt;code&gt;true&lt;/code&gt; &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3d02087652931d4c5d085fe407dc171f28f1a795" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;function(scope)&lt;/code&gt;: called with current &lt;code&gt;scope&lt;/code&gt; as a parameter.</source>
          <target state="translated">&lt;code&gt;function(scope)&lt;/code&gt; ：使用当前 &lt;code&gt;scope&lt;/code&gt; 作为参数调用。</target>
        </trans-unit>
        <trans-unit id="60006b86642dc851fcc3621291570c38987718c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;function(scope)&lt;/code&gt;: execute the function with current &lt;code&gt;scope&lt;/code&gt; parameter.</source>
          <target state="translated">&lt;code&gt;function(scope)&lt;/code&gt; ：使用当前 &lt;code&gt;scope&lt;/code&gt; 参数执行函数。</target>
        </trans-unit>
        <trans-unit id="b153cfbbf06d8df129cb96359e83362f139fb3b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;function(scope)&lt;/code&gt;: execute the function with the current &lt;code&gt;scope&lt;/code&gt; parameter.</source>
          <target state="translated">&lt;code&gt;function(scope)&lt;/code&gt; ：使用当前 &lt;code&gt;scope&lt;/code&gt; 参数执行函数。</target>
        </trans-unit>
        <trans-unit id="0967d7e554075748b1944a27ac0389d3dd643754" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;function(value, index, array)&lt;/code&gt;: A predicate function can be used to write arbitrary filters. The function is called for each element of the array, with the element, its index, and the entire array itself as arguments.</source>
          <target state="translated">&lt;code&gt;function(value, index, array)&lt;/code&gt; ：谓词函数可用于编写任意过滤器。将针对数组的每个元素调用该函数，并将该元素，其索引以及整个数组本身作为参数。</target>
        </trans-unit>
        <trans-unit id="3d64053a6a9ed65253ec2d901dd56bd923a48f2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;function&lt;/code&gt;: Takes the url as a parameter and returns a map of attributes</source>
          <target state="translated">&lt;code&gt;function&lt;/code&gt; ：将URL作为参数并返回属性映射</target>
        </trans-unit>
        <trans-unit id="efa031cfa23b0b607e7f6ba7af5f9f7710e28189" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;futureParentElement&lt;/code&gt; (optional):</source>
          <target state="translated">&lt;code&gt;futureParentElement&lt;/code&gt; （可选）：</target>
        </trans-unit>
        <trans-unit id="bc0e430ebede72ce3a8ab587ceffff6a5ea51b3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;futureParentElement&lt;/code&gt; - defines the parent to which the &lt;code&gt;cloneAttachFn&lt;/code&gt; will add the cloned elements; only needed for transcludes that are allowed to contain non HTML elements (e.g. SVG elements). See also the &lt;code&gt;directive.controller&lt;/code&gt; property.</source>
          <target state="translated">&lt;code&gt;futureParentElement&lt;/code&gt; - defines the parent to which the &lt;code&gt;cloneAttachFn&lt;/code&gt; will add the cloned elements; only needed for transcludes that are allowed to contain non HTML elements (e.g. SVG elements). See also the &lt;code&gt;directive.controller&lt;/code&gt; property.</target>
        </trans-unit>
        <trans-unit id="c57584699f6586aaf11a26f27af27a0d67af5ec6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;futureParentElement&lt;/code&gt; - defines the parent to which the &lt;code&gt;cloneAttachFn&lt;/code&gt; will add the cloned elements; only needed for transcludes that are allowed to contain non html elements (e.g. SVG elements). See also the directive.controller property.</source>
          <target state="translated">&lt;code&gt;futureParentElement&lt;/code&gt; -定义 &lt;code&gt;cloneAttachFn&lt;/code&gt; 将添加克隆元素的父对象；仅适用于允许包含非html元素（例如SVG元素）的包含。另请参见directive.controller属性。</target>
        </trans-unit>
        <trans-unit id="66a2863ff76ff053c0a7ebffd44f1470a3d8cbbf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getterSetter&lt;/code&gt;: boolean value which determines whether or not to treat functions bound to &lt;code&gt;ngModel&lt;/code&gt; as getters/setters.</source>
          <target state="translated">&lt;code&gt;getterSetter&lt;/code&gt; ：布尔值，确定是否将绑定到 &lt;code&gt;ngModel&lt;/code&gt; 的函数视为getter / setter。</target>
        </trans-unit>
        <trans-unit id="18ec400771d4a3173ba604fbb4cae452e107bb97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;group&lt;/code&gt;: The result of this expression will be used to group options using the &lt;code&gt;&amp;lt;optgroup&amp;gt;&lt;/code&gt; DOM element.</source>
          <target state="translated">&lt;code&gt;group&lt;/code&gt; ：此表达式的结果将用于使用 &lt;code&gt;&amp;lt;optgroup&amp;gt;&lt;/code&gt; DOM元素对选项进行分组。</target>
        </trans-unit>
        <trans-unit id="5d59607a4e244c3df8099700f52374f93d71b26e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;html
&amp;lt;div ng-click=&quot;toggleMenu()&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt; Becomes: &lt;code&gt;html
&amp;lt;div ng-click=&quot;toggleMenu()&quot; tabindex=&quot;0&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;html &amp;lt;div ng-click=&quot;toggleMenu()&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt; 变为： &lt;code&gt;html &amp;lt;div ng-click=&quot;toggleMenu()&quot; tabindex=&quot;0&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c37c7a29e99c9be1c459c31a96e949c6bd2ce0a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;html&lt;/code&gt; - All root nodes in the template are HTML. Root nodes may also be top-level elements such as &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;math&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;html&lt;/code&gt; -模板中的所有根节点均为HTML。根节点也可以是顶级元素，例如 &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; 或 &lt;code&gt;&amp;lt;math&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ce59e0c7aa1bf537d0eac6b5076eab2b8e4f576b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;htmlElements&lt;/code&gt;: A list of elements (tag names) to extend the current list of safe HTML elements. HTML elements considered safe will not be removed during sanitization. All other elements will be stripped off.</source>
          <target state="translated">&lt;code&gt;htmlElements&lt;/code&gt; ：元素列表（标记名称），用于扩展当前安全HTML元素列表。认为安全的HTML元素在清理过程中不会删除。所有其他元素将被剥离。</target>
        </trans-unit>
        <trans-unit id="4db3031979133d5aad6b57a0494714b42722b3f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;htmlVoidElements&lt;/code&gt;: This is similar to &lt;code&gt;htmlElements&lt;/code&gt;, but marks the elements as &quot;void elements&quot; (similar to HTML &lt;a href=&quot;https://rawgit.com/w3c/html/html5.1-2/single-page.html#void-elements&quot;&gt;void elements&lt;/a&gt;). These elements have no end tag and cannot have content.</source>
          <target state="translated">&lt;code&gt;htmlVoidElements&lt;/code&gt; ：这类似于 &lt;code&gt;htmlElements&lt;/code&gt; ，但是将元素标记为&amp;ldquo; void elements&amp;rdquo;（类似于HTML &lt;a href=&quot;https://rawgit.com/w3c/html/html5.1-2/single-page.html#void-elements&quot;&gt;void elements&lt;/a&gt;）。这些元素没有结束标签，也没有内容。</target>
        </trans-unit>
        <trans-unit id="2069e43f2190b45d9b3869fa1e2eb15aff62f822" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iAttrs&lt;/code&gt; - instance attributes - Normalized list of attributes declared on this element shared between all directive linking functions.</source>
          <target state="translated">&lt;code&gt;iAttrs&lt;/code&gt; -实例属性-在所有指令链接功能之间共享的，在此元素上声明的属性的规范化列表。</target>
        </trans-unit>
        <trans-unit id="c8c214617290bc9ea47b4984c4b2d74f2a1a8726" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iElement&lt;/code&gt; - instance element - The element where the directive is to be used. It is safe to manipulate the children of the element only in &lt;code&gt;postLink&lt;/code&gt; function since the children have already been linked.</source>
          <target state="translated">&lt;code&gt;iElement&lt;/code&gt; -实例元素-使用指令的元素。因为子链接已经被链接，所以仅在 &lt;code&gt;postLink&lt;/code&gt; 函数中操作元素的子链接是安全的。</target>
        </trans-unit>
        <trans-unit id="6cb05d465a8ade9f4fd33816118a84e9542b93f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id&lt;/code&gt; &amp;ndash; &lt;code&gt;{string}&lt;/code&gt; &amp;ndash; locale id formatted as &lt;code&gt;languageId-countryId&lt;/code&gt; (e.g. &lt;code&gt;en-us&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; &amp;ndash; &lt;code&gt;{string}&lt;/code&gt; &amp;ndash;区域设置ID，格式为 &lt;code&gt;languageId-countryId&lt;/code&gt; （例如， &lt;code&gt;en-us&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="bea5664a1b1ff5bb9816dad6a50d3a7173e5f0ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inheritedData()&lt;/code&gt; - same as &lt;code&gt;data()&lt;/code&gt;, but walks up the DOM until a value is found or the top parent element is reached.</source>
          <target state="translated">&lt;code&gt;inheritedData()&lt;/code&gt; -与 &lt;code&gt;data()&lt;/code&gt; 相同，但在DOM上向上移动，直到找到一个值或到达顶级父元素为止。</target>
        </trans-unit>
        <trans-unit id="54369ecdd7ce3497853ff479fc02f0619d9d218c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;injector()&lt;/code&gt; - retrieves the injector of the current element or its parent.</source>
          <target state="translated">&lt;code&gt;injector()&lt;/code&gt; -检索当前元素或其父元素的喷射器。</target>
        </trans-unit>
        <trans-unit id="d4fa2f3230016bd7c502ed311dcddc3400777129" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;isolateScope()&lt;/code&gt; - retrieves an isolate &lt;a href=&quot;../type/%24rootscope.scope&quot;&gt;scope&lt;/a&gt; if one is attached directly to the current element. This getter should be used only on elements that contain a directive which starts a new isolate scope. Calling &lt;code&gt;scope()&lt;/code&gt; on this element always returns the original non-isolate scope. Requires &lt;a href=&quot;../../../guide/production#disabling-debug-data.html&quot;&gt;Debug Data&lt;/a&gt; to be enabled.</source>
          <target state="translated">&lt;code&gt;isolateScope()&lt;/code&gt; - 如果一个隔离&lt;a href=&quot;../type/%24rootscope.scope&quot;&gt;范围&lt;/a&gt;直接附加到当前元素，则检索一个隔离范围。此吸气剂应仅用于包含启动新隔离范围的指令的元素。在此元素上调用 &lt;code&gt;scope()&lt;/code&gt; 始终会返回原始的非隔离范围。需要启用&lt;a href=&quot;../../../guide/production#disabling-debug-data.html&quot;&gt;调试数据&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="39cd0455d2e26701e8c095f43e061f3207660b11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt; &amp;ndash; &lt;code&gt;{string}&lt;/code&gt;: a name of a dependency to be injected into the controller.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; &amp;ndash; &lt;code&gt;{string}&lt;/code&gt; ：要注入控制器的依赖项的名称。</target>
        </trans-unit>
        <trans-unit id="29a05476d5fc83148db1830944b7dd067b7dec10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt;: local variable which will refer to a property name in &lt;code&gt;object&lt;/code&gt; during iteration.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; ：局部变量，它将在迭代期间引用 &lt;code&gt;object&lt;/code&gt; 中的属性名称。</target>
        </trans-unit>
        <trans-unit id="737aeccc3cf0e60e5fcffa55a35383bbe4db5a17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keycode&lt;/code&gt;: &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/KeyboardEvent/keycode&quot;&gt;keyCode&lt;/a&gt; for keyboard events (keydown, keypress, and keyup).</source>
          <target state="translated">&lt;code&gt;keycode&lt;/code&gt; ：键盘事件（keydown，keypress和keyup）的&lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/KeyboardEvent/keycode&quot;&gt;keyCode&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="22cfda562520f61e8f63c1192868802b61203a47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keyframeStyle&lt;/code&gt; - The raw CSS keyframe animation style that will be used (e.g. &lt;code&gt;1s my_animation linear&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;keyframeStyle&lt;/code&gt; -将使用的原始CSS关键帧动画样式（例如 &lt;code&gt;1s my_animation linear&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="80064931c718c82a5aace4967a027aa38a6ca367" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keys&lt;/code&gt;: an array of possible modifier keys (ctrl, alt, shift, meta) for &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/MouseEvent&quot;&gt;MouseEvent&lt;/a&gt; and keyboard events (keydown, keypress, and keyup).</source>
          <target state="translated">&lt;code&gt;keys&lt;/code&gt; ：&lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/MouseEvent&quot;&gt;MouseEvent&lt;/a&gt;和键盘事件（keydown，keypress和keyup）的可能修饰键（ctrl，alt，shift，meta）的数组。</target>
        </trans-unit>
        <trans-unit id="ec2cd5127fbb87bdf09efe118a208a2d37effbf4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;label&lt;/code&gt;: The result of this expression will be the label for &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; element. The &lt;code&gt;expression&lt;/code&gt; will most likely refer to the &lt;code&gt;value&lt;/code&gt; variable (e.g. &lt;code&gt;value.propertyName&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;label&lt;/code&gt; ：此表达式的结果将是 &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; 元素的标签。该 &lt;code&gt;expression&lt;/code&gt; 很可能引用 &lt;code&gt;value&lt;/code&gt; 变量（例如 &lt;code&gt;value.propertyName&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="ef4929818fc2466265fcc001a228ca0451177d95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;label&lt;/code&gt;&lt;strong&gt;&lt;code&gt;disable when&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;disable&lt;/code&gt;&lt;strong&gt;&lt;code&gt;for (&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;key&lt;/code&gt;&lt;strong&gt;&lt;code&gt;,&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;value&lt;/code&gt;&lt;strong&gt;&lt;code&gt;) in&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;object&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;label&lt;/code&gt; &lt;strong&gt; &lt;code&gt;disable when&lt;/code&gt; &lt;/strong&gt; &lt;code&gt;object&lt;/code&gt; &lt;strong&gt; &lt;code&gt;for (&lt;/code&gt; &lt;/strong&gt; &lt;code&gt;key&lt;/code&gt; &lt;strong&gt; &lt;code&gt;,&lt;/code&gt; &lt;/strong&gt; &lt;code&gt;value&lt;/code&gt; &lt;strong&gt; &lt;code&gt;) in&lt;/code&gt; &lt;/strong&gt;标签&lt;strong&gt;时&lt;/strong&gt; &lt;code&gt;disable&lt;/code&gt; &lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ccf117e4340cd0e5c881544794c26e21b3b2c268" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;label&lt;/code&gt;&lt;strong&gt;&lt;code&gt;disable when&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;disable&lt;/code&gt;&lt;strong&gt;&lt;code&gt;for&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;value&lt;/code&gt;&lt;strong&gt;&lt;code&gt;in&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;array&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;label&lt;/code&gt; &lt;strong&gt; &lt;code&gt;disable when&lt;/code&gt; &lt;/strong&gt; &lt;code&gt;disable&lt;/code&gt; &lt;strong&gt; &lt;code&gt;for&lt;/code&gt; &lt;/strong&gt; &lt;code&gt;value&lt;/code&gt; &lt;strong&gt; &lt;code&gt;in&lt;/code&gt; &lt;/strong&gt; &lt;code&gt;array&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9540fd2275cebef3cc8a6a51148e37e52aee1976" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;label&lt;/code&gt;&lt;strong&gt;&lt;code&gt;disable when&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;disable&lt;/code&gt;&lt;strong&gt;&lt;code&gt;for&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;value&lt;/code&gt;&lt;strong&gt;&lt;code&gt;in&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;array&lt;/code&gt;&lt;strong&gt;&lt;code&gt;track by&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;trackexpr&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;label&lt;/code&gt; &lt;strong&gt; &lt;code&gt;disable when&lt;/code&gt; &lt;/strong&gt; &lt;code&gt;disable&lt;/code&gt; &lt;strong&gt; &lt;code&gt;for&lt;/code&gt; &lt;/strong&gt; &lt;code&gt;value&lt;/code&gt; &lt;strong&gt; &lt;code&gt;in&lt;/code&gt; &lt;/strong&gt; &lt;code&gt;array&lt;/code&gt; &lt;strong&gt; &lt;code&gt;track by&lt;/code&gt; &lt;/strong&gt; &lt;code&gt;trackexpr&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="78c2f119da8be4cd5bb9221d33dd05bdedb9b514" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;label&lt;/code&gt;&lt;strong&gt;&lt;code&gt;for (&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;key&lt;/code&gt;&lt;strong&gt;&lt;code&gt;,&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;value&lt;/code&gt;&lt;strong&gt;&lt;code&gt;) in&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;object&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;label&lt;/code&gt; &lt;code&gt;object&lt;/code&gt; &lt;strong&gt; &lt;code&gt;for (&lt;/code&gt; &lt;/strong&gt; &lt;code&gt;key&lt;/code&gt; &lt;strong&gt; &lt;code&gt;,&lt;/code&gt; &lt;/strong&gt; &lt;code&gt;value&lt;/code&gt; &lt;strong&gt; &lt;code&gt;) in&lt;/code&gt; &lt;/strong&gt;标签</target>
        </trans-unit>
        <trans-unit id="150dae485bcdc6fd89a169f94fc804d6cfea8ac5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;label&lt;/code&gt;&lt;strong&gt;&lt;code&gt;for&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;value&lt;/code&gt;&lt;strong&gt;&lt;code&gt;in&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;array&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;label&lt;/code&gt;&lt;strong&gt;&lt;code&gt;for&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;value&lt;/code&gt;&lt;strong&gt;&lt;code&gt;in&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;array&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1cac922f89af3031718777be214cb2254862b957" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;label&lt;/code&gt;&lt;strong&gt;&lt;code&gt;for&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;value&lt;/code&gt;&lt;strong&gt;&lt;code&gt;in&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;array&lt;/code&gt; | orderBy:&lt;code&gt;orderexpr&lt;/code&gt;&lt;strong&gt;&lt;code&gt;track by&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;trackexpr&lt;/code&gt; (for including a filter with &lt;code&gt;track by&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;label&lt;/code&gt; &lt;strong&gt; &lt;code&gt;for&lt;/code&gt; &lt;/strong&gt; &lt;code&gt;value&lt;/code&gt; &lt;strong&gt; &lt;code&gt;in&lt;/code&gt; &lt;/strong&gt; &lt;code&gt;array&lt;/code&gt; | ORDERBY： &lt;code&gt;orderexpr&lt;/code&gt; &lt;strong&gt; &lt;code&gt;track by&lt;/code&gt; &lt;/strong&gt; &lt;code&gt;trackexpr&lt;/code&gt; （对于包括与过滤器 &lt;code&gt;track by&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="239b083c5563ddec531d240e282fa03ea0d12742" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;label&lt;/code&gt;&lt;strong&gt;&lt;code&gt;group by&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;group&lt;/code&gt;&lt;strong&gt;&lt;code&gt;for (&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;key&lt;/code&gt;&lt;strong&gt;&lt;code&gt;,&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;value&lt;/code&gt;&lt;strong&gt;&lt;code&gt;) in&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;object&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;label&lt;/code&gt; &lt;strong&gt; &lt;code&gt;group by&lt;/code&gt; &lt;/strong&gt; &lt;code&gt;group&lt;/code&gt; &lt;strong&gt; &lt;code&gt;for (&lt;/code&gt; &lt;/strong&gt; &lt;code&gt;key&lt;/code&gt; &lt;strong&gt; &lt;code&gt;,&lt;/code&gt; &lt;/strong&gt; &lt;code&gt;value&lt;/code&gt; &lt;strong&gt; &lt;code&gt;) in&lt;/code&gt; &lt;/strong&gt; &lt;code&gt;object&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2d15e5a05956b00117a99d74f86391f9b3b03391" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;label&lt;/code&gt;&lt;strong&gt;&lt;code&gt;group by&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;group&lt;/code&gt;&lt;strong&gt;&lt;code&gt;for&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;value&lt;/code&gt;&lt;strong&gt;&lt;code&gt;in&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;array&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;label&lt;/code&gt; &lt;strong&gt; &lt;code&gt;group by&lt;/code&gt; &lt;/strong&gt; &lt;code&gt;group&lt;/code&gt; &lt;strong&gt; &lt;code&gt;for&lt;/code&gt; &lt;/strong&gt; &lt;code&gt;value&lt;/code&gt; &lt;strong&gt; &lt;code&gt;in&lt;/code&gt; &lt;/strong&gt; &lt;code&gt;array&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5b744685d4c016beb0d171f357e6e3a2918f6cad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;label&lt;/code&gt;&lt;strong&gt;&lt;code&gt;group by&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;group&lt;/code&gt;&lt;strong&gt;&lt;code&gt;for&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;value&lt;/code&gt;&lt;strong&gt;&lt;code&gt;in&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;array&lt;/code&gt;&lt;strong&gt;&lt;code&gt;track by&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;trackexpr&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;label&lt;/code&gt; &lt;strong&gt; &lt;code&gt;group by&lt;/code&gt; &lt;/strong&gt; &lt;code&gt;group&lt;/code&gt; &lt;strong&gt; &lt;code&gt;for&lt;/code&gt; &lt;/strong&gt; &lt;code&gt;array&lt;/code&gt; &lt;code&gt;value&lt;/code&gt; &lt;strong&gt; &lt;code&gt;in&lt;/code&gt; &lt;/strong&gt;标签&lt;strong&gt;分组，&lt;/strong&gt;&lt;strong&gt; &lt;code&gt;track by&lt;/code&gt; &lt;/strong&gt; &lt;code&gt;trackexpr&lt;/code&gt; 进行&lt;strong&gt;跟踪&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9606e1cb604162fc76bc7af0a34d91ea9e2e1be4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;largecode: code/with/slashes&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;largecode: code/with/slashes&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7de6cd206a6029c07ba144786966d13d325a8834" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;link&lt;/code&gt; takes a function with the following signature, &lt;code&gt;function link(scope, element, attrs, controller, transcludeFn) { ... }&lt;/code&gt;, where:</source>
          <target state="translated">&lt;code&gt;link&lt;/code&gt; 采用具有以下签名的 &lt;code&gt;function link(scope, element, attrs, controller, transcludeFn) { ... }&lt;/code&gt; ，函数link（scope，element，attrs，controller，transcludeFn）{...}，其中：</target>
        </trans-unit>
        <trans-unit id="91502fccc5972bb347507763a06927869d965f95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;literal&lt;/code&gt; &amp;ndash; &lt;code&gt;{boolean}&lt;/code&gt; &amp;ndash; whether the expression's top-level node is a JavaScript literal.</source>
          <target state="translated">&lt;code&gt;literal&lt;/code&gt; &amp;ndash; &lt;code&gt;{boolean}&lt;/code&gt; &amp;ndash;表达式的顶级节点是否为JavaScript文字。</target>
        </trans-unit>
        <trans-unit id="a99b524479aede3fd79e80331f756f1478f0b5c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;locals&lt;/code&gt; &amp;ndash; &lt;code&gt;{object=}&lt;/code&gt; &amp;ndash; local variables context object, useful for overriding values in &lt;code&gt;context&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;locals&lt;/code&gt; &amp;ndash; &lt;code&gt;{object=}&lt;/code&gt; &amp;ndash;局部变量context对象，用于覆盖 &lt;code&gt;context&lt;/code&gt; 中的值。</target>
        </trans-unit>
        <trans-unit id="590bc891c9dd13d8306c6c63406770789ba9332c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;locals&lt;/code&gt;: A map of locals which is used by &lt;a href=&quot;../../ng/service/%24controller&quot;&gt;$controller&lt;/a&gt; service for controller instantiation. The &lt;code&gt;locals&lt;/code&gt; contain the resolved values of the &lt;code&gt;resolve&lt;/code&gt; map. Additionally the &lt;code&gt;locals&lt;/code&gt; also contain:</source>
          <target state="translated">&lt;code&gt;locals&lt;/code&gt; ：&lt;a href=&quot;../../ng/service/%24controller&quot;&gt;$ controller&lt;/a&gt;服务用于控制器实例化的本地映射。在 &lt;code&gt;locals&lt;/code&gt; 包含的解析值 &lt;code&gt;resolve&lt;/code&gt; 图。此外， &lt;code&gt;locals&lt;/code&gt; 还包含：</target>
        </trans-unit>
        <trans-unit id="3b9fec05c81f4409175b6aff6e900595f1b83faa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;log&lt;/code&gt;: Sometimes it is desirable to test that an error is thrown, for this case the &lt;code&gt;log&lt;/code&gt; mode stores an array of errors in &lt;code&gt;$exceptionHandler.errors&lt;/code&gt;, to allow later assertion of them. See &lt;a href=&quot;../service/%24log#assertEmpty.html&quot;&gt;assertEmpty()&lt;/a&gt; and &lt;a href=&quot;../service/%24log#reset.html&quot;&gt;reset()&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;log&lt;/code&gt; ：有时需要测试是否抛出了错误，在这种情况下， &lt;code&gt;log&lt;/code&gt; 模式将错误数组存储在 &lt;code&gt;$exceptionHandler.errors&lt;/code&gt; ，以允许以后声明它们。参见&lt;a href=&quot;../service/%24log#assertEmpty.html&quot;&gt;assertEmpty（）&lt;/a&gt;和&lt;a href=&quot;../service/%24log#reset.html&quot;&gt;reset（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="23d705fb9a5b721b08a150808b4a91f33ed38caf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;major&lt;/code&gt; &amp;ndash; &lt;code&gt;{number}&lt;/code&gt; &amp;ndash; Major version number, such as &quot;0&quot;.</source>
          <target state="translated">&lt;code&gt;major&lt;/code&gt; &amp;ndash; &lt;code&gt;{number}&lt;/code&gt; &amp;ndash;主版本号，例如&amp;ldquo; 0&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="b4cd6c73f46311daa402dd24b20f4410838cb724" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;math&lt;/code&gt; - The root nodes in the template are MathML elements (excluding &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;math&lt;/code&gt; -模板中的根节点是MathML元素（ &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; 除外）。</target>
        </trans-unit>
        <trans-unit id="f2095f8112312be3562bd13bd8bc8d9296995b41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;minor&lt;/code&gt; &amp;ndash; &lt;code&gt;{number}&lt;/code&gt; &amp;ndash; Minor version number, such as &quot;9&quot;.</source>
          <target state="translated">&lt;code&gt;minor&lt;/code&gt; &amp;ndash; &lt;code&gt;{number}&lt;/code&gt; &amp;ndash;次要版本号，例如&amp;ldquo; 9&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="125783d49311a4a4654af4659c07419f3603ac0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;move&lt;/code&gt; is called on &lt;code&gt;mousemove&lt;/code&gt;, &lt;code&gt;touchmove&lt;/code&gt; and &lt;code&gt;pointermove&lt;/code&gt; after the above logic has determined that a swipe is in progress.</source>
          <target state="translated">&lt;code&gt;move&lt;/code&gt; 在上述逻辑确定正在进行滑动之后，在 &lt;code&gt;mousemove&lt;/code&gt; ， &lt;code&gt;touchmove&lt;/code&gt; 和 &lt;code&gt;pointermove&lt;/code&gt; 上调用move。</target>
        </trans-unit>
        <trans-unit id="e5ac219119a3637cf6a6df19977f057805eea9b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; - &lt;code&gt;{string}&lt;/code&gt;: name of the event.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; - &lt;code&gt;{string}&lt;/code&gt; ：事件的名称。</target>
        </trans-unit>
        <trans-unit id="975e32cbc82da131c161356b29799f7ce94c31a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; - the name used to identify the &lt;strong&gt;Route Definition&lt;/strong&gt; when generating links</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; -用于标识名称&lt;strong&gt;路由定义&lt;/strong&gt;生成链接时</target>
        </trans-unit>
        <trans-unit id="c188d7646687abc76ecbb191336ba8bc2780b258" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;newVal&lt;/code&gt; contains the current value of the &lt;code&gt;watchExpression&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;newVal&lt;/code&gt; 包含的当前值 &lt;code&gt;watchExpression&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b80cf26a7729355a695d3b19b43c96415742c475" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ng-binding&lt;/code&gt; CSS class</source>
          <target state="translated">&lt;code&gt;ng-binding&lt;/code&gt; CSS类</target>
        </trans-unit>
        <trans-unit id="30a226ee9de2698e4ec87aa4474f0b6af7267eeb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ng-dirty&lt;/code&gt; is set if the form is dirty.</source>
          <target state="translated">&lt;code&gt;ng-dirty&lt;/code&gt; 如果表单脏了，则设置ng- dirty。</target>
        </trans-unit>
        <trans-unit id="0beddb7582ff5fa7f1e6d0c85f363447c0a19ec5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ng-dirty&lt;/code&gt;: the control has been interacted with</source>
          <target state="translated">&lt;code&gt;ng-dirty&lt;/code&gt; ：控件已与</target>
        </trans-unit>
        <trans-unit id="c21e8f2f3c54b50e5e555c735dda37042ac64711" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ng-empty&lt;/code&gt;: the view does not contain a value or the value is deemed &quot;empty&quot;, as defined by the &lt;a href=&quot;../type/ngmodel.ngmodelcontroller#%24isEmpty.html&quot;&gt;&lt;code&gt;ngModel.NgModelController&lt;/code&gt;&lt;/a&gt; method</source>
          <target state="translated">&lt;code&gt;ng-empty&lt;/code&gt; ：视图不包含值，或者该值被视为&lt;a href=&quot;../type/ngmodel.ngmodelcontroller#%24isEmpty.html&quot;&gt; &lt;code&gt;ngModel.NgModelController&lt;/code&gt; &lt;/a&gt;方法定义的&amp;ldquo;空&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="b99ef4af22c9fb6a451fe884e40a7931a0f322c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ng-invalid-[key]&lt;/code&gt;: for each invalid key added by &lt;code&gt;$setValidity&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ng-invalid-[key]&lt;/code&gt; ：对于 &lt;code&gt;$setValidity&lt;/code&gt; setValidity添加的每个无效密钥</target>
        </trans-unit>
        <trans-unit id="923f282ef8365be30f91981d1d1c3973067c3265" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ng-invalid&lt;/code&gt; is set if the form is invalid.</source>
          <target state="translated">&lt;code&gt;ng-invalid&lt;/code&gt; 如果表单无效，则设置ng- invalid。</target>
        </trans-unit>
        <trans-unit id="50b1d37cead127adfc2ab3b05545ac1ea90b33f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ng-invalid&lt;/code&gt;: the model is invalid</source>
          <target state="translated">&lt;code&gt;ng-invalid&lt;/code&gt; ：模型无效</target>
        </trans-unit>
        <trans-unit id="b21acf7875fdec254e1fafd418785479dec919a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ng-not-empty&lt;/code&gt;: the view contains a non-empty value</source>
          <target state="translated">&lt;code&gt;ng-not-empty&lt;/code&gt; ：视图包含一个非空值</target>
        </trans-unit>
        <trans-unit id="f49e7d0c87ab98e2baaf973237fca884ffa1864d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ng-pending&lt;/code&gt; is set if the form is pending.</source>
          <target state="translated">&lt;code&gt;ng-pending&lt;/code&gt; 如果表单待处理，则设置ng- pending。</target>
        </trans-unit>
        <trans-unit id="8c29be0dc25d3a62897cadf8b0d8dfb5fe57f1d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ng-pending&lt;/code&gt;: any &lt;code&gt;$asyncValidators&lt;/code&gt; are unfulfilled</source>
          <target state="translated">&lt;code&gt;ng-pending&lt;/code&gt; ：任何 &lt;code&gt;$asyncValidators&lt;/code&gt; 未实现</target>
        </trans-unit>
        <trans-unit id="4f4607fe86906a3185b79609205eea1facc90022" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ng-pristine&lt;/code&gt; is set if the form is pristine.</source>
          <target state="translated">&lt;code&gt;ng-pristine&lt;/code&gt; 如果形式为原始，则设置ng- pristine。</target>
        </trans-unit>
        <trans-unit id="9fdcbae8a8c9841884cbdf71bf988ee44392e34e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ng-pristine&lt;/code&gt;: the control hasn't been interacted with yet</source>
          <target state="translated">&lt;code&gt;ng-pristine&lt;/code&gt; ：控件尚未与之交互</target>
        </trans-unit>
        <trans-unit id="3be9f306b9daa956aa3d3b9d3883fb975708599c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ng-scope&lt;/code&gt; and &lt;code&gt;ng-isolated-scope&lt;/code&gt; CSS classes</source>
          <target state="translated">&lt;code&gt;ng-scope&lt;/code&gt; 和 &lt;code&gt;ng-isolated-scope&lt;/code&gt; CSS类</target>
        </trans-unit>
        <trans-unit id="dc36091ac4203dbce713248aab1bf8d32d5e9db7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ng-submitted&lt;/code&gt; is set if the form was submitted.</source>
          <target state="translated">&lt;code&gt;ng-submitted&lt;/code&gt; 如果表单已提交，则设置ng- submitted。</target>
        </trans-unit>
        <trans-unit id="ca2b0935cdfc2eea8341f1300df9e86268c5004d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ng-touched&lt;/code&gt;: the control has been blurred</source>
          <target state="translated">&lt;code&gt;ng-touched&lt;/code&gt; ：控件已模糊</target>
        </trans-unit>
        <trans-unit id="1c2bfe48281f36a21e5d7616cbe01f403bd984a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ng-untouched&lt;/code&gt;: the control hasn't been blurred</source>
          <target state="translated">&lt;code&gt;ng-untouched&lt;/code&gt; ：控件尚未模糊</target>
        </trans-unit>
        <trans-unit id="de3dba15ce0defd0d5547c5c2c7dbd6a646ba9e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ng-valid-[key]&lt;/code&gt;: for each valid key added by &lt;code&gt;$setValidity&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ng-valid-[key]&lt;/code&gt; ：对于 &lt;code&gt;$setValidity&lt;/code&gt; 添加的每个有效密钥</target>
        </trans-unit>
        <trans-unit id="2ac31fd00954301a4c22330591645fcac2503d6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ng-valid&lt;/code&gt; is set if the form is valid.</source>
          <target state="translated">&lt;code&gt;ng-valid&lt;/code&gt; 如果表单有效，则设置ng- valid。</target>
        </trans-unit>
        <trans-unit id="b52a7eafe9685920d2d321993b552754176cff7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ng-valid&lt;/code&gt;: the model is valid</source>
          <target state="translated">&lt;code&gt;ng-valid&lt;/code&gt; ：模型有效</target>
        </trans-unit>
        <trans-unit id="9e6b3e2c83e8513a75336e33c29508b177e2f75c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngApp&lt;/code&gt; is the easiest, and most common way to bootstrap an application.</source>
          <target state="translated">&lt;code&gt;ngApp&lt;/code&gt; 是引导应用程序的最简单，最常见的方法。</target>
        </trans-unit>
        <trans-unit id="f4e9b3e723a2653596698d787fd8c138acff8b86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngCloak&lt;/code&gt; works in cooperation with the following css rule embedded within &lt;code&gt;angular.js&lt;/code&gt; and &lt;code&gt;angular.min.js&lt;/code&gt;. For CSP mode please add &lt;code&gt;angular-csp.css&lt;/code&gt; to your html file (see &lt;a href=&quot;ngcsp&quot;&gt;ngCsp&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;ngCloak&lt;/code&gt; 与以下嵌入在 &lt;code&gt;angular.js&lt;/code&gt; 和 &lt;code&gt;angular.min.js&lt;/code&gt; 中的 css规则协同工作。对于CSP模式，请在您的html文件中添加 &lt;code&gt;angular-csp.css&lt;/code&gt; （请参阅&lt;a href=&quot;ngcsp&quot;&gt;ngCsp&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="e1344d983ebcb1500e54cc9032d0098ae949c0cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngIf&lt;/code&gt; differs from &lt;code&gt;ngShow&lt;/code&gt; and &lt;code&gt;ngHide&lt;/code&gt; in that &lt;code&gt;ngIf&lt;/code&gt; completely removes and recreates the element in the DOM rather than changing its visibility via the &lt;code&gt;display&lt;/code&gt; css property. A common case when this difference is significant is when using css selectors that rely on an element's position within the DOM, such as the &lt;code&gt;:first-child&lt;/code&gt; or &lt;code&gt;:last-child&lt;/code&gt; pseudo-classes.</source>
          <target state="translated">&lt;code&gt;ngIf&lt;/code&gt; 不同于 &lt;code&gt;ngShow&lt;/code&gt; 和 &lt;code&gt;ngHide&lt;/code&gt; 在于 &lt;code&gt;ngIf&lt;/code&gt; 完全删除并重新创建元件在DOM而不是通过改变其可见度 &lt;code&gt;display&lt;/code&gt; 的CSS特性。这种差异很明显的常见情况是使用依赖于DOM中元素位置的css选择器，例如 &lt;code&gt;:first-child&lt;/code&gt; 或 &lt;code&gt;:last-child&lt;/code&gt; 伪类。</target>
        </trans-unit>
        <trans-unit id="8f2b1a8c7c74f4a72b84008810d60aae6876ec38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngMaxlength&lt;/code&gt; does not set the &lt;code&gt;maxlength&lt;/code&gt; attribute and therefore HTML5 constraint validation is not available.</source>
          <target state="translated">&lt;code&gt;ngMaxlength&lt;/code&gt; 未设置 &lt;code&gt;maxlength&lt;/code&gt; 属性，因此HTML5约束验证不可用。</target>
        </trans-unit>
        <trans-unit id="db13a53844c35f39db15d827af72f1f4dd5faf15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngMessage&lt;/code&gt; is a directive with the purpose to show and hide a particular message. For &lt;code&gt;ngMessage&lt;/code&gt; to operate, a parent &lt;code&gt;ngMessages&lt;/code&gt; directive on a parent DOM element must be situated since it determines which messages are visible based on the state of the provided key/value map that &lt;code&gt;ngMessages&lt;/code&gt; listens on.</source>
          <target state="translated">&lt;code&gt;ngMessage&lt;/code&gt; 是用于显示和隐藏特定消息的指令。为了使 &lt;code&gt;ngMessage&lt;/code&gt; 运行，必须放置父DOM元素上的父 &lt;code&gt;ngMessages&lt;/code&gt; 指令，因为它根据 &lt;code&gt;ngMessages&lt;/code&gt; 侦听的提供的键/值映射的状态来确定哪些消息可见。</target>
        </trans-unit>
        <trans-unit id="f911f404708ca43b90710b63367d9f7e096d76ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngMessageDefault&lt;/code&gt; is a directive with the purpose to show and hide a default message for &lt;a href=&quot;directive/ngmessages&quot;&gt;&lt;code&gt;ngMessages&lt;/code&gt;&lt;/a&gt;, when none of provided messages matches.</source>
          <target state="translated">&lt;code&gt;ngMessageDefault&lt;/code&gt; 是一个指令，目的是在没有提供的消息匹配时显示和隐藏&lt;a href=&quot;directive/ngmessages&quot;&gt; &lt;code&gt;ngMessages&lt;/code&gt; &lt;/a&gt;的默认消息。</target>
        </trans-unit>
        <trans-unit id="d1a80e58641d77464a243d33a8baca83ef0e4e76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngMessageDefault&lt;/code&gt; is a directive with the purpose to show and hide a default message for &lt;a href=&quot;ngmessages&quot;&gt;&lt;code&gt;ngMessages&lt;/code&gt;&lt;/a&gt;, when none of provided messages matches.</source>
          <target state="translated">&lt;code&gt;ngMessageDefault&lt;/code&gt; 是一个指令，目的是在没有提供的消息匹配时显示和隐藏&lt;a href=&quot;ngmessages&quot;&gt; &lt;code&gt;ngMessages&lt;/code&gt; &lt;/a&gt;的默认消息。</target>
        </trans-unit>
        <trans-unit id="c3b74d6dd89600441fe433653f134a4402b67e4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngMessageDefault&lt;/code&gt; is a directive with the purpose to show and hide a default message for &lt;a href=&quot;ngmessages/directive/ngmessages&quot;&gt;&lt;code&gt;ngMessages&lt;/code&gt;&lt;/a&gt;, when none of provided messages matches.</source>
          <target state="translated">&lt;code&gt;ngMessageDefault&lt;/code&gt; 是一个指令，目的是在没有提供的消息匹配时显示和隐藏&lt;a href=&quot;ngmessages/directive/ngmessages&quot;&gt; &lt;code&gt;ngMessages&lt;/code&gt; &lt;/a&gt;的默认消息。</target>
        </trans-unit>
        <trans-unit id="2bfa15ead3e460ba86fff00e38b0a131a1e70400" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngMessageExp&lt;/code&gt; is the same as &lt;a href=&quot;directive/ngmessage&quot;&gt;&lt;code&gt;ngMessage&lt;/code&gt;&lt;/a&gt;, but instead of a static value, it accepts an expression to be evaluated for the message key.</source>
          <target state="translated">&lt;code&gt;ngMessageExp&lt;/code&gt; 与&lt;a href=&quot;directive/ngmessage&quot;&gt; &lt;code&gt;ngMessage&lt;/code&gt; &lt;/a&gt;相同，但是它代替静态值，它接受要为消息键求值的表达式。</target>
        </trans-unit>
        <trans-unit id="faa25613ff7585c31d67851fd46b326faf503062" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngMessageExp&lt;/code&gt; is the same as &lt;a href=&quot;ngmessage&quot;&gt;&lt;code&gt;ngMessage&lt;/code&gt;&lt;/a&gt;, but instead of a static value, it accepts an expression to be evaluated for the message key.</source>
          <target state="translated">&lt;code&gt;ngMessageExp&lt;/code&gt; 与&lt;a href=&quot;ngmessage&quot;&gt; &lt;code&gt;ngMessage&lt;/code&gt; &lt;/a&gt;相同，但是它代替静态值，它接受要为消息键求值的表达式。</target>
        </trans-unit>
        <trans-unit id="7982442a9c2318a173836d1c521123cc36b990fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngMessageExp&lt;/code&gt; is the same as &lt;a href=&quot;ngmessages/directive/ngmessage&quot;&gt;&lt;code&gt;ngMessage&lt;/code&gt;&lt;/a&gt;, but instead of a static value, it accepts an expression to be evaluated for the message key.</source>
          <target state="translated">&lt;code&gt;ngMessageExp&lt;/code&gt; 与&lt;a href=&quot;ngmessages/directive/ngmessage&quot;&gt; &lt;code&gt;ngMessage&lt;/code&gt; &lt;/a&gt;相同，但是它代替静态值，它接受要为消息键求值的表达式。</target>
        </trans-unit>
        <trans-unit id="dcb05c000aa291e242ba387df0d24ae198e50e66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngMessages&lt;/code&gt; is a directive that is designed to show and hide messages based on the state of a key/value object that it listens on. The directive itself complements error message reporting with the &lt;code&gt;ngModel&lt;/code&gt; $error object (which stores a key/value state of validation errors).</source>
          <target state="translated">&lt;code&gt;ngMessages&lt;/code&gt; 是一种指令，旨在根据其侦听的键/值对象的状态显示和隐藏消息。伪指令本身通过 &lt;code&gt;ngModel&lt;/code&gt; $ error对象（存储验证错误的键/值状态）来补充错误消息报告。</target>
        </trans-unit>
        <trans-unit id="46cec3ebcc130190a8bf4f882325c13fc47490c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngMessages&lt;/code&gt; manages the state of internal messages within its container element. The internal messages use the &lt;code&gt;ngMessage&lt;/code&gt; directive and will be inserted/removed from the page depending on if they're present within the key/value object. By default, only one message will be displayed at a time and this depends on the prioritization of the messages within the template. (This can be changed by using the &lt;code&gt;ng-messages-multiple&lt;/code&gt; or &lt;code&gt;multiple&lt;/code&gt; attribute on the directive container.)</source>
          <target state="translated">&lt;code&gt;ngMessages&lt;/code&gt; 在其容器元素内管理内部消息的状态。内部消息使用 &lt;code&gt;ngMessage&lt;/code&gt; 指令，并将根据其是否存在于键/值对象中而从页面中插入/删除。默认情况下，一次仅显示一条消息，这取决于模板中消息的优先级。 （这可以通过在指令容器上使用 &lt;code&gt;ng-messages-multiple&lt;/code&gt; 或 &lt;code&gt;multiple&lt;/code&gt; 属性来更改。）</target>
        </trans-unit>
        <trans-unit id="95207d1e12738a0a7551521de5b64fb2906efa0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngMessagesInclude&lt;/code&gt; is a directive with the purpose to import existing ngMessage template code from a remote template and place the downloaded template code into the exact spot that the ngMessagesInclude directive is placed within the ngMessages container. This allows for a series of pre-defined messages to be reused and also allows for the developer to determine what messages are overridden due to the placement of the ngMessagesInclude directive.</source>
          <target state="translated">&lt;code&gt;ngMessagesInclude&lt;/code&gt; 是一个指令，旨在从远程模板导入现有的ngMessage模板代码，并将下载的模板代码放入ngMessagesInclude指令放置在ngMessages容器中的确切位置。这允许重用一系列预定义的消息，并且还允许开发人员确定由于放置ngMessagesInclude指令而覆盖了哪些消息。</target>
        </trans-unit>
        <trans-unit id="74d56cd06c7ea109502b88c81cf5c7eff74988e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngMinlength&lt;/code&gt; does not set the &lt;code&gt;minlength&lt;/code&gt; attribute and therefore HTML5 constraint validation is not available.</source>
          <target state="translated">&lt;code&gt;ngMinlength&lt;/code&gt; 不设置 &lt;code&gt;minlength&lt;/code&gt; 属性，因此HTML5约束验证不可用。</target>
        </trans-unit>
        <trans-unit id="ef379b2bdb17a6aa70d0e2a234446548bf8838f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngModel&lt;/code&gt; is responsible for:</source>
          <target state="translated">&lt;code&gt;ngModel&lt;/code&gt; 负责：</target>
        </trans-unit>
        <trans-unit id="54ad428c19612f8cc1afb064726c65e13153f3e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngModelOptions&lt;/code&gt; considers every event that is not listed in &lt;code&gt;updateOn&lt;/code&gt; a &quot;default&quot; event, since different control types use different default events.</source>
          <target state="translated">&lt;code&gt;ngModelOptions&lt;/code&gt; 将未在 &lt;code&gt;updateOn&lt;/code&gt; 中列出的每个事件都视为&amp;ldquo;默认&amp;rdquo;事件，因为不同的控件类型使用不同的默认事件。</target>
        </trans-unit>
        <trans-unit id="d8150f0605412f7e6ac4d7b9458215dfc01f7a41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngPattern&lt;/code&gt; does not set the &lt;code&gt;pattern&lt;/code&gt; attribute and therefore HTML5 constraint validation is not available.</source>
          <target state="translated">&lt;code&gt;ngPattern&lt;/code&gt; 没有设置 &lt;code&gt;pattern&lt;/code&gt; 属性，因此HTML5约束验证不可用。</target>
        </trans-unit>
        <trans-unit id="36eb735d8ddc0df12b590d08dfab085319cf628b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngPluralize&lt;/code&gt; is a directive that displays messages according to en-US localization rules. These rules are bundled with angular.js, but can be overridden (see &lt;a href=&quot;../../../guide/i18n&quot;&gt;AngularJS i18n&lt;/a&gt; dev guide). You configure ngPluralize directive by specifying the mappings between &lt;a href=&quot;http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html&quot;&gt;plural categories&lt;/a&gt; and the strings to be displayed.</source>
          <target state="translated">&lt;code&gt;ngPluralize&lt;/code&gt; 是根据美国本地化规则显示消息的指令。这些规则与angular.js捆绑在一起，但可以被覆盖（请参阅&lt;a href=&quot;../../../guide/i18n&quot;&gt;AngularJS i18n&lt;/a&gt;开发指南）。通过指定&lt;a href=&quot;http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html&quot;&gt;复数类别&lt;/a&gt;和要显示的字符串之间的映射，可以配置ngPluralize指令。</target>
        </trans-unit>
        <trans-unit id="733e0a6c001358bfcc55878b46fa7c256b0488ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngPluralize&lt;/code&gt; is a directive that displays messages according to en-US localization rules. These rules are bundled with angular.js, but can be overridden (see &lt;a href=&quot;../../../guide/i18n&quot;&gt;AngularJS i18n&lt;/a&gt; dev guide). You configure ngPluralize directive by specifying the mappings between &lt;a href=&quot;https://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html&quot;&gt;plural categories&lt;/a&gt; and the strings to be displayed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64c65db94135f3ad2d778c3ce04f82f75c867a1c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngPluralize&lt;/code&gt; is a directive that displays messages according to en-US localization rules. These rules are bundled with angular.js, but can be overridden (see &lt;a href=&quot;../../guide/i18n&quot;&gt;AngularJS i18n&lt;/a&gt; dev guide). You configure ngPluralize directive by specifying the mappings between &lt;a href=&quot;http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html&quot;&gt;plural categories&lt;/a&gt; and the strings to be displayed.</source>
          <target state="translated">&lt;code&gt;ngPluralize&lt;/code&gt; 是根据美国本地化规则显示消息的指令。这些规则与angular.js捆绑在一起，但可以被覆盖（请参阅&lt;a href=&quot;../../guide/i18n&quot;&gt;AngularJS i18n&lt;/a&gt;开发指南）。通过指定&lt;a href=&quot;http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html&quot;&gt;复数类别&lt;/a&gt;和要显示的字符串之间的映射，可以配置ngPluralize指令。</target>
        </trans-unit>
        <trans-unit id="c5ffee4986710b36864794e5c8b2f194bd2e384a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngPluralize&lt;/code&gt; is a directive that displays messages according to en-US localization rules. These rules are bundled with angular.js, but can be overridden (see &lt;a href=&quot;../../guide/i18n&quot;&gt;AngularJS i18n&lt;/a&gt; dev guide). You configure ngPluralize directive by specifying the mappings between &lt;a href=&quot;https://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html&quot;&gt;plural categories&lt;/a&gt; and the strings to be displayed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c7da06054e0eee606bb7d41cf80a7e3b6064d5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngRepeat&lt;/code&gt; uses &lt;a href=&quot;../type/%24rootscope.scope#%24watchCollection.html&quot;&gt;$watchCollection&lt;/a&gt; to detect changes in the collection. When a change happens, &lt;code&gt;ngRepeat&lt;/code&gt; then makes the corresponding changes to the DOM:</source>
          <target state="translated">&lt;code&gt;ngRepeat&lt;/code&gt; 使用&lt;a href=&quot;../type/%24rootscope.scope#%24watchCollection.html&quot;&gt;$ watchCollection&lt;/a&gt;来检测集合中的更改。发生更改时， &lt;code&gt;ngRepeat&lt;/code&gt; 然后对DOM进行相应的更改：</target>
        </trans-unit>
        <trans-unit id="0ef05042cf653c60d66fcc71fc7263f462a72584" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngRepeat&lt;/code&gt; will silently &lt;em&gt;ignore&lt;/em&gt; object keys starting with &lt;code&gt;$&lt;/code&gt;, because it's a prefix used by AngularJS for public (&lt;code&gt;$&lt;/code&gt;) and private (&lt;code&gt;$$&lt;/code&gt;) properties.</source>
          <target state="translated">&lt;code&gt;ngRepeat&lt;/code&gt; 将静默&lt;em&gt;忽略&lt;/em&gt;以 &lt;code&gt;$&lt;/code&gt; 开头的对象键，因为它是AngularJS用于public（ &lt;code&gt;$&lt;/code&gt; ）和private（ &lt;code&gt;$$&lt;/code&gt; ）属性的前缀。</target>
        </trans-unit>
        <trans-unit id="7e07f8283af122ec2f11d8b6db9fb3ea9638f299" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngSwitchDefault&lt;/code&gt;: the default case when no other case match. If there are multiple default cases, all of them will be displayed when no other case match.</source>
          <target state="translated">&lt;code&gt;ngSwitchDefault&lt;/code&gt; ：没有其他大小写匹配的默认大小写。如果存在多个默认案例，则在没有其他案例匹配时将显示所有默认案例。</target>
        </trans-unit>
        <trans-unit id="545ee93181f375cea5911031644e79b948292b59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngSwitchWhen&lt;/code&gt;: the case statement to match against. If match then this case will be displayed. If the same match appears multiple times, all the elements will be displayed. It is possible to associate multiple values to the same &lt;code&gt;ngSwitchWhen&lt;/code&gt; by defining the optional attribute &lt;code&gt;ngSwitchWhenSeparator&lt;/code&gt;. The separator will be used to split the value of the &lt;code&gt;ngSwitchWhen&lt;/code&gt; attribute into multiple tokens, and the element will show if any of the &lt;code&gt;ngSwitch&lt;/code&gt; evaluates to any of these tokens.</source>
          <target state="translated">&lt;code&gt;ngSwitchWhen&lt;/code&gt; ：要匹配的case语句。如果匹配，则将显示这种情况。如果多次出现相同的匹配项，则将显示所有元素。也能够以相同的多个值相关联 &lt;code&gt;ngSwitchWhen&lt;/code&gt; 通过定义可选属性 &lt;code&gt;ngSwitchWhenSeparator&lt;/code&gt; 。分隔符将用于将 &lt;code&gt;ngSwitchWhen&lt;/code&gt; 属性的值拆分为多个标记，并且该元素将显示 &lt;code&gt;ngSwitch&lt;/code&gt; 中的任何一个是否评估为这些标记中的任何一个。</target>
        </trans-unit>
        <trans-unit id="7238547c1b1155f65a58512287667a801baefba1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngView&lt;/code&gt; is a directive that complements the &lt;a href=&quot;../service/%24route&quot;&gt;$route&lt;/a&gt; service by including the rendered template of the current route into the main layout (&lt;code&gt;index.html&lt;/code&gt;) file. Every time the current route changes, the included view changes with it according to the configuration of the &lt;code&gt;$route&lt;/code&gt; service.</source>
          <target state="translated">&lt;code&gt;ngView&lt;/code&gt; 是一种指令，它通过将当前路线的渲染模板包含到主布局（ &lt;code&gt;index.html&lt;/code&gt; ）文件中来补充&lt;a href=&quot;../service/%24route&quot;&gt;$ route&lt;/a&gt;服务。每次当前路由更改时，包含的视图都会根据 &lt;code&gt;$route&lt;/code&gt; 服务的配置随之更改。</target>
        </trans-unit>
        <trans-unit id="8cc80ee7f99d1380308b63ca29f7b7f512266f48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngView&lt;/code&gt; is a directive that complements the &lt;a href=&quot;ngroute/service/%24route&quot;&gt;$route&lt;/a&gt; service by including the rendered template of the current route into the main layout (&lt;code&gt;index.html&lt;/code&gt;) file. Every time the current route changes, the included view changes with it according to the configuration of the &lt;code&gt;$route&lt;/code&gt; service.</source>
          <target state="translated">&lt;code&gt;ngView&lt;/code&gt; 是一种指令，它通过将当前路线的渲染模板包含到主布局（ &lt;code&gt;index.html&lt;/code&gt; ）文件中来补充&lt;a href=&quot;ngroute/service/%24route&quot;&gt;$ route&lt;/a&gt;服务。每次当前路由更改时，包含的视图都会根据 &lt;code&gt;$route&lt;/code&gt; 服务的配置随之更改。</target>
        </trans-unit>
        <trans-unit id="aa251076acf5bb3eaa6af46d48d2c8d93a861eec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ngView&lt;/code&gt; is a directive that complements the &lt;a href=&quot;service/%24route&quot;&gt;$route&lt;/a&gt; service by including the rendered template of the current route into the main layout (&lt;code&gt;index.html&lt;/code&gt;) file. Every time the current route changes, the included view changes with it according to the configuration of the &lt;code&gt;$route&lt;/code&gt; service.</source>
          <target state="translated">&lt;code&gt;ngView&lt;/code&gt; 是一种指令，它通过将当前路线的渲染模板包含到主布局（ &lt;code&gt;index.html&lt;/code&gt; ）文件中来补充&lt;a href=&quot;service/%24route&quot;&gt;$ route&lt;/a&gt;服务。每次当前路由更改时，包含的视图都会根据 &lt;code&gt;$route&lt;/code&gt; 服务的配置随之更改。</target>
        </trans-unit>
        <trans-unit id="c4fd3ebadc39f2649df08c5d1b4c98a1de321282" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;notify(value)&lt;/code&gt; - provides updates on the status of the promise's execution. This may be called multiple times before the promise is either resolved or rejected.</source>
          <target state="translated">&lt;code&gt;notify(value)&lt;/code&gt; -提供有关诺言的执行状态的更新。在兑现承诺之前，可能会多次调用此命令。</target>
        </trans-unit>
        <trans-unit id="16b86354fb37d3ca3347ae6c7172c56af0cbcfa1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;number&lt;/code&gt;&lt;code&gt;function()&lt;/code&gt;&lt;code&gt;jqLite&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;number&lt;/code&gt;&lt;code&gt;function()&lt;/code&gt;&lt;code&gt;jqLite&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4bed0d33fb76669a4c767a2d600317da01f350f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;number&lt;/code&gt;&lt;code&gt;object&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;number&lt;/code&gt;&lt;code&gt;object&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8028b6836b472ed8a423e3528c7becca76431628" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;number&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;number&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="93ad0324d43b1a6a467f477d6400301dda1cf747" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;object&lt;/code&gt;: A map of attributes</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; ：属性图</target>
        </trans-unit>
        <trans-unit id="e53ce134b54611e421a70eb043225f3d3bf1cdbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;object&lt;/code&gt;&lt;code&gt;function(url)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt;&lt;code&gt;function(url)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="17a46cd54e5f73299d9eb311adf5a2dedafa29e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;objectMaxDepth&lt;/code&gt;&lt;strong&gt;{Number}&lt;/strong&gt; - The max depth for stringifying objects. Setting to a non-positive or non-numeric value, removes the max depth limit. Default: 5</source>
          <target state="translated">&lt;code&gt;objectMaxDepth&lt;/code&gt; &lt;strong&gt;{Number}&lt;/strong&gt; -用于对对象进行字符串化的最大深度。设置为非正值或非数字值将删除最大深度限制。默认值：5</target>
        </trans-unit>
        <trans-unit id="08cde7202b34490c55f62fb494ab4bdfffb8d20b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;oldVal&lt;/code&gt; contains the previous value of the &lt;code&gt;watchExpression&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;oldVal&lt;/code&gt; 包含的前值 &lt;code&gt;watchExpression&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c3d9d572f7c9c8de5cb11ae4eaa174e4cbbad796" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options&lt;/code&gt; - An optional object hash with linking options. If &lt;code&gt;options&lt;/code&gt; is provided, then the following keys may be used to control linking behavior:</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; -带有链接选项的可选对象哈希。如果提供了 &lt;code&gt;options&lt;/code&gt; ，则可以使用以下键来控制链接行为：</target>
        </trans-unit>
        <trans-unit id="20786a12f072e3c91a7ea25badf7acb56adf04a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parentBoundTranscludeFn&lt;/code&gt; - the transclude function made available to directives; if given, it will be passed through to the link functions of directives found in &lt;code&gt;element&lt;/code&gt; during compilation.</source>
          <target state="translated">&lt;code&gt;parentBoundTranscludeFn&lt;/code&gt; -可用于指令的transclude函数；如果给定的话，它将在编译期间传递给 &lt;code&gt;element&lt;/code&gt; 中找到的指令的链接函数。</target>
        </trans-unit>
        <trans-unit id="2294bbc26469b48270a626ca074054bfba75f5e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt; can contain named groups starting with a colon and ending with a star: e.g.&lt;code&gt;:name*&lt;/code&gt;. All characters are eagerly stored in &lt;code&gt;$routeParams&lt;/code&gt; under the given &lt;code&gt;name&lt;/code&gt; when the route matches.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; 可以包含以冒号开头并以星号结尾的命名组：例如 &lt;code&gt;:name*&lt;/code&gt; 。当路由匹配时，所有字符都以给定 &lt;code&gt;name&lt;/code&gt; 急切地存储在 &lt;code&gt;$routeParams&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="81661063ed89ce01f1c4fbc9c9a7f4aff9fa95b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt; can contain named groups starting with a colon: e.g. &lt;code&gt;:name&lt;/code&gt;. All characters up to the next slash are matched and stored in &lt;code&gt;$routeParams&lt;/code&gt; under the given &lt;code&gt;name&lt;/code&gt; when the route matches.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; 可以包含以冒号开头的命名组：例如 &lt;code&gt;:name&lt;/code&gt; 。路由匹配时， &lt;code&gt;$routeParams&lt;/code&gt; 下一个斜杠的所有字符都将匹配并以给定 &lt;code&gt;name&lt;/code&gt; 存储在$ routeParams中。</target>
        </trans-unit>
        <trans-unit id="ae8d0ef38cbe2a709ef10e0396d080c2ba085ba2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt; can contain optional named groups with a question mark: e.g.&lt;code&gt;:name?&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; 可以包含带问号的可选命名组：例如 &lt;code&gt;:name?&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fb63deb69dad86f4634d2a23b301f6e1bd9d48f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt; or (&lt;code&gt;regex&lt;/code&gt; and &lt;code&gt;serializer&lt;/code&gt;) - defines how to recognize and generate this route</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; 或（ &lt;code&gt;regex&lt;/code&gt; 和 &lt;code&gt;serializer&lt;/code&gt; ）-定义如何识别和生成此路由</target>
        </trans-unit>
        <trans-unit id="76bee225438966ab0e0bbdf3425c45ec097bfa0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;phase&lt;/code&gt; - The phase of the animation. The two possible phases are &lt;strong&gt;start&lt;/strong&gt; (when the animation starts) and &lt;strong&gt;close&lt;/strong&gt; (when it ends).</source>
          <target state="translated">&lt;code&gt;phase&lt;/code&gt; -动画的阶段。可能的两个阶段是&lt;strong&gt;开始&lt;/strong&gt;（动画开始时）和&lt;strong&gt;关闭&lt;/strong&gt;（结束动画时）。</target>
        </trans-unit>
        <trans-unit id="de7daf300c8eb687174393ed660f833827ee2a39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;preventDefault&lt;/code&gt; - &lt;code&gt;{function}&lt;/code&gt;: calling &lt;code&gt;preventDefault&lt;/code&gt; sets &lt;code&gt;defaultPrevented&lt;/code&gt; flag to true.</source>
          <target state="translated">&lt;code&gt;preventDefault&lt;/code&gt; - &lt;code&gt;{function}&lt;/code&gt; ：调用 &lt;code&gt;preventDefault&lt;/code&gt; 套 &lt;code&gt;defaultPrevented&lt;/code&gt; 标志设置为true。</target>
        </trans-unit>
        <trans-unit id="836e9753a716a8b14973de5b11e39509a28ba069" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;redirectTo&lt;/code&gt; &amp;ndash; &lt;code&gt;{(string|Function)=}&lt;/code&gt; &amp;ndash; value to update &lt;a href=&quot;../../ng/service/%24location&quot;&gt;$location&lt;/a&gt; path with and trigger route redirection.</source>
          <target state="translated">&lt;code&gt;redirectTo&lt;/code&gt; &amp;ndash; &lt;code&gt;{(string|Function)=}&lt;/code&gt; &amp;ndash;用于更新&lt;a href=&quot;../../ng/service/%24location&quot;&gt;$ location&lt;/a&gt;路径并触发路由重定向的值。</target>
        </trans-unit>
        <trans-unit id="53bfd1bd5ebce6b4fb02ad847a587ad65779268d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;redirectTo&lt;/code&gt; takes precedence over &lt;code&gt;resolveRedirectTo&lt;/code&gt;, so specifying both on the same route definition, will cause the latter to be ignored.</source>
          <target state="translated">&lt;code&gt;redirectTo&lt;/code&gt; 优先于 &lt;code&gt;resolveRedirectTo&lt;/code&gt; ，因此在同一路由定义上同时指定二者，将导致后者被忽略。</target>
        </trans-unit>
        <trans-unit id="432322d2ac55769a5f9ded5079284078193e4ba7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reject(reason)&lt;/code&gt; &amp;ndash; rejects the derived promise with the &lt;code&gt;reason&lt;/code&gt;. This is equivalent to resolving it with a rejection constructed via &lt;code&gt;$q.reject&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;reject(reason)&lt;/code&gt; &amp;ndash;拒绝带有 &lt;code&gt;reason&lt;/code&gt; 的派生诺言。这等效于通过 &lt;code&gt;$q.reject&lt;/code&gt; 构造的拒绝来解决它。</target>
        </trans-unit>
        <trans-unit id="a35877a90203b1fa9d354636135763cf53bc8359" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;relatedTarget&lt;/code&gt;: the &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/MouseEvent/relatedTarget&quot;&gt;relatedTarget&lt;/a&gt; for &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/MouseEvent&quot;&gt;MouseEvent&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;relatedTarget&lt;/code&gt; ：在&lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/MouseEvent/relatedTarget&quot;&gt;relatedTarget&lt;/a&gt;为&lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/MouseEvent&quot;&gt;的MouseEvent&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b18bc1c28f2bbde7b314eb2cc9383214fa98745b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;removeClass&lt;/code&gt; - A space separated list of CSS classes that will be removed from the element and spread across the animation.</source>
          <target state="translated">&lt;code&gt;removeClass&lt;/code&gt; -用空格分隔的CSS类列表，这些类将从元素中移除并分布在整个动画中。</target>
        </trans-unit>
        <trans-unit id="a415a93582b2467f1c659ff2dce0388b2574124e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;request&lt;/code&gt;: interceptors get called with a http &lt;a href=&quot;%24http#usage.html&quot;&gt;config&lt;/a&gt; object. The function is free to modify the &lt;code&gt;config&lt;/code&gt; object or create a new one. The function needs to return the &lt;code&gt;config&lt;/code&gt; object directly, or a promise containing the &lt;code&gt;config&lt;/code&gt; or a new &lt;code&gt;config&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;request&lt;/code&gt; ：拦截器通过http &lt;a href=&quot;%24http#usage.html&quot;&gt;config&lt;/a&gt;对象调用。该函数可以自由修改 &lt;code&gt;config&lt;/code&gt; 对象或创建新对象。该函数需要直接返回 &lt;code&gt;config&lt;/code&gt; 对象，或者包含 &lt;code&gt;config&lt;/code&gt; 或新 &lt;code&gt;config&lt;/code&gt; 对象的promise 。</target>
        </trans-unit>
        <trans-unit id="331af1d76f0a76c9ba20ba92c5f9420779ebbb4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;requestError&lt;/code&gt;: interceptor gets called when a previous interceptor threw an error or resolved with a rejection.</source>
          <target state="translated">&lt;code&gt;requestError&lt;/code&gt; ：当先前的拦截器抛出错误或被拒绝解决时，拦截器将被调用。</target>
        </trans-unit>
        <trans-unit id="8d53e1f7b99ff33379860e3d4b9916bb2c54ec36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;require&lt;/code&gt; - &lt;code&gt;{Object&amp;lt;string, string&amp;gt;=}&lt;/code&gt; - requires the controllers of other directives and binds them to this component's controller. The object keys specify the property names under which the required controllers (object values) will be bound. See &lt;a href=&quot;../service/%24compile#-require-.html&quot;&gt;&lt;code&gt;require&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;require&lt;/code&gt; - &lt;code&gt;{Object&amp;lt;string, string&amp;gt;=}&lt;/code&gt; -需要其它指令和结合它们的这种组件的控制器的控制器。对象键指定将在其下绑定所需控制器（对象值）的属性名称。参见&lt;a href=&quot;../service/%24compile#-require-.html&quot;&gt; &lt;code&gt;require&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="09e2d15681ac6c3af7cdc3e0faa85e6c1f2c6777" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resolve(value)&lt;/code&gt; &amp;ndash; resolves the derived promise with the &lt;code&gt;value&lt;/code&gt;. If the value is a rejection constructed via &lt;code&gt;$q.reject&lt;/code&gt;, the promise will be rejected instead.</source>
          <target state="translated">&lt;code&gt;resolve(value)&lt;/code&gt; &amp;ndash;用 &lt;code&gt;value&lt;/code&gt; 解决派生的promise 。如果该值是通过 &lt;code&gt;$q.reject&lt;/code&gt; 构造的拒绝，则将拒绝该promise。</target>
        </trans-unit>
        <trans-unit id="5f8dc8bdadd7275656aa9a2245d9915031e3eef5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resolve&lt;/code&gt; - &lt;code&gt;{Object.&amp;lt;string, Function&amp;gt;=}&lt;/code&gt; - An optional map of dependencies which should be injected into the controller. If any of these dependencies are promises, the router will wait for them all to be resolved or one to be rejected before the controller is instantiated. If all the promises are resolved successfully, the values of the resolved promises are injected and &lt;a href=&quot;../service/%24route#%24routeChangeSuccess.html&quot;&gt;$routeChangeSuccess&lt;/a&gt; event is fired. If any of the promises are rejected the &lt;a href=&quot;../service/%24route#%24routeChangeError.html&quot;&gt;$routeChangeError&lt;/a&gt; event is fired. For easier access to the resolved dependencies from the template, the &lt;code&gt;resolve&lt;/code&gt; map will be available on the scope of the route, under &lt;code&gt;$resolve&lt;/code&gt; (by default) or a custom name specified by the &lt;code&gt;resolveAs&lt;/code&gt; property (see below). This can be particularly useful, when working with &lt;a href=&quot;../../ng/type/angular.module#component.html&quot;&gt;components&lt;/a&gt; as route templates.</source>
          <target state="translated">&lt;code&gt;resolve&lt;/code&gt; - &lt;code&gt;{Object.&amp;lt;string, Function&amp;gt;=}&lt;/code&gt; -一个可选的映射应该被注射到控制器依赖。如果这些依赖关系中的任何一个是应许的，路由器将在实例化控制器之前等待所有这些依赖关系被解决或被拒绝。如果所有的承诺都已成功解决，则将注入已解决的承诺的值，并触发&lt;a href=&quot;../service/%24route#%24routeChangeSuccess.html&quot;&gt;$ routeChangeSuccess&lt;/a&gt;事件。如果任何承诺均被拒绝，则会触发&lt;a href=&quot;../service/%24route#%24routeChangeError.html&quot;&gt;$ routeChangeError&lt;/a&gt;事件。为了更轻松地从模板访问已解析的依赖关系， &lt;code&gt;resolve&lt;/code&gt; 映射将在路由范围内提供，位于 &lt;code&gt;$resolve&lt;/code&gt; （默认情况下）或由 &lt;code&gt;resolveAs&lt;/code&gt; 指定的自定义名称下属性（请参见下文）。当使用&lt;a href=&quot;../../ng/type/angular.module#component.html&quot;&gt;组件&lt;/a&gt;作为路由模板时，这特别有用。</target>
        </trans-unit>
        <trans-unit id="a2853893bb4934b2127ba4a826d10942682da97a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resolveAs&lt;/code&gt; - &lt;code&gt;{string=}&lt;/code&gt; - The name under which the &lt;code&gt;resolve&lt;/code&gt; map will be available on the scope of the route. If omitted, defaults to &lt;code&gt;$resolve&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;resolveAs&lt;/code&gt; - &lt;code&gt;{string=}&lt;/code&gt; -下其名称 &lt;code&gt;resolve&lt;/code&gt; 地图将可在路由的范围。如果省略，则默认为 &lt;code&gt;$resolve&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0579caa94ef9d589691969e4e7cdd2b9d7b8630f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resolveRedirectTo&lt;/code&gt; &amp;ndash; &lt;code&gt;{Function=}&lt;/code&gt; &amp;ndash; a function that will (eventually) return the value to update &lt;a href=&quot;../../ng/service/%24location&quot;&gt;$location&lt;/a&gt; URL with and trigger route redirection. In contrast to &lt;code&gt;redirectTo&lt;/code&gt;, dependencies can be injected into &lt;code&gt;resolveRedirectTo&lt;/code&gt; and the return value can be either a string or a promise that will be resolved to a string.</source>
          <target state="translated">&lt;code&gt;resolveRedirectTo&lt;/code&gt; &amp;ndash; &lt;code&gt;{Function=}&lt;/code&gt; &amp;ndash;一个函数（最终）将返回该值以更新&lt;a href=&quot;../../ng/service/%24location&quot;&gt;$ location&lt;/a&gt; URL并触发路由重定向。与 &lt;code&gt;redirectTo&lt;/code&gt; 相比，可以将依赖项注入 &lt;code&gt;resolveRedirectTo&lt;/code&gt; 中，并且返回值可以是字符串，也可以是将被解析为字符串的promise。</target>
        </trans-unit>
        <trans-unit id="5ab2ec6458031d39af546da03f98a06cebfc1619" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;response&lt;/code&gt;: interceptors get called with http &lt;code&gt;response&lt;/code&gt; object. The function is free to modify the &lt;code&gt;response&lt;/code&gt; object or create a new one. The function needs to return the &lt;code&gt;response&lt;/code&gt; object directly, or as a promise containing the &lt;code&gt;response&lt;/code&gt; or a new &lt;code&gt;response&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;response&lt;/code&gt; ：使用http &lt;code&gt;response&lt;/code&gt; 对象调用拦截器。该函数可以自由修改 &lt;code&gt;response&lt;/code&gt; 对象或创建新对象。该函数需要直接返回 &lt;code&gt;response&lt;/code&gt; 对象，或者作为包含 &lt;code&gt;response&lt;/code&gt; 或新 &lt;code&gt;response&lt;/code&gt; 对象的承诺。</target>
        </trans-unit>
        <trans-unit id="0dd63b36c3ef0ce81278313f0238a8cd71299e7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;responseError&lt;/code&gt;: interceptor gets called when a previous interceptor threw an error or resolved with a rejection.</source>
          <target state="translated">&lt;code&gt;responseError&lt;/code&gt; ：前一个拦截器抛出错误或被拒绝解决时，拦截器将被调用。</target>
        </trans-unit>
        <trans-unit id="bc0beab4f33a756458e6c67169de1e2b21de9069" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rethrow&lt;/code&gt;: If any errors are passed to the handler in tests, it typically means that there is a bug in the application or test, so this mock will make these tests fail. For any implementations that expect exceptions to be thrown, the &lt;code&gt;rethrow&lt;/code&gt; mode will also maintain a log of thrown errors in &lt;code&gt;$exceptionHandler.errors&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rethrow&lt;/code&gt; ：如果在测试中将任何错误传递给处理程序，则通常意味着应用程序或测试中存在错误，因此此模拟将使这些测试失败。对于任何期望抛出异常的实现， &lt;code&gt;rethrow&lt;/code&gt; 模式还将在 &lt;code&gt;$exceptionHandler.errors&lt;/code&gt; 维护抛出错误的日志。</target>
        </trans-unit>
        <trans-unit id="733e798121af904a4c72364967d66e459418a0a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scope()&lt;/code&gt; - retrieves the &lt;a href=&quot;../type/%24rootscope.scope&quot;&gt;scope&lt;/a&gt; of the current element or its parent. Requires &lt;a href=&quot;../../../guide/production#disabling-debug-data.html&quot;&gt;Debug Data&lt;/a&gt; to be enabled.</source>
          <target state="translated">&lt;code&gt;scope()&lt;/code&gt; -检索当前元素或其父元素的&lt;a href=&quot;../type/%24rootscope.scope&quot;&gt;范围&lt;/a&gt;。需要启用&lt;a href=&quot;../../../guide/production#disabling-debug-data.html&quot;&gt;调试数据&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0e7d1bd8355897fbc6f28e344ade30d5cf8bd1fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scope&lt;/code&gt; - &lt;a href=&quot;../type/%24rootscope.scope&quot;&gt;Scope&lt;/a&gt; - The scope to be used by the directive for registering &lt;a href=&quot;../type/%24rootscope.scope#%24watch.html&quot;&gt;watches&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;scope&lt;/code&gt; - &lt;a href=&quot;../type/%24rootscope.scope&quot;&gt;Scope-&lt;/a&gt;指令用于注册&lt;a href=&quot;../type/%24rootscope.scope#%24watch.html&quot;&gt;手表的范围&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="736a155bfe5b0f906748b542ca148a3e128bf938" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scope&lt;/code&gt; - A &lt;a href=&quot;../type/%24rootscope.scope&quot;&gt;Scope&lt;/a&gt; to bind to.</source>
          <target state="translated">&lt;code&gt;scope&lt;/code&gt; - 要绑定的&lt;a href=&quot;../type/%24rootscope.scope&quot;&gt;作用域&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="023503073b8e1c5e7628dda472aca0b7be7b79bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scope&lt;/code&gt; - is the current scope with which the linking function is working with.</source>
          <target state="translated">&lt;code&gt;scope&lt;/code&gt; -是链接功能所使用的当前范围。</target>
        </trans-unit>
        <trans-unit id="cbb567d727f2e753041bffeb6c72e3fb3ce75a58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scope&lt;/code&gt; is an AngularJS scope object.</source>
          <target state="translated">&lt;code&gt;scope&lt;/code&gt; 是AngularJS作用域对象。</target>
        </trans-unit>
        <trans-unit id="6df6e689423958b8b13ffb0a6a5742c72252b129" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scope&lt;/code&gt; refers to the current scope</source>
          <target state="translated">&lt;code&gt;scope&lt;/code&gt; 是指当前范围</target>
        </trans-unit>
        <trans-unit id="6570b17255a636d66f9fa82bb833e5c0f7586e6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scope&lt;/code&gt;: (optional) override the scope.</source>
          <target state="translated">&lt;code&gt;scope&lt;/code&gt; ：（可选）覆盖范围。</target>
        </trans-unit>
        <trans-unit id="3ae667447104aaa6f9f5e76dfcf12ece25e6e761" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;select&lt;/code&gt;: The result of this expression will be bound to the model of the parent &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; element. If not specified, &lt;code&gt;select&lt;/code&gt; expression will default to &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;select&lt;/code&gt; ：此表达式的结果将绑定到父 &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; 元素的模型。如果未指定，则 &lt;code&gt;select&lt;/code&gt; expression将默认为 &lt;code&gt;value&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="78e458052a16c01b3670ea39bf0e5b65aeae45ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;select&lt;/code&gt;&lt;strong&gt;&lt;code&gt;as&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;label&lt;/code&gt;&lt;strong&gt;&lt;code&gt;disable when&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;disable&lt;/code&gt;&lt;strong&gt;&lt;code&gt;for&lt;/code&gt; &lt;code&gt;(&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;key&lt;/code&gt;&lt;strong&gt;&lt;code&gt;,&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;value&lt;/code&gt;&lt;strong&gt;&lt;code&gt;) in&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;object&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;select&lt;/code&gt; &lt;strong&gt; &lt;code&gt;as&lt;/code&gt; &lt;/strong&gt; &lt;code&gt;label&lt;/code&gt; &lt;strong&gt; &lt;code&gt;disable when&lt;/code&gt; &lt;/strong&gt; &lt;code&gt;disable&lt;/code&gt; &lt;strong&gt; &lt;code&gt;for&lt;/code&gt; &lt;code&gt;(&lt;/code&gt; &lt;/strong&gt; &lt;code&gt;key&lt;/code&gt; &lt;strong&gt; &lt;code&gt;,&lt;/code&gt; &lt;/strong&gt; &lt;code&gt;value&lt;/code&gt; &lt;strong&gt; &lt;code&gt;) in&lt;/code&gt; &lt;/strong&gt; &lt;code&gt;object&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8e0b61ae68ccf6a0fefe789619ae7c985ee70b82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;select&lt;/code&gt;&lt;strong&gt;&lt;code&gt;as&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;label&lt;/code&gt;&lt;strong&gt;&lt;code&gt;for (&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;key&lt;/code&gt;&lt;strong&gt;&lt;code&gt;,&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;value&lt;/code&gt;&lt;strong&gt;&lt;code&gt;) in&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;object&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;select&lt;/code&gt; &lt;strong&gt; &lt;code&gt;as&lt;/code&gt; &lt;/strong&gt; &lt;code&gt;object&lt;/code&gt; &lt;strong&gt; &lt;code&gt;for (&lt;/code&gt; &lt;/strong&gt; &lt;code&gt;key&lt;/code&gt; &lt;strong&gt; &lt;code&gt;,&lt;/code&gt; &lt;/strong&gt; &lt;code&gt;value&lt;/code&gt; &lt;strong&gt; &lt;code&gt;) in&lt;/code&gt; &lt;/strong&gt; &lt;code&gt;label&lt;/code&gt; &lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ca66b2e6ac07e7ca29ddae160544b3bc7b0ebca7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;select&lt;/code&gt;&lt;strong&gt;&lt;code&gt;as&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;label&lt;/code&gt;&lt;strong&gt;&lt;code&gt;for&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;value&lt;/code&gt;&lt;strong&gt;&lt;code&gt;in&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;array&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;select&lt;/code&gt;&lt;strong&gt;&lt;code&gt;as&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;label&lt;/code&gt;&lt;strong&gt;&lt;code&gt;for&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;value&lt;/code&gt;&lt;strong&gt;&lt;code&gt;in&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;array&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="68502af231efc1bd12a7d337f6cf5a0798c290b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;select&lt;/code&gt;&lt;strong&gt;&lt;code&gt;as&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;label&lt;/code&gt;&lt;strong&gt;&lt;code&gt;group by&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;group&lt;/code&gt;&lt;strong&gt;&lt;code&gt;for&lt;/code&gt; &lt;code&gt;(&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;key&lt;/code&gt;&lt;strong&gt;&lt;code&gt;,&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;value&lt;/code&gt;&lt;strong&gt;&lt;code&gt;) in&lt;/code&gt;&lt;/strong&gt;&lt;code&gt;object&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;select&lt;/code&gt; &lt;strong&gt; &lt;code&gt;as&lt;/code&gt; &lt;/strong&gt; &lt;code&gt;label&lt;/code&gt; &lt;strong&gt; &lt;code&gt;group by&lt;/code&gt; &lt;/strong&gt; &lt;code&gt;group&lt;/code&gt; &lt;strong&gt; &lt;code&gt;for&lt;/code&gt; &lt;code&gt;(&lt;/code&gt; &lt;/strong&gt; &lt;code&gt;key&lt;/code&gt; &lt;strong&gt; &lt;code&gt;,&lt;/code&gt; &lt;/strong&gt; &lt;code&gt;value&lt;/code&gt; &lt;strong&gt; &lt;code&gt;) in&lt;/code&gt; &lt;/strong&gt; &lt;code&gt;object&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="85b6c9eeacbfb84c2c4b45f9b1ff493799d0771f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;slotName&lt;/code&gt;: (optional) the name of the slot to transclude. If falsy (e.g. &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;undefined&lt;/code&gt; or &lt;code&gt;''&lt;/code&gt;) then the default transclusion is provided. The &lt;code&gt;$transclude&lt;/code&gt; function also has a method on it, &lt;code&gt;$transclude.isSlotFilled(slotName)&lt;/code&gt;, which returns &lt;code&gt;true&lt;/code&gt; if the specified slot contains content (i.e. one or more DOM nodes).</source>
          <target state="translated">&lt;code&gt;slotName&lt;/code&gt; ：（可选）要包含的插槽的名称。如果错误（例如 &lt;code&gt;null&lt;/code&gt; ， &lt;code&gt;undefined&lt;/code&gt; 或 &lt;code&gt;''&lt;/code&gt; ），则提供默认的包含。的 &lt;code&gt;$transclude&lt;/code&gt; 功能还具有在其上的方法， &lt;code&gt;$transclude.isSlotFilled(slotName)&lt;/code&gt; ，它返回 &lt;code&gt;true&lt;/code&gt; ，如果指定的时隙包含内容（即一个或多个DOM节点）。</target>
        </trans-unit>
        <trans-unit id="2d38932d58ae4db4450e491cc28b4e0e8782b480" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stagger&lt;/code&gt; - A numeric time value representing the delay between successively animated elements (&lt;a href=&quot;../../nganimate#css-staggering-animations.html&quot;&gt;Click here to learn how CSS-based staggering works in ngAnimate.&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;stagger&lt;/code&gt; -一个数字时间值，表示连续动画元素之间的延迟（&lt;a href=&quot;../../nganimate#css-staggering-animations.html&quot;&gt;单击此处以了解ngAnimate中基于CSS的交错如何工作。&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="e831bf85661d4350f937ca1ee30582dab7b941fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;staggerIndex&lt;/code&gt; - The numeric index representing the stagger item (e.g. a value of 5 is equal to the sixth item in the stagger; therefore when a &lt;code&gt;stagger&lt;/code&gt; option value of &lt;code&gt;0.1&lt;/code&gt; is used then there will be a stagger delay of &lt;code&gt;600ms&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;staggerIndex&lt;/code&gt; -表示交错项的数字索引（例如，值5等于交错中的第六项；因此，当使用 &lt;code&gt;stagger&lt;/code&gt; 选项值 &lt;code&gt;0.1&lt;/code&gt; 时，会有 &lt;code&gt;600ms&lt;/code&gt; 的交错延迟）</target>
        </trans-unit>
        <trans-unit id="4b45e4978dcf7ce6b7b883c7dd98db8f0f80ca71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;start&lt;/code&gt; - The method to start the animation. This will return a &lt;code&gt;Promise&lt;/code&gt; when called.</source>
          <target state="translated">&lt;code&gt;start&lt;/code&gt; -启动动画的方法。调用时将返回一个 &lt;code&gt;Promise&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3cb9ccde0ec19acd597bd9145a2a92a9b69d53db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;start&lt;/code&gt; is called on either &lt;code&gt;mousedown&lt;/code&gt;, &lt;code&gt;touchstart&lt;/code&gt; or &lt;code&gt;pointerdown&lt;/code&gt;. After this event, &lt;code&gt;$swipe&lt;/code&gt; is watching for &lt;code&gt;touchmove&lt;/code&gt;, &lt;code&gt;mousemove&lt;/code&gt; or &lt;code&gt;pointermove&lt;/code&gt; events. These events are ignored until the total distance moved in either dimension exceeds a small threshold.</source>
          <target state="translated">&lt;code&gt;start&lt;/code&gt; 叫上或者 &lt;code&gt;mousedown&lt;/code&gt; ， &lt;code&gt;touchstart&lt;/code&gt; 或 &lt;code&gt;pointerdown&lt;/code&gt; 。在此事件之后， &lt;code&gt;$swipe&lt;/code&gt; 会监视 &lt;code&gt;touchmove&lt;/code&gt; ， &lt;code&gt;mousemove&lt;/code&gt; 或 &lt;code&gt;pointermove&lt;/code&gt; 事件。这些事件将被忽略，直到在任一维度上移动的总距离超过较小阈值为止。</target>
        </trans-unit>
        <trans-unit id="4470450130ac3b5e4842fb970bfa6aa99c71833c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stopPropagation&lt;/code&gt; - &lt;code&gt;{function=}&lt;/code&gt;: calling &lt;code&gt;stopPropagation&lt;/code&gt; function will cancel further event propagation (available only for events that were &lt;code&gt;$emit&lt;/code&gt;-ed).</source>
          <target state="translated">&lt;code&gt;stopPropagation&lt;/code&gt; - &lt;code&gt;{function=}&lt;/code&gt; ：调用 &lt;code&gt;stopPropagation&lt;/code&gt; 功能将取消进一步事件传播（仅适用于为事件 &lt;code&gt;$emit&lt;/code&gt; -ed）。</target>
        </trans-unit>
        <trans-unit id="562f32dbb4ed76736045cbd8fdf38a6b2f9b9379" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;strictDi&lt;/code&gt; - disable automatic function annotation for the application. This is meant to assist in finding bugs which break minified code. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;strictDi&lt;/code&gt; -禁用应用程序的自动功能注释。这旨在帮助查找破坏最小代码的错误。默认为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c7276b814226305e007944b2417ca4a18386b0d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;: An AngularJS expression. This expression will be evaluated against each item and the result will be used for sorting. For example, use &lt;code&gt;'label'&lt;/code&gt; to sort by a property called &lt;code&gt;label&lt;/code&gt; or &lt;code&gt;'label.substring(0, 3)'&lt;/code&gt; to sort by the first 3 characters of the &lt;code&gt;label&lt;/code&gt; property.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; ：一个AngularJS表达式。将针对每个项目评估该表达式，并将结果用于排序。例如，使用 &lt;code&gt;'label'&lt;/code&gt; 按称为 &lt;code&gt;label&lt;/code&gt; 的属性排序，或使用 &lt;code&gt;'label.substring(0, 3)'&lt;/code&gt; 按 &lt;code&gt;label&lt;/code&gt; 属性的前3个字符排序。</target>
        </trans-unit>
        <trans-unit id="87065c1b0a8c3b424a3bf885c83aec838ee244e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;: Evaluated as &lt;a href=&quot;../../../guide/expression&quot;&gt;expression&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; ：作为&lt;a href=&quot;../../../guide/expression&quot;&gt;表达式求值&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1f120efe592339b69657624de23eb491c8d1b860" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;: The string is used for matching against the contents of the &lt;code&gt;array&lt;/code&gt;. All strings or objects with string properties in &lt;code&gt;array&lt;/code&gt; that match this string will be returned. This also applies to nested object properties. The predicate can be negated by prefixing the string with &lt;code&gt;!&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; ：该字符串用于匹配 &lt;code&gt;array&lt;/code&gt; 的内容。将返回所有字符串或 &lt;code&gt;array&lt;/code&gt; 中具有字符串属性的对象与此字符串匹配的对象。这也适用于嵌套对象属性。可以通过在字符串前面加上 &lt;code&gt;!&lt;/code&gt; 来否定谓词。。</target>
        </trans-unit>
        <trans-unit id="0fac8b9ae85918a1b9bc8ddbaeca59ac4b4bdd0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;: execute using the rules as defined in &lt;a href=&quot;../../../guide/expression&quot;&gt;expression&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; ：使用&lt;a href=&quot;../../../guide/expression&quot;&gt;表达式中&lt;/a&gt;定义的规则执行。</target>
        </trans-unit>
        <trans-unit id="96c6e2cb8a41f3ff6df278ab114004a459396f7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;: the controller instance</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; ：控制器实例</target>
        </trans-unit>
        <trans-unit id="94b44bd8ed432ec208416beb4e35097bab5affc1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;DOMElement&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt;&lt;code&gt;DOMElement&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="910d44622a6107a3b19072bdef477ba5ae9f8f6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;Number&lt;/code&gt;&lt;code&gt;Array.&amp;lt;string&amp;gt;&lt;/code&gt;&lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt;&lt;code&gt;Number&lt;/code&gt;&lt;code&gt;Array.&amp;lt;string&amp;gt;&lt;/code&gt;&lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8b0b56a1549a08913f8940eb735e9bc52b22b15a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;Object.&amp;lt;string&amp;gt;&lt;/code&gt;&lt;code&gt;Object.&amp;lt;Array.&amp;lt;string&amp;gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt;&lt;code&gt;Object.&amp;lt;string&amp;gt;&lt;/code&gt;&lt;code&gt;Object.&amp;lt;Array.&amp;lt;string&amp;gt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="52a43af812236606133b2286a90533aa1da9dce9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;Object&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt;&lt;code&gt;Object&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0617274d3eb14a8dc52328b1796f76e5008bdb89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;Object&lt;/code&gt;&lt;code&gt;function()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt;&lt;code&gt;Object&lt;/code&gt;&lt;code&gt;function()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="333110296a642e5efb3711dbb16416e1cab4cf22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;code&gt;function(string)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;code&gt;function(string)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c5c9c81312a04d037526e6aaf5a2317937e86260" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;code&gt;function(string)&lt;/code&gt;&lt;code&gt;Object&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;code&gt;function(string)&lt;/code&gt;&lt;code&gt;Object&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b79898c77a9158ed9a3b37da256dd059ffe3c81c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;code&gt;function(string)=&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;code&gt;function(string)=&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9eaac284d7e4378b9085c54e3296234cdfaab404" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;TrustedObject&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt;&lt;code&gt;TrustedObject&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c392a5b127563010af8428bead8b621d39ab9f3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;TrustedResourceUrl&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt;&lt;code&gt;TrustedResourceUrl&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0841c37de01d8a9cca515bc654a12239afab25d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;expression&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt;&lt;code&gt;expression&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="76df6b50f223f89d90393b827dfbded897257a75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;function()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt;&lt;code&gt;function()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2797717466ee7c0a14d61e2cca32c8deba9e887a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;function()&lt;/code&gt;&lt;code&gt;Object&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt;&lt;code&gt;function()&lt;/code&gt;&lt;code&gt;Object&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="895ee3aad440c5ee332da06917bd8f67a4bda274" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;function(scope)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt;&lt;code&gt;function(scope)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c6eae39d5eadf0ab32025ed06721ddcabd1fe903" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;number&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt;&lt;code&gt;number&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e9f4b43f7a2cf03aecf02ecdf8aaa8da5e8670ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;object&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt;&lt;code&gt;object&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="746d33f90849146f5b6d6cb98d0e6d0c1d1bfd53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;self&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt;&lt;code&gt;self&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cd29f8ef866a70b2bfb061ce2616ab1e279f7e87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt;&lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="158ce96b5b8e7c15256896a4b3412574b9b96c2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;structural&lt;/code&gt; - Indicates that the &lt;code&gt;ng-&lt;/code&gt; prefix will be added to the event class. Setting to &lt;code&gt;false&lt;/code&gt; or omitting will turn &lt;code&gt;ng-EVENT&lt;/code&gt; and &lt;code&gt;ng-EVENT-active&lt;/code&gt; in &lt;code&gt;EVENT&lt;/code&gt; and &lt;code&gt;EVENT-active&lt;/code&gt;. Unused if &lt;code&gt;event&lt;/code&gt; is omitted.</source>
          <target state="translated">&lt;code&gt;structural&lt;/code&gt; -表示将 &lt;code&gt;ng-&lt;/code&gt; 前缀添加到事件类中。设置为 &lt;code&gt;false&lt;/code&gt; 或遗漏会变成 &lt;code&gt;ng-EVENT&lt;/code&gt; 和 &lt;code&gt;ng-EVENT-active&lt;/code&gt; 在 &lt;code&gt;EVENT&lt;/code&gt; 和 &lt;code&gt;EVENT-active&lt;/code&gt; 。如果省略 &lt;code&gt;event&lt;/code&gt; ，则不使用。</target>
        </trans-unit>
        <trans-unit id="8544943dc901d069323d20e2530a0add4888fae8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;svg&lt;/code&gt; - The root nodes in the template are SVG elements (excluding &lt;code&gt;&amp;lt;math&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;svg&lt;/code&gt; -模板中的根节点是SVG元素（ &lt;code&gt;&amp;lt;math&amp;gt;&lt;/code&gt; 除外）。</target>
        </trans-unit>
        <trans-unit id="786046ffc4529a4e093a1303dfa9a1ee93ec701f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;svgElements&lt;/code&gt;: This is similar to &lt;code&gt;htmlElements&lt;/code&gt;, but for SVG elements. This list is only taken into account if SVG is &lt;a href=&quot;%24sanitizeprovider#enableSvg.html&quot;&gt;enabled&lt;/a&gt; for &lt;code&gt;$sanitize&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;svgElements&lt;/code&gt; ：这类似于 &lt;code&gt;htmlElements&lt;/code&gt; ，但用于SVG元素。仅当为 &lt;code&gt;$sanitize&lt;/code&gt; &lt;a href=&quot;%24sanitizeprovider#enableSvg.html&quot;&gt;启用&lt;/a&gt; SVG时，才考虑此列表。</target>
        </trans-unit>
        <trans-unit id="a9515e5426c7450b18d455b87febbca653c16d06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tAttrs&lt;/code&gt; - template attributes - Normalized list of attributes declared on this element shared between all directive compile functions.</source>
          <target state="translated">&lt;code&gt;tAttrs&lt;/code&gt; -模板属性-在所有指令编译函数之间共享的，在此元素上声明的属性的规范化列表。</target>
        </trans-unit>
        <trans-unit id="640b5f8f1c6fb750f1bcf0be926a6f7cccf24306" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tElement&lt;/code&gt; - template element - The element where the directive has been declared. It is safe to do template transformation on the element and child elements only.</source>
          <target state="translated">&lt;code&gt;tElement&lt;/code&gt; -模板元素-声明了指令的元素。仅对元素和子元素执行模板转换是安全的。</target>
        </trans-unit>
        <trans-unit id="72d0667731893a2127528a59238286dff75d5787" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;targetScope&lt;/code&gt; - &lt;code&gt;{Scope}&lt;/code&gt;: the scope on which the event was &lt;code&gt;$emit&lt;/code&gt;-ed or &lt;code&gt;$broadcast&lt;/code&gt;-ed.</source>
          <target state="translated">&lt;code&gt;targetScope&lt;/code&gt; - &lt;code&gt;{Scope}&lt;/code&gt; ：范围在其上该事件是 &lt;code&gt;$emit&lt;/code&gt; -ed或 &lt;code&gt;$broadcast&lt;/code&gt; -ed。</target>
        </trans-unit>
        <trans-unit id="d9d78aa42995096a3743024a59381d174315f3db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;template&lt;/code&gt; &amp;ndash; &lt;code&gt;{(string|Function)=}&lt;/code&gt; &amp;ndash; html template as a string or a function that returns an html template as a string which should be used by &lt;a href=&quot;../directive/ngview&quot;&gt;ngView&lt;/a&gt; or &lt;a href=&quot;../../ng/directive/nginclude&quot;&gt;ngInclude&lt;/a&gt; directives. This property takes precedence over &lt;code&gt;templateUrl&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;template&lt;/code&gt; &amp;ndash; &lt;code&gt;{(string|Function)=}&lt;/code&gt; &amp;ndash; html模板作为字符串或返回html模板作为字符串的函数，应由&lt;a href=&quot;../directive/ngview&quot;&gt;ngView&lt;/a&gt;或&lt;a href=&quot;../../ng/directive/nginclude&quot;&gt;ngInclude&lt;/a&gt;指令使用。此属性优先于 &lt;code&gt;templateUrl&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b847eeb83e71a1ccc9378c6a72a5b750311dd281" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;template&lt;/code&gt; &amp;ndash; &lt;code&gt;{string=|function()=}&lt;/code&gt; &amp;ndash; html template as a string or a function that returns an html template as a string which should be used as the contents of this component. Empty string by default.</source>
          <target state="translated">&lt;code&gt;template&lt;/code&gt; &amp;ndash; &lt;code&gt;{string=|function()=}&lt;/code&gt; &amp;ndash; html模板作为字符串或返回html模板作为字符串的函数，该函数应用作此组件的内容。默认为空字符串。</target>
        </trans-unit>
        <trans-unit id="0429ae61ad47c1536dc730ee0afecadf00bc6957" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;templateUrl&lt;/code&gt; &amp;ndash; &lt;code&gt;{(string|Function)=}&lt;/code&gt; &amp;ndash; path or function that returns a path to an html template that should be used by &lt;a href=&quot;../directive/ngview&quot;&gt;ngView&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;templateUrl&lt;/code&gt; &amp;ndash; &lt;code&gt;{(string|Function)=}&lt;/code&gt; &amp;ndash;路径或函数，返回&lt;a href=&quot;../directive/ngview&quot;&gt;ngView&lt;/a&gt;应使用的html模板的路径。</target>
        </trans-unit>
        <trans-unit id="1f165003a7442135289074eae552a6c8ec021d4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;templateUrl&lt;/code&gt; &amp;ndash; &lt;code&gt;{string=|function()=}&lt;/code&gt; &amp;ndash; path or function that returns a path to an html template that should be used as the contents of this component.</source>
          <target state="translated">&lt;code&gt;templateUrl&lt;/code&gt; &amp;ndash; &lt;code&gt;{string=|function()=}&lt;/code&gt; &amp;ndash;路径或函数，该路径或函数返回html模板的路径，该路径应用作此组件的内容。</target>
        </trans-unit>
        <trans-unit id="ee42cbd3774e590fa40f0b97c140df868c1c1461" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;templateUrl&lt;/code&gt; can also be a function which returns the URL of an HTML template to be loaded and used for the directive. AngularJS will call the &lt;code&gt;templateUrl&lt;/code&gt; function with two parameters: the element that the directive was called on, and an &lt;code&gt;attr&lt;/code&gt; object associated with that element.</source>
          <target state="translated">&lt;code&gt;templateUrl&lt;/code&gt; 也可以是一个函数，该函数返回要加载并用于指令的HTML模板的URL。AngularJS将使用两个参数调用 &lt;code&gt;templateUrl&lt;/code&gt; 函数：调用了该指令的元素以及与该元素关联的 &lt;code&gt;attr&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="ea870e647b9ea89f6e12722c036f7bb3d691164f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;then(successCallback, [errorCallback], [notifyCallback])&lt;/code&gt; &amp;ndash; regardless of when the promise was or will be resolved or rejected, &lt;code&gt;then&lt;/code&gt; calls one of the success or error callbacks asynchronously as soon as the result is available. The callbacks are called with a single argument: the result or rejection reason. Additionally, the notify callback may be called zero or more times to provide a progress indication, before the promise is resolved or rejected.</source>
          <target state="translated">&lt;code&gt;then(successCallback, [errorCallback], [notifyCallback])&lt;/code&gt; &amp;ndash;无论何时或将要解决或拒绝promise， &lt;code&gt;then&lt;/code&gt; 在结果可用时立即异步调用成功或错误回调之一。使用单个参数调用回调：结果或拒绝原因。另外，在解决或拒绝承诺之前，通知回调可能被调用零次或多次以提供进度指示。</target>
        </trans-unit>
        <trans-unit id="d443cc9d4071a44cd6714aa6913e16543351cdf7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;this&lt;/code&gt; for chaining</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; 用于链接</target>
        </trans-unit>
        <trans-unit id="d2d6fd71723f49cd4579527a989629fb9d4d03d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;timeSecondsFormat&lt;/code&gt;: Defines if the &lt;code&gt;time&lt;/code&gt; and &lt;code&gt;datetime-local&lt;/code&gt; types should show seconds and milliseconds. The option follows the format string of &lt;a href=&quot;../filter/date&quot;&gt;date filter&lt;/a&gt;. By default, the options is &lt;code&gt;undefined&lt;/code&gt; which is equal to &lt;code&gt;'ss.sss'&lt;/code&gt; (seconds and milliseconds). The other options are &lt;code&gt;'ss'&lt;/code&gt; (strips milliseconds), and &lt;code&gt;''&lt;/code&gt; (empty string), which strips both seconds and milliseconds. Note that browsers that support &lt;code&gt;time&lt;/code&gt; and &lt;code&gt;datetime-local&lt;/code&gt; require the hour and minutes part of the time string, and may show the value differently in the user interface. &lt;a href=&quot;ngmodeloptions#formatting-the-value-of-time-and-datetime-local-.html&quot;&gt;See the example&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;timeSecondsFormat&lt;/code&gt; ：定义 &lt;code&gt;datetime-local&lt;/code&gt; &lt;code&gt;time&lt;/code&gt; 和日期时间类型是否应显示秒和毫秒。该选项遵循&lt;a href=&quot;../filter/date&quot;&gt;日期过滤器&lt;/a&gt;的格式字符串。默认情况下，选项是 &lt;code&gt;undefined&lt;/code&gt; ，等于 &lt;code&gt;'ss.sss'&lt;/code&gt; （秒和毫秒）。其他选项是 &lt;code&gt;'ss'&lt;/code&gt; （小数毫秒）和 &lt;code&gt;''&lt;/code&gt; （空字符串），这将同时去除秒和毫秒。请注意，支持 &lt;code&gt;time&lt;/code&gt; 和 &lt;code&gt;datetime-local&lt;/code&gt; 时间的浏览器需要时间字符串的小时和分钟部分，并且在用户界面中可能会显示不同的值。&lt;a href=&quot;ngmodeloptions#formatting-the-value-of-time-and-datetime-local-.html&quot;&gt;参见示例&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="228f9fa9bef945471bcee9dc6f546084669857e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;timeStripZeroSeconds&lt;/code&gt;: Defines if the &lt;code&gt;time&lt;/code&gt; and &lt;code&gt;datetime-local&lt;/code&gt; types should strip the seconds and milliseconds from the formatted value if they are zero. This option is applied after &lt;code&gt;timeSecondsFormat&lt;/code&gt;. This option can be used to make the formatting consistent over different browsers, as some browsers with support for &lt;code&gt;time&lt;/code&gt; will natively hide the milliseconds and seconds if they are zero, but others won't, and browsers that don't implement these input types will always show the full string. &lt;a href=&quot;ngmodeloptions#formatting-the-value-of-time-and-datetime-local-.html&quot;&gt;See the example&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;timeStripZeroSeconds&lt;/code&gt; ：定义 &lt;code&gt;time&lt;/code&gt; 和 &lt;code&gt;datetime-local&lt;/code&gt; 时间类型是否应从格式值中减去秒和毫秒（如果它们为零）。此选项在 &lt;code&gt;timeSecondsFormat&lt;/code&gt; 之后应用。此选项可用于使格式在不同的浏览器上保持一致，因为某些支持 &lt;code&gt;time&lt;/code&gt; 浏览器将在本地隐藏毫秒和秒（如果它们为零），而其他的则不会，而未实现这些输入类型的浏览器将隐藏毫秒和秒。始终显示完整的字符串。&lt;a href=&quot;ngmodeloptions#formatting-the-value-of-time-and-datetime-local-.html&quot;&gt;参见示例&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a8cf0b2913a0db255f8c2c6df6d233dc95a24ffc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;timezone&lt;/code&gt;: Defines the timezone to be used to read/write the &lt;code&gt;Date&lt;/code&gt; instance in the model for &lt;code&gt;&amp;lt;input type=&quot;date&quot; /&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;input type=&quot;time&quot; /&amp;gt;&lt;/code&gt;, ... . It understands UTC/GMT and the continental US time zone abbreviations, but for general use, use a time zone offset, for example, &lt;code&gt;'+0430'&lt;/code&gt; (4 hours, 30 minutes east of the Greenwich meridian) If not specified, the timezone of the browser will be used. Note that changing the timezone will have no effect on the current date, and is only applied after the next input / model change.</source>
          <target state="translated">&lt;code&gt;timezone&lt;/code&gt; ：为 &lt;code&gt;&amp;lt;input type=&quot;date&quot; /&amp;gt;&lt;/code&gt; ， &lt;code&gt;&amp;lt;input type=&quot;time&quot; /&amp;gt;&lt;/code&gt; ，... 定义用于在模型中读写 &lt;code&gt;Date&lt;/code&gt; 实例的时区。它了解UTC / GMT和美国大陆时区的缩写，但是对于一般用途，请使用时区偏移量，例如 &lt;code&gt;'+0430'&lt;/code&gt; （格林威治子午线以东4小时30分钟）。如果未指定，则为使用浏览器。请注意，更改时区将对当前日期无效，并且仅在下一次输入/型号更改后才应用。</target>
        </trans-unit>
        <trans-unit id="1387f6c816d68d8c1111f49ddff0725feea9741e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to&lt;/code&gt; - The ending CSS styles (a key/value object) that will be applied across the animation via a CSS transition.</source>
          <target state="translated">&lt;code&gt;to&lt;/code&gt; -结束CSS样式（键/值对象），该样式将通过CSS过渡应用于整个动画。</target>
        </trans-unit>
        <trans-unit id="3d33e6e6f66d624736af3942dc236de0a529ac2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toJSON&lt;/code&gt;: It returns a simple object without any of the extra properties added as part of the Resource API. This object can be serialized through &lt;a href=&quot;../../ng/function/angular.tojson&quot;&gt;&lt;code&gt;angular.toJson&lt;/code&gt;&lt;/a&gt; safely without attaching AngularJS-specific fields. Notice that &lt;code&gt;JSON.stringify&lt;/code&gt; (and &lt;code&gt;angular.toJson&lt;/code&gt;) automatically use this method when serializing a Resource instance (see &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#toJSON%28%29_behavior&quot;&gt;MDN&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;toJSON&lt;/code&gt; ：它返回一个简单的对象，而没有作为Resource API的一部分添加任何额外的属性。无需附加AngularJS特定字段，&lt;a href=&quot;../../ng/function/angular.tojson&quot;&gt; &lt;code&gt;angular.toJson&lt;/code&gt; &lt;/a&gt;安全地通过angular.toJson序列化此对象。请注意，序列化Resource实例时， &lt;code&gt;JSON.stringify&lt;/code&gt; （和 &lt;code&gt;angular.toJson&lt;/code&gt; ）自动使用此方法（请参见&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#toJSON%28%29_behavior&quot;&gt;MDN&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="b268b94b454ee57eb30bc251dc84638c344e172e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;trackexpr&lt;/code&gt;: Used when working with an array of objects. The result of this expression will be used to identify the objects in the array. The &lt;code&gt;trackexpr&lt;/code&gt; will most likely refer to the &lt;code&gt;value&lt;/code&gt; variable (e.g. &lt;code&gt;value.propertyName&lt;/code&gt;). With this the selection is preserved even when the options are recreated (e.g. reloaded from the server).</source>
          <target state="translated">&lt;code&gt;trackexpr&lt;/code&gt; ：在处理对象数组时使用。该表达式的结果将用于标识数组中的对象。该 &lt;code&gt;trackexpr&lt;/code&gt; 将最有可能参考 &lt;code&gt;value&lt;/code&gt; 变量（如 &lt;code&gt;value.propertyName&lt;/code&gt; ）。这样，即使重新创建选项（例如，从服务器重新加载），选择也会保留。</target>
        </trans-unit>
        <trans-unit id="3f094ebe4b7290c61e9499ebb0b6c3b80541f847" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transclude&lt;/code&gt; &amp;ndash; &lt;code&gt;{boolean=}&lt;/code&gt; &amp;ndash; whether &lt;a href=&quot;../service/%24compile#transclusion.html&quot;&gt;content transclusion&lt;/a&gt; is enabled. Disabled by default.</source>
          <target state="translated">&lt;code&gt;transclude&lt;/code&gt; &amp;ndash; &lt;code&gt;{boolean=}&lt;/code&gt; &amp;ndash;是否启用&lt;a href=&quot;../service/%24compile#transclusion.html&quot;&gt;内容嵌入&lt;/a&gt;。默认禁用。</target>
        </trans-unit>
        <trans-unit id="847676ced2371e533c2148870bad52b1da205f7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transclude&lt;/code&gt; - [&lt;em&gt;DEPRECATED&lt;/em&gt;!] A transclude linking function: &lt;code&gt;function(scope, cloneLinkingFn)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;transclude&lt;/code&gt; - [已&lt;em&gt;弃用&lt;/em&gt;！]一个 &lt;code&gt;function(scope, cloneLinkingFn)&lt;/code&gt; 链接函数：function（scope，cloneLinkingFn）</target>
        </trans-unit>
        <trans-unit id="65712ae8d4a77115277acd1f52e30f6601b939d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transcludeControllers&lt;/code&gt; - an object hash with keys that map controller names to a hash with the key &lt;code&gt;instance&lt;/code&gt;, which maps to the controller instance; if given, it will make the controllers available to directives on the compileNode:</source>
          <target state="translated">&lt;code&gt;transcludeControllers&lt;/code&gt; -具有键的对象散列，该键将控制器名称映射到具有键 &lt;code&gt;instance&lt;/code&gt; 的哈希，该实例映射到控制器实例；如果给定，它将使控制器可用于compileNode上的指令：</target>
        </trans-unit>
        <trans-unit id="37d92d08b7ef416b01c5f305b2c61d07d365d9cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transcludeFn&lt;/code&gt; - A transclude linking function pre-bound to the correct transclusion scope. This is the same as the &lt;code&gt;$transclude&lt;/code&gt; parameter of directive controllers, see &lt;a href=&quot;%24compile#-controller-.html&quot;&gt;the controller section for details&lt;/a&gt;. &lt;code&gt;function([scope], cloneLinkingFn, futureParentElement)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;transcludeFn&lt;/code&gt; -预绑定到正确的包含范围的包含链接功能。这与指令控制器的 &lt;code&gt;$transclude&lt;/code&gt; 参数相同，&lt;a href=&quot;%24compile#-controller-.html&quot;&gt;有关详细信息&lt;/a&gt;，请参见控制器部分。 &lt;code&gt;function([scope], cloneLinkingFn, futureParentElement)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d16ff7ca5be8284ed85e6eb4694c10ec231342f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transcludeFn&lt;/code&gt; is a transclude linking function pre-bound to the correct transclusion scope.</source>
          <target state="translated">&lt;code&gt;transcludeFn&lt;/code&gt; 是预先绑定到正确包含范围的包含链接功能。</target>
        </trans-unit>
        <trans-unit id="ffb35396e95b58bb7c8f48a2fbe498f67c401065" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transitionStyle&lt;/code&gt; - The raw CSS transition style that will be used (e.g. &lt;code&gt;1s linear all&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;transitionStyle&lt;/code&gt; -将使用的原始CSS过渡样式（例如 &lt;code&gt;1s linear all&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="acb77224c6ceb61fd094da2474b6ea580eb395e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; - the template will replace the directive's element.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; -模板将替换指令的元素。</target>
        </trans-unit>
        <trans-unit id="d1f524d3ded436a245165aaa4f109e71bf8b5f91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; - transclude the content (i.e. the child nodes) of the directive's element.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; - transclude指令的元素的含量（即子节点）。</target>
        </trans-unit>
        <trans-unit id="7564f800bc370a2796451ba70257f53a5325b839" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if injector has given service.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 如果喷油器已送修，则为true。</target>
        </trans-unit>
        <trans-unit id="0d4ccfa8d3922c854b6dd6344e7f34130ef1d616" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;{enabled: true}&lt;/code&gt; - see &lt;a href=&quot;%24location#html5-mode.html&quot;&gt;HTML5 mode&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 或 &lt;code&gt;{enabled: true}&lt;/code&gt; -参见&lt;a href=&quot;%24location#html5-mode.html&quot;&gt;HTML5模式&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="af162df4dc94fd9daba3aafea0161c62a70863fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt;: A shorthand for &lt;code&gt;function(actual, expected) { return angular.equals(actual, expected)}&lt;/code&gt;. This is essentially strict comparison of expected and actual.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; ： &lt;code&gt;function(actual, expected) { return angular.equals(actual, expected)}&lt;/code&gt; 简写{返回angular.equals（实际，期望）}。这本质上是期望值与实际值的严格比较。</target>
        </trans-unit>
        <trans-unit id="fbe4c50fd0a9abce8570e4e958c2d4e2146509ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;undefined&lt;/code&gt; and &lt;code&gt;null&lt;/code&gt; are converted to &lt;code&gt;''&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;undefined&lt;/code&gt; 和 &lt;code&gt;null&lt;/code&gt; 转换为 &lt;code&gt;''&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5c98b8e988d02e1ba1e97b4721ab935dd4f217c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;updateOn&lt;/code&gt;: string specifying which event should the input be bound to. You can set several events using an space delimited list. There is a special event called &lt;code&gt;default&lt;/code&gt; that matches the default events belonging to the control. These are the events that are bound to the control, and when fired, update the &lt;code&gt;$viewValue&lt;/code&gt; via &lt;code&gt;$setViewValue&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;updateOn&lt;/code&gt; ：指定输入应绑定到哪个事件的字符串。您可以使用空格分隔的列表设置多个事件。有一个名为 &lt;code&gt;default&lt;/code&gt; 的特殊事件，它与属于控件的默认事件匹配。这些是绑定到控件的事件，并发射时，更新 &lt;code&gt;$viewValue&lt;/code&gt; 通过 &lt;code&gt;$setViewValue&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="29d95699dd6c95d5464de3151d2264f965e177b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;urlErrorParamsEnabled&lt;/code&gt;&lt;strong&gt;{Boolean}&lt;/strong&gt; - Specifies wether the generated error url will contain the parameters of the thrown error. Disabling the parameters can be useful if the generated error url is very long.</source>
          <target state="translated">&lt;code&gt;urlErrorParamsEnabled&lt;/code&gt; &lt;strong&gt;{Boolean}&lt;/strong&gt; -指定生成的错误url是否包含抛出的错误的参数。如果生成的错误网址很长，则禁用参数可能很有用。</target>
        </trans-unit>
        <trans-unit id="a357e96da249e2f1af903ec3f3e684cad3bb821c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;urlErrorParamsEnabled&lt;/code&gt;&lt;strong&gt;{Boolean}&lt;/strong&gt; - Specifies whether the generated error url will contain the parameters of the thrown error. Disabling the parameters can be useful if the generated error url is very long.</source>
          <target state="translated">&lt;code&gt;urlErrorParamsEnabled&lt;/code&gt; &lt;strong&gt;{Boolean}&lt;/strong&gt; - Specifies whether the generated error url will contain the parameters of the thrown error. Disabling the parameters can be useful if the generated error url is very long.</target>
        </trans-unit>
        <trans-unit id="3eb74c0fa899bba332ead017a3a8b0909948754f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt;: local variable which will refer to each item in the &lt;code&gt;array&lt;/code&gt; or each property value of &lt;code&gt;object&lt;/code&gt; during iteration.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; ：局部变量，它将在迭代期间引用 &lt;code&gt;array&lt;/code&gt; 每个项目或 &lt;code&gt;object&lt;/code&gt; 每个属性值。</target>
        </trans-unit>
        <trans-unit id="94509a804195595227a5cfe6a6953e645a82587d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;variable in expression as alias_expression&lt;/code&gt; &amp;ndash; You can also provide an optional alias expression which will then store the intermediate results of the repeater after the filters have been applied. Typically this is used to render a special message when a filter is active on the repeater, but the filtered result set is empty.</source>
          <target state="translated">&lt;code&gt;variable in expression as alias_expression&lt;/code&gt; &amp;ndash;您还可以提供一个可选的别名表达式，该表达式将在应用过滤器后存储转发器的中间结果。通常，当转发器上的过滤器处于活动状态但过滤的结果集为空时，此消息用于呈现特殊消息。</target>
        </trans-unit>
        <trans-unit id="da0e272e8acc0a6195e3bcaf512b0a10321a73a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;variable in expression track by tracking_expression&lt;/code&gt; &amp;ndash; You can also provide an optional tracking expression which can be used to associate the objects in the collection with the DOM elements. If no tracking expression is specified, ng-repeat associates elements by identity. It is an error to have more than one tracking expression value resolve to the same key. (This would mean that two distinct objects are mapped to the same DOM element, which is not possible.)</source>
          <target state="translated">&lt;code&gt;variable in expression track by tracking_expression&lt;/code&gt; &amp;ndash;您还可以提供一个可选的跟踪表达式，该表达式可用于将集合中的对象与DOM元素相关联。如果未指定跟踪表达式，则ng-repeat通过标识关联元素。多个跟踪表达式值解析为同一键是错误的。（这意味着将两个不同的对象映射到同一DOM元素，这是不可能的。）</target>
        </trans-unit>
        <trans-unit id="92f234e3ec0cb367320a3a220f4b20ef2167912e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;variable in expression&lt;/code&gt; &amp;ndash; where variable is the user defined loop variable and &lt;code&gt;expression&lt;/code&gt; is a scope expression giving the collection to enumerate.</source>
          <target state="translated">&lt;code&gt;variable in expression&lt;/code&gt; 中的变量&amp;ndash;其中，变量是用户定义的循环变量，而 &lt;code&gt;expression&lt;/code&gt; 是作用域表达式，用于给出要枚举的集合。</target>
        </trans-unit>
        <trans-unit id="334ac9044b19555f1050ecb68b25a14f4bb8c986" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;which&lt;/code&gt;: &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/KeyboardEvent/which&quot;&gt;which&lt;/a&gt; for keyboard events (keydown, keypress, and keyup).</source>
          <target state="translated">&lt;code&gt;which&lt;/code&gt; ：&lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/KeyboardEvent/which&quot;&gt;该&lt;/a&gt;键盘事件（的keydown，按键和keyUp）。</target>
        </trans-unit>
        <trans-unit id="1ac658084647c61610cc182b520bbea0c2f421a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt;: x-coordinates for &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/MouseEvent&quot;&gt;MouseEvent&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/TouchEvent&quot;&gt;TouchEvent&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; ：&lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/MouseEvent&quot;&gt;MouseEvent&lt;/a&gt;和&lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/TouchEvent&quot;&gt;TouchEvent的&lt;/a&gt; x坐标。</target>
        </trans-unit>
        <trans-unit id="e77c7788c746962515a474a5d749e1a79e210076" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;y&lt;/code&gt;: y-coordinates for &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/MouseEvent&quot;&gt;MouseEvent&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/TouchEvent&quot;&gt;TouchEvent&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;y&lt;/code&gt; ：&lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/MouseEvent&quot;&gt;MouseEvent&lt;/a&gt;和&lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/TouchEvent&quot;&gt;TouchEvent的&lt;/a&gt; y坐标。</target>
        </trans-unit>
        <trans-unit id="c7e687c0043c071c6aece0047f6ecce75d19741c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yOffset&lt;/code&gt; can be specified in various ways:</source>
          <target state="translated">&lt;code&gt;yOffset&lt;/code&gt; 可以通过多种方式指定：</target>
        </trans-unit>
        <trans-unit id="a617d5ce788306d35a28f1b23deafa05516a552c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{'foo': 'bar'}&lt;/code&gt; results in &lt;code&gt;foo=bar&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;{'foo': 'bar'}&lt;/code&gt; 结果为 &lt;code&gt;foo=bar&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="40f5e12482264d458011441d8acd229f0c146c27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{'foo': Date.now()}&lt;/code&gt; results in &lt;code&gt;foo=2015-04-01T09%3A50%3A49.262Z&lt;/code&gt; (&lt;code&gt;toISOString()&lt;/code&gt; and encoded representation of a Date object)</source>
          <target state="translated">&lt;code&gt;{'foo': Date.now()}&lt;/code&gt; 结果为 &lt;code&gt;foo=2015-04-01T09%3A50%3A49.262Z&lt;/code&gt; （ &lt;code&gt;toISOString()&lt;/code&gt; 和Date对象的编码表示形式）</target>
        </trans-unit>
        <trans-unit id="57485b09d81aab721ab707b73b044a684f8e5060" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{'foo': ['bar', 'baz']}&lt;/code&gt; results in &lt;code&gt;foo=bar&amp;amp;foo=baz&lt;/code&gt; (repeated key for each array element)</source>
          <target state="translated">&lt;code&gt;{'foo': ['bar', 'baz']}&lt;/code&gt; 结果为 &lt;code&gt;foo=bar&amp;amp;foo=baz&lt;/code&gt; （每个数组元素的重复键）</target>
        </trans-unit>
        <trans-unit id="d3da24ed0f0d4b7cfaff7dad39818886793dbdd1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{'foo': {'bar':'baz'}}&lt;/code&gt; results in &lt;code&gt;foo=%7B%22bar%22%3A%22baz%22%7D&lt;/code&gt; (stringified and encoded representation of an object)</source>
          <target state="translated">&lt;code&gt;{'foo': {'bar':'baz'}}&lt;/code&gt; 结果为 &lt;code&gt;foo=%7B%22bar%22%3A%22baz%22%7D&lt;/code&gt; （对象的字符串化和编码表示）</target>
        </trans-unit>
        <trans-unit id="911108b4676c74e69e2c8a5425b9290805810576" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{..., requireBase: true/false}&lt;/code&gt; (only affects HTML5 mode) - see &lt;a href=&quot;%24location#relative-links.html&quot;&gt;Relative links&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;{..., requireBase: true/false}&lt;/code&gt; （仅影响HTML5模式）-请参阅&lt;a href=&quot;%24location#relative-links.html&quot;&gt;相对链接&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b318179a9e271f3e2ae88a0a62abd131b8304a27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{..., rewriteLinks: true/false/'string'}&lt;/code&gt; (only affects HTML5 mode) - see &lt;a href=&quot;%24location#html-link-rewriting.html&quot;&gt;HTML link rewriting&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;{..., rewriteLinks: true/false/'string'}&lt;/code&gt; （仅影响HTML5模式）-请参见&lt;a href=&quot;%24location#html-link-rewriting.html&quot;&gt;HTML链接重写&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="54f251c1df022ee72aa09d55c18a4cad4642a15c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{Array.&amp;lt;Object&amp;gt;}&lt;/code&gt; - route parameters extracted from the current &lt;code&gt;$location.path()&lt;/code&gt; by applying the current route</source>
          <target state="translated">&lt;code&gt;{Array.&amp;lt;Object&amp;gt;}&lt;/code&gt; - 通过应用当前路由从当前 &lt;code&gt;$location.path()&lt;/code&gt; 提取的路由参数</target>
        </trans-unit>
        <trans-unit id="d55397a3691fb7f16c2b68ceccf09396cffff1e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{Object.&amp;lt;string&amp;gt;}&lt;/code&gt; - route parameters extracted from the current &lt;code&gt;$location.path()&lt;/code&gt; by applying the current route templateUrl.</source>
          <target state="translated">&lt;code&gt;{Object.&amp;lt;string&amp;gt;}&lt;/code&gt; - 通过应用当前路由templateUrl 从当前 &lt;code&gt;$location.path()&lt;/code&gt; 提取的路由参数。</target>
        </trans-unit>
        <trans-unit id="5dd320208f2f8b6bd9bf61c72c4ecba3a9f5f0df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{Object}&lt;/code&gt; - current &lt;code&gt;$location.search()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;{Object}&lt;/code&gt; -当前 &lt;code&gt;$location.search()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2149ad1bd6c42b49cd543b148dfb2f6388d925cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{number=}&lt;/code&gt;&lt;code&gt;capacity&lt;/code&gt; &amp;mdash; turns the cache into LRU cache.</source>
          <target state="translated">&lt;code&gt;{number=}&lt;/code&gt; &lt;code&gt;capacity&lt;/code&gt; -将缓存变为LRU缓存。</target>
        </trans-unit>
        <trans-unit id="da407c21ae2fa7bb980f78d9a8da4ee25cc9f350" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{object}&lt;/code&gt;&lt;code&gt;info()&lt;/code&gt; &amp;mdash; Returns id, size, and options of cache.</source>
          <target state="translated">&lt;code&gt;{object}&lt;/code&gt; &lt;code&gt;info()&lt;/code&gt; &amp;mdash;返回ID，大小和缓存选项。</target>
        </trans-unit>
        <trans-unit id="3e3ad3b4a976be784d9931118a3ade95ac665494" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{string}&lt;/code&gt; - current &lt;code&gt;$location.path()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;{string}&lt;/code&gt; -当前的 &lt;code&gt;$location.path()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c522d995b45e3440f20bd443030478095e596984" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{void}&lt;/code&gt;&lt;code&gt;destroy()&lt;/code&gt; &amp;mdash; Removes references to this cache from $cacheFactory.</source>
          <target state="translated">&lt;code&gt;{void}&lt;/code&gt; &lt;code&gt;destroy()&lt;/code&gt; -从$ cacheFactory删除对此缓存的引用。</target>
        </trans-unit>
        <trans-unit id="e4a6fd63772f52f96e9f426f81d54c33fb4eb1c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{void}&lt;/code&gt;&lt;code&gt;remove({string} key)&lt;/code&gt; &amp;mdash; Removes a key-value pair from the cache.</source>
          <target state="translated">&lt;code&gt;{void}&lt;/code&gt; &lt;code&gt;remove({string} key)&lt;/code&gt; &amp;mdash;从缓存中删除一个键值对。</target>
        </trans-unit>
        <trans-unit id="18479675af1aa11b86509fba5caaf0f831d9057b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{void}&lt;/code&gt;&lt;code&gt;removeAll()&lt;/code&gt; &amp;mdash; Removes all cached values.</source>
          <target state="translated">&lt;code&gt;{void}&lt;/code&gt; &lt;code&gt;removeAll()&lt;/code&gt; &amp;mdash;删除所有缓存的值。</target>
        </trans-unit>
        <trans-unit id="1d36ed26057d8216f3c08e045608a09b11e71945" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{{*}}&lt;/code&gt;&lt;code&gt;get({string} key)&lt;/code&gt; &amp;mdash; Returns cached value for &lt;code&gt;key&lt;/code&gt; or undefined for cache miss.</source>
          <target state="translated">&lt;code&gt;{{*}}&lt;/code&gt; &lt;code&gt;get({string} key)&lt;/code&gt; &amp;mdash;返回 &lt;code&gt;key&lt;/code&gt; 缓存值，或者为缓存未命中返回未定义的值。</target>
        </trans-unit>
        <trans-unit id="a7970ce53d560ba63cd690ee2c2257e390612fa4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{{*}}&lt;/code&gt;&lt;code&gt;put({string} key, {*} value)&lt;/code&gt; &amp;mdash; Puts a new key-value pair into the cache and returns it.</source>
          <target state="translated">&lt;code&gt;{{*}}&lt;/code&gt; &lt;code&gt;put({string} key, {*} value)&lt;/code&gt; -将新的键值对放入缓存并返回。</target>
        </trans-unit>
        <trans-unit id="c158b45018b20241b7d64f0e6fb6c158205d5d3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{{user.name}}&lt;/code&gt; matches the &lt;a href=&quot;../api/ng/service/%24interpolate&quot;&gt;interpolation directive&lt;/a&gt; and &lt;code&gt;ng-repeat&lt;/code&gt; matches the &lt;a href=&quot;../api/ng/directive/ngrepeat&quot;&gt;&lt;code&gt;ngRepeat&lt;/code&gt; directive&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;{{user.name}}&lt;/code&gt; 匹配&lt;a href=&quot;../api/ng/service/%24interpolate&quot;&gt;插值指令&lt;/a&gt;， &lt;code&gt;ng-repeat&lt;/code&gt; 匹配&lt;a href=&quot;../api/ng/directive/ngrepeat&quot;&gt; &lt;code&gt;ngRepeat&lt;/code&gt; 指令&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e726282d380a1534e9fad60131be5ac0b29e3297" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;$index&lt;/em&gt;: This special property tracks the collection items by their index, and re-uses the DOM elements that match that index, e.g. &lt;code&gt;item in items track by $index&lt;/code&gt;. This can be used for a performance improvement if no unique identfier is available and the identity of the collection items cannot be easily computed. It also allows duplicates.</source>
          <target state="translated">&lt;em&gt;$ index&lt;/em&gt;：此特殊属性按集合索引跟踪集合项，并重复使用与该索引匹配的DOM元素，例如 &lt;code&gt;item in items track by $index&lt;/code&gt; 。如果没有唯一的标识符，并且收集项目的身份无法轻松计算，则可以将其用于提高性能。它还允许重复。</target>
        </trans-unit>
        <trans-unit id="a044b72eb8a0781c9343b5af12f792aab95c9bcb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(default: 0)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;（默认值：0）&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e751ce11ad956dd90cd36a0afb9b0b1dcbe4b08c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(default: 2)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;（默认值：2）&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a816a476b72a253b7763dfcfe1c04c484bed8eaa" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(default: false)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;（默认值：false）&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="aa5362d88f02d84c0f6072e31087130279fa90f8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(default: this)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;（默认值：此）&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="98d2aadf95d2d40783636f5c4b85be8f3d958303" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(default: true)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;（默认值：true）&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cbb24e41dd32901d004d12d257493c3c5c0bda11" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(optional)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;(optional)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="754ecad7a95e3b7f4e5db644ceb0b025a5bf0881" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Accessing normalized attribute names:&lt;/em&gt; Directives like 'ngBind' can be expressed in many ways: 'ng:bind', &lt;code&gt;data-ng-bind&lt;/code&gt;, or 'x-ng-bind'. The attributes object allows for normalized access to the attributes.</source>
          <target state="translated">&lt;em&gt;Accessing normalized attribute names:&lt;/em&gt; Directives like 'ngBind' can be expressed in many ways: 'ng:bind', &lt;code&gt;data-ng-bind&lt;/code&gt; , or 'x-ng-bind'. The attributes object allows for normalized access to the attributes.</target>
        </trans-unit>
        <trans-unit id="6a131b596ef5d4c5c10460c2653d9d85004ad11d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Accessing normalized attribute names:&lt;/em&gt; Directives like &lt;code&gt;ngBind&lt;/code&gt; can be expressed in many ways: &lt;code&gt;ng:bind&lt;/code&gt;, &lt;code&gt;data-ng-bind&lt;/code&gt;, or &lt;code&gt;x-ng-bind&lt;/code&gt;. The attributes object allows for normalized access to the attributes.</source>
          <target state="translated">&lt;em&gt;Accessing normalized attribute names:&lt;/em&gt; Directives like &lt;code&gt;ngBind&lt;/code&gt; can be expressed in many ways: &lt;code&gt;ng:bind&lt;/code&gt; , &lt;code&gt;data-ng-bind&lt;/code&gt; , or &lt;code&gt;x-ng-bind&lt;/code&gt; . The attributes object allows for normalized access to the attributes.</target>
        </trans-unit>
        <trans-unit id="e111c27e75a56741f56869876541081c8dedd0a3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Caveat&lt;/em&gt;: While regular expressions are powerful and offer great flexibility, their syntax (and all the inevitable escaping) makes them &lt;em&gt;harder to maintain&lt;/em&gt;. It's easy to accidentally introduce a bug when one updates a complex expression (imho, all regexes should have good test coverage). For instance, the use of &lt;code&gt;.&lt;/code&gt; in the regex is correct only in a small number of cases. A &lt;code&gt;.&lt;/code&gt; character in the regex used when matching the scheme or a subdomain could be matched against a &lt;code&gt;:&lt;/code&gt; or literal &lt;code&gt;.&lt;/code&gt; that was likely not intended. It is highly recommended to use the string patterns and only fall back to regular expressions as a last resort.</source>
          <target state="translated">&lt;em&gt;注意&lt;/em&gt;：尽管正则表达式功能强大且具有很大的灵活性，但它们的语法（以及所有不可避免的转义）使它们&lt;em&gt;难以维护&lt;/em&gt;。当一个人更新一个复杂的表达式时，很容易意外地引入一个错误（恕我直言，所有正则表达式都应具有良好的测试覆盖率）。例如，使用 &lt;code&gt;.&lt;/code&gt; 正则表达式中的&amp;ldquo;仅在少数情况下是正确的&amp;rdquo;。一 &lt;code&gt;.&lt;/code&gt; 匹配方案或子域时使用的正则表达式中的字符可以与 &lt;code&gt;:&lt;/code&gt; 或原义字符匹配 &lt;code&gt;.&lt;/code&gt; 那可能不是故意的。强烈建议使用字符串模式，并且只有在万不得已时才使用正则表达式。</target>
        </trans-unit>
        <trans-unit id="e30982b90f66fca844979a6a9a4f7586be2a1a77" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Custom Expression&lt;/em&gt;: It is possible to use any AngularJS expression to compute the tracking id, for example with a function, or using a property on the collection items. &lt;code&gt;item in items track by item.id&lt;/code&gt; is a typical pattern when the items have a unique identifier, e.g. database id. In this case the object identity does not matter. Two objects are considered equivalent as long as their &lt;code&gt;id&lt;/code&gt; property is same. Tracking by unique identifier is the most performant way and should be used whenever possible.</source>
          <target state="translated">&lt;em&gt;自定义表达式&lt;/em&gt;：可以使用任何AngularJS表达式来计算跟踪ID，例如使用函数或使用收集项上的属性。当项目具有唯一标识符（例如数据库ID）时， &lt;code&gt;item in items track by item.id&lt;/code&gt; 是一种典型模式。在这种情况下，对象身份无关紧要。只要两个对象的 &lt;code&gt;id&lt;/code&gt; 属性相同，就认为它们是等效的。通过唯一标识符进行跟踪是最有效的方式，应尽可能使用它。</target>
        </trans-unit>
        <trans-unit id="fb6033f7c259e56bf4d1d68342cdc278b40229d9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default tracking: $id()&lt;/em&gt;: &lt;code&gt;item in items&lt;/code&gt; is equivalent to &lt;code&gt;item in items track by $id(item)&lt;/code&gt;. This implies that the DOM elements will be associated by item identity in the collection.</source>
          <target state="translated">&lt;em&gt;默认跟踪：$ id（）&lt;/em&gt;： &lt;code&gt;item in items&lt;/code&gt; 等同于 &lt;code&gt;item in items track by $id(item)&lt;/code&gt; 。这意味着DOM元素将通过集合中的项目标识关联。</target>
        </trans-unit>
        <trans-unit id="b852f0315e4ce34566ab5c876166ae5f304785c5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Directive inter-communication:&lt;/em&gt; All directives share the same instance of the attributes object which allows the directives to use the attributes object as inter directive communication.</source>
          <target state="translated">&lt;em&gt;指令间通信：&lt;/em&gt;所有指令共享属性对象的相同实例，这允许指令将属性对象用作指令间通信。</target>
        </trans-unit>
        <trans-unit id="dacb1691370dfd3920557255152348a22cf3b5d5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NOTE&lt;/em&gt;: This function is also published on window for easy access.</source>
          <target state="translated">&lt;em&gt;注意&lt;/em&gt;：此功能也发布在窗口上，以方便访问。</target>
        </trans-unit>
        <trans-unit id="b596967063bc267febec1b76dc2c374401a146b1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NOTE&lt;/em&gt;: This function is declared ONLY WHEN running tests with jasmine or mocha</source>
          <target state="translated">&lt;em&gt;注意&lt;/em&gt;：仅当使用茉莉或摩卡咖啡运行测试时，才声明此功能</target>
        </trans-unit>
        <trans-unit id="c0d3c19141a200045b21b9fcad67eb34dedcb2de" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NOTE&lt;/em&gt;: This is not an injectable instance, just a globally available function.</source>
          <target state="translated">&lt;em&gt;注意&lt;/em&gt;：这不是可注入实例，只是全局可用的函数。</target>
        </trans-unit>
        <trans-unit id="e8fbdfd4557770e7bbafe78d8a96bbbde024637b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NOTE&lt;/em&gt;: this is not an injectable instance, just a globally available mock class of &lt;code&gt;Date&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;注意&lt;/em&gt;：这不是可注入的实例，只是 &lt;code&gt;Date&lt;/code&gt; 的全局可用模拟类。</target>
        </trans-unit>
        <trans-unit id="ea949e8b6b51b83ce83927bd1d2ab8eed8069172" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note: Child links, buttons or other interactive controls must also be removed from the tab order.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;注意：子链接，按钮或其他交互式控件也必须从选项卡顺序中删除。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ca1bdf6fca422a6f0c552750122a3a2b40e96654" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note: This directive is only available in the &lt;code&gt;ng-csp&lt;/code&gt; and &lt;code&gt;data-ng-csp&lt;/code&gt; attribute form.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;注意：此伪指令仅在 &lt;code&gt;ng-csp&lt;/code&gt; 和 &lt;code&gt;data-ng-csp&lt;/code&gt; 属性形式下可用。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="77a2682333273242b4c5e6bda8deff61d9bd60c5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Observing interpolated attributes:&lt;/em&gt; Use &lt;code&gt;$observe&lt;/code&gt; to observe the value changes of attributes that contain interpolation (e.g. &lt;code&gt;src=&quot;{{bar}}&quot;&lt;/code&gt;). Not only is this very efficient but it's also the only way to easily get the actual value because during the linking phase the interpolation hasn't been evaluated yet and so the value is at this time set to &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;观察插值属性：&lt;/em&gt;使用 &lt;code&gt;$observe&lt;/code&gt; 观察包含插值的属性的值变化（例如 &lt;code&gt;src=&quot;{{bar}}&quot;&lt;/code&gt; ）。这不仅非常有效，而且还是轻松获取实际值的唯一方法，因为在链接阶段尚未评估插值，因此此时将值设置为 &lt;code&gt;undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5aae482cd8880389624b85fc425ae110f5121a77" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Please note&lt;/em&gt;: The browser's &lt;a href=&quot;https://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_XMLHttpRequest&quot;&gt;Same Origin Policy&lt;/a&gt; and &lt;a href=&quot;http://www.w3.org/TR/cors/&quot;&gt;Cross-Origin Resource Sharing (CORS)&lt;/a&gt; policy apply in addition to this and may further restrict whether the template is successfully loaded. This means that without the right CORS policy, loading templates from a different domain won't work on all browsers. Also, loading templates from &lt;code&gt;file://&lt;/code&gt; URL does not work on some browsers.</source>
          <target state="translated">&lt;em&gt;请注意&lt;/em&gt;：浏览器的&amp;ldquo; &lt;a href=&quot;https://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_XMLHttpRequest&quot;&gt;相同来源策略&amp;rdquo;&lt;/a&gt;和&amp;ldquo; &lt;a href=&quot;http://www.w3.org/TR/cors/&quot;&gt;跨域资源共享（CORS）&amp;rdquo;&lt;/a&gt;策略除此以外还适用，并且可能进一步限制模板是否成功加载。这意味着，如果没有正确的CORS策略，则无法在所有浏览器上都无法从其他域加载模板。同样，从 &lt;code&gt;file://&lt;/code&gt; URL 加载模板在某些浏览器上不起作用。</target>
        </trans-unit>
        <trans-unit id="3cac4e9f9bd824a31fd59bf57403db40fab7a120" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Please note&lt;/em&gt;: The browser's &lt;a href=&quot;https://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_XMLHttpRequest&quot;&gt;Same Origin Policy&lt;/a&gt; and &lt;a href=&quot;https://www.w3.org/TR/cors/&quot;&gt;Cross-Origin Resource Sharing (CORS)&lt;/a&gt; policy apply in addition to this and may further restrict whether the template is successfully loaded. This means that without the right CORS policy, loading templates from a different domain won't work on all browsers. Also, loading templates from &lt;code&gt;file://&lt;/code&gt; URL does not work on some browsers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8db5bad99fcd4bad5c64bc6f0cd52fe53c5671ef" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Supports interpolation:&lt;/em&gt; Interpolation attributes are assigned to the attribute object allowing other directives to read the interpolated value.</source>
          <target state="translated">&lt;em&gt;支持插值：将&lt;/em&gt;插值属性分配给属性对象，允许其他指令读取插值。</target>
        </trans-unit>
        <trans-unit id="d36f936e1ce70c281c0f3b29312665e6e0fa9952" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;This is fairly rare but could be the case if a third party library is injecting the markup.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;这是相当罕见的，但如果第三方库正在注入标记，则可能是这种情况。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="366e250bee7007fcaea094681e23e7a415c9b803" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;This method is essentially an alias of &lt;a href=&quot;%24flushpendingtasks&quot;&gt;&lt;code&gt;$flushPendingTasks&lt;/code&gt;&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;此方法本质上是&lt;a href=&quot;%24flushpendingtasks&quot;&gt; &lt;code&gt;$flushPendingTasks&lt;/code&gt; &lt;/a&gt;的别名。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5f0f567975629635167fbde2583ef0602afeaa7c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;This method is essentially an alias of &lt;a href=&quot;%24verifynopendingtasks&quot;&gt;&lt;code&gt;$verifyNoPendingTasks&lt;/code&gt;&lt;/a&gt; (called with no arguments).&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;此方法本质上是&lt;a href=&quot;%24verifynopendingtasks&quot;&gt; &lt;code&gt;$verifyNoPendingTasks&lt;/code&gt; &lt;/a&gt;的别名（不带参数调用）。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3520b15297383cde81b70725936914a0e5c00b82" translate="yes" xml:space="preserve">
          <source>&lt;small id=&quot;drtvArray&quot;&gt;1. Multiple directives may be registered to the same selector/name&lt;/small&gt;</source>
          <target state="translated">&lt;small id=&quot;drtvArray&quot;&gt;1.多个指令可以注册到相同的选择器/名称&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="68b9d92a12caafebe3855b5e3346edcc26067843" translate="yes" xml:space="preserve">
          <source>&lt;span id=&quot;ngclick&quot;&gt;ngClick&lt;/span&gt; and &lt;span id=&quot;ngdblclick&quot;&gt;ngDblclick&lt;/span&gt;</source>
          <target state="translated">&lt;span id=&quot;ngclick&quot;&gt;ngClick&lt;/span&gt;和&lt;span id=&quot;ngdblclick&quot;&gt;ngDblclick&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1f8e28fe31dc034c9871f375e6dfe2b703d202d5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;'self'&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;'self'&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="015a1117f6703ba8bef821a627eaa71af0db5e6c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;...&lt;/strong&gt;: any additional properties from the options object when creating the cache.</source>
          <target state="translated">&lt;strong&gt;...&lt;/strong&gt;：创建缓存时，options对象中的所有其他属性。</target>
        </trans-unit>
        <trans-unit id="a544b3a64559b2b7cd3fa3fe814e5954fe808a68" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;action&lt;/code&gt;&lt;/strong&gt; &amp;ndash; {string} &amp;ndash; The name of action. This name becomes the name of the method on your resource object.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;action&lt;/code&gt; &lt;/strong&gt; &amp;ndash; {string} &amp;ndash;动作的名称。该名称成为资源对象上方法的名称。</target>
        </trans-unit>
        <trans-unit id="f808f87280400577500827dc90a1f628ac1389e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;cache&lt;/code&gt;&lt;/strong&gt; &amp;ndash; &lt;code&gt;{boolean|Cache}&lt;/code&gt; &amp;ndash; A boolean value or object created with &lt;a href=&quot;../../ng/service/%24cachefactory&quot;&gt;&lt;code&gt;$cacheFactory&lt;/code&gt;&lt;/a&gt; to enable or disable caching of the HTTP response. See &lt;a href=&quot;../../ng/service/%24http#caching.html&quot;&gt;$http Caching&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;cache&lt;/code&gt; &lt;/strong&gt; &amp;ndash; &lt;code&gt;{boolean|Cache}&lt;/code&gt; &amp;ndash;用&lt;a href=&quot;../../ng/service/%24cachefactory&quot;&gt; &lt;code&gt;$cacheFactory&lt;/code&gt; &lt;/a&gt;创建的布尔值或对象，用于启用或禁用HTTP响应的缓存。有关更多信息，请参见&lt;a href=&quot;../../ng/service/%24http#caching.html&quot;&gt; $ http缓存&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5cb11994b5e6616708f025693d6148ee298b90fd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;cancellable&lt;/code&gt;&lt;/strong&gt; &amp;ndash; &lt;code&gt;{boolean}&lt;/code&gt; &amp;ndash; If true, the request made by a &quot;non-instance&quot; call will be cancelled (if not already completed) by calling &lt;code&gt;$cancelRequest()&lt;/code&gt; on the call's return value. Calling &lt;code&gt;$cancelRequest()&lt;/code&gt; for a non-cancellable or an already completed/cancelled request will have no effect.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;cancellable&lt;/code&gt; &lt;/strong&gt; &amp;ndash; &lt;code&gt;{boolean}&lt;/code&gt; &amp;ndash;如果为true，则通过在调用的返回值上调用 &lt;code&gt;$cancelRequest()&lt;/code&gt; 来取消&amp;ldquo;非实例&amp;rdquo;调用所发出的请求（如果尚未完成）。调用 &lt;code&gt;$cancelRequest()&lt;/code&gt; 来处理不可取消或已完成/已取消的请求将无效。</target>
        </trans-unit>
        <trans-unit id="d26a33190f844946474d7e0488694940a6da6635" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;cancellable&lt;/code&gt;&lt;/strong&gt; &amp;ndash; {boolean} &amp;ndash; If true, the request made by a &quot;non-instance&quot; call will be cancelled (if not already completed) by calling &lt;code&gt;$cancelRequest()&lt;/code&gt; on the call's return value. This can be overwritten per action. (Defaults to false.)</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;cancellable&lt;/code&gt; &lt;/strong&gt; &amp;ndash; {boolean} &amp;ndash;如果为true，则通过在调用的返回值上调用 &lt;code&gt;$cancelRequest()&lt;/code&gt; 来取消&amp;ldquo;非实例&amp;rdquo;调用所发出的请求（如果尚未完成）。可以按操作将其覆盖。（默认为false。）</target>
        </trans-unit>
        <trans-unit id="2aa9849f2fa96ee47a768e94764889dff2b45b78" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;defaults.cache&lt;/code&gt;&lt;/strong&gt; - {boolean|Object} - A boolean value or object created with &lt;a href=&quot;../service/%24cachefactory&quot;&gt;&lt;code&gt;$cacheFactory&lt;/code&gt;&lt;/a&gt; to enable or disable caching of HTTP responses by default. See &lt;a href=&quot;../service/%24http#caching.html&quot;&gt;$http Caching&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;defaults.cache&lt;/code&gt; -&lt;/strong&gt; {boolean | Object}-使用&lt;a href=&quot;../service/%24cachefactory&quot;&gt; &lt;code&gt;$cacheFactory&lt;/code&gt; &lt;/a&gt;创建的布尔值或对象，默认情况下启用或禁用HTTP响应的缓存。有关更多信息，请参见&lt;a href=&quot;../service/%24http#caching.html&quot;&gt; $ http缓存&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="26448d453ee4f5fa77860aaf5e8d2a0a8c02f8a1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;defaults.headers.common&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;defaults.headers.common&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2a19d9dca2d591347552c0f80f4943484d1fc595" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;defaults.headers.patch&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;defaults.headers.patch&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="01250ad1bd780612d6896e760534ed4963daca0d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;defaults.headers.post&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;defaults.headers.post&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3572907c9434da9a2cbd4aa1d71c3bcb51cc0c1c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;defaults.headers.put&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;defaults.headers.put&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cecf31eef476a01c594653984af1546d95027cac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;defaults.headers&lt;/code&gt;&lt;/strong&gt; - {Object} - Default headers for all $http requests. Refer to &lt;a href=&quot;../service/%24http#setting-http-headers.html&quot;&gt;$http&lt;/a&gt; for documentation on setting default headers.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;defaults.headers&lt;/code&gt; -&lt;/strong&gt; {Object}-所有$ http请求的默认标题。请参阅&lt;a href=&quot;../service/%24http#setting-http-headers.html&quot;&gt; $ http&lt;/a&gt;以获取有关设置默认标题的文档。</target>
        </trans-unit>
        <trans-unit id="fc36634214d9ac2415c40c2549f7de1cb60e3feb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;defaults.jsonpCallbackParam&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;{string}&lt;/code&gt; - the name of the query parameter that passes the name of the callback in a JSONP request. The value of this parameter will be replaced with the expression generated by the &lt;a href=&quot;../service/%24jsonpcallbacks&quot;&gt;&lt;code&gt;$jsonpCallbacks&lt;/code&gt;&lt;/a&gt; service. Defaults to &lt;code&gt;'callback'&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;defaults.jsonpCallbackParam&lt;/code&gt; &lt;/strong&gt; - &lt;code&gt;{string}&lt;/code&gt; -即通过在一个JSONP请求回调名称的查询参数的名称。此参数的值将替换为&lt;a href=&quot;../service/%24jsonpcallbacks&quot;&gt; &lt;code&gt;$jsonpCallbacks&lt;/code&gt; &lt;/a&gt;服务生成的表达式。默认为 &lt;code&gt;'callback'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1a58794246bb5fa501c3b1836a60304b9cf9bb59" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;defaults.paramSerializer&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;{string|function(Object&amp;lt;string,string&amp;gt;):string}&lt;/code&gt; - A function used to the prepare string representation of request parameters (specified as an object). If specified as string, it is interpreted as a function registered with the &lt;a href=&quot;../../auto/service/%24injector&quot;&gt;$injector&lt;/a&gt;. Defaults to &lt;a href=&quot;../service/%24httpparamserializer&quot;&gt;$httpParamSerializer&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;defaults.paramSerializer&lt;/code&gt; &lt;/strong&gt; - &lt;code&gt;{string|function(Object&amp;lt;string,string&amp;gt;):string}&lt;/code&gt; -用于请求参数准备的字符串表示（指定为对象）的函数。如果指定为字符串，则将其解释为在&lt;a href=&quot;../../auto/service/%24injector&quot;&gt; $ injector中&lt;/a&gt;注册的函数。默认为&lt;a href=&quot;../service/%24httpparamserializer&quot;&gt; $ httpParamSerializer&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="042a55b56f1a54d0925ee17b60cfc038408dcdb2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;defaults.transformRequest&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;{Array&amp;lt;function(data, headersGetter)&amp;gt;|function(data, headersGetter)}&lt;/code&gt; - An array of functions (or a single function) which are applied to the request data. By default, this is an array with one request transformation function:</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;defaults.transformRequest&lt;/code&gt; &lt;/strong&gt; - &lt;code&gt;{Array&amp;lt;function(data, headersGetter)&amp;gt;|function(data, headersGetter)}&lt;/code&gt; - ，其被应用到该请求数据的功能（或单个功能）的数组。默认情况下，这是一个具有一个请求转换功能的数组：</target>
        </trans-unit>
        <trans-unit id="be710c6b3bfc678c19bcab77b8a8b2eef9e9b20a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;defaults.transformResponse&lt;/code&gt;&lt;/strong&gt; - &lt;code&gt;{Array&amp;lt;function(data, headersGetter, status)&amp;gt;|function(data, headersGetter, status)}&lt;/code&gt; - An array of functions (or a single function) which are applied to the response data. By default, this is an array which applies one response transformation function that does two things:</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;defaults.transformResponse&lt;/code&gt; &lt;/strong&gt; - &lt;code&gt;{Array&amp;lt;function(data, headersGetter, status)&amp;gt;|function(data, headersGetter, status)}&lt;/code&gt; -的功能的阵列（或一个单一的功能），其被应用到响应数据。默认情况下，这是一个数组，它应用一个响应转换函数来完成两件事：</target>
        </trans-unit>
        <trans-unit id="4261b76b3fa76174bbb5b55b8872a690a00997de" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;defaults.xsrfCookieName&lt;/code&gt;&lt;/strong&gt; - {string} - Name of cookie containing the XSRF token. Defaults value is &lt;code&gt;'XSRF-TOKEN'&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;defaults.xsrfCookieName&lt;/code&gt; -&lt;/strong&gt; {字符串}-包含XSRF令牌的cookie的名称。默认值为 &lt;code&gt;'XSRF-TOKEN'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d8167ea5cadbe074374e2a50533eb74dc4f94fc8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;defaults.xsrfHeaderName&lt;/code&gt;&lt;/strong&gt; - {string} - Name of HTTP header to populate with the XSRF token. Defaults value is &lt;code&gt;'X-XSRF-TOKEN'&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;defaults.xsrfHeaderName&lt;/code&gt; -&lt;/strong&gt; {string}-使用XSRF令牌填充的HTTP标头的名称。默认值为 &lt;code&gt;'X-XSRF-TOKEN'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b93d026301ec002f48aa1ac86163db37461abe45" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;false&lt;/code&gt; (default):&lt;/strong&gt; No scope will be created for the directive. The directive will use its parent's scope.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;false&lt;/code&gt; （默认）：&lt;/strong&gt;将不会为指令创建范围。该指令将使用其父级的范围。</target>
        </trans-unit>
        <trans-unit id="5e9b13e113acd277b44549b14aae31153cec5b74" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;hasBody&lt;/code&gt;&lt;/strong&gt; &amp;ndash; &lt;code&gt;{boolean}&lt;/code&gt; &amp;ndash; If true, then the request will have a body. If not specified, then only POST, PUT and PATCH requests will have a body. *</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;hasBody&lt;/code&gt; &lt;/strong&gt; &amp;ndash; &lt;code&gt;{boolean}&lt;/code&gt; &amp;ndash;如果为true，则请求将具有正文。如果未指定，则只有POST，PUT和PATCH请求具有主体。 *</target>
        </trans-unit>
        <trans-unit id="d734241778e6e421ce70dbb15f7c7edc8059d04e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;interceptor&lt;/code&gt;&lt;/strong&gt; &amp;ndash; &lt;code&gt;{Object=}&lt;/code&gt; &amp;ndash; The interceptor object has four optional methods - &lt;code&gt;request&lt;/code&gt;, &lt;code&gt;requestError&lt;/code&gt;, &lt;code&gt;response&lt;/code&gt;, and &lt;code&gt;responseError&lt;/code&gt;. See &lt;a href=&quot;../../ng/service/%24http#interceptors.html&quot;&gt;$http interceptors&lt;/a&gt; for details. Note that &lt;code&gt;request&lt;/code&gt;/&lt;code&gt;requestError&lt;/code&gt; interceptors are applied before calling &lt;code&gt;$http&lt;/code&gt;, thus before any global &lt;code&gt;$http&lt;/code&gt; interceptors. Also, rejecting or throwing an error inside the &lt;code&gt;request&lt;/code&gt; interceptor will result in calling the &lt;code&gt;responseError&lt;/code&gt; interceptor. The resource instance or collection is available on the &lt;code&gt;resource&lt;/code&gt; property of the &lt;code&gt;http response&lt;/code&gt; object passed to &lt;code&gt;response&lt;/code&gt;/&lt;code&gt;responseError&lt;/code&gt; interceptors. Keep in mind that the associated promise will be resolved with the value returned by the response interceptors. Make sure you return an appropriate value and not the &lt;code&gt;response&lt;/code&gt; object passed as input. For reference, the default &lt;code&gt;response&lt;/code&gt; interceptor (which gets applied if you don't specify a custom one) returns &lt;code&gt;response.resource&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;interceptor&lt;/code&gt; &lt;/strong&gt; - &lt;code&gt;{Object=}&lt;/code&gt; -拦截器对象具有四个可选方法- &lt;code&gt;request&lt;/code&gt; ， &lt;code&gt;requestError&lt;/code&gt; ， &lt;code&gt;response&lt;/code&gt; ，和 &lt;code&gt;responseError&lt;/code&gt; 。有关详细信息，请参见&lt;a href=&quot;../../ng/service/%24http#interceptors.html&quot;&gt; $ http拦截器&lt;/a&gt;。注意，在调用 &lt;code&gt;$http&lt;/code&gt; 之前，先应用 &lt;code&gt;request&lt;/code&gt; / &lt;code&gt;requestError&lt;/code&gt; 拦截器，然后在所有全局 &lt;code&gt;$http&lt;/code&gt; 拦截器之前应用。同样，拒绝或在 &lt;code&gt;request&lt;/code&gt; 拦截器内引发错误将导致调用 &lt;code&gt;responseError&lt;/code&gt; 拦截器。资源实例或收集可用的 &lt;code&gt;resource&lt;/code&gt; 的属性 &lt;code&gt;http response&lt;/code&gt; 对象传递给 &lt;code&gt;response&lt;/code&gt; / &lt;code&gt;responseError&lt;/code&gt; 拦截器。请记住，将使用响应拦截器返回的值来解析关联的承诺。确保返回适当的值，而不是返回作为输入传递的 &lt;code&gt;response&lt;/code&gt; 对象。作为参考，默认的 &lt;code&gt;response&lt;/code&gt; 拦截器（如果您未指定自定义拦截器，则将应用）返回 &lt;code&gt;response.resource&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e08864f200d427bae3213d382a4ee126b33b73be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;isArray&lt;/code&gt;&lt;/strong&gt; &amp;ndash; {boolean=} &amp;ndash; If true then the returned object for this action is an array, see &lt;code&gt;returns&lt;/code&gt; section.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;isArray&lt;/code&gt; &lt;/strong&gt; &amp;ndash; {boolean =} &amp;ndash;如果为true，则此操作返回的对象是数组，请参见 &lt;code&gt;returns&lt;/code&gt; 部分。</target>
        </trans-unit>
        <trans-unit id="c72d3596d9a1d4896c0d5cb60a5cd09bf5574ee5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;method&lt;/code&gt;&lt;/strong&gt; &amp;ndash; {string} &amp;ndash; Case insensitive HTTP method (e.g. &lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt;, &lt;code&gt;PUT&lt;/code&gt;, &lt;code&gt;DELETE&lt;/code&gt;, &lt;code&gt;JSONP&lt;/code&gt;, etc).</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;method&lt;/code&gt; &lt;/strong&gt; &amp;ndash; {string} &amp;ndash;不区分大小写的HTTP方法（例如 &lt;code&gt;GET&lt;/code&gt; ， &lt;code&gt;POST&lt;/code&gt; ， &lt;code&gt;PUT&lt;/code&gt; ， &lt;code&gt;DELETE&lt;/code&gt; ， &lt;code&gt;JSONP&lt;/code&gt; 等）。</target>
        </trans-unit>
        <trans-unit id="aae376e10a8f77b6721b4bc1bf0c98819c82c0b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;params&lt;/code&gt;&lt;/strong&gt; &amp;ndash; {Object=} &amp;ndash; Optional set of pre-bound parameters for this action. If any of the parameter value is a function, it will be called every time when a param value needs to be obtained for a request (unless the param was overridden). The function will be passed the current data value as an argument.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;params&lt;/code&gt; &lt;/strong&gt; &amp;ndash; {Object =} &amp;ndash;此操作的可选预绑定参数集。如果任何参数值是一个函数，则每次需要为请求获取参数值时都将调用该参数值（除非该参数被覆盖）。该函数将作为参数传递当前数据值。</target>
        </trans-unit>
        <trans-unit id="e667830ad1b6b97bb07009b7b43101e62855c36c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;responseType&lt;/code&gt;&lt;/strong&gt; &amp;ndash; &lt;code&gt;{string}&lt;/code&gt; &amp;ndash; See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseType&quot;&gt;XMLHttpRequest.responseType&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;responseType&lt;/code&gt; &lt;/strong&gt; &amp;ndash; &lt;code&gt;{string}&lt;/code&gt; &amp;ndash;请参见&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseType&quot;&gt; XMLHttpRequest.responseType&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a6f8bfd7bb40362c4448b97ea0540c59bda61b34" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;stripTrailingSlashes&lt;/code&gt;&lt;/strong&gt; &amp;ndash; {boolean} &amp;ndash; If true then the trailing slashes from any calculated URL will be stripped. (Defaults to true.)</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;stripTrailingSlashes&lt;/code&gt; &lt;/strong&gt; &amp;ndash; {boolean} &amp;ndash;如果为true，则将从任何计算得出的URL的尾部斜杠中删除。（默认为true。）</target>
        </trans-unit>
        <trans-unit id="ee12f09df154c39b895e5f3233f8d96b41eb95d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;timeout&lt;/code&gt;&lt;/strong&gt; &amp;ndash; &lt;code&gt;{number}&lt;/code&gt; &amp;ndash; Timeout in milliseconds.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;timeout&lt;/code&gt; &lt;/strong&gt; &amp;ndash; &lt;code&gt;{number}&lt;/code&gt; &amp;ndash;超时（以毫秒为单位）。</target>
        </trans-unit>
        <trans-unit id="8860939df6552cef90fec239ad04c99010175f84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;transformRequest&lt;/code&gt;&lt;/strong&gt; &amp;ndash; &lt;code&gt;{function(data, headersGetter)|Array.&amp;lt;function(data, headersGetter)&amp;gt;}&lt;/code&gt; &amp;ndash; Transform function or an array of such functions. The transform function takes the http request body and headers and returns its transformed (typically serialized) version. By default, transformRequest will contain one function that checks if the request data is an object and serializes it using &lt;code&gt;angular.toJson&lt;/code&gt;. To prevent this behavior, set &lt;code&gt;transformRequest&lt;/code&gt; to an empty array: &lt;code&gt;transformRequest: []&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;transformRequest&lt;/code&gt; &lt;/strong&gt; &amp;ndash; &lt;code&gt;{function(data, headersGetter)|Array.&amp;lt;function(data, headersGetter)&amp;gt;}&lt;/code&gt; &amp;ndash;转换函数或此类函数的数组。转换函数采用http请求正文和标头，并返回其转换后的（通常是序列化的）版本。默认情况下，transformRequest将包含一个函数，该函数检查请求数据是否为对象并使用 &lt;code&gt;angular.toJson&lt;/code&gt; 对其进行序列化。为防止此行为，请将 &lt;code&gt;transformRequest&lt;/code&gt; 设置为一个空数组： &lt;code&gt;transformRequest: []&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f4b07be3a2acec82f0b9a59f65ad187c54cc4a40" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;transformResponse&lt;/code&gt;&lt;/strong&gt; &amp;ndash; &lt;code&gt;{function(data, headersGetter, status)|Array.&amp;lt;function(data, headersGetter, status)&amp;gt;}&lt;/code&gt; &amp;ndash; Transform function or an array of such functions. The transform function takes the HTTP response body, headers and status and returns its transformed (typically deserialized) version. By default, transformResponse will contain one function that checks if the response looks like a JSON string and deserializes it using &lt;code&gt;angular.fromJson&lt;/code&gt;. To prevent this behavior, set &lt;code&gt;transformResponse&lt;/code&gt; to an empty array: &lt;code&gt;transformResponse: []&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;transformResponse&lt;/code&gt; &lt;/strong&gt; &amp;ndash; &lt;code&gt;{function(data, headersGetter, status)|Array.&amp;lt;function(data, headersGetter, status)&amp;gt;}&lt;/code&gt; &amp;ndash;转换函数或此类函数的数组。转换函数采用HTTP响应正文，标头和状态，并返回其转换后的（通常是反序列化的）版本。默认情况下，transformResponse将包含一个函数，该函数检查响应是否看起来像JSON字符串，并使用 &lt;code&gt;angular.fromJson&lt;/code&gt; 将其反序列化。为防止此行为，请将 &lt;code&gt;transformResponse&lt;/code&gt; 设置为一个空数组： &lt;code&gt;transformResponse: []&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8a0fb5bc58db9aba768f380cd413475c058f2676" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;true&lt;/code&gt;:&lt;/strong&gt; A new child scope that prototypically inherits from its parent will be created for the directive's element. If multiple directives on the same element request a new scope, only one new scope is created.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;true&lt;/code&gt; ：&lt;/strong&gt;将为指令的元素创建一个原型继承自其父对象的新子作用域。如果同一元素上的多个指令要求一个新范围，则仅创建一个新范围。</target>
        </trans-unit>
        <trans-unit id="f954c335fa1c88b9e6f54185f3e45307c2692170" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;url&lt;/code&gt;&lt;/strong&gt; &amp;ndash; {string} &amp;ndash; Action specific &lt;code&gt;url&lt;/code&gt; override. The url templating is supported just like for the resource-level urls.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;url&lt;/code&gt; &lt;/strong&gt; &amp;ndash; {string} &amp;ndash;特定于操作的 &lt;code&gt;url&lt;/code&gt; 覆盖。就像资源级url一样，支持url模板。</target>
        </trans-unit>
        <trans-unit id="8282452aa2df4d7986a97ad42ae713ded09cdf66" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;withCredentials&lt;/code&gt;&lt;/strong&gt; &amp;ndash; &lt;code&gt;{boolean}&lt;/code&gt; &amp;ndash; Whether to set the &lt;code&gt;withCredentials&lt;/code&gt; flag on the XHR object. See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials&quot;&gt;XMLHttpRequest.withCredentials&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;withCredentials&lt;/code&gt; &lt;/strong&gt; &amp;ndash; &lt;code&gt;{boolean}&lt;/code&gt; &amp;ndash;是否在XHR对象上设置 &lt;code&gt;withCredentials&lt;/code&gt; 标志。有关更多信息，请参见&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials&quot;&gt; XMLHttpRequest.withCredentials&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5534420a1f0d70bfdf49536229b84023ea80de7a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;{...}&lt;/code&gt; (an object hash):&lt;/strong&gt; - map elements of the content onto transclusion &quot;slots&quot; in the template.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;{...}&lt;/code&gt; （对象哈希）：&lt;/strong&gt; -将内容的元素映射到模板中的包含&amp;ldquo;槽&amp;rdquo;上。</target>
        </trans-unit>
        <trans-unit id="71dd11f48572c56893f6273d285f51870813fbcf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;{...}&lt;/code&gt; (an object hash):&lt;/strong&gt; A new &quot;isolate&quot; scope is created for the directive's template. The 'isolate' scope differs from normal scope in that it does not prototypically inherit from its parent scope. This is useful when creating reusable components, which should not accidentally read or modify data in the parent scope. Note that an isolate scope directive without a &lt;code&gt;template&lt;/code&gt; or &lt;code&gt;templateUrl&lt;/code&gt; will not apply the isolate scope to its children elements.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;{...}&lt;/code&gt; （对象哈希）：&lt;/strong&gt;为指令的模板创建了一个新的&amp;ldquo;隔离&amp;rdquo;作用域。&amp;ldquo;隔离&amp;rdquo;作用域与常规作用域的不同之处在于，它不原型地继承自其父作用域。这在创建可重用的组件时很有用，这些组件不应意外读取或修改父范围中的数据。请注意，没有 &lt;code&gt;template&lt;/code&gt; 或 &lt;code&gt;templateUrl&lt;/code&gt; 的隔离范围指令不会将隔离范围应用于其子元素。</target>
        </trans-unit>
        <trans-unit id="55716f0cf97f955d54001576e8203120c29a8dd1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Accessibility:&lt;/strong&gt;&lt;a href=&quot;guide/accessibility&quot;&gt;ngAria&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Accessibility:&lt;/strong&gt;&lt;a href=&quot;guide/accessibility&quot;&gt;ngAria&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="32d5678c93da3911d14629087f800c16a9214e81" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Advanced Routing:&lt;/strong&gt;&lt;a href=&quot;https://github.com/angular-ui/ui-router&quot;&gt;UI-Router&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;高级路由：&lt;/strong&gt;&lt;a href=&quot;https://github.com/angular-ui/ui-router&quot;&gt;UI-Router&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1ec468f4ccb9634ebf835fc9cc003046af4d82e4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;An application is a tree of components:&lt;/strong&gt; Ideally, the whole application should be a tree of components that implement clearly defined inputs and outputs, and minimize two-way data binding. That way, it's easier to predict when data changes and what the state of a component is.</source>
          <target state="translated">&lt;strong&gt;一个应用程序是一个组件树：&lt;/strong&gt;理想情况下，整个应用程序应该是一个组件树，这些组件实现明确定义的输入和输出，并最小化双向数据绑定。这样，更容易预测数据何时更改以及组件的状态。</target>
        </trans-unit>
        <trans-unit id="fc3cbfeb9923528544cefb117bda81db350ba626" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Analytics and Logging:&lt;/strong&gt;&lt;a href=&quot;http://ngmodules.org/modules/angularytics&quot;&gt;Angularytics (Google Analytics)&lt;/a&gt;, &lt;a href=&quot;https://github.com/luisfarzati/angulartics&quot;&gt;Angulartics (Analytics)&lt;/a&gt;, &lt;a href=&quot;http://www.bennadel.com/blog/2542-Logging-Client-Side-Errors-With-AngularJS-And-Stacktrace-js.htm&quot;&gt;Logging Client-Side Errors&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;分析和日志记录：&lt;/strong&gt;&lt;a href=&quot;http://ngmodules.org/modules/angularytics&quot;&gt;Angularytics（Google Analytics &lt;/a&gt;&lt;a href=&quot;https://github.com/luisfarzati/angulartics&quot;&gt;（分析）&lt;/a&gt;），Angulartics（Analytics），&lt;a href=&quot;http://www.bennadel.com/blog/2542-Logging-Client-Side-Errors-With-AngularJS-And-Stacktrace-js.htm&quot;&gt;记录客户端错误&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c4f6be7f6dde452ce0886e715bc87ec6823e4a1f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Animation:&lt;/strong&gt;&lt;a href=&quot;guide/animations&quot;&gt;Core concepts&lt;/a&gt;, &lt;a href=&quot;api/nganimate&quot;&gt;ngAnimate API&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;动画：&lt;/strong&gt;&lt;a href=&quot;guide/animations&quot;&gt;核心概念&lt;/a&gt;，&lt;a href=&quot;api/nganimate&quot;&gt;ngAnimate API&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="278a6aea40fd074492b2bd66393c9b7aa694664a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Announcing changes&lt;/strong&gt;: When filtering or other UI messaging happens away from the user's focus, notify with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions&quot;&gt;ARIA Live Regions&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;宣布更改&lt;/strong&gt;：当过滤或其他UI消息传递发生在用户焦点之外时，请通过&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions&quot;&gt;ARIA Live Regions进行&lt;/a&gt;通知。</target>
        </trans-unit>
        <trans-unit id="4f18c14e214158a783463e0a863bdd40977505c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;App wiring:&lt;/strong&gt;&lt;a href=&quot;guide/di&quot;&gt;Dependency injection&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;应用接线：&lt;/strong&gt;&lt;a href=&quot;guide/di&quot;&gt;依赖注入&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2fb419a1909e8e3b534b459c7f7480b57df90a1a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Attackers with local access can retrieve sensitive data from this cache even when users are not authenticated.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;具有本地访问权限的攻击者即使未通过用户身份验证，也可以从此缓存中检索敏感数据。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0404b26fa72f75ae0a463aa6f030e67901db44fa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Authentication/Login: &lt;/strong&gt;&lt;a href=&quot;https://developers.google.com/+/photohunt/python&quot;&gt;Google example&lt;/a&gt;, &lt;a href=&quot;https://github.com/pc035860/angular-easyfb&quot;&gt;AngularJS Facebook library&lt;/a&gt;, &lt;a href=&quot;http://blog.brunoscopelliti.com/facebook-authentication-in-your-angularjs-web-app&quot;&gt;Facebook example&lt;/a&gt;, &lt;a href=&quot;http://blog.brunoscopelliti.com/deal-with-users-authentication-in-an-angularjs-web-app&quot;&gt;authentication strategy&lt;/a&gt;, &lt;a href=&quot;http://frederiknakstad.com/authentication-in-single-page-applications-with-angular-js/&quot;&gt;unix-style authorization&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;身份验证/登录：&lt;/strong&gt;&lt;a href=&quot;https://developers.google.com/+/photohunt/python&quot;&gt;Google示例&lt;/a&gt;，&lt;a href=&quot;https://github.com/pc035860/angular-easyfb&quot;&gt;AngularJS Facebook库&lt;/a&gt;，&lt;a href=&quot;http://blog.brunoscopelliti.com/facebook-authentication-in-your-angularjs-web-app&quot;&gt;Facebook示例&lt;/a&gt;，&lt;a href=&quot;http://blog.brunoscopelliti.com/deal-with-users-authentication-in-an-angularjs-web-app&quot;&gt;身份验证策略&lt;/a&gt;，&lt;a href=&quot;http://frederiknakstad.com/authentication-in-single-page-applications-with-angular-js/&quot;&gt;Unix风格的授权&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cb41941bf9973471001e39b14773894e1600d9ac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Authentication:&lt;/strong&gt;&lt;a href=&quot;https://github.com/witoldsz/angular-http-auth&quot;&gt;Http Auth Interceptor&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;身份验证：&lt;/strong&gt;&lt;a href=&quot;https://github.com/witoldsz/angular-http-auth&quot;&gt;Http Auth拦截器&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d3613cfafa439088ac45f401ceea5a3a7878004c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Be aware that marking untrusted data as safe via calls to &lt;a href=&quot;../api/ng/service/%24sce#trustAsHtml.html&quot;&gt;&lt;code&gt;$sce.trustAsHtml&lt;/code&gt;&lt;/a&gt;, etc is dangerous and will lead to Cross Site Scripting exploits.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;请注意，通过调用&lt;a href=&quot;../api/ng/service/%24sce#trustAsHtml.html&quot;&gt; &lt;code&gt;$sce.trustAsHtml&lt;/code&gt; &lt;/a&gt;等将不可信数据标记为安全是危险的，这将导致跨站点脚本利用。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3d1565baa0d8c0800213288fd11e963f8abddc9d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Best Practice:&lt;/strong&gt; Any operation which can be shared among the instance of directives should be moved to the compile function for performance reasons.</source>
          <target state="translated">&lt;strong&gt;最佳实践：&lt;/strong&gt;出于性能考虑，应该在指令实例之间共享的任何操作都应移至编译函数。</target>
        </trans-unit>
        <trans-unit id="154a0af44d6ebb41a4e868d63cdb4d863d1d5ad4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Best Practice:&lt;/strong&gt; Comment directives were commonly used in places where the DOM API limits the ability to create directives that spanned multiple elements (e.g. inside &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; elements). AngularJS 1.2 introduces &lt;a href=&quot;../api/ng/directive/ngrepeat&quot;&gt;&lt;code&gt;ng-repeat-start&lt;/code&gt; and &lt;code&gt;ng-repeat-end&lt;/code&gt;&lt;/a&gt; as a better solution to this problem. Developers are encouraged to use this over custom comment directives when possible.</source>
          <target state="translated">&lt;strong&gt;最佳实践：&lt;/strong&gt;注释指令通常用于DOM API限制创建跨越多个元素（例如，在 &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; 元素内）的指令的能力。AngularJS 1.2引入了&lt;a href=&quot;../api/ng/directive/ngrepeat&quot;&gt; &lt;code&gt;ng-repeat-start&lt;/code&gt; 和 &lt;code&gt;ng-repeat-end&lt;/code&gt; &lt;/a&gt;作为对此问题的更好解决方案。鼓励开发人员尽可能在自定义注释指令上使用此方法。</target>
        </trans-unit>
        <trans-unit id="eec82de673765c49099d465321288990084a66d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Best Practice:&lt;/strong&gt; Directives should clean up after themselves. You can use &lt;code&gt;element.on('$destroy', ...)&lt;/code&gt; or &lt;code&gt;scope.$on('$destroy', ...)&lt;/code&gt; to run a clean-up function when the directive is removed.</source>
          <target state="translated">&lt;strong&gt;最佳实践：&lt;/strong&gt;指令应自行清理。删除指令后 &lt;code&gt;element.on('$destroy', ...)&lt;/code&gt; 可以使用element.on（'$ destroy'，...）或 &lt;code&gt;scope.$on('$destroy', ...)&lt;/code&gt; 运行清理功能。</target>
        </trans-unit>
        <trans-unit id="e208258b909cdfe75b3c3165f6e087ea396480bc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Best Practice:&lt;/strong&gt; If you are working with objects that have a unique identifier property, you should track by this identifier instead of the object instance, e.g. &lt;code&gt;item in items track by item.id&lt;/code&gt;. Should you reload your data later, &lt;code&gt;ngRepeat&lt;/code&gt; will not have to rebuild the DOM elements for items it has already rendered, even if the JavaScript objects in the collection have been substituted for new ones. For large collections, this significantly improves rendering performance.</source>
          <target state="translated">&lt;strong&gt;最佳实践：&lt;/strong&gt;如果您正在使用具有唯一标识符属性的对象，则应使用该标识符而不是对象实例 &lt;code&gt;item in items track by item.id&lt;/code&gt; ，例如，item by item.id跟踪的项目。如果以后再加载数据，即使集合中的JavaScript对象已替换为新对象， &lt;code&gt;ngRepeat&lt;/code&gt; 也不必为其已呈现的项目重建DOM元素。对于大型集合，这可以显着提高渲染性能。</target>
        </trans-unit>
        <trans-unit id="b23c4bfb3b2b379e51d133233ee4beb35c63fb4f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Best Practice:&lt;/strong&gt; If your app will be used only in one locale, it is fine to rely on the default currency symbol. If you anticipate that viewers in other locales might use your app, you should explicitly provide a currency symbol.</source>
          <target state="translated">&lt;strong&gt;最佳做法：&lt;/strong&gt;如果您的应用仅在一种语言环境中使用，则可以依赖默认货币符号。如果您预计其他地区的查看者可能会使用您的应用，则应明确提供货币符号。</target>
        </trans-unit>
        <trans-unit id="eaa374cd5f757d0f8bdee6a83204e711ef11c463" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Best Practice:&lt;/strong&gt; In order to avoid collisions with some future standard, it's best to prefix your own directive names. For instance, if you created a &lt;code&gt;&amp;lt;carousel&amp;gt;&lt;/code&gt; directive, it would be problematic if HTML7 introduced the same element. A two or three letter prefix (e.g. &lt;code&gt;btfCarousel&lt;/code&gt;) works well. Similarly, do not prefix your own directives with &lt;code&gt;ng&lt;/code&gt; or they might conflict with directives included in a future version of AngularJS.</source>
          <target state="translated">&lt;strong&gt;最佳实践：&lt;/strong&gt;为了避免与将来的某些标准发生冲突，最好在自己的指令名称前加上前缀。例如，如果您创建了 &lt;code&gt;&amp;lt;carousel&amp;gt;&lt;/code&gt; 指令，那么HTML7引入相同的元素将是有问题的。两个或三个字母前缀（例如 &lt;code&gt;btfCarousel&lt;/code&gt; ）效果很好。同样，不要在自己的指令前加上 &lt;code&gt;ng&lt;/code&gt; 前缀，否则它们可能与AngularJS未来版本中包含的指令冲突。</target>
        </trans-unit>
        <trans-unit id="e91a547aa7a90f5913cc0361874deea48265913c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Best Practice:&lt;/strong&gt; It's best to keep getters fast because AngularJS is likely to call them more frequently than other parts of your code.</source>
          <target state="translated">&lt;strong&gt;最佳实践：&lt;/strong&gt;最好保持快速的getter，因为AngularJS调用它们的频率可能比代码的其他部分还要频繁。</target>
        </trans-unit>
        <trans-unit id="562ae68aa5a7c95fda85899cccdcbaf4ca298e2e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Best Practice:&lt;/strong&gt; It's recommended to use the &quot;directive definition object&quot; form.</source>
          <target state="translated">&lt;strong&gt;最佳实践：&lt;/strong&gt;建议使用&amp;ldquo;指令定义对象&amp;rdquo;形式。</target>
        </trans-unit>
        <trans-unit id="7a47336f4b17a025f5af5052c3624880d8987c59" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Best Practice:&lt;/strong&gt; Keep the filtering function as lean as possible, because it will be called for each DOM action (e.g. insertion, removal, class change) performed by &quot;animation-aware&quot; directives. See &lt;a href=&quot;../../../guide/animations#which-directives-support-animations-.html&quot;&gt;here&lt;/a&gt; for a list of built-in directives that support animations. Performing computationally expensive or time-consuming operations on each call of the filtering function can make your animations sluggish.</source>
          <target state="translated">&lt;strong&gt;最佳实践：&lt;/strong&gt;尽可能使过滤功能更简洁，因为将对&amp;ldquo;动画感知&amp;rdquo;指令执行的每个DOM操作（例如，插入，删除，类更改）调用该过滤功能。请参阅&lt;a href=&quot;../../../guide/animations#which-directives-support-animations-.html&quot;&gt;此处&lt;/a&gt;以获取支持动画的内置指令列表。在每次调用过滤函数时执行计算量大或耗时的操作会使动画变慢。</target>
        </trans-unit>
        <trans-unit id="42b89654abdc85c287788fb956a5415b67b03df9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Best Practice:&lt;/strong&gt; Keep the filtering function as lean as possible, because it will be called for each DOM action (e.g. insertion, removal, class change) performed by &quot;animation-aware&quot; directives. See &lt;a href=&quot;animations#which-directives-support-animations-.html&quot;&gt;here&lt;/a&gt; for a list of built-in directives that support animations. Performing computationally expensive or time-consuming operations on each call of the filtering function can make your animations sluggish.</source>
          <target state="translated">&lt;strong&gt;最佳实践：&lt;/strong&gt;尽可能使过滤功能更简洁，因为将对&amp;ldquo;动画感知&amp;rdquo;指令执行的每个DOM操作（例如，插入，删除，类更改）调用该过滤功能。请参阅&lt;a href=&quot;animations#which-directives-support-animations-.html&quot;&gt;此处&lt;/a&gt;以获取支持动画的内置指令列表。在每次调用过滤函数时执行计算量大或耗时的操作会使动画变慢。</target>
        </trans-unit>
        <trans-unit id="b204a0bc6447763a2a9eed14261cd6cb3e7bbf3d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Best Practice:&lt;/strong&gt; Prefer using directives via tag name and attributes over comment and class names. Doing so generally makes it easier to determine what directives a given element matches.</source>
          <target state="translated">&lt;strong&gt;最佳实践：相&lt;/strong&gt;对于注释和类名称，更喜欢通过标签名称和属性使用指令。通常，这样做可以更轻松地确定给定元素与哪些指令匹配。</target>
        </trans-unit>
        <trans-unit id="ea37a8ba38693a6357c550cc3e8fed26616432d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Best Practice:&lt;/strong&gt; Prefer using the dash-delimited format (e.g. &lt;code&gt;ng-bind&lt;/code&gt; for &lt;code&gt;ngBind&lt;/code&gt;). If you want to use an HTML validating tool, you can instead use the &lt;code&gt;data&lt;/code&gt;-prefixed version (e.g. &lt;code&gt;data-ng-bind&lt;/code&gt; for &lt;code&gt;ngBind&lt;/code&gt;). The other forms shown above are accepted for legacy reasons but we advise you to avoid them.</source>
          <target state="translated">&lt;strong&gt;最佳实践：&lt;/strong&gt;不想使用短划线分隔的格式（例如 &lt;code&gt;ng-bind&lt;/code&gt; 为 &lt;code&gt;ngBind&lt;/code&gt; ）。如果你要使用HTML验证工具，可以改用 &lt;code&gt;data&lt;/code&gt; -prefixed版本（例如 &lt;code&gt;data-ng-bind&lt;/code&gt; 的 &lt;code&gt;ngBind&lt;/code&gt; ）。出于遗留原因，可以接受上面显示的其他表格，但是我们建议您避免使用它们。</target>
        </trans-unit>
        <trans-unit id="1082802fce10851c5a44b53099be49c1bff97de3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Best Practice:&lt;/strong&gt; Unless your template is very small, it's typically better to break it apart into its own HTML file and load it with the &lt;code&gt;templateUrl&lt;/code&gt; option.</source>
          <target state="translated">&lt;strong&gt;最佳实践：&lt;/strong&gt;除非您的模板很小，否则通常最好将其分解成自己的HTML文件，然后使用 &lt;code&gt;templateUrl&lt;/code&gt; 选项将其加载。</target>
        </trans-unit>
        <trans-unit id="0a61c999a12dbbaaf9b15f01f05db8b33b1207d1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Best Practice:&lt;/strong&gt; Use the &lt;code&gt;scope&lt;/code&gt; option to create isolate scopes when making components that you want to reuse throughout your app.</source>
          <target state="translated">&lt;strong&gt;最佳实践：&lt;/strong&gt;制作要在整个应用程序中重复使用的组件时，请使用 &lt;code&gt;scope&lt;/code&gt; 选项创建隔离范围。</target>
        </trans-unit>
        <trans-unit id="cf3ab3a718158f6dc5f57a13fa63897bb4d9a05c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Best Practice:&lt;/strong&gt; name the factory functions as &lt;code&gt;&amp;lt;serviceId&amp;gt;Factory&lt;/code&gt; (e.g., apiTokenFactory). While this naming convention is not required, it helps when navigating the codebase or looking at stack traces in the debugger.</source>
          <target state="translated">&lt;strong&gt;最佳实践：&lt;/strong&gt;将工厂功能命名为 &lt;code&gt;&amp;lt;serviceId&amp;gt;Factory&lt;/code&gt; （例如apiTokenFactory）。尽管不需要此命名约定，但在浏览代码库或在调试器中查看堆栈跟踪时，它会有所帮助。</target>
        </trans-unit>
        <trans-unit id="fd01d844b7cc208ec811e4a8e61f854e64737953" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Best Practice:&lt;/strong&gt; only use &lt;code&gt;transclude: true&lt;/code&gt; when you want to create a directive that wraps arbitrary content.</source>
          <target state="translated">&lt;strong&gt;最佳实践：&lt;/strong&gt;仅当要创建包装任意内容的指令时，才使用 &lt;code&gt;transclude: true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7dedb89ac35c7defeb1581c33c4fe4fc5e767eb0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Best Practice:&lt;/strong&gt; use &lt;code&gt;&amp;amp;attr&lt;/code&gt; in the &lt;code&gt;scope&lt;/code&gt; option when you want your directive to expose an API for binding to behaviors.</source>
          <target state="translated">&lt;strong&gt;最佳实践：&lt;/strong&gt;当您希望指令公开用于绑定行为的API时，请在 &lt;code&gt;scope&lt;/code&gt; 选项中使用 &lt;code&gt;&amp;amp;attr&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="494ca317afa0a1c099d1ccb6267751ae377ac8af" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Best Practice:&lt;/strong&gt; use &lt;code&gt;controller&lt;/code&gt; when you want to expose an API to other directives. Otherwise use &lt;code&gt;link&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;最佳实践：&lt;/strong&gt;要向其他指令公开API时，请使用 &lt;code&gt;controller&lt;/code&gt; 。否则请使用 &lt;code&gt;link&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="afc296414277849789c9310271d222c899f7860a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Best Practice&lt;/strong&gt;: Always provide a &lt;code&gt;cloneFn&lt;/code&gt; (clone attach function) when you call a transclude function since you then get a fresh clone of the original DOM and also have access to the new transclusion scope.</source>
          <target state="translated">&lt;strong&gt;最佳实践&lt;/strong&gt;：调用 &lt;code&gt;cloneFn&lt;/code&gt; 函数时，请始终提供cloneFn（克隆附加功能），因为这样您就可以获得原始DOM的新克隆，并且还可以访问新的包含范围。</target>
        </trans-unit>
        <trans-unit id="539e490e5b11ba68c8d7a1e07354c117dea53cef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Best Practice&lt;/strong&gt;: if you intend to add and remove transcluded content manually in your directive (by calling the transclude function to get the DOM and calling &lt;code&gt;element.remove()&lt;/code&gt; to remove it), then you are also responsible for calling &lt;code&gt;$destroy&lt;/code&gt; on the transclusion scope.</source>
          <target state="translated">&lt;strong&gt;最佳实践&lt;/strong&gt;：如果您打算在指令中手动添加和删除已包含内容的内容（通过调用transclude函数获取DOM并调用 &lt;code&gt;element.remove()&lt;/code&gt; 删除它），那么您还负责在包含中调用 &lt;code&gt;$destroy&lt;/code&gt; 范围。</target>
        </trans-unit>
        <trans-unit id="bb5ccbde708321e45669e8a636a6ff900cf5b928" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Bootstrap:&lt;/strong&gt;&lt;a href=&quot;guide/bootstrap&quot;&gt;Bootstrapping an app&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;引导程序：&lt;/strong&gt;&lt;a href=&quot;guide/bootstrap&quot;&gt;引导应用程序&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ab44cfa01ef866a58f7f9728eb8d0893aec0fc94" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Careful:&lt;/strong&gt; If you plan to &lt;a href=&quot;http://en.wikipedia.org/wiki/Minification_(programming)&quot;&gt;minify&lt;/a&gt; your code, your service names will get renamed and break your app.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;如果您打算&lt;a href=&quot;http://en.wikipedia.org/wiki/Minification_(programming)&quot;&gt;精简&lt;/a&gt;代码，您的服务名称将被重命名并破坏您的应用程序。</target>
        </trans-unit>
        <trans-unit id="f4209bb60ea5373eb3dc30ff3ef1108bccb09e22" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Careful:&lt;/strong&gt; If you plan to &lt;a href=&quot;https://en.wikipedia.org/wiki/Minification_(programming)&quot;&gt;minify&lt;/a&gt; your code, your service names will get renamed and break your app.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56179cbf2aff90b5b65d0a399af34f3432b2cd0b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Color contrast and scale&lt;/strong&gt;: Make sure content is legible and interactive controls are usable at all screen sizes. Consider configurable UI themes for people with color blindness, low vision or other visual impairments.</source>
          <target state="translated">&lt;strong&gt;色彩对比度和比例&lt;/strong&gt;：确保内容清晰易读，并且交互式控件适用于所有屏幕尺寸。为有色盲，视力低下或其他视觉障碍的人考虑可配置的UI主题。</target>
        </trans-unit>
        <trans-unit id="ac547823d94131b4d29fe5107223764e7946bf5a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Communicating with servers:&lt;/strong&gt;&lt;a href=&quot;api/ng/service/%24http&quot;&gt;$http&lt;/a&gt;, &lt;a href=&quot;api/ngresource/service/%24resource&quot;&gt;$resource&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;与服务器通信：&lt;/strong&gt;&lt;a href=&quot;api/ng/service/%24http&quot;&gt;$ http&lt;/a&gt;，&lt;a href=&quot;api/ngresource/service/%24resource&quot;&gt;$ resource&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="33029029bed4b443c712a3a281f8467c8da8dfc2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Compile:&lt;/strong&gt; traverse the DOM and collect all of the directives. The result is a linking function.</source>
          <target state="translated">&lt;strong&gt;编译：&lt;/strong&gt;遍历DOM并收集所有指令。结果是链接功能。</target>
        </trans-unit>
        <trans-unit id="0c95db3b1f38a8001b8fcd9ace33e6cdea0243f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Components have a well-defined lifecycle:&lt;/strong&gt; Each component can implement &quot;lifecycle hooks&quot;. These are methods that will be called at certain points in the life of the component. The following hook methods can be implemented:</source>
          <target state="translated">&lt;strong&gt;组件具有明确定义的生命周期：&lt;/strong&gt;每个组件都可以实现&amp;ldquo;生命周期挂钩&amp;rdquo;。这些方法将在组件寿命中的某些时候调用。可以实现以下挂钩方法：</target>
        </trans-unit>
        <trans-unit id="dc33ce1740fb347751434152e84b19712b1a8f47" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Components have a well-defined public API - Inputs and Outputs:&lt;/strong&gt; However, scope isolation only goes so far, because AngularJS uses two-way binding. So if you pass an object to a component like this - &lt;code&gt;bindings: {item: '='}&lt;/code&gt;, and modify one of its properties, the change will be reflected in the parent component. For components however, only the component that owns the data should modify it, to make it easy to reason about what data is changed, and when. For that reason, components should follow a few simple conventions:</source>
          <target state="translated">&lt;strong&gt;组件具有定义明确的公共API-输入和输出：&lt;/strong&gt;但是，作用域隔离到目前为止还没有进行，因为AngularJS使用双向绑定。因此，如果将对象传递给这样的组件 &lt;code&gt;bindings: {item: '='}&lt;/code&gt; ，并修改其属性之一，则更改将反映在父组件中。但是，对于组件而言，只有拥有数据的组件才可以对其进行修改，以使其易于推断出更改的数据以及更改时间。因此，组件应遵循一些简单的约定：</target>
        </trans-unit>
        <trans-unit id="fdbc3c0b82f0fdd2e38b13e622456e7527414d41" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Components only control their own View and Data:&lt;/strong&gt; Components should never modify any data or DOM that is out of their own scope. Normally, in AngularJS it is possible to modify data anywhere in the application through scope inheritance and watches. This is practical, but can also lead to problems when it is not clear which part of the application is responsible for modifying the data. That is why component directives use an isolate scope, so a whole class of scope manipulation is not possible.</source>
          <target state="translated">&lt;strong&gt;组件仅控制自己的视图和数据：&lt;/strong&gt;组件绝不能修改超出其范围的任何数据或DOM。通常，在AngularJS中，可以通过作用域继承和监视在应用程序中的任何地方修改数据。这很实用，但是当不清楚应用程序的哪一部分负责修改数据时，也会导致问题。这就是为什么组件指令使用隔离范围的原因，因此无法进行整个范围的操作。</target>
        </trans-unit>
        <trans-unit id="ea5024441518186f1d8d19e15ff04550168838b1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Context:&lt;/strong&gt; JavaScript expressions are evaluated against the global &lt;code&gt;window&lt;/code&gt;. In AngularJS, expressions are evaluated against a &lt;a href=&quot;../api/ng/type/%24rootscope.scope&quot;&gt;&lt;code&gt;scope&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;strong&gt;上下文：&lt;/strong&gt; JavaScript表达式是根据全局 &lt;code&gt;window&lt;/code&gt; 计算的。在AngularJS中，表达式是根据&lt;a href=&quot;../api/ng/type/%24rootscope.scope&quot;&gt; &lt;code&gt;scope&lt;/code&gt; &lt;/a&gt;对象求值的。</target>
        </trans-unit>
        <trans-unit id="25b9d3e57b4590062259c3449266ebe5e34703c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Controller Definition:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;控制器定义：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c4eb25f46c9ed2a0a0131f2096bc9e0ff89ef620" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Controller Test:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;控制器测试：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d21e7e084fc25e99d1555970d47ff8a6c8ffc4a1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Creation&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Creation&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d15196e2bb706cf7a298552f36e5aa63a4fa9578" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Custom directives to access the DOM&lt;/strong&gt;: In AngularJS, the only place where an application should access the DOM is within directives. This is important because artifacts that access the DOM are hard to test. If you need to access the DOM directly you should write a custom directive for this. The &lt;a href=&quot;directive&quot;&gt;directives guide&lt;/a&gt; explains how to do this.</source>
          <target state="translated">&lt;strong&gt;用于访问DOM的自定义指令&lt;/strong&gt;：在AngularJS中，应用程序唯一应访问DOM的地方是在指令内。这很重要，因为访问DOM的工件很难测试。如果您需要直接访问DOM，则应为此编写一个自定义指令。该&lt;a href=&quot;directive&quot;&gt;指令指南&lt;/a&gt;介绍了如何做到这一点。</target>
        </trans-unit>
        <trans-unit id="05f7e5084b082e3e86f79e93392adf8dab0cd628" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Data Handling&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;数据处理&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cdcaa96f16edae165b34c183a8af244b806db88b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Debugging:&lt;/strong&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/angularjs-batarang/ighdmehidhipcmcojjgiloacoafjmpfk?hl=en&quot;&gt;Batarang&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Debugging:&lt;/strong&gt;&lt;a href=&quot;https://chrome.google.com/webstore/detail/angularjs-batarang/ighdmehidhipcmcojjgiloacoafjmpfk?hl=en&quot;&gt;Batarang&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dcc6d0189a9829bde92474bed45b16ba9f9f0224" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Deprecated:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e3b88a22e2271f42fe87df0e187227576e5a9612" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt;(since 1.6.5)</source>
          <target state="translated">&lt;strong&gt;不推荐使用：（&lt;/strong&gt;自1.6.5开始）</target>
        </trans-unit>
        <trans-unit id="b336024f1362b00347db2024e13812fdfef548d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt;(since 1.7.0)</source>
          <target state="translated">&lt;strong&gt;不推荐使用：（&lt;/strong&gt;自1.7.0开始）</target>
        </trans-unit>
        <trans-unit id="9115d2a2f5f4763c5242dee073391a13ca26deff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt;(since 1.7.3)</source>
          <target state="translated">&lt;strong&gt;不推荐使用：（&lt;/strong&gt;自1.7.3开始）</target>
        </trans-unit>
        <trans-unit id="67d38588133d020ef7537448f842ffa75477f1a8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt;(since 1.8.1)</source>
          <target state="translated">&lt;strong&gt;Deprecated:&lt;/strong&gt;(since 1.8.1)</target>
        </trans-unit>
        <trans-unit id="9962f993ae5f02cb5239548a1e42a4a3f263c7c2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Django:&lt;/strong&gt;&lt;a href=&quot;http://blog.mourafiq.com/post/55034504632/end-to-end-web-app-with-django-rest-framework&quot;&gt;Tutorial&lt;/a&gt;, &lt;a href=&quot;http://django-angular.readthedocs.org/en/latest/integration.html&quot;&gt;Integrating AngularJS with Django&lt;/a&gt;, &lt;a href=&quot;http://blog.kevinastone.com/getting-started-with-django-rest-framework-and-angularjs.html&quot;&gt;Getting Started with Django Rest Framework and AngularJS&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Django的：&lt;/strong&gt;&lt;a href=&quot;http://blog.mourafiq.com/post/55034504632/end-to-end-web-app-with-django-rest-framework&quot;&gt;教程&lt;/a&gt;，&lt;a href=&quot;http://django-angular.readthedocs.org/en/latest/integration.html&quot;&gt;使用Django整合AngularJS&lt;/a&gt;，&lt;a href=&quot;http://blog.kevinastone.com/getting-started-with-django-rest-framework-and-angularjs.html&quot;&gt;入门Django的REST框架和AngularJS&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="59f77700177f6c1272669fa24caa78493a84bec2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Django:&lt;/strong&gt;&lt;a href=&quot;http://blog.mourafiq.com/post/55034504632/end-to-end-web-app-with-django-rest-framework&quot;&gt;Tutorial&lt;/a&gt;, &lt;a href=&quot;https://django-angular.readthedocs.org/en/latest/integration.html&quot;&gt;Integrating AngularJS with Django&lt;/a&gt;, &lt;a href=&quot;http://blog.kevinastone.com/getting-started-with-django-rest-framework-and-angularjs.html&quot;&gt;Getting Started with Django Rest Framework and AngularJS&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ea0aaeacdcb99323968249d0f4da6d418a46a63" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do not use this property to attempt to modify the modules after the application has been bootstrapped.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;引导应用程序后，请勿使用此属性尝试修改模块。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="35c64fc4414905e1dac355fee722a3b4f7563854" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Editor support:&lt;/strong&gt;&lt;a href=&quot;http://plugins.jetbrains.com/plugin/6971&quot;&gt;Webstorm&lt;/a&gt; (and &lt;a href=&quot;http://www.youtube.com/watch?v=LJOyrSh1kDU&quot;&gt;video&lt;/a&gt;), &lt;a href=&quot;https://github.com/angular-ui/AngularJS-sublime-package&quot;&gt;Sublime Text&lt;/a&gt;, &lt;a href=&quot;http://madskristensen.net/post/angularjs-intellisense-in-visual-studio-2012&quot;&gt;Visual Studio&lt;/a&gt;, &lt;a href=&quot;https://github.com/angular-ui/AngularJS-Atom&quot;&gt;Atom&lt;/a&gt;, &lt;a href=&quot;https://github.com/burnettk/vim-angular&quot;&gt;Vim&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;编辑器支持：&lt;/strong&gt;&lt;a href=&quot;http://plugins.jetbrains.com/plugin/6971&quot;&gt;Webstorm&lt;/a&gt;（和&lt;a href=&quot;http://www.youtube.com/watch?v=LJOyrSh1kDU&quot;&gt;视频&lt;/a&gt;），&lt;a href=&quot;https://github.com/angular-ui/AngularJS-sublime-package&quot;&gt;Sublime Text&lt;/a&gt;，&lt;a href=&quot;http://madskristensen.net/post/angularjs-intellisense-in-visual-studio-2012&quot;&gt;Visual Studio&lt;/a&gt;，&lt;a href=&quot;https://github.com/angular-ui/AngularJS-Atom&quot;&gt;Atom&lt;/a&gt;，&lt;a href=&quot;https://github.com/burnettk/vim-angular&quot;&gt;Vim&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="53831e9d1a4486979b3c9db3602122daaf1d3c11" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Editor support:&lt;/strong&gt;&lt;a href=&quot;http://plugins.jetbrains.com/plugin/6971&quot;&gt;Webstorm&lt;/a&gt; (and &lt;a href=&quot;https://www.youtube.com/watch?v=LJOyrSh1kDU&quot;&gt;video&lt;/a&gt;), &lt;a href=&quot;https://github.com/angular-ui/AngularJS-sublime-package&quot;&gt;Sublime Text&lt;/a&gt;, &lt;a href=&quot;http://madskristensen.net/post/angularjs-intellisense-in-visual-studio-2012&quot;&gt;Visual Studio&lt;/a&gt;, &lt;a href=&quot;https://github.com/angular-ui/AngularJS-Atom&quot;&gt;Atom&lt;/a&gt;, &lt;a href=&quot;https://github.com/burnettk/vim-angular&quot;&gt;Vim&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c918741e4ebe8c6f874a77e7b6b027496a491b1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;End-to-End Testing:&lt;/strong&gt;&lt;a href=&quot;https://github.com/angular/protractor&quot;&gt;Protractor&lt;/a&gt;, &lt;a href=&quot;guide/e2e-testing&quot;&gt;e2e testing guide&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;端到端测试：&lt;/strong&gt;&lt;a href=&quot;https://github.com/angular/protractor&quot;&gt;量角器&lt;/a&gt;，&lt;strong&gt;端到端&lt;/strong&gt;&lt;a href=&quot;guide/e2e-testing&quot;&gt;测试指南&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5eb90a61d13dbb1be010d1d795ccea91ff166125" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example&lt;/strong&gt;: Consider the following case.</source>
          <target state="translated">&lt;strong&gt;示例&lt;/strong&gt;：考虑以下情况。</target>
        </trans-unit>
        <trans-unit id="e6ff57a661932efb3d4a52d964964919eb790b57" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Exposing model to templates:&lt;/strong&gt;&lt;a href=&quot;guide/scope&quot;&gt;Scopes&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;将模型暴露于模板：&lt;/strong&gt;&lt;a href=&quot;guide/scope&quot;&gt;范围&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="29419687192edcb313a9e8cb642fbcf74067c9e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Fileupload:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Fileupload:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="728ae224a4f3f6513bbafc04078c292e46e0bd3f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Filters:&lt;/strong&gt; You can use &lt;a href=&quot;filter&quot;&gt;filters&lt;/a&gt; within expressions to format data before displaying it.</source>
          <target state="translated">&lt;strong&gt;过滤器：&lt;/strong&gt;您可以在表达式中使用&lt;a href=&quot;filter&quot;&gt;过滤器&lt;/a&gt;来格式化数据，然后再显示数据。</target>
        </trans-unit>
        <trans-unit id="e7c1fa4b2eaf7626d1792029e5b26b13d72fcf3a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;FireBase:&lt;/strong&gt;&lt;a href=&quot;http://angularfire.com/&quot;&gt;AngularFire&lt;/a&gt;, &lt;a href=&quot;http://www.youtube.com/watch?v=C7ZI7z7qnHU&quot;&gt;Realtime Apps with AngularJS and FireBase (video)&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;FireBase：&lt;/strong&gt;&lt;a href=&quot;http://angularfire.com/&quot;&gt;AngularFire&lt;/a&gt;，&lt;a href=&quot;http://www.youtube.com/watch?v=C7ZI7z7qnHU&quot;&gt;具有AngularJS和FireBase的实时应用程序（视频）&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fd82b68d1f62fc2e9756da6c2c2cb64a89eebf03" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;FireBase:&lt;/strong&gt;&lt;a href=&quot;http://angularfire.com/&quot;&gt;AngularFire&lt;/a&gt;, &lt;a href=&quot;https://www.youtube.com/watch?v=C7ZI7z7qnHU&quot;&gt;Realtime Apps with AngularJS and FireBase (video)&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf84010d7a6b61f41ee63c802ccd44de864e5dba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Focus management&lt;/strong&gt;: Guide the user around the app as views are appended/removed. Focus should &lt;em&gt;never&lt;/em&gt; be lost, as this causes unexpected behavior and much confusion (referred to as &quot;freak-out mode&quot;).</source>
          <target state="translated">&lt;strong&gt;焦点管理&lt;/strong&gt;：随着视图的添加/删除，引导用户在应用程序周围。&lt;em&gt;永远&lt;/em&gt;不要失去焦点，因为这会导致意外的行为和很多混乱（称为&amp;ldquo;怪胎模式&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="2af7f91debc00c4d66b54ff27066486fa7fb3a61" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;For security purposes, it is strongly encouraged that web servers escape user-supplied data, replacing angle brackets (&amp;lt;, &amp;gt;) with &amp;amp;lt; and &amp;amp;gt; respectively, and replacing all interpolation start/end markers with their escaped counterparts.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;为了安全起见，强烈建议Web服务器转义用户提供的数据，用＆lt;代替尖括号（&amp;lt;，&amp;gt;）。和＆gt; 分别将所有插值开始/结束标记替换为其转义的对应标记。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2b581a24703a37b7af937ecbc3944d0890b25a5f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Forgiving:&lt;/strong&gt; In JavaScript, trying to evaluate undefined properties generates &lt;code&gt;ReferenceError&lt;/code&gt; or &lt;code&gt;TypeError&lt;/code&gt;. In AngularJS, expression evaluation is forgiving to &lt;code&gt;undefined&lt;/code&gt; and &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;宽恕：&lt;/strong&gt;在JavaScript中，尝试评估未定义的属性会生成 &lt;code&gt;ReferenceError&lt;/code&gt; 或 &lt;code&gt;TypeError&lt;/code&gt; 。在AngularJS中，表达式求值允许为 &lt;code&gt;undefined&lt;/code&gt; 和 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="118ae1efbf212c1af6f2ec7a52d16996705f9a9a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Free online:&lt;/strong&gt;&lt;a href=&quot;http://thinkster.io&quot;&gt;thinkster.io&lt;/a&gt;, &lt;a href=&quot;http://www.codecademy.com/courses/javascript-advanced-en-2hJ3J/0/1&quot;&gt;CodeAcademy&lt;/a&gt;, &lt;a href=&quot;https://www.codeschool.com/courses/shaping-up-with-angular-js&quot;&gt;CodeSchool&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;免费在线：&lt;/strong&gt;&lt;a href=&quot;http://thinkster.io&quot;&gt;thinkster.io&lt;/a&gt;，&lt;a href=&quot;http://www.codecademy.com/courses/javascript-advanced-en-2hJ3J/0/1&quot;&gt;CodeAcademy&lt;/a&gt;，&lt;a href=&quot;https://www.codeschool.com/courses/shaping-up-with-angular-js&quot;&gt;CodeSchool&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="36cfed557b0d54596718c47a3502e52e7f0d5983" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Free online:&lt;/strong&gt;&lt;a href=&quot;http://thinkster.io&quot;&gt;thinkster.io&lt;/a&gt;, &lt;a href=&quot;https://www.codecademy.com/courses/javascript-advanced-en-2hJ3J/0/1&quot;&gt;CodeAcademy&lt;/a&gt;, &lt;a href=&quot;https://www.codeschool.com/courses/shaping-up-with-angular-js&quot;&gt;CodeSchool&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e321247d81350096c762f426ea37a7f7f65c46b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;General UI Libraries:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;通用用户界面库：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c62cc2644917c0c78a5ad290cc5c9b4a3cbc9f21" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;General options&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;常规选项&lt;/strong&gt;：</target>
        </trans-unit>
        <trans-unit id="83069315cc099dddfa6736b90e27c48bdf031e5c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Generating AngularJS templates on the server containing user-provided content&lt;/strong&gt;. This is the most common pitfall where you are generating HTML via some server-side engine such as PHP, Java or ASP.NET.</source>
          <target state="translated">&lt;strong&gt;在服务器上生成包含用户提供的内容的AngularJS模板&lt;/strong&gt;。这是您通过某些服务器端引擎（例如PHP，Java或ASP.NET）生成HTML的最常见陷阱。</target>
        </trans-unit>
        <trans-unit id="b7704441aa8773f48d301f0f5b37cfd7c03c0699" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Getting Started:&lt;/strong&gt;&lt;a href=&quot;http://www.dancancro.com/comparison-of-angularjs-application-starters/&quot;&gt;Comparison of the options for starting a new project&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;入门：&lt;/strong&gt;&lt;a href=&quot;http://www.dancancro.com/comparison-of-angularjs-application-starters/&quot;&gt;开始新项目的选项比较&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4d6b4902ff6c42ae4bb55caf32e3267d18fa47e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Google Cloud Platform:&lt;/strong&gt;&lt;a href=&quot;https://github.com/GoogleCloudPlatform/appengine-angular-gotodos&quot;&gt;with Go&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Google Cloud Platform：&lt;/strong&gt;&lt;a href=&quot;https://github.com/GoogleCloudPlatform/appengine-angular-gotodos&quot;&gt;使用Go&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bc400a339550b52ce6b0be7cd10a7b9a81323f48" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTML Semantics&lt;/strong&gt;: If you're creating custom element directives, Web Components or HTML in general, use native elements wherever possible to utilize built-in events and properties. Alternatively, use ARIA to communicate semantic meaning. See &lt;a href=&quot;http://www.w3.org/TR/aria-in-html/#notes-on-aria-use-in-html&quot;&gt;notes on ARIA use&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;HTML语义&lt;/strong&gt;：如果通常要创建自定义元素指令，Web组件或HTML，请尽可能使用本机元素来利用内置事件和属性。或者，使用ARIA传达语义。请参阅&lt;a href=&quot;http://www.w3.org/TR/aria-in-html/#notes-on-aria-use-in-html&quot;&gt;有关ARIA使用的说明&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c47092e73259d220507e10f0b2a6bb5286e27864" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTML Semantics&lt;/strong&gt;: If you're creating custom element directives, Web Components or HTML in general, use native elements wherever possible to utilize built-in events and properties. Alternatively, use ARIA to communicate semantic meaning. See &lt;a href=&quot;https://www.w3.org/TR/aria-in-html/#notes-on-aria-use-in-html&quot;&gt;notes on ARIA use&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="772e80ba0b22ef620ca409833085ad693b23ee9b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Hood.ie:&lt;/strong&gt;&lt;a href=&quot;http://www.roberthorvick.com/2013/06/30/todomvc-angularjs-hood-ie-60-minutes-to-awesome/&quot;&gt;60 Minutes to Awesome&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Hood.ie：&lt;/strong&gt;&lt;a href=&quot;http://www.roberthorvick.com/2013/06/30/todomvc-angularjs-hood-ie-60-minutes-to-awesome/&quot;&gt;很棒的60分钟&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="19085e0a2c5cd050d84b7d76363211819ff976a8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;If an attacker has access to control AngularJS templates or expressions, they can exploit an AngularJS application via an XSS attack, regardless of the version.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;如果攻击者有权控制AngularJS模板或表达式，则无论版本如何，他们都可以通过XSS攻击来利用AngularJS应用程序。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="deaff8edd96bc66f4727a4f3ab4978724f45f6e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;If you must continue to allow user-provided content in an AngularJS template then the safest option is to ensure that it is only present in the part of the template that is made inert via the &lt;a href=&quot;../api/ng/directive/ngnonbindable&quot;&gt;&lt;code&gt;ngNonBindable&lt;/code&gt;&lt;/a&gt; directive.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;如果必须继续允许用户在AngularJS模板中提供内容，那么最安全的选择是确保该内容仅存在于通过&lt;a href=&quot;../api/ng/directive/ngnonbindable&quot;&gt; &lt;code&gt;ngNonBindable&lt;/code&gt; &lt;/a&gt;指令变为惰性的模板部分中。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b01ec1aed4e21712373f6ba89f7d3b02564dd612" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Input-type specific options&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;输入类型特定的选项&lt;/strong&gt;：</target>
        </trans-unit>
        <trans-unit id="f943ecf537936d45c56dbe1a62ccb2ab16e8ccfe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Internationalization and Localization:&lt;/strong&gt;&lt;a href=&quot;guide/i18n&quot;&gt;AngularJS Guide to i18n and l10n&lt;/a&gt;, &lt;a href=&quot;api/ng/filter/date&quot;&gt;date filter&lt;/a&gt;, &lt;a href=&quot;api/ng/filter/currency&quot;&gt;currency filter&lt;/a&gt;, &lt;a href=&quot;https://blog.novanet.no/creating-multilingual-support-using-angularjs/&quot;&gt;Creating multilingual support&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;国际化和本地化：&lt;/strong&gt;&lt;a href=&quot;guide/i18n&quot;&gt;AngularJS i18n和l10n指南&lt;/a&gt;，&lt;a href=&quot;api/ng/filter/date&quot;&gt;日期过滤器&lt;/a&gt;，&lt;a href=&quot;api/ng/filter/currency&quot;&gt;货币过滤器&lt;/a&gt;，&lt;a href=&quot;https://blog.novanet.no/creating-multilingual-support-using-angularjs/&quot;&gt;创建多语言支持&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="13d22bd673d3e8b5f004e45768f0644ef8cf6802" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Internationalization and Localization:&lt;/strong&gt;&lt;a href=&quot;http://www.novanet.no/blog/hallstein-brotan/dates/2013/10/creating-multilingual-support-using-angularjs/&quot;&gt;Creating multilingual support&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;国际化和本地化：&lt;/strong&gt;&lt;a href=&quot;http://www.novanet.no/blog/hallstein-brotan/dates/2013/10/creating-multilingual-support-using-angularjs/&quot;&gt;创建多语言支持&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c0e5f409cb2ee335a9867f4c6a6b23ca8aa2e621" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Internationalization:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Internationalization:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9ea751c15b641e55b67020dc80776c68a6993488" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;It's best to design your application in such a way that users cannot change client-side templates.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;最好以用户无法更改客户端模板的方式设计应用程序。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4bd2654d1202485a2e442179165da1e7c418c60d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Javascript minification: &lt;/strong&gt;&lt;a href=&quot;http://thegreenpizza.github.io/2013/05/25/building-minification-safe-angular.js-applications/&quot;&gt;Background&lt;/a&gt;, &lt;a href=&quot;https://github.com/olov/ng-annotate&quot;&gt;ng-annotate automation tool&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Javascript缩小：&lt;/strong&gt;&lt;a href=&quot;http://thegreenpizza.github.io/2013/05/25/building-minification-safe-angular.js-applications/&quot;&gt;背景&lt;/a&gt;，&lt;a href=&quot;https://github.com/olov/ng-annotate&quot;&gt;ng注释自动化工具&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3718e4787ff542a8c7ad10f699c1d7d52546cd86" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Javascript minification: &lt;/strong&gt;&lt;a href=&quot;https://thegreenpizza.github.io/2013/05/25/building-minification-safe-angular.js-applications/&quot;&gt;Background&lt;/a&gt;, &lt;a href=&quot;https://github.com/olov/ng-annotate&quot;&gt;ng-annotate automation tool&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="091f846e69bd67ba0e23902bb84fa8e87a680de4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Life cycle: Pseudo-Code of &lt;code&gt;$apply()&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;生命周期： &lt;code&gt;$apply()&lt;/code&gt; 伪代码&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="487183e5f206a39ee969219ee284ebe8a02babcf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Link:&lt;/strong&gt; combine the directives with a scope and produce a live view. Any changes in the scope model are reflected in the view, and any user interactions with the view are reflected in the scope model. This makes the scope model the single source of truth.</source>
          <target state="translated">&lt;strong&gt;链接：&lt;/strong&gt;将指令与作用域结合在一起并产生实时视图。范围模型中的任何更改都将反映在视图中，并且用户与视图的任何交互都将反映在范围模型中。这使范围模型成为事实的唯一来源。</target>
        </trans-unit>
        <trans-unit id="96b3884d0059c68bd05c7315cffd0cf62ea0f114" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;MEAN Stack: &lt;/strong&gt;&lt;a href=&quot;http://blog.mongodb.org/post/49262866911/the-mean-stack-mongodb-expressjs-angularjs-and&quot;&gt;Blog post&lt;/a&gt;, &lt;a href=&quot;http://thecodebarbarian.wordpress.com/2013/07/22/introduction-to-the-mean-stack-part-one-setting-up-your-tools/&quot;&gt;Setup&lt;/a&gt;, &lt;a href=&quot;https://developers.google.com/live/shows/913996610&quot;&gt;GDL Video&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;MEAN Stack：&lt;/strong&gt;&lt;a href=&quot;http://blog.mongodb.org/post/49262866911/the-mean-stack-mongodb-expressjs-angularjs-and&quot;&gt;博客文章&lt;/a&gt;，&lt;a href=&quot;http://thecodebarbarian.wordpress.com/2013/07/22/introduction-to-the-mean-stack-part-one-setting-up-your-tools/&quot;&gt;设置&lt;/a&gt;，&lt;a href=&quot;https://developers.google.com/live/shows/913996610&quot;&gt;GDL视频&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e8bf181242f884595d886cd03aeec144f719d0af" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;MEAN Stack: &lt;/strong&gt;&lt;a href=&quot;http://blog.mongodb.org/post/49262866911/the-mean-stack-mongodb-expressjs-angularjs-and&quot;&gt;Blog post&lt;/a&gt;, &lt;a href=&quot;https://thecodebarbarian.wordpress.com/2013/07/22/introduction-to-the-mean-stack-part-one-setting-up-your-tools/&quot;&gt;Setup&lt;/a&gt;, &lt;a href=&quot;https://developers.google.com/live/shows/913996610&quot;&gt;GDL Video&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2911fd9d126848f8eb1eed1ab9acba880de28cac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Manipulating HTML DOM programmatically:&lt;/strong&gt; Manipulating HTML DOM is a cornerstone of AJAX applications, but it's cumbersome and error-prone. By declaratively describing how the UI should change as your application state changes, you are freed from low-level DOM manipulation tasks. Most applications written with AngularJS never have to programmatically manipulate the DOM, although you can if you want to.</source>
          <target state="translated">&lt;strong&gt;以编程方式操纵HTML DOM：&lt;/strong&gt;操纵HTML DOM是AJAX应用程序的基石，但它既麻烦又容易出错。通过声明性地描述UI应如何随着应用程序状态的变化而变化，使您摆脱了底层DOM操作任务的束缚。尽管可以，但是大多数用AngularJS编写的应用程序都不必以编程方式操作DOM。</target>
        </trans-unit>
        <trans-unit id="ae65de1008d93ac10e5147e1a16fe4001e84f1a4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Marshaling data to and from the UI:&lt;/strong&gt; CRUD operations make up the majority of AJAX applications' tasks. The flow of marshaling data from the server to an internal object to an HTML form, allowing users to modify the form, validating the form, displaying validation errors, returning to an internal model, and then back to the server, creates a lot of boilerplate code. AngularJS eliminates almost all of this boilerplate, leaving code that describes the overall flow of the application rather than all of the implementation details.</source>
          <target state="translated">&lt;strong&gt;往返于UI的数据封送处理：&lt;/strong&gt; CRUD操作构成了AJAX应用程序的大部分任务。从服务器到内部对象的编组数据流到HTML表单，允许用户修改表单，验证表单，显示验证错误，返回内部模型然后返回到服务器，这创建了大量样板码。AngularJS几乎消除了所有这些样板，只剩下描述应用程序整体流程而不是所有实现细节的代码。</target>
        </trans-unit>
        <trans-unit id="2a275a422f10bed3a56df7995304ed16eed43489" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Meteor: &lt;/strong&gt;&lt;a href=&quot;https://github.com/Urigo/angular-meteor&quot;&gt;angular-meteor package&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;流星：&lt;/strong&gt;&lt;a href=&quot;https://github.com/Urigo/angular-meteor&quot;&gt;角流包&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="db0671b387ecea8787251da7e07fd8e9fdaf4483" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Methods&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Methods&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c6d8a78379558acab3af04cd587819d30c75521e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Model mutation&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;模型变异&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7086e1ce6f42d5fad9cba2e1f5646b1b825187cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Mult-slot transclusion&lt;/strong&gt; is declared by providing an object for the &lt;code&gt;transclude&lt;/code&gt; property.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;通过为 &lt;code&gt;transclude&lt;/code&gt; 属性提供一个对象来声明&lt;strong&gt;多时隙包含&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="05b165b285b72caa9c78970e10aab8026dcef25d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Multi-slot transclusion&lt;/strong&gt; is declared by providing an object for the &lt;code&gt;transclude&lt;/code&gt; property.</source>
          <target state="translated">&lt;strong&gt;Multi-slot transclusion&lt;/strong&gt; is declared by providing an object for the &lt;code&gt;transclude&lt;/code&gt; property.</target>
        </trans-unit>
        <trans-unit id="6659bd2912ce42ac1bdd194ad91b297788435e7b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Mutation observation&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;突变观察&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b23529e246744b68c2bd6ef0af4dd7ff9830bcef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE:&lt;/strong&gt; Developers should take care in how and why they are modifying the &lt;code&gt;$delegate&lt;/code&gt; for the service. Not only should expectations for the consumer be kept, but some functionality (such as directive registration) does not take place after decoration, but during creation/registration of the original service. This means, for example, that an action such as pushing a directive object to a directive &lt;code&gt;$delegate&lt;/code&gt; will likely result in unexpected behavior. Furthermore, great care should be taken when decorating core services, directives, or filters as this may unexpectedly or adversely affect the functionality of the framework.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;开发人员应注意如何以及为何修改服务的 &lt;code&gt;$delegate&lt;/code&gt; 。不仅要保持对消费者的期望，而且某些功能（例如指令注册）不会在装饰后发生，而是在原始服务的创建/注册过程中发生。例如，这意味着诸如将指令对象推入指令 &lt;code&gt;$delegate&lt;/code&gt; 可能会导致意外行为。此外，在装饰核心服务，指令或过滤器时应格外小心，因为这可能会意外或不利地影响框架的功能。</target>
        </trans-unit>
        <trans-unit id="68ff0628f16e24ea841c9bf624378b977ece4f06" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE:&lt;/strong&gt; This guide is targeted towards developers who are already familiar with AngularJS basics. If you're just getting started, we recommend the &lt;a href=&quot;https://code.angularjs.org/1.7.8/docs/guide/tutorial/&quot;&gt;tutorial&lt;/a&gt; first.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;本指南面向已经熟悉AngularJS基础知识的开发人员。如果您只是入门，我们建议您先学习本&lt;a href=&quot;https://code.angularjs.org/1.7.8/docs/guide/tutorial/&quot;&gt;教程&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="64e04f4558e73933f8913d26f295b4e0d5431015" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE:&lt;/strong&gt; This guide is targeted towards developers who are already familiar with AngularJS basics. If you're just getting started, we recommend the &lt;a href=&quot;https://code.angularjs.org/1.8.2/docs/guide/tutorial/&quot;&gt;tutorial&lt;/a&gt; first.</source>
          <target state="translated">&lt;strong&gt;NOTE:&lt;/strong&gt; This guide is targeted towards developers who are already familiar with AngularJS basics. If you're just getting started, we recommend the &lt;a href=&quot;https://code.angularjs.org/1.8.2/docs/guide/tutorial/&quot;&gt;tutorial&lt;/a&gt; first.</target>
        </trans-unit>
        <trans-unit id="fdb079ff35eeaa09176e6b1ab92674e118487a5d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: animations take effect only if the &lt;strong&gt;ngAnimate&lt;/strong&gt; module is loaded.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：仅当加载了&lt;strong&gt;ngAnimate&lt;/strong&gt;模块时，动画才会生效。</target>
        </trans-unit>
        <trans-unit id="29bce9ed0569284644bd5abffe0b6b3ff5ca463c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;No Bitwise, Comma, And Void Operators:&lt;/strong&gt; You cannot use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators&quot;&gt;Bitwise&lt;/a&gt;, &lt;code&gt;,&lt;/code&gt; or &lt;code&gt;void&lt;/code&gt; operators in an AngularJS expression.</source>
          <target state="translated">&lt;strong&gt;不按位，逗号和虚空运营商：&lt;/strong&gt;不能使用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators&quot;&gt;按位&lt;/a&gt;， &lt;code&gt;,&lt;/code&gt; 或 &lt;code&gt;void&lt;/code&gt; 在AngularJS表达式运算符。</target>
        </trans-unit>
        <trans-unit id="ac0995069bdfdc8439b558ebbcd92d17a5af46db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;No Control Flow Statements:&lt;/strong&gt; You cannot use the following in an AngularJS expression: conditionals, loops, or exceptions.</source>
          <target state="translated">&lt;strong&gt;无控制流语句：&lt;/strong&gt;不能在AngularJS表达式中使用以下内容：条件，循环或异常。</target>
        </trans-unit>
        <trans-unit id="f763c2d5219a3a509a21ff61c916fa107b127c3b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;No Function Declarations:&lt;/strong&gt; You cannot declare functions in an AngularJS expression, even inside &lt;code&gt;ng-init&lt;/code&gt; directive.</source>
          <target state="translated">&lt;strong&gt;没有函数声明：&lt;/strong&gt;即使在 &lt;code&gt;ng-init&lt;/code&gt; 指令内部，也不能在AngularJS表达式中声明函数。</target>
        </trans-unit>
        <trans-unit id="3111894aec8cae77ef6914c2f135257f6ecd663c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;No Object Creation With New Operator:&lt;/strong&gt; You cannot use &lt;code&gt;new&lt;/code&gt; operator in an AngularJS expression.</source>
          <target state="translated">&lt;strong&gt;使用New运算符不创建对象：&lt;/strong&gt;不能在AngularJS表达式中使用 &lt;code&gt;new&lt;/code&gt; 运算符。</target>
        </trans-unit>
        <trans-unit id="4884a66d9e6f11c9d9f4d185ac827f2e5cf991df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;No RegExp Creation With Literal Notation:&lt;/strong&gt; You cannot create regular expressions in an AngularJS expression. An exception to this rule is &lt;a href=&quot;../api/ng/directive/ngpattern&quot;&gt;&lt;code&gt;ng-pattern&lt;/code&gt;&lt;/a&gt; which accepts valid RegExp.</source>
          <target state="translated">&lt;strong&gt;没有使用文字表示法创建RegExp：&lt;/strong&gt;您无法在AngularJS表达式中创建正则表达式。&lt;a href=&quot;../api/ng/directive/ngpattern&quot;&gt; &lt;code&gt;ng-pattern&lt;/code&gt; &lt;/a&gt;是该规则的一个例外，它接受有效的RegExp。</target>
        </trans-unit>
        <trans-unit id="65dcf051b0f8d4d6b70a92dd10d98dbbb05e7cdd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Note:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="754b4f64006bb56947e7f8ed014b7227d3ff1a01" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; All element references in AngularJS are always wrapped with jQuery or jqLite (such as the element argument in a directive's compile / link function). They are never raw DOM references.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt; AngularJS中的所有元素引用始终使用jQuery或jqLit​​e进行包装（例如指令的compile / link函数中的element参数）。它们绝不是原始的DOM引用。</target>
        </trans-unit>
        <trans-unit id="6bccc0e1ef7219cdcae1c7eee6b50dfe79beaa7d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; An &quot;origin&quot; consists of the &lt;a href=&quot;https://en.wikipedia.org/wiki/URI_scheme&quot;&gt;URI scheme&lt;/a&gt;, the &lt;a href=&quot;https://en.wikipedia.org/wiki/Hostname&quot;&gt;hostname&lt;/a&gt; and the &lt;a href=&quot;https://en.wikipedia.org/wiki/Port_(computer_networking&quot;&gt;port number&lt;/a&gt;. For &lt;code&gt;http:&lt;/code&gt; and &lt;code&gt;https:&lt;/code&gt;, the port number can be omitted if using th default ports (80 and 443 respectively). Examples: &lt;code&gt;http://example.com&lt;/code&gt;, &lt;code&gt;https://api.example.com:9876&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt; &amp;ldquo;来源&amp;rdquo;由&lt;a href=&quot;https://en.wikipedia.org/wiki/URI_scheme&quot;&gt;URI方案&lt;/a&gt;，&lt;a href=&quot;https://en.wikipedia.org/wiki/Hostname&quot;&gt;主机名&lt;/a&gt;和&lt;a href=&quot;https://en.wikipedia.org/wiki/Port_(computer_networking&quot;&gt;端口号组成&lt;/a&gt;。对于 &lt;code&gt;http:&lt;/code&gt; 和 &lt;code&gt;https:&lt;/code&gt; ：，如果使用默认端口（分别为80和443），则可以省略端口号。例如： &lt;code&gt;http://example.com&lt;/code&gt; ， &lt;code&gt;https://api.example.com:9876&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="07d16e1f6d934f26fde4c4dbf393c311b322112b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; AngularJS directive attributes take either expressions &lt;em&gt;or&lt;/em&gt; interpolation markup with embedded expressions. It is considered &lt;strong&gt;bad practice&lt;/strong&gt; to embed interpolation markup inside an expression:</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt; AngularJS指令属性采用带嵌入式表达式的表达式&lt;em&gt;或&lt;/em&gt;插值标记。将插值标记嵌入表达式中被认为是&lt;strong&gt;不好的做法&lt;/strong&gt;：</target>
        </trans-unit>
        <trans-unit id="9f30dc881f403b4408bffc55af0c839141d80f1b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; AngularJS does not make a copy of the &lt;code&gt;data&lt;/code&gt; parameter before it is passed into the &lt;code&gt;transformRequest&lt;/code&gt; pipeline. That means changes to the properties of &lt;code&gt;data&lt;/code&gt; are not local to the transform function (since Javascript passes objects by reference). For example, when calling &lt;code&gt;$http.get(url, $scope.myObject)&lt;/code&gt;, modifications to the object's properties in a transformRequest function will be reflected on the scope and in any templates where the object is data-bound. To prevent this, transform functions should have no side-effects. If you need to modify properties, it is recommended to make a copy of the data, or create new object to return.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt; AngularJS在将 &lt;code&gt;data&lt;/code&gt; 参数传递到 &lt;code&gt;transformRequest&lt;/code&gt; 管道之前不会对其进行复制。这意味着对 &lt;code&gt;data&lt;/code&gt; 属性的更改对于转换函数而言不是局部的（因为Javascript通过引用传递对象）。例如，当调用 &lt;code&gt;$http.get(url, $scope.myObject)&lt;/code&gt; ，对transformRequest函数中对象属性的修改将反映在范围和对象绑定数据的任何模板中。为避免这种情况，变换函数应该没有副作用。如果需要修改属性，建议制作数据副本或创建要返回的新对象。</target>
        </trans-unit>
        <trans-unit id="62e8d769efbb38bebbae56179db43581fb022339" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; AngularJS uses &lt;a href=&quot;http://misko.hevery.com/2009/02/19/constructor-injection-vs-setter-injection/&quot;&gt;&lt;strong&gt;constructor injection&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt; AngularJS使用&lt;a href=&quot;http://misko.hevery.com/2009/02/19/constructor-injection-vs-setter-injection/&quot;&gt;&lt;strong&gt;构造函数注入&lt;/strong&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ea8f867f10d41b8ea0eac218ad0e389751b74337" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Any unspecified options will use the default value. You can see the default values below.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;任何未指定的选项将使用默认值。您可以在下面看到默认值。</target>
        </trans-unit>
        <trans-unit id="0be1272e4ff520c7319bf0af92eafbe034baf447" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Avoid using the &lt;code&gt;g&lt;/code&gt; flag on the RegExp, as it will cause each successive search to start at the index of the last search's match, thus not taking the whole input value into account.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;避免在RegExp上使用 &lt;code&gt;g&lt;/code&gt; 标志，因为它会导致每个连续的搜索都从上次搜索的匹配项的索引处开始，因此不会考虑整个输入值。</target>
        </trans-unit>
        <trans-unit id="9646681f60adbf1cab980b4c3672b602175ba12b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Do not bootstrap the app on an element with a directive that uses &lt;a href=&quot;../service/%24compile#transclusion.html&quot;&gt;transclusion&lt;/a&gt;, such as &lt;a href=&quot;../directive/ngif&quot;&gt;&lt;code&gt;ngIf&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../directive/nginclude&quot;&gt;&lt;code&gt;ngInclude&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ngroute/directive/ngview&quot;&gt;&lt;code&gt;ngView&lt;/code&gt;&lt;/a&gt;. Doing this misplaces the app &lt;a href=&quot;../service/%24rootelement&quot;&gt;&lt;code&gt;$rootElement&lt;/code&gt;&lt;/a&gt; and the app's &lt;a href=&quot;../../auto/service/%24injector&quot;&gt;injector&lt;/a&gt;, causing animations to stop working and making the injector inaccessible from outside the app.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;请勿将应用程序引导到使用诸如&lt;a href=&quot;../directive/ngif&quot;&gt; &lt;code&gt;ngIf&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../directive/nginclude&quot;&gt; &lt;code&gt;ngInclude&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../ngroute/directive/ngview&quot;&gt; &lt;code&gt;ngView&lt;/code&gt; 之&lt;/a&gt;类的使用&lt;a href=&quot;../service/%24compile#transclusion.html&quot;&gt;包含&lt;/a&gt;指令的元素。这样做会放错应用程序&lt;a href=&quot;../service/%24rootelement&quot;&gt; &lt;code&gt;$rootElement&lt;/code&gt; &lt;/a&gt;和应用程序的&lt;a href=&quot;../../auto/service/%24injector&quot;&gt;注射器的位置&lt;/a&gt;，从而导致动画停止工作并使注射器无法从应用程序外部访问。</target>
        </trans-unit>
        <trans-unit id="ee7d1df2da097b762e8500ab2bc8acc5c59dd5dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Filter names must be valid AngularJS &lt;a href=&quot;../../../guide/expression&quot;&gt;&lt;code&gt;Expressions&lt;/code&gt;&lt;/a&gt; identifiers, such as &lt;code&gt;uppercase&lt;/code&gt; or &lt;code&gt;orderBy&lt;/code&gt;. Names with special characters, such as hyphens and dots, are not allowed. If you wish to namespace your filters, then you can use capitalization (&lt;code&gt;myappSubsectionFilterx&lt;/code&gt;) or underscores (&lt;code&gt;myapp_subsection_filterx&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;过滤器名称必须是有效的AngularJS &lt;a href=&quot;../../../guide/expression&quot;&gt; &lt;code&gt;Expressions&lt;/code&gt; &lt;/a&gt;标识符，例如 &lt;code&gt;uppercase&lt;/code&gt; 或 &lt;code&gt;orderBy&lt;/code&gt; 。不允许使用带有特殊字符的名称，例如连字符和点。如果希望为过滤器命名空间，则可以使用大写字母（ &lt;code&gt;myappSubsectionFilterx&lt;/code&gt; ）或下划线（ &lt;code&gt;myapp_subsection_filterx&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="b6db5293b8274f7a74ad2c0a15707b9a31946b87" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Filter names must be valid AngularJS &lt;a href=&quot;expression&quot;&gt;&lt;code&gt;Expressions&lt;/code&gt;&lt;/a&gt; identifiers, such as &lt;code&gt;uppercase&lt;/code&gt; or &lt;code&gt;orderBy&lt;/code&gt;. Names with special characters, such as hyphens and dots, are not allowed. If you wish to namespace your filters, then you can use capitalization (&lt;code&gt;myappSubsectionFilterx&lt;/code&gt;) or underscores (&lt;code&gt;myapp_subsection_filterx&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;过滤器名称必须是有效的AngularJS &lt;a href=&quot;expression&quot;&gt; &lt;code&gt;Expressions&lt;/code&gt; &lt;/a&gt;标识符，例如 &lt;code&gt;uppercase&lt;/code&gt; 或 &lt;code&gt;orderBy&lt;/code&gt; 。不允许使用带有特殊字符的名称，例如连字符和点。如果希望为过滤器命名空间，则可以使用大写字母（ &lt;code&gt;myappSubsectionFilterx&lt;/code&gt; ）或下划线（ &lt;code&gt;myapp_subsection_filterx&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="09b3de40dff5562853d96db36635c9e72bd0fad2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If present, &lt;code&gt;classNameFilter&lt;/code&gt; will be checked after &lt;a href=&quot;%24animateprovider#customFilter.html&quot;&gt;customFilter&lt;/a&gt;. If &lt;code&gt;customFilter&lt;/code&gt; is present and returns false, &lt;code&gt;classNameFilter&lt;/code&gt; will not be checked.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;如果存在，将在&lt;a href=&quot;%24animateprovider#customFilter.html&quot;&gt;customFilter&lt;/a&gt;之后检查 &lt;code&gt;classNameFilter&lt;/code&gt; 。如果存在 &lt;code&gt;customFilter&lt;/code&gt; 并返回false，则不会检查 &lt;code&gt;classNameFilter&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="29f87520727c565590339f924ac7cca7cfc0196b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If present, &lt;code&gt;customFilter&lt;/code&gt; will be checked before &lt;a href=&quot;%24animateprovider#classNameFilter.html&quot;&gt;classNameFilter&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;如果存在， &lt;code&gt;customFilter&lt;/code&gt; 在&lt;a href=&quot;%24animateprovider#classNameFilter.html&quot;&gt;classNameFilter&lt;/a&gt;之前检查customFilter。</target>
        </trans-unit>
        <trans-unit id="8336bca83b29dfc525f1cedfe875ac2325965bd2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If the predicate is missing or empty then it defaults to &lt;code&gt;'+'&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;如果谓词丢失或为空，则默认为 &lt;code&gt;'+'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fb48c215391d9e21f60d1b4f3e5128f35325a987" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If you notice numbers not being sorted as expected, make sure they are actually being saved as numbers and not strings. &lt;strong&gt;Note:&lt;/strong&gt; For the purpose of sorting, &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt; are considered &quot;greater than&quot; any other value (with undefined &quot;greater than&quot; null). This effectively means that &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt; values end up at the end of a list sorted in ascending order. &lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;null&lt;/code&gt; values use &lt;code&gt;'null'&lt;/code&gt; as their type to be able to distinguish them from objects.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;如果您发现数字未按预期排序，请确保将其实际保存为数字而不是字符串。&lt;strong&gt;注意：&lt;/strong&gt;为了进行排序，将 &lt;code&gt;null&lt;/code&gt; 和 &lt;code&gt;undefined&lt;/code&gt; 视为&amp;ldquo;大于&amp;rdquo;任何其他值（undefined为&amp;ldquo;大于&amp;rdquo; null）。这实际上意味着 &lt;code&gt;null&lt;/code&gt; 和 &lt;code&gt;undefined&lt;/code&gt; 值最终会出现在以升序排序的列表的末尾。&lt;strong&gt;注意：&lt;/strong&gt; &lt;code&gt;null&lt;/code&gt; 值使用 &lt;code&gt;'null'&lt;/code&gt; 作为其类型，以便能够将它们与对象区分开。</target>
        </trans-unit>
        <trans-unit id="7dcfa7bc4217aa09ca0ac15abc5df872e42c3cb0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If your scope already contains a property with this name, it will be hidden or overwritten. Make sure, you specify an appropriate name for this property, that does not collide with other properties on the scope.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;如果作用域已经包含具有该名称的属性，则它将被隐藏或覆盖。确保为此属性指定一个适当的名称，该名称不会与合并范围上的其他属性冲突。</target>
        </trans-unit>
        <trans-unit id="6de6d75d2a08de0ddaf214e94f5c491a4f41f785" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; In contrast to &lt;a href=&quot;../../ng/service/%24http#usage.html&quot;&gt;$http.config&lt;/a&gt;, &lt;a href=&quot;../../ng/service/%24q&quot;&gt;promises&lt;/a&gt; are &lt;strong&gt;not&lt;/strong&gt; supported in &lt;code&gt;$resource&lt;/code&gt;, because the same value would be used for multiple requests. If you are looking for a way to cancel requests, you should use the &lt;code&gt;cancellable&lt;/code&gt; option.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;相较于&lt;a href=&quot;../../ng/service/%24http#usage.html&quot;&gt;$ http.config&lt;/a&gt;，&lt;a href=&quot;../../ng/service/%24q&quot;&gt;承诺&lt;/a&gt;是&lt;strong&gt;不&lt;/strong&gt;支持的 &lt;code&gt;$resource&lt;/code&gt; ，因为相同的值将被用于多个请求。如果您正在寻找取消请求的方法，则应使用 &lt;code&gt;cancellable&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="2a9960a1716b955d15c8ef82b1ff61b1bfaa4a68" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Keep in mind that &lt;code&gt;angular.extend&lt;/code&gt; does not support recursive merge (deep copy). Use &lt;a href=&quot;angular.merge&quot;&gt;&lt;code&gt;angular.merge&lt;/code&gt;&lt;/a&gt; for this.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;请记住， &lt;code&gt;angular.extend&lt;/code&gt; 不支持递归合并（深度复制）。为此使用&lt;a href=&quot;angular.merge&quot;&gt; &lt;code&gt;angular.merge&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a737670eed793e3a7f5e79a30adcd1dd5cf06a3f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Keep in mind that this function will not find elements by tag name / CSS selector. For lookups by tag name, try instead &lt;code&gt;angular.element(document).find(...)&lt;/code&gt; or &lt;code&gt;$document.find()&lt;/code&gt;, or use the standard DOM APIs, e.g. &lt;code&gt;document.querySelectorAll()&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;请记住，此功能将不会通过标签名称/ CSS选择器来查找元素。对于按标记名进行查找，请改用 &lt;code&gt;angular.element(document).find(...)&lt;/code&gt; 或 &lt;code&gt;$document.find()&lt;/code&gt; ，或使用标准DOM API，例如 &lt;code&gt;document.querySelectorAll()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="25007ddb7e4598a0075b438ca00a30fc96476806" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Like other core AngularJS identifiers, built-in services always start with &lt;code&gt;$&lt;/code&gt; (e.g. &lt;code&gt;$http&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;与其他核心AngularJS标识符一样，内置服务始终以 &lt;code&gt;$&lt;/code&gt; 开头（例如 &lt;code&gt;$http&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="4932f6167e601a77c161e5c189cbfa99ccc31644" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Normally, a scope prototypically inherits from its parent. An isolated scope does not. See the &lt;a href=&quot;../api/ng/service/%24compile#directive-definition-object.html&quot;&gt;&quot;Directive Definition Object - scope&quot;&lt;/a&gt; section for more information about isolate scopes.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;通常，范围原型是从其父级继承的。孤立的作用域则没有。有关隔离范围的更多信息，请参见&lt;a href=&quot;../api/ng/service/%24compile#directive-definition-object.html&quot;&gt;&amp;ldquo;指令定义对象-范围&amp;rdquo;&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="1da042f7bf95ae6c4e993f7e979d273468251963" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Not every feature offered is available for all input types. Specifically, data binding and event handling via &lt;code&gt;ng-model&lt;/code&gt; is unsupported for &lt;code&gt;input[file]&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;并非所有提供的功能都适用于所有输入类型。具体来说， &lt;code&gt;input[file]&lt;/code&gt; 不支持通过 &lt;code&gt;ng-model&lt;/code&gt; 进行数据绑定和事件处理。</target>
        </trans-unit>
        <trans-unit id="43c9bbd85138c973366badefbee28f8a58515f29" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Passing a &lt;code&gt;transclude&lt;/code&gt; function to the $compile function is deprecated, as it e.g. will not use the right outer scope. Please pass the transclude function as a &lt;code&gt;parentBoundTranscludeFn&lt;/code&gt; to the link function instead.</source>
          <target state="translated">&lt;strong&gt;注意：不建议&lt;/strong&gt;将 &lt;code&gt;transclude&lt;/code&gt; 函数传递给$ compile函数，因为它例如将不会使用正确的外部范围。请改为将 &lt;code&gt;parentBoundTranscludeFn&lt;/code&gt; 函数作为parentBoundTranscludeFn传递给链接函数。</target>
        </trans-unit>
        <trans-unit id="0c375e47ef7907278cde581e097943b5b5c842c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Protractor based end-to-end tests cannot use this function to bootstrap manually. They must use &lt;a href=&quot;../directive/ngapp&quot;&gt;ngApp&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;基于量角器的端到端测试不能使用此功能手动引导。他们必须使用&lt;a href=&quot;../directive/ngapp&quot;&gt;ngApp&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8cf1ad8dcecbe51df5c09b1d4e999791e1bdb417" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Re-using DOM elements can have unforeseen effects. Read the &lt;a href=&quot;ngrepeat#tracking-and-duplicates.html&quot;&gt;section on tracking and duplicates&lt;/a&gt; for more info.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;重复使用DOM元素会产生无法预料的影响。阅读&lt;a href=&quot;ngrepeat#tracking-and-duplicates.html&quot;&gt;有关跟踪和重复项&lt;/a&gt;的部分以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="64d9e466303a2306994cdaf48132f8a30be292b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The &lt;code&gt;transclude&lt;/code&gt; function that is passed to the compile function is deprecated, as it e.g. does not know about the right outer scope. Please use the transclude function that is passed to the link function instead.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;不推荐使用传递给compile函数的 &lt;code&gt;transclude&lt;/code&gt; 函数，因为它例如不知道正确的外部作用域。请改用传递给link函数的transclude函数。</target>
        </trans-unit>
        <trans-unit id="1d372d7dabca924b84525cbea0b2c53815c203cb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The compile function cannot handle directives that recursively use themselves in their own templates or compile functions. Compiling these directives results in an infinite loop and stack overflow errors. This can be avoided by manually using $compile in the postLink function to imperatively compile a directive's template instead of relying on automatic template compilation via &lt;code&gt;template&lt;/code&gt; or &lt;code&gt;templateUrl&lt;/code&gt; declaration or manual compilation inside the compile function.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;编译函数无法处理在其自己的模板或编译函数中递归使用自身的指令。编译这些指令会导致无限循环和堆栈溢出错误。可以通过在postLink函数中手动使用$ compile强制性地编译指令模板来避免这种情况，而不必依靠通过 &lt;code&gt;template&lt;/code&gt; 或 &lt;code&gt;templateUrl&lt;/code&gt; 声明进行的自动模板编译或依靠compile函数中的手动编译。</target>
        </trans-unit>
        <trans-unit id="fef5ea5f7e6008b5573646b693cf5d0dd8ef25d4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The compile function cannot handle directives that recursively use themselves in their own templates or compile functions. Compiling these directives results in an infinite loop and stack overflow errors. This can be avoided by manually using &lt;code&gt;$compile&lt;/code&gt; in the postLink function to imperatively compile a directive's template instead of relying on automatic template compilation via &lt;code&gt;template&lt;/code&gt; or &lt;code&gt;templateUrl&lt;/code&gt; declaration or manual compilation inside the compile function.</source>
          <target state="translated">&lt;strong&gt;Note:&lt;/strong&gt; The compile function cannot handle directives that recursively use themselves in their own templates or compile functions. Compiling these directives results in an infinite loop and stack overflow errors. This can be avoided by manually using &lt;code&gt;$compile&lt;/code&gt; in the postLink function to imperatively compile a directive's template instead of relying on automatic template compilation via &lt;code&gt;template&lt;/code&gt; or &lt;code&gt;templateUrl&lt;/code&gt; declaration or manual compilation inside the compile function.</target>
        </trans-unit>
        <trans-unit id="c1a7cf77f06230eb77dc4be6a59d85af8ef8f296" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The template instance and the link instance may be different objects if the template has been cloned. For this reason it is &lt;strong&gt;not&lt;/strong&gt; safe to do anything other than DOM transformations that apply to all cloned DOM nodes within the compile function. Specifically, DOM listener registration should be done in a linking function rather than in a compile function.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;如果已克隆模板，则模板实例和链接实例可能是不同的对象。出于这个原因，它是&lt;strong&gt;不是&lt;/strong&gt;安全的做多适用于所有克隆DOM节点编译函数中DOM转换的任何其他。具体来说，DOM侦听器注册应在链接功能中完成，而不是在编译功能中完成。</target>
        </trans-unit>
        <trans-unit id="4c1bb05a6bbf37a35eb2ec554716d99aa62c0f75" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; These &lt;code&gt;=attr&lt;/code&gt; attributes in the &lt;code&gt;scope&lt;/code&gt; option of directives are normalized just like directive names. To bind to the attribute in &lt;code&gt;&amp;lt;div bind-to-this=&quot;thing&quot;&amp;gt;&lt;/code&gt;, you'd specify a binding of &lt;code&gt;=bindToThis&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;指令的 &lt;code&gt;scope&lt;/code&gt; 选项中的这些 &lt;code&gt;=attr&lt;/code&gt; 属性像指令名称一样被规范化。要绑定到 &lt;code&gt;&amp;lt;div bind-to-this=&quot;thing&quot;&amp;gt;&lt;/code&gt; 的属性，您可以指定 &lt;code&gt;=bindToThis&lt;/code&gt; 的绑定。</target>
        </trans-unit>
        <trans-unit id="26330f0aa2b3354d455a060a2a0ed9b50f0e0816" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This directive is also added when the plain &lt;code&gt;maxlength&lt;/code&gt; attribute is used, with two differences:</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;当使用纯 &lt;code&gt;maxlength&lt;/code&gt; 属性时，也会添加此伪指令，但有两个区别：</target>
        </trans-unit>
        <trans-unit id="238371dbb97a0e21fd538ddd42aa26554743d3ac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This directive is also added when the plain &lt;code&gt;minlength&lt;/code&gt; attribute is used, with two differences:</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;当使用plain &lt;code&gt;minlength&lt;/code&gt; 属性时，也会添加此伪指令，但有两个区别：</target>
        </trans-unit>
        <trans-unit id="054250c4eff180ddca708b0e13aaa9156bc4280e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This directive is also added when the plain &lt;code&gt;pattern&lt;/code&gt; attribute is used, with two differences:</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;当使用纯 &lt;code&gt;pattern&lt;/code&gt; 属性时，也会添加此伪指令，但有两个区别：</target>
        </trans-unit>
        <trans-unit id="9a3171a730d4dfd4d4e95771c02006e09d50cdce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This document is an in-depth reference of all directive options. For a gentle introduction to directives with examples of common use cases, see the &lt;a href=&quot;../../../guide/directive&quot;&gt;directive guide&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;本文档是所有指令选项的深入参考。有关指令的通俗介绍和常见用例，请参阅&lt;a href=&quot;../../../guide/directive&quot;&gt;指令指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2dd59fef3a0d3dd52af38640e43c530d57bae301" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This option has no effect if &lt;code&gt;reloadOnUrl&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;如果将 &lt;code&gt;reloadOnUrl&lt;/code&gt; 设置为 &lt;code&gt;false&lt;/code&gt; ,则此选项无效。</target>
        </trans-unit>
        <trans-unit id="66f44d93a693e4c8d18278d6f5c209ad5bac8242" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; When testing an element transclude directive you must not place the directive at the root of the DOM fragment that is being compiled. See &lt;a href=&quot;../../../guide/unit-testing#testing-transclusion-directives.html&quot;&gt;Testing Transclusion Directives&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;测试元素transclude指令时，不得将指令放置在正在编译的DOM片段的根目录下。请参阅&lt;a href=&quot;../../../guide/unit-testing#testing-transclusion-directives.html&quot;&gt;测试包含指令&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b58b0c8530e6790b470560e7f408cab50785f3ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; When using onload on SVG elements in IE11, the browser will try to call a function with the name on the window element, which will usually throw a &quot;function is undefined&quot; error. To fix this, you can instead use &lt;code&gt;data-onload&lt;/code&gt; or a different form that &lt;a href=&quot;../../../guide/directive#normalization.html&quot;&gt;matches&lt;/a&gt;&lt;code&gt;onload&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;在IE11中的SVG元素上使用onload时，浏览器将尝试使用window元素上的名称调用函数，这通常会引发&amp;ldquo; function is undefined&amp;rdquo;错误。要解决此问题，您可以改用 &lt;code&gt;data-onload&lt;/code&gt; 或&lt;a href=&quot;../../../guide/directive#normalization.html&quot;&gt;与&lt;/a&gt; &lt;code&gt;onload&lt;/code&gt; 匹配的其他形式。</target>
        </trans-unit>
        <trans-unit id="43f275432395642736507de1fe9a315f4610ac22" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; When you create a directive, it is restricted to attribute and elements only by default. In order to create directives that are triggered by class name, you need to use the &lt;code&gt;restrict&lt;/code&gt; option.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;创建指令时，默认情况下仅将指令限制为属性和元素。为了创建由类名触发的指令，您需要使用 &lt;code&gt;restrict&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="32cd8109a72d8948eb03c5cd4ec38de5ffe9496c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; You do not currently have the ability to access scope variables from the &lt;code&gt;templateUrl&lt;/code&gt; function, since the template is requested before the scope is initialized.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;您当前无法从 &lt;code&gt;templateUrl&lt;/code&gt; 函数访问范围变量，因为在初始化范围之前需要模板。</target>
        </trans-unit>
        <trans-unit id="c3bc51797a8a7ef94a8e3d3ab8bec2861e246ac8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; You should not use the ng-app directive when manually bootstrapping your app.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;手动引导应用程序时，不应使用ng-app指令。</target>
        </trans-unit>
        <trans-unit id="e718d160fc8fa7b57d62c3c0b94a711ce06db0b1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; if this function is called outside of a &lt;code&gt;$digest&lt;/code&gt; cycle, a new &lt;code&gt;$digest&lt;/code&gt; cycle will be scheduled. However, it is encouraged to always call code that changes the model from within an &lt;code&gt;$apply&lt;/code&gt; call. That includes code evaluated via &lt;code&gt;$evalAsync&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;如果在 &lt;code&gt;$digest&lt;/code&gt; 循环之外调用此函数，则会安排一个新的 &lt;code&gt;$digest&lt;/code&gt; 循环。但是，建议始终在 &lt;code&gt;$apply&lt;/code&gt; 调用中调用更改模型的代码。这包括通过 &lt;code&gt;$evalAsync&lt;/code&gt; 评估的代码。</target>
        </trans-unit>
        <trans-unit id="2bfcfeb91f4c7f896d2812380dae3170c526be42" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; it is not possible to override the &lt;code&gt;getterSetter&lt;/code&gt; option.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;无法覆盖 &lt;code&gt;getterSetter&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="54b44c51ce581455eb6d9bebb63519e9ccd54302" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; the &lt;code&gt;script&lt;/code&gt; tag containing the template does not need to be included in the &lt;code&gt;head&lt;/code&gt; of the document, but it must be a descendent of the &lt;a href=&quot;%24rootelement&quot;&gt;$rootElement&lt;/a&gt; (e.g. element with &lt;a href=&quot;../directive/ngapp&quot;&gt;&lt;code&gt;ngApp&lt;/code&gt;&lt;/a&gt; attribute), otherwise the template will be ignored.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;包含模板的 &lt;code&gt;script&lt;/code&gt; 标签不需要包含在文档的 &lt;code&gt;head&lt;/code&gt; ，但是必须是&lt;a href=&quot;%24rootelement&quot;&gt;$ rootElement&lt;/a&gt;的后代（例如，具有&lt;a href=&quot;../directive/ngapp&quot;&gt; &lt;code&gt;ngApp&lt;/code&gt; &lt;/a&gt;属性的元素），否则模板将被忽略。</target>
        </trans-unit>
        <trans-unit id="937ca5efe376d5fad14e43dc0eebc369b4c45d8b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; the &lt;code&gt;track by&lt;/code&gt; expression must come last - after any filters, and the alias expression: &lt;code&gt;item in items | filter:searchText as results  track by item.id&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;在 &lt;code&gt;track by&lt;/code&gt; 表达式必须放在最后-任何过滤器后，和别名表达式： &lt;code&gt;item in items | filter:searchText as results track by item.id&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f8b05e820f0b4e3dbb8babe7b4acadcbcf440844" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; the default &lt;code&gt;trustedResourceUrlList&lt;/code&gt; of 'self' is not recommended if your app shares its origin with other apps! It is a good idea to limit it to only your application's directory.</source>
          <target state="translated">&lt;strong&gt;Note:&lt;/strong&gt; the default &lt;code&gt;trustedResourceUrlList&lt;/code&gt; of 'self' is not recommended if your app shares its origin with other apps! It is a good idea to limit it to only your application's directory.</target>
        </trans-unit>
        <trans-unit id="5c758091459e087cd64a7d9d853e92c0229d1b7d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; the default whitelist of 'self' is not recommended if your app shares its origin with other apps! It is a good idea to limit it to only your application's directory.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;如果您的应用与其他应用共享其原始来源，则不建议使用默认的&amp;ldquo;自我&amp;rdquo;白名单！将其限制为仅应用程序的目录是一个好主意。</target>
        </trans-unit>
        <trans-unit id="580217ca4b9a925610a894a2a8a3fbeec3d61913" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; this function only affects the options set on the &lt;code&gt;ngModelController&lt;/code&gt;, and not the options on the &lt;a href=&quot;../directive/ngmodeloptions&quot;&gt;&lt;code&gt;ngModelOptions&lt;/code&gt;&lt;/a&gt; directive from which they might have been obtained initially.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;此函数仅影响 &lt;code&gt;ngModelController&lt;/code&gt; 上设置的选项，而不会影响&lt;a href=&quot;../directive/ngmodeloptions&quot;&gt; &lt;code&gt;ngModelOptions&lt;/code&gt; &lt;/a&gt;指令上最初从中获取的选项。</target>
        </trans-unit>
        <trans-unit id="d7a9b2da896eca14042d2367f2756e8843535ce0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; this guide is targeted towards developers who are already familiar with AngularJS basics. If you're just getting started, we recommend the &lt;a href=&quot;https://code.angularjs.org/1.7.8/docs/guide/tutorial/&quot;&gt;tutorial&lt;/a&gt; first. If you just want to create custom directives, we recommend the &lt;a href=&quot;directive&quot;&gt;directives guide&lt;/a&gt;. If you want a deeper look into AngularJS's compilation process, you're in the right place.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;本指南面向已经熟悉AngularJS基础知识的开发人员。如果您只是入门，我们建议您先学习本&lt;a href=&quot;https://code.angularjs.org/1.7.8/docs/guide/tutorial/&quot;&gt;教程&lt;/a&gt;。如果您只想创建自定义指令，建议使用&lt;a href=&quot;directive&quot;&gt;指令guide&lt;/a&gt;。如果您想更深入地了解AngularJS的编译过程，那么您来对地方了。</target>
        </trans-unit>
        <trans-unit id="06f01bce739b9a30fca8b2e435855aebf0d4be03" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; this guide is targeted towards developers who are already familiar with AngularJS basics. If you're just getting started, we recommend the &lt;a href=&quot;https://code.angularjs.org/1.7.8/docs/guide/tutorial/&quot;&gt;tutorial&lt;/a&gt; first. If you're looking for the &lt;strong&gt;directives API&lt;/strong&gt;, you can find it in the &lt;a href=&quot;../api/ng/service/%24compile&quot;&gt;&lt;code&gt;$compile&lt;/code&gt; API docs&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;本指南面向已经熟悉AngularJS基础知识的开发人员。如果您只是入门，我们建议您先学习本&lt;a href=&quot;https://code.angularjs.org/1.7.8/docs/guide/tutorial/&quot;&gt;教程&lt;/a&gt;。如果要查找&lt;strong&gt;指令API&lt;/strong&gt;，可以在&lt;a href=&quot;../api/ng/service/%24compile&quot;&gt; &lt;code&gt;$compile&lt;/code&gt; API文档中&lt;/a&gt;找到它。</target>
        </trans-unit>
        <trans-unit id="7bf0543d9aad4b2ba4b3e77e506fe9ddef0a1e84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; this guide is targeted towards developers who are already familiar with AngularJS basics. If you're just getting started, we recommend the &lt;a href=&quot;https://code.angularjs.org/1.8.2/docs/guide/tutorial/&quot;&gt;tutorial&lt;/a&gt; first. If you just want to create custom directives, we recommend the &lt;a href=&quot;directive&quot;&gt;directives guide&lt;/a&gt;. If you want a deeper look into AngularJS's compilation process, you're in the right place.</source>
          <target state="translated">&lt;strong&gt;Note:&lt;/strong&gt; this guide is targeted towards developers who are already familiar with AngularJS basics. If you're just getting started, we recommend the &lt;a href=&quot;https://code.angularjs.org/1.8.2/docs/guide/tutorial/&quot;&gt;tutorial&lt;/a&gt; first. If you just want to create custom directives, we recommend the &lt;a href=&quot;directive&quot;&gt;directives guide&lt;/a&gt;. If you want a deeper look into AngularJS's compilation process, you're in the right place.</target>
        </trans-unit>
        <trans-unit id="382775d4e2e2878662ae90d8914053bb159602b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; this guide is targeted towards developers who are already familiar with AngularJS basics. If you're just getting started, we recommend the &lt;a href=&quot;https://code.angularjs.org/1.8.2/docs/guide/tutorial/&quot;&gt;tutorial&lt;/a&gt; first. If you're looking for the &lt;strong&gt;directives API&lt;/strong&gt;, you can find it in the &lt;a href=&quot;../api/ng/service/%24compile&quot;&gt;&lt;code&gt;$compile&lt;/code&gt; API docs&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;Note:&lt;/strong&gt; this guide is targeted towards developers who are already familiar with AngularJS basics. If you're just getting started, we recommend the &lt;a href=&quot;https://code.angularjs.org/1.8.2/docs/guide/tutorial/&quot;&gt;tutorial&lt;/a&gt; first. If you're looking for the &lt;strong&gt;directives API&lt;/strong&gt;, you can find it in the &lt;a href=&quot;../api/ng/service/%24compile&quot;&gt; &lt;code&gt;$compile&lt;/code&gt; API docs&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="8ca6b07f8e9745f83f6cc1954ff3ba302eda41da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;input[email]&lt;/code&gt; uses a regex to validate email addresses that is derived from the regex used in Chromium, which may not fulfill your app's requirements. If you need stricter (e.g. requiring a top-level domain), or more relaxed validation (e.g. allowing IPv6 address literals) you can use &lt;code&gt;ng-pattern&lt;/code&gt; or modify the built-in validators (see the &lt;a href=&quot;../../../guide/forms&quot;&gt;Forms guide&lt;/a&gt;).</source>
          <target state="translated">&lt;strong&gt;Note:&lt;/strong&gt; &lt;code&gt;input[email]&lt;/code&gt; uses a regex to validate email addresses that is derived from the regex used in Chromium, which may not fulfill your app's requirements. If you need stricter (e.g. requiring a top-level domain), or more relaxed validation (e.g. allowing IPv6 address literals) you can use &lt;code&gt;ng-pattern&lt;/code&gt; or modify the built-in validators (see the &lt;a href=&quot;../../../guide/forms&quot;&gt;Forms guide&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="d22ee8558a30b08ad6773cab5195b08247eb462a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;input[url]&lt;/code&gt; uses a regex to validate urls that is derived from the regex used in Chromium. If you need stricter validation, you can use &lt;code&gt;ng-pattern&lt;/code&gt; or modify the built-in validators (see the &lt;a href=&quot;../../../guide/forms&quot;&gt;Forms guide&lt;/a&gt;)</source>
          <target state="translated">&lt;strong&gt;Note:&lt;/strong&gt; &lt;code&gt;input[url]&lt;/code&gt; uses a regex to validate urls that is derived from the regex used in Chromium. If you need stricter validation, you can use &lt;code&gt;ng-pattern&lt;/code&gt; or modify the built-in validators (see the &lt;a href=&quot;../../../guide/forms&quot;&gt;Forms guide&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="43578b6de6d5a04f8a47794d2395d123f9352a38" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;ngSelected&lt;/code&gt; does not interact with the &lt;code&gt;select&lt;/code&gt; and &lt;code&gt;ngModel&lt;/code&gt; directives, it only sets the &lt;code&gt;selected&lt;/code&gt; attribute on the element. If you are using &lt;code&gt;ngModel&lt;/code&gt; on the select, you should not use &lt;code&gt;ngSelected&lt;/code&gt; on the options, as &lt;code&gt;ngModel&lt;/code&gt; will set the select value and selected options.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt; &lt;code&gt;ngSelected&lt;/code&gt; 不会与 &lt;code&gt;select&lt;/code&gt; 和 &lt;code&gt;ngModel&lt;/code&gt; 指令交互，它仅在元素上设置 &lt;code&gt;selected&lt;/code&gt; 属性。如果在选择上使用 &lt;code&gt;ngModel&lt;/code&gt; ，则不应在选项上使用 &lt;code&gt;ngSelected&lt;/code&gt; ，因为 &lt;code&gt;ngModel&lt;/code&gt; 将设置选择值和所选选项。</target>
        </trans-unit>
        <trans-unit id="9674dd656cd0bb33b36917505723e467176e6355" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;null&lt;/code&gt; values use &lt;code&gt;'null'&lt;/code&gt; as their type.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt; &lt;code&gt;null&lt;/code&gt; 值使用 &lt;code&gt;'null'&lt;/code&gt; 作为其类型。</target>
        </trans-unit>
        <trans-unit id="7ce3871382cfc81e140c332a7381c6d7ded995c4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;replace&lt;/code&gt; is deprecated in AngularJS and has been removed in the new Angular (v2+).</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;在AngularJS中不建议使用 &lt;code&gt;replace&lt;/code&gt; ，而在新的Angular（v2 +）中已将其删除。</target>
        </trans-unit>
        <trans-unit id="094902b4f074c52d206de76a0d6c62c38c4f99cb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;em&gt;Link&lt;/em&gt; means setting up listeners on the DOM and setting up &lt;code&gt;$watch&lt;/code&gt; on the Scope to keep the two in sync.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;&lt;em&gt;链接&lt;/em&gt;表示在DOM上设置侦听器，在Scope上设置 &lt;code&gt;$watch&lt;/code&gt; 以使两者保持同步。</target>
        </trans-unit>
        <trans-unit id="abd92687b99044b4eddf773d671c4667439b4622" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Note&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="4e7e869df02e986a8bd9dd779b5592b5c9faf996" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;a href=&quot;%24compile#-replace-.html&quot;&gt;&lt;code&gt;replace: true&lt;/code&gt;&lt;/a&gt; is deprecated and not recommended to use, mainly due to the issues listed here. It has been completely removed in the new Angular.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：&lt;a href=&quot;%24compile#-replace-.html&quot;&gt; &lt;code&gt;replace: true&lt;/code&gt; &lt;/a&gt;不建议使用true，并且不建议使用，主要是由于此处列出的问题。在新的Angular中已将其完全删除。</target>
        </trans-unit>
        <trans-unit id="a4451c5f79942d8017493f279d2afc73973a025d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;code&gt;ngForm&lt;/code&gt; cannot be used as a replacement for &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;, because it lacks its &lt;a href=&quot;https://html.spec.whatwg.org/#the-form-element&quot;&gt;built-in HTML functionality&lt;/a&gt;. Specifically, you cannot submit &lt;code&gt;ngForm&lt;/code&gt; like a &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; tag. That means, you cannot send data to the server with &lt;code&gt;ngForm&lt;/code&gt;, or integrate it with &lt;a href=&quot;ngsubmit&quot;&gt;&lt;code&gt;ngSubmit&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;： &lt;code&gt;ngForm&lt;/code&gt; 不能替代 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; ，因为它缺乏&lt;a href=&quot;https://html.spec.whatwg.org/#the-form-element&quot;&gt;内置的HTML功能&lt;/a&gt;。具体来说，您不能像 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 标记一样提交 &lt;code&gt;ngForm&lt;/code&gt; 。这意味着，您不能使用 &lt;code&gt;ngForm&lt;/code&gt; 将数据发送到服务器，也不能将其与&lt;a href=&quot;ngsubmit&quot;&gt; &lt;code&gt;ngSubmit&lt;/code&gt; &lt;/a&gt;集成。</target>
        </trans-unit>
        <trans-unit id="d01ba8914ae532b4b38f3b54193bdb550f9cf269" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: For fake HTTP backend implementation suitable for end-to-end testing or backend-less development please see &lt;a href=&quot;../../ngmocke2e/service/%24httpbackend&quot;&gt;e2e $httpBackend mock&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：有关适用于端到端测试或无后端开发的虚假HTTP后端实现，请参阅&lt;a href=&quot;../../ngmocke2e/service/%24httpbackend&quot;&gt;e2e $ httpBackend模拟&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b02c202d12207861a5f5725222e593ed8c38b35f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: For fake http backend implementation suitable for unit testing please see &lt;a href=&quot;../../ngmock/service/%24httpbackend&quot;&gt;unit-testing $httpBackend mock&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：有关适用于单元测试的伪造的http后端实现，请参阅&lt;a href=&quot;../../ngmock/service/%24httpbackend&quot;&gt;单元测试$ httpBackend模拟&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c97b6b23eb89dc034c80ac1fd70c6ded60d55024" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Generally, the events that are fired correspond 1:1 to &lt;code&gt;$animate&lt;/code&gt; method names, e.g. &lt;a href=&quot;%24animate#addClass.html&quot;&gt;addClass()&lt;/a&gt; will fire &lt;code&gt;addClass&lt;/code&gt;, and &lt;a href=&quot;../directive/ngclass&quot;&gt;&lt;code&gt;ngClass&lt;/code&gt;&lt;/a&gt; will fire &lt;code&gt;addClass&lt;/code&gt; if classes are added, and &lt;code&gt;removeClass&lt;/code&gt; if classes are removed. However, there are two exceptions:</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：一般情况下，被解雇对应1事件：1 &lt;code&gt;$animate&lt;/code&gt; 方法的名称，例如&lt;a href=&quot;%24animate#addClass.html&quot;&gt;）addClass（&lt;/a&gt;将火 &lt;code&gt;addClass&lt;/code&gt; ，并&lt;a href=&quot;../directive/ngclass&quot;&gt; &lt;code&gt;ngClass&lt;/code&gt; &lt;/a&gt;将火 &lt;code&gt;addClass&lt;/code&gt; 如果添加类和 &lt;code&gt;removeClass&lt;/code&gt; 如果类被删除。但是，有两个例外：</target>
        </trans-unit>
        <trans-unit id="7cacd31a04d29b782a40c79d6c3ab3a6d3435a24" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: If the array contains objects that reference themselves, filtering is not possible.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：如果数组包含引用自己的对象，则无法进行过滤。</target>
        </trans-unit>
        <trans-unit id="ac4a26705c378eb8deb6df0e71f71d7c21815409" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: If you have assignment in &lt;code&gt;ngInit&lt;/code&gt; along with a &lt;a href=&quot;../service/%24filter&quot;&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/a&gt;, make sure you have parentheses to ensure correct operator precedence:</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：如果您在 &lt;code&gt;ngInit&lt;/code&gt; 中分配了&lt;a href=&quot;../service/%24filter&quot;&gt; &lt;code&gt;filter&lt;/code&gt; &lt;/a&gt;，请确保使用括号以确保正确的运算符优先级：</target>
        </trans-unit>
        <trans-unit id="458f3e8132df2dd3d5450a74a9df936fbcdd5440" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Intervals created by this service must be explicitly destroyed when you are finished with them. In particular they are not automatically destroyed when a controller's scope or a directive's element are destroyed. You should take this into consideration and make sure to always cancel the interval at the appropriate moment. See the example below for more details on how and when to do this.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：完成此服务后，必须显式销毁此服务创建的间隔。特别是在销毁控制器的作用域或指令的元素时，它们不会自动销毁。您应该考虑到这一点，并确保始终在适当的时候取消间隔。有关如何以及何时执行此操作的更多详细信息，请参见下面的示例。</target>
        </trans-unit>
        <trans-unit id="ba6f1fdd102bb501811f6bf2972b3d2642460a55" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The element will be taken into account only as long as its &lt;code&gt;position&lt;/code&gt; is set to &lt;code&gt;fixed&lt;/code&gt;. This option is useful, when dealing with responsive navbars/headers that adjust their height and/or positioning according to the viewport's size.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：仅当元素的 &lt;code&gt;position&lt;/code&gt; 设置为 &lt;code&gt;fixed&lt;/code&gt; 时,才会考虑该元素。当处理根据视口大小调整其高度和/或位置的响应式导航栏/标题时，此选项很有用。</target>
        </trans-unit>
        <trans-unit id="40dca13cccab54863c3086362ebaf70a41480134" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The new attributes will not be treated as URI attributes, which means their values will not be sanitized as URIs using &lt;code&gt;$compileProvider&lt;/code&gt;'s &lt;a href=&quot;../../ng/provider/%24compileprovider#aHrefSanitizationTrustedUrlList.html&quot;&gt;aHrefSanitizationTrustedUrlList&lt;/a&gt; and &lt;a href=&quot;../../ng/provider/%24compileprovider#imgSrcSanitizationTrustedUrlList.html&quot;&gt;imgSrcSanitizationTrustedUrlList&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;Note&lt;/strong&gt;: The new attributes will not be treated as URI attributes, which means their values will not be sanitized as URIs using &lt;code&gt;$compileProvider&lt;/code&gt; 's &lt;a href=&quot;../../ng/provider/%24compileprovider#aHrefSanitizationTrustedUrlList.html&quot;&gt;aHrefSanitizationTrustedUrlList&lt;/a&gt; and &lt;a href=&quot;../../ng/provider/%24compileprovider#imgSrcSanitizationTrustedUrlList.html&quot;&gt;imgSrcSanitizationTrustedUrlList&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="137a110690fcaf3ac66664419099f281ac00252c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The new attributes will not be treated as URI attributes, which means their values will not be sanitized as URIs using &lt;code&gt;$compileProvider&lt;/code&gt;'s &lt;a href=&quot;../../ng/provider/%24compileprovider#aHrefSanitizationWhitelist.html&quot;&gt;aHrefSanitizationWhitelist&lt;/a&gt; and &lt;a href=&quot;../../ng/provider/%24compileprovider#imgSrcSanitizationWhitelist.html&quot;&gt;imgSrcSanitizationWhitelist&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：新属性不会被视为URI属性，这意味着它们的值将不会使用 &lt;code&gt;$compileProvider&lt;/code&gt; 的&lt;a href=&quot;../../ng/provider/%24compileprovider#aHrefSanitizationWhitelist.html&quot;&gt;aHrefSanitizationWhitelist&lt;/a&gt;和&lt;a href=&quot;../../ng/provider/%24compileprovider#imgSrcSanitizationWhitelist.html&quot;&gt;imgSrcSanitizationWhitelist&lt;/a&gt;作为URI进行净化。</target>
        </trans-unit>
        <trans-unit id="55917c01e65338e57270513362a867e1b4c0feee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Typically directives are registered with &lt;code&gt;module.directive&lt;/code&gt;. The example below is to illustrate how &lt;code&gt;$compile&lt;/code&gt; works.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：通常，伪指令是在 &lt;code&gt;module.directive&lt;/code&gt; 中注册的。下面的示例说明 &lt;code&gt;$compile&lt;/code&gt; 如何工作。</target>
        </trans-unit>
        <trans-unit id="b0494f4ee055225c681e0e403b86a484ffd8980e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PHP: &lt;/strong&gt;&lt;a href=&quot;http://blog.brunoscopelliti.com/building-a-restful-web-service-with-angularjs-and-php-more-power-with-resource&quot;&gt;Building a RESTful web service&lt;/a&gt;, &lt;a href=&quot;http://www.youtube.com/watch?v=hqAyiqUs93c&quot;&gt;End to End with Laravel 4 (video)&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;PHP：&lt;/strong&gt;&lt;a href=&quot;http://blog.brunoscopelliti.com/building-a-restful-web-service-with-angularjs-and-php-more-power-with-resource&quot;&gt;构建RESTful Web服务&lt;/a&gt;，&lt;a href=&quot;http://www.youtube.com/watch?v=hqAyiqUs93c&quot;&gt;Laravel 4端到端（视频）&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0b0b5a4d5f92ad612f527894de27f246836d4b6b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PHP: &lt;/strong&gt;&lt;a href=&quot;http://blog.brunoscopelliti.com/building-a-restful-web-service-with-angularjs-and-php-more-power-with-resource&quot;&gt;Building a RESTful web service&lt;/a&gt;, &lt;a href=&quot;https://www.youtube.com/watch?v=hqAyiqUs93c&quot;&gt;End to End with Laravel 4 (video)&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b054fa14b9f8995a1c15e748a733fb1cf28c399a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Paid online:&lt;/strong&gt;&lt;a href=&quot;https://www.pluralsight.com/search?q=angularjs&quot;&gt;Pluralsight&lt;/a&gt;, &lt;a href=&quot;https://tutsplus.com/course/easier-js-apps-with-angular/&quot;&gt;Tuts+&lt;/a&gt;, &lt;a href=&quot;http://www.lynda.com/AngularJS-tutorials/Up-Running-AngularJS/133318-2.html&quot;&gt;lynda.com&lt;/a&gt;, &lt;a href=&quot;http://www.wintellectnow.com/Course/Detail/mastering-angularjs&quot;&gt;WintellectNOW (4 lessons)&lt;/a&gt;, &lt;a href=&quot;https://www.packtpub.com/web-development/angularjs-maintaining-web-applications&quot;&gt;Packt&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;在线支付：&lt;/strong&gt;&lt;a href=&quot;https://www.pluralsight.com/search?q=angularjs&quot;&gt;Pluralsight&lt;/a&gt;，&lt;a href=&quot;https://tutsplus.com/course/easier-js-apps-with-angular/&quot;&gt;Tuts +&lt;/a&gt;，&lt;a href=&quot;http://www.lynda.com/AngularJS-tutorials/Up-Running-AngularJS/133318-2.html&quot;&gt;lynda.com&lt;/a&gt;，&lt;a href=&quot;http://www.wintellectnow.com/Course/Detail/mastering-angularjs&quot;&gt;WintellectNOW（4节课）&lt;/a&gt;，&lt;a href=&quot;https://www.packtpub.com/web-development/angularjs-maintaining-web-applications&quot;&gt;Packt&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7ed46aedfd7b0fd6c026a8e38d2a8ce283872b1d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Paid onsite:&lt;/strong&gt;&lt;a href=&quot;http://angularbootcamp.com/&quot;&gt;angularbootcamp.com&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;现场付费：&lt;/strong&gt;&lt;a href=&quot;http://angularbootcamp.com/&quot;&gt;angularbootcamp.com&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ef361f872ee0abe6437ca670508f1edf68b6175d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Passing an expression generated from user provided content as a predicate to &lt;code&gt;orderBy&lt;/code&gt; pipe&lt;/strong&gt;: &lt;code&gt;{{ value | orderBy : userContent }}&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;将用户提供的内容生成的表达式作为谓词传递给 &lt;code&gt;orderBy&lt;/code&gt; 管道&lt;/strong&gt;： &lt;code&gt;{{ value | orderBy : userContent }}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a49a97f0edbf657da69f757aee03a753983b32c9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Passing an expression generated from user-provided content in calls to services that parse expressions&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;将对用户提供的内容生成的表达式传递给对表达式进行解析的服务的调用&lt;/strong&gt;：</target>
        </trans-unit>
        <trans-unit id="ba373bfdf6ea17c370636f865ce98036d187cbe9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Passing an expression generated from user-provided content in calls to the following methods on a &lt;a href=&quot;scope&quot;&gt;scope&lt;/a&gt;&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;在调用&lt;a href=&quot;scope&quot;&gt;范围内&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;将由用户提供的内容生成的表达式传递给以下方法&lt;/strong&gt;：</target>
        </trans-unit>
        <trans-unit id="cf7b6c34e4e6dfb6bb513c537e719eef4875800a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Progressive enhancement&lt;/strong&gt;: Some users do not browse with JavaScript enabled or do not have the latest browser. An accessible message about site requirements can inform users and improve the experience.</source>
          <target state="translated">&lt;strong&gt;渐进增强&lt;/strong&gt;：某些用户未启用JavaScript进行浏览或没有最新的浏览器。有关站点要求的可访问消息可以通知用户并改善体验。</target>
        </trans-unit>
        <trans-unit id="e5dbbea29c67d64aa80bbcb732589e138e7f1c3a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Properties&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Properties&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5b2caabe019481b97276f492b585ec123276f9ad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RESTful services:&lt;/strong&gt;&lt;a href=&quot;https://github.com/mgonto/restangular&quot;&gt;Restangular&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;RESTful服务：&lt;/strong&gt;&lt;a href=&quot;https://github.com/mgonto/restangular&quot;&gt;矩形&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5fc726fc1694d2026c213ec7c238c454994e3951" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Rails: &lt;/strong&gt;&lt;a href=&quot;http://coderberry.me/blog/2013/04/22/angularjs-on-rails-4-part-1/&quot;&gt;Tutorial&lt;/a&gt;, &lt;a href=&quot;https://shellycloud.com/blog/2013/10/how-to-integrate-angularjs-with-rails-4&quot;&gt;AngularJS with Rails4&lt;/a&gt;, &lt;a href=&quot;https://github.com/hiravgandhi/angularjs-rails&quot;&gt;angularjs-rails&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Rails：&lt;/strong&gt;&lt;a href=&quot;http://coderberry.me/blog/2013/04/22/angularjs-on-rails-4-part-1/&quot;&gt;教程&lt;/a&gt;，&lt;a href=&quot;https://shellycloud.com/blog/2013/10/how-to-integrate-angularjs-with-rails-4&quot;&gt;带有Rails4的AngularJS&lt;/a&gt;，&lt;a href=&quot;https://github.com/hiravgandhi/angularjs-rails&quot;&gt;angularjs-rails&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="35f61f48a504bab275e88d2b627834431d260550" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Realtime Communication: &lt;/strong&gt;&lt;a href=&quot;http://www.creativebloq.com/javascript/angularjs-collaboration-board-socketio-2132885&quot;&gt;Socket.io&lt;/a&gt;, &lt;a href=&quot;https://github.com/jeffbcross/omnibinder&quot;&gt;OmniBinder&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;实时通讯：&lt;/strong&gt;&lt;a href=&quot;http://www.creativebloq.com/javascript/angularjs-collaboration-board-socketio-2132885&quot;&gt;Socket.io&lt;/a&gt;，&lt;a href=&quot;https://github.com/jeffbcross/omnibinder&quot;&gt;OmniBinder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4c4b1881e3ea790d1b4cb8dcf56958e79b072995" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RegExp&lt;/strong&gt; (&lt;em&gt;see caveat below&lt;/em&gt;)</source>
          <target state="translated">&lt;strong&gt;RegExp&lt;/strong&gt;（&lt;em&gt;请参阅下面的警告&lt;/em&gt;）</target>
        </trans-unit>
        <trans-unit id="2f424009ac2309fbb979e7f9569fcfa54550fbb5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Registering callbacks:&lt;/strong&gt; Registering callbacks clutters your code, making it hard to see the forest for the trees. Removing common boilerplate code such as callbacks is a good thing. It vastly reduces the amount of JavaScript coding &lt;em&gt;you&lt;/em&gt; have to do, and it makes it easier to see what your application does.</source>
          <target state="translated">&lt;strong&gt;注册回调：&lt;/strong&gt;注册回调会使您的代码混乱，从而难以看到树木的森林。删除常见的样板代码（如回调）是一件好事。它极大地减少了&lt;em&gt;您&lt;/em&gt;必须执行的JavaScript编码的数量，并使查看应用程序的工作变得更加容易。</target>
        </trans-unit>
        <trans-unit id="8bda6b80bdaa77386bd7e68ba0999abefbe67c29" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SEO:&lt;/strong&gt;&lt;a href=&quot;http://www.yearofmoo.com/2012/11/angularjs-and-seo.html&quot;&gt;By hand&lt;/a&gt;, &lt;a href=&quot;http://prerender.io/&quot;&gt;prerender.io&lt;/a&gt;, &lt;a href=&quot;http://www.brombone.com/&quot;&gt;Brombone&lt;/a&gt;, &lt;a href=&quot;http://getseojs.com/&quot;&gt;SEO.js&lt;/a&gt;, &lt;a href=&quot;http://www.seo4ajax.com/&quot;&gt;SEO4Ajax&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;SEO：&lt;/strong&gt;&lt;a href=&quot;http://www.yearofmoo.com/2012/11/angularjs-and-seo.html&quot;&gt;手动&lt;/a&gt;，&lt;a href=&quot;http://prerender.io/&quot;&gt;prerender.io&lt;/a&gt;，&lt;a href=&quot;http://www.brombone.com/&quot;&gt;Brombone&lt;/a&gt;，&lt;a href=&quot;http://getseojs.com/&quot;&gt;SEO.js&lt;/a&gt;，&lt;a href=&quot;http://www.seo4ajax.com/&quot;&gt;SEO4Ajax&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9b7329df37cbcee74f573d40974e8bfc0d92b934" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SQL and NoSQL backends:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;SQL和NoSQL后端：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="acf1014f44dc0693085e4a0ab0bf149931716756" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Scope destruction&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;范围破坏&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="076280b82e27232af3c9aa1b34ea31f26250c8e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Security:&lt;/strong&gt;&lt;a href=&quot;guide/security&quot;&gt;Security Docs&lt;/a&gt;, &lt;a href=&quot;api/ng/service/%24sce&quot;&gt;Strict Contextual Escaping&lt;/a&gt;, &lt;a href=&quot;api/ng/directive/ngcsp&quot;&gt;Content Security Policy&lt;/a&gt;, &lt;a href=&quot;api/ngsanitize/service/%24sanitize&quot;&gt;$sanitize&lt;/a&gt;, &lt;a href=&quot;https://www.youtube.com/watch?v=18ifoT-Id54&quot;&gt;video&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;安全性：&lt;/strong&gt;&lt;a href=&quot;guide/security&quot;&gt;安全文档&lt;/a&gt;，&lt;a href=&quot;api/ng/service/%24sce&quot;&gt;严格的上下文转义&lt;/a&gt;，&lt;a href=&quot;api/ng/directive/ngcsp&quot;&gt;内容安全策略&lt;/a&gt;，&lt;a href=&quot;api/ngsanitize/service/%24sanitize&quot;&gt;$ sanitize&lt;/a&gt;，&lt;a href=&quot;https://www.youtube.com/watch?v=18ifoT-Id54&quot;&gt;视频&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3818895c2eaf69923be55c09ae40035c7a33fc1d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Security:&lt;/strong&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=18ifoT-Id54&quot;&gt;video&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Security:&lt;/strong&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=18ifoT-Id54&quot;&gt;video&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="731d5463075faa14e1925cfee5778a98b6fb8b60" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Specific UI Elements:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;特定的UI元素：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f9d146aba5991ca9690d0ebf1b69c1d2ad2110eb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;String&lt;/strong&gt; (except the special value &lt;code&gt;'self'&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;字符串&lt;/strong&gt;（特殊值 &lt;code&gt;'self'&lt;/code&gt; 除外）</target>
        </trans-unit>
        <trans-unit id="45fd1f66005840cbb6e08d3413cddd2bf1c094d4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Text alternatives&lt;/strong&gt;: Add alternate text content to make visual information accessible using &lt;a href=&quot;http://www.w3.org/TR/html-alt-techniques/&quot;&gt;these W3C guidelines&lt;/a&gt;. The appropriate technique depends on the specific markup but can be accomplished using offscreen spans, &lt;code&gt;aria-label&lt;/code&gt; or label elements, image &lt;code&gt;alt&lt;/code&gt; attributes, &lt;code&gt;figure&lt;/code&gt;/&lt;code&gt;figcaption&lt;/code&gt; elements and more.</source>
          <target state="translated">&lt;strong&gt;替代文本&lt;/strong&gt;：添加替代文本内容进行视觉信息访问使用&lt;a href=&quot;http://www.w3.org/TR/html-alt-techniques/&quot;&gt;这些W3C的指导方针&lt;/a&gt;。适当的技术取决于特定的标记，但是可以使用屏幕外跨度， &lt;code&gt;aria-label&lt;/code&gt; 或标签元素，图像 &lt;code&gt;alt&lt;/code&gt; 属性， &lt;code&gt;figure&lt;/code&gt; /无 &lt;code&gt;figcaption&lt;/code&gt; 元素等来实现。</target>
        </trans-unit>
        <trans-unit id="6c47c9e2038c2eaa848fd0b4109affbd2ef7aa9b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Text alternatives&lt;/strong&gt;: Add alternate text content to make visual information accessible using &lt;a href=&quot;https://www.w3.org/TR/html-alt-techniques/&quot;&gt;these W3C guidelines&lt;/a&gt;. The appropriate technique depends on the specific markup but can be accomplished using offscreen spans, &lt;code&gt;aria-label&lt;/code&gt; or label elements, image &lt;code&gt;alt&lt;/code&gt; attributes, &lt;code&gt;figure&lt;/code&gt;/&lt;code&gt;figcaption&lt;/code&gt; elements and more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fba8d19cd4f7dea6aaa365182952d5236f7ad9d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The $location service:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;$ location服务：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1b7007892454ee4088595e9c377a077a8c78c5c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This is a dangerous API, which you use at your own risk!&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;这是一个危险的API，您需要自己承担风险！&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="101f5499ee7b85073fb5b7d462d7ebab58281432" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Touch events:&lt;/strong&gt;&lt;a href=&quot;api/ngtouch&quot;&gt;Touch events&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;触摸事件：&lt;/strong&gt;&lt;a href=&quot;api/ngtouch&quot;&gt;触摸事件&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ca46b9f8a99de723a70b66185c89b9dce9c64fbf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Underscore notation&lt;/strong&gt;: The use of the underscore notation (e.g.: &lt;code&gt;_$rootScope_&lt;/code&gt;) is a convention wide spread in AngularJS community to keep the variable names clean in your tests. That's why the &lt;a href=&quot;../api/auto/service/%24injector&quot;&gt;&lt;code&gt;$injector&lt;/code&gt;&lt;/a&gt; strips out the leading and the trailing underscores when matching the parameters. The underscore rule applies &lt;strong&gt;&lt;em&gt;only&lt;/em&gt;&lt;/strong&gt; if the name starts &lt;strong&gt;and&lt;/strong&gt; ends with exactly one underscore, otherwise no replacing happens.</source>
          <target state="translated">&lt;strong&gt;下划线表示法&lt;/strong&gt;：下划线表示法（例如 &lt;code&gt;_$rootScope_&lt;/code&gt; ）的使用在AngularJS社区中很普​​遍，以使变量名在测试中保持整洁。这就是为什么&lt;a href=&quot;../api/auto/service/%24injector&quot;&gt; &lt;code&gt;$injector&lt;/code&gt; &lt;/a&gt;在匹配参数时会去除前导和尾随下划线的原因。下划线规则&lt;strong&gt;&lt;em&gt;仅&lt;/em&gt;&lt;/strong&gt;在名称以一个下划线开头&lt;strong&gt;和&lt;/strong&gt;结尾&lt;strong&gt;&lt;em&gt;时才&lt;/em&gt;&lt;/strong&gt;适用，否则不会进行替换。</target>
        </trans-unit>
        <trans-unit id="8c9695aa3f0771d41376db49cc30e5d66abe41a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Unit testing:&lt;/strong&gt;&lt;a href=&quot;http://karma-runner.github.io&quot;&gt;Karma&lt;/a&gt;, &lt;a href=&quot;guide/unit-testing&quot;&gt;Unit testing&lt;/a&gt;, &lt;a href=&quot;guide/services#unit-testing.html&quot;&gt;Testing services&lt;/a&gt;,</source>
          <target state="translated">&lt;strong&gt;单元测试：&lt;/strong&gt;&lt;a href=&quot;http://karma-runner.github.io&quot;&gt;Karma&lt;/a&gt;，&lt;a href=&quot;guide/unit-testing&quot;&gt;单元测试&lt;/a&gt;，&lt;a href=&quot;guide/services#unit-testing.html&quot;&gt;测试服务&lt;/a&gt;，</target>
        </trans-unit>
        <trans-unit id="eeca4842d131502c4e4d20da777344377746dd2f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Unit testing:&lt;/strong&gt;&lt;a href=&quot;http://www.youtube.com/watch?v=YG5DEzaQBIc&quot;&gt;Using Karma (video)&lt;/a&gt;, &lt;a href=&quot;http://blog.jetbrains.com/webstorm/2013/10/running-javascript-tests-with-karma-in-webstorm-7/&quot;&gt;Karma in Webstorm&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;单元测试：&lt;/strong&gt;&lt;a href=&quot;http://blog.jetbrains.com/webstorm/2013/10/running-javascript-tests-with-karma-in-webstorm-7/&quot;&gt;在Webstorm中&lt;/a&gt;&lt;a href=&quot;http://www.youtube.com/watch?v=YG5DEzaQBIc&quot;&gt;使用Karma（视频）&lt;/a&gt;，Karma</target>
        </trans-unit>
        <trans-unit id="4e96eb862380ee10159ac0f04081c6be09d5050f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Unit testing:&lt;/strong&gt;&lt;a href=&quot;https://karma-runner.github.io&quot;&gt;Karma&lt;/a&gt;, &lt;a href=&quot;guide/unit-testing&quot;&gt;Unit testing&lt;/a&gt;, &lt;a href=&quot;guide/services#unit-testing.html&quot;&gt;Testing services&lt;/a&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61766f4d41999f9545c0e79b733db41b2c455d4b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Unit testing:&lt;/strong&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=YG5DEzaQBIc&quot;&gt;Using Karma (video)&lt;/a&gt;, &lt;a href=&quot;http://blog.jetbrains.com/webstorm/2013/10/running-javascript-tests-with-karma-in-webstorm-7/&quot;&gt;Karma in Webstorm&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1824507e8d65146ba51fd2f682f8bce763fbcb3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Visualization:&lt;/strong&gt;&lt;a href=&quot;http://gaslight.co/blog/angular-backed-svgs&quot;&gt;SVG&lt;/a&gt;, &lt;a href=&quot;http://www.ng-newsletter.com/posts/d3-on-angular.html&quot;&gt;D3.js&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;可视化：&lt;/strong&gt;&lt;a href=&quot;http://gaslight.co/blog/angular-backed-svgs&quot;&gt;SVG&lt;/a&gt;，&lt;a href=&quot;http://www.ng-newsletter.com/posts/d3-on-angular.html&quot;&gt;D3.js&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="43b420f64ccef0d7a45849c939b529e0440f143d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; Be careful not to cause &quot;double-submission&quot; by using both the &lt;code&gt;ngClick&lt;/code&gt; and &lt;code&gt;ngSubmit&lt;/code&gt; handlers together. See the &lt;a href=&quot;form#submitting-a-form-and-preventing-the-default-action.html&quot;&gt;&lt;code&gt;form&lt;/code&gt; directive documentation&lt;/a&gt; for a detailed discussion of when &lt;code&gt;ngSubmit&lt;/code&gt; may be triggered.</source>
          <target state="translated">&lt;strong&gt;警告：&lt;/strong&gt;注意不要同时使用 &lt;code&gt;ngClick&lt;/code&gt; 和 &lt;code&gt;ngSubmit&lt;/code&gt; 处理程序，以免引起&amp;ldquo;两次提交&amp;rdquo; 。有关何时可以触发 &lt;code&gt;ngSubmit&lt;/code&gt; 的详细讨论，请参见&lt;a href=&quot;form#submitting-a-form-and-preventing-the-default-action.html&quot;&gt; &lt;code&gt;form&lt;/code&gt; 指令文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2756abf1eaa19230be9bb95e04f5d2e16307d6dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Warning&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b5217522448e77af8b97a21a877276a4ab365b46" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Watcher registration&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;观察者注册&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="28bd0a25092a659fd8466d8287ab8ba78d234c4f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What does it mean to &quot;compile&quot; an HTML template?&lt;/strong&gt; For AngularJS, &quot;compilation&quot; means attaching directives to the HTML to make it interactive. The reason we use the term &quot;compile&quot; is that the recursive process of attaching directives mirrors the process of compiling source code in &lt;a href=&quot;http://en.wikipedia.org/wiki/Compiled_languages&quot;&gt;compiled programming languages&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;&amp;ldquo;编译&amp;rdquo; HTML模板是什么意思？&lt;/strong&gt;对于AngularJS，&amp;ldquo;编译&amp;rdquo;是指在HTML上附加指令以使其具有交互性。我们使用术语&amp;ldquo;编译&amp;rdquo;的原因是，附加指令的递归过程反映了已&lt;a href=&quot;http://en.wikipedia.org/wiki/Compiled_languages&quot;&gt;编译编程语言中&lt;/a&gt;源代码的编译过程。</target>
        </trans-unit>
        <trans-unit id="2d24291d6e3286f4e5bdbf1ae66c824b749125e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What does it mean to &quot;compile&quot; an HTML template?&lt;/strong&gt; For AngularJS, &quot;compilation&quot; means attaching directives to the HTML to make it interactive. The reason we use the term &quot;compile&quot; is that the recursive process of attaching directives mirrors the process of compiling source code in &lt;a href=&quot;https://en.wikipedia.org/wiki/Compiled_languages&quot;&gt;compiled programming languages&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="664e7640cdaa2696eb7827afab80580a8f9cf489" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;When should I use an attribute versus an element?&lt;/strong&gt; Use an element when you are creating a component that is in control of the template. The common case for this is when you are creating a Domain-Specific Language for parts of your template. Use an attribute when you are decorating an existing element with new functionality.</source>
          <target state="translated">&lt;strong&gt;什么时候应该使用属性而不是元素？&lt;/strong&gt;创建由模板控制的组件时，请使用元素。常见的情况是在为模板的一部分创建特定于域的语言时。用新功能装饰现有元素时，请使用属性。</target>
        </trans-unit>
        <trans-unit id="2feab5c0d7b5da0795b0fa56ef78488f3d7f1a9e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Workflow:&lt;/strong&gt;&lt;a href=&quot;https://github.com/yeoman/generator-angular&quot;&gt;Yeoman.io&lt;/a&gt; and &lt;a href=&quot;http://www.sitepoint.com/kickstart-your-angularjs-development-with-yeoman-grunt-and-bower/&quot;&gt;AngularJS Yeoman Tutorial&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;工作流程：&lt;/strong&gt;&lt;a href=&quot;https://github.com/yeoman/generator-angular&quot;&gt;Yeoman.io&lt;/a&gt;和&lt;a href=&quot;http://www.sitepoint.com/kickstart-your-angularjs-development-with-yeoman-grunt-and-bower/&quot;&gt;AngularJS Yeoman教程&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3f3f6ab59fb7d12e56b5eff068180765cef04fe8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Writing tons of initialization code just to get started:&lt;/strong&gt; Typically you need to write a lot of plumbing just to get a basic &quot;Hello World&quot; AJAX app working. With AngularJS you can bootstrap your app easily using services, which are auto-injected into your application in a &lt;a href=&quot;https://github.com/google/guice&quot;&gt;Guice&lt;/a&gt;-like dependency-injection style. This allows you to get started developing features quickly. As a bonus, you get full control over the initialization process in automated tests.</source>
          <target state="translated">&lt;strong&gt;刚开始&lt;/strong&gt;要编写大量&lt;strong&gt;的初始化代码：&lt;/strong&gt;通常，您需要编写大量管道才能使基本的&amp;ldquo; Hello World&amp;rdquo; AJAX应用程序正常工作。借助AngularJS，您可以使用服务轻松引导您的应用程序，这些服务会以类似&lt;a href=&quot;https://github.com/google/guice&quot;&gt;Guice&lt;/a&gt;的依赖项注入样式自动注入到您的应用程序中。这使您可以快速开始开发功能。另外，您可以完全控制自动化测试中的初始化过程。</target>
        </trans-unit>
        <trans-unit id="837a994c27693c0ffafa5e8b6bbd93b59ef4b61a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;You can use suitably sanitized server-side templating to dynamically generate CSS, URLs, etc, but not for generating templates that are bootstrapped/compiled by AngularJS.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;您可以使用经过适当处理的服务器端模板来动态生成CSS，URL等，但不能生成由AngularJS引导/编译的模板。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f42b5ce071116456c1fc4e1cc56cd6b04c6d1be1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;a library&lt;/strong&gt; - a collection of functions which are useful when writing web apps. Your code is in charge and it calls into the library when it sees fit. E.g., &lt;code&gt;jQuery&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;库&lt;/strong&gt; -编写Web应用程序时有用的功能集合。您的代码由您负责，并在合适时调用库。例如 &lt;code&gt;jQuery&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="98932b647226b8e2849198caedd642fb90dab6d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;actions&lt;/strong&gt; - &lt;code&gt;{Object.&amp;lt;Object&amp;gt;}&lt;/code&gt; - A hash with default actions declarations. Actions are high-level methods corresponding to RESTful actions/methods on resources. An action may specify what HTTP method to use, what URL to hit, if the return value will be a single object or a collection (array) of objects etc. For more details, see &lt;a href=&quot;../service/%24resource&quot;&gt;&lt;code&gt;$resource&lt;/code&gt;&lt;/a&gt;. The actions can also be enhanced or overwritten per resource class.</source>
          <target state="translated">&lt;strong&gt;动作&lt;/strong&gt; - &lt;code&gt;{Object.&amp;lt;Object&amp;gt;}&lt;/code&gt; -具有默认动作声明的哈希。动作是与资源上的RESTful动作/方法相对应的高级方法。一个动作可以指定要使用的HTTP方法，要命中的URL，如果返回值将是单个对象或对象的集合（数组）等。有关更多详细信息，请参见&lt;a href=&quot;../service/%24resource&quot;&gt; &lt;code&gt;$resource&lt;/code&gt; &lt;/a&gt;。还可以针对每个资源类增强或覆盖这些操作。</target>
        </trans-unit>
        <trans-unit id="2f2d2c0ce8d29d9f4e2bfa9fb62c6f4ed866864e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;addClass&lt;/strong&gt; - &lt;code&gt;{string}&lt;/code&gt; - space-separated CSS classes to add to element</source>
          <target state="translated">&lt;strong&gt;addClass&lt;/strong&gt; - &lt;code&gt;{string}&lt;/code&gt; -空格分隔CSS类添加到元件</target>
        </trans-unit>
        <trans-unit id="3b880e37bc32e5066151f7c349b650275f496d8b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ariaChecked&lt;/strong&gt; &amp;ndash; &lt;code&gt;{boolean}&lt;/code&gt; &amp;ndash; Enables/disables aria-checked tags</source>
          <target state="translated">&lt;strong&gt;ariaChecked&lt;/strong&gt; &amp;ndash; &lt;code&gt;{boolean}&lt;/code&gt; &amp;ndash;启用/禁用aria-checked标签</target>
        </trans-unit>
        <trans-unit id="b4566b629259ed3938a66f9e2c09e41cca0eff67" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ariaDisabled&lt;/strong&gt; &amp;ndash; &lt;code&gt;{boolean}&lt;/code&gt; &amp;ndash; Enables/disables aria-disabled tags</source>
          <target state="translated">&lt;strong&gt;ariaDisabled&lt;/strong&gt; &amp;ndash; &lt;code&gt;{boolean}&lt;/code&gt; &amp;ndash;启用/禁用aria禁用标签</target>
        </trans-unit>
        <trans-unit id="ec84a05dd50e86c6d693d672c9a56938940d4df1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ariaHidden&lt;/strong&gt; &amp;ndash; &lt;code&gt;{boolean}&lt;/code&gt; &amp;ndash; Enables/disables aria-hidden tags</source>
          <target state="translated">&lt;strong&gt;ariaHidden&lt;/strong&gt; &amp;ndash; &lt;code&gt;{boolean}&lt;/code&gt; &amp;ndash;启用/禁用aria隐藏标签</target>
        </trans-unit>
        <trans-unit id="f5b6a851da6c7f1da90b7c258c89ea999da5724f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ariaInvalid&lt;/strong&gt; &amp;ndash; &lt;code&gt;{boolean}&lt;/code&gt; &amp;ndash; Enables/disables aria-invalid tags</source>
          <target state="translated">&lt;strong&gt;ariaInvalid&lt;/strong&gt; &amp;ndash; &lt;code&gt;{boolean}&lt;/code&gt; &amp;ndash;启用/禁用aria无效标签</target>
        </trans-unit>
        <trans-unit id="30e1dd087a2dff3e1ba2b39d2a8f8f28db460895" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ariaReadonly&lt;/strong&gt; &amp;ndash; &lt;code&gt;{boolean}&lt;/code&gt; &amp;ndash; Enables/disables aria-readonly tags</source>
          <target state="translated">&lt;strong&gt;ariaReadonly&lt;/strong&gt; &amp;ndash; &lt;code&gt;{boolean}&lt;/code&gt; &amp;ndash;启用/禁用aria只读标签</target>
        </trans-unit>
        <trans-unit id="74982eb7100114452e4662b17862a0c7316b3e8c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ariaRequired&lt;/strong&gt; &amp;ndash; &lt;code&gt;{boolean}&lt;/code&gt; &amp;ndash; Enables/disables aria-required tags</source>
          <target state="translated">&lt;strong&gt;ariaRequired&lt;/strong&gt; &amp;ndash; &lt;code&gt;{boolean}&lt;/code&gt; &amp;ndash;启用/禁用aria必需的标签</target>
        </trans-unit>
        <trans-unit id="3de219a7746396ec7fc8c7048e94be789af81626" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ariaValue&lt;/strong&gt; &amp;ndash; &lt;code&gt;{boolean}&lt;/code&gt; &amp;ndash; Enables/disables aria-valuemin, aria-valuemax and aria-valuenow tags</source>
          <target state="translated">&lt;strong&gt;ariaValue&lt;/strong&gt; &amp;ndash; &lt;code&gt;{boolean}&lt;/code&gt; &amp;ndash;启用/禁用aria-valuemin，aria-valuemax和aria-valuenow标签</target>
        </trans-unit>
        <trans-unit id="a93636a21222157a7d39caeced98d0d0220354e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;bindKeydown&lt;/strong&gt; &amp;ndash; &lt;code&gt;{boolean}&lt;/code&gt; &amp;ndash; Enables/disables keyboard event binding on non-interactive elements (such as &lt;code&gt;div&lt;/code&gt; or &lt;code&gt;li&lt;/code&gt;) using ng-click, making them more accessible to users of assistive technologies</source>
          <target state="translated">&lt;strong&gt;bindKeydown&lt;/strong&gt; &amp;ndash; &lt;code&gt;{boolean}&lt;/code&gt; &amp;ndash; 使用ng-click 启用/禁用非交互式元素（例如 &lt;code&gt;div&lt;/code&gt; 或 &lt;code&gt;li&lt;/code&gt; ）上的键盘事件绑定，从而使辅助技术用户更容易访问它们</target>
        </trans-unit>
        <trans-unit id="1f938a576e462e2e78209117c19b46118b383162" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;bindRoleForClick&lt;/strong&gt; &amp;ndash; &lt;code&gt;{boolean}&lt;/code&gt; &amp;ndash; Adds role=button to non-interactive elements (such as &lt;code&gt;div&lt;/code&gt; or &lt;code&gt;li&lt;/code&gt;) using ng-click, making them more accessible to users of assistive technologies</source>
          <target state="translated">&lt;strong&gt;bindRoleForClick&lt;/strong&gt; &amp;ndash; &lt;code&gt;{boolean}&lt;/code&gt; &amp;ndash; 使用ng-click 将role = button添加到非交互式元素（例如 &lt;code&gt;div&lt;/code&gt; 或 &lt;code&gt;li&lt;/code&gt; ），使辅助技术用户更易于访问它们</target>
        </trans-unit>
        <trans-unit id="1ebc19fcbae29f07eb55d62df4481b4901b11803" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;cache&lt;/strong&gt; &amp;ndash; &lt;code&gt;{boolean|Object}&lt;/code&gt; &amp;ndash; A boolean value or object created with &lt;a href=&quot;%24cachefactory&quot;&gt;&lt;code&gt;$cacheFactory&lt;/code&gt;&lt;/a&gt; to enable or disable caching of the HTTP response. See &lt;a href=&quot;%24http#caching.html&quot;&gt;$http Caching&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;strong&gt;cache&lt;/strong&gt; &amp;ndash; &lt;code&gt;{boolean|Object}&lt;/code&gt; &amp;ndash;用&lt;a href=&quot;%24cachefactory&quot;&gt; &lt;code&gt;$cacheFactory&lt;/code&gt; &lt;/a&gt;创建的布尔值或对象，用于启用或禁用HTTP响应的缓存。有关更多信息，请参见&lt;a href=&quot;%24http#caching.html&quot;&gt;$ http缓存&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d19728a0bfc86797b2d9cc70edb8c8754da2aec7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;cancellable&lt;/strong&gt; &amp;ndash; &lt;code&gt;{boolean}&lt;/code&gt; &amp;ndash; If true, the request made by a &quot;non-instance&quot; call will be cancelled (if not already completed) by calling &lt;code&gt;$cancelRequest()&lt;/code&gt; on the call's return value. For more details, see &lt;a href=&quot;../service/%24resource&quot;&gt;&lt;code&gt;$resource&lt;/code&gt;&lt;/a&gt;. This can be overwritten per resource class or action.</source>
          <target state="translated">&lt;strong&gt;cancellable&lt;/strong&gt; &amp;ndash; &lt;code&gt;{boolean}&lt;/code&gt; &amp;ndash;如果为true，则通过在调用的返回值上调用 &lt;code&gt;$cancelRequest()&lt;/code&gt; 来取消&amp;ldquo;非实例&amp;rdquo;调用所发出的请求（如果尚未完成）。有关更多详细信息，请参见&lt;a href=&quot;../service/%24resource&quot;&gt; &lt;code&gt;$resource&lt;/code&gt; &lt;/a&gt;。可以按资源类或操作将其覆盖。</target>
        </trans-unit>
        <trans-unit id="54ba2b4f61e1d9303b95bacf774efcb814bbe9c2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;child scope&lt;/strong&gt; + &lt;strong&gt;child scope&lt;/strong&gt; =&amp;gt; Both directives will share one single child scope</source>
          <target state="translated">&lt;strong&gt;子范围&lt;/strong&gt; + &lt;strong&gt;子范围&lt;/strong&gt; =&amp;gt;两个指令将共享一个子范围</target>
        </trans-unit>
        <trans-unit id="8e9bcb2c30cc37bc699c2bf46b1e5cd7b8752bd2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;child scope&lt;/strong&gt; + &lt;strong&gt;no scope&lt;/strong&gt; =&amp;gt; Both directives will share one single child scope</source>
          <target state="translated">&lt;strong&gt;子范围&lt;/strong&gt; + &lt;strong&gt;无范围&lt;/strong&gt; =&amp;gt;两个指令将共享一个子范围</target>
        </trans-unit>
        <trans-unit id="8502152cb2a6790191684eea0be8b0e6958819b1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;config&lt;/strong&gt; &amp;ndash; &lt;code&gt;{Object}&lt;/code&gt; &amp;ndash; The configuration object that was used to generate the request.</source>
          <target state="translated">&lt;strong&gt;config&lt;/strong&gt; &amp;ndash; &lt;code&gt;{Object}&lt;/code&gt; &amp;ndash;用于生成请求的配置对象。</target>
        </trans-unit>
        <trans-unit id="662140cf1387a85b485f928c62a84c04f36e2aa1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;data&lt;/strong&gt; &amp;ndash; &lt;code&gt;{string|Object}&lt;/code&gt; &amp;ndash; Data to be sent as the request message data.</source>
          <target state="translated">&lt;strong&gt;data&lt;/strong&gt; &amp;ndash; &lt;code&gt;{string|Object}&lt;/code&gt; &amp;ndash;要作为请求消息数据发送的数据。</target>
        </trans-unit>
        <trans-unit id="5f1af385a1cc7a95bfbe95753d773f2d47e066fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;data&lt;/strong&gt; &amp;ndash; &lt;code&gt;{string|Object}&lt;/code&gt; &amp;ndash; The response body transformed with the transform functions.</source>
          <target state="translated">&lt;strong&gt;数据&lt;/strong&gt; &amp;ndash; &lt;code&gt;{string|Object}&lt;/code&gt; &amp;ndash;用转换函数转换的响应主体。</target>
        </trans-unit>
        <trans-unit id="b80e157d8b23723a50936794e8e443415bc93df4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;domain&lt;/strong&gt; - &lt;code&gt;{string}&lt;/code&gt; - The cookie will be available only for this domain and its sub-domains. For security reasons the user agent will not accept the cookie if the current domain is not a sub-domain of this domain or equal to it.</source>
          <target state="translated">&lt;strong&gt;域&lt;/strong&gt; - &lt;code&gt;{string}&lt;/code&gt; -Cookie仅可用于该域及其子域。出于安全原因，如果当前域不是该域的子域或与其相等，则用户代理将不接受该cookie。</target>
        </trans-unit>
        <trans-unit id="128553ab9ab0e05c4ab4a84338d7a953631a3185" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;enabled&lt;/strong&gt; &amp;ndash; &lt;code&gt;{boolean}&lt;/code&gt; &amp;ndash; (default: false) If true, will rely on &lt;code&gt;history.pushState&lt;/code&gt; to change urls where supported. Will fall back to hash-prefixed paths in browsers that do not support &lt;code&gt;pushState&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;enabled&lt;/strong&gt; &amp;ndash; &lt;code&gt;{boolean}&lt;/code&gt; &amp;ndash;（默认值：false）如果为true，则将依靠 &lt;code&gt;history.pushState&lt;/code&gt; 更改支持的网址。将退回到不支持 &lt;code&gt;pushState&lt;/code&gt; 的浏览器中的哈希前缀路径。</target>
        </trans-unit>
        <trans-unit id="d727d563ac38884edda5ae3de43341e5d7ae4a4b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;event&lt;/strong&gt;&lt;code&gt;{String}&lt;/code&gt; - The name of the animation event (e.g. &lt;code&gt;enter&lt;/code&gt;, &lt;code&gt;leave&lt;/code&gt;, &lt;code&gt;addClass&lt;/code&gt; etc).</source>
          <target state="translated">&lt;strong&gt;event &lt;/strong&gt; &lt;code&gt;{String}&lt;/code&gt; -动画事件的名称（例如 &lt;code&gt;enter&lt;/code&gt; ， &lt;code&gt;leave&lt;/code&gt; ， &lt;code&gt;addClass&lt;/code&gt; 等）。</target>
        </trans-unit>
        <trans-unit id="63abc4452ff2982408c11e34a986d4b004794707" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eventHandlers&lt;/strong&gt; - &lt;code&gt;{Object}&lt;/code&gt; - Event listeners to be bound to the XMLHttpRequest object. To bind events to the XMLHttpRequest upload object, use &lt;code&gt;uploadEventHandlers&lt;/code&gt;. The handler will be called in the context of a &lt;code&gt;$apply&lt;/code&gt; block.</source>
          <target state="translated">&lt;strong&gt;事件处理器&lt;/strong&gt; - &lt;code&gt;{Object}&lt;/code&gt; -事件侦听器绑定到XMLHttpRequest对象。要将事件绑定到XMLHttpRequest上传对象，请使用 &lt;code&gt;uploadEventHandlers&lt;/code&gt; 。该处理程序将在 &lt;code&gt;$apply&lt;/code&gt; 块的上下文中调用。</target>
        </trans-unit>
        <trans-unit id="dcfcdc7c176b0da776cad529dafbf2335547158e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;expires&lt;/strong&gt; - &lt;code&gt;{string|Date}&lt;/code&gt; - String of the form &quot;Wdy, DD Mon YYYY HH:MM:SS GMT&quot; or a Date object indicating the exact date/time this cookie will expire.</source>
          <target state="translated">&lt;strong&gt;过期&lt;/strong&gt; - &lt;code&gt;{string|Date}&lt;/code&gt; -格式为&amp;ldquo; Wdy，DD Mon YYYY HH：MM：SS GMT&amp;rdquo;的字符串，或者是一个Date对象，指示此cookie过期的确切日期/时间。</target>
        </trans-unit>
        <trans-unit id="2656cc29c637fb21f8e27327beb17e5e36dfd9e4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;frameworks&lt;/strong&gt; - a particular implementation of a web application, where your code fills in the details. The framework is in charge and it calls into your code when it needs something app specific. E.g., &lt;code&gt;durandal&lt;/code&gt;, &lt;code&gt;ember&lt;/code&gt;, etc.</source>
          <target state="translated">&lt;strong&gt;框架&lt;/strong&gt; -Web应用程序的特定实现，您的代码将在其中填充详细信息。该框架负责管理，当需要特定于应用程序的内容时，它将调用您的代码。例如 &lt;code&gt;durandal&lt;/code&gt; ， &lt;code&gt;ember&lt;/code&gt; 等。</target>
        </trans-unit>
        <trans-unit id="5670e234f5705492daf7befb2ad1d2ae5caf2766" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;from&lt;/strong&gt; - &lt;code&gt;{Object}&lt;/code&gt; - CSS properties &amp;amp; values at the beginning of animation. Must have matching &lt;code&gt;to&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;从&lt;/strong&gt; - &lt;code&gt;{Object}&lt;/code&gt; -在开头动画的CSS属性和值。必须具有匹配 &lt;code&gt;to&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0b091f4e3a87ebd01ba917c0b3435cc77e175a24" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;function&lt;/strong&gt;: A getter function called everytime &lt;code&gt;$anchorScroll()&lt;/code&gt; is executed. Must return a number representing the offset (in pixels).</source>
          <target state="translated">&lt;strong&gt;function&lt;/strong&gt;：每次执行 &lt;code&gt;$anchorScroll()&lt;/code&gt; 都会调用的吸气剂函数。必须返回代表偏移量的数字（以像素为单位）。</target>
        </trans-unit>
        <trans-unit id="92e857dff4997c9bc1ff36c7b2cf176c608091e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;hashPrefix(prefix)&lt;/strong&gt;: &lt;code&gt;{string}&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;hashPrefix（prefix）&lt;/strong&gt;： &lt;code&gt;{string}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="582f879f3edebaeff4ee118aaf6df855b64a7075" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;headers&lt;/strong&gt; &amp;ndash; &lt;code&gt;{Object}&lt;/code&gt; &amp;ndash; Map of strings or functions which return strings representing HTTP headers to send to the server. If the return value of a function is null, the header will not be sent. Functions accept a config object as an argument.</source>
          <target state="translated">&lt;strong&gt;标头&lt;/strong&gt; &amp;ndash; &lt;code&gt;{Object}&lt;/code&gt; &amp;ndash;字符串或函数的映射，这些字符串或函数返回表示HTTP标头的字符串以发送到服务器。如果函数的返回值为null，则不会发送标头。函数接受配置对象作为参数。</target>
        </trans-unit>
        <trans-unit id="e9daa8346bf248ada6861d23bf92e78d2db4888b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;headers&lt;/strong&gt; &amp;ndash; &lt;code&gt;{function([headerName])}&lt;/code&gt; &amp;ndash; Header getter function.</source>
          <target state="translated">&lt;strong&gt;标头&lt;/strong&gt; &amp;ndash; &lt;code&gt;{function([headerName])}&lt;/code&gt; &amp;ndash;标头获取函数。</target>
        </trans-unit>
        <trans-unit id="feb861ab325127f385f259aec3c6d753d18eb488" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;html5Mode(mode)&lt;/strong&gt;: &lt;code&gt;{boolean|Object}&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;html5Mode（mode）&lt;/strong&gt;： &lt;code&gt;{boolean|Object}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a792522659c8bad0c4f41a9fed876f069c7f3001" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;htmlElements&lt;/strong&gt; - &lt;code&gt;{Array&amp;lt;String&amp;gt;}&lt;/code&gt; - A list of elements to extend the current list of HTML elements.</source>
          <target state="translated">&lt;strong&gt;HTML元素&lt;/strong&gt; - &lt;code&gt;{Array&amp;lt;String&amp;gt;}&lt;/code&gt; -元素的列表来扩展HTML元素的当前列表。</target>
        </trans-unit>
        <trans-unit id="0a42c76c3fb4084b470b98106340ac1b01895367" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;htmlVoidElements&lt;/strong&gt; - &lt;code&gt;{Array&amp;lt;String&amp;gt;}&lt;/code&gt; - A list of elements to extend the current list of void HTML elements; i.e. elements that do not have an end tag.</source>
          <target state="translated">&lt;strong&gt;htmlVoidElements&lt;/strong&gt; - &lt;code&gt;{Array&amp;lt;String&amp;gt;}&lt;/code&gt; -元素来扩展空隙HTML元素的当前列表的列表; 即没有结束标签的元素。</target>
        </trans-unit>
        <trans-unit id="e3fba7c55daba09f699627d6ddf5c7f98aebf5dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;id&lt;/strong&gt;: the id of the cache instance</source>
          <target state="translated">&lt;strong&gt;id&lt;/strong&gt;：缓存实例的ID</target>
        </trans-unit>
        <trans-unit id="f8de2446f97561038f35cfbca3fe049fc42c4852" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;isolated scope&lt;/strong&gt; + &lt;strong&gt;child scope&lt;/strong&gt; =&amp;gt; &lt;strong&gt;Won't work!&lt;/strong&gt; Only one scope can be related to one element. Therefore these directives cannot be applied to the same element.</source>
          <target state="translated">&lt;strong&gt;孤立的作用域&lt;/strong&gt; + &lt;strong&gt;子作用域&lt;/strong&gt; =&amp;gt; &lt;strong&gt;不起作用！&lt;/strong&gt;一个范围只能与一个元素相关。因此，这些指令不能应用于同一元素。</target>
        </trans-unit>
        <trans-unit id="124d7d31ddab47d2d156da6e7c9218c9f4e303b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;isolated scope&lt;/strong&gt; + &lt;strong&gt;isolated scope&lt;/strong&gt; =&amp;gt; &lt;strong&gt;Won't work!&lt;/strong&gt; Only one scope can be related to one element. Therefore these directives cannot be applied to the same element.</source>
          <target state="translated">&lt;strong&gt;隔离范围&lt;/strong&gt; + &lt;strong&gt;隔离范围&lt;/strong&gt; =&amp;gt; &lt;strong&gt;不起作用！&lt;/strong&gt;一个范围只能与一个元素相关。因此，这些指令不能应用于同一元素。</target>
        </trans-unit>
        <trans-unit id="f6d1f2d0baa4d824cae5e0344ad362c468b1df71" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;isolated scope&lt;/strong&gt; + &lt;strong&gt;no scope&lt;/strong&gt; =&amp;gt; The isolated directive will use it's own created isolated scope. The other directive will use its parent's scope</source>
          <target state="translated">&lt;strong&gt;隔离范围&lt;/strong&gt; + &lt;strong&gt;无范围&lt;/strong&gt; =&amp;gt;隔离指令将使用其自己创建的隔离范围。另一个指令将使用其父级的范围</target>
        </trans-unit>
        <trans-unit id="c4773c7c7695330d0fb94c9c57adbbb2bf149700" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;jqLite&lt;/strong&gt;: A jqLite/jQuery element to be used for specifying the offset. The distance from the top of the page to the element's bottom will be used as offset.</source>
          <target state="translated">&lt;strong&gt;jqLit​​e&lt;/strong&gt;：一个jqLit​​e / jQuery元素，用于指定偏移量。从页面顶部到元素底部的距离将用作偏移量。</target>
        </trans-unit>
        <trans-unit id="27a1edc20316d5c41ba1140a1cc228f9cdb92f33" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;method&lt;/strong&gt; &amp;ndash; &lt;code&gt;{string}&lt;/code&gt; &amp;ndash; HTTP method (e.g. 'GET', 'POST', etc)</source>
          <target state="translated">&lt;strong&gt;方法&lt;/strong&gt; &amp;ndash; &lt;code&gt;{string}&lt;/code&gt; &amp;ndash; HTTP方法（例如&amp;ldquo; GET&amp;rdquo;，&amp;ldquo; POST&amp;rdquo;等）</target>
        </trans-unit>
        <trans-unit id="472a1c0dd6eba526a0d890b034eed386d8c720fa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ngChecked&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ngChecked&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="70fc8b469422f1f474b80f7559adcdafa8acc541" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ngClick&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ngClick&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b30905df0c41644b97c88e17a4e2aae25421c0b1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ngDblclick&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ngDblclick&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0042728db4a7425e83fc3ca6506f743967f15951" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ngDisabled&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ngDisabled&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b2db62cc9ac9e510cec6e7a85b0e5cca0a776c22" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ngHide&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ngHide&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b886b884a1ce37c912725f18088479a0f28f7656" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ngMessages&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ngMessages&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1a4d8dfe81c8895c78f6e3357901304d0cd44850" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ngModel&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ngModel&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2c5677f2c2b6dbc22614b195a66736898381ee68" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ngReadonly&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ngReadonly&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="89d98b0b52119ade4d2a7b5f2d670596c5b39876" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ngRequired&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ngRequired&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cf7a7022978dccaf06ccb1ddc0c800a13d076723" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ngShow&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ngShow&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b99247b583ed841bbc7526f85a6d31bf86dfddb7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ngValue&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ngValue&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b8c8b20a9898829cf0f68deb23102862860694a5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;no scope&lt;/strong&gt; + &lt;strong&gt;no scope&lt;/strong&gt; =&amp;gt; Two directives which don't require their own scope will use their parent's scope</source>
          <target state="translated">&lt;strong&gt;无范围&lt;/strong&gt; + &lt;strong&gt;无范围&lt;/strong&gt; =&amp;gt;两个不需要自身范围的指令将使用其父级的范围</target>
        </trans-unit>
        <trans-unit id="0e93dba1c9076df304aac7edb503b800b45a7c1c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;node&lt;/strong&gt;&lt;code&gt;{DOMElement}&lt;/code&gt; - The DOM element to be animated.</source>
          <target state="translated">&lt;strong&gt;节点&lt;/strong&gt; &lt;code&gt;{DOMElement}&lt;/code&gt; -要设置动画的DOM元素。</target>
        </trans-unit>
        <trans-unit id="72addb38a35523e85f22360331c35045c03519b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;number&lt;/strong&gt;: A fixed number of pixels to be used as offset.</source>
          <target state="translated">&lt;strong&gt;number&lt;/strong&gt;：要用作偏移量的固定像素数。</target>
        </trans-unit>
        <trans-unit id="6bfe42c01803398822405d49a5823f112f8c8264" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;objectMaxDepth&lt;/strong&gt;: The maximum depth to which objects are traversed when stringified for error messages.</source>
          <target state="translated">&lt;strong&gt;objectMaxDepth&lt;/strong&gt;：对错误消息进行字符串化处理时，对象所经过的最大深度。</target>
        </trans-unit>
        <trans-unit id="59d0f8dde98a32b496242d2a29226f215bf7c086" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;options&lt;/strong&gt;&lt;code&gt;{Object}&lt;/code&gt; - A collection of options/styles used for the animation.</source>
          <target state="translated">&lt;strong&gt;options &lt;/strong&gt; &lt;code&gt;{Object}&lt;/code&gt; -用于动画的选项/样式的集合。</target>
        </trans-unit>
        <trans-unit id="d651a44f16d7b9f660fb78f4848f8fe899718c1f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;paramSerializer&lt;/strong&gt; - &lt;code&gt;{string|function(Object&amp;lt;string,string&amp;gt;):string}&lt;/code&gt; - A function used to prepare the string representation of request parameters (specified as an object). If specified as string, it is interpreted as function registered with the &lt;a href=&quot;../../auto/service/%24injector&quot;&gt;$injector&lt;/a&gt;, which means you can create your own serializer by registering it as a &lt;a href=&quot;../../auto/service/%24provide#service.html&quot;&gt;service&lt;/a&gt;. The default serializer is the &lt;a href=&quot;%24httpparamserializer&quot;&gt;$httpParamSerializer&lt;/a&gt;; alternatively, you can use the &lt;a href=&quot;%24httpparamserializerjqlike&quot;&gt;$httpParamSerializerJQLike&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;paramSerializer&lt;/strong&gt; - &lt;code&gt;{string|function(Object&amp;lt;string,string&amp;gt;):string}&lt;/code&gt; -用于制备的请求参数的字符串表示（指定为对象）的函数。如果指定为字符串，则将其解释为在&lt;a href=&quot;../../auto/service/%24injector&quot;&gt;$ injector中&lt;/a&gt;注册的函数，这意味着您可以通过将其注册为&lt;a href=&quot;../../auto/service/%24provide#service.html&quot;&gt;service&lt;/a&gt;来创建自己的序列化器。默认的序列化器是&lt;a href=&quot;%24httpparamserializer&quot;&gt;$ httpParamSerializer&lt;/a&gt; ; 或者，您可以使用&lt;a href=&quot;%24httpparamserializerjqlike&quot;&gt;$ httpParamSerializerJQLike&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eb412c19087d047d702d4bb44d9b2be7ab1a675c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;params&lt;/strong&gt; &amp;ndash; &lt;code&gt;{Object.&amp;lt;string|Object&amp;gt;}&lt;/code&gt; &amp;ndash; Map of strings or objects which will be serialized with the &lt;code&gt;paramSerializer&lt;/code&gt; and appended as GET parameters.</source>
          <target state="translated">&lt;strong&gt;params&lt;/strong&gt; &amp;ndash; &lt;code&gt;{Object.&amp;lt;string|Object&amp;gt;}&lt;/code&gt; &amp;ndash;字符串或对象的映射，这些字符串或对象将使用 &lt;code&gt;paramSerializer&lt;/code&gt; 序列化并附加为GET参数。</target>
        </trans-unit>
        <trans-unit id="060adaafb51ecc8f11beb5c933aa7af0d463cd31" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;path&lt;/strong&gt; - &lt;code&gt;{string}&lt;/code&gt; - The cookie will be available only for this path and its sub-paths. By default, this is the URL that appears in your &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">&lt;strong&gt;路径&lt;/strong&gt; - &lt;code&gt;{string}&lt;/code&gt; 里 - cookie将仅适用于该路径及其子路径是可用的。默认情况下，这是显示在 &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; 标记中的URL 。</target>
        </trans-unit>
        <trans-unit id="5f3eaf2d48263b11c832c76ce400f5db9b03ae2e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;placeholder&lt;/strong&gt; in &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; in Internet Explorer 10/11 (see &lt;a href=&quot;https://github.com/angular/angular.js/issues/5025&quot;&gt;issue 5025&lt;/a&gt;)</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;Internet Explorer 10/11 中 &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; 中的&lt;strong&gt;占位符&lt;/strong&gt;（请参阅&lt;a href=&quot;https://github.com/angular/angular.js/issues/5025&quot;&gt;问题5025&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="4958679eaea1cd6781d8263b662a8d5fd1a73530" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;removeClass&lt;/strong&gt; - &lt;code&gt;{string}&lt;/code&gt; - space-separated CSS classes to remove from element</source>
          <target state="translated">&lt;strong&gt;removeClass&lt;/strong&gt; - &lt;code&gt;{string}&lt;/code&gt; -空格分隔CSS类从元件除去</target>
        </trans-unit>
        <trans-unit id="98c7a336bebc4478053dfdd092b76fa1a2505115" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;requireBase&lt;/strong&gt; - &lt;code&gt;{boolean}&lt;/code&gt; - (default: &lt;code&gt;true&lt;/code&gt;) When html5Mode is enabled, specifies whether or not a  tag is required to be present. If &lt;code&gt;enabled&lt;/code&gt; and &lt;code&gt;requireBase&lt;/code&gt; are true, and a base tag is not present, an error will be thrown when &lt;code&gt;$location&lt;/code&gt; is injected. See the &lt;a href=&quot;../../../guide/%24location&quot;&gt;$location guide for more information&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;requireBase&lt;/strong&gt; - &lt;code&gt;{boolean}&lt;/code&gt; - （默认值： &lt;code&gt;true&lt;/code&gt; ）当html5Mode被启用，指定是否需要标记为存在。如果 &lt;code&gt;enabled&lt;/code&gt; 和 &lt;code&gt;requireBase&lt;/code&gt; 为true，并且不存在基本标记，则在注入 &lt;code&gt;$location&lt;/code&gt; 时将引发错误。有关&lt;a href=&quot;../../../guide/%24location&quot;&gt;更多信息，&lt;/a&gt;请参见$ location指南。</target>
        </trans-unit>
        <trans-unit id="9ff98c63e2f8647761676a30d4ba3fbaef42096f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;responseType&lt;/strong&gt; - &lt;code&gt;{string}&lt;/code&gt; - see &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest#xmlhttprequest-responsetype&quot;&gt;XMLHttpRequest.responseType&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;的responseType&lt;/strong&gt; - &lt;code&gt;{string}&lt;/code&gt; 里 -看到&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest#xmlhttprequest-responsetype&quot;&gt;XMLHttpRequest.responseType&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="83429cc05bf49200558ea7c8b13a952af6c8c748" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;rewriteLinks&lt;/strong&gt; - &lt;code&gt;{boolean|string}&lt;/code&gt; - (default: &lt;code&gt;true&lt;/code&gt;) When html5Mode is enabled, enables/disables URL rewriting for relative links. If set to a string, URL rewriting will only happen on links with an attribute that matches the given string. For example, if set to &lt;code&gt;'internal-link'&lt;/code&gt;, then the URL will only be rewritten for &lt;code&gt;&amp;lt;a internal-link&amp;gt;&lt;/code&gt; links. Note that &lt;a href=&quot;../../../guide/directive#normalization.html&quot;&gt;attribute name normalization&lt;/a&gt; does not apply here, so &lt;code&gt;'internalLink'&lt;/code&gt; will &lt;strong&gt;not&lt;/strong&gt; match &lt;code&gt;'internal-link'&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;rewriteLinks&lt;/strong&gt; - &lt;code&gt;{boolean|string}&lt;/code&gt; - （默认值： &lt;code&gt;true&lt;/code&gt; ）当html5Mode启用，启用/禁用URL重写为相对链接。如果设置为字符串，则URL重写将仅在属性与给定字符串匹配的链接上进行。例如，如果设置为 &lt;code&gt;'internal-link'&lt;/code&gt; ，则将仅对 &lt;code&gt;&amp;lt;a internal-link&amp;gt;&lt;/code&gt; 链接重写URL 。请注意，&lt;a href=&quot;../../../guide/directive#normalization.html&quot;&gt;属性名称规范化&lt;/a&gt;不适用于此处，因此 &lt;code&gt;'internalLink'&lt;/code&gt; 将与 &lt;code&gt;'internal-link'&lt;/code&gt; &lt;strong&gt;不&lt;/strong&gt;匹配。</target>
        </trans-unit>
        <trans-unit id="f51a95c24827c45784afc6a3873a40fbc1bd7fef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;samesite&lt;/strong&gt; - &lt;code&gt;{string}&lt;/code&gt; - prevents the browser from sending the cookie along with cross-site requests. Accepts the values &lt;code&gt;lax&lt;/code&gt; and &lt;code&gt;strict&lt;/code&gt;. See the &lt;a href=&quot;https://www.owasp.org/index.php/SameSite&quot;&gt;OWASP Wiki&lt;/a&gt; for more info. Note that as of May 2018, not all browsers support &lt;code&gt;SameSite&lt;/code&gt;, so it cannot be used as a single measure against Cross-Site-Request-Forgery (CSRF) attacks.</source>
          <target state="translated">&lt;strong&gt;samesite&lt;/strong&gt; - &lt;code&gt;{string}&lt;/code&gt; 里 -阻止浏览器与跨站点请求一起发送的cookie。接受 &lt;code&gt;lax&lt;/code&gt; 和 &lt;code&gt;strict&lt;/code&gt; 的价值观。有关更多信息，请参见&lt;a href=&quot;https://www.owasp.org/index.php/SameSite&quot;&gt;OWASP Wiki&lt;/a&gt;。请注意，截至2018年5月，并非所有浏览器都支持 &lt;code&gt;SameSite&lt;/code&gt; ，因此不能将其用作针对跨站点请求伪造（CSRF）攻击的一种措施。</target>
        </trans-unit>
        <trans-unit id="2d7da530df946f3545fca78880b34ff024bfaaa1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;secure&lt;/strong&gt; - &lt;code&gt;{boolean}&lt;/code&gt; - If &lt;code&gt;true&lt;/code&gt;, then the cookie will only be available through a secured connection.</source>
          <target state="translated">&lt;strong&gt;安全&lt;/strong&gt; - &lt;code&gt;{boolean}&lt;/code&gt; -如果 &lt;code&gt;true&lt;/code&gt; ，那么cookie只能通过安全连接可用。</target>
        </trans-unit>
        <trans-unit id="1e2a25b2159af2f5d84818851dec8d42f417bf2d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;size&lt;/strong&gt; in &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; elements (see &lt;a href=&quot;https://github.com/angular/angular.js/issues/1619&quot;&gt;issue 1619&lt;/a&gt;)</source>
          <target state="translated">&lt;strong&gt;大小&lt;/strong&gt;在 &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; 元素（参见&lt;a href=&quot;https://github.com/angular/angular.js/issues/1619&quot;&gt;问题1619&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="9f4ef8b00882dfdcc97c71765bf22fb7abfccf47" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;size&lt;/strong&gt;: the number of entries kept in the cache instance</source>
          <target state="translated">&lt;strong&gt;size&lt;/strong&gt;：缓存实例中保留的条目数</target>
        </trans-unit>
        <trans-unit id="df2a02b6376cc0ebb01f5e18aa2d102288edb907" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;status&lt;/strong&gt; &amp;ndash; &lt;code&gt;{number}&lt;/code&gt; &amp;ndash; HTTP status code of the response.</source>
          <target state="translated">&lt;strong&gt;status&lt;/strong&gt; &amp;ndash; &lt;code&gt;{number}&lt;/code&gt; &amp;ndash;响应的HTTP状态代码。</target>
        </trans-unit>
        <trans-unit id="35ce03bf58d6ec7f55ac8f04a8ebccad62becdbd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;statusText&lt;/strong&gt; &amp;ndash; &lt;code&gt;{string}&lt;/code&gt; &amp;ndash; HTTP status text of the response.</source>
          <target state="translated">&lt;strong&gt;statusText&lt;/strong&gt; &amp;ndash; &lt;code&gt;{string}&lt;/code&gt; &amp;ndash;响应的HTTP状态文本。</target>
        </trans-unit>
        <trans-unit id="0345fb2cc138ca84d0cde834fd433d751d6414af" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;stripTrailingSlashes&lt;/strong&gt; &amp;ndash; &lt;code&gt;{boolean}&lt;/code&gt; &amp;ndash; If true, then the trailing slashes from any calculated URL will be stripped.</source>
          <target state="translated">&lt;strong&gt;stripTrailingSlashes&lt;/strong&gt; &amp;ndash; &lt;code&gt;{boolean}&lt;/code&gt; &amp;ndash;如果为true，则将剥离任何计算出的URL的尾部斜杠。</target>
        </trans-unit>
        <trans-unit id="d3ea7e3d61cd6b089004feefdef3261d48887930" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;svgElements&lt;/strong&gt; - &lt;code&gt;{Array&amp;lt;String&amp;gt;}&lt;/code&gt; - A list of elements to extend the current list of SVG elements. The list of SVG elements is only taken into account if SVG is &lt;a href=&quot;%24sanitizeprovider#enableSvg.html&quot;&gt;enabled&lt;/a&gt; for &lt;code&gt;$sanitize&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;svgElements&lt;/strong&gt; - &lt;code&gt;{Array&amp;lt;String&amp;gt;}&lt;/code&gt; -元素的列表延伸SVG元素的当前列表。仅当为 &lt;code&gt;$sanitize&lt;/code&gt; &lt;a href=&quot;%24sanitizeprovider#enableSvg.html&quot;&gt;启用&lt;/a&gt; SVG时，才考虑SVG元素列表。</target>
        </trans-unit>
        <trans-unit id="50e376066f3f2ada02d92730374d9ebd58e1e323" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tabindex&lt;/strong&gt; &amp;ndash; &lt;code&gt;{boolean}&lt;/code&gt; &amp;ndash; Enables/disables tabindex tags</source>
          <target state="translated">&lt;strong&gt;tabindex&lt;/strong&gt; &amp;ndash; &lt;code&gt;{boolean}&lt;/code&gt; &amp;ndash;启用/禁用tabindex标签</target>
        </trans-unit>
        <trans-unit id="70e324de17d76b0a9ec0d32b1e7654a6240d0e7e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;timeout&lt;/strong&gt; &amp;ndash; &lt;code&gt;{number|Promise}&lt;/code&gt; &amp;ndash; timeout in milliseconds, or &lt;a href=&quot;%24q&quot;&gt;promise&lt;/a&gt; that should abort the request when resolved.</source>
          <target state="translated">&lt;strong&gt;超时&lt;/strong&gt; &amp;ndash; &lt;code&gt;{number|Promise}&lt;/code&gt; &amp;ndash;超时（以毫秒为单位），或&lt;a href=&quot;%24q&quot;&gt;承诺&lt;/a&gt;应在解决后中止请求。</target>
        </trans-unit>
        <trans-unit id="4e679bd6dc14d74c998593892b9b48ccec9f3a8a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;to&lt;/strong&gt; - &lt;code&gt;{Object}&lt;/code&gt; - CSS properties &amp;amp; values at end of animation. Must have matching &lt;code&gt;from&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;到&lt;/strong&gt; - &lt;code&gt;{Object}&lt;/code&gt; -动画结束时的CSS属性和值。必须具有匹配 &lt;code&gt;from&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3d33b5c0716f7f5b554828e3c86a6d260fde2f1e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;transformRequest&lt;/strong&gt; &amp;ndash; &lt;code&gt;{function(data, headersGetter)|Array.&amp;lt;function(data, headersGetter)&amp;gt;}&lt;/code&gt; &amp;ndash; transform function or an array of such functions. The transform function takes the http request body and headers and returns its transformed (typically serialized) version. See &lt;a href=&quot;%24http#overriding-the-default-transformations-per-request.html&quot;&gt;Overriding the Default Transformations&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;transformRequest&lt;/strong&gt; &amp;ndash; &lt;code&gt;{function(data, headersGetter)|Array.&amp;lt;function(data, headersGetter)&amp;gt;}&lt;/code&gt; &amp;ndash;转换函数或此类函数的数组。转换函数采用http请求正文和标头，并返回其转换后的（通常是序列化的）版本。请参见&lt;a href=&quot;%24http#overriding-the-default-transformations-per-request.html&quot;&gt;覆盖默认转换&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="87f825777fa4ed7bb1205871ba42d32b29aacd6d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;transformResponse&lt;/strong&gt; &amp;ndash; &lt;code&gt;{function(data, headersGetter, status)|Array.&amp;lt;function(data, headersGetter, status)&amp;gt;}&lt;/code&gt; &amp;ndash; transform function or an array of such functions. The transform function takes the http response body, headers and status and returns its transformed (typically deserialized) version. See &lt;a href=&quot;%24http#overriding-the-default-transformations-per-request.html&quot;&gt;Overriding the Default Transformations&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;transformResponse&lt;/strong&gt; &amp;ndash; &lt;code&gt;{function(data, headersGetter, status)|Array.&amp;lt;function(data, headersGetter, status)&amp;gt;}&lt;/code&gt; &amp;ndash;转换函数或此类函数的数组。转换函数采用http响应正文，标头和状态，并返回其转换后的（通常是反序列化的）版本。请参见&lt;a href=&quot;%24http#overriding-the-default-transformations-per-request.html&quot;&gt;覆盖默认转换&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d039bff6529a3e51b665953058a2578bf03ae530" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;type&lt;/strong&gt; in &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; in Internet Explorer 11 (see &lt;a href=&quot;https://github.com/angular/angular.js/issues/5025&quot;&gt;issue 14117&lt;/a&gt;)</source>
          <target state="translated">&lt;strong&gt;键入&lt;/strong&gt;在 &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; 在Internet Explorer 11（参见&lt;a href=&quot;https://github.com/angular/angular.js/issues/5025&quot;&gt;问题14117&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="9043907a2669b340d01a39ec2d66417c24b13029" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;uploadEventHandlers&lt;/strong&gt; - &lt;code&gt;{Object}&lt;/code&gt; - Event listeners to be bound to the XMLHttpRequest upload object. To bind events to the XMLHttpRequest object, use &lt;code&gt;eventHandlers&lt;/code&gt;. The handler will be called in the context of a &lt;code&gt;$apply&lt;/code&gt; block.</source>
          <target state="translated">&lt;strong&gt;uploadEventHandlers&lt;/strong&gt; - &lt;code&gt;{Object}&lt;/code&gt; -事件监听器被绑定到的XMLHttpRequest对象的上传。要将事件绑定到XMLHttpRequest对象，请使用 &lt;code&gt;eventHandlers&lt;/code&gt; 。该处理程序将在 &lt;code&gt;$apply&lt;/code&gt; 块的上下文中调用。</target>
        </trans-unit>
        <trans-unit id="6bca94c5d01d86c53e05d7e629d478ec3750e7c4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;url&lt;/strong&gt; &amp;ndash; &lt;code&gt;{string|TrustedObject}&lt;/code&gt; &amp;ndash; Absolute or relative URL of the resource that is being requested; or an object created by a call to &lt;code&gt;$sce.trustAsResourceUrl(url)&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;url&lt;/strong&gt; &amp;ndash; &lt;code&gt;{string|TrustedObject}&lt;/code&gt; &amp;ndash;所请求资源的绝对或相对URL；或通过调用 &lt;code&gt;$sce.trustAsResourceUrl(url)&lt;/code&gt; 创建的对象。</target>
        </trans-unit>
        <trans-unit id="0a760b7dddba992bcb6c8a6db574124bfeae2eb8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;value&lt;/strong&gt; in &lt;code&gt;&amp;lt;progress&amp;gt;&lt;/code&gt; in Internet Explorer = 11 (see &lt;a href=&quot;https://github.com/angular/angular.js/issues/7218&quot;&gt;issue 7218&lt;/a&gt;)</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;Internet Explorer 中 &lt;code&gt;&amp;lt;progress&amp;gt;&lt;/code&gt; 中的&lt;strong&gt;值&lt;/strong&gt; = 11（请参阅&lt;a href=&quot;https://github.com/angular/angular.js/issues/7218&quot;&gt;问题7218&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="d9d9e23f794cf05d52a0d2a6fe3ab544fb89b0e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;withCredentials&lt;/strong&gt; - &lt;code&gt;{boolean}&lt;/code&gt; - whether to set the &lt;code&gt;withCredentials&lt;/code&gt; flag on the XHR object. See &lt;a href=&quot;https://developer.mozilla.org/docs/Web/HTTP/Access_control_CORS#Requests_with_credentials&quot;&gt;requests with credentials&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;strong&gt;withCredentials&lt;/strong&gt; - &lt;code&gt;{boolean}&lt;/code&gt; -是否设置 &lt;code&gt;withCredentials&lt;/code&gt; 标志XHR对象上。有关更多信息，请参见&lt;a href=&quot;https://developer.mozilla.org/docs/Web/HTTP/Access_control_CORS#Requests_with_credentials&quot;&gt;带有凭据的请求&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b6b9f84e97e3ba1d5fd7cc6a758d16b678b9e932" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;xhrStatus&lt;/strong&gt; &amp;ndash; &lt;code&gt;{string}&lt;/code&gt; &amp;ndash; Status of the XMLHttpRequest (&lt;code&gt;complete&lt;/code&gt;, &lt;code&gt;error&lt;/code&gt;, &lt;code&gt;timeout&lt;/code&gt; or &lt;code&gt;abort&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;xhrStatus&lt;/strong&gt; &amp;ndash; &lt;code&gt;{string}&lt;/code&gt; &amp;ndash; XMLHttpRequest的状态（ &lt;code&gt;complete&lt;/code&gt; ， &lt;code&gt;error&lt;/code&gt; ， &lt;code&gt;timeout&lt;/code&gt; 或 &lt;code&gt;abort&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="d2bbd1de159541f1410dcb870ff574d3ec923734" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;xsrfCookieName&lt;/strong&gt; &amp;ndash; &lt;code&gt;{string}&lt;/code&gt; &amp;ndash; Name of cookie containing the XSRF token.</source>
          <target state="translated">&lt;strong&gt;xsrfCookieName&lt;/strong&gt; &amp;ndash; &lt;code&gt;{string}&lt;/code&gt; &amp;ndash;包含XSRF令牌的cookie的名称。</target>
        </trans-unit>
        <trans-unit id="82ebc64de30022400b91cd2832387f47ce545a88" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;xsrfHeaderName&lt;/strong&gt; &amp;ndash; &lt;code&gt;{string}&lt;/code&gt; &amp;ndash; Name of HTTP header to populate with the XSRF token.</source>
          <target state="translated">&lt;strong&gt;xsrfHeaderName&lt;/strong&gt; &amp;ndash; &lt;code&gt;{string}&lt;/code&gt; &amp;ndash;使用XSRF令牌填充的HTTP标头的名称。</target>
        </trans-unit>
        <trans-unit id="2b2697460deb5f5b660f6f33232f0bbe0994052e" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;%24q&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that will be resolved (request success) or rejected (request failure) with a response object.</source>
          <target state="translated">一个将被响应对象解决（请求成功）或被拒绝（请求失败）的&lt;a href=&quot;%24q&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9f670bf823c39c6ce15ca2cee63a5bda25c59bf4" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../api/ng/type/angular.module&quot;&gt;module&lt;/a&gt; is a collection of providers, services, directives etc., and optionally config and run blocks which get applied to the application during the bootstrap process.</source>
          <target state="translated">甲&lt;a href=&quot;../api/ng/type/angular.module&quot;&gt;模块&lt;/a&gt;是供应商，服务，等等的指令的集合，以及任选配置和运行其中获得在引导过程中施加到该应用程序块。</target>
        </trans-unit>
        <trans-unit id="99f98a62c49c1d357ce0e0c6e22da8b20e044b38" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../function/angular.element&quot;&gt;jQuery or jqLite&lt;/a&gt; wrapper for the browser's &lt;code&gt;window.document&lt;/code&gt; object.</source>
          <target state="translated">一个&lt;a href=&quot;../function/angular.element&quot;&gt;jQuery的或jqLit​​e&lt;/a&gt;包装为浏览器的 &lt;code&gt;window.document&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="1b2e7a0bbc83c26ed075072213b62d4c6f673112" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;function/angular.element&quot;&gt;jQuery or jqLite&lt;/a&gt; wrapper for the browser's &lt;code&gt;window.document&lt;/code&gt; object.</source>
          <target state="translated">一个&lt;a href=&quot;function/angular.element&quot;&gt;jQuery的或jqLit​​e&lt;/a&gt;包装为浏览器的 &lt;code&gt;window.document&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="7839c71de200f27fd2e542514415551d06c81302" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;http://haacked.com/archive/2008/11/20/anatomy-of-a-subtle-json-vulnerability.aspx&quot;&gt;JSON vulnerability&lt;/a&gt; allows third party website to turn your JSON resource URL into &lt;a href=&quot;http://en.wikipedia.org/wiki/JSONP&quot;&gt;JSONP&lt;/a&gt; request under some conditions. To counter this your server can prefix all JSON requests with following string &lt;code&gt;&quot;)]}',\n&quot;&lt;/code&gt;. AngularJS will automatically strip the prefix before processing it as JSON.</source>
          <target state="translated">一个&lt;a href=&quot;http://haacked.com/archive/2008/11/20/anatomy-of-a-subtle-json-vulnerability.aspx&quot;&gt;JSON漏洞，&lt;/a&gt;允许第三方网站把你的JSON资源网址为&lt;a href=&quot;http://en.wikipedia.org/wiki/JSONP&quot;&gt;JSONP&lt;/a&gt;在某些条件下的要求。为了解决这个问题，您的服务器可以为所有JSON请求添加以下字符串 &lt;code&gt;&quot;)]}',\n&quot;&lt;/code&gt; 前缀。AngularJS在将其处理为JSON之前会自动剥离该前缀。</target>
        </trans-unit>
        <trans-unit id="1ae6a5e280a12c410587e20c5ad774e784785882" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;http://haacked.com/archive/2008/11/20/anatomy-of-a-subtle-json-vulnerability.aspx&quot;&gt;JSON vulnerability&lt;/a&gt; allows third party website to turn your JSON resource URL into &lt;a href=&quot;https://en.wikipedia.org/wiki/JSONP&quot;&gt;JSONP&lt;/a&gt; request under some conditions. To counter this your server can prefix all JSON requests with following string &lt;code&gt;&quot;)]}',\n&quot;&lt;/code&gt;. AngularJS will automatically strip the prefix before processing it as JSON.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fa15ce24236637c6517ab3482040ede6e84b058" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/blur&quot;&gt;blur event&lt;/a&gt; fires when an element has lost focus.</source>
          <target state="translated">一个&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/blur&quot;&gt;模糊事件&lt;/a&gt;触发时元素失去焦点。</target>
        </trans-unit>
        <trans-unit id="40add3cdd16405c074177fc8110bb43b5ac7fb2b" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;templates&quot;&gt;template&lt;/a&gt; with two buttons and a simple message</source>
          <target state="translated">甲&lt;a href=&quot;templates&quot;&gt;模板&lt;/a&gt;具有两个按钮和一个简单的消息</target>
        </trans-unit>
        <trans-unit id="050f37f110fc9fa63e63cd7117b1384816703419" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ComponentInstruction&lt;/code&gt; represents the route state for a single component. An &lt;code&gt;Instruction&lt;/code&gt; is composed of a tree of these &lt;code&gt;ComponentInstruction&lt;/code&gt;s.</source>
          <target state="translated">甲 &lt;code&gt;ComponentInstruction&lt;/code&gt; 表示单一组分的路由状态。一个 &lt;code&gt;Instruction&lt;/code&gt; 由这些 &lt;code&gt;ComponentInstruction&lt;/code&gt; 的树组成。</target>
        </trans-unit>
        <trans-unit id="f8f1e492c2e32412cc2e9ab7f4b7de5a17b72edc" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Router&lt;/code&gt; is responsible for mapping URLs to components.</source>
          <target state="translated">甲 &lt;code&gt;Router&lt;/code&gt; 负责映射网址组件。</target>
        </trans-unit>
        <trans-unit id="afe91777794606fc3697cc65d25283b9e3db37d3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;username&lt;/code&gt; directive that asynchronously checks if a user-entered value is already taken. We mock the server request with a &lt;code&gt;$q&lt;/code&gt; deferred.</source>
          <target state="translated">一个 &lt;code&gt;username&lt;/code&gt; 异步检查用户输入的值已经采取指令。我们用延后的 &lt;code&gt;$q&lt;/code&gt; 模拟服务器请求。</target>
        </trans-unit>
        <trans-unit id="a7878972a098fc3249b245269b4fd298ddb5e251" translate="yes" xml:space="preserve">
          <source>A Controller with two functions that set the value of &lt;code&gt;spice&lt;/code&gt;</source>
          <target state="translated">具有两个功能的控制器，可设置 &lt;code&gt;spice&lt;/code&gt; 的值</target>
        </trans-unit>
        <trans-unit id="099221b87692bd857151be9e3c242bd9da492b16" translate="yes" xml:space="preserve">
          <source>A Promise that will be resolved or rejected with a response object. See &lt;a href=&quot;%24http#%24http-returns.html&quot;&gt;&lt;code&gt;$http()&lt;/code&gt; return value&lt;/a&gt;.</source>
          <target state="translated">用响应对象解决或拒绝的承诺。参见&lt;a href=&quot;%24http#%24http-returns.html&quot;&gt; &lt;code&gt;$http()&lt;/code&gt; 返回值&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="08542be42901cd2d3503e21ba713f703abed31db" translate="yes" xml:space="preserve">
          <source>A Staggering animation is a collection of animations that are issued with a slight delay in between each successive operation resulting in a curtain-like effect. The ngAnimate module (versions &amp;gt;=1.2) supports staggering animations and the stagger effect can be performed by creating a &lt;strong&gt;ng-EVENT-stagger&lt;/strong&gt; CSS class and attaching that class to the base CSS class used for the animation. The style property expected within the stagger class can either be a &lt;strong&gt;transition-delay&lt;/strong&gt; or an &lt;strong&gt;animation-delay&lt;/strong&gt; property (or both if your animation contains both transitions and keyframe animations).</source>
          <target state="translated">交错动画是动画的集合，这些动画在每次连续操作之间稍微延迟地发出，从而产生类似窗帘的效果。ngAnimate模块（版本&amp;gt; = 1.2）支持交错动画，并且可以通过创建&lt;strong&gt;ng-EVENT-stagger&lt;/strong&gt; CSS类并将该类附加到用于动画的基本CSS类来执行交错效果。在stagger类中预期的style属性可以是&lt;strong&gt;transition-delay&lt;/strong&gt;或&lt;strong&gt;animation-delay&lt;/strong&gt;属性（如果动画同时包含Transition和Keyframe动画，则两者都可以）。</target>
        </trans-unit>
        <trans-unit id="8b1041ce62379a6088fbb9d282654cc4b528feba" translate="yes" xml:space="preserve">
          <source>A boolean property indicating if routes defined using this provider should be matched using a case insensitive algorithm. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">一个布尔属性，指示是否应使用不区分大小写的算法来匹配使用此提供程序定义的路由。默认为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fca8caeaa11957e504e1245c3676b49630f2625d" translate="yes" xml:space="preserve">
          <source>A cache object used to store and retrieve data, primarily used by &lt;a href=&quot;../service/%24templaterequest&quot;&gt;$templateRequest&lt;/a&gt; and the &lt;a href=&quot;../directive/script&quot;&gt;script&lt;/a&gt; directive to cache templates and other data.</source>
          <target state="translated">一个用于存储和检索数据的缓存对象，主要由&lt;a href=&quot;../service/%24templaterequest&quot;&gt;$ templateRequest&lt;/a&gt;和&lt;a href=&quot;../directive/script&quot;&gt;script&lt;/a&gt;指令用来缓存模板和其他数据。</target>
        </trans-unit>
        <trans-unit id="7741c0b5eadb3178c8fd1b6d3cbe41c65898491f" translate="yes" xml:space="preserve">
          <source>A cache object used to store and retrieve data, primarily used by &lt;a href=&quot;service/%24templaterequest&quot;&gt;$templateRequest&lt;/a&gt; and the &lt;a href=&quot;directive/script&quot;&gt;script&lt;/a&gt; directive to cache templates and other data.</source>
          <target state="translated">一个用于存储和检索数据的缓存对象，主要由&lt;a href=&quot;service/%24templaterequest&quot;&gt;$ templateRequest&lt;/a&gt;和&lt;a href=&quot;directive/script&quot;&gt;script&lt;/a&gt;指令用来缓存模板和其他数据。</target>
        </trans-unit>
        <trans-unit id="9ef2ed6994f65370ddeaf83f5b2e47c35d4d5e29" translate="yes" xml:space="preserve">
          <source>A cache-control header on the response does not affect if or how responses are cached.</source>
          <target state="translated">响应上的缓存控制头不会影响响应是否或如何缓存。</target>
        </trans-unit>
        <trans-unit id="8bfa439ad785ad69c4e2d9f497dacaf475106385" translate="yes" xml:space="preserve">
          <source>A call to &lt;code&gt;$resume()&lt;/code&gt; on a non-suspended scope is a no-op.</source>
          <target state="translated">在非暂停作用域上调用 &lt;code&gt;$resume()&lt;/code&gt; 是禁止操作。</target>
        </trans-unit>
        <trans-unit id="9133b855702802c397e165028750356edd7047a4" translate="yes" xml:space="preserve">
          <source>A call to &lt;code&gt;$suspend()&lt;/code&gt; on an already suspended scope is a no-op.</source>
          <target state="translated">在已经暂停的作用域上调用 &lt;code&gt;$suspend()&lt;/code&gt; 是禁止操作。</target>
        </trans-unit>
        <trans-unit id="0ea4006eb2cb656edf669af2a4fe53b47d3e21e0" translate="yes" xml:space="preserve">
          <source>A collection of validations that are expected to perform an asynchronous validation (e.g. a HTTP request). The validation function that is provided is expected to return a promise when it is run during the model validation process. Once the promise is delivered then the validation status will be set to true when fulfilled and false when rejected. When the asynchronous validators are triggered, each of the validators will run in parallel and the model value will only be updated once all validators have been fulfilled. As long as an asynchronous validator is unfulfilled, its key will be added to the controllers &lt;code&gt;$pending&lt;/code&gt; property. Also, all asynchronous validators will only run once all synchronous validators have passed.</source>
          <target state="translated">预期将执行异步验证（例如HTTP请求）的验证的集合。当在模型验证过程中运行该验证功能时，预期该验证功能将返回一个promise。兑现承诺后，验证状态将在实现时设置为true，在拒绝时设置为false。触发异步验证器时，每个验证器将并行运行，并且仅在满足所有验证器后才更新模型值。只要未实现异步验证器，它的密钥就会被添加到控制器的 &lt;code&gt;$pending&lt;/code&gt; 属性中。同样，所有异步验证器将仅在所有同步验证器通过后运行。</target>
        </trans-unit>
        <trans-unit id="229fac7603e8188798542bcb67ff90d46994a3c3" translate="yes" xml:space="preserve">
          <source>A collection of validators that are applied whenever the model value changes. The key value within the object refers to the name of the validator while the function refers to the validation operation. The validation operation is provided with the model value as an argument and must return a true or false value depending on the response of that validation.</source>
          <target state="translated">一个验证器的集合,每当模型值发生变化时,就会应用这些验证器。对象中的键值指的是验证器的名称,而函数指的是验证操作。验证操作是以模型值作为参数提供的,必须根据该验证的响应返回一个真值或假值。</target>
        </trans-unit>
        <trans-unit id="be0235f4b74d82983b712495add7b645995775dd" translate="yes" xml:space="preserve">
          <source>A compile function can have a return value which can be either a function or an object.</source>
          <target state="translated">编译函数可以有一个返回值,这个返回值可以是一个函数,也可以是一个对象。</target>
        </trans-unit>
        <trans-unit id="e05e2a218277dd6b00da94dc6067e64b2045df3e" translate="yes" xml:space="preserve">
          <source>A complete client-side solution</source>
          <target state="translated">完整的客户端解决方案</target>
        </trans-unit>
        <trans-unit id="e60157b6585baedc59c4d7575ad7dc9ea71f80e6" translate="yes" xml:space="preserve">
          <source>A constructor function that will be instantiated.</source>
          <target state="translated">一个将被实例化的构造函数。</target>
        </trans-unit>
        <trans-unit id="73f2b01348f1ce5048a10e6122982c908f8be945" translate="yes" xml:space="preserve">
          <source>A container for the options set by the &lt;a href=&quot;../directive/ngmodeloptions&quot;&gt;&lt;code&gt;ngModelOptions&lt;/code&gt;&lt;/a&gt; directive</source>
          <target state="translated">&lt;a href=&quot;../directive/ngmodeloptions&quot;&gt; &lt;code&gt;ngModelOptions&lt;/code&gt; &lt;/a&gt;指令设置的选项的容器</target>
        </trans-unit>
        <trans-unit id="1704347efadba97c8861b4da7846bbc0b00699ef" translate="yes" xml:space="preserve">
          <source>A container for the options set by the &lt;a href=&quot;directive/ngmodeloptions&quot;&gt;&lt;code&gt;ngModelOptions&lt;/code&gt;&lt;/a&gt; directive</source>
          <target state="translated">&lt;a href=&quot;directive/ngmodeloptions&quot;&gt; &lt;code&gt;ngModelOptions&lt;/code&gt; &lt;/a&gt;指令设置的选项的容器</target>
        </trans-unit>
        <trans-unit id="39f7ee12cd4358531c59cddc0da19e827ffc1dee" translate="yes" xml:space="preserve">
          <source>A decorator for &lt;a href=&quot;../../ng/service/%24controller&quot;&gt;&lt;code&gt;$controller&lt;/code&gt;&lt;/a&gt; with additional &lt;code&gt;bindings&lt;/code&gt; parameter, useful when testing controllers of directives that use &lt;a href=&quot;../../ng/service/%24compile#-bindtocontroller-.html&quot;&gt;&lt;code&gt;bindToController&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../ng/service/%24controller&quot;&gt; &lt;code&gt;$controller&lt;/code&gt; &lt;/a&gt;的装饰器，带有附加的 &lt;code&gt;bindings&lt;/code&gt; 参数，在测试使用&lt;a href=&quot;../../ng/service/%24compile#-bindtocontroller-.html&quot;&gt; &lt;code&gt;bindToController&lt;/code&gt; &lt;/a&gt;的指令的控制器时很有用。</target>
        </trans-unit>
        <trans-unit id="4d65491f42f9e447fd2de27ab73792203123c4e5" translate="yes" xml:space="preserve">
          <source>A decorator for &lt;a href=&quot;../ng/service/%24controller&quot;&gt;&lt;code&gt;$controller&lt;/code&gt;&lt;/a&gt; with additional &lt;code&gt;bindings&lt;/code&gt; parameter, useful when testing controllers of directives that use &lt;a href=&quot;../ng/service/%24compile#-bindtocontroller-.html&quot;&gt;&lt;code&gt;bindToController&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../ng/service/%24controller&quot;&gt; &lt;code&gt;$controller&lt;/code&gt; &lt;/a&gt;的装饰器，带有附加的 &lt;code&gt;bindings&lt;/code&gt; 参数，在测试使用&lt;a href=&quot;../ng/service/%24compile#-bindtocontroller-.html&quot;&gt; &lt;code&gt;bindToController&lt;/code&gt; &lt;/a&gt;的指令的控制器时很有用。</target>
        </trans-unit>
        <trans-unit id="a6ddae07840c68a872552d4cb70b579cf8c24aef" translate="yes" xml:space="preserve">
          <source>A decorator for &lt;a href=&quot;ng/service/%24controller&quot;&gt;&lt;code&gt;$controller&lt;/code&gt;&lt;/a&gt; with additional &lt;code&gt;bindings&lt;/code&gt; parameter, useful when testing controllers of directives that use &lt;a href=&quot;ng/service/%24compile#-bindtocontroller-.html&quot;&gt;&lt;code&gt;bindToController&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;ng/service/%24controller&quot;&gt; &lt;code&gt;$controller&lt;/code&gt; &lt;/a&gt;的装饰器，带有附加的 &lt;code&gt;bindings&lt;/code&gt; 参数，在测试使用&lt;a href=&quot;ng/service/%24compile#-bindtocontroller-.html&quot;&gt; &lt;code&gt;bindToController&lt;/code&gt; &lt;/a&gt;的指令的控制器时很有用。</target>
        </trans-unit>
        <trans-unit id="ce088c4e794e32fe14c0927041d2cdf88cfae0c8" translate="yes" xml:space="preserve">
          <source>A default message can also be displayed when no &lt;code&gt;ngMessage&lt;/code&gt; directive is inserted, using the &lt;a href=&quot;ngmessagedefault&quot;&gt;&lt;code&gt;ngMessageDefault&lt;/code&gt;&lt;/a&gt; directive.</source>
          <target state="translated">当未插入 &lt;code&gt;ngMessage&lt;/code&gt; 指令时，也可以使用&lt;a href=&quot;ngmessagedefault&quot;&gt; &lt;code&gt;ngMessageDefault&lt;/code&gt; &lt;/a&gt;指令显示默认消息。</target>
        </trans-unit>
        <trans-unit id="36be02f1c6d94ec102591f40a3981d2fe909e18c" translate="yes" xml:space="preserve">
          <source>A different issue with objects or collections is that ngModel won't detect if an object property or a collection item changes. For that reason, &lt;code&gt;ngOptions&lt;/code&gt; additionally watches the model using &lt;code&gt;$watchCollection&lt;/code&gt;, when the expression contains a &lt;code&gt;track by&lt;/code&gt; clause or the the select has the &lt;code&gt;multiple&lt;/code&gt; attribute. This allows ngOptions to trigger a re-rendering of the options even if the actual object/collection has not changed identity, but only a property on the object or an item in the collection changes.</source>
          <target state="translated">对象或集合的另一个问题是ngModel不会检测对象属性或集合项是否发生更改。因此，当表达式包含 &lt;code&gt;track by&lt;/code&gt; 子句或select具有 &lt;code&gt;multiple&lt;/code&gt; 属性时， &lt;code&gt;ngOptions&lt;/code&gt; 还会使用 &lt;code&gt;$watchCollection&lt;/code&gt; 模型。这使ngOptions可以触发选项的重新渲染，即使实际的对象/集合没有更改身份，而仅对象上的属性或集合中的项目发生了变化。</target>
        </trans-unit>
        <trans-unit id="3708b5167f652cc7a6cae8807f541525f153a1c0" translate="yes" xml:space="preserve">
          <source>A directive can specify which of the 4 matching types it supports in the &lt;a href=&quot;../api/ng/service/%24compile#-restrict-.html&quot;&gt;&lt;code&gt;restrict&lt;/code&gt;&lt;/a&gt; property of the directive definition object. The default is &lt;code&gt;EA&lt;/code&gt;.</source>
          <target state="translated">指令可以在指令定义对象的&lt;a href=&quot;../api/ng/service/%24compile#-restrict-.html&quot;&gt; &lt;code&gt;restrict&lt;/code&gt; &lt;/a&gt;属性中指定它支持4种匹配类型中的哪一种。默认值为 &lt;code&gt;EA&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="06d7072e7c82651d679b053abc62ab52bfe11d8d" translate="yes" xml:space="preserve">
          <source>A directive is a behavior which should be triggered when specific HTML constructs are encountered during the compilation process. The directives can be placed in element names, attributes, class names, as well as comments. Here are some equivalent examples of invoking the &lt;a href=&quot;../api/ng/directive/ngbind&quot;&gt;&lt;code&gt;ng-bind&lt;/code&gt;&lt;/a&gt; directive.</source>
          <target state="translated">指令是一种行为，当在编译过程中遇到特定的HTML构造时应触发该行为。指令可以放在元素名称，属性，类名称以及注释中。这是调用&lt;a href=&quot;../api/ng/directive/ngbind&quot;&gt; &lt;code&gt;ng-bind&lt;/code&gt; &lt;/a&gt;指令的一些等效示例。</target>
        </trans-unit>
        <trans-unit id="327c78294c94992b0cd933d4b87c5e9699e89329" translate="yes" xml:space="preserve">
          <source>A directive is just a function which executes when the compiler encounters it in the DOM. See &lt;a href=&quot;../api/ng/provider/%24compileprovider#directive.html&quot;&gt;directive API&lt;/a&gt; for in-depth documentation on how to write directives.</source>
          <target state="translated">指令只是当编译器在DOM中遇到指令时执行的函数。有关如何编写指令的深入文档，请参见&lt;a href=&quot;../api/ng/provider/%24compileprovider#directive.html&quot;&gt;指令API&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="00783a21194e4ab3c93280470d34ea3574675381" translate="yes" xml:space="preserve">
          <source>A factory which creates a resource object that lets you interact with &lt;a href=&quot;http://en.wikipedia.org/wiki/Representational_State_Transfer&quot;&gt;RESTful&lt;/a&gt; server-side data sources.</source>
          <target state="translated">工厂创建一个资源对象，使您可以与&lt;a href=&quot;http://en.wikipedia.org/wiki/Representational_State_Transfer&quot;&gt;RESTful&lt;/a&gt;服务器端数据源进行交互。</target>
        </trans-unit>
        <trans-unit id="5c8486262a8cc125f156fc196df5ff94ab056589" translate="yes" xml:space="preserve">
          <source>A factory which creates a resource object that lets you interact with &lt;a href=&quot;https://en.wikipedia.org/wiki/Representational_State_Transfer&quot;&gt;RESTful&lt;/a&gt; server-side data sources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75674063b61a643301023ae7950ffed53283453a" translate="yes" xml:space="preserve">
          <source>A first example: Data binding</source>
          <target state="translated">第一个例子。数据绑定</target>
        </trans-unit>
        <trans-unit id="e0ea85d6b6af2158aa8c6e9605380b608e4a22b9" translate="yes" xml:space="preserve">
          <source>A form is an instance of &lt;a href=&quot;../api/ng/type/form.formcontroller&quot;&gt;FormController&lt;/a&gt;. The form instance can optionally be published into the scope using the &lt;code&gt;name&lt;/code&gt; attribute.</source>
          <target state="translated">表单是&lt;a href=&quot;../api/ng/type/form.formcontroller&quot;&gt;FormController&lt;/a&gt;的实例。可以选择使用 &lt;code&gt;name&lt;/code&gt; 属性将表单实例发布到范围中。</target>
        </trans-unit>
        <trans-unit id="09b0457141fd71126f4f5b1856e175c7bdc679f5" translate="yes" xml:space="preserve">
          <source>A function that performs no operations. This function can be useful when writing code in the functional style.</source>
          <target state="translated">一个不执行任何操作的函数。这个函数在用函数式编写代码时很有用。</target>
        </trans-unit>
        <trans-unit id="927c2853c79260f99382637d60b1f31d09e600d8" translate="yes" xml:space="preserve">
          <source>A function that returns its first argument. This function is useful when writing code in the functional style.</source>
          <target state="translated">一个返回第一个参数的函数。这个函数在用函数式编写代码时很有用。</target>
        </trans-unit>
        <trans-unit id="3bf96ebee31efd450a90bce44c461047308f3f00" translate="yes" xml:space="preserve">
          <source>A function that should be called repeatedly.</source>
          <target state="translated">一个应该被反复调用的函数。</target>
        </trans-unit>
        <trans-unit id="d5fe795730c98a599df718415511d721ffaffbbc" translate="yes" xml:space="preserve">
          <source>A function that should be called repeatedly. If no additional arguments are passed (see below), the function is called with the current iteration count.</source>
          <target state="translated">一个应该被反复调用的函数。如果没有传递额外的参数(见下文),函数将以当前的迭代次数被调用。</target>
        </trans-unit>
        <trans-unit id="f48966c4d92539555740018c51cafcd2b987c9f4" translate="yes" xml:space="preserve">
          <source>A function which represents the compiled expression:</source>
          <target state="translated">一个表示编译后的表达式的函数。</target>
        </trans-unit>
        <trans-unit id="03e8ddc04c009e88be1986ce9071a6ff42d38f7e" translate="yes" xml:space="preserve">
          <source>A function which takes two arguments &lt;code&gt;tElement&lt;/code&gt; and &lt;code&gt;tAttrs&lt;/code&gt; (described in the &lt;code&gt;compile&lt;/code&gt; function api below) and returns a string value.</source>
          <target state="translated">该函数接受两个参数 &lt;code&gt;tElement&lt;/code&gt; 和 &lt;code&gt;tAttrs&lt;/code&gt; （在下面的 &lt;code&gt;compile&lt;/code&gt; 函数api中进行描述），并返回一个字符串值。</target>
        </trans-unit>
        <trans-unit id="02dbdfe8aec371363fd2d4f9088e6efc174fd5a2" translate="yes" xml:space="preserve">
          <source>A function, whose execution should be delayed.</source>
          <target state="translated">一个函数,其执行应该是延迟的。</target>
        </trans-unit>
        <trans-unit id="56056728c573b2a14e4a6b4609fd75c358098fed" translate="yes" xml:space="preserve">
          <source>A handful of common AngularJS directives support and trigger animation hooks whenever any major event occurs during their life cycle. The table below explains in detail which animation events are triggered:</source>
          <target state="translated">少数常见的AngularJS指令支持并在其生命周期内发生任何重大事件时触发动画钩子。下表详细解释了哪些动画事件会被触发。</target>
        </trans-unit>
        <trans-unit id="e4ed6112409252387811e119060f0e3fb404c17f" translate="yes" xml:space="preserve">
          <source>A hash containing all the modules that have been loaded into the $injector.</source>
          <target state="translated">一个包含所有已加载到$injector中的模块的哈希值。</target>
        </trans-unit>
        <trans-unit id="6280bbd23fbf02ccab69cad3ae2df8798d0ede5f" translate="yes" xml:space="preserve">
          <source>A list of module functions or their aliases. See &lt;a href=&quot;angular.module&quot;&gt;&lt;code&gt;angular.module&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;ng&lt;/code&gt; module must be explicitly added.</source>
          <target state="translated">模块功能或其别名的列表。参见&lt;a href=&quot;angular.module&quot;&gt; &lt;code&gt;angular.module&lt;/code&gt; &lt;/a&gt;。该 &lt;code&gt;ng&lt;/code&gt; 模块必须明确的添加。</target>
        </trans-unit>
        <trans-unit id="94127fa72f5be9627d12463f3a9a89dc6e85f8d2" translate="yes" xml:space="preserve">
          <source>A list of valid HTML elements or an object with one or more of the following properties:</source>
          <target state="translated">一个有效的HTML元素列表或一个具有以下一个或多个属性的对象。</target>
        </trans-unit>
        <trans-unit id="05e8a415e27bf82becfd6d37ac93442a77ca6c5f" translate="yes" xml:space="preserve">
          <source>A list of valid attributes.</source>
          <target state="translated">有效属性的清单;</target>
        </trans-unit>
        <trans-unit id="a2cff4a5b3056231e50fc5df06de40e59768b479" translate="yes" xml:space="preserve">
          <source>A locale is a specific geographical, political, or cultural region. The most commonly used locale ID consists of two parts: language code and country code. For example, &lt;code&gt;en-US&lt;/code&gt;, &lt;code&gt;en-AU&lt;/code&gt;, and &lt;code&gt;zh-CN&lt;/code&gt; are all valid locale IDs that have both language codes and country codes. Because specifying a country code in locale ID is optional, locale IDs such as &lt;code&gt;en&lt;/code&gt;, &lt;code&gt;zh&lt;/code&gt;, and &lt;code&gt;sk&lt;/code&gt; are also valid. See the &lt;a href=&quot;http://userguide.icu-project.org/locale&quot;&gt;ICU&lt;/a&gt; website for more information about using locale IDs.</source>
          <target state="translated">语言环境是特定的地理，政治或文化区域。最常用的语言环境ID由两部分组成：语言代码和国家/地区代码。例如， &lt;code&gt;en-US&lt;/code&gt; ， &lt;code&gt;en-AU&lt;/code&gt; 和 &lt;code&gt;zh-CN&lt;/code&gt; 都是有效的语言环境ID，同时具有语言代码和国家/地区代码。由于在语言环境ID中指定国家/地区代码是可选的，因此诸如 &lt;code&gt;en&lt;/code&gt; ， &lt;code&gt;zh&lt;/code&gt; 和 &lt;code&gt;sk&lt;/code&gt; 之类的语言环境ID 也有效。有关使用区域设置ID的更多信息，请访问&lt;a href=&quot;http://userguide.icu-project.org/locale&quot;&gt;ICU&lt;/a&gt;网站。</target>
        </trans-unit>
        <trans-unit id="1ffed9d0df0955721113607f963949822e354ee2" translate="yes" xml:space="preserve">
          <source>A map of DOM element attribute names to the normalized name. This is needed to do reverse lookup from normalized name back to actual name.</source>
          <target state="translated">一个DOM元素属性名与标准化名称的映射。这需要从规范化名称反向查找到实际名称。</target>
        </trans-unit>
        <trans-unit id="ac050f8b13fbbe0e23861b0e31a09920964b0407" translate="yes" xml:space="preserve">
          <source>A map of parameters for a given route, passed as part of the &lt;a href=&quot;componentinstruction&quot;&gt;&lt;code&gt;ComponentInstruction&lt;/code&gt;&lt;/a&gt; to the Lifecycle Hooks, such as &lt;code&gt;$routerOnActivate&lt;/code&gt; and &lt;code&gt;$routerOnDeactivate&lt;/code&gt;.</source>
          <target state="translated">给定路由的参数映射，作为&lt;a href=&quot;componentinstruction&quot;&gt; &lt;code&gt;ComponentInstruction&lt;/code&gt; 的&lt;/a&gt;一部分传递给生命周期挂钩，例如 &lt;code&gt;$routerOnActivate&lt;/code&gt; 和 &lt;code&gt;$routerOnDeactivate&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="09b167f576d80fcd815b55aefdf9875dc0673668" translate="yes" xml:space="preserve">
          <source>A map of parameters for a given route, passed as part of the &lt;a href=&quot;ngcomponentrouter/type/componentinstruction&quot;&gt;&lt;code&gt;ComponentInstruction&lt;/code&gt;&lt;/a&gt; to the Lifecycle Hooks, such as &lt;code&gt;$routerOnActivate&lt;/code&gt; and &lt;code&gt;$routerOnDeactivate&lt;/code&gt;.</source>
          <target state="translated">给定路由的参数映射，作为&lt;a href=&quot;ngcomponentrouter/type/componentinstruction&quot;&gt; &lt;code&gt;ComponentInstruction&lt;/code&gt; 的&lt;/a&gt;一部分传递给生命周期挂钩，例如 &lt;code&gt;$routerOnActivate&lt;/code&gt; 和 &lt;code&gt;$routerOnDeactivate&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9324f5aeabd030e8b469f119f264258ae0a72395" translate="yes" xml:space="preserve">
          <source>A map of parameters for a given route, passed as part of the &lt;a href=&quot;type/componentinstruction&quot;&gt;&lt;code&gt;ComponentInstruction&lt;/code&gt;&lt;/a&gt; to the Lifecycle Hooks, such as &lt;code&gt;$routerOnActivate&lt;/code&gt; and &lt;code&gt;$routerOnDeactivate&lt;/code&gt;.</source>
          <target state="translated">给定路由的参数映射，作为&lt;a href=&quot;type/componentinstruction&quot;&gt; &lt;code&gt;ComponentInstruction&lt;/code&gt; 的&lt;/a&gt;一部分传递给生命周期挂钩，例如 &lt;code&gt;$routerOnActivate&lt;/code&gt; 和 &lt;code&gt;$routerOnDeactivate&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3aca56da114e66b6c7c9831f0302af945e2b9423" translate="yes" xml:space="preserve">
          <source>A model consisting of a string named &lt;code&gt;spice&lt;/code&gt;</source>
          <target state="translated">由名为 &lt;code&gt;spice&lt;/code&gt; 的字符串组成的模型</target>
        </trans-unit>
        <trans-unit id="ac776570f178191e1b9faf4c959abe7440ff6155" translate="yes" xml:space="preserve">
          <source>A module for each feature</source>
          <target state="translated">每个特征都有一个模块</target>
        </trans-unit>
        <trans-unit id="263fee6d5c3ddbbb6ce730daf5dc87f3fdbb2fed" translate="yes" xml:space="preserve">
          <source>A module for each reusable component (especially directives and filters)</source>
          <target state="translated">每个可重复使用的组件(特别是指令和过滤器)的模块。</target>
        </trans-unit>
        <trans-unit id="225d25f6753d494a37f0848446bbaa811f297e5e" translate="yes" xml:space="preserve">
          <source>A module is a collection of services, directives, controllers, filters, and configuration information. &lt;code&gt;angular.module&lt;/code&gt; is used to configure the &lt;a href=&quot;../../auto/service/%24injector&quot;&gt;$injector&lt;/a&gt;.</source>
          <target state="translated">模块是服务，指令，控制器，过滤器和配置信息的集合。 &lt;code&gt;angular.module&lt;/code&gt; 用于配置&lt;a href=&quot;../../auto/service/%24injector&quot;&gt;$ injector&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1b9810a38acec3b0112fef4ba925967a0ec7560a" translate="yes" xml:space="preserve">
          <source>A more complex example, featuring different show/hide animations:</source>
          <target state="translated">一个更复杂的例子,具有不同的显示/隐藏动画。</target>
        </trans-unit>
        <trans-unit id="9802b05fcc81cdbc44d9f5ea5e204cb68b0b7cc8" translate="yes" xml:space="preserve">
          <source>A naive approach to solving this problem would be to simply insert a copy of the &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; element and then compile it. The problem with this approach is that compiling on every &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; element that we clone would duplicate a lot of the work. Specifically, we'd be traversing &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; each time before cloning it to find the directives. This would cause the compilation process to be slower, in turn making applications less responsive when inserting new nodes.</source>
          <target state="translated">解决此问题的幼稚方法是简单地插入 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 元素的副本，然后对其进行编译。这种方法的问题在于，在我们克隆的每个 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 元素上进行编译会重复很多工作。具体来说，我们将在遍历 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 之前将其克隆以找到指令。这将导致编译过程变慢，从而使应用程序在插入新节点时的响应速度降低。</target>
        </trans-unit>
        <trans-unit id="a3f1861ea558e04a53d812f2833cbf6d5066b137" translate="yes" xml:space="preserve">
          <source>A new instance of deferred is constructed by calling &lt;code&gt;$q.defer()&lt;/code&gt;.</source>
          <target state="translated">通过调用 &lt;code&gt;$q.defer()&lt;/code&gt; 构造一个新的deferred实例。</target>
        </trans-unit>
        <trans-unit id="cb83fe916c440c15ab744b5d59e5a6ebfa47364e" translate="yes" xml:space="preserve">
          <source>A new promise instance is created when a deferred instance is created and can be retrieved by calling &lt;code&gt;deferred.promise&lt;/code&gt;.</source>
          <target state="translated">创建延迟实例时会创建一个新的Promise实例，可以通过调用 &lt;code&gt;deferred.promise&lt;/code&gt; 来检索它。</target>
        </trans-unit>
        <trans-unit id="713a88d680af18fb58af607a73c855c9cc2e0e1b" translate="yes" xml:space="preserve">
          <source>A new sub-array or substring of length &lt;code&gt;limit&lt;/code&gt; or less if the input had less than &lt;code&gt;limit&lt;/code&gt; elements.</source>
          <target state="translated">一个新的子阵列或子串长度 &lt;code&gt;limit&lt;/code&gt; 或更低，如果输入具有小于 &lt;code&gt;limit&lt;/code&gt; 元件。</target>
        </trans-unit>
        <trans-unit id="2b7a002c87fcd8660e3544e9875caa6df20fec19" translate="yes" xml:space="preserve">
          <source>A note about browser compatibility</source>
          <target state="translated">关于浏览器兼容性的说明</target>
        </trans-unit>
        <trans-unit id="29ae56a350199f61ba8d6960a863d68ba1e1280c" translate="yes" xml:space="preserve">
          <source>A numerical timeout or a promise returned from &lt;a href=&quot;%24timeout&quot;&gt;$timeout&lt;/a&gt;, will set the &lt;code&gt;xhrStatus&lt;/code&gt; in the &lt;a href=&quot;%24http#%24http-returns.html&quot;&gt;response&lt;/a&gt; to &quot;timeout&quot;, and any other resolved promise will set it to &quot;abort&quot;, following standard XMLHttpRequest behavior.</source>
          <target state="translated">数值超时或返回的承诺&lt;a href=&quot;%24timeout&quot;&gt;$超时&lt;/a&gt;，将设置 &lt;code&gt;xhrStatus&lt;/code&gt; 在&lt;a href=&quot;%24http#%24http-returns.html&quot;&gt;响应&lt;/a&gt;为&amp;ldquo;超时&amp;rdquo;，以及任何其他解决承诺将其设置为&amp;ldquo;中止&amp;rdquo;，以下标准XMLHttpRequest的行为。</target>
        </trans-unit>
        <trans-unit id="1116347f621c5180dfe109771a3b63007d50e2f3" translate="yes" xml:space="preserve">
          <source>A parameterized URL template with parameters prefixed by &lt;code&gt;:&lt;/code&gt; as in &lt;code&gt;/user/:username&lt;/code&gt;. If you are using a URL with a port number (e.g. &lt;code&gt;http://example.com:8080/api&lt;/code&gt;), it will be respected.</source>
          <target state="translated">一个参数化的URL模板由前缀参数 &lt;code&gt;:&lt;/code&gt; 如 &lt;code&gt;/user/:username&lt;/code&gt; 。如果您使用带有端口号的URL（例如 &lt;code&gt;http://example.com:8080/api&lt;/code&gt; ），则将被尊重。</target>
        </trans-unit>
        <trans-unit id="452392dbf344d122f7b332400f90489eab5c05a3" translate="yes" xml:space="preserve">
          <source>A path should always begin with forward slash (&lt;code&gt;/&lt;/code&gt;); the &lt;code&gt;$location.path()&lt;/code&gt; setter will add the forward slash if it is missing.</source>
          <target state="translated">路径应始终以正斜杠（ &lt;code&gt;/&lt;/code&gt; ）开头；在 &lt;code&gt;$location.path()&lt;/code&gt; 如果它缺少二传手将添加斜线。</target>
        </trans-unit>
        <trans-unit id="6a8dda83e3a1b0ef1feb44da945442f04db8d3e9" translate="yes" xml:space="preserve">
          <source>A predicate (or list of predicates) to be used by the comparator to determine the order of elements.</source>
          <target state="translated">比较器用来确定元素顺序的谓词(或谓词列表)。</target>
        </trans-unit>
        <trans-unit id="5e0995f849e5cdc1b945ea8fbb9875c89ea13cf7" translate="yes" xml:space="preserve">
          <source>A promise from calling the &lt;code&gt;$interval&lt;/code&gt; function.</source>
          <target state="translated">来自调用 &lt;code&gt;$interval&lt;/code&gt; 函数的承诺。</target>
        </trans-unit>
        <trans-unit id="4e7cf7245f1fe3b7e365471f31c20059d76f5920" translate="yes" xml:space="preserve">
          <source>A promise which will be notified on each iteration.</source>
          <target state="translated">每次迭代时都会通知的承诺。</target>
        </trans-unit>
        <trans-unit id="5212905179099b47b09b21e5997cb8a49f0a5971" translate="yes" xml:space="preserve">
          <source>A promise which will be notified on each iteration. It will resolve once all iterations of the interval complete.</source>
          <target state="translated">一个承诺,将在每次迭代时被通知。一旦间隔的所有迭代完成,它将被解析。</target>
        </trans-unit>
        <trans-unit id="040660a941ed0ab75c40a02ea66cad58886ab53e" translate="yes" xml:space="preserve">
          <source>A reference to the browser's &lt;code&gt;window&lt;/code&gt; object. While &lt;code&gt;window&lt;/code&gt; is globally available in JavaScript, it causes testability problems, because it is a global variable. In AngularJS we always refer to it through the &lt;code&gt;$window&lt;/code&gt; service, so it may be overridden, removed or mocked for testing.</source>
          <target state="translated">对浏览器 &lt;code&gt;window&lt;/code&gt; 对象的引用。虽然 &lt;code&gt;window&lt;/code&gt; 在JavaScript中全局可用，但由于它是全局变量，因此会引起可测试性问题。在AngularJS中，我们总是通过 &lt;code&gt;$window&lt;/code&gt; 服务引用它，因此它可能会被覆盖，删除或模拟以进行测试。</target>
        </trans-unit>
        <trans-unit id="de848095c9da48c3f2897c90875017cd0e56d38e" translate="yes" xml:space="preserve">
          <source>A remote template can also be used (With &lt;a href=&quot;ngmessagesinclude&quot;&gt;&lt;code&gt;ngMessagesInclude&lt;/code&gt;&lt;/a&gt;) to promote message reusability and messages can also be overridden.</source>
          <target state="translated">也可以使用远程模板（使用&lt;a href=&quot;ngmessagesinclude&quot;&gt; &lt;code&gt;ngMessagesInclude&lt;/code&gt; &lt;/a&gt;）来提高消息的可重用性，并且也可以覆盖消息。</target>
        </trans-unit>
        <trans-unit id="54b9cbb30f599a8403b248268c58e667bbc74bf9" translate="yes" xml:space="preserve">
          <source>A resource &quot;class&quot; object with methods for the default set of resource actions optionally extended with custom &lt;code&gt;actions&lt;/code&gt;. The default set contains these actions:</source>
          <target state="translated">资源&amp;ldquo;类&amp;rdquo;对象，其对象具有默认的资源操作集的方法，可以选择使用自定义 &lt;code&gt;actions&lt;/code&gt; 扩展。默认设置包含以下操作：</target>
        </trans-unit>
        <trans-unit id="8a72795321ece67e315ace2352d61342be26d7a9" translate="yes" xml:space="preserve">
          <source>A response status code between 200 and 299 is considered a success status and will result in the success callback being called. Any response status code outside of that range is considered an error status and will result in the error callback being called. Also, status codes less than -1 are normalized to zero. -1 usually means the request was aborted, e.g. using a &lt;code&gt;config.timeout&lt;/code&gt;. More information about the status might be available in the &lt;code&gt;xhrStatus&lt;/code&gt; property.</source>
          <target state="translated">在200到299之间的响应状态代码被视为成功状态，并将导致调用成功回调。任何超出该范围的响应状态代码都将被视为错误状态，并会导致错误回调被调用。同样，将小于-1的状态代码归一化为零。 -1通常意味着请求被中止，例如使用 &lt;code&gt;config.timeout&lt;/code&gt; 。 &lt;code&gt;xhrStatus&lt;/code&gt; 属性中可能提供有关状态的更多信息。</target>
        </trans-unit>
        <trans-unit id="4d78c5ef35ba9a3a351b9b8b8ececf7e7781e688" translate="yes" xml:space="preserve">
          <source>A root scope can be retrieved using the &lt;a href=&quot;../service/%24rootscope&quot;&gt;$rootScope&lt;/a&gt; key from the &lt;a href=&quot;../../auto/service/%24injector&quot;&gt;$injector&lt;/a&gt;. Child scopes are created using the &lt;a href=&quot;%24rootscope.scope#%24new.html&quot;&gt;$new()&lt;/a&gt; method. (Most scopes are created automatically when compiled HTML template is executed.) See also the &lt;a href=&quot;../../../guide/scope&quot;&gt;Scopes guide&lt;/a&gt; for an in-depth introduction and usage examples.</source>
          <target state="translated">根范围可以使用检索&lt;a href=&quot;../service/%24rootscope&quot;&gt;$ rootScope&lt;/a&gt;从密钥&lt;a href=&quot;../../auto/service/%24injector&quot;&gt;$注射器&lt;/a&gt;。子作用域使用&lt;a href=&quot;%24rootscope.scope#%24new.html&quot;&gt;$ new（）&lt;/a&gt;方法创建。（执行合并的HTML模板时，大多数作用域都是自动创建的。）另请参阅&amp;ldquo; &lt;a href=&quot;../../../guide/scope&quot;&gt;作用域&amp;rdquo;指南&lt;/a&gt;，以获取详细的介绍和用法示例。</target>
        </trans-unit>
        <trans-unit id="004008a8c97d3672714468bc8cfe76b2c7cab307" translate="yes" xml:space="preserve">
          <source>A root scope can be retrieved using the &lt;a href=&quot;service/%24rootscope&quot;&gt;$rootScope&lt;/a&gt; key from the &lt;a href=&quot;../auto/service/%24injector&quot;&gt;$injector&lt;/a&gt;. Child scopes are created using the &lt;a href=&quot;type/%24rootscope.scope#%24new.html&quot;&gt;$new()&lt;/a&gt; method. (Most scopes are created automatically when compiled HTML template is executed.) See also the &lt;a href=&quot;../../guide/scope&quot;&gt;Scopes guide&lt;/a&gt; for an in-depth introduction and usage examples.</source>
          <target state="translated">根范围可以使用检索&lt;a href=&quot;service/%24rootscope&quot;&gt;$ rootScope&lt;/a&gt;从密钥&lt;a href=&quot;../auto/service/%24injector&quot;&gt;$注射器&lt;/a&gt;。子作用域使用&lt;a href=&quot;type/%24rootscope.scope#%24new.html&quot;&gt;$ new（）&lt;/a&gt;方法创建。（执行合并的HTML模板时，大多数作用域都是自动创建的。）另请参阅&amp;ldquo; &lt;a href=&quot;../../guide/scope&quot;&gt;作用域&amp;rdquo;指南&lt;/a&gt;，以获取详细的介绍和用法示例。</target>
        </trans-unit>
        <trans-unit id="9472f1a4df3f71716a86325e4dcd0e27c0314c58" translate="yes" xml:space="preserve">
          <source>A scope can inherit from a parent scope, as in this example:</source>
          <target state="translated">一个作用域可以从父作用域继承,就像在这个例子中一样。</target>
        </trans-unit>
        <trans-unit id="8a3e8603742beaaec4dd1f083ac44804290ac748" translate="yes" xml:space="preserve">
          <source>A service that can be used to create instances of component controllers. Useful for unit-testing.</source>
          <target state="translated">一个可用于创建组件控制器实例的服务。用于单元测试。</target>
        </trans-unit>
        <trans-unit id="9909d73dae5dc48bf7bd8f099425c18f2ccd1383" translate="yes" xml:space="preserve">
          <source>A service that helps you run functions asynchronously, and use their return values (or exceptions) when they are done processing.</source>
          <target state="translated">一个帮助你异步运行函数的服务,并在处理完毕后使用它们的返回值(或异常)。</target>
        </trans-unit>
        <trans-unit id="7fa98307bb925b7e78fec6db866350c8f5850d65" translate="yes" xml:space="preserve">
          <source>A shared object between directive compile / linking functions which contains normalized DOM element attributes. The values reflect current binding state &lt;code&gt;{{ }}&lt;/code&gt;. The normalization is needed since all of these are treated as equivalent in AngularJS:</source>
          <target state="translated">指令编译/链接功能之间的共享对象，其中包含标准化的DOM元素属性。这些值反映了当前的绑定状态 &lt;code&gt;{{ }}&lt;/code&gt; 。由于所有这些在AngularJS中都被视为等效项，因此需要进行规范化：</target>
        </trans-unit>
        <trans-unit id="578c6a6777e13169afd3ec0627d9cbccce541d6b" translate="yes" xml:space="preserve">
          <source>A simple &lt;code&gt;ng-csp&lt;/code&gt; (or &lt;code&gt;data-ng-csp&lt;/code&gt;) attribute will tell AngularJS to deactivate both inline styles and unsafe eval. E.g. &lt;code&gt;&amp;lt;body ng-csp&amp;gt;&lt;/code&gt;. This is backwardly compatible with previous versions of AngularJS.</source>
          <target state="translated">一个简单的 &lt;code&gt;ng-csp&lt;/code&gt; （或 &lt;code&gt;data-ng-csp&lt;/code&gt; ）属性将告诉AngularJS停用内联样式和不安全的评估。例如 &lt;code&gt;&amp;lt;body ng-csp&amp;gt;&lt;/code&gt; 。这与AngularJS的早期版本向后兼容。</target>
        </trans-unit>
        <trans-unit id="8eab9356a6cee0bd4192aaa4fe8dc2252df33c89" translate="yes" xml:space="preserve">
          <source>A simple example, animating the element's opacity:</source>
          <target state="translated">一个简单的例子,动画化元素的不透明度。</target>
        </trans-unit>
        <trans-unit id="13ca11ee80a7423b520a8cbb9b876c83a8413e4b" translate="yes" xml:space="preserve">
          <source>A special directive is necessary because we cannot use interpolation inside the &lt;code&gt;checked&lt;/code&gt; attribute. See the &lt;a href=&quot;../../../guide/interpolation&quot;&gt;interpolation guide&lt;/a&gt; for more info.</source>
          <target state="translated">因为我们不能在 &lt;code&gt;checked&lt;/code&gt; 属性内使用插值，所以必须使用特殊指令。有关更多信息，请参见&lt;a href=&quot;../../../guide/interpolation&quot;&gt;插值指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="96ec97c9bf5c06b46afd2259dcdc487df739471f" translate="yes" xml:space="preserve">
          <source>A special directive is necessary because we cannot use interpolation inside the &lt;code&gt;disabled&lt;/code&gt; attribute. See the &lt;a href=&quot;../../../guide/interpolation&quot;&gt;interpolation guide&lt;/a&gt; for more info.</source>
          <target state="translated">必须使用特殊指令，因为我们不能在 &lt;code&gt;disabled&lt;/code&gt; 属性内使用插值。有关更多信息，请参见&lt;a href=&quot;../../../guide/interpolation&quot;&gt;插值指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e86a8cbd4ddf2dfcb7e716138595387a4e5a85fe" translate="yes" xml:space="preserve">
          <source>A special directive is necessary because we cannot use interpolation inside the &lt;code&gt;open&lt;/code&gt; attribute. See the &lt;a href=&quot;../../../guide/interpolation&quot;&gt;interpolation guide&lt;/a&gt; for more info.</source>
          <target state="translated">必须使用特殊指令，因为我们不能在 &lt;code&gt;open&lt;/code&gt; 属性内使用插值。有关更多信息，请参见&lt;a href=&quot;../../../guide/interpolation&quot;&gt;插值指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b91103bfde51390004606921a7b8fb1ff063be2b" translate="yes" xml:space="preserve">
          <source>A special directive is necessary because we cannot use interpolation inside the &lt;code&gt;readonly&lt;/code&gt; attribute. See the &lt;a href=&quot;../../../guide/interpolation&quot;&gt;interpolation guide&lt;/a&gt; for more info.</source>
          <target state="translated">必须使用特殊指令，因为我们不能在 &lt;code&gt;readonly&lt;/code&gt; 属性内使用插值。有关更多信息，请参见&lt;a href=&quot;../../../guide/interpolation&quot;&gt;插值指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6493fd9ee730755cb99067d28aafe6366edf30cf" translate="yes" xml:space="preserve">
          <source>A special directive is necessary because we cannot use interpolation inside the &lt;code&gt;selected&lt;/code&gt; attribute. See the &lt;a href=&quot;../../../guide/interpolation&quot;&gt;interpolation guide&lt;/a&gt; for more info.</source>
          <target state="translated">必须使用特殊指令，因为我们不能在 &lt;code&gt;selected&lt;/code&gt; 属性内使用插值。有关更多信息，请参见&lt;a href=&quot;../../../guide/interpolation&quot;&gt;插值指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9d5e64837c87ce8f3783157fa15fe926b963dac1" translate="yes" xml:space="preserve">
          <source>A special type of scope is the &lt;code&gt;isolate&lt;/code&gt; scope, which does not inherit prototypically from the parent scope. This type of scope is useful for component directives that should be isolated from their parent scope. See the &lt;a href=&quot;directive#isolating-the-scope-of-a-directive.html&quot;&gt;directives guide&lt;/a&gt; for more information about isolate scopes in custom directives.</source>
          <target state="translated">&lt;code&gt;isolate&lt;/code&gt; 类型是隔离类型的一种特殊类型，它不是原型上从父范围继承的。这种类型的作用域对于应与其父作用域隔离的组件指令很有用。有关自定义指令中隔离作用域的更多信息，请参见&lt;a href=&quot;directive#isolating-the-scope-of-a-directive.html&quot;&gt;指令指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="59ad40cb735425875e2d4a8ab8e7371e40ff26f7" translate="yes" xml:space="preserve">
          <source>A string. For example &lt;code&gt;&amp;lt;div red-on-hover&amp;gt;{{delete_str}}&amp;lt;/div&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">一个字符串。例如 &lt;code&gt;&amp;lt;div red-on-hover&amp;gt;{{delete_str}}&amp;lt;/div&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8b0ca9801d5fb35012af168b081343748fd65273" translate="yes" xml:space="preserve">
          <source>A trusted representation of value, that can be used in the given context.</source>
          <target state="translated">值的可信表示,可以在给定的上下文中使用。</target>
        </trans-unit>
        <trans-unit id="5b850d32e9f4e83610766a68bff4d1eb00b0f5a4" translate="yes" xml:space="preserve">
          <source>A unit test is a way of instantiating a subset of an application to apply stimulus to it. Small, structured modules help keep unit tests concise and focused.</source>
          <target state="translated">单元测试是实例化应用程序子集的一种方式,以对其施加刺激。小的、结构化的模块有助于保持单元测试的简洁和重点。</target>
        </trans-unit>
        <trans-unit id="cd209eeff32e50f79f69edda44a79e2b6ab0898e" translate="yes" xml:space="preserve">
          <source>A variant of &lt;a href=&quot;%24rootscope.scope#%24watch.html&quot;&gt;$watch()&lt;/a&gt; where it watches an array of &lt;code&gt;watchExpressions&lt;/code&gt;. If any one expression in the collection changes the &lt;code&gt;listener&lt;/code&gt; is executed.</source>
          <target state="translated">&lt;a href=&quot;%24rootscope.scope#%24watch.html&quot;&gt;$ watch（）的&lt;/a&gt;一个变体，它监视一系列 &lt;code&gt;watchExpressions&lt;/code&gt; 。如果集合中的任何一个表达式发生更改，则将执行 &lt;code&gt;listener&lt;/code&gt; 器。</target>
        </trans-unit>
        <trans-unit id="1b45ac319be996d2d941a9d9450c2984ad5ce01e" translate="yes" xml:space="preserve">
          <source>A version of the value that's safe to use in the given context, or throws an exception if this is impossible.</source>
          <target state="translated">在给定的上下文中可以安全使用的值的版本,如果不可能,则抛出一个异常。</target>
        </trans-unit>
        <trans-unit id="2114b9cf09c04eaad419c5fd2210545525228750" translate="yes" xml:space="preserve">
          <source>A wrapped version of value that can be used as a trusted variant of your &lt;code&gt;value&lt;/code&gt; in &lt;code&gt;$sce.CSS&lt;/code&gt; context. This context is currently unused, so there are almost no reasons to use this function so far.</source>
          <target state="translated">价值包装版本，可以作为您的信任变异 &lt;code&gt;value&lt;/code&gt; 在 &lt;code&gt;$sce.CSS&lt;/code&gt; 背景。该上下文当前未使用，因此到目前为止，几乎没有理由使用此功能。</target>
        </trans-unit>
        <trans-unit id="6aac2364c23b77028d5fac2c7100d9e6ad6e89db" translate="yes" xml:space="preserve">
          <source>A wrapped version of value that can be used as a trusted variant of your &lt;code&gt;value&lt;/code&gt; in &lt;code&gt;$sce.HTML&lt;/code&gt; context (like &lt;code&gt;ng-bind-html&lt;/code&gt;).</source>
          <target state="translated">价值包装版本，可以作为您的信任变异 &lt;code&gt;value&lt;/code&gt; 在 &lt;code&gt;$sce.HTML&lt;/code&gt; 方面（如 &lt;code&gt;ng-bind-html&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="943e357106396a3e0df4457b98387b3baac1cd3d" translate="yes" xml:space="preserve">
          <source>A wrapped version of value that can be used as a trusted variant of your &lt;code&gt;value&lt;/code&gt; in &lt;code&gt;$sce.JS&lt;/code&gt; context. That context is currently unused, so there are almost no reasons to use this function so far.</source>
          <target state="translated">价值包装版本，可以作为您的信任变异 &lt;code&gt;value&lt;/code&gt; 在 &lt;code&gt;$sce.JS&lt;/code&gt; 背景。该上下文当前尚未使用，因此到目前为止，几乎没有理由使用此功能。</target>
        </trans-unit>
        <trans-unit id="aee72dee5c81b8892475ad7e50e66f541550e109" translate="yes" xml:space="preserve">
          <source>A wrapped version of value that can be used as a trusted variant of your &lt;code&gt;value&lt;/code&gt; in &lt;code&gt;$sce.RESOURCE_URL&lt;/code&gt; context (template URLs in &lt;code&gt;ng-include&lt;/code&gt;, most &lt;code&gt;src&lt;/code&gt; attribute bindings, ...)</source>
          <target state="translated">这可以作为你的信任变种的价值包装版本 &lt;code&gt;value&lt;/code&gt; 在 &lt;code&gt;$sce.RESOURCE_URL&lt;/code&gt; 上下文（模板网址 &lt;code&gt;ng-include&lt;/code&gt; ，大多数 &lt;code&gt;src&lt;/code&gt; 属性绑定，...）</target>
        </trans-unit>
        <trans-unit id="e93e7d74205a414b8e296caec821b600388e6ede" translate="yes" xml:space="preserve">
          <source>A wrapped version of value that can be used as a trusted variant of your &lt;code&gt;value&lt;/code&gt; in &lt;code&gt;$sce.URL&lt;/code&gt; context. That context is currently unused, so there are almost no reasons to use this function so far.</source>
          <target state="translated">价值包装版本，可以作为您的信任变异 &lt;code&gt;value&lt;/code&gt; 在 &lt;code&gt;$sce.URL&lt;/code&gt; 背景。该上下文当前尚未使用，因此到目前为止，几乎没有理由使用此功能。</target>
        </trans-unit>
        <trans-unit id="94634151636234123b70b002561d0dc752c67a9e" translate="yes" xml:space="preserve">
          <source>A wrapped version of value that can be used as a trusted variant of your &lt;code&gt;value&lt;/code&gt; in the context you specified.</source>
          <target state="translated">有包装的价值版本，可以作为您的信任变异 &lt;code&gt;value&lt;/code&gt; 在指定的范围内。</target>
        </trans-unit>
        <trans-unit id="e5742b7d392c9ff17c292adaab06bd43e7effa1d" translate="yes" xml:space="preserve">
          <source>A11y Project</source>
          <target state="translated">A11y项目</target>
        </trans-unit>
        <trans-unit id="d93d10ff0fbef1b4aa0ddc24e10e907746d3c85a" translate="yes" xml:space="preserve">
          <source>API</source>
          <target state="translated">API</target>
        </trans-unit>
        <trans-unit id="b276f94cd8d0e74a21de6e5939b8c10ca9a975d6" translate="yes" xml:space="preserve">
          <source>API Reference</source>
          <target state="translated">API参考</target>
        </trans-unit>
        <trans-unit id="771b5051428b8e31be4c1e9b28544157fe69eb11" translate="yes" xml:space="preserve">
          <source>Absolute links that go to a different domain</source>
          <target state="translated">去往不同域名的绝对链接</target>
        </trans-unit>
        <trans-unit id="abb8862cb5fd053f1431200782dd6b2385ba3889" translate="yes" xml:space="preserve">
          <source>Absolute or relative URL of the resource that is being requested; or an object created by a call to &lt;code&gt;$sce.trustAsResourceUrl(url)&lt;/code&gt;.</source>
          <target state="translated">所请求资源的绝对或相对URL；或通过调用 &lt;code&gt;$sce.trustAsResourceUrl(url)&lt;/code&gt; 创建的对象。</target>
        </trans-unit>
        <trans-unit id="d660049bc1f2f54fc0e3f4ace6fa5eb205f2f1e0" translate="yes" xml:space="preserve">
          <source>Accessibility</source>
          <target state="translated">Accessibility</target>
        </trans-unit>
        <trans-unit id="932d041badc29d5b5f5f02116595faeaf3e79a51" translate="yes" xml:space="preserve">
          <source>Accessibility best practices that apply to web apps in general also apply to AngularJS.</source>
          <target state="translated">适用于一般Web应用程序的可访问性最佳实践也适用于AngularJS。</target>
        </trans-unit>
        <trans-unit id="a368acd524486ce1ec9e162bc6921361dffc280e" translate="yes" xml:space="preserve">
          <source>Accessing the backend</source>
          <target state="translated">访问后台</target>
        </trans-unit>
        <trans-unit id="73f18c14545e6b8de39ba7a2b2dae679a17ad3cd" translate="yes" xml:space="preserve">
          <source>Accessing the response</source>
          <target state="translated">获取答复</target>
        </trans-unit>
        <trans-unit id="53dfdad6a297f31a276521fd544f3049a48d0385" translate="yes" xml:space="preserve">
          <source>Add behavior to the &lt;code&gt;$scope&lt;/code&gt; object.</source>
          <target state="translated">将行为添加到 &lt;code&gt;$scope&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="354177651f5bd3ccb60bca3a000a1293dfe5c051" translate="yes" xml:space="preserve">
          <source>Add custom attributes to the link element.</source>
          <target state="translated">为链接元素添加自定义属性。</target>
        </trans-unit>
        <trans-unit id="aa635fd7300af5b89def28983561aaf159169195" translate="yes" xml:space="preserve">
          <source>Add the specified modules to the current injector.</source>
          <target state="translated">将指定的模块添加到当前注射器中。</target>
        </trans-unit>
        <trans-unit id="8cf8d577c9d621dfe11c43d243bcf5df4901001a" translate="yes" xml:space="preserve">
          <source>Adding Behavior to a Scope Object</source>
          <target state="translated">向范围对象添加行为</target>
        </trans-unit>
        <trans-unit id="0dd3cd9ca66b96853fa6aa63eec6ed109ced7c1d" translate="yes" xml:space="preserve">
          <source>Adding UI logic: Controllers</source>
          <target state="translated">添加UI逻辑。控制器</target>
        </trans-unit>
        <trans-unit id="16fadc2c4c92cb401aef05833ef060e854d83464" translate="yes" xml:space="preserve">
          <source>Adding via the &lt;code&gt;$templateCache&lt;/code&gt; service:</source>
          <target state="translated">通过 &lt;code&gt;$templateCache&lt;/code&gt; 服务添加：</target>
        </trans-unit>
        <trans-unit id="92ae3f2635c80ce7fb8d316d1172975f449ef38b" translate="yes" xml:space="preserve">
          <source>Adding via the &lt;code&gt;script&lt;/code&gt; tag:</source>
          <target state="translated">通过 &lt;code&gt;script&lt;/code&gt; 标签添加：</target>
        </trans-unit>
        <trans-unit id="d8b82f8ac1fd93a8c5863d25cc6558cb656b7f40" translate="yes" xml:space="preserve">
          <source>Additional Resources</source>
          <target state="translated">其他资源</target>
        </trans-unit>
        <trans-unit id="8c2ac4451a90f41ac885a24324949060081e16e9" translate="yes" xml:space="preserve">
          <source>Additional tools for testing AngularJS applications</source>
          <target state="translated">测试AngularJS应用的其他工具</target>
        </trans-unit>
        <trans-unit id="28b5580670d0ebc7e0ca1d7a532bdf62dab04cfd" translate="yes" xml:space="preserve">
          <source>Additionally it prevents the default action (which for form means sending the request to the server and reloading the current page), but only if the form does not contain &lt;code&gt;action&lt;/code&gt;, &lt;code&gt;data-action&lt;/code&gt;, or &lt;code&gt;x-action&lt;/code&gt; attributes.</source>
          <target state="translated">另外，它仅在表单不包含 &lt;code&gt;action&lt;/code&gt; ， &lt;code&gt;data-action&lt;/code&gt; 或 &lt;code&gt;x-action&lt;/code&gt; 属性时才阻止默认操作（对于表单，这意味着将请求发送到服务器并重新加载当前页面）。</target>
        </trans-unit>
        <trans-unit id="bed9edff008eef6908d8593fd49a8d5e98f6d618" translate="yes" xml:space="preserve">
          <source>Additionally the promise api allows for composition that is very hard to do with the traditional callback (&lt;a href=&quot;http://en.wikipedia.org/wiki/Continuation-passing_style&quot;&gt;CPS&lt;/a&gt;) approach. For more on this please see the &lt;a href=&quot;https://github.com/kriskowal/q&quot;&gt;Q documentation&lt;/a&gt; especially the section on serial or parallel joining of promises.</source>
          <target state="translated">另外，promise api允许使用传统的回调（&lt;a href=&quot;http://en.wikipedia.org/wiki/Continuation-passing_style&quot;&gt;CPS&lt;/a&gt;）方法很难实现的合成。有关更多信息，请参阅&lt;a href=&quot;https://github.com/kriskowal/q&quot;&gt;Q文档，&lt;/a&gt;尤其是有关Promise串行或并行连接的部分。</target>
        </trans-unit>
        <trans-unit id="388c994bb48bcb45051e5120639de339c11c8f6b" translate="yes" xml:space="preserve">
          <source>Additionally the promise api allows for composition that is very hard to do with the traditional callback (&lt;a href=&quot;https://en.wikipedia.org/wiki/Continuation-passing_style&quot;&gt;CPS&lt;/a&gt;) approach. For more on this please see the &lt;a href=&quot;https://github.com/kriskowal/q&quot;&gt;Q documentation&lt;/a&gt; especially the section on serial or parallel joining of promises.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa2c2f3d21d9dad1d8fad53911125d3af2babd45" translate="yes" xml:space="preserve">
          <source>Additionally, there is the &lt;code&gt;$asyncValidators&lt;/code&gt; object which handles asynchronous validation, such as making an &lt;code&gt;$http&lt;/code&gt; request to the backend. Functions added to the object must return a promise that must be &lt;code&gt;resolved&lt;/code&gt; when valid or &lt;code&gt;rejected&lt;/code&gt; when invalid. In-progress async validations are stored by key in &lt;a href=&quot;../api/ng/type/ngmodel.ngmodelcontroller#%24pending.html&quot;&gt;&lt;code&gt;ngModelController.$pending&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">另外，还有一个 &lt;code&gt;$asyncValidators&lt;/code&gt; 对象，该对象处理异步验证，例如向后端发出 &lt;code&gt;$http&lt;/code&gt; 请求。添加到对象的函数必须返回一个承诺，该承诺必须在有效时 &lt;code&gt;resolved&lt;/code&gt; ，在无效时 &lt;code&gt;rejected&lt;/code&gt; 。进行中的异步验证通过&lt;a href=&quot;../api/ng/type/ngmodel.ngmodelcontroller#%24pending.html&quot;&gt; &lt;code&gt;ngModelController.$pending&lt;/code&gt; &lt;/a&gt;密钥存储。</target>
        </trans-unit>
        <trans-unit id="5f35feb0b8448abd58c67d83a67eece168f7873e" translate="yes" xml:space="preserve">
          <source>Additionally, we don't want to manually have to flush mocked out requests like we do during unit testing. For this reason the e2e $httpBackend flushes mocked out requests automatically, closely simulating the behavior of the XMLHttpRequest object.</source>
          <target state="translated">此外,我们不希望像在单元测试时那样,手动刷新模拟出来的请求,因此e2e的$httpBackend会自动刷新模拟出来的请求。出于这个原因,e2e $httpBackend会自动刷新模拟出来的请求,密切模拟XMLHttpRequest对象的行为。</target>
        </trans-unit>
        <trans-unit id="aacc914ff1ea9003accb975048b58f1c019e22cb" translate="yes" xml:space="preserve">
          <source>Additionally, you can inject the serializer and use it explicitly, for example to serialize form data for submission:</source>
          <target state="translated">此外,你可以注入序列化器并显式地使用它,例如,将表单数据序列化以提交。</target>
        </trans-unit>
        <trans-unit id="3fb165889f8d056e976595e427b1057d57a14099" translate="yes" xml:space="preserve">
          <source>Additionally, you can provide animations via the &lt;code&gt;ngAnimate&lt;/code&gt; module to animate the &lt;code&gt;enter&lt;/code&gt; and &lt;code&gt;leave&lt;/code&gt; effects.</source>
          <target state="translated">另外，您可以通过 &lt;code&gt;ngAnimate&lt;/code&gt; 模块提供动画，以使 &lt;code&gt;enter&lt;/code&gt; 和 &lt;code&gt;leave&lt;/code&gt; 效果动起来。</target>
        </trans-unit>
        <trans-unit id="652ae66e59651bbad3fc4132547c5b43954a085e" translate="yes" xml:space="preserve">
          <source>Additionally, you can use its &lt;a href=&quot;%24anchorscroll#yOffset.html&quot;&gt;yOffset&lt;/a&gt; property to specify a vertical scroll-offset (either fixed or dynamic).</source>
          <target state="translated">此外，您可以使用其&lt;a href=&quot;%24anchorscroll#yOffset.html&quot;&gt;yOffset&lt;/a&gt;属性指定垂直滚动偏移量（固定或动态）。</target>
        </trans-unit>
        <trans-unit id="7b94dcd84fce535cb2ad08093b0e0a53afb78af9" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;required&lt;/code&gt; attribute and &lt;code&gt;required&lt;/code&gt; validation constraint to the element when the ngRequired expression evaluates to true. Use &lt;code&gt;ngRequired&lt;/code&gt; instead of &lt;code&gt;required&lt;/code&gt; when you want to data-bind to the &lt;code&gt;required&lt;/code&gt; attribute.</source>
          <target state="translated">当ngRequired表达式的值为true时，向元素添加 &lt;code&gt;required&lt;/code&gt; 属性和 &lt;code&gt;required&lt;/code&gt; 验证约束。使用 &lt;code&gt;ngRequired&lt;/code&gt; ，而不是 &lt;code&gt;required&lt;/code&gt; 时，要将数据绑定到 &lt;code&gt;required&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="662d0e8b0c96e71d3b79c9ae2fe8da8d5ea0749b" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;required&lt;/code&gt; validation error key if the value is not entered.</source>
          <target state="translated">Adds &lt;code&gt;required&lt;/code&gt; validation error key if the value is not entered.</target>
        </trans-unit>
        <trans-unit id="9e69d9b4b904de4d8853a3704d0f29a9f6bee390" translate="yes" xml:space="preserve">
          <source>Adds a new route definition to the &lt;code&gt;$route&lt;/code&gt; service.</source>
          <target state="translated">向 &lt;code&gt;$route&lt;/code&gt; 服务添加新的路由定义。</target>
        </trans-unit>
        <trans-unit id="59c0db8eda34b5ba002750f3013c112f07dba20a" translate="yes" xml:space="preserve">
          <source>Adds and removes the appropriate CSS class values to the element based on the difference between the new and old CSS class values (specified as newClasses and oldClasses).</source>
          <target state="translated">根据新旧CSS类值(指定为newClasses和oldClasses)之间的差异,为元素添加和删除适当的CSS类值。</target>
        </trans-unit>
        <trans-unit id="70ceb392ed0c1f4b5afec6718451ca7c7a9a3166" translate="yes" xml:space="preserve">
          <source>Adds required attribute and required validation constraint to the element when the ngRequired expression evaluates to true. Use ngRequired instead of required when you want to data-bind to the required attribute.</source>
          <target state="translated">当ngRequired表达式值为true时,向元素添加所需属性和所需验证约束。当你想将数据绑定到所需属性时,请使用ngRequired代替requirements。</target>
        </trans-unit>
        <trans-unit id="f110af3382ef95a8b0c07d1c94b21dc5bb62ac38" translate="yes" xml:space="preserve">
          <source>Adds the CSS class value specified by the classVal parameter to the element. If animations are enabled then an animation will be triggered for the class addition.</source>
          <target state="translated">将classVal参数指定的CSS类值添加到元素中。如果启用了动画,那么添加的类值会被触发动画。</target>
        </trans-unit>
        <trans-unit id="292c1947617a2554dd67a2e52cb2cdbd0ae73d9c" translate="yes" xml:space="preserve">
          <source>Advantages of Components:</source>
          <target state="translated">组件的优势。</target>
        </trans-unit>
        <trans-unit id="847093b1cdaeebf405b6651e84441c000a9a1757" translate="yes" xml:space="preserve">
          <source>After a watcher is registered with the scope, the &lt;code&gt;listener&lt;/code&gt; fn is called asynchronously (via &lt;a href=&quot;%24rootscope.scope#%24evalAsync.html&quot;&gt;$evalAsync&lt;/a&gt;) to initialize the watcher. In rare cases, this is undesirable because the listener is called when the result of &lt;code&gt;watchExpression&lt;/code&gt; didn't change. To detect this scenario within the &lt;code&gt;listener&lt;/code&gt; fn, you can compare the &lt;code&gt;newVal&lt;/code&gt; and &lt;code&gt;oldVal&lt;/code&gt;. If these two values are identical (&lt;code&gt;===&lt;/code&gt;) then the listener was called due to initialization.</source>
          <target state="translated">在范围内注册了监视程序之后，将异步调用 &lt;code&gt;listener&lt;/code&gt; fn（通过&lt;a href=&quot;%24rootscope.scope#%24evalAsync.html&quot;&gt;$ evalAsync&lt;/a&gt;）以初始化监视程序。在极少数情况下，这是不可取的，因为当 &lt;code&gt;watchExpression&lt;/code&gt; 的结果未更改时会调用侦听器。要在 &lt;code&gt;listener&lt;/code&gt; fn中检测到这种情况，可以比较 &lt;code&gt;newVal&lt;/code&gt; 和 &lt;code&gt;oldVal&lt;/code&gt; 。如果这两个值相同（ &lt;code&gt;===&lt;/code&gt; ），则由于初始化而调用了侦听器。</target>
        </trans-unit>
        <trans-unit id="6d837481cd1f8b253b815490aa92a842b47bafbe" translate="yes" xml:space="preserve">
          <source>After compilation:</source>
          <target state="translated">汇编后。</target>
        </trans-unit>
        <trans-unit id="714bd774e9df38ca603bcb1b8775b4dd02aa4f0c" translate="yes" xml:space="preserve">
          <source>After evaluating the expression, the &lt;code&gt;$apply&lt;/code&gt; method performs a &lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24digest.html&quot;&gt;&lt;code&gt;$digest&lt;/code&gt;&lt;/a&gt;. In the $digest phase the scope examines all of the &lt;code&gt;$watch&lt;/code&gt; expressions and compares them with the previous value. This dirty checking is done asynchronously. This means that assignment such as &lt;code&gt;$scope.username=&quot;angular&quot;&lt;/code&gt; will not immediately cause a &lt;code&gt;$watch&lt;/code&gt; to be notified, instead the &lt;code&gt;$watch&lt;/code&gt; notification is delayed until the &lt;code&gt;$digest&lt;/code&gt; phase. This delay is desirable, since it coalesces multiple model updates into one &lt;code&gt;$watch&lt;/code&gt; notification as well as guarantees that during the &lt;code&gt;$watch&lt;/code&gt; notification no other &lt;code&gt;$watch&lt;/code&gt;es are running. If a &lt;code&gt;$watch&lt;/code&gt; changes the value of the model, it will force additional &lt;code&gt;$digest&lt;/code&gt; cycle.</source>
          <target state="translated">计算表达式后， &lt;code&gt;$apply&lt;/code&gt; 方法执行&lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24digest.html&quot;&gt; &lt;code&gt;$digest&lt;/code&gt; &lt;/a&gt;。在$ digest阶段，范围将检查所有 &lt;code&gt;$watch&lt;/code&gt; 表达式并将它们与先前的值进行比较。这种脏检查是异步完成的。这意味着，分配诸如 &lt;code&gt;$scope.username=&quot;angular&quot;&lt;/code&gt; 将不会立即导致一个 &lt;code&gt;$watch&lt;/code&gt; 被通知，而不是 &lt;code&gt;$watch&lt;/code&gt; 通知被延迟，直到 &lt;code&gt;$digest&lt;/code&gt; 阶段。此延迟是可取的，因为它将多个模型更新合并到一个 &lt;code&gt;$watch&lt;/code&gt; 通知中，并保证在 &lt;code&gt;$watch&lt;/code&gt; 通知期间没有其他 &lt;code&gt;$watch&lt;/code&gt; es正在运行。如果 &lt;code&gt;$watch&lt;/code&gt; 更改了模型的值，则将强制执行附加的 &lt;code&gt;$digest&lt;/code&gt; 循环。</target>
        </trans-unit>
        <trans-unit id="0f6ac511eee4f8b67cef9c9c0f8eb0dbd8113bdd" translate="yes" xml:space="preserve">
          <source>After linking the view is not updated until after a call to $digest which typically is done by AngularJS automatically.</source>
          <target state="translated">在链接视图后,要等到调用$digest后才会更新,而$digest通常是由AngularJS自动完成的。</target>
        </trans-unit>
        <trans-unit id="9faaad4e241429762a959c088c6221ff8561ce1c" translate="yes" xml:space="preserve">
          <source>After linking the view is not updated until after a call to &lt;code&gt;$digest&lt;/code&gt;, which typically is done by AngularJS automatically.</source>
          <target state="translated">After linking the view is not updated until after a call to &lt;code&gt;$digest&lt;/code&gt; , which typically is done by AngularJS automatically.</target>
        </trans-unit>
        <trans-unit id="4b4c5b8a75d9c61cd56a5a198356ed3648ef2dcc" translate="yes" xml:space="preserve">
          <source>After that, the configuration blocks (&lt;a href=&quot;../api/ng/type/angular.module#config.html&quot;&gt;config&lt;/a&gt; functions) are executed. This means the configuration blocks of the required modules execute before the configuration blocks of any requiring module.</source>
          <target state="translated">之后，将执行配置块（&lt;a href=&quot;../api/ng/type/angular.module#config.html&quot;&gt;config&lt;/a&gt;函数）。这意味着所需模块的配置块在任何所需模块的配置块之前执行。</target>
        </trans-unit>
        <trans-unit id="d4c88341f5c5a27217b8f49b95476ac841a5d629" translate="yes" xml:space="preserve">
          <source>After the &lt;code&gt;$log&lt;/code&gt; service has been instantiated the decorator is fired. The decorator function has a &lt;code&gt;$delegate&lt;/code&gt; object injected to provide access to the service that matches the selector in the decorator. This &lt;code&gt;$delegate&lt;/code&gt; will be the service you are decorating. The return value of the function &lt;em&gt;provided to the decorator&lt;/em&gt; will take place of the service, directive, or filter being decorated.</source>
          <target state="translated">实例化 &lt;code&gt;$log&lt;/code&gt; 服务后，将触发装饰器。装饰器函数注入了 &lt;code&gt;$delegate&lt;/code&gt; 对象，以提供对与装饰器中的选择器匹配的服务的访问。这 &lt;code&gt;$delegate&lt;/code&gt; 将是您装修服务。&lt;em&gt;提供给装饰器&lt;/em&gt;的函数的返回值将代替被装饰的服务，指令或过滤器。</target>
        </trans-unit>
        <trans-unit id="cce55f18d89c3103fa1947be1b088e997277d8d3" translate="yes" xml:space="preserve">
          <source>After the &lt;code&gt;ngHide&lt;/code&gt; expression evaluates to a non truthy value and just before contents are set to visible.</source>
          <target state="translated">在 &lt;code&gt;ngHide&lt;/code&gt; 表达式的计算结果为非真实值之后，以及将内容设置为可见之前。</target>
        </trans-unit>
        <trans-unit id="e1ab027a6f7956cab176653dfbf6557bc5215022" translate="yes" xml:space="preserve">
          <source>After the &lt;code&gt;ngHide&lt;/code&gt; expression evaluates to a truthy value and just before the contents are set to hidden.</source>
          <target state="translated">在 &lt;code&gt;ngHide&lt;/code&gt; 表达式计算出真实值之后，而在将内容设置为隐藏之前。</target>
        </trans-unit>
        <trans-unit id="9d89921bca08cb6fce6a3bb709fa68541674e402" translate="yes" xml:space="preserve">
          <source>After the &lt;code&gt;ngShow&lt;/code&gt; expression evaluates to a non truthy value and just before the contents are set to hidden.</source>
          <target state="translated">在 &lt;code&gt;ngShow&lt;/code&gt; 表达式的计算结果为非真实值之后，而在将内容设置为隐藏之前。</target>
        </trans-unit>
        <trans-unit id="111f924f0a9aa3bf53d410fe9609866c67688702" translate="yes" xml:space="preserve">
          <source>After the &lt;code&gt;ngShow&lt;/code&gt; expression evaluates to a truthy value and just before contents are set to visible.</source>
          <target state="translated">在 &lt;code&gt;ngShow&lt;/code&gt; 表达式的计算结果为真实值之后，而在将内容设置为可见之前。</target>
        </trans-unit>
        <trans-unit id="4f48526b77c6460bb06d0ccd8371e34af473f98d" translate="yes" xml:space="preserve">
          <source>After the controller is instantiated, the initial values of the isolate scope bindings will be bound to the controller properties. You can access these bindings once they have been initialized by providing a controller method called &lt;code&gt;$onInit&lt;/code&gt;, which is called after all the controllers on an element have been constructed and had their bindings initialized.</source>
          <target state="translated">实例化控制器后，隔离范围绑定的初始值将绑定到控制器属性。一旦绑定被初始化，就可以通过提供一种称为 &lt;code&gt;$onInit&lt;/code&gt; 的控制器方法来访问这些绑定，该方法在构造元素上的所有控制器并初始化了它们的绑定之后调用。</target>
        </trans-unit>
        <trans-unit id="c607ef5c745b6810ea7c3c7628151983d81c150d" translate="yes" xml:space="preserve">
          <source>After the page and all of the code is loaded, find the root element of your AngularJS application, which is typically the root of the document.</source>
          <target state="translated">在页面和所有代码加载完毕后,找到你的AngularJS应用的根元素,通常是文档的根。</target>
        </trans-unit>
        <trans-unit id="9cbf70d065f21f96da19dec3004f6ea32dededec" translate="yes" xml:space="preserve">
          <source>After transclusion extraction</source>
          <target state="translated">萃取后</target>
        </trans-unit>
        <trans-unit id="ed0a35043da2cf495a2d6be468099e7a542faec9" translate="yes" xml:space="preserve">
          <source>After transclusion extraction:</source>
          <target state="translated">经过反萃提取。</target>
        </trans-unit>
        <trans-unit id="e285e9768c55f6517ffdb13c849b48bbb147341e" translate="yes" xml:space="preserve">
          <source>Afterwards, bootstrap your app with this new module.</source>
          <target state="translated">之后,用这个新模块来引导你的应用。</target>
        </trans-unit>
        <trans-unit id="fdc54aaa92409b498b3e55cfe625a5ae6919300c" translate="yes" xml:space="preserve">
          <source>Again, this binding is live, i.e. the DOM will be automatically updated whenever the result of the function changes. The button to pay the invoice uses the directive &lt;a href=&quot;../api/ng/directive/ngclick&quot;&gt;&lt;code&gt;ngClick&lt;/code&gt;&lt;/a&gt;. This will evaluate the corresponding expression whenever the button is clicked.</source>
          <target state="translated">同样，该绑定是实时的，即，只要函数的结果发生更改，DOM就会自动更新。支付发票的按钮使用指令&lt;a href=&quot;../api/ng/directive/ngclick&quot;&gt; &lt;code&gt;ngClick&lt;/code&gt; &lt;/a&gt;。每当单击按钮时，它将评估相应的表达式。</target>
        </trans-unit>
        <trans-unit id="79db2c9fda03e69529128dc503983397397f3639" translate="yes" xml:space="preserve">
          <source>Alias of &lt;a href=&quot;%24q#when.html&quot;&gt;when&lt;/a&gt; to maintain naming consistency with ES6.</source>
          <target state="translated">&lt;a href=&quot;%24q#when.html&quot;&gt;何时&lt;/a&gt;与ES6保持命名一致性的别名。</target>
        </trans-unit>
        <trans-unit id="d53b765cff1cd744d3fd72e862c814dcbde8f0ca" translate="yes" xml:space="preserve">
          <source>Alias: &lt;a href=&quot;ngform&quot;&gt;&lt;code&gt;ngForm&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">别名：&lt;a href=&quot;ngform&quot;&gt; &lt;code&gt;ngForm&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="982e50610ee1a463d2de619756fddf0b7506d21c" translate="yes" xml:space="preserve">
          <source>All 4 kinds of bindings (&lt;code&gt;@&lt;/code&gt;, &lt;code&gt;=&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, and &lt;code&gt;&amp;amp;&lt;/code&gt;) can be made optional by adding &lt;code&gt;?&lt;/code&gt; to the expression. The marker must come after the mode and before the attribute name. See the &lt;a href=&quot;https://code.angularjs.org/1.7.8/docs/api/ng/service/error/%24compile/iscp&quot;&gt;Invalid Isolate Scope Definition error&lt;/a&gt; for definition examples. This is useful to refine the interface directives provide. One subtle difference between optional and non-optional happens &lt;strong&gt;when the binding attribute is not set&lt;/strong&gt;:</source>
          <target state="translated">通过添加 &lt;code&gt;?&lt;/code&gt; 可以使所有4种绑定（ &lt;code&gt;@&lt;/code&gt; ， &lt;code&gt;=&lt;/code&gt; ， &lt;code&gt;&amp;lt;&lt;/code&gt; 和 &lt;code&gt;&amp;amp;&lt;/code&gt; ）成为可选的。表达。标记必须位于模式之后和属性名称之前。有关定义示例，请参见&lt;a href=&quot;https://code.angularjs.org/1.7.8/docs/api/ng/service/error/%24compile/iscp&quot;&gt;无效隔离范围定义错误&lt;/a&gt;。这对于改进提供的接口指令很有用。&lt;strong&gt;当未设置binding属性时，&lt;/strong&gt;可选和非可选之间存在细微的差别：</target>
        </trans-unit>
        <trans-unit id="24a20eff43d8a6f79ffe3d6809926de75d13e9fe" translate="yes" xml:space="preserve">
          <source>All 4 kinds of bindings (&lt;code&gt;@&lt;/code&gt;, &lt;code&gt;=&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, and &lt;code&gt;&amp;amp;&lt;/code&gt;) can be made optional by adding &lt;code&gt;?&lt;/code&gt; to the expression. The marker must come after the mode and before the attribute name. See the &lt;a href=&quot;https://code.angularjs.org/1.8.2/docs/api/ng/service/error/%24compile/iscp&quot;&gt;Invalid Isolate Scope Definition error&lt;/a&gt; for definition examples. This is useful to refine the interface directives provide. One subtle difference between optional and non-optional happens &lt;strong&gt;when the binding attribute is not set&lt;/strong&gt;:</source>
          <target state="translated">All 4 kinds of bindings ( &lt;code&gt;@&lt;/code&gt; , &lt;code&gt;=&lt;/code&gt; , &lt;code&gt;&amp;lt;&lt;/code&gt; , and &lt;code&gt;&amp;amp;&lt;/code&gt; ) can be made optional by adding &lt;code&gt;?&lt;/code&gt; to the expression. The marker must come after the mode and before the attribute name. See the &lt;a href=&quot;https://code.angularjs.org/1.8.2/docs/api/ng/service/error/%24compile/iscp&quot;&gt;Invalid Isolate Scope Definition error&lt;/a&gt; for definition examples. This is useful to refine the interface directives provide. One subtle difference between optional and non-optional happens &lt;strong&gt;when the binding attribute is not set&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="86d85c5a64cd00727842decd6d1b20b43012da09" translate="yes" xml:space="preserve">
          <source>All cookies</source>
          <target state="translated">所有饼干</target>
        </trans-unit>
        <trans-unit id="ec0b516f012da1a300f51233f3fc532b53f1545b" translate="yes" xml:space="preserve">
          <source>All different types of tracking functions, their syntax, and their support for duplicate items in collections can be found in the &lt;a href=&quot;ngrepeat#ngRepeat-arguments.html&quot;&gt;ngRepeat expression description&lt;/a&gt;.</source>
          <target state="translated">可以在&lt;a href=&quot;ngrepeat#ngRepeat-arguments.html&quot;&gt;ngRepeat表达式说明中&lt;/a&gt;找到所有不同类型的跟踪功能，其语法以及对集合中重复项的支持。</target>
        </trans-unit>
        <trans-unit id="e3159c7682fd037fbbeed77e34c757d4c52e444c" translate="yes" xml:space="preserve">
          <source>All directives and components must use the standard &lt;code&gt;{{&lt;/code&gt;&lt;code&gt;}}&lt;/code&gt; interpolation symbols in their templates. If you change the application interpolation symbols the &lt;a href=&quot;%24compile&quot;&gt;&lt;code&gt;$compile&lt;/code&gt;&lt;/a&gt; service will attempt to denormalize the standard symbols to the custom symbols. The denormalization process is not clever enough to know not to replace instances of the standard symbols where they would not normally be treated as interpolation symbols. For example in the following code snippet the closing braces of the literal object will get incorrectly denormalized:</source>
          <target state="translated">所有指令和组件必须在其模板中使用标准 &lt;code&gt;{{&lt;/code&gt; &lt;code&gt;}}&lt;/code&gt; 插补符号。如果更改应用程序插值符号，则&lt;a href=&quot;%24compile&quot;&gt; &lt;code&gt;$compile&lt;/code&gt; &lt;/a&gt;服务将尝试将标准符号标准化为自定义符号。去规范化过程不够聪明，以至于不知道在正常情况下不会替换标准符号实例的情况下不替换它们。例如，在下面的代码片段中，文字对象的右括号将被错误地反规范化：</target>
        </trans-unit>
        <trans-unit id="2bdb3d3484c5f6ff45a3aa2942e714a0e193ce8d" translate="yes" xml:space="preserve">
          <source>All inputs controlled by &lt;a href=&quot;../directive/ngmodel&quot;&gt;ngModel&lt;/a&gt; (including those of type &lt;code&gt;radio&lt;/code&gt;) will use the value of their &lt;code&gt;name&lt;/code&gt; attribute to determine the property under which their &lt;a href=&quot;../type/ngmodel.ngmodelcontroller&quot;&gt;NgModelController&lt;/a&gt; will be published on the parent &lt;a href=&quot;../type/form.formcontroller&quot;&gt;FormController&lt;/a&gt;. Thus, if you use the same &lt;code&gt;name&lt;/code&gt; for multiple inputs of a form (e.g. a group of radio inputs), only &lt;em&gt;one&lt;/em&gt;&lt;code&gt;NgModelController&lt;/code&gt; will be published on the parent &lt;code&gt;FormController&lt;/code&gt; under that name. The rest of the controllers will continue to work as expected, but you won't be able to access them as properties on the parent &lt;code&gt;FormController&lt;/code&gt;.</source>
          <target state="translated">All inputs controlled by &lt;a href=&quot;../directive/ngmodel&quot;&gt;ngModel&lt;/a&gt; (including those of type &lt;code&gt;radio&lt;/code&gt; ) will use the value of their &lt;code&gt;name&lt;/code&gt; attribute to determine the property under which their &lt;a href=&quot;../type/ngmodel.ngmodelcontroller&quot;&gt;NgModelController&lt;/a&gt; will be published on the parent &lt;a href=&quot;../type/form.formcontroller&quot;&gt;FormController&lt;/a&gt;. Thus, if you use the same &lt;code&gt;name&lt;/code&gt; for multiple inputs of a form (e.g. a group of radio inputs), only &lt;em&gt;one&lt;/em&gt; &lt;code&gt;NgModelController&lt;/code&gt; will be published on the parent &lt;code&gt;FormController&lt;/code&gt; under that name. The rest of the controllers will continue to work as expected, but you won't be able to access them as properties on the parent &lt;code&gt;FormController&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="73501beef5e8878433719d4f65aeedc3d1bb85c4" translate="yes" xml:space="preserve">
          <source>All items are passed through the predicate (or predicates), and the returned values are saved along with their type (&lt;code&gt;string&lt;/code&gt;, &lt;code&gt;number&lt;/code&gt; etc). For example, an item &lt;code&gt;{label: 'foo'}&lt;/code&gt;, passed through a predicate that extracts the value of the &lt;code&gt;label&lt;/code&gt; property, would be transformed to:</source>
          <target state="translated">所有项目都通过谓词（或多个谓词）传递，并且返回的值及其类型（ &lt;code&gt;string&lt;/code&gt; ， &lt;code&gt;number&lt;/code&gt; 等）一起保存。例如，一个项目 &lt;code&gt;{label: 'foo'}&lt;/code&gt; 通过谓词传递，即提取的值 &lt;code&gt;label&lt;/code&gt; 属性，会被变换为：</target>
        </trans-unit>
        <trans-unit id="a25aaffbef3857cd123066d794fffb0b8d68aa35" translate="yes" xml:space="preserve">
          <source>All localizable AngularJS components depend on locale-specific rule sets managed by the &lt;a href=&quot;../api/ng/service/%24locale&quot;&gt;&lt;code&gt;$locale&lt;/code&gt; service&lt;/a&gt;.</source>
          <target state="translated">所有可本地化的AngularJS组件都取决于&lt;a href=&quot;../api/ng/service/%24locale&quot;&gt; &lt;code&gt;$locale&lt;/code&gt; 服务&lt;/a&gt;管理的特定于语言环境的规则集。</target>
        </trans-unit>
        <trans-unit id="6a47817fa29a225834088f98ddaf9bf379a62572" translate="yes" xml:space="preserve">
          <source>All of the setter methods return the same &lt;code&gt;$location&lt;/code&gt; object to allow chaining. For example, to change multiple segments in one go, chain setters like this:</source>
          <target state="translated">所有的setter方法都返回相同的 &lt;code&gt;$location&lt;/code&gt; 对象以允许链接。例如，要一次性更改多个细分，请使用如下链设置器：</target>
        </trans-unit>
        <trans-unit id="e5665273a60bfa82bedc39a2b20426fbbdbe35b2" translate="yes" xml:space="preserve">
          <source>All of this compilation takes place in the web browser; no server side or pre-compilation step is involved.</source>
          <target state="translated">所有这些编译都是在网络浏览器中进行的,不涉及服务器端或预编译步骤。</target>
        </trans-unit>
        <trans-unit id="2bb32db6893580bdfa7e771a49c32315a6221726" translate="yes" xml:space="preserve">
          <source>All parameters can be changed dynamically. The next example shows how you can make the columns of a table sortable, by binding the &lt;code&gt;expression&lt;/code&gt; and &lt;code&gt;reverse&lt;/code&gt; parameters to scope properties.</source>
          <target state="translated">所有参数均可动态更改。下一个示例说明如何通过将 &lt;code&gt;expression&lt;/code&gt; 和 &lt;code&gt;reverse&lt;/code&gt; 参数绑定到作用域属性来使表的列可排序。</target>
        </trans-unit>
        <trans-unit id="15074bf6692ab4d76bbae6a637a1292c7beea479" translate="yes" xml:space="preserve">
          <source>All special purpose objects except for the Controller are defined via Factory recipes.</source>
          <target state="translated">除控制器外,所有特殊用途的对象都是通过工厂配方定义的。</target>
        </trans-unit>
        <trans-unit id="2cad0a05b7bc6c8be5db0377e3f07206383a266c" translate="yes" xml:space="preserve">
          <source>All that is going on here with ngShow/ngHide behind the scenes is the &lt;code&gt;.ng-hide&lt;/code&gt; class is added/removed (when the hidden state is valid). Since ngShow and ngHide are animation aware then we can match up a transition and ngAnimate handles the rest.</source>
          <target state="translated">ngShow / ngHide在后台进行的 &lt;code&gt;.ng-hide&lt;/code&gt; 都是添加/删除了.ng-hide类（当隐藏状态有效时）。由于ngShow和ngHide具有动画意识，因此我们可以匹配一个过渡，而ngAnimate则处理其余部分。</target>
        </trans-unit>
        <trans-unit id="8e830154a70aba6c6c2d76c09999e74a8801b263" translate="yes" xml:space="preserve">
          <source>All values that are passed to &lt;code&gt;$location&lt;/code&gt; setter methods, &lt;code&gt;path()&lt;/code&gt;, &lt;code&gt;search()&lt;/code&gt;, &lt;code&gt;hash()&lt;/code&gt;, are encoded.</source>
          <target state="translated">传递给 &lt;code&gt;$location&lt;/code&gt; setter方法的所有值 &lt;code&gt;path()&lt;/code&gt; ， &lt;code&gt;search()&lt;/code&gt; ， &lt;code&gt;hash()&lt;/code&gt; 都经过编码。</target>
        </trans-unit>
        <trans-unit id="ee866773b32bc215a390a39a4f20f9a341baa022" translate="yes" xml:space="preserve">
          <source>Allows defining the set of characters that are allowed in AngularJS expressions. The function &lt;code&gt;identifierStart&lt;/code&gt; will get called to know if a given character is a valid character to be the first character for an identifier. The function &lt;code&gt;identifierContinue&lt;/code&gt; will get called to know if a given character is a valid character to be a follow-up identifier character. The functions &lt;code&gt;identifierStart&lt;/code&gt; and &lt;code&gt;identifierContinue&lt;/code&gt; will receive as arguments the single character to be identifier and the character code point. These arguments will be &lt;code&gt;string&lt;/code&gt; and &lt;code&gt;numeric&lt;/code&gt;. Keep in mind that the &lt;code&gt;string&lt;/code&gt; parameter can be two characters long depending on the character representation. It is expected for the function to return &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, whether that character is allowed or not.</source>
          <target state="translated">允许定义AngularJS表达式中允许的字符集。将调用函数 &lt;code&gt;identifierStart&lt;/code&gt; 来知道给定字符是否是有效字符，以作为标识符的第一个字符。将调用函数 &lt;code&gt;identifierContinue&lt;/code&gt; 来了解给定字符是否为有效字符，以作为后续标识符字符。函数 &lt;code&gt;identifierStart&lt;/code&gt; 和 &lt;code&gt;identifierContinue&lt;/code&gt; 将作为参数的唯一字符和字符代码点作为参数接收。这些参数将是 &lt;code&gt;string&lt;/code&gt; 和 &lt;code&gt;numeric&lt;/code&gt; 。请记住， &lt;code&gt;string&lt;/code&gt; 参数可以是两个字符长，具体取决于字符表示形式。无论是否允许该字符，函数都应返回 &lt;code&gt;true&lt;/code&gt; 或 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5a0dfc44a8bb5647973347c240aca24c18c76b6e" translate="yes" xml:space="preserve">
          <source>Allows multiple options to be selected. The selected values will be bound to the model as an array.</source>
          <target state="translated">允许选择多个选项。选定的值将以数组形式绑定到模型上。</target>
        </trans-unit>
        <trans-unit id="6893f81d9274e77bed184d8c69170d4bd9bc82d3" translate="yes" xml:space="preserve">
          <source>Allows the user to query if the particular service exists.</source>
          <target state="translated">允许用户查询该服务是否存在。</target>
        </trans-unit>
        <trans-unit id="c700927994271f378f5571025a478be8044ec069" translate="yes" xml:space="preserve">
          <source>Allows you to convert a JavaScript object into JSON string.</source>
          <target state="translated">允许你将一个JavaScript对象转换成JSON字符串。</target>
        </trans-unit>
        <trans-unit id="8d2ed1f71a67126f9d5f6f5fb8ead5d97d9e1cdd" translate="yes" xml:space="preserve">
          <source>Also there is special case for Moz prefix starting with upper case letter.</source>
          <target state="translated">另外,Moz的前缀有大写字母开头的特殊情况。</target>
        </trans-unit>
        <trans-unit id="ef2bcb812e9ddd641d60f5e796d9a28cdbad4e2c" translate="yes" xml:space="preserve">
          <source>Also, &lt;code&gt;ngIf&lt;/code&gt; recreates elements using their compiled state. An example of this behavior is if an element's class attribute is directly modified after it's compiled, using something like jQuery's &lt;code&gt;.addClass()&lt;/code&gt; method, and the element is later removed. When &lt;code&gt;ngIf&lt;/code&gt; recreates the element the added class will be lost because the original compiled state is used to regenerate the element.</source>
          <target state="translated">同样， &lt;code&gt;ngIf&lt;/code&gt; 使用其已编译状态重新创建元素。此行为的一个示例是，如果元素的class属性在编译后使用jQuery的 &lt;code&gt;.addClass()&lt;/code&gt; 方法直接修改，然后将该元素删除。当 &lt;code&gt;ngIf&lt;/code&gt; 重新创建元素时，添加的类将丢失，因为原始的编译状态用于重新生成元素。</target>
        </trans-unit>
        <trans-unit id="cae8ad452ed52b4364f25ab05ff05e650916df18" translate="yes" xml:space="preserve">
          <source>Alternative &lt;a href=&quot;%24http&quot;&gt;&lt;code&gt;$http&lt;/code&gt;&lt;/a&gt; params serializer that follows jQuery's &lt;a href=&quot;http://api.jquery.com/jquery.param/&quot;&gt;&lt;code&gt;param()&lt;/code&gt;&lt;/a&gt; method logic. The serializer will also sort the params alphabetically.</source>
          <target state="translated">遵循jQuery &lt;a href=&quot;http://api.jquery.com/jquery.param/&quot;&gt; &lt;code&gt;param()&lt;/code&gt; &lt;/a&gt;方法逻辑的替代&lt;a href=&quot;%24http&quot;&gt; &lt;code&gt;$http&lt;/code&gt; &lt;/a&gt; params序列化程序。序列化程序还将按字母顺序对参数进行排序。</target>
        </trans-unit>
        <trans-unit id="7cd890a8044b9b586873b8ac1a1b8c16c0dc844a" translate="yes" xml:space="preserve">
          <source>Alternative &lt;a href=&quot;%24http&quot;&gt;&lt;code&gt;$http&lt;/code&gt;&lt;/a&gt; params serializer that follows jQuery's &lt;a href=&quot;https://api.jquery.com/jquery.param/&quot;&gt;&lt;code&gt;param()&lt;/code&gt;&lt;/a&gt; method logic. The serializer will also sort the params alphabetically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1986d05c6408cc68f17db3c47392a453a7bfa1f3" translate="yes" xml:space="preserve">
          <source>Alternative &lt;a href=&quot;service/%24http&quot;&gt;&lt;code&gt;$http&lt;/code&gt;&lt;/a&gt; params serializer that follows jQuery's &lt;a href=&quot;http://api.jquery.com/jquery.param/&quot;&gt;&lt;code&gt;param()&lt;/code&gt;&lt;/a&gt; method logic. The serializer will also sort the params alphabetically.</source>
          <target state="translated">遵循jQuery &lt;a href=&quot;http://api.jquery.com/jquery.param/&quot;&gt; &lt;code&gt;param()&lt;/code&gt; &lt;/a&gt;方法逻辑的替代&lt;a href=&quot;service/%24http&quot;&gt; &lt;code&gt;$http&lt;/code&gt; &lt;/a&gt; params序列化程序。序列化程序还将按字母顺序对参数进行排序。</target>
        </trans-unit>
        <trans-unit id="642a4630b3a0fa938edfdfacea5c8b4a58ceb47c" translate="yes" xml:space="preserve">
          <source>Alternative &lt;a href=&quot;service/%24http&quot;&gt;&lt;code&gt;$http&lt;/code&gt;&lt;/a&gt; params serializer that follows jQuery's &lt;a href=&quot;https://api.jquery.com/jquery.param/&quot;&gt;&lt;code&gt;param()&lt;/code&gt;&lt;/a&gt; method logic. The serializer will also sort the params alphabetically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e831c9cda5cf6bfb0807f5344ad0dc49c8046ab" translate="yes" xml:space="preserve">
          <source>Although AngularJS makes i18n convenient, there are several things you need to be conscious of as you develop your app.</source>
          <target state="translated">虽然AngularJS让i18n变得很方便,但是在开发应用的过程中,你需要注意几件事。</target>
        </trans-unit>
        <trans-unit id="cc361285cac50472d68caba2b407d041dcf954eb" translate="yes" xml:space="preserve">
          <source>Although the CSS is a little different than what we saw before, the idea is the same.</source>
          <target state="translated">虽然CSS与我们之前看到的有些不同,但思路是一样的。</target>
        </trans-unit>
        <trans-unit id="1d3f0a93f4e12755f9ed54ee382ddaf25896e70f" translate="yes" xml:space="preserve">
          <source>Although there are many ways to test a Controller, one of the best conventions, shown below, involves injecting the &lt;a href=&quot;../api/ng/service/%24rootscope&quot;&gt;$rootScope&lt;/a&gt; and &lt;a href=&quot;../api/ng/service/%24controller&quot;&gt;$controller&lt;/a&gt;:</source>
          <target state="translated">尽管测试控制器的方法有很多，但如下所示的最佳约定之一是注入&lt;a href=&quot;../api/ng/service/%24rootscope&quot;&gt;$ rootScope&lt;/a&gt;和&lt;a href=&quot;../api/ng/service/%24controller&quot;&gt;$ controller&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="664ea04f360cf50ee3034fb79c72bfc990a51803" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Array.&amp;lt;DirectiveObject&amp;gt;&lt;/code&gt;&lt;sub&gt;&lt;a href=&quot;decorators#drtvArray.html&quot;&gt;1&lt;/a&gt;&lt;/sub&gt;</source>
          <target state="translated">一个 &lt;code&gt;Array.&amp;lt;DirectiveObject&amp;gt;&lt;/code&gt; &lt;sub&gt;&lt;a href=&quot;decorators#drtvArray.html&quot;&gt;1&lt;/a&gt;&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="72132aa9016db41ce813e2e986f465c21ae9978a" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;integer&lt;/code&gt; directive that validates whether the input is a valid integer. For example, &lt;code&gt;1.23&lt;/code&gt; is an invalid value, since it contains a fraction. Note that we validate the viewValue (the string value of the control), and not the modelValue. This is because input[number] converts the viewValue to a number when running the &lt;code&gt;$parsers&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;integer&lt;/code&gt; 指令，用于验证输入是否为有效整数。例如， &lt;code&gt;1.23&lt;/code&gt; 是无效值，因为它包含一个分数。请注意，我们验证viewValue（控件的字符串值），而不验证modelValue。这是因为在运行 &lt;code&gt;$parsers&lt;/code&gt; 时，input [number]会将viewValue转换为数字。</target>
        </trans-unit>
        <trans-unit id="7c21d96b949c9521f03fc61f9044eaf72551b8b6" translate="yes" xml:space="preserve">
          <source>An AngularJS &lt;strong&gt;service&lt;/strong&gt; is a singleton object created by a &lt;strong&gt;service factory&lt;/strong&gt;. These &lt;strong&gt;service factories&lt;/strong&gt; are functions which, in turn, are created by a &lt;strong&gt;service provider&lt;/strong&gt;. The &lt;strong&gt;service providers&lt;/strong&gt; are constructor functions. When instantiated they must contain a property called &lt;code&gt;$get&lt;/code&gt;, which holds the &lt;strong&gt;service factory&lt;/strong&gt; function.</source>
          <target state="translated">AngularJS &lt;strong&gt;服务&lt;/strong&gt;是由&lt;strong&gt;服务工厂&lt;/strong&gt;创建的单例对象。这些&lt;strong&gt;服务工厂&lt;/strong&gt;是由&lt;strong&gt;服务提供商&lt;/strong&gt;创建的功能。该&lt;strong&gt;服务提供商&lt;/strong&gt;是构造函数。实例化后，它们必须包含一个名为 &lt;code&gt;$get&lt;/code&gt; 的属性，该属性包含&lt;strong&gt;服务工厂&lt;/strong&gt;功能。</target>
        </trans-unit>
        <trans-unit id="5f5e902fbb09480c376fa0194b1e609ced186aa3" translate="yes" xml:space="preserve">
          <source>An AngularJS expression to be executed.</source>
          <target state="translated">一个要执行的AngularJS表达式。</target>
        </trans-unit>
        <trans-unit id="b37bf8f17fc0e4cf752fc858258841e0042e4bb7" translate="yes" xml:space="preserve">
          <source>An Example of &quot;Compile&quot; Versus &quot;Link&quot;</source>
          <target state="translated">&quot;编译 &quot;与 &quot;链接 &quot;的例子</target>
        </trans-unit>
        <trans-unit id="9ef9cd2a9880a76f773b11fee32868da9ed975cc" translate="yes" xml:space="preserve">
          <source>An alternative solution to this problem would be using the &lt;a href=&quot;ngcloak&quot;&gt;ngCloak&lt;/a&gt; directive.</source>
          <target state="translated">解决此问题的另一种方法是使用&lt;a href=&quot;ngcloak&quot;&gt;ngCloak&lt;/a&gt;指令。</target>
        </trans-unit>
        <trans-unit id="7e680432122c70e32424dcdf0fd61139308710c4" translate="yes" xml:space="preserve">
          <source>An animation runner returned by an $animate function.</source>
          <target state="translated">一个由$animate函数返回的动画运行器。</target>
        </trans-unit>
        <trans-unit id="7056c57ecc4a5b129adb248caf351bdeae7d09c4" translate="yes" xml:space="preserve">
          <source>An array or hash of promises.</source>
          <target state="translated">承诺的数组或哈希。</target>
        </trans-unit>
        <trans-unit id="438126d6254d3420fb8b54716dd74b0c0c91bd27" translate="yes" xml:space="preserve">
          <source>An example of interpolation is shown below:</source>
          <target state="translated">下面是一个插值的例子。</target>
        </trans-unit>
        <trans-unit id="25266bc9e38243de1cfb398019dfc315000d1f50" translate="yes" xml:space="preserve">
          <source>An example on how to implement animations using &lt;code&gt;ngClassEven&lt;/code&gt;:</source>
          <target state="translated">有关如何使用 &lt;code&gt;ngClassEven&lt;/code&gt; 实现动画的示例：</target>
        </trans-unit>
        <trans-unit id="255badf5f975c2e6c577cd02fbbd0dd9ce5fa56a" translate="yes" xml:space="preserve">
          <source>An example on how to implement animations using &lt;code&gt;ngClassOdd&lt;/code&gt;:</source>
          <target state="translated">有关如何使用 &lt;code&gt;ngClassOdd&lt;/code&gt; 实现动画的示例：</target>
        </trans-unit>
        <trans-unit id="62dc53f9c709ad888e01b1a59fcc76fe0155aa4c" translate="yes" xml:space="preserve">
          <source>An expression can be optionally prefixed with &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt; to control the sorting direction, ascending or descending. For example, &lt;code&gt;'+label'&lt;/code&gt; or &lt;code&gt;'-label'&lt;/code&gt;. If no property is provided, (e.g. &lt;code&gt;'+'&lt;/code&gt; or &lt;code&gt;'-'&lt;/code&gt;), the collection element itself is used in comparisons.</source>
          <target state="translated">表达式可以选择以 &lt;code&gt;+&lt;/code&gt; 或 &lt;code&gt;-&lt;/code&gt; 为前缀，以控制排序方向（升序或降序）。例如， &lt;code&gt;'+label'&lt;/code&gt; 或 &lt;code&gt;'-label'&lt;/code&gt; 。如果未提供任何属性（例如 &lt;code&gt;'+'&lt;/code&gt; 或 &lt;code&gt;'-'&lt;/code&gt; ），则将collection元素本身用于比较。</target>
        </trans-unit>
        <trans-unit id="3f036173d46ad7b878cf3296d2b2dac5c0eb15db" translate="yes" xml:space="preserve">
          <source>An expression that starts with &lt;code&gt;::&lt;/code&gt; is considered a one-time expression. One-time expressions will stop recalculating once they are stable, which happens after the first digest if the expression result is a non-undefined value (see value stabilization algorithm below).</source>
          <target state="translated">以 &lt;code&gt;::&lt;/code&gt; 开头的表达式被视为一次性表达式。一次性表达式一旦稳定就将停止重新计算，如果表达式结果为非不确定值，则在第一次摘要后发生（请参阅下面的值稳定算法）。</target>
        </trans-unit>
        <trans-unit id="1377c3d192d7bf8b19b573abc270573ee59d7ec8" translate="yes" xml:space="preserve">
          <source>An injectable class (constructor function) that will be instantiated.</source>
          <target state="translated">一个将被实例化的可注入类(构造函数)。</target>
        </trans-unit>
        <trans-unit id="a9b6840dea47811dc05aae5027aa0a40ccd033fa" translate="yes" xml:space="preserve">
          <source>An injectable directive factory function. See the &lt;a href=&quot;../../../guide/directive&quot;&gt;directive guide&lt;/a&gt; and the &lt;a href=&quot;../service/%24compile&quot;&gt;compile API&lt;/a&gt; for more info.</source>
          <target state="translated">可注入指令工厂功能。有关更多信息，请参见&lt;a href=&quot;../../../guide/directive&quot;&gt;指令指南&lt;/a&gt;和&lt;a href=&quot;../service/%24compile&quot;&gt;compile API&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6a2c035f4bab2a6ca81a26cf1561e460c12d7af3" translate="yes" xml:space="preserve">
          <source>An object hash with all failing validator ids as keys.</source>
          <target state="translated">一个以所有失败的验证器id为键的对象哈希。</target>
        </trans-unit>
        <trans-unit id="7481e3cf882547d1cafefe1993d08399c2f33260" translate="yes" xml:space="preserve">
          <source>An object hash with all pending validator ids as keys.</source>
          <target state="translated">一个以所有待验证器ID为键的对象哈希。</target>
        </trans-unit>
        <trans-unit id="f2cf8cfd906e9099c3100166fe9e3fd7080b9f49" translate="yes" xml:space="preserve">
          <source>An object hash, containing references to controls or forms with failing validators, where:</source>
          <target state="translated">一个对象哈希,包含对验证器失效的控件或表单的引用,其中:</target>
        </trans-unit>
        <trans-unit id="b4699c85185b56a805c395192bbb329ac54ca51f" translate="yes" xml:space="preserve">
          <source>An object hash, containing references to controls or forms with pending validators, where:</source>
          <target state="translated">一个对象哈希,包含对具有待验证器的控件或表格的引用,其中:</target>
        </trans-unit>
        <trans-unit id="e28988a5accfd6915ed9bed343b184db496ecd37" translate="yes" xml:space="preserve">
          <source>An object that contains information about the current AngularJS version.</source>
          <target state="translated">一个包含当前AngularJS版本信息的对象。</target>
        </trans-unit>
        <trans-unit id="174ed948b808866039efe36a930b9f1ce4822c05" translate="yes" xml:space="preserve">
          <source>An optional object which contains additional event data that is used when creating the event:</source>
          <target state="translated">一个可选对象,包含创建事件时使用的附加事件数据。</target>
        </trans-unit>
        <trans-unit id="fc3637df868e602451404b5f647130a18cca9153" translate="yes" xml:space="preserve">
          <source>An optional string to provide the origin of the function call for error messages.</source>
          <target state="translated">一个可选的字符串,用于提供错误信息的函数调用的来源。</target>
        </trans-unit>
        <trans-unit id="890f2279934dc8a6b8499be1df29aafd89f69b59" translate="yes" xml:space="preserve">
          <source>Anchoring Demo</source>
          <target state="translated">锚定演示</target>
        </trans-unit>
        <trans-unit id="326eb1ddaaabb3b6d3a467b41d5832d75f3ed666" translate="yes" xml:space="preserve">
          <source>And &lt;code&gt;$animateCss&lt;/code&gt; will figure out the rest. Just make sure to have the &lt;code&gt;done()&lt;/code&gt; callback fire the &lt;code&gt;doneFn&lt;/code&gt; function to signal when the animation is over.</source>
          <target state="translated">和 &lt;code&gt;$animateCss&lt;/code&gt; 会找出休息。只要确保让 &lt;code&gt;done()&lt;/code&gt; 回调触发了 &lt;code&gt;doneFn&lt;/code&gt; 函数即可在动画结束时发出信号。</target>
        </trans-unit>
        <trans-unit id="d4e0c6972a0d5d288dd0cd636689c2317a6bcbb1" translate="yes" xml:space="preserve">
          <source>And an application level module which depends on the above modules and contains any initialization code.</source>
          <target state="translated">以及一个应用层模块,它依赖于上述模块并包含任何初始化代码。</target>
        </trans-unit>
        <trans-unit id="66d5e630fa1d9e7e00b2527efa6f276e0610f85b" translate="yes" xml:space="preserve">
          <source>And since Constant recipe makes the value also available at runtime just like the Value recipe, we can also use it in our controller and template:</source>
          <target state="translated">而且由于Constant recipe使得值也像Value recipe一样在运行时可用,我们也可以在控制器和模板中使用它。</target>
        </trans-unit>
        <trans-unit id="2ae7dabd4284493793044636058e6d4510506040" translate="yes" xml:space="preserve">
          <source>And the following &lt;code&gt;&amp;lt;person&amp;gt;&lt;/code&gt; element &lt;strong&gt;matches&lt;/strong&gt; the &lt;code&gt;person&lt;/code&gt; directive:</source>
          <target state="translated">而下面的 &lt;code&gt;&amp;lt;person&amp;gt;&lt;/code&gt; 元素&lt;strong&gt;相匹配&lt;/strong&gt;的 &lt;code&gt;person&lt;/code&gt; 指令：</target>
        </trans-unit>
        <trans-unit id="e074b907bd18b60b4c8b9d046fe304e0a1334c25" translate="yes" xml:space="preserve">
          <source>And then each individual test is defined within a call to the &lt;code&gt;it&lt;/code&gt; function:</source>
          <target state="translated">然后在对 &lt;code&gt;it&lt;/code&gt; 函数的调用中定义每个测试：</target>
        </trans-unit>
        <trans-unit id="bcab3a39fd9e6cc3ee88ad70caa5024094be413f" translate="yes" xml:space="preserve">
          <source>And this is how you would display it via AngularJS's data-binding:</source>
          <target state="translated">而这是你通过AngularJS的数据绑定来显示的方式。</target>
        </trans-unit>
        <trans-unit id="12546996946dd46b31df4b813318ccd8f12a4142" translate="yes" xml:space="preserve">
          <source>And with an input of &lt;code&gt;['A','B']&lt;/code&gt; for the items variable in the example above, the output will evaluate to:</source>
          <target state="translated">在上面的示例中，使用item变量的 &lt;code&gt;['A','B']&lt;/code&gt; 输入，输出结果将为：</target>
        </trans-unit>
        <trans-unit id="7be54da4aeef061feb2dd88f21e1e293d3e62c45" translate="yes" xml:space="preserve">
          <source>Angular.js</source>
          <target state="translated">Angular.js</target>
        </trans-unit>
        <trans-unit id="13791425bfb26b4e4a5449e290a7555a8da39a41" translate="yes" xml:space="preserve">
          <source>AngularFire</source>
          <target state="translated">AngularFire</target>
        </trans-unit>
        <trans-unit id="ab3119bf73d8058434a4147335dfd43554aec933" translate="yes" xml:space="preserve">
          <source>AngularJS  Tag</source>
          <target state="translated">AngularJS标签</target>
        </trans-unit>
        <trans-unit id="3f0faae0118505f14f548205980339e05517f7b2" translate="yes" xml:space="preserve">
          <source>AngularJS 1.4 and higher has taken steps to make the amalgamation of CSS and JS animations more flexible. However, unlike earlier versions of AngularJS, defining CSS and JS animations to work off of the same CSS class will not work anymore. Therefore the example below will only result in &lt;strong&gt;JS animations taking charge of the animation&lt;/strong&gt;:</source>
          <target state="translated">AngularJS 1.4及更高版本已采取措施使CSS和JS动画的合并更加灵活。但是，与AngularJS的早期版本不同，定义CSS和JS动画以在同一个CSS类上工作将不再起作用。因此，以下示例将仅导致&lt;strong&gt;JS动画负责该动画&lt;/strong&gt;：</target>
        </trans-unit>
        <trans-unit id="0991984fb2b8a5470a91fe03e8798b2bb70f6d5d" translate="yes" xml:space="preserve">
          <source>AngularJS &lt;a href=&quot;../type/%24rootscope.scope&quot;&gt;scopes&lt;/a&gt;;</source>
          <target state="translated">AngularJS &lt;a href=&quot;../type/%24rootscope.scope&quot;&gt;范围&lt;/a&gt; ;</target>
        </trans-unit>
        <trans-unit id="7cf4e203d1f24008eb58eb8fa122f0e7859f0b96" translate="yes" xml:space="preserve">
          <source>AngularJS &lt;strong&gt;normalizes&lt;/strong&gt; an element's tag and attribute name to determine which elements match which directives. We typically refer to directives by their case-sensitive &lt;a href=&quot;http://en.wikipedia.org/wiki/CamelCase&quot;&gt;camelCase&lt;/a&gt;&lt;strong&gt;normalized&lt;/strong&gt; name (e.g. &lt;code&gt;ngModel&lt;/code&gt;). However, since HTML is case-insensitive, we refer to directives in the DOM by lower-case forms, typically using &lt;a href=&quot;https://en.wikipedia.org/wiki/Letter_case#Special_case_styles&quot;&gt;dash-delimited&lt;/a&gt; attributes on DOM elements (e.g. &lt;code&gt;ng-model&lt;/code&gt;).</source>
          <target state="translated">AngularJS &lt;strong&gt;规范化&lt;/strong&gt;元素的标记和属性名称，以确定哪些元素与哪些指令匹配。我们通常通过区分大小写的&lt;a href=&quot;http://en.wikipedia.org/wiki/CamelCase&quot;&gt;camelCase &lt;/a&gt;&lt;strong&gt;规范化&lt;/strong&gt;名称（例如 &lt;code&gt;ngModel&lt;/code&gt; ）来引用指令。但是，由于HTML不区分大小写，因此我们以小写形式引用DOM中的指令，通常在DOM元素（例如 &lt;code&gt;ng-model&lt;/code&gt; ）上使用&lt;a href=&quot;https://en.wikipedia.org/wiki/Letter_case#Special_case_styles&quot;&gt;破折号分隔的&lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="8287559f1a2b5acb873956724f65bd59e38fd39c" translate="yes" xml:space="preserve">
          <source>AngularJS &lt;strong&gt;normalizes&lt;/strong&gt; an element's tag and attribute name to determine which elements match which directives. We typically refer to directives by their case-sensitive &lt;a href=&quot;https://en.wikipedia.org/wiki/CamelCase&quot;&gt;camelCase&lt;/a&gt;&lt;strong&gt;normalized&lt;/strong&gt; name (e.g. &lt;code&gt;ngModel&lt;/code&gt;). However, since HTML is case-insensitive, we refer to directives in the DOM by lower-case forms, typically using &lt;a href=&quot;https://en.wikipedia.org/wiki/Letter_case#Special_case_styles&quot;&gt;dash-delimited&lt;/a&gt; attributes on DOM elements (e.g. &lt;code&gt;ng-model&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4a2157fd4651f5ccd744058540881b06b68a586" translate="yes" xml:space="preserve">
          <source>AngularJS Accessibility at ngEurope</source>
          <target state="translated">ngEurope上的AngularJS可访问性</target>
        </trans-unit>
        <trans-unit id="58966c0a99e9180ce8cf2c8238894a17e5acefa3" translate="yes" xml:space="preserve">
          <source>AngularJS Blog</source>
          <target state="translated">AngularJS博客</target>
        </trans-unit>
        <trans-unit id="10935422d37be07b1f9d03bd4bd4648742ed57f5" translate="yes" xml:space="preserve">
          <source>AngularJS Expressions vs. JavaScript Expressions</source>
          <target state="translated">AngularJS表达式VS JavaScript表达式</target>
        </trans-unit>
        <trans-unit id="fa4112920b48d03503b9cfdbeff4addf37de8003" translate="yes" xml:space="preserve">
          <source>AngularJS IRC channel</source>
          <target state="translated">AngularJS IRC频道</target>
        </trans-unit>
        <trans-unit id="8709ab6a8289c4a260c3e11677b31fbb21a2a30d" translate="yes" xml:space="preserve">
          <source>AngularJS Material</source>
          <target state="translated">AngularJS材料</target>
        </trans-unit>
        <trans-unit id="2cced466cd886f24b57c2f6ae044b2c12669f782" translate="yes" xml:space="preserve">
          <source>AngularJS Scopes</source>
          <target state="translated">AngularJS作用域</target>
        </trans-unit>
        <trans-unit id="cc3917a0e77e480943a79e1de65aac43cd92aabb" translate="yes" xml:space="preserve">
          <source>AngularJS Seed</source>
          <target state="translated">AngularJS种子</target>
        </trans-unit>
        <trans-unit id="6c5d29b4a87b1dc1dda5895fca5ac894b2cad8db" translate="yes" xml:space="preserve">
          <source>AngularJS Service API</source>
          <target state="translated">AngularJS服务API</target>
        </trans-unit>
        <trans-unit id="6ea95f8da2f97d39b353d9d6c1e8c0ca783d16e2" translate="yes" xml:space="preserve">
          <source>AngularJS Styleguide</source>
          <target state="translated">AngularJS风格指南</target>
        </trans-unit>
        <trans-unit id="19c7c3ee2f637e8d9c1e5f271cfa0f66e077975b" translate="yes" xml:space="preserve">
          <source>AngularJS Templates</source>
          <target state="translated">AngularJS模板</target>
        </trans-unit>
        <trans-unit id="0453b2acb9baff1f059cf73da1f3ca1a4a489724" translate="yes" xml:space="preserve">
          <source>AngularJS Templates and Expressions</source>
          <target state="translated">AngularJS模板和表达式</target>
        </trans-unit>
        <trans-unit id="a50311307d9b448cd7b8f1579e7819949f998f99" translate="yes" xml:space="preserve">
          <source>AngularJS UI Bootstrap</source>
          <target state="translated">AngularJS UI Bootstrap</target>
        </trans-unit>
        <trans-unit id="3757aac570708761ec4fe9543f6d5b9883dd0ffc" translate="yes" xml:space="preserve">
          <source>AngularJS UI Grid</source>
          <target state="translated">AngularJS UI网格</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
