<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="angularjs">
    <body>
      <group id="angularjs">
        <trans-unit id="0fd04e9e5b96e85cca8613d8294a4a6de3b25a55" translate="yes" xml:space="preserve">
          <source>If a request expectation has no response specified, the algorithm will search your backend definitions for an appropriate response.</source>
          <target state="translated">如果一个请求期望没有指定响应,算法将搜索你的后端定义,寻找合适的响应。</target>
        </trans-unit>
        <trans-unit id="3c34b3f9a2baeaea1921d5fa87951146f390ffe3" translate="yes" xml:space="preserve">
          <source>If a required controller cannot be found, and it is optional, the instance is &lt;code&gt;null&lt;/code&gt;, otherwise the &lt;a href=&quot;https://code.angularjs.org/1.7.8/docs/api/ng/service/error/%24compile/ctreq&quot;&gt;Missing Required Controller&lt;/a&gt; error is thrown.</source>
          <target state="translated">如果找不到必需的控制器，并且它是可选的，则该实例为 &lt;code&gt;null&lt;/code&gt; ，否则抛出&lt;a href=&quot;https://code.angularjs.org/1.7.8/docs/api/ng/service/error/%24compile/ctreq&quot;&gt;Missing Required Controller&lt;/a&gt;错误。</target>
        </trans-unit>
        <trans-unit id="e8ecc0e4af38e92205b4a945081b7e78cdb43a2c" translate="yes" xml:space="preserve">
          <source>If a required controller cannot be found, and it is optional, the instance is &lt;code&gt;null&lt;/code&gt;, otherwise the &lt;a href=&quot;https://code.angularjs.org/1.8.2/docs/api/ng/service/error/%24compile/ctreq&quot;&gt;Missing Required Controller&lt;/a&gt; error is thrown.</source>
          <target state="translated">If a required controller cannot be found, and it is optional, the instance is &lt;code&gt;null&lt;/code&gt; , otherwise the &lt;a href=&quot;https://code.angularjs.org/1.8.2/docs/api/ng/service/error/%24compile/ctreq&quot;&gt;Missing Required Controller&lt;/a&gt; error is thrown.</target>
        </trans-unit>
        <trans-unit id="3062c2d3fcf43cdcf6dc09ea8da967844fcf796b" translate="yes" xml:space="preserve">
          <source>If a service is decorated by both &lt;code&gt;$provide.decorator&lt;/code&gt; and &lt;code&gt;module.decorator&lt;/code&gt;, the decorators are applied in order:</source>
          <target state="translated">如果服务由 &lt;code&gt;$provide.decorator&lt;/code&gt; &lt;code&gt;module.decorator&lt;/code&gt; 和module.decorator装饰，则按以下顺序应用装饰器：</target>
        </trans-unit>
        <trans-unit id="8065da6f118dbd267964e5dadd97dd3d9850fb06" translate="yes" xml:space="preserve">
          <source>If a value is specified, returns the $httpProvider for chaining. otherwise, returns the current configured value.</source>
          <target state="translated">如果指定了一个值,则返回链的$httpProvider,否则,返回当前配置的值。</target>
        </trans-unit>
        <trans-unit id="1f41bc8f62e166a66fdd0b00ba6f38f10a023aad" translate="yes" xml:space="preserve">
          <source>If an action's configuration specifies that it is cancellable, you can cancel the request related to an instance or collection (as long as it is a result of a &quot;non-instance&quot; call):</source>
          <target state="translated">如果一个动作的配置指定它是可取消的,你可以取消与实例或集合相关的请求(只要它是一个 &quot;非实例 &quot;调用的结果)。</target>
        </trans-unit>
        <trans-unit id="cc7cda513ad242dc0410921f7e4d7987e45e3c2b" translate="yes" xml:space="preserve">
          <source>If an attribute with a binding is prefixed with the &lt;code&gt;ngAttr&lt;/code&gt; prefix (denormalized as &lt;code&gt;ng-attr-&lt;/code&gt;) then during the binding it will be applied to the corresponding unprefixed attribute. This allows you to bind to attributes that would otherwise be eagerly processed by browsers (e.g. an SVG element's &lt;code&gt;circle[cx]&lt;/code&gt; attributes). When using &lt;code&gt;ngAttr&lt;/code&gt;, the &lt;code&gt;allOrNothing&lt;/code&gt; flag of &lt;a href=&quot;../api/ng/service/%24interpolate&quot;&gt;$interpolate&lt;/a&gt; is used, so if any expression in the interpolated string results in &lt;code&gt;undefined&lt;/code&gt;, the attribute is removed and not added to the element.</source>
          <target state="translated">如果具有绑定属性的前缀为 &lt;code&gt;ngAttr&lt;/code&gt; 前缀（已规范化为 &lt;code&gt;ng-attr-&lt;/code&gt; ），则在绑定期间它将被应用到相应的无前缀属性。这样，您就可以绑定到浏览器急需处理的属性（例如，SVG元素的 &lt;code&gt;circle[cx]&lt;/code&gt; 属性）。使用 &lt;code&gt;ngAttr&lt;/code&gt; 时，将使用&lt;a href=&quot;../api/ng/service/%24interpolate&quot;&gt;$ interpolate&lt;/a&gt;的 &lt;code&gt;allOrNothing&lt;/code&gt; 标志，因此，如果插值字符串中的任何表达式导致 &lt;code&gt;undefined&lt;/code&gt; ，则该属性将被删除而不添加到元素中。</target>
        </trans-unit>
        <trans-unit id="3c897c9ef737c27fdd08857ed2716fb1b8f4d9a5" translate="yes" xml:space="preserve">
          <source>If an expectation or definition uses a &lt;strong&gt;regex&lt;/strong&gt; to match the URL, you can provide an array of &lt;strong&gt;keys&lt;/strong&gt; via a &lt;code&gt;params&lt;/code&gt; argument. The index of each &lt;strong&gt;key&lt;/strong&gt; in the array will match the index of a &lt;strong&gt;group&lt;/strong&gt; in the &lt;strong&gt;regex&lt;/strong&gt;.</source>
          <target state="translated">如果期望或定义使用&lt;strong&gt;正则表达式&lt;/strong&gt;来匹配URL，则可以通过 &lt;code&gt;params&lt;/code&gt; 参数提供&lt;strong&gt;键&lt;/strong&gt;数组。每个索引&lt;strong&gt;密钥&lt;/strong&gt;的阵列将匹配的索引&lt;strong&gt;组&lt;/strong&gt;中的&lt;strong&gt;正则表达式&lt;/strong&gt;。&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e464595e0a743e0020b60c55e500247b0faf2671" translate="yes" xml:space="preserve">
          <source>If an interceptor object was provided, the promise will instead be resolved with the value returned by the response interceptor (on success) or responceError interceptor (on failure).</source>
          <target state="translated">如果提供了一个拦截器对象,承诺将改用响应拦截器(成功时)或响应错误拦截器(失败时)返回的值来解析。</target>
        </trans-unit>
        <trans-unit id="7550c3d4cbd675d41d3da8b71e0e2ec2f8a2fd48" translate="yes" xml:space="preserve">
          <source>If any expectation within an &lt;code&gt;it&lt;/code&gt; block fails, the runner marks the &lt;code&gt;it&lt;/code&gt; as &quot;failed&quot; and continues on to the next block.</source>
          <target state="translated">如果 &lt;code&gt;it&lt;/code&gt; 块中的任何期望失败，则运行程序将 &lt;code&gt;it&lt;/code&gt; 标记为&amp;ldquo;失败&amp;rdquo;，然后继续进行下一个块。</target>
        </trans-unit>
        <trans-unit id="1352dc692bed1cbf1f5076fcaeba257174fe28f2" translate="yes" xml:space="preserve">
          <source>If automatic scrolling is disabled, one must explicitly call &lt;a href=&quot;../service/%24anchorscroll&quot;&gt;$anchorScroll()&lt;/a&gt; in order to scroll to the element related to the current hash.</source>
          <target state="translated">如果禁用了自动滚动，则必须显式调用&lt;a href=&quot;../service/%24anchorscroll&quot;&gt;$ anchorScroll（）&lt;/a&gt;才能滚动到与当前哈希相关的元素。</target>
        </trans-unit>
        <trans-unit id="3b4e24e7eaa2ca32436552a01221de60832d916b" translate="yes" xml:space="preserve">
          <source>If boolean, sets &lt;code&gt;html5Mode.enabled&lt;/code&gt; to value. If object, sets &lt;code&gt;enabled&lt;/code&gt;, &lt;code&gt;requireBase&lt;/code&gt; and &lt;code&gt;rewriteLinks&lt;/code&gt; to respective values. Supported properties:</source>
          <target state="translated">如果为boolean，则将 &lt;code&gt;html5Mode.enabled&lt;/code&gt; 设置为value。如果为object，则将 &lt;code&gt;enabled&lt;/code&gt; ， &lt;code&gt;requireBase&lt;/code&gt; 和 &lt;code&gt;rewriteLinks&lt;/code&gt; 设置为相应的值。支持的属性：</target>
        </trans-unit>
        <trans-unit id="7148e4e9bfb3ae0f9035089b0911fcd382c40701" translate="yes" xml:space="preserve">
          <source>If both &lt;code&gt;bindToController&lt;/code&gt; and &lt;code&gt;scope&lt;/code&gt; are defined and have object hashes, &lt;code&gt;bindToController&lt;/code&gt; overrides &lt;code&gt;scope&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;bindToController&lt;/code&gt; 和 &lt;code&gt;scope&lt;/code&gt; 都已定义并且具有对象哈希，则 &lt;code&gt;bindToController&lt;/code&gt; 会覆盖 &lt;code&gt;scope&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1cabef013ace4e4c9c00e6712ac1e83f19c28fc9" translate="yes" xml:space="preserve">
          <source>If both values are objects, compare their indices instead.</source>
          <target state="translated">如果两个值都是对象,则比较它们的指数。</target>
        </trans-unit>
        <trans-unit id="e0f58fb3edabd2bfd4c52120891ecad3c7f08490" translate="yes" xml:space="preserve">
          <source>If both values are of type &lt;code&gt;string&lt;/code&gt;, compare them alphabetically in a case- and locale-insensitive way.</source>
          <target state="translated">如果两个值均为 &lt;code&gt;string&lt;/code&gt; 类型，则以不区分大小写和区域设置的方式按字母顺序比较它们。</target>
        </trans-unit>
        <trans-unit id="a3acd0c125665e994f5cc5d87ff32bae58ae7519" translate="yes" xml:space="preserve">
          <source>If caching is enabled, but neither the default cache nor config.cache are set to a cache object, then the default &lt;code&gt;$cacheFactory(&quot;$http&quot;)&lt;/code&gt; object is used.</source>
          <target state="translated">如果启用了缓存，但是默认缓存和config.cache都未设置为缓存对象，则使用默认 &lt;code&gt;$cacheFactory(&quot;$http&quot;)&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="6be3243cff2b9606141e7d8a8288624cc35fdc41" translate="yes" xml:space="preserve">
          <source>If called with a function then it's considered to be the controller constructor function. Otherwise it's considered to be a string which is used to retrieve the controller constructor using the following steps:</source>
          <target state="translated">如果用函数调用,那么它被认为是控制器构造函数。否则,它被认为是一个字符串,用于使用以下步骤检索控制器构造函数。</target>
        </trans-unit>
        <trans-unit id="eca4a0606f2e890d1b99bf344fe5c04e4c526a90" translate="yes" xml:space="preserve">
          <source>If called with no arguments returns the parsed &lt;code&gt;search&lt;/code&gt; object. If called with one or more arguments returns &lt;code&gt;$location&lt;/code&gt; object itself.</source>
          <target state="translated">如果不带任何参数调用，则返回已解析的 &lt;code&gt;search&lt;/code&gt; 对象。如果使用一个或多个参数调用，则返回 &lt;code&gt;$location&lt;/code&gt; 对象本身。</target>
        </trans-unit>
        <trans-unit id="c24fb87cdf6ae1778bbb557cc0ff10b76544fa3c" translate="yes" xml:space="preserve">
          <source>If called, all changes to $location during the current &lt;code&gt;$digest&lt;/code&gt; will replace the current history record, instead of adding a new one.</source>
          <target state="translated">如果调用，则在当前 &lt;code&gt;$digest&lt;/code&gt; 期间对$ location的所有更改将替换当前历史记录，而不是添加新的记录。</target>
        </trans-unit>
        <trans-unit id="b025c8c144cafc2941eab97705006674236a7463" translate="yes" xml:space="preserve">
          <source>If custom triggers are used, custom debouncing timeouts can be set for each event using an object in &lt;code&gt;debounce&lt;/code&gt;. This can be useful to force immediate updates on some specific circumstances (like blur events).</source>
          <target state="translated">如果使用自定义触发器，则可以使用debounce中的对象为每个事件设置自定义 &lt;code&gt;debounce&lt;/code&gt; 超时。这对于在某些特定情况下（例如模糊事件）强制立即更新很有用。</target>
        </trans-unit>
        <trans-unit id="50eecbd017e410f336fd4a83ba00bd8c53ebc392" translate="yes" xml:space="preserve">
          <source>If for example we wanted to create animations for &lt;code&gt;leave&lt;/code&gt; and &lt;code&gt;move&lt;/code&gt; (ngRepeat triggers move) then we can do so using the same CSS naming conventions:</source>
          <target state="translated">例如，如果我们想为 &lt;code&gt;leave&lt;/code&gt; 和 &lt;code&gt;move&lt;/code&gt; （ngRepeat触发器移动）创建动画，那么我们可以使用相同的CSS命名约定：</target>
        </trans-unit>
        <trans-unit id="107509b3211b546d6aa398c5cd00116593d484cf" translate="yes" xml:space="preserve">
          <source>If it is necessary to reference the controller or any functions bound to the controller from the template, you can use the option &lt;code&gt;controllerAs&lt;/code&gt; to specify the name of the controller as an alias. The directive needs to define a scope for this configuration to be used. This is particularly useful in the case when the directive is used as a component.</source>
          <target state="translated">如果有必要从模板引用控制器或绑定到控制器的任何功能，则可以使用选项 &lt;code&gt;controllerAs&lt;/code&gt; 将控制器的名称指定为别名。该指令需要定义要使用的配置的范围。在将伪指令用作组件的情况下，这特别有用。</target>
        </trans-unit>
        <trans-unit id="9a307e66a98c3ebe2ff88b0c79288c8c10c4b570" translate="yes" xml:space="preserve">
          <source>If jQuery is available, &lt;code&gt;angular.element&lt;/code&gt; is an alias for the &lt;a href=&quot;http://api.jquery.com/jQuery/&quot;&gt;jQuery&lt;/a&gt; function. If jQuery is not available, &lt;code&gt;angular.element&lt;/code&gt; delegates to AngularJS's built-in subset of jQuery, called &quot;jQuery lite&quot; or &lt;strong&gt;jqLite&lt;/strong&gt;.</source>
          <target state="translated">如果有jQuery，则 &lt;code&gt;angular.element&lt;/code&gt; 是&lt;a href=&quot;http://api.jquery.com/jQuery/&quot;&gt;jQuery&lt;/a&gt;函数的别名。如果jQuery不可用，则 &lt;code&gt;angular.element&lt;/code&gt; 委托AngularJS的内置jQuery子集，称为&amp;ldquo; jQuery lite&amp;rdquo;或&lt;strong&gt;jqLit​​e&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="c701fc2f8dc85147ea98151e5bf3322bcac3aaee" translate="yes" xml:space="preserve">
          <source>If multiple controllers are required, the &lt;code&gt;require&lt;/code&gt; option of the directive can take an array argument. The corresponding parameter being sent to the &lt;code&gt;link&lt;/code&gt; function will also be an array.</source>
          <target state="translated">如果需要多个控制器，则伪指令的 &lt;code&gt;require&lt;/code&gt; 选项可以采用数组参数。发送到 &lt;code&gt;link&lt;/code&gt; 函数的相应参数也将是一个数组。</target>
        </trans-unit>
        <trans-unit id="9131087c07a27ae54bb5cb150194e99e5b9ded60" translate="yes" xml:space="preserve">
          <source>If multiple identical requests are made using the same cache, which is not yet populated, one request will be made to the server and remaining requests will return the same response.</source>
          <target state="translated">如果使用同一个缓存提出多个相同的请求,而缓存还没有被填充,那么将向服务器提出一个请求,其余请求将返回相同的响应。</target>
        </trans-unit>
        <trans-unit id="5099fba28286973badadf5e09f2c704804e0e9a4" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;templateNamespace&lt;/code&gt; is specified, then the namespace is considered to be &lt;code&gt;html&lt;/code&gt;.</source>
          <target state="translated">如果未指定 &lt;code&gt;templateNamespace&lt;/code&gt; ，则将该命名空间视为 &lt;code&gt;html&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="565e32b222f018c04759a0915c1eafd46c68d0e3" translate="yes" xml:space="preserve">
          <source>If no delay is specified, it uses a delay such that all currently pending tasks are flushed.</source>
          <target state="translated">如果没有指定延迟,则使用延迟,使所有当前待处理的任务都被刷新。</target>
        </trans-unit>
        <trans-unit id="a343b02429ad2a626c45c677fe2309fc8eb6e9af" translate="yes" xml:space="preserve">
          <source>If no destination is supplied, a copy of the object or array is created.</source>
          <target state="translated">如果没有提供目的地,则会创建一个对象或数组的副本。</target>
        </trans-unit>
        <trans-unit id="613c17fb4d65c58a50bf306d9be2b19d42f72bd3" translate="yes" xml:space="preserve">
          <source>If no rule is defined for a category, then an empty string is displayed and a warning is generated. Note that some locales define more categories than &lt;code&gt;one&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt;. For example, fr-fr defines &lt;code&gt;few&lt;/code&gt; and &lt;code&gt;many&lt;/code&gt;.</source>
          <target state="translated">如果没有为类别定义任何规则，那么将显示一个空字符串并生成警告。请注意，某些语言环境定义多个类别比 &lt;code&gt;one&lt;/code&gt; 和 &lt;code&gt;other&lt;/code&gt; 。例如，FR-FR定义了 &lt;code&gt;few&lt;/code&gt; 和 &lt;code&gt;many&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="68fc3fa08dbab4451ff79de79c9fc1a49cba71b3" translate="yes" xml:space="preserve">
          <source>If one of the values is undefined, consider it &quot;greater than&quot; the other.</source>
          <target state="translated">如果其中一个值未定义,则认为它 &quot;大于 &quot;另一个。</target>
        </trans-unit>
        <trans-unit id="be847ed107cfee41deb9115ce6a8c35e338521f0" translate="yes" xml:space="preserve">
          <source>If one wants to modify a camelcased attribute (SVG elements have valid camelcased attributes), such as &lt;code&gt;viewBox&lt;/code&gt; on the &lt;code&gt;svg&lt;/code&gt; element, one can use underscores to denote that the attribute to bind to is naturally camelcased.</source>
          <target state="translated">如果要修改驼峰式属性（SVG元素具有有效的驼峰式属性），例如 &lt;code&gt;svg&lt;/code&gt; 元素上的 &lt;code&gt;viewBox&lt;/code&gt; ，则可以使用下划线表示绑定到的属性自然是驼峰式的。</target>
        </trans-unit>
        <trans-unit id="fa3a550f7e49feb35b5c38e18a628e43579977d7" translate="yes" xml:space="preserve">
          <source>If our animation code class-based (meaning that something like &lt;code&gt;ngClass&lt;/code&gt;, &lt;code&gt;ngHide&lt;/code&gt; and &lt;code&gt;ngShow&lt;/code&gt; triggers it) then we can still define our animations inside of the same registered animation, however, the function input arguments are a bit different:</source>
          <target state="translated">如果我们的动画代码基于类（意味着像 &lt;code&gt;ngClass&lt;/code&gt; ， &lt;code&gt;ngHide&lt;/code&gt; 和 &lt;code&gt;ngShow&lt;/code&gt; 之类的东西会触发它），那么我们仍然可以在相同的注册动画中定义我们的动画，但是，函数输入参数有些不同：</target>
        </trans-unit>
        <trans-unit id="3929b62e0e7741d149c634de5223054eef38f614" translate="yes" xml:space="preserve">
          <source>If provided, then enables/disables SCE application-wide.</source>
          <target state="translated">如果提供,则在整个应用范围内启用/禁用SCE。</target>
        </trans-unit>
        <trans-unit id="420de9532a9310bd61b98d99b3e5431883df58a7" translate="yes" xml:space="preserve">
          <source>If provided, update the internal &lt;code&gt;eagerInstantiationEnabled&lt;/code&gt; flag.</source>
          <target state="translated">如果提供，请更新内部 &lt;code&gt;eagerInstantiationEnabled&lt;/code&gt; 标志。</target>
        </trans-unit>
        <trans-unit id="f6c236207f5e15b8cfb41e7366e363e30acf5b95" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;false&lt;/code&gt; skips model dirty checking, otherwise will invoke &lt;code&gt;fn&lt;/code&gt; within the &lt;a href=&quot;../../ng/type/%24rootscope.scope#%24apply.html&quot;&gt;$apply&lt;/a&gt; block.</source>
          <target state="translated">如果设置为 &lt;code&gt;false&lt;/code&gt; ，将跳过模型脏检查，否则将在&lt;a href=&quot;../../ng/type/%24rootscope.scope#%24apply.html&quot;&gt;$ apply&lt;/a&gt;块中调用 &lt;code&gt;fn&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="35a5cf1a0eea8e136f5c4728cf9e80e86d58aa15" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;false&lt;/code&gt; skips model dirty checking, otherwise will invoke &lt;code&gt;fn&lt;/code&gt; within the &lt;a href=&quot;../type/%24rootscope.scope#%24apply.html&quot;&gt;$apply&lt;/a&gt; block.</source>
          <target state="translated">如果设置为 &lt;code&gt;false&lt;/code&gt; ，将跳过模型脏检查，否则将在&lt;a href=&quot;../type/%24rootscope.scope#%24apply.html&quot;&gt;$ apply&lt;/a&gt;块中调用 &lt;code&gt;fn&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6d79cbe97b0cba018fd80c72312c2caecd191843" translate="yes" xml:space="preserve">
          <source>If set to false AngularJS will not automatically trim the input.</source>
          <target state="translated">如果设置为false,AngularJS将不会自动修剪输入。</target>
        </trans-unit>
        <trans-unit id="99f750122c635a9c79ac25ba8a258a265ea9d70d" translate="yes" xml:space="preserve">
          <source>If set to false AngularJS will not automatically trim the input. This parameter is ignored for input[type=password] controls, which will never trim the input.</source>
          <target state="translated">如果设置为false,AngularJS将不会自动修剪输入。对于输入[type=password]控件来说,这个参数会被忽略,因为它永远不会修剪输入。</target>
        </trans-unit>
        <trans-unit id="d365bd222f8aac61ea4ce4cf5f583497a646e6c8" translate="yes" xml:space="preserve">
          <source>If set to true then the current &lt;code&gt;priority&lt;/code&gt; will be the last set of directives which will execute (any directives at the current priority will still execute as the order of execution on same &lt;code&gt;priority&lt;/code&gt; is undefined). Note that expressions and other directives used in the directive's template will also be excluded from execution.</source>
          <target state="translated">如果设置为true，则当前 &lt;code&gt;priority&lt;/code&gt; 将是将要执行的最后一组指令（由于未定义在相同 &lt;code&gt;priority&lt;/code&gt; 上的执行顺序，因此当前优先级的任何指令仍将执行）。请注意，指令模板中使用的表达式和其他指令也将从执行中排除。</target>
        </trans-unit>
        <trans-unit id="8198e6aef6aaac2f45ebacc8a1aa2d4b63f0fc33" translate="yes" xml:space="preserve">
          <source>If set to true, the JSON output will contain newlines and whitespace. If set to an integer, the JSON output will contain that many spaces per indentation.</source>
          <target state="translated">如果设置为true,JSON输出将包含换行和空格。如果设置为整数,JSON输出将包含每个缩进的空格。</target>
        </trans-unit>
        <trans-unit id="cd63bbd500f85b0aa9f3f57a50ef372022a6763d" translate="yes" xml:space="preserve">
          <source>If set, specifies a vertical scroll-offset. This is often useful when there are fixed positioned elements at the top of the page, such as navbars, headers etc.</source>
          <target state="translated">如果设置,指定垂直滚动偏移。当页面顶部有固定位置的元素时,如导航条、页眉等,这通常很有用。</target>
        </trans-unit>
        <trans-unit id="fe6333e8f42c68100e28d8d911a3367f20054d75" translate="yes" xml:space="preserve">
          <source>If specified then new module is being created. If unspecified then the module is being retrieved for further configuration.</source>
          <target state="translated">如果指定,则正在创建新模块。如果未指定,则正在检索模块,以便进一步配置。</target>
        </trans-unit>
        <trans-unit id="27aeb59cad0b804c6ef2d86a1dfa615624970c38" translate="yes" xml:space="preserve">
          <source>If that is the case, the compiler adds an interpolateDirective to the node and registers &lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24watch.html&quot;&gt;watches&lt;/a&gt; on the computed interpolation function, which will update the corresponding text nodes or attribute values as part of the normal &lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24digest.html&quot;&gt;digest&lt;/a&gt; cycle.</source>
          <target state="translated">如果是这种情况，编译器会向该节点添加一个interpolateDirective，并在计算出的插值函数上注册&lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24watch.html&quot;&gt;监视&lt;/a&gt;，这将更新相应的文本节点或属性值，作为正常&lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24digest.html&quot;&gt;摘要&lt;/a&gt;周期的一部分。</target>
        </trans-unit>
        <trans-unit id="06ebcf108a89a946fe69e686a9111125f0f020a4" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../../../guide/expression&quot;&gt;expression&lt;/a&gt; is falsy then the element is removed from the DOM tree. If it is truthy a copy of the compiled element is added to the DOM tree.</source>
          <target state="translated">如果&lt;a href=&quot;../../../guide/expression&quot;&gt;表达式&lt;/a&gt;不正确，则将元素从DOM树中删除。如果是事实，则将已编译元素的副本添加到DOM树。</target>
        </trans-unit>
        <trans-unit id="92018ed26fa3598f627e4578ebf49a3b9ed44b1b" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../../../guide/expression&quot;&gt;expression&lt;/a&gt; is truthy, then special attribute &quot;open&quot; will be set on the element</source>
          <target state="translated">如果&lt;a href=&quot;../../../guide/expression&quot;&gt;表达式&lt;/a&gt;为真，则将在元素上设置特殊属性&amp;ldquo; open&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="431632c12958fee7c8e13e21d996c9067cd8b138" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../../../guide/expression&quot;&gt;expression&lt;/a&gt; is truthy, then special attribute &quot;readonly&quot; will be set on the element</source>
          <target state="translated">如果&lt;a href=&quot;../../../guide/expression&quot;&gt;表达式&lt;/a&gt;为真，则将在元素上设置特殊属性&amp;ldquo; readonly&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="705b7850ed3cc932f2a8560a14e97c372e2c1a26" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../../../guide/expression&quot;&gt;expression&lt;/a&gt; is truthy, then special attribute &quot;selected&quot; will be set on the element</source>
          <target state="translated">如果&lt;a href=&quot;../../../guide/expression&quot;&gt;表达式&lt;/a&gt;为真，则将在元素上设置特殊属性&amp;ldquo; selected&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="a2e2565ac63611a2ee4218e5debd4028869e44fa" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../../../guide/expression&quot;&gt;expression&lt;/a&gt; is truthy, then the &lt;code&gt;checked&lt;/code&gt; attribute will be set on the element</source>
          <target state="translated">如果&lt;a href=&quot;../../../guide/expression&quot;&gt;表达式&lt;/a&gt;为真，则将在元素上设置 &lt;code&gt;checked&lt;/code&gt; 属性</target>
        </trans-unit>
        <trans-unit id="0fa6eb7b7fd73a6c228cab8613440b5f26fe154c" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../../../guide/expression&quot;&gt;expression&lt;/a&gt; is truthy, then the &lt;code&gt;disabled&lt;/code&gt; attribute will be set on the element</source>
          <target state="translated">如果&lt;a href=&quot;../../../guide/expression&quot;&gt;表达式&lt;/a&gt;为真，则将在元素上设置 &lt;code&gt;disabled&lt;/code&gt; 属性</target>
        </trans-unit>
        <trans-unit id="c8f2e6672bb03dd7bddaac75918cc6f50c5be88c" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../../../guide/expression&quot;&gt;expression&lt;/a&gt; is truthy/falsy then the element is hidden/shown respectively.</source>
          <target state="translated">如果&lt;a href=&quot;../../../guide/expression&quot;&gt;表达式&lt;/a&gt;为真/假，则分别隐藏/显示元素。</target>
        </trans-unit>
        <trans-unit id="1328e9d07bc981d3a2f225632334634a909a47c7" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../../../guide/expression&quot;&gt;expression&lt;/a&gt; is truthy/falsy then the element is shown/hidden respectively.</source>
          <target state="translated">如果&lt;a href=&quot;../../../guide/expression&quot;&gt;表达式&lt;/a&gt;为真/假，则分别显示/隐藏元素。</target>
        </trans-unit>
        <trans-unit id="57f738c91082e8b25cb1fa3c8475f9812310ab4e" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;Content-Type&lt;/code&gt; is &lt;code&gt;application/json&lt;/code&gt; or the response looks like JSON, deserialize it using a JSON parser.</source>
          <target state="translated">如果 &lt;code&gt;Content-Type&lt;/code&gt; 是 &lt;code&gt;application/json&lt;/code&gt; 或响应看起来像JSON，请使用JSON解析器反序列化它。</target>
        </trans-unit>
        <trans-unit id="569213aa4cfaa4bcb8cb504d5cc5158f580f2ef7" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;data&lt;/code&gt; property of the request configuration object contains an object, serialize it into JSON format.</source>
          <target state="translated">如果请求配置对象的 &lt;code&gt;data&lt;/code&gt; 属性包含一个对象，请将其序列化为JSON格式。</target>
        </trans-unit>
        <trans-unit id="a575ef21797e38c6a9636004fb3da88ae0f427fb" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;name&lt;/code&gt; attribute is specified, the form controller is published onto the current scope under this name.</source>
          <target state="translated">如果指定了 &lt;code&gt;name&lt;/code&gt; 属性，则表单控制器将以该名称发布到当前作用域上。</target>
        </trans-unit>
        <trans-unit id="26b0e12a78f6677dac08ad73f6c6c9206d29a49b" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;ngAnimate&lt;/code&gt; module is active within the application then the &lt;code&gt;ngMessages&lt;/code&gt;, &lt;code&gt;ngMessage&lt;/code&gt; and &lt;code&gt;ngMessageExp&lt;/code&gt; directives will trigger animations whenever any messages are added and removed from the DOM by the &lt;code&gt;ngMessages&lt;/code&gt; directive.</source>
          <target state="translated">如果 &lt;code&gt;ngAnimate&lt;/code&gt; 模块是应用程序中的活动，则 &lt;code&gt;ngMessages&lt;/code&gt; ， &lt;code&gt;ngMessage&lt;/code&gt; 和 &lt;code&gt;ngMessageExp&lt;/code&gt; 指令将触发每当任何消息添加和从由所述DOM移除动画 &lt;code&gt;ngMessages&lt;/code&gt; 指令。</target>
        </trans-unit>
        <trans-unit id="7620b6d1e4671d235ceba2b3eb50bbc8af56dbac" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;require&lt;/code&gt; property is an object and &lt;code&gt;bindToController&lt;/code&gt; is truthy, then the required controllers are bound to the controller using the keys of the &lt;code&gt;require&lt;/code&gt; property. This binding occurs after all the controllers have been constructed but before &lt;code&gt;$onInit&lt;/code&gt; is called. If the name of the required controller is the same as the local name (the key), the name can be omitted. For example, &lt;code&gt;{parentDir: '^^'}&lt;/code&gt; is equivalent to &lt;code&gt;{parentDir: '^^parentDir'}&lt;/code&gt;. See the &lt;a href=&quot;../provider/%24compileprovider#component.html&quot;&gt;&lt;code&gt;$compileProvider&lt;/code&gt;&lt;/a&gt; helper for an example of how this can be used. If no such required directive(s) can be found, or if the directive does not have a controller, then an error is raised (unless no link function is specified and the required controllers are not being bound to the directive controller, in which case error checking is skipped). The name can be prefixed with:</source>
          <target state="translated">如果 &lt;code&gt;require&lt;/code&gt; 属性是一个对象，并且 &lt;code&gt;bindToController&lt;/code&gt; 为true，则使用 &lt;code&gt;require&lt;/code&gt; 属性的键将所需的控制器绑定到该控制器。此绑定发生在所有控制器都已构造之后但在调用 &lt;code&gt;$onInit&lt;/code&gt; 之前。如果所需控制器的名称与本地名称（键）相同，则可以省略该名称。例如， &lt;code&gt;{parentDir: '^^'}&lt;/code&gt; 等效于 &lt;code&gt;{parentDir: '^^parentDir'}&lt;/code&gt; 。请参阅&lt;a href=&quot;../provider/%24compileprovider#component.html&quot;&gt; &lt;code&gt;$compileProvider&lt;/code&gt; &lt;/a&gt;有关如何使用它的示例的帮助程序。如果找不到此类必需的指令，或者该指令没有控制器，则会引发错误（除非未指定链接功能，并且必需的控制器未绑定到指令控制器，在这种情况下）错误检查被跳过）。该名称可以带有以下前缀：</target>
        </trans-unit>
        <trans-unit id="e9084553ff9f6768e27df6a51cf00d07607970ba" translate="yes" xml:space="preserve">
          <source>If the argument is a hash object containing an array of values, these values will be encoded as duplicate search parameters in the URL.</source>
          <target state="translated">如果参数是一个包含值数组的哈希对象,这些值将被编码为URL中的重复搜索参数。</target>
        </trans-unit>
        <trans-unit id="bcb61a9e955126eaa26ea942a4627e94e63e44a6" translate="yes" xml:space="preserve">
          <source>If the compared values are of different types:</source>
          <target state="translated">如果比较的数值是不同类型的。</target>
        </trans-unit>
        <trans-unit id="a6ebb8e7acaaad05ba88ba630bbcf4bb474a27c9" translate="yes" xml:space="preserve">
          <source>If the compiler finds that an element matches a directive, then the directive is added to the list of directives that match the DOM element. A single element may match multiple directives.</source>
          <target state="translated">如果编译器发现一个元素匹配一个指令,那么这个指令就会被添加到匹配DOM元素的指令列表中。一个元素可以匹配多个指令。</target>
        </trans-unit>
        <trans-unit id="dba304c82bd0b93a1d184175d2e32a6154fed02c" translate="yes" xml:space="preserve">
          <source>If the controller has been attached using the &lt;code&gt;controller as&lt;/code&gt; syntax then the controller instance will be assigned to a property on the scope.</source>
          <target state="translated">如果已使用 &lt;code&gt;controller as&lt;/code&gt; 语法附加了控制器，则将控制器实例分配给合并范围上的属性。</target>
        </trans-unit>
        <trans-unit id="6cd88d003715e1438f37dc2797bc52968605194f" translate="yes" xml:space="preserve">
          <source>If the directive is using 'element' transclusion, the compiler will actually remove the directive's entire element from the DOM and replace it with a comment node. The compiler then inserts the directive's template &quot;after&quot; this comment node, as a sibling.</source>
          <target state="translated">如果指令使用了 &quot;元素 &quot;转包容,编译器实际上会从DOM中删除指令的整个元素,并用一个注释节点代替。然后,编译器会在这个注释节点之后插入指令的模板,作为一个兄弟节点。</target>
        </trans-unit>
        <trans-unit id="ccc0a0551436812b070e6ede527ae76f73bef649" translate="yes" xml:space="preserve">
          <source>If the element selector is prefixed with a &lt;code&gt;?&lt;/code&gt; then that slot is optional.</source>
          <target state="translated">如果元素选择器以 &lt;code&gt;?&lt;/code&gt; 为前缀 那么该插槽是可选的。</target>
        </trans-unit>
        <trans-unit id="539951d39c2b051017250ec693df08f36d0a8f58" translate="yes" xml:space="preserve">
          <source>If the element with &lt;code&gt;ngRef&lt;/code&gt; is destroyed &lt;code&gt;null&lt;/code&gt; is assigned to the property.</source>
          <target state="translated">如果使用 &lt;code&gt;ngRef&lt;/code&gt; 的元素被破坏，则将 &lt;code&gt;null&lt;/code&gt; 分配给该属性。</target>
        </trans-unit>
        <trans-unit id="8c51b91039912156c6ef5160d6f7caa8d6f1e32c" translate="yes" xml:space="preserve">
          <source>If the expression evaluates to a RegExp object, then this is used directly.</source>
          <target state="translated">如果表达式评估为 RegExp对象,则直接使用。</target>
        </trans-unit>
        <trans-unit id="8fb5cd62dfec3bda2d681b5166adcc87bc454767" translate="yes" xml:space="preserve">
          <source>If the expression evaluates to a string, the string should be one or more space-delimited class names.</source>
          <target state="translated">如果表达式的值是一个字符串,那么这个字符串应该是一个或多个以空格分隔的类名。</target>
        </trans-unit>
        <trans-unit id="bb3c8751b0c61a411cfd191d56c199c86cb9d8a9" translate="yes" xml:space="preserve">
          <source>If the expression evaluates to a string, then it will be converted to a RegExp after wrapping it in &lt;code&gt;^&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt; characters. For instance, &lt;code&gt;&quot;abc&quot;&lt;/code&gt; will be converted to &lt;code&gt;new RegExp('^abc$')&lt;/code&gt;.</source>
          <target state="translated">如果表达式的计算结果为字符串，则将其用 &lt;code&gt;^&lt;/code&gt; 和 &lt;code&gt;$&lt;/code&gt; 字符包装后，将转换为RegExp 。例如， &lt;code&gt;&quot;abc&quot;&lt;/code&gt; 将被转换为 &lt;code&gt;new RegExp('^abc$')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0a90d5734dbd86cb9e55270bd3a9ec2a471d3da2" translate="yes" xml:space="preserve">
          <source>If the expression evaluates to an array, each element of the array should either be a string as in type 1 or an object as in type 2. This means that you can mix strings and objects together in an array to give you more control over what CSS classes appear. See the code below for an example of this.</source>
          <target state="translated">如果表达式评估为一个数组,数组中的每个元素应该是类型1中的字符串或类型2中的对象。这意味着你可以将字符串和对象混合在一个数组中,以使你对CSS类的显示有更多的控制。请看下面的代码,这是一个例子。</target>
        </trans-unit>
        <trans-unit id="9f28d2244e2fc42662b32132ed29fd1499d1d52b" translate="yes" xml:space="preserve">
          <source>If the expression evaluates to an object, then for each key-value pair of the object with a truthy value the corresponding key is used as a class name.</source>
          <target state="translated">如果表达式评价为对象,那么对于对象的每一个键值对的真值,都会使用相应的键作为类名。</target>
        </trans-unit>
        <trans-unit id="d90a6cf7f68c8935fa77929bee3b2d26568ebc77" translate="yes" xml:space="preserve">
          <source>If the expression is truthy, then the &lt;code&gt;checked&lt;/code&gt; attribute will be set on the element. &lt;strong&gt;Note&lt;/strong&gt; : &lt;code&gt;ngChecked&lt;/code&gt; should not be used alongside &lt;code&gt;ngModel&lt;/code&gt;. Checkout &lt;a href=&quot;../directive/ngchecked&quot;&gt;ngChecked&lt;/a&gt; for usage.</source>
          <target state="translated">If the expression is truthy, then the &lt;code&gt;checked&lt;/code&gt; attribute will be set on the element. &lt;strong&gt;Note&lt;/strong&gt; : &lt;code&gt;ngChecked&lt;/code&gt; should not be used alongside &lt;code&gt;ngModel&lt;/code&gt; . Checkout &lt;a href=&quot;../directive/ngchecked&quot;&gt;ngChecked&lt;/a&gt; for usage.</target>
        </trans-unit>
        <trans-unit id="4f8a5c1d790a45cf8480b55c2ec6d0e8c83e21ad" translate="yes" xml:space="preserve">
          <source>If the expression will not change once set, it is a candidate for one-time binding. Here are three example cases.</source>
          <target state="translated">如果表达式一经设置就不会改变,那么它就是一次性绑定的候选者。下面是三个例子。</target>
        </trans-unit>
        <trans-unit id="8a619d19d7445d7e347bec6f9960436c9602b51f" translate="yes" xml:space="preserve">
          <source>If the first argument was a string, a factory function for the filter to be registered.</source>
          <target state="translated">如果第一个参数是字符串,则注册过滤器的工厂函数。</target>
        </trans-unit>
        <trans-unit id="361c8831315e17339674f0ae2feca36f02b8ac8a" translate="yes" xml:space="preserve">
          <source>If the function throws an error or the returned promise gets rejected, no further processing will take place and the &lt;a href=&quot;../service/%24route#%24routeChangeError.html&quot;&gt;$routeChangeError&lt;/a&gt; event will be fired.</source>
          <target state="translated">如果函数抛出错误或返回的承诺被拒绝，则不会进行进一步处理，并且会触发&lt;a href=&quot;../service/%24route#%24routeChangeError.html&quot;&gt;$ routeChangeError&lt;/a&gt;事件。</target>
        </trans-unit>
        <trans-unit id="801344aef470ca55925f85d5fc988659687084e2" translate="yes" xml:space="preserve">
          <source>If the horizontal distance is greater, this is a swipe and &lt;code&gt;move&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; events follow.</source>
          <target state="translated">如果水平距离较大，则滑动一下即可 &lt;code&gt;move&lt;/code&gt; 并 &lt;code&gt;end&lt;/code&gt; 事件。</target>
        </trans-unit>
        <trans-unit id="a956873d372528560c2d21f9517980780e587b81" translate="yes" xml:space="preserve">
          <source>If the input is null or undefined, it will just be returned. If the input is infinite (Infinity or -Infinity), the Infinity symbol '&amp;infin;' or '-&amp;infin;' is returned, respectively. If the input is not a number an empty string is returned.</source>
          <target state="translated">如果输入为null或未定义，则将返回它。如果输入是无限的（无穷大或-无穷大），则分别返回无穷大符号'&amp;infin;'或'-&amp;infin;'。如果输入的不是数字，则返回一个空字符串。</target>
        </trans-unit>
        <trans-unit id="3c59983d990ab2fd7484efe71b9e5bc2142d0391" translate="yes" xml:space="preserve">
          <source>If the interpolated value is not a &lt;code&gt;String&lt;/code&gt;, it is computed as follows:</source>
          <target state="translated">如果插值的值不是 &lt;code&gt;String&lt;/code&gt; ，则其计算如下：</target>
        </trans-unit>
        <trans-unit id="5201fb064f6147470f00f21dea4bab9f47241e2f" translate="yes" xml:space="preserve">
          <source>If the map of attributes contains a value for &lt;code&gt;target&lt;/code&gt;, it overrides the value of the target parameter.</source>
          <target state="translated">如果属性映射包含 &lt;code&gt;target&lt;/code&gt; 的值，则它将覆盖target参数的值。</target>
        </trans-unit>
        <trans-unit id="fbd620b139e2c7c9068fe0980b84af6bdfabe8c0" translate="yes" xml:space="preserve">
          <source>If the ngMessages renders no inner ngMessage directive (i.e. when none of the truthy keys are matched by a defined message), then it will render a default message using the &lt;a href=&quot;ngmessages/directive/ngmessagedefault&quot;&gt;&lt;code&gt;ngMessageDefault&lt;/code&gt;&lt;/a&gt; directive. Note that matched messages will always take precedence over unmatched messages. That means the default message will not be displayed when another message is matched. This is also true for &lt;code&gt;ng-messages-multiple&lt;/code&gt;.</source>
          <target state="translated">如果ngMessages不呈现内部ngMessage指令（即，当定义的消息均未匹配任何真实键时），则它将使用&lt;a href=&quot;ngmessages/directive/ngmessagedefault&quot;&gt; &lt;code&gt;ngMessageDefault&lt;/code&gt; &lt;/a&gt;指令呈现默认消息。请注意，匹配的消息将始终优先于不匹配的消息。这意味着当匹配另一条消息时，将不显示默认消息。对于 &lt;code&gt;ng-messages-multiple&lt;/code&gt; 也是如此。</target>
        </trans-unit>
        <trans-unit id="b16925af72a4fed089f605a5771aa7712c7c7fd8" translate="yes" xml:space="preserve">
          <source>If the object has a &lt;code&gt;valueOf()&lt;/code&gt; method that returns a primitive, its return value will be used instead.</source>
          <target state="translated">如果对象具有返回原始的 &lt;code&gt;valueOf()&lt;/code&gt; 方法，则将使用其返回值。</target>
        </trans-unit>
        <trans-unit id="3f1a13de46e7e46a68d029c7a50e792f652a12e1" translate="yes" xml:space="preserve">
          <source>If the object has a custom &lt;code&gt;toString()&lt;/code&gt; method (i.e. not the one inherited from &lt;code&gt;Object&lt;/code&gt;) that returns a primitive, its return value will be used instead.</source>
          <target state="translated">如果对象具有返回原语的自定义 &lt;code&gt;toString()&lt;/code&gt; 方法（即不是从 &lt;code&gt;Object&lt;/code&gt; 继承的方法），则将使用其返回值。</target>
        </trans-unit>
        <trans-unit id="b4070dda3da26b7789461241d4d6a2028444a334" translate="yes" xml:space="preserve">
          <source>If the option is set to &lt;code&gt;false&lt;/code&gt; and the URL in the browser changes, but the new URL maps to the same route, then a &lt;code&gt;$routeUpdate&lt;/code&gt; event is broadcasted on the root scope (without reloading the route).</source>
          <target state="translated">如果选项设置为 &lt;code&gt;false&lt;/code&gt; 并且浏览器中的URL更改，但是新的URL映射到相同的路由，则 &lt;code&gt;$routeUpdate&lt;/code&gt; 事件在根作用域上广播（不重新加载路由）。</target>
        </trans-unit>
        <trans-unit id="4f675d1330a06aa7e73c29dee26c8f270d3431c5" translate="yes" xml:space="preserve">
          <source>If the option is set to &lt;code&gt;false&lt;/code&gt; and the URL in the browser changes, then a &lt;code&gt;$routeUpdate&lt;/code&gt; event is broadcasted on the root scope (without reloading the route).</source>
          <target state="translated">如果该选项设置为 &lt;code&gt;false&lt;/code&gt; 并且浏览器中的URL更改，则 &lt;code&gt;$routeUpdate&lt;/code&gt; 事件在根作用域上广播（不重新加载路由）。</target>
        </trans-unit>
        <trans-unit id="667711c7d75a7f70cf4b59c7711f0e8c0ddf7c8c" translate="yes" xml:space="preserve">
          <source>If the option is set to &lt;code&gt;true&lt;/code&gt;, then the particular route can be matched without being case sensitive</source>
          <target state="translated">如果将选项设置为 &lt;code&gt;true&lt;/code&gt; ，则可以匹配特定的路由而不区分大小写</target>
        </trans-unit>
        <trans-unit id="2fa05f4335e8c37af4609e2cbfa503116352d3ed" translate="yes" xml:space="preserve">
          <source>If the parameter value is prefixed with &lt;code&gt;@&lt;/code&gt;, then the value for that parameter will be extracted from the corresponding property on the &lt;code&gt;data&lt;/code&gt; object (provided when calling actions with a request body). For example, if the &lt;code&gt;defaultParam&lt;/code&gt; object is &lt;code&gt;{someParam: '@someProp'}&lt;/code&gt; then the value of &lt;code&gt;someParam&lt;/code&gt; will be &lt;code&gt;data.someProp&lt;/code&gt;. Note that the parameter will be ignored, when calling a &quot;GET&quot; action method (i.e. an action method that does not accept a request body).</source>
          <target state="translated">如果参数值以 &lt;code&gt;@&lt;/code&gt; 开头，则将从 &lt;code&gt;data&lt;/code&gt; 对象上的相应属性中提取该参数的值（在使用请求主体调用操作时提供）。例如，如果 &lt;code&gt;defaultParam&lt;/code&gt; 对象是 &lt;code&gt;{someParam: '@someProp'}&lt;/code&gt; 则 &lt;code&gt;someParam&lt;/code&gt; 的值将是 &lt;code&gt;data.someProp&lt;/code&gt; 。请注意，在调用&amp;ldquo; GET&amp;rdquo;操作方法（即不接受请求正文的操作方法）时，将忽略该参数。</target>
        </trans-unit>
        <trans-unit id="748507705e8b73f2f2de5777914e00ac0057102d" translate="yes" xml:space="preserve">
          <source>If the passed parameter had been returned by a prior call to &lt;a href=&quot;%24scedelegate#trustAs.html&quot;&gt;&lt;code&gt;$sceDelegate.trustAs&lt;/code&gt;&lt;/a&gt;, returns the value that had been passed to &lt;a href=&quot;%24scedelegate#trustAs.html&quot;&gt;&lt;code&gt;$sceDelegate.trustAs&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果传递的参数是先前调用&lt;a href=&quot;%24scedelegate#trustAs.html&quot;&gt; &lt;code&gt;$sceDelegate.trustAs&lt;/code&gt; &lt;/a&gt;返回的，则返回传递给&lt;a href=&quot;%24scedelegate#trustAs.html&quot;&gt; &lt;code&gt;$sceDelegate.trustAs&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="34bdf8299f97f8ef59f74107df302ae6779e17bc" translate="yes" xml:space="preserve">
          <source>If the passed parameter is not a value that had been returned by &lt;a href=&quot;%24scedelegate#trustAs.html&quot;&gt;&lt;code&gt;$sceDelegate.trustAs&lt;/code&gt;&lt;/a&gt;, it must be returned as-is.</source>
          <target state="translated">如果传递的参数不是&lt;a href=&quot;%24scedelegate#trustAs.html&quot;&gt; &lt;code&gt;$sceDelegate.trustAs&lt;/code&gt; &lt;/a&gt;返回的值，则必须按原样返回。</target>
        </trans-unit>
        <trans-unit id="eba391f315a45facb41d9100a63641fbf14c5c21" translate="yes" xml:space="preserve">
          <source>If the provider is:</source>
          <target state="translated">如果提供者是:</target>
        </trans-unit>
        <trans-unit id="8fb90fddde351c69618ca1d22a26145a9faddc79" translate="yes" xml:space="preserve">
          <source>If the service has been declared multiple times, a decorator will decorate the service that has been declared last:</source>
          <target state="translated">如果服务被多次声明,装饰者将装饰最后声明的服务。</target>
        </trans-unit>
        <trans-unit id="073e1a6fd73d36907ed730dd5649eee40ed506d0" translate="yes" xml:space="preserve">
          <source>If the transcluded content is not empty (i.e. contains one or more DOM nodes, including whitespace text nodes), any existing content of this element will be removed before the transcluded content is inserted. If the transcluded content is empty (or only whitespace), the existing content is left intact. This lets you provide fallback content in the case that no transcluded content is provided.</source>
          <target state="translated">如果转入的内容不是空的(即包含一个或多个DOM节点,包括whitespace文本节点),那么在插入转入的内容之前,该元素的任何现有内容将被删除。如果转入的内容是空的(或者只有whitespace),现有的内容将被完整地保留。这让您可以在没有提供转入内容的情况下提供后备内容。</target>
        </trans-unit>
        <trans-unit id="d9ff46f623d6f00d105132061348b4f635bc911c" translate="yes" xml:space="preserve">
          <source>If the value is a RegExp literal, e.g. &lt;code&gt;ngPattern=&quot;/^\d+$/&quot;&lt;/code&gt;, it is used directly.</source>
          <target state="translated">如果该值为RegExp文字，例如 &lt;code&gt;ngPattern=&quot;/^\d+$/&quot;&lt;/code&gt; ，则可以直接使用。</target>
        </trans-unit>
        <trans-unit id="691fa80c49c3faa2138cb82838f938dea193adbf" translate="yes" xml:space="preserve">
          <source>If the value is empty, &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;on&lt;/code&gt;, then child animations are allowed. If the value is &lt;code&gt;false&lt;/code&gt;, child animations are not allowed.</source>
          <target state="translated">如果该值为空， &lt;code&gt;true&lt;/code&gt; 或 &lt;code&gt;on&lt;/code&gt; ，则允许子动画。如果值为 &lt;code&gt;false&lt;/code&gt; ，则不允许子动画。</target>
        </trans-unit>
        <trans-unit id="34f1578079504e9d3dc1f5f790637a829842cb7f" translate="yes" xml:space="preserve">
          <source>If the vertical distance is greater, this is a scroll, and we let the browser take over. A &lt;code&gt;cancel&lt;/code&gt; event is sent.</source>
          <target state="translated">如果垂直距离较大，则为滚动，我们让浏览器接管。一个 &lt;code&gt;cancel&lt;/code&gt; 发送事件。</target>
        </trans-unit>
        <trans-unit id="2d6b619ad1758255d1b68794d39d43746c76cfac" translate="yes" xml:space="preserve">
          <source>If the viewValue of &lt;code&gt;ngModel&lt;/code&gt; does not match any of the options, then the control will automatically add an &quot;unknown&quot; option, which it then removes when the mismatch is resolved.</source>
          <target state="translated">如果ngModel的 &lt;code&gt;ngModel&lt;/code&gt; 与任何选项都不匹配，则控件将自动添加&amp;ldquo;未知&amp;rdquo;选项，然后在解决不匹配问题时将其删除。</target>
        </trans-unit>
        <trans-unit id="9a9455b461bd0ed851b0a2e20ee353139e41bf20" translate="yes" xml:space="preserve">
          <source>If there are no pending requests to flush when the method is called, an exception is thrown (as this is typically a sign of programming error).</source>
          <target state="translated">如果在调用该方法时,没有待处理的刷新请求,就会抛出异常(因为这通常是编程错误的标志)。</target>
        </trans-unit>
        <trans-unit id="060ea5570e9b3727e1af7089f2eeb073f6d7b905" translate="yes" xml:space="preserve">
          <source>If those attributes are added to an element, they will be applied to all the child elements and controls that inherit from it unless they are overridden.</source>
          <target state="translated">如果这些属性被添加到一个元素中,它们将被应用到所有继承该元素的子元素和控件中,除非它们被重写。</target>
        </trans-unit>
        <trans-unit id="a0c1cfe0ec558e25c8faaad7729d14ba017c6c40" translate="yes" xml:space="preserve">
          <source>If true, then the scope does not prototypically inherit from the parent scope. The scope is isolated, as it can not see parent scope properties. When creating widgets, it is useful for the widget to not accidentally read parent state.</source>
          <target state="translated">如果为真,那么该作用域就不会从父作用域继承原型。该作用域是隔离的,因为它不能看到父作用域的属性。当创建小组件时,这对小组件不意外地读取父级状态是有用的。</target>
        </trans-unit>
        <trans-unit id="1a1eda02417fef4dacf554c54592d8c5e31f4371" translate="yes" xml:space="preserve">
          <source>If true, when requests are loaded, they will schedule a deferred &quot;apply&quot; on the next tick, giving time for subsequent requests in a roughly ~10ms window to load and share the same digest cycle.</source>
          <target state="translated">如果为真,当请求被加载时,它们将在下一个tick上安排一个延迟的 &quot;应用&quot;,为后续的请求在一个大约10ms的窗口中提供时间来加载并共享同一个摘要周期。</target>
        </trans-unit>
        <trans-unit id="6f15cbe99032410d5987084ecc33f306be94d6db" translate="yes" xml:space="preserve">
          <source>If two directives suspend a scope, then one of them resumes the scope, the scope will no longer be suspended. This could result in the other directive believing a scope to be suspended when it is not.</source>
          <target state="translated">如果两个指令暂停了一个作用域,然后其中一个指令恢复了该作用域,那么该作用域将不再被暂停。这可能导致另一个指令认为某个作用域已被暂停,而实际上并没有。</target>
        </trans-unit>
        <trans-unit id="62a2ab806aea83a4f315e6a0440d6fa1d95f6028" translate="yes" xml:space="preserve">
          <source>If we change the above to &lt;code&gt;{{ 1000 | currency:&quot;USD$&quot;}}&lt;/code&gt;, AngularJS will always show a balance of &lt;code&gt;USD$1000&lt;/code&gt; regardless of locale.</source>
          <target state="translated">如果我们将以上更改为 &lt;code&gt;{{ 1000 | currency:&quot;USD$&quot;}}&lt;/code&gt; ，无论使用哪种语言环境，AngularJS始终会显示 &lt;code&gt;USD$1000&lt;/code&gt; 的余额。</target>
        </trans-unit>
        <trans-unit id="8182958d3c9e9a8a4566ae6109e758f0624b87f7" translate="yes" xml:space="preserve">
          <source>If you are creating a reusable component then you should be careful when using &lt;code&gt;&quot;*&quot;: &quot;$inherit&quot;&lt;/code&gt; since you may inadvertently inherit a setting in the future that changes the behavior of your component.</source>
          <target state="translated">如果要创建可重用的组件，则在使用 &lt;code&gt;&quot;*&quot;: &quot;$inherit&quot;&lt;/code&gt; 时应格外小心，因为将来您可能会无意间继承一个更改设置，从而更改组件的行为。</target>
        </trans-unit>
        <trans-unit id="6824fd64e915a35e23d50509c5e4bba8e51856fc" translate="yes" xml:space="preserve">
          <source>If you are familiar with &lt;code&gt;ngInclude&lt;/code&gt;, &lt;code&gt;templateUrl&lt;/code&gt; works just like it. Here's the same example using &lt;code&gt;templateUrl&lt;/code&gt; instead:</source>
          <target state="translated">如果您熟悉 &lt;code&gt;ngInclude&lt;/code&gt; ，则 &lt;code&gt;templateUrl&lt;/code&gt; 会像它一样工作。这是使用 &lt;code&gt;templateUrl&lt;/code&gt; 的相同示例：</target>
        </trans-unit>
        <trans-unit id="77b4c3f9eed7868de1adc6770793e45e91738ff2" translate="yes" xml:space="preserve">
          <source>If you are generating your JavaScript from some other templating engine (not recommended, e.g. in issue &lt;a href=&quot;https://github.com/angular/angular.js/issues/4006&quot;&gt;#4006&lt;/a&gt;), remember to escape your regular expression (and be aware that you might need more than one level of escaping depending on your templating engine and the way you interpolated the value.) Do make use of your platform's escaping mechanism as it might be good enough before coding your own. E.g. Ruby has &lt;a href=&quot;http://www.ruby-doc.org/core-2.0.0/Regexp.html#method-c-escape&quot;&gt;Regexp.escape(str)&lt;/a&gt; and Python has &lt;a href=&quot;http://docs.python.org/library/re.html#re.escape&quot;&gt;re.escape&lt;/a&gt;. Javascript lacks a similar built in function for escaping. Take a look at Google Closure library's &lt;a href=&quot;http://docs.closure-library.googlecode.com/git/closure_goog_string_string.js.source.html#line962&quot;&gt;goog.string.regExpEscape(s)&lt;/a&gt;.</source>
          <target state="translated">如果要从其他模板引擎生成JavaScript（不建议使用，例如，在问题&lt;a href=&quot;https://github.com/angular/angular.js/issues/4006&quot;&gt;＃4006中&lt;/a&gt;），请记住转义正则表达式（并请注意，根据模板引擎和方式，您可能需要多个转义级别）您插入了值。）请务必使用平台的转义机制，因为在编写自己的转义机制之前可能已经足够了。例如，Ruby具有&lt;a href=&quot;http://www.ruby-doc.org/core-2.0.0/Regexp.html#method-c-escape&quot;&gt;Regexp.escape（str）&lt;/a&gt;，Python具有&lt;a href=&quot;http://docs.python.org/library/re.html#re.escape&quot;&gt;re.escape&lt;/a&gt;。 Javascript缺少类似的内置转义功能。看一下Google Closure库的&lt;a href=&quot;http://docs.closure-library.googlecode.com/git/closure_goog_string_string.js.source.html#line962&quot;&gt;goog.string.regExpEscape（s）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a29cc079c5381669c7a3a9da4c7b33b8f798e95e" translate="yes" xml:space="preserve">
          <source>If you are hitting any of these limitations, the recommended workaround is to convert your object into an array that is sorted into the order that you prefer before providing it to &lt;code&gt;ngRepeat&lt;/code&gt;. You could do this with a filter such as &lt;a href=&quot;http://ngmodules.org/modules/angular-toArrayFilter&quot;&gt;toArrayFilter&lt;/a&gt; or implement a &lt;code&gt;$watch&lt;/code&gt; on the object yourself.</source>
          <target state="translated">如果遇到这些限制中的任何一个，建议的解决方法是将对象转换为数组，然后将其提供给 &lt;code&gt;ngRepeat&lt;/code&gt; ，并按照您希望的顺序进行排序。您可以使用诸如&lt;a href=&quot;http://ngmodules.org/modules/angular-toArrayFilter&quot;&gt;toArrayFilter之类&lt;/a&gt;的过滤器执行此操作，也可以自己在对象上实现 &lt;code&gt;$watch&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="99dd2e2dc29df4f42bc993e77fee00d09330237a" translate="yes" xml:space="preserve">
          <source>If you are just using &lt;a href=&quot;../directive/ngtransclude&quot;&gt;&lt;code&gt;ngTransclude&lt;/code&gt;&lt;/a&gt; then you don't need to worry about this function, since ngTransclude will deal with it for us.</source>
          <target state="translated">如果您只是在使用&lt;a href=&quot;../directive/ngtransclude&quot;&gt; &lt;code&gt;ngTransclude&lt;/code&gt; ,&lt;/a&gt;则无需担心此功能，因为ngTransclude会为我们处理它。</target>
        </trans-unit>
        <trans-unit id="a45454eb838a97c3b99832ac7c22cb8a9f728800" translate="yes" xml:space="preserve">
          <source>If you are not asking the linking function to clone the template, create the DOM element(s) before you send them to the compiler and keep this reference around.</source>
          <target state="translated">如果你不要求链接函数克隆模板,那么在你把DOM元素发送给编译器之前,先创建DOM元素,并保留这个引用。</target>
        </trans-unit>
        <trans-unit id="05854a1d0c3c61abd34a6185ba88099223eaf1f6" translate="yes" xml:space="preserve">
          <source>If you are setting the option value with the option's &lt;code&gt;value&lt;/code&gt; attribute, or textContent, the value will always be a &lt;code&gt;string&lt;/code&gt; which means that the model value must also be a string. Otherwise the &lt;code&gt;select&lt;/code&gt; directive cannot match them correctly.</source>
          <target state="translated">如果使用选项的 &lt;code&gt;value&lt;/code&gt; 属性或textContent 设置选项值，则该值将始终为 &lt;code&gt;string&lt;/code&gt; ，这意味着模型值也必须为字符串。否则， &lt;code&gt;select&lt;/code&gt; 指令不能正确匹配它们。</target>
        </trans-unit>
        <trans-unit id="8616bb7e831e9c34f5ed1c22db4f4d693acd3c1c" translate="yes" xml:space="preserve">
          <source>If you are sure that your project only uses element and attribute directives, and you are not using any 3rd party library that uses directives inside element classes or html comments, you can disable the compilation of directives on element classes and comments for the whole application. This results in a compilation performance gain, as the compiler does not have to check comments and element classes looking for directives.</source>
          <target state="translated">如果你确定你的项目只使用元素和属性指令,而且你没有使用任何在元素类或html注释中使用指令的第三方库,你可以禁止编译整个应用程序的元素类和注释的指令。这将导致编译性能的提高,因为编译器不必检查注释和元素类来寻找指令。</target>
        </trans-unit>
        <trans-unit id="7f18d87980792564416a9131237779e5b2ab35b5" translate="yes" xml:space="preserve">
          <source>If you are using &lt;code&gt;$element&lt;/code&gt; or &lt;code&gt;$attrs&lt;/code&gt; in the controller, make sure to provide them as &lt;code&gt;locals&lt;/code&gt;. The &lt;code&gt;$element&lt;/code&gt; must be a jqLite-wrapped DOM element, and &lt;code&gt;$attrs&lt;/code&gt; should be an object that has all properties / functions that you are using in the controller. If this is getting too complex, you should compile the component instead and access the component's controller via the &lt;a href=&quot;../../ng/function/angular.element#methods.html&quot;&gt;&lt;code&gt;controller&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">如果在控制器中使用 &lt;code&gt;$element&lt;/code&gt; 或 &lt;code&gt;$attrs&lt;/code&gt; ，请确保将其提供为 &lt;code&gt;locals&lt;/code&gt; 。的 &lt;code&gt;$element&lt;/code&gt; 必须是jqLit​​e包裹DOM元素，和 &lt;code&gt;$attrs&lt;/code&gt; 应具有所有特性/功能的一个对象所使用在控制器中。如果这变得太复杂，则应改为编译组件，然后通过&lt;a href=&quot;../../ng/function/angular.element#methods.html&quot;&gt; &lt;code&gt;controller&lt;/code&gt; &lt;/a&gt;函数访问组件的控制器。</target>
        </trans-unit>
        <trans-unit id="62ca6a2bc0e076ff23829bf151f3637b4d8d77f5" translate="yes" xml:space="preserve">
          <source>If you are using a url with a suffix, just add the suffix, like this: &lt;code&gt;$resource('http://example.com/resource.json')&lt;/code&gt; or &lt;code&gt;$resource('http://example.com/:id.json')&lt;/code&gt; or even &lt;code&gt;$resource('http://example.com/resource/:resource_id.:format')&lt;/code&gt; If the parameter before the suffix is empty, :resource_id in this case, then the &lt;code&gt;/.&lt;/code&gt; will be collapsed down to a single &lt;code&gt;.&lt;/code&gt;. If you need this sequence to appear and not collapse then you can escape it with &lt;code&gt;/\.&lt;/code&gt;.</source>
          <target state="translated">如果您使用带后缀的网址，只需添加后缀，例如： &lt;code&gt;$resource('http://example.com/resource.json')&lt;/code&gt; 或 &lt;code&gt;$resource('http://example.com/:id.json')&lt;/code&gt; 甚至 &lt;code&gt;$resource('http://example.com/resource/:resource_id.:format')&lt;/code&gt; 如果后缀之前的参数为空，则在这种情况下为：resource_id，然后为 &lt;code&gt;/.&lt;/code&gt; 将折叠为一个 &lt;code&gt;.&lt;/code&gt; 。如果您需要显示此序列并且不折叠它，则可以使用 &lt;code&gt;/\.&lt;/code&gt; 对其进行转义。。</target>
        </trans-unit>
        <trans-unit id="8175243d5dd6cd4ad446324c5b107b61705e0849" translate="yes" xml:space="preserve">
          <source>If you are writing your controllers as classes you have easier access to the properties and methods, which will appear on the scope, from inside the controller code.</source>
          <target state="translated">如果你把控制器写成类,你可以更容易地从控制器代码内部访问属性和方法,这些属性和方法将出现在作用域上。</target>
        </trans-unit>
        <trans-unit id="579b0bfd8c97d214c17252551f1e2da79f4821e2" translate="yes" xml:space="preserve">
          <source>If you choose to use the old style directive syntax &lt;code&gt;ng:&lt;/code&gt; then include xml-namespace in &lt;code&gt;html&lt;/code&gt; when running the page in the XHTML mode. (This is here for historical reasons, and we no longer recommend use of &lt;code&gt;ng:&lt;/code&gt;.)</source>
          <target state="translated">如果选择使用旧风格的指令语法 &lt;code&gt;ng:&lt;/code&gt; 则在XHTML模式下运行页面时，请在 &lt;code&gt;html&lt;/code&gt; 中包含xml-namespace 。（这是出于历史原因，我们不再建议使用 &lt;code&gt;ng:&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="95ac9993d00393a11c4032cc3f53f03837212f99" translate="yes" xml:space="preserve">
          <source>If you do have CSS transitions / animations defined for the animation events, make sure they have a higher priority than any styles that are not related to &lt;code&gt;ngAnimate&lt;/code&gt;.</source>
          <target state="translated">如果确实为动画事件定义了CSS过渡/动画，请确保它们的优先级高于与 &lt;code&gt;ngAnimate&lt;/code&gt; 不相关的任何样式。</target>
        </trans-unit>
        <trans-unit id="e60f87bc71cf08bbc7d9b1d676646a6c5716f48c" translate="yes" xml:space="preserve">
          <source>If you do not provide &lt;code&gt;ngCsp&lt;/code&gt; then AngularJS tries to autodetect if CSP is blocking dynamic code creation from strings (e.g., &lt;code&gt;unsafe-eval&lt;/code&gt; not specified in CSP header) and automatically deactivates this feature in the &lt;a href=&quot;../service/%24parse&quot;&gt;&lt;code&gt;$parse&lt;/code&gt;&lt;/a&gt; service. This autodetection, however, triggers a CSP error to be logged in the console:</source>
          <target state="translated">如果您不提供 &lt;code&gt;ngCsp&lt;/code&gt; ,则AngularJS会尝试自动检测CSP是否阻止从字符串创建动态代码（例如，在CSP标头中未指定 &lt;code&gt;unsafe-eval&lt;/code&gt; ），并在&lt;a href=&quot;../service/%24parse&quot;&gt; &lt;code&gt;$parse&lt;/code&gt; &lt;/a&gt;服务中自动停用此功能。但是，此自动检测将触发CSP错误，以记录在控制台中：</target>
        </trans-unit>
        <trans-unit id="090e07725aef98ccf8c178d8354126ccc84bb075" translate="yes" xml:space="preserve">
          <source>If you do want your animations to play when the app bootstraps, you can enable animations globally in your main module's &lt;a href=&quot;../api/ng/type/angular.module#run.html&quot;&gt;run&lt;/a&gt; function:</source>
          <target state="translated">如果您确实希望在应用程序引导时播放动画，则可以在主模块的&lt;a href=&quot;../api/ng/type/angular.module#run.html&quot;&gt;运行&lt;/a&gt;功能中全局启用动画：</target>
        </trans-unit>
        <trans-unit id="c54acd5a1055cc95784ce1576ee1d24938a564f3" translate="yes" xml:space="preserve">
          <source>If you have an input that uses &lt;code&gt;ng-model-options&lt;/code&gt; to set up debounced updates or updates that depend on special events such as &lt;code&gt;blur&lt;/code&gt;, there can be a period when the &lt;code&gt;$viewValue&lt;/code&gt; is out of sync with the ngModel's &lt;code&gt;$modelValue&lt;/code&gt;.</source>
          <target state="translated">如果您有使用 &lt;code&gt;ng-model-options&lt;/code&gt; 设置去抖动的更新或依赖于特殊事件（例如 &lt;code&gt;blur&lt;/code&gt; 更新的输入，则可能会有一段时间 &lt;code&gt;$viewValue&lt;/code&gt; 与ngModel的 &lt;code&gt;$modelValue&lt;/code&gt; 不同步。</target>
        </trans-unit>
        <trans-unit id="f76a6558a7d25629fa9ecb3f235d6240ed436b29" translate="yes" xml:space="preserve">
          <source>If you have awesome AngularJS resources that belong on that page, please tell us about them on &lt;a href=&quot;https://plus.google.com/u/0/+AngularJS&quot;&gt;Google+&lt;/a&gt; or &lt;a href=&quot;https://twitter.com/angularjs&quot;&gt;Twitter&lt;/a&gt;.</source>
          <target state="translated">如果该页面上有很棒的AngularJS资源，请通过&lt;a href=&quot;https://plus.google.com/u/0/+AngularJS&quot;&gt;Google+&lt;/a&gt;或&lt;a href=&quot;https://twitter.com/angularjs&quot;&gt;Twitter&lt;/a&gt;告诉我们。</target>
        </trans-unit>
        <trans-unit id="cc605f97c4d62e22545f2f1d9d3a0d4805d17f68" translate="yes" xml:space="preserve">
          <source>If you have very specific requirements about the way items are sorted, you can pass your own comparator function. For example, you might need to compare some strings in a locale-sensitive way. (When specifying a custom comparator, you also need to pass a value for the &lt;code&gt;reverse&lt;/code&gt; argument - passing &lt;code&gt;false&lt;/code&gt; retains the default sorting order, i.e. ascending.)</source>
          <target state="translated">如果您对项目的排序方式有非常特定的要求，则可以传递自己的比较器函数。例如，您可能需要以对语言环境敏感的方式比较一些字符串。（在指定自定义比较器时，您还需要传递一个 &lt;code&gt;reverse&lt;/code&gt; 参数值-传递 &lt;code&gt;false&lt;/code&gt; 会保留默认的排序顺序，即升序。）</target>
        </trans-unit>
        <trans-unit id="83df81bb997c0451e68609a38aa5876c44d17de2" translate="yes" xml:space="preserve">
          <source>If you however do need to write a stateful filter, you have to mark the filter as &lt;code&gt;$stateful&lt;/code&gt;, which means that it will be executed one or more times during the each &lt;code&gt;$digest&lt;/code&gt; cycle.</source>
          <target state="translated">但是，如果确实需要编写有状态过滤器，则必须将过滤器标记为 &lt;code&gt;$stateful&lt;/code&gt; ，这意味着它将在每个 &lt;code&gt;$digest&lt;/code&gt; 循环中执行一次或多次。</target>
        </trans-unit>
        <trans-unit id="207d49b848c74ffcb21da0b752a994a1ebcb5c10" translate="yes" xml:space="preserve">
          <source>If you intend to implement CSP with these rules then you must tell AngularJS not to use these features.</source>
          <target state="translated">如果你打算用这些规则实现CSP,那么你必须告诉AngularJS不要使用这些功能。</target>
        </trans-unit>
        <trans-unit id="870c0ac7d5968a770c3f532b92db58783f974638" translate="yes" xml:space="preserve">
          <source>If you need access to the bound view, there are two ways to do it:</source>
          <target state="translated">如果你需要访问绑定视图,有两种方法。</target>
        </trans-unit>
        <trans-unit id="2aa27655c9b71a602d902a015fc4942f9f7944c1" translate="yes" xml:space="preserve">
          <source>If you need to have more control over the initialization process, you can use a manual bootstrapping method instead. Examples of when you'd need to do this include using script loaders or the need to perform an operation before AngularJS compiles a page.</source>
          <target state="translated">如果你需要对初始化过程有更多的控制,你可以使用手动引导方法来代替。你需要这样做的例子包括使用脚本加载器或需要在AngularJS编译页面之前执行一个操作。</target>
        </trans-unit>
        <trans-unit id="dbca727a7864fd896ef933ac7699c9e2ca5dac44" translate="yes" xml:space="preserve">
          <source>If you need to test a nested Controller you must create the same scope hierarchy in your test that exists in the DOM:</source>
          <target state="translated">如果你需要测试一个嵌套的Controller,你必须在你的测试中创建与DOM中存在的相同的范围层次结构。</target>
        </trans-unit>
        <trans-unit id="d9181af21716003a3c721a1845e6a9eddf078bb2" translate="yes" xml:space="preserve">
          <source>If you omit the &lt;code&gt;name&lt;/code&gt; attribute on a radio input, &lt;code&gt;ngModel&lt;/code&gt; will automatically assign it a unique name.</source>
          <target state="translated">If you omit the &lt;code&gt;name&lt;/code&gt; attribute on a radio input, &lt;code&gt;ngModel&lt;/code&gt; will automatically assign it a unique name.</target>
        </trans-unit>
        <trans-unit id="ecb468ce29d2f458690fba5b025b3f86a8d80c22" translate="yes" xml:space="preserve">
          <source>If you only want a promise that will be resolved after some specified delay then you can call &lt;code&gt;$timeout&lt;/code&gt; without the &lt;code&gt;fn&lt;/code&gt; function.</source>
          <target state="translated">如果只希望在指定的延迟后可以解决的诺言，则可以调用 &lt;code&gt;$timeout&lt;/code&gt; 而不使用 &lt;code&gt;fn&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="a5b2fc07801a43a0c7f77b3da6fcfcbca33ad603" translate="yes" xml:space="preserve">
          <source>If you use a custom comparator, it will be called with pairs of objects of the form &lt;code&gt;{value: ..., type: '...', index: ...}&lt;/code&gt; and is expected to return &lt;code&gt;0&lt;/code&gt; if the objects are equal (as far as the comparator is concerned), &lt;code&gt;-1&lt;/code&gt; if the 1st one should be ranked higher than the second, or &lt;code&gt;1&lt;/code&gt; otherwise.</source>
          <target state="translated">如果您使用自定义比较器，它将以 &lt;code&gt;{value: ..., type: '...', index: ...}&lt;/code&gt; 形式的成对对象调用，并且如果对象相等，则期望返回 &lt;code&gt;0&lt;/code&gt; （就比较器而言），如果第一个比第二个高，则为 &lt;code&gt;-1&lt;/code&gt; ，否则为 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="58f3058d3baff2b3a073006ea03f29eefad6d04e" translate="yes" xml:space="preserve">
          <source>If you want to be notified whenever &lt;a href=&quot;%24rootscope.scope#%24digest.html&quot;&gt;$digest&lt;/a&gt; is called, you can register a &lt;code&gt;watchExpression&lt;/code&gt; function with no &lt;code&gt;listener&lt;/code&gt;. (Be prepared for multiple calls to your &lt;code&gt;watchExpression&lt;/code&gt; because it will execute multiple times in a single &lt;a href=&quot;%24rootscope.scope#%24digest.html&quot;&gt;$digest&lt;/a&gt; cycle if a change is detected.)</source>
          <target state="translated">如果希望在调用&lt;a href=&quot;%24rootscope.scope#%24digest.html&quot;&gt;$ digest&lt;/a&gt;时得到通知，则可以注册一个没有 &lt;code&gt;listener&lt;/code&gt; 的 &lt;code&gt;watchExpression&lt;/code&gt; 函数。（准备好对 &lt;code&gt;watchExpression&lt;/code&gt; 的多次调用，因为如果检测到更改，它将在单个&lt;a href=&quot;%24rootscope.scope#%24digest.html&quot;&gt;$ digest&lt;/a&gt;循环中执行多次。）</target>
        </trans-unit>
        <trans-unit id="6f6cc8237e6dc46dbea8035f91ef1cceb56523a5" translate="yes" xml:space="preserve">
          <source>If you want to be notified whenever &lt;code&gt;$digest()&lt;/code&gt; is called, you can register a &lt;code&gt;watchExpression&lt;/code&gt; function with &lt;a href=&quot;%24rootscope.scope#%24watch.html&quot;&gt;$watch()&lt;/a&gt; with no &lt;code&gt;listener&lt;/code&gt;.</source>
          <target state="translated">如果希望在每次调用 &lt;code&gt;$digest()&lt;/code&gt; 时收到通知，则可以在没有 &lt;code&gt;listener&lt;/code&gt; 向&lt;a href=&quot;%24rootscope.scope#%24watch.html&quot;&gt;$ watch（）&lt;/a&gt;注册 &lt;code&gt;watchExpression&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="ac59abc08a6313ed9820733d9cddfe40a666fa59" translate="yes" xml:space="preserve">
          <source>If you want to keep the default behavior and just add new events that may trigger the model update and validation, add &quot;default&quot; as one of the specified events.</source>
          <target state="translated">如果您想保持默认行为,只需添加可能触发模型更新和验证的新事件,请添加 &quot;默认 &quot;作为指定事件之一。</target>
        </trans-unit>
        <trans-unit id="7ffb3f226f4ffeb1e0ee64801113cc17b7d6cb85" translate="yes" xml:space="preserve">
          <source>If you want to manually control the insertion and removal of the transcluded content in your directive then you must use this transclude function. When you call a transclude function it returns a a jqLite/JQuery object that contains the compiled DOM, which is linked to the correct transclusion scope.</source>
          <target state="translated">如果你想手动控制指令中transclude内容的插入和删除,那么你必须使用这个transclude函数。当你调用transclude函数时,它会返回一个jqLite/JQuery对象,该对象包含编译后的DOM,它被链接到正确的transclusion范围。</target>
        </trans-unit>
        <trans-unit id="a0ea1c4594995ec365515b0f24785bafbd02e2b9" translate="yes" xml:space="preserve">
          <source>If you want to manually control the insertion and removal of the transcluded content in your directive then you must use this transclude function. When you call a transclude function it returns a jqLite/JQuery object that contains the compiled DOM, which is linked to the correct transclusion scope.</source>
          <target state="translated">如果你想手动控制指令中transclude内容的插入和删除,那么你必须使用这个transclude函数。当你调用transclude函数时,它将返回一个jqLite/JQuery对象,该对象包含编译后的DOM,它被链接到正确的transclusion作用域。</target>
        </trans-unit>
        <trans-unit id="350e89977f66c00f278ba622f5c870b1d11fc27e" translate="yes" xml:space="preserve">
          <source>If you want to pass custom options to the &lt;code&gt;$http&lt;/code&gt; service, such as setting the Accept header you can configure this via &lt;a href=&quot;../provider/%24templaterequestprovider#httpOptions.html&quot;&gt;&lt;code&gt;$templateRequestProvider&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果要将自定义选项传递给 &lt;code&gt;$http&lt;/code&gt; 服务，例如设置Accept标头，则可以通过&lt;a href=&quot;../provider/%24templaterequestprovider#httpOptions.html&quot;&gt; &lt;code&gt;$templateRequestProvider&lt;/code&gt; &lt;/a&gt;进行配置。</target>
        </trans-unit>
        <trans-unit id="55cac270f43d60bf68fc09da3ef0e7d2fc46b878" translate="yes" xml:space="preserve">
          <source>If you want to run more complex JavaScript code, you should make it a controller method and call the method from your view. If you want to &lt;code&gt;eval()&lt;/code&gt; an AngularJS expression yourself, use the &lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24eval.html&quot;&gt;&lt;code&gt;$eval()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">如果要运行更复杂的JavaScript代码，则应使其成为控制器方法并从视图中调用该方法。如果您想自己 &lt;code&gt;eval()&lt;/code&gt; 一个AngularJS表达式，请使用&lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24eval.html&quot;&gt; &lt;code&gt;$eval()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="94ef57a2b10b7fb543b9ad681272e7260b865493" translate="yes" xml:space="preserve">
          <source>If you wish to be able to navigate to the application via a URL such as &lt;code&gt;/base&lt;/code&gt; then you should ensure that your server is setup to redirect such requests to &lt;code&gt;/base/&lt;/code&gt;.</source>
          <target state="translated">如果希望能够通过 &lt;code&gt;/base&lt;/code&gt; 之类的URL导航至应用程序，则应确保服务器已设置为将此类请求重定向到 &lt;code&gt;/base/&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4a461bd3d1f4cd564f100034e6f4c026c6547ba8" translate="yes" xml:space="preserve">
          <source>If you wish to debug an application with this information then you should open up a debug console in the browser then call this method directly in this console:</source>
          <target state="translated">如果你想利用这些信息来调试应用程序,那么你应该在浏览器中打开一个调试控制台,然后在这个控制台中直接调用这个方法。</target>
        </trans-unit>
        <trans-unit id="67961efc8f60d457340202b3fece6ab62a772fa8" translate="yes" xml:space="preserve">
          <source>If you wish to exclude these then you can use the native &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/isFinite&quot;&gt;`isFinite'&lt;/a&gt; method.</source>
          <target state="translated">如果要排除这些，则可以使用本机的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/isFinite&quot;&gt;&amp;ldquo; isFinite&amp;rdquo;&lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="febd4482ea90c369092b50e44a77405198b68c7e" translate="yes" xml:space="preserve">
          <source>If you wish to override the request/response transformations only for a single request then provide &lt;code&gt;transformRequest&lt;/code&gt; and/or &lt;code&gt;transformResponse&lt;/code&gt; properties on the configuration object passed into &lt;code&gt;$http&lt;/code&gt;.</source>
          <target state="translated">如果只希望覆盖单个请求的请求/响应转换，则在传递给 &lt;code&gt;$http&lt;/code&gt; 的配置对象上提供 &lt;code&gt;transformRequest&lt;/code&gt; 和/或 &lt;code&gt;transformResponse&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="92efd56723876207dc42707b797385c44e1ed645" translate="yes" xml:space="preserve">
          <source>If you wish, you can manually delegate exceptions, e.g. &lt;code&gt;try { ... } catch(e) { $exceptionHandler(e); }&lt;/code&gt;</source>
          <target state="translated">如果愿意，可以手动委派异常，例如， &lt;code&gt;try { ... } catch(e) { $exceptionHandler(e); }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5dede550c88c109a7aa713ce10867aee17cad1fe" translate="yes" xml:space="preserve">
          <source>If you would like to customise where and how the callbacks are stored then try overriding or decorating the &lt;a href=&quot;%24jsonpcallbacks&quot;&gt;&lt;code&gt;$jsonpCallbacks&lt;/code&gt;&lt;/a&gt; service.</source>
          <target state="translated">如果您想自定义回调的存储位置和方式，请尝试覆盖或装饰&lt;a href=&quot;%24jsonpcallbacks&quot;&gt; &lt;code&gt;$jsonpCallbacks&lt;/code&gt; &lt;/a&gt;服务。</target>
        </trans-unit>
        <trans-unit id="6de6f522958da34b1dcc259678edc0cbe2c6e606" translate="yes" xml:space="preserve">
          <source>If you're using manual bootstrapping, you can also use strict DI by providing &lt;code&gt;strictDi: true&lt;/code&gt; in the optional config argument:</source>
          <target state="translated">如果您使用的是手动引导，则还可以通过在可选的config参数中提供 &lt;code&gt;strictDi: true&lt;/code&gt; 来使用严格的DI ：</target>
        </trans-unit>
        <trans-unit id="27ab337d46310ca730ffb687877a71fd87b9ffd3" translate="yes" xml:space="preserve">
          <source>If your app is currently in the &lt;code&gt;en-US&lt;/code&gt; locale, the browser will show &lt;code&gt;$1000.00&lt;/code&gt;. If someone in the Japanese locale (&lt;code&gt;ja&lt;/code&gt;) views your app, their browser will show a balance of &lt;code&gt;&amp;yen;1000.00&lt;/code&gt; instead. This is problematic because $1000 is not the same as &amp;yen;1000.</source>
          <target state="translated">如果您的应用当前位于 &lt;code&gt;en-US&lt;/code&gt; 语言环境中，则浏览器将显示 &lt;code&gt;$1000.00&lt;/code&gt; 。如果日语区域（ &lt;code&gt;ja&lt;/code&gt; ）中的某人查看您的应用，则其浏览器将显示 &lt;code&gt;&amp;yen;1000.00&lt;/code&gt; 的余额。这是有问题的，因为$ 1000与&amp;yen;1000不同。</target>
        </trans-unit>
        <trans-unit id="1430bac2eebac9bf88d3059ad02454360c8556c7" translate="yes" xml:space="preserve">
          <source>If your directive uses &lt;code&gt;templateUrl&lt;/code&gt;, consider using &lt;a href=&quot;https://github.com/karma-runner/karma-ng-html2js-preprocessor&quot;&gt;karma-ng-html2js-preprocessor&lt;/a&gt; to pre-compile HTML templates and thus avoid having to load them over HTTP during test execution. Otherwise you may run into issues if the test directory hierarchy differs from the application's.</source>
          <target state="translated">如果您的指令使用 &lt;code&gt;templateUrl&lt;/code&gt; ，请考虑使用&lt;a href=&quot;https://github.com/karma-runner/karma-ng-html2js-preprocessor&quot;&gt;karma-ng-html2js-preprocessor&lt;/a&gt;预编译HTML模板，从而避免在测试执行期间通过HTTP加载它们。否则，如果测试目录层次结构与应用程序的层次结构不同，则可能会遇到问题。</target>
        </trans-unit>
        <trans-unit id="93fe649037fb09c8d4e2db87fdce1cee0df7982c" translate="yes" xml:space="preserve">
          <source>If your expressions are constant literals, they're automatically trusted and you don't need to call &lt;code&gt;$sce.trustAs&lt;/code&gt; on them (e.g. &lt;code&gt;&amp;lt;div ng-bind-html=&quot;'&amp;lt;b&amp;gt;implicitly trusted&amp;lt;/b&amp;gt;'&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;) just works (remember to include the &lt;code&gt;ngSanitize&lt;/code&gt; module). The &lt;code&gt;$sceDelegate&lt;/code&gt; will also use the &lt;code&gt;$sanitize&lt;/code&gt; service if it is available when binding untrusted values to &lt;code&gt;$sce.HTML&lt;/code&gt; context. AngularJS provides an implementation in &lt;code&gt;angular-sanitize.js&lt;/code&gt;, and if you wish to use it, you will also need to depend on the &lt;a href=&quot;../../ngsanitize&quot;&gt;&lt;code&gt;ngSanitize&lt;/code&gt;&lt;/a&gt; module in your application.</source>
          <target state="translated">如果您的表达式是常量文字，那么它们将自动被信任，并且您无需在它们上调用 &lt;code&gt;$sce.trustAs&lt;/code&gt; （例如 &lt;code&gt;&amp;lt;div ng-bind-html=&quot;'&amp;lt;b&amp;gt;implicitly trusted&amp;lt;/b&amp;gt;'&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt; ）即可正常使用（请记住包括 &lt;code&gt;ngSanitize&lt;/code&gt; 模块）。该 &lt;code&gt;$sceDelegate&lt;/code&gt; 也将使用 &lt;code&gt;$sanitize&lt;/code&gt; 服务，如果它不受信任值结合时可用 &lt;code&gt;$sce.HTML&lt;/code&gt; 上下文。 AngularJS在 &lt;code&gt;angular-sanitize.js&lt;/code&gt; 中提供了一个实现，如果您想使用它，则还需要依赖于应用程序中的&lt;a href=&quot;../../ngsanitize&quot;&gt; &lt;code&gt;ngSanitize&lt;/code&gt; &lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="ab4db8d966388aab90159f0307d07fcccc35f63f" translate="yes" xml:space="preserve">
          <source>Imagine you want to have a container with tabs in which the contents of the container correspond to which tab is active.</source>
          <target state="translated">想象一下,你想拥有一个带有标签的容器,容器中的内容与哪个标签处于活动状态相对应。</target>
        </trans-unit>
        <trans-unit id="6b84004070116f71855a9922d8e631eb72f699dc" translate="yes" xml:space="preserve">
          <source>Impact on loading templates</source>
          <target state="translated">对加载模板的影响</target>
        </trans-unit>
        <trans-unit id="20b1bba1cb06ab8386a24bd0d8dfecea07cd7671" translate="yes" xml:space="preserve">
          <source>Implementing custom form controls (using ngModel)</source>
          <target state="translated">实现自定义表单控件(使用ngModel)。</target>
        </trans-unit>
        <trans-unit id="bd06cedc31ae5b22c03264197e96ab3c19ffede6" translate="yes" xml:space="preserve">
          <source>Implicit Annotation</source>
          <target state="translated">隐性注解</target>
        </trans-unit>
        <trans-unit id="096ba44a184249033cb9a0bb4ffebe2657bba416" translate="yes" xml:space="preserve">
          <source>Implicit module which gets automatically added to each &lt;a href=&quot;auto/service/%24injector&quot;&gt;$injector&lt;/a&gt;.</source>
          <target state="translated">隐式模块会自动添加到每个&lt;a href=&quot;auto/service/%24injector&quot;&gt;$ injector中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4723ddf746f3809e3b1477e490d52c8337146616" translate="yes" xml:space="preserve">
          <source>Implicitly from the function parameter names (has caveats)</source>
          <target state="translated">隐含在函数参数名中(有注意事项)</target>
        </trans-unit>
        <trans-unit id="8eecc4f94a1b1fe69acddb79e183178a9e26df1a" translate="yes" xml:space="preserve">
          <source>Important things to notice:</source>
          <target state="translated">需要注意的重要事项。</target>
        </trans-unit>
        <trans-unit id="3f98eeaab6110938e71c2879641215dabb0c66ef" translate="yes" xml:space="preserve">
          <source>In AngularJS applications, you move the job of filling page templates with data from the server to the client. The result is a system better structured for dynamic page updates. Below are the core features you'll use.</source>
          <target state="translated">在AngularJS应用中,你把用数据填充页面模板的工作从服务器转移到客户端。其结果是一个结构更好的系统,以实现动态页面更新。以下是你会用到的核心功能。</target>
        </trans-unit>
        <trans-unit id="1c4f4ac01e027f6469e6478b81104e9792711986" translate="yes" xml:space="preserve">
          <source>In AngularJS forms, this is not necessary. The input's state will be updated based on the value of the underlying model data.</source>
          <target state="translated">在AngularJS表单中,这一点是不必要的。输入的状态将根据底层模型数据的值进行更新。</target>
        </trans-unit>
        <trans-unit id="b597dc43f8f9e0a6d2155495f4e5474be04320ca" translate="yes" xml:space="preserve">
          <source>In AngularJS, a Component is a special kind of &lt;a href=&quot;directive&quot;&gt;directive&lt;/a&gt; that uses a simpler configuration which is suitable for a component-based application structure.</source>
          <target state="translated">在AngularJS中，组件是一种特殊的&lt;a href=&quot;directive&quot;&gt;指令&lt;/a&gt;，它使用更简单的配置，适用于基于组件的应用程序结构。</target>
        </trans-unit>
        <trans-unit id="cbbc814b28ce35865c1e769b822e5f29dc4de827" translate="yes" xml:space="preserve">
          <source>In AngularJS, a Controller is defined by a JavaScript &lt;strong&gt;constructor function&lt;/strong&gt; that is used to augment the &lt;a href=&quot;scope&quot;&gt;AngularJS Scope&lt;/a&gt;.</source>
          <target state="translated">在AngularJS中，控制器是由JavaScript &lt;strong&gt;构造函数&lt;/strong&gt;定义的，该&lt;strong&gt;函数&lt;/strong&gt;用于增强&lt;a href=&quot;scope&quot;&gt;AngularJS Scope&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1a5efbd64f006dff6c25bf138c6b220b436c7355" translate="yes" xml:space="preserve">
          <source>In AngularJS, forms can be nested. This means that the outer form is valid when all of the child forms are valid as well. However, browsers do not allow nesting of &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; elements, so AngularJS provides the &lt;a href=&quot;ngform&quot;&gt;&lt;code&gt;ngForm&lt;/code&gt;&lt;/a&gt; directive, which behaves identically to &lt;code&gt;form&lt;/code&gt; but can be nested. Nested forms can be useful, for example, if the validity of a sub-group of controls needs to be determined.</source>
          <target state="translated">在AngularJS中，表单可以嵌套。这意味着外部形式在所有子形式都有效时也有效。但是，浏览器不允许嵌套 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 元素，因此AngularJS提供了&lt;a href=&quot;ngform&quot;&gt; &lt;code&gt;ngForm&lt;/code&gt; &lt;/a&gt;指令，该指令的行为与 &lt;code&gt;form&lt;/code&gt; 相同，但可以嵌套。嵌套形式可能很有用，例如，如果需要确定控件子组的有效性。</target>
        </trans-unit>
        <trans-unit id="03844de6e8b1d50475106d63d0d10f3d8c611949" translate="yes" xml:space="preserve">
          <source>In AngularJS, templates are written with HTML that contains AngularJS-specific elements and attributes. AngularJS combines the template with information from the model and controller to render the dynamic view that a user sees in the browser.</source>
          <target state="translated">在AngularJS中,模板是用HTML编写的,其中包含AngularJS特有的元素和属性。AngularJS将模板与模型和控制器的信息结合起来,呈现出用户在浏览器中看到的动态视图。</target>
        </trans-unit>
        <trans-unit id="a1f619517bf2bbf5ed7ed5d2dc4a8bbb5b243e43" translate="yes" xml:space="preserve">
          <source>In HTML Template Binding</source>
          <target state="translated">在HTML模板绑定中</target>
        </trans-unit>
        <trans-unit id="2e80ed003402377171ce0924403b8c90164f9832" translate="yes" xml:space="preserve">
          <source>In HTML5 mode, the &lt;code&gt;$location&lt;/code&gt; service getters and setters interact with the browser URL address through the HTML5 history API. This allows for use of regular URL path and search segments, instead of their hashbang equivalents. If the HTML5 History API is not supported by a browser, the &lt;code&gt;$location&lt;/code&gt; service will fall back to using the hashbang URLs automatically. This frees you from having to worry about whether the browser displaying your app supports the history API or not; the &lt;code&gt;$location&lt;/code&gt; service transparently uses the best available option.</source>
          <target state="translated">在HTML5模式下， &lt;code&gt;$location&lt;/code&gt; 服务获取器和设置器通过HTML5历史记录API与浏览器URL地址进行交互。这允许使用常规的URL路径和搜索段，而不是它们的hashbang等效项。如果浏览器不支持HTML5历史记录API，则 &lt;code&gt;$location&lt;/code&gt; 服务将自动转为使用hashbang URL。这使您不必担心显示您的应用的浏览器是否支持历史API。在 &lt;code&gt;$location&lt;/code&gt; 服务透明地使用最好的选择。</target>
        </trans-unit>
        <trans-unit id="c291168b9231a4e5740fc0f7c7f24071d1ef1309" translate="yes" xml:space="preserve">
          <source>In Jasmine we use the &lt;code&gt;describe&lt;/code&gt; function to group our tests together:</source>
          <target state="translated">在Jasmine中，我们使用 &lt;code&gt;describe&lt;/code&gt; 函数将测试分组在一起：</target>
        </trans-unit>
        <trans-unit id="a823b45ca87464c258e471b13899cdf061f7a1d1" translate="yes" xml:space="preserve">
          <source>In JavaScript</source>
          <target state="translated">在JavaScript中</target>
        </trans-unit>
        <trans-unit id="bbd50f6eadbfc76eda0b9ce7716de2fb5a24fcf4" translate="yes" xml:space="preserve">
          <source>In JavaScript calling &lt;code&gt;toString()&lt;/code&gt; on a function returns the function definition. The definition can then be parsed and the function arguments can be extracted. This method of discovering annotations is disallowed when the injector is in strict mode. &lt;em&gt;NOTE:&lt;/em&gt; This does not work with minification, and obfuscation tools since these tools change the argument names.</source>
          <target state="translated">在JavaScript中，在函数上调用 &lt;code&gt;toString()&lt;/code&gt; 会返回函数定义。然后可以解析该定义，并可以提取函数参数。当注入器处于严格模式时，不允许使用这种发现注释的方法。&lt;em&gt;注意：&lt;/em&gt;这不适用于缩小和混淆工具，因为这些工具会更改参数名称。</target>
        </trans-unit>
        <trans-unit id="1b54f06dab3f6e1ac9b946e1f4b43d7b0403e35c" translate="yes" xml:space="preserve">
          <source>In a legacy browser, the URL changes to &lt;code&gt;/index.html#!/some?foo=bar&lt;/code&gt;</source>
          <target state="translated">在旧版浏览器中，URL更改为 &lt;code&gt;/index.html#!/some?foo=bar&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1c5b58dd4eafa0d4a18da8ca18883a8ad953b136" translate="yes" xml:space="preserve">
          <source>In a modern browser, the URL changes to &lt;code&gt;/some?foo=bar&lt;/code&gt;</source>
          <target state="translated">在现代浏览器中，URL更改为 &lt;code&gt;/some?foo=bar&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a3a7a9d6c6de28fb043fa931b25966d7356a56f7" translate="yes" xml:space="preserve">
          <source>In a more complex app, you can display multiple views within one main page using &quot;partials&quot; &amp;ndash; segments of template located in separate HTML files. You can use the &lt;a href=&quot;../api/ngroute/directive/ngview&quot;&gt;ngView&lt;/a&gt; directive to load partials based on configuration passed to the &lt;a href=&quot;../api/ngroute/service/%24route&quot;&gt;$route&lt;/a&gt; service. The &lt;a href=&quot;https://code.angularjs.org/1.7.8/docs/guide/tutorial/&quot;&gt;AngularJS tutorial&lt;/a&gt; shows this technique in steps seven and eight.</source>
          <target state="translated">在更复杂的应用程序中，您可以使用&amp;ldquo;部分&amp;rdquo;（位于单独HTML文件中的模板段）在一个主页上显示多个视图。您可以使用&lt;a href=&quot;../api/ngroute/directive/ngview&quot;&gt;ngView&lt;/a&gt;指令根据传递给&lt;a href=&quot;../api/ngroute/service/%24route&quot;&gt;$ route&lt;/a&gt;服务的配置加载部分。该&lt;a href=&quot;https://code.angularjs.org/1.7.8/docs/guide/tutorial/&quot;&gt;AngularJS教程&lt;/a&gt;显示步骤七，八这项技术。</target>
        </trans-unit>
        <trans-unit id="9f1cddade303a6c5111dc5a24b1534a289b20314" translate="yes" xml:space="preserve">
          <source>In a more complex app, you can display multiple views within one main page using &quot;partials&quot; &amp;ndash; segments of template located in separate HTML files. You can use the &lt;a href=&quot;../api/ngroute/directive/ngview&quot;&gt;ngView&lt;/a&gt; directive to load partials based on configuration passed to the &lt;a href=&quot;../api/ngroute/service/%24route&quot;&gt;$route&lt;/a&gt; service. The &lt;a href=&quot;https://code.angularjs.org/1.8.2/docs/guide/tutorial/&quot;&gt;AngularJS tutorial&lt;/a&gt; shows this technique in steps seven and eight.</source>
          <target state="translated">In a more complex app, you can display multiple views within one main page using &quot;partials&quot; &amp;ndash; segments of template located in separate HTML files. You can use the &lt;a href=&quot;../api/ngroute/directive/ngview&quot;&gt;ngView&lt;/a&gt; directive to load partials based on configuration passed to the &lt;a href=&quot;../api/ngroute/service/%24route&quot;&gt;$route&lt;/a&gt; service. The &lt;a href=&quot;https://code.angularjs.org/1.8.2/docs/guide/tutorial/&quot;&gt;AngularJS tutorial&lt;/a&gt; shows this technique in steps seven and eight.</target>
        </trans-unit>
        <trans-unit id="0c0c40a1378e0d2f42f6d4f7be33566e03db6b53" translate="yes" xml:space="preserve">
          <source>In a simple app, the template consists of HTML, CSS, and AngularJS directives contained in just one HTML file (usually &lt;code&gt;index.html&lt;/code&gt;).</source>
          <target state="translated">在一个简单的应用程序中，模板由仅包含在一个HTML文件（通常为 &lt;code&gt;index.html&lt;/code&gt; ）中的HTML，CSS和AngularJS指令组成。</target>
        </trans-unit>
        <trans-unit id="e674faa938f37f1939ece405364297bb3d2958a2" translate="yes" xml:space="preserve">
          <source>In a single module the order of execution is as follows:</source>
          <target state="translated">在单个模块中,执行顺序如下。</target>
        </trans-unit>
        <trans-unit id="749307d1cbfaf16fe4aabba520b82ae1902a1b6a" translate="yes" xml:space="preserve">
          <source>In addition the addition and removal of the CSS class, ngAnimate also provides two helper methods that we can use to further decorate the animation with CSS styles.</source>
          <target state="translated">除了CSS类的添加和删除,ngAnimate还提供了两个辅助方法,我们可以用CSS样式来进一步装饰动画。</target>
        </trans-unit>
        <trans-unit id="6321ce8bd6ac1756913a159906eecc022bf64796" translate="yes" xml:space="preserve">
          <source>In addition to all the regular &lt;code&gt;Scope&lt;/code&gt; methods, the following helper methods are available:</source>
          <target state="translated">除了所有常规的 &lt;code&gt;Scope&lt;/code&gt; 方法之外，还可以使用以下辅助方法：</target>
        </trans-unit>
        <trans-unit id="b766677551b49d250621b2a334d198d39eec2e53" translate="yes" xml:space="preserve">
          <source>In addition to prioritization, ngMessages also allows for including messages from a remote or an inline template. This allows for generic collection of messages to be reused across multiple parts of an application.</source>
          <target state="translated">除了优先级之外,ngMessages还允许包括来自远程或内联模板的消息。这使得通用的消息集合可以在应用程序的多个部分重复使用。</target>
        </trans-unit>
        <trans-unit id="716143d7f33a871721bcf40bfd2db07a6cdb72d7" translate="yes" xml:space="preserve">
          <source>In addition to the above elements, tests may also contain helper functions to avoid duplicating code in the &lt;code&gt;it&lt;/code&gt; blocks.</source>
          <target state="translated">除上述元素外，测试还可能包含辅助函数，以避免在 &lt;code&gt;it&lt;/code&gt; 块中重复代码。</target>
        </trans-unit>
        <trans-unit id="470ea7a4e5c2fe6de7091aa6f7ec21ee51897509" translate="yes" xml:space="preserve">
          <source>In addition to the animation promise, we can also make use of animation-related callbacks within our directives and controller code by registering an event listener using the &lt;code&gt;$animate&lt;/code&gt; service. Let's say for example that an animation was triggered on our view routing controller to hook into that:</source>
          <target state="translated">除了动画承诺外，我们还可以通过使用 &lt;code&gt;$animate&lt;/code&gt; 服务注册事件侦听器，在指令和控制器代码中利用与动画相关的回调。例如，假设在我们的视图路由控制器上触发了一个动画，以使其与该动画挂钩：</target>
        </trans-unit>
        <trans-unit id="1699cbe96c0e4716d740c691996232ad4e5fe565" translate="yes" xml:space="preserve">
          <source>In addition, the browser's &lt;a href=&quot;https://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_XMLHttpRequest&quot;&gt;Same Origin Policy&lt;/a&gt; and &lt;a href=&quot;http://www.w3.org/TR/cors/&quot;&gt;Cross-Origin Resource Sharing (CORS)&lt;/a&gt; policy may further restrict whether the template is successfully loaded. For example, &lt;code&gt;ngInclude&lt;/code&gt; won't work for cross-domain requests on all browsers and for &lt;code&gt;file://&lt;/code&gt; access on some browsers.</source>
          <target state="translated">此外，浏览器的&amp;ldquo; &lt;a href=&quot;https://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_XMLHttpRequest&quot;&gt;相同来源策略&amp;rdquo;&lt;/a&gt;和&amp;ldquo; &lt;a href=&quot;http://www.w3.org/TR/cors/&quot;&gt;跨域资源共享（CORS）&amp;rdquo;&lt;/a&gt;策略可能会进一步限制模板是否成功加载。例如， &lt;code&gt;ngInclude&lt;/code&gt; 不适用于所有浏览器上的跨域请求和某些浏览器上的 &lt;code&gt;file://&lt;/code&gt; 访问。</target>
        </trans-unit>
        <trans-unit id="a57b0290a74b9eb78ccc15559fe648219b660cfc" translate="yes" xml:space="preserve">
          <source>In addition, you can supply a &lt;code&gt;headers&lt;/code&gt; property in the config object passed when calling &lt;code&gt;$http(config)&lt;/code&gt;, which overrides the defaults without changing them globally.</source>
          <target state="translated">另外，您可以在调用 &lt;code&gt;$http(config)&lt;/code&gt; 时传递的config对象中提供 &lt;code&gt;headers&lt;/code&gt; 属性，该属性将覆盖默认值而不全局更改它们。</target>
        </trans-unit>
        <trans-unit id="589af7f1aae2e3ad6aab5df9c86b6c8e31638595" translate="yes" xml:space="preserve">
          <source>In all of these examples we are going to assume this module definition:</source>
          <target state="translated">在所有这些例子中,我们都将假设这个模块定义。</target>
        </trans-unit>
        <trans-unit id="2ba4bd29bc7d7975c3e58c60de7ab29abd9339c6" translate="yes" xml:space="preserve">
          <source>In an effort to keep synchronized with router changes in the new Angular, this implementation of the Component Router (ngComponentRouter module) has been deprecated and will not receive further updates. We are investigating backporting the Router for the new Angular to AngularJS, but alternatively, use the &lt;a href=&quot;../../ngroute&quot;&gt;&lt;code&gt;ngRoute&lt;/code&gt;&lt;/a&gt; module or community developed projects (e.g. &lt;a href=&quot;https://github.com/angular-ui/ui-router&quot;&gt;ui-router&lt;/a&gt;).</source>
          <target state="translated">为了与新Angular中的路由器更改保持同步，组件路由器（ngComponentRouter模块）的此实现已被弃用，并且将不接收进一步的更新。我们正在研究将新的Angular的路由器&lt;a href=&quot;../../ngroute&quot;&gt; &lt;code&gt;ngRoute&lt;/code&gt; &lt;/a&gt;移植到AngularJS，但也可以使用ngRoute模块或社区开发的项目（例如&lt;a href=&quot;https://github.com/angular-ui/ui-router&quot;&gt;ui-router&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="667b1ad2855f853d06e0711549d307d56aa4fdca" translate="yes" xml:space="preserve">
          <source>In an effort to keep synchronized with router changes in the new Angular, this implementation of the Component Router (ngComponentRouter module) has been deprecated and will not receive further updates. We are investigating backporting the Router for the new Angular to AngularJS, but alternatively, use the &lt;a href=&quot;ngroute&quot;&gt;&lt;code&gt;ngRoute&lt;/code&gt;&lt;/a&gt; module or community developed projects (e.g. &lt;a href=&quot;https://github.com/angular-ui/ui-router&quot;&gt;ui-router&lt;/a&gt;).</source>
          <target state="translated">为了与新Angular中的路由器更改保持同步，组件路由器（ngComponentRouter模块）的此实现已被弃用，并且将不接收进一步的更新。我们正在研究将新的Angular的路由器&lt;a href=&quot;ngroute&quot;&gt; &lt;code&gt;ngRoute&lt;/code&gt; &lt;/a&gt;移植到AngularJS，但也可以使用ngRoute模块或社区开发的项目（例如&lt;a href=&quot;https://github.com/angular-ui/ui-router&quot;&gt;ui-router&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="9386991172b647254fafb7d351016e610e121394" translate="yes" xml:space="preserve">
          <source>In any case, the value passed to the method should always reflect the current value of the control. For example, if you are calling &lt;code&gt;$setViewValue&lt;/code&gt; for an input element, you should pass the input DOM value. Otherwise, the control and the scope model become out of sync. It's also important to note that &lt;code&gt;$setViewValue&lt;/code&gt; does not call &lt;code&gt;$render&lt;/code&gt; or change the control's DOM value in any way. If we want to change the control's DOM value programmatically, we should update the &lt;code&gt;ngModel&lt;/code&gt; scope expression. Its new value will be picked up by the model controller, which will run it through the &lt;code&gt;$formatters&lt;/code&gt;, &lt;code&gt;$render&lt;/code&gt; it to update the DOM, and finally call &lt;code&gt;$validate&lt;/code&gt; on it.</source>
          <target state="translated">无论如何，传递给方法的值应始终反映控件的当前值。例如，如果要为输入元素调用 &lt;code&gt;$setViewValue&lt;/code&gt; ，则应传递输入DOM值。否则，控件和范围模型将不同步。还必须注意， &lt;code&gt;$setViewValue&lt;/code&gt; 不会以任何方式调用 &lt;code&gt;$render&lt;/code&gt; 或更改控件的DOM值。如果要以编程方式更改控件的DOM值，则应更新 &lt;code&gt;ngModel&lt;/code&gt; 范围表达式。其新的价值将通过模型控制器，它会运行它通过拾起 &lt;code&gt;$formatters&lt;/code&gt; ， &lt;code&gt;$render&lt;/code&gt; 它更新DOM，最后调用 &lt;code&gt;$validate&lt;/code&gt; 就可以了。</target>
        </trans-unit>
        <trans-unit id="68fe7d927164f0e298a884af50c62aebe47691da" translate="yes" xml:space="preserve">
          <source>In both examples, the &lt;strong&gt;&lt;code&gt;track by&lt;/code&gt;&lt;/strong&gt; expression is applied successfully to each &lt;code&gt;item&lt;/code&gt; in the &lt;code&gt;items&lt;/code&gt; array. Because the selected option has been set programmatically in the controller, the &lt;strong&gt;&lt;code&gt;track by&lt;/code&gt;&lt;/strong&gt; expression is also applied to the &lt;code&gt;ngModel&lt;/code&gt; value. In the first example, the &lt;code&gt;ngModel&lt;/code&gt; value is &lt;code&gt;items[0]&lt;/code&gt; and the &lt;strong&gt;&lt;code&gt;track by&lt;/code&gt;&lt;/strong&gt; expression evaluates to &lt;code&gt;items[0].id&lt;/code&gt; with no issue. In the second example, the &lt;code&gt;ngModel&lt;/code&gt; value is &lt;code&gt;items[0].subItem&lt;/code&gt; and the &lt;strong&gt;&lt;code&gt;track by&lt;/code&gt;&lt;/strong&gt; expression evaluates to &lt;code&gt;items[0].subItem.id&lt;/code&gt; (which is undefined). As a result, the model value is not matched against any &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; and the &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; appears as having no selected value.</source>
          <target state="translated">在两个示例中，&lt;strong&gt; &lt;code&gt;track by&lt;/code&gt; &lt;/strong&gt;表达式&lt;strong&gt;跟踪&lt;/strong&gt;都已成功应用于 &lt;code&gt;items&lt;/code&gt; 数组中的每个 &lt;code&gt;item&lt;/code&gt; 。由于已在控制器中以编程方式设置了选定的选项，因此&lt;strong&gt; &lt;code&gt;track by&lt;/code&gt; &lt;/strong&gt;表达式&lt;strong&gt;跟踪&lt;/strong&gt;也将应用于 &lt;code&gt;ngModel&lt;/code&gt; 值。在第一个示例中， &lt;code&gt;ngModel&lt;/code&gt; 的值是 &lt;code&gt;items[0]&lt;/code&gt; 并且&lt;strong&gt; &lt;code&gt;track by&lt;/code&gt; &lt;/strong&gt;表达式&lt;strong&gt;跟踪的结果&lt;/strong&gt;为 &lt;code&gt;items[0].id&lt;/code&gt; ，没有问题。在第二个示例中， &lt;code&gt;ngModel&lt;/code&gt; 的值为 &lt;code&gt;items[0].subItem&lt;/code&gt; ，表达式的&lt;strong&gt; &lt;code&gt;track by&lt;/code&gt; &lt;/strong&gt;为 &lt;code&gt;items[0].subItem.id&lt;/code&gt; &lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;（未定义）。结果，模型值与任何 &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; 不匹配，并且 &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; 似乎没有选定值。</target>
        </trans-unit>
        <trans-unit id="5db12307c0b10381c7de9de7d244ed95abd76ff2" translate="yes" xml:space="preserve">
          <source>In browsers that follow the &lt;a href=&quot;https://html.spec.whatwg.org/multipage/forms.html#number-state-%28type=number%29&quot;&gt;HTML5 specification&lt;/a&gt;, &lt;code&gt;input[number]&lt;/code&gt; does not work as expected with &lt;a href=&quot;../directive/ngmodeloptions&quot;&gt;&lt;code&gt;ngModelOptions.allowInvalid&lt;/code&gt;&lt;/a&gt;. If a non-number is entered in the input, the browser will report the value as an empty string, which means the view / model values in &lt;code&gt;ngModel&lt;/code&gt; and subsequently the scope value will also be an empty string.</source>
          <target state="translated">In browsers that follow the &lt;a href=&quot;https://html.spec.whatwg.org/multipage/forms.html#number-state-%28type=number%29&quot;&gt;HTML5 specification&lt;/a&gt;, &lt;code&gt;input[number]&lt;/code&gt; does not work as expected with &lt;a href=&quot;../directive/ngmodeloptions&quot;&gt; &lt;code&gt;ngModelOptions.allowInvalid&lt;/code&gt; &lt;/a&gt;. If a non-number is entered in the input, the browser will report the value as an empty string, which means the view / model values in &lt;code&gt;ngModel&lt;/code&gt; and subsequently the scope value will also be an empty string.</target>
        </trans-unit>
        <trans-unit id="e3e1a3ce31bec47d5200ef4cf60ace5abb3ccfe7" translate="yes" xml:space="preserve">
          <source>In case of parameter name collision, &lt;code&gt;path&lt;/code&gt; params take precedence over &lt;code&gt;search&lt;/code&gt; params.</source>
          <target state="translated">在参数名称冲突的情况下， &lt;code&gt;path&lt;/code&gt; 参数优先于 &lt;code&gt;search&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="c26867c8ed3c13342fd31b32bf994a5c01045f08" translate="yes" xml:space="preserve">
          <source>In case the &lt;a href=&quot;../directive/ngmodeloptions&quot;&gt;ngModelOptions&lt;/a&gt; directive is used with &lt;code&gt;updateOn&lt;/code&gt; and the &lt;code&gt;default&lt;/code&gt; trigger is not listed, all those actions will remain pending until one of the &lt;code&gt;updateOn&lt;/code&gt; events is triggered on the DOM element. All these actions will be debounced if the &lt;a href=&quot;../directive/ngmodeloptions&quot;&gt;ngModelOptions&lt;/a&gt; directive is used with a custom debounce for this particular event. Note that a &lt;code&gt;$digest&lt;/code&gt; is only triggered once the &lt;code&gt;updateOn&lt;/code&gt; events are fired, or if &lt;code&gt;debounce&lt;/code&gt; is specified, once the timer runs out.</source>
          <target state="translated">如果&lt;a href=&quot;../directive/ngmodeloptions&quot;&gt;ngModelOptions&lt;/a&gt;指令与 &lt;code&gt;updateOn&lt;/code&gt; 一起使用并且未列出 &lt;code&gt;default&lt;/code&gt; 触发器，则所有这些动作将保持待处理状态，直到在DOM元素上触发了 &lt;code&gt;updateOn&lt;/code&gt; 事件之一。如果将&lt;a href=&quot;../directive/ngmodeloptions&quot;&gt;ngModelOptions&lt;/a&gt;指令与针对此特定事件的自定义防抖一起使用，则所有这些操作都将被防抖动。请注意，只有在触发 &lt;code&gt;updateOn&lt;/code&gt; 事件时，或者如果指定了 &lt;code&gt;debounce&lt;/code&gt; ，一旦计时器用尽，才会触发 &lt;code&gt;$digest&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dbb2128824b196014baa5c500781714a968857a4" translate="yes" xml:space="preserve">
          <source>In cases like the following, links are not rewritten; instead, the browser will perform a full page reload to the original link.</source>
          <target state="translated">在以下情况下,链接不会被重写;相反,浏览器会执行全页面重载到原始链接。</target>
        </trans-unit>
        <trans-unit id="eb1595edfe03ceecabe189afd4c1478336da4f55" translate="yes" xml:space="preserve">
          <source>In cases where both backend definitions and request expectations are specified during unit testing, the request expectations are evaluated first.</source>
          <target state="translated">在单元测试中同时指定后端定义和请求期望的情况下,首先评估请求期望。</target>
        </trans-unit>
        <trans-unit id="bf55b6216c29164cc9616d092551ba62d75a0676" translate="yes" xml:space="preserve">
          <source>In complex applications it's possible that dependencies between &lt;code&gt;$onChanges&lt;/code&gt; hooks and bindings will result in several iterations of calls to these hooks. However if an application needs more than the default 10 iterations to stabilize then you should investigate what is causing the model to continuously change during the &lt;code&gt;$onChanges&lt;/code&gt; hook execution.</source>
          <target state="translated">在复杂的应用程序中， &lt;code&gt;$onChanges&lt;/code&gt; 挂钩和绑定之间的依赖关系可能会导致对这些挂钩的多次调用迭代。但是，如果应用程序需要稳定多个默认值之外的10次迭代，则应调查在 &lt;code&gt;$onChanges&lt;/code&gt; 挂钩执行期间导致模型不断更改的原因。</target>
        </trans-unit>
        <trans-unit id="572607a7218cef33ac940e82902038d02ae937e5" translate="yes" xml:space="preserve">
          <source>In complex applications it's possible that the dependencies between &lt;code&gt;$watch&lt;/code&gt;s will result in several digest iterations. However if an application needs more than the default 10 digest iterations for its model to stabilize then you should investigate what is causing the model to continuously change during the digest.</source>
          <target state="translated">在复杂的应用程序中， &lt;code&gt;$watch&lt;/code&gt; 之间的依赖关系可能会导致多次摘要迭代。但是，如果应用程序需要超过默认的10个摘要迭代来使其模型稳定，那么您应该研究是什么原因导致模型在摘要期间不断变化。</target>
        </trans-unit>
        <trans-unit id="a6327a6402c02d7879a52df32482acae297464b3" translate="yes" xml:space="preserve">
          <source>In general it's possible to apply more than one directive to one element, but there might be limitations depending on the type of scope required by the directives. The following points will help explain these limitations. For simplicity only two directives are taken into account, but it is also applicable for several directives:</source>
          <target state="translated">一般来说,一个元素可以应用一个以上的指令,但根据指令所要求的范围类型,可能会有一些限制。以下几点将有助于解释这些限制。为了简单起见,只考虑了两个指令,但它也适用于多个指令。</target>
        </trans-unit>
        <trans-unit id="d65eb267b1b0354141999d7194c0a15d48c760f2" translate="yes" xml:space="preserve">
          <source>In general, a Controller shouldn't try to do too much. It should contain only the business logic needed for a single view.</source>
          <target state="translated">一般来说,Controller不应该尝试做太多的事情。它应该只包含单个视图所需的业务逻辑。</target>
        </trans-unit>
        <trans-unit id="12b68495b61d68a58ae4306b8d4fa6a9c7a5a8c9" translate="yes" xml:space="preserve">
          <source>In general, the match between the model and an option is evaluated by strictly comparing the model value against the value of the available options.</source>
          <target state="translated">一般来说,模型和期权之间的匹配度是通过严格比较模型的价值和可用期权的价值来评估的。</target>
        </trans-unit>
        <trans-unit id="c9ab8714b380fd88731ce6a010864a6dad2a5821" translate="yes" xml:space="preserve">
          <source>In general, this applies only to filters that take &lt;a href=&quot;https://developer.mozilla.org/docs/Glossary/Primitive&quot;&gt;primitive values&lt;/a&gt; as inputs. Filters that receive &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Objects&quot;&gt;Objects&lt;/a&gt; as input are executed on each &lt;code&gt;$digest&lt;/code&gt;, as it would be too costly to track if the inputs have changed.</source>
          <target state="translated">通常，这仅适用于将&lt;a href=&quot;https://developer.mozilla.org/docs/Glossary/Primitive&quot;&gt;原始值&lt;/a&gt;作为输入的过滤器。接收&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Objects&quot;&gt;对象&lt;/a&gt;作为输入的过滤器在每个 &lt;code&gt;$digest&lt;/code&gt; 上执行，因为跟踪输入是否已更改成本太高。</target>
        </trans-unit>
        <trans-unit id="223c150544e590c3b09b2f83432104d5c677b5fc" translate="yes" xml:space="preserve">
          <source>In its current implementation, we'd need to create a different controller each time in order to re-use such a directive:</source>
          <target state="translated">在目前的实现中,我们每次都需要创建一个不同的控制器,以便重复使用这样的指令。</target>
        </trans-unit>
        <trans-unit id="aaf87ac010abced2fa8d3d211eaa4cf5c460607b" translate="yes" xml:space="preserve">
          <source>In its default setup, ngAria for &lt;code&gt;ngShow&lt;/code&gt; is actually redundant. It toggles &lt;code&gt;aria-hidden&lt;/code&gt; on the directive when it is hidden or shown. However, the default CSS of &lt;code&gt;display: none !important&lt;/code&gt;, already hides child elements from a screen reader. It becomes more useful when the default CSS is overridden with properties that don&amp;rsquo;t affect assistive technologies, such as &lt;code&gt;opacity&lt;/code&gt; or &lt;code&gt;transform&lt;/code&gt;. By toggling &lt;code&gt;aria-hidden&lt;/code&gt; dynamically with ngAria, we can ensure content visually hidden with this technique will not be read aloud in a screen reader.</source>
          <target state="translated">在其默认设置中，ngShow的 &lt;code&gt;ngShow&lt;/code&gt; 实际上是多余的。它切换 &lt;code&gt;aria-hidden&lt;/code&gt; 的指令，当它被隐藏或显示。但是， &lt;code&gt;display: none !important&lt;/code&gt; 的默认CSS ：none！important，已经从屏幕阅读器中隐藏了子元素。当默认CSS被不影响辅助技术的属性（例如 &lt;code&gt;opacity&lt;/code&gt; 或 &lt;code&gt;transform&lt;/code&gt; ）覆盖时，它将变得更加有用。通过使用ngAria动态切换 &lt;code&gt;aria-hidden&lt;/code&gt; aria，我们可以确保使用此技术在视觉上隐藏的内容不会在屏幕阅读器中大声朗读。</target>
        </trans-unit>
        <trans-unit id="9ac48986b940877fd638b3f87daf87350f3cd59a" translate="yes" xml:space="preserve">
          <source>In many cases, &lt;a href=&quot;ngrepeat&quot;&gt;ngRepeat&lt;/a&gt; can be used on &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; elements instead of &lt;code&gt;ngOptions&lt;/code&gt; to achieve a similar result. However, &lt;code&gt;ngOptions&lt;/code&gt; provides some benefits:</source>
          <target state="translated">在许多情况下，&lt;a href=&quot;ngrepeat&quot;&gt;ngRepeat&lt;/a&gt;可以被用来 &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; 元素，而不是 &lt;code&gt;ngOptions&lt;/code&gt; 以实现类似的结果。但是， &lt;code&gt;ngOptions&lt;/code&gt; 提供了一些好处：</target>
        </trans-unit>
        <trans-unit id="816f5a467069e8684ca6c8eac56b04421f4f9aac" translate="yes" xml:space="preserve">
          <source>In many cases, &lt;code&gt;ngRepeat&lt;/code&gt; can be used on &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; elements instead of &lt;a href=&quot;ngoptions&quot;&gt;ngOptions&lt;/a&gt; to achieve a similar result. However, &lt;code&gt;ngOptions&lt;/code&gt; provides some benefits:</source>
          <target state="translated">在许多情况下， &lt;code&gt;ngRepeat&lt;/code&gt; 可以被用来 &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; 元素，而不是&lt;a href=&quot;ngoptions&quot;&gt;ngOptions&lt;/a&gt;以实现类似的结果。但是， &lt;code&gt;ngOptions&lt;/code&gt; 提供了一些好处：</target>
        </trans-unit>
        <trans-unit id="23a74c3d278c8929951ba5893b635995005f8e65" translate="yes" xml:space="preserve">
          <source>In most cases, &lt;a href=&quot;../api/ng/provider/%24compileprovider#directive.html&quot;&gt;directives&lt;/a&gt; and scopes interact but do not create new instances of scope. However, some directives, such as &lt;a href=&quot;../api/ng/directive/ngcontroller&quot;&gt;ng-controller&lt;/a&gt; and &lt;a href=&quot;../api/ng/directive/ngrepeat&quot;&gt;ng-repeat&lt;/a&gt;, create new child scopes and attach the child scope to the corresponding DOM element.</source>
          <target state="translated">在大多数情况下，&lt;a href=&quot;../api/ng/provider/%24compileprovider#directive.html&quot;&gt;指令&lt;/a&gt;和作用域会相互作用，但不会创建新的作用域实例。但是，某些指令（例如&lt;a href=&quot;../api/ng/directive/ngcontroller&quot;&gt;ng-controller&lt;/a&gt;和&lt;a href=&quot;../api/ng/directive/ngrepeat&quot;&gt;ng-repeat&lt;/a&gt;）会创建新的子作用域，并将该子作用域附加到相应的DOM元素。</target>
        </trans-unit>
        <trans-unit id="a6d61eeade717370e6792f08603d2f769bf7909b" translate="yes" xml:space="preserve">
          <source>In order for &lt;code&gt;yOffset&lt;/code&gt; to work properly, scrolling should take place on the document's root and not some child element.</source>
          <target state="translated">为了使 &lt;code&gt;yOffset&lt;/code&gt; 正常工作，滚动应该在文档的根目录而不是某些子元素上进行。</target>
        </trans-unit>
        <trans-unit id="43159b000f095713d7995347d0aa0418f3baf129" translate="yes" xml:space="preserve">
          <source>In order for custom control to work with &lt;code&gt;ngModel&lt;/code&gt; and to achieve two-way data-binding it needs to:</source>
          <target state="translated">为了使自定义控件能够与 &lt;code&gt;ngModel&lt;/code&gt; 一起使用并实现双向数据绑定，它需要：</target>
        </trans-unit>
        <trans-unit id="93e76425878be6a245b2b5122baa300334e1d96a" translate="yes" xml:space="preserve">
          <source>In order for the injector to know how to create and wire together all of these objects, it needs a registry of &quot;recipes&quot;. Each recipe has an identifier of the object and the description of how to create this object.</source>
          <target state="translated">为了让注入器知道如何创建和连接所有这些对象,它需要一个 &quot;配方 &quot;的注册表。每个配方都有一个对象的标识符和如何创建这个对象的描述。</target>
        </trans-unit>
        <trans-unit id="41ca1c0cfc3250833efe87b946e6688542d335f0" translate="yes" xml:space="preserve">
          <source>In order to answer such a question it is very important that we can isolate the unit of code under test. That is because when we are testing the sort function we don't want to be forced into creating related pieces such as the DOM elements, or making any XHR calls to fetch the data to sort.</source>
          <target state="translated">为了回答这样的问题,非常重要的一点是,我们可以隔离被测试的代码单元。这是因为当我们测试排序功能时,我们不希望被迫创建相关的片段,如DOM元素,或进行任何XHR调用来获取数据进行排序。</target>
        </trans-unit>
        <trans-unit id="83939e2bc9f9e5b599175fbfb5fec4456c3a2747" translate="yes" xml:space="preserve">
          <source>In order to enable animations the &lt;code&gt;ngAnimate&lt;/code&gt; module has to be loaded.</source>
          <target state="translated">为了启用动画，必须加载 &lt;code&gt;ngAnimate&lt;/code&gt; 模块。</target>
        </trans-unit>
        <trans-unit id="d6563365aaa2bf57b65af1a6e2ab56f748edc001" translate="yes" xml:space="preserve">
          <source>In order to ensure that the sorting will be deterministic across platforms, if none of the specified predicates can distinguish between two items, &lt;code&gt;orderBy&lt;/code&gt; will automatically introduce a dummy predicate that returns the item's index as &lt;code&gt;value&lt;/code&gt;. (If you are using a custom comparator, make sure it can handle this predicate as well.)</source>
          <target state="translated">为了确保排序在所有平台上都是确定性的，如果指定谓词中没有一个可以区分两个项目， &lt;code&gt;orderBy&lt;/code&gt; 将自动引入一个虚拟谓词，该谓词将项目的索引作为 &lt;code&gt;value&lt;/code&gt; 返回。（如果使用的是自定义比较器，请确保它也可以处理此谓词。）</target>
        </trans-unit>
        <trans-unit id="ba07d896b98bd38aa92e1a51979d43b5762c90ac" translate="yes" xml:space="preserve">
          <source>In order to make the definition easier, components enforce best practices like use of &lt;code&gt;controllerAs&lt;/code&gt;, &lt;code&gt;bindToController&lt;/code&gt;. They always have &lt;strong&gt;isolate scope&lt;/strong&gt; and are restricted to elements.</source>
          <target state="translated">为了使定义更容易，组件强制执行最佳实践，例如使用 &lt;code&gt;controllerAs&lt;/code&gt; ， &lt;code&gt;bindToController&lt;/code&gt; 。它们始终具有&lt;strong&gt;隔离范围&lt;/strong&gt;，并且仅限于元素。</target>
        </trans-unit>
        <trans-unit id="92f3760b5ddb703592c1c344abf1808f65b67a46" translate="yes" xml:space="preserve">
          <source>In order to prevent collisions in environments where multiple AngularJS apps share the same domain or subdomain, we recommend that each application uses a unique cookie name.</source>
          <target state="translated">为了防止在多个AngularJS应用共享同一域名或子域名的环境中发生碰撞,我们建议每个应用使用唯一的cookie名称。</target>
        </trans-unit>
        <trans-unit id="c431fcb3d2dd29f9f6877e5863d11e1c5282ac1f" translate="yes" xml:space="preserve">
          <source>In order to react to events or execute computation in the view we must provide behavior to the scope. We add behavior to the scope by attaching methods to the &lt;code&gt;$scope&lt;/code&gt; object. These methods are then available to be called from the template/view.</source>
          <target state="translated">为了对事件做出反应或在视图中执行计算，我们必须向范围提供行为。通过将方法附加到 &lt;code&gt;$scope&lt;/code&gt; 对象，我们将行为添加到范围。然后可以从模板/视图中调用这些方法。</target>
        </trans-unit>
        <trans-unit id="64d69397877d61d2ffddceb4be6f794cc00dd86f" translate="yes" xml:space="preserve">
          <source>In order to show error messages corresponding to &lt;code&gt;myField&lt;/code&gt; we first create an element with an &lt;code&gt;ngMessages&lt;/code&gt; attribute set to the &lt;code&gt;$error&lt;/code&gt; object owned by the &lt;code&gt;myField&lt;/code&gt; input in our &lt;code&gt;myForm&lt;/code&gt; form.</source>
          <target state="translated">为了显示与 &lt;code&gt;myField&lt;/code&gt; 对应的错误消息，我们首先创建一个元素，其 &lt;code&gt;ngMessages&lt;/code&gt; 属性设置为 &lt;code&gt;myForm&lt;/code&gt; 表单中 &lt;code&gt;myField&lt;/code&gt; 输入所拥有的 &lt;code&gt;$error&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="38ca262d53b30c1c185b66f2480b52ad395cd555" translate="yes" xml:space="preserve">
          <source>In order to:</source>
          <target state="translated">为了:</target>
        </trans-unit>
        <trans-unit id="cee56acce42439af4e48556eac71fd143eec3563" translate="yes" xml:space="preserve">
          <source>In our &lt;code&gt;link&lt;/code&gt; function, we want to update the displayed time once a second, or whenever a user changes the time formatting string that our directive binds to. We will use the &lt;code&gt;$interval&lt;/code&gt; service to call a handler on a regular basis. This is easier than using &lt;code&gt;$timeout&lt;/code&gt; but also works better with end-to-end testing, where we want to ensure that all &lt;code&gt;$timeout&lt;/code&gt;s have completed before completing the test. We also want to remove the &lt;code&gt;$interval&lt;/code&gt; if the directive is deleted so we don't introduce a memory leak.</source>
          <target state="translated">在我们的 &lt;code&gt;link&lt;/code&gt; 函数中，我们想每秒更新一次显示时间，或者每当用户更改指令绑定到的时间格式字符串时更新一次。我们将使用 &lt;code&gt;$interval&lt;/code&gt; 服务定期调用处理程序。这比使用 &lt;code&gt;$timeout&lt;/code&gt; 更容易，但在端到端测试中效果更好，因为我们要确保所有 &lt;code&gt;$timeout&lt;/code&gt; 在完成测试之前都已完成。如果指令被删除，我们也想删除 &lt;code&gt;$interval&lt;/code&gt; ，这样就不会引起内存泄漏。</target>
        </trans-unit>
        <trans-unit id="1b484d590e22004602005d9748c97e5a23a50efa" translate="yes" xml:space="preserve">
          <source>In plain HTML forms, the &lt;code&gt;name&lt;/code&gt; attribute is used to identify groups of radio inputs, so that the browser can manage their state (checked/unchecked) based on the state of other inputs in the same group.</source>
          <target state="translated">In plain HTML forms, the &lt;code&gt;name&lt;/code&gt; attribute is used to identify groups of radio inputs, so that the browser can manage their state (checked/unchecked) based on the state of other inputs in the same group.</target>
        </trans-unit>
        <trans-unit id="46cfb3934a0deeee576ac8393203dd312b39eb1f" translate="yes" xml:space="preserve">
          <source>In practice</source>
          <target state="translated">在实践中</target>
        </trans-unit>
        <trans-unit id="23f474e3365b6841390e2d04f8b7b183101fc5b0" translate="yes" xml:space="preserve">
          <source>In practice, flickering can appear when nesting elements with structural animations such as &lt;code&gt;ngIf&lt;/code&gt; into elements that have class-based animations such as &lt;code&gt;ngClass&lt;/code&gt;.</source>
          <target state="translated">在实践中，闪烁可以嵌套具有结构动画如元素时出现 &lt;code&gt;ngIf&lt;/code&gt; 成具有基于类的动画，如元件 &lt;code&gt;ngClass&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4b6b3f1479d15949f893579bddd17a5c4695b028" translate="yes" xml:space="preserve">
          <source>In privileged contexts, directives and code will bind to the result of &lt;a href=&quot;%24sce#getTrusted.html&quot;&gt;$sce.getTrusted(context, value)&lt;/a&gt; rather than to the value directly. Think of this function as a way to enforce the required security context in your data sink. Directives use &lt;a href=&quot;%24sce#parseAs.html&quot;&gt;$sce.parseAs&lt;/a&gt; rather than &lt;code&gt;$parse&lt;/code&gt; to watch attribute bindings, which performs the &lt;a href=&quot;%24sce#getTrusted.html&quot;&gt;$sce.getTrusted&lt;/a&gt; behind the scenes on non-constant literals. Also, when binding without directives, AngularJS will understand the context of your bindings automatically.</source>
          <target state="translated">在特权上下文中，指令和代码将绑定到&lt;a href=&quot;%24sce#getTrusted.html&quot;&gt;$ sce.getTrusted（context，value）&lt;/a&gt;的结果，而不是直接绑定到该值。可以将此功能视为在数据接收器中强制执行所需安全上下文的一种方式。指令使用&lt;a href=&quot;%24sce#parseAs.html&quot;&gt;$ sce.parseAs&lt;/a&gt;而不是 &lt;code&gt;$parse&lt;/code&gt; 来监视属性绑定，该属性绑定在非常量文字量背后执行&lt;a href=&quot;%24sce#getTrusted.html&quot;&gt;$ sce.getTrusted&lt;/a&gt;。另外，当不使用指令进行绑定时，AngularJS会自动理解绑定的上下文。</target>
        </trans-unit>
        <trans-unit id="ad0a78c7ea83ece459db4a6b9e0ec41e1d081220" translate="yes" xml:space="preserve">
          <source>In some cases you can also rely upon automatic sanitization of untrusted values - see below.</source>
          <target state="translated">在某些情况下,你也可以依靠对不信任的值进行自动消毒--见下文。</target>
        </trans-unit>
        <trans-unit id="ced5561a26558d4d24bd44d63f6ee1bbb96f6f9e" translate="yes" xml:space="preserve">
          <source>In templates, filters are only executed when their inputs have changed. This is more performant than executing a filter on each &lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24digest.html&quot;&gt;&lt;code&gt;$digest&lt;/code&gt;&lt;/a&gt; as is the case with &lt;a href=&quot;expression&quot;&gt;expressions&lt;/a&gt;.</source>
          <target state="translated">在模板中，仅当过滤器的输入已更改时才执行过滤器。这比在每个&lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24digest.html&quot;&gt; &lt;code&gt;$digest&lt;/code&gt; &lt;/a&gt;上执行过滤器（如&lt;a href=&quot;expression&quot;&gt;expressions&lt;/a&gt;的情况）更有效。</target>
        </trans-unit>
        <trans-unit id="b3df173ca7c9246d6aeebf7b82e7ed92a41a33d7" translate="yes" xml:space="preserve">
          <source>In tests you can use &lt;a href=&quot;../../ngmock/service/%24interval#flush.html&quot;&gt;&lt;code&gt;$interval.flush(millis)&lt;/code&gt;&lt;/a&gt; to move forward by &lt;code&gt;millis&lt;/code&gt; milliseconds and trigger any functions scheduled to run in that time.</source>
          <target state="translated">在测试中，你可以使用&lt;a href=&quot;../../ngmock/service/%24interval#flush.html&quot;&gt; &lt;code&gt;$interval.flush(millis)&lt;/code&gt; &lt;/a&gt;通过向前移动 &lt;code&gt;millis&lt;/code&gt; 毫秒，触发计划在这段时间运行的任何功能。</target>
        </trans-unit>
        <trans-unit id="e6d6b4db41ec26c414ad5cfb1ba6c62e946416d6" translate="yes" xml:space="preserve">
          <source>In tests you can use &lt;a href=&quot;../../ngmock/service/%24timeout&quot;&gt;&lt;code&gt;$timeout.flush()&lt;/code&gt;&lt;/a&gt; to synchronously flush the queue of deferred functions.</source>
          <target state="translated">在测试中，可以使用&lt;a href=&quot;../../ngmock/service/%24timeout&quot;&gt; &lt;code&gt;$timeout.flush()&lt;/code&gt; &lt;/a&gt;同步刷新延迟函数的队列。</target>
        </trans-unit>
        <trans-unit id="9afa5f460758c21238a4ac6be52ef14781fd6696" translate="yes" xml:space="preserve">
          <source>In that case, it is necessary to intercept the &lt;em&gt;initial&lt;/em&gt; compilation of the element:</source>
          <target state="translated">在这种情况下，有必要拦截该元素的&lt;em&gt;初始&lt;/em&gt;编译：</target>
        </trans-unit>
        <trans-unit id="f664cca1d4ca20781d1fa172027d128144824737" translate="yes" xml:space="preserve">
          <source>In the above example &lt;code&gt;SomeClass&lt;/code&gt; is not concerned with creating or locating the &lt;code&gt;greeter&lt;/code&gt; dependency, it is simply handed the &lt;code&gt;greeter&lt;/code&gt; when it is instantiated.</source>
          <target state="translated">在上面的示例中， &lt;code&gt;SomeClass&lt;/code&gt; 与创建或定位 &lt;code&gt;greeter&lt;/code&gt; 依赖关系无关，它只是在实例化 &lt;code&gt;greeter&lt;/code&gt; 时才交给它。</target>
        </trans-unit>
        <trans-unit id="d6351961d5f7c7bedc28b2fb3f9404a2fa13777f" translate="yes" xml:space="preserve">
          <source>In the above example notice that the &lt;code&gt;MyController&lt;/code&gt; assigns &lt;code&gt;World&lt;/code&gt; to the &lt;code&gt;username&lt;/code&gt; property of the scope. The scope then notifies the &lt;code&gt;input&lt;/code&gt; of the assignment, which then renders the input with username pre-filled. This demonstrates how a controller can write data into the scope.</source>
          <target state="translated">在上面的示例中，请注意 &lt;code&gt;MyController&lt;/code&gt; 将 &lt;code&gt;World&lt;/code&gt; 分配给范围的 &lt;code&gt;username&lt;/code&gt; 属性。范围然后通知分配的 &lt;code&gt;input&lt;/code&gt; ，然后使用预先填充的用户名呈现输入。这演示了控制器如何将数据写入示波器。</target>
        </trans-unit>
        <trans-unit id="e594bf894541dbfbfa549d5ac280e9f9712c2570" translate="yes" xml:space="preserve">
          <source>In the case of AngularJS' SCE service, one uses &lt;a href=&quot;%24sce#trustAs.html&quot;&gt;$sce.trustAs&lt;/a&gt; (and shorthand methods such as &lt;a href=&quot;%24sce#trustAsHtml.html&quot;&gt;$sce.trustAsHtml&lt;/a&gt;, etc.) to build the trusted versions of your values.</source>
          <target state="translated">对于AngularJS的SCE服务，可以使用&lt;a href=&quot;%24sce#trustAs.html&quot;&gt;$ sce.trustAs&lt;/a&gt;（以及&lt;a href=&quot;%24sce#trustAsHtml.html&quot;&gt;$ sce.trustAsHtml&lt;/a&gt;等速记方法）来构建值的可信版本。</target>
        </trans-unit>
        <trans-unit id="959810922e73332af4b6023c346f0a5b1acbe45e" translate="yes" xml:space="preserve">
          <source>In the code above, we see how the &lt;code&gt;apiToken&lt;/code&gt; service is defined via the Factory recipe that depends on the &lt;code&gt;clientId&lt;/code&gt; service. The factory service then uses NSA-proof encryption to produce an authentication token.</source>
          <target state="translated">在上面的代码中，我们看到了如何通过取决于 &lt;code&gt;clientId&lt;/code&gt; 服务的Factory配方定义 &lt;code&gt;apiToken&lt;/code&gt; 服务。然后，工厂服务使用耐NSA的加密来生成身份验证令牌。</target>
        </trans-unit>
        <trans-unit id="84f8e46a5ef8dfd7b5fa4f69ef21284f0f989e10" translate="yes" xml:space="preserve">
          <source>In the example HTML code above the message that is set on required will override the corresponding required message defined within the remote template. Therefore, with particular input fields (such email addresses, date fields, autocomplete inputs, etc...), specialized error messages can be applied while more generic messages can be used to handle other, more general input errors.</source>
          <target state="translated">在上面的HTML代码示例中,设置为必填的消息将覆盖远程模板中定义的相应必填消息。因此,对于特定的输入字段(如电子邮件地址、日期字段、自动完成输入等),可以应用专门的错误消息,而更通用的消息可以用来处理其他更通用的输入错误。</target>
        </trans-unit>
        <trans-unit id="fd65d4b7c7659da1f46b3e642c3fddcc6b9572ba" translate="yes" xml:space="preserve">
          <source>In the example above we in-lined the value of the &lt;code&gt;template&lt;/code&gt; option, but this will become annoying as the size of your template grows.</source>
          <target state="translated">在上面的示例中，我们内联了 &lt;code&gt;template&lt;/code&gt; 选项的值，但是随着模板大小的增加，这将变得很烦人。</target>
        </trans-unit>
        <trans-unit id="4ea40c9ac185962c5537c5bf56297794190e4724" translate="yes" xml:space="preserve">
          <source>In the example above: The template contains the directive &lt;code&gt;ng-app=&quot;invoice2&quot;&lt;/code&gt;. This tells AngularJS to use the &lt;code&gt;invoice2&lt;/code&gt; module as the main module for the application. The code snippet &lt;code&gt;angular.module('invoice2', ['finance2'])&lt;/code&gt; specifies that the &lt;code&gt;invoice2&lt;/code&gt; module depends on the &lt;code&gt;finance2&lt;/code&gt; module. By this, AngularJS uses the &lt;code&gt;InvoiceController&lt;/code&gt; as well as the &lt;code&gt;currencyConverter&lt;/code&gt; service.</source>
          <target state="translated">在上面的示例中：模板包含指令 &lt;code&gt;ng-app=&quot;invoice2&quot;&lt;/code&gt; 。这告诉AngularJS使用 &lt;code&gt;invoice2&lt;/code&gt; 模块作为应用程序的主要模块。代码段 &lt;code&gt;angular.module('invoice2', ['finance2'])&lt;/code&gt; 指定 &lt;code&gt;invoice2&lt;/code&gt; 模块依赖于 &lt;code&gt;finance2&lt;/code&gt; 模块。这样，AngularJS使用 &lt;code&gt;InvoiceController&lt;/code&gt; 以及 &lt;code&gt;currencyConverter&lt;/code&gt; 服务。</target>
        </trans-unit>
        <trans-unit id="06c6dacfa62f890f4ce330dacbb04a271d1a5f52" translate="yes" xml:space="preserve">
          <source>In the example below if the &lt;code&gt;ngApp&lt;/code&gt; directive were not placed on the &lt;code&gt;html&lt;/code&gt; element then the document would not be compiled, the &lt;code&gt;AppController&lt;/code&gt; would not be instantiated and the &lt;code&gt;{{ a+b }}&lt;/code&gt; would not be resolved to &lt;code&gt;3&lt;/code&gt;.</source>
          <target state="translated">在下面的示例中，如果 &lt;code&gt;ngApp&lt;/code&gt; 指令未放置在 &lt;code&gt;html&lt;/code&gt; 元素上，则将不会编译文档，不会实例化 &lt;code&gt;AppController&lt;/code&gt; ，并且 &lt;code&gt;{{ a+b }}&lt;/code&gt; 不会解析为 &lt;code&gt;3&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f0733690aa73762a66daf4ab130eb29e196bfdd6" translate="yes" xml:space="preserve">
          <source>In the example below we are testing a service that takes a long time to generate its answer. To avoid having all of the assertions we want to write in a single test case, &lt;a href=&quot;../api/ngmock/function/angular.mock.module.sharedinjector&quot;&gt;module.sharedInjector()&lt;/a&gt; and Jasmine's &lt;code&gt;beforeAll()&lt;/code&gt; are used to run the service only once. The test cases then all make assertions about the properties added to the service instance.</source>
          <target state="translated">在下面的示例中，我们正在测试一项花费很长时间才能生成其答案的服务。为了避免所有我们想在一个单一的测试用例编写断言，&lt;a href=&quot;../api/ngmock/function/angular.mock.module.sharedinjector&quot;&gt;module.sharedInjector（）&lt;/a&gt;和茉莉的 &lt;code&gt;beforeAll()&lt;/code&gt; 来运行该服务一次。然后，所有测试用例都对添加到服务实例中的属性进行断言。</target>
        </trans-unit>
        <trans-unit id="bab3c31c5347dae0fee8eb746e2e91d85348416e" translate="yes" xml:space="preserve">
          <source>In the example, &lt;code&gt;&quot;0: Nobody is viewing.&quot;&lt;/code&gt; is an explicit number rule. If you did not specify this rule, 0 would be matched to the &quot;other&quot; category and &quot;0 people are viewing&quot; would be shown instead of &quot;Nobody is viewing&quot;. You can specify an explicit number rule for other numbers, for example 12, so that instead of showing &quot;12 people are viewing&quot;, you can show &quot;a dozen people are viewing&quot;.</source>
          <target state="translated">在示例中， &lt;code&gt;&quot;0: Nobody is viewing.&quot;&lt;/code&gt; 是一个明确的数字规则。如果您未指定此规则，则0将与&amp;ldquo;其他&amp;rdquo;类别匹配，并且将显示&amp;ldquo; 0个人正在查看&amp;rdquo;，而不是&amp;ldquo;没有人正在查看&amp;rdquo;。您可以为其他数字指定一个明确的数字规则，例如12，这样就可以显示&amp;ldquo;有十二个人正在观看&amp;rdquo;，而不是显示&amp;ldquo;有十二个人正在观看&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="9240f6b392f9f24d3f0cc0e6e9f1b6f87bdaa61f" translate="yes" xml:space="preserve">
          <source>In the example, note that:</source>
          <target state="translated">在这个例子中,请注意:</target>
        </trans-unit>
        <trans-unit id="84ff38ef3acedf57990298f438e0044989906ff2" translate="yes" xml:space="preserve">
          <source>In the following example a new block of HTML containing a &lt;code&gt;ng-controller&lt;/code&gt; directive is added to the end of the document body by JQuery. We then compile and link it into the current AngularJS scope.</source>
          <target state="translated">在以下示例中，JQuery 将新的包含 &lt;code&gt;ng-controller&lt;/code&gt; 指令的HTML块添加到文档主体的末尾。然后，我们将其编译并链接到当前的AngularJS范围。</target>
        </trans-unit>
        <trans-unit id="e5310456ee5d9fc9becb78c6016bab204fd72bf8" translate="yes" xml:space="preserve">
          <source>In the following example we create two directives:</source>
          <target state="translated">在下面的例子中,我们创建两个指令。</target>
        </trans-unit>
        <trans-unit id="e5133af465b2e35bb8a87b952a090800d0de494d" translate="yes" xml:space="preserve">
          <source>In the following example we will build a form to calculate the costs of an invoice in different currencies.</source>
          <target state="translated">在下面的例子中,我们将建立一个表单来计算不同货币的发票成本。</target>
        </trans-unit>
        <trans-unit id="77918f42e8ba84df32a20e6ed8fa56c3f1646559" translate="yes" xml:space="preserve">
          <source>In the following example, the interpolation information would be ignored and the browser would simply interpret the attribute as present, meaning that the button would always be disabled.</source>
          <target state="translated">在下面的例子中,插值信息将被忽略,浏览器将简单地将该属性解释为存在,这意味着按钮将始终被禁用。</target>
        </trans-unit>
        <trans-unit id="efef16f2696255d51f1a599a09667ffbb53142df" translate="yes" xml:space="preserve">
          <source>In the following example, we say that the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; element &lt;strong&gt;matches&lt;/strong&gt; the &lt;code&gt;ngModel&lt;/code&gt; directive</source>
          <target state="translated">在以下示例中，我们说 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 元件&lt;strong&gt;相匹配&lt;/strong&gt;的 &lt;code&gt;ngModel&lt;/code&gt; 指令</target>
        </trans-unit>
        <trans-unit id="79560f8749a4459cf00c1e8ac63200d2b09c35ab" translate="yes" xml:space="preserve">
          <source>In the link function, link the compiled element with the element's scope.</source>
          <target state="translated">在链接函数中,将编译后的元素与元素的作用域进行链接。</target>
        </trans-unit>
        <trans-unit id="cae02af11dc52e4c34dfd155a0e09f2c35b21656" translate="yes" xml:space="preserve">
          <source>In the new JavaScript file we are also creating a &lt;a href=&quot;concepts#module.html&quot;&gt;module&lt;/a&gt; at which we register the controller. We will talk about modules in the next section.</source>
          <target state="translated">在新的JavaScript文件中，我们还将创建一个用于注册控制器的&lt;a href=&quot;concepts#module.html&quot;&gt;模块&lt;/a&gt;。我们将在下一节中讨论模块。</target>
        </trans-unit>
        <trans-unit id="ddb9bac8dbb551492f9275fbd24cd7951d7d8c0c" translate="yes" xml:space="preserve">
          <source>In these examples we use &lt;code&gt;&amp;lt;base href=&quot;/base/index.html&quot; /&amp;gt;&lt;/code&gt;. The inputs represent the address bar of the browser.</source>
          <target state="translated">在这些示例中，我们使用 &lt;code&gt;&amp;lt;base href=&quot;/base/index.html&quot; /&amp;gt;&lt;/code&gt; 。输入代表浏览器的地址栏。</target>
        </trans-unit>
        <trans-unit id="b67dc576ed7fd6345e84f4eb6c7018ca4bfbcc4f" translate="yes" xml:space="preserve">
          <source>In this case, you can use &lt;code&gt;$rollbackViewValue()&lt;/code&gt; to manually cancel the debounced / future update and reset the input to the last committed view value.</source>
          <target state="translated">在这种情况下，您可以使用 &lt;code&gt;$rollbackViewValue()&lt;/code&gt; 手动取消去抖动的/将来的更新，并将输入重置为最后一个提交的视图值。</target>
        </trans-unit>
        <trans-unit id="6505ab30bfaaaac0b15030b3f3986050a80340d6" translate="yes" xml:space="preserve">
          <source>In this case, you need to override the default currency symbol by providing the &lt;a href=&quot;../api/ng/filter/currency&quot;&gt;&lt;code&gt;currency&lt;/code&gt;&lt;/a&gt; currency filter with a currency symbol as a parameter.</source>
          <target state="translated">在这种情况下，你需要提供覆盖默认货币符号&lt;a href=&quot;../api/ng/filter/currency&quot;&gt; &lt;code&gt;currency&lt;/code&gt; &lt;/a&gt;货币滤波器货币符号作为参数。</target>
        </trans-unit>
        <trans-unit id="14e832106d47cd2398f7a2e9a5e870b31e8b80af" translate="yes" xml:space="preserve">
          <source>In this example there are two locations where a simple interpolation binding (&lt;code&gt;{{}}&lt;/code&gt;) is present, but the one wrapped in &lt;code&gt;ngNonBindable&lt;/code&gt; is left alone.</source>
          <target state="translated">在此示例中，存在两个位置，其中存在一个简单的插值绑定（ &lt;code&gt;{{}}&lt;/code&gt; ），但是包裹在 &lt;code&gt;ngNonBindable&lt;/code&gt; 中的那个位置被单独保留。</target>
        </trans-unit>
        <trans-unit id="4d3a54eba3caaff060cebf9bc0469b28b7141602" translate="yes" xml:space="preserve">
          <source>In this example we create a custom method on our resource to make a PUT request:</source>
          <target state="translated">在这个例子中,我们在我们的资源上创建了一个自定义的方法来进行PUT请求。</target>
        </trans-unit>
        <trans-unit id="6899b61e7576501948474a864710fc73cabc4d8a" translate="yes" xml:space="preserve">
          <source>In this example we will build a directive that displays the current time. Once a second, it updates the DOM to reflect the current time.</source>
          <target state="translated">在这个例子中,我们将建立一个显示当前时间的指令。每隔一秒,它就会更新DOM以反映当前时间。</target>
        </trans-unit>
        <trans-unit id="4439980cd7f8e616e932b5cf07209756402b8a31" translate="yes" xml:space="preserve">
          <source>In this example, we've used the Value recipe to define the value to provide when &lt;code&gt;DemoController&lt;/code&gt; asks for the service with id &quot;clientId&quot;.</source>
          <target state="translated">在此示例中，我们使用了Value配方来定义当 &lt;code&gt;DemoController&lt;/code&gt; 要求提供ID为&amp;ldquo; clientId&amp;rdquo;的服务时要提供的值。</target>
        </trans-unit>
        <trans-unit id="7a7d32308b0ce66221de3ff0ef1900cca2184aa8" translate="yes" xml:space="preserve">
          <source>In this mode, &lt;code&gt;$location&lt;/code&gt; uses Hashbang URLs in all browsers. AngularJS also does not intercept and rewrite links in this mode. I.e. links work as expected and also perform full page reloads when other parts of the url than the hash fragment was changed.</source>
          <target state="translated">在这种模式下， &lt;code&gt;$location&lt;/code&gt; 在所有浏览器中都使用Hashbang URL。AngularJS在这种模式下也不会拦截和重写链接。即，链接按预期工作，并且在URL的除散列片段以外的其他部分发生更改时，也可以执行整个页面重新加载。</target>
        </trans-unit>
        <trans-unit id="5becec1b89211dd88c512f01dd020136e19e6976" translate="yes" xml:space="preserve">
          <source>In this scenario the ordering of the values in the &lt;code&gt;$inject&lt;/code&gt; array must match the ordering of the parameters in &lt;code&gt;MyController&lt;/code&gt;.</source>
          <target state="translated">在这种情况下， &lt;code&gt;$inject&lt;/code&gt; 数组中值的顺序必须与 &lt;code&gt;MyController&lt;/code&gt; 中参数的顺序匹配。</target>
        </trans-unit>
        <trans-unit id="13f2a9a690a1e6a57d2a22be202ab6f40a5e27bc" translate="yes" xml:space="preserve">
          <source>In unit tests, if &lt;code&gt;angular-mocks.js&lt;/code&gt; is loaded, this service is overridden by &lt;a href=&quot;../../ngmock/service/%24exceptionhandler&quot;&gt;mock $exceptionHandler&lt;/a&gt; which aids in testing.</source>
          <target state="translated">在单元测试中，如果加载了 &lt;code&gt;angular-mocks.js&lt;/code&gt; ，则此服务会被&lt;a href=&quot;../../ngmock/service/%24exceptionhandler&quot;&gt;模拟$ exceptionHandler&lt;/a&gt;覆盖，后者有助于测试。</target>
        </trans-unit>
        <trans-unit id="f65268ee4fca5a690bd7ec3d41fb1bec92988ebd" translate="yes" xml:space="preserve">
          <source>In unit tests, you may need to call &lt;code&gt;$digest()&lt;/code&gt; to simulate the scope life cycle.</source>
          <target state="translated">在单元测试中，您可能需要调用 &lt;code&gt;$digest()&lt;/code&gt; 以模拟作用域的生命周期。</target>
        </trans-unit>
        <trans-unit id="1175103ab9a357b144d5afd8b6a34c7357be8f89" translate="yes" xml:space="preserve">
          <source>Include &lt;code&gt;angular_1_router.js&lt;/code&gt; in your HTML:</source>
          <target state="translated">在HTML中包含 &lt;code&gt;angular_1_router.js&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="eee121d0108cf587e09cedc45732972ef8bcd660" translate="yes" xml:space="preserve">
          <source>Including ngAria</source>
          <target state="translated">包括ngAria</target>
        </trans-unit>
        <trans-unit id="97ab23190c81b3035d6f0736f1e943af6dedb556" translate="yes" xml:space="preserve">
          <source>Including the &lt;code&gt;angular-mocks.js&lt;/code&gt; file automatically adds the &lt;code&gt;ngMock&lt;/code&gt; module, so your tests are ready to go!</source>
          <target state="translated">包括 &lt;code&gt;angular-mocks.js&lt;/code&gt; 文件会自动添加 &lt;code&gt;ngMock&lt;/code&gt; 模块，因此您的测试就可以开始了！</target>
        </trans-unit>
        <trans-unit id="022e67bfe4c9d31f23e277e933c1ffc2d7b2553f" translate="yes" xml:space="preserve">
          <source>Incorrect scope on replaced element: &lt;a href=&quot;https://github.com/angular/angular.js/issues/9837&quot;&gt;#9837&lt;/a&gt;</source>
          <target state="translated">替换元素的作用域不正确：&lt;a href=&quot;https://github.com/angular/angular.js/issues/9837&quot;&gt;＃9837&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4bc6cb47d35d34b7a2afa7d59d3ad1affaa2fd4d" translate="yes" xml:space="preserve">
          <source>Increasing the TTL could have performance implications, so you should not change it without proper justification.</source>
          <target state="translated">增加TTL可能会对性能产生影响,所以在没有适当理由的情况下,你不应该改变它。</target>
        </trans-unit>
        <trans-unit id="fe65a117b989a572706242b27f193dcbfe4cccb2" translate="yes" xml:space="preserve">
          <source>Index at which to begin limitation. As a negative index, &lt;code&gt;begin&lt;/code&gt; indicates an offset from the end of &lt;code&gt;input&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">开始限制的索引。作为负索引， &lt;code&gt;begin&lt;/code&gt; 表示距 &lt;code&gt;input&lt;/code&gt; 末尾的偏移量。默认为 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="be561e9cda308e941f15c8f2d92167d741116500" translate="yes" xml:space="preserve">
          <source>Inference</source>
          <target state="translated">Inference</target>
        </trans-unit>
        <trans-unit id="e3429591e14050c72d5c0051bbbbd1a28af8277c" translate="yes" xml:space="preserve">
          <source>Information about the module</source>
          <target state="translated">关于该模块的信息</target>
        </trans-unit>
        <trans-unit id="fdaddb9ce367c2ca746a97cc24d2e8817a51f27d" translate="yes" xml:space="preserve">
          <source>Inheritance</source>
          <target state="translated">Inheritance</target>
        </trans-unit>
        <trans-unit id="5dfb1d0123ddef5f4f1709bff3cd4b6a227f90d4" translate="yes" xml:space="preserve">
          <source>Inheritance works with methods in the same way as it does with properties. So in our previous examples, all of the properties could be replaced with methods that return string values.</source>
          <target state="translated">继承对方法的作用和对属性的作用是一样的。所以在我们之前的例子中,所有的属性都可以用返回字符串值的方法来代替。</target>
        </trans-unit>
        <trans-unit id="0b0ccb7ae52acb2325f9958f72c6588fcb209c80" translate="yes" xml:space="preserve">
          <source>Inheriting Options</source>
          <target state="translated">继承选项</target>
        </trans-unit>
        <trans-unit id="96a10dd68557ab7a42e636872dcf0b6dfbfa7c5b" translate="yes" xml:space="preserve">
          <source>Injection Function Annotation</source>
          <target state="translated">注入功能注释</target>
        </trans-unit>
        <trans-unit id="a9fff665a0f0f15d16e0d15e587df45688563f62" translate="yes" xml:space="preserve">
          <source>Injection locals for Controller.</source>
          <target state="translated">为Controller注入locals。</target>
        </trans-unit>
        <trans-unit id="2ca8a0d344a0e19a0d77c7ff904b9681383397eb" translate="yes" xml:space="preserve">
          <source>Injector</source>
          <target state="translated">Injector</target>
        </trans-unit>
        <trans-unit id="79f0f713c81b40636682b05fc5367727bac538b1" translate="yes" xml:space="preserve">
          <source>Injector API</source>
          <target state="translated">喷射器API</target>
        </trans-unit>
        <trans-unit id="14473111235c870eaff95fa0c0269e33135347df" translate="yes" xml:space="preserve">
          <source>Injector object. See &lt;a href=&quot;../../auto/service/%24injector&quot;&gt;$injector&lt;/a&gt;.</source>
          <target state="translated">喷油器对象。参见&lt;a href=&quot;../../auto/service/%24injector&quot;&gt;$ injector&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2e347f4ceb23a6d8637cc8028fda9ad8c7b7c47f" translate="yes" xml:space="preserve">
          <source>Inline</source>
          <target state="translated">Inline</target>
        </trans-unit>
        <trans-unit id="925743fe777d805151236206dc7c89eab96a1877" translate="yes" xml:space="preserve">
          <source>Inline Array Annotation</source>
          <target state="translated">内联阵列注解</target>
        </trans-unit>
        <trans-unit id="6b04e7cb97df1376cafddfa71719f04eb50b9a6e" translate="yes" xml:space="preserve">
          <source>Input elements using ngModelController do this automatically when they are destroyed.</source>
          <target state="translated">使用ngModelController的输入元素在销毁时,会自动做到这一点。</target>
        </trans-unit>
        <trans-unit id="746797b58353ee493a111e047d8432803b2bf4f0" translate="yes" xml:space="preserve">
          <source>Input text.</source>
          <target state="translated">输入文本。</target>
        </trans-unit>
        <trans-unit id="5e4c6a9c5fc75d66498cf6d23beea81ac1405c3b" translate="yes" xml:space="preserve">
          <source>Input to be serialized into JSON.</source>
          <target state="translated">输入要序列化为JSON。</target>
        </trans-unit>
        <trans-unit id="36c92f17e709bebc8508b025911cc23c819f2bdc" translate="yes" xml:space="preserve">
          <source>Input to filter.</source>
          <target state="translated">输入到过滤器。</target>
        </trans-unit>
        <trans-unit id="b469f7b387e7ea5a8aa43ef249909abf751dad91" translate="yes" xml:space="preserve">
          <source>Input with date validation and transformation. In browsers that do not yet support the HTML5 date input, a text element will be used. In that case, text must be entered in a valid ISO-8601 date format (yyyy-MM-dd), for example: &lt;code&gt;2009-01-06&lt;/code&gt;. Since many modern browsers do not yet support this input type, it is important to provide cues to users on the expected input format via a placeholder or label.</source>
          <target state="translated">Input with date validation and transformation. In browsers that do not yet support the HTML5 date input, a text element will be used. In that case, text must be entered in a valid ISO-8601 date format (yyyy-MM-dd), for example: &lt;code&gt;2009-01-06&lt;/code&gt; . Since many modern browsers do not yet support this input type, it is important to provide cues to users on the expected input format via a placeholder or label.</target>
        </trans-unit>
        <trans-unit id="368b3f90c079e89422060af3560495bdef962d93" translate="yes" xml:space="preserve">
          <source>Input with datetime validation and transformation. In browsers that do not yet support the HTML5 date input, a text element will be used. In that case, the text must be entered in a valid ISO-8601 local datetime format (yyyy-MM-ddTHH:mm:ss), for example: &lt;code&gt;2010-12-28T14:57:00&lt;/code&gt;.</source>
          <target state="translated">Input with datetime validation and transformation. In browsers that do not yet support the HTML5 date input, a text element will be used. In that case, the text must be entered in a valid ISO-8601 local datetime format (yyyy-MM-ddTHH:mm:ss), for example: &lt;code&gt;2010-12-28T14:57:00&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f055ea0fb91bafd4e2519ef585345bddd83e494f" translate="yes" xml:space="preserve">
          <source>Input with month validation and transformation. In browsers that do not yet support the HTML5 month input, a text element will be used. In that case, the text must be entered in a valid ISO-8601 month format (yyyy-MM), for example: &lt;code&gt;2009-01&lt;/code&gt;.</source>
          <target state="translated">Input with month validation and transformation. In browsers that do not yet support the HTML5 month input, a text element will be used. In that case, the text must be entered in a valid ISO-8601 month format (yyyy-MM), for example: &lt;code&gt;2009-01&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2d19ccf55a4ce32c01abc960d0eb8d89049b6ff3" translate="yes" xml:space="preserve">
          <source>Input with time validation and transformation. In browsers that do not yet support the HTML5 time input, a text element will be used. In that case, the text must be entered in a valid ISO-8601 local time format (HH:mm:ss), for example: &lt;code&gt;14:57:00&lt;/code&gt;. Model must be a Date object. This binding will always output a Date object to the model of January 1, 1970, or local date &lt;code&gt;new Date(1970, 0, 1, HH, mm, ss)&lt;/code&gt;.</source>
          <target state="translated">Input with time validation and transformation. In browsers that do not yet support the HTML5 time input, a text element will be used. In that case, the text must be entered in a valid ISO-8601 local time format (HH:mm:ss), for example: &lt;code&gt;14:57:00&lt;/code&gt; . Model must be a Date object. This binding will always output a Date object to the model of January 1, 1970, or local date &lt;code&gt;new Date(1970, 0, 1, HH, mm, ss)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="87b35cff3f70eb2b5963a0cee4a1695a8c2487fc" translate="yes" xml:space="preserve">
          <source>Input with week-of-the-year validation and transformation to Date. In browsers that do not yet support the HTML5 week input, a text element will be used. In that case, the text must be entered in a valid ISO-8601 week format (yyyy-W##), for example: &lt;code&gt;2013-W02&lt;/code&gt;.</source>
          <target state="translated">Input with week-of-the-year validation and transformation to Date. In browsers that do not yet support the HTML5 week input, a text element will be used. In that case, the text must be entered in a valid ISO-8601 week format (yyyy-W##), for example: &lt;code&gt;2013-W02&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8623e06b7bf838dfcd7440cde11477a28bd943b1" translate="yes" xml:space="preserve">
          <source>Inputs should be using &lt;code&gt;&amp;lt;&lt;/code&gt; and &lt;code&gt;@&lt;/code&gt; bindings. The &lt;code&gt;&amp;lt;&lt;/code&gt; symbol denotes &lt;a href=&quot;../api/ng/service/%24compile#-scope-.html&quot;&gt;one-way bindings&lt;/a&gt; which are available since 1.5. The difference to &lt;code&gt;=&lt;/code&gt; is that the bound properties in the component scope are not watched, which means if you assign a new value to the property in the component scope, it will not update the parent scope. Note however, that both parent and component scope reference the same object, so if you are changing object properties or array elements in the component, the parent will still reflect that change. The general rule should therefore be to never change an object or array property in the component scope. &lt;code&gt;@&lt;/code&gt; bindings can be used when the input is a string, especially when the value of the binding doesn't change.</source>
          <target state="translated">输入应使用 &lt;code&gt;&amp;lt;&lt;/code&gt; 和 &lt;code&gt;@&lt;/code&gt; 绑定。所述 &lt;code&gt;&amp;lt;&lt;/code&gt; 符号表示&lt;a href=&quot;../api/ng/service/%24compile#-scope-.html&quot;&gt;单向绑定&lt;/a&gt;这是因为1.5可用。与 &lt;code&gt;=&lt;/code&gt; 的区别在于，不监视组件范围内的绑定属性，这意味着，如果为组件范围内的属性分配新值，则不会更新父范围。但是请注意，父级作用域和组件作用域都引用同一对象，因此，如果要更改组件中的对象属性或数组元素，父级仍将反映该更改。因此，一般规则应该是永远不要在组件范围内更改对象或数组属性。 &lt;code&gt;@&lt;/code&gt; 当输入是字符串时，可以使用绑定，尤其是当绑定的值不变时。</target>
        </trans-unit>
        <trans-unit id="9e52682fa7935f8560c99962baa2e9b2e2f695aa" translate="yes" xml:space="preserve">
          <source>Inserts (moves) the element into its new position in the DOM either after the &lt;code&gt;after&lt;/code&gt; element (if provided) or as the first child within the &lt;code&gt;parent&lt;/code&gt; element and then triggers an animation. A promise is returned that will be resolved during the next digest once the animation has completed.</source>
          <target state="translated">在 &lt;code&gt;after&lt;/code&gt; 元素之后（如果提供）或作为 &lt;code&gt;parent&lt;/code&gt; 元素中的第一个子元素将元素插入（移动）到DOM中的新位置，然后触发动画。动画完成后，将返回一个下一个摘要中将解决的承诺。</target>
        </trans-unit>
        <trans-unit id="9d08db8a2f848ef678473f1e8f3fc6d65efc3930" translate="yes" xml:space="preserve">
          <source>Inserts a named entry into the &lt;a href=&quot;%24cachefactory.cache&quot;&gt;Cache&lt;/a&gt; object to be retrieved later, and incrementing the size of the cache if the key was not already present in the cache. If behaving like an LRU cache, it will also remove stale entries from the set.</source>
          <target state="translated">将一个命名的条目插入到&lt;a href=&quot;%24cachefactory.cache&quot;&gt;Cache&lt;/a&gt;对象中，以便以后检索，如果该键尚未在缓存中，则增加缓存的大小。如果行为类似于LRU缓存，它还将从集合中删除陈旧的条目。</target>
        </trans-unit>
        <trans-unit id="b56347e262d3cfcb832a5204694e59add55e7c8a" translate="yes" xml:space="preserve">
          <source>Inserts the element into the DOM either after the &lt;code&gt;after&lt;/code&gt; element (if provided) or as the first child within the &lt;code&gt;parent&lt;/code&gt; element and then triggers an animation. A promise is returned that will be resolved during the next digest once the animation has completed.</source>
          <target state="translated">将元素插入到DOM中，在 &lt;code&gt;after&lt;/code&gt; 元素之后（如果提供）或作为 &lt;code&gt;parent&lt;/code&gt; 元素中的第一个子元素，然后触发动画。动画完成后，将返回一个下一个摘要中将解决的承诺。</target>
        </trans-unit>
        <trans-unit id="4a974602fd15a3bb043838c33a55716734438b42" translate="yes" xml:space="preserve">
          <source>Inside this directive's compile function, add any other directive attributes to the template.</source>
          <target state="translated">在这个指令的编译函数里面,添加任何其他指令属性到模板中。</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="8282d74914fee52414c245630944283136d0ee0c" translate="yes" xml:space="preserve">
          <source>Instance of given controller.</source>
          <target state="translated">给定控制器的实例。</target>
        </trans-unit>
        <trans-unit id="062b9f18d0fd09a55820ed08041572545f617364" translate="yes" xml:space="preserve">
          <source>Instance of requested controller.</source>
          <target state="translated">被请求的控制器的实例。</target>
        </trans-unit>
        <trans-unit id="211f21858ca1d5311a2538cd51c3ed72a3d7a141" translate="yes" xml:space="preserve">
          <source>Instantiating &lt;code&gt;$route&lt;/code&gt; early is necessary for capturing the initial &lt;a href=&quot;../../ng/service/%24location#%24locationChangeStart.html&quot;&gt;$locationChangeStart&lt;/a&gt; event and navigating to the appropriate route. Usually, &lt;code&gt;$route&lt;/code&gt; is instantiated in time by the &lt;a href=&quot;../directive/ngview&quot;&gt;ngView&lt;/a&gt; directive. Yet, in cases where &lt;code&gt;ngView&lt;/code&gt; is included in an asynchronously loaded template (e.g. in another directive's template), the directive factory might not be called soon enough for &lt;code&gt;$route&lt;/code&gt; to be instantiated &lt;em&gt;before&lt;/em&gt; the initial &lt;code&gt;$locationChangeSuccess&lt;/code&gt; event is fired. Eager instantiation ensures that &lt;code&gt;$route&lt;/code&gt; is always instantiated in time, regardless of when &lt;code&gt;ngView&lt;/code&gt; will be loaded.</source>
          <target state="translated">要捕获初始&lt;a href=&quot;../../ng/service/%24location#%24locationChangeStart.html&quot;&gt;$ locationChangeStart&lt;/a&gt;事件并导航到适当的路由，必须提前实例化 &lt;code&gt;$route&lt;/code&gt; route。通常， &lt;code&gt;$route&lt;/code&gt; 由&lt;a href=&quot;../directive/ngview&quot;&gt;ngView&lt;/a&gt;指令及时实例化。但是，如果 &lt;code&gt;ngView&lt;/code&gt; 被包含在异步加载的模板中（例如，在另一个指令的模板中），则指令工厂可能没有被足够快地调用，无法&lt;em&gt;在&lt;/em&gt;激发初始 &lt;code&gt;$locationChangeSuccess&lt;/code&gt; 事件&lt;em&gt;之前&lt;/em&gt;实例化 &lt;code&gt;$route&lt;/code&gt; 。急切的实例化确保 &lt;code&gt;$route&lt;/code&gt; 总是及时实例化，而不管何时加载 &lt;code&gt;ngView&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3d3a7f6588b1415794dfce3d5d197e1c86baed2d" translate="yes" xml:space="preserve">
          <source>Instead of an ngController, we now have a heroList component that holds the data of different heroes, and creates a heroDetail for each of them.</source>
          <target state="translated">我们现在有一个英雄列表组件来代替ngController,它保存着不同英雄的数据,并为每个英雄创建一个英雄详情。</target>
        </trans-unit>
        <trans-unit id="6f3dfbdc7d4af7c104dfa249eb6020271af2c661" translate="yes" xml:space="preserve">
          <source>Instead of manipulating Input Data, the component calls the correct Output Event with the changed data. For a deletion, that means the component doesn't delete the &lt;code&gt;hero&lt;/code&gt; itself, but sends it back to the owner component via the correct event.</source>
          <target state="translated">组件不处理输入数据，而是使用更改后的数据调用正确的输出事件。对于删除，这意味着组件不会删除 &lt;code&gt;hero&lt;/code&gt; 本身，而是通过正确的事件将其发送回所有者组件。</target>
        </trans-unit>
        <trans-unit id="83be5bd3ffd4491816aabd2cd39c2c3b9c8878ac" translate="yes" xml:space="preserve">
          <source>Instead the &lt;a href=&quot;../api/ng/directive/ngrepeat&quot;&gt;&lt;code&gt;ngRepeat&lt;/code&gt;&lt;/a&gt; directive compiles &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; separately. The result of the &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; element compilation is a linking function which contains all of the directives contained in the &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; element, ready to be attached to a specific clone of the &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; element.</source>
          <target state="translated">而是&lt;a href=&quot;../api/ng/directive/ngrepeat&quot;&gt; &lt;code&gt;ngRepeat&lt;/code&gt; &lt;/a&gt;指令单独编译 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 。所述的结果 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 元素编译为连接函数包含所有包含在该指令的 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 元素，随时可以连接到的特定克隆 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 元素。</target>
        </trans-unit>
        <trans-unit id="633968d37033cd055bb2eb774fd1e896dbbc403f" translate="yes" xml:space="preserve">
          <source>Instead use services like &lt;code&gt;$window&lt;/code&gt; and &lt;code&gt;$location&lt;/code&gt; in functions on controllers, which are then called from expressions. Such services provide mockable access to globals.</source>
          <target state="translated">而是在控制器的函数中使用 &lt;code&gt;$window&lt;/code&gt; 和 &lt;code&gt;$location&lt;/code&gt; 类的服务，然后从表达式中调用它们。此类服务提供对全局变量的可模拟访问。</target>
        </trans-unit>
        <trans-unit id="e907f4bb49fd3c2e897bc3769f08b3d04e07eddb" translate="yes" xml:space="preserve">
          <source>Integration with the browser event loop</source>
          <target state="translated">与浏览器事件循环集成</target>
        </trans-unit>
        <trans-unit id="f9c3ced7a72c2e86229aee91105ee78487714dbb" translate="yes" xml:space="preserve">
          <source>Interceptors</source>
          <target state="translated">Interceptors</target>
        </trans-unit>
        <trans-unit id="9db23e6c66b8f703c4c5170aac080107d2e70814" translate="yes" xml:space="preserve">
          <source>Interceptors detailed info</source>
          <target state="translated">拦截器详细信息</target>
        </trans-unit>
        <trans-unit id="9ce9437cbc666edc9eb9fcee34199bb7906c0c55" translate="yes" xml:space="preserve">
          <source>Intercomponent Communication</source>
          <target state="translated">组件间通信</target>
        </trans-unit>
        <trans-unit id="062715707c7ec1cacc1e15b12597b7e7f10f0e06" translate="yes" xml:space="preserve">
          <source>Interface for configuring AngularJS &lt;a href=&quot;../function/angular.module&quot;&gt;modules&lt;/a&gt;.</source>
          <target state="translated">用于配置AngularJS &lt;a href=&quot;../function/angular.module&quot;&gt;模块的&lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="e4d32358862ac0edaba0242863407cf48322048c" translate="yes" xml:space="preserve">
          <source>Interface for configuring AngularJS &lt;a href=&quot;function/angular.module&quot;&gt;modules&lt;/a&gt;.</source>
          <target state="translated">用于配置AngularJS &lt;a href=&quot;function/angular.module&quot;&gt;模块的&lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="ecd5ccdaf3148a44137ddcbe0c56ca93bd059aa4" translate="yes" xml:space="preserve">
          <source>Internally it looks a bit like this:</source>
          <target state="translated">内部看起来有点像这样。</target>
        </trans-unit>
        <trans-unit id="7b741cdf9b58113f65f5de5d9a4967edb5170093" translate="yes" xml:space="preserve">
          <source>Internally, &lt;code&gt;ngAnimate&lt;/code&gt; waits until all template downloads that are started right after bootstrap have finished. Then, it waits for the currently running &lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24digest.html&quot;&gt;$digest&lt;/a&gt; and one more after that, to finish. This ensures that the whole app has been compiled fully before animations are attempted.</source>
          <target state="translated">在内部， &lt;code&gt;ngAnimate&lt;/code&gt; 等待启动完成后立即开始的所有模板下载。然后，它等待当前正在运行的&lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24digest.html&quot;&gt;$ digest&lt;/a&gt;及其之后的$ digest完成。这样可以确保在尝试制作动画之前已完全编译了整个应用程序。</target>
        </trans-unit>
        <trans-unit id="22c5f10ca7f996927beededd6dc71f14380c408d" translate="yes" xml:space="preserve">
          <source>Internationalization (i18n) is the process of developing products in such a way that they can be localized for languages and cultures easily. Localization (l10n), is the process of adapting applications and text to enable their usability in a particular cultural or linguistic market. For application developers, internationalizing an application means abstracting all of the strings and other locale-specific bits (such as date or currency formats) out of the application. Localizing an application means providing translations and localized formats for the abstracted bits.</source>
          <target state="translated">国际化(i18n)是指开发产品的过程,使产品能够很容易地针对各种语言和文化进行本地化。本地化(l10n)是调整应用程序和文本以使其在特定文化或语言市场中的可用性的过程。对于应用程序开发人员来说,国际化应用程序意味着从应用程序中抽象出所有的字符串和其他本地特定的位(如日期或货币格式)。本地化应用程序意味着为抽象的比特提供翻译和本地化格式。</target>
        </trans-unit>
        <trans-unit id="627598da36f0488e21c56b4623e3c3ac29134995" translate="yes" xml:space="preserve">
          <source>Internet Explorer and Edge do not support the &lt;code&gt;details&lt;/code&gt; element, it is recommended to use &lt;a href=&quot;ngshow&quot;&gt;&lt;code&gt;ngShow&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;nghide&quot;&gt;&lt;code&gt;ngHide&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">Internet Explorer和Edge不支持 &lt;code&gt;details&lt;/code&gt; 元素，建议改为使用&lt;a href=&quot;ngshow&quot;&gt; &lt;code&gt;ngShow&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;nghide&quot;&gt; &lt;code&gt;ngHide&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6a9858c9bf3149456595f98943cf88e41039822e" translate="yes" xml:space="preserve">
          <source>Interpolation</source>
          <target state="translated">Interpolation</target>
        </trans-unit>
        <trans-unit id="3da05a3ab5e77c32bfb542c759dbb3b2f9921337" translate="yes" xml:space="preserve">
          <source>Interpolation markup with embedded &lt;a href=&quot;expression&quot;&gt;expressions&lt;/a&gt; is used by AngularJS to provide data-binding to text nodes and attribute values.</source>
          <target state="translated">AngularJS使用带有嵌入式&lt;a href=&quot;expression&quot;&gt;表达式的&lt;/a&gt;插值标记为文本节点和属性值提供数据绑定。</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="464d6921114c284acd9c8fb8f85d8fdc2d3aa0a2" translate="yes" xml:space="preserve">
          <source>Introductory Material</source>
          <target state="translated">介绍性材料</target>
        </trans-unit>
        <trans-unit id="6ef14993cacdc6240416f3e705cd81fa9aedff49" translate="yes" xml:space="preserve">
          <source>Invoke the method and supply the method arguments from the &lt;code&gt;$injector&lt;/code&gt;.</source>
          <target state="translated">调用方法并从 &lt;code&gt;$injector&lt;/code&gt; 提供方法参数。</target>
        </trans-unit>
        <trans-unit id="35b43899a3f83610ba7b4c6c1390ee4e1f1b7e31" translate="yes" xml:space="preserve">
          <source>Invokes the &lt;code&gt;iterator&lt;/code&gt; function once for each item in &lt;code&gt;obj&lt;/code&gt; collection, which can be either an object or an array. The &lt;code&gt;iterator&lt;/code&gt; function is invoked with &lt;code&gt;iterator(value, key, obj)&lt;/code&gt;, where &lt;code&gt;value&lt;/code&gt; is the value of an object property or an array element, &lt;code&gt;key&lt;/code&gt; is the object property key or array element index and obj is the &lt;code&gt;obj&lt;/code&gt; itself. Specifying a &lt;code&gt;context&lt;/code&gt; for the function is optional.</source>
          <target state="translated">为 &lt;code&gt;obj&lt;/code&gt; 集合中的每个项目调用一次 &lt;code&gt;iterator&lt;/code&gt; 函数，该集合可以是对象也可以是数组。该 &lt;code&gt;iterator&lt;/code&gt; 函数调用时使用 &lt;code&gt;iterator(value, key, obj)&lt;/code&gt; ，其中 &lt;code&gt;value&lt;/code&gt; 是一个对象属性或数组元素的值， &lt;code&gt;key&lt;/code&gt; 是对象属性键或数组元素索引和obj与 &lt;code&gt;obj&lt;/code&gt; 本身。指定功能的 &lt;code&gt;context&lt;/code&gt; 是可选的。</target>
        </trans-unit>
        <trans-unit id="a5ab7787ce6bc4362a9f13777edcdaf6b98998bd" translate="yes" xml:space="preserve">
          <source>Ionic Framework</source>
          <target state="translated">离子框架</target>
        </trans-unit>
        <trans-unit id="1a782aa74f75185993195ad4bcbc102f9f427def" translate="yes" xml:space="preserve">
          <source>Isolating the Scope of a Directive</source>
          <target state="translated">隔离指令的范围</target>
        </trans-unit>
        <trans-unit id="d20f2f6b4e6d817ba6e89b3f9673aecdf3113258" translate="yes" xml:space="preserve">
          <source>Issues with replace: true</source>
          <target state="translated">替换:true的问题</target>
        </trans-unit>
        <trans-unit id="553315737e3b34b8f0ca05c4145e5f178bea3093" translate="yes" xml:space="preserve">
          <source>It also watches the &lt;a href=&quot;%24location#hash.html&quot;&gt;$location.hash()&lt;/a&gt; and automatically scrolls to match any anchor whenever it changes. This can be disabled by calling &lt;a href=&quot;../provider/%24anchorscrollprovider#disableAutoScrolling.html&quot;&gt;$anchorScrollProvider.disableAutoScrolling()&lt;/a&gt;.</source>
          <target state="translated">它还监视&lt;a href=&quot;%24location#hash.html&quot;&gt;$ location.hash（）&lt;/a&gt;并在其更改时自动滚动以匹配任何锚点。可以通过调用&lt;a href=&quot;../provider/%24anchorscrollprovider#disableAutoScrolling.html&quot;&gt;$ anchorScrollProvider.disableAutoScrolling（）&lt;/a&gt;禁用此功能。</target>
        </trans-unit>
        <trans-unit id="c489374ee92d89df88a69e803f218fae80bb3039" translate="yes" xml:space="preserve">
          <source>It can also be used to achieve one-way binding of a given expression to an input element such as an &lt;code&gt;input[text]&lt;/code&gt; or a &lt;code&gt;textarea&lt;/code&gt;, when that element does not use ngModel.</source>
          <target state="translated">当该元素不使用ngModel时，也可以用于将给定表达式单向绑定到输入元素，例如 &lt;code&gt;input[text]&lt;/code&gt; 或 &lt;code&gt;textarea&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6ead9df0c1b0575bc0d0a33bce64a5d7d3f5aebc" translate="yes" xml:space="preserve">
          <source>It can be used like so:</source>
          <target state="translated">它可以这样使用。</target>
        </trans-unit>
        <trans-unit id="db03d0c1d6f65c6696ad45dd10b046e86fb2b5bc" translate="yes" xml:space="preserve">
          <source>It can be used to trigger a native browser event on an element, which is useful for unit testing.</source>
          <target state="translated">它可以用来触发元素上的本地浏览器事件,这对单元测试很有用。</target>
        </trans-unit>
        <trans-unit id="92cd05db0fac39e05b3a78129dbc2c13bb5d210c" translate="yes" xml:space="preserve">
          <source>It does not cause a full page reload when the browser URL is changed. To reload the page after changing the URL, use the lower-level API, &lt;code&gt;$window.location.href&lt;/code&gt;.</source>
          <target state="translated">更改浏览器URL时，不会导致整个页面重新加载。要在更改URL后重新加载页面，请使用较低级别的API &lt;code&gt;$window.location.href&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6dd0e3b492e0e9ddf8f072cf8217d885fc9dc93f" translate="yes" xml:space="preserve">
          <source>It impacts performance, as interpolation adds another watcher to the scope.</source>
          <target state="translated">它影响性能,因为内插在范围内增加了另一个观察者。</target>
        </trans-unit>
        <trans-unit id="4d5b67bbcac712f4a34e5aa8cfdb8f074f88c7b5" translate="yes" xml:space="preserve">
          <source>It increases the complexity of the markup</source>
          <target state="translated">它增加了标记的复杂性</target>
        </trans-unit>
        <trans-unit id="fc05bcff5f72991e69c700ce73817afcbbb8bd13" translate="yes" xml:space="preserve">
          <source>It indicates to the compiler whether or not directives on comments should be compiled. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">它向编译器指示是否应编译注释指令。默认为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="906af1e36dfdfa37c091ab433fc206589b32aa37" translate="yes" xml:space="preserve">
          <source>It indicates to the compiler whether or not directives on element classes should be compiled. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">它向编译器指示是否应编译有关元素类的指令。默认为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a5ee5553d7a8187ba379677bf68a64abd66747eb" translate="yes" xml:space="preserve">
          <source>It is a really, &lt;em&gt;really&lt;/em&gt; good idea to regard app testing as equal in importance to app writing. Testing difficulty is dramatically affected by the way the code is structured.</source>
          <target state="translated">将应用程序测试与应用程序编写同等重要是一个非常&lt;em&gt;非常&lt;/em&gt;好的主意。代码的结构方式极大地影响了测试难度。</target>
        </trans-unit>
        <trans-unit id="8855a2587ecadec73d7a3421fc455403fbc8a53a" translate="yes" xml:space="preserve">
          <source>It is a very good idea to decouple DOM manipulation from app logic. This dramatically improves the testability of the code.</source>
          <target state="translated">将DOM操作与应用逻辑解耦是一个非常好的想法。这极大地提高了代码的可测试性。</target>
        </trans-unit>
        <trans-unit id="727b35094155043ed303b76b370615c80c2ab5a2" translate="yes" xml:space="preserve">
          <source>It is also possible that you run into difficulties if you try to update the ngModel's &lt;code&gt;$modelValue&lt;/code&gt; programmatically before these debounced/future events have resolved/occurred, because AngularJS's dirty checking mechanism is not able to tell whether the model has actually changed or not.</source>
          <target state="translated">如果尝试解决这些去抖动/未来事件之前， &lt;code&gt;$modelValue&lt;/code&gt; 编程方式更新ngModel的$ modelValue，也可能会遇到麻烦，因为AngularJS的脏检查机制无法判断模型是否确实发生了变化。</target>
        </trans-unit>
        <trans-unit id="80c4111be6bb24188a6a2bea325a2c92f6ed5f77" translate="yes" xml:space="preserve">
          <source>It is also possible to call the &lt;code&gt;orderBy&lt;/code&gt; filter manually, by injecting &lt;code&gt;orderByFilter&lt;/code&gt;, and calling it with the desired parameters. (Alternatively, you could inject the &lt;code&gt;$filter&lt;/code&gt; factory and retrieve the &lt;code&gt;orderBy&lt;/code&gt; filter with &lt;code&gt;$filter('orderBy')&lt;/code&gt;.)</source>
          <target state="translated">也可以通过注入 &lt;code&gt;orderByFilter&lt;/code&gt; 并使用所需参数来手动调用 &lt;code&gt;orderBy&lt;/code&gt; 过滤器。（或者，您可以注入 &lt;code&gt;$filter&lt;/code&gt; 工厂并使用 &lt;code&gt;$filter('orderBy')&lt;/code&gt; 检索 &lt;code&gt;orderBy&lt;/code&gt; 过滤器。）</target>
        </trans-unit>
        <trans-unit id="ca7a590d3c2d53e278b044a014b894acece3725f" translate="yes" xml:space="preserve">
          <source>It is also possible to set &lt;code&gt;bindToController&lt;/code&gt; to an object hash with the same format as the &lt;code&gt;scope&lt;/code&gt; property. This will set up the scope bindings to the controller directly. Note that &lt;code&gt;scope&lt;/code&gt; can still be used to define which kind of scope is created. By default, no scope is created. Use &lt;code&gt;scope: {}&lt;/code&gt; to create an isolate scope (useful for component directives).</source>
          <target state="translated">也可以将 &lt;code&gt;bindToController&lt;/code&gt; 设置为具有与 &lt;code&gt;scope&lt;/code&gt; 属性相同格式的对象哈希。这将直接设置与控制器的范围绑定。注意， &lt;code&gt;scope&lt;/code&gt; 仍然可以用来定义创建哪种类型的范围。默认情况下，不创建范围。使用 &lt;code&gt;scope: {}&lt;/code&gt; 以创建隔离范围（对于组件指令很有用）。</target>
        </trans-unit>
        <trans-unit id="25431739b654d8cc47b28b9c43eeca226e65b9a6" translate="yes" xml:space="preserve">
          <source>It is also possible to set it as the default &lt;code&gt;paramSerializer&lt;/code&gt; in the &lt;a href=&quot;../provider/%24httpprovider#defaults.html&quot;&gt;&lt;code&gt;$httpProvider&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">也可以将其设置为默认 &lt;code&gt;paramSerializer&lt;/code&gt; 在&lt;a href=&quot;../provider/%24httpprovider#defaults.html&quot;&gt; &lt;code&gt;$httpProvider&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1d5c13dd91385416023d0e8e5aa828224c7f5217" translate="yes" xml:space="preserve">
          <source>It is always good to make common tasks trivial and difficult tasks possible.</source>
          <target state="translated">把共同的任务变成琐碎的、困难的任务总是好的。</target>
        </trans-unit>
        <trans-unit id="b3e683fad2f9309dfaa4db918783ad8289246cf8" translate="yes" xml:space="preserve">
          <source>It is an excellent idea to decouple the client side of an app from the server side. This allows development work to progress in parallel, and allows for reuse of both sides.</source>
          <target state="translated">将应用程序的客户端与服务器端解耦是一个很好的想法。这样可以使开发工作平行进行,并允许双方的重用。</target>
        </trans-unit>
        <trans-unit id="0b0fa48b6950751b768005b01d414197a136d433" translate="yes" xml:space="preserve">
          <source>It is common to attach Controllers at different levels of the DOM hierarchy. Since the &lt;a href=&quot;../api/ng/directive/ngcontroller&quot;&gt;ng-controller&lt;/a&gt; directive creates a new child scope, we get a hierarchy of scopes that inherit from each other. The &lt;code&gt;$scope&lt;/code&gt; that each Controller receives will have access to properties and methods defined by Controllers higher up the hierarchy. See &lt;a href=&quot;https://github.com/angular/angular.js/wiki/Understanding-Scopes&quot;&gt;Understanding Scopes&lt;/a&gt; for more information about scope inheritance.</source>
          <target state="translated">通常将控制器附加在DOM层次结构的不同级别上。由于&lt;a href=&quot;../api/ng/directive/ngcontroller&quot;&gt;ng-controller&lt;/a&gt;指令创建了新的子作用域，因此我们获得了一个相互继承的作用域层次结构。每个Controller收到的 &lt;code&gt;$scope&lt;/code&gt; 将有权访问层次结构中更高级别的Controller定义的属性和方法。有关范围继承的更多信息，请参见&lt;a href=&quot;https://github.com/angular/angular.js/wiki/Understanding-Scopes&quot;&gt;了解范围&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="898e639ea78a3295cd345092429425a8851a4def" translate="yes" xml:space="preserve">
          <source>It is currently not possible for an interpolated expression to contain the interpolation end symbol. For example, &lt;code&gt;{{ '}}' }}&lt;/code&gt; will be incorrectly interpreted as &lt;code&gt;{{ ' }}&lt;/code&gt; + &lt;code&gt;' }}&lt;/code&gt;, i.e. an interpolated expression consisting of a single-quote (&lt;code&gt;'&lt;/code&gt;) and the &lt;code&gt;' }}&lt;/code&gt; string.</source>
          <target state="translated">当前，插值表达式不可能包含插值结束符号。例如， &lt;code&gt;{{ '}}' }}&lt;/code&gt; 将错误地解释为 &lt;code&gt;{{ ' }}&lt;/code&gt; + &lt;code&gt;' }}&lt;/code&gt; ，即由单引号（ &lt;code&gt;'&lt;/code&gt; ）和 &lt;code&gt;' }}&lt;/code&gt; 字符串组成的内插表达式。</target>
        </trans-unit>
        <trans-unit id="78735c155bc5c04e168b61fd0cfb26236c9dbc1c" translate="yes" xml:space="preserve">
          <source>It is documented that &lt;code&gt;animation.start()&lt;/code&gt; will return a promise object and this is true, however, there is also an additional method available on the runner called &lt;code&gt;.done(callbackFn)&lt;/code&gt;. The done method works the same as &lt;code&gt;.finally(callbackFn)&lt;/code&gt;, however, it does &lt;strong&gt;not trigger a digest to occur&lt;/strong&gt;. Therefore, for performance reasons, it's always best to use &lt;code&gt;runner.done(callback)&lt;/code&gt; instead of &lt;code&gt;runner.then()&lt;/code&gt;, &lt;code&gt;runner.catch()&lt;/code&gt; or &lt;code&gt;runner.finally()&lt;/code&gt; unless you really need a digest to kick off afterwards.</source>
          <target state="translated">据记录， &lt;code&gt;animation.start()&lt;/code&gt; 将返回一个Promise对象，这是事实，但是，在运行器上还有一个名为 &lt;code&gt;.done(callbackFn)&lt;/code&gt; 的附加方法。 done方法的工作原理与 &lt;code&gt;.finally(callbackFn)&lt;/code&gt; 相同，但是它不会&lt;strong&gt;触发摘要的发生&lt;/strong&gt;。因此，出于性能原因，除非事后确实需要摘要，否则始终最好使用 &lt;code&gt;runner.done(callback)&lt;/code&gt; 而不是 &lt;code&gt;runner.then()&lt;/code&gt; ， &lt;code&gt;runner.catch()&lt;/code&gt; 或 &lt;code&gt;runner.finally()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9adf8cb48d55887fa324e58aa54a93785a13c110" translate="yes" xml:space="preserve">
          <source>It is important to be aware of this when writing tests for directives that use 'element' transclusion. If you place the directive on the root element of the DOM fragment that you pass to &lt;a href=&quot;../api/ng/service/%24compile&quot;&gt;&lt;code&gt;$compile&lt;/code&gt;&lt;/a&gt;, then the DOM node returned from the linking function will be the comment node and you will lose the ability to access the template and transcluded content.</source>
          <target state="translated">在为使用&amp;ldquo;元素&amp;rdquo;包含的指令编写测试时，请务必意识到这一点。如果将指令放在传递给&lt;a href=&quot;../api/ng/service/%24compile&quot;&gt; &lt;code&gt;$compile&lt;/code&gt; &lt;/a&gt;的DOM片段的根元素上，则从链接函数返回的DOM节点将成为注释节点，并且您将无法访问模板和已包含的内容。</target>
        </trans-unit>
        <trans-unit id="ade37c34e6742fe81576b7d98f9b8cab2717a032" translate="yes" xml:space="preserve">
          <source>It is important to realize that invoking a &lt;code&gt;$resource&lt;/code&gt; object method immediately returns an empty reference (object or array depending on &lt;code&gt;isArray&lt;/code&gt;). Once the data is returned from the server the existing reference is populated with the actual data. This is a useful trick since usually the resource is assigned to a model which is then rendered by the view. Having an empty object results in no rendering, once the data arrives from the server then the object is populated with the data and the view automatically re-renders itself showing the new data. This means that in most cases one never has to write a callback function for the action methods.</source>
          <target state="translated">重要的是要意识到调用 &lt;code&gt;$resource&lt;/code&gt; 对象方法会立即返回一个空引用（对象或数组取决于 &lt;code&gt;isArray&lt;/code&gt; ）。从服务器返回数据后，将使用实际数据填充现有引用。这是一个有用的技巧，因为通常资源会分配给模型，然后由视图呈现。如果对象为空，则不会呈现任何内容，一旦数据从服务器到达，该对象就会被数据填充，并且视图会自动重新渲染以显示新数据。这意味着在大多数情况下，无需为动作方法编写回调函数。</target>
        </trans-unit>
        <trans-unit id="44e11a7a5909b52ab207ef70f4ca59576a8afb49" translate="yes" xml:space="preserve">
          <source>It is mainly used on &lt;a href=&quot;../input/input%5Bradio%5D&quot;&gt;&lt;code&gt;input[radio]&lt;/code&gt;&lt;/a&gt; and option elements, so that when the element is selected, the &lt;a href=&quot;ngmodel&quot;&gt;&lt;code&gt;ngModel&lt;/code&gt;&lt;/a&gt; of that element (or its &lt;a href=&quot;select&quot;&gt;&lt;code&gt;select&lt;/code&gt;&lt;/a&gt; parent element) is set to the bound value. It is especially useful for dynamically generated lists using &lt;a href=&quot;ngrepeat&quot;&gt;&lt;code&gt;ngRepeat&lt;/code&gt;&lt;/a&gt;, as shown below.</source>
          <target state="translated">它主要用于&lt;a href=&quot;../input/input%5Bradio%5D&quot;&gt; &lt;code&gt;input[radio]&lt;/code&gt; &lt;/a&gt;和option元素，因此，当选择该元素时，该元素（或其&lt;a href=&quot;select&quot;&gt; &lt;code&gt;select&lt;/code&gt; &lt;/a&gt;父元素）的&lt;a href=&quot;ngmodel&quot;&gt; &lt;code&gt;ngModel&lt;/code&gt; &lt;/a&gt;设置为绑定值。如下所示，它对于使用&lt;a href=&quot;ngrepeat&quot;&gt; &lt;code&gt;ngRepeat&lt;/code&gt; &lt;/a&gt;动态生成的列表特别有用。</target>
        </trans-unit>
        <trans-unit id="dd54d32cbd1f2ba51acb0890230e9b3c8d1d18e0" translate="yes" xml:space="preserve">
          <source>It is normal practice to attach your transcluded content (&lt;code&gt;clone&lt;/code&gt;) to the DOM inside your &lt;strong&gt;clone attach function&lt;/strong&gt;:</source>
          <target state="translated">通常的做法是将您包含的内容（ &lt;code&gt;clone&lt;/code&gt; ）&lt;strong&gt;附加&lt;/strong&gt;到&lt;strong&gt;克隆附加函数中&lt;/strong&gt;的DOM &lt;strong&gt;上&lt;/strong&gt;：</target>
        </trans-unit>
        <trans-unit id="43e9284ca16e984dd2b44c46563b6814669b9eaa" translate="yes" xml:space="preserve">
          <source>It is not possible to trust specific URLs/paths. The &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;query&lt;/code&gt; and &lt;code&gt;fragment&lt;/code&gt; parts of a URL will be ignored. For example, &lt;code&gt;https://foo.com/path/bar?query=baz#fragment&lt;/code&gt; will be treated as &lt;code&gt;https://foo.com&lt;/code&gt;, meaning that &lt;strong&gt;all&lt;/strong&gt; requests to URLs starting with &lt;code&gt;https://foo.com/&lt;/code&gt; will include the XSRF token.</source>
          <target state="translated">It is not possible to trust specific URLs/paths. The &lt;code&gt;path&lt;/code&gt; , &lt;code&gt;query&lt;/code&gt; and &lt;code&gt;fragment&lt;/code&gt; parts of a URL will be ignored. For example, &lt;code&gt;https://foo.com/path/bar?query=baz#fragment&lt;/code&gt; will be treated as &lt;code&gt;https://foo.com&lt;/code&gt; , meaning that &lt;strong&gt;all&lt;/strong&gt; requests to URLs starting with &lt;code&gt;https://foo.com/&lt;/code&gt; will include the XSRF token.</target>
        </trans-unit>
        <trans-unit id="13587fb80feb5ab37440031b46d39c968c78429f" translate="yes" xml:space="preserve">
          <source>It is not possible to whitelist specific URLs/paths. The &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;query&lt;/code&gt; and &lt;code&gt;fragment&lt;/code&gt; parts of a URL will be ignored. For example, &lt;code&gt;https://foo.com/path/bar?query=baz#fragment&lt;/code&gt; will be treated as &lt;code&gt;https://foo.com&lt;/code&gt;, meaning that &lt;strong&gt;all&lt;/strong&gt; requests to URLs starting with &lt;code&gt;https://foo.com/&lt;/code&gt; will include the XSRF token.</source>
          <target state="translated">无法将特定的URL /路径列入白名单。URL 的 &lt;code&gt;path&lt;/code&gt; ， &lt;code&gt;query&lt;/code&gt; 和 &lt;code&gt;fragment&lt;/code&gt; 部分将被忽略。例如， &lt;code&gt;https://foo.com/path/bar?query=baz#fragment&lt;/code&gt; 将被视为 &lt;code&gt;https://foo.com&lt;/code&gt; ，这意味着对以 &lt;code&gt;https://foo.com/&lt;/code&gt; 开头的URL的&lt;strong&gt;所有&lt;/strong&gt;请求都将包括XSRF令牌。</target>
        </trans-unit>
        <trans-unit id="f5755149536ff4c33eaf7b094db38129ae71d347" translate="yes" xml:space="preserve">
          <source>It is often desirable to inline Injected functions and that's when setting the &lt;code&gt;$inject&lt;/code&gt; property is very inconvenient. In these situations using the array notation to specify the dependencies in a way that survives minification is a better choice:</source>
          <target state="translated">通常需要内联Injected函数，这就是在设置 &lt;code&gt;$inject&lt;/code&gt; 属性非常不方便时。在这些情况下，使用数组表示法以最小化生存的方式指定依赖项是更好的选择：</target>
        </trans-unit>
        <trans-unit id="ea74d8637b90b9e1696533460b703c6c41293ed9" translate="yes" xml:space="preserve">
          <source>It is possible that during the &lt;code&gt;enter&lt;/code&gt; animation, the &lt;code&gt;.message&lt;/code&gt; div will be briefly visible before it starts animating. In that case, you can add styles to the CSS that make sure the element stays hidden before the animation starts:</source>
          <target state="translated">在 &lt;code&gt;enter&lt;/code&gt; 动画期间， &lt;code&gt;.message&lt;/code&gt; div在开始动画制作之前可能会短暂可见。在这种情况下，您可以向CSS添加样式，以确保元素在动画开始之前保持隐藏状态：</target>
        </trans-unit>
        <trans-unit id="f82d2b045366df68d3ac3e59440164fdc698eb46" translate="yes" xml:space="preserve">
          <source>It is possible that during the &lt;code&gt;enter&lt;/code&gt; event, the &lt;code&gt;.message&lt;/code&gt; div will be briefly visible before it starts animating. In that case, you can add styles to the CSS that make sure the element stays hidden before the animation starts:</source>
          <target state="translated">在 &lt;code&gt;enter&lt;/code&gt; 事件期间， &lt;code&gt;.message&lt;/code&gt; div在开始动画制作之前可能会短暂可见。在这种情况下，您可以向CSS添加样式，以确保元素在动画开始之前保持隐藏状态：</target>
        </trans-unit>
        <trans-unit id="c69afb8c7919c982dfe15812d0593df59e687ac6" translate="yes" xml:space="preserve">
          <source>It is possible to access the context object using the identifier &lt;code&gt;this&lt;/code&gt; and the locals object using the identifier &lt;code&gt;$locals&lt;/code&gt;.</source>
          <target state="translated">可以使用标识符 &lt;code&gt;this&lt;/code&gt; 和上下文对象 &lt;code&gt;$locals&lt;/code&gt; 访问上下文对象。</target>
        </trans-unit>
        <trans-unit id="3066c08f5caeabdd7acdc8e45264d026b7139d6e" translate="yes" xml:space="preserve">
          <source>It is possible to create chains of any length and since a promise can be resolved with another promise (which will defer its resolution further), it is possible to pause/defer resolution of the promises at any point in the chain. This makes it possible to implement powerful APIs like $http's response interceptors.</source>
          <target state="translated">它可以创建任意长度的链,而且由于一个承诺可以用另一个承诺来解析(这将进一步推迟它的解析),因此可以在链中的任何一点暂停/推迟解析承诺。这使得实现强大的API成为可能,比如$http的响应拦截器。</target>
        </trans-unit>
        <trans-unit id="ccda427b3a1fede3c12595f91bdd135712e54499" translate="yes" xml:space="preserve">
          <source>It is possible to disable individual attributes added by ngAria with the &lt;a href=&quot;ngaria/provider/%24ariaprovider#config.html&quot;&gt;config&lt;/a&gt; method. For more details, see the &lt;a href=&quot;../guide/accessibility&quot;&gt;Developer Guide&lt;/a&gt;.</source>
          <target state="translated">可以使用&lt;a href=&quot;ngaria/provider/%24ariaprovider#config.html&quot;&gt;config&lt;/a&gt;方法禁用ngAria添加的单个属性。有关更多详细信息，请参见《&lt;a href=&quot;../guide/accessibility&quot;&gt;开发人员指南》&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="463de9ded47806d9b1e436ee2e11963140db8b5f" translate="yes" xml:space="preserve">
          <source>It is possible to get &lt;code&gt;ngRepeat&lt;/code&gt; to iterate over the properties of an object using the following syntax:</source>
          <target state="translated">可以使用以下语法让 &lt;code&gt;ngRepeat&lt;/code&gt; 遍历对象的属性：</target>
        </trans-unit>
        <trans-unit id="e6efc27732c8ebe9e9e84ddd4403a59ab8aa7bee" translate="yes" xml:space="preserve">
          <source>It is possible to inject other providers into the provider function, but the injected provider must have been defined before the one that requires it.</source>
          <target state="translated">可以将其他提供者注入到提供者函数中,但注入的提供者必须在需要它的提供者之前被定义。</target>
        </trans-unit>
        <trans-unit id="996e7a28852c7c4983233eb69326521205c8d521" translate="yes" xml:space="preserve">
          <source>It is possible to make &lt;code&gt;ngAria&lt;/code&gt; ignore a specific element, by adding the &lt;code&gt;ng-aria-disable&lt;/code&gt; attribute on it. Note that only the element itself (and not its child elements) will be ignored.</source>
          <target state="translated">通过在其上添加 &lt;code&gt;ng-aria-disable&lt;/code&gt; 属性，可以使 &lt;code&gt;ngAria&lt;/code&gt; 忽略特定元素。请注意，将仅忽略元素本身（而不是其子元素）。</target>
        </trans-unit>
        <trans-unit id="7dcf70c9223ffd381f61a6b912e2f0febfd3f458" translate="yes" xml:space="preserve">
          <source>It is preferable to use &lt;code&gt;ngBind&lt;/code&gt; instead of &lt;code&gt;{{ expression }}&lt;/code&gt; if a template is momentarily displayed by the browser in its raw state before AngularJS compiles it. Since &lt;code&gt;ngBind&lt;/code&gt; is an element attribute, it makes the bindings invisible to the user while the page is loading.</source>
          <target state="translated">如果模板在AngularJS编译之前由浏览器暂时以其原始状态显示，则最好使用 &lt;code&gt;ngBind&lt;/code&gt; 代替 &lt;code&gt;{{ expression }}&lt;/code&gt; 。由于 &lt;code&gt;ngBind&lt;/code&gt; 是元素属性，因此在页面加载时，绑定使用户不可见。</target>
        </trans-unit>
        <trans-unit id="e7fa93572d942a68934418e0f950bd76f13eabf5" translate="yes" xml:space="preserve">
          <source>It is recommended that the&lt;code&gt;$animate&lt;/code&gt; service is always used when executing DOM-related procedures within directives.</source>
          <target state="translated">建议在指令中执行与DOM相关的过程时始终使用 &lt;code&gt;$animate&lt;/code&gt; 服务。</target>
        </trans-unit>
        <trans-unit id="20dd27ac14a6636e950bb55c4e920c64e3cfa0d1" translate="yes" xml:space="preserve">
          <source>It is recommended to use &lt;a href=&quot;%24verifynopendingtasks&quot;&gt;&lt;code&gt;$verifyNoPendingTasks&lt;/code&gt;&lt;/a&gt; instead, which additionally supports verifying a specific type of tasks. For example, you can verify there are no pending timeouts with &lt;code&gt;$verifyNoPendingTasks('$timeout')&lt;/code&gt;.</source>
          <target state="translated">建议改用&lt;a href=&quot;%24verifynopendingtasks&quot;&gt; &lt;code&gt;$verifyNoPendingTasks&lt;/code&gt; &lt;/a&gt;，它另外支持验证特定类型的任务。例如，您可以使用 &lt;code&gt;$verifyNoPendingTasks('$timeout')&lt;/code&gt; 来验证没有等待的超时。</target>
        </trans-unit>
        <trans-unit id="5f45818ee9136dc6dadbc2fa5e5ca2b49e58cb3e" translate="yes" xml:space="preserve">
          <source>It is safe to do DOM transformation in the post-linking function on elements that are not waiting for their async templates to be resolved.</source>
          <target state="translated">在后链接函数中对没有等待其异步模板解析的元素进行DOM转换是安全的。</target>
        </trans-unit>
        <trans-unit id="5cd79d0b11c62c96f4bc727951641d2d5341dda9" translate="yes" xml:space="preserve">
          <source>It is strongly discouraged to write filters that are stateful, because the execution of those can't be optimized by AngularJS, which often leads to performance issues. Many stateful filters can be converted into stateless filters just by exposing the hidden state as a model and turning it into an argument for the filter.</source>
          <target state="translated">强烈不鼓励写有状态的过滤器,因为这些过滤器的执行无法被AngularJS优化,这往往会导致性能问题。许多有状态的过滤器只需将隐藏状态作为模型暴露出来,并将其转化为过滤器的参数,就可以将其转化为无状态的过滤器。</target>
        </trans-unit>
        <trans-unit id="6c70092309a32e4d1a0bcae4da2f3f0c325e2cf9" translate="yes" xml:space="preserve">
          <source>It is very helpful indeed if the framework guides developers through the entire journey of building an app: From designing the UI, through writing the business logic, to testing.</source>
          <target state="translated">如果框架能引导开发者完成构建应用的整个历程,确实是非常有帮助的。从设计UI,到编写业务逻辑,再到测试。</target>
        </trans-unit>
        <trans-unit id="a8e33bee9be3d901e4da72984e940ec4a7e8a400" translate="yes" xml:space="preserve">
          <source>It is worth noting that &lt;code&gt;.forEach&lt;/code&gt; does not iterate over inherited properties because it filters using the &lt;code&gt;hasOwnProperty&lt;/code&gt; method.</source>
          <target state="translated">值得注意的是， &lt;code&gt;.forEach&lt;/code&gt; 不会迭代继承的属性，因为它使用 &lt;code&gt;hasOwnProperty&lt;/code&gt; 方法进行过滤。</target>
        </trans-unit>
        <trans-unit id="611cdb339d280f84c55eabf4024dabc2e5e34ff2" translate="yes" xml:space="preserve">
          <source>It makes more sense to show nothing than to throw an exception if &lt;code&gt;a&lt;/code&gt; is undefined (perhaps we are waiting for the server response, and it will become defined soon). If expression evaluation wasn't forgiving we'd have to write bindings that clutter the code, for example: &lt;code&gt;{{((a||{}).b||{}).c}}&lt;/code&gt;</source>
          <target state="translated">如果未定义 &lt;code&gt;a&lt;/code&gt; ,则什么也不显示比抛出异常更有意义（也许我们正在等待服务器响应，并且它将很快被定义）。如果表达式评估不能原谅，我们将不得不编写会使代码混乱的绑定，例如： &lt;code&gt;{{((a||{}).b||{}).c}}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d3741e91b84dec124290a25fd27ad2bd88202ce9" translate="yes" xml:space="preserve">
          <source>It needs to be able to clone new &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; elements for every &lt;code&gt;action&lt;/code&gt; in &lt;code&gt;user.actions&lt;/code&gt;. This initially seems trivial, but it becomes more complicated when you consider that &lt;code&gt;user.actions&lt;/code&gt; might have items added to it later. This means that it needs to save a clean copy of the &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; element for cloning purposes.</source>
          <target state="translated">它需要能够克隆新的 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 为每个元素 &lt;code&gt;action&lt;/code&gt; 中 &lt;code&gt;user.actions&lt;/code&gt; 。最初看似微不足道，但当您考虑到 &lt;code&gt;user.actions&lt;/code&gt; 稍后可能添加了项时，它变得更加复杂。这意味着它需要保存 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 元素的干净副本以进行克隆。</target>
        </trans-unit>
        <trans-unit id="044534907de0e3d02f1d6dcf3bd09783d0a7ce1a" translate="yes" xml:space="preserve">
          <source>It will not be evaluated:</source>
          <target state="translated">它将不会被评价。</target>
        </trans-unit>
        <trans-unit id="51d3504ce322f478d04b175eb950e68a8c86c2ed" translate="yes" xml:space="preserve">
          <source>It will not insert undefined values into the cache.</source>
          <target state="translated">它不会在缓存中插入未定义的值。</target>
        </trans-unit>
        <trans-unit id="647a38d6c647676338b60b9a322ac3dc18d5d2e4" translate="yes" xml:space="preserve">
          <source>It's also possible to add components via &lt;a href=&quot;../api/ng/provider/%24compileprovider#component.html&quot;&gt;&lt;code&gt;$compileProvider&lt;/code&gt;&lt;/a&gt; in a module's config phase.</source>
          <target state="translated">也可以在模块的配置阶段通过&lt;a href=&quot;../api/ng/provider/%24compileprovider#component.html&quot;&gt; &lt;code&gt;$compileProvider&lt;/code&gt; &lt;/a&gt;添加组件。</target>
        </trans-unit>
        <trans-unit id="22f4771591ad7899072f54bc41e4b386849c26e5" translate="yes" xml:space="preserve">
          <source>It's important to note that AngularJS operates on DOM nodes rather than strings. Usually, you don't notice this restriction because when a page loads, the web browser parses HTML into the DOM automatically.</source>
          <target state="translated">需要注意的是,AngularJS操作的是DOM节点而不是字符串。通常情况下,你不会注意到这个限制,因为当页面加载时,网页浏览器会自动将HTML解析到DOM中。</target>
        </trans-unit>
        <trans-unit id="63749726fcc574a51f6aa95ccfbd08fbb78f8122" translate="yes" xml:space="preserve">
          <source>It's important to remember that SCE only applies to interpolation expressions.</source>
          <target state="translated">重要的是要记住,SCE只适用于插值表达式。</target>
        </trans-unit>
        <trans-unit id="97fe1b00d73664eb3be824469d6bc43514c62a58" translate="yes" xml:space="preserve">
          <source>It's just a simple call to &lt;a href=&quot;../../auto/service/%24injector&quot;&gt;$injector&lt;/a&gt;, but extracted into a service, so that one can override this service with &lt;a href=&quot;https://gist.github.com/1649788&quot;&gt;BC version&lt;/a&gt;.</source>
          <target state="translated">这只是对&lt;a href=&quot;../../auto/service/%24injector&quot;&gt;$ injector&lt;/a&gt;的简单调用，但是被提取到服务中，因此可以使用&lt;a href=&quot;https://gist.github.com/1649788&quot;&gt;BC version&lt;/a&gt;覆盖此服务。</target>
        </trans-unit>
        <trans-unit id="8e7cdaffe82fa8054dcd10304a4d6e6e817934e7" translate="yes" xml:space="preserve">
          <source>It's rare for directives to have a &lt;strong&gt;compile function&lt;/strong&gt;, since most directives are concerned with working with a specific DOM element instance rather than changing its overall structure.</source>
          <target state="translated">指令很少具有&lt;strong&gt;编译功能&lt;/strong&gt;，因为大多数指令都关注与特定DOM元素实例一起工作，而不是更改其整体结构。</target>
        </trans-unit>
        <trans-unit id="d8f50a90fa099f10e64b9bd1dc9869f5899151a0" translate="yes" xml:space="preserve">
          <source>It's worth noting that the success callback for &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;query&lt;/code&gt; and other methods gets called with the resource instance (populated with the data that came from the server) as well as an &lt;code&gt;$http&lt;/code&gt; header getter function, the HTTP status code and the response status text. So one could rewrite the above example and get access to HTTP headers as follows:</source>
          <target state="translated">值得注意的是，使用资源实例（填充有来自服务器的数据）以及 &lt;code&gt;$http&lt;/code&gt; 标头getter函数，HTTP状态代码和响应状态文本调用 &lt;code&gt;get&lt;/code&gt; ， &lt;code&gt;query&lt;/code&gt; 和其他方法的成功回调。。因此，可以重写上面的示例并按如下方式访问HTTP标头：</target>
        </trans-unit>
        <trans-unit id="b5c6b93cece7b56e6dd78ac2666ff04806c02f52" translate="yes" xml:space="preserve">
          <source>Iterating over object properties</source>
          <target state="translated">迭代对象属性</target>
        </trans-unit>
        <trans-unit id="d168d1da3e52bad6c8a376a1d89c87495a6d115b" translate="yes" xml:space="preserve">
          <source>Iterator function.</source>
          <target state="translated">迭代器功能。</target>
        </trans-unit>
        <trans-unit id="92529e5e57daf03b5c7563eb34fd6f6925c58ee2" translate="yes" xml:space="preserve">
          <source>Its name (&lt;code&gt;customerInfo&lt;/code&gt;) corresponds to the directive's &lt;strong&gt;isolate scope&lt;/strong&gt; property, &lt;code&gt;customerInfo&lt;/code&gt;.</source>
          <target state="translated">它的名称（ &lt;code&gt;customerInfo&lt;/code&gt; ）对应于指令的&lt;strong&gt;隔离范围&lt;/strong&gt;属性 &lt;code&gt;customerInfo&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e18ffa2ef59d4b87123bc4116b7fecfc6e23eb76" translate="yes" xml:space="preserve">
          <source>Its value (&lt;code&gt;=info&lt;/code&gt;) tells &lt;code&gt;$compile&lt;/code&gt; to bind to the &lt;code&gt;info&lt;/code&gt; attribute.</source>
          <target state="translated">它的值（ &lt;code&gt;=info&lt;/code&gt; ）告诉 &lt;code&gt;$compile&lt;/code&gt; 绑定到 &lt;code&gt;info&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="e2109f35483e028183630e81dec66527c27fcb3c" translate="yes" xml:space="preserve">
          <source>JSON Hijacking Protection</source>
          <target state="translated">JSON劫持保护</target>
        </trans-unit>
        <trans-unit id="a73f31364f316869a18b10faeec2662cc4789dca" translate="yes" xml:space="preserve">
          <source>JSON Vulnerability Protection</source>
          <target state="translated">JSON漏洞保护</target>
        </trans-unit>
        <trans-unit id="1a3f795e84cd2bbb65926a8a582d42403b1d5c7a" translate="yes" xml:space="preserve">
          <source>JSON string to deserialize.</source>
          <target state="translated">要反序列化的JSON字符串。</target>
        </trans-unit>
        <trans-unit id="e7310488497f531f2e417022cb940817561304d1" translate="yes" xml:space="preserve">
          <source>JSON string.</source>
          <target state="translated">JSON字符串。</target>
        </trans-unit>
        <trans-unit id="cd109ddd9abf44c82c6e482563ac9c2d1dab6b46" translate="yes" xml:space="preserve">
          <source>JSON vulnerability</source>
          <target state="translated">JSON漏洞</target>
        </trans-unit>
        <trans-unit id="f3231f4d14fc745f083c6fc41fdecc2a60618120" translate="yes" xml:space="preserve">
          <source>JSON-ified string representing &lt;code&gt;obj&lt;/code&gt;.</source>
          <target state="translated">JSON字符串，表示 &lt;code&gt;obj&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="df2d62a7c9d7c1a7fdd0de39b8a9f3b75d1b3fe4" translate="yes" xml:space="preserve">
          <source>JSONP requests must specify a callback to be used in the response from the server. This callback is passed as a query parameter in the request. You must specify the name of this parameter by setting the &lt;code&gt;jsonpCallbackParam&lt;/code&gt; property on the request config object.</source>
          <target state="translated">JSONP请求必须指定在服务器响应中使用的回调。该回调作为请求中的查询参数传递。您必须通过在请求配置对象上设置 &lt;code&gt;jsonpCallbackParam&lt;/code&gt; 属性来指定此参数的名称。</target>
        </trans-unit>
        <trans-unit id="3755f3f206953314cab133719791d70c7c568127" translate="yes" xml:space="preserve">
          <source>Jasmine</source>
          <target state="translated">Jasmine</target>
        </trans-unit>
        <trans-unit id="ec4307a3b7c7279b22900f7258d244467b4170ca" translate="yes" xml:space="preserve">
          <source>Jasmine comes with a number of matchers that help you make a variety of assertions. You should &lt;a href=&quot;http://jasmine.github.io/1.3/introduction.html#section-Matchers&quot;&gt;read the Jasmine documentation&lt;/a&gt; to see what they are. To use Jasmine with Karma, we use the &lt;a href=&quot;https://github.com/karma-runner/karma-jasmine&quot;&gt;karma-jasmine&lt;/a&gt; test runner.</source>
          <target state="translated">茉莉花附带了许多匹配器，可以帮助您进行各种声明。您应该&lt;a href=&quot;http://jasmine.github.io/1.3/introduction.html#section-Matchers&quot;&gt;阅读Jasmine文档&lt;/a&gt;以了解它们是什么。要将Jasmine与Karma一起使用，我们使用&lt;a href=&quot;https://github.com/karma-runner/karma-jasmine&quot;&gt;karma-jasmine&lt;/a&gt;测试运行程序。</target>
        </trans-unit>
        <trans-unit id="06353eaa73f71ca7f32f2abd2d524ecc102f0f53" translate="yes" xml:space="preserve">
          <source>Jasmine's &lt;code&gt;beforeAll()&lt;/code&gt; and mocha's &lt;code&gt;before()&lt;/code&gt; hooks are often useful for sharing test setup - either to reduce test run-time or simply to make for more focused test cases.</source>
          <target state="translated">Jasmine的 &lt;code&gt;beforeAll()&lt;/code&gt; 和mocha的 &lt;code&gt;before()&lt;/code&gt; 挂钩通常可用于共享测试设置-减少测试运行时间，或者只是为了使测试重点更加突出。</target>
        </trans-unit>
        <trans-unit id="cd26eab17c125b6d4053a3b51afa63e0255f89fb" translate="yes" xml:space="preserve">
          <source>JavaScript developers often use custom types to write object-oriented code. Let's explore how we could launch a unicorn into space via our &lt;code&gt;unicornLauncher&lt;/code&gt; service which is an instance of a custom type:</source>
          <target state="translated">JavaScript开发人员经常使用自定义类型来编写面向对象的代码。让我们探讨如何通过我们的 &lt;code&gt;unicornLauncher&lt;/code&gt; 服务（一个自定义类型的实例）将独角兽发射到太空：</target>
        </trans-unit>
        <trans-unit id="ee93c12cc73a4b3357dead9e3073e9c84333533a" translate="yes" xml:space="preserve">
          <source>JavaScript does not have annotations, and annotations are needed for dependency injection. The following are all valid ways of annotating function with injection arguments and are equivalent.</source>
          <target state="translated">JavaScript没有注解,依赖注入需要注解。以下都是用注入参数来注释函数的有效方式,并且是等价的。</target>
        </trans-unit>
        <trans-unit id="f87f3f5a13f550d2b612f32c40eed8fdfb04d4d7" translate="yes" xml:space="preserve">
          <source>JavaScript is a dynamically typed language which comes with great power of expression, but it also comes with almost no help from the compiler. For this reason we feel very strongly that any code written in JavaScript needs to come with a strong set of tests. We have built many features into AngularJS which make testing your AngularJS applications easy. With AngularJS, there is no excuse for not testing.</source>
          <target state="translated">JavaScript是一种动态类型的语言,它具有强大的表达能力,但它也几乎没有编译器的帮助。出于这个原因,我们非常强烈地感觉到,任何用JavaScript编写的代码都需要附带一套强大的测试。我们已经在AngularJS中内置了许多功能,这些功能可以让你的AngularJS应用测试变得简单。有了AngularJS,就没有借口不进行测试了。</target>
        </trans-unit>
        <trans-unit id="4fadc60e22e889ef4a5db8d9566fc1f75d1e1fc3" translate="yes" xml:space="preserve">
          <source>JavaScript-based Animations</source>
          <target state="translated">基于JavaScript的动画</target>
        </trans-unit>
        <trans-unit id="f0c95a02174fcae881d51cda5ca7ab7183d9d05f" translate="yes" xml:space="preserve">
          <source>Just before a scope is destroyed, a &lt;code&gt;$destroy&lt;/code&gt; event is broadcasted on this scope. Application code can register a &lt;code&gt;$destroy&lt;/code&gt; event handler that will give it a chance to perform any necessary cleanup.</source>
          <target state="translated">就在销毁示波器之前，在此示波器上广播 &lt;code&gt;$destroy&lt;/code&gt; 事件。应用程序代码可以注册 &lt;code&gt;$destroy&lt;/code&gt; 事件处理程序，这将使它有机会执行任何必要的清除。</target>
        </trans-unit>
        <trans-unit id="446df7317547fafc6781146fe724896a641a6589" translate="yes" xml:space="preserve">
          <source>Just like with the Value recipe, the Factory recipe can create a service of any type, whether it be a primitive, object literal, function, or even an instance of a custom type.</source>
          <target state="translated">就像Value配方一样,Factory配方可以创建任何类型的服务,无论是基元、对象文字、函数,甚至是自定义类型的实例。</target>
        </trans-unit>
        <trans-unit id="6f3bad15c258125fed5359f408174ac231480f45" translate="yes" xml:space="preserve">
          <source>Just like with the array annotation, you'll need to take care to keep the &lt;code&gt;$inject&lt;/code&gt; in sync with the parameters in the function declaration.</source>
          <target state="translated">就像数组注释一样，您需要注意使 &lt;code&gt;$inject&lt;/code&gt; 与函数声明中的参数保持同步。</target>
        </trans-unit>
        <trans-unit id="83b97c0c14f5a90f7cfc308d350169d4502ed064" translate="yes" xml:space="preserve">
          <source>Just starting out with AngularJS? Try working through our step by step tutorial or try building on our seed project.</source>
          <target state="translated">刚开始使用AngularJS?试着通过我们的一步步教程或尝试在我们的种子项目上进行构建。</target>
        </trans-unit>
        <trans-unit id="835db6cf74c39f78cc6a89ccd0b07490be2e3f7d" translate="yes" xml:space="preserve">
          <source>Karma</source>
          <target state="translated">Karma</target>
        </trans-unit>
        <trans-unit id="796757c2eef12e78a1cedcfc4dd244620a421fe3" translate="yes" xml:space="preserve">
          <source>Karma is a NodeJS application, and should be installed through npm/yarn. Full installation instructions are available on &lt;a href=&quot;http://karma-runner.github.io/0.12/intro/installation.html&quot;&gt;the Karma website&lt;/a&gt;.</source>
          <target state="translated">Karma是NodeJS应用程序，应通过npm / yarn安装。完整的安装说明可在&lt;a href=&quot;http://karma-runner.github.io/0.12/intro/installation.html&quot;&gt;Karma网站&lt;/a&gt;上找到。</target>
        </trans-unit>
        <trans-unit id="b3f05628aa30b14f4028806e1eb5cdfe5f20cc24" translate="yes" xml:space="preserve">
          <source>Keep in mind that extending the built-in list of attributes may expose your app to XSS or other vulnerabilities. Be very mindful of the attributes you add.</source>
          <target state="translated">请记住,扩展内置的属性列表可能会使您的应用程序面临XSS或其他漏洞。要非常注意你添加的属性。</target>
        </trans-unit>
        <trans-unit id="a92f7b09ee83168618ccf21bf5c35dba619424e7" translate="yes" xml:space="preserve">
          <source>Keep in mind that extending the built-in lists of elements may expose your app to XSS or other vulnerabilities. Be very mindful of the elements you add.</source>
          <target state="translated">请记住,扩展内置的元素列表可能会使您的应用程序面临XSS或其他漏洞。要非常注意你添加的元素。</target>
        </trans-unit>
        <trans-unit id="0b7234c93db939ba9dc42512dc4a50d3d5fc5e8d" translate="yes" xml:space="preserve">
          <source>Keep in mind that ngAnimate can detect each of these classes when added and removed.</source>
          <target state="translated">请记住,ngAnimate可以在添加和删除这些类时检测到每个类。</target>
        </trans-unit>
        <trans-unit id="c7b11c7d42b4f9176649a2805e7a06ba3998ac5d" translate="yes" xml:space="preserve">
          <source>Keep in mind that, as of AngularJS version 1.3, there is no need to change the display property to block during animation states - ngAnimate will automatically handle the style toggling for you.</source>
          <target state="translated">请记住,从AngularJS 1.3版本开始,就不需要在动画状态下将显示属性改为块状,ngAnimate会自动为你处理样式的切换。</target>
        </trans-unit>
        <trans-unit id="8f7f42cad636bff6a772bcf1eda4ec9fe24b543e" translate="yes" xml:space="preserve">
          <source>Keep in mind that, to make this easier, ngAnimate has tweaked the JS animations API to recognize when a runner instance is returned from $animateCss (so there is no need to call &lt;code&gt;runner.done(doneFn)&lt;/code&gt; inside of your JavaScript animation code). Check the &lt;a href=&quot;%24animatecss#usage.html&quot;&gt;animation code above&lt;/a&gt; to see how this works.</source>
          <target state="translated">请记住，为简化操作，ngAnimate调整了JS动画API以识别何时从$ animateCss返回了运行器实例（因此，无需在JavaScript动画代码中调用 &lt;code&gt;runner.done(doneFn)&lt;/code&gt; ）。检查&lt;a href=&quot;%24animatecss#usage.html&quot;&gt;上面&lt;/a&gt;的动画代码以了解其工作原理。</target>
        </trans-unit>
        <trans-unit id="f6da5d91090ed7c6d5814b2991a120259c7d9e93" translate="yes" xml:space="preserve">
          <source>Keeping the state of the control (valid/invalid, dirty/pristine, touched/untouched, validation errors).</source>
          <target state="translated">保持控件的状态(有效/无效、脏污/纯净、触摸/未触摸、验证错误)。</target>
        </trans-unit>
        <trans-unit id="249603dc1891319661212764d6ba00d514a14c84" translate="yes" xml:space="preserve">
          <source>KendoUI</source>
          <target state="translated">KendoUI</target>
        </trans-unit>
        <trans-unit id="f5025143a89e9b224781aa62468c0e2c91c66496" translate="yes" xml:space="preserve">
          <source>Known Issues</source>
          <target state="translated">已知问题</target>
        </trans-unit>
        <trans-unit id="50f8aa7cf7544eeebc75090c7d2c1e1a09370875" translate="yes" xml:space="preserve">
          <source>Large numbers and step validation</source>
          <target state="translated">大数和步骤验证</target>
        </trans-unit>
        <trans-unit id="5b0c7a2bd6ffad5686bfa5559eb7d1db15d82077" translate="yes" xml:space="preserve">
          <source>Later, if you want to remove the transcluded content from your DOM then you should also destroy the associated transclusion scope:</source>
          <target state="translated">之后,如果你想从你的DOM中删除转包的内容,那么你也应该销毁相关的转包范围。</target>
        </trans-unit>
        <trans-unit id="80de8be3b722879c53efa51624711a0b6a01add8" translate="yes" xml:space="preserve">
          <source>Lazily instantiated &amp;ndash; AngularJS only instantiates a service when an application component depends on it.</source>
          <target state="translated">延迟实例化&amp;ndash; AngularJS仅在应用程序组件依赖服务时才实例化服务。</target>
        </trans-unit>
        <trans-unit id="b048378ee8f5a0297ca090e6904d0ccf8b77cd20" translate="yes" xml:space="preserve">
          <source>Learn</source>
          <target state="translated">Learn</target>
        </trans-unit>
        <trans-unit id="dbeb304ace39b2772a333789790e10087fec101d" translate="yes" xml:space="preserve">
          <source>Let's add some more logic to the example that allows us to enter and calculate the costs in different currencies and also pay the invoice.</source>
          <target state="translated">让我们在这个例子中再添加一些逻辑,让我们可以输入和计算不同货币的费用,也可以支付发票。</target>
        </trans-unit>
        <trans-unit id="90ea8d67278fa3e22b77b8cc09d3a394d5450b4e" translate="yes" xml:space="preserve">
          <source>Let's change our directive to use &lt;code&gt;restrict: 'E'&lt;/code&gt;:</source>
          <target state="translated">让我们将指令更改为使用 &lt;code&gt;restrict: 'E'&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="d91be5ddf9ad7a7db54de0a3590a672352083fa1" translate="yes" xml:space="preserve">
          <source>Let's create a directive that simply replaces its contents with a static template:</source>
          <target state="translated">让我们创建一个指令,简单地用静态模板替换其内容。</target>
        </trans-unit>
        <trans-unit id="e3b2a3b462354632d09f1e671f1d24fa08274712" translate="yes" xml:space="preserve">
          <source>Let's finish our example by fetching the exchange rates from the &lt;a href=&quot;https://exchangeratesapi.io&quot;&gt;exchangeratesapi.io&lt;/a&gt; exchange rate API. The following example shows how this is done with AngularJS:</source>
          <target state="translated">让我们通过从&lt;a href=&quot;https://exchangeratesapi.io&quot;&gt;exchangeatesapi.io&lt;/a&gt;汇率API 获取汇率来结束示例。以下示例显示了如何使用AngularJS完成此操作：</target>
        </trans-unit>
        <trans-unit id="a2d73fe9e2675c4a6e225d3286eff53e81aab313" translate="yes" xml:space="preserve">
          <source>Let's refactor our example and move the currency conversion into a service in another file:</source>
          <target state="translated">让我们重构我们的例子,并将货币转换移动到另一个文件中的服务。</target>
        </trans-unit>
        <trans-unit id="e33ef1ad31a993b44b167589b8164ec89e801fcb" translate="yes" xml:space="preserve">
          <source>Let's say for example we have two views that are managed by &lt;code&gt;ng-view&lt;/code&gt; and we want to show that there is a relationship between two components situated in within these views. By using the &lt;code&gt;ng-animate-ref&lt;/code&gt; attribute we can identify that the two components are paired together and we can then attach an animation, which is triggered when the view changes.</source>
          <target state="translated">例如，假设我们有两个由 &lt;code&gt;ng-view&lt;/code&gt; 管理的视图，并且我们想证明位于这些视图中的两个组件之间存在关系。通过使用 &lt;code&gt;ng-animate-ref&lt;/code&gt; 属性，我们可以确定两个组件已配对在一起，然后可以附加动画，该动画在视图更改时触发。</target>
        </trans-unit>
        <trans-unit id="298a3adba79b2a136a068e0087e224c280869e40" translate="yes" xml:space="preserve">
          <source>Let's say that our &lt;code&gt;unicornLauncher&lt;/code&gt; service can stamp a unicorn with the planet name it's being launched from if this name was provided during the configuration phase. The planet name is application specific and is used also by various controllers during the runtime of the application. We can then define the planet name as a constant like this:</source>
          <target state="translated">假设我们的 &lt;code&gt;unicornLauncher&lt;/code&gt; 服务可以在配置阶段提供此名称的情况下，使用该行星名称来标记一个独角兽。行星名称是特定于应用程序的，并且在应用程序运行时也被各种控制器使用。然后，我们可以将行星名称定义为如下常量：</target>
        </trans-unit>
        <trans-unit id="9f0321f70aa92a49f56c96150c79e4cd2b88e227" translate="yes" xml:space="preserve">
          <source>Let's say that our &lt;code&gt;unicornLauncher&lt;/code&gt; service is so awesome that many apps use it. By default the launcher shoots unicorns into space without any protective shielding. But on some planets the atmosphere is so thick that we must wrap every unicorn in tinfoil before sending it on its intergalactic trip, otherwise they would burn while passing through the atmosphere. It would then be great if we could configure the launcher to use the tinfoil shielding for each launch in apps that need it. We can make it configurable like so:</source>
          <target state="translated">假设我们的 &lt;code&gt;unicornLauncher&lt;/code&gt; 服务非常棒，以至于许多应用程序都在使用它。默认情况下，发射器会在没有任何防护罩的情况下将独角兽射入太空。但是在某些行星上，大气是如此之厚，以至于我们必须将每只独角兽都包裹在锡箔纸中，然后才能发送出去，否则它们在穿过大气层时会燃烧。如果能够将启动器配置为在需要启动的应用程序中为每次启动使用锡箔纸屏蔽，那就太好了。我们可以像这样配置它：</target>
        </trans-unit>
        <trans-unit id="7d4554d27f3ea48a7db947cce4f856a4b1a611a8" translate="yes" xml:space="preserve">
          <source>Let's say that our HTML code for our messages container looks like so:</source>
          <target state="translated">假设我们的消息容器的HTML代码是这样的。</target>
        </trans-unit>
        <trans-unit id="f866ae3fd006fdb24ccbab98934a0c21ceee6ca1" translate="yes" xml:space="preserve">
          <source>Let's say that we want to have a very simple service called &quot;clientId&quot; that provides a string representing an authentication id used for some remote API. You would define it like this:</source>
          <target state="translated">假设我们想有一个非常简单的服务,叫做 &quot;clientId&quot;,它提供了一个字符串,代表了一个用于远程API的验证id。你可以这样定义它。</target>
        </trans-unit>
        <trans-unit id="6b8a3e62938bff7b32e460edfe415d213c9c307c" translate="yes" xml:space="preserve">
          <source>Let's say we have created an app that uses the default format for many of our &lt;code&gt;Date&lt;/code&gt; filters. Suddenly requirements have changed (that never happens) and we need all of our default dates to be &lt;code&gt;'shortDate'&lt;/code&gt; instead of &lt;code&gt;'mediumDate'&lt;/code&gt;.</source>
          <target state="translated">假设我们已经创建了一个应用程序，该应用程序对许多&amp;ldquo; &lt;code&gt;Date&lt;/code&gt; 过滤器使用默认格式。需求突然发生了变化（从未发生过），我们需要所有默认日期都为 &lt;code&gt;'shortDate'&lt;/code&gt; 而不是 &lt;code&gt;'mediumDate'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7a869f2b1dc009607a199a9b62ccec65eadcb3a2" translate="yes" xml:space="preserve">
          <source>Let's say you are writing a banking app and you want to display an account balance of 1000 dollars. You write the following binding using the currency filter:</source>
          <target state="translated">假设你正在编写一个银行应用,你想显示一个账户余额为1000美元。你使用货币过滤器写了以下绑定。</target>
        </trans-unit>
        <trans-unit id="c628b1fd2c31e5e7025394209d765b5f5e59eda2" translate="yes" xml:space="preserve">
          <source>Let's say you have a chunk of your template that represents a customer's information. This template is repeated many times in your code. When you change it in one place, you have to change it in several others. This is a good opportunity to use a directive to simplify your template.</source>
          <target state="translated">比方说,你的模板中有一大块代表客户信息。这个模板在你的代码中重复了很多次。当你在一个地方改变它时,你必须在其他几个地方改变它。这是一个很好的机会,使用指令来简化你的模板。</target>
        </trans-unit>
        <trans-unit id="c8c58cb6d56f10eb4cc5271ca81a0f4260534c05" translate="yes" xml:space="preserve">
          <source>Let's say, however, that we would also like to create a service that computes a token used for authentication against a remote API. This token will be called &lt;code&gt;apiToken&lt;/code&gt; and will be computed based on the &lt;code&gt;clientId&lt;/code&gt; value and a secret stored in the browser's local storage:</source>
          <target state="translated">假设我们还想创建一个服务，该服务计算用于针对远程API进行身份验证的令牌。该令牌将被称为 &lt;code&gt;apiToken&lt;/code&gt; ，并将根据 &lt;code&gt;clientId&lt;/code&gt; 值和存储在浏览器本地存储中的密钥进行计算：</target>
        </trans-unit>
        <trans-unit id="ebb2113b148155b9fb3e678b86a1b6292b725041" translate="yes" xml:space="preserve">
          <source>Let's see an example of a enter/leave animation using &lt;code&gt;ngRepeat&lt;/code&gt;:</source>
          <target state="translated">我们来看一个使用 &lt;code&gt;ngRepeat&lt;/code&gt; 的输入/离开动画的示例：</target>
        </trans-unit>
        <trans-unit id="dd679a2e36289a34afcd1847fbd10d9cfe7cf0a5" translate="yes" xml:space="preserve">
          <source>Let's start with an AngularJS app with no dependencies.</source>
          <target state="translated">让我们从一个没有依赖关系的AngularJS应用开始。</target>
        </trans-unit>
        <trans-unit id="853b64b22116270e945534edd7f9f969ae039277" translate="yes" xml:space="preserve">
          <source>Let's start with input fields for quantity and cost whose values are multiplied to produce the total of the invoice:</source>
          <target state="translated">让我们从数量和成本的输入字段开始,它们的值相乘后得出发票的总额。</target>
        </trans-unit>
        <trans-unit id="3a87426a46ae3a1bd831c83a8ac22a86b6a2ddc6" translate="yes" xml:space="preserve">
          <source>Let's take a closer look at the scope option:</source>
          <target state="translated">我们再来看看范围选项。</target>
        </trans-unit>
        <trans-unit id="ad6f98d49bcc332ad093324b782e6e8ec7a31f24" translate="yes" xml:space="preserve">
          <source>Let's take a look at how we would create a very simple component via the directive api that depends on the &lt;code&gt;planetName&lt;/code&gt; constant we've just defined and displays the planet name, in our case: &quot;Planet Name: Greasy Giant&quot;.</source>
          <target state="translated">让我们看一下如何通过指令api创建一个非常简单的组件，该组件取决于我们刚刚定义的 &lt;code&gt;planetName&lt;/code&gt; 常量并显示行星名称，在本例中为&amp;ldquo;行星名称：油腻巨人&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="02630abdf06f034279a0636877f3aa1fce289330" translate="yes" xml:space="preserve">
          <source>Let's take a look at the different scenarios for creating and using services via various recipe types. We'll start with the simplest case possible where various places in your code need a shared string and we'll accomplish this via Value recipe.</source>
          <target state="translated">让我们来看看通过各种recipe类型创建和使用服务的不同场景。我们先从最简单的情况开始,在你的代码中各个地方都需要一个共享的字符串,我们将通过Value recipe来实现。</target>
        </trans-unit>
        <trans-unit id="65084febdc505a3aedac5a7c194b2efa216e2144" translate="yes" xml:space="preserve">
          <source>Let's write some tests to show how to override configuration in tests.</source>
          <target state="translated">让我们写一些测试来展示如何在测试中覆盖配置。</target>
        </trans-unit>
        <trans-unit id="7db120ff0add5b38c6339cbb76ef30243d16848f" translate="yes" xml:space="preserve">
          <source>Licensed under the Creative Commons Attribution License 3.0.</source>
          <target state="translated">根据知识共享署名协议3.0许可。</target>
        </trans-unit>
        <trans-unit id="e91f6ba4ec02c67a796600daa345b1a2b526d763" translate="yes" xml:space="preserve">
          <source>Licensed under the Creative Commons Attribution License 4.0.</source>
          <target state="translated">根据知识共享署名4.0授权。</target>
        </trans-unit>
        <trans-unit id="d3911533e30bd2745884e44a33dc2841ba42a193" translate="yes" xml:space="preserve">
          <source>Life-cycle hook examples</source>
          <target state="translated">生命周期钩的例子</target>
        </trans-unit>
        <trans-unit id="72d665ddd236e21d4dba142cf80503414b7be118" translate="yes" xml:space="preserve">
          <source>Life-cycle hooks</source>
          <target state="translated">生命周期钩子</target>
        </trans-unit>
        <trans-unit id="a28d0799ebeb3a447cb6b6539c436a3337a59d6e" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;max&lt;/code&gt;, sets the &lt;code&gt;max&lt;/code&gt; validation error key if the value entered is greater than &lt;code&gt;ngMax&lt;/code&gt;, but does not trigger HTML5 native validation. Takes an expression.</source>
          <target state="translated">Like &lt;code&gt;max&lt;/code&gt; , sets the &lt;code&gt;max&lt;/code&gt; validation error key if the value entered is greater than &lt;code&gt;ngMax&lt;/code&gt; , but does not trigger HTML5 native validation. Takes an expression.</target>
        </trans-unit>
        <trans-unit id="736200b3c3163acfc763d1dee6a087b566995823" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;min&lt;/code&gt;, sets the &lt;code&gt;min&lt;/code&gt; validation error key if the value entered is less than &lt;code&gt;ngMin&lt;/code&gt;, but does not trigger HTML5 native validation. Takes an expression.</source>
          <target state="translated">Like &lt;code&gt;min&lt;/code&gt; , sets the &lt;code&gt;min&lt;/code&gt; validation error key if the value entered is less than &lt;code&gt;ngMin&lt;/code&gt; , but does not trigger HTML5 native validation. Takes an expression.</target>
        </trans-unit>
        <trans-unit id="53200f8a62b7c0c12c64684c5c3a36ca905e973d" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;step&lt;/code&gt;, sets the &lt;code&gt;step&lt;/code&gt; validation error key if the value entered does not fit the &lt;code&gt;ngStep&lt;/code&gt; constraint, but does not trigger HTML5 native validation. Takes an expression.</source>
          <target state="translated">Like &lt;code&gt;step&lt;/code&gt; , sets the &lt;code&gt;step&lt;/code&gt; validation error key if the value entered does not fit the &lt;code&gt;ngStep&lt;/code&gt; constraint, but does not trigger HTML5 native validation. Takes an expression.</target>
        </trans-unit>
        <trans-unit id="ad7b72d8ff408e1dcf3b167cf8de1b0af89c8cd1" translate="yes" xml:space="preserve">
          <source>Like any software library, it is critical to keep AngularJS up to date. Please track the &lt;a href=&quot;https://github.com/angular/angular.js/blob/master/CHANGELOG.md&quot;&gt;CHANGELOG&lt;/a&gt; and make sure you are aware of upcoming security patches and other updates.</source>
          <target state="translated">像任何软件库一样，使AngularJS保持最新至关重要。请跟踪&lt;a href=&quot;https://github.com/angular/angular.js/blob/master/CHANGELOG.md&quot;&gt;CHANGELOG&lt;/a&gt;，并确保您了解即将到来的安全补丁和其他更新。</target>
        </trans-unit>
        <trans-unit id="4aff2bb0aea69064ecfe10bde17f80bcd00b4eab" translate="yes" xml:space="preserve">
          <source>Like with &lt;code&gt;$provide.decorator&lt;/code&gt;, the &lt;code&gt;module.decorator&lt;/code&gt; function runs during the config phase of the app. That means you can define a &lt;code&gt;module.decorator&lt;/code&gt; before the decorated service is defined.</source>
          <target state="translated">像 &lt;code&gt;$provide.decorator&lt;/code&gt; &lt;code&gt;module.decorator&lt;/code&gt; 一样，module.decorator函数在应用程序的配置阶段运行。这意味着您可以在定义修饰的服务之前定义 &lt;code&gt;module.decorator&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a33352096ab23bfe64b61b04f4606de68cb10c82" translate="yes" xml:space="preserve">
          <source>Links starting with '/' that lead to a different base path</source>
          <target state="translated">以'/'开头的链接,通往不同的基本路径。</target>
        </trans-unit>
        <trans-unit id="6c73374c914b151e896711eea2feec173d938d57" translate="yes" xml:space="preserve">
          <source>Links that contain &lt;code&gt;target&lt;/code&gt; element</source>
          <target state="translated">包含 &lt;code&gt;target&lt;/code&gt; 元素的链接</target>
        </trans-unit>
        <trans-unit id="82538d88e9ab837cce2872605a50080ea1374920" translate="yes" xml:space="preserve">
          <source>Listener directives, such as &lt;a href=&quot;../api/ng/directive/ngclick&quot;&gt;ng-click&lt;/a&gt;, register a listener with the DOM. When the DOM listener fires, the directive executes the associated expression and updates the view using the &lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24apply.html&quot;&gt;$apply()&lt;/a&gt; method.</source>
          <target state="translated">侦听器指令（例如&lt;a href=&quot;../api/ng/directive/ngclick&quot;&gt;ng-click）&lt;/a&gt;在DOM中注册一个侦听器。当DOM侦听器触发时，伪指令执行关联的表达式并使用&lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24apply.html&quot;&gt;$ apply（）&lt;/a&gt;方法更新视图。</target>
        </trans-unit>
        <trans-unit id="cd36de4b8e171b9332630e621a9c668d36e80403" translate="yes" xml:space="preserve">
          <source>Listens on events of a given type. See &lt;a href=&quot;%24rootscope.scope#%24emit.html&quot;&gt;$emit&lt;/a&gt; for discussion of event life cycle.</source>
          <target state="translated">侦听给定类型的事件。有关事件生命周期的讨论，请参见&lt;a href=&quot;%24rootscope.scope#%24emit.html&quot;&gt;$ emit&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d5f227fbe66da636f154d7a55f6e58ac8bc7df94" translate="yes" xml:space="preserve">
          <source>Load the content of a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; element into &lt;a href=&quot;../service/%24templatecache&quot;&gt;&lt;code&gt;$templateCache&lt;/code&gt;&lt;/a&gt;, so that the template can be used by &lt;a href=&quot;nginclude&quot;&gt;&lt;code&gt;ngInclude&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../ngroute/directive/ngview&quot;&gt;&lt;code&gt;ngView&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../../../guide/directive&quot;&gt;directives&lt;/a&gt;. The type of the &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; element must be specified as &lt;code&gt;text/ng-template&lt;/code&gt;, and a cache name for the template must be assigned through the element's &lt;code&gt;id&lt;/code&gt;, which can then be used as a directive's &lt;code&gt;templateUrl&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 元素的内容加载到&lt;a href=&quot;../service/%24templatecache&quot;&gt; &lt;code&gt;$templateCache&lt;/code&gt; &lt;/a&gt;，以便&lt;a href=&quot;nginclude&quot;&gt; &lt;code&gt;ngInclude&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../ngroute/directive/ngview&quot;&gt; &lt;code&gt;ngView&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../../guide/directive&quot;&gt;指令&lt;/a&gt;可以使用该模板。 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 元素的类型必须指定为 &lt;code&gt;text/ng-template&lt;/code&gt; ，并且模板的缓存名称必须通过元素的 &lt;code&gt;id&lt;/code&gt; 分配，然后可以将其用作指令的 &lt;code&gt;templateUrl&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d2682f5818fdf3a2c34a3d670292ba36031d8c26" translate="yes" xml:space="preserve">
          <source>Load the content of a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; element into &lt;a href=&quot;service/%24templatecache&quot;&gt;&lt;code&gt;$templateCache&lt;/code&gt;&lt;/a&gt;, so that the template can be used by &lt;a href=&quot;directive/nginclude&quot;&gt;&lt;code&gt;ngInclude&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../ngroute/directive/ngview&quot;&gt;&lt;code&gt;ngView&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../../guide/directive&quot;&gt;directives&lt;/a&gt;. The type of the &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; element must be specified as &lt;code&gt;text/ng-template&lt;/code&gt;, and a cache name for the template must be assigned through the element's &lt;code&gt;id&lt;/code&gt;, which can then be used as a directive's &lt;code&gt;templateUrl&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 元素的内容加载到&lt;a href=&quot;service/%24templatecache&quot;&gt; &lt;code&gt;$templateCache&lt;/code&gt; &lt;/a&gt;，以便&lt;a href=&quot;directive/nginclude&quot;&gt; &lt;code&gt;ngInclude&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../ngroute/directive/ngview&quot;&gt; &lt;code&gt;ngView&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../guide/directive&quot;&gt;指令&lt;/a&gt;可以使用该模板。 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 元素的类型必须指定为 &lt;code&gt;text/ng-template&lt;/code&gt; ，并且模板的缓存名称必须通过元素的 &lt;code&gt;id&lt;/code&gt; 分配，然后可以将其用作指令的 &lt;code&gt;templateUrl&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="386bb84f82a8ccd818e6513db565d7414d459020" translate="yes" xml:space="preserve">
          <source>Loading &amp;hellip;</source>
          <target state="translated">载入中...</target>
        </trans-unit>
        <trans-unit id="92daf596f9c7373f5742e7adea3239594ef098ac" translate="yes" xml:space="preserve">
          <source>Local Storage and session: &lt;a href=&quot;https://github.com/gsklee/ngStorage&quot;&gt;ngStorage&lt;/a&gt;</source>
          <target state="translated">本地存储和会话：&lt;a href=&quot;https://github.com/gsklee/ngStorage&quot;&gt;ngStorage&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f197bc8d0c1a5832b3ddd1cbb680e16792aa794b" translate="yes" xml:space="preserve">
          <source>Local variables object, useful for overriding values in scope.</source>
          <target state="translated">局部变量对象,用于覆盖范围内的值。</target>
        </trans-unit>
        <trans-unit id="9e2b5c22af01ee07caf3e1b6e0e50b119b72a276" translate="yes" xml:space="preserve">
          <source>Localizable pluralization is supported via the &lt;a href=&quot;../api/ng/directive/ngpluralize&quot;&gt;&lt;code&gt;ngPluralize&lt;/code&gt; directive&lt;/a&gt;. Additionally, you can use &lt;a href=&quot;i18n#messageformat-extensions.html&quot;&gt;MessageFormat extensions&lt;/a&gt; to &lt;code&gt;$interpolate&lt;/code&gt; for localizable pluralization and gender support in all interpolations via the &lt;code&gt;ngMessageFormat&lt;/code&gt; module.</source>
          <target state="translated">可通过&lt;a href=&quot;../api/ng/directive/ngpluralize&quot;&gt; &lt;code&gt;ngPluralize&lt;/code&gt; 指令&lt;/a&gt;支持可本地化的多元化。此外，您还可以使用&lt;a href=&quot;i18n#messageformat-extensions.html&quot;&gt;的MessageFormat扩展&lt;/a&gt;至 &lt;code&gt;$interpolate&lt;/code&gt; 通过在所有插值可本地化的多元化和性别的支持 &lt;code&gt;ngMessageFormat&lt;/code&gt; 模块。</target>
        </trans-unit>
        <trans-unit id="3c38c9e8280edd6b4b9e66ce981d790b329a5986" translate="yes" xml:space="preserve">
          <source>Logically the rendering of &lt;code&gt;{{greeting}}&lt;/code&gt; involves:</source>
          <target state="translated">从逻辑上讲， &lt;code&gt;{{greeting}}&lt;/code&gt; 的呈现涉及：</target>
        </trans-unit>
        <trans-unit id="88c1ecf02babeb5ad2e55e9263728fa80f7464a9" translate="yes" xml:space="preserve">
          <source>Looking at &lt;code&gt;index.html&lt;/code&gt;, the first &lt;code&gt;&amp;lt;my-customer&amp;gt;&lt;/code&gt; element binds the &lt;code&gt;info&lt;/code&gt; attribute to &lt;code&gt;naomi&lt;/code&gt;, which we have exposed on our controller's scope. The second binds &lt;code&gt;info&lt;/code&gt; to &lt;code&gt;igor&lt;/code&gt;.</source>
          <target state="translated">查看 &lt;code&gt;index.html&lt;/code&gt; ，第一个 &lt;code&gt;&amp;lt;my-customer&amp;gt;&lt;/code&gt; 元素将 &lt;code&gt;info&lt;/code&gt; 属性绑定到 &lt;code&gt;naomi&lt;/code&gt; ，我们已经在控制器的作用域中公开了它。第二个将 &lt;code&gt;info&lt;/code&gt; 绑定到 &lt;code&gt;igor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e62713f092f6126d14c257b1a2ea3e1321cd8698" translate="yes" xml:space="preserve">
          <source>Looking back at &lt;code&gt;myPane&lt;/code&gt;'s definition, notice the last argument in its &lt;code&gt;link&lt;/code&gt; function: &lt;code&gt;tabsCtrl&lt;/code&gt;. When a directive requires a controller, it receives that controller as the fourth argument of its &lt;code&gt;link&lt;/code&gt; function. Taking advantage of this, &lt;code&gt;myPane&lt;/code&gt; can call the &lt;code&gt;addPane&lt;/code&gt; function of &lt;code&gt;myTabs&lt;/code&gt;.</source>
          <target state="translated">回顾 &lt;code&gt;myPane&lt;/code&gt; 的定义，请注意其 &lt;code&gt;link&lt;/code&gt; 函数中的最后一个参数： &lt;code&gt;tabsCtrl&lt;/code&gt; 。当指令需要控制器时，它将接收该控制器作为其 &lt;code&gt;link&lt;/code&gt; 函数的第四个参数。利用这一点， &lt;code&gt;myPane&lt;/code&gt; 可以调用 &lt;code&gt;addPane&lt;/code&gt; 的功能 &lt;code&gt;myTabs&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="84817f41d25fc5b19c9eb66508717663ce503692" translate="yes" xml:space="preserve">
          <source>MVC components in angular:</source>
          <target state="translated">angular中的MVC组件。</target>
        </trans-unit>
        <trans-unit id="c4c061d266032ace287629ddef3b630f9da95456" translate="yes" xml:space="preserve">
          <source>Mailing List</source>
          <target state="translated">邮件列表</target>
        </trans-unit>
        <trans-unit id="2aed1946399b485ebf0139306da8f10efbf28a7d" translate="yes" xml:space="preserve">
          <source>Maintains synchronization between itself and the browser's URL when the user</source>
          <target state="translated">当用户使用浏览器的URL时,保持自身与浏览器的URL同步。</target>
        </trans-unit>
        <trans-unit id="f4e937da2bde1d6d0cfc0d02a86baa0ee73041b8" translate="yes" xml:space="preserve">
          <source>Make sure to trigger the &lt;code&gt;doneFunction&lt;/code&gt; once the animation is fully complete.</source>
          <target state="translated">动画完全完成后，请确保触发 &lt;code&gt;doneFunction&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="85f50f3c3504cad9a5153e8c3e0188d355cdd4c4" translate="yes" xml:space="preserve">
          <source>Manage the life-cycle of other components (for example, to create service instances).</source>
          <target state="translated">管理其他组件的生命周期(例如,创建服务实例)。</target>
        </trans-unit>
        <trans-unit id="1849bd470e0a02c13c2a2ddb02f3758c9affbd6a" translate="yes" xml:space="preserve">
          <source>Manipulate DOM &amp;mdash; Controllers should contain only business logic. Putting any presentation logic into Controllers significantly affects its testability. AngularJS has &lt;a href=&quot;databinding&quot;&gt;databinding&lt;/a&gt; for most cases and &lt;a href=&quot;directive&quot;&gt;directives&lt;/a&gt; to encapsulate manual DOM manipulation.</source>
          <target state="translated">操作DOM-控制器应仅包含业务逻辑。将任何表示逻辑放入Controller中都会极大地影响其可测试性。AngularJS 在大多数情况下都具有&lt;a href=&quot;databinding&quot;&gt;数据绑定&lt;/a&gt;和&lt;a href=&quot;directive&quot;&gt;指令&lt;/a&gt;以封装手动DOM操作。</target>
        </trans-unit>
        <trans-unit id="9af5b7cc102e62cfc978a4d85d9c90ff03b0df28" translate="yes" xml:space="preserve">
          <source>Manual Initialization</source>
          <target state="translated">手动初始化</target>
        </trans-unit>
        <trans-unit id="90f5e60e65fca1294553bf2cd139697a3ef29d83" translate="yes" xml:space="preserve">
          <source>Map of service factory which need to be provided for the current scope. Defaults to &lt;a href=&quot;https://code.angularjs.org/1.7.8/docs/api/ng&quot;&gt;&lt;code&gt;ng&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">当前范围需要提供的服务工厂地图。默认为&lt;a href=&quot;https://code.angularjs.org/1.7.8/docs/api/ng&quot;&gt; &lt;code&gt;ng&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ccbcbed9e1a75b205a840a23be21449dd188c578" translate="yes" xml:space="preserve">
          <source>Map of service factory which need to be provided for the current scope. Defaults to &lt;a href=&quot;https://code.angularjs.org/1.8.2/docs/api/ng&quot;&gt;&lt;code&gt;ng&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Map of service factory which need to be provided for the current scope. Defaults to &lt;a href=&quot;https://code.angularjs.org/1.8.2/docs/api/ng&quot;&gt; &lt;code&gt;ng&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="5269958ad384de42d0b63bacb9f5157d606dc742" translate="yes" xml:space="preserve">
          <source>Mapping information to be assigned to &lt;code&gt;$route.current&lt;/code&gt; on route match.</source>
          <target state="translated">路由匹配时要分配给 &lt;code&gt;$route.current&lt;/code&gt; 映射信息。</target>
        </trans-unit>
        <trans-unit id="da3d8cef85e180466f01ff233815f53e0dd3ef41" translate="yes" xml:space="preserve">
          <source>Mapping information to be assigned to &lt;code&gt;$route.current&lt;/code&gt;. If called with a string, the value maps to &lt;code&gt;redirectTo&lt;/code&gt;.</source>
          <target state="translated">要分配给 &lt;code&gt;$route.current&lt;/code&gt; 映射信息。如果使用字符串调用，则该值将映射到 &lt;code&gt;redirectTo&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="44a921d79f06891bfc2ef6533b9ad081d31ae1c1" translate="yes" xml:space="preserve">
          <source>Matching Directives</source>
          <target state="translated">匹配指令</target>
        </trans-unit>
        <trans-unit id="3e5d7daf956c2a40411ad8f2caaffa9353d8e9cb" translate="yes" xml:space="preserve">
          <source>Matching model and option values</source>
          <target state="translated">匹配模型和期权价值</target>
        </trans-unit>
        <trans-unit id="ce55e08fd61078003560d3df48ca614d3ef433a6" translate="yes" xml:space="preserve">
          <source>Matching route requests</source>
          <target state="translated">匹配路线请求</target>
        </trans-unit>
        <trans-unit id="a5beb361a1706e9b51cb40edde5a3ab468f07e34" translate="yes" xml:space="preserve">
          <source>Message order</source>
          <target state="translated">留言顺序</target>
        </trans-unit>
        <trans-unit id="9344efa286fd5e9da95be089754f4d314f0c308d" translate="yes" xml:space="preserve">
          <source>MessageFormat extensions</source>
          <target state="translated">消息格式扩展</target>
        </trans-unit>
        <trans-unit id="f1702b4686278becffc88baabe6f4b7a8355532c" translate="yes" xml:space="preserve">
          <source>Messages</source>
          <target state="translated">Messages</target>
        </trans-unit>
        <trans-unit id="218cc71b2cafc9fcbd7fceeec963d55a35fec45c" translate="yes" xml:space="preserve">
          <source>Messages immediately follow a selection keyword and are optionally preceded by whitespace. They are written in single curly braces (&lt;code&gt;{}&lt;/code&gt;). They may contain AngularJS interpolation syntax inside them.</source>
          <target state="translated">消息紧随选择关键字之后，并可选地以空格开头。它们用大括号（ &lt;code&gt;{}&lt;/code&gt; ）书写。它们内部可能包含AngularJS插值语法。</target>
        </trans-unit>
        <trans-unit id="22617e3b4156662ce4d8bd4830be681f85178aee" translate="yes" xml:space="preserve">
          <source>Messages immediately follow a selection keyword and are optionally preceded by whitespace. They are written in single curly braces (&lt;code&gt;{}&lt;/code&gt;). They may contain AngularJS interpolation syntax inside them. In addition, the &lt;code&gt;#&lt;/code&gt; symbol is a placeholder for the actual numeric value of the expression.</source>
          <target state="translated">消息紧随选择关键字之后，并可选地以空格开头。它们用大括号（ &lt;code&gt;{}&lt;/code&gt; ）书写。它们内部可能包含AngularJS插值语法。另外， &lt;code&gt;#&lt;/code&gt; 符号是表达式的实际数值的占位符。</target>
        </trans-unit>
        <trans-unit id="4360339f6ba188dfc1f3a475e862ec2c0d68ad84" translate="yes" xml:space="preserve">
          <source>Method for serializing common AngularJS objects (scope, elements, etc..) into strings. It is useful for logging objects to the console when debugging.</source>
          <target state="translated">用于将常见的AngularJS对象(scope、元素等)序列化为字符串的方法。它对于调试时将对象记录到控制台很有用。</target>
        </trans-unit>
        <trans-unit id="43639e3b7d3b45a703fcba77c83b24edff6ec4cf" translate="yes" xml:space="preserve">
          <source>Method's `this`</source>
          <target state="translated">方法的 &quot;这</target>
        </trans-unit>
        <trans-unit id="7e4ac6803c9159c694f63d089cb06b2519c16aba" translate="yes" xml:space="preserve">
          <source>Methods</source>
          <target state="translated">Methods</target>
        </trans-unit>
        <trans-unit id="b1d702459399a2512fba5a402d4d5f26aee34693" translate="yes" xml:space="preserve">
          <source>Mobile</source>
          <target state="translated">Mobile</target>
        </trans-unit>
        <trans-unit id="d724e7ec1e548df829cecc5ca677f6410b0ee24d" translate="yes" xml:space="preserve">
          <source>Mock implementation of &lt;a href=&quot;../../ng/service/%24exceptionhandler&quot;&gt;&lt;code&gt;$exceptionHandler&lt;/code&gt;&lt;/a&gt; that rethrows or logs errors passed to it. See &lt;a href=&quot;../provider/%24exceptionhandlerprovider&quot;&gt;$exceptionHandlerProvider&lt;/a&gt; for configuration information.</source>
          <target state="translated">模拟实现&lt;a href=&quot;../../ng/service/%24exceptionhandler&quot;&gt; &lt;code&gt;$exceptionHandler&lt;/code&gt; &lt;/a&gt;，以重新抛出或记录传递给它的错误。有关配置信息，请参见&lt;a href=&quot;../provider/%24exceptionhandlerprovider&quot;&gt;$ exceptionHandlerProvider&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="95690efafa1aec8a5967e5ca97f434409e9cbdee" translate="yes" xml:space="preserve">
          <source>Mock implementation of &lt;a href=&quot;../../ng/service/%24log&quot;&gt;&lt;code&gt;$log&lt;/code&gt;&lt;/a&gt; that gathers all logged messages in arrays (one array per logging level). These arrays are exposed as &lt;code&gt;logs&lt;/code&gt; property of each of the level-specific log function, e.g. for level &lt;code&gt;error&lt;/code&gt; the array is exposed as &lt;code&gt;$log.error.logs&lt;/code&gt;.</source>
          <target state="translated">模拟&lt;a href=&quot;../../ng/service/%24log&quot;&gt; &lt;code&gt;$log&lt;/code&gt; &lt;/a&gt;实现，它将所有已记录的消息收集到数组中（每个记录级别一个数组）。这些数组公开为每个特定于级别的日志功能的 &lt;code&gt;logs&lt;/code&gt; 属性，例如，对于级别 &lt;code&gt;error&lt;/code&gt; 该数组公开为 &lt;code&gt;$log.error.logs&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c792a9824ded906f50da531e1c45870b67a1a1f1" translate="yes" xml:space="preserve">
          <source>Mock implementation of &lt;a href=&quot;../ng/service/%24exceptionhandler&quot;&gt;&lt;code&gt;$exceptionHandler&lt;/code&gt;&lt;/a&gt; that rethrows or logs errors passed to it. See &lt;a href=&quot;provider/%24exceptionhandlerprovider&quot;&gt;$exceptionHandlerProvider&lt;/a&gt; for configuration information.</source>
          <target state="translated">模拟实现&lt;a href=&quot;../ng/service/%24exceptionhandler&quot;&gt; &lt;code&gt;$exceptionHandler&lt;/code&gt; &lt;/a&gt;，以重新抛出或记录传递给它的错误。有关配置信息，请参见&lt;a href=&quot;provider/%24exceptionhandlerprovider&quot;&gt;$ exceptionHandlerProvider&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="68cd4a92c7e27b6bb0d8d5d52580a952d3a23598" translate="yes" xml:space="preserve">
          <source>Mock implementation of &lt;a href=&quot;../ng/service/%24log&quot;&gt;&lt;code&gt;$log&lt;/code&gt;&lt;/a&gt; that gathers all logged messages in arrays (one array per logging level). These arrays are exposed as &lt;code&gt;logs&lt;/code&gt; property of each of the level-specific log function, e.g. for level &lt;code&gt;error&lt;/code&gt; the array is exposed as &lt;code&gt;$log.error.logs&lt;/code&gt;.</source>
          <target state="translated">模拟&lt;a href=&quot;../ng/service/%24log&quot;&gt; &lt;code&gt;$log&lt;/code&gt; &lt;/a&gt;实现，它将所有已记录的消息收集到数组中（每个记录级别一个数组）。这些数组公开为每个特定于级别的日志功能的 &lt;code&gt;logs&lt;/code&gt; 属性，例如，对于级别 &lt;code&gt;error&lt;/code&gt; 该数组公开为 &lt;code&gt;$log.error.logs&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="752de6efdd11fb76bababaaf2aeeed8daf63a62a" translate="yes" xml:space="preserve">
          <source>Mock implementation of &lt;a href=&quot;ng/service/%24exceptionhandler&quot;&gt;&lt;code&gt;$exceptionHandler&lt;/code&gt;&lt;/a&gt; that rethrows or logs errors passed to it. See &lt;a href=&quot;ngmock/provider/%24exceptionhandlerprovider&quot;&gt;$exceptionHandlerProvider&lt;/a&gt; for configuration information.</source>
          <target state="translated">模拟实现&lt;a href=&quot;ng/service/%24exceptionhandler&quot;&gt; &lt;code&gt;$exceptionHandler&lt;/code&gt; &lt;/a&gt;，以重新抛出或记录传递给它的错误。有关配置信息，请参见&lt;a href=&quot;ngmock/provider/%24exceptionhandlerprovider&quot;&gt;$ exceptionHandlerProvider&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6663abd0c82d9922ac001aab44db50268d035bb7" translate="yes" xml:space="preserve">
          <source>Mock implementation of &lt;a href=&quot;ng/service/%24log&quot;&gt;&lt;code&gt;$log&lt;/code&gt;&lt;/a&gt; that gathers all logged messages in arrays (one array per logging level). These arrays are exposed as &lt;code&gt;logs&lt;/code&gt; property of each of the level-specific log function, e.g. for level &lt;code&gt;error&lt;/code&gt; the array is exposed as &lt;code&gt;$log.error.logs&lt;/code&gt;.</source>
          <target state="translated">模拟&lt;a href=&quot;ng/service/%24log&quot;&gt; &lt;code&gt;$log&lt;/code&gt; &lt;/a&gt;实现，它将所有已记录的消息收集到数组中（每个记录级别一个数组）。这些数组公开为每个特定于级别的日志功能的 &lt;code&gt;logs&lt;/code&gt; 属性，例如，对于级别 &lt;code&gt;error&lt;/code&gt; 该数组公开为 &lt;code&gt;$log.error.logs&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9a4f99f800b8c2a3c8606af42b64ef2f40a52496" translate="yes" xml:space="preserve">
          <source>Mock implementation of the $interval service.</source>
          <target state="translated">模拟实现$interval服务。</target>
        </trans-unit>
        <trans-unit id="17e556de84f8d6be56cb0a460b4ed4cfe2347048" translate="yes" xml:space="preserve">
          <source>Mock implementation of the &lt;a href=&quot;../../ng/service/%24animate&quot;&gt;&lt;code&gt;$animate&lt;/code&gt;&lt;/a&gt; service. Exposes two additional methods for testing animations.</source>
          <target state="translated">模拟&lt;a href=&quot;../../ng/service/%24animate&quot;&gt; &lt;code&gt;$animate&lt;/code&gt; &lt;/a&gt;服务的实现。公开了另外两种测试动画的方法。</target>
        </trans-unit>
        <trans-unit id="a5cb86aae12fa34c71428443e8ea53d839ee3299" translate="yes" xml:space="preserve">
          <source>Mock implementation of the &lt;a href=&quot;../ng/service/%24animate&quot;&gt;&lt;code&gt;$animate&lt;/code&gt;&lt;/a&gt; service. Exposes two additional methods for testing animations.</source>
          <target state="translated">模拟&lt;a href=&quot;../ng/service/%24animate&quot;&gt; &lt;code&gt;$animate&lt;/code&gt; &lt;/a&gt;服务的实现。公开了另外两种测试动画的方法。</target>
        </trans-unit>
        <trans-unit id="50e36573f2e41d3b17e543c2e8cd625f0cb46dd2" translate="yes" xml:space="preserve">
          <source>Mock implementation of the &lt;a href=&quot;ng/service/%24animate&quot;&gt;&lt;code&gt;$animate&lt;/code&gt;&lt;/a&gt; service. Exposes two additional methods for testing animations.</source>
          <target state="translated">模拟&lt;a href=&quot;ng/service/%24animate&quot;&gt; &lt;code&gt;$animate&lt;/code&gt; &lt;/a&gt;服务的实现。公开了另外两种测试动画的方法。</target>
        </trans-unit>
        <trans-unit id="2283a4fa911cb4d414dca0de238334e1c9113cf1" translate="yes" xml:space="preserve">
          <source>Mock of the Date type which has its timezone specified via constructor arg.</source>
          <target state="translated">通过构造函数arg指定时区的Date类型的Mock。</target>
        </trans-unit>
        <trans-unit id="2103a63a9856b3815fb037adeec81b1f3b88e8c7" translate="yes" xml:space="preserve">
          <source>Mode of operation, defaults to &lt;code&gt;rethrow&lt;/code&gt;.</source>
          <target state="translated">操作模式，默认为 &lt;code&gt;rethrow&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="68c2cc7f0ceaa3e499ecb4db331feb4debbbcc23" translate="yes" xml:space="preserve">
          <source>Model</source>
          <target state="translated">Model</target>
        </trans-unit>
        <trans-unit id="d10c1d6ff062accb0017a7a34ed190f79cc9dc67" translate="yes" xml:space="preserve">
          <source>Model &amp;mdash; Models are the properties of a scope; scopes are attached to the DOM where scope properties are accessed through bindings.</source>
          <target state="translated">模型-模型是范围的属性；范围被附加到DOM，通过绑定访问范围属性。</target>
        </trans-unit>
        <trans-unit id="a0babb0f360230e95d42d97a77bd9a2ca869ead1" translate="yes" xml:space="preserve">
          <source>Model updates and validation</source>
          <target state="translated">模型更新和验证</target>
        </trans-unit>
        <trans-unit id="11d8a9f1a171b04d6657a278d94d71665b02f7f3" translate="yes" xml:space="preserve">
          <source>ModelOptions</source>
          <target state="translated">ModelOptions</target>
        </trans-unit>
        <trans-unit id="45054a7aa80d7c8287ad5c465dc0e7de6ba32a41" translate="yes" xml:space="preserve">
          <source>Modern browser will rewrite hashbang URLs to regular URLs.</source>
          <target state="translated">现代浏览器会将哈希邦网址改写为普通网址。</target>
        </trans-unit>
        <trans-unit id="820d0a285c630d7723527339445562c6186a70c3" translate="yes" xml:space="preserve">
          <source>Modifies the default behavior of the html a tag so that the default action is prevented when the href attribute is empty.</source>
          <target state="translated">修改html标签的默认行为,以便在href属性为空时防止默认操作。</target>
        </trans-unit>
        <trans-unit id="60affe2a59dff1baf449afaa8e69c15e4a1a2bd0" translate="yes" xml:space="preserve">
          <source>Modifying built-in validators</source>
          <target state="translated">修改内置验证器</target>
        </trans-unit>
        <trans-unit id="b8ff02892916ff59f7fbd4e617fccd01f6bca576" translate="yes" xml:space="preserve">
          <source>Module</source>
          <target state="translated">Module</target>
        </trans-unit>
        <trans-unit id="b4e47c4a8861a9aac47d0d5b25ff49b2077eaa5b" translate="yes" xml:space="preserve">
          <source>Module Components</source>
          <target state="translated">模块组件</target>
        </trans-unit>
        <trans-unit id="d81b6c3fe7d7f3ded3174d2cd156b032d228112b" translate="yes" xml:space="preserve">
          <source>Module Loading</source>
          <target state="translated">模块加载</target>
        </trans-unit>
        <trans-unit id="b3c0d8ccd032afe728bc7677d8f1b82146252c2e" translate="yes" xml:space="preserve">
          <source>Module Methods</source>
          <target state="translated">模块方法</target>
        </trans-unit>
        <trans-unit id="04e9462c0ff02bb9032b92abd45881a3c7e15fb7" translate="yes" xml:space="preserve">
          <source>Modules</source>
          <target state="translated">Modules</target>
        </trans-unit>
        <trans-unit id="f5676031d7eb7334f1e212a85e0629bf21c4a263" translate="yes" xml:space="preserve">
          <source>Modules are a way of managing $injector configuration, and have nothing to do with loading of scripts into a VM. There are existing projects which deal with script loading, which may be used with AngularJS. Because modules do nothing at load time they can be loaded into the VM in any order and thus script loaders can take advantage of this property and parallelize the loading process.</source>
          <target state="translated">模块是管理$injector配置的一种方式,与向虚拟机加载脚本无关。有一些现有的项目处理脚本加载的问题,这些项目可以与AngularJS一起使用。因为模块在加载时什么都不做,它们可以以任何顺序加载到虚拟机中,因此脚本加载器可以利用这一特性,并行加载过程。</target>
        </trans-unit>
        <trans-unit id="ddf8a006e80c713702e5a7c272966dd2af4a2f36" translate="yes" xml:space="preserve">
          <source>Modules can list other modules as their dependencies. Depending on a module implies that the required module will be loaded before the requiring module is loaded.</source>
          <target state="translated">模块可以将其他模块列为其依赖对象。依赖模块意味着需要的模块将在需要的模块被加载之前被加载。</target>
        </trans-unit>
        <trans-unit id="c5c5ac536e9458ce6b1c893d8a9eed0ef866164a" translate="yes" xml:space="preserve">
          <source>Modules cannot be unloaded.</source>
          <target state="translated">模块不能被卸载。</target>
        </trans-unit>
        <trans-unit id="d3eef75b2abb3353ef96fa4c958b29a3b973ad79" translate="yes" xml:space="preserve">
          <source>More Advanced Uses</source>
          <target state="translated">更多高级用途</target>
        </trans-unit>
        <trans-unit id="418d11009885a828d7747f211903e923c55650a8" translate="yes" xml:space="preserve">
          <source>More Topics</source>
          <target state="translated">更多主题</target>
        </trans-unit>
        <trans-unit id="9e1aceda0913803b7af1cbac40b818d7b4e0a493" translate="yes" xml:space="preserve">
          <source>More about animations</source>
          <target state="translated">更多关于动画的信息</target>
        </trans-unit>
        <trans-unit id="ff1c8d0ffd1a8365adbfecdf5260da4ce1225fe0" translate="yes" xml:space="preserve">
          <source>More information about using &lt;code&gt;ngMessage&lt;/code&gt; can be found in the &lt;a href=&quot;../../ngmessages&quot;&gt;&lt;code&gt;ngMessages&lt;/code&gt; module documentation&lt;/a&gt;.</source>
          <target state="translated">有关使用 &lt;code&gt;ngMessage&lt;/code&gt; 的更多信息，请&lt;a href=&quot;../../ngmessages&quot;&gt; &lt;code&gt;ngMessages&lt;/code&gt; 模块文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6b67e8753649b7d6d8714798e1353c9a36bc83e4" translate="yes" xml:space="preserve">
          <source>More information about using &lt;code&gt;ngMessageDefault&lt;/code&gt; can be found in the &lt;a href=&quot;../../ngmessages&quot;&gt;&lt;code&gt;ngMessages&lt;/code&gt; module documentation&lt;/a&gt;.</source>
          <target state="translated">有关使用 &lt;code&gt;ngMessageDefault&lt;/code&gt; 的更多信息，请&lt;a href=&quot;../../ngmessages&quot;&gt; &lt;code&gt;ngMessages&lt;/code&gt; 模块文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="86538f30d68e13efb3ce4ea2e7bb61bbd3bdb2ef" translate="yes" xml:space="preserve">
          <source>More specifically, it follows these steps to determine the relative order of items:</source>
          <target state="translated">更具体地说,它按照这些步骤来确定项目的相对顺序。</target>
        </trans-unit>
        <trans-unit id="7d5c68a394c71124c6fcf54230d4eeb10dd1d33a" translate="yes" xml:space="preserve">
          <source>Moreover, additional dependencies are made available to Controllers:</source>
          <target state="translated">此外,还向控制器提供了额外的依赖性。</target>
        </trans-unit>
        <trans-unit id="712827c0d97b4d3b4a04a5896cfe1915383ddc14" translate="yes" xml:space="preserve">
          <source>Most applications have a main method that instantiates and wires together the different parts of the application.</source>
          <target state="translated">大多数应用程序都有一个主方法来实例化和连接应用程序的不同部分。</target>
        </trans-unit>
        <trans-unit id="51bcbe4ed0c2178dc07e3908a9fd0bee0ee90626" translate="yes" xml:space="preserve">
          <source>Most modern search engines are able to crawl AJAX applications with dynamic content, provided all included resources are available to the crawler bots.</source>
          <target state="translated">大多数现代搜索引擎都能够抓取具有动态内容的AJAX应用程序,前提是所有包含的资源对爬虫机器人来说都是可用的。</target>
        </trans-unit>
        <trans-unit id="747ba7435637638bbd15e8ae21703dcf856ff388" translate="yes" xml:space="preserve">
          <source>Most of what ngAria does is only visible &quot;under the hood&quot;. To see the module in action, once you've added it as a dependency, you can test a few things:</source>
          <target state="translated">ngAria所做的大部分工作都是 &quot;隐藏 &quot;起来的。当你把它添加为依赖关系后,要想看到模块的运行情况,你可以测试一些东西。</target>
        </trans-unit>
        <trans-unit id="19f501e7075bf76219f10ebfc5ad08e05b72506c" translate="yes" xml:space="preserve">
          <source>Most other templating systems consume a static string template and combine it with data, resulting in a new string. The resulting text is then &lt;code&gt;innerHTML&lt;/code&gt;ed into an element.</source>
          <target state="translated">大多数其他模板系统使用静态字符串模板并将其与数据组合，从而产生新的字符串。然后，将生成的文本作为 &lt;code&gt;innerHTML&lt;/code&gt; 编入一个元素。</target>
        </trans-unit>
        <trans-unit id="086508416bb179789c4bccdcedba3ca8939c6c3f" translate="yes" xml:space="preserve">
          <source>Most templating systems bind data in only one direction: they merge template and model components together into a view. After the merge occurs, changes to the model or related sections of the view are NOT automatically reflected in the view. Worse, any changes that the user makes to the view are not reflected in the model. This means that the developer has to write code that constantly syncs the view with the model and the model with the view.</source>
          <target state="translated">大多数模板系统只在一个方向上绑定数据:它们将模板和模型组件一起合并到一个视图中。合并发生后,对模型或视图相关部分的更改不会自动反映在视图中。更糟糕的是,用户对视图的任何更改都不会反映在模型中。这意味着开发人员必须编写代码,不断地将视图与模型以及模型与视图同步。</target>
        </trans-unit>
        <trans-unit id="d52bae3c10aff36233610ff3bdec1bf84f987e77" translate="yes" xml:space="preserve">
          <source>Much of ngAria's heavy lifting happens in the &lt;a href=&quot;../api/ng/directive/ngmodel&quot;&gt;ngModel&lt;/a&gt; directive. For elements using ngModel, special attention is paid by ngAria if that element also has a role or type of &lt;code&gt;checkbox&lt;/code&gt;, &lt;code&gt;radio&lt;/code&gt;, &lt;code&gt;range&lt;/code&gt; or &lt;code&gt;textbox&lt;/code&gt;.</source>
          <target state="translated">ngAria的繁重工作发生在&lt;a href=&quot;../api/ng/directive/ngmodel&quot;&gt;ngModel&lt;/a&gt;指令中。对于使用ngModel的元素，如果该元素还具有 &lt;code&gt;checkbox&lt;/code&gt; ， &lt;code&gt;radio&lt;/code&gt; ， &lt;code&gt;range&lt;/code&gt; 或 &lt;code&gt;textbox&lt;/code&gt; 的角色或类型，则ngAria要特别注意。</target>
        </trans-unit>
        <trans-unit id="41d3f0ba4eb4a4f6a8f2357e3f45a9724879b4b6" translate="yes" xml:space="preserve">
          <source>Much simpler!</source>
          <target state="translated">简单多了!</target>
        </trans-unit>
        <trans-unit id="8c836dc52529f23f775aa7226aae8e07d35fcd7a" translate="yes" xml:space="preserve">
          <source>Multi-slot transclusion</source>
          <target state="translated">多槽透视</target>
        </trans-unit>
        <trans-unit id="65cb2723f95ca2511451a3da1b3266635717e52a" translate="yes" xml:space="preserve">
          <source>Multiple directives trying to manage the suspended status of a scope can confuse each other:</source>
          <target state="translated">试图管理作用域的暂停状态的多个指令会相互混淆。</target>
        </trans-unit>
        <trans-unit id="43ee7b873340c29badb35669536547e420b30242" translate="yes" xml:space="preserve">
          <source>Must be set to &lt;code&gt;'text/ng-template'&lt;/code&gt;.</source>
          <target state="translated">必须设置为 &lt;code&gt;'text/ng-template'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a0509b7780628bd9d9abc7eb8a2163477341053a" translate="yes" xml:space="preserve">
          <source>NO</source>
          <target state="translated">NO</target>
        </trans-unit>
        <trans-unit id="6482d00c26b4ecb8dd78f5db3674319bacb19283" translate="yes" xml:space="preserve">
          <source>NOTE: This method is supported only in HTML5 mode and only in browsers supporting the HTML5 History API (i.e. methods &lt;code&gt;pushState&lt;/code&gt; and &lt;code&gt;replaceState&lt;/code&gt;). If you need to support older browsers (like IE9 or Android &amp;lt; 4.0), don't use this method.</source>
          <target state="translated">注意：仅在HTML5模式下以及在支持HTML5历史记录API的浏览器（即方法 &lt;code&gt;pushState&lt;/code&gt; 和 &lt;code&gt;replaceState&lt;/code&gt; ）中才支持此方法。如果您需要支持较旧的浏览器（例如IE9或Android &amp;lt;4.0），请不要使用此方法。</target>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Name</target>
        </trans-unit>
        <trans-unit id="9407fb27f323515c53fff87ba47269667f06a0ad" translate="yes" xml:space="preserve">
          <source>Name of a constructor function registered with the current &lt;a href=&quot;../provider/%24controllerprovider&quot;&gt;$controllerProvider&lt;/a&gt; or an &lt;a href=&quot;../../../guide/expression&quot;&gt;expression&lt;/a&gt; that on the current scope evaluates to a constructor function.</source>
          <target state="translated">与当前注册的构造函数的名称&lt;a href=&quot;../provider/%24controllerprovider&quot;&gt;$ controllerProvider&lt;/a&gt;或&lt;a href=&quot;../../../guide/expression&quot;&gt;表达&lt;/a&gt;的是对当前范围值是一个构造函数。</target>
        </trans-unit>
        <trans-unit id="06124546cb53397fd0c1fe917a2d06c9730752d5" translate="yes" xml:space="preserve">
          <source>Name of the component in camelCase (i.e. &lt;code&gt;myComp&lt;/code&gt; which will match &lt;code&gt;&amp;lt;my-comp&amp;gt;&lt;/code&gt;), or an object map of components where the keys are the names and the values are the component definition objects.</source>
          <target state="translated">camelCase中组件的名称（即将与 &lt;code&gt;&amp;lt;my-comp&amp;gt;&lt;/code&gt; 匹配的 &lt;code&gt;myComp&lt;/code&gt; ），或组件的对象映射，其中键是名称，而值是组件定义对象。</target>
        </trans-unit>
        <trans-unit id="072d5c784d720162e01f22fc1db2129c7f844161" translate="yes" xml:space="preserve">
          <source>Name of the directive in camel-case (i.e. &lt;code&gt;ngBind&lt;/code&gt; which will match as &lt;code&gt;ng-bind&lt;/code&gt;), or an object map of directives where the keys are the names and the values are the factories.</source>
          <target state="translated">驼峰式大小写的指令名称（即 &lt;code&gt;ngBind&lt;/code&gt; 将匹配为 &lt;code&gt;ng-bind&lt;/code&gt; ），或指令的对象映射，其中键是名称，而值是工厂。</target>
        </trans-unit>
        <trans-unit id="e6a914b6fb9551d259b79ae1dbd0cd9ae591131f" translate="yes" xml:space="preserve">
          <source>Name of the filter function to retrieve</source>
          <target state="translated">检索的过滤函数的名称</target>
        </trans-unit>
        <trans-unit id="48fe49bedf694afeeba33df340c5f5206f900829" translate="yes" xml:space="preserve">
          <source>Name of the filter function, or an object map of filters where the keys are the filter names and the values are the filter factories.</source>
          <target state="translated">过滤器功能的名称,或过滤器的对象图,其中键是过滤器名称,值是过滤器工厂。</target>
        </trans-unit>
        <trans-unit id="548763f0d3866204ba6e7b35db5d3f96ad31cf16" translate="yes" xml:space="preserve">
          <source>Name of the form. If specified, the form controller will be published into related scope, under this name.</source>
          <target state="translated">表单的名称。如果指定了,表单控制器将被发布到相关的作用域中,以这个名字命名。</target>
        </trans-unit>
        <trans-unit id="9e53ab7e7738ab49a15d16836113abe4d510b286" translate="yes" xml:space="preserve">
          <source>Name of the form. If specified, the form controller will be published into the related scope, under this name.</source>
          <target state="translated">表单的名称。如果指定了,表单控制器将被发布到相关的作用域中,以这个名字命名。</target>
        </trans-unit>
        <trans-unit id="2b0878caaba3e3087d38d9fa863cec474456870b" translate="yes" xml:space="preserve">
          <source>Name of the module.</source>
          <target state="translated">模块名称:</target>
        </trans-unit>
        <trans-unit id="18fd8b70f87ab6b31b561c63ec64d92c5698eb18" translate="yes" xml:space="preserve">
          <source>Name of the service to query.</source>
          <target state="translated">要查询的服务名称。</target>
        </trans-unit>
        <trans-unit id="82cb2408f4510676ea3921c7dc32b0ed22111b44" translate="yes" xml:space="preserve">
          <source>Name of the validator. The &lt;code&gt;validationErrorKey&lt;/code&gt; will be assigned to either &lt;code&gt;$error[validationErrorKey]&lt;/code&gt; or &lt;code&gt;$pending[validationErrorKey]&lt;/code&gt; (for unfulfilled &lt;code&gt;$asyncValidators&lt;/code&gt;), so that it is available for data-binding. The &lt;code&gt;validationErrorKey&lt;/code&gt; should be in camelCase and will get converted into dash-case for class name. Example: &lt;code&gt;myError&lt;/code&gt; will result in &lt;code&gt;ng-valid-my-error&lt;/code&gt; and &lt;code&gt;ng-invalid-my-error&lt;/code&gt; classes and can be bound to as &lt;code&gt;{{ someForm.$error.myError }}&lt;/code&gt;.</source>
          <target state="translated">验证者的名字。的 &lt;code&gt;validationErrorKey&lt;/code&gt; 将被分配到 &lt;code&gt;$error[validationErrorKey]&lt;/code&gt; 或 &lt;code&gt;$pending[validationErrorKey]&lt;/code&gt; （对于未实现 &lt;code&gt;$asyncValidators&lt;/code&gt; ），使得它可用于数据绑定。该 &lt;code&gt;validationErrorKey&lt;/code&gt; 应在驼峰，将被转换成划线案例类名。示例： &lt;code&gt;myError&lt;/code&gt; 将导致 &lt;code&gt;ng-valid-my-error&lt;/code&gt; 和 &lt;code&gt;ng-invalid-my-error&lt;/code&gt; 类，并且可以绑定为 &lt;code&gt;{{ someForm.$error.myError }}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="85289b1ba972a7f24ee7623acf7573ae60b50a4a" translate="yes" xml:space="preserve">
          <source>Name of the validator. The &lt;code&gt;validationErrorKey&lt;/code&gt; will be assigned to either &lt;code&gt;$error[validationErrorKey]&lt;/code&gt; or &lt;code&gt;$pending[validationErrorKey]&lt;/code&gt; (for unfulfilled &lt;code&gt;$asyncValidators&lt;/code&gt;), so that it is available for data-binding. The &lt;code&gt;validationErrorKey&lt;/code&gt; should be in camelCase and will get converted into dash-case for class name. Example: &lt;code&gt;myError&lt;/code&gt; will result in &lt;code&gt;ng-valid-my-error&lt;/code&gt; and &lt;code&gt;ng-invalid-my-error&lt;/code&gt; classes and can be bound to as &lt;code&gt;{{ someForm.someControl.$error.myError }}&lt;/code&gt;.</source>
          <target state="translated">验证者的名字。的 &lt;code&gt;validationErrorKey&lt;/code&gt; 将被分配到 &lt;code&gt;$error[validationErrorKey]&lt;/code&gt; 或 &lt;code&gt;$pending[validationErrorKey]&lt;/code&gt; （对于未实现 &lt;code&gt;$asyncValidators&lt;/code&gt; ），使得它可用于数据绑定。该 &lt;code&gt;validationErrorKey&lt;/code&gt; 应在驼峰，将被转换成划线案例类名。示例： &lt;code&gt;myError&lt;/code&gt; 将导致 &lt;code&gt;ng-valid-my-error&lt;/code&gt; 和 &lt;code&gt;ng-invalid-my-error&lt;/code&gt; 类，并且可以绑定为 &lt;code&gt;{{ someForm.someControl.$error.myError }}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c6dadcd7b87a8d68370b138a9b117a7ab56bec1f" translate="yes" xml:space="preserve">
          <source>Name or id of a cache to access.</source>
          <target state="translated">要访问的缓存的名称或ID。</target>
        </trans-unit>
        <trans-unit id="1cc839cd419511980445e1dd8371a817f1b64734" translate="yes" xml:space="preserve">
          <source>Name or id of the newly created cache.</source>
          <target state="translated">新建缓存的名称或ID。</target>
        </trans-unit>
        <trans-unit id="0de929bec5077041e37d818b7a7097719fecd549" translate="yes" xml:space="preserve">
          <source>Name to normalize</source>
          <target state="translated">名称标准化</target>
        </trans-unit>
        <trans-unit id="07487ab347f8a5946bbf4a7ce75a38afca586f21" translate="yes" xml:space="preserve">
          <source>Namespace from 'angular-mocks.js' which contains testing related code.</source>
          <target state="translated">来自'angular-mocks.js'的命名空间,其中包含测试相关的代码。</target>
        </trans-unit>
        <trans-unit id="34956fb712b5af5e64b1d1e8c8bcaf652008c2f6" translate="yes" xml:space="preserve">
          <source>Native range input with validation and transformation.</source>
          <target state="translated">原生范围输入与验证和转换。</target>
        </trans-unit>
        <trans-unit id="f06563daf6842a8e082fd4615e320fc869bb69d9" translate="yes" xml:space="preserve">
          <source>Nesting</source>
          <target state="translated">Nesting</target>
        </trans-unit>
        <trans-unit id="309c7dfccaca7701bd78f84e8b381d4d0275d9db" translate="yes" xml:space="preserve">
          <source>New URL</source>
          <target state="translated">新的URL</target>
        </trans-unit>
        <trans-unit id="a014f3cd7850f6e9c71c46467e552b11d3de79a6" translate="yes" xml:space="preserve">
          <source>New URL without base prefix (e.g. &lt;code&gt;/path?a=b#hash&lt;/code&gt;)</source>
          <target state="translated">没有基本前缀的新URL（例如 &lt;code&gt;/path?a=b#hash&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="6165acb81f2917de772cffb70b019703cffc138d" translate="yes" xml:space="preserve">
          <source>New hash fragment</source>
          <target state="translated">新的散列片段</target>
        </trans-unit>
        <trans-unit id="5a73ca3fba6bb247c517d68e0cd4de0f73708ffb" translate="yes" xml:space="preserve">
          <source>New history state object</source>
          <target state="translated">新的历史状态对象</target>
        </trans-unit>
        <trans-unit id="1523c8acdb2ee4d7786ae768261d0c785a7a6dd4" translate="yes" xml:space="preserve">
          <source>New path</source>
          <target state="translated">新路</target>
        </trans-unit>
        <trans-unit id="8db704d10996287f306c82d9804ae000900aa1c3" translate="yes" xml:space="preserve">
          <source>New regexp to trust urls with.</source>
          <target state="translated">用新的regexp来信任urls。</target>
        </trans-unit>
        <trans-unit id="20f8323c20517bd9bedeb523464666a743f37eca" translate="yes" xml:space="preserve">
          <source>New regexp to whitelist urls with.</source>
          <target state="translated">新的regexp用于白名单的URL。</target>
        </trans-unit>
        <trans-unit id="dad34ec1ee8bacd2e9041cd0903b5c9069ff92f6" translate="yes" xml:space="preserve">
          <source>New search params - string or hash object.</source>
          <target state="translated">新的搜索参数-字符串或哈希对象。</target>
        </trans-unit>
        <trans-unit id="b804c31a8623f2816dbf7f69ecf28929e801a795" translate="yes" xml:space="preserve">
          <source>Newly created cache object with the following set of methods:</source>
          <target state="translated">新建的缓存对象,有以下一组方法。</target>
        </trans-unit>
        <trans-unit id="329a1c91ff3f72a700f6b29e306ae7d1fe09310b" translate="yes" xml:space="preserve">
          <source>Newly created scope.</source>
          <target state="translated">新创建的范围。</target>
        </trans-unit>
        <trans-unit id="61456090d5fe7bf739399fed88265d12f9613af2" translate="yes" xml:space="preserve">
          <source>Next, we want to add buttons to this dialog box, and allow someone using the directive to bind their own behavior to it.</source>
          <target state="translated">接下来,我们要为这个对话框添加按钮,并允许使用该指令的人将自己的行为绑定到它上面。</target>
        </trans-unit>
        <trans-unit id="816c52fd2bdd94a63cd0944823a6c0aa9384c103" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="translated">No</target>
        </trans-unit>
        <trans-unit id="c4d55e8a99a370ad4de49aff15c4c44511823de9" translate="yes" xml:space="preserve">
          <source>No (restricted to elements only)</source>
          <target state="translated">否(只限于要素)</target>
        </trans-unit>
        <trans-unit id="109595eb5dc1869fbf21a971f7aa0f381c49f943" translate="yes" xml:space="preserve">
          <source>No (scope is always isolate)</source>
          <target state="translated">没有(范围总是孤立的</target>
        </trans-unit>
        <trans-unit id="2f486ce8e2e4c561b4a09d4b910696530061716a" translate="yes" xml:space="preserve">
          <source>No (use bindings instead)</source>
          <target state="translated">否(用绑定代替)</target>
        </trans-unit>
        <trans-unit id="680a8d06076faf3861dc12dd6c01bc3981abc532" translate="yes" xml:space="preserve">
          <source>No Control Flow Statements</source>
          <target state="translated">无控制流报表</target>
        </trans-unit>
        <trans-unit id="62ba91f2c31ef5c4a122749bdddf7004b57597ab" translate="yes" xml:space="preserve">
          <source>No conversion; the object itself is used.</source>
          <target state="translated">没有转换,使用的是对象本身。</target>
        </trans-unit>
        <trans-unit id="b477c2fb0db2220aabe25a86981bcf26c5b788ac" translate="yes" xml:space="preserve">
          <source>No declaration means that AngularJS will assume that you can do inline styles, but it will do a runtime check for unsafe-eval. E.g. &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;. This is backwardly compatible with previous versions of AngularJS.</source>
          <target state="translated">没有声明意味着AngularJS将假定您可以进行内联样式，但是它将对不安全评估进行运行时检查。例如 &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; 。这与AngularJS的早期版本向后兼容。</target>
        </trans-unit>
        <trans-unit id="6eb8bd5e680e864c50300934b57de696d6282a04" translate="yes" xml:space="preserve">
          <source>No function declarations or RegExp creation with literal notation</source>
          <target state="translated">没有函数声明,也没有用文字符号创建正则表达式。</target>
        </trans-unit>
        <trans-unit id="3ddeaa27a6c6629f743c53a762ac439d7628c772" translate="yes" xml:space="preserve">
          <source>Non-immediate (debounced) model updates</source>
          <target state="translated">非即时(退弹)模型更新。</target>
        </trans-unit>
        <trans-unit id="b8c54e5e1e867a54e9d75697c450f4be835f910e" translate="yes" xml:space="preserve">
          <source>Normalization</source>
          <target state="translated">Normalization</target>
        </trans-unit>
        <trans-unit id="0538f85d0c3c3f8fa12699be15d0d496f65654b6" translate="yes" xml:space="preserve">
          <source>Normalized element attribute name of the property to modify. The name is reverse-translated using the &lt;a href=&quot;%24compile.directive.attributes#%24attr.html&quot;&gt;$attr&lt;/a&gt; property to the original name.</source>
          <target state="translated">要修改的属性的规范化元素属性名称。使用&lt;a href=&quot;%24compile.directive.attributes#%24attr.html&quot;&gt;$ attr&lt;/a&gt;属性将该名称反向转换为原始名称。</target>
        </trans-unit>
        <trans-unit id="42edd323f35213654eaf5568a5b6ad2beea08650" translate="yes" xml:space="preserve">
          <source>Normalized key. (ie ngAttribute) .</source>
          <target state="translated">归一化键。(即ngAttribute)。</target>
        </trans-unit>
        <trans-unit id="ed68fc07c0bcd36453eb89a7b1304551a073ed7f" translate="yes" xml:space="preserve">
          <source>Note also that component directives, which are created with the &lt;a href=&quot;../api/ng/type/angular.module#component.html&quot;&gt;.component()&lt;/a&gt; helper always create an isolate scope.</source>
          <target state="translated">还请注意，使用&lt;a href=&quot;../api/ng/type/angular.module#component.html&quot;&gt;.component（）&lt;/a&gt;帮助器创建的组件指令始终会创建隔离范围。</target>
        </trans-unit>
        <trans-unit id="8aa993a00ba6dab2bd4ba7c5837f5d462e2f62de" translate="yes" xml:space="preserve">
          <source>Note however that the &lt;code&gt;$animate.enabled()&lt;/code&gt; state for individual elements does not overwrite disabling rules that have been set in the &lt;a href=&quot;../api/ng/provider/%24animateprovider#classNameFilter.html&quot;&gt;classNameFilter&lt;/a&gt;.</source>
          <target state="translated">但是请注意，单个元素的 &lt;code&gt;$animate.enabled()&lt;/code&gt; 状态不会覆盖在&lt;a href=&quot;../api/ng/provider/%24animateprovider#classNameFilter.html&quot;&gt;classNameFilter中&lt;/a&gt;设置的禁用规则。</target>
        </trans-unit>
        <trans-unit id="5ee9f05a205194a145267c81de693fc4c5f07a17" translate="yes" xml:space="preserve">
          <source>Note in the example above how we can pass in &lt;code&gt;$event&lt;/code&gt; to &lt;code&gt;clickMe&lt;/code&gt;, but how it does not show up in &lt;code&gt;{{$event}}&lt;/code&gt;. This is because &lt;code&gt;$event&lt;/code&gt; is outside the scope of that binding.</source>
          <target state="translated">请注意，在上面的示例中，我们如何将 &lt;code&gt;$event&lt;/code&gt; 传递给 &lt;code&gt;clickMe&lt;/code&gt; ，但如何将其不显示在 &lt;code&gt;{{$event}}&lt;/code&gt; 。这是因为 &lt;code&gt;$event&lt;/code&gt; 不在该绑定的范围内。</target>
        </trans-unit>
        <trans-unit id="cb458ac4c395d1b568721519300e24a944cc46d1" translate="yes" xml:space="preserve">
          <source>Note that &quot;=1&quot; takes precedence over &quot;one&quot;.</source>
          <target state="translated">注意,&quot;=1 &quot;优先于 &quot;1&quot;。</target>
        </trans-unit>
        <trans-unit id="434bc4aa7a04baed5fd5937b7268a8d770b70508" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;directive#normalization.html&quot;&gt;attribute name normalization&lt;/a&gt; does not apply here, so &lt;code&gt;'internalLink'&lt;/code&gt; will &lt;strong&gt;not&lt;/strong&gt; match &lt;code&gt;'internal-link'&lt;/code&gt;.</source>
          <target state="translated">请注意，&lt;a href=&quot;directive#normalization.html&quot;&gt;属性名称规范化&lt;/a&gt;不适用于此处，因此 &lt;code&gt;'internalLink'&lt;/code&gt; 将与 &lt;code&gt;'internal-link'&lt;/code&gt; &lt;strong&gt;不&lt;/strong&gt;匹配。</target>
        </trans-unit>
        <trans-unit id="8a1a58c3fbcaa18d57812a2d20a3557e11472cb2" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;nganimate/directive/nganimateswap&quot;&gt;&lt;code&gt;ngAnimateSwap&lt;/code&gt;&lt;/a&gt; is a &lt;em&gt;structural directive&lt;/em&gt;, which means it creates a new instance of the element (including any other/child directives it may have) and links it to a new scope every time &lt;em&gt;swap&lt;/em&gt; happens. In some cases this might not be desirable (e.g. for performance reasons, or when you wish to retain internal state on the original element instance).</source>
          <target state="translated">请注意，&lt;a href=&quot;nganimate/directive/nganimateswap&quot;&gt; &lt;code&gt;ngAnimateSwap&lt;/code&gt; &lt;/a&gt;是一个&lt;em&gt;结构指令&lt;/em&gt;，这意味着它会创建该元素的新实例（包括它可能具有的任何其他/子指令），并在每次&lt;em&gt;交换&lt;/em&gt;时将其链接到新的作用域。在某些情况下，这可能是不希望的（例如，出于性能原因，或者当您希望保留原始元素实例的内部状态时）。</target>
        </trans-unit>
        <trans-unit id="a0b460923b8c2ebd1c623d370f0b9ad6d939ad9c" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;$sce.RESOURCE_URL&lt;/code&gt; makes a stronger statement about the URL than &lt;code&gt;$sce.URL&lt;/code&gt; or &lt;code&gt;$sce.MEDIA_URL&lt;/code&gt; do and therefore contexts requiring values trusted for &lt;code&gt;$sce.RESOURCE_URL&lt;/code&gt; can be used anywhere that values trusted for &lt;code&gt;$sce.URL&lt;/code&gt; or &lt;code&gt;$sce.MEDIA_URL&lt;/code&gt; are required.</source>
          <target state="translated">需要注意的是 &lt;code&gt;$sce.RESOURCE_URL&lt;/code&gt; 使有关的URL不是一个强硬的声明 &lt;code&gt;$sce.URL&lt;/code&gt; 或 &lt;code&gt;$sce.MEDIA_URL&lt;/code&gt; DO，因此需要值上下文值得信赖的 &lt;code&gt;$sce.RESOURCE_URL&lt;/code&gt; 可以在任何地方使用，价值观值得信赖的 &lt;code&gt;$sce.URL&lt;/code&gt; 或 &lt;code&gt;$sce.MEDIA_URL&lt;/code&gt; 是必需的。</target>
        </trans-unit>
        <trans-unit id="cc1bf3983b1102710be771517de48e27fd68d37a" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;$watchCollection&lt;/code&gt; does a shallow comparison of the properties of the object (or the items in the collection if the model is an array). This means that changing a property deeper than the first level inside the object/collection will not trigger a re-rendering.</source>
          <target state="translated">请注意， &lt;code&gt;$watchCollection&lt;/code&gt; 对对象（或模型为数组的集合中的项目）的属性进行了较浅的比较。这意味着更改比对象/集合内部的第一层更深的属性不会触发重新渲染。</target>
        </trans-unit>
        <trans-unit id="2dee39f5a021ca087206f120df7d48fc93821a3b" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;input[range]&lt;/code&gt; is not compatible with&lt;code&gt;ngMax&lt;/code&gt;, &lt;code&gt;ngMin&lt;/code&gt;, and &lt;code&gt;ngStep&lt;/code&gt;, because they do not set the &lt;code&gt;min&lt;/code&gt; and &lt;code&gt;max&lt;/code&gt; attributes, which means that the browser won't automatically adjust the input value based on their values, and will always assume min = 0, max = 100, and step = 1.</source>
          <target state="translated">Note that &lt;code&gt;input[range]&lt;/code&gt; is not compatible with &lt;code&gt;ngMax&lt;/code&gt; , &lt;code&gt;ngMin&lt;/code&gt; , and &lt;code&gt;ngStep&lt;/code&gt; , because they do not set the &lt;code&gt;min&lt;/code&gt; and &lt;code&gt;max&lt;/code&gt; attributes, which means that the browser won't automatically adjust the input value based on their values, and will always assume min = 0, max = 100, and step = 1.</target>
        </trans-unit>
        <trans-unit id="9d27b908b7897290c16b7b7bb8b9495950a6a26e" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;novalidate&lt;/code&gt; is used to disable browser's native form validation.</source>
          <target state="translated">请注意， &lt;code&gt;novalidate&lt;/code&gt; 用于禁用浏览器的本机表单验证。</target>
        </trans-unit>
        <trans-unit id="03cc51fc0228dd8abc334f43fcb44d8105df0c96" translate="yes" xml:space="preserve">
          <source>Note that a named property will match properties on the same level only, while the special &lt;code&gt;$&lt;/code&gt; property will match properties on the same level or deeper. E.g. an array item like &lt;code&gt;{name: {first: 'John', last: 'Doe'}}&lt;/code&gt; will &lt;strong&gt;not&lt;/strong&gt; be matched by &lt;code&gt;{name: 'John'}&lt;/code&gt;, but &lt;strong&gt;will&lt;/strong&gt; be matched by &lt;code&gt;{$: 'John'}&lt;/code&gt;.</source>
          <target state="translated">请注意，命名属性将仅匹配同一级别的属性，而特殊的 &lt;code&gt;$&lt;/code&gt; 属性将匹配同一级别或更深级别的属性。例如，类似 &lt;code&gt;{name: {first: 'John', last: 'Doe'}}&lt;/code&gt; 的数组项将&lt;strong&gt;不会&lt;/strong&gt;与 &lt;code&gt;{name: 'John'}&lt;/code&gt; 匹配，但&lt;strong&gt;会&lt;/strong&gt;与 &lt;code&gt;{$: 'John'}&lt;/code&gt; 匹配。</target>
        </trans-unit>
        <trans-unit id="fa75d31f67261d997c50bc28147928d5dc77fe26" translate="yes" xml:space="preserve">
          <source>Note that an empty trusted resource URL list will block every resource URL from being loaded, and will require you to manually mark each one as trusted with &lt;code&gt;$sce.trustAsResourceUrl&lt;/code&gt;. However, templates requested by &lt;a href=&quot;../service/%24templaterequest&quot;&gt;$templateRequest&lt;/a&gt; that are present in &lt;a href=&quot;../service/%24templatecache&quot;&gt;$templateCache&lt;/a&gt; will not go through this check. If you have a mechanism to populate your templates in that cache at config time, then it is a good idea to remove 'self' from the trusted resource URL lsit. This helps to mitigate the security impact of certain types of issues, like for instance attacker-controlled &lt;code&gt;ng-includes&lt;/code&gt;.</source>
          <target state="translated">Note that an empty trusted resource URL list will block every resource URL from being loaded, and will require you to manually mark each one as trusted with &lt;code&gt;$sce.trustAsResourceUrl&lt;/code&gt; . However, templates requested by &lt;a href=&quot;../service/%24templaterequest&quot;&gt;$templateRequest&lt;/a&gt; that are present in &lt;a href=&quot;../service/%24templatecache&quot;&gt;$templateCache&lt;/a&gt; will not go through this check. If you have a mechanism to populate your templates in that cache at config time, then it is a good idea to remove 'self' from the trusted resource URL lsit. This helps to mitigate the security impact of certain types of issues, like for instance attacker-controlled &lt;code&gt;ng-includes&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f9ecf6346c2070b6c0ab4c14bc7c542fb88a7f2d" translate="yes" xml:space="preserve">
          <source>Note that an empty whitelist will block every resource URL from being loaded, and will require you to manually mark each one as trusted with &lt;code&gt;$sce.trustAsResourceUrl&lt;/code&gt;. However, templates requested by &lt;a href=&quot;../service/%24templaterequest&quot;&gt;$templateRequest&lt;/a&gt; that are present in &lt;a href=&quot;../service/%24templatecache&quot;&gt;$templateCache&lt;/a&gt; will not go through this check. If you have a mechanism to populate your templates in that cache at config time, then it is a good idea to remove 'self' from that whitelist. This helps to mitigate the security impact of certain types of issues, like for instance attacker-controlled &lt;code&gt;ng-includes&lt;/code&gt;.</source>
          <target state="translated">请注意，空白列表将阻止加载每个资源URL，并要求您使用 &lt;code&gt;$sce.trustAsResourceUrl&lt;/code&gt; 手动将每个URL标记为受信任。但是，&lt;a href=&quot;../service/%24templaterequest&quot;&gt;$ templateCache&lt;/a&gt;中存在的&lt;a href=&quot;../service/%24templatecache&quot;&gt;$&lt;/a&gt; templateRequest请求的模板不会通过此检查。如果您有一种在配置时将模板填充到该缓存中的机制，则最好从该白名单中删除&amp;ldquo;自我&amp;rdquo;。这有助于减轻某些类型问题的安全影响，例如攻击者控制的 &lt;code&gt;ng-includes&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7060fae7453c3d445c4f38cba4bd21dedf19b39d" translate="yes" xml:space="preserve">
          <source>Note that child elements that contain &lt;code&gt;templateUrl&lt;/code&gt; directives will not have been compiled and linked since they are waiting for their template to load asynchronously and their own compilation and linking has been suspended until that occurs.</source>
          <target state="translated">请注意，包含 &lt;code&gt;templateUrl&lt;/code&gt; 指令的子元素将不会被编译和链接，因为它们正在等待异步加载其模板，并且它们自己的编译和链接已暂停，直到发生这种情况为止。</target>
        </trans-unit>
        <trans-unit id="c99053b76829524b72c418b0f4b8f9dc7e529792" translate="yes" xml:space="preserve">
          <source>Note that different from config methods on providers, &lt;code&gt;matchLatestDefinitionEnabled()&lt;/code&gt; can be changed even when the application is already running.</source>
          <target state="translated">请注意，与提供程序上的配置方法不同，即使应用程序已经在运行， &lt;code&gt;matchLatestDefinitionEnabled()&lt;/code&gt; 也可以更改。</target>
        </trans-unit>
        <trans-unit id="c4e1e4289fbf35f5faf80c5307adaaad54b9551d" translate="yes" xml:space="preserve">
          <source>Note that even if &lt;code&gt;ngAnimateChildren&lt;/code&gt; is set, no child animations will run when the parent element is removed from the DOM (&lt;code&gt;leave&lt;/code&gt; animation).</source>
          <target state="translated">请注意，即使设置了 &lt;code&gt;ngAnimateChildren&lt;/code&gt; ，当从DOM中移除父元素（ &lt;code&gt;leave&lt;/code&gt; 动画）时，也不会运行任何子动画。</target>
        </trans-unit>
        <trans-unit id="c7c140cbe8e284d7d91b2523d922769f21bf4f4b" translate="yes" xml:space="preserve">
          <source>Note that if the directive did not create its own scope, then &lt;code&gt;scope&lt;/code&gt; in &lt;code&gt;scope.name = 'Jeff'&lt;/code&gt; would reference the outside scope and we would see &lt;code&gt;Jeff&lt;/code&gt; in the output.</source>
          <target state="translated">请注意，如果该指令没有创建自己的范围，那么 &lt;code&gt;scope&lt;/code&gt; 在 &lt;code&gt;scope.name = 'Jeff'&lt;/code&gt; 将引用范围之外，我们会看到 &lt;code&gt;Jeff&lt;/code&gt; 输出。</target>
        </trans-unit>
        <trans-unit id="b69d7fb66d4f2706680e48a28fa8422bbf4e8619" translate="yes" xml:space="preserve">
          <source>Note that if the response is a redirect, XMLHttpRequest will transparently follow it, meaning that the outcome (success or error) will be determined by the final response status code.</source>
          <target state="translated">请注意,如果响应是重定向,XMLHttpRequest将透明地跟随它,这意味着结果(成功或错误)将由最终的响应状态码决定。</target>
        </trans-unit>
        <trans-unit id="52178123f14ee320297cad57648610e144298b96" translate="yes" xml:space="preserve">
          <source>Note that if the root element is on the &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; element then the cloned node will be placed inside of body.</source>
          <target state="translated">请注意，如果根元素位于 &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; 元素上，则克隆的节点将放置在主体内部。</target>
        </trans-unit>
        <trans-unit id="7c6dba9ed0e82c79a5e7151ec5feb744119ce28b" translate="yes" xml:space="preserve">
          <source>Note that if you provide these properties on the config object the default transformations will be overwritten. If you wish to augment the default transformations then you must include them in your local transformation array.</source>
          <target state="translated">请注意,如果您在配置对象上提供这些属性,默认的变换将被覆盖。如果您希望增加默认的变换,那么您必须将它们包含在您的本地变换数组中。</target>
        </trans-unit>
        <trans-unit id="00812766716b60ebac71cd394d6a7fe6f3350e0c" translate="yes" xml:space="preserve">
          <source>Note that if you want to assign from a child into the parent scope, you must initialize the target property on the parent scope, otherwise &lt;code&gt;ngRef&lt;/code&gt; will assign on the child scope. This commonly happens when assigning elements or components wrapped in &lt;a href=&quot;ngif&quot;&gt;&lt;code&gt;ngIf&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;ngrepeat&quot;&gt;&lt;code&gt;ngRepeat&lt;/code&gt;&lt;/a&gt;. See the second example below.</source>
          <target state="translated">请注意，如果要从子级分配到父级作用域，则必须在父级作用域上初始化target属性，否则 &lt;code&gt;ngRef&lt;/code&gt; 将在子级作用域上进行分配。这通常在分配包装在&lt;a href=&quot;ngif&quot;&gt; &lt;code&gt;ngIf&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;ngrepeat&quot;&gt; &lt;code&gt;ngRepeat&lt;/code&gt; 中的&lt;/a&gt;元素或组件时发生。请参阅下面的第二个示例。</target>
        </trans-unit>
        <trans-unit id="5f0fa4368d83b81bf923d569ddb949c70bea7f44" translate="yes" xml:space="preserve">
          <source>Note that in this mode, AngularJS intercepts all links (subject to the &quot;Html link rewriting&quot; rules below) and updates the url in a way that never performs a full page reload.</source>
          <target state="translated">需要注意的是,在这种模式下,AngularJS会拦截所有的链接(受制于下面的 &quot;Html链接重写 &quot;规则),并以永不执行全页面重载的方式更新url。</target>
        </trans-unit>
        <trans-unit id="c08cd1bfbb11534ce5e7fae83491bc8949dbc417" translate="yes" xml:space="preserve">
          <source>Note that only browsers that support CSS transitions and/or keyframe animations are capable of rendering animations triggered via &lt;code&gt;$animateCss&lt;/code&gt; (bad news for IE9 and lower).</source>
          <target state="translated">请注意，只有支持CSS过渡和/或关键帧动画的浏览器才能够渲染通过 &lt;code&gt;$animateCss&lt;/code&gt; 触发的动画（对于IE9及更低版本来说是个坏消息）。</target>
        </trans-unit>
        <trans-unit id="86e2e236826b266700273a74ec0d099fb253557f" translate="yes" xml:space="preserve">
          <source>Note that only the removed control's validation state (&lt;code&gt;$errors&lt;/code&gt;etc.) will be removed from the form. &lt;code&gt;$dirty&lt;/code&gt;, &lt;code&gt;$submitted&lt;/code&gt; states will not be changed, because the expected behavior can be different from case to case. For example, removing the only &lt;code&gt;$dirty&lt;/code&gt; control from a form may or may not mean that the form is still &lt;code&gt;$dirty&lt;/code&gt;.</source>
          <target state="translated">请注意，只有删除的控件的验证状态（ &lt;code&gt;$errors&lt;/code&gt; 等）才会从表单中删除。 &lt;code&gt;$dirty&lt;/code&gt; ， &lt;code&gt;$submitted&lt;/code&gt; 状态不会更改，因为期望的行为因情况而异。例如，从表单中删除唯一的 &lt;code&gt;$dirty&lt;/code&gt; 控件可能或可能并不意味着该表单仍为 &lt;code&gt;$dirty&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ba3b53de509e58a62730e40c650af0e249cde701" translate="yes" xml:space="preserve">
          <source>Note that serializer will sort the request parameters alphabetically.</source>
          <target state="translated">请注意,序列化器将按字母顺序对请求参数进行排序。</target>
        </trans-unit>
        <trans-unit id="361cd364814ae208a63b23f1fe54b88cb0b4da83" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;!&lt;/code&gt; prefix in the hashbang mode is not part of &lt;code&gt;$location.path()&lt;/code&gt;; it is actually &lt;code&gt;hashPrefix&lt;/code&gt;.</source>
          <target state="translated">注意 &lt;code&gt;!&lt;/code&gt; hashbang模式中的前缀不是 &lt;code&gt;$location.path()&lt;/code&gt; ；它实际上是 &lt;code&gt;hashPrefix&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="255b65aefef25adace72fa2d5ba49a9bb01df7db" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;$routeParams&lt;/code&gt; are only updated &lt;em&gt;after&lt;/em&gt; a route change completes successfully. This means that you cannot rely on &lt;code&gt;$routeParams&lt;/code&gt; being correct in route resolve functions. Instead you can use &lt;code&gt;$route.current.params&lt;/code&gt; to access the new route's parameters.</source>
          <target state="translated">请注意，仅&lt;em&gt;在&lt;/em&gt;路由更改成功完成后才更新 &lt;code&gt;$routeParams&lt;/code&gt; 。这意味着您不能依赖 &lt;code&gt;$routeParams&lt;/code&gt; 在路由解析功能中是正确的。相反，您可以使用 &lt;code&gt;$route.current.params&lt;/code&gt; 访问新路由的参数。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8ed0048fcbcf6b9f1d9c9796273aa944cdd8c09d" translate="yes" xml:space="preserve">
          <source>Note that the callback does not trigger a scope digest. Wrap your call into a &lt;a href=&quot;../type/%24rootscope.scope#%24apply.html&quot;&gt;scope.$apply&lt;/a&gt; to propagate changes to the scope.</source>
          <target state="translated">请注意，该回调不会触发作用域摘要。将您的呼叫包装到一个&lt;a href=&quot;../type/%24rootscope.scope#%24apply.html&quot;&gt;范围内。$应用&lt;/a&gt;以传播对该范围的更改。</target>
        </trans-unit>
        <trans-unit id="88e8f90425456fee890aba473cd13936b00c42f7" translate="yes" xml:space="preserve">
          <source>Note that the current state of the control will not be reflected on the new parent form. This is not an issue with normal use, as freshly compiled and linked controls are in a &lt;code&gt;$pristine&lt;/code&gt; state.</source>
          <target state="translated">请注意，控件的当前状态不会反映在新的父窗体上。这对于正常使用来说不是问题，因为新编译和链接的控件处于 &lt;code&gt;$pristine&lt;/code&gt; 状态。</target>
        </trans-unit>
        <trans-unit id="bc392f2c46cf2ff9d24ffab306a297a902ca69ec" translate="yes" xml:space="preserve">
          <source>Note that the interpolateDirective has a priority of 100 and sets up the watch in the preLink function.</source>
          <target state="translated">需要注意的是,interpolateDirective的优先级为100,并在preLink功能中设置手表。</target>
        </trans-unit>
        <trans-unit id="1e7a8adb55af74b5da7969da9a3763d122026199" translate="yes" xml:space="preserve">
          <source>Note that the required controllers will not be available during the instantiation of the controller, but they are guaranteed to be available just before the &lt;code&gt;$onInit&lt;/code&gt; method is executed!</source>
          <target state="translated">请注意，所需的控制器在控制器实例化期间将不可用，但是可以保证它们在 &lt;code&gt;$onInit&lt;/code&gt; 方法执行之前就可用！</target>
        </trans-unit>
        <trans-unit id="8c34ae91c81cc9b2d0be6d7e1934c17d8776d6a7" translate="yes" xml:space="preserve">
          <source>Note that the setters don't update &lt;code&gt;window.location&lt;/code&gt; immediately. Instead, the &lt;code&gt;$location&lt;/code&gt; service is aware of the &lt;a href=&quot;../api/ng/type/%24rootscope.scope&quot;&gt;scope&lt;/a&gt; life-cycle and coalesces multiple &lt;code&gt;$location&lt;/code&gt; mutations into one &quot;commit&quot; to the &lt;code&gt;window.location&lt;/code&gt; object during the scope &lt;code&gt;$digest&lt;/code&gt; phase. Since multiple changes to the $location's state will be pushed to the browser as a single change, it's enough to call the &lt;code&gt;replace()&lt;/code&gt; method just once to make the entire &quot;commit&quot; a replace operation rather than an addition to the browser history. Once the browser is updated, the $location service resets the flag set by &lt;code&gt;replace()&lt;/code&gt; method and future mutations will create new history records, unless &lt;code&gt;replace()&lt;/code&gt; is called again.</source>
          <target state="translated">请注意，设置员不会立即更新 &lt;code&gt;window.location&lt;/code&gt; 。而是 &lt;code&gt;$location&lt;/code&gt; 服务知道&lt;a href=&quot;../api/ng/type/%24rootscope.scope&quot;&gt;作用域的&lt;/a&gt;生命周期，并在作用域 &lt;code&gt;$digest&lt;/code&gt; 阶段将多个 &lt;code&gt;$location&lt;/code&gt; 突变合并为一个&amp;ldquo; commit&amp;rdquo;到 &lt;code&gt;window.location&lt;/code&gt; 对象。由于对$ location状态的多次更改将作为单个更改被推送到浏览器，因此只需调用一次 &lt;code&gt;replace()&lt;/code&gt; 方法就足以使整个&amp;ldquo;提交&amp;rdquo;操作成为替换操作，而不是向浏览器历史记录添加操作。浏览器更新后，$ location服务将重置由 &lt;code&gt;replace()&lt;/code&gt; 设置的标志。方法和将来的突变将创建新的历史记录，除非再次调用 &lt;code&gt;replace()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="23e7bfea25426540eb64b363a42574d6fb731133" translate="yes" xml:space="preserve">
          <source>Note that this directive should not be used together with &lt;a href=&quot;ngmodel&quot;&gt;&lt;code&gt;ngModel&lt;/code&gt;&lt;/a&gt;, as this can lead to unexpected behavior.</source>
          <target state="translated">请注意，此指令不应与&lt;a href=&quot;ngmodel&quot;&gt; &lt;code&gt;ngModel&lt;/code&gt; &lt;/a&gt;一起使用，因为这可能导致意外行为。</target>
        </trans-unit>
        <trans-unit id="a113d4b03841c78edec91e5f83c98fd737fcdc85" translate="yes" xml:space="preserve">
          <source>Note that this feature is only active when the &lt;code&gt;ngAnimate&lt;/code&gt; module is used.</source>
          <target state="translated">请注意，仅当使用 &lt;code&gt;ngAnimate&lt;/code&gt; 模块时，此功能才有效。</target>
        </trans-unit>
        <trans-unit id="287fb53c098a514c8ea13e5c815f04f74ffde3ad" translate="yes" xml:space="preserve">
          <source>Note that this only patches jqLite. If you use jQuery 3.5.0 or newer, please read the &lt;a href=&quot;https://jquery.com/upgrade-guide/3.5/&quot;&gt;jQuery 3.5 upgrade guide&lt;/a&gt; for more details about the workarounds.</source>
          <target state="translated">Note that this only patches jqLite. If you use jQuery 3.5.0 or newer, please read the &lt;a href=&quot;https://jquery.com/upgrade-guide/3.5/&quot;&gt;jQuery 3.5 upgrade guide&lt;/a&gt; for more details about the workarounds.</target>
        </trans-unit>
        <trans-unit id="533bf055a177afefc469a9231695b1feea4c317e" translate="yes" xml:space="preserve">
          <source>Note that we have used non-prefixed CSS transition properties in our examples as the major browsers now support non-prefixed properties. If you intend to support older browsers or certain mobile browsers then you will need to include prefixed versions of the transition properties. Take a look at &lt;a href=&quot;http://caniuse.com/#feat=css-transitions&quot;&gt;http://caniuse.com/#feat=css-transitions&lt;/a&gt; for what browsers require prefixes, and &lt;a href=&quot;https://github.com/postcss/autoprefixer&quot;&gt;https://github.com/postcss/autoprefixer&lt;/a&gt; for a tool that can automatically generate the prefixes for you.</source>
          <target state="translated">请注意，由于主要的浏览器现在都支持非前缀属性，因此我们在示例中使用了非前缀CSS过渡属性。如果打算支持较旧的浏览器或某些移动浏览器，则需要包括转换属性的前缀版本。看看&lt;a href=&quot;http://caniuse.com/#feat=css-transitions&quot;&gt;http://caniuse.com/#feat=css-transitions&lt;/a&gt;了解哪些浏览器需要前缀，以及&lt;a href=&quot;https://github.com/postcss/autoprefixer&quot;&gt;https://github.com/postcss/autoprefixer&lt;/a&gt;提供了可以自动为您生成前缀的工具。</target>
        </trans-unit>
        <trans-unit id="9c3e1cc0ee20d7a72fe1a7d291a53df28e47882d" translate="yes" xml:space="preserve">
          <source>Note that we provided the name of our application module to be loaded into the injector as the second parameter of the &lt;a href=&quot;../api/ng/function/angular.bootstrap&quot;&gt;&lt;code&gt;angular.bootstrap&lt;/code&gt;&lt;/a&gt; function. Notice that &lt;code&gt;angular.bootstrap&lt;/code&gt; will not create modules on the fly. You must create any custom &lt;a href=&quot;module&quot;&gt;modules&lt;/a&gt; before you pass them as a parameter.</source>
          <target state="translated">请注意，我们提供了要加载到注入器中的应用程序模块的名称，作为&lt;a href=&quot;../api/ng/function/angular.bootstrap&quot;&gt; &lt;code&gt;angular.bootstrap&lt;/code&gt; &lt;/a&gt;函数的第二个参数。请注意， &lt;code&gt;angular.bootstrap&lt;/code&gt; 不会动态创建模块。您必须先创建任何自定义&lt;a href=&quot;module&quot;&gt;模块，&lt;/a&gt;然后才能将它们作为参数传递。</target>
        </trans-unit>
        <trans-unit id="9ead3bf4970f104fb56e684eaff167f7cdae7eea" translate="yes" xml:space="preserve">
          <source>Note that whatever is returned by the decorator function will replace that which is being decorated. For example, a missing return statement will wipe out the entire object being decorated.</source>
          <target state="translated">需要注意的是,无论decorator函数返回的是什么,都会替换掉正在被装饰的对象。例如,如果缺少返回语句,将抹去整个被装饰的对象。</target>
        </trans-unit>
        <trans-unit id="fa3e23fba7c51ee609d4ecc4d18b8ad2d0d55f3e" translate="yes" xml:space="preserve">
          <source>Note that when an element is removed using &lt;code&gt;ngIf&lt;/code&gt; its scope is destroyed and a new scope is created when the element is restored. The scope created within &lt;code&gt;ngIf&lt;/code&gt; inherits from its parent scope using &lt;a href=&quot;https://github.com/angular/angular.js/wiki/Understanding-Scopes#javascript-prototypal-inheritance&quot;&gt;prototypal inheritance&lt;/a&gt;. An important implication of this is if &lt;code&gt;ngModel&lt;/code&gt; is used within &lt;code&gt;ngIf&lt;/code&gt; to bind to a javascript primitive defined in the parent scope. In this case any modifications made to the variable within the child scope will override (hide) the value in the parent scope.</source>
          <target state="translated">请注意，使用 &lt;code&gt;ngIf&lt;/code&gt; 删除元素时，其范围将被破坏，并且在还原该元素时会创建一个新的范围。 &lt;code&gt;ngIf&lt;/code&gt; 中创建的范围使用&lt;a href=&quot;https://github.com/angular/angular.js/wiki/Understanding-Scopes#javascript-prototypal-inheritance&quot;&gt;原型&lt;/a&gt;继承从其父范围继承。一个重要的含义是，如果在 &lt;code&gt;ngModel&lt;/code&gt; 中使用 &lt;code&gt;ngIf&lt;/code&gt; 绑定到父作用域中定义的javascript原语。在这种情况下，对子范围内的变量所做的任何修改都将覆盖（隐藏）父范围内的值。</target>
        </trans-unit>
        <trans-unit id="ec430e54b4e4cb65b0f886e7a9ce1cc6897310e8" translate="yes" xml:space="preserve">
          <source>Note that when you specify offsets, you must provide explicit number rules for numbers from 0 up to and including the offset. If you use an offset of 3, for example, you must provide explicit number rules for 0, 1, 2 and 3. You must also provide plural strings for plural categories &quot;one&quot; and &quot;other&quot;.</source>
          <target state="translated">请注意,当您指定偏移量时,您必须为从 0 到并包括偏移量的数字提供明确的数字规则。例如,如果您使用偏移量为3,您必须为0、1、2和3提供明确的数字规则。您还必须为复数类别 &quot;one &quot;和 &quot;other &quot;提供复数字符串。</target>
        </trans-unit>
        <trans-unit id="7bb502c46c9a90c606dcc935a89c49887979e77d" translate="yes" xml:space="preserve">
          <source>Note that when you type hashbang url into the first browser (or vice versa) it doesn't rewrite / redirect to regular / hashbang url, as this conversion happens only during parsing the initial URL = on page reload.</source>
          <target state="translated">需要注意的是,当你在第一个浏览器中输入hashbang url时(反之亦然),它不会重写/重定向到常规/hashbang url,因为这种转换只发生在解析初始URL=页面重新加载时。</target>
        </trans-unit>
        <trans-unit id="b178156524e6cb72a5162e49e917632f00765f48" translate="yes" xml:space="preserve">
          <source>Note that you are not registering a &lt;strong&gt;service instance&lt;/strong&gt;, but rather a &lt;strong&gt;factory function&lt;/strong&gt; that will create this instance when called.</source>
          <target state="translated">请注意，您不是在注册&lt;strong&gt;服务实例&lt;/strong&gt;，而是在调用时将创建此实例的&lt;strong&gt;工厂函数&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="426af06ec89b5b89375d353f1e16d2216df4049e" translate="yes" xml:space="preserve">
          <source>Note that you can also attach controllers to the DOM by declaring it in a route definition via the &lt;a href=&quot;../../ngroute/service/%24route&quot;&gt;$route&lt;/a&gt; service. A common mistake is to declare the controller again using &lt;code&gt;ng-controller&lt;/code&gt; in the template itself. This will cause the controller to be attached and executed twice.</source>
          <target state="translated">请注意，您还可以通过&lt;a href=&quot;../../ngroute/service/%24route&quot;&gt;$ route&lt;/a&gt;服务在路由定义中声明控制器，从而将控制器附加到DOM 。一个常见的错误是在模板本身中使用 &lt;code&gt;ng-controller&lt;/code&gt; 再次声明控制器。这将导致控制器被附加并执行两次。</target>
        </trans-unit>
        <trans-unit id="768387cfb355f78bebd7f61156633279bb4ef574" translate="yes" xml:space="preserve">
          <source>Note that you can also require the directive's own controller - it will be made available like any other controller.</source>
          <target state="translated">请注意,你也可以要求指令自己的控制器--它将像其他控制器一样被提供。</target>
        </trans-unit>
        <trans-unit id="0856f9e27bd71605496c72bdce7db828215d5caa" translate="yes" xml:space="preserve">
          <source>Note that you can only inject &lt;a href=&quot;angular.module#provider.html&quot;&gt;&lt;code&gt;providers&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;angular.module#constant.html&quot;&gt;&lt;code&gt;constants&lt;/code&gt;&lt;/a&gt; into this function.</source>
          <target state="translated">请注意，您只能将&lt;a href=&quot;angular.module#provider.html&quot;&gt; &lt;code&gt;providers&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;angular.module#constant.html&quot;&gt; &lt;code&gt;constants&lt;/code&gt; &lt;/a&gt;注入此函数。</target>
        </trans-unit>
        <trans-unit id="7fca268533ad52bcf0c065e75a8a1bda0b9ae178" translate="yes" xml:space="preserve">
          <source>Note that, in AngularJS, there is also a &lt;code&gt;$destroy&lt;/code&gt; jQuery event, which can be used to clean up DOM bindings before an element is removed from the DOM.</source>
          <target state="translated">请注意，在AngularJS中，还有一个 &lt;code&gt;$destroy&lt;/code&gt; jQuery事件，该事件可用于在从DOM中删除元素之前清除DOM绑定。</target>
        </trans-unit>
        <trans-unit id="b50a7b94348fd5ca87221af2d3704fcd38ed6945" translate="yes" xml:space="preserve">
          <source>Note that, since JSONP requests are sensitive because the response is given full access to the browser, the url must be declared, via &lt;a href=&quot;%24sce&quot;&gt;&lt;code&gt;$sce&lt;/code&gt;&lt;/a&gt; as a trusted resource URL. You can trust a URL by adding it to the trusted resource URL list via &lt;a href=&quot;../provider/%24scedelegateprovider#trustedResourceUrlList.html&quot;&gt;&lt;code&gt;$sceDelegateProvider.trustedResourceUrlList&lt;/code&gt;&lt;/a&gt; or by explicitly trusting the URL via &lt;a href=&quot;%24sce#trustAsResourceUrl.html&quot;&gt;&lt;code&gt;$sce.trustAsResourceUrl(url)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Note that, since JSONP requests are sensitive because the response is given full access to the browser, the url must be declared, via &lt;a href=&quot;%24sce&quot;&gt; &lt;code&gt;$sce&lt;/code&gt; &lt;/a&gt; as a trusted resource URL. You can trust a URL by adding it to the trusted resource URL list via &lt;a href=&quot;../provider/%24scedelegateprovider#trustedResourceUrlList.html&quot;&gt; &lt;code&gt;$sceDelegateProvider.trustedResourceUrlList&lt;/code&gt; &lt;/a&gt; or by explicitly trusting the URL via &lt;a href=&quot;%24sce#trustAsResourceUrl.html&quot;&gt; &lt;code&gt;$sce.trustAsResourceUrl(url)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="28eeae6418e548c9d53253ae27de441a4197d400" translate="yes" xml:space="preserve">
          <source>Note that, since JSONP requests are sensitive because the response is given full access to the browser, the url must be declared, via &lt;a href=&quot;%24sce&quot;&gt;&lt;code&gt;$sce&lt;/code&gt;&lt;/a&gt; as a trusted resource URL. You can trust a URL by adding it to the whitelist via &lt;a href=&quot;../provider/%24scedelegateprovider#resourceUrlWhitelist.html&quot;&gt;&lt;code&gt;$sceDelegateProvider.resourceUrlWhitelist&lt;/code&gt;&lt;/a&gt; or by explicitly trusting the URL via &lt;a href=&quot;%24sce#trustAsResourceUrl.html&quot;&gt;&lt;code&gt;$sce.trustAsResourceUrl(url)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">请注意，由于JSONP请求是敏感的，因为响应被授予了对浏览器的完全访问权限，因此必须通过&lt;a href=&quot;%24sce&quot;&gt; &lt;code&gt;$sce&lt;/code&gt; &lt;/a&gt;将URL声明为受信任的资源URL。您可以通过&lt;a href=&quot;../provider/%24scedelegateprovider#resourceUrlWhitelist.html&quot;&gt; &lt;code&gt;$sceDelegateProvider.resourceUrlWhitelist&lt;/code&gt; &lt;/a&gt;将其添加到白名单中，或者通过&lt;a href=&quot;%24sce#trustAsResourceUrl.html&quot;&gt; &lt;code&gt;$sce.trustAsResourceUrl(url)&lt;/code&gt; &lt;/a&gt;显式地信任该URL，从而信任该URL 。</target>
        </trans-unit>
        <trans-unit id="c149229cd726688ef5b9a6babd1d42d388052bde" translate="yes" xml:space="preserve">
          <source>Note, that code executed in event-listeners (even those registered using jqLite's &lt;code&gt;on&lt;/code&gt;/&lt;code&gt;bind&lt;/code&gt; methods) does not delegate exceptions to the &lt;a href=&quot;%24exceptionhandler&quot;&gt;$exceptionHandler&lt;/a&gt; (unless executed during a digest).</source>
          <target state="translated">请注意，在事件侦听器中执行的代码（即使是使用jqLit​​e的 &lt;code&gt;on&lt;/code&gt; / &lt;code&gt;bind&lt;/code&gt; 方法注册的代码）也不会将异常委托给&lt;a href=&quot;%24exceptionhandler&quot;&gt;$ exceptionHandler&lt;/a&gt;（除非在摘要期间执行）。</target>
        </trans-unit>
        <trans-unit id="9e38d74b6819f720cd61a7094b0d049052abbf0b" translate="yes" xml:space="preserve">
          <source>Note, this directive requires &lt;code&gt;ngModel&lt;/code&gt; to be present.</source>
          <target state="translated">注意，此伪指令要求存在 &lt;code&gt;ngModel&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b59520eea72ca86bfd70bf545fa47501473c8a9a" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;ngModel&lt;/code&gt; will try to bind to the property given by evaluating the expression on the current scope. If the property doesn't already exist on this scope, it will be created implicitly and added to the scope.</source>
          <target state="translated">注意： &lt;code&gt;ngModel&lt;/code&gt; 将尝试通过在当前作用域上评估表达式来绑定到给定的属性。如果该属性在此作用域上尚不存在，则将隐式创建该属性并将其添加到作用域。</target>
        </trans-unit>
        <trans-unit id="c67b04ea81758d7b804ada0ab90cd4b709045975" translate="yes" xml:space="preserve">
          <source>Note: A Word on Modules</source>
          <target state="translated">注:关于模块的一个词</target>
        </trans-unit>
        <trans-unit id="ded91630c0d7419f8e1e784dda3b45c381bb9947" translate="yes" xml:space="preserve">
          <source>Note: All services in AngularJS are singletons. That means that the injector uses each recipe at most once to create the object. The injector then caches the reference for all future needs.</source>
          <target state="translated">注意:AngularJS中的所有服务都是单子。这意味着注入器最多使用每个配方一次来创建对象。然后,注入器会缓存引用,以备将来的所有需求。</target>
        </trans-unit>
        <trans-unit id="9e323b77fe9b73f870ed3df7c5fd2a58db5399d7" translate="yes" xml:space="preserve">
          <source>Note: As the &lt;code&gt;blur&lt;/code&gt; event is executed synchronously also during DOM manipulations (e.g. removing a focussed input), AngularJS executes the expression using &lt;code&gt;scope.$evalAsync&lt;/code&gt; if the event is fired during an &lt;code&gt;$apply&lt;/code&gt; to ensure a consistent state.</source>
          <target state="translated">注意：由于 &lt;code&gt;blur&lt;/code&gt; 事件也在DOM操作（例如，删除焦点输入）期间同步执行，因此AngularJS使用 &lt;code&gt;scope.$evalAsync&lt;/code&gt; 执行表达式，如果在 &lt;code&gt;$apply&lt;/code&gt; 期间触发了该事件以确保状态一致。</target>
        </trans-unit>
        <trans-unit id="c280156fbac945785329bf6b2c4598680af419de" translate="yes" xml:space="preserve">
          <source>Note: As the &lt;code&gt;focus&lt;/code&gt; event is executed synchronously when calling &lt;code&gt;input.focus()&lt;/code&gt; AngularJS executes the expression using &lt;code&gt;scope.$evalAsync&lt;/code&gt; if the event is fired during an &lt;code&gt;$apply&lt;/code&gt; to ensure a consistent state.</source>
          <target state="translated">注意：由于 &lt;code&gt;focus&lt;/code&gt; 事件是在调用 &lt;code&gt;input.focus()&lt;/code&gt; 时同步执行的，因此AngularJS使用 &lt;code&gt;scope.$evalAsync&lt;/code&gt; 执行表达式，如果在 &lt;code&gt;$apply&lt;/code&gt; 期间触发了该事件以确保状态一致。</target>
        </trans-unit>
        <trans-unit id="389de76ccd42531e06d862c273bd31729b8ac968" translate="yes" xml:space="preserve">
          <source>Note: By default, the address that appears in your &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; tag will be used as the path. This is important so that cookies will be visible for all routes when html5mode is enabled.</source>
          <target state="translated">注意：默认情况下，出现在 &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; 标记中的地址将用作路径。这很重要，因此启用html5mode时，所有路由都可以看到Cookie。</target>
        </trans-unit>
        <trans-unit id="e31495007ee5e25b71e93337695e741041bb6b41" translate="yes" xml:space="preserve">
          <source>Note: If a &lt;code&gt;$sanitize&lt;/code&gt; service is unavailable and the bound value isn't explicitly trusted, you will have an exception (instead of an exploit.)</source>
          <target state="translated">注意：如果 &lt;code&gt;$sanitize&lt;/code&gt; 服务不可用，并且绑定值未明确受信任，则将出现异常（而不是漏洞利用）。</target>
        </trans-unit>
        <trans-unit id="377131b4062957e0cd54324140e9b1862488c89c" translate="yes" xml:space="preserve">
          <source>Note: Not all browsers support blackboxing.</source>
          <target state="translated">注意:并非所有浏览器都支持黑盒。</target>
        </trans-unit>
        <trans-unit id="a089d7d30df3e20d1229e11d2f529063219abf86" translate="yes" xml:space="preserve">
          <source>Note: Path should always begin with forward slash (/), this method will add the forward slash if it is missing.</source>
          <target state="translated">注意:路径应该总是以斜杠(/)开头,如果缺少斜杠,本方法将添加斜杠。</target>
        </trans-unit>
        <trans-unit id="eb8c13038a41fd0eff7f4877829e9fd98a3545b0" translate="yes" xml:space="preserve">
          <source>Note: Service recipes follow a design pattern called &lt;a href=&quot;http://www.martinfowler.com/articles/injection.html#ConstructorInjectionWithPicocontainer&quot;&gt;constructor injection&lt;/a&gt;.</source>
          <target state="translated">注意：服务配方遵循称为&lt;a href=&quot;http://www.martinfowler.com/articles/injection.html#ConstructorInjectionWithPicocontainer&quot;&gt;构造函数注入&lt;/a&gt;的设计模式。</target>
        </trans-unit>
        <trans-unit id="475834278a9624d0a055bc9effed019c3ae7d13c" translate="yes" xml:space="preserve">
          <source>Note: compared to the non-AngularJS version &lt;code&gt;location.host&lt;/code&gt; which returns &lt;code&gt;hostname:port&lt;/code&gt;, this returns the &lt;code&gt;hostname&lt;/code&gt; portion only.</source>
          <target state="translated">注意：与非AngularJS版本的 &lt;code&gt;location.host&lt;/code&gt; 返回 &lt;code&gt;hostname:port&lt;/code&gt; 相比，这仅返回 &lt;code&gt;hostname&lt;/code&gt; 部分。</target>
        </trans-unit>
        <trans-unit id="29b3409bac783620b70260279692f3e46f1b409c" translate="yes" xml:space="preserve">
          <source>Note: each module is only loaded once, even if multiple other modules require it. Note: the factory function for &quot;values&quot; and &quot;services&quot; is called lazily when the value/service is injected for the first time.</source>
          <target state="translated">注意:每个模块只加载一次,即使其他多个模块需要加载。注意:&quot;值 &quot;和 &quot;服务 &quot;的出厂函数在第一次注入值/服务时被懒得调用。</target>
        </trans-unit>
        <trans-unit id="097deab2d3194da828c79a657f91e42bb7760b81" translate="yes" xml:space="preserve">
          <source>Note: progress/notify callbacks are not currently supported via the ES6-style interface.</source>
          <target state="translated">注意:目前不支持通过ES6风格的接口进行进度/通知回调。</target>
        </trans-unit>
        <trans-unit id="5db2b0e614cd03b6d341dbe39badf2f8a3c6edee" translate="yes" xml:space="preserve">
          <source>Note: unlike ES6 behavior, an exception thrown in the constructor function will NOT implicitly reject the promise.</source>
          <target state="translated">注意:与ES6的行为不同,在构造函数中抛出的异常不会隐式拒绝承诺。</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="c54075f533215ab50d0fd7cf38a3eeb8c23fc08c" translate="yes" xml:space="preserve">
          <source>Notice how by nesting the &lt;code&gt;describe&lt;/code&gt; calls and being descriptive when calling them with strings, the test is very clear. It documents exactly what it is testing, and at a glance you can quickly see what is happening. Now let's add the test for when the password is less than three characters, which should see &lt;code&gt;$scope.strength&lt;/code&gt; set to &quot;weak&quot;:</source>
          <target state="translated">注意，通过嵌套 &lt;code&gt;describe&lt;/code&gt; 调用并在使用字符串调用它们时具有描述性，测试非常清楚。它准确地记录了正在测试的内容，您一眼就能快速看到正在发生的事情。现在让我们添加一个密码少于三个字符的测试，应该将 &lt;code&gt;$scope.strength&lt;/code&gt; 设置为&amp;ldquo;弱&amp;rdquo;：</target>
        </trans-unit>
        <trans-unit id="ea973d032cbe0e4a3acb5cd3fd8438e47c464d8c" translate="yes" xml:space="preserve">
          <source>Notice how we created an AngularJS module called &lt;code&gt;myApp&lt;/code&gt;, and specified that this module definition contains a &quot;recipe&quot; for constructing the &lt;code&gt;clientId&lt;/code&gt; service, which is a simple string in this case.</source>
          <target state="translated">请注意，我们如何创建一个名为 &lt;code&gt;myApp&lt;/code&gt; 的AngularJS模块，并指定此模块定义包含用于构造 &lt;code&gt;clientId&lt;/code&gt; 服务的&amp;ldquo;配方&amp;rdquo;，在这种情况下，该配方为简单字符串。</target>
        </trans-unit>
        <trans-unit id="6e1c89c353e0b2bfa617e6200563c1f70f6b36b2" translate="yes" xml:space="preserve">
          <source>Notice how we nested three &lt;code&gt;ng-controller&lt;/code&gt; directives in our template. This will result in four scopes being created for our view:</source>
          <target state="translated">注意我们如何在模板中嵌套三个 &lt;code&gt;ng-controller&lt;/code&gt; 指令。这将为我们的视图创建四个范围：</target>
        </trans-unit>
        <trans-unit id="866554109e207e68affe8a1878fa43779923f1b4" translate="yes" xml:space="preserve">
          <source>Notice that &lt;code&gt;ng-bind-html&lt;/code&gt; is bound to &lt;code&gt;userHtml&lt;/code&gt; controlled by the user. With SCE disabled, this application allows the user to render arbitrary HTML into the DIV, which would be an XSS security bug. In a more realistic example, one may be rendering user comments, blog articles, etc. via bindings. (HTML is just one example of a context where rendering user controlled input creates security vulnerabilities.)</source>
          <target state="translated">请注意， &lt;code&gt;ng-bind-html&lt;/code&gt; 绑定到 &lt;code&gt;userHtml&lt;/code&gt; 控制的userHtml。禁用SCE后，此应用程序允许用户将任意HTML呈现到DIV中，这可能是XSS安全漏洞。在更现实的示例中，可以通过绑定来呈现用户评论，博客文章等。（HTML只是上下文的一个示例，其中呈现用户控制的输入会创建安全漏洞。）</target>
        </trans-unit>
        <trans-unit id="73b624fb6abc400437a5b17f43dc406ad4cba089" translate="yes" xml:space="preserve">
          <source>Notice that &lt;code&gt;{{vojta.name}}&lt;/code&gt; and &lt;code&gt;{{vojta.address}}&lt;/code&gt; are empty, meaning they are undefined. Although we defined &lt;code&gt;vojta&lt;/code&gt; in the controller, it's not available within the directive.</source>
          <target state="translated">请注意， &lt;code&gt;{{vojta.name}}&lt;/code&gt; 和 &lt;code&gt;{{vojta.address}}&lt;/code&gt; 为空，这意味着它们是未定义的。尽管我们在控制器中定义了 &lt;code&gt;vojta&lt;/code&gt; ，但它在指令中不可用。</target>
        </trans-unit>
        <trans-unit id="0298da2c4dfd3a77cc9d26ed5cd330121c43f588" translate="yes" xml:space="preserve">
          <source>Notice that AngularJS automatically places &lt;code&gt;ng-scope&lt;/code&gt; class on elements where scopes are attached. The &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; definition in this example highlights in red the new scope locations. The child scopes are necessary because the repeater evaluates &lt;code&gt;{{name}}&lt;/code&gt; expression, but depending on which scope the expression is evaluated it produces different result. Similarly the evaluation of &lt;code&gt;{{department}}&lt;/code&gt; prototypically inherits from root scope, as it is the only place where the &lt;code&gt;department&lt;/code&gt; property is defined.</source>
          <target state="translated">注意，AngularJS自动将 &lt;code&gt;ng-scope&lt;/code&gt; 类放置在附加了作用域的元素上。本示例中的 &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; 定义以红色突出显示新作用域位置。子作用域是必需的，因为转发器会评估 &lt;code&gt;{{name}}&lt;/code&gt; 表达式，但是根据要评估的表达式范围，它会产生不同的结果。类似地， &lt;code&gt;{{department}}&lt;/code&gt; 的评估原型也从根范围继承，因为它是唯一定义 &lt;code&gt;department&lt;/code&gt; 属性的地方。</target>
        </trans-unit>
        <trans-unit id="3839958f8944ea1c22c3c00974493cea51d7518b" translate="yes" xml:space="preserve">
          <source>Notice that the &lt;code&gt;SpicyController&lt;/code&gt; Controller now defines just one method called &lt;code&gt;spicy&lt;/code&gt;, which takes one argument called &lt;code&gt;spice&lt;/code&gt;. The template then refers to this Controller method and passes in a string constant &lt;code&gt;'chili'&lt;/code&gt; in the binding for the first button and a model property &lt;code&gt;customSpice&lt;/code&gt; (bound to an input box) in the second button.</source>
          <target state="translated">注意， &lt;code&gt;SpicyController&lt;/code&gt; 控制器现在仅定义了一种称为 &lt;code&gt;spicy&lt;/code&gt; 方法，该方法带有一个称为 &lt;code&gt;spice&lt;/code&gt; 的参数。然后，模板引用此Controller方法，并在第一个按钮的绑定中传递字符串常量 &lt;code&gt;'chili'&lt;/code&gt; ，在第二个按钮中 &lt;code&gt;customSpice&lt;/code&gt; 模型属性customSpice（绑定到输入框）。</target>
        </trans-unit>
        <trans-unit id="fcafb839ae2e19c3003dbe181ab743c7da4deb5d" translate="yes" xml:space="preserve">
          <source>Notice that the &lt;code&gt;debounce&lt;/code&gt; setting now inherits the value from the outer &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; element.</source>
          <target state="translated">注意， &lt;code&gt;debounce&lt;/code&gt; 设置现在从外部 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 元素继承该值。</target>
        </trans-unit>
        <trans-unit id="11c8b074765da89c55e8bddbf88d6d735cedb6db" translate="yes" xml:space="preserve">
          <source>Notice that the &lt;code&gt;debounce&lt;/code&gt; setting was not inherited and used the default value instead.</source>
          <target state="translated">请注意， &lt;code&gt;debounce&lt;/code&gt; 设置不是继承的，而是使用默认值。</target>
        </trans-unit>
        <trans-unit id="84e33f4c42c94171ec70e888a6080924ce7f9f08" translate="yes" xml:space="preserve">
          <source>Notice that the unicorn provider is injected into the config function. This injection is done by a provider injector which is different from the regular instance injector, in that it instantiates and wires (injects) all provider instances only.</source>
          <target state="translated">请注意,独角兽提供者被注入到config函数中。这种注入是由一个 provider 注入器完成的,它与普通的实例注入器不同,它只对所有 provider 实例进行实例化和接线(注入)。</target>
        </trans-unit>
        <trans-unit id="199e1ec52bd8dfa3947e323243561950569a2371" translate="yes" xml:space="preserve">
          <source>Notice that we are still using two plural categories(one, other), but we added three explicit number rules 0, 1 and 2. When one person, perhaps John, views the document, &quot;John is viewing&quot; will be shown. When three people view the document, no explicit number rule is found, so an offset of 2 is taken off 3, and AngularJS uses 1 to decide the plural category. In this case, plural category 'one' is matched and &quot;John, Mary and one other person are viewing&quot; is shown.</source>
          <target state="translated">注意,我们仍然使用两个复数类别(one,other),但我们增加了三个明确的数字规则0,1和2。当一个人,也许是John查看文档时,将显示 &quot;John正在查看&quot;。当三个人查看文档时,没有找到明确的数字规则,所以在3上取2的偏移量,AngularJS用1来决定复数类别。本例中,复数类别 &quot;1 &quot;匹配,显示 &quot;John、Mary和另外一个人正在查看&quot;。</target>
        </trans-unit>
        <trans-unit id="1994c2630a8638f99ab205cb6033d30163f18599" translate="yes" xml:space="preserve">
          <source>Notice that we have bindings in this directive. After &lt;code&gt;$compile&lt;/code&gt; compiles and links &lt;code&gt;&amp;lt;div my-customer&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;, it will try to match directives on the element's children. This means you can compose directives of other directives. We'll see how to do that in &lt;a href=&quot;directive#creating-directives-that-communicate.html&quot;&gt;an example&lt;/a&gt; below.</source>
          <target state="translated">注意，此指令中有绑定。在 &lt;code&gt;$compile&lt;/code&gt; 编译并链接 &lt;code&gt;&amp;lt;div my-customer&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt; 之后，它将尝试匹配元素子元素上的指令。这意味着您可以组成其他指令的指令。我们将在下面&lt;a href=&quot;directive#creating-directives-that-communicate.html&quot;&gt;的示例&lt;/a&gt;中看到如何执行此操作。</target>
        </trans-unit>
        <trans-unit id="81bd7a0e3da58bfc17640a279f9a5cbc48aaad4b" translate="yes" xml:space="preserve">
          <source>Notice the CSS class &lt;strong&gt;fade&lt;/strong&gt;? We can now create the CSS transition code that references this class:</source>
          <target state="translated">注意CSS类的&lt;strong&gt;淡入淡出&lt;/strong&gt;吗？现在，我们可以创建引用此类的CSS过渡代码：</target>
        </trans-unit>
        <trans-unit id="8e5507629b5d2276102b44fefc2c3db40187c151" translate="yes" xml:space="preserve">
          <source>Now that AngularJS knows of all the parts of the application, it needs to create them. In the previous section we saw that controllers are created using a constructor function. For services, there are multiple ways to specify how they are created (see the &lt;a href=&quot;services&quot;&gt;service guide&lt;/a&gt;). In the example above, we are using an anonymous function as the factory function for the &lt;code&gt;currencyConverter&lt;/code&gt; service. This function should return the &lt;code&gt;currencyConverter&lt;/code&gt; service instance.</source>
          <target state="translated">既然AngularJS知道了应用程序的所有部分，就需要创建它们。在上一节中，我们看到了使用构造函数创建的控制器。对于服务，有多种方法可以指定它们的创建方式（请参阅&lt;a href=&quot;services&quot;&gt;服务指南&lt;/a&gt;）。在上面的示例中，我们使用匿名函数作为 &lt;code&gt;currencyConverter&lt;/code&gt; 服务的工厂函数。此函数应返回 &lt;code&gt;currencyConverter&lt;/code&gt; 服务实例。</target>
        </trans-unit>
        <trans-unit id="3023743de3fc166f2614a5025a30366a01a0be40" translate="yes" xml:space="preserve">
          <source>Now the &lt;code&gt;on&lt;/code&gt; CSS class is added and removed on the greeting box component. Now if we add a CSS class on top of the greeting box element in our HTML code then we can trigger a CSS or JS animation to happen.</source>
          <target state="translated">现在， &lt;code&gt;on&lt;/code&gt; 贺卡组件上添加和删除了on CSS类。现在，如果我们在HTML代码中的贺卡框元素顶部添加CSS类，则可以触发CSS或JS动画发生。</target>
        </trans-unit>
        <trans-unit id="5a9c4611e97cb75f64fecd19f3bf1eb542109c4a" translate="yes" xml:space="preserve">
          <source>Now we can add a directive to our app.</source>
          <target state="translated">现在我们可以为我们的应用程序添加一个指令。</target>
        </trans-unit>
        <trans-unit id="6ddd006ee96483952150cc966e2ccc3310f3a60b" translate="yes" xml:space="preserve">
          <source>Now we can fill in the rest via our transition CSS code:</source>
          <target state="translated">现在我们可以通过我们的过渡CSS代码来填充其余的部分。</target>
        </trans-unit>
        <trans-unit id="1dd4db9a4bc3a4df724b8949105cc438f10d21ff" translate="yes" xml:space="preserve">
          <source>Now we can jump back to the anchor animation. When the animation happens, there are two stages that occur: an &lt;code&gt;out&lt;/code&gt; and an &lt;code&gt;in&lt;/code&gt; stage. The &lt;code&gt;out&lt;/code&gt; stage happens first and that is when the element is animated away from its origin. Once that animation is over then the &lt;code&gt;in&lt;/code&gt; stage occurs which animates the element to its destination. The reason why there are two animations is to give enough time for the enter animation on the new element to be ready.</source>
          <target state="translated">现在我们可以跳回到锚点动画。动画发生时，会发生两个阶段：一个 &lt;code&gt;out&lt;/code&gt; 阶段和一个 &lt;code&gt;in&lt;/code&gt; 阶段。该 &lt;code&gt;out&lt;/code&gt; 阶段首先发生，那就是当元素的动画从它的起源了。一旦动画结束，就会 &lt;code&gt;in&lt;/code&gt; 舞台，将元素动画到其目的地。之所以有两个动画，是为了给新元素上的输入动画足够的准备时间。</target>
        </trans-unit>
        <trans-unit id="85942980bd72608eb2e7385f2bd59154033057d3" translate="yes" xml:space="preserve">
          <source>Now we create the &lt;strong&gt;JavaScript animation&lt;/strong&gt; that will trigger the CSS transition:</source>
          <target state="translated">现在，我们创建将触发CSS过渡的&lt;strong&gt;JavaScript动画&lt;/strong&gt;：</target>
        </trans-unit>
        <trans-unit id="b6aea76798fd7c993834e12f5affe0d762a73898" translate="yes" xml:space="preserve">
          <source>Now we have two tests, but notice the duplication between the tests. Both have to create the &lt;code&gt;$scope&lt;/code&gt; variable and create the controller. As we add new tests, this duplication is only going to get worse. Thankfully, Jasmine provides &lt;code&gt;beforeEach&lt;/code&gt;, which lets us run a function before each individual test. Let's see how that would tidy up our tests:</source>
          <target state="translated">现在我们有两个测试，但是请注意测试之间的重复。两者都必须创建 &lt;code&gt;$scope&lt;/code&gt; 变量并创建控制器。当我们添加新测试时，这种重复只会变得更糟。值得庆幸的是，Jasmine提供了 &lt;code&gt;beforeEach&lt;/code&gt; ，它使我们可以在每个测试之前运行一个函数。让我们来看看如何整理我们的测试：</target>
        </trans-unit>
        <trans-unit id="01bc994e095baae01166aef817062cc1507de306" translate="yes" xml:space="preserve">
          <source>Now we setup the mock backend and create the test specs:</source>
          <target state="translated">现在我们设置模拟后端,并创建测试规范。</target>
        </trans-unit>
        <trans-unit id="e2b8c1c02a592bac26655509f0d4ef8342a63dc4" translate="yes" xml:space="preserve">
          <source>Now what do the contents of our &lt;code&gt;animator&lt;/code&gt; variable look like:</source>
          <target state="translated">现在，我们的 &lt;code&gt;animator&lt;/code&gt; 变量的内容是什么样的：</target>
        </trans-unit>
        <trans-unit id="c69de682241b16fef357ef55cb7730c3f9464cc0" translate="yes" xml:space="preserve">
          <source>Now, when the &lt;code&gt;ngIf&lt;/code&gt; expression changes, &lt;code&gt;ngAnimate&lt;/code&gt; will see the spinner animation and use it to animate the &lt;code&gt;enter&lt;/code&gt;/&lt;code&gt;leave&lt;/code&gt; event, which doesn't work because the animation is infinite. The element will still be added / removed after a timeout, but there will be a noticeable delay.</source>
          <target state="translated">现在，当 &lt;code&gt;ngIf&lt;/code&gt; 表达式更改时， &lt;code&gt;ngAnimate&lt;/code&gt; 将看到微调器动画并将其用于设置 &lt;code&gt;enter&lt;/code&gt; / &lt;code&gt;leave&lt;/code&gt; 事件的动画，因为动画是无限的，所以该动画无效。超时后仍将添加/删除该元素，但是会有明显的延迟。</target>
        </trans-unit>
        <trans-unit id="7d0d5f99a37ee70edab031267785cec623ef0119" translate="yes" xml:space="preserve">
          <source>Now, when the view changes (once the link is clicked), ngAnimate will examine the HTML contents to see if there is a match reference between any components in the view that is leaving and the view that is entering. It will scan both the view which is being removed (leave) and inserted (enter) to see if there are any paired DOM elements that contain a matching ref value.</source>
          <target state="translated">现在,当视图发生变化时(一旦链接被点击),ngAnimate将检查HTML内容,看看在离开的视图和进入的视图中是否有匹配的引用。它将扫描被移除(离开)和插入(进入)的视图,看看是否有任何配对的DOM元素包含一个匹配的参考值。</target>
        </trans-unit>
        <trans-unit id="f95dbfde74296ed5d57d3a973b8c06886fc00be8" translate="yes" xml:space="preserve">
          <source>Nowadays most of the AngularJS projects are using only element and attribute directives, and in such projects there is no need to compile comments and classes.</source>
          <target state="translated">现在大部分的AngularJS项目都只使用元素和属性指令,在这样的项目中不需要编译注释和类。</target>
        </trans-unit>
        <trans-unit id="c05a46d489572fe209bbfcd6fd0cae15d381835c" translate="yes" xml:space="preserve">
          <source>Number of decimal places to round the amount to, defaults to default max fraction size for current locale</source>
          <target state="translated">四舍五入的小数位数,默认为当前地区的默认最大分数大小。</target>
        </trans-unit>
        <trans-unit id="2de873c3c8c40a30dc87a6efdf6c6b6b808f8957" translate="yes" xml:space="preserve">
          <source>Number of decimal places to round the number to. If this is not provided then the fraction size is computed from the current locale's number formatting pattern. In the case of the default locale, it will be 3.</source>
          <target state="translated">四舍五入的小数位数。如果没有提供这个数字,那么分数的大小将根据当前语言的数字格式化模式来计算。在默认的地方语言的情况下,它将是3。</target>
        </trans-unit>
        <trans-unit id="1cab7d05ea962fa769885ebf77b5f10eb16d0782" translate="yes" xml:space="preserve">
          <source>Number of milliseconds between each function call.</source>
          <target state="translated">每次函数调用之间的毫秒数。</target>
        </trans-unit>
        <trans-unit id="7344ecd696099cafba5489c27372c57dd66d2a02" translate="yes" xml:space="preserve">
          <source>Number of pending requests to skip. For example, a value of &lt;code&gt;5&lt;/code&gt; would skip the first 5 pending requests and start flushing from the 6th onwards.</source>
          <target state="translated">跳过的待处理请求数。例如，值 &lt;code&gt;5&lt;/code&gt; 将跳过前5个待处理请求，并从第6个开始开始刷新。</target>
        </trans-unit>
        <trans-unit id="8eac9b329b2c580c8d444a64eb6fd91be474f30c" translate="yes" xml:space="preserve">
          <source>Number of responses to flush. If undefined/null, all pending requests (starting after &lt;code&gt;skip&lt;/code&gt;) will be flushed.</source>
          <target state="translated">刷新响应数。如果为undefined / null，则将清除所有未决请求（在 &lt;code&gt;skip&lt;/code&gt; 之后开始）。</target>
        </trans-unit>
        <trans-unit id="f68b421f294e9b31cc2b54567e284f63c5469db0" translate="yes" xml:space="preserve">
          <source>Number of times to repeat. If not set, or 0, will repeat indefinitely.</source>
          <target state="translated">重复的次数。如果不设置,或0,将无限期重复。</target>
        </trans-unit>
        <trans-unit id="e8550249d090d9100ad4508016e764db78774af3" translate="yes" xml:space="preserve">
          <source>Number rounded to &lt;code&gt;fractionSize&lt;/code&gt; appropriately formatted based on the current locale (e.g., in the en_US locale it will have &quot;.&quot; as the decimal separator and include &quot;,&quot; group separators after each third digit).</source>
          <target state="translated">四舍五入到 &lt;code&gt;fractionSize&lt;/code&gt; 位数的数字会根据当前语言环境适当地设置格式（例如，在en_US语言环境中，它将以&amp;ldquo;。&amp;rdquo;作为小数点分隔符，并在每三位数后包含&amp;ldquo;，&amp;rdquo;组分隔符）。</target>
        </trans-unit>
        <trans-unit id="bcd00e774ff736ecae6ca4c95d8c126b66654ba9" translate="yes" xml:space="preserve">
          <source>Number to format.</source>
          <target state="translated">要格式化的数字。</target>
        </trans-unit>
        <trans-unit id="2883f191bc5ebfdc16c0813eff659b35363ea69b" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="translated">Object</target>
        </trans-unit>
        <trans-unit id="5d0d0d8ab6d5d3a672af3a8d509722442303836e" translate="yes" xml:space="preserve">
          <source>Object components in ng</source>
          <target state="translated">ng中的对象组件</target>
        </trans-unit>
        <trans-unit id="e11c5730b47cb2ae0f3be1f4242cef69f0b5793c" translate="yes" xml:space="preserve">
          <source>Object components in ngMock</source>
          <target state="translated">ngMock中的对象组件</target>
        </trans-unit>
        <trans-unit id="0c7088859ca13e9dfdbb54c021c04f3e6cd0c7cb" translate="yes" xml:space="preserve">
          <source>Object containing default options to pass when setting cookies.</source>
          <target state="translated">包含设置cookie时要传递的默认选项的对象。</target>
        </trans-unit>
        <trans-unit id="995d78c863aed54dbb876e5ea4c402cae1dd9572" translate="yes" xml:space="preserve">
          <source>Object containing default options used when creating &lt;code&gt;$resource&lt;/code&gt; instances.</source>
          <target state="translated">包含创建 &lt;code&gt;$resource&lt;/code&gt; 实例时使用的默认选项的对象。</target>
        </trans-unit>
        <trans-unit id="657930111284b6f69526339fc342bb6150cc6a1b" translate="yes" xml:space="preserve">
          <source>Object containing default values for all &lt;a href=&quot;../service/%24http&quot;&gt;$http&lt;/a&gt; requests.</source>
          <target state="translated">包含所有&lt;a href=&quot;../service/%24http&quot;&gt;$ http&lt;/a&gt;请求的默认值的对象。</target>
        </trans-unit>
        <trans-unit id="759fd0d572c4011472fed205eac43611faa1366f" translate="yes" xml:space="preserve">
          <source>Object describing the request to be made and how it should be processed. The object has following properties:</source>
          <target state="translated">描述要提出的请求和如何处理请求的对象。该对象具有以下属性:</target>
        </trans-unit>
        <trans-unit id="49310707de14d25a2b81072b3f31cead565e8a0a" translate="yes" xml:space="preserve">
          <source>Object or value to compare.</source>
          <target state="translated">要比较的对象或值。</target>
        </trans-unit>
        <trans-unit id="dd24b197b8c1db2163e1ac796ff37f51ee66294a" translate="yes" xml:space="preserve">
          <source>Object properties:</source>
          <target state="translated">对象属性。</target>
        </trans-unit>
        <trans-unit id="661911c1c58762c1a751a12e82b587ad0734d14f" translate="yes" xml:space="preserve">
          <source>Object to become context (&lt;code&gt;this&lt;/code&gt;) for the iterator function.</source>
          <target state="translated">成为迭代器功能的上下文（ &lt;code&gt;this&lt;/code&gt; ）的对象。</target>
        </trans-unit>
        <trans-unit id="28a82450c0a24a36b7195543cddb1b53d9eb4603" translate="yes" xml:space="preserve">
          <source>Object to iterate over.</source>
          <target state="translated">要迭代的对象。</target>
        </trans-unit>
        <trans-unit id="fa827302c104f3c03bab5c1912db8174154c1c51" translate="yes" xml:space="preserve">
          <source>Object with all route configuration Objects as its properties.</source>
          <target state="translated">以所有途径配置对象为属性的对象。</target>
        </trans-unit>
        <trans-unit id="19569f4887493f227cb304cc348f8b757202b03d" translate="yes" xml:space="preserve">
          <source>Observes an interpolated attribute.</source>
          <target state="translated">观察一个插值属性。</target>
        </trans-unit>
        <trans-unit id="5d89917fa7619007c94c10f147a56a81bbebfd52" translate="yes" xml:space="preserve">
          <source>Observing &lt;a href=&quot;../api/ng/provider/%24compileprovider#directive.html&quot;&gt;directives&lt;/a&gt;, such as double-curly expressions &lt;code&gt;{{expression}}&lt;/code&gt;, register listeners using the &lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24watch.html&quot;&gt;$watch()&lt;/a&gt; method. This type of directive needs to be notified whenever the expression changes so that it can update the view.</source>
          <target state="translated">观察&lt;a href=&quot;../api/ng/provider/%24compileprovider#directive.html&quot;&gt;指令&lt;/a&gt;（例如，双卷曲表达式 &lt;code&gt;{{expression}}&lt;/code&gt; )使用&lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24watch.html&quot;&gt;$ watch（）&lt;/a&gt;方法注册侦听器。每当表达式更改时，都需要通知此类指令，以便它可以更新视图。</target>
        </trans-unit>
        <trans-unit id="fa8994e94ae63340255decacb1a40a4119cd94c0" translate="yes" xml:space="preserve">
          <source>Occurs</source>
          <target state="translated">Occurs</target>
        </trans-unit>
        <trans-unit id="942e0589c947be65474a002d509b097c5723a042" translate="yes" xml:space="preserve">
          <source>Official AngularJS Tutorial</source>
          <target state="translated">官方AngularJS教程</target>
        </trans-unit>
        <trans-unit id="5211024b2c932653139044bde2ef35e801bc766a" translate="yes" xml:space="preserve">
          <source>Official Communications</source>
          <target state="translated">公文</target>
        </trans-unit>
        <trans-unit id="3dbb82784f4ceea929a606b795d9c5a9fff56ccd" translate="yes" xml:space="preserve">
          <source>Official announcements, news and releases are posted to our blog, G+ and Twitter:</source>
          <target state="translated">官方公告、新闻和发布都会发布在我们的博客、G+和Twitter上。</target>
        </trans-unit>
        <trans-unit id="aee2a58d9d00b28c3d6357134f216912f4105e7f" translate="yes" xml:space="preserve">
          <source>Offset of the &lt;em&gt;desired&lt;/em&gt; timezone in hours (fractions will be honored)</source>
          <target state="translated">&lt;em&gt;所需&lt;/em&gt;时区的偏移量（以小时为单位）</target>
        </trans-unit>
        <trans-unit id="45919291790453a621a3d3ca6cb3d2791302bb6c" translate="yes" xml:space="preserve">
          <source>Offset to deduct from the total number.</source>
          <target state="translated">从总人数中扣除的抵消。</target>
        </trans-unit>
        <trans-unit id="3397619639d18ef70105382abc79e8b41ababef1" translate="yes" xml:space="preserve">
          <source>Often it's desirable to pass data from the isolate scope via an expression to the parent scope, this can be done by passing a map of local variable names and values into the expression wrapper function. For example, the &lt;code&gt;hideDialog&lt;/code&gt; function takes a message to display when the dialog is hidden. This is specified in the directive by calling &lt;code&gt;close({message: 'closing for now'})&lt;/code&gt;. Then the local variable &lt;code&gt;message&lt;/code&gt; will be available within the &lt;code&gt;on-close&lt;/code&gt; expression.</source>
          <target state="translated">通常希望将数据从隔离范围通过表达式传递到父范围，这可以通过将局部变量名称和值的映射传递到表达式包装函数中来完成。例如，当对话框被隐藏时， &lt;code&gt;hideDialog&lt;/code&gt; 函数将显示一条消息。这是在指令中通过调用 &lt;code&gt;close({message: 'closing for now'})&lt;/code&gt; 。然后，局部变量 &lt;code&gt;message&lt;/code&gt; 将 &lt;code&gt;on-close&lt;/code&gt; 表达式中可用。</target>
        </trans-unit>
        <trans-unit id="fc10f6b83c02595fc0e689a6e9a864045ddab25f" translate="yes" xml:space="preserve">
          <source>Often services have no configuration options and there is no need to add methods to the service provider. The provider will be no more than a constructor function with a &lt;code&gt;$get&lt;/code&gt; property. For these cases the &lt;a href=&quot;%24provide&quot;&gt;$provide&lt;/a&gt; service has additional helper methods to register services without specifying a provider.</source>
          <target state="translated">通常，服务没有配置选项，也不需要向服务提供者添加方法。提供程序将只是具有 &lt;code&gt;$get&lt;/code&gt; 属性的构造函数。对于这些情况，&lt;a href=&quot;%24provide&quot;&gt;$ provide&lt;/a&gt;服务具有其他帮助程序方法来注册服务而无需指定提供程序。</target>
        </trans-unit>
        <trans-unit id="5ea29abb9e633dfb97ed5c1299fc4f4bd33508a9" translate="yes" xml:space="preserve">
          <source>Often, we would like to inject a reference once, in a &lt;code&gt;beforeEach()&lt;/code&gt; block and reuse this in multiple &lt;code&gt;it()&lt;/code&gt; clauses. To be able to do this we must assign the reference to a variable that is declared in the scope of the &lt;code&gt;describe()&lt;/code&gt; block. Since we would, most likely, want the variable to have the same name of the reference we have a problem, since the parameter to the &lt;code&gt;inject()&lt;/code&gt; function would hide the outer variable.</source>
          <target state="translated">通常，我们希望在 &lt;code&gt;beforeEach()&lt;/code&gt; 块中注入一次引用，并在多个 &lt;code&gt;it()&lt;/code&gt; 子句中重用该引用。为此，我们必须将引用分配给在 &lt;code&gt;describe()&lt;/code&gt; 块范围内声明的变量。因为我们很可能希望变量具有与引用相同的名称，所以我们有一个问题，因为 &lt;code&gt;inject()&lt;/code&gt; 函数的参数将隐藏外部变量。</target>
        </trans-unit>
        <trans-unit id="55cc916839b43a01a85adc73fa724a6b9294ff71" translate="yes" xml:space="preserve">
          <source>Older browsers will redirect regular URLs to hashbang URLs.</source>
          <target state="translated">旧的浏览器会将常规URL重定向到哈希邦URL。</target>
        </trans-unit>
        <trans-unit id="730fe0b7474bfd48c7cbf76d43e5e9fcaa819084" translate="yes" xml:space="preserve">
          <source>Omitted or undefined options will leave the corresponding configuration values unchanged.</source>
          <target state="translated">省略或未定义的选项将保持相应的配置值不变。</target>
        </trans-unit>
        <trans-unit id="3d94300e6072360828bff66e63d1c6eb5a9039e5" translate="yes" xml:space="preserve">
          <source>On failure, the promise is rejected with the &lt;a href=&quot;../../ng/service/%24http&quot;&gt;http response&lt;/a&gt; object.</source>
          <target state="translated">如果失败，则使用&lt;a href=&quot;../../ng/service/%24http&quot;&gt;http响应&lt;/a&gt;对象拒绝Promise。</target>
        </trans-unit>
        <trans-unit id="3150ca64068eaff88aaa9f32a3f98bf979b1b891" translate="yes" xml:space="preserve">
          <source>On success, the promise is resolved with the same resource instance or collection object, updated with data from server. This makes it easy to use in the &lt;a href=&quot;../../ngroute/provider/%24routeprovider&quot;&gt;&lt;code&gt;resolve&lt;/code&gt; section of &lt;code&gt;$routeProvider.when()&lt;/code&gt;&lt;/a&gt; to defer view rendering until the resource(s) are loaded.</source>
          <target state="translated">成功后，将使用相同的资源实例或集合对象来解析承诺，并使用来自服务器的数据进行更新。这样可以轻松地在&lt;a href=&quot;../../ngroute/provider/%24routeprovider&quot;&gt; &lt;code&gt;$routeProvider.when()&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;resolve&lt;/code&gt; 部分中使用，以将视图渲染推迟到资源加载完成为止。</target>
        </trans-unit>
        <trans-unit id="03e6a8fff8ee4ceb9f5d6a1cede49118cf8c5e9d" translate="yes" xml:space="preserve">
          <source>On this page, you will find a list of official AngularJS resources on various topics.</source>
          <target state="translated">在这个页面上,你将找到一个关于各种主题的AngularJS官方资源列表。</target>
        </trans-unit>
        <trans-unit id="7f0b69c7df5f5044072412f7dcb0c295c8f63c40" translate="yes" xml:space="preserve">
          <source>On to more complex examples!</source>
          <target state="translated">再来看看更复杂的例子!</target>
        </trans-unit>
        <trans-unit id="a20c241950bf7f4ec7065c9cedf5f5b4df396af2" translate="yes" xml:space="preserve">
          <source>Once again, &lt;code&gt;$animateCss&lt;/code&gt; is designed to be used inside of a registered JavaScript animation that is powered by ngAnimate. It is possible to use &lt;code&gt;$animateCss&lt;/code&gt; directly inside of a directive, however, any automatic control over cancelling animations and/or preventing animations from being run on child elements will not be handled by AngularJS. For this to work as expected, please use &lt;code&gt;$animate&lt;/code&gt; to trigger the animation and then setup a JavaScript animation that injects &lt;code&gt;$animateCss&lt;/code&gt; to trigger the CSS animation.</source>
          <target state="translated">再次， &lt;code&gt;$animateCss&lt;/code&gt; 被设计为在由ngAnimate提供支持的注册JavaScript动画中使用。可以在指令内部直接使用 &lt;code&gt;$animateCss&lt;/code&gt; ，但是，AngularJS不会处理取消动画和/或阻止动画在子元素上运行的任何自动控制。为此，请使用 &lt;code&gt;$animate&lt;/code&gt; 触发动画，然后设置JavaScript动画，注入 &lt;code&gt;$animateCss&lt;/code&gt; 触发CSS动画。</target>
        </trans-unit>
        <trans-unit id="832079f71980ce1bf7e842ef4695d9a39eb9d0c3" translate="yes" xml:space="preserve">
          <source>Once all directives matching a DOM element have been identified, the compiler sorts the directives by their &lt;code&gt;priority&lt;/code&gt;.</source>
          <target state="translated">一旦识别出所有与DOM元素匹配的指令，编译器便按其 &lt;code&gt;priority&lt;/code&gt; 对指令进行排序。</target>
        </trans-unit>
        <trans-unit id="a5f730f0b3ca3a229d8d79e42506be6dbbf141ef" translate="yes" xml:space="preserve">
          <source>Once the &lt;code&gt;$location&lt;/code&gt; service is instantiated, you can interact with it via jQuery-style getter and setter methods that allow you to get or change the current URL in the browser.</source>
          <target state="translated">一旦 &lt;code&gt;$location&lt;/code&gt; 服务被实例化，你可以通过jQuery风格的getter和setter方法，使您可以获取或改变当前网址在浏览器与它进行交互。</target>
        </trans-unit>
        <trans-unit id="a6e75b43c6e8a6eaaaf021b30cd3620a33cd3961" translate="yes" xml:space="preserve">
          <source>Once the AngularJS &lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24digest.html&quot;&gt;$digest&lt;/a&gt; loop finishes, the execution leaves the AngularJS and JavaScript context. This is followed by the browser re-rendering the DOM to reflect any changes.</source>
          <target state="translated">AngularJS &lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24digest.html&quot;&gt;$ digest&lt;/a&gt;循环完成后，执行将离开AngularJS和JavaScript上下文。接下来，浏览器重新渲染DOM以反映所有更改。</target>
        </trans-unit>
        <trans-unit id="e021990af4a5931d2b41ef6a3af610ec4c360b79" translate="yes" xml:space="preserve">
          <source>Once the Controller has been attached to the DOM, the &lt;code&gt;double&lt;/code&gt; method can be invoked in an AngularJS expression in the template:</source>
          <target state="translated">将Controller附加到DOM后，可以在模板的AngularJS表达式中调用 &lt;code&gt;double&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="539e0ec3e60f15ed5b3ffd14cdc4bf07b3d5f281" translate="yes" xml:space="preserve">
          <source>Once the callback executes, the browser leaves the JavaScript context and re-renders the view based on DOM changes.</source>
          <target state="translated">一旦回调执行,浏览器就会离开JavaScript上下文,并根据DOM变化重新渲染视图。</target>
        </trans-unit>
        <trans-unit id="c42a629e99e7a6cb394fb6dd8cda3b8c140669fe" translate="yes" xml:space="preserve">
          <source>Once the configuration phase is over, interaction with providers is disallowed and the process of creating services starts. We call this part of the application life-cycle the run phase.</source>
          <target state="translated">配置阶段结束后,就不允许与提供者进行交互,开始创建服务的过程。我们把应用生命周期的这一部分称为运行阶段。</target>
        </trans-unit>
        <trans-unit id="4f503d8cfa1aefbfebbf220fc051e38e94c15149" translate="yes" xml:space="preserve">
          <source>Once this threshold is exceeded, either the horizontal or vertical delta is greater.</source>
          <target state="translated">一旦超过这个临界点,无论是水平三角还是垂直三角都会更大。</target>
        </trans-unit>
        <trans-unit id="ee5e5d4a8e33c0f18fe55ea3714b42beb7574f24" translate="yes" xml:space="preserve">
          <source>One advantage of this approach is that there's no array of names to keep in sync with the function parameters. You can also freely reorder dependencies.</source>
          <target state="translated">这种方法的一个好处是,没有名字的数组与函数参数保持同步。你也可以自由地对依赖关系进行重新排序。</target>
        </trans-unit>
        <trans-unit id="e81236156cec40b8f929730878ed25e4592cd246" translate="yes" xml:space="preserve">
          <source>One caveat with this combination of CSS and &lt;code&gt;aria-hidden&lt;/code&gt;: you must also remove links and other interactive child elements from the tab order using &lt;code&gt;tabIndex=&amp;ldquo;-1&amp;rdquo;&lt;/code&gt; on each control. This ensures screen reader users won't accidentally focus on &quot;mystery elements&quot;. Managing tab index on every child control can be complex and affect performance, so it&amp;rsquo;s best to just stick with the default &lt;code&gt;display: none&lt;/code&gt; CSS. See the &lt;a href=&quot;http://www.w3.org/TR/aria-in-html/#fourth-rule-of-aria-use&quot;&gt;fourth rule of ARIA use&lt;/a&gt;.</source>
          <target state="translated">使用CSS和 &lt;code&gt;aria-hidden&lt;/code&gt; 的这种组合的一个警告：您还必须使用每个控件上的 &lt;code&gt;tabIndex=&amp;ldquo;-1&amp;rdquo;&lt;/code&gt; 从选项卡顺序中删除链接和其他交互式子元素。这样可以确保屏幕阅读器用户不会意外关注&amp;ldquo;神秘元素&amp;rdquo;。在每个子控件上管理选项卡索引可能很复杂并且会影响性​​能，因此最好坚持使用默认 &lt;code&gt;display: none&lt;/code&gt; CSS。请参阅&lt;a href=&quot;http://www.w3.org/TR/aria-in-html/#fourth-rule-of-aria-use&quot;&gt;ARIA使用&lt;/a&gt;的第四条规则。</target>
        </trans-unit>
        <trans-unit id="4801ac26d4a643695f54dd7f69d290e1fed765ee" translate="yes" xml:space="preserve">
          <source>One example of such a context is rendering arbitrary content via the &lt;a href=&quot;../api/ng/directive/ngbindhtml&quot;&gt;&lt;code&gt;ngBindHtml&lt;/code&gt;&lt;/a&gt; directive. If the content is provided by a user there is a chance of Cross Site Scripting (XSS) attacks. The &lt;a href=&quot;../api/ng/directive/ngbindhtml&quot;&gt;&lt;code&gt;ngBindHtml&lt;/code&gt;&lt;/a&gt; directive will not render content that is not marked as safe by &lt;a href=&quot;../api/ng/service/%24sce&quot;&gt;&lt;code&gt;$sce&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;../api/ngsanitize&quot;&gt;&lt;code&gt;ngSanitize&lt;/code&gt;&lt;/a&gt; module can be used to clean such user provided content and mark the content as safe.</source>
          <target state="translated">这种上下文的一个示例是通过&lt;a href=&quot;../api/ng/directive/ngbindhtml&quot;&gt; &lt;code&gt;ngBindHtml&lt;/code&gt; &lt;/a&gt;指令呈现任意内容。如果内容是由用户提供的，则可能会出现跨站点脚本（XSS）攻击。该&lt;a href=&quot;../api/ng/directive/ngbindhtml&quot;&gt; &lt;code&gt;ngBindHtml&lt;/code&gt; &lt;/a&gt;指令将不会呈现未标记为安全的内容&lt;a href=&quot;../api/ng/service/%24sce&quot;&gt; &lt;code&gt;$sce&lt;/code&gt; &lt;/a&gt;。所述&lt;a href=&quot;../api/ngsanitize&quot;&gt; &lt;code&gt;ngSanitize&lt;/code&gt; &lt;/a&gt;模块可用于清洁这样的用户提供的内容，并标记内容一样安全。</target>
        </trans-unit>
        <trans-unit id="8da34b97a8ac7368cf4a952a5049271759ff499d" translate="yes" xml:space="preserve">
          <source>One issue occurs if you want to preselect an option. For example, if you set the model to an object that is equal to an object in your collection, &lt;code&gt;ngOptions&lt;/code&gt; won't be able to set the selection, because the objects are not identical. So by default, you should always reference the item in your collection for preselections, e.g.: &lt;code&gt;$scope.selected = $scope.collection[3]&lt;/code&gt;.</source>
          <target state="translated">如果您要预选一个选项，则会发生一个问题。例如，如果将模型设置为与集合中的对象相等的对象，则 &lt;code&gt;ngOptions&lt;/code&gt; 将无法设置选择，因为这些对象不相同。因此，默认情况下，您应始终在集合中引用该项目以进行 &lt;code&gt;$scope.selected = $scope.collection[3]&lt;/code&gt; 选择，例如：$ scope.selected = $ scope.collection [3]。</target>
        </trans-unit>
        <trans-unit id="03cf224c49b28630f423eb00b170a96952f63750" translate="yes" xml:space="preserve">
          <source>One of &lt;code&gt;template&lt;/code&gt; or &lt;code&gt;templateUrl&lt;/code&gt; is required.</source>
          <target state="translated">其中一个 &lt;code&gt;template&lt;/code&gt; 或 &lt;code&gt;templateUrl&lt;/code&gt; 是必需的。</target>
        </trans-unit>
        <trans-unit id="1e0b15fa92a730eefc11a4f041fe211c93f8a77f" translate="yes" xml:space="preserve">
          <source>One of &lt;code&gt;templateUrl&lt;/code&gt; or &lt;code&gt;template&lt;/code&gt; is required.</source>
          <target state="translated">一个 &lt;code&gt;templateUrl&lt;/code&gt; 或 &lt;code&gt;template&lt;/code&gt; 是必需的。</target>
        </trans-unit>
        <trans-unit id="854c677d0ec17d170fc8ceb1283231687845a9df" translate="yes" xml:space="preserve">
          <source>One of the most common use cases for directives is to create reusable components.</source>
          <target state="translated">指令最常见的用例之一是创建可重用的组件。</target>
        </trans-unit>
        <trans-unit id="0a1e704a493b53f759675b1a40b45e4e787bc094" translate="yes" xml:space="preserve">
          <source>One-time binding</source>
          <target state="translated">一次性约束</target>
        </trans-unit>
        <trans-unit id="d835907bfc4fb4d1c778ab9ea9cff8835777aba5" translate="yes" xml:space="preserve">
          <source>One-time binding expressions will retain the value of the expression at the end of the digest cycle as long as that value is not undefined. If the value of the expression is set within the digest loop and later, within the same digest loop, it is set to undefined, then the expression is not fulfilled and will remain watched.</source>
          <target state="translated">一次性绑定表达式将在摘要循环结束时保留表达式的值,只要该值不是未定义的。如果在文摘循环内设置了表达式的值,之后在同一个文摘循环内,又将其设置为未定义,那么该表达式就没有被满足,将继续被监视。</target>
        </trans-unit>
        <trans-unit id="96499287e9d0872201af20706453570303a19464" translate="yes" xml:space="preserve">
          <source>One-way binding is useful if you do not plan to propagate changes to your isolated scope bindings back to the parent. However, it does not make this completely impossible.</source>
          <target state="translated">如果您不打算将对隔离的作用域绑定的更改传播回父绑定,那么单向绑定是有用的。然而,它并没有使这完全不可能。</target>
        </trans-unit>
        <trans-unit id="dccdcd12500ea529350f72fe2d3b19576485f9d7" translate="yes" xml:space="preserve">
          <source>Only GET and JSONP requests are cached.</source>
          <target state="translated">只有GET和JSONP请求会被缓存。</target>
        </trans-unit>
        <trans-unit id="cdbf524cafe4d97e9aa889d4e8172073d5ad8692" translate="yes" xml:space="preserve">
          <source>Only enumerable properties are taken into account. Non-enumerable properties (both on &lt;code&gt;source&lt;/code&gt; and on &lt;code&gt;destination&lt;/code&gt;) will be ignored.</source>
          <target state="translated">仅考虑可枚举的属性。不可枚举的属性（ &lt;code&gt;source&lt;/code&gt; 和 &lt;code&gt;destination&lt;/code&gt; 都将被忽略）。</target>
        </trans-unit>
        <trans-unit id="87ef77c843d94d8412ef52b8157422f49c4e5ce1" translate="yes" xml:space="preserve">
          <source>Only trusted origins that you have control over and make sure you understand the implications of doing so.</source>
          <target state="translated">只有你能控制的值得信赖的产地,并确保你明白这样做的意义。</target>
        </trans-unit>
        <trans-unit id="fd014ff097e63e654d665440447b5e12e4b2ada5" translate="yes" xml:space="preserve">
          <source>Only whitelist origins that you have control over and make sure you understand the implications of doing so.</source>
          <target state="translated">只列出你能控制的白名单起源,并确保你明白这样做的意义。</target>
        </trans-unit>
        <trans-unit id="a8bfc2e5f51edb5b85fb55866f0e43ef5e595160" translate="yes" xml:space="preserve">
          <source>Opening a regular URL in a legacy browser -&amp;gt; redirects to a hashbang URL</source>
          <target state="translated">在旧版浏览器中打开常规URL-&amp;gt;重定向到hashbang URL</target>
        </trans-unit>
        <trans-unit id="eac6c8960165a7f26749c618d7083ac4d241844c" translate="yes" xml:space="preserve">
          <source>Opening hashbang URL in a modern browser -&amp;gt; rewrites to a regular URL</source>
          <target state="translated">在现代浏览器中打开hashbang URL-&amp;gt;重写为常规URL</target>
        </trans-unit>
        <trans-unit id="4cb67181c995794bf3233189f17b34d6d6217d98" translate="yes" xml:space="preserve">
          <source>Optional arguments to be prebound to the &lt;code&gt;fn&lt;/code&gt; function call.</source>
          <target state="translated">预绑定到 &lt;code&gt;fn&lt;/code&gt; 函数调用的可选参数。</target>
        </trans-unit>
        <trans-unit id="ac0d0c08de325f31e275247f3679a58b231c7aae" translate="yes" xml:space="preserve">
          <source>Optional configuration function for the module. Same as &lt;a href=&quot;../type/angular.module#config.html&quot;&gt;Module#config()&lt;/a&gt;.</source>
          <target state="translated">模块的可选配置功能。与&lt;a href=&quot;../type/angular.module#config.html&quot;&gt;Module＃config（）相同&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b0e8d88ea45891039fc896a3cf76fcc8a6285b7f" translate="yes" xml:space="preserve">
          <source>Optional configuration object. See &lt;a href=&quot;%24http#%24http-arguments.html&quot;&gt;&lt;code&gt;$http()&lt;/code&gt; arguments&lt;/a&gt;.</source>
          <target state="translated">可选配置对象。参见&lt;a href=&quot;%24http#%24http-arguments.html&quot;&gt; &lt;code&gt;$http()&lt;/code&gt; 参数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ef8683e6e87ff851919c02dfa80a3465f8201585" translate="yes" xml:space="preserve">
          <source>Optional event type. If none is specified, the function tries to determine the right event type for the element, e.g. &lt;code&gt;change&lt;/code&gt; for &lt;code&gt;input[text]&lt;/code&gt;.</source>
          <target state="translated">可选事件类型。如果未指定，则该函数尝试确定正确的事件类型的元件，例如 &lt;code&gt;change&lt;/code&gt; 为 &lt;code&gt;input[text]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d9e2a88dac526935cb244eb3725881ffa83069f2" translate="yes" xml:space="preserve">
          <source>Optional information about the context in which the error was thrown.</source>
          <target state="translated">关于抛出错误的上下文的可选信息。</target>
        </trans-unit>
        <trans-unit id="1a8192981f2869d35df047f536371348437dfb99" translate="yes" xml:space="preserve">
          <source>Optional object. If preset then any argument names are read from this object first, before the &lt;code&gt;$injector&lt;/code&gt; is consulted.</source>
          <target state="translated">可选对象。如果是预设的，则在查询 &lt;code&gt;$injector&lt;/code&gt; 之前，首先从该对象读取任何参数名称。</target>
        </trans-unit>
        <trans-unit id="5308b40f28c97e7121b60297dbc6d959146a267f" translate="yes" xml:space="preserve">
          <source>Optional one or more arguments which will be passed onto the event listeners.</source>
          <target state="translated">可选的一个或多个参数,这些参数将被传递给事件监听器。</target>
        </trans-unit>
        <trans-unit id="ffb1a7ca3375dfcc6ea76b0ae3ce4b9bb97b4432" translate="yes" xml:space="preserve">
          <source>Optionally, a single hard-coded &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; element, with the value set to an empty string, can be nested into the &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; element. This element will then represent the &lt;code&gt;null&lt;/code&gt; or &quot;not selected&quot; option. See example below for demonstration.</source>
          <target state="translated">（可选）可以将单个硬编码的 &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; 元素（其值设置为空字符串）嵌套在 &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; 元素中。然后，此元素将表示 &lt;code&gt;null&lt;/code&gt; 或&amp;ldquo;未选择&amp;rdquo;选项。请参见下面的示例进行演示。</target>
        </trans-unit>
        <trans-unit id="be30a36044b515fd6383450db5f35c6cd47f0ba2" translate="yes" xml:space="preserve">
          <source>Optionally, you can also pass a &lt;code&gt;delay&lt;/code&gt; argument to only flush tasks that are scheduled to be executed within &lt;code&gt;delay&lt;/code&gt; milliseconds. Currently, &lt;code&gt;delay&lt;/code&gt; only applies to timeouts, since all other tasks have a delay of 0 (i.e. they are scheduled to be executed as soon as possible, but still asynchronously).</source>
          <target state="translated">（可选）您还可以将 &lt;code&gt;delay&lt;/code&gt; 参数传递给仅计划在 &lt;code&gt;delay&lt;/code&gt; 毫秒内执行的刷新任务。当前， &lt;code&gt;delay&lt;/code&gt; 仅适用于超时，因为所有其他任务的延迟均为0（即，它们被安排为尽快执行，但仍异步执行）。</target>
        </trans-unit>
        <trans-unit id="4b5f9957c039daa83cf25452707710c1e43b965d" translate="yes" xml:space="preserve">
          <source>Options object that specifies the cache behavior. Properties:</source>
          <target state="translated">指定缓存行为的选项对象。属性。</target>
        </trans-unit>
        <trans-unit id="0dfe73319c3612f8a3b2d0b40ebbd05b380be0ec" translate="yes" xml:space="preserve">
          <source>Options object. See &lt;a href=&quot;../provider/%24cookiesprovider#defaults.html&quot;&gt;$cookiesProvider.defaults&lt;/a&gt;</source>
          <target state="translated">选项对象。参见&lt;a href=&quot;../provider/%24cookiesprovider#defaults.html&quot;&gt;$ cookiesProvider.defaults&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b1a0580f34c8e279c5382e2d17c2d33fd81d807e" translate="yes" xml:space="preserve">
          <source>Or you can even overwrite the whole &lt;code&gt;actions&lt;/code&gt; list and specify your own:</source>
          <target state="translated">或者，您甚至可以覆盖整个 &lt;code&gt;actions&lt;/code&gt; 列表并指定自己的操作：</target>
        </trans-unit>
        <trans-unit id="53ea91d4f8d828842a74887526a654e8ed22c0de" translate="yes" xml:space="preserve">
          <source>Order of requests matters</source>
          <target state="translated">请求事项的顺序</target>
        </trans-unit>
        <trans-unit id="545aec36915e5edaf380fe6995274a74ca310fc5" translate="yes" xml:space="preserve">
          <source>Ordering a table with ngRepeat</source>
          <target state="translated">使用ngRepeat订购表格</target>
        </trans-unit>
        <trans-unit id="b328f238cd54c5675a77847bfa732f0014d578b3" translate="yes" xml:space="preserve">
          <source>Ordering the specified &lt;code&gt;collection&lt;/code&gt; happens in two phases:</source>
          <target state="translated">订购指定的 &lt;code&gt;collection&lt;/code&gt; 分为两个阶段：</target>
        </trans-unit>
        <trans-unit id="ab286f64bf8ad2bdaf9ba29734918078d2434ff7" translate="yes" xml:space="preserve">
          <source>Ordinarily, we would expect that &lt;code&gt;{{name}}&lt;/code&gt; would be &lt;code&gt;Jeff&lt;/code&gt;. However, we see in this example that the &lt;code&gt;{{name}}&lt;/code&gt; binding is still &lt;code&gt;Tobias&lt;/code&gt;.</source>
          <target state="translated">通常，我们希望 &lt;code&gt;{{name}}&lt;/code&gt; 是 &lt;code&gt;Jeff&lt;/code&gt; 。但是，在此示例中，我们看到 &lt;code&gt;{{name}}&lt;/code&gt; 绑定仍然是 &lt;code&gt;Tobias&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1167c4f1730b003f23191dfd48807c264f48a17b" translate="yes" xml:space="preserve">
          <source>Other Features</source>
          <target state="translated">其他特点</target>
        </trans-unit>
        <trans-unit id="456d2677e518e26ef0d24a4e5e0c50a00c1e8bbd" translate="yes" xml:space="preserve">
          <source>Other Languages</source>
          <target state="translated">其他语言</target>
        </trans-unit>
        <trans-unit id="020a1308bcbd2b8d869bb1b5c21560f23a1fa146" translate="yes" xml:space="preserve">
          <source>Other attributes may also not work as expected when they contain interpolation markup, and can be used with &lt;code&gt;ngAttr&lt;/code&gt; instead. The following is a list of known problematic attributes:</source>
          <target state="translated">当其他属性包含插值标记时，它们也可能无法按预期方式工作，而可以与 &lt;code&gt;ngAttr&lt;/code&gt; 一起使用。以下是已知问题属性的列表：</target>
        </trans-unit>
        <trans-unit id="e4dd7ab1c0e39f0f88a1797f64ef4a8003416e45" translate="yes" xml:space="preserve">
          <source>Otherwise whitespace around the delimiter is ignored when splitting (although it is respected when joining the list items back together) and whitespace around each list item is stripped before it is added to the model.</source>
          <target state="translated">否则,在分割时,会忽略定界符周围的空白(尽管在将列表项连接在一起时,会尊重空白),并且在将每个列表项添加到模型中之前,会删除其周围的空白。</target>
        </trans-unit>
        <trans-unit id="a0675534b64e196386b94e2804a59bd1bc23fa8e" translate="yes" xml:space="preserve">
          <source>Otherwise, return:</source>
          <target state="translated">否则,返回。</target>
        </trans-unit>
        <trans-unit id="072eb9bf03eeb09cbe67d59dcba2963501dc97e5" translate="yes" xml:space="preserve">
          <source>Our &lt;code&gt;myCustomer&lt;/code&gt; directive above is great, but it has a fatal flaw. We can only use it once within a given scope.</source>
          <target state="translated">我们 &lt;code&gt;myCustomer&lt;/code&gt; 上述指令是伟大的，但它有一个致命的缺陷。在给定范围内，我们只能使用一次。</target>
        </trans-unit>
        <trans-unit id="558209072aafaacde0c7cdb5a66cdfe66c0d2c5d" translate="yes" xml:space="preserve">
          <source>Outputs are realized with &lt;code&gt;&amp;amp;&lt;/code&gt; bindings, which function as callbacks to component events.</source>
          <target state="translated">输出通过 &lt;code&gt;&amp;amp;&lt;/code&gt; 绑定实现，该绑定充当组件事件的回调。</target>
        </trans-unit>
        <trans-unit id="22ba9ea1494be6e8782c0e21dbbf76a0b41e8a62" translate="yes" xml:space="preserve">
          <source>Override the current model options settings programmatically.</source>
          <target state="translated">以编程方式覆盖当前模型选项设置。</target>
        </trans-unit>
        <trans-unit id="ef041aeb92c07c1a85fa7fdac09f3f7219358b54" translate="yes" xml:space="preserve">
          <source>Override the property name to use when attaching the controller to the scope.</source>
          <target state="translated">重写附加控制器到作用域时要使用的属性名称。</target>
        </trans-unit>
        <trans-unit id="22b14e1048bf2a3d5b605204778ea44f9663ce36" translate="yes" xml:space="preserve">
          <source>Overriding .ng-hide</source>
          <target state="translated">覆盖.ng-hide</target>
        </trans-unit>
        <trans-unit id="9a7fbfe01d220ff7f0962d309017a2ffc384f7fe" translate="yes" xml:space="preserve">
          <source>Overriding immediate updates</source>
          <target state="translated">覆盖即时更新</target>
        </trans-unit>
        <trans-unit id="fa09aea495028381f0827010d76af2aac843fe48" translate="yes" xml:space="preserve">
          <source>Overriding the Default Transformations Per Request</source>
          <target state="translated">覆盖每次请求的默认变换</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Overview</target>
        </trans-unit>
        <trans-unit id="b4524ad64470cfefa0e6ef5ccaabb2ecf125384c" translate="yes" xml:space="preserve">
          <source>Page reload navigation</source>
          <target state="translated">页面重载导航</target>
        </trans-unit>
        <trans-unit id="0f332eeefd007bb0043ccb46738196508c6a602b" translate="yes" xml:space="preserve">
          <source>Param</source>
          <target state="translated">Param</target>
        </trans-unit>
        <trans-unit id="a975eea30db9fa05003e3b5097688bd49ec7e01b" translate="yes" xml:space="preserve">
          <source>Parameters</source>
          <target state="translated">Parameters</target>
        </trans-unit>
        <trans-unit id="6cf3b6abb1b4f5ccecfcf57f0c3af07ef7fb83d1" translate="yes" xml:space="preserve">
          <source>Parse all your application element classes.</source>
          <target state="translated">解析你所有的应用元素类。</target>
        </trans-unit>
        <trans-unit id="8ca73572c8320134a2008b43c3b43eeb683a50e5" translate="yes" xml:space="preserve">
          <source>Parse all your application html comments.</source>
          <target state="translated">解析你所有的应用html注释。</target>
        </trans-unit>
        <trans-unit id="3f4af19a0d34ae188e13ee7ba944ba662612d7e9" translate="yes" xml:space="preserve">
          <source>Parsers are used to sanitize / convert the &lt;a href=&quot;ngmodel.ngmodelcontroller#%24viewValue.html&quot;&gt;&lt;code&gt;$viewValue&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">解析器用于清理/转换&lt;a href=&quot;ngmodel.ngmodelcontroller#%24viewValue.html&quot;&gt; &lt;code&gt;$viewValue&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d7cd56f2a2a3f47830760edfb89946eb7b9e2cd1" translate="yes" xml:space="preserve">
          <source>Pass</source>
          <target state="translated">Pass</target>
        </trans-unit>
        <trans-unit id="3724e4e357a62c0e307b4b1ff0955749ca8faa98" translate="yes" xml:space="preserve">
          <source>Passing an array (&lt;code&gt;[...]&lt;/code&gt;) is equivalent to passing &lt;code&gt;{htmlElements: [...]}&lt;/code&gt;.</source>
          <target state="translated">传递数组（ &lt;code&gt;[...]&lt;/code&gt; ）等效于传递 &lt;code&gt;{htmlElements: [...]}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f7ca9f03a097ecb064033e0b20fd57b688e73b06" translate="yes" xml:space="preserve">
          <source>Passing one argument retrieves an existing &lt;a href=&quot;../type/angular.module&quot;&gt;&lt;code&gt;angular.Module&lt;/code&gt;&lt;/a&gt;, whereas passing more than one argument creates a new &lt;a href=&quot;../type/angular.module&quot;&gt;&lt;code&gt;angular.Module&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">传递一个参数将检索现有的&lt;a href=&quot;../type/angular.module&quot;&gt; &lt;code&gt;angular.Module&lt;/code&gt; &lt;/a&gt;，而传递多个参数将创建一个新的&lt;a href=&quot;../type/angular.module&quot;&gt; &lt;code&gt;angular.Module&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5ee5be4397673c7b0cfcf05f36fb561ca4a2f795" translate="yes" xml:space="preserve">
          <source>Patch the $delegate</source>
          <target state="translated">给$delegate打补丁</target>
        </trans-unit>
        <trans-unit id="c24b1eabafb92c695a49765eb3856c47bb2e3c5e" translate="yes" xml:space="preserve">
          <source>Pending tasks scheduled via &lt;a href=&quot;../../ng/type/%24rootscope.scope#%24applyAsync.html&quot;&gt;$applyAsync&lt;/a&gt;.</source>
          <target state="translated">通过&lt;a href=&quot;../../ng/type/%24rootscope.scope#%24applyAsync.html&quot;&gt;$ applyAsync&lt;/a&gt;调度的待处理任务。</target>
        </trans-unit>
        <trans-unit id="949f1fe22a6e90a316f8a5355573c25a0073893c" translate="yes" xml:space="preserve">
          <source>Pending tasks scheduled via &lt;a href=&quot;../../ng/type/%24rootscope.scope#%24evalAsync.html&quot;&gt;$evalAsync&lt;/a&gt;. These include tasks scheduled via &lt;code&gt;$evalAsync()&lt;/code&gt; indirectly (such as &lt;a href=&quot;../../ng/service/%24q&quot;&gt;&lt;code&gt;$q&lt;/code&gt;&lt;/a&gt; promises).</source>
          <target state="translated">通过&lt;a href=&quot;../../ng/type/%24rootscope.scope#%24evalAsync.html&quot;&gt;$ evalAsync&lt;/a&gt;调度的待处理任务。这些包括通过 &lt;code&gt;$evalAsync()&lt;/code&gt; 间接调度的任务（例如&lt;a href=&quot;../../ng/service/%24q&quot;&gt; &lt;code&gt;$q&lt;/code&gt; &lt;/a&gt; promises）。</target>
        </trans-unit>
        <trans-unit id="37a92dc5c98d97bbf900c4f6991b8aac335f50fc" translate="yes" xml:space="preserve">
          <source>Pending timeouts (via &lt;a href=&quot;%24timeout&quot;&gt;&lt;code&gt;$timeout&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">等待超时（通过&lt;a href=&quot;%24timeout&quot;&gt; &lt;code&gt;$timeout&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="c7c922ddec77e6492fd9602470ecd3c278ff489f" translate="yes" xml:space="preserve">
          <source>Performs an inline animation on the element which applies the provided to and from CSS styles to the element. If any detected CSS transition, keyframe or JavaScript matches the provided className value, then the animation will take on the provided styles. For example, if a transition animation is set for the given className, then the provided &lt;code&gt;from&lt;/code&gt; and &lt;code&gt;to&lt;/code&gt; styles will be applied alongside the given transition. If the CSS style provided in &lt;code&gt;from&lt;/code&gt; does not have a corresponding style in &lt;code&gt;to&lt;/code&gt;, the style in &lt;code&gt;from&lt;/code&gt; is applied immediately, and no animation is run. If a JavaScript animation is detected then the provided styles will be given in as function parameters into the &lt;code&gt;animate&lt;/code&gt; method (or as part of the &lt;code&gt;options&lt;/code&gt; parameter):</source>
          <target state="translated">在元素上执行内联动画，将提供的CSS样式与元素之间的CSS样式应用于元素。如果检测到任何CSS过渡，关键帧或JavaScript匹配提供的className值，则动画将采用提供的样式。例如，如果为给定的className设置了过渡动画，则提供的 &lt;code&gt;from&lt;/code&gt; 和 &lt;code&gt;to&lt;/code&gt; 样式将与给定的过渡一起应用。如果 &lt;code&gt;from&lt;/code&gt; 中提供的CSS样式在 &lt;code&gt;to&lt;/code&gt; 中没有对应的样式，则 &lt;code&gt;from&lt;/code&gt; 中的样式将立即应用，并且不运行动画。如果检测到JavaScript动画，则所提供的样式将作为函数参数提供给 &lt;code&gt;animate&lt;/code&gt; 方法（或作为 &lt;code&gt;options&lt;/code&gt; 参数的一部分）：</target>
        </trans-unit>
        <trans-unit id="0fe8ef331e3e18dd6d6ee2e94ecd618e64625c03" translate="yes" xml:space="preserve">
          <source>Performs both the addition and removal of a CSS classes on an element and (during the process) triggers an animation surrounding the class addition/removal. Much like &lt;code&gt;$animate.addClass&lt;/code&gt; and &lt;code&gt;$animate.removeClass&lt;/code&gt;, &lt;code&gt;setClass&lt;/code&gt; will only evaluate the classes being added/removed once a digest has passed. Note that class-based animations are treated differently compared to structural animations (like enter, move and leave) since the CSS classes may be added/removed at different points depending if CSS or JavaScript animations are used.</source>
          <target state="translated">在元素上执行CSS类的添加和删除，并且（在此过程中）触发围绕类添加/删除的动画。就像 &lt;code&gt;$animate.addClass&lt;/code&gt; 和 &lt;code&gt;$animate.removeClass&lt;/code&gt; ， &lt;code&gt;setClass&lt;/code&gt; 将仅在摘要通过后评估要添加/删除的类。请注意，与基于结构的动画（例如，进入，移动和离开）相比，基于类的动画的处理方式有所不同，因为可以根据使用CSS还是JavaScript动画在不同的位置添加/删除CSS类。</target>
        </trans-unit>
        <trans-unit id="fde22c44087196711ccbb71078d1ff22cb70d919" translate="yes" xml:space="preserve">
          <source>Periodic tasks scheduled via &lt;a href=&quot;%24interval&quot;&gt;&lt;code&gt;$interval&lt;/code&gt;&lt;/a&gt; use a different queue and are not flushed by &lt;code&gt;$flushPendingTasks()&lt;/code&gt;. Use &lt;a href=&quot;%24interval#flush.html&quot;&gt;$interval.flush(millis)&lt;/a&gt; instead.</source>
          <target state="translated">通过&lt;a href=&quot;%24interval&quot;&gt; &lt;code&gt;$interval&lt;/code&gt; &lt;/a&gt;调度的定期任务使用其他队列，并且不会被 &lt;code&gt;$flushPendingTasks()&lt;/code&gt; 刷新。使用&lt;a href=&quot;%24interval#flush.html&quot;&gt;$ interval.flush（millis）&lt;/a&gt;代替。</target>
        </trans-unit>
        <trans-unit id="ccb639561dbe9976233905fa4c560e41d0cddf85" translate="yes" xml:space="preserve">
          <source>Periodic tasks scheduled via &lt;a href=&quot;%24interval&quot;&gt;&lt;code&gt;$interval&lt;/code&gt;&lt;/a&gt; use a different queue and are not taken into account by &lt;code&gt;$verifyNoPendingTasks()&lt;/code&gt;. There is currently no way to verify that there are no pending &lt;a href=&quot;%24interval&quot;&gt;&lt;code&gt;$interval&lt;/code&gt;&lt;/a&gt; tasks.</source>
          <target state="translated">通过&lt;a href=&quot;%24interval&quot;&gt; &lt;code&gt;$interval&lt;/code&gt; &lt;/a&gt;调度的定期任务使用不同的队列，并且 &lt;code&gt;$verifyNoPendingTasks()&lt;/code&gt; 不会考虑这些任务。当前无法验证没有待处理的&lt;a href=&quot;%24interval&quot;&gt; &lt;code&gt;$interval&lt;/code&gt; &lt;/a&gt;任务。</target>
        </trans-unit>
        <trans-unit id="9175845018286100e8c4dd426601703543b596bf" translate="yes" xml:space="preserve">
          <source>Place &lt;code&gt;ng-app&lt;/code&gt; to the root of your application, typically on the &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; tag if you want AngularJS to auto-bootstrap your application.</source>
          <target state="translated">如果您希望AngularJS自动引导您的应用程序，请将 &lt;code&gt;ng-app&lt;/code&gt; 放置在应用程序的根目录中，通常放在 &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; 标记上。</target>
        </trans-unit>
        <trans-unit id="b78ac8ca34cd41564ccb9b7e0ba05721f3cb269f" translate="yes" xml:space="preserve">
          <source>Place the &lt;code&gt;script&lt;/code&gt; tag at the bottom of the page. Placing script tags at the end of the page improves app load time because the HTML loading is not blocked by loading of the &lt;code&gt;angular.js&lt;/code&gt; script. You can get the latest bits from &lt;a href=&quot;http://code.angularjs.org&quot;&gt;http://code.angularjs.org&lt;/a&gt;. Please don't link your production code to this URL, as it will expose a security hole on your site. For experimental development linking to our site is fine.</source>
          <target state="translated">将 &lt;code&gt;script&lt;/code&gt; 标签放在页面底部。在页面末尾放置脚本标签可以缩短应用程序的加载时间，因为HTML的加载不会被 &lt;code&gt;angular.js&lt;/code&gt; 脚本的加载所阻止。您可以从&lt;a href=&quot;http://code.angularjs.org&quot;&gt;http://code.angularjs.org&lt;/a&gt;获得最新信息。请不要将您的生产代码链接到此URL，因为它会在您的网站上暴露出安全漏洞。对于实验开发，可以链接到我们的网站。</target>
        </trans-unit>
        <trans-unit id="d41f5191f36242fba26edcab7cdae2ac55f00a60" translate="yes" xml:space="preserve">
          <source>Placeholder comments for structural directives will contain information about what directive and binding caused the placeholder. E.g. &lt;code&gt;&amp;lt;!-- ngIf: shouldShow() --&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">结构指令的占位符注释将包含有关导致占位符的指令和绑定的信息。例如 &lt;code&gt;&amp;lt;!-- ngIf: shouldShow() --&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d6d23dce11abfc04d22b576b279be0582a4674d8" translate="yes" xml:space="preserve">
          <source>Placeholder comments will contain information about what directive and binding caused the placeholder. E.g. &lt;code&gt;&amp;lt;!-- ngIf: shouldShow() --&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">占位符注释将包含有关导致占位符的指令和绑定的信息。例如 &lt;code&gt;&amp;lt;!-- ngIf: shouldShow() --&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ba144cb01be20139ef167effe8a39441ca2909ab" translate="yes" xml:space="preserve">
          <source>Please keep in mind the points below about AngularJS's expression language.</source>
          <target state="translated">关于AngularJS的表达式语言,请牢记以下几点。</target>
        </trans-unit>
        <trans-unit id="936d7dabb804fdafdee688afad175b795e535e73" translate="yes" xml:space="preserve">
          <source>Please note that &lt;code&gt;as [variable name]&lt;/code&gt; is not an operator but rather a part of ngRepeat micro-syntax so it can be used only after all filters (and not as operator, inside an expression).</source>
          <target state="translated">Please note that &lt;code&gt;as [variable name]&lt;/code&gt; is not an operator but rather a part of ngRepeat micro-syntax so it can be used only after all filters (and not as operator, inside an expression).</target>
        </trans-unit>
        <trans-unit id="8fb457fc228fdb314328599f4f48cd78fc2cb244" translate="yes" xml:space="preserve">
          <source>Please note that `as [variable name] is not an operator but rather a part of ngRepeat micro-syntax so it can be used only after all filters (and not as operator, inside an expression).</source>
          <target state="translated">请注意,&quot;as [变量名]&quot;不是运算符,而是ngRepeat微语法的一部分,因此它只能在所有过滤器之后使用(而不是作为运算符,在表达式中使用)。</target>
        </trans-unit>
        <trans-unit id="5864ee00ebaaffa52efb0e40ba7741e0c1980903" translate="yes" xml:space="preserve">
          <source>Please note that if $http is used then it is important that the server returns a success HTTP response code in order to fulfill the validation and a status level of &lt;code&gt;4xx&lt;/code&gt; in order to reject the validation.</source>
          <target state="translated">请注意，如果使用$ http，则服务器返回成功的HTTP响应代码以完成验证，并返回 &lt;code&gt;4xx&lt;/code&gt; 状态级别以拒绝验证非常重要。</target>
        </trans-unit>
        <trans-unit id="402875a9ef4cbfb33f456a217bbc17d01b959a8a" translate="yes" xml:space="preserve">
          <source>Please note that if these are intended to reach a translator and be translated, it is recommended that the messages appear as a whole and not be split up.</source>
          <target state="translated">请注意,如果这些信息是要送达译员并进行翻译的,建议将这些信息作为一个整体出现,不要分割开来。</target>
        </trans-unit>
        <trans-unit id="634d576f91a735237019985afbde7d8d151fc66d" translate="yes" xml:space="preserve">
          <source>Please note that whitespace (including newline) is generally insignificant except as part of the actual message text that occurs in curly braces. Whitespace is generally used to aid readability.</source>
          <target state="translated">请注意,除了作为实际信息文本的一部分出现在大括号中,空白(包括换行)一般不重要。空格一般是用来帮助阅读的。</target>
        </trans-unit>
        <trans-unit id="4ef8776654a5598bd9bf8265ea86a4a13f90f500" translate="yes" xml:space="preserve">
          <source>Plural</source>
          <target state="translated">Plural</target>
        </trans-unit>
        <trans-unit id="be452558ab8a9d90c33c6ce5d76a1fb64db222cf" translate="yes" xml:space="preserve">
          <source>Plural Syntax</source>
          <target state="translated">复数语法</target>
        </trans-unit>
        <trans-unit id="677291ce1832a3291ebfefdce4206c36b5695d5c" translate="yes" xml:space="preserve">
          <source>Plural and Gender together</source>
          <target state="translated">复数和性别一起</target>
        </trans-unit>
        <trans-unit id="30ea53b5f87201afcd442579a963613a5bfcf069" translate="yes" xml:space="preserve">
          <source>Plural categories and explicit number rules</source>
          <target state="translated">复数类别和明确的数字规则</target>
        </trans-unit>
        <trans-unit id="179566a6a07c07bfd96129c294fa82e9392f11c5" translate="yes" xml:space="preserve">
          <source>Plural category matches are single words corresponding to the &lt;a href=&quot;http://cldr.unicode.org/index/cldr-spec/plural-rules&quot;&gt;plural categories&lt;/a&gt; of the CLDR plural category spec. These categories vary by locale. The &quot;en&quot; (English) locale, for example, defines just &quot;one&quot; and &quot;other&quot; while the &quot;ga&quot; (Irish) locale defines &quot;one&quot;, &quot;two&quot;, &quot;few&quot;, &quot;many&quot; and &quot;other&quot;. Typically, you would just write the categories for your language. During translation, the translators will add or remove more categories depending on the target locale.</source>
          <target state="translated">多个类别匹配是与CLDR多个类别规范的&lt;a href=&quot;http://cldr.unicode.org/index/cldr-spec/plural-rules&quot;&gt;多个类别&lt;/a&gt;相对应的单个单词。这些类别因地区而异。例如，&amp;ldquo; en&amp;rdquo;（英语）语言环境仅定义&amp;ldquo;一个&amp;rdquo;和&amp;ldquo;其他&amp;rdquo;，而&amp;ldquo; ga&amp;rdquo;（爱尔兰语）语言环境则定义&amp;ldquo;一个&amp;rdquo;，&amp;ldquo;两个&amp;rdquo;，&amp;ldquo;很少&amp;rdquo;，&amp;ldquo;许多&amp;rdquo;和&amp;ldquo;其他&amp;rdquo; 。通常，您只需要为您的语言写类别即可。在翻译过程中，翻译人员将根据目标语言环境添加或删除更多类别。</target>
        </trans-unit>
        <trans-unit id="cd288f230e5e528cd142ef52cbb884894ff3ac60" translate="yes" xml:space="preserve">
          <source>Plural syntax with optional offset</source>
          <target state="translated">复数语法,可选择偏移量</target>
        </trans-unit>
        <trans-unit id="af1d180211f1fc8c7b2d6c46daa5db30af6e55bc" translate="yes" xml:space="preserve">
          <source>Post-linking function</source>
          <target state="translated">后连接功能</target>
        </trans-unit>
        <trans-unit id="5c90cf7f41a8da16012e1f3fcd7e3e25047730d5" translate="yes" xml:space="preserve">
          <source>Pre-linking function</source>
          <target state="translated">预连接功能</target>
        </trans-unit>
        <trans-unit id="9ec3d53b91c1e1f2ab71a67e94e59a4e5b149247" translate="yes" xml:space="preserve">
          <source>Prefix for hash part (containing path and search)</source>
          <target state="translated">哈希部分的前缀(包含路径和搜索)</target>
        </trans-unit>
        <trans-unit id="a6966604f1f1b212381bad520d36ae4193da4261" translate="yes" xml:space="preserve">
          <source>Prefix used for Hashbang URLs (used in Hashbang mode or in legacy browsers in HTML5 mode).</source>
          <target state="translated">用于Hashbang URL的前缀(在Hashbang模式下或在HTML5模式下的传统浏览器中使用)。</target>
        </trans-unit>
        <trans-unit id="60d63afbc58e76c10cdc1e0426f8ae18cd1a3642" translate="yes" xml:space="preserve">
          <source>Pressing an '&lt;code&gt;X&lt;/code&gt;' key causes the browser to emit a &lt;code&gt;keydown&lt;/code&gt; event on the input control.</source>
          <target state="translated">按下&amp;ldquo; &lt;code&gt;X&lt;/code&gt; &amp;rdquo;键会使浏览器在输入控件上发出一个 &lt;code&gt;keydown&lt;/code&gt; 事件。</target>
        </trans-unit>
        <trans-unit id="af8404ddcb19d0ee7bb4e3ada0c8ab29709d3381" translate="yes" xml:space="preserve">
          <source>Preventing collisions with existing animations and third-party libraries</source>
          <target state="translated">防止与现有的动画和第三方库发生碰撞。</target>
        </trans-unit>
        <trans-unit id="db2be9312367b0f1226840803e164f31490ec678" translate="yes" xml:space="preserve">
          <source>Preventing flicker before an animation starts</source>
          <target state="translated">防止动画开始前的闪烁。</target>
        </trans-unit>
        <trans-unit id="f11dc6c496b3bea9136c75e36fb573c80908b9bf" translate="yes" xml:space="preserve">
          <source>Previous route information, or undefined if current is first route entered.</source>
          <target state="translated">以前的途径信息,如果当前途径是第一次输入,则未定义。</target>
        </trans-unit>
        <trans-unit id="c853815d467b47e8ed78315578dd45ccb8c7d2ec" translate="yes" xml:space="preserve">
          <source>Previous route information.</source>
          <target state="translated">以前的路线信息。</target>
        </trans-unit>
        <trans-unit id="6c2d988f12e64b7e45565826d807a919907ae496" translate="yes" xml:space="preserve">
          <source>Previously compiled HTML will not be affected by newly loaded directives, filters and components.</source>
          <target state="translated">以前编译的HTML不会受到新加载的指令、过滤器和组件的影响。</target>
        </trans-unit>
        <trans-unit id="cd339205264cf6840eb650823d064e5a8b67fcfd" translate="yes" xml:space="preserve">
          <source>Previously, we used the &lt;code&gt;link&lt;/code&gt; function to create a directive that manipulated its DOM elements. Building upon that example, let's make a directive that reacts to events on its elements.</source>
          <target state="translated">以前，我们使用 &lt;code&gt;link&lt;/code&gt; 函数来创建一个操作其DOM元素的指令。在该示例的基础上，让我们制定一个对元素上的事件做出反应的指令。</target>
        </trans-unit>
        <trans-unit id="c9e51fc63f08ba85c648b29ea8ba3f3e3bb81df0" translate="yes" xml:space="preserve">
          <source>Problems arise when the application is bootstrapped on a different element, and animations are attempted on elements that are outside the application tree, e.g. when libraries append popup or modal elements to the body tag.</source>
          <target state="translated">当应用程序在不同的元素上进行引导,并且在应用程序树之外的元素上尝试动画时,就会出现问题,例如,当库将弹出式或模态元素附加到body标签时。</target>
        </trans-unit>
        <trans-unit id="4fb08e5643a533ad7c05b134e9e747b584dc75f7" translate="yes" xml:space="preserve">
          <source>Process the digest loop as normal</source>
          <target state="translated">像平常一样处理消化循环</target>
        </trans-unit>
        <trans-unit id="3b0fe78c753fdde32ba8bad6bdf5db38803ba21b" translate="yes" xml:space="preserve">
          <source>Processes all of the &lt;a href=&quot;%24rootscope.scope#%24watch.html&quot;&gt;watchers&lt;/a&gt; of the current scope and its children. Because a &lt;a href=&quot;%24rootscope.scope#%24watch.html&quot;&gt;watcher&lt;/a&gt;'s listener can change the model, the &lt;code&gt;$digest()&lt;/code&gt; keeps calling the &lt;a href=&quot;%24rootscope.scope#%24watch.html&quot;&gt;watchers&lt;/a&gt; until no more listeners are firing. This means that it is possible to get into an infinite loop. This function will throw &lt;code&gt;'Maximum iteration limit exceeded.'&lt;/code&gt; if the number of iterations exceeds 10.</source>
          <target state="translated">处理当前范围及其子级的所有&lt;a href=&quot;%24rootscope.scope#%24watch.html&quot;&gt;观察者&lt;/a&gt;。因为&lt;a href=&quot;%24rootscope.scope#%24watch.html&quot;&gt;观察者&lt;/a&gt;的监听者可以更改模型，所以 &lt;code&gt;$digest()&lt;/code&gt; 会继续调用&lt;a href=&quot;%24rootscope.scope#%24watch.html&quot;&gt;观察者，&lt;/a&gt;直到没有更多的监听者触发为止。这意味着有可能陷入无限循环。该函数将抛出 &lt;code&gt;'Maximum iteration limit exceeded.'&lt;/code&gt; 如果迭代次数超过10。</target>
        </trans-unit>
        <trans-unit id="75965b4edaaa41b0b73d45b63157b2b38036c091" translate="yes" xml:space="preserve">
          <source>Professional AngularJS</source>
          <target state="translated">专业的AngularJS</target>
        </trans-unit>
        <trans-unit id="80a2b88f2f6d0fed4bc5bba789ac7b216657a3a4" translate="yes" xml:space="preserve">
          <source>Programmatically changing options</source>
          <target state="translated">程序化地改变选项</target>
        </trans-unit>
        <trans-unit id="3956d65e997700fbbe6962701c6c46976d9eae6b" translate="yes" xml:space="preserve">
          <source>Promise returned by the &lt;code&gt;$timeout&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;$timeout&lt;/code&gt; 函数返回的承诺。</target>
        </trans-unit>
        <trans-unit id="8a59aafa09d6e49c77e62ffcdc6d53d10993c4e6" translate="yes" xml:space="preserve">
          <source>Promise that will be resolved when the timeout is reached. The promise will be resolved with the return value of the &lt;code&gt;fn&lt;/code&gt; function.</source>
          <target state="translated">达到超时时将解决的承诺。承诺将通过 &lt;code&gt;fn&lt;/code&gt; 函数的返回值来解决。</target>
        </trans-unit>
        <trans-unit id="bc6c88db2f0703a9e2461a4a8060ccf1cb881998" translate="yes" xml:space="preserve">
          <source>Properties</source>
          <target state="translated">Properties</target>
        </trans-unit>
        <trans-unit id="bc9c3590c4b80616037b44fc342b9db9dab484bc" translate="yes" xml:space="preserve">
          <source>Properties to add to the controller before invoking the constructor. This is used to simulate the &lt;code&gt;bindToController&lt;/code&gt; feature and simplify certain kinds of tests.</source>
          <target state="translated">在调用构造函数之前要添加到控制器的属性。这用于模拟 &lt;code&gt;bindToController&lt;/code&gt; 功能并简化某些类型的测试。</target>
        </trans-unit>
        <trans-unit id="f8bd5483ecc0eeaa299f08dfff7f347a4fe2fec5" translate="yes" xml:space="preserve">
          <source>Properties to add to the controller instance. This is used to simulate the &lt;code&gt;bindToController&lt;/code&gt; feature and simplify certain kinds of tests.</source>
          <target state="translated">要添加到控制器实例的属性。这用于模拟 &lt;code&gt;bindToController&lt;/code&gt; 功能并简化某些类型的测试。</target>
        </trans-unit>
        <trans-unit id="c0ec888619fe8d4c92ba83e3a1d78dab13efeb93" translate="yes" xml:space="preserve">
          <source>Property name of the form under which the control is published.</source>
          <target state="translated">发布控件的表格的属性名称。</target>
        </trans-unit>
        <trans-unit id="1e8b2a7060963cf04221774fa7b7b5a02b0e287b" translate="yes" xml:space="preserve">
          <source>Protection from JSON Hijacking is provided if the server prefixes all JSON requests with following string &lt;code&gt;&quot;)]}',\n&quot;&lt;/code&gt;. AngularJS will automatically strip the prefix before processing it as JSON. For more information please visit &lt;a href=&quot;../api/ng/service/%24http#json-vulnerability-protection.html&quot;&gt;JSON Hijacking Protection&lt;/a&gt;.</source>
          <target state="translated">如果服务器使用以下字符串 &lt;code&gt;&quot;)]}',\n&quot;&lt;/code&gt; 所有JSON请求的前缀，则可以防止JSON劫持。AngularJS在将其处理为JSON之前会自动剥离该前缀。有关更多信息，请访问&lt;a href=&quot;../api/ng/service/%24http#json-vulnerability-protection.html&quot;&gt;JSON劫持保护&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f9390e0ef5f71d138bc596eddbe51b8e38d4521a" translate="yes" xml:space="preserve">
          <source>Protection from XSRF is provided by using the double-submit cookie defense pattern. For more information please visit &lt;a href=&quot;../api/ng/service/%24http#cross-site-request-forgery-xsrf-protection.html&quot;&gt;XSRF protection&lt;/a&gt;.</source>
          <target state="translated">通过使用两次提交的cookie防御模式，可以防止XSRF。有关更多信息，请访问&lt;a href=&quot;../api/ng/service/%24http#cross-site-request-forgery-xsrf-protection.html&quot;&gt;XSRF保护&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="90f86c4a0449e7e5adb2fe6a2e9e1a00e1f16c40" translate="yes" xml:space="preserve">
          <source>Protractor does not work out-of-the-box with apps that bootstrap manually using &lt;code&gt;angular.bootstrap&lt;/code&gt;. You must use the &lt;code&gt;ng-app&lt;/code&gt; directive.</source>
          <target state="translated">对于使用 &lt;code&gt;angular.bootstrap&lt;/code&gt; 手动引导的应用，Protractor不能立即使用。您必须使用 &lt;code&gt;ng-app&lt;/code&gt; 指令。</target>
        </trans-unit>
        <trans-unit id="cb5d793ecb6593e91414a3b5b89cbf50a0df7252" translate="yes" xml:space="preserve">
          <source>Protractor is a &lt;a href=&quot;http://nodejs.org&quot;&gt;Node.js&lt;/a&gt; program, and runs end-to-end tests that are also written in JavaScript and run with node. Protractor uses &lt;a href=&quot;https://code.google.com/p/selenium/wiki/GettingStarted&quot;&gt;WebDriver&lt;/a&gt; to control browsers and simulate user actions.</source>
          <target state="translated">Protractor是一个&lt;a href=&quot;http://nodejs.org&quot;&gt;Node.js&lt;/a&gt;程序，它运行端到端测试，这些测试也用JavaScript编写并与node一起运行。量角器使用&lt;a href=&quot;https://code.google.com/p/selenium/wiki/GettingStarted&quot;&gt;WebDriver&lt;/a&gt;来控制浏览器并模拟用户操作。</target>
        </trans-unit>
        <trans-unit id="bb3f0ccf64c0877d614e1a06bb00e1452bd032c9" translate="yes" xml:space="preserve">
          <source>Protractor uses &lt;a href=&quot;http://jasmine.github.io/1.3/introduction.html&quot;&gt;Jasmine&lt;/a&gt; for its test syntax. As in unit testing, a test file is comprised of one or more &lt;code&gt;it&lt;/code&gt; blocks that describe the requirements of your application. &lt;code&gt;it&lt;/code&gt; blocks are made of &lt;strong&gt;commands&lt;/strong&gt; and &lt;strong&gt;expectations&lt;/strong&gt;. Commands tell Protractor to do something with the application such as navigate to a page or click on a button. Expectations tell Protractor to assert something about the application's state, such as the value of a field or the current URL.</source>
          <target state="translated">量角器将&lt;a href=&quot;http://jasmine.github.io/1.3/introduction.html&quot;&gt;Jasmine&lt;/a&gt;用作其测试语法。由于在单元测试中，测试文件是由一个或多个 &lt;code&gt;it&lt;/code&gt; 描述应用程序的需求块。 &lt;code&gt;it&lt;/code&gt; 由&lt;strong&gt;命令&lt;/strong&gt;和&lt;strong&gt;期望组成&lt;/strong&gt;。命令告诉量角器对应用程序执行某些操作，例如导航到页面或单击按钮。期望值告诉量角器断言有关应用程序状态的某些信息，例如字段的值或当前URL。</target>
        </trans-unit>
        <trans-unit id="7ceee3f3615a2bbe4ce0ac5a269a311e4821daf4" translate="yes" xml:space="preserve">
          <source>Provider</source>
          <target state="translated">Provider</target>
        </trans-unit>
        <trans-unit id="d1ee5ed53bb0014f222cf9a775404d40f04a276f" translate="yes" xml:space="preserve">
          <source>Provider Recipe</source>
          <target state="translated">供应商配方</target>
        </trans-unit>
        <trans-unit id="faeb91f343caefcfbfb0f7ef0ebef566e9f808d2" translate="yes" xml:space="preserve">
          <source>Provider components in ng</source>
          <target state="translated">提供者组件在ng</target>
        </trans-unit>
        <trans-unit id="aac6643460d97ee9f664d62a35a270349841cf75" translate="yes" xml:space="preserve">
          <source>Provider components in ngAria</source>
          <target state="translated">ngAria中的提供者组件</target>
        </trans-unit>
        <trans-unit id="3697f23641b772bbaabfc5f9418598d9a7d11a6f" translate="yes" xml:space="preserve">
          <source>Provider components in ngCookies</source>
          <target state="translated">ngCookies中的提供者组件</target>
        </trans-unit>
        <trans-unit id="607b375320386821b2b91b0abb605d476671a991" translate="yes" xml:space="preserve">
          <source>Provider components in ngMock</source>
          <target state="translated">ngMock中的提供者组件</target>
        </trans-unit>
        <trans-unit id="27f092cf1e72b65217dc348f8fb9eef609ef0f86" translate="yes" xml:space="preserve">
          <source>Provider components in ngResource</source>
          <target state="translated">ngResource中的提供者组件</target>
        </trans-unit>
        <trans-unit id="82fa91bef1fcd6b27dcb61546d819b59f500cbf9" translate="yes" xml:space="preserve">
          <source>Provider components in ngRoute</source>
          <target state="translated">ngRoute中的提供者组件</target>
        </trans-unit>
        <trans-unit id="64e454af2188dee8d60382135ae30ceba7b9fb7b" translate="yes" xml:space="preserve">
          <source>Provider components in ngSanitize</source>
          <target state="translated">ngSanitize中的提供者组件</target>
        </trans-unit>
        <trans-unit id="0b7f95fe00b27ad60f556fe51d59a14ae33eea20" translate="yes" xml:space="preserve">
          <source>Provider for the $rootScope service.</source>
          <target state="translated">$rootScope 服务的提供者。</target>
        </trans-unit>
        <trans-unit id="53d2419e2fad27c745ab7837fb34c5b4cb3b5535" translate="yes" xml:space="preserve">
          <source>Provider is the most complex recipe type. You don't need it unless you are building a reusable piece of code that needs global configuration.</source>
          <target state="translated">Provider是最复杂的配方类型。你不需要它,除非你正在构建一个需要全局配置的可重用代码。</target>
        </trans-unit>
        <trans-unit id="87b7c08baed1c8e93db95b79bcdca55b631dd7bb" translate="yes" xml:space="preserve">
          <source>Providers</source>
          <target state="translated">Providers</target>
        </trans-unit>
        <trans-unit id="3c19717766308f184231292bb4ec1e53f9ff7873" translate="yes" xml:space="preserve">
          <source>Provides pre-instantiated services which should append/override services provided by &lt;code&gt;providers&lt;/code&gt;. This is handy when unit-testing and having the need to override a default service.</source>
          <target state="translated">提供预先实例化的服务，该服务应附加/覆盖提供者提供的 &lt;code&gt;providers&lt;/code&gt; 。当进行单元测试并且需要覆盖默认服务时，这非常方便。</target>
        </trans-unit>
        <trans-unit id="8eae5c3fc815670c73fa3a65878af6b41fec633e" translate="yes" xml:space="preserve">
          <source>Provides read/write access to browser's cookies.</source>
          <target state="translated">提供对浏览器cookies的读/写权限。</target>
        </trans-unit>
        <trans-unit id="1a023f9aad6dc377039a1b87b20af53972b89720" translate="yes" xml:space="preserve">
          <source>Providing locale rules to AngularJS</source>
          <target state="translated">为AngularJS提供本地化规则</target>
        </trans-unit>
        <trans-unit id="ddd8ad56b330bca54c9be9804edc93d69e2dea69" translate="yes" xml:space="preserve">
          <source>Providing validation behavior (i.e. required, number, email, url).</source>
          <target state="translated">提供验证行为(如必填、数字、电子邮件、url)。</target>
        </trans-unit>
        <trans-unit id="b73be446095cb68833313fd87ebc08cef7cbc028" translate="yes" xml:space="preserve">
          <source>Q has many more features than $q, but that comes at a cost of bytes. $q is tiny, but contains all the important functionality needed for common async tasks.</source>
          <target state="translated">Q比$q有更多的功能,但这是以字节为代价的。$q虽然很小,但却包含了普通异步任务所需的所有重要功能。</target>
        </trans-unit>
        <trans-unit id="a17b9bb70264b6c8d6ecde29f85b3a88abcad433" translate="yes" xml:space="preserve">
          <source>Query parameters</source>
          <target state="translated">查询参数</target>
        </trans-unit>
        <trans-unit id="6c66d1dc2e56375fe263d76a3be7b856f40b76c8" translate="yes" xml:space="preserve">
          <source>Range Input with ngMin &amp;amp; ngMax attributes</source>
          <target state="translated">Range Input with ngMin &amp;amp; ngMax attributes</target>
        </trans-unit>
        <trans-unit id="aa28402b349eaa855997074022329eee97704df9" translate="yes" xml:space="preserve">
          <source>Raw cookie value.</source>
          <target state="translated">原始cookie值。</target>
        </trans-unit>
        <trans-unit id="1618100fea13078aa76080795808feb6be857d99" translate="yes" xml:space="preserve">
          <source>Raw value to be stored.</source>
          <target state="translated">要存储的原始值。</target>
        </trans-unit>
        <trans-unit id="2b86c80b3e4094ce9a3d04d4536abffffbad8e90" translate="yes" xml:space="preserve">
          <source>Read and write custom information about this module. For example you could put the version of the module in here.</source>
          <target state="translated">读取和写入关于这个模块的自定义信息。例如,你可以把模块的版本放在这里。</target>
        </trans-unit>
        <trans-unit id="4d7732dd14cd9ae15d39f4a1ba98522f1578cf57" translate="yes" xml:space="preserve">
          <source>Read more about &lt;a href=&quot;../service/%24sce&quot;&gt;Strict Contextual Escaping (SCE)&lt;/a&gt;.</source>
          <target state="translated">阅读更多有关&lt;a href=&quot;../service/%24sce&quot;&gt;严格上下文转义（SCE）的信息&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="51c8f5fa0bf495bbdab1fb9e3c43c6038a6fa0dc" translate="yes" xml:space="preserve">
          <source>Read the &lt;a href=&quot;../../../guide/accessibility&quot;&gt;ngAria Developer Guide&lt;/a&gt; for a thorough explanation of each directive.</source>
          <target state="translated">Read the &lt;a href=&quot;../../../guide/accessibility&quot;&gt;ngAria Developer Guide&lt;/a&gt; for a thorough explanation of each directive.</target>
        </trans-unit>
        <trans-unit id="354d2d712f48b41905c006f1295a07a5166ec835" translate="yes" xml:space="preserve">
          <source>Ready to find out more about AngularJS?</source>
          <target state="translated">准备好了解更多关于AngularJS的信息了吗?</target>
        </trans-unit>
        <trans-unit id="434f7fd2e7fbbeb863bbeb23079429e58d437bae" translate="yes" xml:space="preserve">
          <source>Reasons for using one-time binding</source>
          <target state="translated">使用一次性约束的原因</target>
        </trans-unit>
        <trans-unit id="c400f997011216a042b977f816c836e8b9842bfe" translate="yes" xml:space="preserve">
          <source>Recommended Setup</source>
          <target state="translated">推荐设置</target>
        </trans-unit>
        <trans-unit id="4a36b4af5afa45bcf158d1716fdc3677a5e0a895" translate="yes" xml:space="preserve">
          <source>Refer &lt;a href=&quot;../provider/%24scedelegateprovider&quot;&gt;$sceDelegateProvider&lt;/a&gt; for an example.</source>
          <target state="translated">有关示例，请参考&lt;a href=&quot;../provider/%24scedelegateprovider&quot;&gt;$ sceDelegateProvider&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b5b195da530d0efe734a7d53c8b68080b3cc3c7f" translate="yes" xml:space="preserve">
          <source>Refer &lt;a href=&quot;../provider/%24scedelegateprovider&quot;&gt;$sceDelegateProvider&lt;/a&gt; to configure this service.</source>
          <target state="translated">请参考&lt;a href=&quot;../provider/%24scedelegateprovider&quot;&gt;$ sceDelegateProvider&lt;/a&gt;来配置此服务。</target>
        </trans-unit>
        <trans-unit id="4b627a0fb853040d3e0434dbbefd5809d93b210f" translate="yes" xml:space="preserve">
          <source>Reference to &lt;code&gt;dst&lt;/code&gt;.</source>
          <target state="translated">参考 &lt;code&gt;dst&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="acd87679cf893a1dd2dca79c61d0e9d748b5026f" translate="yes" xml:space="preserve">
          <source>Reference to &lt;code&gt;obj&lt;/code&gt;.</source>
          <target state="translated">引用 &lt;code&gt;obj&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b671addffac0b2e853bfb7228e292c171a7d6ed5" translate="yes" xml:space="preserve">
          <source>Reference to check.</source>
          <target state="translated">参考检查。</target>
        </trans-unit>
        <trans-unit id="3b633a4c1143db3741cc3f064fe12f9828a781e6" translate="yes" xml:space="preserve">
          <source>Reference to the current route definition. The route definition contains:</source>
          <target state="translated">当前途径定义的参考。途径定义包括:</target>
        </trans-unit>
        <trans-unit id="bb91dbe53666db180aa57161eb36d124fa150320" translate="yes" xml:space="preserve">
          <source>Reference to the parent scope.</source>
          <target state="translated">对父范围的引用。</target>
        </trans-unit>
        <trans-unit id="bed990515ae3cd84556c4d6208760d018bf3b353" translate="yes" xml:space="preserve">
          <source>Reference to the root scope.</source>
          <target state="translated">对根范围的引用。</target>
        </trans-unit>
        <trans-unit id="b8d49172c668642e2f62c37bc331faa62a3e1ab5" translate="yes" xml:space="preserve">
          <source>Regex parameter matching</source>
          <target state="translated">Regex参数匹配</target>
        </trans-unit>
        <trans-unit id="fc0504148c30c6097df7cfb4174da0f1a4cbd9e0" translate="yes" xml:space="preserve">
          <source>Register a &lt;strong&gt;component definition&lt;/strong&gt; with the compiler. This is a shorthand for registering a special type of directive, which represents a self-contained UI component in your application. Such components are always isolated (i.e. &lt;code&gt;scope: {}&lt;/code&gt;) and are always restricted to elements (i.e. &lt;code&gt;restrict: 'E'&lt;/code&gt;).</source>
          <target state="translated">向编译器注册&lt;strong&gt;组件定义&lt;/strong&gt;。这是注册特殊类型指令的简写，该指令代表应用程序中的独立UI组件。此类组件始终是隔离的（例如， &lt;code&gt;scope: {}&lt;/code&gt; ），并且始终限于元素（即， &lt;code&gt;restrict: 'E'&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="e65f3ece273368fd8433f2cdcda7c960e1f6572d" translate="yes" xml:space="preserve">
          <source>Register a &lt;strong&gt;constant service&lt;/strong&gt; with the &lt;a href=&quot;%24injector&quot;&gt;$injector&lt;/a&gt;, such as a string, a number, an array, an object or a function. Like the &lt;a href=&quot;%24provide#value.html&quot;&gt;value&lt;/a&gt;, it is not possible to inject other services into a constant.</source>
          <target state="translated">向&lt;a href=&quot;%24injector&quot;&gt;$ injector&lt;/a&gt;注册一个&lt;strong&gt;常量服务&lt;/strong&gt;，例如字符串，数字，数组，对象或函数。像&lt;a href=&quot;%24provide#value.html&quot;&gt;value&lt;/a&gt;一样，不可能将其他服务注入一个常量。</target>
        </trans-unit>
        <trans-unit id="45524c2eb035d8e9328d31f7bed278f90e7c83fc" translate="yes" xml:space="preserve">
          <source>Register a &lt;strong&gt;decorator function&lt;/strong&gt; with the &lt;a href=&quot;%24injector&quot;&gt;$injector&lt;/a&gt;. A decorator function intercepts the creation of a service, allowing it to override or modify the behavior of the service. The return value of the decorator function may be the original service, or a new service that replaces (or wraps and delegates to) the original service.</source>
          <target state="translated">向&lt;a href=&quot;%24injector&quot;&gt;$ injector&lt;/a&gt;注册&lt;strong&gt;装饰器函数&lt;/strong&gt;。装饰器功能拦截服务的创建，从而允许其覆盖或修改服务的行为。装饰器函数的返回值可以是原始服务，也可以是替换（或包装并委托）原始服务的新服务。</target>
        </trans-unit>
        <trans-unit id="ea020b086a634153190597650e70f48a24258953" translate="yes" xml:space="preserve">
          <source>Register a &lt;strong&gt;provider function&lt;/strong&gt; with the &lt;a href=&quot;%24injector&quot;&gt;$injector&lt;/a&gt;. Provider functions are constructor functions, whose instances are responsible for &quot;providing&quot; a factory for a service.</source>
          <target state="translated">用&lt;a href=&quot;%24injector&quot;&gt;$ injector&lt;/a&gt;注册一个&lt;strong&gt;提供者函数&lt;/strong&gt;。提供程序功能是构造函数，其实例负责&amp;ldquo;提供&amp;rdquo;服务的工厂。</target>
        </trans-unit>
        <trans-unit id="45783c066e03d8c03ea0efb06a359bae85613169" translate="yes" xml:space="preserve">
          <source>Register a &lt;strong&gt;service constructor&lt;/strong&gt;, which will be invoked with &lt;code&gt;new&lt;/code&gt; to create the service instance. This is short for registering a service where its provider's &lt;code&gt;$get&lt;/code&gt; property is a factory function that returns an instance instantiated by the injector from the service constructor function.</source>
          <target state="translated">注册一个&lt;strong&gt;服务构造函数&lt;/strong&gt;，它将与 &lt;code&gt;new&lt;/code&gt; 一起调用以创建服务实例。这是注册服务的缩写，该服务的提供者的 &lt;code&gt;$get&lt;/code&gt; 属性是一个工厂函数，该函数从服务构造函数返回由注入器实例化的实例。</target>
        </trans-unit>
        <trans-unit id="eed2257ce18cce4c83839c3ad49253c60a762e9c" translate="yes" xml:space="preserve">
          <source>Register a &lt;strong&gt;service factory&lt;/strong&gt;, which will be called to return the service instance. This is short for registering a service where its provider consists of only a &lt;code&gt;$get&lt;/code&gt; property, which is the given service factory function. You should use &lt;a href=&quot;%24provide#factory.html&quot;&gt;$provide.factory(getFn)&lt;/a&gt; if you do not need to configure your service in a provider.</source>
          <target state="translated">注册&lt;strong&gt;服务工厂&lt;/strong&gt;，将调用该&lt;strong&gt;工厂&lt;/strong&gt;以返回服务实例。这是在服务的提供者仅包含 &lt;code&gt;$get&lt;/code&gt; 属性（即给定的服务工厂功能）的情况下注册服务的简称。如果不需要在提供程序中配置服务，则应使用&lt;a href=&quot;%24provide#factory.html&quot;&gt;$ provide.factory（getFn）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="635024287d83106675ce8f580b6af894b0ca524f" translate="yes" xml:space="preserve">
          <source>Register a &lt;strong&gt;value service&lt;/strong&gt; with the &lt;a href=&quot;%24injector&quot;&gt;$injector&lt;/a&gt;, such as a string, a number, an array, an object or a function. This is short for registering a service where its provider's &lt;code&gt;$get&lt;/code&gt; property is a factory function that takes no arguments and returns the &lt;strong&gt;value service&lt;/strong&gt;. That also means it is not possible to inject other services into a value service.</source>
          <target state="translated">向&lt;a href=&quot;%24injector&quot;&gt;$ injector&lt;/a&gt;注册一个&lt;strong&gt;值服务&lt;/strong&gt;，例如字符串，数字，数组，对象或函数。这是注册服务的缩写，该服务的提供者的 &lt;code&gt;$get&lt;/code&gt; 属性是一个工厂函数，该函数不带任何参数并返回&lt;strong&gt;值service&lt;/strong&gt;。这也意味着不可能将其他服务注入到价值服务中。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b87eb97a1c3c8baad3cdae5ff8ff853d06484051" translate="yes" xml:space="preserve">
          <source>Register a control with the form. Input elements using ngModelController do this automatically when they are linked.</source>
          <target state="translated">在表单中注册一个控件。当使用ngModelController的输入元素被链接时,它们会自动进行注册。</target>
        </trans-unit>
        <trans-unit id="eb48cfa4c810ae8c4bb96fcfdc6c3eb349e97e1e" translate="yes" xml:space="preserve">
          <source>Register a new directive with the compiler.</source>
          <target state="translated">向编译器注册一个新指令。</target>
        </trans-unit>
        <trans-unit id="d51fd0243e0e86d898e850537c07b7bc17d03dc4" translate="yes" xml:space="preserve">
          <source>Registered filter instance, or if a map of filters was provided then a map of the registered filter instances.</source>
          <target state="translated">注册的过滤器实例,如果提供了过滤器地图,则提供注册过滤器实例的地图。</target>
        </trans-unit>
        <trans-unit id="e34c75266465d4da9d7310c64a01438305b252b5" translate="yes" xml:space="preserve">
          <source>Registering Services</source>
          <target state="translated">注册服务</target>
        </trans-unit>
        <trans-unit id="d1260ea7fdb8f8f1a5f99c1e31524881fab210aa" translate="yes" xml:space="preserve">
          <source>Registering a Service with $provide</source>
          <target state="translated">用$provide注册服务</target>
        </trans-unit>
        <trans-unit id="48d1928dfaff8d1fc38b25397535b4cf15cf8700" translate="yes" xml:space="preserve">
          <source>Registering the control with its parent &lt;a href=&quot;form&quot;&gt;form&lt;/a&gt;.</source>
          <target state="translated">用其父&lt;a href=&quot;form&quot;&gt;窗体&lt;/a&gt;注册控件。</target>
        </trans-unit>
        <trans-unit id="ce3b34d6f14031683c49fcb0996fc9a2287467ec" translate="yes" xml:space="preserve">
          <source>Registers a &lt;code&gt;listener&lt;/code&gt; callback to be executed whenever the &lt;code&gt;watchExpression&lt;/code&gt; changes.</source>
          <target state="translated">注册一个当 &lt;code&gt;watchExpression&lt;/code&gt; 更改时要执行的 &lt;code&gt;listener&lt;/code&gt; 回调。</target>
        </trans-unit>
        <trans-unit id="e755ff9b4f19ef2d1c7dc5cbea80131344b000f0" translate="yes" xml:space="preserve">
          <source>Registers a new injectable animation factory function. The factory function produces the animation object which contains callback functions for each event that is expected to be animated.</source>
          <target state="translated">注册一个新的可注入的动画工厂函数。该工厂函数产生动画对象,该对象包含了每个事件的回调函数,这些事件预计将被动画化。</target>
        </trans-unit>
        <trans-unit id="40aec920014d2862cafad66b448612b687f31308" translate="yes" xml:space="preserve">
          <source>Registration in the config block</source>
          <target state="translated">在配置块中注册</target>
        </trans-unit>
        <trans-unit id="98fdd77196db1b5bf3eb22caffc45a13dfad7a74" translate="yes" xml:space="preserve">
          <source>Related API</source>
          <target state="translated">相关API</target>
        </trans-unit>
        <trans-unit id="cfbc9e10239e3aa2884b26233bd2772c8b87a636" translate="yes" xml:space="preserve">
          <source>Related Topics</source>
          <target state="translated">相关主题</target>
        </trans-unit>
        <trans-unit id="8f7bfe2a8726123d4d57d9e3cb41a80d80eefbfc" translate="yes" xml:space="preserve">
          <source>Relative links</source>
          <target state="translated">相关链接</target>
        </trans-unit>
        <trans-unit id="98eb2443ddb19e4af9222b182551b238c57fffed" translate="yes" xml:space="preserve">
          <source>Relative or absolute URL specifying the destination of the request</source>
          <target state="translated">指定请求目的地的相对或绝对URL</target>
        </trans-unit>
        <trans-unit id="e6e7b36b90301e1149d1fd8dbda9f15e4b6881b3" translate="yes" xml:space="preserve">
          <source>Remove given cookie</source>
          <target state="translated">移除指定的cookie</target>
        </trans-unit>
        <trans-unit id="ee2741c4b98105f982c53a03fff032d207b158a9" translate="yes" xml:space="preserve">
          <source>Removes an entry from the &lt;a href=&quot;%24cachefactory.cache&quot;&gt;Cache&lt;/a&gt; object.</source>
          <target state="translated">从&lt;a href=&quot;%24cachefactory.cache&quot;&gt;Cache&lt;/a&gt;对象中删除一个条目。</target>
        </trans-unit>
        <trans-unit id="8920f5ca9f0566bd4a9f1e7b0ee0099b999aa651" translate="yes" xml:space="preserve">
          <source>Removes the CSS class value specified by the classVal parameter from the element. If animations are enabled then an animation will be triggered for the class removal.</source>
          <target state="translated">从元素中删除由classVal参数指定的CSS类值。如果启用了动画,那么删除类时将会触发动画。</target>
        </trans-unit>
        <trans-unit id="04b5e728a8d34f70ce59d4ce19242f609cb92274" translate="yes" xml:space="preserve">
          <source>Removes the current scope (and all of its children) from the parent scope. Removal implies that calls to &lt;a href=&quot;%24rootscope.scope#%24digest.html&quot;&gt;$digest()&lt;/a&gt; will no longer propagate to the current scope and its children. Removal also implies that the current scope is eligible for garbage collection.</source>
          <target state="translated">从父范围中删除当前范围（及其所有子级）。删除意味着对&lt;a href=&quot;%24rootscope.scope#%24digest.html&quot;&gt;$ digest（）的&lt;/a&gt;调用将不再传播到当前作用域及其子级。删除还意味着当前范围可以进行垃圾回收。</target>
        </trans-unit>
        <trans-unit id="f5cfe4b8875850cebab31b8ae5ebdb0f01a98015" translate="yes" xml:space="preserve">
          <source>Replace method</source>
          <target state="translated">替换方法</target>
        </trans-unit>
        <trans-unit id="abed80d59c3cc2cdfd2934eac8defa722471a0e8" translate="yes" xml:space="preserve">
          <source>Replace or decorate this service to create your own custom XMLHttpRequest objects.</source>
          <target state="translated">替换或装饰这个服务来创建你自己的自定义XMLHttpRequest对象。</target>
        </trans-unit>
        <trans-unit id="7fdab89988ce8fbbc75820a42b26b98ef91641e9" translate="yes" xml:space="preserve">
          <source>Replace the contents of the directive's element (default).</source>
          <target state="translated">替换指令元素的内容(默认)。</target>
        </trans-unit>
        <trans-unit id="8d8db9b8f187119d598467a295084104278dca63" translate="yes" xml:space="preserve">
          <source>Replace the directive's element itself (if &lt;code&gt;replace&lt;/code&gt; is true - DEPRECATED).</source>
          <target state="translated">替换指令的元素本身（如果 &lt;code&gt;replace&lt;/code&gt; 为true-已弃用）。</target>
        </trans-unit>
        <trans-unit id="1b74ba244acc5851ea1e932d4c6f319a815eeff5" translate="yes" xml:space="preserve">
          <source>Reporting a security issue</source>
          <target state="translated">报告安全问题</target>
        </trans-unit>
        <trans-unit id="c922eca42e3d5120a6bfc72bcad1d30519cb4e28" translate="yes" xml:space="preserve">
          <source>Represents the URL object as a set of methods (protocol, host, port, path, search, hash).</source>
          <target state="translated">将URL对象表示为一组方法(协议、主机、端口、路径、搜索、哈希)。</target>
        </trans-unit>
        <trans-unit id="44275cc926494215c0dd8c311f508c08138ab44c" translate="yes" xml:space="preserve">
          <source>Request Expectations vs Backend Definitions</source>
          <target state="translated">请求期望与后端定义</target>
        </trans-unit>
        <trans-unit id="fb7dc677c72c08388ac26aa5b3b8bf37f74b4a0b" translate="yes" xml:space="preserve">
          <source>Request content</source>
          <target state="translated">要求内容</target>
        </trans-unit>
        <trans-unit id="4e9c03db567af687cbcde897eb8e4e49684606e8" translate="yes" xml:space="preserve">
          <source>Request expectations</source>
          <target state="translated">提出期望</target>
        </trans-unit>
        <trans-unit id="7c76d91bc3fe714b2e19d415024bc0ce817ca932" translate="yes" xml:space="preserve">
          <source>Request expectations provide a way to make assertions about requests made by the application and to define responses for those requests. The test will fail if the expected requests are not made or they are made in the wrong order.</source>
          <target state="translated">请求期望提供了一种方法来对应用程序提出的请求进行断言,并为这些请求定义响应。如果没有提出预期的请求或者请求的顺序不对,测试就会失败。</target>
        </trans-unit>
        <trans-unit id="c3d3aaf0c7d684713b0e633e09eb2de9d118d464" translate="yes" xml:space="preserve">
          <source>Request required</source>
          <target state="translated">需要申请</target>
        </trans-unit>
        <trans-unit id="2ef4b562f29645c2c4f2482326315042cb223eaa" translate="yes" xml:space="preserve">
          <source>Request transformations (&lt;code&gt;$httpProvider.defaults.transformRequest&lt;/code&gt; and &lt;code&gt;$http.defaults.transformRequest&lt;/code&gt;) is an array with one function that does the following:</source>
          <target state="translated">请求转换（ &lt;code&gt;$httpProvider.defaults.transformRequest&lt;/code&gt; 和 &lt;code&gt;$http.defaults.transformRequest&lt;/code&gt; ）是一个数组，其中一个函数执行以下操作：</target>
        </trans-unit>
        <trans-unit id="90f650d7162ff6af24a4492b8baa19c6caca946c" translate="yes" xml:space="preserve">
          <source>Require another directive and inject its controller as the fourth argument to the linking function. The &lt;code&gt;require&lt;/code&gt; property can be a string, an array or an object:</source>
          <target state="translated">需要另一个指令并将其控制器作为链接函数的第四个参数注入。的 &lt;code&gt;require&lt;/code&gt; 属性可以是一个字符串，一个数组或一个对象：</target>
        </trans-unit>
        <trans-unit id="e1d5e0b06dfa562e69981647c63bd3b86e664409" translate="yes" xml:space="preserve">
          <source>Requires the &lt;a href=&quot;../../ngaria&quot;&gt;&lt;code&gt;ngAria&lt;/code&gt;&lt;/a&gt; module to be installed.</source>
          <target state="translated">需要安装&lt;a href=&quot;../../ngaria&quot;&gt; &lt;code&gt;ngAria&lt;/code&gt; &lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="7ec0099c504303c4c9c48e96dc4609ad55904f4a" translate="yes" xml:space="preserve">
          <source>Requires the &lt;a href=&quot;../../ngcookies&quot;&gt;&lt;code&gt;ngCookies&lt;/code&gt;&lt;/a&gt; module to be installed.</source>
          <target state="translated">需要安装&lt;a href=&quot;../../ngcookies&quot;&gt; &lt;code&gt;ngCookies&lt;/code&gt; &lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="c5862a5cb0ec6abe952c905b15a9f3429f373234" translate="yes" xml:space="preserve">
          <source>Requires the &lt;a href=&quot;../../ngresource&quot;&gt;&lt;code&gt;ngResource&lt;/code&gt;&lt;/a&gt; module to be installed.</source>
          <target state="translated">需要安装&lt;a href=&quot;../../ngresource&quot;&gt; &lt;code&gt;ngResource&lt;/code&gt; &lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="928e58682d0c86f23af73ec08890f10c14e4c472" translate="yes" xml:space="preserve">
          <source>Requires the &lt;a href=&quot;../../ngroute&quot;&gt;&lt;code&gt;ngRoute&lt;/code&gt;&lt;/a&gt; module to be installed.</source>
          <target state="translated">需要安装&lt;a href=&quot;../../ngroute&quot;&gt; &lt;code&gt;ngRoute&lt;/code&gt; &lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="537fea66db726eae9da189c87f27644f84ba9348" translate="yes" xml:space="preserve">
          <source>Requires the &lt;a href=&quot;../../ngsanitize&quot;&gt;&lt;code&gt;ngSanitize&lt;/code&gt;&lt;/a&gt; module to be installed.</source>
          <target state="translated">需要安装&lt;a href=&quot;../../ngsanitize&quot;&gt; &lt;code&gt;ngSanitize&lt;/code&gt; &lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="1a11c4501de6ba56e5400e26238d9a6bec494d4b" translate="yes" xml:space="preserve">
          <source>Requires the &lt;a href=&quot;../../ngtouch&quot;&gt;&lt;code&gt;ngTouch&lt;/code&gt;&lt;/a&gt; module to be installed.</source>
          <target state="translated">需要安装&lt;a href=&quot;../../ngtouch&quot;&gt; &lt;code&gt;ngTouch&lt;/code&gt; &lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="4dc1287fe5b5d1c6b627f7a7a956e26221d21611" translate="yes" xml:space="preserve">
          <source>Reset all of the logging arrays to empty.</source>
          <target state="translated">将所有的记录数组重置为空。</target>
        </trans-unit>
        <trans-unit id="2b0b4d40965cbdcf2bc7f1639bd05a9faab1c19d" translate="yes" xml:space="preserve">
          <source>Resets all request expectations, but preserves all backend definitions. Typically, you would call resetExpectations during a multiple-phase test when you want to reuse the same instance of $httpBackend mock.</source>
          <target state="translated">重置所有请求的期望值,但保留所有后端定义。通常,当你想重用同一个$httpBackend mock实例时,你会在多阶段测试中调用resetExpectations。</target>
        </trans-unit>
        <trans-unit id="9b1627a90ba7fe159014541f613675e06126b296" translate="yes" xml:space="preserve">
          <source>Resolved promises, e.g. from explicit &lt;code&gt;$q&lt;/code&gt; deferreds and &lt;code&gt;$http&lt;/code&gt; calls, trigger &lt;code&gt;$apply()&lt;/code&gt; against the &lt;code&gt;$rootScope&lt;/code&gt; and so will still trigger a global digest even if the promise was initiated by a component that lives on a suspended scope.</source>
          <target state="translated">已解决的承诺，例如来自显式的 &lt;code&gt;$q&lt;/code&gt; 延迟和 &lt;code&gt;$http&lt;/code&gt; 调用， &lt;code&gt;$apply()&lt;/code&gt; 针对 &lt;code&gt;$rootScope&lt;/code&gt; 触发$ apply（），因此即使承诺由驻留在挂起的作用域中的组件启动，仍将触发全局摘要。</target>
        </trans-unit>
        <trans-unit id="5171c896616adb2c3ae9357c2a11116e0ab2aa7b" translate="yes" xml:space="preserve">
          <source>Resolving References (Underscore Wrapping)</source>
          <target state="translated">解决引用问题(下划线包装)。</target>
        </trans-unit>
        <trans-unit id="1fdbddda0698a34f465a4a76d405fca85c2bc495" translate="yes" xml:space="preserve">
          <source>Response required</source>
          <target state="translated">需要答复</target>
        </trans-unit>
        <trans-unit id="4279f5f3a3f43e3e9697fcb9701f9133954216d8" translate="yes" xml:space="preserve">
          <source>Response transformations (&lt;code&gt;$httpProvider.defaults.transformResponse&lt;/code&gt; and &lt;code&gt;$http.defaults.transformResponse&lt;/code&gt;) is an array with one function that does the following:</source>
          <target state="translated">响应转换（ &lt;code&gt;$httpProvider.defaults.transformResponse&lt;/code&gt; 和 &lt;code&gt;$http.defaults.transformResponse&lt;/code&gt; ）是一个数组，其中一个函数执行以下操作：</target>
        </trans-unit>
        <trans-unit id="34f624389800f45b8f738aae8d6df1ee633e353c" translate="yes" xml:space="preserve">
          <source>Restores the pre-1.8 behavior of jqLite that turns XHTML-like strings like &lt;code&gt;&amp;lt;div /&amp;gt;&amp;lt;span /&amp;gt;&lt;/code&gt; to &lt;code&gt;&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;&lt;/code&gt; instead of &lt;code&gt;&amp;lt;div&amp;gt;&amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;. The new behavior is a security fix. Thus, if you need to call this function, please try to adjust your code for this change and remove your use of this function as soon as possible.</source>
          <target state="translated">Restores the pre-1.8 behavior of jqLite that turns XHTML-like strings like &lt;code&gt;&amp;lt;div /&amp;gt;&amp;lt;span /&amp;gt;&lt;/code&gt; to &lt;code&gt;&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;&lt;/code&gt; instead of &lt;code&gt;&amp;lt;div&amp;gt;&amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt; . The new behavior is a security fix. Thus, if you need to call this function, please try to adjust your code for this change and remove your use of this function as soon as possible.</target>
        </trans-unit>
        <trans-unit id="71af08d07b3e60fd452cd1d0a14b65208dec62a8" translate="yes" xml:space="preserve">
          <source>Resume watchers of this scope subtree in case it was suspended.</source>
          <target state="translated">恢复该范围子树的监视者,以防它被中止。</target>
        </trans-unit>
        <trans-unit id="c3cc9b89d7252c496c37f0adc038b1ff7352e328" translate="yes" xml:space="preserve">
          <source>Retrieve information regarding a particular &lt;a href=&quot;%24cachefactory.cache&quot;&gt;Cache&lt;/a&gt;.</source>
          <target state="translated">检索有关特定&lt;a href=&quot;%24cachefactory.cache&quot;&gt;缓存的信息&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="029ee2c69a33b0a01589d3072b7fe14eb14fae75" translate="yes" xml:space="preserve">
          <source>Retrieves named data stored in the &lt;a href=&quot;%24cachefactory.cache&quot;&gt;Cache&lt;/a&gt; object.</source>
          <target state="translated">检索存储在&lt;a href=&quot;%24cachefactory.cache&quot;&gt;Cache&lt;/a&gt;对象中的命名数据。</target>
        </trans-unit>
        <trans-unit id="8171a153e7113cb47d5271b3cbb42b84ff913e5a" translate="yes" xml:space="preserve">
          <source>Retrieves or overrides the default regular expression that is used for determining trusted safe urls during a[href] sanitization.</source>
          <target state="translated">检索或覆盖默认的正则表达式,该表达式用于在[href]清除过程中确定受信任的安全URL。</target>
        </trans-unit>
        <trans-unit id="d82de9afda7c8c459229787af42476d98ee66468" translate="yes" xml:space="preserve">
          <source>Retrieves or overrides the default regular expression that is used for determining trusted safe urls during img[src] sanitization.</source>
          <target state="translated">检索或覆盖默认的正则表达式,该表达式用于在img[src]过滤过程中确定受信任的安全URL。</target>
        </trans-unit>
        <trans-unit id="b79d873410e3c147f2393994b51801ea7b9e7971" translate="yes" xml:space="preserve">
          <source>Retrieves or overrides the default regular expression that is used for whitelisting of safe urls during a[href] sanitization.</source>
          <target state="translated">检索或重写默认的正则表达式,该表达式在[href]清除过程中用于安全URL的白名单。</target>
        </trans-unit>
        <trans-unit id="0f87729394a5fbe13e20ab17fd7dfea291758f33" translate="yes" xml:space="preserve">
          <source>Retrieves or overrides the default regular expression that is used for whitelisting of safe urls during img[src] sanitization.</source>
          <target state="translated">检索或覆盖默认的正则表达式,该表达式在img[src]过滤过程中用于安全URL的白名单。</target>
        </trans-unit>
        <trans-unit id="56c2ae0bea288f2deb96af027ca9db1c1e0b88dc" translate="yes" xml:space="preserve">
          <source>Retrieves or overrides whether to generate an error when a rejected promise is not handled. This feature is enabled by default.</source>
          <target state="translated">检索或重写当拒绝的承诺未被处理时是否产生错误。此功能默认为启用。</target>
        </trans-unit>
        <trans-unit id="c185b622ce0745aa94f9eb7657d6eb237ec2b1fa" translate="yes" xml:space="preserve">
          <source>Retrieving Scopes from the DOM.</source>
          <target state="translated">从DOM中检索作用域。</target>
        </trans-unit>
        <trans-unit id="b94fccf633ef32d6a7adbbcb71ca77e3795f319f" translate="yes" xml:space="preserve">
          <source>Return URL (e.g. &lt;code&gt;/path?a=b#hash&lt;/code&gt;) when called without any parameter.</source>
          <target state="translated">不带任何参数调用时返回URL（例如 &lt;code&gt;/path?a=b#hash&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="140d46868b4d533c15312ce7397910001cda166b" translate="yes" xml:space="preserve">
          <source>Return an instance of the service.</source>
          <target state="translated">返回一个服务的实例。</target>
        </trans-unit>
        <trans-unit id="52c77045e19f27ad9c42170b240a88aba2880086" translate="yes" xml:space="preserve">
          <source>Return full URL representation with all segments encoded according to rules specified in &lt;a href=&quot;http://www.ietf.org/rfc/rfc3986.txt&quot;&gt;RFC 3986&lt;/a&gt;.</source>
          <target state="translated">返回完整的URL表示形式，其中所有段均根据&lt;a href=&quot;http://www.ietf.org/rfc/rfc3986.txt&quot;&gt;RFC 3986中&lt;/a&gt;指定的规则进行编码。</target>
        </trans-unit>
        <trans-unit id="a84b48c4bccbb0cc57fe52888fad2de77796bd94" translate="yes" xml:space="preserve">
          <source>Return host of current URL.</source>
          <target state="translated">返回当前URL的主机。</target>
        </trans-unit>
        <trans-unit id="d9571c514202bc742683b59fda7b96fff7838c64" translate="yes" xml:space="preserve">
          <source>Return path of current URL when called without any parameter.</source>
          <target state="translated">调用时返回当前URL的路径,无需任何参数。</target>
        </trans-unit>
        <trans-unit id="1fa7a4a66728b565c4e07673c76f2345202fcefb" translate="yes" xml:space="preserve">
          <source>Return port of current URL.</source>
          <target state="translated">返回当前URL的端口。</target>
        </trans-unit>
        <trans-unit id="1d7c6f2975be06cdce751120c8ce17812edf9714" translate="yes" xml:space="preserve">
          <source>Return protocol of current URL.</source>
          <target state="translated">返回当前URL的协议。</target>
        </trans-unit>
        <trans-unit id="18b8fbc14549d13332fe634d60cd64acc7bbf234" translate="yes" xml:space="preserve">
          <source>Return search part (as object) of current URL when called without any parameter.</source>
          <target state="translated">不使用任何参数时,返回当前URL的搜索部分(作为对象)。</target>
        </trans-unit>
        <trans-unit id="9e2043f80bfdb23de9427764cc68baf2ef7904c2" translate="yes" xml:space="preserve">
          <source>Return the history state object when called without any parameter.</source>
          <target state="translated">调用时不需要任何参数,返回历史状态对象。</target>
        </trans-unit>
        <trans-unit id="110ff013828ec54e25bfc2b37603def46e139ae4" translate="yes" xml:space="preserve">
          <source>Returning &lt;code&gt;undefined&lt;/code&gt; from a parser means a parse error occurred. In that case, no &lt;a href=&quot;ngmodel.ngmodelcontroller#%24validators.html&quot;&gt;&lt;code&gt;$validators&lt;/code&gt;&lt;/a&gt; will run and the &lt;code&gt;ngModel&lt;/code&gt; will be set to &lt;code&gt;undefined&lt;/code&gt; unless &lt;a href=&quot;../directive/ngmodeloptions&quot;&gt;&lt;code&gt;ngModelOptions.allowInvalid&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;true&lt;/code&gt;. The parse error is stored in &lt;code&gt;ngModel.$error.parse&lt;/code&gt;.</source>
          <target state="translated">从解析器返回 &lt;code&gt;undefined&lt;/code&gt; 表示发生解析错误。在这种情况下，除非&lt;a href=&quot;../directive/ngmodeloptions&quot;&gt; &lt;code&gt;ngModelOptions.allowInvalid&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;true&lt;/code&gt; ,否则不会运行&lt;a href=&quot;ngmodel.ngmodelcontroller#%24validators.html&quot;&gt; &lt;code&gt;$validators&lt;/code&gt; &lt;/a&gt;并将 &lt;code&gt;ngModel&lt;/code&gt; 设置为 &lt;code&gt;undefined&lt;/code&gt; 。解析错误存储在 &lt;code&gt;ngModel.$error.parse&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9582a02f141fc4b345b2936eba691cd0654efebc" translate="yes" xml:space="preserve">
          <source>Returns</source>
          <target state="translated">Returns</target>
        </trans-unit>
        <trans-unit id="6322592f617b52f15e691f0664eb67413ed6b4d9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the select element currently has an empty option element, i.e. an option that signifies that the select is empty / the selection is null.</source>
          <target state="translated">如果select元素当前有一个空的option元素，即表示选择为空/选择为null的选项，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2be820c292c48c220766945900a106842fe92493" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the select element has an empty option and this empty option is currently selected. Returns &lt;code&gt;false&lt;/code&gt; if the select element has no empty option or it is not selected.</source>
          <target state="translated">如果select元素具有空选项并且当前选择了该空选项，则返回 &lt;code&gt;true&lt;/code&gt; 。如果select元素没有空选项或未选择，则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="84bd2e384f903fbc16707ec0fe6ebfd47faeb625" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the select element's unknown option is selected. The unknown option is added and automatically selected whenever the select model doesn't match any option.</source>
          <target state="translated">如果选择了select元素的unknown选项，则返回 &lt;code&gt;true&lt;/code&gt; 。只要选择模型与任何选项都不匹配，就会添加并自动选择未知选项。</target>
        </trans-unit>
        <trans-unit id="181f1c7690856bcb7fcf6731a0fb5201a6ccccc9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the task hasn't executed yet and was successfully canceled.</source>
          <target state="translated">如果任务尚未执行且已成功取消，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="96717e8f9258537bda3c42a8756552de8cced4c1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the task was successfully canceled.</source>
          <target state="translated">如果任务已成功取消，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="867a62db9c23f0997b39841b28f2e59ddad2bb16" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the task was successfully cancelled.</source>
          <target state="translated">如果任务已成功取消，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="15f8467fdef401d96fd8e32cecf9dae076fe71cc" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating if SCE is enabled.</source>
          <target state="translated">返回一个表示是否启用SCE的布尔值。</target>
        </trans-unit>
        <trans-unit id="6a4b36d75da9780449e67995a0c9d8f2357adca9" translate="yes" xml:space="preserve">
          <source>Returns a de-registration function for all listeners.</source>
          <target state="translated">返回所有监听者的取消注册功能。</target>
        </trans-unit>
        <trans-unit id="b3199c479081525ca17de9a88b742996c4d4425b" translate="yes" xml:space="preserve">
          <source>Returns a de-registration function for this listener. When the de-registration function is executed, the internal watch operation is terminated.</source>
          <target state="translated">返回该监听器的注销功能。当取消注册功能被执行时,内部监视操作将被终止。</target>
        </trans-unit>
        <trans-unit id="da8b706e428495422b325816f68f7d9fb0924119" translate="yes" xml:space="preserve">
          <source>Returns a deregistration function for this listener.</source>
          <target state="translated">返回该监听器的注销函数。</target>
        </trans-unit>
        <trans-unit id="a62e22e5f831bc88dd6a0a893e8a44c0774a1e17" translate="yes" xml:space="preserve">
          <source>Returns a deregistration function for this observer.</source>
          <target state="translated">返回该观察者的注销函数。</target>
        </trans-unit>
        <trans-unit id="70a6eca6b0045b166ed0f2aa0ff409c9e7abdd47" translate="yes" xml:space="preserve">
          <source>Returns a function which calls function &lt;code&gt;fn&lt;/code&gt; bound to &lt;code&gt;self&lt;/code&gt; (&lt;code&gt;self&lt;/code&gt; becomes the &lt;code&gt;this&lt;/code&gt; for &lt;code&gt;fn&lt;/code&gt;). You can supply optional &lt;code&gt;args&lt;/code&gt; that are prebound to the function. This feature is also known as &lt;a href=&quot;http://en.wikipedia.org/wiki/Partial_application&quot;&gt;partial application&lt;/a&gt;, as distinguished from &lt;a href=&quot;http://en.wikipedia.org/wiki/Currying#Contrast_with_partial_function_application&quot;&gt;function currying&lt;/a&gt;.</source>
          <target state="translated">返回其调用函数的函数 &lt;code&gt;fn&lt;/code&gt; 绑定到 &lt;code&gt;self&lt;/code&gt; （ &lt;code&gt;self&lt;/code&gt; 成为 &lt;code&gt;this&lt;/code&gt; 对 &lt;code&gt;fn&lt;/code&gt; ）。您可以提供预绑定到该函数的可选 &lt;code&gt;args&lt;/code&gt; 。此功能也称为&lt;a href=&quot;http://en.wikipedia.org/wiki/Partial_application&quot;&gt;部分应用程序&lt;/a&gt;，区别于&lt;a href=&quot;http://en.wikipedia.org/wiki/Currying#Contrast_with_partial_function_application&quot;&gt;功能流&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="76eaba577560004aed48cfdfe1aa3c8424fd0aa9" translate="yes" xml:space="preserve">
          <source>Returns a key value object with all the cookies</source>
          <target state="translated">返回一个包含所有cookies的键值对象</target>
        </trans-unit>
        <trans-unit id="0a52a1fd016452a1dacdc288a006e2e537121c87" translate="yes" xml:space="preserve">
          <source>Returns a new instance of deferred.</source>
          <target state="translated">返回一个新的deferred实例。</target>
        </trans-unit>
        <trans-unit id="136a5149676161a6fd098efcaeeef0ff90a14b7a" translate="yes" xml:space="preserve">
          <source>Returns a promise of the passed value or promise</source>
          <target state="translated">返回一个传递值的承诺或承诺</target>
        </trans-unit>
        <trans-unit id="53f41d95873bd14bb41b9b13964b73702f270a5c" translate="yes" xml:space="preserve">
          <source>Returns a promise that resolves or rejects as soon as one of those promises resolves or rejects, with the value or reason from that promise.</source>
          <target state="translated">当其中一个承诺解决或拒绝时,立即返回一个解决或拒绝的承诺,以及来自该承诺的值或原因。</target>
        </trans-unit>
        <trans-unit id="ef857672d8e5bb92df878c0cd409b4cd4a641e9f" translate="yes" xml:space="preserve">
          <source>Returns a promise that was already resolved as rejected with the &lt;code&gt;reason&lt;/code&gt;.</source>
          <target state="translated">返回已被解决为已被拒绝的 &lt;code&gt;reason&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0f1de3ceadfe205063fa5015ea7133427f3c14e4" translate="yes" xml:space="preserve">
          <source>Returns a single promise that will be resolved with an array/hash of values, each value corresponding to the promise at the same index/key in the &lt;code&gt;promises&lt;/code&gt; array/hash. If any of the promises is resolved with a rejection, this resulting promise will be rejected with the same rejection value.</source>
          <target state="translated">返回一个将用值的数组/哈希值解析的单个promise，每个值对应于promise 数组/哈希中相同索引/键处的 &lt;code&gt;promises&lt;/code&gt; 。如果任何一个承诺都被拒绝解决，则此结果承诺将以相同的拒绝值被拒绝。</target>
        </trans-unit>
        <trans-unit id="2b7aae4d3bb18f409e3f426b3c452cfcca7d02e8" translate="yes" xml:space="preserve">
          <source>Returns a trusted representation of the parameter for the specified context. This trusted object will later on be used as-is, without any security check, by bindings or directives that require this security context. For instance, marking a string as trusted for the &lt;code&gt;$sce.HTML&lt;/code&gt; context will entirely bypass the potential &lt;code&gt;$sanitize&lt;/code&gt; call in corresponding &lt;code&gt;$sce.HTML&lt;/code&gt; bindings or directives, such as &lt;code&gt;ng-bind-html&lt;/code&gt;. Note that in most cases you won't need to call this function: if you have the sanitizer loaded, passing the value itself will render all the HTML that does not pose a security risk.</source>
          <target state="translated">返回指定上下文的参数的受信任表示。稍后，此受信任对象将通过需要此安全上下文的绑定或指令按原样使用，而不进行任何安全检查。例如，将字符串标记为 &lt;code&gt;$sce.HTML&lt;/code&gt; 上下文受信任的字符串将完全绕过相应的 &lt;code&gt;$sce.HTML&lt;/code&gt; 绑定或指令（例如 &lt;code&gt;ng-bind-html&lt;/code&gt; )中潜在的 &lt;code&gt;$sanitize&lt;/code&gt; 调用。请注意，在大多数情况下，您不需要调用此函数：如果加载了消毒剂，则传递值本身将呈现所有不构成安全隐患的HTML。</target>
        </trans-unit>
        <trans-unit id="e63ee47d380d94c7114daa75d9a484cd818b0895" translate="yes" xml:space="preserve">
          <source>Returns an array containing the items from the specified &lt;code&gt;collection&lt;/code&gt;, ordered by a &lt;code&gt;comparator&lt;/code&gt; function based on the values computed using the &lt;code&gt;expression&lt;/code&gt; predicate.</source>
          <target state="translated">返回一个数组，该数组包含指定 &lt;code&gt;collection&lt;/code&gt; 中的项，该数组由 &lt;code&gt;comparator&lt;/code&gt; 函数根据使用 &lt;code&gt;expression&lt;/code&gt; 谓词计算的值进行排序。</target>
        </trans-unit>
        <trans-unit id="c7812902dff27c75deda49f81fee7823d71feecf" translate="yes" xml:space="preserve">
          <source>Returns an array of service names which the function is requesting for injection. This API is used by the injector to determine which services need to be injected into the function when the function is invoked. There are three ways in which the function can be annotated with the needed dependencies.</source>
          <target state="translated">返回函数请求注入的服务名称数组。当函数被调用时,注入者使用这个API来确定哪些服务需要注入到函数中。有三种方式可以为函数注解所需的依赖关系。</target>
        </trans-unit>
        <trans-unit id="92130a2ac23bc3fb5d32303cc360ae1afb6c8f1e" translate="yes" xml:space="preserve">
          <source>Returns an object with &lt;code&gt;respond&lt;/code&gt; and &lt;code&gt;passThrough&lt;/code&gt; methods that control how a matched request is handled. You can save this object for later use and invoke &lt;code&gt;respond&lt;/code&gt; or &lt;code&gt;passThrough&lt;/code&gt; again in order to change how a matched request is handled.</source>
          <target state="translated">返回与一个对象 &lt;code&gt;respond&lt;/code&gt; 和 &lt;code&gt;passThrough&lt;/code&gt; 方法控制如何匹配的请求被处理。您可以保存此对象供以后使用和调用 &lt;code&gt;respond&lt;/code&gt; 或 &lt;code&gt;passThrough&lt;/code&gt; 匹配请求如何处理才能再次改变。</target>
        </trans-unit>
        <trans-unit id="b12454311ab476fb55e3d251419c65cd614f0f0d" translate="yes" xml:space="preserve">
          <source>Returns an object with &lt;code&gt;respond&lt;/code&gt; method that controls how a matched request is handled. You can save this object for later use and invoke &lt;code&gt;respond&lt;/code&gt; again in order to change how a matched request is handled.</source>
          <target state="translated">返回带有 &lt;code&gt;respond&lt;/code&gt; 方法的对象，该方法控制如何处理匹配的请求。您可以保存该对象供以后使用，然后再次调用 &lt;code&gt;respond&lt;/code&gt; 以更改处理匹配请求的方式。</target>
        </trans-unit>
        <trans-unit id="8f047416d0b927febeecefb5e718bd2f9a2df1b6" translate="yes" xml:space="preserve">
          <source>Returns an object with &lt;code&gt;respond&lt;/code&gt; method that controls how a matched request is handled. You can save this object for later use and invoke &lt;code&gt;respond&lt;/code&gt; again in order to change how a matched request is handled. See #expect for more info.</source>
          <target state="translated">返回带有 &lt;code&gt;respond&lt;/code&gt; 方法的对象，该方法控制如何处理匹配的请求。您可以保存该对象供以后使用，然后再次调用 &lt;code&gt;respond&lt;/code&gt; 以更改处理匹配请求的方式。有关更多信息，请参见#expect。</target>
        </trans-unit>
        <trans-unit id="febb41850b2ea1bde8532f9d32840c151719f31c" translate="yes" xml:space="preserve">
          <source>Returns an object with &lt;code&gt;respond&lt;/code&gt; method that controls how a matched request is handled. You can save this object for later use and invoke &lt;code&gt;respond&lt;/code&gt; again in order to change how a matched request is handled. See &lt;a href=&quot;%24httpbackend#expect.html&quot;&gt;&lt;code&gt;expect&lt;/code&gt;&lt;/a&gt; for more info.</source>
          <target state="translated">返回带有 &lt;code&gt;respond&lt;/code&gt; 方法的对象，该方法控制如何处理匹配的请求。您可以保存该对象供以后使用，然后再次调用 &lt;code&gt;respond&lt;/code&gt; 以更改处理匹配请求的方式。请参阅&lt;a href=&quot;%24httpbackend#expect.html&quot;&gt; &lt;code&gt;expect&lt;/code&gt; &lt;/a&gt;以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="02fb6420d8c8e60003b530a7c0b9efa52506b950" translate="yes" xml:space="preserve">
          <source>Returns an object with &lt;code&gt;respond&lt;/code&gt; method that controls how a matched request is handled. You can save this object for later use and invoke &lt;code&gt;respond&lt;/code&gt; again in order to change how a matched request is handled. See &lt;a href=&quot;%24httpbackend#when.html&quot;&gt;&lt;code&gt;when&lt;/code&gt;&lt;/a&gt; for more info.</source>
          <target state="translated">返回带有 &lt;code&gt;respond&lt;/code&gt; 方法的对象，该方法控制如何处理匹配的请求。您可以保存该对象供以后使用，然后再次调用 &lt;code&gt;respond&lt;/code&gt; 以更改处理匹配请求的方式。有关更多信息，请参见&lt;a href=&quot;%24httpbackend#when.html&quot;&gt; &lt;code&gt;when&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fbcad89ebd6ebd347f43b569c186847060998b49" translate="yes" xml:space="preserve">
          <source>Returns self for chaining.</source>
          <target state="translated">返回自身进行连锁。</target>
        </trans-unit>
        <trans-unit id="c1a2a6fe4c577bdba410ad77f0ccde833e7c1887" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;../service/%24http&quot;&gt;&lt;code&gt;$http&lt;/code&gt;&lt;/a&gt; options when used as getter and self if used as setter.</source>
          <target state="translated">用作getter时，返回&lt;a href=&quot;../service/%24http&quot;&gt; &lt;code&gt;$http&lt;/code&gt; &lt;/a&gt;选项；用作setter时，返回self。</target>
        </trans-unit>
        <trans-unit id="7a0b054676e6ac8ef163680f448b297979e55786" translate="yes" xml:space="preserve">
          <source>Returns the currently configured value if called without an argument or self for chaining otherwise.</source>
          <target state="translated">如果在没有参数的情况下调用,则返回当前配置的值,否则调用self进行链式操作。</target>
        </trans-unit>
        <trans-unit id="7566a0737921da5fa5699819d77a23be22ebc138" translate="yes" xml:space="preserve">
          <source>Returns the deserialized value of given cookie key</source>
          <target state="translated">返回给定cookie键的反序列化值。</target>
        </trans-unit>
        <trans-unit id="ac1fa2af0777e89e79281d48c66da8366cebd038" translate="yes" xml:space="preserve">
          <source>Returns the hash fragment when called without any parameters.</source>
          <target state="translated">在没有任何参数的情况下调用时返回哈希片段。</target>
        </trans-unit>
        <trans-unit id="bc4c7aa6bc7052877ba14c90df407adc10fbbf79" translate="yes" xml:space="preserve">
          <source>Returns the newly created injector for this app.</source>
          <target state="translated">返回此应用程序新创建的注入器。</target>
        </trans-unit>
        <trans-unit id="b123de86d068011c16640c3bb3f09ea32bf5b046" translate="yes" xml:space="preserve">
          <source>Returns the symbol when used as getter and self if used as setter.</source>
          <target state="translated">作为getter使用时返回符号,作为setter使用时返回self。</target>
        </trans-unit>
        <trans-unit id="1c26a024ab2a1085285618d5276acb4f34dbdaba" translate="yes" xml:space="preserve">
          <source>Returns the value of given cookie key</source>
          <target state="translated">返回给定cookie键的值。</target>
        </trans-unit>
        <trans-unit id="4b0f507f707432410cc232ce8c8391aa310c2b61" translate="yes" xml:space="preserve">
          <source>Returns the value of the given option</source>
          <target state="translated">返回给定选项的值</target>
        </trans-unit>
        <trans-unit id="f2ef6265c021653aef5295a30225ad8ccd92d4d1" translate="yes" xml:space="preserve">
          <source>Reusing and Overriding Messages</source>
          <target state="translated">重用和覆盖消息</target>
        </trans-unit>
        <trans-unit id="3cf34505e224585e164828aeb4eda4ea440ca96d" translate="yes" xml:space="preserve">
          <source>Right click on the element of interest in your browser and select 'inspect element'. You should see the browser debugger with the element you clicked on highlighted.</source>
          <target state="translated">在浏览器中右击感兴趣的元素,选择 &quot;检查元素&quot;。你应该会看到浏览器调试器中高亮显示你点击的元素。</target>
        </trans-unit>
        <trans-unit id="b1282afa099110ef5bab27cf0d0743ad34ccd017" translate="yes" xml:space="preserve">
          <source>Right now, the &lt;code&gt;InvoiceController&lt;/code&gt; contains all logic of our example. When the application grows it is a good practice to move view-independent logic from the controller into a &lt;a href=&quot;services&quot;&gt;service&lt;/a&gt;, so it can be reused by other parts of the application as well. Later on, we could also change that service to load the exchange rates from the web, e.g. by calling the &lt;a href=&quot;https://exchangeratesapi.io&quot;&gt;exchangeratesapi.io&lt;/a&gt; exchange rate API, without changing the controller.</source>
          <target state="translated">现在， &lt;code&gt;InvoiceController&lt;/code&gt; 包含我们示例的所有逻辑。当应用程序增长时，将与视图无关的逻辑从控制器移动到&lt;a href=&quot;services&quot;&gt;服务中&lt;/a&gt;是一个好习惯，因此它也可以被应用程序的其他部分重用。稍后，我们也可以更改该服务以从Web加载汇率，例如，通过调用&lt;a href=&quot;https://exchangeratesapi.io&quot;&gt;exchangeatesapi.io&lt;/a&gt;汇率API，而无需更改控制器。</target>
        </trans-unit>
        <trans-unit id="388dc3a13e7c2df62a7d0113aee4bc60c22fb08f" translate="yes" xml:space="preserve">
          <source>Rollback all form controls pending updates to the &lt;code&gt;$modelValue&lt;/code&gt;.</source>
          <target state="translated">回滚所有表单控件，以等待对 &lt;code&gt;$modelValue&lt;/code&gt; 更新。</target>
        </trans-unit>
        <trans-unit id="5996cf7c4ec8a2ea89e5c3d6b6268347017db8ab" translate="yes" xml:space="preserve">
          <source>RootRouter</source>
          <target state="translated">RootRouter</target>
        </trans-unit>
        <trans-unit id="a8b9a80d5b6fe314ec0617a6cf219163ebb328aa" translate="yes" xml:space="preserve">
          <source>Route path (matched against &lt;code&gt;$location.path&lt;/code&gt;). If &lt;code&gt;$location.path&lt;/code&gt; contains redundant trailing slash or is missing one, the route will still match and the &lt;code&gt;$location.path&lt;/code&gt; will be updated to add or drop the trailing slash to exactly match the route definition.</source>
          <target state="translated">路由路径（与 &lt;code&gt;$location.path&lt;/code&gt; 匹配）。如果 &lt;code&gt;$location.path&lt;/code&gt; 包含多余的斜杠或缺少斜杠，则路由仍将匹配，并且 &lt;code&gt;$location.path&lt;/code&gt; 将被更新以添加或删除尾斜杠以与路由定义完全匹配。</target>
        </trans-unit>
        <trans-unit id="8dcd12c669cda5e58092102e97cb8d8dd360a58b" translate="yes" xml:space="preserve">
          <source>RouteDefinition</source>
          <target state="translated">RouteDefinition</target>
        </trans-unit>
        <trans-unit id="76a5f5f22494bf6a3c36afbf4839eb11b038893c" translate="yes" xml:space="preserve">
          <source>RouteParams</source>
          <target state="translated">RouteParams</target>
        </trans-unit>
        <trans-unit id="6dcf16e1c5d3e9fd2ae4a4d54c174448fe43e1b6" translate="yes" xml:space="preserve">
          <source>Router</source>
          <target state="translated">Router</target>
        </trans-unit>
        <trans-unit id="8183a5a123ef606156a7236c70c6654dd427ccb8" translate="yes" xml:space="preserve">
          <source>Routers and &quot;Routing Component&quot; instances have a 1:1 correspondence.</source>
          <target state="translated">路由器和 &quot;路由组件 &quot;实例有1:1的对应关系。</target>
        </trans-unit>
        <trans-unit id="83fdf92a177cbfa66587a728de0b8ede57b01242" translate="yes" xml:space="preserve">
          <source>Routes that specify &lt;code&gt;redirectTo&lt;/code&gt; will not have their controllers, template functions or resolves called, the &lt;code&gt;$location&lt;/code&gt; will be changed to the redirect url and route processing will stop. The exception to this is if the &lt;code&gt;redirectTo&lt;/code&gt; is a function that returns &lt;code&gt;undefined&lt;/code&gt;. In this case the route transition occurs as though there was no redirection.</source>
          <target state="translated">指定 &lt;code&gt;redirectTo&lt;/code&gt; 的路由将不会调用其控制器，模板函数或解析程序， &lt;code&gt;$location&lt;/code&gt; 将更改为重定向URL，并且路由处理将停止。例外是如果 &lt;code&gt;redirectTo&lt;/code&gt; 是一个返回 &lt;code&gt;undefined&lt;/code&gt; 的函数。在这种情况下，将发生路由转换，就好像没有重定向一样。</target>
        </trans-unit>
        <trans-unit id="e7b1153512a20069add6781cd8603848df2e4812" translate="yes" xml:space="preserve">
          <source>Run Blocks</source>
          <target state="translated">运行块</target>
        </trans-unit>
        <trans-unit id="6722ce3ddf6850ce91e5f88f346e10e3149acc4e" translate="yes" xml:space="preserve">
          <source>Run blocks are the closest thing in AngularJS to the main method. A run block is the code which needs to run to kickstart the application. It is executed after all of the services have been configured and the injector has been created. Run blocks typically contain code which is hard to unit-test, and for this reason should be declared in isolated modules, so that they can be ignored in the unit-tests.</source>
          <target state="translated">运行块是AngularJS中最接近主方法的东西。运行块是需要运行以启动应用程序的代码。它是在所有的服务都配置好了,并且创建了注入器之后执行的。运行块通常包含难以进行单元测试的代码,因此应该在隔离的模块中声明,以便在单元测试中可以忽略它们。</target>
        </trans-unit>
        <trans-unit id="1c8d88336270bc857b4196cfd5d242d75f0df581" translate="yes" xml:space="preserve">
          <source>Running in Production</source>
          <target state="translated">在生产中运行</target>
        </trans-unit>
        <trans-unit id="6bf708b8b6443fe6b3516682e7295e2172a361cc" translate="yes" xml:space="preserve">
          <source>Runs each of the registered validators (first synchronous validators and then asynchronous validators). If the validity changes to invalid, the model will be set to &lt;code&gt;undefined&lt;/code&gt;, unless &lt;a href=&quot;../directive/ngmodeloptions&quot;&gt;&lt;code&gt;ngModelOptions.allowInvalid&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt;. If the validity changes to valid, it will set the model to the last available valid &lt;code&gt;$modelValue&lt;/code&gt;, i.e. either the last parsed value or the last value set from the scope.</source>
          <target state="translated">运行每个已注册的验证器（首先是同步验证器，然后是异步验证器）。如果有效性更改为无效，则除非&lt;a href=&quot;../directive/ngmodeloptions&quot;&gt; &lt;code&gt;ngModelOptions.allowInvalid&lt;/code&gt; &lt;/a&gt;为 &lt;code&gt;true&lt;/code&gt; ，否则模型将设置为 &lt;code&gt;undefined&lt;/code&gt; 。如果有效性更改为有效，它将把模型设置为最后一个可用的有效 &lt;code&gt;$modelValue&lt;/code&gt; ，即最后一个解析的值或从范围设置的最后一个值。</target>
        </trans-unit>
        <trans-unit id="51a25d271cdba006eac5b5ccdf053324c5952492" translate="yes" xml:space="preserve">
          <source>Runs interval tasks scheduled to be run in the next &lt;code&gt;millis&lt;/code&gt; milliseconds.</source>
          <target state="translated">运行计划在未来要运行间隔任务 &lt;code&gt;millis&lt;/code&gt; 毫秒。</target>
        </trans-unit>
        <trans-unit id="4d98cf965492ebc44005e85cab154fe7869e024c" translate="yes" xml:space="preserve">
          <source>Runs the model -&amp;gt; view pipeline on the current &lt;a href=&quot;ngmodel.ngmodelcontroller#%24modelValue.html&quot;&gt;$modelValue&lt;/a&gt;.</source>
          <target state="translated">在当前&lt;a href=&quot;ngmodel.ngmodelcontroller#%24modelValue.html&quot;&gt;$ modelValue&lt;/a&gt;上运行model- &amp;gt; view管道。</target>
        </trans-unit>
        <trans-unit id="2694e7251db3dfe3d11328de106646d2159d761d" translate="yes" xml:space="preserve">
          <source>Runtime equivalent of the &lt;code&gt;$httpProvider.defaults&lt;/code&gt; property. Allows configuration of default headers, withCredentials as well as request and response transformations.</source>
          <target state="translated">运行时等效于 &lt;code&gt;$httpProvider.defaults&lt;/code&gt; 属性。允许配置默认头，withCredentials以及请求和响应转换。</target>
        </trans-unit>
        <trans-unit id="14edc209d09ed27caa061a338e4aa18cb1b36a06" translate="yes" xml:space="preserve">
          <source>Sample project</source>
          <target state="translated">项目样本</target>
        </trans-unit>
        <trans-unit id="3344d56affca2f26f3349fbdd450598c93585333" translate="yes" xml:space="preserve">
          <source>Sandbox removal</source>
          <target state="translated">拆除沙箱</target>
        </trans-unit>
        <trans-unit id="0f3d939de1df71ef2e1f63f17842b0611b8ef64d" translate="yes" xml:space="preserve">
          <source>Sanitized HTML.</source>
          <target state="translated">经过消毒的HTML。</target>
        </trans-unit>
        <trans-unit id="580aa4cc01f79a6c59249fb583ca11e7ec51d9fe" translate="yes" xml:space="preserve">
          <source>Sanitizes an html string by stripping all potentially dangerous tokens.</source>
          <target state="translated">通过删除所有潜在的危险标记来消毒html字符串。</target>
        </trans-unit>
        <trans-unit id="9e175993438b3e28876508d6f59beb5b4a306211" translate="yes" xml:space="preserve">
          <source>Savvy readers may be wondering what the difference is between &lt;code&gt;link&lt;/code&gt; and &lt;code&gt;controller&lt;/code&gt;. The basic difference is that &lt;code&gt;controller&lt;/code&gt; can expose an API, and &lt;code&gt;link&lt;/code&gt; functions can interact with controllers using &lt;code&gt;require&lt;/code&gt;.</source>
          <target state="translated">精明的读者可能想知道 &lt;code&gt;link&lt;/code&gt; 和 &lt;code&gt;controller&lt;/code&gt; 之间有什么区别。基本区别在于， &lt;code&gt;controller&lt;/code&gt; 可以公开API，而 &lt;code&gt;link&lt;/code&gt; 函数可以使用 &lt;code&gt;require&lt;/code&gt; 与控制器进行交互。</target>
        </trans-unit>
        <trans-unit id="0026a1fa21295bd980ca8124863ef3160c0b9ac7" translate="yes" xml:space="preserve">
          <source>Say for example we have the following template code:</source>
          <target state="translated">比如说我们有以下模板代码。</target>
        </trans-unit>
        <trans-unit id="c722c123fc2fd2bee33be1a4dd76341ecd74052f" translate="yes" xml:space="preserve">
          <source>Schedule the invocation of $apply to occur at a later time. The actual time difference varies across browsers, but is typically around ~10 milliseconds.</source>
          <target state="translated">将$apply的调用安排在稍后的时间进行。实际的时间差在不同的浏览器中会有所不同,但通常在10毫秒左右。</target>
        </trans-unit>
        <trans-unit id="4651a34e4df9619783ad372f905d6d3b84e9d76d" translate="yes" xml:space="preserve">
          <source>Scope</source>
          <target state="translated">Scope</target>
        </trans-unit>
        <trans-unit id="d62f8def19ab323ad10bffef70588ee9540fc2d6" translate="yes" xml:space="preserve">
          <source>Scope $watch Depths</source>
          <target state="translated">范围 $watch 深度</target>
        </trans-unit>
        <trans-unit id="a0d0cff31594de76eaec1ced0bc0427022b195e7" translate="yes" xml:space="preserve">
          <source>Scope $watch Performance Considerations</source>
          <target state="translated">范围$观察性能考虑因素</target>
        </trans-unit>
        <trans-unit id="302b65ae6f117c3e38e7c18bfe45c77b70add9db" translate="yes" xml:space="preserve">
          <source>Scope Events Propagation</source>
          <target state="translated">范围事件传播</target>
        </trans-unit>
        <trans-unit id="14241b753df73c19b8820274254a2c60ac0f3554" translate="yes" xml:space="preserve">
          <source>Scope Hierarchies</source>
          <target state="translated">范围层次结构</target>
        </trans-unit>
        <trans-unit id="235fb31c091c88a3fb9489274d806ccefa3ab9aa" translate="yes" xml:space="preserve">
          <source>Scope Life Cycle</source>
          <target state="translated">范围 生命周期</target>
        </trans-unit>
        <trans-unit id="d0976b956d6be8d6a8545b0183535a72f8ebf106" translate="yes" xml:space="preserve">
          <source>Scope and DOMWindow objects are being compared only by identify (&lt;code&gt;===&lt;/code&gt;).</source>
          <target state="translated">范围和DOMWindow对象仅通过标识（ &lt;code&gt;===&lt;/code&gt; ）进行比较。</target>
        </trans-unit>
        <trans-unit id="916a87217731f57973f048683cb4e97fb8e65898" translate="yes" xml:space="preserve">
          <source>Scope as Data-Model</source>
          <target state="translated">作为数据模型的范围</target>
        </trans-unit>
        <trans-unit id="bc212604b2d7699ce510ae90a60dff8c0da3bd01" translate="yes" xml:space="preserve">
          <source>Scope characteristics</source>
          <target state="translated">范围特点</target>
        </trans-unit>
        <trans-unit id="439fa51120c7e99613ab6ed03151eda647cd3102" translate="yes" xml:space="preserve">
          <source>Scope is the glue between application controller and the view. During the template &lt;a href=&quot;compiler&quot;&gt;linking&lt;/a&gt; phase the &lt;a href=&quot;../api/ng/provider/%24compileprovider#directive.html&quot;&gt;directives&lt;/a&gt; set up &lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24watch.html&quot;&gt;&lt;code&gt;$watch&lt;/code&gt;&lt;/a&gt; expressions on the scope. The &lt;code&gt;$watch&lt;/code&gt; allows the directives to be notified of property changes, which allows the directive to render the updated value to the DOM.</source>
          <target state="translated">范围是应用程序控制器和视图之间的粘合剂。在模板&lt;a href=&quot;compiler&quot;&gt;链接&lt;/a&gt;阶段，&lt;a href=&quot;../api/ng/provider/%24compileprovider#directive.html&quot;&gt;伪指令&lt;/a&gt;在作用域上设置&lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24watch.html&quot;&gt; &lt;code&gt;$watch&lt;/code&gt; &lt;/a&gt;表达式。在 &lt;code&gt;$watch&lt;/code&gt; 允许被通知的属性发生变化，这使得该指令使更新后的值到DOM的指示。</target>
        </trans-unit>
        <trans-unit id="bd3e0ec8cb2c6725e8aebcf009d5a5f0c7046543" translate="yes" xml:space="preserve">
          <source>Scope's &lt;code&gt;$apply()&lt;/code&gt; method transitions through the following stages:</source>
          <target state="translated">Scope的 &lt;code&gt;$apply()&lt;/code&gt; 方法将经历以下阶段：</target>
        </trans-unit>
        <trans-unit id="c23540e5fb551edff0ac95649a1d551f9736d55e" translate="yes" xml:space="preserve">
          <source>Scopes</source>
          <target state="translated">Scopes</target>
        </trans-unit>
        <trans-unit id="e3c4eecb101b53837a98d4900e291d21207bd54b" translate="yes" xml:space="preserve">
          <source>Scopes and Directives</source>
          <target state="translated">范围和指令</target>
        </trans-unit>
        <trans-unit id="b0f972ffeb44595b9c559cde18f280bbcdb9f0ed" translate="yes" xml:space="preserve">
          <source>Scopes and controllers interact with each other in the following situations:</source>
          <target state="translated">在以下情况下,作用域和控制器相互作用。</target>
        </trans-unit>
        <trans-unit id="e2e9569b987d972c9628df7d29a9a7916ae77fe8" translate="yes" xml:space="preserve">
          <source>Scopes are attached to the DOM as &lt;code&gt;$scope&lt;/code&gt; data property, and can be retrieved for debugging purposes. (It is unlikely that one would need to retrieve scopes in this way inside the application.) The location where the root scope is attached to the DOM is defined by the location of &lt;a href=&quot;../api/ng/directive/ngapp&quot;&gt;&lt;code&gt;ng-app&lt;/code&gt;&lt;/a&gt; directive. Typically &lt;code&gt;ng-app&lt;/code&gt; is placed on the &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; element, but it can be placed on other elements as well, if, for example, only a portion of the view needs to be controlled by AngularJS.</source>
          <target state="translated">范围作为 &lt;code&gt;$scope&lt;/code&gt; 数据属性附加到DOM ，并且可以出于调试目的而对其进行检索。 （不太可能需要以这种方式在应用程序内部检索范围。）根范围附加到DOM的位置由&lt;a href=&quot;../api/ng/directive/ngapp&quot;&gt; &lt;code&gt;ng-app&lt;/code&gt; &lt;/a&gt;指令的位置定义。通常， &lt;code&gt;ng-app&lt;/code&gt; 放在 &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; 元素上，但也可以放在其他元素上，例如，如果仅一部分视图需要由AngularJS控制。</target>
        </trans-unit>
        <trans-unit id="4d7b2296b8556dc8d3127680a232536b62a2e88a" translate="yes" xml:space="preserve">
          <source>Scopes can be nested to limit access to the properties of application components while providing access to shared model properties. Nested scopes are either &quot;child scopes&quot; or &quot;isolate scopes&quot;. A &quot;child scope&quot; (prototypically) inherits properties from its parent scope. An &quot;isolate scope&quot; does not. See &lt;a href=&quot;directive#isolating-the-scope-of-a-directive.html&quot;&gt;isolated scopes&lt;/a&gt; for more information.</source>
          <target state="translated">范围可以嵌套以限制对应用程序组件属性的访问，同时提供对共享模型属性的访问。嵌套范围是&amp;ldquo;子范围&amp;rdquo;或&amp;ldquo;隔离范围&amp;rdquo;。&amp;ldquo;子作用域&amp;rdquo;（典型地）从其父作用域继承属性。&amp;ldquo;隔离范围&amp;rdquo;则没有。有关更多信息，请参见&lt;a href=&quot;directive#isolating-the-scope-of-a-directive.html&quot;&gt;隔离范围&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="305cd57d6f32dc5f9b280f00159d0df0f3023e4e" translate="yes" xml:space="preserve">
          <source>Scopes can propagate events in similar fashion to DOM events. The event can be &lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24broadcast.html&quot;&gt;broadcasted&lt;/a&gt; to the scope children or &lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24emit.html&quot;&gt;emitted&lt;/a&gt; to scope parents.</source>
          <target state="translated">范围可以以类似于DOM事件的方式传播事件。该事件可以被&lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24broadcast.html&quot;&gt;广播&lt;/a&gt;到范儿或&lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24emit.html&quot;&gt;发射&lt;/a&gt;到范围的父母。</target>
        </trans-unit>
        <trans-unit id="d1a3bd31aed7d75d260f08509418244324e8a207" translate="yes" xml:space="preserve">
          <source>Scopes provide APIs (&lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24apply.html&quot;&gt;$apply&lt;/a&gt;) to propagate any model changes through the system into the view from outside of the &quot;AngularJS realm&quot; (controllers, services, AngularJS event handlers).</source>
          <target state="translated">范围提供API（&lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24apply.html&quot;&gt;$ apply&lt;/a&gt;），以便将系统中的所有模型更改从&amp;ldquo; AngularJS领域&amp;rdquo;（控制器，服务，AngularJS事件处理程序）的外部传播到视图中。</target>
        </trans-unit>
        <trans-unit id="11ac5700c534742d0e8c9053281de57235e54557" translate="yes" xml:space="preserve">
          <source>Scopes provide APIs (&lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24watch.html&quot;&gt;$watch&lt;/a&gt;) to observe model mutations.</source>
          <target state="translated">范围提供API（&lt;a href=&quot;../api/ng/type/%24rootscope.scope#%24watch.html&quot;&gt;$ watch&lt;/a&gt;）来观察模型突变。</target>
        </trans-unit>
        <trans-unit id="ce449a4334e989d4805feb6f59bfbc096fd1d3f1" translate="yes" xml:space="preserve">
          <source>Scopes provide context against which &lt;a href=&quot;expression&quot;&gt;expressions&lt;/a&gt; are evaluated. For example &lt;code&gt;{{username}}&lt;/code&gt; expression is meaningless, unless it is evaluated against a specific scope which defines the &lt;code&gt;username&lt;/code&gt; property.</source>
          <target state="translated">范围提供了针对&lt;a href=&quot;expression&quot;&gt;表达式&lt;/a&gt;进行评估的上下文。例如， &lt;code&gt;{{username}}&lt;/code&gt; 表达式是没有意义的，除非根据定义了 &lt;code&gt;username&lt;/code&gt; 属性的特定范围对其进行评估。</target>
        </trans-unit>
        <trans-unit id="f25ce1b8a399bd8621a57427a20039b4b13935db" translate="yes" xml:space="preserve">
          <source>Security</source>
          <target state="translated">Security</target>
        </trans-unit>
        <trans-unit id="402cc3b6686cd294cb10dd3f5bccbebd0edd8a9b" translate="yes" xml:space="preserve">
          <source>Security Considerations</source>
          <target state="translated">安全考虑因素</target>
        </trans-unit>
        <trans-unit id="c656e13929f42b006319c02054f25a66cda15f73" translate="yes" xml:space="preserve">
          <source>See &quot;Setting HTTP Headers&quot; and &quot;Transforming Requests and Responses&quot; sections above.</source>
          <target state="translated">请参阅上面的 &quot;设置HTTP头 &quot;和 &quot;转换请求和响应 &quot;部分。</target>
        </trans-unit>
        <trans-unit id="2ce580465f075a927c26bd792f620faeb08178d8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;%24resource#using-interceptors.html&quot;&gt;below&lt;/a&gt; for an example of using interceptors in &lt;code&gt;$resource&lt;/code&gt;.</source>
          <target state="translated">有关在 &lt;code&gt;$resource&lt;/code&gt; 中使用拦截器的示例，请参见&lt;a href=&quot;%24resource#using-interceptors.html&quot;&gt;下文&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9a0f7cdb05f0d1da3c48719d367b1b98eaed811b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;%24rootscope.scope#%24suspend.html&quot;&gt;&lt;code&gt;$rootScope.Scope&lt;/code&gt;&lt;/a&gt; for information about the dangers of using this approach.</source>
          <target state="translated">有关使用此方法的危险的信息，请参见&lt;a href=&quot;%24rootscope.scope#%24suspend.html&quot;&gt; &lt;code&gt;$rootScope.Scope&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9ab6e9c3878b3b65c683ceec3e46af03e5068396" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;%24scedelegate#getTrusted.html&quot;&gt;getTrusted&lt;/a&gt; for the function that will consume those trusted values, and &lt;a href=&quot;%24sce&quot;&gt;$sce&lt;/a&gt; for general documentation about strict contextual escaping.</source>
          <target state="translated">有关将使用这些受信任值的函数，请参见&lt;a href=&quot;%24scedelegate#getTrusted.html&quot;&gt;getTrusted&lt;/a&gt;；有关严格的上下文转义的常规文档，请参见&lt;a href=&quot;%24sce&quot;&gt;$ sce&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="08a2abfd00cc89b00d13557bd045d8a7fc819d20" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../auto/service/%24provide#decorator.html&quot;&gt;$provide.decorator()&lt;/a&gt;.</source>
          <target state="translated">参见&lt;a href=&quot;../../auto/service/%24provide#decorator.html&quot;&gt;$ provide.decorator（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4881e6ea68349cef48089f2f637bc14482f49cf0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../auto/service/%24provide#factory.html&quot;&gt;$provide.factory()&lt;/a&gt;.</source>
          <target state="translated">参见&lt;a href=&quot;../../auto/service/%24provide#factory.html&quot;&gt;$ provide.factory（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bc816366c830b4ded4b6885c7268a758294924b3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../auto/service/%24provide#provider.html&quot;&gt;$provide.provider()&lt;/a&gt;.</source>
          <target state="translated">参见&lt;a href=&quot;../../auto/service/%24provide#provider.html&quot;&gt;$ provide.provider（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="802e7e1e8c14b1ed28b14aaa7fe5ba0c8a8729a5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../auto/service/%24provide#service.html&quot;&gt;$provide.service()&lt;/a&gt;.</source>
          <target state="translated">参见&lt;a href=&quot;../../auto/service/%24provide#service.html&quot;&gt;$ provide.service（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1492fdd835886f46960aff4b15c1ea7527996eee" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../auto/service/%24provide#value.html&quot;&gt;$provide.value()&lt;/a&gt;.</source>
          <target state="translated">参见&lt;a href=&quot;../../auto/service/%24provide#value.html&quot;&gt;$ provide.value（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d4702c3d54b709af87dc2b647ec20769598ffc5d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../directive/ngmodeloptions&quot;&gt;&lt;code&gt;ngModelOptions&lt;/code&gt;&lt;/a&gt; for information about what options can be specified and how model option inheritance works.</source>
          <target state="translated">有关可以指定哪些选项以及模型选项继承如何工作的信息，请参见&lt;a href=&quot;../directive/ngmodeloptions&quot;&gt; &lt;code&gt;ngModelOptions&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="45e9c3ebaad21216152aaedcba8b19ad6f025f8c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../provider/%24animateprovider#register.html&quot;&gt;$animateProvider.register()&lt;/a&gt; and &lt;a href=&quot;../../nganimate&quot;&gt;ngAnimate module&lt;/a&gt; for more information.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;../provider/%24animateprovider#register.html&quot;&gt;$ animateProvider.register（）&lt;/a&gt;和&lt;a href=&quot;../../nganimate&quot;&gt;ngAnimate模块&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="658501b0548d68515ff6b170517e8aa37a8f25fc" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../provider/%24compileprovider#component.html&quot;&gt;$compileProvider.component()&lt;/a&gt;.</source>
          <target state="translated">参见&lt;a href=&quot;../provider/%24compileprovider#component.html&quot;&gt;$ compileProvider.component（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="33da85697433ddb423abb205cb0071fc01ab0c67" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../provider/%24compileprovider#debugInfoEnabled.html&quot;&gt;&lt;code&gt;$compileProvider&lt;/code&gt;&lt;/a&gt; for more.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;../provider/%24compileprovider#debugInfoEnabled.html&quot;&gt; &lt;code&gt;$compileProvider&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8e7660c1158870c4e303c6c71117d715a3757a1a" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../provider/%24compileprovider#directive.html&quot;&gt;$compileProvider.directive()&lt;/a&gt;.</source>
          <target state="translated">参见&lt;a href=&quot;../provider/%24compileprovider#directive.html&quot;&gt;$ compileProvider.directive（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3680a0f086330aee3870b424d3ec342433ba7964" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../provider/%24controllerprovider#register.html&quot;&gt;$controllerProvider.register()&lt;/a&gt;.</source>
          <target state="translated">参见&lt;a href=&quot;../provider/%24controllerprovider#register.html&quot;&gt;$ controllerProvider.register（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="24b5bfecbf9bb5014e4c2c79d7ace634c3181572" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../provider/%24filterprovider#register.html&quot;&gt;$filterProvider.register()&lt;/a&gt;.</source>
          <target state="translated">参见&lt;a href=&quot;../provider/%24filterprovider#register.html&quot;&gt;$ filterProvider.register（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d993d3401264eac8064f38c18942944ab3315a88" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../service/%24route#examples.html&quot;&gt;$route&lt;/a&gt; for an example of configuring and using &lt;code&gt;ngRoute&lt;/code&gt;.</source>
          <target state="translated">有关配置和使用 &lt;code&gt;ngRoute&lt;/code&gt; 的示例，请参见&lt;a href=&quot;../service/%24route#examples.html&quot;&gt;$ route&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="078f7235c75d6b9194ec298e0b95e74d1ffd82cc" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;angular.mock.inject&quot;&gt;inject&lt;/a&gt; for usage example</source>
          <target state="translated">有关用法示例，请参见&lt;a href=&quot;angular.mock.inject&quot;&gt;注入&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="913150b7af43d4803c12014f2495d922c6f53ce1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;di#using-dependency-injection.html&quot;&gt;Using Dependency Injection&lt;/a&gt; to find out which dependencies can be injected in each method.</source>
          <target state="translated">请参阅&lt;a href=&quot;di#using-dependency-injection.html&quot;&gt;使用依赖项注入&lt;/a&gt;以找出可以在每种方法中注入哪些依赖项。</target>
        </trans-unit>
        <trans-unit id="34a10d5c19333054e6759e18c71a55e84a1b5185" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;directive&quot;&gt;&lt;code&gt;$compileProvider.directive&lt;/code&gt;&lt;/a&gt; for more info.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;directive&quot;&gt; &lt;code&gt;$compileProvider.directive&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="788b9222c3928afb09f4b7e9ad07a03aa9ce0a97" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;form.formcontroller#%24error.html&quot;&gt;$error&lt;/a&gt; for a list of built-in validation tokens.</source>
          <target state="translated">有关内置验证令牌的列表，请参见&lt;a href=&quot;form.formcontroller#%24error.html&quot;&gt;$ error&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d368454c2e9095f2ee9538a7b3902eef5c5e921e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://docs.google.com/a/google.com/document/d/1pbtW2yvtmFBikfRrJd8VAsabiFkKezmYZ_PbgdjQOVU/edit&quot;&gt;the design doc&lt;/a&gt; for more information.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;https://docs.google.com/a/google.com/document/d/1pbtW2yvtmFBikfRrJd8VAsabiFkKezmYZ_PbgdjQOVU/edit&quot;&gt;设计文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6c9dadfccbd374155d0b83905fbf6db42471eb01" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/angular/angular.js/issues/14018&quot;&gt;https://github.com/angular/angular.js/issues/14018&lt;/a&gt; for more information.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;https://github.com/angular/angular.js/issues/14018&quot;&gt;https://github.com/angular/angular.js/issues/14018&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="965fb29fc499cec553ef8ae9cda41d3773f4c576" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/angular/angular.js/pull/14221&quot;&gt;https://github.com/angular/angular.js/pull/14221&lt;/a&gt; for more information.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;https://github.com/angular/angular.js/pull/14221&quot;&gt;https://github.com/angular/angular.js/pull/14221&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="98bc08e70cdb8a19e8f8ebd22122e19a9f54a166" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/angular/angular.js/pull/14610#issuecomment-219401099&quot;&gt;https://github.com/angular/angular.js/pull/14610#issuecomment-219401099&lt;/a&gt; for more information.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;https://github.com/angular/angular.js/pull/14610#issuecomment-219401099&quot;&gt;https://github.com/angular/angular.js/pull/14610#issuecomment-219401099&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1c0e9938efdfba23465cbe6b8ab60e447cad7f63" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;module#module-loading.html&quot;&gt;Modules&lt;/a&gt; for more details about &lt;code&gt;run&lt;/code&gt; and &lt;code&gt;config&lt;/code&gt; blocks and &lt;a href=&quot;providers&quot;&gt;Providers&lt;/a&gt; for more information about the different provider types.</source>
          <target state="translated">请参阅&lt;a href=&quot;module#module-loading.html&quot;&gt;模块&lt;/a&gt;的更多详细信息， &lt;code&gt;run&lt;/code&gt; 和 &lt;code&gt;config&lt;/code&gt; 块和&lt;a href=&quot;providers&quot;&gt;供应商&lt;/a&gt;有关不同提供商类型的详细信息。</target>
        </trans-unit>
        <trans-unit id="3bc920667f9c77737168e5d37cbdaf815ee9f2e4" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;ngclick&quot;&gt;ngClick&lt;/a&gt;</source>
          <target state="translated">看到&lt;a href=&quot;ngclick&quot;&gt;ngClick&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4c8ebb4aa13aea65763e9630efc734b8dacab942" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;ngcookies/service/%24cookies&quot;&gt;&lt;code&gt;$cookies&lt;/code&gt;&lt;/a&gt; for usage.</source>
          <target state="translated">请参阅&lt;a href=&quot;ngcookies/service/%24cookies&quot;&gt; &lt;code&gt;$cookies&lt;/code&gt; &lt;/a&gt;的用法。</target>
        </trans-unit>
        <trans-unit id="0b00bd75d710a9877128c13b28d66fe558262c35" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;ngresource/provider/%24resourceprovider&quot;&gt;&lt;code&gt;$resourceProvider&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;ngresource/service/%24resource&quot;&gt;&lt;code&gt;$resource&lt;/code&gt;&lt;/a&gt; for usage.</source>
          <target state="translated">有关用法，请参见&lt;a href=&quot;ngresource/provider/%24resourceprovider&quot;&gt; &lt;code&gt;$resourceProvider&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;ngresource/service/%24resource&quot;&gt; &lt;code&gt;$resource&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
