<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="cypress">
    <body>
      <group id="cypress">
        <trans-unit id="b0e02fe52a7524597a122925192b6eb5f21a197c" translate="yes" xml:space="preserve">
          <source>Targeting the element above by &lt;code&gt;tag&lt;/code&gt;, &lt;code&gt;class&lt;/code&gt; or &lt;code&gt;id&lt;/code&gt; is very volatile and highly subject to change. You may swap out the element, you may refactor CSS and update ID&amp;rsquo;s, or you may add or remove classes that affect the style of the element.</source>
          <target state="translated">以 &lt;code&gt;tag&lt;/code&gt; ， &lt;code&gt;class&lt;/code&gt; 或 &lt;code&gt;id&lt;/code&gt; 为目标定位上面的元素非常不稳定，并且极易发生变化。您可以换出元素，可以重构CSS并更新ID，或者可以添加或删除影响元素样式的类。</target>
        </trans-unit>
        <trans-unit id="ed672f0d303bcf15159beca38483d0c2a2d11a4f" translate="yes" xml:space="preserve">
          <source>Tasks are merged automatically</source>
          <target state="translated">任务自动合并</target>
        </trans-unit>
        <trans-unit id="a06e62da0340bb602ffbe3e95da5882ac31107e3" translate="yes" xml:space="preserve">
          <source>Tasks must end</source>
          <target state="translated">任务必须结束</target>
        </trans-unit>
        <trans-unit id="4501d02d62245855e16d36daca8a82e7db839dff" translate="yes" xml:space="preserve">
          <source>Tasks registered in the plugins file with the &amp;lsquo;task&amp;rsquo; event are merged with any tasks registered by previous calls to &lt;code&gt;on('task')&lt;/code&gt;, instead of overwriting the previous tasks. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2284&quot;&gt;#2284&lt;/a&gt;.</source>
          <target state="translated">在插件文件中通过'task'事件注册的任务将与先前对 &lt;code&gt;on('task')&lt;/code&gt; 的调用注册的所有任务合并，而不是覆盖先前的任务。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2284&quot;&gt;＃2284&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3183c1609c7e644095493678e46ceee67a34f8c3" translate="yes" xml:space="preserve">
          <source>Tasks that do not end are not supported</source>
          <target state="translated">不支持不结束的任务</target>
        </trans-unit>
        <trans-unit id="658b6d3aca3d0b2d0a646705881424c846b0a1e4" translate="yes" xml:space="preserve">
          <source>Technically the &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt;, and first &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; in the example below all contain &amp;ldquo;apples&amp;rdquo;.</source>
          <target state="translated">从技术上讲，下面示例中的 &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; ， &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; ， &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; 和第一个 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 都包含&amp;ldquo;苹果&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="5f335cd60c716771bd7383f170ff4943875ed401" translate="yes" xml:space="preserve">
          <source>Temporarily ignoring the &lt;code&gt;--reporter&lt;/code&gt; option for headless / CI runs. Currently it is locked to the &lt;code&gt;spec&lt;/code&gt; reporter, which is the default. This will be fixed in the next few patch releases.</source>
          <target state="translated">对于无头/ CI运行，暂时忽略 &lt;code&gt;--reporter&lt;/code&gt; 选项。当前，它已锁定到 &lt;code&gt;spec&lt;/code&gt; 报告器，这是默认设置。在接下来的几个修补程序版本中将解决此问题。</target>
        </trans-unit>
        <trans-unit id="a0a01341c0f853915868524cf2486d0b5478d5e6" translate="yes" xml:space="preserve">
          <source>Temporary trade-offs:</source>
          <target state="translated">暂时的取舍。</target>
        </trans-unit>
        <trans-unit id="1ecdafaa980fea1d90e97830ce7b1eb728dc022f" translate="yes" xml:space="preserve">
          <source>Test Angular component using Cypress Test Runner</source>
          <target state="translated">使用Cypress Test Runner测试Angular组件</target>
        </trans-unit>
        <trans-unit id="45b447602b36cf493856860d1acb9e37b9f5c43f" translate="yes" xml:space="preserve">
          <source>Test Code causing error</source>
          <target state="translated">测试代码导致错误</target>
        </trans-unit>
        <trans-unit id="b3b22029d6c82b1352e5e952f1c15a89c8280b8b" translate="yes" xml:space="preserve">
          <source>Test Configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="684040738bd04ccfa68be014ee4a6b87c8ec87d2" translate="yes" xml:space="preserve">
          <source>Test Cycle.js components using Cypress Test Runner</source>
          <target state="translated">使用Cypress Test Runner测试Cycle.js组件。</target>
        </trans-unit>
        <trans-unit id="9ac21f97f2f4903c9ac59320708a58ef2ddcdc01" translate="yes" xml:space="preserve">
          <source>Test Failures</source>
          <target state="translated">测试失败</target>
        </trans-unit>
        <trans-unit id="cac96a74d0be4987ba8a26863c497ad605566650" translate="yes" xml:space="preserve">
          <source>Test File Errors</source>
          <target state="translated">测试文件错误</target>
        </trans-unit>
        <trans-unit id="97c56f7b0b5b324631c5113e306924e2d7bb2150" translate="yes" xml:space="preserve">
          <source>Test Hyperapp components and applications using Cypress Test Runner</source>
          <target state="translated">使用Cypress Test Runner测试Hyperapp组件和应用。</target>
        </trans-unit>
        <trans-unit id="1b3f6c43c3fdfa3791f14217f9bc76c0c9ffc66c" translate="yes" xml:space="preserve">
          <source>Test IDs have been removed. You will no longer see Cypress insert IDs into your test files. This was a feature we implemented on day 1 - the idea being we could track test performance and do regression analysis. Unfortunately, it will be a long time before we actually implement the data science to make this happen. For the time being, IDs presented unnecessary technical complexity and challenges with no real upside. We recommend you remove all of your existing IDs. We&amp;rsquo;ve added a new command to the CLI tool that can do this in one shot. &lt;code&gt;cypress remove:ids&lt;/code&gt; You may see IDs be reintroduced at a later time when we provide analytics.</source>
          <target state="translated">测试ID已被删除。您将不再看到Cypress将ID插入测试文件中。这是我们在第一天实现的功能-我们可以跟踪测试性能并进行回归分析。不幸的是，要真正实现数据科学还需要很长时间。暂时，ID带来了不必要的技术复杂性和挑战，没有真正的上行空间。我们建议您删除所有现有的ID。我们已经在CLI工具中添加了一个新命令，可以一次性完成此操作。 &lt;code&gt;cypress remove:ids&lt;/code&gt; 您可能会在以后提供分析时看到ID重新引入。</target>
        </trans-unit>
        <trans-unit id="079919ff5fc4373dfcb24a2ad44fd01025032425" translate="yes" xml:space="preserve">
          <source>Test React components using Cypress Test Runner</source>
          <target state="translated">使用Cypress Test Runner测试React组件</target>
        </trans-unit>
        <trans-unit id="ba23c3620e9948b76588caefb2603502db66c5a1" translate="yes" xml:space="preserve">
          <source>Test Runner</source>
          <target state="translated">测试员</target>
        </trans-unit>
        <trans-unit id="cda4f532ce99974cb637e8d6f67e4706bfbe7571" translate="yes" xml:space="preserve">
          <source>Test Runner errors</source>
          <target state="translated">测试运行器错误</target>
        </trans-unit>
        <trans-unit id="a223bfbd68697f8e9fc89de83eefd9ae1e285aab" translate="yes" xml:space="preserve">
          <source>Test Structure</source>
          <target state="translated">测试结构</target>
        </trans-unit>
        <trans-unit id="88dbcf96fc5b5729297cd88ad60e3d7f31ee5511" translate="yes" xml:space="preserve">
          <source>Test Svelte components using Cypress Test Runner</source>
          <target state="translated">使用Cypress Test Runner测试Svelte组件。</target>
        </trans-unit>
        <trans-unit id="20dca8620c56eeea52221b877b96c856386b8250" translate="yes" xml:space="preserve">
          <source>Test Vue.js components using Cypress Test Runner</source>
          <target state="translated">使用Cypress Test Runner测试Vue.js组件。</target>
        </trans-unit>
        <trans-unit id="3be2bd05b49605e590fd06cfc5eec534c08a69e6" translate="yes" xml:space="preserve">
          <source>Test WebSocket connections with Cypress</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3820dfcc1b257d6b9f196f52bf1a07e5340333c" translate="yes" xml:space="preserve">
          <source>Test configuration: &lt;code&gt;browser&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="785c5615fa9e747dec82330a8553899ccd55ddfd" translate="yes" xml:space="preserve">
          <source>Test coverage around server endpoints</source>
          <target state="translated">围绕服务器端点的测试范围</target>
        </trans-unit>
        <trans-unit id="fe862656c41fd2b7f1ad701941cf16e817f5737e" translate="yes" xml:space="preserve">
          <source>Test duration is now correct and only updates when tests finish.</source>
          <target state="translated">测试持续时间现在是正确的,只有在测试结束时才会更新。</target>
        </trans-unit>
        <trans-unit id="4c35b759a061459f65e34712cde826c33cc179bc" translate="yes" xml:space="preserve">
          <source>Test edge cases like &amp;lsquo;empty views&amp;rsquo; by forcing your server to send empty responses.</source>
          <target state="translated">通过强制服务器发送空响应来测试&amp;ldquo;空视图&amp;rdquo;等边缘情况。</target>
        </trans-unit>
        <trans-unit id="5f8c2e3e872919f39dd711b1b7aa61d67dc9f0d5" translate="yes" xml:space="preserve">
          <source>Test email and SMS messages using Mailosaur</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13f59ca81ca01c147b6c425183bbd058e680331f" translate="yes" xml:space="preserve">
          <source>Test file</source>
          <target state="translated">测试文件</target>
        </trans-unit>
        <trans-unit id="5cb661edf85cf7a89931f11d9df57469a7519ae8" translate="yes" xml:space="preserve">
          <source>Test file:</source>
          <target state="translated">测试文件。</target>
        </trans-unit>
        <trans-unit id="b0aea331ff22ddf611bb144442b32469de7af26a" translate="yes" xml:space="preserve">
          <source>Test files</source>
          <target state="translated">测试文件</target>
        </trans-unit>
        <trans-unit id="1c67907bb75ac9bc7af8d108be1e9ff81781d51a" translate="yes" xml:space="preserve">
          <source>Test files are located in &lt;code&gt;cypress/integration&lt;/code&gt; by default, but can be &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;configured&lt;/a&gt; to another directory. Test files may be written as:</source>
          <target state="translated">测试文件默认位于 &lt;code&gt;cypress/integration&lt;/code&gt; 中，但可以&lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;配置&lt;/a&gt;到另一个目录。测试文件可以写为：</target>
        </trans-unit>
        <trans-unit id="cff28057f5463951009da03ec203080455f94932" translate="yes" xml:space="preserve">
          <source>Test files with JS syntax errors are now &lt;a href=&quot;error-messages&quot;&gt;handled&lt;/a&gt; and we provide a GUI that points to the exact line/column number. Additionally we print these out during &lt;code&gt;cypress run&lt;/code&gt; and exit the process with &lt;code&gt;code 1&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/293&quot;&gt;#293&lt;/a&gt;.</source>
          <target state="translated">现在&lt;a href=&quot;error-messages&quot;&gt;处理&lt;/a&gt;带有JS语法错误的测试文件，并且我们提供了一个指向确切行号/列号的GUI。另外，我们在 &lt;code&gt;cypress run&lt;/code&gt; 过程中将它们打印出来，并使用 &lt;code&gt;code 1&lt;/code&gt; 退出该过程。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/293&quot;&gt;＃293&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fc7bec86e616f154ed51616f33587b0101622fd3" translate="yes" xml:space="preserve">
          <source>Test how your application responds to errors on your server by &lt;a href=&quot;../../api/commands/route&quot;&gt;modifying response status codes to be 500&lt;/a&gt; so that timers or polls automatically fire without having to wait for the required time in your tests.</source>
          <target state="translated">通过&lt;a href=&quot;../../api/commands/route&quot;&gt;将响应状态代码修改为500&lt;/a&gt;，测试应用程序对服务器上的错误的响应方式，以使计时器或轮询自动触发，而无需等待测试中所需的时间。</target>
        </trans-unit>
        <trans-unit id="4d4924c788e474a6f6f835f31abc044aab8482c7" translate="yes" xml:space="preserve">
          <source>Test retries display</source>
          <target state="translated">测试重试显示</target>
        </trans-unit>
        <trans-unit id="f8a02496888c99a946d36ee9a569eec11d55f3a9" translate="yes" xml:space="preserve">
          <source>Test that your application was redirected</source>
          <target state="translated">测试您的应用程序是否被重定向</target>
        </trans-unit>
        <trans-unit id="3cb5130b197cdce7360c93e1118149d60b2bc107" translate="yes" xml:space="preserve">
          <source>TestRail Reporter which auto-set status for specific TestRun for Cypress.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5fc42bb7b3a718d11213075b60c9ef2803237c1" translate="yes" xml:space="preserve">
          <source>Testing Strategies</source>
          <target state="translated">测试策略</target>
        </trans-unit>
        <trans-unit id="49e5de6fdda8606102fc8691dbe10c9bec340297" translate="yes" xml:space="preserve">
          <source>Testing Your App</source>
          <target state="translated">测试您的应用程序</target>
        </trans-unit>
        <trans-unit id="87359bb81cb05c7edf5ce752c31754c53803626b" translate="yes" xml:space="preserve">
          <source>Testing a chart with Cypress and Applitools</source>
          <target state="translated">用Cypress和Applitools测试图表。</target>
        </trans-unit>
        <trans-unit id="c44ae5dd646e7249556f2ac4515fec404f156bf8" translate="yes" xml:space="preserve">
          <source>Testing a datalist</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dcbec88eff56a20a82e5e2ead9ad80b847e97ab" translate="yes" xml:space="preserve">
          <source>Testing drag and drop is now possible using the new &lt;a href=&quot;../../api/commands/trigger&quot;&gt;&lt;code&gt;.trigger()&lt;/code&gt;&lt;/a&gt; command. See our &lt;a href=&quot;recipes#Form-Interactions&quot;&gt;new recipe&lt;/a&gt; for details on how. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/386&quot;&gt;#386&lt;/a&gt;.</source>
          <target state="translated">现在可以使用新的&lt;a href=&quot;../../api/commands/trigger&quot;&gt; &lt;code&gt;.trigger()&lt;/code&gt; &lt;/a&gt;命令测试拖放。有关详细信息，请参见我们的&lt;a href=&quot;recipes#Form-Interactions&quot;&gt;新食谱&lt;/a&gt;。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/386&quot;&gt;＃386&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f26bd8c55d1a6f05d12859bc42e204f28166f380" translate="yes" xml:space="preserve">
          <source>Testing file downloads is application specific.</source>
          <target state="translated">测试文件下载是针对应用程序的。</target>
        </trans-unit>
        <trans-unit id="6218432ce729be2532355a40274a692c0797ea06" translate="yes" xml:space="preserve">
          <source>Testing file uploads is application specific.</source>
          <target state="translated">测试文件上传是针对应用的。</target>
        </trans-unit>
        <trans-unit id="9323db978d34c408e5948d20005b479de390a5c5" translate="yes" xml:space="preserve">
          <source>Testing how an application renders a drawing with Cypress and Percy</source>
          <target state="translated">测试应用程序如何使用Cypress和Percy渲染图形</target>
        </trans-unit>
        <trans-unit id="820f2385c6bb09513ada4d656767795478210480" translate="yes" xml:space="preserve">
          <source>Testing in Cypress is all about &lt;strong&gt;readability&lt;/strong&gt; and &lt;strong&gt;simplicity&lt;/strong&gt;. You don&amp;rsquo;t have to do that much actual programming to get a lot done. You also don&amp;rsquo;t need to worry about keeping your code as DRY as possible. Test code serves a different purpose than app code. Understandability and debuggability should be prioritized above all else.</source>
          <target state="translated">赛普拉斯的测试全部涉及&lt;strong&gt;可读性&lt;/strong&gt;和&lt;strong&gt;简单性&lt;/strong&gt;。您不必做太多实际的编程就可以完成很多工作。您也不必担心将代码保持为DRY。测试代码的用途不同于应用程序代码。可理解性和可调试性应放在首位。</target>
        </trans-unit>
        <trans-unit id="987fb38c63f084d377d5e8e7b83c17d2bebe4c2c" translate="yes" xml:space="preserve">
          <source>Testing log in when your app uses another provider via OAuth.</source>
          <target state="translated">当您的应用程序通过OAuth使用其他提供商时,测试登录。</target>
        </trans-unit>
        <trans-unit id="a0af8ba8d2ce34d8769504c4e3a1a1f0f04fed61" translate="yes" xml:space="preserve">
          <source>Testing strategies</source>
          <target state="translated">测试策略</target>
        </trans-unit>
        <trans-unit id="19a78762a693323b4863f8b567d657f5448f8977" translate="yes" xml:space="preserve">
          <source>Testing this in Cypress is possible.</source>
          <target state="translated">在Cypress中测试是可以的。</target>
        </trans-unit>
        <trans-unit id="9f0d65a8af0949e08dc54174556e334ee7dac2c3" translate="yes" xml:space="preserve">
          <source>Testing web navigation, DOM querying, and writing assertions.</source>
          <target state="translated">测试网页导航、DOM查询和编写断言。</target>
        </trans-unit>
        <trans-unit id="767dc218c420e0ddc259107428118fa4f0ee6115" translate="yes" xml:space="preserve">
          <source>Tests are more robust with much less flake.</source>
          <target state="translated">测试更稳健,片状物更少。</target>
        </trans-unit>
        <trans-unit id="612ac8c57ae50bf5a7484b94d7275d3b10ef625d" translate="yes" xml:space="preserve">
          <source>Tests in the Command Log now automatically expand when specific commands take longer than &lt;code&gt;1000ms&lt;/code&gt; to run. Previously when running more than 1 test we did not expand commands until a test failed. Now they will be expanded and automatically collapsed whenever a single command is taking a long time to finish.</source>
          <target state="translated">现在，当特定命令运行时间超过 &lt;code&gt;1000ms&lt;/code&gt; 时，命令日志中的测试会自动扩展。以前，当运行多个测试时，直到测试失败，我们才扩展命令。现在，只要单个命令需要很长时间才能完成，它们就会展开并自动折叠。</target>
        </trans-unit>
        <trans-unit id="b0169128041b3957ed44e94d98d0829e14961c16" translate="yes" xml:space="preserve">
          <source>Tests run</source>
          <target state="translated">运行测试</target>
        </trans-unit>
        <trans-unit id="0bbcaca79f1e7b9635d46bb164447d7de370801c" translate="yes" xml:space="preserve">
          <source>Tests should reload inside of Cypress faster when they are changed.</source>
          <target state="translated">当测试被改变时,在Cypress内部重新加载的速度应该更快。</target>
        </trans-unit>
        <trans-unit id="bcd4c87389930f2e529910fcb4bcf95e4dbdfc41" translate="yes" xml:space="preserve">
          <source>Tests written in Cypress are easy to read and understand. Our API comes fully baked, on top of tools you are familiar with already.</source>
          <target state="translated">用Cypress编写的测试易于阅读和理解。我们的API完全是在你熟悉的工具之上构建的。</target>
        </trans-unit>
        <trans-unit id="c3328c39b0e29f78e9ff45db674248b1d245887d" translate="yes" xml:space="preserve">
          <source>Text</source>
          <target state="translated">Text</target>
        </trans-unit>
        <trans-unit id="0ab4fd8cd60aba5aadde57dad2f92ed39a5a6668" translate="yes" xml:space="preserve">
          <source>Text Content</source>
          <target state="translated">文本内容</target>
        </trans-unit>
        <trans-unit id="8b07c7a76738a0d0742c58a0fd9c4b096a90a2dd" translate="yes" xml:space="preserve">
          <source>Text Content:</source>
          <target state="translated">文字内容。</target>
        </trans-unit>
        <trans-unit id="c913e1fc617797e412febd0a9835387588be75fd" translate="yes" xml:space="preserve">
          <source>Text passed to &lt;code&gt;.type()&lt;/code&gt; may also include any of these modifier character sequences:</source>
          <target state="translated">传递给 &lt;code&gt;.type()&lt;/code&gt; 的文本还可以包含以下任何修饰符字符序列：</target>
        </trans-unit>
        <trans-unit id="004ee48204cbf8f6e50a249678385dc28deeafd1" translate="yes" xml:space="preserve">
          <source>Text passed to &lt;code&gt;.type()&lt;/code&gt; may include any of the special character sequences below.</source>
          <target state="translated">传递给 &lt;code&gt;.type()&lt;/code&gt; 的文本可能包含以下任何特殊字符序列。</target>
        </trans-unit>
        <trans-unit id="500a2afe5961bdf6037b8c8c1a71294834e1855b" translate="yes" xml:space="preserve">
          <source>Text passed to &lt;code&gt;.type()&lt;/code&gt; may include any of the special character sequences below. These characters will pass along the correct &lt;code&gt;keyCode&lt;/code&gt;, &lt;code&gt;key&lt;/code&gt;, and &lt;code&gt;which&lt;/code&gt; codes to any events issued during &lt;code&gt;.type()&lt;/code&gt;. Some of the special character sequences may perform actions during typing such as &lt;code&gt;{movetoend}&lt;/code&gt;, &lt;code&gt;{movetostart}&lt;/code&gt;, or &lt;code&gt;{selectall}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faf6dd9f5ae7bd37c385bcaa86a34ff7cccc7efc" translate="yes" xml:space="preserve">
          <source>That is fine - but even if this is the case, it should not go in an &lt;code&gt;after&lt;/code&gt; or &lt;code&gt;afterEach&lt;/code&gt; hook. Why? So far we have been talking about logging out, but let&amp;rsquo;s use a different example. Let&amp;rsquo;s use the pattern of needing to reset your database.</source>
          <target state="translated">很好-但即使是这种情况，也不应该在 &lt;code&gt;after&lt;/code&gt; 或 &lt;code&gt;afterEach&lt;/code&gt; 钩子中插入。为什么？到目前为止，我们一直在讨论注销，但是让我们使用另一个示例。让我们使用需要重置数据库的模式。</target>
        </trans-unit>
        <trans-unit id="ea2ff1b57db012138aa92fb7e611c0e7d4186bdd" translate="yes" xml:space="preserve">
          <source>That is it! In any other circumstance you will have flaky tests if you try to rely on the state of the DOM for conditional testing.</source>
          <target state="translated">就是这样! 在任何其他情况下,如果你试图依靠DOM的状态进行条件测试,你将会有片状的测试。</target>
        </trans-unit>
        <trans-unit id="1300f8ec5ea171cc2d2f00e23cbbc505627c6df6" translate="yes" xml:space="preserve">
          <source>That leaves most other commands including all DOM based commands to time out by default after 4000ms.</source>
          <target state="translated">这使得大多数其他命令包括所有基于DOM的命令在4000ms后默认超时。</target>
        </trans-unit>
        <trans-unit id="3b9c1d4c4a52e35083bd36e43700ea84e4aa5c6b" translate="yes" xml:space="preserve">
          <source>That means that your event listener callbacks will be invoked, but don&amp;rsquo;t expect the browser to actually &amp;ldquo;do&amp;rdquo; anything for these events. For the most part, it shouldn&amp;rsquo;t matter, which is why &lt;code&gt;.trigger()&lt;/code&gt; is an excellent stop-gap if the command / event you&amp;rsquo;re looking for hasn&amp;rsquo;t been implemented yet.</source>
          <target state="translated">这意味着将调用事件侦听器回调，但是不要期望浏览器为这些事件实际&amp;ldquo;做任何事情&amp;rdquo;。在大多数情况下，这无关紧要，这就是为什么如果您要查找的命令/事件尚未实现， &lt;code&gt;.trigger()&lt;/code&gt; 是一个很好的权宜之计。</target>
        </trans-unit>
        <trans-unit id="b94b5f5a01c6059a803e03e24028191a3878f6cc" translate="yes" xml:space="preserve">
          <source>That means you do not have to visit a login page, type in a username and password and wait for the page to load and/or redirect for every test you run. Cypress gives you the ability to take shortcuts and programmatically log in. With commands like &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt;, you can send HTTP requests directly, yet have those requests synchronized with the browser. Cookies are automatically sent and applied back. Worried about CORS? Don&amp;rsquo;t be, it is completely bypassed. The power to choose when to test like a user and when to skip slow and repetitive parts is yours.</source>
          <target state="translated">这意味着您不必访问登录页面，无需输入用户名和密码，也无需等待页面加载和/或重定向即可运行每个测试。赛普拉斯使您能够采用快捷方式并以编程方式登录。使用诸如&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; 之&lt;/a&gt;类的命令，您可以直接发送HTTP请求，但仍可将这些请求与浏览器同步。Cookies会自动发送并应用回去。担心CORS？不会，它已被完全绕过。选择何时像用户一样进行测试以及何时跳过较慢和重复的部分的权力由您决定。</target>
        </trans-unit>
        <trans-unit id="ba33067743b99d97ffad5f5bd4b128afc17a4664" translate="yes" xml:space="preserve">
          <source>That said, modern web testing has a few wrinkles that every team experiences, so here are some quick tips on common situations you&amp;rsquo;re likely to run into.</source>
          <target state="translated">也就是说，现代的网络测试存在每个团队都会遇到的一些问题，因此这里有一些关于您可能会遇到的常见情况的快速提示。</target>
        </trans-unit>
        <trans-unit id="0ec74667e0e561a8e38fb999b86e217be3516b2b" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s it! It couldn&amp;rsquo;t be simpler!</source>
          <target state="translated">而已！这再简单不过了！</target>
        </trans-unit>
        <trans-unit id="fefe48b45c69ed04e4712438e1f0ac95b90bfac1" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s no problem - you just have to reinstall them &lt;strong&gt;once&lt;/strong&gt; in the Cypress launched browser. We&amp;rsquo;ll continue to use this Cypress testing profile on subsequent launches so all of your configuration will be preserved.</source>
          <target state="translated">没问题-您只需要在赛普拉斯启动的浏览器中重新安装&lt;strong&gt;一次&lt;/strong&gt;即可。我们将在以后的发布中继续使用此赛普拉斯测试配置文件，因此将保留所有配置。</target>
        </trans-unit>
        <trans-unit id="65a6fe73a977ff8262258084d334745480bb8a09" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s why the test should be written like this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="042507a703992c18597517c49feab94f84062bfe" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;Can&amp;rsquo;t start server&amp;rdquo; error displayed in the Desktop-GUI no longer prevents you from interacting in the Desktop App. It now displays as a warning. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/407&quot;&gt;#407&lt;/a&gt;.</source>
          <target state="translated">桌面GUI中显示的&amp;ldquo;无法启动服务器&amp;rdquo;错误不再阻止您在桌面应用中进行交互。现在显示为警告。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/407&quot;&gt;＃407&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f1cec37857697fa0e206424fca893a94130d50b5" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;browser&amp;rdquo; argument can be set to &amp;ldquo;chrome&amp;rdquo;, &amp;ldquo;canary&amp;rdquo;, &amp;ldquo;chromium&amp;rdquo;, or &amp;ldquo;electron&amp;rdquo; to launch a browser detected on your system. Cypress will attempt to automatically find the installed browser for you.</source>
          <target state="translated">可以将&amp;ldquo;浏览器&amp;rdquo;参数设置为&amp;ldquo;铬&amp;rdquo;，&amp;ldquo;金丝雀&amp;rdquo;，&amp;ldquo;铬&amp;rdquo;或&amp;ldquo;电子&amp;rdquo;，以启动在系统上检测到的浏览器。赛普拉斯将尝试自动为您找到已安装的浏览器。</target>
        </trans-unit>
        <trans-unit id="1be9b25201f7ea05530acb9b484716955fcce74c" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;browser&amp;rdquo; option allows you to specify the path to a custom browser to use with Cypress:</source>
          <target state="translated">&amp;ldquo;浏览器&amp;rdquo;选项使您可以指定要与赛普拉斯一起使用的自定义浏览器的路径：</target>
        </trans-unit>
        <trans-unit id="5cb2b71ccaaec730e76706cfb04ac5382bce55f4" translate="yes" xml:space="preserve">
          <source>The --ci-build-id, --group, or --parallel flags can only be used when recording</source>
          <target state="translated">--ci-build-id、--group或--parallel标志只能在录制时使用。</target>
        </trans-unit>
        <trans-unit id="10271412ed48e7b2c3a821760f7f3e21fdc28ef8" translate="yes" xml:space="preserve">
          <source>The 3rd party site may be having issues outside of your control.</source>
          <target state="translated">第三方网站可能存在您无法控制的问题。</target>
        </trans-unit>
        <trans-unit id="45fa958b109e3120bb7b68f4af8ae88f264bebe1" translate="yes" xml:space="preserve">
          <source>The 3rd party site may be running A/B campaigns.</source>
          <target state="translated">第三方网站可能正在运行A/B活动。</target>
        </trans-unit>
        <trans-unit id="69b160a0d513b1031830e4e9865539c67f783654" translate="yes" xml:space="preserve">
          <source>The 3rd party site may detect you are testing via a script and block you.</source>
          <target state="translated">第三方网站可能会通过脚本检测到你正在进行测试,并阻止你。</target>
        </trans-unit>
        <trans-unit id="4ea95e01a638b35f63d896c5a28cc82c06705c81" translate="yes" xml:space="preserve">
          <source>The 3rd party site may have changed or updated its content.</source>
          <target state="translated">第三方网站可能会更改或更新其内容。</target>
        </trans-unit>
        <trans-unit id="5d1329eeccee5ff8ee28e3dfe3710d40f17336ea" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; to a new page</source>
          <target state="translated">的&lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt;到新页面</target>
        </trans-unit>
        <trans-unit id="47ae6fd59bc7328ff982b66e65bc0fee55a59d11" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../api/commands/clock&quot;&gt;&lt;code&gt;cy.clock()&lt;/code&gt;&lt;/a&gt; type definition now allows for type &lt;code&gt;Date&lt;/code&gt;. Fixed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4106&quot;&gt;#4106&lt;/a&gt;.</source>
          <target state="translated">该&lt;a href=&quot;../../api/commands/clock&quot;&gt; &lt;code&gt;cy.clock()&lt;/code&gt; &lt;/a&gt;类型定义现在允许类型的 &lt;code&gt;Date&lt;/code&gt; 。已在&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4106&quot;&gt;＃4106中&lt;/a&gt;修复。</target>
        </trans-unit>
        <trans-unit id="d6da30a23ecacb7c6f53a464950ef025c72a82e6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; command is capable of accessing aliases with a special syntax using the &lt;code&gt;@&lt;/code&gt; character:</source>
          <target state="translated">所述&lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt;命令能够使用别名访问与特殊的语法的 &lt;code&gt;@&lt;/code&gt; 字符：</target>
        </trans-unit>
        <trans-unit id="7260030afa06bcb585f32c860d142af2d281f369" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../api/commands/route&quot;&gt;Routes instrument panel&lt;/a&gt; now displays the column: &lt;code&gt;Stubbed&lt;/code&gt; instead of &lt;code&gt;Status&lt;/code&gt;, which indicates whether a route is stubbing matching XHR&amp;rsquo;s.</source>
          <target state="translated">现在，&amp;ldquo; &lt;a href=&quot;../../api/commands/route&quot;&gt;路线&amp;rdquo;仪器面板&lt;/a&gt;显示一列：&amp;ldquo;已 &lt;code&gt;Stubbed&lt;/code&gt; 而不是&amp;ldquo; &lt;code&gt;Status&lt;/code&gt; ，它指示路由是否已存根与XHR匹配的根。</target>
        </trans-unit>
        <trans-unit id="1c5a8a7995f1ebf4a272d577387cd9a18f7268d2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt; command allows us to pass a callback function that takes the yielded subject as its first argument. This works just like &lt;a href=&quot;../../api/commands/then&quot;&gt;&lt;code&gt;.then()&lt;/code&gt;&lt;/a&gt;, except Cypress automatically &lt;strong&gt;waits and retries&lt;/strong&gt; for everything inside of the callback function to pass.</source>
          <target state="translated">的&lt;a href=&quot;../../api/commands/should&quot;&gt; &lt;code&gt;.should()&lt;/code&gt; &lt;/a&gt;命令允许我们传递的回调函数，是以得到受试者作为第一个参数。该功能与&lt;a href=&quot;../../api/commands/then&quot;&gt; &lt;code&gt;.then()&lt;/code&gt; 一样&lt;/a&gt;，但Cypress会自动&lt;strong&gt;等待并重试&lt;/strong&gt;回调函数中的所有内容。</target>
        </trans-unit>
        <trans-unit id="b76fbb9133c48e761b008ec73d333358dd278227" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../api/commands/trigger&quot;&gt;&lt;code&gt;.trigger()&lt;/code&gt;&lt;/a&gt; type definition now expects its &lt;code&gt;options&lt;/code&gt; to be &lt;code&gt;ObjectLike&lt;/code&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3809&quot;&gt;#3809&lt;/a&gt;.</source>
          <target state="translated">该&lt;a href=&quot;../../api/commands/trigger&quot;&gt; &lt;code&gt;.trigger()&lt;/code&gt; &lt;/a&gt;类型定义现在预计其 &lt;code&gt;options&lt;/code&gt; 是 &lt;code&gt;ObjectLike&lt;/code&gt; 。在&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3809&quot;&gt;＃3809中解决&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d31d8614c0301eace71fcf608f563b71e4402d1a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Subject-Management&quot;&gt;subject&lt;/a&gt; must be a &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">所述&lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Subject-Management&quot;&gt;受试者&lt;/a&gt;必须是 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dbd572b69828dfbeee72d0c970b6599bba7aa480" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../guides/core-concepts/test-runner#Selector-Playground&quot;&gt;Selector Playground&lt;/a&gt; exposes APIs that enable you to:</source>
          <target state="translated">在&lt;a href=&quot;../../guides/core-concepts/test-runner#Selector-Playground&quot;&gt;选择游乐场&lt;/a&gt;公开的API，使您可以：</target>
        </trans-unit>
        <trans-unit id="d6109af2426a8ff9fc0ddb8ef114204a07285fe4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../guides/guides/environment-variables&quot;&gt;Environment Variable&lt;/a&gt; guide</source>
          <target state="translated">在&lt;a href=&quot;../../guides/guides/environment-variables&quot;&gt;环境变量&lt;/a&gt;指南</target>
        </trans-unit>
        <trans-unit id="22c468919272bac2becb72a65e7a98a73d01814e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../guides/guides/environment-variables&quot;&gt;Environment Variable&lt;/a&gt; guide explains the other ways you can set them &lt;em&gt;outside of your tests&lt;/em&gt;.</source>
          <target state="translated">在&lt;a href=&quot;../../guides/guides/environment-variables&quot;&gt;环境变量&lt;/a&gt;指南说明你可以设置他们其他方面&lt;em&gt;之外你的测试&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="ee7e4f35bd6916f173438d20a40cb83c1418c07b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../guides/guides/environment-variables&quot;&gt;Environment Variables&lt;/a&gt; guide explains common use cases.</source>
          <target state="translated">在&lt;a href=&quot;../../guides/guides/environment-variables&quot;&gt;环境变量&lt;/a&gt;指南介绍了常见的用例。</target>
        </trans-unit>
        <trans-unit id="3f63fbe806d11f13628dfbdcf2b758df62e75aa1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../guides/guides/environment-variables&quot;&gt;Environment Variables&lt;/a&gt; guide explains the other ways you can set environment variables for your tests.</source>
          <target state="translated">在&lt;a href=&quot;../../guides/guides/environment-variables&quot;&gt;环境变量&lt;/a&gt;指南介绍您可以设置环境变量为您测试的其他方式。</target>
        </trans-unit>
        <trans-unit id="855b7d4fc17c92cd8289f3dbaa220fd75eb0f9ba" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../core-concepts/test-runner#Command-Log&quot;&gt;Command Log&lt;/a&gt; now shows the new &lt;code&gt;VISIT&lt;/code&gt; action.</source>
          <target state="translated">现在，&lt;a href=&quot;../core-concepts/test-runner#Command-Log&quot;&gt;命令日志将&lt;/a&gt;显示新的 &lt;code&gt;VISIT&lt;/code&gt; 操作。</target>
        </trans-unit>
        <trans-unit id="3369a25eaeb1be1170e917a3e514d3c00d809840" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../core-concepts/test-runner#Selector-Playground&quot;&gt;Selector Playground&lt;/a&gt; automatically follows these best practices.</source>
          <target state="translated">在&lt;a href=&quot;../core-concepts/test-runner#Selector-Playground&quot;&gt;选择游乐场&lt;/a&gt;自动遵循这些最佳做法。</target>
        </trans-unit>
        <trans-unit id="1f6dc7d06c52601c5e1fac7e400ab08f50a3cca6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../core-concepts/test-runner#Selector-Playground&quot;&gt;Selector Playground&lt;/a&gt; has been updated to automatically prefer &lt;code&gt;data-cy&lt;/code&gt;, &lt;code&gt;data-test&lt;/code&gt; or &lt;code&gt;data-testid&lt;/code&gt; attributes when providing the unique selector for an element. Additionally it now exposes a &lt;a href=&quot;../../api/cypress-api/selector-playground-api&quot;&gt;public API&lt;/a&gt; that you can use to control how it determines which selector to use. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1135&quot;&gt;#1135&lt;/a&gt;.</source>
          <target state="translated">该&lt;a href=&quot;../core-concepts/test-runner#Selector-Playground&quot;&gt;选择器游乐场&lt;/a&gt;已被更新以自动偏爱 &lt;code&gt;data-cy&lt;/code&gt; ， &lt;code&gt;data-test&lt;/code&gt; 或 &lt;code&gt;data-testid&lt;/code&gt; 提供一个元素的唯一选择器时的属性。另外，它现在公开了一个&lt;a href=&quot;../../api/cypress-api/selector-playground-api&quot;&gt;公共API&lt;/a&gt;，您可以使用它来控制如何确定使用哪个选择器。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1135&quot;&gt;＃1135&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2f21854dc14b78084e411eb4e6ac148235bd66e1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../guides/command-line&quot;&gt;CLI&lt;/a&gt; now respects config values and environment variables put in your &lt;code&gt;.npmrc&lt;/code&gt; file. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1399&quot;&gt;#1399&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1853&quot;&gt;#1853&lt;/a&gt;.</source>
          <target state="translated">该&lt;a href=&quot;../guides/command-line&quot;&gt;CLI&lt;/a&gt;现在方面配置值和环境变量把你 &lt;code&gt;.npmrc&lt;/code&gt; 文件。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1399&quot;&gt;＃1399&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1853&quot;&gt;＃1853&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="78c61758652d29d3d43e3f3b0b9eedd5f1d294cf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;&amp;ndash;reporter&lt;/code&gt;&lt;/a&gt; CLI option is now working again.</source>
          <target state="translated">该&lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt; &lt;code&gt;&amp;ndash;reporter&lt;/code&gt; &lt;/a&gt; CLI选项现在重新工作。</target>
        </trans-unit>
        <trans-unit id="f8272a960aafd2cbeb1d57e33c88e32d94109494" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../guides/command-line#cypress-run-browser-lt-browser-name-or-path-gt&quot;&gt;&lt;code&gt;&amp;ndash;browser&lt;/code&gt; argument&lt;/a&gt; of the &lt;a href=&quot;../guides/command-line&quot;&gt;Command Line&lt;/a&gt; and the &lt;a href=&quot;../guides/module-api#cypress-run&quot;&gt;&lt;code&gt;browser&lt;/code&gt; argument&lt;/a&gt; of the &lt;a href=&quot;../guides/module-api&quot;&gt;Module API&lt;/a&gt; have been updated to allow passing a &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt;. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1026&quot;&gt;#1026&lt;/a&gt;.</source>
          <target state="translated">所述&lt;a href=&quot;../guides/command-line#cypress-run-browser-lt-browser-name-or-path-gt&quot;&gt; &lt;code&gt;&amp;ndash;browser&lt;/code&gt; 参数&lt;/a&gt;的的&lt;a href=&quot;../guides/command-line&quot;&gt;命令行&lt;/a&gt;和&lt;a href=&quot;../guides/module-api#cypress-run&quot;&gt; &lt;code&gt;browser&lt;/code&gt; 参数&lt;/a&gt;的的&lt;a href=&quot;../guides/module-api&quot;&gt;模块API&lt;/a&gt;已被更新，以允许传递 &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; 。地址&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1026&quot;&gt;＃1026&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bc0b589727b107f46af4cb4c541a290c2d4ae35f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../guides/module-api&quot;&gt;&lt;code&gt;cypress&lt;/code&gt; module can be &lt;code&gt;required&lt;/code&gt;&lt;/a&gt; in your own node projects to programmatically control Cypress the same way you would from the command line.</source>
          <target state="translated">该&lt;a href=&quot;../guides/module-api&quot;&gt; &lt;code&gt;cypress&lt;/code&gt; 模块可以被 &lt;code&gt;required&lt;/code&gt; &lt;/a&gt;在自己的节点项目以编程方式控制赛普拉斯你在命令行中会以同样的方式。</target>
        </trans-unit>
        <trans-unit id="88ac78f61a4bedaff09c94fe6303968173baeebb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../guides/module-api&quot;&gt;Module API&lt;/a&gt; now returns the &lt;code&gt;runUrl&lt;/code&gt; from &lt;code&gt;cypress.run()&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2596&quot;&gt;#2596&lt;/a&gt;.</source>
          <target state="translated">现在，&lt;a href=&quot;../guides/module-api&quot;&gt;模块API&lt;/a&gt;从 &lt;code&gt;cypress.run()&lt;/code&gt; 返回 &lt;code&gt;runUrl&lt;/code&gt; 。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2596&quot;&gt;＃2596&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cf6ef20cff3aa3022180f65f7370d9d0c0269c22" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../guides/module-api&quot;&gt;module API&lt;/a&gt; accepts &lt;code&gt;reporterOptions&lt;/code&gt; as an object literal like it does for the &lt;code&gt;env&lt;/code&gt; and &lt;code&gt;config&lt;/code&gt; properties. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/899&quot;&gt;#899&lt;/a&gt;.</source>
          <target state="translated">所述&lt;a href=&quot;../guides/module-api&quot;&gt;模块API&lt;/a&gt;接受 &lt;code&gt;reporterOptions&lt;/code&gt; 作为对象常量像它的 &lt;code&gt;env&lt;/code&gt; 和 &lt;code&gt;config&lt;/code&gt; 属性。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/899&quot;&gt;＃899&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cb9399edca685c170760ae9bb154627f3edc1ddc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../tooling/reporters&quot;&gt;reporter&lt;/a&gt; used during &lt;code&gt;cypress run&lt;/code&gt;</source>
          <target state="translated">该&lt;a href=&quot;../tooling/reporters&quot;&gt;报道&lt;/a&gt;中使用 &lt;code&gt;cypress run&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c7a8815937b1293c5c1f5d85a143bb7125f94687" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../tooling/reporters#Reporter-Options&quot;&gt;reporter options&lt;/a&gt; used. Supported options depend on the reporter.</source>
          <target state="translated">使用的&lt;a href=&quot;../tooling/reporters#Reporter-Options&quot;&gt;报告程序选项&lt;/a&gt;。支持的选项取决于报告者。</target>
        </trans-unit>
        <trans-unit id="53804cc5358f78ec057779b7130a1abeba81d611" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;error-messages&quot;&gt;error message when Cypress detects that a test has ended early&lt;/a&gt; (there are still commands left in the queue) now displays a list of these commands with a much improved explanation.</source>
          <target state="translated">&lt;a href=&quot;error-messages&quot;&gt;赛普拉斯检测到测试已提前结束&lt;/a&gt;（队列中仍有命令）时，错误消息现在显示这些命令的列表，并提供了改进的说明。</target>
        </trans-unit>
        <trans-unit id="f9ac329aa1bc70b0ac5cd96526f421ae18aef391" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://api.jquery.com/Types/#jQuery&quot;&gt;jQuery element&lt;/a&gt; that you want to get the selector value for.</source>
          <target state="translated">您要获取选择器值的&lt;a href=&quot;http://api.jquery.com/Types/#jQuery&quot;&gt;jQuery元素&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0b58ad7025878c6b78f82e08d87a14a6003ff6a8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/introduction-to-cypress.html#Subject-Management&quot;&gt;subject&lt;/a&gt; must be a &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8136b8e56a18e858f237cccdc2659669bab0f251" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/test-runner.html#Selector-Playground&quot;&gt;Selector Playground&lt;/a&gt; exposes APIs that enable you to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62b65b90a6490ab08697c934663e0936da9572a4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.cypress.io/guides/guides/environment-variables.html&quot;&gt;Environment Variable&lt;/a&gt; guide</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="938108c23113328e76f859569633f729a3f5eac1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.cypress.io/guides/guides/environment-variables.html&quot;&gt;Environment Variable&lt;/a&gt; guide explains the other ways you can set them &lt;em&gt;outside of your tests&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99c08f03e531700a6c091c0712998f0c21a9ad02" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.cypress.io/guides/guides/environment-variables.html&quot;&gt;Environment Variables&lt;/a&gt; guide explains common use cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34c2e8d5702477aaef6c3b8705259158dfdb536f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.cypress.io/guides/guides/environment-variables.html&quot;&gt;Environment Variables&lt;/a&gt; guide explains the other ways you can set environment variables for your tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbdd1bb81c0e215f5db1092415e1b120338d03b6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/cypress-io/cypress-example-kitchensink&quot;&gt;Kitchen Sink&lt;/a&gt; and &lt;code&gt;example_spec.js&lt;/code&gt; have been updated to reflect the newest changes and features of &lt;code&gt;0.17.1&lt;/code&gt;.</source>
          <target state="translated">在&lt;a href=&quot;https://github.com/cypress-io/cypress-example-kitchensink&quot;&gt;厨房水槽&lt;/a&gt;和 &lt;code&gt;example_spec.js&lt;/code&gt; 已更新，以反映最新的变化和特点 &lt;code&gt;0.17.1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="424ce0cb0605e2e5a09526573836f577f276c631" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://on.cypress.io/cypress.schema.json&quot;&gt;JSON schema file&lt;/a&gt; used for &lt;a href=&quot;https://on.cypress.io/intelligent-code-completion#Configuration&quot;&gt;intelligent code completion&lt;/a&gt; for the Cypress configuration file has been updated to match our documentation.</source>
          <target state="translated">赛普拉斯配置文件中用于&lt;a href=&quot;https://on.cypress.io/intelligent-code-completion#Configuration&quot;&gt;智能代码完成&lt;/a&gt;的&lt;a href=&quot;https://on.cypress.io/cypress.schema.json&quot;&gt;JSON模式文件&lt;/a&gt;已更新，以匹配我们的文档。</target>
        </trans-unit>
        <trans-unit id="57d103b3c8a16c34ca59cbdbc7cdbfb17d28b855" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;Cypress Dashboard&lt;/a&gt; is a service that gives you access to recorded tests - typically when running Cypress tests from your &lt;a href=&quot;../guides/continuous-integration&quot;&gt;CI provider&lt;/a&gt;. The Dashboard provides you insight into what happened when your tests ran.</source>
          <target state="translated">该&lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;赛普拉斯仪表盘&lt;/a&gt;是给您的访问记录测试服务-通常是从赛普拉斯运行测试时，&lt;a href=&quot;../guides/continuous-integration&quot;&gt;CI提供商&lt;/a&gt;。仪表板可让您深入了解测试运行时发生的情况。</target>
        </trans-unit>
        <trans-unit id="f03e8e973bc635caee6b5976e40bb423bb40d392" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;Dashboard&lt;/a&gt; enables you to view your recorded runs, manage projects, create organizations, invite users and set permissions.</source>
          <target state="translated">该&lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;仪表板&lt;/a&gt;可让您观看录制的运行，管理项目，创建组织，邀请用户和设置权限。</target>
        </trans-unit>
        <trans-unit id="d6fa6a40a4314b29795b77940ebf6a3e2617e65b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.npmjs.com/package/cypress&quot;&gt;&lt;code&gt;cypress&lt;/code&gt; npm package&lt;/a&gt; now checks the currently installed version on &lt;code&gt;install&lt;/code&gt; and &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;run&lt;/code&gt;&lt;/a&gt; and does not re-install Cypress if it is already installed. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/396&quot;&gt;#396&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;https://www.npmjs.com/package/cypress&quot;&gt; &lt;code&gt;cypress&lt;/code&gt; NPM包&lt;/a&gt;，现在检查在当前安装的版本 &lt;code&gt;install&lt;/code&gt; 和&lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt; &lt;code&gt;run&lt;/code&gt; &lt;/a&gt;，如果已经安装了不重新安装柏树。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/396&quot;&gt;＃396&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9569367021c0f5bc9bf4cc681504592c8ee282dc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.npmjs.com/package/cypress-cli&quot;&gt;&lt;code&gt;cypress-cli&lt;/code&gt; npm package&lt;/a&gt; has been deprecated. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/316&quot;&gt;#316&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;https://www.npmjs.com/package/cypress-cli&quot;&gt; &lt;code&gt;cypress-cli&lt;/code&gt; NPM包&lt;/a&gt;已被弃用。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/316&quot;&gt;＃316&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="41206f8abe72a1550e1a526c0fe07fadc405e902" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;test-runner#Command-Log&quot;&gt;Command Log&lt;/a&gt; shows both commands and assertions with passing assertions showing in green.</source>
          <target state="translated">该&lt;a href=&quot;test-runner#Command-Log&quot;&gt;命令日志&lt;/a&gt;同时显示命令和传递断言以绿色显示断言。</target>
        </trans-unit>
        <trans-unit id="33ff5c94b1e2a8e0b6dfaa5cdd075805268e673e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&quot;types&quot;&lt;/code&gt; will tell the TypeScript compiler to only include type definitions from Cypress. This will address instances where the project also uses &lt;code&gt;@types/chai&lt;/code&gt; or &lt;code&gt;@types/jquery&lt;/code&gt;. Since &lt;a href=&quot;../references/bundled-tools#Chai&quot;&gt;Chai&lt;/a&gt; and &lt;a href=&quot;../references/bundled-tools#Other-Library-Utilities&quot;&gt;jQuery&lt;/a&gt; are namespaces (globals), incompatible versions will cause the package manager (&lt;code&gt;yarn&lt;/code&gt; or &lt;code&gt;npm&lt;/code&gt;) to nest and include multiple definitions and cause conflicts.</source>
          <target state="translated">在 &lt;code&gt;&quot;types&quot;&lt;/code&gt; 将告诉打字稿编译器仅包括来自赛普拉斯类型定义。这将解决项目还使用 &lt;code&gt;@types/chai&lt;/code&gt; 或 &lt;code&gt;@types/jquery&lt;/code&gt; 实例。由于&lt;a href=&quot;../references/bundled-tools#Chai&quot;&gt;Chai&lt;/a&gt;和&lt;a href=&quot;../references/bundled-tools#Other-Library-Utilities&quot;&gt;jQuery&lt;/a&gt;是名称空间（全局变量），因此不兼容的版本将导致程序包管理器（ &lt;code&gt;yarn&lt;/code&gt; 或 &lt;code&gt;npm&lt;/code&gt; ）嵌套并包含多个定义并引起冲突。</target>
        </trans-unit>
        <trans-unit id="e32f0411f34f26707ececffb5f88e36e3221840d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--ci-build-id&lt;/code&gt; flag is used to either group or parallelize multiple runs together.</source>
          <target state="translated">所述 &lt;code&gt;--ci-build-id&lt;/code&gt; 标记被用于任一组或并行多个运行在一起。</target>
        </trans-unit>
        <trans-unit id="44eeb2a207152e869b8bea3c9a031509a4adbe25" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--ci-build-id&lt;/code&gt;, &lt;code&gt;--group&lt;/code&gt;, or &lt;code&gt;--parallel&lt;/code&gt; flags can only be used when recording</source>
          <target state="translated">该 &lt;code&gt;--ci-build-id&lt;/code&gt; ， &lt;code&gt;--group&lt;/code&gt; 或 &lt;code&gt;--parallel&lt;/code&gt; 标志只能记录时使用</target>
        </trans-unit>
        <trans-unit id="043a9756e0778be585824f05b0212c11215f0e17" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--silent&lt;/code&gt; flag should now be respected during &lt;code&gt;npm install cypress&lt;/code&gt; on all OSes. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/817&quot;&gt;#817&lt;/a&gt;.</source>
          <target state="translated">现在，在所有操作系统上的 &lt;code&gt;npm install cypress&lt;/code&gt; 期间都应使用 &lt;code&gt;--silent&lt;/code&gt; 标志。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/817&quot;&gt;＃817&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="09ff12ab5069dfb91af35ee8b5e56de69f1971ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--spec&lt;/code&gt; option is now normalized against the current working directory &lt;code&gt;cwd&lt;/code&gt; instead of the project that you are running Cypress in. That means passing a path from the command line to a spec file will now work even when the project path is not &lt;code&gt;cwd&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1159&quot;&gt;#1159&lt;/a&gt;.</source>
          <target state="translated">现在， &lt;code&gt;--spec&lt;/code&gt; 选项已针对当前工作目录 &lt;code&gt;cwd&lt;/code&gt; 而不是正在运行Cypress的项目进行了规范化。这意味着即使项目路径不是 &lt;code&gt;cwd&lt;/code&gt; ,也可以将命令行路径传递到spec文件。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1159&quot;&gt;＃1159&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="30e277b186a082f5b8bce2da885a46971e208804" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-s&lt;/code&gt; or &lt;code&gt;--spec&lt;/code&gt; option now works correctly. You now must pass a relative or absolute path to your spec file. This is much less confusing, allows you to easily autocomplete entries from bash, and will support &lt;code&gt;unitFolder&lt;/code&gt; later when it&amp;rsquo;s added. Assuming you want to run a spec file that is located in &lt;code&gt;cypress/integration/foo_spec.js&lt;/code&gt; you would pass: &lt;code&gt;cypress run --spec 'cypress/integration/foo_spec.js'&lt;/code&gt;. Previously you could just pass &lt;code&gt;--spec foo_spec.js&lt;/code&gt; which now no longer works (and was broken anyway). Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/120&quot;&gt;#120&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;-s&lt;/code&gt; 或 &lt;code&gt;--spec&lt;/code&gt; 选项现在可以正常工作。您现在必须将一个相对或绝对路径传递到您的spec文件。这样可以减少混乱，使您可以轻松地自动完成bash中的条目，并在以后添加 &lt;code&gt;unitFolder&lt;/code&gt; 时提供支持。假设您要运行位于 &lt;code&gt;cypress/integration/foo_spec.js&lt;/code&gt; 中的规范文件，您将通过： &lt;code&gt;cypress run --spec 'cypress/integration/foo_spec.js'&lt;/code&gt; 。以前，您可以只传递 &lt;code&gt;--spec foo_spec.js&lt;/code&gt; ，现在它不再起作用（反而已损坏）。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/120&quot;&gt;＃120&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4b8adb1081d10255096dd62976255ee26bd91555" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.click()&lt;/code&gt; command may also be fired with key modifiers in combination with the &lt;a href=&quot;type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; command in order to simulate character sequences while clicking, such as &lt;code&gt;ALT + click&lt;/code&gt;. In order to keep the modifier key active, &lt;code&gt;{release: false}&lt;/code&gt; should be passed to the options of the &lt;a href=&quot;type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">的 &lt;code&gt;.click()&lt;/code&gt; 命令也可以与结合键改性剂与烧制&lt;a href=&quot;type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;命令，以便模拟字符序列而点击，如 &lt;code&gt;ALT + click&lt;/code&gt; 。为了使修改键保持活动状态，应将 &lt;code&gt;{release: false}&lt;/code&gt; 传递给&lt;a href=&quot;type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;命令的选项。</target>
        </trans-unit>
        <trans-unit id="6f7b3f498b8757ad79ab4be5c015a892d23a15e2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.click()&lt;/code&gt; command may also be fired with key modifiers in order to simulate holding key combinations while clicking, such as &lt;code&gt;ALT + click&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="063ad032ddddf455cf82727b73ab8673b62c65a6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.click()&lt;/code&gt; command will automatically wait until multiple built-in assertion checks like these pass, and then it will attempt to click just once.</source>
          <target state="translated">的 &lt;code&gt;.click()&lt;/code&gt; 命令会自动等到内置多个断言检查这样的传球，然后它会尝试单击一次。</target>
        </trans-unit>
        <trans-unit id="70e519f352ed6ae4abc18571991a2b7de3a99b80" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.dblclick()&lt;/code&gt; command may also be fired with key modifiers in order to simulate holding key combinations while double clicking, such as &lt;code&gt;SHIFT + double click&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="550c4b5ffe42c6bf012845dba6df28e2e12ee5cc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.rightclick()&lt;/code&gt; command may also be fired with key modifiers in order to simulate holding key combinations while right clicking, such as &lt;code&gt;ALT + rightclick&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db5c80bfb7ceeed915785b70debfbf07aec2fff9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.shouldBeVisible()&lt;/code&gt; custom command isn&amp;rsquo;t worth the trouble or abstraction when it&amp;rsquo;s already as simple as typing: &lt;code&gt;.should('be.visible')&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;.shouldBeVisible()&lt;/code&gt; 定制命令已经像键入一样简单，就不值得麻烦或抽象： &lt;code&gt;.should('be.visible')&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eb2b2e1a0c076d3d149f58db0f51fc1e9da22f05" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.shouldBeVisible()&lt;/code&gt; custom command isn&amp;rsquo;t worth the trouble or abstraction when you can already use: &lt;code&gt;.should('be.visible')&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98125cfaed04874547ce6ee322782dcab25e61ad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;1x&lt;/code&gt;, &lt;code&gt;2x&lt;/code&gt;, &lt;code&gt;4x&lt;/code&gt; group prefix used here is an adopted convention to indicate the level of parallelism for each run, and &lt;em&gt;is not required or essential&lt;/em&gt;.</source>
          <target state="translated">此处使用的 &lt;code&gt;1x&lt;/code&gt; ， &lt;code&gt;2x&lt;/code&gt; ， &lt;code&gt;4x&lt;/code&gt; 组前缀是已采用的约定，用于指示每次运行的并行度，并且&lt;em&gt;不是必需或必需的&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="46225bb45e238c99bcdc7d8274950fa51f8d975e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CYPRESS_DEBUG&lt;/code&gt; env option has been removed in favor of the &lt;code&gt;debug&lt;/code&gt; module and &lt;a href=&quot;../guides/command-line#Debugging-commands&quot;&gt;&lt;code&gt;DEBUG=cypress:*&lt;/code&gt;&lt;/a&gt; usage.</source>
          <target state="translated">该 &lt;code&gt;CYPRESS_DEBUG&lt;/code&gt; ENV选项有利于中被删除 &lt;code&gt;debug&lt;/code&gt; 模块和&lt;a href=&quot;../guides/command-line#Debugging-commands&quot;&gt; &lt;code&gt;DEBUG=cypress:*&lt;/code&gt; &lt;/a&gt;使用。</target>
        </trans-unit>
        <trans-unit id="6f5844326f3b3e375be74d9d6317c78453492e84" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CYPRESS_VERSION&lt;/code&gt; environment variable is gone because now the version of the binary is controlled by the npm module version. If for some reason you want to download the binary of a different version you can use the new &lt;code&gt;CYPRESS_BINARY_VERSION&lt;/code&gt; environment variable - but you&amp;rsquo;ll get a warning message when the versions don&amp;rsquo;t match.</source>
          <target state="translated">该 &lt;code&gt;CYPRESS_VERSION&lt;/code&gt; 因为现在的二进制文件的版本是由故宫模块版本控制的环境变量了。如果出于某种原因要下载其他版本的二进制文件，则可以使用新的 &lt;code&gt;CYPRESS_BINARY_VERSION&lt;/code&gt; 环境变量-但是当版本不匹配时，您会收到警告消息。</target>
        </trans-unit>
        <trans-unit id="e5011852afde7df403868c3466295cfe652b2d3f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Linux&lt;/code&gt; version of Cypress now works correctly for GUI Desktop versions (tested on Ubuntu Desktop). Previously it would only worked during &lt;code&gt;cypress run&lt;/code&gt; in server versions. The &lt;code&gt;tray&lt;/code&gt; used in OSX does not work with the &lt;code&gt;Linux&lt;/code&gt;, so in &lt;code&gt;Linux&lt;/code&gt; we just use a standard window + menu.</source>
          <target state="translated">现在，Cypress 的 &lt;code&gt;Linux&lt;/code&gt; 版本适用于GUI桌面版本（在Ubuntu桌面上测试）。以前，它仅在 &lt;code&gt;cypress run&lt;/code&gt; 服务器版本中运行期间有效。OSX中使用的 &lt;code&gt;tray&lt;/code&gt; 不适用于 &lt;code&gt;Linux&lt;/code&gt; ，因此在 &lt;code&gt;Linux&lt;/code&gt; 中,我们仅使用标准的window +菜单。</target>
        </trans-unit>
        <trans-unit id="6b9dbead8280cc73432d72db75d4745f240556bd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VISIT&lt;/code&gt; displays a &lt;strong&gt;blue pending state&lt;/strong&gt; until the page finishes loading.</source>
          <target state="translated">该 &lt;code&gt;VISIT&lt;/code&gt; 显示一个&lt;strong&gt;蓝色的挂起状态&lt;/strong&gt;，直到网页加载完成。</target>
        </trans-unit>
        <trans-unit id="1dd2a1a80c2da68ac838583516aa38396e181f4c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;__cypress.initial&lt;/code&gt; cookie should now be removed during any &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt;, which should fix some edge cases with the proxy accidentally injecting content when it shouldn&amp;rsquo;t. We also added a ton more e2e tests covering these edge cases and other behavior.</source>
          <target state="translated">该 &lt;code&gt;__cypress.initial&lt;/code&gt; 饼干现在应该在任何被删除&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;，它修复了一些边缘的情况下与代理时，它应该不小心注射的内容。我们还添加了更多的e2e测试，涵盖这些极端情况和其他行为。</target>
        </trans-unit>
        <trans-unit id="daf8f5c114743a6ad859bf6d6e8f7dff388c080a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;after:run&lt;/code&gt; event fires after a run is finished. The event only fires when running via &lt;code&gt;cypress run&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2581819beffec1be3cd9651d1c0427aa689e7b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;after:spec&lt;/code&gt; event fires after a spec file is run. The event only fires when running via &lt;code&gt;cypress run&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bfe4cb6c9e9f7a2ff4e7b5632ce48eff7cd26cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;before:run&lt;/code&gt; event fires before a run starts. The event only fires when running via &lt;code&gt;cypress run&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf468fdd59ff7be0e5ec2caa895f89d5b107723e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;before:spec&lt;/code&gt; event fires before a spec file is run. The event only fires when running via &lt;code&gt;cypress run&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd21065e604d16761bbd7ccfafc6fd4e5f8878fb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;blackout&lt;/code&gt; argument passed in via &lt;a href=&quot;../commands/screenshot#Arguments&quot;&gt;&lt;code&gt;cy.screenshot()&lt;/code&gt;&amp;ldquo;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4967ffcb21a340a6a01361a7852171c5f58d68d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;button&lt;/code&gt; element is yielded</source>
          <target state="translated">所述 &lt;code&gt;button&lt;/code&gt; 元件产生</target>
        </trans-unit>
        <trans-unit id="eabefb6080c3d4b47507ca37237114e43fda7e8a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ciBuildId&lt;/code&gt; is automatically detected if you are running Cypress in most &lt;a href=&quot;../guides/continuous-integration#Examples&quot;&gt;CI providers&lt;/a&gt;. Please review the &lt;a href=&quot;../guides/parallelization#CI-Build-ID-environment-variables-by-provider&quot;&gt;natively recognized environment variables&lt;/a&gt; for your CI provider.</source>
          <target state="translated">该 &lt;code&gt;ciBuildId&lt;/code&gt; 如果你正在运行在大多数赛普拉斯自动检测&lt;a href=&quot;../guides/continuous-integration#Examples&quot;&gt;CI提供商&lt;/a&gt;。请为您的CI提供者查看&lt;a href=&quot;../guides/parallelization#CI-Build-ID-environment-variables-by-provider&quot;&gt;本地认可的环境变量&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e37f910d367fbd5f303f01cbba5bd5998da27d4f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;close&lt;/code&gt; event now properly fires on &lt;code&gt;file&lt;/code&gt; when manually closing the browser. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1560&quot;&gt;#1560&lt;/a&gt;.</source>
          <target state="translated">现在，当手动关闭浏览器时， &lt;code&gt;close&lt;/code&gt; 事件会正确触发 &lt;code&gt;file&lt;/code&gt; 。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1560&quot;&gt;＃1560&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9c96ee1c486e67f1cf2d1e8ccf94af0c5fef0970" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;config&lt;/code&gt; object also includes the following extra values that are not part of the standard configuration. &lt;strong&gt;These values are read only and cannot be modified from the plugins file.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d97dddea49f484c9f666e123441557cdabf1eaa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;contain&lt;/code&gt; assertion chainer from &lt;code&gt;chai-jquery&lt;/code&gt; has been extended to match the same selector logic as &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt; - meaning it now checks the &lt;code&gt;value&lt;/code&gt; of &lt;code&gt;input[type=submit]&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;contain&lt;/code&gt; 从断言chainer &lt;code&gt;chai-jquery&lt;/code&gt; 一直延伸到匹配相同的选择器逻辑作为&lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; &lt;/a&gt; -这意味着它现在检查 &lt;code&gt;value&lt;/code&gt; 的 &lt;code&gt;input[type=submit]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="40b8f07ad3eb8b4e9318ceffd2c25ecf2a1bddec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cy.now()&lt;/code&gt; command is an internal command and may change in the future.</source>
          <target state="translated">所述 &lt;code&gt;cy.now()&lt;/code&gt; 命令是一个内部命令，并在将来可能会改变。</target>
        </trans-unit>
        <trans-unit id="762732ec80ffe579ad3ccf14d5b85b189cfc61c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cy&lt;/code&gt; object is bound to each individual test. Events bound to &lt;code&gt;cy&lt;/code&gt; will &lt;strong&gt;automatically&lt;/strong&gt; be removed when the test ends. You don&amp;rsquo;t have to worry about cleanup, and your event listeners will only be called for the duration of the single test.</source>
          <target state="translated">所述 &lt;code&gt;cy&lt;/code&gt; 对象绑定到每个单独的测试。测试结束时，绑定到 &lt;code&gt;cy&lt;/code&gt; 的事件将&lt;strong&gt;自动&lt;/strong&gt;删除。您不必担心清理，事件监听器只会在单个测试期间被调用。</target>
        </trans-unit>
        <trans-unit id="e0ddc08028d5b2d6b7847239cc1c09aa5b1f03da" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cypress ci&lt;/code&gt; command has been deprecated</source>
          <target state="translated">在 &lt;code&gt;cypress ci&lt;/code&gt; 命令已被弃用</target>
        </trans-unit>
        <trans-unit id="da72614877d452a5438247d1993f841f5cb7d34c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cypress&lt;/code&gt; npm package now has the correct &lt;code&gt;engines&lt;/code&gt; set in &lt;code&gt;package.json&lt;/code&gt;. This was accidentally getting overwritten and caused errors when &lt;code&gt;engineStrict&lt;/code&gt; was set in environments using &lt;code&gt;node&lt;/code&gt; older than &lt;code&gt;8.2.1&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1373&quot;&gt;#1373&lt;/a&gt;.</source>
          <target state="translated">在 &lt;code&gt;cypress&lt;/code&gt; NPM包现在有正确的 &lt;code&gt;engines&lt;/code&gt; 在设定 &lt;code&gt;package.json&lt;/code&gt; 。在使用早于 &lt;code&gt;8.2.1&lt;/code&gt; 的 &lt;code&gt;node&lt;/code&gt; 环境中设置 &lt;code&gt;engineStrict&lt;/code&gt; 时，这被意外覆盖并导致错误。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1373&quot;&gt;＃1373&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8cab61747885842a8f18b61546f3bf695d1c16e5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;data-cy&lt;/code&gt; attribute will not change from CSS style or JS behavioral changes, meaning it&amp;rsquo;s not coupled to the &lt;strong&gt;behavior&lt;/strong&gt; or &lt;strong&gt;styling&lt;/strong&gt; of an element.</source>
          <target state="translated">该 &lt;code&gt;data-cy&lt;/code&gt; 属性将不会从CSS样式或JS行为的变化而变化，这意味着它没有连接到该&lt;strong&gt;行为&lt;/strong&gt;或&lt;strong&gt;造型&lt;/strong&gt;元素。</target>
        </trans-unit>
        <trans-unit id="e9302ffb632f7759378030d24e5769c551ef97fb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;example_spec.js&lt;/code&gt; file that gets seeded on a new project no longer fails on &lt;a href=&quot;../../api/commands/readfile&quot;&gt;&lt;code&gt;cy.readFile()&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/414&quot;&gt;#414&lt;/a&gt;.</source>
          <target state="translated">种子到新项目中的 &lt;code&gt;example_spec.js&lt;/code&gt; 文件不再在&lt;a href=&quot;../../api/commands/readfile&quot;&gt; &lt;code&gt;cy.readFile()&lt;/code&gt; &lt;/a&gt;上失败。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/414&quot;&gt;＃414&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b78733791e2eef9567e667ecd468930a65f594d1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;file&lt;/code&gt; object passed to the callback function has the following properties:</source>
          <target state="translated">传递给回调函数的 &lt;code&gt;file&lt;/code&gt; 对象具有以下属性：</target>
        </trans-unit>
        <trans-unit id="052bc12176eb387ef261b7c38e9f2921641685aa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;file&lt;/code&gt; object passed to the callback function is an &lt;a href=&quot;https://nodejs.org/api/events.html#events_class_eventemitter&quot;&gt;Event Emitter&lt;/a&gt;.</source>
          <target state="translated">传递给回调函数的 &lt;code&gt;file&lt;/code&gt; 对象是&lt;a href=&quot;https://nodejs.org/api/events.html#events_class_eventemitter&quot;&gt;事件发射器&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ab13214b3de1bf10b4be9e1c5b6c605fb7104e91" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;include&lt;/code&gt; and &lt;code&gt;includes&lt;/code&gt; assertion chainers now correctly work the same as &lt;code&gt;contain&lt;/code&gt; and &lt;code&gt;contains&lt;/code&gt; assertion chainers. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4833&quot;&gt;#4833&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;include&lt;/code&gt; 和 &lt;code&gt;includes&lt;/code&gt; 断言chainers现在可以正常工作一样 &lt;code&gt;contain&lt;/code&gt; 并 &lt;code&gt;contains&lt;/code&gt; 断言chainers。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4833&quot;&gt;＃4833&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d585f72eba1877827974f6d07bab61ed42d3c32d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;nyc&lt;/code&gt; and &lt;code&gt;babel-plugin-istanbul&lt;/code&gt; only instrument the application code and not 3rd party dependencies from &lt;code&gt;node_modules&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;nyc&lt;/code&gt; 和 &lt;code&gt;babel-plugin-istanbul&lt;/code&gt; 仅从仪器的应用程序代码，而不是第三方的依赖 &lt;code&gt;node_modules&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f8ef2e4215ce34afc26973dfcddb79af11b61795" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;object&lt;/code&gt; that has the &lt;code&gt;method&lt;/code&gt; to be replaced.</source>
          <target state="translated">具有要替换的 &lt;code&gt;method&lt;/code&gt; 的 &lt;code&gt;object&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fa87337659ecf6f626ddfb0f5f234dff0425e19a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;object&lt;/code&gt; that has the &lt;code&gt;method&lt;/code&gt; to be wrapped.</source>
          <target state="translated">具有要包装的 &lt;code&gt;method&lt;/code&gt; 的 &lt;code&gt;object&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="64ee58e2ef1b91755a13f5dcecdae2e7e19ea678" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onBeforeScreenshot&lt;/code&gt; and &lt;code&gt;onAfterScreenshot&lt;/code&gt; callbacks provide an opportunity to synchronously change the DOM to create a more consistent state for the screenshot.</source>
          <target state="translated">该 &lt;code&gt;onBeforeScreenshot&lt;/code&gt; 和 &lt;code&gt;onAfterScreenshot&lt;/code&gt; 回调提供了一个机会，同步改变DOM为截图创造一个更加一致的状态。</target>
        </trans-unit>
        <trans-unit id="9cfb7f4e385fce64e67f24a24b145867511b78ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onChange&lt;/code&gt; event callback for React now works (again) on &lt;code&gt;input&lt;/code&gt; type &lt;code&gt;number&lt;/code&gt; or &lt;code&gt;email&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/816&quot;&gt;#816&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/770&quot;&gt;#770&lt;/a&gt;.</source>
          <target state="translated">React 的 &lt;code&gt;onChange&lt;/code&gt; 事件回调现在（再次）适用于 &lt;code&gt;input&lt;/code&gt; 类型 &lt;code&gt;number&lt;/code&gt; 或 &lt;code&gt;email&lt;/code&gt; 。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/816&quot;&gt;＃816&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/770&quot;&gt;＃770&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a8e4a18a77addd421bf47f34a9ccc7dbc68b4a8f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onConsole&lt;/code&gt; information related to an XHR has been updated to make it easier to understand why a route was or was not stubbed, and its associated request and response headers.</source>
          <target state="translated">与XHR相关的 &lt;code&gt;onConsole&lt;/code&gt; 信息已更新，可以更轻松地理解为什么对路由进行存根或存根，以及与之相关的请求和响应标头。</target>
        </trans-unit>
        <trans-unit id="c6604feee55fbaf272de5bf1af41cff42af8bbcf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pluginsFile&lt;/code&gt; now supports an absolute path instead of just a relative one. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1837&quot;&gt;#1837&lt;/a&gt;.</source>
          <target state="translated">现在， &lt;code&gt;pluginsFile&lt;/code&gt; 支持绝对路径，而不仅仅是相对路径。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1837&quot;&gt;＃1837&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3bcba02b0569457fff68717bd919b31b6b705f34" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;prevSubject&lt;/code&gt; accepts the following values:</source>
          <target state="translated">所述 &lt;code&gt;prevSubject&lt;/code&gt; 接受以下值：</target>
        </trans-unit>
        <trans-unit id="0b0a9e330363566e36f525bfc270f9b6fcce68b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;projectId&lt;/code&gt; in now displayed in the configuration in the Test Runner settings like all other configuration values. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4500&quot;&gt;#4500&lt;/a&gt;.</source>
          <target state="translated">现在，像其他所有配置值一样， &lt;code&gt;projectId&lt;/code&gt; in会显示在&amp;ldquo;测试运行器&amp;rdquo;设置的配置中。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4500&quot;&gt;＃4500&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b181b8b380eb43c7ae2b0e325431d558b459f24f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;projectId&lt;/code&gt; is a 6 character string in your &lt;code&gt;cypress.json&lt;/code&gt;</source>
          <target state="translated">该 &lt;code&gt;projectId&lt;/code&gt; 是你的一个6字符串 &lt;code&gt;cypress.json&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="42765373465d4545e353b081cc42f44a711e296e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;redirectedToUrl&lt;/code&gt; property is a special Cypress property that normalizes the URL the browser would normally follow during a redirect.</source>
          <target state="translated">该 &lt;code&gt;redirectedToUrl&lt;/code&gt; 属性是标准化的浏览器将重定向期间通常遵循URL特殊赛普拉斯属性。</target>
        </trans-unit>
        <trans-unit id="668eca0dcf90d4d829112b3d5b89a66fcdec89ea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reporter&lt;/code&gt; can now be resized. We persist this state locally so it should &amp;ldquo;stick&amp;rdquo; between browser launches / app restarts. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/204&quot;&gt;#204&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;reporter&lt;/code&gt; 现在可以调整大小。我们在本地保留此状态，因此它应在浏览器启动/应用重启之间&amp;ldquo;粘&amp;rdquo;在一起。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/204&quot;&gt;＃204&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4c3cb66ac6d9b1de6b74e7894fa4fa33571ee979" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;routeHandler&lt;/code&gt; defines what will happen with a request if the &lt;a href=&quot;#routeMatcher-RouteMatcher&quot;&gt;`routeMatcher`&lt;/a&gt; matches. It can be used to &lt;a href=&quot;#Stubbing-a-response&quot;&gt;statically define a response&lt;/a&gt; for matching requests, or a function can be passed to &lt;a href=&quot;#Intercepting-a-request&quot;&gt;dynamically intercept the outgoing request&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03124703c0ad29e37f8b4ef25df3f3bca3e798bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;supportFolder&lt;/code&gt; option was removed from Cypress in version &lt;a href=&quot;changelog#0-18-0&quot;&gt;&lt;code&gt;0.18.0&lt;/code&gt;&lt;/a&gt; and was replaced by module support and the &lt;a href=&quot;configuration#Folders-Files&quot;&gt;&lt;code&gt;supportFile&lt;/code&gt;&lt;/a&gt; configuration option.</source>
          <target state="translated">所述 &lt;code&gt;supportFolder&lt;/code&gt; 选项被从赛普拉斯在版本除去&lt;a href=&quot;changelog#0-18-0&quot;&gt; &lt;code&gt;0.18.0&lt;/code&gt; &lt;/a&gt;和由模块支撑件和更换&lt;a href=&quot;configuration#Folders-Files&quot;&gt; &lt;code&gt;supportFile&lt;/code&gt; &lt;/a&gt;配置选项。</target>
        </trans-unit>
        <trans-unit id="dfeb06f53eff6ab5252769c37896097dc747f94c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;value&lt;/code&gt; or text content of the &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; to be selected.</source>
          <target state="translated">要选择的 &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; 的 &lt;code&gt;value&lt;/code&gt; 或文本内容。</target>
        </trans-unit>
        <trans-unit id="1b8a61c4209d89efa493d0ead6343e9969628fcf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;watchForFileChanges&lt;/code&gt; property is only in effect when running Cypress using &lt;a href=&quot;../guides/command-line#cypress-open&quot;&gt;&lt;code&gt;cypress open&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">仅当使用&lt;a href=&quot;../guides/command-line#cypress-open&quot;&gt; &lt;code&gt;cypress open&lt;/code&gt; &lt;/a&gt;运行Cypress时， &lt;code&gt;watchForFileChanges&lt;/code&gt; 属性才有效。</target>
        </trans-unit>
        <trans-unit id="fecf04c2f6948f8610e27add339db0cedcba4851" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;whitelist&lt;/code&gt; callback function of &lt;a href=&quot;../../api/cypress-api/cookies#Defaults&quot;&gt;&lt;code&gt;Cypress.Cookies.defaults()&lt;/code&gt;&lt;/a&gt; now receives a &lt;code&gt;cookie object&lt;/code&gt; instead of just the &lt;code&gt;cookies name&lt;/code&gt; as a string.</source>
          <target state="translated">&lt;a href=&quot;../../api/cypress-api/cookies#Defaults&quot;&gt; &lt;code&gt;Cypress.Cookies.defaults()&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;whitelist&lt;/code&gt; 回调函数现在接收一个 &lt;code&gt;cookie object&lt;/code&gt; 而不仅仅是 &lt;code&gt;cookies name&lt;/code&gt; 作为字符串。</target>
        </trans-unit>
        <trans-unit id="ee83369615eb53c7a0cbfc50a828a09c40b458e6" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;total&lt;/em&gt; amount of time Cypress will wait for &lt;em&gt;all&lt;/em&gt; of the assertions to pass is for the duration of the &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt;&lt;code&gt;timeout&lt;/code&gt; (which is 4 seconds).</source>
          <target state="translated">的&lt;em&gt;总&lt;/em&gt;赛普拉斯将等待的时间量&lt;em&gt;的所有&lt;/em&gt;断言的传递对于持续时间&lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt; &lt;code&gt;timeout&lt;/code&gt; （是4秒）。</target>
        </trans-unit>
        <trans-unit id="4e160536966d7accaad011259f2eda48b6c0b432" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;before&lt;/strong&gt; snapshot is taken prior to the click event firing. The &lt;strong&gt;after&lt;/strong&gt; snapshot is taken immediately after the click event. Although this click event caused our browser to load a new page, it&amp;rsquo;s not an instantaneous transition. Depending on how fast your page loaded, you may still see the same page, or a blank screen as the page is unloading and in transition.</source>
          <target state="translated">该&lt;strong&gt;前&lt;/strong&gt;快照之前单击事件触发拍摄。该&lt;strong&gt;后&lt;/strong&gt;快照点击事件发生后立即采取。尽管此click事件导致我们的浏览器加载了新页面，但这并不是瞬时转换。根据页面加载的速度，您可能仍会看到同一页面，或者与该页面正在卸载并处于过渡状态时的黑屏一样。</target>
        </trans-unit>
        <trans-unit id="6d7cc88ff7777390469d48f898273cd69d887962" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;only&lt;/strong&gt; way to do conditional testing on the DOM is if you are 100% sure that the state has &amp;ldquo;settled&amp;rdquo; and there is no possible way for it to change.</source>
          <target state="translated">在DOM上进行条件测试的&lt;strong&gt;唯一&lt;/strong&gt;方法是，如果您100％确定状态已经&amp;ldquo;解决&amp;rdquo;，并且没有任何可能的方式来对其进行更改。</target>
        </trans-unit>
        <trans-unit id="f751a1d4e12183e384450022e001882bf7637014" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;sweet spot&lt;/strong&gt; of Cypress is to be used as a tool to test your own application &lt;strong&gt;as you build it&lt;/strong&gt;. It is built for developers and QA engineers, not manual testers or exploratory testing.</source>
          <target state="translated">在&lt;strong&gt;甜蜜点&lt;/strong&gt;赛普拉斯的是用作测试自己的应用程序的工具&lt;strong&gt;为您打造它&lt;/strong&gt;。它是为开发人员和质量检查工程师而不是手动测试人员或探索性测试而构建的。</target>
        </trans-unit>
        <trans-unit id="ff8e3b379e3ce478ef2fb3e0214f73076e68396b" translate="yes" xml:space="preserve">
          <source>The AUT also displays in the size and orientation specified in your tests. You can change the size or orientation with the &lt;a href=&quot;../../api/commands/viewport&quot;&gt;&lt;code&gt;cy.viewport()&lt;/code&gt;&lt;/a&gt; command or in your &lt;a href=&quot;../references/configuration#Viewport&quot;&gt;Cypress configuration&lt;/a&gt;. If the AUT does not fit within the current browser window, it is scaled appropriately to fit within the window.</source>
          <target state="translated">AUT还会以测试中指定的尺寸和方向显示。您可以使用&lt;a href=&quot;../../api/commands/viewport&quot;&gt; &lt;code&gt;cy.viewport()&lt;/code&gt; &lt;/a&gt;命令或在&lt;a href=&quot;../references/configuration#Viewport&quot;&gt;Cypress配置中&lt;/a&gt;更改大小或方向。如果AUT不适合当前浏览器窗口，则将其适当缩放以适合该窗口。</target>
        </trans-unit>
        <trans-unit id="4e980d08fd113d90f36052ec1c8d470b3662ceaf" translate="yes" xml:space="preserve">
          <source>The Aurelia CLI is the official command line tool for Aurelia.</source>
          <target state="translated">Aurelia CLI是Aurelia的官方命令行工具。</target>
        </trans-unit>
        <trans-unit id="9e737aee3a667e0afcffa08b6a9b485bbb2757bb" translate="yes" xml:space="preserve">
          <source>The Bar Chart View charts the lengths of each spec file. This view is helpful to determine which spec files or tests are running longer than others.</source>
          <target state="translated">条形图 &quot;视图可绘制每个规格文件的长度。此视图有助于确定哪些规格文件或测试运行的时间比其他文件长。</target>
        </trans-unit>
        <trans-unit id="66f6088f517b6bc02477752b800bccb6f630afce" translate="yes" xml:space="preserve">
          <source>The Bar Chart View visualizes the &lt;strong&gt;duration&lt;/strong&gt; of your spec files relative to each other.</source>
          <target state="translated">条形图视图将规格文件的相对&lt;strong&gt;时间&lt;/strong&gt;可视化。</target>
        </trans-unit>
        <trans-unit id="723da8cc4f043fdfe9576683583b7579ff227eba" translate="yes" xml:space="preserve">
          <source>The Browserify Preprocessor handles:</source>
          <target state="translated">Browserify预处理器处理。</target>
        </trans-unit>
        <trans-unit id="5b3df72f1bedfcacc825ec2eb969c8aa30097437" translate="yes" xml:space="preserve">
          <source>The CLI command tells Cypress to use the &lt;code&gt;mocha-multi-reporters&lt;/code&gt; module and points at the config file.</source>
          <target state="translated">CLI命令告诉Cypress使用 &lt;code&gt;mocha-multi-reporters&lt;/code&gt; 模块并指向配置文件。</target>
        </trans-unit>
        <trans-unit id="2a88f2beead5608e18be7764214944cf40ca64cb" translate="yes" xml:space="preserve">
          <source>The CLI now sends &lt;code&gt;arch&lt;/code&gt; parameter to the download server so we can build and serve multiple binaries for Windows + Linux.</source>
          <target state="translated">CLI现在将 &lt;code&gt;arch&lt;/code&gt; 参数发送到下载服务器，因此我们可以为Windows + Linux构建并提供多个二进制文件。</target>
        </trans-unit>
        <trans-unit id="48de35cf1f4bc591562ca5e714e9b8e7f03cd8fc" translate="yes" xml:space="preserve">
          <source>The CLI now treats &lt;code&gt;-h&lt;/code&gt; and &lt;code&gt;--help&lt;/code&gt; and &lt;code&gt;help&lt;/code&gt; as valid commands. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/645&quot;&gt;#645&lt;/a&gt;.</source>
          <target state="translated">CLI现在将 &lt;code&gt;-h&lt;/code&gt; 和 &lt;code&gt;--help&lt;/code&gt; 和 &lt;code&gt;help&lt;/code&gt; 视为有效命令。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/645&quot;&gt;＃645&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e28b00e7a7757e089a846796d6c8fc308705808b" translate="yes" xml:space="preserve">
          <source>The Chrome browser is evergreen - meaning it will automatically update itself, sometimes causing a breaking change in your automated tests. We host &lt;a href=&quot;https://chromium.cypress.io&quot;&gt;chromium.cypress.io&lt;/a&gt; with links to download a specific released version of Chrome (dev, Canary and stable) for every platform.</source>
          <target state="translated">Chrome浏览器是常绿的-意思是它会自动更新，有时会导致自动化测试发生重大变化。我们托管&lt;a href=&quot;https://chromium.cypress.io&quot;&gt;chromium.cypress.io，&lt;/a&gt;并提供链接以下载适用于每个平台的特定版本的Chrome（dev，Canary和stable）。</target>
        </trans-unit>
        <trans-unit id="67cd4484df6cf7896131e72ec5ed216b322ca1e4" translate="yes" xml:space="preserve">
          <source>The Chromium Renderer process just crashed</source>
          <target state="translated">Chromium渲染器进程崩溃了</target>
        </trans-unit>
        <trans-unit id="7522c5445757f07f38c1d122c5b615225e543e80" translate="yes" xml:space="preserve">
          <source>The Cypress API is not an exact 1:1 implementation of Promises. They have Promise like qualities and yet there are important differences you should be aware of.</source>
          <target state="translated">Cypress API并不是承诺的1:1的精确实现。它们有类似于Promise的品质,但也有一些重要的区别,你应该注意。</target>
        </trans-unit>
        <trans-unit id="149fd7237e1bd703353a2a711876ba2f11bbfdd4" translate="yes" xml:space="preserve">
          <source>The Cypress Chrome extension now has a static ID of &lt;code&gt;caljajdfkjjjdehjdoimjkkakekklcck&lt;/code&gt;. This allows Cypress to be added to extension whitelists for those working under corporate policies that prohibit extensions. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3673&quot;&gt;#3673&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1239&quot;&gt;#1239&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2494&quot;&gt;#2494&lt;/a&gt;.</source>
          <target state="translated">现在，赛普拉斯Chrome扩展程序的静态ID为 &lt;code&gt;caljajdfkjjjdehjdoimjkkakekklcck&lt;/code&gt; 。对于那些在禁止扩展的公司政策下工作的人员，这使赛普拉斯可以添加到扩展白名单中。地址&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3673&quot;&gt;＃3673&lt;/a&gt;，&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1239&quot;&gt;＃1239&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2494&quot;&gt;＃2494&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4ce5dc2d981848beaf412425e818c7bd0de9c8ad" translate="yes" xml:space="preserve">
          <source>The Cypress CircleCI Orb is a piece of configuration set in your &lt;code&gt;circle.yml&lt;/code&gt; file to correctly install, cache and run Cypress with very little effort.</source>
          <target state="translated">赛普拉斯CircleCI Orb是您 &lt;code&gt;circle.yml&lt;/code&gt; 文件中设置的一部分配置，可以轻松地正确安装，缓存和运行赛普拉斯。</target>
        </trans-unit>
        <trans-unit id="ed0f7f2cc7404f16f5197b863dce897487d0e154" translate="yes" xml:space="preserve">
          <source>The Cypress Dashboard can integrate your Cypress tests with your GitHub workflow via commit &lt;a href=&quot;#Status-checks&quot;&gt;status checks&lt;/a&gt; and &lt;a href=&quot;#Pull-request-comments&quot;&gt;pull-request comments&lt;/a&gt;.</source>
          <target state="translated">赛普拉斯仪表板可以通过提交&lt;a href=&quot;#Status-checks&quot;&gt;状态检查&lt;/a&gt;和&lt;a href=&quot;#Pull-request-comments&quot;&gt;请求请求注释&lt;/a&gt;将赛普拉斯测试与GitHub工作流集成在一起。</target>
        </trans-unit>
        <trans-unit id="734453ed8ccec92af8bcdb6d41aa861afb986659" translate="yes" xml:space="preserve">
          <source>The Cypress GitHub App can provide detailed test information within pull requests via comments that include:</source>
          <target state="translated">赛普拉斯GitHub应用可以通过注释在拉取请求中提供详细的测试信息,包括。</target>
        </trans-unit>
        <trans-unit id="3c0b9da1ca25904d85c4ce3b84414f74f15947d2" translate="yes" xml:space="preserve">
          <source>The Cypress GitHub App reports commit status checks in two separate styles:</source>
          <target state="translated">赛普拉斯GitHub应用程序以两种不同的方式报告提交状态检查。</target>
        </trans-unit>
        <trans-unit id="6bfd4432efd54a8d4e5539e7e47d892a552fef1b" translate="yes" xml:space="preserve">
          <source>The Cypress Test Runner attempts to find all compatible browsers on the user&amp;rsquo;s machine. The drop down to select a different browser is in the top right corner of the Test Runner.</source>
          <target state="translated">赛普拉斯测试运行器试图在用户计算机上查找所有兼容的浏览器。选择其他浏览器的下拉菜单位于&amp;ldquo;测试运行器&amp;rdquo;的右上角。</target>
        </trans-unit>
        <trans-unit id="47e67ff0ae6e0340197ee3e515f8f8c3551ab353" translate="yes" xml:space="preserve">
          <source>The Cypress Test with &lt;code&gt;cy.invoke()&lt;/code&gt; awaiting the promise:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57403cf681171cbc5d54f2059aa6f5b17a8fb36a" translate="yes" xml:space="preserve">
          <source>The Cypress launched browser automatically:</source>
          <target state="translated">赛普拉斯自动启动浏览器。</target>
        </trans-unit>
        <trans-unit id="737fa205c8e97015df823b61f461e49e1218db3e" translate="yes" xml:space="preserve">
          <source>The Cypress tray icon has been updated. It&amp;rsquo;s much better now.</source>
          <target state="translated">赛普拉斯托盘图标已更新。现在好多了。</target>
        </trans-unit>
        <trans-unit id="2c71105207b76e74dbe9566bb0a0379bb96f1c97" translate="yes" xml:space="preserve">
          <source>The Cypress version</source>
          <target state="translated">赛普拉斯版本</target>
        </trans-unit>
        <trans-unit id="c27e531e77f118432d98b83f1c7c78418516bf0d" translate="yes" xml:space="preserve">
          <source>The DOM element must be in an &amp;ldquo;interactable&amp;rdquo; state prior to the triggered event happening (it must be visible and not disabled).</source>
          <target state="translated">在触发事件发生之前，DOM元素必须处于&amp;ldquo;可交互&amp;rdquo;状态（它必须可见并且不能禁用）。</target>
        </trans-unit>
        <trans-unit id="a898b6897f6d5f115de55e773d31576e8bb04885" translate="yes" xml:space="preserve">
          <source>The DOM has not loaded yet.</source>
          <target state="translated">DOM还没有加载。</target>
        </trans-unit>
        <trans-unit id="c795b4540030ed3c1fb27937f96d645fe13e6a82" translate="yes" xml:space="preserve">
          <source>The DOM is unstable</source>
          <target state="translated">DOM是不稳定的</target>
        </trans-unit>
        <trans-unit id="c1283498102e3ae44ef34d23c876ef26e181e791" translate="yes" xml:space="preserve">
          <source>The Dashboard Service has been updated to show you more visual information about what happened during a run. You can see how specs were parallelized and you can calculate the effect of adding or removing machines to help reduce the overall run time.</source>
          <target state="translated">仪表盘服务已经更新,可以向您展示更多关于运行期间发生的视觉信息。你可以看到规格是如何并行化的,你可以计算增加或移除机器的效果,以帮助减少整体运行时间。</target>
        </trans-unit>
        <trans-unit id="a15a48b8b370fe21d50fc87d225e055fc7a9b1f9" translate="yes" xml:space="preserve">
          <source>The Dashboard has been upgraded to make it easier to understand the results of each spec run. This was done in anticipation of providing you the ability to parallelize and load balance your spec files automatically in CI.</source>
          <target state="translated">仪表盘已经升级,使其更容易理解每个规范运行的结果。这样做是为了让您能够在CI中自动并行化和负载平衡您的规格文件。</target>
        </trans-unit>
        <trans-unit id="8cecd28d4242ecf92652ccf3dd30cc3f87604e2d" translate="yes" xml:space="preserve">
          <source>The Desktop App has been re-skinned with misc GUI enhancements such as help text, popovers, clearer errors, better loading indicators, etc.</source>
          <target state="translated">桌面应用已重新换肤,并增加了其他GUI功能,如帮助文本、弹出式菜单、更清晰的错误、更好的加载指标等。</target>
        </trans-unit>
        <trans-unit id="2dbe0afb9f448c35544cfcbecb8dadf4b7966aa7" translate="yes" xml:space="preserve">
          <source>The Desktop App&amp;rsquo;s file size is now much smaller and unzips much faster. In the next release there will be a special &lt;code&gt;CI&lt;/code&gt; build which removes the need to run Xvfb.</source>
          <target state="translated">现在，桌面应用程序的文件大小更小，并且解压缩速度更快。在下一个版本中，将有一个特殊的 &lt;code&gt;CI&lt;/code&gt; 构建，从而消除了运行Xvfb的需要。</target>
        </trans-unit>
        <trans-unit id="322a0c3549e2d65cfa88fc4e401921dbe0b76b41" translate="yes" xml:space="preserve">
          <source>The Desktop GUI properly renders folders that contain specs in Windows now. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1335&quot;&gt;#1335&lt;/a&gt;.</source>
          <target state="translated">桌面GUI现在可以正确呈现Windows中包含规范的文件夹。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1335&quot;&gt;＃1335&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3b59a45aad64c2e16e3562e274f463f18da4c99f" translate="yes" xml:space="preserve">
          <source>The Desktop-GUI has been updated to get the new routes provided by the Cypress API for runs. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2189&quot;&gt;#2189&lt;/a&gt;.</source>
          <target state="translated">桌面GUI已更新，以获取赛普拉斯API提供的用于运行的新路由。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2189&quot;&gt;＃2189&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="667b7db9c90d2b1060bfb8a20f57db58ddb02ae8" translate="yes" xml:space="preserve">
          <source>The Electron browser has two unique advantages:</source>
          <target state="translated">Electron浏览器有两个独特的优势。</target>
        </trans-unit>
        <trans-unit id="267db1fbd681d2b01e896f01c955233c91006e2d" translate="yes" xml:space="preserve">
          <source>The Electron browser now runs Chrome Version 61. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4000&quot;&gt;#4000&lt;/a&gt;.</source>
          <target state="translated">电子浏览器现在运行Chrome版本61。地址为&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4000&quot;&gt;＃4000&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cc648f8d216380c9f950a407a9aef64ec1ba9dbc" translate="yes" xml:space="preserve">
          <source>The GitHub branch, pull request, author, commit sha and commit message associated with the run (if any)</source>
          <target state="translated">与运行相关的GitHub分支、拉取请求、作者、提交Sha和提交信息(如果有的话)。</target>
        </trans-unit>
        <trans-unit id="fed769fa3a9ac06f96b17d72858f9793bd1fae82" translate="yes" xml:space="preserve">
          <source>The HTTP method to use in the request</source>
          <target state="translated">请求中使用的HTTP方法</target>
        </trans-unit>
        <trans-unit id="9b56b8bf9001cef07a0a5ef756c9664463293789" translate="yes" xml:space="preserve">
          <source>The HTTP method to use in the visit. Can be &lt;code&gt;GET&lt;/code&gt; or &lt;code&gt;POST&lt;/code&gt;.</source>
          <target state="translated">访问中使用的HTTP方法。可以是 &lt;code&gt;GET&lt;/code&gt; 或 &lt;code&gt;POST&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="85b3be1d0f546b15fb96b04375b14950022ced4d" translate="yes" xml:space="preserve">
          <source>The Kitchen Sink application has been loaded into the &lt;a href=&quot;../core-concepts/test-runner#Overview&quot;&gt;App Preview&lt;/a&gt; pane.</source>
          <target state="translated">Kitchen Sink应用程序已加载到&amp;ldquo; &lt;a href=&quot;../core-concepts/test-runner#Overview&quot;&gt;应用程序预览&amp;rdquo;&lt;/a&gt;窗格中。</target>
        </trans-unit>
        <trans-unit id="1cf826e4a28ec68a0b9fe0bbf70fa4ea604cb28c" translate="yes" xml:space="preserve">
          <source>The Machines View charts spec files by the machines that executed them. This view makes it easy to evaluate the contribution of each machine to the overall test run.</source>
          <target state="translated">机器视图按执行它们的机器绘制规格文件的图表。该视图可以轻松评估每台机器对整个测试运行的贡献。</target>
        </trans-unit>
        <trans-unit id="4b89c8de24c9423ec96f6cb9acaa41f22e64f632" translate="yes" xml:space="preserve">
          <source>The OSX Cypress App was not being properly signed (since 0.10.0) due to an oversight in our deployment process. This has been fixed now and additional checks have been added to ensure the deployed version is properly signed. Updating within the app was unaffected. This bug only effected fresh downloads from the internet.</source>
          <target state="translated">由于我们在部署过程中的疏忽,OSX赛普拉斯应用程序没有被正确签署(自0.10.0起)。现在,这个问题已经得到解决,并增加了额外的检查,以确保部署的版本得到正确的签名。在应用内更新不受影响。这个错误只影响到从互联网上的新下载。</target>
        </trans-unit>
        <trans-unit id="12d6e108059d8871957f07700d81f0600f9b0b5f" translate="yes" xml:space="preserve">
          <source>The Plugins API allows you to hook into and extend Cypress behavior.</source>
          <target state="translated">插件API允许你钩入并扩展Cypress行为。</target>
        </trans-unit>
        <trans-unit id="a79f306df4007f5975a6169f9220fffc377a922f" translate="yes" xml:space="preserve">
          <source>The Plugins API is relatively new.</source>
          <target state="translated">插件API是比较新的。</target>
        </trans-unit>
        <trans-unit id="ef3ca6dc6414b0afa685947487c8bb95c3c647e8" translate="yes" xml:space="preserve">
          <source>The Runner UI no longer appears to be &amp;ldquo;running&amp;rdquo; when there is a spec bundle error in the &lt;code&gt;supportFile&lt;/code&gt;.</source>
          <target state="translated">当 &lt;code&gt;supportFile&lt;/code&gt; 中出现规格捆绑包错误时，Runner UI不再看起来正在&amp;ldquo;运行&amp;rdquo; 。</target>
        </trans-unit>
        <trans-unit id="58c9c4698fef81c10b7721bfbed6894597389fa3" translate="yes" xml:space="preserve">
          <source>The Screenshot API allows you set defaults for how screenshots are captured during &lt;a href=&quot;../commands/screenshot&quot;&gt;&lt;code&gt;.screenshot&lt;/code&gt;&lt;/a&gt; and automatic screenshots taken during test failures. You can set defaults for the following:</source>
          <target state="translated">Screenshot API可让您设置&lt;a href=&quot;../commands/screenshot&quot;&gt; &lt;code&gt;.screenshot&lt;/code&gt; &lt;/a&gt;期间捕获屏幕截图的方式以及测试失败期间获取自动截图的方式的默认设置。您可以为以下设置默认值：</target>
        </trans-unit>
        <trans-unit id="8d5b7f375467dc1ceac8e6e7563ffc7b9e1dd29d" translate="yes" xml:space="preserve">
          <source>The Selector Playground is an interactive feature that helps you:</source>
          <target state="translated">选择器游乐场是一个互动功能,可以帮助你。</target>
        </trans-unit>
        <trans-unit id="d9852e853f52b99d210e86b2f56cc55c3202aeb4" translate="yes" xml:space="preserve">
          <source>The Selector Playground now works correctly in the Electron browser. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1086&quot;&gt;#1086&lt;/a&gt;.</source>
          <target state="translated">选择器游乐场现在可以在电子浏览器中正常工作。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1086&quot;&gt;＃1086&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="18428e92a03294d76a3cba7d05f44d578b405863" translate="yes" xml:space="preserve">
          <source>The Test Runner</source>
          <target state="translated">测试员</target>
        </trans-unit>
        <trans-unit id="0df353fce0af4d6c4d300b3b9e4c8aae8cae1926" translate="yes" xml:space="preserve">
          <source>The Test Runner can now have projects added by being &amp;lsquo;dragged&amp;rsquo; in. Fixes</source>
          <target state="translated">现在，测试运行器可以通过&amp;ldquo;拖入&amp;rdquo;来添加项目。</target>
        </trans-unit>
        <trans-unit id="90b1002eaf26fdb995b6decdd2f3d04d22a92052" translate="yes" xml:space="preserve">
          <source>The Test Runner displays the scrollbar correctly when the update banner is displayed. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/803&quot;&gt;#803&lt;/a&gt;.</source>
          <target state="translated">显示更新标语时，测试运行器正确显示滚动条。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/803&quot;&gt;＃803&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="01ff55d9ea08dd21f018dd51886c4ded0c930f3e" translate="yes" xml:space="preserve">
          <source>The Test Runner now accounts for cypress being installed per project as npm module. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/500&quot;&gt;#500&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/514&quot;&gt;#514&lt;/a&gt;.</source>
          <target state="translated">现在，Test Runner会将每个项目中安装的cypress占为npm模块。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/500&quot;&gt;＃500&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/514&quot;&gt;＃514&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="15942512a9b81779474c6448b3e4e656adb2ead2" translate="yes" xml:space="preserve">
          <source>The Test Runner now displays &lt;code&gt;skipped&lt;/code&gt; tests differently than &lt;code&gt;pending&lt;/code&gt; tests. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/244&quot;&gt;#244&lt;/a&gt;.</source>
          <target state="translated">现在，测试运行器显示的 &lt;code&gt;skipped&lt;/code&gt; 测试与 &lt;code&gt;pending&lt;/code&gt; 测试不同。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/244&quot;&gt;＃244&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6ca2ba6d9a5a580951c21bc908bcac23b055a964" translate="yes" xml:space="preserve">
          <source>The Test Runner now enables you to collapse folders when displaying a list of specs. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/760&quot;&gt;#760&lt;/a&gt;. Contributed by &lt;a href=&quot;https://github.com/metcorne&quot;&gt;@metcorne&lt;/a&gt;.</source>
          <target state="translated">现在，使用&amp;ldquo;测试运行器&amp;rdquo;，您可以在显示规格列表时折叠文件夹。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/760&quot;&gt;＃760&lt;/a&gt;。由&lt;a href=&quot;https://github.com/metcorne&quot;&gt;@metcorne提供&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ae05cf351f79c4fbe6fb389278cb73a1930cd1dd" translate="yes" xml:space="preserve">
          <source>The Test Runner now retries node-originated errors from our internal API requests. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2341&quot;&gt;#2341&lt;/a&gt;</source>
          <target state="translated">现在，测试运行器从我们的内部API请求中重试源自节点的错误。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2341&quot;&gt;＃2341&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e1b0802754545c7dba149944410074df851d418b" translate="yes" xml:space="preserve">
          <source>The Test Runner update window now has messaging about &lt;code&gt;package.json&lt;/code&gt; versioning. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/513&quot;&gt;#513&lt;/a&gt;.</source>
          <target state="translated">&amp;ldquo;测试运行器&amp;rdquo;更新窗口现在具有有关 &lt;code&gt;package.json&lt;/code&gt; 版本的消息。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/513&quot;&gt;＃513&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="74d4db61a84b73f5e5e7ae74d25c95179efd7242" translate="yes" xml:space="preserve">
          <source>The Test Runner will now display your email address when you have not set a name in GitHub.</source>
          <target state="translated">当你没有在GitHub中设置名称时,测试运行器现在将显示你的电子邮件地址。</target>
        </trans-unit>
        <trans-unit id="203a719c5b14a76523e4796f4015f6f3493fdf4d" translate="yes" xml:space="preserve">
          <source>The Test Runner&amp;rsquo;s search now resets when switching between projects. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2512&quot;&gt;#2512&lt;/a&gt;.</source>
          <target state="translated">现在，在项目之间切换时，测试运行程序的搜索将重置。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2512&quot;&gt;＃2512&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e633f13624865ed1c7325dfe2aa98cd04d9f3ea0" translate="yes" xml:space="preserve">
          <source>The Timeline View charts your spec files as they ran relative to each other. This is especially helpful when you want to visualize how your tests ran chronologically across all available machines.</source>
          <target state="translated">时间线视图会在您的规格文件相对于其他文件运行时绘制图表。当你想可视化你的测试如何在所有可用的机器上按时间顺序运行时,这一点特别有用。</target>
        </trans-unit>
        <trans-unit id="ec29c274c2bde9efcba2e7722fe78066d5108363" translate="yes" xml:space="preserve">
          <source>The Timeline View charts your spec files as they ran relative to each other. This is especially helpful when you want to visualize how your tests ran in &lt;a href=&quot;../guides/parallelization&quot;&gt;parallel&lt;/a&gt;.</source>
          <target state="translated">当您的规格文件相对于彼此运行时，&amp;ldquo;时间轴视图&amp;rdquo;会绘制图表。当您想可视化测试如何&lt;a href=&quot;../guides/parallelization&quot;&gt;并行&lt;/a&gt;运行时，这特别有用。</target>
        </trans-unit>
        <trans-unit id="bb1584aa60107a47c0411543f4232ea16f9fc261" translate="yes" xml:space="preserve">
          <source>The URL property on all XHR&amp;rsquo;s is now completely decoded, even on URLs which were originally encoded. The reason is for easier assertions and debugging. This URL property is specific to Cypress and does not actually affect the underlying XHR.</source>
          <target state="translated">现在，即使在最初编码的URL上，所有XHR的URL属性也已被完全解码。原因是为了更容易断言和调试。该URL属性特定于赛普拉斯，实际上并不影响基础XHR。</target>
        </trans-unit>
        <trans-unit id="f22b69fbf16b28ee54e3bc3fee5917aedd132e5c" translate="yes" xml:space="preserve">
          <source>The URL to make the request to</source>
          <target state="translated">提出请求的URL</target>
        </trans-unit>
        <trans-unit id="16849e6ba858750f570e0ac6074a29582bf3cb85" translate="yes" xml:space="preserve">
          <source>The URL to make the request to.</source>
          <target state="translated">提出请求的URL。</target>
        </trans-unit>
        <trans-unit id="6803d6ac24b6a9b7e4de860a696b95f324248653" translate="yes" xml:space="preserve">
          <source>The URL to visit.</source>
          <target state="translated">访问的网址。</target>
        </trans-unit>
        <trans-unit id="47224b103ed560a9d78a230a0199d46293d1fdf7" translate="yes" xml:space="preserve">
          <source>The URL to visit. Behaves the same as the &lt;code&gt;url&lt;/code&gt; argument.</source>
          <target state="translated">要访问的URL。行为与 &lt;code&gt;url&lt;/code&gt; 参数相同。</target>
        </trans-unit>
        <trans-unit id="2d9bb6ecc650140fa45e8526eeca8f62fce701aa" translate="yes" xml:space="preserve">
          <source>The URL will now automatically be restored when hovering over the Command Log to indicate the state of the URL at the time the command ran.</source>
          <target state="translated">现在,当鼠标悬停在命令日志上时,URL将自动恢复,以显示命令运行时URL的状态。</target>
        </trans-unit>
        <trans-unit id="0c70c3de81fd42c77b414f73a363f84b76df0361" translate="yes" xml:space="preserve">
          <source>The URL will now highlight in a yellow background during a revert DOM snapshot.</source>
          <target state="translated">现在,在还原DOM快照时,URL将以黄色背景突出显示。</target>
        </trans-unit>
        <trans-unit id="01257de0ccd29de0fd21eac3c466f390cedb0c38" translate="yes" xml:space="preserve">
          <source>The XHR object which is returned to you to via &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt; is now more consistent with other return values such as &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt;. It should be much easier to work with &lt;code&gt;request body&lt;/code&gt;, &lt;code&gt;request headers&lt;/code&gt;, &lt;code&gt;response body&lt;/code&gt; and &lt;code&gt;response headers&lt;/code&gt;.</source>
          <target state="translated">现在，通过&lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt;返回给您的XHR对象与其他返回值（例如&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; )&lt;/a&gt;更加一致。使用 &lt;code&gt;request body&lt;/code&gt; ， &lt;code&gt;request headers&lt;/code&gt; ， &lt;code&gt;response body&lt;/code&gt; 和 &lt;code&gt;response headers&lt;/code&gt; 应该容易得多。</target>
        </trans-unit>
        <trans-unit id="0ea80d625147d4e908537a921b72ad6f1fe1dea1" translate="yes" xml:space="preserve">
          <source>The XHR&amp;rsquo;s URL property will now always return you a &lt;code&gt;Fully Qualified Domain Name&lt;/code&gt; including the origin, port, host, etc. Previously the URL property represented whatever the XHR was opened with. We&amp;rsquo;ve worked around this difference by when checking whether an XHR should be stubbed, the origin is tested both as present and omitted.</source>
          <target state="translated">现在，XHR的URL属性将始终为您返回一个 &lt;code&gt;Fully Qualified Domain Name&lt;/code&gt; 包括源，端口，主机等。以前，URL属性代表打开XHR时使用的内容。我们通过检查是否应该对XHR进行存根，是否按原样对原点进行测试来解决这一差异。</target>
        </trans-unit>
        <trans-unit id="adbb198ee5a2397ad030329fc6b5dd92db2b6f15" translate="yes" xml:space="preserve">
          <source>The ability to open the context menu to see &amp;ldquo;Inspect Element&amp;rdquo; has been reenabled in the Electron browser. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4002&quot;&gt;#4002&lt;/a&gt;.</source>
          <target state="translated">在电子浏览器中已重新启用打开上下文菜单以查看&amp;ldquo;检查元素&amp;rdquo;的功能。地址&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4002&quot;&gt;＃4002&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b90a9bb25749482764e4e2263bead3acde0547e8" translate="yes" xml:space="preserve">
          <source>The above &lt;code&gt;CYPRESS_INSTALL_BINARY&lt;/code&gt; urls are temporary - they are purged after 30 days. The format of the url is as follows:</source>
          <target state="translated">上面的 &lt;code&gt;CYPRESS_INSTALL_BINARY&lt;/code&gt; 网址是临时的-30天后将清除它们。网址格式如下：</target>
        </trans-unit>
        <trans-unit id="cab283e12e1349e25747a508574de2b72f0f9837" translate="yes" xml:space="preserve">
          <source>The above configuration will output the JUnit report to &lt;code&gt;STDOUT&lt;/code&gt; and save it into an XML file. Reporter options differ depending on the reporter (and may not be supported at all). Refer to the documentation for the reporter you are using for details on which options are supported.</source>
          <target state="translated">上面的配置会将JUnit报告 &lt;code&gt;STDOUT&lt;/code&gt; 到STDOUT并将其保存到XML文件中。报告程序选项因报告程序而异（可能完全不受支持）。有关支持哪些选项的详细信息，请参阅所用报告程序的文档。</target>
        </trans-unit>
        <trans-unit id="2ca86aa9b0982e894455dd56eaa5d5687a162634" translate="yes" xml:space="preserve">
          <source>The above example is an oversimplification. Let&amp;rsquo;s look at a more complex example.</source>
          <target state="translated">上面的示例过于简单。让我们看一个更复杂的例子。</target>
        </trans-unit>
        <trans-unit id="1b0b651e666142d29f127e43f442376cddd42313" translate="yes" xml:space="preserve">
          <source>The absolute path to the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f6168cdaa18c3d88d0ac6c39afc63867b920b5c" translate="yes" xml:space="preserve">
          <source>The absolute path to the spec file (e.g. &lt;code&gt;/Users/janelane/my-app/cypress/integration/login_spec.js&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba21fd66a205ce0682c59454a500efc0ec0c92d5" translate="yes" xml:space="preserve">
          <source>The algorithm for replaying aliased commands is now much more accurate, handles stale element references better, and will not replay commands which have a side effect (like action commands). The end result is Cypress will now almost always find the desired element by determining the minimum number of re-queries and is not susceptible to stale element references. Additionally using assertions on aliased elements now works (where previously using a &lt;em&gt;Command Option&lt;/em&gt; on an alias would just be ignored. This was very difficult to implement but should be 100% solid. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/36&quot;&gt;#36&lt;/a&gt;.</source>
          <target state="translated">现在，重播别名命令的算法更加准确，可以更好地处理陈旧元素引用，并且不会重播具有副作用的命令（例如动作命令）。最终结果是，赛普拉斯现在几乎总是通过确定最少的重新查询次数来找到所需的元素，并且不易受过时的元素引用的影响。此外，现在可以对别名元素使用断言（以前在别名上使用&lt;em&gt;Command Option&lt;/em&gt;的情况将被忽略。这很难实现，但应100％固定。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/36&quot;&gt;＃36）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="230d5bfb2e55eaae4e75347d1b9f82f06cc6cea1" translate="yes" xml:space="preserve">
          <source>The algorithm that ensures an element is not covered now calculates this at the center coordinates instead of the top left. This should yield more accurate results, be closer to the default expectations of users, and bypass fractional pixel problems we were having. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/655&quot;&gt;#655&lt;/a&gt;.</source>
          <target state="translated">现在，确保不覆盖元素的算法在中心坐标而不是左上角进行计算。这样可以产生更准确的结果，更接近用户的默认期望，并绕过我们遇到的小数像素问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/655&quot;&gt;＃655&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8023c7ade591c22761b1a5dbe56b000a52ddb297" translate="yes" xml:space="preserve">
          <source>The amount of time to wait in milliseconds.</source>
          <target state="translated">等待的时间,以毫秒为单位。</target>
        </trans-unit>
        <trans-unit id="6732f6ed22322fd0f9c08e2a03a4b4c06f4ce7af" translate="yes" xml:space="preserve">
          <source>The answer is usually &lt;strong&gt;yes&lt;/strong&gt;. Here&amp;rsquo;s an example:</source>
          <target state="translated">答案通常&lt;strong&gt;是&lt;/strong&gt;。这是一个例子：</target>
        </trans-unit>
        <trans-unit id="fef60c6ed9526c71cd3cfb41efef875280ec1f04" translate="yes" xml:space="preserve">
          <source>The argument &lt;code&gt;arg&lt;/code&gt; sent via &lt;code&gt;cy.task(name, arg)&lt;/code&gt; should be serializable; it cannot have circular dependencies (issue &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/5539&quot;&gt;#5539&lt;/a&gt;). If there are any special fields like &lt;code&gt;Date&lt;/code&gt;, you are responsible for their conversion (issue &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4980&quot;&gt;#4980&lt;/a&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a86971f643a552776be29192c39b703fc551bdb" translate="yes" xml:space="preserve">
          <source>The arguments, without transforming them (they are the real arguments)</source>
          <target state="translated">论据,而不对其进行转换(它们是真正的论据)。</target>
        </trans-unit>
        <trans-unit id="f303fdc44400b5249d2c24e01d26c966a4517603" translate="yes" xml:space="preserve">
          <source>The associated Cypress project</source>
          <target state="translated">相关的Cypress项目</target>
        </trans-unit>
        <trans-unit id="9e4029d2b05a03bf22e19ee9ac0ea65731c08eb3" translate="yes" xml:space="preserve">
          <source>The auto generated &lt;code&gt;example_spec.js&lt;/code&gt; no longer errors on &lt;code&gt;cy.visit('app/index.html')&lt;/code&gt; since that file would likely not locally exist.</source>
          <target state="translated">自动生成的 &lt;code&gt;example_spec.js&lt;/code&gt; 不再在 &lt;code&gt;cy.visit('app/index.html')&lt;/code&gt; 上出错，因为该文件可能本地不存在。</target>
        </trans-unit>
        <trans-unit id="5d5f090dee7604485dcd59c8b000462d0bdb7258" translate="yes" xml:space="preserve">
          <source>The available functions on &lt;code&gt;req&lt;/code&gt; are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7ffb7105687b21bdd90113b22f435bec775c677" translate="yes" xml:space="preserve">
          <source>The available functions on &lt;code&gt;res&lt;/code&gt; are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3ca22c7b0845719d5c1c36260d5657c5d4a1f60" translate="yes" xml:space="preserve">
          <source>The base name of the spec file (e.g. &lt;code&gt;login_spec.js&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d81b05325b34deb81e363d64a96c30968573c6d7" translate="yes" xml:space="preserve">
          <source>The below example matches all &lt;code&gt;DELETE&lt;/code&gt; requests to &amp;ldquo;/users&amp;rdquo; and stubs a response with an empty JSON object.</source>
          <target state="translated">下面的示例将所有 &lt;code&gt;DELETE&lt;/code&gt; 请求与&amp;ldquo; / users&amp;rdquo;进行匹配，并在响应中添加一个空的JSON对象。</target>
        </trans-unit>
        <trans-unit id="9b29ba2075d125bf31dabfdd6e054e9789810696" translate="yes" xml:space="preserve">
          <source>The below example will return the &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; in the &lt;code&gt;#header&lt;/code&gt; since that is the &lt;em&gt;first&lt;/em&gt; element that contains the text &amp;ldquo;Jane Lane&amp;rdquo;.</source>
          <target state="translated">下面的示例将在 &lt;code&gt;#header&lt;/code&gt; 中返回 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; ，因为这是包含文本&amp;ldquo; Jane Lane&amp;rdquo; 的&lt;em&gt;第一个&lt;/em&gt;元素。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="02420601b94e62e3629b9b542951288782b7a8bd" translate="yes" xml:space="preserve">
          <source>The binary cache now correctly works and will not reinstall Cypress if an existing version is already installed. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1813&quot;&gt;#1813&lt;/a&gt;.</source>
          <target state="translated">现在，二进制高速缓存可以正常工作，并且如果已经安装了现有版本，则不会重新安装Cypress。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1813&quot;&gt;＃1813&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d572f92da6a17728ee2040b4736a6ef4833d8950" translate="yes" xml:space="preserve">
          <source>The box at the top that displays the selector is also a text input.</source>
          <target state="translated">顶部显示选择器的方框也是一个文本输入。</target>
        </trans-unit>
        <trans-unit id="b532e903135e51091bdb69ca9d752c6c3b4889a8" translate="yes" xml:space="preserve">
          <source>The branch name is now properly collected when recording in Buildkite CI. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/777&quot;&gt;#777&lt;/a&gt;.</source>
          <target state="translated">现在在Buildkite CI中记录时可以正确收集分支名称。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/777&quot;&gt;＃777&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="87e305fdc79003a9f2ed4c3c32a6b6bf6e8803a2" translate="yes" xml:space="preserve">
          <source>The browser and version</source>
          <target state="translated">浏览器和版本</target>
        </trans-unit>
        <trans-unit id="7cd486cc860cf0e865d5c5fa67f6d827c8cd8fab" translate="yes" xml:space="preserve">
          <source>The build number and url to CI for tests run within &lt;a href=&quot;https://drone.io/&quot;&gt;Drone&lt;/a&gt; are now captured and displayed on the run within the Dashboard. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1709&quot;&gt;#1709&lt;/a&gt;.</source>
          <target state="translated">现在，将捕获在&lt;a href=&quot;https://drone.io/&quot;&gt;Drone&lt;/a&gt;中运行的测试的内部版本号和CI的URL，并将其显示在仪表板上的运行中。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1709&quot;&gt;＃1709&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c8891e911caa1cb7218669a59d2a11ce43dcc620" translate="yes" xml:space="preserve">
          <source>The build process of the driver has been modernized. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/429&quot;&gt;#429&lt;/a&gt;.</source>
          <target state="translated">驱动程序的构建过程已实现现代化。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/429&quot;&gt;＃429&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a4293704d7380861d3cb8690f9a39b0f91e496a7" translate="yes" xml:space="preserve">
          <source>The built in &lt;a href=&quot;https://github.com/cypress-io/cypress-browserify-preprocessor&quot;&gt;&lt;code&gt;cypress-browserify-preprocessor&lt;/code&gt;&lt;/a&gt; was bumped to &lt;code&gt;1.1.0&lt;/code&gt;. This supports more JavaScript features by default, including async/await, object rest spread, and class properties. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2254&quot;&gt;#2254&lt;/a&gt;.</source>
          <target state="translated">内置的&lt;a href=&quot;https://github.com/cypress-io/cypress-browserify-preprocessor&quot;&gt; &lt;code&gt;cypress-browserify-preprocessor&lt;/code&gt; &lt;/a&gt;已升级到 &lt;code&gt;1.1.0&lt;/code&gt; 。默认情况下，这支持更多JavaScript功能，包括异步/等待，对象剩余传播和类属性。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2254&quot;&gt;＃2254&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="00c9bbca84b5320488a962eaea3e1912c2b1f8b4" translate="yes" xml:space="preserve">
          <source>The built in XHR response delay has been removed since now all requests really go over the HTTP stack, which inherently has its own delay. You can still optionally force responses to be delayed by a set amount.</source>
          <target state="translated">内置的XHR响应延迟已经被移除,因为现在所有的请求都要经过HTTP栈,而HTTP栈本身就有延迟。你仍然可以选择强制响应延迟一个设定的数量。</target>
        </trans-unit>
        <trans-unit id="5a98420d459273865977dedece36368e58b6cd00" translate="yes" xml:space="preserve">
          <source>The built in default &lt;code&gt;Electron&lt;/code&gt; browser has been bumped from version &lt;code&gt;53&lt;/code&gt; to &lt;code&gt;59&lt;/code&gt;. This version represents the version of &lt;code&gt;Chromium&lt;/code&gt; that Electron is using. In other words, running &lt;code&gt;cypress run&lt;/code&gt; (or via &lt;code&gt;Electron&lt;/code&gt;) will be like running your tests in &lt;code&gt;Chrome 59&lt;/code&gt; now. Although it is unlikely this would actually &lt;em&gt;break&lt;/em&gt; any of your tests - it is technically possible they could behave differently. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/895&quot;&gt;#895&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/891&quot;&gt;#891&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/823&quot;&gt;#823&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/860&quot;&gt;#860&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1011&quot;&gt;#1011&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1252&quot;&gt;#1252&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1276&quot;&gt;#1276&lt;/a&gt;.</source>
          <target state="translated">内置的默认 &lt;code&gt;Electron&lt;/code&gt; 浏览器已从 &lt;code&gt;53&lt;/code&gt; 版升级到 &lt;code&gt;59&lt;/code&gt; 版。此版本表示Electron正在使用的 &lt;code&gt;Chromium&lt;/code&gt; 版本。换句话说，运行 &lt;code&gt;cypress run&lt;/code&gt; （或通过 &lt;code&gt;Electron&lt;/code&gt; ）就像现在在 &lt;code&gt;Chrome 59&lt;/code&gt; 中运行测试一样。尽管这不太可能实际上&lt;em&gt;破坏&lt;/em&gt;您的任何测试-从技术上讲，它们的行为可能不同。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/895&quot;&gt;＃895&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/891&quot;&gt;＃891&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/823&quot;&gt;＃823&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/860&quot;&gt;＃860&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1011&quot;&gt;＃1011&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1252&quot;&gt;＃1252&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1276&quot;&gt;＃1276&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c4328658648fdf26bd388b4844fda0d993d8a3ee" translate="yes" xml:space="preserve">
          <source>The bundled version of FFmpeg has now been bumped from &lt;code&gt;3.x.x&lt;/code&gt; to &lt;code&gt;4.x.x&lt;/code&gt;. This may help with some issues users were experiencing when recording videos. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1972&quot;&gt;#1972&lt;/a&gt;.</source>
          <target state="translated">FFmpeg的的捆绑版本现已从被撞 &lt;code&gt;3.x.x&lt;/code&gt; 到 &lt;code&gt;4.x.x&lt;/code&gt; 。这可能有助于解决用户在录制视频时遇到的一些问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1972&quot;&gt;＃1972&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b03dc4395f907cf3c251df5831287b964700e570" translate="yes" xml:space="preserve">
          <source>The call count (and total number of calls)</source>
          <target state="translated">通话次数(和总通话次数)</target>
        </trans-unit>
        <trans-unit id="12a04970c45f32bb5eea0c0dffe2ac66672ffa5a" translate="yes" xml:space="preserve">
          <source>The callback function is called any time a file is requested by the browser. This happens on each run of the tests.</source>
          <target state="translated">每当浏览器请求一个文件时,回调函数就会被调用。这在每次测试运行时都会发生。</target>
        </trans-unit>
        <trans-unit id="54dc858f124923023700410355f03e7529940fc3" translate="yes" xml:space="preserve">
          <source>The callback function should return one of the following:</source>
          <target state="translated">回调函数应该返回以下之一:</target>
        </trans-unit>
        <trans-unit id="2abe30b400fb277b6ccb01d29db083dd9e2877f2" translate="yes" xml:space="preserve">
          <source>The callback function will be retried over and over again until no assertions within it throw.</source>
          <target state="translated">回调函数将被反复重试,直到其内部没有断言抛出。</target>
        </trans-unit>
        <trans-unit id="edfc022c0645f5ff57f9e678bfa92155e52887db" translate="yes" xml:space="preserve">
          <source>The caret now correctly moves on &lt;code&gt;[contenteditable]&lt;/code&gt; elements. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1108&quot;&gt;#1108&lt;/a&gt;.</source>
          <target state="translated">现在，插入符号可以在 &lt;code&gt;[contenteditable]&lt;/code&gt; 元素上正确移动。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1108&quot;&gt;＃1108&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="65f95298189dcbd21a1b24e79e1994cd281bf75a" translate="yes" xml:space="preserve">
          <source>The chainers that come from &lt;a href=&quot;../../guides/references/bundled-tools#Chai&quot;&gt;Chai&lt;/a&gt; or &lt;a href=&quot;../../guides/references/bundled-tools#Chai-jQuery&quot;&gt;Chai-jQuery&lt;/a&gt; will always document what they return.</source>
          <target state="translated">来自&lt;a href=&quot;../../guides/references/bundled-tools#Chai&quot;&gt;Chai&lt;/a&gt;或&lt;a href=&quot;../../guides/references/bundled-tools#Chai-jQuery&quot;&gt;Chai-jQuery的链接器&lt;/a&gt;将始终记录其返回的内容。</target>
        </trans-unit>
        <trans-unit id="257e6622aad94b5474a2b25c4d50d371eba3f89e" translate="yes" xml:space="preserve">
          <source>The chainers that come from &lt;a href=&quot;https://docs.cypress.io/guides/references/bundled-tools.html#Chai&quot;&gt;Chai&lt;/a&gt; or &lt;a href=&quot;https://docs.cypress.io/guides/references/bundled-tools.html#Chai-jQuery&quot;&gt;Chai-jQuery&lt;/a&gt; will always document what they return.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50161b2801a17ba2edc50dd76a5fe7b0391c260e" translate="yes" xml:space="preserve">
          <source>The changes in version &lt;a href=&quot;#01711-11162016&quot;&gt;&lt;code&gt;0.17.11&lt;/code&gt;&lt;/a&gt; below are in preparation for Cypress￢ﾀﾙ platform service: a portal where screenshots, videos, config, and logs of your builds are accessible.</source>
          <target state="translated">下面的&lt;a href=&quot;#01711-11162016&quot;&gt; &lt;code&gt;0.17.11&lt;/code&gt; &lt;/a&gt;版本中的更改是为赛普拉斯平台服务准备的：该门户可访问您的构建的屏幕截图，视频，配置和日志。</target>
        </trans-unit>
        <trans-unit id="12b9db6cd52a6c5288eb66a7b667ae65cacfaa59" translate="yes" xml:space="preserve">
          <source>The click below will be issued inside of the element (15px from the left and 40px from the top).</source>
          <target state="translated">下面的点击将在元素内部发出(左起15px,上起40px)。</target>
        </trans-unit>
        <trans-unit id="feffbf3db4f2aa3a96de8110d25691dc900d83d8" translate="yes" xml:space="preserve">
          <source>The clock object is also available via &lt;code&gt;this.clock&lt;/code&gt; in any &lt;a href=&quot;then&quot;&gt;&lt;code&gt;.then()&lt;/code&gt;&lt;/a&gt; callback.</source>
          <target state="translated">在任何 &lt;code&gt;this.clock&lt;/code&gt; &lt;a href=&quot;then&quot;&gt; &lt;code&gt;.then()&lt;/code&gt; &lt;/a&gt;回调中，还可以通过this.clock使用clock对象。</target>
        </trans-unit>
        <trans-unit id="12d527e46dab797c7b08982aaa8c907f0aeab918" translate="yes" xml:space="preserve">
          <source>The clock starts at the unix epoch (timestamp of 0). This means that when you instantiate &lt;code&gt;new Date&lt;/code&gt; in your application, it will have a time of &lt;code&gt;January 1st, 1970&lt;/code&gt;.</source>
          <target state="translated">时钟从unix纪元（时间戳为0）开始。这意味着当您在应用程序中实例化 &lt;code&gt;new Date&lt;/code&gt; 时，它将具有 &lt;code&gt;January 1st, 1970&lt;/code&gt; 的时间。</target>
        </trans-unit>
        <trans-unit id="49ad6a4c2e98e8b2d168cd5e8e8acca85b5148fa" translate="yes" xml:space="preserve">
          <source>The code above displays in the Command Log as shown below, with the console properties shown on click of the command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6558692f7710b544a27041ca9277f785de11e73c" translate="yes" xml:space="preserve">
          <source>The code above will produce a suite with 4 tests:</source>
          <target state="translated">上面的代码将产生一个包含4个测试的套件。</target>
        </trans-unit>
        <trans-unit id="d0fb8faf7f819b5cd70df24f148a83c15cffb94c" translate="yes" xml:space="preserve">
          <source>The code contains comments that explain how it utilizes the preprocessor API.</source>
          <target state="translated">该代码包含解释如何利用预处理器API的注释。</target>
        </trans-unit>
        <trans-unit id="2cf720a27a083234446b5670de5305307937fdb7" translate="yes" xml:space="preserve">
          <source>The code coverage information in unit tests and end-to-end tests has the same format; the &lt;a href=&quot;https://github.com/cypress-io/code-coverage&quot;&gt;&lt;code&gt;@cypress/code-coverage&lt;/code&gt;&lt;/a&gt; plugin automatically grabs both and saves the combined report. Thus we can see the code coverage from the &lt;code&gt;cypress/integration/selectors-spec.js&lt;/code&gt; file after running the test.</source>
          <target state="translated">单元测试和端到端测试中的代码覆盖率信息具有相同的格式；在&lt;a href=&quot;https://github.com/cypress-io/code-coverage&quot;&gt; &lt;code&gt;@cypress/code-coverage&lt;/code&gt; &lt;/a&gt;插件自动抓取双方并保存合并报告。因此，运行测试后，我们可以从 &lt;code&gt;cypress/integration/selectors-spec.js&lt;/code&gt; 文件中查看代码覆盖率。</target>
        </trans-unit>
        <trans-unit id="5bc7ae3b77cd0b515289d58070df8ad743f925ce" translate="yes" xml:space="preserve">
          <source>The command UI now displays pending requests as a &lt;code&gt;pending command&lt;/code&gt;.</source>
          <target state="translated">现在，命令UI将待处理的请求显示为 &lt;code&gt;pending command&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="245021e0026bccf39d3ba8f1a9da62d8b1656c5f" translate="yes" xml:space="preserve">
          <source>The command above will display in the Command Log as:</source>
          <target state="translated">上面的命令将在命令日志中显示为。</target>
        </trans-unit>
        <trans-unit id="2f2e96cc6c8da251bc9647783d0cb79ff5e5e3af" translate="yes" xml:space="preserve">
          <source>The commands above will display in the Command Log as:</source>
          <target state="translated">以上命令将在命令日志中显示为。</target>
        </trans-unit>
        <trans-unit id="f0725906d4c2b2ca52188d3ad8d1c30d5cd2bf7c" translate="yes" xml:space="preserve">
          <source>The commands outside of the &lt;code&gt;.then()&lt;/code&gt; will not run until all of the nested commands finish.</source>
          <target state="translated">&lt;code&gt;.then()&lt;/code&gt; 外部的命令将在所有嵌套命令完成后才能运行。</target>
        </trans-unit>
        <trans-unit id="3f4a9031715a9c5d74d63d1a1c3ee1723f57d20c" translate="yes" xml:space="preserve">
          <source>The companion blog for the Cypress + Percy webinar</source>
          <target state="translated">Cypress+Percy网络研讨会的配套博客。</target>
        </trans-unit>
        <trans-unit id="4168d86596e0f6919fda725c4ea31e0613890cca" translate="yes" xml:space="preserve">
          <source>The companion slides for the Cypress + Percy webinar</source>
          <target state="translated">Cypress+Percy网络研讨会的配套幻灯片。</target>
        </trans-unit>
        <trans-unit id="ee226a689fadf8930085a1220f1d39c15724f50d" translate="yes" xml:space="preserve">
          <source>The component responsible for the file-watching behavior in Cypress is the &lt;a href=&quot;https://github.com/cypress-io/cypress-browserify-preprocessor&quot;&gt;Cypress Browserify Preprocessor&lt;/a&gt;. This is the default file-watcher packaged with Cypress.</source>
          <target state="translated">赛普拉斯中负责文件监视行为的组件是&lt;a href=&quot;https://github.com/cypress-io/cypress-browserify-preprocessor&quot;&gt;赛普拉斯Browserify预处理器&lt;/a&gt;。这是赛普拉斯包装的默认文件监视程序。</target>
        </trans-unit>
        <trans-unit id="02e7ca3e2e6d1a4b6f203ba2b06c2581d64cf1f9" translate="yes" xml:space="preserve">
          <source>The compression step will be skipped completely, so the video will be large, but the processing should be faster.</source>
          <target state="translated">压缩步骤会被完全跳过,所以视频会很大,但处理速度应该会更快。</target>
        </trans-unit>
        <trans-unit id="f3276a644711d9a23c186c57f7ef22d4aae4e8e6" translate="yes" xml:space="preserve">
          <source>The configuration includes the list of browsers found on your system that are available to Cypress.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8da7d874dd5824a52d50687860fed9cc12482328" translate="yes" xml:space="preserve">
          <source>The console log when clicking on the &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; command now displays its resolved &lt;code&gt;options&lt;/code&gt; arguments. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3721&quot;&gt;#3721&lt;/a&gt;.</source>
          <target state="translated">现在，单击&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;命令时，控制台日志将显示其已解决的 &lt;code&gt;options&lt;/code&gt; 参数。地址&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3721&quot;&gt;＃3721&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1d61a7f3b5c4b2caf0cc5e0e3bb469d54f06266e" translate="yes" xml:space="preserve">
          <source>The constructor for creating the event object (e.g. &lt;code&gt;MouseEvent&lt;/code&gt;, &lt;code&gt;KeyboardEvent&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c261841b981d947e574c27b1941722d29f151caf" translate="yes" xml:space="preserve">
          <source>The contents to be written to the file.</source>
          <target state="translated">要写入文件的内容。</target>
        </trans-unit>
        <trans-unit id="b3f774babd27a472199a3b4de4db145c6fa70f1e" translate="yes" xml:space="preserve">
          <source>The context the function was invoked with</source>
          <target state="translated">函数被调用的上下文</target>
        </trans-unit>
        <trans-unit id="24f5d878b392be08728b21c455c6f6495f8a9dad" translate="yes" xml:space="preserve">
          <source>The contributing Readme&amp;rsquo;s have been updated and improved for each package. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/995&quot;&gt;#995&lt;/a&gt;.</source>
          <target state="translated">每个软件包的贡献自述文件均已更新和改进。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/995&quot;&gt;＃995&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="30d3170cf03d96b57aed3cf5f74972ae222dcd93" translate="yes" xml:space="preserve">
          <source>The cookie path</source>
          <target state="translated">Cookie路径</target>
        </trans-unit>
        <trans-unit id="aac7d447ad2ee9ddbd748f064c60234ea6c1382c" translate="yes" xml:space="preserve">
          <source>The coordinates we fired the event at will generally be available when clicking the command in the &lt;a href=&quot;test-runner#Command-Log&quot;&gt;Command Log&lt;/a&gt;.</source>
          <target state="translated">单击&amp;ldquo;命令&lt;a href=&quot;test-runner#Command-Log&quot;&gt;日志&amp;rdquo;&lt;/a&gt;中的命令时，通常可以使用触发事件的坐标。</target>
        </trans-unit>
        <trans-unit id="8f4a61a68e3a2b1f2e6104af9f25e662e55b17d8" translate="yes" xml:space="preserve">
          <source>The correct way to write the above test code is using Mocha&amp;rsquo;s &lt;code&gt;done&lt;/code&gt; to signify it is asynchronous.</source>
          <target state="translated">编写上述测试代码的正确方法是使用Mocha's &lt;code&gt;done&lt;/code&gt; 表示它是异步的。</target>
        </trans-unit>
        <trans-unit id="dadcab1f323ca88bc211ec417914f0d0c1b622fe" translate="yes" xml:space="preserve">
          <source>The correct way to write the above test code would be to return our &lt;code&gt;Promise&lt;/code&gt;:</source>
          <target state="translated">编写上述测试代码的正确方法是返回 &lt;code&gt;Promise&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="27c22bf4fb5535fec37a2a7fe63992d37be4f061" translate="yes" xml:space="preserve">
          <source>The current DOM element is yielded</source>
          <target state="translated">当前的DOM元素产生了</target>
        </trans-unit>
        <trans-unit id="eebe03b2aca7630c1d74c0bfba491a55474b8327" translate="yes" xml:space="preserve">
          <source>The current size and scale of the AUT is displayed in the top right corner of the window.</source>
          <target state="translated">窗口右上角会显示AUT的当前尺寸和比例。</target>
        </trans-unit>
        <trans-unit id="4781942186930dff32c0d286ce4f66dc245b30bc" translate="yes" xml:space="preserve">
          <source>The current subject is yielded</source>
          <target state="translated">目前的主题是产生</target>
        </trans-unit>
        <trans-unit id="f50dd660e4239422730d72a74c0cce1293a692a8" translate="yes" xml:space="preserve">
          <source>The current subject that is yielded by the &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; is exposed as the variable &lt;code&gt;subject&lt;/code&gt; within your Developer Tools so that you can interact with it in the console.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt;产生的当前主题在开发人员工具中作为变量 &lt;code&gt;subject&lt;/code&gt; 公开，以便您可以在控制台中与之交互。</target>
        </trans-unit>
        <trans-unit id="b383ab8ae28caca8c87a0868b45774437ee2d8b3" translate="yes" xml:space="preserve">
          <source>The currently running test is now scrolled into view. This behavior can be turned off by scrolling in the Command Log or selecting to disable auto-scroll at the top of the Command Log. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/194&quot;&gt;#194&lt;/a&gt;</source>
          <target state="translated">现在将当前运行的测试滚动到视图中。可以通过在命令日志中滚动或选择禁用命令日志顶部的自动滚动来关闭此行为。地址&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/194&quot;&gt;＃194&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b05b04fac4794bff342571ce4f7b33076a445505" translate="yes" xml:space="preserve">
          <source>The cypress ci command has been deprecated</source>
          <target state="translated">cypress ci命令已被废止。</target>
        </trans-unit>
        <trans-unit id="42db91dee6f849b3cf1c07fa68a38ba9b7ae8dd2" translate="yes" xml:space="preserve">
          <source>The date and time the screenshot was taken. ISO 8601 format in UTC (example: &lt;code&gt;'2020-03-09T07:30:37.686Z'&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7adb7486d8b6a25dabea88934af9a5dcf464f77" translate="yes" xml:space="preserve">
          <source>The debug window now works again.</source>
          <target state="translated">调试窗口现在又开始工作了。</target>
        </trans-unit>
        <trans-unit id="87da6011496aa3691ab6b3d72205bb8349b58ecc" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;browserify&lt;/code&gt; plugin no longer fires &lt;code&gt;watched:file:changed&lt;/code&gt; twice leading to an uncaught exception that was popping up in the console. Also fixed a minor state bug in the &lt;code&gt;browserify&lt;/code&gt; package. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/968&quot;&gt;#968&lt;/a&gt;.</source>
          <target state="translated">默认的 &lt;code&gt;browserify&lt;/code&gt; 插件不再触发 &lt;code&gt;watched:file:changed&lt;/code&gt; 两次，导致控制台中弹出未捕获的异常。还修复了 &lt;code&gt;browserify&lt;/code&gt; 软件包中的一个次要状态错误。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/968&quot;&gt;＃968&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="93e542c6c97f6e19c72fff0a9669a38634323629" translate="yes" xml:space="preserve">
          <source>The default XHR configuration can now be overwritten in a single area.</source>
          <target state="translated">现在可以在一个区域内覆盖默认的XHR配置。</target>
        </trans-unit>
        <trans-unit id="b220714521cf81a6fb967f162d7a8403c43f032d" translate="yes" xml:space="preserve">
          <source>The default behavior of &lt;a href=&quot;../../api/commands/server&quot;&gt;&lt;code&gt;cy.server()&lt;/code&gt;&lt;/a&gt; has changed from &lt;code&gt;force404: true&lt;/code&gt; to become &lt;code&gt;force404: false&lt;/code&gt;. In other words, Cypress will no longer forcibly send XHR&amp;rsquo;s to 404 status when these XHR&amp;rsquo;s do not match any existing &lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt;. This change better aligns with predictable usage for most Cypress users.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/server&quot;&gt; &lt;code&gt;cy.server()&lt;/code&gt; &lt;/a&gt;的默认行为已从 &lt;code&gt;force404: true&lt;/code&gt; 更改为 &lt;code&gt;force404: false&lt;/code&gt; 。换句话说，当这些XHR与任何现有的&lt;a href=&quot;../../api/commands/route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt;不匹配时，赛普拉斯将不再将XHR强制发送到404状态。对于大多数赛普拉斯用户而言，此更改更好地符合了可预测的用法。</target>
        </trans-unit>
        <trans-unit id="e4e9eda288d479899c5070e3fd8ca817076639f1" translate="yes" xml:space="preserve">
          <source>The default behavior of Cypress can be modified by supplying any of the following configuration options. Below is a list of available options and their default values.</source>
          <target state="translated">可以通过提供以下任何一个配置选项来修改Cypress的默认行为。以下是可用选项及其默认值的列表。</target>
        </trans-unit>
        <trans-unit id="dadbead9d9ff3ff83e3d3024df9c3fa5fbc08537" translate="yes" xml:space="preserve">
          <source>The default options passed to &lt;code&gt;minimatch&lt;/code&gt; when using glob strings to match URLs</source>
          <target state="translated">使用全局字符串匹配URL时，传递给 &lt;code&gt;minimatch&lt;/code&gt; 的默认选项</target>
        </trans-unit>
        <trans-unit id="656569fc7a8c5735f9199c51324e2ff1e5b8d7a7" translate="yes" xml:space="preserve">
          <source>The default value of &lt;code&gt;port&lt;/code&gt; within a project&amp;rsquo;s global &lt;a href=&quot;configuration&quot;&gt;configuration&lt;/a&gt; has changed from &lt;code&gt;2020&lt;/code&gt; to now being a random open port. You can still configure a specific &lt;code&gt;port&lt;/code&gt; if needed within the &lt;a href=&quot;configuration&quot;&gt;configuration&lt;/a&gt;.</source>
          <target state="translated">项目全局&lt;a href=&quot;configuration&quot;&gt;配置&lt;/a&gt;中 &lt;code&gt;port&lt;/code&gt; 的默认值已从 &lt;code&gt;2020&lt;/code&gt; 更改为现在的随机开放端口。如果在&lt;a href=&quot;configuration&quot;&gt;配置中&lt;/a&gt;需要，您仍然可以配置特定的 &lt;code&gt;port&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c045d97cef57725b7e5a1c7d7b084ee34492c3ec" translate="yes" xml:space="preserve">
          <source>The desktop application has been completely redesigned. We have moved from a tray application to a standard dock application. The list of projects is now in the same window as the list of tests in a project. As each test runs, the application highlights the currently running spec and displays the browser version running. The configuration of a project is now displayed in its own tab. There is now a Desktop Menu where you can logout, check for updates, or view help links.</source>
          <target state="translated">桌面应用程序已经完全重新设计。我们已经从一个托盘应用程序转移到一个标准的停靠应用程序。项目列表现在与项目中的测试列表在同一个窗口中。当每个测试运行时,应用程序突出显示当前运行的规范,并显示正在运行的浏览器版本。项目的配置现在显示在它自己的标签中。现在有一个桌面菜单,您可以在那里注销、检查更新或查看帮助链接。</target>
        </trans-unit>
        <trans-unit id="84620e58ffab27c5c7f1b25b98727dbe1c3688b5" translate="yes" xml:space="preserve">
          <source>The difference in running times and machines used is very clear when looking at the &lt;a href=&quot;#Machines-View&quot;&gt;Machines View&lt;/a&gt; on the Dashboard. Notice how the run parallelized across 2 machines automatically ran all specs based on their duration, while the run without parallelization did not.</source>
          <target state="translated">当&lt;a href=&quot;#Machines-View&quot;&gt;查看&lt;/a&gt;仪表板上的&amp;ldquo; 机器视图&amp;rdquo;时，运行时间和使用的机器之间的差异非常明显。请注意，在两台计算机上并行运行的运行是如何根据它们的持续时间自动运行所有规格的，而没有并行运行的运行却没有。</target>
        </trans-unit>
        <trans-unit id="3c0e12d3e8a6e8a148ecd00e3f23503fa3043a15" translate="yes" xml:space="preserve">
          <source>The direct download will always grab the latest available version. Your platform will be detected automatically.</source>
          <target state="translated">直接下载将始终抓住最新的可用版本。您的平台将被自动检测。</target>
        </trans-unit>
        <trans-unit id="aaa8453925f36821d210443898f7bbd43f7082ff" translate="yes" xml:space="preserve">
          <source>The direction to navigate.</source>
          <target state="translated">导航的方向。</target>
        </trans-unit>
        <trans-unit id="12955aeff648f9bf99b7d35972af5d6521b9b4df" translate="yes" xml:space="preserve">
          <source>The distance in pixels an element must exceed over time to be &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/interacting-with-elements.html#Animations&quot;&gt;considered animating&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87831849a3c72449502f9290e2e9d7a48fddbe79" translate="yes" xml:space="preserve">
          <source>The distance in pixels an element must exceed over time to be considered animating</source>
          <target state="translated">一个元素在一段时间内必须超过像素的距离才能被视为动画。</target>
        </trans-unit>
        <trans-unit id="9f00c259add40268007481b9b7b23cbe9f8f37c4" translate="yes" xml:space="preserve">
          <source>The distance in pixels from element&amp;rsquo;s left to trigger the event.</source>
          <target state="translated">从元素左侧到触发事件的距离（以像素为单位）。</target>
        </trans-unit>
        <trans-unit id="84f9ead7c8116a292eee10ab3a179f8009806f93" translate="yes" xml:space="preserve">
          <source>The distance in pixels from element&amp;rsquo;s top to trigger the event.</source>
          <target state="translated">与元素顶部触发事件的距离（以像素为单位）。</target>
        </trans-unit>
        <trans-unit id="2b5e5ea14de7c1d69850b4c258690bbfb398c989" translate="yes" xml:space="preserve">
          <source>The distance in pixels from the element&amp;rsquo;s left to issue the click.</source>
          <target state="translated">距元素左侧发出点击的距离（以像素为单位）。</target>
        </trans-unit>
        <trans-unit id="8b0907a1b12c2afc11cfaabeda830378efead1d0" translate="yes" xml:space="preserve">
          <source>The distance in pixels from the element&amp;rsquo;s left to issue the double click.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="702a5646e5a77ea6d043ac06725e983326dab03c" translate="yes" xml:space="preserve">
          <source>The distance in pixels from the element&amp;rsquo;s left to issue the right click.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="058daa11285b49de690704beee7e9e80583e10bd" translate="yes" xml:space="preserve">
          <source>The distance in pixels from the element&amp;rsquo;s top to issue the click.</source>
          <target state="translated">距元素顶部发出点击的距离（以像素为单位）。</target>
        </trans-unit>
        <trans-unit id="139cd6856b44a5da7370e9b28a38a10b8d73198f" translate="yes" xml:space="preserve">
          <source>The distance in pixels from the element&amp;rsquo;s top to issue the double click.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc4ec431b6ade65c9a5c185be8c080616b5caa39" translate="yes" xml:space="preserve">
          <source>The distance in pixels from the element&amp;rsquo;s top to issue the right click.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ceeaaaa0de1fae94612033134e1948a67423d8c" translate="yes" xml:space="preserve">
          <source>The distance in pixels from window/element&amp;rsquo;s left or percentage of the window/element&amp;rsquo;s width to scroll to.</source>
          <target state="translated">距窗口/元素左侧的距离（以像素为单位）或滚动到的窗口/元素宽度的百分比。</target>
        </trans-unit>
        <trans-unit id="5f90015069dd995c1aba9c1530ade43fb58b0772" translate="yes" xml:space="preserve">
          <source>The distance in pixels from window/element&amp;rsquo;s top or percentage of the window/element&amp;rsquo;s height to scroll to.</source>
          <target state="translated">与窗口/元素顶部之间的距离（以像素为单位）或滚动到的窗口/元素高度的百分比。</target>
        </trans-unit>
        <trans-unit id="bc3ea69b7360744d05bb93f8ae6f767ffc990c02" translate="yes" xml:space="preserve">
          <source>The docs have not yet been updated to reflect the changes to &lt;a href=&quot;../../api/commands/its&quot;&gt;&lt;code&gt;.its()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/invoke&quot;&gt;&lt;code&gt;.invoke()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该文档尚未更新以反映更改为&lt;a href=&quot;../../api/commands/its&quot;&gt; &lt;code&gt;.its()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../api/commands/invoke&quot;&gt; &lt;code&gt;.invoke()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6cd8428dd11106d767a00d4a0975a15492a52aae" translate="yes" xml:space="preserve">
          <source>The domain the cookie is visible to</source>
          <target state="translated">Cookie可见的域</target>
        </trans-unit>
        <trans-unit id="10e5b447eb11390c3666876771f76899ac971dba" translate="yes" xml:space="preserve">
          <source>The double click below will be issued inside of the element (30px from the left and 10px from the top).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5ad8169dbed2921957df939c24b0a9bd5dee0d7" translate="yes" xml:space="preserve">
          <source>The download server URL is &lt;code&gt;https://download.cypress.io&lt;/code&gt;.</source>
          <target state="translated">下载服务器URL为 &lt;code&gt;https://download.cypress.io&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c0f5fafcb4e06713527bba1e2c4d16d7dfbefb70" translate="yes" xml:space="preserve">
          <source>The easiest way to check that this happened is likely with a unit or integration test at the server level and not at the end-to-end level. You generally do not need to test things only your server interacts with like side effects and services.</source>
          <target state="translated">检查这种情况发生的最简单的方法很可能是在服务器层面进行单元或集成测试,而不是在端到端层面。你一般不需要测试只有你的服务器与之交互的东西,比如副作用和服务。</target>
        </trans-unit>
        <trans-unit id="b11ce10c86a2197eaccc24d1e613d430b5f1cb3b" translate="yes" xml:space="preserve">
          <source>The el subject is changed with another command</source>
          <target state="translated">用另一条命令改变el主题</target>
        </trans-unit>
        <trans-unit id="77de30354c22e5ec8dd645947362de5b7cec125d" translate="yes" xml:space="preserve">
          <source>The element is being covered by another element</source>
          <target state="translated">该元素被另一元素覆盖</target>
        </trans-unit>
        <trans-unit id="1a632603f722d7f42f6e33adf0509d3384d6c9d6" translate="yes" xml:space="preserve">
          <source>The element is disabled</source>
          <target state="translated">该要素被禁用</target>
        </trans-unit>
        <trans-unit id="c7119acb5137f8a22445f07ef3629e78c9da3828" translate="yes" xml:space="preserve">
          <source>The element is not visible</source>
          <target state="translated">该元素不可见</target>
        </trans-unit>
        <trans-unit id="5493bb07248f38cd959d9e153e545952c54d513b" translate="yes" xml:space="preserve">
          <source>The element is queried, and Cypress automatically waits and retries for a few moments if it isn&amp;rsquo;t found immediately.</source>
          <target state="translated">查询该元素，如果没有立即找到，赛普拉斯会自动等待并重试片刻。</target>
        </trans-unit>
        <trans-unit id="2d4734d9db362c541365dbb5bf3af37bb8451ae6" translate="yes" xml:space="preserve">
          <source>The element must first reach actionability</source>
          <target state="translated">该要素必须首先达到可操作性</target>
        </trans-unit>
        <trans-unit id="62a2de0cf7b48d63f3d28689f77aa2911c184179" translate="yes" xml:space="preserve">
          <source>The element we want to &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; on could be covered by another element.</source>
          <target state="translated">我们要在其上&lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt;的元素可能会被另一个元素覆盖。</target>
        </trans-unit>
        <trans-unit id="51971fd36c549ea21390e40e13a475a94d591718" translate="yes" xml:space="preserve">
          <source>The element where you want finding next siblings to stop.</source>
          <target state="translated">你想找下一个兄弟姐妹停止的元素。</target>
        </trans-unit>
        <trans-unit id="b2eaca189274f418348f69f9446ee71d73342006" translate="yes" xml:space="preserve">
          <source>The element where you want finding parent ancestors to stop.</source>
          <target state="translated">你想在哪里停止查找父祖的元素。</target>
        </trans-unit>
        <trans-unit id="3dc1fd5f7be297c87f2069dc9187d17dede629c8" translate="yes" xml:space="preserve">
          <source>The element where you want finding previous siblings to stop.</source>
          <target state="translated">你想找到以前的兄弟姐妹的元素停止。</target>
        </trans-unit>
        <trans-unit id="9517b492e4e12f5080cf5d8e24b162fe5c92bd53" translate="yes" xml:space="preserve">
          <source>The element&amp;rsquo;s center is hidden from view</source>
          <target state="translated">元素的中心不可见</target>
        </trans-unit>
        <trans-unit id="bdde7add66a8402ff4a1b697154d2cb179f643ba" translate="yes" xml:space="preserve">
          <source>The encoding to be used when reading the file. The following encodings are supported:</source>
          <target state="translated">读取文件时要使用的编码。支持以下编码。</target>
        </trans-unit>
        <trans-unit id="a8b40510ed82ab023b00045c5eda22d07440c34a" translate="yes" xml:space="preserve">
          <source>The encoding to be used when serializing the response body. The following encodings are supported: &lt;code&gt;ascii&lt;/code&gt;, &lt;code&gt;base64&lt;/code&gt;, &lt;code&gt;binary&lt;/code&gt;, &lt;code&gt;hex&lt;/code&gt;, &lt;code&gt;latin1&lt;/code&gt;, &lt;code&gt;utf8&lt;/code&gt;, &lt;code&gt;utf-8&lt;/code&gt;, &lt;code&gt;ucs2&lt;/code&gt;, &lt;code&gt;ucs-2&lt;/code&gt;, &lt;code&gt;utf16le&lt;/code&gt;, &lt;code&gt;utf-16le&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96ca51aba74d07f5f8cf66230fc93720efa58ef0" translate="yes" xml:space="preserve">
          <source>The encoding to be used when writing to the file</source>
          <target state="translated">写入文件时要使用的编码。</target>
        </trans-unit>
        <trans-unit id="e2fd717ca3b4626fc6e12af6ba37d567cb4e2448" translate="yes" xml:space="preserve">
          <source>The encoding to be used when writing to the file. The following encodings are supported:</source>
          <target state="translated">向文件写入时要使用的编码。支持以下编码。</target>
        </trans-unit>
        <trans-unit id="139e20870845dc46ba46bac9091f5cc25631ba50" translate="yes" xml:space="preserve">
          <source>The environment variable &lt;code&gt;CYPRESS_BINARY_VERSION&lt;/code&gt; has been removed. You should use the equivalent environment variable &lt;code&gt;CYPRESS_INSTALL_BINARY&lt;/code&gt; instead.</source>
          <target state="translated">环境变量 &lt;code&gt;CYPRESS_BINARY_VERSION&lt;/code&gt; 已被删除。您应该改为使用等效的环境变量 &lt;code&gt;CYPRESS_INSTALL_BINARY&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5be6368bc3a0e3503078cdfd866f0a19f0a6e570" translate="yes" xml:space="preserve">
          <source>The environment variable &lt;code&gt;CYPRESS_SKIP_BINARY_INSTALL&lt;/code&gt; has been removed. To skip the binary install, set &lt;code&gt;CYPRESS_INSTALL_BINARY=0&lt;/code&gt;.</source>
          <target state="translated">环境变量 &lt;code&gt;CYPRESS_SKIP_BINARY_INSTALL&lt;/code&gt; 已被删除。要跳过二进制安装，请设置 &lt;code&gt;CYPRESS_INSTALL_BINARY=0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2ecdf036563a0aff74b83c357a4dcfe4ab1d7525" translate="yes" xml:space="preserve">
          <source>The error message when visiting a site with an invalid content-type now prints the correct content-type of the response Cypress received from the web server. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3101&quot;&gt;#3101&lt;/a&gt;.</source>
          <target state="translated">现在，访问具有无效内容类型的站点时的错误消息将打印赛普拉斯从Web服务器接收到的响应的正确内容类型。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3101&quot;&gt;＃3101&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="14d255f944f14c38878f32d811f977f90001707d" translate="yes" xml:space="preserve">
          <source>The error message: &lt;code&gt;Cannot call cy.method() because the current subject has been removed or detached from the DOM.&lt;/code&gt; has been rewritten to provide much clearer information on why this is happening, including a string representation of your DOM element. Additionally it will have its own error page dedicated to explaining how this happens and what you can do to prevent it.</source>
          <target state="translated">错误消息： &lt;code&gt;Cannot call cy.method() because the current subject has been removed or detached from the DOM.&lt;/code&gt; 已进行了重写，以提供有关发生这种情况的更清晰信息，包括DOM元素的字符串表示形式。此外，它将有自己的错误页面，专门用于解释这种情况的发生以及可以采取的预防措施。</target>
        </trans-unit>
        <trans-unit id="75829d89fbb6e250c1bcb9fa477b161458e717b2" translate="yes" xml:space="preserve">
          <source>The event &lt;code&gt;after:screenshot&lt;/code&gt; is called after a screenshot is taken and saved to disk.</source>
          <target state="translated">&lt;code&gt;after:screenshot&lt;/code&gt; 屏并保存到磁盘后，将调用after：screenshot事件。</target>
        </trans-unit>
        <trans-unit id="ef7a4925512fa023fe9bd6ef34d2a29ebf2c1281" translate="yes" xml:space="preserve">
          <source>The event &lt;code&gt;before:browser:launch&lt;/code&gt; can be used to modify the launch arguments for each particular browser.</source>
          <target state="translated">&lt;code&gt;before:browser:launch&lt;/code&gt; 事件可用于修改每个特定浏览器的启动参数。</target>
        </trans-unit>
        <trans-unit id="f3d99a46ca819e2e53166bba97742dd15e920a4a" translate="yes" xml:space="preserve">
          <source>The event &lt;code&gt;file:preprocessor&lt;/code&gt; is used to customize how your test code is transpiled and sent to the browser. By default Cypress handles CoffeeScript and ES6 using &lt;code&gt;babel&lt;/code&gt; and then uses &lt;code&gt;browserify&lt;/code&gt; to package it for the browser.</source>
          <target state="translated">事件 &lt;code&gt;file:preprocessor&lt;/code&gt; 用于定制如何编译测试代码并将其发送到浏览器。默认情况下，赛普拉斯使用 &lt;code&gt;babel&lt;/code&gt; 处理CoffeeScript和ES6 ，然后使用 &lt;code&gt;browserify&lt;/code&gt; 将其打包为浏览器。</target>
        </trans-unit>
        <trans-unit id="bddb4f59232d188de74910418f286f2856636e48" translate="yes" xml:space="preserve">
          <source>The event &lt;code&gt;task&lt;/code&gt; is used in conjunction with the &lt;a href=&quot;../../api/commands/task&quot;&gt;&lt;code&gt;cy.task()&lt;/code&gt;&lt;/a&gt; command. It allows you to write arbitrary code in Node to accomplish tasks that aren&amp;rsquo;t possible in the browser.</source>
          <target state="translated">事件 &lt;code&gt;task&lt;/code&gt; 与&lt;a href=&quot;../../api/commands/task&quot;&gt; &lt;code&gt;cy.task()&lt;/code&gt; &lt;/a&gt;命令结合使用。它允许您在Node中编写任意代码来完成浏览器无法完成的任务。</target>
        </trans-unit>
        <trans-unit id="cb85755389a7698ff9f2131259f0b689236412dd" translate="yes" xml:space="preserve">
          <source>The event will fire each time &lt;code&gt;cypress run&lt;/code&gt; executes. As a result, if running your specs in &lt;a href=&quot;https://docs.cypress.io/guides/guides/parallelization.html&quot;&gt;parallel&lt;/a&gt;, the event will fire once for each machine on which &lt;code&gt;cypress run&lt;/code&gt; is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a341b7038edecf8e8d3556690dcac81893d12f6b" translate="yes" xml:space="preserve">
          <source>The event will fire each time &lt;code&gt;cypress run&lt;/code&gt; executes. As a result, if running your specs in &lt;a href=&quot;https://docs.cypress.io/guides/guides/parallelization.html&quot;&gt;parallel&lt;/a&gt;, the event will fire once for each machine on which the tests are run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a417040e835b0b4bf3df08c1b7eb5dbd3fea0707" translate="yes" xml:space="preserve">
          <source>The events are fired to spec, including the coordinates of where the event took place.</source>
          <target state="translated">事件按规格发射,包括事件发生地的坐标。</target>
        </trans-unit>
        <trans-unit id="de7c385dad035257621ade048482ab3f07cac274" translate="yes" xml:space="preserve">
          <source>The exact default configuration options &lt;a href=&quot;https://github.com/cypress-io/cypress-browserify-preprocessor#browserifyoptions&quot;&gt;can be found here&lt;/a&gt;.</source>
          <target state="translated">确切的默认配置选项&lt;a href=&quot;https://github.com/cypress-io/cypress-browserify-preprocessor#browserifyoptions&quot;&gt;可以在这里找到&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="910bea55225cac32deb7ac98572ed969a1c517e6" translate="yes" xml:space="preserve">
          <source>The example above would resolve in the following order:</source>
          <target state="translated">上面的例子将按以下顺序解决。</target>
        </trans-unit>
        <trans-unit id="b58ede9f165be804049ed9aa3d8d05f50412f5b2" translate="yes" xml:space="preserve">
          <source>The example below gets the text contained within one element and saves it in a closure variable. Then the test gets the text in another element and asserts that the two text values are the same after normalizing.</source>
          <target state="translated">下面的例子得到一个元素中包含的文本,并将其保存在一个封闭变量中。然后测试得到另一个元素中的文本,并断言这两个文本值在归一化后是相同的。</target>
        </trans-unit>
        <trans-unit id="47e706104c1f7dc9f26c4beb05980501c2d936d7" translate="yes" xml:space="preserve">
          <source>The example below is a use case where we are asserting across multiple elements. Using a &lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt; callback function is a great way to query from a &lt;strong&gt;parent&lt;/strong&gt; into multiple children elements and assert something about their state.</source>
          <target state="translated">下面的示例是一个用例，其中我们在多个元素之间进行断言。使用&lt;a href=&quot;../../api/commands/should&quot;&gt; &lt;code&gt;.should()&lt;/code&gt; &lt;/a&gt;回调函数是从&lt;strong&gt;父级&lt;/strong&gt;查询多个子级元素并声明其状态的一种好方法。</target>
        </trans-unit>
        <trans-unit id="49acc9498a2a7c541c7d366c6fdc2ca30f545f46" translate="yes" xml:space="preserve">
          <source>The example below shows how to delete the recorded video for a spec with no failing tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4981ca5bd4758d48f00c30b0218bc04b93b9b47d" translate="yes" xml:space="preserve">
          <source>The example below will fail because you&amp;rsquo;ve forcibly terminated the test early with mocha&amp;rsquo;s &lt;code&gt;done&lt;/code&gt;.</source>
          <target state="translated">以下示例将失败，因为您已通过mocha的 &lt;code&gt;done&lt;/code&gt; 强制终止了测试。</target>
        </trans-unit>
        <trans-unit id="bc951f38f465f285721a93cef38e6e2654d44667" translate="yes" xml:space="preserve">
          <source>The example_spec from the &lt;a href=&quot;https://github.com/cypress-io/cypress-example-kitchensink&quot;&gt;kitchen-sink&lt;/a&gt; will never accidentally be seeded when running &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt; on a brand new project.</source>
          <target state="translated">当在一个全新项目上运行&lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt; &lt;code&gt;cypress run&lt;/code&gt; &lt;/a&gt;时，&lt;a href=&quot;https://github.com/cypress-io/cypress-example-kitchensink&quot;&gt;厨房水槽&lt;/a&gt;的example_spec 绝不会意外被植入。</target>
        </trans-unit>
        <trans-unit id="783659466354f78195d97cb44d5d0aae35d7873e" translate="yes" xml:space="preserve">
          <source>The examples below are from a run of our &lt;a href=&quot;https://github.com/cypress-io/cypress-example-kitchensink&quot;&gt;Kitchen Sink Example&lt;/a&gt; project. You can see the results of this run on the &lt;a href=&quot;https://dashboard.cypress.io/#/projects/4b7344/runs/2929/specs&quot;&gt;Cypress Dashboard&lt;/a&gt;.</source>
          <target state="translated">以下示例来自我们的&amp;ldquo; &lt;a href=&quot;https://github.com/cypress-io/cypress-example-kitchensink&quot;&gt;厨房水槽示例&amp;rdquo;&lt;/a&gt;项目。您可以在&lt;a href=&quot;https://dashboard.cypress.io/#/projects/4b7344/runs/2929/specs&quot;&gt;Cypress仪表板上&lt;/a&gt;查看此运行的结果。</target>
        </trans-unit>
        <trans-unit id="0813eac0d04e75c8c78a9844e0f09353daf385a5" translate="yes" xml:space="preserve">
          <source>The existing &lt;code&gt;.cy&lt;/code&gt; cache and settings are now correctly copied again after an app update.</source>
          <target state="translated">现在，在应用程序更新后，可以再次正确复制现有的 &lt;code&gt;.cy&lt;/code&gt; 缓存和设置。</target>
        </trans-unit>
        <trans-unit id="72f0e27cd05c046a77ed8585ffd6cb1cc65b9462" translate="yes" xml:space="preserve">
          <source>The exported function is called whenever a project is opened either with &lt;a href=&quot;../../guides/guides/command-line#cypress-open&quot;&gt;&lt;code&gt;cypress open&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../guides/guides/command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">每当使用&lt;a href=&quot;../../guides/guides/command-line#cypress-open&quot;&gt; &lt;code&gt;cypress open&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../guides/guides/command-line#cypress-run&quot;&gt; &lt;code&gt;cypress run&lt;/code&gt; &lt;/a&gt;打开项目时，都会调用导出的函数。</target>
        </trans-unit>
        <trans-unit id="55a3989fcb4da64675c724ee8d4e6a26b14baf01" translate="yes" xml:space="preserve">
          <source>The exported function is called whenever a project is opened either with &lt;a href=&quot;https://docs.cypress.io/guides/guides/command-line.html#cypress-open&quot;&gt;&lt;code&gt;cypress open&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://docs.cypress.io/guides/guides/command-line.html#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7563b9989f1b2d437a36185b7a53dead9aed4fd" translate="yes" xml:space="preserve">
          <source>The file not existing</source>
          <target state="translated">文件不存在</target>
        </trans-unit>
        <trans-unit id="23a49b9ea91850653755c70fdf57eefa7c124be7" translate="yes" xml:space="preserve">
          <source>The first 10 failures are displayed with a link to more.</source>
          <target state="translated">前10个故障显示,并有更多链接。</target>
        </trans-unit>
        <trans-unit id="06769657bc571e4f949e981a579c5c437feb6e92" translate="yes" xml:space="preserve">
          <source>The first and most important concept you should recognize is&amp;hellip;</source>
          <target state="translated">您应该认识的第一个也是最重要的概念是&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="0ff467d5777b46834de143161a318bc5b7fc4507" translate="yes" xml:space="preserve">
          <source>The first group can be called &lt;code&gt;Windows/Chrome 69&lt;/code&gt;.</source>
          <target state="translated">第一组可以称为 &lt;code&gt;Windows/Chrome 69&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="55ee8f7dd7dcbfa53e5e642cdd583c30e9c765ec" translate="yes" xml:space="preserve">
          <source>The first period waits for a matching request to leave the browser. This duration is configured by the &lt;a href=&quot;../../guides/references/configuration#Timeouts&quot;&gt;&lt;code&gt;requestTimeout&lt;/code&gt;&lt;/a&gt; option - which has a default of &lt;code&gt;5000&lt;/code&gt; ms.</source>
          <target state="translated">第一个期间等待匹配的请求离开浏览器。此持续时间由&lt;a href=&quot;../../guides/references/configuration#Timeouts&quot;&gt; &lt;code&gt;requestTimeout&lt;/code&gt; &lt;/a&gt;选项配置-默认值为 &lt;code&gt;5000&lt;/code&gt; 毫秒。</target>
        </trans-unit>
        <trans-unit id="567af7f315e8ecb7312738fa618eda9e0172eb25" translate="yes" xml:space="preserve">
          <source>The first period waits for a matching request to leave the browser. This duration is configured by the &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Timeouts&quot;&gt;&lt;code&gt;requestTimeout&lt;/code&gt;&lt;/a&gt; option - which has a default of &lt;code&gt;5000&lt;/code&gt; ms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58ec06f0aaa09e291124df55221d849d361b8bb4" translate="yes" xml:space="preserve">
          <source>The first solution we recommend is to avoid unnecessarily splitting commands that query elements. In our case we first query elements using &lt;code&gt;cy.get()&lt;/code&gt; and then query from that list of elements using &lt;code&gt;.find()&lt;/code&gt;. We can combine two separate queries into one - forcing the combined query to be retried.</source>
          <target state="translated">我们建议的第一个解决方案是避免不必要地拆分查询元素的命令。在我们的情况下，使用我们首先查询元素 &lt;code&gt;cy.get()&lt;/code&gt; 使用，然后从查询元素列表 &lt;code&gt;.find()&lt;/code&gt; 。我们可以将两个单独的查询合并为一个-强制重试合并的查询。</target>
        </trans-unit>
        <trans-unit id="e71cb3a301013cd595e3290885e5c7fab4c3f8c3" translate="yes" xml:space="preserve">
          <source>The folder, the files within the folder, and all child folders and their files (recursively) are watched.</source>
          <target state="translated">文件夹、文件夹内的文件以及所有子文件夹及其文件(递归)都会被监视。</target>
        </trans-unit>
        <trans-unit id="ae3bbb8555c8359e3faefc48ca2f99d8f8c4745b" translate="yes" xml:space="preserve">
          <source>The following XHR&amp;rsquo;s which were &lt;code&gt;xhr.open(...)&lt;/code&gt; with these URLs would:</source>
          <target state="translated">以下XHR是带有这些URL的 &lt;code&gt;xhr.open(...)&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="7917b639dd89e87c70cf394ebb0d89f5bf79f91a" translate="yes" xml:space="preserve">
          <source>The following XHRs which were &lt;code&gt;xhr.open(...)&lt;/code&gt; with these URLs would:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fba11f3de4cc3cfbc18c034553c987492a50f8a3" translate="yes" xml:space="preserve">
          <source>The following calculations factor in CSS translations and transforms.</source>
          <target state="translated">以下计算考虑了CSS翻译和转换的因素。</target>
        </trans-unit>
        <trans-unit id="c08b63b39c67e0e98916e387da32b4be7861f1d8" translate="yes" xml:space="preserve">
          <source>The following events are available:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="646319b2697e628c52ae3f9eca7a2cf66dcf0f09" translate="yes" xml:space="preserve">
          <source>The following events will be fired based on what key was pressed identical to the event spec:</source>
          <target state="translated">以下事件将根据与事件规格相同的按键被按下而被触发。</target>
        </trans-unit>
        <trans-unit id="7a6d568435c548045433b9a553e45e05f3cc5f51" translate="yes" xml:space="preserve">
          <source>The following key can be combined with &lt;code&gt;.rightclick()&lt;/code&gt; through the &lt;code&gt;options&lt;/code&gt;..</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4445f0557056b006b77daa78dbb61b44b3467902" translate="yes" xml:space="preserve">
          <source>The following keys can be combined with &lt;code&gt;.click()&lt;/code&gt; through the &lt;code&gt;options&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91b21ab704b594f6370b5796dde61db82f8eebae" translate="yes" xml:space="preserve">
          <source>The following modifiers can be combined with &lt;code&gt;.click()&lt;/code&gt;.</source>
          <target state="translated">以下修饰符可以与 &lt;code&gt;.click()&lt;/code&gt; 结合使用。</target>
        </trans-unit>
        <trans-unit id="887afe261a5c4479dd3dcdee34523debc4bf098d" translate="yes" xml:space="preserve">
          <source>The following modifiers can be combined with &lt;code&gt;.dblclick()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bc92c734921c9a90f718550029eb698e194f027" translate="yes" xml:space="preserve">
          <source>The following options are merged in as default options to &lt;a href=&quot;route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">以下选项被合并为&lt;a href=&quot;route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; 的&lt;/a&gt;默认选项</target>
        </trans-unit>
        <trans-unit id="d34fe2e5b1592268188b96861ce12c62585addd1" translate="yes" xml:space="preserve">
          <source>The following options control the behavior of the server affecting all requests</source>
          <target state="translated">以下选项控制服务器的行为,影响所有的请求</target>
        </trans-unit>
        <trans-unit id="93f76fe41eee293d26c9929ac78caec13c4c6857" translate="yes" xml:space="preserve">
          <source>The following rules have been implemented that match real browser behavior (and the spec):</source>
          <target state="translated">以下规则已经实现,符合真实的浏览器行为(和规范)。</target>
        </trans-unit>
        <trans-unit id="66894db59ad64d0d1a3e02e706341f7af869dda1" translate="yes" xml:space="preserve">
          <source>The full file path is now included in console output for &lt;a href=&quot;../../api/commands/readfile&quot;&gt;&lt;code&gt;cy.readFile()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/writefile&quot;&gt;&lt;code&gt;cy.writeFile()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">现在，完整文件路径包含在&lt;a href=&quot;../../api/commands/readfile&quot;&gt; &lt;code&gt;cy.readFile()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../api/commands/writefile&quot;&gt; &lt;code&gt;cy.writeFile()&lt;/code&gt; 的&lt;/a&gt;控制台输出中。</target>
        </trans-unit>
        <trans-unit id="52dbe520b802a2b6d0ab935022601462043ae180" translate="yes" xml:space="preserve">
          <source>The full path to the source file.</source>
          <target state="translated">源文件的完整路径。</target>
        </trans-unit>
        <trans-unit id="2fb2662c58e729e5289edcd2c336a9de944bc0ce" translate="yes" xml:space="preserve">
          <source>The full source code for this guide can be found in the &lt;a href=&quot;https://github.com/cypress-io/cypress-example-todomvc-redux&quot;&gt;cypress-io/cypress-example-todomvc-redux&lt;/a&gt; repository.</source>
          <target state="translated">可以在&lt;a href=&quot;https://github.com/cypress-io/cypress-example-todomvc-redux&quot;&gt;cypress-io / cypress-example-todomvc-redux&lt;/a&gt;存储库中找到本指南的完整源代码。</target>
        </trans-unit>
        <trans-unit id="44d4e77f37936b84589875e5484286e06463b50f" translate="yes" xml:space="preserve">
          <source>The full source code for this section can be found in the &lt;a href=&quot;https://github.com/cypress-io/cypress-example-realworld&quot;&gt;cypress-io/cypress-example-realworld&lt;/a&gt; repository.</source>
          <target state="translated">可在&lt;a href=&quot;https://github.com/cypress-io/cypress-example-realworld&quot;&gt;cypress-io / cypress-example-realworld&lt;/a&gt;存储库中找到本节的完整源代码。</target>
        </trans-unit>
        <trans-unit id="3eb3b289e1a6ce3364f66d4f34c7dc1f3a8bbe33" translate="yes" xml:space="preserve">
          <source>The function passed to &lt;a href=&quot;../../api/commands/then&quot;&gt;&lt;code&gt;.then()&lt;/code&gt;&lt;/a&gt; is executed, with the found element yielded to it.</source>
          <target state="translated">执行传递给&lt;a href=&quot;../../api/commands/then&quot;&gt; &lt;code&gt;.then()&lt;/code&gt; &lt;/a&gt;的函数，并将找到的元素交还给它。</target>
        </trans-unit>
        <trans-unit id="3dc420de6ac3a3d53b7ef1e6f1012fde08e99eb2" translate="yes" xml:space="preserve">
          <source>The function used to replace the &lt;code&gt;method&lt;/code&gt; on the &lt;code&gt;object&lt;/code&gt;.</source>
          <target state="translated">该函数用于替换 &lt;code&gt;object&lt;/code&gt; 上的 &lt;code&gt;method&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="517d512f6e459bb09e8ff4252b8f0f79d55c5494" translate="yes" xml:space="preserve">
          <source>The good news here is that it is extremely rare to need to visit two different superdomains in a single test. Why? Because the browser has a natural security barrier called &lt;code&gt;origin policy&lt;/code&gt; that means that state like &lt;code&gt;localStorage&lt;/code&gt;, &lt;code&gt;cookies&lt;/code&gt;, &lt;code&gt;service workers&lt;/code&gt; and many other APIs are not shared between them.</source>
          <target state="translated">好消息是，在单个测试中很少需要访问两个不同的超域。为什么？因为浏览器有一个自然的安全屏障，称为&amp;ldquo; &lt;code&gt;origin policy&lt;/code&gt; ，这意味着它们之间不会共享诸如 &lt;code&gt;localStorage&lt;/code&gt; ， &lt;code&gt;cookies&lt;/code&gt; ， &lt;code&gt;service workers&lt;/code&gt; 和许多其他API之类的状态。</target>
        </trans-unit>
        <trans-unit id="6038afe5773657ada3181c00c8ae95cc804bc98d" translate="yes" xml:space="preserve">
          <source>The good news is that we aren&amp;rsquo;t Selenium, nor are we a traditional e2e testing tool. That means we&amp;rsquo;re not bound to the same restrictions.</source>
          <target state="translated">好消息是我们不是Selenium，也不是传统的e2e测试工具。这意味着我们不受相同的限制。</target>
        </trans-unit>
        <trans-unit id="d3a05cd54e98b8eeab634eaef1dc6a2aac4c46e8" translate="yes" xml:space="preserve">
          <source>The idea is that we never want to interfere with static assets that are fetched via Ajax.</source>
          <target state="translated">我们的想法是,我们永远不希望干扰通过Ajax获取的静态资产。</target>
        </trans-unit>
        <trans-unit id="af282f8e157d1b3edbaaa6794a00bde62a7f9081" translate="yes" xml:space="preserve">
          <source>The image below shows that our application is displaying at &lt;code&gt;1000px&lt;/code&gt; width, &lt;code&gt;660px&lt;/code&gt; height and scaled to &lt;code&gt;100%&lt;/code&gt;.</source>
          <target state="translated">下面示出了图像，我们的应用程序在显示 &lt;code&gt;1000px&lt;/code&gt; 宽度， &lt;code&gt;660px&lt;/code&gt; 高度，并调整为 &lt;code&gt;100%&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ecc51b70f97a0da9968b597d88238ff4b0320790" translate="yes" xml:space="preserve">
          <source>The implicit form is much shorter! So when would you want to use the explicit form?</source>
          <target state="translated">隐式要短得多! 那么什么时候你会想使用显式呢?</target>
        </trans-unit>
        <trans-unit id="ba91399d40baecd72aa8838e29b4664ca133d2e9" translate="yes" xml:space="preserve">
          <source>The in-page JS (the application under test) could throw an error.</source>
          <target state="translated">页面内的JS(被测应用程序)可能会抛出一个错误。</target>
        </trans-unit>
        <trans-unit id="ad438b013d33821acb075992087685309c90b75b" translate="yes" xml:space="preserve">
          <source>The initial &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">初始&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8f9e46f4c71463a3b7675e36d412ca68a59268dc" translate="yes" xml:space="preserve">
          <source>The initial &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; could respond with something other than success.</source>
          <target state="translated">最初的&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;可能会以成功以外的其他方式响应。</target>
        </trans-unit>
        <trans-unit id="df74d0b2e050f81f7a98f7c81c5cc356fbb27628" translate="yes" xml:space="preserve">
          <source>The initial imported plugins file can be &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;configured to another file&lt;/a&gt;.</source>
          <target state="translated">最初导入的插件文件可以&lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;配置为另一个文件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6bfa6b4e18e2d1d79e9b69ce6a6bdfda96703dee" translate="yes" xml:space="preserve">
          <source>The initial imported support file can be &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;configured to another file&lt;/a&gt;.</source>
          <target state="translated">初始导入的支持文件可以&lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;配置为另一个文件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3fa4db4ff7d088eca70cb22b7d83516e75e4fcb5" translate="yes" xml:space="preserve">
          <source>The input we want to &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; into could be disabled.</source>
          <target state="translated">我们想要的&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;输入可以被禁用。</target>
        </trans-unit>
        <trans-unit id="61ba64555e3bcf6c81720711aba0a9ce8c0ea5b4" translate="yes" xml:space="preserve">
          <source>The insanity that is URL parsing to figure out absolute, relative, absolute-path-relative, http, sub domains, and local files should work in most cases. In other words, Cypress has implemented the vast majority of url parsing based on the &lt;a href=&quot;https://url.spec.whatwg.org/&quot;&gt;w3c URL spec&lt;/a&gt;.</source>
          <target state="translated">URL解析以找出绝对，相对，绝对路径相对，http，子域和本地文件的精神错乱在大多数情况下应该可以解决。换句话说，赛普拉斯基于&lt;a href=&quot;https://url.spec.whatwg.org/&quot;&gt;w3c URL规范&lt;/a&gt;实现了绝大多数的URL解析。</target>
        </trans-unit>
        <trans-unit id="3c1430628b956c688b6d0241cc0bfaa3412293ac" translate="yes" xml:space="preserve">
          <source>The installed Test Runner comes with the fully transpiled, unobfuscated JavaScript source code that you can hack on. You might want to directly modify the installed Test Runner code to:</source>
          <target state="translated">安装好的Test Runner自带了完全转码的JavaScript源代码,你可以在上面开黑。你可能想直接修改已安装的Test Runner代码。</target>
        </trans-unit>
        <trans-unit id="0fc86127c7a522f90bf8e07dbcac1df2efc77009" translate="yes" xml:space="preserve">
          <source>The instructions in Cypress&amp;rsquo;s update window now include &lt;code&gt;yarn&lt;/code&gt; update instructions alongside &lt;code&gt;npm&lt;/code&gt;. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2871&quot;&gt;#2871&lt;/a&gt;.</source>
          <target state="translated">赛普拉斯更新窗口中的指令现在包括 &lt;code&gt;npm&lt;/code&gt; 旁边的 &lt;code&gt;yarn&lt;/code&gt; 更新指令。地址&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2871&quot;&gt;＃2871&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="082ca562fdc4fdabd33a9b0843ebfe3adda58f63" translate="yes" xml:space="preserve">
          <source>The instrumentation takes your original code like this fragment&amp;hellip;</source>
          <target state="translated">该工具采用您的原始代码，例如此片段&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="611ea9a5233c8e3b28251385dd27faf6dfab5c71" translate="yes" xml:space="preserve">
          <source>The intention of &lt;a href=&quot;request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; is to be used for checking endpoints on an actual, running server without having to start the front end application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4a220d891bf10e366988261b97e540636287bc3" translate="yes" xml:space="preserve">
          <source>The intention of &lt;code&gt;cy.request()&lt;/code&gt; is to be used for checking endpoints on an actual, running server without having to start the front end application.</source>
          <target state="translated">&lt;code&gt;cy.request()&lt;/code&gt; 的意图是用于检查实际运行的服务器上的端点，而无需启动前端应用程序。</target>
        </trans-unit>
        <trans-unit id="44694c765085a539b94664b5d15d4c92e4301eba" translate="yes" xml:space="preserve">
          <source>The intercept was registered too late</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cf9f7f7d3deb6aa4449b5dc10deb111b5d4be36" translate="yes" xml:space="preserve">
          <source>The interface for writing custom commands has been deprecated. &lt;a href=&quot;../../api/cypress-api/custom-commands&quot;&gt;Please read our docs on the new custom commands interface&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/436&quot;&gt;#436&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/465&quot;&gt;#465&lt;/a&gt;.</source>
          <target state="translated">不建议使用编写自定义命令的界面。&lt;a href=&quot;../../api/cypress-api/custom-commands&quot;&gt;请在新的自定义命令界面上阅读我们的文档&lt;/a&gt;。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/436&quot;&gt;＃436&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/465&quot;&gt;＃465&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1fe3b413647e5524cb9a8eb759e3711e3e2c7e6f" translate="yes" xml:space="preserve">
          <source>The internal Cypress proxy now forcibly responds to requests taking longer than &lt;code&gt;responseTimeout&lt;/code&gt;. Currently this sends back &lt;code&gt;text/html&lt;/code&gt; with the &lt;code&gt;ETIMEDOUT&lt;/code&gt; error, but this likely needs to be configurable. The reason we are now forcibly applying timeouts is to prevent &lt;code&gt;socket pooling exhaustion&lt;/code&gt; where tests are running and a 3rd party server never responds to the request.</source>
          <target state="translated">内部赛普拉斯代理现在强制响应时间比 &lt;code&gt;responseTimeout&lt;/code&gt; 长的请求。当前，这会发回带有 &lt;code&gt;ETIMEDOUT&lt;/code&gt; 错误的 &lt;code&gt;text/html&lt;/code&gt; ，但这可能需要配置。我们现在强行应用超时的原因是为了防止 &lt;code&gt;socket pooling exhaustion&lt;/code&gt; 在测试运行且第三方服务器从不响应请求的情况下耗尽端口。</target>
        </trans-unit>
        <trans-unit id="e78dd9a731fa9965824416262a86b07ce38f0d6e" translate="yes" xml:space="preserve">
          <source>The internal retry loop of Cypress now runs at &lt;code&gt;60fps&lt;/code&gt;, instead of &lt;code&gt;20fps&lt;/code&gt;.</source>
          <target state="translated">赛普拉斯的内部重试循环现在以 &lt;code&gt;60fps&lt;/code&gt; 而不是 &lt;code&gt;20fps&lt;/code&gt; 的速度运行。</target>
        </trans-unit>
        <trans-unit id="8b03e91dc47b3f73bfef22e00361142205f95b71" translate="yes" xml:space="preserve">
          <source>The internal version of &lt;code&gt;node&lt;/code&gt; which is built into Cypress is now &lt;code&gt;6.1.0&lt;/code&gt;.</source>
          <target state="translated">赛普拉斯内置的 &lt;code&gt;node&lt;/code&gt; 的内部版本现在为 &lt;code&gt;6.1.0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="740e4a044ae31f522828c809213aba3c21bab974" translate="yes" xml:space="preserve">
          <source>The last group can be called &lt;code&gt;package/guest&lt;/code&gt;:</source>
          <target state="translated">最后一组可以称为 &lt;code&gt;package/guest&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="98c0cfacf75a55888963139cea9090dc420be18d" translate="yes" xml:space="preserve">
          <source>The last, and probably most important reason why you want to test against local servers, is the ability to &lt;strong&gt;control them&lt;/strong&gt;. When your application is running in production you can&amp;rsquo;t control it.</source>
          <target state="translated">您想要对本地服务器进行测试的最后一个也是最重要的原因是可以&lt;strong&gt;控制它们&lt;/strong&gt;。当您的应用程序在生产环境中运行时，您将无法控制它。</target>
        </trans-unit>
        <trans-unit id="eb87a90f67a3d6751fca3c25e5bb985d9d1e73f0" translate="yes" xml:space="preserve">
          <source>The latest version of Cypress can be downloaded here: &lt;a href=&quot;http://download.cypress.io/latest&quot;&gt;http://download.cypress.io/latest&lt;/a&gt;.</source>
          <target state="translated">可在此处下载赛普拉斯的最新版本：&lt;a href=&quot;http://download.cypress.io/latest&quot;&gt;http&lt;/a&gt; : //download.cypress.io/latest。</target>
        </trans-unit>
        <trans-unit id="4546e37121e645a0402d6434a03fbb4574bdb049" translate="yes" xml:space="preserve">
          <source>The latest version of the &lt;a href=&quot;../guides/command-line&quot;&gt;Cypress CLI&lt;/a&gt; now accepts passing arguments to &lt;a href=&quot;../guides/command-line#cypress-open&quot;&gt;&lt;code&gt;cypress open&lt;/code&gt;&lt;/a&gt;. Example: &lt;code&gt;cypress open --config waitForAnimations=false --env foo=bar,baz=quux&lt;/code&gt;. This enables you to set and override local &lt;code&gt;cypress.json&lt;/code&gt; configuration and additionally set environment variables.</source>
          <target state="translated">现在，最新版本的&lt;a href=&quot;../guides/command-line&quot;&gt;Cypress CLI&lt;/a&gt;接受传递参数来&lt;a href=&quot;../guides/command-line#cypress-open&quot;&gt; &lt;code&gt;cypress open&lt;/code&gt; &lt;/a&gt;。示例： &lt;code&gt;cypress open --config waitForAnimations=false --env foo=bar,baz=quux&lt;/code&gt; 。这使您能够设置和覆盖本地 &lt;code&gt;cypress.json&lt;/code&gt; 配置，并另外设置环境变量。</target>
        </trans-unit>
        <trans-unit id="08d2b1553d7b97a29336b7996cff75ccac5f23ed" translate="yes" xml:space="preserve">
          <source>The lefthand side of the Test Runner is a visual representation of your test suite. Each test block is properly nested and each test, when clicked, displays every Cypress command and assertion executed within the test&amp;rsquo;s block as well as any command or assertion executed in relevant &lt;code&gt;before&lt;/code&gt;, &lt;code&gt;beforeEach&lt;/code&gt;, &lt;code&gt;afterEach&lt;/code&gt;, and &lt;code&gt;after&lt;/code&gt; hooks.</source>
          <target state="translated">测试运行器的左侧是测试套件的直观表示。每个测试块均正确嵌套，单击每个测试时，将显示在该测试块中执行的每个Cypress命令和断言，以及在相关的 &lt;code&gt;before&lt;/code&gt; ， &lt;code&gt;beforeEach&lt;/code&gt; ， &lt;code&gt;afterEach&lt;/code&gt; 和 &lt;code&gt;after&lt;/code&gt; 挂钩中执行的任何命令或断言。</target>
        </trans-unit>
        <trans-unit id="5cad922a466bd845aaf9cf10c55d543fbfbc9dc9" translate="yes" xml:space="preserve">
          <source>The list of tests now automatically refresh when test files are renamed, deleted, or added. In addition, because the list of tests is now displayed in the desktop application, we now synchronize the state of the current running spec.</source>
          <target state="translated">当测试文件被重命名、删除或添加时,测试列表现在会自动刷新。此外,由于测试列表现在显示在桌面应用程序中,我们现在可以同步当前运行的规范的状态。</target>
        </trans-unit>
        <trans-unit id="89a9ec3f90b6a288c6858dc00bc808c3021e6805" translate="yes" xml:space="preserve">
          <source>The lists of spec files now display at the correct indentation level when they are nested more than 5 directories deep. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3652&quot;&gt;#3652&lt;/a&gt;.</source>
          <target state="translated">现在，当规范文件列表嵌套超过5个目录时，它们以正确的缩进级别显示。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3652&quot;&gt;＃3652&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="84900bfd5a7a40ed2d96e85ee78e91e18e58cf2a" translate="yes" xml:space="preserve">
          <source>The main difference between &lt;code&gt;cy.spy()&lt;/code&gt; and &lt;a href=&quot;stub&quot;&gt;&lt;code&gt;cy.stub()&lt;/code&gt;&lt;/a&gt; is that &lt;code&gt;cy.spy()&lt;/code&gt; does not replace the method, it only wraps it. So, while invocations are recorded, the original method is still called. This can be very useful when testing methods on native browser objects. You can verify a method is being called by your test and still have the original method action invoked.</source>
          <target state="translated">&lt;code&gt;cy.spy()&lt;/code&gt; 和&lt;a href=&quot;stub&quot;&gt; &lt;code&gt;cy.stub()&lt;/code&gt; &lt;/a&gt;之间的主要区别是 &lt;code&gt;cy.spy()&lt;/code&gt; 不会替换该方法，而只是包装它。因此，在记录调用时，仍将调用原始方法。在本机浏览器对象上测试方法时，这可能非常有用。您可以验证测试正在调用某个方法，并且仍然可以调用原始方法操作。</target>
        </trans-unit>
        <trans-unit id="fc0eb4178b7ee7c54a3a37e5233234e3c9472584" translate="yes" xml:space="preserve">
          <source>The major version number of the browser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f457a081ab6043108c8709f568b57afe52f8959" translate="yes" xml:space="preserve">
          <source>The minimum viewport size has been lowered from &lt;code&gt;200&lt;/code&gt; pixels to &lt;code&gt;20&lt;/code&gt; pixels. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1169&quot;&gt;#1169&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1444&quot;&gt;#1444&lt;/a&gt;.</source>
          <target state="translated">最小视口大小已从 &lt;code&gt;200&lt;/code&gt; 像素降低到 &lt;code&gt;20&lt;/code&gt; 像素。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1169&quot;&gt;＃1169&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1444&quot;&gt;＃1444&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d18c1a85deabc98e63b589386ea049cdb4f7afc1" translate="yes" xml:space="preserve">
          <source>The most common situation where you might encounter this error is when you click on an &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; that navigates to another superdomain.</source>
          <target state="translated">您可能会遇到此错误的最常见情况是，单击导航到另一个超域的 &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2d934058e66d33283cabb50fd02646551ebc83cb" translate="yes" xml:space="preserve">
          <source>The most common use case for preserving cookies is to prevent having to log in to your application before each individual test. This is a problem if the majority of each test is spent logging in a user.</source>
          <target state="translated">保存cookie最常见的用例是为了防止在每次测试前必须登录到您的应用程序。如果每次测试的大部分时间都花在登录用户上,这就会出现问题。</target>
        </trans-unit>
        <trans-unit id="495264eeb4f77fa4fe3af4e450d8fbe742f50db7" translate="yes" xml:space="preserve">
          <source>The most common use case for sharing context is when dealing with &lt;a href=&quot;../../api/commands/fixture&quot;&gt;&lt;code&gt;cy.fixture()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">共享上下文的最常见用例是在处理&lt;a href=&quot;../../api/commands/fixture&quot;&gt; &lt;code&gt;cy.fixture()&lt;/code&gt; 时&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ac2d2a2b4a7a61df0b86a12cf22e7bdfe6243e23" translate="yes" xml:space="preserve">
          <source>The most common use case is adding your own chrome extension.</source>
          <target state="translated">最常见的使用情况是添加自己的chrome扩展。</target>
        </trans-unit>
        <trans-unit id="b5585ccc99acb821be59403211430d659e6f8f7f" translate="yes" xml:space="preserve">
          <source>The name of the &lt;code&gt;event&lt;/code&gt; to be triggered on the DOM element.</source>
          <target state="translated">要在DOM元素上触发的 &lt;code&gt;event&lt;/code&gt; 的名称。</target>
        </trans-unit>
        <trans-unit id="f6a436a2e855f7d061597050a3f6aad039087dea" translate="yes" xml:space="preserve">
          <source>The name of the &lt;code&gt;method&lt;/code&gt; on the &lt;code&gt;object&lt;/code&gt; to be wrapped.</source>
          <target state="translated">要包装的 &lt;code&gt;object&lt;/code&gt; 上 &lt;code&gt;method&lt;/code&gt; 的名称。</target>
        </trans-unit>
        <trans-unit id="e1fce31618869e21b5dde0d27bcdbc06dad64b14" translate="yes" xml:space="preserve">
          <source>The name of the alias to be referenced later within a &lt;a href=&quot;get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt; command using an &lt;code&gt;@&lt;/code&gt; prefix.</source>
          <target state="translated">稍后在&lt;a href=&quot;get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt;命令中使用 &lt;code&gt;@&lt;/code&gt; 前缀引用的别名的名称。</target>
        </trans-unit>
        <trans-unit id="d22f1965478b52c5923a415704ca6dd8e7b6b895" translate="yes" xml:space="preserve">
          <source>The name of the browser (case-insensitive) you want to check against. Name can be prepended with a &lt;code&gt;!&lt;/code&gt; character to inverse the check.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74483ed362b7641341a57573d6835a3a80146dca" translate="yes" xml:space="preserve">
          <source>The name of the command you&amp;rsquo;re either adding or overwriting.</source>
          <target state="translated">您要添加或覆盖的命令的名称。</target>
        </trans-unit>
        <trans-unit id="66bebc87e8e746433b524d2a144338ea076869cd" translate="yes" xml:space="preserve">
          <source>The name of the configuration to get or set.</source>
          <target state="translated">要获取或设置的配置名称。</target>
        </trans-unit>
        <trans-unit id="f50face8ca9ecf422378ade1f59c1bed76d8a278" translate="yes" xml:space="preserve">
          <source>The name of the cookie to be cleared.</source>
          <target state="translated">要清除的cookie的名称。</target>
        </trans-unit>
        <trans-unit id="312258dd244dd26ca31529fca52bec44d240d4c2" translate="yes" xml:space="preserve">
          <source>The name of the cookie to get. Required.</source>
          <target state="translated">要获取的cookie的名称。需要。</target>
        </trans-unit>
        <trans-unit id="3d5793e8f6927c436df1e125e654bf9591dd0ce0" translate="yes" xml:space="preserve">
          <source>The name of the cookie to set.</source>
          <target state="translated">要设置的cookie的名称。</target>
        </trans-unit>
        <trans-unit id="4e52f119e0878b0d6164e957ceef736d5824b473" translate="yes" xml:space="preserve">
          <source>The name of the environment variable to get or set.</source>
          <target state="translated">要获取或设置的环境变量的名称。</target>
        </trans-unit>
        <trans-unit id="b1e50cc91b0d9c692fdebf7b505ed959edf3978d" translate="yes" xml:space="preserve">
          <source>The name of the specfile where the screenshot was taken.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6acbe8f46d7c5392dfd63aed2c6e3b9169beb27c" translate="yes" xml:space="preserve">
          <source>The names and purposes of the visual parts of the Cypress Test Runner</source>
          <target state="translated">赛普拉斯测试运行器的视觉部分的名称和用途。</target>
        </trans-unit>
        <trans-unit id="820a57469c0c44fd27922b35e924334168df80c0" translate="yes" xml:space="preserve">
          <source>The number is yielded from previous command</source>
          <target state="translated">这个数字是由之前的命令产生的</target>
        </trans-unit>
        <trans-unit id="675422abbcf8973c5fdf35a28250ded7b25b8291" translate="yes" xml:space="preserve">
          <source>The number of &lt;code&gt;milliseconds&lt;/code&gt; to move the clock. Any timers within the affected range of time will be called.</source>
          <target state="translated">移动时钟的 &lt;code&gt;milliseconds&lt;/code&gt; 数。在受影响的时间范围内的任何计时器都将被调用。</target>
        </trans-unit>
        <trans-unit id="dbce6f2b24c7e0e0ff9e09c7912413a2dcdbee3b" translate="yes" xml:space="preserve">
          <source>The number of logs printed when installing Cypress in docker has been reduced. Partially addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1243&quot;&gt;#1243&lt;/a&gt;.</source>
          <target state="translated">在docker中安装Cypress时打印的日志数量已减少。部分地址&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1243&quot;&gt;＃1243&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3f6360040d9a9b279f825ed1858e4e2caed850a3" translate="yes" xml:space="preserve">
          <source>The number of machines dedicated for each &lt;code&gt;cypress run&lt;/code&gt; call is based on your CI configuration for the project.</source>
          <target state="translated">每个 &lt;code&gt;cypress run&lt;/code&gt; 调用专用的计算机数量取决于项目的CI配置。</target>
        </trans-unit>
        <trans-unit id="7b899fd2822c2462e0dd5b3cbb3ba4c54a99da18" translate="yes" xml:space="preserve">
          <source>The number of skipped, pending, passing, and failing tests.</source>
          <target state="translated">跳过的、待定的、合格的和不合格的测试次数。</target>
        </trans-unit>
        <trans-unit id="2af2fa800fac8319bf97a3540e05d1333f0f0b88" translate="yes" xml:space="preserve">
          <source>The number of tests for which snapshots and command data are kept in memory. Reduce this number if you are experiencing high memory consumption in your browser during a test run.</source>
          <target state="translated">快照和命令数据保存在内存中的测试次数。如果在测试运行期间浏览器的内存消耗较高,请减少这个数字。</target>
        </trans-unit>
        <trans-unit id="516a974004069c3d3277a625e9910084eb472b45" translate="yes" xml:space="preserve">
          <source>The number subject is changed by returning</source>
          <target state="translated">号码主题是通过返回</target>
        </trans-unit>
        <trans-unit id="ceb05b37622137b6073eeb7df3db0cde0cbb11e6" translate="yes" xml:space="preserve">
          <source>The number subject is changed with another command</source>
          <target state="translated">用另一个命令改变数字主题</target>
        </trans-unit>
        <trans-unit id="aa44bafd0eb0e05262574ed874ccaef3817a3c48" translate="yes" xml:space="preserve">
          <source>The object has the following properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9baca65f9cbd0fbc1015e93983d0544dfed81ca6" translate="yes" xml:space="preserve">
          <source>The object to test.</source>
          <target state="translated">要测试的对象。</target>
        </trans-unit>
        <trans-unit id="db327ba030716ff0b1187a489e847e64de982175" translate="yes" xml:space="preserve">
          <source>The object you receive after waiting on an XHR alias is now different. Previously this was a &lt;code&gt;FakeXMLHttpRequest&lt;/code&gt; object which came from Sinon.js. Now it is a special &lt;code&gt;XMLHttpRequest&lt;/code&gt; object which comes from Cypress. You may need to rewrite some of your assertions but we&amp;rsquo;ve tried to keep the signatures as close as possible.</source>
          <target state="translated">等待XHR别名后收到的对象现在不同。以前，这是一个来自Sinon.js 的 &lt;code&gt;FakeXMLHttpRequest&lt;/code&gt; 对象。现在，它是一个来自赛普拉斯的特殊 &lt;code&gt;XMLHttpRequest&lt;/code&gt; 对象。您可能需要重写一些断言，但我们尝试使签名尽可能接近。</target>
        </trans-unit>
        <trans-unit id="531e904ce3710972156633b273597c7e834ce072" translate="yes" xml:space="preserve">
          <source>The official &lt;a href=&quot;https://github.com/cypress-io/code-coverage&quot;&gt;@cypress/code-coverage&lt;/a&gt; plugin</source>
          <target state="translated">官方&lt;a href=&quot;https://github.com/cypress-io/code-coverage&quot;&gt;@ cypress / code-coverage&lt;/a&gt;插件</target>
        </trans-unit>
        <trans-unit id="de6ef17207a672a527da92a709276b20d42a9114" translate="yes" xml:space="preserve">
          <source>The one exception to this rule is when you are dealing with mutable objects (that change state). When things change state you often want to compare an object&amp;rsquo;s previous value to the next value.</source>
          <target state="translated">此规则的一个例外是当您处理可变对象（更改状态）时。当状态改变时，您通常希望将对象的上一个值与下一个值进行比较。</target>
        </trans-unit>
        <trans-unit id="6f078d69eccad934d447c9e7a151b423ab7fdab8" translate="yes" xml:space="preserve">
          <source>The only times you &lt;strong&gt;ever&lt;/strong&gt; need to clean up state, is if the operations that one test runs affects another test downstream. In only those cases do you need state cleanup.</source>
          <target state="translated">您&lt;strong&gt;唯一&lt;/strong&gt;需要清除状态的时间就是一个测试运行的操作是否影响下游的另一个测试。只有在这些情况下，才需要状态清除。</target>
        </trans-unit>
        <trans-unit id="8738834bbc79ac83a3be7ba8a32736a89ce6ffa9" translate="yes" xml:space="preserve">
          <source>The only way for you to easily &amp;ldquo;see&amp;rdquo; and debug why Cypress thought an element was not visible is to use a &lt;code&gt;debugger&lt;/code&gt; statement.</source>
          <target state="translated">轻松&amp;ldquo;查看&amp;rdquo;并调试Cypress为什么认为某个元素不可见的唯一方法是使用 &lt;code&gt;debugger&lt;/code&gt; 语句。</target>
        </trans-unit>
        <trans-unit id="c3c4d02deb75be8128a804ed27cb4cc25e389c74" translate="yes" xml:space="preserve">
          <source>The operating system and version</source>
          <target state="translated">操作系统和版本</target>
        </trans-unit>
        <trans-unit id="c40284c070808a3ebe43d545e821f63222385a3e" translate="yes" xml:space="preserve">
          <source>The order of hook and test execution is as follows:</source>
          <target state="translated">钩子和测试的执行顺序如下。</target>
        </trans-unit>
        <trans-unit id="e82e1e207597f80e52fbba928c04a568112dbd4b" translate="yes" xml:space="preserve">
          <source>The orientation of the screen. The &lt;em&gt;default orientation&lt;/em&gt; is &lt;code&gt;portrait&lt;/code&gt;. Pass &lt;code&gt;landscape&lt;/code&gt; as the orientation to reverse the width/height.</source>
          <target state="translated">屏幕的方向。该&lt;em&gt;默认方向&lt;/em&gt;是 &lt;code&gt;portrait&lt;/code&gt; 。将 &lt;code&gt;landscape&lt;/code&gt; 作为方向以反转宽度/高度。</target>
        </trans-unit>
        <trans-unit id="17a1b39f194f869a1407fe40768f7950fb624201" translate="yes" xml:space="preserve">
          <source>The page is visited, and Cypress waits for it to load.</source>
          <target state="translated">该页面被访问,赛普拉斯等待它加载。</target>
        </trans-unit>
        <trans-unit id="d261216987cde9246824d716277997b8370d25d7" translate="yes" xml:space="preserve">
          <source>The parameters passed to &lt;code&gt;qs&lt;/code&gt; will be merged into existing query parameters on the &lt;code&gt;url&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="815d0f6065479fe26708a4fd9c9eabd096b40e51" translate="yes" xml:space="preserve">
          <source>The path above is relative to where your &lt;code&gt;cypress.json&lt;/code&gt; is located.</source>
          <target state="translated">上面的路径是相对于 &lt;code&gt;cypress.json&lt;/code&gt; 的位置的。</target>
        </trans-unit>
        <trans-unit id="4ba4f47e330246706360965944807d1b11cbd81a" translate="yes" xml:space="preserve">
          <source>The path to the spec file, relative to the project root (e.g. &lt;code&gt;cypress/integration/login_spec.js&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a130638fa195780908caff03f0a4195eb99701ff" translate="yes" xml:space="preserve">
          <source>The pattern of doing something conditionally based on whether or not certain text is present is identical to element existence above.</source>
          <target state="translated">根据是否有某些文字而有条件地做某事的模式,与上面的元素存在相同。</target>
        </trans-unit>
        <trans-unit id="b7d1918499e2102e6875cc7688a3422e59ec7345" translate="yes" xml:space="preserve">
          <source>The patterns we&amp;rsquo;ll explore below are useful in and outside of Cypress.</source>
          <target state="translated">我们将在下面探讨的模式在赛普拉斯内部和外部都非常有用。</target>
        </trans-unit>
        <trans-unit id="e192581f2c1a279eba5014c6a46a4cc9b977113e" translate="yes" xml:space="preserve">
          <source>The permissions for each user role for the Dashboard Service.</source>
          <target state="translated">仪表板服务的每个用户角色的权限。</target>
        </trans-unit>
        <trans-unit id="4cda402afdbe0e2dc78d05fe36b114811a5f2cea" translate="yes" xml:space="preserve">
          <source>The plugins file must export a function with the following signature:</source>
          <target state="translated">插件文件必须导出一个带有以下签名的函数。</target>
        </trans-unit>
        <trans-unit id="3e428c0a9a199a549aed23bdc8b71131b95597f5" translate="yes" xml:space="preserve">
          <source>The point of Cypress is to be a tool you use every day to build and test &lt;strong&gt;your own applications&lt;/strong&gt;.</source>
          <target state="translated">赛普拉斯的重点是成为您每天用来构建和测试&lt;strong&gt;自己的应用程序的工具&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="85e1417ef20e040c1d3f3506e725e5bc219947ad" translate="yes" xml:space="preserve">
          <source>The position where the click should be issued. The &lt;code&gt;center&lt;/code&gt; position is the default position. Valid positions are &lt;code&gt;topLeft&lt;/code&gt;, &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;topRight&lt;/code&gt;, &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;center&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;bottomLeft&lt;/code&gt;, &lt;code&gt;bottom&lt;/code&gt;, and &lt;code&gt;bottomRight&lt;/code&gt;.</source>
          <target state="translated">发出点击的位置。该 &lt;code&gt;center&lt;/code&gt; 位置是默认位置。有效位置是 &lt;code&gt;topLeft&lt;/code&gt; ， &lt;code&gt;top&lt;/code&gt; ， &lt;code&gt;topRight&lt;/code&gt; ， &lt;code&gt;left&lt;/code&gt; ， &lt;code&gt;center&lt;/code&gt; ， &lt;code&gt;right&lt;/code&gt; ， &lt;code&gt;bottomLeft&lt;/code&gt; ， &lt;code&gt;bottom&lt;/code&gt; 和 &lt;code&gt;bottomRight&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a47e3cc02495212b1e603eb47937a7d4164472b2" translate="yes" xml:space="preserve">
          <source>The position where the double click should be issued. The &lt;code&gt;center&lt;/code&gt; position is the default position. Valid positions are &lt;code&gt;topLeft&lt;/code&gt;, &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;topRight&lt;/code&gt;, &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;center&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;bottomLeft&lt;/code&gt;, &lt;code&gt;bottom&lt;/code&gt;, and &lt;code&gt;bottomRight&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ddfe3ba8ef846ad4188c609f43e29a9d0567472" translate="yes" xml:space="preserve">
          <source>The position where the event should be triggered. The &lt;code&gt;center&lt;/code&gt; position is the default position. Valid positions are &lt;code&gt;topLeft&lt;/code&gt;, &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;topRight&lt;/code&gt;, &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;center&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;bottomLeft&lt;/code&gt;, &lt;code&gt;bottom&lt;/code&gt;, and &lt;code&gt;bottomRight&lt;/code&gt;.</source>
          <target state="translated">应该触发事件的位置。该 &lt;code&gt;center&lt;/code&gt; 位置是默认位置。有效位置是 &lt;code&gt;topLeft&lt;/code&gt; ， &lt;code&gt;top&lt;/code&gt; ， &lt;code&gt;topRight&lt;/code&gt; ， &lt;code&gt;left&lt;/code&gt; ， &lt;code&gt;center&lt;/code&gt; ， &lt;code&gt;right&lt;/code&gt; ， &lt;code&gt;bottomLeft&lt;/code&gt; ， &lt;code&gt;bottom&lt;/code&gt; 和 &lt;code&gt;bottomRight&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9335ae6ecf7e00e4cc44805a0e9a9b079342ca3f" translate="yes" xml:space="preserve">
          <source>The position where the right click should be issued. The &lt;code&gt;center&lt;/code&gt; position is the default position. Valid positions are &lt;code&gt;topLeft&lt;/code&gt;, &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;topRight&lt;/code&gt;, &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;center&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;bottomLeft&lt;/code&gt;, &lt;code&gt;bottom&lt;/code&gt;, and &lt;code&gt;bottomRight&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0dfe71cebc9453363e766adae8104e56f89d272" translate="yes" xml:space="preserve">
          <source>The previous subject will automatically be yielded to the callback function.</source>
          <target state="translated">前面的主体会自动让位于回调函数。</target>
        </trans-unit>
        <trans-unit id="8a9400005c3bca2486ac5d4f71c851ac612c4135" translate="yes" xml:space="preserve">
          <source>The problem</source>
          <target state="translated">问题</target>
        </trans-unit>
        <trans-unit id="8c1f0715b111d17a87a9fce9693cba5938592b77" translate="yes" xml:space="preserve">
          <source>The problem is - what happens if your server takes time to boot? There is no guarantee that when the next command runs (&lt;code&gt;cypress run&lt;/code&gt;) that your web server is up and available. So your Cypress test may start and try to visit your local server before it is ready to be visited.</source>
          <target state="translated">问题是-如果您的服务器需要一些时间才能启动？无法保证在运行下一个命令（ &lt;code&gt;cypress run&lt;/code&gt; ）时，您的Web服务器已启动并可用。因此，您的赛普拉斯测试可能会开始，并在准备好访问之前尝试访问您的本地服务器。</target>
        </trans-unit>
        <trans-unit id="12a59b57cc3fb45d5de325a58f3909addc756cc8" translate="yes" xml:space="preserve">
          <source>The problem is - while first appearing simple, writing tests in this fashion often leads to flaky tests, random failures, and difficult to track down edge cases.</source>
          <target state="translated">问题是--虽然最初看起来很简单,但以这种方式编写测试往往会导致片状测试、随机失败和难以追踪边缘情况。</target>
        </trans-unit>
        <trans-unit id="e5fe82c8a50d60e49aeb9fad3ad7b188c41fd2a3" translate="yes" xml:space="preserve">
          <source>The problem looks weird - I can clearly see the label &amp;ldquo;todo B&amp;rdquo; present in the list, so why isn&amp;rsquo;t Cypress finding it? What is going on?</source>
          <target state="translated">这个问题看起来很奇怪-我可以清楚地看到列表中出现标签&amp;ldquo; todo B&amp;rdquo;，那么赛普拉斯为什么找不到它？到底是怎么回事？</target>
        </trans-unit>
        <trans-unit id="ad0cbaf52f72d6fd201e9a44230036f52946b8b3" translate="yes" xml:space="preserve">
          <source>The problem with &lt;strong&gt;conditional testing&lt;/strong&gt; is that it can only be used when the state has stabilized. In modern day applications, knowing when state is stable is oftentimes impossible.</source>
          <target state="translated">&lt;strong&gt;条件测试&lt;/strong&gt;的问题在于它只能在状态稳定后才能使用。在现代应用中，通常很难知道状态何时稳定。</target>
        </trans-unit>
        <trans-unit id="a653f42cae2e012716d05927d4c3035de2a2636c" translate="yes" xml:space="preserve">
          <source>The problem with this is that if the wizard renders asynchronously (as it likely does) you cannot use the DOM to conditionally dismiss it.</source>
          <target state="translated">这方面的问题是,如果向导异步渲染(很可能如此),你就不能使用DOM来有条件地驳回它。</target>
        </trans-unit>
        <trans-unit id="c027ae8b3bc0fa16df969bd2198365f87e4d5c6c" translate="yes" xml:space="preserve">
          <source>The problem with this question is that this type of conditional control flow ends up being non-deterministic. This means it&amp;rsquo;s impossible for a script (or robot), to follow it 100% consistently.</source>
          <target state="translated">这个问题的问题在于，这种类型的条件控制流最终是不确定的。这意味着脚本（或机器人）不可能始终如一地遵循它。</target>
        </trans-unit>
        <trans-unit id="b729d30e14c9badd23b8643d7abc79d9901a2424" translate="yes" xml:space="preserve">
          <source>The produced HTML report shows 99% code coverage</source>
          <target state="translated">产生的HTML报告显示99%的代码覆盖率</target>
        </trans-unit>
        <trans-unit id="ea2ebeced198abba4de7d35b582a8fde4fa5b269" translate="yes" xml:space="preserve">
          <source>The prompt to &amp;ldquo;Restore pages?&amp;rdquo; is no longer displayed within Chrome upon restarting a crashed Chrome window. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2048&quot;&gt;#2048&lt;/a&gt;.</source>
          <target state="translated">提示&amp;ldquo;还原页面？&amp;rdquo; 重新启动崩溃的Chrome窗口后，Chrome中不再显示。地址&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2048&quot;&gt;＃2048&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9095904993039bb7dc83a2bcde163a4d5fa021af" translate="yes" xml:space="preserve">
          <source>The proper error is now thrown when passing &lt;code&gt;{log: false}&lt;/code&gt; to a Cypress command that failed. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3847&quot;&gt;#3847&lt;/a&gt;.</source>
          <target state="translated">现在，将 &lt;code&gt;{log: false}&lt;/code&gt; 传递给失败的Cypress命令时，会引发正确的错误。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3847&quot;&gt;＃3847&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="65ff1c8352b857304a62da31a7f96aee77a4676f" translate="yes" xml:space="preserve">
          <source>The properties will be merged into the screenshot details and passed to the &lt;code&gt;onAfterScreenshot&lt;/code&gt; callback (if defined with &lt;a href=&quot;../cypress-api/screenshot-api&quot;&gt;Cypress.Screenshot.defaults()&lt;/a&gt; and/or &lt;a href=&quot;../commands/screenshot&quot;&gt;cy.screenshot()&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0071a0ee508b63fc99edce02b71dd4dce400dd71" translate="yes" xml:space="preserve">
          <source>The properties will be merged into the screenshot details and passed to the &lt;code&gt;onAfterScreenshot&lt;/code&gt; callback (if defined with &lt;a href=&quot;../cypress-api/screenshot-api&quot;&gt;Cypress.Screenshot.defaults()&lt;/a&gt; and/or &lt;a href=&quot;../commands/screenshot&quot;&gt;cy.screenshot()&lt;/a&gt;). Any other properties besides &lt;em&gt;path&lt;/em&gt;, &lt;em&gt;size&lt;/em&gt;, and &lt;em&gt;dimensions&lt;/em&gt; will be ignored.</source>
          <target state="translated">这些属性将合并到屏幕快​​照详细信息中，并传递给 &lt;code&gt;onAfterScreenshot&lt;/code&gt; 回调（如果使用&lt;a href=&quot;../cypress-api/screenshot-api&quot;&gt;Cypress.Screenshot.defaults（）&lt;/a&gt;和/或&lt;a href=&quot;../commands/screenshot&quot;&gt;cy.screenshot（）定义&lt;/a&gt;）。除&lt;em&gt;path&lt;/em&gt;，&lt;em&gt;size&lt;/em&gt;和&lt;em&gt;Dimensions&lt;/em&gt;以外的任何其他属性都将被忽略。</target>
        </trans-unit>
        <trans-unit id="cccd71717a8c41be41515296fe384b80356736c4" translate="yes" xml:space="preserve">
          <source>The proxy now restricts its injection to only &lt;code&gt;Content-Type: text/html&lt;/code&gt; headers so it will not accidentally inject into the wrong responses.</source>
          <target state="translated">现在，代理将其注入限制为仅 &lt;code&gt;Content-Type: text/html&lt;/code&gt; 标头，因此不会意外注入错误的响应。</target>
        </trans-unit>
        <trans-unit id="86b1ae5b1f6582a5f613c8cfb4a4171bbd5ee43e" translate="yes" xml:space="preserve">
          <source>The proxy server can now correctly proxy content on a &lt;code&gt;ipv6&lt;/code&gt; host only. We had to patch node core to get this in, as by default node prefers &lt;code&gt;ipv4&lt;/code&gt;. We now concurrently test all hosts via &lt;code&gt;dns.lookup&lt;/code&gt; to find the first one that responds. This updated behavior now matches how other clients, like &lt;code&gt;curl&lt;/code&gt;, and browsers resolve hosts. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/112&quot;&gt;#112&lt;/a&gt;.</source>
          <target state="translated">代理服务器现在只能在 &lt;code&gt;ipv6&lt;/code&gt; 主机上正确代理内容。我们必须修补节点核心才能将其 &lt;code&gt;ipv4&lt;/code&gt; ，因为默认情况下，节点更喜欢ipv4。现在，我们通过 &lt;code&gt;dns.lookup&lt;/code&gt; 同时测试所有主机，以找到第一个响应的主机。现在，此更新的行为与其他客户端（例如 &lt;code&gt;curl&lt;/code&gt; ）和浏览器解析主机的方式匹配。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/112&quot;&gt;＃112&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d9a2b43e63a034ee4997d095f86ad3f22788e8cb" translate="yes" xml:space="preserve">
          <source>The quality setting for the video compression, in Constant Rate Factor (CRF). The value can be &lt;code&gt;false&lt;/code&gt; to disable compression or a value between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;51&lt;/code&gt;, where a lower value results in better quality (at the expense of a higher file size).</source>
          <target state="translated">视频压缩的质量设置，以恒定速率因子（CRF）为单位。该值可以为 &lt;code&gt;false&lt;/code&gt; 以禁用压缩，也可以为 &lt;code&gt;0&lt;/code&gt; 到 &lt;code&gt;51&lt;/code&gt; 之间的值，其中较低的值会导致更好的质量（以较大的文件大小为代价）。</target>
        </trans-unit>
        <trans-unit id="f89067c46de9cbac856617c606b8a987ed9c1132" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command is similar to how &lt;a href=&quot;http://api.jquery.com/jQuery/&quot;&gt;&lt;code&gt;$(&amp;hellip;)&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a33d9384bde7f0377ea14bfe2d251644ad148160" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/children&quot;&gt;&lt;code&gt;.children()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">该命令的查询行为与&lt;a href=&quot;http://api.jquery.com/children&quot;&gt; &lt;code&gt;.children()&lt;/code&gt; &lt;/a&gt;在jQuery中的工作方式完全匹配。</target>
        </trans-unit>
        <trans-unit id="9d8432f6da2e184cded12d9982a55d834b2ed898" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/closest&quot;&gt;&lt;code&gt;.closest()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">此命令的查询行为与&lt;a href=&quot;http://api.jquery.com/closest&quot;&gt; &lt;code&gt;.closest()&lt;/code&gt; &lt;/a&gt;在jQuery中的工作方式完全匹配。</target>
        </trans-unit>
        <trans-unit id="bda6266f25e4ff6cd23feea5107bba5b6dbc8c4a" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/eq&quot;&gt;&lt;code&gt;.eq()&lt;/code&gt;&lt;/a&gt; works in jQuery. Its behavior is also similar to that of the CSS pseudo-class &lt;a href=&quot;https://api.jquery.com/nth-child-selector/&quot;&gt;&lt;code&gt;:nth-child()&lt;/code&gt;&lt;/a&gt; selector.</source>
          <target state="translated">该命令的查询行为与&lt;a href=&quot;http://api.jquery.com/eq&quot;&gt; &lt;code&gt;.eq()&lt;/code&gt; &lt;/a&gt;在jQuery中的工作方式完全匹配。它的行为也类似于CSS伪类&lt;a href=&quot;https://api.jquery.com/nth-child-selector/&quot;&gt; &lt;code&gt;:nth-child()&lt;/code&gt; &lt;/a&gt;选择器的行为。</target>
        </trans-unit>
        <trans-unit id="6d0ef2d48a5d36dac1ca67fde341c0ba5c9ce1ef" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/filter&quot;&gt;&lt;code&gt;.filter()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">该命令的查询行为与&lt;a href=&quot;http://api.jquery.com/filter&quot;&gt; &lt;code&gt;.filter()&lt;/code&gt; &lt;/a&gt;在jQuery中的工作方式完全匹配。</target>
        </trans-unit>
        <trans-unit id="2a1ca271bf27573182e9ffe0716a9134d879fac3" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/find&quot;&gt;&lt;code&gt;.find()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">该命令的查询行为与&lt;a href=&quot;http://api.jquery.com/find&quot;&gt; &lt;code&gt;.find()&lt;/code&gt; &lt;/a&gt;在jQuery中的工作方式完全匹配。</target>
        </trans-unit>
        <trans-unit id="c657bb7b5132132da2ed605362f91ee4cba6b4ea" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/first&quot;&gt;&lt;code&gt;.first()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">该命令的查询行为与&lt;a href=&quot;http://api.jquery.com/first&quot;&gt; &lt;code&gt;.first()&lt;/code&gt; &lt;/a&gt;在jQuery中的工作方式完全匹配。</target>
        </trans-unit>
        <trans-unit id="fab41f8c308d7604317c8a3976edc0bcc6755220" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/jQuery/&quot;&gt;&lt;code&gt;$(&amp;hellip;)&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">该命令的查询行为与&lt;a href=&quot;http://api.jquery.com/jQuery/&quot;&gt; &lt;code&gt;$(&amp;hellip;)&lt;/code&gt; &lt;/a&gt;在jQuery中的工作方式完全匹配。</target>
        </trans-unit>
        <trans-unit id="7a5a410ccc5435cfafbf7f43b72636408d7df049" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/last&quot;&gt;&lt;code&gt;.last()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">该命令的查询行为与&lt;a href=&quot;http://api.jquery.com/last&quot;&gt; &lt;code&gt;.last()&lt;/code&gt; &lt;/a&gt;在jQuery中的工作方式完全匹配。</target>
        </trans-unit>
        <trans-unit id="299072e32b4b4670ebaafce9744ce963c508c9d2" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/next&quot;&gt;&lt;code&gt;.next()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">此命令的查询行为与&lt;a href=&quot;http://api.jquery.com/next&quot;&gt; &lt;code&gt;.next()&lt;/code&gt; &lt;/a&gt;在jQuery中的工作方式完全匹配。</target>
        </trans-unit>
        <trans-unit id="6e6186d9908c77fd34884b3b46007e07fa29fc91" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/nextAll&quot;&gt;&lt;code&gt;.nextAll()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">该命令的查询行为与&lt;a href=&quot;http://api.jquery.com/nextAll&quot;&gt; &lt;code&gt;.nextAll()&lt;/code&gt; &lt;/a&gt;在jQuery中的工作方式完全匹配。</target>
        </trans-unit>
        <trans-unit id="189cc06406542b8a4eadc96285d9469280712ee8" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/nextUntil&quot;&gt;&lt;code&gt;.nextUntil()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">该命令的查询行为与&lt;a href=&quot;http://api.jquery.com/nextUntil&quot;&gt; &lt;code&gt;.nextUntil()&lt;/code&gt; &lt;/a&gt;在jQuery中的工作方式完全匹配。</target>
        </trans-unit>
        <trans-unit id="94b85c123580764e2e7732b7c3e62fd80caa9ef6" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/not&quot;&gt;&lt;code&gt;.not()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">此命令的查询行为与&lt;a href=&quot;http://api.jquery.com/not&quot;&gt; &lt;code&gt;.not()&lt;/code&gt; &lt;/a&gt;在jQuery中的工作方式完全匹配。</target>
        </trans-unit>
        <trans-unit id="777282d025492a0fd9c1baf0fc794b6dc5b53c3b" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/parent&quot;&gt;&lt;code&gt;.parent()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">该命令的查询行为与&lt;a href=&quot;http://api.jquery.com/parent&quot;&gt; &lt;code&gt;.parent()&lt;/code&gt; &lt;/a&gt;在jQuery中的工作方式完全匹配。</target>
        </trans-unit>
        <trans-unit id="d41943ec63c3f5f2d7e199b73d6d15ae1a2cce00" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/parents&quot;&gt;&lt;code&gt;.parents()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">该命令的查询行为与&lt;a href=&quot;http://api.jquery.com/parents&quot;&gt; &lt;code&gt;.parents()&lt;/code&gt; &lt;/a&gt;在jQuery中的工作方式完全匹配。</target>
        </trans-unit>
        <trans-unit id="544e3c939462bf691563593037c51fd6e522ef2c" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/parentsUntil&quot;&gt;&lt;code&gt;.parentsUntil()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">该命令的查询行为与&lt;a href=&quot;http://api.jquery.com/parentsUntil&quot;&gt; &lt;code&gt;.parentsUntil()&lt;/code&gt; &lt;/a&gt;在jQuery中的工作方式完全匹配。</target>
        </trans-unit>
        <trans-unit id="ee9867ecc1e1b911af35ec08087f2eccb0a10657" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/prev&quot;&gt;&lt;code&gt;.prev()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">该命令的查询行为与&lt;a href=&quot;http://api.jquery.com/prev&quot;&gt; &lt;code&gt;.prev()&lt;/code&gt; &lt;/a&gt;在jQuery中的工作方式完全匹配。</target>
        </trans-unit>
        <trans-unit id="315998380b634a4d4b0a2f5ed2f482aba143a367" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/prevAll&quot;&gt;&lt;code&gt;.prevAll()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">该命令的查询行为与&lt;a href=&quot;http://api.jquery.com/prevAll&quot;&gt; &lt;code&gt;.prevAll()&lt;/code&gt; &lt;/a&gt;在jQuery中的工作方式完全匹配。</target>
        </trans-unit>
        <trans-unit id="25f3b4d78859b15e5a073181e251e9737d52f6f3" translate="yes" xml:space="preserve">
          <source>The querying behavior of this command matches exactly how &lt;a href=&quot;http://api.jquery.com/prevUntil&quot;&gt;&lt;code&gt;.prevUntil()&lt;/code&gt;&lt;/a&gt; works in jQuery.</source>
          <target state="translated">该命令的查询行为与&lt;a href=&quot;http://api.jquery.com/prevUntil&quot;&gt; &lt;code&gt;.prevUntil()&lt;/code&gt; &lt;/a&gt;在jQuery中的工作方式完全匹配。</target>
        </trans-unit>
        <trans-unit id="4628417eea51fed2b221bb2c01160482495b6d7b" translate="yes" xml:space="preserve">
          <source>The question is: how important is the &lt;code&gt;Submit&lt;/code&gt; text content to your test? If the text changed from &lt;code&gt;Submit&lt;/code&gt; to &lt;code&gt;Save&lt;/code&gt; - would you want the test to fail?</source>
          <target state="translated">问题是：将文本内容 &lt;code&gt;Submit&lt;/code&gt; 到您的测试有多重要？如果文本从&amp;ldquo; &lt;code&gt;Submit&lt;/code&gt; 更改为&amp;ldquo; &lt;code&gt;Save&lt;/code&gt; ，您是否希望测试失败？</target>
        </trans-unit>
        <trans-unit id="832d0f608aa3dce489a24b42cbb16ea13c394135" translate="yes" xml:space="preserve">
          <source>The reason for using &lt;code&gt;const&lt;/code&gt; is because the &lt;code&gt;$span&lt;/code&gt; object is mutable. Whenever you have mutable objects and you&amp;rsquo;re trying to compare them, you&amp;rsquo;ll need to store their values. Using &lt;code&gt;const&lt;/code&gt; is a perfect way to do that.</source>
          <target state="translated">使用 &lt;code&gt;const&lt;/code&gt; 的原因是因为 &lt;code&gt;$span&lt;/code&gt; 对象是可变的。每当您有可变的对象并试图比较它们时，就需要存储它们的值。使用 &lt;code&gt;const&lt;/code&gt; 是实现此目的的理想方法。</target>
        </trans-unit>
        <trans-unit id="e2332863f7342ce8e194642f40c3469e1c70bcb6" translate="yes" xml:space="preserve">
          <source>The reason this is an error instead of a warning is because Cypress internally queues commands serially whereas Promises execute as soon as they are invoked. Attempting to reconcile this would prevent Cypress from ever resolving.</source>
          <target state="translated">这之所以是一个错误而不是一个警告,是因为赛普拉斯内部的命令是串行排队的,而承诺一旦被调用就会被执行。如果试图协调这一点,就会使赛普拉斯永远无法解决这个问题。</target>
        </trans-unit>
        <trans-unit id="4f5c4809c9c27cdb18a1771b2867e3ac1e88ccd9" translate="yes" xml:space="preserve">
          <source>The reason this is even possible to do in the Promise world is because you have the power to execute multiple asynchronous actions in parallel. Under the hood, each promise &amp;lsquo;chain&amp;rsquo; returns a promise instance that tracks the relationship between linked parent and child instances.</source>
          <target state="translated">在Promise世界中甚至可以做到这一点的原因是，您有能力并行执行多个异步操作。在幕后，每个promise&amp;ldquo;链&amp;rdquo;都返回一个promise实例，该实例跟踪链接的父实例和子实例之间的关系。</target>
        </trans-unit>
        <trans-unit id="154c7ee9b9136ebf1eb2d12f5bf175d3c48376dc" translate="yes" xml:space="preserve">
          <source>The reason we scroll an element into view when hovering over a snapshot is just to help you to see which element(s) were found by that corresponding command. It&amp;rsquo;s a purely visual feature and does not necessarily reflect what your page looked like when the command ran.</source>
          <target state="translated">将鼠标悬停在快照上时，将元素滚动到视图中的原因只是为了帮助您查看该相应命令找到了哪些元素。这是一个纯粹的视觉功能，并不一定反映命令运行时页面的外观。</target>
        </trans-unit>
        <trans-unit id="741ce430257dc2797efcdc070f54bcde38cba49e" translate="yes" xml:space="preserve">
          <source>The recommended approach is to install Cypress with &lt;code&gt;npm&lt;/code&gt; because :</source>
          <target state="translated">推荐的方法是使用 &lt;code&gt;npm&lt;/code&gt; 安装Cypress，因为：</target>
        </trans-unit>
        <trans-unit id="7d004abe4ea60408199e7d1090fa66306815c24a" translate="yes" xml:space="preserve">
          <source>The record key is used to authenticate that your project is &lt;em&gt;allowed&lt;/em&gt; to record tests to the Dashboard Service. As long as your record key stays &lt;em&gt;private&lt;/em&gt;, nobody will be able to record test runs for your project - even if they have your &lt;code&gt;projectId&lt;/code&gt;.</source>
          <target state="translated">记录密钥用于验证您的项目是否&lt;em&gt;可以&lt;/em&gt;将测试记录到仪表板服务。只要您的记录密钥保持&lt;em&gt;私有状态&lt;/em&gt;，任何人都将无法为您的项目记录测试运行-即使他们拥有您的 &lt;code&gt;projectId&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="782e934647aaf46e267b9e2994b503b6ceb94eae" translate="yes" xml:space="preserve">
          <source>The relationship between Cypress and your back end</source>
          <target state="translated">赛普拉斯和你的后端之间的关系</target>
        </trans-unit>
        <trans-unit id="86767f6f9298a0ccef95be7ee182369b685aa005" translate="yes" xml:space="preserve">
          <source>The reporter now more intelligently scrolls to prevent commands from being cut off. Useful in screenshots / video recording. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/228&quot;&gt;#228&lt;/a&gt;.</source>
          <target state="translated">现在，报告程序可以更智能地滚动以防止命令被切断。在屏幕截图/视频记录中很有用。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/228&quot;&gt;＃228&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="eb961ae4754815cd1b9d935db64457dd730740d1" translate="yes" xml:space="preserve">
          <source>The reporter now updates the duration every &lt;code&gt;100ms&lt;/code&gt; instead of only when a test changes.</source>
          <target state="translated">现在，报告器每 &lt;code&gt;100ms&lt;/code&gt; 更新一次持续时间，而不是仅在测试更改时更新。</target>
        </trans-unit>
        <trans-unit id="ebc26485c6e3c6b30603411dc1165d16fc408b87" translate="yes" xml:space="preserve">
          <source>The request matched multiple intercepts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e0d76a96e8727bc65f9abd4125e82c8f2902dc4" translate="yes" xml:space="preserve">
          <source>The response was cached</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0039958a5af4a5799d4ea0cdb86070e4837053f" translate="yes" xml:space="preserve">
          <source>The retry-ability allows the tests to complete each command as soon as the assertion passes, without hard-coding waits. If your application takes a few milliseconds or even seconds to render each DOM element - no big deal, the test does not have to change at all. For example, let&amp;rsquo;s introduce an artificial delay of 3 seconds when refreshing the application&amp;rsquo;s UI below in an example TodoMVC model code:</source>
          <target state="translated">重试功能允许测试在断言通过后立即完成每个命令，而无需进行硬编码等待。如果您的应用程序需要花费几毫秒甚至几秒钟来呈现每个DOM元素-没什么大不了的，那么测试根本就不需要更改。例如，在下面的示例TodoMVC模型代码中，让我们在刷新应用程序的UI时引入3秒的人为延迟：</target>
        </trans-unit>
        <trans-unit id="71bc331e6aac9e3eb2c8fe091951ba06336fb2eb" translate="yes" xml:space="preserve">
          <source>The return value of the function</source>
          <target state="translated">函数的返回值</target>
        </trans-unit>
        <trans-unit id="5475168849b55756904f67ba5f5927702fc5cd88" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;launchOptions&lt;/code&gt; object will become the new launch options for the browser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edcff548a201cf2cbeab03884e41ca15627351e5" translate="yes" xml:space="preserve">
          <source>The right click below will be issued inside of the element (15px from the left and 40px from the top).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b348d0a86845c8ceb7394e67cb9264b277dac55" translate="yes" xml:space="preserve">
          <source>The righthand side of the Test Runner is used to display the Application Under Test (AUT): the application that was navigated to using a &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; or any subsequent routing calls made from the visited application.</source>
          <target state="translated">测试运行器的右侧用于显示被测应用程序（AUT）：使用&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;或从所访问的应用程序进行的任何后续路由调用导航到的应用程序。</target>
        </trans-unit>
        <trans-unit id="20ccabfca08c80324032b660312bf288570f5f54" translate="yes" xml:space="preserve">
          <source>The root element yielded is &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; by default. However, when calling &lt;code&gt;.root()&lt;/code&gt; from a &lt;a href=&quot;within&quot;&gt;&lt;code&gt;.within()&lt;/code&gt;&lt;/a&gt; command, the root element will point to the element you are &amp;ldquo;within&amp;rdquo;.</source>
          <target state="translated">默认情况下，产生的根元素为 &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; 。然而，当调用 &lt;code&gt;.root()&lt;/code&gt; 从&lt;a href=&quot;within&quot;&gt; &lt;code&gt;.within()&lt;/code&gt; &lt;/a&gt;命令，根元素将指向你是&amp;ldquo;内&amp;rdquo;的元素。</target>
        </trans-unit>
        <trans-unit id="5b1bd9a24b648423ec3686dbb22073a50661093e" translate="yes" xml:space="preserve">
          <source>The rules are:</source>
          <target state="translated">规则是:</target>
        </trans-unit>
        <trans-unit id="aadce9498b17e758a86f40d9ae98f9a3640bdcce" translate="yes" xml:space="preserve">
          <source>The run you are attempting access to is already complete and will not accept new groups.</source>
          <target state="translated">您正在尝试访问的运行已经完成,将不接受新的组。</target>
        </trans-unit>
        <trans-unit id="1b91f2dcdffa4ff0300650744bcc55d68af71bc7" translate="yes" xml:space="preserve">
          <source>The runner is now responsive. It will correctly scale down URLs on smaller screen sizes instead of looking completely broken in CSS. We also designed a much better loading indicator.</source>
          <target state="translated">运行器现在是响应的。它将在较小的屏幕尺寸上正确地缩小URL,而不是在CSS中看起来完全破碎。我们还设计了一个更好的加载指标。</target>
        </trans-unit>
        <trans-unit id="744f89a32257af4cef30575d297defcb2298d35b" translate="yes" xml:space="preserve">
          <source>The runner no longer appears to &amp;ldquo;hang&amp;rdquo; if a &lt;code&gt;before&lt;/code&gt; hook fails in a test with siblings. Previously the test would never generate a &lt;code&gt;status&lt;/code&gt; and look pending forever. This was a visual bug only. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1343&quot;&gt;#1343&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;code&gt;before&lt;/code&gt; 钩子在同级测试中失败，则跑步者似乎不再&amp;ldquo;挂起&amp;rdquo; 。以前，测试永远不会产生 &lt;code&gt;status&lt;/code&gt; 并且永远看起来都未决。这只是一个视觉错误。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1343&quot;&gt;＃1343&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="58248b14b36017671f91d641a616c8f7c6655e6f" translate="yes" xml:space="preserve">
          <source>The same principles we introduced many times before apply to this situation. If you want to access what a command yields you have to do it in a closure using a &lt;a href=&quot;../../api/commands/then&quot;&gt;&lt;code&gt;.then()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">我们多次介绍的相同原理适用于这种情况。如果要访问命令产生的内容，则必须使用&lt;a href=&quot;../../api/commands/then&quot;&gt; &lt;code&gt;.then()&lt;/code&gt; &lt;/a&gt;在闭包中进行操作。</target>
        </trans-unit>
        <trans-unit id="da087ce901acf8f64536c6694cd13c6121e0a3c7" translate="yes" xml:space="preserve">
          <source>The same subject they were originally yielded: &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">他们最初产生的主题是：&lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="616f1ebfb12be022e71b1e7312dc0657084c5e29" translate="yes" xml:space="preserve">
          <source>The scaffolded &lt;code&gt;spec_helper.js&lt;/code&gt; now correctly returns its object literal in the &lt;code&gt;onConsole&lt;/code&gt; callback.</source>
          <target state="translated">脚手架的 &lt;code&gt;spec_helper.js&lt;/code&gt; 现在可以在 &lt;code&gt;onConsole&lt;/code&gt; 回调中正确返回其对象文字。</target>
        </trans-unit>
        <trans-unit id="77ec6af1d48ca1702a265ac799dd5b3e5f28002e" translate="yes" xml:space="preserve">
          <source>The screenshot will be stored in the &lt;code&gt;cypress/screenshots&lt;/code&gt; folder by default. You can change the directory where screenshots are saved in your &lt;a href=&quot;../../guides/references/configuration#Folders-Files&quot;&gt;configuration&lt;/a&gt;.</source>
          <target state="translated">屏幕 &lt;code&gt;cypress/screenshots&lt;/code&gt; 默认情况下将存储在cypress / screenshots文件夹中。您可以更改&lt;a href=&quot;../../guides/references/configuration#Folders-Files&quot;&gt;配置&lt;/a&gt;中保存屏幕快照的目录。</target>
        </trans-unit>
        <trans-unit id="2806f2f253541c74359b4b5eddeefd82c06c7ace" translate="yes" xml:space="preserve">
          <source>The screenshot will be stored in the &lt;code&gt;cypress/screenshots&lt;/code&gt; folder by default. You can change the directory where screenshots are saved in your &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Folders-Files&quot;&gt;configuration&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d6edcf18de10be4a2c17192050ea340363e0d60" translate="yes" xml:space="preserve">
          <source>The scrolling algorithm works by scrolling the top, leftmost point of the element we issued the command on to the top, leftmost scrollable point of its scrollable container.</source>
          <target state="translated">滚动算法的工作原理是将我们发出命令的元素的顶部、最左边的点滚动到其可滚动容器的顶部、最左边的点。</target>
        </trans-unit>
        <trans-unit id="5522a3bf222d37bdd3cdf0c1b8d08578e5788f02" translate="yes" xml:space="preserve">
          <source>The second group can be called &lt;code&gt;Mac/Chrome 70&lt;/code&gt;.</source>
          <target state="translated">第二组可以称为 &lt;code&gt;Mac/Chrome 70&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9fc34125a565889afe865b6c9fd020b60647a340" translate="yes" xml:space="preserve">
          <source>The seeded &lt;code&gt;example_spec.js&lt;/code&gt; file has been replaced by an &lt;code&gt;examples&lt;/code&gt; folder with several spec files. This more closely reflects the recommended use of Cypress - as smaller groups of tests split among many files that will now be run in isolation. The tests were also updated from ES5 to ES6. You can see all changes in the &lt;a href=&quot;https://github.com/cypress-io/cypress-example-kitchensink&quot;&gt;&lt;code&gt;cypress-example-kitchensink&lt;/code&gt; repo&lt;/a&gt; Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1460&quot;&gt;#1460&lt;/a&gt;.</source>
          <target state="translated">种子的 &lt;code&gt;example_spec.js&lt;/code&gt; 文件已由带有几个spec文件的 &lt;code&gt;examples&lt;/code&gt; 文件夹替换。这更紧密地反映了赛普拉斯的建议用法-因为较小的测试组会分散在许多文件中，这些文件现在将独立运行。测试也从ES5更新到了ES6。您可以在&lt;a href=&quot;https://github.com/cypress-io/cypress-example-kitchensink&quot;&gt; &lt;code&gt;cypress-example-kitchensink&lt;/code&gt; 存储库&lt;/a&gt; Fixs &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1460&quot;&gt;＃1460中&lt;/a&gt;查看所有更改。</target>
        </trans-unit>
        <trans-unit id="e0ff7ed00bb89a367e0369a10505032a1cf6dc2e" translate="yes" xml:space="preserve">
          <source>The seeded &lt;code&gt;example_spec.js&lt;/code&gt; file no longer fails in Windows on the &lt;a href=&quot;../../api/commands/exec&quot;&gt;&lt;code&gt;cy.exec()&lt;/code&gt;&lt;/a&gt; test. It now conditionally runs a command appropriate for Windows. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1097&quot;&gt;#1097&lt;/a&gt;.</source>
          <target state="translated">在Windows中&lt;a href=&quot;../../api/commands/exec&quot;&gt; &lt;code&gt;cy.exec()&lt;/code&gt; &lt;/a&gt;测试中，播种的 &lt;code&gt;example_spec.js&lt;/code&gt; 文件不再失败。现在，它有条件地运行适用于Windows的命令。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1097&quot;&gt;＃1097&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="298b205a13d32dbd7241fc9d144b1f1be96f75cd" translate="yes" xml:space="preserve">
          <source>The seeded Kitchen Sink examples have some new examples showing how to add a message to assertions, how to compare the text content of two elements, and how to make assertions about &lt;code&gt;data&lt;/code&gt; attributes. The examples also have some small typo fixes. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/502&quot;&gt;#502&lt;/a&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3272&quot;&gt;#3272&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3287&quot;&gt;#3287&lt;/a&gt;, and &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3700&quot;&gt;#3700&lt;/a&gt;.</source>
          <target state="translated">带有种子的Kitchen Sink示例提供了一些新示例，这些示例显示了如何向断言添加消息，如何比较两个元素的文本内容以及如何对 &lt;code&gt;data&lt;/code&gt; 属性进行断言。这些示例还具有一些小的错字修复程序。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/502&quot;&gt;＃502&lt;/a&gt;。地址在&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3272&quot;&gt;＃3272&lt;/a&gt;，&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3287&quot;&gt;＃3287&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3700&quot;&gt;＃3700中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a092fcd3d2c2f2c51d80e6ddaaccfc4c4e6cb92e" translate="yes" xml:space="preserve">
          <source>The selector where you want finding next siblings to stop.</source>
          <target state="translated">你想在哪里停止寻找下一个兄弟姐妹的选择器。</target>
        </trans-unit>
        <trans-unit id="d2e7aba59dd21c2dbf43910b949e804cf99208b5" translate="yes" xml:space="preserve">
          <source>The selector where you want finding parent ancestors to stop.</source>
          <target state="translated">选择器,你想在哪里停止寻找父系祖先。</target>
        </trans-unit>
        <trans-unit id="f8c13841a7cc9952554fbf15cca0f35f8a5b7f10" translate="yes" xml:space="preserve">
          <source>The selector where you want finding previous siblings to stop.</source>
          <target state="translated">你想在哪里停止查找以前的兄弟姐妹的选择器。</target>
        </trans-unit>
        <trans-unit id="5c3fa19e6d68b5c04ffb7d22b5766f6abf54c4dc" translate="yes" xml:space="preserve">
          <source>The simplest solution here is to move your reset code to &lt;strong&gt;before&lt;/strong&gt; the test runs.</source>
          <target state="translated">这里最简单的解决方案是在测试运行&lt;strong&gt;之前&lt;/strong&gt;将重置代码移至。</target>
        </trans-unit>
        <trans-unit id="7326d486873e849329a7995dc389459b7a485672" translate="yes" xml:space="preserve">
          <source>The simplest way to find the pre-release version of the Test Runner matching this commit is to look at the commits made on our projects under test at &lt;a href=&quot;https://github.com/cypress-io/cypress-test-example-repos/commits/master&quot;&gt;cypress-test-example-repos&lt;/a&gt;. You will see individual commits for each built platform and architecture: &lt;code&gt;darwin&lt;/code&gt; (Mac), &lt;code&gt;linux&lt;/code&gt;, &lt;code&gt;win 32bit&lt;/code&gt; and &lt;code&gt;win 64bit&lt;/code&gt;. The built commit SHA &lt;code&gt;e5106d9&lt;/code&gt; is in the subject line of the test commit:</source>
          <target state="translated">查找与该提交匹配的Test Runner的预发布版本的最简单方法是，在&lt;a href=&quot;https://github.com/cypress-io/cypress-test-example-repos/commits/master&quot;&gt;cypress-test-example-repos&lt;/a&gt;上查看对我们正在测试的项目所做的提交。您将看到每个构建平台和体系结构的单独提交： &lt;code&gt;darwin&lt;/code&gt; （Mac）， &lt;code&gt;linux&lt;/code&gt; ， &lt;code&gt;win 32bit&lt;/code&gt; 和 &lt;code&gt;win 64bit&lt;/code&gt; 。生成的提交SHA &lt;code&gt;e5106d9&lt;/code&gt; 在测试提交的主题行中：</target>
        </trans-unit>
        <trans-unit id="4922ad4546a0c80d9103f709606363d960023b10" translate="yes" xml:space="preserve">
          <source>The simplest way to see IntelliSense when typing a Cypress command or assertion is to add a &lt;a href=&quot;http://www.typescriptlang.org/docs/handbook/triple-slash-directives.html&quot;&gt;triple-slash directive&lt;/a&gt; to the head of your JavaScript or TypeScript testing file. This will turn the IntelliSense on a per file basis. Just copy the comment line below and paste it into your spec file.</source>
          <target state="translated">键入赛普拉斯命令或断言时查看IntelliSense的最简单方法是在JavaScript或TypeScript测试文件的开头添加&lt;a href=&quot;http://www.typescriptlang.org/docs/handbook/triple-slash-directives.html&quot;&gt;三斜杠指令&lt;/a&gt;。这将打开每个文件的IntelliSense。只需复制下面的注释行并将其粘贴到您的spec文件中即可。</target>
        </trans-unit>
        <trans-unit id="6e005c42a16c60f4791cac1922a1de9a2c11e5a8" translate="yes" xml:space="preserve">
          <source>The situations</source>
          <target state="translated">状况</target>
        </trans-unit>
        <trans-unit id="bfecdae994d59e9351f4d782d3beba01301c1c39" translate="yes" xml:space="preserve">
          <source>The size of the image file (in bytes).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eece8a51628f7550e564a37f2924316f0112393" translate="yes" xml:space="preserve">
          <source>The solution</source>
          <target state="translated">解决办法</target>
        </trans-unit>
        <trans-unit id="c05d2e56eb827cf6c977fe1d6b78afb5627a0ff8" translate="yes" xml:space="preserve">
          <source>The solution here is to use multiple reporters. You will have the benefit of both worlds.</source>
          <target state="translated">这里的解决方案是使用多个记者。你会得到两全其美的好处。</target>
        </trans-unit>
        <trans-unit id="db247f1f81db3157aef3cd6887ea3dc4e6d0c53c" translate="yes" xml:space="preserve">
          <source>The source line not covered by the end-to-end tests shows an edge case NOT reachable from the UI. Yet this switch case is definitely worth testing - at least to avoid accidentally changing its behavior during future refactoring.</source>
          <target state="translated">端到端测试没有覆盖到的源码行显示了一个无法从UI中到达的边缘情况,但这个开关情况绝对值得测试--至少可以避免在未来的重构中意外地改变其行为。然而这个开关案例绝对值得测试--至少可以避免在未来的重构过程中意外地改变其行为。</target>
        </trans-unit>
        <trans-unit id="e420d2e02ca27a058dc670499b6960faa1c8a7d0" translate="yes" xml:space="preserve">
          <source>The sources line not covered marked in yellow (the switch cases the test missed) and red (regular statements) are a great guide for writing more end-to-end tests. We need tests that delete todo items, edit them, mark all of them as completed at once and clear completed items. When we cover every switch statement in &lt;code&gt;src/reducers/todos.js&lt;/code&gt; we probably will achieve close to 100% code coverage. Even more importantly, we will cover the main features of the application the user is expected to use.</source>
          <target state="translated">未覆盖的源代码行用黄色（错过了测试的转换案例）和红色（常规语句）标记了，是编写更多端到端测试的绝佳指南。我们需要删除待办事项，对其进行编辑，将它们全部标记为已完成并清除已完成项目的测试。当我们覆盖 &lt;code&gt;src/reducers/todos.js&lt;/code&gt; 中的每个switch语句时，我们可能会实现接近100％的代码覆盖率。更重要的是，我们将介绍预期用户使用的应用程序的主要功能。</target>
        </trans-unit>
        <trans-unit id="1ee947ce102f16e81ff6c392bd028cc14209fcfe" translate="yes" xml:space="preserve">
          <source>The spec defines the &amp;ldquo;submit&amp;rdquo; button as the first &lt;code&gt;input[type=submit]&lt;/code&gt; or &lt;code&gt;button[type!=button]&lt;/code&gt; from the form.</source>
          <target state="translated">规范将&amp;ldquo;提交&amp;rdquo;按钮定义为表单中的第一个 &lt;code&gt;input[type=submit]&lt;/code&gt; 或 &lt;code&gt;button[type!=button]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aa52cfa7b66849aeb1e1e20a02c8323a892ac97d" translate="yes" xml:space="preserve">
          <source>The spec file&amp;rsquo;s font weight has been increased within the Test Runner for better readability. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3065&quot;&gt;#3065&lt;/a&gt;.</source>
          <target state="translated">在&amp;ldquo;测试运行器&amp;rdquo;中增加了规范文件的字体权重，以提高可读性。地址在&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3065&quot;&gt;＃3065中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8ab5600bcf8258f904e13ebf56de677e7ac204b6" translate="yes" xml:space="preserve">
          <source>The spec states what should happen if the element clicked is removed from the DOM during &lt;code&gt;mousedown&lt;/code&gt; or &lt;code&gt;mouseup&lt;/code&gt;, but Cypress is not currently factoring this in. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;Open an issue&lt;/a&gt; if you need this to be fixed.</source>
          <target state="translated">规范指出，如果在 &lt;code&gt;mousedown&lt;/code&gt; 或 &lt;code&gt;mouseup&lt;/code&gt; 期间从DOM中删除了单击的元素，该怎么办，但Cypress当前并未将此因素考虑在内。如果需要解决此&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;问题&lt;/a&gt;，请打开一个问题。</target>
        </trans-unit>
        <trans-unit id="05791ba30f36d790f5202b44eb7363004981a14e" translate="yes" xml:space="preserve">
          <source>The spinner animation should more smoothly spin when a command is pending in the Test Runner. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4005&quot;&gt;#4005&lt;/a&gt;.</source>
          <target state="translated">当命令在&amp;ldquo;测试运行器&amp;rdquo;中挂起时，微调器动画应更平滑地旋转。地址在&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4005&quot;&gt;＃4005中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ee6e315f5406c519d65ceffeaf6709cf4dc537cf" translate="yes" xml:space="preserve">
          <source>The standard output has been redesigned to better visualize spec files running in isolation and to be more visually appealing. This may break any specialized logic written that expected the standard output to be structured in a specific way or contain specific words. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1588&quot;&gt;#1588&lt;/a&gt;.</source>
          <target state="translated">重新设计了标准输出，以更好地可视化独立运行的规范文件，并在视觉上更具吸引力。这可能会破坏编写的任何期望标准输出以特定方式构造或包含特定单词的专用逻辑。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1588&quot;&gt;＃1588&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4eba702a046b370fe55e1ae443a0698e1baa5c96" translate="yes" xml:space="preserve">
          <source>The strategies</source>
          <target state="translated">战略</target>
        </trans-unit>
        <trans-unit id="5953668a2bc7e87a40e41d6bc6562ef18608eb9a" translate="yes" xml:space="preserve">
          <source>The suggested path for saving the preprocessed file to disk. This is unique to the source file. A preprocessor can choose to write the file elsewhere, but Cypress automatically provides you this value as a convenient default.</source>
          <target state="translated">建议将预处理文件保存到磁盘的路径。这对源文件来说是独一无二的。预处理器可以选择将文件写入其他地方,但赛普拉斯会自动为您提供这个值作为方便的默认值。</target>
        </trans-unit>
        <trans-unit id="cf4f68de9e3414117e00fe81f998018fef423d19" translate="yes" xml:space="preserve">
          <source>The support file is a great place to put reusable behavior such as Custom Commands or global overrides that you want applied and available to all of your spec files.</source>
          <target state="translated">支持文件是一个很好的地方,可以将可重用的行为(如自定义命令或全局覆盖)放到您希望应用于所有规格文件的地方。</target>
        </trans-unit>
        <trans-unit id="edf9fe7e13ebc4e1a9e695dcbee0a2f47e2da124" translate="yes" xml:space="preserve">
          <source>The syntax &lt;code&gt;cy.task(name, arg, options)&lt;/code&gt; only has place for a single argument to be passed from the test code to the plugins code. In the situations where you would like to pass multiple arguments, place them into an object to be destructured inside the task code. For example, if you would like to execute a database query and pass the database profile name you could do:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dc5fb064027d5425dcb06031eb04d3f26b8ef98" translate="yes" xml:space="preserve">
          <source>The system command to be executed from the project root (the directory that contains &lt;code&gt;cypress.json&lt;/code&gt;).</source>
          <target state="translated">从项目根目录（包含 &lt;code&gt;cypress.json&lt;/code&gt; 的目录）执行的系统命令。</target>
        </trans-unit>
        <trans-unit id="5c2a51af150d91cd26df789000e0b2aff74aa3e2" translate="yes" xml:space="preserve">
          <source>The system command to be executed from the project root (the directory that contains the default &lt;code&gt;cypress.json&lt;/code&gt; configuration file).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9ecfc5dbe854c8e87cfad618aa3452f417851ae" translate="yes" xml:space="preserve">
          <source>The test &lt;a href=&quot;https://github.com/cypress-io/cypress/tree/develop/packages/runner&quot;&gt;runner&lt;/a&gt; has been rebuilt from the ground up in &lt;a href=&quot;https://reactjs.org/&quot;&gt;React.js&lt;/a&gt;. The left side of the runner called the &lt;a href=&quot;https://github.com/cypress-io/cypress/tree/develop/packages/reporter&quot;&gt;reporter&lt;/a&gt; is now a separate application. This, as well as other changes, markedly improved the performance of running tests. &lt;em&gt;Your tests will now run faster.&lt;/em&gt; This will also enable you to test your application in full screen. Additionally this paves the way for being able to spawn multiple browsers at once and synchronize testing across them. This also means we&amp;rsquo;ll be able to support mobile browsers. The UI for doing this hasn&amp;rsquo;t been implemented but the vast majority of the work to accomplish this is done now.</source>
          <target state="translated">测试&lt;a href=&quot;https://github.com/cypress-io/cypress/tree/develop/packages/runner&quot;&gt;亚军&lt;/a&gt;已经从根本上重建&lt;a href=&quot;https://reactjs.org/&quot;&gt;React.js&lt;/a&gt;。现在，名为&amp;ldquo; &lt;a href=&quot;https://github.com/cypress-io/cypress/tree/develop/packages/reporter&quot;&gt;记者&lt;/a&gt; &amp;rdquo;的跑步者的左侧是一个单独的应用程序。这以及其他更改显着提高了运行测试的性能。&lt;em&gt;您的测试现在将运行得更快。&lt;/em&gt;这也使您能够全屏测试应用程序。此外，这为能够立即产生多个浏览器并在它们之间同步测试铺平了道路。这也意味着我们将能够支持移动浏览器。尚未执行用于执行此操作的UI，但是现在已完成完成此操作的绝大多数工作。</target>
        </trans-unit>
        <trans-unit id="1fde190f7aaf2b43a3df989474cb26010c916855" translate="yes" xml:space="preserve">
          <source>The test has finished but Cypress still has commands in its queue</source>
          <target state="translated">测试已经结束,但赛普拉斯的队列中仍有命令。</target>
        </trans-unit>
        <trans-unit id="408e2a30fb8dbe380e7c5c68d1429ad4b2fa87ca" translate="yes" xml:space="preserve">
          <source>The test interface borrowed from &lt;a href=&quot;../references/bundled-tools#Mocha&quot;&gt;Mocha&lt;/a&gt; provides &lt;code&gt;describe()&lt;/code&gt;, &lt;code&gt;context()&lt;/code&gt;, &lt;code&gt;it()&lt;/code&gt; and &lt;code&gt;specify()&lt;/code&gt;.</source>
          <target state="translated">从&lt;a href=&quot;../references/bundled-tools#Mocha&quot;&gt;Mocha&lt;/a&gt;借用的测试接口提供 &lt;code&gt;describe()&lt;/code&gt; ， &lt;code&gt;context()&lt;/code&gt; ， &lt;code&gt;it()&lt;/code&gt; 和 &lt;code&gt;specify()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6b2b83102a63a3d2cae202ad98c0882149e26154" translate="yes" xml:space="preserve">
          <source>The test is green, even though we made no assertions.</source>
          <target state="translated">测试是绿色的,尽管我们没有做出任何论断。</target>
        </trans-unit>
        <trans-unit id="3b26a746152c5e6951d14cd04a6705a9da5da25b" translate="yes" xml:space="preserve">
          <source>The test name text is now selectable inside the Command Log. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1476&quot;&gt;#1476&lt;/a&gt;.</source>
          <target state="translated">现在可以在命令日志中选择测试名称文本。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1476&quot;&gt;＃1476&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="677c13d47b66766d5de3330e8ee6846e01da614e" translate="yes" xml:space="preserve">
          <source>The test passes in Cypress without a hitch.</source>
          <target state="translated">在赛普拉斯的测试顺利通过。</target>
        </trans-unit>
        <trans-unit id="cebd2ba13455213fb1fd8eb55b2140bb21d388c3" translate="yes" xml:space="preserve">
          <source>The test passes, because the second &lt;code&gt;cy.get('.todo-list li')&lt;/code&gt; is retried with its own assertion now &lt;code&gt;.should('have.length', 2)&lt;/code&gt;. Only after successfully finding two &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; elements, the command &lt;code&gt;.find('label')&lt;/code&gt; and its assertion starts, and by now, the item with correct &amp;ldquo;todo B&amp;rdquo; label has been correctly queried.</source>
          <target state="translated">测试通过了，因为第二个 &lt;code&gt;cy.get('.todo-list li')&lt;/code&gt; 现在以其自己的断言 &lt;code&gt;.should('have.length', 2)&lt;/code&gt; 重试。仅在成功找到两个 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 元素之后，命令 &lt;code&gt;.find('label')&lt;/code&gt; 及其声明才开始，并且到现在为止，已经正确查询了带有正确&amp;ldquo; todo B&amp;rdquo;标签的项目。</target>
        </trans-unit>
        <trans-unit id="55fad155c13bf4c36076952735aacf49f42a1326" translate="yes" xml:space="preserve">
          <source>The test passes, even if the there is no web application visited.</source>
          <target state="translated">即使没有访问Web应用程序,测试也会通过。</target>
        </trans-unit>
        <trans-unit id="de71d3aad8061eada0c3c81692d2f2152a641df7" translate="yes" xml:space="preserve">
          <source>The tests titles and headers in the Command Log no longer truncate with elipsis when the text is longer than that width of the Command Log. Instead the text wraps so that all text is shown. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3947&quot;&gt;#3947&lt;/a&gt;.</source>
          <target state="translated">当文本长于命令日志的宽度时，命令日志中的测试标题和标题将不再带有省略号。而是换行，以便显示所有文本。地址&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3947&quot;&gt;＃3947&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bcb89de9b094a31924c4a38456d9bbb4c947bee1" translate="yes" xml:space="preserve">
          <source>The text to be typed into the DOM element.</source>
          <target state="translated">要输入到DOM元素中的文字。</target>
        </trans-unit>
        <trans-unit id="9f9bdd3c02a97c74a6b21a32af18e5d40cea8f4f" translate="yes" xml:space="preserve">
          <source>The third group can be called &lt;code&gt;Linux/Electron&lt;/code&gt;. &lt;em&gt;Electron is the default browser used in Cypress runs&lt;/em&gt;.</source>
          <target state="translated">第三类可以称为 &lt;code&gt;Linux/Electron&lt;/code&gt; 。&lt;em&gt;电子是赛普拉斯运行中使用的默认浏览器&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="3480a52688819ceb9188befe7f88086aa53ebf27" translate="yes" xml:space="preserve">
          <source>The time the run started and finished as well as the duration.</source>
          <target state="translated">跑步开始和结束的时间以及持续时间。</target>
        </trans-unit>
        <trans-unit id="789cf010b55608cf61521c415f3472efba58ac36" translate="yes" xml:space="preserve">
          <source>The times the run, each spec file, and test started and ended.</source>
          <target state="translated">运行的时间,每个规格文件和测试开始和结束的时间。</target>
        </trans-unit>
        <trans-unit id="1ab1f7ba5e441060b3e47ee6ec9ef1015a985796" translate="yes" xml:space="preserve">
          <source>The title of your project is now the title of the browser tab (so you can easily tell Cypress tabs from one another).</source>
          <target state="translated">你的项目标题现在是浏览器标签页的标题(这样你就可以很容易地区分Cypress标签页和其他标签页)。</target>
        </trans-unit>
        <trans-unit id="aca5f31247cc57de12011ed72a9362d0578d654c" translate="yes" xml:space="preserve">
          <source>The trade-off here is that doing everything in the browser (basically all of your tests) is a much better experience in Cypress. But doing things outside of the browser may take a little extra work.</source>
          <target state="translated">这里的权衡是,在浏览器中做所有事情(基本上是你所有的测试)在Cypress中的体验要好得多。但在浏览器之外做事情可能需要一点额外的工作。</target>
        </trans-unit>
        <trans-unit id="66800d02a42414569d04adc313282995eafd7015" translate="yes" xml:space="preserve">
          <source>The tray icon in OSX will now change colors. It will turn blue when you&amp;rsquo;re running a Cypress project and red on any kind of failures such as syntax errors in &lt;code&gt;cypress.json&lt;/code&gt;. It will turn back black when nothing is actively running.</source>
          <target state="translated">现在，OSX中的托盘图标将更改颜色。当您运行Cypress项目时，它将变为蓝色；如果出现任何类型的故障（例如 &lt;code&gt;cypress.json&lt;/code&gt; 中的语法错误），它将变为红色。当没有任何活动在运行时，它将变回黑色。</target>
        </trans-unit>
        <trans-unit id="a09aac7dae774f70172432961f1b259397ef93d1" translate="yes" xml:space="preserve">
          <source>The type definition for &lt;a href=&quot;../../api/commands/filter&quot;&gt;&lt;code&gt;.filter()&lt;/code&gt;&lt;/a&gt; now correctly supports a function argument.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/filter&quot;&gt; &lt;code&gt;.filter()&lt;/code&gt; &lt;/a&gt;的类型定义现在可以正确支持函数参数。</target>
        </trans-unit>
        <trans-unit id="13e70dc4fe63c68c728bf6572edb7d362407e557" translate="yes" xml:space="preserve">
          <source>The type definition for &lt;a href=&quot;../../api/commands/scrollintoview&quot;&gt;&lt;code&gt;.scrollIntoView()&lt;/code&gt;&lt;/a&gt; no longer errors when passed a &lt;code&gt;duration&lt;/code&gt; option. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1606&quot;&gt;#1606&lt;/a&gt;.</source>
          <target state="translated">传递 &lt;code&gt;duration&lt;/code&gt; 选项时，&lt;a href=&quot;../../api/commands/scrollintoview&quot;&gt; &lt;code&gt;.scrollIntoView()&lt;/code&gt; &lt;/a&gt;的类型定义不再错误。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1606&quot;&gt;＃1606&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e9d05cb6f9125a2a31db69026779516fc5793c3c" translate="yes" xml:space="preserve">
          <source>The types for the &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains(content, options)&lt;/code&gt;&lt;/a&gt; syntax have been added. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4727&quot;&gt;#4727&lt;/a&gt;.</source>
          <target state="translated">该类型的&lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains(content, options)&lt;/code&gt; &lt;/a&gt;已添加的语法。地址&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4727&quot;&gt;＃4727&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f8fc59ef10843743e04fa2db214438ec33017997" translate="yes" xml:space="preserve">
          <source>The updated hidden rules apply to all assertions like &lt;code&gt;should(&quot;be.hidden&quot;)&lt;/code&gt;, and how Cypress indicates an element is hidden displays in the Command Log.</source>
          <target state="translated">更新后的隐藏规则适用于所有声明，如 &lt;code&gt;should(&quot;be.hidden&quot;)&lt;/code&gt; ，赛普拉斯如何指示元素被隐藏显示在命令日志中。</target>
        </trans-unit>
        <trans-unit id="739f9feb3c19d40dc4a125fe4555d7c28a426ec9" translate="yes" xml:space="preserve">
          <source>The upsides to this are that tests should consistently pass or fail regardless of a developers&amp;rsquo; screen size. Tests will also consistently run in &lt;code&gt;CI&lt;/code&gt; because all of the viewports will be the same no matter what machine Cypress runs on.</source>
          <target state="translated">这样做的好处是，无论开发人员的屏幕大小如何，测试应始终通过或失败。测试也将始终在 &lt;code&gt;CI&lt;/code&gt; 中运行，因为无论Cypress在什么计算机上运行，​​所有视口都将相同。</target>
        </trans-unit>
        <trans-unit id="b4caa8e4a8e4a89d3536d09c4562d45b2a718bd1" translate="yes" xml:space="preserve">
          <source>The url to view the run in the Dashboard is now printed to output during &lt;code&gt;cypress run&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/494&quot;&gt;#494&lt;/a&gt;.</source>
          <target state="translated">现在，可以在 &lt;code&gt;cypress run&lt;/code&gt; 期间将在Dashboard中查看运行的url打印到输出。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/494&quot;&gt;＃494&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b2b781df5aa0f1e73ea6e6bedbdf69961275a4e1" translate="yes" xml:space="preserve">
          <source>The user will receive an invitation email with a link to accept the invitation.</source>
          <target state="translated">用户将收到一封带有接受邀请链接的邀请邮件。</target>
        </trans-unit>
        <trans-unit id="affe373c25c897b5146614a48726413036bbe8bd" translate="yes" xml:space="preserve">
          <source>The value of the configuration to set.</source>
          <target state="translated">要设置的配置值。</target>
        </trans-unit>
        <trans-unit id="aee0eeb0ca06180df3004e90447f374c0f22b786" translate="yes" xml:space="preserve">
          <source>The value of the cookie to set.</source>
          <target state="translated">要设置的cookie的值。</target>
        </trans-unit>
        <trans-unit id="96934814cb0c76cf32368945ad1a8f1bf08f17e7" translate="yes" xml:space="preserve">
          <source>The value of the environment variable to set.</source>
          <target state="translated">要设置的环境变量的值。</target>
        </trans-unit>
        <trans-unit id="7abae0cf181bef848fd2ad2b5706a9792a8085ec" translate="yes" xml:space="preserve">
          <source>The viewport dropdown helper in the Runner now displays string quoted JSON instead of an object literal. This better matches how you should write those options in &lt;code&gt;cypress.json&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1350&quot;&gt;#1350&lt;/a&gt;.</source>
          <target state="translated">Runner中的视口下拉帮助器现在显示带引号的字符串JSON而不是对象文字。这更好地匹配了您应如何在 &lt;code&gt;cypress.json&lt;/code&gt; 中编写这些选项。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1350&quot;&gt;＃1350&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0ee043998be1aa7cada273bf5c6e7d62842686f0" translate="yes" xml:space="preserve">
          <source>The viewport&amp;rsquo;s dimensions will now dynamically display accurately as they are changed in the header area.</source>
          <target state="translated">现在，随着在标题区域中更改视口的尺寸，它们将动态准确地动态显示。</target>
        </trans-unit>
        <trans-unit id="e257e09cebb37573b035d2956f13438f996c9c01" translate="yes" xml:space="preserve">
          <source>The viewport&amp;rsquo;s scale will now dynamically display accurately as it is changed.</source>
          <target state="translated">现在，视口的比例会随着更改而动态地准确显示。</target>
        </trans-unit>
        <trans-unit id="a9990208162ffe1f694e9cb04fd7f1fabeddcdd5" translate="yes" xml:space="preserve">
          <source>The visibility algorithm has been considerably improved. Should fix most if not all visibility problems. We accounted for CSS transforms, translations, and added a new branch of logic for &lt;code&gt;position: fixed&lt;/code&gt; elements which should be much more accurate. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/631&quot;&gt;#631&lt;/a&gt;.</source>
          <target state="translated">可见性算法已得到显着改进。即使不是全部，可见性问题也应该解决。我们考虑了CSS转换，翻译，并增加了 &lt;code&gt;position: fixed&lt;/code&gt; 逻辑的新分支：固定元素，它应该更加准确。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/631&quot;&gt;＃631&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a303c902d6e00e4ac0998294f99999c0f87a3cae" translate="yes" xml:space="preserve">
          <source>The warning messages when going over test recording limits have been updated to correctly display &amp;lsquo;monthly tests&amp;rsquo; and &amp;lsquo;private tests&amp;rsquo; where necessary. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4024&quot;&gt;#4024&lt;/a&gt;.</source>
          <target state="translated">超过测试记录限制时的警告消息已更新，可以在必要时正确显示&amp;ldquo;每月测试&amp;rdquo;和&amp;ldquo;私人测试&amp;rdquo;。地址&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4024&quot;&gt;＃4024&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="06c5b9fdf12dd7776c5bc6898db63e2835b8256a" translate="yes" xml:space="preserve">
          <source>The webpack preprocessor handles:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2b6005e7b660fcea7a6dad3c772b094b3c4d62c" translate="yes" xml:space="preserve">
          <source>The whole intention of Cypress (and what makes it very different from other testing tools) is to create consistent, non-flaky tests that perform identically from one run to the next. Making this happen isn&amp;rsquo;t free - there are some trade-offs we make that may initially seem unfamiliar to developers accustomed to working with Promises.</source>
          <target state="translated">赛普拉斯的整个目的（以及与其他测试工具的不同之处）是创建一致的，非松散的测试，这些测试从一次运行到下一次运行完全相同。实现这一目标并非免费-我们需要进行一些折衷，而这些折衷对于习惯于与Promises合作的开发人员来说似乎并不熟悉。</target>
        </trans-unit>
        <trans-unit id="cfc1dbc3bb5ced51aab772a3bb44a84bc81f7d0f" translate="yes" xml:space="preserve">
          <source>The width and height of the image in pixels (example: &lt;code&gt;{ width: 100, height: 50 }&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ab08ea645e2bc37eccbd5f8e042d55feaec14d7" translate="yes" xml:space="preserve">
          <source>Then add a separate &lt;code&gt;reporter-config.json&lt;/code&gt; file that enables &lt;code&gt;spec&lt;/code&gt; and &lt;code&gt;junit&lt;/code&gt; reporters and directs the &lt;code&gt;junit&lt;/code&gt; reporter to save a separate XML files.</source>
          <target state="translated">然后添加一个单独 &lt;code&gt;reporter-config.json&lt;/code&gt; 文件，该文件启用 &lt;code&gt;spec&lt;/code&gt; 和 &lt;code&gt;junit&lt;/code&gt; 报告器，并指示 &lt;code&gt;junit&lt;/code&gt; 报告器保存一个单独的XML文件。</target>
        </trans-unit>
        <trans-unit id="cb0a062de3d1ce91993195752db0dd65088d0498" translate="yes" xml:space="preserve">
          <source>Then add the code below to your &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;&lt;code&gt;supportFile&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;&lt;code&gt;pluginsFile&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">然后将以下代码添加到您的&lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt; &lt;code&gt;supportFile&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt; &lt;code&gt;pluginsFile&lt;/code&gt; 中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9c13c428cd2b73a1a953b21ccf2210567f582d9a" translate="yes" xml:space="preserve">
          <source>Then the URL should include &lt;code&gt;/commands/actions&lt;/code&gt;</source>
          <target state="translated">然后，网址应包含 &lt;code&gt;/commands/actions&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dc0c66b1cd8a60e04a32da100b4c70789c97790f" translate="yes" xml:space="preserve">
          <source>Then you can add the &lt;code&gt;dataCy&lt;/code&gt; command to the global Cypress Chainable interface (so called because commands are chained together) by creating a new TypeScript definitions file beside your &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;&lt;code&gt;supportFile&lt;/code&gt;&lt;/a&gt;, in this case at &lt;code&gt;cypress/support/index.d.ts&lt;/code&gt;.</source>
          <target state="translated">然后，您可以添加 &lt;code&gt;dataCy&lt;/code&gt; 通过创建你的旁边有一个新的打字稿定义文件命令全局赛普拉斯可链接的接口（所谓的，因为命令链接在一起）&lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt; &lt;code&gt;supportFile&lt;/code&gt; &lt;/a&gt;的，在这种情况下 &lt;code&gt;cypress/support/index.d.ts&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ef83fb30a1896682f7e2738066df4c2466a7c41c" translate="yes" xml:space="preserve">
          <source>There are 5 different ways to set environment variables. Each has a slightly different use case.</source>
          <target state="translated">有5种不同的方法来设置环境变量。每种方法都有稍微不同的使用案例。</target>
        </trans-unit>
        <trans-unit id="68f6fd791a58783dfd93f03e91caaafe61553448" translate="yes" xml:space="preserve">
          <source>There are &lt;em&gt;likely&lt;/em&gt; better ways to do this, but this isn&amp;rsquo;t well documented at the moment. Every application is different and there is no one-size-fits-all solution. For the moment, if you&amp;rsquo;re using session-based cookies, this method will work.</source>
          <target state="translated">有&lt;em&gt;可能&lt;/em&gt;更好的方法来做到这一点，但是这并不是很好的时刻记录。每个应用程序都是不同的，并且没有一种万能的解决方案。目前，如果您使用的是基于会话的Cookie，则此方法有效。</target>
        </trans-unit>
        <trans-unit id="aa0ce497980c81746403a7cfdc4840a87b9f1596" translate="yes" xml:space="preserve">
          <source>There are &lt;em&gt;very&lt;/em&gt; specific reasons these limitations are built into the Cypress API.</source>
          <target state="translated">有&lt;em&gt;很&lt;/em&gt;这些限制都内置在赛普拉斯API具体原因。</target>
        </trans-unit>
        <trans-unit id="e6f2a24a7884566fc57012f8f4ee95663731f417" translate="yes" xml:space="preserve">
          <source>There are a few simple workarounds to these common situations:</source>
          <target state="translated">对于这些常见的情况,有一些简单的变通方法。</target>
        </trans-unit>
        <trans-unit id="180b50ce51e5cbede0052b127d76e4d9b09f4c59" translate="yes" xml:space="preserve">
          <source>There are a myriad of other events Cypress fires to communicate with the Node server process, automation servers, mocha, the runner, and the reporter. They are strictly internal to the way Cypress works and not useful for users.</source>
          <target state="translated">有无数的其他事件Cypress发射与Node服务器进程,自动化服务器,摩卡,运行者和记者通信。它们是严格意义上的Cypress内部工作方式,对用户没有用处。</target>
        </trans-unit>
        <trans-unit id="da6d06463b0ec87461115a001155bf1163762085" translate="yes" xml:space="preserve">
          <source>There are actually dozens of methods attached to &lt;code&gt;Cypress.dom&lt;/code&gt; that are not documented below. These methods are used internally by Cypress in nearly every single built in command.</source>
          <target state="translated">实际上， &lt;code&gt;Cypress.dom&lt;/code&gt; 附带有数十种方法，以下没有进行记录。赛普拉斯内部几乎每一个内置命令都使用这些方法。</target>
        </trans-unit>
        <trans-unit id="38d7f3b5c5785f106f663b2188928e8a30cc29d6" translate="yes" xml:space="preserve">
          <source>There are hundreds of custom error messages describing the exact reason Cypress failed your test.</source>
          <target state="translated">有数百条自定义错误信息,描述了Cypress未能通过测试的确切原因。</target>
        </trans-unit>
        <trans-unit id="c3d7a9f669cdb60f8f1826fa41f750e4c74ec667" translate="yes" xml:space="preserve">
          <source>There are many simple and easy ways to reference, compare and utilize the objects that Cypress commands yield you.</source>
          <target state="translated">有许多简单易行的方法来参考、比较和利用Cypress命令所产生的对象。</target>
        </trans-unit>
        <trans-unit id="707a2b6aaec820af9fb8f45959f8f689e6ebd86f" translate="yes" xml:space="preserve">
          <source>There are newly added examples in the TypeScript definitions for &lt;a href=&quot;../../api/cypress-api/custom-commands&quot;&gt;custom commands&lt;/a&gt;, &lt;a href=&quot;../../api/commands/location&quot;&gt;&lt;code&gt;cy.location()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt;. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3684&quot;&gt;#3684&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4715&quot;&gt;#4715&lt;/a&gt;.</source>
          <target state="translated">有在打字稿定义新添加的例子为&lt;a href=&quot;../../api/cypress-api/custom-commands&quot;&gt;自定义命令&lt;/a&gt;，&lt;a href=&quot;../../api/commands/location&quot;&gt; &lt;code&gt;cy.location()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../api/commands/should&quot;&gt; &lt;code&gt;.should()&lt;/code&gt; &lt;/a&gt;。地址&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3684&quot;&gt;＃3684&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4715&quot;&gt;＃4715&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c43d9359f00be63d9d4867a4e526adb66611e41b" translate="yes" xml:space="preserve">
          <source>There are no more global, in-app updates. Versioning should be primarily &lt;a href=&quot;../getting-started/installing-cypress&quot;&gt;controlled via &lt;code&gt;npm&lt;/code&gt;&lt;/a&gt; like every other package / dependency in your project. For users not using &lt;code&gt;npm&lt;/code&gt; you can manually download new versions of Cypress when they&amp;rsquo;re released.</source>
          <target state="translated">没有更多的全局应用程序内更新。应该像项目中的其他所有软件包/依赖项一样，主要&lt;a href=&quot;../getting-started/installing-cypress&quot;&gt;通过 &lt;code&gt;npm&lt;/code&gt; &lt;/a&gt;控制版本控制。对于不使用 &lt;code&gt;npm&lt;/code&gt; 的用户，您可以在发行新版本的Cypress时手动下载它们。</target>
        </trans-unit>
        <trans-unit id="ccaf6816c2014dcd825d2bb1d4794f2d218669c9" translate="yes" xml:space="preserve">
          <source>There are no servers, drivers, or any other dependencies to install or configure. You can write your first passing test in 60 seconds.</source>
          <target state="translated">无需安装或配置服务器、驱动程序或任何其他依赖性。你可以在60秒内写出第一个合格的测试。</target>
        </trans-unit>
        <trans-unit id="4acfc9514edcd410f9982908c58e1120cfc1558d" translate="yes" xml:space="preserve">
          <source>There are now &lt;a href=&quot;../getting-started/installing-cypress&quot;&gt;Getting Started&lt;/a&gt; docs including &lt;a href=&quot;configuration&quot;&gt;configuration&lt;/a&gt; for &lt;code&gt;cypress.json&lt;/code&gt;</source>
          <target state="translated">现在有&lt;a href=&quot;../getting-started/installing-cypress&quot;&gt;入门&lt;/a&gt;文档，包括&lt;a href=&quot;configuration&quot;&gt;配置&lt;/a&gt;为 &lt;code&gt;cypress.json&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ca3f36279a85a1026ce410f83f3d9781f88382c3" translate="yes" xml:space="preserve">
          <source>There are now a series of checks that are run during download of Cypress to verify that the zip file downloaded is the correct file. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/812&quot;&gt;#812&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3515&quot;&gt;#3515&lt;/a&gt;.</source>
          <target state="translated">现在，在赛普拉斯下载期间进行了一系列检查，以验证下载的zip文件是否正确。地址&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/812&quot;&gt;＃812&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3515&quot;&gt;＃3515&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="163ab5841ac9fe32c8ecb747fcbbfc2839409549" translate="yes" xml:space="preserve">
          <source>There are now several new CLI commands for interacting with the binary cache: &lt;a href=&quot;../guides/command-line#cypress-cache-path&quot;&gt;&lt;code&gt;cypress cache path&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../guides/command-line#cypress-cache-list&quot;&gt;&lt;code&gt;cypress cache list&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../guides/command-line#cypress-cache-clear&quot;&gt;&lt;code&gt;cypress cache clear&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1856&quot;&gt;#1856&lt;/a&gt;.</source>
          <target state="translated">现在，有几个新的CLI命令可用于与二进制缓存交互：&lt;a href=&quot;../guides/command-line#cypress-cache-path&quot;&gt; &lt;code&gt;cypress cache path&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../guides/command-line#cypress-cache-list&quot;&gt; &lt;code&gt;cypress cache list&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../guides/command-line#cypress-cache-clear&quot;&gt; &lt;code&gt;cypress cache clear&lt;/code&gt; &lt;/a&gt;。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1856&quot;&gt;＃1856&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e3378d57e3ba4d5c11a3fd553547fc1b207c24cb" translate="yes" xml:space="preserve">
          <source>There are other excellent tools that are optimized for doing each item listed above.</source>
          <target state="translated">还有其他优秀的工具,这些工具都是为完成上面列出的每个项目而优化的。</target>
        </trans-unit>
        <trans-unit id="5e53bc7e519f00c6fbc86ff1a8b6d370297971c0" translate="yes" xml:space="preserve">
          <source>There are several levels of &lt;code&gt;DEBUG&lt;/code&gt; messages</source>
          <target state="translated">&lt;code&gt;DEBUG&lt;/code&gt; 消息有多个级别</target>
        </trans-unit>
        <trans-unit id="fded19319531f91063d0c2fc25a2c7285a3065a7" translate="yes" xml:space="preserve">
          <source>There are several new &lt;a href=&quot;configuration&quot;&gt;configuration&lt;/a&gt; properties for video recording: &lt;code&gt;videoRecording&lt;/code&gt;, &lt;code&gt;videoCompression&lt;/code&gt;, and &lt;code&gt;videosFolder&lt;/code&gt;.</source>
          <target state="translated">视频录制有几个新的&lt;a href=&quot;configuration&quot;&gt;配置&lt;/a&gt;属性： &lt;code&gt;videoRecording&lt;/code&gt; ， &lt;code&gt;videoCompression&lt;/code&gt; 和 &lt;code&gt;videosFolder&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1a9864720db7294c00877158df389b1472455db7" translate="yes" xml:space="preserve">
          <source>There are several published, open source plugins, listed in the &lt;a href=&quot;../../plugins/index#visual-testing&quot;&gt;Visual Testing plugins&lt;/a&gt; section, and several commercial companies have developed visual testing solutions on top of the Cypress Test Runner listed below.</source>
          <target state="translated">在&amp;ldquo; &lt;a href=&quot;../../plugins/index#visual-testing&quot;&gt;视觉测试插件&amp;rdquo;&lt;/a&gt;部分列出了一些已发布的开源插件，并且一些商业公司已经在下面列出的赛普拉斯测试运行器的顶部开发了视觉测试解决方案。</target>
        </trans-unit>
        <trans-unit id="fa0c09a5d907fc5a81651b57997ccf823a357828" translate="yes" xml:space="preserve">
          <source>There are situations when it is useful to control your application&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; and &lt;code&gt;time&lt;/code&gt; in order to override its behavior or avoid slow tests.</source>
          <target state="translated">在某些情况下，控制应用程序的 &lt;code&gt;date&lt;/code&gt; 和 &lt;code&gt;time&lt;/code&gt; 以覆盖其行为或避免进行缓慢的测试很有用。</target>
        </trans-unit>
        <trans-unit id="1ec510a7115384622bdf806fc23045336183d411" translate="yes" xml:space="preserve">
          <source>There are times when you will encounter errors or unexpected behavior with Cypress itself. In this situation, we recommend checking these support resources &lt;strong&gt;first&lt;/strong&gt;.</source>
          <target state="translated">有时您会遇到赛普拉斯本身的错误或意外行为。在这种情况下，我们建议您查看这些支持资源&lt;strong&gt;第一&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="99819c525097a56827a5efaee0977c9b214c5fb3" translate="yes" xml:space="preserve">
          <source>There are two types of methods you can call in your Cypress tests: &lt;strong&gt;commands&lt;/strong&gt; and &lt;strong&gt;assertions&lt;/strong&gt;. For example, there are 6 commands and 2 assertions in the test below.</source>
          <target state="translated">您可以在赛普拉斯测试中调用两种方法：&lt;strong&gt;命令&lt;/strong&gt;和&lt;strong&gt;断言&lt;/strong&gt;。例如，下面的测试中有6个命令和2个断言。</target>
        </trans-unit>
        <trans-unit id="edd0c8f24df34d4f4efd4882e258c13a5f0d27da" translate="yes" xml:space="preserve">
          <source>There are two ways to write assertions in Cypress:</source>
          <target state="translated">在Cypress中写断言有两种方法。</target>
        </trans-unit>
        <trans-unit id="2f90a254bcdbcdf0217f289fa6fe55e32c8bd325" translate="yes" xml:space="preserve">
          <source>There have been situations where Cypress does not correctly allow you to interact with an element that should be interactable. If that&amp;rsquo;s the case, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;Open an issue&lt;/a&gt;.</source>
          <target state="translated">在某些情况下，赛普拉斯（Cypress）无法正确允许您与应该可交互的元素进行交互。如果是这样，请&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;打开一个问题&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="846f089ba2dceeca206f450533e974240eb00438" translate="yes" xml:space="preserve">
          <source>There is a better / more helpful experience around passing unknown options to the CLI. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/837&quot;&gt;#837&lt;/a&gt;.</source>
          <target state="translated">将未知选项传递给CLI会有更好/更有用的体验。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/837&quot;&gt;＃837&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7cb0a4f82ff308a4a655e5df1ab9a5514c43c847" translate="yes" xml:space="preserve">
          <source>There is a new &amp;ldquo;Download Chromium&amp;rdquo; menu item in the &amp;ldquo;Help&amp;rdquo; menu of the Test Runner links to Cypress&amp;rsquo;s &lt;a href=&quot;https://on.cypress.io/chromium-downloads&quot;&gt;Chromium Download Tool&lt;/a&gt;. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3977&quot;&gt;#3977&lt;/a&gt;</source>
          <target state="translated">Test Runner的&amp;ldquo;帮助&amp;rdquo;菜单中有一个新的&amp;ldquo; Download Chromium&amp;rdquo;菜单项，它链接到赛普拉斯的&lt;a href=&quot;https://on.cypress.io/chromium-downloads&quot;&gt;Chromium下载工具&lt;/a&gt;。地址&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3977&quot;&gt;＃3977&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a8a888938384b901f545ade5d304637c1fbd4789" translate="yes" xml:space="preserve">
          <source>There is a new &lt;a href=&quot;../../api/commands/exec&quot;&gt;&lt;code&gt;cy.exec()&lt;/code&gt;&lt;/a&gt; command that can execute any arbitrary system command. Additionally there is a new &lt;a href=&quot;configuration#Timeouts&quot;&gt;&lt;code&gt;execTimeout&lt;/code&gt;&lt;/a&gt; configuration option which is set to &lt;code&gt;60s&lt;/code&gt; by default. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/126&quot;&gt;#126&lt;/a&gt;.</source>
          <target state="translated">有一个新的&lt;a href=&quot;../../api/commands/exec&quot;&gt; &lt;code&gt;cy.exec()&lt;/code&gt; &lt;/a&gt;命令，可以执行任何任意系统命令。此外，还有一个新的&lt;a href=&quot;configuration#Timeouts&quot;&gt; &lt;code&gt;execTimeout&lt;/code&gt; &lt;/a&gt;配置选项，默认情况下设置为 &lt;code&gt;60s&lt;/code&gt; 。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/126&quot;&gt;＃126&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8b695443b7ff680b400a74fdbb62042e3ed95a68" translate="yes" xml:space="preserve">
          <source>There is a new &lt;a href=&quot;../../api/commands/task&quot;&gt;&lt;code&gt;cy.task()&lt;/code&gt;&lt;/a&gt; command for executing any arbitrary &lt;code&gt;node&lt;/code&gt; code.</source>
          <target state="translated">有一个新的&lt;a href=&quot;../../api/commands/task&quot;&gt; &lt;code&gt;cy.task()&lt;/code&gt; &lt;/a&gt;命令，用于执行任何任意 &lt;code&gt;node&lt;/code&gt; 代码。</target>
        </trans-unit>
        <trans-unit id="acb4d381b0d91e1db21a6bee9a8bc26677281fa6" translate="yes" xml:space="preserve">
          <source>There is a new &lt;a href=&quot;../../api/commands/task&quot;&gt;&lt;code&gt;cy.task()&lt;/code&gt;&lt;/a&gt; command that enables you to go outside the browser to perform tasks directly in &lt;code&gt;node&lt;/code&gt;. This will make it easy to setup, scaffold, seed, talk to your database, or anything else useful on a back end.</source>
          <target state="translated">有一个新的&lt;a href=&quot;../../api/commands/task&quot;&gt; &lt;code&gt;cy.task()&lt;/code&gt; &lt;/a&gt;命令，它使您可以浏览器之外直接在 &lt;code&gt;node&lt;/code&gt; 中执行任务。这将使设置，构架，播种，与您的数据库对话或在后端上进行的其他有用操作变得容易。</target>
        </trans-unit>
        <trans-unit id="080c45c55e1a8e8bc7f30cae801b7b6ff44731de" translate="yes" xml:space="preserve">
          <source>There is a new &lt;a href=&quot;../../api/cypress-api/config&quot;&gt;&lt;code&gt;Cypress.config&lt;/code&gt;&lt;/a&gt; interface - akin to &lt;a href=&quot;../../api/cypress-api/env&quot;&gt;&lt;code&gt;Cypress.env&lt;/code&gt;&lt;/a&gt; which provides access to configuration values.</source>
          <target state="translated">有一个类似于&lt;a href=&quot;../../api/cypress-api/env&quot;&gt; &lt;code&gt;Cypress.env&lt;/code&gt; &lt;/a&gt;的新&lt;a href=&quot;../../api/cypress-api/config&quot;&gt; &lt;code&gt;Cypress.config&lt;/code&gt; &lt;/a&gt;接口，可用于访问配置值。</target>
        </trans-unit>
        <trans-unit id="29a89616a7b0bd75512c95d76eb76237279081ff" translate="yes" xml:space="preserve">
          <source>There is a new &lt;a href=&quot;../../api/cypress-api/cookies&quot;&gt;&lt;code&gt;Cypress.Cookies&lt;/code&gt;&lt;/a&gt; interface which enables you to &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt;, and even &lt;code&gt;preserve&lt;/code&gt; cookies throughout your test. Useful to preserve cookie-based sessions between your tests. &lt;a href=&quot;../../api/cypress-api/cookies&quot;&gt;Documentation is written here&lt;/a&gt;.</source>
          <target state="translated">有一个新的&lt;a href=&quot;../../api/cypress-api/cookies&quot;&gt; &lt;code&gt;Cypress.Cookies&lt;/code&gt; &lt;/a&gt;界面，使您可以在整个测试过程中 &lt;code&gt;get&lt;/code&gt; ， &lt;code&gt;set&lt;/code&gt; 甚至 &lt;code&gt;preserve&lt;/code&gt; cookie。有助于在测试之间保留基于cookie的会话。&lt;a href=&quot;../../api/cypress-api/cookies&quot;&gt;文档在此处编写&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4bc11c9a3ea0446140035e06a82277064c463a3c" translate="yes" xml:space="preserve">
          <source>There is a new &lt;a href=&quot;../../api/cypress-api/screenshot-api&quot;&gt;Screenshot API&lt;/a&gt; and new &lt;a href=&quot;../../api/commands/screenshot&quot;&gt;&lt;code&gt;cy.screenshot()&lt;/code&gt;&lt;/a&gt; options that allow you set defaults for how screenshots are captured, whether to scale your app, disable timers and animations, or which elements to black out in the screenshot. You can also set defaults for whether to automatically take screenshots when there are test failures or whether to wait for the Command Log to synchronize before taking the screenshot. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1424&quot;&gt;#1424&lt;/a&gt;.</source>
          <target state="translated">有一个新的&lt;a href=&quot;../../api/cypress-api/screenshot-api&quot;&gt;Screenshot API&lt;/a&gt;和新的&lt;a href=&quot;../../api/commands/screenshot&quot;&gt; &lt;code&gt;cy.screenshot()&lt;/code&gt; &lt;/a&gt;选项，它们允许您为捕获屏幕快照，是否缩放应用程序，禁用计时器和动画或在屏幕快照中涂黑哪些元素设置默认值。您还可以设置默认值，以决定是否在出现测试失败时自动获取屏幕截图，还是在获取屏幕截图之前是否等待命令日志同步。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1424&quot;&gt;＃1424&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="79bb1d052f1ca789b903deb46d7befdbcd7171dd" translate="yes" xml:space="preserve">
          <source>There is a new &lt;a href=&quot;../getting-started/installing-cypress#Mirroring&quot;&gt;&lt;code&gt;CYPRESS_DOWNLOAD_MIRROR&lt;/code&gt;&lt;/a&gt; environment variable for installing Cypress at a mirror url. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/2609&quot;&gt;#2609&lt;/a&gt;.</source>
          <target state="translated">有一个新的&lt;a href=&quot;../getting-started/installing-cypress#Mirroring&quot;&gt; &lt;code&gt;CYPRESS_DOWNLOAD_MIRROR&lt;/code&gt; &lt;/a&gt;环境变量，用于在镜像URL上安装Cypress。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/2609&quot;&gt;＃2609&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="83beffa5e35c0631c3a7b574f10ad9d102e5087a" translate="yes" xml:space="preserve">
          <source>There is a new &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;&amp;ndash;browser&lt;/code&gt; option&lt;/a&gt; that lets you change the browser that runs from the command line. This works the same way as changing the browser in the GUI, with the exception that any browser other than the default &lt;code&gt;electron&lt;/code&gt; browser will &lt;strong&gt;not&lt;/strong&gt; record a video. This is solvable but requires more work.</source>
          <target state="translated">有一个新的&lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt; &lt;code&gt;&amp;ndash;browser&lt;/code&gt; 选项&lt;/a&gt;，可让您更改从命令行运行的浏览器。这与在GUI中更改浏览器的方式相同，除了默认 &lt;code&gt;electron&lt;/code&gt; 浏览器以外的任何浏览器均&lt;strong&gt;不会&lt;/strong&gt;录制视频。这是可以解决的，但是需要更多的工作。</target>
        </trans-unit>
        <trans-unit id="04b2955c1440e10490167f19b06f746205a4bc88" translate="yes" xml:space="preserve">
          <source>There is a new &lt;a href=&quot;configuration&quot;&gt;configuration&lt;/a&gt; property called: &lt;del&gt;&lt;code&gt;trashAssetsBeforeHeadlessRuns&lt;/code&gt;&lt;/del&gt; (This was changed to &lt;code&gt;trashAssetsBeforeRuns&lt;/code&gt; in &lt;a href=&quot;#3.0.0&quot;&gt;&lt;code&gt;3.0.0&lt;/code&gt;&lt;/a&gt;) that is set to &lt;code&gt;true&lt;/code&gt; by default and will automatically clear out screenshots + videos folders before each run. These files are not deleted, they are just moved to your trash.</source>
          <target state="translated">有一个新的&lt;a href=&quot;configuration&quot;&gt;配置&lt;/a&gt;属性，称为：&lt;del&gt; &lt;code&gt;trashAssetsBeforeHeadlessRuns&lt;/code&gt; &lt;/del&gt;（在&lt;a href=&quot;#3.0.0&quot;&gt; &lt;code&gt;3.0.0&lt;/code&gt; 中&lt;/a&gt; &lt;code&gt;trashAssetsBeforeRuns&lt;/code&gt; 其更改为rashAssetsBeforeRuns），默认情况下将其设置为 &lt;code&gt;true&lt;/code&gt; ，并将在每次运行前自动清除屏幕截图+视频文件夹。这些文件不会被删除，它们只会被移到您的垃圾箱中。</target>
        </trans-unit>
        <trans-unit id="d06af4861e389b3f4b76596a41ef326764789959" translate="yes" xml:space="preserve">
          <source>There is a new &lt;a href=&quot;configuration#Browser&quot;&gt;&lt;code&gt;blacklistHosts&lt;/code&gt;&lt;/a&gt; option in &lt;code&gt;cypress.json&lt;/code&gt; that allows you to block requests made to those hosts. Blocked requests will respond with a &lt;code&gt;503&lt;/code&gt; status code. This is useful for blocking 3rd party domains like Google Analytics. We have added a &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Stubbing-and-spying&quot;&gt;new &amp;lsquo;Stubbing Google Analytics&amp;rsquo; recipe&lt;/a&gt; demonstrating this. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/442&quot;&gt;#442&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cypress.json&lt;/code&gt; 中有一个新的&lt;a href=&quot;configuration#Browser&quot;&gt; &lt;code&gt;blacklistHosts&lt;/code&gt; &lt;/a&gt;选项，它允许您阻止对那些主机的请求。被阻止的请求将以 &lt;code&gt;503&lt;/code&gt; 状态代码响应。这对于阻止第三方域（例如Google Analytics（分析））很有用。我们添加了一个&lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Stubbing-and-spying&quot;&gt;新的&amp;ldquo; Stubbing Google Analytics（分析）&amp;rdquo;食谱来&lt;/a&gt;证明这一点。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/442&quot;&gt;＃442&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="71b68cacc333c70b80b6a6041d7af0737e4db7a7" translate="yes" xml:space="preserve">
          <source>There is a new &lt;a href=&quot;configuration#Browser&quot;&gt;&lt;code&gt;userAgent&lt;/code&gt;&lt;/a&gt; option in &lt;code&gt;cypress.json&lt;/code&gt;. This enables you to change the &lt;code&gt;userAgent&lt;/code&gt; of the browser for the entire browsing session. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/364&quot;&gt;#364&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cypress.json&lt;/code&gt; 中有一个新的&lt;a href=&quot;configuration#Browser&quot;&gt; &lt;code&gt;userAgent&lt;/code&gt; &lt;/a&gt;选项。这使您可以为整个浏览会话更改浏览器的 &lt;code&gt;userAgent&lt;/code&gt; 。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/364&quot;&gt;＃364&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ae9764d255bdd93bf742848a0bb91319330c74db" translate="yes" xml:space="preserve">
          <source>There is a new &lt;a href=&quot;configuration#Global&quot;&gt;&lt;code&gt;numTestsKeptInMemory&lt;/code&gt;&lt;/a&gt; configuration option that controls how many test&amp;rsquo;s snapshots and command data is kept in memory while tests are running. Reducing this number will reduce the memory used in the browser while tests are running. Whatever this number is - is how many tests you can walk back in time when inspecting their snapshots and return values. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/142&quot;&gt;#142&lt;/a&gt;.</source>
          <target state="translated">有一个新的&lt;a href=&quot;configuration#Global&quot;&gt; &lt;code&gt;numTestsKeptInMemory&lt;/code&gt; &lt;/a&gt;配置选项，用于控制在运行测试时在内存中保留多少个测试的快照和命令数据。减少此数字将减少测试运行期间浏览器中使用的内存。无论这个数字是多少，您可以在检查快照和返回值时及时返回多少测试。地址&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/142&quot;&gt;＃142&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="02ec5dfd34f0346bdb7f35c6274b1cdf4305181b" translate="yes" xml:space="preserve">
          <source>There is a new &lt;a href=&quot;https://github.com/cypress-io/cypress-example-recipes&quot;&gt;recipe showcasing these new features&lt;/a&gt;.</source>
          <target state="translated">有一个新&lt;a href=&quot;https://github.com/cypress-io/cypress-example-recipes&quot;&gt;食谱展示了这些新功能&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6ad10514dd752d91913d4759b5ee5e3aa5c451ca" translate="yes" xml:space="preserve">
          <source>There is a new &lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;Dashboard&lt;/a&gt; service that displays your recorded runs.</source>
          <target state="translated">有一个新的&lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;仪表板&lt;/a&gt;服务可显示您记录的跑步。</target>
        </trans-unit>
        <trans-unit id="77e7f0018a19b9c64db1fa23dd2cf5d0368ab527" translate="yes" xml:space="preserve">
          <source>There is a new &lt;code&gt;--global&lt;/code&gt; option useful with &lt;a href=&quot;../guides/command-line#cypress-open&quot;&gt;&lt;code&gt;cypress open&lt;/code&gt;&lt;/a&gt; to force Cypress to open in global mode. This is helpful when you have multiple nested Cypress projects but only want to install Cypress once in the root project. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/889&quot;&gt;#889&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../guides/command-line#cypress-open&quot;&gt; &lt;code&gt;cypress open&lt;/code&gt; &lt;/a&gt;有一个新的 &lt;code&gt;--global&lt;/code&gt; 选项可用于强制赛普拉斯以全局模式打开。当您有多个嵌套的赛普拉斯项目但只想在根项目中安装一次赛普拉斯时，这很有用。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/889&quot;&gt;＃889&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="972bd5bca2f0bc5c2b24402e52b432f624b1be26" translate="yes" xml:space="preserve">
          <source>There is a new command &lt;a href=&quot;../../api/commands/readfile&quot;&gt;&lt;code&gt;cy.readFile()&lt;/code&gt;&lt;/a&gt; that reads files on your file system and changes the subject to the contents. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/179&quot;&gt;#179&lt;/a&gt;.</source>
          <target state="translated">有一个新命令&lt;a href=&quot;../../api/commands/readfile&quot;&gt; &lt;code&gt;cy.readFile()&lt;/code&gt; &lt;/a&gt;可以读取文件系统上的文件，并将主题更改为内容。地址&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/179&quot;&gt;＃179&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f68ca9f2a891dbd0987580099aec34c7ea3695f8" translate="yes" xml:space="preserve">
          <source>There is a new command &lt;a href=&quot;../../api/commands/writefile&quot;&gt;&lt;code&gt;cy.writeFile()&lt;/code&gt;&lt;/a&gt; that creates and/or writes contents to files on your file system. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/179&quot;&gt;#179&lt;/a&gt;.</source>
          <target state="translated">有一个新命令&lt;a href=&quot;../../api/commands/writefile&quot;&gt; &lt;code&gt;cy.writeFile()&lt;/code&gt; &lt;/a&gt;可以创建内容和/或将内容写入文件系统上的文件。地址&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/179&quot;&gt;＃179&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f04cef119eadde70093d340e263053fbf3b48903" translate="yes" xml:space="preserve">
          <source>There is a new docs section related to the &lt;a href=&quot;../dashboard/introduction&quot;&gt;Dashboard&lt;/a&gt; and the new features.</source>
          <target state="translated">有一个与&amp;ldquo; &lt;a href=&quot;../dashboard/introduction&quot;&gt;仪表板&amp;rdquo;&lt;/a&gt;和新功能相关的新文档部分。</target>
        </trans-unit>
        <trans-unit id="7cbc4a231272b5474fcb2e0ba0ed37f41073f64e" translate="yes" xml:space="preserve">
          <source>There is a performance tradeoff here: &lt;strong&gt;tests that have longer timeout periods take longer to fail&lt;/strong&gt;. Commands always proceed as soon as their expected criteria is met, so working tests will be performed as fast as your application allows. A test that fails due to timeout will consume the entire timeout period, by design. This means that while you &lt;em&gt;may&lt;/em&gt; want to increase your timeout period to suit specific parts of your app, you &lt;em&gt;don&amp;rsquo;t&lt;/em&gt; want to make it &amp;ldquo;extra long, just in case&amp;rdquo;.</source>
          <target state="translated">这里需要进行性能折衷：&lt;strong&gt;超时时间较长的测试需要更长的时间才能失败&lt;/strong&gt;。命令总是在满足其预期标准后立即执行，因此将在您的应用程序允许的速度下尽快执行工作测试。由于超时而失败的测试将消耗整个超时时间（根据设计）。这意味着尽管您&lt;em&gt;可能&lt;/em&gt;希望延长超时时间以适合应用程序的特定部分，但您&lt;em&gt;并不&lt;/em&gt;想使其&amp;ldquo;过长，以防万一&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="dd3a8251112c22a0bf1975273531d4e8b487f70c" translate="yes" xml:space="preserve">
          <source>There is a rich UI which visually shows you the command execution, assertions, network requests, spies, stubs, page loads, or URL changes.</source>
          <target state="translated">有一个丰富的用户界面,可以直观地显示命令执行、断言、网络请求、间谍、存根、页面加载或URL更改。</target>
        </trans-unit>
        <trans-unit id="a27c68a7274ff829a1c32f0ddaa955ab21da8cd4" translate="yes" xml:space="preserve">
          <source>There is also a new menu panel. Some commands (like action commands) will take multiple snapshots: &lt;strong&gt;before&lt;/strong&gt; and &lt;strong&gt;after&lt;/strong&gt;. We can now cycle through these.</source>
          <target state="translated">还有一个新的菜单面板。某些命令（例如动作命令）将拍摄多个快照：&lt;strong&gt;之前&lt;/strong&gt;和&lt;strong&gt;之后&lt;/strong&gt;。现在，我们可以循环这些。</target>
        </trans-unit>
        <trans-unit id="eaa53acc79e5c716d6dacd70ed6a73be45bd0a23" translate="yes" xml:space="preserve">
          <source>There is another way to fix our flaky test. Whenever you write a longer test, we recommend alternating commands with assertions. In this case, I will add an assertion after the &lt;code&gt;cy.get()&lt;/code&gt; command, but before the &lt;code&gt;.find()&lt;/code&gt; command.</source>
          <target state="translated">还有另一种方法可以修复我们的片状测试。每当您编写更长的测试时，我们建议将命令与断言交替使用。在这种情况下，我将在 &lt;code&gt;cy.get()&lt;/code&gt; 命令之后但在 &lt;code&gt;.find()&lt;/code&gt; 命令之前添加一个断言。</target>
        </trans-unit>
        <trans-unit id="a64be5e933222b58a58d0dc12fc430763fee796f" translate="yes" xml:space="preserve">
          <source>There is essentially never any reason to visit a site that you don&amp;rsquo;t control in your tests. It&amp;rsquo;s prone to error and slow.</source>
          <target state="translated">基本上没有任何理由可以访问您在测试中无法控制的网站。容易出错且运行缓慢。</target>
        </trans-unit>
        <trans-unit id="0f57c2f2f40538e31abaeb9ca943454fea6a83b3" translate="yes" xml:space="preserve">
          <source>There is no &lt;code&gt;cy.tab()&lt;/code&gt; command.</source>
          <target state="translated">没有 &lt;code&gt;cy.tab()&lt;/code&gt; 命令。</target>
        </trans-unit>
        <trans-unit id="63c8a89efb3a159630b4a57805e55542e49129c6" translate="yes" xml:space="preserve">
          <source>There is no cross browser support other than Chrome and Electron.</source>
          <target state="translated">除了Chrome和Electron之外,没有其他跨浏览器支持。</target>
        </trans-unit>
        <trans-unit id="f2888ef848492fdb6210260238b98e33f56f1761" translate="yes" xml:space="preserve">
          <source>There is no longer a separate &lt;code&gt;cypress install&lt;/code&gt; step, but this command still exists if you want to &lt;strong&gt;reinstall&lt;/strong&gt; the binary for whatever reason.</source>
          <target state="translated">不再有单独的 &lt;code&gt;cypress install&lt;/code&gt; 步骤，但是如果出于任何原因要&lt;strong&gt;重新安装&lt;/strong&gt;二进制文件，此命令仍然存在。</target>
        </trans-unit>
        <trans-unit id="d7ee6819fe6735c70035545a66c943933e18f0a3" translate="yes" xml:space="preserve">
          <source>There is no longer an error when scaffolding a new Cypress project. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/326&quot;&gt;#326&lt;/a&gt;.</source>
          <target state="translated">搭建新的赛普拉斯项目时不再有错误。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/326&quot;&gt;＃326&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9e5b5cac87e35310da0c85810ef9686073735b2a" translate="yes" xml:space="preserve">
          <source>There is no need to ever &lt;code&gt;return&lt;/code&gt; Cypress commands.</source>
          <target state="translated">无需 &lt;code&gt;return&lt;/code&gt; 赛普拉斯命令。</target>
        </trans-unit>
        <trans-unit id="04248a622963ddde849ee6b6b3cc76f561cc2699" translate="yes" xml:space="preserve">
          <source>There is not any native or mobile events support.</source>
          <target state="translated">没有任何原生或移动事件支持。</target>
        </trans-unit>
        <trans-unit id="56ba7b31c83ad7595d7e2a55b3d565c08e9e4369" translate="yes" xml:space="preserve">
          <source>There is now a &lt;a href=&quot;../../api/commands/log&quot;&gt;&lt;code&gt;cy.log()&lt;/code&gt;&lt;/a&gt; command for displaying an arbitrary message and args. Useful for providing context while testing and debugging long tests. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/342&quot;&gt;#342&lt;/a&gt;.</source>
          <target state="translated">现在有一个&lt;a href=&quot;../../api/commands/log&quot;&gt; &lt;code&gt;cy.log()&lt;/code&gt; &lt;/a&gt;命令，用于显示任意消息和参数。对于在测试和调试长时间测试时提供上下文很有用。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/342&quot;&gt;＃342&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1f598dc9501427974ff4c2428fff185f34c313be" translate="yes" xml:space="preserve">
          <source>There is now a &lt;a href=&quot;../tooling/plugins-guide&quot;&gt;Plugins API interface&lt;/a&gt;. Partially addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/684&quot;&gt;#684&lt;/a&gt;.</source>
          <target state="translated">现在有一个&lt;a href=&quot;../tooling/plugins-guide&quot;&gt;Plugins API接口&lt;/a&gt;。部分地址&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/684&quot;&gt;＃684&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cd8c373bd5d7046717bbf32038f260e70f1ce97d" translate="yes" xml:space="preserve">
          <source>There is now a &lt;code&gt;cy.cmd&lt;/code&gt; and &lt;code&gt;cy.command&lt;/code&gt; method which enables you to invoke commands by their string name. This is most useful when using &lt;em&gt;namespaced&lt;/em&gt; custom commands. So &lt;code&gt;Cypress.addParentCommand(&quot;dashboard.setSlider&quot;, ...)&lt;/code&gt; can be accessed by &lt;code&gt;cy.cmd(&quot;dashboard.setSlider&quot;, arg1, arg2)&lt;/code&gt;. (Docs have not been written yet).</source>
          <target state="translated">现在有一个 &lt;code&gt;cy.cmd&lt;/code&gt; 和 &lt;code&gt;cy.command&lt;/code&gt; 方法，使您能够通过其字符串名称调用命令。使用&lt;em&gt;命名空间的&lt;/em&gt;自定义命令时，此功能最为有用。因此 &lt;code&gt;Cypress.addParentCommand(&quot;dashboard.setSlider&quot;, ...)&lt;/code&gt; &lt;code&gt;cy.cmd(&quot;dashboard.setSlider&quot;, arg1, arg2)&lt;/code&gt; 可以访问Cypress.addParentCommand（&amp;ldquo; dashboard.setSlider&amp;rdquo;，...）。（文档尚未编写）。</target>
        </trans-unit>
        <trans-unit id="cf4dcd5d8ab032b57d20ae25b94743436a377785" translate="yes" xml:space="preserve">
          <source>There is now a &lt;code&gt;{ parseSpecialCharSequences: false }&lt;/code&gt; option to &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;cy.type()&lt;/code&gt;&lt;/a&gt; that disables parsing the special character sequences found between the &lt;code&gt;{}&lt;/code&gt; characters. This will now type what you&amp;rsquo;ve provided literally without any special parsing. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4287&quot;&gt;#4287&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;cy.type()&lt;/code&gt; &lt;/a&gt;现在有一个 &lt;code&gt;{ parseSpecialCharSequences: false }&lt;/code&gt; 选项，它禁止解析在 &lt;code&gt;{}&lt;/code&gt; 个字符之间找到的特殊字符序列。现在，它将直接键入您提供的内容，而无需任何特殊解析。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4287&quot;&gt;＃4287&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f940c11367f334900f9fe9e3847e283e77bc3c67" translate="yes" xml:space="preserve">
          <source>There is now a Search Bar in the Desktop GUI that enables you to filter the list of specs. Helpful for projects with a ton of spec files. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1098&quot;&gt;#1098&lt;/a&gt;.</source>
          <target state="translated">桌面GUI中现在有一个搜索栏，使您可以过滤规格列表。对于具有大量规范文件的项目很有帮助。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1098&quot;&gt;＃1098&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="da7265af3da9c2c16aa77c8b980a05010fcc3eda" translate="yes" xml:space="preserve">
          <source>There is now a default &lt;code&gt;cypress&lt;/code&gt; folder that contains your test files, a &lt;code&gt;fixtures&lt;/code&gt; folder with an example fixture, and a &lt;code&gt;support&lt;/code&gt; folder with example support files. Inside &lt;code&gt;cypress&lt;/code&gt; there is an &lt;code&gt;integration&lt;/code&gt; folder that will contain your integration tests.</source>
          <target state="translated">现在，有一个默认的 &lt;code&gt;cypress&lt;/code&gt; 文件夹，其中包含您的测试文件，一个带有示例夹具的 &lt;code&gt;fixtures&lt;/code&gt; 文件夹和一个带有示例支持文件的 &lt;code&gt;support&lt;/code&gt; 文件夹。 &lt;code&gt;cypress&lt;/code&gt; 内部有一个 &lt;code&gt;integration&lt;/code&gt; 文件夹，其中包含您的集成测试。</target>
        </trans-unit>
        <trans-unit id="8067cf3b90d7d9883abc59cd1f0a83808d2633b4" translate="yes" xml:space="preserve">
          <source>There is now a download service to access the latest version of Cypress and previous versions.</source>
          <target state="translated">现在有一个下载服务来访问最新版本的Cypress和以前的版本。</target>
        </trans-unit>
        <trans-unit id="e83110a4355fa79db9a3fcdf83a41acfd6cb91aa" translate="yes" xml:space="preserve">
          <source>There is now a link to our &lt;a href=&quot;https://gitter.im/cypress-io/cypress&quot;&gt;chat&lt;/a&gt; in the navigation of the web app.</source>
          <target state="translated">网络应用程序导航中现在有指向我们&lt;a href=&quot;https://gitter.im/cypress-io/cypress&quot;&gt;聊天&lt;/a&gt;的链接。</target>
        </trans-unit>
        <trans-unit id="6e09ba3f0dfb49b58e71d412e80b4a4f4ac968a2" translate="yes" xml:space="preserve">
          <source>There is now a new &lt;a href=&quot;../getting-started/installing-cypress#Skipping-installation&quot;&gt;&lt;code&gt;CYPRESS_SKIP_BINARY_INSTALL&lt;/code&gt;&lt;/a&gt; flag you can pass during &lt;code&gt;npm install&lt;/code&gt; which skips the binary installation after the &lt;code&gt;cypress&lt;/code&gt; npm module completes its installation. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1005&quot;&gt;#1005&lt;/a&gt;.</source>
          <target state="translated">现在，在 &lt;code&gt;npm install&lt;/code&gt; 期间可以传递一个新的&lt;a href=&quot;../getting-started/installing-cypress#Skipping-installation&quot;&gt; &lt;code&gt;CYPRESS_SKIP_BINARY_INSTALL&lt;/code&gt; &lt;/a&gt;标志，该标志会在 &lt;code&gt;cypress&lt;/code&gt; npm模块完成安装后跳过二进制安装。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1005&quot;&gt;＃1005&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d0c122f435064136c25d3c102646962651950d9f" translate="yes" xml:space="preserve">
          <source>There is now a new &lt;a href=&quot;configuration&quot;&gt;configuration option&lt;/a&gt;: &lt;code&gt;watchForFileChanges&lt;/code&gt; that, when set to &lt;code&gt;false&lt;/code&gt; in the &lt;code&gt;cypress.json&lt;/code&gt;, will prevent Cypress from attempting to watch for file changes and restart your tests.</source>
          <target state="translated">现在有一个新的&lt;a href=&quot;configuration&quot;&gt;配置选项&lt;/a&gt;： &lt;code&gt;watchForFileChanges&lt;/code&gt; ，当在 &lt;code&gt;cypress.json&lt;/code&gt; 中将其设置为 &lt;code&gt;false&lt;/code&gt; 时，它将阻止Cypress尝试监视文件更改并重新启动测试。</target>
        </trans-unit>
        <trans-unit id="dfa7b44660cfd433a495758bb2afdce65afa3004" translate="yes" xml:space="preserve">
          <source>There is now a new &lt;a href=&quot;configuration#Browser&quot;&gt;&lt;code&gt;chromeWebSecurity&lt;/code&gt;&lt;/a&gt; option you can set in &lt;code&gt;cypress.json&lt;/code&gt; to turn off Chrome&amp;rsquo;s Web Security features. We&amp;rsquo;ve written a brand new reference that details why and how you could use this. &lt;a href=&quot;../guides/web-security&quot;&gt;Cypress Web Security&lt;/a&gt;. This option can be used for accessing &lt;code&gt;cross origin&lt;/code&gt;&lt;code&gt;&amp;lt;iframes&amp;gt;&lt;/code&gt; or if your application needs to test navigation across super domains. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/262&quot;&gt;#262&lt;/a&gt;.</source>
          <target state="translated">现在，您可以在 &lt;code&gt;cypress.json&lt;/code&gt; 中设置一个新的&lt;a href=&quot;configuration#Browser&quot;&gt; &lt;code&gt;chromeWebSecurity&lt;/code&gt; &lt;/a&gt;选项，以关闭Chrome的网络安全功能。我们写了一个全新的参考书，详细介绍了为什么以及如何使用它。&lt;a href=&quot;../guides/web-security&quot;&gt;赛普拉斯网络安全&lt;/a&gt;。此选项可用于访问 &lt;code&gt;cross origin&lt;/code&gt; &lt;code&gt;&amp;lt;iframes&amp;gt;&lt;/code&gt; ,或者如果您的应用程序需要测试跨超级域的导航。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/262&quot;&gt;＃262&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9c13d06cd6f7be441a440e0a5e52a3c17d46efa2" translate="yes" xml:space="preserve">
          <source>There is now a new &lt;a href=&quot;error-messages&quot;&gt;Error Messages Page&lt;/a&gt; which will provide additional explanation when you are getting errors from Cypress. These errors will be directly linked to (like how Angular provides errors).</source>
          <target state="translated">现在，有了一个新的&lt;a href=&quot;error-messages&quot;&gt;错误消息页面&lt;/a&gt;，当您从赛普拉斯获得错误时，它将提供更多的解释。这些错误将直接链接到（例如Angular提供错误的方式）。</target>
        </trans-unit>
        <trans-unit id="3da6d69e75441af501cee5b60ff76c2820e29e9d" translate="yes" xml:space="preserve">
          <source>There is now a new &lt;code&gt;videoUploadOnPasses&lt;/code&gt; configuration option in &lt;code&gt;cypress.json&lt;/code&gt;. Turning this off will only compress and upload videos on failures. This only affects projects which are setup to record to the Dashboard. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/460&quot;&gt;#460&lt;/a&gt;. Contributed by &lt;a href=&quot;https://github.com/carlos-granados&quot;&gt;@carlos-granados&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;cypress.json&lt;/code&gt; 中现在有了一个新的 &lt;code&gt;videoUploadOnPasses&lt;/code&gt; 配置选项。关闭此功能只会在失败时压缩和上传视频。这只会影响设置为记录到仪表板的项目。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/460&quot;&gt;＃460&lt;/a&gt;。由&lt;a href=&quot;https://github.com/carlos-granados&quot;&gt;@ carlos-granados提供&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8b83ca6f75548f1429229de20a9aeb6fe96b722c" translate="yes" xml:space="preserve">
          <source>There is now an &lt;a href=&quot;configuration&quot;&gt;&lt;code&gt;ignoreTestFiles&lt;/code&gt;&lt;/a&gt; configuration option that accepts an array of &lt;code&gt;glob&lt;/code&gt; patterns. This enables you to ignore extraneous spec files that may be created during a build process. The default pattern is &lt;code&gt;*.hot-update.js&lt;/code&gt; which will ignore dynamically generated webpack hot module swapping files. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/159&quot;&gt;#159&lt;/a&gt;.</source>
          <target state="translated">现在有一个&lt;a href=&quot;configuration&quot;&gt; &lt;code&gt;ignoreTestFiles&lt;/code&gt; &lt;/a&gt;配置选项，它接受一组 &lt;code&gt;glob&lt;/code&gt; 模式。这使您可以忽略在构建过程中可能创建的无关规范文件。默认模式是 &lt;code&gt;*.hot-update.js&lt;/code&gt; ，它将忽略动态生成的Webpack热模块交换文件。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/159&quot;&gt;＃159&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a99195291987f66dbf8c3f3569ecafb008dcf9e5" translate="yes" xml:space="preserve">
          <source>There is now an &lt;code&gt;example_spec.js&lt;/code&gt; file that is scaffolded on new projects. This allows new users to instantly see Cypress successfully running on an example project and will answer many questions on writing your first tests. This &lt;code&gt;example_spec.js&lt;/code&gt; file contains every single Cypress command and has approximately 70 tests.</source>
          <target state="translated">现在，有一个 &lt;code&gt;example_spec.js&lt;/code&gt; 文件被放置在新项目中。这样，新用户可以立即看到Cypress在示例项目上成功运行，并在编写首次测试时回答许多问题。该 &lt;code&gt;example_spec.js&lt;/code&gt; 文件包含每个赛普拉斯命令，并具有大约70个测试。</target>
        </trans-unit>
        <trans-unit id="031d431a1eb00c36efe82a7c28512d172ecf63ac" translate="yes" xml:space="preserve">
          <source>There was a bug when checking / unchecking &lt;code&gt;:checkbox&lt;/code&gt; where it did not properly receive focus.</source>
          <target state="translated">选中/取消选中 &lt;code&gt;:checkbox&lt;/code&gt; 时出现错误，无法正确获得焦点。</target>
        </trans-unit>
        <trans-unit id="a9e92b0b59182c86132b2dd07a89e0f5a3605c11" translate="yes" xml:space="preserve">
          <source>There was no performance penalty splitting up multiple tests because they run really fast</source>
          <target state="translated">分开多个测试没有任何性能上的损失,因为它们运行得非常快。</target>
        </trans-unit>
        <trans-unit id="c34832326aef46eb63697ba55a2cd1f3899baa6c" translate="yes" xml:space="preserve">
          <source>There will never be support for &lt;a href=&quot;#Multiple-tabs&quot;&gt;multiple browser tabs&lt;/a&gt;.</source>
          <target state="translated">永远不会支持&lt;a href=&quot;#Multiple-tabs&quot;&gt;多个浏览器选项卡&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="18a6526be1610a630eea6faeec2d18843eba2750" translate="yes" xml:space="preserve">
          <source>There&amp;rsquo;s a new &amp;lsquo;canceled&amp;rsquo; XHR status shown on the Command Log to indicate the difference between calling &lt;code&gt;xhr.abort()&lt;/code&gt; and the browser canceling the request due to page navigation. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3973&quot;&gt;#3973&lt;/a&gt;.</source>
          <target state="translated">命令日志中显示了一个新的&amp;ldquo;已取消&amp;rdquo; XHR状态，以指示调用 &lt;code&gt;xhr.abort()&lt;/code&gt; 与浏览器由于页面导航而取消请求之间的区别。地址&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3973&quot;&gt;＃3973&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ecc8bbb3c2b7a877c0207765fdec3d2b56839b06" translate="yes" xml:space="preserve">
          <source>There&amp;rsquo;s a new warning when mouse interactions fail displaying that it failed due to the element having CSS &lt;code&gt;pointer-events: none&lt;/code&gt;. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3164&quot;&gt;#3164&lt;/a&gt;.</source>
          <target state="translated">当鼠标交互失败时显示一个新警告，表明由于元素具有CSS &lt;code&gt;pointer-events: none&lt;/code&gt; 而导致失败：none。地址&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3164&quot;&gt;＃3164&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f9060e00ab79a3906c7c6bc48a22ab6f0c6b6395" translate="yes" xml:space="preserve">
          <source>There&amp;rsquo;s an &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/205&quot;&gt;open discussion&lt;/a&gt; about this behavior.</source>
          <target state="translated">关于此行为有一个&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/205&quot;&gt;公开讨论&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fe5170237743e929b01a3f5de39d11c73b643c24" translate="yes" xml:space="preserve">
          <source>There&amp;rsquo;s no reason to add this level of complexity when you&amp;rsquo;re only wrapping a couple commands.</source>
          <target state="translated">当您只包装几个命令时，没有理由增加这种复杂性。</target>
        </trans-unit>
        <trans-unit id="18735493b2590b0d17f1fc15d89f5fca60430728" translate="yes" xml:space="preserve">
          <source>There&amp;rsquo;s now a proper &amp;ldquo;empty view&amp;rdquo; when you go to setup your project to record on our Dashboard and you have not created any Organizations. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1306&quot;&gt;#1306&lt;/a&gt;.</source>
          <target state="translated">现在，当您将项目设置为在我们的仪表板上记录并且没有创建任何组织时，就会有一个适当的&amp;ldquo;空视图&amp;rdquo;。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1306&quot;&gt;＃1306&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4f7484ee1a39bf81b8695c10efcae8524d0b44cb" translate="yes" xml:space="preserve">
          <source>There&amp;rsquo;s now an &lt;a href=&quot;../../api/plugins/after-screenshot-api&quot;&gt;&lt;code&gt;after:screenshot&lt;/code&gt; plugin event&lt;/a&gt; you can use in your &lt;code&gt;pluginsFile&lt;/code&gt; to work with screenshots after they are taken. This enables you to rename them, move their location, resize them, send them to a service, etc. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2039&quot;&gt;#2039&lt;/a&gt;.</source>
          <target state="translated">现在有一个&lt;a href=&quot;../../api/plugins/after-screenshot-api&quot;&gt; &lt;code&gt;after:screenshot&lt;/code&gt; 插件事件，&lt;/a&gt;您可以在 &lt;code&gt;pluginsFile&lt;/code&gt; 中使用该事件以在截图后处理截图。这使您可以重命名它们，移动它们的位置，调整它们的大小，将它们发送到服务等。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2039&quot;&gt;＃2039&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="397710a06288d53d07c3614c5133df2eef06b538" translate="yes" xml:space="preserve">
          <source>Therefore it&amp;rsquo;s often much more efficient to test the blur behavior directly with &lt;code&gt;.blur()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7214495cbcc91eebe33a6442febcf1a56b9f0eef" translate="yes" xml:space="preserve">
          <source>Therefore it&amp;rsquo;s oftentimes much easier and simpler to test the blur behavior directly with &lt;code&gt;.blur()&lt;/code&gt;.</source>
          <target state="translated">因此，直接使用 &lt;code&gt;.blur()&lt;/code&gt; 测试模糊行为通常更容易，更简单。</target>
        </trans-unit>
        <trans-unit id="fc5e5447eb3b4803d9fc6039f9cde3ac326cd017" translate="yes" xml:space="preserve">
          <source>Therefore what you do on one site could not possibly affect another.</source>
          <target state="translated">因此,您在一个网站上的行为不可能影响到另一个网站。</target>
        </trans-unit>
        <trans-unit id="85f6fdb916332f8ec1dc5dfa8588b7bda489bf11" translate="yes" xml:space="preserve">
          <source>These actions will always happen serially (one after the other), never in parallel (at the same time). Why?</source>
          <target state="translated">这些动作总是连续发生(一个接一个),绝不会平行发生(同时)。为什么呢?</target>
        </trans-unit>
        <trans-unit id="28743c5ca6bfcc7515dfeba2957983dc47734790" translate="yes" xml:space="preserve">
          <source>These are helpful to set conditions that you want to run before a set of tests or before each test. They&amp;rsquo;re also helpful to clean up conditions after a set of tests or after each test.</source>
          <target state="translated">这些有助于设置要在一组测试之前或每个测试之前运行的条件。它们还有助于在一组测试后或每次测试后清理条件。</target>
        </trans-unit>
        <trans-unit id="45674c33ac9f89ac283ff637d8946d43e4731d26" translate="yes" xml:space="preserve">
          <source>These are just simple examples. Remember - you have the full power of Node at your disposal.</source>
          <target state="translated">这些只是简单的例子。请记住--你有Node的全部能力供你使用。</target>
        </trans-unit>
        <trans-unit id="eb65f75ddd6fd4c1ccef4ce326b6f6c85b9af13c" translate="yes" xml:space="preserve">
          <source>These assertions are available for TDD assertions (&lt;code&gt;assert&lt;/code&gt;). You can see the entire list of available Chai assertions &lt;a href=&quot;http://chaijs.com/api/assert/&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">这些断言可用于TDD断言（ &lt;code&gt;assert&lt;/code&gt; ）。您可以在&lt;a href=&quot;http://chaijs.com/api/assert/&quot;&gt;此处查看&lt;/a&gt;可用的Chai断言的完整列表。</target>
        </trans-unit>
        <trans-unit id="4953b3893626062263f824a1960bd2a77b100e7a" translate="yes" xml:space="preserve">
          <source>These binary names should work for most Linux distributions. If your distribution packages browsers under a different binary name, you can add a symlink using the expected binary name so that Cypress can detect it.</source>
          <target state="translated">这些二进制名称应该适用于大多数Linux发行版。如果您的发行版以不同的二进制名称打包浏览器,您可以使用预期的二进制名称添加一个符号链接,以便赛普拉斯能够检测到它。</target>
        </trans-unit>
        <trans-unit id="4a1196bf431f1cfe6164bd4d103522bb3a9b52e7" translate="yes" xml:space="preserve">
          <source>These chainers are available for BDD assertions (&lt;code&gt;expect&lt;/code&gt;/&lt;code&gt;should&lt;/code&gt;). Aliases listed can be used interchangeably with their original chainer. You can see the entire list of available BDD Chai assertions &lt;a href=&quot;http://chaijs.com/api/bdd/&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">这些链接器可用于BDD断言（ &lt;code&gt;expect&lt;/code&gt; / &lt;code&gt;should&lt;/code&gt; ）。列出的别名可以与其原始链接器互换使用。您可以在&lt;a href=&quot;http://chaijs.com/api/bdd/&quot;&gt;此处查看&lt;/a&gt;可用的BDD Chai断言的完整列表。</target>
        </trans-unit>
        <trans-unit id="0195e7b826291e8c9d2e6c2760f471b63c7092b4" translate="yes" xml:space="preserve">
          <source>These chainers are available when asserting about a DOM object.</source>
          <target state="translated">当对一个DOM对象进行断言时,这些链器是可用的。</target>
        </trans-unit>
        <trans-unit id="68422c27f1633a2980af5c4c02cb2fc4a047c124" translate="yes" xml:space="preserve">
          <source>These chainers are used on assertions with &lt;a href=&quot;../../api/commands/stub&quot;&gt;&lt;code&gt;cy.stub()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/spy&quot;&gt;&lt;code&gt;cy.spy()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">这些链接器可用于带有&lt;a href=&quot;../../api/commands/stub&quot;&gt; &lt;code&gt;cy.stub()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../api/commands/spy&quot;&gt; &lt;code&gt;cy.spy()&lt;/code&gt; 的声明&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="20515bec0d95724a47bc745c03c73fa522fbb5ff" translate="yes" xml:space="preserve">
          <source>These commands are useful when writing both &lt;strong&gt;unit tests&lt;/strong&gt; and &lt;strong&gt;integration tests&lt;/strong&gt;.</source>
          <target state="translated">在编写&lt;strong&gt;单元测试&lt;/strong&gt;和&lt;strong&gt;集成测试&lt;/strong&gt;时，这些命令很有用。</target>
        </trans-unit>
        <trans-unit id="1cfb20200e9dc3b22d4476cb1bb20d5b8ced0ba3" translate="yes" xml:space="preserve">
          <source>These commands ensure &lt;a href=&quot;interacting-with-elements&quot;&gt;some guarantees&lt;/a&gt; about what the state of the elements should be prior to performing their actions.</source>
          <target state="translated">这些命令保证&lt;a href=&quot;interacting-with-elements&quot;&gt;一些担保&lt;/a&gt;什么元素的状态应该是之前执行他们的行动。</target>
        </trans-unit>
        <trans-unit id="881d844366384bae117147c3598ae8922f86ef5b" translate="yes" xml:space="preserve">
          <source>These commands have their own particular timeout values which are documented in our &lt;a href=&quot;../references/configuration&quot;&gt;configuration&lt;/a&gt;.</source>
          <target state="translated">这些命令具有它们自己的特定超时值，这些值记录在我们的&lt;a href=&quot;../references/configuration&quot;&gt;配置中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="83633488b1538060384db695faf6778dfd27c136" translate="yes" xml:space="preserve">
          <source>These commands simulate a user interacting with your application. Under the hood, Cypress fires the events a browser would fire thus causing your application&amp;rsquo;s event bindings to fire.</source>
          <target state="translated">这些命令模拟用户与您的应用程序进行交互。在幕后，赛普拉斯会触发浏览器可能触发的事件，从而触发应用程序的事件绑定。</target>
        </trans-unit>
        <trans-unit id="52211a23efcbd36ca425b4c7bbb10e85f46d5957" translate="yes" xml:space="preserve">
          <source>These days modern JavaScript applications are highly dynamic and mutable. Their state and the DOM are continuously changing over a period of time.</source>
          <target state="translated">现在的现代JavaScript应用程序是高度动态和可变的。它们的状态和DOM在一段时间内不断变化。</target>
        </trans-unit>
        <trans-unit id="609ce6a7c382a53ea655a06896d2ab06c5aff2c2" translate="yes" xml:space="preserve">
          <source>These design patterns ensure we can create &lt;strong&gt;deterministic&lt;/strong&gt;, &lt;strong&gt;repeatable&lt;/strong&gt;, &lt;strong&gt;consistent&lt;/strong&gt; tests that are &lt;strong&gt;flake free&lt;/strong&gt;.</source>
          <target state="translated">这些设计模式可确保我们能够创建&lt;strong&gt;确定性&lt;/strong&gt;，&lt;strong&gt;可重复性&lt;/strong&gt;，&lt;strong&gt;一致的&lt;/strong&gt;&lt;strong&gt;无碎片&lt;/strong&gt;测试。</target>
        </trans-unit>
        <trans-unit id="442e0ac562d6a14e9a81ecbfe21544963edd5783" translate="yes" xml:space="preserve">
          <source>These events are useful not only to control your application&amp;rsquo;s behavior, but also for debugging purposes.</source>
          <target state="translated">这些事件不仅可用于控制应用程序的行为，而且还可用于调试目的。</target>
        </trans-unit>
        <trans-unit id="b07694fc42f8b832051755f59f4778b9b5c2ff23" translate="yes" xml:space="preserve">
          <source>These events come from Cypress as it issues commands and reacts to their state. These are all useful to listen to for debugging purposes.</source>
          <target state="translated">这些事件来自于赛普拉斯发出命令并对其状态做出反应。这些事件对于调试来说都是有用的。</target>
        </trans-unit>
        <trans-unit id="043a6687e4b1a3f18da73f4c9bfca2d806aa03f1" translate="yes" xml:space="preserve">
          <source>These events come from the application currently under test (your application). These are the most useful events for you to listen to.</source>
          <target state="translated">这些事件来自当前正在测试的应用程序(你的应用程序)。这些都是你要监听的最有用的事件。</target>
        </trans-unit>
        <trans-unit id="359374f9c462810b631ecda55c5d66a04f382d01" translate="yes" xml:space="preserve">
          <source>These examples were implemented in &lt;a href=&quot;https://github.com/cypress-io/cypress-example-circleci-orb&quot;&gt;https://github.com/cypress-io/cypress-example-circleci-orb&lt;/a&gt;.</source>
          <target state="translated">这些示例在&lt;a href=&quot;https://github.com/cypress-io/cypress-example-circleci-orb&quot;&gt;https://github.com/cypress-io/cypress-example-circleci-orb&lt;/a&gt;中实现。</target>
        </trans-unit>
        <trans-unit id="8d32cf151178383caef9aa8ad927132ef9f35294" translate="yes" xml:space="preserve">
          <source>These flags can only be used when recording to the &lt;a href=&quot;../dashboard/introduction&quot;&gt;Dashboard Service&lt;/a&gt;.</source>
          <target state="translated">仅当记录到&lt;a href=&quot;../dashboard/introduction&quot;&gt;仪表板服务&lt;/a&gt;时才能使用这些标志。</target>
        </trans-unit>
        <trans-unit id="d7e81141ee1393dfcb7b048723fc44e40ef45f80" translate="yes" xml:space="preserve">
          <source>These getters are also available for BDD assertions. They don&amp;rsquo;t actually do anything, but they enable you to write simple, english sentences.</source>
          <target state="translated">这些获取器也可用于BDD断言。他们实际上什么也没做，但是使您能够编写简单的英语句子。</target>
        </trans-unit>
        <trans-unit id="d327b39b833509ec1e2b285b87bef79067b06fe0" translate="yes" xml:space="preserve">
          <source>These means you can do things like store multiple configuration files and switch between them like:</source>
          <target state="translated">这些意味着你可以做一些事情,比如存储多个配置文件,并在它们之间切换,比如。</target>
        </trans-unit>
        <trans-unit id="fa5357b2c9c52398ef9491e8a83e910435c1ec16" translate="yes" xml:space="preserve">
          <source>These new APIs will work well in both &lt;code&gt;unit&lt;/code&gt; tests and &lt;code&gt;integration&lt;/code&gt; tests.</source>
          <target state="translated">这些新的API在 &lt;code&gt;unit&lt;/code&gt; 测试和 &lt;code&gt;integration&lt;/code&gt; 测试中都能很好地工作。</target>
        </trans-unit>
        <trans-unit id="d28942c040600bc3ed5d1ad0f4c559d04b54555b" translate="yes" xml:space="preserve">
          <source>These patterns are pretty much the same as before:</source>
          <target state="translated">这些图案和以前差不多。</target>
        </trans-unit>
        <trans-unit id="ed3414d62d52af3e5b6b1c3baec988723b167eb7" translate="yes" xml:space="preserve">
          <source>These pre-release builds are platform-specific. Choose the platform that matches your platform; for example if you are on a Mac, click on the commit &amp;ldquo;Testing new darwin x64 &amp;hellip;&amp;rdquo;. This commit has a custom message that shows a special temporary URL of the built binary for Mac OS and the matching npm &lt;code&gt;cypress&lt;/code&gt; package.</source>
          <target state="translated">这些预发行版本是特定于平台的。选择与您的平台匹配的平台；例如，如果您使用的是Mac，则单击&amp;ldquo;测试新的darwin x64&amp;hellip;&amp;rdquo;提交。该提交具有一条定制消息，该消息显示Mac OS内置二进制文件的特殊临时URL以及匹配的npm &lt;code&gt;cypress&lt;/code&gt; 软件包。</target>
        </trans-unit>
        <trans-unit id="a0931e8b6577933aa64d3d15bef574bad710dfe9" translate="yes" xml:space="preserve">
          <source>These rules are pretty intuitive, and most commands give you the flexibility to override or bypass the default ways they can fail, typically by passing a &lt;code&gt;{force: true}&lt;/code&gt; option.</source>
          <target state="translated">这些规则非常直观，大多数命令使您可以灵活地覆盖或绕过它们失败的默认方式，通常通过传递 &lt;code&gt;{force: true}&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="c94d28aa75cb493037d863adcd2aa5c1fb923810" translate="yes" xml:space="preserve">
          <source>These script patterns are antiquated and deprecated security techniques to prevent clickjacking and framebusting. They are a relic of the past and are no longer necessary in modern browsers. However many sites and applications still implement them.</source>
          <target state="translated">这些脚本模式是过时的、被废弃的安全技术,用于防止点击劫持和帧破坏。它们是过去的遗迹,在现代浏览器中已不再需要。然而,许多网站和应用程序仍然实施它们。</target>
        </trans-unit>
        <trans-unit id="a6f5e5c1784077e3dd22aeace20664d5f86a292a" translate="yes" xml:space="preserve">
          <source>These string messages will be shown in the Command Log giving each assertion more context.</source>
          <target state="translated">这些字符串信息将显示在命令日志中,给每个断言更多的上下文。</target>
        </trans-unit>
        <trans-unit id="137c32ae358ef4e80bd8c0f9d2bfd375c3b8c32d" translate="yes" xml:space="preserve">
          <source>These techniques prevent Cypress from working, and they can be safely removed without altering any of your application&amp;rsquo;s behavior.</source>
          <target state="translated">这些技术会阻止Cypress正常工作，并且可以安全地将其删除而不会改变您的应用程序的任何行为。</target>
        </trans-unit>
        <trans-unit id="ba8ab5864f9d929861e35ef5cdddeda01c8f1431" translate="yes" xml:space="preserve">
          <source>These two commands work together to control the behavior of your responses within the command&amp;rsquo;s options. &lt;a href=&quot;../../api/commands/server&quot;&gt;&lt;code&gt;cy.server()&lt;/code&gt;&lt;/a&gt; enables stubbing, while &lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt; provides a routing table so Cypress understands which response should go with which request.</source>
          <target state="translated">这两个命令一起工作，以在命令的选项内控制响应的行为。&lt;a href=&quot;../../api/commands/server&quot;&gt; &lt;code&gt;cy.server()&lt;/code&gt; &lt;/a&gt;启用存根，而&lt;a href=&quot;../../api/commands/route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt;提供路由表，因此赛普拉斯了解哪个响应应与哪个请求一起使用。</target>
        </trans-unit>
        <trans-unit id="0f8e5a57c4af6b7a9d473a9ea0690cbaf075a71a" translate="yes" xml:space="preserve">
          <source>These various timeouts are defined in the &lt;a href=&quot;../references/configuration#Timeouts&quot;&gt;Configuration&lt;/a&gt; document.</source>
          <target state="translated">这些各种超时在&lt;a href=&quot;../references/configuration#Timeouts&quot;&gt;配置&lt;/a&gt;文档中定义。</target>
        </trans-unit>
        <trans-unit id="382ee2e21da5c19509b40972f28f3052b6936f0a" translate="yes" xml:space="preserve">
          <source>They are liable to change at any moment which will break tests.</source>
          <target state="translated">它们随时可能发生变化,从而破坏测试。</target>
        </trans-unit>
        <trans-unit id="7a56ac5d0ec9176f5af01c758c59cb008aea8f2f" translate="yes" xml:space="preserve">
          <source>They may detect you are a script and block your access (Google does this).</source>
          <target state="translated">他们可能会检测到你是一个脚本,并阻止你的访问(谷歌这样做)。</target>
        </trans-unit>
        <trans-unit id="9b893017ae4ab49a916aeb9e55edfb2e2e81b3ca" translate="yes" xml:space="preserve">
          <source>They may do A/B testing which makes it impossible to get consistent results.</source>
          <target state="translated">他们可能会做A/B测试,这就不可能得到一致的结果。</target>
        </trans-unit>
        <trans-unit id="54f161b1dd790ed2c62a644ac0b51ec37f613527" translate="yes" xml:space="preserve">
          <source>They may have security features enabled which prevent Cypress from working.</source>
          <target state="translated">他们可能启用了安全功能,使Cypress无法工作。</target>
        </trans-unit>
        <trans-unit id="c8166a5ce7e3f579f8602955ae86ac6e886a6270" translate="yes" xml:space="preserve">
          <source>Think of your record key as the key that enables you to &lt;em&gt;write and create&lt;/em&gt; runs. However, it has nothing to do with being able to &lt;em&gt;read or see&lt;/em&gt; runs once they are recorded.</source>
          <target state="translated">将记录密钥视为使您能够&lt;em&gt;编写和创建&lt;/em&gt;运行的密钥。但是，它与记录运行后就可以&lt;em&gt;读取或查看&lt;/em&gt;运行无关。</target>
        </trans-unit>
        <trans-unit id="cb5d527fd6e86a1fa5b13a95c00fa9a30ee49021" translate="yes" xml:space="preserve">
          <source>Third Party Plugins</source>
          <target state="translated">第三方插件</target>
        </trans-unit>
        <trans-unit id="beb22e8ea527b5438942d3117fcb17861927b5ef" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;https://www.npmjs.com/package/cypress&quot;&gt;CLI tool is now published on NPM&lt;/a&gt;, though the documentation still needs to be written.</source>
          <target state="translated">此&lt;a href=&quot;https://www.npmjs.com/package/cypress&quot;&gt;CLI工具现已发布在NPM上&lt;/a&gt;，尽管仍需要编写文档。</target>
        </trans-unit>
        <trans-unit id="7b3e5b9b025b2c29064f0a9adbd48298a462718a" translate="yes" xml:space="preserve">
          <source>This &lt;strong&gt;delay is 60 seconds by default&lt;/strong&gt;, but is &lt;a href=&quot;project&quot;&gt;configurable within the Dashboard&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;默认情况下&lt;/strong&gt;，此&lt;strong&gt;延迟为60秒&lt;/strong&gt;，但&lt;a href=&quot;project&quot;&gt;可在仪表板中配置&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="62b7158c582db223557ebeec57ef5d313adb2953" translate="yes" xml:space="preserve">
          <source>This GitHub Action for npm enables arbitrary actions with the npm command-line client, including testing with cypress.io and publishing to a registry.</source>
          <target state="translated">这个适用于npm的GitHub Action可以实现对npm命令行客户端的任意操作,包括使用cypress.io进行测试和发布到注册表。</target>
        </trans-unit>
        <trans-unit id="f502ab0df6197a9e24c93b25d8862a3da4752490" translate="yes" xml:space="preserve">
          <source>This above example is ideal because now we are resetting the state between each test and ensuring nothing in previous tests leaks into subsequent ones.</source>
          <target state="translated">上面这个例子很理想,因为现在我们在每次测试之间重置状态,并确保之前的测试没有任何东西泄漏到后续的测试中。</target>
        </trans-unit>
        <trans-unit id="8017be0f0fbcd16a8130b36b3cef709434d85acf" translate="yes" xml:space="preserve">
          <source>This above test will pass even if the &lt;code&gt;.active&lt;/code&gt; class is applied to the button asynchronously - or after a indeterminate period of time.</source>
          <target state="translated">即使将 &lt;code&gt;.active&lt;/code&gt; 类异步应用于按钮-或经过一段不确定的时间后，上述测试也会通过。</target>
        </trans-unit>
        <trans-unit id="8197155d64bb509765e88f2bc29f6dfabe8fd875" translate="yes" xml:space="preserve">
          <source>This allows you to inspect the web application, the DOM, the network, and any storage after each command to make sure everything happens as expected.</source>
          <target state="translated">这允许你在每个命令后检查Web应用程序、DOM、网络和任何存储,以确保一切按预期发生。</target>
        </trans-unit>
        <trans-unit id="29a189af4537a7f46576d2e1073b9b0ce3ceb116" translate="yes" xml:space="preserve">
          <source>This allows you to isolate the problem a little better</source>
          <target state="translated">这可以让你更好地隔离问题。</target>
        </trans-unit>
        <trans-unit id="9248a84a17934c3b2e08562ecd3c59b31b003634" translate="yes" xml:space="preserve">
          <source>This allows you to record those details or manipulate the image as needed. You can also return updated details about the image.</source>
          <target state="translated">这允许您记录这些细节或根据需要对图像进行操作。您还可以返回有关图像的最新细节。</target>
        </trans-unit>
        <trans-unit id="006fa58cf505c99b58517df432b0dc5e3fdd2f4d" translate="yes" xml:space="preserve">
          <source>This allows you to record those details, manipulate the image as needed, and return the updated details about the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfa32b59fca9866e2a6798a8078e8df509bf9e96" translate="yes" xml:space="preserve">
          <source>This also applies to custom assertions such as when passing a callback:</source>
          <target state="translated">这也适用于自定义断言,比如传递回调时。</target>
        </trans-unit>
        <trans-unit id="13b599015c16556bcb01f0b0b1af61920c3719eb" translate="yes" xml:space="preserve">
          <source>This also causes the commands to be queued on the wrong test. We will get the error in the next test that Cypress detected it had commands in its command queue.</source>
          <target state="translated">这也导致命令在错误的测试上排队。我们将在下一个测试中得到Cypress检测到它的命令队列中有命令的错误。</target>
        </trans-unit>
        <trans-unit id="c230dabe195bf9d8fb5f3a0be2b16160cde50bef" translate="yes" xml:space="preserve">
          <source>This also helps prevent flake when interacting with your application in tests. You can usually override this behavior with a &lt;code&gt;force&lt;/code&gt; option.</source>
          <target state="translated">在测试中与您的应用程序交互时，这也有助于防止剥落。通常，您可以使用 &lt;code&gt;force&lt;/code&gt; 选项覆盖此行为。</target>
        </trans-unit>
        <trans-unit id="14448f79e0ac836cf66b84d5943d534b44db3bf7" translate="yes" xml:space="preserve">
          <source>This avoids ever needing a second open browser, but still gives you an end-to-end test that provides 100% confidence that the two clients can communicate with each other.</source>
          <target state="translated">这就避免了需要第二个打开的浏览器,但仍然给你一个端到端的测试,提供100%的信心,两个客户端可以相互通信。</target>
        </trans-unit>
        <trans-unit id="ffcc27dd8d3d6805806d62fb4df70d8e4b4b2c7e" translate="yes" xml:space="preserve">
          <source>This avoids ever needing to touch the UI of another application.</source>
          <target state="translated">这就避免了需要接触另一个应用程序的用户界面。</target>
        </trans-unit>
        <trans-unit id="6e22effe331f1fdf51d1986d8d2bccff5c8400a8" translate="yes" xml:space="preserve">
          <source>This behavior can be turned off by setting &lt;code&gt;screenshotOnRunFailure&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; in the &lt;a href=&quot;../../api/cypress-api/screenshot-api&quot;&gt;Cypress.Screenshot.defaults()&lt;/a&gt;.</source>
          <target state="translated">可以通过在&lt;a href=&quot;../../api/cypress-api/screenshot-api&quot;&gt;Cypress.Screenshot.defaults（）中将&lt;/a&gt; &lt;code&gt;screenshotOnRunFailure&lt;/code&gt; 设置为 &lt;code&gt;false&lt;/code&gt; 来关闭此行为。</target>
        </trans-unit>
        <trans-unit id="b0566cbd883d43a8c86b451848b07afc8b7f203e" translate="yes" xml:space="preserve">
          <source>This behavior is defined here: &lt;a href=&quot;https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#implicit-submission&quot;&gt;Form Implicit Submission&lt;/a&gt;.</source>
          <target state="translated">此行为在此处定义：&lt;a href=&quot;https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#implicit-submission&quot;&gt;表单隐式提交&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2116d7396edebf7fccda746381ebe5befffeb66e" translate="yes" xml:space="preserve">
          <source>This behavior is due to the function invocation &lt;code&gt;foo()&lt;/code&gt; and &lt;code&gt;bar()&lt;/code&gt;, which call the functions immediately to return a Promise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d1026fd09572361af21bed1bf4b794694e0898a" translate="yes" xml:space="preserve">
          <source>This callback function can and &lt;em&gt;will&lt;/em&gt; be called multiple times with the same &lt;code&gt;filePath&lt;/code&gt;.</source>
          <target state="translated">可以并且&lt;em&gt;将&lt;/em&gt;使用相同的 &lt;code&gt;filePath&lt;/code&gt; 多次调用此回调函数。</target>
        </trans-unit>
        <trans-unit id="2bac7b14e8624933e72c9418239623c0167ec9a4" translate="yes" xml:space="preserve">
          <source>This code below is just for demonstration.</source>
          <target state="translated">下面这段代码只是为了演示。</target>
        </trans-unit>
        <trans-unit id="75615113c2d80617aac68b6dd269cb04f5d5ead7" translate="yes" xml:space="preserve">
          <source>This configuration contains all of the values that get passed into the browser for your project.</source>
          <target state="translated">这个配置包含了所有传递到项目浏览器中的值。</target>
        </trans-unit>
        <trans-unit id="371ef096eb0b125d658a2f2ef3a3dd9f8a83043a" translate="yes" xml:space="preserve">
          <source>This delay could be the source of our flaky tests when the application is running on our CI server. Here is how to see the source of the problem. In the Command Log, hover over each command to see which elements Cypress found at each step.</source>
          <target state="translated">当应用程序在CI服务器上运行时,这种延迟可能是我们的片状测试的来源。下面是如何查看问题的根源。在命令日志中,将鼠标悬停在每个命令上,查看Cypress在每个步骤中发现了哪些元素。</target>
        </trans-unit>
        <trans-unit id="ff1b84f7cc713a7b67c14bf06ec7b03bbab39581" translate="yes" xml:space="preserve">
          <source>This document assumes you have &lt;a href=&quot;../getting-started/installing-cypress&quot;&gt;installed Cypress&lt;/a&gt;.</source>
          <target state="translated">本文档假定您已&lt;a href=&quot;../getting-started/installing-cypress&quot;&gt;安装Cypress&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="020536ae917c3782dcc90d3dc111ecdfbdb2be36" translate="yes" xml:space="preserve">
          <source>This document is only a reference to every assertion Cypress supports.</source>
          <target state="translated">本文档只是对Cypress支持的每一个论断的参考。</target>
        </trans-unit>
        <trans-unit id="c1f0c96a94930859c838edf61cdb01af7f3809ed" translate="yes" xml:space="preserve">
          <source>This does not set a &lt;code&gt;debugger&lt;/code&gt; in your code, unlike &lt;a href=&quot;debug&quot;&gt;&lt;code&gt;.debug()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">与&lt;a href=&quot;debug&quot;&gt; &lt;code&gt;.debug()&lt;/code&gt; &lt;/a&gt;不同，这不会在代码中设置 &lt;code&gt;debugger&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9779d44142da4b1a1220ae52daf2de6e6e2862c9" translate="yes" xml:space="preserve">
          <source>This element must be an &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; with type &lt;code&gt;checkbox&lt;/code&gt; or &lt;code&gt;radio&lt;/code&gt;.</source>
          <target state="translated">此元素必须是类型为 &lt;code&gt;checkbox&lt;/code&gt; 或 &lt;code&gt;radio&lt;/code&gt; 的 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6bc94d74173cda2d4b50e8be921b70e7926d0532" translate="yes" xml:space="preserve">
          <source>This element must currently be in focus. If you want to ensure an element is focused before blurring, try using &lt;a href=&quot;focus&quot;&gt;&lt;code&gt;.focus()&lt;/code&gt;&lt;/a&gt; before &lt;code&gt;.blur()&lt;/code&gt;.</source>
          <target state="translated">该元素当前必须是焦点。如果要确保元素在模糊之前已聚焦，请尝试在&lt;a href=&quot;focus&quot;&gt; &lt;code&gt;.focus()&lt;/code&gt; &lt;/a&gt;之前使用 &lt;code&gt;.blur()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b784395f09c8450da725aae7e805800788376c23" translate="yes" xml:space="preserve">
          <source>This enables you to &lt;strong&gt;write faster&lt;/strong&gt;, &lt;strong&gt;easier&lt;/strong&gt; and &lt;strong&gt;more reliable&lt;/strong&gt; tests.</source>
          <target state="translated">这使您可以&lt;strong&gt;编写更快&lt;/strong&gt;，&lt;strong&gt;更轻松&lt;/strong&gt;和&lt;strong&gt;更可靠的&lt;/strong&gt;测试。</target>
        </trans-unit>
        <trans-unit id="58a48b9c86e75737932d798f1146f66f67bd81bb" translate="yes" xml:space="preserve">
          <source>This enables you to do things like:</source>
          <target state="translated">这使你能够做这样的事情。</target>
        </trans-unit>
        <trans-unit id="186a2861b069094eadc51cc83089bd154ae1d05e" translate="yes" xml:space="preserve">
          <source>This enables you to install Cypress in a top level &lt;code&gt;node_modules&lt;/code&gt; folder but run Cypress in a nested folder. This is also helpful when you have multiple Cypress projects in your repo.</source>
          <target state="translated">这样，您可以将Cypress安装在顶层 &lt;code&gt;node_modules&lt;/code&gt; 文件夹中，但可以在嵌套文件夹中运行Cypress。当您的仓库中有多个赛普拉斯项目时，这也很有用。</target>
        </trans-unit>
        <trans-unit id="f3bcbd7c053354fdbf03492caa4697d8426f5606" translate="yes" xml:space="preserve">
          <source>This enables you to iterate on plugin code even with Cypress already running.</source>
          <target state="translated">这使你能够在Cypress已经运行的情况下对插件代码进行迭代。</target>
        </trans-unit>
        <trans-unit id="89af8029028e4bfa24db3c32e987386c12cf4276" translate="yes" xml:space="preserve">
          <source>This enables you to test how your application reacts to accepted confirmations and rejected confirmations.</source>
          <target state="translated">这使您能够测试您的应用程序对已接受的确认和拒绝的确认的反应。</target>
        </trans-unit>
        <trans-unit id="b5e605a365181abbfcfd3afe52eb12cc5e615006" translate="yes" xml:space="preserve">
          <source>This error likely appeared because:</source>
          <target state="translated">出现这个错误可能是因为:</target>
        </trans-unit>
        <trans-unit id="17994ab2d722939bcc1783a1da860dccd8bed388" translate="yes" xml:space="preserve">
          <source>This error means that your application navigated to a superdomain that Cypress was not bound to. Initially when you &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt;, Cypress changes the browser&amp;rsquo;s URL to match the &lt;code&gt;url&lt;/code&gt; passed to &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt;. This enables Cypress to communicate with your application to bypasses all same-origin security policies among other things.</source>
          <target state="translated">该错误意味着您的应用程序导航到了赛普拉斯未绑定的超级域。最初，当你&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;，赛普拉斯改变浏览器的URL相匹配的 &lt;code&gt;url&lt;/code&gt; 传递到&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;。这使赛普拉斯能够与您的应用程序进行通信，以绕开所有相同来源的安全策略。</target>
        </trans-unit>
        <trans-unit id="925d43e1578a638a7a410d2181de40bc9404a475" translate="yes" xml:space="preserve">
          <source>This error occurs in CI when using &lt;code&gt;cypress run&lt;/code&gt; without a valid Cypress binary cache installed on the system (on linux that&amp;rsquo;s &lt;code&gt;~/.cache/Cypress&lt;/code&gt;).</source>
          <target state="translated">如果在没有在系统上安装有效的Cypress二进制缓存的情况下使用 &lt;code&gt;cypress run&lt;/code&gt; ，则CI中会发生此错误（在 &lt;code&gt;~/.cache/Cypress&lt;/code&gt; Linux上）。</target>
        </trans-unit>
        <trans-unit id="994ed8888854f2fd39138521dca1154fcc2e6426" translate="yes" xml:space="preserve">
          <source>This event will yield you the &lt;code&gt;browser&lt;/code&gt; as an object, and &lt;code&gt;args&lt;/code&gt; which are the default arguments used to launch the browser.</source>
          <target state="translated">此事件将使您将 &lt;code&gt;browser&lt;/code&gt; 作为一个对象，而 &lt;code&gt;args&lt;/code&gt; 是用于启动浏览器的默认参数。</target>
        </trans-unit>
        <trans-unit id="8da72b14e09b80684c53759305f0abe88f30ec34" translate="yes" xml:space="preserve">
          <source>This event will yield you the &lt;code&gt;browser&lt;/code&gt; object, which gives you information about the browser, and the &lt;code&gt;launchOptions&lt;/code&gt; object, which allows you to modify how the browser is launched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75ec60c1bbc3a89890c61d440fd22825efc368e0" translate="yes" xml:space="preserve">
          <source>This example below will only override &lt;code&gt;setTimeout&lt;/code&gt; and &lt;code&gt;clearTimeout&lt;/code&gt; and leave the other time-related functions as they are.</source>
          <target state="translated">下面的示例仅覆盖 &lt;code&gt;setTimeout&lt;/code&gt; 和 &lt;code&gt;clearTimeout&lt;/code&gt; ,并保留其他与时间相关的功能。</target>
        </trans-unit>
        <trans-unit id="574a0ccd310c4f2791c6bc19528a452ac997edfb" translate="yes" xml:space="preserve">
          <source>This example comes from the recipe &lt;a href=&quot;https://github.com/cypress-io/cypress-example-recipes#testing-the-dom&quot;&gt;Root style&lt;/a&gt;. Imagine an application code where the method &lt;code&gt;setProperty&lt;/code&gt; is called to change a CSS variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3797bf9144c86e8afbc5c97d4ced710dd36795e" translate="yes" xml:space="preserve">
          <source>This example is shown in the branch &lt;code&gt;spec-and-single-mochawesome-json&lt;/code&gt; in &lt;a href=&quot;https://github.com/cypress-io/cypress-example-circleci-orb&quot;&gt;https://github.com/cypress-io/cypress-example-circleci-orb&lt;/a&gt;. We want to output a &amp;ldquo;spec&amp;rdquo; report to &lt;code&gt;STDOUT&lt;/code&gt;, save an individual Mochawesome JSON file per test file, and then combine all JSON reports into a single report.</source>
          <target state="translated">此示例显示在&lt;a href=&quot;https://github.com/cypress-io/cypress-example-circleci-orb&quot;&gt;https://github.com/cypress-io/cypress-example-circleci-orb&lt;/a&gt;的分支 &lt;code&gt;spec-and-single-mochawesome-json&lt;/code&gt; 中。我们要输出到&amp;ldquo;规范&amp;rdquo;的报告 &lt;code&gt;STDOUT&lt;/code&gt; ，每保存测试文件的个别Mochawesome JSON文件，然后将所有JSON报告合并成一个单一的报告。</target>
        </trans-unit>
        <trans-unit id="80bfd23661913e232e1a163192ec31dab8b9b283" translate="yes" xml:space="preserve">
          <source>This example overwrites &lt;a href=&quot;../commands/contains&quot;&gt;&lt;code&gt;.contains()&lt;/code&gt;&lt;/a&gt; to always have the &lt;code&gt;matchCase&lt;/code&gt; option set to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43e32c08a83188fd47e1f2906151fdee8dbb29bc" translate="yes" xml:space="preserve">
          <source>This example overwrites &lt;a href=&quot;../commands/screenshot&quot;&gt;&lt;code&gt;cy.screenshot()&lt;/code&gt;&lt;/a&gt; to always wait until a certain element is visible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36289e0b721daa2e30700a485da483d10e11f60b" translate="yes" xml:space="preserve">
          <source>This example overwrites &lt;code&gt;screenshot&lt;/code&gt; to always wait until a certain element is visible.</source>
          <target state="translated">本示例覆盖 &lt;code&gt;screenshot&lt;/code&gt; 以始终等待直到某个元素可见为止。</target>
        </trans-unit>
        <trans-unit id="84b75cfc84db6a7cb9f50830b12a942ddc2e841b" translate="yes" xml:space="preserve">
          <source>This first custom command is really just wrapping &lt;code&gt;cy.get(selector).click()&lt;/code&gt;. Going down this route would lead to creating dozens or even hundreds of custom commands to cover every possible combination of element interactions. It&amp;rsquo;s completely unnecessary.</source>
          <target state="translated">第一个自定义命令实际上只是包装 &lt;code&gt;cy.get(selector).click()&lt;/code&gt; 。走这条路线将导致创建数十个甚至数百个自定义命令，以涵盖元素交互的每种可能的组合。完全没有必要。</target>
        </trans-unit>
        <trans-unit id="450bcc1e13c871a286e1c1ffe73e202b86f8a1f0" translate="yes" xml:space="preserve">
          <source>This first custom command is wrapping &lt;code&gt;cy.get(selector).click()&lt;/code&gt;. Going down this route would lead to creating dozens or even hundreds of custom commands to cover every possible combination of element interactions. It&amp;rsquo;s completely unnecessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66709d66883cc344e666a243e5c265282a2f66a3" translate="yes" xml:space="preserve">
          <source>This first test below will pass and shows you that Cypress tries to prevent leaving commands behind in the queue in every test.</source>
          <target state="translated">下面的第一个测试将通过,并显示出Cypress在每次测试中都试图防止将命令留在队列中。</target>
        </trans-unit>
        <trans-unit id="5384797d7b8aa061a7fe215e3014a87afd4afe7f" translate="yes" xml:space="preserve">
          <source>This following section utilizes a concept known as &lt;a href=&quot;../core-concepts/variables-and-aliases&quot;&gt;Aliasing&lt;/a&gt;. If you&amp;rsquo;re new to Cypress you might want to check that out first.</source>
          <target state="translated">接下来的部分利用称为&lt;a href=&quot;../core-concepts/variables-and-aliases&quot;&gt;别名&lt;/a&gt;的概念。如果您不熟悉赛普拉斯，则可能需要先检查一下。</target>
        </trans-unit>
        <trans-unit id="cdf7aa1fdc9f5ad8166591e7a53d3e050c7b15d3" translate="yes" xml:space="preserve">
          <source>This gives you the best of both worlds - a fast error feedback loop when requests never go out and a much longer duration for the actual external response.</source>
          <target state="translated">这让你两全其美--当请求从未发出时,有一个快速的错误反馈循环,而实际外部响应的持续时间要长得多。</target>
        </trans-unit>
        <trans-unit id="8e984abbd486f40e4b83a59f61e6a6bb728ea6e9" translate="yes" xml:space="preserve">
          <source>This gives you the option to do things like override the &lt;code&gt;baseUrl&lt;/code&gt; or environment variables.</source>
          <target state="translated">这使您可以选择执行诸如覆盖 &lt;code&gt;baseUrl&lt;/code&gt; 或环境变量之类的操作。</target>
        </trans-unit>
        <trans-unit id="7de14dd549d0c4ac1646e9e757ca22fee0f2cb69" translate="yes" xml:space="preserve">
          <source>This guide assumes you already have your project running and &lt;a href=&quot;../dashboard/projects#Setup&quot;&gt;recording&lt;/a&gt; within Continuous Integration. If you have not set up your project yet, check out our &lt;a href=&quot;continuous-integration&quot;&gt;Continuous Integration guide&lt;/a&gt;.</source>
          <target state="translated">本指南假定您已经在持续集成中运行并&lt;a href=&quot;../dashboard/projects#Setup&quot;&gt;记录了&lt;/a&gt;项目。如果您尚未设置项目，请查看我们的&lt;a href=&quot;continuous-integration&quot;&gt;持续集成指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f5db417ee2d08131fe1bd60293e19a7173370710" translate="yes" xml:space="preserve">
          <source>This guide assumes you&amp;rsquo;ve already read our &lt;a href=&quot;../getting-started/installing-cypress&quot;&gt;Installing Cypress&lt;/a&gt; guide and installed Cypress as an &lt;code&gt;npm&lt;/code&gt; module. After installing you&amp;rsquo;ll be able to execute all of the commands in this document from your &lt;strong&gt;project root&lt;/strong&gt;.</source>
          <target state="translated">本指南假定您已经阅读了《&lt;a href=&quot;../getting-started/installing-cypress&quot;&gt;安装Cypress&lt;/a&gt;指南》并将Cypress作为 &lt;code&gt;npm&lt;/code&gt; 模块安装。安装后，您将能够从&lt;strong&gt;项目根目录&lt;/strong&gt;执行本文档中的所有命令。</target>
        </trans-unit>
        <trans-unit id="23ffdb834bcafffe7ee8957ab3cc85d02ae67258" translate="yes" xml:space="preserve">
          <source>This guide explains how to find what parts of your application code are covered by Cypress tests so you can have 100% confidence that your tests aren&amp;rsquo;t missing cruicial parts of your application. The collected information can be sent to external services, automatically run during pull request reviews, and integrated into CI.</source>
          <target state="translated">本指南说明了如何查找赛普拉斯测试所涵盖的应用程序代码的哪些部分，以便使您100％确信测试不会丢失应用程序的关键部分。收集的信息可以发送到外部服务，在拉取请求审核期间自动运行，并集成到CI中。</target>
        </trans-unit>
        <trans-unit id="486a389d6fb9cfc3cfed4c651f0e33830dc83379" translate="yes" xml:space="preserve">
          <source>This guide explains how to instrument the application source code using common tools. Then we show how to save the coverage information and generate reports using the &lt;a href=&quot;https://github.com/cypress-io/code-coverage&quot;&gt;&lt;code&gt;@cypress/code-coverage&lt;/code&gt;&lt;/a&gt; Cypress plugin. After reading this guide you should be able to better target your tests using the code coverage information.</source>
          <target state="translated">本指南说明了如何使用通用工具来检测应用程序源代码。然后，我们展示如何使用&lt;a href=&quot;https://github.com/cypress-io/code-coverage&quot;&gt; &lt;code&gt;@cypress/code-coverage&lt;/code&gt; &lt;/a&gt; Cypress插件保存覆盖率信息并生成报告。阅读本指南后，您应该能够使用代码覆盖率信息更好地确定测试目标。</target>
        </trans-unit>
        <trans-unit id="7e61a970aa8707e6efff0947eea6f0b515f8b79a" translate="yes" xml:space="preserve">
          <source>This guide explores many common patterns for writing good Cypress code that can handle even the most complex situations.</source>
          <target state="translated">本指南探讨了许多常见的模式,以编写好Cypress代码,即使是最复杂的情况也能处理。</target>
        </trans-unit>
        <trans-unit id="8d863ff08437a4477f1f2d5887b49d9f900c8112" translate="yes" xml:space="preserve">
          <source>This helps us uniquely identify your project. If you manually alter this, &lt;strong&gt;Cypress will no longer be able to identify your project or find the recorded builds for it&lt;/strong&gt;.</source>
          <target state="translated">这有助于我们唯一地识别您的项目。如果您手动更改此选项，&lt;strong&gt;赛普拉斯将不再能够识别您的项目或为其找到记录的版本&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="d3898e06d0b65989b6f12ff084eb3a12f8a3f6e0" translate="yes" xml:space="preserve">
          <source>This holds true for other special key combinations as well (that may be OS-specific). For example, on OSX, typing &lt;code&gt;ALT + SHIFT + K&lt;/code&gt; creates the special character &lt;code&gt;&lt;/code&gt;. Like with capitalization, &lt;code&gt;.type()&lt;/code&gt; will not output &lt;code&gt;&lt;/code&gt;, but the letter &lt;code&gt;k&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0131967fa7bae19e8e35274e046a4d4497764e8" translate="yes" xml:space="preserve">
          <source>This holds true for other special key combinations as well (that may be OS-specific). For example, on OSX, typing &lt;code&gt;ALT + SHIFT + K&lt;/code&gt; creates the special character &lt;code&gt;&lt;/code&gt;. Like with capitalization, &lt;code&gt;.type()&lt;/code&gt; will not output &lt;code&gt;&lt;/code&gt;, but the letter &lt;code&gt;k&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;Open an issue&lt;/a&gt; if you need modifier effects to be implemented.</source>
          <target state="translated">其他特殊键组合（可能是特定于操作系统的）也是如此。例如，在OSX上，键入 &lt;code&gt;ALT + SHIFT + K&lt;/code&gt; 会创建特殊字符 &lt;code&gt;&lt;/code&gt; 。与大写一样， &lt;code&gt;.type()&lt;/code&gt; 将不会输出 &lt;code&gt;&lt;/code&gt; ，但会输出字母 &lt;code&gt;k&lt;/code&gt; 。如果您需要实施修改器效果，请&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;打开一个问题&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="51b8d6d387613f057f58e9e27bfeb31b7ff6168f" translate="yes" xml:space="preserve">
          <source>This is a great way to &lt;em&gt;synchronously&lt;/em&gt; query for elements when debugging from Developer Tools.</source>
          <target state="translated">从开发人员工具进行调试时，这是&lt;em&gt;同步&lt;/em&gt;查询元素的好方法。</target>
        </trans-unit>
        <trans-unit id="362d62d5a45488560fa7b7f004366ae919b1423d" translate="yes" xml:space="preserve">
          <source>This is a less complicated example. Remember - you have the full power of Node at your disposal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b3b0521e3b98570ccae50fdf1b4baa4f16afd72" translate="yes" xml:space="preserve">
          <source>This is a relatively simple, straightforward test, but consider how much code has been covered by it, both on the client and the server!</source>
          <target state="translated">这是一个比较简单、直接的测试,但你想想,无论是在客户端还是在服务器上,它已经覆盖了多少代码了!</target>
        </trans-unit>
        <trans-unit id="fe468e21d4548acdb1c6534bd40ad0d47b37fae5" translate="yes" xml:space="preserve">
          <source>This is actually much more intuitive than it sounds.</source>
          <target state="translated">这其实比听起来要直观得多。</target>
        </trans-unit>
        <trans-unit id="1b50dfd2552d2381eb213119a8c24ed08a84b281" translate="yes" xml:space="preserve">
          <source>This is also a great opportunity to use &lt;a href=&quot;https://github.com/mochajs/mochajs.github.io/blob/master/index.md#root-level-hooks&quot;&gt;root level hooks in mocha&lt;/a&gt;. A perfect place to put these is in the &lt;a href=&quot;../core-concepts/writing-and-organizing-tests#Support-file&quot;&gt;&lt;code&gt;cypress/support/index.js&lt;/code&gt; file&lt;/a&gt; because it is always evaluated before any test code from your spec files.</source>
          <target state="translated">这也是&lt;a href=&quot;https://github.com/mochajs/mochajs.github.io/blob/master/index.md#root-level-hooks&quot;&gt;在Mocha中&lt;/a&gt;使用根级别钩子的绝佳机会。放置这些&lt;a href=&quot;../core-concepts/writing-and-organizing-tests#Support-file&quot;&gt;文件&lt;/a&gt;的理想位置是 &lt;code&gt;cypress/support/index.js&lt;/code&gt; 文件，因为它总是在规格文件中的任何测试代码之前进行评估。</target>
        </trans-unit>
        <trans-unit id="2493b234352cea3152aeec7ecbe290f832cbf4e4" translate="yes" xml:space="preserve">
          <source>This is an &lt;strong&gt;excellent&lt;/strong&gt; opportunity for you to &lt;strong&gt;use&lt;/strong&gt; your application in the state the tests finished! This enables you to write &lt;strong&gt;partial tests&lt;/strong&gt; that drive your application step by step, writing your test and application code at the same time.</source>
          <target state="translated">这是您在测试完成的状态下&lt;strong&gt;使用&lt;/strong&gt;应用程序的&lt;strong&gt;绝好&lt;/strong&gt;机会！这使您能够编写&lt;strong&gt;部分测试&lt;/strong&gt;，以逐步驱动您的应用程序，同时编写测试和应用程序代码。&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="73680df5ea2c8602ef7ff481daf3b10324c141d0" translate="yes" xml:space="preserve">
          <source>This is an alias of &lt;a href=&quot;location&quot;&gt;&lt;code&gt;cy.location('hash')&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">这是&lt;a href=&quot;location&quot;&gt; &lt;code&gt;cy.location('hash')&lt;/code&gt; &lt;/a&gt;的别名</target>
        </trans-unit>
        <trans-unit id="027a8a41afe59d5100370ece415b0888b1dab9c6" translate="yes" xml:space="preserve">
          <source>This is an alias of &lt;a href=&quot;location&quot;&gt;&lt;code&gt;cy.location('href')&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">这是&lt;a href=&quot;location&quot;&gt; &lt;code&gt;cy.location('href')&lt;/code&gt; &lt;/a&gt;的别名</target>
        </trans-unit>
        <trans-unit id="3090660a8417722f61bd0153ff0a62997ee753bd" translate="yes" xml:space="preserve">
          <source>This is because many commands have a built in &lt;a href=&quot;#Default-Assertions&quot;&gt;Default Assertion&lt;/a&gt; which offer you a high level of guarantee.</source>
          <target state="translated">这是因为许多命令具有内置的&lt;a href=&quot;#Default-Assertions&quot;&gt;默认断言&lt;/a&gt;，可为您提供高级别的保证。</target>
        </trans-unit>
        <trans-unit id="416bd3baca145a080a73741b07189669d2f382b6" translate="yes" xml:space="preserve">
          <source>This is difficult to do (if not impossible) without making changes to your application. You could use a library like &lt;a href=&quot;https://github.com/angular/zone.js/&quot;&gt;Zone.js&lt;/a&gt;, but even that does not capture every async possibility.</source>
          <target state="translated">如果不对应用程序进行更改，很难做到这一点（如果不是不可能的话）。您可以使用&lt;a href=&quot;https://github.com/angular/zone.js/&quot;&gt;Zone.js之&lt;/a&gt;类的库，但是即使那样也不能捕获所有异步的可能性。</target>
        </trans-unit>
        <trans-unit id="c81c954c2ff8806221c8d9bad49ede745ce35336" translate="yes" xml:space="preserve">
          <source>This is especially useful when running in CI. Typically we see users using the default &lt;code&gt;spec&lt;/code&gt; reporter to show up in &lt;code&gt;stdout&lt;/code&gt; but then also generate an actual report file for &lt;code&gt;junit&lt;/code&gt;.</source>
          <target state="translated">在CI中运行时，这尤其有用。通常，我们会看到用户使用默认的 &lt;code&gt;spec&lt;/code&gt; 报告器显示在 &lt;code&gt;stdout&lt;/code&gt; 中，然后还会为 &lt;code&gt;junit&lt;/code&gt; 生成实际的报告文件。</target>
        </trans-unit>
        <trans-unit id="937a71c3b5de9dc4ee2f1f1174e918095025ba20" translate="yes" xml:space="preserve">
          <source>This is helpful to modify, remove, or add your own arguments.</source>
          <target state="translated">这对修改、删除或添加自己的论据很有帮助。</target>
        </trans-unit>
        <trans-unit id="4f480a1f1a006462f1044dbf874aff6ecf664e89" translate="yes" xml:space="preserve">
          <source>This is helpful when writing tests from the perspective of a user interacting with your app. They just know they want to click the button labeled &amp;ldquo;Submit&amp;rdquo;, they have no idea that it has a &lt;code&gt;type&lt;/code&gt; attribute of &lt;code&gt;submit&lt;/code&gt;, or a CSS class of &lt;code&gt;my-submit-button&lt;/code&gt;.</source>
          <target state="translated">从用户与您的应用进行交互的角度编写测试时，这很有用。他们只知道他们想点击标有&amp;ldquo;提交&amp;rdquo;按钮，他们不知道，它有一个 &lt;code&gt;type&lt;/code&gt; 的属性 &lt;code&gt;submit&lt;/code&gt; ，或CSS类的 &lt;code&gt;my-submit-button&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b792e8040301bd0acb2b395f7ea8abde6c91d0e4" translate="yes" xml:space="preserve">
          <source>This is known as a &lt;code&gt;timeout&lt;/code&gt;, and most commands can be customized with specific timeout periods (&lt;a href=&quot;../references/configuration#Timeouts&quot;&gt;the default timeout is 4 seconds&lt;/a&gt;). These Commands will list a &lt;code&gt;timeout&lt;/code&gt; option in their API documentation, detailing how to set the number of milliseconds you want to continue to try finding the element.</source>
          <target state="translated">这称为 &lt;code&gt;timeout&lt;/code&gt; ，大多数命令都可以自定义特定的超时时间（&lt;a href=&quot;../references/configuration#Timeouts&quot;&gt;默认超时为4秒&lt;/a&gt;）。这些命令将在其API文档中列出一个 &lt;code&gt;timeout&lt;/code&gt; 选项，详细说明如何设置要继续尝试查找元素的毫秒数。</target>
        </trans-unit>
        <trans-unit id="9241cf6c65f3e1ca58164db9dd575dd8751913e6" translate="yes" xml:space="preserve">
          <source>This is probably the hardest situation to test because it&amp;rsquo;s usually happening due to another cause. You will need to figure out why your JavaScript code is redirecting. Perhaps you&amp;rsquo;re not logged in, and you need to handle that setup elsewhere? Perhaps you&amp;rsquo;re using a Single sign-on (SSO) server and you just need to read the previous section about working around that?</source>
          <target state="translated">这可能是最难测试的情况，因为它通常是由其他原因引起的。您将需要弄清楚为什么您的JavaScript代码被重定向。也许您尚未登录，并且需要在其他地方处理该设置？也许您使用的是单点登录（SSO）服务器，而您只需要阅读上一节有关解决此问题的内容？</target>
        </trans-unit>
        <trans-unit id="16934bd6f87e620c0972f9bb2d9978c401b12b41" translate="yes" xml:space="preserve">
          <source>This is something Cypress will eventually do, which will match how Chrome&amp;rsquo;s responsive mobile browsing simulation works. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;Open an issue&lt;/a&gt; if you need this to be fixed.</source>
          <target state="translated">赛普拉斯最终将做到这一点，与Chrome的响应式移动浏览模拟的工作方式相匹配。如果您需要解决此&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;问题&lt;/a&gt;，请打开一个问题。</target>
        </trans-unit>
        <trans-unit id="a26334daece3d32e2bf8919a447a066e4ae159bc" translate="yes" xml:space="preserve">
          <source>This is something Cypress will eventually do, which will match how Chrome&amp;rsquo;s responsive mobile browsing simulation works. Follow &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/7075&quot;&gt;#7075&lt;/a&gt; if you need this supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dcc7f6d030b58ad59ae4203de8bd28466d52447" translate="yes" xml:space="preserve">
          <source>This is the big secret of Cypress: we&amp;rsquo;ve taken our favorite pattern for composing JavaScript code, Promises, and built them right into the fabric of Cypress. Above, when we say we&amp;rsquo;re enqueuing actions to be taken later, we could restate that as &amp;ldquo;adding Promises to a chain of Promises&amp;rdquo;.</source>
          <target state="translated">这是赛普拉斯的最大秘密：我们采用了我们最喜欢的模式来编写JavaScript代码Promises，并将其直接构建到赛普拉斯的结构中。上面，当我们说我们要排队等待以后采取的措施时，我们可以重申为&amp;ldquo;将承诺添加到承诺链中&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="3753eacdd29e84d634ea0cb12683093d1ef9dc7e" translate="yes" xml:space="preserve">
          <source>This is the heart of flaky tests. At Cypress we have designed our API to combat this type of flakiness at every step.</source>
          <target state="translated">这是片状测试的核心。在Cypress,我们设计了我们的API,以打击这种类型的片状测试的每一步。</target>
        </trans-unit>
        <trans-unit id="0c5538cc1bd8f312a53608d9587f80a4d91e9323" translate="yes" xml:space="preserve">
          <source>This is the internal API for controlling what get&amp;rsquo;s printed to the Command Log.</source>
          <target state="translated">这是内部API，用于控制将什么内容打印到命令日志中。</target>
        </trans-unit>
        <trans-unit id="bb71fb0e5b6458a3a3eb3b93c5f85351e8539b15" translate="yes" xml:space="preserve">
          <source>This is the internal API for controlling what gets printed to the Command Log.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1613df640b73f82e16e95dfa4a713357d7d07a31" translate="yes" xml:space="preserve">
          <source>This is useful against GraphQL endpoints to wait for specific Queries and Mutations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45ca3bef48f4448ec8509512e12d846cbd196204" translate="yes" xml:space="preserve">
          <source>This is useful when you&amp;rsquo;re debugging and just want to add a single &amp;ldquo;catch-all&amp;rdquo; event to track down things like test failures, or uncaught exceptions from your application.</source>
          <target state="translated">这在调试时仅想添加一个&amp;ldquo;全部捕获&amp;rdquo;事件以跟踪诸如测试失败或应用程序中未捕获的异常之类的事件时很有用。</target>
        </trans-unit>
        <trans-unit id="b188e0d93f1c48f7ac3cdada5298a2a3a0c9d878" translate="yes" xml:space="preserve">
          <source>This is useful when you&amp;rsquo;re debugging and want to add a single &amp;ldquo;catch-all&amp;rdquo; event to track down things like test failures, or uncaught exceptions from your application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e17a8d466ede6a0c1ff320a52b0da9ab959f1373" translate="yes" xml:space="preserve">
          <source>This is useful when you&amp;rsquo;re polling a server for a response that may take awhile to complete.</source>
          <target state="translated">当您轮询服务器以获取可能需要一段时间才能完成的响应时，此功能很有用。</target>
        </trans-unit>
        <trans-unit id="ee441496733ae8f12a6ec82934302047c786dd8b" translate="yes" xml:space="preserve">
          <source>This is usually unnecessary because Cypress is already configured to swap out a &lt;code&gt;baseUrl&lt;/code&gt; that both &lt;a href=&quot;../commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; use. Set the &lt;code&gt;baseUrl&lt;/code&gt; configuration property in your &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html&quot;&gt;configuration&lt;/a&gt; file (&lt;code&gt;cypress.json&lt;/code&gt; by default) and override it with the &lt;code&gt;CYPRESS_BASE_URL&lt;/code&gt; environment variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c81f14f69a0d08483eccd3e2f9835a57c779454a" translate="yes" xml:space="preserve">
          <source>This is usually unnecessary because Cypress is already configured to swap out baseUrl&amp;rsquo;s that both &lt;code&gt;cy.visit()&lt;/code&gt; and &lt;code&gt;cy.request()&lt;/code&gt; use. Just set the &lt;code&gt;baseUrl&lt;/code&gt; config property in &lt;code&gt;cypress.json&lt;/code&gt; and override it with environment variable &lt;code&gt;CYPRESS_BASE_URL&lt;/code&gt;.</source>
          <target state="translated">这通常是不必要的，因为赛普拉斯已经配置为替换 &lt;code&gt;cy.visit()&lt;/code&gt; 和 &lt;code&gt;cy.request()&lt;/code&gt; 都使用的baseUrl。只需在 &lt;code&gt;cypress.json&lt;/code&gt; 中设置 &lt;code&gt;baseUrl&lt;/code&gt; config属性，并用环境变量 &lt;code&gt;CYPRESS_BASE_URL&lt;/code&gt; 覆盖它即可。</target>
        </trans-unit>
        <trans-unit id="b7438b0034ef2f49cda2d43dc6868ebe59057e7d" translate="yes" xml:space="preserve">
          <source>This is why all of our examples use the regular &lt;code&gt;function () {}&lt;/code&gt; syntax as opposed to the lambda &amp;ldquo;fat arrow&amp;rdquo; syntax &lt;code&gt;() =&amp;gt; {}&lt;/code&gt;.</source>
          <target state="translated">这就是为什么我们所有示例都使用常规 &lt;code&gt;function () {}&lt;/code&gt; 语法而不是lambda&amp;ldquo;胖箭头&amp;rdquo;语法 &lt;code&gt;() =&amp;gt; {}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e40f1ff06970e07212ca7d1cf8bdc73d20b2d6ad" translate="yes" xml:space="preserve">
          <source>This isn&amp;rsquo;t exactly how a user would type into a date input, but is a workaround since date input support varies between browsers and the format varies based on locale. &lt;code&gt;yyyy-MM-dd&lt;/code&gt; is the format required by &lt;a href=&quot;https://www.w3.org/TR/html/infrastructure.html#dates-and-times&quot;&gt;the W3 spec&lt;/a&gt; and is what the input&amp;rsquo;s &lt;code&gt;value&lt;/code&gt; will be set to regardless of browser or locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50cafd2a717c2013a8367ce226bec9d3d9b1784c" translate="yes" xml:space="preserve">
          <source>This isn&amp;rsquo;t exactly how a user would type into a date input, but is a workaround since date input support varies between browsers and the format varies based on locale. &lt;code&gt;yyyy-MM-dd&lt;/code&gt; is the format required by &lt;a href=&quot;https://www.w3.org/TR/html/infrastructure.html#sec-dates&quot;&gt;the W3 spec&lt;/a&gt; and is what the input&amp;rsquo;s &lt;code&gt;value&lt;/code&gt; will be set to regardless of browser or locale.</source>
          <target state="translated">这与用户键入日期输入的方式不同，但是这是一种解决方法，因为日期输入支持在不同的浏览器中会有所不同，并且格式会根据区域设置而有所不同。 &lt;code&gt;yyyy-MM-dd&lt;/code&gt; 是&lt;a href=&quot;https://www.w3.org/TR/html/infrastructure.html#sec-dates&quot;&gt;W3规范&lt;/a&gt;要求的格式，并且是无论浏览器或区域设置如何，输入 &lt;code&gt;value&lt;/code&gt; 都将设置为的值。</target>
        </trans-unit>
        <trans-unit id="56d6913d4d90022dcb7f14c4fc76dccdbb9f5bdc" translate="yes" xml:space="preserve">
          <source>This isn&amp;rsquo;t exactly how a user would type into a month input, but is a workaround since month input support varies between browsers and the format varies based on locale. &lt;code&gt;yyyy-MM&lt;/code&gt; is the format required by &lt;a href=&quot;https://www.w3.org/TR/html/infrastructure.html#months&quot;&gt;the W3 spec&lt;/a&gt; and is what the input&amp;rsquo;s &lt;code&gt;value&lt;/code&gt; will be set to regardless of browser or locale.</source>
          <target state="translated">这并不是用户输入月份输入的确切方式，而是一种解决方法，因为浏览器之间月份输入的支持不同，并且格式根据区域设置而有所不同。 &lt;code&gt;yyyy-MM&lt;/code&gt; 是&lt;a href=&quot;https://www.w3.org/TR/html/infrastructure.html#months&quot;&gt;W3规范&lt;/a&gt;要求的格式，并且无论浏览器或区域设置如何，输入 &lt;code&gt;value&lt;/code&gt; 都将设置为yyyy-MM。</target>
        </trans-unit>
        <trans-unit id="0c41513fff4a312d05254c97b1ee7ef44e64dbf7" translate="yes" xml:space="preserve">
          <source>This isn&amp;rsquo;t exactly how a user would type into a week input, but is a workaround since week input support varies between browsers and the format varies based on locale. &lt;code&gt;yyyy-Www&lt;/code&gt; is the format required by &lt;a href=&quot;https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#valid-week-string&quot;&gt;the W3 spec&lt;/a&gt; and is what the input&amp;rsquo;s &lt;code&gt;value&lt;/code&gt; will be set to regardless of browser or locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb901bfb0f0a8bc8800561d4444df892e7d03325" translate="yes" xml:space="preserve">
          <source>This isn&amp;rsquo;t exactly how a user would type into a week input, but is a workaround since week input support varies between browsers and the format varies based on locale. &lt;code&gt;yyyy-Www&lt;/code&gt; is the format required by &lt;a href=&quot;https://www.w3.org/TR/html/infrastructure.html#valid-week-string&quot;&gt;the W3 spec&lt;/a&gt; and is what the input&amp;rsquo;s &lt;code&gt;value&lt;/code&gt; will be set to regardless of browser or locale.</source>
          <target state="translated">这并不是用户在一周输入中的确切输入方式，而是一种解决方法，因为周输入支持在不同的浏览器中会有所不同，并且格式会根据区域设置而变化。 &lt;code&gt;yyyy-Www&lt;/code&gt; 是&lt;a href=&quot;https://www.w3.org/TR/html/infrastructure.html#valid-week-string&quot;&gt;W3规范&lt;/a&gt;要求的格式，并且是无论浏览器或区域设置如何，输入 &lt;code&gt;value&lt;/code&gt; 都将设置为的值。</target>
        </trans-unit>
        <trans-unit id="2617afa6cdf460caeefc66bad292f940a0fe3c98" translate="yes" xml:space="preserve">
          <source>This lets us reuse our DOM queries for faster tests when the element is still in the DOM, and it automatically handles re-querying the DOM for us when it is not immediately found in the DOM. This is particularly helpful when dealing with front end frameworks that do a lot of re-rendering!</source>
          <target state="translated">当元素还在DOM中时,这让我们可以重用我们的DOM查询来进行更快速的测试,当在DOM中不能立即找到元素时,它可以自动为我们处理重新查询DOM。这在处理前端框架时特别有帮助,因为前端框架需要做大量的重渲染。</target>
        </trans-unit>
        <trans-unit id="c8a4292c1ee5dcfa1ce525c64b1320cb2717c366" translate="yes" xml:space="preserve">
          <source>This limitation exists because Cypress switches to the domain under each specific test when it runs.</source>
          <target state="translated">这种限制的存在是因为赛普拉斯在运行时,会切换到每个特定测试下的域。</target>
        </trans-unit>
        <trans-unit id="a4ab29b9f338e4896f2d56159be7f3ea3b0eb64e" translate="yes" xml:space="preserve">
          <source>This machine is sending different environment parameters than the first machine that started this parallel run.</source>
          <target state="translated">这台机器发送的环境参数与启动本次并行运行的第一台机器不同。</target>
        </trans-unit>
        <trans-unit id="d7287dd7490355f6bbed13566ea5931ebfad1e07" translate="yes" xml:space="preserve">
          <source>This makes Cypress robust and immune to dozens of common problems that occur in other testing tools. Consider all the circumstances that could cause querying a DOM element to fail:</source>
          <target state="translated">这使得Cypress强大,对其他测试工具中出现的几十个常见问题具有免疫力。考虑一下所有可能导致查询DOM元素失败的情况。</target>
        </trans-unit>
        <trans-unit id="a3c6624973b93aac7a03e0c0e00944970b402d26" translate="yes" xml:space="preserve">
          <source>This makes for a productive development experience because you can add and edit tests as you&amp;rsquo;re implementing a feature and the Cypress user interface will always reflect the results of your latest edits.</source>
          <target state="translated">因为您可以在实现功能时添加和编辑测试，并且赛普拉斯的用户界面将始终反映您最新编辑的结果，所以这将带来富有成效的开发体验。</target>
        </trans-unit>
        <trans-unit id="0147dcdb70fd37741942d1f43bef0fcdb3d665dd" translate="yes" xml:space="preserve">
          <source>This may not work exactly as you are expecting. As you may remember from the &lt;a href=&quot;../core-concepts/introduction-to-cypress&quot;&gt;Introduction to Cypress&lt;/a&gt;, &lt;code&gt;cy&lt;/code&gt; commands enqueue an action to be taken later. Can you see what the test above will do given that perspective?</source>
          <target state="translated">这可能无法完全按照您的预期工作。您可能还记得《&lt;a href=&quot;../core-concepts/introduction-to-cypress&quot;&gt;Cypress简介》中的内容&lt;/a&gt;， &lt;code&gt;cy&lt;/code&gt; 命令使操作排队，以便稍后执行。从这个角度来看，您能看到上面的测试会做什么吗？</target>
        </trans-unit>
        <trans-unit id="062d06e3107076e15ff8f4f923613eb36257a315" translate="yes" xml:space="preserve">
          <source>This means Cypress will now wait up to 20 seconds for the external server to respond to this XHR. If no response is detected, you will get an error message that looks like this:</source>
          <target state="translated">这意味着赛普拉斯现在将等待长达20秒的时间,等待外部服务器对该XHR做出响应。如果没有检测到响应,你将得到一个类似于这样的错误信息。</target>
        </trans-unit>
        <trans-unit id="01c5ed9fb27f63027e813cd9ccd0ac180d96f8f5" translate="yes" xml:space="preserve">
          <source>This means Cypress will now wait up to 20 seconds for the external server to respond to this request. If no response is detected, you will get an error message that looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d899e3c172fd29e29ee20eed6c45d53d6586c20f" translate="yes" xml:space="preserve">
          <source>This means that instead of resetting the database, or seeding it with the state we want, you can just force the server to respond with &lt;strong&gt;whatever&lt;/strong&gt; you want it to. In this way, we not only prevent needing to synchronize the state between the server and browser, but we also prevent mutating state from our tests. That means tests won&amp;rsquo;t build up state that may affect other tests.</source>
          <target state="translated">这意味着，而不是重置数据库，或者我们想要的状态播种它，你可以强制服务器响应与&lt;strong&gt;任何&lt;/strong&gt;你想让它。这样，我们不仅可以避免在服务器和浏览器之间同步状态，而且还可以防止测试中的状态发生变化。这意味着测试不会建立可能影响其他测试的状态。</target>
        </trans-unit>
        <trans-unit id="15f552af7b476efada5ccbe19d1e003e55815913" translate="yes" xml:space="preserve">
          <source>This means that when you begin waiting for an aliased XHR, Cypress will wait up to 5 seconds for a matching XHR to be created. If no matching XHR is found, you will get an error message that looks like this:</source>
          <target state="translated">这意味着,当你开始等待一个别名的XHR时,赛普拉斯将等待长达5秒的时间来创建一个匹配的XHR。如果没有找到匹配的XHR,你会收到类似这样的错误信息。</target>
        </trans-unit>
        <trans-unit id="4f24977d0e87342872e59e80a5681fe9f5e8cfaf" translate="yes" xml:space="preserve">
          <source>This means that when you begin waiting for an aliased request, Cypress will wait up to 5 seconds for a matching request to be created. If no matching request is found, you will get an error message that looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c235428eedeb2633f9060e29cabe9344635dec46" translate="yes" xml:space="preserve">
          <source>This means you can do things like store multiple configuration files and switch between them like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c325bd0857cc8cda3777f44fcc54da309e8e609" translate="yes" xml:space="preserve">
          <source>This means you can take advantage of &lt;code&gt;*&lt;/code&gt; and &lt;code&gt;**&lt;/code&gt; glob support. This makes it &lt;em&gt;much&lt;/em&gt; easier to route against dynamic segments without having to build up a complex &lt;code&gt;RegExp&lt;/code&gt;.</source>
          <target state="translated">这意味着您可以利用 &lt;code&gt;*&lt;/code&gt; 和 &lt;code&gt;**&lt;/code&gt; glob支持。这使得针对动态段进行路由&lt;em&gt;变得&lt;/em&gt;更加容易，而无需构建复杂的 &lt;code&gt;RegExp&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ecd0bd2485807bbf241a08719355878cf83ae353" translate="yes" xml:space="preserve">
          <source>This message means that Cypress encountered an error when compiling and/or bundling your test file. Cypress automatically compiles and bundles your test code so you can use ES2015, CoffeeScript, modules, etc.</source>
          <target state="translated">此消息意味着Cypress在编译和/或捆绑你的测试文件时遇到了错误。Cypress会自动编译和捆绑你的测试代码,这样你就可以使用ES2015、CoffeeScript、模块等。</target>
        </trans-unit>
        <trans-unit id="cb55575187f576f80eac0bd90ecbd928dd31fb14" translate="yes" xml:space="preserve">
          <source>This message means that Cypress was unable to find tests in the specified file. You&amp;rsquo;ll likely get this message if you have an empty test file and have not yet written any tests.</source>
          <target state="translated">该消息表示赛普拉斯无法在指定文件中找到测试。如果测试文件为空并且尚未编写任何测试，则可能会收到此消息。</target>
        </trans-unit>
        <trans-unit id="fbe65c9ea60d05bea293f697ec5b63a2a1bba347" translate="yes" xml:space="preserve">
          <source>This message means you tried to execute one or more Cypress commands outside of a currently running test. Cypress has to be able to associate commands to a specific test.</source>
          <target state="translated">这条消息意味着你试图在当前运行的测试之外执行一个或多个Cypress命令。赛普拉斯必须能够将命令与特定的测试联系起来。</target>
        </trans-unit>
        <trans-unit id="26473ed6f3277cbaabd952641ad6cb2eef61f768" translate="yes" xml:space="preserve">
          <source>This open source plugin compares the baseline and the current images side by side within the Cypress Test Runner if pixel difference is above the threshold; notice how the baseline image (&lt;em&gt;Expected result&lt;/em&gt;) has the label text with the line through, while the new image (&lt;em&gt;Actual result&lt;/em&gt;) does not have it.</source>
          <target state="translated">如果像素差异大于阈值，则此开源插件会在Cypress Test Runner中并排比较基线和当前图像。请注意，基线图像（&amp;ldquo; &lt;em&gt;预期结果&amp;rdquo;&lt;/em&gt;）如何使标签文本带有直行，而新图像（&amp;ldquo; &lt;em&gt;实际结果&amp;rdquo;&lt;/em&gt;）则没有。</target>
        </trans-unit>
        <trans-unit id="b1874ce110d1b622e8bf6df18a651ee21a552fa7" translate="yes" xml:space="preserve">
          <source>This overrides the default auto-positioning based on the element itself. Useful for events like &lt;code&gt;mousemove&lt;/code&gt; where you need the position to be outside the element itself.</source>
          <target state="translated">这将覆盖基于元素本身的默认自动定位。对于诸如 &lt;code&gt;mousemove&lt;/code&gt; 之类的事件很有用，您需要将位置放置在元素本身之外。</target>
        </trans-unit>
        <trans-unit id="18fce04b31ee489e860ee35e6ca5a37c91bfada2" translate="yes" xml:space="preserve">
          <source>This page is currently a work in progress and is not fully documented.</source>
          <target state="translated">本页目前是一个正在进行中的工作,没有完整的记录。</target>
        </trans-unit>
        <trans-unit id="d49acb671f06c70483fdc4771de2c9b01b581769" translate="yes" xml:space="preserve">
          <source>This part of the API is documented here.</source>
          <target state="translated">API的这部分内容在这里有记载。</target>
        </trans-unit>
        <trans-unit id="d4ee7aebde7b2957a142c631b053ee06988aee05" translate="yes" xml:space="preserve">
          <source>This pattern is especially useful for projects in a monorepo. Each segment of the monorepo can be assigned its own group, and larger segments can be parallelized to speed up their testing.</source>
          <target state="translated">这种模式对于单体项目特别有用。单一项目的每一个部分都可以被分配到自己的组,较大的部分可以被并行化,以加快其测试速度。</target>
        </trans-unit>
        <trans-unit id="d20be6f286a4b55595d0a69af5286da52cd24b61" translate="yes" xml:space="preserve">
          <source>This principle applies to everything in Cypress. Do not test what does not need testing. It is slow, brittle, and adds zero value. Only test the underlying thing that causes the behavior you care about testing.</source>
          <target state="translated">这一原则适用于赛普拉斯的一切。不要测试不需要测试的东西。这很慢,很脆,而且增加的价值为零。只测试导致你关心测试的行为的底层事物。</target>
        </trans-unit>
        <trans-unit id="0085003eb564d3c84be846ee443b880929c5b062" translate="yes" xml:space="preserve">
          <source>This queries the entire &lt;code&gt;document&lt;/code&gt; for the content.</source>
          <target state="translated">这将查询整个 &lt;code&gt;document&lt;/code&gt; 的内容。</target>
        </trans-unit>
        <trans-unit id="031f0350d47d961e920a47e00907ab6be3352d0c" translate="yes" xml:space="preserve">
          <source>This release marks a major change in the underlying algorithms used to prevent testing flake. It is a major goal of Cypress to combat and prevent &lt;strong&gt;all&lt;/strong&gt; test flake. These algorithm changes go a long way towards making this a reality, and have been months in the making.</source>
          <target state="translated">此版本标志着用于防止测试剥落的基础算法发生了重大变化。防止和防止&lt;strong&gt;所有&lt;/strong&gt;测试剥落是赛普拉斯的主要目标。这些算法的改变对实现这一目标大有帮助，并且已经进行了几个月。</target>
        </trans-unit>
        <trans-unit id="12dc69acb18ebdb8295c65ef78b40c1e72a11b98" translate="yes" xml:space="preserve">
          <source>This scrolling logic only applies to &lt;a href=&quot;#Actionability&quot;&gt;commands that are actionable above&lt;/a&gt;. &lt;strong&gt;We do not scroll elements&lt;/strong&gt; into view when using DOM commands such as &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../api/commands/find&quot;&gt;&lt;code&gt;.find()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此滚动逻辑仅适用于&lt;a href=&quot;#Actionability&quot;&gt;上面可操作的命令&lt;/a&gt;。使用&lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../api/commands/find&quot;&gt; &lt;code&gt;.find()&lt;/code&gt; 之&lt;/a&gt;类的DOM命令时，&lt;strong&gt;我们不会将元素滚动&lt;/strong&gt;到视图中。</target>
        </trans-unit>
        <trans-unit id="44d6a6a59cd93a62ba3def39d82319ec28c11d0b" translate="yes" xml:space="preserve">
          <source>This scrolls the &lt;code&gt;window&lt;/code&gt;.</source>
          <target state="translated">这将滚动 &lt;code&gt;window&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0a81d3ecd936d4a0e1a59e4ac38ed570cfd8e6ae" translate="yes" xml:space="preserve">
          <source>This section refers to your operating system&amp;rsquo;s environment variables, &lt;em&gt;not&lt;/em&gt;&lt;a href=&quot;../guides/environment-variables&quot;&gt;Cypress environment variables&lt;/a&gt;</source>
          <target state="translated">本节指的是操作系统的环境变量，&lt;em&gt;而不是&lt;/em&gt;&lt;a href=&quot;../guides/environment-variables&quot;&gt;赛普拉斯环境变量&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="18b2bf87c76063db55cce706eb4eb526e575a0b8" translate="yes" xml:space="preserve">
          <source>This security vulnerability exists &lt;strong&gt;even if&lt;/strong&gt; your web server forces a &lt;code&gt;301 redirect&lt;/code&gt; back to the HTTPS site. The original HTTP request was still made once, exposing insecure session information.</source>
          <target state="translated">&lt;strong&gt;即使&lt;/strong&gt;您的Web服务器强制 &lt;code&gt;301 redirect&lt;/code&gt; 回到HTTPS站点，也存在此安全漏洞。原始HTTP请求仍然发出一次，公开了不安全的会话信息。</target>
        </trans-unit>
        <trans-unit id="12403c31a93ebd5156b8be6bc1e9a47fda0d2e36" translate="yes" xml:space="preserve">
          <source>This service has now been fully integrated into the Desktop Application. There is a new on-boarding process that helps you setup projects for recording.</source>
          <target state="translated">这项服务现在已经完全整合到桌面应用程序中。有一个新的入职流程,可以帮助您设置项目进行记录。</target>
        </trans-unit>
        <trans-unit id="ff80366bdd429c06afb5d5ecf245be6bfd01c8b8" translate="yes" xml:space="preserve">
          <source>This setting changes the display size of the screen and does not affect the &lt;code&gt;viewportWidth&lt;/code&gt; and &lt;code&gt;viewportHeight&lt;/code&gt; set in the &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html&quot;&gt;configuration&lt;/a&gt;. The &lt;code&gt;viewportWidth&lt;/code&gt; and &lt;code&gt;viewportHeight&lt;/code&gt; only affect the size of the application under test displayed inside the Test Runner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d09642a6e1d006cbc5410327b8aa5d639c52c4a" translate="yes" xml:space="preserve">
          <source>This single test has achieved 100% code coverage - every function and every statement has been executed at least once. Of course in real world applications, achieving 100% code coverage requires multiple tests.</source>
          <target state="translated">这个单项测试已经实现了100%的代码覆盖率--每个函数和每条语句都至少执行了一次。当然在实际应用中,实现100%的代码覆盖率需要进行多次测试。</target>
        </trans-unit>
        <trans-unit id="53155aafe0d1b0cb4b1ae2fb540a7e7ae14216e9" translate="yes" xml:space="preserve">
          <source>This strategy is useful because if you add &lt;code&gt;cypress.env.json&lt;/code&gt; to your &lt;code&gt;.gitignore&lt;/code&gt; file, the values in here can be different for each developer machine.</source>
          <target state="translated">此策略很有用，因为如果将 &lt;code&gt;cypress.env.json&lt;/code&gt; 添加到 &lt;code&gt;.gitignore&lt;/code&gt; 文件中，则对于每个开发人员计算机，此处的值可能会有所不同。</target>
        </trans-unit>
        <trans-unit id="85e8c09c493e496ce61478ce7f468f70ff8ee2e6" translate="yes" xml:space="preserve">
          <source>This trade-off means it makes it a little bit harder to communicate with the back end - like your server or database. You will not be able to connect or import those server-side libraries or modules directly. Although you can of course require &lt;code&gt;node_modules&lt;/code&gt; which can be used in the browser. Additionally, you have the ability to use Node to import or talk directly to your back end scripts using &lt;a href=&quot;../../api/plugins/writing-a-plugin&quot;&gt;our Plugins API&lt;/a&gt; or &lt;a href=&quot;../../api/commands/task&quot;&gt;&lt;code&gt;cy.task()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">这种权衡意味着与后端（例如您的服务器或数据库）进行通信变得更加困难。您将无法直接连接或导入那些服务器端库或模块。尽管您当然可以要求可以在浏览器中使用的 &lt;code&gt;node_modules&lt;/code&gt; 。此外，您还可以使用Node通过&lt;a href=&quot;../../api/plugins/writing-a-plugin&quot;&gt;我们的Plugins API&lt;/a&gt;或&lt;a href=&quot;../../api/commands/task&quot;&gt; &lt;code&gt;cy.task()&lt;/code&gt; &lt;/a&gt;导入或直接与后端脚本对话。</target>
        </trans-unit>
        <trans-unit id="ad1692a5205711f0259bd9a24e583d51b4a07fca" translate="yes" xml:space="preserve">
          <source>This update represents mostly a lot of internal structure changes. We swapped out the underlying Desktop architecture and refactored all of the back end code to prepare for an open source release.</source>
          <target state="translated">这次更新主要代表了很多内部结构的变化。我们换掉了底层的桌面架构,并重构了所有的后端代码,为开源发布做准备。</target>
        </trans-unit>
        <trans-unit id="bde9d67f7ea1b6bbffc28ee2eb2e11ccd499a09f" translate="yes" xml:space="preserve">
          <source>This utility may be useful when writing &lt;a href=&quot;../plugins/writing-a-plugin&quot;&gt;plugins&lt;/a&gt; for Cypress and you want to determine if a value is a valid Cypress chainable.</source>
          <target state="translated">当为赛普拉斯编写&lt;a href=&quot;../plugins/writing-a-plugin&quot;&gt;插件时&lt;/a&gt;，如果您想确定一个值是否为有效的赛普拉斯可链接链，此实用程序可能会很有用。</target>
        </trans-unit>
        <trans-unit id="c7fb18ad55637b4d42e7ee8e4e55a10f2c56dc30" translate="yes" xml:space="preserve">
          <source>This value should be automatically detected for most CI providers and is unnecessary to define unless Cypress is unable to determine it.</source>
          <target state="translated">对于大多数CI提供商来说,这个值应该是自动检测到的,除非赛普拉斯无法确定,否则没有必要定义。</target>
        </trans-unit>
        <trans-unit id="460c60e8297ce00bb79384a1b188340507c62d70" translate="yes" xml:space="preserve">
          <source>This version of Node has &lt;strong&gt;nothing to do&lt;/strong&gt; with your locally installed versions. Therefore you have to write Node code which is compatible with this version.</source>
          <target state="translated">此版本的Node 与本地安装的版本&lt;strong&gt;无关&lt;/strong&gt;。因此，您必须编写与此版本兼容的Node代码。</target>
        </trans-unit>
        <trans-unit id="458d2eb63e4e07f929764431b90c0c1732aa7aa3" translate="yes" xml:space="preserve">
          <source>This version of Node has &lt;strong&gt;nothing to do&lt;/strong&gt; with your locally installed versions. Therefore you may want to write Node code which is compatible with this version or document that the user of your plugin will need to set a specific &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Node-version&quot;&gt;&lt;code&gt;nodeVersion&lt;/code&gt;&lt;/a&gt; in their configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd7496a752fe65eae6fe303dd223860cb20e04a0" translate="yes" xml:space="preserve">
          <source>This waiting period is called the &lt;strong&gt;run completion delay&lt;/strong&gt; and it begins after the last known CI machine has completed as shown in the diagram below:</source>
          <target state="translated">该等待时间称为&lt;strong&gt;运行完成延迟&lt;/strong&gt;，它在最后一个已知的CI计算机完成后开始，如下图所示：</target>
        </trans-unit>
        <trans-unit id="fdb244e4d607ad9461b14dfafbd9b9a5418ec674" translate="yes" xml:space="preserve">
          <source>This will automatically &lt;strong&gt;prefix&lt;/strong&gt;&lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; commands with this baseUrl.</source>
          <target state="translated">这将使用此&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt;自动为&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;和cy.request（）命令添加&lt;strong&gt;前缀&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="fdf8303387051e38b6dda431a745ea682a363a4f" translate="yes" xml:space="preserve">
          <source>This will clear out all installed versions of Cypress that may be cached on your machine.</source>
          <target state="translated">这将清除您的机器上可能缓存的所有已安装的赛普拉斯版本。</target>
        </trans-unit>
        <trans-unit id="702164fa3d2706b7e206a0c8a954ebf0bcccfa22" translate="yes" xml:space="preserve">
          <source>This will create separate XML files in the &lt;code&gt;results&lt;/code&gt; folder. You can then merge the output reports using a separate step using 3rd party tool. For example, for &lt;a href=&quot;https://github.com/adamgruber/mochawesome&quot;&gt;Mochawesome&lt;/a&gt; reporter, there is &lt;a href=&quot;https://github.com/antontelesh/mochawesome-merge&quot;&gt;mochawesome-merge&lt;/a&gt; tool.</source>
          <target state="translated">这将在 &lt;code&gt;results&lt;/code&gt; 文件夹中创建单独的XML文件。然后，您可以使用第三方工具使用单独的步骤合并输出报告。例如，对于&lt;a href=&quot;https://github.com/adamgruber/mochawesome&quot;&gt;Mochawesome&lt;/a&gt;记者，有&lt;a href=&quot;https://github.com/antontelesh/mochawesome-merge&quot;&gt;mochawesome-merge&lt;/a&gt;工具。</target>
        </trans-unit>
        <trans-unit id="81652586dedbdddba4f333e7507b06fa12f2f254" translate="yes" xml:space="preserve">
          <source>This will install Cypress locally as a dev dependency for your project.</source>
          <target state="translated">这将在本地安装Cypress作为你的项目的开发依赖。</target>
        </trans-unit>
        <trans-unit id="562c045e2090c70631e9ee513370681d27245006" translate="yes" xml:space="preserve">
          <source>This will query inside of the &lt;code&gt;&amp;lt;#checkout-container&amp;gt;&lt;/code&gt; element.</source>
          <target state="translated">这将在 &lt;code&gt;&amp;lt;#checkout-container&amp;gt;&lt;/code&gt; 元素内部进行查询。</target>
        </trans-unit>
        <trans-unit id="bf7d8c8672a29fbd843543b08f1be727b64d3de9" translate="yes" xml:space="preserve">
          <source>This will scroll the &lt;code&gt;&amp;lt;#checkout-items&amp;gt;&lt;/code&gt; element.</source>
          <target state="translated">这将滚动 &lt;code&gt;&amp;lt;#checkout-items&amp;gt;&lt;/code&gt; 元素。</target>
        </trans-unit>
        <trans-unit id="3f7e6174502ca4e71353d0fdc59742a115acf22e" translate="yes" xml:space="preserve">
          <source>This will set the height and width throughout the duration of the tests, then return it to the default &lt;code&gt;viewportHeight&lt;/code&gt; and &lt;code&gt;viewportWidth&lt;/code&gt; when complete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3838f6980902467f5951cb7c9281394b1303f24f" translate="yes" xml:space="preserve">
          <source>This will set the timeout throughout the duration of the tests, then return it to the default &lt;code&gt;execTimeout&lt;/code&gt; when complete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c8c134bbe5d879e028bc1975a535d01e136f6b7" translate="yes" xml:space="preserve">
          <source>This will set the timeout throughout the duration of the tests, then return it to the default &lt;code&gt;taskTimeout&lt;/code&gt; when complete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a685a05ffe4ec927b0f3930ea8cd549596b1585" translate="yes" xml:space="preserve">
          <source>This will take you to the directory in your file system where your App Data is stored. If you cannot open Cypress, search your file system for a directory named &lt;code&gt;cy&lt;/code&gt; whose content should look something like this:</source>
          <target state="translated">这将带您到文件系统中存储您的App Data的目录。如果无法打开Cypress，请在文件系统中搜索名为 &lt;code&gt;cy&lt;/code&gt; 的目录，其目录应类似于以下内容：</target>
        </trans-unit>
        <trans-unit id="53030ab92091f2959fc411e78c94fbff8b824e20" translate="yes" xml:space="preserve">
          <source>This would enable you to do things like this:</source>
          <target state="translated">这将使你能够做这样的事情。</target>
        </trans-unit>
        <trans-unit id="fdc82c657fa4b0f3a1abbb474c304fff3a5607dd" translate="yes" xml:space="preserve">
          <source>This would match the following blacklisted hosts:</source>
          <target state="translated">这将符合以下黑名单上的主机。</target>
        </trans-unit>
        <trans-unit id="1c14ba4323cc66553ff74c0e8548fd3051b05554" translate="yes" xml:space="preserve">
          <source>Those folder paths refer to the &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;default folder paths&lt;/a&gt;. If you&amp;rsquo;ve configured Cypress to use different folder paths then the folders specific to your configuration will be watched.</source>
          <target state="translated">这些文件夹路径是指&lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;默认文件夹路径&lt;/a&gt;。如果您已将赛普拉斯配置为使用其他文件夹路径，则将监视特定于您的配置的文件夹。</target>
        </trans-unit>
        <trans-unit id="a203f3c60b0f975939f6724e53fff39f0e5d8faa" translate="yes" xml:space="preserve">
          <source>Though Cypress has built out &lt;a href=&quot;../core-concepts/test-runner&quot;&gt;an excellent Test Runner&lt;/a&gt; to help you understand what is happening in your application and your tests, there&amp;rsquo;s no replacing all the amazing work browser teams have done on their built-in development tools. Once again, we see that Cypress goes &lt;em&gt;with&lt;/em&gt; the flow of the modern ecosystem, opting to leverage these tools wherever possible.</source>
          <target state="translated">尽管赛普拉斯已经建立了&lt;a href=&quot;../core-concepts/test-runner&quot;&gt;出色的Test Runner，&lt;/a&gt;可以帮助您了解应用程序和测试中发生的事情，但是并不能取代浏览器团队在其内置开发工具上所做的所有出色工作。我们再次看到赛普拉斯&lt;em&gt;与&lt;/em&gt;现代生态系统一起发展，并选择尽可能利用这些工具。</target>
        </trans-unit>
        <trans-unit id="dd4ced4e9a7f501a1d4a421e58f7a96f07565df1" translate="yes" xml:space="preserve">
          <source>Though it may not look like much, this upgrade was a long time in the making. There were limitations in the way we were currently handling headless / CI builds which restricted our ability to make updates or fix bugs. Additionally CI runs would randomly crash for no good reason. We decided to split out the headless / CI process into its own independent Chromium application which is now independently controlled, and is much more reliable. This upgrade enables us to handle CI features coming down the pipe and was necessary for moving forward.</source>
          <target state="translated">虽然看起来不大,但这次升级却酝酿了很久。目前我们处理无头/CI构建的方式有一些限制,这限制了我们进行更新或修复错误的能力。此外,CI运行会无缘无故地随机崩溃。我们决定将无头/CI进程分离出来,形成独立的Chromium应用程序,现在它是独立控制的,并且更加可靠。这次升级使我们能够处理即将到来的CI功能,并且是前进的必要条件。</target>
        </trans-unit>
        <trans-unit id="05042fa7041f8b8530048a78d997204314cb21fa" translate="yes" xml:space="preserve">
          <source>Throw explicit error for &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;undefined&lt;/code&gt;, and &lt;code&gt;&quot;&quot;&lt;/code&gt; arguments to &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/24&quot;&gt;#24&lt;/a&gt;.</source>
          <target state="translated">向&lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; 的&lt;/a&gt; &lt;code&gt;null&lt;/code&gt; ， &lt;code&gt;undefined&lt;/code&gt; 和 &lt;code&gt;&quot;&quot;&lt;/code&gt; 参数抛出显式错误。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/24&quot;&gt;＃24&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="958bd43bc0312835eb96d1524baaf0627ec311d3" translate="yes" xml:space="preserve">
          <source>Throw on &lt;a href=&quot;../../api/commands/select&quot;&gt;&lt;code&gt;.select()&lt;/code&gt;&lt;/a&gt; when it cannot find a matching &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt;. Also throw when &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; or a matching &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; is disabled. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/91&quot;&gt;#91&lt;/a&gt;.</source>
          <target state="translated">当找不到匹配的 &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; 时，抛出&lt;a href=&quot;../../api/commands/select&quot;&gt; &lt;code&gt;.select()&lt;/code&gt; &lt;/a&gt;。禁用 &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; 或匹配的 &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; 时也会抛出该异常。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/91&quot;&gt;＃91&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a073142787a1c947c30eef810fce18423c0b95d1" translate="yes" xml:space="preserve">
          <source>Thus the Cypress &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get&lt;/code&gt;&lt;/a&gt; command has to be smarter and expect the application to potentially update. The &lt;code&gt;cy.get()&lt;/code&gt; queries the application&amp;rsquo;s DOM, finds the elements that match the selector, and then tries the assertion that follows it (in our case &lt;code&gt;should('have.length', 2)&lt;/code&gt;) against the list of found elements.</source>
          <target state="translated">因此，Cypress &lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get&lt;/code&gt; &lt;/a&gt;命令必须更智能，并期望应用程序可能会更新。该 &lt;code&gt;cy.get()&lt;/code&gt; 查询应用程序的DOM，发现选择匹配的元素，然后尝试它后面的断言（在我们的例子 &lt;code&gt;should('have.length', 2)&lt;/code&gt; ）对发现的元素列表。</target>
        </trans-unit>
        <trans-unit id="6c82e6dd86807ee3db07e3c82bec1ae1ce00b08b" translate="yes" xml:space="preserve">
          <source>Time</source>
          <target state="translated">Time</target>
        </trans-unit>
        <trans-unit id="fb377762792866dda43ce836874a2f28a7e96eac" translate="yes" xml:space="preserve">
          <source>Time Inputs</source>
          <target state="translated">时间输入</target>
        </trans-unit>
        <trans-unit id="88dc2535a499ed3b3baa756d368f078268ecf304" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.blur()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">等待 &lt;code&gt;.blur()&lt;/code&gt; 解析，然后再&lt;a href=&quot;#Timeouts&quot;&gt;超时的时间&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e964b583c6245a8054356ca2602db72f45be6dee" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.check()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">等待 &lt;code&gt;.check()&lt;/code&gt; 之前等待.check（）解析的&lt;a href=&quot;#Timeouts&quot;&gt;时间&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8714d68e6a41993a7a02e0d2ef5349b3e22bee97" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.children()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">等待 &lt;code&gt;.children()&lt;/code&gt; 解析，然后再&lt;a href=&quot;#Timeouts&quot;&gt;超时的时间&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="42766190d5f779a4954bcbb9d0224bd6fdb40b0d" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.clear()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">等待 &lt;code&gt;.clear()&lt;/code&gt; 解决之前&lt;a href=&quot;#Timeouts&quot;&gt;超时的时间&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="65268e932e8c9b1e866d2e17a080138ae6a60d70" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.click()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">等待&lt;a href=&quot;#Timeouts&quot;&gt;超时&lt;/a&gt;之前等待 &lt;code&gt;.click()&lt;/code&gt; 解析的时间</target>
        </trans-unit>
        <trans-unit id="3c7ab1a4adedb3f88bd7975a6d8cacf2ae95686c" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.closest()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">等待 &lt;code&gt;.closest()&lt;/code&gt; 之前等待.closest（）解析的&lt;a href=&quot;#Timeouts&quot;&gt;时间&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1304e9c7f6886fd442252d07b899ac84222857a9" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.contains()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">等待 &lt;code&gt;.contains()&lt;/code&gt; 解决之前&lt;a href=&quot;#Timeouts&quot;&gt;超时的时间&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="420d4a0dfd4eb785a630b5557178281d091b5322" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.dblclick()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">等待 &lt;code&gt;.dblclick()&lt;/code&gt; 解析后再&lt;a href=&quot;#Timeouts&quot;&gt;超时的时间&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1e74f719ac6b1951693dfc64835b6fb3446d51a6" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.eq()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">等待 &lt;code&gt;.eq()&lt;/code&gt; 解析，然后再&lt;a href=&quot;#Timeouts&quot;&gt;超时的时间&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5a43fc4e1662ada497daff7acee2c0536b65e19f" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.filter()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">等待 &lt;code&gt;.filter()&lt;/code&gt; 之前等待.filter（）解析的&lt;a href=&quot;#Timeouts&quot;&gt;时间&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="388def00bf32877141ecfc44a3a2b9dc39a85f01" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.find()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">等待 &lt;code&gt;.find()&lt;/code&gt; 前等待.find（）解析的&lt;a href=&quot;#Timeouts&quot;&gt;时间&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9a6b781cd6bef6b4d558024a0c641b2fc1c3d915" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.first()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">等待&lt;a href=&quot;#Timeouts&quot;&gt;超时&lt;/a&gt;之前等待 &lt;code&gt;.first()&lt;/code&gt; 解析的时间</target>
        </trans-unit>
        <trans-unit id="db750ae3c2ed952c29a8422390030149b1cc6750" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.focus()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">等待 &lt;code&gt;.focus()&lt;/code&gt; 解决之前&lt;a href=&quot;#Timeouts&quot;&gt;超时的时间&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3f38bb64c3fb466172860cca43b478619c72bc39" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.invoke()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a92aa5d45d13fa137a0e2d2265bc86bc9cfbf121" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.its()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="165f56b81fc569b196c1a161d610591ddce3b2e5" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.last()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">等待 &lt;code&gt;.last()&lt;/code&gt; 解析，然后再&lt;a href=&quot;#Timeouts&quot;&gt;超时的时间&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5be1fbad6d7e9ad23221c675719e687049574f88" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.next()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">等待&lt;a href=&quot;#Timeouts&quot;&gt;超时&lt;/a&gt;之前等待 &lt;code&gt;.next()&lt;/code&gt; 解析的时间</target>
        </trans-unit>
        <trans-unit id="9ec5b908c2803245b687f0838f5eb4acc14c5078" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.nextAll()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">等待 &lt;code&gt;.nextAll()&lt;/code&gt; 之前等待.nextAll（）解析的&lt;a href=&quot;#Timeouts&quot;&gt;时间&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4c4f6affa595413b128383e184ff26391c9d4d2c" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.nextUntil()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">等待&lt;a href=&quot;#Timeouts&quot;&gt;超时&lt;/a&gt;之前等待 &lt;code&gt;.nextUntil()&lt;/code&gt; 解析的时间</target>
        </trans-unit>
        <trans-unit id="6a054f442cd6beddb622e8e8b413cf8b37c68671" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.not()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">等待&lt;a href=&quot;#Timeouts&quot;&gt;超时&lt;/a&gt;之前等待 &lt;code&gt;.not()&lt;/code&gt; 解析的时间</target>
        </trans-unit>
        <trans-unit id="5549ec7792821c25ef4654b7a284633c02aa8d96" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.parent()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">等待 &lt;code&gt;.parent()&lt;/code&gt; 之前等待.parent（）解析的&lt;a href=&quot;#Timeouts&quot;&gt;时间&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7d618b75427451f917b68090a20cd882d8902c37" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.parents()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">等待 &lt;code&gt;.parents()&lt;/code&gt; 之前等待.parents（）解决的&lt;a href=&quot;#Timeouts&quot;&gt;时间&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="49afe551ecca44d819db4bb4320d50434717f654" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.parentsUntil()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">等待 &lt;code&gt;.parentsUntil()&lt;/code&gt; 解决之前&lt;a href=&quot;#Timeouts&quot;&gt;超时的时间&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2cfdb0e942557ddb11e9cca3de6cb6c7df1587fe" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.prev()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">等待 &lt;code&gt;.prev()&lt;/code&gt; 解析，然后再&lt;a href=&quot;#Timeouts&quot;&gt;超时的时间&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="410a3e98bfe875fe057e50db80a7c80bb5f99cb9" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.prevAll()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">等待 &lt;code&gt;.prevAll()&lt;/code&gt; 之前等待.prevAll（）解析的&lt;a href=&quot;#Timeouts&quot;&gt;时间&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="99f468fc82bed12efc1d6260bca2dbcccf0ad488" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.prevUntil()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">等待 &lt;code&gt;.prevUntil()&lt;/code&gt; 解析，然后再&lt;a href=&quot;#Timeouts&quot;&gt;超时的时间&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9fe4b0bfe7d09bf9b201d824d88750d98852d852" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.rightclick()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b73a9bc8db50f3af07dc4c4cd94bb2474eeff58b" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.screenshot()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">等待 &lt;code&gt;.screenshot()&lt;/code&gt; 之前等待.screenshot（）解析的&lt;a href=&quot;#Timeouts&quot;&gt;时间&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="584ccb8fd673724e5045b7e6c5809fa6a7566382" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.scrollIntoView()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">等待 &lt;code&gt;.scrollIntoView()&lt;/code&gt; 解析，然后再&lt;a href=&quot;#Timeouts&quot;&gt;超时的时间&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b09e275d45641fc6631c2bbbd2c89d02423a232" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.scrollTo()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">等待 &lt;code&gt;.scrollTo()&lt;/code&gt; 之前等待.scrollTo（）解析的&lt;a href=&quot;#Timeouts&quot;&gt;时间&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="de788277124c1cf9010adfd939cf84ed676c94ab" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.select()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">等待 &lt;code&gt;.select()&lt;/code&gt; 解析，然后再&lt;a href=&quot;#Timeouts&quot;&gt;超时的时间&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="65aa08d31a1e48f8a51ac5984a927546fd516295" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.siblings()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">等待 &lt;code&gt;.siblings()&lt;/code&gt; 之前等待.siblings（）解析的&lt;a href=&quot;#Timeouts&quot;&gt;时间&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8d3880cb58a04fb6b7a625660713643f33416ab4" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.spread()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">等待 &lt;code&gt;.spread()&lt;/code&gt; 解析，然后再&lt;a href=&quot;#Timeouts&quot;&gt;超时的时间&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cc89004ffc7de6417ea577a496ca395776e25bad" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.submit()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">等待 &lt;code&gt;.submit()&lt;/code&gt; 解决之前&lt;a href=&quot;#Timeouts&quot;&gt;超时的时间&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c4117b83b56d69fca2378861d045a33b6ce1b0ce" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.then()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">等待 &lt;code&gt;.then()&lt;/code&gt; 解析，然后再&lt;a href=&quot;#Timeouts&quot;&gt;超时的时间&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e0cf637f982bf1b2da1a81d816c3139428f1bf30" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.trigger()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">等待 &lt;code&gt;.trigger()&lt;/code&gt; 之前等待.trigger（）解析的&lt;a href=&quot;#Timeouts&quot;&gt;时间&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b5c89f7a8fe1531f08b84d61ecc6842ed5158df" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.type()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">等待&lt;a href=&quot;#Timeouts&quot;&gt;超时&lt;/a&gt;之前等待 &lt;code&gt;.type()&lt;/code&gt; 解析的时间</target>
        </trans-unit>
        <trans-unit id="dd67bc722544edc6f172216ff8d9bd7c5826a064" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;.uncheck()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">等待 &lt;code&gt;.uncheck()&lt;/code&gt; 解决之前&lt;a href=&quot;#Timeouts&quot;&gt;超时的时间&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f2c5c4ec69581238a100de43d5af9dddf3d5563d" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.clearCookie()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">在&lt;a href=&quot;#Timeouts&quot;&gt;超时&lt;/a&gt;之前等待 &lt;code&gt;cy.clearCookie()&lt;/code&gt; 解决的时间</target>
        </trans-unit>
        <trans-unit id="d4053ef4b697063b4748025fa77e497c4f331855" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.clearCookies()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">在&lt;a href=&quot;#Timeouts&quot;&gt;超时&lt;/a&gt;之前等待 &lt;code&gt;cy.clearCookies()&lt;/code&gt; 解决的时间</target>
        </trans-unit>
        <trans-unit id="d3d6db5918d4f148887a0e3c95ce9f9b6ff011ce" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.document()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">在&lt;a href=&quot;#Timeouts&quot;&gt;超时&lt;/a&gt;之前等待 &lt;code&gt;cy.document()&lt;/code&gt; 解决的时间</target>
        </trans-unit>
        <trans-unit id="e75155a30f951accc30abc04aeedc4275825b60c" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.exec()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">等待 &lt;code&gt;cy.exec()&lt;/code&gt; 解析后&lt;a href=&quot;#Timeouts&quot;&gt;超时的时间&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="352b3ef87cfaf15c14d8a1c3e35bbbaf26b527b1" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.fixture()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">在&lt;a href=&quot;#Timeouts&quot;&gt;超时&lt;/a&gt;之前等待 &lt;code&gt;cy.fixture()&lt;/code&gt; 解决的时间</target>
        </trans-unit>
        <trans-unit id="0bf773b6fc1b29d34746ddda1de614cb59aa805d" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.focused()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">在&lt;a href=&quot;#Timeouts&quot;&gt;超时&lt;/a&gt;之前等待 &lt;code&gt;cy.focused()&lt;/code&gt; 解决的时间</target>
        </trans-unit>
        <trans-unit id="9e3b71d0171d3d10899909459a165c2dc1af0e2f" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.get()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">在&lt;a href=&quot;#Timeouts&quot;&gt;超时&lt;/a&gt;之前等待 &lt;code&gt;cy.get()&lt;/code&gt; 解析的时间</target>
        </trans-unit>
        <trans-unit id="53b1fe4a9c07e99e385dcf0404d30fedf5854e01" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.getCookie()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">在&lt;a href=&quot;#Timeouts&quot;&gt;超时&lt;/a&gt;之前等待 &lt;code&gt;cy.getCookie()&lt;/code&gt; 解决的时间</target>
        </trans-unit>
        <trans-unit id="505e9a66550a11fc305c7683ffd0c1c2b5b20521" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.getCookies()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">在&lt;a href=&quot;#Timeouts&quot;&gt;超时&lt;/a&gt;之前等待 &lt;code&gt;cy.getCookies()&lt;/code&gt; 解决的时间</target>
        </trans-unit>
        <trans-unit id="53ff75ff1641cbdbc2e36036c0dd13e1145beaa2" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.go()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">在&lt;a href=&quot;#Timeouts&quot;&gt;超时&lt;/a&gt;之前等待 &lt;code&gt;cy.go()&lt;/code&gt; 解决的时间</target>
        </trans-unit>
        <trans-unit id="b8bd35228efe7bb55db2782771cd3032c54d12fc" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.hash()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">在&lt;a href=&quot;#Timeouts&quot;&gt;超时&lt;/a&gt;之前等待 &lt;code&gt;cy.hash()&lt;/code&gt; 解决的时间</target>
        </trans-unit>
        <trans-unit id="9eab7aa933d4d9be345ef1205e5b365b2e535fa8" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.location()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">在&lt;a href=&quot;#Timeouts&quot;&gt;超时&lt;/a&gt;之前等待 &lt;code&gt;cy.location()&lt;/code&gt; 解决的时间</target>
        </trans-unit>
        <trans-unit id="cb4c680019f6d8740c8f5bb74deea7d37a9a6921" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.readFile()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">在&lt;a href=&quot;#Timeouts&quot;&gt;超时&lt;/a&gt;之前等待 &lt;code&gt;cy.readFile()&lt;/code&gt; 解析的时间</target>
        </trans-unit>
        <trans-unit id="aea5e14348cc5c6d94364feec8c429d8d62118cf" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.reload()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">在&lt;a href=&quot;#Timeouts&quot;&gt;超时&lt;/a&gt;之前等待 &lt;code&gt;cy.reload()&lt;/code&gt; 解决的时间</target>
        </trans-unit>
        <trans-unit id="b6e78c691f4793cade51b7c754c1635dce547fef" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.request()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">在&lt;a href=&quot;#Timeouts&quot;&gt;超时&lt;/a&gt;之前等待 &lt;code&gt;cy.request()&lt;/code&gt; 解决的时间</target>
        </trans-unit>
        <trans-unit id="d1eac61a26416247dab8c13a4179f97bf42e600f" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.root()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">在&lt;a href=&quot;#Timeouts&quot;&gt;超时&lt;/a&gt;之前等待 &lt;code&gt;cy.root()&lt;/code&gt; 解决的时间</target>
        </trans-unit>
        <trans-unit id="b6784df3d3f8f434396c622aba69e10a5fe3178f" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.setCookie()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">在&lt;a href=&quot;#Timeouts&quot;&gt;超时&lt;/a&gt;之前等待 &lt;code&gt;cy.setCookie()&lt;/code&gt; 解决的时间</target>
        </trans-unit>
        <trans-unit id="63095a61eabe65c5fbfcd67ae7faf8c0177fa798" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.task()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">在&lt;a href=&quot;#Timeouts&quot;&gt;超时&lt;/a&gt;之前等待 &lt;code&gt;cy.task()&lt;/code&gt; 解决的时间</target>
        </trans-unit>
        <trans-unit id="a43ea5f07f0780bd49601af102865e8166ec4795" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.title()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">等待 &lt;code&gt;cy.title()&lt;/code&gt; 解析后&lt;a href=&quot;#Timeouts&quot;&gt;超时的时间&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8b5e67ea51611f1769bfc9a11b1f4203b0706b07" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.url()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">在&lt;a href=&quot;#Timeouts&quot;&gt;超时&lt;/a&gt;之前等待 &lt;code&gt;cy.url()&lt;/code&gt; 解析的时间</target>
        </trans-unit>
        <trans-unit id="b3fa63bd72e57894dc0b1ac8d09273c67d54a64f" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.visit()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">等待 &lt;code&gt;cy.visit()&lt;/code&gt; 解析后再&lt;a href=&quot;#Timeouts&quot;&gt;超时的时间&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0cd89775a57ef2c3eca328667913bd52968cdf8b" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.wait()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">在&lt;a href=&quot;#Timeouts&quot;&gt;超时&lt;/a&gt;之前等待 &lt;code&gt;cy.wait()&lt;/code&gt; 解决的时间</target>
        </trans-unit>
        <trans-unit id="e7c4a53d839c7221e60163da8643405315c31ee4" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.window()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">等待 &lt;code&gt;cy.window()&lt;/code&gt; 解析后再&lt;a href=&quot;#Timeouts&quot;&gt;超时的时间&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e3525850b0ceddc318ca744537e813b31ef3ec47" translate="yes" xml:space="preserve">
          <source>Time to wait for &lt;code&gt;cy.wrap()&lt;/code&gt; to resolve before &lt;a href=&quot;#Timeouts&quot;&gt;timing out&lt;/a&gt;</source>
          <target state="translated">在&lt;a href=&quot;#Timeouts&quot;&gt;超时&lt;/a&gt;之前等待 &lt;code&gt;cy.wrap()&lt;/code&gt; 解决的时间</target>
        </trans-unit>
        <trans-unit id="534f9712426325b6e244c8d63eebb857c08f63fa" translate="yes" xml:space="preserve">
          <source>Time travel</source>
          <target state="translated">时间旅行</target>
        </trans-unit>
        <trans-unit id="0d8585da73a6dab1f6352a0b062f08dc502b59da" translate="yes" xml:space="preserve">
          <source>Time traveling snapshots now preserve the styles of empty &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; tags with programmatically inserted CSS rules. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1226&quot;&gt;#1226&lt;/a&gt;.</source>
          <target state="translated">现在，时空旅行快照会以编程方式插入的CSS规则保留空的 &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; 标签的样式。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1226&quot;&gt;＃1226&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="95e7882d490e20f536a21a152bb7b88fca473d5c" translate="yes" xml:space="preserve">
          <source>Time, in milliseconds, to wait for &lt;code&gt;page transition events&lt;/code&gt; or &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/go&quot;&gt;&lt;code&gt;cy.go()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/reload&quot;&gt;&lt;code&gt;cy.reload()&lt;/code&gt;&lt;/a&gt; commands to fire their page &lt;code&gt;load&lt;/code&gt; events. Network requests are limited by the underlying operating system, and may still time out if this value is increased.</source>
          <target state="translated">等待 &lt;code&gt;page transition events&lt;/code&gt; 或&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../api/commands/go&quot;&gt; &lt;code&gt;cy.go()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../api/commands/reload&quot;&gt; &lt;code&gt;cy.reload()&lt;/code&gt; &lt;/a&gt;命令触发其页面 &lt;code&gt;load&lt;/code&gt; 事件的时间（以毫秒为单位）。网络请求受基础操作系统的限制，如果增加此值，则可能仍会超时。</target>
        </trans-unit>
        <trans-unit id="8e4546e794b872db0e7f830414bef8b6efa3d2ef" translate="yes" xml:space="preserve">
          <source>Time, in milliseconds, to wait for a system command to finish executing during a &lt;a href=&quot;../../api/commands/exec&quot;&gt;&lt;code&gt;cy.exec()&lt;/code&gt;&lt;/a&gt; command</source>
          <target state="translated">在&lt;a href=&quot;../../api/commands/exec&quot;&gt; &lt;code&gt;cy.exec()&lt;/code&gt; &lt;/a&gt;命令期间等待系统命令完成执行的时间（以毫秒为单位）</target>
        </trans-unit>
        <trans-unit id="0344658b2d3334f23a6c04344746702ee05e7675" translate="yes" xml:space="preserve">
          <source>Time, in milliseconds, to wait for a task to finish executing during a &lt;a href=&quot;../../api/commands/task&quot;&gt;&lt;code&gt;cy.task()&lt;/code&gt;&lt;/a&gt; command</source>
          <target state="translated">在&lt;a href=&quot;../../api/commands/task&quot;&gt; &lt;code&gt;cy.task()&lt;/code&gt; &lt;/a&gt;命令期间等待任务完成执行的时间（以毫秒为单位）</target>
        </trans-unit>
        <trans-unit id="3c5906723e4f284c898154f299293697c6bfcd46" translate="yes" xml:space="preserve">
          <source>Time, in milliseconds, to wait for an XHR request to go out in a &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt; command</source>
          <target state="translated">等待&lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt;命令中的XHR请求发出的时间（以毫秒为单位）</target>
        </trans-unit>
        <trans-unit id="6d1f46641205758c830e1f2ce073f3383d3a8c2d" translate="yes" xml:space="preserve">
          <source>Time, in milliseconds, to wait until a response in a &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/fixture&quot;&gt;&lt;code&gt;cy.fixture()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/getcookie&quot;&gt;&lt;code&gt;cy.getCookie()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/getcookies&quot;&gt;&lt;code&gt;cy.getCookies()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/setcookie&quot;&gt;&lt;code&gt;cy.setCookie()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/clearcookie&quot;&gt;&lt;code&gt;cy.clearCookie()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/clearcookies&quot;&gt;&lt;code&gt;cy.clearCookies()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../../api/commands/screenshot&quot;&gt;&lt;code&gt;cy.screenshot()&lt;/code&gt;&lt;/a&gt; commands</source>
          <target state="translated">等待直到&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../api/commands/fixture&quot;&gt; &lt;code&gt;cy.fixture()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../api/commands/getcookie&quot;&gt; &lt;code&gt;cy.getCookie()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../api/commands/getcookies&quot;&gt; &lt;code&gt;cy.getCookies()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../api/commands/setcookie&quot;&gt; &lt;code&gt;cy.setCookie()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../api/commands/clearcookie&quot;&gt; &lt;code&gt;cy.clearCookie()&lt;/code&gt; &lt;/a&gt;的响应所花费的时间（以毫秒为单位）。 clearCookie（），&lt;a href=&quot;../../api/commands/clearcookies&quot;&gt; &lt;code&gt;cy.clearCookies()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../api/commands/screenshot&quot;&gt; &lt;code&gt;cy.screenshot()&lt;/code&gt; &lt;/a&gt;命令</target>
        </trans-unit>
        <trans-unit id="bcb9984691d12ff5b389e5efd5cbdee4b151c661" translate="yes" xml:space="preserve">
          <source>Time, in milliseconds, to wait until most DOM based commands are considered timed out</source>
          <target state="translated">等待的时间,以毫秒为单位,直到大多数基于DOM的命令被视为超时。</target>
        </trans-unit>
        <trans-unit id="4182206cc797a1bcb67e79ac48df54d729afa0e6" translate="yes" xml:space="preserve">
          <source>Timeline View</source>
          <target state="translated">时间线查看</target>
        </trans-unit>
        <trans-unit id="27a4f2c5a6aa7d957af2668e0ec53e32944aba26" translate="yes" xml:space="preserve">
          <source>Timeouts</source>
          <target state="translated">Timeouts</target>
        </trans-unit>
        <trans-unit id="b76904852aa459926a2540777944b33a445df8b2" translate="yes" xml:space="preserve">
          <source>Timeouts can be modified per command and this will affect all default assertions and any assertions chained after that command.</source>
          <target state="translated">每条命令的超时时间都可以修改,这将影响所有默认断言和该命令之后的任何断言链。</target>
        </trans-unit>
        <trans-unit id="c04ed1238a14de2b02d7fd14a7e9605bb1b10b96" translate="yes" xml:space="preserve">
          <source>Timestamps</source>
          <target state="translated">Timestamps</target>
        </trans-unit>
        <trans-unit id="c1ed8235cc72d513556db585f63b8b50c409da7a" translate="yes" xml:space="preserve">
          <source>To a human - if something changes 10ms or 100ms from now, we may not even notice this change and assume the state was always the same.</source>
          <target state="translated">对人来说--如果10ms或100ms以后的事情发生了变化,我们甚至可能没有注意到这个变化,并认为状态一直是不变的。</target>
        </trans-unit>
        <trans-unit id="27f0ffae9421d91f5eb31f78f9c0b061bfa92cc4" translate="yes" xml:space="preserve">
          <source>To a robot - even 10ms represents billions+ of clock cycles. The timescale difference is incredible.</source>
          <target state="translated">对机器人来说,即使是10ms也代表着数十亿以上的时钟周期。时间尺度的差异是不可思议的。</target>
        </trans-unit>
        <trans-unit id="f08c1bb201c73b8dba3c1484535bd11c4ea25af7" translate="yes" xml:space="preserve">
          <source>To access the fixtures nested within the &lt;code&gt;images&lt;/code&gt; folder, include the folder in your &lt;a href=&quot;../../api/commands/fixture&quot;&gt;&lt;code&gt;cy.fixture()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">要访问嵌套在 &lt;code&gt;images&lt;/code&gt; 文件夹中的灯具，请在&lt;a href=&quot;../../api/commands/fixture&quot;&gt; &lt;code&gt;cy.fixture()&lt;/code&gt; &lt;/a&gt;命令中包含该文件夹。</target>
        </trans-unit>
        <trans-unit id="c9fed4e71db24e7c4149b57d7906a94f0e8a9eb6" translate="yes" xml:space="preserve">
          <source>To access what each Cypress command yields you use &lt;a href=&quot;../../api/commands/then&quot;&gt;&lt;code&gt;.then()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">要访问每个Cypress命令产生的结果，请使用&lt;a href=&quot;../../api/commands/then&quot;&gt; &lt;code&gt;.then()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1d143bbc2b45230f9eef594ce36d97ec57c0ced7" translate="yes" xml:space="preserve">
          <source>To accomplish the same thing in Powershell:</source>
          <target state="translated">要在Powershell中完成同样的事情。</target>
        </trans-unit>
        <trans-unit id="166e710ba165eea3de8ec85b1e7054e579c0d1f5" translate="yes" xml:space="preserve">
          <source>To alias something you&amp;rsquo;d like to share use the &lt;a href=&quot;../../api/commands/as&quot;&gt;&lt;code&gt;.as()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">要为要共享的内容添加别名，请使用&lt;a href=&quot;../../api/commands/as&quot;&gt; &lt;code&gt;.as()&lt;/code&gt; &lt;/a&gt;命令。</target>
        </trans-unit>
        <trans-unit id="4393a0c96e6ef66b82cf156c3663950bdbd68985" translate="yes" xml:space="preserve">
          <source>To apply specific Cypress &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html&quot;&gt;configuration&lt;/a&gt; values to a suite or test, you can pass a &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Test-Configuration&quot;&gt;test configuration&lt;/a&gt; object to the test or suite function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b849f57310aa9d236088e30496763d15362e20a2" translate="yes" xml:space="preserve">
          <source>To blacklist a host:</source>
          <target state="translated">将主机列入黑名单。</target>
        </trans-unit>
        <trans-unit id="ae6908980609de5de702a7e380fd9f74d9923708" translate="yes" xml:space="preserve">
          <source>To bypass the proxy for certain domains, a &lt;code&gt;NO_PROXY&lt;/code&gt; environment variable can be set to a comma-separated list of domain names to not proxy traffic for. By default, traffic to &lt;code&gt;localhost&lt;/code&gt; will not be proxied.</source>
          <target state="translated">要绕过某些域的代理，可以将 &lt;code&gt;NO_PROXY&lt;/code&gt; 环境变量设置为以逗号分隔的域名列表，而不为其代理流量。默认情况下，不会代理到 &lt;code&gt;localhost&lt;/code&gt; 流量。</target>
        </trans-unit>
        <trans-unit id="323c865f1f1a3f1f1618192abd40f0f9dd096a76" translate="yes" xml:space="preserve">
          <source>To calculate whether an element is animating we check the current and previous positions of the element itself. If the distance exceeds the &lt;a href=&quot;../references/configuration#Animations&quot;&gt;&lt;code&gt;animationDistanceThreshold&lt;/code&gt;&lt;/a&gt;, then we consider the element to be animating.</source>
          <target state="translated">要计算元素是否在制作动画，我们检查元素本身的当前位置和先前位置。如果距离超过&lt;a href=&quot;../references/configuration#Animations&quot;&gt; &lt;code&gt;animationDistanceThreshold&lt;/code&gt; &lt;/a&gt;，则我们认为该元素正在设置动画。</target>
        </trans-unit>
        <trans-unit id="ac0e341c5c9460191beed1f6898bcc274484d0fe" translate="yes" xml:space="preserve">
          <source>To calculate whether an element is animating we take a sample of the last positions it was at and calculate the element&amp;rsquo;s slope. You might remember this from 8th grade algebra. 😉</source>
          <target state="translated">要计算某个元素是否在制作动画，我们对它在最后的位置进行采样，然后计算该元素的斜率。您可能还记得8年级的代数。😉</target>
        </trans-unit>
        <trans-unit id="68b42cd41f72ca3ee00ee6ce82b38a9bb6118f00" translate="yes" xml:space="preserve">
          <source>To catch a single uncaught exception</source>
          <target state="translated">要捕获一个未捕获的异常</target>
        </trans-unit>
        <trans-unit id="bb659afe0807004757a7b576c8e20bda29a5fd70" translate="yes" xml:space="preserve">
          <source>To clear App Data</source>
          <target state="translated">要清除应用程序数据</target>
        </trans-unit>
        <trans-unit id="7825fc1e2b2f652c63c26c24c688acf9cc0e17cb" translate="yes" xml:space="preserve">
          <source>To confirm this, let&amp;rsquo;s remove the artificial delay to see what&amp;rsquo;s happening in the passing test.</source>
          <target state="translated">为了确认这一点，让我们消除人为延迟，以查看通过测试的情况。</target>
        </trans-unit>
        <trans-unit id="0b6146f951a93d278cd3d940af0923b48d8c93c9" translate="yes" xml:space="preserve">
          <source>To disable parsing special characters sequences, set the &lt;code&gt;parseSpecialCharSequences&lt;/code&gt; option to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">要禁用解析特殊字符序列，请将 &lt;code&gt;parseSpecialCharSequences&lt;/code&gt; 选项设置为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="37eac453f8695de56c3215e3eaae120d0cf07f2b" translate="yes" xml:space="preserve">
          <source>To do this - you would need a background process outside of the browser to make the underlying WebSocket connection that you can then communicate with and control.</source>
          <target state="translated">要做到这一点,您需要在浏览器之外的后台进程来建立底层的 WebSocket 连接,然后与之通信并进行控制。</target>
        </trans-unit>
        <trans-unit id="6e06070a0e4d6d166551de0e62761dab42de8bea" translate="yes" xml:space="preserve">
          <source>To express this in Cypress you&amp;rsquo;d write:</source>
          <target state="translated">要在赛普拉斯中表达这一点，您需要编写：</target>
        </trans-unit>
        <trans-unit id="83049f38a853aca72cb58f3e189b3b2b3721623e" translate="yes" xml:space="preserve">
          <source>To express this with an assertion you&amp;rsquo;d write:</source>
          <target state="translated">要用断言来表达这一点，您可以编写：</target>
        </trans-unit>
        <trans-unit id="96b23fbe50516013b6e01e4b9a35c1256f514102" translate="yes" xml:space="preserve">
          <source>To find this element by its contents, we&amp;rsquo;ll use &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">要根据其内容查找此元素，我们将使用&lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="149e9bbd69575b3273720fd628fbb128987d85a2" translate="yes" xml:space="preserve">
          <source>To fix this error, follow instructions on &lt;a href=&quot;../guides/continuous-integration#Caching&quot;&gt;caching the cypress binary in CI&lt;/a&gt;, then bump the version of your CI cache to ensure a clean build.</source>
          <target state="translated">要解决此错误，请按照有关&lt;a href=&quot;../guides/continuous-integration#Caching&quot;&gt;在CI中缓存cypress二进制文件的&lt;/a&gt;说明进行操作，然后修改CI缓存的版本以确保构建干净。</target>
        </trans-unit>
        <trans-unit id="7575ddba789b6b072835dcb92594fc7e2c7b843d" translate="yes" xml:space="preserve">
          <source>To get around these restrictions, Cypress implements some strategies involving JavaScript code, the browser&amp;rsquo;s internal APIs, and &lt;code&gt;network proxying&lt;/code&gt; to &lt;em&gt;play by the rules&lt;/em&gt; of &lt;code&gt;same-origin policy&lt;/code&gt;. It is our goal to fully automate the application under test without you needing to modify your application&amp;rsquo;s code - and we are &lt;em&gt;mostly&lt;/em&gt; able to do this.</source>
          <target state="translated">为了克服这些限制，赛普拉斯实现包括JavaScript代码，浏览器的内部API，以及一些策略 &lt;code&gt;network proxying&lt;/code&gt; ，以&lt;em&gt;遵守游戏规则&lt;/em&gt;的 &lt;code&gt;same-origin policy&lt;/code&gt; 。我们的目标是使测试中的应用程序完全自动化，而无需修改应用程序的代码-我们&lt;em&gt;大多数人都&lt;/em&gt;可以做到这一点。</target>
        </trans-unit>
        <trans-unit id="9aeb9503bd3439b8e356bd49941cec1a2eb97780" translate="yes" xml:space="preserve">
          <source>To get started, open up this file:</source>
          <target state="translated">要开始,请打开这个文件。</target>
        </trans-unit>
        <trans-unit id="fb9adb651d7d95d104ed2f1f7d71628ecf9bd8f2" translate="yes" xml:space="preserve">
          <source>To handle code coverage collected during each test, we created a &lt;a href=&quot;https://github.com/cypress-io/code-coverage&quot;&gt;&lt;code&gt;@cypress/code-coverage&lt;/code&gt;&lt;/a&gt; Cypress plugin. It merges coverage from each test and saves the combined result. It also calls &lt;code&gt;nyc&lt;/code&gt; (its peer dependency) to generate static HTML reports for human consumption.</source>
          <target state="translated">为了处理每次测试期间收集的代码覆盖率，我们创建了一个&lt;a href=&quot;https://github.com/cypress-io/code-coverage&quot;&gt; &lt;code&gt;@cypress/code-coverage&lt;/code&gt; &lt;/a&gt; Cypress插件。它合并每个测试的覆盖率并保存合并的结果。它还调用 &lt;code&gt;nyc&lt;/code&gt; （其对等依赖项）来生成静态HTML报告供人类使用。</target>
        </trans-unit>
        <trans-unit id="280f8c6479cffa347916d707a00e83bf7e38e0ae" translate="yes" xml:space="preserve">
          <source>To help with these common challenges, the Selector Playground automatically prefers certain &lt;code&gt;data-*&lt;/code&gt; attributes when determining a unique selector.</source>
          <target state="translated">为了应对这些常见挑战，选择器游乐场在确定唯一选择器时会自动选择某些 &lt;code&gt;data-*&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="1e93657473d313debb6683ed7ed730e3c3c28a66" translate="yes" xml:space="preserve">
          <source>To illustrate this, let&amp;rsquo;s revisit that list of actions and expose some of the hidden &lt;strong&gt;✨ magic ✨&lt;/strong&gt; Cypress does for us at each step:</source>
          <target state="translated">为了说明这一点，让我们重新访问该动作列表，并展示赛普拉斯在每个步骤中为我们所做的一些隐蔽的&lt;strong&gt;✨魔术&lt;/strong&gt;：</target>
        </trans-unit>
        <trans-unit id="2203f011ae04f2af8d4f15c66e1819faf35fc910" translate="yes" xml:space="preserve">
          <source>To illustrate this, let&amp;rsquo;s take a very simple example of trying to conditionally test unstable state.</source>
          <target state="translated">为了说明这一点，让我们举一个非常简单的示例，尝试有条件地测试不稳定状态。</target>
        </trans-unit>
        <trans-unit id="b793cfab7761a6eace3a477332c312e87ac064ac" translate="yes" xml:space="preserve">
          <source>To include code before your test files, set the &lt;a href=&quot;configuration#Folders-Files&quot;&gt;&lt;code&gt;supportFile&lt;/code&gt;&lt;/a&gt; path. By default, &lt;a href=&quot;configuration#Folders-Files&quot;&gt;&lt;code&gt;supportFile&lt;/code&gt;&lt;/a&gt; is set to look for one of the following files:</source>
          <target state="translated">要在测试文件之前包含代码，请设置&lt;a href=&quot;configuration#Folders-Files&quot;&gt; &lt;code&gt;supportFile&lt;/code&gt; &lt;/a&gt;路径。默认情况下，&lt;a href=&quot;configuration#Folders-Files&quot;&gt; &lt;code&gt;supportFile&lt;/code&gt; &lt;/a&gt;设置为查找以下文件之一：</target>
        </trans-unit>
        <trans-unit id="868c314890aef6646e5ee278ea0f8f20f34d6f59" translate="yes" xml:space="preserve">
          <source>To install this pre-release binary on Mac, you need to set the &lt;code&gt;CYPRESS_INSTALL_BINARY&lt;/code&gt; environment variable to the shown &lt;code&gt;https://cdn.cypress.io/beta/binary/.../cypress.zip&lt;/code&gt; value and run &lt;code&gt;npm install https://cdn.cypress.io/beta/npm/3.3.2/.../cypress.tgz&lt;/code&gt;. The command in the terminal will be:</source>
          <target state="translated">要在Mac上安装此预发行二进制文件，您需要将 &lt;code&gt;CYPRESS_INSTALL_BINARY&lt;/code&gt; 环境变量设置为显示的 &lt;code&gt;https://cdn.cypress.io/beta/binary/.../cypress.zip&lt;/code&gt; 值，然后运行 &lt;code&gt;npm install https://cdn.cypress.io/beta/npm/3.3.2/.../cypress.tgz&lt;/code&gt; 。终端中的命令将是：</target>
        </trans-unit>
        <trans-unit id="f3723db383e31a5a33ea33d689ddb173481ad5c9" translate="yes" xml:space="preserve">
          <source>To instrument the application code located in your &lt;code&gt;src&lt;/code&gt; folder and save it in an &lt;code&gt;instrumented&lt;/code&gt; folder use the following command:</source>
          <target state="translated">要检测位于 &lt;code&gt;src&lt;/code&gt; 文件夹中的应用程序代码并将其保存在 &lt;code&gt;instrumented&lt;/code&gt; 文件夹中，请使用以下命令：</target>
        </trans-unit>
        <trans-unit id="48e22197bbbb6bd1d59b8937f02a4c9bca6a8bea" translate="yes" xml:space="preserve">
          <source>To interact with a range input (slider), we need to set its value and</source>
          <target state="translated">要与一个范围输入(滑块)进行交互,我们需要设置它的值和</target>
        </trans-unit>
        <trans-unit id="c74ecb884f3f0bba1023c924193577e2a3820fc9" translate="yes" xml:space="preserve">
          <source>To keep a modifier activated between commands, specify &lt;code&gt;{release: false}&lt;/code&gt; in the options.</source>
          <target state="translated">要使命令之间的修饰符保持激活状态，请在选项中指定 &lt;code&gt;{release: false}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dfc215f81a144908f83ffd1f95ded8c2bbc16ce1" translate="yes" xml:space="preserve">
          <source>To make a browser installed at a different path be auto-detected, create a symbolic link using &lt;code&gt;mklink&lt;/code&gt; in the location that Cypress expects to find your browser.</source>
          <target state="translated">要自动检测安装在其他路径上的浏览器， &lt;code&gt;mklink&lt;/code&gt; 在赛普拉斯希望找到您的浏览器的位置使用mklink创建一个符号链接。</target>
        </trans-unit>
        <trans-unit id="735f3bce713d52a0668f239c7df40905de18c181" translate="yes" xml:space="preserve">
          <source>To make these changes permanent, you can add these commands to your shell&amp;rsquo;s &lt;code&gt;~/.profile&lt;/code&gt; (&lt;code&gt;~/.zsh_profile&lt;/code&gt;, &lt;code&gt;~/.bash_profile&lt;/code&gt;, etc.) to run them on every login.</source>
          <target state="translated">要使这些更改永久 &lt;code&gt;~/.zsh_profile&lt;/code&gt; ，可以将这些命令添加到Shell的 &lt;code&gt;~/.profile&lt;/code&gt; （〜/ .zsh_profile， &lt;code&gt;~/.bash_profile&lt;/code&gt; 等）中，以在每次登录时运行它们。</target>
        </trans-unit>
        <trans-unit id="9892449df8e876b379575308ba31dcb1d0760ee9" translate="yes" xml:space="preserve">
          <source>To make these changes permanent, you can add this command to your shell&amp;rsquo;s &lt;code&gt;~/.profile&lt;/code&gt; (&lt;code&gt;~/.zsh_profile&lt;/code&gt;, &lt;code&gt;~/.bash_profile&lt;/code&gt;, etc.) to run them on every login.</source>
          <target state="translated">要使这些更改永久 &lt;code&gt;~/.zsh_profile&lt;/code&gt; ，您可以将此命令添加到Shell的 &lt;code&gt;~/.profile&lt;/code&gt; （〜/ .zsh_profile， &lt;code&gt;~/.bash_profile&lt;/code&gt; 等）中，以在每次登录时运行它们。</target>
        </trans-unit>
        <trans-unit id="fd116a294ad0316afe5fbd830ef0fa68c9d2bff9" translate="yes" xml:space="preserve">
          <source>To manually release modifiers within a test after using &lt;code&gt;{release: false}&lt;/code&gt;, use another &lt;code&gt;type&lt;/code&gt; command and the modifier will be released after it.</source>
          <target state="translated">要在使用 &lt;code&gt;{release: false}&lt;/code&gt; 之后在测试中手动释放修饰符，请使用另一种 &lt;code&gt;type&lt;/code&gt; 命令，修饰符将在其后释放。</target>
        </trans-unit>
        <trans-unit id="33f0c635785475347603f7c31f0d76543d069e7e" translate="yes" xml:space="preserve">
          <source>To match the behavior of web applications, Cypress is asynchronous and relies on timeouts to know when to stop waiting on an app to get into the expected state. Timeouts can be configured globally, or on a per-command basis.</source>
          <target state="translated">为了匹配Web应用程序的行为,Cypress是异步的,并依靠超时来知道何时停止等待应用程序进入预期状态。超时可以全局配置,也可以根据每个命令配置。</target>
        </trans-unit>
        <trans-unit id="a66861b2e0d92465797b2993cbfce9943d8be040" translate="yes" xml:space="preserve">
          <source>To modify configuration, you return an object from your plugins file exported function.</source>
          <target state="translated">要修改配置,你从你的插件文件导出的函数中返回一个对象。</target>
        </trans-unit>
        <trans-unit id="25fefb4701fe7ec06e7a1368d6ea6b43a7bd6fdf" translate="yes" xml:space="preserve">
          <source>To open the Selector Playground, click the  button next to the URL at the top of the runner. Hover over elements in your app to preview a unique selector for that element in the tooltip.</source>
          <target state="translated">要打开 &quot;选择器游乐场&quot;,请点击运行器顶部的URL旁边的按钮。将鼠标悬停在应用程序中的元素上,在工具提示中预览该元素的独特选择器。</target>
        </trans-unit>
        <trans-unit id="cec5c4340ac471856a673e1e2a1916fda7189d74" translate="yes" xml:space="preserve">
          <source>To opt out of sending exception data on Linux or macOS, run the following command in a terminal before installing Cypress:</source>
          <target state="translated">要选择不在Linux或macOS上发送异常数据,请在安装Cypress之前在终端中运行以下命令。</target>
        </trans-unit>
        <trans-unit id="794937b9722bc56091f0141e5ef3d4d8b91bd73c" translate="yes" xml:space="preserve">
          <source>To opt out of sending exception data on Windows, run the following command in the Command Prompt before installing Cypress:</source>
          <target state="translated">要选择不在Windows上发送异常数据,请在安装Cypress之前在命令提示符中运行以下命令。</target>
        </trans-unit>
        <trans-unit id="a267658a2fbeafb0312a4118f59352ac79d90469" translate="yes" xml:space="preserve">
          <source>To override the default cache folder, set the environment variable &lt;code&gt;CYPRESS_CACHE_FOLDER&lt;/code&gt;.</source>
          <target state="translated">要覆盖默认的缓存文件夹，请设置环境变量 &lt;code&gt;CYPRESS_CACHE_FOLDER&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7ae5e98dfbf01bb2181d836a5d6ceb509c86bd19" translate="yes" xml:space="preserve">
          <source>To override the element that is yielded we can pass &amp;lsquo;ul&amp;rsquo; as the selector.</source>
          <target state="translated">要覆盖产生的元素，我们可以传递'ul'作为选择器。</target>
        </trans-unit>
        <trans-unit id="e43dc7604ee983bf4ce996d64bb464513deece91" translate="yes" xml:space="preserve">
          <source>To prevent the Cypress Test Runner from exiting after running tests in a spec file, use &lt;code&gt;--no-exit&lt;/code&gt;.</source>
          <target state="translated">为了防止在规范文件中运行测试后退出Cypress Test Runner，请使用 &lt;code&gt;--no-exit&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="73ba966459bf9c759ae4852b9765ed45f475f18e" translate="yes" xml:space="preserve">
          <source>To record tests:</source>
          <target state="translated">要记录测试。</target>
        </trans-unit>
        <trans-unit id="81bc4daf465b70a92a11b8cd2af34e52acf069af" translate="yes" xml:space="preserve">
          <source>To reflect this behavior, Cypress also doesn&amp;rsquo;t ignore them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eed145b63831c1f5dd69fcc09b00d2c83cc1ab51" translate="yes" xml:space="preserve">
          <source>To run a command, you&amp;rsquo;ll need to prefix each command in order to properly locate the cypress executable.</source>
          <target state="translated">要运行命令，您需要为每个命令加上前缀，以正确定位cypress可执行文件。</target>
        </trans-unit>
        <trans-unit id="013480901aab9a34c9246bf54a2a68fdb6b17044" translate="yes" xml:space="preserve">
          <source>To run a specified suite or test, append &lt;code&gt;.only&lt;/code&gt; to the function. All nested suites will also be executed. This gives us the ability to run one test at a time and is the recommended way to write a test suite.</source>
          <target state="translated">要运行指定的套件或测试， &lt;code&gt;.only&lt;/code&gt; 在函数后附加.only。所有嵌套套件也将执行。这使我们能够一次运行一个测试，这是编写测试套件的推荐方法。</target>
        </trans-unit>
        <trans-unit id="a4a27f3ee030ba3bdf456be284f4b1d13fad99e9" translate="yes" xml:space="preserve">
          <source>To save the &lt;code&gt;CYPRESS_CRASH_REPORTS&lt;/code&gt; variable for use in all new shells, use &lt;code&gt;setx&lt;/code&gt;:</source>
          <target state="translated">要保存 &lt;code&gt;CYPRESS_CRASH_REPORTS&lt;/code&gt; 变量以供所有新Shell使用，请使用 &lt;code&gt;setx&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="1515397953b9965da8ef352a2a18a8169cc62ebd" translate="yes" xml:space="preserve">
          <source>To save the &lt;code&gt;HTTP_PROXY&lt;/code&gt; variable and use your proxy for all new shells, use &lt;code&gt;setx&lt;/code&gt;:</source>
          <target state="translated">要保存 &lt;code&gt;HTTP_PROXY&lt;/code&gt; 变量并将代理用于所有新的shell，请使用 &lt;code&gt;setx&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="670b3a49d3d07d27dc07cc48f7d6f1c265d954e7" translate="yes" xml:space="preserve">
          <source>To see a working example of this please check out our &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Stubbing-and-spying&quot;&gt;Stubbing Google Analytics Recipe&lt;/a&gt;.</source>
          <target state="translated">要查看&lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Stubbing-and-spying&quot;&gt;可行的&lt;/a&gt;示例，请查看我们的Google Analytics（分析）存根食谱。</target>
        </trans-unit>
        <trans-unit id="d587950df7426b25ea8703c4e89ffe22361a63ca" translate="yes" xml:space="preserve">
          <source>To see an example of every command used in Cypress, open the &lt;a href=&quot;https://github.com/cypress-io/cypress-example-kitchensink/blob/master/cypress/integration/examples&quot;&gt;&lt;code&gt;example&lt;/code&gt; folder&lt;/a&gt; within your &lt;code&gt;cypress/integration&lt;/code&gt; folder.</source>
          <target state="translated">要查看Cypress中使用的每个命令的示例，请在 &lt;code&gt;cypress/integration&lt;/code&gt; 文件夹中打开&lt;a href=&quot;https://github.com/cypress-io/cypress-example-kitchensink/blob/master/cypress/integration/examples&quot;&gt; &lt;code&gt;example&lt;/code&gt; 文件&lt;/a&gt;夹。</target>
        </trans-unit>
        <trans-unit id="53615b42ca9ca8d0e3552778d8ac61c80f14fc6e" translate="yes" xml:space="preserve">
          <source>To see debug logs from the browser launcher, run Cypress with the &lt;code&gt;DEBUG&lt;/code&gt; environment variable set to &lt;code&gt;cypress:launcher&lt;/code&gt;.</source>
          <target state="translated">要从浏览器启动器中查看调试日志，请在 &lt;code&gt;DEBUG&lt;/code&gt; 环境变量设置为 &lt;code&gt;cypress:launcher&lt;/code&gt; 的情况下运行Cypress 。</target>
        </trans-unit>
        <trans-unit id="7472673057787f324c25909db2c45c497ecc45b4" translate="yes" xml:space="preserve">
          <source>To see the summary of the code coverage after tests run, run the command below.</source>
          <target state="translated">要查看测试运行后的代码覆盖率摘要,请运行以下命令。</target>
        </trans-unit>
        <trans-unit id="7ab077afaa1dce1ee157f039e3720c1937173a77" translate="yes" xml:space="preserve">
          <source>To see this in action we&amp;rsquo;ve set up an &lt;a href=&quot;https://github.com/cypress-io/cypress-test-nested-projects&quot;&gt;example repo to demonstrate this here&lt;/a&gt;.</source>
          <target state="translated">为了观察实际情况，我们建立了一个&lt;a href=&quot;https://github.com/cypress-io/cypress-test-nested-projects&quot;&gt;示例回购来在这里进行演示&lt;/a&gt;。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
