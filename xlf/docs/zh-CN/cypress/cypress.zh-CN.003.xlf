<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="cypress">
    <body>
      <group id="cypress">
        <trans-unit id="4fe5b30322de67a706bc45986a7ccddeaea8f5e2" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;Cypress.version&lt;/code&gt;</source>
          <target state="translated">添加了 &lt;code&gt;Cypress.version&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fca3b87ea920463b02bc0264c953dfe4ea06c4ce" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;Cypress.version&lt;/code&gt; property. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/404&quot;&gt;#404&lt;/a&gt;.</source>
          <target state="translated">添加了 &lt;code&gt;Cypress.version&lt;/code&gt; 属性。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/404&quot;&gt;＃404&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d48044856f33e0dc7e92a6fd222283fac4902d78" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;Parallelization&lt;/code&gt; doc.</source>
          <target state="translated">添加了 &lt;code&gt;Parallelization&lt;/code&gt; 文档。</target>
        </trans-unit>
        <trans-unit id="2ba7cc2a06c3d5b938f13508b58ced797948ae3e" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;Recipes&lt;/code&gt;</source>
          <target state="translated">新增 &lt;code&gt;Recipes&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="749bb9583012ada56f6b66ba50107fc32469019b" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;Selector Playground API&lt;/code&gt;</source>
          <target state="translated">添加了 &lt;code&gt;Selector Playground API&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1ca88bd76da8b2fdd906043c8288f38e941277bc" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;Selector Playground Guide&lt;/code&gt;</source>
          <target state="translated">添加了 &lt;code&gt;Selector Playground Guide&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6abcced29a661454485328598062eee25c55e6fc" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;after:screenshot&lt;/code&gt; plugin event doc.</source>
          <target state="translated">&lt;code&gt;after:screenshot&lt;/code&gt; 插件事件文档后添加。</target>
        </trans-unit>
        <trans-unit id="339a579c9bc641ab263e08dfc0173963a170e0cc" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;ctrl&lt;/code&gt;, &lt;code&gt;cmd&lt;/code&gt;, &lt;code&gt;shift&lt;/code&gt;, and &lt;code&gt;alt&lt;/code&gt; keyboard modifiers</source>
          <target state="translated">添加了 &lt;code&gt;ctrl&lt;/code&gt; ， &lt;code&gt;cmd&lt;/code&gt; ， &lt;code&gt;shift&lt;/code&gt; 和 &lt;code&gt;alt&lt;/code&gt; 键盘修饰符</target>
        </trans-unit>
        <trans-unit id="e225856c572cd4432148877431e6b4c98358943c" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;cy.Blob&lt;/code&gt; utilities for &lt;code&gt;blob&lt;/code&gt; / &lt;code&gt;string&lt;/code&gt; / &lt;code&gt;base64&lt;/code&gt; conversion. Useful for manually handling uploads.</source>
          <target state="translated">添加了用于 &lt;code&gt;blob&lt;/code&gt; / &lt;code&gt;string&lt;/code&gt; / &lt;code&gt;base64&lt;/code&gt; 转换的 &lt;code&gt;cy.Blob&lt;/code&gt; 实用程序。对于手动处理上传很有用。</target>
        </trans-unit>
        <trans-unit id="14f5729b0036c8a4932adf56a117c8b10bc7bfe5" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;cy.respond&lt;/code&gt; command which will respond to all pending requests when &lt;code&gt;{respond: false}&lt;/code&gt; is set in the &lt;code&gt;server&lt;/code&gt; or &lt;code&gt;route&lt;/code&gt;.</source>
          <target state="translated">添加了 &lt;code&gt;cy.respond&lt;/code&gt; 命令，当在 &lt;code&gt;server&lt;/code&gt; 或 &lt;code&gt;route&lt;/code&gt; 设置 &lt;code&gt;{respond: false}&lt;/code&gt; 时，它将响应所有挂起的请求。</target>
        </trans-unit>
        <trans-unit id="0708754a2a15b2b8c04cc577021bdefd8f762674" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;delay&lt;/code&gt; option</source>
          <target state="translated">添加了 &lt;code&gt;delay&lt;/code&gt; 选项</target>
        </trans-unit>
        <trans-unit id="de397f68a581f3a17c68249d7fe217fcac12c4df" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;flag&lt;/code&gt; option and appending with &lt;code&gt;a+&lt;/code&gt;</source>
          <target state="translated">添加了 &lt;code&gt;flag&lt;/code&gt; 选项并附加了 &lt;code&gt;a+&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="40e872f3a273ced4eebbccfef12504003bda2232" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;flag&lt;/code&gt; option to &lt;a href=&quot;../../api/commands/writefile&quot;&gt;&lt;code&gt;cy.writeFile()&lt;/code&gt; doc&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;../../api/commands/writefile&quot;&gt; &lt;code&gt;cy.writeFile()&lt;/code&gt; &lt;/a&gt; doc中添加了 &lt;code&gt;flag&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="b069fba1db5a823e3e8545e5b2280f8a723df77a" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;onAbort&lt;/code&gt; callback option</source>
          <target state="translated">添加了 &lt;code&gt;onAbort&lt;/code&gt; 回调选项</target>
        </trans-unit>
        <trans-unit id="b709eaeb948586dcab97ca908d3b4c74b6e92284" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;parseSpecialCharSequences&lt;/code&gt; option</source>
          <target state="translated">添加了 &lt;code&gt;parseSpecialCharSequences&lt;/code&gt; 选项</target>
        </trans-unit>
        <trans-unit id="236e4378e0846bc758ba30a91310a128014fd56d" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;requestTimeout&lt;/code&gt; and &lt;code&gt;responseTimeout&lt;/code&gt; options to &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">向&lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt;添加了 &lt;code&gt;requestTimeout&lt;/code&gt; 和 &lt;code&gt;responseTimeout&lt;/code&gt; 选项</target>
        </trans-unit>
        <trans-unit id="fd22551e83325397c01867327a6ace1b2bdad287" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;requestTimeout&lt;/code&gt; and &lt;code&gt;responseTimout&lt;/code&gt; option</source>
          <target state="translated">添加了 &lt;code&gt;requestTimeout&lt;/code&gt; 和 &lt;code&gt;responseTimout&lt;/code&gt; 选项</target>
        </trans-unit>
        <trans-unit id="d7bf5229ba200f54c3d9d59b2d07d3029e0e3f05" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;responseTimeout&lt;/code&gt;&lt;a href=&quot;configuration&quot;&gt;configuration&lt;/a&gt; value.</source>
          <target state="translated">添加了 &lt;code&gt;responseTimeout&lt;/code&gt; &lt;a href=&quot;configuration&quot;&gt;配置&lt;/a&gt;值。</target>
        </trans-unit>
        <trans-unit id="308b70688de548104123489d9f57c756b04dad6d" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;runUrl&lt;/code&gt; to returned run in &lt;a href=&quot;../guides/module-api&quot;&gt;Module API doc&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;../guides/module-api&quot;&gt;模块API doc中&lt;/a&gt;添加了 &lt;code&gt;runUrl&lt;/code&gt; 以返回运行。</target>
        </trans-unit>
        <trans-unit id="4f8cde986467b12e5206099be29e3e95aa5ba96c" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;teamcity&lt;/code&gt; reporter.</source>
          <target state="translated">添加了 &lt;code&gt;teamcity&lt;/code&gt; 记者。</target>
        </trans-unit>
        <trans-unit id="4524a472d504eca636f0f7a80461460ee1ff59d6" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;timeout&lt;/code&gt; option</source>
          <target state="translated">添加了 &lt;code&gt;timeout&lt;/code&gt; 选项</target>
        </trans-unit>
        <trans-unit id="6930284fd7c430328290e27428e192f1643860c9" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;waitForAnimations&lt;/code&gt; and &lt;code&gt;animationDistanceThreshold&lt;/code&gt;&lt;a href=&quot;configuration#Animations&quot;&gt;configuration options&lt;/a&gt;.</source>
          <target state="translated">添加了 &lt;code&gt;waitForAnimations&lt;/code&gt; 和 &lt;code&gt;animationDistanceThreshold&lt;/code&gt; &lt;a href=&quot;configuration#Animations&quot;&gt;配置选项&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="aaf6ba08b1bcefde5e2b02437e4bead2c06febcb" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;whitelist&lt;/code&gt; option</source>
          <target state="translated">添加了 &lt;code&gt;whitelist&lt;/code&gt; 选项</target>
        </trans-unit>
        <trans-unit id="60db8ad77186048a5f58d9909ae9711f1bf2c1e8" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;{downarrow}&lt;/code&gt; and &lt;code&gt;{uparrow}&lt;/code&gt; character sequences</source>
          <target state="translated">添加了 &lt;code&gt;{downarrow}&lt;/code&gt; 和 &lt;code&gt;{uparrow}&lt;/code&gt; 字符序列</target>
        </trans-unit>
        <trans-unit id="8263590e4bc2f9d45d4fc0f7c5bbdd58633a6288" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;{home}&lt;/code&gt; and &lt;code&gt;{end}&lt;/code&gt; character sequences</source>
          <target state="translated">添加了 &lt;code&gt;{home}&lt;/code&gt; 和 &lt;code&gt;{end}&lt;/code&gt; 字符序列</target>
        </trans-unit>
        <trans-unit id="b0e8689941654c5580e74dd428a8b75e8d70dba5" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;{home}&lt;/code&gt; and &lt;code&gt;{end}&lt;/code&gt; character sequences to &lt;a href=&quot;../../api/commands/type&quot;&gt;cy.type()&lt;/a&gt;</source>
          <target state="translated">向&lt;a href=&quot;../../api/commands/type&quot;&gt;cy.type（）&lt;/a&gt;添加了 &lt;code&gt;{home}&lt;/code&gt; 和 &lt;code&gt;{end}&lt;/code&gt; 字符序列</target>
        </trans-unit>
        <trans-unit id="c122e205089fb64e8df9d534e1492fa90f5775f6" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;{insert}&lt;/code&gt;, &lt;code&gt;{pageup}&lt;/code&gt; and &lt;code&gt;{pagedown}&lt;/code&gt; character sequences</source>
          <target state="translated">添加了 &lt;code&gt;{insert}&lt;/code&gt; ， &lt;code&gt;{pageup}&lt;/code&gt; 和 &lt;code&gt;{pagedown}&lt;/code&gt; 字符序列</target>
        </trans-unit>
        <trans-unit id="50fc1eeab4cf019afc5fee523cea298b20a8a543" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;{insert}&lt;/code&gt;, &lt;code&gt;{pageup}&lt;/code&gt;, and &lt;code&gt;{pagedown}&lt;/code&gt; as supported special character sequences to &lt;a href=&quot;../../api/commands/type#Arguments&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt;. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/pull/1567&quot;&gt;#1567&lt;/a&gt;.</source>
          <target state="translated">向&lt;a href=&quot;../../api/commands/type#Arguments&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;添加了 &lt;code&gt;{insert}&lt;/code&gt; ， &lt;code&gt;{pageup}&lt;/code&gt; 和 &lt;code&gt;{pagedown}&lt;/code&gt; 作为受支持的特殊字符序列。在&lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/pull/1567&quot;&gt;＃1567中解决&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e553b4a3b343274fb60f9e8eb5793a9f0590e1c7" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;{selectall}&lt;/code&gt;, &lt;code&gt;{del}&lt;/code&gt;, &lt;code&gt;{backspace}&lt;/code&gt;, &lt;code&gt;{esc}&lt;/code&gt;, &lt;code&gt;{{}&lt;/code&gt;, &lt;code&gt;{enter}&lt;/code&gt;, &lt;code&gt;{leftarrow}&lt;/code&gt;, &lt;code&gt;{rightarrow}&lt;/code&gt; character sequences</source>
          <target state="translated">添加了 &lt;code&gt;{selectall}&lt;/code&gt; ， &lt;code&gt;{del}&lt;/code&gt; ， &lt;code&gt;{backspace}&lt;/code&gt; ， &lt;code&gt;{esc}&lt;/code&gt; ， &lt;code&gt;{{}&lt;/code&gt; ， &lt;code&gt;{enter}&lt;/code&gt; ， &lt;code&gt;{leftarrow}&lt;/code&gt; 和 &lt;code&gt;{rightarrow}&lt;/code&gt; 字符序列</target>
        </trans-unit>
        <trans-unit id="5349f37cad770220d90dfb3f6d975f6912ad8e23" translate="yes" xml:space="preserve">
          <source>Added Chrome flag &lt;code&gt;--disable-blink-features=RootLayerScrolling&lt;/code&gt; to prevent the application under test from &amp;ldquo;shaking&amp;rdquo; in recent versions of Chrome. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1620&quot;&gt;#1620&lt;/a&gt;.</source>
          <target state="translated">添加了Chrome标志 &lt;code&gt;--disable-blink-features=RootLayerScrolling&lt;/code&gt; ,以防止受测试的应用在最新版的Chrome中&amp;ldquo;晃动&amp;rdquo;。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1620&quot;&gt;＃1620&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7ca0748a40ead19e9f6d15722054c0be7f167fdb" translate="yes" xml:space="preserve">
          <source>Added Cypress logo to nav.</source>
          <target state="translated">在导航中添加了赛普拉斯的标志。</target>
        </trans-unit>
        <trans-unit id="d209d04f8b453ec7e9149b29d3dd39b1b0dcaf55" translate="yes" xml:space="preserve">
          <source>Added Desktop Icon.</source>
          <target state="translated">添加了桌面图标。</target>
        </trans-unit>
        <trans-unit id="cbb7c7534921f69d74fecad8e6e86d10fd3b5a7b" translate="yes" xml:space="preserve">
          <source>Added ESLint, Docker, and TypeScript to Plugins</source>
          <target state="translated">在插件中添加了ESLint、Docker和TypeScript。</target>
        </trans-unit>
        <trans-unit id="3e2695b80c9667fdeded798040641b574b659d10" translate="yes" xml:space="preserve">
          <source>Added TypeScript &lt;code&gt;should/and&lt;/code&gt; autocomplete and typings for Cypress events. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1187&quot;&gt;#1187&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1132&quot;&gt;#1132&lt;/a&gt;.</source>
          <target state="translated">添加的TypeScript &lt;code&gt;should/and&lt;/code&gt; 自动完成赛普拉斯事件的输入。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1187&quot;&gt;＃1187&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1132&quot;&gt;＃1132&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b1446a3d15f69bdc79d771268bdb58e2c03c9e2e" translate="yes" xml:space="preserve">
          <source>Added TypeScript typings for bundled Cypress tools like &lt;code&gt;$&lt;/code&gt;, &lt;code&gt;_&lt;/code&gt;, etc. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1046&quot;&gt;#1046&lt;/a&gt;.</source>
          <target state="translated">为捆绑的赛普拉斯工具（如 &lt;code&gt;$&lt;/code&gt; ， &lt;code&gt;_&lt;/code&gt; 等）添加了TypeScript类型。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1046&quot;&gt;＃1046&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="61c2cbdb439bc80347ae2ff7c8c13d30356fa080" translate="yes" xml:space="preserve">
          <source>Added a 10 minute Getting Started video that &lt;a href=&quot;https://github.com/avanslaars&quot;&gt;Andrew Van Slaars&lt;/a&gt; created.</source>
          <target state="translated">添加了&lt;a href=&quot;https://github.com/avanslaars&quot;&gt;Andrew Van Slaars&lt;/a&gt;创建的10分钟入门视频。</target>
        </trans-unit>
        <trans-unit id="97074e2d4a96d331698d68a4f44518fd8fdbeb01" translate="yes" xml:space="preserve">
          <source>Added a new link to Options dropdown in Desktop app for &amp;ldquo;Chat&amp;rdquo; that goes to our &lt;a href=&quot;https://gitter.im/cypress-io/cypress&quot;&gt;chat&lt;/a&gt;.</source>
          <target state="translated">在桌面应用中为&amp;ldquo;聊天&amp;rdquo;添加了指向&amp;ldquo;选项&amp;rdquo;下拉列表的新链接，该链接进入了我们的&lt;a href=&quot;https://gitter.im/cypress-io/cypress&quot;&gt;聊天室&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a63c9e2b6779a0faf5ed55e541a6d7b36c140b7b" translate="yes" xml:space="preserve">
          <source>Added a section about &lt;a href=&quot;../guides/debugging#Hacking-on-Cypress&quot;&gt;Hacking on Cypress&lt;/a&gt; in the Debugging doc. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/pull/1783&quot;&gt;#1783&lt;/a&gt;.</source>
          <target state="translated">在调试文档中添加了有关&lt;a href=&quot;../guides/debugging#Hacking-on-Cypress&quot;&gt;在Cypress上&lt;/a&gt;进行黑客攻击的部分。在&lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/pull/1783&quot;&gt;＃1783中解决&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6a9922bfc4d2454c9105672477e61875a5bbb1c7" translate="yes" xml:space="preserve">
          <source>Added a section about how to request our new &lt;a href=&quot;../dashboard/organizations#Open-Source-Plan&quot;&gt;Open Source Plan&lt;/a&gt; in the Dashboard Service doc. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/pull/1584&quot;&gt;#1567&lt;/a&gt;.</source>
          <target state="translated">在仪表板服务文档中添加了有关如何请求我们的新&lt;a href=&quot;../dashboard/organizations#Open-Source-Plan&quot;&gt;开源计划&lt;/a&gt;的部分。在&lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/pull/1584&quot;&gt;＃1567中解决&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="837edfefe77a144a34bdf6b468cb6e9e5c719d2a" translate="yes" xml:space="preserve">
          <source>Added a section about video encoding and how to speed up the encoding time to &lt;a href=&quot;../guides/screenshots-and-videos#Video-encoding&quot;&gt;Screenshots and Videos&lt;/a&gt; doc. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/pull/1880&quot;&gt;#1880&lt;/a&gt;</source>
          <target state="translated">在&amp;ldquo; &lt;a href=&quot;../guides/screenshots-and-videos#Video-encoding&quot;&gt;屏幕快照和视频&amp;rdquo;&lt;/a&gt;文档中添加了有关视频编码以及如何加快编码时间的部分。在&lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/pull/1880&quot;&gt;＃1880中解决&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3a65044c3ed231bf66777da2100f2f81f4492c4c" translate="yes" xml:space="preserve">
          <source>Added a section on how to &lt;a href=&quot;../getting-started/installing-cypress#Opt-out-of-sending-exception-data-to-Cypress&quot;&gt;opt out of sending exception data to Cypress&lt;/a&gt; in the Installing Cypress doc.</source>
          <target state="translated">在&amp;ldquo;安装赛普拉斯&amp;rdquo;文档中添加了有关如何&lt;a href=&quot;../getting-started/installing-cypress#Opt-out-of-sending-exception-data-to-Cypress&quot;&gt;选择不向赛普拉斯发送异常数据&lt;/a&gt;的章节。</target>
        </trans-unit>
        <trans-unit id="da95fc2431bf5553daa0175d105817dbaffe0770" translate="yes" xml:space="preserve">
          <source>Added a welcome dialog for new projects that explains how Cypress scaffolds out its folder structure. This dialog will only display if Cypress detects that you haven&amp;rsquo;t written any tests or changed the initial &lt;code&gt;example_spec.js&lt;/code&gt; file. The welcome dialog will no longer display after you&amp;rsquo;ve changed or added any tests.</source>
          <target state="translated">为新项目添加了一个欢迎对话框，该对话框说明了赛普拉斯如何搭建其文件夹结构。仅当赛普拉斯检测到您尚未编写任何测试或未更改初始 &lt;code&gt;example_spec.js&lt;/code&gt; 文件时，才会显示此对话框。更改或添加任何测试后，将不再显示&amp;ldquo;欢迎&amp;rdquo;对话框。</target>
        </trans-unit>
        <trans-unit id="8a608b089a09d76dc31c72d6aa7859342d43dda9" translate="yes" xml:space="preserve">
          <source>Added additional &lt;code&gt;Cypress&lt;/code&gt; events for 3rd party custom handling.</source>
          <target state="translated">添加了用于第三方自定义处理的其他 &lt;code&gt;Cypress&lt;/code&gt; 事件。</target>
        </trans-unit>
        <trans-unit id="8d7609ba97665318a0007c3a9b38722bbdb34eec" translate="yes" xml:space="preserve">
          <source>Added all newly supported HTTP methods to &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; doc.</source>
          <target state="translated">在&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt;文档中添加了所有新支持的HTTP方法。</target>
        </trans-unit>
        <trans-unit id="fc4a301b0f5d62f0c315cee99fb5c96bf119587e" translate="yes" xml:space="preserve">
          <source>Added an &amp;lsquo;App Data&amp;rsquo; option in the Desktop App that displays app data. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/475&quot;&gt;#475&lt;/a&gt;.</source>
          <target state="translated">在显示应用程序数据的桌面应用程序中添加了&amp;ldquo;应用程序数据&amp;rdquo;选项。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/475&quot;&gt;＃475&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="85877861aa48e3506028db99e0b4539d9748af3e" translate="yes" xml:space="preserve">
          <source>Added automated functional NW tests during deployment in preparation for &lt;code&gt;0.5.0&lt;/code&gt; release.</source>
          <target state="translated">在部署期间添加了自动功能NW测试，以准备 &lt;code&gt;0.5.0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0032a9aada563aa0959802fa1127a1e076925c0e" translate="yes" xml:space="preserve">
          <source>Added button to the reporter that focuses the Test Runner and shows the list of tests.</source>
          <target state="translated">在报告中添加了聚焦测试运行器并显示测试列表的按钮。</target>
        </trans-unit>
        <trans-unit id="5d3b9671173a409288404ea3630afd0dfb7529e4" translate="yes" xml:space="preserve">
          <source>Added cache buster to test files which forces them to be reloaded in the &lt;code&gt;Sources&lt;/code&gt; panel after making modifications. In previous versions when test files were live reloaded Chrome would not display their new contents due to a bug in Dev Tools. We&amp;rsquo;ve now worked around this issue.</source>
          <target state="translated">添加了缓存清除器以测试文件，从而在进行修改后强制将其重新加载到&amp;ldquo; &lt;code&gt;Sources&lt;/code&gt; 面板中。在早期版本中，当重新加载测试文件时，由于开发工具中的错误，Chrome无法显示其新内容。我们现在已经解决了这个问题。</target>
        </trans-unit>
        <trans-unit id="1612ee2d6971f3655fa11dc5827b948f65685f3d" translate="yes" xml:space="preserve">
          <source>Added chai assertions in TypeScript to generate autocompletion. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1073&quot;&gt;#1073&lt;/a&gt;.</source>
          <target state="translated">在TypeScript中添加了chai断言以生成自动完成。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1073&quot;&gt;＃1073&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d05091ac7d4a38600a28cea3f264beba2d6ddc8d" translate="yes" xml:space="preserve">
          <source>Added delays on some tooltips.</source>
          <target state="translated">增加了一些工具提示的延迟。</target>
        </trans-unit>
        <trans-unit id="ee3d1ebb2016c7575b2bbdc3df68954aed03290f" translate="yes" xml:space="preserve">
          <source>Added docs to nav, consolidated &lt;code&gt;organize&lt;/code&gt; into &lt;code&gt;tests&lt;/code&gt;.</source>
          <target state="translated">将文档添加到导航，将 &lt;code&gt;organize&lt;/code&gt; 合并到 &lt;code&gt;tests&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1f10e08315b6183495fd00e90f07d1433fbb3abc" translate="yes" xml:space="preserve">
          <source>Added example on how to use a fake video for webcam testing to &lt;a href=&quot;../../api/plugins/browser-launch-api#Use-fake-video-for-webcam-testing&quot;&gt;Browser API doc&lt;/a&gt;.</source>
          <target state="translated">添加了有关如何使用虚假视频对&lt;a href=&quot;../../api/plugins/browser-launch-api#Use-fake-video-for-webcam-testing&quot;&gt;浏览器API doc&lt;/a&gt;进行网络摄像头测试的示例。</target>
        </trans-unit>
        <trans-unit id="2f90556c7285b3ed081d1582bf58d6996c6b29ff" translate="yes" xml:space="preserve">
          <source>Added examples for &amp;ldquo;Catalog of Events&amp;rdquo;</source>
          <target state="translated">添加了&amp;ldquo;事件目录&amp;rdquo;的示例</target>
        </trans-unit>
        <trans-unit id="692a24dbc2fefdc85bdda675cb112b912b4996b5" translate="yes" xml:space="preserve">
          <source>Added explicit error message when using child commands on a subject which has been detached or removed from the DOM.</source>
          <target state="translated">当在已经脱离或从DOM中移除的主题上使用子命令时,增加了明确的错误信息。</target>
        </trans-unit>
        <trans-unit id="845f2094d0fd96971517747c2a1d9cc08de5bbf3" translate="yes" xml:space="preserve">
          <source>Added external link to changelog when checking for updates :-)</source>
          <target state="translated">在检查更新时增加了外部链接到变更日志 :-)</target>
        </trans-unit>
        <trans-unit id="accc00389899355b97f811cf44ba0c7200acc897" translate="yes" xml:space="preserve">
          <source>Added favicon.</source>
          <target state="translated">添加了favicon。</target>
        </trans-unit>
        <trans-unit id="ad6cf5c597cd5c62d20ff8d298cc53c3c2c808b5" translate="yes" xml:space="preserve">
          <source>Added fs polling support to fix issues where Cypress would not detect file changes.</source>
          <target state="translated">增加了fs轮询支持,以解决Cypress无法检测到文件变化的问题。</target>
        </trans-unit>
        <trans-unit id="c67859fbb20051f52bd72322242fc0070ca62424" translate="yes" xml:space="preserve">
          <source>Added functionality which enables &lt;a href=&quot;../../api/commands/server&quot;&gt;&lt;code&gt;cy.server()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt; to be created prior to &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt;. The server and routes will apply to the next page which is visited. This allows you to stub requests which happen on page load. Suggested in &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/17&quot;&gt;#17&lt;/a&gt;.</source>
          <target state="translated">新增的功能使&lt;a href=&quot;../../api/commands/server&quot;&gt; &lt;code&gt;cy.server()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../api/commands/route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt;在&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;之前创建。服务器和路由将应用于访问的下一页。这使您可以对页面加载中发生的请求进行存根。在&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/17&quot;&gt;＃17中&lt;/a&gt;建议。</target>
        </trans-unit>
        <trans-unit id="8916f344cdda258d0f3b4e07b15e41f097f8c3ff" translate="yes" xml:space="preserve">
          <source>Added icons + tray icons.</source>
          <target state="translated">增加了图标+托盘图标。</target>
        </trans-unit>
        <trans-unit id="40d4d3d04b038bda822cfb06cccda6b3e6cb3283" translate="yes" xml:space="preserve">
          <source>Added keywords to Cypress npm package. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1508&quot;&gt;#1508&lt;/a&gt;.</source>
          <target state="translated">向赛普拉斯npm软件包添加了关键字。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1508&quot;&gt;＃1508&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4468d82991ff3f4bb9059bbd5fe7182630a47422" translate="yes" xml:space="preserve">
          <source>Added lightweight module system / optimized Cypress listeners to prevent duplicated events.</source>
          <target state="translated">增加了轻量级模块系统/优化了赛普拉斯监听器,防止重复事件。</target>
        </trans-unit>
        <trans-unit id="50c9918fa5133ea0379d85dbeffc1175c98a23f9" translate="yes" xml:space="preserve">
          <source>Added missing type definitions for some &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; options. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3989&quot;&gt;#3989&lt;/a&gt;.</source>
          <target state="translated">为某些&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;选项添加了缺少的类型定义。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3989&quot;&gt;＃3989&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cf06a9575443938af3a2570290047c8fac602da8" translate="yes" xml:space="preserve">
          <source>Added more debug logs to FFmpeg to determine why FFmpeg compression sometimes causes Cypress to crash (mostly while running in Travis CI). Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1971&quot;&gt;#1971&lt;/a&gt;.</source>
          <target state="translated">向FFmpeg添加了更多调试日志，以确定FFmpeg压缩有时导致Cypress崩溃的原因（主要是在Travis CI中运行）。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1971&quot;&gt;＃1971&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="28e4f2ae632db8416bc5cb9df765a783b0265ac4" translate="yes" xml:space="preserve">
          <source>Added more debug logs. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2108&quot;&gt;#2108&lt;/a&gt;.</source>
          <target state="translated">添加了更多的调试日志。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2108&quot;&gt;＃2108&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9325247655f9357067b6e59700150530905e44b3" translate="yes" xml:space="preserve">
          <source>Added more tests around various areas of the desktop application and ID generator.</source>
          <target state="translated">围绕桌面应用和ID生成器的各个领域,增加了更多的测试。</target>
        </trans-unit>
        <trans-unit id="6d8683ec4e5ecf5ab852628b24a5d224b4b88932" translate="yes" xml:space="preserve">
          <source>Added more video tutorials</source>
          <target state="translated">增加了更多的视频教程</target>
        </trans-unit>
        <trans-unit id="634957f4dd6dceb2ca70578272a7106f993649f8" translate="yes" xml:space="preserve">
          <source>Added new &lt;a href=&quot;../../api/commands/each&quot;&gt;&lt;code&gt;.each()&lt;/code&gt;&lt;/a&gt; command which iterates serially on a collection yielding the iteratee, the index, and the collection. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/156&quot;&gt;#156&lt;/a&gt;.</source>
          <target state="translated">添加了新的&lt;a href=&quot;../../api/commands/each&quot;&gt; &lt;code&gt;.each()&lt;/code&gt; &lt;/a&gt;命令，该命令在集合上进行串行迭代，从而产生iteratee，索引和集合。地址&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/156&quot;&gt;＃156&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e5c9e963cd8df5ea89490ce67675e10e449133dc" translate="yes" xml:space="preserve">
          <source>Added new &lt;a href=&quot;../../api/commands/screenshot&quot;&gt;&lt;code&gt;cy.screenshot()&lt;/code&gt;&lt;/a&gt; command which can take screenshots on demand.</source>
          <target state="translated">添加了新的&lt;a href=&quot;../../api/commands/screenshot&quot;&gt; &lt;code&gt;cy.screenshot()&lt;/code&gt; &lt;/a&gt;命令，该命令可以按需获取屏幕截图。</target>
        </trans-unit>
        <trans-unit id="24783f95caf34e8f3858824d99b9942f3ad5020e" translate="yes" xml:space="preserve">
          <source>Added new &lt;a href=&quot;configuration#Folders-Files&quot;&gt;&lt;code&gt;fileServerFolder&lt;/code&gt;&lt;/a&gt; configuration option that can mount a directory other than your project root when using Cypress as a web server.</source>
          <target state="translated">添加了新的&lt;a href=&quot;configuration#Folders-Files&quot;&gt; &lt;code&gt;fileServerFolder&lt;/code&gt; &lt;/a&gt;配置选项，在将Cypress用作Web服务器时，该选项可以装载项目根目录以外的目录。</target>
        </trans-unit>
        <trans-unit id="41b99542aa4c865ce4051f16c71b2358222edb49" translate="yes" xml:space="preserve">
          <source>Added new &lt;a href=&quot;configuration#Screenshots&quot;&gt;&lt;code&gt;screenshotsFolder&lt;/code&gt;&lt;/a&gt; configuration option with default of &lt;code&gt;cypress/screenshots&lt;/code&gt;.</source>
          <target state="translated">添加了新的&lt;a href=&quot;configuration#Screenshots&quot;&gt; &lt;code&gt;screenshotsFolder&lt;/code&gt; &lt;/a&gt;配置选项，默认为 &lt;code&gt;cypress/screenshots&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1c133c3affb5e059102da3f9c5398f531ab53ca5" translate="yes" xml:space="preserve">
          <source>Added new command: &lt;a href=&quot;../../api/commands/go&quot;&gt;&lt;code&gt;cy.go()&lt;/code&gt;&lt;/a&gt; which accepts &lt;code&gt;back&lt;/code&gt;, &lt;code&gt;forward&lt;/code&gt;, or an arbitrary Number.</source>
          <target state="translated">添加了新命令：&lt;a href=&quot;../../api/commands/go&quot;&gt; &lt;code&gt;cy.go()&lt;/code&gt; &lt;/a&gt;，该命令接受 &lt;code&gt;back&lt;/code&gt; ， &lt;code&gt;forward&lt;/code&gt; 或任意Number。</target>
        </trans-unit>
        <trans-unit id="7ed0655536deaa8761c538c2624a5fe0fb712cee" translate="yes" xml:space="preserve">
          <source>Added new commands to handle getting, setting, and clearing cookies: &lt;a href=&quot;../../api/commands/clearcookie&quot;&gt;&lt;code&gt;cy.clearCookie()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/getcookie&quot;&gt;&lt;code&gt;cy.getCookie()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../../api/commands/setcookie&quot;&gt;&lt;code&gt;cy.setCookie()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">添加了用于处理获取，设置和清除cookie的新命令：&lt;a href=&quot;../../api/commands/clearcookie&quot;&gt; &lt;code&gt;cy.clearCookie()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../api/commands/getcookie&quot;&gt; &lt;code&gt;cy.getCookie()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../api/commands/setcookie&quot;&gt; &lt;code&gt;cy.setCookie()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b0106766ecd6f0279e508ba74ac1cfd386ae663b" translate="yes" xml:space="preserve">
          <source>Added new options &lt;code&gt;retryOnStatusCodeFailure&lt;/code&gt; and &lt;code&gt;retryOnNetworkFailure&lt;/code&gt; to &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; 中&lt;/a&gt;添加了新选项 &lt;code&gt;retryOnStatusCodeFailure&lt;/code&gt; 和 &lt;code&gt;retryOnNetworkFailure&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="520e019dcf9b0df93ebe8eb0cad2996415cd64f1" translate="yes" xml:space="preserve">
          <source>Added newly supported &lt;code&gt;focus&lt;/code&gt; assertion to &lt;a href=&quot;assertions&quot;&gt;Assertions&lt;/a&gt; doc. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/pull/1372&quot;&gt;#1372&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;assertions&quot;&gt;断言&lt;/a&gt;文档中添加了新支持的 &lt;code&gt;focus&lt;/code&gt; 断言。地址&lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/pull/1372&quot;&gt;＃1372&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4f23ed1d4650d1c4886e60aa15e4b3bb8b111be8" translate="yes" xml:space="preserve">
          <source>Added option &lt;code&gt;failOnStatusCode&lt;/code&gt;</source>
          <target state="translated">添加了选项 &lt;code&gt;failOnStatusCode&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="92332215d2bf438a7b97b572e10cb4d469d68f0d" translate="yes" xml:space="preserve">
          <source>Added option &lt;code&gt;force&lt;/code&gt;</source>
          <target state="translated">增加的选择 &lt;code&gt;force&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ba3d714bbcd87c580ba6074f86b204f9ab8434b3" translate="yes" xml:space="preserve">
          <source>Added option &lt;code&gt;log&lt;/code&gt;</source>
          <target state="translated">添加了选项 &lt;code&gt;log&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="81d0bbbfaa6764e33d804484285ac1fd87a6e2ea" translate="yes" xml:space="preserve">
          <source>Added option &lt;code&gt;onBeforeLoad&lt;/code&gt;</source>
          <target state="translated">添加了 &lt;code&gt;onBeforeLoad&lt;/code&gt; 选项</target>
        </trans-unit>
        <trans-unit id="8ab0c65247dc209c1d13e499e409e8a221c399d9" translate="yes" xml:space="preserve">
          <source>Added options &lt;code&gt;url&lt;/code&gt;, &lt;code&gt;method&lt;/code&gt;, &lt;code&gt;body&lt;/code&gt;, and &lt;code&gt;headers&lt;/code&gt;</source>
          <target state="translated">添加了选项 &lt;code&gt;url&lt;/code&gt; ， &lt;code&gt;method&lt;/code&gt; ， &lt;code&gt;body&lt;/code&gt; 和 &lt;code&gt;headers&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5beb7be28cf184d0757d227b7e8c275b7bc76705" translate="yes" xml:space="preserve">
          <source>Added recipe for Direct Controlling AngularJS</source>
          <target state="translated">添加了直接控制AngularJS的配方</target>
        </trans-unit>
        <trans-unit id="846031a7ce6568762e3b41f67c80cde55102e019" translate="yes" xml:space="preserve">
          <source>Added recipe for E2E API Testing</source>
          <target state="translated">添加了E2E API测试的配方</target>
        </trans-unit>
        <trans-unit id="ed426af3da11df940bf2e2bca5ebfad9296dda23" translate="yes" xml:space="preserve">
          <source>Added recipe for TypeScript with Browserify</source>
          <target state="translated">为TypeScript添加了Browserify的配方</target>
        </trans-unit>
        <trans-unit id="9414d7c2c58e4c1f05c73c3650a2d18bc5e96055" translate="yes" xml:space="preserve">
          <source>Added recipe for TypeScript with Webpack</source>
          <target state="translated">为TypeScript添加了Webpack的配方</target>
        </trans-unit>
        <trans-unit id="6bec891c979143afaaf85df7608e4a82ed01db24" translate="yes" xml:space="preserve">
          <source>Added retina favicon. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/83&quot;&gt;#83&lt;/a&gt;.</source>
          <target state="translated">添加了视网膜图标。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/83&quot;&gt;＃83&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5335944bc2e966c926c3dbdcf6855b54bcfd1eae" translate="yes" xml:space="preserve">
          <source>Added small delay (10ms) between each keystroke during &lt;code&gt;cy.type()&lt;/code&gt;</source>
          <target state="translated">在 &lt;code&gt;cy.type()&lt;/code&gt; 期间，每次击键之间增加了小的延迟（10ms ）</target>
        </trans-unit>
        <trans-unit id="50a178c6c3ef4c47dab55ceba0de31d24a2f1ed7" translate="yes" xml:space="preserve">
          <source>Added special error messages when elements cannot have actions applied to them with a suggestion to use &lt;code&gt;{force: true}&lt;/code&gt;.</source>
          <target state="translated">当元素无法应用操作并建议使用 &lt;code&gt;{force: true}&lt;/code&gt; 时，添加了特殊错误消息。</target>
        </trans-unit>
        <trans-unit id="f7fe3d72dca7f2a0f3c7bb08a6adea2ae3730a62" translate="yes" xml:space="preserve">
          <source>Added support for a command&amp;rsquo;s &lt;code&gt;message&lt;/code&gt; or &lt;code&gt;renderProps.message&lt;/code&gt; to use markdown.</source>
          <target state="translated">添加了对命令 &lt;code&gt;message&lt;/code&gt; 或 &lt;code&gt;renderProps.message&lt;/code&gt; 的支持，以使用markdown。</target>
        </trans-unit>
        <trans-unit id="89aef9e5ec2dbda10112a16e65524364c12a2ba1" translate="yes" xml:space="preserve">
          <source>Added support for any valid HTTP &lt;code&gt;method&lt;/code&gt; argument including &lt;code&gt;TRACE&lt;/code&gt;, &lt;code&gt;COPY&lt;/code&gt;, &lt;code&gt;LOCK&lt;/code&gt;, &lt;code&gt;MKCOL&lt;/code&gt;, &lt;code&gt;MOVE&lt;/code&gt;, &lt;code&gt;PURGE&lt;/code&gt;, &lt;code&gt;PROPFIND&lt;/code&gt;, &lt;code&gt;PROPPATCH&lt;/code&gt;, &lt;code&gt;UNLOCK&lt;/code&gt;, &lt;code&gt;REPORT&lt;/code&gt;, &lt;code&gt;MKACTIVITY&lt;/code&gt;, &lt;code&gt;CHECKOUT&lt;/code&gt;, &lt;code&gt;MERGE&lt;/code&gt;, &lt;code&gt;M-SEARCH&lt;/code&gt;, &lt;code&gt;NOTIFY&lt;/code&gt;, &lt;code&gt;SUBSCRIBE&lt;/code&gt;, &lt;code&gt;UNSUBSCRIBE&lt;/code&gt;, &lt;code&gt;SEARCH&lt;/code&gt;, and &lt;code&gt;CONNECT&lt;/code&gt;.</source>
          <target state="translated">添加了对任何有效HTTP &lt;code&gt;method&lt;/code&gt; 参数的支持，包括 &lt;code&gt;TRACE&lt;/code&gt; ， &lt;code&gt;COPY&lt;/code&gt; ， &lt;code&gt;LOCK&lt;/code&gt; ， &lt;code&gt;MKCOL&lt;/code&gt; ， &lt;code&gt;MOVE&lt;/code&gt; ， &lt;code&gt;PURGE&lt;/code&gt; ， &lt;code&gt;PROPFIND&lt;/code&gt; ， &lt;code&gt;PROPPATCH&lt;/code&gt; ， &lt;code&gt;UNLOCK&lt;/code&gt; ， &lt;code&gt;REPORT&lt;/code&gt; ， &lt;code&gt;MKACTIVITY&lt;/code&gt; ， &lt;code&gt;CHECKOUT&lt;/code&gt; ， &lt;code&gt;MERGE&lt;/code&gt; ， &lt;code&gt;M-SEARCH&lt;/code&gt; ， &lt;code&gt;NOTIFY&lt;/code&gt; ， &lt;code&gt;SUBSCRIBE&lt;/code&gt; ， &lt;code&gt;UNSUBSCRIBE&lt;/code&gt; ， &lt;code&gt;SEARCH&lt;/code&gt; 和 &lt;code&gt;CONNECT&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="51c2bf439a47480197a9b00911a3e1e289363b83" translate="yes" xml:space="preserve">
          <source>Added support for options &lt;code&gt;retryOnStatusCodeFailure&lt;/code&gt; and &lt;code&gt;retryOnNetworkFailure&lt;/code&gt;</source>
          <target state="translated">添加了对选项 &lt;code&gt;retryOnStatusCodeFailure&lt;/code&gt; 和 &lt;code&gt;retryOnNetworkFailure&lt;/code&gt; 的支持</target>
        </trans-unit>
        <trans-unit id="9fbb72efc2199e30fa75b3b1e1a22d5426525820" translate="yes" xml:space="preserve">
          <source>Added support for options &lt;code&gt;retryOnStatusCodeFailure&lt;/code&gt; and &lt;code&gt;retryOnNetworkFailure&lt;/code&gt;.</source>
          <target state="translated">添加了对选项 &lt;code&gt;retryOnStatusCodeFailure&lt;/code&gt; 和 &lt;code&gt;retryOnNetworkFailure&lt;/code&gt; 的支持。</target>
        </trans-unit>
        <trans-unit id="39412ed672a29311e6c728c537c5bbeb066f9928" translate="yes" xml:space="preserve">
          <source>Added support to &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; for inputs of type &lt;code&gt;date&lt;/code&gt;, &lt;code&gt;time&lt;/code&gt;, &lt;code&gt;month&lt;/code&gt;, and &lt;code&gt;week&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/27&quot;&gt;#27&lt;/a&gt;.</source>
          <target state="translated">为&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;添加了对 &lt;code&gt;date&lt;/code&gt; ， &lt;code&gt;time&lt;/code&gt; ， &lt;code&gt;month&lt;/code&gt; 和 &lt;code&gt;week&lt;/code&gt; 类型输入的支持。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/27&quot;&gt;＃27&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e958168342438e8cf735a63b796c60e515b1b4c4" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;Beta&lt;/code&gt; flag everywhere (since we are still technically in beta).</source>
          <target state="translated">在各处都添加了 &lt;code&gt;Beta&lt;/code&gt; 标志（因为从技术上讲，我们仍然处于beta状态）。</target>
        </trans-unit>
        <trans-unit id="3d82a3252ddebe882e2e1cc25a8b15fb4a448502" translate="yes" xml:space="preserve">
          <source>Added the ability to click on file/folder links from within the Cypress webapp that will spawn your OS file/folder finder and show you where the files are located in your project.</source>
          <target state="translated">增加了从Cypress webapp中点击文件/文件夹链接的功能,这将产生你的操作系统文件/文件夹搜索器,并显示你的项目中文件的位置。</target>
        </trans-unit>
        <trans-unit id="525c608b9349014ab2640891669ad5b050c8a18e" translate="yes" xml:space="preserve">
          <source>Added tooltips everywhere.</source>
          <target state="translated">增加了各地的工具提示。</target>
        </trans-unit>
        <trans-unit id="77226f24e080cbf42517445a5cf5f38ce82e807c" translate="yes" xml:space="preserve">
          <source>Added type definition for &lt;a href=&quot;../../api/cypress-api/iscy&quot;&gt;&lt;code&gt;Cypress.isCy()&lt;/code&gt;&lt;/a&gt; method. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3822&quot;&gt;#3822&lt;/a&gt;.</source>
          <target state="translated">为&lt;a href=&quot;../../api/cypress-api/iscy&quot;&gt; &lt;code&gt;Cypress.isCy()&lt;/code&gt; &lt;/a&gt;方法添加了类型定义。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3822&quot;&gt;＃3822&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="42ccb4932d1217df390f573e91b3df2bbbd3b49f" translate="yes" xml:space="preserve">
          <source>Added type definition for undocumented &lt;code&gt;Cypress.LocalStorage.clear&lt;/code&gt; method. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4070&quot;&gt;#4070&lt;/a&gt;.</source>
          <target state="translated">为未 &lt;code&gt;Cypress.LocalStorage.clear&lt;/code&gt; 方法添加了类型定义。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4070&quot;&gt;＃4070&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5f6e9a3018bf12c68699e2098cf27adaa1e84bd0" translate="yes" xml:space="preserve">
          <source>Added type definitions for &lt;code&gt;Cypress.moment()&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2746&quot;&gt;#2746&lt;/a&gt;.</source>
          <target state="translated">为 &lt;code&gt;Cypress.moment()&lt;/code&gt; 添加了类型定义。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2746&quot;&gt;＃2746&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fd3d7d418daa5583b3f32db71a7b98561065da2f" translate="yes" xml:space="preserve">
          <source>Added type definitions for &lt;code&gt;Cypress.off&lt;/code&gt; and &lt;code&gt;Cypress.log&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1110&quot;&gt;#1110&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1591&quot;&gt;#1591&lt;/a&gt;.</source>
          <target state="translated">为 &lt;code&gt;Cypress.off&lt;/code&gt; 和 &lt;code&gt;Cypress.log&lt;/code&gt; 添加了类型定义。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1110&quot;&gt;＃1110&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1591&quot;&gt;＃1591&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b09744d2592ed635b95af69c97d2c9ae57ba0c82" translate="yes" xml:space="preserve">
          <source>Added utility methods &lt;a href=&quot;../../api/cypress-api/platform&quot;&gt;&lt;code&gt;Cypress.platform&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/cypress-api/arch&quot;&gt;&lt;code&gt;Cypress.arch&lt;/code&gt;&lt;/a&gt; for returning the underlying OS information. Uses node&amp;rsquo;s &lt;code&gt;os&lt;/code&gt; module under the hood. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/824&quot;&gt;#824&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/675&quot;&gt;#675&lt;/a&gt;.</source>
          <target state="translated">添加了实用程序方法&lt;a href=&quot;../../api/cypress-api/platform&quot;&gt; &lt;code&gt;Cypress.platform&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../api/cypress-api/arch&quot;&gt; &lt;code&gt;Cypress.arch&lt;/code&gt; ,&lt;/a&gt;用于返回基础OS信息。在后台使用节点的 &lt;code&gt;os&lt;/code&gt; 模块。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/824&quot;&gt;＃824&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/675&quot;&gt;＃675&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2b9e4a31489c6fd1bd2206107de38dca0fe49604" translate="yes" xml:space="preserve">
          <source>Added word labels beside icons in Desktop Application for &amp;lsquo;Support&amp;rsquo; and &amp;lsquo;Docs&amp;rsquo; links. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3091&quot;&gt;#3091&lt;/a&gt;.</source>
          <target state="translated">在Desktop Application中的&amp;ldquo;支持&amp;rdquo;和&amp;ldquo;文档&amp;rdquo;链接的图标旁边添加了文字标签。地址&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3091&quot;&gt;＃3091&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="120aebbb2f2b583c8ccd5be7138662cb1ef2a3a6" translate="yes" xml:space="preserve">
          <source>Adding New Assertions</source>
          <target state="translated">添加新断言</target>
        </trans-unit>
        <trans-unit id="d7a2c4606060e39f4fb87c860138f3fba92bd92b" translate="yes" xml:space="preserve">
          <source>Adding a &lt;a href=&quot;configuration#Global&quot;&gt;&lt;code&gt;baseUrl&lt;/code&gt;&lt;/a&gt; can also save some time during the initial startup of your Cypress tests.</source>
          <target state="translated">在首次启动Cypress测试时，添加&lt;a href=&quot;configuration#Global&quot;&gt; &lt;code&gt;baseUrl&lt;/code&gt; &lt;/a&gt;还可以节省一些时间。</target>
        </trans-unit>
        <trans-unit id="0fd6f4c1b2dfa7a02b06fb44fd121b1091315e1e" translate="yes" xml:space="preserve">
          <source>Adding a &lt;a href=&quot;configuration#Global&quot;&gt;&lt;code&gt;baseUrl&lt;/code&gt;&lt;/a&gt; in your configuration allows you to omit passing the &lt;code&gt;baseUrl&lt;/code&gt; to commands like &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt;. Cypress assumes this is the url you want to use.</source>
          <target state="translated">添加&lt;a href=&quot;configuration#Global&quot;&gt; &lt;code&gt;baseUrl&lt;/code&gt; &lt;/a&gt;在您的配置，您可以省略传递 &lt;code&gt;baseUrl&lt;/code&gt; 的命令一样&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt;。赛普拉斯假定这是您要使用的URL。</target>
        </trans-unit>
        <trans-unit id="fa7ae94b3e380782926fae3086a5e6d37fd917ce" translate="yes" xml:space="preserve">
          <source>Adding a &lt;a href=&quot;http://www.typescriptlang.org/docs/handbook/tsconfig-json.html&quot;&gt;&lt;code&gt;tsconfig.json&lt;/code&gt;&lt;/a&gt; inside your &lt;a href=&quot;../core-concepts/writing-and-organizing-tests#Folder-Structure&quot;&gt;&lt;code&gt;cypress&lt;/code&gt; folder&lt;/a&gt; with the following configuration should get intelligent code completion working.</source>
          <target state="translated">使用以下配置在您的&lt;a href=&quot;../core-concepts/writing-and-organizing-tests#Folder-Structure&quot;&gt; &lt;code&gt;cypress&lt;/code&gt; &lt;/a&gt;文件夹内添加&lt;a href=&quot;http://www.typescriptlang.org/docs/handbook/tsconfig-json.html&quot;&gt; &lt;code&gt;tsconfig.json&lt;/code&gt; &lt;/a&gt;可以使智能代码完成工作。</target>
        </trans-unit>
        <trans-unit id="d1827607e9a1ebf3d970be390f7eefa603ae069d" translate="yes" xml:space="preserve">
          <source>Adding an alias using &lt;a href=&quot;as&quot;&gt;&lt;code&gt;.as()&lt;/code&gt;&lt;/a&gt; to spies makes them easier to identify in error messages and Cypress&amp;rsquo; command log.</source>
          <target state="translated">使用&lt;a href=&quot;as&quot;&gt; &lt;code&gt;.as()&lt;/code&gt; &lt;/a&gt;向间谍添加别名可以使它们更容易在错误消息和赛普拉斯的命令日志中识别。</target>
        </trans-unit>
        <trans-unit id="27e7d89aa5da0579d59c43b52212f8102937ee41" translate="yes" xml:space="preserve">
          <source>Adding an alias using &lt;a href=&quot;as&quot;&gt;&lt;code&gt;.as()&lt;/code&gt;&lt;/a&gt; to stubs makes them easier to identify in error messages and Cypress&amp;rsquo;s command log.</source>
          <target state="translated">使用&lt;a href=&quot;as&quot;&gt; &lt;code&gt;.as()&lt;/code&gt; &lt;/a&gt;向存根添加别名可以使它们更容易在错误消息和赛普拉斯的命令日志中识别。</target>
        </trans-unit>
        <trans-unit id="c461fd64d305b87bea7b5f1a217a1a2ae92794fa" translate="yes" xml:space="preserve">
          <source>Adding an attribute called &lt;code&gt;data-cypress-ignore&lt;/code&gt; to an element will prevent the internal Cypress proxy from rewriting any of its content or attributes.</source>
          <target state="translated">在元素上添加名为 &lt;code&gt;data-cypress-ignore&lt;/code&gt; 的属性将防止内部Cypress代理重写其任何内容或属性。</target>
        </trans-unit>
        <trans-unit id="7505243d5e5f36f2ae798392e98c6f6710866ffe" translate="yes" xml:space="preserve">
          <source>Adding custom properties to the global &lt;code&gt;window&lt;/code&gt; with the right TypeScript type</source>
          <target state="translated">使用正确的TypeScript类型将自定义属性添加到全局 &lt;code&gt;window&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="948a56da88c62a52b1ff1519fb4d1ac9cdf61dca" translate="yes" xml:space="preserve">
          <source>Adding delay can help simulate real world network latency. Normally stubbed responses return in under 20ms. Adding a delay can help you visualize how your application&amp;rsquo;s state reacts to requests that are in flight.</source>
          <target state="translated">添加延迟可以帮助模拟现实世界的网络延迟。正常情况下，响应响应延迟不到20ms。添加延迟可以帮助您可视化应用程序的状态如何响应进行中的请求。</target>
        </trans-unit>
        <trans-unit id="0e2022ba53a45c0b6bfce900a7c9a8dfc3cae998" translate="yes" xml:space="preserve">
          <source>Adding more commands and assertions</source>
          <target state="translated">增加更多的命令和断言</target>
        </trans-unit>
        <trans-unit id="9085f8ef65fbf074655320c20158f4d7ef91508c" translate="yes" xml:space="preserve">
          <source>Adding npm scripts</source>
          <target state="translated">添加npm脚本</target>
        </trans-unit>
        <trans-unit id="871f46d7b3e98ab8e4ab31b3b18b1fa219de1b75" translate="yes" xml:space="preserve">
          <source>Adding validations is optional. Passing &lt;code&gt;{ prevSubject: true }&lt;/code&gt; will require a subject, but not validate its type.</source>
          <target state="translated">添加验证是可选的。传递 &lt;code&gt;{ prevSubject: true }&lt;/code&gt; 将需要一个主题，但不验证其类型。</target>
        </trans-unit>
        <trans-unit id="bbf54007428a1ae132f48f9e50b37268e62a772b" translate="yes" xml:space="preserve">
          <source>Additional arguments to be given to the function call. There is no limit to the number of arguments.</source>
          <target state="translated">函数调用的附加参数。对参数的数量没有限制。</target>
        </trans-unit>
        <trans-unit id="30c9d38014f6b16fef1e182bee0de48a6f46686f" translate="yes" xml:space="preserve">
          <source>Additional arguments to be printed to the Cypress Command Log. There is no limit to the number of arguments.</source>
          <target state="translated">要打印到赛普拉斯命令日志的其他参数。对参数的数量没有限制。</target>
        </trans-unit>
        <trans-unit id="6bf5ee7e78978bbcdb206e7947b4c3fd038a5c0b" translate="yes" xml:space="preserve">
          <source>Additional headers to send; Accepts object literal</source>
          <target state="translated">要发送的附加头文件;接受对象的文字说明。</target>
        </trans-unit>
        <trans-unit id="911a0b354b810ade1b41221cd419095a4767144e" translate="yes" xml:space="preserve">
          <source>Additional information</source>
          <target state="translated">其他信息</target>
        </trans-unit>
        <trans-unit id="d91206f7ffc181e9d7e903c7a51d7a3f4016af88" translate="yes" xml:space="preserve">
          <source>Additionally &lt;code&gt;change&lt;/code&gt; events will be fired either when the &lt;code&gt;{enter}&lt;/code&gt; key is pressed (and the value has changed since the last focus event), or whenever the element loses focus. This matches browser behavior.</source>
          <target state="translated">另外，按下 &lt;code&gt;{enter}&lt;/code&gt; 键（并且自上次焦点事件以来值已更改）或元素失去焦点时，都会触发 &lt;code&gt;change&lt;/code&gt; 事件。这与浏览器行为匹配。</target>
        </trans-unit>
        <trans-unit id="6a948140f5ee3e640a89457e849cdbe9dfa8e949" translate="yes" xml:space="preserve">
          <source>Additionally Cypress handles these 4 other situations as defined in the spec:</source>
          <target state="translated">另外赛普拉斯还处理了规范中定义的这4种其他情况。</target>
        </trans-unit>
        <trans-unit id="468764ab2864517526e548dc2a3176d5881494de" translate="yes" xml:space="preserve">
          <source>Additionally an element is considered hidden if:</source>
          <target state="translated">此外,一个元素在以下情况下被认为是隐藏的:</target>
        </trans-unit>
        <trans-unit id="f85e140ff278a5f548c74dfc46ec934ba22c58dc" translate="yes" xml:space="preserve">
          <source>Additionally if the &lt;code&gt;mousedown&lt;/code&gt; event causes the element to be removed from the DOM, the remaining events should continue to be fired, but to the resulting element left below the removed element. This has also not been implemented. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;Open an issue&lt;/a&gt; if you need this to be fixed.</source>
          <target state="translated">此外，如果 &lt;code&gt;mousedown&lt;/code&gt; 事件导致该元素从DOM中删除，则其余事件应继续触发，但将结果元素留在已删除元素下方。这也没有实现。如果您需要解决此&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;问题&lt;/a&gt;，请打开一个问题。</target>
        </trans-unit>
        <trans-unit id="91cfdf20738fead4d1c75a2cdec65956051a528a" translate="yes" xml:space="preserve">
          <source>Additionally we&amp;rsquo;ll display a red &amp;ldquo;hitbox&amp;rdquo; - which is a dot indicating the coordinates of the event.</source>
          <target state="translated">另外，我们将显示一个红色的&amp;ldquo; hitbox&amp;rdquo;-一个点，指示事件的坐标。</target>
        </trans-unit>
        <trans-unit id="8d3990b822f78b90c0d0e6a0d1612720ef0d0f6d" translate="yes" xml:space="preserve">
          <source>Additionally we&amp;rsquo;ve integrated the tests run into the Cypress &lt;a href=&quot;../core-concepts/test-runner&quot;&gt;Test Runner&lt;/a&gt;. This means you can see the tests run in the &lt;em&gt;Runs&lt;/em&gt; tab from within every project.</source>
          <target state="translated">另外，我们将测试运行集成到了Cypress &lt;a href=&quot;../core-concepts/test-runner&quot;&gt;Test Runner中&lt;/a&gt;。这意味着您可以在每个项目的&amp;ldquo; &lt;em&gt;运行&amp;rdquo;&lt;/em&gt;选项卡中查看运行的测试。</target>
        </trans-unit>
        <trans-unit id="7476d1308d7149d2864e651f4f1c1e700b20c2dc" translate="yes" xml:space="preserve">
          <source>Additionally, Cypress automatically sets the viewport to its default size between each test.</source>
          <target state="translated">此外,Cypress会在每次测试之间自动将视口设置为默认大小。</target>
        </trans-unit>
        <trans-unit id="df804973b85c1b22ce250c1ef82d652af52ef6ce" translate="yes" xml:space="preserve">
          <source>Additionally, Cypress will automatically capture screenshots when a failure happens during runs outside of interactive mode.</source>
          <target state="translated">此外,当交互模式以外的运行过程中发生故障时,Cypress会自动捕捉屏幕截图。</target>
        </trans-unit>
        <trans-unit id="230528d44508fade9c80a8c7e3711bdf464f6dbf" translate="yes" xml:space="preserve">
          <source>Additionally, Cypress will respect and await promises you return. This enables you to perform asynchronous tasks and eventually resolve with the modified configuration object.</source>
          <target state="translated">此外,Cypress会尊重并等待你返回的承诺。这使你能够执行异步任务,并最终用修改后的配置对象解决。</target>
        </trans-unit>
        <trans-unit id="4801a4b4aee3630e04a15685e0cf2ff70dc1d03f" translate="yes" xml:space="preserve">
          <source>Additionally, Mocha gives us excellent &lt;a href=&quot;http://mochajs.org/#asynchronous-code&quot;&gt;&lt;code&gt;async&lt;/code&gt; support&lt;/a&gt;. Cypress has extended Mocha, sanding off the rough edges, weird edge cases, bugs, and error messages. These fixes are all completely transparent.</source>
          <target state="translated">此外，Mocha还为我们提供了出色的&lt;a href=&quot;http://mochajs.org/#asynchronous-code&quot;&gt; &lt;code&gt;async&lt;/code&gt; 支持&lt;/a&gt;。赛普拉斯（Cypress）扩展了摩卡（Mocha），消除了粗糙的边缘，怪异的边缘情况，错误和错误消息。这些修复程序都是完全透明的。</target>
        </trans-unit>
        <trans-unit id="d260afa0496a40aa960b30970448e4afb9ff6c79" translate="yes" xml:space="preserve">
          <source>Additionally, events that cause a &lt;code&gt;change&lt;/code&gt; event to fire (such as typing &lt;code&gt;{enter}&lt;/code&gt;) will display with the &lt;code&gt;change&lt;/code&gt; event column as &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">此外，导致 &lt;code&gt;change&lt;/code&gt; 事件触发的事件（例如，键入 &lt;code&gt;{enter}&lt;/code&gt; ）将在 &lt;code&gt;change&lt;/code&gt; 事件列中显示为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b4e9f9733c1832ebe992ac9b0127b7ab9783c02b" translate="yes" xml:space="preserve">
          <source>Additionally, it is often much easier to use &lt;a href=&quot;debug&quot;&gt;&lt;code&gt;cy.debug()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;pause&quot;&gt;&lt;code&gt;cy.pause()&lt;/code&gt;&lt;/a&gt; when debugging your test code.</source>
          <target state="translated">此外，调试测试代码时，使用&lt;a href=&quot;debug&quot;&gt; &lt;code&gt;cy.debug()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;pause&quot;&gt; &lt;code&gt;cy.pause()&lt;/code&gt; &lt;/a&gt;通常会容易得多。</target>
        </trans-unit>
        <trans-unit id="c9d2a81a048c99de1a848edbc31e8b389111b527" translate="yes" xml:space="preserve">
          <source>Additionally, it makes it clear to everyone that this element is used directly by test code.</source>
          <target state="translated">此外,它还让大家明白,这个元素是直接被测试代码使用的。</target>
        </trans-unit>
        <trans-unit id="3a3235843c519d9722896ee477bfdaed75cb97c0" translate="yes" xml:space="preserve">
          <source>Additionally, testing through an OAuth provider is mutable - you will first need a real user on their service and then modifying anything on that user might affect other tests downstream.</source>
          <target state="translated">此外,通过OAuth提供商进行的测试是可以突变的--你首先需要在他们的服务上有一个真实的用户,然后修改该用户上的任何东西都可能影响下游的其他测试。</target>
        </trans-unit>
        <trans-unit id="c47c2859ba82bdc08ef2cd4ebd51f55d7f65246f" translate="yes" xml:space="preserve">
          <source>Additionally, the result of the last Cypress command in the callback function will be yielded as the new subject and flow into the next command if there is no &lt;code&gt;return&lt;/code&gt;.</source>
          <target state="translated">此外，回调函数中最后一个Cypress命令的结果将作为新主题产生，如果没有 &lt;code&gt;return&lt;/code&gt; ,则流入下一个命令。</target>
        </trans-unit>
        <trans-unit id="96df8f87b59d741ff09275ce132a63af65e75511" translate="yes" xml:space="preserve">
          <source>Additionally, we&amp;rsquo;ve made the browsers spawned by Cypress look different than regular sessions. You&amp;rsquo;ll see a darker theme around the chrome of the browser. You&amp;rsquo;ll always be able to visually distinguish these.</source>
          <target state="translated">此外，我们使赛普拉斯产生的浏览器看起来与常规会话不同。您会在浏览器的镶边中看到一个较暗的主题。您将始终能够在视觉上区分这些。</target>
        </trans-unit>
        <trans-unit id="9bc28a1c3538a13f85da39b541d21cd5d47d821f" translate="yes" xml:space="preserve">
          <source>Adds Authorization headers. &lt;a href=&quot;https://github.com/request/request#http-authentication&quot;&gt;Accepts these options.&lt;/a&gt;</source>
          <target state="translated">添加授权标头。&lt;a href=&quot;https://github.com/request/request#http-authentication&quot;&gt;接受这些选项。&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ea78242b0d31de5b6c99428ffdd6779230bcba84" translate="yes" xml:space="preserve">
          <source>Adds Basic Authorization headers</source>
          <target state="translated">添加基本授权标题</target>
        </trans-unit>
        <trans-unit id="537e752bbd94b12ebba271eb88182ea1d26e9eac" translate="yes" xml:space="preserve">
          <source>Adds XPath command. This repo is also a good example of using custom commands to do retries, provide TypeScript definitions, etc.</source>
          <target state="translated">添加XPath命令。这个repo也是一个很好的例子,使用自定义命令来进行重试,提供TypeScript定义等。</target>
        </trans-unit>
        <trans-unit id="233f419c5f3ce301a3ffbe59014a811761f56836" translate="yes" xml:space="preserve">
          <source>Adds a cypress child command for drag'n'drop support.</source>
          <target state="translated">增加了一个支持拖放的 cypress 子命令。</target>
        </trans-unit>
        <trans-unit id="08a051ffe2d712bb149aacfcc01b3281c41f4914" translate="yes" xml:space="preserve">
          <source>Adds commands for executing a mocked GraphQL server using only the client</source>
          <target state="translated">添加用于执行模拟GraphQL服务器的命令,只使用客户端。</target>
        </trans-unit>
        <trans-unit id="57b147e614b17010d0682e872632d1615f3de93c" translate="yes" xml:space="preserve">
          <source>Adds visual regression testing to Cypress</source>
          <target state="translated">为Cypress添加可视化回归测试</target>
        </trans-unit>
        <trans-unit id="4d064726954a17487f94e931f5b157b733ec22ed" translate="yes" xml:space="preserve">
          <source>Advanced</source>
          <target state="translated">Advanced</target>
        </trans-unit>
        <trans-unit id="b0a8b2c54edfd9a9ea755f46e06649a907893cff" translate="yes" xml:space="preserve">
          <source>Advanced setup</source>
          <target state="translated">高级设置</target>
        </trans-unit>
        <trans-unit id="1544669a79822dddcd02512f4c2ffb91edd5eff4" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;cypress run&lt;/code&gt; completes, Cypress automatically compresses the video in order to save on file size. By default it compresses to a &lt;code&gt;32 CRF&lt;/code&gt;, but this is configurable with the &lt;a href=&quot;../references/configuration#Videos&quot;&gt;&lt;code&gt;videoCompression&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">经过 &lt;code&gt;cypress run&lt;/code&gt; 完成，赛普拉斯自动压缩视频，以节省文件大小。默认情况下，它压缩为 &lt;code&gt;32 CRF&lt;/code&gt; ，但这可以通过&lt;a href=&quot;../references/configuration#Videos&quot;&gt; &lt;code&gt;videoCompression&lt;/code&gt; &lt;/a&gt;属性进行配置。</target>
        </trans-unit>
        <trans-unit id="6d64770f719d98fb093f232b824f4663be682ec4" translate="yes" xml:space="preserve">
          <source>After Screenshot</source>
          <target state="translated">截图后</target>
        </trans-unit>
        <trans-unit id="4663040b0fd94ae31c06c2ef4bb077f1b183c7ce" translate="yes" xml:space="preserve">
          <source>After Screenshot API</source>
          <target state="translated">截图后的API</target>
        </trans-unit>
        <trans-unit id="2f0c14f15072e5c313e17ef7b8d74a17fcc31a15" translate="yes" xml:space="preserve">
          <source>After a moment, the Cypress Test Runner will launch.</source>
          <target state="translated">稍后,Cypress Test Runner将启动。</target>
        </trans-unit>
        <trans-unit id="a97761c049ac5643e9eff096614806a9ae8b52bf" translate="yes" xml:space="preserve">
          <source>After a screenshot is taken, you can get details about the screenshot via the &lt;code&gt;after:screenshot&lt;/code&gt; plugin event. This event is called whether a screenshot is taken with &lt;a href=&quot;../commands/screenshot&quot;&gt;&lt;code&gt;cy.screenshot()&lt;/code&gt;&lt;/a&gt; or as a result of a test failure. The event is called after the screenshot image is written to disk.</source>
          <target state="translated">截屏后，您可以通过 &lt;code&gt;after:screenshot&lt;/code&gt; plugin事件获取有关截屏的详细信息。无论是使用&lt;a href=&quot;../commands/screenshot&quot;&gt; &lt;code&gt;cy.screenshot()&lt;/code&gt; &lt;/a&gt;截屏还是由于测试失败而截屏均称为此事件。屏幕快照图像写入磁盘后，将调用该事件。</target>
        </trans-unit>
        <trans-unit id="d545171003c5197a9b5e227a8a19148b959ef43d" translate="yes" xml:space="preserve">
          <source>After a test function is finished running, Cypress goes to work executing the commands that were enqueued using the &lt;code&gt;cy.*&lt;/code&gt; command chains. The test above would cause an execution in this order:</source>
          <target state="translated">测试功能运行完毕后，赛普拉斯开始执行使用 &lt;code&gt;cy.*&lt;/code&gt; 命令链排队的命令。上面的测试将按以下顺序执行：</target>
        </trans-unit>
        <trans-unit id="9793b5d949be8e616999352171be0bdcb8528d84" translate="yes" xml:space="preserve">
          <source>After adding a new project, Cypress will automatically scaffold out a suggested folder structure. By default it will create:</source>
          <target state="translated">在添加新项目后,Cypress会自动构建出一个建议的文件夹结构。默认情况下,它将创建:</target>
        </trans-unit>
        <trans-unit id="cff39eea96cbb5de58eb5f71460995aa0f831324" translate="yes" xml:space="preserve">
          <source>After an update Cypress will now open back up and show itself in these same coordinates.</source>
          <target state="translated">在更新之后,Cypress现在会重新打开,并在这些相同的坐标中显示自己。</target>
        </trans-unit>
        <trans-unit id="5106c8633a4e6b714abaf6821f06f403129010ba" translate="yes" xml:space="preserve">
          <source>After clicking on this &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;, I expect its class to eventually be &lt;code&gt;active&lt;/code&gt;.</source>
          <target state="translated">单击此 &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; 后，我希望其类最终处于 &lt;code&gt;active&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5bc9dcec32c0df8287938e0e967b52be23c1da17" translate="yes" xml:space="preserve">
          <source>After completing &lt;code&gt;cypress ci&lt;/code&gt;, we now upload build assets (such as &lt;code&gt;screenshots&lt;/code&gt; and &lt;code&gt;videos&lt;/code&gt;) to be used in our upcoming admin interface. This will enable you to review assets without having to touch your CI server. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/292&quot;&gt;#292&lt;/a&gt;.</source>
          <target state="translated">完成 &lt;code&gt;cypress ci&lt;/code&gt; 之后，我们现在上传构建资产（例如 &lt;code&gt;screenshots&lt;/code&gt; 和 &lt;code&gt;videos&lt;/code&gt; ），以在我们即将发布的管理界面中使用。这使您无需接触CI服务器即可查看资产。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/292&quot;&gt;＃292&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="114e2ed52497486047256b0a00c0bafa5bb6bd5b" translate="yes" xml:space="preserve">
          <source>After completing the Cypress GitHub App installation for your organization you can now enable GitHub Integration for &lt;em&gt;any&lt;/em&gt; Cypress project.</source>
          <target state="translated">为您的组织完成Cypress GitHub App安装后，您现在可以为&lt;em&gt;任何&lt;/em&gt; Cypress项目启用GitHub Integration 。</target>
        </trans-unit>
        <trans-unit id="880bcd9bf637e796ea891464470f3ee8ab3405de" translate="yes" xml:space="preserve">
          <source>After each test I want to ensure the database is reset back to 0 records so when the next test runs, it is run with a clean state.</source>
          <target state="translated">在每次测试后,我想确保数据库被重置为0条记录,这样当下一次测试运行时,就会以干净的状态运行。</target>
        </trans-unit>
        <trans-unit id="b2058db633883a3784f1e03db7b20e612cc5fcdc" translate="yes" xml:space="preserve">
          <source>After making an HTTP request to my server, I expect the response body to equal &lt;code&gt;{name: 'Jane'}&lt;/code&gt;</source>
          <target state="translated">向服务器发出HTTP请求后，我希望响应正文等于 &lt;code&gt;{name: 'Jane'}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="53ebcfac82646f78b243b2351374e6d832cfbc8d" translate="yes" xml:space="preserve">
          <source>After reading the above rules you may be wondering:</source>
          <target state="translated">看完以上规则,你可能会有疑问。</target>
        </trans-unit>
        <trans-unit id="fad2f8d32688e7447fc5e568b07607f08501785a" translate="yes" xml:space="preserve">
          <source>After running the test and opening the HTML report, we see 76% code coverage in our application.</source>
          <target state="translated">运行测试后,打开HTML报告,我们看到我们的应用中的代码覆盖率为76%。</target>
        </trans-unit>
        <trans-unit id="b11d05a74b6b7eeaf1db7256683cb3028ccb1154" translate="yes" xml:space="preserve">
          <source>After running this command, you will need to run &lt;code&gt;cypress install&lt;/code&gt; before running Cypress again.</source>
          <target state="translated">运行此命令后，需要先运行 &lt;code&gt;cypress install&lt;/code&gt; ,然后再运行Cypress。</target>
        </trans-unit>
        <trans-unit id="2cc967c14442524d275f2cae453073583c44f7e8" translate="yes" xml:space="preserve">
          <source>After running your test, instead of trying to &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; GitHub, you can use &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; to programmatically interact with GitHub&amp;rsquo;s APIs directly.</source>
          <target state="translated">运行测试，而不是试图之后&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt; GitHub上，你可以使用&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt;以编程方式直接与GitHub的API的相互作用。</target>
        </trans-unit>
        <trans-unit id="b604e0bd2b8b2268881be6f118e597f473a17b36" translate="yes" xml:space="preserve">
          <source>After scrolling the element, if we determine that it is still being covered up, we will continue to scroll and &amp;ldquo;nudge&amp;rdquo; the page until it becomes visible. This most frequently happens when you have &lt;code&gt;position: fixed&lt;/code&gt; or &lt;code&gt;position: sticky&lt;/code&gt; navigation elements which are fixed to the top of the page.</source>
          <target state="translated">滚动元素后，如果我们确定该元素仍被掩盖，则将继续滚动并&amp;ldquo;微移&amp;rdquo;页面，直到它变得可见为止。当您具有 &lt;code&gt;position: fixed&lt;/code&gt; 在页面顶部的位置：固定或 &lt;code&gt;position: sticky&lt;/code&gt; 导航元素时，这种情况最常发生。</target>
        </trans-unit>
        <trans-unit id="ba5ddb616e87b19516c1292204fb921dc0baca99" translate="yes" xml:space="preserve">
          <source>After setting up your project, Cypress inserted a unique &lt;a href=&quot;#Identification&quot;&gt;projectId&lt;/a&gt; into your &lt;code&gt;cypress.json&lt;/code&gt;. If you&amp;rsquo;re using source control, we recommend that you check your &lt;code&gt;cypress.json&lt;/code&gt; including the &lt;code&gt;projectId&lt;/code&gt; into source control.</source>
          <target state="translated">设置完项目后，赛普拉斯将唯一的&lt;a href=&quot;#Identification&quot;&gt;projectId&lt;/a&gt;插入到 &lt;code&gt;cypress.json&lt;/code&gt; 中。如果您使用的是源代码管理，我们建议您检查 &lt;code&gt;cypress.json&lt;/code&gt; ,并将 &lt;code&gt;projectId&lt;/code&gt; 包含到源代码管理中。</target>
        </trans-unit>
        <trans-unit id="7c9c8bfe384d058254b06fc47b998d58caa4d6a9" translate="yes" xml:space="preserve">
          <source>After starting a server:</source>
          <target state="translated">启动服务器后。</target>
        </trans-unit>
        <trans-unit id="b9ed25989ad72360ac6a33250955819cf37e09d1" translate="yes" xml:space="preserve">
          <source>After the first &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; command is issued in a test, Cypress changes its URL to match the origin of your remote application, thereby solving the first major hurdle of &lt;code&gt;same-origin policy&lt;/code&gt;. Your application&amp;rsquo;s code executes the same as it does outside of Cypress, and everything works as expected.</source>
          <target state="translated">在测试中发出第一个&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;命令后，赛普拉斯更改其URL以匹配您的远程应用程序的来源，从而解决了 &lt;code&gt;same-origin policy&lt;/code&gt; 的第一个主要障碍。应用程序的代码执行与Cypress外部执行的代码相同，并且一切正常。</target>
        </trans-unit>
        <trans-unit id="614db356accb5b760ada23e1a5acaa29047e8cf1" translate="yes" xml:space="preserve">
          <source>After the tests complete, the final code coverage is saved to a &lt;code&gt;.nyc_output&lt;/code&gt; folder. It is a JSON file from which we can generate a report in a variety of formats. The &lt;a href=&quot;https://github.com/cypress-io/code-coverage&quot;&gt;&lt;code&gt;@cypress/code-coverage&lt;/code&gt;&lt;/a&gt; plugin generates the HTML report automatically - you can open the &lt;code&gt;coverage/index.html&lt;/code&gt; page locally after the tests finish. You can also call &lt;code&gt;nyc report&lt;/code&gt; to generate other reports, for example, sending the coverage information to 3rd party services.</source>
          <target state="translated">测试完成后，最终代码覆盖率将保存到 &lt;code&gt;.nyc_output&lt;/code&gt; 文件夹。这是一个JSON文件，我们可以从中生成各种格式的报告。该&lt;a href=&quot;https://github.com/cypress-io/code-coverage&quot;&gt; &lt;code&gt;@cypress/code-coverage&lt;/code&gt; &lt;/a&gt;插件自动生成HTML报告-你可以打开 &lt;code&gt;coverage/index.html&lt;/code&gt; 页面后，在本地测试完成。您还可以调用 &lt;code&gt;nyc report&lt;/code&gt; 来生成其他报告，例如，将承保范围信息发送给第三方服务。</target>
        </trans-unit>
        <trans-unit id="86d5011fd900d5f8d53bae19fa8860aa7e81c0c8" translate="yes" xml:space="preserve">
          <source>After this update if you are seeing &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; origin errors &lt;em&gt;please let us know&lt;/em&gt; by &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;opening an issue&lt;/a&gt;. We will screen-share with you to diagnose the issue. We&amp;rsquo;re no longer aware of any situation where this should happen, so if you&amp;rsquo;re experiencing these bugs, please help us track them down.</source>
          <target state="translated">此更新，如果你看到后 &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; 起源错误&lt;em&gt;，请让我们知道&lt;/em&gt;通过&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;打开的问题&lt;/a&gt;。我们将与您共享屏幕以诊断问题。我们不再知道应该发生这种情况的任何情况，因此，如果您遇到这些错误，请帮助我们对其进行跟踪。</target>
        </trans-unit>
        <trans-unit id="5b07810acf9c2d34db9c7240f208f6d87b6c1072" translate="yes" xml:space="preserve">
          <source>After we verify the element is actionable, Cypress will then fire all of the appropriate events and corresponding default actions. Usually these events&amp;rsquo; coordinates are fired at the center of the element, but most commands enable you to change the position it&amp;rsquo;s fired to.</source>
          <target state="translated">在我们确认该元素是可操作的之后，赛普拉斯将触发所有适当的事件和相应的默认操作。通常，这些事件的坐标在元素的中心触发，但是大多数命令使您可以更改其触发位置。</target>
        </trans-unit>
        <trans-unit id="fd32756fcef998c7af49edd21b43862599a7ac32" translate="yes" xml:space="preserve">
          <source>After you alias DOM elements, you can then later access them for reuse.</source>
          <target state="translated">当你对DOM元素进行别名后,以后就可以访问它们进行重用。</target>
        </trans-unit>
        <trans-unit id="9f366b5c18e1c6e130d8094e98aad875ee890dfd" translate="yes" xml:space="preserve">
          <source>After you refresh the page you&amp;rsquo;ll see something that looks like this in your console:</source>
          <target state="translated">刷新页面后，您将在控制台中看到类似以下内容的内容：</target>
        </trans-unit>
        <trans-unit id="781e5d5d256c07852e0229fc228fa546ad878269" translate="yes" xml:space="preserve">
          <source>After you&amp;rsquo;re done, we suggest watching some of our  &lt;a href=&quot;https://docs.cypress.io/examples/examples/tutorials.html&quot;&gt;Tutorial Videos&lt;/a&gt;.</source>
          <target state="translated">完成后，建议您观看一些 &lt;a href=&quot;https://docs.cypress.io/examples/examples/tutorials.html&quot;&gt;教程视频&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c2c2e3c689c23ff97fa7a81a5b3260f74b707942" translate="yes" xml:space="preserve">
          <source>Aggressively cleaned up listeners after each test completion + run.</source>
          <target state="translated">每次测试完成+运行后,积极清理听众。</target>
        </trans-unit>
        <trans-unit id="04259816ace1ebe56c853a8763558570c008514a" translate="yes" xml:space="preserve">
          <source>Alias</source>
          <target state="translated">Alias</target>
        </trans-unit>
        <trans-unit id="58a32cb2b2b482fe3807efad24791d4e77bc9df1" translate="yes" xml:space="preserve">
          <source>Alias names cannot match some reserved words.</source>
          <target state="translated">别名不能与一些保留字匹配。</target>
        </trans-unit>
        <trans-unit id="c8a78157d8e4bcce166bd6e9b7527b017e3886ce" translate="yes" xml:space="preserve">
          <source>Alias the request using &lt;a href=&quot;as&quot;&gt;&lt;code&gt;.as()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">使用&lt;a href=&quot;as&quot;&gt; &lt;code&gt;.as()&lt;/code&gt; &lt;/a&gt;别名请求</target>
        </trans-unit>
        <trans-unit id="27fc2389ccf483a69615740c2b66df7ae39d2630" translate="yes" xml:space="preserve">
          <source>Aliased DOM objects are now correctly stored on the test&amp;rsquo;s &lt;code&gt;ctx&lt;/code&gt; as instances of &lt;strong&gt;your&lt;/strong&gt; jQuery (if one exists).</source>
          <target state="translated">现在别名DOM对象被正确地存储在测试的 &lt;code&gt;ctx&lt;/code&gt; 作为实例&lt;strong&gt;你&lt;/strong&gt;（如果存在的话）的jQuery。</target>
        </trans-unit>
        <trans-unit id="f9e43314ee35ec59e34093e695606fd6ba74f0b9" translate="yes" xml:space="preserve">
          <source>Aliased Routes</source>
          <target state="translated">别名路线</target>
        </trans-unit>
        <trans-unit id="90c024b3630d0b65ea4c971e8c6b9dd01e34637f" translate="yes" xml:space="preserve">
          <source>Aliased commands now correctly output a command log again when they are replayed.</source>
          <target state="translated">别名命令现在在重放时再次正确地输出命令日志。</target>
        </trans-unit>
        <trans-unit id="6a8b49f23c0c2e66b347773e3a4bb453ff1fb91c" translate="yes" xml:space="preserve">
          <source>Aliases</source>
          <target state="translated">Aliases</target>
        </trans-unit>
        <trans-unit id="42d70bc2a052365ba774b17ab2ee432316268cb6" translate="yes" xml:space="preserve">
          <source>Aliases are a powerful construct in Cypress that have many uses. We&amp;rsquo;ll explore each of their capabilities below.</source>
          <target state="translated">别名是赛普拉斯的一种强大功能，具有许多用途。我们将在下面探讨其每个功能。</target>
        </trans-unit>
        <trans-unit id="1dc0ec757c6013b85ce7cc1f587c58892d32fbb8" translate="yes" xml:space="preserve">
          <source>Aliases can also be used with &lt;a href=&quot;../../api/commands/request&quot;&gt;requests&lt;/a&gt;.</source>
          <target state="translated">别名也可以用于&lt;a href=&quot;../../api/commands/request&quot;&gt;请求&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b0785c2ca27ad0296e947dd2c3d104b2b93da85d" translate="yes" xml:space="preserve">
          <source>Aliases can also be used with &lt;a href=&quot;../../api/commands/route&quot;&gt;routes&lt;/a&gt;. Aliasing your routes enables you to:</source>
          <target state="translated">别名也可以与&lt;a href=&quot;../../api/commands/route&quot;&gt;路由&lt;/a&gt;一起使用。通过对路线进行别名处理，您可以：</target>
        </trans-unit>
        <trans-unit id="aba6b4ee98f223dffbd10d1afffccb1cab08e5db" translate="yes" xml:space="preserve">
          <source>Aliases have other special characteristics when being used with DOM elements.</source>
          <target state="translated">当与DOM元素一起使用时,别名有其他的特殊性。</target>
        </trans-unit>
        <trans-unit id="ee879bae61a6910e04e4f690c78490274df63bec" translate="yes" xml:space="preserve">
          <source>Aliases of routes display in the routes instrument panel:</source>
          <target state="translated">途径的别名显示在途径仪表盘中。</target>
        </trans-unit>
        <trans-unit id="bb21903cca1bc9fc5578b45299641b7324f7f2ed" translate="yes" xml:space="preserve">
          <source>Aliases which replay their commands will no longer break the current chain and therefore not unintentionally null our their subject for the ext command.</source>
          <target state="translated">重放命令的别名将不再中断当前链,因此不会无意中使ext命令的主题无效。</target>
        </trans-unit>
        <trans-unit id="0bf9d1c602827f172accf2bce7dff7e61ea25993" translate="yes" xml:space="preserve">
          <source>Aliasing &lt;a href=&quot;fixture&quot;&gt;&lt;code&gt;cy.fixture()&lt;/code&gt;&lt;/a&gt; data and then using &lt;code&gt;this&lt;/code&gt; to access it via the alias.</source>
          <target state="translated">混叠&lt;a href=&quot;fixture&quot;&gt; &lt;code&gt;cy.fixture()&lt;/code&gt; &lt;/a&gt;的数据，然后使用 &lt;code&gt;this&lt;/code&gt; 通过该别名来访问它。</target>
        </trans-unit>
        <trans-unit id="96ebf78dcb69f4c6915691b38961d7a884c763c1" translate="yes" xml:space="preserve">
          <source>Aliasing a DOM element and then using &lt;a href=&quot;get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; to access the aliased element.</source>
          <target state="translated">别名为DOM元素，然后使用&lt;a href=&quot;get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt;访问别名的元素。</target>
        </trans-unit>
        <trans-unit id="0b3de34b16d491dddd19ee60acb78e375091988d" translate="yes" xml:space="preserve">
          <source>Aliasing a route and then using &lt;a href=&quot;wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt; to wait for the aliased route.</source>
          <target state="translated">别名路由，然后使用&lt;a href=&quot;wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt;等待别名路由。</target>
        </trans-unit>
        <trans-unit id="3923e52777503070b457a2bb69918d0b0761c656" translate="yes" xml:space="preserve">
          <source>Aliasing custom commands now intelligently figures out where to apply the alias without being specified inside of the actual custom command.</source>
          <target state="translated">别名自定义命令现在可以智能地找出应用别名的位置,而无需在实际的自定义命令中指定。</target>
        </trans-unit>
        <trans-unit id="f3168b4982474d873050724121763fc87c00f626" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;../../api/commands/fixture&quot;&gt;&lt;code&gt;cy.fixture()&lt;/code&gt;&lt;/a&gt; extensions are now supported and Cypress will no longer throw on extensions it doesn&amp;rsquo;t recognize. For known fixture extensions we&amp;rsquo;ll continue to apply a default &lt;code&gt;encoding&lt;/code&gt; and for everything else it will default to &lt;code&gt;utf8&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/200&quot;&gt;#200&lt;/a&gt;.</source>
          <target state="translated">现在支持所有&lt;a href=&quot;../../api/commands/fixture&quot;&gt; &lt;code&gt;cy.fixture()&lt;/code&gt; &lt;/a&gt;扩展，赛普拉斯将不再抛出它无法识别的扩展。对于已知的灯具扩展，我们将继续应用默认 &lt;code&gt;encoding&lt;/code&gt; ，对于所有其他内容，它将默认为 &lt;code&gt;utf8&lt;/code&gt; 。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/200&quot;&gt;＃200&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="93cb012e5e912c995119ae70e9032b3c6ae1bd68" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;after()&lt;/code&gt; hooks run (once)</source>
          <target state="translated">所有 &lt;code&gt;after()&lt;/code&gt; 钩子都运行一次</target>
        </trans-unit>
        <trans-unit id="3d93539a87b6ca15b0d4e9f510e70575c80fea86" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;before()&lt;/code&gt; hooks run (once)</source>
          <target state="translated">所有 &lt;code&gt;before()&lt;/code&gt; 钩子都运行一次</target>
        </trans-unit>
        <trans-unit id="06aa2d4a71f181e9e0925d7c94a55d0035f34441" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;ng&lt;/code&gt; based commands now display in the Command Log.</source>
          <target state="translated">现在，所有基于 &lt;code&gt;ng&lt;/code&gt; 的命令都会显示在命令日志中。</target>
        </trans-unit>
        <trans-unit id="e345cde6ba462d3a5242f76f02d093e3397ccaac" translate="yes" xml:space="preserve">
          <source>All Assertions</source>
          <target state="translated">所有断言</target>
        </trans-unit>
        <trans-unit id="ba8a5794229abbed18561a56259b7c285aee006c" translate="yes" xml:space="preserve">
          <source>All Chrome* flavored browsers will be detected and are supported.</source>
          <target state="translated">所有Chrome*口味的浏览器都会被检测到并支持。</target>
        </trans-unit>
        <trans-unit id="822bfcb2c6173e33b67b9c050bfb9483bc8dd8fd" translate="yes" xml:space="preserve">
          <source>All Cypress related services have been updated to use HTTPS. We are forcing HTTPS redirects for everything except for &lt;code&gt;api.cypress.io&lt;/code&gt;, which would be a breaking change. By the next minor release we will force that as well. Once we make this change we will remove all versions below &lt;code&gt;0.13.7&lt;/code&gt;. So make sure you &lt;strong&gt;are not&lt;/strong&gt; locking the Cypress version when running in CI. We periodically remove old Cypress versions which have security flaws and this is an example of one.</source>
          <target state="translated">所有与赛普拉斯相关的服务已更新为使用HTTPS。我们正在强制对除 &lt;code&gt;api.cypress.io&lt;/code&gt; 以外的所有内容进行HTTPS重定向，这将是一个重大更改。在下一个次要版本中，我们也将强制这样做。进行更改后，我们将删除所有低于 &lt;code&gt;0.13.7&lt;/code&gt; 的版本。因此，请确保在CI中运行时&lt;strong&gt;未&lt;/strong&gt;锁定Cypress版本。我们会定期删除存在安全漏洞的赛普拉斯旧版本，这是一个示例。</target>
        </trans-unit>
        <trans-unit id="a7c369d8a2c14d2db5aaba3036c86bbee3b01968" translate="yes" xml:space="preserve">
          <source>All DOM based commands automatically wait for their elements to exist in the DOM.</source>
          <target state="translated">所有基于DOM的命令都会自动等待其元素在DOM中存在。</target>
        </trans-unit>
        <trans-unit id="381d815d7a49d2a2497d2e27b5690cefe390856d" translate="yes" xml:space="preserve">
          <source>All XHR&amp;rsquo;s (regardless of whether they are stubbed or not) are now logged in the Command Log. Stubbed XHR&amp;rsquo;s display as &amp;ldquo;XHR Stub&amp;rdquo; vs vanilla &amp;ldquo;XHR&amp;rdquo;.</source>
          <target state="translated">现在，所有XHR（无论是否已存根）都记录在命令日志中。XHR存根显示为&amp;ldquo; XHR存根&amp;rdquo;与香草&amp;ldquo; XHR&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="f4b16666ae16b1144b12fe33e8892f324036e7fa" translate="yes" xml:space="preserve">
          <source>All assertions, whether they&amp;rsquo;re the default ones or whether they&amp;rsquo;ve been added by you all share the same timeout values.</source>
          <target state="translated">所有断言，无论它们是默认断言还是您添加的断言都共享相同的超时值。</target>
        </trans-unit>
        <trans-unit id="4eb34196a949b2a03788444c7818858a118e46ca" translate="yes" xml:space="preserve">
          <source>All commands now retry if the associated element is disabled until the element is no longer disabled. If the command times out a specific error message is now thrown.</source>
          <target state="translated">如果相关元素被禁用,所有命令现在都会重试,直到该元素不再被禁用。如果命令超时,现在会抛出一个特定的错误信息。</target>
        </trans-unit>
        <trans-unit id="563aca6daa156016868ffcf4d9216f6228fe6ab4" translate="yes" xml:space="preserve">
          <source>All commands with a long message (such as assertions) are automatically scaled down in font size and truncated properly. In addition, assertions will correctly bold the &lt;code&gt;expected&lt;/code&gt; and &lt;code&gt;actual&lt;/code&gt; values.</source>
          <target state="translated">具有长消息的所有命令（例如断言）将自动按比例缩小字体大小并正确截断。另外，断言将正确地加粗 &lt;code&gt;expected&lt;/code&gt; 和 &lt;code&gt;actual&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="a4543b6ca4d3691e0ebb9e6bdc9a866f1c344c34" translate="yes" xml:space="preserve">
          <source>All current and &lt;em&gt;future&lt;/em&gt; repositories will be included with this installation if you choose &lt;strong&gt;All repositories&lt;/strong&gt;.</source>
          <target state="translated">如果选择&amp;ldquo; &lt;strong&gt;所有存储库&amp;rdquo;&lt;/strong&gt;，则此安装中将包括所有当前和&lt;em&gt;将来的&lt;/em&gt;存储&lt;strong&gt;库&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="e7808ee17aa0bd953fb7802cd8e367bc3503e3f0" translate="yes" xml:space="preserve">
          <source>All elements are now logged out as real DOM elements instead of jQuery wrapped elements. This has several upsides. Chrome will allow you to immediately interact with these elements, drilling into their contents, displaying the element box model on hover, etc. This prevents you from having to expand the jQuery elements and click &amp;ldquo;Reveal in Elements Panel&amp;rdquo;.</source>
          <target state="translated">现在，所有元素都作为真实的DOM元素而不是jQuery包装的元素注销。这有几个好处。Chrome浏览器将允许您立即与这些元素进行交互，深入研究它们的内容，在悬停时显示元素框模型等。这使您不必扩展jQuery元素并单击&amp;ldquo;在元素面板中显示&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="aee9dffb0c67d5eae76c5796adae3ffa6e037936" translate="yes" xml:space="preserve">
          <source>All error messages from using the CLI have been rewritten and improved.</source>
          <target state="translated">所有使用CLI的错误信息都已被重写和改进。</target>
        </trans-unit>
        <trans-unit id="6f323a2bc2a27e82337d63d69f9578723cc45773" translate="yes" xml:space="preserve">
          <source>All incompatible &lt;code&gt;a&lt;/code&gt; / &lt;code&gt;link&lt;/code&gt; / &lt;code&gt;form&lt;/code&gt; elements are transparently rewritten to be compatible including FQDN and protocol-less &lt;code&gt;href&lt;/code&gt; / &lt;code&gt;src&lt;/code&gt;.</source>
          <target state="translated">所有不兼容 &lt;code&gt;a&lt;/code&gt; / &lt;code&gt;link&lt;/code&gt; / &lt;code&gt;form&lt;/code&gt; 元素都被透明地重写为兼容的，包括FQDN和无协议的 &lt;code&gt;href&lt;/code&gt; / &lt;code&gt;src&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="902268fce917b7f37d9e9121ff109148c97bd51a" translate="yes" xml:space="preserve">
          <source>All of &lt;a href=&quot;click#Events&quot;&gt;the normal events&lt;/a&gt; documented on &lt;a href=&quot;click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; will fire.</source>
          <target state="translated">&lt;a href=&quot;click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt;上记录的所有&lt;a href=&quot;click#Events&quot;&gt;常规事件&lt;/a&gt;都将触发。</target>
        </trans-unit>
        <trans-unit id="7140ad825180205ff020a10ec875610310822eb1" translate="yes" xml:space="preserve">
          <source>All of Cypress&amp;rsquo;s commands, when clicked on within the &lt;a href=&quot;../core-concepts/test-runner#Command-Log&quot;&gt;Command Log&lt;/a&gt;, print extra information about the command, its subject, and its yielded result. Try clicking around the Command Log with your Developer Tools open! You may find some useful information here.</source>
          <target state="translated">在&amp;ldquo; &lt;a href=&quot;../core-concepts/test-runner#Command-Log&quot;&gt;命令日志&amp;rdquo;中&lt;/a&gt;单击时，所有Cypress的命令都会打印有关该命令，其主题及其产生的结果的更多信息。在开发人员工具打开的情况下，尝试单击命令日志！您可以在此处找到一些有用的信息。</target>
        </trans-unit>
        <trans-unit id="291e47342b7df69d835e0b9ffa71c3e7a29f3f7d" translate="yes" xml:space="preserve">
          <source>All of the &lt;a href=&quot;../../api/commands/type&quot;&gt;type docs have been updated&lt;/a&gt; to reflect these changes.</source>
          <target state="translated">所有&lt;a href=&quot;../../api/commands/type&quot;&gt;类型的文档均已更新，&lt;/a&gt;以反映这些更改。</target>
        </trans-unit>
        <trans-unit id="f9ea9c995bc9a01dd550451c9c9d030766e36024" translate="yes" xml:space="preserve">
          <source>All of the docs surrounding &lt;a href=&quot;../core-concepts/introduction-to-cypress#Assertions&quot;&gt;assertions&lt;/a&gt;, &lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../../api/commands/and&quot;&gt;&lt;code&gt;.and()&lt;/code&gt;&lt;/a&gt; have been updated to reflect the new API.</source>
          <target state="translated">周围所有的文档的&lt;a href=&quot;../core-concepts/introduction-to-cypress#Assertions&quot;&gt;断言&lt;/a&gt;，&lt;a href=&quot;../../api/commands/should&quot;&gt; &lt;code&gt;.should()&lt;/code&gt; &lt;/a&gt;，和&lt;a href=&quot;../../api/commands/and&quot;&gt; &lt;code&gt;.and()&lt;/code&gt; &lt;/a&gt;已更新，以反映新的API。</target>
        </trans-unit>
        <trans-unit id="0e70eae71f30e6f9f15605e3c4e817e96e453d81" translate="yes" xml:space="preserve">
          <source>All of these functions come from &lt;a href=&quot;../references/bundled-tools&quot;&gt;Bundled Tools&lt;/a&gt; that Cypress bakes in.</source>
          <target state="translated">所有这些功能都来自赛普拉斯烘烤的&lt;a href=&quot;../references/bundled-tools&quot;&gt;捆绑工具&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a028e9e1d6fe33c6edda776abc2f5e753b9a40eb" translate="yes" xml:space="preserve">
          <source>All responses are now streamed using &lt;code&gt;content-encoding: chunked&lt;/code&gt;.</source>
          <target state="translated">现在，所有响应都使用 &lt;code&gt;content-encoding: chunked&lt;/code&gt; 流式传输。</target>
        </trans-unit>
        <trans-unit id="90b2688d62fa55582ebd5904280dbdb762f119e4" translate="yes" xml:space="preserve">
          <source>All the &lt;code&gt;cy.cookie&lt;/code&gt; commands have been upgraded to take new options and can do much more powerful things outside of the JavaScript sandbox.</source>
          <target state="translated">所有 &lt;code&gt;cy.cookie&lt;/code&gt; 命令均已升级，可以采用新选项，并且可以在JavaScript沙箱之外执行更强大的功能。</target>
        </trans-unit>
        <trans-unit id="b8e8c14395eb9d1e37133098a1043ea2a4ac52d9" translate="yes" xml:space="preserve">
          <source>All third party &lt;code&gt;@types&lt;/code&gt; have been moved from Cypress &lt;code&gt;dependencies&lt;/code&gt; into &lt;code&gt;devDependencies&lt;/code&gt;. This should fix situations where user&amp;rsquo;s type dependencies were conflicting with Cypress&amp;rsquo;s third party type definitions. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3371&quot;&gt;#3371&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1227&quot;&gt;#1227&lt;/a&gt;.</source>
          <target state="translated">所有第三方 &lt;code&gt;@types&lt;/code&gt; 已从Cypress &lt;code&gt;dependencies&lt;/code&gt; 移至 &lt;code&gt;devDependencies&lt;/code&gt; 。这应该可以解决用户类型依赖项与赛普拉斯第三方类型定义冲突的情况。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3371&quot;&gt;＃3371&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1227&quot;&gt;＃1227&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5cbf8755b5b8f039acb14276dd0d7351dcecc346" translate="yes" xml:space="preserve">
          <source>All users must &lt;em&gt;LOG IN AGAIN&lt;/em&gt; and re-add their projects. Sorry, we&amp;rsquo;ve changed the way we store local data.</source>
          <target state="translated">所有用户必须&lt;em&gt;再次登录&lt;/em&gt;并重新添加他们的项目。抱歉，我们已经更改了存储本地数据的方式。</target>
        </trans-unit>
        <trans-unit id="c0d1272b9150bc86fbaee29a8e58268dc2495a6a" translate="yes" xml:space="preserve">
          <source>All we&amp;rsquo;re really doing here is creating a recursive function. Nothing more complicated than that.</source>
          <target state="translated">我们在这里真正要做的就是创建一个递归函数。没有比这更复杂的了。</target>
        </trans-unit>
        <trans-unit id="35d097c21a5b4117e20adc3a5bba502da964cc13" translate="yes" xml:space="preserve">
          <source>All you have to do is add that assertion and Cypress will &lt;strong&gt;reverse&lt;/strong&gt; its rules waiting for elements to exist.</source>
          <target state="translated">您所要做的就是添加断言，赛普拉斯将&lt;strong&gt;逆转&lt;/strong&gt;其规则，等待元素存在。</target>
        </trans-unit>
        <trans-unit id="c21e19c45f191abdc83c6ad85c85b05d57f7e32c" translate="yes" xml:space="preserve">
          <source>Allow Multiple Types</source>
          <target state="translated">允许多种类型</target>
        </trans-unit>
        <trans-unit id="7de0c74cb45f96835d1223b8275241ce2b65b8c4" translate="yes" xml:space="preserve">
          <source>Allow projects to be scrolled when &amp;gt;4 are added.</source>
          <target state="translated">添加&amp;gt; 4时，允许滚动项目。</target>
        </trans-unit>
        <trans-unit id="a6890fbcdbe0138a698e392b576be6edae9c0cab" translate="yes" xml:space="preserve">
          <source>Allow recording API results and replaying the APIs as a mock server.</source>
          <target state="translated">允许记录API结果,并作为模拟服务器重放API。</target>
        </trans-unit>
        <trans-unit id="93e1a3323056ddee8e7a8e69addfe63e5c2a4a6a" translate="yes" xml:space="preserve">
          <source>Allow timers and animations to keep running</source>
          <target state="translated">允许定时器和动画继续运行</target>
        </trans-unit>
        <trans-unit id="d62129852e67531130714d06d38237c62fd9ad51" translate="yes" xml:space="preserve">
          <source>Allows blocked pop-ups.</source>
          <target state="translated">允许阻止弹出窗口。</target>
        </trans-unit>
        <trans-unit id="16d55ff0ec6c99f39298a89dbaa709c16da9ea3e" translate="yes" xml:space="preserve">
          <source>Allows callback function argument</source>
          <target state="translated">允许回调函数参数</target>
        </trans-unit>
        <trans-unit id="786964bc707ab0e76774c6f306ceb7bffb28fdda" translate="yes" xml:space="preserve">
          <source>Allows for dynamic values between different machines.</source>
          <target state="translated">允许不同机器之间的动态值。</target>
        </trans-unit>
        <trans-unit id="ca449c775d0177235f5356bd63a1d5bd1dcedb29" translate="yes" xml:space="preserve">
          <source>Almost all commands can time out in some way.</source>
          <target state="translated">几乎所有的命令都能以某种方式超时。</target>
        </trans-unit>
        <trans-unit id="f64085a81ca5d3f24d71536387dddc7e54371dec" translate="yes" xml:space="preserve">
          <source>Also note that the &lt;a href=&quot;../core-concepts/test-runner#Overview&quot;&gt;App Preview&lt;/a&gt; pane has updated further after the click, following the link and showing the destination page:</source>
          <target state="translated">还要注意，单击后，链接之后并显示目标页面，&amp;ldquo; &lt;a href=&quot;../core-concepts/test-runner#Overview&quot;&gt;应用程序预览&amp;rdquo;&lt;/a&gt;窗格已进一步更新：</target>
        </trans-unit>
        <trans-unit id="d9f4d13b5965de3e9faefd5f19cfa06bf050ca23" translate="yes" xml:space="preserve">
          <source>Also take a look at &lt;a href=&quot;https://github.com/cypress-io/cypress-example-recipes#logging-in-recipes&quot;&gt;&quot;Logging in&quot;&lt;/a&gt; recipes.</source>
          <target state="translated">还可以看看&lt;a href=&quot;https://github.com/cypress-io/cypress-example-recipes#logging-in-recipes&quot;&gt;&amp;ldquo;登录&amp;rdquo;&lt;/a&gt;食谱。</target>
        </trans-unit>
        <trans-unit id="434c30a49d12b1dbe147db7fe4b3476a03ad1537" translate="yes" xml:space="preserve">
          <source>Alternate commands and assertions</source>
          <target state="translated">备用命令和断言</target>
        </trans-unit>
        <trans-unit id="6daeeba69e1e7e9afdead2e4f886b7543536be37" translate="yes" xml:space="preserve">
          <source>Alternatively a better solution to this problem is by waiting explicitly for an aliased route.</source>
          <target state="translated">另外,解决这个问题的一个更好的办法是明确地等待一个别名路由。</target>
        </trans-unit>
        <trans-unit id="0534612923fba7a4130492ab2343f99675cf49eb" translate="yes" xml:space="preserve">
          <source>Alternatively, if you are creating users, it might just be easier to create the user and set whether you want the wizard to be shown ahead of time. That would avoid this check later.</source>
          <target state="translated">另外,如果你正在创建用户,可能只是更容易创建用户并设置是否要提前显示向导。这样就可以避免以后的这种检查。</target>
        </trans-unit>
        <trans-unit id="f50ea7a00df6ad51ba616ac7c39de7e390f19c5f" translate="yes" xml:space="preserve">
          <source>Alternatively, if your server saves the campaign with a session, you could just ask your server to tell you which campaign you are on.</source>
          <target state="translated">或者,如果你的服务器保存了一个会话的活动,你可以直接要求你的服务器告诉你你在哪个活动上。</target>
        </trans-unit>
        <trans-unit id="f329e3d74dfc43f72c19a2b98048f5de321c20ae" translate="yes" xml:space="preserve">
          <source>Alternatively, to see screenshots in your Continuous Integration UI, most CI providers document a way to export the screenshots as artifacts and to make them available. Please see their appropriate documentation.</source>
          <target state="translated">另外,要想在持续集成 UI 中看到屏幕截图,大多数 CI 提供商都记录了一种将屏幕截图导出为工件并使其可用的方法。请参阅他们的相应文档。</target>
        </trans-unit>
        <trans-unit id="acb2b619b8ca08a19203294a9e08c2558bef88c0" translate="yes" xml:space="preserve">
          <source>Alternatively, you can always start a new chain of commands off of &lt;code&gt;cy&lt;/code&gt;.</source>
          <target state="translated">另外，您也可以始终从 &lt;code&gt;cy&lt;/code&gt; 开始新的命令链。</target>
        </trans-unit>
        <trans-unit id="1f786cd42ef7634c296a99c528cbfb24bbab7554" translate="yes" xml:space="preserve">
          <source>Although Cypress tries to enforce this limitation, it is possible for your application to bypass Cypress&amp;rsquo;s ability to detect this.</source>
          <target state="translated">尽管赛普拉斯尝试实施此限制，但您的应用程序有可能会绕过赛普拉斯检测此功能的能力。</target>
        </trans-unit>
        <trans-unit id="663d009161c0e67121ad0efe3740f77a4e514a56" translate="yes" xml:space="preserve">
          <source>Although in this guide we are testing our example application: &lt;a href=&quot;https://example.cypress.io/&quot;&gt;&lt;code&gt;https://example.cypress.io&lt;/code&gt;&lt;/a&gt; - you &lt;strong&gt;shouldn&amp;rsquo;t&lt;/strong&gt; test applications you &lt;strong&gt;don&amp;rsquo;t control&lt;/strong&gt;. Why?</source>
          <target state="translated">尽管在本指南中我们正在测试示例应用程序：&lt;a href=&quot;https://example.cypress.io/&quot;&gt; &lt;code&gt;https://example.cypress.io&lt;/code&gt; &lt;/a&gt; : //example.cypress.io-您&lt;strong&gt;不应&lt;/strong&gt;测试&lt;strong&gt;不受控制的&lt;/strong&gt;应用程序。为什么？</target>
        </trans-unit>
        <trans-unit id="33800dad07cac31ad452b3306f95c7c46020f345" translate="yes" xml:space="preserve">
          <source>Although it doesn&amp;rsquo;t do anything useful, this is our first passing test! ✅</source>
          <target state="translated">尽管它没有任何用处，但这是我们的第一个通过测试！✅</target>
        </trans-unit>
        <trans-unit id="587c4d6fdb0487cca1922e75ebdceaa21a62a50b" translate="yes" xml:space="preserve">
          <source>Although you &lt;em&gt;should&lt;/em&gt; see a nice error message, nothing beats visually inspecting and poking at the DOM yourself to understand the reason why.</source>
          <target state="translated">尽管您&lt;em&gt;应该会&lt;/em&gt;看到一条不错的错误消息，但您自己亲自检查并戳DOM以了解其原因，这无可厚非。</target>
        </trans-unit>
        <trans-unit id="a91bcce893b5de905ecbd22a99a03889cdcc2544" translate="yes" xml:space="preserve">
          <source>Always</source>
          <target state="translated">Always</target>
        </trans-unit>
        <trans-unit id="ea51b41122e451538fc47d98a2f15970e96b5fb0" translate="yes" xml:space="preserve">
          <source>Amount to scroll after the element has been scrolled into view</source>
          <target state="translated">元素滚动到视图后要滚动的数量。</target>
        </trans-unit>
        <trans-unit id="64afdda10ab6d82d241e9bd300d7e245407161be" translate="yes" xml:space="preserve">
          <source>An Overview</source>
          <target state="translated">概述</target>
        </trans-unit>
        <trans-unit id="bdf2bd2d1675a52b5a64765cf30edc103c20dafd" translate="yes" xml:space="preserve">
          <source>An XHR request hasn&amp;rsquo;t responded.</source>
          <target state="translated">XHR请求未响应。</target>
        </trans-unit>
        <trans-unit id="95da01758f2d7c5b393ddeeab0ac85ba0de9e723" translate="yes" xml:space="preserve">
          <source>An addition to the Cucumber plugin, featuring a collection of phrases you can use for common actions (ex: &quot;I click on an</source>
          <target state="translated">Cucumber插件的新增功能,提供了一系列您可以用于常见操作的短语(例如:&quot;我点击了一个 &quot;黄瓜&quot;)。</target>
        </trans-unit>
        <trans-unit id="02637837a1eea6b4333c86b65a1e19e84f22739b" translate="yes" xml:space="preserve">
          <source>An alias as defined using the &lt;a href=&quot;as&quot;&gt;&lt;code&gt;.as()&lt;/code&gt;&lt;/a&gt; command and referenced with the &lt;code&gt;@&lt;/code&gt; character and the name of the alias.</source>
          <target state="translated">使用&lt;a href=&quot;as&quot;&gt; &lt;code&gt;.as()&lt;/code&gt; &lt;/a&gt;命令定义的别名，并用 &lt;code&gt;@&lt;/code&gt; 字符和别名命名。</target>
        </trans-unit>
        <trans-unit id="4f5587c8f57cedcbf0a5bab7a74dfdba6c74b510" translate="yes" xml:space="preserve">
          <source>An alias for &lt;a href=&quot;type&quot;&gt;&lt;code&gt;.type({selectall}{backspace})&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;type&quot;&gt; &lt;code&gt;.type({selectall}{backspace})&lt;/code&gt; &lt;/a&gt;的别名</target>
        </trans-unit>
        <trans-unit id="c4004cfab86f9ff31dc280f8fcccb53d63ee8800" translate="yes" xml:space="preserve">
          <source>An alias of &lt;a href=&quot;and&quot;&gt;&lt;code&gt;.and()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;and&quot;&gt; &lt;code&gt;.and()&lt;/code&gt; &lt;/a&gt;的别名</target>
        </trans-unit>
        <trans-unit id="1d95145109d457aed292b97da6fedf0e7899882b" translate="yes" xml:space="preserve">
          <source>An alias of &lt;a href=&quot;should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;should&quot;&gt; &lt;code&gt;.should()&lt;/code&gt; &lt;/a&gt;的别名</target>
        </trans-unit>
        <trans-unit id="d5cf7c253c7156e9e8c89986d57d37157d577c3b" translate="yes" xml:space="preserve">
          <source>An aliased route as defined using the &lt;a href=&quot;as&quot;&gt;&lt;code&gt;.as()&lt;/code&gt;&lt;/a&gt; command and referenced with the &lt;code&gt;@&lt;/code&gt; character and the name of the alias.</source>
          <target state="translated">使用&lt;a href=&quot;as&quot;&gt; &lt;code&gt;.as()&lt;/code&gt; &lt;/a&gt;命令定义并以 &lt;code&gt;@&lt;/code&gt; 字符和别名命名的别名路由。</target>
        </trans-unit>
        <trans-unit id="9820c711d4efa9fed27e734a8c4a3171b9040c25" translate="yes" xml:space="preserve">
          <source>An animation hasn&amp;rsquo;t completed.</source>
          <target state="translated">动画尚未完成。</target>
        </trans-unit>
        <trans-unit id="3257f233abca2d8ca51d6795319a21468b57094f" translate="yes" xml:space="preserve">
          <source>An argument to send along with the event. This can be any value that can be serialized by &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify&quot;&gt;JSON.stringify()&lt;/a&gt;. Unserializable types such as functions, regular expressions, or symbols will be omitted to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">与事件一起发送的参数。这可以是&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify&quot;&gt;JSON.stringify（）&lt;/a&gt;可以序列化的任何值。无法序列化的类型（例如函数，正则表达式或符号）将被省略为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="691ddd55184e6eaaa4efbcb8e109a5a549811eb6" translate="yes" xml:space="preserve">
          <source>An array of &lt;code&gt;values&lt;/code&gt; or text contents of the &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt;s to be selected.</source>
          <target state="translated">要选择的 &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; 的 &lt;code&gt;values&lt;/code&gt; 或文本内容的数组。</target>
        </trans-unit>
        <trans-unit id="c6b71fad129d5b83d9ae747b63679234109c665a" translate="yes" xml:space="preserve">
          <source>An array of aliased routes as defined using the &lt;a href=&quot;as&quot;&gt;&lt;code&gt;.as()&lt;/code&gt;&lt;/a&gt; command and referenced with the &lt;code&gt;@&lt;/code&gt; character and the name of the alias.</source>
          <target state="translated">使用&lt;a href=&quot;as&quot;&gt; &lt;code&gt;.as()&lt;/code&gt; &lt;/a&gt;命令定义的别名路由数组，并用 &lt;code&gt;@&lt;/code&gt; 字符和别名命名。</target>
        </trans-unit>
        <trans-unit id="fbdbf54da094b15bef10ede4fd4284fd9824e944" translate="yes" xml:space="preserve">
          <source>An element is considered hidden if:</source>
          <target state="translated">一个元素在以下情况下被认为是隐藏的:</target>
        </trans-unit>
        <trans-unit id="818b176224764fc419fbb86e03f40758fb9127bd" translate="yes" xml:space="preserve">
          <source>An element is considered visible if it can be &amp;ldquo;interactive&amp;rdquo; with a user. In other words, if the user is able to click, type, drag, or otherwise physically interact with the element it is considered visible.</source>
          <target state="translated">如果某个元素可以与用户&amp;ldquo;交互&amp;rdquo;，则认为该元素可见。换句话说，如果用户能够单击，键入，拖动或以其他方式与元素进行物理交互，则认为它是可见的。</target>
        </trans-unit>
        <trans-unit id="df438f083754c9d7fbdf2769b0617db03410c3d6" translate="yes" xml:space="preserve">
          <source>An error is now thrown if an &lt;code&gt;undefined&lt;/code&gt; value is mistakenly passed into &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt;. Previously, it would set the command timeout to an unimaginably large number of ms. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/332&quot;&gt;#332&lt;/a&gt;</source>
          <target state="translated">如果将 &lt;code&gt;undefined&lt;/code&gt; 值错误地传递到&lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; ,则会&lt;/a&gt;引发错误。以前，它将命令超时设置为难以想象的大量毫秒。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/332&quot;&gt;＃332&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eedf883bbb8388b1a02d5b4d7235e6e4721aaef1" translate="yes" xml:space="preserve">
          <source>An event name to be handled via the &lt;code&gt;task&lt;/code&gt; event in the &lt;a href=&quot;../../guides/references/configuration#Folders-Files&quot;&gt;&lt;code&gt;pluginsFile&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">通过&lt;a href=&quot;../../guides/references/configuration#Folders-Files&quot;&gt; &lt;code&gt;pluginsFile&lt;/code&gt; 中&lt;/a&gt;的 &lt;code&gt;task&lt;/code&gt; 事件处理的事件名称。</target>
        </trans-unit>
        <trans-unit id="aca60224359e431161ff267923b48249cfd4f793" translate="yes" xml:space="preserve">
          <source>An example of a Cypress pull-request comment can be seen below:</source>
          <target state="translated">下面是一个Cypress pull-request评论的例子。</target>
        </trans-unit>
        <trans-unit id="29d778b2fd4d5838fccba526f541fde0f498ca63" translate="yes" xml:space="preserve">
          <source>An object containing any or all of the following options:</source>
          <target state="translated">包含下列任何或所有选项的对象:</target>
        </trans-unit>
        <trans-unit id="0a4cd3fb5556213ab705abf8cea3032c29616066" translate="yes" xml:space="preserve">
          <source>An object containing one or more of the following:</source>
          <target state="translated">包含下列一项或多项的物体:</target>
        </trans-unit>
        <trans-unit id="12a514944497318c2d492e8840ac0b97d676e3b6" translate="yes" xml:space="preserve">
          <source>An object that maps HTTP header names to values to be sent along with the request. &lt;em&gt;Note:&lt;/em&gt;&lt;code&gt;headers&lt;/code&gt; will only be sent for the initial &lt;code&gt;cy.visit()&lt;/code&gt; request, not for any subsequent requests.</source>
          <target state="translated">将HTTP标头名称映射到与请求一起发送的值的对象。&lt;em&gt;注意：&lt;/em&gt; &lt;code&gt;headers&lt;/code&gt; 将仅针对初始 &lt;code&gt;cy.visit()&lt;/code&gt; 请求发送，而不针对任何后续请求发送。</target>
        </trans-unit>
        <trans-unit id="3711350eed18c8ac3e6d07d8f41ebc50aefedddc" translate="yes" xml:space="preserve">
          <source>An object to be yielded.</source>
          <target state="translated">一个要让步的对象。</target>
        </trans-unit>
        <trans-unit id="f00cd0a2708e56ba0a5a740c499463a52bd1729a" translate="yes" xml:space="preserve">
          <source>An optional body to send along with a &lt;code&gt;POST&lt;/code&gt; request. If it is a string, it will be passed along unmodified. If it is an object, it will be URL encoded to a string and sent with a &lt;code&gt;Content-Type: application/x-www-urlencoded&lt;/code&gt; header.</source>
          <target state="translated">与 &lt;code&gt;POST&lt;/code&gt; 请求一起发送的可选正文。如果是字符串，则将其原封不动地传递。如果它是一个对象，它将被URL编码为字符串，并以 &lt;code&gt;Content-Type: application/x-www-urlencoded&lt;/code&gt; 标头发送。</target>
        </trans-unit>
        <trans-unit id="80e32c56fc70c6d741114a2380d37e5f2fa825e5" translate="yes" xml:space="preserve">
          <source>An warning icon with a tooltip is displayed in the Runs tab of the Test Runner when parallelization was disabled during the run due to being over the organization&amp;rsquo;s usage limit. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4489&quot;&gt;#4489&lt;/a&gt;.</source>
          <target state="translated">如果在运行期间由于超出组织的使用限制而禁用并行化，则在测试运行器的&amp;ldquo;运行&amp;rdquo;选项卡中将显示带有工具提示的警告图标。地址&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4489&quot;&gt;＃4489&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b30e8658232c95ce5bc0d894288ca1fd6323a581" translate="yes" xml:space="preserve">
          <source>And hey, this is a very clean test! We didn&amp;rsquo;t have to say anything about &lt;em&gt;how&lt;/em&gt; things work, just that we&amp;rsquo;d like to verify a particular series of events and outcomes.</source>
          <target state="translated">嘿，这是一个非常干净的测试！我们不必谈论任何事情&lt;em&gt;如何&lt;/em&gt;运作，而只是想验证一系列特定的事件和结果。</target>
        </trans-unit>
        <trans-unit id="7837d1ff75e82d5c687feb8ddc9ccc6eb0af323e" translate="yes" xml:space="preserve">
          <source>And the &lt;code&gt;.actions-email&lt;/code&gt; input has &amp;ldquo;&lt;a href=&quot;https://docs.cypress.io/cdn-cgi/l/email-protection#ec8a8d8789ac89818d8580c28f8381&quot;&gt;fake@email.com&lt;/a&gt;&amp;ldquo; as its value</source>
          <target state="translated">而 &lt;code&gt;.actions-email&lt;/code&gt; 输入具有&amp;ldquo; &lt;a href=&quot;https://docs.cypress.io/cdn-cgi/l/email-protection#ec8a8d8789ac89818d8580c28f8381&quot;&gt;fake@email.com&lt;/a&gt; &amp;ldquo;作为其值</target>
        </trans-unit>
        <trans-unit id="01e7b7c6f31ec42c7e1da6fc83cc658b4c0d7252" translate="yes" xml:space="preserve">
          <source>And the HTTP server code would look something like this&amp;hellip;</source>
          <target state="translated">HTTP服务器代码看起来像这样&amp;hellip;&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="6f94bb3ac3364b4d82251ec04905330bde9881cd" translate="yes" xml:space="preserve">
          <source>And then call &lt;code&gt;npm run report&lt;/code&gt;.</source>
          <target state="translated">然后调用 &lt;code&gt;npm run report&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="895b8ceb36023b6c8a70360ac202a9baaf282123" translate="yes" xml:space="preserve">
          <source>And then in your tests:</source>
          <target state="translated">然后在你的测试中。</target>
        </trans-unit>
        <trans-unit id="5a62316abf68a32858e08412e76379cdf7bfee06" translate="yes" xml:space="preserve">
          <source>And there you have it: a simple test in Cypress that visits a page, finds and clicks a link, verifies the URL and then verifies the behavior of an element on the new page. If we read it out loud, it might sound like:</source>
          <target state="translated">有了:在Cypress中的一个简单的测试,访问一个页面,找到并点击一个链接,验证URL,然后验证新页面上元素的行为。如果我们大声读出来,它听起来可能会像。</target>
        </trans-unit>
        <trans-unit id="b44d929cdbe32010ddc234d1918c738911e1f040" translate="yes" xml:space="preserve">
          <source>And they type &amp;ldquo;&lt;a href=&quot;https://docs.cypress.io/cdn-cgi/l/email-protection#6600070d0326030b070f0a4805090b&quot;&gt;fake@email.com&lt;/a&gt;&amp;ldquo; into the &lt;code&gt;.actions-email&lt;/code&gt; input</source>
          <target state="translated">然后，他们在 &lt;code&gt;.actions-email&lt;/code&gt; 输入中输入&amp;ldquo; &lt;a href=&quot;https://docs.cypress.io/cdn-cgi/l/email-protection#6600070d0326030b070f0a4805090b&quot;&gt;fake@email.com&lt;/a&gt; &amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="3fd0a35fa6a92e89876c39671cdb4d59b4cee92b" translate="yes" xml:space="preserve">
          <source>Angular CLI addition that allows you to install Cypress E2E to an Angular CLI project</source>
          <target state="translated">Angular CLI附加功能,允许你将Cypress E2E安装到Angular CLI项目中。</target>
        </trans-unit>
        <trans-unit id="c77dcdedc0f40e8dac08a08c8bef7255abb90e75" translate="yes" xml:space="preserve">
          <source>Animations</source>
          <target state="translated">Animations</target>
        </trans-unit>
        <trans-unit id="3d20355b472cf221b589733d696d252fdda7d84f" translate="yes" xml:space="preserve">
          <source>Another benefit of using &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt; on requests is that it allows you to access the actual &lt;code&gt;XHR&lt;/code&gt; object. This is useful when you want to make assertions about this object.</source>
          <target state="translated">在请求上使用&lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; 的&lt;/a&gt;另一个好处是，它允许您访问实际的 &lt;code&gt;XHR&lt;/code&gt; 对象。当您想对此对象进行断言时，这很有用。</target>
        </trans-unit>
        <trans-unit id="bec70d72e5eb2c09ce4c9799153e57903638a5ee" translate="yes" xml:space="preserve">
          <source>Another can be called &lt;code&gt;package/customer&lt;/code&gt;:</source>
          <target state="translated">另一个可以称为 &lt;code&gt;package/customer&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="0f68a60d624ce348d328df87926bc74201411aba" translate="yes" xml:space="preserve">
          <source>Another file you have to deal with.</source>
          <target state="translated">你要处理的另一个文件。</target>
        </trans-unit>
        <trans-unit id="ae28f8800d8303d3e143ffee0dae0eabbce11876" translate="yes" xml:space="preserve">
          <source>Another more balanced approach is just to integrate both strategies. You likely want to have a &lt;strong&gt;single test&lt;/strong&gt; that takes a true &lt;code&gt;e2e&lt;/code&gt; approach and stubs nothing. It&amp;rsquo;ll use the feature for real - including seeding the database and setting up state.</source>
          <target state="translated">另一个更平衡的方法就是将两种策略整合在一起。您可能希望有一个采用真正的 &lt;code&gt;e2e&lt;/code&gt; 方法并且不进行任何存根&lt;strong&gt;测试的测试&lt;/strong&gt;。它将真正使用该功能-包括为数据库设置种子和设置状态。</target>
        </trans-unit>
        <trans-unit id="1d92e257cbcb2260dfecf16311f053c64640bedf" translate="yes" xml:space="preserve">
          <source>Another possibility is visual regression testing: comparing screenshots of past runs with the current run to ensure that nothing changed. &lt;a href=&quot;../tooling/visual-testing&quot;&gt;Read about how to implement visual testing.&lt;/a&gt;</source>
          <target state="translated">另一种可能性是视觉回归测试：将过去运行的屏幕截图与当前运行的屏幕截图进行比较，以确保没有任何变化。&lt;a href=&quot;../tooling/visual-testing&quot;&gt;阅读有关如何实施视觉测试的信息。&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e3abfd604bc77a44708d93501cc95c90c5ed97b3" translate="yes" xml:space="preserve">
          <source>Another potential problem to be aware of is that our own Command Log is using React under the hood and only rendering asynchronously during an animation frame. It is possible you will see screenshots taken before our Command Log is done rendering. This means you may not see the &lt;strong&gt;error displayed&lt;/strong&gt; in the screenshot. But this is also why we take a video - to show you the complete failure.</source>
          <target state="translated">要意识到的另一个潜在问题是我们自己的命令日志在后台使用React，并且仅在动画帧期间异步渲染。在我们的命令日志渲染完成之前，您可能会看到截图。这意味着您可能看不到截图中&lt;strong&gt;显示&lt;/strong&gt;的&lt;strong&gt;错误&lt;/strong&gt;。但这也是我们拍摄视频的原因-向您展示完整的失败。</target>
        </trans-unit>
        <trans-unit id="8f7b961bffa98940d449f8ec980c667422d4ae8b" translate="yes" xml:space="preserve">
          <source>Another upside is that this enables you to &lt;strong&gt;build out your application&lt;/strong&gt; without needing the &lt;em&gt;contract&lt;/em&gt; of the server to exist. You can build it the way you want the data to be structured, and even test all of the edge cases, without needing a server.</source>
          <target state="translated">另一个好处是，这使您可以&lt;strong&gt;构建应用程序&lt;/strong&gt;而无需使用服务器&lt;em&gt;合同&lt;/em&gt;。您可以使用所需的数据结构来构建它，甚至不需要服务器就可以测试所有边缘情况。</target>
        </trans-unit>
        <trans-unit id="d94f7bd884a1746ce32d66778364cb04715aadd3" translate="yes" xml:space="preserve">
          <source>Another valid approach opposed to seeding and talking to your server is to just bypass it altogether. Much simpler!</source>
          <target state="translated">另一个反对播种和与服务器对话的有效方法是完全绕过它。简单多了!</target>
        </trans-unit>
        <trans-unit id="52a766dc5c2e762b0fdc7f469606e823d2763da2" translate="yes" xml:space="preserve">
          <source>Another valid strategy would be to embed data directly into the DOM - but do so in a way where this data is &lt;strong&gt;always&lt;/strong&gt; present and query-able. It would have to be present 100% of the time, else this would not work.</source>
          <target state="translated">另一种有效的策略是将数据直接嵌入到DOM中，但是要以&lt;strong&gt;始终&lt;/strong&gt;存在且可查询数据的方式进行。它必须存在100％的时间，否则将不起作用。</target>
        </trans-unit>
        <trans-unit id="7444eb280a7da6e837a9131e9609202603a560ab" translate="yes" xml:space="preserve">
          <source>Another valid strategy would be to embed data directly into the DOM but to do so in a way that the data is &lt;strong&gt;always&lt;/strong&gt; present and query-able. The data would have to be present 100% of the time, otherwise this strategy would not work.</source>
          <target state="translated">另一种有效的策略是将数据直接嵌入到DOM中，但是这样做必须使数据&lt;strong&gt;始终&lt;/strong&gt;存在并且可以查询。数据必须在100％的时间内显示，否则此策略将不起作用。</target>
        </trans-unit>
        <trans-unit id="c7055886f1a80a510b3cfdc60515dc36293c42dc" translate="yes" xml:space="preserve">
          <source>Another way to locate things &amp;ndash; a more human way &amp;ndash; is to look them up by their content, by what the user would see on the page. For this, there&amp;rsquo;s the handy &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt; command, for example:</source>
          <target state="translated">定位事物的另一种方式（一种更人性化的方式）是通过其内容以及用户在页面上看到的内容来查找它们。为此，有一个方便的&lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; &lt;/a&gt;命令，例如：</target>
        </trans-unit>
        <trans-unit id="5853e9b50c154cccedf882276ff924d327f9c93f" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;afterEach()&lt;/code&gt; hooks run</source>
          <target state="translated">任何 &lt;code&gt;afterEach()&lt;/code&gt; 挂钩都会运行</target>
        </trans-unit>
        <trans-unit id="4c4d3c0ee4fb7151b048bcbf091348e37f101c84" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;beforeEach()&lt;/code&gt; hooks run</source>
          <target state="translated">运行任何 &lt;code&gt;beforeEach()&lt;/code&gt; 挂钩</target>
        </trans-unit>
        <trans-unit id="6e91bb704fe650c007c5608e1f722e0a69a2bc4b" translate="yes" xml:space="preserve">
          <source>Any change you make here will take effect immediately for the remainder of every single test.</source>
          <target state="translated">您在这里所做的任何更改都将在每一次测试的剩余时间内立即生效。</target>
        </trans-unit>
        <trans-unit id="870f8549da0ac743d77860c7a85f7bcac1e70f09" translate="yes" xml:space="preserve">
          <source>Any command run by &lt;a href=&quot;../../api/commands/exec&quot;&gt;&lt;code&gt;cy.exec()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../api/commands/task&quot;&gt;&lt;code&gt;cy.task()&lt;/code&gt;&lt;/a&gt; has to exit eventually. Otherwise, Cypress will not continue running any other commands.</source>
          <target state="translated">&lt;a href=&quot;../../api/commands/exec&quot;&gt; &lt;code&gt;cy.exec()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../api/commands/task&quot;&gt; &lt;code&gt;cy.task()&lt;/code&gt; &lt;/a&gt;运行的任何命令最终都必须退出。否则，赛普拉斯将不会继续运行任何其他命令。</target>
        </trans-unit>
        <trans-unit id="ecb24ff6d15ae53093c6b296fab9b3c1c9b34a08" translate="yes" xml:space="preserve">
          <source>Any environment variable on your machine that starts with either &lt;code&gt;CYPRESS_&lt;/code&gt; or &lt;code&gt;cypress_&lt;/code&gt; will automatically be added and made available to you.</source>
          <target state="translated">您计算机上以 &lt;code&gt;CYPRESS_&lt;/code&gt; 或 &lt;code&gt;cypress_&lt;/code&gt; 开头的任何环境变量都将自动添加并提供给您。</target>
        </trans-unit>
        <trans-unit id="472899f6b0786d8f9c07a7c8fe8282f0ddaf16b0" translate="yes" xml:space="preserve">
          <source>Any failing test will now automatically expand to display its commands.</source>
          <target state="translated">任何失败的测试现在将自动展开以显示其命令。</target>
        </trans-unit>
        <trans-unit id="a192f9fe629713a5410955871805d7c840646e08" translate="yes" xml:space="preserve">
          <source>Any issues related to &lt;code&gt;requestJSON&lt;/code&gt; or &lt;code&gt;responseJSON&lt;/code&gt; being duplicated are now fixed. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/65&quot;&gt;#65&lt;/a&gt;.</source>
          <target state="translated">现在修复了与 &lt;code&gt;requestJSON&lt;/code&gt; 或 &lt;code&gt;responseJSON&lt;/code&gt; 复制有关的所有问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/65&quot;&gt;＃65&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c1924d5d13d13f0fc9aa4d67b0d3e627d8ba3e2a" translate="yes" xml:space="preserve">
          <source>Any key/value you set in your &lt;a href=&quot;../references/configuration&quot;&gt;configuration&lt;/a&gt; under the &lt;code&gt;env&lt;/code&gt; key will become an environment variable.</source>
          <target state="translated">任何键/值在您设置&lt;a href=&quot;../references/configuration&quot;&gt;的配置&lt;/a&gt;下 &lt;code&gt;env&lt;/code&gt; 键会变成一个环境变量。</target>
        </trans-unit>
        <trans-unit id="afb6da152245a388959ab67769e3a2f80d98a16e" translate="yes" xml:space="preserve">
          <source>Any modifiers activated for the event are also listed in a &lt;code&gt;modifiers&lt;/code&gt; column.</source>
          <target state="translated">为该事件激活的所有修改器也会在 &lt;code&gt;modifiers&lt;/code&gt; 列中列出。</target>
        </trans-unit>
        <trans-unit id="9288ef650209f9181ecdd94971cc326bc0fadee8" translate="yes" xml:space="preserve">
          <source>Any of its ancestors &lt;strong&gt;hides overflow&lt;/strong&gt;*</source>
          <target state="translated">它的任何祖先都&lt;strong&gt;隐藏着溢出&lt;/strong&gt; *</target>
        </trans-unit>
        <trans-unit id="a66ca3a9b7739da79ddd9966a1937e98a3a9e2cc" translate="yes" xml:space="preserve">
          <source>Any of the &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; commands could fail to find their elements in the DOM.</source>
          <target state="translated">任何&lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt;命令都可能无法在DOM中找到其元素。</target>
        </trans-unit>
        <trans-unit id="affcbd3adfa3b580a8826ec0eb06aef908b8acf0" translate="yes" xml:space="preserve">
          <source>Any process that needs to be manually interrupted to stop</source>
          <target state="translated">任何需要手动中断以停止的进程。</target>
        </trans-unit>
        <trans-unit id="7c9cbf2050f8bcc6ee4d45f4192c4a7df794c9db" translate="yes" xml:space="preserve">
          <source>Any process that needs to be manually interrupted to stop.</source>
          <target state="translated">任何需要手动中断才能停止的进程。</target>
        </trans-unit>
        <trans-unit id="8c1f51f5b1233dd40d7ca1063b564fc21e6e1ca9" translate="yes" xml:space="preserve">
          <source>Any request that does &lt;strong&gt;NOT&lt;/strong&gt; match a &lt;a href=&quot;route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt; will pass through to the server.</source>
          <target state="translated">任何与&lt;a href=&quot;route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt;&lt;strong&gt;不&lt;/strong&gt;匹配的请求都将传递到服务器。</target>
        </trans-unit>
        <trans-unit id="1bbbdd31d8a348ba4ec10c8f15204a1b5ba31e0b" translate="yes" xml:space="preserve">
          <source>Any request that matches the &lt;code&gt;method&lt;/code&gt; and &lt;code&gt;url&lt;/code&gt; of a route will be responded to based on the configuration of that route.</source>
          <target state="translated">任何与路由的 &lt;code&gt;method&lt;/code&gt; 和 &lt;code&gt;url&lt;/code&gt; 匹配的请求都将根据该路由的配置进行响应。</target>
        </trans-unit>
        <trans-unit id="27155c11c6a686685fdd51354e432510709fc5aa" translate="yes" xml:space="preserve">
          <source>Any request that matches the &lt;code&gt;options.whitelist&lt;/code&gt; function will &lt;strong&gt;NOT&lt;/strong&gt; be logged or stubbed. In other words it is &amp;ldquo;whitelisted&amp;rdquo; and ignored.</source>
          <target state="translated">任何与 &lt;code&gt;options.whitelist&lt;/code&gt; 函数匹配的请求都&lt;strong&gt;不会&lt;/strong&gt;被记录或存根。换句话说，它被&amp;ldquo;列入白名单&amp;rdquo;并且被忽略。</target>
        </trans-unit>
        <trans-unit id="48e3da8c4f366df0e1c9d7f0beb0c991f7d72840" translate="yes" xml:space="preserve">
          <source>Any request that passes the &lt;code&gt;whitelist&lt;/code&gt; will be ignored - it will not be logged nor will it be stubbed in any way (even if it matches a specific &lt;a href=&quot;route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">任何通过 &lt;code&gt;whitelist&lt;/code&gt; 请求都将被忽略-它不会被记录，也不会以任何方式存根（即使它与特定的&lt;a href=&quot;route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt;匹配）。</target>
        </trans-unit>
        <trans-unit id="7ed426f0fbf88758f4cbf550f68f86a25e3e876b" translate="yes" xml:space="preserve">
          <source>Any valid chainer that comes from &lt;a href=&quot;../../guides/references/assertions#Chai&quot;&gt;Chai&lt;/a&gt; or &lt;a href=&quot;../../guides/references/assertions#Chai-jQuery&quot;&gt;Chai-jQuery&lt;/a&gt; or &lt;a href=&quot;../../guides/references/assertions#Sinon-Chai&quot;&gt;Sinon-Chai&lt;/a&gt;.</source>
          <target state="translated">来自&lt;a href=&quot;../../guides/references/assertions#Chai&quot;&gt;Chai&lt;/a&gt;或&lt;a href=&quot;../../guides/references/assertions#Chai-jQuery&quot;&gt;Chai-jQuery&lt;/a&gt;或&lt;a href=&quot;../../guides/references/assertions#Sinon-Chai&quot;&gt;Sinon-Chai的&lt;/a&gt;任何有效链接器。</target>
        </trans-unit>
        <trans-unit id="b7529cb0d449d0a82f3166fa6406bfebdedc0959" translate="yes" xml:space="preserve">
          <source>Any value returned from a &lt;code&gt;.should()&lt;/code&gt; callback function will be ignored. The original subject will be yielded to the next command.</source>
          <target state="translated">从 &lt;code&gt;.should()&lt;/code&gt; 回调函数返回的任何值都将被忽略。原始主题将交给下一个命令。</target>
        </trans-unit>
        <trans-unit id="a9b735105d05e8b0fbe15f2bb1b2179fd3ea0aca" translate="yes" xml:space="preserve">
          <source>Any values to be set as &lt;a href=&quot;../guides/environment-variables&quot;&gt;environment variables&lt;/a&gt;</source>
          <target state="translated">任何要设置为&lt;a href=&quot;../guides/environment-variables&quot;&gt;环境变量的值&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b1b62baa7b0a25b46be9096d36f4f4b610b1af1" translate="yes" xml:space="preserve">
          <source>Any waiting or retrying that is necessary to ensure a step was successful must complete before the next step begins. If they don&amp;rsquo;t complete successfully before the timeout is reached, the test will fail.</source>
          <target state="translated">确保成功完成步骤所需的任何等待或重试必须在下一步开始之前完成。如果在超时之前未成功完成测试，则测试将失败。</target>
        </trans-unit>
        <trans-unit id="4f34996c4bec89b9c5884f97a302c0b1e53249ed" translate="yes" xml:space="preserve">
          <source>App Events</source>
          <target state="translated">应用程序活动</target>
        </trans-unit>
        <trans-unit id="76566fd3d740c09e9b7c5e27c73406fc12b63ef5" translate="yes" xml:space="preserve">
          <source>App crashes now send a full stack trace (instead of 10 line truncation).</source>
          <target state="translated">应用程序崩溃现在会发送完整的堆栈跟踪(而不是10行截断)。</target>
        </trans-unit>
        <trans-unit id="7a5e3bb03d06453c65b1113c4e3cf6ff8e619ec3" translate="yes" xml:space="preserve">
          <source>AppVeyor</source>
          <target state="translated">AppVeyor</target>
        </trans-unit>
        <trans-unit id="b22b16d37ccace8a17785140a4d540541ecc7f2a" translate="yes" xml:space="preserve">
          <source>Append contents to the end of a file</source>
          <target state="translated">将内容添加到文件的末尾</target>
        </trans-unit>
        <trans-unit id="2aed5e1b9d112a8aa87e06a62abe13c96d1af05b" translate="yes" xml:space="preserve">
          <source>Application HTML</source>
          <target state="translated">应用HTML</target>
        </trans-unit>
        <trans-unit id="dc6da9bb606b50ae3f7c93e52441b25c511f77e9" translate="yes" xml:space="preserve">
          <source>Application JavaScript</source>
          <target state="translated">应用JavaScript</target>
        </trans-unit>
        <trans-unit id="fa3b7a6daca6189563c3b8a252e773b7759bedd2" translate="yes" xml:space="preserve">
          <source>Application Under Test</source>
          <target state="translated">测试中的应用</target>
        </trans-unit>
        <trans-unit id="442e8f42c4cdb7df576d8790f1e3ce7ab1db8082" translate="yes" xml:space="preserve">
          <source>Application state</source>
          <target state="translated">应用状态</target>
        </trans-unit>
        <trans-unit id="f5270239ee1d5a112c1d5d99b677184b539e3c1a" translate="yes" xml:space="preserve">
          <source>Applitools</source>
          <target state="translated">Applitools</target>
        </trans-unit>
        <trans-unit id="773afd10aaf52acd29366ff51080973d5ab63492" translate="yes" xml:space="preserve">
          <source>Applitools&amp;rsquo; Cypress documentation</source>
          <target state="translated">Applitools的Cypress文档</target>
        </trans-unit>
        <trans-unit id="1ef5492a364f24a965e295d5b40d19acd59d9d39" translate="yes" xml:space="preserve">
          <source>Applitools&amp;rsquo; Cypress tutorial</source>
          <target state="translated">Applitools的Cypress教程</target>
        </trans-unit>
        <trans-unit id="7e826cf968f4ff0f4ae3f471020ad5cc867e612a" translate="yes" xml:space="preserve">
          <source>Applying Timeouts</source>
          <target state="translated">应用超时</target>
        </trans-unit>
        <trans-unit id="6b02bcf450203a9f44972d4b74e763254aee9eb2" translate="yes" xml:space="preserve">
          <source>Applying server defaults to &lt;code&gt;Cypress.Server.defaults({})&lt;/code&gt; now &lt;a href=&quot;../../api/cypress-api/cypress-server&quot;&gt;works as documented&lt;/a&gt;.</source>
          <target state="translated">应用服务器默认 &lt;code&gt;Cypress.Server.defaults({})&lt;/code&gt; 现在&lt;a href=&quot;../../api/cypress-api/cypress-server&quot;&gt;可以作为证明&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b040b4179b8b00702858fdb4c1afec3d6d284509" translate="yes" xml:space="preserve">
          <source>Architecture</source>
          <target state="translated">Architecture</target>
        </trans-unit>
        <trans-unit id="b9fc88513acaa3e69787a0d7f56aa06d459c5ef7" translate="yes" xml:space="preserve">
          <source>Are our end-to-end tests that are so effective at covering the web application code are also covering the back end server code?</source>
          <target state="translated">我们的端到端测试如此有效地覆盖了Web应用代码,是否也覆盖了后端服务器代码?</target>
        </trans-unit>
        <trans-unit id="0f3711cadaeba8c07638b607a31ebd42c76b496a" translate="yes" xml:space="preserve">
          <source>Are you looking to change the &lt;strong&gt;default options&lt;/strong&gt; for Browserify?</source>
          <target state="translated">您是否要更改Browserify 的&lt;strong&gt;默认选项&lt;/strong&gt;？</target>
        </trans-unit>
        <trans-unit id="c7882854b22861619ee2e34a8c1c3ed6bb3eeaf2" translate="yes" xml:space="preserve">
          <source>Are you trying to run in CI?</source>
          <target state="translated">你是想在CI中运行吗?</target>
        </trans-unit>
        <trans-unit id="4bf0024c4bc943f998126635e2b2826496ec8582" translate="yes" xml:space="preserve">
          <source>Args</source>
          <target state="translated">Args</target>
        </trans-unit>
        <trans-unit id="f23739626e06207de5d614386d4e7599876b0030" translate="yes" xml:space="preserve">
          <source>Argument formatting display for command messages is fixed. There were instances of leading commas, or no commas on some commands.</source>
          <target state="translated">修正了命令信息的参数格式显示。有些命令存在前导逗号,或者没有逗号的情况。</target>
        </trans-unit>
        <trans-unit id="cbb9fa252e60809efa55a7ad83aea5438ef56753" translate="yes" xml:space="preserve">
          <source>Arguments</source>
          <target state="translated">Arguments</target>
        </trans-unit>
        <trans-unit id="b906e39c03121658b6681031c4701d1831b0acb8" translate="yes" xml:space="preserve">
          <source>Arguments are automatically forwarded to the function</source>
          <target state="translated">参数会自动转发到函数</target>
        </trans-unit>
        <trans-unit id="107004472b7ba4e5e31f3082ee1fb5a1239eec61" translate="yes" xml:space="preserve">
          <source>Array</source>
          <target state="translated">Array</target>
        </trans-unit>
        <trans-unit id="e56de359c569c55b71d1418e38ecde7841a27a99" translate="yes" xml:space="preserve">
          <source>Array of string selectors used to match elements that should be blacked out when the screenshot is taken. Does not apply to &lt;code&gt;runner&lt;/code&gt; captures.</source>
          <target state="translated">字符串选择器数组，用于匹配在截屏时应涂黑的元素。不适用于 &lt;code&gt;runner&lt;/code&gt; 捕获。</target>
        </trans-unit>
        <trans-unit id="7e0466a04f2f6220680daaa225aae7119cc37a36" translate="yes" xml:space="preserve">
          <source>As a best practice, you should not visit or interact with a 3rd party service not under your control. However, there are exceptions! If your organization uses Single Sign On (SSO) or OAuth then you might involve a 3rd party service other than your superdomain.</source>
          <target state="translated">作为最佳实践,您不应该访问或与不受您控制的第三方服务互动。然而,也有例外的情况 如果您的组织使用单点登录(SSO)或OAuth,那么您可能会涉及到您的超级域以外的第三方服务。</target>
        </trans-unit>
        <trans-unit id="f2e42251065d81531e85481c4170c1592f330056" translate="yes" xml:space="preserve">
          <source>As a general rule there are some best practices when visual testing.</source>
          <target state="translated">一般来说,视觉测试时有一些最佳实践。</target>
        </trans-unit>
        <trans-unit id="38968f89c692b9cee7e1ee0eb6b407159ecf9bfc" translate="yes" xml:space="preserve">
          <source>As a rule of thumb anything you call from &lt;code&gt;Cypress&lt;/code&gt; affects global state. Anything you call from &lt;code&gt;cy&lt;/code&gt; affects local state.</source>
          <target state="translated">根据经验，从 &lt;code&gt;Cypress&lt;/code&gt; 调用的任何内容都会影响全局状态。您从 &lt;code&gt;cy&lt;/code&gt; 调用的任何内容都会影响本地状态。</target>
        </trans-unit>
        <trans-unit id="e05150ef1a74b300d95ec0c4646871652b48df43" translate="yes" xml:space="preserve">
          <source>As a workaround, you may be able to use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage&quot;&gt;&lt;code&gt;window.postMessage&lt;/code&gt;&lt;/a&gt; to directly communicate with these iframes and control them (if the 3rd party iframe supports it).</source>
          <target state="translated">解决方法是，您可以使用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage&quot;&gt; &lt;code&gt;window.postMessage&lt;/code&gt; &lt;/a&gt;直接与这些iframe进行通信并对其进行控制（如果第三方iframe支持）。</target>
        </trans-unit>
        <trans-unit id="c96f29da1cb104ae4786484c67d0eb9d5526c9d2" translate="yes" xml:space="preserve">
          <source>As configuration behavior for &lt;em&gt;all&lt;/em&gt; requests.</source>
          <target state="translated">作为&lt;em&gt;所有&lt;/em&gt;请求的配置行为。</target>
        </trans-unit>
        <trans-unit id="ffb9a1447b482837f1a5337ad8e3eb3b0a8a6c61" translate="yes" xml:space="preserve">
          <source>As defaults that are merged into &lt;a href=&quot;route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">作为默认值合并到&lt;a href=&quot;route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; 中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3ebfa0df89bbc1f61b70db113cf466a5befd383f" translate="yes" xml:space="preserve">
          <source>As each CI machine finishes running its assigned spec file, more spec files are distributed to it. This process repeats until all spec files are complete.</source>
          <target state="translated">当每台 CI 机器完成运行其分配的规范文件时,更多的规范文件会被分发到它那里。这个过程重复进行,直到所有的规范文件都完成。</target>
        </trans-unit>
        <trans-unit id="5a0a1bf613c24f0fdfb95c039c86e7256f19ba6f" translate="yes" xml:space="preserve">
          <source>As more and more tests are recorded to the Cypress Dashboard, Cypress can better predict how long a given spec file will take to run. To prevent irrelevant data from affecting the duration prediction, Cypress doesn&amp;rsquo;t use old historical run data regarding the spec file.</source>
          <target state="translated">随着越来越多的测试记录到赛普拉斯仪表板上，赛普拉斯可以更好地预测给定规格文件的运行时间。为了防止无关的数据影响持续时间的预测，赛普拉斯不使用有关规格文件的旧的历史运行数据。</target>
        </trans-unit>
        <trans-unit id="f7f741f2ba089218d2c23b31c675c532108c24c4" translate="yes" xml:space="preserve">
          <source>As noted in the &lt;a href=&quot;#Arguments&quot;&gt;Arguments&lt;/a&gt; above, you can also set &lt;code&gt;prevSubject&lt;/code&gt; to one of:</source>
          <target state="translated">如以上&lt;a href=&quot;#Arguments&quot;&gt;参数&lt;/a&gt;所述，您还可以将 &lt;code&gt;prevSubject&lt;/code&gt; 设置为以下之一：</target>
        </trans-unit>
        <trans-unit id="1ef3ec978e734658c8786c253536c752ae2156a9" translate="yes" xml:space="preserve">
          <source>As of &lt;a href=&quot;../references/changelog#3-0-0&quot;&gt;Cypress version 3.0&lt;/a&gt;, Cypress downloads its binary to the global system cache - on linux that is &lt;code&gt;~/.cache/Cypress&lt;/code&gt;. By ensuring this cache persists across builds you can shave minutes off install time by preventing a large binary download.</source>
          <target state="translated">从&lt;a href=&quot;../references/changelog#3-0-0&quot;&gt;赛普拉斯3.0版开始&lt;/a&gt;，赛普拉斯将其二进制文件下载到Linux上的全局系统缓存 &lt;code&gt;~/.cache/Cypress&lt;/code&gt; 。通过确保此高速缓存在所有版本中均保持不变，您可以通过防止下载大量二进制文件来节省安装时间。</target>
        </trans-unit>
        <trans-unit id="26c8ef58fdcb19b069ce229859c475e90585a3bb" translate="yes" xml:space="preserve">
          <source>As of &lt;a href=&quot;changelog#1-2-0&quot;&gt;&lt;code&gt;1.2.0&lt;/code&gt;&lt;/a&gt; you can programmatically modify configuration values using Node code. This enables you to do things like use &lt;code&gt;fs&lt;/code&gt; and read off configuration values and dynamically change them.</source>
          <target state="translated">从&lt;a href=&quot;changelog#1-2-0&quot;&gt; &lt;code&gt;1.2.0&lt;/code&gt; 版开始,&lt;/a&gt;您可以使用Node代码以编程方式修改配置值。这使您能够执行诸如使用 &lt;code&gt;fs&lt;/code&gt; 之类的事情，并读取配置值并动态更改它们。</target>
        </trans-unit>
        <trans-unit id="d17dc0cfbcaf9cbd8bcd0c543055234fa0347f5a" translate="yes" xml:space="preserve">
          <source>As of &lt;code&gt;0.20.0&lt;/code&gt;, you can also &lt;a href=&quot;../../api/events/catalog-of-events&quot;&gt;bind to Events&lt;/a&gt; that Cypress fires as it&amp;rsquo;s working with your element. Using a debugger with these events will give you a much lower level view into how Cypress works.</source>
          <target state="translated">从 &lt;code&gt;0.20.0&lt;/code&gt; 开始，您还可以&lt;a href=&quot;../../api/events/catalog-of-events&quot;&gt;绑定&lt;/a&gt;赛普拉斯在与元素一起工作时触发的事件。将调试器与这些事件一起使用将使您对赛普拉斯的工作方式有一个较低的了解。</target>
        </trans-unit>
        <trans-unit id="aee8850ff31f0745348e133c3cd2eb7ff0f2e637" translate="yes" xml:space="preserve">
          <source>As of version &lt;a href=&quot;changelog#0-19-0&quot;&gt;&lt;code&gt;0.19.0&lt;/code&gt;&lt;/a&gt; and CLI versions &lt;code&gt;0.13.0&lt;/code&gt;, the &lt;code&gt;cypress ci&lt;/code&gt; command has been deprecated. We did this to make it clearer what the difference was between a &lt;em&gt;regular test run&lt;/em&gt; and a &lt;em&gt;recorded test run&lt;/em&gt;.</source>
          <target state="translated">从&lt;a href=&quot;changelog#0-19-0&quot;&gt; &lt;code&gt;0.19.0&lt;/code&gt; &lt;/a&gt;版和CLI版本 &lt;code&gt;0.13.0&lt;/code&gt; 开始，不建议使用 &lt;code&gt;cypress ci&lt;/code&gt; 命令。我们这样做是为了更清楚&lt;em&gt;常规测试&lt;/em&gt;和&lt;em&gt;记录的测试&lt;/em&gt;之间的区别。</target>
        </trans-unit>
        <trans-unit id="9e3f73e5f4437a6719a63309b2a5a744c5d26902" translate="yes" xml:space="preserve">
          <source>As of version &lt;code&gt;0.20.0&lt;/code&gt; Cypress is also a fully baked &lt;code&gt;node_module&lt;/code&gt; you can require in your Node scripts.</source>
          <target state="translated">从 &lt;code&gt;0.20.0&lt;/code&gt; 版开始，赛普拉斯还是您可以在Node脚本中要求的完全烘焙的 &lt;code&gt;node_module&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d81ee39366d8829c3197e2400216ebe31511a22c" translate="yes" xml:space="preserve">
          <source>As of version &lt;code&gt;3.0&lt;/code&gt;, Cypress downloads the matching Cypress binary to the global system cache, so that the binary can be shared between projects. By default, global cache folders are:</source>
          <target state="translated">从 &lt;code&gt;3.0&lt;/code&gt; 版开始，赛普拉斯会将匹配的赛普拉斯二进制文件下载到全局系统缓存中，以便可以在项目之间共享该二进制文件。默认情况下，全局缓存文件夹为：</target>
        </trans-unit>
        <trans-unit id="6aa6eb32e6812b4e1580389fd01f1824c8586df2" translate="yes" xml:space="preserve">
          <source>As of version &lt;code&gt;3.0&lt;/code&gt;, the binary is downloaded to a global cache directory to be used across projects.</source>
          <target state="translated">从 &lt;code&gt;3.0&lt;/code&gt; 版开始，二进制文件将下载到全局缓存目录中，以便在项目中使用。</target>
        </trans-unit>
        <trans-unit id="62bac7fe14c7c41990f09521eab54bd5cefc2ae3" translate="yes" xml:space="preserve">
          <source>As part of your code transpilation pipeline using the &lt;a href=&quot;https://github.com/istanbuljs/babel-plugin-istanbul&quot;&gt;&lt;code&gt;babel-plugin-istanbul&lt;/code&gt;&lt;/a&gt; tool.</source>
          <target state="translated">作为使用&lt;a href=&quot;https://github.com/istanbuljs/babel-plugin-istanbul&quot;&gt; &lt;code&gt;babel-plugin-istanbul&lt;/code&gt; &lt;/a&gt;工具的代码转换管道的一部分。</target>
        </trans-unit>
        <trans-unit id="7de22ecee9297cac32649afbd41bbb88348708a3" translate="yes" xml:space="preserve">
          <source>As soon as it encounters a &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt;, Cypress then switches to the url of the main window to the url specified in your visit. This can result in a &amp;lsquo;flash&amp;rsquo; or &amp;lsquo;reload&amp;rsquo; when your tests first start.</source>
          <target state="translated">一旦遇到&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;，赛普拉斯便将主窗口的URL切换到您访问中指定的URL。首次启动测试时，可能会导致&amp;ldquo;刷新&amp;rdquo;或&amp;ldquo;重新加载&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="b6798bd775acfde55a96fc6892ad0f131cbd2626" translate="yes" xml:space="preserve">
          <source>As we continue to save our new test file we&amp;rsquo;ll see the browser auto reloading in real time.</source>
          <target state="translated">随着我们继续保存新的测试文件，我们将看到浏览器实时自动重新加载。</target>
        </trans-unit>
        <trans-unit id="43b16c5e591ca952af2d6922d0abc82469d245b3" translate="yes" xml:space="preserve">
          <source>As we get closer to a public release we&amp;rsquo;ve decided to focus on onboarding new users and new projects. We&amp;rsquo;ve made several breaking changes to help with this process.</source>
          <target state="translated">随着我们接近公开发布，我们已决定将重点放在新用户和新项目的入门上。我们进行了一些重大更改以帮助完成此过程。</target>
        </trans-unit>
        <trans-unit id="d35dd7fd6087d7dfb10282ee1c9a5fb5c97bb763" translate="yes" xml:space="preserve">
          <source>As we just mentioned, logging in is one of those features that are &lt;strong&gt;mission critical&lt;/strong&gt; and should likely involve your server. We recommend you test signup and login using your UI as a real user would:</source>
          <target state="translated">正如我们刚刚提到的，登录是&lt;strong&gt;任务关键的&lt;/strong&gt;功能之一，可能会涉及您的服务器。我们建议您以实际用户身份使用用户界面测试注册和登录：</target>
        </trans-unit>
        <trans-unit id="acaa0c4546f51c8dfdda6574d68c31d2ef4e382b" translate="yes" xml:space="preserve">
          <source>As we mentioned previously in this guide:</source>
          <target state="translated">正如我们之前在本指南中提到的。</target>
        </trans-unit>
        <trans-unit id="8a1f1736218572903268eb5b18cdd7f75955430b" translate="yes" xml:space="preserve">
          <source>As we saw in the initial example, Cypress makes it easy to click on and type into elements on the page by using &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; commands with a &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt; command. This is a great example of chaining in action. Let&amp;rsquo;s see it again:</source>
          <target state="translated">正如我们在最初的示例中看到的那样，赛普拉斯通过将&lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;命令与&lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; &lt;/a&gt;命令一起使用，可以轻松单击并在页面上键入内容。这是连锁行动的一个很好的例子。让我们再看一遍：</target>
        </trans-unit>
        <trans-unit id="1130247eb77b52f001a3c9ae1faa17218850034d" translate="yes" xml:space="preserve">
          <source>As we showed above, Cypress anticipates the asynchronous nature of web applications and doesn&amp;rsquo;t fail immediately the first time an element is not found. Instead, Cypress gives your app a window of time to finish whatever it may be doing!</source>
          <target state="translated">如上所示，赛普拉斯预见了Web应用程序的异步特性，并且不会在首次发现元素时立即失败。取而代之的是，赛普拉斯为您的应用提供了一个时间窗口来完成它可能要做的一切！</target>
        </trans-unit>
        <trans-unit id="37ccb547796404fa20d17f1596a0f5d2ad59dd9f" translate="yes" xml:space="preserve">
          <source>As you approach infinity your confidence does continue to rise on the chances you could prove the desired state will be reached, but you can never prove it will. Instead you could theoretically be waiting for the heat death of the universe for a condition to come that is only a moment away from happening. There is no way to prove or disprove that it &lt;em&gt;may&lt;/em&gt; conditionally happen.</source>
          <target state="translated">当您接近无穷大时，您可以证明已经达到期望状态的机会确实会增加信心，但是您永远无法证明会达到期望状态。相反，从理论上讲，您可以等待宇宙的热死，以等待距离发生仅一刻之遥的情况。没有任何方法可以证明或反驳它&lt;em&gt;可能&lt;/em&gt;有条件地发生。</target>
        </trans-unit>
        <trans-unit id="6aba466eef0bd2c502c3348af64fc725d6cf16ad" translate="yes" xml:space="preserve">
          <source>As you can see, Cypress does a lot of extra work to ensure the state of the application matches what our commands expect about it. Each command may resolve quickly (so fast you won&amp;rsquo;t see them in a pending state) but others may take seconds, or even dozens of seconds to resolve.</source>
          <target state="translated">如您所见，赛普拉斯做了很多额外的工作来确保应用程序的状态与我们的命令期望的相符。每个命令可能很快就会解决（很快，您就不会看到它们处于挂起状态），但是其他命令可能需要几秒钟甚至几十秒钟才能解决。</target>
        </trans-unit>
        <trans-unit id="c2f84ae4387fd567cb20e3c90d39b12c13875ba4" translate="yes" xml:space="preserve">
          <source>As you write more and more end-to-end tests, you will find yourself wondering - do I need to write more tests? Are there parts of the application still untested? Are there parts of the application that perhaps are tested too much? One answer to those questions is to find out which lines of the application&amp;rsquo;s source code were executed during end-to-end tests. If there are important sections of the application&amp;rsquo;s logic that &lt;strong&gt;were not&lt;/strong&gt; executed from the tests, then a new test should be added to ensure that part of our application logic is tested.</source>
          <target state="translated">随着编写越来越多的端到端测试，您会发现自己很纳闷-我是否需要编写更多测试？应用程序的某些部分是否仍未经测试？应用程序的某些部分是否经过过多测试？这些问题的一个答案是找出在端到端测试期间执行了应用程序源代码的哪些行。如果测试&lt;strong&gt;中未&lt;/strong&gt;执行应用程序逻辑的重要部分，则应添加新测试，以确保测试了我们应用程序逻辑的一部分。</target>
        </trans-unit>
        <trans-unit id="87a97bf4a1598232a60fa2abcdfc4634e1ead040" translate="yes" xml:space="preserve">
          <source>Ask your administrator to disable these policies so that you can use Cypress with Chrome.</source>
          <target state="translated">请您的管理员禁用这些策略,以便您在Chrome浏览器上使用Cypress。</target>
        </trans-unit>
        <trans-unit id="cf4ed9c4735b377be3e9623c700ea94074617be5" translate="yes" xml:space="preserve">
          <source>Assert about the content on the page.</source>
          <target state="translated">对页面上的内容进行断言。</target>
        </trans-unit>
        <trans-unit id="4b9467a4a1ecf2b8384e612c3ea827902723a39b" translate="yes" xml:space="preserve">
          <source>Assert an input is focused after button click</source>
          <target state="translated">点击按钮后确认输入端被聚焦</target>
        </trans-unit>
        <trans-unit id="02fc2f7103472b59154070ccc2dea6f5ce6b7501" translate="yes" xml:space="preserve">
          <source>Assert class name contains &lt;code&gt;heading-&lt;/code&gt;</source>
          <target state="translated">断言类名称包含 &lt;code&gt;heading-&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3e9f35397f479cdc5e28c72cc3ae9b8f67920e2b" translate="yes" xml:space="preserve">
          <source>Assert element is visible after scrolling it into view</source>
          <target state="translated">断言元素在滚动到视图中后是可见的。</target>
        </trans-unit>
        <trans-unit id="b66d50b1e07a39aefbc5c2e7a23ef42cba8913a1" translate="yes" xml:space="preserve">
          <source>Assert it includes: &lt;code&gt;/commands/actions&lt;/code&gt;</source>
          <target state="translated">断言它包括： &lt;code&gt;/commands/actions&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7ab272b32f2443fab970589de436060f234d1e35" translate="yes" xml:space="preserve">
          <source>Assert multiple things about the same subject</source>
          <target state="translated">对同一主题做出多个断言</target>
        </trans-unit>
        <trans-unit id="28ef766ecfa1361e53f74f281657e515d30924e1" translate="yes" xml:space="preserve">
          <source>Assert on a function&amp;rsquo;s return value</source>
          <target state="translated">断言函数的返回值</target>
        </trans-unit>
        <trans-unit id="125634b60989dc3b141c955448d85729f6c546e8" translate="yes" xml:space="preserve">
          <source>Assert on the alert text</source>
          <target state="translated">对警报文本进行断言</target>
        </trans-unit>
        <trans-unit id="1f737b37c1546853f5c1dca2144fcecbe9031918" translate="yes" xml:space="preserve">
          <source>Assert text contents of 3 elements</source>
          <target state="translated">确定3个元素的文本内容</target>
        </trans-unit>
        <trans-unit id="c915fc3b51b99452851ca936f4a63881aa24a260" translate="yes" xml:space="preserve">
          <source>Assert that a propery does not exist on &lt;code&gt;window&lt;/code&gt;</source>
          <target state="translated">断言 &lt;code&gt;window&lt;/code&gt; 上不存在属性</target>
        </trans-unit>
        <trans-unit id="5f86756d6aeca7edb5a4c08d915bf818691252ab" translate="yes" xml:space="preserve">
          <source>Assert that a redirect works</source>
          <target state="translated">断言重定向有效</target>
        </trans-unit>
        <trans-unit id="bbd76738127dcf4f083861f496d145941c128859" translate="yes" xml:space="preserve">
          <source>Assert that hash is &lt;code&gt;#/users/1&lt;/code&gt; given remote URL: &lt;code&gt;http://localhost:8000/app/#/users/1&lt;/code&gt;</source>
          <target state="translated">断言哈希是 &lt;code&gt;#/users/1&lt;/code&gt; 给定的远程URL： &lt;code&gt;http://localhost:8000/app/#/users/1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8a5a7a3674d89a100e54bd1eec9e2cb25a54e023" translate="yes" xml:space="preserve">
          <source>Assert that the document&amp;rsquo;s title is &amp;ldquo;My Awesome Application&amp;rdquo;</source>
          <target state="translated">断言文档的标题是&amp;ldquo;我的真棒应用程序&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="24de4c83a3cb291461f7c5d3cc0ae2af7b327c3a" translate="yes" xml:space="preserve">
          <source>Assert that the hash matches via RegExp</source>
          <target state="translated">通过正则表达式断言哈希值匹配</target>
        </trans-unit>
        <trans-unit id="06393ca60c2b084cd6a848424a245cabe352afc3" translate="yes" xml:space="preserve">
          <source>Assert that the url contains &amp;ldquo;#users/new&amp;rdquo;</source>
          <target state="translated">断言该网址包含&amp;ldquo;＃users / new&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="d0e358e06c71103b03f7ef1eca4c4ff3d3051315" translate="yes" xml:space="preserve">
          <source>Assert the URL is &lt;code&gt;http://localhost:8000/users/1/edit&lt;/code&gt;</source>
          <target state="translated">断言URL是 &lt;code&gt;http://localhost:8000/users/1/edit&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ff77f0d76a34309ec03d8c8e39d2fb226f915533" translate="yes" xml:space="preserve">
          <source>Assert the URL to include a specific &lt;em&gt;string&lt;/em&gt;</source>
          <target state="translated">声明URL以包含特定&lt;em&gt;字符串&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="13250a120a019f64e88759c9884da42180779b4f" translate="yes" xml:space="preserve">
          <source>Assert the URL to include a specific &lt;em&gt;string&lt;/em&gt;.</source>
          <target state="translated">声明URL以包括特定的&lt;em&gt;字符串&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="16417d7e03062b12edb9edbe5427a47afd0df97d" translate="yes" xml:space="preserve">
          <source>Assert the checkbox is disabled</source>
          <target state="translated">断言该复选框被禁用</target>
        </trans-unit>
        <trans-unit id="4f7eca6e8e52d452c9901a276fca67a7eb5103ea" translate="yes" xml:space="preserve">
          <source>Assert the class is &amp;lsquo;form-horizontal&amp;rsquo;</source>
          <target state="translated">断言该班级是&amp;ldquo;水平形式&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="c44f0a5f6177b5f9d4c7958f5e35e956bb880be3" translate="yes" xml:space="preserve">
          <source>Assert the href is equal to &amp;lsquo;/users&amp;rsquo;</source>
          <target state="translated">断言href等于'/ users'</target>
        </trans-unit>
        <trans-unit id="1038a6131176206f351f3d047ba98539168a882b" translate="yes" xml:space="preserve">
          <source>Assert the input reflects the new value</source>
          <target state="translated">断言输入反映了新的值</target>
        </trans-unit>
        <trans-unit id="b88085c8c2d1e0f8670981cd24ba58b2230bc63d" translate="yes" xml:space="preserve">
          <source>Assert the value is not &amp;lsquo;Jane&amp;rsquo;</source>
          <target state="translated">断言该值不是&amp;ldquo;简&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="3727b7a7437bb392133be46f8128c1d09090e3a8" translate="yes" xml:space="preserve">
          <source>Asserting About Elements</source>
          <target state="translated">关于元素的断言</target>
        </trans-unit>
        <trans-unit id="9ff57967d35caef5906df45c2387e1e5c9d46d96" translate="yes" xml:space="preserve">
          <source>Asserting against &lt;a href=&quot;../../api/commands/focused&quot;&gt;&lt;code&gt;cy.focused()&lt;/code&gt;&lt;/a&gt; will indent command logs now.</source>
          <target state="translated">声明&lt;a href=&quot;../../api/commands/focused&quot;&gt; &lt;code&gt;cy.focused()&lt;/code&gt; &lt;/a&gt;会立即缩进命令日志。</target>
        </trans-unit>
        <trans-unit id="9583b461b8ff4edbaf885d356361c4443b12451d" translate="yes" xml:space="preserve">
          <source>Asserting file non-existence</source>
          <target state="translated">申明文件不存在</target>
        </trans-unit>
        <trans-unit id="fa0cf380edcc5a6b369b220ed3a5bbdc45bdd21c" translate="yes" xml:space="preserve">
          <source>Asserting in English</source>
          <target state="translated">用英语断言</target>
        </trans-unit>
        <trans-unit id="2560ac029f415c3f4f60afeea7010112b46f071a" translate="yes" xml:space="preserve">
          <source>Asserting on a request&amp;rsquo;s body</source>
          <target state="translated">声明请求的内容</target>
        </trans-unit>
        <trans-unit id="30e36ab08f421e5caee6fdcc2478550a634beafd" translate="yes" xml:space="preserve">
          <source>Asserting on a request&amp;rsquo;s headers</source>
          <target state="translated">声明一个请求头</target>
        </trans-unit>
        <trans-unit id="edc4d66b454ac916879e03dc2b000e7bf2cb9e60" translate="yes" xml:space="preserve">
          <source>Asserting on a request&amp;rsquo;s url</source>
          <target state="translated">声明请求的URL</target>
        </trans-unit>
        <trans-unit id="c4bf7f32d25381cbadabc740c00acb1a21851081" translate="yes" xml:space="preserve">
          <source>Asserting that an attribute equals a falsy value no longer fails when the value was falsy. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/831&quot;&gt;#831&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1491&quot;&gt;#1491&lt;/a&gt;.</source>
          <target state="translated">断言属性等于假值时，该值不再为假。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/831&quot;&gt;＃831&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1491&quot;&gt;＃1491&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e03dc251be8fa0a9d0f75257a00fcb55f9bed839" translate="yes" xml:space="preserve">
          <source>Assertion</source>
          <target state="translated">Assertion</target>
        </trans-unit>
        <trans-unit id="48075c7745848f6b5ffba4fe477e11aad495df4d" translate="yes" xml:space="preserve">
          <source>Assertion Styles</source>
          <target state="translated">断言类型</target>
        </trans-unit>
        <trans-unit id="139da0520e13ec6926fd499c208eebe28a15fc6c" translate="yes" xml:space="preserve">
          <source>Assertion Support</source>
          <target state="translated">论断支持</target>
        </trans-unit>
        <trans-unit id="631e0c0813e30329106964fd36526f87bf2ccf4f" translate="yes" xml:space="preserve">
          <source>Assertion messages are no longer truncated, and instead will scale down by reducing the &lt;code&gt;font-size&lt;/code&gt; and &lt;code&gt;line-height&lt;/code&gt; after they exceed 110 characters. So you&amp;rsquo;ll now always see the full assertion message.</source>
          <target state="translated">断言消息不再被截断，而是在超过110个字符后通过减小 &lt;code&gt;font-size&lt;/code&gt; 和 &lt;code&gt;line-height&lt;/code&gt; 来缩小。因此，您现在将始终看到完整的断言消息。</target>
        </trans-unit>
        <trans-unit id="49bf55dc112eb3597726ba8ecf785a4fae4cbce0" translate="yes" xml:space="preserve">
          <source>Assertions</source>
          <target state="translated">Assertions</target>
        </trans-unit>
        <trans-unit id="e2dbf25bdc8bdd90af44c8f13d81535a55f8477c" translate="yes" xml:space="preserve">
          <source>Assertions based around the &lt;code&gt;window&lt;/code&gt; or &lt;code&gt;document&lt;/code&gt; object no longer cause Chai to bomb on formatting their object structures (due to cylic references) and instead now will show up as &lt;code&gt;&amp;lt;window&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;document&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">基于 &lt;code&gt;window&lt;/code&gt; 或 &lt;code&gt;document&lt;/code&gt; 对象的断言不再导致Chai在格式化其对象结构时（由于循环引用）引起轰炸，而是现在将显示为 &lt;code&gt;&amp;lt;window&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;document&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b46abda2fe2a6b8d37201bea9e12a3e63f5e90ba" translate="yes" xml:space="preserve">
          <source>Assertions describe the &lt;strong&gt;desired&lt;/strong&gt; state of your &lt;strong&gt;elements&lt;/strong&gt;, your &lt;strong&gt;objects&lt;/strong&gt;, and your &lt;strong&gt;application&lt;/strong&gt;.</source>
          <target state="translated">断言描述&lt;strong&gt;元素&lt;/strong&gt;，&lt;strong&gt;对象&lt;/strong&gt;和&lt;strong&gt;应用程序&lt;/strong&gt;的&lt;strong&gt;期望&lt;/strong&gt;状态。&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="26c7b02910ea1639c957a331167a037b8d84fee6" translate="yes" xml:space="preserve">
          <source>Assertions let you do things like ensuring an element is visible or has a particular attribute, CSS class, or state. Assertions are just commands that enable you to describe the &lt;em&gt;desired&lt;/em&gt; state of your application. Cypress will automatically wait until your elements reach this state, or fail the test if the assertions don&amp;rsquo;t pass. Here&amp;rsquo;s a quick look at assertions in action:</source>
          <target state="translated">断言可让您执行诸如确保元素可见或具有特定属性，CSS类或状态的操作。断言只是使您能够描述应用程序&lt;em&gt;所需&lt;/em&gt;状态的命令。如果断言没有通过，赛普拉斯将自动等待，直到您的元素达到该状态为止，否则将使测试失败。快速查看实际的断言：</target>
        </trans-unit>
        <trans-unit id="9fc8683ffa6bfd55daae9eefe6b8beaa3eb3298c" translate="yes" xml:space="preserve">
          <source>Assertions running outside of a test are now properly handled in Cypress instead of throwing internal errors. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3926&quot;&gt;#3926&lt;/a&gt;.</source>
          <target state="translated">现在，可以在赛普拉斯中正确处理在测试之外运行的断言，而不会引发内部错误。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3926&quot;&gt;＃3926&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="23ddc4b368485bc88a12477ddff72e1bc1804b5a" translate="yes" xml:space="preserve">
          <source>Assertions that involved an &lt;code&gt;{exp}&lt;/code&gt; property are no longer incorrectly substituted with the &lt;code&gt;#{this}&lt;/code&gt; subject.</source>
          <target state="translated">包含 &lt;code&gt;{exp}&lt;/code&gt; 属性的断言不再被 &lt;code&gt;#{this}&lt;/code&gt; 主题错误地替换。</target>
        </trans-unit>
        <trans-unit id="d78b302f7a8700182b6d91b01cc06bd42a68a2cd" translate="yes" xml:space="preserve">
          <source>Assertions which actually produced 2 assertions (under the hood) such as &lt;code&gt;should('have.attr', 'href', '/users/1')&lt;/code&gt; will now only log the 2nd assertion, unless the first fails.</source>
          <target state="translated">实际生成2个断言（在 &lt;code&gt;should('have.attr', 'href', '/users/1')&lt;/code&gt; ）的断言，例如should（'have.attr'，'href'，'/ users / 1'）现在将仅记录第二个断言，除非第一个断言失败。</target>
        </trans-unit>
        <trans-unit id="141ed1ac2969e934c84598e3b128c5f2d6936b13" translate="yes" xml:space="preserve">
          <source>Assign an alias for later use. Reference the alias later within a &lt;a href=&quot;get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt; command with an &lt;code&gt;@&lt;/code&gt; prefix.</source>
          <target state="translated">分配别名以供以后使用。稍后在带有 &lt;code&gt;@&lt;/code&gt; 前缀的&lt;a href=&quot;get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt;命令中引用别名。</target>
        </trans-unit>
        <trans-unit id="5d6a0c9d46636db546f8c450bb160e696ff6b47b" translate="yes" xml:space="preserve">
          <source>Assigning Return Values</source>
          <target state="translated">分配返回值</target>
        </trans-unit>
        <trans-unit id="e0bdc67d8c0bee088a993ebfb54375b0e2faae1e" translate="yes" xml:space="preserve">
          <source>Assuming you&amp;rsquo;ve successfully &lt;a href=&quot;installing-cypress#Installing&quot;&gt;installed the Test Runner&lt;/a&gt; and &lt;a href=&quot;installing-cypress#Opening-Cypress&quot;&gt;opened the Cypress app&lt;/a&gt;, now it&amp;rsquo;s time to write our first test. We&amp;rsquo;re going to:</source>
          <target state="translated">假设您已经成功&lt;a href=&quot;installing-cypress#Installing&quot;&gt;安装了Test Runner&lt;/a&gt;并&lt;a href=&quot;installing-cypress#Opening-Cypress&quot;&gt;打开了Cypress应用程序&lt;/a&gt;，那么现在该编写我们的第一个测试了。我们将要：</target>
        </trans-unit>
        <trans-unit id="489a672e2e613a7915bae711622ae15ae6ed1a07" translate="yes" xml:space="preserve">
          <source>Assuming you&amp;rsquo;ve successfully &lt;a href=&quot;installing-cypress#Installing&quot;&gt;installed the Test Runner&lt;/a&gt; and &lt;a href=&quot;installing-cypress#Opening-Cypress&quot;&gt;opened the Test Runner&lt;/a&gt; in your project, the first thing you&amp;rsquo;ll want to do is start your local development server that hosts the application.</source>
          <target state="translated">假设您已成功&lt;a href=&quot;installing-cypress#Installing&quot;&gt;安装Test Runner&lt;/a&gt;并在项目中&lt;a href=&quot;installing-cypress#Opening-Cypress&quot;&gt;打开Test Runner&lt;/a&gt;，首先要做的是启动托管应用程序的本地开发服务器。</target>
        </trans-unit>
        <trans-unit id="fed55757249988c0611abfa4e8ef2e933d32d401" translate="yes" xml:space="preserve">
          <source>Async tests which used a &lt;code&gt;cy&lt;/code&gt; command and had a &lt;code&gt;done&lt;/code&gt; callback was always undefined. Now it&amp;rsquo;s back to real Mocha &lt;code&gt;function done(err)&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;cy&lt;/code&gt; 命令并 &lt;code&gt;done&lt;/code&gt; 回调的异步测试始终是不确定的。现在返回到真正的Mocha &lt;code&gt;function done(err)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3d7fac7964f752248f02c5aa61c85fd417dcfbcf" translate="yes" xml:space="preserve">
          <source>Asynchronous</source>
          <target state="translated">Asynchronous</target>
        </trans-unit>
        <trans-unit id="a2ec75ee73f3aec0ec162ad993797b2b7f6f94af" translate="yes" xml:space="preserve">
          <source>Asynchronous APIs are here to stay in JavaScript. They are found everywhere in modern code. In fact, most new browser APIs are asynchronous and many core Node modules are asynchronous as well.</source>
          <target state="translated">在JavaScript中,异步API将继续存在。它们在现代代码中随处可见。事实上,大多数新的浏览器API都是异步的,许多核心Node模块也是异步的。</target>
        </trans-unit>
        <trans-unit id="d2da7c0a9bf7a105a7f9afea2f549789e539a08e" translate="yes" xml:space="preserve">
          <source>At first, we&amp;rsquo;ll use them to make it easy to share objects between your hooks and your tests.</source>
          <target state="translated">首先，我们将使用它们来简化在钩子和测试之间共享对象的过程。</target>
        </trans-unit>
        <trans-unit id="c1903c75ce54bb3fb624b280eb90df3e50486891" translate="yes" xml:space="preserve">
          <source>At the moment, &lt;code&gt;mouseover&lt;/code&gt; and &lt;code&gt;mouseout&lt;/code&gt; events are &lt;em&gt;not&lt;/em&gt; fired. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;Open an issue&lt;/a&gt; if you need this to be fixed.</source>
          <target state="translated">目前，&lt;em&gt;不会&lt;/em&gt;触发 &lt;code&gt;mouseover&lt;/code&gt; 和 &lt;code&gt;mouseout&lt;/code&gt; 事件。如果您需要解决此&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;问题&lt;/a&gt;，请打开一个问题。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0e46540f6713af7a953cbcf962397ae439a570c2" translate="yes" xml:space="preserve">
          <source>At the moment, we haven&amp;rsquo;t implemented an automatic way to recover from them, but it is actually possible for us to do so. We have an &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/349&quot;&gt;open issue documenting the steps&lt;/a&gt; we could take to restart the renderer process and continue the run. If you&amp;rsquo;re seeing consistent crashes and would like this implemented, please leave a note in the issue.</source>
          <target state="translated">目前，我们还没有实现从它们中恢复的自动方法，但是实际上我们可以这样做。我们有一个&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/349&quot;&gt;未解决的问题，记录了&lt;/a&gt;我们可以采取的重新启动渲染器过程并继续运行的步骤。如果您看到一致的崩溃，并希望此崩溃得以实施，请在问题中留言。</target>
        </trans-unit>
        <trans-unit id="cefc6e99b66db543e27f5db576042d6f2531a8a2" translate="yes" xml:space="preserve">
          <source>At the very bottom of the Settings page click the &lt;strong&gt;Remove Project&lt;/strong&gt; button.</source>
          <target state="translated">在&amp;ldquo;设置&amp;rdquo;页面的最底部，单击&amp;ldquo; &lt;strong&gt;删除项目&amp;rdquo;&lt;/strong&gt;按钮。</target>
        </trans-unit>
        <trans-unit id="fbe13375780cbe384edfa4dd341dc92ba3540c5c" translate="yes" xml:space="preserve">
          <source>Attempting to &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; a select element will now throw an error. The error guides you to using the &lt;a href=&quot;../../api/commands/select&quot;&gt;&lt;code&gt;.select()&lt;/code&gt;&lt;/a&gt; command, as that is the command you should use to change a &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; value.</source>
          <target state="translated">尝试&lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt;选择元素现在将引发错误。该错误指导您使用&lt;a href=&quot;../../api/commands/select&quot;&gt; &lt;code&gt;.select()&lt;/code&gt; &lt;/a&gt;命令，因为该命令是您用来更改 &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; 值的命令。</target>
        </trans-unit>
        <trans-unit id="45848457ad7247c237422b4c68498d0720b37c3b" translate="yes" xml:space="preserve">
          <source>Attempting to &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; a non &lt;code&gt;text/html&lt;/code&gt; resource will now throw a specific error message instead of bombing on page injection with an &lt;code&gt;&amp;lt;iframe&lt;/code&gt;&amp;gt; origin error. You have to visit actual &lt;code&gt;html&lt;/code&gt;, you cannot visit something like a &lt;code&gt;.json&lt;/code&gt; or &lt;code&gt;.png&lt;/code&gt;. If you&amp;rsquo;re wanting to visit an API route on your back end that does something like set cookies (thus avoiding loading your UI) you can just use &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; for this since it will now automatically get and set cookies under the hood. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/211&quot;&gt;#211&lt;/a&gt;.</source>
          <target state="translated">现在尝试&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;的非 &lt;code&gt;text/html&lt;/code&gt; 资源将引发特定的错误消息，而不是在页面注入时使用 &lt;code&gt;&amp;lt;iframe&lt;/code&gt; &amp;gt;原点错误轰炸。您必须访问实际的 &lt;code&gt;html&lt;/code&gt; ，而不能访问 &lt;code&gt;.json&lt;/code&gt; 或 &lt;code&gt;.png&lt;/code&gt; 之类的东西。如果您想访问后端的API路由，该路由类似于设置cookie（从而避免加载UI），则可以使用&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt;，因为它现在可以在后台自动获取和设置cookie。 。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/211&quot;&gt;＃211&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7dfc2ad67907aaea89a872402b6a78fe213e2547" translate="yes" xml:space="preserve">
          <source>Attempting to run &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt; on a project without a &lt;code&gt;cypress.json&lt;/code&gt; now errors instead of scaffolding and running the kitchen sink.</source>
          <target state="translated">尝试在没有 &lt;code&gt;cypress.json&lt;/code&gt; 的项目上运行&lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt; &lt;code&gt;cypress run&lt;/code&gt; &lt;/a&gt;现在会出错，而不是脚手架和运行厨房水槽。</target>
        </trans-unit>
        <trans-unit id="77cb6dedbdce68f64d263282b100f5849ed1f45b" translate="yes" xml:space="preserve">
          <source>Aurelia CLI</source>
          <target state="translated">Aurelia CLI</target>
        </trans-unit>
        <trans-unit id="ee1acfa55eb1476c86c5c4a68f256a67b25289ab" translate="yes" xml:space="preserve">
          <source>Authentication</source>
          <target state="translated">Authentication</target>
        </trans-unit>
        <trans-unit id="32e2d8cbbd74c3179b4f6b2ec3547f618f814d62" translate="yes" xml:space="preserve">
          <source>Author email: &lt;code&gt;COMMIT_INFO_EMAIL&lt;/code&gt;</source>
          <target state="translated">作者电子邮件： &lt;code&gt;COMMIT_INFO_EMAIL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9cfa5b79c63296cedbafae7bb9de1bf88cf445e4" translate="yes" xml:space="preserve">
          <source>Author: &lt;code&gt;COMMIT_INFO_AUTHOR&lt;/code&gt;</source>
          <target state="translated">作者： &lt;code&gt;COMMIT_INFO_AUTHOR&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dd099a159d5cc312d300f7305c16e69a025920cc" translate="yes" xml:space="preserve">
          <source>Auto Scaling</source>
          <target state="translated">自动缩放</target>
        </trans-unit>
        <trans-unit id="69d84670ebb049ab9e66b74191cd2bdfc4f61b3c" translate="yes" xml:space="preserve">
          <source>Autocomplete while typing Cypress commands</source>
          <target state="translated">在输入赛普拉斯命令时自动完成。</target>
        </trans-unit>
        <trans-unit id="b7884505960ec27e21eebfbb0a1e667cbff977af" translate="yes" xml:space="preserve">
          <source>Autocomplete while typing assertion chains, including only showing DOM assertions if testing on a DOM element.</source>
          <target state="translated">在输入断言链时自动完成,包括只有在DOM元素上测试时才显示DOM断言。</target>
        </trans-unit>
        <trans-unit id="593dda079f1d76de3d8c3ef76b8d0402c0ec05e6" translate="yes" xml:space="preserve">
          <source>Automated File Validation</source>
          <target state="translated">自动文件验证</target>
        </trans-unit>
        <trans-unit id="618689863915a7d869fe47db737f5bd3e83d82e4" translate="yes" xml:space="preserve">
          <source>Automatic command errors now properly show as errored commands.</source>
          <target state="translated">自动命令错误现在正确显示为错误命令。</target>
        </trans-unit>
        <trans-unit id="618b0fd1eff770212e07637c277d859d9f5542f5" translate="yes" xml:space="preserve">
          <source>Automatic reset/restore between tests</source>
          <target state="translated">测试之间自动复位/恢复</target>
        </trans-unit>
        <trans-unit id="fb090c03b6f2481b7bfca5ed0f848be0c8caa86f" translate="yes" xml:space="preserve">
          <source>Automatic retries</source>
          <target state="translated">自动重试</target>
        </trans-unit>
        <trans-unit id="ed51f87be15dfc89156f75642f3c404c2c41f4dd" translate="yes" xml:space="preserve">
          <source>Automatic screenshots on test failure</source>
          <target state="translated">测试失败时自动截图</target>
        </trans-unit>
        <trans-unit id="7ad9ea3d849ebee913c14efa89fb8281b9e96ec3" translate="yes" xml:space="preserve">
          <source>Automatically send &lt;code&gt;Accept: text/html,*/*&lt;/code&gt; request header</source>
          <target state="translated">自动发送 &lt;code&gt;Accept: text/html,*/*&lt;/code&gt; 请求标头</target>
        </trans-unit>
        <trans-unit id="d6de80e0d423a44071ee7a46055a292c21c3387b" translate="yes" xml:space="preserve">
          <source>Automatically send &lt;code&gt;User-Agent&lt;/code&gt; header</source>
          <target state="translated">自动发送 &lt;code&gt;User-Agent&lt;/code&gt; 标头</target>
        </trans-unit>
        <trans-unit id="c49f11abcde4cd837f26251fb9b7feae04894223" translate="yes" xml:space="preserve">
          <source>Automation restrictions</source>
          <target state="translated">自动化限制</target>
        </trans-unit>
        <trans-unit id="0751b786ba4011660cb1fdd1b25298300b560a07" translate="yes" xml:space="preserve">
          <source>Available aliases are now logged in the console on &lt;a href=&quot;../../api/commands/debug&quot;&gt;&lt;code&gt;.debug()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">现在，可用别名在&lt;a href=&quot;../../api/commands/debug&quot;&gt; &lt;code&gt;.debug()&lt;/code&gt; &lt;/a&gt;上记录在控制台中。</target>
        </trans-unit>
        <trans-unit id="2d4ca335e321552a3046fa927e75ee78ae6a39b3" translate="yes" xml:space="preserve">
          <source>Avoid the server, invoke your JavaScript callbacks manually thereby simulating what happens when &amp;ldquo;notifications come in&amp;rdquo;, or &amp;ldquo;users leave the chat&amp;rdquo; purely in the browser.</source>
          <target state="translated">避开服务器，手动调用JavaScript回调，从而模拟&amp;ldquo;通知进入&amp;rdquo;或&amp;ldquo;用户离开聊天室&amp;rdquo;纯粹在浏览器中发生的情况。</target>
        </trans-unit>
        <trans-unit id="555ae8ff4a2358563b4f67ac3aab414a0ea0e94c" translate="yes" xml:space="preserve">
          <source>Avoiding the use of &lt;code&gt;this&lt;/code&gt;</source>
          <target state="translated">避免使用 &lt;code&gt;this&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="276e2011444112663d40a612db506f9034b7fc8f" translate="yes" xml:space="preserve">
          <source>Azure DevOps / VSTS CI / TeamFoundation</source>
          <target state="translated">Azure DevOps/VSTS CI/TeamFoundation。</target>
        </trans-unit>
        <trans-unit id="4a25a281198c16ce3576abaeed0649dc813bef99" translate="yes" xml:space="preserve">
          <source>BDD Assertions</source>
          <target state="translated">BDD断言</target>
        </trans-unit>
        <trans-unit id="b422f8663cba8758a08c2ef06f072acfec0b040a" translate="yes" xml:space="preserve">
          <source>Backgrounding your server process means that your CI provider will continue to execute the next command after executing the signal to start your server.</source>
          <target state="translated">后台你的服务器进程意味着你的CI提供商将在执行信号启动你的服务器后继续执行下一个命令。</target>
        </trans-unit>
        <trans-unit id="314d6a4a216e41c18651ac1730ca4f3bf5b7661b" translate="yes" xml:space="preserve">
          <source>Bad. Coupled to styling. Highly subject to change.</source>
          <target state="translated">坏的。再加上造型。极有可能发生变化。</target>
        </trans-unit>
        <trans-unit id="1d8fd1bba5d5d84cfd62db547c3d4298468986bc" translate="yes" xml:space="preserve">
          <source>Balance strategy</source>
          <target state="translated">平衡战略</target>
        </trans-unit>
        <trans-unit id="4dead9768cf3c4c30f6b08fbdb580877699d32a7" translate="yes" xml:space="preserve">
          <source>Bamboo</source>
          <target state="translated">Bamboo</target>
        </trans-unit>
        <trans-unit id="75d2adde8821b3ad8fa5a427e84a8b3cc02aa372" translate="yes" xml:space="preserve">
          <source>Bar Chart View</source>
          <target state="translated">条形图查看</target>
        </trans-unit>
        <trans-unit id="b6a4727a100aad9e8b44490e310f0cc28e10f5ba" translate="yes" xml:space="preserve">
          <source>Based on these estimations, Cypress distributes (&lt;a href=&quot;#Balance-strategy&quot;&gt;load-balances&lt;/a&gt;) spec files one-by-one to each available machine in a way that minimizes overall test run time.</source>
          <target state="translated">基于这些估算，赛普拉斯将规范文件一对一地分发（&lt;a href=&quot;#Balance-strategy&quot;&gt;负载平衡&lt;/a&gt;）规范文件到每台可用的计算机上，以最大程度地减少总体测试运行时间。</target>
        </trans-unit>
        <trans-unit id="afacb8d68c6ec38167c6c88ceadaac66a23c15fa" translate="yes" xml:space="preserve">
          <source>Based on those statements, you might be tempted to just throw a &lt;code&gt;debugger&lt;/code&gt; into your test, like so:</source>
          <target state="translated">基于这些语句，您可能会想将 &lt;code&gt;debugger&lt;/code&gt; 放入测试中，如下所示：</target>
        </trans-unit>
        <trans-unit id="13f76e93cecc937a3e61252fc011f3ce143ffdce" translate="yes" xml:space="preserve">
          <source>Basic Promise</source>
          <target state="translated">基本承诺</target>
        </trans-unit>
        <trans-unit id="106c757df0b40beb9cd9c1e8f66ecfc7239a2282" translate="yes" xml:space="preserve">
          <source>Basic auth is working again in Chrome 63 and Chrome 64. We &amp;ldquo;for real&amp;rdquo; fixed it this time by adding auth headers automatically at the network proxy layer and bypassed the browser altogether. We automatically apply auth headers if you provide a username/password in the URL of a &lt;code&gt;cy.visit(url)&lt;/code&gt;. We also added a new &lt;code&gt;auth&lt;/code&gt; option to specify the &lt;code&gt;username/password&lt;/code&gt; using &lt;code&gt;cy.visit(url, options)&lt;/code&gt;. All of the requests that match the origin of the URL will have the &lt;code&gt;Authorization: Basic &amp;lt;...&amp;gt;&lt;/code&gt; headers added. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1288&quot;&gt;#1288&lt;/a&gt;.</source>
          <target state="translated">基本身份验证可在Chrome 63和Chrome 64中再次使用。这次，我们&amp;ldquo;真正&amp;rdquo;修复了此问题，方法是在网络代理层自动添加身份验证标头，并完全绕过浏览器。如果您在 &lt;code&gt;cy.visit(url)&lt;/code&gt; 的URL中提供用户名/密码，我们将自动应用身份验证标头。我们还添加了一个新的 &lt;code&gt;auth&lt;/code&gt; 选项，以使用 &lt;code&gt;cy.visit(url, options)&lt;/code&gt; 指定 &lt;code&gt;username/password&lt;/code&gt; 。所有与URL来源匹配的请求都将添加 &lt;code&gt;Authorization: Basic &amp;lt;...&amp;gt;&lt;/code&gt; 标头。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1288&quot;&gt;＃1288&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d300fb6c70d1056b96c733cb65342a250a92f467" translate="yes" xml:space="preserve">
          <source>Basic auth now works &lt;em&gt;again&lt;/em&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/573&quot;&gt;#573&lt;/a&gt;.</source>
          <target state="translated">基本身份验证现在可以&lt;em&gt;再次使用&lt;/em&gt;。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/573&quot;&gt;＃573&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5fcebeefad3cdbbf8733aa928160dec7dc90c1a1" translate="yes" xml:space="preserve">
          <source>Basics</source>
          <target state="translated">Basics</target>
        </trans-unit>
        <trans-unit id="e00a11d2c77cb636d46322dc133ed17c39db78e2" translate="yes" xml:space="preserve">
          <source>Be cautious for URL&amp;rsquo;s which have no subdomain.</source>
          <target state="translated">请注意没有子域的URL。</target>
        </trans-unit>
        <trans-unit id="180fcda779e6128c125e7ceb3e7caf984763f134" translate="yes" xml:space="preserve">
          <source>Be wary of chaining multiple contains</source>
          <target state="translated">警惕连锁多个包含</target>
        </trans-unit>
        <trans-unit id="a867d3850797346a03eecdd7b25d7156c9a25e96" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; automatically gets and sets cookies under the hood, we can actually use it to build up state without using your browser&amp;rsquo;s UI, yet still have it perform exactly as if it came from the browser!</source>
          <target state="translated">因为&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; 会&lt;/a&gt;自动获取和设置cookie，所以我们实际上可以使用它来建立状态，而无需使用浏览器的UI，但仍然可以像从浏览器中一样来执行它！</target>
        </trans-unit>
        <trans-unit id="ef305997e0c2dcc9486332a9f2cf0b79c0a97085" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should('have.class')&lt;/code&gt;&lt;/a&gt; does not change the subject, &lt;a href=&quot;../../api/commands/and&quot;&gt;&lt;code&gt;.and('have.attr')&lt;/code&gt;&lt;/a&gt; is executed against the same element. This is handy when you need to assert multiple things against a single subject quickly.</source>
          <target state="translated">因为&lt;a href=&quot;../../api/commands/should&quot;&gt; &lt;code&gt;.should('have.class')&lt;/code&gt; &lt;/a&gt;不会更改主题，所以&lt;a href=&quot;../../api/commands/and&quot;&gt; &lt;code&gt;.and('have.attr')&lt;/code&gt; &lt;/a&gt;是针对同一元素执行的。当您需要针对一个主题快速声明多个内容时，这很方便。</target>
        </trans-unit>
        <trans-unit id="618f376b7abd371581ab0ff5d621f693d4852221" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;cy.clearCookie()&lt;/code&gt; is asynchronous it is technically possible for there to be a timeout while talking to the internal Cypress automation APIs. But for practical purposes it should never happen.</source>
          <target state="translated">由于 &lt;code&gt;cy.clearCookie()&lt;/code&gt; 是异步的，因此从技术上讲，与内部Cypress自动化API进行对话时可能会发生超时。但是出于实际目的，它永远不会发生。</target>
        </trans-unit>
        <trans-unit id="681c23ac5843644fef3e07c5332b251d5335a491" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;cy.clearCookies()&lt;/code&gt; is asynchronous it is technically possible for there to be a timeout while talking to the internal Cypress automation APIs. But for practical purposes it should never happen.</source>
          <target state="translated">由于 &lt;code&gt;cy.clearCookies()&lt;/code&gt; 是异步的，因此从技术上说，与内部Cypress自动化API对话时可能会发生超时。但是出于实际目的，它永远不会发生。</target>
        </trans-unit>
        <trans-unit id="aa0514201ff7728220ff5a555f42a3d970099e95" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;cy.fixture()&lt;/code&gt; is asynchronous it is technically possible for there to be a timeout while talking to the internal Cypress automation APIs. But for practical purposes it should never happen.</source>
          <target state="translated">由于 &lt;code&gt;cy.fixture()&lt;/code&gt; 是异步的，因此从技术上讲，与内部Cypress自动化API通讯时可能会发生超时。但是出于实际目的，它永远不会发生。</target>
        </trans-unit>
        <trans-unit id="e596d2416cc8d777c62c7344a99f1e7eec088cfb" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;cy.getCookie()&lt;/code&gt; is asynchronous it is technically possible for there to be a timeout while talking to the internal Cypress automation APIs. But for practical purposes it should never happen.</source>
          <target state="translated">由于 &lt;code&gt;cy.getCookie()&lt;/code&gt; 是异步的，因此从技术上说，在与内部Cypress自动化API通讯时可能会出现超时。但是出于实际目的，它永远不会发生。</target>
        </trans-unit>
        <trans-unit id="758e2bbb245fd0d545347b3b441aaaf92106372e" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;cy.getCookies()&lt;/code&gt; is asynchronous it is technically possible for there to be a timeout while talking to the internal Cypress automation APIs. But for practical purposes it should never happen.</source>
          <target state="translated">由于 &lt;code&gt;cy.getCookies()&lt;/code&gt; 是异步的，因此从技术上讲，与内部Cypress自动化API进行对话时可能会发生超时。但是出于实际目的，它永远不会发生。</target>
        </trans-unit>
        <trans-unit id="ba8785469ef3519290b9c09860898ae9a597cf6f" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;cy.screenshot()&lt;/code&gt; is asynchronous it is technically possible for there to be a timeout while talking to the internal Cypress automation APIs. But for practical purposes it should never happen.</source>
          <target state="translated">由于 &lt;code&gt;cy.screenshot()&lt;/code&gt; 是异步的，因此从技术上说，与内部Cypress自动化API对话时可能会发生超时。但是出于实际目的，它永远不会发生。</target>
        </trans-unit>
        <trans-unit id="65bb9b4aa79fec768f6d269f9ede76f9c97651c5" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;cy.setCookie()&lt;/code&gt; is asynchronous it is technically possible for there to be a timeout while talking to the internal Cypress automation APIs. But for practical purposes it should never happen.</source>
          <target state="translated">由于 &lt;code&gt;cy.setCookie()&lt;/code&gt; 是异步的，因此从技术上说，与内部Cypress自动化API对话时可能会发生超时。但是出于实际目的，它永远不会发生。</target>
        </trans-unit>
        <trans-unit id="fb187a8b36b59d002eb33f5f2cec58799b12b6a7" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;cy.writeFile()&lt;/code&gt; is asynchronous it is technically possible for there to be a timeout while talking to the internal Cypress automation APIs. But for practical purposes it should never happen.</source>
          <target state="translated">由于 &lt;code&gt;cy.writeFile()&lt;/code&gt; 是异步的，因此从技术上讲，与内部Cypress自动化API通讯时可能会发生超时。但是出于实际目的，它永远不会发生。</target>
        </trans-unit>
        <trans-unit id="9dfda6c78c664b975d65c6bae969be1bf0507384" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;cy&lt;/code&gt; commands are asynchronous and are queued to be run later, it doesn&amp;rsquo;t make sense to return anything else.</source>
          <target state="translated">因为 &lt;code&gt;cy&lt;/code&gt; 命令是异步的，并且排队等待稍后运行，所以返回任何其他命令都没有意义。</target>
        </trans-unit>
        <trans-unit id="9b40f51d901b0dcd3a5a7ba883a6e8ab15a898be" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;localhost:1234&lt;/code&gt; uses a port other than &lt;code&gt;80&lt;/code&gt; and &lt;code&gt;443&lt;/code&gt; it &lt;strong&gt;must be included&lt;/strong&gt;.</source>
          <target state="translated">由于 &lt;code&gt;localhost:1234&lt;/code&gt; 使用的端口不是 &lt;code&gt;80&lt;/code&gt; 和 &lt;code&gt;443&lt;/code&gt; ,因此&lt;strong&gt;必须包含&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="a25427a0f137dc193de4897970bfd25d7eea2bc5" translate="yes" xml:space="preserve">
          <source>Because Cypress changes its own host URL to match that of your applications, it requires that your application remain on the same superdomain for the entirety of a single test.</source>
          <target state="translated">因为Cypress会改变自己的主机URL以匹配您的应用程序,所以要求您的应用程序在整个单次测试中都保持在同一个超级域上。</target>
        </trans-unit>
        <trans-unit id="54cebe17e467d24c1c9275721f3a55543469f765" translate="yes" xml:space="preserve">
          <source>Because Cypress commands are already promise-like, you don&amp;rsquo;t need to wrap them or return your own promise.</source>
          <target state="translated">由于赛普拉斯命令已经像承诺一样，因此您无需包装它们或返回自己的承诺。</target>
        </trans-unit>
        <trans-unit id="cac4a5144bb63e3a4a04f31f181b5738580f0904" translate="yes" xml:space="preserve">
          <source>Because Cypress enforces commands to run &lt;em&gt;only&lt;/em&gt; serially, you do not need to be concerned with this in Cypress. We enqueue all commands onto a &lt;em&gt;global&lt;/em&gt; singleton. Because there is only ever a single command queue instance, it&amp;rsquo;s impossible for commands to ever be &lt;em&gt;&amp;lsquo;lost&amp;rsquo;&lt;/em&gt;.</source>
          <target state="translated">由于赛普拉斯强制命令&lt;em&gt;只能&lt;/em&gt;串行运行，因此您无需在赛普拉斯中对此加以关注。我们将所有命令排队到&lt;em&gt;全局&lt;/em&gt;单例中。因为只有一个命令队列实例，所以不可能&lt;em&gt;&amp;ldquo;丢失&amp;rdquo;&lt;/em&gt;命令。</target>
        </trans-unit>
        <trans-unit id="9908394f6391404c449f0d87c606dee754d62715" translate="yes" xml:space="preserve">
          <source>Because Cypress is &lt;a href=&quot;../getting-started/installing-cypress&quot;&gt;installed locally&lt;/a&gt; on your machine, it can additionally tap into the operating system for automation tasks. This makes performing tasks such as &lt;a href=&quot;../guides/screenshots-and-videos&quot;&gt;taking screenshots, recording videos&lt;/a&gt;, general &lt;a href=&quot;../../api/commands/exec&quot;&gt;file system operations&lt;/a&gt; and &lt;a href=&quot;../../api/commands/request&quot;&gt;network operations&lt;/a&gt; possible.</source>
          <target state="translated">由于赛普拉斯是&lt;a href=&quot;../getting-started/installing-cypress&quot;&gt;本地安装&lt;/a&gt;在您的计算机上的，因此它可以另外接入操作系统来执行自动化任务。这样就可以执行诸如&lt;a href=&quot;../guides/screenshots-and-videos&quot;&gt;截屏，录制视频&lt;/a&gt;，常规&lt;a href=&quot;../../api/commands/exec&quot;&gt;文件系统操作&lt;/a&gt;和&lt;a href=&quot;../../api/commands/request&quot;&gt;网络操作之类&lt;/a&gt;的任务。</target>
        </trans-unit>
        <trans-unit id="3ad9fdfa85e7206cbf321f0da7721030e5f18f07" translate="yes" xml:space="preserve">
          <source>Because Cypress is built on top of Mocha, that means any reporter built for Mocha can be used with Cypress. Here is a list of built in Mocha reporters.</source>
          <target state="translated">因为Cypress是建立在Mocha之上的,这意味着任何为Mocha构建的记者都可以在Cypress中使用。下面是一个内置的Mocha报告器列表。</target>
        </trans-unit>
        <trans-unit id="bf5d605efcebac35cd8646f7b546edab2faad55d" translate="yes" xml:space="preserve">
          <source>Because Cypress isn&amp;rsquo;t Selenium, we can actually take a huge shortcut here and skip needing to use our UI by using &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">由于赛普拉斯不是Selenium，因此我们实际上可以在这里采取一个巨大的捷径，而无需使用&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt;来使用我们的UI 。</target>
        </trans-unit>
        <trans-unit id="e16326511907fd640816b8a9f78bb09a57017e9e" translate="yes" xml:space="preserve">
          <source>Because Cypress operates within your application, that means it has native access to every single object. Whether it is the &lt;code&gt;window&lt;/code&gt;, the &lt;code&gt;document&lt;/code&gt;, a DOM element, your application instance, a function, a timer, a service worker, or anything else - you have access to it in your Cypress tests. There is no object serialization, there is no over-the-wire protocol - you have access to everything. Your test code can access all the same objects that your application code can.</source>
          <target state="translated">由于赛普拉斯在您的应用程序内运行，这意味着它可以对每个对象进行本地访问。无论是 &lt;code&gt;window&lt;/code&gt; ， &lt;code&gt;document&lt;/code&gt; ，DOM元素，应用程序实例，函数，计时器，服务工作者还是其他任何东西，您都可以在赛普拉斯测试中访问它。没有对象序列化，没有在线协议-您可以访问所有内容。测试代码可以访问应用程序代码可以访问的所有相同对象。</target>
        </trans-unit>
        <trans-unit id="88f0173a5a7497dc42244f07e7dbe64099bc7a31" translate="yes" xml:space="preserve">
          <source>Because Cypress runs in the browser, it will never have multi-tabs support. We do have access to the browser automation APIs to actually switch tabs, but there is no reason for us to ever expose them.</source>
          <target state="translated">因为Cypress在浏览器中运行,所以它永远不会有多标签支持。我们确实可以使用浏览器自动化API来实际切换标签,但我们没有理由公开它们。</target>
        </trans-unit>
        <trans-unit id="7a1db8ecc46b9bbe286730e58f7a688fa77d4839" translate="yes" xml:space="preserve">
          <source>Because Cypress works from within the browser, Cypress must be able to directly communicate with your remote application at all times. Unfortunately, browsers naturally try to prevent Cypress from doing this.</source>
          <target state="translated">由于Cypress在浏览器中工作,因此Cypress必须始终能够与您的远程应用程序直接通信。不幸的是,浏览器自然会试图阻止Cypress这样做。</target>
        </trans-unit>
        <trans-unit id="eb15937eead80d60bd28e93c2bfbde8c688f4b2d" translate="yes" xml:space="preserve">
          <source>Because Electron is the default browser - it is typically run in CI. If you are seeing failures in CI, to easily debug them you may want to run locally with the &lt;code&gt;--headed&lt;/code&gt; option.</source>
          <target state="translated">因为Electron是默认浏览器-它通常在CI中运行。如果您看到CI中的故障，为了方便地调试它们，您可能希望使用 &lt;code&gt;--headed&lt;/code&gt; 选项在本地运行。</target>
        </trans-unit>
        <trans-unit id="04bb899695d2571e339f86ca53ae4ab1569b3b0b" translate="yes" xml:space="preserve">
          <source>Because cy commands are asynchronous and are queued to be run later, it doesn&amp;rsquo;t make sense to return anything else.</source>
          <target state="translated">因为cy命令是异步的，并且排队等待稍后运行，所以返回任何其他命令都没有意义。</target>
        </trans-unit>
        <trans-unit id="9808d1b5e3eb0490eb53496cabbd8b2454b15db1" translate="yes" xml:space="preserve">
          <source>Because each operating system requires a specific build of Cypress - a new CLI tool has been created which abstracts away these differences and orchestrates the Desktop App regardless of which OS you are running.</source>
          <target state="translated">由于每个操作系统都需要特定的Cypress构建--我们创建了一个新的CLI工具,它可以消除这些差异,并协调桌面应用程序,无论你运行的是哪个操作系统。</target>
        </trans-unit>
        <trans-unit id="4c7383f109ba92a106fb9989f7c969aa51db5fed" translate="yes" xml:space="preserve">
          <source>Because error handling is a common idiom in most programming languages, and especially in Node, it seems reasonable to expect to do that in Cypress.</source>
          <target state="translated">因为在大多数编程语言中,特别是在Node中,错误处理是一个常见的习惯用语,因此,期望在Cypress中这样做似乎是合理的。</target>
        </trans-unit>
        <trans-unit id="6fb3d7f7f369bc1be251af676eb3eed95dfb4f0c" translate="yes" xml:space="preserve">
          <source>Because nothing is synchronous in modern web applications, Cypress can&amp;rsquo;t query all the DOM elements with the class &lt;code&gt;todo-list&lt;/code&gt; and check if there are only two of them. There are many examples of why this would not work well.</source>
          <target state="translated">因为在现代Web应用程序中没有什么是同步的，所以Cypress不能使用 &lt;code&gt;todo-list&lt;/code&gt; 类查询所有DOM元素并检查是否只有两个。有很多例子说明为什么这种方法不能很好地工作。</target>
        </trans-unit>
        <trans-unit id="a31d633c44229bc468f9470ced3ca874fbd119f8" translate="yes" xml:space="preserve">
          <source>Because of the additional complexities of how Cypress considers an element &lt;code&gt;visible&lt;/code&gt;, we now have added the &lt;strong&gt;exact&lt;/strong&gt; reason why an element is not visible when throwing an error. This means you&amp;rsquo;ll see errors detailing whether an element or its parents have &lt;code&gt;display: none&lt;/code&gt;, &lt;code&gt;visibility: hidden&lt;/code&gt;, or whether an element is considered hidden because its effective &lt;code&gt;width&lt;/code&gt; or &lt;code&gt;height&lt;/code&gt; is zero. Whatever the reason, Cypress will indicate why your element is considered hidden.</source>
          <target state="translated">由于赛普拉斯认为元素 &lt;code&gt;visible&lt;/code&gt; 的方式更加复杂，我们现在添加了引发错误时元素不可见的&lt;strong&gt;确切&lt;/strong&gt;原因。这意味着您将看到错误，详细说明一个元素或其父元素是否 &lt;code&gt;display: none&lt;/code&gt; ， &lt;code&gt;visibility: hidden&lt;/code&gt; ，或者某个元素是否被视为隐藏元素，因为其有效 &lt;code&gt;width&lt;/code&gt; 或 &lt;code&gt;height&lt;/code&gt; 为零。无论是什么原因，赛普拉斯都会指出为什么您的元素被隐藏。</target>
        </trans-unit>
        <trans-unit id="700e8123d914042be5c7104b43228a254b67a4e7" translate="yes" xml:space="preserve">
          <source>Because of the way Cypress is designed, if you are testing an HTTPS site, Cypress will error anytime you attempt to navigate back to an HTTP site. This behavior helps highlight a &lt;em&gt;pretty serious security problem&lt;/em&gt; with your application.</source>
          <target state="translated">由于赛普拉斯的设计方式，如果您要测试HTTPS站点，则当您尝试导航回HTTP站点时，赛普拉斯将出错。此行为有助于突出显示应用程序中&lt;em&gt;非常严重的安全问题&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="0aa1d23ad3b33ffa5084b7df42bc9e3bd4b1aa95" translate="yes" xml:space="preserve">
          <source>Because of this you cannot &lt;em&gt;synchronously&lt;/em&gt; access anything you have aliased. You must use other asynchronous commands such as &lt;a href=&quot;then&quot;&gt;&lt;code&gt;.then()&lt;/code&gt;&lt;/a&gt; to access what you&amp;rsquo;ve aliased.</source>
          <target state="translated">因此，您无法&lt;em&gt;同步&lt;/em&gt;访问别名的任何内容。您必须使用其他异步命令，例如&lt;a href=&quot;then&quot;&gt; &lt;code&gt;.then()&lt;/code&gt; &lt;/a&gt;来访问已别名的内容。</target>
        </trans-unit>
        <trans-unit id="41789a3ea8e4e537514bb7d8b06166f5e7e059a1" translate="yes" xml:space="preserve">
          <source>Because of this, this global context and the version of Node is controlled by Cypress.</source>
          <target state="translated">正因为如此,这个全局上下文和Node的版本是由Cypress控制的。</target>
        </trans-unit>
        <trans-unit id="3053394fa99847588c627c293d538a1dc29d9e2b" translate="yes" xml:space="preserve">
          <source>Because the second &lt;code&gt;.contains()&lt;/code&gt; is chained off of a command that yielded the &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;, Cypress will look inside of the &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; for the new content.</source>
          <target state="translated">因为第二个 &lt;code&gt;.contains()&lt;/code&gt; 是链接到产生 &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; 的命令的，所以赛普拉斯将在 &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; 的内部查找新内容。</target>
        </trans-unit>
        <trans-unit id="e4dfb03af122ad00953225c9b97f911485c7d371" translate="yes" xml:space="preserve">
          <source>Because the second assertion &lt;code&gt;expect($li.get(0).textContent, 'first item').to.equal('todo a')&lt;/code&gt; fails, the third assertion is never reached. The command fails after timing out, and the Command Log correctly shows that the first encountered assertion &lt;code&gt;should('have.length', 2)&lt;/code&gt; passed, but the second assertion and the command itself failed.</source>
          <target state="translated">因为第二个断言 &lt;code&gt;expect($li.get(0).textContent, 'first item').to.equal('todo a')&lt;/code&gt; 失败，所以永远不会达到第三个断言。超时后命令失败，并且命令日志正确显示 &lt;code&gt;should('have.length', 2)&lt;/code&gt; 遇到第一个断言（'have.length'，2），但是第二个断言和命令本身失败。</target>
        </trans-unit>
        <trans-unit id="75833321ea4cffc6175de7a6a6ab8ebe1afd68d3" translate="yes" xml:space="preserve">
          <source>Because there are multiple &lt;code&gt;inputs&lt;/code&gt; and one &lt;code&gt;submit&lt;/code&gt; button, Cypress submits the form (and fires submit events) as well as a synthetic &lt;code&gt;click&lt;/code&gt; event to the &lt;code&gt;button&lt;/code&gt;.</source>
          <target state="translated">因为有多个 &lt;code&gt;inputs&lt;/code&gt; 和一个 &lt;code&gt;submit&lt;/code&gt; 按钮，丝柏提交表单（和火灾事件提交），以及合成的 &lt;code&gt;click&lt;/code&gt; 事件的 &lt;code&gt;button&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c2dcfe8ddba48026ec7700e7bbd13ae13aa2236d" translate="yes" xml:space="preserve">
          <source>Because there is no guarantee that code running in an &lt;code&gt;after&lt;/code&gt; will always run.</source>
          <target state="translated">因为不能保证在 &lt;code&gt;after&lt;/code&gt; 之后运行的代码将始终运行。</target>
        </trans-unit>
        <trans-unit id="ef81b9522436686c096aeef87e822f78390835fc" translate="yes" xml:space="preserve">
          <source>Because we are using &lt;code&gt;chai&lt;/code&gt;, that means you can extend it however you&amp;rsquo;d like. Cypress will &amp;ldquo;just work&amp;rdquo; with new assertions added to &lt;code&gt;chai&lt;/code&gt;. You can:</source>
          <target state="translated">因为我们使用的是 &lt;code&gt;chai&lt;/code&gt; ，这意味着您可以随意扩展它。赛普拉斯将&amp;ldquo;工作&amp;rdquo;，并在 &lt;code&gt;chai&lt;/code&gt; 中添加新的断言。您可以：</target>
        </trans-unit>
        <trans-unit id="1999436d6fdc7f9800045b8b7e99f3d2259db589" translate="yes" xml:space="preserve">
          <source>Because we previously tested the login system end-to-end without using any shortcuts, we already have 100% confidence it&amp;rsquo;s working correctly.</source>
          <target state="translated">因为我们以前没有使用任何快捷方式就端对端地测试了登录系统，所以我们已经100％确信它可以正常工作。</target>
        </trans-unit>
        <trans-unit id="609fa56fecd5c57777bea8263ad7e03d06fc0145" translate="yes" xml:space="preserve">
          <source>Because we&amp;rsquo;re now processing the spec files prior to handing them off to the browser, this means we will display problems like syntax errors when something in the processing goes wrong. Additionally, we print these out during &lt;code&gt;cypress run&lt;/code&gt;, so you&amp;rsquo;re not stuck wondering what went wrong.</source>
          <target state="translated">因为我们现在正在处理规格文件，然后再将其交给浏览器，所以这意味着当处理出现问题时，我们将显示语法错误之类的问题。另外，我们在 &lt;code&gt;cypress run&lt;/code&gt; 期间将它们打印出来，因此您不必担心发生了什么问题。</target>
        </trans-unit>
        <trans-unit id="27bf7ae17989e109ad546656dc6f1d6a71355714" translate="yes" xml:space="preserve">
          <source>Because we&amp;rsquo;ve used the &lt;code&gt;@&lt;/code&gt; character in &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt;, instead of querying the DOM for elements, &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; looks for an existing alias called &lt;code&gt;rows&lt;/code&gt; and returns the reference (if it finds it).</source>
          <target state="translated">由于我们在&lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; 中&lt;/a&gt;使用了 &lt;code&gt;@&lt;/code&gt; 字符，而不是在DOM中查询元素，因此&lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; 会&lt;/a&gt;查找一个称为 &lt;code&gt;rows&lt;/code&gt; 的现有别名，并返回引用（如果找到）。</target>
        </trans-unit>
        <trans-unit id="940348446aa9c0b2deb9fd7ac2acfbba246c5f50" translate="yes" xml:space="preserve">
          <source>Before Cypress launches a browser, it gives you the ability to modify the arguments used to launch it.</source>
          <target state="translated">在赛普拉斯启动浏览器之前,它让你能够修改用于启动浏览器的参数。</target>
        </trans-unit>
        <trans-unit id="7463604e937cdc2065dab9a3e8a5abd4405d5d05" translate="yes" xml:space="preserve">
          <source>Before interacting with an element, we will &lt;em&gt;always&lt;/em&gt; scroll it into view (including any of its parent containers). Even if the element was visible without scrolling, we perform the scrolling algorithm in order to reproduce the same behavior every time the command is run.</source>
          <target state="translated">在与元素进行交互之前，我们将&lt;em&gt;始终&lt;/em&gt;将其滚动到视图（包括其任何父容器）中。即使该元素在不滚动的情况下是可见的，我们也会执行滚动算法，以便在每次运行命令时重现相同的行为。</target>
        </trans-unit>
        <trans-unit id="8145776178a59d75ab95d80e533642f714fb34ac" translate="yes" xml:space="preserve">
          <source>Before sending the HTTP request, we automatically attach cookies that would have otherwise been attached had the request come from the browser. Additionally, if a response has a &lt;code&gt;Set-Cookie&lt;/code&gt; header, these are automatically set back on the browser cookies.</source>
          <target state="translated">在发送HTTP请求之前，如果请求来自浏览器，我们会自动附加本来会附加的Cookie。此外，如果响应具有 &lt;code&gt;Set-Cookie&lt;/code&gt; 标头，则会在浏览器Cookie上自动设置这些标头。</target>
        </trans-unit>
        <trans-unit id="e2c4890fd60c462980127f61a99b5082f346fe71" translate="yes" xml:space="preserve">
          <source>Before we add another command - let&amp;rsquo;s get this test back to passing. Replace &lt;code&gt;hype&lt;/code&gt; with &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="translated">在添加另一个命令之前-让我们将此测试恢复为通过状态。用 &lt;code&gt;type&lt;/code&gt; 代替 &lt;code&gt;hype&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b2ca1ccb9103ce68e7102b9d5a7ff5e2c5bd8113" translate="yes" xml:space="preserve">
          <source>Before writing &lt;code&gt;after()&lt;/code&gt; or &lt;code&gt;afterEach()&lt;/code&gt; hooks, please see our &lt;a href=&quot;../references/best-practices#Using-after-or-afterEach-hooks&quot;&gt;thoughts on the anti-pattern of cleaning up state with &lt;code&gt;after()&lt;/code&gt; or &lt;code&gt;afterEach()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在编写 &lt;code&gt;after()&lt;/code&gt; 或 &lt;code&gt;afterEach()&lt;/code&gt; 挂钩之前，请先了解我们&lt;a href=&quot;../references/best-practices#Using-after-or-afterEach-hooks&quot;&gt;对使用 &lt;code&gt;after()&lt;/code&gt; 或 &lt;code&gt;afterEach()&lt;/code&gt; &lt;/a&gt;清理状态的反模式的看法。</target>
        </trans-unit>
        <trans-unit id="eb687ba2a96af94981a76e75687a7387016e9451" translate="yes" xml:space="preserve">
          <source>Before you can enable GitHub integration for your Cypress projects, you must first install the Cypress GitHub App. You can start the GitHub App installation process via your organization&amp;rsquo;s settings page or a project&amp;rsquo;s settings page in the &lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;Cypress Dashboard&lt;/a&gt;.</source>
          <target state="translated">在为赛普拉斯项目启用GitHub集成之前，必须首先安装赛普拉斯GitHub App。您可以通过组织的设置页面或&lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;赛普拉斯仪表板中&lt;/a&gt;的项目设置页面开始GitHub App安装过程。</target>
        </trans-unit>
        <trans-unit id="6120e824b3e65ec383f6568264f7e464ec8abea2" translate="yes" xml:space="preserve">
          <source>Before, you&amp;rsquo;d be forced to write custom code to protect against any and all of these issues: a nasty mashup of arbitrary waits, conditional retries, and null checks littering your tests. Not in Cypress! With built-in retrying and &lt;a href=&quot;../references/configuration#Timeouts&quot;&gt;customizable timeouts&lt;/a&gt;, Cypress sidesteps all of these flaky issues.</source>
          <target state="translated">以前，您将不得不编写自定义代码来防止所有这些问题：任意等待的讨厌的混搭，有条件的重试和空检查，这些乱七八糟的测试乱七八糟。不在赛普拉斯！借助内置的重试和&lt;a href=&quot;../references/configuration#Timeouts&quot;&gt;可自定义的超时功能&lt;/a&gt;，赛普拉斯避开了所有这些棘手的问题。</target>
        </trans-unit>
        <trans-unit id="b26e6825ca31d9e1ed045053a2a514f75cb9e6e1" translate="yes" xml:space="preserve">
          <source>Began implementation in preparation for &lt;strong&gt;cross browser testing&lt;/strong&gt; coming sometime relatively soon.</source>
          <target state="translated">开始实施以为&lt;strong&gt;跨浏览器测试&lt;/strong&gt;做准备相对较快的时间。</target>
        </trans-unit>
        <trans-unit id="70cb647a88bd7c9c17d225eecdaf0f898261eb60" translate="yes" xml:space="preserve">
          <source>Behavior</source>
          <target state="translated">Behavior</target>
        </trans-unit>
        <trans-unit id="ab83472d39d7bcea2a8f0e57eec1111d8f4ee993" translate="yes" xml:space="preserve">
          <source>Behind Cypress is a Node server process. Cypress and the Node process constantly communicate, synchronize, and perform tasks on behalf of each other. Having access to both parts (front and back) gives us the ability to respond to your application&amp;rsquo;s events in real time, while at the same time work outside of the browser for tasks that require a higher privilege.</source>
          <target state="translated">赛普拉斯的背后是一个节点服务器进程。赛普拉斯和Node进程之间会不断相互代表彼此进行通信，同步和执行任务。可以访问两个部分（正面和背面），使我们能够实时响应您的应用程序事件，同时可以在浏览器外部处理需要更高特权的任务。</target>
        </trans-unit>
        <trans-unit id="98642ec6449adeb6d25212e8c2be844f7ccce8fd" translate="yes" xml:space="preserve">
          <source>Below we freeze the operating system&amp;rsquo;s time to &lt;code&gt;Jan 1, 2018&lt;/code&gt; using &lt;a href=&quot;../../api/commands/clock&quot;&gt;&lt;code&gt;cy.clock()&lt;/code&gt;&lt;/a&gt; to ensure all images displaying dates and times match.</source>
          <target state="translated">下面我们使用&lt;a href=&quot;../../api/commands/clock&quot;&gt; &lt;code&gt;cy.clock()&lt;/code&gt; &lt;/a&gt;将操作系统的时间冻结到 &lt;code&gt;Jan 1, 2018&lt;/code&gt; 以确保所有显示日期和时间的图像都匹配。</target>
        </trans-unit>
        <trans-unit id="f633c4c103ceb7313c15debec444600db876412f" translate="yes" xml:space="preserve">
          <source>Below we invoke jQuery&amp;rsquo;s &lt;code&gt;val()&lt;/code&gt; method to set the value, then trigger the &lt;code&gt;change&lt;/code&gt; event.</source>
          <target state="translated">下面我们调用jQuery的 &lt;code&gt;val()&lt;/code&gt; 方法来设置值，然后触发 &lt;code&gt;change&lt;/code&gt; 事件。</target>
        </trans-unit>
        <trans-unit id="8acbdf2636085db1a07c0c5637168c5d2127690a" translate="yes" xml:space="preserve">
          <source>Below we simulate the server returning &lt;code&gt;503&lt;/code&gt; with a stubbed empty JSON response body.</source>
          <target state="translated">在下面，我们模拟服务器返回 &lt;code&gt;503&lt;/code&gt; ,并带有一个空的JSON响应主体。</target>
        </trans-unit>
        <trans-unit id="b6e04ae5a5319c3c5e46c06199bd727afb283894" translate="yes" xml:space="preserve">
          <source>Below we stub network calls using &lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt; to return the same response data for each XHR request. This ensures that the data displayed in our application images does not change.</source>
          <target state="translated">在下面，我们使用&lt;a href=&quot;../../api/commands/route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt;对网络调用进行存根，以针对每个XHR请求返回相同的响应数据。这确保了在我们的应用程序映像中显示的数据不会更改。</target>
        </trans-unit>
        <trans-unit id="74e6060bf4f15a496a9a7cfb26e220af3208db59" translate="yes" xml:space="preserve">
          <source>Besides Commands being interactive, they also output additional debugging information to your console.</source>
          <target state="translated">除了Commands是交互式的,它们还可以向控制台输出额外的调试信息。</target>
        </trans-unit>
        <trans-unit id="36de90e22d47f94d755a4b1bb70aaddc1bb47593" translate="yes" xml:space="preserve">
          <source>Best Practices</source>
          <target state="translated">最佳做法</target>
        </trans-unit>
        <trans-unit id="99b99f280d5b4016435d9ffcb84d886c839437e1" translate="yes" xml:space="preserve">
          <source>Best Practices: Visiting external sites</source>
          <target state="translated">最佳实践。访问外部网站</target>
        </trans-unit>
        <trans-unit id="eb8de9ce8757ee3c542141ac80ff3b33dc04edff" translate="yes" xml:space="preserve">
          <source>Best practices</source>
          <target state="translated">最佳做法</target>
        </trans-unit>
        <trans-unit id="8d2a4ae1970ea36dd845bf5e6a4a2f9c632a338f" translate="yes" xml:space="preserve">
          <source>Best. Insulated from all changes.</source>
          <target state="translated">最好的。隔绝一切变化。</target>
        </trans-unit>
        <trans-unit id="4f292d925ec1c6710496ad9cc9cee7f2546e5f77" translate="yes" xml:space="preserve">
          <source>Better data reporting when recording builds in CI.</source>
          <target state="translated">在CI中记录构建时,更好的数据报告。</target>
        </trans-unit>
        <trans-unit id="142e34d873ecd8cbe3c9c57ee587ddf5d9d47b0a" translate="yes" xml:space="preserve">
          <source>Better error handling + error messages when trying to read / write from &lt;code&gt;cypress.json&lt;/code&gt;.</source>
          <target state="translated">尝试从 &lt;code&gt;cypress.json&lt;/code&gt; 读取/写入时，更好的错误处理+错误消息。</target>
        </trans-unit>
        <trans-unit id="88098040b8b98d3e94c07b5439bf9889af97702d" translate="yes" xml:space="preserve">
          <source>Better error handling of rejected promises.</source>
          <target state="translated">更好地处理拒绝承诺的错误。</target>
        </trans-unit>
        <trans-unit id="3d19862a9a1f3e1981935483db4b58ca55c172cb" translate="yes" xml:space="preserve">
          <source>Better error handling of unauthorized users attempting to login to Cypress with improved &lt;a href=&quot;../getting-started/installing-cypress&quot;&gt;Login documentation&lt;/a&gt;.</source>
          <target state="translated">使用改进的&lt;a href=&quot;../getting-started/installing-cypress&quot;&gt;登录文档，可以&lt;/a&gt;更好地处理试图登录赛普拉斯的未授权用户的错误。</target>
        </trans-unit>
        <trans-unit id="79bf038e6b4cf05cad826370fe7601f2300f4db4" translate="yes" xml:space="preserve">
          <source>Better error handling when running commands outside of a test.</source>
          <target state="translated">在测试之外运行命令时,更好的错误处理。</target>
        </trans-unit>
        <trans-unit id="b9bf9b6b45d6ab172f17b41d9df0494b9c8335f6" translate="yes" xml:space="preserve">
          <source>Better error messages when a command times out waiting for a promise to resolve. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/108&quot;&gt;#108&lt;/a&gt;.</source>
          <target state="translated">当命令超时等待承诺解决时，会出现更好的错误消息。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/108&quot;&gt;＃108&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d250c7302b80aa74cb78e84ed6d94702cd5ef3bd" translate="yes" xml:space="preserve">
          <source>Better error tracing.</source>
          <target state="translated">更好地进行错误追踪。</target>
        </trans-unit>
        <trans-unit id="8ac19fd2409a73b09ae219e78c6381cb16513aa8" translate="yes" xml:space="preserve">
          <source>Better. But still coupled to styling or JS event listeners.</source>
          <target state="translated">更好。但还是要加上样式或JS事件监听器。</target>
        </trans-unit>
        <trans-unit id="b6e771325dcfb10791d67095ee5d713946b4523b" translate="yes" xml:space="preserve">
          <source>Beyond just integrating these tools together we have also extended and improved collaboration between these tools.</source>
          <target state="translated">除了将这些工具整合在一起之外,我们还扩展和改进了这些工具之间的协作。</target>
        </trans-unit>
        <trans-unit id="0ad9deba257241e631ca63d49de0fcbb86b9856a" translate="yes" xml:space="preserve">
          <source>Beyond parallelization, you now have the ability to group multiple runs with each other so that they show up together (grouped) in the Dashboard. This enables you to test different applications, groups of specs, or different environments (like development, staging, production) and see all of the results together. We know how important cross browser testing is to everyone, so we built this to lead directly into aggregating the results of multiple browsers into a single run.</source>
          <target state="translated">除了并行化之外,您现在能够将多个运行相互分组,以便它们在仪表板中一起显示(分组)。这使您可以测试不同的应用程序、规格组或不同的环境(如开发、暂存、生产),并一起查看所有结果。我们知道跨浏览器测试对大家有多重要,所以我们建立了这个功能,直接导致将多个浏览器的结果汇总到一个运行中。</target>
        </trans-unit>
        <trans-unit id="b9e4bf54406b80887d7d8811e9b699d4a4727c15" translate="yes" xml:space="preserve">
          <source>Big difference! In addition to reading much cleaner, Cypress does more than this, because &lt;strong&gt;Promises themselves have no concepts of retry-ability&lt;/strong&gt;.</source>
          <target state="translated">巨大差距！赛普拉斯除了阅读要干净得多之外，还要做更多的事情，因为&lt;strong&gt;Promises本身没有可重试性的概念&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="702a89732e86b85bfd2d2e0e24cb68f0493748ab" translate="yes" xml:space="preserve">
          <source>Billing &amp;amp; Usage</source>
          <target state="translated">帐单与使用</target>
        </trans-unit>
        <trans-unit id="0bb7fd224f01f10abaab80f5afc0f1961078d2cf" translate="yes" xml:space="preserve">
          <source>Binary cache</source>
          <target state="translated">二进制缓存</target>
        </trans-unit>
        <trans-unit id="0fe0a4865433ec6d267fc48730d09ef537eeb728" translate="yes" xml:space="preserve">
          <source>Binding to Events</source>
          <target state="translated">绑定到事件</target>
        </trans-unit>
        <trans-unit id="5c9e4f2957fe563e070ea774a5aa2421a76dc7c3" translate="yes" xml:space="preserve">
          <source>BitBucket</source>
          <target state="translated">BitBucket</target>
        </trans-unit>
        <trans-unit id="8994f5d6bf3dcbeb7a9828dd1a878dd6d3343db7" translate="yes" xml:space="preserve">
          <source>Blackout elements before screenshot</source>
          <target state="translated">截图前的遮挡元素</target>
        </trans-unit>
        <trans-unit id="c24315eb20cc1f5a565ec08f29abab31c0925f1a" translate="yes" xml:space="preserve">
          <source>Blob</source>
          <target state="translated">Blob</target>
        </trans-unit>
        <trans-unit id="0b9d2b2362bc33581ba11fddcb0cf0590ebd3a7a" translate="yes" xml:space="preserve">
          <source>Blog</source>
          <target state="translated">Blog</target>
        </trans-unit>
        <trans-unit id="174240b862077078fc648872149eb0be3661607e" translate="yes" xml:space="preserve">
          <source>Blog: Incredibly Powerful cy.task()</source>
          <target state="translated">博客。无比强大的cy.task()</target>
        </trans-unit>
        <trans-unit id="b2201ad030cff5849c6875bd2afc155b773e5160" translate="yes" xml:space="preserve">
          <source>Blog: Record Test Artifacts from any Docker CI</source>
          <target state="translated">博客。从任何Docker CI中记录测试工件。</target>
        </trans-unit>
        <trans-unit id="4135c56801dc3257f80161d6e8c6d420ef1f3d7a" translate="yes" xml:space="preserve">
          <source>Blog: Rolling for a Test</source>
          <target state="translated">博客。滾動測試</target>
        </trans-unit>
        <trans-unit id="b0c6d757222bb9624ef49e0967067c9f82e5f881" translate="yes" xml:space="preserve">
          <source>Blog: Run Your End-to-end Tests 10 Times Faster with Automatic Test Parallelization</source>
          <target state="translated">博客。使用自动测试并行化将端到端测试的运行速度提高10倍。</target>
        </trans-unit>
        <trans-unit id="9f505a889dce33700e1f2edea046f02a4f0a855c" translate="yes" xml:space="preserve">
          <source>Blog: Run and group tests the way you want to</source>
          <target state="translated">博客。以你想要的方式运行和分组测试</target>
        </trans-unit>
        <trans-unit id="b9161465938ee98d394ff8b689d3bc7de0e4f8ba" translate="yes" xml:space="preserve">
          <source>Blog: Setting up Bitbucket Pipelines with proper caching of npm and Cypress</source>
          <target state="translated">博客。使用npm和Cypress的适当缓存设置Bitbucket管道</target>
        </trans-unit>
        <trans-unit id="babf996afbd046b70260fb5398a25309198cc399" translate="yes" xml:space="preserve">
          <source>Blur Events</source>
          <target state="translated">模糊事件</target>
        </trans-unit>
        <trans-unit id="e9984b092f9c8e89779c7b75d6260b0b8acd26fc" translate="yes" xml:space="preserve">
          <source>Blur a focused element.</source>
          <target state="translated">模糊一个重点元素。</target>
        </trans-unit>
        <trans-unit id="0f8878f148aa77b4b50914c1cfd18aff3921a34b" translate="yes" xml:space="preserve">
          <source>Blur is not an action command</source>
          <target state="translated">模糊不是一个动作指令</target>
        </trans-unit>
        <trans-unit id="954bc4f020d1d0055823d32707768e69309ae672" translate="yes" xml:space="preserve">
          <source>Blur the comment input</source>
          <target state="translated">模糊评论输入</target>
        </trans-unit>
        <trans-unit id="784f69ed60f75caf4eef500e1561348feca99a8f" translate="yes" xml:space="preserve">
          <source>Blur the element with focus</source>
          <target state="translated">用焦点模糊元素</target>
        </trans-unit>
        <trans-unit id="6054d990e79250b6ef9e595ce2d00d31e2d6e4e7" translate="yes" xml:space="preserve">
          <source>Blur the first input</source>
          <target state="translated">模糊第一个输入</target>
        </trans-unit>
        <trans-unit id="718a7e8a582e982e452dd5700addba4ffc1cf40d" translate="yes" xml:space="preserve">
          <source>Body</source>
          <target state="translated">Body</target>
        </trans-unit>
        <trans-unit id="e5b110fe0cef82164b46b3207a6d9f04f3fd6b72" translate="yes" xml:space="preserve">
          <source>Body to send along with the request</source>
          <target state="translated">与请求一起发送的机构</target>
        </trans-unit>
        <trans-unit id="f6f8c1b5a3695fb6c20ada2216179d5622283dd9" translate="yes" xml:space="preserve">
          <source>Boot your server</source>
          <target state="translated">启动你的服务器</target>
        </trans-unit>
        <trans-unit id="62c42529943c584f6abe31e6bf660ccb10070146" translate="yes" xml:space="preserve">
          <source>Bootstraping your App</source>
          <target state="translated">引导你的应用程序</target>
        </trans-unit>
        <trans-unit id="bca5350e1121028a5442fac4fa3c4898e5d1fcc1" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; will return immediately, having enqueued their work to be done later, and &lt;code&gt;debugger&lt;/code&gt; will be executed before any of the commands have actually run.</source>
          <target state="translated">无论&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt;将立即返回，已经排队的工作稍后完成， &lt;code&gt;debugger&lt;/code&gt; 的任何命令实际上已经运行之前将被执行。</target>
        </trans-unit>
        <trans-unit id="86baed802abf9f372a6a033132f44f38a53d032c" translate="yes" xml:space="preserve">
          <source>Both options below are valid</source>
          <target state="translated">以下两个选项都是有效的</target>
        </trans-unit>
        <trans-unit id="6345ab1d255f896508f11217de1d30526abc5ab7" translate="yes" xml:space="preserve">
          <source>Both the global &lt;code&gt;Cypress&lt;/code&gt; and &lt;code&gt;cy&lt;/code&gt; objects are standard Node event emitters. That means you can use the following methods to bind and unbind from events.</source>
          <target state="translated">全局 &lt;code&gt;Cypress&lt;/code&gt; 和 &lt;code&gt;cy&lt;/code&gt; 对象都是标准的Node事件发射器。这意味着您可以使用以下方法来绑定事件和从事件中解除绑定。</target>
        </trans-unit>
        <trans-unit id="0e2e620e876821556694069c99cbe4f3d63fc0cd" translate="yes" xml:space="preserve">
          <source>Both types commands will first verify element actionability, but only the &amp;ldquo;true&amp;rdquo; action commands will implement all of the default actions of the browser, and additionally perform low level actions to fulfill what&amp;rsquo;s defined in the spec.</source>
          <target state="translated">两种类型的命令都将首先验证元素的可操作性，但是只有&amp;ldquo; true&amp;rdquo;操作命令会实现浏览器的所有默认操作，并另外执行低级操作来满足规范中的定义。</target>
        </trans-unit>
        <trans-unit id="5aa62362cf073a7eb5da0e098a23a3640fe9d21f" translate="yes" xml:space="preserve">
          <source>Branch: &lt;code&gt;COMMIT_INFO_BRANCH&lt;/code&gt;</source>
          <target state="translated">分支机构： &lt;code&gt;COMMIT_INFO_BRANCH&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="54a2cf5e634dbba0be2bf8a55f79252f5c790bdb" translate="yes" xml:space="preserve">
          <source>Browser</source>
          <target state="translated">Browser</target>
        </trans-unit>
        <trans-unit id="50ab9e031f64f1a7d0bf9ff86959133261113e83" translate="yes" xml:space="preserve">
          <source>Browser Environment</source>
          <target state="translated">浏览器环境</target>
        </trans-unit>
        <trans-unit id="4fa354b80725e62cb99b25187ca84c519c8c972d" translate="yes" xml:space="preserve">
          <source>Browser Errors</source>
          <target state="translated">浏览器错误</target>
        </trans-unit>
        <trans-unit id="55a0c48065323b882547c9316f0cf1c0f3c68727" translate="yes" xml:space="preserve">
          <source>Browser Icon</source>
          <target state="translated">浏览器图标</target>
        </trans-unit>
        <trans-unit id="74a670900aa568c88f1545374b10e13b3c3a13aa" translate="yes" xml:space="preserve">
          <source>Browser Launch API</source>
          <target state="translated">浏览器启动API</target>
        </trans-unit>
        <trans-unit id="2c250f1237b19401cbb7ff0e746b6d41d2398dbd" translate="yes" xml:space="preserve">
          <source>Browser Launching</source>
          <target state="translated">浏览器启动</target>
        </trans-unit>
        <trans-unit id="63fac1fb83ccf0b03f982fe1fa1a1b2cd86ed72c" translate="yes" xml:space="preserve">
          <source>Browser Name</source>
          <target state="translated">浏览器名称</target>
        </trans-unit>
        <trans-unit id="fc3ca79709f5ec0c38baed99467dffe420456989" translate="yes" xml:space="preserve">
          <source>Browser name</source>
          <target state="translated">浏览器名称</target>
        </trans-unit>
        <trans-unit id="c52b8a4904ac1112b997405a3d165bc7d48cc148" translate="yes" xml:space="preserve">
          <source>Browser sessions are spawned independently of your existing profiles and we&amp;rsquo;ve disabled things like password saving / prompting, JavaScript popup blocking, and other features which get in the way of testing. Read more &lt;a href=&quot;../guides/launching-browsers&quot;&gt;here&lt;/a&gt;</source>
          <target state="translated">浏览器会话的产生独立于您现有的配置文件，并且我们禁用了诸如密码保存/提示，JavaScript弹出窗口阻止之类的功能，以及妨碍测试的其他功能。&lt;a href=&quot;../guides/launching-browsers&quot;&gt;在这里&lt;/a&gt;阅读更多</target>
        </trans-unit>
        <trans-unit id="ed81754147c265a661af47b5f96c56bae653c0d7" translate="yes" xml:space="preserve">
          <source>Browserify</source>
          <target state="translated">Browserify</target>
        </trans-unit>
        <trans-unit id="03ae704db614eb84c9776f2339d20fcfaea7257d" translate="yes" xml:space="preserve">
          <source>Browserify Preprocessor</source>
          <target state="translated">浏览器化预处理程序</target>
        </trans-unit>
        <trans-unit id="6e92074d83472981588f0279868b23097eb04660" translate="yes" xml:space="preserve">
          <source>Browsers</source>
          <target state="translated">Browsers</target>
        </trans-unit>
        <trans-unit id="f5e27c5f2bed8a5f56b25a649f1f13ca58de151d" translate="yes" xml:space="preserve">
          <source>Browsers adhere to a strict &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy&quot;&gt;&lt;code&gt;same-origin policy&lt;/code&gt;&lt;/a&gt;. This means that browsers restrict access between &lt;code&gt;&amp;lt;iframes&amp;gt;&lt;/code&gt; when their origin policies do not match.</source>
          <target state="translated">浏览器遵守严格&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy&quot;&gt; &lt;code&gt;same-origin policy&lt;/code&gt; &lt;/a&gt;。这意味着浏览器在其源策略不匹配时限制 &lt;code&gt;&amp;lt;iframes&amp;gt;&lt;/code&gt; 之间的访问。</target>
        </trans-unit>
        <trans-unit id="34a6d2c8a6223597b42a63cf95aaff0c603f4829" translate="yes" xml:space="preserve">
          <source>Browsers are enormously complex pieces of software, and from time to time they will inconsistently crash &lt;em&gt;for no good reason&lt;/em&gt;. Crashes are just a part of running automated tests.</source>
          <target state="translated">浏览器是非常复杂的软件，有时会&lt;em&gt;无缘无故地&lt;/em&gt;崩溃。崩溃只是运行自动化测试的一部分。</target>
        </trans-unit>
        <trans-unit id="75b6d1e692e292794a0170983a519ebc3816a1ea" translate="yes" xml:space="preserve">
          <source>Browsers are spawned in a Cypress specific profile so that we can maintain a clean state apart of your regular browsing usage. You will notice that your extensions are no longer installed. This is on purpose. 3rd party extensions can often get in the way of Cypress and cause failures. However, developer specific extensions for Angular, Ember, and React do not cause any issues but you&amp;rsquo;ll want to reinstall them. You only have to install them once and they will persist.</source>
          <target state="translated">浏览器是在赛普拉斯特定的配置文件中生成的，因此，除了您的常规浏览用法外，我们还可以保持干净的状态。您会注意到不再安装扩展程序。这是故意的。第三方扩展通常会妨碍赛普拉斯并引起故障。但是，针对Angular，Ember和React的开发人员特定扩展不会引起任何问题，但您需要重新安装它们。您只需安装一次即可，它们将继续存在。</target>
        </trans-unit>
        <trans-unit id="190c1423acb337535b6c2e3cbe3e3ad8f535ee80" translate="yes" xml:space="preserve">
          <source>Browsers in the browser dropdown now have colored icons, which help visually distinguish the variants of Chrome.</source>
          <target state="translated">浏览器下拉菜单中的浏览器现在有了彩色图标,这有助于从视觉上区分Chrome的变种。</target>
        </trans-unit>
        <trans-unit id="3699d118633f19a1a990e7b4764264156987d7cc" translate="yes" xml:space="preserve">
          <source>Browsers refuse to display insecure content on a secure page. Because Cypress initially changed its URL to match &lt;code&gt;https://app.corp.com&lt;/code&gt; when the browser followed the &lt;code&gt;href&lt;/code&gt; to &lt;code&gt;http://app.corp.com/page2&lt;/code&gt;, the browser will refuse to display the contents.</source>
          <target state="translated">浏览器拒绝在安全页面上显示不安全的内容。因为当浏览器跟随 &lt;code&gt;href&lt;/code&gt; 到 &lt;code&gt;http://app.corp.com/page2&lt;/code&gt; 时，赛普拉斯最初将其URL更改为与 &lt;code&gt;https://app.corp.com&lt;/code&gt; 匹配，所以浏览器将拒绝显示其内容。</target>
        </trans-unit>
        <trans-unit id="f111a08ebe017bfa651b150c380291561a95f314" translate="yes" xml:space="preserve">
          <source>BuildKite</source>
          <target state="translated">BuildKite</target>
        </trans-unit>
        <trans-unit id="66abb97e1a71792d6eed7271b23e39c61fd25939" translate="yes" xml:space="preserve">
          <source>Built-in assertions</source>
          <target state="translated">内置断言</target>
        </trans-unit>
        <trans-unit id="15d9b4c1850cd2dffca0607f9583809bb00f5e69" translate="yes" xml:space="preserve">
          <source>Bumped Mocha to 2.2.1</source>
          <target state="translated">将Mocha升级为2.2.1。</target>
        </trans-unit>
        <trans-unit id="c56068c8da03fb72661803a6496b6dd28e53a6f6" translate="yes" xml:space="preserve">
          <source>Bumped deps that &lt;code&gt;npm audit&lt;/code&gt; was yelling about. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1701&quot;&gt;#1701&lt;/a&gt;.</source>
          <target state="translated">被撞的DEP是 &lt;code&gt;npm audit&lt;/code&gt; 是在喊什么。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1701&quot;&gt;＃1701&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4767c02ecd83dfbbd2a6830004fcb9af882ea4f5" translate="yes" xml:space="preserve">
          <source>Bumped the internal version of &lt;code&gt;mocha&lt;/code&gt; from &lt;code&gt;2.2.1&lt;/code&gt; to &lt;code&gt;2.4.5&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;mocha&lt;/code&gt; 的内部版本从 &lt;code&gt;2.2.1&lt;/code&gt; 更改为 &lt;code&gt;2.4.5&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="487ecca09545f8c03f30975fb5d129ec4578795a" translate="yes" xml:space="preserve">
          <source>Bumped the version in &lt;code&gt;junit&lt;/code&gt; reporter dep from &lt;code&gt;1.12.1&lt;/code&gt; to &lt;code&gt;1.17.0&lt;/code&gt; which adds a few new features. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2238&quot;&gt;#2238&lt;/a&gt;.</source>
          <target state="translated">将 &lt;code&gt;junit&lt;/code&gt; reporter dep中的版本从 &lt;code&gt;1.12.1&lt;/code&gt; 升级到 &lt;code&gt;1.17.0&lt;/code&gt; ，从而增加了一些新功能。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2238&quot;&gt;＃2238&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="99f9a157d4c7ff23b6d56adeaf225b6993e3d26f" translate="yes" xml:space="preserve">
          <source>Bundled Tools</source>
          <target state="translated">捆绑工具</target>
        </trans-unit>
        <trans-unit id="82a2ed0fb0a489635ad24705fb73690f3a563c56" translate="yes" xml:space="preserve">
          <source>But as we hover over the &lt;code&gt;CONTAINS&lt;/code&gt;, Cypress reverts back to the URL that was present when our snapshot was taken.</source>
          <target state="translated">但是，当我们将鼠标悬停在 &lt;code&gt;CONTAINS&lt;/code&gt; 上时，赛普拉斯会恢复为拍摄快照时出现的URL。</target>
        </trans-unit>
        <trans-unit id="2b900bd7554aeee9fcd61f06518adffba2a37482" translate="yes" xml:space="preserve">
          <source>But do not fret - there are better workarounds to still achieve conditional testing &lt;strong&gt;without&lt;/strong&gt; relying on the DOM. You just have to &lt;em&gt;anchor&lt;/em&gt; yourself to another piece of truth that is not mutable.</source>
          <target state="translated">但是请不要担心-有更好的解决方法仍可以在&lt;strong&gt;不&lt;/strong&gt;依赖DOM的情况&lt;strong&gt;下&lt;/strong&gt;实现条件测试。您只需要将自己&lt;em&gt;锚定&lt;/em&gt;到另一个不可改变的真理上即可。</target>
        </trans-unit>
        <trans-unit id="bd815cee4113e688a7df5133a0ecf811c2f33eb9" translate="yes" xml:space="preserve">
          <source>But if your app makes a request upon being initialized, &lt;em&gt;the above code will not work&lt;/em&gt;. &lt;code&gt;cy.visit()&lt;/code&gt; will resolve once its &lt;code&gt;load&lt;/code&gt; event fires. The &lt;a href=&quot;server&quot;&gt;&lt;code&gt;cy.server()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt; commands are not processed until &lt;em&gt;after&lt;/em&gt;&lt;code&gt;cy.visit()&lt;/code&gt; resolves.</source>
          <target state="translated">但是，如果您的应用在初始化时发出请求，&lt;em&gt;则上述代码将无法正常工作&lt;/em&gt;。 &lt;code&gt;cy.visit()&lt;/code&gt; 将在 &lt;code&gt;load&lt;/code&gt; 事件触发后解析。所述&lt;a href=&quot;server&quot;&gt; &lt;code&gt;cy.server()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt;命令不处理，直到&lt;em&gt;后&lt;/em&gt; &lt;code&gt;cy.visit()&lt;/code&gt; 消失。</target>
        </trans-unit>
        <trans-unit id="92e073bae81b135a93e24b0e9ee261db4492bf0c" translate="yes" xml:space="preserve">
          <source>But in the &lt;strong&gt;worst&lt;/strong&gt; case scenario we have a situation where the &lt;code&gt;&amp;lt;#wizard&amp;gt;&lt;/code&gt;&lt;strong&gt;was&lt;/strong&gt; going to be rendered, but it didn&amp;rsquo;t render within our given timeout. Let&amp;rsquo;s assume this was due to a pending network request or WebSocket message or a queued timer, or anything else.</source>
          <target state="translated">但在&lt;strong&gt;最坏&lt;/strong&gt;的情况下，我们有其中一种情况 &lt;code&gt;&amp;lt;#wizard&amp;gt;&lt;/code&gt; &lt;strong&gt;是&lt;/strong&gt;要被渲染，但它并没有我们定超时内作出。假设这是由于待处理的网络请求或WebSocket消息或排队的计时器或其他任何原因造成的。</target>
        </trans-unit>
        <trans-unit id="9761bc768940e7d80f9261297a770d4320900e85" translate="yes" xml:space="preserve">
          <source>But sometimes the test fails - not usually locally, no - it almost always fails on our continuous integration server. When the test fails, the recorded video and screenshots are NOT showing any obvious problems! Here is the failing test video:</source>
          <target state="translated">但有时测试会失败--通常不是在本地,不是--它几乎总是在我们的持续集成服务器上失败。当测试失败时,录制的视频和截图并没有显示任何明显的问题! 这里是失败的测试视频。</target>
        </trans-unit>
        <trans-unit id="3935888993bc17de354607d31bca1d177106eaf0" translate="yes" xml:space="preserve">
          <source>But what this also means is that your test code &lt;strong&gt;is being evaluated inside the browser&lt;/strong&gt;. Test code is not evaluated in Node, or any other server side language. The &lt;strong&gt;only&lt;/strong&gt; language we will ever support is the language of the web: JavaScript.</source>
          <target state="translated">但这也意味着您的测试代码&lt;strong&gt;正在浏览器内部进行评估&lt;/strong&gt;。测试代码不会以Node或任何其他服务器端语言评估。在&lt;strong&gt;只有&lt;/strong&gt;我们将永远支持语言是网络语言：JavaScript的。</target>
        </trans-unit>
        <trans-unit id="c99194c72e09ef4a657734c01fca7894ea8c0b29" translate="yes" xml:space="preserve">
          <source>But when you&amp;rsquo;re testing &lt;em&gt;another area of the system&lt;/em&gt; that relies on a state from a previous feature: &lt;strong&gt;do not use your UI to set up this state&lt;/strong&gt;.</source>
          <target state="translated">但是，当您测试依赖于先前功能状态&lt;em&gt;的系统的另一个区域时&lt;/em&gt;：&lt;strong&gt;不要使用UI来设置此状态&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="f501dba65bd4f79db81c1a22aa83586dd29110a5" translate="yes" xml:space="preserve">
          <source>But you may be wondering where the URL property comes from. Per the &lt;code&gt;window.location&lt;/code&gt; spec, there actually isn&amp;rsquo;t a URL property on the &lt;code&gt;location&lt;/code&gt; object.</source>
          <target state="translated">但是您可能想知道URL属性的来源。根据 &lt;code&gt;window.location&lt;/code&gt; 规范，在 &lt;code&gt;location&lt;/code&gt; 对象上实际上没有URL属性。</target>
        </trans-unit>
        <trans-unit id="6eb38eef7e0cb7c5285cb92d9f35cf079b5f511f" translate="yes" xml:space="preserve">
          <source>But&amp;hellip; for the sake of the argument, let&amp;rsquo;s imagine for a moment you did have error handling in Cypress.</source>
          <target state="translated">但是&amp;hellip;&amp;hellip;为了论证，让我们想象一下您在赛普拉斯中确实有错误处理。</target>
        </trans-unit>
        <trans-unit id="fc647326b85e4411d8721bb8101b0f6ed1dcdaa8" translate="yes" xml:space="preserve">
          <source>By adding &lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should('not.exist')&lt;/code&gt;&lt;/a&gt; to any DOM command, Cypress will reverse its default assertion and automatically wait until the element does not exist.</source>
          <target state="translated">通过将&lt;a href=&quot;../../api/commands/should&quot;&gt; &lt;code&gt;.should('not.exist')&lt;/code&gt; 添加&lt;/a&gt;到任何DOM命令中，赛普拉斯将反转其默认断言，并自动等待直到该元素不存在。</target>
        </trans-unit>
        <trans-unit id="16abc9c943d2007be0a9d0db0a052514c37ec69b" translate="yes" xml:space="preserve">
          <source>By clearing cookies before each test you are guaranteed to always start from a clean slate. Starting from a clean state prevents coupling your tests to one another and prevents situations where mutating something in your application in one test affects another one downstream.</source>
          <target state="translated">通过在每次测试前清除cookie,您可以保证总是从一个干净的状态开始。从干净的状态开始,可以防止你的测试相互耦合,防止在一个测试中突变应用程序中的某些东西影响到下游的另一个测试。</target>
        </trans-unit>
        <trans-unit id="dbff3eb7997676064537a457a8e17345ad463c2c" translate="yes" xml:space="preserve">
          <source>By default &lt;a href=&quot;route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt; inherits some of its options from &lt;code&gt;cy.server()&lt;/code&gt;.</source>
          <target state="translated">默认情况下&lt;a href=&quot;route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt;继承了它的一些选项 &lt;code&gt;cy.server()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c128271a173c14c3d77a31827252e98871908fce" translate="yes" xml:space="preserve">
          <source>By default Cypress detects if an element you&amp;rsquo;re trying to interact with is animating. This check ensures that an element is not animating too quickly for a real user to interact with the element. This also prevents some edge cases where actions, such as &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt;, happened too fast during a transition.</source>
          <target state="translated">默认情况下，赛普拉斯会检测您要与之交互的元素是否正在设置动画。此检查可确保元素的动画制作速度不会太快，以至于实际用户无法与该元素进行交互。这也可以防止某些&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;情况，例如.type（）或&lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt;等动作在过渡期间发生得太快。</target>
        </trans-unit>
        <trans-unit id="369b519ae221ff90a3a7ee1476cf295b6283f65a" translate="yes" xml:space="preserve">
          <source>By default Cypress seeds this file for new projects, but if you have an existing project just create this file yourself.</source>
          <target state="translated">默认情况下,Cypress为新项目提供种子文件,但如果你有一个现有的项目,只需自己创建这个文件。</target>
        </trans-unit>
        <trans-unit id="1837fbd9a9ec8015fc66d28fdd8ea147a145faf2" translate="yes" xml:space="preserve">
          <source>By default Cypress uses &lt;code&gt;minimatch&lt;/code&gt; to test glob patterns against XHR URLs.</source>
          <target state="translated">默认情况下，赛普拉斯使用 &lt;code&gt;minimatch&lt;/code&gt; 针对XHR URL测试glob模式。</target>
        </trans-unit>
        <trans-unit id="8aea1a5e3fc50befb253f0d3c037201ab9a3e6fa" translate="yes" xml:space="preserve">
          <source>By default Cypress will automatically include the plugins file &lt;code&gt;cypress/plugins/index.js&lt;/code&gt;&lt;strong&gt;before&lt;/strong&gt; every single spec file it runs. We do this purely as a convenience mechanism so you don&amp;rsquo;t have to import this file in every single one of your spec files.</source>
          <target state="translated">默认情况下，赛普拉斯将&lt;strong&gt;在&lt;/strong&gt;运行每个单独的spec文件&lt;strong&gt;之前&lt;/strong&gt;自动包含插件文件 &lt;code&gt;cypress/plugins/index.js&lt;/code&gt; 。我们这样做纯粹是为了方便，因此您不必在每个规格文件中都导入此文件。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c8d14ff553bf96704ae7ab16bad50d6f91465cdb" translate="yes" xml:space="preserve">
          <source>By default Cypress will automatically include the support file &lt;code&gt;cypress/support/index.js&lt;/code&gt;. This file runs &lt;strong&gt;before&lt;/strong&gt; every single spec file . We do this purely as a convenience mechanism so you don&amp;rsquo;t have to import this file in every single one of your spec files.</source>
          <target state="translated">默认情况下，赛普拉斯将自动包含支持文件 &lt;code&gt;cypress/support/index.js&lt;/code&gt; 。该文件&lt;strong&gt;在&lt;/strong&gt;每个单独的spec文件&lt;strong&gt;之前&lt;/strong&gt;运行。我们这样做纯粹是为了方便，因此您不必在每个规格文件中都导入此文件。</target>
        </trans-unit>
        <trans-unit id="fb5a748a6b8beb98293f050314028cf4ef3c1a6e" translate="yes" xml:space="preserve">
          <source>By default Cypress will favor:</source>
          <target state="translated">默认情况下,赛普拉斯会青睐。</target>
        </trans-unit>
        <trans-unit id="6f3b1d3fc29a286f5e1e567d6e4465194e66b494" translate="yes" xml:space="preserve">
          <source>By default Cypress will log out the cookie object which allows you to inspect all of its properties. However you may not need that level of detail and you can turn this off.</source>
          <target state="translated">默认情况下,Cypress会注销cookie对象,这允许你检查它的所有属性。然而,你可能不需要那么详细,你可以关闭这个功能。</target>
        </trans-unit>
        <trans-unit id="64540a26c4f0445f282c3b4b176cd2403dcbff0a" translate="yes" xml:space="preserve">
          <source>By default each command that retries, does so for up to 4 seconds - the &lt;a href=&quot;../references/configuration#Timeouts&quot;&gt;&lt;code&gt;defaultCommandTimeout&lt;/code&gt;&lt;/a&gt; setting. You can change this timeout for &lt;em&gt;all commands&lt;/em&gt; using your configuration file, a CLI parameter, via an environment variable, or programmatically.</source>
          <target state="translated">默认情况下，每个重试命令最多&lt;a href=&quot;../references/configuration#Timeouts&quot;&gt; &lt;code&gt;defaultCommandTimeout&lt;/code&gt; &lt;/a&gt; 4秒钟-defaultCommandTimeout设置。您可以使用配置文件，CLI参数，通过环境变量或以编程方式更改&lt;em&gt;所有命令的&lt;/em&gt;超时时间。</target>
        </trans-unit>
        <trans-unit id="86e97fd31ec82fcd81884e526c7d5710272a3639" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;../commands/screenshot&quot;&gt;&lt;code&gt;cy.screenshot()&lt;/code&gt;&lt;/a&gt; only captures your application under test. You may want it to capture the entire Test Runner for debugging purposes.</source>
          <target state="translated">默认情况下，&lt;a href=&quot;../commands/screenshot&quot;&gt; &lt;code&gt;cy.screenshot()&lt;/code&gt; &lt;/a&gt;仅捕获您正在测试的应用程序。您可能希望它捕获整个Test Runner以进行调试。</target>
        </trans-unit>
        <trans-unit id="9789f525daf318c4ed0a429d6c1578612f8d66ae" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;cy.readFile()&lt;/code&gt; asserts that the file exists and will fail if it does not exist. It will retry reading the file if it does not initially exist until the file exists or the command times out.</source>
          <target state="translated">默认情况下， &lt;code&gt;cy.readFile()&lt;/code&gt; 断言该文件存在，如果不存在则将失败。如果在文件存在或命令超时之前最初不存在该文件，它将重试读取该文件。</target>
        </trans-unit>
        <trans-unit id="b7755cc76eb2927459baa2eaa0cbbb869ab2869c" translate="yes" xml:space="preserve">
          <source>By default, Cypress automatically takes a screenshot when there is a failure when running &lt;code&gt;cypress run&lt;/code&gt;, but you can disable this.</source>
          <target state="translated">默认情况下，当运行 &lt;code&gt;cypress run&lt;/code&gt; 失败时，赛普拉斯会自动拍摄屏幕截图，但是您可以禁用它。</target>
        </trans-unit>
        <trans-unit id="3a930f944f69980722b7a7435e13cc75a19e0968" translate="yes" xml:space="preserve">
          <source>By default, Cypress comes packaged with the &lt;strong&gt;Browserify Preprocessor&lt;/strong&gt; already installed.</source>
          <target state="translated">默认情况下，赛普拉斯随附了已安装的&lt;strong&gt;Browserify预处理器&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="51b1d4458722e54fdab38de0b4fdb208fbb4c446" translate="yes" xml:space="preserve">
          <source>By default, Cypress expects your &lt;code&gt;cypress.json&lt;/code&gt; to be found where your &lt;code&gt;package.json&lt;/code&gt; is. However, you can point Cypress to run in a different location.</source>
          <target state="translated">默认情况下，赛普拉斯希望在您的 &lt;code&gt;package.json&lt;/code&gt; 所在的位置找到 &lt;code&gt;cypress.json&lt;/code&gt; 。但是，您可以将赛普拉斯指向在其他位置运行。</target>
        </trans-unit>
        <trans-unit id="1ec58f30677842ba5abd7f2125050c19d588f884" translate="yes" xml:space="preserve">
          <source>By default, Cypress is configured to &lt;em&gt;ignore&lt;/em&gt; requests that are used to fetch static content like &lt;code&gt;.js&lt;/code&gt; or &lt;code&gt;.html&lt;/code&gt; files. This keeps the Command Log less noisy. This option can be changed by overriding the default whitelisting in the &lt;a href=&quot;../../api/commands/server#Options&quot;&gt;&lt;code&gt;cy.server()&lt;/code&gt; options&lt;/a&gt;.</source>
          <target state="translated">默认情况下，赛普拉斯配置为&lt;em&gt;忽略&lt;/em&gt;用于获取静态内容（如 &lt;code&gt;.js&lt;/code&gt; 或 &lt;code&gt;.html&lt;/code&gt; 文件）的请求。这样可以使命令日志的噪音更少。可以通过覆盖&lt;a href=&quot;../../api/commands/server#Options&quot;&gt; &lt;code&gt;cy.server()&lt;/code&gt; 选项中&lt;/a&gt;的默认白名单来更改此选项。</target>
        </trans-unit>
        <trans-unit id="2b877c2943ec02100ea8a4e68830dc03ae75be17" translate="yes" xml:space="preserve">
          <source>By default, Cypress keeps 50 tests worth of snapshots and command data for time traveling. If you are seeing extremely high memory consumption in your browser, you may want to lower the &lt;code&gt;numTestsKeptInMemory&lt;/code&gt; in your &lt;a href=&quot;../references/configuration#Global&quot;&gt;configuration&lt;/a&gt;.</source>
          <target state="translated">默认情况下，赛普拉斯会保留50个测试值的快照和命令数据用于时间旅行。如果您看到在您的浏览器非常高的内存消耗，你可能要降低 &lt;code&gt;numTestsKeptInMemory&lt;/code&gt; 在你的&lt;a href=&quot;../references/configuration#Global&quot;&gt;配置&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="73b4e4bdbe66c61a3929bda637ec81af86f094f9" translate="yes" xml:space="preserve">
          <source>By default, Cypress passes the Chrome command line switch to enable a fake video for a media stream. This is to better enable testing webcam functionality without having to have the necessary hardware to test.</source>
          <target state="translated">默认情况下,赛普拉斯通过Chrome命令行开关来启用媒体流的假视频。这是为了更好地实现测试网络摄像头功能,而不需要有必要的硬件来测试。</target>
        </trans-unit>
        <trans-unit id="a3cda0a302f2c8de413fcebbb8f0b3b7c5200fbc" translate="yes" xml:space="preserve">
          <source>By default, Cypress will automatically find and allow you to use the browsers installed on your system.</source>
          <target state="translated">默认情况下,赛普拉斯会自动找到并允许您使用系统上安装的浏览器。</target>
        </trans-unit>
        <trans-unit id="14576507b321bf953573432132aa0dce8f14ea0d" translate="yes" xml:space="preserve">
          <source>By default, Cypress will automatically set &lt;code&gt;Content-Type&lt;/code&gt; and &lt;code&gt;Content-Length&lt;/code&gt; based on what your &lt;code&gt;response body&lt;/code&gt; looks like.</source>
          <target state="translated">默认情况下，赛普拉斯将根据 &lt;code&gt;response body&lt;/code&gt; 外观自动设置 &lt;code&gt;Content-Type&lt;/code&gt; 和 &lt;code&gt;Content-Length&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="60f36509279d4c17207d1dc348d8c1f5325d200b" translate="yes" xml:space="preserve">
          <source>By default, Cypress will error if you&amp;rsquo;re trying to click multiple elements. By passing &lt;code&gt;{ multiple: true }&lt;/code&gt; Cypress will iteratively apply the click to each element and will also log to the &lt;a href=&quot;../../guides/core-concepts/test-runner#Command-Log&quot;&gt;Command Log&lt;/a&gt; multiple times.</source>
          <target state="translated">默认情况下，如果您尝试单击多个元素，赛普拉斯将出错。通过传递 &lt;code&gt;{ multiple: true }&lt;/code&gt; 赛普拉斯将迭代地将单击应用于每个元素，并且还将多次记录到&lt;a href=&quot;../../guides/core-concepts/test-runner#Command-Log&quot;&gt;命令日志中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2eaa1b50e36b4ca02fd70aa93843f9d4af125355" translate="yes" xml:space="preserve">
          <source>By default, Cypress will run tests in Electron headlessly.</source>
          <target state="translated">默认情况下,Cypress将在Electron中无头地运行测试。</target>
        </trans-unit>
        <trans-unit id="020c7aea8e7fcdb3f70f080fc34e32edac970fc2" translate="yes" xml:space="preserve">
          <source>By default, JavaScript timers and CSS animations are disabled to try to prevent changes to your application under test while the screenshot is taken, but you can turn off this behavior.</source>
          <target state="translated">默认情况下,JavaScript定时器和CSS动画被禁用,以防止在屏幕截图时对被测应用程序进行更改,但你可以关闭这一行为。</target>
        </trans-unit>
        <trans-unit id="31d239b236e06bd32e82356597cd3678076349da" translate="yes" xml:space="preserve">
          <source>By default, a screenshot is saved to a file with a path relative to the &lt;a href=&quot;../../guides/references/configuration#Folders-Files&quot;&gt;screenshots folder&lt;/a&gt;, appended by a path relating to where the spec file exists, with a name including the current test&amp;rsquo;s suites and test name: &lt;code&gt;{screenshotsFolder}/{specPath}/{testName}.png&lt;/code&gt;</source>
          <target state="translated">默认情况下，屏幕快照会保存到文件中，该文件的路径与&lt;a href=&quot;../../guides/references/configuration#Folders-Files&quot;&gt;屏幕快照文件夹&lt;/a&gt;有关，并在路径后附加与规范文件存在的位置有关的路径，其名称包括当前测试的套件和测试名称： &lt;code&gt;{screenshotsFolder}/{specPath}/{testName}.png&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="25b5c1248e79a26964e544280fa3ed4f30495142" translate="yes" xml:space="preserve">
          <source>By default, any environment variable that matches a corresponding configuration key will override the &lt;code&gt;cypress.json&lt;/code&gt; value.</source>
          <target state="translated">默认情况下，任何与相应配置键匹配的环境变量都将覆盖 &lt;code&gt;cypress.json&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="e4d0e8b3b87d13429a6c8955ad16b7c84cbf40a8" translate="yes" xml:space="preserve">
          <source>By default, every user of Cypress is given a personal organization - named after you. You cannot delete or edit the name of this default organization.</source>
          <target state="translated">默认情况下,Cypress的每个用户都有一个个人组织,以您的名字命名。你不能删除或编辑这个默认组织的名称。</target>
        </trans-unit>
        <trans-unit id="5063fbb288f3f5b4a8dd3fb04c4aabced23161da" translate="yes" xml:space="preserve">
          <source>By default, if your screen is not large enough to display all of the current dimension&amp;rsquo;s pixels, Cypress will scale and center your application within the Cypress runner to accommodate.</source>
          <target state="translated">默认情况下，如果您的屏幕不够大，无法显示当前尺寸的所有像素，赛普拉斯将在Cypress运行器中缩放并居中放置您的应用程序。</target>
        </trans-unit>
        <trans-unit id="56147af8f660e28c93278b32108de5247937fc54" translate="yes" xml:space="preserve">
          <source>By default, modifiers are released after each type command.</source>
          <target state="translated">默认情况下,修饰符在每个类型命令后都会被释放。</target>
        </trans-unit>
        <trans-unit id="8f36f87fbe0c647d60dcf224cf359b9788daa6ff" translate="yes" xml:space="preserve">
          <source>By default, scaling the application under test is turned off during when the &lt;code&gt;capture&lt;/code&gt; option is &lt;code&gt;viewport&lt;/code&gt; to prevent differences between screenshots on screens with different resolutions. You can turn scaling on and have your app scaled like it is during normal use of Cypress. This is always coerced to &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;capture&lt;/code&gt; option is &lt;code&gt;runner&lt;/code&gt;.</source>
          <target state="translated">默认情况下，在 &lt;code&gt;capture&lt;/code&gt; 选项为 &lt;code&gt;viewport&lt;/code&gt; 期间，将不缩放受测应用程序的比例，以防止具有不同分辨率的屏幕截图之间出现差异。您可以像在赛普拉斯正常使用期间一样打开缩放比例并缩放您的应用程序。如果 &lt;code&gt;capture&lt;/code&gt; 选项为 &lt;code&gt;runner&lt;/code&gt; ,则始终将其强制为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6f335479f6d588a3ec88fa2676dba6b4a72b2028" translate="yes" xml:space="preserve">
          <source>By default, the event will bubble up the DOM tree. This will prevent the event from bubbling.</source>
          <target state="translated">默认情况下,事件会在DOM树上冒泡。这将防止事件冒泡。</target>
        </trans-unit>
        <trans-unit id="4ee8175e75416cebdf4f5f2b3834c5eeb169de38" translate="yes" xml:space="preserve">
          <source>By default, until you issue a &lt;code&gt;cy.viewport()&lt;/code&gt; command, Cypress sets the width to &lt;code&gt;1000px&lt;/code&gt; and the height to &lt;code&gt;660px&lt;/code&gt; by default.</source>
          <target state="translated">默认情况下，直到发出 &lt;code&gt;cy.viewport()&lt;/code&gt; 命令，赛普拉斯设置宽度 &lt;code&gt;1000px&lt;/code&gt; ，高度为 &lt;code&gt;660px&lt;/code&gt; 默认。</target>
        </trans-unit>
        <trans-unit id="31da1ef1646d02bd7e3e61c167ce21d28b35ce7b" translate="yes" xml:space="preserve">
          <source>By default, when running &lt;a href=&quot;command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt; from the CLI, we will launch Electron headlessly.</source>
          <target state="translated">默认情况下，从CLI 运行&lt;a href=&quot;command-line#cypress-run&quot;&gt; &lt;code&gt;cypress run&lt;/code&gt; &lt;/a&gt;时，我们将无头启动Electron。</target>
        </trans-unit>
        <trans-unit id="67d236dff9d0db2de50f277cfe461372f2b4cda7" translate="yes" xml:space="preserve">
          <source>By installing Cypress through &lt;code&gt;npm&lt;/code&gt; you also get access to many other CLI commands.</source>
          <target state="translated">通过 &lt;code&gt;npm&lt;/code&gt; 安装赛普拉斯，您还可以访问许多其他CLI命令。</target>
        </trans-unit>
        <trans-unit id="80da3b5dbdcbfc5eb2338707d70f4635caeec1bb" translate="yes" xml:space="preserve">
          <source>By passing a string or array of strings you can block requests made to one or more hosts.</source>
          <target state="translated">通过传递一个字符串或字符串数组,您可以阻止向一个或多个主机发出的请求。</target>
        </trans-unit>
        <trans-unit id="c215ae2b7035d4fc04619254745488563429289e" translate="yes" xml:space="preserve">
          <source>By setting the &lt;code&gt;baseUrl&lt;/code&gt;, you can avoid this reload altogether. Cypress will load the main window in the &lt;code&gt;baseUrl&lt;/code&gt; you specified as soon as your tests start.</source>
          <target state="translated">通过设置 &lt;code&gt;baseUrl&lt;/code&gt; ，您可以完全避免重新加载。测试开始后，赛普拉斯会将主窗口加载到您指定的 &lt;code&gt;baseUrl&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="52184d3398336fbb0d43496bd9f09ab0e9d17269" translate="yes" xml:space="preserve">
          <source>By setting the &lt;code&gt;{ prevSubject: true }&lt;/code&gt;, our new &lt;code&gt;.console()&lt;/code&gt; command will require a subject.</source>
          <target state="translated">通过设置 &lt;code&gt;{ prevSubject: true }&lt;/code&gt; ，我们新的 &lt;code&gt;.console()&lt;/code&gt; 命令将需要一个主题。</target>
        </trans-unit>
        <trans-unit id="316130fed5f133da590e50589a6237514343d251" translate="yes" xml:space="preserve">
          <source>By turning on debugging, Cypress will automatically log out to the console when it &lt;em&gt;sets&lt;/em&gt; or &lt;em&gt;clears&lt;/em&gt; cookie values. This is useful to help you understand how Cypress clears cookies before each test, and is useful to visualize how to handle preserving cookies in between tests.</source>
          <target state="translated">通过打开调试，赛普拉斯在&lt;em&gt;设置&lt;/em&gt;或&lt;em&gt;清除&lt;/em&gt; cookie值时将自动注销到控制台。这对帮助您了解赛普拉斯在每次测试前如何清除cookie很有用，并有助于形象化如何在两次测试之间处理保留cookie的方法。</target>
        </trans-unit>
        <trans-unit id="298fa88d04166bb6674ad4e0d3ccdf772b46c496" translate="yes" xml:space="preserve">
          <source>By using &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; we avoid the use of &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">通过使用&lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; ,&lt;/a&gt;我们避免使用 &lt;code&gt;this&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="18078552f603c5c6fab2d90bca20e9322ebefd72" translate="yes" xml:space="preserve">
          <source>By using callback functions we&amp;rsquo;ve created a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures&quot;&gt;closure&lt;/a&gt;. Closures enable us to keep references around to refer to work done in previous commands.</source>
          <target state="translated">通过使用回调函数，我们创建了一个&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures&quot;&gt;闭包&lt;/a&gt;。闭包使我们能够保留引用以引用先前命令中完成的工作。</target>
        </trans-unit>
        <trans-unit id="489e37d7dbee8b74c057ee1d2d38019f4c513b59" translate="yes" xml:space="preserve">
          <source>Bypassing your UI</source>
          <target state="translated">绕过您的UI</target>
        </trans-unit>
        <trans-unit id="ff61c566a2ca6d712c906c28744ddcd1dba14009" translate="yes" xml:space="preserve">
          <source>CI Build ID environment variables by provider</source>
          <target state="translated">按提供者分列的CI Build ID环境变量</target>
        </trans-unit>
        <trans-unit id="fc69adcfecb8cb1dd5f155da62e87064402b4c2d" translate="yes" xml:space="preserve">
          <source>CI Configurations in Kitchen Sink Example</source>
          <target state="translated">厨房水槽的CI配置实例</target>
        </trans-unit>
        <trans-unit id="d01ac6617bafd8746500902dac96f7c5734ac2f0" translate="yes" xml:space="preserve">
          <source>CI Provider</source>
          <target state="translated">CI供应商</target>
        </trans-unit>
        <trans-unit id="c662b79291f346f66148551da0ae0a7364ce29f5" translate="yes" xml:space="preserve">
          <source>CI machines contact the Cypress &lt;a href=&quot;../dashboard/introduction&quot;&gt;Dashboard Service&lt;/a&gt; to indicate which spec files to run in the project.</source>
          <target state="translated">CI机器联系赛普拉斯&lt;a href=&quot;../dashboard/introduction&quot;&gt;仪表板服务&lt;/a&gt;以指示要在项目中运行的规格文件。</target>
        </trans-unit>
        <trans-unit id="2027f0b62c225f1fba06f13e84c73e654c595e88" translate="yes" xml:space="preserve">
          <source>CI parallelization interactions</source>
          <target state="translated">CI并行化互动</target>
        </trans-unit>
        <trans-unit id="434a666a92024e35fbc505bba0c2675be6990ff3" translate="yes" xml:space="preserve">
          <source>CLI Errors</source>
          <target state="translated">CLI错误</target>
        </trans-unit>
        <trans-unit id="2b73128876956758fae01f88c425032451c06b72" translate="yes" xml:space="preserve">
          <source>CLI now displays the correct overridden &lt;code&gt;CYPRESS_BINARY_VERSION&lt;/code&gt; on first open. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/659&quot;&gt;#659&lt;/a&gt;.</source>
          <target state="translated">现在，CLI 在第一次打开时显示正确的覆盖 &lt;code&gt;CYPRESS_BINARY_VERSION&lt;/code&gt; 。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/659&quot;&gt;＃659&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5964dd4adab7594f2e1a2e9d973bbe2f7d161bc1" translate="yes" xml:space="preserve">
          <source>CLI shows help message when it is invoked with an unknown command like &lt;code&gt;$(npm bin)/cypress foo&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/641&quot;&gt;#641&lt;/a&gt;.</source>
          <target state="translated">当使用未知命令（例如 &lt;code&gt;$(npm bin)/cypress foo&lt;/code&gt; )调用CLI时，CLI会显示帮助消息。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/641&quot;&gt;＃641&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="03f5dac5f9ec51daa2d44c63bd74508ea187e09e" translate="yes" xml:space="preserve">
          <source>CLI tools</source>
          <target state="translated">CLI工具</target>
        </trans-unit>
        <trans-unit id="2139aadec237bbecb581e62932f94bc3bce7a704" translate="yes" xml:space="preserve">
          <source>CORS</source>
          <target state="translated">CORS</target>
        </trans-unit>
        <trans-unit id="bc649576a4d3ad53cb4f5ae4e2787fadafe6b354" translate="yes" xml:space="preserve">
          <source>CORS Network Errors are now correctly caught.</source>
          <target state="translated">CORS网络错误现在已被正确捕获。</target>
        </trans-unit>
        <trans-unit id="70f64583fc76685812e87c4faa1cb1b507ca4146" translate="yes" xml:space="preserve">
          <source>CORS is bypassed</source>
          <target state="translated">CORS被绕过</target>
        </trans-unit>
        <trans-unit id="ac7e57b7980c52be07d41cc077fc6f543ecb0e7f" translate="yes" xml:space="preserve">
          <source>CPU Architecture</source>
          <target state="translated">CPU结构</target>
        </trans-unit>
        <trans-unit id="194e13da720a1f025685e5d677eba8a1aff3860a" translate="yes" xml:space="preserve">
          <source>CSS</source>
          <target state="translated">CSS</target>
        </trans-unit>
        <trans-unit id="7c73fb96fc873b0e54bb33b427402eb6dae05fa0" translate="yes" xml:space="preserve">
          <source>CSS Improvements</source>
          <target state="translated">CSS改进</target>
        </trans-unit>
        <trans-unit id="d7d5905637755f2600a18d5aff7b8c939f054ab1" translate="yes" xml:space="preserve">
          <source>CSS changes.</source>
          <target state="translated">CSS变化。</target>
        </trans-unit>
        <trans-unit id="1a0d5a83a082583528756c941afe7d7ac4c8fee8" translate="yes" xml:space="preserve">
          <source>Cache the &lt;code&gt;~/.cache&lt;/code&gt; folder after running &lt;code&gt;npm install&lt;/code&gt;, &lt;code&gt;yarn&lt;/code&gt;, &lt;a href=&quot;https://docs.npmjs.com/cli/ci&quot;&gt;&lt;code&gt;npm ci&lt;/code&gt;&lt;/a&gt; or equivalents as demonstrated in the configs below.</source>
          <target state="translated">运行 &lt;code&gt;npm install&lt;/code&gt; ， &lt;code&gt;yarn&lt;/code&gt; ，&lt;a href=&quot;https://docs.npmjs.com/cli/ci&quot;&gt; &lt;code&gt;npm ci&lt;/code&gt; &lt;/a&gt;或同等功能后，缓存 &lt;code&gt;~/.cache&lt;/code&gt; 文件夹，如以下配置所示。</target>
        </trans-unit>
        <trans-unit id="60790f7c84170a8b87051d7e857118ffeb0465ee" translate="yes" xml:space="preserve">
          <source>Caching</source>
          <target state="translated">Caching</target>
        </trans-unit>
        <trans-unit id="552776a73910809012403d392d8679e0d673873d" translate="yes" xml:space="preserve">
          <source>Caching folders with npm modules saves a lot of time after the first build.</source>
          <target state="translated">使用npm模块缓存文件夹可以在第一次构建后节省很多时间。</target>
        </trans-unit>
        <trans-unit id="1fa16ca9debb97f6986680d1936a0fc501a513a5" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;cy.request()&lt;/code&gt; over and over again</source>
          <target state="translated">呼叫 &lt;code&gt;cy.request()&lt;/code&gt; 一遍又一遍</target>
        </trans-unit>
        <trans-unit id="f93685d70a619e9e5640c0d9c00fcede507aa163" translate="yes" xml:space="preserve">
          <source>Callback function that whitelists requests from ever being logged or stubbed. By default this matches against asset-like requests such as for &lt;code&gt;.js&lt;/code&gt;, &lt;code&gt;.jsx&lt;/code&gt;, &lt;code&gt;.html&lt;/code&gt;, and &lt;code&gt;.css&lt;/code&gt; files.</source>
          <target state="translated">回调功能，可将被记录或存根的请求列入白名单。默认情况下，这与类似资产的请求匹配，例如 &lt;code&gt;.js&lt;/code&gt; ， &lt;code&gt;.jsx&lt;/code&gt; ， &lt;code&gt;.html&lt;/code&gt; 和 &lt;code&gt;.css&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="087dbaf08e0864a6ad0ad0adb86ee5ed58f3f116" translate="yes" xml:space="preserve">
          <source>Callback function when a request is sent</source>
          <target state="translated">发送请求时的回调功能</target>
        </trans-unit>
        <trans-unit id="cf8d5c2978df66f3f394db8f6aab052e046024aa" translate="yes" xml:space="preserve">
          <source>Callback function when a response is returned</source>
          <target state="translated">返回响应时的回调函数</target>
        </trans-unit>
        <trans-unit id="61dc26e9c1fe08638550698294266bd9f36dd5bb" translate="yes" xml:space="preserve">
          <source>Callback function which fires anytime an XHR is aborted</source>
          <target state="translated">回调函数,当XHR中止时,回调函数就会启动。</target>
        </trans-unit>
        <trans-unit id="46ba14f15f9aae955fad56969dc285a9cd868127" translate="yes" xml:space="preserve">
          <source>Called before your page has loaded all of its resources.</source>
          <target state="translated">在你的页面加载所有资源之前被调用。</target>
        </trans-unit>
        <trans-unit id="6caed0da8cebe162cd765d1f7ebb277bdbcdff72" translate="yes" xml:space="preserve">
          <source>Called once your page has fired its load event.</source>
          <target state="translated">一旦你的页面启动了加载事件,就会被调用。</target>
        </trans-unit>
        <trans-unit id="ef1a512a13b777a8aa598130fecc3d609c6fe0e3" translate="yes" xml:space="preserve">
          <source>Calling &lt;a href=&quot;../../api/commands/focus&quot;&gt;&lt;code&gt;.focus()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../api/commands/blur&quot;&gt;&lt;code&gt;.blur()&lt;/code&gt;&lt;/a&gt; on &lt;a href=&quot;../../api/commands/window&quot;&gt;&lt;code&gt;cy.window()&lt;/code&gt;&lt;/a&gt; no longer fires blur events on the &lt;code&gt;activeElement&lt;/code&gt; or causes it to become &lt;code&gt;body&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2234&quot;&gt;#2234&lt;/a&gt;.</source>
          <target state="translated">调用&lt;a href=&quot;../../api/commands/focus&quot;&gt; &lt;code&gt;.focus()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../api/commands/blur&quot;&gt; &lt;code&gt;.blur()&lt;/code&gt; &lt;/a&gt;上&lt;a href=&quot;../../api/commands/window&quot;&gt; &lt;code&gt;cy.window()&lt;/code&gt; &lt;/a&gt;不再火灾模糊的事件 &lt;code&gt;activeElement&lt;/code&gt; 或使其成为 &lt;code&gt;body&lt;/code&gt; 。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2234&quot;&gt;＃2234&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dfb1b743dea5451ffee7e0b29e93e9c9e02d727f" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;Cypress.$('button')&lt;/code&gt; will automatically query for elements in your remote &lt;code&gt;window&lt;/code&gt;. In other words, Cypress automatically sets the &lt;code&gt;document&lt;/code&gt; to be whatever you&amp;rsquo;ve currently navigated to via &lt;a href=&quot;../commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">调用 &lt;code&gt;Cypress.$('button')&lt;/code&gt; 将自动在您的远程 &lt;code&gt;window&lt;/code&gt; 查询元素。换句话说，赛普拉斯会自动将 &lt;code&gt;document&lt;/code&gt; 设置为您当前通过&lt;a href=&quot;../commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;导航到的文档。</target>
        </trans-unit>
        <trans-unit id="d10e5029c1e28bc1a973ff19ea668605abce3fd8" translate="yes" xml:space="preserve">
          <source>Can I recover from failed Cypress commands like if a &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; doesn&amp;rsquo;t find an element?</source>
          <target state="translated">是否可以从失败的Cypress命令中恢复，例如&lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt;找不到元素？</target>
        </trans-unit>
        <trans-unit id="52f60c07118b2ea2839c1265c591e221479eb96f" translate="yes" xml:space="preserve">
          <source>Can a user click on the element?</source>
          <target state="translated">用户可以点击该元素吗?</target>
        </trans-unit>
        <trans-unit id="221fba3c424e5fc33582db258cdee25eeb4676e1" translate="yes" xml:space="preserve">
          <source>Can be stored in your &lt;code&gt;bash_profile&lt;/code&gt;.</source>
          <target state="translated">可以存储在您的 &lt;code&gt;bash_profile&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="1a3ada5d5fc85a9fb0a3b73f11e43f21f3bd7b67" translate="yes" xml:space="preserve">
          <source>Can call &lt;a href=&quot;focus&quot;&gt;&lt;code&gt;.focus()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;blur&quot;&gt;&lt;code&gt;.blur()&lt;/code&gt;&lt;/a&gt; on &lt;code&gt;cy.window()&lt;/code&gt;</source>
          <target state="translated">可以调用&lt;a href=&quot;focus&quot;&gt; &lt;code&gt;.focus()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;blur&quot;&gt; &lt;code&gt;.blur()&lt;/code&gt; &lt;/a&gt;上 &lt;code&gt;cy.window()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8b6610dd542aebfaabe19f83676053a2d9964417" translate="yes" xml:space="preserve">
          <source>Can force responses to take longer to simulate network delay</source>
          <target state="translated">可以强制响应需要更长的时间来模拟网络延迟。</target>
        </trans-unit>
        <trans-unit id="ed8a1cb964cf3bae5d65002a7f9c02b0831945f9" translate="yes" xml:space="preserve">
          <source>Can only be called on a valid focusable element</source>
          <target state="translated">只能在一个有效的可聚焦元素上调用。</target>
        </trans-unit>
        <trans-unit id="4fc2d9b2678b5da75f54eee51b90a74226366c17" translate="yes" xml:space="preserve">
          <source>Can this just be written as a simple function?</source>
          <target state="translated">这能不能直接写成一个简单的函数?</target>
        </trans-unit>
        <trans-unit id="a24787ac55453ccdeca09cc237538938881ad9fe" translate="yes" xml:space="preserve">
          <source>Can time out because your browser did not receive any focus events</source>
          <target state="translated">因为浏览器没有收到任何焦点事件,所以会超时。</target>
        </trans-unit>
        <trans-unit id="715dd339a0f190c96e4c5aefda2eec96e223e77b" translate="yes" xml:space="preserve">
          <source>Can you read this? If you did, it might sound something like this:</source>
          <target state="translated">你能读懂这个吗?如果你读过,听起来可能是这样的。</target>
        </trans-unit>
        <trans-unit id="beb27c8e29d0525dbd2a4408dc6d33153c8dbd36" translate="yes" xml:space="preserve">
          <source>Can you see what Cypress is doing under the hood? It&amp;rsquo;s automatically waiting and retrying because it expects the content to &lt;strong&gt;eventually&lt;/strong&gt; be found in the DOM. It doesn&amp;rsquo;t immediately fail!</source>
          <target state="translated">您能看到赛普拉斯的内幕吗？它会自动等待并重试，因为它希望&lt;strong&gt;最终&lt;/strong&gt;在DOM中找到该内容。它不会立即失败！</target>
        </trans-unit>
        <trans-unit id="711cd51206e2b20f7a7dcd2cc7ad8258724d1d0d" translate="yes" xml:space="preserve">
          <source>Can you think of any more?</source>
          <target state="translated">你还能想到其他的吗?</target>
        </trans-unit>
        <trans-unit id="dad882c9c3e0a7a06ab377ce15833cf98595a06c" translate="yes" xml:space="preserve">
          <source>Canary</source>
          <target state="translated">Canary</target>
        </trans-unit>
        <trans-unit id="e760613087c145d4d43705311ebd5342caa91cd3" translate="yes" xml:space="preserve">
          <source>Cancel project transfer</source>
          <target state="translated">取消项目转让</target>
        </trans-unit>
        <trans-unit id="319aaae4dec46a75861fd10bcf8d182f4a77298d" translate="yes" xml:space="preserve">
          <source>Cancellation</source>
          <target state="translated">Cancellation</target>
        </trans-unit>
        <trans-unit id="64b9d5a9e917dda829740003e994a492074b15af" translate="yes" xml:space="preserve">
          <source>Cannot &lt;code&gt;cy.visit()&lt;/code&gt; two different super domains in a single test</source>
          <target state="translated">在一次测试中无法 &lt;code&gt;cy.visit()&lt;/code&gt; 两个不同的超级域</target>
        </trans-unit>
        <trans-unit id="abb5bfdc353c366a7efbee1fb7da8e11330c0b1a" translate="yes" xml:space="preserve">
          <source>Cannot connect to API server</source>
          <target state="translated">无法连接到API服务器</target>
        </trans-unit>
        <trans-unit id="52f1a833377675f9699a778739ccffab115d51ce" translate="yes" xml:space="preserve">
          <source>Cannot parallelize tests across environments</source>
          <target state="translated">不能跨环境并行测试</target>
        </trans-unit>
        <trans-unit id="8bd1413beeb2490640f9bb664bd3ce493819d2f9" translate="yes" xml:space="preserve">
          <source>Cannot parallelize tests in this group</source>
          <target state="translated">不能在该组中进行并行测试</target>
        </trans-unit>
        <trans-unit id="f19b9a94a23e75f0746294f4067e3bcf318dbd3d" translate="yes" xml:space="preserve">
          <source>Cannot parallelize tests on a stale run</source>
          <target state="translated">无法在陈旧的运行中进行并行测试</target>
        </trans-unit>
        <trans-unit id="ca09c54bff74a82bae543ebe259f7452ee8c5293" translate="yes" xml:space="preserve">
          <source>Capabilities</source>
          <target state="translated">Capabilities</target>
        </trans-unit>
        <trans-unit id="bb0a25cc9790bc7fa5693c25569e769c8850a3b8" translate="yes" xml:space="preserve">
          <source>Captured remote page uncaught errors again which fail corresponding tests.</source>
          <target state="translated">再次捕捉到远程页面未抓取的错误,未通过相应的测试。</target>
        </trans-unit>
        <trans-unit id="48f2c0aca6c3bf7c2ed5abd3d76cf6978acf1777" translate="yes" xml:space="preserve">
          <source>Captured spec iframe errors again and preserve their stack trace.</source>
          <target state="translated">再次捕获规范的iframe错误并保留其堆栈跟踪。</target>
        </trans-unit>
        <trans-unit id="cc3c3e5a2cc3f39c50c5ba6661d886a70e3ca1c8" translate="yes" xml:space="preserve">
          <source>Catalog of Events</source>
          <target state="translated">活动目录</target>
        </trans-unit>
        <trans-unit id="20c19aaf20441fa384633652a8389a543aec7485" translate="yes" xml:space="preserve">
          <source>Catch visual regressions and compare image diffs locally and in Cypress Dashboard.</source>
          <target state="translated">捕捉视觉回归,并在本地和Cypress Dashboard中比较图像差异。</target>
        </trans-unit>
        <trans-unit id="03dcea7f9dee894e28d9a8873cb17690d773516d" translate="yes" xml:space="preserve">
          <source>Catching Test Failures</source>
          <target state="translated">捕捉测试失败</target>
        </trans-unit>
        <trans-unit id="1533667b844aeabc61af79e6389d6109dd4c1603" translate="yes" xml:space="preserve">
          <source>Cause + Effect commands are now logged in the correct order. IE, clicking something which causes another command to insert will be inserted correctly in the order they arrived</source>
          <target state="translated">原因+效果命令现在以正确的顺序记录。IE,点击某些东西会导致另一个命令的插入,将按照它们到达的顺序正确插入。</target>
        </trans-unit>
        <trans-unit id="d0d31283aa0e9299d14e7cac83e850d482500bb5" translate="yes" xml:space="preserve">
          <source>Centered the animating icon in the Test Runner when &amp;lsquo;running&amp;rsquo;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1695&quot;&gt;#1695&lt;/a&gt;.</source>
          <target state="translated">&amp;ldquo;运行&amp;rdquo;时，将动画图标在&amp;ldquo;测试运行器&amp;rdquo;中居中。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1695&quot;&gt;＃1695&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9fae277dee0479d19a4d4174ea2185ae54a626b9" translate="yes" xml:space="preserve">
          <source>Certain commands may have a specific requirement that causes them to immediately fail without retrying: such as &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">某些命令可能有特定要求，导致它们立即失败而无需重试：例如&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d10525a99b239e81e31412cc7b4c5dc1217f3627" translate="yes" xml:space="preserve">
          <source>Chai</source>
          <target state="translated">Chai</target>
        </trans-unit>
        <trans-unit id="20063bcb34e12094b0c2342fd9f9d64a0bd76ec4" translate="yes" xml:space="preserve">
          <source>Chai-jQuery</source>
          <target state="translated">Chai-jQuery</target>
        </trans-unit>
        <trans-unit id="b507de528ba917aa8f1aeb32108798635cce2a20" translate="yes" xml:space="preserve">
          <source>Chain assertions on the same subject</source>
          <target state="translated">关于同一主题的连锁论断</target>
        </trans-unit>
        <trans-unit id="c5022ed468cf246ff38b41ca1c5260a12cfd999b" translate="yes" xml:space="preserve">
          <source>Chain assertions when yield changes</source>
          <target state="translated">产量变化时的连锁断言</target>
        </trans-unit>
        <trans-unit id="a5d758b8fa875a66cbc9934c7ee9483ed6de99b9" translate="yes" xml:space="preserve">
          <source>Chain off the screenshot to click the element captured</source>
          <target state="translated">连锁截图,点击捕捉的元素。</target>
        </trans-unit>
        <trans-unit id="657c40f2403784c009553c8544b91fc705a8214c" translate="yes" xml:space="preserve">
          <source>Chainable getters</source>
          <target state="translated">可链式获取器</target>
        </trans-unit>
        <trans-unit id="273f575f4958f461d0f138115a61041b33e559e6" translate="yes" xml:space="preserve">
          <source>Chainer</source>
          <target state="translated">Chainer</target>
        </trans-unit>
        <trans-unit id="422de1722c9aa75f8bfed73fdcfb12bf76514cb5" translate="yes" xml:space="preserve">
          <source>Chainers</source>
          <target state="translated">Chainers</target>
        </trans-unit>
        <trans-unit id="04e698cea23e1b45cd3e12385b6d2ab527866116" translate="yes" xml:space="preserve">
          <source>Chaining more cy commands after using &lt;a href=&quot;../../api/commands/wrap&quot;&gt;&lt;code&gt;cy.wrap()&lt;/code&gt;&lt;/a&gt; now works. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/114&quot;&gt;#114&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;../../api/commands/wrap&quot;&gt; &lt;code&gt;cy.wrap()&lt;/code&gt; &lt;/a&gt;之后链接更多cy命令现在可以使用。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/114&quot;&gt;＃114&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9fd28c1d5a7993ba1e76db394b3c497fda73bb41" translate="yes" xml:space="preserve">
          <source>Chaining multiple assertions</source>
          <target state="translated">鏈結多個斷言</target>
        </trans-unit>
        <trans-unit id="2b6eea3213ea352f89364f5b731264b8ddbd83f1" translate="yes" xml:space="preserve">
          <source>Chains of Commands</source>
          <target state="translated">命令链</target>
        </trans-unit>
        <trans-unit id="ff38765fb13efaef738615a48a439f19a5cd83a9" translate="yes" xml:space="preserve">
          <source>Challenges</source>
          <target state="translated">Challenges</target>
        </trans-unit>
        <trans-unit id="e9d5957fd0828bce48abe3b5750dbacb90724b17" translate="yes" xml:space="preserve">
          <source>Change &lt;code&gt;headers&lt;/code&gt;</source>
          <target state="translated">更改 &lt;code&gt;headers&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b9702c122dfeba4337afc89a1f47864c80a57678" translate="yes" xml:space="preserve">
          <source>Change Event</source>
          <target state="translated">更改事件</target>
        </trans-unit>
        <trans-unit id="cb7dc796807b9ab5022a33275f9ee3c8e69c1814" translate="yes" xml:space="preserve">
          <source>Change defaults for &lt;a href=&quot;route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">更改&lt;a href=&quot;route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; 的&lt;/a&gt;默认值</target>
        </trans-unit>
        <trans-unit id="4e2c7472c7f118d13b6615c813ef5f3bb88bbfde" translate="yes" xml:space="preserve">
          <source>Change encoding of Image fixture</source>
          <target state="translated">改变图像夹具的编码</target>
        </trans-unit>
        <trans-unit id="fd1b85264fcbc4d17611b365be82d47f08fcd7f2" translate="yes" xml:space="preserve">
          <source>Change print media</source>
          <target state="translated">改变印刷媒体</target>
        </trans-unit>
        <trans-unit id="a19816936e7591f2ed567c405afffb827b72b2c2" translate="yes" xml:space="preserve">
          <source>Change project access</source>
          <target state="translated">更改项目访问权限</target>
        </trans-unit>
        <trans-unit id="4d8a452dd61108c4f9903188f2226e4895ac11ea" translate="yes" xml:space="preserve">
          <source>Change subject</source>
          <target state="translated">改变主题</target>
        </trans-unit>
        <trans-unit id="a2264852d7b841eaadc2180f020ff98d66665845" translate="yes" xml:space="preserve">
          <source>Change the DOM using &lt;code&gt;onBeforeScreenshot&lt;/code&gt; and &lt;code&gt;onAfterScreenshot&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;onBeforeScreenshot&lt;/code&gt; 和 &lt;code&gt;onAfterScreenshot&lt;/code&gt; 更改DOM</target>
        </trans-unit>
        <trans-unit id="f2dbfe168f59b09cdd3726a94e135012a9e0f249" translate="yes" xml:space="preserve">
          <source>Change the default delay for all routes</source>
          <target state="translated">更改所有路由的默认延迟</target>
        </trans-unit>
        <trans-unit id="f38779ae91156a63e5e148af488114e5555ae1b9" translate="yes" xml:space="preserve">
          <source>Change the default response headers for all routes</source>
          <target state="translated">更改所有路由的默认响应头</target>
        </trans-unit>
        <trans-unit id="166c9a2aabc185e0327b5e474ad649f10cfff354" translate="yes" xml:space="preserve">
          <source>Change the default selector strategy</source>
          <target state="translated">更改默认的选择器策略</target>
        </trans-unit>
        <trans-unit id="56c70055acbcb99d1f993ba5b54f607850d23ecf" translate="yes" xml:space="preserve">
          <source>Change the default timeout</source>
          <target state="translated">更改默认超时</target>
        </trans-unit>
        <trans-unit id="d91b15d72bf7b781f4f7f4eb99724ab2ed3f45f0" translate="yes" xml:space="preserve">
          <source>Change the default whitelisting</source>
          <target state="translated">更改默认白名单</target>
        </trans-unit>
        <trans-unit id="62ef1f9374437dfd6cc2b229251b2231dfd04e7b" translate="yes" xml:space="preserve">
          <source>Change the orientation to landscape</source>
          <target state="translated">改变方向为横向</target>
        </trans-unit>
        <trans-unit id="23f98c58cc44051fdbfdcba5fd6ae2a5007e02a3" translate="yes" xml:space="preserve">
          <source>Change the timeout</source>
          <target state="translated">更改超时</target>
        </trans-unit>
        <trans-unit id="a70a7add1eb506ed4604875dbced1b0852644b98" translate="yes" xml:space="preserve">
          <source>Change the values of your configuration options from within tests</source>
          <target state="translated">在测试中更改配置选项的值。</target>
        </trans-unit>
        <trans-unit id="760ddcbbe7326d7e60cf68e623be61a82b0e2e29" translate="yes" xml:space="preserve">
          <source>Change who can access your Cypress project</source>
          <target state="translated">改变谁可以访问你的Cypress项目</target>
        </trans-unit>
        <trans-unit id="71db0d5459437ab8a73c7cb7fb2e9838aab1352f" translate="yes" xml:space="preserve">
          <source>Changed &lt;code&gt;Linux&lt;/code&gt; build strategy which fixes not saving the internal &lt;code&gt;.cy cache&lt;/code&gt;. Also fixes not being able to update from the GUI. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/66&quot;&gt;#66&lt;/a&gt;.</source>
          <target state="translated">更改了 &lt;code&gt;Linux&lt;/code&gt; 构建策略，该策略修复了不保存内部 &lt;code&gt;.cy cache&lt;/code&gt; 。还修复了无法从GUI更新的问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/66&quot;&gt;＃66&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="002b928ed5585ac0c9d0ff7adc244b789bb0beee" translate="yes" xml:space="preserve">
          <source>Changed default &lt;a href=&quot;configuration#Timeouts&quot;&gt;&lt;code&gt;pageLoadTimeout&lt;/code&gt;&lt;/a&gt; from &lt;code&gt;30000&lt;/code&gt; to &lt;code&gt;60000&lt;/code&gt;.</source>
          <target state="translated">将默认的&lt;a href=&quot;configuration#Timeouts&quot;&gt; &lt;code&gt;pageLoadTimeout&lt;/code&gt; &lt;/a&gt;从 &lt;code&gt;30000&lt;/code&gt; 更改为 &lt;code&gt;60000&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="96e3651e54fb00eae4cdfca3b79c948c8407ab99" translate="yes" xml:space="preserve">
          <source>Changed default &lt;a href=&quot;configuration#Timeouts&quot;&gt;&lt;code&gt;responseTimeout&lt;/code&gt;&lt;/a&gt; from &lt;code&gt;20000&lt;/code&gt; to &lt;code&gt;30000&lt;/code&gt;.</source>
          <target state="translated">将默认的&lt;a href=&quot;configuration#Timeouts&quot;&gt; &lt;code&gt;responseTimeout&lt;/code&gt; &lt;/a&gt;从 &lt;code&gt;20000&lt;/code&gt; 更改为 &lt;code&gt;30000&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5980ecc2994212ae97d9590a418df179431f268c" translate="yes" xml:space="preserve">
          <source>Changed default port from &lt;code&gt;3000&lt;/code&gt; to &lt;code&gt;2020&lt;/code&gt; to avoid standard port conflicts with commonly used back ends. Afterall, using Cypress is testing with 2020 vision. ;-)</source>
          <target state="translated">将默认端口从 &lt;code&gt;3000&lt;/code&gt; 更改为 &lt;code&gt;2020&lt;/code&gt; ,以避免标准端口与常用后端冲突。毕竟，使用赛普拉斯正在测试2020年愿景。;-)</target>
        </trans-unit>
        <trans-unit id="ffe9065d2640d272843465bb16ea3a38ef177621" translate="yes" xml:space="preserve">
          <source>Changed return of &lt;a href=&quot;../../api/commands/clearcookies&quot;&gt;&lt;code&gt;cy.clearCookies()&lt;/code&gt;&lt;/a&gt; to return null (previously was returning Cookie that was cleared).</source>
          <target state="translated">将&lt;a href=&quot;../../api/commands/clearcookies&quot;&gt; &lt;code&gt;cy.clearCookies()&lt;/code&gt; &lt;/a&gt;的return 更改为返回null（以前是返回已清除的Cookie）。</target>
        </trans-unit>
        <trans-unit id="ed16957486bec94f03a359b34fe4fa8d84c626df" translate="yes" xml:space="preserve">
          <source>Changed return of &lt;a href=&quot;../../api/commands/getcookies&quot;&gt;&lt;code&gt;cy.getCookies()&lt;/code&gt;&lt;/a&gt; to return an array of cookies, each with properties include name, value, etc.</source>
          <target state="translated">将&lt;a href=&quot;../../api/commands/getcookies&quot;&gt; &lt;code&gt;cy.getCookies()&lt;/code&gt; &lt;/a&gt;的返回值更改为返回一个cookie数组，每个cookie的属性包括名称，值等。</target>
        </trans-unit>
        <trans-unit id="b9d187a27f74ad153f456df89c8ffd6ae4842fc8" translate="yes" xml:space="preserve">
          <source>Changed scrolling elements into view to use top strategy instead of bottom which fixes times where the middle of an element was not yet in he viewport. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/42&quot;&gt;#42&lt;/a&gt;.</source>
          <target state="translated">将滚动元素更改为视图，以使用顶部策略而不是底部策略，从而修复了视口中元素中间尚不存在的时间。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/42&quot;&gt;＃42&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="56a626b11951be7360d0da6dc57085d8f803fa53" translate="yes" xml:space="preserve">
          <source>Changed the &lt;a href=&quot;https://github.com/cypress-io/cypress/tree/develop/packages/desktop-gui&quot;&gt;Test Runner&lt;/a&gt; to use &lt;code&gt;JWT&lt;/code&gt; for authorization. &lt;strong&gt;You will have to log in again&lt;/strong&gt;.</source>
          <target state="translated">将&lt;a href=&quot;https://github.com/cypress-io/cypress/tree/develop/packages/desktop-gui&quot;&gt;测试运行程序&lt;/a&gt;更改为使用 &lt;code&gt;JWT&lt;/code&gt; 进行授权。&lt;strong&gt;您将不得不再次登录&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="c07c367bdf8a3831c57704eca86fd8443094c7a0" translate="yes" xml:space="preserve">
          <source>Changed url strategy for sending down &lt;code&gt;spec&lt;/code&gt; files.</source>
          <target state="translated">更改了用于发送 &lt;code&gt;spec&lt;/code&gt; 文件的URL策略。</target>
        </trans-unit>
        <trans-unit id="164b3d4809f98d0458414f1bf9cf3c9dcba16bb5" translate="yes" xml:space="preserve">
          <source>Changelog</source>
          <target state="translated">Changelog</target>
        </trans-unit>
        <trans-unit id="8aa57de6dce6ee1c35c6aba7426503281876b258" translate="yes" xml:space="preserve">
          <source>Changes</source>
          <target state="translated">Changes</target>
        </trans-unit>
        <trans-unit id="47cf14fbbe4e51d10d131aad5d8ffaa121098222" translate="yes" xml:space="preserve">
          <source>Changes the Cypress binary cache location</source>
          <target state="translated">改变赛普拉斯二进制缓存的位置</target>
        </trans-unit>
        <trans-unit id="c3627dab723119265222862e8a9135ba0363246c" translate="yes" xml:space="preserve">
          <source>Changes the hosted url to match that of the application under test.</source>
          <target state="translated">更改托管的url,使其与被测应用程序的url相匹配。</target>
        </trans-unit>
        <trans-unit id="1f068e5ae02669bb727f7da73d357bc2e22aa692" translate="yes" xml:space="preserve">
          <source>Changing the Browserify options lets you:</source>
          <target state="translated">改变Browserify选项可以让你。</target>
        </trans-unit>
        <trans-unit id="f448405e7e77b87d4af0899aad87267f2b9de4ea" translate="yes" xml:space="preserve">
          <source>Check a custom property</source>
          <target state="translated">检查自定义属性</target>
        </trans-unit>
        <trans-unit id="e50fa5ae6d6d5bcdbff5e8ef413067e159d7fccc" translate="yes" xml:space="preserve">
          <source>Check all checkboxes</source>
          <target state="translated">勾选所有复选框</target>
        </trans-unit>
        <trans-unit id="d32e13a4dc0d0ff2ccb96d057fcab5edef3cfdc4" translate="yes" xml:space="preserve">
          <source>Check an invisible checkbox</source>
          <target state="translated">勾选一个不可见的复选框</target>
        </trans-unit>
        <trans-unit id="61f4e80ba9d1f4a5d58f0877fb993108dc025089" translate="yes" xml:space="preserve">
          <source>Check checkbox(es) or radio(s).</source>
          <target state="translated">选中复选框或单选框。</target>
        </trans-unit>
        <trans-unit id="4f3560bedeca72f288dc3b5f1567d03a628ac068" translate="yes" xml:space="preserve">
          <source>Check location for query params and pathname</source>
          <target state="translated">检查查询参数和路径名的位置</target>
        </trans-unit>
        <trans-unit id="4768131d00ff541288147c29afe6d12a0f388e57" translate="yes" xml:space="preserve">
          <source>Check other sources of truth (like your server or database).</source>
          <target state="translated">检查其他真相来源(如你的服务器或数据库)。</target>
        </trans-unit>
        <trans-unit id="82ec9274688488306135ddaf48212b3e595053fb" translate="yes" xml:space="preserve">
          <source>Check out our &amp;lsquo;XHR Web Forms&amp;rsquo; example recipe using &lt;code&gt;cy.route()&lt;/code&gt; to simulate a &lt;code&gt;503&lt;/code&gt; on &lt;code&gt;POST&lt;/code&gt; to login</source>
          <target state="translated">使用 &lt;code&gt;cy.route()&lt;/code&gt; 查看我们的&amp;ldquo; XHR Web表单&amp;rdquo;示例配方，以在 &lt;code&gt;POST&lt;/code&gt; 上模拟 &lt;code&gt;503&lt;/code&gt; 进行登录</target>
        </trans-unit>
        <trans-unit id="ae68238d2931f0991c3b6b6f22786eb45b69fa69" translate="yes" xml:space="preserve">
          <source>Check out our &lt;a href=&quot;../../api/plugins/after-screenshot-api&quot;&gt;After Screenshot API docs&lt;/a&gt; which describe how to use this event.</source>
          <target state="translated">请查看我们的&lt;a href=&quot;../../api/plugins/after-screenshot-api&quot;&gt;After Screenshot API文档&lt;/a&gt;，其中介绍了如何使用此事件。</target>
        </trans-unit>
        <trans-unit id="286570bd4a3d3cbc1beb60886c8c179abd17a319" translate="yes" xml:space="preserve">
          <source>Check out our &lt;a href=&quot;../../api/plugins/browser-launch-api&quot;&gt;Browser Launch API docs&lt;/a&gt; which describe how to use this event.</source>
          <target state="translated">查看我们的&lt;a href=&quot;../../api/plugins/browser-launch-api&quot;&gt;浏览器启动API文档&lt;/a&gt;，其中介绍了如何使用此事件。</target>
        </trans-unit>
        <trans-unit id="c51d0d90ced866ef2875f4023c58a1fa429c5dcf" translate="yes" xml:space="preserve">
          <source>Check out our &lt;a href=&quot;../../api/plugins/configuration-api&quot;&gt;Configuration API docs&lt;/a&gt; which describe how to use this event.</source>
          <target state="translated">请查看我们的&lt;a href=&quot;../../api/plugins/configuration-api&quot;&gt;Configuration API文档&lt;/a&gt;，其中描述了如何使用此事件。</target>
        </trans-unit>
        <trans-unit id="bf5361a399e5c488a33498468764383ba37c9adb" translate="yes" xml:space="preserve">
          <source>Check out our &lt;a href=&quot;../../api/plugins/preprocessors-api&quot;&gt;File Preprocessor API docs&lt;/a&gt; which describe how to use this event.</source>
          <target state="translated">查看我们的&lt;a href=&quot;../../api/plugins/preprocessors-api&quot;&gt;文件预处理器API文档&lt;/a&gt;，其中描述了如何使用此事件。</target>
        </trans-unit>
        <trans-unit id="b0bc22ca4006e68be0287faab8c505b2a983cac7" translate="yes" xml:space="preserve">
          <source>Check out our &lt;a href=&quot;../guides/parallelization&quot;&gt;guide on parallelizing runs&lt;/a&gt; and when to use the &lt;a href=&quot;../guides/command-line#cypress-run-ci-build-id-lt-id-gt&quot;&gt;&lt;code&gt;--ci-build-id&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">查看我们&lt;a href=&quot;../guides/parallelization&quot;&gt;关于并行运行&lt;/a&gt;以及何时使用&lt;a href=&quot;../guides/command-line#cypress-run-ci-build-id-lt-id-gt&quot;&gt; &lt;code&gt;--ci-build-id&lt;/code&gt; &lt;/a&gt;选项的指南。</target>
        </trans-unit>
        <trans-unit id="4372d5c1ff331c99e413a0c0158593500e7f4d08" translate="yes" xml:space="preserve">
          <source>Check out our &lt;a href=&quot;../guides/tooling/plugins-guide&quot;&gt;Plugins Guide&lt;/a&gt; or our &lt;a href=&quot;../api/plugins/writing-a-plugin&quot;&gt;API docs&lt;/a&gt; for writing a plugin.</source>
          <target state="translated">查看我们的&lt;a href=&quot;../guides/tooling/plugins-guide&quot;&gt;插件指南&lt;/a&gt;或&lt;a href=&quot;../api/plugins/writing-a-plugin&quot;&gt;API文档&lt;/a&gt;以编写插件。</target>
        </trans-unit>
        <trans-unit id="c0777442410cab66b3f5e9f950dca694e91849fa" translate="yes" xml:space="preserve">
          <source>Check out our &lt;a href=&quot;https://github.com/cypress-io/eslint-plugin-cypress&quot;&gt;Cypress ESLint plugin&lt;/a&gt;.</source>
          <target state="translated">查看我们的&lt;a href=&quot;https://github.com/cypress-io/eslint-plugin-cypress&quot;&gt;赛普拉斯ESLint插件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="52ba348f92ec1a2bf83ba118a90e17c390a5fab7" translate="yes" xml:space="preserve">
          <source>Check out our example recipe extending chai with new assertions.</source>
          <target state="translated">看看我们的示例配方用新的断言扩展了茶叶。</target>
        </trans-unit>
        <trans-unit id="e9b767f3449382c93b6af483e67e9ea4f4103526" translate="yes" xml:space="preserve">
          <source>Check out our example recipe of logging in by typing username and password in HTML web forms</source>
          <target state="translated">查看我们在HTML网页表单中输入用户名和密码进行登录的示例配方。</target>
        </trans-unit>
        <trans-unit id="b1d210aaba6af88f042bef8e02a138a36c9e3ba2" translate="yes" xml:space="preserve">
          <source>Check out our example recipe on testing &lt;code&gt;window.fetch&lt;/code&gt; using &lt;code&gt;.its()&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;.its()&lt;/code&gt; 在测试 &lt;code&gt;window.fetch&lt;/code&gt; 上查看我们的示例配方</target>
        </trans-unit>
        <trans-unit id="0070f68ee4c88cb3cac34493132a51937e6c55ad" translate="yes" xml:space="preserve">
          <source>Check out our example recipe on testing hover and working with hidden elements</source>
          <target state="translated">查看我们关于测试悬停和使用隐藏元素的示例配方。</target>
        </trans-unit>
        <trans-unit id="06702834e58a81747257fb0ff404f4646b17c53c" translate="yes" xml:space="preserve">
          <source>Check out our example recipe testing spying, stubbing and time</source>
          <target state="translated">查看我们的示例配方,测试窥探、存根和时间。</target>
        </trans-unit>
        <trans-unit id="7cb3ce610a9707b35468d1778ec5be6b8b67d2c3" translate="yes" xml:space="preserve">
          <source>Check out our example recipe testing spying, stubbing and time.</source>
          <target state="translated">查看我们的示例配方测试谍报、支招和时间。</target>
        </trans-unit>
        <trans-unit id="5c934a22639debdd62befc7a82f85a5b57fc1fa6" translate="yes" xml:space="preserve">
          <source>Check out our example recipe triggering mouse and drag events to test drag and drop</source>
          <target state="translated">查看我们的示例配方,触发鼠标和拖动事件,以测试拖放。</target>
        </trans-unit>
        <trans-unit id="298273458e18e8e4608b67253b99d4e09c98258c" translate="yes" xml:space="preserve">
          <source>Check out our example recipe using &lt;code&gt;cy.fixture()&lt;/code&gt; to bootstrap data for our application.</source>
          <target state="translated">使用 &lt;code&gt;cy.fixture()&lt;/code&gt; 检查示例食谱，以引导应用程序的数据。</target>
        </trans-unit>
        <trans-unit id="a0b7d14f192ac95e2f293545c9c9da33dd7af366" translate="yes" xml:space="preserve">
          <source>Check out our example recipe using &lt;code&gt;cy.request()&lt;/code&gt; for HTML web forms</source>
          <target state="translated">使用 &lt;code&gt;cy.request()&lt;/code&gt; 查看HTML网页表单的示例食谱</target>
        </trans-unit>
        <trans-unit id="8765838968fb1c10fc04109747e1b70375eb877a" translate="yes" xml:space="preserve">
          <source>Check out our example recipe using &lt;code&gt;cy.route()&lt;/code&gt; to POST for login in HTML web forms</source>
          <target state="translated">查看我们使用 &lt;code&gt;cy.route()&lt;/code&gt; 到POST的示例食谱以登录HTML Web表单</target>
        </trans-unit>
        <trans-unit id="b5faae065c8bab1b4694249567a38a6935110d0c" translate="yes" xml:space="preserve">
          <source>Check out our example recipe where we use &lt;code&gt;cy.invoke('removeAttr', 'target')&lt;/code&gt; to test clicking on a link without opening in a new tab</source>
          <target state="translated">看看我们的示例食谱，其中我们使用 &lt;code&gt;cy.invoke('removeAttr', 'target')&lt;/code&gt; 测试链接的点击，而无需在新标签页中打开</target>
        </trans-unit>
        <trans-unit id="16bb5114dd6875c392e5649e6af9c792cea778cd" translate="yes" xml:space="preserve">
          <source>Check out our example recipe where we use &lt;code&gt;cy.invoke('show')&lt;/code&gt; and &lt;code&gt;cy.invoke('trigger')&lt;/code&gt; to click an element that is only visible on hover</source>
          <target state="translated">看看我们的示例食谱，其中我们使用 &lt;code&gt;cy.invoke('show')&lt;/code&gt; 和 &lt;code&gt;cy.invoke('trigger')&lt;/code&gt; 单击仅在悬停时可见的元素</target>
        </trans-unit>
        <trans-unit id="c6f3335e78ca0eeab36fff282ecf4f376fe5a662" translate="yes" xml:space="preserve">
          <source>Check out our example recipe where we use &lt;code&gt;cy.invoke('text')&lt;/code&gt; to test against HTML content in &amp;lsquo;Bootstrapping your App&amp;rsquo;</source>
          <target state="translated">看看我们的示例食谱，其中我们使用 &lt;code&gt;cy.invoke('text')&lt;/code&gt; 对&amp;ldquo;自举应用程序&amp;rdquo;中的HTML内容进行测试</target>
        </trans-unit>
        <trans-unit id="cb040939bb0d48e5c9567dae081783d1f9b6b468" translate="yes" xml:space="preserve">
          <source>Check out our example recipes for &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html&quot;&gt;unit testing&lt;/a&gt; and &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Unit-Testing&quot;&gt;unit testing React components&lt;/a&gt;.</source>
          <target state="translated">查看用于&lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html&quot;&gt;单元测试&lt;/a&gt;和&lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Unit-Testing&quot;&gt;React组件的&lt;/a&gt;单元测试的示例配方。</target>
        </trans-unit>
        <trans-unit id="bd3e75b3e26cef8f50ab48afe08c2033c68ea7db" translate="yes" xml:space="preserve">
          <source>Check out our example recipes using &lt;code&gt;cy.getCookie()&lt;/code&gt; to test &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Logging-In&quot;&gt;logging in using HTML web forms&lt;/a&gt;, &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Logging-In&quot;&gt;logging in using XHR web forms&lt;/a&gt; and &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Logging-In&quot;&gt;logging in with single sign on&lt;/a&gt;</source>
          <target state="translated">看看使用我们的例子食谱 &lt;code&gt;cy.getCookie()&lt;/code&gt; 来测试&lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Logging-In&quot;&gt;记录中使用HTML网页形式&lt;/a&gt;，&lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Logging-In&quot;&gt;在使用XHR Web表单记录&lt;/a&gt;和&lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Logging-In&quot;&gt;日志记录与单点登录&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="144d8f82ec26f3470d0c20a09047cb7ce3b02584" translate="yes" xml:space="preserve">
          <source>Check out our example recipes using &lt;code&gt;cy.visit()&lt;/code&gt;&amp;lsquo;s &lt;code&gt;onBeforeLoad&lt;/code&gt; option to:</source>
          <target state="translated">使用 &lt;code&gt;cy.visit()&lt;/code&gt; 的 &lt;code&gt;onBeforeLoad&lt;/code&gt; 选项查看我们的示例食谱：</target>
        </trans-unit>
        <trans-unit id="c65343a47883a3d046d980e83838ae5025ee993f" translate="yes" xml:space="preserve">
          <source>Check out our guide for working with spies, stubs, and clocks.</source>
          <target state="translated">看看我们的指南,如何处理间谍、存根和时钟。</target>
        </trans-unit>
        <trans-unit id="bbf99657b620f66bb8be3ff60e3326da8ce19528" translate="yes" xml:space="preserve">
          <source>Check out our guide to writing and organizing tests.</source>
          <target state="translated">查看我们的写作和组织测试指南。</target>
        </trans-unit>
        <trans-unit id="76902887dbb29462ab50a1f72e3e4927bfa56b7f" translate="yes" xml:space="preserve">
          <source>Check out our recipe using &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Fundamentals&quot;&gt;ES2015 and CommonJS modules&lt;/a&gt;.</source>
          <target state="translated">查看使用&lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Fundamentals&quot;&gt;ES2015和CommonJS模块的&lt;/a&gt;食谱。</target>
        </trans-unit>
        <trans-unit id="8cfe59349c9cb95a325115251fac516351c1ca53" translate="yes" xml:space="preserve">
          <source>Check that Chrome specific styles are applied</source>
          <target state="translated">检查是否应用了Chrome的特定样式</target>
        </trans-unit>
        <trans-unit id="121b5622e02d6e75f99cc9af32ea26833a7911ad" translate="yes" xml:space="preserve">
          <source>Check the checkboxes with the values &amp;lsquo;ga&amp;rsquo; and &amp;lsquo;ca&amp;rsquo;</source>
          <target state="translated">选中带有&amp;ldquo; ga&amp;rdquo;和&amp;ldquo; ca&amp;rdquo;值的​​复选框</target>
        </trans-unit>
        <trans-unit id="55921b8d3e5c24dfbea1f13d63a77430aaa43ba6" translate="yes" xml:space="preserve">
          <source>Check the element with id of &amp;lsquo;saveUserName&amp;rsquo;</source>
          <target state="translated">检查ID为&amp;ldquo; saveUserName&amp;rdquo;的元素</target>
        </trans-unit>
        <trans-unit id="3a547dcb1fef8a5633745d0e1bfe1ce7cc91ffb8" translate="yes" xml:space="preserve">
          <source>Check them out in &lt;a href=&quot;../references/configuration&quot;&gt;Configuration&lt;/a&gt;!</source>
          <target state="translated">在&lt;a href=&quot;../references/configuration&quot;&gt;配置中&lt;/a&gt;检查它们！</target>
        </trans-unit>
        <trans-unit id="def993bb4bf6ee1b395f22333500dd821db19f5e" translate="yes" xml:space="preserve">
          <source>Check your Developer Tools Console for the actual error - it should be printed there.</source>
          <target state="translated">检查你的开发者工具控制台,查看实际的错误--应该会在那里打印出来。</target>
        </trans-unit>
        <trans-unit id="0e541a2a7a257b0faf46be512c0eb02d487b617a" translate="yes" xml:space="preserve">
          <source>Checking your email to see if your server sent a &amp;ldquo;forgot password&amp;rdquo; email.</source>
          <target state="translated">检查您的电子邮件以查看服务器是否发送了&amp;ldquo;忘记密码&amp;rdquo;电子邮件。</target>
        </trans-unit>
        <trans-unit id="d3e9cd47db0cd4d5d3988727ebbd002b5963bffe" translate="yes" xml:space="preserve">
          <source>Child Commands</source>
          <target state="translated">儿童指令</target>
        </trans-unit>
        <trans-unit id="a645ef9de2489c3237beef1a5012a7941d8fffec" translate="yes" xml:space="preserve">
          <source>Child commands are always chained off of a &lt;strong&gt;parent&lt;/strong&gt; command, or another &lt;strong&gt;child&lt;/strong&gt; command.</source>
          <target state="translated">子命令始终与&lt;strong&gt;父&lt;/strong&gt;命令或另一个&lt;strong&gt;子&lt;/strong&gt;命令链接在一起。</target>
        </trans-unit>
        <trans-unit id="21def181d7294faef1558f010f6a68c1edc82a8c" translate="yes" xml:space="preserve">
          <source>Choose to associate &lt;strong&gt;All repositories&lt;/strong&gt; or only select GitHub repositories with your Cypress GitHub App installation.</source>
          <target state="translated">选择将&lt;strong&gt;所有存储库&lt;/strong&gt;相关联，或仅将GitHub存储库与Cypress GitHub App安装相关联。</target>
        </trans-unit>
        <trans-unit id="6d7d90f6786892c846565de2483085c6bcc3d6cb" translate="yes" xml:space="preserve">
          <source>Choose to not fail on non-zero exit and assert on code and stderr</source>
          <target state="translated">选择在非零退出时不失败,在代码和stderr上断言。</target>
        </trans-unit>
        <trans-unit id="cd582387a11c5e151923c7fd85abdb2884edf320" translate="yes" xml:space="preserve">
          <source>Choose whether this project is Public or Private.</source>
          <target state="translated">选择这个项目是公共项目还是私人项目。</target>
        </trans-unit>
        <trans-unit id="aa8351b817c778f9ed8a7afc280131e97fb365f6" translate="yes" xml:space="preserve">
          <source>Choose who owns the project. You can personally own it or select an organization you&amp;rsquo;ve created. If you do not have any organizations, click &lt;strong&gt;Create organization&lt;/strong&gt;. Organizations work just like they do in GitHub. They enable you to separate your personal and work projects. &lt;a href=&quot;organizations&quot;&gt;Read more about organizations&lt;/a&gt;.</source>
          <target state="translated">选择谁拥有项目。您可以亲自拥有它，也可以选择您创建的组织。如果您没有任何组织，请点击&lt;strong&gt;创建组织&lt;/strong&gt;。组织的工作就像在GitHub中一样。它们使您能够将个人和工作项目分开。&lt;a href=&quot;organizations&quot;&gt;阅读有关组织的更多信息&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="218e75c7a912404b048fff0747e40108873b6334" translate="yes" xml:space="preserve">
          <source>Chrome</source>
          <target state="translated">Chrome</target>
        </trans-unit>
        <trans-unit id="f4fa3ab76e5e90db09cca798babcdad498d4e5a5" translate="yes" xml:space="preserve">
          <source>Chrome Browsers</source>
          <target state="translated">浏览器</target>
        </trans-unit>
        <trans-unit id="ebacd7ba7696aa6ea2a56950abaffb0cdd6bb789" translate="yes" xml:space="preserve">
          <source>Chrome extension whitelisting</source>
          <target state="translated">Chrome 扩展程序白名单</target>
        </trans-unit>
        <trans-unit id="259443eb4b18369de67344ac935d9792e6e16d38" translate="yes" xml:space="preserve">
          <source>Chrome, Chromium, or Canary</source>
          <target state="translated">Chrome、Chromium或Canary</target>
        </trans-unit>
        <trans-unit id="32166e83eed3818d45d2cbecbe2e6cf85528e265" translate="yes" xml:space="preserve">
          <source>Chromium</source>
          <target state="translated">Chromium</target>
        </trans-unit>
        <trans-unit id="1cc7820a08e28aa22dd2e6db74a83b75abc240f5" translate="yes" xml:space="preserve">
          <source>Circle</source>
          <target state="translated">Circle</target>
        </trans-unit>
        <trans-unit id="743a2d5609a7296d3d734c6e0b1f6d37a8c23170" translate="yes" xml:space="preserve">
          <source>CircleCI</source>
          <target state="translated">CircleCI</target>
        </trans-unit>
        <trans-unit id="6d5178edf78ebc81db787a70d73b948726802a59" translate="yes" xml:space="preserve">
          <source>CircleCI Cypress Orb</source>
          <target state="translated">CircleCI柏树球</target>
        </trans-unit>
        <trans-unit id="0bda454dd959b1a0bf2d16693184fd413629861a" translate="yes" xml:space="preserve">
          <source>Clarified on errors related to not being able to run in CI. Previously there was a &amp;ldquo;catch all&amp;rdquo; error indicating your Cypress API Key was invalid. This was oftentimes incorrect. More specific errors have been added.</source>
          <target state="translated">澄清了与无法在CI中运行有关的错误。以前有一个&amp;ldquo;全部捕获&amp;rdquo;错误，表明您的赛普拉斯API密钥无效。这通常是不正确的。更具体的错误已添加。</target>
        </trans-unit>
        <trans-unit id="f0d4ea6c62e18a1e68830b556b756bc25664729b" translate="yes" xml:space="preserve">
          <source>Clarified the &amp;ldquo;Default Message&amp;rdquo; page when you have not &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; your application yet.</source>
          <target state="translated">当您还没有&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;您的应用程序时，澄清了&amp;ldquo;默认消息&amp;rdquo;页面。</target>
        </trans-unit>
        <trans-unit id="41ff354b2b330bd1f8a0587675e43cb32a731f33" translate="yes" xml:space="preserve">
          <source>Class</source>
          <target state="translated">Class</target>
        </trans-unit>
        <trans-unit id="83d4ab2218e544353bc7c879f0f5971c5c7e5f33" translate="yes" xml:space="preserve">
          <source>Cleaned up the URL by removing some unused content.</source>
          <target state="translated">删除了一些未使用的内容,清理了URL。</target>
        </trans-unit>
        <trans-unit id="a6a8e81a4fc837ec2fc226c8ea0d75c7628811be" translate="yes" xml:space="preserve">
          <source>Clear App Data</source>
          <target state="translated">清除应用程序数据</target>
        </trans-unit>
        <trans-unit id="8138a3e59340c16a058710e4394584afda1a8a3e" translate="yes" xml:space="preserve">
          <source>Clear Cypress cache</source>
          <target state="translated">清除Cypress缓存</target>
        </trans-unit>
        <trans-unit id="a6db0cada346552ec5eae029c9e1051d55fcf5e6" translate="yes" xml:space="preserve">
          <source>Clear a cookie after logging in</source>
          <target state="translated">登录后清除cookie</target>
        </trans-unit>
        <trans-unit id="c12d3b38c18c36e38c58610a06ad7d4f4f8db7e5" translate="yes" xml:space="preserve">
          <source>Clear a specific browser cookie.</source>
          <target state="translated">清除特定的浏览器cookie。</target>
        </trans-unit>
        <trans-unit id="3ca258140fb71fc08b2e62d3d742fb818922dc81" translate="yes" xml:space="preserve">
          <source>Clear all browser cookies for current domain and subdomain.</source>
          <target state="translated">清除当前域名和子域名的所有浏览器cookies。</target>
        </trans-unit>
        <trans-unit id="9ef0896259882d1abdaf804bdc64b7450bc968d9" translate="yes" xml:space="preserve">
          <source>Clear all cookies after logging in</source>
          <target state="translated">登录后清除所有cookies</target>
        </trans-unit>
        <trans-unit id="6a071e15fb440304023d8103523c431894ca230f" translate="yes" xml:space="preserve">
          <source>Clear all localStorage</source>
          <target state="translated">清除所有localStorage</target>
        </trans-unit>
        <trans-unit id="487f99802f33ae77928cf631445338abdeb3542b" translate="yes" xml:space="preserve">
          <source>Clear all localStorage matching &lt;code&gt;/app-/&lt;/code&gt; RegExp</source>
          <target state="translated">清除所有与 &lt;code&gt;/app-/&lt;/code&gt; RegExp 匹配的localStorage</target>
        </trans-unit>
        <trans-unit id="87462777e65e17c8721efd27787a17e45f675eb3" translate="yes" xml:space="preserve">
          <source>Clear data in localStorage for current domain and subdomain.</source>
          <target state="translated">清除当前域和子域的localStorage中的数据。</target>
        </trans-unit>
        <trans-unit id="b3b763845e3000c5d17c6b2c69eca72c64c397e8" translate="yes" xml:space="preserve">
          <source>Clear localStorage with the key &amp;lsquo;appName&amp;rsquo;</source>
          <target state="translated">使用键&amp;ldquo; appName&amp;rdquo;清除localStorage</target>
        </trans-unit>
        <trans-unit id="418791d7f5458588627ad5ef88fcbb506389e57a" translate="yes" xml:space="preserve">
          <source>Clear the contents of the Cypress cache. This is useful when you want Cypress to clear out all installed versions of Cypress that may be cached on your machine. After running this command, you will need to run &lt;code&gt;cypress install&lt;/code&gt; before running Cypress again.</source>
          <target state="translated">清除赛普拉斯缓存的内容。当您希望赛普拉斯清除所有可能缓存在您的计算机上的赛普拉斯安装版本时，这很有用。运行此命令后，需要先运行 &lt;code&gt;cypress install&lt;/code&gt; ,然后再运行Cypress。</target>
        </trans-unit>
        <trans-unit id="096b6f6e0e4881f86d8f079c46286c1b088fed27" translate="yes" xml:space="preserve">
          <source>Clear the input and type a new value</source>
          <target state="translated">清空输入并输入一个新的值</target>
        </trans-unit>
        <trans-unit id="e705e46ce8ca0eeadd70b31d6169e90a8aa809ae" translate="yes" xml:space="preserve">
          <source>Clear the value of an &lt;code&gt;input&lt;/code&gt; or &lt;code&gt;textarea&lt;/code&gt;.</source>
          <target state="translated">清除 &lt;code&gt;input&lt;/code&gt; 或 &lt;code&gt;textarea&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="9abd58c373f91bc8e076913f544b5f307d4214fc" translate="yes" xml:space="preserve">
          <source>Click &amp;ldquo;Next&amp;rdquo;</source>
          <target state="translated">点击下一步&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="598d69e1e4c2af4e1dc4e74321c3ce6681b167df" translate="yes" xml:space="preserve">
          <source>Click &amp;ldquo;Next&amp;rdquo; again</source>
          <target state="translated">再次点击&amp;ldquo;下一步&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="1b6215eab430a61828fd367ea9c12ef226542655" translate="yes" xml:space="preserve">
          <source>Click &amp;ldquo;Next&amp;rdquo; again, then &amp;lsquo;Resume&amp;rsquo;</source>
          <target state="translated">再次单击&amp;ldquo;下一步&amp;rdquo;，然后单击&amp;ldquo;继续&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="52ab6f1b8c88370737f264d45b627b49475818c1" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Create New Key&lt;/strong&gt;. A new key will be automatically generated for your project.</source>
          <target state="translated">单击&lt;strong&gt;创建新密钥&lt;/strong&gt;。将为您的项目自动生成一个新密钥。</target>
        </trans-unit>
        <trans-unit id="6061dade670fc2fa48f86af4e96c8d10313b7c09" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Delete&lt;/strong&gt; beside the record key you want to delete.</source>
          <target state="translated">单击要&lt;strong&gt;删除&lt;/strong&gt;的记录键旁边的删除。</target>
        </trans-unit>
        <trans-unit id="e00e0bffead7622e972ea8ef3df7b0b3d975d274" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Set up Project to Record&lt;/strong&gt;.</source>
          <target state="translated">单击&lt;strong&gt;设置要记录的项目&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="c340e5a9ab9c7a60a37dd0f3e5716c3c3abcc2fc" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Setup Project&lt;/strong&gt;.</source>
          <target state="translated">单击&lt;strong&gt;设置项目&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="94298b3a9fbede230280ca097e6943ce959fa1bc" translate="yes" xml:space="preserve">
          <source>Click &lt;strong&gt;Users&lt;/strong&gt;, then &lt;strong&gt;Invite User&lt;/strong&gt;. &lt;em&gt;Note: you must have the &lt;a href=&quot;#User-roles&quot;&gt;role of 'owner' or 'admin'&lt;/a&gt; to invite users.&lt;/em&gt;</source>
          <target state="translated">单击&amp;ldquo; &lt;strong&gt;用户&amp;rdquo;&lt;/strong&gt;，然后单击&amp;ldquo; &lt;strong&gt;邀请用户&amp;rdquo;&lt;/strong&gt;。&lt;em&gt;注意：您必须具有&lt;a href=&quot;#User-roles&quot;&gt;&amp;ldquo;所有者&amp;rdquo;或&amp;ldquo;管理员&amp;rdquo;角色&lt;/a&gt;才能邀请用户。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="92ef54400efe775b2ca14012b53ad3792e80d7da" translate="yes" xml:space="preserve">
          <source>Click a DOM element.</source>
          <target state="translated">点击一个DOM元素。</target>
        </trans-unit>
        <trans-unit id="5467898d66466265eb5e6b64ab4791eb71104d92" translate="yes" xml:space="preserve">
          <source>Click all buttons found on the page</source>
          <target state="translated">点击页面上的所有按钮</target>
        </trans-unit>
        <trans-unit id="419965f25c82bbbe5092bb182e2f07a13ea2fec4" translate="yes" xml:space="preserve">
          <source>Click events are now issued in the exact center of an element (taking into account 2d transforms) and provide the coordinates in the command console and in the actual event</source>
          <target state="translated">点击事件现在在元素的精确中心发出(考虑到二维变换),并在命令控制台和实际事件中提供坐标。</target>
        </trans-unit>
        <trans-unit id="3eefc209f30a5c33ca34d3dd8bc36144b5b8242b" translate="yes" xml:space="preserve">
          <source>Click events are now replicated &lt;em&gt;almost&lt;/em&gt; identically to the W3C click spec. They should behave for all intents and purposes, identically to real clicks in the browser.</source>
          <target state="translated">现在，点击事件的复制&lt;em&gt;几乎&lt;/em&gt;与W3C点击规范相同。它们应出于所有意图和目的而表现，与浏览器中的实际点击相同。</target>
        </trans-unit>
        <trans-unit id="1e6b04f01e1f5a0bc6cfdffc3d40e6fcee740b2c" translate="yes" xml:space="preserve">
          <source>Click events now display event information about the &lt;code&gt;mousedown&lt;/code&gt; / &lt;code&gt;mouseup&lt;/code&gt; / &lt;code&gt;click&lt;/code&gt; default action + propagation in the command console.</source>
          <target state="translated">单击事件现在在命令控制台中显示有关 &lt;code&gt;mousedown&lt;/code&gt; / &lt;code&gt;mouseup&lt;/code&gt; / &lt;code&gt;click&lt;/code&gt; 默认操作+传播的事件信息。</target>
        </trans-unit>
        <trans-unit id="bd422ee18fc1fb0b047f765afb20776ce449d5d5" translate="yes" xml:space="preserve">
          <source>Click events now take into account whether the associated element is being covered up by another element, and will retry or fail with an exact error message if the click was unable to be issued due to this reason.</source>
          <target state="translated">点击事件现在会考虑到关联的元素是否被另一个元素覆盖,如果因为这个原因无法发出点击,则会重试或失败,并给出确切的错误信息。</target>
        </trans-unit>
        <trans-unit id="3f3c88fcab7f5f3f182a08f90706ede6e6268f80" translate="yes" xml:space="preserve">
          <source>Click events will issue the click to the topmost element based on the click coordinates and not necessarily to the element you requested to e clicked (which simulates exactly how a real click works). If this happens it is noted in the command console and provides the &lt;code&gt;Actual Element Clicked&lt;/code&gt;.</source>
          <target state="translated">点击事件会根据点击坐标将点击发布到最上面的元素，而不一定是您请求点击的元素（精确模拟真实点击的工作原理）。如果发生这种情况，将在命令控制台中进行记录并提供&amp;ldquo; &lt;code&gt;Actual Element Clicked&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="36e220a74b271d8eb88adb9bf598b1f366ea7fbe" translate="yes" xml:space="preserve">
          <source>Click events will now intelligently provide &lt;code&gt;focus&lt;/code&gt; to the first focusable element on the stack at the click coordinates, or will give &lt;code&gt;focus&lt;/code&gt; to the window.</source>
          <target state="translated">点击事件将现在可以智能提供 &lt;code&gt;focus&lt;/code&gt; 在点击坐标堆栈中的第一聚焦元素，或将给予 &lt;code&gt;focus&lt;/code&gt; 的窗口。</target>
        </trans-unit>
        <trans-unit id="4304df7b3622bb75a1caddfde8624611ee0cf5a4" translate="yes" xml:space="preserve">
          <source>Click it.</source>
          <target state="translated">点击它。</target>
        </trans-unit>
        <trans-unit id="4d2ff8b106942392561b1a48333b5c5716140885" translate="yes" xml:space="preserve">
          <source>Click on it</source>
          <target state="translated">点击它</target>
        </trans-unit>
        <trans-unit id="b572ed50787e22e1a6e5dd0119b2848e714bc82a" translate="yes" xml:space="preserve">
          <source>Click on the &lt;strong&gt;Runs&lt;/strong&gt; tab of your project within the &lt;a href=&quot;../core-concepts/test-runner&quot;&gt;Test Runner&lt;/a&gt;.</source>
          <target state="translated">单击&amp;ldquo; &lt;a href=&quot;../core-concepts/test-runner&quot;&gt;测试&lt;/a&gt;&lt;strong&gt;运行器&amp;rdquo;&lt;/strong&gt;中项目的&amp;ldquo; &lt;strong&gt;运行&amp;rdquo;&lt;/strong&gt;选项卡。</target>
        </trans-unit>
        <trans-unit id="84160a3d588c297d3068218c5e5f6dfd8c536c64" translate="yes" xml:space="preserve">
          <source>Click on the element and its selector will appear at the top. From there, you can copy it to your clipboard () or print it to the console ().</source>
          <target state="translated">点击元素,其选择器将出现在顶部。从那里,你可以将其复制到剪贴板()或打印到控制台()。</target>
        </trans-unit>
        <trans-unit id="e9e8aca9ba1b3e7eee41815434377173d1d45726" translate="yes" xml:space="preserve">
          <source>Click the &amp;ldquo;Proxy Settings&amp;rdquo; section to expand it and view the proxy settings that Cypress is currently using.</source>
          <target state="translated">单击&amp;ldquo;代理设置&amp;rdquo;部分以展开它，并查看赛普拉斯当前正在使用的代理设置。</target>
        </trans-unit>
        <trans-unit id="363442ac59194a543947af27cbec8013bc3db051" translate="yes" xml:space="preserve">
          <source>Click the &amp;ldquo;Settings&amp;rdquo; tab.</source>
          <target state="translated">点击&amp;ldquo;设置&amp;rdquo;标签。</target>
        </trans-unit>
        <trans-unit id="3f3448b18fc56f113306514ebe1dd13d9d311959" translate="yes" xml:space="preserve">
          <source>Click the &lt;strong&gt;Install the Cypress GitHub App&lt;/strong&gt; button.</source>
          <target state="translated">点击&lt;strong&gt;Install the Cypress GitHub App&lt;/strong&gt;按钮。</target>
        </trans-unit>
        <trans-unit id="999575ef3960ae72d96b1dd0218e0e89fe9ccca9" translate="yes" xml:space="preserve">
          <source>Click the &lt;strong&gt;Install&lt;/strong&gt; button to complete the installation.</source>
          <target state="translated">单击&lt;strong&gt;安装&lt;/strong&gt;按钮以完成安装。</target>
        </trans-unit>
        <trans-unit id="41a0dcc2a8a2fb5131ec50b956f28a100a8d5891" translate="yes" xml:space="preserve">
          <source>Click the button</source>
          <target state="translated">点击按钮</target>
        </trans-unit>
        <trans-unit id="e289e57aa6e4d147925d3aa745b5da18b71b1df9" translate="yes" xml:space="preserve">
          <source>Click the top right corner of the button.</source>
          <target state="translated">点击按钮的右上角。</target>
        </trans-unit>
        <trans-unit id="6b474668db39e948b35628fa8f54182cfccc937b" translate="yes" xml:space="preserve">
          <source>Click with key combinations</source>
          <target state="translated">用组合键点击</target>
        </trans-unit>
        <trans-unit id="722eae337c872677d616cb3599cb3d2e61ab5f27" translate="yes" xml:space="preserve">
          <source>Clicking giant yellow CypressError now displays associated XHR error in the console.</source>
          <target state="translated">点击巨大的黄色CypressError现在会在控制台中显示相关的XHR错误。</target>
        </trans-unit>
        <trans-unit id="1f313222e0d8617915fd06f50a62cb3435598878" translate="yes" xml:space="preserve">
          <source>Clicking on Commands</source>
          <target state="translated">点击命令</target>
        </trans-unit>
        <trans-unit id="b4a49650736fe53e5b286ec6a87d5e1b71843164" translate="yes" xml:space="preserve">
          <source>Clicking on svg elements is now working. 3.0.2 introduced a bug that would throw an &amp;lsquo;illegal invocation&amp;rsquo; error. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2245&quot;&gt;#2245&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2252&quot;&gt;#2252&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2258&quot;&gt;#2258&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2277&quot;&gt;#2277&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2288&quot;&gt;#2288&lt;/a&gt;.</source>
          <target state="translated">单击svg元素现在可以正常工作。3.0.2引入了一个会引发&amp;ldquo;非法调用&amp;rdquo;错误的错误。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2245&quot;&gt;＃2245&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2252&quot;&gt;＃2252&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2258&quot;&gt;＃2258&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2277&quot;&gt;＃2277&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2288&quot;&gt;＃2288&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ec5c2961cc9b10e26a2ce96cf3dd58994278ba71" translate="yes" xml:space="preserve">
          <source>Clicking on tray twice will toggle hide/show of app.</source>
          <target state="translated">在托盘上点击两次将切换应用程序的隐藏/显示。</target>
        </trans-unit>
        <trans-unit id="8a0f56afb4abdcba196fd871e341ac08ca369e94" translate="yes" xml:space="preserve">
          <source>Clicking the &amp;lsquo;reload&amp;rsquo; icon next to a test that does not have an ID will not work anymore. We&amp;rsquo;re reworking this feature to work without the presence of IDs.</source>
          <target state="translated">单击没有ID的测试旁边的&amp;ldquo;重新加载&amp;rdquo;图标将不再起作用。我们正在重新制作此功能，以在没有ID的情况下正常工作。</target>
        </trans-unit>
        <trans-unit id="09c13b625e14ca6d25a024b6c1602df1f4121052" translate="yes" xml:space="preserve">
          <source>Clicking the URL in the header of the runner now opens that URL in a new tab.</source>
          <target state="translated">点击运行器头部的URL,现在可以在新的标签页中打开该URL。</target>
        </trans-unit>
        <trans-unit id="7c5ffc1d9e226110bbc9b5c62b76f69aba310ad3" translate="yes" xml:space="preserve">
          <source>Client side rendering</source>
          <target state="translated">客户端渲染</target>
        </trans-unit>
        <trans-unit id="1bd3bd675d34fadf02958dffd39505acd40fd25c" translate="yes" xml:space="preserve">
          <source>Clip</source>
          <target state="translated">Clip</target>
        </trans-unit>
        <trans-unit id="04f6b3ea183eb9d70981161c4424a6cf525afd9f" translate="yes" xml:space="preserve">
          <source>Clock</source>
          <target state="translated">Clock</target>
        </trans-unit>
        <trans-unit id="de3521c3c0054dffb3a82eaf024be86e11df70b9" translate="yes" xml:space="preserve">
          <source>Close Cypress and open it up again</source>
          <target state="translated">关闭赛普拉斯,再打开它</target>
        </trans-unit>
        <trans-unit id="f0851c9573d3ae28dc894b75ca322c550d8b5d7c" translate="yes" xml:space="preserve">
          <source>Closing the &lt;code&gt;Electron&lt;/code&gt; browser and then opening &lt;code&gt;Chrome&lt;/code&gt; no longer causes &lt;code&gt;cy.screenshot()&lt;/code&gt; to fail. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1820&quot;&gt;#1820&lt;/a&gt;.</source>
          <target state="translated">关闭 &lt;code&gt;Electron&lt;/code&gt; 浏览器，然后再打开 &lt;code&gt;Chrome&lt;/code&gt; 不再导致 &lt;code&gt;cy.screenshot()&lt;/code&gt; 失败。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1820&quot;&gt;＃1820&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="16b1546bfaf51b2730baa3cec8823ad69c6d520a" translate="yes" xml:space="preserve">
          <source>Closures</source>
          <target state="translated">Closures</target>
        </trans-unit>
        <trans-unit id="b614f87a591b0ca42f98c4c903babaaa97f1d6a4" translate="yes" xml:space="preserve">
          <source>Code Coverage</source>
          <target state="translated">代码覆盖范围</target>
        </trans-unit>
        <trans-unit id="040eeb16b23b04c8d2d3fee2350384b271b2b4cd" translate="yes" xml:space="preserve">
          <source>Code Coverage by Parcel Bundler</source>
          <target state="translated">包裹捆绑器的代码覆盖率</target>
        </trans-unit>
        <trans-unit id="2cb78b9322acceba6db0cc469d6079f0eed92e27" translate="yes" xml:space="preserve">
          <source>Code Coverage for End-to-end Tests</source>
          <target state="translated">端到端测试的代码覆盖率</target>
        </trans-unit>
        <trans-unit id="7023311626b913aa5afafda321dc14a64019dcd3" translate="yes" xml:space="preserve">
          <source>Code Signed Mac App to prevent &amp;ldquo;Unidentified Developer&amp;rdquo; message on open.</source>
          <target state="translated">Mac App进行了代码签名，以防止打开&amp;ldquo; Unidentified Developer&amp;rdquo;消息。</target>
        </trans-unit>
        <trans-unit id="4978477ab3935b5b6e023524251fc7bb2e84ca25" translate="yes" xml:space="preserve">
          <source>Code coverage as a guide</source>
          <target state="translated">作为指导的守则覆盖面</target>
        </trans-unit>
        <trans-unit id="80e6b7863e159a80e05622e61fae964550d29e14" translate="yes" xml:space="preserve">
          <source>Code put in a &lt;code&gt;before&lt;/code&gt; or &lt;code&gt;beforeEach&lt;/code&gt; hook will &lt;strong&gt;always&lt;/strong&gt; run prior to the test - even if you refreshed Cypress in the middle of an existing one!</source>
          <target state="translated">&lt;code&gt;beforeEach&lt;/code&gt; 挂钩 &lt;code&gt;before&lt;/code&gt; 或之前放入的代码将&lt;strong&gt;始终&lt;/strong&gt;在测试之前运行-即使您在现有的挂钩中间刷新了赛普拉斯！&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="18e638137f5e1a28e4d63b7a6426544f9e6a2f33" translate="yes" xml:space="preserve">
          <source>CodeShip Pro</source>
          <target state="translated">CodeShip专业版</target>
        </trans-unit>
        <trans-unit id="d785696bebfac569ce1b1f94fd6d1bc7a3f3a180" translate="yes" xml:space="preserve">
          <source>Codeship</source>
          <target state="translated">Codeship</target>
        </trans-unit>
        <trans-unit id="97c94f954eb9f58c1655ab090be6e49d7268049f" translate="yes" xml:space="preserve">
          <source>Codeship Basic</source>
          <target state="translated">代码飞船基础</target>
        </trans-unit>
        <trans-unit id="58f58d40db364e7e6b3ae2eec1caba3d10e21c88" translate="yes" xml:space="preserve">
          <source>Codeship Pro</source>
          <target state="translated">代码飞船专业</target>
        </trans-unit>
        <trans-unit id="fe887c11920bb16f1c28e209c31bd85615adc335" translate="yes" xml:space="preserve">
          <source>CoffeeScript 2 is supported via modifying the default options for the Browserify preprocessor. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/663&quot;&gt;#663&lt;/a&gt;.</source>
          <target state="translated">通过修改Browserify预处理器的默认选项来支持CoffeeScript 2。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/663&quot;&gt;＃663&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="99793b40d2d5fff667bcfcaa8b962c9192ef1e9b" translate="yes" xml:space="preserve">
          <source>CoffeeScript &lt;code&gt;1.x.x&lt;/code&gt;</source>
          <target state="translated">CoffeeScript &lt;code&gt;1.x.x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6901a8efa68307d9e355cc6c7ca62e0d8af1e914" translate="yes" xml:space="preserve">
          <source>Combine multiple tests into one larger test.</source>
          <target state="translated">将多个测试合并成一个较大的测试。</target>
        </trans-unit>
        <trans-unit id="e5b04e05c73af01968b4654d51eff2b8ba162905" translate="yes" xml:space="preserve">
          <source>Combined End-to-end and Unit Test Coverage</source>
          <target state="translated">端到端和单元测试相结合的覆盖率</target>
        </trans-unit>
        <trans-unit id="8901895fb1b1d4c4ea2fec368c25176bf73e2f7e" translate="yes" xml:space="preserve">
          <source>Command</source>
          <target state="translated">Command</target>
        </trans-unit>
        <trans-unit id="8ff8896b49f3d1c0e7ce0f971b1ef8365b84bae3" translate="yes" xml:space="preserve">
          <source>Command (that was issued)</source>
          <target state="translated">命令</target>
        </trans-unit>
        <trans-unit id="e1c8f7963bdb6829fd956422fc053e3dbec7c2e4" translate="yes" xml:space="preserve">
          <source>Command &lt;a href=&quot;readfile&quot;&gt;&lt;code&gt;cy.readFile()&lt;/code&gt;&lt;/a&gt; assumes the file exists. If you need to read a file that might not exist, use &lt;code&gt;cy.task&lt;/code&gt;.</source>
          <target state="translated">命令&lt;a href=&quot;readfile&quot;&gt; &lt;code&gt;cy.readFile()&lt;/code&gt; &lt;/a&gt;假定文件存在。如果需要读取可能不存在的文件，请使用 &lt;code&gt;cy.task&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="51c8e955d851be7f51e3a8d58bdc9d8a8f6386a5" translate="yes" xml:space="preserve">
          <source>Command Errors</source>
          <target state="translated">命令错误</target>
        </trans-unit>
        <trans-unit id="59b0754344014d9d6347724f39bcacbaf47c2e7d" translate="yes" xml:space="preserve">
          <source>Command Line</source>
          <target state="translated">命令行</target>
        </trans-unit>
        <trans-unit id="3220e89e03807a3230e626ebb638ab3aee0cccfb" translate="yes" xml:space="preserve">
          <source>Command Log</source>
          <target state="translated">命令日志</target>
        </trans-unit>
        <trans-unit id="4fd8fb2de4aa579d5f4841bef35957e560af05e1" translate="yes" xml:space="preserve">
          <source>Command Logging</source>
          <target state="translated">命令记录</target>
        </trans-unit>
        <trans-unit id="f6fe35e209171bf42b301a97ecb399ad5a56cfaf" translate="yes" xml:space="preserve">
          <source>Command line</source>
          <target state="translated">命令行</target>
        </trans-unit>
        <trans-unit id="fe07bd93ba143721c82060ee8fb91bb757ebc871" translate="yes" xml:space="preserve">
          <source>Command line:</source>
          <target state="translated">命令行:</target>
        </trans-unit>
        <trans-unit id="03bddc3c9792f64cb2680dc74695a9d456f661d6" translate="yes" xml:space="preserve">
          <source>Command logging has been upgraded to support &amp;ldquo;page events&amp;rdquo;, which are different than commands. Now events which happen (XHR/page load/url change/spies/stubs/mocks) log out visually differently and do not use a command number. This should be easier to parse what was a real command and what was a page event.</source>
          <target state="translated">命令记录已升级为支持&amp;ldquo;页面事件&amp;rdquo;，这与命令不同。现在发生的事件（XHR /页面加载/ URL更改/间谍/存根/模拟）从视觉上以不同的方式注销，并且不使用命令编号。这应该更容易解析什么是实际命令和什么是页面事件。</target>
        </trans-unit>
        <trans-unit id="6701ca218d2c0d22af562c6e7ae348de3902e333" translate="yes" xml:space="preserve">
          <source>Command logging now works even if no &lt;code&gt;cy&lt;/code&gt; commands have been issued. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/37&quot;&gt;#37&lt;/a&gt;.</source>
          <target state="translated">即使没有发出 &lt;code&gt;cy&lt;/code&gt; 命令，命令记录现在也可以工作。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/37&quot;&gt;＃37&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e39d4db9ae516a060510157749e62f6a09582713" translate="yes" xml:space="preserve">
          <source>Command options &lt;code&gt;exist&lt;/code&gt; / &lt;code&gt;visible&lt;/code&gt; / &lt;code&gt;length&lt;/code&gt; have been deprecated, these were confusing and limiting, and the same result can now be achieved using normal assertions. The end result is much more robust and much easier to understand.</source>
          <target state="translated">命令选项 &lt;code&gt;exist&lt;/code&gt; / &lt;code&gt;visible&lt;/code&gt; / &lt;code&gt;length&lt;/code&gt; 已被弃用，这些命令令人困惑和局限，现在可以使用常规断言实现相同的结果。最终结果更加健壮，更容易理解。</target>
        </trans-unit>
        <trans-unit id="45e5f3f72e961cb70134ba35f7a27a9620e515f7" translate="yes" xml:space="preserve">
          <source>Commands</source>
          <target state="translated">Commands</target>
        </trans-unit>
        <trans-unit id="3aa4606c34c244cc001b55f89d15fdb8bb3d98b3" translate="yes" xml:space="preserve">
          <source>Commands Are Asynchronous</source>
          <target state="translated">命令是异步的</target>
        </trans-unit>
        <trans-unit id="94f457c21cbe00fee4394ed6c39194ce49a8e54c" translate="yes" xml:space="preserve">
          <source>Commands Are Not Promises</source>
          <target state="translated">命令不是承诺</target>
        </trans-unit>
        <trans-unit id="2380e6fdbaf9a19875cebc9de5f197b951b60014" translate="yes" xml:space="preserve">
          <source>Commands Are Promises</source>
          <target state="translated">命令就是承诺</target>
        </trans-unit>
        <trans-unit id="b55d85a43e8de9f15158eef6002a1e52e26191cd" translate="yes" xml:space="preserve">
          <source>Commands Must Exit</source>
          <target state="translated">命令必须退出</target>
        </trans-unit>
        <trans-unit id="3642c607300c11d6c71ef8314ffec45c819ebb65" translate="yes" xml:space="preserve">
          <source>Commands Run Serially</source>
          <target state="translated">串行运行的命令</target>
        </trans-unit>
        <trans-unit id="f4dbd9d165d10424a15dcf3ef3c4eca57e21848a" translate="yes" xml:space="preserve">
          <source>Commands are also interactive. Go ahead and click on the &lt;code&gt;CLICK&lt;/code&gt; command.</source>
          <target state="translated">命令也是交互式的。继续并单击&amp;ldquo; &lt;code&gt;CLICK&lt;/code&gt; 命令。</target>
        </trans-unit>
        <trans-unit id="c72d0e0d77c7dec0a86b9dd2f9cc92d25237054c" translate="yes" xml:space="preserve">
          <source>Commands are not retried when they could potentially change the state of the application under test. For example, Cypress will not retry the &lt;a href=&quot;../../api/commands/click&quot;&gt;.click()&lt;/a&gt; command, because it could change something in the application.</source>
          <target state="translated">当命令有可能更改被测应用程序的状态时，将不重试命令。例如，赛普拉斯不会重试&lt;a href=&quot;../../api/commands/click&quot;&gt;.click（）&lt;/a&gt;命令，因为它可能会更改应用程序中的某些内容。</target>
        </trans-unit>
        <trans-unit id="632789d4c61e2634269b10182e55c1ebebdf9ca7" translate="yes" xml:space="preserve">
          <source>Commands for managing the global Cypress cache. The Cypress cache applies to all installs of Cypress across your machine, global or not.</source>
          <target state="translated">管理全局Cypress缓存的命令。Cypress 缓存适用于整个计算机上所有的 Cypress 安装,无论是否全局安装。</target>
        </trans-unit>
        <trans-unit id="67255d55e8f0db78ddd835195c20c3cbc884d544" translate="yes" xml:space="preserve">
          <source>Commands text will no long cut off into ellipses when the Command Log is set to a wider width. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/528&quot;&gt;#528&lt;/a&gt;.</source>
          <target state="translated">当命令日志设置为较宽的宽度时，命令文本将不再被切成椭圆。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/528&quot;&gt;＃528&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a98a7bd58a3000c66673bad7d7849f2404e52967" translate="yes" xml:space="preserve">
          <source>Commands that do not exit are not supported</source>
          <target state="translated">不支持不退出的命令</target>
        </trans-unit>
        <trans-unit id="21f1c0d12abd113cbd1f180c9c5aea4937b716c6" translate="yes" xml:space="preserve">
          <source>Commands vs assertions</source>
          <target state="translated">命令与断言</target>
        </trans-unit>
        <trans-unit id="7751acfe2fcfee66c6353229f87d58758935fdd9" translate="yes" xml:space="preserve">
          <source>Commands which precede assertions will now look downstream at those assertions and not resolve until their subject&amp;rsquo;s state passes all assertions. Previously this was &lt;strong&gt;sort of&lt;/strong&gt; implemented using &lt;em&gt;Command Options&lt;/em&gt; and the &lt;code&gt;eventually&lt;/code&gt; flag, but now this is the default behavior. &lt;em&gt;Command Options&lt;/em&gt; only worked on DOM-based subjects, and now the new assertion verification works on everything else (including RL-based commands, etc). What this means is that Cypress can predict what you are requesting and automatically modifies its behavior until this state is reached. This prevents test brittleness / random test flake. Additionally this removes ever having to use &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait(Number)&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;cy.wait(Function)&lt;/code&gt; (though this is still a valid command). As a side effect, you will now see commands + their assertions in the spinning pending blue state. When assertions fail their associated command also fails at the same time. This visually represents the coupling between these two concepts. Another side effect is that &lt;code&gt;timeout&lt;/code&gt; options do not need to be provided on the succeeding assertions, and can instead just be provided on the proceeding command. All of the coupled assertions will automatically be retried to the maximum &lt;code&gt;timeout&lt;/code&gt; setting. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/43&quot;&gt;#43&lt;/a&gt;.</source>
          <target state="translated">现在，断言之前的命令将在这些断言的下游查找，并且直到其主体的状态通过所有断言后才解析。以前这是&lt;strong&gt;那种&lt;/strong&gt;利用实施&lt;em&gt;命令选项&lt;/em&gt;与 &lt;code&gt;eventually&lt;/code&gt; 标志，但现在这是默认的行为。&lt;em&gt;命令选项&lt;/em&gt;仅适用于基于DOM的主题，现在新的断言验证适用于其他所有内容（包括基于RL的命令等）。这意味着赛普拉斯可以预测您要请求的内容并自动修改其行为，直到达到此状态为止。这样可以防止测试脆性/随机测试薄片。此外，这消除了必须使用&lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;cy.wait(Number)&lt;/code&gt; &lt;/a&gt;或 &lt;code&gt;cy.wait(Function)&lt;/code&gt; 的麻烦（尽管这仍然是有效的命令）。副作用是，您现在将看到命令及其断言处于旋转的挂起蓝色状态。当断言失败时，其关联的命令也会同时失败。这从视觉上代表了这两个概念之间的结合。另一个副作用是，不需要在后续断言中提供 &lt;code&gt;timeout&lt;/code&gt; 选项，而可以仅在后续命令中提供超时选项。所有耦合的断言将自动重试到最大 &lt;code&gt;timeout&lt;/code&gt; 设置。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/43&quot;&gt;＃43&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1b67fe8756eb553f295fb28d7514aa1ba4e57eae" translate="yes" xml:space="preserve">
          <source>Commands which were silenced with &lt;code&gt;{log: false}&lt;/code&gt; will now always display in the Command Log if they were part of a replayed chain of commands due to an alias reference becoming stale. Previously they would not display which was very confusing.</source>
          <target state="translated">如果由于别名引用过时而被重播的命令链中的一部分，则用 &lt;code&gt;{log: false}&lt;/code&gt; 静音的命令现在将始终显示在命令日志中。以前，它们不会显示出来，这非常令人困惑。</target>
        </trans-unit>
        <trans-unit id="e46f1c8aefb13180c91a4f4e324020c72d59a17c" translate="yes" xml:space="preserve">
          <source>Commit SHA linking to the GitHub commit</source>
          <target state="translated">连接到GitHub提交的提交SHA。</target>
        </trans-unit>
        <trans-unit id="25865a272d6c4602de8da066e2d33da0e5341e0b" translate="yes" xml:space="preserve">
          <source>Common Assertions</source>
          <target state="translated">常见说法</target>
        </trans-unit>
        <trans-unit id="a4fc17db82c672dbaa571a55e4d313945d530f14" translate="yes" xml:space="preserve">
          <source>Common Scenarios</source>
          <target state="translated">常见场景</target>
        </trans-unit>
        <trans-unit id="f190d7b11dc66a51be8efb7071740c9fcf96d6f8" translate="yes" xml:space="preserve">
          <source>Common Workarounds</source>
          <target state="translated">常见的变通方法</target>
        </trans-unit>
        <trans-unit id="ebb9ca9c15ab5b7e2560c86bd227cfc4d5329c32" translate="yes" xml:space="preserve">
          <source>Compare text values of two elements</source>
          <target state="translated">比较两个元素的文本值</target>
        </trans-unit>
        <trans-unit id="976e8d41b2971241ac1e4d546b47b53758e78b1b" translate="yes" xml:space="preserve">
          <source>Compile the CoffeeScript into JavaScript &lt;code&gt;spec.js&lt;/code&gt;</source>
          <target state="translated">将CoffeeScript编译为JavaScript &lt;code&gt;spec.js&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="199262b85ab1cf1760553d29d5bb5a787f9cd66b" translate="yes" xml:space="preserve">
          <source>Complete WordPress Plugin Boilerplate including Cypress.io E2E tests.</source>
          <target state="translated">完整的WordPress插件锅炉模板,包括Cypress.io E2E测试。</target>
        </trans-unit>
        <trans-unit id="80bb2ea05fa48ef9fcf3abb3bc52f8beb680d0e3" translate="yes" xml:space="preserve">
          <source>Completely overhauled the URL and proxy system used to serve remote applications.</source>
          <target state="translated">彻底改造了用于服务远程应用的URL和代理系统。</target>
        </trans-unit>
        <trans-unit id="a6280a8092ffd6b1ba45e5e944246c874afb1893" translate="yes" xml:space="preserve">
          <source>Complex Async Example</source>
          <target state="translated">复杂异步实例</target>
        </trans-unit>
        <trans-unit id="998e6317b6fa148df91026296ec49dc9eade04a7" translate="yes" xml:space="preserve">
          <source>Complex Promise Example</source>
          <target state="translated">复杂的承诺示例</target>
        </trans-unit>
        <trans-unit id="2dbce043918d35d9470549bbaa4939fb679a4bf3" translate="yes" xml:space="preserve">
          <source>Component Testing</source>
          <target state="translated">组件测试</target>
        </trans-unit>
        <trans-unit id="b7159a32272ac35920d049fc30dc9f81832fe7b3" translate="yes" xml:space="preserve">
          <source>Component testing</source>
          <target state="translated">组件测试</target>
        </trans-unit>
        <trans-unit id="3ab0fff92f04a237857d8954ccd4b2bbb77dd1a9" translate="yes" xml:space="preserve">
          <source>Computing the source code lines that were executed during the test is done through &lt;strong&gt;code coverage&lt;/strong&gt;. Code coverage requires inserting additional counters into your source code before running it. This step is called &lt;strong&gt;instrumentation&lt;/strong&gt;. Instrumentation takes code that looks likes this&amp;hellip;</source>
          <target state="translated">通过&lt;strong&gt;代码覆盖范围来&lt;/strong&gt;计算测试期间执行的源代码行。代码覆盖率要求在运行源代码之前向其插入其他计数器。此步骤称为&lt;strong&gt;检测&lt;/strong&gt;。检测采用看起来像这样的代码&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="f412de2bc0a3e649ebd0aa9b0c7daf0fb09876b0" translate="yes" xml:space="preserve">
          <source>Concourse</source>
          <target state="translated">Concourse</target>
        </trans-unit>
        <trans-unit id="0c2f5941357ea3957dbb70ba9f3995d297cefd71" translate="yes" xml:space="preserve">
          <source>Conditional Testing</source>
          <target state="translated">条件测试</target>
        </trans-unit>
        <trans-unit id="f6eb40cf389683812a0b9500584c22e43c7338b9" translate="yes" xml:space="preserve">
          <source>Conditional testing refers to the common programming pattern:</source>
          <target state="translated">条件测试是指常见的编程模式。</target>
        </trans-unit>
        <trans-unit id="9ba9ed1bbe699365fc32d73023c9b43a78c723c9" translate="yes" xml:space="preserve">
          <source>Conditionally check whether an element has certain text:</source>
          <target state="translated">有条件地检查一个元素是否有特定的文本。</target>
        </trans-unit>
        <trans-unit id="4b7aee66483749043701d073392077b0d7e2cd0f" translate="yes" xml:space="preserve">
          <source>Conditionally wrap elements</source>
          <target state="translated">有条件地包装元素</target>
        </trans-unit>
        <trans-unit id="d6a56385d0729f6ff4bf27671cc845cb6f2cfde5" translate="yes" xml:space="preserve">
          <source>Conditionals</source>
          <target state="translated">Conditionals</target>
        </trans-unit>
        <trans-unit id="0ceae88b4177bac1201240778027412fc5be44bb" translate="yes" xml:space="preserve">
          <source>Config overrides coming from the CLI or environment variables are now validated the same way as if they&amp;rsquo;ve been set in &lt;code&gt;cypress.json&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1783&quot;&gt;#1783&lt;/a&gt;.</source>
          <target state="translated">现在，可以像验证 &lt;code&gt;cypress.json&lt;/code&gt; 中一样对来自CLI或环境变量的配置替代进行验证。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1783&quot;&gt;＃1783&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">Configuration</target>
        </trans-unit>
        <trans-unit id="4afa86921bd437ba67c78363d6c2564ff21becdb" translate="yes" xml:space="preserve">
          <source>Configuration API</source>
          <target state="translated">配置API</target>
        </trans-unit>
        <trans-unit id="4d02407d4cc8189b34948d45af1b280eeaabe123" translate="yes" xml:space="preserve">
          <source>Configuration Values</source>
          <target state="translated">配置值</target>
        </trans-unit>
        <trans-unit id="c6f0e9dfe575fb25913b33c98a27840e0a99be95" translate="yes" xml:space="preserve">
          <source>Configuration set using &lt;code&gt;Cypress.config&lt;/code&gt;&lt;em&gt;is only in scope for the current spec file.&lt;/em&gt;</source>
          <target state="translated">使用 &lt;code&gt;Cypress.config&lt;/code&gt; 设置的配置&lt;em&gt;仅在当前规范文件的范围内。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e23ad97b87cb183fd3eb0aaf079a00e736a0850a" translate="yes" xml:space="preserve">
          <source>Configuration to automatically force Cypress to wait for outstanding XHR&amp;rsquo;s (like it does for other Page Events). This would mean when testing more traditional apps without XHR stubbing, commands would automatically wait until all outstanding XHR&amp;rsquo;s complete. The internal retry loop needs to be rewritten to make this possible, but the XHR architecture is now there.</source>
          <target state="translated">自动强制赛普拉斯等待未完成的XHR的配置（就像其他页面事件一样）。这意味着在测试没有XHR存根的更多传统应用程序时，命令将自动等待，直到所有未完成的XHR都完成为止。需要重写内部重试循环才能实现这一点，但是XHR体系结构现在已经存在。</target>
        </trans-unit>
        <trans-unit id="4b97dd6bf2dd45e5ab65e5a1323a4643295ad398" translate="yes" xml:space="preserve">
          <source>Configure &lt;code&gt;baseUrl&lt;/code&gt; in the &lt;code&gt;cypress.json&lt;/code&gt; file to prevent repeating yourself in every single &lt;code&gt;cy.visit()&lt;/code&gt; command. Read more about &lt;a href=&quot;../../guides/references/configuration&quot;&gt;configuration&lt;/a&gt;.</source>
          <target state="translated">配置 &lt;code&gt;baseUrl&lt;/code&gt; 在 &lt;code&gt;cypress.json&lt;/code&gt; 文件以防止重复自己在每一个 &lt;code&gt;cy.visit()&lt;/code&gt; 命令。阅读有关&lt;a href=&quot;../../guides/references/configuration&quot;&gt;配置的&lt;/a&gt;更多信息。</target>
        </trans-unit>
        <trans-unit id="834b811351966050574089ced73dfbdb7ca6848a" translate="yes" xml:space="preserve">
          <source>Configure tsconfig.json</source>
          <target state="translated">配置 tsconfig.json</target>
        </trans-unit>
        <trans-unit id="26c9282bf4ad7fa68a504fae8e6c23d1c4572381" translate="yes" xml:space="preserve">
          <source>Confirm that you want to delete the project by clicking &lt;strong&gt;Yes, Remove Project&lt;/strong&gt;.</source>
          <target state="translated">点击&lt;strong&gt;是，删除项目，&lt;/strong&gt;确认要&lt;strong&gt;删除项目&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="06ba8be139efac680979823005c3a8e473971b01" translate="yes" xml:space="preserve">
          <source>Conflicting values will override values from &lt;code&gt;cypress.json&lt;/code&gt; and &lt;code&gt;cypress.env.json&lt;/code&gt; files.</source>
          <target state="translated">冲突的值将覆盖 &lt;code&gt;cypress.json&lt;/code&gt; 和 &lt;code&gt;cypress.env.json&lt;/code&gt; 文件中的值。</target>
        </trans-unit>
        <trans-unit id="01cd1b44c6d6673718a3a40a6be368681492da19" translate="yes" xml:space="preserve">
          <source>Connect with our community in &lt;a href=&quot;https://gitter.im/cypress-io/cypress&quot;&gt;Gitter&lt;/a&gt;</source>
          <target state="translated">在&lt;a href=&quot;https://gitter.im/cypress-io/cypress&quot;&gt;吉特&lt;/a&gt;与我们的社区联系</target>
        </trans-unit>
        <trans-unit id="565e25b1be863570aa48357d4e37a3cb9b1014a4" translate="yes" xml:space="preserve">
          <source>Consider this example:</source>
          <target state="translated">考虑这个例子。</target>
        </trans-unit>
        <trans-unit id="2dd9f4cc14ec1bf52b6278d055d1483dda369c44" translate="yes" xml:space="preserve">
          <source>Console output</source>
          <target state="translated">控制台输出</target>
        </trans-unit>
        <trans-unit id="7bf69cab90ca13888b120e7454484a178e4ef6c8" translate="yes" xml:space="preserve">
          <source>Console output from your apps is suppressed while running in the terminal.</source>
          <target state="translated">在终端中运行时,你的应用程序的控制台输出会被抑制。</target>
        </trans-unit>
        <trans-unit id="3cfbf8dc8f844f4d8d531e58d73ec57ab19a5b69" translate="yes" xml:space="preserve">
          <source>Console output of &lt;code&gt;.location()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.location()&lt;/code&gt; 的控制台输出</target>
        </trans-unit>
        <trans-unit id="716bba1f6fa2b1817371939a28928af71947092c" translate="yes" xml:space="preserve">
          <source>Console output of &lt;code&gt;window.location&lt;/code&gt;</source>
          <target state="translated">控制台输出 &lt;code&gt;window.location&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4f9be057f0ea5d2ba72fd2c810e8d7b9aa98b469" translate="yes" xml:space="preserve">
          <source>Content</source>
          <target state="translated">Content</target>
        </trans-unit>
        <trans-unit id="2570a9f1f6766df091ea6a76ebb3b3d7bd48fed4" translate="yes" xml:space="preserve">
          <source>Continue to perform all default actions</source>
          <target state="translated">继续执行所有默认动作</target>
        </trans-unit>
        <trans-unit id="7a302c3f9cf2b3cec42c41ee9b6ddfb04d9516a9" translate="yes" xml:space="preserve">
          <source>Continuous Integration</source>
          <target state="translated">持续集成</target>
        </trans-unit>
        <trans-unit id="0a95911fef9feab1279d57ccc20e090218e5b782" translate="yes" xml:space="preserve">
          <source>Continuous integration</source>
          <target state="translated">持续集成</target>
        </trans-unit>
        <trans-unit id="18b017e5b4b89d6ff684844a26fb098545f160cf" translate="yes" xml:space="preserve">
          <source>Contribute</source>
          <target state="translated">Contribute</target>
        </trans-unit>
        <trans-unit id="99085ed780334aa12947f103a83792aa2d5509b8" translate="yes" xml:space="preserve">
          <source>Control the size and orientation of the screen for your application.</source>
          <target state="translated">为您的应用程序控制屏幕的大小和方向。</target>
        </trans-unit>
        <trans-unit id="baec3ef4d924a374d8f163c63b1280f6568b9bd2" translate="yes" xml:space="preserve">
          <source>Control whether you accept or reject confirmations</source>
          <target state="translated">控制您是否接受或拒绝确认</target>
        </trans-unit>
        <trans-unit id="8cb89ca43e98cfc3f9884ebd828302a5a51d3e80" translate="yes" xml:space="preserve">
          <source>Control which Chrome components are loaded</source>
          <target state="translated">控制加载哪些Chrome组件</target>
        </trans-unit>
        <trans-unit id="54cc9832575c26ca63291217376ff51a496592d4" translate="yes" xml:space="preserve">
          <source>Converts WDIO automation tests to Cypress.</source>
          <target state="translated">将WDIO自动化测试转换为Cypress。</target>
        </trans-unit>
        <trans-unit id="524cf50b5df5f29161c0600989922de48abede70" translate="yes" xml:space="preserve">
          <source>Cookies</source>
          <target state="translated">Cookies</target>
        </trans-unit>
        <trans-unit id="acf3516687f68b9d3be80e8368cd13855a295dec" translate="yes" xml:space="preserve">
          <source>Cookies are automatically cleared between page refreshes, during app startup, and leaving the test page.</source>
          <target state="translated">在页面刷新之间、应用启动过程中、离开测试页面时,Cookies会自动清除。</target>
        </trans-unit>
        <trans-unit id="e05873e1707d6581e6eee7e2a15fb0c0ecd9e055" translate="yes" xml:space="preserve">
          <source>Cookies are automatically sent and received</source>
          <target state="translated">自动发送和接收Cookies</target>
        </trans-unit>
        <trans-unit id="8ebebca0195929f0e6604560db2d6f829dc20c86" translate="yes" xml:space="preserve">
          <source>Coordinates</source>
          <target state="translated">Coordinates</target>
        </trans-unit>
        <trans-unit id="e7b9657118fef7a1f45306c17d6e677df270e297" translate="yes" xml:space="preserve">
          <source>Coordinates and hitboxes are now logged and displayed on &lt;a href=&quot;../../api/commands/clear&quot;&gt;&lt;code&gt;.clear()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">坐标和命中框现在已记录并显示在&lt;a href=&quot;../../api/commands/clear&quot;&gt; &lt;code&gt;.clear()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; 上&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6356d7205b142f7c7c7d20113c08b32b386e304f" translate="yes" xml:space="preserve">
          <source>Copy / Paste now works when logging in on OSX. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/145&quot;&gt;#145&lt;/a&gt;.</source>
          <target state="translated">在OSX上登录时，复制/粘贴现在可以使用。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/145&quot;&gt;＃145&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c872753511d558c4ce512746cf585786dd025a3c" translate="yes" xml:space="preserve">
          <source>Core Concepts</source>
          <target state="translated">核心概念</target>
        </trans-unit>
        <trans-unit id="9276d073588593df3449f1f21b0c39e9033d4bf1" translate="yes" xml:space="preserve">
          <source>Corrected a typo in the CLI for a warning message. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2038&quot;&gt;#2038&lt;/a&gt;.</source>
          <target state="translated">纠正了CLI中的警告信息错误。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2038&quot;&gt;＃2038&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8556152848968e44556c99c3fff98f2d6db69ebe" translate="yes" xml:space="preserve">
          <source>Correctly inject on &lt;code&gt;4xx&lt;/code&gt; and other bad http response codes when using Cypress as the file server. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/219&quot;&gt;#219&lt;/a&gt;.</source>
          <target state="translated">使用赛普拉斯作为文件服务器时，请正确注入 &lt;code&gt;4xx&lt;/code&gt; 和其他错误的http响应代码。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/219&quot;&gt;＃219&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b9adb71f1d237db0587278b4a1e23572d8e501b7" translate="yes" xml:space="preserve">
          <source>Correctly inject on &lt;code&gt;5xx&lt;/code&gt; http response codes. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/217&quot;&gt;#217&lt;/a&gt;.</source>
          <target state="translated">正确注入 &lt;code&gt;5xx&lt;/code&gt; http响应代码。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/217&quot;&gt;＃217&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="abba92ebc6c6850ef892f769dc170ea8ef65f589" translate="yes" xml:space="preserve">
          <source>Correctly inject on &lt;code&gt;gzip&lt;/code&gt; errors from 3rd party servers doing unintended things. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/220&quot;&gt;#220&lt;/a&gt;.</source>
          <target state="translated">正确注入来自第三方服务器执行意外操作的 &lt;code&gt;gzip&lt;/code&gt; 错误。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/220&quot;&gt;＃220&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bbc139f59ec256066c40a13acfb940f040262cc9" translate="yes" xml:space="preserve">
          <source>Correctly processes defaultButton click event, form submit event.</source>
          <target state="translated">正确处理defaultButton点击事件、表单提交事件。</target>
        </trans-unit>
        <trans-unit id="77ba49c73b30efdf7845be17dba3544bfac24889" translate="yes" xml:space="preserve">
          <source>Correctly take into account &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; tag on XHR&amp;rsquo;s. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/89&quot;&gt;#89&lt;/a&gt;.</source>
          <target state="translated">正确考虑XHR上的 &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; 标签。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/89&quot;&gt;＃89&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7ae3f335e548522a72b31d6709bd85642b226144" translate="yes" xml:space="preserve">
          <source>Coupled to the &lt;code&gt;name&lt;/code&gt; attribute which has HTML semantics.</source>
          <target state="translated">耦合到具有HTML语义的 &lt;code&gt;name&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="8b25d68c0b07d3dbf4f390e283585ad91fdda1c1" translate="yes" xml:space="preserve">
          <source>Covering</source>
          <target state="translated">Covering</target>
        </trans-unit>
        <trans-unit id="31ff08bf16c35d590ae328896c11be9dbe0e6a29" translate="yes" xml:space="preserve">
          <source>Create Org</source>
          <target state="translated">创建组织</target>
        </trans-unit>
        <trans-unit id="0a76330fa7099993f77b270f5263237612c24f8e" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;sample_spec.js&lt;/code&gt; file.</source>
          <target state="translated">创建一个 &lt;code&gt;sample_spec.js&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="54aaec0d8958e9a15d7aa90864024a05abda7504" translate="yes" xml:space="preserve">
          <source>Create a `cypress.env.json`</source>
          <target state="translated">创建一个`cypress.env.json`。</target>
        </trans-unit>
        <trans-unit id="530333cdf6ed80d16fb57efe75c7a81e75f361ef" translate="yes" xml:space="preserve">
          <source>Create a clean, pristine testing environment.</source>
          <target state="translated">创造一个干净、纯净的测试环境。</target>
        </trans-unit>
        <trans-unit id="b356d5c8892603555f802e6084774cb296edb2fa" translate="yes" xml:space="preserve">
          <source>Create a clock and move time to trigger a &lt;code&gt;setTimeout&lt;/code&gt;</source>
          <target state="translated">创建时钟并移动时间以触发 &lt;code&gt;setTimeout&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0215eed7a89da9a6d3896c5402ec4060b10638f6" translate="yes" xml:space="preserve">
          <source>Create a clock and use it to trigger a &lt;code&gt;setInterval&lt;/code&gt;</source>
          <target state="translated">创建一个时钟并使用它触发 &lt;code&gt;setInterval&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c9f4d8a4cc6b4d876ee791006ddbfe6b56b72df3" translate="yes" xml:space="preserve">
          <source>Create a stub and manually replace a function</source>
          <target state="translated">创建一个存根并手动替换一个函数</target>
        </trans-unit>
        <trans-unit id="c4e02bbaa4e1006fb86887e071cb4da5a9670c70" translate="yes" xml:space="preserve">
          <source>Create an assertion. Assertions are automatically retried until they pass or time out.</source>
          <target state="translated">创建一个断言。断言会自动重试,直到它们通过或超时。</target>
        </trans-unit>
        <trans-unit id="deb609dfe5aa29a17cf69b2b489923bcb4c0e2bd" translate="yes" xml:space="preserve">
          <source>Create custom commands using plain-old functions. Similar to `cy.then` but with retriability.</source>
          <target state="translated">使用普通旧函数创建自定义命令。类似于 &quot;cy.then&quot;,但具有可回溯性。</target>
        </trans-unit>
        <trans-unit id="db895a3da3bf5b0a271a63f2aa947d66bb9a036f" translate="yes" xml:space="preserve">
          <source>Create new record key</source>
          <target state="translated">创建新的记录键</target>
        </trans-unit>
        <trans-unit id="59daec0fad23e8f1c6fdaeceb786f17de953945e" translate="yes" xml:space="preserve">
          <source>Create projects</source>
          <target state="translated">创建项目</target>
        </trans-unit>
        <trans-unit id="c419fdebbc74b72da21303a5c289d54c9963d7f0" translate="yes" xml:space="preserve">
          <source>Create, edit and delete organizations</source>
          <target state="translated">创建、编辑和删除组织</target>
        </trans-unit>
        <trans-unit id="4df1dedacc4030daf8f7117293a949c884449280" translate="yes" xml:space="preserve">
          <source>Created &amp;ldquo;Conditional Testing&amp;rdquo; core concept</source>
          <target state="translated">创建&amp;ldquo;条件测试&amp;rdquo;核心概念</target>
        </trans-unit>
        <trans-unit id="30f699233a45a35700337adb14a42c21811feea2" translate="yes" xml:space="preserve">
          <source>Created &amp;ldquo;Key Differences&amp;rdquo; core concept</source>
          <target state="translated">创建&amp;ldquo;关键差异&amp;rdquo;核心概念</target>
        </trans-unit>
        <trans-unit id="cb3ea91e52bf3a936bd6f5f890714b0db2b77614" translate="yes" xml:space="preserve">
          <source>Created &amp;ldquo;List of Plugins&amp;rdquo;</source>
          <target state="translated">创建&amp;ldquo;插件列表&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="ea247c70fd48be47fbe66d1fb7557f6ff79378eb" translate="yes" xml:space="preserve">
          <source>Created &amp;ldquo;Plugins&amp;rdquo; guide</source>
          <target state="translated">创建了&amp;ldquo;插件&amp;rdquo;指南</target>
        </trans-unit>
        <trans-unit id="26bd6570b4b29017a17447f2b75ad172f67bba2e" translate="yes" xml:space="preserve">
          <source>Created &amp;ldquo;Preprocessors API&amp;rdquo;</source>
          <target state="translated">创建&amp;ldquo;预处理器API&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="1d535ded95947d37850ceb6e1929c6d9722ece6c" translate="yes" xml:space="preserve">
          <source>Created &amp;ldquo;Testing React TodoMVC&amp;rdquo; tutorials</source>
          <target state="translated">创建了&amp;ldquo; Testing React TodoMVC&amp;rdquo;教程</target>
        </trans-unit>
        <trans-unit id="0968a2236d7936e5ebc1a74cbb3d145abafac7a2" translate="yes" xml:space="preserve">
          <source>Created &amp;ldquo;Variables and Aliases&amp;rdquo; core concept</source>
          <target state="translated">创建&amp;ldquo;变量和别名&amp;rdquo;核心概念</target>
        </trans-unit>
        <trans-unit id="7c7190e9e6b622065f70340f7b630b00e4474ea1" translate="yes" xml:space="preserve">
          <source>Created &amp;ldquo;Writing a Plugin&amp;rdquo; API</source>
          <target state="translated">创建了&amp;ldquo;编写插件&amp;rdquo; API</target>
        </trans-unit>
        <trans-unit id="b14ba5e141fd4b8fbd4e1094e2425e3e9125f7e9" translate="yes" xml:space="preserve">
          <source>Created new &lt;code&gt;Cypress.Log&lt;/code&gt; interface for greater control over the display of commands.</source>
          <target state="translated">创建了新的 &lt;code&gt;Cypress.Log&lt;/code&gt; 界面，以更好地控制命令的显示。</target>
        </trans-unit>
        <trans-unit id="fffe2121a1559fa60200bf1454c0d748be25d246" translate="yes" xml:space="preserve">
          <source>Created new debugging command: &lt;a href=&quot;../../api/commands/pause&quot;&gt;&lt;code&gt;.pause()&lt;/code&gt;&lt;/a&gt; which will pause executing commands and allow you to resume or step into the next command one at a time.</source>
          <target state="translated">创建了新的调试命令：&lt;a href=&quot;../../api/commands/pause&quot;&gt; &lt;code&gt;.pause()&lt;/code&gt; &lt;/a&gt;，它将暂停执行命令，并允许您一次继续执行或进入下一个命令。</target>
        </trans-unit>
        <trans-unit id="4ce48feaef42bf2c8b9b194bc8d2c155ebd58032" translate="yes" xml:space="preserve">
          <source>Creating &amp;ldquo;tiny&amp;rdquo; tests with a single assertion</source>
          <target state="translated">通过单个断言创建&amp;ldquo;微小&amp;rdquo;测试</target>
        </trans-unit>
        <trans-unit id="49b1c035b7d0b6b1c7e35c111e5686682b53438c" translate="yes" xml:space="preserve">
          <source>Crop a screenshot to a specific position and size</source>
          <target state="translated">将屏幕截图裁剪成特定的位置和大小。</target>
        </trans-unit>
        <trans-unit id="58cd1d73cdcaffc9483c858219c6fcb608902e6a" translate="yes" xml:space="preserve">
          <source>Cross-Origin requests are now proxied by Cypress. In other words their URL&amp;rsquo;s are transparently rewritten which bypasses CORS problems. This is a quick fix which should satisfy most of the problems users were having with CORS requests. However there is a much bigger change coming in &lt;code&gt;0.14.0&lt;/code&gt; where the entire proxy layer will be rewritten to accommodate CORS, &lt;code&gt;window.fetch&lt;/code&gt; and &lt;code&gt;domain cookies&lt;/code&gt; flawlessly. As it stands Cypress is prone to errors in complex setups.</source>
          <target state="translated">赛普拉斯现在可以代理跨域请求。换句话说，它们的URL被透明地重写，从而绕开了CORS问题。这是一个快速解决方案，应该可以解决用户在使用CORS请求时遇到的大多数问题。但是，在 &lt;code&gt;0.14.0&lt;/code&gt; 中有一个更大的更改，整个代理层将被重写以完美地容纳CORS， &lt;code&gt;window.fetch&lt;/code&gt; 和 &lt;code&gt;domain cookies&lt;/code&gt; 。目前，赛普拉斯在复杂的设置中容易出错。</target>
        </trans-unit>
        <trans-unit id="fd97fba3d4697df4c06c84371d03fa2bb079269f" translate="yes" xml:space="preserve">
          <source>Cross-origin iframes</source>
          <target state="translated">跨源iframe</target>
        </trans-unit>
        <trans-unit id="2270b4873eb9e505087d1cdb7abf8226ebfab5a4" translate="yes" xml:space="preserve">
          <source>Cucumber</source>
          <target state="translated">Cucumber</target>
        </trans-unit>
        <trans-unit id="45a6d5bcf4e2724053e60f8d27b3f1f435224fae" translate="yes" xml:space="preserve">
          <source>Currently running tests now displays a spinner to indicate they are currently running.</source>
          <target state="translated">当前正在运行的测试现在会显示一个微调器来指示它们当前正在运行。</target>
        </trans-unit>
        <trans-unit id="656c8a1b6a35438479cc20adce73c5c892061f49" translate="yes" xml:space="preserve">
          <source>Currently, only browsers in the Chrome family are supported.</source>
          <target state="translated">目前,只支持Chrome系列的浏览器。</target>
        </trans-unit>
        <trans-unit id="d65215411d33fb1bb5d69ddda0d6b068f34bceeb" translate="yes" xml:space="preserve">
          <source>Custom &lt;code&gt;console&lt;/code&gt; command</source>
          <target state="translated">自定义 &lt;code&gt;console&lt;/code&gt; 命令</target>
        </trans-unit>
        <trans-unit id="2416316065a37f271c32ddc7e7d94e55288b1523" translate="yes" xml:space="preserve">
          <source>Custom &lt;code&gt;login&lt;/code&gt; command</source>
          <target state="translated">自定义 &lt;code&gt;login&lt;/code&gt; 命令</target>
        </trans-unit>
        <trans-unit id="c48e024e0cec2f563e6f2442f0eebafd432290c2" translate="yes" xml:space="preserve">
          <source>Custom Commands</source>
          <target state="translated">自定义命令</target>
        </trans-unit>
        <trans-unit id="fb2ecfd0fee66ed3937499ef5f09ad6fcbe3f473" translate="yes" xml:space="preserve">
          <source>Custom Dual Command</source>
          <target state="translated">自定义双指令</target>
        </trans-unit>
        <trans-unit id="aa033ba591179178a4d4be85f52573a67add07ca" translate="yes" xml:space="preserve">
          <source>Custom Environment Variables</source>
          <target state="translated">自定义环境变量</target>
        </trans-unit>
        <trans-unit id="ad94b13496fdf0b96efabeb86e685fdd89eada01" translate="yes" xml:space="preserve">
          <source>Custom Reporters</source>
          <target state="translated">定制报告器</target>
        </trans-unit>
        <trans-unit id="91441fc1bd3bf4b1866bc35b9ceca54fe1864e57" translate="yes" xml:space="preserve">
          <source>Custom commands are a great way to abstract away setup (specific to your app). When doing those kinds of tasks, skip as much of the UI as possible. Use &lt;a href=&quot;../commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; to login, set cookies or localStorage directly, stub and mock your applications functions, and / or trigger events programmatically.</source>
          <target state="translated">自定义命令是抽象化安装程序（特定于您的应用程序）的好方法。在执行这些任务时，请尽可能多地跳过UI。使用&lt;a href=&quot;../commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt;直接登录，直接设置cookie或localStorage，对应用程序功能进行存根和模拟和/或以编程方式触发事件。</target>
        </trans-unit>
        <trans-unit id="9ff9cc201d8a668d6026bc86cd694c4c3f7a170d" translate="yes" xml:space="preserve">
          <source>Custom commands for Firebase including Authentication and Database communication (both Real Time Database and Firestore).</source>
          <target state="translated">Firebase的自定义命令,包括认证和数据库通信(包括实时数据库和Firestore)。</target>
        </trans-unit>
        <trans-unit id="16cb3173d8cac1013803372ff53995a522a0105b" translate="yes" xml:space="preserve">
          <source>Custom commands for shadow DOM support</source>
          <target state="translated">支持影子DOM的自定义命令</target>
        </trans-unit>
        <trans-unit id="2ad6f8e3320f0e1c4b72b21d7099db3bc9f97635" translate="yes" xml:space="preserve">
          <source>Custom commands no longer error out if they are the very first &lt;code&gt;cy&lt;/code&gt; command.</source>
          <target state="translated">如果自定义命令是第一个 &lt;code&gt;cy&lt;/code&gt; 命令，则不再出错。</target>
        </trans-unit>
        <trans-unit id="67ae38e49b14cdb33c666c82189ec654f4a10342" translate="yes" xml:space="preserve">
          <source>Custom commands work well when you&amp;rsquo;re needing to describe behavior that&amp;rsquo;s desirable across &lt;strong&gt;all of your tests&lt;/strong&gt;. Examples would be a &lt;code&gt;cy.setup()&lt;/code&gt; or &lt;code&gt;cy.login()&lt;/code&gt; or extending your application&amp;rsquo;s behavior like &lt;code&gt;cy.get('.dropdown').dropdown('Apples')&lt;/code&gt;. These are specific to your application and can be used everywhere.</source>
          <target state="translated">当您需要描述&lt;strong&gt;所有测试中&lt;/strong&gt;所需的行为时，自定义命令会很好地工作。例如 &lt;code&gt;cy.setup()&lt;/code&gt; 或 &lt;code&gt;cy.login()&lt;/code&gt; 或扩展应用程序的行为，例如 &lt;code&gt;cy.get('.dropdown').dropdown('Apples')&lt;/code&gt; 。这些特定于您的应用程序，可以在任何地方使用。</target>
        </trans-unit>
        <trans-unit id="b8708877030366a729d8be6d8ee1eff4b401e3a1" translate="yes" xml:space="preserve">
          <source>Custom headers and other headers &amp;ldquo;of interest&amp;rdquo; are rewritten for transparent compatibility.</source>
          <target state="translated">自定义标头和其他&amp;ldquo;感兴趣的&amp;rdquo;标头被重写以实现透明兼容性。</target>
        </trans-unit>
        <trans-unit id="37df32d62fc505273d2829f38d6b5d5d2b3adda3" translate="yes" xml:space="preserve">
          <source>Custom reporter for publishing Cypress results to a TestRail test run.</source>
          <target state="translated">自定义报告器,用于发布Cypress结果到TestRail测试运行。</target>
        </trans-unit>
        <trans-unit id="60273f665dee8f8e4c45bdb2d21bb86f108c4685" translate="yes" xml:space="preserve">
          <source>Customize the &lt;code&gt;babel&lt;/code&gt; settings to add your own plugins.</source>
          <target state="translated">自定义 &lt;code&gt;babel&lt;/code&gt; 设置以添加自己的插件。</target>
        </trans-unit>
        <trans-unit id="3f16d98fa8492ee7147a5316bfeb5c7d3644bb3b" translate="yes" xml:space="preserve">
          <source>Cypress</source>
          <target state="translated">Cypress</target>
        </trans-unit>
        <trans-unit id="9d6d4c9f7411879c74391a52006e7dedc051c39a" translate="yes" xml:space="preserve">
          <source>Cypress &lt;code&gt;.js&lt;/code&gt; files are no longer minified to make them easier to debug.</source>
          <target state="translated">不再压缩赛普拉斯 &lt;code&gt;.js&lt;/code&gt; 文件，以使其更易于调试。</target>
        </trans-unit>
        <trans-unit id="69bb979a44a573f92682a6ef967aa11acd1b71e0" translate="yes" xml:space="preserve">
          <source>Cypress &lt;code&gt;should&lt;/code&gt; callback</source>
          <target state="translated">赛普拉斯 &lt;code&gt;should&lt;/code&gt; 回调</target>
        </trans-unit>
        <trans-unit id="dd834f87d55654636b544d559abbcd82fd34dc6e" translate="yes" xml:space="preserve">
          <source>Cypress API</source>
          <target state="translated">赛普拉斯API</target>
        </trans-unit>
        <trans-unit id="e79886eaef25ee1a767b7bbd89725a0c4a901c04" translate="yes" xml:space="preserve">
          <source>Cypress Angular Schematic</source>
          <target state="translated">赛普拉斯角形示意图</target>
        </trans-unit>
        <trans-unit id="41077ca081d9da32474c23b44a47df79374161dd" translate="yes" xml:space="preserve">
          <source>Cypress Api</source>
          <target state="translated">Cypress Api</target>
        </trans-unit>
        <trans-unit id="52eefa9ba6e0ab14078c1c7a45dd3034112ecb45" translate="yes" xml:space="preserve">
          <source>Cypress CLI no longer requires &lt;code&gt;git&lt;/code&gt; to install. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/124&quot;&gt;#124&lt;/a&gt;</source>
          <target state="translated">赛普拉斯CLI不再需要安装 &lt;code&gt;git&lt;/code&gt; 。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/124&quot;&gt;＃124&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0aa0bdf7061e27bd73473d6ad095f5b4f6662e3d" translate="yes" xml:space="preserve">
          <source>Cypress Cookies API</source>
          <target state="translated">Cypress Cookies API</target>
        </trans-unit>
        <trans-unit id="9959819eed1eec586e5deb5e88bbcbd379c21bb5" translate="yes" xml:space="preserve">
          <source>Cypress Daywalker</source>
          <target state="translated">Cypress Daywalker</target>
        </trans-unit>
        <trans-unit id="35f838de597a062c7402e87c59292b2faf40dc9d" translate="yes" xml:space="preserve">
          <source>Cypress Errors in &lt;code&gt;hooks&lt;/code&gt; (&lt;code&gt;beforeEach&lt;/code&gt;, etc) will no longer cause Mocha to fire its &lt;code&gt;end&lt;/code&gt; event thus ending the entire run. In CI, this would cause the test suite to end early. Uncaught Mocha errors will however continue this behavior. Cypress does not yet have a &amp;ldquo;skipped&amp;rdquo; visual state for tests which were skipped, so at the moment it may look a little strange and unpredictable.</source>
          <target state="translated">Cypress &lt;code&gt;hooks&lt;/code&gt; 错误（ &lt;code&gt;beforeEach&lt;/code&gt; 等）将不再导致Mocha触发其 &lt;code&gt;end&lt;/code&gt; 事件，从而结束整个运行。在CI中，这将导致测试套件提前结束。但是，未捕获的Mocha错误将继续这种行为。对于被跳过的测试，赛普拉斯还没有&amp;ldquo;跳过&amp;rdquo;的视觉状态，因此目前看起来有些奇怪且不可预测。</target>
        </trans-unit>
        <trans-unit id="88d186e76461bba8673c60f59e6c077762385c04" translate="yes" xml:space="preserve">
          <source>Cypress Events</source>
          <target state="translated">赛普拉斯活动</target>
        </trans-unit>
        <trans-unit id="e2ab950a9aafc22fbd239b148d5700dae7d411c7" translate="yes" xml:space="preserve">
          <source>Cypress GitHub app installation process</source>
          <target state="translated">赛普拉斯GitHub应用安装过程</target>
        </trans-unit>
        <trans-unit id="1421f38b06ab7db60339dbf7bc0a26d648b10c8a" translate="yes" xml:space="preserve">
          <source>Cypress Image Snapshot</source>
          <target state="translated">赛普拉斯形象快照</target>
        </trans-unit>
        <trans-unit id="a5c29edaa1a6568d26f4aa47714a618f2e21e08b" translate="yes" xml:space="preserve">
          <source>Cypress Is Simple</source>
          <target state="translated">赛普拉斯是简单的</target>
        </trans-unit>
        <trans-unit id="0b83e38e79f67bce5c1ce1c7ec8a6f4ecfea5015" translate="yes" xml:space="preserve">
          <source>Cypress Profile</source>
          <target state="translated">赛普拉斯简介</target>
        </trans-unit>
        <trans-unit id="b684aa809dec527ae9a9e296103b42a9ee59b092" translate="yes" xml:space="preserve">
          <source>Cypress Test Runner can wait for the property &lt;code&gt;window.appReady&lt;/code&gt; to be &lt;code&gt;true&lt;/code&gt; before every test</source>
          <target state="translated">赛普拉斯Test Runner可以在每次测试之前等待属性 &lt;code&gt;window.appReady&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d5d22d719324ad24c3524d119c1d8ff6f95d8b8a" translate="yes" xml:space="preserve">
          <source>Cypress Visual Regression</source>
          <target state="translated">Cypress视觉回归</target>
        </trans-unit>
        <trans-unit id="bb4c1f9ea980a868e458efe31556ede34737e003" translate="yes" xml:space="preserve">
          <source>Cypress Watch Preprocessor</source>
          <target state="translated">赛普拉斯手表预处理器</target>
        </trans-unit>
        <trans-unit id="9cb0f68616a1ce91b2be26749d697804c1ae303f" translate="yes" xml:space="preserve">
          <source>Cypress additionally handles situations where a page load was not caused (such as hash routing) and will resolve immediately.</source>
          <target state="translated">赛普拉斯另外还处理了没有引起页面加载的情况(如哈希路由),并将立即解决。</target>
        </trans-unit>
        <trans-unit id="de149d69317b64471762f15fe066156d0ba4a998" translate="yes" xml:space="preserve">
          <source>Cypress aims not only to make it easier to write tests, but after you build a test harness, it will make it easier to dive into failed tests (hat run in CI). This release paves the way for providing after-run results and allowing you to dive into those failures.</source>
          <target state="translated">Cypress的目标不仅是让编写测试变得更容易,而且在你构建测试线束之后,它将使你更容易深入研究失败的测试(帽子在CI中运行)。这个版本为提供运行后的结果铺平了道路,并允许你深入研究这些失败的测试。</target>
        </trans-unit>
        <trans-unit id="27de11e0968111b28bb7427659b60e0f8f29cdce" translate="yes" xml:space="preserve">
          <source>Cypress allows you to control how a selector is determined.</source>
          <target state="translated">Cypress允许你控制选择器的确定方式。</target>
        </trans-unit>
        <trans-unit id="3800d9b000a1a2560d80b3707760dcf877eaed30" translate="yes" xml:space="preserve">
          <source>Cypress also bundles the following tools on the &lt;code&gt;Cypress&lt;/code&gt; object. These can be used anywhere inside of your tests.</source>
          <target state="translated">赛普拉斯还将以下工具捆绑在 &lt;code&gt;Cypress&lt;/code&gt; 对象上。这些可以在测试内部的任何地方使用。</target>
        </trans-unit>
        <trans-unit id="b5c6824f5710b13d347fc599280c94c480c26953" translate="yes" xml:space="preserve">
          <source>Cypress also exposes a shortcut for debugging commands, &lt;a href=&quot;../../api/commands/debug&quot;&gt;&lt;code&gt;.debug()&lt;/code&gt;&lt;/a&gt;. Let&amp;rsquo;s rewrite the test above using this helper method:</source>
          <target state="translated">赛普拉斯还公开了用于调试命令的快捷方式&lt;a href=&quot;../../api/commands/debug&quot;&gt; &lt;code&gt;.debug()&lt;/code&gt; &lt;/a&gt;。让我们使用此辅助方法重写上面的测试：</target>
        </trans-unit>
        <trans-unit id="7131ffb13e86e7e1beb68ebb5dca5c8e951fa339" translate="yes" xml:space="preserve">
          <source>Cypress also logs whether the XHR was stubbed or not to the console when you click on the command in the Command Log. It will indicate whether a request was stubbed, which url it matched or that it did not match any routes.</source>
          <target state="translated">当你点击命令日志中的命令时,Cypress也会将XHR是否被存根记录到控制台。它将显示一个请求是否被存根,它匹配了哪个url,或者它没有匹配任何路由。</target>
        </trans-unit>
        <trans-unit id="c3039ff3ebae68304c6756b1cb2fcf0b0aec30cd" translate="yes" xml:space="preserve">
          <source>Cypress also operates at the network layer by reading and altering web traffic on the fly. This enables Cypress to not only modify everything coming in and out of the browser, but also to change code that may interfere with its ability to automate the browser.</source>
          <target state="translated">赛普拉斯还在网络层通过读取和改变网络流量进行操作。这使得Cypress不仅可以修改浏览器的所有进出,而且还可以改变可能干扰其自动化浏览器能力的代码。</target>
        </trans-unit>
        <trans-unit id="205db03b575e9f29caf339ccf9dad818e09a328c" translate="yes" xml:space="preserve">
          <source>Cypress also provides hooks (borrowed from &lt;a href=&quot;../references/bundled-tools#Mocha&quot;&gt;Mocha&lt;/a&gt;).</source>
          <target state="translated">赛普拉斯还提供挂钩（从&lt;a href=&quot;../references/bundled-tools#Mocha&quot;&gt;Mocha&lt;/a&gt;借来的）。</target>
        </trans-unit>
        <trans-unit id="cfdf94fdf7f006cca4ddbcad3ef0f56f8dbf81c1" translate="yes" xml:space="preserve">
          <source>Cypress also records videos when running tests.</source>
          <target state="translated">赛普拉斯在运行测试时还会录制视频。</target>
        </trans-unit>
        <trans-unit id="8683b31eafef2362a9bd609d16533413a684d140" translate="yes" xml:space="preserve">
          <source>Cypress also ships other &lt;a href=&quot;../../plugins/index&quot;&gt;file-watching preprocessors&lt;/a&gt;; you&amp;rsquo;ll have to configure these explicitly if you want to use them.</source>
          <target state="translated">赛普拉斯还提供其他&lt;a href=&quot;../../plugins/index&quot;&gt;文件监视预处理器&lt;/a&gt;；如果要使用它们，则必须显式配置它们。</target>
        </trans-unit>
        <trans-unit id="63a1f2f000f0dedbe564c6836a62c5ac80c45bc2" translate="yes" xml:space="preserve">
          <source>Cypress also supports &lt;code&gt;ES2015&lt;/code&gt; out of the box. You can use either &lt;code&gt;ES2015 modules&lt;/code&gt; or &lt;code&gt;CommonJS modules&lt;/code&gt;. This means you can &lt;code&gt;import&lt;/code&gt; or &lt;code&gt;require&lt;/code&gt; both &lt;strong&gt;npm packages&lt;/strong&gt; and &lt;strong&gt;local relative modules&lt;/strong&gt;.</source>
          <target state="translated">赛普拉斯还 &lt;code&gt;ES2015&lt;/code&gt; 支持ES2015。您可以使用 &lt;code&gt;ES2015 modules&lt;/code&gt; 或 &lt;code&gt;CommonJS modules&lt;/code&gt; 。这意味着你可以 &lt;code&gt;import&lt;/code&gt; 或 &lt;code&gt;require&lt;/code&gt; 两个&lt;strong&gt;NPM包&lt;/strong&gt;和&lt;strong&gt;局部相对模块&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="ce8f3aa96584d41b8d64e9de6ad649d3d8ed5b72" translate="yes" xml:space="preserve">
          <source>Cypress attempts to &lt;a href=&quot;launching-browsers&quot;&gt;automatically find installed Chrome versions for you&lt;/a&gt;. However, probing for browsers across different environments can be error-prone. If Cypress cannot find a browser but you know you have it installed, there are ways to ensure that Cypress can &amp;ldquo;see&amp;rdquo; it.</source>
          <target state="translated">赛普拉斯会尝试&lt;a href=&quot;launching-browsers&quot;&gt;自动为您查找已安装的Chrome版本&lt;/a&gt;。但是，在不同环境中探查浏览器可能容易出错。如果赛普拉斯找不到浏览器，但您知道已安装浏览器，则可以通过多种方法确保赛普拉斯可以&amp;ldquo;看到&amp;rdquo;它。</target>
        </trans-unit>
        <trans-unit id="f462b9b54db2f04608eaf5243099335895e36206" translate="yes" xml:space="preserve">
          <source>Cypress authentication flows using social network providers</source>
          <target state="translated">使用社交网络提供商的赛普拉斯认证流</target>
        </trans-unit>
        <trans-unit id="c60704aea584b8ff4de70f2d2fa6f676195e4834" translate="yes" xml:space="preserve">
          <source>Cypress automates the browser with its own unique architecture - different from any other testing tool. While this unlocks the power to do things you will not find anywhere else, there are specific trade-offs that are made. There is no free lunch!</source>
          <target state="translated">赛普拉斯用自己独特的架构实现了浏览器的自动化--不同于其他任何测试工具。虽然这开启了你在其他任何地方都找不到的功能,但也有特定的权衡。天下没有免费的午餐</target>
        </trans-unit>
        <trans-unit id="7faa7030aaa8dc43242e8b494135ff9c20a49f86" translate="yes" xml:space="preserve">
          <source>Cypress automatically accepts alerts but you can still assert on the text content.</source>
          <target state="translated">赛普拉斯自动接受警报,但你仍然可以对文本内容进行断言。</target>
        </trans-unit>
        <trans-unit id="34020ac87c66d74769afe6f62ac732712505ff9e" translate="yes" xml:space="preserve">
          <source>Cypress automatically bundles and wraps these libraries:</source>
          <target state="translated">Cypress会自动捆绑和包装这些库。</target>
        </trans-unit>
        <trans-unit id="4b9c8f425768b235449d1b7611cdef9610ff6beb" translate="yes" xml:space="preserve">
          <source>Cypress automatically clears all cookies &lt;em&gt;before&lt;/em&gt; each test to prevent state from being shared across tests. You shouldn&amp;rsquo;t need to use this command unless you&amp;rsquo;re using it to clear a specific cookie inside a single test.</source>
          <target state="translated">赛普拉斯会&lt;em&gt;在&lt;/em&gt;每次测试&lt;em&gt;之前&lt;/em&gt;自动清除所有cookie &lt;em&gt;，&lt;/em&gt;以防止在测试之间共享状态。除非使用它来清除单个测试中的特定cookie，否则不需要使用该命令。</target>
        </trans-unit>
        <trans-unit id="8596d3363e8b48e4dde1dd500aa65bc2b5111190" translate="yes" xml:space="preserve">
          <source>Cypress automatically clears all cookies &lt;em&gt;before&lt;/em&gt; each test to prevent state from being shared across tests. You shouldn&amp;rsquo;t need to use this command unless you&amp;rsquo;re using it to clear all cookies inside a single test.</source>
          <target state="translated">赛普拉斯会&lt;em&gt;在&lt;/em&gt;每次测试&lt;em&gt;之前&lt;/em&gt;自动清除所有cookie &lt;em&gt;，&lt;/em&gt;以防止在测试之间共享状态。除非使用它来清除单个测试中的所有cookie，否则不需要使用该命令。</target>
        </trans-unit>
        <trans-unit id="952d12ab951895425a0272c9c486aab6d6f869cb" translate="yes" xml:space="preserve">
          <source>Cypress automatically clears all cookies &lt;strong&gt;before&lt;/strong&gt; each test to prevent state from building up.</source>
          <target state="translated">赛普拉斯会&lt;strong&gt;在&lt;/strong&gt;每次测试&lt;strong&gt;之前&lt;/strong&gt;自动清除所有cookie &lt;strong&gt;，&lt;/strong&gt;以防止状态建立。</target>
        </trans-unit>
        <trans-unit id="288419f1b4e6447098e10f904e22da5ba405beb9" translate="yes" xml:space="preserve">
          <source>Cypress automatically collects the request &lt;code&gt;headers&lt;/code&gt; and the request &lt;code&gt;body&lt;/code&gt; and will make this available to you.</source>
          <target state="translated">赛普拉斯会自动收集请求 &lt;code&gt;headers&lt;/code&gt; 和请求 &lt;code&gt;body&lt;/code&gt; ，并将其提供给您。</target>
        </trans-unit>
        <trans-unit id="a13213c6c4378cce77d1695a5a59a88c4f1b7c43" translate="yes" xml:space="preserve">
          <source>Cypress automatically continues to persist the server and routing configuration even after a test ends. This means you can continue to use your application and still benefit from stubbing or other server configuration.</source>
          <target state="translated">即使在测试结束后,Cypress也会自动继续保持服务器和路由配置。这意味着您可以继续使用您的应用程序,并仍然从存根或其他服务器配置中受益。</target>
        </trans-unit>
        <trans-unit id="448e8a43ed6a0cdd95161a4d71ed4bf076e4e8eb" translate="yes" xml:space="preserve">
          <source>Cypress automatically detects available browsers on your OS. You can switch the browser in the Test Runner by using the drop down in the top right corner:</source>
          <target state="translated">赛普拉斯会自动检测您的操作系统上的可用浏览器,您可以在测试运行器中使用右上角的下拉菜单切换浏览器。您可以在测试运行器中使用右上角的下拉菜单切换浏览器。</target>
        </trans-unit>
        <trans-unit id="195050812f55b35b744ecf4452211c1aab1e9622" translate="yes" xml:space="preserve">
          <source>Cypress automatically detects things like a &lt;code&gt;page transition event&lt;/code&gt; and will automatically &lt;strong&gt;halt&lt;/strong&gt; running commands until the next page has &lt;strong&gt;finished&lt;/strong&gt; loading.</source>
          <target state="translated">赛普拉斯会自动检测到诸如 &lt;code&gt;page transition event&lt;/code&gt; ，并将自动&lt;strong&gt;停止&lt;/strong&gt;运行命令，直到下一页&lt;strong&gt;完成&lt;/strong&gt;加载为止。</target>
        </trans-unit>
        <trans-unit id="4d048d73b85c147a10d9165e637e967d8ea11293" translate="yes" xml:space="preserve">
          <source>Cypress automatically determines the encoding for the following file types:</source>
          <target state="translated">赛普拉斯自动确定以下文件类型的编码。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
