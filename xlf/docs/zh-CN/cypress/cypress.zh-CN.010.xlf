<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="cypress">
    <body>
      <group id="cypress">
        <trans-unit id="b364c643e0bbb6a0399ef8e57defe8f05377042b" translate="yes" xml:space="preserve">
          <source>When clicking on the &lt;code&gt;exec&lt;/code&gt; command within the command log, the console outputs the following:</source>
          <target state="translated">在命令日志中单击 &lt;code&gt;exec&lt;/code&gt; 命令时，控制台将输出以下内容：</target>
        </trans-unit>
        <trans-unit id="673f4d1bd2d53e8ae6336f20133eba9163d7907c" translate="yes" xml:space="preserve">
          <source>When clicking on the &lt;code&gt;filter&lt;/code&gt; command within the command log, the console outputs the following:</source>
          <target state="translated">在命令日志中单击 &lt;code&gt;filter&lt;/code&gt; 命令时，控制台将输出以下内容：</target>
        </trans-unit>
        <trans-unit id="61270eff83cfb94f8b556e6741442758b206ba4e" translate="yes" xml:space="preserve">
          <source>When clicking on the &lt;code&gt;find&lt;/code&gt; command within the command log, the console outputs the following:</source>
          <target state="translated">在命令日志中单击 &lt;code&gt;find&lt;/code&gt; 命令时，控制台将输出以下内容：</target>
        </trans-unit>
        <trans-unit id="35bb481096037d3f568f59cad02791c17ef643f2" translate="yes" xml:space="preserve">
          <source>When clicking on the &lt;code&gt;focus&lt;/code&gt; command within the command log, the console outputs the following:</source>
          <target state="translated">在命令日志中单击 &lt;code&gt;focus&lt;/code&gt; 命令时，控制台将输出以下内容：</target>
        </trans-unit>
        <trans-unit id="41efc44478412337230a05bfa9d7ae9d3d512642" translate="yes" xml:space="preserve">
          <source>When clicking on the &lt;code&gt;focused&lt;/code&gt; command within the command log, the console outputs the following:</source>
          <target state="translated">单击命令日志中的 &lt;code&gt;focused&lt;/code&gt; 命令时，控制台将输出以下内容：</target>
        </trans-unit>
        <trans-unit id="7b7fbb0d20d2a2ac9c76850992e9d7761212b919" translate="yes" xml:space="preserve">
          <source>When clicking on the &lt;code&gt;get&lt;/code&gt; command within the command log, the console outputs the following:</source>
          <target state="translated">在命令日志中单击 &lt;code&gt;get&lt;/code&gt; 命令时，控制台将输出以下内容：</target>
        </trans-unit>
        <trans-unit id="78cd843237a27cecfcf466a4867c87e5a22bae2c" translate="yes" xml:space="preserve">
          <source>When clicking on the &lt;code&gt;go&lt;/code&gt; command within the command log, the console outputs the following:</source>
          <target state="translated">在命令日志中单击 &lt;code&gt;go&lt;/code&gt; 命令时，控制台将输出以下内容：</target>
        </trans-unit>
        <trans-unit id="d6e0c28582f13289887793c6bbe1cb4855484828" translate="yes" xml:space="preserve">
          <source>When clicking on the &lt;code&gt;parent&lt;/code&gt; command within the command log, the console outputs the following:</source>
          <target state="translated">在命令日志中单击 &lt;code&gt;parent&lt;/code&gt; 命令时，控制台将输出以下内容：</target>
        </trans-unit>
        <trans-unit id="ab5af12c8ec63fdc02950296c7b746612ae3e13c" translate="yes" xml:space="preserve">
          <source>When clicking on the &lt;code&gt;parents&lt;/code&gt; command within the command log, the console outputs the following:</source>
          <target state="translated">在命令日志中单击 &lt;code&gt;parents&lt;/code&gt; 命令时，控制台将输出以下内容：</target>
        </trans-unit>
        <trans-unit id="143db253381df49f56fdb0f3a4c97828968afb54" translate="yes" xml:space="preserve">
          <source>When clicking on the &lt;code&gt;readFile&lt;/code&gt; command within the command log, the console outputs the following:</source>
          <target state="translated">在命令日志中单击 &lt;code&gt;readFile&lt;/code&gt; 命令时，控制台将输出以下内容：</target>
        </trans-unit>
        <trans-unit id="c71f1a89ccb1c335a73cb5cfecd7a0ab3f234426" translate="yes" xml:space="preserve">
          <source>When clicking on the &lt;code&gt;root&lt;/code&gt; command within the command log, the console outputs the following:</source>
          <target state="translated">在命令日志中单击 &lt;code&gt;root&lt;/code&gt; 命令时，控制台将输出以下内容：</target>
        </trans-unit>
        <trans-unit id="2b83ffcf2c1f88451cf5534bb86c60b0af8b66f4" translate="yes" xml:space="preserve">
          <source>When clicking on the &lt;code&gt;scrollintoview&lt;/code&gt; command within the command log, the console outputs the following:</source>
          <target state="translated">单击命令日志中的 &lt;code&gt;scrollintoview&lt;/code&gt; 命令时，控制台将输出以下内容：</target>
        </trans-unit>
        <trans-unit id="3c7c95ef3dcffca601d91d247420c7d0b48080f4" translate="yes" xml:space="preserve">
          <source>When clicking on the &lt;code&gt;shadow&lt;/code&gt; command within the command log, the console outputs the following:</source>
          <target state="translated">在命令日志中单击 &lt;code&gt;shadow&lt;/code&gt; 命令时，控制台将输出以下内容：</target>
        </trans-unit>
        <trans-unit id="37d9e724ee55697d253b9e977da19b7e571816a0" translate="yes" xml:space="preserve">
          <source>When clicking on the &lt;code&gt;spy-1&lt;/code&gt; event within the command log, the console outputs the following:</source>
          <target state="translated">在命令日志中单击 &lt;code&gt;spy-1&lt;/code&gt; 事件时，控制台将输出以下内容：</target>
        </trans-unit>
        <trans-unit id="f77e4f4fa0f80a8b2146a99bcf6927103825c898" translate="yes" xml:space="preserve">
          <source>When clicking on the &lt;code&gt;task&lt;/code&gt; command within the command log, the console outputs the following:</source>
          <target state="translated">在命令日志中单击 &lt;code&gt;task&lt;/code&gt; 命令时，控制台将输出以下内容：</target>
        </trans-unit>
        <trans-unit id="5b2002ca671ef4f8ca6c72fecbe5fd86f04f5076" translate="yes" xml:space="preserve">
          <source>When clicking on the &lt;code&gt;tick&lt;/code&gt; command within the command log, the console outputs the following:</source>
          <target state="translated">在命令日志中单击 &lt;code&gt;tick&lt;/code&gt; 命令时，控制台将输出以下内容：</target>
        </trans-unit>
        <trans-unit id="8631507315f979a7cb8a722fa3914bf2d807e122" translate="yes" xml:space="preserve">
          <source>When clicking on the &lt;code&gt;within&lt;/code&gt; command within the command log, the console outputs the following:</source>
          <target state="translated">单击命令日志中的 &lt;code&gt;within&lt;/code&gt; 命令时，控制台将输出以下内容：</target>
        </trans-unit>
        <trans-unit id="6bf2ed81fb4efc3d6940e7189b162e8b86e74238" translate="yes" xml:space="preserve">
          <source>When clicking on the &lt;code&gt;wrap&lt;/code&gt; command within the command log, the console outputs the following:</source>
          <target state="translated">在命令日志中单击 &lt;code&gt;wrap&lt;/code&gt; 命令时，控制台将输出以下内容：</target>
        </trans-unit>
        <trans-unit id="b3515b0d14efce8bf2b6eb7452ae40ee4180bd95" translate="yes" xml:space="preserve">
          <source>When clicking on the &lt;code&gt;writeFile&lt;/code&gt; command within the command log, the console outputs the following:</source>
          <target state="translated">在命令日志中单击 &lt;code&gt;writeFile&lt;/code&gt; 命令时，控制台将输出以下内容：</target>
        </trans-unit>
        <trans-unit id="cf3f16093a85aa01f603fa3b93b50cc9d85a7f8c" translate="yes" xml:space="preserve">
          <source>When coming up with this value, we did a few experiments to find a speed that &amp;ldquo;feels&amp;rdquo; too fast for a user to interact with. You can always &lt;a href=&quot;../references/configuration#Animations&quot;&gt;increase or decrease this threshold&lt;/a&gt;.</source>
          <target state="translated">在得出此值时，我们进行了一些实验，以发现&amp;ldquo;感觉&amp;rdquo;过快的速度，用户无法与之交互。您始终可以&lt;a href=&quot;../references/configuration#Animations&quot;&gt;提高或降低此阈值&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fc93394f74e45c570e0f6cf7122afd769779a5a4" translate="yes" xml:space="preserve">
          <source>When commands are clicked on and logged into the console from the Command Log, they now display their &amp;lsquo;yield&amp;rsquo; instead of &amp;lsquo;return&amp;rsquo;, since they really yield instead of return. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/612&quot;&gt;#612&lt;/a&gt;</source>
          <target state="translated">当单击命令并从命令日志中登录命令时，它们现在显示其&amp;ldquo; yield&amp;rdquo;而不是&amp;ldquo; return&amp;rdquo;，因为它们实际上是屈服而不是return。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/612&quot;&gt;＃612&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ead4da1a68cc1ac4b3f759ecef5973e75218b224" translate="yes" xml:space="preserve">
          <source>When commands are retried and when they are not</source>
          <target state="translated">当命令被重试和不被重试的时候</target>
        </trans-unit>
        <trans-unit id="81ead84dbc327bbb7043faa556b02a6a77e3bb18" translate="yes" xml:space="preserve">
          <source>When conditional testing is a good choice for your tests</source>
          <target state="translated">当条件测试是你的测试的一个好选择时</target>
        </trans-unit>
        <trans-unit id="cb94349095c2d9171293adbf7de1100601aa47b7" translate="yes" xml:space="preserve">
          <source>When creating your own custom command, you can control how it appears and behaves in the Command Log.</source>
          <target state="translated">当创建自己的自定义命令时,你可以控制它在命令日志中的出现方式和行为。</target>
        </trans-unit>
        <trans-unit id="e5f09d527f376e934718253cdc7fa5cebe56724a" translate="yes" xml:space="preserve">
          <source>When debugging a failing test, follow these general principles to isolate the problem:</source>
          <target state="translated">调试失败的测试时,遵循以下一般原则来隔离问题。</target>
        </trans-unit>
        <trans-unit id="dc8510e936d7d1f0a73641c90e06497c0b210b42" translate="yes" xml:space="preserve">
          <source>When determining an unique selector it will automatically prefer elements with:</source>
          <target state="translated">当确定一个独特的选择器时,它将自动优先选择具有以下特征的元素。</target>
        </trans-unit>
        <trans-unit id="641cb04088c3d30f1cc440812e3140d96171c317" translate="yes" xml:space="preserve">
          <source>When developing on Cypress, we now start the process through the CLI to bring it into parity with how it works when used in production. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/838&quot;&gt;#838&lt;/a&gt;.</source>
          <target state="translated">在赛普拉斯上进行开发时，我们现在通过CLI启动该过程，以使其与在生产中使用时的工作方式保持一致。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/838&quot;&gt;＃838&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c21bb5dbf3de840505a35cd548dc431349b9f505" translate="yes" xml:space="preserve">
          <source>When doing so Cypress will automatically validate your subject to ensure it conforms to one of those types.</source>
          <target state="translated">当这样做时,Cypress将自动验证您的主题,以确保它符合这些类型之一。</target>
        </trans-unit>
        <trans-unit id="801680050dc02a05a315eec0690be8feb234a36c" translate="yes" xml:space="preserve">
          <source>When downloading Cypress for the first time, the &lt;code&gt;cypress&lt;/code&gt; command line tool &lt;em&gt;does not&lt;/em&gt; read proxy settings from the Windows registry. If you need to configure a proxy for the installation to work, you must set the appropriate environment variables as described below.</source>
          <target state="translated">首次下载赛普拉斯时， &lt;code&gt;cypress&lt;/code&gt; 命令行工具&lt;em&gt;不会&lt;/em&gt;从Windows注册表中读取代理设置。如果需要配置代理以使安装正常运行，则必须按照以下说明设置适当的环境变量。</target>
        </trans-unit>
        <trans-unit id="e126e8a416a9c36acddae54ecb0124fbdc05b156" translate="yes" xml:space="preserve">
          <source>When editing &lt;code&gt;cypress.json&lt;/code&gt; file, the dead browser page no longer appears. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/492&quot;&gt;#492&lt;/a&gt;.</source>
          <target state="translated">编辑 &lt;code&gt;cypress.json&lt;/code&gt; 文件时，浏览器页面不再出现。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/492&quot;&gt;＃492&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fdea5321ed362d3b919e7df795d87cf6db6c3b9e" translate="yes" xml:space="preserve">
          <source>When editing the &lt;a href=&quot;../references/configuration&quot;&gt;&lt;code&gt;cypress.json&lt;/code&gt;&lt;/a&gt; file, you can use our &lt;a href=&quot;https://on.cypress.io/cypress.schema.json&quot;&gt;json schema file&lt;/a&gt; to get intelligent tooltips in your IDE for each configuration property.</source>
          <target state="translated">编辑&lt;a href=&quot;../references/configuration&quot;&gt; &lt;code&gt;cypress.json&lt;/code&gt; &lt;/a&gt;文件时，可以使用我们的&lt;a href=&quot;https://on.cypress.io/cypress.schema.json&quot;&gt;json模式文件&lt;/a&gt;在IDE中为每个配置属性获取智能工具提示。</target>
        </trans-unit>
        <trans-unit id="ecef3f96a8711c3dd8f7845b2abb06ebe72886d5" translate="yes" xml:space="preserve">
          <source>When element is not in focus</source>
          <target state="translated">当元素不在焦点上时</target>
        </trans-unit>
        <trans-unit id="1e4533044bf135309f6bd7635faca02f083ae309" translate="yes" xml:space="preserve">
          <source>When element&amp;rsquo;s are not visible due to being covered by another element, the error message now says what element is covering what element. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/611&quot;&gt;#611&lt;/a&gt;</source>
          <target state="translated">当某个元素由于被另一个元素覆盖而看不到时，错误消息现在将说明哪个元素覆盖了哪个元素。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/611&quot;&gt;＃611&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="63d0deba2fe6b732270972705e63dc68f49512ac" translate="yes" xml:space="preserve">
          <source>When finished, if necessary, remove the edited Test Runner version and reinstall the Cypress official version to get back to the official released code.</source>
          <target state="translated">完成后,如有必要,将编辑好的Test Runner版本删除,重新安装Cypress官方版本,即可回到官方发布的代码。</target>
        </trans-unit>
        <trans-unit id="fff78527749f5d53a9a2734e0f089cdc64a2f0c0" translate="yes" xml:space="preserve">
          <source>When given a &lt;code&gt;key&lt;/code&gt; argument:</source>
          <target state="translated">当给出 &lt;code&gt;key&lt;/code&gt; 参数时：</target>
        </trans-unit>
        <trans-unit id="6ba04301b18d5a7543b8a72f4baa84955cc0fc2b" translate="yes" xml:space="preserve">
          <source>When given a &lt;code&gt;time&lt;/code&gt; argument:</source>
          <target state="translated">给定 &lt;code&gt;time&lt;/code&gt; 参数时：</target>
        </trans-unit>
        <trans-unit id="b76aeab27bd0b5953443e7e4ffcf86cbfa37a551" translate="yes" xml:space="preserve">
          <source>When given an &lt;code&gt;alias&lt;/code&gt; argument:</source>
          <target state="translated">给定 &lt;code&gt;alias&lt;/code&gt; 参数时：</target>
        </trans-unit>
        <trans-unit id="04fb3a1f680374a1842ea92703f5640d06a5cdbe" translate="yes" xml:space="preserve">
          <source>When hover over commands element layers (2d transforms like rotation) are now taken into account and displayed correctly.</source>
          <target state="translated">当鼠标悬停在命令上时,元素图层(二维变换,如旋转)现在被考虑并正确显示。</target>
        </trans-unit>
        <trans-unit id="6b9254e8941a93db40b432758c3c06c98b3d0b74" translate="yes" xml:space="preserve">
          <source>When hovering over each command, Cypress will automatically display the snapshot in the viewport dimensions that existed when that command ran.</source>
          <target state="translated">当悬停在每个命令上时,Cypress将自动以该命令运行时存在的视口尺寸显示快照。</target>
        </trans-unit>
        <trans-unit id="b219fd10faccfdae13d954c8a005695a13fc37af" translate="yes" xml:space="preserve">
          <source>When in doubt, you can &lt;em&gt;always&lt;/em&gt; issue a regular &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; to query for the elements again.</source>
          <target state="translated">如有疑问，您&lt;em&gt;始终&lt;/em&gt;可以发出常规的&lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt;再次查询元素。</target>
        </trans-unit>
        <trans-unit id="ff038c2267dcdbfd92034fabc8cc6aa03106ae03" translate="yes" xml:space="preserve">
          <source>When it&amp;rsquo;s running in development you can easily:</source>
          <target state="translated">当它在开发中运行时，您可以轻松地：</target>
        </trans-unit>
        <trans-unit id="2f75182a4b2e33f5b3af6d70e1c4a4bf6c2a9622" translate="yes" xml:space="preserve">
          <source>When logging in:</source>
          <target state="translated">登录时。</target>
        </trans-unit>
        <trans-unit id="c35c94c099e7bdb8d1dc2ea1803a97ae2561b282" translate="yes" xml:space="preserve">
          <source>When main app window comes into focus, it will automatically focus other peripheral windows.</source>
          <target state="translated">当主应用窗口进入焦点后,会自动聚焦其他外围窗口。</target>
        </trans-unit>
        <trans-unit id="12cdc2db0d6d6d0a888f42e94b234d7912498371" translate="yes" xml:space="preserve">
          <source>When navigating directly to &lt;code&gt;localhost:2020&lt;/code&gt; outside of the new Cypress browser environment, a message now displays discouraging running tests outside of the new Cypress browser environment.</source>
          <target state="translated">在新的赛普拉斯浏览器环境之外直接导航到 &lt;code&gt;localhost:2020&lt;/code&gt; 时，现在将显示一条消息，在新的赛普拉斯浏览器环境之外显示令人沮丧的正在运行的测试。</target>
        </trans-unit>
        <trans-unit id="3456f2adb503f8fe1b4d811f67472a7bdae92b80" translate="yes" xml:space="preserve">
          <source>When no extension is passed to &lt;code&gt;cy.fixture()&lt;/code&gt;, Cypress will search for files with the specified name within the &lt;a href=&quot;../../guides/references/configuration#Folders-Files&quot;&gt;&lt;code&gt;fixturesFolder&lt;/code&gt;&lt;/a&gt; (which defaults to &lt;code&gt;cypress/fixtures&lt;/code&gt;) and resolve the first one.</source>
          <target state="translated">如果没有扩展名被传递给 &lt;code&gt;cy.fixture()&lt;/code&gt; ，赛普拉斯将搜索范围内具有指定名称的文件&lt;a href=&quot;../../guides/references/configuration#Folders-Files&quot;&gt; &lt;code&gt;fixturesFolder&lt;/code&gt; &lt;/a&gt;（默认为 &lt;code&gt;cypress/fixtures&lt;/code&gt; ）和解决的第一个。</target>
        </trans-unit>
        <trans-unit id="639d45d85f8f66e9cb0a643cae5ab4bd1ad79d38" translate="yes" xml:space="preserve">
          <source>When no extension is passed to &lt;code&gt;cy.fixture()&lt;/code&gt;, Cypress will search for files with the specified name within the &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Folders-Files&quot;&gt;&lt;code&gt;fixturesFolder&lt;/code&gt;&lt;/a&gt; (which defaults to &lt;code&gt;cypress/fixtures&lt;/code&gt;) and resolve the first one.</source>
          <target state="translated">如果没有扩展名被传递给 &lt;code&gt;cy.fixture()&lt;/code&gt; ，赛普拉斯将搜索范围内具有指定名称的文件&lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Folders-Files&quot;&gt; &lt;code&gt;fixturesFolder&lt;/code&gt; &lt;/a&gt;（默认为 &lt;code&gt;cypress/fixtures&lt;/code&gt; ）和解决的第一个。</target>
        </trans-unit>
        <trans-unit id="b941579fd8692f487bf033aa3ec4b7bc72d3ba81" translate="yes" xml:space="preserve">
          <source>When passed a &lt;code&gt;time&lt;/code&gt; argument &lt;code&gt;cy.wait()&lt;/code&gt; can be chained off of &lt;code&gt;cy&lt;/code&gt; or off another command.</source>
          <target state="translated">传递 &lt;code&gt;time&lt;/code&gt; 参数 &lt;code&gt;cy.wait()&lt;/code&gt; 可以将cy.wait（）链接到 &lt;code&gt;cy&lt;/code&gt; 或另一个命令。</target>
        </trans-unit>
        <trans-unit id="70249ff419463e8e1664c672068da9d4d6147bc5" translate="yes" xml:space="preserve">
          <source>When passed an &lt;code&gt;alias&lt;/code&gt; argument &lt;code&gt;cy.wait()&lt;/code&gt; requires being chained off of &lt;code&gt;cy&lt;/code&gt;.</source>
          <target state="translated">当传递一个 &lt;code&gt;alias&lt;/code&gt; 的参数 &lt;code&gt;cy.wait()&lt;/code&gt; 需要被链接的断开 &lt;code&gt;cy&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f84079bf5c45276b13e190886766c3ba2daaffe7" translate="yes" xml:space="preserve">
          <source>When passing &lt;code&gt;fullPage&lt;/code&gt; to the &lt;code&gt;capture&lt;/code&gt; option, Cypress scrolls the application under test from top to bottom, takes screenshots at each point and stitches them together. Due to this, elements that are &lt;code&gt;position: fixed&lt;/code&gt; or &lt;code&gt;position: sticky&lt;/code&gt; will appear multiple times in the final screenshot. To prevent this, in most cases you can programmatically change the element to be &lt;code&gt;position: absolute&lt;/code&gt; before the screenshot and change it back afterwards like shown below:</source>
          <target state="translated">当将 &lt;code&gt;fullPage&lt;/code&gt; 传递到 &lt;code&gt;capture&lt;/code&gt; 选项时，赛普拉斯将从上至下滚动测试中的应用程序，在每个点上截取屏幕截图并将它们缝合在一起。因此，在最终的屏幕截图中， &lt;code&gt;position: fixed&lt;/code&gt; 或 &lt;code&gt;position: sticky&lt;/code&gt; 元素将出现多次。为了防止这种情况，在大多数情况下，您可以通过编程方式将元素设置为 &lt;code&gt;position: absolute&lt;/code&gt; 屏幕截图之前的absolute，然后再更改为如下所示：</target>
        </trans-unit>
        <trans-unit id="a08180b990c137085f24a3a9de8eba84b01860ea" translate="yes" xml:space="preserve">
          <source>When passing a &lt;code&gt;string&lt;/code&gt; as the &lt;code&gt;url&lt;/code&gt;, the XHR&amp;rsquo;s URL must match &lt;em&gt;exactly&lt;/em&gt; what you&amp;rsquo;ve written.</source>
          <target state="translated">当传递 &lt;code&gt;string&lt;/code&gt; 作为 &lt;code&gt;url&lt;/code&gt; 时，XHR的URL必须与您编写的内容&lt;em&gt;完全&lt;/em&gt;匹配。</target>
        </trans-unit>
        <trans-unit id="1c1d481237dabe83d916b37690f35a90d12ccf17" translate="yes" xml:space="preserve">
          <source>When passing a &lt;code&gt;string&lt;/code&gt; as the &lt;code&gt;url&lt;/code&gt;, the XHR&amp;rsquo;s URL must match &lt;em&gt;exactly&lt;/em&gt; what you&amp;rsquo;ve written. You&amp;rsquo;ll want to use the decoded string and not include any hash encoding (ie. use &lt;code&gt;@&lt;/code&gt; instead of &lt;code&gt;%40&lt;/code&gt;).</source>
          <target state="translated">当将 &lt;code&gt;string&lt;/code&gt; 作为 &lt;code&gt;url&lt;/code&gt; 传递时，XHR的URL必须与您编写的内容&lt;em&gt;完全&lt;/em&gt;匹配。您将要使用解码后的字符串，并且不包含任何哈希编码（即，使用 &lt;code&gt;@&lt;/code&gt; 代替 &lt;code&gt;%40&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="378cc3abe7054d8b0c1a0186c3dcb3f9161c629e" translate="yes" xml:space="preserve">
          <source>When passing a RegExp as the &lt;code&gt;url&lt;/code&gt;, the XHR&amp;rsquo;s url will be tested against the regular expression and will apply if it passes.</source>
          <target state="translated">当将RegExp作为 &lt;code&gt;url&lt;/code&gt; 传递时，将针对正则表达式测试XHR的url，如果通过则将应用。</target>
        </trans-unit>
        <trans-unit id="ee6407e014ea7a44a09a0c9ba587480846955944" translate="yes" xml:space="preserve">
          <source>When passing an array of aliases to &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt; there was an edge case where an incorrect error message was being thrown. The incorrect values were a combination of the wrong alias, the wrong timeout value, or the wrong request or response. Now Cypress correctly provides all 3 of these values.</source>
          <target state="translated">将别名数组传递给&lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; 时,&lt;/a&gt;出现了一种极端情况，即抛出了错误的错误消息。错误的值是错误的别名，错误的超时值或错误的请求或响应的组合。现在，赛普拉斯可以正确提供所有这三个值。</target>
        </trans-unit>
        <trans-unit id="73146fb842db129a8f42e4896028236c04102bb7" translate="yes" xml:space="preserve">
          <source>When passing an array of aliases to &lt;code&gt;cy.wait()&lt;/code&gt;, Cypress will wait for all requests to complete within the given &lt;code&gt;requestTimeout&lt;/code&gt; and &lt;code&gt;responseTimeout&lt;/code&gt;.</source>
          <target state="translated">当将别名数组传递给 &lt;code&gt;cy.wait()&lt;/code&gt; 时，赛普拉斯将等待所有请求在给定的 &lt;code&gt;requestTimeout&lt;/code&gt; 和 &lt;code&gt;responseTimeout&lt;/code&gt; 内完成。</target>
        </trans-unit>
        <trans-unit id="7632c625e18892d53bf74cdc79799fd95a0b90cb" translate="yes" xml:space="preserve">
          <source>When passing the option &lt;code&gt;{ force: true }&lt;/code&gt; to &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt;, we no longer attempt to scroll the element into view. We&amp;rsquo;ve also disabled the check that the element is in view before clicking or typing. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/553&quot;&gt;#553&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/537&quot;&gt;#537&lt;/a&gt;.</source>
          <target state="translated">当将选项 &lt;code&gt;{ force: true }&lt;/code&gt; 传递给&lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; 时&lt;/a&gt;，我们不再尝试将元素滚动到视图中。我们还禁用了单击或键入之前检查元素是否在视图中的检查。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/553&quot;&gt;＃553&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/537&quot;&gt;＃537&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e9fcb01986a3151c59909e120528b2e3aa69dbcf" translate="yes" xml:space="preserve">
          <source>When recording to the Dashboard Service, we now provide estimated durations per spec directly within the standard output, as long as the spec has had enough run history for this to be determined. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2276&quot;&gt;#2276&lt;/a&gt;.</source>
          <target state="translated">当记录到仪表板服务时，我们现在直接在标准输出中提供每个规范的估计持续时间，只要该规范具有足够的运行历史记录即可确定。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2276&quot;&gt;＃2276&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d84d00ae20eafab83131fbe5add99c26271e45fe" translate="yes" xml:space="preserve">
          <source>When recording to the Dashboard we now more accurately collect commit details when it is missing from the local &lt;code&gt;git&lt;/code&gt; data. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2129&quot;&gt;#2129&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2073&quot;&gt;#2073&lt;/a&gt;.</source>
          <target state="translated">现在，当记录到仪表板时，我们可以更准确地收集本地 &lt;code&gt;git&lt;/code&gt; 数据中缺少的提交详细信息。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2129&quot;&gt;＃2129&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2073&quot;&gt;＃2073&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="74cf0bf1ab55097c43398eb2086002aade6c83c2" translate="yes" xml:space="preserve">
          <source>When recording to the Dashboard, unrecognized warnings coming from the API server are now displayed in stdout. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4489&quot;&gt;#4489&lt;/a&gt;.</source>
          <target state="translated">记录到仪表板时，来自API服务器的无法识别的警告现在显示在标准输出中。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4489&quot;&gt;＃4489&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d6df0a5af4f1ba65f08a0e753f1281d60d3fe621" translate="yes" xml:space="preserve">
          <source>When requests are not stubbed, this guarantees that the &lt;em&gt;contract&lt;/em&gt; between your client and server is working correctly.</source>
          <target state="translated">当请求不存根时，这可以确保客户端和服务器之间的&lt;em&gt;合同&lt;/em&gt;正常运行。</target>
        </trans-unit>
        <trans-unit id="8ccdd8e32996fda17d33acbd519cc6d10ec0898e" translate="yes" xml:space="preserve">
          <source>When reverting the DOM, associated command elements are now automatically scrolled into view.</source>
          <target state="translated">当还原DOM时,相关的命令元素现在会自动滚动到视图中。</target>
        </trans-unit>
        <trans-unit id="19880ebae16cdb31a280fa67290cbf2a519b5837" translate="yes" xml:space="preserve">
          <source>When running &lt;code&gt;cypress run --record&lt;/code&gt; on forked PR&amp;rsquo;s, we now detect that the Record Key is missing and do not fail the build. We will display a warning, but continue running the tests. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1193&quot;&gt;#1193&lt;/a&gt;.</source>
          <target state="translated">在派生的PR上运行 &lt;code&gt;cypress run --record&lt;/code&gt; 时，我们现在检测到Record Key丢失了，并且不会使构建失败。我们将显示警告，但继续运行测试。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1193&quot;&gt;＃1193&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fd9ebdee5a017b52cb59397952ffa952eed4d038" translate="yes" xml:space="preserve">
          <source>When running &lt;code&gt;cypress run&lt;/code&gt; or in CI, Cypress will now automatically take a screenshot when a test fails. You can optionally turn this off by setting &lt;a href=&quot;configuration#Screenshots&quot;&gt;&lt;code&gt;screenshotOnHeadlessFailure&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;false&lt;/code&gt; in your configuration.</source>
          <target state="translated">在 &lt;code&gt;cypress run&lt;/code&gt; 或在CI中运行时，赛普拉斯现在将在测试失败时自动拍摄屏幕截图。您可以选择通过在配置中将&lt;a href=&quot;configuration#Screenshots&quot;&gt; &lt;code&gt;screenshotOnHeadlessFailure&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;false&lt;/code&gt; 来关闭此功能。</target>
        </trans-unit>
        <trans-unit id="82945ae5c789764007c9dad2d2fc05fe6ff0ee17" translate="yes" xml:space="preserve">
          <source>When running Cypress with &lt;code&gt;NODE_OPTIONS&lt;/code&gt; environment variables set, Cypress no longer issues an incorrect 0 exit code. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1676&quot;&gt;#1676&lt;/a&gt;</source>
          <target state="translated">在设置了 &lt;code&gt;NODE_OPTIONS&lt;/code&gt; 环境变量的情况下运行赛普拉斯时，赛普拉斯不再发出不正确的0退出代码。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1676&quot;&gt;＃1676&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="be27f0732057e0f639c4b56ff8fb71a73aa8fe8c" translate="yes" xml:space="preserve">
          <source>When running a project in the new Cypress browser environment, if a new tab is opened, a message now displays discouraging the use of multiple tabs while testing. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/9&quot;&gt;#9&lt;/a&gt;.</source>
          <target state="translated">在新的赛普拉斯浏览器环境中运行项目时，如果打开了一个新选项卡，则现在会显示一条消息，阻止在测试时使用多个选项卡。地址&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/9&quot;&gt;＃9&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="be758852e49cb340d8318094804db4524fd946e6" translate="yes" xml:space="preserve">
          <source>When running in &lt;a href=&quot;https://circleci.com/&quot;&gt;Circle CI&lt;/a&gt;, we automatically export screenshots as artifacts which makes them available directly in their web UI. If you&amp;rsquo;re using Circle CI, you&amp;rsquo;ll be able to see screenshots without doing anything. If you&amp;rsquo;re using &lt;a href=&quot;https://travis-ci.org/&quot;&gt;Travis CI&lt;/a&gt;, you&amp;rsquo;ll need to upload artifacts to an &lt;code&gt;s3 bucket&lt;/code&gt;. This is a small slice of what is coming to help diagnose and understand errors in CI. Also in &lt;code&gt;0.17.0&lt;/code&gt; we will automatically scroll the tests and more intelligently and open / close test commands so you can visually see what happened. Currently you may not see the test command&amp;rsquo;s failure in the Command Log due to the view not scrolling.</source>
          <target state="translated">在&lt;a href=&quot;https://circleci.com/&quot;&gt;Circle CI中&lt;/a&gt;运行时，我们会自动将屏幕截图导出为工件，从而使它们可以直接在其Web UI中使用。如果您使用Circle CI，则无需执行任何操作即可查看屏幕截图。如果您使用&lt;a href=&quot;https://travis-ci.org/&quot;&gt;Travis CI&lt;/a&gt;，则需要将工件上传到 &lt;code&gt;s3 bucket&lt;/code&gt; 。这只是有助于诊断和理解CI错误的一小部分。同样在 &lt;code&gt;0.17.0&lt;/code&gt; 中,我们将自动更智能地滚动测试，并打开/关闭测试命令，以便您直观地看到发生了什么。当前，由于视图未滚动，您可能无法在命令日志中看到测试命令的失败。</target>
        </trans-unit>
        <trans-unit id="01ad2aead278fa746de1240cef82e91260c50359" translate="yes" xml:space="preserve">
          <source>When running in interactive mode using &lt;a href=&quot;../guides/command-line#cypress-open&quot;&gt;&lt;code&gt;cypress open&lt;/code&gt;&lt;/a&gt; Cypress watches the filesystem for changes to your spec files. Soon after adding or updating a test Cypress will reload it and run all of the tests in that spec file.</source>
          <target state="translated">当使用&lt;a href=&quot;../guides/command-line#cypress-open&quot;&gt; &lt;code&gt;cypress open&lt;/code&gt; &lt;/a&gt;在交互式模式下运行时，Cypress会监视文件系统中您的spec文件的更改。添加或更新测试后不久，赛普拉斯将重新加载它并运行该规范文件中的所有测试。</target>
        </trans-unit>
        <trans-unit id="d4736574368de6325a3b94619c7fddd98647909b" translate="yes" xml:space="preserve">
          <source>When running tests with non-string test titles, the screenshots now automatically stringify the test titles instead of throwing an error. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4310&quot;&gt;#4310&lt;/a&gt;.</source>
          <target state="translated">现在，当使用非字符串测试标题运行测试时，屏幕截图会自动对测试标题进行字符串化处理，而不会引发错误。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4310&quot;&gt;＃4310&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="28a1ab912b82a2b297a580d62c62b893e213fcda" translate="yes" xml:space="preserve">
          <source>When running through &lt;code&gt;cypress run&lt;/code&gt; or in &lt;a href=&quot;../../guides/guides/continuous-integration&quot;&gt;Continuous Integration&lt;/a&gt;, Cypress automatically takes a screenshot when a test fails. You can optionally turn this off by setting &lt;code&gt;screenshotOnRunFailure&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; within &lt;a href=&quot;../cypress-api/screenshot-api&quot;&gt;Cypress.Screenshot.defaults()&lt;/a&gt;.</source>
          <target state="translated">在 &lt;code&gt;cypress run&lt;/code&gt; 或在&lt;a href=&quot;../../guides/guides/continuous-integration&quot;&gt;Continuous Integration中&lt;/a&gt;运行时，当测试失败时，赛普拉斯会自动截取屏幕截图。您可以选择通过在&lt;a href=&quot;../cypress-api/screenshot-api&quot;&gt;Cypress.Screenshot.defaults（）中将&lt;/a&gt; &lt;code&gt;screenshotOnRunFailure&lt;/code&gt; 设置为 &lt;code&gt;false&lt;/code&gt; 来关闭此功能。</target>
        </trans-unit>
        <trans-unit id="8e0ee048759469325a5ec3cc2b6c5e278cf53044" translate="yes" xml:space="preserve">
          <source>When running through &lt;code&gt;cypress run&lt;/code&gt; or in &lt;a href=&quot;https://docs.cypress.io/guides/guides/continuous-integration.html&quot;&gt;Continuous Integration&lt;/a&gt;, Cypress automatically takes a screenshot when a test fails. You can optionally turn this off by setting &lt;code&gt;screenshotOnRunFailure&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; within your &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Screenshots&quot;&gt;&lt;code&gt;screenshotOnRunFailure&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../cypress-api/screenshot-api&quot;&gt;Cypress.Screenshot.defaults()&lt;/a&gt;.</source>
          <target state="translated">在 &lt;code&gt;cypress run&lt;/code&gt; 或在&lt;a href=&quot;https://docs.cypress.io/guides/guides/continuous-integration.html&quot;&gt;Continuous Integration中&lt;/a&gt;运行时，当测试失败时，赛普拉斯会自动拍摄屏幕截图。您可以通过设置可选择关闭此功能 &lt;code&gt;screenshotOnRunFailure&lt;/code&gt; 到 &lt;code&gt;false&lt;/code&gt; 你之内&lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Screenshots&quot;&gt; &lt;code&gt;screenshotOnRunFailure&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../cypress-api/screenshot-api&quot;&gt;Cypress.Screenshot.defaults（） &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2a5043a6728d3566be3d99364b44c8c239413d4b" translate="yes" xml:space="preserve">
          <source>When running through the CLI, Cypress will now display an error if the server&amp;rsquo;s port is currently in use. Previously this would not output an error and the process would just hang.</source>
          <target state="translated">通过CLI运行时，如果当前正在使用服务器的端口，则Cypress将显示错误。以前这不会输出错误，而过程只会挂起。</target>
        </trans-unit>
        <trans-unit id="8d8c2b829a087efc0dbfc17ea07ce36042054e28" translate="yes" xml:space="preserve">
          <source>When running with &lt;code&gt;cypress run&lt;/code&gt; we now run each spec file in isolation from others. We have rewritten our reporter to provide more details and provide a summary of the run at the bottom.</source>
          <target state="translated">在使用 &lt;code&gt;cypress run&lt;/code&gt; 运行时,我们现在将每个spec文件与其他文件隔离开来运行。我们重写了我们的报告程序，以提供更多详细信息，并在底部提供运行摘要。</target>
        </trans-unit>
        <trans-unit id="96820865eba9c88ed15dc2755393b969247556d2" translate="yes" xml:space="preserve">
          <source>When starting a series of commands:</source>
          <target state="translated">当启动一系列命令时。</target>
        </trans-unit>
        <trans-unit id="a58c4133ebdb9ad0509c9bc0be623bebac5ed766" translate="yes" xml:space="preserve">
          <source>When starting up after being installed, Cypress will attempt to load the proxy configured in the Windows registry by default. &lt;a href=&quot;https://www.howtogeek.com/tips/how-to-set-your-proxy-settings-in-windows-8.1/&quot;&gt;Learn how to set your proxy settings system-wide in Windows.&lt;/a&gt;</source>
          <target state="translated">在安装后启动时，赛普拉斯将默认尝试加载Windows注册表中配置的代理。&lt;a href=&quot;https://www.howtogeek.com/tips/how-to-set-your-proxy-settings-in-windows-8.1/&quot;&gt;了解如何在Windows中在系统范围内设置代理设置。&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b786af6d2599d9e10e26c483bd206961ee791ae5" translate="yes" xml:space="preserve">
          <source>When stubbing a response, you typically need to manage potentially large and complex JSON objects. Cypress allows you to integrate fixture syntax directly into responses.</source>
          <target state="translated">在支管响应时,您通常需要管理潜在的大型和复杂的JSON对象。赛普拉斯允许您将夹具语法直接集成到响应中。</target>
        </trans-unit>
        <trans-unit id="728d506383d7c4ff287770bd662f8a42e91fcc69" translate="yes" xml:space="preserve">
          <source>When stubs are created by calling the method &lt;code&gt;.withArgs(...)&lt;/code&gt; we also visually link these together.</source>
          <target state="translated">当通过调用方法 &lt;code&gt;.withArgs(...)&lt;/code&gt; 创建存根时，我们还将它们可视化地链接在一起。</target>
        </trans-unit>
        <trans-unit id="b272d509460177374837244707495582159cb71a" translate="yes" xml:space="preserve">
          <source>When the cookie expires, specified in seconds since &lt;a href=&quot;https://en.wikipedia.org/wiki/Unix_time&quot;&gt;Unix Epoch&lt;/a&gt;.</source>
          <target state="translated">Cookie过期时，以&lt;a href=&quot;https://en.wikipedia.org/wiki/Unix_time&quot;&gt;Unix Epoch&lt;/a&gt;以来的秒数指定。</target>
        </trans-unit>
        <trans-unit id="f4cad3e7ea25cfc9a592ff7d792a18579c8a1be5" translate="yes" xml:space="preserve">
          <source>When the current URL contains a hash:</source>
          <target state="translated">当当前的URL包含一个哈希值时。</target>
        </trans-unit>
        <trans-unit id="495f5682d38540f1c3ffe3f9fe5aad571c564b92" translate="yes" xml:space="preserve">
          <source>When the current URL does not contain a hash:</source>
          <target state="translated">当当前URL不包含哈希值时。</target>
        </trans-unit>
        <trans-unit id="be7267b2ac003ba3aa0d3454f2c2a079586b70e1" translate="yes" xml:space="preserve">
          <source>When the error is fixed in your test file, your tests will automatically re-run.</source>
          <target state="translated">当你的测试文件中的错误被修复后,你的测试将自动重新运行。</target>
        </trans-unit>
        <trans-unit id="ce3845ceaaae7533b66391da21acd439dc3b3316" translate="yes" xml:space="preserve">
          <source>When the running spec, the project, or the browser is closed while running tests, the &lt;code&gt;close&lt;/code&gt; event will be emitted. The preprocessor should do any necessary cleanup in this function, like closing the watcher when watching.</source>
          <target state="translated">在运行测试时关闭正在运行的规范，项目或浏览器时，将发出 &lt;code&gt;close&lt;/code&gt; 事件。预处理程序应对此功能进行任何必要的清理，例如在观看时关闭观察器。</target>
        </trans-unit>
        <trans-unit id="ac12d9dcf09bc198c3995ebf57459f800db84fa3" translate="yes" xml:space="preserve">
          <source>When the test calls &lt;code&gt;add(2, 3)&lt;/code&gt;, the counter increments inside the &amp;ldquo;add&amp;rdquo; function are executed, and the coverage object becomes:</source>
          <target state="translated">当测试调用 &lt;code&gt;add(2, 3)&lt;/code&gt; ，将在&amp;ldquo; add&amp;rdquo;函数内执行计数器递增，并且coverage对象变为：</target>
        </trans-unit>
        <trans-unit id="a2f2be8b24e4dd1d9d4a4bc0c9a89d6d42ac0720" translate="yes" xml:space="preserve">
          <source>When the url changes this is now logged as a page event, and its &lt;code&gt;onConsole&lt;/code&gt; logs what caused it to change.</source>
          <target state="translated">当url更改时，现在将其记录为页面事件，并且其 &lt;code&gt;onConsole&lt;/code&gt; 记录了导致更改的原因。</target>
        </trans-unit>
        <trans-unit id="6e537db1847b9f83392ca7284ce19c9e04c6fb0a" translate="yes" xml:space="preserve">
          <source>When the web application runs without the delay, it gets its items into the DOM before the Cypress command &lt;code&gt;cy.get('.todo-list li')&lt;/code&gt; runs. After the &lt;code&gt;cy.get()&lt;/code&gt; returns 2 items, the &lt;code&gt;.find()&lt;/code&gt; command just has to find the right label. Great.</source>
          <target state="translated">当Web应用程序无延迟运行时，它将在Cypress命令 &lt;code&gt;cy.get('.todo-list li')&lt;/code&gt; 运行之前将其项放入DOM 。在 &lt;code&gt;cy.get()&lt;/code&gt; 返回2个项目之后， &lt;code&gt;.find()&lt;/code&gt; 命令只需找到正确的标签。大。</target>
        </trans-unit>
        <trans-unit id="c17c460146884420ef0209a24a059dea7188fb1f" translate="yes" xml:space="preserve">
          <source>When they click the link labeled &lt;code&gt;type&lt;/code&gt;</source>
          <target state="translated">当他们单击标记为 &lt;code&gt;type&lt;/code&gt; 的链接时</target>
        </trans-unit>
        <trans-unit id="e57b9504e95a5138e2a2796ac404bd8be829bd5a" translate="yes" xml:space="preserve">
          <source>When true, automatically takes a screenshot when there is a failure during &lt;code&gt;cypress run&lt;/code&gt;.</source>
          <target state="translated">设置为true时，在 &lt;code&gt;cypress run&lt;/code&gt; 失败时自动获取屏幕截图。</target>
        </trans-unit>
        <trans-unit id="2e14540fadbae9d8939f41e8be2235e4f3fa46a1" translate="yes" xml:space="preserve">
          <source>When true, automatically takes a screenshot when there is a failure in Run mode.</source>
          <target state="translated">当为 &quot;true &quot;时,在运行模式下出现故障时自动截图。</target>
        </trans-unit>
        <trans-unit id="953201de643f1b2feed9b255c60f710fd2d75e84" translate="yes" xml:space="preserve">
          <source>When true, prevents JavaScript timers (&lt;code&gt;setTimeout&lt;/code&gt;, &lt;code&gt;setInterval&lt;/code&gt;, etc) and CSS animations from running while the screenshot is taken.</source>
          <target state="translated">如果为true，则在截屏时禁止JavaScript计时器（ &lt;code&gt;setTimeout&lt;/code&gt; ， &lt;code&gt;setInterval&lt;/code&gt; 等）和CSS动画运行。</target>
        </trans-unit>
        <trans-unit id="a256ae1b12492a2827e095a3ef3123ac8c634c9f" translate="yes" xml:space="preserve">
          <source>When uncaught errors are thrown in hooks we now indicate Mocha&amp;rsquo;s behavior as part of the error - that it is skipping the remaining tests in the current suite. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/240&quot;&gt;#240&lt;/a&gt;.</source>
          <target state="translated">现在，当未捕获的错误抛出异常时，我们现在将Mocha的行为表示为错误的一部分-它会跳过当前套件中的其余测试。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/240&quot;&gt;＃240&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="63c9595d73e95be93d74ca3a8b5f4c7ce979b0fc" translate="yes" xml:space="preserve">
          <source>When used with an alias, &lt;code&gt;cy.wait()&lt;/code&gt; goes through two separate &amp;ldquo;waiting&amp;rdquo; periods.</source>
          <target state="translated">与别名一起使用时， &lt;code&gt;cy.wait()&lt;/code&gt; 经历两个单独的&amp;ldquo;等待&amp;rdquo;时间段。</target>
        </trans-unit>
        <trans-unit id="2f7b284874d2f7c9fe6ce1ff618a8d456e0592d2" translate="yes" xml:space="preserve">
          <source>When users navigate between pages with commands, like &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt;, Cypress now correctly waits until the age has finished loading before running more commands. Previously this waited for the &lt;code&gt;unload&lt;/code&gt; event, which did not fire synchronously, and ow we bind to &lt;code&gt;beforeunload&lt;/code&gt; which does. Additionally Cypress checks to ensure &lt;code&gt;beforeunload&lt;/code&gt; did not return a non-undefined value.</source>
          <target state="translated">现在，当用户使用诸​​如&lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; 之&lt;/a&gt;类的命令在页面之间导航时，赛普拉斯现在可以正确地等待年龄加载完成，然后再运行更多命令。以前，此方法等待未同步触发的 &lt;code&gt;unload&lt;/code&gt; 事件，并且现在我们绑定到 &lt;code&gt;beforeunload&lt;/code&gt; 这一点的beforeunload。此外，赛普拉斯 &lt;code&gt;beforeunload&lt;/code&gt; 进行检查以确保beforeunload不会返回非不确定值。</target>
        </trans-unit>
        <trans-unit id="30d4c4ff71bd934c9fa52d70ba4611911d8491e7" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;../../api/commands/select&quot;&gt;&lt;code&gt;.select()&lt;/code&gt;&lt;/a&gt; on a select with multiple options with the same value, we now properly set &lt;code&gt;selectedIndex&lt;/code&gt; and &lt;code&gt;selectedOptions&lt;/code&gt; on the &lt;code&gt;select&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/554&quot;&gt;#554&lt;/a&gt;.</source>
          <target state="translated">在具有多个具有相同值的选项的选择上使用&lt;a href=&quot;../../api/commands/select&quot;&gt; &lt;code&gt;.select()&lt;/code&gt; &lt;/a&gt;时，我们现在在 &lt;code&gt;select&lt;/code&gt; 上正确设置了 &lt;code&gt;selectedIndex&lt;/code&gt; 和 &lt;code&gt;selectedOptions&lt;/code&gt; 。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/554&quot;&gt;＃554&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7038282aee174018d5e684492933319a62ce4b8e" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;this.users&lt;/code&gt; we have access to it synchronously, whereas when using &lt;code&gt;cy.get('@users')&lt;/code&gt; it becomes an asynchronous command.</source>
          <target state="translated">使用 &lt;code&gt;this.users&lt;/code&gt; 时,我们可以同步访问它，而当使用 &lt;code&gt;cy.get('@users')&lt;/code&gt; 它将成为异步命令。</target>
        </trans-unit>
        <trans-unit id="3d68d72d4181e1b4359ac07b37fc7ba41c74a6e7" translate="yes" xml:space="preserve">
          <source>When using a callback function with &lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt;, be sure that the entire function can be executed multiple times without side effects. Cypress applies its &lt;a href=&quot;retry-ability&quot;&gt;retry&lt;/a&gt; logic to these functions: if there&amp;rsquo;s a failure, it will repeatedly rerun the assertions until the timeout is reached. That means your code should be retry-safe. The technical term for this means your code must be &lt;strong&gt;idempotent&lt;/strong&gt;.</source>
          <target state="translated">将回调函数与&lt;a href=&quot;../../api/commands/should&quot;&gt; &lt;code&gt;.should()&lt;/code&gt; 一起使用时&lt;/a&gt;，请确保整个函数可以多次执行而没有副作用。赛普拉斯将其&lt;a href=&quot;retry-ability&quot;&gt;重试&lt;/a&gt;逻辑应用于这些功能：如果发生故障，它将反复重新运行断言，直到达到超时为止。这意味着您的代码应重试安全。这个技术术语意味着您的代码必须是&lt;strong&gt;幂等的&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="bdd00944f31b6aa9b2e9bbd8de4f1e5cc50e4465" translate="yes" xml:space="preserve">
          <source>When using a callback function with &lt;code&gt;.should()&lt;/code&gt; or &lt;code&gt;.and()&lt;/code&gt;, on the other hand, there is special logic to rerun the callback function until no assertions throw within it. You should be careful of side affects in a &lt;code&gt;.should()&lt;/code&gt; or &lt;code&gt;.and()&lt;/code&gt; callback function that you would not want performed multiple times.</source>
          <target state="translated">另一方面，将回调函数与 &lt;code&gt;.should()&lt;/code&gt; 或 &lt;code&gt;.and()&lt;/code&gt; 一起使用时，有特殊的逻辑来重新运行该回调函数，直到其中没有任何断言。您应该注意不要多次执行的 &lt;code&gt;.should()&lt;/code&gt; 或 &lt;code&gt;.and()&lt;/code&gt; 回调函数中的副作用。</target>
        </trans-unit>
        <trans-unit id="7dd8e99d7a1f0c4490a0d6a34076a8e3319a92c5" translate="yes" xml:space="preserve">
          <source>When using aliases with DOM elements, Cypress will query the DOM again if the previously aliased DOM element has gone stale.</source>
          <target state="translated">当对DOM元素使用别名时,如果之前别名的DOM元素已经失效,Cypress会再次查询DOM。</target>
        </trans-unit>
        <trans-unit id="1bb50bc6152854cf462d82039f015fed762fab55" translate="yes" xml:space="preserve">
          <source>When using special character sequences, it&amp;rsquo;s possible to activate modifier keys and type key combinations, such as &lt;code&gt;CTRL + R&lt;/code&gt; or &lt;code&gt;SHIFT + ALT + Q&lt;/code&gt;. The modifier(s) remain activated for the duration of the &lt;code&gt;.type()&lt;/code&gt; command, and are released when all subsequent characters are typed, unless &lt;a href=&quot;type#Options&quot;&gt;&lt;code&gt;{release: false}&lt;/code&gt;&lt;/a&gt; is passed as an &lt;a href=&quot;type#Key-Combinations&quot;&gt;option&lt;/a&gt;. A &lt;code&gt;keydown&lt;/code&gt; event is fired when a modifier is activated and a &lt;code&gt;keyup&lt;/code&gt; event is fired when it is released.</source>
          <target state="translated">当使用特殊的字符序列，这是可能的，以激活修饰键和键入键组合，如 &lt;code&gt;CTRL + R&lt;/code&gt; 或 &lt;code&gt;SHIFT + ALT + Q&lt;/code&gt; 。修饰符在 &lt;code&gt;.type()&lt;/code&gt; 命令期间保持激活状态，并在键入所有后续字符时&lt;a href=&quot;type#Options&quot;&gt; &lt;code&gt;{release: false}&lt;/code&gt; &lt;/a&gt;，除非将{release：false}作为&lt;a href=&quot;type#Key-Combinations&quot;&gt;选项&lt;/a&gt;传递。一个 &lt;code&gt;keydown&lt;/code&gt; 当处于激活状态，事件被触发，一个 &lt;code&gt;keyup&lt;/code&gt; 当它被释放事件。</target>
        </trans-unit>
        <trans-unit id="ce74957c1aa2f0ee65331aca52b1f528d0203edc" translate="yes" xml:space="preserve">
          <source>When using special character sequences, it&amp;rsquo;s possible to activate modifier keys and type key combinations, such as &lt;code&gt;CTRL+R&lt;/code&gt; or &lt;code&gt;SHIFT+ALT+b&lt;/code&gt;. Single key combinations can be specified with &lt;code&gt;{modifier+key}&lt;/code&gt; syntax.</source>
          <target state="translated">使用特殊字符序列时，可以激活修饰键并键入组合键，例如 &lt;code&gt;CTRL+R&lt;/code&gt; 或 &lt;code&gt;SHIFT+ALT+b&lt;/code&gt; 。可以使用 &lt;code&gt;{modifier+key}&lt;/code&gt; 语法指定单键组合。</target>
        </trans-unit>
        <trans-unit id="5040ce5d72a5dad196e1af18f360ea344de26466" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;--record&lt;/code&gt; flag while running your tests, videos are processed, compressed, and uploaded to the &lt;a href=&quot;../dashboard/introduction&quot;&gt;Dashboard Service&lt;/a&gt; after every spec file runs, successful or not. To change this behavior to only process videos in the case that tests fail, set the &lt;a href=&quot;../references/configuration#Videos&quot;&gt;&lt;code&gt;videoUploadOnPasses&lt;/code&gt;&lt;/a&gt; configuration option to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">在运行测试时使用 &lt;code&gt;--record&lt;/code&gt; 标志时，无论是否成功运行每个规范文件，都会对视频进行处理，压缩并上载到&lt;a href=&quot;../dashboard/introduction&quot;&gt;仪表板服务&lt;/a&gt;。要将此行为更改为仅在测试失败的情况下处理视频，请将&lt;a href=&quot;../references/configuration#Videos&quot;&gt; &lt;code&gt;videoUploadOnPasses&lt;/code&gt; &lt;/a&gt;配置选项设置为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="67dc8d993be9d9bb9a2023aec7b5e5a0390ddc8a" translate="yes" xml:space="preserve">
          <source>When using the new &lt;a href=&quot;../guides/command-line#cypress-run-parallel&quot;&gt;&lt;code&gt;&amp;ndash;parallel&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../guides/command-line#cypress-run-group-lt-name-gt&quot;&gt;&lt;code&gt;&amp;ndash;group&lt;/code&gt;&lt;/a&gt; feature, we now visually indicate that to you in the standard output when recording. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2275&quot;&gt;#2275&lt;/a&gt;.</source>
          <target state="translated">现在，当使用新的&lt;a href=&quot;../guides/command-line#cypress-run-parallel&quot;&gt; &lt;code&gt;&amp;ndash;parallel&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../guides/command-line#cypress-run-group-lt-name-gt&quot;&gt; &lt;code&gt;&amp;ndash;group&lt;/code&gt; &lt;/a&gt;功能时，在录制时，我们现在在标准输出中直观地向您表明这一点。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2275&quot;&gt;＃2275&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b296e6af02863fcec9a59a6c3bf61e48f19cecf0" translate="yes" xml:space="preserve">
          <source>When viewing the Test Runner&amp;rsquo;s main window at its smallest size, the header text no longer incorrectly wraps. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/86&quot;&gt;#86&lt;/a&gt;.</source>
          <target state="translated">以最小尺寸查看&amp;ldquo;测试运行器&amp;rdquo;的主窗口时，标题文本不再错误地换行。地址&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/86&quot;&gt;＃86&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0857e3a4cb62b9c295e57521b62607f57f6e4897" translate="yes" xml:space="preserve">
          <source>When visiting non same-origin URL, Cypress will &lt;a href=&quot;https://docs.cypress.io/guides/guides/web-security.html&quot;&gt;change the hosted URL to the new URL&lt;/a&gt;, wiping the state of any local variables. We want to save a variable across visiting non same-origin URLs.</source>
          <target state="translated">当访问非同源URL时，赛普拉斯将把&lt;a href=&quot;https://docs.cypress.io/guides/guides/web-security.html&quot;&gt;托管URL更改为新URL&lt;/a&gt;，从而清除任何局部变量的状态。我们希望在访问非同源URL时保存一个变量。</target>
        </trans-unit>
        <trans-unit id="282f40905cefe5e210f76ad839710dd0879285ea" translate="yes" xml:space="preserve">
          <source>When we check &lt;code&gt;glob&lt;/code&gt; patterns with &lt;a href=&quot;https://github.com/isaacs/minimatch&quot;&gt;minimatch&lt;/a&gt;, by default Cypress uses sets &lt;code&gt;matchBase&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;. You can override this option in &lt;a href=&quot;server&quot;&gt;&lt;code&gt;cy.server()&lt;/code&gt;&lt;/a&gt; options.</source>
          <target state="translated">当我们使用&lt;a href=&quot;https://github.com/isaacs/minimatch&quot;&gt;minimatch&lt;/a&gt;检查 &lt;code&gt;glob&lt;/code&gt; 模式时，默认情况下，赛普拉斯 &lt;code&gt;matchBase&lt;/code&gt; 设置为 &lt;code&gt;true&lt;/code&gt; 。您可以在&lt;a href=&quot;server&quot;&gt; &lt;code&gt;cy.server()&lt;/code&gt; &lt;/a&gt;选项中覆盖此选项。</target>
        </trans-unit>
        <trans-unit id="f82047af0b1f625497e25096bc0711853e858956" translate="yes" xml:space="preserve">
          <source>When we reference &lt;code&gt;@firstTodo&lt;/code&gt;, Cypress checks to see if all of the elements it is referencing are still in the DOM. If they are, it returns those existing elements. If they aren&amp;rsquo;t, Cypress replays the commands leading up to the alias definition.</source>
          <target state="translated">当我们引用 &lt;code&gt;@firstTodo&lt;/code&gt; 时，赛普拉斯会检查其所引用的所有元素是否仍在DOM中。如果是，则返回那些现有元素。如果不是，则赛普拉斯将重播导致别名定义的命令。</target>
        </trans-unit>
        <trans-unit id="6418e7950235a73f979a678a9ba731fe32dcb073" translate="yes" xml:space="preserve">
          <source>When we run Cypress with &lt;a href=&quot;https://github.com/istanbuljs/babel-plugin-istanbul&quot;&gt;&lt;code&gt;babel-plugin-istanbul&lt;/code&gt;&lt;/a&gt; included and inspect the &lt;code&gt;window.__coverage__&lt;/code&gt; object in the &lt;strong&gt;spec iframe&lt;/strong&gt;, we should see the coverage information for the application source files.</source>
          <target state="translated">当我们运行包含&lt;a href=&quot;https://github.com/istanbuljs/babel-plugin-istanbul&quot;&gt; &lt;code&gt;babel-plugin-istanbul&lt;/code&gt; 的&lt;/a&gt; Cypress 并检查&lt;strong&gt;规范iframe中&lt;/strong&gt;的 &lt;code&gt;window.__coverage__&lt;/code&gt; 对象时，我们应该看到应用程序源文件的覆盖率信息。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c5e1233e773a8a4ada9a0b18de680700472e8538" translate="yes" xml:space="preserve">
          <source>When we run the same tests with parallelization, Cypress uses its &lt;a href=&quot;#Balance-strategy&quot;&gt;balance strategy&lt;/a&gt; to order to specs to run based on the spec&amp;rsquo;s previous run history. During the same CI run as above, we ran &lt;em&gt;all&lt;/em&gt; tests again, but this time with parallelization across 2 machines. This job was named &lt;code&gt;2x-electron&lt;/code&gt; in the project&amp;rsquo;s &lt;a href=&quot;https://github.com/cypress-io/cypress-example-kitchensink/blob/master/circle.yml&quot;&gt;circle.yml&lt;/a&gt; file and it finished in &lt;strong&gt;59 seconds&lt;/strong&gt;.</source>
          <target state="translated">当我们使用并行化运行相同的测试时，赛普拉斯会使用其&lt;a href=&quot;#Balance-strategy&quot;&gt;平衡策略&lt;/a&gt;根据规格的先前运行历史来对规格进行排序。在与上述相同的CI运行期间，我们再次运行了&lt;em&gt;所有&lt;/em&gt;测试，但是这次在两台计算机之间进行了并行化。在项目的&lt;a href=&quot;https://github.com/cypress-io/cypress-example-kitchensink/blob/master/circle.yml&quot;&gt;circle.yml&lt;/a&gt;文件中，该作业名为 &lt;code&gt;2x-electron&lt;/code&gt; ，并且在&lt;strong&gt;59秒内&lt;/strong&gt;完成。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="30c11e3106191276cf8898a244f72b21c0172d43" translate="yes" xml:space="preserve">
          <source>When we say &lt;em&gt;JavaScript Redirects&lt;/em&gt; we are talking about any kind of code that does something like this:</source>
          <target state="translated">当我们说&lt;em&gt;JavaScript重定向时，&lt;/em&gt;我们是在谈论执行以下操作的任何类型的代码：</target>
        </trans-unit>
        <trans-unit id="452c392cc45f8e62d91228fbdd56acc9639d1a5a" translate="yes" xml:space="preserve">
          <source>When we say &lt;em&gt;guard&lt;/em&gt;, this usually means:</source>
          <target state="translated">当我们说&lt;em&gt;卫兵时&lt;/em&gt;，这通常意味着：</target>
        </trans-unit>
        <trans-unit id="da4a1223dc41882a28829dd9345d56dc6fd26868" translate="yes" xml:space="preserve">
          <source>When working with &lt;code&gt;stubs&lt;/code&gt; or &lt;code&gt;spies&lt;/code&gt; you&amp;rsquo;ll regularly want to use those when writing Chai assertions. Cypress bundles in Sinon-Chai which extends Chai allowing you to &lt;a href=&quot;https://github.com/cypress-io/sinon-chai&quot;&gt;write assertions&lt;/a&gt; about &lt;code&gt;stubs&lt;/code&gt; and &lt;code&gt;spies&lt;/code&gt;.</source>
          <target state="translated">当使用 &lt;code&gt;stubs&lt;/code&gt; 或 &lt;code&gt;spies&lt;/code&gt; 您经常会在编写Chai断言时使用它们。Sinon-Chai的Cypress捆绑软件扩展了Chai的功能，使您可以&lt;a href=&quot;https://github.com/cypress-io/sinon-chai&quot;&gt;编写&lt;/a&gt;有关 &lt;code&gt;stubs&lt;/code&gt; 和 &lt;code&gt;spies&lt;/code&gt; 断言。</target>
        </trans-unit>
        <trans-unit id="173bce22d2286cf3cac66ffbfeec799b516ece0e" translate="yes" xml:space="preserve">
          <source>When working with local &lt;code&gt;https&lt;/code&gt; in webpack, set an environment variable to allow local certificate:</source>
          <target state="translated">在Webpack中使用本地 &lt;code&gt;https&lt;/code&gt; 时，请设置环境变量以允许本地证书：</target>
        </trans-unit>
        <trans-unit id="146dd76001da477c4731e28b9699450829896b6d" translate="yes" xml:space="preserve">
          <source>When writing integration tests, you will likely work a lot with the DOM. Cypress brings in Chai-jQuery, which automatically extends Chai with specific jQuery chainer methods.</source>
          <target state="translated">在编写集成测试时,你很可能会和DOM一起工作。Cypress带来了Chai-jQuery,它用特定的jQuery chainer方法自动扩展了Chai。</target>
        </trans-unit>
        <trans-unit id="e672b327d99eae9fb8d2c06880494c99bcb1dfee" translate="yes" xml:space="preserve">
          <source>When writing unit tests, or even in integration-like tests, you often need to ability to stub and spy methods. Cypress includes two methods, &lt;a href=&quot;../../api/commands/stub&quot;&gt;&lt;code&gt;cy.stub()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/spy&quot;&gt;&lt;code&gt;cy.spy()&lt;/code&gt;&lt;/a&gt; that return Sinon stubs and spies, respectively.</source>
          <target state="translated">在编写单元测试时，甚至在类似集成的测试中，您通常需要能够存根和监视方法。赛普拉斯包含两种方法&lt;a href=&quot;../../api/commands/stub&quot;&gt; &lt;code&gt;cy.stub()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../api/commands/spy&quot;&gt; &lt;code&gt;cy.spy()&lt;/code&gt; &lt;/a&gt;，它们分别返回Sinon stub和spy。</target>
        </trans-unit>
        <trans-unit id="0e8f0bdeacf845162ac6aedb4bd8a5d551852870" translate="yes" xml:space="preserve">
          <source>When you chain &lt;code&gt;.should()&lt;/code&gt; on a DOM-based command, the default &lt;code&gt;.should('exist')&lt;/code&gt; assertion is skipped. This may result in an unexpected behavior such as negative assertions passing even when the element doesn&amp;rsquo;t exist in the DOM. See &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;Default Assertions&lt;/a&gt; for more.</source>
          <target state="translated">在基于DOM的命令上链接 &lt;code&gt;.should()&lt;/code&gt; 时，将跳过默认的 &lt;code&gt;.should('exist')&lt;/code&gt; 断言。即使该元素在DOM中不存在，这也可能导致意外行为，例如否定断言传递。有关更多信息，请参见&lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;默认断言&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d57940cc82ad21e9a682ebeca6c60ea8fa463998" translate="yes" xml:space="preserve">
          <source>When you click on a stub or spy, we also output &lt;strong&gt;remarkably&lt;/strong&gt; helpful debugging information.</source>
          <target state="translated">当您单击存根或间谍时，我们还会输出&lt;strong&gt;非常&lt;/strong&gt;有用的调试信息。</target>
        </trans-unit>
        <trans-unit id="458d2770acaa2009139d707ae1bf3a38a96e8cd7" translate="yes" xml:space="preserve">
          <source>When you edit the selector, it will show you how many elements match and highlight those elements in your app.</source>
          <target state="translated">当你编辑选择器时,它将显示有多少元素与你的应用程序中的元素相匹配,并突出显示这些元素。</target>
        </trans-unit>
        <trans-unit id="4874c5aeb5a016ca7511b034fd2d7b5e3f176dd8" translate="yes" xml:space="preserve">
          <source>When you force an event to happen we will:</source>
          <target state="translated">当你强迫一个事件发生时,我们会。</target>
        </trans-unit>
        <trans-unit id="4892340cd1e056b060f23cb37e0a3f1c66ee08b3" translate="yes" xml:space="preserve">
          <source>When you invite users (from the Dashboard) we will &lt;strong&gt;automatically&lt;/strong&gt; whitelist them. This means you can invite all of your teammates (or anyone else). They can start using Cypress without talking to us.</source>
          <target state="translated">当您邀请用户（从信息中心）时，我们会&lt;strong&gt;自动&lt;/strong&gt;将其列入白名单。这意味着您可以邀请所有队友（或其他任何人）。他们可以在不与我们交谈的情况下开始使用赛普拉斯。</target>
        </trans-unit>
        <trans-unit id="07dfa7f252b3d76547221eff0ca8b668a8486ad9" translate="yes" xml:space="preserve">
          <source>When you open a Cypress project, clicking on the &lt;em&gt;Settings&lt;/em&gt; tab will display the resolved configuration to you. This makes it easy to understand and see where different values came from.</source>
          <target state="translated">当您打开赛普拉斯项目时，单击&amp;ldquo; &lt;em&gt;设置&amp;rdquo;&lt;/em&gt;选项卡将为您显示已解决的配置。这使得易于理解和查看不同值的来源。</target>
        </trans-unit>
        <trans-unit id="ab460b206d7153d7d79fd30feb6b470faa3fe569" translate="yes" xml:space="preserve">
          <source>When you open the Test Runner in a project that uses the above modifications to your plugins file, only the Chrome browsers found on the system will display in the list of available browsers.</source>
          <target state="translated">当你在使用上述修改插件文件的项目中打开测试运行器时,只有系统中找到的Chrome浏览器才会显示在可用浏览器列表中。</target>
        </trans-unit>
        <trans-unit id="e1c501c166f2995371e56c8428949ccb0a7f2816" translate="yes" xml:space="preserve">
          <source>When you run tests in Cypress, we launch a browser for you. This enables us to:</source>
          <target state="translated">当您在赛普拉斯中运行测试时,我们会为您启动一个浏览器。这使我们能够:</target>
        </trans-unit>
        <trans-unit id="2030d32b8c1e80dba91fa5ab9c1c39763c8f9951" translate="yes" xml:space="preserve">
          <source>When you run the Cypress tests now, you should see a few commands after the tests finish. We have highlighted these commands using a green rectangle below.</source>
          <target state="translated">当你现在运行Cypress测试时,你应该在测试结束后看到一些命令。我们已经用下面的绿色矩形突出显示了这些命令。</target>
        </trans-unit>
        <trans-unit id="44f828aa43ac83333a9828c9db9d6bcc014dc2a7" translate="yes" xml:space="preserve">
          <source>When you start a &lt;a href=&quot;../../api/commands/server&quot;&gt;&lt;code&gt;cy.server()&lt;/code&gt;&lt;/a&gt; and define &lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt; commands, Cypress displays this under &amp;ldquo;Routes&amp;rdquo; in the Command Log.</source>
          <target state="translated">当您启动&lt;a href=&quot;../../api/commands/server&quot;&gt; &lt;code&gt;cy.server()&lt;/code&gt; &lt;/a&gt;并定义&lt;a href=&quot;../../api/commands/route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt;命令时，赛普拉斯会在命令日志中的&amp;ldquo;路由&amp;rdquo;下显示此信息。</target>
        </trans-unit>
        <trans-unit id="a16fa569b34118cb9b27d09b87df8ea3c60c5f3f" translate="yes" xml:space="preserve">
          <source>When you start running your tests, Cypress does not know the url of the app you plan to test. So, Cypress initially opens on &lt;code&gt;https://localhost&lt;/code&gt; + a random port.</source>
          <target state="translated">当您开始运行测试时，赛普拉斯不知道您打算测试的应用程序的URL。因此，赛普拉斯最初在 &lt;code&gt;https://localhost&lt;/code&gt; +随机端口上打开。</target>
        </trans-unit>
        <trans-unit id="8a9afbc1a5811ad6bdacb237d95f6ae8689be1e9" translate="yes" xml:space="preserve">
          <source>When you stub requests, you can automatically control their response &lt;code&gt;headers&lt;/code&gt;. This is useful when you want to send back meta data in the &lt;code&gt;headers&lt;/code&gt;, such as &lt;em&gt;pagination&lt;/em&gt; or &lt;em&gt;token&lt;/em&gt; information.</source>
          <target state="translated">存根请求时，可以自动控制其响应 &lt;code&gt;headers&lt;/code&gt; 。当您想在 &lt;code&gt;headers&lt;/code&gt; 发送回元数据（例如&lt;em&gt;分页&lt;/em&gt;或&lt;em&gt;令牌&lt;/em&gt;信息）时，此功能很有用。</target>
        </trans-unit>
        <trans-unit id="449aafde66ca4c743e6ce897116811ed77f28832" translate="yes" xml:space="preserve">
          <source>When you submit a regular HTML form, the browser will follow this &lt;code&gt;HTTP(s) request&lt;/code&gt;.</source>
          <target state="translated">当您提交常规HTML表单时，浏览器将遵循此 &lt;code&gt;HTTP(s) request&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="97e298e9358f1e8249224c2a944bc63ec1025ee4" translate="yes" xml:space="preserve">
          <source>When you use aliasing with the &lt;a href=&quot;../../api/commands/as&quot;&gt;&lt;code&gt;.as()&lt;/code&gt;&lt;/a&gt; command, we also correlate those aliases with the calls. This works identically to aliasing a &lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">当您通过&lt;a href=&quot;../../api/commands/as&quot;&gt; &lt;code&gt;.as()&lt;/code&gt; &lt;/a&gt;命令使用别名时，我们还将这些别名与调用相关联。这与别名&lt;a href=&quot;../../api/commands/route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt;相同。</target>
        </trans-unit>
        <trans-unit id="a9f73347f2fcb67ec2aa85a6aecdb057caa6ace6" translate="yes" xml:space="preserve">
          <source>When you use the &lt;a href=&quot;test-runner#Command-Log&quot;&gt;Command Log&lt;/a&gt; to hover over a command, you&amp;rsquo;ll notice that we will always scroll the element the command was applied to into view. Please note that this is &lt;em&gt;NOT&lt;/em&gt; using the same algorithms that we described above.</source>
          <target state="translated">当您使用&lt;a href=&quot;test-runner#Command-Log&quot;&gt;命令日志&lt;/a&gt;将鼠标悬停在命令上时，您会注意到我们将始终将应用命令的元素滚动到视图中。请注意，这是&lt;em&gt;不&lt;/em&gt;使用我们上面描述的相同的算法。</target>
        </trans-unit>
        <trans-unit id="506aca18dacfbfb7310cd1d69cef3bdef0b7dcbe" translate="yes" xml:space="preserve">
          <source>When you&amp;rsquo;re writing tests for a very &lt;strong&gt;specific feature&lt;/strong&gt;, you &lt;em&gt;should&lt;/em&gt; use your UI to test it.</source>
          <target state="translated">在为非常&lt;strong&gt;特定的功能&lt;/strong&gt;编写测试时，&lt;em&gt;应&lt;/em&gt;使用UI对其进行测试。</target>
        </trans-unit>
        <trans-unit id="6a700b1aeb514624ce9adb2e8ff46ae0e947160b" translate="yes" xml:space="preserve">
          <source>When your application navigates to a superdomain outside of the current origin-policy, Cypress is unable to communicate with it, and thus fails.</source>
          <target state="translated">当您的应用程序导航到当前原点政策之外的超级域时,Cypress无法与之通信,从而导致失败。</target>
        </trans-unit>
        <trans-unit id="277086799c1afca418091d7e2865e412f48c0f4d" translate="yes" xml:space="preserve">
          <source>When your tests are running, you can use the &lt;a href=&quot;../../api/cypress-api/env&quot;&gt;&lt;code&gt;Cypress.env&lt;/code&gt;&lt;/a&gt; function to access the values of your environment variables.</source>
          <target state="translated">运行测试时，可以使用&lt;a href=&quot;../../api/cypress-api/env&quot;&gt; &lt;code&gt;Cypress.env&lt;/code&gt; &lt;/a&gt;函数访问环境变量的值。</target>
        </trans-unit>
        <trans-unit id="07b0b44ffbfda0ae3f57b0f61e636c370df10139" translate="yes" xml:space="preserve">
          <source>Whenever Cypress cannot interact with an element, it could fail at any of the above steps. You will usually get an error explaining why the element was not found to be actionable.</source>
          <target state="translated">每当Cypress无法与一个元素进行交互时,它可能在上述任何一个步骤中失败。你通常会得到一个错误,解释为什么该元素没有被发现是可操作的。</target>
        </trans-unit>
        <trans-unit id="9743294032a19e222eaf512d5727e0389d1cd18b" translate="yes" xml:space="preserve">
          <source>Whenever commands have an assertion they will not resolve until their associated assertions pass. This enables you to describe the state of your application without having to worry about when it gets there.</source>
          <target state="translated">每当命令有一个断言时,它们将不会解析,直到它们的相关断言通过。这使您能够描述您的应用程序的状态,而不必担心它何时到达那里。</target>
        </trans-unit>
        <trans-unit id="dfa43e30ebdda3842a6a65726041a1ccddfe86a6" translate="yes" xml:space="preserve">
          <source>Whenever you encounter errors in the CLI we&amp;rsquo;ll output helpful debugging information at the bottom of each error.</source>
          <target state="translated">每当您在CLI中遇到错误时，我们都会在每个错误的底部输出有用的调试信息。</target>
        </trans-unit>
        <trans-unit id="5e740625c858f61fda2fb28b6c3776f0853f5e22" translate="yes" xml:space="preserve">
          <source>Whenever you modify &lt;code&gt;cypress.json&lt;/code&gt;, Cypress will automatically reboot itself and kill any open browsers. This is normal. Just click on the spec file again to relaunch the browser.</source>
          <target state="translated">每当您修改 &lt;code&gt;cypress.json&lt;/code&gt; 时，赛普拉斯都会自动重启自身并杀死所有打开的浏览器。这是正常的。只需再次单击规格文件即可重新启动浏览器。</target>
        </trans-unit>
        <trans-unit id="3f04f64ccbbf64ceb2be78e5da89106ffceb3f1a" translate="yes" xml:space="preserve">
          <source>Whenever you return an object from your &lt;code&gt;pluginFile&lt;/code&gt;, Cypress will take this and &amp;ldquo;diff&amp;rdquo; it against the original configuration and automatically set the resolved values to point to what you returned.</source>
          <target state="translated">每当您从 &lt;code&gt;pluginFile&lt;/code&gt; 中返回一个对象时，赛普拉斯都将使用该对象并将其与原始配置&amp;ldquo;比较&amp;rdquo;，并自动将解析后的值设置为指向您返回的值。</target>
        </trans-unit>
        <trans-unit id="4393fb1a13539272944f9ed0f8f72b68bf967eeb" translate="yes" xml:space="preserve">
          <source>Whenever you return an object from your &lt;code&gt;pluginFile&lt;/code&gt;, Cypress will take this and &amp;ldquo;diff&amp;rdquo; it against the original configuration, and automatically set the resolved values to point to what you returned.</source>
          <target state="translated">每当您从 &lt;code&gt;pluginFile&lt;/code&gt; 中返回一个对象时，赛普拉斯都会采用该对象并将其与原始配置&amp;ldquo;区别&amp;rdquo;，并自动将解析后的值设置为指向您返回的对象。</target>
        </trans-unit>
        <trans-unit id="2a373643eddcc8c36c49dd17d55ccd07d141072a" translate="yes" xml:space="preserve">
          <source>Whenever you start a server and add routes, Cypress will display a new Instrument Log called &lt;em&gt;Routes&lt;/em&gt;. It will list the routing table in the Instrument Log, including the &lt;code&gt;method&lt;/code&gt;, &lt;code&gt;url&lt;/code&gt;, &lt;code&gt;stubbed&lt;/code&gt;, &lt;code&gt;alias&lt;/code&gt; and number of matched requests:</source>
          <target state="translated">每当您启动服务器并添加路由时，赛普拉斯都会显示一个名为&lt;em&gt;Routes&lt;/em&gt;的新仪器日志。它将在仪器日志中列出路由表，包括 &lt;code&gt;method&lt;/code&gt; ， &lt;code&gt;url&lt;/code&gt; ， &lt;code&gt;stubbed&lt;/code&gt; ， &lt;code&gt;alias&lt;/code&gt; 和匹配请求的数量：</target>
        </trans-unit>
        <trans-unit id="54b4ef170f5b9e2fa99e22be1a39654479504895" translate="yes" xml:space="preserve">
          <source>Whenever you use a callback function, its return value is always ignored. Cypress always forces the command to yield the value from the previous cy command&amp;rsquo;s yield (which in the example below is &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">每当使用回调函数时，其返回值始终被忽略。赛普拉斯总是强制命令从上一个cy命令的yield产生值（在下面的示例中为 &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="d1971ab6315772419dbf8eee58ee2c58d7d44d04" translate="yes" xml:space="preserve">
          <source>Whenever you&amp;rsquo;re using a child command you likely want to use &lt;a href=&quot;../commands/wrap&quot;&gt;&lt;code&gt;cy.wrap()&lt;/code&gt;&lt;/a&gt; on the subject. Wrapping it enables you to immediately use more Cypress commands on that subject.</source>
          <target state="translated">每当使用子命令时，您可能都希望在主题上使用&lt;a href=&quot;../commands/wrap&quot;&gt; &lt;code&gt;cy.wrap()&lt;/code&gt; &lt;/a&gt;。包装它可以使您立即在该主题上使用更多赛普拉斯命令。</target>
        </trans-unit>
        <trans-unit id="8819e1ad4c465bb36863dc4c5672a014cacedb86" translate="yes" xml:space="preserve">
          <source>Whenever you&amp;rsquo;re using a child command you likely want to use &lt;code&gt;cy.wrap()&lt;/code&gt; on the subject. Wrapping it enables you to immediately use more Cypress commands on that subject.</source>
          <target state="translated">每当使用子命令时，您可能都希望在主题上使用 &lt;code&gt;cy.wrap()&lt;/code&gt; 。包装它可以使您立即在该主题上使用更多赛普拉斯命令。</target>
        </trans-unit>
        <trans-unit id="672ad5ac7443e25239333ea7293ed6657db4b882" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;HH&lt;/code&gt; is 00-23, &lt;code&gt;mm&lt;/code&gt; is 00-59, &lt;code&gt;ss&lt;/code&gt; is 00-59, and &lt;code&gt;SSS&lt;/code&gt; is 000-999.</source>
          <target state="translated">其中 &lt;code&gt;HH&lt;/code&gt; 为00-23， &lt;code&gt;mm&lt;/code&gt; 为00-59， &lt;code&gt;ss&lt;/code&gt; 为00-59 ， &lt;code&gt;SSS&lt;/code&gt; 为000-999。</target>
        </trans-unit>
        <trans-unit id="78e2ae165d816036f6f6f6d3865025f475753c2f" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;W&lt;/code&gt; is the literal character &amp;lsquo;W&amp;rsquo; and &lt;code&gt;ww&lt;/code&gt; is the number of the week (01-53).</source>
          <target state="translated">其中 &lt;code&gt;W&lt;/code&gt; 是文字字符&amp;ldquo; W&amp;rdquo;，而 &lt;code&gt;ww&lt;/code&gt; 是星期数（01-53）。</target>
        </trans-unit>
        <trans-unit id="e5a86f970f8b16904d6a7c10e6bb23b12406f5a6" translate="yes" xml:space="preserve">
          <source>Where Cypress will automatically save the video of the test run when tests run with &lt;code&gt;cypress run&lt;/code&gt;.</source>
          <target state="translated">当使用 &lt;code&gt;cypress run&lt;/code&gt; 进行测试时，赛普拉斯将自动保存该测试视频的位置。</target>
        </trans-unit>
        <trans-unit id="f732ea59d82bc6caa095aa8e040d51307d477408" translate="yes" xml:space="preserve">
          <source>Where to put screenshot configuration</source>
          <target state="translated">截图配置放在哪里</target>
        </trans-unit>
        <trans-unit id="16135e9ac659c8d23dbeeab42fad1fa2c419cd91" translate="yes" xml:space="preserve">
          <source>Whether Chrome Web Security for &lt;code&gt;same-origin policy&lt;/code&gt; and &lt;code&gt;insecure mixed content&lt;/code&gt; is enabled. &lt;a href=&quot;../guides/web-security&quot;&gt;Read more about this here&lt;/a&gt;</source>
          <target state="translated">是否启用了针对 &lt;code&gt;same-origin policy&lt;/code&gt; Chrome Web Security 和 &lt;code&gt;insecure mixed content&lt;/code&gt; 。&lt;a href=&quot;../guides/web-security&quot;&gt;在这里阅读更多关于此的信息&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0e90f9f4f04fed1459fadb1ceb107bf248263594" translate="yes" xml:space="preserve">
          <source>Whether Cypress should automatically retry status code errors under the hood. Cypress will retry a request up to 4 times if this is set to true.</source>
          <target state="translated">Cypress是否应该自动重试状态码错误。如果设置为 &quot;true&quot;,Cypress将重试一次请求,最多重试4次。</target>
        </trans-unit>
        <trans-unit id="bdeb900e4e6b5be8de4445258768661404d3475d" translate="yes" xml:space="preserve">
          <source>Whether Cypress should automatically retry transient network errors under the hood. Cypress will retry a request up to 4 times if this is set to true.</source>
          <target state="translated">Cypress是否应该自动重试引擎盖下的瞬时网络错误。如果设置为 &quot;true&quot;,Cypress将重试一次请求,最多重试4次。</target>
        </trans-unit>
        <trans-unit id="41736d0931c53e387928e0ba4671acaefc71206a" translate="yes" xml:space="preserve">
          <source>Whether Cypress will capture a video of the tests run with &lt;code&gt;cypress run&lt;/code&gt;.</source>
          <target state="translated">赛普拉斯是否将捕获 &lt;code&gt;cypress run&lt;/code&gt; 的测试视频。</target>
        </trans-unit>
        <trans-unit id="8115c0785217c5bf02d8a4bcb7a02c997793053b" translate="yes" xml:space="preserve">
          <source>Whether Cypress will process, compress, and upload videos to the &lt;a href=&quot;../dashboard/introduction&quot;&gt;Dashboard&lt;/a&gt; even when all tests in a spec file are passing. This only applies when recording your runs to the Dashboard. Turn this off if you&amp;rsquo;d like to only upload the spec file&amp;rsquo;s video when there are failing tests.</source>
          <target state="translated">即使规格文件中的所有测试都通过了，赛普拉斯是否也将处理，压缩视频并将其上传到&lt;a href=&quot;../dashboard/introduction&quot;&gt;仪表板&lt;/a&gt;。仅在将跑步记录到仪表板时适用。如果您只想在测试失败时上传规范文件的视频，请关闭此功能。</target>
        </trans-unit>
        <trans-unit id="761b99b6c0a551c6ac694cbdf99a49fca065cd15" translate="yes" xml:space="preserve">
          <source>Whether Cypress will search for and replace obstructive JS code in &lt;code&gt;.js&lt;/code&gt; or &lt;code&gt;.html&lt;/code&gt; files. &lt;a href=&quot;#modifyObstructiveCode&quot;&gt;Please read the notes for more information on this setting.&lt;/a&gt;</source>
          <target state="translated">赛普拉斯是否将在 &lt;code&gt;.js&lt;/code&gt; 或 &lt;code&gt;.html&lt;/code&gt; 文件中搜索并替换阻塞性JS代码。&lt;a href=&quot;#modifyObstructiveCode&quot;&gt;请阅读注释以获取有关此设置的更多信息。&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e44463933898448ac71fed945bf07b878b5a4c26" translate="yes" xml:space="preserve">
          <source>Whether Cypress will trash assets within the &lt;code&gt;screenshotsFolder&lt;/code&gt; and &lt;code&gt;videosFolder&lt;/code&gt; before tests run with &lt;code&gt;cypress run&lt;/code&gt;.</source>
          <target state="translated">在使用 &lt;code&gt;cypress run&lt;/code&gt; 测试之前，赛普拉斯是否会在 &lt;code&gt;screenshotsFolder&lt;/code&gt; 和 &lt;code&gt;videosFolder&lt;/code&gt; 资产。</target>
        </trans-unit>
        <trans-unit id="c2cb21e895a5a745b6ec0fbc20abc4d8c70a44ca" translate="yes" xml:space="preserve">
          <source>Whether Cypress will watch and restart tests on test file changes</source>
          <target state="translated">赛普拉斯是否会在测试文件更改时观察并重启测试?</target>
        </trans-unit>
        <trans-unit id="31e09d64c50c51e6cd0394f2dbb150c0701af681" translate="yes" xml:space="preserve">
          <source>Whether cookie debugging should be enabled.</source>
          <target state="translated">是否应该启用cookie调试。</target>
        </trans-unit>
        <trans-unit id="c321c1f09789d9f18547c7ac48c679d1660a47e7" translate="yes" xml:space="preserve">
          <source>Whether or not you choose to stub responses, Cypress enables you to declaratively &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt; for requests and their responses.</source>
          <target state="translated">无论您是否选择对响应加桩，赛普拉斯都可以使您声明&lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt;来获取请求及其响应。</target>
        </trans-unit>
        <trans-unit id="9ed062e032668d1b5c6e0232138b7f73d439bce6" translate="yes" xml:space="preserve">
          <source>Whether the application under test was scaled to fit into the browser viewport. May be &lt;code&gt;scale&lt;/code&gt; argument passed in via &lt;a href=&quot;../commands/screenshot#Arguments&quot;&gt;&lt;code&gt;cy.screenshot()&lt;/code&gt;&amp;ldquo;&lt;/a&gt;</source>
          <target state="translated">被测应用程序是否已缩放以适合浏览器视口。可能是 &lt;code&gt;scale&lt;/code&gt; 通过传入参数&lt;a href=&quot;../commands/screenshot#Arguments&quot;&gt; &lt;code&gt;cy.screenshot()&lt;/code&gt; &amp;ldquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3e996007366dd64ce77a435c058317411ca69c45" translate="yes" xml:space="preserve">
          <source>Whether the browser displays headed.</source>
          <target state="translated">浏览器是否显示头。</target>
        </trans-unit>
        <trans-unit id="e03b6a210045ab14dfd8997e93aa8a0cd84a22c0" translate="yes" xml:space="preserve">
          <source>Whether the browser is running headlessly.</source>
          <target state="translated">浏览器是否在无头运行。</target>
        </trans-unit>
        <trans-unit id="ffdf77e9df613e519abee92f139e0a2032bdc81f" translate="yes" xml:space="preserve">
          <source>Whether the browser is selected in the browser selector of the Test Runner.</source>
          <target state="translated">在测试运行器的浏览器选择器中是否选择了浏览器。</target>
        </trans-unit>
        <trans-unit id="d61bcc4fd11e49e5bad66f31fd5f7b69ad45f057" translate="yes" xml:space="preserve">
          <source>Whether the cookie is a secure cookie</source>
          <target state="translated">该cookie是否为安全cookie</target>
        </trans-unit>
        <trans-unit id="940a089ba1b31a0cf3683acd601865036a91262f" translate="yes" xml:space="preserve">
          <source>Whether the cookie is an HTTP only cookie</source>
          <target state="translated">该cookie是否为HTTP专用cookie</target>
        </trans-unit>
        <trans-unit id="7003e8472f9982a9668f5bfc7481ea0a542cfdd0" translate="yes" xml:space="preserve">
          <source>Whether the event bubbles</source>
          <target state="translated">事件是否冒泡</target>
        </trans-unit>
        <trans-unit id="973a7ee6bcf819fdc50de3b3d5d8a48450efe210" translate="yes" xml:space="preserve">
          <source>Whether the event is cancelable</source>
          <target state="translated">活动是否可以取消</target>
        </trans-unit>
        <trans-unit id="7a2592a9dc32e9a9e19d59c009f42312d292b16a" translate="yes" xml:space="preserve">
          <source>Whether the screenshot was stitched together from multiple screenshot images.</source>
          <target state="translated">是否由多张截图图片拼接而成。</target>
        </trans-unit>
        <trans-unit id="566e741e52efc26610171f25c2555c7813b1e764" translate="yes" xml:space="preserve">
          <source>Whether to accept the &lt;code&gt;gzip&lt;/code&gt; encoding</source>
          <target state="translated">是否接受 &lt;code&gt;gzip&lt;/code&gt; 编码</target>
        </trans-unit>
        <trans-unit id="2ac1703f3587a706b72a5046adfde0e823f3e31f" translate="yes" xml:space="preserve">
          <source>Whether to automatically follow redirects</source>
          <target state="translated">是否自动跟踪重定向</target>
        </trans-unit>
        <trans-unit id="455fdc212a434e553b1eaee2316881f999d92170" translate="yes" xml:space="preserve">
          <source>Whether to automatically take screenshots when there are run failures.</source>
          <target state="translated">是否在出现运行故障时自动截图。</target>
        </trans-unit>
        <trans-unit id="3ffe0a2d063bf3de6022c75671348b48dab72193" translate="yes" xml:space="preserve">
          <source>Whether to convert the &lt;code&gt;body&lt;/code&gt; values to url encoded content and set the &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; header</source>
          <target state="translated">是否将 &lt;code&gt;body&lt;/code&gt; 值转换为url编码的内容并设置 &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; 标头</target>
        </trans-unit>
        <trans-unit id="5825390ed7f2a186453f401d8a3bf1d5a389956b" translate="yes" xml:space="preserve">
          <source>Whether to disable JavaScript timers and CSS animations when taking the screenshot.</source>
          <target state="translated">截图时是否禁用JavaScript定时器和CSS动画。</target>
        </trans-unit>
        <trans-unit id="f9a20434ef0f424cd34adbf62bc5a50efebd38d0" translate="yes" xml:space="preserve">
          <source>Whether to fail on response codes other than &lt;code&gt;2xx&lt;/code&gt; and &lt;code&gt;3xx&lt;/code&gt;</source>
          <target state="translated">是否在 &lt;code&gt;2xx&lt;/code&gt; 和 &lt;code&gt;3xx&lt;/code&gt; 以外的响应代码上失败</target>
        </trans-unit>
        <trans-unit id="cbd265fb13acbb0a9279638ca3c848375fc68423" translate="yes" xml:space="preserve">
          <source>Whether to record the test run</source>
          <target state="translated">是否记录测试运行</target>
        </trans-unit>
        <trans-unit id="867373d406c06b9c70a72c9eaacd5e8069b658eb" translate="yes" xml:space="preserve">
          <source>Whether to reload the current page without using the cache. &lt;code&gt;true&lt;/code&gt; forces the reload without cache.</source>
          <target state="translated">是否在不使用缓存的情况下重新加载当前页面。 &lt;code&gt;true&lt;/code&gt; 强制重新加载而不使用缓存。</target>
        </trans-unit>
        <trans-unit id="29a023c33165226876793f689ff1210618eaeba6" translate="yes" xml:space="preserve">
          <source>Whether to scale the app to fit into the browser viewport. This is always coerced to &lt;code&gt;true&lt;/code&gt; for &lt;code&gt;runner&lt;/code&gt; captures.</source>
          <target state="translated">是否缩放应用程序以适合浏览器视口。对于 &lt;code&gt;runner&lt;/code&gt; 捕获，始终将其强制为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9f34456bcdc57b0dbe9e97c8f761264c1a6d1a2f" translate="yes" xml:space="preserve">
          <source>Whether to scale the app to fit into the browser viewport. This is always coerced to &lt;code&gt;true&lt;/code&gt; when &lt;code&gt;capture&lt;/code&gt; is &lt;code&gt;runner&lt;/code&gt;.</source>
          <target state="translated">是否缩放应用程序以适合浏览器视口。当 &lt;code&gt;capture&lt;/code&gt; 为 &lt;code&gt;runner&lt;/code&gt; 时，始终将其强制为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fc45ac18df39651c64e978994345d4ac53a2b95f" translate="yes" xml:space="preserve">
          <source>Whether to scale your application under test in the screenshot.</source>
          <target state="translated">是否在截图中缩放你的被测应用程序。</target>
        </trans-unit>
        <trans-unit id="7136bba78216598218ef7f55e8918c5d46b83ae7" translate="yes" xml:space="preserve">
          <source>Whether to traverse shadow DOM boundaries and include elements within the shadow DOM in the yielded results.</source>
          <target state="translated">是否遍历影子DOM边界,并将影子DOM中的元素包含在产生的结果中。</target>
        </trans-unit>
        <trans-unit id="3c5ed08a9100f578114549c25b3f933a75a2ebed" translate="yes" xml:space="preserve">
          <source>Whether to wait for elements to &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/interacting-with-elements.html#Animations&quot;&gt;finish animating&lt;/a&gt; before executing the command.</source>
          <target state="translated">在执行命令之前是否等待元素&lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/interacting-with-elements.html#Animations&quot;&gt;完成动画制作&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6c18664bd72425aeb26f645bf90139bf863fe4a1" translate="yes" xml:space="preserve">
          <source>Whether to wait for elements to finish animating before executing commands</source>
          <target state="translated">是否要等待元素完成动画后再执行命令。</target>
        </trans-unit>
        <trans-unit id="f0b95643d856efb96bcbd48fb228d61ee18c4da2" translate="yes" xml:space="preserve">
          <source>Whether to wait for the Command Log to synchronize before taking the screenshot.</source>
          <target state="translated">是否等待命令日志同步后再进行截图。</target>
        </trans-unit>
        <trans-unit id="423b4b1a2ceb78e00f2cc630388766057b470a4c" translate="yes" xml:space="preserve">
          <source>Whether you are testing a chat application or anything else - what you are really asking about is testing collaboration. But, &lt;strong&gt;you don&amp;rsquo;t need to recreate the entire environment in order to test collaboration with 100% coverage&lt;/strong&gt;.</source>
          <target state="translated">无论您正在测试聊天应用程序还是其他任何东西，您真正要问的是测试协作。但是，&lt;strong&gt;您无需重新创建整个环境即可测试覆盖率为100％的协作&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="86306d968b9f21296d4fc02aaef110dd7cc0138b" translate="yes" xml:space="preserve">
          <source>Whether you install an npm module, or just want to write your own code - you should do all of that in this file:</source>
          <target state="translated">无论你是安装一个npm模块,还是只想写自己的代码--你都应该在这个文件中完成这些工作。</target>
        </trans-unit>
        <trans-unit id="ad017d00c4fda6d44729823c48bc44ed65111e95" translate="yes" xml:space="preserve">
          <source>Which libraries Cypress includes to provide typical testing functionality</source>
          <target state="translated">赛普拉斯包括哪些库来提供典型的测试功能?</target>
        </trans-unit>
        <trans-unit id="79a80de518cb64b399db0b9c36a3ea47734d4c5b" translate="yes" xml:space="preserve">
          <source>Which parts of the Test Runner to capture. This value is ignored for element screenshot captures. Valid values are &lt;code&gt;viewport&lt;/code&gt;, &lt;code&gt;fullPage&lt;/code&gt;, or &lt;code&gt;runner&lt;/code&gt;. When &lt;code&gt;viewport&lt;/code&gt;, the application under test is captured in the current viewport. When &lt;code&gt;fullPage&lt;/code&gt;, the application under test is captured in its entirety from top to bottom. When &lt;code&gt;runner&lt;/code&gt;, the entire browser viewport, including the Cypress Command Log, is captured. For screenshots automatically taken on test failure, capture is always coerced to &lt;code&gt;runner&lt;/code&gt;.</source>
          <target state="translated">捕获测试运行器的哪些部分。元素屏幕快照捕获将忽略此值。有效值是 &lt;code&gt;viewport&lt;/code&gt; ， &lt;code&gt;fullPage&lt;/code&gt; ，或 &lt;code&gt;runner&lt;/code&gt; 。当 &lt;code&gt;viewport&lt;/code&gt; 时，被测试的应用程序将在当前视口中捕获。如果为 &lt;code&gt;fullPage&lt;/code&gt; ，则从上到下完整捕获被测应用程序。当 &lt;code&gt;runner&lt;/code&gt; 时，将捕获整个浏览器视口，包括赛普拉斯命令日志。对于在测试失败时自动获取的屏幕截图，捕获始终强制给 &lt;code&gt;runner&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2f650885846b4af47d67dada2754d97d36f026c2" translate="yes" xml:space="preserve">
          <source>Which parts of the Test Runner to capture. This value is ignored for element screenshot captures. Valid values are &lt;code&gt;viewport&lt;/code&gt;, &lt;code&gt;fullPage&lt;/code&gt;, or &lt;code&gt;runner&lt;/code&gt;. When &lt;code&gt;viewport&lt;/code&gt;, your application under test is captured in the current viewport. When &lt;code&gt;fullPage&lt;/code&gt;, your application under test is captured in its entirety from top to bottom. When &lt;code&gt;runner&lt;/code&gt;, the entire browser viewport, including the Cypress Command Log, is captured. For screenshots automatically taken on test failure, capture is always coerced to &lt;code&gt;runner&lt;/code&gt;.</source>
          <target state="translated">捕获测试运行器的哪些部分。元素屏幕快照捕获将忽略此值。有效值是 &lt;code&gt;viewport&lt;/code&gt; ， &lt;code&gt;fullPage&lt;/code&gt; ，或 &lt;code&gt;runner&lt;/code&gt; 。当 &lt;code&gt;viewport&lt;/code&gt; 时，被测试的应用程序将捕获到当前视口中。当为 &lt;code&gt;fullPage&lt;/code&gt; 时，将从上至下完整捕获被测应用程序。当 &lt;code&gt;runner&lt;/code&gt; 时，将捕获整个浏览器视口，包括赛普拉斯命令日志。对于在测试失败时自动获取的屏幕截图，捕获始终强制给 &lt;code&gt;runner&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bd03555e1b8d55dc857d849d83c7454e88068532" translate="yes" xml:space="preserve">
          <source>Which parts of the screen to capture.</source>
          <target state="translated">要捕捉屏幕的哪些部分。</target>
        </trans-unit>
        <trans-unit id="e7cb006b71ab32c9adaee73ac1284ff25c1f0d24" translate="yes" xml:space="preserve">
          <source>Which, if any, elements to black out when taking the screenshot.</source>
          <target state="translated">如果有的话,截图时要把哪些元素涂黑。</target>
        </trans-unit>
        <trans-unit id="063f8835b94bcdd5840931fec11005087262155c" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;Cypress.config()&lt;/code&gt; changes configuration values through the entire spec file, using test configuration will only change configuration values during the suite or test where they are set. The values will then reset to the previous default values after the suite or test is complete.</source>
          <target state="translated">当 &lt;code&gt;Cypress.config()&lt;/code&gt; 在整个spec文件中更改配置值时，使用测试配置将仅在套件或设置它们的测试期间更改配置值。套件或测试完成后，这些值将重置为以前的默认值。</target>
        </trans-unit>
        <trans-unit id="a1729a8085c44b25fb561a990da61878f16ef97a" translate="yes" xml:space="preserve">
          <source>While Cypress allows to configure where your tests, fixtures, and support files are located, if you&amp;rsquo;re starting your first project, we recommend you use the above structure.</source>
          <target state="translated">尽管赛普拉斯允许配置测试，夹具和支持文件的位置，但是如果您要开始第一个项目，我们建议您使用上述结构。</target>
        </trans-unit>
        <trans-unit id="8a93ce68c968dc7125affffacae501a5a4047874" translate="yes" xml:space="preserve">
          <source>While Mocha provides us a framework to structure our tests, Chai gives us the ability to easily write assertions. Chai gives us readable assertions with excellent error messages. Cypress extends this, fixes several common pitfalls, and wraps Chai&amp;rsquo;s DSL using &lt;a href=&quot;../core-concepts/introduction-to-cypress#Assertions&quot;&gt;subjects&lt;/a&gt; and the &lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">尽管Mocha为我们提供了构建测试框架的框架，但是Chai使我们能够轻松编写断言。Chai为我们提供了可读的断言以及出色的错误消息。赛普拉斯对此进行了扩展，修复了一些常见的陷阱，并使用&lt;a href=&quot;../core-concepts/introduction-to-cypress#Assertions&quot;&gt;主题&lt;/a&gt;和&lt;a href=&quot;../../api/commands/should&quot;&gt; &lt;code&gt;.should()&lt;/code&gt; &lt;/a&gt;命令包装了Chai的DSL 。</target>
        </trans-unit>
        <trans-unit id="30c8700511492854c68a0c9d89a62e7cd250dfeb" translate="yes" xml:space="preserve">
          <source>While at first it may seem like these are strict limitations in Cypress - we think you will soon realize that many of these boundaries are actually &lt;strong&gt;good&lt;/strong&gt; to have. In a sense they prevent you from writing bad, slow, or flaky tests.</source>
          <target state="translated">乍一看，这些似乎是赛普拉斯的严格限制-我们认为您很快就会意识到其中的许多界限实际上都是&lt;strong&gt;很好的&lt;/strong&gt;。从某种意义上说，它们阻止您编写不良，缓慢或不稳定的测试。</target>
        </trans-unit>
        <trans-unit id="da74082104c885de8ab0dcfddc44918a9c3ac8bc" translate="yes" xml:space="preserve">
          <source>While most commands time out after a few seconds, other specialized commands that expect particular things to take much longer like &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; will naturally wait longer before timing out.</source>
          <target state="translated">尽管大多数命令会在几秒钟后超时，但是其他一些期望某些特定事物花费更长时间的专用命令&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;例如cy.visit（））自然会等待更长的时间才能超时。</target>
        </trans-unit>
        <trans-unit id="dda4789187c7669b48726cb79d25043d3d3a6776" translate="yes" xml:space="preserve">
          <source>While outside the scope of this article, you could test a chat application using the following principles. Each one will incrementally introduce more collaboration:</source>
          <target state="translated">虽然不在本文范围内,但你可以使用以下原则测试一个聊天应用。每一个都会逐步引入更多的协作。</target>
        </trans-unit>
        <trans-unit id="2f7183b07b498319babd23533a6ce57f2cffff0f" translate="yes" xml:space="preserve">
          <source>While stubbing is great, it means that you don&amp;rsquo;t have the guarantees that these response payloads actually match what the server will send. However, there are still many valid ways to get around this:</source>
          <target state="translated">尽管存根很棒，但这意味着您无法保证这些响应有效负载实际上与服务器将发送的内容匹配。但是，仍然有许多有效的方法可以解决此问题：</target>
        </trans-unit>
        <trans-unit id="d7becc257e6e19366bd3a59650863a33e04432d8" translate="yes" xml:space="preserve">
          <source>While technically this runs fine - this is really excessive, and not performant.</source>
          <target state="translated">虽然从技术上来说,这运行得很好--这实在是太过分了,而且性能不高。</target>
        </trans-unit>
        <trans-unit id="8025589e3477db14232e01f31d204322d647cedc" translate="yes" xml:space="preserve">
          <source>While the above checks are super helpful at finding situations that would prevent your users from interacting with elements - sometimes they can get in the way!</source>
          <target state="translated">虽然上面的检查对找到会阻止你的用户与元素交互的情况超级有帮助--但有时它们可能会妨碍你的用户!</target>
        </trans-unit>
        <trans-unit id="cb5eebab8c3c2d5c8ffd21b4c0c4165f87f0d345" translate="yes" xml:space="preserve">
          <source>While there are many new and powerful capabilities of Cypress - there are also important trade-offs that we&amp;rsquo;ve made in making this possible.</source>
          <target state="translated">尽管赛普拉斯拥有许多强大的新功能，但在使之成为可能的过程中，我们也做出了重要的权衡。</target>
        </trans-unit>
        <trans-unit id="030af3b6b1a93102000e8ceb98520a6ecb539e94" translate="yes" xml:space="preserve">
          <source>While there&amp;rsquo;s nothing really &lt;em&gt;wrong&lt;/em&gt; with this approach, it does add a lot of complexity. You will be battling synchronizing the state between your server and your browser - and you&amp;rsquo;ll always need to set up / tear down this state before tests (which is slow).</source>
          <target state="translated">尽管这种方法没有什么真正的&lt;em&gt;错&lt;/em&gt;，但确实增加了很多复杂性。您将努力在服务器和浏览器之间同步状态-并且始终需要在测试之前设置/取消此状态（这很慢）。</target>
        </trans-unit>
        <trans-unit id="c164f96b0645923ff8f534cf0d60d320e76ffe36" translate="yes" xml:space="preserve">
          <source>While there&amp;rsquo;s nothing wrong with writing out the full path to the Cypress executable each time, it&amp;rsquo;s much easier and clearer to add Cypress commands to the &lt;code&gt;scripts&lt;/code&gt; field in your &lt;code&gt;package.json&lt;/code&gt; file.</source>
          <target state="translated">尽管每次都写出Cypress可执行文件的完整路径并没有错，但是将Cypress命令添加到 &lt;code&gt;package.json&lt;/code&gt; 文件中的 &lt;code&gt;scripts&lt;/code&gt; 字段更加容易和清楚。</target>
        </trans-unit>
        <trans-unit id="d38c60e0a1adf08ebf78c05479d58b5b5def173b" translate="yes" xml:space="preserve">
          <source>While this may take a bit more work than other options - it yields you the most amount of flexibility and the ability to manage configuration however you&amp;rsquo;d like.</source>
          <target state="translated">尽管与其他选项相比，这可能需要更多的工作-但它为您提供了最大的灵活性，并且可以根据需要管理配置。</target>
        </trans-unit>
        <trans-unit id="318012b6b9386f9280c9fe773d40c9a281ab052f" translate="yes" xml:space="preserve">
          <source>While this new Chromium application passes our internal tests, it may crop up other regressions we aren&amp;rsquo;t aware of. If you&amp;rsquo;re experiencing different behavior in CI vs running locally in Chrome, this may be an indication of these.</source>
          <target state="translated">尽管这个新的Chromium应用程序通过了我们的内部测试，但它可能会出现其他我们不知道的回归。如果您在CI中遇到的行为与在Chrome中本地运行的行为有所不同，则可能表明了这些情况。</target>
        </trans-unit>
        <trans-unit id="91e784b215a40267a4bf70b260acb26b69eda73d" translate="yes" xml:space="preserve">
          <source>While this works in practice, it&amp;rsquo;s often indicative of an anti-pattern. You almost never need to return both a promise and also invoke &lt;code&gt;cy&lt;/code&gt; commands.</source>
          <target state="translated">尽管这在实践中可行，但通常表明存在反模式。您几乎永远都不需要既返回诺言又调用 &lt;code&gt;cy&lt;/code&gt; 命令。</target>
        </trans-unit>
        <trans-unit id="31babd36f691189fb28c03c015383588f9c122f6" translate="yes" xml:space="preserve">
          <source>While working in the Cypress Test Runner you can always restart / refresh while in the middle of a test. When that happens, code in an &lt;code&gt;after&lt;/code&gt; won&amp;rsquo;t execute.</source>
          <target state="translated">在赛普拉斯测试运行器中工作时，您始终可以在测试过程中重新启动/刷新。发生这种情况时，在代码 &lt;code&gt;after&lt;/code&gt; 将不会执行。</target>
        </trans-unit>
        <trans-unit id="4f4bd02f81f747b5ee22bb7ac5b19bd3f551693f" translate="yes" xml:space="preserve">
          <source>While you certainly &lt;em&gt;can&lt;/em&gt; test an application that&amp;rsquo;s already deployed, that&amp;rsquo;s not really the &lt;strong&gt;sweet spot&lt;/strong&gt; of Cypress.</source>
          <target state="translated">虽然你当然&lt;em&gt;可以&lt;/em&gt;测试一个已经部署的应用程序，这不是真正的&lt;strong&gt;甜蜜点&lt;/strong&gt;赛普拉斯的。</target>
        </trans-unit>
        <trans-unit id="13b0a7459609b07974093e75a6727d3e1431dc35" translate="yes" xml:space="preserve">
          <source>While you&amp;rsquo;ll still receive all of the regular HTML / JS / CSS assets from your server and you&amp;rsquo;ll continue to &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; it in the same way - you can instead &lt;strong&gt;stub&lt;/strong&gt; the JSON responses coming from it.</source>
          <target state="translated">虽然您仍然会从服务器收到所有常规的HTML / JS / CSS资产，并且将继续以相同的方式&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;－您可以对来自它的JSON响应进行&lt;strong&gt;存根&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="9531a11970da0f9e11c5c55654095ad4e88d319d" translate="yes" xml:space="preserve">
          <source>Whitelist Array</source>
          <target state="translated">白名单阵列</target>
        </trans-unit>
        <trans-unit id="3bd2035ad66f2e21de8e62528e9f8a4c52d2790a" translate="yes" xml:space="preserve">
          <source>Whitelist Function</source>
          <target state="translated">白名单功能</target>
        </trans-unit>
        <trans-unit id="9b9dd85fbff2ef7f6674b6f8a8eb1c6dee6c03f0" translate="yes" xml:space="preserve">
          <source>Whitelist RegExp</source>
          <target state="translated">白名单正则</target>
        </trans-unit>
        <trans-unit id="10f0b0527ee0ebc1a2ff9b229af041a4ed553e62" translate="yes" xml:space="preserve">
          <source>Whitelist String</source>
          <target state="translated">白名单字符串</target>
        </trans-unit>
        <trans-unit id="cfc81ad963218eef675afa431ee14f7f4220cf38" translate="yes" xml:space="preserve">
          <source>Whitelist accepts:</source>
          <target state="translated">白名单接受。</target>
        </trans-unit>
        <trans-unit id="ee022eabf15b7cb10facff1a865cf41857bfcf02" translate="yes" xml:space="preserve">
          <source>Whitelisted &lt;code&gt;.coffee&lt;/code&gt;, &lt;code&gt;.scss&lt;/code&gt;, &lt;code&gt;.less&lt;/code&gt; XHR&amp;rsquo;s from displaying in the Command Log.</source>
          <target state="translated">白名单 &lt;code&gt;.coffee&lt;/code&gt; ， &lt;code&gt;.scss&lt;/code&gt; ， &lt;code&gt;.less&lt;/code&gt; 从命令日志显示XHR的。</target>
        </trans-unit>
        <trans-unit id="fbe879d21f706f263f7f4543c84ee96394c72498" translate="yes" xml:space="preserve">
          <source>Whitelisted &lt;code&gt;autoScrollingEnabled&lt;/code&gt; to be saved in &lt;code&gt;state.json&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2476&quot;&gt;#2476&lt;/a&gt;.</source>
          <target state="translated">白名单中的 &lt;code&gt;autoScrollingEnabled&lt;/code&gt; 已保存在 &lt;code&gt;state.json&lt;/code&gt; 中。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2476&quot;&gt;＃2476&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8257782e5b970997cb30b2e4555a9ed3b9ea92c1" translate="yes" xml:space="preserve">
          <source>Whitelisting assets which should never be stubbed has been improved. Now &lt;code&gt;.jsx&lt;/code&gt; templates pass-through correctly.</source>
          <target state="translated">将白白列出永远不应该被打断的资产已得到改善。现在， &lt;code&gt;.jsx&lt;/code&gt; 模板可以正确传递。</target>
        </trans-unit>
        <trans-unit id="b55223cfadcd781467bde322006948a79cad1967" translate="yes" xml:space="preserve">
          <source>Who uses Cypress?</source>
          <target state="translated">谁使用赛普拉斯?</target>
        </trans-unit>
        <trans-unit id="2f97207534c18993571e797428ce3b613fc3f5e9" translate="yes" xml:space="preserve">
          <source>Why Cypress?</source>
          <target state="translated">为什么是赛普拉斯?</target>
        </trans-unit>
        <trans-unit id="a2df07a78268820f1ef2bccd097800f342fb3474" translate="yes" xml:space="preserve">
          <source>Why are some commands &lt;em&gt;NOT&lt;/em&gt; retried?</source>
          <target state="translated">为什么&lt;em&gt;不&lt;/em&gt;重试某些命令？</target>
        </trans-unit>
        <trans-unit id="e964dd0c8407ffaad4f71f8eaaffe744fcd57473" translate="yes" xml:space="preserve">
          <source>Why did you change the default test folder to be &lt;code&gt;cypress/integration&lt;/code&gt;.</source>
          <target state="translated">为什么将默认测试文件夹更改为 &lt;code&gt;cypress/integration&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5b59ddd63da244b2d99831c6b7dcc030b333865f" translate="yes" xml:space="preserve">
          <source>Why is it &lt;code&gt;Cypress.config&lt;/code&gt; and not &lt;code&gt;cy.config&lt;/code&gt;?</source>
          <target state="translated">为什么是 &lt;code&gt;Cypress.config&lt;/code&gt; 而不是 &lt;code&gt;cy.config&lt;/code&gt; ？</target>
        </trans-unit>
        <trans-unit id="f93853d95fb11e05aafe07bed844eb80d38bfb7e" translate="yes" xml:space="preserve">
          <source>Why is it &lt;code&gt;Cypress.env&lt;/code&gt; and not &lt;code&gt;cy.env&lt;/code&gt;?</source>
          <target state="translated">为什么是 &lt;code&gt;Cypress.env&lt;/code&gt; 而不是 &lt;code&gt;cy.env&lt;/code&gt; ？</target>
        </trans-unit>
        <trans-unit id="5dd054abbdd81e11c8a95eb1807f0e8f301fc9f4" translate="yes" xml:space="preserve">
          <source>Why should I manually set the event type?</source>
          <target state="translated">为什么要手动设置事件类型?</target>
        </trans-unit>
        <trans-unit id="13be4a8bdb3afec20836192dba27b9d40acb76b0" translate="yes" xml:space="preserve">
          <source>Why would I ever need to use environment variables?</source>
          <target state="translated">为什么我需要使用环境变量?</target>
        </trans-unit>
        <trans-unit id="7293e54a3e598247b88fa56e517c94eb77af8a95" translate="yes" xml:space="preserve">
          <source>Why you did this pattern in unit tests:</source>
          <target state="translated">为什么你在单元测试中做了这种模式。</target>
        </trans-unit>
        <trans-unit id="020b1ee0de3bdee33ecaaf21ee0c1fc055674cbb" translate="yes" xml:space="preserve">
          <source>Why you rarely need to use variables with Cypress</source>
          <target state="translated">为什么你很少需要使用Cypress的变量?</target>
        </trans-unit>
        <trans-unit id="3ec6320fd4ac1f18d69ab1372ae6b042eb0b157b" translate="yes" xml:space="preserve">
          <source>Why you shouldn&amp;rsquo;t do this in Cypress:</source>
          <target state="translated">为什么不应该在赛普拉斯中这样做：</target>
        </trans-unit>
        <trans-unit id="7a20d1252b03398a7abebb2301afbd9533fad8c6" translate="yes" xml:space="preserve">
          <source>Why? Because if the DOM is not going to change after the &lt;code&gt;load&lt;/code&gt; event occurs, then it can accurately represent a stable state of truth.</source>
          <target state="translated">为什么？因为如果DOM在 &lt;code&gt;load&lt;/code&gt; 事件发生后不会改变，那么它可以准确地表示稳定的真实状态。</target>
        </trans-unit>
        <trans-unit id="26b6cf092e908b7236a5ab86844a3537cd596ca0" translate="yes" xml:space="preserve">
          <source>Why? Because if you refresh Cypress in the middle of the test - you will have built up partial state in the database, and your custom &lt;code&gt;cy.resetDb()&lt;/code&gt; function &lt;strong&gt;will never get called&lt;/strong&gt;.</source>
          <target state="translated">为什么？因为如果在测试过程中刷新Cypress，则会在数据库中建立部分状态，并且自定义 &lt;code&gt;cy.resetDb()&lt;/code&gt; 函数&lt;strong&gt;将永远不会被调用&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="c96bd2ed33a0cb5319c8aea2f43590508a6259f4" translate="yes" xml:space="preserve">
          <source>Width of viewport in pixels (must be a non-negative, finite number).</source>
          <target state="translated">视口的宽度,以像素为单位(必须是一个非负的有限数字)。</target>
        </trans-unit>
        <trans-unit id="740612bbe8a8ba2edee8f0784e16158aa4bc693c" translate="yes" xml:space="preserve">
          <source>Width of viewport in pixels (must be between 20 and 3000).</source>
          <target state="translated">视口的宽度,以像素为单位(必须在20和3000之间)。</target>
        </trans-unit>
        <trans-unit id="60b6ce8c2a0e9b895c30787ad491bbca447646e6" translate="yes" xml:space="preserve">
          <source>Width, Height</source>
          <target state="translated">宽度,高度</target>
        </trans-unit>
        <trans-unit id="9ad0c0b34826eda4fd9d451d9fa2a4bfded3e92e" translate="yes" xml:space="preserve">
          <source>Will scroll with the easing animation</source>
          <target state="translated">将滚动与缓和动画</target>
        </trans-unit>
        <trans-unit id="41dfc0a6c92707948578891c51d98c6443be63cc" translate="yes" xml:space="preserve">
          <source>Window</source>
          <target state="translated">Window</target>
        </trans-unit>
        <trans-unit id="47d4bf9243ba905bee32475e779fa3c24cc8bfc0" translate="yes" xml:space="preserve">
          <source>Window Alert</source>
          <target state="translated">窗口提示</target>
        </trans-unit>
        <trans-unit id="4e67225518a6bdc9b3c60f89fb71fb61b41bebec" translate="yes" xml:space="preserve">
          <source>Window Before Load</source>
          <target state="translated">窗口加载前</target>
        </trans-unit>
        <trans-unit id="9e28dfada85ac4d23db1bd7f071223f7d31f4f44" translate="yes" xml:space="preserve">
          <source>Window Confirm</source>
          <target state="translated">窗口确认</target>
        </trans-unit>
        <trans-unit id="26d9c28d789c254f71ea99a3463b99a7ccc2f4fa" translate="yes" xml:space="preserve">
          <source>Windows</source>
          <target state="translated">Windows</target>
        </trans-unit>
        <trans-unit id="1de9eae165f5a2d612a3006e5da76e592af596fa" translate="yes" xml:space="preserve">
          <source>Windows 32-bit (&lt;code&gt;?platform=win32&amp;amp;arch=ia32&lt;/code&gt;, available since &lt;a href=&quot;../references/changelog#3-3-0&quot;&gt;Cypress 3.3.0&lt;/a&gt;)</source>
          <target state="translated">Windows 32位（ &lt;code&gt;?platform=win32&amp;amp;arch=ia32&lt;/code&gt; ，自&lt;a href=&quot;../references/changelog#3-3-0&quot;&gt;赛普拉斯3.3.0&lt;/a&gt;起可用）</target>
        </trans-unit>
        <trans-unit id="892eb30664e49b9647500f1dd3e791364d6b2aa2" translate="yes" xml:space="preserve">
          <source>Windows 64-bit (&lt;code&gt;?platform=win32&amp;amp;arch=x64&lt;/code&gt;)</source>
          <target state="translated">Windows 64位（ &lt;code&gt;?platform=win32&amp;amp;arch=x64&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="d61ef8f1263745681f34613413bc836ec71a45e9" translate="yes" xml:space="preserve">
          <source>Windows is now supported. We have been running it successfully on EC2 and all of our example projects are also running in CI with AppVeyor. It is still super beta (we&amp;rsquo;re aware of a couple issues already) and we&amp;rsquo;re still updating our own infrastructure to manage and test it as comprehensively as we do OSX and Linux. We are only building a 32bit version of Windows, but will soon be building a 64bit as well. As of today the Windows binary is about 2x the size of what it will be. Unzipping takes a long time, we are sorry. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/74&quot;&gt;#74&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/444&quot;&gt;#444&lt;/a&gt;.</source>
          <target state="translated">现在支持Windows。我们已经在EC2上成功运行了它，我们所有的示例项目也都通过AppVeyor在CI中运行。它仍然是超级beta（我们已经意识到了几个问题），并且我们仍在更新自己的基础结构，以像对OSX和Linux一样全面地管理和测试它。我们仅构建Windows的32位版本，但很快还将构建64位。到目前为止，Windows二进制文件的大小约为其二进制文件的2倍。解压缩需要很长时间，很抱歉。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/74&quot;&gt;＃74&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/444&quot;&gt;＃444&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a9f75fb666eb7369907ad5e76c78b077e8c896d6" translate="yes" xml:space="preserve">
          <source>Windows now forcibly displays colors correctly to the terminal. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1127&quot;&gt;#1127&lt;/a&gt;.</source>
          <target state="translated">Windows现在强制向终端正确显示颜色。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1127&quot;&gt;＃1127&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="18dbec5b3d5c516886145bd094fb745eaa46277e" translate="yes" xml:space="preserve">
          <source>Windows users no longer exit with &lt;code&gt;EPIPE&lt;/code&gt; errors when running &lt;code&gt;cypress run&lt;/code&gt; in newer versions of Node. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1841&quot;&gt;#1841&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2044&quot;&gt;#2044&lt;/a&gt;.</source>
          <target state="translated">在较新版本的Node中运行 &lt;code&gt;cypress run&lt;/code&gt; 时，Windows用户不再退出并出现 &lt;code&gt;EPIPE&lt;/code&gt; 错误。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1841&quot;&gt;＃1841&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2044&quot;&gt;＃2044&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="10913b05ebaea696a82a5dbee33c2f5a954297c5" translate="yes" xml:space="preserve">
          <source>Windows: &lt;code&gt;%APPDATA%\Cypress\cy\production\browsers&lt;/code&gt;</source>
          <target state="translated">Windows： &lt;code&gt;%APPDATA%\Cypress\cy\production\browsers&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f7cad752a1756c589a7d1751f79c9ae7054f5dc3" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;#routeMatcher-RouteMatcher&quot;&gt;`RouteMatcher`&lt;/a&gt;</source>
          <target state="translated">与&lt;a href=&quot;#routeMatcher-RouteMatcher&quot;&gt;`RouteMatcher`&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8a04aa8c3ae5c49bbcf10fde083981080655183c" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;baseUrl&lt;/code&gt; set, Cypress loads main window in &lt;code&gt;baseUrl&lt;/code&gt;</source>
          <target state="translated">随着 &lt;code&gt;baseUrl&lt;/code&gt; 集，赛普拉斯加载在主窗口中 &lt;code&gt;baseUrl&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1057eb8064f1596749ce465d0fd981a5e756077f" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;cy.intercept()&lt;/code&gt;, you can:</source>
          <target state="translated">使用 &lt;code&gt;cy.intercept()&lt;/code&gt; ，您可以：</target>
        </trans-unit>
        <trans-unit id="f252adea0947e77f3c0bcf89abdce4883ec73e1e" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;operationName&lt;/code&gt; property:</source>
          <target state="translated">具有 &lt;code&gt;operationName&lt;/code&gt; 属性：</target>
        </trans-unit>
        <trans-unit id="81fc1d3a1ce3fa8065b60f2f7ee20e1857adf53a" translate="yes" xml:space="preserve">
          <source>With Cypress, by adding a &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt;, you can more easily pinpoint your specific problem. If the response never came back, you&amp;rsquo;ll receive an error like this:</source>
          <target state="translated">使用赛普拉斯，通过添加&lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt;，您可以更轻松地查明您的特定问题。如果响应再也没有回来，您将收到如下错误：</target>
        </trans-unit>
        <trans-unit id="324f62d776b36302fae0f158bb48f689eac27ff1" translate="yes" xml:space="preserve">
          <source>With Cypress, we automatically watch your &lt;code&gt;pluginsFile&lt;/code&gt; and any changes made will take effect immediately. We will read the file in and execute the exported function again.</source>
          <target state="translated">使用赛普拉斯，我们将自动查看您的 &lt;code&gt;pluginsFile&lt;/code&gt; ，所做的任何更改将立即生效。我们将读取文件并再次执行导出的功能。</target>
        </trans-unit>
        <trans-unit id="2d635167b9ab9bbc62bb901a9237c2a0a66c7b58" translate="yes" xml:space="preserve">
          <source>With Cypress, you don&amp;rsquo;t have to assert to have a useful test. Even without assertions, a few lines of Cypress can ensure thousands of lines of code are working properly across the client and server!</source>
          <target state="translated">使用赛普拉斯，您不必断言要进行有用的测试。即使没有断言，赛普拉斯的几行代码也可以确保数千行代码在客户端和服务器上正常工作！</target>
        </trans-unit>
        <trans-unit id="5cd018500995ac99144a5d8f06785abea09916d9" translate="yes" xml:space="preserve">
          <source>With Cypress, you have the ability to record your project&amp;rsquo;s tests.</source>
          <target state="translated">使用赛普拉斯，您可以记录项目的测试。</target>
        </trans-unit>
        <trans-unit id="cecd5b7f531f2034a00137ec958ca364816ffa35" translate="yes" xml:space="preserve">
          <source>With Stubbing</source>
          <target state="translated">带存根</target>
        </trans-unit>
        <trans-unit id="dbc0d8696651296fb73ba8533dddda5e407c08fc" translate="yes" xml:space="preserve">
          <source>With URL</source>
          <target state="translated">与URL</target>
        </trans-unit>
        <trans-unit id="3b657f2578332777327f187492910d1d8a20dfe9" translate="yes" xml:space="preserve">
          <source>With a &lt;code&gt;StaticResponse&lt;/code&gt; object</source>
          <target state="translated">使用 &lt;code&gt;StaticResponse&lt;/code&gt; 对象</target>
        </trans-unit>
        <trans-unit id="e0bfa5a19660c9844839ce10a038ebb441cbdd86" translate="yes" xml:space="preserve">
          <source>With a custom selector strategy that favours classes, the selector value will be &lt;code&gt;'.number3'&lt;/code&gt;.</source>
          <target state="translated">使用有利于类的自定义选择器策略，选择器值将为 &lt;code&gt;'.number3'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8c6a0a3be9b1c5a32e32c20d13cbc765264fee9c" translate="yes" xml:space="preserve">
          <source>With a duration estimation for each spec file of a test run, Cypress can distribute spec files to available CI resources in descending order of spec run duration. In this manner, the most time-consuming specs start first which minimizes the overall test run duration.</source>
          <target state="translated">通过对测试运行的每个规格文件的持续时间估计,Cypress可以按照规格运行持续时间的降序将规格文件分配给可用的CI资源。通过这种方式,最耗时的规格文件首先开始,从而使整个测试运行持续时间最小化。</target>
        </trans-unit>
        <trans-unit id="e0067d946a05fc7cda30d22276dfde0df5a7f37b" translate="yes" xml:space="preserve">
          <source>With a fixture</source>
          <target state="translated">有固定装置</target>
        </trans-unit>
        <trans-unit id="b4731609fd5c1e3b879d8021b6237528a57477c3" translate="yes" xml:space="preserve">
          <source>With a string</source>
          <target state="translated">有一串</target>
        </trans-unit>
        <trans-unit id="d2e0f705744da6de9b9acfbb52cfebd2919d3c3f" translate="yes" xml:space="preserve">
          <source>With parallelization</source>
          <target state="translated">并行化</target>
        </trans-unit>
        <trans-unit id="3659716464d76403703624f376f36f5100221ce5" translate="yes" xml:space="preserve">
          <source>With plugins, you can programmatically alter the resolved configuration and environment variables that come from &lt;code&gt;cypress.json&lt;/code&gt;, &lt;a href=&quot;../guides/environment-variables#Option-2-cypress-env-json&quot;&gt;&lt;code&gt;cypress.env.json&lt;/code&gt;&lt;/a&gt;, the CLI, or system environment variables.</source>
          <target state="translated">使用插件，您可以以编程方式更改来自 &lt;code&gt;cypress.json&lt;/code&gt; ，&lt;a href=&quot;../guides/environment-variables#Option-2-cypress-env-json&quot;&gt; &lt;code&gt;cypress.env.json&lt;/code&gt; &lt;/a&gt;，CLI或系统环境变量的已解析配置和环境变量。</target>
        </trans-unit>
        <trans-unit id="8bbe6ccbd10d31aa0e0e3a7d35d78505d05e189c" translate="yes" xml:space="preserve">
          <source>With that said - you still have the option to have it &lt;strong&gt;both ways&lt;/strong&gt;.</source>
          <target state="translated">如此说来-您仍然可以选择&lt;strong&gt;两种方式同时使用&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="43e92d93953a6c6776e1a2c3bf42eb28eaa6259b" translate="yes" xml:space="preserve">
          <source>With that said, as long as you are aware of the potential pitfalls with control flow, it is possible to do this in Cypress!</source>
          <target state="translated">说到这里,只要你意识到控制流的潜在隐患,在Cypress中是可以做到的!</target>
        </trans-unit>
        <trans-unit id="aa2d4bf98dcaae706370c1b4c5e896b548d8d92b" translate="yes" xml:space="preserve">
          <source>With that said, except in the most unusual and rare circumstances, you can still test most application behavior without opening multiple browsers at the same time.</source>
          <target state="translated">话虽如此,除了在最不寻常的极少数情况下,你仍然可以在不同时打开多个浏览器的情况下测试大多数应用行为。</target>
        </trans-unit>
        <trans-unit id="7186fa0b6472e23066ddb57d7d36b1e0306931a9" translate="yes" xml:space="preserve">
          <source>With the default selector strategy, the selector value will be &lt;code&gt;'#bingo'&lt;/code&gt; because IDs have priority over classes.</source>
          <target state="translated">使用默认选择器策略时，选择器值为 &lt;code&gt;'#bingo'&lt;/code&gt; ,因为ID优先于类。</target>
        </trans-unit>
        <trans-unit id="5b5f9bd0a40917819f7a3803644b0e1fe5baf4cd" translate="yes" xml:space="preserve">
          <source>With this option enabled - Cypress will search through the response streams coming from your server on &lt;code&gt;.html&lt;/code&gt; and &lt;code&gt;.js&lt;/code&gt; files and replace code that &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/886#issuecomment-364779884&quot;&gt;matches the following patterns.&lt;/a&gt;</source>
          <target state="translated">启用此选项后，赛普拉斯将在 &lt;code&gt;.html&lt;/code&gt; 和 &lt;code&gt;.js&lt;/code&gt; 文件中搜索来自服务器的响应流，并替换&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/886#issuecomment-364779884&quot;&gt;与以下模式匹配的&lt;/a&gt;代码。</target>
        </trans-unit>
        <trans-unit id="c6205072bdbddad8d3ef5cfb3e195b5d2c6f3556" translate="yes" xml:space="preserve">
          <source>Within</source>
          <target state="translated">Within</target>
        </trans-unit>
        <trans-unit id="f5f70cb66d60ea6f53ef4cf2198b72d1af04ae68" translate="yes" xml:space="preserve">
          <source>Within &lt;a href=&quot;../guides/continuous-integration&quot;&gt;Continuous Integration&lt;/a&gt;, or from your local computer&amp;rsquo;s terminal, pass the displayed &lt;a href=&quot;#Identification&quot;&gt;Record Key&lt;/a&gt; while running the &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">在&lt;a href=&quot;../guides/continuous-integration&quot;&gt;Continuous Integration中&lt;/a&gt;，或者从本地计算机的终端中，在运行&lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt; &lt;code&gt;cypress run&lt;/code&gt; &lt;/a&gt;命令的同时传递显示的&lt;a href=&quot;#Identification&quot;&gt;Record Key&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b88411b1ac3655bb73b98154aea8100ca872d0a5" translate="yes" xml:space="preserve">
          <source>Within Cypress, you have the ability to choose whether to stub responses or allow them to actually hit your server. You can also mix and match within the same test by choosing to stub certain requests, while allowing others to hit your server.</source>
          <target state="translated">在Cypress中,您可以选择是截断响应还是允许它们实际进入您的服务器。你也可以在同一测试中混合和匹配,选择在某些请求中存根,同时允许其他请求击中你的服务器。</target>
        </trans-unit>
        <trans-unit id="bf0016aaa34012562c39a3599899ce838be61180" translate="yes" xml:space="preserve">
          <source>Within a few milliseconds after the DOM updates, &lt;code&gt;cy.get()&lt;/code&gt; finds two elements and the &lt;code&gt;should('have.length', 2)&lt;/code&gt; assertion passes</source>
          <target state="translated">在DOM更新后的几毫秒内， &lt;code&gt;cy.get()&lt;/code&gt; 找到两个元素，并且 &lt;code&gt;should('have.length', 2)&lt;/code&gt; 断言通过</target>
        </trans-unit>
        <trans-unit id="e70935eb04a39039416421f2fc50df146e2bb5f6" translate="yes" xml:space="preserve">
          <source>Within the context of the &lt;a href=&quot;../../api/commands/then&quot;&gt;&lt;code&gt;.then()&lt;/code&gt;&lt;/a&gt; function, the &lt;code&gt;debugger&lt;/code&gt; is called, halting the browser and calling focus to the Developer Tools.</source>
          <target state="translated">在&lt;a href=&quot;../../api/commands/then&quot;&gt; &lt;code&gt;.then()&lt;/code&gt; &lt;/a&gt;函数的上下文中，将调用 &lt;code&gt;debugger&lt;/code&gt; ，以停止浏览器并将焦点移至开发人员工具。</target>
        </trans-unit>
        <trans-unit id="2d7483d7edd2af13bb6dc2b1f51a23f8500b884d" translate="yes" xml:space="preserve">
          <source>Without &lt;code&gt;baseUrl&lt;/code&gt; set, Cypress loads main window in &lt;code&gt;localhost&lt;/code&gt; + random port</source>
          <target state="translated">没有设置 &lt;code&gt;baseUrl&lt;/code&gt; ，赛普拉斯将主窗口加载到 &lt;code&gt;localhost&lt;/code&gt; +随机端口中</target>
        </trans-unit>
        <trans-unit id="d2f5291a32efdfed22811452bf2aa5f989782742" translate="yes" xml:space="preserve">
          <source>Without &lt;code&gt;operationName&lt;/code&gt; property:</source>
          <target state="translated">没有 &lt;code&gt;operationName&lt;/code&gt; 属性：</target>
        </trans-unit>
        <trans-unit id="906a6eb7d04be89d6d2b3daa4e326d26ddb2fac7" translate="yes" xml:space="preserve">
          <source>Without &lt;strong&gt;retry-ability&lt;/strong&gt;, assertions would randomly fail. This would lead to flaky, inconsistent results. This is also why we cannot use new JS features like &lt;code&gt;async / await&lt;/code&gt;.</source>
          <target state="translated">没有&lt;strong&gt;retry-ability&lt;/strong&gt;，断言将随机失败。这将导致片状，不一致的结果。这也是为什么我们不能使用 &lt;code&gt;async / await&lt;/code&gt; 类的新JS功能的原因。</target>
        </trans-unit>
        <trans-unit id="acb1dc80e7632f9b47496cf67df2c872ca70f178" translate="yes" xml:space="preserve">
          <source>Without Stubbing</source>
          <target state="translated">无支点</target>
        </trans-unit>
        <trans-unit id="2a4a1b0491c7a6e9d7a59d6132c3af9f757e57ca" translate="yes" xml:space="preserve">
          <source>Without a single explicit assertion, there are dozens of ways this test can fail! Here&amp;rsquo;s a few:</source>
          <target state="translated">如果没有一个明确的断言，该测试就会以多种方式失败！这里是一些：</target>
        </trans-unit>
        <trans-unit id="a1219481711846711eed3cfae042f29750086a95" translate="yes" xml:space="preserve">
          <source>Without parallelization</source>
          <target state="translated">没有并行化</target>
        </trans-unit>
        <trans-unit id="44db76fdf7269cbcb7a11a9b09f77cbb96044bec" translate="yes" xml:space="preserve">
          <source>Without the explicit selector the subject would change to be the &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;. Using the explicit selector ensures that chained commands will have the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; as the subject.</source>
          <target state="translated">如果没有显式选择器，则该主题将变为 &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; 。使用显式选择器可确保链接的命令将以 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 作为主题。</target>
        </trans-unit>
        <trans-unit id="973948319a04f7243a7ee0f7f79cf360c46cbdae" translate="yes" xml:space="preserve">
          <source>WordPress ReactJS Boilerplate</source>
          <target state="translated">WordPress ReactJS Boilerplate</target>
        </trans-unit>
        <trans-unit id="97de39ae118b23bf5c7480efba0263d4b3523884" translate="yes" xml:space="preserve">
          <source>Workarounds</source>
          <target state="translated">Workarounds</target>
        </trans-unit>
        <trans-unit id="2cd0a2df375a60b44c976c8a4db7d194060d4461" translate="yes" xml:space="preserve">
          <source>Workarounds for the lack of a &lt;code&gt;cy.hover()&lt;/code&gt; command.</source>
          <target state="translated">缺少 &lt;code&gt;cy.hover()&lt;/code&gt; 命令的解决方法。</target>
        </trans-unit>
        <trans-unit id="a029ad208ecbaff772e93e32f766a12214b46a9a" translate="yes" xml:space="preserve">
          <source>Working with (or without!) your authentication mechanism</source>
          <target state="translated">使用(或不使用!)您的认证机制工作</target>
        </trans-unit>
        <trans-unit id="a58cf4400fc9e0f2d0922b7223946562b1482781" translate="yes" xml:space="preserve">
          <source>Worst - too generic, no context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2b27d10698f477cb5d3abdca308a747ef002771" translate="yes" xml:space="preserve">
          <source>Worth noting is that this test transitioned across two different pages.</source>
          <target state="translated">值得注意的是,这次测试跨越了两个不同的页面。</target>
        </trans-unit>
        <trans-unit id="c3447e7954fa5698ae957a33210094d617b1dc00" translate="yes" xml:space="preserve">
          <source>Wrap</source>
          <target state="translated">Wrap</target>
        </trans-unit>
        <trans-unit id="815e184ef7f08812dabb069624864d3ce9cad673" translate="yes" xml:space="preserve">
          <source>Wrap a method in a spy in order to record calls to and arguments of the function.</source>
          <target state="translated">在spy中封装一个方法,以便记录对函数的调用和参数。</target>
        </trans-unit>
        <trans-unit id="d0e74f074efa84f7e7f076c9a2ad80f855245635" translate="yes" xml:space="preserve">
          <source>Wrap a method with a spy</source>
          <target state="translated">用一个间谍来包装一个方法</target>
        </trans-unit>
        <trans-unit id="caf5dcb3f0a5d5cc662149fa11623a73d286dea4" translate="yes" xml:space="preserve">
          <source>Wrap elements to continue executing commands</source>
          <target state="translated">缠绕元素继续执行命令</target>
        </trans-unit>
        <trans-unit id="6aeeb5d1410040f2fa5f8d1c096cc6a1c8f97152" translate="yes" xml:space="preserve">
          <source>Write JSON to a file</source>
          <target state="translated">向文件写入JSON</target>
        </trans-unit>
        <trans-unit id="5bfcf55a9ad2e92d1a46f472dec4bad34f51236c" translate="yes" xml:space="preserve">
          <source>Write a &lt;em&gt;real&lt;/em&gt; test</source>
          <target state="translated">写一个&lt;em&gt;真实的&lt;/em&gt;测试</target>
        </trans-unit>
        <trans-unit id="2dd9609ec0161b8d632b04b5aa5502b3d84bd8e4" translate="yes" xml:space="preserve">
          <source>Write a simple test</source>
          <target state="translated">编写一个简单的测试</target>
        </trans-unit>
        <trans-unit id="a08f85691e5616827fd376baa49e87458bc7f09d" translate="yes" xml:space="preserve">
          <source>Write a single e2e test without stubs, and then stub the rest</source>
          <target state="translated">编写一个没有存根的单项e2e测试,然后存根其他的测试。</target>
        </trans-unit>
        <trans-unit id="cd6d5754e026150b391ab35cb939286835acd624" translate="yes" xml:space="preserve">
          <source>Write command log to the terminal</source>
          <target state="translated">将命令日志写入终端</target>
        </trans-unit>
        <trans-unit id="22f196c7cb125c4b03f179cb32f7c2aaf4cf6d69" translate="yes" xml:space="preserve">
          <source>Write our first failing test.</source>
          <target state="translated">写出我们第一个失败的测试。</target>
        </trans-unit>
        <trans-unit id="8e04273f82e5c422931875249934b749d7eac91c" translate="yes" xml:space="preserve">
          <source>Write our first passing test.</source>
          <target state="translated">写出我们的第一个合格测试。</target>
        </trans-unit>
        <trans-unit id="7f49208ca7d9f2aa45c31fa44dcd53e09c9d2ea8" translate="yes" xml:space="preserve">
          <source>Write response data to a fixture file</source>
          <target state="translated">将响应数据写入夹具文件</target>
        </trans-unit>
        <trans-unit id="a44bf03a5e55df5413891c44c1fac78a52233070" translate="yes" xml:space="preserve">
          <source>Write some text to a &lt;code&gt;txt&lt;/code&gt; file</source>
          <target state="translated">写一些文本到 &lt;code&gt;txt&lt;/code&gt; 文件</target>
        </trans-unit>
        <trans-unit id="391b1a9608423cb9c4d16a7886b9e07fab1acb00" translate="yes" xml:space="preserve">
          <source>Write tests</source>
          <target state="translated">编写测试</target>
        </trans-unit>
        <trans-unit id="cff899899ede8d6c533f3b1b8b0d7c3492723fc4" translate="yes" xml:space="preserve">
          <source>Write that JavaScript file to disk (example: &lt;code&gt;/Users/foo/tmp/spec.js&lt;/code&gt;)</source>
          <target state="translated">将该JavaScript文件写入磁盘（例如： &lt;code&gt;/Users/foo/tmp/spec.js&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="5719aaf7992634642b1b7112e30c7134e764302f" translate="yes" xml:space="preserve">
          <source>Write to a file to create a fixture from response body</source>
          <target state="translated">写入文件,从响应体中创建一个夹具。</target>
        </trans-unit>
        <trans-unit id="cab3cbe1fed5623141fafd3b38cf9a06822dd75f" translate="yes" xml:space="preserve">
          <source>Write to a file with the specified contents.</source>
          <target state="translated">写入指定内容的文件。</target>
        </trans-unit>
        <trans-unit id="a600dde27ac1cbb55dea0b6a4509220f889cf37a" translate="yes" xml:space="preserve">
          <source>Write your configuration in &lt;code&gt;yml&lt;/code&gt;</source>
          <target state="translated">用 &lt;code&gt;yml&lt;/code&gt; 编写您的配置</target>
        </trans-unit>
        <trans-unit id="b3bbf365324121f0ac4816ebcc17d68fa60e28ae" translate="yes" xml:space="preserve">
          <source>Write your own &lt;code&gt;chai&lt;/code&gt; assertions as &lt;a href=&quot;http://chaijs.com/api/plugins/&quot;&gt;documented here&lt;/a&gt;.</source>
          <target state="translated">编写自己的 &lt;code&gt;chai&lt;/code&gt; 断言，如此处&lt;a href=&quot;http://chaijs.com/api/plugins/&quot;&gt;记录&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="57e9c65100c0cc4da8b086c12796529e5b38c06c" translate="yes" xml:space="preserve">
          <source>Write your test code in ClojureScript.</source>
          <target state="translated">用ClojureScript编写你的测试代码。</target>
        </trans-unit>
        <trans-unit id="6ab72b29ea2983720d1bfac24c6424cb6657e4dd" translate="yes" xml:space="preserve">
          <source>Writing Assertions</source>
          <target state="translated">撰写论断</target>
        </trans-unit>
        <trans-unit id="ba0e9312c8cb9cd6ef1a61e5d88575514a7ba12b" translate="yes" xml:space="preserve">
          <source>Writing Tests</source>
          <target state="translated">写作测试</target>
        </trans-unit>
        <trans-unit id="9d497ec47a0985dbe1ace5d6eae1d0ddbb898606" translate="yes" xml:space="preserve">
          <source>Writing Your First Test</source>
          <target state="translated">撰写您的第一次测试</target>
        </trans-unit>
        <trans-unit id="510a261ec2843f68a4816e4735bf0f01c466c291" translate="yes" xml:space="preserve">
          <source>Writing a Plugin</source>
          <target state="translated">编写一个插件</target>
        </trans-unit>
        <trans-unit id="05db46358fd92c5aad6d2c6528572f6a3a6fe318" translate="yes" xml:space="preserve">
          <source>Writing an assertion</source>
          <target state="translated">写一个论断</target>
        </trans-unit>
        <trans-unit id="faec91882204c852d12e33358973060973700fdf" translate="yes" xml:space="preserve">
          <source>Writing and Organizing Tests</source>
          <target state="translated">编写和组织测试</target>
        </trans-unit>
        <trans-unit id="55c5c7c7f6dc652f5ade97c4e0d3f0a7cba0e2ec" translate="yes" xml:space="preserve">
          <source>Writing integration tests is not the same as unit tests</source>
          <target state="translated">编写集成测试和单元测试是不一样的</target>
        </trans-unit>
        <trans-unit id="ab2816d4bb9622be7220e5163963f6a9c487ee4d" translate="yes" xml:space="preserve">
          <source>Writing tests</source>
          <target state="translated">编写测试</target>
        </trans-unit>
        <trans-unit id="8bd291d7c8fc247b785a2fb2b82d1c2a79454331" translate="yes" xml:space="preserve">
          <source>XHR URL is now decoded to make assertions easier. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/75&quot;&gt;#75&lt;/a&gt;.</source>
          <target state="translated">XHR URL现在已解码，以使断言更加容易。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/75&quot;&gt;＃75&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="948e5c4f5e072cc35e1ae48bf50f57c093a6e15d" translate="yes" xml:space="preserve">
          <source>XHR handling has been rewritten to be much more flexible, extensible, and future-proof.</source>
          <target state="translated">XHR的处理方式已经被重写,变得更加灵活、可扩展和面向未来。</target>
        </trans-unit>
        <trans-unit id="ef873078fda8e8bc78ce2414cf867d501e93e50b" translate="yes" xml:space="preserve">
          <source>XHR requests for &lt;code&gt;.svg&lt;/code&gt; files are no longer shown in the Command Log by default. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/131&quot;&gt;#131&lt;/a&gt;.</source>
          <target state="translated">默认情况下，对 &lt;code&gt;.svg&lt;/code&gt; 文件的XHR请求不再显示在命令日志中。地址&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/131&quot;&gt;＃131&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="663ae6f07edc2db763c485b93a365cc398937f83" translate="yes" xml:space="preserve">
          <source>XHR&amp;rsquo;s from your application are no longer forcefully aborted between tests.</source>
          <target state="translated">您的应用程序中的XHR不再在两次测试之间被强制中止。</target>
        </trans-unit>
        <trans-unit id="2e6b301701bcc969d7bd210e9e0c093363ad7666" translate="yes" xml:space="preserve">
          <source>XHR&amp;rsquo;s now include an &lt;code&gt;Initiator&lt;/code&gt; stack regardless of whether they&amp;rsquo;re stubbed. The &lt;code&gt;Initiator&lt;/code&gt; stack includes the stack which caused the XHR to be created and sent.</source>
          <target state="translated">XHR现在包括一个 &lt;code&gt;Initiator&lt;/code&gt; 程序堆栈，而不管它们是否已存根。所述 &lt;code&gt;Initiator&lt;/code&gt; 组包括其导致创建并发送XHR堆栈。</target>
        </trans-unit>
        <trans-unit id="d0aefc34be6eecce54750d8cbc361aec46085c48" translate="yes" xml:space="preserve">
          <source>XHR&amp;rsquo;s now snapshot twice - when the request is made and when the response is returned.</source>
          <target state="translated">XHR的快照现在两次-发出请求时和返回响应时。</target>
        </trans-unit>
        <trans-unit id="133f6f4281ac57439b78e67d0cdc25582668ce19" translate="yes" xml:space="preserve">
          <source>XHR&amp;rsquo;s that display &lt;code&gt;(XHR STUB)&lt;/code&gt; in the Command Log have been stubbed and their response, status, headers, and delay have been controlled by your matching &lt;code&gt;cy.route()&lt;/code&gt;.</source>
          <target state="translated">已在命令日志中显示的 &lt;code&gt;(XHR STUB)&lt;/code&gt; 已存根，并且它们的响应，状态，标头和延迟已由匹配的 &lt;code&gt;cy.route()&lt;/code&gt; 控制。</target>
        </trans-unit>
        <trans-unit id="3c7ad4fc93d4ee54a5bb8a0c2dc774f349135f16" translate="yes" xml:space="preserve">
          <source>XHR&amp;rsquo;s that display &lt;code&gt;(XHR)&lt;/code&gt; in the Command Log have &lt;em&gt;not&lt;/em&gt; been stubbed and were passed directly through to a server.</source>
          <target state="translated">在命令日志中显示的 &lt;code&gt;(XHR)&lt;/code&gt; 尚未存根，&lt;em&gt;而是&lt;/em&gt;直接传递到服务器。</target>
        </trans-unit>
        <trans-unit id="20ca621c7a5e5fc4d60e985951e1e2743133d289" translate="yes" xml:space="preserve">
          <source>XHR&amp;rsquo;s which are aborted no longer cause an &lt;code&gt;INVALID_STATE_ERR&lt;/code&gt; to be thrown. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/62&quot;&gt;#62&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/34&quot;&gt;#34&lt;/a&gt;.</source>
          <target state="translated">被中止的XHR不再导致引发 &lt;code&gt;INVALID_STATE_ERR&lt;/code&gt; 。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/62&quot;&gt;＃62&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/34&quot;&gt;＃34&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="896067df2d97b6f3a5ba58b06798fd7757f700ee" translate="yes" xml:space="preserve">
          <source>XHR&amp;rsquo;s which have their &lt;code&gt;onload&lt;/code&gt; handler replaced after &lt;code&gt;XHR#send&lt;/code&gt; is called is now properly accounted for. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/143&quot;&gt;#143&lt;/a&gt;.</source>
          <target state="translated">在 &lt;code&gt;XHR#send&lt;/code&gt; 被调用之后替换了 &lt;code&gt;onload&lt;/code&gt; 处理程序的XHR现在已得到正确处理。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/143&quot;&gt;＃143&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="743b51390e3cb9baef6667ca98b59b7d162859f4" translate="yes" xml:space="preserve">
          <source>XHR&amp;rsquo;s will continue to work correctly even &lt;em&gt;after&lt;/em&gt; a test ends. In previous versions, due to replacing the entire XHR object, your application would not work correctly after a test ended. This prevented you from &amp;ldquo;navigating around&amp;rdquo; and working with your app after the tests end.</source>
          <target state="translated">XHR的将继续即使正常工作&lt;em&gt;后，&lt;/em&gt;测试结束。在以前的版本中，由于替换了整个XHR对象，因此测试结束后您的应用程序将无法正常运行。测试结束后，这将阻止您&amp;ldquo;四处浏览&amp;rdquo;并使用您的应用程序。</target>
        </trans-unit>
        <trans-unit id="f4f89ce0456ef298d7e8ec18b48711ea69b3e457" translate="yes" xml:space="preserve">
          <source>XHR&amp;rsquo;s will no longer be ended early and display no status as if there was no response. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/63&quot;&gt;#63&lt;/a&gt;.</source>
          <target state="translated">XHR将不再提前终止，并且不会显示任何状态，就像没有响应一样。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/63&quot;&gt;＃63&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e37300eec1d33692909be126a13d42a375e42b89" translate="yes" xml:space="preserve">
          <source>XHRs that display &lt;code&gt;(XHR STUB)&lt;/code&gt; in the Command Log have been stubbed and their response, status, headers, and delay have been controlled by your matching &lt;code&gt;cy.route()&lt;/code&gt;.</source>
          <target state="translated">在命令日志中显示 &lt;code&gt;(XHR STUB)&lt;/code&gt; 的XHR已被存根，并且它们的响应，状态，标头和延迟已由匹配的 &lt;code&gt;cy.route()&lt;/code&gt; 控制。</target>
        </trans-unit>
        <trans-unit id="204f0cb1408889b2a27a2064525940e4a5915a4b" translate="yes" xml:space="preserve">
          <source>XHRs that display &lt;code&gt;(XHR)&lt;/code&gt; in the Command Log have &lt;em&gt;not&lt;/em&gt; been stubbed and were passed directly through to a server.</source>
          <target state="translated">在命令日志中显示 &lt;code&gt;(XHR)&lt;/code&gt; 的XHR尚未存根，&lt;em&gt;而是&lt;/em&gt;直接传递到服务器。</target>
        </trans-unit>
        <trans-unit id="ffbcb202b09db426bae56cf2ffb88f18594f2258" translate="yes" xml:space="preserve">
          <source>YAML</source>
          <target state="translated">YAML</target>
        </trans-unit>
        <trans-unit id="ba1d290fe051c54f76c2d9bc9b616a74a98d0f68" translate="yes" xml:space="preserve">
          <source>Yes. You can do that and much more.</source>
          <target state="translated">是的,你可以做到这一点,还有更多。</target>
        </trans-unit>
        <trans-unit id="8c7d6cec1a113eff5e749d252aff4bf832876c90" translate="yes" xml:space="preserve">
          <source>Yield the elements that do not have class &lt;code&gt;active&lt;/code&gt;</source>
          <target state="translated">产生没有 &lt;code&gt;active&lt;/code&gt; 的元素</target>
        </trans-unit>
        <trans-unit id="69ae77c7512a652e2918cd1f0757f42b91b8dfda" translate="yes" xml:space="preserve">
          <source>Yield the object passed into &lt;code&gt;.wrap()&lt;/code&gt;.</source>
          <target state="translated">产生传递给 &lt;code&gt;.wrap()&lt;/code&gt; 的对象。</target>
        </trans-unit>
        <trans-unit id="ba4333a9fa315b8ff9110c4f259d82398439326c" translate="yes" xml:space="preserve">
          <source>Yield the object passed into &lt;code&gt;.wrap()&lt;/code&gt;. If the object is a promise, yield its resolved value.</source>
          <target state="translated">产生传递给 &lt;code&gt;.wrap()&lt;/code&gt; 的对象。如果对象是一个承诺，则产生其确定的值。</target>
        </trans-unit>
        <trans-unit id="542815938eae61d84fdfe3b4fc49fd92c34beb56" translate="yes" xml:space="preserve">
          <source>Yield the remote window object</source>
          <target state="translated">输出远程窗口对象</target>
        </trans-unit>
        <trans-unit id="5a12ea0e0de8f020b440dba245a0b3c4be9d09a5" translate="yes" xml:space="preserve">
          <source>Yielded (what was returned by this command)</source>
          <target state="translated">屈服(该命令返回的内容)</target>
        </trans-unit>
        <trans-unit id="738a2b66281e5ca4973cbceebc923d1996e03dad" translate="yes" xml:space="preserve">
          <source>Yields</source>
          <target state="translated">Yields</target>
        </trans-unit>
        <trans-unit id="462c5e6929436be950f4b6f269bbbb0bff05188a" translate="yes" xml:space="preserve">
          <source>You &lt;strong&gt;can&lt;/strong&gt;&lt;a href=&quot;../../api/commands/visit&quot;&gt;visit&lt;/a&gt; different subdomains in the same test.</source>
          <target state="translated">您&lt;strong&gt;可以&lt;/strong&gt;在同一测试中&lt;a href=&quot;../../api/commands/visit&quot;&gt;访问&lt;/a&gt;不同的子域。</target>
        </trans-unit>
        <trans-unit id="499c99de6a195378ff0c8dde918219add5664a04" translate="yes" xml:space="preserve">
          <source>You &lt;strong&gt;can&lt;/strong&gt;&lt;a href=&quot;../../api/commands/visit&quot;&gt;visit&lt;/a&gt; different superdomains in &lt;strong&gt;different&lt;/strong&gt; tests.</source>
          <target state="translated">您&lt;strong&gt;可以&lt;/strong&gt;在&lt;strong&gt;不同的&lt;/strong&gt;测试中&lt;a href=&quot;../../api/commands/visit&quot;&gt;访问&lt;/a&gt;不同的超域。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9850ddbfd7faa1d9b87b1e04ba053680f689e1d4" translate="yes" xml:space="preserve">
          <source>You &lt;strong&gt;cannot&lt;/strong&gt;&lt;a href=&quot;../../api/commands/visit&quot;&gt;visit&lt;/a&gt; two different superdomains in the same test.</source>
          <target state="translated">您&lt;strong&gt;不能&lt;/strong&gt;在同一测试中&lt;a href=&quot;../../api/commands/visit&quot;&gt;访问&lt;/a&gt;两个不同的超域。</target>
        </trans-unit>
        <trans-unit id="ba9e72e81a428fe6d349b8ef505e1ad5f33af85a" translate="yes" xml:space="preserve">
          <source>You almost &lt;strong&gt;never&lt;/strong&gt; need to wait for an arbitrary period of time. There are always better ways to express this in Cypress.</source>
          <target state="translated">你几乎&lt;strong&gt;从来没有&lt;/strong&gt;需要等待的任意时间。赛普拉斯始终有更好的表达方式。</target>
        </trans-unit>
        <trans-unit id="d8fea4ef67601902621408e89ad55a3b3e9e8d0e" translate="yes" xml:space="preserve">
          <source>You are a developer that has forked our codebase and do not have access to run our API locally. Please read more about this in our &lt;a href=&quot;https://on.cypress.io/contributing&quot;&gt;contributing doc&lt;/a&gt;.</source>
          <target state="translated">您是已经分叉我们的代码库且无权在本地运行我们的API的开发人员。请在我们的&lt;a href=&quot;https://on.cypress.io/contributing&quot;&gt;贡献文档中&lt;/a&gt;阅读有关此内容的更多信息。</target>
        </trans-unit>
        <trans-unit id="a07010ed6d0b79d84e123ef7cebbd3d1f5665e75" translate="yes" xml:space="preserve">
          <source>You are attempting to pass the &lt;a href=&quot;../guides/command-line#cypress-run-parallel&quot;&gt;&lt;code&gt;--parallel&lt;/code&gt;&lt;/a&gt; flag to a run that was completed over 24 hours ago.</source>
          <target state="translated">您正在尝试将&lt;a href=&quot;../guides/command-line#cypress-run-parallel&quot;&gt; &lt;code&gt;--parallel&lt;/code&gt; &lt;/a&gt;标志传递给24小时前完成的运行。</target>
        </trans-unit>
        <trans-unit id="0a5eaeeeaffb9cde25c1cea6692bd14c95df196d" translate="yes" xml:space="preserve">
          <source>You are testing a page that uses Single sign-on (SSO). In this case your web server is likely redirecting you between superdomains, so you receive this error message. You can likely get around this redirect problem by using &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; to manually handle the session yourself.</source>
          <target state="translated">您正在测试使用单点登录（SSO）的页面。在这种情况下，您的Web服务器可能会在超域之间重定向您，因此您会收到此错误消息。通过使用&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt;自己手动处理会话，您可能可以解决此重定向问题。</target>
        </trans-unit>
        <trans-unit id="5e20b1e7029e04bd7c212b7346c26fecd36d0b70" translate="yes" xml:space="preserve">
          <source>You can &lt;a href=&quot;../../api/commands/stub&quot;&gt;stub&lt;/a&gt; everything and simulate every single scenario. Chat messages, offline messages, connections, reconnections, disconnections, group chat, etc. Everything that happens inside of the browser can be fully tested. Requests leaving the browser could also be stubbed and you could assert that the request bodies were correct.</source>
          <target state="translated">您可以&lt;a href=&quot;../../api/commands/stub&quot;&gt;存根&lt;/a&gt;所有内容并模拟每个场景。聊天消息，脱机消息，连接，重新连接，断开连接，群聊等。可以完全测试浏览器内部发生的所有事情。离开浏览器的请求也可能被存根，您可以断言请求主体是正确的。</target>
        </trans-unit>
        <trans-unit id="784d08745185a1519441b40f1c76d4c3dde4fc93" translate="yes" xml:space="preserve">
          <source>You can &lt;a href=&quot;../../api/plugins/writing-a-plugin&quot;&gt;check out the API docs here&lt;/a&gt;.</source>
          <target state="translated">您可以&lt;a href=&quot;../../api/plugins/writing-a-plugin&quot;&gt;在此处查看API文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="44d08e9900a859f4834cce50509040d4089e753b" translate="yes" xml:space="preserve">
          <source>You can &lt;a href=&quot;../../guides/guides/network-requests&quot;&gt;read more about XHR strategy here&lt;/a&gt;.</source>
          <target state="translated">您可以&lt;a href=&quot;../../guides/guides/network-requests&quot;&gt;在此处阅读有关XHR策略的更多信息&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2154ae12aa1c12609440ccc8342fe419b011a087" translate="yes" xml:space="preserve">
          <source>You can &lt;a href=&quot;../../guides/references/configuration#Viewport&quot;&gt;change these default dimensions&lt;/a&gt; by adding the following to your &lt;code&gt;cypress.json&lt;/code&gt;:</source>
          <target state="translated">您可以通过将以下内容添加到 &lt;code&gt;cypress.json&lt;/code&gt; 中来&lt;a href=&quot;../../guides/references/configuration#Viewport&quot;&gt;更改这些默认尺寸&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="a436468e8d3700843fa05d00ce7f2786823d1b10" translate="yes" xml:space="preserve">
          <source>You can &lt;a href=&quot;../dashboard/projects#Setup&quot;&gt;read more about recording runs here&lt;/a&gt;.</source>
          <target state="translated">您可以&lt;a href=&quot;../dashboard/projects#Setup&quot;&gt;在此处阅读有关录制运行的更多信息&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cf85580f3b8841e21d30afc6192aea62ae439056" translate="yes" xml:space="preserve">
          <source>You can &lt;a href=&quot;../guides/command-line&quot;&gt;read more about the CLI here&lt;/a&gt;.</source>
          <target state="translated">您可以&lt;a href=&quot;../guides/command-line&quot;&gt;在此处阅读有关CLI的更多信息&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="495f3f50cfa9af97f811f5082ba77ee95a195970" translate="yes" xml:space="preserve">
          <source>You can &lt;a href=&quot;../guides/environment-variables&quot;&gt;read more about Environment Variables&lt;/a&gt;.</source>
          <target state="translated">您可以&lt;a href=&quot;../guides/environment-variables&quot;&gt;阅读有关环境变量的更多信息&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="92e9c3215e41aae529b1035ff69debfc86a8d6bb" translate="yes" xml:space="preserve">
          <source>You can &lt;a href=&quot;../references/configuration&quot;&gt;read more about how environment variables can change configuration here&lt;/a&gt;.</source>
          <target state="translated">您可以&lt;a href=&quot;../references/configuration&quot;&gt;在此处阅读有关环境变量如何更改配置的更多信息&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="90c5f70b87d4541bb2abbaddd78c34b2d40f9221" translate="yes" xml:space="preserve">
          <source>You can &lt;a href=&quot;https://docs.cypress.io/guides/guides/network-requests.html&quot;&gt;read more about XHR strategy here&lt;/a&gt;.</source>
          <target state="translated">您可以&lt;a href=&quot;https://docs.cypress.io/guides/guides/network-requests.html&quot;&gt;在此处阅读有关XHR策略的更多信息&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="68e03cc5ef11fedbbc01ea36a5959fbcaebdf7f7" translate="yes" xml:space="preserve">
          <source>You can &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Viewport&quot;&gt;change these default dimensions&lt;/a&gt; by adding the following to your configuration file (&lt;code&gt;cypress.json&lt;/code&gt; by default):</source>
          <target state="translated">您可以通过将以下内容添加到配置文件中来&lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Viewport&quot;&gt;更改这些默认尺寸&lt;/a&gt;（默认情况下为 &lt;code&gt;cypress.json&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="4d491b6991d0e25f7938f96f1803e588382f664d" translate="yes" xml:space="preserve">
          <source>You can &lt;a href=&quot;server#Options&quot;&gt;read more about this behavior here.&lt;/a&gt;</source>
          <target state="translated">您可以&lt;a href=&quot;server#Options&quot;&gt;在此处阅读有关此行为的更多信息。&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f7429e037d4f10c8de0ca682f640e0d9eccf99b0" translate="yes" xml:space="preserve">
          <source>You can &lt;a href=&quot;server#Options&quot;&gt;read more about this here.&lt;/a&gt;</source>
          <target state="translated">您可以&lt;a href=&quot;server#Options&quot;&gt;在此处了解更多信息。&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ce5fd0d44b3fc46a01b53aa0560b7918ea740915" translate="yes" xml:space="preserve">
          <source>You can access functions to then drill into their own properties instead of invoking them.</source>
          <target state="translated">你可以访问函数,然后钻进它们自己的属性,而不是调用它们。</target>
        </trans-unit>
        <trans-unit id="5f4b77fc836d5a265c934a0f8270a262a73b1b14" translate="yes" xml:space="preserve">
          <source>You can add multiple groups to the same run by passing a different name. This can help distinguish groups of specs from each other.</source>
          <target state="translated">您可以通过传递不同的名称将多个组添加到同一运行中。这有助于区分不同的规格组。</target>
        </trans-unit>
        <trans-unit id="9bf9fe4eef68136c89d109fccd0aa58e4cf8a4e4" translate="yes" xml:space="preserve">
          <source>You can add retry-ability to your own &lt;a href=&quot;../../api/cypress-api/custom-commands&quot;&gt;custom commands&lt;/a&gt;, see &lt;a href=&quot;https://github.com/cypress-io/cypress-xpath/pull/12/files&quot;&gt;this pull request to cypress-xpath&lt;/a&gt; for an example.</source>
          <target state="translated">您可以在自己的&lt;a href=&quot;../../api/cypress-api/custom-commands&quot;&gt;自定义命令中&lt;/a&gt;添加重试功能，有关示例，请参见&lt;a href=&quot;https://github.com/cypress-io/cypress-xpath/pull/12/files&quot;&gt;对cypress-xpath的拉取请求&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5fb82d597ef3272f052afe18e0fad50752efcb6d" translate="yes" xml:space="preserve">
          <source>You can additionally pass a &lt;code&gt;--group&lt;/code&gt; flag so this shows up as a named &lt;a href=&quot;parallelization#Grouping-test-runs&quot;&gt;group&lt;/a&gt;.</source>
          <target state="translated">您还可以传递 &lt;code&gt;--group&lt;/code&gt; 标志，以便将其显示为已命名的&lt;a href=&quot;parallelization#Grouping-test-runs&quot;&gt;group&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="43d327df1d2cbf3d00430666edcfd81a359f119c" translate="yes" xml:space="preserve">
          <source>You can additionally reference &lt;a href=&quot;../core-concepts/variables-and-aliases&quot;&gt;aliases&lt;/a&gt; within responses. These aliases do not have to point to fixtures, but that is a common use case. Separating out a fixture enables you to work and mutate that object prior to handing it off to a response.</source>
          <target state="translated">您还可以在响应中引用&lt;a href=&quot;../core-concepts/variables-and-aliases&quot;&gt;别名&lt;/a&gt;。这些别名不必指向固定装置，但这是一个常见的用例。分离夹具可使您在将对象移交给响应之前对其进行工作和变异。</target>
        </trans-unit>
        <trans-unit id="e6215c846c9e2413af9d999de1041b1b887be989" translate="yes" xml:space="preserve">
          <source>You can almost read it like a little story! Cypress calls this &amp;ldquo;chaining&amp;rdquo; and we chain together commands to build tests that really express what the app does in a declarative way.</source>
          <target state="translated">您几乎可以像读一个小故事一样阅读它！赛普拉斯称之为&amp;ldquo;链接&amp;rdquo;，我们将命令链接在一起以构建测试，这些测试以声明方式真正表达了应用程序的功能。</target>
        </trans-unit>
        <trans-unit id="6abc7816b2d0675cc1ce58f7e2e18b2cd29f02c7" translate="yes" xml:space="preserve">
          <source>You can also &lt;code&gt;require&lt;/code&gt; local files relative to your project.</source>
          <target state="translated">您还可以 &lt;code&gt;require&lt;/code&gt; 相对于项目的本地文件。</target>
        </trans-unit>
        <trans-unit id="79f7a1c4e1c214de9bc8a43f6f54a14a7e3ed530" translate="yes" xml:space="preserve">
          <source>You can also access the &lt;code&gt;clock&lt;/code&gt; object via &lt;code&gt;this.clock&lt;/code&gt; in a &lt;a href=&quot;then&quot;&gt;&lt;code&gt;.then()&lt;/code&gt;&lt;/a&gt; callback.</source>
          <target state="translated">您也可以访问该 &lt;code&gt;clock&lt;/code&gt; 通过对象 &lt;code&gt;this.clock&lt;/code&gt; 的&lt;a href=&quot;then&quot;&gt; &lt;code&gt;.then()&lt;/code&gt; &lt;/a&gt;回调。</target>
        </trans-unit>
        <trans-unit id="bb3981301b8c8c9baaf227f00e9c6f69073b413e" translate="yes" xml:space="preserve">
          <source>You can also choose a browser by supplying a path:</source>
          <target state="translated">你也可以通过提供路径来选择浏览器。</target>
        </trans-unit>
        <trans-unit id="edc776eb9b4214fea2ba7e9d6b140f013e1d31c9" translate="yes" xml:space="preserve">
          <source>You can also experiment with what &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt; would yield given a string of text. Click on &lt;code&gt;cy.get&lt;/code&gt; and switch to &lt;code&gt;cy.contains&lt;/code&gt;.</source>
          <target state="translated">您还可以尝试在给定文本字符串的情况下&lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; &lt;/a&gt;产生的结果。单击 &lt;code&gt;cy.get&lt;/code&gt; 并切换到 &lt;code&gt;cy.contains&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8a373a76aeb86a79de2ae0bb4ca8c8224407f553" translate="yes" xml:space="preserve">
          <source>You can also find your Record Key inside of the &lt;em&gt;Settings&lt;/em&gt; tab in the Test Runner.</source>
          <target state="translated">您也可以在&amp;ldquo;测试运行器&amp;rdquo;的&lt;em&gt;&amp;ldquo;设置&amp;rdquo;&lt;/em&gt;选项卡中找到记录键。</target>
        </trans-unit>
        <trans-unit id="e910c91c4d3eb331aa40a99585e3fc2bd1fa9355" translate="yes" xml:space="preserve">
          <source>You can also force Cypress to skip the installation of the binary application by setting &lt;code&gt;CYPRESS_INSTALL_BINARY=0&lt;/code&gt;. This could be useful if you want to prevent Cypress from downloading the Cypress binary at the time of &lt;code&gt;npm install&lt;/code&gt;.</source>
          <target state="translated">您还可以通过设置 &lt;code&gt;CYPRESS_INSTALL_BINARY=0&lt;/code&gt; 来强制Cypress跳过二进制应用程序的安装。如果要防止Cypress在 &lt;code&gt;npm install&lt;/code&gt; 时下载Cypress二进制文件，这可能很有用。</target>
        </trans-unit>
        <trans-unit id="75ca84eae6e1d1a4c235730f033d8eea601a161d" translate="yes" xml:space="preserve">
          <source>You can also force the action to be performed on the element regardless of whether the element is visible or not.</source>
          <target state="translated">你也可以强制对元素执行动作,而不管元素是否可见。</target>
        </trans-unit>
        <trans-unit id="f730e6f4a04e24f99b0c716d8058dbb4dc54d9a6" translate="yes" xml:space="preserve">
          <source>You can also include arbitrary event properties (e.g. &lt;code&gt;clientX&lt;/code&gt;, &lt;code&gt;shiftKey&lt;/code&gt;) and they will be attached to the event. Passing in coordinate arguments (&lt;code&gt;clientX&lt;/code&gt;, &lt;code&gt;pageX&lt;/code&gt;, etc) will override the position coordinates.</source>
          <target state="translated">您还可以包括任意事件属性（例如 &lt;code&gt;clientX&lt;/code&gt; ， &lt;code&gt;shiftKey&lt;/code&gt; ），它们将附加到事件中。传递坐标参数（ &lt;code&gt;clientX&lt;/code&gt; ， &lt;code&gt;pageX&lt;/code&gt; 等）将覆盖位置坐标。</target>
        </trans-unit>
        <trans-unit id="bcb856b9724a4fa7f847157ca2d79ac226ce0eef" translate="yes" xml:space="preserve">
          <source>You can also launch Chromium:</source>
          <target state="translated">你也可以启动Chromium。</target>
        </trans-unit>
        <trans-unit id="1356698e80248e43b88730c4463de0933166c7d0" translate="yes" xml:space="preserve">
          <source>You can also launch Electron headed:</source>
          <target state="translated">你也可以发射电子头。</target>
        </trans-unit>
        <trans-unit id="80f64a0cf8b0a4e119997575d9d04d4a84f146c8" translate="yes" xml:space="preserve">
          <source>You can also mix optional commands &lt;strong&gt;with&lt;/strong&gt; validations.</source>
          <target state="translated">您也可以将可选命令&lt;strong&gt;与&lt;/strong&gt;验证混合&lt;strong&gt;使用&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="66db6cce48bf4cb810b588cb860314482e87f08b" translate="yes" xml:space="preserve">
          <source>You can also modify the behavior of existing Cypress commands. This is useful to always set some defaults to avoid creating another command that ends up just using the original.</source>
          <target state="translated">你也可以修改现有赛普拉斯命令的行为。这很有用,可以随时设置一些默认值,以避免创建另一个命令,最后只是使用原来的命令。</target>
        </trans-unit>
        <trans-unit id="75594d2bee4091bac2ea16a5a5af2387d74a58f1" translate="yes" xml:space="preserve">
          <source>You can also modify the behavior of existing Cypress commands. This is useful to always set some defaults to avoid creating another command that ends up using the original.</source>
          <target state="translated">你也可以修改现有赛普拉斯命令的行为。这很有用,可以随时设置一些默认值,以避免创建另一个命令,最终使用原来的命令。</target>
        </trans-unit>
        <trans-unit id="4b2828e90e5427e97e52a6d3ef90e2e398374448" translate="yes" xml:space="preserve">
          <source>You can also override configuration values within your test using &lt;a href=&quot;../../api/cypress-api/config&quot;&gt;&lt;code&gt;Cypress.config()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">您还可以使用&lt;a href=&quot;../../api/cypress-api/config&quot;&gt; &lt;code&gt;Cypress.config()&lt;/code&gt; &lt;/a&gt;在测试中覆盖配置值。</target>
        </trans-unit>
        <trans-unit id="9669cc5529312653389cac780d96db9f8b09ddb8" translate="yes" xml:space="preserve">
          <source>You can also provide the username and password directly in the URL.</source>
          <target state="translated">您也可以直接在URL中提供用户名和密码。</target>
        </trans-unit>
        <trans-unit id="5abe4f73857a4182949b4618c4dbd119d106b410" translate="yes" xml:space="preserve">
          <source>You can also query DOM elements with &lt;code&gt;cy.$$&lt;/code&gt;. But &lt;code&gt;Cypress.$&lt;/code&gt; and &lt;code&gt;cy.$$&lt;/code&gt; are different.</source>
          <target state="translated">您还可以使用 &lt;code&gt;cy.$$&lt;/code&gt; 查询DOM元素。但是 &lt;code&gt;Cypress.$&lt;/code&gt; 和 &lt;code&gt;cy.$$&lt;/code&gt; 是不同的。</target>
        </trans-unit>
        <trans-unit id="1e7378309e90d3f3e6b7105692f196c77a53112f" translate="yes" xml:space="preserve">
          <source>You can also reference fixtures as strings directly in the response by passing an aliased fixture with &lt;code&gt;@&lt;/code&gt;.</source>
          <target state="translated">您还可以通过在别名中使用 &lt;code&gt;@&lt;/code&gt; 传递别名的灯具，直接在响应中将灯具作为字符串引用。</target>
        </trans-unit>
        <trans-unit id="0a258007e0713ab14f35b5bfe3308c438cbcbe78" translate="yes" xml:space="preserve">
          <source>You can also see all GitHub Integration enabled Cypress projects within your organizations &lt;strong&gt;Integrations&lt;/strong&gt; page:</source>
          <target state="translated">您还可以在您的组织&amp;ldquo; &lt;strong&gt;集成&amp;rdquo;&lt;/strong&gt;页面中查看所有启用了GitHub Integration的Cypress项目：</target>
        </trans-unit>
        <trans-unit id="fef34e4c0976f5f9d1128119e2293fcadfdd8c69" translate="yes" xml:space="preserve">
          <source>You can also see verbose Cypress logs when running the Test Runner binary</source>
          <target state="translated">当运行Test Runner二进制时,你也可以看到详细的Cypress日志。</target>
        </trans-unit>
        <trans-unit id="0b61b0b140b27978c66084948f860f083e22cd45" translate="yes" xml:space="preserve">
          <source>You can also set &lt;code&gt;NO_PROXY&lt;/code&gt; to bypass the proxy for certain domains (by default, only &lt;code&gt;localhost&lt;/code&gt; will be bypassed):</source>
          <target state="translated">您还可以设置 &lt;code&gt;NO_PROXY&lt;/code&gt; 绕过某些域的代理（默认情况下，仅绕过 &lt;code&gt;localhost&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="b1df080149da01d5047d265f6b4c4503ef3fd2f3" translate="yes" xml:space="preserve">
          <source>You can also set all &lt;code&gt;cy.visit()&lt;/code&gt; commands&amp;rsquo; &lt;code&gt;pageLoadTimeout&lt;/code&gt; and &lt;code&gt;baseUrl&lt;/code&gt; globally in &lt;a href=&quot;../../guides/references/configuration&quot;&gt;configuration&lt;/a&gt;.</source>
          <target state="translated">您还可以设置所有 &lt;code&gt;cy.visit()&lt;/code&gt; 命令 &lt;code&gt;pageLoadTimeout&lt;/code&gt; 和 &lt;code&gt;baseUrl&lt;/code&gt; 在全球范围内&lt;a href=&quot;../../guides/references/configuration&quot;&gt;配置&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7dc235e2dd692f50861bd0d75f7a6625c19e9add" translate="yes" xml:space="preserve">
          <source>You can also set all &lt;code&gt;cy.visit()&lt;/code&gt; commands&amp;rsquo; &lt;code&gt;pageLoadTimeout&lt;/code&gt; and &lt;code&gt;baseUrl&lt;/code&gt; globally in &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html&quot;&gt;configuration&lt;/a&gt;.</source>
          <target state="translated">您还可以设置所有 &lt;code&gt;cy.visit()&lt;/code&gt; 命令 &lt;code&gt;pageLoadTimeout&lt;/code&gt; 和 &lt;code&gt;baseUrl&lt;/code&gt; 在全球范围内&lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html&quot;&gt;配置&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ddc41b9156c6f191e37a3148278eb23cb277f6a3" translate="yes" xml:space="preserve">
          <source>You can also set custom environment variables for use in your tests. These enable your code to reference dynamic values.</source>
          <target state="translated">您还可以设置自定义环境变量,以便在测试中使用。这些变量使你的代码可以引用动态值。</target>
        </trans-unit>
        <trans-unit id="d1107e80041395e278d9bfec399d396819951db0" translate="yes" xml:space="preserve">
          <source>You can also set options for &lt;code&gt;cy.request()&lt;/code&gt;&amp;lsquo;s &lt;code&gt;baseUrl&lt;/code&gt; and &lt;code&gt;responseTimeout&lt;/code&gt; globally in &lt;a href=&quot;../../guides/references/configuration&quot;&gt;configuration&lt;/a&gt;.</source>
          <target state="translated">您还可以设置选项 &lt;code&gt;cy.request()&lt;/code&gt; 的 &lt;code&gt;baseUrl&lt;/code&gt; 和 &lt;code&gt;responseTimeout&lt;/code&gt; 在全球范围内&lt;a href=&quot;../../guides/references/configuration&quot;&gt;配置&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="02986901c50070bde7b0ef61de6ea21ff7de2d19" translate="yes" xml:space="preserve">
          <source>You can also set options for &lt;code&gt;cy.request()&lt;/code&gt;&amp;lsquo;s &lt;code&gt;baseUrl&lt;/code&gt; and &lt;code&gt;responseTimeout&lt;/code&gt; globally in &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html&quot;&gt;configuration&lt;/a&gt;.</source>
          <target state="translated">您还可以设置选项 &lt;code&gt;cy.request()&lt;/code&gt; 的 &lt;code&gt;baseUrl&lt;/code&gt; 和 &lt;code&gt;responseTimeout&lt;/code&gt; 在全球范围内&lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html&quot;&gt;配置&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b8168fc02c79572a79ba1ac091a0b3699434adf2" translate="yes" xml:space="preserve">
          <source>You can also set options for all &lt;a href=&quot;wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt;&amp;lsquo;s &lt;code&gt;requestTimeout&lt;/code&gt; and &lt;code&gt;responseTimeout&lt;/code&gt; globally in &lt;a href=&quot;../../guides/references/configuration&quot;&gt;configuration&lt;/a&gt; to control how long to wait for the request and response of a supplied route.</source>
          <target state="translated">您还可以在&lt;a href=&quot;../../guides/references/configuration&quot;&gt;配置中&lt;/a&gt;全局设置所有&lt;a href=&quot;wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;requestTimeout&lt;/code&gt; 和 &lt;code&gt;responseTimeout&lt;/code&gt; 的选项，以控制等待所提供路由的请求和响应的时间。</target>
        </trans-unit>
        <trans-unit id="7ab8e26558101209472234cc17984c08a4c7c5ac" translate="yes" xml:space="preserve">
          <source>You can also set options for all &lt;a href=&quot;wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt;&amp;lsquo;s &lt;code&gt;requestTimeout&lt;/code&gt; and &lt;code&gt;responseTimeout&lt;/code&gt; globally in &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html&quot;&gt;configuration&lt;/a&gt; to control how long to wait for the request and response of a supplied route.</source>
          <target state="translated">您还可以在&lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html&quot;&gt;配置中&lt;/a&gt;全局设置所有&lt;a href=&quot;wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;requestTimeout&lt;/code&gt; 和 &lt;code&gt;responseTimeout&lt;/code&gt; 的选项，以控制等待所提供路由的请求和响应的时间。</target>
        </trans-unit>
        <trans-unit id="fc19a9813ee5d74ccec080f9e2871dfc2cf77339" translate="yes" xml:space="preserve">
          <source>You can also set proxy environment variables before running Cypress to override the Windows registry. This is also the only way to define a proxy for &lt;code&gt;cypress install&lt;/code&gt;. In Command Prompt, defining the required environment variables looks like this:</source>
          <target state="translated">您还可以在运行赛普拉斯以覆盖Windows注册表之前设置代理环境变量。这也是为 &lt;code&gt;cypress install&lt;/code&gt; 定义代理的唯一方法。在命令提示符中，定义所需的环境变量如下所示：</target>
        </trans-unit>
        <trans-unit id="3eba9eaea57ee86eda61d39c0cb20904fda8fa68" translate="yes" xml:space="preserve">
          <source>You can also set the timeout globally via the &lt;a href=&quot;../references/configuration#Timeouts&quot;&gt;configuration setting: &lt;code&gt;defaultCommandTimeout&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">您还可以通过以下&lt;a href=&quot;../references/configuration#Timeouts&quot;&gt;配置设置 &lt;code&gt;defaultCommandTimeout&lt;/code&gt; &lt;/a&gt;全局设置超时：defaultCommandTimeout。</target>
        </trans-unit>
        <trans-unit id="b87884bf39c14ad453d04ea15ab0971d7774f421" translate="yes" xml:space="preserve">
          <source>You can also supply the &lt;code&gt;--browser&lt;/code&gt; command line argument to launch a browser from a known filesystem path to bypass browser auto detection. &lt;a href=&quot;launching-browsers#Launching-by-a-path&quot;&gt;See &amp;lsquo;Launching Browsers&amp;rsquo; for more information&lt;/a&gt;</source>
          <target state="translated">您还可以提供 &lt;code&gt;--browser&lt;/code&gt; 命令行参数，以从已知文件系统路径启动浏览器以绕过浏览器自动检测。&lt;a href=&quot;launching-browsers#Launching-by-a-path&quot;&gt;有关更多信息，请参见&amp;ldquo;启动浏览器&amp;rdquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cc1b52c24e86b2b4be396650015de0959d5fcba4" translate="yes" xml:space="preserve">
          <source>You can also turn off our checks for animations with the configuration option &lt;a href=&quot;../references/configuration#Animations&quot;&gt;&lt;code&gt;waitForAnimations&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">您还可以使用配置选项&lt;a href=&quot;../references/configuration#Animations&quot;&gt; &lt;code&gt;waitForAnimations&lt;/code&gt; &lt;/a&gt;关闭对动画的检查。</target>
        </trans-unit>
        <trans-unit id="e92d91cd084ad1da7c15131810b4d1177ff17f71" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;../guides/environment-variables&quot;&gt;environment variables&lt;/a&gt; to override configuration values. This is especially useful in &lt;a href=&quot;../guides/continuous-integration&quot;&gt;Continuous Integration&lt;/a&gt; or when working locally. This gives you the ability to change configuration options without modifying any code or build scripts.</source>
          <target state="translated">您还可以使用&lt;a href=&quot;../guides/environment-variables&quot;&gt;环境变量&lt;/a&gt;来覆盖配置值。这在&lt;a href=&quot;../guides/continuous-integration&quot;&gt;持续集成中&lt;/a&gt;或在本地工作时特别有用。这使您能够更改配置选项，而无需修改任何代码或构建脚本。</target>
        </trans-unit>
        <trans-unit id="b7b8f4d45319dee07869a91ac5b121bf6ea0e232" translate="yes" xml:space="preserve">
          <source>You can also use a function as a response which enables you to add logic surrounding the response.</source>
          <target state="translated">你也可以使用一个函数作为响应,使你能够在响应周围添加逻辑。</target>
        </trans-unit>
        <trans-unit id="5bc5238e147f3b03f3c1be8bbcd3115ea7a8e3dd" translate="yes" xml:space="preserve">
          <source>You can also use key combinations during &lt;a href=&quot;click#Click-with-key-combinations&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;rightclick#Right-click-with-key-combinations&quot;&gt;&lt;code&gt;.rightclick()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;dblclick#Double-click-with-key-combinations&quot;&gt;&lt;code&gt;.dblclick()&lt;/code&gt;&lt;/a&gt; through their options. See each doc for more information.</source>
          <target state="translated">您也可以在使用组合键&lt;a href=&quot;click#Click-with-key-combinations&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;rightclick#Right-click-with-key-combinations&quot;&gt; &lt;code&gt;.rightclick()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;dblclick#Double-click-with-key-combinations&quot;&gt; &lt;code&gt;.dblclick()&lt;/code&gt; &lt;/a&gt;通过他们的选择。有关更多信息，请参见每个文档。</target>
        </trans-unit>
        <trans-unit id="58faa034e7c87edbc2c65294b4a153b856c7ee56" translate="yes" xml:space="preserve">
          <source>You can also use key combinations during &lt;a href=&quot;type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt;. This offers options to hold down keys across multiple commands. See &lt;a href=&quot;type#Key-Combinations&quot;&gt;Key Combinations&lt;/a&gt; for more information.</source>
          <target state="translated">您也可以在&lt;a href=&quot;type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;期间使用组合键。这提供了按住多个命令中的键的选项。有关更多信息，请参见&lt;a href=&quot;type#Key-Combinations&quot;&gt;键组合&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="22c469c8dc57a8e8c5ed37eef09746b7a8446a73" translate="yes" xml:space="preserve">
          <source>You can alternatively require and run Cypress as a node module using our &lt;a href=&quot;module-api&quot;&gt;Module API&lt;/a&gt;.</source>
          <target state="translated">您也可以使用我们的&lt;a href=&quot;module-api&quot;&gt;模块API&lt;/a&gt;来要求赛普拉斯作为节点模块运行。</target>
        </trans-unit>
        <trans-unit id="3175a2b4f4549de4e33942286466a2a4dc1e48b7" translate="yes" xml:space="preserve">
          <source>You can assert about the underlying XHR object.</source>
          <target state="translated">你可以对底层XHR对象进行断言。</target>
        </trans-unit>
        <trans-unit id="8ffc92d6f9ac91733bcc1c82ea9f5a8866adcdb0" translate="yes" xml:space="preserve">
          <source>You can assert that a file does not exist like so:</source>
          <target state="translated">你可以这样断言一个文件不存在。</target>
        </trans-unit>
        <trans-unit id="26ad54b282d0eb9740f3007c306d5f45c93589c8" translate="yes" xml:space="preserve">
          <source>You can avoid this check in the future by passing an ID to the &lt;a href=&quot;../guides/command-line#cypress-run-ci-build-id-lt-id-gt&quot;&gt;&lt;code&gt;--ci-build-id&lt;/code&gt;&lt;/a&gt; flag manually.</source>
          <target state="translated">您可以通过将ID 手动传递给&lt;a href=&quot;../guides/command-line#cypress-run-ci-build-id-lt-id-gt&quot;&gt; &lt;code&gt;--ci-build-id&lt;/code&gt; &lt;/a&gt;标志来避免将来进行此检查。</target>
        </trans-unit>
        <trans-unit id="b31e2a27d983a97c552cc374237cd9d7941ccd4f" translate="yes" xml:space="preserve">
          <source>You can call &lt;code&gt;cy.clock()&lt;/code&gt; again for this purpose later in a chain if necessary.</source>
          <target state="translated">&lt;code&gt;cy.clock()&lt;/code&gt; 您可以稍后在链中再次为此目的再次调用cy.clock（）。</target>
        </trans-unit>
        <trans-unit id="12d79ac1293246ea41fab1f37fa66cd279225314" translate="yes" xml:space="preserve">
          <source>You can chain &lt;a href=&quot;its&quot;&gt;&lt;code&gt;.its()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt; to assert against request/response cycles:</source>
          <target state="translated">您可以链接&lt;a href=&quot;should&quot;&gt; &lt;code&gt;.should()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;its&quot;&gt; &lt;code&gt;.its()&lt;/code&gt; &lt;/a&gt;和.should（）来针对请求/响应周期进行断言：</target>
        </trans-unit>
        <trans-unit id="26e9a164d5e9c68e547303a1f613766d10ea1418" translate="yes" xml:space="preserve">
          <source>You can chain a &lt;code&gt;.log(bool)&lt;/code&gt; method to disable &lt;code&gt;cy.stub()&lt;/code&gt; calls from being shown in the Command Log. This may be useful when your stubs are called an excessive number of times.</source>
          <target state="translated">您可以链接 &lt;code&gt;.log(bool)&lt;/code&gt; 方法以禁止 &lt;code&gt;cy.stub()&lt;/code&gt; 调用显示在命令日志中。当存根被调用过多时，这可能会很有用。</target>
        </trans-unit>
        <trans-unit id="6e76c197da2f401b90598e6d5b3657441656fa45" translate="yes" xml:space="preserve">
          <source>You can chain multiple assertions together using &lt;a href=&quot;../../api/commands/and&quot;&gt;&lt;code&gt;.and()&lt;/code&gt;&lt;/a&gt;, which is just another name for &lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt; that makes things more readable:</source>
          <target state="translated">您可以使用&lt;a href=&quot;../../api/commands/and&quot;&gt; &lt;code&gt;.and()&lt;/code&gt; 将&lt;/a&gt;多个断言链接在一起，这只是&lt;a href=&quot;../../api/commands/should&quot;&gt; &lt;code&gt;.should()&lt;/code&gt; 的&lt;/a&gt;另一个名称，它使事情更具可读性：</target>
        </trans-unit>
        <trans-unit id="324978bd59726ff9b6daf19dbb7623b404a04f96" translate="yes" xml:space="preserve">
          <source>You can change anything in the JavaScript code:</source>
          <target state="translated">你可以在JavaScript代码中改变任何东西。</target>
        </trans-unit>
        <trans-unit id="7401ba441fe83bcdec7dc3f48a153e72de720fac" translate="yes" xml:space="preserve">
          <source>You can change the size of the viewport height and width for the remainder of the tests by setting the new values for &lt;code&gt;viewportHeight&lt;/code&gt; or &lt;code&gt;viewportWidth&lt;/code&gt; within &lt;a href=&quot;../cypress-api/config&quot;&gt;&lt;code&gt;Cypress.config()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">您可以通过在&lt;a href=&quot;../cypress-api/config&quot;&gt; &lt;code&gt;Cypress.config()&lt;/code&gt; 中&lt;/a&gt;设置 &lt;code&gt;viewportHeight&lt;/code&gt; 或 &lt;code&gt;viewportWidth&lt;/code&gt; 的新值来更改其余测试的视口高度和宽度的大小。</target>
        </trans-unit>
        <trans-unit id="9d21c8345ab680ab31b60b1a58d273194bcf7fe6" translate="yes" xml:space="preserve">
          <source>You can change the timeout of &lt;code&gt;cy.exec()&lt;/code&gt; for the remainder of the tests by setting the new values for &lt;code&gt;execTimeout&lt;/code&gt; within &lt;a href=&quot;../cypress-api/config&quot;&gt;&lt;code&gt;Cypress.config()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">您可以更改的超时 &lt;code&gt;cy.exec()&lt;/code&gt; 通过设置新的值作为测试的剩余部分 &lt;code&gt;execTimeout&lt;/code&gt; 内&lt;a href=&quot;../cypress-api/config&quot;&gt; &lt;code&gt;Cypress.config()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b11989f59235e70ad780236eb17ece99f0578676" translate="yes" xml:space="preserve">
          <source>You can change the timeout of &lt;code&gt;cy.task()&lt;/code&gt; for the remainder of the tests by setting the new values for &lt;code&gt;taskTimeout&lt;/code&gt; within &lt;a href=&quot;../cypress-api/config&quot;&gt;&lt;code&gt;Cypress.config()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">您可以更改的超时 &lt;code&gt;cy.task()&lt;/code&gt; 通过设置新的值作为测试的剩余部分 &lt;code&gt;taskTimeout&lt;/code&gt; 内&lt;a href=&quot;../cypress-api/config&quot;&gt; &lt;code&gt;Cypress.config()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="acd9e8848201a5377bfae9ccff12e3e96d52b109" translate="yes" xml:space="preserve">
          <source>You can check the cookie existence without comparing any of its properties</source>
          <target state="translated">您可以在不比较任何属性的情况下检查cookie的存在。</target>
        </trans-unit>
        <trans-unit id="16913b3bed889723969c72a8d71314dec1332362" translate="yes" xml:space="preserve">
          <source>You can configure CI to use any reporter built into Mocha, and additionally we are adding JUnit XML output (for Jenkins) as a built in default.</source>
          <target state="translated">你可以配置CI来使用Mocha内置的任何报告器,另外我们还增加了JUnit XML输出(用于Jenkins)作为内置的默认值。</target>
        </trans-unit>
        <trans-unit id="46bd564633cf1e7708d67ea672dfa5b61b28793d" translate="yes" xml:space="preserve">
          <source>You can configure the &lt;code&gt;cy.exec()&lt;/code&gt; timeout within a suite or test by passing the new configuration value within the &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Test-Configuration&quot;&gt;test configuration&lt;/a&gt;.</source>
          <target state="translated">您可以在套件中配置 &lt;code&gt;cy.exec()&lt;/code&gt; 超时，也可以通过在&lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Test-Configuration&quot;&gt;测试配置中&lt;/a&gt;传递新的配置值来进行测试。</target>
        </trans-unit>
        <trans-unit id="d2b1845f6c62f21887d7353579615093ce5357d3" translate="yes" xml:space="preserve">
          <source>You can configure the &lt;code&gt;cy.task()&lt;/code&gt; timeout within a suite or test by passing the new configuration value within the &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Test-Configuration&quot;&gt;test configuration&lt;/a&gt;.</source>
          <target state="translated">您可以在套件中配置 &lt;code&gt;cy.task()&lt;/code&gt; 超时，也可以通过在&lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Test-Configuration&quot;&gt;测试配置中&lt;/a&gt;传递新的配置值来进行测试。</target>
        </trans-unit>
        <trans-unit id="ceafdf5691ad9fe8b2bbfa8d6d2b9d9b4fed3b3c" translate="yes" xml:space="preserve">
          <source>You can configure the size of the viewport height and width within a suite or test by passing the new configuration value within the &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Test-Configuration&quot;&gt;test configuration&lt;/a&gt;.</source>
          <target state="translated">您可以在套件中配置视口高度和宽度的大小，也可以通过在&lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Test-Configuration&quot;&gt;测试配置中&lt;/a&gt;传递新的配置值来进行测试。</target>
        </trans-unit>
        <trans-unit id="44522a700127f81cfa8d4cd7a580fcabb332d6fb" translate="yes" xml:space="preserve">
          <source>You can create an organization from within the &lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;Dashboard Service&lt;/a&gt; by going to the &lt;strong&gt;Organizations&lt;/strong&gt; tab and clicking &lt;strong&gt; Add Organization&lt;/strong&gt;.</source>
          <target state="translated">您可以在&lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;Dashboard Service中&lt;/a&gt;通过转到&amp;ldquo; &lt;strong&gt;组织&amp;rdquo;&lt;/strong&gt;选项卡并单击&amp;ldquo; &lt;strong&gt;添加组织&amp;rdquo;&lt;/strong&gt;来&lt;strong&gt;创建组织&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="a06ded0a0c44a1f5754f79079f79ec07319016cd" translate="yes" xml:space="preserve">
          <source>You can create multiple Record Keys for a project, or delete existing ones from our &lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;Dashboard&lt;/a&gt;.</source>
          <target state="translated">您可以为一个项目创建多个记录键，或者从我们的&lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;仪表板中&lt;/a&gt;删除现有的记录键。</target>
        </trans-unit>
        <trans-unit id="5a2ce4ef56a8ea5d69610b02eb11bc54412ee2fb" translate="yes" xml:space="preserve">
          <source>You can create your own &lt;code&gt;cypress.env.json&lt;/code&gt; file that Cypress will automatically check. Values in here will overwrite conflicting environment variables in &lt;code&gt;cypress.json&lt;/code&gt;.</source>
          <target state="translated">您可以创建自己的 &lt;code&gt;cypress.env.json&lt;/code&gt; 文件，赛普拉斯将自动检查该文件。此处的值将覆盖 &lt;code&gt;cypress.json&lt;/code&gt; 中有冲突的环境变量。</target>
        </trans-unit>
        <trans-unit id="6523f3351366b7ce61e38eeff804ad2055d0c5d9" translate="yes" xml:space="preserve">
          <source>You can define your behaviors in a &lt;code&gt;beforeEach&lt;/code&gt; within any of the &lt;code&gt;cypress/support&lt;/code&gt; files:</source>
          <target state="translated">您可以在任何 &lt;code&gt;cypress/support&lt;/code&gt; 文件中的 &lt;code&gt;beforeEach&lt;/code&gt; 中定义您的行为：</target>
        </trans-unit>
        <trans-unit id="59b303eb868263da303c6fbda4bfbb73b3116eef" translate="yes" xml:space="preserve">
          <source>You can delete organizations that you own as long as they do not have any projects in the organization. You must first transfer ownership of your projects to another organization before you can delete the organization.</source>
          <target state="translated">您可以删除您拥有的组织,只要该组织中没有任何项目。在删除组织之前,您必须先将项目的所有权转移给另一个组织。</target>
        </trans-unit>
        <trans-unit id="7bba89ff9d30a5268594482d2fa9607fd9e3fe12" translate="yes" xml:space="preserve">
          <source>You can delete projects you own. This will also delete all of their recorded test runs. Deleting projects can only be done from the &lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;Dashboard Service&lt;/a&gt;.</source>
          <target state="translated">您可以删除自己拥有的项目。这还将删除其所有记录的测试运行。只能通过&lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;Dashboard Service&lt;/a&gt;删除项目。</target>
        </trans-unit>
        <trans-unit id="2293186d2954a26e38fd4a9835d61aa09945a4b8" translate="yes" xml:space="preserve">
          <source>You can delete the recorded video for a spec. This will skip the compression and uploading of the video when recording to the Dashboard.</source>
          <target state="translated">您可以删除某个规格的录制视频。这将跳过视频的压缩和上传,当录制到仪表板时。</target>
        </trans-unit>
        <trans-unit id="79831bc7512a1e1c26a421f007ce979847bf0a7c" translate="yes" xml:space="preserve">
          <source>You can describe the method signature for your custom command, allowing IntelliSense to show helpful documentation. See the &lt;a href=&quot;https://github.com/cypress-io/cypress-example-todomvc#cypress-intellisense&quot;&gt;&lt;code&gt;cypress-example-todomvc&lt;/code&gt;&lt;/a&gt; repository for a working example.</source>
          <target state="translated">您可以为您的自定义命令描述方法签名，从而允许IntelliSense显示有用的文档。有关工作示例，请参见&lt;a href=&quot;https://github.com/cypress-io/cypress-example-todomvc#cypress-intellisense&quot;&gt; &lt;code&gt;cypress-example-todomvc&lt;/code&gt; &lt;/a&gt;存储库。</target>
        </trans-unit>
        <trans-unit id="643f7e328ecedd1f5d98bbf5dff347818789df5e" translate="yes" xml:space="preserve">
          <source>You can disable all stubbing and its effects and restore it to the default behavior as a test is running. By setting &lt;code&gt;enable&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;, this disables stubbing routes and XHR&amp;rsquo;s will no longer show up as (XHR Stub) in the Command Log. However, routing aliases can continue to be used and will continue to match requests, but will not affect responses.</source>
          <target state="translated">您可以禁用所有存根及其影响，并在测试运行时将其恢复为默认行为。通过将 &lt;code&gt;enable&lt;/code&gt; 设置为 &lt;code&gt;false&lt;/code&gt; ，这将禁用存根路由，并且XHR将不再在命令日志中显示为（XHR Stub）。但是，路由别名可以继续使用，并且将继续匹配请求，但不会影响响应。</target>
        </trans-unit>
        <trans-unit id="68d2cd188f36f701d8b251e7a7fbb2dcb2457a36" translate="yes" xml:space="preserve">
          <source>You can do this in many ways and here is a simple example of using an HTTP server to act as the client and exposing a REST interface that enables us to control it.</source>
          <target state="translated">你可以用很多方法来实现,这里有一个简单的例子,使用HTTP服务器作为客户端,并暴露一个REST接口,使我们能够控制它。</target>
        </trans-unit>
        <trans-unit id="7b736df01753bd3372efae350c20a5c5dadcdfbb" translate="yes" xml:space="preserve">
          <source>You can drill into nested properties by using &lt;em&gt;dot notation&lt;/em&gt;.</source>
          <target state="translated">您可以使用&lt;em&gt;点表示法&lt;/em&gt;深入嵌套属性。</target>
        </trans-unit>
        <trans-unit id="1228304b4cc01b66a784eeb63078c8726421e77c" translate="yes" xml:space="preserve">
          <source>You can dynamically generate tests using JavaScript.</source>
          <target state="translated">你可以使用JavaScript动态生成测试。</target>
        </trans-unit>
        <trans-unit id="9a2e37cb8e37e96e3c4243fd4554f774483b5cf1" translate="yes" xml:space="preserve">
          <source>You can edit the number of seconds that a run will wait for new groups to join before transitioning to &amp;lsquo;completed&amp;rsquo;. See our &lt;a href=&quot;../guides/parallelization#Run-completion-delay&quot;&gt;parallelization guide&lt;/a&gt; to learn more.</source>
          <target state="translated">您可以编辑跑步在过渡到&amp;ldquo;已完成&amp;rdquo;之前等待新组加入的秒数。请参阅我们的&lt;a href=&quot;../guides/parallelization#Run-completion-delay&quot;&gt;并行化指南&lt;/a&gt;以了解更多信息。</target>
        </trans-unit>
        <trans-unit id="bf9c4659f323040b517229eb77925764c5ae5536" translate="yes" xml:space="preserve">
          <source>You can even add an assertion to the test itself to ensure the URL is matched</source>
          <target state="translated">你甚至可以给测试本身添加一个断言,以确保URL是匹配的</target>
        </trans-unit>
        <trans-unit id="8dab3e9ab7530834286664395fc341ebb044a056" translate="yes" xml:space="preserve">
          <source>You can even throw your own errors from the callback function.</source>
          <target state="translated">你甚至可以从回调函数中抛出自己的错误。</target>
        </trans-unit>
        <trans-unit id="41b32dfc16a036c0a0a54153f50cbd0df7ee3e80" translate="yes" xml:space="preserve">
          <source>You can explore the above combined full stack coverage report at the &lt;a href=&quot;https://coveralls.io/github/cypress-io/cypress-example-realworld&quot;&gt;coveralls.io/github/cypress-io/cypress-example-realworld&lt;/a&gt; dashboard.</source>
          <target state="translated">您可以在&lt;a href=&quot;https://coveralls.io/github/cypress-io/cypress-example-realworld&quot;&gt;coveralls.io/github/cypress-io/cypress-example-realworld&lt;/a&gt;仪表板中浏览以上组合的完整堆栈覆盖率报告。</target>
        </trans-unit>
        <trans-unit id="0f0568ec7f2fe4ea42d6839ef295021cdeb33705" translate="yes" xml:space="preserve">
          <source>You can find a simple example with custom commands written in TypeScript in &lt;a href=&quot;https://github.com/omerose/cypress-support&quot;&gt;omerose/cypress-support&lt;/a&gt; repo.</source>
          <target state="translated">您可以在&lt;a href=&quot;https://github.com/omerose/cypress-support&quot;&gt;omerose / cypress-support仓库中&lt;/a&gt;找到用TypeScript编写的自定义命令的简单示例。</target>
        </trans-unit>
        <trans-unit id="d9a7f4868071ee5c6983b82ebcc25855d5856aa0" translate="yes" xml:space="preserve">
          <source>You can find an example of Jest and Cypress installed in the same project using a separate &lt;code&gt;tsconfig.json&lt;/code&gt; file in the &lt;a href=&quot;https://github.com/cypress-io/cypress-and-jest-typescript-example&quot;&gt;cypress-io/cypress-and-jest-typescript-example&lt;/a&gt; repo.</source>
          <target state="translated">您可以在&lt;a href=&quot;https://github.com/cypress-io/cypress-and-jest-typescript-example&quot;&gt;cypress-io / cypress-and-jest- &lt;/a&gt; &lt;code&gt;tsconfig.json&lt;/code&gt; - example存储库中使用单独的tsconfig.json文件找到在同一项目中安装的Jest和Cypress 的示例。</target>
        </trans-unit>
        <trans-unit id="0d61b24dcafb9772bac5e241c51bcc0893b73bb8" translate="yes" xml:space="preserve">
          <source>You can find full examples showing different code coverage setups in the following repositories:</source>
          <target state="translated">您可以在以下资源库中找到显示不同代码覆盖设置的完整示例。</target>
        </trans-unit>
        <trans-unit id="0632d008fb07530217cff8f54fa087f4afc85cdd" translate="yes" xml:space="preserve">
          <source>You can find multiple examples at &lt;a href=&quot;https://github.com/cypress-io/circleci-orb/blob/master/docs/examples.md&quot;&gt;our orb examples page&lt;/a&gt; and in the &lt;a href=&quot;https://github.com/cypress-io/cypress-example-circleci-orb&quot;&gt;cypress-example-circleci-orb&lt;/a&gt; project.</source>
          <target state="translated">您可以在&lt;a href=&quot;https://github.com/cypress-io/circleci-orb/blob/master/docs/examples.md&quot;&gt;我们的orb示例页面&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress-example-circleci-orb&quot;&gt;cypress-example-circleci-orb&lt;/a&gt;项目中找到多个示例。</target>
        </trans-unit>
        <trans-unit id="23e457cbde83a98743dd9d4d6026fffc11caa2e5" translate="yes" xml:space="preserve">
          <source>You can find the current Node version we use &lt;a href=&quot;https://github.com/cypress-io/cypress/blob/master/.node-version&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">您可以在&lt;a href=&quot;https://github.com/cypress-io/cypress/blob/master/.node-version&quot;&gt;此处&lt;/a&gt;找到当前使用的Node版本。</target>
        </trans-unit>
        <trans-unit id="f6e1f33debb1fdf0f1398f1641570a646f589f02" translate="yes" xml:space="preserve">
          <source>You can find the current Node version we use when the &lt;code&gt;nodeVersion&lt;/code&gt; is set to the default &lt;code&gt;bundled&lt;/code&gt;&lt;a href=&quot;https://github.com/cypress-io/cypress/blob/master/.node-version&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">当将 &lt;code&gt;nodeVersion&lt;/code&gt; 设置为&lt;a href=&quot;https://github.com/cypress-io/cypress/blob/master/.node-version&quot;&gt;此处&lt;/a&gt; &lt;code&gt;bundled&lt;/code&gt; 的默认值时，您可以找到我们使用的当前Node版本。</target>
        </trans-unit>
        <trans-unit id="6ce85bc1af7afb7a0ccc8d0454399d537be9ea00" translate="yes" xml:space="preserve">
          <source>You can force requests that do &lt;em&gt;not&lt;/em&gt; match a route to return a &lt;code&gt;404&lt;/code&gt; status and an empty body by passing an option to the &lt;code&gt;cy.server()&lt;/code&gt; like so:</source>
          <target state="translated">您可以通过将选项传递给 &lt;code&gt;cy.server()&lt;/code&gt; 来强制&lt;em&gt;不&lt;/em&gt;匹配路由的请求返回 &lt;code&gt;404&lt;/code&gt; 状态和空主体，如下所示：</target>
        </trans-unit>
        <trans-unit id="bd4304e731086e33e0e57a31115a58826e9ee3f7" translate="yes" xml:space="preserve">
          <source>You can get details about any given screenshot and manipulate it after it has been written to disk with the &lt;a href=&quot;../plugins/after-screenshot-api&quot;&gt;&lt;code&gt;after:screenshot&lt;/code&gt; plugin event&lt;/a&gt;.</source>
          <target state="translated">您可以获取有关任何给定屏幕截图的详细信息，并使用&lt;a href=&quot;../plugins/after-screenshot-api&quot;&gt; &lt;code&gt;after:screenshot&lt;/code&gt; plugin event&lt;/a&gt;将其写入磁盘后对其进行操作。</target>
        </trans-unit>
        <trans-unit id="f81ceee5fe45ac0a04018259c3f786dd7757967a" translate="yes" xml:space="preserve">
          <source>You can get your project&amp;rsquo;s record key by locating it in your settings tab in the Test Runner or in the &lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;Dashboard Service&lt;/a&gt;.</source>
          <target state="translated">您可以通过在&amp;ldquo;测试运行器&amp;rdquo;或&amp;ldquo; &lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;仪表板服务&amp;rdquo;&lt;/a&gt;中的&amp;ldquo;设置&amp;rdquo;选项卡中找到项目的记录键来获取它。</target>
        </trans-unit>
        <trans-unit id="ac560b0641950b1b1186f9110e022b90f0ac5546" translate="yes" xml:space="preserve">
          <source>You can globally disable animation error checking, or increase the threshold by modifying the &lt;a href=&quot;configuration&quot;&gt;configuration&lt;/a&gt; in your &lt;a href=&quot;configuration&quot;&gt;configuration&lt;/a&gt;.</source>
          <target state="translated">您可以全局禁用动画错误检查，或通过修改&lt;a href=&quot;configuration&quot;&gt;配置&lt;/a&gt;中的&lt;a href=&quot;configuration&quot;&gt;配置&lt;/a&gt;来增加阈值。</target>
        </trans-unit>
        <trans-unit id="e42e77e262790c44d05760ae6ba937b2ca2810ac" translate="yes" xml:space="preserve">
          <source>You can however send your own video file for testing by passing a Chrome command line switch pointing to a video file.</source>
          <target state="translated">然而,您可以通过传递指向视频文件的Chrome命令行开关来发送自己的视频文件进行测试。</target>
        </trans-unit>
        <trans-unit id="353e67490c1bb57c25a41de380f16f7d5d3e8bf0" translate="yes" xml:space="preserve">
          <source>You can ignore Cypress&amp;rsquo; default behavior of checking that the element is visible, clickable and not disabled by setting &lt;code&gt;force&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; in the options.</source>
          <target state="translated">您可以通过在选项中将 &lt;code&gt;force&lt;/code&gt; 设置为 &lt;code&gt;true&lt;/code&gt; 来忽略Cypress的默认行为，即检查元素是否可见，可单击和未被禁用。</target>
        </trans-unit>
        <trans-unit id="4d243b7020b63c577424f535262ee8cfa58047b4" translate="yes" xml:space="preserve">
          <source>You can include the plugin &lt;a href=&quot;https://github.com/bahmutov/cypress-failed-log&quot;&gt;cypress-failed-log&lt;/a&gt; in your tests. This plugin writes the list of Cypress commands to the terminal as well as a JSON file if a test fails.</source>
          <target state="translated">您可以在测试中包含插件&lt;a href=&quot;https://github.com/bahmutov/cypress-failed-log&quot;&gt;cypress-failed-log&lt;/a&gt;。如果测试失败，此插件会将Cypress命令列表以及JSON文件写入终端。</target>
        </trans-unit>
        <trans-unit id="4f1d30e37722e1b89ae1d58cf72a5a09f71edab6" translate="yes" xml:space="preserve">
          <source>You can increase the time allowed to execute the command, although &lt;em&gt;we don&amp;rsquo;t recommend executing commands that take a long time to exit&lt;/em&gt;.</source>
          <target state="translated">您可以增加执行命令的时间，尽管&lt;em&gt;我们不建议您执行需要很长时间才能退出的命令&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="82e453d00f6b5098c7e698201618716ea58d6a03" translate="yes" xml:space="preserve">
          <source>You can increase the time allowed to execute the task, although &lt;em&gt;we do not recommend executing tasks that take a long time to exit&lt;/em&gt;.</source>
          <target state="translated">您可以增加允许执行任务的时间，尽管&lt;em&gt;我们不建议您执行需要很长时间才能退出的任务&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="de3d1f1d6559c8bf05d9a09a07ef4ad28cc7914f" translate="yes" xml:space="preserve">
          <source>You can install any published plugin using NPM:</source>
          <target state="translated">你可以使用NPM安装任何发布的插件。</target>
        </trans-unit>
        <trans-unit id="d95865b257586d6d508c100cd98a91fa2af8be80" translate="yes" xml:space="preserve">
          <source>You can install the Cypress binary from any URL or file path using the &lt;a href=&quot;../getting-started/installing-cypress#Advanced&quot;&gt;&lt;code&gt;CYPRESS_BINARY_VERSION&lt;/code&gt; environment variable&lt;/a&gt;. Closes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/701&quot;&gt;#701&lt;/a&gt;.</source>
          <target state="translated">您可以使用&lt;a href=&quot;../getting-started/installing-cypress#Advanced&quot;&gt; &lt;code&gt;CYPRESS_BINARY_VERSION&lt;/code&gt; 环境变量&lt;/a&gt;从任何URL或文件路径安装Cypress二进制文件。关闭&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/701&quot;&gt;＃701&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b275caa249f35789b5a6b52732b967117fffee73" translate="yes" xml:space="preserve">
          <source>You can integrate your project with GitHub and edit its settings from within the project settings page.</source>
          <target state="translated">您可以将您的项目与GitHub集成,并在项目设置页面中编辑其设置。</target>
        </trans-unit>
        <trans-unit id="86219c109eae21cebe8d7d1faa0d1a5a1b24b254" translate="yes" xml:space="preserve">
          <source>You can invite users to Cypress from the &lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;Dashboard Service&lt;/a&gt;. Invited users will see all projects and tests run for the organization.</source>
          <target state="translated">您可以从&lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;仪表板服务&lt;/a&gt;邀请用户加入赛普拉斯。受邀的用户将看到该组织运行的所有项目和测试。</target>
        </trans-unit>
        <trans-unit id="f2c434326252254bff882591bbc39c757ede2834" translate="yes" xml:space="preserve">
          <source>You can launch Chrome browsers:</source>
          <target state="translated">你可以启动Chrome浏览器。</target>
        </trans-unit>
        <trans-unit id="74dfe23dfd1d16ee92fb1e884cf413a8c9dec34c" translate="yes" xml:space="preserve">
          <source>You can launch any supported browser by specifying a path to the binary:</source>
          <target state="translated">您可以通过指定二进制文件的路径来启动任何支持的浏览器。</target>
        </trans-unit>
        <trans-unit id="46e2dc84ba3c1deb51d796174810752816157a0d" translate="yes" xml:space="preserve">
          <source>You can make use of aliasing, &lt;a href=&quot;as&quot;&gt;&lt;code&gt;.as()&lt;/code&gt;&lt;/a&gt;, instead of working directly with the yielded data.</source>
          <target state="translated">您可以使用别名&lt;a href=&quot;as&quot;&gt; &lt;code&gt;.as()&lt;/code&gt; &lt;/a&gt;，而不是直接使用产生的数据。</target>
        </trans-unit>
        <trans-unit id="ba9d241fe58b4fd51988a52e710fb3ab9759bbb6" translate="yes" xml:space="preserve">
          <source>You can modify a command&amp;rsquo;s timeout. This timeout affects both its default assertions (if any) and any specific assertions you&amp;rsquo;ve added.</source>
          <target state="translated">您可以修改命令的超时。此超时会影响其默认断言（如果有）以及您添加的任何特定断言。</target>
        </trans-unit>
        <trans-unit id="6e9ded55098e6a24261534757bba5462a9b2f089" translate="yes" xml:space="preserve">
          <source>You can modify fixture data directly before passing it along to a route.</source>
          <target state="translated">您可以直接修改夹具数据,然后再将其传递给路径。</target>
        </trans-unit>
        <trans-unit id="268849d6550ed973e88233729fd806557475af6f" translate="yes" xml:space="preserve">
          <source>You can modify the folder configuration in your &lt;code&gt;cypress.json&lt;/code&gt;. See &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;configuration&lt;/a&gt; for more detail.</source>
          <target state="translated">您可以在 &lt;code&gt;cypress.json&lt;/code&gt; 中修改文件夹配置。请参阅&lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;配置&lt;/a&gt;以获取更多详细信息。</target>
        </trans-unit>
        <trans-unit id="9ffae52ae8492e79e9f3e63f7316f6c6dfe695e1" translate="yes" xml:space="preserve">
          <source>You can modify the global defaults and preserve a set of Cookies which will always be preserved across tests.</source>
          <target state="translated">您可以修改全局默认值,并保存一组Cookies,这些Cookies将始终保存在各个测试中。</target>
        </trans-unit>
        <trans-unit id="38963574c45938411d77bb86650a9bb6c1772c18" translate="yes" xml:space="preserve">
          <source>You can modify the global defaults and whitelist a set of Cookies which will always be preserved across tests.</source>
          <target state="translated">您可以修改全局默认值,并将一组Cookie列入白名单,这些Cookie将在测试中始终保留。</target>
        </trans-unit>
        <trans-unit id="c0e314c1b8a88bd78d2167d2e1acfd3c1a1b764d" translate="yes" xml:space="preserve">
          <source>You can nest fixtures within folders and reference them by defining the path from the fixturesFolder:</source>
          <target state="translated">您可以在文件夹中嵌套灯具,并通过定义 fixturesFolder 的路径来引用它们。</target>
        </trans-unit>
        <trans-unit id="5258c2451cd4a326e045ffa1956e6f735e66b388" translate="yes" xml:space="preserve">
          <source>You can no longer improperly use &lt;a href=&quot;../../api/commands/its&quot;&gt;&lt;code&gt;.its()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/invoke&quot;&gt;&lt;code&gt;.invoke()&lt;/code&gt;&lt;/a&gt;. Using &lt;a href=&quot;../../api/commands/invoke&quot;&gt;&lt;code&gt;.invoke()&lt;/code&gt;&lt;/a&gt; on a non function property will result in an error that tells you how to write it properly using &lt;a href=&quot;../../api/commands/its&quot;&gt;&lt;code&gt;.its()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">你可以不再使用不当&lt;a href=&quot;../../api/commands/its&quot;&gt; &lt;code&gt;.its()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../api/commands/invoke&quot;&gt; &lt;code&gt;.invoke()&lt;/code&gt; &lt;/a&gt;。使用&lt;a href=&quot;../../api/commands/invoke&quot;&gt; &lt;code&gt;.invoke()&lt;/code&gt; &lt;/a&gt;在非功能属性将导致告诉您如何得当使用写一个错误&lt;a href=&quot;../../api/commands/its&quot;&gt; &lt;code&gt;.its()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ece224cc6591037f5d9540aab7d82ff657aa2511" translate="yes" xml:space="preserve">
          <source>You can now &lt;a href=&quot;../../api/events/catalog-of-events&quot;&gt;disable Cypress global exception handlers&lt;/a&gt; for your application. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/254&quot;&gt;#254&lt;/a&gt;</source>
          <target state="translated">您现在可以为应用程序&lt;a href=&quot;../../api/events/catalog-of-events&quot;&gt;禁用赛普拉斯全局异常处理&lt;/a&gt;程序。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/254&quot;&gt;＃254&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7f6c8741bc92d985041c76c28111a4e5bec73e60" translate="yes" xml:space="preserve">
          <source>You can now &lt;a href=&quot;../getting-started/installing-cypress&quot;&gt;install Cypress as a real &lt;code&gt;npm&lt;/code&gt; module&lt;/a&gt;, and even &lt;code&gt;require&lt;/code&gt; it in your node files.</source>
          <target state="translated">现在，您可以&lt;a href=&quot;../getting-started/installing-cypress&quot;&gt;将Cypress作为真正的 &lt;code&gt;npm&lt;/code&gt; 模块安装&lt;/a&gt;，甚至在您的节点文件中 &lt;code&gt;require&lt;/code&gt; 它。</target>
        </trans-unit>
        <trans-unit id="5680e07c33853ea5c9b4de59fbef6b160e725b11" translate="yes" xml:space="preserve">
          <source>You can now &lt;a href=&quot;../tooling/reporters&quot;&gt;add or write your own custom reporters&lt;/a&gt;. This means you can &lt;code&gt;npm install xyz-mocha-reporter&lt;/code&gt; and we&amp;rsquo;ll automatically correctly &lt;code&gt;require&lt;/code&gt; that package. Alternatively you can write your own &lt;code&gt;xyz-custom_reporter.js&lt;/code&gt; file. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/231&quot;&gt;#231&lt;/a&gt;.</source>
          <target state="translated">现在，您可以&lt;a href=&quot;../tooling/reporters&quot;&gt;添加或编写自己的自定义报告程序&lt;/a&gt;。这意味着您可以 &lt;code&gt;npm install xyz-mocha-reporter&lt;/code&gt; ，我们将自动正确 &lt;code&gt;require&lt;/code&gt; 该软件包。或者，您可以编写自己的 &lt;code&gt;xyz-custom_reporter.js&lt;/code&gt; 文件。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/231&quot;&gt;＃231&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0765f34270ac09c7d9ced98e0e75f5138ceb2326" translate="yes" xml:space="preserve">
          <source>You can now call &lt;a href=&quot;../../api/commands/focus&quot;&gt;&lt;code&gt;.focus()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/blur&quot;&gt;&lt;code&gt;.blur()&lt;/code&gt;&lt;/a&gt; on &lt;a href=&quot;../../api/commands/window&quot;&gt;&lt;code&gt;cy.window()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">现在，您可以拨打&lt;a href=&quot;../../api/commands/focus&quot;&gt; &lt;code&gt;.focus()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../api/commands/blur&quot;&gt; &lt;code&gt;.blur()&lt;/code&gt; &lt;/a&gt;上&lt;a href=&quot;../../api/commands/window&quot;&gt; &lt;code&gt;cy.window()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8feefa9fed92a283287c1cb630012766eac5156c" translate="yes" xml:space="preserve">
          <source>You can now customize the default Babe; configuration options for the Browserify preprocessor. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/343&quot;&gt;#343&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/905&quot;&gt;#905&lt;/a&gt;.</source>
          <target state="translated">现在，您可以自定义默认的Babe。Browserify预处理器的配置选项。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/343&quot;&gt;＃343&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/905&quot;&gt;＃905&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6122353f44506f72a3680590c0f0b5087d6858af" translate="yes" xml:space="preserve">
          <source>You can now disable &lt;code&gt;videoCompression&lt;/code&gt; by passing &lt;code&gt;false&lt;/code&gt; in &lt;code&gt;cypress.json&lt;/code&gt; or env variables. In very long runs and on CPU throttled instances compression can take a considerable amount of time, possibly as much as 50% of the time spent running actual tests. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/372&quot;&gt;#372&lt;/a&gt;.</source>
          <target state="translated">您现在可以通过在 &lt;code&gt;cypress.json&lt;/code&gt; 或env变量中传递 &lt;code&gt;false&lt;/code&gt; 来禁用 &lt;code&gt;videoCompression&lt;/code&gt; 。在非常长的运行中以及在CPU受到限制的实例上，压缩可能会花费大量时间，可能多达运行实际测试所花费时间的50％。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/372&quot;&gt;＃372&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="712559d3a93d9cdad79cd3343451ce05ecd5814a" translate="yes" xml:space="preserve">
          <source>You can now disable the force sending of &lt;code&gt;404&lt;/code&gt; to all XHR&amp;rsquo;s which are not stubbed. This allows you to mix and match, enabling some requests to be stubbed and others to hit your server and respond normally.</source>
          <target state="translated">现在，您可以禁用向未存根的所有XHR 强制发送 &lt;code&gt;404&lt;/code&gt; 。这使您可以混合搭配，从而使某些请求被存根，而另一些请求到达服务器并正常响应。</target>
        </trans-unit>
        <trans-unit id="20d67d23501ad6a8707df3918f7feae7d0572c0b" translate="yes" xml:space="preserve">
          <source>You can now force other additional response headers to be sent on stubbed XHRs.</source>
          <target state="translated">您现在可以强制在存根XHR上发送其他额外的响应头。</target>
        </trans-unit>
        <trans-unit id="899619b79724c677d1afafc90146b76d878a885c" translate="yes" xml:space="preserve">
          <source>You can now opt out of sending exceptions to &lt;code&gt;https://api.cypress.io&lt;/code&gt; by setting &lt;code&gt;CYPRESS_CRASH_REPORTS=0&lt;/code&gt; in your system environment variables. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4386&quot;&gt;#4386&lt;/a&gt;</source>
          <target state="translated">现在，您可以通过在系统环境变量中设置 &lt;code&gt;CYPRESS_CRASH_REPORTS=0&lt;/code&gt; 来选择不将异常发送到 &lt;code&gt;https://api.cypress.io&lt;/code&gt; 。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4386&quot;&gt;＃4386&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eb9e11c211b7518d8b0d00cb81d803e6bc1ccdde" translate="yes" xml:space="preserve">
          <source>You can now overwrite existing commands with &lt;a href=&quot;../../api/cypress-api/custom-commands&quot;&gt;&lt;code&gt;Cypress.Commands.overwrite&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">现在，您可以使用&lt;a href=&quot;../../api/cypress-api/custom-commands&quot;&gt; &lt;code&gt;Cypress.Commands.overwrite&lt;/code&gt; &lt;/a&gt;覆盖现有命令。</target>
        </trans-unit>
        <trans-unit id="9559413240a3ca49f0aeb8a6bb2ed1190c0fa94a" translate="yes" xml:space="preserve">
          <source>You can now pass a &lt;code&gt;flag&lt;/code&gt; option to &lt;a href=&quot;../../api/commands/writefile&quot;&gt;&lt;code&gt;cy.writeFile()&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;https://nodejs.org/api/fs.html#fs_file_system_flags&quot;&gt;following flags&lt;/a&gt; are available. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1249&quot;&gt;#1249&lt;/a&gt;.</source>
          <target state="translated">现在，您可以将 &lt;code&gt;flag&lt;/code&gt; 选项传递给&lt;a href=&quot;../../api/commands/writefile&quot;&gt; &lt;code&gt;cy.writeFile()&lt;/code&gt; &lt;/a&gt;。在&lt;a href=&quot;https://nodejs.org/api/fs.html#fs_file_system_flags&quot;&gt;下列标志&lt;/a&gt;可用。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1249&quot;&gt;＃1249&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="35d2b0974800617df9ce9d53af5d17e80ee10d79" translate="yes" xml:space="preserve">
          <source>You can now pass a browser option to &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt; as &lt;code&gt;--browser &amp;lt;browser name&amp;gt;&lt;/code&gt;. This enables you to run the same set of browsers when running from the CLI as when you&amp;rsquo;re running from the GUI. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/462&quot;&gt;#462&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/531&quot;&gt;#531&lt;/a&gt;.</source>
          <target state="translated">现在，您可以将浏览器选项传递给&lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt; &lt;code&gt;cypress run&lt;/code&gt; &lt;/a&gt;以 &lt;code&gt;--browser &amp;lt;browser name&amp;gt;&lt;/code&gt; 身份运行。这使您可以在从CLI运行时与从GUI运行时运行相同的浏览器集。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/462&quot;&gt;＃462&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/531&quot;&gt;＃531&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e5e480fde137a4b850caed59f517e6b52aed45fc" translate="yes" xml:space="preserve">
          <source>You can now pass a normal object to &lt;code&gt;cypress.open()&lt;/code&gt; or &lt;code&gt;cypress.run()&lt;/code&gt; through the &lt;a href=&quot;../guides/module-api&quot;&gt;Module API&lt;/a&gt;, just as you would from the command line. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1442&quot;&gt;#1442&lt;/a&gt;.</source>
          <target state="translated">您现在可以像通过命令行一样，通过&lt;a href=&quot;../guides/module-api&quot;&gt;Module API&lt;/a&gt;将普通对象传递给 &lt;code&gt;cypress.open()&lt;/code&gt; 或 &lt;code&gt;cypress.run()&lt;/code&gt; 。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1442&quot;&gt;＃1442&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0785a54f6c3288ada1c045b8687dacb180c62e42" translate="yes" xml:space="preserve">
          <source>You can now pass an object literal as &lt;code&gt;config&lt;/code&gt; when using Cypress as a node module. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/639&quot;&gt;#639&lt;/a&gt;.</source>
          <target state="translated">现在，使用赛普拉斯作为节点模块时，您可以将对象文字作为 &lt;code&gt;config&lt;/code&gt; 传递。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/639&quot;&gt;＃639&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0b3b1753fed5f2d2b7b2d7c23e19df557bac55b1" translate="yes" xml:space="preserve">
          <source>You can now pass keyboard modifiers such as &lt;code&gt;ctrl&lt;/code&gt;, &lt;code&gt;cmd&lt;/code&gt;, &lt;code&gt;shift&lt;/code&gt;, and &lt;code&gt;alt&lt;/code&gt; to &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt;. In addition we&amp;rsquo;ve added support for not &amp;ldquo;releasing&amp;rdquo; these keys so they can affect other actions such as &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt;. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/196&quot;&gt;#196&lt;/a&gt;.</source>
          <target state="translated">现在，您可以将 &lt;code&gt;ctrl&lt;/code&gt; ， &lt;code&gt;cmd&lt;/code&gt; ， &lt;code&gt;shift&lt;/code&gt; 和 &lt;code&gt;alt&lt;/code&gt; 等键盘修饰符传递给&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;。此外，我们增加了对不&amp;ldquo;释放&amp;rdquo;这些键的支持，以便它们可以影响其他操作，例如&lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt;。地址&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/196&quot;&gt;＃196&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a81d9c165fdd3ac6701832c2f5e0182d43e7295d" translate="yes" xml:space="preserve">
          <source>You can now programmatically &lt;a href=&quot;../../api/events/catalog-of-events&quot;&gt;intercept and potentially turn off uncaught application errors&lt;/a&gt; from failing your tests.</source>
          <target state="translated">现在，您可以通过编程方式&lt;a href=&quot;../../api/events/catalog-of-events&quot;&gt;拦截并有可能关闭未&lt;/a&gt;通过测试的未捕获应用程序错误。</target>
        </trans-unit>
        <trans-unit id="138d7132a9353a5b49ed6b47667bd99c0281d4b2" translate="yes" xml:space="preserve">
          <source>You can now programmatically control whether you accept or cancel &lt;a href=&quot;../../api/events/catalog-of-events&quot;&gt;&lt;code&gt;window.confirm()&lt;/code&gt;&lt;/a&gt; calls from your application.</source>
          <target state="translated">现在，您可以以编程方式控制您是接受还是取消应用程序中的&lt;a href=&quot;../../api/events/catalog-of-events&quot;&gt; &lt;code&gt;window.confirm()&lt;/code&gt; &lt;/a&gt;调用。</target>
        </trans-unit>
        <trans-unit id="7623fcd4d1628bae4e1b7ad1761dcbef8afc7a70" translate="yes" xml:space="preserve">
          <source>You can now run all of your tests inside of the GUI App.</source>
          <target state="translated">现在您可以在GUI应用程序中运行所有的测试。</target>
        </trans-unit>
        <trans-unit id="c64804a37af779bbe2592b2c3bf4afaaa3e219e2" translate="yes" xml:space="preserve">
          <source>You can now run and omit the &lt;code&gt;--key&lt;/code&gt; flag:</source>
          <target state="translated">您现在可以运行并省略 &lt;code&gt;--key&lt;/code&gt; 标志：</target>
        </trans-unit>
        <trans-unit id="3bf62b732cce7d08d2b31bcd631494149ab3518e" translate="yes" xml:space="preserve">
          <source>You can now run multiple specs by passing a glob to the &lt;code&gt;--spec&lt;/code&gt; argument of &lt;code&gt;cypress run&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/263&quot;&gt;#263&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/416&quot;&gt;#416&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/681&quot;&gt;#681&lt;/a&gt;.</source>
          <target state="translated">现在，您可以通过将glob传递给 &lt;code&gt;cypress run&lt;/code&gt; 的 &lt;code&gt;--spec&lt;/code&gt; 参数来运行多个规范。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/263&quot;&gt;＃263&lt;/a&gt;，&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/416&quot;&gt;＃416&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/681&quot;&gt;＃681&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="45640b87476c3305f0b7e13caef65bb39c529a54" translate="yes" xml:space="preserve">
          <source>You can now run your tests in the &lt;a href=&quot;../guides/launching-browsers#Electron-Browser&quot;&gt;Electron browser&lt;/a&gt; that comes built with Cypress. You will see it as an option in the browser dropdown. This is the same browser that Cypress uses when running &lt;code&gt;cypress run&lt;/code&gt;. This is useful for debugging issues that only occur during headless runs. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/452&quot;&gt;#452&lt;/a&gt;.</source>
          <target state="translated">现在，您可以在赛普拉斯内置的&lt;a href=&quot;../guides/launching-browsers#Electron-Browser&quot;&gt;电子浏览器&lt;/a&gt;中运行测试。您将在浏览器下拉列表中将其视为一个选项。与Cypress运行 &lt;code&gt;cypress run&lt;/code&gt; 时使用的浏览器相同。这对于调试仅在无头运行期间发生的问题很有用。地址&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/452&quot;&gt;＃452&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ec53cb8fd64f5f52a4282b6c5e9cd12983e338da" translate="yes" xml:space="preserve">
          <source>You can now set the default &lt;a href=&quot;configuration&quot;&gt;&lt;code&gt;reporter&lt;/code&gt;&lt;/a&gt; in &lt;code&gt;cypress.json&lt;/code&gt; for use during &lt;code&gt;cypress run&lt;/code&gt; or in CI.</source>
          <target state="translated">现在，您可以在 &lt;code&gt;cypress.json&lt;/code&gt; 中设置默认&lt;a href=&quot;configuration&quot;&gt; &lt;code&gt;reporter&lt;/code&gt; &lt;/a&gt;，以在 &lt;code&gt;cypress run&lt;/code&gt; 期间或在CI中使用。</target>
        </trans-unit>
        <trans-unit id="bd5379dfca4df4d3b27774dbb439c7dfe0adf4fe" translate="yes" xml:space="preserve">
          <source>You can now stop and restart tests from the UI.</source>
          <target state="translated">现在你可以从用户界面停止和重新启动测试。</target>
        </trans-unit>
        <trans-unit id="fc14b634efcdaee12ffae4a5baf0f8512a6f38ef" translate="yes" xml:space="preserve">
          <source>You can now turn off &lt;code&gt;supportFolder&lt;/code&gt; and &lt;code&gt;fixturesFolder&lt;/code&gt; by passing &lt;code&gt;false&lt;/code&gt; in &lt;code&gt;cypress.json&lt;/code&gt;. This will automatically remove the folders the next time you open your project in Cypress. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/102&quot;&gt;#102&lt;/a&gt;.</source>
          <target state="translated">现在，您可以关闭 &lt;code&gt;supportFolder&lt;/code&gt; 和 &lt;code&gt;fixturesFolder&lt;/code&gt; 通过传递 &lt;code&gt;false&lt;/code&gt; 的 &lt;code&gt;cypress.json&lt;/code&gt; 。下次您在赛普拉斯中打开项目时，它将自动删除文件夹。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/102&quot;&gt;＃102&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c4721446938ebfeb10d08fe7b676b4f960b45827" translate="yes" xml:space="preserve">
          <source>You can now type into the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; or &lt;code&gt;document&lt;/code&gt; as opposed to previously &lt;em&gt;having&lt;/em&gt; to target a valid focusable element. This is useful in situations where you&amp;rsquo;re testing keyboard shortcuts and do not want to target a specific element. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/150&quot;&gt;#150&lt;/a&gt;.</source>
          <target state="translated">现在，您可以键入 &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; 或 &lt;code&gt;document&lt;/code&gt; ，而以前&lt;em&gt;不必&lt;/em&gt;定位有效的可聚焦元素。这在您正在测试键盘快捷键并且不想定位特定元素的情况下很有用。地址&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/150&quot;&gt;＃150&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1ef09dd6a0cadfc84b178dfb9fb73fdbd41e818e" translate="yes" xml:space="preserve">
          <source>You can now use &lt;a href=&quot;../../api/commands/focus&quot;&gt;&lt;code&gt;.focus()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../api/commands/blur&quot;&gt;&lt;code&gt;.blur()&lt;/code&gt;&lt;/a&gt; on &lt;code&gt;cy.get('body')&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2235&quot;&gt;#2235&lt;/a&gt;.</source>
          <target state="translated">现在，您可以在 &lt;code&gt;cy.get('body')&lt;/code&gt; 上使用&lt;a href=&quot;../../api/commands/focus&quot;&gt; &lt;code&gt;.focus()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../api/commands/blur&quot;&gt; &lt;code&gt;.blur()&lt;/code&gt; &lt;/a&gt;）。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2235&quot;&gt;＃2235&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="942d3b9d1d9095e8dd2beb6c2f1c97aca0c68f0e" translate="yes" xml:space="preserve">
          <source>You can now use &lt;a href=&quot;../../api/commands/stub&quot;&gt;&lt;code&gt;cy.stub()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/spy&quot;&gt;&lt;code&gt;cy.spy()&lt;/code&gt;&lt;/a&gt; synchronously. These both match the Sinon API identically. We will display &lt;code&gt;stub/spy&lt;/code&gt; calls in the Command Log and provide the call count, arguments, context, and return values when you click on the log. Stubs are automatically reset between tests. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/377&quot;&gt;#377&lt;/a&gt;.</source>
          <target state="translated">您现在可以同步使用&lt;a href=&quot;../../api/commands/stub&quot;&gt; &lt;code&gt;cy.stub()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../api/commands/spy&quot;&gt; &lt;code&gt;cy.spy()&lt;/code&gt; &lt;/a&gt;。它们都与Sinon API完全相同。当您单击日志时，我们将在命令日志中显示 &lt;code&gt;stub/spy&lt;/code&gt; 调用，并提供调用计数，参数，上下文和返回值。测试之间会自动重设存根。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/377&quot;&gt;＃377&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="79e8206517830b8225596c03133251ab6833111c" translate="yes" xml:space="preserve">
          <source>You can now use environment variables that have a &lt;code&gt;=&lt;/code&gt; character as values. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/620&quot;&gt;#620&lt;/a&gt;. Contributed by &lt;a href=&quot;https://github.com/HugoGiraudel&quot;&gt;@HugoGiraudel&lt;/a&gt;.</source>
          <target state="translated">现在，您可以使用具有 &lt;code&gt;=&lt;/code&gt; 字符的环境变量作为值。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/620&quot;&gt;＃620&lt;/a&gt;。由&lt;a href=&quot;https://github.com/HugoGiraudel&quot;&gt;@HugoGiraudel&lt;/a&gt;贡献。</target>
        </trans-unit>
        <trans-unit id="29bbd0400cd893e20dc7cee46c1fa1932fe383f9" translate="yes" xml:space="preserve">
          <source>You can now use the Test Runner application without logging in. Some areas of the application still require logging in through GitHub, like the &amp;lsquo;Runs&amp;rsquo; tab and viewing the project&amp;rsquo;s &amp;lsquo;Record Key&amp;rsquo;. The only places where login is required is when it interacts with our external servers. Naturally these places are optional and will not affect the local test writing + running experience.</source>
          <target state="translated">现在，您无需登录即可使用Test Runner应用程序。该应用程序的某些区域仍需要通过GitHub登录，例如&amp;ldquo;运行&amp;rdquo;选项卡和查看项目的&amp;ldquo;记录键&amp;rdquo;。唯一需要登录的地方是当它与我们的外部服务器交互时。当然，这些位置是可选的，不会影响本地测试编写和运行体验。</target>
        </trans-unit>
        <trans-unit id="8de4972db5eb3c931e400e2a110f6c96d78cd5b2" translate="yes" xml:space="preserve">
          <source>You can now use your regularly installed &lt;code&gt;node_modules&lt;/code&gt; in your project to do things like utilizing &lt;a href=&quot;https://lodash.com/&quot;&gt;&lt;code&gt;lodash&lt;/code&gt;&lt;/a&gt; for utility functions or extending &lt;a href=&quot;http://www.chaijs.com/&quot;&gt;&lt;code&gt;chai&lt;/code&gt;&lt;/a&gt; with assertion plugins.</source>
          <target state="translated">现在，您可以在项目中使用常规安装的 &lt;code&gt;node_modules&lt;/code&gt; 进行操作，例如将&lt;a href=&quot;https://lodash.com/&quot;&gt; &lt;code&gt;lodash&lt;/code&gt; &lt;/a&gt;用于实用程序功能或使用断言插件扩展&lt;a href=&quot;http://www.chaijs.com/&quot;&gt; &lt;code&gt;chai&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="95297733ad8226fb0378093b3ac94e6ce247e579" translate="yes" xml:space="preserve">
          <source>You can now zoom in the main Test Runner window and also the Electron browser. Corresponding keyboard shortcuts for Zoom in, Zoom out and Actual Size are also available. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1231&quot;&gt;#1231&lt;/a&gt;.</source>
          <target state="translated">现在，您可以放大Test Runner主窗口，也可以放大Electron浏览器。还提供了用于放大，缩小和实际大小的相应键盘快捷键。地址&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1231&quot;&gt;＃1231&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5be6e5857a73b45348dde23e2452fc92891dee85" translate="yes" xml:space="preserve">
          <source>You can pass &lt;code&gt;--headed --no-exit&lt;/code&gt; in order to view the &lt;strong&gt;command log&lt;/strong&gt; or have access to &lt;strong&gt;developer tools&lt;/strong&gt; after a &lt;code&gt;spec&lt;/code&gt; has run.</source>
          <target state="translated">您可以传递 &lt;code&gt;--headed --no-exit&lt;/code&gt; 来查看&lt;strong&gt;命令日志&lt;/strong&gt;或在 &lt;code&gt;spec&lt;/code&gt; 运行后访问&lt;strong&gt;开发人员工具&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="ce6cd293bdd6cb1e8bb1cbe322a68a49007a7c1b" translate="yes" xml:space="preserve">
          <source>You can pass &lt;code&gt;{ force: true }&lt;/code&gt; to most action commands.</source>
          <target state="translated">您可以将 &lt;code&gt;{ force: true }&lt;/code&gt; 传递给大多数操作命令。</target>
        </trans-unit>
        <trans-unit id="95f1fd98298ede2c01c8184bf72064cd2e4c990d" translate="yes" xml:space="preserve">
          <source>You can pass Electron-specific launch arguments using the &lt;code&gt;ELECTRON_EXTRA_LAUNCH_ARGS&lt;/code&gt; environment variable. For example, to disable HTTP browser cache and ignore certificate errors, you can set the environment variables before running Cypress like below:</source>
          <target state="translated">您可以使用 &lt;code&gt;ELECTRON_EXTRA_LAUNCH_ARGS&lt;/code&gt; 环境变量传递特定于电子的启动参数。例如，要禁用HTTP浏览器缓存并忽略证书错误，可以在运行Cypress之前设置环境变量，如下所示：</target>
        </trans-unit>
        <trans-unit id="c8e8f933c73a0a7fdcfc434c40860ed412dde843" translate="yes" xml:space="preserve">
          <source>You can pass a different value to link agents to the same run. For example, if you are using Jenkins and think the environment variable &lt;code&gt;BUILD_TAG&lt;/code&gt; is more unique than the environment variable &lt;code&gt;BUILD_NUMBER&lt;/code&gt;, pass the &lt;code&gt;BUILD_TAG&lt;/code&gt; value via CLI &lt;a href=&quot;command-line#cypress-run-ci-build-id-lt-id-gt&quot;&gt;&lt;code&gt;--ci-build-id&lt;/code&gt; flag&lt;/a&gt;.</source>
          <target state="translated">您可以传递不同的值以将代理链接到同一运行。例如，如果您使用的是Jenkins，并且认为环境变量 &lt;code&gt;BUILD_TAG&lt;/code&gt; 比环境变量 &lt;code&gt;BUILD_NUMBER&lt;/code&gt; 更独特，请通过CLI &lt;a href=&quot;command-line#cypress-run-ci-build-id-lt-id-gt&quot;&gt; &lt;code&gt;--ci-build-id&lt;/code&gt; &lt;/a&gt;标志传递 &lt;code&gt;BUILD_TAG&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="09383e1d5f1fbad75c9300dd9efb4373486f2d9b" translate="yes" xml:space="preserve">
          <source>You can pass an array of aliases that will be waited on before resolving.</source>
          <target state="translated">你可以传递一个在解析前会被等待的别名数组。</target>
        </trans-unit>
        <trans-unit id="baa5e9a56cb2b2c60dc571c37bff5374f786fef3" translate="yes" xml:space="preserve">
          <source>You can pass in a &lt;code&gt;delay&lt;/code&gt; option that causes a delay (in ms) to the &lt;code&gt;response&lt;/code&gt; for matched requests. The example below will cause the response to be delayed by 3 secs. This can be useful for testing loading states, like loading spinners, in the DOM before the request responds.</source>
          <target state="translated">您可以传入一个 &lt;code&gt;delay&lt;/code&gt; 选项，该选项导致匹配请求的 &lt;code&gt;response&lt;/code&gt; 延迟（以毫秒为单位）。下面的示例将导致响应延迟3秒。这对于在请求响应之前在DOM中测试加载状态（例如加载微调器）很有用。</target>
        </trans-unit>
        <trans-unit id="95596200293024877f6efba1b6965118d0a1a1d2" translate="yes" xml:space="preserve">
          <source>You can preview all issues addressed from a pre-release version &lt;a href=&quot;https://github.com/cypress-io/cypress/issues?utf8=%E2%9C%93&amp;amp;q=label%3A%22stage%3A+pending+release%22+&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">您可以&lt;a href=&quot;https://github.com/cypress-io/cypress/issues?utf8=%E2%9C%93&amp;amp;q=label%3A%22stage%3A+pending+release%22+&quot;&gt;在此处&lt;/a&gt;预览预发行版本中解决的所有问题。</target>
        </trans-unit>
        <trans-unit id="83a25889c934de24f12625a4e517844ca663b8be" translate="yes" xml:space="preserve">
          <source>You can programmatically modify these values and Cypress will then respect these changes. This enables you to swap out configuration based on things like the environment you&amp;rsquo;re running in.</source>
          <target state="translated">您可以通过编程方式修改这些值，然后赛普拉斯将尊重这些更改。这使您可以根据正在运行的环境之类的内容交换配置。</target>
        </trans-unit>
        <trans-unit id="b5acd5847d4bace3e744730c10667c02a81f076c" translate="yes" xml:space="preserve">
          <source>You can provide a &lt;a href=&quot;../utilities/minimatch&quot;&gt;minimatch&lt;/a&gt; pattern</source>
          <target state="translated">您可以提供一个&lt;a href=&quot;../utilities/minimatch&quot;&gt;minimatch&lt;/a&gt;模式</target>
        </trans-unit>
        <trans-unit id="1ec0d1c73f020c928d7c6393427f5add1e08221e" translate="yes" xml:space="preserve">
          <source>You can provide a substring of the URL to match</source>
          <target state="translated">你可以提供一个URL的子串来匹配。</target>
        </trans-unit>
        <trans-unit id="e9578295d9b3f3aec59dba7dc4ee111b9ad14c3a" translate="yes" xml:space="preserve">
          <source>You can provide query parameters as an object to &lt;code&gt;cy.visit()&lt;/code&gt; by passing &lt;code&gt;qs&lt;/code&gt; to &lt;code&gt;options&lt;/code&gt;.</source>
          <target state="translated">您可以通过将 &lt;code&gt;qs&lt;/code&gt; 传递给 &lt;code&gt;options&lt;/code&gt; 来将查询参数作为 &lt;code&gt;cy.visit()&lt;/code&gt; 的对象提供。</target>
        </trans-unit>
        <trans-unit id="e251fcb3775b061b4ded433a4d6827c0a8dba5ad" translate="yes" xml:space="preserve">
          <source>You can provide the entire URL to match</source>
          <target state="translated">您可以提供整个URL来匹配</target>
        </trans-unit>
        <trans-unit id="1c924b81f8b6a5f981ef5f631b0fc68ee89248d8" translate="yes" xml:space="preserve">
          <source>You can quickly get to a project&amp;rsquo;s GitHub Integrations settings, by clicking on the &lt;strong&gt;Configure&lt;/strong&gt; link of the desired project within an organization&amp;rsquo;s Integrations page:</source>
          <target state="translated">通过在组织的&amp;ldquo;集成&amp;rdquo;页面中单击所需项目的&amp;ldquo; &lt;strong&gt;配置&amp;rdquo;&lt;/strong&gt;链接，可以快速进入项目的GitHub集成设置：</target>
        </trans-unit>
        <trans-unit id="d482e895eaa5b3578ddfb67a017dd106d821e27c" translate="yes" xml:space="preserve">
          <source>You can read all about how to do &lt;a href=&quot;conditional-testing&quot;&gt;conditional testing&lt;/a&gt; here.</source>
          <target state="translated">您可以在此处阅读有关如何进行&lt;a href=&quot;conditional-testing&quot;&gt;条件测试的&lt;/a&gt;所有信息。</target>
        </trans-unit>
        <trans-unit id="093d8c97f842f7cee5f704db68c73235cfd0a099" translate="yes" xml:space="preserve">
          <source>You can refer to each of these libraries&amp;rsquo; documentation for more examples and explanations.</source>
          <target state="translated">您可以参考这些库的每个文档，以获取更多示例和说明。</target>
        </trans-unit>
        <trans-unit id="d4220931c77cd1b78d9b949f7d01e10002cca5a7" translate="yes" xml:space="preserve">
          <source>You can require Cypress as a node module from your application under test. This can be useful when you want to access to the test results directly after the run. With this workflow, for example, you can:</source>
          <target state="translated">你可以要求Cypress作为被测应用程序的节点模块。当你想在运行后直接访问测试结果时,这很有用。例如,通过这个工作流,你可以。</target>
        </trans-unit>
        <trans-unit id="a6d06f2b1adb2d4129788844caa528ecf1cda1ad" translate="yes" xml:space="preserve">
          <source>You can restore the clock and allow your application to resume normally without manipulating native global functions related to time. This is automatically called between tests.</source>
          <target state="translated">您可以恢复时钟,并允许您的应用程序恢复正常,而无需操作与时间相关的本地全局函数。这将在测试之间自动调用。</target>
        </trans-unit>
        <trans-unit id="9729098893650c87d3fe783fa897d1c93cb9e161" translate="yes" xml:space="preserve">
          <source>You can retry any function with attached assertions using this 3rd party plugin &lt;a href=&quot;https://github.com/NicholasBoll/cypress-pipe&quot;&gt;cypress-pipe&lt;/a&gt;.</source>
          <target state="translated">您可以使用此第三方插件&lt;a href=&quot;https://github.com/NicholasBoll/cypress-pipe&quot;&gt;cypress-pipe&lt;/a&gt;重试带有附加断言的任何函数。</target>
        </trans-unit>
        <trans-unit id="3ca8daa58bccea2736c00e6d18178cc413797e53" translate="yes" xml:space="preserve">
          <source>You can return a promise from the &lt;code&gt;after:run&lt;/code&gt; event handler and it will be awaited before Cypress proceeds running your specs.</source>
          <target state="translated">您可以从 &lt;code&gt;after:run&lt;/code&gt; 事件处理程序中返回一个承诺，它将在赛普拉斯继续运行您的规范之前等待。</target>
        </trans-unit>
        <trans-unit id="67f0b06a17d33551d6201ba13debb52bb81db144" translate="yes" xml:space="preserve">
          <source>You can return a promise from the &lt;code&gt;after:spec&lt;/code&gt; event handler and it will be awaited before Cypress proceeds with processing the spec&amp;rsquo;s video or moving on to further specs if there are any.</source>
          <target state="translated">您可以从 &lt;code&gt;after:spec&lt;/code&gt; 事件处理程序中返回一个承诺，它将在赛普拉斯继续处理该规范的视频或移至其他规范（如果有）之前等待。</target>
        </trans-unit>
        <trans-unit id="0737daddca1d0c26b60880c56637aaca6d3b5a37" translate="yes" xml:space="preserve">
          <source>You can return a promise from the &lt;code&gt;before:run&lt;/code&gt; event handler and it will be awaited before Cypress proceeds running your specs.</source>
          <target state="translated">您可以从 &lt;code&gt;before:run&lt;/code&gt; 事件处理程序中返回一个承诺，它将在赛普拉斯继续运行您的规范之前等待。</target>
        </trans-unit>
        <trans-unit id="e1325019e5cbb795850e58b6d8f48a4e5382bc28" translate="yes" xml:space="preserve">
          <source>You can return a promise from the &lt;code&gt;before:spec&lt;/code&gt; event handler and it will be awaited before Cypress proceeds running the spec.</source>
          <target state="translated">您可以从 &lt;code&gt;before:spec&lt;/code&gt; 事件处理程序中返回一个承诺，它将在赛普拉斯继续运行该规范之前等待。</target>
        </trans-unit>
        <trans-unit id="2b021998ab49659091a319a0899f8da252e029c4" translate="yes" xml:space="preserve">
          <source>You can return a synchronous function, or you can also return a Promise, and it will be awaited until it resolves. This enables you to perform asynchronous actions in your exported function such as reading files in from the filesystem.</source>
          <target state="translated">你可以返回一个同步函数,或者你也可以返回一个 Promise,它将被等待,直到它被解析。这使您能够在导出的函数中执行异步操作,例如从文件系统中读取文件。</target>
        </trans-unit>
        <trans-unit id="5c3b3c87f4945d647d11b09a1116a3b25970d659" translate="yes" xml:space="preserve">
          <source>You can return an object or a promise that resolves an object from the callback function. Any type of value other than an object will be ignored. The object can contain the following properties:</source>
          <target state="translated">你可以从回调函数中返回一个对象或一个解析对象的承诺。除了对象之外的任何类型的值都将被忽略。对象可以包含以下属性。</target>
        </trans-unit>
        <trans-unit id="fdfcd8df61569a4b4f2445e5510b44f4634a238a" translate="yes" xml:space="preserve">
          <source>You can return an object or a promise that resolves to an object from the callback function. &lt;em&gt;Any type of returned value other than an object will be ignored.&lt;/em&gt; The object can contain the following properties:</source>
          <target state="translated">您可以从回调函数返回解析为对象的对象或Promise。&lt;em&gt;除对象以外的任何类型的返回值都将被忽略。&lt;/em&gt;该对象可以包含以下属性：</target>
        </trans-unit>
        <trans-unit id="0972f826468d740f3213d9220231dfa30ce1b776" translate="yes" xml:space="preserve">
          <source>You can run the test command by command using the &lt;a href=&quot;../../api/commands/pause&quot;&gt;&lt;code&gt;.pause()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">您可以使用&lt;a href=&quot;../../api/commands/pause&quot;&gt; &lt;code&gt;.pause()&lt;/code&gt; &lt;/a&gt;命令逐个命令运行test 命令。</target>
        </trans-unit>
        <trans-unit id="76e33a7c5024a9118c78fd8bb1e3b79de0e8a5bf" translate="yes" xml:space="preserve">
          <source>You can run your Node server and instrument it using nyc on the fly. Instead of the &amp;ldquo;normal&amp;rdquo; server start command, you can run the command &lt;code&gt;npm run start:coverage&lt;/code&gt; defined in the &lt;code&gt;package.json&lt;/code&gt; like this:</source>
          <target state="translated">您可以运行nyc并使用nyc对其进行检测并对其进行检测。您可以运行 &lt;code&gt;package.json&lt;/code&gt; 中定义的命令 &lt;code&gt;npm run start:coverage&lt;/code&gt; 来代替&amp;ldquo;普通&amp;rdquo;服务器启动命令，如下所示：</target>
        </trans-unit>
        <trans-unit id="0cfaeb1e1f89a0964091e9a595d48ec43b62b037" translate="yes" xml:space="preserve">
          <source>You can safely remove: &lt;code&gt;{stub: false}&lt;/code&gt;.</source>
          <target state="translated">您可以安全地删除： &lt;code&gt;{stub: false}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="08f10e4d69193f7784523fb19f369fd1f495bca3" translate="yes" xml:space="preserve">
          <source>You can safely skip down to the bottom where we provide examples of conditional testing.</source>
          <target state="translated">你可以放心地跳到底部,我们提供了条件测试的例子。</target>
        </trans-unit>
        <trans-unit id="4028c8615256dad9fb86aab718b3986f1cf37299" translate="yes" xml:space="preserve">
          <source>You can see a walk-through of debugging some application code from Cypress &lt;a href=&quot;https://vimeo.com/242961930#t=264s&quot;&gt;in this segment from our React tutorial series&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://vimeo.com/242961930#t=264s&quot;&gt;在我们的React教程系列的这一部分中，&lt;/a&gt;您可以看到从Cypress调试一些应用程序代码的演练。</target>
        </trans-unit>
        <trans-unit id="c564a93b8efa760ea99e7aaeaaca4a085f950583" translate="yes" xml:space="preserve">
          <source>You can see all of the default chrome command line switches we send &lt;a href=&quot;https://github.com/cypress-io/cypress/blob/develop/packages/server/lib/browsers/chrome.coffee#L18&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">您可以&lt;a href=&quot;https://github.com/cypress-io/cypress/blob/develop/packages/server/lib/browsers/chrome.coffee#L18&quot;&gt;在此处&lt;/a&gt;看到我们发送的所有默认chrome命令行开关。</target>
        </trans-unit>
        <trans-unit id="6c359e34437ce9859dd9f80925e6c22da34fa740" translate="yes" xml:space="preserve">
          <source>You can see screenshots taken during a CI run in the &lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;Dashboard Service&lt;/a&gt; without any extra work.</source>
          <target state="translated">您可以在&lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;Dashboard Service中&lt;/a&gt;运行配置项时看到屏幕截图，而无需进行任何额外的工作。</target>
        </trans-unit>
        <trans-unit id="4f6c5eac75cd6906abb941afb985054a42e14b08" translate="yes" xml:space="preserve">
          <source>You can see the result of each spec file that ran within &lt;strong&gt;Specs&lt;/strong&gt;. There is also the option to switch between &lt;strong&gt;Timeline View&lt;/strong&gt; and &lt;strong&gt;Bar Chart View&lt;/strong&gt;.</source>
          <target state="translated">您可以查看&lt;strong&gt;Specs&lt;/strong&gt;中运行的每个spec文件的结果。还有一个选项可以在&lt;strong&gt;时间线视图&lt;/strong&gt;和&lt;strong&gt;条形图视图&lt;/strong&gt;之间切换。</target>
        </trans-unit>
        <trans-unit id="41f6257cca856552f249e6281ad4d60617a042db" translate="yes" xml:space="preserve">
          <source>You can see the result of each spec file that ran within the &lt;a href=&quot;../dashboard/introduction&quot;&gt;Dashboard Service&lt;/a&gt; in the run&amp;rsquo;s &lt;strong&gt;Specs&lt;/strong&gt; tab. Specs are visualized within a &lt;strong&gt;Timeline&lt;/strong&gt;, &lt;strong&gt;Bar Chart&lt;/strong&gt;, and &lt;strong&gt;Machines&lt;/strong&gt; view.</source>
          <target state="translated">您可以在运行的&amp;ldquo; &lt;strong&gt;规格&amp;rdquo;&lt;/strong&gt;选项卡中查看在&amp;ldquo; &lt;a href=&quot;../dashboard/introduction&quot;&gt;仪表板服务&amp;rdquo;&lt;/a&gt;中运行的每个规格文件的结果。规格在&amp;ldquo; &lt;strong&gt;时间轴&amp;rdquo;&lt;/strong&gt;，&amp;ldquo; &lt;strong&gt;条形图&amp;rdquo;&lt;/strong&gt;和&amp;ldquo; &lt;strong&gt;机器&amp;rdquo;&lt;/strong&gt;视图中可视化。&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8b6b763e3ac6f797b65d890fcd00e07b4ade0a86" translate="yes" xml:space="preserve">
          <source>You can set any configuration value as an environment variable. This overrides values in your &lt;code&gt;cypress.json&lt;/code&gt;.</source>
          <target state="translated">您可以将任何配置值设置为环境变量。这将覆盖 &lt;code&gt;cypress.json&lt;/code&gt; 中的值。</target>
        </trans-unit>
        <trans-unit id="bda536015f20293e9b0642a848b69cc95bec4799" translate="yes" xml:space="preserve">
          <source>You can set the record key as the environment variable, &lt;code&gt;CYPRESS_RECORD_KEY&lt;/code&gt;, and we&amp;rsquo;ll automatically use that value. You can now omit the &lt;code&gt;--key&lt;/code&gt; flag when recording.</source>
          <target state="translated">您可以将记录键设置为环境变量 &lt;code&gt;CYPRESS_RECORD_KEY&lt;/code&gt; ，我们将自动使用该值。现在，可以在录制时省略 &lt;code&gt;--key&lt;/code&gt; 标志。</target>
        </trans-unit>
        <trans-unit id="f6224baca389961718809e590054e78945b5cfff" translate="yes" xml:space="preserve">
          <source>You can set the viewport&amp;rsquo;s width and height globally by defining &lt;code&gt;viewportWidth&lt;/code&gt; and &lt;code&gt;viewportHeight&lt;/code&gt; in the &lt;a href=&quot;../../guides/references/configuration&quot;&gt;configuration&lt;/a&gt;.</source>
          <target state="translated">您可以通过在&lt;a href=&quot;../../guides/references/configuration&quot;&gt;配置中&lt;/a&gt;定义 &lt;code&gt;viewportWidth&lt;/code&gt; 和 &lt;code&gt;viewportHeight&lt;/code&gt; 来全局设置视口的宽度和高度。</target>
        </trans-unit>
        <trans-unit id="b5ec5338c0f8e2783617b038a89f0af4d2746806" translate="yes" xml:space="preserve">
          <source>You can set the viewport&amp;rsquo;s width and height globally by defining &lt;code&gt;viewportWidth&lt;/code&gt; and &lt;code&gt;viewportHeight&lt;/code&gt; in the &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html&quot;&gt;configuration&lt;/a&gt;.</source>
          <target state="translated">您可以通过在&lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html&quot;&gt;配置中&lt;/a&gt;定义 &lt;code&gt;viewportWidth&lt;/code&gt; 和 &lt;code&gt;viewportHeight&lt;/code&gt; 来全局设置视口的宽度和高度。</target>
        </trans-unit>
        <trans-unit id="1cff7dd3fa7c5f93754a82bd39bf2f7aad1c06dd" translate="yes" xml:space="preserve">
          <source>You can set various environment variables to modify how Cypress runs.</source>
          <target state="translated">你可以设置各种环境变量来修改Cypress的运行方式。</target>
        </trans-unit>
        <trans-unit id="8ad40832dc09fa34ee7e9dc311cd9bad9d0989a3" translate="yes" xml:space="preserve">
          <source>You can specify reporter options using the &lt;code&gt;--reporter-options &amp;lt;reporter-options&amp;gt;&lt;/code&gt; flag.</source>
          <target state="translated">您可以使用 &lt;code&gt;--reporter-options &amp;lt;reporter-options&amp;gt;&lt;/code&gt; 标志指定报告程序选项。</target>
        </trans-unit>
        <trans-unit id="3d7fc61b5efd85c34d5a76e8baa7c036858d513a" translate="yes" xml:space="preserve">
          <source>You can stop the &lt;code&gt;.each()&lt;/code&gt; loop early by returning &lt;code&gt;false&lt;/code&gt; in the callback function.</source>
          <target state="translated">您可以通过在回调函数中返回 &lt;code&gt;false&lt;/code&gt; 来提前停止 &lt;code&gt;.each()&lt;/code&gt; 循环。</target>
        </trans-unit>
        <trans-unit id="723230f0b51a80b0ce7659307d00661884fda0fc" translate="yes" xml:space="preserve">
          <source>You can swap out or extend the default preprocessor to do exotic things like compile ClojureScript into JavaScript. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/533&quot;&gt;#533&lt;/a&gt;.</source>
          <target state="translated">您可以换出或扩展默认的预处理器，以执行诸如将ClojureScript编译为JavaScript之类的奇特事情。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/533&quot;&gt;＃533&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="910364632dda2057719acd8eaf346fa0ff511e1b" translate="yes" xml:space="preserve">
          <source>You can take advantage of &lt;code&gt;Cypress.Cookies.preserveOnce()&lt;/code&gt; or even &lt;em&gt;whitelist&lt;/em&gt; cookies by their name to preserve values across multiple tests. This enables you to preserve sessions through several tests.</source>
          <target state="translated">您可以利用 &lt;code&gt;Cypress.Cookies.preserveOnce()&lt;/code&gt; 或甚至通过其名称将&lt;em&gt;白名单&lt;/em&gt; cookie保留在多个测试中的值。这使您可以通过多个测试来保留会话。</target>
        </trans-unit>
        <trans-unit id="2059a009fff071bd9b0e7e124ec4e5c023938635" translate="yes" xml:space="preserve">
          <source>You can take advantage of &lt;code&gt;Cypress.Cookies.preserveOnce()&lt;/code&gt; or even preserve cookies by their name to preserve values across multiple tests. This enables you to preserve sessions through several tests.</source>
          <target state="translated">您可以利用 &lt;code&gt;Cypress.Cookies.preserveOnce()&lt;/code&gt; 甚至通过其名称保存cookie，以保留多个测试中的值。这使您可以通过多个测试来保留会话。</target>
        </trans-unit>
        <trans-unit id="9a9e9d7a70afff61bf7e7c51a872422b1e56906d" translate="yes" xml:space="preserve">
          <source>You can test a route multiple times with unique response objects by using &lt;a href=&quot;../../guides/core-concepts/variables-and-aliases#Aliases&quot;&gt;aliases&lt;/a&gt; and &lt;a href=&quot;wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt;. Each time we use &lt;code&gt;cy.wait()&lt;/code&gt; for an alias, Cypress waits for the next nth matching request.</source>
          <target state="translated">您可以使用&lt;a href=&quot;../../guides/core-concepts/variables-and-aliases#Aliases&quot;&gt;别名&lt;/a&gt;和&lt;a href=&quot;wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt;使用唯一的响应对象多次测试路由。每次我们使用 &lt;code&gt;cy.wait()&lt;/code&gt; 作为别名时，赛普拉斯都会等待下一个第n个匹配请求。</target>
        </trans-unit>
        <trans-unit id="1fef1a01c1a62dc23cf2e99b73a06318556b47f6" translate="yes" xml:space="preserve">
          <source>You can test a route multiple times with unique response objects by using &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/variables-and-aliases.html#Aliases&quot;&gt;aliases&lt;/a&gt; and &lt;a href=&quot;wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt;. Each time we use &lt;code&gt;cy.wait()&lt;/code&gt; for an alias, Cypress waits for the next nth matching request.</source>
          <target state="translated">您可以使用&lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/variables-and-aliases.html#Aliases&quot;&gt;别名&lt;/a&gt;和&lt;a href=&quot;wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt;使用唯一的响应对象多次测试路由。每次我们使用 &lt;code&gt;cy.wait()&lt;/code&gt; 作为别名时，赛普拉斯都会等待下一个第n个匹配请求。</target>
        </trans-unit>
        <trans-unit id="2fb0f582a4050b96bd8879a4624c30a616c80c95" translate="yes" xml:space="preserve">
          <source>You can test your application against different browsers and view the results under a single run within the Dashboard. Below, we simple name our groups the same name as the browser being tested:</source>
          <target state="translated">您可以针对不同的浏览器测试您的应用程序,并在Dashboard中查看单一运行的结果。下面,我们简单地将我们的组命名为与被测试的浏览器相同的名称。</target>
        </trans-unit>
        <trans-unit id="f598c2ccf2c64fff3b267ea99d6f81ec096ae000" translate="yes" xml:space="preserve">
          <source>You can tests specifying a specific &lt;a href=&quot;../tooling/reporters&quot;&gt;Mocha reporter&lt;/a&gt;.</source>
          <target state="translated">您可以测试指定特定的&lt;a href=&quot;../tooling/reporters&quot;&gt;Mocha记者&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4dc0d43325e06aca5a0d873b3d4344134575dbf1" translate="yes" xml:space="preserve">
          <source>You can think of Cypress as &amp;ldquo;queueing&amp;rdquo; every command. Eventually they&amp;rsquo;ll get run and in the exact order they were used, 100% of the time.</source>
          <target state="translated">您可以将赛普拉斯视为&amp;ldquo;排队&amp;rdquo;每个命令。最终，它们将开始运行，并完全按照使用它们的顺序（100％的时间）运行。</target>
        </trans-unit>
        <trans-unit id="54603838932f21824ed30912e6fb2f69afb7d0ca" translate="yes" xml:space="preserve">
          <source>You can think of the &lt;code&gt;cy.get('@users')&lt;/code&gt; as doing the same thing as &lt;a href=&quot;../../api/commands/wrap&quot;&gt;&lt;code&gt;cy.wrap(this.users)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">您可以认为 &lt;code&gt;cy.get('@users')&lt;/code&gt; 与&lt;a href=&quot;../../api/commands/wrap&quot;&gt; &lt;code&gt;cy.wrap(this.users)&lt;/code&gt; &lt;/a&gt;做相同的事情。</target>
        </trans-unit>
        <trans-unit id="ca47aeb19ed661c5051ca536eef4f865413b79de" translate="yes" xml:space="preserve">
          <source>You can transfer projects that you own to another &lt;a href=&quot;organizations&quot;&gt;organization&lt;/a&gt; you are a part of or to another user in the organization. Projects can only be transferred from the &lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;Dashboard Service&lt;/a&gt;.</source>
          <target state="translated">您可以将自己拥有的项目转移到您所属的另一个&lt;a href=&quot;organizations&quot;&gt;组织&lt;/a&gt;或组织中的另一个用户。项目只能从&lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;Dashboard Service&lt;/a&gt;传输。</target>
        </trans-unit>
        <trans-unit id="c0546ab31afc221a899fe7cd47ea1b34c5b58990" translate="yes" xml:space="preserve">
          <source>You can turn this off by passing &lt;code&gt;multiple: false&lt;/code&gt; to &lt;code&gt;.dblclick()&lt;/code&gt;.</source>
          <target state="translated">你可以通过关闭这个功能 &lt;code&gt;multiple: false&lt;/code&gt; 以 &lt;code&gt;.dblclick()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6fe7784508f1cad1a7d1e5aecbac9aff8099a369" translate="yes" xml:space="preserve">
          <source>You can turn this option off if the application or site you&amp;rsquo;re testing &lt;strong&gt;does not&lt;/strong&gt; implement these security measures. Additionally it&amp;rsquo;s possible that the patterns we search for may accidentally rewrite valid JS code. If that&amp;rsquo;s the case, please disable this option.</source>
          <target state="translated">如果您要测试的应用程序或站点&lt;strong&gt;未&lt;/strong&gt;实现这些安全措施，则可以关闭此选项。另外，我们搜索的模式可能会意外地重写有效的JS代码。如果是这种情况，请禁用此选项。</target>
        </trans-unit>
        <trans-unit id="21b2c3f1cde7a495e39b5f2474be703b35af77dc" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt; to wait on requests that end with network errors:</source>
          <target state="translated">您可以使用&lt;a href=&quot;wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; &lt;/a&gt;等待以网络错误结尾的请求：</target>
        </trans-unit>
        <trans-unit id="ff1d7d303c6b75ddbf9d379a5b40ec67323d99c1" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;Cypress.Cookies.preserveOnce()&lt;/code&gt; to preserve cookies through multiple tests.</source>
          <target state="translated">您可以使用 &lt;code&gt;Cypress.Cookies.preserveOnce()&lt;/code&gt; 通过多个测试来保存cookie。</target>
        </trans-unit>
        <trans-unit id="e8fbf0f35afe641f630c5e5a1c2bb8aa3d20bfc6" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;back&lt;/code&gt; or &lt;code&gt;forward&lt;/code&gt; to go one step back or forward. You could also navigate to a specific history position (&lt;code&gt;-1&lt;/code&gt; goes back one page, &lt;code&gt;1&lt;/code&gt; goes forward one page, etc).</source>
          <target state="translated">您可以使用 &lt;code&gt;back&lt;/code&gt; 或 &lt;code&gt;forward&lt;/code&gt; 或后退一步。您还可以导航到特定的历史记录位置（ &lt;code&gt;-1&lt;/code&gt; 后退一页， &lt;code&gt;1&lt;/code&gt; 后退一页，等等）。</target>
        </trans-unit>
        <trans-unit id="04ea80f173471d85895c6e0bd8b66c66d1296bda" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;cy.get()&lt;/code&gt; for aliases of primitives, regular objects, or even DOM elements.</source>
          <target state="translated">您可以将 &lt;code&gt;cy.get()&lt;/code&gt; 用于图元，常规对象甚至DOM元素的别名。</target>
        </trans-unit>
        <trans-unit id="74f3217dbd04db458f958ae18b022d8fad8457e1" translate="yes" xml:space="preserve">
          <source>You can use a space character in &lt;code&gt;cy.contains()&lt;/code&gt; to match text in the HTML that uses a non-breaking space entity &lt;code&gt;&amp;amp;nbsp;&lt;/code&gt;.</source>
          <target state="translated">您可以在 &lt;code&gt;cy.contains()&lt;/code&gt; 中使用空格字符来匹配使用不间断空格实体的HTML中的文本 &lt;code&gt;&amp;amp;nbsp;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="646b093ec95e3dcd86d6cee906caa2dc5f12a4fc" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;https://api.jquery.com/contains-selector/&quot;&gt;jQuery :contains&lt;/a&gt; selector to perform a case-sensitive text substring match.</source>
          <target state="translated">您可以使用&lt;a href=&quot;https://api.jquery.com/contains-selector/&quot;&gt;jQuery：contains&lt;/a&gt;选择器执行区分大小写的文本子字符串匹配。</target>
        </trans-unit>
        <trans-unit id="2f8c171cf96b96e43f2bf2f4e7d4b2ef52f45317" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;--env&lt;/code&gt; argument for &lt;a href=&quot;command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">您可以将 &lt;code&gt;--env&lt;/code&gt; 参数用于&lt;a href=&quot;command-line#cypress-run&quot;&gt; &lt;code&gt;cypress run&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="461eab789254757280fbe7008ba0fd099a02dc86" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;after:screenshot&lt;/code&gt; event to do things like:</source>
          <target state="translated">您可以使用 &lt;code&gt;after:screenshot&lt;/code&gt; 事件执行以下操作：</target>
        </trans-unit>
        <trans-unit id="6a22587d009d55d15f0dff907cab2634f8adcb22" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;before:browser:launch&lt;/code&gt; event to do things like:</source>
          <target state="translated">您可以使用 &lt;code&gt;before:browser:launch&lt;/code&gt; 事件执行以下操作：</target>
        </trans-unit>
        <trans-unit id="d063686ec5c268bcf7070a7e5b7a25e195f90a25" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;file:preprocessor&lt;/code&gt; event to do things like:</source>
          <target state="translated">您可以使用 &lt;code&gt;file:preprocessor&lt;/code&gt; 事件执行以下操作：</target>
        </trans-unit>
        <trans-unit id="b3fcf7004a5109e1aedf7709d79de417e6704366" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;req.reply()&lt;/code&gt; function to dynamically control the response to a request.</source>
          <target state="translated">您可以使用 &lt;code&gt;req.reply()&lt;/code&gt; 函数动态控制对请求的响应。</target>
        </trans-unit>
        <trans-unit id="d27bfcd47408047796dc3f5c38d6007a2c9bb94d" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;res.send()&lt;/code&gt; function to dynamically control the incoming response. Also, any modifications to &lt;code&gt;res&lt;/code&gt; will be persisted when the response is sent to the browser.</source>
          <target state="translated">您可以使用 &lt;code&gt;res.send()&lt;/code&gt; 函数动态控制传入的响应。另外，当响应发送到浏览器时，对 &lt;code&gt;res&lt;/code&gt; 的任何修改都将保留。</target>
        </trans-unit>
        <trans-unit id="cd032a1b23aef5cfe1bad82782cb9e315a1835ee" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;task&lt;/code&gt; event to do things like:</source>
          <target state="translated">您可以使用 &lt;code&gt;task&lt;/code&gt; 事件执行以下操作：</target>
        </trans-unit>
        <trans-unit id="2888ec9200752a82767de747b9cba4649fa2059c" translate="yes" xml:space="preserve">
          <source>You can use the CLI tool to run Cypress in CI. The documentation for this needs to be written, but it will be very simple to do. You will robably only have to write 2 lines in your CI scripts to run Cypress.</source>
          <target state="translated">你可以使用CLI工具在CI中运行Cypress。这方面的文档需要编写,但做起来非常简单。你可能只需要在你的CI脚本中写两行就可以运行Cypress。</target>
        </trans-unit>
        <trans-unit id="5547da28e894548399a5fa22b4b50847593cc98c" translate="yes" xml:space="preserve">
          <source>You can use the Developer Tools while your tests run, you can see every console message, every network request. You can inspect elements, and you can even use debugger statements in your spec code or your application code. There is no fidelity loss - you can use all the tools you&amp;rsquo;re already comfortable with. This enables you to test and develop all at the same time.</source>
          <target state="translated">您可以在测试运行时使用开发人员工具，可以看到每个控制台消息，每个网络请求。您可以检查元素，甚至可以在规范代码或应用程序代码中使用调试器语句。没有保真度损失-您可以使用所有已经熟悉的工具。这使您可以同时进行测试和开发。</target>
        </trans-unit>
        <trans-unit id="c184cef359b33488d0c085a316fc7e2907efea81" translate="yes" xml:space="preserve">
          <source>You can use the new environment variable &lt;a href=&quot;../guides/command-line#Debugging-commands&quot;&gt;&lt;code&gt;DEBUG=cypress:cli&lt;/code&gt;&lt;/a&gt; to see debugging output from the CLI.</source>
          <target state="translated">您可以使用新的环境变量&lt;a href=&quot;../guides/command-line#Debugging-commands&quot;&gt; &lt;code&gt;DEBUG=cypress:cli&lt;/code&gt; &lt;/a&gt;查看CLI的调试输出。</target>
        </trans-unit>
        <trans-unit id="22738064dc0055e3576f672f1d93cd11d2295f09" translate="yes" xml:space="preserve">
          <source>You can use the route callback to modify the request before it is sent.</source>
          <target state="translated">你可以在发送请求之前使用路由回调来修改请求。</target>
        </trans-unit>
        <trans-unit id="89e28fa754123a8e59c649c7722e1de8b000fb3d" translate="yes" xml:space="preserve">
          <source>You can wrap promises returned by the application code. Cypress commands will automatically wait for the promise to resolve before continuing with the yielded value to the next command or assertion. See the &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Logging-In&quot;&gt;Logging in using application code&lt;/a&gt; recipe for the full example.</source>
          <target state="translated">您可以包装应用程序代码返回的promise。赛普拉斯命令将自动等待promise解析，然后继续将产生的值用于下一个命令或声明。有关完整示例，请参见&lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Logging-In&quot;&gt;使用应用程序登录代码&lt;/a&gt;食谱。</target>
        </trans-unit>
        <trans-unit id="9f1595dbd98eb985f69549e9fe4fc0d58d6c4474" translate="yes" xml:space="preserve">
          <source>You can write your own custom reporter which Cypress can use in CI.</source>
          <target state="translated">你可以编写自己的自定义报告器,Cypress可以在CI中使用。</target>
        </trans-unit>
        <trans-unit id="3f43a3a230ce840c57b1d2e85fba58af6b4d7348" translate="yes" xml:space="preserve">
          <source>You cannot &amp;lsquo;accidentally&amp;rsquo; forget to return or chain a command.</source>
          <target state="translated">您不能&amp;ldquo;偶然地&amp;rdquo;忘记返回或链接命令。</target>
        </trans-unit>
        <trans-unit id="5ad860ac0e8b6e451fbd07b0e592e3e2409c1b2f" translate="yes" xml:space="preserve">
          <source>You cannot &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; two different super domains within a single test. Example: &lt;code&gt;cy.visit('https://google.com').visit('https://apple.com')&lt;/code&gt;. There shouldn&amp;rsquo;t be any reason you ever need to do this in a single test, if you do, you should make these two separate tests.</source>
          <target state="translated">您不能在单个测试中&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;两个不同的超级域。例如： &lt;code&gt;cy.visit('https://google.com').visit('https://apple.com')&lt;/code&gt; 。您应该没有任何理由需要在单个测试中执行此操作，如果这样做，则应该进行这两个单独的测试。</target>
        </trans-unit>
        <trans-unit id="edcbd74da8496cd823f72d660c829af32b64e41f" translate="yes" xml:space="preserve">
          <source>You cannot &lt;strong&gt;race&lt;/strong&gt; or run multiple commands at the same time (in parallel).</source>
          <target state="translated">你不能&lt;strong&gt;参加比赛&lt;/strong&gt;或同时运行多个命令（平行）。</target>
        </trans-unit>
        <trans-unit id="1e175a922719286679bd036516770e57c9585aa4" translate="yes" xml:space="preserve">
          <source>You cannot accidentally forget to return or chain a command</source>
          <target state="translated">你不能不小心忘记了返回或连锁命令。</target>
        </trans-unit>
        <trans-unit id="1a4cbcf681c38f6f8994caa502d9bab3bcb147e3" translate="yes" xml:space="preserve">
          <source>You cannot add a &lt;code&gt;.catch&lt;/code&gt; error handler to a failed command</source>
          <target state="translated">您不能将 &lt;code&gt;.catch&lt;/code&gt; 错误处理程序添加到失败的命令</target>
        </trans-unit>
        <trans-unit id="60932948e6aa35c099d499cc17a967d91a40855e" translate="yes" xml:space="preserve">
          <source>You cannot add a &lt;code&gt;.catch&lt;/code&gt; error handler to a failed command.</source>
          <target state="translated">您不能将 &lt;code&gt;.catch&lt;/code&gt; 错误处理程序添加到失败的命令。</target>
        </trans-unit>
        <trans-unit id="f06445bda2c15c330aebc4c0ec7ef389b2db8965" translate="yes" xml:space="preserve">
          <source>You cannot do conditional testing on the DOM unless you are either:</source>
          <target state="translated">你不能在DOM上做条件测试,除非你是任一。</target>
        </trans-unit>
        <trans-unit id="17fec2f5716bb410d015cec146346f2fa3bb8898" translate="yes" xml:space="preserve">
          <source>You cannot race or run multiple commands at the same time</source>
          <target state="translated">您不能同时比赛或运行多个命令。</target>
        </trans-unit>
        <trans-unit id="41920e271f7f01a8967101548cb3191382c31125" translate="yes" xml:space="preserve">
          <source>You cannot run tests on a run that has been complete for that long.</source>
          <target state="translated">你不能在一个已经完成了那么久的运行上运行测试。</target>
        </trans-unit>
        <trans-unit id="3163e436a13ac260b88f565ac76aea617306ea74" translate="yes" xml:space="preserve">
          <source>You cannot use Cypress to drive &lt;a href=&quot;#Multiple-browsers-open-at-the-same-time&quot;&gt;two browsers at the same time&lt;/a&gt;.</source>
          <target state="translated">您不能使用赛普拉斯同时驱动&lt;a href=&quot;#Multiple-browsers-open-at-the-same-time&quot;&gt;两个浏览器&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8469dc23f44adc095a60b2e9c81980693ea63ea2" translate="yes" xml:space="preserve">
          <source>You cannot use a &lt;code&gt;this.*&lt;/code&gt; reference until the &lt;code&gt;.as()&lt;/code&gt; command runs.</source>
          <target state="translated">在 &lt;code&gt;.as()&lt;/code&gt; 命令运行之前，您不能使用 &lt;code&gt;this.*&lt;/code&gt; 参考。</target>
        </trans-unit>
        <trans-unit id="158d8ab9f0429c198eae4f5363176f454dcf7c17" translate="yes" xml:space="preserve">
          <source>You cannot use the &lt;a href=&quot;../guides/command-line#cypress-run-parallel&quot;&gt;&lt;code&gt;--parallel&lt;/code&gt;&lt;/a&gt; flag with this group.</source>
          <target state="translated">您不能在该组中使用&lt;a href=&quot;../guides/command-line#cypress-run-parallel&quot;&gt; &lt;code&gt;--parallel&lt;/code&gt; &lt;/a&gt;标志。</target>
        </trans-unit>
        <trans-unit id="af7529afa2e0c4975a51584b9f98767da8553313" translate="yes" xml:space="preserve">
          <source>You could &lt;code&gt;cy.request()&lt;/code&gt; an endpoint on your server that tells you what email has been queued or delivered. That would give you a programmatic way to know without involving the UI. Your server would have to expose this endpoint.</source>
          <target state="translated">您可以在服务器上 &lt;code&gt;cy.request()&lt;/code&gt; 端点，该端点告诉您已排队或发送了哪些电子邮件。这将为您提供一种编程方式的信息，而无需使用UI。您的服务器必须公开此端点。</target>
        </trans-unit>
        <trans-unit id="1f1ce0e43e8afcd56b4e2ae3464b3f0e4420b951" translate="yes" xml:space="preserve">
          <source>You could also restore by using &lt;a href=&quot;invoke&quot;&gt;&lt;code&gt;.invoke()&lt;/code&gt;&lt;/a&gt; to invoke the &lt;code&gt;restore&lt;/code&gt; function.</source>
          <target state="translated">您还可以通过使用&lt;a href=&quot;invoke&quot;&gt; &lt;code&gt;.invoke()&lt;/code&gt; &lt;/a&gt;来调用 &lt;code&gt;restore&lt;/code&gt; 功能来进行还原。</target>
        </trans-unit>
        <trans-unit id="1987762737a03f1eaa4c8d66fede66fbd050bff0" translate="yes" xml:space="preserve">
          <source>You could also use &lt;code&gt;cy.request()&lt;/code&gt; to a 3rd party server that exposes an API to read off emails. You will then need the proper authentication credentials, which your server could provide, or you could use environment variables.</source>
          <target state="translated">您还可以将 &lt;code&gt;cy.request()&lt;/code&gt; 用于第三方服务器，该服务器公开API以读取电子邮件。然后，您将需要服务器可以提供的适当的身份验证凭据，或者可以使用环境变量。</target>
        </trans-unit>
        <trans-unit id="104e8ae8791a932080c229fd93a30dd054794043" translate="yes" xml:space="preserve">
          <source>You could have the server generate all of the fixture stubs for you ahead of time. This means their data will reflect what the server will actually send.</source>
          <target state="translated">您可以让服务器提前为您生成所有的夹具存根。这意味着他们的数据将反映服务器实际发送的内容。</target>
        </trans-unit>
        <trans-unit id="7910ea53f7005e53f967ab1794dc027d679ae72d" translate="yes" xml:space="preserve">
          <source>You could now swap out configuration + environment variables like so:</source>
          <target state="translated">你现在可以像这样交换配置+环境变量。</target>
        </trans-unit>
        <trans-unit id="4fb2e4df8c0656d511756a2c689acc6e3432980b" translate="yes" xml:space="preserve">
          <source>You could technically write a functional test asserting the CSS properties using the &lt;a href=&quot;../references/assertions#CSS&quot;&gt;&lt;code&gt;have.css&lt;/code&gt; assertion&lt;/a&gt;, but these may quickly become cumbersome to write and maintain, especially when visual styles rely on a lot of CSS styles.</source>
          <target state="translated">从技术上讲，您可以使用&lt;a href=&quot;../references/assertions#CSS&quot;&gt; &lt;code&gt;have.css&lt;/code&gt; 断言&lt;/a&gt;编写一个功能测试来声明CSS属性，但是编写和维护这些属性可能很快变得很麻烦，尤其是当可视样式依赖于许多CSS样式时。</target>
        </trans-unit>
        <trans-unit id="f56cfbee519983ca12118924a1e8d72929fe3a73" translate="yes" xml:space="preserve">
          <source>You did not pass the &lt;code&gt;--parallel&lt;/code&gt; flag, but this run&amp;rsquo;s group was originally created with the &lt;code&gt;--parallel&lt;/code&gt; flag.</source>
          <target state="translated">您没有传递 &lt;code&gt;--parallel&lt;/code&gt; 标志，但是此运行的组最初是使用 &lt;code&gt;--parallel&lt;/code&gt; 标志创建的。</target>
        </trans-unit>
        <trans-unit id="a0687c1cb29102e05fe935b827b4fb58b626daf3" translate="yes" xml:space="preserve">
          <source>You do not have internet. Please ensure you have connectivity then try again.</source>
          <target state="translated">你没有网络。请确保你有连接,然后再试。</target>
        </trans-unit>
        <trans-unit id="0ebb08807f8467c3baa92aab177136cfe19f916d" translate="yes" xml:space="preserve">
          <source>You don&amp;rsquo;t have access to its &lt;code&gt;stdout&lt;/code&gt; or logs</source>
          <target state="translated">您无权访问其 &lt;code&gt;stdout&lt;/code&gt; 或日志</target>
        </trans-unit>
        <trans-unit id="0126e92e25485f78c3532cec1498597ea32832b7" translate="yes" xml:space="preserve">
          <source>You don&amp;rsquo;t have to do any work on the server. Your application will have no idea its requests are being stubbed, so there are &lt;em&gt;no code changes&lt;/em&gt; needed.</source>
          <target state="translated">您无需在服务器上做任何工作。您的应用程序不知道其请求已被存根，因此&lt;em&gt;无需更改任何代码&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="8fd52a384943e856094a196daec57ed33db33601" translate="yes" xml:space="preserve">
          <source>You don&amp;rsquo;t need to write &lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should('exist')&lt;/code&gt;&lt;/a&gt; after a DOM based command, unless you chain extra &lt;code&gt;.should()&lt;/code&gt; assertions.</source>
          <target state="translated">您无需在基于DOM的命令后编写&lt;a href=&quot;../../api/commands/should&quot;&gt; &lt;code&gt;.should('exist')&lt;/code&gt; &lt;/a&gt;，除非您链接了额外的 &lt;code&gt;.should()&lt;/code&gt; 断言。</target>
        </trans-unit>
        <trans-unit id="59ae0f46cd5028c64357005b637da1e0b2ab2790" translate="yes" xml:space="preserve">
          <source>You generally stub a function when it has side effects you are trying to control.</source>
          <target state="translated">当一个函数有你想控制的副作用时,你一般会支起它。</target>
        </trans-unit>
        <trans-unit id="d99f377b674c94b3286d6cb5e7ecaa062dc7d38e" translate="yes" xml:space="preserve">
          <source>You have &lt;strong&gt;throttled&lt;/strong&gt; or &lt;strong&gt;debounced&lt;/strong&gt; functions which you want to control.</source>
          <target state="translated">你已经&lt;strong&gt;扼杀&lt;/strong&gt;或&lt;strong&gt;抖&lt;/strong&gt;要控制功能。</target>
        </trans-unit>
        <trans-unit id="fc64cd1b99c70deaf9cc3fe22b04c3013ad0e431" translate="yes" xml:space="preserve">
          <source>You have a function that accepts a callback, and want to invoke the callback.</source>
          <target state="translated">你有一个接受回调的函数,并想调用回调。</target>
        </trans-unit>
        <trans-unit id="cd3f4f0ebd0dca22a1dcd447a664a29c3b6980f0" translate="yes" xml:space="preserve">
          <source>You have a function that wraps &lt;code&gt;window.location&lt;/code&gt; and don&amp;rsquo;t want your application to be navigated.</source>
          <target state="translated">您有一个包装 &lt;code&gt;window.location&lt;/code&gt; 的函数，并且不希望浏览您的应用程序。</target>
        </trans-unit>
        <trans-unit id="09ed1d11298a43c9ce48b38e37047d88a82a48ce" translate="yes" xml:space="preserve">
          <source>You have to background the process</source>
          <target state="translated">你必须要有背景的过程</target>
        </trans-unit>
        <trans-unit id="48635d7501113c60085d1e2ec38cd03da6b1eddf" translate="yes" xml:space="preserve">
          <source>You have two async functions &lt;code&gt;async function foo() {...}&lt;/code&gt; and &lt;code&gt;async function bar() {...}&lt;/code&gt;</source>
          <target state="translated">您有两个异步函数 &lt;code&gt;async function foo() {...}&lt;/code&gt; 和 &lt;code&gt;async function bar() {...}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="88c8d15827b01794b5cc30ea2966ee50d741af27" translate="yes" xml:space="preserve">
          <source>You lose access to it via terminal</source>
          <target state="translated">你通过终端机失去了对它的访问</target>
        </trans-unit>
        <trans-unit id="9b66b80b4d17b1ce5c1c42399a3f53749b4fb9f6" translate="yes" xml:space="preserve">
          <source>You may also specify the relative path of an html file. The path is relative to the root</source>
          <target state="translated">你也可以指定html文件的相对路径。该路径是相对于根目录的</target>
        </trans-unit>
        <trans-unit id="a75c9d45f4847e30614a7f9015285087441860f6" translate="yes" xml:space="preserve">
          <source>You may ask about this functionality like this:</source>
          <target state="translated">你可以这样问这个功能。</target>
        </trans-unit>
        <trans-unit id="6a678e4287be446ca7bd68c1b4ec4b567229969f" translate="yes" xml:space="preserve">
          <source>You may be wondering - why can&amp;rsquo;t I just visit my application that&amp;rsquo;s already in production?</source>
          <target state="translated">您可能想知道-为什么我不能只访问已经在生产中的应用程序？</target>
        </trans-unit>
        <trans-unit id="fe46960c9b571f01fb886747f9b86d67017597a7" translate="yes" xml:space="preserve">
          <source>You may find it easier to add the cypress command to the &lt;code&gt;scripts&lt;/code&gt; object in your &lt;code&gt;package.json&lt;/code&gt; file and call it from an &lt;a href=&quot;https://docs.npmjs.com/cli/run-script.html&quot;&gt;&lt;code&gt;npm run&lt;/code&gt; script&lt;/a&gt;.</source>
          <target state="translated">您可能会发现将cypress命令添加到 &lt;code&gt;package.json&lt;/code&gt; 文件中的 &lt;code&gt;scripts&lt;/code&gt; 对象并从&lt;a href=&quot;https://docs.npmjs.com/cli/run-script.html&quot;&gt; &lt;code&gt;npm run&lt;/code&gt; &lt;/a&gt; script调用它更容易。</target>
        </trans-unit>
        <trans-unit id="5c7097da7005bfcf247b0b587beb54947fc36c5e" translate="yes" xml:space="preserve">
          <source>You may find yourself struggling to write good selectors because:</source>
          <target state="translated">你可能会发现自己很难写出好的选题,因为。</target>
        </trans-unit>
        <trans-unit id="44d1781ba76280835315dcc743d2074be13d561f" translate="yes" xml:space="preserve">
          <source>You may receive this error when trying to run Cypress tests in &lt;a href=&quot;../guides/continuous-integration&quot;&gt;Continuous Integration&lt;/a&gt;. This means that you did not pass a specific record key to: &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run --record&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">尝试在&lt;a href=&quot;../guides/continuous-integration&quot;&gt;持续集成中&lt;/a&gt;运行赛普拉斯测试时，您可能会收到此错误。这意味着您没有将特定的记录密钥传递给：&lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt; &lt;code&gt;cypress run --record&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f84cb86761cfe44218be0931dbb8e5d611e28b8d" translate="yes" xml:space="preserve">
          <source>You may see a variation of this message for 4 different reasons:</source>
          <target state="translated">你可能会因为4个不同的原因看到这个信息的变化。</target>
        </trans-unit>
        <trans-unit id="9cf846455ac81f29a25c1ffcfc5b6fa7169829e5" translate="yes" xml:space="preserve">
          <source>You may think this works:</source>
          <target state="translated">你可能认为这很有效。</target>
        </trans-unit>
        <trans-unit id="39fa45d8c9330205ec0eead9254882946c668316" translate="yes" xml:space="preserve">
          <source>You may think to yourself&amp;hellip; okay fine, but 4 seconds - man that&amp;rsquo;s not enough. Network requests could be slow, let&amp;rsquo;s bump it up to 1 minute!</source>
          <target state="translated">您可能会想自己&amp;hellip;好吧，但是4秒钟-那还不够。网络请求可能很慢，让我们最多延迟1分钟！</target>
        </trans-unit>
        <trans-unit id="0f633f517449880b309666041e3d8b9f5dfc3d38" translate="yes" xml:space="preserve">
          <source>You may want to access 3rd party servers in several situations:</source>
          <target state="translated">在几种情况下,你可能需要访问第三方服务器。</target>
        </trans-unit>
        <trans-unit id="f9be79bbd4186950ab6781451ae03f3d8d688a42" translate="yes" xml:space="preserve">
          <source>You may want to define the &lt;code&gt;cy.route()&lt;/code&gt; after receiving the fixture and working with its data.</source>
          <target state="translated">您可能希望在接收到灯具并处理其数据之后定义 &lt;code&gt;cy.route()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b172892f9e07d66df055122a6321a6d5cfc32de4" translate="yes" xml:space="preserve">
          <source>You may want to mask some values passed to the &lt;a href=&quot;../commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; command so that sensitive data does not display in screenshots or videos of your test run. This example overwrites the &lt;a href=&quot;../commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; command to allow you to mask sensitive data in the Test Runner&amp;rsquo;s Command Log.</source>
          <target state="translated">您可能需要屏蔽传递给&lt;a href=&quot;../commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;命令的某些值，以便敏感数据不会显示在测试运行的屏幕截图或视频中。本示例覆盖&lt;a href=&quot;../commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;命令，以允许您屏蔽&amp;ldquo;测试运行器&amp;rdquo;的&amp;ldquo;命令日志&amp;rdquo;中的敏感数据。</target>
        </trans-unit>
        <trans-unit id="a3b6f354f217f7055bd9c0f277b95a4e8439bfd8" translate="yes" xml:space="preserve">
          <source>You might also see this phrased as &amp;ldquo;Given, When, Then&amp;rdquo;, or &amp;ldquo;Arrange, Act, Assert&amp;rdquo;. The idea is simple: first you put the application into a specific state, then you take some action in the application that causes it to change, and finally you check the resulting application state.</source>
          <target state="translated">您可能还会看到该短语为&amp;ldquo;给出，何时，然后&amp;rdquo;或&amp;ldquo;安排，行动，断言&amp;rdquo;。这个想法很简单：首先将应用程序置于特定状态，然后在应用程序中采取措施使其发生更改，最后检查所产生的应用程序状态。</target>
        </trans-unit>
        <trans-unit id="f4913f54f941c08d39e498032ec2a0d7b32d57c9" translate="yes" xml:space="preserve">
          <source>You might be wondering:</source>
          <target state="translated">你可能想知道。</target>
        </trans-unit>
        <trans-unit id="95121d813021385cf7a3ff4b615ae409e5088641" translate="yes" xml:space="preserve">
          <source>You might notice that if you already have the browser open you will see two of the same browser icons in your Dock.</source>
          <target state="translated">你可能会注意到,如果你已经打开了浏览器,你会在Dock中看到两个相同的浏览器图标。</target>
        </trans-unit>
        <trans-unit id="08fc24c39a1287937eb61acb657ec7fb3f6187a7" translate="yes" xml:space="preserve">
          <source>You must use the &lt;a href=&quot;../guides/command-line#cypress-run-parallel&quot;&gt;&lt;code&gt;--parallel&lt;/code&gt;&lt;/a&gt; flag with this group.</source>
          <target state="translated">您必须在该组中使用&lt;a href=&quot;../guides/command-line#cypress-run-parallel&quot;&gt; &lt;code&gt;--parallel&lt;/code&gt; &lt;/a&gt;标志。</target>
        </trans-unit>
        <trans-unit id="b9dbe38652921775eaa4cbd40019c5354abac710" translate="yes" xml:space="preserve">
          <source>You need to have your Developer Tools open for &lt;code&gt;.debug()&lt;/code&gt; to hit the breakpoint.</source>
          <target state="translated">您需要为 &lt;code&gt;.debug()&lt;/code&gt; 打开开发人员工具才能达到断点。</target>
        </trans-unit>
        <trans-unit id="0734072bd9e8d93ee9f801ed02f73ec0410a091a" translate="yes" xml:space="preserve">
          <source>You need to install any peer dependencies the reporter requires, even if they&amp;rsquo;re bundled with Cypress. For example, &lt;a href=&quot;https://github.com/adamgruber/mochawesome&quot;&gt;mochawesome&lt;/a&gt; requires &lt;code&gt;mocha&lt;/code&gt; as a peer dependency. You will need to install &lt;code&gt;mocha&lt;/code&gt; as a dev dependency of your own project for it to work.</source>
          <target state="translated">您需要安装报告程序需要的任何对等依赖项，即使它们与赛普拉斯捆绑在一起也是如此。例如，&lt;a href=&quot;https://github.com/adamgruber/mochawesome&quot;&gt;mochawesome&lt;/a&gt;需要将 &lt;code&gt;mocha&lt;/code&gt; 作为对等依赖项。您需要将 &lt;code&gt;mocha&lt;/code&gt; 安装为您自己项目的dev依赖项才能运行。</target>
        </trans-unit>
        <trans-unit id="9a88a6f0dfa35d80a802126d5d293096cc2b5edc" translate="yes" xml:space="preserve">
          <source>You need to make sure &lt;code&gt;foo()&lt;/code&gt; has resolved first before invoking &lt;code&gt;bar()&lt;/code&gt;</source>
          <target state="translated">您需要确保在调用 &lt;code&gt;bar()&lt;/code&gt; 之前先解析 &lt;code&gt;foo()&lt;/code&gt; （）</target>
        </trans-unit>
        <trans-unit id="6cee7a456e0bad2ec1d061cd4635c894f4e610a9" translate="yes" xml:space="preserve">
          <source>You need to manually move your existing test files from &lt;code&gt;tests&lt;/code&gt; into &lt;code&gt;cypress/integration&lt;/code&gt;.</source>
          <target state="translated">您需要将现有的测试文件从 &lt;code&gt;tests&lt;/code&gt; 手动移动到 &lt;code&gt;cypress/integration&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="2c28cd071e011226995eb9347d282026c3679bd0" translate="yes" xml:space="preserve">
          <source>You need to rewrite this as:</source>
          <target state="translated">你要把这个改写成:</target>
        </trans-unit>
        <trans-unit id="e710bff1748ea4e2b242bf9fef1c09c2b3d83a5c" translate="yes" xml:space="preserve">
          <source>You no longer have to log in again after updating. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/305&quot;&gt;#305&lt;/a&gt;.</source>
          <target state="translated">更新后，您不再需要再次登录。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/305&quot;&gt;＃305&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4d3a6cbca443450a553d9932da54cb2266af6112" translate="yes" xml:space="preserve">
          <source>You no longer have to use &lt;code&gt;cypress get:key&lt;/code&gt; to get your Record Key. We now display this in your &amp;ldquo;Settings&amp;rdquo; tab and also in the &lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;Dashboard&lt;/a&gt;.</source>
          <target state="translated">您不再需要使用 &lt;code&gt;cypress get:key&lt;/code&gt; 来获取Record Key。现在，我们将其显示在&amp;ldquo;设置&amp;rdquo;选项卡以及&amp;ldquo; &lt;a href=&quot;https://on.cypress.io/dashboard&quot;&gt;仪表板&amp;rdquo;中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="48958730eb8bc8cabd82e9c07779575aeaf452ff" translate="yes" xml:space="preserve">
          <source>You now use &lt;code&gt;npm&lt;/code&gt; to manage Cypress versions like every other dev dependency.</source>
          <target state="translated">现在，您可以像其他所有dev依赖项一样使用 &lt;code&gt;npm&lt;/code&gt; 来管理Cypress版本。</target>
        </trans-unit>
        <trans-unit id="e396e64354d20cde2f86731e3f88a57f8b327afa" translate="yes" xml:space="preserve">
          <source>You only need to do one thing to know whether you&amp;rsquo;ve coupled your tests incorrectly, or if one test is relying on the state of a previous one.</source>
          <target state="translated">您只需要做一件事就可以知道您是否正确地耦合了测试，或者一个测试是否依赖于前一个测试的状态。</target>
        </trans-unit>
        <trans-unit id="589ef582e116899aae5e91f03f8ca34cad7e2a28" translate="yes" xml:space="preserve">
          <source>You passed the --record flag but did not provide us your Record Key.</source>
          <target state="translated">您通过了--记录标志,但没有向我们提供您的记录密钥。</target>
        </trans-unit>
        <trans-unit id="78239b4a65908f84da00e65e60e8b206d9e91939" translate="yes" xml:space="preserve">
          <source>You passed the &lt;a href=&quot;../guides/command-line#cypress-run-group-lt-name-gt&quot;&gt;&lt;code&gt;--group&lt;/code&gt;&lt;/a&gt; flag, but this group name has already been used for this run.</source>
          <target state="translated">您传递了&lt;a href=&quot;../guides/command-line#cypress-run-group-lt-name-gt&quot;&gt; &lt;code&gt;--group&lt;/code&gt; &lt;/a&gt;标志，但是此组名已用于此运行。</target>
        </trans-unit>
        <trans-unit id="75d33c8651c8ffd3598e84963bc965c189a42e47" translate="yes" xml:space="preserve">
          <source>You passed the &lt;a href=&quot;../guides/command-line#cypress-run-group-lt-name-gt&quot;&gt;&lt;code&gt;--group&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../guides/command-line#cypress-run-parallel&quot;&gt;&lt;code&gt;--parallel&lt;/code&gt;&lt;/a&gt; flag but we could not automatically determine or generate a &lt;code&gt;ciBuildId&lt;/code&gt;.</source>
          <target state="translated">你通过了&lt;a href=&quot;../guides/command-line#cypress-run-group-lt-name-gt&quot;&gt; &lt;code&gt;--group&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../guides/command-line#cypress-run-parallel&quot;&gt; &lt;code&gt;--parallel&lt;/code&gt; &lt;/a&gt;标志，但我们无法自动确定或生成 &lt;code&gt;ciBuildId&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1d72d1bb7deee67e6e8859365b81b9519021bf15" translate="yes" xml:space="preserve">
          <source>You passed the &lt;a href=&quot;../guides/command-line#cypress-run-parallel&quot;&gt;&lt;code&gt;--parallel&lt;/code&gt;&lt;/a&gt; flag, but we do not parallelize tests across different environments.</source>
          <target state="translated">您通过了&lt;a href=&quot;../guides/command-line#cypress-run-parallel&quot;&gt; &lt;code&gt;--parallel&lt;/code&gt; &lt;/a&gt;标志，但是我们没有在不同环境中并行化测试。</target>
        </trans-unit>
        <trans-unit id="4db5b7a17552c77c6c3eeb0704ccf24740830d32" translate="yes" xml:space="preserve">
          <source>You passed the &lt;code&gt;--ci-build-id&lt;/code&gt; flag but did not provide either a &lt;a href=&quot;../guides/command-line#cypress-run-group-lt-name-gt&quot;&gt;&lt;code&gt;--group&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../guides/command-line#cypress-run-parallel&quot;&gt;&lt;code&gt;--parallel&lt;/code&gt;&lt;/a&gt; flag.</source>
          <target state="translated">您通过 &lt;code&gt;--ci-build-id&lt;/code&gt; 标志，但没有提供任何一个&lt;a href=&quot;../guides/command-line#cypress-run-group-lt-name-gt&quot;&gt; &lt;code&gt;--group&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../guides/command-line#cypress-run-parallel&quot;&gt; &lt;code&gt;--parallel&lt;/code&gt; &lt;/a&gt;标志。</target>
        </trans-unit>
        <trans-unit id="c30ac9616ad11c60c23cbcbe827fdb05052af1ca" translate="yes" xml:space="preserve">
          <source>You passed the &lt;code&gt;--ci-build-id&lt;/code&gt;, &lt;a href=&quot;../guides/command-line#cypress-run-group-lt-name-gt&quot;&gt;&lt;code&gt;--group&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../guides/command-line#cypress-run-parallel&quot;&gt;&lt;code&gt;--parallel&lt;/code&gt;&lt;/a&gt; flag without also passing the &lt;code&gt;--record&lt;/code&gt; flag.</source>
          <target state="translated">您传递了 &lt;code&gt;--ci-build-id&lt;/code&gt; ，&lt;a href=&quot;../guides/command-line#cypress-run-group-lt-name-gt&quot;&gt; &lt;code&gt;--group&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../guides/command-line#cypress-run-parallel&quot;&gt; &lt;code&gt;--parallel&lt;/code&gt; &lt;/a&gt;标志，但未同时传递 &lt;code&gt;--record&lt;/code&gt; 标志。</target>
        </trans-unit>
        <trans-unit id="f65ab52a54959d7f8d0a3998f526abfba2e8c6e0" translate="yes" xml:space="preserve">
          <source>You passed the &lt;code&gt;--parallel&lt;/code&gt; flag, but this run group was originally created without the &lt;code&gt;--parallel&lt;/code&gt; flag.</source>
          <target state="translated">您传递了 &lt;code&gt;--parallel&lt;/code&gt; 标志，但是此运行组最初是在没有 &lt;code&gt;--parallel&lt;/code&gt; 标志的情况下创建的。</target>
        </trans-unit>
        <trans-unit id="24efcae6801e94ebb8d9e6b8fd0fea53a5457fac" translate="yes" xml:space="preserve">
          <source>You passed the &lt;code&gt;--record&lt;/code&gt; flag but did not provide us your Record Key.</source>
          <target state="translated">您通过了 &lt;code&gt;--record&lt;/code&gt; 标志，但未向我们提供您的记录密钥。</target>
        </trans-unit>
        <trans-unit id="49267bcbfbe5992865cc05e384fc5972793a6cb5" translate="yes" xml:space="preserve">
          <source>You purposefully &lt;strong&gt;cannot&lt;/strong&gt; do anything useful with the return value from a command. Commands are enqueued and managed entirely behind the scenes.</source>
          <target state="translated">您故意&lt;strong&gt;无法&lt;/strong&gt;使用命令的返回值做任何有用的事情。命令完全在后台排队和管理。</target>
        </trans-unit>
        <trans-unit id="7ea79327fedbec3620adf1bb96fcb1a743bf9a73" translate="yes" xml:space="preserve">
          <source>You rarely have to ever use &lt;code&gt;const&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt;, or &lt;code&gt;var&lt;/code&gt; in Cypress. If you&amp;rsquo;re using them, it&amp;rsquo;s usually a sign you&amp;rsquo;re doing it wrong.</source>
          <target state="translated">在Cypress中，您几乎不必使用 &lt;code&gt;const&lt;/code&gt; ， &lt;code&gt;let&lt;/code&gt; 或 &lt;code&gt;var&lt;/code&gt; 。如果使用它们，通常表明您做错了。</target>
        </trans-unit>
        <trans-unit id="60ff395e16e5c981e5372977d32a1c364a7c4b9f" translate="yes" xml:space="preserve">
          <source>You should think of assertions as &lt;strong&gt;guards&lt;/strong&gt;.</source>
          <target state="translated">您应该将断言视为&lt;strong&gt;警卫&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="8af7f403d48a3a31f5827244a6be423b803862eb" translate="yes" xml:space="preserve">
          <source>You should think of failed commands in Cypress as akin to uncaught exceptions in server side code. It is not possible to try to recover in those scenarios because the system has transitioned to an unreliable state. Instead you generally always opt to crash and log. When Cypress fails the test - that is exactly what it is doing. Bailing out, skipping any remaining commands in the test, and logging out the failure.</source>
          <target state="translated">你应该把Cypress中失败的命令看作是类似于服务器端代码中未捕获的异常。在这些情况下不可能尝试恢复,因为系统已经过渡到不可靠的状态。相反,你一般总是选择崩溃并记录。当Cypress测试失败时--这正是它正在做的事情。Bailing out,跳过测试中的任何剩余命令,并将失败记录下来。</target>
        </trans-unit>
        <trans-unit id="35a94309d47a10e1bed607e8a950f8269cdba95c" translate="yes" xml:space="preserve">
          <source>You typically want to record when running tests in &lt;a href=&quot;../guides/continuous-integration&quot;&gt;Continuous Integration&lt;/a&gt;, but you can also record your tests when running locally.</source>
          <target state="translated">您通常希望在&lt;a href=&quot;../guides/continuous-integration&quot;&gt;Continuous Integration中&lt;/a&gt;运行测试时进行记录，但是也可以在本地运行时记录测试。</target>
        </trans-unit>
        <trans-unit id="dbd8f04281ee1f5c53e1413afde7e650e5b4983c" translate="yes" xml:space="preserve">
          <source>You want to &amp;ldquo;trick&amp;rdquo; your application into thinking it&amp;rsquo;s logged in or logged out.</source>
          <target state="translated">您想&amp;ldquo;欺骗&amp;rdquo;您的应用程序以使其已登录或注销。</target>
        </trans-unit>
        <trans-unit id="86280316b3afab18be28e25706a839608e42a65a" translate="yes" xml:space="preserve">
          <source>You were told that adding multiple assertions was bad and accepted this as truth</source>
          <target state="translated">你被告知添加多个论断是不好的,并接受了这一事实。</target>
        </trans-unit>
        <trans-unit id="d489ffbdc5741148a6b66f12538f582ce577dcb5" translate="yes" xml:space="preserve">
          <source>You will always know (and can visually see) which assertion failed in a large test</source>
          <target state="translated">你将始终知道(并且可以直观地看到)在大型测试中哪个断言失败了。</target>
        </trans-unit>
        <trans-unit id="51c8f85d3b11834ad2939c007acb28167f940528" translate="yes" xml:space="preserve">
          <source>You will commonly use these chainers after using DOM commands like: &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt;, etc.</source>
          <target state="translated">使用诸如&lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; &lt;/a&gt;等DOM命令后，通常会使用这些链接器。</target>
        </trans-unit>
        <trans-unit id="3330e6fcf3b3976e3fd63dfd447334f21bd9c823" translate="yes" xml:space="preserve">
          <source>You will need to download a new &lt;a href=&quot;../guides/command-line&quot;&gt;cypress-cli&lt;/a&gt; - version &lt;code&gt;0.13.1&lt;/code&gt;.</source>
          <target state="translated">您将需要下载一个新的&lt;a href=&quot;../guides/command-line&quot;&gt;cypress-cli&lt;/a&gt;版本 &lt;code&gt;0.13.1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="06d9add928e123fd18e639db8e42c3550b3a3d9c" translate="yes" xml:space="preserve">
          <source>You will need to keep in mind it is &lt;strong&gt;Cypress who is requiring your file&lt;/strong&gt; - not your local project, not your local Node version, and not anything else under your control.</source>
          <target state="translated">您需要记住，&lt;strong&gt;赛普拉斯需要您的文件&lt;/strong&gt; -不是您的本地项目，不是您的本地Node版本，也不需要您控制的其他任何文件。</target>
        </trans-unit>
        <trans-unit id="d225114070fb7343bd3f5398ecf480625bd1fb25" translate="yes" xml:space="preserve">
          <source>You will need to log in to record your tests, so you will need to log in to the Cypress Dashboard here.</source>
          <target state="translated">你需要登录来记录你的测试,所以你需要在这里登录到Cypress Dashboard。</target>
        </trans-unit>
        <trans-unit id="34222e531ec9f273447da0cd8e6183116626cf75" translate="yes" xml:space="preserve">
          <source>You will now see a very specific error message when we detect that you&amp;rsquo;ve mixed up &lt;code&gt;async&lt;/code&gt; and &lt;code&gt;sync&lt;/code&gt; code in a &lt;a href=&quot;../../api/commands/then&quot;&gt;&lt;code&gt;.then()&lt;/code&gt;&lt;/a&gt; callback function. An example would be queuing up a new cypress command but then synchronously returning a different value.</source>
          <target state="translated">当我们检测到您在&lt;a href=&quot;../../api/commands/then&quot;&gt; &lt;code&gt;.then()&lt;/code&gt; &lt;/a&gt;回调函数中混合了 &lt;code&gt;async&lt;/code&gt; 代码和 &lt;code&gt;sync&lt;/code&gt; 代码时，现在将看到一条非常具体的错误消息。一个示例是排队一个新的cypress命令，然后同步返回一个不同的值。</target>
        </trans-unit>
        <trans-unit id="d7f0f2d19173146743594f430a21d28dc2726008" translate="yes" xml:space="preserve">
          <source>You will now see better stack traces and errors during &lt;code&gt;cypress run&lt;/code&gt; / in CI. No more &lt;code&gt;undefined is not a function&lt;/code&gt; errors.</source>
          <target state="translated">现在，在 &lt;code&gt;cypress run&lt;/code&gt; /在CI中，您将看到更好的堆栈跟踪和错误。没有更多的 &lt;code&gt;undefined is not a function&lt;/code&gt; 错误。</target>
        </trans-unit>
        <trans-unit id="9787473bd247d1640f294339a0f6ce72d0de147f" translate="yes" xml:space="preserve">
          <source>You will see requests named as &lt;code&gt;(XHR Stub)&lt;/code&gt; or &lt;code&gt;(XHR)&lt;/code&gt; in the Command Log.</source>
          <target state="translated">您将在命令日志中看到名为 &lt;code&gt;(XHR Stub)&lt;/code&gt; 或 &lt;code&gt;(XHR)&lt;/code&gt; 的请求。</target>
        </trans-unit>
        <trans-unit id="8b2671e16e4a097b58544a7818605a54389459e0" translate="yes" xml:space="preserve">
          <source>You will see the following in the command log:</source>
          <target state="translated">你会在命令日志中看到以下内容。</target>
        </trans-unit>
        <trans-unit id="5807f6e3117effb36a88dca8e5e5057c1994a963" translate="yes" xml:space="preserve">
          <source>You will want to consider the development costs of implementing a visual testing tool yourself versus using an external 3rd party provider. Storing, reviewing and analyzing image differences are non-trivial tasks and they can quickly become a chore when going with a DIY solution.</source>
          <target state="translated">你要考虑自己实施视觉测试工具与使用外部第三方供应商的开发成本。存储、审查和分析图像差异都是非同小可的任务,当采用DIY解决方案时,它们可能会很快成为一项繁琐的工作。</target>
        </trans-unit>
        <trans-unit id="5f798ddb6580479bf1f070c690f886f37f619ed5" translate="yes" xml:space="preserve">
          <source>You will want to then &lt;a href=&quot;../guides/continuous-integration#Record-tests&quot;&gt;add the key to your config file or as an environment variable&lt;/a&gt;.</source>
          <target state="translated">然后，您需要&lt;a href=&quot;../guides/continuous-integration#Record-tests&quot;&gt;将密钥添加到配置文件中或作为环境变量&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="04ed992567c1266be46b89368cfa8f547ecbc6f0" translate="yes" xml:space="preserve">
          <source>You would likely encounter constant port conflicts</source>
          <target state="translated">您可能会遇到不断的端口冲突</target>
        </trans-unit>
        <trans-unit id="c5a74997f000a8a6b0ead4d688bd65d3cbfdff36" translate="yes" xml:space="preserve">
          <source>You would typically use them with the &lt;a href=&quot;../../api/commands/fixture&quot;&gt;&lt;code&gt;cy.fixture()&lt;/code&gt;&lt;/a&gt; command and most often when you&amp;rsquo;re stubbing &lt;a href=&quot;../guides/network-requests&quot;&gt;Network Requests&lt;/a&gt;.</source>
          <target state="translated">通常，您可以在&lt;a href=&quot;../../api/commands/fixture&quot;&gt; &lt;code&gt;cy.fixture()&lt;/code&gt; &lt;/a&gt;命令中使用它们，并且最常见的是在对&lt;a href=&quot;../guides/network-requests&quot;&gt;Network Requests进行&lt;/a&gt;存根时。</target>
        </trans-unit>
        <trans-unit id="38ab251a23d48b529300dc39c893c29d1d585f50" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;d typically set this environment variable when running in &lt;a href=&quot;continuous-integration&quot;&gt;Continuous Integration&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;continuous-integration&quot;&gt;Continuous Integration中&lt;/a&gt;运行时，通常需要设置此环境变量。</target>
        </trans-unit>
        <trans-unit id="eac4348441c2845f1972b2393cb8583aeabac266" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll likely also want to test your login UI for:</source>
          <target state="translated">您可能还想针对以下方面测试登录界面：</target>
        </trans-unit>
        <trans-unit id="a86509920a4005c16463cdef6e235bc5cc46371d" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll receive an email confirming your request. The Cypress Team will review your request and, if approved, an OSS plan subscription will be applied to your organization.</source>
          <target state="translated">您会收到一封确认您的请求的电子邮件。赛普拉斯团队将审核您的请求，如果批准，OSS计划订阅将应用于您的组织。</target>
        </trans-unit>
        <trans-unit id="3b7694508bf41bf37659646dd902f15567e64739" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll typically receive this message due to:</source>
          <target state="translated">由于以下原因，您通常会收到此消息：</target>
        </trans-unit>
        <trans-unit id="7a35f1ebb021d55307607e031b0bf309023c2e0d" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll want to refer to your CI provider&amp;rsquo;s documentation on how to set up multiple machines to run in your CI environment.</source>
          <target state="translated">您将要参考CI提供商的文档，以了解如何设置要在CI环境中运行的多台计算机。</target>
        </trans-unit>
        <trans-unit id="ff97cb7e003f0b0b856d0dcbab7911fc8549d610" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;re about to embark on writing tests for your application, and only &lt;em&gt;you&lt;/em&gt; know your application, so we don&amp;rsquo;t have a lot of specific advice to give you.</source>
          <target state="translated">您将要着手为您的应用程序编写测试，只有&lt;em&gt;您&lt;/em&gt;自己知道您的应用程序，因此我们没有很多具体建议可提供给您。</target>
        </trans-unit>
        <trans-unit id="f8a5510df5de9d2a565d96620c6b6ec066fc5e45" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;re in! Inspect the state of your application like you normally would if you&amp;rsquo;d dropped the &lt;code&gt;debugger&lt;/code&gt; into your application code.</source>
          <target state="translated">你在！如果将 &lt;code&gt;debugger&lt;/code&gt; 放入应用程序代码中，则像平常一样检查应用程序的状态。</target>
        </trans-unit>
        <trans-unit id="5a7e2faad9d8fe103868cba12c41bc7231ad6a60" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;re polling something in your application with &lt;code&gt;setInterval&lt;/code&gt; and want to control that.</source>
          <target state="translated">您正在使用 &lt;code&gt;setInterval&lt;/code&gt; 轮询应用程序中的某些内容，并希望对其进行控制。</target>
        </trans-unit>
        <trans-unit id="c28380e07650860efc738a338e59cff4f20dd8e7" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;re trying to &lt;strong&gt;store and compare&lt;/strong&gt; values such as &lt;strong&gt;text&lt;/strong&gt;, &lt;strong&gt;classes&lt;/strong&gt;, &lt;strong&gt;attributes&lt;/strong&gt;.</source>
          <target state="translated">您正在尝试&lt;strong&gt;存储和比较&lt;/strong&gt;诸如&lt;strong&gt;文本&lt;/strong&gt;，&lt;strong&gt;类&lt;/strong&gt;，&lt;strong&gt;属性之&lt;/strong&gt;&lt;strong&gt;类的&lt;/strong&gt;值。</target>
        </trans-unit>
        <trans-unit id="b474b587e8bc56c18b6b7c81f1112b5c90454bbf" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;re trying to share &lt;strong&gt;values&lt;/strong&gt; between tests and hooks like &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;beforeEach&lt;/code&gt;.</source>
          <target state="translated">您正在尝试在测试和挂钩之间共享&lt;strong&gt;值&lt;/strong&gt;，例如 &lt;code&gt;before&lt;/code&gt; 和 &lt;code&gt;beforeEach&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2bc0b97ba22bc48dfd6c86d507f828612a87f44c" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;re trying to test your application&amp;rsquo;s &amp;ldquo;failure path&amp;rdquo; by forcing things to fail.</source>
          <target state="translated">您正试图通过迫使事情失败来测试应用程序的&amp;ldquo;失败路径&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="0c56a159de1f4368970ff5d1b826187ba622f73d" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;re trying to test your application&amp;rsquo;s &amp;ldquo;happy path&amp;rdquo; by forcing things to pass.</source>
          <target state="translated">您正试图通过迫使事情通过来测试应用程序的&amp;ldquo;快乐之路&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="a550cc56e467725dfdae836c12ba5677ad5b1a6f" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;re using &lt;code&gt;oauth&lt;/code&gt; and want to stub login methods.</source>
          <target state="translated">您正在使用 &lt;code&gt;oauth&lt;/code&gt; ,并且想存根登录方法。</target>
        </trans-unit>
        <trans-unit id="b2883b1ae887b2e21321a80c0d6458773175a45b" translate="yes" xml:space="preserve">
          <source>You, the test writer must know ahead of time what your application is programmed to do - or have 100% confidence that the state of a mutable object (like the DOM) has stabilized in order to write accurate conditional tests.</source>
          <target state="translated">你,测试编写者必须提前知道你的应用程序要做什么--或者有100%的信心,相信一个可变对象(如DOM)的状态已经稳定下来,以便编写准确的条件测试。</target>
        </trans-unit>
        <trans-unit id="a7b7db0faffc2d03b47db85feb8616e8d2a77972" translate="yes" xml:space="preserve">
          <source>Your &lt;code&gt;pluginsFile&lt;/code&gt; is invoked when Cypress opens a project.</source>
          <target state="translated">赛普拉斯打开项目时，将调用您的 &lt;code&gt;pluginsFile&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d89883360548e8023f1a87f0baedbb6d0e59b33c" translate="yes" xml:space="preserve">
          <source>Your Cypress test code runs in the same run loop as your application. This means you have access to the code running on the page, as well as the things the browser makes available to you, like &lt;code&gt;document&lt;/code&gt;, &lt;code&gt;window&lt;/code&gt;, and, of course, &lt;code&gt;debugger&lt;/code&gt;.</source>
          <target state="translated">赛普拉斯测试代码与您的应用程序在同一运行循环中运行。这意味着您可以访问页面上运行的代码以及浏览器为您提供的功能，例如 &lt;code&gt;document&lt;/code&gt; ， &lt;code&gt;window&lt;/code&gt; ，当然还有 &lt;code&gt;debugger&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ea0a664fdb2c4301c118c66fa9a16e415c552e5b" translate="yes" xml:space="preserve">
          <source>Your application code</source>
          <target state="translated">您的申请代码</target>
        </trans-unit>
        <trans-unit id="50050e3042f7ec88b3d5292def1e628c3f408ed0" translate="yes" xml:space="preserve">
          <source>Your application may use dynamic classes or ID&amp;rsquo;s that change</source>
          <target state="translated">您的应用程序可能使用变化的动态类或ID</target>
        </trans-unit>
        <trans-unit id="52911618a7175f28eaf93ca3327f130d3cf5c3f1" translate="yes" xml:space="preserve">
          <source>Your application uses dynamic ID&amp;rsquo;s and class names</source>
          <target state="translated">您的应用程序使用动态ID和类名</target>
        </trans-unit>
        <trans-unit id="3045a8a5332629b580c98caeffc16c22781e836a" translate="yes" xml:space="preserve">
          <source>Your application&amp;rsquo;s viewport dimensions will now automatically scale to fit regardless of your screen&amp;rsquo;s size. This enables you to test resolutions larger than what your screen is capable of displaying. Additionally this fixes edge cases caused when there was a difference in viewports between users.</source>
          <target state="translated">应用程序的视口尺寸现在将自动缩放以适合屏幕大小。这使您可以测试分辨率大于屏幕显示能力的分辨率。此外，这还修复了用户之间视口不同时导致的边缘情况。</target>
        </trans-unit>
        <trans-unit id="60b103172cb708a26a0cd83fd92359421ed3c884" translate="yes" xml:space="preserve">
          <source>Your current proxy settings can be viewed from within the Cypress Test Runner. Follow these steps:</source>
          <target state="translated">可以在Cypress Test Runner中查看您当前的代理设置。请遵循以下步骤。</target>
        </trans-unit>
        <trans-unit id="89c8db9da53773a8e97a7ccd27f75fd924623601" translate="yes" xml:space="preserve">
          <source>Your fixtures can be further organized within additional folders. For instance, you could create another folder called &lt;code&gt;images&lt;/code&gt; and add images:</source>
          <target state="translated">您的灯具可以在其他文件夹中进一步组织。例如，您可以创建另一个名为 &lt;code&gt;images&lt;/code&gt; 的文件夹并添加images：</target>
        </trans-unit>
        <trans-unit id="f7537ed89d991fc7bfe7d036a88a03bd1680a113" translate="yes" xml:space="preserve">
          <source>Your framework hasn&amp;rsquo;t finished bootstrapping.</source>
          <target state="translated">您的框架尚未完成引导。</target>
        </trans-unit>
        <trans-unit id="648142e95f1ffc0bc853cb92576a2c444c68b155" translate="yes" xml:space="preserve">
          <source>Your function returns a &lt;code&gt;Promise&lt;/code&gt;, and you want to automatically resolve or reject it.</source>
          <target state="translated">您的函数返回一个 &lt;code&gt;Promise&lt;/code&gt; ，并且您想自动解决或拒绝它。</target>
        </trans-unit>
        <trans-unit id="35cfdae0d284492ddc2a4bf6b8e4a4096c61a21e" translate="yes" xml:space="preserve">
          <source>Your function will receive 2 arguments: &lt;code&gt;on&lt;/code&gt; and &lt;code&gt;config&lt;/code&gt;.</source>
          <target state="translated">您的函数将收到2个参数： &lt;code&gt;on&lt;/code&gt; 和 &lt;code&gt;config&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bf8a2e404029a67272dc5bb64efe4acb0cc7d9c3" translate="yes" xml:space="preserve">
          <source>Your list of projects in the Test Runner now displays their last recorded run status - passing, failing, pending, running, etc.</source>
          <target state="translated">你在测试运行器中的项目列表现在会显示它们最后记录的运行状态--通过、失败、待定、运行等。</target>
        </trans-unit>
        <trans-unit id="8def68f931fd1f4dad062f94e933a751d95aca5b" translate="yes" xml:space="preserve">
          <source>Your project is a non-commercial entity</source>
          <target state="translated">您的项目是一个非商业实体</target>
        </trans-unit>
        <trans-unit id="22b9817867cf70a0a67aa1226b00035b8103dc89" translate="yes" xml:space="preserve">
          <source>Your project&amp;rsquo;s current proxy settings now display in the &lt;a href=&quot;proxy-configuration#View-proxy-settings-in-Cypress&quot;&gt;Settings of the Test Runner&lt;/a&gt;. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3856&quot;&gt;#3856&lt;/a&gt;.</source>
          <target state="translated">项目的当前代理设置现在显示在&lt;a href=&quot;proxy-configuration#View-proxy-settings-in-Cypress&quot;&gt;&amp;ldquo;测试运行器&amp;rdquo;的&amp;ldquo;设置&amp;rdquo;中&lt;/a&gt;。地址&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3856&quot;&gt;＃3856&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="697a02b364e220515d12931f0448928a395cb9fb" translate="yes" xml:space="preserve">
          <source>Your selectors break from development changes to CSS styles or JS behavior</source>
          <target state="translated">你的选择器从开发变更到CSS样式或JS行为都会中断</target>
        </trans-unit>
        <trans-unit id="1a606d99e2be8b8406a6e0315b6e867d370f7379" translate="yes" xml:space="preserve">
          <source>Your tests break whenever there are CSS or content changes</source>
          <target state="translated">每当有CSS或内容变化时,您的测试就会中断。</target>
        </trans-unit>
        <trans-unit id="933dc34d770ebe503010c38732e23f0535b972f3" translate="yes" xml:space="preserve">
          <source>Your visual styles may also rely on more than just CSS, perhaps you want to ensure an SVG or image has rendered correctly or shapes were correctly drawn to a canvas.</source>
          <target state="translated">你的视觉风格可能不仅仅依赖于CSS,也许你想确保SVG或图像正确渲染,或者形状正确绘制到画布上。</target>
        </trans-unit>
        <trans-unit id="6a4173c09fba685001a35c85647eda65ce46fdc8" translate="yes" xml:space="preserve">
          <source>Zero config Mochawesome reporter for Cypress with screenshots.</source>
          <target state="translated">零配置的Mochawesome记者的Cypress与截图。</target>
        </trans-unit>
        <trans-unit id="d1c1e45e2bd8451861fad93c9ae896f208553c6a" translate="yes" xml:space="preserve">
          <source>^HTML &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; elements.</source>
          <target state="translated">^ HTML &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; 元素。</target>
        </trans-unit>
        <trans-unit id="b016a497c6941a3811814c68d66ff07bfb90df88" translate="yes" xml:space="preserve">
          <source>^HTML &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; elements with a defined &lt;code&gt;type&lt;/code&gt; attribute of one of the following:</source>
          <target state="translated">具有以下 &lt;code&gt;type&lt;/code&gt; 之一的已定义类型属性的^ HTML &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 元素：</target>
        </trans-unit>
        <trans-unit id="5a25c1fb7f888154f4cf3726019f43e09f969954" translate="yes" xml:space="preserve">
          <source>a(&lt;em&gt;type&lt;/em&gt;)</source>
          <target state="translated">a(&lt;em&gt;type&lt;/em&gt;)</target>
        </trans-unit>
        <trans-unit id="6aa8fcde98e48fddf1de5f3e266ee6570d890c12" translate="yes" xml:space="preserve">
          <source>access the actual XHR object for assertions</source>
          <target state="translated">访问实际的XHR对象进行断言。</target>
        </trans-unit>
        <trans-unit id="db7a32b53f1c50a82aa0fd9bda55aafa73d687ee" translate="yes" xml:space="preserve">
          <source>adds &lt;code&gt;chai&lt;/code&gt; assertions for stubs and spies</source>
          <target state="translated">为存根和间谍添加 &lt;code&gt;chai&lt;/code&gt; 断言</target>
        </trans-unit>
        <trans-unit id="d87c448044defb778f33158d8ccf94a20531d600" translate="yes" xml:space="preserve">
          <source>all</source>
          <target state="translated">all</target>
        </trans-unit>
        <trans-unit id="06965aa626d01e5cbfbd62bda1c1cd5902f94cc6" translate="yes" xml:space="preserve">
          <source>alternatively, use destructuring</source>
          <target state="translated">或者,使用解构</target>
        </trans-unit>
        <trans-unit id="982131e9610e162804cb608af79e8ac0e8e57fbe" translate="yes" xml:space="preserve">
          <source>alwaysCalledOn</source>
          <target state="translated">alwaysCalledOn</target>
        </trans-unit>
        <trans-unit id="e7d2fb066db7f8d734b098fe130f7a680c398454" translate="yes" xml:space="preserve">
          <source>alwaysCalledWith</source>
          <target state="translated">alwaysCalledWith</target>
        </trans-unit>
        <trans-unit id="41d16b3ed8eac1c26dcea69d2a9d5c12ba0164b8" translate="yes" xml:space="preserve">
          <source>alwaysCalledWithExactly</source>
          <target state="translated">alwaysCalledWithExactly</target>
        </trans-unit>
        <trans-unit id="1aa44666c7418826ff49a92e15b733f529072b65" translate="yes" xml:space="preserve">
          <source>alwaysCalledWithMatch</source>
          <target state="translated">alwaysCalledWithMatch</target>
        </trans-unit>
        <trans-unit id="ab79788d5b1f9ef9abb530ef3fabb0fed3dbe64e" translate="yes" xml:space="preserve">
          <source>alwaysCalledWithNew</source>
          <target state="translated">alwaysCalledWithNew</target>
        </trans-unit>
        <trans-unit id="88d8212f813009f624f89d810f23dfa5a5dcff5e" translate="yes" xml:space="preserve">
          <source>alwaysReturned</source>
          <target state="translated">alwaysReturned</target>
        </trans-unit>
        <trans-unit id="745fe6b5b1a5d16a47a11983c531166c14316225" translate="yes" xml:space="preserve">
          <source>alwaysThrew</source>
          <target state="translated">alwaysThrew</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="ab4922fc7449a3b2f61bbfc53a6b958b9c478cc6" translate="yes" xml:space="preserve">
          <source>and much more - &lt;code&gt;cy.intercept()&lt;/code&gt; gives full access to all HTTP requests at all stages.</source>
          <target state="translated">等等 &lt;code&gt;cy.intercept()&lt;/code&gt; 在所有阶段都提供对所有HTTP请求的完全访问权限。</target>
        </trans-unit>
        <trans-unit id="7ba58739169412252d41dea92182cef18f70b69b" translate="yes" xml:space="preserve">
          <source>and on and on&amp;hellip;</source>
          <target state="translated">还有&amp;hellip;&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="c5fe0200d1c7a5139bd18fd22268c4ca8bf45e90" translate="yes" xml:space="preserve">
          <source>any</source>
          <target state="translated">any</target>
        </trans-unit>
        <trans-unit id="43b9d80d1f50472e56afb94a061257af5b53182b" translate="yes" xml:space="preserve">
          <source>appveyor.yml</source>
          <target state="translated">appveyor.yml</target>
        </trans-unit>
        <trans-unit id="5a36f117812e69f1a5ab7e32a43b6e3db24618b2" translate="yes" xml:space="preserve">
          <source>arch</source>
          <target state="translated">arch</target>
        </trans-unit>
        <trans-unit id="536f158f6dfd529865dcb865a97bb16804e34d70" translate="yes" xml:space="preserve">
          <source>arguments</source>
          <target state="translated">arguments</target>
        </trans-unit>
        <trans-unit id="df211ccdd94a63e0bcb9e6ae427a249484a49d60" translate="yes" xml:space="preserve">
          <source>as</source>
          <target state="translated">as</target>
        </trans-unit>
        <trans-unit id="1312c71367158fb268b1793b3473d23a81cf4d9d" translate="yes" xml:space="preserve">
          <source>attr(&lt;em&gt;name&lt;/em&gt;, &lt;em&gt;[value]&lt;/em&gt;)</source>
          <target state="translated">attr（&lt;em&gt;name&lt;/em&gt;，&lt;em&gt;[value]&lt;/em&gt;）</target>
        </trans-unit>
        <trans-unit id="882c7af4a4652fa96fb81f092cc2cea7ebc62642" translate="yes" xml:space="preserve">
          <source>autoset-status-cypress-testrail-reporter</source>
          <target state="translated">autoset-status-cypress-testrail-reporter</target>
        </trans-unit>
        <trans-unit id="ec0a3d38277ad19039d901020e4fa5d40049f131" translate="yes" xml:space="preserve">
          <source>bitbucket-pipelines.yml</source>
          <target state="translated">bitbucket-pipelines.yml</target>
        </trans-unit>
        <trans-unit id="1064c9ccfdac81fc1084c91222873c7c2a84f915" translate="yes" xml:space="preserve">
          <source>blacklistHosts</source>
          <target state="translated">blacklistHosts</target>
        </trans-unit>
        <trans-unit id="a9b74ac8513ee8b5afb229690237d3f48d34d22d" translate="yes" xml:space="preserve">
          <source>blur</source>
          <target state="translated">blur</target>
        </trans-unit>
        <trans-unit id="ef98362b8a6b0c8cd804b0d227aa1ffeaba89786" translate="yes" xml:space="preserve">
          <source>browser</source>
          <target state="translated">browser</target>
        </trans-unit>
        <trans-unit id="c1efef9b619111fa57666798ed72e46afd3612cf" translate="yes" xml:space="preserve">
          <source>callCount</source>
          <target state="translated">callCount</target>
        </trans-unit>
        <trans-unit id="4b31bbcba710459137e63c4396275b56d2807c82" translate="yes" xml:space="preserve">
          <source>callback function called when any XHR is aborted</source>
          <target state="translated">当任何XHR被中止时调用的回调函数。</target>
        </trans-unit>
        <trans-unit id="9e56b4df926facb28cc01af42d1b60c056f83927" translate="yes" xml:space="preserve">
          <source>callback function called when any request is sent</source>
          <target state="translated">回调函数,当任何请求被发送时被调用</target>
        </trans-unit>
        <trans-unit id="6472b303515a3f514846ef66e7163c392b91be75" translate="yes" xml:space="preserve">
          <source>callback function called when any response is returned</source>
          <target state="translated">回调函数,当任何响应被返回时被调用</target>
        </trans-unit>
        <trans-unit id="5f79e8e842fe1ca26f5eabc89d5bb12494380701" translate="yes" xml:space="preserve">
          <source>callback function when a request is sent</source>
          <target state="translated">发出请求时的回调函数</target>
        </trans-unit>
        <trans-unit id="b14b8a8c8338921ee080fb9670c3faf7b95cf1a2" translate="yes" xml:space="preserve">
          <source>callback function when a response is returned</source>
          <target state="translated">回调函数</target>
        </trans-unit>
        <trans-unit id="29f08839b9869dd4d8b2b946570aa19d83794615" translate="yes" xml:space="preserve">
          <source>callback function which fires anytime an XHR is aborted</source>
          <target state="translated">回调函数,当XHR被中止时,回调函数就会启动。</target>
        </trans-unit>
        <trans-unit id="970eeb47b2d091dc3fee38f7ecd0e8ec3352f34f" translate="yes" xml:space="preserve">
          <source>called</source>
          <target state="translated">called</target>
        </trans-unit>
        <trans-unit id="4b8cdc4a82f01ec231870a7a4c1d802b782b7500" translate="yes" xml:space="preserve">
          <source>calledAfter</source>
          <target state="translated">calledAfter</target>
        </trans-unit>
        <trans-unit id="d3712a77ddeadb37020c1e6f77f2896aa5ee9dbf" translate="yes" xml:space="preserve">
          <source>calledBefore</source>
          <target state="translated">calledBefore</target>
        </trans-unit>
        <trans-unit id="428fec6c21e4ed4ea68ea2ae25c8eb77daa06d15" translate="yes" xml:space="preserve">
          <source>calledOn</source>
          <target state="translated">calledOn</target>
        </trans-unit>
        <trans-unit id="02bff6172e7cdae55469e9c30966d1118b23b265" translate="yes" xml:space="preserve">
          <source>calledOnce</source>
          <target state="translated">calledOnce</target>
        </trans-unit>
        <trans-unit id="c622e5f1a0255891f3893da95474bb20f1765b8f" translate="yes" xml:space="preserve">
          <source>calledThrice</source>
          <target state="translated">calledThrice</target>
        </trans-unit>
        <trans-unit id="e21d20383a56e44c4673ee004b8035335beabd34" translate="yes" xml:space="preserve">
          <source>calledTwice</source>
          <target state="translated">calledTwice</target>
        </trans-unit>
        <trans-unit id="92b3489d9d49199e46d9af83624ffc44abb61fe0" translate="yes" xml:space="preserve">
          <source>calledWith</source>
          <target state="translated">calledWith</target>
        </trans-unit>
        <trans-unit id="79a026a2fb44e97501a320077b780e0d2b1f5922" translate="yes" xml:space="preserve">
          <source>calledWithExactly</source>
          <target state="translated">calledWithExactly</target>
        </trans-unit>
        <trans-unit id="ee21509c8c1be9d566c6c2b4b8c0e1fd64739766" translate="yes" xml:space="preserve">
          <source>calledWithMatch</source>
          <target state="translated">calledWithMatch</target>
        </trans-unit>
        <trans-unit id="bf4258c5b4e2a485b26d92c559d1afa1375a8218" translate="yes" xml:space="preserve">
          <source>calledWithNew</source>
          <target state="translated">calledWithNew</target>
        </trans-unit>
        <trans-unit id="604f60f245e74033cb5c6a23463091f19dfd572d" translate="yes" xml:space="preserve">
          <source>can intercept all types of network requests including Fetch API, page loads, XMLHttpRequests, resource loads, etc.</source>
          <target state="translated">可以拦截所有类型的网络请求,包括Fetch API、页面加载、XMLHttpRequests、资源加载等。</target>
        </trans-unit>
        <trans-unit id="bffd54c04d5321f75d061c808047f033bed2aeb2" translate="yes" xml:space="preserve">
          <source>change the run-time behavior of Cypress before opening a pull request</source>
          <target state="translated">在打开拉取请求之前改变Cypress的运行时行为。</target>
        </trans-unit>
        <trans-unit id="698dc05e9772e7dccb755c0fcb1310b87815a3ea" translate="yes" xml:space="preserve">
          <source>change(&lt;em&gt;function&lt;/em&gt;)</source>
          <target state="translated">change(&lt;em&gt;function&lt;/em&gt;)</target>
        </trans-unit>
        <trans-unit id="08ac019697e04f1eadf21bd5e11b0a1d25b336de" translate="yes" xml:space="preserve">
          <source>changing the response from the server</source>
          <target state="translated">改变服务器的响应</target>
        </trans-unit>
        <trans-unit id="d56d985300d4b52eb6e189be006f44f8d23c5ec9" translate="yes" xml:space="preserve">
          <source>check</source>
          <target state="translated">check</target>
        </trans-unit>
        <trans-unit id="75e4aedce48faf384f3535ffeb842e9a0718a25c" translate="yes" xml:space="preserve">
          <source>checked</source>
          <target state="translated">checked</target>
        </trans-unit>
        <trans-unit id="42685f11da91a55b1f5c5b782edb2f0fc1dd5148" translate="yes" xml:space="preserve">
          <source>children</source>
          <target state="translated">children</target>
        </trans-unit>
        <trans-unit id="6179cc1997fe0737bf6e0867f408f0e34f4ae83d" translate="yes" xml:space="preserve">
          <source>circle.yml</source>
          <target state="translated">circle.yml</target>
        </trans-unit>
        <trans-unit id="fbbd19ad1d7bedad4fdbac0f37d409fa91db14c1" translate="yes" xml:space="preserve">
          <source>class(&lt;em&gt;className&lt;/em&gt;)</source>
          <target state="translated">class(&lt;em&gt;className&lt;/em&gt;)</target>
        </trans-unit>
        <trans-unit id="168cbb2ea52b9e34d271accecfa7d7951e948a99" translate="yes" xml:space="preserve">
          <source>clear</source>
          <target state="translated">clear</target>
        </trans-unit>
        <trans-unit id="268d1428d8d8ba7d1c4a1b9f15753bee467cf52b" translate="yes" xml:space="preserve">
          <source>clearCookie</source>
          <target state="translated">clearCookie</target>
        </trans-unit>
        <trans-unit id="380a624a5556dd6d3cfbda5f6fe39457e08a3c40" translate="yes" xml:space="preserve">
          <source>clearCookies</source>
          <target state="translated">clearCookies</target>
        </trans-unit>
        <trans-unit id="63e18e3324a093bc9d7284f3329e625362e42e89" translate="yes" xml:space="preserve">
          <source>clearLocalStorage</source>
          <target state="translated">clearLocalStorage</target>
        </trans-unit>
        <trans-unit id="b93ec56608fb302fea7a8019d7c0e8e7239fc033" translate="yes" xml:space="preserve">
          <source>click</source>
          <target state="translated">click</target>
        </trans-unit>
        <trans-unit id="83655a5560ef1c438170f28acfecbe5013e8f34f" translate="yes" xml:space="preserve">
          <source>clock</source>
          <target state="translated">clock</target>
        </trans-unit>
        <trans-unit id="a6a97c6ef99bcf77d165796e9d8f42e57c7308b5" translate="yes" xml:space="preserve">
          <source>clock behavior before &lt;code&gt;cy.visit()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cy.visit()&lt;/code&gt; 之前的时钟行为</target>
        </trans-unit>
        <trans-unit id="0b2e4de9c9b4d1a6befeb7709ce03c4f81bc3324" translate="yes" xml:space="preserve">
          <source>closeTo(&lt;em&gt;expected&lt;/em&gt;, &lt;em&gt;delta&lt;/em&gt;)</source>
          <target state="translated">closeTo（&lt;em&gt;预期&lt;/em&gt;，&lt;em&gt;增量&lt;/em&gt;）</target>
        </trans-unit>
        <trans-unit id="c113bd75a926da05464727110810cccd9f23a03d" translate="yes" xml:space="preserve">
          <source>closest</source>
          <target state="translated">closest</target>
        </trans-unit>
        <trans-unit id="4d9d4d13c9fca8770c92d0ba02b99d333e6ffdf0" translate="yes" xml:space="preserve">
          <source>cly</source>
          <target state="translated">cly</target>
        </trans-unit>
        <trans-unit id="d9c778992d3a1d8eb44bfc070fdf2fba36340bba" translate="yes" xml:space="preserve">
          <source>command instance &lt;strong&gt;(Object)&lt;/strong&gt;</source>
          <target state="translated">命令实例&lt;strong&gt;（对象）&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4f2660c56744bb635c0b82bbbda7338ef388e8e2" translate="yes" xml:space="preserve">
          <source>command properties and arguments &lt;strong&gt;(Object)&lt;/strong&gt;</source>
          <target state="translated">命令属性和参数&lt;strong&gt;（对象）&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="418b03c91215cc919b0411338e64a1f9a8c01e9a" translate="yes" xml:space="preserve">
          <source>community</source>
          <target state="translated">community</target>
        </trans-unit>
        <trans-unit id="dfba7aade0868074c2861c98e2a9a92f3178a51b" translate="yes" xml:space="preserve">
          <source>config</source>
          <target state="translated">config</target>
        </trans-unit>
        <trans-unit id="0652e436f42d75f5672a8bd9ae2f398a55115d51" translate="yes" xml:space="preserve">
          <source>configuration</source>
          <target state="translated">configuration</target>
        </trans-unit>
        <trans-unit id="f9e8f9efc5ada5451ea10910bb6334378cd4fd0c" translate="yes" xml:space="preserve">
          <source>contain(&lt;em&gt;text&lt;/em&gt;)</source>
          <target state="translated">contain(&lt;em&gt;text&lt;/em&gt;)</target>
        </trans-unit>
        <trans-unit id="caeb909ae4ff4ee25a0ff0d476946ed256f2aee1" translate="yes" xml:space="preserve">
          <source>contains</source>
          <target state="translated">contains</target>
        </trans-unit>
        <trans-unit id="f3f2b45e3fe0e25eef937527f97f3df42af01a10" translate="yes" xml:space="preserve">
          <source>css(&lt;em&gt;name&lt;/em&gt;, &lt;em&gt;[value]&lt;/em&gt;)</source>
          <target state="translated">css（&lt;em&gt;name&lt;/em&gt;，&lt;em&gt;[value]&lt;/em&gt;）</target>
        </trans-unit>
        <trans-unit id="31ace4ad1831aae866cd7951a842ca3e38f21981" translate="yes" xml:space="preserve">
          <source>cy</source>
          <target state="translated">cy</target>
        </trans-unit>
        <trans-unit id="20c80193b1ecd7b852f764b064020c13d6dc13eb" translate="yes" xml:space="preserve">
          <source>cy-dom-diff allows matching chunks of DOM against HTML; including dynamic content.</source>
          <target state="translated">cy-dom-diff允许将DOM块与HTML进行匹配;包括动态内容。</target>
        </trans-unit>
        <trans-unit id="853c87400933970a6566f37700f29a2f23ddd036" translate="yes" xml:space="preserve">
          <source>cy-mobile-commands</source>
          <target state="translated">cy-mobile-commands</target>
        </trans-unit>
        <trans-unit id="506f88bd51eca32b14f38ebd0b8e6c2d4e4edef1" translate="yes" xml:space="preserve">
          <source>cy-search</source>
          <target state="translated">cy-search</target>
        </trans-unit>
        <trans-unit id="64f9d11b9d6a30549d2ec2ea61be05d7d7e5db99" translate="yes" xml:space="preserve">
          <source>cy-spok</source>
          <target state="translated">cy-spok</target>
        </trans-unit>
        <trans-unit id="1ccbbcad40ecbeb676506963807de7ddff1644ea" translate="yes" xml:space="preserve">
          <source>cy-view</source>
          <target state="translated">cy-view</target>
        </trans-unit>
        <trans-unit id="71224a852ab46001c8f775e8feedd63dad1e5955" translate="yes" xml:space="preserve">
          <source>cy...() failed because the element you are chaining off of has become detached or removed from the dom</source>
          <target state="translated">cy...()失败的原因是你要链出的元素已经脱离或从dom中移除了</target>
        </trans-unit>
        <trans-unit id="3b106cc8eb05e42314a69a3bbd986df53069eb41" translate="yes" xml:space="preserve">
          <source>cy....() failed because the element cannot be interacted with</source>
          <target state="translated">cy......()失败了,因为该元素不能与之交互。</target>
        </trans-unit>
        <trans-unit id="30b19e08efef5909c5c31f4c4649ec15c0fa5118" translate="yes" xml:space="preserve">
          <source>cy....() failed because the element is currently animating</source>
          <target state="translated">cy......()失败了,因为该元素当前正在动画中。</target>
        </trans-unit>
        <trans-unit id="70a4c7cd8e13bc0ea9dd8ae9d5715d70dbded6b6" translate="yes" xml:space="preserve">
          <source>cy.task</source>
          <target state="translated">cy.task</target>
        </trans-unit>
        <trans-unit id="ad0cb315e4b5de4b02f426de3b8c666e949ba6da" translate="yes" xml:space="preserve">
          <source>cy.visit() failed because you are attempting to visit a second unique domain</source>
          <target state="translated">cy.visit()失败了,因为你正试图访问第二个唯一的域名。</target>
        </trans-unit>
        <trans-unit id="81f7f97efdbc9f67889fc4a85aeefb6f4e424dd9" translate="yes" xml:space="preserve">
          <source>cyphell</source>
          <target state="translated">cyphell</target>
        </trans-unit>
        <trans-unit id="a31106349dabcf7678a8c2007f8a815fbf572dfe" translate="yes" xml:space="preserve">
          <source>cypress custom commands to locate react elements by component, props and state</source>
          <target state="translated">cypress自定义命令,通过组件、道具和状态来定位反应元素。</target>
        </trans-unit>
        <trans-unit id="c592b7de9065ebdd3fab3e42eb22f962b3ae8f97" translate="yes" xml:space="preserve">
          <source>cypress-allure-plugin</source>
          <target state="translated">cypress-allure-plugin</target>
        </trans-unit>
        <trans-unit id="685038f571bc09b075d1f91fa0e4b41c84312d61" translate="yes" xml:space="preserve">
          <source>cypress-angular-unit-test</source>
          <target state="translated">cypress-angular-unit-test</target>
        </trans-unit>
        <trans-unit id="d8c8324eca2a0d4d227ed69a8eeb5528333ad114" translate="yes" xml:space="preserve">
          <source>cypress-angularjs-unit-test</source>
          <target state="translated">cypress-angularjs-unit-test</target>
        </trans-unit>
        <trans-unit id="44325a88fcc01959ca670e1e4f40a87838e052d9" translate="yes" xml:space="preserve">
          <source>cypress-app-watcher-preprocessor</source>
          <target state="translated">cypress-app-watcher-preprocessor</target>
        </trans-unit>
        <trans-unit id="e37ed0400ca5e5141f7b1d61b62168fd6f499acd" translate="yes" xml:space="preserve">
          <source>cypress-audit</source>
          <target state="translated">cypress-audit</target>
        </trans-unit>
        <trans-unit id="2500857e729166c03938069426e43a88b65d5759" translate="yes" xml:space="preserve">
          <source>cypress-autorecord</source>
          <target state="translated">cypress-autorecord</target>
        </trans-unit>
        <trans-unit id="82f63e99d38d467b61817896e9375502875b7001" translate="yes" xml:space="preserve">
          <source>cypress-autostub</source>
          <target state="translated">cypress-autostub</target>
        </trans-unit>
        <trans-unit id="06f43b4f26d8f5fcc21a7fb285aadfabf2f530cd" translate="yes" xml:space="preserve">
          <source>cypress-axe</source>
          <target state="translated">cypress-axe</target>
        </trans-unit>
        <trans-unit id="5eb88a59967cedf449ce0ab27a50110fa60e1a1f" translate="yes" xml:space="preserve">
          <source>cypress-blink-test</source>
          <target state="translated">cypress-blink-test</target>
        </trans-unit>
        <trans-unit id="2c555b3ad941be87e5bb86f4e35e24d3ae2437dd" translate="yes" xml:space="preserve">
          <source>cypress-browser-permissions</source>
          <target state="translated">cypress-browser-permissions</target>
        </trans-unit>
        <trans-unit id="0df6dc2a442f9f514206b0b0aeb7cc3fcf94fa7c" translate="yes" xml:space="preserve">
          <source>cypress-capybara</source>
          <target state="translated">cypress-capybara</target>
        </trans-unit>
        <trans-unit id="551c5878a91ca677f9841ab020b428774f5897a3" translate="yes" xml:space="preserve">
          <source>cypress-commands</source>
          <target state="translated">cypress-commands</target>
        </trans-unit>
        <trans-unit id="3535f52ea00a6129ea4ebf858f4564473d48c885" translate="yes" xml:space="preserve">
          <source>cypress-cy-select</source>
          <target state="translated">cypress-cy-select</target>
        </trans-unit>
        <trans-unit id="a621b8071d5337a16db7d6a703abe30736c2a9f4" translate="yes" xml:space="preserve">
          <source>cypress-cycle-unit-test</source>
          <target state="translated">cypress-cycle-unit-test</target>
        </trans-unit>
        <trans-unit id="81d4fd62a6f52423435bb152803ae42759e447b4" translate="yes" xml:space="preserve">
          <source>cypress-dark</source>
          <target state="translated">cypress-dark</target>
        </trans-unit>
        <trans-unit id="df2cd9a0df84826823b817a47ee868c9b4560c79" translate="yes" xml:space="preserve">
          <source>cypress-docker-images</source>
          <target state="translated">cypress-docker-images</target>
        </trans-unit>
        <trans-unit id="c77bd5b9822047f1821f36035e55ef5199121f45" translate="yes" xml:space="preserve">
          <source>cypress-dotenv</source>
          <target state="translated">cypress-dotenv</target>
        </trans-unit>
        <trans-unit id="2ca047dd10653ce69b1027da7de40af08ff356c0" translate="yes" xml:space="preserve">
          <source>cypress-downloadfile</source>
          <target state="translated">cypress-downloadfile</target>
        </trans-unit>
        <trans-unit id="e634bc830c4f40d606b39c07603e448cc9ba73aa" translate="yes" xml:space="preserve">
          <source>cypress-drag-drop</source>
          <target state="translated">cypress-drag-drop</target>
        </trans-unit>
        <trans-unit id="ff4a7fe9d91829f1da63adc7c867efee5a595579" translate="yes" xml:space="preserve">
          <source>cypress-example-docker-codeship</source>
          <target state="translated">cypress-example-docker-codeship</target>
        </trans-unit>
        <trans-unit id="eabe4915617dc0421e9922bd3673807bd387b48d" translate="yes" xml:space="preserve">
          <source>cypress-example-kitchensink</source>
          <target state="translated">cypress-example-kitchensink</target>
        </trans-unit>
        <trans-unit id="54e6fb6d11f64e5562c166541616d67fd9cda907" translate="yes" xml:space="preserve">
          <source>cypress-example-kitchensink Assertions</source>
          <target state="translated">柏树-范例-厨房水槽 断言</target>
        </trans-unit>
        <trans-unit id="f245f51f47b3e71d0d14978578b402687bd5183b" translate="yes" xml:space="preserve">
          <source>cypress-example-piechopper</source>
          <target state="translated">cypress-example-piechopper</target>
        </trans-unit>
        <trans-unit id="84f9e522bd1e1acd66404287e8ccb46964c5cdf5" translate="yes" xml:space="preserve">
          <source>cypress-example-recipes</source>
          <target state="translated">cypress-example-recipes</target>
        </trans-unit>
        <trans-unit id="942d3b6bae5169646558d78b0075af00743d43d0" translate="yes" xml:space="preserve">
          <source>cypress-example-todomvc</source>
          <target state="translated">cypress-example-todomvc</target>
        </trans-unit>
        <trans-unit id="93f2d1cf3b1baf4065fac0123e760b7c0cd37ded" translate="yes" xml:space="preserve">
          <source>cypress-expect</source>
          <target state="translated">cypress-expect</target>
        </trans-unit>
        <trans-unit id="91ccb99edf1a2c2b220c38af44ca4cdc1eed6518" translate="yes" xml:space="preserve">
          <source>cypress-expect-n-assertions</source>
          <target state="translated">cypress-expect-n-assertions</target>
        </trans-unit>
        <trans-unit id="60da51978f8d3b69b5aa4ef07bfb1ed8e801b9a1" translate="yes" xml:space="preserve">
          <source>cypress-fail-fast</source>
          <target state="translated">cypress-fail-fast</target>
        </trans-unit>
        <trans-unit id="e24c405ecbe4e6276083eaa342dc48b082629b80" translate="yes" xml:space="preserve">
          <source>cypress-failed-log</source>
          <target state="translated">cypress-failed-log</target>
        </trans-unit>
        <trans-unit id="286b7fb5dae04edcbea5d015cc2d283b92b84690" translate="yes" xml:space="preserve">
          <source>cypress-file-upload</source>
          <target state="translated">cypress-file-upload</target>
        </trans-unit>
        <trans-unit id="6249292e4c5098dd6436cd57c5378fa2c8a4a51a" translate="yes" xml:space="preserve">
          <source>cypress-fill-command</source>
          <target state="translated">cypress-fill-command</target>
        </trans-unit>
        <trans-unit id="bd3135f2741788f74fc4b1d9e4f1b1601b7cfbdc" translate="yes" xml:space="preserve">
          <source>cypress-firebase</source>
          <target state="translated">cypress-firebase</target>
        </trans-unit>
        <trans-unit id="ff47127972fba86546bb14c5e12fc4bb25a69677" translate="yes" xml:space="preserve">
          <source>cypress-graphql-mock</source>
          <target state="translated">cypress-graphql-mock</target>
        </trans-unit>
        <trans-unit id="1974d8db252c8461655c6a5afc7e88dbe32c8af1" translate="yes" xml:space="preserve">
          <source>cypress-graphql-mock-network</source>
          <target state="translated">cypress-graphql-mock-network</target>
        </trans-unit>
        <trans-unit id="e7c934e56b4b9396f80bee35fe0c1181311fbf3b" translate="yes" xml:space="preserve">
          <source>cypress-har-generator</source>
          <target state="translated">cypress-har-generator</target>
        </trans-unit>
        <trans-unit id="5e720167d7eaff4837074e67669c94f871b0ca2b" translate="yes" xml:space="preserve">
          <source>cypress-hmr-restarter</source>
          <target state="translated">cypress-hmr-restarter</target>
        </trans-unit>
        <trans-unit id="b1123afc16a596b1b22e8c49f9e1ebc0609ff294" translate="yes" xml:space="preserve">
          <source>cypress-hyperapp-unit-test</source>
          <target state="translated">cypress-hyperapp-unit-test</target>
        </trans-unit>
        <trans-unit id="a9a836319f27093ff9ae974e581c232a177c3a19" translate="yes" xml:space="preserve">
          <source>cypress-iframe</source>
          <target state="translated">cypress-iframe</target>
        </trans-unit>
        <trans-unit id="48237284522d9c08fd20bcba09f43a71484156a3" translate="yes" xml:space="preserve">
          <source>cypress-jest-adapter</source>
          <target state="translated">cypress-jest-adapter</target>
        </trans-unit>
        <trans-unit id="188793c424bf363fb6ff9af9d1ac078b98495257" translate="yes" xml:space="preserve">
          <source>cypress-keycloak-commands</source>
          <target state="translated">cypress-keycloak-commands</target>
        </trans-unit>
        <trans-unit id="3a6e8d923d080b10f8f1840013b3dd464c74a7dd" translate="yes" xml:space="preserve">
          <source>cypress-laravel</source>
          <target state="translated">cypress-laravel</target>
        </trans-unit>
        <trans-unit id="56ae6b268fbd488724782861dc73ea977ae6c06c" translate="yes" xml:space="preserve">
          <source>cypress-layout-inspector</source>
          <target state="translated">cypress-layout-inspector</target>
        </trans-unit>
        <trans-unit id="d364f763d30cf0b441acf480314b54bd42a7643c" translate="yes" xml:space="preserve">
          <source>cypress-localstorage-commands</source>
          <target state="translated">cypress-localstorage-commands</target>
        </trans-unit>
        <trans-unit id="1d6db2a44d901e293d206460656517a88ed14381" translate="yes" xml:space="preserve">
          <source>cypress-log-to-output</source>
          <target state="translated">cypress-log-to-output</target>
        </trans-unit>
        <trans-unit id="2050d1cd52a415871fc7d2469eddf7b6a462593f" translate="yes" xml:space="preserve">
          <source>cypress-mailosaur</source>
          <target state="translated">cypress-mailosaur</target>
        </trans-unit>
        <trans-unit id="7544df9160b0e25c8c3c98d4b4a6dd73038702eb" translate="yes" xml:space="preserve">
          <source>cypress-mochawesome-reporter</source>
          <target state="translated">cypress-mochawesome-reporter</target>
        </trans-unit>
        <trans-unit id="7f6ac2fdc1af768468dc26bf28e8b38808ef3d09" translate="yes" xml:space="preserve">
          <source>cypress-ntlm-auth</source>
          <target state="translated">cypress-ntlm-auth</target>
        </trans-unit>
        <trans-unit id="4aff15d6ad0c0a52090f5a595c00c1d00ea39098" translate="yes" xml:space="preserve">
          <source>cypress-on-rails</source>
          <target state="translated">cypress-on-rails</target>
        </trans-unit>
        <trans-unit id="2801d8cd4809df9c4aabc5afecad34c1d12698ed" translate="yes" xml:space="preserve">
          <source>cypress-otp</source>
          <target state="translated">cypress-otp</target>
        </trans-unit>
        <trans-unit id="60dfca23b20e0c872fb75190628765251d6604cd" translate="yes" xml:space="preserve">
          <source>cypress-pipe</source>
          <target state="translated">cypress-pipe</target>
        </trans-unit>
        <trans-unit id="4c63849ef9dfe6d36e90ad7d49593b7008a5fcd8" translate="yes" xml:space="preserve">
          <source>cypress-plugin-livereload</source>
          <target state="translated">cypress-plugin-livereload</target>
        </trans-unit>
        <trans-unit id="6be65232fbe686224c5f461b099504eba19e4bcf" translate="yes" xml:space="preserve">
          <source>cypress-plugin-retries</source>
          <target state="translated">cypress-plugin-retries</target>
        </trans-unit>
        <trans-unit id="2942c80a28c48824af9be2df6abf13d886a963a2" translate="yes" xml:space="preserve">
          <source>cypress-plugin-snapshots</source>
          <target state="translated">cypress-plugin-snapshots</target>
        </trans-unit>
        <trans-unit id="aef7fd446506be8cb9d4eb9c7d915faba34ce55e" translate="yes" xml:space="preserve">
          <source>cypress-plugin-tab</source>
          <target state="translated">cypress-plugin-tab</target>
        </trans-unit>
        <trans-unit id="62988526250aaf8d372e2192da6e5901c93757bc" translate="yes" xml:space="preserve">
          <source>cypress-protobuf</source>
          <target state="translated">cypress-protobuf</target>
        </trans-unit>
        <trans-unit id="8158b01f149fab08496248a3096b1535fb0481a6" translate="yes" xml:space="preserve">
          <source>cypress-rails</source>
          <target state="translated">cypress-rails</target>
        </trans-unit>
        <trans-unit id="f3e34e2c597d4e116524fe04d38841be11b0b015" translate="yes" xml:space="preserve">
          <source>cypress-react-selector</source>
          <target state="translated">cypress-react-selector</target>
        </trans-unit>
        <trans-unit id="219201fc1f82166b9d033201fcba1f6e3b25b7c5" translate="yes" xml:space="preserve">
          <source>cypress-react-unit-test</source>
          <target state="translated">cypress-react-unit-test</target>
        </trans-unit>
        <trans-unit id="d6cf95bb302d41dae12db14fcac1b036b0446109" translate="yes" xml:space="preserve">
          <source>cypress-redux</source>
          <target state="translated">cypress-redux</target>
        </trans-unit>
        <trans-unit id="33fa5f13711d20677ddf2b62faf25facc70b7c49" translate="yes" xml:space="preserve">
          <source>cypress-repeat</source>
          <target state="translated">cypress-repeat</target>
        </trans-unit>
        <trans-unit id="fef7d35f5d9bbc54b778f09b4bf4f32d3b44fdc4" translate="yes" xml:space="preserve">
          <source>cypress-rollup-preprocessor</source>
          <target state="translated">cypress-rollup-preprocessor</target>
        </trans-unit>
        <trans-unit id="eb98693421105c91ff2530ef17be6e8242beeddd" translate="yes" xml:space="preserve">
          <source>cypress-select-tests</source>
          <target state="translated">cypress-select-tests</target>
        </trans-unit>
        <trans-unit id="1a3aa28b33d31b0939a240cae88ddd8fc8a3db87" translate="yes" xml:space="preserve">
          <source>cypress-shadow-dom</source>
          <target state="translated">cypress-shadow-dom</target>
        </trans-unit>
        <trans-unit id="6ef85ef962c8774fd691927abb4942ac7fa3baa2" translate="yes" xml:space="preserve">
          <source>cypress-slack-healthcheck</source>
          <target state="translated">cypress-slack-healthcheck</target>
        </trans-unit>
        <trans-unit id="b4e64b0bb155fa6ee1122e3dfe69ea5c5e8d8df0" translate="yes" xml:space="preserve">
          <source>cypress-slack-reporter</source>
          <target state="translated">cypress-slack-reporter</target>
        </trans-unit>
        <trans-unit id="8243605425ff2e7641cbe1ab23bfb0b7518f90bd" translate="yes" xml:space="preserve">
          <source>cypress-social-logins</source>
          <target state="translated">cypress-social-logins</target>
        </trans-unit>
        <trans-unit id="32454fd56b83766207d087504db57b001d648b9f" translate="yes" xml:space="preserve">
          <source>cypress-svelte-unit-test</source>
          <target state="translated">cypress-svelte-unit-test</target>
        </trans-unit>
        <trans-unit id="a40a1c865c3663b6ffdb380568047326157d47c4" translate="yes" xml:space="preserve">
          <source>cypress-tags</source>
          <target state="translated">cypress-tags</target>
        </trans-unit>
        <trans-unit id="c0ac7988755ae461b1125f123a74bbdacf4e14e8" translate="yes" xml:space="preserve">
          <source>cypress-teamcity-reporter</source>
          <target state="translated">cypress-teamcity-reporter</target>
        </trans-unit>
        <trans-unit id="21925373bbc911a4132a71404b4745f6141014d7" translate="yes" xml:space="preserve">
          <source>cypress-terminal-report</source>
          <target state="translated">cypress-terminal-report</target>
        </trans-unit>
        <trans-unit id="f4811371e72c2723be25e15ee551bffc631aa35b" translate="yes" xml:space="preserve">
          <source>cypress-testing-library</source>
          <target state="translated">cypress-testing-library</target>
        </trans-unit>
        <trans-unit id="db1ad3b7d779b8e766c71399492c69d34263fe81" translate="yes" xml:space="preserve">
          <source>cypress-testrail-reporter</source>
          <target state="translated">cypress-testrail-reporter</target>
        </trans-unit>
        <trans-unit id="b1c1700726ae24847576c524d98d358cc02e9c75" translate="yes" xml:space="preserve">
          <source>cypress-timings</source>
          <target state="translated">cypress-timings</target>
        </trans-unit>
        <trans-unit id="80c4b51ccfe1feee0ff2968608b18e13b8842601" translate="yes" xml:space="preserve">
          <source>cypress-unfetch</source>
          <target state="translated">cypress-unfetch</target>
        </trans-unit>
        <trans-unit id="2475cf6c595f4c255cf2e679d1ad091cbada646b" translate="yes" xml:space="preserve">
          <source>cypress-vue-unit-test</source>
          <target state="translated">cypress-vue-unit-test</target>
        </trans-unit>
        <trans-unit id="b2a3018ceb2d61c3aa5829bec18fda5861d2c1db" translate="yes" xml:space="preserve">
          <source>cypress-wait-until</source>
          <target state="translated">cypress-wait-until</target>
        </trans-unit>
        <trans-unit id="9030706d91f7c22858b4562086b1f45a2d756378" translate="yes" xml:space="preserve">
          <source>cypress-watch-and-reload</source>
          <target state="translated">cypress-watch-and-reload</target>
        </trans-unit>
        <trans-unit id="3fa2c1db405a0cf8b7993d4837193bc967ba2e4c" translate="yes" xml:space="preserve">
          <source>cypress-websocket-testing</source>
          <target state="translated">cypress-websocket-testing</target>
        </trans-unit>
        <trans-unit id="8c9b55bba28d709f4827ea28485b1e043826713b" translate="yes" xml:space="preserve">
          <source>cypress-xpath</source>
          <target state="translated">cypress-xpath</target>
        </trans-unit>
        <trans-unit id="1cd7786282577f82e5e5d7703505815e6e9e412e" translate="yes" xml:space="preserve">
          <source>cypress.json</source>
          <target state="translated">cypress.json</target>
        </trans-unit>
        <trans-unit id="04692159d7d9d295f56960cfce9f9a9babc252bd" translate="yes" xml:space="preserve">
          <source>cypressautomocker</source>
          <target state="translated">cypressautomocker</target>
        </trans-unit>
        <trans-unit id="f067441fe4a8b7a85b2239bab5670e77fda9fb14" translate="yes" xml:space="preserve">
          <source>data(&lt;em&gt;name&lt;/em&gt;, &lt;em&gt;[value]&lt;/em&gt;)</source>
          <target state="translated">数据（&lt;em&gt;名称&lt;/em&gt;，&lt;em&gt;[值]&lt;/em&gt;）</target>
        </trans-unit>
        <trans-unit id="7cc6a5c381eab655a2b25bb744a3a5143775d522" translate="yes" xml:space="preserve">
          <source>data-cy shorthand notation for cypress get and find functions</source>
          <target state="translated">data-cy是柏树获取和查找函数的速记符。</target>
        </trans-unit>
        <trans-unit id="2da62890f7b6a88945dfd31de8e2bf3a9dc58d6f" translate="yes" xml:space="preserve">
          <source>dblclick</source>
          <target state="translated">dblclick</target>
        </trans-unit>
        <trans-unit id="32faaecac742100f7753f0c1d0aa0add01b4046b" translate="yes" xml:space="preserve">
          <source>debug</source>
          <target state="translated">debug</target>
        </trans-unit>
        <trans-unit id="947a6315975831909d82c87a0564425a0b9a9a50" translate="yes" xml:space="preserve">
          <source>debug Cypress not starting or hanging</source>
          <target state="translated">调试赛普拉斯不启动或挂起</target>
        </trans-unit>
        <trans-unit id="ab406449d6aa92ac418e55a018e5f8d05b9902cb" translate="yes" xml:space="preserve">
          <source>debug problems related to the way CLI arguments are parsed by the npm CLI module</source>
          <target state="translated">调试与npm CLI模块解析CLI参数的方式有关的问题。</target>
        </trans-unit>
        <trans-unit id="063fb16cacadfcb9c4dc809939cc50f59afc0c93" translate="yes" xml:space="preserve">
          <source>decrease(&lt;em&gt;function&lt;/em&gt;)</source>
          <target state="translated">decrease(&lt;em&gt;function&lt;/em&gt;)</target>
        </trans-unit>
        <trans-unit id="3dde59ff3d79fc2322f4192f74c1d1af30d32cc6" translate="yes" xml:space="preserve">
          <source>deep</source>
          <target state="translated">deep</target>
        </trans-unit>
        <trans-unit id="eb4920343ea1c66e4a9defdf4af28c1bcae50422" translate="yes" xml:space="preserve">
          <source>deep.equal(&lt;em&gt;value&lt;/em&gt;)</source>
          <target state="translated">deep.equal(&lt;em&gt;value&lt;/em&gt;)</target>
        </trans-unit>
        <trans-unit id="675d0449a2b69d2d935a670fe489be70b3605d64" translate="yes" xml:space="preserve">
          <source>deep.property(&lt;em&gt;name&lt;/em&gt;, &lt;em&gt;[value]&lt;/em&gt;)</source>
          <target state="translated">deep.property（&lt;em&gt;name&lt;/em&gt;，&lt;em&gt;[value]&lt;/em&gt;）</target>
        </trans-unit>
        <trans-unit id="9f052d2961e279ecbb0d216ac35a1c81b27704a6" translate="yes" xml:space="preserve">
          <source>delay for stubbed responses (in ms)</source>
          <target state="translated">存根反应的延迟(毫秒)</target>
        </trans-unit>
        <trans-unit id="f68c5fd2a39efd39a72859fa78f1b239afb45dd1" translate="yes" xml:space="preserve">
          <source>descendants(&lt;em&gt;selector&lt;/em&gt;)</source>
          <target state="translated">descendants(&lt;em&gt;selector&lt;/em&gt;)</target>
        </trans-unit>
        <trans-unit id="347e87f4eb15f7a1cf67b173bbf89c510f1ec646" translate="yes" xml:space="preserve">
          <source>devicePixelRatio</source>
          <target state="translated">devicePixelRatio</target>
        </trans-unit>
        <trans-unit id="15a0529617580a22ed5df3adde566560d7afda75" translate="yes" xml:space="preserve">
          <source>directory of the Cypress installation. Note that the &lt;code&gt;file://&lt;/code&gt; prefix is not needed.</source>
          <target state="translated">赛普拉斯安装目录。请注意，不需要 &lt;code&gt;file://&lt;/code&gt; 前缀。</target>
        </trans-unit>
        <trans-unit id="54801bd6cc72e42cd61e5b83dde57afc4779700f" translate="yes" xml:space="preserve">
          <source>disable security features which make automation difficult</source>
          <target state="translated">禁用使自动化难以实现的安全功能</target>
        </trans-unit>
        <trans-unit id="07596f183f5e91b1778d5e47b2752b8d42aa763d" translate="yes" xml:space="preserve">
          <source>disabled</source>
          <target state="translated">disabled</target>
        </trans-unit>
        <trans-unit id="4f8278c89ad16da05fec4fdfc61fe44798b92720" translate="yes" xml:space="preserve">
          <source>document</source>
          <target state="translated">document</target>
        </trans-unit>
        <trans-unit id="ed84ac37eef3a02a183f9cef17a5225be1a23097" translate="yes" xml:space="preserve">
          <source>does not have method set to &lt;code&gt;GET&lt;/code&gt; by default, but intercepts &lt;code&gt;*&lt;/code&gt; methods.</source>
          <target state="translated">默认情况下没有将方法设置为 &lt;code&gt;GET&lt;/code&gt; ，但是会拦截 &lt;code&gt;*&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="37b423c20fbf8032787f38114664ff146221ca03" translate="yes" xml:space="preserve">
          <source>does not require calling &lt;a href=&quot;server&quot;&gt;&lt;code&gt;cy.server()&lt;/code&gt;&lt;/a&gt; before use - in fact, &lt;code&gt;cy.server()&lt;/code&gt; does not influence &lt;code&gt;cy.intercept()&lt;/code&gt; at all.</source>
          <target state="translated">不需要在使用前调用&lt;a href=&quot;server&quot;&gt; &lt;code&gt;cy.server()&lt;/code&gt; &lt;/a&gt; -实际上， &lt;code&gt;cy.server()&lt;/code&gt; 根本不影响 &lt;code&gt;cy.intercept()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="be65d27ae088a0e03fd8e1331d90b01649464cb6" translate="yes" xml:space="preserve">
          <source>dom</source>
          <target state="translated">dom</target>
        </trans-unit>
        <trans-unit id="b32f279e548b6fceef4343170778273bfe60658c" translate="yes" xml:space="preserve">
          <source>each</source>
          <target state="translated">each</target>
        </trans-unit>
        <trans-unit id="ad87109bfff0765f4dd8cf4943b04d16a4070fea" translate="yes" xml:space="preserve">
          <source>empty</source>
          <target state="translated">empty</target>
        </trans-unit>
        <trans-unit id="3ea3f9802accf8817bacd6f3df46a73b93ccddec" translate="yes" xml:space="preserve">
          <source>enabled</source>
          <target state="translated">enabled</target>
        </trans-unit>
        <trans-unit id="7a92f3d26362d6557d5701de77a63a01df61e57f" translate="yes" xml:space="preserve">
          <source>end</source>
          <target state="translated">end</target>
        </trans-unit>
        <trans-unit id="b3cc629e4d698b44bdcda8141ce2e359d32074d0" translate="yes" xml:space="preserve">
          <source>ensure your application makes the intended requests</source>
          <target state="translated">确保你的应用程序能发出预期的请求</target>
        </trans-unit>
        <trans-unit id="920f8f5815b381ea692e9e7c2f7119f2b1aa620a" translate="yes" xml:space="preserve">
          <source>env</source>
          <target state="translated">env</target>
        </trans-unit>
        <trans-unit id="a9c619705e8fcaa770885cac1837ae950f5c8ba5" translate="yes" xml:space="preserve">
          <source>eq</source>
          <target state="translated">eq</target>
        </trans-unit>
        <trans-unit id="c4bb11aba08fee403b5b6e8c70b0c676abe9fceb" translate="yes" xml:space="preserve">
          <source>eql(&lt;em&gt;value&lt;/em&gt;)</source>
          <target state="translated">eql(&lt;em&gt;value&lt;/em&gt;)</target>
        </trans-unit>
        <trans-unit id="55aca476c17f9ad4227acb37e58a18c60051e8a7" translate="yes" xml:space="preserve">
          <source>equal(&lt;em&gt;value&lt;/em&gt;)</source>
          <target state="translated">equal(&lt;em&gt;value&lt;/em&gt;)</target>
        </trans-unit>
        <trans-unit id="be62562725d30894d1641b11d5106adde66f0d79" translate="yes" xml:space="preserve">
          <source>exec</source>
          <target state="translated">exec</target>
        </trans-unit>
        <trans-unit id="7e89f2472eea0797f15896f1658417395dcaae35" translate="yes" xml:space="preserve">
          <source>exist</source>
          <target state="translated">exist</target>
        </trans-unit>
        <trans-unit id="2216470a6aacb2edec4887e9eadec834847afc5d" translate="yes" xml:space="preserve">
          <source>experimental</source>
          <target state="translated">experimental</target>
        </trans-unit>
        <trans-unit id="574e201cacc05cf40293d931076f150895bb0f5b" translate="yes" xml:space="preserve">
          <source>expose test environment specific routes</source>
          <target state="translated">暴露测试环境的特定路径</target>
        </trans-unit>
        <trans-unit id="7cb6efb98ba5972a9b5090dc2e517fe14d12cb04" translate="yes" xml:space="preserve">
          <source>false</source>
          <target state="translated">false</target>
        </trans-unit>
        <trans-unit id="4bb4ca75941b7bbc5bc6a12be44b22fc9c8d234e" translate="yes" xml:space="preserve">
          <source>filter</source>
          <target state="translated">filter</target>
        </trans-unit>
        <trans-unit id="ded8dae5786fb0e9e6ffb657401fd861ba2efe11" translate="yes" xml:space="preserve">
          <source>find</source>
          <target state="translated">find</target>
        </trans-unit>
        <trans-unit id="e0996a37c13d44c3b06074939d43fa3759bd32c1" translate="yes" xml:space="preserve">
          <source>first</source>
          <target state="translated">first</target>
        </trans-unit>
        <trans-unit id="51cff3c1f0bc59f6187e7040cc12a4e9b1eca7aa" translate="yes" xml:space="preserve">
          <source>fixture</source>
          <target state="translated">fixture</target>
        </trans-unit>
        <trans-unit id="78918dcaf22c0486024b08caed8fe0c57e583a47" translate="yes" xml:space="preserve">
          <source>focus</source>
          <target state="translated">focus</target>
        </trans-unit>
        <trans-unit id="22a08123ec4acc58198c375920cf32a5165558f0" translate="yes" xml:space="preserve">
          <source>focus[ed]</source>
          <target state="translated">focus[ed]</target>
        </trans-unit>
        <trans-unit id="f31b0b227337866ce82630c2d10406cfadf78bd2" translate="yes" xml:space="preserve">
          <source>focused</source>
          <target state="translated">focused</target>
        </trans-unit>
        <trans-unit id="9fe9c75603ec13a2e5d8954b050b7221126502f7" translate="yes" xml:space="preserve">
          <source>forcibly send XHR&amp;rsquo;s a 404 status when the XHR&amp;rsquo;s do not match any existing route</source>
          <target state="translated">当XHR与任何现有路线不匹配时，强制向XHR发送404状态</target>
        </trans-unit>
        <trans-unit id="c218e39efa2e1aae69f39d2054528369ce1e1f46" translate="yes" xml:space="preserve">
          <source>function</source>
          <target state="translated">function</target>
        </trans-unit>
        <trans-unit id="783923e57ba5e8f1044632c31fd806ee24814bb5" translate="yes" xml:space="preserve">
          <source>get</source>
          <target state="translated">get</target>
        </trans-unit>
        <trans-unit id="25916f93770a9adca80f2a550d3a2506981beb73" translate="yes" xml:space="preserve">
          <source>getCookie</source>
          <target state="translated">getCookie</target>
        </trans-unit>
        <trans-unit id="3f737990e01640a4bfaf7751e7e2e8502e1e44b6" translate="yes" xml:space="preserve">
          <source>getCookies</source>
          <target state="translated">getCookies</target>
        </trans-unit>
        <trans-unit id="1ec558a60b5dda24597816c924776716018caf8b" translate="yes" xml:space="preserve">
          <source>go</source>
          <target state="translated">go</target>
        </trans-unit>
        <trans-unit id="2512c87e86c8d2149c928014edbde56f2dbeddd4" translate="yes" xml:space="preserve">
          <source>greaterThan(&lt;em&gt;value&lt;/em&gt;)</source>
          <target state="translated">greaterThan(&lt;em&gt;value&lt;/em&gt;)</target>
        </trans-unit>
        <trans-unit id="2346ad27d7568ba9896f1b7da6b5991251debdf2" translate="yes" xml:space="preserve">
          <source>hash</source>
          <target state="translated">hash</target>
        </trans-unit>
        <trans-unit id="6f253d28517c39eeddcaddf0e859d5344e6ba1f6" translate="yes" xml:space="preserve">
          <source>have fun 🎉</source>
          <target state="translated">玩得开心</target>
        </trans-unit>
        <trans-unit id="73e7e545c519a38f0aec9e72df51f8ba169db34d" translate="yes" xml:space="preserve">
          <source>height</source>
          <target state="translated">height</target>
        </trans-unit>
        <trans-unit id="99d72c7fc3e2e145870beab37c0b70e343ea9c3b" translate="yes" xml:space="preserve">
          <source>hidden</source>
          <target state="translated">hidden</target>
        </trans-unit>
        <trans-unit id="fbc5881426baf05f182f0473d6ccddce906092b3" translate="yes" xml:space="preserve">
          <source>hover</source>
          <target state="translated">hover</target>
        </trans-unit>
        <trans-unit id="ed6eefc9117167b11ea3eef312ee00e95dbf0401" translate="yes" xml:space="preserve">
          <source>how to handle the previously yielded subject.</source>
          <target state="translated">如何处理之前产生的题目。</target>
        </trans-unit>
        <trans-unit id="de05b2acf571749867adfc7859af04e0fe3a3832" translate="yes" xml:space="preserve">
          <source>html(&lt;em&gt;html&lt;/em&gt;)</source>
          <target state="translated">html(&lt;em&gt;html&lt;/em&gt;)</target>
        </trans-unit>
        <trans-unit id="22ef5f356758d1da2a25fd6ecdea04e9729d7064" translate="yes" xml:space="preserve">
          <source>id(&lt;em&gt;id&lt;/em&gt;)</source>
          <target state="translated">id(&lt;em&gt;id&lt;/em&gt;)</target>
        </trans-unit>
        <trans-unit id="5c8b0b054141dd70e74e20b5bd85bcfc0370ed34" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;force404&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; (the default) then the request will &lt;a href=&quot;https://docs.cypress.io/guides/guides/network-requests.html#Use-Server-Responses&quot;&gt;pass through to the server&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;code&gt;force404&lt;/code&gt; 为 &lt;code&gt;false&lt;/code&gt; （默认值），则请求将&lt;a href=&quot;https://docs.cypress.io/guides/guides/network-requests.html#Use-Server-Responses&quot;&gt;传递到服务器&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f48cf9040508b376a38fd4e1da36c2391fc15d85" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;force404&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; (the default) then the request will pass through to the server.</source>
          <target state="translated">如果 &lt;code&gt;force404&lt;/code&gt; 为 &lt;code&gt;false&lt;/code&gt; （默认值），则请求将传递到服务器。</target>
        </trans-unit>
        <trans-unit id="7024006187e928719cb37c7d130f1610c9d90ec4" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;force404&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; then the response &lt;a href=&quot;#Notes&quot;&gt;will be a 404&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;code&gt;force404&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; ,则响应&lt;a href=&quot;#Notes&quot;&gt;为404&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9372562f5c6170252c10dae576fe6b3a730b465e" translate="yes" xml:space="preserve">
          <source>iframe support is somewhat limited, but does work.</source>
          <target state="translated">iframe的支持是有限的,但确实有效。</target>
        </trans-unit>
        <trans-unit id="2c2cc60639e7f1f86a79ae2d680888a3c6165cf8" translate="yes" xml:space="preserve">
          <source>iframes</source>
          <target state="translated">iframes</target>
        </trans-unit>
        <trans-unit id="aa24f8620a4ea4a9a706c3e2f71d472ad598deb2" translate="yes" xml:space="preserve">
          <source>iframes not supported</source>
          <target state="translated">不支持iframes</target>
        </trans-unit>
        <trans-unit id="4b16d9529970c712c5689a714de1ff11d8864b06" translate="yes" xml:space="preserve">
          <source>include(&lt;em&gt;value&lt;/em&gt;)</source>
          <target state="translated">include(&lt;em&gt;value&lt;/em&gt;)</target>
        </trans-unit>
        <trans-unit id="124a2dbe6af6ffcea9bc590ab2cb89a42e2887e6" translate="yes" xml:space="preserve">
          <source>increase(&lt;em&gt;function&lt;/em&gt;)</source>
          <target state="translated">increase(&lt;em&gt;function&lt;/em&gt;)</target>
        </trans-unit>
        <trans-unit id="d07f9596b3412dd86da84c01076709c60b811a26" translate="yes" xml:space="preserve">
          <source>instanceOf(&lt;em&gt;constructor&lt;/em&gt;)</source>
          <target state="translated">instanceOf(&lt;em&gt;constructor&lt;/em&gt;)</target>
        </trans-unit>
        <trans-unit id="c1feeaa7daab93ac02212ffb2207aa531e0d8298" translate="yes" xml:space="preserve">
          <source>intercept</source>
          <target state="translated">intercept</target>
        </trans-unit>
        <trans-unit id="219fe784363be17d9be76ae1902ddc1b1ca83bc0" translate="yes" xml:space="preserve">
          <source>intercepting static resources like HTML and CSS</source>
          <target state="translated">拦截HTML和CSS等静态资源</target>
        </trans-unit>
        <trans-unit id="e91dd3f61d88900e0d4734f29d0025d93acf6c9c" translate="yes" xml:space="preserve">
          <source>investigate a hard to recreate bug that happens on your machine</source>
          <target state="translated">调查您的机器上发生的难以重现的错误</target>
        </trans-unit>
        <trans-unit id="d6aa1f3a789f3f3108666e0ac807ca5ca7dc5fa5" translate="yes" xml:space="preserve">
          <source>invoke</source>
          <target state="translated">invoke</target>
        </trans-unit>
        <trans-unit id="a3db8735259305cd9cc3c59545f413fb2e632e48" translate="yes" xml:space="preserve">
          <source>isBrowser</source>
          <target state="translated">isBrowser</target>
        </trans-unit>
        <trans-unit id="b5b2414610a40b9710e94dc7f29ac7d1c49797dc" translate="yes" xml:space="preserve">
          <source>isCy</source>
          <target state="translated">isCy</target>
        </trans-unit>
        <trans-unit id="f803b26388365e33184d5cc145d868e1b8df74d5" translate="yes" xml:space="preserve">
          <source>its</source>
          <target state="translated">its</target>
        </trans-unit>
        <trans-unit id="818533aa876aa97624377a7b0b2d3de3acc2813b" translate="yes" xml:space="preserve">
          <source>itself</source>
          <target state="translated">itself</target>
        </trans-unit>
        <trans-unit id="abae7f8db280b8aa28837a39d7381885293293c5" translate="yes" xml:space="preserve">
          <source>jQuery UI Sortable</source>
          <target state="translated">jQuery UI Sortable</target>
        </trans-unit>
        <trans-unit id="f29eaba1fd5cf1e3a3cac10143a85ed26eb263ae" translate="yes" xml:space="preserve">
          <source>key(&lt;em&gt;key1&lt;/em&gt;, &lt;em&gt;[key2]&lt;/em&gt;, &lt;em&gt;[&amp;hellip;]&lt;/em&gt;)</source>
          <target state="translated">key（&lt;em&gt;key1&lt;/em&gt;，&lt;em&gt;[key2]&lt;/em&gt;，&lt;em&gt;[&amp;hellip;]&lt;/em&gt;）</target>
        </trans-unit>
        <trans-unit id="213ed3ea453bf610688ff8041e0a3b7b6abb5e6e" translate="yes" xml:space="preserve">
          <source>last</source>
          <target state="translated">last</target>
        </trans-unit>
        <trans-unit id="819b36585104117945379443c549fcfd726fa3db" translate="yes" xml:space="preserve">
          <source>least(&lt;em&gt;value&lt;/em&gt;)</source>
          <target state="translated">least(&lt;em&gt;value&lt;/em&gt;)</target>
        </trans-unit>
        <trans-unit id="71348d2c5502d8feb739019a8da2ee87089701ec" translate="yes" xml:space="preserve">
          <source>lengthOf(&lt;em&gt;value&lt;/em&gt;)</source>
          <target state="translated">lengthOf(&lt;em&gt;value&lt;/em&gt;)</target>
        </trans-unit>
        <trans-unit id="b4ee649ff826630507272f1e65795a0eea2bdfa5" translate="yes" xml:space="preserve">
          <source>lessThan(&lt;em&gt;value&lt;/em&gt;)</source>
          <target state="translated">lessThan(&lt;em&gt;value&lt;/em&gt;)</target>
        </trans-unit>
        <trans-unit id="6469ac84a89748bb67b923c833ed0c778a17aea3" translate="yes" xml:space="preserve">
          <source>location</source>
          <target state="translated">location</target>
        </trans-unit>
        <trans-unit id="7babc233de26ab19ead1b9c278128d5c434910ee" translate="yes" xml:space="preserve">
          <source>log</source>
          <target state="translated">log</target>
        </trans-unit>
        <trans-unit id="1468dbd21338ee723d7d1cdef002be18b95d4174" translate="yes" xml:space="preserve">
          <source>log attributes &lt;strong&gt;(Object)&lt;/strong&gt;, whether Cypress is in interactive mode (running via &lt;code&gt;cypress open&lt;/code&gt;) &lt;strong&gt;(Boolean)&lt;/strong&gt;</source>
          <target state="translated">日志属性&lt;strong&gt;（Object）&lt;/strong&gt;，赛普拉斯是否处于交互模式（通过 &lt;code&gt;cypress open&lt;/code&gt; 运行）&lt;strong&gt;（布尔值）&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8b6210fdf0c430ea0b8190f4d612bd5f9b6572fd" translate="yes" xml:space="preserve">
          <source>log attributes &lt;strong&gt;(Object)&lt;/strong&gt;, whether Cypress is in interactive mode &lt;strong&gt;(Boolean)&lt;/strong&gt;</source>
          <target state="translated">日志属性&lt;strong&gt;（Object）&lt;/strong&gt;，赛普拉斯是否处于交互模式&lt;strong&gt;（布尔）&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2551489fd8863a1c560d5e3bcf12554ac6aedda1" translate="yes" xml:space="preserve">
          <source>macOS 64-bit (&lt;code&gt;?platform=darwin&lt;/code&gt;)</source>
          <target state="translated">macOS 64位（ &lt;code&gt;?platform=darwin&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="eb7512f40389e82af1175ece379ad5d9fb730cc5" translate="yes" xml:space="preserve">
          <source>match(&lt;em&gt;RegExp&lt;/em&gt;)</source>
          <target state="translated">match(&lt;em&gt;RegExp&lt;/em&gt;)</target>
        </trans-unit>
        <trans-unit id="a6ffa4bbf81cf529ad22070fa1a3ef7446df2a98" translate="yes" xml:space="preserve">
          <source>match(&lt;em&gt;selector&lt;/em&gt;)</source>
          <target state="translated">match(&lt;em&gt;selector&lt;/em&gt;)</target>
        </trans-unit>
        <trans-unit id="60391f39d630b5f6ba563ff38dff66a0856b9a96" translate="yes" xml:space="preserve">
          <source>members(&lt;em&gt;set&lt;/em&gt;)</source>
          <target state="translated">members(&lt;em&gt;set&lt;/em&gt;)</target>
        </trans-unit>
        <trans-unit id="18c91d281601ae2c8ca6d690cc897da2f7e4b879" translate="yes" xml:space="preserve">
          <source>method to match against requests</source>
          <target state="translated">匹配请求的方法</target>
        </trans-unit>
        <trans-unit id="6910f776c1354a72fa6ebba0dae7dddf003ef15f" translate="yes" xml:space="preserve">
          <source>minimatch</source>
          <target state="translated">minimatch</target>
        </trans-unit>
        <trans-unit id="f29b9dbc5ec4ad55fee89bb88f5c93caa4ae6627" translate="yes" xml:space="preserve">
          <source>mochawesome-merge</source>
          <target state="translated">mochawesome-merge</target>
        </trans-unit>
        <trans-unit id="82c38b283b487783c7e2f6ac75f2adad30ff119e" translate="yes" xml:space="preserve">
          <source>modifyObstructiveCode</source>
          <target state="translated">modifyObstructiveCode</target>
        </trans-unit>
        <trans-unit id="b56def36afbfb8cd1bc7a898851fea4c97586530" translate="yes" xml:space="preserve">
          <source>moment</source>
          <target state="translated">moment</target>
        </trans-unit>
        <trans-unit id="20c92931615bb1c97ca104a95cc67ef2a19289d2" translate="yes" xml:space="preserve">
          <source>most(&lt;em&gt;value&lt;/em&gt;)</source>
          <target state="translated">most(&lt;em&gt;value&lt;/em&gt;)</target>
        </trans-unit>
        <trans-unit id="b4b3e0a278988bc15f2913af3f4153ccef74e465" translate="yes" xml:space="preserve">
          <source>nested</source>
          <target state="translated">nested</target>
        </trans-unit>
        <trans-unit id="edee9402d198b04ac77dcf5dc9cc3dac44573782" translate="yes" xml:space="preserve">
          <source>next</source>
          <target state="translated">next</target>
        </trans-unit>
        <trans-unit id="ccefaadfdffe563d2631c2f2ffa3f15d87750642" translate="yes" xml:space="preserve">
          <source>nextAll</source>
          <target state="translated">nextAll</target>
        </trans-unit>
        <trans-unit id="858408d5395601b5789c0f3e439c636d1494f131" translate="yes" xml:space="preserve">
          <source>nextUntil</source>
          <target state="translated">nextUntil</target>
        </trans-unit>
        <trans-unit id="557f255516719ea16f8f4a0aae1166054e2c9b43" translate="yes" xml:space="preserve">
          <source>not</source>
          <target state="translated">not</target>
        </trans-unit>
        <trans-unit id="f69703c6bdd2314a2d363a52ea9636026e9740ca" translate="yes" xml:space="preserve">
          <source>npm Reporters</source>
          <target state="translated">npm记者</target>
        </trans-unit>
        <trans-unit id="e88132417b2efe72cde53346062aab21879b2e4c" translate="yes" xml:space="preserve">
          <source>npm install any existing &lt;code&gt;chai&lt;/code&gt; library and import into your test file or support file.</source>
          <target state="translated">npm安装任何现有的 &lt;code&gt;chai&lt;/code&gt; 库并导入到您的测试文件或支持文件中。</target>
        </trans-unit>
        <trans-unit id="6ca1f4a98324d13add10f76a43a5f6e6da77ace6" translate="yes" xml:space="preserve">
          <source>npm modules</source>
          <target state="translated">npm模块</target>
        </trans-unit>
        <trans-unit id="bd5193910094354dc6348f9386b03957f20021a3" translate="yes" xml:space="preserve">
          <source>npm-cy</source>
          <target state="translated">npm-cy</target>
        </trans-unit>
        <trans-unit id="2be88ca4242c76e8253ac62474851065032d6833" translate="yes" xml:space="preserve">
          <source>null</source>
          <target state="translated">null</target>
        </trans-unit>
        <trans-unit id="5adeac62dbc1427c247cbaec06f0c19059f8d037" translate="yes" xml:space="preserve">
          <source>official</source>
          <target state="translated">official</target>
        </trans-unit>
        <trans-unit id="7a85f4764bbd6daf1c3545efbbf0f279a6dc0beb" translate="yes" xml:space="preserve">
          <source>ok</source>
          <target state="translated">ok</target>
        </trans-unit>
        <trans-unit id="db3d405b10675998c030223177d42e71b4e7a312" translate="yes" xml:space="preserve">
          <source>on</source>
          <target state="translated">on</target>
        </trans-unit>
        <trans-unit id="0d347175df0ad682d14a19c9415db17583bd86ec" translate="yes" xml:space="preserve">
          <source>onElement Callback</source>
          <target state="translated">onElement回调</target>
        </trans-unit>
        <trans-unit id="1863835675e3970e15e5c22411ef60824eb55591" translate="yes" xml:space="preserve">
          <source>once</source>
          <target state="translated">once</target>
        </trans-unit>
        <trans-unit id="c2a9cf9df3ddd64236a68589104819c6fdc0a2a5" translate="yes" xml:space="preserve">
          <source>oneOf(&lt;em&gt;values&lt;/em&gt;)</source>
          <target state="translated">oneOf(&lt;em&gt;values&lt;/em&gt;)</target>
        </trans-unit>
        <trans-unit id="2f6d3eca5a849f14e9764ff9a4a76e9f53e690a8" translate="yes" xml:space="preserve">
          <source>ordered</source>
          <target state="translated">ordered</target>
        </trans-unit>
        <trans-unit id="52a0610f0ce006d52ca0dc8952a611d8567935b8" translate="yes" xml:space="preserve">
          <source>ownProperty(&lt;em&gt;name&lt;/em&gt;)</source>
          <target state="translated">ownProperty(&lt;em&gt;name&lt;/em&gt;)</target>
        </trans-unit>
        <trans-unit id="4c3a24c2670e2ac9f412ee2f74f9864924ff1f5b" translate="yes" xml:space="preserve">
          <source>ownPropertyDescriptor(&lt;em&gt;name&lt;/em&gt;)</source>
          <target state="translated">ownPropertyDescriptor(&lt;em&gt;name&lt;/em&gt;)</target>
        </trans-unit>
        <trans-unit id="d8fd39d0bbdd2dcf322d8b11390a4c5825b11495" translate="yes" xml:space="preserve">
          <source>parent</source>
          <target state="translated">parent</target>
        </trans-unit>
        <trans-unit id="a664f10b5e580cdde0ca6f4ae01ccf741592737a" translate="yes" xml:space="preserve">
          <source>parents</source>
          <target state="translated">parents</target>
        </trans-unit>
        <trans-unit id="60dda22734c279778cf61057ba7b044370b7d49e" translate="yes" xml:space="preserve">
          <source>parentsUntil</source>
          <target state="translated">parentsUntil</target>
        </trans-unit>
        <trans-unit id="de12302a32f350df35b22c9171d543c4f480e5d7" translate="yes" xml:space="preserve">
          <source>pass &lt;code&gt;false&lt;/code&gt; to disable existing route stubs</source>
          <target state="translated">传递 &lt;code&gt;false&lt;/code&gt; 以禁用现有的路由存根</target>
        </trans-unit>
        <trans-unit id="ef8d29955a725c39916a4626f3921a0104242439" translate="yes" xml:space="preserve">
          <source>pause</source>
          <target state="translated">pause</target>
        </trans-unit>
        <trans-unit id="3c72abbe626f27d174d80fc434b851cce7bde6d3" translate="yes" xml:space="preserve">
          <source>platform</source>
          <target state="translated">platform</target>
        </trans-unit>
        <trans-unit id="8d106d8420cfb95790cc8f657069bb679627be1a" translate="yes" xml:space="preserve">
          <source>pointer-events: none</source>
          <target state="translated">指针事件:无</target>
        </trans-unit>
        <trans-unit id="859d455b8ebd64a26ac0b5eb7278e93d30fb10ac" translate="yes" xml:space="preserve">
          <source>prev</source>
          <target state="translated">prev</target>
        </trans-unit>
        <trans-unit id="8a63c34bb17fd9d2f073e1fd9bdb46b752f749ed" translate="yes" xml:space="preserve">
          <source>prevAll</source>
          <target state="translated">prevAll</target>
        </trans-unit>
        <trans-unit id="8bcb944c7fd3ac61d0f8b9924a0f24f5bae349c8" translate="yes" xml:space="preserve">
          <source>prevUntil</source>
          <target state="translated">prevUntil</target>
        </trans-unit>
        <trans-unit id="317c3d1c259ddcd847d3847428c39baca6ba4cee" translate="yes" xml:space="preserve">
          <source>prop(&lt;em&gt;name&lt;/em&gt;, &lt;em&gt;[value]&lt;/em&gt;)</source>
          <target state="translated">prop（&lt;em&gt;name&lt;/em&gt;，&lt;em&gt;[value]&lt;/em&gt;）</target>
        </trans-unit>
        <trans-unit id="85bb3e80a17f26053a332bb011eb74a411cc0d72" translate="yes" xml:space="preserve">
          <source>property(&lt;em&gt;name&lt;/em&gt;, &lt;em&gt;[value]&lt;/em&gt;)</source>
          <target state="translated">属性（&lt;em&gt;名称&lt;/em&gt;，&lt;em&gt;[值]&lt;/em&gt;）</target>
        </trans-unit>
        <trans-unit id="8587ad3e265d7e1d3a5afbfe8390621c10a7ca41" translate="yes" xml:space="preserve">
          <source>provides the &lt;a href=&quot;../../api/commands/clock&quot;&gt;&lt;code&gt;cy.clock()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/tick&quot;&gt;&lt;code&gt;cy.tick()&lt;/code&gt;&lt;/a&gt; APIs</source>
          <target state="translated">提供&lt;a href=&quot;../../api/commands/clock&quot;&gt; &lt;code&gt;cy.clock()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../api/commands/tick&quot;&gt; &lt;code&gt;cy.tick()&lt;/code&gt; &lt;/a&gt; API</target>
        </trans-unit>
        <trans-unit id="33b1fe83ee7fe7f82a4005bbd20d4f1c3a71ac57" translate="yes" xml:space="preserve">
          <source>provides the &lt;a href=&quot;../../api/commands/stub&quot;&gt;&lt;code&gt;cy.stub()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/spy&quot;&gt;&lt;code&gt;cy.spy()&lt;/code&gt;&lt;/a&gt; APIs</source>
          <target state="translated">提供&lt;a href=&quot;../../api/commands/stub&quot;&gt; &lt;code&gt;cy.stub()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../api/commands/spy&quot;&gt; &lt;code&gt;cy.spy()&lt;/code&gt; &lt;/a&gt; API</target>
        </trans-unit>
        <trans-unit id="73f5092ce31a05a69ed5ae13a01b963808776923" translate="yes" xml:space="preserve">
          <source>readFile</source>
          <target state="translated">readFile</target>
        </trans-unit>
        <trans-unit id="c17f720c0ef1a72e1a7ffed26d862ac21931e191" translate="yes" xml:space="preserve">
          <source>redirecting requests</source>
          <target state="translated">重定向请求</target>
        </trans-unit>
        <trans-unit id="d6e6e576541fa2152f6fc490b0e99e20c953988c" translate="yes" xml:space="preserve">
          <source>reload</source>
          <target state="translated">reload</target>
        </trans-unit>
        <trans-unit id="79483eca122d60e1838cf3ac2b022339d03c5730" translate="yes" xml:space="preserve">
          <source>removeAllListeners</source>
          <target state="translated">removeAllListeners</target>
        </trans-unit>
        <trans-unit id="f416665d1452ee063f5059487b8216ddb9f19c18" translate="yes" xml:space="preserve">
          <source>removeListener</source>
          <target state="translated">removeListener</target>
        </trans-unit>
        <trans-unit id="d610a96184d5dabaf9c7d58ffffb009dec67ef6a" translate="yes" xml:space="preserve">
          <source>removed use &lt;code&gt;CYPRESS_INSTALL_BINARY&lt;/code&gt; instead</source>
          <target state="translated">不再使用 &lt;code&gt;CYPRESS_INSTALL_BINARY&lt;/code&gt; 代替</target>
        </trans-unit>
        <trans-unit id="ee35826eaec59bd6a00cbd0a6deae8005ee4aa3a" translate="yes" xml:space="preserve">
          <source>removed use &lt;code&gt;CYPRESS_INSTALL_BINARY=0&lt;/code&gt; instead</source>
          <target state="translated">使用 &lt;code&gt;CYPRESS_INSTALL_BINARY=0&lt;/code&gt; 代替</target>
        </trans-unit>
        <trans-unit id="8eff98011d67112d81babff24b5370092a8420d7" translate="yes" xml:space="preserve">
          <source>replying with different responses</source>
          <target state="translated">异口同声</target>
        </trans-unit>
        <trans-unit id="088e29b0ab0079560dea5d3e5aeb2f7868af661e" translate="yes" xml:space="preserve">
          <source>request</source>
          <target state="translated">request</target>
        </trans-unit>
        <trans-unit id="3d53f87c2daa326af1f125b4e434eca12334ef51" translate="yes" xml:space="preserve">
          <source>reset state on the server / database</source>
          <target state="translated">重置服务器/数据库的状态</target>
        </trans-unit>
        <trans-unit id="ac22e8589d72998694fef2fef102afc3ca713a9d" translate="yes" xml:space="preserve">
          <source>respondTo(&lt;em&gt;method&lt;/em&gt;)</source>
          <target state="translated">respondTo(&lt;em&gt;method&lt;/em&gt;)</target>
        </trans-unit>
        <trans-unit id="bd868b3c6b50a1364e484d22796ee7ae0e745d79" translate="yes" xml:space="preserve">
          <source>response body when stubbing routes</source>
          <target state="translated">支线时的响应体</target>
        </trans-unit>
        <trans-unit id="ca7028420ee695416651cbd050845ac15baa9709" translate="yes" xml:space="preserve">
          <source>response headers for stubbed routes</source>
          <target state="translated">存根路由的响应头</target>
        </trans-unit>
        <trans-unit id="3d3bf64c2a67016f72e3173b25cd7c014f035d20" translate="yes" xml:space="preserve">
          <source>response status code when stubbing routes</source>
          <target state="translated">分支路由时的响应状态码</target>
        </trans-unit>
        <trans-unit id="5c4aa1c82a8f2be6c16b6a4277d6b582af9f4155" translate="yes" xml:space="preserve">
          <source>retry options &lt;strong&gt;(Object)&lt;/strong&gt;</source>
          <target state="translated">重试选项&lt;strong&gt;（对象）&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1302aeee7db4b8b7ffcf91019d299aeb21bf6f39" translate="yes" xml:space="preserve">
          <source>returned</source>
          <target state="translated">returned</target>
        </trans-unit>
        <trans-unit id="fd699f8583e894be69a50ca130d88c4d3743b12f" translate="yes" xml:space="preserve">
          <source>rightclick</source>
          <target state="translated">rightclick</target>
        </trans-unit>
        <trans-unit id="dc76e9f0c0006e8f919e0c515c66dbba3982f785" translate="yes" xml:space="preserve">
          <source>root</source>
          <target state="translated">root</target>
        </trans-unit>
        <trans-unit id="f8b77721db3865cbcd3c48d991841eaed614b7a8" translate="yes" xml:space="preserve">
          <source>root project folder</source>
          <target state="translated">根项目文件夹</target>
        </trans-unit>
        <trans-unit id="fc166eb81361ff31179cd3c83da3bfe088b851d3" translate="yes" xml:space="preserve">
          <source>route</source>
          <target state="translated">route</target>
        </trans-unit>
        <trans-unit id="82b29037ce7b2128c0faf8d9f67991fb1bc046dc" translate="yes" xml:space="preserve">
          <source>satisfy(&lt;em&gt;method&lt;/em&gt;)</source>
          <target state="translated">satisfy(&lt;em&gt;method&lt;/em&gt;)</target>
        </trans-unit>
        <trans-unit id="754d2e97bafe87cf79fea733afb2a09bab2db7e3" translate="yes" xml:space="preserve">
          <source>screenshot</source>
          <target state="translated">screenshot</target>
        </trans-unit>
        <trans-unit id="6cfdfea766b814d7c797c9ea0414d3c25f6588b1" translate="yes" xml:space="preserve">
          <source>scrollIntoView</source>
          <target state="translated">scrollIntoView</target>
        </trans-unit>
        <trans-unit id="6700c5597be1171483c418c50fa4958c4319dd58" translate="yes" xml:space="preserve">
          <source>scrollTo</source>
          <target state="translated">scrollTo</target>
        </trans-unit>
        <trans-unit id="812af7ed814ed75970f983084a5bcaa2229cb3cf" translate="yes" xml:space="preserve">
          <source>seed data by running executable scripts</source>
          <target state="translated">通过运行可执行脚本的种子数据</target>
        </trans-unit>
        <trans-unit id="81448fe273247b533b9f018e96c158cab7901247" translate="yes" xml:space="preserve">
          <source>select</source>
          <target state="translated">select</target>
        </trans-unit>
        <trans-unit id="835f3b50e33719422d6faca2d01d99417afea46b" translate="yes" xml:space="preserve">
          <source>selected</source>
          <target state="translated">selected</target>
        </trans-unit>
        <trans-unit id="3de4f901fffb30ac720b0e7eb654b4faa2dd03fa" translate="yes" xml:space="preserve">
          <source>server</source>
          <target state="translated">server</target>
        </trans-unit>
        <trans-unit id="c968f343d5ebd7d780a39ed08758be8fb80798dc" translate="yes" xml:space="preserve">
          <source>setCookie</source>
          <target state="translated">setCookie</target>
        </trans-unit>
        <trans-unit id="ed9d3d832af899035363a69fd53cd3be8f71501c" translate="yes" xml:space="preserve">
          <source>shadow</source>
          <target state="translated">shadow</target>
        </trans-unit>
        <trans-unit id="dd3035979b0589f90c1bcf53e00ddf8b4fb00f9f" translate="yes" xml:space="preserve">
          <source>shippable.yml</source>
          <target state="translated">shippable.yml</target>
        </trans-unit>
        <trans-unit id="c6dc9bc9f77b486a13b3f63ffb2ffd1cb3fef4db" translate="yes" xml:space="preserve">
          <source>should</source>
          <target state="translated">should</target>
        </trans-unit>
        <trans-unit id="e2910176a052e9880e3e654752f38352524c9172" translate="yes" xml:space="preserve">
          <source>siblings</source>
          <target state="translated">siblings</target>
        </trans-unit>
        <trans-unit id="39abfeda7b05ceff9704d48f58d0c4bca275e49e" translate="yes" xml:space="preserve">
          <source>sinon</source>
          <target state="translated">sinon</target>
        </trans-unit>
        <trans-unit id="078772725d009dfa127dbc9e3ac5682a60a9b371" translate="yes" xml:space="preserve">
          <source>spec</source>
          <target state="translated">spec</target>
        </trans-unit>
        <trans-unit id="ea118158db41224345b3de5e4f831e9c23fde1d2" translate="yes" xml:space="preserve">
          <source>spread</source>
          <target state="translated">spread</target>
        </trans-unit>
        <trans-unit id="3e6a717447654c7d91d56e5c836522fff758fc0e" translate="yes" xml:space="preserve">
          <source>spy</source>
          <target state="translated">spy</target>
        </trans-unit>
        <trans-unit id="132d9c65e05d7037939023336d4d0b68380293a9" translate="yes" xml:space="preserve">
          <source>spying on requests</source>
          <target state="translated">窃听</target>
        </trans-unit>
        <trans-unit id="ac9c073603dd424cdf4f2933aa7f0515c6c7c8d9" translate="yes" xml:space="preserve">
          <source>string(&lt;em&gt;string&lt;/em&gt;)</source>
          <target state="translated">string(&lt;em&gt;string&lt;/em&gt;)</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
