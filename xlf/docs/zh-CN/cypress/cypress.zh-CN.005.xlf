<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="cypress">
    <body>
      <group id="cypress">
        <trans-unit id="919551597df30356944cafd212832256a8c0df11" translate="yes" xml:space="preserve">
          <source>Enabling this would mean that for every single command, it would recover from errors, but only after each applicable command timeout was reached. Since timeouts start at 4 seconds (and exceed from there), this means that it would only fail after a long, long time.</source>
          <target state="translated">启用这个功能意味着对于每一条命令,它都会从错误中恢复,但只有在达到每个适用的命令超时后才会恢复。由于超时从4秒开始(并从那里开始超过),这意味着只有在很长很长的时间之后才会失败。</target>
        </trans-unit>
        <trans-unit id="7ea8c255859397cb43119394cba347868785c8a5" translate="yes" xml:space="preserve">
          <source>Encode a fixture with Protocol Buffers.</source>
          <target state="translated">用协议缓冲区对夹具进行编码。</target>
        </trans-unit>
        <trans-unit id="5821fec7ee87050117e2081a31b307f34868a8ad" translate="yes" xml:space="preserve">
          <source>Encoding</source>
          <target state="translated">Encoding</target>
        </trans-unit>
        <trans-unit id="b1adbe164ee63dd9c7f2a4593f50e7b7a78d2933" translate="yes" xml:space="preserve">
          <source>End a chain of commands.</source>
          <target state="translated">结束一连串的命令。</target>
        </trans-unit>
        <trans-unit id="e6f6463c153c032ec57c13a6815c6707e987c657" translate="yes" xml:space="preserve">
          <source>End-to-end tests</source>
          <target state="translated">端到端测试</target>
        </trans-unit>
        <trans-unit id="dc9c95c5e8bc53a4dcd048eabe4c357d20b5606d" translate="yes" xml:space="preserve">
          <source>Enhanced &lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt; to accept &lt;code&gt;eventually&lt;/code&gt; flag to automatically retry assertions until timeout is reached.</source>
          <target state="translated">增强的&lt;a href=&quot;../../api/commands/should&quot;&gt; &lt;code&gt;.should()&lt;/code&gt; &lt;/a&gt;可以接受 &lt;code&gt;eventually&lt;/code&gt; 标志来自动重试断言，直到达到超时为止。</target>
        </trans-unit>
        <trans-unit id="0431e82b16187349449045f6f9626771e165eb50" translate="yes" xml:space="preserve">
          <source>Ensure element is scrollable. Error if element cannot scroll.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca79022eedafdc9baaf95b2b49cce41fcc1e6eea" translate="yes" xml:space="preserve">
          <source>Ensure it is not animating</source>
          <target state="translated">确保它不是动画</target>
        </trans-unit>
        <trans-unit id="6bd28c56432380e3f912525f6af0f9c44b907e9b" translate="yes" xml:space="preserve">
          <source>Ensure it is not covered</source>
          <target state="translated">确保它没有被覆盖</target>
        </trans-unit>
        <trans-unit id="b515507685300afd9564c5ff4e8053ea10beb757" translate="yes" xml:space="preserve">
          <source>Ensure it is not disabled</source>
          <target state="translated">确保它没有被禁用</target>
        </trans-unit>
        <trans-unit id="22ec6995360904e0d3d9d4c55e765bcd0da7e133" translate="yes" xml:space="preserve">
          <source>Ensure it is not readonly</source>
          <target state="translated">确保它不是只读</target>
        </trans-unit>
        <trans-unit id="cfa8913f432e799e200d2a95b10e32335be7fa56" translate="yes" xml:space="preserve">
          <source>Ensure it is visible</source>
          <target state="translated">确保它是可见的</target>
        </trans-unit>
        <trans-unit id="4310731e72eabf26a3eb446e02ef8579a5237f5d" translate="yes" xml:space="preserve">
          <source>Ensure the element is not animating.</source>
          <target state="translated">确保该元素没有动画。</target>
        </trans-unit>
        <trans-unit id="b1007053ced6553c9fd1f6424bca2c3f220eca1e" translate="yes" xml:space="preserve">
          <source>Ensure the element is not covered.</source>
          <target state="translated">确保该元素不被覆盖。</target>
        </trans-unit>
        <trans-unit id="ccc1610572b26e8b08c6a4c34c737395f4333d8d" translate="yes" xml:space="preserve">
          <source>Ensure the element is not disabled.</source>
          <target state="translated">确保该元素没有被禁用。</target>
        </trans-unit>
        <trans-unit id="0d19677ee6acc9d5c50e9b91a94c4ed5155f590d" translate="yes" xml:space="preserve">
          <source>Ensure the element is not hidden.</source>
          <target state="translated">确保该元素不被隐藏。</target>
        </trans-unit>
        <trans-unit id="368fc70a50a93ced761903d47a41db1f3a8d3a17" translate="yes" xml:space="preserve">
          <source>Ensure the element is not readonly.</source>
          <target state="translated">确保该元素不是只读。</target>
        </trans-unit>
        <trans-unit id="f6926f03c557954977ef6356cd9d7fe3652d0014" translate="yes" xml:space="preserve">
          <source>Ensure the element you are trying to call &lt;code&gt;.focus()&lt;/code&gt; on is a &lt;a href=&quot;https://www.w3.org/TR/html5/editing.html#focusable&quot;&gt;focusable element&lt;/a&gt;.</source>
          <target state="translated">确保要调用 &lt;code&gt;.focus()&lt;/code&gt; 的&lt;a href=&quot;https://www.w3.org/TR/html5/editing.html#focusable&quot;&gt;元素&lt;/a&gt;是可聚焦元素。</target>
        </trans-unit>
        <trans-unit id="384a6e9623ee89d57bf379a1678db79477e198f0" translate="yes" xml:space="preserve">
          <source>Environment Variable</source>
          <target state="translated">环境变量</target>
        </trans-unit>
        <trans-unit id="ec072bba7befaa68af710fe3549eb0491d7badd1" translate="yes" xml:space="preserve">
          <source>Environment Variables</source>
          <target state="translated">环境变量</target>
        </trans-unit>
        <trans-unit id="aa508e9bef3af1389a3020abd9c7793caae33c76" translate="yes" xml:space="preserve">
          <source>Environment Variables recipe</source>
          <target state="translated">环境变量配方</target>
        </trans-unit>
        <trans-unit id="1173b2e11bd16e5dc36c119a4b84f02be11626b5" translate="yes" xml:space="preserve">
          <source>Environment variables</source>
          <target state="translated">环境变量</target>
        </trans-unit>
        <trans-unit id="fc92a9c3a64a7543ce72d138611445527c755578" translate="yes" xml:space="preserve">
          <source>Environment variables are great at pointing to external services and servers, or storing password or other credentials.</source>
          <target state="translated">环境变量是指向外部服务和服务器,或存储密码或其他凭证的好帮手。</target>
        </trans-unit>
        <trans-unit id="94f1956fc009fdce8d624d9e2835373ffa72501f" translate="yes" xml:space="preserve">
          <source>Environment variables are useful when:</source>
          <target state="translated">环境变量在以下情况下很有用:</target>
        </trans-unit>
        <trans-unit id="f4ce0155cb72d83c03781b384f78b9b2272a0a9e" translate="yes" xml:space="preserve">
          <source>Environment variables can be changed easily - especially when running in CI.</source>
          <target state="translated">环境变量可以很容易地被改变--尤其是在CI中运行时。</target>
        </trans-unit>
        <trans-unit id="30333666567894e35870601003c548b606d3b2c8" translate="yes" xml:space="preserve">
          <source>Environment variables for Semaphore 2.0 are now captured when recording tests to the Dashboard. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4671&quot;&gt;#4671&lt;/a&gt;.</source>
          <target state="translated">现在，将测试记录到仪表板上时，将捕获Semaphore 2.0的环境变量。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4671&quot;&gt;＃4671&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3634cf23ae7c404597c456674b568879629b5ba7" translate="yes" xml:space="preserve">
          <source>Environment variables set using &lt;code&gt;Cypress.env&lt;/code&gt;&lt;em&gt;are only in scope for the current spec file.&lt;/em&gt;</source>
          <target state="translated">使用 &lt;code&gt;Cypress.env&lt;/code&gt; 设置的环境变量&lt;em&gt;仅在当前规范文件的范围内。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cd6cbbb19e47188e0f4a16c137fc8b4d198da3be" translate="yes" xml:space="preserve">
          <source>Environment variables that do not match configuration keys will instead be set as regular environment variables for use in your tests with &lt;code&gt;Cypress.env()&lt;/code&gt;.</source>
          <target state="translated">与配置键不匹配的环境变量将被设置为常规环境变量，以供您在 &lt;code&gt;Cypress.env()&lt;/code&gt; 的测试中使用。</target>
        </trans-unit>
        <trans-unit id="fa647c1ab7e45907989ea68b5acf3879755d28ca" translate="yes" xml:space="preserve">
          <source>Error Messages</source>
          <target state="translated">错误信息</target>
        </trans-unit>
        <trans-unit id="6a18f05e0a5a1ef739509b16e48dcb60c926009f" translate="yes" xml:space="preserve">
          <source>Error Recovery</source>
          <target state="translated">错误恢复</target>
        </trans-unit>
        <trans-unit id="73631d7f0356fdbdeaa36f8e5dbad89c6aa15dc4" translate="yes" xml:space="preserve">
          <source>Error handling</source>
          <target state="translated">错误处理</target>
        </trans-unit>
        <trans-unit id="a7dadcb4736c27170931fdcf7841a1fb8de3a859" translate="yes" xml:space="preserve">
          <source>Error handling for invalid arguments passed to &lt;a href=&quot;../../api/commands/wait&quot;&gt;&lt;code&gt;cy.wait()&lt;/code&gt;&lt;/a&gt; have been improved and will now suggest valid arguments that are acceptable.</source>
          <target state="translated">对传递给&lt;a href=&quot;../../api/commands/wait&quot;&gt; &lt;code&gt;cy.wait()&lt;/code&gt; 的&lt;/a&gt;无效参数的错误处理已得到改进，现在将建议可接受的有效参数。</target>
        </trans-unit>
        <trans-unit id="982e82df0e80e302edc2f8a09a70d717466a86e7" translate="yes" xml:space="preserve">
          <source>Error messages and command messages for &lt;a href=&quot;../../api/commands/its&quot;&gt;&lt;code&gt;.its()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/invoke&quot;&gt;&lt;code&gt;.invoke()&lt;/code&gt;&lt;/a&gt; have been improved.</source>
          <target state="translated">错误消息和命令消息&lt;a href=&quot;../../api/commands/its&quot;&gt; &lt;code&gt;.its()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../api/commands/invoke&quot;&gt; &lt;code&gt;.invoke()&lt;/code&gt; &lt;/a&gt;都得到了提高。</target>
        </trans-unit>
        <trans-unit id="6109861390104b5df44cf97b43d8f8aa5eebfedf" translate="yes" xml:space="preserve">
          <source>Error messages no longer break within words.</source>
          <target state="translated">错误信息不再在字内中断。</target>
        </trans-unit>
        <trans-unit id="76882bf98cee4086a1074b159fda3d1a5d2cd96c" translate="yes" xml:space="preserve">
          <source>Errors / crashes encountered when updating to newer versions through the app should be fixed now.</source>
          <target state="translated">通过应用程序更新到新版本时遇到的错误/崩溃现在应该已经修复。</target>
        </trans-unit>
        <trans-unit id="854f93a83e75f7d2544802812315f4ac785a5e0a" translate="yes" xml:space="preserve">
          <source>Errors coming from plugins now display correctly in the Test Runner. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/945&quot;&gt;#945&lt;/a&gt;.</source>
          <target state="translated">现在，来自插件的错误会在测试运行器中正确显示。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/945&quot;&gt;＃945&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4c711fa24b5948b08ce83b5f001b7e2dc18357dd" translate="yes" xml:space="preserve">
          <source>Errors from your plugins &lt;em&gt;will not crash&lt;/em&gt; Cypress.</source>
          <target state="translated">插件&lt;em&gt;产生的&lt;/em&gt;错误&lt;em&gt;不会使&lt;/em&gt;赛普拉斯&lt;em&gt;崩溃&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="5add43a5bd5039885f5128e025a33fe0f420e4c4" translate="yes" xml:space="preserve">
          <source>Errors reading / writing &lt;code&gt;cypress.json&lt;/code&gt; on project add are now displayed inline.</source>
          <target state="translated">现在，内联显示在项目添加上读取/写入 &lt;code&gt;cypress.json&lt;/code&gt; 的错误。</target>
        </trans-unit>
        <trans-unit id="4d11088b337bf194afbbba34e3461bb6fd238912" translate="yes" xml:space="preserve">
          <source>Especially useful for CI environments.</source>
          <target state="translated">对CI环境特别有用。</target>
        </trans-unit>
        <trans-unit id="c2c87aeb3c9446cb9afda9709099fc6367e9171f" translate="yes" xml:space="preserve">
          <source>Even a single end-to-end test can cover a lot of the application code. For example, let&amp;rsquo;s run the following test that adds a few items, then marks one of them as completed.</source>
          <target state="translated">甚至单个端到端测试都可以覆盖很多应用程序代码。例如，让我们运行以下测试，添加一些项目，然后将其中一项标记为已完成。</target>
        </trans-unit>
        <trans-unit id="070e5c4e1df907c99cad4f5f60301bb41273abf7" translate="yes" xml:space="preserve">
          <source>Even better, we can drill down into the individual source files to see what code we missed. In our example application, the main state logic is in the &lt;code&gt;src/reducers/todos.js&lt;/code&gt; file. Let&amp;rsquo;s see the code coverage in this file:</source>
          <target state="translated">更好的是，我们可以深入查看各个源文件，以查看缺少的代码。在我们的示例应用程序中，主要状态逻辑位于 &lt;code&gt;src/reducers/todos.js&lt;/code&gt; 文件中。让我们看看此文件中的代码覆盖率：</target>
        </trans-unit>
        <trans-unit id="316c07239617168f09bbce549bb637e294cdddb8" translate="yes" xml:space="preserve">
          <source>Even if you decide to skip using a 3rd party image storage and comparison service, you can still perform visual testing. Follow the example &lt;a href=&quot;https://medium.com/norwich-node-user-group/visual-regression-testing-with-cypress-io-and-cypress-image-snapshot-99c520ccc595&quot;&gt;Visual Regression testing with Cypress and cypress-image-snapshot&lt;/a&gt; tutorial and do it all yourself.</source>
          <target state="translated">即使您决定跳过使用第三方图像存储和比较服务，您仍然可以执行视觉测试。遵循有关&lt;a href=&quot;https://medium.com/norwich-node-user-group/visual-regression-testing-with-cypress-io-and-cypress-image-snapshot-99c520ccc595&quot;&gt;Cypress和cypress-image-snapshot&lt;/a&gt;教程的示例Visual Regression测试，并自己完成所有操作。</target>
        </trans-unit>
        <trans-unit id="e7ca4e8e12e18c02a22ac44bcb7517ef6ada4084" translate="yes" xml:space="preserve">
          <source>Even if your project is JavaScript only, the JavaScript specs can know about the new command by referencing the file using the special tripple slash &lt;code&gt;reference path&lt;/code&gt; comment.</source>
          <target state="translated">即使您的项目仅是JavaScript，JavaScript规范也可以通过使用特殊的三重斜杠 &lt;code&gt;reference path&lt;/code&gt; 注释来引用文件来了解新命令。</target>
        </trans-unit>
        <trans-unit id="34febeff692095a91412c9c2164509300bda3cb0" translate="yes" xml:space="preserve">
          <source>Even more - action commands will automatically wait for their element to reach an &lt;a href=&quot;interacting-with-elements&quot;&gt;actionable state&lt;/a&gt; before failing.</source>
          <target state="translated">甚至更多-操作命令将在失败之前自动等待其元素达到&lt;a href=&quot;interacting-with-elements&quot;&gt;可操作状态&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5e33674133df3ccb1942dae043fe37b25ee9bc2c" translate="yes" xml:space="preserve">
          <source>Even the &lt;code&gt;Initiator&lt;/code&gt; is included, which is a stack trace to what caused the XHR to be sent.</source>
          <target state="translated">甚至包括 &lt;code&gt;Initiator&lt;/code&gt; ，这是导致XHR发送的堆栈跟踪信息。</target>
        </trans-unit>
        <trans-unit id="b65e02a9c75ae05082f82517ba5d146b4be79ef3" translate="yes" xml:space="preserve">
          <source>Even then, it&amp;rsquo;s still possible a WebSocket message could come in&amp;hellip; so 5 minutes!</source>
          <target state="translated">即使那样，WebSocket消息仍然有可能进来&amp;hellip;&amp;hellip;所以5分钟！</target>
        </trans-unit>
        <trans-unit id="eb047f8f50813fbd685a9d55a025552dce04a4fe" translate="yes" xml:space="preserve">
          <source>Even then, not enough, it&amp;rsquo;s possible a &lt;code&gt;setTimeout&lt;/code&gt; could trigger&amp;hellip; 60 minutes.</source>
          <target state="translated">即使这样，还不够， &lt;code&gt;setTimeout&lt;/code&gt; 可能会触发&amp;hellip;&amp;hellip;60分钟。</target>
        </trans-unit>
        <trans-unit id="6aaba616433654358f7d68d07e61e99aed209f2d" translate="yes" xml:space="preserve">
          <source>Even though Cypress runs in the browser, it automatically makes this property available for use in your tests.</source>
          <target state="translated">即使Cypress在浏览器中运行,它也会自动让这个属性在你的测试中使用。</target>
        </trans-unit>
        <trans-unit id="25bd6c11f0c963778ec1e7e1fc7222fe8ad6ee0e" translate="yes" xml:space="preserve">
          <source>Even though the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; is the deepest element that contains &amp;ldquo;Age&amp;rdquo;, Cypress yields &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; elements over &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">尽管 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 是包含&amp;ldquo;年龄&amp;rdquo;最深的元件，丝柏产量 &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; 以上的元素 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="16a3ff57e8669d6ebb647842dac8efa08438293e" translate="yes" xml:space="preserve">
          <source>Even though the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; is the deepest element that contains &amp;ldquo;Search&amp;rdquo;, Cypress yields &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; elements over spans.</source>
          <target state="translated">即使 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 是包含&amp;ldquo;搜索&amp;rdquo;的最深的元素，赛普拉斯也会在跨度范围内生成 &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; 元素。</target>
        </trans-unit>
        <trans-unit id="74d1d5127742b8f47d6030fa661dcfd34932aea1" translate="yes" xml:space="preserve">
          <source>Even though the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; is the deepest element that contains &amp;ldquo;Sign Out&amp;rdquo;, Cypress yields anchor elements over spans.</source>
          <target state="translated">即使 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 是包含&amp;ldquo; Sign Out&amp;rdquo;的最深的元素，赛普拉斯也会在跨度上生成锚定元素。</target>
        </trans-unit>
        <trans-unit id="ec3f99a18cc580ff52b143719737d0bc996537af" translate="yes" xml:space="preserve">
          <source>Even though the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; is the deepest element that contains a &amp;ldquo;4&amp;rdquo;, Cypress automatically yields &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; elements over spans because of its &lt;a href=&quot;#Preferences&quot;&gt;preferred element order&lt;/a&gt;.</source>
          <target state="translated">即使 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 是包含&amp;ldquo; 4&amp;rdquo;的最深元素，赛普拉斯也会根据其&lt;a href=&quot;#Preferences&quot;&gt;首选元素顺序&lt;/a&gt;自动生成跨度的 &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; 元素。</target>
        </trans-unit>
        <trans-unit id="0d5310bf2439662720de316fb2282fea56d8b3b7" translate="yes" xml:space="preserve">
          <source>Even though we haven&amp;rsquo;t written any tests yet - that&amp;rsquo;s okay - let&amp;rsquo;s click on &lt;code&gt;sample_spec.js&lt;/code&gt; and watch Cypress launch your browser.</source>
          <target state="translated">即使我们尚未编写任何测试-没关系-让我们单击 &lt;code&gt;sample_spec.js&lt;/code&gt; 并观看赛普拉斯启动您的浏览器。</target>
        </trans-unit>
        <trans-unit id="d2e7b642f1543fd59199a0e516117870146d988d" translate="yes" xml:space="preserve">
          <source>Even though we return a string in our test, Cypress automatically figures out that you&amp;rsquo;ve queued commands above and does not end the test until all cy commands have finished.</source>
          <target state="translated">即使我们在测试中返回了一个字符串，赛普拉斯也会自动确定您已在上面排队了命令，并且直到所有cy命令都完成后才结束测试。</target>
        </trans-unit>
        <trans-unit id="538a7cffc1912098499e098166d1acdfe6a5783e" translate="yes" xml:space="preserve">
          <source>Even when tests fail, the &lt;code&gt;Promise&lt;/code&gt; still resolves with the test results. The &lt;code&gt;Promise&lt;/code&gt; is only rejected if Cypress cannot run for some reason; for example if a binary has not been installed or it cannot find a module dependency. In that case, the &lt;code&gt;Promise&lt;/code&gt; will be rejected with a detailed error.</source>
          <target state="translated">即使测试失败， &lt;code&gt;Promise&lt;/code&gt; 仍然可以解决测试结果。该 &lt;code&gt;Promise&lt;/code&gt; 如果赛普拉斯因为某些原因而运行只拒绝; 例如，如果尚未安装二进制文件或找不到模块依赖性。在这种情况下， &lt;code&gt;Promise&lt;/code&gt; 将被拒绝，并出现详细错误。</target>
        </trans-unit>
        <trans-unit id="83e58ad59937dd85431ce7edc11b58f8d769de48" translate="yes" xml:space="preserve">
          <source>Even without adding an assertion, we know that everything is okay! This is because many of Cypress&amp;rsquo; commands are built to fail if they don&amp;rsquo;t find what they&amp;rsquo;re expecting to find. This is known as a &lt;a href=&quot;../core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;Default Assertion&lt;/a&gt;.</source>
          <target state="translated">即使没有添加断言，我们也知道一切都很好！这是因为，如果Cypress的许多命令没有找到期望的内容，它们就会失败。这称为&lt;a href=&quot;../core-concepts/introduction-to-cypress#Default-Assertions&quot;&gt;默认断言&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cba520496df229530fa8c523fecb833a3c475bcb" translate="yes" xml:space="preserve">
          <source>Even your non-technical collaborators can appreciate the way this reads!</source>
          <target state="translated">即使你的非技术合作者也能欣赏这种阅读方式!</target>
        </trans-unit>
        <trans-unit id="ad8919ace091b14011c6439cfd5e1707b58f5abd" translate="yes" xml:space="preserve">
          <source>Event</source>
          <target state="translated">Event</target>
        </trans-unit>
        <trans-unit id="d9a0263e8f89e8508419dc7101a0fe1b909f31d6" translate="yes" xml:space="preserve">
          <source>Event Cancellation</source>
          <target state="translated">活动取消</target>
        </trans-unit>
        <trans-unit id="17ee02f7ce9b63351840d187299d0f76b5f9ece3" translate="yes" xml:space="preserve">
          <source>Event Firing</source>
          <target state="translated">事件发射</target>
        </trans-unit>
        <trans-unit id="b21caf606a0e2496ef0f5a053cbe76bec439daaf" translate="yes" xml:space="preserve">
          <source>Event Types</source>
          <target state="translated">事件类型</target>
        </trans-unit>
        <trans-unit id="c5497bca58468ae64aed6c0fd921109217988db3" translate="yes" xml:space="preserve">
          <source>Events</source>
          <target state="translated">Events</target>
        </trans-unit>
        <trans-unit id="82c1c6b3f4b539d9a216b58656cd339328dddc4b" translate="yes" xml:space="preserve">
          <source>Events that are fired:</source>
          <target state="translated">发射的事件。</target>
        </trans-unit>
        <trans-unit id="da52eba1bd92bb873eb55802ea0324199e38da3c" translate="yes" xml:space="preserve">
          <source>Events that fire</source>
          <target state="translated">发射的事件</target>
        </trans-unit>
        <trans-unit id="e9d48c3fa29cd1b85026a0bddc44e28912df51d7" translate="yes" xml:space="preserve">
          <source>Events that should not fire on non input types such as elements with &lt;code&gt;tabindex&lt;/code&gt; do not fire their &lt;code&gt;textInput&lt;/code&gt; or &lt;code&gt;input&lt;/code&gt; events. Only typing into elements which cause the actual value or text to change will fire those events.</source>
          <target state="translated">不应在非输入类型上触发的事件（例如具有 &lt;code&gt;tabindex&lt;/code&gt; 的元素）不会触发其 &lt;code&gt;textInput&lt;/code&gt; 或 &lt;code&gt;input&lt;/code&gt; 事件。只有键入会导致实际值或文本更改的元素，才会触发这些事件。</target>
        </trans-unit>
        <trans-unit id="d3c9763723437cb0418c9553bac2a22f39077299" translate="yes" xml:space="preserve">
          <source>Events that were &lt;code&gt;defaultPrevented&lt;/code&gt; may prevent other events from firing and those will show up as empty. For instance, canceling &lt;code&gt;keydown&lt;/code&gt; will not fire &lt;code&gt;keypress&lt;/code&gt; or &lt;code&gt;textInput&lt;/code&gt; or &lt;code&gt;input&lt;/code&gt;, but will fire &lt;code&gt;keyup&lt;/code&gt; (which matches the spec).</source>
          <target state="translated">事件是 &lt;code&gt;defaultPrevented&lt;/code&gt; 可以防止烧等事件以及那些将显示为空。例如，取消 &lt;code&gt;keydown&lt;/code&gt; 不会触发 &lt;code&gt;keypress&lt;/code&gt; 或 &lt;code&gt;textInput&lt;/code&gt; 或 &lt;code&gt;input&lt;/code&gt; ，但是会触发 &lt;code&gt;keyup&lt;/code&gt; （与规范匹配）。</target>
        </trans-unit>
        <trans-unit id="2bb4bcadb624b3f1c5ccf23432f4522d0f284974" translate="yes" xml:space="preserve">
          <source>Every custom command you write is generally an abstraction over a series of internal commands. That means you and your team members exert much more mental effort to understand what your custom command does.</source>
          <target state="translated">你写的每一条自定义命令一般都是对一系列内部命令的抽象。这意味着你和你的团队成员要花费更多的心力去理解你的自定义命令的作用。</target>
        </trans-unit>
        <trans-unit id="6eee2af9481b18382f2ed15e769db1e4b28932dd" translate="yes" xml:space="preserve">
          <source>Every source file but 1 is covered at 100%. We can have great confidence in our application, and safely refactor the code knowing that we have a robust set of end-to-end tests.</source>
          <target state="translated">除1个源文件外,其他每个源文件都100%覆盖。我们可以对我们的应用程序有很大的信心,并安全地重构代码,因为我们知道我们有一套强大的端到端测试。</target>
        </trans-unit>
        <trans-unit id="d130c3bba2c7cd2cc3eb07249e9d555f452fd6e3" translate="yes" xml:space="preserve">
          <source>Every test you write will include selectors for elements. To save yourself a lot of headaches, you should write selectors that are resilient to changes.</source>
          <target state="translated">你写的每一个测试都会包含元素的选择器。为了让自己省去很多麻烦,你应该写出对变化有弹性的选择器。</target>
        </trans-unit>
        <trans-unit id="40fa7455656b959a33b81cf03ae0e5b3c00d8df5" translate="yes" xml:space="preserve">
          <source>Every time your tests run, you&amp;rsquo;d have to work out the complexity around starting an already running web server.</source>
          <target state="translated">每次运行测试时，都必须计算启动已经运行的Web服务器的复杂性。</target>
        </trans-unit>
        <trans-unit id="f5e54e38fa222d3ef6e281ccb610ecd33efb6668" translate="yes" xml:space="preserve">
          <source>Everything else; this includes, but isn&amp;rsquo;t limited to, the following:</source>
          <target state="translated">其他一切；这包括但不限于以下内容：</target>
        </trans-unit>
        <trans-unit id="b1f2d5208c5c81ab49f2946d8ace5a2b336fa79c" translate="yes" xml:space="preserve">
          <source>Everything except for the &lt;code&gt;cypress driver&lt;/code&gt; is now minified.</source>
          <target state="translated">现在，除了 &lt;code&gt;cypress driver&lt;/code&gt; 之外的所有内容都已缩小。</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="cda106d93dbff058312ac5299adcb6cbbf071eb0" translate="yes" xml:space="preserve">
          <source>Example #1: Default Assertion</source>
          <target state="translated">例#1:默认断言</target>
        </trans-unit>
        <trans-unit id="d3646043c0bbbc4ecbb7db5f6f77948b176d699b" translate="yes" xml:space="preserve">
          <source>Example #1: Existence and Actionability</source>
          <target state="translated">例1:存在性和可操作性</target>
        </trans-unit>
        <trans-unit id="7f2c071addd085d3b7fb47c324ea0c508644162d" translate="yes" xml:space="preserve">
          <source>Example #2: Additional Assertions</source>
          <target state="translated">示例#2:附加断言</target>
        </trans-unit>
        <trans-unit id="4cf4b889f372521e894a51bca1730c51da276fcc" translate="yes" xml:space="preserve">
          <source>Example #2: Reversing the Default Assertion</source>
          <target state="translated">例子#2:反转默认断言</target>
        </trans-unit>
        <trans-unit id="75ce43a785a0bad5e977237a8ef35938986ac4a3" translate="yes" xml:space="preserve">
          <source>Example #3: Modifying Timeouts</source>
          <target state="translated">例3:修改超时</target>
        </trans-unit>
        <trans-unit id="cb0f113118ec1dd5f83253b2ddd81ed3dd43ce78" translate="yes" xml:space="preserve">
          <source>Example #3: Other Default Assertions</source>
          <target state="translated">例3:其他默认断言</target>
        </trans-unit>
        <trans-unit id="e20fe15406406c1193750bd9bd3a0aee71cb54ed" translate="yes" xml:space="preserve">
          <source>Example &lt;code&gt;.travis.yml&lt;/code&gt; config file</source>
          <target state="translated">示例 &lt;code&gt;.travis.yml&lt;/code&gt; 配置文件</target>
        </trans-unit>
        <trans-unit id="1871dd0e29111f57e365587213d50fd672171e1d" translate="yes" xml:space="preserve">
          <source>Example &lt;code&gt;circle.yml&lt;/code&gt; v2 config file</source>
          <target state="translated">示例 &lt;code&gt;circle.yml&lt;/code&gt; v2配置文件</target>
        </trans-unit>
        <trans-unit id="95e4f7e6b45a07a97f456a3f2cf9f253a8e8ab02" translate="yes" xml:space="preserve">
          <source>Example &lt;code&gt;circle.yml&lt;/code&gt; v2 config file with &lt;code&gt;yarn&lt;/code&gt;</source>
          <target state="translated">带 &lt;code&gt;yarn&lt;/code&gt; 的示例 &lt;code&gt;circle.yml&lt;/code&gt; v2配置文件</target>
        </trans-unit>
        <trans-unit id="bc1515e6fa46ada277f22dc81464579676446a91" translate="yes" xml:space="preserve">
          <source>Example Config</source>
          <target state="translated">配置示例</target>
        </trans-unit>
        <trans-unit id="4e8bfdee37016dc05dc3033eca4f4fa6aeac9298" translate="yes" xml:space="preserve">
          <source>Example Project</source>
          <target state="translated">项目实例</target>
        </trans-unit>
        <trans-unit id="fa59e385a18703b72fb26ff502d8fc0c36eb16bf" translate="yes" xml:space="preserve">
          <source>Example below first asserts that there are 3 elements, and then checks the text content of each one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67013470cce4eefed122db16583e1484bfc70985" translate="yes" xml:space="preserve">
          <source>Example below first asserts that there are 3 elements, and then checks the text contents of each one.</source>
          <target state="translated">下面的例子首先断定有3个元素,然后检查每个元素的文本内容。</target>
        </trans-unit>
        <trans-unit id="6c1bc8d0049021fee3c658cec1a5f287f38659ad" translate="yes" xml:space="preserve">
          <source>Example fixture is automatically created with every project.</source>
          <target state="translated">每一个项目都会自动创建实例夹具。</target>
        </trans-unit>
        <trans-unit id="c1c84102101b31e7895a904c1ecf62219bfb13a9" translate="yes" xml:space="preserve">
          <source>Example of accessing insecure content</source>
          <target state="translated">访问不安全内容的例子</target>
        </trans-unit>
        <trans-unit id="687ea2dc8b338b1a173b77171b0ee6d2daa03308" translate="yes" xml:space="preserve">
          <source>Example of checking a hidden element</source>
          <target state="translated">检查隐藏元素的例子</target>
        </trans-unit>
        <trans-unit id="879f79211906adc49a6382606e537e73631e018c" translate="yes" xml:space="preserve">
          <source>Example of clicking on a hidden element</source>
          <target state="translated">点击隐藏元素的例子</target>
        </trans-unit>
        <trans-unit id="a72d714d0391ae914eb6abd8df5e7d50eaa9c8a5" translate="yes" xml:space="preserve">
          <source>Example of showing an element in order to perform action</source>
          <target state="translated">为了执行动作而显示元素的例子。</target>
        </trans-unit>
        <trans-unit id="3e4c9ab1c6a1a122f79375261c0c3e58b80fa3a4" translate="yes" xml:space="preserve">
          <source>Example project &lt;a href=&quot;https://github.com/cypress-io/cypress-example-todomvc#custom-commands&quot;&gt;cypress-example-todomvc custom commands&lt;/a&gt; uses custom commands to avoid boilerplate code.</source>
          <target state="translated">示例项目&lt;a href=&quot;https://github.com/cypress-io/cypress-example-todomvc#custom-commands&quot;&gt;cypress-example-todomvc定制命令&lt;/a&gt;使用定制命令来避免样板代码。</target>
        </trans-unit>
        <trans-unit id="cc604bfa71e82620908be6522acdac0ccf013433" translate="yes" xml:space="preserve">
          <source>Example projects</source>
          <target state="translated">项目实例</target>
        </trans-unit>
        <trans-unit id="c73d9ecb9b954f124575aed910e40cb5c40c69cb" translate="yes" xml:space="preserve">
          <source>Example support files are now automatically created with every project.</source>
          <target state="translated">现在每个项目都会自动创建实例支持文件。</target>
        </trans-unit>
        <trans-unit id="fbed259729114e24d3a96eb32f2bfe670fb1223b" translate="yes" xml:space="preserve">
          <source>Example using Q</source>
          <target state="translated">使用Q的例子</target>
        </trans-unit>
        <trans-unit id="7634761bc3fbdbca12db3a4aa128da7bf12da86d" translate="yes" xml:space="preserve">
          <source>Example using bluebird</source>
          <target state="translated">使用蓝鸟的例子</target>
        </trans-unit>
        <trans-unit id="c1aa442bf16eade0108fa19c3b02b6ed1bb1e93e" translate="yes" xml:space="preserve">
          <source>Example using jQuery deferred&amp;rsquo;s</source>
          <target state="translated">使用jQuery deferred的示例</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="74ee3363c3af54336f30ee9bf21c6e43f2077a43" translate="yes" xml:space="preserve">
          <source>Examples of child commands:</source>
          <target state="translated">子命令的例子:</target>
        </trans-unit>
        <trans-unit id="880599b2a0d02b71b09ce07a47b86cc30497c14f" translate="yes" xml:space="preserve">
          <source>Examples of dual commands:</source>
          <target state="translated">双重命令的例子:</target>
        </trans-unit>
        <trans-unit id="d204b0df57a68de79aef7f1fd315a2e7b2a9a438" translate="yes" xml:space="preserve">
          <source>Examples of parent commands:</source>
          <target state="translated">父级命令的例子。</target>
        </trans-unit>
        <trans-unit id="8c0d3ed4241015f9415aadcca1eb538de8674009" translate="yes" xml:space="preserve">
          <source>Examples of test cases that will error due to superdomain limitations</source>
          <target state="translated">由于超域限制而导致错误的测试案例的例子</target>
        </trans-unit>
        <trans-unit id="aff42aefbbc0310909afd6be7b156eb54bb540f2" translate="yes" xml:space="preserve">
          <source>Examples of uses for cross-origin iframes</source>
          <target state="translated">跨源iframe的应用实例</target>
        </trans-unit>
        <trans-unit id="33e9034158a2364c3c5b98c0752190049b235fcf" translate="yes" xml:space="preserve">
          <source>Examples of what Cypress does under the hood:</source>
          <target state="translated">赛普拉斯在引擎盖下的工作实例。</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="22245bf552f5d1e2a656f31f439a800f6c9f57de" translate="yes" xml:space="preserve">
          <source>Excluding and Including Tests</source>
          <target state="translated">排除和包括测试</target>
        </trans-unit>
        <trans-unit id="2205d33617d3487ee53d2f99d5ea8fab62b927bf" translate="yes" xml:space="preserve">
          <source>Execute a system command.</source>
          <target state="translated">执行系统命令。</target>
        </trans-unit>
        <trans-unit id="293192e5f7a60a5cbe28b76ed29b72afd3ab0c94" translate="yes" xml:space="preserve">
          <source>Execute code in &lt;a href=&quot;https://nodejs.org/&quot;&gt;Node&lt;/a&gt; via the &lt;code&gt;task&lt;/code&gt; plugin event.</source>
          <target state="translated">通过 &lt;code&gt;task&lt;/code&gt; 插件事件在&lt;a href=&quot;https://nodejs.org/&quot;&gt;Node中&lt;/a&gt;执行代码。</target>
        </trans-unit>
        <trans-unit id="90e52bd11234a2f4997a4cb3136a71f017d930d1" translate="yes" xml:space="preserve">
          <source>Execution context</source>
          <target state="translated">执行背景</target>
        </trans-unit>
        <trans-unit id="284fa58481d3e55b48c5f0000e3ff2086a2419ac" translate="yes" xml:space="preserve">
          <source>Existence</source>
          <target state="translated">Existence</target>
        </trans-unit>
        <trans-unit id="588d3efad476bd665ea1113c22f9fa826dddbdf5" translate="yes" xml:space="preserve">
          <source>Expand an array into multiple arguments.</source>
          <target state="translated">将一个数组扩展为多个参数。</target>
        </trans-unit>
        <trans-unit id="517e48c755df8c558e3a0004f395ad1b4a6a779a" translate="yes" xml:space="preserve">
          <source>Expand the array of aliased routes</source>
          <target state="translated">扩充别名途径的阵列</target>
        </trans-unit>
        <trans-unit id="c2b75ea762de66715d0880a384408dc20c0b3c27" translate="yes" xml:space="preserve">
          <source>Expand the array of cookies</source>
          <target state="translated">展开饼干阵列</target>
        </trans-unit>
        <trans-unit id="9b7f7300fb810319c6b2aaae1a6dd6698c73be11" translate="yes" xml:space="preserve">
          <source>Expanded &lt;code&gt;matcher&lt;/code&gt; and &lt;code&gt;matchers&lt;/code&gt; arguments to assist in filtering browsers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bafef844945eb3c16eb95dc63d90a555f95ac65d" translate="yes" xml:space="preserve">
          <source>Expected Binary Name(s)</source>
          <target state="translated">预期二进制名称</target>
        </trans-unit>
        <trans-unit id="5ee30f777a419d0761dc9182ee6ecf7d6de239b9" translate="yes" xml:space="preserve">
          <source>Expected Bundle Identifier</source>
          <target state="translated">预期的捆绑标识符</target>
        </trans-unit>
        <trans-unit id="a66c03cd448547b57e1fca30f9bcec2391bbb658" translate="yes" xml:space="preserve">
          <source>Expected Executable</source>
          <target state="translated">预期可执行</target>
        </trans-unit>
        <trans-unit id="e26c182298228cb8abbe3f2ddd9eb69638d5d6ae" translate="yes" xml:space="preserve">
          <source>Expected Path</source>
          <target state="translated">预期路径</target>
        </trans-unit>
        <trans-unit id="a23b41f77d0fb81d072c86413aa54d927a01952b" translate="yes" xml:space="preserve">
          <source>Explicit Subjects</source>
          <target state="translated">明确主题</target>
        </trans-unit>
        <trans-unit id="3d69f6e534c93f0e5d5c0e0762b1a67f56a0e324" translate="yes" xml:space="preserve">
          <source>Explicit assertions are great when you want to:</source>
          <target state="translated">明确的断言在你想的时候是很好的。</target>
        </trans-unit>
        <trans-unit id="a6bc7ed5c90afc6a09277e9af44f3ba18a6f6940" translate="yes" xml:space="preserve">
          <source>Export as `CYPRESS_*`</source>
          <target state="translated">出口为`CYPRESS_*`。</target>
        </trans-unit>
        <trans-unit id="0ee305a454b9b7fc3f84b4d3faf7ab6165973e05" translate="yes" xml:space="preserve">
          <source>Export cypress env variables from the command line</source>
          <target state="translated">从命令行导出cypress环境变量。</target>
        </trans-unit>
        <trans-unit id="5aa226bf009dca3cc6b371340f08ea1acef8bbf8" translate="yes" xml:space="preserve">
          <source>Expose data stores (like in Redux) so you can programmatically alter the state of your application directly from your test code.</source>
          <target state="translated">暴露数据存储(就像在Redux中一样),所以你可以直接从你的测试代码中以编程方式改变你的应用程序的状态。</target>
        </trans-unit>
        <trans-unit id="7f5899935f519c40597972d8a3546b6c97a34e4b" translate="yes" xml:space="preserve">
          <source>Exposed &lt;a href=&quot;../../api/cypress-api/iscy&quot;&gt;&lt;code&gt;Cypress.isCy()&lt;/code&gt;&lt;/a&gt; method to check if a value is a valid instance of &lt;code&gt;cy&lt;/code&gt; or a &lt;code&gt;cy&lt;/code&gt; chainable. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3822&quot;&gt;#3822&lt;/a&gt;.</source>
          <target state="translated">暴露&lt;a href=&quot;../../api/cypress-api/iscy&quot;&gt; &lt;code&gt;Cypress.isCy()&lt;/code&gt; &lt;/a&gt;检查方法，如果一个值的有效实例 &lt;code&gt;cy&lt;/code&gt; 或 &lt;code&gt;cy&lt;/code&gt; 环连接。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3822&quot;&gt;＃3822&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="97816fcca80f877e1dd8c8d4a9b6746975f3cd76" translate="yes" xml:space="preserve">
          <source>Exposed &lt;code&gt;Cypress.Dom.isHidden&lt;/code&gt; which holds the logic for determining an element&amp;rsquo;s visibility. Modify this to change the rules.</source>
          <target state="translated">裸露的 &lt;code&gt;Cypress.Dom.isHidden&lt;/code&gt; ，其中包含用于确定元素可见性的逻辑。修改此设置以更改规则。</target>
        </trans-unit>
        <trans-unit id="34f1aaf7cb56bdc17b80540dea6988478e8416f6" translate="yes" xml:space="preserve">
          <source>Exposed &lt;code&gt;visitTimeout&lt;/code&gt; and &lt;code&gt;requestTimeout&lt;/code&gt;&lt;a href=&quot;configuration&quot;&gt;configuration&lt;/a&gt;.</source>
          <target state="translated">裸露 &lt;code&gt;visitTimeout&lt;/code&gt; 和 &lt;code&gt;requestTimeout&lt;/code&gt; &lt;a href=&quot;configuration&quot;&gt;配置&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8a6541ac0205de7e153f9bdde35833e5943314f3" translate="yes" xml:space="preserve">
          <source>Exposing Cypress Binary should no longer be necessary when cypress is locally installed. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/379&quot;&gt;#379&lt;/a&gt;.</source>
          <target state="translated">当本地安装赛普拉斯时，不再需要暴露Cypress Binary。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/379&quot;&gt;＃379&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e718c76626048f58de044a2f8c12f3bab9df0749" translate="yes" xml:space="preserve">
          <source>Extending other testing frameworks</source>
          <target state="translated">扩展其他测试框架</target>
        </trans-unit>
        <trans-unit id="aff31dec6da157357b783dcfac904369b48b36fc" translate="yes" xml:space="preserve">
          <source>Extension policies: &lt;code&gt;ExtensionInstallBlacklist, ExtensionInstallWhitelist, ExtensionInstallForcelist, ExtensionInstallSources, ExtensionAllowedTypes, ExtensionAllowInsecureUpdates, ExtensionSettings, UninstallBlacklistedExtensions&lt;/code&gt;</source>
          <target state="translated">扩展策略： &lt;code&gt;ExtensionInstallBlacklist, ExtensionInstallWhitelist, ExtensionInstallForcelist, ExtensionInstallSources, ExtensionAllowedTypes, ExtensionAllowInsecureUpdates, ExtensionSettings, UninstallBlacklistedExtensions&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="494df28871f4062b348ebe4435b410b3dce90c80" translate="yes" xml:space="preserve">
          <source>Extensive memory profiling has been done and Cypress has implemented several strategies for aggressively causing garbage collection. The ebugging tools (which allow you to walk back in time through DOM snapshots, or access objects from previous tests) could exhaust all available emory in previous versions. This likely never affected most users, but if a user ran 1000&amp;rsquo;s of tests (which have been written in Cypress) it ould bomb. Now Cypress only stores data for up to 50 tests, and will begin purging data past that. When run in the terminal, Cypress doesn&amp;rsquo;t apply any of its debugging tools, so CI will be unaffected.</source>
          <target state="translated">广泛的内存配置已经完成，赛普拉斯已经实施了多种策略来积极引起垃圾回收。调试工具（允许您及时查看DOM快照或访问以前测试的对象）可能会耗尽以前版本中的所有可用emory。这可能永远不会影响大多数用户，但是如果用户运行了1000项测试（已用赛普拉斯编写），则该炸弹会炸弹。现在，赛普拉斯最多只能存储50个测试的数据，并将开始清除超过该数据的数据。当在终端中运行时，赛普拉斯不会应用任何调试工具，因此CI将不受影响。</target>
        </trans-unit>
        <trans-unit id="d7470bcae7dc95c1672e3376b1d6f69778f458ce" translate="yes" xml:space="preserve">
          <source>External Navigation</source>
          <target state="translated">外部导航</target>
        </trans-unit>
        <trans-unit id="2af280979e642a405f24bf2e6b6503a218b35f10" translate="yes" xml:space="preserve">
          <source>Extra whitespace and quotations are now stripped from the &lt;code&gt;CYPRESS_INSTALL_BINARY&lt;/code&gt; environment variable to help prevent some unexpected results when set in Windows. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4506&quot;&gt;#4506&lt;/a&gt;.</source>
          <target state="translated">现在，从 &lt;code&gt;CYPRESS_INSTALL_BINARY&lt;/code&gt; 环境变量中删除了多余的空格和引号，以帮助防止在Windows中进行设置时出现某些意外结果。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4506&quot;&gt;＃4506&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="89067fa664cb37a8a9e475b99e5cf190db554dca" translate="yes" xml:space="preserve">
          <source>Failing a hook will no longer continue to count the duration forever.</source>
          <target state="translated">钩子失败将不再继续永远计算持续时间。</target>
        </trans-unit>
        <trans-unit id="c940af38cb35879503e53721ac8014d87ca75a1d" translate="yes" xml:space="preserve">
          <source>Failing tests which become passing will automatically collapse again.</source>
          <target state="translated">不合格的测试,如果变成合格,又会自动崩溃。</target>
        </trans-unit>
        <trans-unit id="e9c4bd1d829292dc8565f6007a335c96eb1f722c" translate="yes" xml:space="preserve">
          <source>Failure messages are much more precise.</source>
          <target state="translated">失败信息更加精确。</target>
        </trans-unit>
        <trans-unit id="3eec15825d37016fd28fda8986cbc917e7a33c68" translate="yes" xml:space="preserve">
          <source>Failures</source>
          <target state="translated">Failures</target>
        </trans-unit>
        <trans-unit id="79b1b853fcf18ff708b48a26d6bca547168086f2" translate="yes" xml:space="preserve">
          <source>Fast, &amp;lt; 20ms response times</source>
          <target state="translated">快速，响应时间&amp;lt;20ms</target>
        </trans-unit>
        <trans-unit id="8d8701b6c18329b6a2215e2ed7ea8428d157b3ee" translate="yes" xml:space="preserve">
          <source>Fast, easy and reliable visual UI testing with Cypress</source>
          <target state="translated">使用Cypress进行快速、简单、可靠的可视化UI测试。</target>
        </trans-unit>
        <trans-unit id="b8dd84b887712a47a223e7acb621659657045025" translate="yes" xml:space="preserve">
          <source>Favor of &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; over other deeper elements</source>
          <target state="translated">的青睐 &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 比其他更深层次的元素</target>
        </trans-unit>
        <trans-unit id="bf73c4da1a11de431287bb2178a27739b085cd2a" translate="yes" xml:space="preserve">
          <source>Favor of &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; over other deeper elements</source>
          <target state="translated">的青睐 &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; 比其他更深元件</target>
        </trans-unit>
        <trans-unit id="00bd3404c5abcb1cca7ae893772036a47f83d02b" translate="yes" xml:space="preserve">
          <source>Favor of &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; over other deeper elements</source>
          <target state="translated">的青睐 &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; 比其他更深元件</target>
        </trans-unit>
        <trans-unit id="ad565d9d01d0e0bf91fd6a8532f6d81613338901" translate="yes" xml:space="preserve">
          <source>Feature</source>
          <target state="translated">Feature</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">Features</target>
        </trans-unit>
        <trans-unit id="5df81ffa82179b458e1d55e350db9d88805a69b2" translate="yes" xml:space="preserve">
          <source>Features:</source>
          <target state="translated">Features:</target>
        </trans-unit>
        <trans-unit id="b2da05997204759c0568480dcc216c1f835ad8c5" translate="yes" xml:space="preserve">
          <source>Feel free to &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html&quot;&gt;explore these additional logging in&lt;/a&gt; recipes.</source>
          <target state="translated">随意&lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html&quot;&gt;探索这些额外的&lt;/a&gt;配方日志。</target>
        </trans-unit>
        <trans-unit id="66de98b66dd6c45b26036329406669348c695928" translate="yes" xml:space="preserve">
          <source>Feel free to submit your published plugins to our &lt;a href=&quot;../../plugins/index&quot;&gt;list of plugins&lt;/a&gt;.</source>
          <target state="translated">随时将您发布的插件提交到我们&lt;a href=&quot;../../plugins/index&quot;&gt;的插件列表中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="663da9347806aa189f920ceb8b6f5cd33e8f3793" translate="yes" xml:space="preserve">
          <source>File changes</source>
          <target state="translated">文件变更</target>
        </trans-unit>
        <trans-unit id="7687744db8976c35166c825d15906dc94662741b" translate="yes" xml:space="preserve">
          <source>File events</source>
          <target state="translated">文件事件</target>
        </trans-unit>
        <trans-unit id="35c5bd3a1f18fe1dd0f0628bb953a4183220028e" translate="yes" xml:space="preserve">
          <source>File object</source>
          <target state="translated">文件对象</target>
        </trans-unit>
        <trans-unit id="feffac916d35a0e2a6b23d0031377f4f282551f9" translate="yes" xml:space="preserve">
          <source>File system flag as used with &lt;a href=&quot;https://nodejs.org/api/fs.html#fs_file_system_flags&quot;&gt;&lt;code&gt;fs.writeFile&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">与&lt;a href=&quot;https://nodejs.org/api/fs.html#fs_file_system_flags&quot;&gt; &lt;code&gt;fs.writeFile&lt;/code&gt; 一起&lt;/a&gt;使用的文件系统标志</target>
        </trans-unit>
        <trans-unit id="e91f50eead81f93d83448a8f1b714b149e54d231" translate="yes" xml:space="preserve">
          <source>File watching is fixed (again) when changing between specs. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1018&quot;&gt;#1018&lt;/a&gt;.</source>
          <target state="translated">在不同规格之间进行更改时，文件监视是固定的（再次）。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1018&quot;&gt;＃1018&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a3cbb98ddf5ee976bc1c3be5221d66ce3ca2e867" translate="yes" xml:space="preserve">
          <source>Filename</source>
          <target state="translated">Filename</target>
        </trans-unit>
        <trans-unit id="6ce6c512ea433a7fc5c8841628e7696cd0ff7f2b" translate="yes" xml:space="preserve">
          <source>Files</source>
          <target state="translated">Files</target>
        </trans-unit>
        <trans-unit id="e75c9effd39648002ee3fa4279bf21407b3ca86e" translate="yes" xml:space="preserve">
          <source>Fill in and submit the OSS plan request form.</source>
          <target state="translated">填写并提交OSS计划申请表。</target>
        </trans-unit>
        <trans-unit id="feb080a9f7cb2c3f7fe88c9ed4be9c41ef934c26" translate="yes" xml:space="preserve">
          <source>Fill in the name of your project (this is only for display purposes and can be changed later).</source>
          <target state="translated">填写你的项目名称(这只是为了显示,以后可以更改)。</target>
        </trans-unit>
        <trans-unit id="a865659c5e8630a023fa6bf42dbaabaf6c0c4f40" translate="yes" xml:space="preserve">
          <source>Fill in their email and select their &lt;a href=&quot;#User-roles&quot;&gt;role&lt;/a&gt; then click &lt;strong&gt;Invite User&lt;/strong&gt;&lt;em&gt;Note: only &amp;lsquo;owners can give other user&amp;rsquo;s &amp;lsquo;owner&amp;rsquo; access.&lt;/em&gt;</source>
          <target state="translated">填写他们的电子邮件并选择他们的&lt;a href=&quot;#User-roles&quot;&gt;角色，&lt;/a&gt;然后单击&amp;ldquo; &lt;strong&gt;邀请用户&lt;/strong&gt;&lt;em&gt;注意&amp;rdquo;：只有&amp;ldquo;所有者&amp;rdquo;可以授予其他用户的&amp;ldquo;所有者&amp;rdquo;访问权限。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d7decf1aa22b02ae8abf9a96849ee423eee838e4" translate="yes" xml:space="preserve">
          <source>Filter</source>
          <target state="translated">Filter</target>
        </trans-unit>
        <trans-unit id="098832ec24832f68e39ac3c1aa619064c4962e5c" translate="yes" xml:space="preserve">
          <source>Filter DOM element(s) from a set of DOM elements.</source>
          <target state="translated">从一组DOM元素中过滤DOM元素。</target>
        </trans-unit>
        <trans-unit id="c470d8b4dfda0fe97907fa10ff672d681a05ed1c" translate="yes" xml:space="preserve">
          <source>Filter by text</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="923928d715d63bece2975ad3f1107b4d534186ca" translate="yes" xml:space="preserve">
          <source>Filter one or multiple browsers by the browser properties. You can inspect the current browser&amp;rsquo;s properties by using the &lt;a href=&quot;browser&quot;&gt;&lt;code&gt;Cypress.browser&lt;/code&gt;&lt;/a&gt;. Supported properties are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b50b864ca2457f8d6f9fc854473b9edbbd945cd2" translate="yes" xml:space="preserve">
          <source>Filter the current subject to the elements with the class &amp;lsquo;active&amp;rsquo;</source>
          <target state="translated">使用&amp;ldquo;活动&amp;rdquo;类将当前主题过滤为元素</target>
        </trans-unit>
        <trans-unit id="a27ab78e842f8d231922bc0a6c4ebfcbe7e1e1e2" translate="yes" xml:space="preserve">
          <source>Filtered out Ajax requests for &lt;code&gt;.js&lt;/code&gt;, &lt;code&gt;.html&lt;/code&gt;, &lt;code&gt;.css&lt;/code&gt; files by default.</source>
          <target state="translated">默认情况下，过滤出对 &lt;code&gt;.js&lt;/code&gt; ， &lt;code&gt;.html&lt;/code&gt; 和 &lt;code&gt;.css&lt;/code&gt; 文件的Ajax请求。</target>
        </trans-unit>
        <trans-unit id="ad2cf4e08bb232e200ef4bc511c6b34132810357" translate="yes" xml:space="preserve">
          <source>Final run status (passed, failed, etc)</source>
          <target state="translated">最终的运行状态(通过、失败等)。</target>
        </trans-unit>
        <trans-unit id="688b6ff3fc931c6dd9c36d8b51fdc1ea3590d8a2" translate="yes" xml:space="preserve">
          <source>Finally tracked down and fixed edge case causing empty view to display when tests were not empty. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/13&quot;&gt;#13&lt;/a&gt;</source>
          <target state="translated">最终跟踪到固定边缘的情况，导致在测试不为空时显示空白视图。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/13&quot;&gt;＃13&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="37a5f5552afd89b23d9c52a20feccb3d490f76b6" translate="yes" xml:space="preserve">
          <source>Finally, we support creating your own custom reporters or using any kind of 3rd party reporter.</source>
          <target state="translated">最后,我们支持创建您自己的自定义报告器或使用任何类型的第三方报告器。</target>
        </trans-unit>
        <trans-unit id="f7e11838bb265e408c3b20a233e6d4ca384ba884" translate="yes" xml:space="preserve">
          <source>Find 5 elements with the given data attribute</source>
          <target state="translated">找到5个具有给定数据属性的元素</target>
        </trans-unit>
        <trans-unit id="92368cf8c0b0b17d5bfdb96f8c843e1b7832f6ce" translate="yes" xml:space="preserve">
          <source>Find all of the &lt;code&gt;.active&lt;/code&gt; element&amp;rsquo;s ancestors until &lt;code&gt;.nav&lt;/code&gt;</source>
          <target state="translated">找到 &lt;code&gt;.active&lt;/code&gt; 元素的所有祖先，直到 &lt;code&gt;.nav&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8c541c51d6a1a5c57200fc70b87a281be5d1da8d" translate="yes" xml:space="preserve">
          <source>Find all of the element&amp;rsquo;s siblings before &lt;code&gt;#nuts&lt;/code&gt; until &lt;code&gt;#veggies&lt;/code&gt;</source>
          <target state="translated">找到 &lt;code&gt;#nuts&lt;/code&gt; 之前直到 &lt;code&gt;#veggies&lt;/code&gt; 的所有元素同级</target>
        </trans-unit>
        <trans-unit id="9f61919f1581dec2bf2d5cf12c24826c0f271991" translate="yes" xml:space="preserve">
          <source>Find all of the element&amp;rsquo;s siblings before &lt;code&gt;.third&lt;/code&gt;</source>
          <target state="translated">在 &lt;code&gt;.third&lt;/code&gt; 之前找到元素的所有同级</target>
        </trans-unit>
        <trans-unit id="cf397003d132ad643c0e26fc7fbcf78ecc493ec5" translate="yes" xml:space="preserve">
          <source>Find all of the element&amp;rsquo;s siblings following &lt;code&gt;#veggies&lt;/code&gt; until &lt;code&gt;#nuts&lt;/code&gt;</source>
          <target state="translated">找到 &lt;code&gt;#veggies&lt;/code&gt; 直到 &lt;code&gt;#nuts&lt;/code&gt; 的所有元素同级</target>
        </trans-unit>
        <trans-unit id="a4d29db1950969e3784a8c02e121a375d800fa05" translate="yes" xml:space="preserve">
          <source>Find all of the element&amp;rsquo;s siblings following &lt;code&gt;.second&lt;/code&gt;</source>
          <target state="translated">在 &lt;code&gt;.second&lt;/code&gt; 之后找到元素的所有同级</target>
        </trans-unit>
        <trans-unit id="81b19f789476d7ab74f3c3a8ad986e98fa7c56fb" translate="yes" xml:space="preserve">
          <source>Find all of the following siblings of each li. Keep only the ones with a class &lt;code&gt;selected&lt;/code&gt;</source>
          <target state="translated">查找每个li的以下所有兄弟姐妹。只保留 &lt;code&gt;selected&lt;/code&gt; 了课程的学生</target>
        </trans-unit>
        <trans-unit id="c992ea11a8cf058b4435966e028bb9f7a37ed95f" translate="yes" xml:space="preserve">
          <source>Find all of the previous siblings of each &lt;code&gt;li&lt;/code&gt;. Keep only the ones with a class &lt;code&gt;selected&lt;/code&gt;</source>
          <target state="translated">查找每个 &lt;code&gt;li&lt;/code&gt; 的所有先前兄弟姐妹。只保留 &lt;code&gt;selected&lt;/code&gt; 了课程的学生</target>
        </trans-unit>
        <trans-unit id="80ac7d74405f965af6b5783c7d44735681a64289" translate="yes" xml:space="preserve">
          <source>Find an element by its selector</source>
          <target state="translated">通过选择器找到一个元素</target>
        </trans-unit>
        <trans-unit id="6104679c51c71ca5e3c4c8420302b383f5606442" translate="yes" xml:space="preserve">
          <source>Find an element by its selector.</source>
          <target state="translated">通过选择器找到一个元素。</target>
        </trans-unit>
        <trans-unit id="a0e5a3de1058594e24b5fa9435bc8f8c79a8e5ea" translate="yes" xml:space="preserve">
          <source>Find and click on a button inside the shadow DOM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a120e47345559e817051b88761a5acfe8be6f7d" translate="yes" xml:space="preserve">
          <source>Find row with specific cell and confirm other cells in the row</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adfac6dd422443d147406aa7dc4c9bde585b6026" translate="yes" xml:space="preserve">
          <source>Find the 2nd element within the elements</source>
          <target state="translated">找到元素中的第2个元素</target>
        </trans-unit>
        <trans-unit id="4bd1d71d3c4462c2c514b8869c373720f113aefe" translate="yes" xml:space="preserve">
          <source>Find the 2nd from the last element within the elements</source>
          <target state="translated">从元素中的最后一个元素中找到第2个元素</target>
        </trans-unit>
        <trans-unit id="66febaf0d0deb961859132d85eec19f706c7fd31" translate="yes" xml:space="preserve">
          <source>Find the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; with class &lt;code&gt;post-body&lt;/code&gt;.</source>
          <target state="translated">用类 &lt;code&gt;post-body&lt;/code&gt; 找到 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d10cbcf8128ccc542cc5f4d349272af73f1982d7" translate="yes" xml:space="preserve">
          <source>Find the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; with class &lt;code&gt;post-title&lt;/code&gt;.</source>
          <target state="translated">找到具有类 &lt;code&gt;post-title&lt;/code&gt; 的 &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5aa7a7a24fec1dd97f14855f0347bdb63199299d" translate="yes" xml:space="preserve">
          <source>Find the &lt;code&gt;h1&lt;/code&gt; tag, ensure it contains the text &amp;ldquo;My First Post&amp;rdquo;.</source>
          <target state="translated">找到 &lt;code&gt;h1&lt;/code&gt; 标签，确保它包含文本&amp;ldquo; My First Post&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="0a629d480b77f87962de841533ac568613cca727" translate="yes" xml:space="preserve">
          <source>Find the &lt;code&gt;input[type='submit']&lt;/code&gt; by value</source>
          <target state="translated">通过值查找 &lt;code&gt;input[type='submit']&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b7c01ef4267a8207f2efc0f895e23cbf8c0c9dab" translate="yes" xml:space="preserve">
          <source>Find the TypeScript definition for the results object in the &lt;a href=&quot;https://github.com/cypress-io/cypress/tree/develop/cli/types&quot;&gt;&lt;code&gt;cypress/cli/types&lt;/code&gt; folder&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;https://github.com/cypress-io/cypress/tree/develop/cli/types&quot;&gt; &lt;code&gt;cypress/cli/types&lt;/code&gt; 文件夹中&lt;/a&gt;找到结果对象的TypeScript定义。</target>
        </trans-unit>
        <trans-unit id="10df2b3516f7e33c34a15898a97d21e45db73ca2" translate="yes" xml:space="preserve">
          <source>Find the closest element of &lt;code&gt;li.active&lt;/code&gt; with the class &amp;lsquo;nav&amp;rsquo;</source>
          <target state="translated">使用&amp;ldquo; nav&amp;rdquo;类找到 &lt;code&gt;li.active&lt;/code&gt; 的最接近元素</target>
        </trans-unit>
        <trans-unit id="9903e70c221c495e32ab6ceb17ffcbc3dd4c75b2" translate="yes" xml:space="preserve">
          <source>Find the closest element of the &lt;code&gt;.error&lt;/code&gt; with the class &amp;lsquo;banner&amp;rsquo;</source>
          <target state="translated">使用&amp;ldquo;横幅&amp;rdquo;类找到 &lt;code&gt;.error&lt;/code&gt; 的最接近元素</target>
        </trans-unit>
        <trans-unit id="075f836a43dce9616ea5659aa81eaa8ad295ba3f" translate="yes" xml:space="preserve">
          <source>Find the complete CircleCI v2 example with caching and artifact upload in the &lt;a href=&quot;https://github.com/cypress-io/cypress-example-docker-circle&quot;&gt;cypress-example-docker-circle&lt;/a&gt; repo.</source>
          <target state="translated">在&lt;a href=&quot;https://github.com/cypress-io/cypress-example-docker-circle&quot;&gt;cypress-example-docker-circle存储&lt;/a&gt;库中找到具有缓存和工件上传功能的完整CircleCI v2示例。</target>
        </trans-unit>
        <trans-unit id="d1cc283dc3702c8d3e6d222ab076e9bf3b77445a" translate="yes" xml:space="preserve">
          <source>Find the dropdown-menu and click it</source>
          <target state="translated">找到下拉菜单并点击它</target>
        </trans-unit>
        <trans-unit id="ebe6d0a917538cd5b8200bdc5503b9bfd7c54a8a" translate="yes" xml:space="preserve">
          <source>Find the element containing the text &lt;code&gt;Submit&lt;/code&gt;.</source>
          <target state="translated">找到包含文本 &lt;code&gt;Submit&lt;/code&gt; 的元素。</target>
        </trans-unit>
        <trans-unit id="f45aaee6ddbabbbed5ee653102c34f6e299a862f" translate="yes" xml:space="preserve">
          <source>Find the element next to &lt;code&gt;.second&lt;/code&gt;</source>
          <target state="translated">找到 &lt;code&gt;.second&lt;/code&gt; 旁边的元素</target>
        </trans-unit>
        <trans-unit id="b4bab536a6c5451fa8c798585ff1ed23fc2d2733" translate="yes" xml:space="preserve">
          <source>Find the element with content: &lt;code&gt;type&lt;/code&gt;</source>
          <target state="translated">查找具有内容的元素： &lt;code&gt;type&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a9fbb7af5c1b67383d92e9b8b2376530e800a405" translate="yes" xml:space="preserve">
          <source>Find the first &lt;code&gt;li&lt;/code&gt; descendent within a &lt;code&gt;ul&lt;/code&gt;</source>
          <target state="translated">在 &lt;code&gt;ul&lt;/code&gt; 中找到第一个 &lt;code&gt;li&lt;/code&gt; 后代</target>
        </trans-unit>
        <trans-unit id="9a5dc13574576534052754b465d51599a18744fe" translate="yes" xml:space="preserve">
          <source>Find the first element containing a number</source>
          <target state="translated">找到第一个包含数字的元素</target>
        </trans-unit>
        <trans-unit id="4ffee2601a6f1877a2e04498faf28aaf834aa5e2" translate="yes" xml:space="preserve">
          <source>Find the first element containing some text</source>
          <target state="translated">找到第一个包含文字的元素</target>
        </trans-unit>
        <trans-unit id="303d529ce52ae406adef3293db17ef34a6013e64" translate="yes" xml:space="preserve">
          <source>Find the first element with text matching the regular expression</source>
          <target state="translated">找到第一个与正则表达式匹配的文本元素</target>
        </trans-unit>
        <trans-unit id="6ecc00bc5ee2c880ee993d32184cdabaffb6010c" translate="yes" xml:space="preserve">
          <source>Find the link with an href attribute containing the word &amp;ldquo;questions&amp;rdquo; and click it</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b9ad828e76201eaec43c5bd8b7495a6b5e9aa1b" translate="yes" xml:space="preserve">
          <source>Find the previous element of the element with class of &lt;code&gt;active&lt;/code&gt;</source>
          <target state="translated">查找具有 &lt;code&gt;active&lt;/code&gt; 类的元素的上一个元素</target>
        </trans-unit>
        <trans-unit id="b050e5303f0aeff67972b597916c20cb954e472e" translate="yes" xml:space="preserve">
          <source>Find the previous element with a class of &lt;code&gt;active&lt;/code&gt;</source>
          <target state="translated">查找具有 &lt;code&gt;active&lt;/code&gt; 类别的上一个元素</target>
        </trans-unit>
        <trans-unit id="f48ae5b1727499efa01b744170218b06cbf5a048" translate="yes" xml:space="preserve">
          <source>Find the very next sibling of each li. Keep only the ones with a class &lt;code&gt;selected&lt;/code&gt;</source>
          <target state="translated">找到每个李的下一个兄弟姐妹。只保留 &lt;code&gt;selected&lt;/code&gt; 了课程的学生</target>
        </trans-unit>
        <trans-unit id="2d913fabe6d31a552f869448ec77af59ce7ab7ef" translate="yes" xml:space="preserve">
          <source>Finding Selectors</source>
          <target state="translated">寻找选择器</target>
        </trans-unit>
        <trans-unit id="418d4574c491cab5e7bfcd22805c34f1a960026b" translate="yes" xml:space="preserve">
          <source>Fire other Event types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3716d23e9ad7315ba3e5e070513375357d405fce" translate="yes" xml:space="preserve">
          <source>Fire the event at a descendent</source>
          <target state="translated">向后裔发射事件</target>
        </trans-unit>
        <trans-unit id="d0c8fbf533787f205ef74cb4ef685fa5336a95bd" translate="yes" xml:space="preserve">
          <source>Fire the event at the desired coordinates.</source>
          <target state="translated">在所需坐标处发射事件。</target>
        </trans-unit>
        <trans-unit id="b4ee6522335b033249255b4cc1d572993282aafb" translate="yes" xml:space="preserve">
          <source>Firefox</source>
          <target state="translated">Firefox</target>
        </trans-unit>
        <trans-unit id="015fc6ecc28be811b21b9209a8b9e660856657fe" translate="yes" xml:space="preserve">
          <source>Firefox: visit &lt;code&gt;about:config&lt;/code&gt; URL within your Firefox browser to see all available preferences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3297c2c690e3329a34b567de00181d54c48fdc24" translate="yes" xml:space="preserve">
          <source>Fires after all your resources have finished loading after a page transition. This fires at the exact same time as a &lt;code&gt;cy.visit()&lt;/code&gt;&lt;code&gt;onLoad&lt;/code&gt; callback.</source>
          <target state="translated">页面转换后所有资源完成加载后触发。这与 &lt;code&gt;cy.visit()&lt;/code&gt; &lt;code&gt;onLoad&lt;/code&gt; 回调在同一时间触发。</target>
        </trans-unit>
        <trans-unit id="65bcba53d3ddc0803f41e82a2e2197390e4654af" translate="yes" xml:space="preserve">
          <source>Fires after the test and all &lt;strong&gt;afterEach&lt;/strong&gt; and &lt;strong&gt;after&lt;/strong&gt; hooks run.</source>
          <target state="translated">测试并毕竟火灾&lt;strong&gt;afterEach&lt;/strong&gt;和&lt;strong&gt;后&lt;/strong&gt;运行挂钩。</target>
        </trans-unit>
        <trans-unit id="b3b542efbb04e9cc7735acf1c6261c28a91865b0" translate="yes" xml:space="preserve">
          <source>Fires as the page begins to load, but before any of your applications JavaScript has executed. This fires at the exact same time as &lt;code&gt;cy.visit()&lt;/code&gt;&lt;code&gt;onBeforeLoad&lt;/code&gt; callback. Useful to modify the window on a page transition.</source>
          <target state="translated">在页面开始加载时触发，但在您的任何应用程序执行JavaScript之前触发。这与 &lt;code&gt;cy.visit()&lt;/code&gt; 的 &lt;code&gt;onBeforeLoad&lt;/code&gt; 回调在同一时间触发。在页面过渡时修改窗口很有用。</target>
        </trans-unit>
        <trans-unit id="d9f9dd1b33251212c25a404143902e006ee99261" translate="yes" xml:space="preserve">
          <source>Fires before the test and all &lt;strong&gt;before&lt;/strong&gt; and &lt;strong&gt;beforeEach&lt;/strong&gt; hooks run.</source>
          <target state="translated">测试和所有之前触发&lt;strong&gt;之前&lt;/strong&gt;和&lt;strong&gt;beforeEach&lt;/strong&gt;挂钩运行。</target>
        </trans-unit>
        <trans-unit id="e3a3efcfbcbc43c00380e65ca6e41d27711c6f1b" translate="yes" xml:space="preserve">
          <source>Fires when a cy command is first invoked and enqueued to be run later. Useful for debugging purposes if you&amp;rsquo;re confused about the order in which commands will execute.</source>
          <target state="translated">在首次调用cy命令并将其放入队列以便稍后运行时触发。如果您对命令的执行顺序感到困惑，则对于调试目的很有用。</target>
        </trans-unit>
        <trans-unit id="2dec5789ec4fa855297114ba75e3f8339135c7a5" translate="yes" xml:space="preserve">
          <source>Fires when an uncaught exception occurs in your application. Cypress will fail the test when this fires. Return &lt;code&gt;false&lt;/code&gt; from this event and Cypress will not fail the test. Also useful for debugging purposes because the actual &lt;code&gt;error&lt;/code&gt; instance is provided to you.</source>
          <target state="translated">当您的应用程序中发生未捕获的异常时触发。触发时，赛普拉斯将无法通过测试。从该事件返回 &lt;code&gt;false&lt;/code&gt; ，赛普拉斯将不会通过测试。由于实际的 &lt;code&gt;error&lt;/code&gt; 实例已提供给您，因此对于调试目的也很有用。</target>
        </trans-unit>
        <trans-unit id="8ca3ed7f57c3d04ed29b48a431210d5cfefd574d" translate="yes" xml:space="preserve">
          <source>Fires when cy begins actually running and executing your command. Useful for debugging and understanding how the command queue is async.</source>
          <target state="translated">当cy开始实际运行并执行你的命令时触发。有助于调试和了解命令队列是如何异步的。</target>
        </trans-unit>
        <trans-unit id="8cf570e78794600150280ae9f2447cadfed546db" translate="yes" xml:space="preserve">
          <source>Fires when cy finishes running and executing your command. Useful for debugging and understanding how commands are handled.</source>
          <target state="translated">当cy完成运行并执行你的命令时触发。对调试和了解命令的处理方式很有用。</target>
        </trans-unit>
        <trans-unit id="afd7817fa57e4ccf201566aefa2db46574c9786d" translate="yes" xml:space="preserve">
          <source>Fires when the test has failed. It is technically possible to prevent the test from actually failing by binding to this event and invoking an async &lt;code&gt;done&lt;/code&gt; callback. However this is &lt;strong&gt;strongly discouraged&lt;/strong&gt;. Tests should never legitimately fail. This event exists because it&amp;rsquo;s extremely useful for debugging purposes.</source>
          <target state="translated">测试失败时触发。通过绑定到此事件并调用异步 &lt;code&gt;done&lt;/code&gt; 回调，可以从技术上防止测试实际失败。但是，&lt;strong&gt;强烈建议不要这样做&lt;/strong&gt;。测试永远不会合法失败。发生此事件是因为它对于调试非常有用。</target>
        </trans-unit>
        <trans-unit id="20fcf72a456dcba1707986a3154aceaea166e797" translate="yes" xml:space="preserve">
          <source>Fires when your app calls the global &lt;code&gt;window.alert()&lt;/code&gt; method. Cypress will auto accept alerts. You cannot change this behavior.</source>
          <target state="translated">当您的应用调用全局 &lt;code&gt;window.alert()&lt;/code&gt; 方法时触发。赛普拉斯将自动接受警报。您无法更改此行为。</target>
        </trans-unit>
        <trans-unit id="befd5f340a17860fcb8ef526396363696792b89c" translate="yes" xml:space="preserve">
          <source>Fires when your app calls the global &lt;code&gt;window.confirm()&lt;/code&gt; method. Cypress will auto accept confirmations. Return &lt;code&gt;false&lt;/code&gt; from this event and the confirmation will be canceled.</source>
          <target state="translated">当您的应用调用全局 &lt;code&gt;window.confirm()&lt;/code&gt; 方法时触发。赛普拉斯将自动接受确认。从此事件返回 &lt;code&gt;false&lt;/code&gt; ，确认将被取消。</target>
        </trans-unit>
        <trans-unit id="a215985211e48f8c81b8565a107db5825276df1f" translate="yes" xml:space="preserve">
          <source>Fires when your application has unloaded and is navigating away. The real event object is provided to you. This event is not cancelable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20583e05027ccd1f90b17c009fed01d0cb0ba65a" translate="yes" xml:space="preserve">
          <source>Fires when your application is about to navigate away. The real event object is provided to you. Your app may have set a &lt;code&gt;returnValue&lt;/code&gt; on the event, which is useful to assert on.</source>
          <target state="translated">当您的应用程序即将离开时触发。真实事件对象已提供给您。您的应用可能已在事件上设置了 &lt;code&gt;returnValue&lt;/code&gt; ，这对于断言很有用。</target>
        </trans-unit>
        <trans-unit id="63603917c7fb0ef19543583000876125715fc732" translate="yes" xml:space="preserve">
          <source>Fires when your application is has unloaded and is navigating away. The real event object is provided to you. This event is not cancelable.</source>
          <target state="translated">当你的应用程序卸载并导航离开时发生。真正的事件对象是提供给你的。该事件不可取消。</target>
        </trans-unit>
        <trans-unit id="395a5ae275d0ea21c36c59f721485c25305c611e" translate="yes" xml:space="preserve">
          <source>Fires whenever &lt;strong&gt;Cypress&lt;/strong&gt; is scrolling your application. This event is fired when Cypress is &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;waiting for and calculating actionability&lt;/a&gt;. It will scroll to &amp;lsquo;uncover&amp;rsquo; elements currently being covered. This event is extremely useful to debug why Cypress may think an element is not interactive.</source>
          <target state="translated">每当&lt;strong&gt;赛普拉斯&lt;/strong&gt;滚动您的应用程序时将触发。当Cypress &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements&quot;&gt;等待并计算可操作性&lt;/a&gt;时，将触发此事件。它将滚动到&amp;ldquo;发现&amp;rdquo;当前涵盖的元素。该事件对于调试为什么赛普拉斯可能认为某个元素不是交互式元素非常有用。</target>
        </trans-unit>
        <trans-unit id="072a4279602433c5ea288781fece0864ee071c43" translate="yes" xml:space="preserve">
          <source>Fires whenever &lt;strong&gt;Cypress&lt;/strong&gt; is scrolling your application. This event is fired when Cypress is &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/interacting-with-elements.html&quot;&gt;waiting for and calculating actionability&lt;/a&gt;. It will scroll to &amp;lsquo;uncover&amp;rsquo; elements currently being covered. This event is extremely useful to debug why Cypress may think an element is not interactive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc6f542e38ecdc0178d0083539cb84e9e36f9f9e" translate="yes" xml:space="preserve">
          <source>Fires whenever Cypress detects that your application&amp;rsquo;s URL has changed.</source>
          <target state="translated">每当赛普拉斯检测到您的应用程序的URL发生更改时便会触发。</target>
        </trans-unit>
        <trans-unit id="18fdf04e181c4d29f74c1cff8247a77392a18edf" translate="yes" xml:space="preserve">
          <source>Fires whenever a command begins its &lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;retrying routines&lt;/a&gt;. This is called on the trailing edge after Cypress has internally waited for the retry interval. Useful to understand &lt;strong&gt;why&lt;/strong&gt; a command is retrying, and generally includes the actual error causing the retry to happen. When commands fail the final error is the one that actually bubbles up to fail the test. This event is essentially to debug why Cypress is failing.</source>
          <target state="translated">每当命令开始&lt;a href=&quot;../../guides/core-concepts/retry-ability&quot;&gt;重试例程&lt;/a&gt;时触发。在赛普拉斯内部等待重试间隔后，在后沿调用该函数。有助于理解&lt;strong&gt;为什么&lt;/strong&gt;重试命令，并且通常包括导致重试发生的实际错误。当命令失败时，最终的错误实际上就是使测试失败的错误。该事件实质上是为了调试赛普拉斯出故障的原因。</target>
        </trans-unit>
        <trans-unit id="af8929223808a62242044b03a07bc71137d8fd9e" translate="yes" xml:space="preserve">
          <source>Fires whenever a command begins its &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/retry-ability.html&quot;&gt;retrying routines&lt;/a&gt;. This is called on the trailing edge after Cypress has internally waited for the retry interval. Useful to understand &lt;strong&gt;why&lt;/strong&gt; a command is retrying, and generally includes the actual error causing the retry to happen. When commands fail the final error is the one that actually bubbles up to fail the test. This event is essentially to debug why Cypress is failing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e1b9e40db73c50b362b03b85fe6cb8f78a91a6a" translate="yes" xml:space="preserve">
          <source>Fires whenever a command emits this event so it can be displayed in the Command Log. Useful to see how internal cypress commands utilize the &lt;a href=&quot;../cypress-api/cypress-log&quot;&gt;Cypress.log()&lt;/a&gt; API.</source>
          <target state="translated">每当命令发出此事件时将触发，以便可以将其显示在命令日志中。了解内部cypress命令如何利用&lt;a href=&quot;../cypress-api/cypress-log&quot;&gt;Cypress.log（）&lt;/a&gt; API 很有用。</target>
        </trans-unit>
        <trans-unit id="2a70e102286861560c039597e66d12a2e7a950a7" translate="yes" xml:space="preserve">
          <source>Fires whenever a command&amp;rsquo;s attributes changes. This event is debounced to prevent it from firing too quickly and too often. Useful to see how internal cypress commands utilize the &lt;a href=&quot;../cypress-api/cypress-log&quot;&gt;Cypress.log()&lt;/a&gt; API.</source>
          <target state="translated">每当命令的属性更改时触发。该事件会被去抖，以防止其触发得太快和太频繁。了解内部cypress命令如何利用&lt;a href=&quot;../cypress-api/cypress-log&quot;&gt;Cypress.log（）&lt;/a&gt; API 很有用。</target>
        </trans-unit>
        <trans-unit id="3fe5a40f60250d1365d6022a092e685ce47f4e8b" translate="yes" xml:space="preserve">
          <source>Fires whenever the viewport changes via a &lt;code&gt;cy.viewport()&lt;/code&gt; or naturally when Cypress resets the viewport to the default between tests. Useful for debugging purposes.</source>
          <target state="translated">每当视口通过 &lt;code&gt;cy.viewport()&lt;/code&gt; 更改时触发，或者在赛普拉斯在两次测试之间将视口重置为默认值时自然触发。用于调试目的。</target>
        </trans-unit>
        <trans-unit id="216f7ec41381a4aea27403eb443a599bc0b9e418" translate="yes" xml:space="preserve">
          <source>First, let&amp;rsquo;s visit a web page. We will visit our &lt;a href=&quot;https://docs.cypress.io/examples/examples/applications.html#Kitchen-Sink&quot;&gt;Kitchen Sink&lt;/a&gt; application in this example so that you can try Cypress out without needing to worry about finding a page to test.</source>
          <target state="translated">首先，让我们访问一个网页。在本示例中，我们将访问我们的&lt;a href=&quot;https://docs.cypress.io/examples/examples/applications.html#Kitchen-Sink&quot;&gt;Kitchen Sink&lt;/a&gt;应用程序，以便您可以尝试使用Cypress，而不必担心找到要测试的页面。</target>
        </trans-unit>
        <trans-unit id="c51747a9109d9350312217267bedd3d22a3f73a4" translate="yes" xml:space="preserve">
          <source>First, print where the binary is installed using the &lt;a href=&quot;command-line#cypress-cache-path&quot;&gt;&lt;code&gt;cypress cache path&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">首先，使用&lt;a href=&quot;command-line#cypress-cache-path&quot;&gt; &lt;code&gt;cypress cache path&lt;/code&gt; &lt;/a&gt;命令打印二进制文件的安装位置。</target>
        </trans-unit>
        <trans-unit id="2328b7180d662b87895b228f6df298db17f851a3" translate="yes" xml:space="preserve">
          <source>Fix capitalization of &lt;code&gt;Xvfb&lt;/code&gt; in error messages. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4262&quot;&gt;#4262&lt;/a&gt;.</source>
          <target state="translated">修复错误消息中 &lt;code&gt;Xvfb&lt;/code&gt; 的大写形式。地址在&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/4262&quot;&gt;＃4262中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="86af0c91e4d554a431841c4b48230d1e03a384e5" translate="yes" xml:space="preserve">
          <source>Fix edge case with forced focusing / blurring an element when document is not in focus and the element is no longer in the DOM.</source>
          <target state="translated">修正当文档不在焦点上且元素不再在DOM中时,强制聚焦/模糊元素的边缘情况。</target>
        </trans-unit>
        <trans-unit id="12bb69b63d17fe3ceb1c091b056c08de1d1091b6" translate="yes" xml:space="preserve">
          <source>Fix for &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; SSL issues when host certificates were self signed.</source>
          <target state="translated">修复了自签名主机证书时的&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt; SSL问题。</target>
        </trans-unit>
        <trans-unit id="578717dae25898e735a633254852c0af1a4b25fb" translate="yes" xml:space="preserve">
          <source>Fix missing &lt;code&gt;__initial=true&lt;/code&gt; query param on initial redirects.</source>
          <target state="translated">修复初始重定向中缺少的 &lt;code&gt;__initial=true&lt;/code&gt; 查询参数。</target>
        </trans-unit>
        <trans-unit id="3f4967afa344c3a7afc269d86cfd6e6d2855feee" translate="yes" xml:space="preserve">
          <source>Fix missing &lt;code&gt;moment.js&lt;/code&gt; from &lt;code&gt;bower.json&lt;/code&gt;.</source>
          <target state="translated">修复丢失 &lt;code&gt;moment.js&lt;/code&gt; 从 &lt;code&gt;bower.json&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5473e1c9b6b37c4c0e900c359ce20540eae846ba" translate="yes" xml:space="preserve">
          <source>Fix missing trailing slash from initial &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; requests.</source>
          <target state="translated">修复了最初的&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;请求中缺少的尾部斜杠。</target>
        </trans-unit>
        <trans-unit id="a01dce2ea309fbcd0cf6dc57ea3ce76e1385ec0f" translate="yes" xml:space="preserve">
          <source>Fix sourceMappingURL browser bug &lt;code&gt;http:/localhost:4200/app.css.map&lt;/code&gt;.</source>
          <target state="translated">修复sourceMappingURL浏览器错误 &lt;code&gt;http:/localhost:4200/app.css.map&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="11b0d124e84238ede72803d0137923b1e12efc87" translate="yes" xml:space="preserve">
          <source>Fix test titles not being escaped due to refactoring.</source>
          <target state="translated">修正由于重构而导致的测试标题没有被转义。</target>
        </trans-unit>
        <trans-unit id="aafd288aaf76025069d7a6bb6e7b941f1fb9698a" translate="yes" xml:space="preserve">
          <source>Fixed &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; breaking on chains when passing the same &lt;code&gt;options&lt;/code&gt; references. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/365&quot;&gt;#365&lt;/a&gt;.</source>
          <target state="translated">修复了传递相同 &lt;code&gt;options&lt;/code&gt; 引用时&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;在链上断开的问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/365&quot;&gt;＃365&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a74b09d876152e4f811aefa8d06cec8d4ab086cb" translate="yes" xml:space="preserve">
          <source>Fixed &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; inserting a rogue &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; tag after the first letter in &lt;code&gt;[contenteditable]&lt;/code&gt; elements. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1926&quot;&gt;#1926&lt;/a&gt;.</source>
          <target state="translated">修复了&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;在 &lt;code&gt;[contenteditable]&lt;/code&gt; 元素的第一个字母后插入流氓 &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; 标签的问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1926&quot;&gt;＃1926&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="52d62b10a280f839c5da56508e01deb48c1beb4e" translate="yes" xml:space="preserve">
          <source>Fixed &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; not firing &lt;code&gt;input&lt;/code&gt; event for &lt;a href=&quot;https://reactjs.org/&quot;&gt;React&lt;/a&gt; on versions 15.6.x. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/536&quot;&gt;#536&lt;/a&gt;.</source>
          <target state="translated">修复了&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;在版本15.6.x上不会触发&lt;a href=&quot;https://reactjs.org/&quot;&gt;React的&lt;/a&gt; &lt;code&gt;input&lt;/code&gt; 事件的问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/536&quot;&gt;＃536&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f662f8fac4741daea21d050277cd93e22c3d41e4" translate="yes" xml:space="preserve">
          <source>Fixed &lt;code&gt;opener of undefined&lt;/code&gt; errors due to &lt;code&gt;page load&lt;/code&gt; events causing snapshots prior to the &lt;code&gt;load&lt;/code&gt; event of the remote application. Thanks to everyone who helped pitched in on this one! Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/258&quot;&gt;#258&lt;/a&gt;.</source>
          <target state="translated">修复 &lt;code&gt;opener of undefined&lt;/code&gt; 由于 &lt;code&gt;page load&lt;/code&gt; 事件而导致的未定义错误的打开器，该页面加载事件导致在远程应用程序的 &lt;code&gt;load&lt;/code&gt; 事件之前产生快照。感谢所有参与此活动的人！修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/258&quot;&gt;＃258&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="235303e914ef7bbd134d04d6915d4bbb3dca43f8" translate="yes" xml:space="preserve">
          <source>Fixed &lt;code&gt;selectionStart&lt;/code&gt; and &lt;code&gt;selectionEnd&lt;/code&gt; with &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; when using &lt;code&gt;{leftarrow}&lt;/code&gt; or &lt;code&gt;{rightarrow}&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1234&quot;&gt;#1234&lt;/a&gt;.</source>
          <target state="translated">使用 &lt;code&gt;{leftarrow}&lt;/code&gt; 或 &lt;code&gt;{rightarrow}&lt;/code&gt; 修复了 &lt;code&gt;selectionStart&lt;/code&gt; 和 &lt;code&gt;selectionEnd&lt;/code&gt; 以&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; 结束的问题&lt;/a&gt;。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1234&quot;&gt;＃1234&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="35d906e96dd65bcb3ff8c488e394665a96ee5e42" translate="yes" xml:space="preserve">
          <source>Fixed Cypress hanging in CI due to excessive and unnecessary globbing. We finally tracked down this issue which made it appear as if Cypress was &amp;ldquo;hanging&amp;rdquo; after closing a spec file and then attempting to open the next one. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2183&quot;&gt;#2183&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1905&quot;&gt;#1905&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1912&quot;&gt;#1912&lt;/a&gt;.</source>
          <target state="translated">修复了赛普拉斯由于过多和不必要的浮球而挂在CI中的问题。我们最终找到了这个问题，它看起来像赛普拉斯在关闭规格文件然后尝试打开下一个文件之后正在&amp;ldquo;挂起&amp;rdquo;。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2183&quot;&gt;＃2183&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1905&quot;&gt;＃1905&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1912&quot;&gt;＃1912&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ef17c202682eca1a169dad619332a8557814c664" translate="yes" xml:space="preserve">
          <source>Fixed Cypress not correctly aborting long running connections (such as server sent events) on proxied requests. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2612&quot;&gt;#2612&lt;/a&gt;.</source>
          <target state="translated">修复了赛普拉斯无法正确终止代理请求上长期运行的连接（例如服务器发送的事件）的问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2612&quot;&gt;＃2612&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f9669770f306f25a505189c057478c54515db829" translate="yes" xml:space="preserve">
          <source>Fixed Test Code</source>
          <target state="translated">固定测试代码</target>
        </trans-unit>
        <trans-unit id="13a9fead295c05643d7ba8ee723e8713a1aa5903" translate="yes" xml:space="preserve">
          <source>Fixed Type error being thrown for users using TypeScript 3. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2363&quot;&gt;#2363&lt;/a&gt;.</source>
          <target state="translated">修复了使用TypeScript 3向用户抛出的Type错误。修复了&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2363&quot;&gt;＃2363&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2dc28540a862ccbf3f051f0f0ef94a933350e1c0" translate="yes" xml:space="preserve">
          <source>Fixed TypeScript error caused by &lt;code&gt;dtslint&lt;/code&gt; dependency introduced in 3.1.4. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3024&quot;&gt;#3024&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3136&quot;&gt;#3136&lt;/a&gt;.</source>
          <target state="translated">修复了3.1.4中引入的由 &lt;code&gt;dtslint&lt;/code&gt; 依赖性引起的TypeScript错误。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3024&quot;&gt;＃3024&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3136&quot;&gt;＃3136&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dea00df4206deeacedda8d66d0f1517b23f5420c" translate="yes" xml:space="preserve">
          <source>Fixed URL proxy issue with subdomains. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/183&quot;&gt;#183&lt;/a&gt;.</source>
          <target state="translated">修复了子网域的URL代理问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/183&quot;&gt;＃183&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5b9c7b352ca8a81eb3f730094b9d5febac64dfda" translate="yes" xml:space="preserve">
          <source>Fixed a bug causing screenshots saved via &lt;a href=&quot;../../api/commands/screenshot&quot;&gt;&lt;code&gt;cy.screenshot()&lt;/code&gt;&lt;/a&gt; to be in different folders when you ran using &lt;a href=&quot;../guides/command-line#cypress-open&quot;&gt;&lt;code&gt;cypress open&lt;/code&gt;&lt;/a&gt; vs &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt; . Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2091&quot;&gt;#2091&lt;/a&gt;.</source>
          <target state="translated">修复了当您使用&lt;a href=&quot;../guides/command-line#cypress-open&quot;&gt; &lt;code&gt;cypress open&lt;/code&gt; &lt;/a&gt; vs &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt; &lt;code&gt;cypress run&lt;/code&gt; 运行&lt;/a&gt;时，导致通过&lt;a href=&quot;../../api/commands/screenshot&quot;&gt; &lt;code&gt;cy.screenshot()&lt;/code&gt; &lt;/a&gt;保存的屏幕截图位于不同文件夹中的错误。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2091&quot;&gt;＃2091&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2ea194ebc7a0241467b7bb6eeb910f0701101a6c" translate="yes" xml:space="preserve">
          <source>Fixed a bug for users running external network proxies that prevented requests from completing. Requests should now all work correctly. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4257&quot;&gt;#4257&lt;/a&gt;.</source>
          <target state="translated">修复了运行外部网络代理的用户无法完成请求的错误。现在，所有请求均应正常工作。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4257&quot;&gt;＃4257&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="84701a971c52fe0ef5b810aad2a8c5a06fdc37b7" translate="yes" xml:space="preserve">
          <source>Fixed a bug in node core where Cypress would not show up in &lt;code&gt;Windows&lt;/code&gt; for users on &lt;code&gt;node &amp;gt;= 11&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2667&quot;&gt;#2667&lt;/a&gt;.</source>
          <target state="translated">修复了节点核心中的一个错误，即对于 &lt;code&gt;node &amp;gt;= 11&lt;/code&gt; 上的用户，赛普拉斯将不会在 &lt;code&gt;Windows&lt;/code&gt; 中显示。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2667&quot;&gt;＃2667&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e35385a2c12d0f71f7a53c301b5b3d47658ae821" translate="yes" xml:space="preserve">
          <source>Fixed a bug swallowing plugin errors due to undefined &lt;code&gt;reject&lt;/code&gt; function. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/934&quot;&gt;#934&lt;/a&gt;.</source>
          <target state="translated">修复了由于未定义的 &lt;code&gt;reject&lt;/code&gt; 功能而导致吞咽插件错误的错误。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/934&quot;&gt;＃934&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="90b94e0824d2385a70f66519b1a2622224be5d05" translate="yes" xml:space="preserve">
          <source>Fixed a bug that caused commands to time out on subsequent tests whenever there was an uncaught error + an assertion conflict. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/238&quot;&gt;#238&lt;/a&gt;.</source>
          <target state="translated">修复了一个错误，该错误导致在遇到未捕获的错误+断言冲突时命令在后续测试中超时。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/238&quot;&gt;＃238&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="71d07b2b277c7a574b44ce7b49b691fb502615ec" translate="yes" xml:space="preserve">
          <source>Fixed a bug when dismissing pinned snapshots that would cause the page to be wiped with nothing rendered. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4864&quot;&gt;#4864&lt;/a&gt;.</source>
          <target state="translated">修复了关闭固定快照时会导致页面擦除而没有任何内容呈现的错误。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4864&quot;&gt;＃4864&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="16717acc2ae6358676798e3692b5d47326a62da8" translate="yes" xml:space="preserve">
          <source>Fixed a bug where Cypress could get into a weird state and continuously error due to the &lt;code&gt;before:log&lt;/code&gt; event not being properly disposed. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/173&quot;&gt;#173&lt;/a&gt;.</source>
          <target state="translated">修复了由于未正确处理 &lt;code&gt;before:log&lt;/code&gt; 事件而导致Cypress进入怪异状态并连续出错的错误。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/173&quot;&gt;＃173&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="caa86e87c6a9a9f15bdd343f3f770a5b166471b9" translate="yes" xml:space="preserve">
          <source>Fixed a bug where Cypress would error when a secure cookie flag was set and then expired from an HTTPS url without the subsequent secure flag. Due to the way Cypress was constructing the url, this would fail to actually remove the cookie. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1264&quot;&gt;#1264&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1321&quot;&gt;#1321&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1799&quot;&gt;#1799&lt;/a&gt;.</source>
          <target state="translated">修复了一个错误，即当设置了安全cookie标志后，如果没有随后的安全标志，那么Cypress从HTTPS URL中过期时，赛普拉斯会出错。由于Cypress构造url的方式，因此实际上无法删除cookie。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1264&quot;&gt;＃1264&lt;/a&gt;，&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1321&quot;&gt;＃1321&lt;/a&gt;，&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1799&quot;&gt;＃1799&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1d50b3ebf539cc9de8a209eaf4f48b723bc843f9" translate="yes" xml:space="preserve">
          <source>Fixed a bug where changing the &lt;a href=&quot;configuration#Folders-Files&quot;&gt;&lt;code&gt;integrationFolder&lt;/code&gt;&lt;/a&gt; in Windows would lead to errors with plugins. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1704&quot;&gt;#1704&lt;/a&gt;.</source>
          <target state="translated">修复了一个错误，该错误在Windows 中更改&lt;a href=&quot;configuration#Folders-Files&quot;&gt; &lt;code&gt;integrationFolder&lt;/code&gt; &lt;/a&gt;会导致插件错误。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1704&quot;&gt;＃1704&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="46b9d234159f57e0c9b70792318f4c4aa09e9b06" translate="yes" xml:space="preserve">
          <source>Fixed a bug where invalid UTF-8 characters were being set in XHR headers which caused XHR&amp;rsquo;s to fail. We now properly encode and decode all values. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/168&quot;&gt;#168&lt;/a&gt;.</source>
          <target state="translated">修复了在XHR标头中设置无效UTF-8字符导致XHR失败的错误。现在，我们正确地编码和解码所有值。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/168&quot;&gt;＃168&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1745cac84918b4aa3fcecaa76b4fcbe6bf490e60" translate="yes" xml:space="preserve">
          <source>Fixed a bug where the content of pages using non-UTF-8 character encoding would become corrupted when opened in Cypress. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3479&quot;&gt;#3479&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1543&quot;&gt;#1543&lt;/a&gt;, and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3650&quot;&gt;#3650&lt;/a&gt;.</source>
          <target state="translated">修复了在Cypress中打开使用非UTF-8字符编码的页面内容会损坏的错误。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3479&quot;&gt;＃3479&lt;/a&gt;，&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1543&quot;&gt;＃1543&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3650&quot;&gt;＃3650&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ded6e51b9b2958b84683311abf2544d7c477a842" translate="yes" xml:space="preserve">
          <source>Fixed a bug with Windows users seeing crashes with &lt;code&gt;tty.getWindowSize is not a function&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1815&quot;&gt;#1815&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1817&quot;&gt;#1817&lt;/a&gt;.</source>
          <target state="translated">修复了Windows用户看到 &lt;code&gt;tty.getWindowSize is not a function&lt;/code&gt; 崩溃的错误。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1815&quot;&gt;＃1815&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1817&quot;&gt;＃1817&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="eda5c8938aaac4d872e48df690c7dd43f41fdb20" translate="yes" xml:space="preserve">
          <source>Fixed a bug with issuing an additional &lt;code&gt;blur&lt;/code&gt; and &lt;code&gt;click&lt;/code&gt; event when chaining &lt;code&gt;.clear().type(...)&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/593&quot;&gt;#593&lt;/a&gt;.</source>
          <target state="translated">修复了在链接 &lt;code&gt;.clear().type(...)&lt;/code&gt; 时发出额外的 &lt;code&gt;blur&lt;/code&gt; 和 &lt;code&gt;click&lt;/code&gt; 事件的错误。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/593&quot;&gt;＃593&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="469c74a2070f33b117fa7dca5c32e8f5f00b8745" translate="yes" xml:space="preserve">
          <source>Fixed a bug with trashing assets in linux that caused recursive &lt;code&gt;.Trash&lt;/code&gt; files to show up. We now have opted to actually &lt;code&gt;rm -rf&lt;/code&gt; the files in linux because trashing is too inconsistent between linux distros. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2742&quot;&gt;#2742&lt;/a&gt;.</source>
          <target state="translated">修复了在Linux中破坏资源的错误，该错误导致递归 &lt;code&gt;.Trash&lt;/code&gt; 文件显示。现在，我们选择实际 &lt;code&gt;rm -rf&lt;/code&gt; Linux中的文件，因为Linux发行版之间的垃圾回收太不一致了。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2742&quot;&gt;＃2742&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4c520262c89b3ac07c8baf1a654a558e6ed3db1b" translate="yes" xml:space="preserve">
          <source>Fixed a couple regressions in the Dashboard where timed out runs stayed &amp;ldquo;Pending&amp;rdquo; forever. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1891&quot;&gt;#1891&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1952&quot;&gt;#1952&lt;/a&gt;.</source>
          <target state="translated">修复了仪表板中的一些回归，其中超时运行永远保持&amp;ldquo;待处理&amp;rdquo;状态。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1891&quot;&gt;＃1891&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1952&quot;&gt;＃1952&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="00fcb4eea65108e89c9c6443dade9cb50ba551ca" translate="yes" xml:space="preserve">
          <source>Fixed a deployment bug in the &lt;code&gt;core-desktop-gui&lt;/code&gt;.</source>
          <target state="translated">修复了 &lt;code&gt;core-desktop-gui&lt;/code&gt; 中的部署错误。</target>
        </trans-unit>
        <trans-unit id="f061b7f560d64349dba98a8aedb318738f61fbb4" translate="yes" xml:space="preserve">
          <source>Fixed a handful of scenarios and edge cases where cookies were not properly synchronized between external requests and the browser. This led to situations where cookies were either duplicated on requests, or were not sent. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/357&quot;&gt;#357&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/361&quot;&gt;#361&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/362&quot;&gt;#362&lt;/a&gt;.</source>
          <target state="translated">修复了少数情况和极端情况，即外部请求和浏览器之间的cookie无法正确同步。这导致了cookie要么根据请求重复，要么没有发送的情况。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/357&quot;&gt;＃357&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/361&quot;&gt;＃361&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/362&quot;&gt;＃362&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="188f048d711e6696c9c8df5820c6c238970fcef3" translate="yes" xml:space="preserve">
          <source>Fixed a longstanding issue in Cypress where logging in from another computer would kill the session on all other computers, and prevent you from accessing &lt;code&gt;cypress get:key&lt;/code&gt; (amongst other things). Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/400&quot;&gt;#400&lt;/a&gt;.</source>
          <target state="translated">修复了赛普拉斯中的一个长期问题，即从另一台计算机登录会杀死所有其他计算机上的会话，并阻止您访问 &lt;code&gt;cypress get:key&lt;/code&gt; （以及其他）。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/400&quot;&gt;＃400&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="125f3c706233139b5634955a5661ec6e1d443e79" translate="yes" xml:space="preserve">
          <source>Fixed a regression caused by &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; adhering to &lt;code&gt;maxlength&lt;/code&gt; incorrectly. Special character sequences were not respected. Now &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; works with special characters and implements a complete fix for &lt;code&gt;maxlength&lt;/code&gt;. In addition to it working, it now fires all applicable browser events without modifying the actual input value. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/955&quot;&gt;#955&lt;/a&gt;.</source>
          <target state="translated">修复了由&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;错误地粘附到 &lt;code&gt;maxlength&lt;/code&gt; 导致的回归。不尊重特殊字符序列。现在&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;使用特殊字符并实现了对 &lt;code&gt;maxlength&lt;/code&gt; 的完整修复。除了可以正常工作之外，它现在还可以触发所有适用的浏览器事件，而无需修改实际输入值。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/955&quot;&gt;＃955&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="58f207b226d195fcbac964a5875c845dac2c2b05" translate="yes" xml:space="preserve">
          <source>Fixed a regression caused in &lt;code&gt;3.1.1&lt;/code&gt; where we attempted to set a property on an invalid cookie sent from a server. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2724&quot;&gt;#2724&lt;/a&gt;.</source>
          <target state="translated">修复了在 &lt;code&gt;3.1.1&lt;/code&gt; 中导致的回归，其中我们试图在服务器发送的无效cookie上设置属性。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2724&quot;&gt;＃2724&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="79bc8296f43c8bf5bc550d085c1248af39a32c04" translate="yes" xml:space="preserve">
          <source>Fixed a regression in &lt;a href=&quot;changelog#3-3-0&quot;&gt;3.3.0&lt;/a&gt; causing large requests such as &lt;code&gt;multipart/form-data&lt;/code&gt; uploads to hang. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4240&quot;&gt;#4240&lt;/a&gt;, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4252&quot;&gt;#4252&lt;/a&gt;, and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4253&quot;&gt;#4253&lt;/a&gt;.</source>
          <target state="translated">修复了&lt;a href=&quot;changelog#3-3-0&quot;&gt;3.3.0中&lt;/a&gt;的回归导致挂起 &lt;code&gt;multipart/form-data&lt;/code&gt; 上传等大型请求的问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4240&quot;&gt;＃4240&lt;/a&gt;，&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4252&quot;&gt;＃4252&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4253&quot;&gt;＃4253&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="718a1ff91ed67f4a43b3e64705ec6af59b8cc17c" translate="yes" xml:space="preserve">
          <source>Fixed a regression in &lt;a href=&quot;changelog#3-3-0&quot;&gt;3.3.0&lt;/a&gt; causing some users using proxy to see the &amp;ldquo;Browser was not launched through Cypress&amp;rdquo; error during &lt;code&gt;cypress open&lt;/code&gt;. This was caused by incorrectly routing requests for Cypress&amp;rsquo;s internal server on &lt;code&gt;localhost&lt;/code&gt; through the user&amp;rsquo;s proxy. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4410&quot;&gt;#4410&lt;/a&gt;.</source>
          <target state="translated">修复了&lt;a href=&quot;changelog#3-3-0&quot;&gt;3.3.0中&lt;/a&gt;的回归问题，该回归问题导致某些使用代理的用户在 &lt;code&gt;cypress open&lt;/code&gt; 期间看到&amp;ldquo;浏览器未通过Cypress启动&amp;rdquo;错误。这是由于通过用户代理错误地路由了对 &lt;code&gt;localhost&lt;/code&gt; 上的Cypress内部服务器的请求。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4410&quot;&gt;＃4410&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="92bf3f7a02bd774b4f45bba54e1708bbbec88a77" translate="yes" xml:space="preserve">
          <source>Fixed a regression in &lt;code&gt;0.17.1&lt;/code&gt; that was incorrectly setting &lt;code&gt;Cache&lt;/code&gt; headers. This &lt;em&gt;could&lt;/em&gt; cause a situation where you received an &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; origin error. Additionally we now set &lt;code&gt;No-Cache&lt;/code&gt; headers whenever we inject content, but otherwise respect the headers coming from web servers. When using Cypress as the file server, we set &lt;code&gt;etags&lt;/code&gt; but prevent caching.</source>
          <target state="translated">修复了 &lt;code&gt;0.17.1&lt;/code&gt; 中的回归，该回归错误地设置了 &lt;code&gt;Cache&lt;/code&gt; 标头。这&lt;em&gt;可能&lt;/em&gt;会导致您收到 &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; 原点错误的情况。此外，我们现在在每次注入内容时都设置 &lt;code&gt;No-Cache&lt;/code&gt; 标头，但是要尊重来自Web服务器的标头。当使用赛普拉斯作为文件服务器时，我们设置了 &lt;code&gt;etags&lt;/code&gt; 但是阻止了缓存。</target>
        </trans-unit>
        <trans-unit id="797d082c75d18ab24086fb4a5aabff0a9d5357c0" translate="yes" xml:space="preserve">
          <source>Fixed a regression in &lt;code&gt;0.17.2&lt;/code&gt; which caused &lt;strong&gt;separate&lt;/strong&gt; tests that were visiting the same URL not to actually visit the new URL and eventually time out. We&amp;rsquo;ve updated some of our internal QA processes around this because we rarely have regressions and they are a pretty big deal. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/225&quot;&gt;#225&lt;/a&gt;.</source>
          <target state="translated">修复了 &lt;code&gt;0.17.2&lt;/code&gt; 中的回归问题，该回归问题导致访问相同URL的&lt;strong&gt;单独&lt;/strong&gt;测试实际上未访问新URL并最终超时。我们已针对此问题更新了一些内部质量检查流程，因为我们很少进行回归分析，而回归分析确实意义重大。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/225&quot;&gt;＃225&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="40060b269c8fc30e6502dd8d290d1f068f602ced" translate="yes" xml:space="preserve">
          <source>Fixed a regression in &lt;code&gt;3.0.2&lt;/code&gt; that caused typing &lt;code&gt;{enter}&lt;/code&gt; not to submit a form when there were &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; elements other than &lt;code&gt;type='submit'&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2261&quot;&gt;#2261&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2326&quot;&gt;#2326&lt;/a&gt;.</source>
          <target state="translated">修复了 &lt;code&gt;3.0.2&lt;/code&gt; 中的回归问题，该回归问题导致在存在 &lt;code&gt;type='submit'&lt;/code&gt; 以外的 &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; 元素时，键入 &lt;code&gt;{enter}&lt;/code&gt; 不提交表单。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2261&quot;&gt;＃2261&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2326&quot;&gt;＃2326&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cda6d14158f1ca7ec8929275ab499aa9d41aac90" translate="yes" xml:space="preserve">
          <source>Fixed a regression introduced in &lt;a href=&quot;changelog#3-2-0&quot;&gt;3.2.0&lt;/a&gt; that caused &lt;a href=&quot;../../api/commands/fixture&quot;&gt;&lt;code&gt;cy.fixture()&lt;/code&gt;&lt;/a&gt; to throw a &lt;code&gt;EISDIR&lt;/code&gt; error if a directory had the same name as a file within that same directory. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3739&quot;&gt;#3739&lt;/a&gt;.</source>
          <target state="translated">修复了&lt;a href=&quot;changelog#3-2-0&quot;&gt;3.2.0&lt;/a&gt;中引入的回归，如果目录与该目录中的文件同名，则&lt;a href=&quot;../../api/commands/fixture&quot;&gt; &lt;code&gt;cy.fixture()&lt;/code&gt; &lt;/a&gt;会引发 &lt;code&gt;EISDIR&lt;/code&gt; 错误。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3739&quot;&gt;＃3739&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="02f5df8f3f31bad1f7203993fb1b2f8f4b232bde" translate="yes" xml:space="preserve">
          <source>Fixed a regression introduced in &lt;a href=&quot;changelog#3-2-0&quot;&gt;3.2.0&lt;/a&gt; that caused &lt;a href=&quot;../../api/commands/its&quot;&gt;&lt;code&gt;.its()&lt;/code&gt;&lt;/a&gt; to no longer retry when it yields &lt;code&gt;undefined&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3837&quot;&gt;#3837&lt;/a&gt;</source>
          <target state="translated">修复了&lt;a href=&quot;changelog#3-2-0&quot;&gt;3.2.0&lt;/a&gt;中引入的回归，该回归导致&lt;a href=&quot;../../api/commands/its&quot;&gt; &lt;code&gt;.its()&lt;/code&gt; &lt;/a&gt;在产生 &lt;code&gt;undefined&lt;/code&gt; 时不再重试。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3837&quot;&gt;＃3837&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3e0de1cc648e5d061dd3d9554106a7e7e22e8624" translate="yes" xml:space="preserve">
          <source>Fixed a regression introduced in &lt;a href=&quot;changelog#3-2-0&quot;&gt;3.2.0&lt;/a&gt; that caused an error to throw when visiting domains with certain public suffixes. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3717&quot;&gt;#3717&lt;/a&gt;.</source>
          <target state="translated">修复了&lt;a href=&quot;changelog#3-2-0&quot;&gt;3.2.0&lt;/a&gt;中引入的回归，该回归在访问带有某些公共后缀的域时会引发错误。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3717&quot;&gt;＃3717&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2e56f00230509efa8dac3e3c46581c3dcdda0b82" translate="yes" xml:space="preserve">
          <source>Fixed a regression introduced in &lt;a href=&quot;changelog#3-4-0&quot;&gt;3.4.0&lt;/a&gt; that caused an error to be thrown when chaining together multiple assertions using the &lt;code&gt;and&lt;/code&gt; chainable getter. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4833&quot;&gt;#4833&lt;/a&gt;.</source>
          <target state="translated">固定在引入了回归&lt;a href=&quot;changelog#3-4-0&quot;&gt;3.4.0&lt;/a&gt;导致使用多个断言串联起来时被抛出的错误 &lt;code&gt;and&lt;/code&gt; 环连接的吸气剂。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4833&quot;&gt;＃4833&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fd475981c3a413149ca03f811cd7aeb4ada6f22a" translate="yes" xml:space="preserve">
          <source>Fixed a regression introduced in &lt;code&gt;3.x.x&lt;/code&gt; where application code that used &lt;code&gt;setTimeout&lt;/code&gt; with a string argument would see the error &lt;code&gt;fn.apply is not a function&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1854&quot;&gt;#1854&lt;/a&gt;.</source>
          <target state="translated">修复了 &lt;code&gt;3.x.x&lt;/code&gt; 中引入的回归问题，在该回归中，将 &lt;code&gt;setTimeout&lt;/code&gt; 与字符串参数一起使用的应用程序代码将看到错误 &lt;code&gt;fn.apply is not a function&lt;/code&gt; 。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1854&quot;&gt;＃1854&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="af27ef3a8c5b1eb360f49945fa5020fda8149632" translate="yes" xml:space="preserve">
          <source>Fixed a regression where tests that failed outside of a hook would incorrectly indicate themselves as a &lt;code&gt;before each&lt;/code&gt; hook. In addition, in the default &lt;code&gt;spec&lt;/code&gt;, reporter will now display the test name when a hook was the source of failure. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/253&quot;&gt;#253&lt;/a&gt;.</source>
          <target state="translated">修复了回归问题，即在挂钩之外失败的测试会错误地将自己表示为 &lt;code&gt;before each&lt;/code&gt; 挂钩之前的。此外，在默认 &lt;code&gt;spec&lt;/code&gt; ，当挂钩是失败的根源时，报告程序现在将显示测试名称。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/253&quot;&gt;＃253&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ad6a48c43848b909388100743330443ecff9d966" translate="yes" xml:space="preserve">
          <source>Fixed a runaway RegExp causing large &lt;code&gt;.js&lt;/code&gt; files to take dozens of seconds to process. This was a regression caused by &lt;code&gt;2.0.0&lt;/code&gt; with the new &lt;a href=&quot;configuration#Browser&quot;&gt;&lt;code&gt;modifyObstructiveCode&lt;/code&gt;&lt;/a&gt; option. We&amp;rsquo;ve optimized the RegExp and the performance is back to being almost identical to transparently passing responses through. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1330&quot;&gt;#1330&lt;/a&gt;.</source>
          <target state="translated">修复了RegExp失控导致大型 &lt;code&gt;.js&lt;/code&gt; 文件处理数十秒的问题。这是使用新的&lt;a href=&quot;configuration#Browser&quot;&gt; &lt;code&gt;modifyObstructiveCode&lt;/code&gt; &lt;/a&gt;选项的 &lt;code&gt;2.0.0&lt;/code&gt; 引起的回归。我们对RegExp进行了优化，其性能几乎与透明地传递响应相同。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1330&quot;&gt;＃1330&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ad28b2e2f139b4f56dd509edc39f63bc289fc0b8" translate="yes" xml:space="preserve">
          <source>Fixed a small visual bug where failed commands were not aligned to other commands. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2314&quot;&gt;#2314&lt;/a&gt;.</source>
          <target state="translated">修复了一个小的视觉错误，其中错误的命令未与其他命令对齐。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2314&quot;&gt;＃2314&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="20b3da33f022c8918a8fee4cd409fa5b0fa5bc32" translate="yes" xml:space="preserve">
          <source>Fixed a very longstanding (!) issue where &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; would fail to click the center coordinates of elements with style &lt;code&gt;display: inline&lt;/code&gt;. Cypress would instead report that the element was being covered causing the error: &lt;code&gt;cy.click() failed because this element is being covered by another element&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/210&quot;&gt;#210&lt;/a&gt;.</source>
          <target state="translated">修复了一个很长的（！）问题，即&lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt;无法单击样式 &lt;code&gt;display: inline&lt;/code&gt; 的元素的中心坐标。赛普拉斯会报告该元素被覆盖，从而导致错误： &lt;code&gt;cy.click() failed because this element is being covered by another element&lt;/code&gt; 。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/210&quot;&gt;＃210&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8488e4ff3fa99d45f5aac3d43763fd3bd4dc1c31" translate="yes" xml:space="preserve">
          <source>Fixed a visual bug when aliasing a non-route subject multiple times that would cause the Test Runner to show &amp;lsquo;undefined&amp;rsquo; alias with empty counts. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4429&quot;&gt;#4429&lt;/a&gt;.</source>
          <target state="translated">修复了多次别名非路由主题时出现的视觉错误，该错误会导致测试运行程序显示带有空计数的&amp;ldquo;未定义&amp;rdquo;别名。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4429&quot;&gt;＃4429&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="eb032515c85605b59f3782be31262996bff85914" translate="yes" xml:space="preserve">
          <source>Fixed alt tray icon so it shows up correctly on click.</source>
          <target state="translated">修正了alt托盘图标,使其在点击时正确显示。</target>
        </trans-unit>
        <trans-unit id="313a913671a903142640a3d934767834ab3ee524" translate="yes" xml:space="preserve">
          <source>Fixed an edge case in the &lt;code&gt;driver&lt;/code&gt; that could lead to memory leaks. This happened when Command Logs updated from previously run tests. Normally, in headless mode, we automatically remove references to purge memory after each test, but when logs were updated after this, their references were merged back in again and held onto forever. If you were seeing long Cypress runs die or eventually halt, this was likely the cause. We did extensive memory regression analysis on Cypress and could not find any more memory leaks. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/301&quot;&gt;#301&lt;/a&gt;.</source>
          <target state="translated">修复了 &lt;code&gt;driver&lt;/code&gt; 中可能导致内存泄漏的边缘情况。从先前运行的测试更新命令日志时会发生这种情况。通常，在无头模式下，我们会在每次测试后自动删除对清除内存的引用，但是在此之后更新日志时，它们的引用将再次合并回并永久保存。如果您看到赛普拉斯的长时间运行死机或最终停止运行，则可能是原因。我们在赛普拉斯上进行了广泛的内存回归分析，找不到更多的内存泄漏。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/301&quot;&gt;＃301&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="eb080bbba9a5a85990fa91f1b178e3eb7cb2d0b4" translate="yes" xml:space="preserve">
          <source>Fixed an edge case when hooks such as &lt;code&gt;beforeEach&lt;/code&gt; or &lt;code&gt;afterEach&lt;/code&gt; threw an &lt;strong&gt;identical&lt;/strong&gt; error message, Cypress would hang indefinitely and never finish running the tests. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/674&quot;&gt;#674&lt;/a&gt;.</source>
          <target state="translated">修复了当诸如 &lt;code&gt;beforeEach&lt;/code&gt; 或 &lt;code&gt;afterEach&lt;/code&gt; 之类的钩子引发&lt;strong&gt;相同的&lt;/strong&gt;错误消息时，赛普拉斯会无限期挂起并且永远无法完成测试运行的情况。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/674&quot;&gt;＃674&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2661a63af2ce07d2cc706e56312cdae37b3f6ed6" translate="yes" xml:space="preserve">
          <source>Fixed an edge case when writing a test with a &lt;code&gt;done&lt;/code&gt; callback alongside &lt;code&gt;cy&lt;/code&gt; commands. This situation would always cause a timeout after 30 seconds even though the test would pass.</source>
          <target state="translated">修复了在编写带有带有 &lt;code&gt;cy&lt;/code&gt; 命令的 &lt;code&gt;done&lt;/code&gt; 回调的测试时的边缘情况。即使测试通过，这种情况也总是会在30秒后导致超时。</target>
        </trans-unit>
        <trans-unit id="c257669938ad8d8588a5d98ce4bc6d698f7e89b4" translate="yes" xml:space="preserve">
          <source>Fixed an edge case where assertions would incorrectly associate to a previously run assertion. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/252&quot;&gt;#252&lt;/a&gt;.</source>
          <target state="translated">修复了断言将错误地关联到先前运行的断言的极端情况。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/252&quot;&gt;＃252&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="99f6b62fc97458e6561cf3b928ec860cd9b1dc47" translate="yes" xml:space="preserve">
          <source>Fixed an issue causing &lt;code&gt;Chrome&lt;/code&gt; to timeout when attempted to be run through our docker containers. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1031&quot;&gt;#1031&lt;/a&gt;.</source>
          <target state="translated">修复了导致尝试通过我们的Docker容器运行时 &lt;code&gt;Chrome&lt;/code&gt; 超时的问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1031&quot;&gt;＃1031&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0acea776ba5899e734dd14a6a1309901365ecaf8" translate="yes" xml:space="preserve">
          <source>Fixed an issue when testing applications using older versions of jQuery. They now no longer throw &lt;code&gt;item.first is not a function&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2927&quot;&gt;#2927&lt;/a&gt;.</source>
          <target state="translated">修复了使用旧版jQuery测试应用程序时的问题。他们现在不再抛出 &lt;code&gt;item.first is not a function&lt;/code&gt; 不再是一个函数。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2927&quot;&gt;＃2927&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2df9794ea315081304a449996ce2c238d0a619fc" translate="yes" xml:space="preserve">
          <source>Fixed an issue where Cypress would inject content into the &lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt; tag instead of the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; tag. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2026&quot;&gt;#2026&lt;/a&gt;.</source>
          <target state="translated">修复了赛普拉斯将内容注入 &lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt; 标记而不是 &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 标记的问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2026&quot;&gt;＃2026&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="503a7789189e2cc3fea11c127b7ef29ccf854e25" translate="yes" xml:space="preserve">
          <source>Fixed an issue where Cypress&amp;rsquo;s &lt;code&gt;devDependencies&lt;/code&gt; were being included in the Windows binary. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2896&quot;&gt;#2896&lt;/a&gt;.</source>
          <target state="translated">解决了Windows二进制文件中包含Cypress的 &lt;code&gt;devDependencies&lt;/code&gt; 的问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2896&quot;&gt;＃2896&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9b9a67d1e1a1a3d9f46755d7554324c5b006cbfa" translate="yes" xml:space="preserve">
          <source>Fixed an issue where highlighting a command&amp;rsquo;s snapshot would throw an error when no application was rendered in the AUT frame. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4177&quot;&gt;#4177&lt;/a&gt;.</source>
          <target state="translated">修复了以下问题：在AUT框架中未渲染任何应用程序时，突出显示命令的快照会引发错误。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4177&quot;&gt;＃4177&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8634090de3bb23f05d8348be273ac80a2f06895b" translate="yes" xml:space="preserve">
          <source>Fixed an issue where returning/resolving &lt;code&gt;undefined&lt;/code&gt; from a &lt;a href=&quot;../../api/commands/task&quot;&gt;&lt;code&gt;cy.task()&lt;/code&gt;&lt;/a&gt; handler resulted in an incorrect runtime error. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2553&quot;&gt;#2553&lt;/a&gt;.</source>
          <target state="translated">修复了以下问题：从&lt;a href=&quot;../../api/commands/task&quot;&gt; &lt;code&gt;cy.task()&lt;/code&gt; &lt;/a&gt;处理函数返回/解析 &lt;code&gt;undefined&lt;/code&gt; 导致错误的运行时错误。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2553&quot;&gt;＃2553&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c620b3b816b83868106dcda7ca6573a168f7e4f2" translate="yes" xml:space="preserve">
          <source>Fixed an issue with &lt;a href=&quot;../../api/commands/clear&quot;&gt;&lt;code&gt;.clear()&lt;/code&gt;&lt;/a&gt; not behaving the same as &lt;code&gt;cy.type('{selectall}{backspace}')&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/420&quot;&gt;#420&lt;/a&gt;.</source>
          <target state="translated">修复了&lt;a href=&quot;../../api/commands/clear&quot;&gt; &lt;code&gt;.clear()&lt;/code&gt; &lt;/a&gt;与 &lt;code&gt;cy.type('{selectall}{backspace}')&lt;/code&gt; 不同的问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/420&quot;&gt;＃420&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ba35f7f430bc3eb760682eeba295aa9b02318261" translate="yes" xml:space="preserve">
          <source>Fixed an oversight where a specific framebusting check was not being properly stripped and removed by the default config option &lt;a href=&quot;configuration#Browser&quot;&gt;&lt;code&gt;modifyObstructiveCode&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2030&quot;&gt;#2030&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2059&quot;&gt;#2059&lt;/a&gt;.</source>
          <target state="translated">修复了默认配置选项&lt;a href=&quot;configuration#Browser&quot;&gt; &lt;code&gt;modifyObstructiveCode&lt;/code&gt; &lt;/a&gt;未能正确剥离和删除特定框架破坏检查的疏忽的问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2030&quot;&gt;＃2030&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2059&quot;&gt;＃2059&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a3feeb11c878c0b1b6c2b42b4926ba57769c0a27" translate="yes" xml:space="preserve">
          <source>Fixed another Dashboard regression where an error would throw when recording tests and sending a large list of specs. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1901&quot;&gt;#1901&lt;/a&gt;.</source>
          <target state="translated">修复了另一个Dashboard回归，该回归在记录测试并发送大量规格时会引发错误。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1901&quot;&gt;＃1901&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f95ba80c09d2573eaefec9828019f86ac7fc513f" translate="yes" xml:space="preserve">
          <source>Fixed another bug with Chrome that caused the &lt;code&gt;chromeWebSecurity: false&lt;/code&gt; option to not be respected. This was due to Chrome progressively rolling out trials of a new option that attempts to isolate sites (and iframes) in their own child process if their origins are different. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1951&quot;&gt;#1951&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2001&quot;&gt;#2001&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/715&quot;&gt;#715&lt;/a&gt;.</source>
          <target state="translated">修复了Chrome的另一个错误，该错误导致 &lt;code&gt;chromeWebSecurity: false&lt;/code&gt; 选项不受尊重。这是由于Chrome逐步推出了一项新选项的试验，该尝试会尝试在源站点不同的情况下在自己的子进程中隔离网站（和iframe）。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1951&quot;&gt;＃1951&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2001&quot;&gt;＃2001&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/715&quot;&gt;＃715&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="94853bb9ca7c86396cbd9c57c0364c019a3f65d1" translate="yes" xml:space="preserve">
          <source>Fixed another issue in Chrome* versions &amp;gt;= 72 where a scrollable command log would cause the entire application to be scrollable. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3253&quot;&gt;#3253&lt;/a&gt;.</source>
          <target state="translated">修复了Chrome *版本&amp;gt; = 72中的另一个问题，在该问题中，可滚动的命令日志将导致整个应用程序可滚动。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3253&quot;&gt;＃3253&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="696f0ff4fbb232ea2e711589bbb9e959ff73ea3e" translate="yes" xml:space="preserve">
          <source>Fixed another regression in &lt;code&gt;3.1.1&lt;/code&gt; where passing &lt;code&gt;undefined&lt;/code&gt; to a &lt;code&gt;setTimeout&lt;/code&gt; caused Cypress to error. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2719&quot;&gt;#2719&lt;/a&gt;.</source>
          <target state="translated">修复了 &lt;code&gt;3.1.1&lt;/code&gt; 中的另一个回归问题，在该回归中，将 &lt;code&gt;undefined&lt;/code&gt; 传递给 &lt;code&gt;setTimeout&lt;/code&gt; 会导致Cypress错误。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2719&quot;&gt;＃2719&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="aebadebc5158757be71142267de0bf16766d036c" translate="yes" xml:space="preserve">
          <source>Fixed bug in Mocha where it incorrectly associates &lt;code&gt;hook.ctx.currentTest&lt;/code&gt; to the wrong &lt;code&gt;test&lt;/code&gt;. &lt;a href=&quot;https://github.com/mochajs/mocha/issues/1638&quot;&gt;Mocha Issue&lt;/a&gt;.</source>
          <target state="translated">修复了Mocha中的错误，该错误将 &lt;code&gt;hook.ctx.currentTest&lt;/code&gt; 错误地关联到错误的 &lt;code&gt;test&lt;/code&gt; 。&lt;a href=&quot;https://github.com/mochajs/mocha/issues/1638&quot;&gt;摩卡咖啡问题&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="612dfb9e3b3cdc617ab91ece26ddc8558ce3af03" translate="yes" xml:space="preserve">
          <source>Fixed bug when &lt;code&gt;Errors&lt;/code&gt; that threw with no arguments: &lt;code&gt;throw new Error()&lt;/code&gt; and had their messages appended would duplicate the message over and over again. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1338&quot;&gt;#1338&lt;/a&gt;.</source>
          <target state="translated">修正了当 &lt;code&gt;Errors&lt;/code&gt; 的是不带任何参数抛出： &lt;code&gt;throw new Error()&lt;/code&gt; ，并附加它们的消息将重复的消息一遍又一遍。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1338&quot;&gt;＃1338&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="918a3cf4f69c121b36ee0b2424185525b6d9ad4b" translate="yes" xml:space="preserve">
          <source>Fixed bug where mocked Dates using &lt;a href=&quot;../../api/commands/clock&quot;&gt;&lt;code&gt;cy.clock()&lt;/code&gt;&lt;/a&gt; would not be an instance of &lt;code&gt;Date&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2570&quot;&gt;#2570&lt;/a&gt;.</source>
          <target state="translated">修复了使用&lt;a href=&quot;../../api/commands/clock&quot;&gt; &lt;code&gt;cy.clock()&lt;/code&gt; 模拟&lt;/a&gt;日期的错误不是 &lt;code&gt;Date&lt;/code&gt; 的实例的错误。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2570&quot;&gt;＃2570&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4ee9efa7d8a12b518bf4119349b5f2d9f0cde469" translate="yes" xml:space="preserve">
          <source>Fixed bug where only the first DOM element of an array of DOM elements would be blacked out after being passed as argument to &lt;code&gt;blackout&lt;/code&gt; within &lt;a href=&quot;../../api/commands/screenshot&quot;&gt;&lt;code&gt;cy.screenshot()&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2508&quot;&gt;#2508&lt;/a&gt;.</source>
          <target state="translated">修复了以下错误：仅在&lt;a href=&quot;../../api/commands/screenshot&quot;&gt; &lt;code&gt;cy.screenshot()&lt;/code&gt; 中将&lt;/a&gt; DOM元素数组的第一个DOM元素作为 &lt;code&gt;blackout&lt;/code&gt; 参数传递后，该对象才会被涂黑。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2508&quot;&gt;＃2508&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f661fc4b9db21728381b6001a9e54604f162657d" translate="yes" xml:space="preserve">
          <source>Fixed bug where tests were failing due to assertions causing Cypress to accidentally iterate through cross-origin iframes. If you were seeing &amp;ldquo;random&amp;rdquo; cross-origin errors, this likely fixes those issues. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2784&quot;&gt;#2784&lt;/a&gt;.</source>
          <target state="translated">修复了由于断言导致赛普拉斯意外遍历跨源iframe导致测试失败的错误。如果您看到&amp;ldquo;随机&amp;rdquo;跨域错误，则可能可以解决这些问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2784&quot;&gt;＃2784&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d9c19c5dbeb10fc37ea3887a8e9309cd3159aebf" translate="yes" xml:space="preserve">
          <source>Fixed bug with custom 3rd party Mocha reporters relying on &lt;code&gt;test.titlePath&lt;/code&gt; being a function. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1142&quot;&gt;#1142&lt;/a&gt;.</source>
          <target state="translated">修复了依赖 &lt;code&gt;test.titlePath&lt;/code&gt; 作为函数的自定义第三方Mocha记者的错误。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1142&quot;&gt;＃1142&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6e77d2327f9187fbef2c0ab464f495a2f7e023ca" translate="yes" xml:space="preserve">
          <source>Fixed bugs with Electron losing focus when running headlessly via &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt; after navigation. Now the browser will always act as if it is focused no matter what and in all situations when running headlessly. If you were seeing focus related problems when running headlessly, this should fix them. Fixes issue &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2190&quot;&gt;#2190&lt;/a&gt;.</source>
          <target state="translated">修复了导航后通过&lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt; &lt;code&gt;cypress run&lt;/code&gt; &lt;/a&gt;无头运行时Electron失去焦点的错误。现在，无论什么情况在任何情况下无头运行，浏览器都将始终像集中精力一样工作。如果在无头运行时看到与焦点相关的问题，这应该可以解决它们。修复了问题&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2190&quot;&gt;＃2190&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7025ef6c77bddd2485fa875c1d5be6a4b45e734a" translate="yes" xml:space="preserve">
          <source>Fixed busted internal timers that caused random timeouts, proxy errors, incorrect delays, and long pauses when loading the GUI. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/572&quot;&gt;#572&lt;/a&gt;.</source>
          <target state="translated">修复了内部计时器中断问题，这些计时器在加载GUI时会导致随机超时，代理错误，不正确的延迟以及长时间的暂停。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/572&quot;&gt;＃572&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="56be5cf5478837f13541225d0c7cd0fe3342d7ea" translate="yes" xml:space="preserve">
          <source>Fixed code example for google analytics stubbing &lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/issues/1454&quot;&gt;#1454&lt;/a&gt;</source>
          <target state="translated">谷歌分析存根的固定代码示例&lt;a href=&quot;https://github.com/cypress-io/cypress-documentation/issues/1454&quot;&gt;＃1454&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2742a044ddb90cd808739a321eebf8d6fcbc15bc" translate="yes" xml:space="preserve">
          <source>Fixed display of tooltips when selecting elements from the Selector Playground so that they display at the correct coordinates when scrolling. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1351&quot;&gt;#1351&lt;/a&gt;.</source>
          <target state="translated">固定了从&amp;ldquo;选择器游乐场&amp;rdquo;中选择元素时工具提示的显示，以便在滚动时它们以正确的坐标显示。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1351&quot;&gt;＃1351&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="251641485084c6e1d7bc15a495074840c8bbd600" translate="yes" xml:space="preserve">
          <source>Fixed displaying &lt;code&gt;(null)&lt;/code&gt; contentType when a &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; returned a &lt;code&gt;404&lt;/code&gt; status code. We now only display &lt;code&gt;contentType&lt;/code&gt; when one exists.</source>
          <target state="translated">修复了当&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;返回 &lt;code&gt;404&lt;/code&gt; 状态代码时显示 &lt;code&gt;(null)&lt;/code&gt; contentType的问题。现在，我们仅在存在 &lt;code&gt;contentType&lt;/code&gt; 时显示它。</target>
        </trans-unit>
        <trans-unit id="6e0af6a0db32674c472a21c20d182a7188e2555d" translate="yes" xml:space="preserve">
          <source>Fixed domain parsing failures when &lt;code&gt;local&lt;/code&gt; or &lt;code&gt;localhost&lt;/code&gt; was not used as a &lt;code&gt;tld&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1292&quot;&gt;#1292&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1278&quot;&gt;#1278&lt;/a&gt;.</source>
          <target state="translated">修复了当 &lt;code&gt;local&lt;/code&gt; 或 &lt;code&gt;localhost&lt;/code&gt; 不用作 &lt;code&gt;tld&lt;/code&gt; 时域解析失败的问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1292&quot;&gt;＃1292&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1278&quot;&gt;＃1278&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d8a8afb7ba2a95345f8cb179792976f988c1c4a1" translate="yes" xml:space="preserve">
          <source>Fixed edge case where Cypress would not correctly handle &lt;code&gt;POST&lt;/code&gt; or &lt;code&gt;PUT&lt;/code&gt; requests with a JSON body. These requests would just hang and eventually time out.</source>
          <target state="translated">固定情况下，赛普拉斯无法正确处理带有JSON正文的 &lt;code&gt;POST&lt;/code&gt; 或 &lt;code&gt;PUT&lt;/code&gt; 请求。这些请求将挂起并最终超时。</target>
        </trans-unit>
        <trans-unit id="c2d7a413de44f197a54d70c4b3e138fc45ad09e8" translate="yes" xml:space="preserve">
          <source>Fixed edge case where XHR&amp;rsquo;s which were already aborted were aborted a 2nd time when tests end. Cypress now only aborts currently running XHR&amp;rsquo;s which have not already been aborted.</source>
          <target state="translated">固定边缘情况，其中已终止的XHR在测试结束时第二次终止。赛普拉斯现在仅中止当前正在运行的XHR，而该XHR尚未中止。</target>
        </trans-unit>
        <trans-unit id="15db83a7134834b98a8112f0a9f994c44579c61c" translate="yes" xml:space="preserve">
          <source>Fixed edge case with &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt; and command options &lt;code&gt;visible&lt;/code&gt; and &lt;code&gt;exist&lt;/code&gt; where it would always fail ven though the matched element was in the correct state.</source>
          <target state="translated">固定边缘的情况，带有&lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; &lt;/a&gt;和命令选项 &lt;code&gt;visible&lt;/code&gt; 并且 &lt;code&gt;exist&lt;/code&gt; ，即使匹配的元素处于正确状态，该情况也总是失败。</target>
        </trans-unit>
        <trans-unit id="736d2fd6d67eea3c666645e76df7818015a827a3" translate="yes" xml:space="preserve">
          <source>Fixed error message on &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/clear&quot;&gt;&lt;code&gt;.clear()&lt;/code&gt;&lt;/a&gt; when typing into non-typeable elements or clearing non-clearable elements to accurately list the elements allowed. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1650&quot;&gt;#1650&lt;/a&gt;.</source>
          <target state="translated">修复了在键入无法输入的元素或清除无法清除的元素以准确列出允许的元素时在&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../api/commands/clear&quot;&gt; &lt;code&gt;.clear()&lt;/code&gt; &lt;/a&gt;上出现的错误消息。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1650&quot;&gt;＃1650&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="02b2238de0c84627cddc80afe17c2ea623cb3c16" translate="yes" xml:space="preserve">
          <source>Fixed error when recording and failing to parse the git commit message. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/847&quot;&gt;#847&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/841&quot;&gt;#841&lt;/a&gt;.</source>
          <target state="translated">修复了录制时无法解析git commit消息的错误。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/847&quot;&gt;＃847&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/841&quot;&gt;＃841&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3040a4458cc421fb2d22a8003bbe0b372f72da17" translate="yes" xml:space="preserve">
          <source>Fixed even more issues with &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; not inserting characters on &lt;code&gt;input[type=number]&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1381&quot;&gt;#1381&lt;/a&gt;.</source>
          <target state="translated">修复了&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;不能在 &lt;code&gt;input[type=number]&lt;/code&gt; 上插入字符的更多问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1381&quot;&gt;＃1381&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ff4a60d5e898f49af55b20216c54316464791778" translate="yes" xml:space="preserve">
          <source>Fixed file watching when changing the &lt;code&gt;integrationFolder&lt;/code&gt; to something other than the default value. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/438&quot;&gt;#438&lt;/a&gt;.</source>
          <target state="translated">修复了 &lt;code&gt;integrationFolder&lt;/code&gt; 更改为默认值以外的文件时的观看行为。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/438&quot;&gt;＃438&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f71d3bd8125a553f32eb8e552ca0938dfda05a60" translate="yes" xml:space="preserve">
          <source>Fixed hook failure associated to wrong failed current test when &lt;code&gt;grep&lt;/code&gt; was set.</source>
          <target state="translated">修复了设置 &lt;code&gt;grep&lt;/code&gt; 时与错误的当前测试失败相关的钩子故障。</target>
        </trans-unit>
        <trans-unit id="773347c43b2905ce0adc0b80483b6cedf1665d7a" translate="yes" xml:space="preserve">
          <source>Fixed icons visually shifting when tests were running in the Test Runner. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1983&quot;&gt;#1983&lt;/a&gt;.</source>
          <target state="translated">修复了在&amp;ldquo;测试运行器&amp;rdquo;中运行测试时图标在视觉上的偏移。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1983&quot;&gt;＃1983&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a639d3246f9660269f602500bc09f7512383b7c2" translate="yes" xml:space="preserve">
          <source>Fixed incomplete type definitions for &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2305&quot;&gt;#2305&lt;/a&gt;.</source>
          <target state="translated">修复了&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request&lt;/code&gt; 的&lt;/a&gt;不完整类型定义。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2305&quot;&gt;＃2305&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="55fe1fe1beaaad0ae95c08429f866661564ed878" translate="yes" xml:space="preserve">
          <source>Fixed incorrect JSDoc comments in type definition for &lt;a href=&quot;../../api/commands/focus&quot;&gt;.focus()&lt;/a&gt; and better formatted comments in type definitions. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2975&quot;&gt;#2975&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2954&quot;&gt;#2954&lt;/a&gt;.</source>
          <target state="translated">修复了&lt;a href=&quot;../../api/commands/focus&quot;&gt;.focus（）的&lt;/a&gt;类型定义中错误的JSDoc注释以及类型定义中格式更好的注释。地址&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2975&quot;&gt;＃2975&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2954&quot;&gt;＃2954&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="812109db35de49de7db730b131b54593ddd17605" translate="yes" xml:space="preserve">
          <source>Fixed incorrect error message on reverse visibility assertions. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/275&quot;&gt;#275&lt;/a&gt;.</source>
          <target state="translated">修复了有关反向可见性断言的错误消息。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/275&quot;&gt;＃275&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5c069db9105c52c4f356c338dd1d13ea2ca1306f" translate="yes" xml:space="preserve">
          <source>Fixed incorrect type definition for options usage for &lt;a href=&quot;../../api/commands/then&quot;&gt;.then()&lt;/a&gt;. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3075&quot;&gt;#3075&lt;/a&gt;.</source>
          <target state="translated">修复了&lt;a href=&quot;../../api/commands/then&quot;&gt;.then（）的&lt;/a&gt;选项用法的错误类型定义。地址&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3075&quot;&gt;＃3075&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="86b030fdcb00b2f9bf3970fa4fbc426e90f71819" translate="yes" xml:space="preserve">
          <source>Fixed incorrectly setting &lt;code&gt;charCode&lt;/code&gt; and &lt;code&gt;keyCode&lt;/code&gt; when using &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; on a few different special characters such as &lt;code&gt;{&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2105&quot;&gt;#2105&lt;/a&gt;.</source>
          <target state="translated">修复了在一些不同的特殊字符（例如 &lt;code&gt;{&lt;/code&gt; &lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;上使用.type（）时错误地设置 &lt;code&gt;charCode&lt;/code&gt; 和 &lt;code&gt;keyCode&lt;/code&gt; 的问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2105&quot;&gt;＃2105&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="14d73fb5c06694aa48acf2fc44c2e17262c62426" translate="yes" xml:space="preserve">
          <source>Fixed inserting the string &lt;code&gt;null&lt;/code&gt; into &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; urls when providing a &lt;code&gt;baseUrl&lt;/code&gt; in &lt;code&gt;cypress.json&lt;/code&gt; while origin could not be determined. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/274&quot;&gt;#274&lt;/a&gt;.</source>
          <target state="translated">固定插入串 &lt;code&gt;null&lt;/code&gt; 到&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt;提供的网址时 &lt;code&gt;baseUrl&lt;/code&gt; 在 &lt;code&gt;cypress.json&lt;/code&gt; 而起源无法确定。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/274&quot;&gt;＃274&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="afeb42766edda55645ad3cb0a7d8d0216d4eb01b" translate="yes" xml:space="preserve">
          <source>Fixed internal Cypress tests. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2606&quot;&gt;#2606&lt;/a&gt;.</source>
          <target state="translated">修复了内部赛普拉斯测试。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2606&quot;&gt;＃2606&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1382c51c4ccba4ae45334849e71d4f3885625dc2" translate="yes" xml:space="preserve">
          <source>Fixed internal test error &lt;code&gt;beforeSpecRun is not a function&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2401&quot;&gt;#2401&lt;/a&gt;.</source>
          <target state="translated">修复内部测试错误，之前 &lt;code&gt;beforeSpecRun is not a function&lt;/code&gt; 。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2401&quot;&gt;＃2401&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2017dd059d0898c9d6a5369d875f74f7a20a1f79" translate="yes" xml:space="preserve">
          <source>Fixed issue of Cypress being unable to play videos with &lt;code&gt;autoplay&lt;/code&gt;. We now pass the &lt;code&gt;--no-user-gesture-required&lt;/code&gt; command line switch to Chrome. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2376&quot;&gt;#2376&lt;/a&gt;.</source>
          <target state="translated">修复了赛普拉斯无法 &lt;code&gt;autoplay&lt;/code&gt; 播放视频的问题。现在，我们将 &lt;code&gt;--no-user-gesture-required&lt;/code&gt; 命令行开关传递给Chrome。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2376&quot;&gt;＃2376&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d1454c9f7e105098250079b6197e4fc0d616f586" translate="yes" xml:space="preserve">
          <source>Fixed issue when using &lt;a href=&quot;../../api/commands/writefile&quot;&gt;&lt;code&gt;cy.writeFile()&lt;/code&gt;&lt;/a&gt; and passing an object to a &lt;code&gt;.json&lt;/code&gt; file. The object is now correctly written to the JSON file instead of a string. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/2373&quot;&gt;#2373&lt;/a&gt;.</source>
          <target state="translated">当使用固定的问题&lt;a href=&quot;../../api/commands/writefile&quot;&gt; &lt;code&gt;cy.writeFile()&lt;/code&gt; &lt;/a&gt;和传递对象到 &lt;code&gt;.json&lt;/code&gt; 文件。现在，该对象已正确写入JSON文件而不是字符串。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/2373&quot;&gt;＃2373&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2c353974950c8f90d95bbad7cc4de3cde862a338" translate="yes" xml:space="preserve">
          <source>Fixed issue when using TypeScript that caused namespace errors to be thrown. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1627&quot;&gt;#1627&lt;/a&gt;.</source>
          <target state="translated">解决了使用TypeScript时会引发名称空间错误的问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1627&quot;&gt;＃1627&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1229a64e09bfdf46d6b860f6c4fd4b0b0c37d277" translate="yes" xml:space="preserve">
          <source>Fixed issue where &lt;a href=&quot;../../api/commands/exec&quot;&gt;&lt;code&gt;cy.exec()&lt;/code&gt;&lt;/a&gt; was failing when running Cypress in docker. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/517&quot;&gt;#517&lt;/a&gt;.</source>
          <target state="translated">修复了在&lt;a href=&quot;../../api/commands/exec&quot;&gt; &lt;code&gt;cy.exec()&lt;/code&gt; &lt;/a&gt;运行Cypress时cy.exec（）失败的问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/517&quot;&gt;＃517&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f3853b829c65b8667819b5bb5a82df44fa46e42b" translate="yes" xml:space="preserve">
          <source>Fixed issue where &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;type=&quot;email&quot;&lt;/code&gt; inputs were throwing an error. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/504&quot;&gt;#504&lt;/a&gt;.</source>
          <target state="translated">修复了带有 &lt;code&gt;type=&quot;email&quot;&lt;/code&gt; 输入的&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;引发错误的问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/504&quot;&gt;＃504&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="615a0b78351a76d8edfafb3a29f2bd3dbac0de0f" translate="yes" xml:space="preserve">
          <source>Fixed issue where &lt;code&gt;event&lt;/code&gt; was undefined when using an &lt;code&gt;onload&lt;/code&gt; event handler. Fixed &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2859&quot;&gt;#2859&lt;/a&gt;</source>
          <target state="translated">解决了使用 &lt;code&gt;onload&lt;/code&gt; 事件处理程序时 &lt;code&gt;event&lt;/code&gt; 未定义的问题。固定&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2859&quot;&gt;＃2859&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f19256491757bc321389a1dfb9fde2c16863ab68" translate="yes" xml:space="preserve">
          <source>Fixed issue where &lt;code&gt;stdout&lt;/code&gt; would not be displayed on a completed &lt;code&gt;cypress ci&lt;/code&gt; run. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/398&quot;&gt;#398&lt;/a&gt;.</source>
          <target state="translated">修复了在完整的 &lt;code&gt;cypress ci&lt;/code&gt; 运行中不会显示 &lt;code&gt;stdout&lt;/code&gt; 的问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/398&quot;&gt;＃398&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d5537ac05b50b1d9d5162eb0be6a42dadc20efb9" translate="yes" xml:space="preserve">
          <source>Fixed issue where &lt;code&gt;window.performance.getEntriesByType&lt;/code&gt; would return &lt;code&gt;undefined&lt;/code&gt; instead of an array within application code when using &lt;a href=&quot;../../api/commands/clock&quot;&gt;&lt;code&gt;cy.clock()&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3625&quot;&gt;#3625&lt;/a&gt;.</source>
          <target state="translated">解决了使用&lt;a href=&quot;../../api/commands/clock&quot;&gt; &lt;code&gt;cy.clock()&lt;/code&gt; &lt;/a&gt;时 &lt;code&gt;window.performance.getEntriesByType&lt;/code&gt; 将返回 &lt;code&gt;undefined&lt;/code&gt; 而不是应用程序代码中的数组的问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3625&quot;&gt;＃3625&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="55113d9d2801f6fddc9e5b2e5b21e5962d7abbdd" translate="yes" xml:space="preserve">
          <source>Fixed issue where Cypress hanged due to Xvfb permissions. More intuitive output is given during install failures. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/330&quot;&gt;#330&lt;/a&gt;.</source>
          <target state="translated">修复了赛普拉斯由于Xvfb权限而挂起的问题。在安装失败期间会给出更直观的输出。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/330&quot;&gt;＃330&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="af8382ebdd6683a30092c82e522e5fa69083d349" translate="yes" xml:space="preserve">
          <source>Fixed issue where Cypress would hang indefinitely when starting a new spec when in &lt;code&gt;cypress run&lt;/code&gt; mode. Additionally we have optimized the code path to not read in the local &lt;code&gt;state.json&lt;/code&gt; unnecessarily. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2013&quot;&gt;#2013&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1912&quot;&gt;#1912&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1905&quot;&gt;#1905&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1890&quot;&gt;#1890&lt;/a&gt;.</source>
          <target state="translated">修复了在赛普拉斯 &lt;code&gt;cypress run&lt;/code&gt; 模式下启动新规格时，赛普拉斯无限期挂起的问题。此外，我们还优化了代码路径， &lt;code&gt;state.json&lt;/code&gt; 不必要地在本地state.json中读取。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2013&quot;&gt;＃2013&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1912&quot;&gt;＃1912&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1905&quot;&gt;＃1905&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1890&quot;&gt;＃1890&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c693ab41296c3860cbfeee8a1756daba46604250" translate="yes" xml:space="preserve">
          <source>Fixed issue where Cypress would inject a script tag before the &lt;code&gt;&amp;lt;!DOCTYPE&amp;gt;&lt;/code&gt; declaration when the document only contained the doctype declaration. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2617&quot;&gt;#2617&lt;/a&gt;.</source>
          <target state="translated">修复了当文档仅包含doctype声明时，赛普拉斯会在 &lt;code&gt;&amp;lt;!DOCTYPE&amp;gt;&lt;/code&gt; 声明之前注入脚本标签的问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2617&quot;&gt;＃2617&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3b27680405327ff681dcf5185a3a98aa323ece7e" translate="yes" xml:space="preserve">
          <source>Fixed issue where Cypress would unnecessarily scroll when attempting to locate elements with &lt;code&gt;position: sticky&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1475&quot;&gt;#1475&lt;/a&gt;.</source>
          <target state="translated">修复了Cypress尝试定位以下 &lt;code&gt;position: sticky&lt;/code&gt; 元素时不必要滚动的问题：sticky。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1475&quot;&gt;＃1475&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c2b7eb108e49697e592b89d9e9807fdf2cb5d8f9" translate="yes" xml:space="preserve">
          <source>Fixed issue where XHR&amp;rsquo;s &lt;code&gt;onreadystatechange&lt;/code&gt; was not receiving the proper event arguments. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2925&quot;&gt;#2925&lt;/a&gt;.</source>
          <target state="translated">解决了XHR的 &lt;code&gt;onreadystatechange&lt;/code&gt; 没有收到适当的事件参数的问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2925&quot;&gt;＃2925&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c75325a7a749e1fc18b62df4e805e6f8f88e6325" translate="yes" xml:space="preserve">
          <source>Fixed issue where a fix included in &lt;a href=&quot;changelog#3.1.2&quot;&gt;3.1.2&lt;/a&gt; did not pass the &lt;code&gt;windowsHide&lt;/code&gt; argument to the proper options. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2667&quot;&gt;#2667&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2809&quot;&gt;#2809&lt;/a&gt;.</source>
          <target state="translated">修复了&lt;a href=&quot;changelog#3.1.2&quot;&gt;3.1.2中&lt;/a&gt;包含的修复未将 &lt;code&gt;windowsHide&lt;/code&gt; 参数传递给适当选项的问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2667&quot;&gt;＃2667&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2809&quot;&gt;＃2809&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b14a57a15e2e6d2187b8c1897a452a081b129491" translate="yes" xml:space="preserve">
          <source>Fixed issue where all arguments passed to &lt;code&gt;setTimeout&lt;/code&gt; or &lt;code&gt;setInterval&lt;/code&gt; were not properly passed on to the target function. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3592&quot;&gt;#3592&lt;/a&gt;.</source>
          <target state="translated">修复了以下问题：传递给 &lt;code&gt;setTimeout&lt;/code&gt; 或 &lt;code&gt;setInterval&lt;/code&gt; 的所有参数均未正确传递给目标函数。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3592&quot;&gt;＃3592&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ea4ef4f116dcb42f5a217dc3ebfbfc859b67eb15" translate="yes" xml:space="preserve">
          <source>Fixed issue where an internal &lt;code&gt;layout.html&lt;/code&gt; file would inadvertently get loaded instead of the spec file. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2891&quot;&gt;#2891&lt;/a&gt;.</source>
          <target state="translated">修复了不经意加载内部 &lt;code&gt;layout.html&lt;/code&gt; 文件而不是spec文件的问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2891&quot;&gt;＃2891&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="61e2e78d63092fd0aaa0b59a93c82f55d29ec065" translate="yes" xml:space="preserve">
          <source>Fixed issue where applications programmatically stealing focus would lead to slow runs in Electron when running via &lt;code&gt;cypress run&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1909&quot;&gt;#1909&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1892&quot;&gt;#1892&lt;/a&gt;.</source>
          <target state="translated">修复了以下问题：当通过 &lt;code&gt;cypress run&lt;/code&gt; 运行时，应用程序以编程方式失去焦点会导致Electron的运行缓慢。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1909&quot;&gt;＃1909&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1892&quot;&gt;＃1892&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="78e6597c87a7313be05729a497c7bfd4b42fb202" translate="yes" xml:space="preserve">
          <source>Fixed issue where change events with &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; would not fire correctly for many more situations and edge cases. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/651&quot;&gt;#651&lt;/a&gt;.</source>
          <target state="translated">修复了在更多情况和边缘情况下，&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; 的&lt;/a&gt;更改事件无法正确触发的问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/651&quot;&gt;＃651&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6082a19eab3879c28c8957cc98d4a27f61e03996" translate="yes" xml:space="preserve">
          <source>Fixed issue where changing any spec file (renaming, adding, deleting) would remove the highlighted styling of the currently active spec file in the Test Runner. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/547&quot;&gt;#547&lt;/a&gt;.</source>
          <target state="translated">修复了更改任何规格文件（重命名，添加，删除）会删除Test Runner中当前活动的规格文件的突出显示样式的问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/547&quot;&gt;＃547&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="23469c7b5f76bbf207e4c3d7030fc6fc6c2a0936" translate="yes" xml:space="preserve">
          <source>Fixed issue where clipped elements with &lt;code&gt;overflow-y: hidden&lt;/code&gt; were falsely passing as &amp;ldquo;visible&amp;rdquo;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/563&quot;&gt;#563&lt;/a&gt;.</source>
          <target state="translated">修复了以下问题 &lt;code&gt;overflow-y: hidden&lt;/code&gt; 带有溢出y：隐藏的裁剪元素被错误地传递为&amp;ldquo;可见&amp;rdquo;。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/563&quot;&gt;＃563&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6343d4371cb8f9c21357792d33c5d7f89a53124d" translate="yes" xml:space="preserve">
          <source>Fixed issue where commands would retry and potentially exceed their timeout values during page transitions. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/594&quot;&gt;#594&lt;/a&gt;</source>
          <target state="translated">解决了在页面转换期间命令将重试并可能超过其超时值的问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/594&quot;&gt;＃594&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="769e7ca2ba949f14f3ce789237c3e7e10b742074" translate="yes" xml:space="preserve">
          <source>Fixed issue where preprocessor errors were being swallowed. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1877&quot;&gt;#1877&lt;/a&gt;.</source>
          <target state="translated">解决了吞没预处理器错误的问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1877&quot;&gt;＃1877&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3119210afd00c5c5dc51ca602238f3d34a0039e0" translate="yes" xml:space="preserve">
          <source>Fixed issue where server error&amp;rsquo;s stack traces were being truncated in the Desktop app rendering them impossible to debug. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/133&quot;&gt;#133&lt;/a&gt;.</source>
          <target state="translated">修复了在桌面应用程序中服务器错误的堆栈跟踪被截断，使其无法调试的问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/133&quot;&gt;＃133&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e9e189fc50c663b6981fb1654c5697d44b263104" translate="yes" xml:space="preserve">
          <source>Fixed issue where server routes were lost after page load if not initiated by a &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; command. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/177&quot;&gt;#177&lt;/a&gt;</source>
          <target state="translated">修复了以下问题：如果未通过&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;命令启动，则在页面加载后服务器路由会丢失。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/177&quot;&gt;＃177&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e69dc3681b067698e46ab13ea4db8ed44cdf0460" translate="yes" xml:space="preserve">
          <source>Fixed issue where setting &lt;code&gt;fixturesFolder&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; would throw an error. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/450&quot;&gt;#450&lt;/a&gt;.</source>
          <target state="translated">解决了将 &lt;code&gt;fixturesFolder&lt;/code&gt; 设置为 &lt;code&gt;false&lt;/code&gt; 会引发错误的问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/450&quot;&gt;＃450&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="50f490aa3955787ecd6045dae96e18a4ca0fd962" translate="yes" xml:space="preserve">
          <source>Fixed issue where some TTY characters were not properly formatted in the terminal for Windows during &lt;code&gt;cypress run&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1143&quot;&gt;#1143&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1550&quot;&gt;#1550&lt;/a&gt;.</source>
          <target state="translated">修复了在 &lt;code&gt;cypress run&lt;/code&gt; 期间Windows终端中某些TTY字符格式不正确的问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1143&quot;&gt;＃1143&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1550&quot;&gt;＃1550&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8fe62793640f8f0e386492283f323b52ec484dc1" translate="yes" xml:space="preserve">
          <source>Fixed issue where support for &lt;code&gt;have.focus&lt;/code&gt;, &lt;code&gt;not.have.focus&lt;/code&gt;, &lt;code&gt;be.focused&lt;/code&gt; and &lt;code&gt;not.be.focused&lt;/code&gt;&lt;a href=&quot;assertions&quot;&gt;assertions&lt;/a&gt; were not working. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4265&quot;&gt;#4265&lt;/a&gt;.</source>
          <target state="translated">固定问题，即支持 &lt;code&gt;have.focus&lt;/code&gt; ， &lt;code&gt;not.have.focus&lt;/code&gt; ， &lt;code&gt;be.focused&lt;/code&gt; 和 &lt;code&gt;not.be.focused&lt;/code&gt; &lt;a href=&quot;assertions&quot;&gt;断言&lt;/a&gt;不工作。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4265&quot;&gt;＃4265&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a7106ffbbd512163862ccb5d6274bfec4bb8c5d1" translate="yes" xml:space="preserve">
          <source>Fixed issue where the &lt;code&gt;onLoad&lt;/code&gt; event was never being called when calling &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; on the url Cypress is currently navigated to. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1311&quot;&gt;#1311&lt;/a&gt;.</source>
          <target state="translated">解决了当前导航到赛普拉斯URL上的&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;时从未调用过 &lt;code&gt;onLoad&lt;/code&gt; 事件的问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1311&quot;&gt;＃1311&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7ab8e2b0380bae519febf7ace85d368f6eb6e2b7" translate="yes" xml:space="preserve">
          <source>Fixed issue where the Chromium browser was not detected in Linux due to Cypress not distinguishing between Chrome and Chromium browsers with the same version. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1400&quot;&gt;#1400&lt;/a&gt;.</source>
          <target state="translated">修复了由于赛普拉斯无法区分具有相同版本的Chrome浏览器和Chromium浏览器而在Linux中未检测到Chromium浏览器的问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1400&quot;&gt;＃1400&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b230f3bd283ba447a34dcf6083f2a7c9400b8949" translate="yes" xml:space="preserve">
          <source>Fixed issue where the Cypress &lt;code&gt;window&lt;/code&gt; was being returned instead of AUT&amp;rsquo;s &lt;code&gt;window&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1436&quot;&gt;#1436&lt;/a&gt;.</source>
          <target state="translated">解决了返回Cypress &lt;code&gt;window&lt;/code&gt; 而不是AUT &lt;code&gt;window&lt;/code&gt; 。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1436&quot;&gt;＃1436&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="686a2f479eec0633cf642042cb9fe61613147511" translate="yes" xml:space="preserve">
          <source>Fixed issue where the contents of &lt;code&gt;state.json&lt;/code&gt; were emptied, which would cause a crash and loss of state information. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/473&quot;&gt;#473&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/474&quot;&gt;#474&lt;/a&gt;.</source>
          <target state="translated">修复了清空 &lt;code&gt;state.json&lt;/code&gt; 内容的问题，这将导致崩溃和状态信息丢失。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/473&quot;&gt;＃473&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/474&quot;&gt;＃474&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c8025d1cc05af8c1db3cebb543fa817cdbc88f08" translate="yes" xml:space="preserve">
          <source>Fixed issue where using &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; on an input with a &lt;code&gt;type&lt;/code&gt; defined in uppercase (&lt;code&gt;input type=&quot;TEXT&quot;&lt;/code&gt;) would throw an error and not type. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/550&quot;&gt;#550&lt;/a&gt;.</source>
          <target state="translated">其中使用固定的问题&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;上具有输入 &lt;code&gt;type&lt;/code&gt; 以大写定义（ &lt;code&gt;input type=&quot;TEXT&quot;&lt;/code&gt; ）将抛出一个错误，而不是打字。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/550&quot;&gt;＃550&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0e4d146daf8133a0b16ea12603fb29188c6f270c" translate="yes" xml:space="preserve">
          <source>Fixed issue where videos would not be recorded when an object was returned from &lt;code&gt;before:browser:launch&lt;/code&gt; when in the Electron browser. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1992&quot;&gt;#1992&lt;/a&gt;.</source>
          <target state="translated">修复了在Electron浏览器中从 &lt;code&gt;before:browser:launch&lt;/code&gt; 返回对象时无法录制视频的问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1992&quot;&gt;＃1992&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ff7cd280bca9001a56c43a9624644de7feee27b4" translate="yes" xml:space="preserve">
          <source>Fixed issue with &lt;a href=&quot;../../api/commands/clear&quot;&gt;&lt;code&gt;.clear()&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;type=&quot;number&quot;&lt;/code&gt; inputs. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/490&quot;&gt;#490&lt;/a&gt;.</source>
          <target state="translated">修复了&lt;a href=&quot;../../api/commands/clear&quot;&gt; &lt;code&gt;.clear()&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;type=&quot;number&quot;&lt;/code&gt; 输入的问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/490&quot;&gt;＃490&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1f47175651ab56ab638ece075424b7507180fbf1" translate="yes" xml:space="preserve">
          <source>Fixed issue with loading fixture files containing more than one &lt;code&gt;.&lt;/code&gt; in their filename while not specifying the file extension. We are also displaying a clearer warning when a fixture file cannot be found. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1402&quot;&gt;#1402&lt;/a&gt;.</source>
          <target state="translated">解决了加载包含多个文件的夹具文件的问题 &lt;code&gt;.&lt;/code&gt; 而不指定文件扩展名。当找不到灯具文件时，我们还将显示更清晰的警告。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1402&quot;&gt;＃1402&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f1eafcab2c39c7bc18501c64d2171c4b3eb48ac0" translate="yes" xml:space="preserve">
          <source>Fixed issue with multiple &lt;code&gt;readyStateChanges&lt;/code&gt; with the same &lt;code&gt;readyState&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1150&quot;&gt;#1150&lt;/a&gt;.</source>
          <target state="translated">修正了与多个 &lt;code&gt;readyStateChanges&lt;/code&gt; 具有相同 &lt;code&gt;readyState&lt;/code&gt; 。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1150&quot;&gt;＃1150&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="41c25c79688ff0690197673cdc2c4e9efaa4e51b" translate="yes" xml:space="preserve">
          <source>Fixed issues involving XHRs displaying as &amp;lsquo;aborted&amp;rsquo; in the Cypress Command Log when they were not actually aborted. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1652&quot;&gt;#1652&lt;/a&gt;.</source>
          <target state="translated">解决了涉及XHR的问题，但实际上并未中止时，它们在Cypress命令日志中显示为&amp;ldquo;已中止&amp;rdquo;。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1652&quot;&gt;＃1652&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f6119c94c4f2fd34d62c927a8b7e0d1b0b73dcec" translate="yes" xml:space="preserve">
          <source>Fixed issues where &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; was not appending text properly. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/503&quot;&gt;#503&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/568&quot;&gt;#568&lt;/a&gt;.</source>
          <target state="translated">修复了&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;无法正确附加文本的问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/503&quot;&gt;＃503&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/568&quot;&gt;＃568&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b0e69a0ad1bef2e68406fab5ff999c0a0b85e190" translate="yes" xml:space="preserve">
          <source>Fixed issues with &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; not firing the &lt;code&gt;change&lt;/code&gt; event on &lt;code&gt;input[type=number]&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1171&quot;&gt;#1171&lt;/a&gt;.</source>
          <target state="translated">修复了&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;无法在 &lt;code&gt;input[type=number]&lt;/code&gt; 上触发 &lt;code&gt;change&lt;/code&gt; 事件的问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1171&quot;&gt;＃1171&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ec5062ddce1588be8e74acc91c85aa3ca70c8eb5" translate="yes" xml:space="preserve">
          <source>Fixed issues with typing into JS based text-mask plugins. Basically anything that would alter the &lt;code&gt;.value&lt;/code&gt; in response to certain events now works correctly. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/940&quot;&gt;#940&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1684&quot;&gt;#1684&lt;/a&gt;.</source>
          <target state="translated">修复了键入基于JS的文本掩码插件的问题。基本上，任何响应某些事件而更改 &lt;code&gt;.value&lt;/code&gt; 的东西现在都可以正常工作。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/940&quot;&gt;＃940&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1684&quot;&gt;＃1684&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5328ad377c6cc0c950ce0f104153a1169a508e90" translate="yes" xml:space="preserve">
          <source>Fixed many issues with typing into &lt;code&gt;[contenteditable]&lt;/code&gt; elements. WYSIWYG, &lt;a href=&quot;https://draftjs.org/&quot;&gt;Draft.js&lt;/a&gt; based, and other HTML editors now work correctly. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/596&quot;&gt;#596&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1686&quot;&gt;#1686&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2096&quot;&gt;#2096&lt;/a&gt;.</source>
          <target state="translated">修复了许多在 &lt;code&gt;[contenteditable]&lt;/code&gt; 元素中键入的问题。所见即所得，基于&lt;a href=&quot;https://draftjs.org/&quot;&gt;Draft.js&lt;/a&gt;和其他HTML编辑器现在可以正常工作。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/596&quot;&gt;＃596&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1686&quot;&gt;＃1686&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2096&quot;&gt;＃2096&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9c9cc16289962ed52b63c65cfc10f5d7a7112ffa" translate="yes" xml:space="preserve">
          <source>Fixed missing &lt;code&gt;aliasType&lt;/code&gt; from primitives and some DOM aliases, which prevent the background color from displaying in the UI.</source>
          <target state="translated">修复了基元和某些DOM别名中缺少的 &lt;code&gt;aliasType&lt;/code&gt; 的问题，这些别名阻止了背景颜色在UI中显示。</target>
        </trans-unit>
        <trans-unit id="c2d6f09dd07845b621667382b48aa0fbfa00c07a" translate="yes" xml:space="preserve">
          <source>Fixed missing dependency for CI.</source>
          <target state="translated">修正了CI缺少的依赖性。</target>
        </trans-unit>
        <trans-unit id="2338274d63db423cc9c9f3c87f5c93d5d86ba839" translate="yes" xml:space="preserve">
          <source>Fixed missing files from deployment. Added tests around this.</source>
          <target state="translated">修正了部署中丢失的文件。增加了相关测试。</target>
        </trans-unit>
        <trans-unit id="a7f782dd62aa8c332550fad64089662ab46e1e9d" translate="yes" xml:space="preserve">
          <source>Fixed more edge cases where legitimate JavaScript code was being modified unexpectedly by the &lt;a href=&quot;configuration#Browser&quot;&gt;&lt;code&gt;modifyObstructiveCode&lt;/code&gt;&lt;/a&gt; configuration. We&amp;rsquo;ve tightened up the RegExp even more and added 40 popular JS libraries to test against to ensure they are not modified. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1334&quot;&gt;#1334&lt;/a&gt;.</source>
          <target state="translated">修复了更多边缘情况，在这些情况下，&lt;a href=&quot;configuration#Browser&quot;&gt; &lt;code&gt;modifyObstructiveCode&lt;/code&gt; &lt;/a&gt;配置意外修改了合法的JavaScript代码。我们进一步加强了RegExp，并添加了40个流行的JS库进行测试，以确保它们没有被修改。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1334&quot;&gt;＃1334&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f0eb4a78d03cd66d4c95162944c3e65fc1ebb77c" translate="yes" xml:space="preserve">
          <source>Fixed not being able to type into a &lt;code&gt;datetime-local&lt;/code&gt; input. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1366&quot;&gt;#1366&lt;/a&gt;.</source>
          <target state="translated">修复了无法键入 &lt;code&gt;datetime-local&lt;/code&gt; 输入的问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1366&quot;&gt;＃1366&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0343e78d24123f511becf5cb6a50acd615d5f5b7" translate="yes" xml:space="preserve">
          <source>Fixed not being able to type negative numbers into &lt;code&gt;input[type=number]&lt;/code&gt; elements. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2173&quot;&gt;#2173&lt;/a&gt;.</source>
          <target state="translated">修复了无法在 &lt;code&gt;input[type=number]&lt;/code&gt; 元素中键入负数的问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2173&quot;&gt;＃2173&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ce2ea5061ccbe451eaebd1b3886b9bdcfe937e20" translate="yes" xml:space="preserve">
          <source>Fixed not being able to visit URLs that used &lt;code&gt;*localhost&lt;/code&gt; such as &lt;code&gt;http://app.localhost:8080&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/451&quot;&gt;#451&lt;/a&gt;.</source>
          <target state="translated">修复了无法访问使用 &lt;code&gt;*localhost&lt;/code&gt; 的 URL，例如 &lt;code&gt;http://app.localhost:8080&lt;/code&gt; 的问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/451&quot;&gt;＃451&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bb85a7a8a915f26baefc92cd213832444d9dfb78" translate="yes" xml:space="preserve">
          <source>Fixed not being able to visit private TLD&amp;rsquo;s from the public suffix such as &lt;code&gt;github.io&lt;/code&gt;, &lt;code&gt;gitlab.io&lt;/code&gt; or &lt;code&gt;herokuapp.com&lt;/code&gt;. These now all work correctly. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/380&quot;&gt;#380&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/402&quot;&gt;#402&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/802&quot;&gt;#802&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/493&quot;&gt;#493&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1161&quot;&gt;#1161&lt;/a&gt;.</source>
          <target state="translated">修复了无法从公共后缀（例如 &lt;code&gt;github.io&lt;/code&gt; ， &lt;code&gt;gitlab.io&lt;/code&gt; 或 &lt;code&gt;herokuapp.com&lt;/code&gt; )访问私有TLD的问题。现在这些都可以正常工作。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/380&quot;&gt;＃380&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/402&quot;&gt;＃402&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/802&quot;&gt;＃802&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/493&quot;&gt;＃493&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1161&quot;&gt;＃1161&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="91faace71bc27b25103af821c4ed14338a407e27" translate="yes" xml:space="preserve">
          <source>Fixed not being able to visit subdomains when using 2nd level sub domains. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1175&quot;&gt;#1175&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/600&quot;&gt;#600&lt;/a&gt;.</source>
          <target state="translated">修复了使用二级子域时无法访问子域的问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1175&quot;&gt;＃1175&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/600&quot;&gt;＃600&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2fd5dc2da998e702c253abf33612dbfdee626943" translate="yes" xml:space="preserve">
          <source>Fixed not correctly passing the &lt;code&gt;timeout&lt;/code&gt; option for &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt;. This should fix some instances where large &lt;code&gt;timeout&lt;/code&gt; values would cause &lt;code&gt;ESOCKETTIMEDOUT&lt;/code&gt; errors. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2669&quot;&gt;#2669&lt;/a&gt;.</source>
          <target state="translated">修复了无法正确传递&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;timeout&lt;/code&gt; 选项的问题。这应该修复某些情况，其中较大的 &lt;code&gt;timeout&lt;/code&gt; 值会导致 &lt;code&gt;ESOCKETTIMEDOUT&lt;/code&gt; 错误。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2669&quot;&gt;＃2669&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c31591cd4d8d4ed564e72f3cb6296e78bb377c61" translate="yes" xml:space="preserve">
          <source>Fixed other event related issues with &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; that were not firing correctly. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1209&quot;&gt;#1209&lt;/a&gt;.</source>
          <target state="translated">修复了其他与&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;有关的事件，这些问题无法正确触发。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1209&quot;&gt;＃1209&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="edefe93bf8f9c5871698c12af8e0696b38b68cad" translate="yes" xml:space="preserve">
          <source>Fixed problem with rewriting content on elements which contained &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; elements.</source>
          <target state="translated">修复了在包含 &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; 元素的元素上重写内容的问题。</target>
        </trans-unit>
        <trans-unit id="43ad4f25a3eed077befe9519dd732c427d562b46" translate="yes" xml:space="preserve">
          <source>Fixed putting an &lt;code&gt;.only&lt;/code&gt; on a large list of tests that would sometimes not clear the previous runnables in the UI.</source>
          <target state="translated">修复了将 &lt;code&gt;.only&lt;/code&gt; 放在大量测试中，有时无法清除UI中以前的可运行对象的问题。</target>
        </trans-unit>
        <trans-unit id="a2caf8784be60677041b659dadea9400412e0693" translate="yes" xml:space="preserve">
          <source>Fixed regression caused by &lt;code&gt;0.16.2&lt;/code&gt; where a failed &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt; would not be canceled and would continue to run and display failed assertions in between test runs (without a full page refresh). Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/174&quot;&gt;#174&lt;/a&gt;.</source>
          <target state="translated">修复了由 &lt;code&gt;0.16.2&lt;/code&gt; 引起的回归，其中失败的&lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; &lt;/a&gt;不会被取消，并且将继续运行并在两次测试运行之间显示失败的断言（不刷新整个页面）。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/174&quot;&gt;＃174&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4c9fbfe8fdbc7075beebaee40771e5a6e1c149db" translate="yes" xml:space="preserve">
          <source>Fixed regression causing invocations of &lt;a href=&quot;../../api/commands/clock&quot;&gt;&lt;code&gt;cy.clock()&lt;/code&gt;&lt;/a&gt; to error on subsequent tests. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2850&quot;&gt;#2850&lt;/a&gt;.</source>
          <target state="translated">修复了回归导致在后续测试中对&lt;a href=&quot;../../api/commands/clock&quot;&gt; &lt;code&gt;cy.clock()&lt;/code&gt; 的&lt;/a&gt;调用出错的问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2850&quot;&gt;＃2850&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="60f49a5a118e5920f657fbfe9b3154bb1fd56657" translate="yes" xml:space="preserve">
          <source>Fixed regression in &lt;code&gt;0.18.6&lt;/code&gt; that caused Cypress to fail when switching spec files when &lt;code&gt;baseUrl&lt;/code&gt; was set in &lt;code&gt;cypress.json&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/403&quot;&gt;#403&lt;/a&gt;.</source>
          <target state="translated">在固定回归 &lt;code&gt;0.18.6&lt;/code&gt; 导致赛普拉斯失败切换规范文件时当 &lt;code&gt;baseUrl&lt;/code&gt; 在设置 &lt;code&gt;cypress.json&lt;/code&gt; 。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/403&quot;&gt;＃403&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9add25a461f073babcc6b30c1b6633afbac49710" translate="yes" xml:space="preserve">
          <source>Fixed regression introduced in &lt;a href=&quot;changelog#3-2-0&quot;&gt;3.2.0&lt;/a&gt; where Cypress would error because it could not find a type definition file for &amp;lsquo;../sinon&amp;rsquo;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4272&quot;&gt;#4272&lt;/a&gt;.</source>
          <target state="translated">修复了&lt;a href=&quot;changelog#3-2-0&quot;&gt;3.2.0&lt;/a&gt;中引入的回归问题，因为Cypress找不到'../sinon'的类型定义文件，因此它会出错。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4272&quot;&gt;＃4272&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ed748da281606e6ecf264dbc3e50b17da63ec753" translate="yes" xml:space="preserve">
          <source>Fixed regression introduced in &lt;a href=&quot;changelog#3.1.1&quot;&gt;3.1.1&lt;/a&gt; with &lt;code&gt;requestAnimationFrame&lt;/code&gt; that caused some animations not to run. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2725&quot;&gt;#2725&lt;/a&gt;.</source>
          <target state="translated">修复了&lt;a href=&quot;changelog#3.1.1&quot;&gt;3.1.1中&lt;/a&gt;使用 &lt;code&gt;requestAnimationFrame&lt;/code&gt; 引入的回归，该回归导致某些动画无法运行。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2725&quot;&gt;＃2725&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3a8bf2ec79bf5b856e9d14b2d045c37061e87b42" translate="yes" xml:space="preserve">
          <source>Fixed regression introduced in &lt;a href=&quot;changelog#3.1.2&quot;&gt;3.1.2&lt;/a&gt; that caused DOM elements passed to &lt;a href=&quot;../../api/commands/wrap&quot;&gt;&lt;code&gt;cy.wrap()&lt;/code&gt;&lt;/a&gt; to no longer yield the proper jQuery array instance. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2820&quot;&gt;#2820&lt;/a&gt;.</source>
          <target state="translated">修复了&lt;a href=&quot;changelog#3.1.2&quot;&gt;3.1.2&lt;/a&gt;中引入的回归，该回归导致DOM元素传递给&lt;a href=&quot;../../api/commands/wrap&quot;&gt; &lt;code&gt;cy.wrap()&lt;/code&gt; &lt;/a&gt;不再产生适当的jQuery数组实例。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2820&quot;&gt;＃2820&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ef081df82fe02c1d21fbf3be3167db4dedd0a141" translate="yes" xml:space="preserve">
          <source>Fixed regression introduced in &lt;code&gt;3.1.4&lt;/code&gt; that caused an &lt;code&gt;InvalidStateError&lt;/code&gt; when visiting a page with an XHR request with a &lt;code&gt;responseType&lt;/code&gt; other than &lt;code&gt;text&lt;/code&gt; or &lt;code&gt;''&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3008&quot;&gt;#3008&lt;/a&gt;.</source>
          <target state="translated">修复了 &lt;code&gt;3.1.4&lt;/code&gt; 中引入的回归，该回归在访问带有XHR请求且其 &lt;code&gt;responseType&lt;/code&gt; 不是 &lt;code&gt;text&lt;/code&gt; 或 &lt;code&gt;''&lt;/code&gt; 的页面时导致 &lt;code&gt;InvalidStateError&lt;/code&gt; 。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3008&quot;&gt;＃3008&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9fbf7ab71d1ad8d196ebbf6d38453f6febbccb19" translate="yes" xml:space="preserve">
          <source>Fixed regression related to &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; not re-visiting when current match matches remote url.</source>
          <target state="translated">修复了与&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;相关的回归，该回归在当前匹配项与远程URL匹配时不重新访问。</target>
        </trans-unit>
        <trans-unit id="20bad64bdf088500e5c0af6e99c92b091e7e853d" translate="yes" xml:space="preserve">
          <source>Fixed regression where multiple uses of &lt;a href=&quot;../../api/commands/server&quot;&gt;&lt;code&gt;cy.server()&lt;/code&gt;&lt;/a&gt; in a &lt;code&gt;before&lt;/code&gt; hook was throwing an error. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/80&quot;&gt;#80&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/510&quot;&gt;#510&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/595&quot;&gt;#595&lt;/a&gt;.</source>
          <target state="translated">固定回归其中的多种用途&lt;a href=&quot;../../api/commands/server&quot;&gt; &lt;code&gt;cy.server()&lt;/code&gt; &lt;/a&gt;在一个 &lt;code&gt;before&lt;/code&gt; 钩被扔一个错误。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/80&quot;&gt;＃80&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/510&quot;&gt;＃510&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/595&quot;&gt;＃595&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1ddb4c351234ffa2349168a921fdc72bc078ef5e" translate="yes" xml:space="preserve">
          <source>Fixed server crash on improperly handled proxy error.</source>
          <target state="translated">修正了因不当处理代理错误而导致的服务器崩溃。</target>
        </trans-unit>
        <trans-unit id="ecac16a391c930105a5e711ddaf722b02291363a" translate="yes" xml:space="preserve">
          <source>Fixed several issues in Chrome* versions &amp;gt;= 72 in the Cypress proxy that caused using &lt;code&gt;cy.visit()&lt;/code&gt; with &lt;code&gt;localhost&lt;/code&gt; to fail, or using &lt;code&gt;localhost&lt;/code&gt; inside of the &lt;code&gt;baseUrl&lt;/code&gt; configuration option. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1872&quot;&gt;#1872&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3252&quot;&gt;#3252&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1777&quot;&gt;#1777&lt;/a&gt;.</source>
          <target state="translated">修复了Cypress代理中Chrome *版本&amp;gt; = 72的多个问题，这些问题导致将 &lt;code&gt;cy.visit()&lt;/code&gt; 与 &lt;code&gt;localhost&lt;/code&gt; 一起使用失败，或在 &lt;code&gt;baseUrl&lt;/code&gt; 配置选项内部使用 &lt;code&gt;localhost&lt;/code&gt; 导致的问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1872&quot;&gt;＃1872&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3252&quot;&gt;＃3252&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1777&quot;&gt;＃1777&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5f42bd80d6e2ce3f8d06f2af19a9e6ae58e4c500" translate="yes" xml:space="preserve">
          <source>Fixed situation where &lt;a href=&quot;../../api/commands/viewport&quot;&gt;&lt;code&gt;cy.viewport()&lt;/code&gt;&lt;/a&gt; would not restore correctly between tests. Previously this would cause subsequent tests to be issued at the modified &lt;code&gt;cy.viewport()&lt;/code&gt;. Now viewport is automatically restored to the settings in your &lt;code&gt;cypress.json&lt;/code&gt; file.</source>
          <target state="translated">修复了&lt;a href=&quot;../../api/commands/viewport&quot;&gt; &lt;code&gt;cy.viewport()&lt;/code&gt; &lt;/a&gt;在两次测试之间无法正确还原的情况。以前，这将导致在修改后的 &lt;code&gt;cy.viewport()&lt;/code&gt; 处发布后续测试。现在，视口会自动恢复为 &lt;code&gt;cypress.json&lt;/code&gt; 文件中的设置。</target>
        </trans-unit>
        <trans-unit id="b02f4bc11e465b4861e78fa180aac2c8fae16746" translate="yes" xml:space="preserve">
          <source>Fixed situation where Cypress was not injected correctly when &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; tag had attributes</source>
          <target state="translated">修复了当 &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 标签具有属性时Cypress无法正确注入的情况</target>
        </trans-unit>
        <trans-unit id="82fcae25d4eeaf0c24c4f8bd7ea1fdb7b64e82c8" translate="yes" xml:space="preserve">
          <source>Fixed situation where an &lt;code&gt;Uncaught Error&lt;/code&gt; was not being properly handled. Cypress would incorrectly continue to retry commands instead of canceling them, which lead to incorrect errors downstream in other tests.</source>
          <target state="translated">修复了 &lt;code&gt;Uncaught Error&lt;/code&gt; 正确处理未捕获错误的情况。赛普拉斯会错误地继续重试命令而不是取消命令，这会导致在其他测试中出现不正确的错误。</target>
        </trans-unit>
        <trans-unit id="1a805b2b9cd9f12618c568d08f8bfa058423cebd" translate="yes" xml:space="preserve">
          <source>Fixed situation where an error being thrown from an XHR was being improperly handled (in a slightly different way than the problem above).</source>
          <target state="translated">修正了从XHR抛出的错误被不当处理的情况(与上述问题略有不同)。</target>
        </trans-unit>
        <trans-unit id="25f011fff74cccfe58470de3408473111e220183" translate="yes" xml:space="preserve">
          <source>Fixed situations where 3rd party libraries (such as &lt;a href=&quot;https://newrelic.com/&quot;&gt;New Relic&lt;/a&gt; were instrumenting XHR&amp;rsquo;s identical to Cypress&amp;rsquo; implementation. This caused an infinite loop which would crash the browser. We&amp;rsquo;ve updated how we instrument XHR&amp;rsquo;s to take this into account and deployed multiple fallbacks and strategies to prevent this kind of thing from happening in the future. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/166&quot;&gt;#166&lt;/a&gt;.</source>
          <target state="translated">修复了第三方库（例如&lt;a href=&quot;https://newrelic.com/&quot;&gt;New Relic）&lt;/a&gt;在检测XHR与赛普拉斯实施过程相同的情况。这导致了无限循环，这将使浏览器崩溃。我们更新了检测XHR的方式，以考虑到这一点，并部署了多个后备和策略修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/166&quot;&gt;＃166，&lt;/a&gt;以防止以后发生这种情况。</target>
        </trans-unit>
        <trans-unit id="a90330d9d199513c3c1f697121f82d67ac9dcfbb" translate="yes" xml:space="preserve">
          <source>Fixed some areas of the Desktop GUI that did not display path names correctly in Windows. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1830&quot;&gt;#1830&lt;/a&gt;.</source>
          <target state="translated">修复了桌面GUI的某些区域，这些区域在Windows中无法正确显示路径名。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1830&quot;&gt;＃1830&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7635003eb479c61bfa93d0fc555e7854d8689974" translate="yes" xml:space="preserve">
          <source>Fixed some edge cases in &lt;code&gt;cypress-core-extension&lt;/code&gt; where it threw errors when attempting to &lt;code&gt;executeScript&lt;/code&gt; on a tab with &lt;code&gt;about:blank&lt;/code&gt; or &lt;code&gt;chrome://&lt;/code&gt; urls.</source>
          <target state="translated">修复了 &lt;code&gt;cypress-core-extension&lt;/code&gt; 中的一些极端情况，这些情况在尝试在带有 &lt;code&gt;about:blank&lt;/code&gt; 或 &lt;code&gt;chrome://&lt;/code&gt; urls 的选项卡上执行 &lt;code&gt;executeScript&lt;/code&gt; 时引发错误。</target>
        </trans-unit>
        <trans-unit id="9bd64d1ad2c64718c1c35c5a6bc71306ca4b20b9" translate="yes" xml:space="preserve">
          <source>Fixed some incorrect typings with TypeScript. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1219&quot;&gt;#1219&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1186&quot;&gt;#1186&lt;/a&gt;.</source>
          <target state="translated">修复了使用TypeScript进行的一些错误键入。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1219&quot;&gt;＃1219&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1186&quot;&gt;＃1186&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="55c6d5e91f27e4bc6b9cbc8398af21c15ac18f36" translate="yes" xml:space="preserve">
          <source>Fixed some problems serializing objects during domain change caused by circular references. In this case &lt;code&gt;zone.js&lt;/code&gt; was the culprit. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/741&quot;&gt;#741&lt;/a&gt;. Contributed by &lt;a href=&quot;https://github.com/MariMax&quot;&gt;@MariMax&lt;/a&gt;.</source>
          <target state="translated">修复了由循环引用引起的域更改期间序列化对象的一些问题。在这种情况下， &lt;code&gt;zone.js&lt;/code&gt; 是元凶。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/741&quot;&gt;＃741&lt;/a&gt;。由&lt;a href=&quot;https://github.com/MariMax&quot;&gt;@MariMax&lt;/a&gt;贡献。</target>
        </trans-unit>
        <trans-unit id="ddf78fe9549f499bc7176b4a4219579e669fe7ba" translate="yes" xml:space="preserve">
          <source>Fixed some scenarios where assertions would not be logged as a child command.</source>
          <target state="translated">修正了一些断言不会被记录为子命令的情况。</target>
        </trans-unit>
        <trans-unit id="b9298b1875f43960fb08c18b6e1ce951e11833fc" translate="yes" xml:space="preserve">
          <source>Fixed switching between two different spec files from the desktop app causing &lt;code&gt;document.domain&lt;/code&gt; to be wrong. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/276&quot;&gt;#276&lt;/a&gt;.</source>
          <target state="translated">修复了桌面应用程序在两个不同规格文件之间的切换，导致 &lt;code&gt;document.domain&lt;/code&gt; 错误。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/276&quot;&gt;＃276&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f3bbfab42be47f224b21071ed8d933508ef837ed" translate="yes" xml:space="preserve">
          <source>Fixed the incorrectly spelled chainer &lt;code&gt;descendents&lt;/code&gt;. It is now correctly spelled as &lt;code&gt;descendants&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/642&quot;&gt;#642&lt;/a&gt;.</source>
          <target state="translated">修复了拼写错误的chainer &lt;code&gt;descendents&lt;/code&gt; 。现在已正确将其拼写为 &lt;code&gt;descendants&lt;/code&gt; 。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/642&quot;&gt;＃642&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4396b312ac9ada54640275a453c976e5b4b65689" translate="yes" xml:space="preserve">
          <source>Fixed the vast majority of known issues with &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1241&quot;&gt;#1241&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;修复了绝大多数已知问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1241&quot;&gt;＃1241&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cd89959daffe5325a72d86a78445ddd2f3665adf" translate="yes" xml:space="preserve">
          <source>Fixed type definition for &lt;code&gt;match&lt;/code&gt; assertion so that it now only accepts &lt;code&gt;RegExp&lt;/code&gt; type arguments. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2578&quot;&gt;#2578&lt;/a&gt;.</source>
          <target state="translated">修复了 &lt;code&gt;match&lt;/code&gt; 声明的类型定义，使其现在仅接受 &lt;code&gt;RegExp&lt;/code&gt; 类型参数。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2578&quot;&gt;＃2578&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="31a2d12cdee595f72dbb70479095a595262b2ef8" translate="yes" xml:space="preserve">
          <source>Fixed typo in &lt;code&gt;cypress.schema.json&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1167&quot;&gt;#1167&lt;/a&gt;.</source>
          <target state="translated">修复了 &lt;code&gt;cypress.schema.json&lt;/code&gt; 中的错字。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1167&quot;&gt;＃1167&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f13e96255f478cbf579d384640d76990bf989276" translate="yes" xml:space="preserve">
          <source>Fixed typo in CLI deps error about Docker. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1136&quot;&gt;#1136&lt;/a&gt;.</source>
          <target state="translated">修复了CLI deps中有关Docker的拼写错误。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1136&quot;&gt;＃1136&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="123a406e131050d5c46783cac9db4faa4b1adf80" translate="yes" xml:space="preserve">
          <source>Fixed typo in typing for &lt;a href=&quot;../../api/commands/trigger&quot;&gt;&lt;code&gt;.trigger&lt;/code&gt;&lt;/a&gt; options. Addressed in &lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3588&quot;&gt;#3588&lt;/a&gt;.</source>
          <target state="translated">修复了键入&lt;a href=&quot;../../api/commands/trigger&quot;&gt; &lt;code&gt;.trigger&lt;/code&gt; &lt;/a&gt;选项时的错字。地址在&lt;a href=&quot;https://github.com/cypress-io/cypress/pull/3588&quot;&gt;＃3588中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4c6862d12df0492a8d47eb9f800cc435dca34ba5" translate="yes" xml:space="preserve">
          <source>Fixed using when using &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;cy.click()&lt;/code&gt;&lt;/a&gt; on an element that bound to the &lt;code&gt;focus&lt;/code&gt; event while the browser was currently &lt;em&gt;out of focus&lt;/em&gt;. We have now normalized &lt;strong&gt;all focus and blur events&lt;/strong&gt; to behave the same as if the browser is always in focus. This should fix the other batch of &lt;code&gt;blur&lt;/code&gt; and &lt;code&gt;focus&lt;/code&gt; issues that users have been experiencing. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/549&quot;&gt;#549&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2198&quot;&gt;#2198&lt;/a&gt;.</source>
          <target state="translated">使用时使用固定&lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;cy.click()&lt;/code&gt; &lt;/a&gt;绑定在一个元件上 &lt;code&gt;focus&lt;/code&gt; 事件而浏览器是目前&lt;em&gt;失焦&lt;/em&gt;。现在，我们已经标准化了&lt;strong&gt;所有焦点和模糊事件，&lt;/strong&gt;使其行为与浏览器始终处于焦点状态相同。这应该可以解决用户遇到的另一类 &lt;code&gt;blur&lt;/code&gt; 和 &lt;code&gt;focus&lt;/code&gt; 问题。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/549&quot;&gt;＃549&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2198&quot;&gt;＃2198&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e266b628f293db1e722b0b04069227dc5bc1d508" translate="yes" xml:space="preserve">
          <source>Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/14&quot;&gt;#14&lt;/a&gt;.</source>
          <target state="translated">修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/14&quot;&gt;＃14&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c3e73107f01c45ba65469b717cdbdfd3673801c8" translate="yes" xml:space="preserve">
          <source>Fixes a race condition where async electron browser commands came in after the renderer had been destroyed, causing failures. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2321&quot;&gt;#2321&lt;/a&gt;.</source>
          <target state="translated">修复了一种竞态条件，在该竞态条件下，渲染器被破坏后会出现异步电子浏览器命令，从而导致失败。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2321&quot;&gt;＃2321&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b79957adcf9f3730b2dfc85a7ef0e7996d01b27b" translate="yes" xml:space="preserve">
          <source>Fixture</source>
          <target state="translated">Fixture</target>
        </trans-unit>
        <trans-unit id="31d84bd77e5cf1531a4306001f3e8c670196d59e" translate="yes" xml:space="preserve">
          <source>Fixture Files</source>
          <target state="translated">夹具文件</target>
        </trans-unit>
        <trans-unit id="93a9d4b62c49df4936d5f701755ab05d3a9187a5" translate="yes" xml:space="preserve">
          <source>Fixtures</source>
          <target state="translated">Fixtures</target>
        </trans-unit>
        <trans-unit id="8b2b39b6f6f2024db961fda1285280a85334d5cf" translate="yes" xml:space="preserve">
          <source>Fixtures are automatically formatted / indented for easy debugging.</source>
          <target state="translated">为了便于调试,夹具会自动格式化/缩进。</target>
        </trans-unit>
        <trans-unit id="966639036f094c23a89188baf7bf20ba4d6fd0e2" translate="yes" xml:space="preserve">
          <source>Fixtures are automatically validated, with error messages propagating up to the client.</source>
          <target state="translated">灯具会自动验证,错误信息会传播到客户端。</target>
        </trans-unit>
        <trans-unit id="1e0b0d59a94207af47ec8f5dccde6051018f845d" translate="yes" xml:space="preserve">
          <source>Fixtures are used as external pieces of static data that can be used by your tests. Fixture files are located in &lt;code&gt;cypress/fixtures&lt;/code&gt; by default, but can be &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;configured&lt;/a&gt; to another directory.</source>
          <target state="translated">夹具用作测试可使用的外部静态数据。夹具文件默认位于 &lt;code&gt;cypress/fixtures&lt;/code&gt; ，但可以&lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;配置&lt;/a&gt;到另一个目录。</target>
        </trans-unit>
        <trans-unit id="57daed953824ba45abfcd5c87989fcded301dd2a" translate="yes" xml:space="preserve">
          <source>Fixtures can also be referenced directly without using the &lt;code&gt;.fixture()&lt;/code&gt; command by using the special keywords: &lt;code&gt;fixture:&lt;/code&gt; or &lt;code&gt;fx:&lt;/code&gt; within &lt;a href=&quot;route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">夹具也可以直接引用不使用 &lt;code&gt;.fixture()&lt;/code&gt; 通过使用特殊的关键字命令： &lt;code&gt;fixture:&lt;/code&gt; 或 &lt;code&gt;fx:&lt;/code&gt; 内&lt;a href=&quot;route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="43bf9da5a2cde3892e6fd38e31b665731bc53300" translate="yes" xml:space="preserve">
          <source>Fixtures can also be referenced directly without using the &lt;code&gt;.fixture()&lt;/code&gt; command by using the special property &lt;code&gt;fixture&lt;/code&gt; on the &lt;a href=&quot;intercept&quot;&gt;&lt;code&gt;cy.intercept()&lt;/code&gt;&lt;/a&gt;&lt;code&gt;StaticResponse&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="076842db32152f6390a1de20bb1fbc6e90ec7ca2" translate="yes" xml:space="preserve">
          <source>Fixtures support &lt;code&gt;json&lt;/code&gt;, &lt;code&gt;js&lt;/code&gt;, and &lt;code&gt;coffee&lt;/code&gt; files with image support coming soon.</source>
          <target state="translated">灯具支持 &lt;code&gt;json&lt;/code&gt; ， &lt;code&gt;js&lt;/code&gt; 和 &lt;code&gt;coffee&lt;/code&gt; 文件，并且即将提供图像支持。</target>
        </trans-unit>
        <trans-unit id="5d728758adcdd5154d3be55552c1c061ef1489b2" translate="yes" xml:space="preserve">
          <source>Flags</source>
          <target state="translated">Flags</target>
        </trans-unit>
        <trans-unit id="6ee2ec8b01f6a2d6ac9d639232c343a8f90182ba" translate="yes" xml:space="preserve">
          <source>Flake</source>
          <target state="translated">Flake</target>
        </trans-unit>
        <trans-unit id="d91efa73e5b91a88b6662bb37f8407309f3b7059" translate="yes" xml:space="preserve">
          <source>Flake resistant</source>
          <target state="translated">防碎屑</target>
        </trans-unit>
        <trans-unit id="fe7f55b8bf68fd47d248a271d541e7e183621010" translate="yes" xml:space="preserve">
          <source>Focus</source>
          <target state="translated">Focus</target>
        </trans-unit>
        <trans-unit id="504969e1329eefbbfdeeb59a6ddae1deec1b4aca" translate="yes" xml:space="preserve">
          <source>Focus is given to the first focusable element</source>
          <target state="translated">重点是给第一个可聚焦的元素</target>
        </trans-unit>
        <trans-unit id="2e297c61dbffb1cb797e7780c079b71f4d5b829d" translate="yes" xml:space="preserve">
          <source>Focus is not an action command</source>
          <target state="translated">聚焦不是一个动作指令</target>
        </trans-unit>
        <trans-unit id="05fe5fdddd29a27eba93a4eff2e3520554c5881d" translate="yes" xml:space="preserve">
          <source>Focus on a DOM element.</source>
          <target state="translated">关注一个DOM元素。</target>
        </trans-unit>
        <trans-unit id="210b73a2419ab094c9f12e186fddae826317c4cb" translate="yes" xml:space="preserve">
          <source>Focus on an input</source>
          <target state="translated">专注于某项投入</target>
        </trans-unit>
        <trans-unit id="81d320705a2ddd9e662402bee5f10442bd02b78b" translate="yes" xml:space="preserve">
          <source>Focus, type, and blur a textarea</source>
          <target state="translated">对文字区域进行聚焦、输入和模糊。</target>
        </trans-unit>
        <trans-unit id="b590cd6b1e83fa70fd0a3de3bc09fc6af804a5cb" translate="yes" xml:space="preserve">
          <source>Focusable</source>
          <target state="translated">Focusable</target>
        </trans-unit>
        <trans-unit id="19137a2bc8511e2902e61e074e829a5d7f79b9b2" translate="yes" xml:space="preserve">
          <source>Folder Structure</source>
          <target state="translated">文件夹结构</target>
        </trans-unit>
        <trans-unit id="19adc47be34bed86af37b8e8dc882af424402561" translate="yes" xml:space="preserve">
          <source>Folders</source>
          <target state="translated">Folders</target>
        </trans-unit>
        <trans-unit id="3778aa33bb0864f2f8fcc7c110b3e0e3cc013dfc" translate="yes" xml:space="preserve">
          <source>Folders / Files</source>
          <target state="translated">传单/文件</target>
        </trans-unit>
        <trans-unit id="61370060bdb7d5e684f62aaa98a8a18eee47ce57" translate="yes" xml:space="preserve">
          <source>Follow the following process to request an OSS plan for your project:</source>
          <target state="translated">按照以下流程为您的项目申请开放源码软件计划。</target>
        </trans-unit>
        <trans-unit id="98df868c5fb316adc798790cfa5815b00c32e758" translate="yes" xml:space="preserve">
          <source>For &amp;lsquo;selecting&amp;rsquo; an option, just type it into the input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e977c306cc77cda1ecdfaf0ddef7d8d79c99ed98" translate="yes" xml:space="preserve">
          <source>For JSON, the contents yielded are parsed into JavaScript and returned.</source>
          <target state="translated">对于JSON,产生的内容被解析成JavaScript并返回。</target>
        </trans-unit>
        <trans-unit id="d3681f0b1f80d660f99494942d5d9f15e68f3c5c" translate="yes" xml:space="preserve">
          <source>For a comprehensive list of all configuration values look here.</source>
          <target state="translated">所有配置值的完整列表请看这里。</target>
        </trans-unit>
        <trans-unit id="6fde55b197d8bc9171398408dd11058266e6428a" translate="yes" xml:space="preserve">
          <source>For a detailed explanation of aliasing, &lt;a href=&quot;../../guides/core-concepts/variables-and-aliases#Aliases&quot;&gt;read more about aliasing here&lt;/a&gt;.</source>
          <target state="translated">有关别名的详细说明，&lt;a href=&quot;../../guides/core-concepts/variables-and-aliases#Aliases&quot;&gt;请在此处阅读有关别名的更多信息&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6b747e493d60035aa88d9e5488eaf0d99b0cf5fc" translate="yes" xml:space="preserve">
          <source>For a detailed explanation of aliasing, &lt;a href=&quot;../../guides/guides/network-requests#Waiting&quot;&gt;read more about waiting on routes here&lt;/a&gt;.</source>
          <target state="translated">有关别名的详细说明，&lt;a href=&quot;../../guides/guides/network-requests#Waiting&quot;&gt;请在此处阅读有关等待路线的更多信息&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="46aa6a9db14417356ce7d56cdff550006b66a46f" translate="yes" xml:space="preserve">
          <source>For a detailed explanation of aliasing, &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/variables-and-aliases.html#Aliases&quot;&gt;read more about aliasing here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ec6efa9208593a34a7a58d14a56e9617bb92fea" translate="yes" xml:space="preserve">
          <source>For a detailed explanation of aliasing, &lt;a href=&quot;https://docs.cypress.io/guides/guides/network-requests.html#Waiting&quot;&gt;read more about waiting on routes here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c112b29f653fa6da29b77c4076e2ef3e3a084105" translate="yes" xml:space="preserve">
          <source>For a failure screenshot, the default naming scheme is used and the name is appended with &lt;code&gt;(failed)&lt;/code&gt;: &lt;code&gt;{screenshotsFolder}/{specPath}/{testName} (failed).png&lt;/code&gt;</source>
          <target state="translated">对于失败的屏幕快照，使用默认的命名方案，并且名称后面附加 &lt;code&gt;(failed)&lt;/code&gt; ： &lt;code&gt;{screenshotsFolder}/{specPath}/{testName} (failed).png&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c3622304f60b3021288d1c3d8d20c5a919b618c3" translate="yes" xml:space="preserve">
          <source>For a full example where invoke is used to await async Vuex store actions, visit the recipe: &lt;a href=&quot;https://github.com/cypress-io/cypress-example-recipes&quot;&gt;Vue + Vuex + REST&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a665f1775461ab3d07e8409cfd0c265140d91e7f" translate="yes" xml:space="preserve">
          <source>For a more thorough explanation of Cypress&amp;rsquo;s Web Security model, &lt;a href=&quot;../guides/web-security&quot;&gt;please read our dedicated guide to it&lt;/a&gt;.</source>
          <target state="translated">有关赛普拉斯Web安全模型的更详尽说明，&lt;a href=&quot;../guides/web-security&quot;&gt;请阅读有关它的专用指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="81b646082a814f0faa4350f1e9fe72ba04d2d004" translate="yes" xml:space="preserve">
          <source>For a named screenshot, the name is used instead of the suites and test name: &lt;code&gt;{screenshotsFolder}/{specPath}/{name}.png&lt;/code&gt;</source>
          <target state="translated">对于命名的屏幕截图，将使用名称代替套件和测试名称： &lt;code&gt;{screenshotsFolder}/{specPath}/{name}.png&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1875e2e03dcd0d2fa376d7793b62e8918bbb3dbf" translate="yes" xml:space="preserve">
          <source>For a variety of implementation reasons, Cypress commands &lt;strong&gt;only&lt;/strong&gt; retry the &lt;strong&gt;last command&lt;/strong&gt; before the assertion. In our test:</source>
          <target state="translated">由于各种实现原因，赛普拉斯命令&lt;strong&gt;仅&lt;/strong&gt;在断言之前重试&lt;strong&gt;最后一个命令&lt;/strong&gt;。在我们的测试中：</target>
        </trans-unit>
        <trans-unit id="d43c859b9e7c1c86f68c1d7527404d0b8d12f85a" translate="yes" xml:space="preserve">
          <source>For any duplicate screenshots (named or not), they will be appended with a number: &lt;code&gt;{screenshotsFolder}/{specPath}/{testName} (1).png&lt;/code&gt;</source>
          <target state="translated">对于任何重复的屏幕快照（无论是否命名），都将附加一个数字： &lt;code&gt;{screenshotsFolder}/{specPath}/{testName} (1).png&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="580371d64b28a421d6f70048a5b3551ae4f827cc" translate="yes" xml:space="preserve">
          <source>For any file other than JSON, the contents of the file are returned.</source>
          <target state="translated">对于JSON以外的任何文件,将返回文件的内容。</target>
        </trans-unit>
        <trans-unit id="91b613f768c593855e85ce87451fd66e1155cdb4" translate="yes" xml:space="preserve">
          <source>For any other server type, define a &lt;code&gt;GET /__coverage__&lt;/code&gt; endpoint and return the &lt;code&gt;global.__coverage__&lt;/code&gt; object.</source>
          <target state="translated">对于任何其他服务器类型，请定义 &lt;code&gt;GET /__coverage__&lt;/code&gt; 端点并返回 &lt;code&gt;global.__coverage__&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="ff6639c39228ded6347d1f488c7234eea10e2fb6" translate="yes" xml:space="preserve">
          <source>For brevity we&amp;rsquo;ve omitted the full path to the cypress executable in each command&amp;rsquo;s documentation.</source>
          <target state="translated">为简便起见，我们在每个命令的文档中都省略了cypress可执行文件的完整路径。</target>
        </trans-unit>
        <trans-unit id="201ee05c918022669060bbba7c946dd7db53a43e" translate="yes" xml:space="preserve">
          <source>For certain commands like &lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../api/commands/stub&quot;&gt;&lt;code&gt;cy.stub()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../../api/commands/spy&quot;&gt;&lt;code&gt;cy.spy()&lt;/code&gt;&lt;/a&gt;, an extra instrument panel is displayed above the test to give more information about the state of your tests.</source>
          <target state="translated">对于某些命令，例如&lt;a href=&quot;../../api/commands/route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../api/commands/stub&quot;&gt; &lt;code&gt;cy.stub()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../api/commands/spy&quot;&gt; &lt;code&gt;cy.spy()&lt;/code&gt; &lt;/a&gt;，在测试上方会显示一个额外的仪表板，以提供有关测试状态的更多信息。</target>
        </trans-unit>
        <trans-unit id="cae9b803221129b647d814f9c377a224266b68b3" translate="yes" xml:space="preserve">
          <source>For clarity you can pass a string message as a second argument to any &lt;code&gt;expect&lt;/code&gt; assertion, see &lt;a href=&quot;https://www.chaijs.com/guide/styles/#expect&quot;&gt;Chai#expect&lt;/a&gt;.</source>
          <target state="translated">为了清楚起见，您可以将字符串消息作为第二个参数传递给任何 &lt;code&gt;expect&lt;/code&gt; 断言，请参见&lt;a href=&quot;https://www.chaijs.com/guide/styles/#expect&quot;&gt;Chai＃expect&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7df63eb79e11a90822227f06bac5c3df82d15fa8" translate="yes" xml:space="preserve">
          <source>For convenience, you can also omit any return value or return &lt;code&gt;undefined&lt;/code&gt; and Cypress will not error.</source>
          <target state="translated">为方便起见，您也可以省略任何返回值或返回 &lt;code&gt;undefined&lt;/code&gt; 值，并且Cypress不会出错。</target>
        </trans-unit>
        <trans-unit id="f9c0ce52609e0b7f8cfe8d5f39cd21cde114fb46" translate="yes" xml:space="preserve">
          <source>For example - say a command we wrote timed out: &lt;a href=&quot;get&quot;&gt;&lt;code&gt;cy.get('#element')&lt;/code&gt;&lt;/a&gt;. This causes your test to fail. Cypress then automatically takes a screenshot when the test fails, but it is possible something in your application changed within this &lt;code&gt;100ms&lt;/code&gt; timeframe. Hypothetically, your app could render the element you were originally expecting to be present. When this happens, the screenshot may provide confusing results. It is unlikely, but theoretically possible.</source>
          <target state="translated">例如，假设我们编写的命令超时：&lt;a href=&quot;get&quot;&gt; &lt;code&gt;cy.get('#element')&lt;/code&gt; &lt;/a&gt;。这会导致测试失败。然后，当测试失败时，赛普拉斯会自动拍摄一个屏幕截图，但是您的应用程序有可能在 &lt;code&gt;100ms&lt;/code&gt; 的时间内发生了变化。假设地，您的应用程序可以渲染您最初希望存在的元素。发生这种情况时，屏幕截图可能会提供令人困惑的结果。这不太可能，但理论上是可能的。</target>
        </trans-unit>
        <trans-unit id="263146ee5d217d189aa21d8fbdb6bfe0fbec8237" translate="yes" xml:space="preserve">
          <source>For example if you add the command &lt;code&gt;cy.dataCy&lt;/code&gt; into your &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;&lt;code&gt;supportFile&lt;/code&gt;&lt;/a&gt; like this:</source>
          <target state="translated">例如，如果将命令 &lt;code&gt;cy.dataCy&lt;/code&gt; 添加到您的&lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt; &lt;code&gt;supportFile&lt;/code&gt; 中,&lt;/a&gt;如下所示：</target>
        </trans-unit>
        <trans-unit id="2758c38b95307263ee836b320324f26239fd0efb" translate="yes" xml:space="preserve">
          <source>For example, clicking a &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; inside of a &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; gives the focus to the button, since that&amp;rsquo;s what would happen in a real user scenario.</source>
          <target state="translated">例如，单击 &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 内的&amp;lt;span&amp;gt;可使按钮成为焦点，因为在实际用户场景中会发生这种情况。</target>
        </trans-unit>
        <trans-unit id="6f4fdb15c7328482d20e6ea99d6570ca3c31f0aa" translate="yes" xml:space="preserve">
          <source>For example, consider this HTML fragment.</source>
          <target state="translated">例如,考虑这个HTML片段。</target>
        </trans-unit>
        <trans-unit id="764b75327a33cf0119b6f91796ffb927e6300398" translate="yes" xml:space="preserve">
          <source>For example, given a spec file located at &lt;code&gt;cypress/integration/users/login_spec.js&lt;/code&gt;:</source>
          <target state="translated">例如，给定一个位于 &lt;code&gt;cypress/integration/users/login_spec.js&lt;/code&gt; 的规范文件：</target>
        </trans-unit>
        <trans-unit id="aaa1105999961ee6003bd962c1a65b040bd5496f" translate="yes" xml:space="preserve">
          <source>For example, if the snapshot command is &lt;code&gt;cy.mySnapshotCommand&lt;/code&gt;:</source>
          <target state="translated">例如，如果快照命令是 &lt;code&gt;cy.mySnapshotCommand&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="ab571a4f91aef38ebfa5eecac23a46306dfafc38" translate="yes" xml:space="preserve">
          <source>For example, if your distribution packages Google Chrome as &lt;code&gt;chrome&lt;/code&gt;, you could add a symlink to &lt;code&gt;google-chrome&lt;/code&gt; like this:</source>
          <target state="translated">例如，如果您的发行版将Google Chrome浏览器打包为 &lt;code&gt;chrome&lt;/code&gt; ，则可以将符号链接添加到 &lt;code&gt;google-chrome&lt;/code&gt; 中,如下所示：</target>
        </trans-unit>
        <trans-unit id="644fe93693b828db3515767856da1bd3a29e87ab" translate="yes" xml:space="preserve">
          <source>For example, on a Linux machine:</source>
          <target state="translated">例如,在Linux机器上。</target>
        </trans-unit>
        <trans-unit id="e2158d33b661e52ec20e4eadf6ce104d3345fbd7" translate="yes" xml:space="preserve">
          <source>For example, on a Mac:</source>
          <target state="translated">例如,在Mac上。</target>
        </trans-unit>
        <trans-unit id="374258cadc421fc853522a47d379c7f40972c75a" translate="yes" xml:space="preserve">
          <source>For example, one can use the &lt;a href=&quot;https://github.com/meinaart/cypress-plugin-snapshots&quot;&gt;cypress-plugin-snapshots&lt;/a&gt; plugin and catch the following visual regression:</source>
          <target state="translated">例如，可以使用&lt;a href=&quot;https://github.com/meinaart/cypress-plugin-snapshots&quot;&gt;cypress-plugin-snapshots&lt;/a&gt;插件并捕获以下视觉回归：</target>
        </trans-unit>
        <trans-unit id="52bff469061738de305a5c214d6bb7f6c8ad7f03" translate="yes" xml:space="preserve">
          <source>For example, the following test has &lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../api/commands/and&quot;&gt;&lt;code&gt;.and()&lt;/code&gt;&lt;/a&gt; assertions. &lt;code&gt;.and()&lt;/code&gt; is an alias of the &lt;code&gt;.should()&lt;/code&gt; command, so the second assertion is really a custom callback assertion in the form of the &lt;a href=&quot;../../api/commands/should#Function&quot;&gt;&lt;code&gt;.should(cb)&lt;/code&gt;&lt;/a&gt; function with 2 &lt;a href=&quot;../references/assertions#BDD-Assertions&quot;&gt;&lt;code&gt;expect&lt;/code&gt;&lt;/a&gt; assertions inside of it.</source>
          <target state="translated">例如，以下测试具有&lt;a href=&quot;../../api/commands/should&quot;&gt; &lt;code&gt;.should()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../api/commands/and&quot;&gt; &lt;code&gt;.and()&lt;/code&gt; &lt;/a&gt;断言。 &lt;code&gt;.and()&lt;/code&gt; 是 &lt;code&gt;.should()&lt;/code&gt; 命令的别名，因此第二个断言实际上是&lt;a href=&quot;../../api/commands/should#Function&quot;&gt; &lt;code&gt;.should(cb)&lt;/code&gt; &lt;/a&gt;函数形式的自定义回调断言，其中包含2个&lt;a href=&quot;../references/assertions#BDD-Assertions&quot;&gt; &lt;code&gt;expect&lt;/code&gt; &lt;/a&gt;断言。</target>
        </trans-unit>
        <trans-unit id="7f0d7592cbf7bfa92426baaef777c8467fdf810d" translate="yes" xml:space="preserve">
          <source>For example, to set the default command timeout to 10 seconds via command line:</source>
          <target state="translated">例如,通过命令行将默认命令超时设置为10秒。</target>
        </trans-unit>
        <trans-unit id="24e8f3f5bf287ec2abda1e46dac7e765408a08a9" translate="yes" xml:space="preserve">
          <source>For example, when writing a &lt;a href=&quot;../../api/commands/click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; command, Cypress ensures that the element is able to be interacted with (like a real user would). It will automatically wait until the element reaches an &amp;ldquo;actionable&amp;rdquo; state by:</source>
          <target state="translated">例如，在编写&lt;a href=&quot;../../api/commands/click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt;命令时，赛普拉斯确保能够与该元素进行交互（就像真实用户一样）。它会通过以下方式自动等待，直到元素达到&amp;ldquo;可操作&amp;rdquo;状态：</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="2de5b291ad79324bcf505dc77ce99f3c250b6a66" translate="yes" xml:space="preserve">
          <source>For instance given a URL: &lt;code&gt;https://google.com/search?q=cypress&lt;/code&gt;</source>
          <target state="translated">例如，给定一个URL： &lt;code&gt;https://google.com/search?q=cypress&lt;/code&gt; : //google.com/search?q=cypress</target>
        </trans-unit>
        <trans-unit id="af939d9ec5be005fdcff9cc5bafa9bc567dcc0c0" translate="yes" xml:space="preserve">
          <source>For instance the following will submit the form.</source>
          <target state="translated">例如下面将提交表格。</target>
        </trans-unit>
        <trans-unit id="b5517d0b0ff724878ebb60576914cb82e4c4d83b" translate="yes" xml:space="preserve">
          <source>For instance there is:</source>
          <target state="translated">比如有。</target>
        </trans-unit>
        <trans-unit id="69f7252ea2666904183520e01c4a6a37f7de72b6" translate="yes" xml:space="preserve">
          <source>For instance you may want to do this:</source>
          <target state="translated">例如你可能想这样做。</target>
        </trans-unit>
        <trans-unit id="252964127344b906890088ac3b58c00fbc7996d8" translate="yes" xml:space="preserve">
          <source>For instance, &lt;a href=&quot;../../api/commands/its&quot;&gt;&lt;code&gt;.its()&lt;/code&gt;&lt;/a&gt; requires that the property you&amp;rsquo;re asking about exists on the object.</source>
          <target state="translated">例如，&lt;a href=&quot;../../api/commands/its&quot;&gt; &lt;code&gt;.its()&lt;/code&gt; &lt;/a&gt;要求您要查询的属性存在于该对象上。</target>
        </trans-unit>
        <trans-unit id="9f2d3f0dc7271d3653fea606fcd0bdc4bb155b6d" translate="yes" xml:space="preserve">
          <source>For instance, an element could pass all of the previous checks, but a giant dialog could be covering the entire screen making interacting with the element impossible for any real user.</source>
          <target state="translated">例如,一个元素可以通过前面的所有检查,但一个巨大的对话框可能会覆盖整个屏幕,使任何真正的用户无法与该元素进行交互。</target>
        </trans-unit>
        <trans-unit id="abc897209b2f98b7966665fa36a5eddbbc44f66d" translate="yes" xml:space="preserve">
          <source>For instance:</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="f82e17eccd0cd5b897a68561a0dfcf4a5a0d4cc8" translate="yes" xml:space="preserve">
          <source>For more complex use cases feel free to overwrite existing commands.</source>
          <target state="translated">对于更复杂的用例,可以随意覆盖现有命令。</target>
        </trans-unit>
        <trans-unit id="9e02635601388e7c946b921e1e450b5a9dc0dde5" translate="yes" xml:space="preserve">
          <source>For more details on these options and to set some as defaults across all uses of &lt;code&gt;.screenshot()&lt;/code&gt;, see the &lt;a href=&quot;../cypress-api/screenshot-api&quot;&gt;Cypress.Screenshot API doc&lt;/a&gt;.</source>
          <target state="translated">有关这些选项的更多详细信息，以及要将所有设置为 &lt;code&gt;.screenshot()&lt;/code&gt; 的默认值，请参见&lt;a href=&quot;../cypress-api/screenshot-api&quot;&gt;Cypress.Screenshot API文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="54d3a0513cfccad9eb5d6e0e78581670489941f0" translate="yes" xml:space="preserve">
          <source>For more information on writing plugins, please &lt;a href=&quot;../../api/plugins/writing-a-plugin&quot;&gt;check out our API docs here&lt;/a&gt;.</source>
          <target state="translated">有关编写插件的更多信息，请&lt;a href=&quot;../../api/plugins/writing-a-plugin&quot;&gt;在此处查看我们的API文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3d3310b65fdf0f0ced0b2000f01f790efbf2e93c" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;http://antontelesh.github.io/testing/2019/02/04/mochawesome-merge.html&quot;&gt;Integrating Mochawesome reporter with Cypresss&lt;/a&gt;</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;http://antontelesh.github.io/testing/2019/02/04/mochawesome-merge.html&quot;&gt;将Mochawesome报告程序与Cypresss集成。&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a938ddb8b260b7907e6de8105877506b068906fa" translate="yes" xml:space="preserve">
          <source>For more options regarding screenshots, view the &lt;a href=&quot;../../api/cypress-api/screenshot-api&quot;&gt;Cypress.Screenshot API&lt;/a&gt;.</source>
          <target state="translated">有关屏幕截图的更多选项，请查看&lt;a href=&quot;../../api/cypress-api/screenshot-api&quot;&gt;Cypress.Screenshot API&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="09f377bc687a64f445d344af854cd956a6165063" translate="yes" xml:space="preserve">
          <source>For multiple runs to be grouped into a single run, it is required for CI machines to share a common CI build ID environment variable. Typically these CI machines will run in parallel or within the same build workflow or pipeline, but &lt;strong&gt;it is not required to use Cypress parallelization to group runs&lt;/strong&gt;. Grouping of runs can be utilized independently of Cypress parallelization.</source>
          <target state="translated">要将多个运行分组为一个运行，CI机器需要共享一个公共的CI构建ID环境变量。通常，这些CI机器将并行运行或在同一构建工作流或管道中运行，但是&lt;strong&gt;不需要使用赛普拉斯并行化对运行分组&lt;/strong&gt;。可以独立于赛普拉斯并行化使用运行分组。</target>
        </trans-unit>
        <trans-unit id="33169c378a8f3e8f01e7fbd26b9ee56ff477e933" translate="yes" xml:space="preserve">
          <source>For now, please visit the &lt;a href=&quot;../../api/events/catalog-of-events#Uncaught-Exceptions&quot;&gt;Catalog of Events&lt;/a&gt; page for examples how to turn off catching uncaught exceptions.</source>
          <target state="translated">现在，请访问&amp;ldquo; &lt;a href=&quot;../../api/events/catalog-of-events#Uncaught-Exceptions&quot;&gt;事件目录&amp;rdquo;&lt;/a&gt;页面，以获取有关如何关闭捕获未捕获异常的示例。</target>
        </trans-unit>
        <trans-unit id="88158d5e9dc8f8941bd54f6e40953f96ad40d693" translate="yes" xml:space="preserve">
          <source>For other types of files, they will be read as &lt;code&gt;utf8&lt;/code&gt; by default, unless specified in the second argument of &lt;code&gt;cy.fixture()&lt;/code&gt;.</source>
          <target state="translated">对于其他类型的文件，除非在 &lt;code&gt;cy.fixture()&lt;/code&gt; 的第二个参数中指定，否则默认情况下会将其读取为 &lt;code&gt;utf8&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d91ebd354dbfba00dacd289ac1a90f3e80f3b246" translate="yes" xml:space="preserve">
          <source>For reference, the &lt;code&gt;.babelrc&lt;/code&gt; file is shared between the example application and the spec files, thus Cypress tests are transpiled the same way the application code is transpiled.</source>
          <target state="translated">作为参考， &lt;code&gt;.babelrc&lt;/code&gt; 文件在示例应用程序和spec文件之间共享，因此，以与应用程序代码相同的方式来编译Cypress测试。</target>
        </trans-unit>
        <trans-unit id="a0f76861650d658435d862cebc0bc974dfdbebf1" translate="yes" xml:space="preserve">
          <source>For the moment, let&amp;rsquo;s assume that for some reason your application desperately &lt;strong&gt;needs&lt;/strong&gt; that last bit of &lt;code&gt;after&lt;/code&gt; or &lt;code&gt;afterEach&lt;/code&gt; code to run. Let&amp;rsquo;s assume that if that code is not run - all is lost.</source>
          <target state="translated">目前，让我们假设由于某种原因，您的应用程序迫切&lt;strong&gt;需要&lt;/strong&gt;运行 &lt;code&gt;after&lt;/code&gt; / &lt;code&gt;afterEach&lt;/code&gt; 代码的最后一部分。假设如果该代码未运行，则全部丢失。</target>
        </trans-unit>
        <trans-unit id="c35e33effb9613124be59712e199c2b878568a36" translate="yes" xml:space="preserve">
          <source>For the most powerful matching, provide a regular expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01260984a70b15e582d02ecbb77eb53567003e8b" translate="yes" xml:space="preserve">
          <source>For the remainder of this guide, we&amp;rsquo;ll explore the basics of Cypress that make this example work. We&amp;rsquo;ll demystify the rules Cypress follows so you can productively test your application to act as much like a user as possible, as well as discuss how to take shortcuts when it&amp;rsquo;s useful.</source>
          <target state="translated">在本指南的其余部分，我们将探讨使该示例有效的Cypress基础。我们将揭秘Cypress遵循的规则，以便您可以高效地测试应用程序，使其表现得尽可能像用户，并讨论在有用时如何采用快捷方式。</target>
        </trans-unit>
        <trans-unit id="728229716acc9fc14a9907d5acafe87f6cdd5c23" translate="yes" xml:space="preserve">
          <source>For this reason we recommend &lt;a href=&quot;https://www.chromium.org/Home&quot;&gt;downloading Chromium&lt;/a&gt; or &lt;a href=&quot;https://www.google.com/chrome/browser/canary.html&quot;&gt;downloading Canary&lt;/a&gt;. These browsers both have different icons from the standard Chrome browser and it&amp;rsquo;ll be much easier to tell the difference. You can also use the bundled &lt;a href=&quot;#Electron-Browser&quot;&gt;Electron browser&lt;/a&gt;, which does not have a Dock icon.</source>
          <target state="translated">因此，我们建议&lt;a href=&quot;https://www.chromium.org/Home&quot;&gt;下载Chromium&lt;/a&gt;或&lt;a href=&quot;https://www.google.com/chrome/browser/canary.html&quot;&gt;下载Canary&lt;/a&gt;。这些浏览器的图标与标准Chrome浏览器的图标不同，区分起来会容易得多。您也可以使用捆绑的&lt;a href=&quot;#Electron-Browser&quot;&gt;Electron浏览器&lt;/a&gt;，该浏览器没有Dock图标。</target>
        </trans-unit>
        <trans-unit id="205e71a20ed6c001f2d67335fcd4f33135185375" translate="yes" xml:space="preserve">
          <source>For this reason you cannot &lt;strong&gt;ever&lt;/strong&gt; return or assign anything useful from Cypress commands.</source>
          <target state="translated">因此，您&lt;strong&gt;永远&lt;/strong&gt;无法从赛普拉斯命令中返回或分配任何有用的信息。</target>
        </trans-unit>
        <trans-unit id="d0b8219d8ed6c1e8024344c044ecea764b1dc5cf" translate="yes" xml:space="preserve">
          <source>For working with either of these patterns, please read our &lt;a href=&quot;../core-concepts/variables-and-aliases&quot;&gt;Variables and Aliases guide&lt;/a&gt;.</source>
          <target state="translated">要使用这些模式中的任何一种，请阅读我们的《&lt;a href=&quot;../core-concepts/variables-and-aliases&quot;&gt;变量和别名》指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="58df072b14e502083ab5c85ba4c8f1d20ae6ccd5" translate="yes" xml:space="preserve">
          <source>Force Reload</source>
          <target state="translated">力量重装</target>
        </trans-unit>
        <trans-unit id="6009b160ba75d2e52bc0d8169e251b1536e4aa89" translate="yes" xml:space="preserve">
          <source>Force a click regardless of its actionable state</source>
          <target state="translated">无论其可操作状态如何,都要强制点击</target>
        </trans-unit>
        <trans-unit id="501ae9dd8f1715a7ea40942df61d140bc1a7fd7e" translate="yes" xml:space="preserve">
          <source>Force a click with position argument</source>
          <target state="translated">用位置参数强制点击</target>
        </trans-unit>
        <trans-unit id="f0f17bcdc15ad6b57ab2c842701861471bd496bc" translate="yes" xml:space="preserve">
          <source>Force a click with relative coordinates</source>
          <target state="translated">用相对坐标强制点击</target>
        </trans-unit>
        <trans-unit id="3f21fe7e580912b2cb72d35ec748a7a7363b3004" translate="yes" xml:space="preserve">
          <source>Force a double click regardless of its actionable state</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3fd021baf3d5a26bdc7db2d16f76b2550794e8b" translate="yes" xml:space="preserve">
          <source>Force a double click with position argument</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f781217729dad48d4061dfce919713b00cf6513c" translate="yes" xml:space="preserve">
          <source>Force a double click with relative coordinates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c3f51a6cb84667b76ee081ad795c0f7d6be6980" translate="yes" xml:space="preserve">
          <source>Force a right click regardless of its actionable state</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b1485264533345f8f2abaada7228dda3441bca8" translate="yes" xml:space="preserve">
          <source>Force a right click with position argument</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3f1611aec9cf61c4b343f3ba827008cdec4fdf7" translate="yes" xml:space="preserve">
          <source>Force a right click with relative coordinates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="778a8734a9c3b42f5a7d9afcc008f81e492a3a8b" translate="yes" xml:space="preserve">
          <source>Force click</source>
          <target state="translated">强制点击</target>
        </trans-unit>
        <trans-unit id="41e37a1f78aef985b21cad73b3082506a86c715b" translate="yes" xml:space="preserve">
          <source>Force exit codes that are &lt;code&gt;null&lt;/code&gt; to &lt;code&gt;0&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/184&quot;&gt;#184&lt;/a&gt;.</source>
          <target state="translated">强制将退出代码设为 &lt;code&gt;null&lt;/code&gt; 到 &lt;code&gt;0&lt;/code&gt; 。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/184&quot;&gt;＃184&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9345bedf1cea87fd7b943085b7226f014d46c650" translate="yes" xml:space="preserve">
          <source>Force select</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a45b61c2dbe231a97475e5b31a52f41b5bf37f4" translate="yes" xml:space="preserve">
          <source>Force select a disabled &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dacb0e4f8e0de0d6df18a2d70b6f266a299781bf" translate="yes" xml:space="preserve">
          <source>Force select a hidden &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3675b055af415697257a68145761329b09a120af" translate="yes" xml:space="preserve">
          <source>Force trailing slash on all &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; to fix relative links &lt;code&gt;href=&quot;assets/app.js&quot;&lt;/code&gt;.</source>
          <target state="translated">在所有&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;上强制使用斜杠以修复相对链接 &lt;code&gt;href=&quot;assets/app.js&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="212605644c0b6c1945c9a3e7254761cd558173c5" translate="yes" xml:space="preserve">
          <source>Force typing regardless of its actionable state</source>
          <target state="translated">无论其可操作状态如何,都要强制输入</target>
        </trans-unit>
        <trans-unit id="9133a83c2831ad21e3aa26f7912ae9117d231e31" translate="yes" xml:space="preserve">
          <source>Force your application to behave deterministically.</source>
          <target state="translated">强制你的应用程序表现为确定性的。</target>
        </trans-unit>
        <trans-unit id="c22784e9b0a4a78c005e9a85b243521624424e2e" translate="yes" xml:space="preserve">
          <source>Forces the action, disables &lt;a href=&quot;#Assertions&quot;&gt;waiting for actionability&lt;/a&gt;</source>
          <target state="translated">强制执行操作，禁用&lt;a href=&quot;#Assertions&quot;&gt;等待操作性&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d8e12d23ec3290a534ebbcf584e8eb235083c99c" translate="yes" xml:space="preserve">
          <source>Forces the action, disables checking if &lt;a href=&quot;#Requirements&quot;&gt;element is focused&lt;/a&gt;</source>
          <target state="translated">强制执行操作，禁用检查&lt;a href=&quot;#Requirements&quot;&gt;元素是否聚焦&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c6aeb53d6057d030d1940ca8e7fb9f7eac6f7fb4" translate="yes" xml:space="preserve">
          <source>Forcibly fire the event at the element</source>
          <target state="translated">强制向元素发射事件</target>
        </trans-unit>
        <trans-unit id="22c717b7cf52642cd4402c97663c40e584fd7918" translate="yes" xml:space="preserve">
          <source>Forcibly send XHR&amp;rsquo;s a 404 status when the XHR&amp;rsquo;s do not match any existing &lt;a href=&quot;route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">当XHR与任何现有&lt;a href=&quot;route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt;不匹配时，强制向XHR发送404状态。</target>
        </trans-unit>
        <trans-unit id="20885cc954853a82ab6c89688d9a6d691df54148" translate="yes" xml:space="preserve">
          <source>Forcibly send a 404 status when the XHR does not match any existing &lt;code&gt;cy.route()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e9b90f09f342388fa794ee597459cdfabb7b581" translate="yes" xml:space="preserve">
          <source>Forcing</source>
          <target state="translated">Forcing</target>
        </trans-unit>
        <trans-unit id="f8c2349f25011f3fb852e55a8b44e642923f7d87" translate="yes" xml:space="preserve">
          <source>Forcing a click overrides the &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements#Forcing&quot;&gt;actionable checks&lt;/a&gt; Cypress applies and will automatically fire the events.</source>
          <target state="translated">强制单击会覆盖赛普拉斯应用的&lt;a href=&quot;../../guides/core-concepts/interacting-with-elements#Forcing&quot;&gt;可操作检查&lt;/a&gt;，并将自动触发事件。</target>
        </trans-unit>
        <trans-unit id="1203f45c3499183df76b622dc696323751b8498d" translate="yes" xml:space="preserve">
          <source>Forcing a click overrides the &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/interacting-with-elements.html#Forcing&quot;&gt;actionable checks&lt;/a&gt; Cypress applies and will automatically fire the events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c401155af17add2e4a1ac7619bf056122cb7782e" translate="yes" xml:space="preserve">
          <source>Forcing a double click overrides the &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/interacting-with-elements.html#Forcing&quot;&gt;actionable checks&lt;/a&gt; Cypress applies and will automatically fire the events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e27c6c6217538cdeb2a624444b935f5001caa3e4" translate="yes" xml:space="preserve">
          <source>Forcing a right click overrides the &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/interacting-with-elements.html#Forcing&quot;&gt;actionable checks&lt;/a&gt; Cypress applies and will automatically fire the events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce50bed2898545dff3bd82a789b80bd08baf4e2f" translate="yes" xml:space="preserve">
          <source>Forcing typing overrides the &lt;a href=&quot;../../guides/core-concepts/interacting-with-elements#Forcing&quot;&gt;actionable checks&lt;/a&gt; Cypress applies and will automatically fire the events.</source>
          <target state="translated">强制键入会覆盖赛普拉斯应用的&lt;a href=&quot;../../guides/core-concepts/interacting-with-elements#Forcing&quot;&gt;可操作检查&lt;/a&gt;，并将自动触发事件。</target>
        </trans-unit>
        <trans-unit id="dbbc7ab2b811ea1244db5ceb4308e5849195c7f1" translate="yes" xml:space="preserve">
          <source>Forcing typing overrides the &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/interacting-with-elements.html#Forcing&quot;&gt;actionable checks&lt;/a&gt; Cypress applies and will automatically fire the events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42440f0025c87af99f06a479298706346f7339fa" translate="yes" xml:space="preserve">
          <source>Form Submission</source>
          <target state="translated">提交表格</target>
        </trans-unit>
        <trans-unit id="53a11923bf4b30c2695146358bf573a9a81ef986" translate="yes" xml:space="preserve">
          <source>Form Submission Redirects</source>
          <target state="translated">表格提交重定向</target>
        </trans-unit>
        <trans-unit id="c29b61ca75f1c226b23fdb85ea8267be1b5f57ad" translate="yes" xml:space="preserve">
          <source>Form Submissions</source>
          <target state="translated">表格提交</target>
        </trans-unit>
        <trans-unit id="9dfc42ed63ca85b554caa7e220fd03b0c592b3d8" translate="yes" xml:space="preserve">
          <source>Form submission could result in a non-success status code.</source>
          <target state="translated">表格提交可能导致非成功状态码。</target>
        </trans-unit>
        <trans-unit id="8d016fe426ee3087e96153f2d1d6e6ebf0fc6765" translate="yes" xml:space="preserve">
          <source>Form with 1 input, no defaultButton.</source>
          <target state="translated">有1个输入的表单,没有defaultButton。</target>
        </trans-unit>
        <trans-unit id="8e9fba7056e53e85ae44895a33b9e115c05d0bb1" translate="yes" xml:space="preserve">
          <source>Form with 2 inputs, no defaultButton.</source>
          <target state="translated">有2个输入的表单,没有defaultButton。</target>
        </trans-unit>
        <trans-unit id="cf3f48103538a5822498e4ce69d4cd1cd1cbd15b" translate="yes" xml:space="preserve">
          <source>Form with disabled defaultButton.</source>
          <target state="translated">禁用defaultButton的表格。</target>
        </trans-unit>
        <trans-unit id="fa6120162c6ff741a97b6f9f45021516e88399ea" translate="yes" xml:space="preserve">
          <source>Form with multiple defaultButtons.</source>
          <target state="translated">具有多个defaultButtons的表单。</target>
        </trans-unit>
        <trans-unit id="4bec9575721b2739ed1e7c56eb6c8471084fcbcf" translate="yes" xml:space="preserve">
          <source>Forms</source>
          <target state="translated">Forms</target>
        </trans-unit>
        <trans-unit id="f123768a0be7e3519d5400f6ace516a3d22ef601" translate="yes" xml:space="preserve">
          <source>Fortunately, you don&amp;rsquo;t have to make your code do backflips. Cypress makes it easy to handle these situations.</source>
          <target state="translated">幸运的是，您不必让代码进行反向翻转。赛普拉斯可以轻松应对这些情况。</target>
        </trans-unit>
        <trans-unit id="4d98ce7637720e6e6410d48877f19b3b01766845" translate="yes" xml:space="preserve">
          <source>Framework tooling</source>
          <target state="translated">框架工具</target>
        </trans-unit>
        <trans-unit id="09c17a26370171d23ce84d3552d846a3048206f8" translate="yes" xml:space="preserve">
          <source>From &lt;code&gt;cy&lt;/code&gt; only, meaning they do not operate on a subject: &lt;a href=&quot;../../api/commands/clearcookies&quot;&gt;&lt;code&gt;cy.clearCookies()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">从 &lt;code&gt;cy&lt;/code&gt; 只，这意味着他们不会在一个主题进行操作：&lt;a href=&quot;../../api/commands/clearcookies&quot;&gt; &lt;code&gt;cy.clearCookies()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="31f403c5a128ec2fd7eecd5f9c8314fb8737fe1f" translate="yes" xml:space="preserve">
          <source>From a plugin</source>
          <target state="translated">从一个插件</target>
        </trans-unit>
        <trans-unit id="ed641d7d4bd97215540ad6898e355fb5baec7c82" translate="yes" xml:space="preserve">
          <source>From both &lt;code&gt;cy&lt;/code&gt;&lt;em&gt;or&lt;/em&gt; from a subject-yielding command: &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">从 &lt;code&gt;cy&lt;/code&gt; &lt;em&gt;或&lt;/em&gt;从生成主题的命令：&lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2e722ad8ebb2888327ea48c45ad4d9f9f25a3a6c" translate="yes" xml:space="preserve">
          <source>From commands yielding particular kinds of subjects (like DOM elements): &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">从产生特殊主题（例如DOM元素）的命令中：&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e9cebd6aa307387fd6af261554581a6553c4c0a6" translate="yes" xml:space="preserve">
          <source>From here you may want to explore some more of our guides:</source>
          <target state="translated">从这里开始,你可能想探索我们更多的指南。</target>
        </trans-unit>
        <trans-unit id="5dba6095ab28643bdecd3fa748791bc981bf5a33" translate="yes" xml:space="preserve">
          <source>From now on, the front end code coverage collected during end-to-end tests will be merged with the code coverage from the instrumented back end code and saved in a single report. Here is an example report from the &lt;a href=&quot;https://github.com/cypress-io/cypress-example-realworld&quot;&gt;cypress-io/cypress-example-realworld&lt;/a&gt; example:</source>
          <target state="translated">从现在开始，在端到端测试期间收集的前端代码覆盖率将与检测到的后端代码中的代码覆盖率合并，并保存在单个报告中。这是来自&lt;a href=&quot;https://github.com/cypress-io/cypress-example-realworld&quot;&gt;cypress-io / cypress-example-realworld&lt;/a&gt;示例的示例报告：</target>
        </trans-unit>
        <trans-unit id="0c3798d7d8f036440f97015d932834077be71636" translate="yes" xml:space="preserve">
          <source>From test file</source>
          <target state="translated">来自测试文件</target>
        </trans-unit>
        <trans-unit id="ab237c8d353bffac0346140b90b7b7a8b25ebce3" translate="yes" xml:space="preserve">
          <source>From the Dashboard you can:</source>
          <target state="translated">在 &quot;仪表板 &quot;上,您可以:</target>
        </trans-unit>
        <trans-unit id="11bd5b7d8d61f5366111bedb4345ae5776477e67" translate="yes" xml:space="preserve">
          <source>From the command line or CI</source>
          <target state="translated">从命令行或CI</target>
        </trans-unit>
        <trans-unit id="deed2829df64b9417a7632480c32da477e7c2ff9" translate="yes" xml:space="preserve">
          <source>From your support file you should also &lt;code&gt;import&lt;/code&gt; or &lt;code&gt;require&lt;/code&gt; other files to keep things organized.</source>
          <target state="translated">从支持文件中，您还应该 &lt;code&gt;import&lt;/code&gt; 或 &lt;code&gt;require&lt;/code&gt; 其他文件以保持事物的井井有条。</target>
        </trans-unit>
        <trans-unit id="b83b790c6fc4ff8ca374201d19ae1e8204d8eb05" translate="yes" xml:space="preserve">
          <source>Full documentation can be found at the &lt;a href=&quot;https://github.com/cypress-io/circleci-orb&quot;&gt;&lt;code&gt;cypress-io/circleci-orb&lt;/code&gt;&lt;/a&gt; repo.</source>
          <target state="translated">完整文档可在&lt;a href=&quot;https://github.com/cypress-io/circleci-orb&quot;&gt; &lt;code&gt;cypress-io/circleci-orb&lt;/code&gt; 存储&lt;/a&gt;库中找到。</target>
        </trans-unit>
        <trans-unit id="27be451352c8b9f273dc84e2012187216c61789d" translate="yes" xml:space="preserve">
          <source>Full page captures and fixed/sticky elements</source>
          <target state="translated">全页面抓取和固定/粘性元素。</target>
        </trans-unit>
        <trans-unit id="034943d6789b4d9a66d1f7cf2a5a8320eb650fa6" translate="yes" xml:space="preserve">
          <source>Full stack code coverage</source>
          <target state="translated">全栈代码覆盖</target>
        </trans-unit>
        <trans-unit id="ad91f657b5019ed1b548b39cdeb2914b715a3155" translate="yes" xml:space="preserve">
          <source>Full version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad82fc5446798eab3d3d1fdaaff1f48decfa74b2" translate="yes" xml:space="preserve">
          <source>Fully Qualified XHR&amp;rsquo;s which should be proxied are now correctly transparently rewritten to prevent CORS problems.</source>
          <target state="translated">现在应该正确透明地重写应代理的完全合格的XHR，以防止CORS问题。</target>
        </trans-unit>
        <trans-unit id="4093edaeaabad68fa8b27b27cf89bc2a6385145f" translate="yes" xml:space="preserve">
          <source>Fully test the login flow &amp;ndash; but only once!</source>
          <target state="translated">全面测试登录流程-但只有一次！</target>
        </trans-unit>
        <trans-unit id="f1e410ad1472b42cb42cc98962428637290b6706" translate="yes" xml:space="preserve">
          <source>Function</source>
          <target state="translated">Function</target>
        </trans-unit>
        <trans-unit id="dbfe0bee331f156c7ece93de6926384c2e325f16" translate="yes" xml:space="preserve">
          <source>Function names</source>
          <target state="translated">功能名称</target>
        </trans-unit>
        <trans-unit id="36cd78d0eb64baf4c627d1e6a9a955d2ec5678d8" translate="yes" xml:space="preserve">
          <source>Function with Arguments</source>
          <target state="translated">带参数的函数</target>
        </trans-unit>
        <trans-unit id="ce82a00dda725a9597e8bcd97e8cf08fdb3c76d6" translate="yes" xml:space="preserve">
          <source>Functional vs visual testing</source>
          <target state="translated">功能测试与视觉测试</target>
        </trans-unit>
        <trans-unit id="2b961dea1dc0c60ddf9a2c8e9d090f6f7d082483" translate="yes" xml:space="preserve">
          <source>Functions</source>
          <target state="translated">Functions</target>
        </trans-unit>
        <trans-unit id="468663fe629e5152ad5be2f4f4d1558cfeb168ab" translate="yes" xml:space="preserve">
          <source>Functions that return a &lt;code&gt;Promise&lt;/code&gt; will automatically be awaited.</source>
          <target state="translated">返回 &lt;code&gt;Promise&lt;/code&gt; 的函数将被自动等待。</target>
        </trans-unit>
        <trans-unit id="33851c1930f54c3f51d08dc5b642a96f9ca8647b" translate="yes" xml:space="preserve">
          <source>Functions that return promises are awaited</source>
          <target state="translated">返回承诺的函数是等待的</target>
        </trans-unit>
        <trans-unit id="8018e4b6436fbf898a5cd266c4d81b923fca90e4" translate="yes" xml:space="preserve">
          <source>Generally the server is responsible for sending responses that reflect some kind of &lt;strong&gt;state&lt;/strong&gt; it holds - generally in a database.</source>
          <target state="translated">通常，服务器负责发送反映其所持有的某种&lt;strong&gt;状态的&lt;/strong&gt;响应-通常在数据库中。</target>
        </trans-unit>
        <trans-unit id="13c8927808b0572155f1b77ea1cae972ef9ce0c0" translate="yes" xml:space="preserve">
          <source>Generate HTTP Archive (HAR) while running tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="715d08a843e5acb7dcfcc8e24b0c0cb0a4d75935" translate="yes" xml:space="preserve">
          <source>Generate the fixture stubs ahead of time</source>
          <target state="translated">提前生成灯具存根。</target>
        </trans-unit>
        <trans-unit id="11a354d7971106c41270317a1366eb5df9e036d7" translate="yes" xml:space="preserve">
          <source>Get &lt;code&gt;length&lt;/code&gt; of title</source>
          <target state="translated">获取标题 &lt;code&gt;length&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5e34727010ea8370b58971d714279bf8c32f0c85" translate="yes" xml:space="preserve">
          <source>Get &lt;code&gt;session_id&lt;/code&gt; cookie after logging in</source>
          <target state="translated">登录后获取 &lt;code&gt;session_id&lt;/code&gt; cookie</target>
        </trans-unit>
        <trans-unit id="ec2c63980222cc97289df6bba1d272938c5fedbe" translate="yes" xml:space="preserve">
          <source>Get A DOM element at a specific index in an array of elements.</source>
          <target state="translated">在一个元素数组的特定索引处获取一个DOM元素。</target>
        </trans-unit>
        <trans-unit id="78c744c3cf42801348368155de7d7cd17259ef6b" translate="yes" xml:space="preserve">
          <source>Get Cookies</source>
          <target state="translated">获取Cookies</target>
        </trans-unit>
        <trans-unit id="69db1095ca8c07057a09db214ec350fd2355c3c7" translate="yes" xml:space="preserve">
          <source>Get Data URL of an image</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c86560c49c46a484a21b0223713a7665b708f1c" translate="yes" xml:space="preserve">
          <source>Get Selector</source>
          <target state="translated">获取选择器</target>
        </trans-unit>
        <trans-unit id="b538f16cde1fda1eece5d2bedbebb8c4337c9821" translate="yes" xml:space="preserve">
          <source>Get a browser cookie by its name.</source>
          <target state="translated">通过其名称获取浏览器cookie。</target>
        </trans-unit>
        <trans-unit id="614bbfebbe46a05ffc8be0b2c0eebb60088ff60b" translate="yes" xml:space="preserve">
          <source>Get a property&amp;rsquo;s value on the previously yielded subject.</source>
          <target state="translated">获取先前产生的主题的属性值。</target>
        </trans-unit>
        <trans-unit id="8ba066fae08fe663607191f346ff763688eef943" translate="yes" xml:space="preserve">
          <source>Get all ancestors of each DOM element in a set of matched DOM elements up to, but not including, the element provided.</source>
          <target state="translated">在一组匹配的DOM元素中获取每个DOM元素的所有祖先,直到但不包括所提供的元素。</target>
        </trans-unit>
        <trans-unit id="d878e7fb89bc9f6dd7e6ac1552c565e8284a506c" translate="yes" xml:space="preserve">
          <source>Get all configuration options</source>
          <target state="translated">获取所有配置选项</target>
        </trans-unit>
        <trans-unit id="1a7e3fd03d2ba22ab645e0ec3b6b252dc9c88e9b" translate="yes" xml:space="preserve">
          <source>Get all configuration options from &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html&quot;&gt;configuration&lt;/a&gt; file (&lt;code&gt;cypress.json&lt;/code&gt; by default)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e226b0bbb6ba1eb6dfa3e1b24fa3ff146eafff2" translate="yes" xml:space="preserve">
          <source>Get all environment variables from configuration file (&lt;code&gt;cypress.json&lt;/code&gt; by default)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="726e1658d3160337c34366924865ffe6f9bdd1ee" translate="yes" xml:space="preserve">
          <source>Get all following siblings of each DOM element in a set of matched DOM elements up to, but not including, the element provided.</source>
          <target state="translated">在一组匹配的DOM元素中,获取每个DOM元素的所有同级元素,直至但不包括所提供的元素。</target>
        </trans-unit>
        <trans-unit id="d7f7fa2095055d8090ee656b4df2a277638eabf8" translate="yes" xml:space="preserve">
          <source>Get all following siblings of each DOM element in a set of matched DOM elements.</source>
          <target state="translated">在一组匹配的DOM元素中获取每个DOM元素的所有后续兄弟姐妹。</target>
        </trans-unit>
        <trans-unit id="7bc2f9f01d4a3efa98a3539f5277214a45b34918" translate="yes" xml:space="preserve">
          <source>Get all of the browser cookies.</source>
          <target state="translated">获取所有的浏览器cookies。</target>
        </trans-unit>
        <trans-unit id="1f3bf71544170547306f07fd6d9e4be1b80dbce9" translate="yes" xml:space="preserve">
          <source>Get all previous siblings of each DOM element in a set of matched DOM elements up to, but not including, the element provided.</source>
          <target state="translated">在一组匹配的DOM元素中获取每个DOM元素之前的所有兄弟姐妹,直到但不包括提供的元素。</target>
        </trans-unit>
        <trans-unit id="7cbe9d7ff598a4b6dddb3f861a89466b797b5779" translate="yes" xml:space="preserve">
          <source>Get all previous siblings of each DOM element in a set of matched DOM elements.</source>
          <target state="translated">在一组匹配的DOM元素中获取每个DOM元素之前的所有兄弟姐妹。</target>
        </trans-unit>
        <trans-unit id="6a1a9dba40d9c4360f21cbb955e0c97b34028a0c" translate="yes" xml:space="preserve">
          <source>Get console logs for commands</source>
          <target state="translated">获取命令的控制台日志</target>
        </trans-unit>
        <trans-unit id="8ac45b30b6141f1393ac1fd70bc7d33985a73084" translate="yes" xml:space="preserve">
          <source>Get cookies after logging in</source>
          <target state="translated">登录后获取cookies</target>
        </trans-unit>
        <trans-unit id="c50f854379ad2f26c21e8143fa041867e87029df" translate="yes" xml:space="preserve">
          <source>Get document and do some work</source>
          <target state="translated">拿到文件,做一些工作</target>
        </trans-unit>
        <trans-unit id="ee42a9f61ba8ac813c6e1d42283792046defabaa" translate="yes" xml:space="preserve">
          <source>Get function as property</source>
          <target state="translated">获取功能为属性</target>
        </trans-unit>
        <trans-unit id="8c624bfeaed069155b4110f7ae0ad280daa90b1e" translate="yes" xml:space="preserve">
          <source>Get in &lt;code&gt;.within()&lt;/code&gt;</source>
          <target state="translated">进入 &lt;code&gt;.within()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="118e802b850a89ccdfde85858dec32f3dcb9ac44" translate="yes" xml:space="preserve">
          <source>Get index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38be7ea66340f5486705b3a39a0da2c3926d86e1" translate="yes" xml:space="preserve">
          <source>Get inputs within a form and submit the form</source>
          <target state="translated">在表单中获取输入并提交表单</target>
        </trans-unit>
        <trans-unit id="bd9422f2aa9f16ac3a1a32184cd458092472011e" translate="yes" xml:space="preserve">
          <source>Get li&amp;rsquo;s within parent</source>
          <target state="translated">让李在父母之内</target>
        </trans-unit>
        <trans-unit id="cbcc8c52c4c250f457df77714f71518914bc7253" translate="yes" xml:space="preserve">
          <source>Get one or more DOM elements by selector or &lt;a href=&quot;../../guides/core-concepts/variables-and-aliases&quot;&gt;alias&lt;/a&gt;.</source>
          <target state="translated">通过选择器或&lt;a href=&quot;../../guides/core-concepts/variables-and-aliases&quot;&gt;别名&lt;/a&gt;获取一个或多个DOM元素。</target>
        </trans-unit>
        <trans-unit id="71050fa99e5dc614f5458e2c868a13aff223e89e" translate="yes" xml:space="preserve">
          <source>Get one or more DOM elements by selector or &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/variables-and-aliases.html&quot;&gt;alias&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e1004041e1a059c6fb1665ffe39fbecfd81bb63" translate="yes" xml:space="preserve">
          <source>Get properties from the &lt;code&gt;onAfterScreenshot&lt;/code&gt; callback</source>
          <target state="translated">从 &lt;code&gt;onAfterScreenshot&lt;/code&gt; 回调获取属性</target>
        </trans-unit>
        <trans-unit id="5de4a2efd44753d384344f594f0e02076ab06b29" translate="yes" xml:space="preserve">
          <source>Get property</source>
          <target state="translated">获取财产</target>
        </trans-unit>
        <trans-unit id="5a778da1ceb2bf7380d32bfb39c3fa08f6b7ebac" translate="yes" xml:space="preserve">
          <source>Get root element</source>
          <target state="translated">获取根元素</target>
        </trans-unit>
        <trans-unit id="4424013cfe8722d25920e58f61b21884fab59ce0" translate="yes" xml:space="preserve">
          <source>Get screenshot info from the &lt;code&gt;onAfterScreenshot&lt;/code&gt; callback</source>
          <target state="translated">从 &lt;code&gt;onAfterScreenshot&lt;/code&gt; 回调获取屏幕截图信息</target>
        </trans-unit>
        <trans-unit id="3f259d00f4bc27a0f4a3394ffade7e812bbfbf47" translate="yes" xml:space="preserve">
          <source>Get sibling DOM elements.</source>
          <target state="translated">获取同级DOM元素。</target>
        </trans-unit>
        <trans-unit id="a5c8bf1a13b7c98b0440c65e229418e8af1765c7" translate="yes" xml:space="preserve">
          <source>Get siblings of element with class &lt;code&gt;active&lt;/code&gt;</source>
          <target state="translated">在 &lt;code&gt;active&lt;/code&gt; 类的情况下获取element的同级</target>
        </trans-unit>
        <trans-unit id="90e40d504340834d9e79a4d800e45283591c5927" translate="yes" xml:space="preserve">
          <source>Get started</source>
          <target state="translated">开始吧</target>
        </trans-unit>
        <trans-unit id="abadd86dc407b8b817bae6800708bbc15c13c777" translate="yes" xml:space="preserve">
          <source>Get the &lt;code&gt;document.title&lt;/code&gt; property of the page that is currently active.</source>
          <target state="translated">获取当前活动页面的 &lt;code&gt;document.title&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="5f19f247800adb8bb9059ef2de19873ef2a100c7" translate="yes" xml:space="preserve">
          <source>Get the &lt;code&gt;length&lt;/code&gt; property of a DOM element</source>
          <target state="translated">获取DOM元素的 &lt;code&gt;length&lt;/code&gt; 属性</target>
        </trans-unit>
        <trans-unit id="cb63d757633ac03e332d40152b359ce165349574" translate="yes" xml:space="preserve">
          <source>Get the &lt;code&gt;user&lt;/code&gt; object of the response&amp;rsquo;s &lt;code&gt;body&lt;/code&gt;</source>
          <target state="translated">获取响应 &lt;code&gt;body&lt;/code&gt; 的 &lt;code&gt;user&lt;/code&gt; 对象</target>
        </trans-unit>
        <trans-unit id="da81c8910d0ff34f3f2b6bdfafe18d4b531eb4a6" translate="yes" xml:space="preserve">
          <source>Get the &lt;code&gt;window.document&lt;/code&gt; of the page that is currently active.</source>
          <target state="translated">获取当前活动页面的 &lt;code&gt;window.document&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="60d973f4293d5ba6c6d9669aadf27ab51323a3ff" translate="yes" xml:space="preserve">
          <source>Get the &lt;code&gt;window&lt;/code&gt; object of the page that is currently active.</source>
          <target state="translated">获取当前处于活动状态的页面的 &lt;code&gt;window&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="72157e5566acdc33186045e8ef45538711fdef56" translate="yes" xml:space="preserve">
          <source>Get the DOM element containing the content.</source>
          <target state="translated">获取包含内容的DOM元素。</target>
        </trans-unit>
        <trans-unit id="00ff576aeb22bef88d930d53413e5e1b6376ee0f" translate="yes" xml:space="preserve">
          <source>Get the DOM element containing the text. DOM elements can contain &lt;em&gt;more&lt;/em&gt; than the desired text and still match. Additionally, Cypress &lt;a href=&quot;#Notes&quot;&gt;prefers some DOM elements&lt;/a&gt; over the deepest element found.</source>
          <target state="translated">获取包含文本的DOM元素。DOM元素可以包含&lt;em&gt;多个&lt;/em&gt;所需文本，并且仍然匹配。此外，赛普拉斯比发现的最深层元素&lt;a href=&quot;#Notes&quot;&gt;更喜欢某些DOM元素&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="54436390ff23b5e34750cfbad8326fd2d5bd7fbe" translate="yes" xml:space="preserve">
          <source>Get the DOM element that is currently focused.</source>
          <target state="translated">获取当前关注的DOM元素。</target>
        </trans-unit>
        <trans-unit id="9c2e34ba559a12ba698f82daaa9b18469e9b89ce" translate="yes" xml:space="preserve">
          <source>Get the DOM elements that match a specific selector.</source>
          <target state="translated">获取符合特定选择器的DOM元素。</target>
        </trans-unit>
        <trans-unit id="5bbecf5096769375f60c7309fa55c045c2ee7d96" translate="yes" xml:space="preserve">
          <source>Get the URL</source>
          <target state="translated">获取网址</target>
        </trans-unit>
        <trans-unit id="9f04b463709b531f2d2db4718e9e438c0459b50b" translate="yes" xml:space="preserve">
          <source>Get the aliased &amp;lsquo;submitBtn&amp;rsquo; element</source>
          <target state="translated">获取别名的&amp;ldquo; submitBtn&amp;rdquo;元素</target>
        </trans-unit>
        <trans-unit id="7fc72a751216ef55861780a2f6f13fad91179f9f" translate="yes" xml:space="preserve">
          <source>Get the aliased &amp;lsquo;todos&amp;rsquo; elements</source>
          <target state="translated">获取别名的&amp;ldquo; todos&amp;rdquo;元素</target>
        </trans-unit>
        <trans-unit id="3cee94b3642e8bd68b14a141a897a02d85ae366d" translate="yes" xml:space="preserve">
          <source>Get the aliased &amp;lsquo;users&amp;rsquo; fixture</source>
          <target state="translated">获取别名的&amp;ldquo;用户&amp;rdquo;装置</target>
        </trans-unit>
        <trans-unit id="4f02da3142df47a50ddc16d28a6d9a538e83b4c9" translate="yes" xml:space="preserve">
          <source>Get the children of each DOM element within a set of DOM elements.</source>
          <target state="translated">获取一组DOM元素中每个DOM元素的子元素。</target>
        </trans-unit>
        <trans-unit id="da562ea984a5a6ff2ed1f866d781219feedbfc48" translate="yes" xml:space="preserve">
          <source>Get the children of the &lt;code&gt;.secondary-nav&lt;/code&gt;</source>
          <target state="translated">获取 &lt;code&gt;.secondary-nav&lt;/code&gt; 的子级</target>
        </trans-unit>
        <trans-unit id="6c7884f05dabc7ceaed23a05226a9da2830cd335" translate="yes" xml:space="preserve">
          <source>Get the children with class &lt;code&gt;active&lt;/code&gt;</source>
          <target state="translated">让班上的孩子们 &lt;code&gt;active&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1ad9349edc6a2083cef2ef42849f9d125e7f9206" translate="yes" xml:space="preserve">
          <source>Get the current URL hash of the page that is currently active.</source>
          <target state="translated">获取当前活动页面的URL哈希值。</target>
        </trans-unit>
        <trans-unit id="905fa0469d43bcf9e018d417724b3101b0d60f46" translate="yes" xml:space="preserve">
          <source>Get the current URL of the page that is currently active.</source>
          <target state="translated">获取当前活动页面的URL。</target>
        </trans-unit>
        <trans-unit id="9d2e7923b125ca989315b8b6abd855b8c8cda526" translate="yes" xml:space="preserve">
          <source>Get the descendent DOM elements of a specific selector.</source>
          <target state="translated">获取特定选择器的下位DOM元素。</target>
        </trans-unit>
        <trans-unit id="e138d85fdf46192ed868043f0071b2f7413a8b6e" translate="yes" xml:space="preserve">
          <source>Get the element that is focused</source>
          <target state="translated">获取被关注的元素</target>
        </trans-unit>
        <trans-unit id="eab5fe184d28c7c2ecf68762c00edbbc093d0afe" translate="yes" xml:space="preserve">
          <source>Get the entire stack trace of failed tests.</source>
          <target state="translated">获取整个失败测试的堆栈跟踪。</target>
        </trans-unit>
        <trans-unit id="6bc616aea4241cff030e7c37715a8854632d06fe" translate="yes" xml:space="preserve">
          <source>Get the first DOM element that matches the selector (whether it be itself or one of its ancestors).</source>
          <target state="translated">获取与选择器相匹配的第一个DOM元素(无论是它本身还是它的一个祖先)。</target>
        </trans-unit>
        <trans-unit id="7e385d52b355d218cf98e4732ef5b18c57dfb75d" translate="yes" xml:space="preserve">
          <source>Get the first DOM element within a set of DOM elements.</source>
          <target state="translated">获取一组DOM元素中的第一个DOM元素。</target>
        </trans-unit>
        <trans-unit id="d5bd99c0258c4b20b204b1c45f46519ce91dd446" translate="yes" xml:space="preserve">
          <source>Get the first list item in a list</source>
          <target state="translated">获取列表中的第一个列表项</target>
        </trans-unit>
        <trans-unit id="f34949909727615718ccda785bec545aabb8fc5b" translate="yes" xml:space="preserve">
          <source>Get the form element and search in its descendants for the content &amp;ldquo;submit the form!&amp;rdquo;</source>
          <target state="translated">获取表单元素，并在其后代中搜索&amp;ldquo;提交表单！&amp;rdquo;的内容。</target>
        </trans-unit>
        <trans-unit id="7392349d6f790052fca9b4d3b42d0f2f1fb25e29" translate="yes" xml:space="preserve">
          <source>Get the global &lt;code&gt;window.location&lt;/code&gt; object of the page that is currently active.</source>
          <target state="translated">获取当前活动页面的全局 &lt;code&gt;window.location&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="efe40729566f375b25917940219aff3660d5d5be" translate="yes" xml:space="preserve">
          <source>Get the immediately following sibling of each DOM element within a set of DOM elements.</source>
          <target state="translated">获取一组DOM元素中每个DOM元素紧接着的兄弟姐妹。</target>
        </trans-unit>
        <trans-unit id="2b1126846a91c4bd5ac0522f41161a995c4ea1ed" translate="yes" xml:space="preserve">
          <source>Get the immediately preceding sibling of each element in a set of the elements.</source>
          <target state="translated">获取元素集合中每个元素的前一个兄弟姐妹。</target>
        </trans-unit>
        <trans-unit id="29c3bb9f9b6534cc0e7895265cb8352947478fb2" translate="yes" xml:space="preserve">
          <source>Get the input element</source>
          <target state="translated">获取输入元素</target>
        </trans-unit>
        <trans-unit id="0c145f6e975793aa3782c7f617231769287b7032" translate="yes" xml:space="preserve">
          <source>Get the input with the &lt;code&gt;.actions-email&lt;/code&gt; class</source>
          <target state="translated">使用 &lt;code&gt;.actions-email&lt;/code&gt; 类获取输入</target>
        </trans-unit>
        <trans-unit id="7701d53ab8276424e3f88d88710d714aa135808f" translate="yes" xml:space="preserve">
          <source>Get the last DOM element within a set of DOM elements.</source>
          <target state="translated">获取一组DOM元素中的最后一个DOM元素。</target>
        </trans-unit>
        <trans-unit id="0a13d53ee9c92eb6cc5de912f365adc402854faf" translate="yes" xml:space="preserve">
          <source>Get the last list item in a list</source>
          <target state="translated">获取列表中最后一个列表项</target>
        </trans-unit>
        <trans-unit id="08a472ad16e7891f22a0739cedc8254734df3848" translate="yes" xml:space="preserve">
          <source>Get the parent DOM element of a set of DOM elements.</source>
          <target state="translated">获取一组DOM元素的父DOM元素。</target>
        </trans-unit>
        <trans-unit id="ee6f72f7615ce64ad8685303ddcaa1d2df52fa1b" translate="yes" xml:space="preserve">
          <source>Get the parent DOM elements of a set of DOM elements.</source>
          <target state="translated">获取一组DOM元素的父DOM元素。</target>
        </trans-unit>
        <trans-unit id="c5949833faa9184e9a9fc0d7e6b997563a690cea" translate="yes" xml:space="preserve">
          <source>Get the parent of the active &lt;code&gt;li&lt;/code&gt;</source>
          <target state="translated">获取活动 &lt;code&gt;li&lt;/code&gt; 的父母</target>
        </trans-unit>
        <trans-unit id="06e6a8cf49fd5e73acb5c7047924312de6542f1e" translate="yes" xml:space="preserve">
          <source>Get the parent with class &lt;code&gt;sub-nav&lt;/code&gt; of all &lt;code&gt;li&lt;/code&gt; elements</source>
          <target state="translated">获取具有所有 &lt;code&gt;li&lt;/code&gt; 元素的class &lt;code&gt;sub-nav&lt;/code&gt; 的父级</target>
        </trans-unit>
        <trans-unit id="2eaea41a35788b4aefba0a72473f89ab1734ecc3" translate="yes" xml:space="preserve">
          <source>Get the parents of the active li</source>
          <target state="translated">获取活动李的父母</target>
        </trans-unit>
        <trans-unit id="4e0d45fd2feaf7dd645a68f04d27cf8f69111d10" translate="yes" xml:space="preserve">
          <source>Get the parents with class &lt;code&gt;main-nav&lt;/code&gt; of the active li</source>
          <target state="translated">取得在职李娜 &lt;code&gt;main-nav&lt;/code&gt; 班的父母</target>
        </trans-unit>
        <trans-unit id="7d3b39240396ab9d1dee1bcb8084eb07e95f7413" translate="yes" xml:space="preserve">
          <source>Get the root DOM element.</source>
          <target state="translated">获取根DOM元素。</target>
        </trans-unit>
        <trans-unit id="b9008603caf292e2e0363feaaea7415ec8278e95" translate="yes" xml:space="preserve">
          <source>Get the root element</source>
          <target state="translated">获取根元素</target>
        </trans-unit>
        <trans-unit id="5d7ca8a40ecaeec2c9e9caed5dad6b68fd0bd9a3" translate="yes" xml:space="preserve">
          <source>Get the root element in a &lt;a href=&quot;within&quot;&gt;&lt;code&gt;.within()&lt;/code&gt;&lt;/a&gt; callback function</source>
          <target state="translated">在&lt;a href=&quot;within&quot;&gt; &lt;code&gt;.within()&lt;/code&gt; &lt;/a&gt;回调函数中获取根元素</target>
        </trans-unit>
        <trans-unit id="e69e38dd0064ed46a8c0e015e5e3d1bbb250dd54" translate="yes" xml:space="preserve">
          <source>Get the siblings of each &lt;code&gt;li&lt;/code&gt;</source>
          <target state="translated">得到每个 &lt;code&gt;li&lt;/code&gt; 的兄弟姐妹</target>
        </trans-unit>
        <trans-unit id="7e035e3b37ff46d424f4ec844dfac619669f8201" translate="yes" xml:space="preserve">
          <source>Get translation data from a YAML file</source>
          <target state="translated">从YAML文件中获取翻译数据</target>
        </trans-unit>
        <trans-unit id="5e90edca4ba776ac79604979eab00c32de2c3843" translate="yes" xml:space="preserve">
          <source>Gets the element &lt;code&gt;.mobile-nav&lt;/code&gt;</source>
          <target state="translated">获取元素 &lt;code&gt;.mobile-nav&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="010b85ad56b34c34c7c2a3b2436c740e30428ed5" translate="yes" xml:space="preserve">
          <source>Getting Started</source>
          <target state="translated">入门</target>
        </trans-unit>
        <trans-unit id="5c9beb9cf6f4471dd715843a254eca97861e4948" translate="yes" xml:space="preserve">
          <source>Getting dataUrl string</source>
          <target state="translated">获取dataUrl字符串</target>
        </trans-unit>
        <trans-unit id="50cf7528f5dddc0bad9e28fd703617a5f39fd683" translate="yes" xml:space="preserve">
          <source>Getting this errors means you&amp;rsquo;ve tried to interact with a &amp;ldquo;dead&amp;rdquo; DOM element - meaning it&amp;rsquo;s been detached or completely removed from the DOM.</source>
          <target state="translated">收到此错误表示您已尝试与&amp;ldquo;死&amp;rdquo; DOM元素进行交互-表示该元素已从DOM分离或完全删除。</target>
        </trans-unit>
        <trans-unit id="6cac413cc1ca2ecd3e244ccdb1d759c2bacc9ff1" translate="yes" xml:space="preserve">
          <source>Git information</source>
          <target state="translated">Git信息</target>
        </trans-unit>
        <trans-unit id="61d9589bd9eca9f4c1edaef9fdf77cb98d356341" translate="yes" xml:space="preserve">
          <source>GitHub Enterprise is currently not supported. Please &lt;a href=&quot;https://docs.cypress.io/cdn-cgi/l/email-protection#e58d8089898aa5869c9597809696cb8c8a&quot;&gt;contact us&lt;/a&gt; if you are interested in Enterprise integration.</source>
          <target state="translated">目前不支持GitHub Enterprise。如果您对企业集成感兴趣，请&lt;a href=&quot;https://docs.cypress.io/cdn-cgi/l/email-protection#e58d8089898aa5869c9597809696cb8c8a&quot;&gt;与我们联系&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="aff159ec522fafdfb4fb97dbfb61a5f564258281" translate="yes" xml:space="preserve">
          <source>GitHub Integration</source>
          <target state="translated">GitHub集成</target>
        </trans-unit>
        <trans-unit id="2dcf2739aea3970bd24b0f5ba2dddd7b33a5a8d2" translate="yes" xml:space="preserve">
          <source>GitHub Integration is dependent on your CI environment reliably providing commit SHA data (typically via an environment variable). This is not a problem for most users, but if you are facing GitHub integration issues with your CI setup, please make sure the git information is being sent properly by following &lt;a href=&quot;../guides/continuous-integration#Git-information&quot;&gt;these guidelines&lt;/a&gt;. If you are still facing issues after this, please &lt;a href=&quot;https://docs.cypress.io/cdn-cgi/l/email-protection#b2dad7dededdf2d1cbc2c0d7c1c19cdbdd&quot;&gt;contact us&lt;/a&gt;.</source>
          <target state="translated">GitHub集成依赖于您的CI环境可靠地提供提交SHA数据（通常通过环境变量）。对于大多数用户而言，这不是问题，但是如果您在CI设置中遇到GitHub集成问题，请确保遵循&lt;a href=&quot;../guides/continuous-integration#Git-information&quot;&gt;以下准则&lt;/a&gt;正确发送了git信息。如果您在此之后仍然遇到问题，请&lt;a href=&quot;https://docs.cypress.io/cdn-cgi/l/email-protection#b2dad7dededdf2d1cbc2c0d7c1c19cdbdd&quot;&gt;与我们联系&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f18456fa25c55a5768acea0dbfb95c47ebafef57" translate="yes" xml:space="preserve">
          <source>GitHub integration</source>
          <target state="translated">GitHub集成</target>
        </trans-unit>
        <trans-unit id="dc63b0e0240e56a49f15e4f20c7da68a0e50ae57" translate="yes" xml:space="preserve">
          <source>GitHub status checks are optional, and can be disabled within a project&amp;rsquo;s GitHub integration settings:</source>
          <target state="translated">GitHub状态检查是可选的，并且可以在项目的GitHub集成设置中禁用：</target>
        </trans-unit>
        <trans-unit id="9a9b09d909186a1ea088b925aea4172596fea7db" translate="yes" xml:space="preserve">
          <source>GitLab</source>
          <target state="translated">GitLab</target>
        </trans-unit>
        <trans-unit id="f079a831cab27bcda7d81cd9b48296d0c3dd92ee" translate="yes" xml:space="preserve">
          <source>Gitlab</source>
          <target state="translated">Gitlab</target>
        </trans-unit>
        <trans-unit id="de9840e2e0ad5f0b4ed3f4f8f935d99a273fdaf3" translate="yes" xml:space="preserve">
          <source>Given a button that we want to interact with:</source>
          <target state="translated">给定一个我们想与之交互的按钮。</target>
        </trans-unit>
        <trans-unit id="7d1b270b98ec03fdb9ae6f4853f43a1e81195b8e" translate="yes" xml:space="preserve">
          <source>Given a user visits &lt;code&gt;https://example.cypress.io&lt;/code&gt;</source>
          <target state="translated">假设用户访问了 &lt;code&gt;https://example.cypress.io&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8b7dbb30a0d9171e0b82a9e0850f90ae943376f5" translate="yes" xml:space="preserve">
          <source>Given that the &lt;code&gt;operationName&lt;/code&gt; property is optional in GraphQL requests, we can &lt;code&gt;alias&lt;/code&gt; with or without this property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d29667835da90fa638612f425739d1585f3fd63c" translate="yes" xml:space="preserve">
          <source>Given the following URLs:</source>
          <target state="translated">鉴于以下网址:</target>
        </trans-unit>
        <trans-unit id="29303fff62321f55c7d6f1c2952ab69b3c10d5ec" translate="yes" xml:space="preserve">
          <source>Given the remote URL, &lt;code&gt;http://localhost:8000/index.html&lt;/code&gt;, all 3 of these assertions are the same.</source>
          <target state="translated">给定远程URL &lt;code&gt;http://localhost:8000/index.html&lt;/code&gt; ，所有这三个断言都是相同的。</target>
        </trans-unit>
        <trans-unit id="c9ce81ebe79a34ad916e0f10c82336b6c0417c7a" translate="yes" xml:space="preserve">
          <source>Given the remote URL, &lt;code&gt;http://localhost:8000/index.html&lt;/code&gt;, these assertions are the same.</source>
          <target state="translated">给定远程URL &lt;code&gt;http://localhost:8000/index.html&lt;/code&gt; ，这些声明是相同的。</target>
        </trans-unit>
        <trans-unit id="5f1184f7df96c5928092ad9c6b550699bf887826" translate="yes" xml:space="preserve">
          <source>Global</source>
          <target state="translated">Global</target>
        </trans-unit>
        <trans-unit id="9b2c45900d277c38ce7727bdb988069b357640ce" translate="yes" xml:space="preserve">
          <source>Global Shortcuts</source>
          <target state="translated">全球捷径</target>
        </trans-unit>
        <trans-unit id="29153039833ad93fe8da4463c8dfd9ea642a76b6" translate="yes" xml:space="preserve">
          <source>Go back in browser&amp;rsquo;s history</source>
          <target state="translated">返回浏览器的历史记录</target>
        </trans-unit>
        <trans-unit id="d4d04da928ea7d145395f5a605ed4ac82f31ff8c" translate="yes" xml:space="preserve">
          <source>Go forward in browser&amp;rsquo;s history</source>
          <target state="translated">前进浏览器的历史记录</target>
        </trans-unit>
        <trans-unit id="5e0cd50da0482af647bdab8539432be67bc288d9" translate="yes" xml:space="preserve">
          <source>Go the &lt;a href=&quot;https://on.cypress.io/dashboard/organizations&quot;&gt;Organizations page&lt;/a&gt; to select the organization you want to associate with an OSS plan. If you have no organizations, you can create one by clicking the &lt;strong&gt;+ Add Organization&lt;/strong&gt; button.</source>
          <target state="translated">进入&amp;ldquo; &lt;a href=&quot;https://on.cypress.io/dashboard/organizations&quot;&gt;组织&amp;rdquo;页面&lt;/a&gt;，选择要与OSS计划关联的组织。如果您没有组织，则可以通过单击&lt;strong&gt;+添加组织&lt;/strong&gt;按钮来创建&lt;strong&gt;组织&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="0422a88129b73584266fdba6436ecad310c2c2b5" translate="yes" xml:space="preserve">
          <source>Go the &lt;a href=&quot;https://on.cypress.io/dashboard/organizations&quot;&gt;Organizations page&lt;/a&gt; to select the organization you want to invite a user to.</source>
          <target state="translated">转到&amp;ldquo; &lt;a href=&quot;https://on.cypress.io/dashboard/organizations&quot;&gt;组织&amp;rdquo;页面&lt;/a&gt;以选择要邀请用户加入的组织。</target>
        </trans-unit>
        <trans-unit id="50fe2f9896b5cfa3174a0747e961599f55e9a6d1" translate="yes" xml:space="preserve">
          <source>Go to &lt;code&gt;File&lt;/code&gt; -&amp;gt; &lt;code&gt;View App Data&lt;/code&gt;</source>
          <target state="translated">转到 &lt;code&gt;File&lt;/code&gt; -&amp;gt; &lt;code&gt;View App Data&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ef97070b66184694477c4c1d1f7e3775a6a88973" translate="yes" xml:space="preserve">
          <source>Go to the &lt;strong&gt;Billing &amp;amp; Usage&lt;/strong&gt; page, and then click on the &lt;strong&gt;Apply for an open source plan&lt;/strong&gt; link at the bottom of the page.</source>
          <target state="translated">转到&amp;ldquo; &lt;strong&gt;账单和使用情况&amp;rdquo;&lt;/strong&gt;页面，然后单击页面底部的&amp;ldquo; &lt;strong&gt;申请开源计划&amp;rdquo;&lt;/strong&gt;链接。</target>
        </trans-unit>
        <trans-unit id="d90837c2ffa1e3a74c04ba28a54937ca132e194b" translate="yes" xml:space="preserve">
          <source>Go to the Dashboard &lt;a href=&quot;https://dashboard.cypress.io/#/organizations&quot;&gt;Organizations page&lt;/a&gt;.</source>
          <target state="translated">转到&amp;ldquo;仪表板&lt;a href=&quot;https://dashboard.cypress.io/#/organizations&quot;&gt;组织&amp;rdquo;页面&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b0c5f3a254f4ca672d762eb0b946cf4ec41e8939" translate="yes" xml:space="preserve">
          <source>Go to the project&amp;rsquo;s &lt;strong&gt;Settings&lt;/strong&gt; page.</source>
          <target state="translated">转到项目的&lt;strong&gt;&amp;ldquo;设置&amp;rdquo;&lt;/strong&gt;页面。</target>
        </trans-unit>
        <trans-unit id="e6c228a4c86735512780e50842464125783195e4" translate="yes" xml:space="preserve">
          <source>Go to the project&amp;rsquo;s settings page.</source>
          <target state="translated">转到项目的设置页面。</target>
        </trans-unit>
        <trans-unit id="0c7d714e91cb5dec0b697e745aac61ae49ffc7fc" translate="yes" xml:space="preserve">
          <source>Go to your organization&amp;rsquo;s projects page.</source>
          <target state="translated">转到您组织的项目页面。</target>
        </trans-unit>
        <trans-unit id="db905633801ba81831ca6ef490064a11a12cbc63" translate="yes" xml:space="preserve">
          <source>Google or SSO (if configured) login is now supported in the Test Runner. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3519&quot;&gt;#3519&lt;/a&gt;.</source>
          <target state="translated">现在，Test Runner支持Google或SSO（如果已配置）登录。地址&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3519&quot;&gt;＃3519&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9016bddfd305a0134827b3dfd7076f8f1d0ee667" translate="yes" xml:space="preserve">
          <source>Grab only the &lt;code&gt;pathname&lt;/code&gt; and add an assertion.</source>
          <target state="translated">仅获取 &lt;code&gt;pathname&lt;/code&gt; 并添加一个断言。</target>
        </trans-unit>
        <trans-unit id="606c2c5478a69e14a2c28edf015d90cb8b64f0bd" translate="yes" xml:space="preserve">
          <source>Grab the URL and&amp;hellip;</source>
          <target state="translated">抓取网址并&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="cb2a7509d3d8ad91fde462b610d43ce1604d70ca" translate="yes" xml:space="preserve">
          <source>Grab the URL.</source>
          <target state="translated">抓住网址。</target>
        </trans-unit>
        <trans-unit id="b8141f065645b4d27c77c60bcbb662968d8aab1f" translate="yes" xml:space="preserve">
          <source>Grab the browser URL, ensure it includes &lt;code&gt;/posts/my-first-post&lt;/code&gt;.</source>
          <target state="translated">抓取浏览器URL，确保它包含 &lt;code&gt;/posts/my-first-post&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="754846ed949aeb4a40716255893a342d2ab41d08" translate="yes" xml:space="preserve">
          <source>Grammar: &amp;lsquo;Login -&amp;gt; Log in&amp;rsquo;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/146&quot;&gt;#146&lt;/a&gt;.</source>
          <target state="translated">语法：&amp;ldquo;登录-&amp;gt;登录&amp;rdquo;。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/146&quot;&gt;＃146&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="22596aa55c61ecc9fa4d622e8d270ad994166133" translate="yes" xml:space="preserve">
          <source>Great for the &lt;em&gt;critical paths&lt;/em&gt; of your application</source>
          <target state="translated">非常适合您的应用程序的&lt;em&gt;关键路径&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1dea506717711a3a808d4dd849a7387ef002c478" translate="yes" xml:space="preserve">
          <source>Great for traditional server-side HTML rendering</source>
          <target state="translated">非常适用于传统的服务器端HTML渲染</target>
        </trans-unit>
        <trans-unit id="f200b907fe9cbc43dee52eef2e65b52b35ab61ee" translate="yes" xml:space="preserve">
          <source>Great for values that need to be checked into source control and remain the same on all machines.</source>
          <target state="translated">对于需要在源码控制中进行检查并在所有机器上保持相同的值来说,这是非常好的。</target>
        </trans-unit>
        <trans-unit id="b7f5c9d43c59a0710631cc2af91b18239e45dd00" translate="yes" xml:space="preserve">
          <source>Great! Everything should still be green.</source>
          <target state="translated">很好!一切都应该还是绿色的。</target>
        </trans-unit>
        <trans-unit id="8f99cc4f5dade89618cb8cd599b9d39c2074f03a" translate="yes" xml:space="preserve">
          <source>Group name has already been used for this run</source>
          <target state="translated">本次运行已经使用了组名</target>
        </trans-unit>
        <trans-unit id="37af3ea62a389951a11e57ad9b9fd4d8a8f3d47b" translate="yes" xml:space="preserve">
          <source>Group recorded tests together under a single run</source>
          <target state="translated">将记录的测试集中到一个运行中</target>
        </trans-unit>
        <trans-unit id="ea0e785ee6d24de70f0616d8f0b45dc98bd8b654" translate="yes" xml:space="preserve">
          <source>Grouping by browser</source>
          <target state="translated">按浏览器分组</target>
        </trans-unit>
        <trans-unit id="917da4b40c1fe1d2de4a4badba93ba4952ec5161" translate="yes" xml:space="preserve">
          <source>Grouping by spec context</source>
          <target state="translated">按规格背景进行分组</target>
        </trans-unit>
        <trans-unit id="e969a6e3de6de600fa464cfb10c71fcede42a6db" translate="yes" xml:space="preserve">
          <source>Grouping test runs</source>
          <target state="translated">分组测试运行</target>
        </trans-unit>
        <trans-unit id="7e7d209f0faef0e503b1528f689b098d74c74aba" translate="yes" xml:space="preserve">
          <source>Grouping to label parallelization</source>
          <target state="translated">分组标记并行化</target>
        </trans-unit>
        <trans-unit id="49f029bc01a7a39f9897aca0208942c0213feec8" translate="yes" xml:space="preserve">
          <source>Guaranteed to work in production</source>
          <target state="translated">保证在生产中发挥作用</target>
        </trans-unit>
        <trans-unit id="7c7b20ed012ae265689f678882bfc339be15feed" translate="yes" xml:space="preserve">
          <source>Guide: Chains of Commands</source>
          <target state="translated">指南。命令链</target>
        </trans-unit>
        <trans-unit id="90755a57130e1338eaaa1d890a9f746fc8101bf6" translate="yes" xml:space="preserve">
          <source>Guide: Introduction to Cypress</source>
          <target state="translated">指南。柏树介绍</target>
        </trans-unit>
        <trans-unit id="ac2601113d60be5641759535a0cbe1066da08e7a" translate="yes" xml:space="preserve">
          <source>Guide: Network Requests</source>
          <target state="translated">指南。网络请求</target>
        </trans-unit>
        <trans-unit id="0a3e35f4c515206f708c2e4ee7169a8fef85c24b" translate="yes" xml:space="preserve">
          <source>Guide: Stubs, Spies and Clocks</source>
          <target state="translated">指南。存根、间谍和时钟</target>
        </trans-unit>
        <trans-unit id="b03b1f909af009439dbbe4f95b24b552b8a24508" translate="yes" xml:space="preserve">
          <source>Guide: Using Closures to compare values</source>
          <target state="translated">指南。使用Closures来比较数值</target>
        </trans-unit>
        <trans-unit id="929a28d261428029e61c0f81c6161fd71ba0b2fe" translate="yes" xml:space="preserve">
          <source>Guides</source>
          <target state="translated">Guides</target>
        </trans-unit>
        <trans-unit id="eb5225848c1dc213f7e015ed498301ce638e7534" translate="yes" xml:space="preserve">
          <source>Guides: Aliases</source>
          <target state="translated">指南。别名</target>
        </trans-unit>
        <trans-unit id="9f738ce8457f291b18ee47e665e96baa84f38fcd" translate="yes" xml:space="preserve">
          <source>HTML</source>
          <target state="translated">HTML</target>
        </trans-unit>
        <trans-unit id="8e47c716e7195739d3b802b578903db7a84e2281" translate="yes" xml:space="preserve">
          <source>HTML fixtures will be prettified and saved back over the original.</source>
          <target state="translated">HTML固定装置将在原有的基础上进行美化和保存。</target>
        </trans-unit>
        <trans-unit id="5d7f586a796b0739316cb35088d091ccdea24ffc" translate="yes" xml:space="preserve">
          <source>HTML form submissions using form option</source>
          <target state="translated">使用表格选项提交HTML表格</target>
        </trans-unit>
        <trans-unit id="19d29c8d4abf2f9577d1b135f72cb313e463241e" translate="yes" xml:space="preserve">
          <source>Hacking on Cypress</source>
          <target state="translated">对赛普拉斯的黑客攻击</target>
        </trans-unit>
        <trans-unit id="b409ffb8a9b2f5025b32b98593bb74bdec8e970f" translate="yes" xml:space="preserve">
          <source>Had the &lt;strong&gt;next page&lt;/strong&gt; not finished its loading phase, Cypress would have ended the test and presented an error.</source>
          <target state="translated">如果&lt;strong&gt;下一页&lt;/strong&gt;未完成其加载阶段，则赛普拉斯将结束测试并出现错误。</target>
        </trans-unit>
        <trans-unit id="9e72d2f8e033b2bc19d2152ced751c57011c59d8" translate="yes" xml:space="preserve">
          <source>Had this request come back with a non &lt;code&gt;2xx&lt;/code&gt; status code such as &lt;code&gt;404&lt;/code&gt; or &lt;code&gt;500&lt;/code&gt;, or if there was a JavaScript error in the application&amp;rsquo;s code, the test would have failed.</source>
          <target state="translated">如果此请求返回非 &lt;code&gt;2xx&lt;/code&gt; 状态代码（例如 &lt;code&gt;404&lt;/code&gt; 或 &lt;code&gt;500&lt;/code&gt; )，或者如果应用程序代码中出现JavaScript错误，则测试将失败。</target>
        </trans-unit>
        <trans-unit id="bdac163073067a04614b1dcd8e54852f9518d989" translate="yes" xml:space="preserve">
          <source>Handle &lt;code&gt;javascripts&lt;/code&gt; and preprocess them as we do regular specs. Fixes: &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/15&quot;&gt;#15&lt;/a&gt;.</source>
          <target state="translated">按照常规规范处理 &lt;code&gt;javascripts&lt;/code&gt; 并对其进行预处理。修复：&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/15&quot;&gt;＃15&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="188b7a520a7805d0985a255f70328bf200fa9b99" translate="yes" xml:space="preserve">
          <source>Handle clearing cookies better when they are created on a path other than &lt;code&gt;/&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/104&quot;&gt;#104&lt;/a&gt;.</source>
          <target state="translated">在 &lt;code&gt;/&lt;/code&gt; 以外的路径上创建cookie时，请更好地处理它们。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/104&quot;&gt;＃104&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1f7d00f3a4411061aa502256c35717937897eb59" translate="yes" xml:space="preserve">
          <source>Handle errors gracefully when Electron window has been closed before paint events happen. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/705&quot;&gt;#705&lt;/a&gt;.</source>
          <target state="translated">在发生绘画事件之前关闭&amp;ldquo;电子&amp;rdquo;窗口时，请妥善处理错误。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/705&quot;&gt;＃705&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="faae97f3e6bab5b1ec96249ffd6499b2f4a81a69" translate="yes" xml:space="preserve">
          <source>Handle relative path segments which walk up past the remote host &lt;code&gt;../../assets/app.css&lt;/code&gt;.</source>
          <target state="translated">处理经过远程主机 &lt;code&gt;../../assets/app.css&lt;/code&gt; 的相对路径段。</target>
        </trans-unit>
        <trans-unit id="87e156fe22633028b26828952fc5a73972531ea3" translate="yes" xml:space="preserve">
          <source>Happo</source>
          <target state="translated">Happo</target>
        </trans-unit>
        <trans-unit id="707f84ef4af310b25865654b98f5ddaeba05cb8e" translate="yes" xml:space="preserve">
          <source>Hardcoded versus using the configuration object</source>
          <target state="translated">硬编码与使用配置对象</target>
        </trans-unit>
        <trans-unit id="e8496604be16d3a97f0c5f4ededacbcf975112e5" translate="yes" xml:space="preserve">
          <source>Harder to test edge cases</source>
          <target state="translated">更难测试边缘情况</target>
        </trans-unit>
        <trans-unit id="314e78d2089598a32c2bc337ea0d65caa5b42212" translate="yes" xml:space="preserve">
          <source>Having Cypress serve your files is useful in simple projects and example apps, but isn&amp;rsquo;t recommended for real apps. It is always better to run your own server and provide the url to Cypress.</source>
          <target state="translated">赛普拉斯提供文件服务在简单的项目和示例应用程序中很有用，但不建议在实际应用程序中使用。最好运行自己的服务器并将URL提供给赛普拉斯。</target>
        </trans-unit>
        <trans-unit id="8732b7ce8d13baf2c7160be90b669808fcc6d15e" translate="yes" xml:space="preserve">
          <source>Having Cypress serve your files is useful in smaller projects and example apps, but isn&amp;rsquo;t recommended for production apps. It is always better to run your own server and provide the url to Cypress.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8fda48fd9a8d610b8e343195c17c7d81420c92b" translate="yes" xml:space="preserve">
          <source>Having a &lt;code&gt;baseUrl&lt;/code&gt; set gives you the added bonus of seeing an error if your server is not running during &lt;code&gt;cypress open&lt;/code&gt; at the specified &lt;code&gt;baseUrl&lt;/code&gt;.</source>
          <target state="translated">有一个 &lt;code&gt;baseUrl&lt;/code&gt; 一套给你，如果你的服务器是不是在运行时看到错误的好处 &lt;code&gt;cypress open&lt;/code&gt; 在指定 &lt;code&gt;baseUrl&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="25521616f15e3679103b7d481184a8e78b0a89d4" translate="yes" xml:space="preserve">
          <source>Having custom commands repeat the same UI actions over and over again is slow, and unnecessary. Try to take as many shortcuts as possible.</source>
          <target state="translated">让自定义命令一遍又一遍地重复相同的UI操作是很慢的,而且没有必要。尽量多走捷径。</target>
        </trans-unit>
        <trans-unit id="dc0ba226241679963d5991ee3e62354ceaed28a9" translate="yes" xml:space="preserve">
          <source>Having issues launching installed browsers? Read more about debugging browser launching</source>
          <target state="translated">在启动已安装的浏览器时遇到问题?阅读更多关于调试浏览器的启动</target>
        </trans-unit>
        <trans-unit id="055729b7e427eb94b8ee19ddc7e72e35d840070b" translate="yes" xml:space="preserve">
          <source>Having tests rely on the state of previous tests</source>
          <target state="translated">让测试依赖于以前的测试状态</target>
        </trans-unit>
        <trans-unit id="e8ffc4a6bcc9a7209b2d269839aeaa55eeffa533" translate="yes" xml:space="preserve">
          <source>Having trouble launching a browser? Check out the debugging guide</source>
          <target state="translated">启动浏览器有问题?查看调试指南</target>
        </trans-unit>
        <trans-unit id="fa3c3dfec6a870589222a61959c35c8dcce4351b" translate="yes" xml:space="preserve">
          <source>Having trouble with browser detection? Check out the debugging guide</source>
          <target state="translated">浏览器检测有问题?查看调试指南</target>
        </trans-unit>
        <trans-unit id="7f06f01af2e5d4df70fedd087311f9448c40f42f" translate="yes" xml:space="preserve">
          <source>Having ultimate control over your application, the network traffic, and native access to every host object unlocks a new way of testing that has never been possible before. Instead of being &amp;lsquo;locked out&amp;rsquo; of your application and not being able to easily control it - Cypress instead lets you alter any aspect of how your application works. Instead of slow and expensive tests, such as creating the state required for a given situation, you can create these states artificially like you would in an unit test. For instance you can:</source>
          <target state="translated">对您的应用程序，网络流量和对每个主机对象的本机访问具有最终控制权，从而开辟了前所未有的新测试方法。赛普拉斯可以让您改变应用程序工作的任何方面，而不是被&amp;ldquo;锁定&amp;rdquo;在您的应用程序之外并且无法轻松地对其进行控制。您可以像在单元测试中一样人为地创建这些状态，而不必进行缓慢而昂贵的测试（例如创建给定情况所需的状态）。例如，您可以：</target>
        </trans-unit>
        <trans-unit id="520de7443d00d6ff4dc3ababbbf6cfbe0b74f4ec" translate="yes" xml:space="preserve">
          <source>Headers</source>
          <target state="translated">Headers</target>
        </trans-unit>
        <trans-unit id="44dbaf5f60ddfa801984c4aeeb5f01f8bc965fe1" translate="yes" xml:space="preserve">
          <source>Headless frame rate is now correctly set to &lt;code&gt;20&lt;/code&gt; instead of resetting back to &lt;code&gt;60&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/303&quot;&gt;#303&lt;/a&gt;.</source>
          <target state="translated">现在，无头帧速率已正确设置为 &lt;code&gt;20&lt;/code&gt; ,而不是重新设置为 &lt;code&gt;60&lt;/code&gt; 。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/303&quot;&gt;＃303&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6d1cfa2466365e73e8806958139027232b06905c" translate="yes" xml:space="preserve">
          <source>Headless running is now fixed in OSX. This was due to a bug with app signing + unzipping via the CLI.</source>
          <target state="translated">现在OSX中已经修复了无头运行的问题。这是由于通过CLI进行应用签名+解压的bug。</target>
        </trans-unit>
        <trans-unit id="9ddaf1ef3557c9098d6fc1c783153f51a6a7072a" translate="yes" xml:space="preserve">
          <source>Height of viewport in pixels (must be a non-negative, finite number).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4d173f2281e941cb96e17520a3bb3be42fbc2cb" translate="yes" xml:space="preserve">
          <source>Height of viewport in pixels (must be between 20 and 3000).</source>
          <target state="translated">视口的高度,以像素为单位(必须在20到3000之间)。</target>
        </trans-unit>
        <trans-unit id="c0a190d8148898dfb82aea5eff410e02e64fc0fc" translate="yes" xml:space="preserve">
          <source>Helpful to have one test around the &lt;em&gt;happy path&lt;/em&gt; of a feature</source>
          <target state="translated">围绕功能的成功&lt;em&gt;路径&lt;/em&gt;进行测试很有帮助</target>
        </trans-unit>
        <trans-unit id="030e3fd531a3dd2a43798fa2da6a512028001bfc" translate="yes" xml:space="preserve">
          <source>Helps test your applications for accessibility issues using axe-core.</source>
          <target state="translated">帮助使用axe-core测试您的应用程序的可访问性问题。</target>
        </trans-unit>
        <trans-unit id="63cb5f5226e20f0479eb88cadff241c34eefe06d" translate="yes" xml:space="preserve">
          <source>Here are args available for the currently supported browsers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14c03d0f56dc3738e282de0c2fa6eb02044ccaf5" translate="yes" xml:space="preserve">
          <source>Here are even more action commands Cypress provides to interact with your app:</source>
          <target state="translated">以下是赛普拉斯提供的更多与您的应用程序互动的操作命令。</target>
        </trans-unit>
        <trans-unit id="814aac263322eca84300fd7b981e83d37036b8a4" translate="yes" xml:space="preserve">
          <source>Here are options for the currently supported browsers:</source>
          <target state="translated">以下是目前支持的浏览器的选项。</target>
        </trans-unit>
        <trans-unit id="8551a7bfd1ffde611a59e8b1641133ada87c9dc0" translate="yes" xml:space="preserve">
          <source>Here are preferences available for the currently supported browsers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d2e29737b3b8e7a7adcbef663631a1191844188" translate="yes" xml:space="preserve">
          <source>Here are some example use cases:</source>
          <target state="translated">下面是一些用例。</target>
        </trans-unit>
        <trans-unit id="d8ffd06a20dfcdd79365aaa53ee7b6a2c44534e0" translate="yes" xml:space="preserve">
          <source>Here are some examples you can do with these events:</source>
          <target state="translated">下面是一些你可以用这些事件做的例子。</target>
        </trans-unit>
        <trans-unit id="b8b78a4f081fb766a8f336f837efb42783a2c1a0" translate="yes" xml:space="preserve">
          <source>Here are some further examples of using &lt;code&gt;.as()&lt;/code&gt; that illustrate the asynchronous behavior.</source>
          <target state="translated">下面是一些使用 &lt;code&gt;.as()&lt;/code&gt; 的示例，它们说明了异步行为。</target>
        </trans-unit>
        <trans-unit id="c013c06c3d685978853ca3d8f7364a4a590ab667" translate="yes" xml:space="preserve">
          <source>Here are some potential workarounds:</source>
          <target state="translated">这里有一些潜在的变通方法。</target>
        </trans-unit>
        <trans-unit id="4ea77d70b27f359afe69803d5da3d579905e6a1a" translate="yes" xml:space="preserve">
          <source>Here are the available download URLs:</source>
          <target state="translated">以下是可用的下载网址。</target>
        </trans-unit>
        <trans-unit id="d31b9a6d1d14349df38c3fea339e2256a8c9a238" translate="yes" xml:space="preserve">
          <source>Here are the available properties on &lt;code&gt;StaticResponse&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cd666f2b9f17d73be1093e69a3dfeeef58b44cb" translate="yes" xml:space="preserve">
          <source>Here are two recipes using both webpack and Browserify to write your tests in TypeScript.</source>
          <target state="translated">这里有两个使用webpack和Browserify在TypeScript中编写测试的配方。</target>
        </trans-unit>
        <trans-unit id="2d7d5d86b4de31868e90f14a2b33271d3d299c09" translate="yes" xml:space="preserve">
          <source>Here is a list of common element assertions. Notice how we use these assertions (listed above) with &lt;a href=&quot;../../api/commands/should&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt;. You may also want to read about how Cypress &lt;a href=&quot;../core-concepts/retry-ability&quot;&gt;retries&lt;/a&gt; assertions.</source>
          <target state="translated">这是常见元素断言的列表。注意我们如何将这些断言（上面列出）与&lt;a href=&quot;../../api/commands/should&quot;&gt; &lt;code&gt;.should()&lt;/code&gt; 一起使用&lt;/a&gt;。您可能还想阅读有关赛普拉斯如何&lt;a href=&quot;../core-concepts/retry-ability&quot;&gt;重试&lt;/a&gt;断言的信息。</target>
        </trans-unit>
        <trans-unit id="5ad1190353ae9da1d76a71d8104c8d1fe7f2dfdf" translate="yes" xml:space="preserve">
          <source>Here is a short test that demonstrates some flake.</source>
          <target state="translated">下面是一个简短的测试,演示了一些峆。</target>
        </trans-unit>
        <trans-unit id="afa416d61c529492dbc90976ea7a74d0b1fc9ab5" translate="yes" xml:space="preserve">
          <source>Here is an example of aliasing routes and then subsequently waiting on them:</source>
          <target state="translated">下面是一个对路由进行别名,然后随后对其进行等待的例子。</target>
        </trans-unit>
        <trans-unit id="51dad279a09b747c179aba04441ea32fb4addc73" translate="yes" xml:space="preserve">
          <source>Here is an example of programmatically running a spec file:</source>
          <target state="translated">下面是一个程序化运行规范文件的例子。</target>
        </trans-unit>
        <trans-unit id="e2e8a7cd2dfdde9b6c69b6c5f115176d1baac676" translate="yes" xml:space="preserve">
          <source>Here is how you can launch Cypress application directly without the npm CLI module. First, find where the binary is installed using the &lt;a href=&quot;command-line#cypress-cache-path&quot;&gt;&lt;code&gt;cypress cache path&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">这是不使用npm CLI模块即可直接启动Cypress应用程序的方法。首先，使用&lt;a href=&quot;command-line#cypress-cache-path&quot;&gt; &lt;code&gt;cypress cache path&lt;/code&gt; &lt;/a&gt;命令查找二进制文件的安装位置。</target>
        </trans-unit>
        <trans-unit id="d14258feb2429db988a8d7509b13beb919384d30" translate="yes" xml:space="preserve">
          <source>Here is our test to confirm that the error is thrown.</source>
          <target state="translated">下面是我们的测试,以确认是否抛出了错误。</target>
        </trans-unit>
        <trans-unit id="80c20760fb3e28f4c6281bac6300036a33118a9e" translate="yes" xml:space="preserve">
          <source>Here is the problem: &lt;strong&gt;there is no guarantee that this code will run.&lt;/strong&gt;</source>
          <target state="translated">这是问题所在：&lt;strong&gt;无法保证此代码将运行。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2f44db513b84502f50769c879707f9e5d550385d" translate="yes" xml:space="preserve">
          <source>Here you will see a &lt;strong&gt;Record Keys&lt;/strong&gt; section</source>
          <target state="translated">在这里，您将看到&amp;ldquo; &lt;strong&gt;记录键&amp;rdquo;&lt;/strong&gt;部分</target>
        </trans-unit>
        <trans-unit id="c16fff170ddf0ae5c454992c749b68f2bd467165" translate="yes" xml:space="preserve">
          <source>Here you will see a section displaying &lt;strong&gt;Access to Runs&lt;/strong&gt;. Choose the appropriate access you&amp;rsquo;d like to assign for the project here.</source>
          <target state="translated">在这里，您将看到显示&lt;strong&gt;运行访问&lt;/strong&gt;的部分。在此处选择您要为该项目分配的适当访问权限。</target>
        </trans-unit>
        <trans-unit id="32e1d7a8806aeac84259628e771eb1a469fc257f" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s 2 ways we can fix this:</source>
          <target state="translated">我们可以通过以下两种方法解决此问题：</target>
        </trans-unit>
        <trans-unit id="55ee5b29e3d5024bc2e87add2856935ae88d33b9" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a great use case for a &lt;code&gt;const&lt;/code&gt;.</source>
          <target state="translated">这是 &lt;code&gt;const&lt;/code&gt; 的一个很好的用例。</target>
        </trans-unit>
        <trans-unit id="9c7425158c4e0010b706a7f38abe9fb6a8b9bedf" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a more robust example:</source>
          <target state="translated">这是一个更可靠的示例：</target>
        </trans-unit>
        <trans-unit id="3651308ec64fa280dbb96d37699802233519856c" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example alongside seeding your database:</source>
          <target state="translated">这是在播种数据库旁边的示例：</target>
        </trans-unit>
        <trans-unit id="fbc40dbabb34c752bd31e2992062533604057d06" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of aliasing a request and accessing its properties later.</source>
          <target state="translated">这是一个别名请求并稍后访问其属性的示例。</target>
        </trans-unit>
        <trans-unit id="898fe3f9aa85a77c3841827bf8d46925f884ed3f" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of aliasing a route and waiting on it to complete.</source>
          <target state="translated">这是对路径进行别名并等待其完成的示例。</target>
        </trans-unit>
        <trans-unit id="02f1cc5d7e8c943c34681b0b497bc1b7998007ac" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example that uses &lt;code&gt;Cypress.env&lt;/code&gt; to access an environment variable that&amp;rsquo;s been &lt;a href=&quot;../../guides/guides/environment-variables#Option-5-Plugins&quot;&gt;dynamically set in a plugin&lt;/a&gt;.</source>
          <target state="translated">这是一个使用 &lt;code&gt;Cypress.env&lt;/code&gt; 来访问已&lt;a href=&quot;../../guides/guides/environment-variables#Option-5-Plugins&quot;&gt;在plugin中动态设置&lt;/a&gt;的环境变量的示例。</target>
        </trans-unit>
        <trans-unit id="3e5126e5981530cde0c62bf77e07d8e123bca185" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example that uses &lt;code&gt;Cypress.env&lt;/code&gt; to access an environment variable that&amp;rsquo;s been &lt;a href=&quot;https://docs.cypress.io/guides/guides/environment-variables.html#Option-5-Plugins&quot;&gt;dynamically set in a plugin&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4a9a5a371b2806648657252f2716891d11fed99" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example that uses the selector to ensure that the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; remains the &lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Subject-Management&quot;&gt;subject&lt;/a&gt; for future chaining.</source>
          <target state="translated">这是一个使用选择器来确保 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 仍然是将来链接&lt;a href=&quot;../../guides/core-concepts/introduction-to-cypress#Subject-Management&quot;&gt;主题&lt;/a&gt;的示例。</target>
        </trans-unit>
        <trans-unit id="3e4ee7188f92ca666a64300d94f9c2907fb465be" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example that uses the selector to ensure that the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; remains the &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/introduction-to-cypress.html#Subject-Management&quot;&gt;subject&lt;/a&gt; for future chaining.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8457e8d4353144ee6edc87554d4672919261fc2" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example using the &lt;code&gt;matchCase&lt;/code&gt; option to ignore case sensitivity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b055900551745b9e56dfba628f57c81d43ad590b" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s another example.</source>
          <target state="translated">这是另一个例子。</target>
        </trans-unit>
        <trans-unit id="e6260cef565ea487eb7d18e2f71bb7879a44efa2" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s what that looks like:</source>
          <target state="translated">看起来像这样：</target>
        </trans-unit>
        <trans-unit id="d8d61e0439e635ed2b26dc3edd9a23512001bc32" translate="yes" xml:space="preserve">
          <source>Highlighting $el&amp;rsquo;s on DOM restore now works again.</source>
          <target state="translated">现在可以再次突出显示$ el在DOM恢复上的功能。</target>
        </trans-unit>
        <trans-unit id="90ccd6497400b5576aeca1bd94af74aae1e0a250" translate="yes" xml:space="preserve">
          <source>History</source>
          <target state="translated">History</target>
        </trans-unit>
        <trans-unit id="c3d2a77fef876d6fdceb5df31f51861be6fa380d" translate="yes" xml:space="preserve">
          <source>Hitbox is no longer covered up by element layers on DOM revert.</source>
          <target state="translated">在DOM还原时,Hitbox不再被元素层覆盖。</target>
        </trans-unit>
        <trans-unit id="a9edd6bc7d4fd9e35b4514d2f2f4982f3fc9d13f" translate="yes" xml:space="preserve">
          <source>Hitboxes are now displayed on the screen based on the actual coordinates where an &lt;code&gt;action command&lt;/code&gt; event took place.</source>
          <target state="translated">现在，根据 &lt;code&gt;action command&lt;/code&gt; 事件发生的实际坐标，将击中框显示在屏幕上。</target>
        </trans-unit>
        <trans-unit id="98a9d3545c337cb4da39acf4ed80e7e6fcad2dec" translate="yes" xml:space="preserve">
          <source>Hmm, weird, why is Cypress only looking at the &lt;em&gt;first&lt;/em&gt; item? Let&amp;rsquo;s hover over the &amp;ldquo;GET .todo-list li&amp;rdquo; command to inspect what &lt;em&gt;that command found&lt;/em&gt;. Ohh, interesting - there was only one item at that moment.</source>
          <target state="translated">嗯，很奇怪，为什么赛普拉斯只看&lt;em&gt;第一个&lt;/em&gt;项目？让我们将鼠标悬停在&amp;ldquo; GET .todo-list li&amp;rdquo;命令上，检查&lt;em&gt;该命令找到了&lt;/em&gt;什么。哦，很有趣-当时只有一项。</target>
        </trans-unit>
        <trans-unit id="52b847f30470700f7ad74d57aea71bd170f96298" translate="yes" xml:space="preserve">
          <source>Hold down modifier key and type a word</source>
          <target state="translated">按住修饰键,输入一个词</target>
        </trans-unit>
        <trans-unit id="9b553bb93a72e5a40a2a4d68c61783f9a8cc09c9" translate="yes" xml:space="preserve">
          <source>Holding modifier keys and clicking an arbitrary element.</source>
          <target state="translated">按住修饰键,点击任意元素。</target>
        </trans-unit>
        <trans-unit id="4bd8f3f03a576b2088bd73a2339d07fca1de805d" translate="yes" xml:space="preserve">
          <source>Hooks</source>
          <target state="translated">Hooks</target>
        </trans-unit>
        <trans-unit id="f6c038aebd335df3d7a2cad9bfbde0df6072568d" translate="yes" xml:space="preserve">
          <source>Host header HTTPS protocol handling fixed.</source>
          <target state="translated">主机头HTTPS协议处理固定。</target>
        </trans-unit>
        <trans-unit id="2159f595c2cbfb912f099f3985daad85d59e037d" translate="yes" xml:space="preserve">
          <source>Hover over the second &amp;ldquo;FIND label&amp;rdquo; command - something is wrong here. It found the &lt;em&gt;first label&lt;/em&gt;, then kept requerying to find the text &amp;ldquo;todo B&amp;rdquo;, but the first item always remains &amp;ldquo;todo A&amp;rdquo;.</source>
          <target state="translated">将鼠标悬停在第二个&amp;ldquo;查找标签&amp;rdquo;命令上-这里有些问题。它找到了&lt;em&gt;第一个标签&lt;/em&gt;，然后继续查询以查找文本&amp;ldquo; todo B&amp;rdquo;，但第一项始终保持为&amp;ldquo; todo A&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="cb0744435dfa3aa876ff9a4a933675ccbfca33e1" translate="yes" xml:space="preserve">
          <source>Hovering on Commands</source>
          <target state="translated">悬停在命令上</target>
        </trans-unit>
        <trans-unit id="1eabf47d874bf62e5c6fcc8434c4d32a1d4d6b61" translate="yes" xml:space="preserve">
          <source>Hovering on commands which delay resolving their $el will now properly highlight again.</source>
          <target state="translated">悬停在延迟解析其$el的命令上,现在将再次正确地突出显示。</target>
        </trans-unit>
        <trans-unit id="140059e62cf126a5e8eb67ead563a9f78d1c4949" translate="yes" xml:space="preserve">
          <source>How Cypress calculates visibility</source>
          <target state="translated">赛普拉斯如何计算可见度</target>
        </trans-unit>
        <trans-unit id="cff8f2b6ae80cde85106bd6af47fc8045914af87" translate="yes" xml:space="preserve">
          <source>How Cypress can record a video of the entire run</source>
          <target state="translated">赛普拉斯如何记录整个运行过程的视频?</target>
        </trans-unit>
        <trans-unit id="98f7e0f748deb1443c93f7bd3659f5a1a3d30245" translate="yes" xml:space="preserve">
          <source>How Cypress captures screenshots of test failures automatically</source>
          <target state="translated">赛普拉斯如何自动捕捉测试失败的截图?</target>
        </trans-unit>
        <trans-unit id="7b51268a03dd2542c0fb37b80bfa207ba156079d" translate="yes" xml:space="preserve">
          <source>How Cypress deals with animating elements</source>
          <target state="translated">赛普拉斯如何处理动画元素</target>
        </trans-unit>
        <trans-unit id="73c01ab5564943d441ac44b574f4de674e11277e" translate="yes" xml:space="preserve">
          <source>How Cypress embraces the standard Developer Tools</source>
          <target state="translated">赛普拉斯如何拥抱标准的开发者工具?</target>
        </trans-unit>
        <trans-unit id="8fe045ca917a598758abb24d99aa57d13ddbf2ab" translate="yes" xml:space="preserve">
          <source>How Cypress enables you to stub out the back end with &lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">赛普拉斯如何使您能够使用&lt;a href=&quot;../../api/commands/route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt;来建立后端</target>
        </trans-unit>
        <trans-unit id="28f4d1cbd51c15bde207780d3c358fc7db90eb47" translate="yes" xml:space="preserve">
          <source>How Cypress ensures elements are actionable</source>
          <target state="translated">赛普拉斯如何确保要素的可操作性</target>
        </trans-unit>
        <trans-unit id="1b7167d8679a0646d51f127bd5e031240090b368" translate="yes" xml:space="preserve">
          <source>How Cypress handles unit tests vs integration tests.</source>
          <target state="translated">Cypress如何处理单元测试与集成测试。</target>
        </trans-unit>
        <trans-unit id="c57acce719c2789c985542d885b453696c112f3e" translate="yes" xml:space="preserve">
          <source>How Cypress improves and extends the included libraries</source>
          <target state="translated">赛普拉斯如何改进和扩展所包含的库?</target>
        </trans-unit>
        <trans-unit id="6b10396109b42dddf93ce216777e847e5695f44f" translate="yes" xml:space="preserve">
          <source>How Cypress manages subjects and chains of commands</source>
          <target state="translated">赛普拉斯如何管理主体和命令链?</target>
        </trans-unit>
        <trans-unit id="f180a802511f5b581b51f2e46acd1bd24af79a21" translate="yes" xml:space="preserve">
          <source>How Cypress queries the DOM</source>
          <target state="translated">赛普拉斯如何查询DOM</target>
        </trans-unit>
        <trans-unit id="981c35f2168978f94f48cf143fdfb9ff4a245dc9" translate="yes" xml:space="preserve">
          <source>How Cypress really looks, Promises wrapped up and hidden from us.</source>
          <target state="translated">赛普拉斯的真实模样,承诺被包裹起来,隐藏在我们身边。</target>
        </trans-unit>
        <trans-unit id="e10734e8c9a0fc14fe97d7dbd378b93088722829" translate="yes" xml:space="preserve">
          <source>How Cypress retries commands and assertions</source>
          <target state="translated">赛普拉斯如何重试命令和断言。</target>
        </trans-unit>
        <trans-unit id="b142ad7f6b12640c3734dd748fc11f92fe06a187" translate="yes" xml:space="preserve">
          <source>How Cypress runs in the same event loop with your code, keeping debugging simple and understandable</source>
          <target state="translated">赛普拉斯如何与你的代码在同一个事件循环中运行,使调试简单易懂。</target>
        </trans-unit>
        <trans-unit id="d5369cf5312cd1c730e69e1fc331935705756e74" translate="yes" xml:space="preserve">
          <source>How Cypress visualizes network management in the Command Log</source>
          <target state="translated">赛普拉斯如何在命令日志中实现网络管理的可视化?</target>
        </trans-unit>
        <trans-unit id="d0079e400a6f4000574481fcd130b5cd82f63366" translate="yes" xml:space="preserve">
          <source>How It Works:</source>
          <target state="translated">它是如何工作的。</target>
        </trans-unit>
        <trans-unit id="b46ab0d4570fbb1a5ca62c3033583841a8f96810" translate="yes" xml:space="preserve">
          <source>How and when to use &lt;code&gt;debugger&lt;/code&gt; and the shorthand &lt;a href=&quot;../../api/commands/debug&quot;&gt;&lt;code&gt;.debug()&lt;/code&gt;&lt;/a&gt; command</source>
          <target state="translated">如何以及何时使用 &lt;code&gt;debugger&lt;/code&gt; 和简写&lt;a href=&quot;../../api/commands/debug&quot;&gt; &lt;code&gt;.debug()&lt;/code&gt; &lt;/a&gt;命令</target>
        </trans-unit>
        <trans-unit id="49881af9699516c6a6558ae5dd5eec081ab2d8bb" translate="yes" xml:space="preserve">
          <source>How do I create conditional control flow, using if/else? So that if an element does (or doesn&amp;rsquo;t) exist, I choose what to do?</source>
          <target state="translated">如何使用if / else创建条件控制流？这样，如果一个元素存在（或不存在），我会选择做什么？</target>
        </trans-unit>
        <trans-unit id="372621e6b633f9d84b19ba805f9e2fbec1ae747c" translate="yes" xml:space="preserve">
          <source>How do I do something different whether an element does or doesn&amp;rsquo;t exist?</source>
          <target state="translated">元素是否存在，我该怎么做？</target>
        </trans-unit>
        <trans-unit id="0a49f83912b71e85fae4e76c66882324a13f1211" translate="yes" xml:space="preserve">
          <source>How do I know which assertions change the subject and which keep it the same?</source>
          <target state="translated">我怎么知道哪些论断改变了主题,哪些保持不变?</target>
        </trans-unit>
        <trans-unit id="00f9c3604f08898f1e08ed93bce13a0d1411a6c2" translate="yes" xml:space="preserve">
          <source>How its architecture differs from Selenium</source>
          <target state="translated">其架构与Selenium有何不同</target>
        </trans-unit>
        <trans-unit id="132403fdba9d78b8045faf2e2c5cc508eb092a07" translate="yes" xml:space="preserve">
          <source>How load-balancing of tests works</source>
          <target state="translated">测试的负载均衡是如何工作的</target>
        </trans-unit>
        <trans-unit id="bbf98f9c894056a391916093f06903fc49846d50" translate="yes" xml:space="preserve">
          <source>How timeouts are applied to commands</source>
          <target state="translated">超时如何应用到命令中</target>
        </trans-unit>
        <trans-unit id="da8fae9447fe19ebdeb8ae975828566266254e85" translate="yes" xml:space="preserve">
          <source>How to address some situations of flaky tests</source>
          <target state="translated">如何解决一些片状测试的情况</target>
        </trans-unit>
        <trans-unit id="260a7f6e2a1ad10ec946c518fa4beb0f2d672e80" translate="yes" xml:space="preserve">
          <source>How to avoid using Cypress commands inside the interceptor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e71c52eead19906a2492efc4bd5b92583210cdd" translate="yes" xml:space="preserve">
          <source>How to configure Cypress in various CI Providers</source>
          <target state="translated">如何在各种CI供应商中配置Cypress?</target>
        </trans-unit>
        <trans-unit id="9a56bc7c5d7b1ecf09734a8224808953e3b05f11" translate="yes" xml:space="preserve">
          <source>How to configure Cypress to fit your app</source>
          <target state="translated">如何配置Cypress以适应你的应用?</target>
        </trans-unit>
        <trans-unit id="a0b378f73f0f4518bb983f109061a3ff22f297b2" translate="yes" xml:space="preserve">
          <source>How to control time for deterministically testing code that is time-dependent</source>
          <target state="translated">如何控制时间,对时间依赖的确定性测试代码进行测试。</target>
        </trans-unit>
        <trans-unit id="02b3fb7ffd5593e72dfb603e73bb9a57a96752e2" translate="yes" xml:space="preserve">
          <source>How to deal with async commands</source>
          <target state="translated">如何处理异步命令</target>
        </trans-unit>
        <trans-unit id="f66605d25a8bfd0d115bd6d1b42ccc4f86c7805d" translate="yes" xml:space="preserve">
          <source>How to ensure the application is in consistent state before capturing an image</source>
          <target state="translated">如何确保应用程序在捕捉图像之前处于一致的状态。</target>
        </trans-unit>
        <trans-unit id="77bd6674b1750fe89d903d4f784bcdb5cf958b52" translate="yes" xml:space="preserve">
          <source>How to group test runs</source>
          <target state="translated">如何对测试运行进行分组</target>
        </trans-unit>
        <trans-unit id="dc6052655c56f0bae7ec0d677c90f4b9ce3e2160" translate="yes" xml:space="preserve">
          <source>How to group your tests.</source>
          <target state="translated">如何分组测试。</target>
        </trans-unit>
        <trans-unit id="70c94122258de8649c8010375de8724b7add48ec" translate="yes" xml:space="preserve">
          <source>How to implement visual diffing yourself or using 3rd party service</source>
          <target state="translated">如何自己或使用第三方服务实现可视化差异化。</target>
        </trans-unit>
        <trans-unit id="7d7acff91f253ba335e9f67889ba5612c75bc9a0" translate="yes" xml:space="preserve">
          <source>How to install Cypress via &lt;code&gt;npm&lt;/code&gt;</source>
          <target state="translated">如何通过 &lt;code&gt;npm&lt;/code&gt; 安装赛普拉斯</target>
        </trans-unit>
        <trans-unit id="ad67610bccbd4f212f29cc9823f64e01be5c5db9" translate="yes" xml:space="preserve">
          <source>How to install Cypress via direct download</source>
          <target state="translated">如何通过直接下载安装Cypress</target>
        </trans-unit>
        <trans-unit id="533e17da057d6e632957f697a3cc32fdb0e3d64c" translate="yes" xml:space="preserve">
          <source>How to instrument your application code</source>
          <target state="translated">如何检测您的应用程序代码</target>
        </trans-unit>
        <trans-unit id="d56068d31cf6be5e49f64d6297eef0d2c9a5c0fc" translate="yes" xml:space="preserve">
          <source>How to launch other browsers</source>
          <target state="translated">如何启动其他浏览器</target>
        </trans-unit>
        <trans-unit id="319e419a30937e110cd5ba93f243dacd330155de" translate="yes" xml:space="preserve">
          <source>How to manually capture your own screenshot</source>
          <target state="translated">如何手动抓取自己的截图</target>
        </trans-unit>
        <trans-unit id="a12165bfb64939baa28efd2ae15c75035db16e20" translate="yes" xml:space="preserve">
          <source>How to organize your test and support files.</source>
          <target state="translated">如何组织你的测试和支持文件。</target>
        </trans-unit>
        <trans-unit id="2180548f9b8e093d6ab6325745bf5a2b4b9e389a" translate="yes" xml:space="preserve">
          <source>How to overwrite interceptors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="214aead2e6bb7098443cbbceee1088718ba01f86" translate="yes" xml:space="preserve">
          <source>How to parallelize test runs</source>
          <target state="translated">如何并行化测试运行</target>
        </trans-unit>
        <trans-unit id="41c573870ffb28ced2e266b4948b9efd24a1969b" translate="yes" xml:space="preserve">
          <source>How to record tests to the Cypress Dashboard</source>
          <target state="translated">如何将测试记录到Cypress Dashboard上?</target>
        </trans-unit>
        <trans-unit id="2e449514a73dc442141c813cdcd8a5da9ed1a7ed" translate="yes" xml:space="preserve">
          <source>How to record your tests to the Dashboard</source>
          <target state="translated">如何将测试记录到仪表板上</target>
        </trans-unit>
        <trans-unit id="1ab12406f23cc0752954752e43e98eaa8e51f38a" translate="yes" xml:space="preserve">
          <source>How to run Cypress from the command line</source>
          <target state="translated">如何从命令行运行Cypress</target>
        </trans-unit>
        <trans-unit id="ba28329c678d85633b092a0e1760fc11414f7f6b" translate="yes" xml:space="preserve">
          <source>How to run Cypress tests in Continuous Integration</source>
          <target state="translated">如何在持续集成中运行Cypress测试</target>
        </trans-unit>
        <trans-unit id="52686d06a85bb4796e486179d006eb003335ea55" translate="yes" xml:space="preserve">
          <source>How to run commands</source>
          <target state="translated">如何运行命令</target>
        </trans-unit>
        <trans-unit id="15f76dee5fe4b6fb3ccb13b71d9ffb59de2c7579" translate="yes" xml:space="preserve">
          <source>How to run tests in parallel on CI</source>
          <target state="translated">如何在CI上并行运行测试</target>
        </trans-unit>
        <trans-unit id="3702157431f18e379d0ee0eedb4513a9e9488381" translate="yes" xml:space="preserve">
          <source>How to save the coverage information collected during end-to-end and unit tests</source>
          <target state="translated">如何保存在端到端和单元测试中收集到的覆盖率信息?</target>
        </trans-unit>
        <trans-unit id="a1e454e6bb2abae199bd697d732b7d4e29a52ac6" translate="yes" xml:space="preserve">
          <source>How to solve this:</source>
          <target state="translated">如何解决这个问题。</target>
        </trans-unit>
        <trans-unit id="a36e8c559ce303daa9e93c0b472f314af94760dd" translate="yes" xml:space="preserve">
          <source>How to specify which spec files to run</source>
          <target state="translated">如何指定要运行的规格文件</target>
        </trans-unit>
        <trans-unit id="ac500decf432728061d52221cabcb835b49d2f52" translate="yes" xml:space="preserve">
          <source>How to start testing a new project in Cypress.</source>
          <target state="translated">如何在Cypress中开始测试一个新项目。</target>
        </trans-unit>
        <trans-unit id="766c761536f469ed6b1c06015fa4eda589687e14" translate="yes" xml:space="preserve">
          <source>How to troubleshoot issues with Cypress itself</source>
          <target state="translated">如何排除赛普拉斯本身的问题?</target>
        </trans-unit>
        <trans-unit id="99400be5514ca12cc3021d96a8b553856f2a4257" translate="yes" xml:space="preserve">
          <source>How to use Aliases for objects, elements and routes</source>
          <target state="translated">如何为对象、元素和路径使用别名?</target>
        </trans-unit>
        <trans-unit id="54423de5a4a7aee9ab14f3d88c1c523c6c7a31c5" translate="yes" xml:space="preserve">
          <source>How to use Aliases to refer back to XHR requests and wait on them</source>
          <target state="translated">如何使用别名来引用XHR请求并等待他们</target>
        </trans-unit>
        <trans-unit id="42e7d8607c5b0624835a1e06031c28f5d6b15ff4" translate="yes" xml:space="preserve">
          <source>How to use Fixtures to reuse XHR responses</source>
          <target state="translated">如何使用Fixtures来重用XHR响应。</target>
        </trans-unit>
        <trans-unit id="2897439c203386b13d5a87c7bec5f3007b9be90b" translate="yes" xml:space="preserve">
          <source>How to use spies for asserting that code was called without interfering with its execution</source>
          <target state="translated">如何使用间谍来断言代码被调用而不影响其执行?</target>
        </trans-unit>
        <trans-unit id="a7049b5ec4b6c139dd416508c50b29993e7f16c1" translate="yes" xml:space="preserve">
          <source>How to use stubs for asserting that code was called but preventing it from executing</source>
          <target state="translated">如何使用存根来断言代码被调用,但防止代码执行。</target>
        </trans-unit>
        <trans-unit id="3aa5b629cbffa563a339dd2d2dc71c6721c9ec3f" translate="yes" xml:space="preserve">
          <source>How to use the Selector Playground for targeting your page elements</source>
          <target state="translated">如何使用选择器游乐场来定位你的页面元素?</target>
        </trans-unit>
        <trans-unit id="94d1dd7f0cc3137fbd7a7ae32f865d7c0cc198b3" translate="yes" xml:space="preserve">
          <source>How to use the code coverage reports to guide writing tests</source>
          <target state="translated">如何使用代码覆盖率报告来指导编写测试?</target>
        </trans-unit>
        <trans-unit id="60ce170130b69c84ea581cd6de78335987bef241" translate="yes" xml:space="preserve">
          <source>How to version and run Cypress via &lt;code&gt;package.json&lt;/code&gt;</source>
          <target state="translated">如何通过 &lt;code&gt;package.json&lt;/code&gt; 版本和运行Cypress</target>
        </trans-unit>
        <trans-unit id="0888c50c0d8d24b5720ec4abaee88531f08b3281" translate="yes" xml:space="preserve">
          <source>How to write declarative tests that resist flake</source>
          <target state="translated">如何编写抗flake的声明式测试?</target>
        </trans-unit>
        <trans-unit id="033b5a2e9eaf93b31bc883d97b83f6fd10b16e3d" translate="yes" xml:space="preserve">
          <source>How visual testing complements functional testing</source>
          <target state="translated">视觉测试如何补充功能测试</target>
        </trans-unit>
        <trans-unit id="02f0a3edfc8f45214f63d9154a007e7cf395f82b" translate="yes" xml:space="preserve">
          <source>How will we get access to &lt;code&gt;text&lt;/code&gt;?</source>
          <target state="translated">我们如何获得 &lt;code&gt;text&lt;/code&gt; ？</target>
        </trans-unit>
        <trans-unit id="4605d5b8f0d728b0e3cee5dbb5634635d807da5a" translate="yes" xml:space="preserve">
          <source>How you can bypass these checks and force events</source>
          <target state="translated">如何绕过这些检查和强制事件</target>
        </trans-unit>
        <trans-unit id="151c3817bac809b932840aefb9d1e0a7f9b85b8e" translate="yes" xml:space="preserve">
          <source>How you choose to edit the configuration is up to you. You don&amp;rsquo;t have to read off of the file system - you could store them all in memory inside of your &lt;code&gt;pluginsFile&lt;/code&gt; if you wanted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02502caf66d61fb2be12437276c4b60307546155" translate="yes" xml:space="preserve">
          <source>How you choose to organize multiple configurations and sets of environment variables is up to you. You don&amp;rsquo;t even have to read off of the file system - you could store them all in memory inside of your &lt;code&gt;pluginsFile&lt;/code&gt; if you wanted to.</source>
          <target state="translated">您如何选择组织多个配置和环境变量集取决于您。您甚至不必读取文件系统-如果需要，可以将它们全部存储在 &lt;code&gt;pluginsFile&lt;/code&gt; 内部的内存中。</target>
        </trans-unit>
        <trans-unit id="fd493ca6987aa63de9b538e19f69d051270f9fb9" translate="yes" xml:space="preserve">
          <source>How you choose to organize your configuration and environment variables is up to you.</source>
          <target state="translated">如何选择组织你的配置和环境变量取决于你。</target>
        </trans-unit>
        <trans-unit id="461e2656ef40aa6157b9664a2d21d9e574e08ed1" translate="yes" xml:space="preserve">
          <source>How you should rewrite those tests:</source>
          <target state="translated">你应该如何重写这些测试。</target>
        </trans-unit>
        <trans-unit id="d20898a161ddbf96b9db433f2d38a63402c62cb1" translate="yes" xml:space="preserve">
          <source>However - there is likely still a balance here where &lt;strong&gt;both&lt;/strong&gt; strategies are valid (and you should likely do them).</source>
          <target state="translated">但是，在&lt;strong&gt;这两种&lt;/strong&gt;策略均有效的情况下，您仍然可能会保持平衡（您应该这样做）。</target>
        </trans-unit>
        <trans-unit id="cececcb38a71e217c8c57055fb4e98ffd9e27176" translate="yes" xml:space="preserve">
          <source>However between tests, when a new test runs, the previous configuration is restored to a clean state. No configuration leaks between tests.</source>
          <target state="translated">然而在测试之间,当一个新的测试运行时,之前的配置会被恢复到一个干净的状态。在测试之间不会出现配置泄露的情况。</target>
        </trans-unit>
        <trans-unit id="c087602b2a65d508bc58fee8aea5154febb22693" translate="yes" xml:space="preserve">
          <source>However it &lt;strong&gt;is possible&lt;/strong&gt; to synchronize Cypress with another back end process - whether it is Selenium or Puppeteer to drive a 2nd open browser. We have actually seen this work together quite nicely!</source>
          <target state="translated">但是，&lt;strong&gt;可以&lt;/strong&gt;将Cypress与另一个后端进程进行同步-驱动第二个打开的浏览器的是Selenium还是Puppeteer。实际上，我们已经很好地看到了这项工作！</target>
        </trans-unit>
        <trans-unit id="7a7354c68d1ef513a1d7a089414b2acca1f54421" translate="yes" xml:space="preserve">
          <source>However, Cypress additionally handles situations where a child descendent is clicked inside of a focusable parent, but actually isn&amp;rsquo;t visually inside the parent (per the CSS Object Model). In those cases if no focusable parent is found the window is given focus instead (which matches real browser behavior).</source>
          <target state="translated">但是，赛普拉斯还可以处理以下情况：在可聚焦的父级内部单击子级后代，但实际上在视觉上不在父级内部（根据CSS对象模型）。在这些情况下，如果找不到可聚焦的父对象，则将窗口赋予焦点（与实际的浏览器行为匹配）。</target>
        </trans-unit>
        <trans-unit id="f0ed85983e964dde15e6f765dec196a041a3843f" translate="yes" xml:space="preserve">
          <source>However, if you&amp;rsquo;re running this script locally you&amp;rsquo;ll have to do a bit more work to collect the backgrounded PID and then kill it after &lt;code&gt;cypress run&lt;/code&gt;.</source>
          <target state="translated">但是，如果您在本地运行此脚本，则必须做更多的工作来收集后台的PID，然后在 &lt;code&gt;cypress run&lt;/code&gt; 之后将其杀死。</target>
        </trans-unit>
        <trans-unit id="3914ed8564f7fd77a505db78605705cf5c194a64" translate="yes" xml:space="preserve">
          <source>However, in most modern applications these days - when the &lt;code&gt;load&lt;/code&gt; event occurs, usually nothing has rendered on the screen. It is usually at this moment that your scripts begin to load dynamic content and begin to render asynchronously.</source>
          <target state="translated">但是，在当今大多数现代应用程序中- 发生 &lt;code&gt;load&lt;/code&gt; 事件时，通常在屏幕上什么都没有呈现。通常，此时您的脚本开始加载动态内容并开始异步呈现。</target>
        </trans-unit>
        <trans-unit id="282b28b735370a1c4b9379de32a065f5c2895985" translate="yes" xml:space="preserve">
          <source>However, passing &lt;code&gt;{ force: true }&lt;/code&gt; to &lt;code&gt;.select()&lt;/code&gt; will not override the actionability checks for selecting a disabled &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; or an option within a disabled &lt;code&gt;&amp;lt;optgroup&amp;gt;&lt;/code&gt;. See &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/107&quot;&gt;this issue&lt;/a&gt; for more detail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e068c156b2cb3f2a2e53be32d569f5fda08694fe" translate="yes" xml:space="preserve">
          <source>However, some chainers change the subject. In the example below, &lt;code&gt;.and()&lt;/code&gt; yields the string &lt;code&gt;sans-serif&lt;/code&gt; because the chainer &lt;code&gt;have.css, 'font-family'&lt;/code&gt; changes the subject.</source>
          <target state="translated">但是，一些链接器改变了主题。在下面的示例中， &lt;code&gt;.and()&lt;/code&gt; 生成字符串 &lt;code&gt;sans-serif&lt;/code&gt; ,因为 &lt;code&gt;have.css, 'font-family'&lt;/code&gt; 更改了主题。</target>
        </trans-unit>
        <trans-unit id="2b1f8dc2a11c7c62c74c4284423b8a751303d2c0" translate="yes" xml:space="preserve">
          <source>However, some chainers change the subject. In the example below, the second &lt;code&gt;.should()&lt;/code&gt; yields the string &lt;code&gt;sans-serif&lt;/code&gt; because the chainer &lt;code&gt;have.css, 'font-family'&lt;/code&gt; changes the subject.</source>
          <target state="translated">但是，一些链接器改变了主题。在下面的示例中，第二个 &lt;code&gt;.should()&lt;/code&gt; 会产生字符串 &lt;code&gt;sans-serif&lt;/code&gt; ,因为链接器具有 &lt;code&gt;have.css, 'font-family'&lt;/code&gt; 更改了主题。</target>
        </trans-unit>
        <trans-unit id="c552e3bdb8492fc795ec03270d9e2edd9a83a4ae" translate="yes" xml:space="preserve">
          <source>However, the truth is, Cypress is exposing a &lt;em&gt;security vulnerability&lt;/em&gt; in your application, and you &lt;em&gt;want&lt;/em&gt; it to fail in Cypress.</source>
          <target state="translated">但是，事实是，赛普拉斯正在您的应用程序中暴露一个&lt;em&gt;安全漏洞&lt;/em&gt;，并且您&lt;em&gt;希望&lt;/em&gt;它在赛普拉斯中失败。</target>
        </trans-unit>
        <trans-unit id="ece4690dc1b2e81429250810375309fb4c1c11b3" translate="yes" xml:space="preserve">
          <source>However, this is really the same question as asking to do conditional testing just wrapped up in a slightly different implementation detail.</source>
          <target state="translated">不过,这其实和要求做条件测试的问题是一样的,只是在实现细节上略有不同。</target>
        </trans-unit>
        <trans-unit id="98a86db69b9f4f568d2e36b4b993880fd23e8567" translate="yes" xml:space="preserve">
          <source>However, this pattern can be used and abused. Let&amp;rsquo;s not forget - writing Cypress tests is &lt;strong&gt;JavaScript&lt;/strong&gt;, and it&amp;rsquo;s often more efficient to write a function for repeatable behavior that&amp;rsquo;s specific to only &lt;strong&gt;a single spec file&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d9ad91ce02b94a8159554d3425d61b0345d6e1f" translate="yes" xml:space="preserve">
          <source>However, this pattern can be used and abused. Let&amp;rsquo;s not forget - writing Cypress tests is just &lt;strong&gt;JavaScript&lt;/strong&gt;, and it&amp;rsquo;s often much easier just to write a simple function for repeatable behavior that&amp;rsquo;s specific to only &lt;strong&gt;a single spec file&lt;/strong&gt;.</source>
          <target state="translated">但是，可以使用和滥用此模式。别忘了-编写Cypress测试只是&lt;strong&gt;JavaScript&lt;/strong&gt;，而编写一个简单的函数来实现可重复的行为（通常仅&lt;strong&gt;针对单个spec文件）&lt;/strong&gt;通常要容易得多。</target>
        </trans-unit>
        <trans-unit id="cfea422d4e353dbc7cc51c67487cf026e7b09f3c" translate="yes" xml:space="preserve">
          <source>However, you &lt;strong&gt;do not&lt;/strong&gt; need to use environment variables to point to the origin and domain under test. Use &lt;code&gt;baseUrl&lt;/code&gt; instead of environment variables.</source>
          <target state="translated">但是，你&lt;strong&gt;不要&lt;/strong&gt;需要使用环境变量来至原点和域下的测试。使用 &lt;code&gt;baseUrl&lt;/code&gt; 而不是环境变量。</target>
        </trans-unit>
        <trans-unit id="5377a652000c5e4f2f6018179613a7ceec5d4e9e" translate="yes" xml:space="preserve">
          <source>However, you should &lt;strong&gt;never&lt;/strong&gt; use your UI or visit a 3rd party site when testing because:</source>
          <target state="translated">但是，在进行测试时，&lt;strong&gt;切勿&lt;/strong&gt;使用UI或访问第三方网站，因为：</target>
        </trans-unit>
        <trans-unit id="5d64a118b93be94aed704de801aa20887064339c" translate="yes" xml:space="preserve">
          <source>Href Shorthand</source>
          <target state="translated">Href速记</target>
        </trans-unit>
        <trans-unit id="040c22753068d31072a21010509a9ec7b7bca81b" translate="yes" xml:space="preserve">
          <source>Human-readable display name for the browser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3c199e83de5b1cdbb7e9d488cfe670ba8306ffa" translate="yes" xml:space="preserve">
          <source>I am trying to write dynamic tests that do something different based on the text on the page.</source>
          <target state="translated">我正在尝试编写动态测试,根据页面上的文本做一些不同的事情。</target>
        </trans-unit>
        <trans-unit id="a4ff058f4f8d43027ba07b7a2b8347f5eac0ac6b" translate="yes" xml:space="preserve">
          <source>I want to automatically find all &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; elements and based on which ones I find, I want to check that each link works.</source>
          <target state="translated">我想自动查找所有 &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 元素，并根据找到的元素，检查每个链接是否有效。</target>
        </trans-unit>
        <trans-unit id="1f632660ea9c7f61c79bdcc98d1bbcd62192d3b6" translate="yes" xml:space="preserve">
          <source>I&amp;rsquo;m trying to test a chat application. Can I run more than one browser at a time with Cypress?</source>
          <target state="translated">我正在尝试测试聊天应用程序。赛普拉斯可以同时运行多个浏览器吗？</target>
        </trans-unit>
        <trans-unit id="e373cdbb97766e004ffd13cfeb8d5ad0a3558402" translate="yes" xml:space="preserve">
          <source>Identical to &lt;a href=&quot;then&quot;&gt;&lt;code&gt;.then()&lt;/code&gt;&lt;/a&gt;, but always expects an array-like structure as its subject.</source>
          <target state="translated">与&lt;a href=&quot;then&quot;&gt; &lt;code&gt;.then()&lt;/code&gt; &lt;/a&gt;相同，但始终希望将类似数组的结构作为其主题。</target>
        </trans-unit>
        <trans-unit id="9d2c7063088793c055fe015d3841d0cc2df8e788" translate="yes" xml:space="preserve">
          <source>Identification</source>
          <target state="translated">Identification</target>
        </trans-unit>
        <trans-unit id="4073341c254aad93eaa68ffa307f829ae4cdba47" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;cy.hover()&lt;/code&gt; is used, an error will display and redirect you to this page.</source>
          <target state="translated">如果使用 &lt;code&gt;cy.hover()&lt;/code&gt; ，将显示错误并将您重定向到此页面。</target>
        </trans-unit>
        <trans-unit id="e7c07ae5597941ec98ed24852c7197dc22dc1c60" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;cy.intercept()&lt;/code&gt; provides a response object, or a fixture, or calls &lt;code&gt;req.reply()&lt;/code&gt; then the request will NOT go to the server, and instead will be mocked from the test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80ab8047683c551b55320e61086e9cc54a10edca" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;req.reply()&lt;/code&gt; is not explicitly called inside of a route callback, requests will pass to the next route callback until none are left.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7f1d4be4f9f7630bd0da38ea3bd8628e0fb96a4" translate="yes" xml:space="preserve">
          <source>If Cypress cannot determine the host it will throw an error.</source>
          <target state="translated">如果Cypress不能确定主机,就会出现错误。</target>
        </trans-unit>
        <trans-unit id="108195455e83f85b78ae28041a8ca9ef29acc92e" translate="yes" xml:space="preserve">
          <source>If I had error handling, I could just try to find X and if X fails go find Y</source>
          <target state="translated">如果我有错误处理功能,我可以试着找X,如果X失败了就去找Y。</target>
        </trans-unit>
        <trans-unit id="b9dc667d39beee3b0041eaa0efa4df413c650f0c" translate="yes" xml:space="preserve">
          <source>If I should always use data attributes, then when should I use &lt;code&gt;cy.contains()&lt;/code&gt;?</source>
          <target state="translated">如果我应该始终使用数据属性，那么何时应使用 &lt;code&gt;cy.contains()&lt;/code&gt; ？</target>
        </trans-unit>
        <trans-unit id="b970ebbac48b6821d2a09c1467c1cf6efb6dece7" translate="yes" xml:space="preserve">
          <source>If X, then Y, else Z</source>
          <target state="translated">如果X,则Y,否则Z</target>
        </trans-unit>
        <trans-unit id="7b119c466fcbd63e66770502c44eb530db83e46c" translate="yes" xml:space="preserve">
          <source>If a &lt;em&gt;child&lt;/em&gt; of the element is covering it - that&amp;rsquo;s okay. In fact we&amp;rsquo;ll automatically issue the events we fire to that child.</source>
          <target state="translated">如果该元素的一个&lt;em&gt;子&lt;/em&gt;元素覆盖了它-没关系。实际上，我们会自动向该孩子发出触发的事件。</target>
        </trans-unit>
        <trans-unit id="2bec4ecf6de25aec67c10ab97d2a2a2f9be96f78" translate="yes" xml:space="preserve">
          <source>If a &lt;strong&gt;&lt;code&gt;StaticResponse&lt;/code&gt; object&lt;/strong&gt; is passed, requests to the route will be fulfilled with a response using the values supplied in the &lt;code&gt;StaticResponse&lt;/code&gt;. A &lt;code&gt;StaticResponse&lt;/code&gt; can define the body of the response, as well as the headers, HTTP status code, and more. See &lt;a href=&quot;#With-a-StaticResponse-object&quot;&gt;Stubbing a response with a `StaticResponse` object&lt;/a&gt; for an example of how this is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0616b70dba24f254be973c7ed75e89bd4c3a86dd" translate="yes" xml:space="preserve">
          <source>If a &lt;strong&gt;function callback&lt;/strong&gt; is passed, it will be called whenever a request matching this route is received, with the first parameter being the request object. From inside the callback, you can modify the outgoing request, send a response, access the real response, and much more. See &lt;a href=&quot;#Intercepting-a-request&quot;&gt;Intercepting a request&lt;/a&gt; and &lt;a href=&quot;#Intercepting-a-response&quot;&gt;Intercepting a response&lt;/a&gt; for examples of dynamic interception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3738a635c5ba991abf5ef63240778cc5a70259cd" translate="yes" xml:space="preserve">
          <source>If a &lt;strong&gt;string&lt;/strong&gt; is passed, requests to the route will be fulfilled with that string as the body. Passing &lt;code&gt;&quot;foo&quot;&lt;/code&gt; is equivalent to using a &lt;code&gt;StaticResponse&lt;/code&gt; object with &lt;code&gt;{ body: &quot;foo&quot; }&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3778295f0cff9ca75237cdd8fe3964feb4eece1" translate="yes" xml:space="preserve">
          <source>If a Promise is returned from the route callback, it will be awaited before continuing with the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afb2daad94f94302177f187ada89621da51cb213" translate="yes" xml:space="preserve">
          <source>If a Promise is returned from the route callback, it will be awaited before sending the response to the browser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="154c454bda4162e086691c63fa24404ceb70d1f2" translate="yes" xml:space="preserve">
          <source>If a URL is passed to &lt;a href=&quot;../../api/commands/route&quot;&gt;&lt;code&gt;cy.route()&lt;/code&gt;&lt;/a&gt; containing percent-encoded characters, we now display a warning explaining that &lt;code&gt;cy.route()&lt;/code&gt; expects a decoded URL. Addresses &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2372&quot;&gt;#2372&lt;/a&gt;.</source>
          <target state="translated">如果将URL传递给包含百分比编码字符的&lt;a href=&quot;../../api/commands/route&quot;&gt; &lt;code&gt;cy.route()&lt;/code&gt; &lt;/a&gt;，我们现在将显示一条警告，说明 &lt;code&gt;cy.route()&lt;/code&gt; 需要解码的URL。地址&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/2372&quot;&gt;＃2372&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1753f8abfe2054727c73c297a51073fe562e58a0" translate="yes" xml:space="preserve">
          <source>If a page loads after a &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt; times out it will no longer cause an exception in the &lt;code&gt;onBeforeLoad&lt;/code&gt; handler.</source>
          <target state="translated">如果页面在&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;超时后加载，它将不再在 &lt;code&gt;onBeforeLoad&lt;/code&gt; 处理程序中引起异常。</target>
        </trans-unit>
        <trans-unit id="d109a402f7aa1766081593fb085e44ea657a4ced" translate="yes" xml:space="preserve">
          <source>If a request doesn&amp;rsquo;t match any route then the behavior depends on the value of the &lt;code&gt;force404&lt;/code&gt; option on the &lt;a href=&quot;server&quot;&gt;&lt;code&gt;cy.server()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">如果请求与任何路由都不匹配，则行为取决于&lt;a href=&quot;server&quot;&gt; &lt;code&gt;cy.server()&lt;/code&gt; &lt;/a&gt;上 &lt;code&gt;force404&lt;/code&gt; 选项的值：</target>
        </trans-unit>
        <trans-unit id="b0100c8e4ddc90a7aff71eada8600b58f1b7f3f4" translate="yes" xml:space="preserve">
          <source>If a site&amp;rsquo;s &lt;code&gt;content-type&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;undefined&lt;/code&gt; or cannot be determined during &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt;, we now look at the content of the site and evaluate whether it looks like HTML. If it does look like HTML we no longer error and continue as if it the site&amp;rsquo;s &lt;code&gt;content-type&lt;/code&gt; is &lt;code&gt;text/html&lt;/code&gt;. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1727&quot;&gt;#1727&lt;/a&gt;&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/773&quot;&gt;#773&lt;/a&gt;&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3101&quot;&gt;#3101&lt;/a&gt;.</source>
          <target state="translated">如果站点的 &lt;code&gt;content-type&lt;/code&gt; 为 &lt;code&gt;null&lt;/code&gt; ， &lt;code&gt;undefined&lt;/code&gt; 或无法在&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;期间确定，则我们现在查看站点的内容并评估其外观是否类似于HTML。如果它看起来确实像HTML，则我们不再出错，并且继续进行操作，就好像该站点的 &lt;code&gt;content-type&lt;/code&gt; 是 &lt;code&gt;text/html&lt;/code&gt; 一样。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1727&quot;&gt;＃1727 &lt;/a&gt;&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/773&quot;&gt;＃773 &lt;/a&gt;&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3101&quot;&gt;＃3101&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="534d9f03898c74831b7e79a73bb8c268fe8940d1" translate="yes" xml:space="preserve">
          <source>If an &lt;strong&gt;object with no &lt;code&gt;StaticResponse&lt;/code&gt; keys&lt;/strong&gt; is passed, it will be sent as a JSON response body. For example, passing &lt;code&gt;{ foo: 'bar' }&lt;/code&gt; is equivalent to passing &lt;code&gt;{ body: { foo: 'bar' } }&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1162ad9192a81bb19247dc40e2267035c1cb5b3f" translate="yes" xml:space="preserve">
          <source>If an application takes a while to start, it might &amp;ldquo;signal&amp;rdquo; its readiness by setting a property that Cypress can wait for.</source>
          <target state="translated">如果应用程序需要花一些时间才能启动，则它可能会通过设置Cypress可以等待的属性来&amp;ldquo;发出信号&amp;rdquo;使其准备就绪。</target>
        </trans-unit>
        <trans-unit id="003378de06f395a1df16b48dcbbd88dc955ebc3d" translate="yes" xml:space="preserve">
          <source>If an error occurs during &lt;code&gt;cypress verify&lt;/code&gt;, we now kill the verification process after 10 seconds and print the error message. This should prevent some situations where Cypress would hang during installation or verification and never exit. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/819&quot;&gt;#819&lt;/a&gt;.</source>
          <target state="translated">如果在 &lt;code&gt;cypress verify&lt;/code&gt; 期间发生错误，我们现在将在10秒后终止验证过程并打印错误消息。这样可以避免在某些情况下赛普拉斯会在安装或验证过程中挂起并且永远不会退出。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/819&quot;&gt;＃819&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="87492befc664d37679d463959dddbe8a5122f9f1" translate="yes" xml:space="preserve">
          <source>If an uppercase and a lowercase version of the proxy settings are supplied (for example, &lt;code&gt;HTTP_PROXY&lt;/code&gt; and &lt;code&gt;http_proxy&lt;/code&gt; are both set), the lowercase variable will be preferred.</source>
          <target state="translated">如果提供了代理设置的大写和小写版本（例如，同时设置了 &lt;code&gt;HTTP_PROXY&lt;/code&gt; 和 &lt;code&gt;http_proxy&lt;/code&gt; ），则首选小写变量。</target>
        </trans-unit>
        <trans-unit id="b59523ab5ea3b305436d65b83bac76bf92dbb554" translate="yes" xml:space="preserve">
          <source>If any of an element&amp;rsquo;s parent&amp;rsquo;s overflow is &amp;lsquo;hidden&amp;rsquo;, we now calculate if the element is outside of the boundaries of that parent element and validate visibility assertions accordingly. This may cause some tests that were previously passing to now accurately fail. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/410&quot;&gt;#410&lt;/a&gt;.</source>
          <target state="translated">如果某个元素的父级上溢中的任何一个被&amp;ldquo;隐藏&amp;rdquo;，我们现在计算该元素是否在该父级元素的边界之外，并相应地验证可见性声明。这可能会导致以前通过的某些测试现在准确地失败。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/410&quot;&gt;＃410&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3509bab7a88736566e6c11e7f82d6711b1b4bb77" translate="yes" xml:space="preserve">
          <source>If built-in assertions are not enough, you can easily write your own assertion function and pass it as a callback to the &lt;code&gt;.should()&lt;/code&gt; command. Cypress will automatically &lt;a href=&quot;../core-concepts/retry-ability&quot;&gt;retry&lt;/a&gt; the callback function until it passes or the command times out. See the &lt;a href=&quot;../../api/commands/should#Function&quot;&gt;&lt;code&gt;.should()&lt;/code&gt;&lt;/a&gt; documentation.</source>
          <target state="translated">如果内置断言还不够，您可以轻松地编写自己的断言函数并将其作为回调传递给 &lt;code&gt;.should()&lt;/code&gt; 命令。赛普拉斯将自动&lt;a href=&quot;../core-concepts/retry-ability&quot;&gt;重试&lt;/a&gt;回调函数，直到它通过或命令超时为止。请参阅&lt;a href=&quot;../../api/commands/should#Function&quot;&gt; &lt;code&gt;.should()&lt;/code&gt; &lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="d4db028f339ba6881ac24e86ae72bf1514a2f9f7" translate="yes" xml:space="preserve">
          <source>If for some reason this new page errors Cypress will display the initial 500 error messages just like &lt;a href=&quot;../../api/commands/visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果由于某种原因此新页面错误，Cypress将显示最初的500条错误消息，就像&lt;a href=&quot;../../api/commands/visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; 一样&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8edd03621e98d5ed7e5b578879fc3050eab14a47" translate="yes" xml:space="preserve">
          <source>If going forward or back causes a full page refresh, Cypress will wait for the new page to load before moving on to new commands.</source>
          <target state="translated">如果前进或后退会导致整个页面刷新,赛普拉斯将等待新页面加载后再继续执行新命令。</target>
        </trans-unit>
        <trans-unit id="c61904f70fabc710476e07aa51b2f8c182efb85c" translate="yes" xml:space="preserve">
          <source>If isolated to the Electron browser. Run the same tests in both Electron and Chrome, then compare the screenshots/videos. Look for and isolate any differences in the Command Log.</source>
          <target state="translated">如果隔离在Electron浏览器上。在Electron和Chrome浏览器中运行相同的测试,然后比较屏幕截图/视频。寻找并隔离命令日志中的任何差异。</target>
        </trans-unit>
        <trans-unit id="019fa6ae9d87fdc48efc05c7f5b6b34bf50e30d9" translate="yes" xml:space="preserve">
          <source>If multiple screenshots are taken during a test that will result in the same filename, their file paths are now appended with a number, i.e. &lt;code&gt;test name (1).png&lt;/code&gt;. This prevents screenshot files with the same name from being overwritten. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1766&quot;&gt;#1766&lt;/a&gt;.</source>
          <target state="translated">如果在测试期间拍摄了多个屏幕截图，这些截图将导致相同的文件名，则其文件路径现在将附加一个数字，即 &lt;code&gt;test name (1).png&lt;/code&gt; 。这样可以防止覆盖相同名称的屏幕快照文件。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/1766&quot;&gt;＃1766&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="48f21d21b635b05f7218a084eb7b7474b0d00544" translate="yes" xml:space="preserve">
          <source>If multiple task objects use the same key, the later registration will overwrite that particular key, just like merging multiple objects with duplicate keys will overwrite the first one.</source>
          <target state="translated">如果多个任务对象使用同一个键,后面的注册会覆盖这个特定的键,就像合并多个重复键的对象会覆盖第一个键一样。</target>
        </trans-unit>
        <trans-unit id="1a7feafa943f17ac46557e57457f1578d825c644" translate="yes" xml:space="preserve">
          <source>If multiple task objects use the same key, the later registration will overwrite that particular key, similar to how merging multiple objects with duplicate keys will overwrite the first one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f386e0d8fe5e0a3f3e67dae8088114a0ce832f4" translate="yes" xml:space="preserve">
          <source>If my machine is Windows 64bit, I will click on the &amp;ldquo;Testing new win32 x64 &amp;hellip;&amp;rdquo; commit and run the command below.</source>
          <target state="translated">如果我的计算机是Windows 64位操作系统，则单击&amp;ldquo;测试新的win32 x64&amp;hellip;&amp;rdquo;提交，然后运行以下命令。</target>
        </trans-unit>
        <trans-unit id="8911843b2af6a7d71759e08877aa807eaf58b2a8" translate="yes" xml:space="preserve">
          <source>If no method is defined Cypress will match &lt;code&gt;GET&lt;/code&gt; requests by default.</source>
          <target state="translated">如果未定义任何方法，则赛普拉斯将默认匹配 &lt;code&gt;GET&lt;/code&gt; 请求。</target>
        </trans-unit>
        <trans-unit id="fb1514fb2bf2748c7d457fbc378637318c9ca3c1" translate="yes" xml:space="preserve">
          <source>If possible, we advise implementing &lt;a href=&quot;visual-testing&quot;&gt;visual testing&lt;/a&gt; in addition to Cypress functional tests to avoid CSS and visual regressions.</source>
          <target state="translated">如果可能，我们建议除赛普拉斯功能测试之外还进行&lt;a href=&quot;visual-testing&quot;&gt;视觉测试&lt;/a&gt;，以避免CSS和视觉回归。</target>
        </trans-unit>
        <trans-unit id="5693a5394cd0c32d5fca2f5d0ca482c3825e92b4" translate="yes" xml:space="preserve">
          <source>If status checks are enabled within a project&amp;rsquo;s GitHub integration settings, the Cypress Dashboard will report Cypress test statuses to GitHub for related commits. &lt;a href=&quot;https://help.github.com/en/articles/about-status-checks&quot;&gt;Status checks&lt;/a&gt; help prevent merging a commit or pull-request into the rest of your codebase until all your Cypress tests have passed.</source>
          <target state="translated">如果在项目的GitHub集成设置中启用了状态检查，则Cypress仪表板会将Cypress测试状态报告给GitHub以进行相关的提交。&lt;a href=&quot;https://help.github.com/en/articles/about-status-checks&quot;&gt;状态检查&lt;/a&gt;有助于防止在所有赛普拉斯测试都通过之前将提交或请求合并到代码库的其余部分中。</target>
        </trans-unit>
        <trans-unit id="0470903e8ea33127f36709cbe3a4e684b3fa3a2d" translate="yes" xml:space="preserve">
          <source>If that&amp;rsquo;s the case, don&amp;rsquo;t worry - you can work around it with &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; is special because it is &lt;strong&gt;NOT bound to CORS or same-origin policy&lt;/strong&gt;.</source>
          <target state="translated">如果是这种情况，请不用担心-您可以使用&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt;解决它。&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt;很特殊，因为它&lt;strong&gt;不受CORS或同源策略限制&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="f00015b725815345d742ff4cfd425cdaaec401c8" translate="yes" xml:space="preserve">
          <source>If the DOM element provided to &lt;a href=&quot;../../api/commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; is already in focus, Cypress no longer attempts to click on the DOM element. This allows you to call &lt;code&gt;.focus()&lt;/code&gt; on elements that are focusable, but not necessarily clickable and type into them using &lt;code&gt;.type()&lt;/code&gt;. Fixes &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3001&quot;&gt;#3001&lt;/a&gt; and &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4420&quot;&gt;#4420&lt;/a&gt;.</source>
          <target state="translated">如果提供给&lt;a href=&quot;../../api/commands/type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;的DOM元素已经成为焦点，则Cypress不再尝试单击DOM元素。这使您可以在可聚焦但不一定可单击的元素上调用 &lt;code&gt;.focus()&lt;/code&gt; ，并使用 &lt;code&gt;.type()&lt;/code&gt; 对其进行键入。修复&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/3001&quot;&gt;＃3001&lt;/a&gt;和&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/4420&quot;&gt;＃4420&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="05a60dc94de55f0f21f7b65bb0c1793834f5c2c8" translate="yes" xml:space="preserve">
          <source>If the HTML contains a &lt;a href=&quot;https://en.wikipedia.org/wiki/Non-breaking_space&quot;&gt;non-breaking space&lt;/a&gt; entity &lt;code&gt;&amp;amp;nbsp;&lt;/code&gt; and the test uses the &lt;a href=&quot;https://api.jquery.com/contains-selector/&quot;&gt;jQuery :contains&lt;/a&gt; selector, then the test needs to use the Unicode value &lt;code&gt;\u00a0&lt;/code&gt; instead of &lt;code&gt;&amp;amp;nbsp;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9442152579bbaca4a152c5f96f083415fe21dd3" translate="yes" xml:space="preserve">
          <source>If the answer is &lt;strong&gt;no&lt;/strong&gt; because the text could be changed - then use &lt;a href=&quot;../../api/commands/get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; with data attributes. Changing the text to &lt;code&gt;Save&lt;/code&gt; would then not cause a test failure.</source>
          <target state="translated">如果答案是&lt;strong&gt;否定的，&lt;/strong&gt;因为可以更改文本，请使用&lt;a href=&quot;../../api/commands/get&quot;&gt; &lt;code&gt;cy.get()&lt;/code&gt; &lt;/a&gt;和数据属性。将文本更改为 &lt;code&gt;Save&lt;/code&gt; 不会导致测试失败。</target>
        </trans-unit>
        <trans-unit id="eb9073e63299a65bb50a13c26e05b60303111f2c" translate="yes" xml:space="preserve">
          <source>If the answer is &lt;strong&gt;yes&lt;/strong&gt; because the word &lt;code&gt;Submit&lt;/code&gt; is critical and should not be changed - then use &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt; to target the element. This way, if it is changed, the test will fail.</source>
          <target state="translated">如果答案是&lt;strong&gt;肯定的，&lt;/strong&gt;因为&amp;ldquo; &lt;code&gt;Submit&lt;/code&gt; &amp;rdquo;一词很关键，不应更改-请使用&lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; &lt;/a&gt;定位该元素。这样，如果更改，测试将失败。</target>
        </trans-unit>
        <trans-unit id="7c6208086921680f3ab3b5e099a8391aa7505f99" translate="yes" xml:space="preserve">
          <source>If the answer is no: then use a data attribute.</source>
          <target state="translated">如果答案是否定的:那就使用数据属性。</target>
        </trans-unit>
        <trans-unit id="176a981f849e1e80afda3010fdd17ca4de01f357" translate="yes" xml:space="preserve">
          <source>If the answer is yes: then use &lt;a href=&quot;../../api/commands/contains&quot;&gt;&lt;code&gt;cy.contains()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">如果答案是肯定的，则使用&lt;a href=&quot;../../api/commands/contains&quot;&gt; &lt;code&gt;cy.contains()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7c3d99d8c672ed0f9a58631c763050ee1404649b" translate="yes" xml:space="preserve">
          <source>If the application sets a custom property, like:</source>
          <target state="translated">如果应用程序设置了一个自定义属性,比如。</target>
        </trans-unit>
        <trans-unit id="a316af8049ce3ef58aa334d9b420904143029a18" translate="yes" xml:space="preserve">
          <source>If the commit information is missing in the Dashboard run then &lt;a href=&quot;../dashboard/github-integration&quot;&gt;GitHub Integration&lt;/a&gt; or other tasks might not work correctly. To see the relevant Cypress debug logs, set the environment variable &lt;code&gt;DEBUG&lt;/code&gt; on your CI machine and inspect the terminal output to see why the commit information is unavailable.</source>
          <target state="translated">如果Dashboard运行中缺少提交信息，则&lt;a href=&quot;../dashboard/github-integration&quot;&gt;GitHub Integration&lt;/a&gt;或其他任务可能无法正常工作。要查看相关的赛普拉斯调试日志， &lt;code&gt;DEBUG&lt;/code&gt; 在CI机器上设置环境变量DEBUG并检查终端输出以查看为什么提交信息不可用。</target>
        </trans-unit>
        <trans-unit id="87a064679b505fb4f43803ff8692c40151512b84" translate="yes" xml:space="preserve">
          <source>If the content of the element &lt;strong&gt;changed&lt;/strong&gt; would you want the test to fail?</source>
          <target state="translated">如果元素的内容&lt;strong&gt;更改了&lt;/strong&gt;，您是否希望测试失败？</target>
        </trans-unit>
        <trans-unit id="33f9944f451d168727113ae38f9ff940547f9483" translate="yes" xml:space="preserve">
          <source>If the element is currently not in focus, before issuing any keystrokes Cypress will first issue a &lt;a href=&quot;click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; to the element to bring it into focus.</source>
          <target state="translated">如果该元素当前未处于焦点，则在发出任何按键之前，赛普拉斯将首先向该元素发出&lt;a href=&quot;click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt;以使其成为焦点。</target>
        </trans-unit>
        <trans-unit id="bb08d23caa0ce128551b1591fbe53b1485f5d721" translate="yes" xml:space="preserve">
          <source>If the form&amp;rsquo;s &lt;code&gt;submit&lt;/code&gt; event is &lt;code&gt;preventedDefault&lt;/code&gt; the form will not actually be submitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cba85eb42a78a04cd0f5fcd7cb354510b97c3c09" translate="yes" xml:space="preserve">
          <source>If the hover behavior depends on a JavaScript event like &lt;code&gt;mouseover&lt;/code&gt;, you can trigger the event to achieve that behavior.</source>
          <target state="translated">如果悬停行为取决于诸如 &lt;code&gt;mouseover&lt;/code&gt; 之类的JavaScript事件，则可以触发该事件以实现该行为。</target>
        </trans-unit>
        <trans-unit id="c69d8aa449aad6940de5679c36384ec0910135c1" translate="yes" xml:space="preserve">
          <source>If the machine is encoding the video slowly (which is often the case for virtual machines that use a single core), the encoding might take a long time. In this case, you can modify the &lt;a href=&quot;../references/configuration#Videos&quot;&gt;&lt;code&gt;videoCompression&lt;/code&gt;&lt;/a&gt; configuration to make the encoding a little bit faster. Here are some common scenarios:</source>
          <target state="translated">如果计算机正在缓慢地对视频进行编码（对于使用单核的虚拟机通常是这种情况），则编码可能会花费很长时间。在这种情况下，您可以修改&lt;a href=&quot;../references/configuration#Videos&quot;&gt; &lt;code&gt;videoCompression&lt;/code&gt; &lt;/a&gt;配置以加快编码速度。以下是一些常见方案：</target>
        </trans-unit>
        <trans-unit id="281cd2310510ca7dc670ea99f125208e5de2f4ff" translate="yes" xml:space="preserve">
          <source>If the mousedown event has its default action prevented (&lt;code&gt;e.preventDefault()&lt;/code&gt;) then the element will not receive focus as per the spec.</source>
          <target state="translated">如果mousedown事件的默认操作被阻止（ &lt;code&gt;e.preventDefault()&lt;/code&gt; ），则该元素将不会按照规范获得焦点。</target>
        </trans-unit>
        <trans-unit id="7d95bd4923a76dfc8a1341411e5f28006de450fc" translate="yes" xml:space="preserve">
          <source>If the path to the file does not exist, the file and its path will be created. If the file already exists, it will be over-written.</source>
          <target state="translated">如果文件的路径不存在,将创建文件及其路径。如果文件已经存在,将被覆盖。</target>
        </trans-unit>
        <trans-unit id="e59562e13c4c4576a50916d6f64e01ee0edc6d71" translate="yes" xml:space="preserve">
          <source>If the problem is seen during &lt;code&gt;cypress open&lt;/code&gt; you can print debug logs in the browser too. Open the browser&amp;rsquo;s Developer Tools and set a &lt;code&gt;localStorage&lt;/code&gt; property:</source>
          <target state="translated">如果在 &lt;code&gt;cypress open&lt;/code&gt; 期间发现问题，您也可以在浏览器中打印调试日志。打开浏览器的开发人员工具并设置 &lt;code&gt;localStorage&lt;/code&gt; 属性：</target>
        </trans-unit>
        <trans-unit id="5b1450f978b16536cdfe1e9955befeb5389a0e9f" translate="yes" xml:space="preserve">
          <source>If the server takes a very long time to start, we recommend trying the &lt;a href=&quot;https://github.com/bahmutov/start-server-and-test&quot;&gt;start-server-and-test&lt;/a&gt; module.</source>
          <target state="translated">如果服务器启动时间很长，建议您尝试&lt;a href=&quot;https://github.com/bahmutov/start-server-and-test&quot;&gt;启动服务器并测试&lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="0df65981151eafdb0359a584156434e4a653f8ad" translate="yes" xml:space="preserve">
          <source>If the smoke test fails to execute, check if a shared library is missing (a common problem on Linux machines without all of the Cypress dependencies present).</source>
          <target state="translated">如果烟雾测试无法执行,请检查是否缺少一个共享库(在没有所有Cypress依赖项的Linux机器上,这是一个常见的问题)。</target>
        </trans-unit>
        <trans-unit id="3638d0b781a21c150d0b8e80ad4c8466d13bf479" translate="yes" xml:space="preserve">
          <source>If the state you are trying to clean lives on the server - by all means, clean that state. You will need to run these types of routines! But if the state is related to your application currently under test - you likely do not even need to clear it.</source>
          <target state="translated">如果你想清理的状态在服务器上--通过各种手段,清理那个状态。你将需要运行这些类型的例程! 但如果该状态与你当前正在测试的应用程序有关--你可能根本不需要清除它。</target>
        </trans-unit>
        <trans-unit id="e28022270e53482c54285d7e566763481f38c725" translate="yes" xml:space="preserve">
          <source>If the triple slash directive does not work, please refer to your code editor in &lt;a href=&quot;https://github.com/Microsoft/TypeScript/wiki/TypeScript-Editor-Support&quot;&gt;TypeScript&amp;rsquo;s Editor Support doc&lt;/a&gt; and follow the instructions for your IDE to get &lt;a href=&quot;typescript-support&quot;&gt;TypeScript support&lt;/a&gt; and intelligent code completion configured in your developer environment first. TypeScript support is built in for &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Code&lt;/a&gt;, &lt;a href=&quot;https://www.visualstudio.com/&quot;&gt;Visual Studio&lt;/a&gt;, and &lt;a href=&quot;https://www.jetbrains.com/webstorm/&quot;&gt;WebStorm&lt;/a&gt; - all other editors require extra setup.</source>
          <target state="translated">如果三斜杠指令不起作用，请参考&lt;a href=&quot;https://github.com/Microsoft/TypeScript/wiki/TypeScript-Editor-Support&quot;&gt;TypeScript的编辑器支持文档中的&lt;/a&gt;代码编辑器，并按照IDE的说明进行操作，以首先在开发人员环境中配置&lt;a href=&quot;typescript-support&quot;&gt;TypeScript支持&lt;/a&gt;和智能代码完成功能。TypeScript支持针对&lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Code&lt;/a&gt;，&lt;a href=&quot;https://www.visualstudio.com/&quot;&gt;Visual Studio&lt;/a&gt;和&lt;a href=&quot;https://www.jetbrains.com/webstorm/&quot;&gt;WebStorm内置&lt;/a&gt; -所有其他编辑器都需要额外的设置。</target>
        </trans-unit>
        <trans-unit id="1cefc5abdc03d7c1487d91621dedca3abe32114d" translate="yes" xml:space="preserve">
          <source>If there is a missing dependency, the application should print an error message. You can see the Electron verbose log messages by setting an &lt;a href=&quot;https://electronjs.org/docs/api/environment-variables&quot;&gt;environment variable ELECTRON_ENABLE_LOGGING&lt;/a&gt;:</source>
          <target state="translated">如果缺少依赖项，则应用程序应打印一条错误消息。您可以通过设置&lt;a href=&quot;https://electronjs.org/docs/api/environment-variables&quot;&gt;环境变量ELECTRON_ENABLE_LOGGING&lt;/a&gt;来查看电子详细日志消息：</target>
        </trans-unit>
        <trans-unit id="d1f6c10abf1c776360040b402a51392a4fa2eabb" translate="yes" xml:space="preserve">
          <source>If there is currently a different DOM element with focus, Cypress issues a &lt;code&gt;blur&lt;/code&gt; event to that element before running the &lt;code&gt;.focus()&lt;/code&gt; command.</source>
          <target state="translated">如果当前有另一个具有焦点的DOM元素，则赛普拉斯会在运行 &lt;code&gt;.focus()&lt;/code&gt; 命令之前向该元素发出一个 &lt;code&gt;blur&lt;/code&gt; 事件。</target>
        </trans-unit>
        <trans-unit id="6e1234aa938e58dfe72a380e41ba6249ce542bb3" translate="yes" xml:space="preserve">
          <source>If this is not the case, then you should refactor and change your approach.</source>
          <target state="translated">如果不是这样,那么你应该重构并改变你的方法。</target>
        </trans-unit>
        <trans-unit id="c5f3df466a815c48328c9910e040b787e9212736" translate="yes" xml:space="preserve">
          <source>If this state cleanup is &lt;strong&gt;truly&lt;/strong&gt; required, then the next test will instantly fail. Why? Because resetting the state never happened when you refreshed Cypress.</source>
          <target state="translated">如果&lt;strong&gt;确实&lt;/strong&gt;需要清除此状态，则下一个测试将立即失败。为什么？因为刷新状态时从未复位状态。</target>
        </trans-unit>
        <trans-unit id="793da91db9fe4182e7562537ceb3f25907e00040" translate="yes" xml:space="preserve">
          <source>If this test can run &lt;strong&gt;by itself&lt;/strong&gt; and pass - congratulations you have written a good test.</source>
          <target state="translated">如果这个测试可以运行&lt;strong&gt;本身&lt;/strong&gt;并传递-恭喜你已经写了一个很好的测试。</target>
        </trans-unit>
        <trans-unit id="984bee3474a21ee2beb536e03cd95024d37ccb6e" translate="yes" xml:space="preserve">
          <source>If watching for file changes, emit &lt;code&gt;rerun&lt;/code&gt; after a file has finished being processed to let Cypress know to rerun the tests.</source>
          <target state="translated">如果正在监视文件更改，请在文件处理完毕后发出 &lt;code&gt;rerun&lt;/code&gt; ，以使赛普拉斯知道重新运行测试。</target>
        </trans-unit>
        <trans-unit id="dbe5bfb32e8c85e274c247d854478d90f5cb3136" translate="yes" xml:space="preserve">
          <source>If we drill into the coverage object to see the statements executed in each file. For example the file &lt;code&gt;src/index.js&lt;/code&gt; has the following information:</source>
          <target state="translated">如果我们深入研究coverage对象，以查看每个文件中执行的语句。例如，文件 &lt;code&gt;src/index.js&lt;/code&gt; 具有以下信息：</target>
        </trans-unit>
        <trans-unit id="04e5458c212b25120f1a7febad7cf38e01764524" translate="yes" xml:space="preserve">
          <source>If we looked at the &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; of our button again&amp;hellip;</source>
          <target state="translated">如果我们再次查看按钮的 &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; ...</target>
        </trans-unit>
        <trans-unit id="9858bc3f84e402a92629ee149c76b95aca1c1c5c" translate="yes" xml:space="preserve">
          <source>If we want to collect the code coverage from the unit tests, we need to instrument the source code of &lt;em&gt;our spec files&lt;/em&gt;. The simplest way to do this is to use the same &lt;code&gt;.babelrc&lt;/code&gt; with &lt;a href=&quot;https://github.com/istanbuljs/babel-plugin-istanbul&quot;&gt;&lt;code&gt;babel-plugin-istanbul&lt;/code&gt;&lt;/a&gt; and tell the Cypress built-in bundler to use &lt;code&gt;.babelrc&lt;/code&gt; when bundling specs. One can use the &lt;a href=&quot;https://github.com/cypress-io/code-coverage&quot;&gt;&lt;code&gt;@cypress/code-coverage&lt;/code&gt;&lt;/a&gt; plugin again to do this by adding the code below to your &lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt;&lt;code&gt;pluginsFile&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果要从单元测试中收集代码覆盖率，则需要检测&lt;em&gt;规范文件&lt;/em&gt;的源代码。最简单的方法是在&lt;a href=&quot;https://github.com/istanbuljs/babel-plugin-istanbul&quot;&gt; &lt;code&gt;babel-plugin-istanbul&lt;/code&gt; 中&lt;/a&gt;使用相同的 &lt;code&gt;.babelrc&lt;/code&gt; ，并告诉Cypress内置捆绑 &lt;code&gt;.babelrc&lt;/code&gt; 在捆绑规格时使用.babelrc。通过将以下代码添加到&lt;a href=&quot;../references/configuration#Folders-Files&quot;&gt; &lt;code&gt;pluginsFile&lt;/code&gt; &lt;/a&gt;中，可以再次使用&lt;a href=&quot;https://github.com/cypress-io/code-coverage&quot;&gt; &lt;code&gt;@cypress/code-coverage&lt;/code&gt; &lt;/a&gt;插件来执行此操作。</target>
        </trans-unit>
        <trans-unit id="9e0bb96bcece0a11d9fd6ab15f70e21a2aa7f346" translate="yes" xml:space="preserve">
          <source>If we wrote this assertion in the explicit form &amp;ldquo;the long way&amp;rdquo;, it would look like this:</source>
          <target state="translated">如果我们以&amp;ldquo;很长的路要走&amp;rdquo;的明确形式写这个断言，它看起来像这样：</target>
        </trans-unit>
        <trans-unit id="c60587c2f51cec786bb94efa29378e1b47736dd3" translate="yes" xml:space="preserve">
          <source>If you &lt;strong&gt;must&lt;/strong&gt; get a real token you can use &lt;a href=&quot;../../api/commands/request&quot;&gt;&lt;code&gt;cy.request()&lt;/code&gt;&lt;/a&gt; and use the &lt;strong&gt;programmatic&lt;/strong&gt; API that your OAuth provider provides. These APIs likely change &lt;strong&gt;more&lt;/strong&gt; infrequently and you avoid problems like throttling and A/B campaigns.</source>
          <target state="translated">如果&lt;strong&gt;必须&lt;/strong&gt;获得真实令牌，则可以使用&lt;a href=&quot;../../api/commands/request&quot;&gt; &lt;code&gt;cy.request()&lt;/code&gt; &lt;/a&gt;并使用OAuth提供程序提供的&lt;strong&gt;编程&lt;/strong&gt; API。这些API可能变化&lt;strong&gt;更&lt;/strong&gt;频繁，你避免这样的节流和A / B运动的问题。</target>
        </trans-unit>
        <trans-unit id="86e6371b7dcbb3f2107155cd65f37f6449ea72c1" translate="yes" xml:space="preserve">
          <source>If you already use webpack in your project, you can pass in your webpack config as &lt;a href=&quot;https://github.com/cypress-io/cypress/tree/master/npm/webpack-preprocessor#options&quot;&gt;shown here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef8a273650cfea97530f8a6c086790f21bed9916" translate="yes" xml:space="preserve">
          <source>If you are &lt;a href=&quot;#Record-tests&quot;&gt;recording your runs&lt;/a&gt; on a public project, you&amp;rsquo;ll want to protect your Record Key. &lt;a href=&quot;../dashboard/projects#Identification&quot;&gt;Learn why.&lt;/a&gt;</source>
          <target state="translated">如果要在公共项目上&lt;a href=&quot;#Record-tests&quot;&gt;记录运行&lt;/a&gt;，则需要保护记录密钥。&lt;a href=&quot;../dashboard/projects#Identification&quot;&gt;了解原因。&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b5e14c0559d99023707eb7ea6dd9ee886d83873b" translate="yes" xml:space="preserve">
          <source>If you are an FFmpeg pro and want to see all the settings and debug messages during the encoding, run Cypress with the following environment variable: &lt;code&gt;DEBUG=cypress:server:video cypress run&lt;/code&gt;</source>
          <target state="translated">如果您是FFmpeg专业人士，并且想要在编码过程中查看所有设置和调试消息，请使用以下环境变量运行Cypress： &lt;code&gt;DEBUG=cypress:server:video cypress run&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ab3d6619baa79a5c438b8e380d0b0b06ec739290" translate="yes" xml:space="preserve">
          <source>If you are experiencing any or all of these issues, you may need to configure Cypress with your proxy. Instructions are available for &lt;a href=&quot;#Set-a-proxy-on-Linux-or-macOS&quot;&gt;macOS&lt;/a&gt;, &lt;a href=&quot;#Set-a-proxy-on-Linux-or-macOS&quot;&gt;Linux&lt;/a&gt;, and &lt;a href=&quot;#Set-a-proxy-on-Windows&quot;&gt;Windows&lt;/a&gt;.</source>
          <target state="translated">如果遇到任何或所有这些问题，则可能需要使用代理配置赛普拉斯。有关说明适用于&lt;a href=&quot;#Set-a-proxy-on-Linux-or-macOS&quot;&gt;macOS&lt;/a&gt;，&lt;a href=&quot;#Set-a-proxy-on-Linux-or-macOS&quot;&gt;Linux&lt;/a&gt;和&lt;a href=&quot;#Set-a-proxy-on-Windows&quot;&gt;Windows&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cc282e2bf3d131481f4925653232d0ba7bce1fc2" translate="yes" xml:space="preserve">
          <source>If you are new to Cypress and wanting to better understand how Commands work - &lt;a href=&quot;../core-concepts/introduction-to-cypress#Chains-of-Commands&quot;&gt;please read our Introduction to Cypress guide&lt;/a&gt;.</source>
          <target state="translated">如果您不熟悉赛普拉斯，并且想更好地了解Commands的工作原理，&lt;a href=&quot;../core-concepts/introduction-to-cypress#Chains-of-Commands&quot;&gt;请阅读我们的《赛普拉斯简介》指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="59dd4ef47d09ebbfccf959062f71fe92d4528548" translate="yes" xml:space="preserve">
          <source>If you are not logged in on OSX, Cypress now issues a native system notification indicating to you that Cypress is running in your tray (many users often complained they could not tell Cypress was actually running)</source>
          <target state="translated">如果你在OSX上没有登录,Cypress现在会发出一个本地系统通知,向你表明Cypress正在你的托盘中运行(许多用户经常抱怨他们无法知道Cypress实际上正在运行)。</target>
        </trans-unit>
        <trans-unit id="2a31a7f93c6105a63c0857b8887ac837c4f3d60f" translate="yes" xml:space="preserve">
          <source>If you are not sure if you have written a potentially flaky test, there is an easy way to figure it out. Repeat the test an excessive number of times, and then repeat by modifying the Developer Tools to throttle the Network and the CPU. This will create different loads that simulate different environments (like CI). If you&amp;rsquo;ve written a good test, it will pass or fail 100% of the time.</source>
          <target state="translated">如果不确定是否编写了潜在的测试，可以通过一种简单的方法来解决。重复测试多次，然后通过修改开发人员工具以限制网络和CPU的方式进行重复。这将创建模拟不同环境（例如CI）的不同负载。如果您编写了良好的测试，它将100％的时间通过或不通过。</target>
        </trans-unit>
        <trans-unit id="80f8b0dc65b612b8d77f5f23e7305b050dd3ba02" translate="yes" xml:space="preserve">
          <source>If you are not using one of the above CI providers then make sure your system has these dependencies installed.</source>
          <target state="translated">如果您没有使用上述 CI 提供者之一,那么请确保您的系统已经安装了这些依赖项。</target>
        </trans-unit>
        <trans-unit id="f30e8c13cff139efff8686cb98411fcf5a2ebfc1" translate="yes" xml:space="preserve">
          <source>If you are purposefully writing commands outside of a test, there is probably a better way to accomplish what you&amp;rsquo;re trying to do. Read through the &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html&quot;&gt;Examples&lt;/a&gt;, &lt;a href=&quot;https://gitter.im/cypress-io/cypress&quot;&gt;chat with someone in our chat&lt;/a&gt;, or &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;Open an issue&lt;/a&gt;.</source>
          <target state="translated">如果您有意在测试之外编写命令，则可能有更好的方法来完成您要尝试执行的操作。阅读&lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html&quot;&gt;示例&lt;/a&gt;，&lt;a href=&quot;https://gitter.im/cypress-io/cypress&quot;&gt;在我们的聊天中与某人聊天&lt;/a&gt;，或&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;打开一个问题&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6acf38d6e064f86018b16cceea98d60fb261be5e" translate="yes" xml:space="preserve">
          <source>If you are running &lt;code&gt;Docker&lt;/code&gt;&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/350&quot;&gt;there is a simple one line fix for this problem documented here&lt;/a&gt;.</source>
          <target state="translated">如果您正在运行 &lt;code&gt;Docker&lt;/code&gt; &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/350&quot;&gt;，则此处记录了针对此问题的简单的一站式修复&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="13d834a64d552181a1b3e28e131afb7882baa42e" translate="yes" xml:space="preserve">
          <source>If you are running Cypress tests using a Chromium-based browser, you can see ALL currently set command line switches and the browser version information by opening a new tab and typing &lt;code&gt;chrome://version&lt;/code&gt; url.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eefafe82e977a212269471392c2d31efb3b313d" translate="yes" xml:space="preserve">
          <source>If you are running long runs on Docker, you need to set the &lt;code&gt;ipc&lt;/code&gt; to &lt;code&gt;host&lt;/code&gt; mode. &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/350&quot;&gt;This issue&lt;/a&gt; describes exactly what to do.</source>
          <target state="translated">如果要在Docker上长时间运行，则需要将 &lt;code&gt;ipc&lt;/code&gt; 设置为 &lt;code&gt;host&lt;/code&gt; 模式。&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/350&quot;&gt;此问题&lt;/a&gt;确切地描述了该怎么做。</target>
        </trans-unit>
        <trans-unit id="7ea7149f5bda4f21e499135546b4b1f599c26ffb" translate="yes" xml:space="preserve">
          <source>If you are trying to parallelize this run, then also pass the &lt;a href=&quot;../guides/command-line#cypress-run-parallel&quot;&gt;&lt;code&gt;--parallel&lt;/code&gt;&lt;/a&gt; flag, else pass a different group name.</source>
          <target state="translated">如果要并行化此运行，则还传递&lt;a href=&quot;../guides/command-line#cypress-run-parallel&quot;&gt; &lt;code&gt;--parallel&lt;/code&gt; &lt;/a&gt;标志，否则传递其他组名。</target>
        </trans-unit>
        <trans-unit id="658c2a9b48b7709fa6b97391757f69addcab4fd4" translate="yes" xml:space="preserve">
          <source>If you are typing into a password field, the password input is masked automatically within your application. But &lt;a href=&quot;../commands/type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt; automatically logs any typed content into the Test Runner&amp;rsquo;s Command Log.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be7a02908a97e6d893298ef87e83dcb692e7a2d1" translate="yes" xml:space="preserve">
          <source>If you are unable to guarantee that the DOM is stable - don&amp;rsquo;t worry, there are other ways you can do conditional testing or work around the problems inherent with it.</source>
          <target state="translated">如果您不能保证DOM稳定-不用担心，您可以通过其他方法进行条件测试或解决其固有的问题。</target>
        </trans-unit>
        <trans-unit id="de6ee60d1ffc8d554d42900fed3e4ab199507dfb" translate="yes" xml:space="preserve">
          <source>If you are unfamiliar with code coverage or want to learn more, take a look at the &amp;ldquo;Understanding JavaScript Code Coverage&amp;rdquo; blog post &lt;a href=&quot;https://www.semantics3.com/blog/understanding-code-coverage-1074e8fccce0/&quot;&gt;Part 1&lt;/a&gt; and &lt;a href=&quot;https://www.semantics3.com/blog/understanding-javascript-code-coverage-part-2-9aedaa5119e5/&quot;&gt;Part 2&lt;/a&gt;.</source>
          <target state="translated">如果您不熟悉代码覆盖范围或想了解更多信息，请阅读&amp;ldquo;了解JavaScript代码覆盖范围&amp;rdquo;博客文章的&lt;a href=&quot;https://www.semantics3.com/blog/understanding-code-coverage-1074e8fccce0/&quot;&gt;第1 &lt;/a&gt;&lt;a href=&quot;https://www.semantics3.com/blog/understanding-javascript-code-coverage-part-2-9aedaa5119e5/&quot;&gt;部分&lt;/a&gt;和第2部分。</target>
        </trans-unit>
        <trans-unit id="75eeccb6ebe4296c2870b6f50b692b7240315b31" translate="yes" xml:space="preserve">
          <source>If you are using &lt;code&gt;jQuery&lt;/code&gt; then the &lt;code&gt;jQuery&lt;/code&gt; wrapped elements will automatically have your 3rd party plugins available to be called.</source>
          <target state="translated">如果您使用的是 &lt;code&gt;jQuery&lt;/code&gt; ,则 &lt;code&gt;jQuery&lt;/code&gt; 包装的元素将自动使您的第三方插件可供调用。</target>
        </trans-unit>
        <trans-unit id="03bc3dfda3cbb44d47bdeeddac74222abfe0cd16" translate="yes" xml:space="preserve">
          <source>If you are using &lt;code&gt;npm install&lt;/code&gt; in your build process, consider &lt;a href=&quot;https://blog.npmjs.org/post/171556855892/introducing-npm-ci-for-faster-more-reliable&quot;&gt;switching to &lt;code&gt;npm ci&lt;/code&gt;&lt;/a&gt; and caching the &lt;code&gt;~/.npm&lt;/code&gt; directory for a faster and more reliable build.</source>
          <target state="translated">如果在构建过程中使用 &lt;code&gt;npm install&lt;/code&gt; ，请考虑&lt;a href=&quot;https://blog.npmjs.org/post/171556855892/introducing-npm-ci-for-faster-more-reliable&quot;&gt;切换到 &lt;code&gt;npm ci&lt;/code&gt; &lt;/a&gt;并缓存 &lt;code&gt;~/.npm&lt;/code&gt; 目录，以实现更快，更可靠的构建。</target>
        </trans-unit>
        <trans-unit id="d0c4037ea4da2b6c2d166832c8fc4c38195b3c4e" translate="yes" xml:space="preserve">
          <source>If you are using &lt;code&gt;yarn&lt;/code&gt;, caching &lt;code&gt;~/.cache&lt;/code&gt; will include both the &lt;code&gt;yarn&lt;/code&gt; and Cypress caches. Consider using &lt;code&gt;yarn install --frozen-lockfile&lt;/code&gt; as an &lt;a href=&quot;https://docs.npmjs.com/cli/ci&quot;&gt;&lt;code&gt;npm ci&lt;/code&gt;&lt;/a&gt; equivalent.</source>
          <target state="translated">如果使用 &lt;code&gt;yarn&lt;/code&gt; ，则缓存 &lt;code&gt;~/.cache&lt;/code&gt; 将同时包括 &lt;code&gt;yarn&lt;/code&gt; 和Cypress缓存。考虑使用 &lt;code&gt;yarn install --frozen-lockfile&lt;/code&gt; 作为&lt;a href=&quot;https://docs.npmjs.com/cli/ci&quot;&gt; &lt;code&gt;npm ci&lt;/code&gt; &lt;/a&gt;等效项。</target>
        </trans-unit>
        <trans-unit id="2089f8651693845877f5144ee31856c6ae49d0fa" translate="yes" xml:space="preserve">
          <source>If you are using the &lt;a href=&quot;https://github.com/zkat/npx&quot;&gt;npx&lt;/a&gt; tool, you can invoke the locally installed Cypress tool directly:</source>
          <target state="translated">如果使用&lt;a href=&quot;https://github.com/zkat/npx&quot;&gt;npx&lt;/a&gt;工具，则可以直接调用本地安装的Cypress工具：</target>
        </trans-unit>
        <trans-unit id="0bdad0708407a849c5ab258a1cfa09a8ce0a2427" translate="yes" xml:space="preserve">
          <source>If you are writing a traditional server-side application where most of the responses are HTML you will likely have few stubbed responses. However, most modern applications that serve JSON can take advantage of stubbing.</source>
          <target state="translated">如果您正在编写一个传统的服务器端应用程序,其中大部分响应是HTML,您可能会有很少的存根响应。然而,大多数服务于JSON的现代应用程序都可以利用存根。</target>
        </trans-unit>
        <trans-unit id="a3e941a81cf8f9fc738a085fc37c0f10bfe84f2c" translate="yes" xml:space="preserve">
          <source>If you attempt to visit two different superdomains, Cypress will error. Visiting subdomains works fine. You can visit different superdomains in &lt;em&gt;different&lt;/em&gt; tests, just not the &lt;em&gt;same&lt;/em&gt; test.</source>
          <target state="translated">如果您尝试访问两个不同的超级域，赛普拉斯将出错。访问子域可以正常工作。您可以在&lt;em&gt;不同的&lt;/em&gt;测试中访问不同的超域，而不仅仅是&lt;em&gt;同一&lt;/em&gt;测试。</target>
        </trans-unit>
        <trans-unit id="77a24f329974d4b45808483367181374b38e05cf" translate="yes" xml:space="preserve">
          <source>If you call &lt;code&gt;cy.clock()&lt;/code&gt; before visiting a page with &lt;a href=&quot;visit&quot;&gt;&lt;code&gt;cy.visit()&lt;/code&gt;&lt;/a&gt;, the page&amp;rsquo;s native global functions will be overridden on window load, before any of your app code runs, so even if &lt;code&gt;setTimeout&lt;/code&gt;, for example, is called on page load, it can still be controlled via &lt;a href=&quot;tick&quot;&gt;&lt;code&gt;cy.tick()&lt;/code&gt;&lt;/a&gt;. This also applies if, during the course of a test, the page under test is reloaded or changed.</source>
          <target state="translated">如果调用 &lt;code&gt;cy.clock()&lt;/code&gt; 访问一个页面之前&lt;a href=&quot;visit&quot;&gt; &lt;code&gt;cy.visit()&lt;/code&gt; &lt;/a&gt;，该页面的本地全局函数将被覆盖在窗口负载，在任何您的应用程序代码运行的，所以就算 &lt;code&gt;setTimeout&lt;/code&gt; 的，例如，被称为上页面加载，仍然可以通过&lt;a href=&quot;tick&quot;&gt; &lt;code&gt;cy.tick()&lt;/code&gt; &lt;/a&gt;进行控制。如果在测试过程中重新加载或更改了被测页面，这也适用。</target>
        </trans-unit>
        <trans-unit id="86e73b2b1686e43558da6ec69e3a7ff0469f0839" translate="yes" xml:space="preserve">
          <source>If you can&amp;rsquo;t figure out why your JavaScript code is redirecting you to a different superdomain, then you might want to just read about &lt;a href=&quot;web-security#Disabling-Web-Security&quot;&gt;disabling web security&lt;/a&gt;.</source>
          <target state="translated">如果您不知道为什么JavaScript代码会将您重定向到另一个超域，那么您可能只想阅读有关&lt;a href=&quot;web-security#Disabling-Web-Security&quot;&gt;禁用Web安全性的内容&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7cfd4650a26bf4be0f68e73d66b61e5fcd4ea2dd" translate="yes" xml:space="preserve">
          <source>If you cannot accurately know the state of your application then no matter what programming idioms you have available - &lt;strong&gt;you cannot write 100% deterministic tests&lt;/strong&gt;.</source>
          <target state="translated">如果您不能准确地知道应用程序的状态，那么无论您拥有什么编程习惯，您都&lt;strong&gt;无法编写100％确定性测试&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="fc24b08a14546c51dad9f4f79e13d2577080ffc7" translate="yes" xml:space="preserve">
          <source>If you chain any &lt;code&gt;.should()&lt;/code&gt; command, the default &lt;code&gt;.should('exist')&lt;/code&gt; is not asserted. This does not matter for most &lt;em&gt;positive&lt;/em&gt; assertions, such as &lt;code&gt;.should('have.class')&lt;/code&gt;, because those imply existence in the first place, but if you chain &lt;em&gt;negative&lt;/em&gt; assertions ,such as &lt;code&gt;.should('not.have.class')&lt;/code&gt;, they will pass even if the DOM element doesn&amp;rsquo;t exist:</source>
          <target state="translated">如果链接任何 &lt;code&gt;.should()&lt;/code&gt; 命令，则不会声明默认的 &lt;code&gt;.should('exist')&lt;/code&gt; 。对于大多数&lt;em&gt;肯定的&lt;/em&gt;断言，例如 &lt;code&gt;.should('have.class')&lt;/code&gt; 来说，这并不重要，因为它们首先暗示存在，但是如果链接&lt;em&gt;否定&lt;/em&gt;断言，例如 &lt;code&gt;.should('not.have.class')&lt;/code&gt; ，即使DOM元素不存在，它们也会通过：</target>
        </trans-unit>
        <trans-unit id="f6e0dcb9f671e7a8fb00e89750fb01e410ef7928" translate="yes" xml:space="preserve">
          <source>If you change any of those properties of the image, you should include the new values in the returned object, so that the details are correctly reported in the test results. For example, if you crop the image, return the new size and dimensions of the image.</source>
          <target state="translated">如果你改变了图像的任何这些属性,你应该在返回的对象中包含新的值,这样才能在测试结果中正确报告细节。例如,如果你裁剪了图像,返回图像的新尺寸和大小。</target>
        </trans-unit>
        <trans-unit id="b0fcff056e08339935fe5d6b0a70e3075836fffc" translate="yes" xml:space="preserve">
          <source>If you change the &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt; or &lt;code&gt;dimensions&lt;/code&gt; of the image, you&amp;rsquo;ll want to update the new values so that the details are correctly reported in the test results. &lt;em&gt;Any other properties besides &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt;, and &lt;code&gt;dimensions&lt;/code&gt; will be ignored.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="752ee2bc76f52ed83626d5ff5af16d85c3d5a108" translate="yes" xml:space="preserve">
          <source>If you choose to install Cypress from the &lt;a href=&quot;../guides/command-line&quot;&gt;CLI Tool&lt;/a&gt; you must update to the latest version &lt;code&gt;0.9.1&lt;/code&gt;. Just run &lt;code&gt;npm install -g cypress&lt;/code&gt; and then you can run &lt;a href=&quot;../guides/command-line&quot;&gt;&lt;code&gt;cypress install&lt;/code&gt;&lt;/a&gt;. You don&amp;rsquo;t need to do anything if you update from within the Test Runner itself.</source>
          <target state="translated">如果选择从&lt;a href=&quot;../guides/command-line&quot;&gt;CLI工具&lt;/a&gt;安装Cypress，则必须更新到最新版本 &lt;code&gt;0.9.1&lt;/code&gt; 。只需运行 &lt;code&gt;npm install -g cypress&lt;/code&gt; ，然后即可运行&lt;a href=&quot;../guides/command-line&quot;&gt; &lt;code&gt;cypress install&lt;/code&gt; &lt;/a&gt;。如果从Test Runner本身进行更新，则无需执行任何操作。</target>
        </trans-unit>
        <trans-unit id="c595939e58a62fa4e827148c888e6c83189e3727" translate="yes" xml:space="preserve">
          <source>If you choose to mirror the entire Cypress download site, you can specify &lt;code&gt;CYPRESS_DOWNLOAD_MIRROR&lt;/code&gt; to set the download server URL from &lt;code&gt;https://download.cypress.io&lt;/code&gt; to your own mirror.</source>
          <target state="translated">如果选择镜像整个赛普拉斯下载站点，则可以指定 &lt;code&gt;CYPRESS_DOWNLOAD_MIRROR&lt;/code&gt; 来将下载服务器URL从 &lt;code&gt;https://download.cypress.io&lt;/code&gt; 设置为您自己的镜像。</target>
        </trans-unit>
        <trans-unit id="bbf88490d53e76c288d488dc11f5e88ed5e9488e" translate="yes" xml:space="preserve">
          <source>If you do &lt;em&gt;not&lt;/em&gt; want these assets to be tracked by Cypress, you need to switch to using &lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt;&lt;code&gt;cypress run&lt;/code&gt;&lt;/a&gt;. We will happily remove any build assets that are accidentally uploaded to us during the update transition.</source>
          <target state="translated">如果你&lt;em&gt;不&lt;/em&gt;希望这些资产由Cypress跟踪，你需要切换到使用&lt;a href=&quot;../guides/command-line#cypress-run&quot;&gt; &lt;code&gt;cypress run&lt;/code&gt; &lt;/a&gt;。我们将很高兴删除在更新过渡期间意外上传给我们的所有构建资产。</target>
        </trans-unit>
        <trans-unit id="1b5689eafe488967a0af932b7d765f7d91ea4637" translate="yes" xml:space="preserve">
          <source>If you do not need to return a value, explicitly return &lt;code&gt;null&lt;/code&gt; to signal that the given event has been handled.</source>
          <target state="translated">如果不需要返回值，则显式返回 &lt;code&gt;null&lt;/code&gt; 表示已处理给定事件。</target>
        </trans-unit>
        <trans-unit id="2acdb06a9fd83a2d7bbf16b6e94e8d1bcb23c390" translate="yes" xml:space="preserve">
          <source>If you do not pass a &lt;code&gt;response&lt;/code&gt; to a route, Cypress will pass the request through without stubbing it. We can still wait for the request to resolve later.</source>
          <target state="translated">如果您未对路由传递 &lt;code&gt;response&lt;/code&gt; ，则赛普拉斯将不通过请求传递请求。我们仍然可以等待该请求稍后解决。</target>
        </trans-unit>
        <trans-unit id="e925f27fe2f6b45420ea0c9bb472b5b6a85b6aa2" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t return an object, then configuration will not be modified.</source>
          <target state="translated">如果不返回对象，则不会修改配置。</target>
        </trans-unit>
        <trans-unit id="ed38bca3a1bfd9a7f3e39271ca081de14c34dad6" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t use webpack in your project or would like to keep the majority of the default options, you can &lt;a href=&quot;https://github.com/cypress-io/cypress/tree/master/npm/webpack-preprocessor#modifying-default-options&quot;&gt;modify the default options&lt;/a&gt;. Editing the options allows you to do things like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9312db5af2460191898cec54077b357142c7c10f" translate="yes" xml:space="preserve">
          <source>If you extend Cypress assertions, you can extend the assertion types to make the TypeScript compiler understand the new methods. See the &lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Fundamentals&quot;&gt;Recipe: Adding Chai Assertions&lt;/a&gt; for instructions.</source>
          <target state="translated">如果扩展了Cypress断言，则可以扩展断言类型，以使TypeScript编译器理解新方法。有关说明，请参见&lt;a href=&quot;https://docs.cypress.io/examples/examples/recipes.html#Fundamentals&quot;&gt;食谱：添加Chai断言&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d5cfd6e8ecef7e170010676556edc9e236a0e225" translate="yes" xml:space="preserve">
          <source>If you find yourself stuck and can&amp;rsquo;t work around these issues you can just set this in your &lt;code&gt;cypress.json&lt;/code&gt; file. But before doing so you should really understand and &lt;a href=&quot;../guides/web-security&quot;&gt;read about the reasoning here&lt;/a&gt;.</source>
          <target state="translated">如果您发现自己陷于困境而 &lt;code&gt;cypress.json&lt;/code&gt; 这些问题，则可以在cypress.json文件中进行设置。但是在这样做之前，您应该真正理解并&lt;a href=&quot;../guides/web-security&quot;&gt;阅读这里的推理&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6a19f869c25d2794013e7c1387d40ede0389a6eb" translate="yes" xml:space="preserve">
          <source>If you forgot to start your server you&amp;rsquo;ll see the error below:</source>
          <target state="translated">如果您忘记启动服务器，则会看到以下错误：</target>
        </trans-unit>
        <trans-unit id="3a04f4111181616dc0c9ed4028c92b80fb0ed3e0" translate="yes" xml:space="preserve">
          <source>If you get this error in a case where the element is definitely visible in the DOM, your document might contain malformed HTML. In such cases, &lt;code&gt;document.querySelector()&lt;/code&gt; will not find any elements that appear after the point where the HTML is malformed. Even if you feel certain your HTML is not malformed anywhere, check it anyway (line by line in the dev tools). Especially if you&amp;rsquo;ve exhausted all other possibilities.</source>
          <target state="translated">如果在DOM中绝对可见该元素的情况下收到此错误，则您的文档可能包含格式错误的HTML。在这种情况下， &lt;code&gt;document.querySelector()&lt;/code&gt; 将找不到HTML格式不正确的位置之后出现的任何元素。即使您确定自己的HTML在任何地方都没有格式错误，也还是要进行检查（在开发工具中逐行检查）。特别是如果您已经用尽了所有其他可能性。</target>
        </trans-unit>
        <trans-unit id="50a9344dcb7c8f27a278716db4dd157f804f2039" translate="yes" xml:space="preserve">
          <source>If you had any failed tests, you can hover over the spec chart and click on the link to the failed test to go directly to its error message and stack trace.</source>
          <target state="translated">如果你有任何失败的测试,你可以将鼠标悬停在规格图上,点击失败测试的链接,直接进入其错误信息和堆栈跟踪。</target>
        </trans-unit>
        <trans-unit id="9a9ee096d19e69e37fbffad4e7eb174e62c5e73f" translate="yes" xml:space="preserve">
          <source>If you have Local Administrator access to your computer, you may be able to delete the registry keys that are affecting Chrome. Here are some instructions:</source>
          <target state="translated">如果您有本地管理员访问计算机的权限,您可能可以删除影响 Chrome 的注册表键。以下是一些说明。</target>
        </trans-unit>
        <trans-unit id="63e4a448952599482dc8840bf1d4025b5dc425e4" translate="yes" xml:space="preserve">
          <source>If you have a public project you should &lt;em&gt;still&lt;/em&gt; keep your record key secret. If someone knows both your record key and your &lt;code&gt;projectId&lt;/code&gt;, they could record test runs for your project - which could mix up all of your results and be counted towards your usage during billing.</source>
          <target state="translated">如果您有公共项目，则&lt;em&gt;仍应&lt;/em&gt;保留记录密钥的秘密。如果有人同时知道您的记录键和 &lt;code&gt;projectId&lt;/code&gt; ，那么他们可以记录您的项目的测试运行-这可以将您的所有结果混合在一起，并计入帐单中的使用情况。</target>
        </trans-unit>
        <trans-unit id="54a6bde689f1c4e79db2db1cd787836fb4a9aedb" translate="yes" xml:space="preserve">
          <source>If you have any questions regarding the OSS plan, please feel free &lt;a href=&quot;https://docs.cypress.io/cdn-cgi/l/email-protection#8ee6ebe2e2e1ceedf7fefcebfdfda0e7e1&quot;&gt;contact us&lt;/a&gt;.</source>
          <target state="translated">如果您对OSS计划有任何疑问，请随时&lt;a href=&quot;https://docs.cypress.io/cdn-cgi/l/email-protection#8ee6ebe2e2e1ceedf7fefcebfdfda0e7e1&quot;&gt;与我们联系&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ae6e013e7f7ef50fc0cef2b97a94cdc089024d3c" translate="yes" xml:space="preserve">
          <source>If you haven&amp;rsquo;t set up your project to record &lt;a href=&quot;projects#Setup&quot;&gt;read here&lt;/a&gt;.</source>
          <target state="translated">如果您尚未设置要录制的项目，&lt;a href=&quot;projects#Setup&quot;&gt;请在此处阅读&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3b6cc633bbfffea4fcc2a5b3a2ee15791267850e" translate="yes" xml:space="preserve">
          <source>If you install cypress globally using &lt;code&gt;npm install -g cypress&lt;/code&gt; we will warn you that you should check this in as a &lt;code&gt;devDependency&lt;/code&gt; but Cypress will continue to work in &amp;ldquo;global mode&amp;rdquo;.</source>
          <target state="translated">如果您使用 &lt;code&gt;npm install -g cypress&lt;/code&gt; cypress全局安装cypress，我们将警告您，您应将其作为 &lt;code&gt;devDependency&lt;/code&gt; 签入,但Cypress仍将在&amp;ldquo;全局模式&amp;rdquo;下工作。</target>
        </trans-unit>
        <trans-unit id="a842235de66934aeaa622f41344721b9e2931803" translate="yes" xml:space="preserve">
          <source>If you installed a custom reporter through npm, specify the package name:</source>
          <target state="translated">如果你通过npm安装了一个自定义报告器,请指定包名。</target>
        </trans-unit>
        <trans-unit id="fe2c757489ce4a0f7274ae1730d45810e99ceb0b" translate="yes" xml:space="preserve">
          <source>If you make a &lt;code&gt;cy.request()&lt;/code&gt; after visiting a page, Cypress assumes the url used for the &lt;code&gt;cy.visit()&lt;/code&gt; is the host.</source>
          <target state="translated">如果您在访问页面后创建了 &lt;code&gt;cy.request()&lt;/code&gt; ，则Cypress会假定 &lt;code&gt;cy.visit()&lt;/code&gt; 所使用的URL 是主机。</target>
        </trans-unit>
        <trans-unit id="8fc68779f7a10cce750509e7525ffbfe62a98a74" translate="yes" xml:space="preserve">
          <source>If you make a &lt;code&gt;cy.request()&lt;/code&gt; prior to visiting a page, Cypress uses the host configured as the &lt;code&gt;baseUrl&lt;/code&gt; property inside of &lt;code&gt;cypress.json&lt;/code&gt;.</source>
          <target state="translated">如果您在访问页面之前创建 &lt;code&gt;cy.request()&lt;/code&gt; ，则Cypress将使用在 &lt;code&gt;cypress.json&lt;/code&gt; 内部配置为 &lt;code&gt;baseUrl&lt;/code&gt; 属性的主机。</target>
        </trans-unit>
        <trans-unit id="b0963f152c033833fde35ce59916df0cd22425ac" translate="yes" xml:space="preserve">
          <source>If you make a &lt;code&gt;cy.request()&lt;/code&gt; prior to visiting a page, Cypress uses the host configured as the &lt;code&gt;baseUrl&lt;/code&gt; property inside of of your &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html&quot;&gt;configuration file&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f69d55a3f14f83cfc54a1836ade78cc35d09ad0" translate="yes" xml:space="preserve">
          <source>If you modify the list of browsers, you can see the &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Resolved-Configuration&quot;&gt;resolved configuration&lt;/a&gt; in the &lt;strong&gt;Settings&lt;/strong&gt; tab of the Test Runner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcc5c531dc309815c89260b0f3c521b4dfc71087" translate="yes" xml:space="preserve">
          <source>If you move the location of the screenshot image, you&amp;rsquo;ll want to specify the new &lt;code&gt;path&lt;/code&gt; of the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="891fc475ee8ba30f9e2373ce12ed3af9b6cc59fe" translate="yes" xml:space="preserve">
          <source>If you need further control of the file-watching behavior you can configure this preprocessor explicitly: it exposes options that allow you to configure behavior such as &lt;em&gt;what&lt;/em&gt; is watched and the delay before emitting an &amp;ldquo;update&amp;rdquo; event after a change.</source>
          <target state="translated">如果你需要的文件，观看行为的进一步控制，你可以明确地配置此预处理：它暴露了允许您配置行为，比如选择&lt;em&gt;什么样&lt;/em&gt;的观看和变更后发射&amp;ldquo;更新&amp;rdquo;事件之前的延迟。</target>
        </trans-unit>
        <trans-unit id="4e262a641a0559189be4fdfa01a8e8c66c400cfe" translate="yes" xml:space="preserve">
          <source>If you need the cookie value, for example to use in a subsequent call</source>
          <target state="translated">如果你需要cookie的值,例如在后续的调用中使用。</target>
        </trans-unit>
        <trans-unit id="58b1d6270a220e8a62522a448d084da074e9e73c" translate="yes" xml:space="preserve">
          <source>If you need to override the binary location for some reason, use &lt;a href=&quot;../getting-started/installing-cypress#Binary-cache&quot;&gt;&lt;code&gt;CYPRESS_CACHE_FOLDER&lt;/code&gt;&lt;/a&gt; environment variable.</source>
          <target state="translated">如果由于某种原因需要覆盖二进制位置，请使用&lt;a href=&quot;../getting-started/installing-cypress#Binary-cache&quot;&gt; &lt;code&gt;CYPRESS_CACHE_FOLDER&lt;/code&gt; &lt;/a&gt;环境变量。</target>
        </trans-unit>
        <trans-unit id="7f55b2d14636345f6286b0a128493be0ddff303f" translate="yes" xml:space="preserve">
          <source>If you need to pass multiple arguments, use an object</source>
          <target state="translated">如果你需要传递多个参数,请使用对象</target>
        </trans-unit>
        <trans-unit id="2a6a23e285012aad77cd987572729f6560e998af" translate="yes" xml:space="preserve">
          <source>If you need to run a Cypress command straight from the Developer Tools console, you can use the internal command &lt;code&gt;cy.now('command name', ...arguments)&lt;/code&gt;. For example, to run the equivalent of &lt;code&gt;cy.task('database', 123)&lt;/code&gt; outside the normal execution command chain:</source>
          <target state="translated">如果您需要直接从Developer Tools控制台运行Cypress命令，则可以使用内部命令 &lt;code&gt;cy.now('command name', ...arguments)&lt;/code&gt; 。例如，要在常规执行命令链之外运行 &lt;code&gt;cy.task('database', 123)&lt;/code&gt; 的等效项：</target>
        </trans-unit>
        <trans-unit id="06c6374e4d45b32383b9c79e232e9b2d251383c2" translate="yes" xml:space="preserve">
          <source>If you pass a &lt;code&gt;response&lt;/code&gt; to &lt;code&gt;cy.route()&lt;/code&gt;, Cypress will stub the response in the request.</source>
          <target state="translated">如果您将 &lt;code&gt;response&lt;/code&gt; 传递给 &lt;code&gt;cy.route()&lt;/code&gt; ，赛普拉斯将在请求中添加响应。</target>
        </trans-unit>
        <trans-unit id="eadb340822b7453de4c2fa968ae10ef8145cfb90" translate="yes" xml:space="preserve">
          <source>If you provide a non fully qualified domain name (FQDN), Cypress will make its best guess as to which host you want &lt;code&gt;cy.request()&lt;/code&gt; to use in the url.</source>
          <target state="translated">如果您提供的是非完全限定域名（FQDN），则赛普拉斯将针对您希望 &lt;code&gt;cy.request()&lt;/code&gt; 在URL中使用的主机做出最佳猜测。</target>
        </trans-unit>
        <trans-unit id="4939d05c3dea69f3c0696b39f689b3fbbc3453af" translate="yes" xml:space="preserve">
          <source>If you remove your application&amp;rsquo;s state after each test, then you instantly lose the ability to use your application in this mode. Logging out at the end would always leave you with the same login page at the end of the test. In order to debug your application or write a partial test, you would always be left commenting out your custom &lt;code&gt;cy.logout()&lt;/code&gt; command.</source>
          <target state="translated">如果您在每次测试后都删除了应用程序的状态，那么您将立即失去以这种模式使用应用程序的能力。最后注销将始终使您在测试结束时拥有相同的登录页面。为了调试您的应用程序或编写部分测试，将始终留下您自定义的 &lt;code&gt;cy.logout()&lt;/code&gt; 命令的注释。</target>
        </trans-unit>
        <trans-unit id="f6df17775c6544a7070882eab73096c48835dce3" translate="yes" xml:space="preserve">
          <source>If you return an empty list of browsers or &lt;code&gt;browsers: null&lt;/code&gt;, the default list will be restored automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e19b775e5880b86ccc83dbd2e818ccef9558b3b" translate="yes" xml:space="preserve">
          <source>If you return or resolve with an object, Cypress will then merge this object into the &lt;code&gt;config&lt;/code&gt; which enables you to overwrite configuration or environment variables.</source>
          <target state="translated">如果您返回或解决某个对象，赛普拉斯将把该对象合并到 &lt;code&gt;config&lt;/code&gt; ，使您可以覆盖配置或环境变量。</target>
        </trans-unit>
        <trans-unit id="62f38afc23705af50d78b28d79ab4c0478795b7d" translate="yes" xml:space="preserve">
          <source>If you see this error, you may want to ensure that the main browser window is currently focused. This means not being focused in debugger or any other window when the command is run.</source>
          <target state="translated">如果你看到这个错误,你可能要确保当前主浏览器窗口是聚焦的。这意味着当命令运行时,不在调试器或任何其他窗口中聚焦。</target>
        </trans-unit>
        <trans-unit id="f4042cdde7b138d3f35ab964f31c8300e3842bf4" translate="yes" xml:space="preserve">
          <source>If you set the &lt;strong&gt;Record Key&lt;/strong&gt; as the environment variable &lt;code&gt;CYPRESS_RECORD_KEY&lt;/code&gt;, you can omit the &lt;code&gt;--key&lt;/code&gt; flag.</source>
          <target state="translated">如果将&lt;strong&gt;Record Key&lt;/strong&gt;设置为环境变量 &lt;code&gt;CYPRESS_RECORD_KEY&lt;/code&gt; ，则可以省略 &lt;code&gt;--key&lt;/code&gt; 标志。</target>
        </trans-unit>
        <trans-unit id="9c00a2717fcd0be70d5846987e198e4a299aacb6" translate="yes" xml:space="preserve">
          <source>If you still haven&amp;rsquo;t found a solution, &lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;open an issue&lt;/a&gt;&lt;em&gt;with a reproducible example&lt;/em&gt;.</source>
          <target state="translated">如果您仍未找到解决方案，请&lt;em&gt;使用可复制的示例&lt;/em&gt;&lt;a href=&quot;https://github.com/cypress-io/cypress/issues/new&quot;&gt;打开问题&lt;/a&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="815ae2e8ac732d0e55e15cc5b8c6ea3b40638a48" translate="yes" xml:space="preserve">
          <source>If you store and access the fixture data using &lt;code&gt;this&lt;/code&gt; test context object, make sure to use &lt;code&gt;function () { ... }&lt;/code&gt; callbacks. Otherwise the test engine will NOT have &lt;code&gt;this&lt;/code&gt; pointing at the test context.</source>
          <target state="translated">如果使用 &lt;code&gt;this&lt;/code&gt; 测试上下文对象存储和访问灯具数据，请确保使用 &lt;code&gt;function () { ... }&lt;/code&gt; 回调。否则，测试引擎将不会 &lt;code&gt;this&lt;/code&gt; 指向测试上下文。</target>
        </trans-unit>
        <trans-unit id="2e41771328e6b27b794c8f710d1553a8a40a2a6a" translate="yes" xml:space="preserve">
          <source>If you store and/or persist whether to show the wizard on the server, then just ask it.</source>
          <target state="translated">如果你存储和/或坚持是否在服务器上显示向导,那么只要问它。</target>
        </trans-unit>
        <trans-unit id="f8b502a9f59a207ff1bf6a7107a93811965fa6bd" translate="yes" xml:space="preserve">
          <source>If you think ahead, you&amp;rsquo;ll quickly realize that you&amp;rsquo;re going to be typing this URL a lot, since every test is going to need to visit some page of your application. Luckily, Cypress provides a &lt;a href=&quot;../references/configuration&quot;&gt;configuration option&lt;/a&gt; for this. Let&amp;rsquo;s leverage that now.</source>
          <target state="translated">如果您考虑周全，您将很快意识到您将需要大量输入此URL，因为每次测试都需要访问应用程序的某些页面。幸运的是，赛普拉斯为此提供了一个&lt;a href=&quot;../references/configuration&quot;&gt;配置选项&lt;/a&gt;。现在让我们利用它。</target>
        </trans-unit>
        <trans-unit id="ed371ecd9849733f0995b7cf088a4173800b3090" translate="yes" xml:space="preserve">
          <source>If you used &lt;code&gt;npm&lt;/code&gt; to install, Cypress has now been installed to your &lt;code&gt;./node_modules&lt;/code&gt; directory, with its binary executable accessible from &lt;code&gt;./node_modules/.bin&lt;/code&gt;.</source>
          <target state="translated">如果您使用 &lt;code&gt;npm&lt;/code&gt; 进行安装，则Cypress现在已经安装到您的 &lt;code&gt;./node_modules&lt;/code&gt; 目录中，其二进制可执行文件可从 &lt;code&gt;./node_modules/.bin&lt;/code&gt; 中访问。</target>
        </trans-unit>
        <trans-unit id="6739be634fbc0af49a35d96e92d4b398330a478c" translate="yes" xml:space="preserve">
          <source>If you want &lt;code&gt;bar()&lt;/code&gt; to execute after &lt;code&gt;foo()&lt;/code&gt; and the &lt;a href=&quot;get&quot;&gt;&lt;code&gt;cy.get()&lt;/code&gt;&lt;/a&gt; commands, one solution is to chain off the final command using &lt;a href=&quot;then&quot;&gt;&lt;code&gt;.then()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c88984849702621314b8577ee1b3520c40840ab3" translate="yes" xml:space="preserve">
          <source>If you want more details about how to write a plugin, we&amp;rsquo;ve written API docs that show you how to work with each plugin event.</source>
          <target state="translated">如果您想了解有关如何编写插件的更多详细信息，我们已经编写了API文档，向您展示如何处理每个插件事件。</target>
        </trans-unit>
        <trans-unit id="40e27bf5b702621afa36f37ab4dd2c0e41604e7d" translate="yes" xml:space="preserve">
          <source>If you want the other guarantees of waiting for an element to become actionable, you should use a different command like &lt;a href=&quot;click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;type&quot;&gt;&lt;code&gt;.type()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果希望其他保证等待元素变为可操作的保证，则应使用其他命令，例如&lt;a href=&quot;click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;type&quot;&gt; &lt;code&gt;.type()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d022579bf50db75611ad951fa6175bbb71248639" translate="yes" xml:space="preserve">
          <source>If you want the other guarantees of waiting for an element to become actionable, you should use a different command like &lt;a href=&quot;click&quot;&gt;&lt;code&gt;.click()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果希望其他保证等待元素变为可操作的保证，则应使用其他命令，例如&lt;a href=&quot;click&quot;&gt; &lt;code&gt;.click()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="eb10934dcd9f9f094ac02c58ac6ef7a739bde4a6" translate="yes" xml:space="preserve">
          <source>If you want to call a &lt;code&gt;function&lt;/code&gt; on the previously yielded subject, use &lt;a href=&quot;invoke&quot;&gt;&lt;code&gt;.invoke()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果要在先前产生的主题上调用 &lt;code&gt;function&lt;/code&gt; ，请使用&lt;a href=&quot;invoke&quot;&gt; &lt;code&gt;.invoke()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4bd0e57f9bf5b98f8a5a67973d6143c187801894" translate="yes" xml:space="preserve">
          <source>If you want to dive into Cypress and edit the code yourself, you can do that. The Cypress code is open source and licensed under an &lt;a href=&quot;https://github.com/cypress-io/cypress/blob/develop/LICENSE&quot;&gt;MIT license&lt;/a&gt;. There are a few tips on getting started that we&amp;rsquo;ve outlined below.</source>
          <target state="translated">如果您想进入赛普拉斯并自己编辑代码，则可以这样做。赛普拉斯代码是开源的，并根据&lt;a href=&quot;https://github.com/cypress-io/cypress/blob/develop/LICENSE&quot;&gt;MIT许可&lt;/a&gt;获得许可。我们在下面概述了一些入门提示。</target>
        </trans-unit>
        <trans-unit id="d976725e9451f0702dad5e61f02b270491fd5a17" translate="yes" xml:space="preserve">
          <source>If you want to download a specific Cypress version for a given platform (Operating System), you can get it from our CDN.</source>
          <target state="translated">如果你想下载特定平台(操作系统)的赛普拉斯版本,你可以从我们的CDN获得。</target>
        </trans-unit>
        <trans-unit id="e58beb5f6e1d56538516e0b82a79dd41bf84ddc5" translate="yes" xml:space="preserve">
          <source>If you want to get a property that is not a function on the previously yielded subject, use &lt;a href=&quot;its&quot;&gt;&lt;code&gt;.its()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果要获取的属性不是先前产生的主题上的函数，请使用&lt;a href=&quot;its&quot;&gt; &lt;code&gt;.its()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="41c8e5baabf7ce6dec0fd975fca62b2ab17b92f7" translate="yes" xml:space="preserve">
          <source>If you want to permanently override these options you could do so by setting &lt;a href=&quot;../cypress-api/cypress-server&quot;&gt;&lt;code&gt;Cypress.Server.defaults()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果要永久覆盖这些选项，可以通过设置&lt;a href=&quot;../cypress-api/cypress-server&quot;&gt; &lt;code&gt;Cypress.Server.defaults()&lt;/code&gt; 来实现&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="115c8112ad21e39aa933cb191a3be97e55bec792" translate="yes" xml:space="preserve">
          <source>If you want to target a test or suite to run or be excluded when run in a specific browser, we suggest passing the &lt;code&gt;browser&lt;/code&gt; within the &lt;a href=&quot;https://docs.cypress.io/guides/references/configuration.html#Test-Configuration&quot;&gt;test configuration&lt;/a&gt;. The &lt;code&gt;browser&lt;/code&gt; option accepts the same &lt;a href=&quot;#Arguments&quot;&gt;arguments&lt;/a&gt; as &lt;code&gt;Cypress.isBrowser()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d44aa2f657e1e58fa32926dbb685b28edca850fd" translate="yes" xml:space="preserve">
          <source>If you wanted to select the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; instead, you could narrow the elements yielded before the &lt;code&gt;.contains()&lt;/code&gt;.</source>
          <target state="translated">如果要改为选择 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; ，则可以缩小 &lt;code&gt;.contains()&lt;/code&gt; 之前产生的元素的范围。</target>
        </trans-unit>
        <trans-unit id="4752e108ef1f5f601a6569de4952c0938340e9cc" translate="yes" xml:space="preserve">
          <source>If you were to put an &lt;code&gt;.only&lt;/code&gt; on any of the last three tests, they would fail. Each test requires the previous to run in a specific order in order to pass.</source>
          <target state="translated">如果要在最后三个测试中的任何一个上放置 &lt;code&gt;.only&lt;/code&gt; ，它们将失败。每个测试都要求前一个测试以特定顺序运行才能通过。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
