<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="gcc">
    <body>
      <group id="gcc">
        <trans-unit id="3e45126d173c9f83af0c8a4d42e612d7cbdfdcc5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; options are supported on the TILEPro:</source>
          <target state="translated">TILEPro支持'选项：</target>
        </trans-unit>
        <trans-unit id="e2d4212fc8e500ed936c66f91d94bb442c281361" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; options defined for M680x0 and ColdFire processors. The default settings depend on which architecture was selected when the compiler was configured; the defaults for the most common choices are given below.</source>
          <target state="translated">为M680x0和ColdFire处理器定义的选项。默认设置取决于配置编译器时选择的体系结构。下面给出了最常见选择的默认值。</target>
        </trans-unit>
        <trans-unit id="12ed028d54d90074036536de35874efd099113cc" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; options defined for the Intel IA-64 architecture.</source>
          <target state="translated">为Intel IA-64架构定义的选项。</target>
        </trans-unit>
        <trans-unit id="b9361b6e6a0248c72de91480eff99a4173461130" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; options defined for the Motorola M*Core processors.</source>
          <target state="translated">为Motorola M * Core处理器定义的选项。</target>
        </trans-unit>
        <trans-unit id="f9d7728363a1c57b4f3fe364b1f6ae217cf26e85" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; options defined for the S/390 and zSeries architecture.</source>
          <target state="translated">为S / 390和zSeries架构定义的选项。</target>
        </trans-unit>
        <trans-unit id="88146812c5c99870bce47654591da4916f1e6098" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; options) arrange (eliminate arrangements) for the stack frame, individual data and constants to be aligned for the maximum single data access size for the chosen CPU model. The default is to arrange for 32-bit alignment. ABI details such as structure layout are not affected by these options.</source>
          <target state="translated">选项）安排（消除安排）堆栈帧，单个数据和常量，以针对所选CPU型号的最大单个数据访问大小进行对齐。默认值是安排32位对齐。这些选项不会影响ABI详细信息，例如结构布局。</target>
        </trans-unit>
        <trans-unit id="209637ec6e6c0e100a8945dd77c54299e981870e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; options.</source>
          <target state="translated">选项。</target>
        </trans-unit>
        <trans-unit id="c051371f8937469bcb7c2e99a74ceea414f863fe" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; or &amp;lsquo;</source>
          <target state="translated">' 要么 '</target>
        </trans-unit>
        <trans-unit id="48c689e2cc2e0209a8b3a065951640655d746c00" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; or &lt;code&gt;$SYSROOT&lt;/code&gt; is replaced by the sysroot prefix; see</source>
          <target state="translated">'或 &lt;code&gt;$SYSROOT&lt;/code&gt; 替换为sysroot前缀；看到</target>
        </trans-unit>
        <trans-unit id="f8481e5d860c5d8e5ecdd2c50ff1cbdcb024c8a5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; or &lt;code&gt;$SYSROOT&lt;/code&gt;, then the &amp;lsquo;</source>
          <target state="translated">或 &lt;code&gt;$SYSROOT&lt;/code&gt; ，然后是'</target>
        </trans-unit>
        <trans-unit id="043be17ae0f7c3d7a9c4cfb6ac1b0185fec22c5b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; or &lt;var&gt;native&lt;/var&gt;.</source>
          <target state="translated">或 &lt;var&gt;native&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="cadc57fbc541ed8d0539abc5c5699327ee54af17" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; or adding it.</source>
          <target state="translated">或添加它。</target>
        </trans-unit>
        <trans-unit id="bf736093218c75ec4e7cd3f976f459490e75a82e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; or declared in system or compiler headers.</source>
          <target state="translated">'或在系统或编译器标头中声明。</target>
        </trans-unit>
        <trans-unit id="86487df2bc959d5aea33992acd350f051b6c32c0" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; or higher. If hardware floating point instructions are being generated then the C preprocessor symbol &lt;code&gt;__FPU_OK__&lt;/code&gt; is defined, otherwise the symbol &lt;code&gt;__NO_FPU__&lt;/code&gt; is defined.</source>
          <target state="translated">' 或更高。如果正在生成硬件浮点指令，则定义C预处理器符号 &lt;code&gt;__FPU_OK__&lt;/code&gt; ，否则定义符号 &lt;code&gt;__NO_FPU__&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b5132656d002ad4ce3177e193b5c68ce50e74230" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; or larger.</source>
          <target state="translated">'或更大。</target>
        </trans-unit>
        <trans-unit id="5fa602c893b7540ffbd1e91c955d1716a1576b57" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; or later. This is the default. This option defines the preprocessor macro &lt;code&gt;__LIW__&lt;/code&gt;.</source>
          <target state="translated">或更高版本。这是默认值。此选项定义预处理器宏 &lt;code&gt;__LIW__&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c4dd904c5fb4fcbd7cc13e0bb383a3e3c6aa4701" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; or later. This is the default. This option defines the preprocessor macro &lt;code&gt;__SETLB__&lt;/code&gt;.</source>
          <target state="translated">或更高版本。这是默认值。此选项定义预处理器宏 &lt;code&gt;__SETLB__&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="52aec7fe31e35c40ade8a8360102a82b38ee165a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; or more or by</source>
          <target state="translated">'或更多或</target>
        </trans-unit>
        <trans-unit id="83573bfb082de6c4b0dcb6f0417cd6cee355e722" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; or similar construct can use a backslash to ignore the special meaning of the character following it, thus allowing literal matching of a character that is otherwise specially treated. For example, &amp;lsquo;</source>
          <target state="translated">'或类似的构造可以使用反斜杠来忽略其后字符的特殊含义，从而允许对字符进行字面匹配，否则将对其进行特殊处理。例如， '</target>
        </trans-unit>
        <trans-unit id="beeb97ada8e276e8fa205b82d44514b8ccfab523" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; or similar construct may contain other nested &amp;lsquo;</source>
          <target state="translated">'或类似的构造可能包含其他嵌套的'</target>
        </trans-unit>
        <trans-unit id="61372132dd71c601ee73c08a55327505acf9f3b9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; or the special string &amp;lsquo;</source>
          <target state="translated">'或特殊字符串'</target>
        </trans-unit>
        <trans-unit id="bda6b24116bb0d9742b26847ffae3657cecd50ae" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; or with &amp;lsquo;</source>
          <target state="translated">'或与'</target>
        </trans-unit>
        <trans-unit id="cc9f2412c49de044b897ed121f0f9ca8709a12cd" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; otherwise. &amp;lsquo;</source>
          <target state="translated">' 除此以外。'</target>
        </trans-unit>
        <trans-unit id="ec149ba66b939f8546f4e2bdaebf6bea6a1c7fc5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; otherwise. The GCC driver automatically selects &amp;lsquo;</source>
          <target state="translated">' 除此以外。GCC驱动程序会自动选择&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="4aad7874be07f1faef249c25cdae44bd2f76410a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; pair. All lines after this directive and up to the next directive or blank line are considered to make up the spec string for the indicated suffix. When the compiler encounters an input file with the named suffix, it processes the spec string in order to work out how to compile that file. For example:</source>
          <target state="translated">对。该指令之后以及下一个指令之前的所有行或空白行均被视为组成指定后缀的规范字符串。当编译器遇到带有命名后缀的输入文件时，它会处理规范字符串，以弄清楚如何编译该文件。例如：</target>
        </trans-unit>
        <trans-unit id="d5cd41e49b746cd8aacc2f300c1e7c9ce59a1f43" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; pair. The set of call-saved registers also remains the same in that the even-numbered double-precision registers are saved.</source>
          <target state="translated">对。调用保存寄存器的集合也保持不变，因为保存了偶数双精度寄存器。</target>
        </trans-unit>
        <trans-unit id="4d2f7d31ef55c034e21e0b00c9d0c1b28e605f5a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; parameter has to be specified as well.</source>
          <target state="translated">'参数也必须指定。</target>
        </trans-unit>
        <trans-unit id="c445adefb3dc0e5666af740dcde3fc1c3feb5a32" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; parameter inserted as the first parameter indicating the size of the object being pointed to. All objects must be the same size.</source>
          <target state="translated">'作为第一个参数插入的参数，指示要指向的对象的大小。所有对象的大小必须相同。</target>
        </trans-unit>
        <trans-unit id="4d4d62c248b664f4f828763b22a0a69cb6809c0b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; partitioning is intended for internal testing only. The value &amp;lsquo;</source>
          <target state="translated">分区仅用于内部测试。价值 '</target>
        </trans-unit>
        <trans-unit id="d4d7aab219721f35503df410bd55382075bf2c9e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; performs complex conjugation when used on a value with a complex type. This is a GNU extension; for values of floating type, you should use the ISO C99 functions &lt;code&gt;conjf&lt;/code&gt;, &lt;code&gt;conj&lt;/code&gt; and &lt;code&gt;conjl&lt;/code&gt;, declared in &lt;code&gt;&amp;lt;complex.h&amp;gt;&lt;/code&gt; and also provided as built-in functions by GCC.</source>
          <target state="translated">当对具有复杂类型的值使用'时，会执行复杂共轭。这是GNU扩展；对于浮点类型的值，应使用在 &lt;code&gt;&amp;lt;complex.h&amp;gt;&lt;/code&gt; 中声明的ISO C99函数 &lt;code&gt;conjf&lt;/code&gt; ， &lt;code&gt;conj&lt;/code&gt; 和 &lt;code&gt;conjl&lt;/code&gt; ，也应由GCC内置。</target>
        </trans-unit>
        <trans-unit id="3fdb823002dc6dfd9b967615f77b498f39af6f0c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; pointer, and if the function pointed to is virtual, where to find the vtable, and where in the vtable to look for the member function. If you are using PMFs in an inner loop, you should really reconsider that decision. If that is not an option, you can extract the pointer to the function that would be called for a given object/PMF pair and call it directly inside the inner loop, to save a bit of time.</source>
          <target state="translated">指针，如果所指向的函数是虚拟的，则在何处查找vtable，以及在vtable中何处查找成员函数。如果在内部循环中使用PMF，则应该重新考虑该决定。如果这不是一个选择，则可以提取指向给定对象/ PMF对将调用的函数的指针，然后直接在内部循环内调用它，以节省一些时间。</target>
        </trans-unit>
        <trans-unit id="4563c051a6a6c66cf5ff3c3a90291d825d095381" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; pragmas.</source>
          <target state="translated">语篇</target>
        </trans-unit>
        <trans-unit id="d9a7dcbf0dc6de330b210ef05aa967c5a5670ddc" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; pre-processor directives, and the &amp;lsquo;</source>
          <target state="translated">'预处理程序指令，以及'</target>
        </trans-unit>
        <trans-unit id="5641c689cca07cacc9259cf5cbc868ef50ea405f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; preceding and following the name. This allows you to use them in header files without being concerned about a possible macro of the same name. For example, you may use the attribute name &lt;code&gt;__noreturn__&lt;/code&gt; instead of &lt;code&gt;noreturn&lt;/code&gt;.</source>
          <target state="translated">在名称的前面和后面。这样，您就可以在头文件中使用它们，而不必担心可能存在相同名称的宏。例如，您可以使用属性名称 &lt;code&gt;__noreturn__&lt;/code&gt; 代替 &lt;code&gt;noreturn&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="35189e0b3ea3ee398947b0a83eca5595687c8f18" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; prefix and also by being overloaded so that they work on multiple types.</source>
          <target state="translated">'前缀，也可以通过重载来使它们适用于多种类型。</target>
        </trans-unit>
        <trans-unit id="96ab426a6b5a3c861e723eb2367dd608173e34fd" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; prefix.</source>
          <target state="translated">' 字首。</target>
        </trans-unit>
        <trans-unit id="3f227e9083fdcdf835eb89a3b7e5aea560e8c746" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; prefix. Arguments to options that specify a size threshold of some sort may be arbitrarily large decimal or hexadecimal integers followed by a byte size suffix designating a multiple of bytes such as &lt;code&gt;kB&lt;/code&gt; and &lt;code&gt;KiB&lt;/code&gt; for kilobyte and kibibyte, respectively, &lt;code&gt;MB&lt;/code&gt; and &lt;code&gt;MiB&lt;/code&gt; for megabyte and mebibyte, &lt;code&gt;GB&lt;/code&gt; and &lt;code&gt;GiB&lt;/code&gt; for gigabyte and gigibyte, and so on. Such arguments are designated by &lt;var&gt;byte-size&lt;/var&gt; in the following text. Refer to the NIST, IEC, and other relevant national and international standards for the full listing and explanation of the binary and decimal byte size prefixes.</source>
          <target state="translated">' 字首。用于指定某种大小阈值的选项的参数可以是任意大的十进制或十六进制整数，后跟一个字节大小后缀，这些后缀指定多个字节，例如 &lt;code&gt;kB&lt;/code&gt; 和 &lt;code&gt;KiB&lt;/code&gt; 分别表示千字节和kibibyte， &lt;code&gt;MB&lt;/code&gt; 和 &lt;code&gt;MiB&lt;/code&gt; 表示兆字节和兆字节， &lt;code&gt;GB&lt;/code&gt; 和 &lt;code&gt;GiB&lt;/code&gt; 表示千兆字节和千兆字节，依此类推。在下文中，此类参数由 &lt;var&gt;byte-size&lt;/var&gt; 指定。有关二进制和十进制字节大小前缀的完整列表和说明，请参阅NIST，IEC和其他相关的国家和国际标准。</target>
        </trans-unit>
        <trans-unit id="f50153a267c6e375eec867e2a3730edf61454105" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; prefixes. The number parsed is placed in the significand such that the least significant bit of the number is at the least significant bit of the significand. The number is truncated to fit the significand field provided. The significand is forced to be a quiet NaN.</source>
          <target state="translated">'前缀。解析的数字放在有效位中，以使数字的最低有效位在有效位的最低有效位。该数字将被截断以适合提供的有效位数字段。该重要数字被迫成为安静的NaN。</target>
        </trans-unit>
        <trans-unit id="355872b2b1a3c3bd3ba8d658ef382e09e32073a3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; preprocessor constant is defined.</source>
          <target state="translated">定义了预处理程序常量。</target>
        </trans-unit>
        <trans-unit id="d73ba346be03f7ededf629759b3e3a744322a7e4" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; present for backward compatibility.</source>
          <target state="translated">'是为了向后兼容。</target>
        </trans-unit>
        <trans-unit id="6fcfb1d20306c0f703ac5ec60dac33f6fdbd9821" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; pseudo target defaults to VFPv3 with 16 double-precision registers. It supports the following extension options: &amp;lsquo;</source>
          <target state="translated">伪目标默认为具有16个双精度寄存器的VFPv3。它支持以下扩展选项：</target>
        </trans-unit>
        <trans-unit id="50fd8239eabc9a97d95bc4f4d278515e31bcaee2" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; pseudo-op). Default visibility is supported everywhere. Hidden visibility is supported on Darwin targets.</source>
          <target state="translated">（伪操作）。到处都支持默认可见性。达尔文目标支持隐藏可见性。</target>
        </trans-unit>
        <trans-unit id="defa7344a1649b93a1b43c1af97fa03cea56040a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; rather than &amp;lsquo;</source>
          <target state="translated">' 而不是 '</target>
        </trans-unit>
        <trans-unit id="3486fdf02e76707d71811fb7d79c2ba2a04a89c9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; rather than the usual &amp;lsquo;</source>
          <target state="translated">'而不是通常的'</target>
        </trans-unit>
        <trans-unit id="8582e11d6dddda4b9f538d0f60eda9549f5f57ed" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; refer to processors with FPUs clocked a ratio of 3:2 with respect to the core. For compatibility reasons, &amp;lsquo;</source>
          <target state="translated">指的是FPU相对于核心时钟频率为3：2的处理器。出于兼容性原因，&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="dabe2122a4b1653e8a50e28085b2b8047b7632bb" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; refer to processors with FPUs clocked at half the rate of the core, names of the form &amp;lsquo;</source>
          <target state="translated">&amp;ldquo;指的是FPU时钟频率为核心速率一半的处理器，其形式为'</target>
        </trans-unit>
        <trans-unit id="abe7c7597ca8ffa158c739f3718b9881c80ffc3f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; refer to processors with FPUs clocked at the same rate as the core, and names of the form &amp;lsquo;</source>
          <target state="translated">&amp;ldquo;指的是FPU时钟与核心时钟频率相同的处理器，其形式为'</target>
        </trans-unit>
        <trans-unit id="600d3de7356da0b80ca6cd07490e0619b1e142c7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; refer to the formats accepted by the</source>
          <target state="translated">'指的是</target>
        </trans-unit>
        <trans-unit id="e92b96d2b6c894c413be8d124af5dac7f82f1609" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; refers to a literal capital C.</source>
          <target state="translated">'指字面大写C。</target>
        </trans-unit>
        <trans-unit id="2f55ba0d5f66754cf295ecfc832192516dfb2ed7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; refers to a literal capital M.</source>
          <target state="translated">'指字面量大写M。</target>
        </trans-unit>
        <trans-unit id="b5d17117b0897deb757c55ae8924e7ef2b5b9f25" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; register</source>
          <target state="translated">注册</target>
        </trans-unit>
        <trans-unit id="56f95697e72cd24b02f414593adabf5fb04e9dd8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; register (condition register)</source>
          <target state="translated">'寄存器（条件寄存器）</target>
        </trans-unit>
        <trans-unit id="27ddc79ec0fe4e9db1fc81b7565ee71dfb87254d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; register (condition register) number 0</source>
          <target state="translated">'寄存器（条件寄存器）编号0</target>
        </trans-unit>
        <trans-unit id="dbe7571283716a455bbbea92bd21b227f87e5595" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; register names for the stacked registers. This may make assembler output more readable.</source>
          <target state="translated">'堆叠寄存器的寄存器名称。这可以使汇编器输出更具可读性。</target>
        </trans-unit>
        <trans-unit id="a24f843d58a90ab3ed3bce4238729c6f6a2d9b15" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; register to the specified value &lt;var&gt;ptr&lt;/var&gt;. This is usually used by system code that manages threads and execution contexts. The compiler normally does not generate code that modifies the contents of &amp;lsquo;</source>
          <target state="translated">'注册为指定值 &lt;var&gt;ptr&lt;/var&gt; 。通常由管理线程和执行上下文的系统代码使用。编译器通常不会生成可修改&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="15b6a8cc1ce090db804f62155ebcfe9fdfd32f43" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; register to the specified value &lt;var&gt;val&lt;/var&gt;, while preserving the current values of the FR, SZ and PR bits.</source>
          <target state="translated">' 保留给指定值 &lt;var&gt;val&lt;/var&gt; ，同时保留FR，SZ和PR位的当前值。</target>
        </trans-unit>
        <trans-unit id="32b88b9c6f4ce4c1ae7fce0458bc87eef665ddf1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; register.</source>
          <target state="translated">'注册。</target>
        </trans-unit>
        <trans-unit id="794978d8b41ed92d143d12ac181aca522b22af26" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; register. Memory loads and stores that use the thread pointer as a base address are turned into &amp;lsquo;</source>
          <target state="translated">'注册。使用线程指针作为基地址的内存加载和存储被转换为'</target>
        </trans-unit>
        <trans-unit id="d17477141c67c1f66f16dcaf910190f1c3cc4e3f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; respectively.</source>
          <target state="translated">' 分别。</target>
        </trans-unit>
        <trans-unit id="a9b7acec614e26d84f44c29e6daaf9dc7fd3103e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; searches library &amp;lsquo;</source>
          <target state="translated">&amp;ldquo;搜索库&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="cef525c893fe2c7450842b9e7aea51bac5e3d29d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; selects the most compatible architecture for the selected ABI (that is, &amp;lsquo;</source>
          <target state="translated">'为所选的ABI选择最兼容的架构（即'</target>
        </trans-unit>
        <trans-unit id="481f5997a73ce97b055885eccc211f2b92c9474d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; selects vector-length agnostic output. At present &amp;lsquo;</source>
          <target state="translated">'选择向量长度不可知输出。现在 '</target>
        </trans-unit>
        <trans-unit id="b23ede7a85c283a7ae7da9db47d3be845ba3234c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; separated fields along with program source code. The format is</source>
          <target state="translated">分隔字段以及程序源代码。格式是</target>
        </trans-unit>
        <trans-unit id="74c9d5f175b9ec00e30e09a9e05f50d72f5e873f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; separated option keywords to select the dump details and optimizations.</source>
          <target state="translated">'分隔选项关键字以选择转储详细信息和优化。</target>
        </trans-unit>
        <trans-unit id="4e5425a69eadc821abc7b54b5f2baa8ba205522d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; separated options which control the details of the dump. Not all options are applicable to all dumps; those that are not meaningful are ignored. The following options are available</source>
          <target state="translated">分隔的选项可控制转储的详细信息。并非所有选项都适用于所有转储。那些没有意义的将被忽略。以下选项可用</target>
        </trans-unit>
        <trans-unit id="21bc80d788388475b1818d47e86cbacdf33c7152" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; sequences.</source>
          <target state="translated">'序列。</target>
        </trans-unit>
        <trans-unit id="74e190e05401bca34927b5278656e6d6e921333c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; series does not have a hardware floating-point unit and so</source>
          <target state="translated">'系列没有硬件浮点单元，因此</target>
        </trans-unit>
        <trans-unit id="10f09dc09551560e9a45030ebd6e30695d66a5fd" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; series hardware and the specific &amp;lsquo;</source>
          <target state="translated">'系列硬件及具体'</target>
        </trans-unit>
        <trans-unit id="fec78580cc0226cf2394840560a7d651e6983bdb" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; sets it to its standard level. &amp;lsquo;</source>
          <target state="translated">将其设置为标准水平。'</target>
        </trans-unit>
        <trans-unit id="c07d079738bce040037eb1f1fd2ea5c8fff94a71" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; should be passed to the program &amp;lsquo;</source>
          <target state="translated">'应该传递给程序'</target>
        </trans-unit>
        <trans-unit id="5e6948a2dfdcbe5c825830e9f31be0f8b5635e9d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; should be relied on for producing code that is portable across different hardware SVE vector lengths.</source>
          <target state="translated">应该依靠生成可在不同硬件SVE向量长度之间移植的代码。</target>
        </trans-unit>
        <trans-unit id="ee57cff3cefff28a9da8ab2e18f679a918744aec" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; sign, the type of the members and by &amp;lsquo;</source>
          <target state="translated">'符号，成员的类型和'</target>
        </trans-unit>
        <trans-unit id="6656ef212b86feb4280e0b002e306faab678402b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; sign, the type of the members followed by &amp;lsquo;</source>
          <target state="translated">'符号，成员类型后跟'</target>
        </trans-unit>
        <trans-unit id="77b4ad927c69486a178202aa19e5e3eef2cea0ca" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; since the &amp;lsquo;</source>
          <target state="translated">'因为'</target>
        </trans-unit>
        <trans-unit id="6eb85024f3ec55e7b20f046424d94f4a06238808" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; spec string.</source>
          <target state="translated">'spec字符串。</target>
        </trans-unit>
        <trans-unit id="081e2943adf837892353eab8656e6ca9e7c091b9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; specifies that exactly one partition should be used while the value &amp;lsquo;</source>
          <target state="translated">'指定应该使用一个分区，而值'</target>
        </trans-unit>
        <trans-unit id="7b6c33ed91a7375352c2955837851068b44100e9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; specify that GCC should tune for a big.LITTLE system.</source>
          <target state="translated">'指定GCC应该调整为big.LITTLE系统。</target>
        </trans-unit>
        <trans-unit id="1d64ff9d9b4091a4c3b0888ad9aa14c25dc75e79" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; stack it is. Precompiled header files are also printed, even if they are found to be invalid; an invalid precompiled header file is printed with &amp;lsquo;</source>
          <target state="translated">&amp;rdquo;&amp;ldquo;是的。预编译的头文件也会被打印，即使发现它们是无效的也是如此。无效的预编译头文件带有'</target>
        </trans-unit>
        <trans-unit id="3f77b91c30a3d55044b432a8c79262b81f7739ab" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; stands for &amp;lsquo;</source>
          <target state="translated">' 代表 '</target>
        </trans-unit>
        <trans-unit id="9f4f579e9779d89eea635da5e3420f9b0583a365" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; stands for the character</source>
          <target state="translated">'代表角色</target>
        </trans-unit>
        <trans-unit id="35c9d4dd0e4446cfda2d97ec7fdbd6cdd2482a57" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; style name or the corresponding chip number. GCC supports scheduling parameters for the EV4, EV5 and EV6 family of processors and chooses the default values for the instruction set from the processor you specify. If you do not specify a processor type, GCC defaults to the processor on which the compiler was built.</source>
          <target state="translated">'样式名称或相应的芯片编号。GCC支持EV4，EV5和EV6系列处理器的调度参数，并从您指定的处理器中为指令集选择默认值。如果您未指定处理器类型，则GCC默认为构建编译器的处理器。</target>
        </trans-unit>
        <trans-unit id="a4ad544dab08dbd46c0ae98eb0c3361e463712c3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; substitutes &lt;code&gt;X&lt;/code&gt; if the</source>
          <target state="translated">' 如果 &lt;code&gt;X&lt;/code&gt; 代替X</target>
        </trans-unit>
        <trans-unit id="9990d2165de1099320d97e468af32ce23f811dac" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; substitutes a single dash and &amp;lsquo;</source>
          <target state="translated">'替换单个破折号和'</target>
        </trans-unit>
        <trans-unit id="321b67c29454d786acc2b137adecd33a765095df" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; substitutes nothing at all. These are the two most common ways to instruct a program that it should read from standard input or write to standard output. If you need something more elaborate you can use an &amp;lsquo;</source>
          <target state="translated">'什么也替代不了。这是指示程序从标准输入读取或写入标准输出的两种最常用的方法。如果您需要更详细的说明，可以使用&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="b4019cbfa1ecf968c67a059f9d69da825719629e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; substitutes.</source>
          <target state="translated">替代品。</target>
        </trans-unit>
        <trans-unit id="2c28b4998a4a5763c08ba06a5a430c91622a6962" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; substitution. (See below.)</source>
          <target state="translated">' 替代。（见下文。）</target>
        </trans-unit>
        <trans-unit id="4484966b786972befcd67913fd7e8210357446c9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; subtype, instead of one controlled by the</source>
          <target state="translated">'子类型，而不是由</target>
        </trans-unit>
        <trans-unit id="16138baa8e830027f4d37afba05054893e7eb9a4" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; suffix on integer constants.) Note, these suffixes appear in macros defined in the system headers of most modern systems, e.g. the &amp;lsquo;</source>
          <target state="translated">'后缀为整数常量。）请注意，这些后缀出现在大多数现代系统的系统标头中定义的宏中，例如'</target>
        </trans-unit>
        <trans-unit id="b1ee32f9ff27eda9c15d4b6f0b5915be69d929b2" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; suffix still has the GNU meaning.</source>
          <target state="translated">后缀仍然具有GNU的含义。</target>
        </trans-unit>
        <trans-unit id="b0aa90fa86d89bb8805ba9eee92f744e653e7869" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; suffix) when assembling them.</source>
          <target state="translated">（后缀）。</target>
        </trans-unit>
        <trans-unit id="97dcee030c8836a2865e8ecc2f203cfd153ad2e4" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; suffix, so C++14 code that includes the &amp;lsquo;</source>
          <target state="translated">后缀，因此包含'</target>
        </trans-unit>
        <trans-unit id="139aaebaa57ad8962a5b2ee4325f224e112ed95f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; suffix. You can specify &amp;lsquo;</source>
          <target state="translated">后缀。您可以指定&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="6b06d5de8e85da80af8c020ff2227f4057f93e6c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; switches are supported in addition to the above on x86-64 processors in 64-bit environments.</source>
          <target state="translated">在64位环境中的x86-64处理器上，除上述功能外，还支持其他交换机。</target>
        </trans-unit>
        <trans-unit id="8401ca4577a9a8d882babc3aea71e1a25aaa9f59" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; takes highest priority over both &amp;lsquo;</source>
          <target state="translated">'两者都享有最高优先级'</target>
        </trans-unit>
        <trans-unit id="1f54e26bc87a0a2fab77340b077d9aa7e37e715b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; takes priority over &amp;lsquo;</source>
          <target state="translated">&amp;ldquo;优先于&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="cd16d9a7076736808720d07350c776f80630d493" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; target, this option implies</source>
          <target state="translated">目标，此选项表示</target>
        </trans-unit>
        <trans-unit id="7e92a2604d0f7fdca7e7d5ac91e19423966fc2ec" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; target.</source>
          <target state="translated">目标。</target>
        </trans-unit>
        <trans-unit id="cd6f1baebf517b27b1ba1e0f0c7818c2f92d4d56" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; targets default to</source>
          <target state="translated">'目标默认为</target>
        </trans-unit>
        <trans-unit id="5b4ffd0a68cd7722edb8438d55a609340643f57f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; targets, the default is</source>
          <target state="translated">'目标，默认为</target>
        </trans-unit>
        <trans-unit id="056147ad41bb52b66af9ed7beb627c0f9b4a5179" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; targets.</source>
          <target state="translated">目标。</target>
        </trans-unit>
        <trans-unit id="38cba9e03a9a92a6fd1bda85caf604b0dd55e559" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; the code generation is configured to produce</source>
          <target state="translated">'代码生成被配置为产生</target>
        </trans-unit>
        <trans-unit id="9c9ed84575adb586ca1346600f1a87f2b54c62a5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; the code generation is configured to produce shared library. In this case</source>
          <target state="translated">'代码生成被配置为产生共享库。在这种情况下</target>
        </trans-unit>
        <trans-unit id="3ac92faa0283305d0be528c0c722ea1eddd63670" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; the code generation is configured to produce static binary. In this case</source>
          <target state="translated">将代码生成配置为生成静态二进制文件。在这种情况下</target>
        </trans-unit>
        <trans-unit id="751dbcee70e5f93858d0abf30ebf091c78065bd6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; the compiler assumes that incremental linking is done. The sections containing intermediate code for link-time optimization are merged, pre-optimized, and output to the resulting object file. In addition, if</source>
          <target state="translated">'编译器假定增量链接已完成。包含用于链接时间优化的中间代码的部分将合并，预先优化，然后输出到生成的目标文件中。另外，如果</target>
        </trans-unit>
        <trans-unit id="d35eaaffc6295c79621d7febc295f4cc0cbff4c6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; the member template definitions.</source>
          <target state="translated">'成员模板定义。</target>
        </trans-unit>
        <trans-unit id="ef6fed6549190b0d965e5cf7e0fced517211eb29" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; through &amp;lsquo;</source>
          <target state="translated">'通过'</target>
        </trans-unit>
        <trans-unit id="1c96ef5db986721c2692b006a74b2645ab6ec4d7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to &amp;lsquo;</source>
          <target state="translated">' 至 '</target>
        </trans-unit>
        <trans-unit id="25e045794d45b41e40a15ba6b03ecbcf2cab0b14" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to all global symbols, so the assembly code can be used with the &lt;code&gt;PREFIX&lt;/code&gt; assembly directive.</source>
          <target state="translated">'表示所有全局符号，因此汇编代码可以与 &lt;code&gt;PREFIX&lt;/code&gt; 汇编指令一起使用。</target>
        </trans-unit>
        <trans-unit id="1f5fd08a143b7e4c653b1c16c9d4a22c5e44257f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to an expression, throwing an object, or referring to a type in a catch clause or exception specification.</source>
          <target state="translated">'到表达式，抛出对象或在catch子句或异常规范中引用类型。</target>
        </trans-unit>
        <trans-unit id="8ba7bcaeb175b51595a5178d5d588175c55cc008" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to assign no, highest, or second-highest (respectively) priority to dispatch-slot restricted instructions.</source>
          <target state="translated">'为分配时隙限制的指令分配no，最高或第二高（分别）优先级。</target>
        </trans-unit>
        <trans-unit id="e7d610fcebfd8bd1b6f66db74974496ebfc8cee4" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to be 32-bit), and that floating-point values up to 64 bits wide are passed in F registers. Contrast this with &amp;lsquo;</source>
          <target state="translated">'为32位），并且最大64位宽的浮点值在F寄存器中传递。将此与&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="a9bf81d3dc1a8984b11d4917576184cf1038fef8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to be a weak alias for &amp;lsquo;</source>
          <target state="translated">'作为'的弱别名</target>
        </trans-unit>
        <trans-unit id="7f4b68da81b75fb6eeb1e3d153c58913b646be22" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to be overridden by one returning a different pointer type. This extension to the covariant return type rules is now deprecated and will be removed from a future version.</source>
          <target state="translated">返回一个不同的指针类型将其覆盖。协变量返回类型规则的此扩展现已弃用，并将从以后的版本中删除。</target>
        </trans-unit>
        <trans-unit id="747bcf06703eb0d0d706c568a3d7c0b245716a7f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to be used as a keyword to define vector type variables and arguments. &amp;lsquo;</source>
          <target state="translated">'用作定义向量类型变量和参数的关键字。'</target>
        </trans-unit>
        <trans-unit id="a9bcbfddd43a7864ab14d920c726549a936b1ba3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to create new partition for every symbol where possible. Specifying &amp;lsquo;</source>
          <target state="translated">'在可能的情况下为每个符号创建新的分区。指定&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="cd03b9ee76c923a101cf9ae36c90388c61a93702" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to distinguish them from error messages.</source>
          <target state="translated">以区别于错误消息。</target>
        </trans-unit>
        <trans-unit id="1e10686e6c0bbadc7a760bb97c53700373049cef" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to dump to standard output, and &amp;lsquo;</source>
          <target state="translated">'转储到标准输出，和'</target>
        </trans-unit>
        <trans-unit id="5221e3fc33dc129b4de8fa80d8b7b8406130587f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to filter out those warnings.</source>
          <target state="translated">以过滤掉这些警告。</target>
        </trans-unit>
        <trans-unit id="e207edb06c44e1ffee14b09d2bd576241fa09fbb" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to include the header file; &amp;lsquo;</source>
          <target state="translated">'包含头文件；'</target>
        </trans-unit>
        <trans-unit id="94c280763e15f6827a82d3da1b06a402bc2dda96" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to invert the option:</source>
          <target state="translated">'来反转选项：</target>
        </trans-unit>
        <trans-unit id="28dcd81706e9335d54173713faabbb0a53ff42ed" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to link his or her application. Applications are not required to use the</source>
          <target state="translated">以链接他或她的申请。不需要应用程序使用</target>
        </trans-unit>
        <trans-unit id="29b9f008a5a0614cea796c50934c1070f0f7fcb0" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to mean &amp;ldquo;any integer outside the range -128 to 127&amp;rdquo;, and then specifying &amp;lsquo;</source>
          <target state="translated">'表示&amp;ldquo;超出-128到127范围的任何整数&amp;rdquo;，然后指定&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="7319c1f5fe9cd726827d4fd8725f43a46c30b5e3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to specify a nested subobject to initialize; the list is taken relative to the subobject corresponding to the closest surrounding brace pair. For example, with the &amp;lsquo;</source>
          <target state="translated">'指定要初始化的嵌套子对象；该列表是相对于对应于最接近的括号对的子对象获取的。例如，使用&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="cb981e4b7c234addc580de918e72cb9b746b3955" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to specify a partitioning mirroring the original source files or &amp;lsquo;</source>
          <target state="translated">'以指定镜像原始源文件的分区，或'</target>
        </trans-unit>
        <trans-unit id="9c0690b069e16610f3dde8f4da1fa3b45e233474" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to specify partitioning into equally sized chunks (whenever possible) or &amp;lsquo;</source>
          <target state="translated">'以指定划分为大小相等的块（如果可能）或'</target>
        </trans-unit>
        <trans-unit id="b96b741c5b8c6ab7fbc59d6b6f9ecbfec23495f3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to the architecture name. Extension options are processed in order and capabilities accumulate. An extension will also enable any necessary base extensions upon which it depends. For example, the &amp;lsquo;</source>
          <target state="translated">'改为架构名称。扩展选项按顺序处理，功能不断积累。扩展还将启用它所依赖的任何必要的基本扩展。例如，&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="1e325ed7f61f460b2ad46963e7303d06823e0742" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to the command recipe in the parent Makefile for this to work. This option likely only works if &lt;code&gt;MAKE&lt;/code&gt; is GNU make.</source>
          <target state="translated">'才能在父Makefile中的命令配方中使用。仅当 &lt;code&gt;MAKE&lt;/code&gt; 是GNU make时，此选项才可能起作用。</target>
        </trans-unit>
        <trans-unit id="876029c6ecf433b4603b8318f33435182f18ba71" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to the integer.</source>
          <target state="translated">'到整数。</target>
        </trans-unit>
        <trans-unit id="94b553527276f98960779fb5b0a35d9e9c86b311" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to the integer. To make an integer constant of type &lt;code&gt;unsigned long
long int&lt;/code&gt;, add the suffix &amp;lsquo;</source>
          <target state="translated">'到整数。要使类型为 &lt;code&gt;unsigned long long int&lt;/code&gt; 的整数常量，请添加后缀'</target>
        </trans-unit>
        <trans-unit id="2e70c71b754410dd31984a69e3cab392094feb24" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to the prefix.</source>
          <target state="translated">'作为前缀。</target>
        </trans-unit>
        <trans-unit id="c69d15f8e44a888d4bd1368919fd60293ccc2c89" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to the source file name, and the file is created in the same directory as the output file. If the &amp;lsquo;</source>
          <target state="translated">到源文件名，然后在与输出文件相同的目录中创建文件。如果&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="8ed3c9950521cf53b071d8dd20633754dbb7cc1c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to treat it like a warning (even if</source>
          <target state="translated">'将其视为警告（即使</target>
        </trans-unit>
        <trans-unit id="1c80b7645a1d854bbd17006c82f06144b4c40be4" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to treat this diagnostic as an error, &amp;lsquo;</source>
          <target state="translated">'将此诊断视为错误，'</target>
        </trans-unit>
        <trans-unit id="5bef1515c6834bc8f9c7e30752b5e04672e84850" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to turn off warnings; for example,</source>
          <target state="translated">'关闭警告；例如，</target>
        </trans-unit>
        <trans-unit id="39a6c2233326ca538b521ebba35c17f6f6321fff" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; toolchain, this option causes the hardware BSP provided by libgloss to be linked in if</source>
          <target state="translated">'工具链，此选项将导致libgloss提供的硬件BSP被链接到</target>
        </trans-unit>
        <trans-unit id="2da113e399a1a9773ce6971dff90293032832143" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; toolchain. Certain other options, such as</source>
          <target state="translated">工具链。其他某些选项，例如</target>
        </trans-unit>
        <trans-unit id="78d9fddfa8f96adddd4fef84d8627d7567c4c3c1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; tracks tokens locations completely. This value is the most memory hungry. When this option is given no argument, the default parameter value is &amp;lsquo;</source>
          <target state="translated">'完全跟踪令牌位置。此值是最消耗内存的。如果不给此选项提供参数，则默认参数值为'</target>
        </trans-unit>
        <trans-unit id="76c937e0b6cc89a062161ae10ec3d7d4988e175f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; tracks tokens locations in a degraded mode for the sake of minimal memory overhead. In this mode all tokens resulting from the expansion of an argument of a function-like macro have the same location. Value &amp;lsquo;</source>
          <target state="translated">为了最小化内存开销，&amp;ldquo;&amp;rdquo;以降级模式跟踪令牌位置。在这种模式下，由函数式宏的参数扩展产生的所有标记都具有相同的位置。价值'</target>
        </trans-unit>
        <trans-unit id="03e39be116fd453fb19403f3e451fbe0a4fb7794" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; tunes performance to the host system. This option has no effect if the compiler is unable to recognize the processor of the host system.</source>
          <target state="translated">调整主机系统的性能。如果编译器无法识别主机系统的处理器，则此选项无效。</target>
        </trans-unit>
        <trans-unit id="54a47e25cf94d29dd512a01ee7945fbe67643846" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; turns on all types of branch protection features. If a feature has additional tuning options, then &amp;lsquo;</source>
          <target state="translated">会打开所有类型的分支保护功能。如果某个功能还有其他调整选项，则&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="13ac0da77896e4b23930650fa879227a5fd24579" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; turns on branch target identification mechanism.</source>
          <target state="translated">'开启分支目标识别机制。</target>
        </trans-unit>
        <trans-unit id="0d18f91c55c591d82a20ec7351429f79b0975340" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; turns on return address signing to its standard level: signing functions that save the return address to memory (non-leaf functions will practically always do this) using the a-key. The optional argument &amp;lsquo;</source>
          <target state="translated">'将返回地址签名打开到其标准级别：使用a键签名的函数将返回地址保存到内存中（非叶子函数实际上总是这样做）。可选参数'</target>
        </trans-unit>
        <trans-unit id="0b6b662caf8ef50e43f9e777831f3d1e52831fb5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; uses alignment value as specified by the psABI, and &amp;lsquo;</source>
          <target state="translated">'使用psABI指定的对齐值，并且'</target>
        </trans-unit>
        <trans-unit id="7f8fb1eb4d4587ebe559311c119a4e77b06ec6d9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; uses increased alignment value compatible uses GCC 4.8 and earlier, &amp;lsquo;</source>
          <target state="translated">'使用增加的对齐值，兼容使用GCC 4.8和更早的版本，'</target>
        </trans-unit>
        <trans-unit id="9f23d00d56c1931b522364fd1aa0e1c9e7ed44aa" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; uses increased alignment value to match the cache line size. &amp;lsquo;</source>
          <target state="translated">'使用增加的对齐值来匹配缓存行大小。'</target>
        </trans-unit>
        <trans-unit id="e15400798f607d653c6916b38ea136006f4471a6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; value in user code must be done with caution, since the compiler might use &amp;lsquo;</source>
          <target state="translated">'由于编译器可能会使用'</target>
        </trans-unit>
        <trans-unit id="5f6f876c00cb87147116ea210761a7c389fcc9ef" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; values are used to exactly determine which path is taken more often.</source>
          <target state="translated">值用于准确确定更常采用的路径。</target>
        </trans-unit>
        <trans-unit id="e6ca6633de11e82e2247b004389f4aa468fffbdd" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; vs &amp;lsquo;</source>
          <target state="translated">'与'</target>
        </trans-unit>
        <trans-unit id="0779050ce9987f679c1038a47da66263698a9c04" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; was simply substituted with a file name chosen for the previous &amp;lsquo;</source>
          <target state="translated">'只是替换为为先前'选择的文件名</target>
        </trans-unit>
        <trans-unit id="502558e63736c003256f143d104a28598f133cdb" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; was simply substituted with a file name chosen once per compilation, without regard to any appended suffix (which was therefore treated just like ordinary text), making such attacks more likely to succeed.</source>
          <target state="translated">'只需替换为每次编译一次选择的文件名，而无需考虑任何附加后缀（因此，它像普通文本一样被对待），使得这种攻击更有可能成功。</target>
        </trans-unit>
        <trans-unit id="f519e5816b445a4462f7c6c074b8d53555f7ae7c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; when</source>
          <target state="translated">' 什么时候</target>
        </trans-unit>
        <trans-unit id="4581798a42fc267b5b88d8c529c59a7d48e1ec83" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; when inverted (ones complement)</source>
          <target state="translated">'反转时（补码）</target>
        </trans-unit>
        <trans-unit id="b1b16141646060bcac76d2f93a69ece24464912b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; when negated (twos complement)</source>
          <target state="translated">'取反时（二进制补码）</target>
        </trans-unit>
        <trans-unit id="16f8cbcf9ad14072c85731a453e55d733f44faf0" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; when not used together with &amp;lsquo;</source>
          <target state="translated">'当不与'</target>
        </trans-unit>
        <trans-unit id="05f1b1569a8bb4f983fcf2762d48347bd3c8a75b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; where &lt;var&gt;cond&lt;/var&gt; is one of the standard conditions defined in the ISA manual for &lt;code&gt;j&lt;var&gt;cc&lt;/var&gt;&lt;/code&gt; or &lt;code&gt;set&lt;var&gt;cc&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="translated">'，其中 &lt;var&gt;cond&lt;/var&gt; 是ISA手册中针对 &lt;code&gt;j&lt;var&gt;cc&lt;/var&gt;&lt;/code&gt; 或 &lt;code&gt;set&lt;var&gt;cc&lt;/var&gt;&lt;/code&gt; 定义的标准条件之一。</target>
        </trans-unit>
        <trans-unit id="224bfa989cb06395bf3f62406fb52c196c7e4a54" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; where &lt;var&gt;n&lt;/var&gt; is the size of the data type.</source>
          <target state="translated">'其中 &lt;var&gt;n&lt;/var&gt; 是数据类型的大小。</target>
        </trans-unit>
        <trans-unit id="7d34efd1eefc71bdc46e1c691387ffc6d0f440a5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; which appear to be two hexadecimal constants separated by the minus operator. Actually, this string is a single &lt;em&gt;preprocessing token&lt;/em&gt;. Each such token must correspond to one token in C. Since this does not, GCC prints an error message. Although it may appear obvious that what is meant is an operator and two values, the ISO C standard specifically requires that this be treated as erroneous.</source>
          <target state="translated">'看起来是由减号分隔的两个十六进制常量。实际上，该字符串是单个&lt;em&gt;预处理令牌&lt;/em&gt;。每个这样的令牌必须与C中的一个令牌相对应。由于不这样，GCC会打印一条错误消息。尽管可能看起来很明显是一个运算符和两个值，但是ISO C标准特别要求将其视为错误。</target>
        </trans-unit>
        <trans-unit id="ce548baa3dcfd80050cebbf016ad0a342bb4bbe1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; while &amp;lsquo;</source>
          <target state="translated">'一会儿'</target>
        </trans-unit>
        <trans-unit id="1b2d77e78180f9351e6cde7ef400900cba22c2ba" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; while others do not. See, for example, the &amp;lsquo;</source>
          <target state="translated">'而其他人则没有。例如，参见&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="d6e59717a41934fe3634c5f40aca5aa391956453" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; will do.</source>
          <target state="translated">' 会做。</target>
        </trans-unit>
        <trans-unit id="a93d327d16920f7102563d1856dfddf404a0da93" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; will override the available floating-point and SIMD extension instructions.</source>
          <target state="translated">'将覆盖可用的浮点和SIMD扩展指令。</target>
        </trans-unit>
        <trans-unit id="3f4ab9547533f8fc34d036f65d0098a66594fbf6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; with a new one. The new definition adds in some extra command-line options before including the text of the old definition.</source>
          <target state="translated">换一个新的。新定义在包含旧定义的文本之前会添加一些额外的命令行选项。</target>
        </trans-unit>
        <trans-unit id="c9f1bf742bc9d084b36bd3cb92ef2565aa5bbfbe" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; with no argument, it applies to an include file with the same basename&lt;a href=&quot;#FOOT4&quot; id=&quot;DOCF4&quot; name=&quot;DOCF4&quot;&gt;&lt;sup&gt;4&lt;/sup&gt;&lt;/a&gt; as your source file. For example, in</source>
          <target state="translated">'（不带参数），它适用于与源文件具有相同基本名称&lt;a href=&quot;#FOOT4&quot; id=&quot;DOCF4&quot; name=&quot;DOCF4&quot;&gt;&lt;sup&gt;4&lt;/sup&gt;&lt;/a&gt;的包含文件。例如，在</target>
        </trans-unit>
        <trans-unit id="e7a3015dda596b394c38dca135d21f85aa3ebffe" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; without &amp;lsquo;</source>
          <target state="translated">'没有'</target>
        </trans-unit>
        <trans-unit id="0dc205d9bf0c9ff774def5e928c5c2881b5a3c50" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; would be transformed either to &amp;lsquo;</source>
          <target state="translated">'将被转换为'</target>
        </trans-unit>
        <trans-unit id="bc804106108f7bd979f6feca0e37d799668925a5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;&amp;mdash;for example,</source>
          <target state="translated">'-例如，</target>
        </trans-unit>
        <trans-unit id="00de7c01d30f729b5e62e59bad477a85d24c72f1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;&amp;mdash;not for other compilers such as plain &lt;code&gt;gcc&lt;/code&gt;. Whatever the ISO C standard says is relevant to the design of plain &lt;code&gt;gcc&lt;/code&gt; without</source>
          <target state="translated">'-不适用于其他编译器，例如plain &lt;code&gt;gcc&lt;/code&gt; 。无论ISO C标准说是相关平淡的设计 &lt;code&gt;gcc&lt;/code&gt; 不</target>
        </trans-unit>
        <trans-unit id="dcb0f5083283b8ed0056439fc5a6b003ecdf5b70" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;&amp;rsquo; is preferable for &lt;code&gt;asm&lt;/code&gt; statements)</source>
          <target state="translated">''对于 &lt;code&gt;asm&lt;/code&gt; 语句更可取）</target>
        </trans-unit>
        <trans-unit id="3d710ff823f1d10d2285e509ae3146f07fa57416" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;)</source>
          <target state="translated">&amp;rsquo;)</target>
        </trans-unit>
        <trans-unit id="53a06a250ae2821edd769135818cefa09c3a1422" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) can be controlled, and not all of them. Use</source>
          <target state="translated">'）可以控制，但不是全部。用</target>
        </trans-unit>
        <trans-unit id="66a59b09899d33d90f56a9d67697d71807563efb" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) followed by its (zero-based) position in &lt;var&gt;GotoLabels&lt;/var&gt; plus the number of input operands. For example, if the &lt;code&gt;asm&lt;/code&gt; has three inputs and references two labels, refer to the first label as &amp;lsquo;</source>
          <target state="translated">'），然后是其在 &lt;var&gt;GotoLabels&lt;/var&gt; 中的位置（从零开始）以及输入操作数的数量。例如，如果 &lt;code&gt;asm&lt;/code&gt; 具有三个输入并引用了两个标签，则将第一个标签称为&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="e475de6573c410ed9174c3f23c2d0b2c68dd6feb" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) from the option name. Unless documented otherwise, an argument can be either numeric or a string. Numeric arguments must typically be small unsigned decimal or hexadecimal integers. Hexadecimal arguments must begin with the &amp;lsquo;</source>
          <target state="translated">'）。除非另有说明，否则参数可以是数字或字符串。数值参数通常必须是小的无符号十进制或十六进制整数。十六进制参数必须以'</target>
        </trans-unit>
        <trans-unit id="757956e655505260d48be09c6401ced2f6616e52" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) instead of digits.</source>
          <target state="translated">'）而不是数字。</target>
        </trans-unit>
        <trans-unit id="7b40161a5ee52fced90ad21e794bbab6943bfce4" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) instruct &lt;code&gt;gcc&lt;/code&gt; to do nothing at all.</source>
          <target state="translated">'）指示 &lt;code&gt;gcc&lt;/code&gt; 不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="f48998525d685598cafa634dea469c07a14f8c01" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) is determined by the flags that specify the ISA that GCC is targeting, like</source>
          <target state="translated">'）由指定GCC定位的ISA的标志确定，例如</target>
        </trans-unit>
        <trans-unit id="e3b8003d677b625cc848dc562e266c1883c1bf49" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) is used. Usually they indicate a typo in the user&amp;rsquo;s code, as they have implementation-defined values, and should not be used in portable code.</source>
          <target state="translated">'） 用来。通常，它们在用户代码中指示输入错误，因为它们具有实现定义的值，因此不应在可移植代码中使用。</target>
        </trans-unit>
        <trans-unit id="bce679860a255116638f86cdf1bdd003a1e6221f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) or generic structs (&amp;lsquo;</source>
          <target state="translated">'）或通用结构（'</target>
        </trans-unit>
        <trans-unit id="774731d593e5209e46f6cf8756de5fe9e5ea50e2" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) or used indirectly (&amp;lsquo;</source>
          <target state="translated">'）或间接使用（'</target>
        </trans-unit>
        <trans-unit id="a55dc4d3813615932e15b8e05793ff32f4eb5bb3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) take effect in combination with other atomic operations on specific memory locations (e.g., atomic loads); operations on specific memory locations do not necessarily affect other operations in the same way.</source>
          <target state="translated">'）与其他特定于内存位置的原子操作（例如，原子负载）一起生效；特定内存位置上的操作不一定会以相同的方式影响其他操作。</target>
        </trans-unit>
        <trans-unit id="101017a161e8a4a5da8f0b61d9487a84646ffa42" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) to delimit the operand parameters after the assembler template:</source>
          <target state="translated">'）来在汇编模板之后定界操作数参数：</target>
        </trans-unit>
        <trans-unit id="c24500a4d6202ccddafac06900a7b0060daebcfb" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) within a single string. Spaces are not permitted within the strings.</source>
          <target state="translated">'）放在单个字符串中。字符串中不允许有空格。</target>
        </trans-unit>
        <trans-unit id="b7de57a249813f45c8bb234a3b77cdb949b14668" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;)&amp;mdash;and don&amp;rsquo;t do anything else.</source>
          <target state="translated">'），并且别无其他。</target>
        </trans-unit>
        <trans-unit id="920418559681c5ff8ecbd8a0896c35c865a62667" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;), &amp;lsquo;</source>
          <target state="translated">'），'</target>
        </trans-unit>
        <trans-unit id="9d955da2a687bb782e3a613396d318419036d3fc" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;), an assembler template such as this:</source>
          <target state="translated">'），例如这样的汇编模板：</target>
        </trans-unit>
        <trans-unit id="ed22c9b62e2fac731d3fa0a84f6b34a16db9b4bf" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;), and &amp;lsquo;</source>
          <target state="translated">'）和'</target>
        </trans-unit>
        <trans-unit id="70b742c0a760f2ed8a2f4e6eff2d6ab3826154ad" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;), no object is needed to obtain the address of the function. They can be converted to function pointers directly:</source>
          <target state="translated">'），不需要任何对象即可获取函数的地址。它们可以直接转换为函数指针：</target>
        </trans-unit>
        <trans-unit id="aa12a264be1002a46fabd882b95b79338c094c3e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;), placing the value in a register (&amp;lsquo;</source>
          <target state="translated">'），将值放入寄存器（'</target>
        </trans-unit>
        <trans-unit id="d4de0145c847e059e54316341fcc9c9a246eb97b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;), the compiler chooses the most efficient one based on the current context. If you must use a specific register, but your Machine Constraints do not provide sufficient control to select the specific register you want, local register variables may provide a solution (see &lt;a href=&quot;local-register-variables#Local-Register-Variables&quot;&gt;Local Register Variables&lt;/a&gt;).</source>
          <target state="translated">'），编译器会根据当前上下文选择最有效的代码。如果必须使用特定的寄存器，但是您的机器约束不能提供足够的控制来选择所需的特定寄存器，则局部寄存器变量可以提供一种解决方案（请参阅&lt;a href=&quot;local-register-variables#Local-Register-Variables&quot;&gt;局部寄存器变量&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="b1384fe0c31b5149aeb485dfa12fc6e40b1ee80a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;).</source>
          <target state="translated">&amp;rsquo;).</target>
        </trans-unit>
        <trans-unit id="247554dea8017ceed4ebc2f0ddf4c1c56122fdae" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;). A struct type is used directly when it is the type of a variable, member. Indirect uses arise through pointers to structs. That is, when use of an incomplete struct is valid, the use is indirect. An example is &amp;lsquo;</source>
          <target state="translated">'）。当它是变量成员的类型时，直接使用结构类型。间接使用是通过指向结构的指针产生的。也就是说，当使用不完整的结构有效时，使用是间接的。一个例子是</target>
        </trans-unit>
        <trans-unit id="241137680944e9803782618a7c6234ee4be1718b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;). Generic structs are a bit complicated to explain. For C++, these are non-explicit specializations of template classes, or non-template classes within the above. Other programming languages have generics, but</source>
          <target state="translated">'）。通用结构解释起来有些复杂。对于C ++，这些是模板类或上述非模板类的非显式专业。其他编程语言具有泛型，但是</target>
        </trans-unit>
        <trans-unit id="9c4f339ea1f6efdfdb3f1de7007ecc1e689a70f6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;). ISA strings must be lower-case. Examples include &amp;lsquo;</source>
          <target state="translated">'）。ISA字符串必须为小写。例子包括&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="c515e25ab72e950aedab4e643cd942c7acaaf78a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;). ISA strings must be lower-case. Valid ISA strings include &amp;lsquo;</source>
          <target state="translated">'）。ISA字符串必须为小写。有效的ISA字符串包括&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="28dcb04b7cec7c1948f9a3d1e0eeb18abfddd844" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;). If</source>
          <target state="translated">'）。如果</target>
        </trans-unit>
        <trans-unit id="1db301197128435967c7812046b072aff4533c56" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;). Instead, the object files contain references to be resolved at link time.</source>
          <target state="translated">'）。而是，目标文件包含在链接时要解析的引用。</target>
        </trans-unit>
        <trans-unit id="e7133c2944aa60bfeb0d20f3c591dd62c46fdc22" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;). Some assemblers allow semicolons as a line separator. However, note that some assembler dialects use semicolons to start a comment.</source>
          <target state="translated">'）。一些汇编程序允许使用分号作为行分隔符。但是，请注意，某些汇编方言使用分号来开始注释。</target>
        </trans-unit>
        <trans-unit id="77387bea931c55865e91e9c6e518282a6ee31286" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;). The scope of the name is the &lt;code&gt;asm&lt;/code&gt; statement that contains the definition. Any valid C variable name is acceptable, including names already defined in the surrounding code. No two operands within the same &lt;code&gt;asm&lt;/code&gt; statement can use the same symbolic name.</source>
          <target state="translated">'）。名称的范围是包含定义的 &lt;code&gt;asm&lt;/code&gt; 语句。任何有效的C变量名称都是可接受的，包括周围代码中已定义的名称。同一 &lt;code&gt;asm&lt;/code&gt; 语句中的两个操作数都不能使用相同的符号名。</target>
        </trans-unit>
        <trans-unit id="feab9b68ab784ee007bfd9ffdaf2fcdc72d72d96" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;). Typically these qualifiers are hardware dependent. The list of supported modifiers for x86 is found at &lt;a href=&quot;#x86Operandmodifiers&quot;&gt;x86 Operand modifiers&lt;/a&gt;.</source>
          <target state="translated">'）。通常，这些限定符取决于硬件。可在&lt;a href=&quot;#x86Operandmodifiers&quot;&gt;x86 Operand修饰符中&lt;/a&gt;找到x86支持的修饰符列表。</target>
        </trans-unit>
        <trans-unit id="38d92a4f78d17aa1decb8d93c9e38d473afcd7d8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;). Using the generic &amp;lsquo;</source>
          <target state="translated">'）。使用通用的'</target>
        </trans-unit>
        <trans-unit id="8e06582ed3f8a32ea5ee39b25a0290e388c00c24" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, &amp;hellip; &amp;lsquo;</source>
          <target state="translated">'，...'</target>
        </trans-unit>
        <trans-unit id="5539094fa0b03be2ecf5d76b2f76c3ceb8adb603" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, &amp;lsquo;</source>
          <target state="translated">'，'</target>
        </trans-unit>
        <trans-unit id="3b63c535f0550f2343414feda1dd2f0ebecc5480" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, 0&amp;lsquo;</source>
          <target state="translated">'，0'</target>
        </trans-unit>
        <trans-unit id="8fb52f327e38a530b04e2b3ae2d13a53b83a7fe3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, a reference to a previously defined structure or union such as &amp;lsquo;</source>
          <target state="translated">'，指的是先前定义的结构或联合，例如'</target>
        </trans-unit>
        <trans-unit id="55abc55e6306905b6823631c506fd0ec75ff0f27" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, all workarounds for the targeted processor are enabled. The &lt;code&gt;__SILICON_REVISION__&lt;/code&gt; macro is defined to two hexadecimal digits representing the major and minor numbers in the silicon revision. If &lt;var&gt;sirevision&lt;/var&gt; is &amp;lsquo;</source>
          <target state="translated">'，将启用目标处理器的所有解决方法。该 &lt;code&gt;__SILICON_REVISION__&lt;/code&gt; 宏被定义成表示硅修订主要和次要号两个十六进制数字。如果 &lt;var&gt;sirevision&lt;/var&gt; 为'</target>
        </trans-unit>
        <trans-unit id="b4c2b924dddb74784fdc00cbc01bb9d353155e30" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and &amp;lsquo;</source>
          <target state="translated">'和'</target>
        </trans-unit>
        <trans-unit id="483d46fded9becc232dbdb93e3158f3f42b791e2" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and &lt;code&gt;*&lt;/code&gt; sequences as well, although they have a stronger binding than the &amp;lsquo;</source>
          <target state="translated">'和 &lt;code&gt;*&lt;/code&gt; 序列，尽管它们的结合力比'</target>
        </trans-unit>
        <trans-unit id="025eab9a1b6623d94918f0efdf239940346391b4" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and GNU dialects of those standards, such as &amp;lsquo;</source>
          <target state="translated">&amp;rdquo;以及这些标准的GNU方言，例如&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="9269f03454f6ba284543f68ccb8599de5d8e5ca8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and appends the platform&amp;rsquo;s usual object suffix. The result is the target.</source>
          <target state="translated">&amp;rdquo;，并附加平台的常用对象后缀。结果就是目标。</target>
        </trans-unit>
        <trans-unit id="2073c52a5a4291471a2c1778b6a5d6aa27011cd9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and each switch starts with an &amp;lsquo;</source>
          <target state="translated">'，并且每个开关均以'</target>
        </trans-unit>
        <trans-unit id="f905781c589b0e4579c81050815f957daef62254" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, as shown here:</source>
          <target state="translated">'，如下所示：</target>
        </trans-unit>
        <trans-unit id="e9ce993e58d935c75aafba5b1fdb485a8a776db3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, because of the need for those to form complete file names. The handling is such that &amp;lsquo;</source>
          <target state="translated">'，因为需要这些文件来形成完整的文件名。处理方式是&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="21e67ee4ffd5a5984f784e0175ae5cd377da2fd5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, but a function call is only used if a trap is not available.</source>
          <target state="translated">'，但仅当陷阱不可用时才使用函数调用。</target>
        </trans-unit>
        <trans-unit id="87f33fe8f4938fd885f3212c8d4fcaa4cd1d82de" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, but also generate GP-relative accesses for small data objects that are external, weak, or common. If you use this option, you must ensure that all parts of your program (including libraries) are compiled with the same</source>
          <target state="translated">&amp;rdquo;，而且还会为外部，弱或通用的小数据对象生成GP相对访问。如果使用此选项，则必须确保程序的所有部分（包括库）都以相同的方式编译</target>
        </trans-unit>
        <trans-unit id="2411a70f498933e6be4a4e9d0ef8e6b417a49aa8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, but do not generate an error message if the include file cannot be found.</source>
          <target state="translated">'，但如果找不到包含文件，则不会生成错误消息。</target>
        </trans-unit>
        <trans-unit id="f242eacde5ab79e86477338531360b8ba9ecec37" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, but generates a new temporary file name each time it appears instead of once per compilation.</source>
          <target state="translated">&amp;rdquo;，但每次出现时都会生成一个新的临时文件名，而不是每次编译时都生成一次。</target>
        </trans-unit>
        <trans-unit id="7ae3620a4615e0395e0b6bb2723f394be5b4513b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, but include the file suffix (text after the last period).</source>
          <target state="translated">'，但要包含文件后缀（最后一个句点之后的文字）。</target>
        </trans-unit>
        <trans-unit id="092a366239711ab0e1774f55ad486f40925b2c39" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, but inexact traps are enabled as well.</source>
          <target state="translated">'，但也会启用不精确的陷阱。</target>
        </trans-unit>
        <trans-unit id="dba30ddb7f54c0471e6b8c42e687a833e9c23aee" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, but puts &amp;lsquo;</source>
          <target state="translated">'，但放</target>
        </trans-unit>
        <trans-unit id="39218b3d97dc3ec712bf382cd7959367acbcf492" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, but the instructions are marked to be safe for software completion (see Alpha architecture manual for details).</source>
          <target state="translated">&amp;rdquo;，但说明中的说明被标记为可安全完成软件（有关详细信息，请参阅Alpha体系结构手册）。</target>
        </trans-unit>
        <trans-unit id="a95b52d04a925b481ffc7ad53fe6eb07f0a4eebe" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, depending on whether a basic block is reachable via non-exceptional or exceptional paths. Executed basic blocks having a statement with zero &lt;var&gt;execution_count&lt;/var&gt; end with &amp;lsquo;</source>
          <target state="translated">'，取决于基本块是否可以通过非异常或异常路径到达。语句为0的已执行基本块以' &lt;var&gt;execution_count&lt;/var&gt; 结尾</target>
        </trans-unit>
        <trans-unit id="66d00e224ec92d1c22749474d1e91e24964ab5c2" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, depending on whether they are reachable by non-exceptional paths or only exceptional paths such as C++ exception handlers, respectively. Given the &amp;lsquo;</source>
          <target state="translated">'，取决于它们分别是非异常路径还是仅异常路径（例如C ++异常处理程序）可访问的。鉴于 '</target>
        </trans-unit>
        <trans-unit id="136c3d628fc50dc61e6297006309885a5d8aee50" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, do not assume the location contains the existing value on entry to the &lt;code&gt;asm&lt;/code&gt;, except when the operand is tied to an input; see &lt;a href=&quot;#InputOperands&quot;&gt;Input Operands&lt;/a&gt;.</source>
          <target state="translated">'，除非将操作数绑定到输入，否则不要假定该位置包含进入 &lt;code&gt;asm&lt;/code&gt; 时的现有值；请参见&lt;a href=&quot;#InputOperands&quot;&gt;输入操作数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0eebd87ad91943223aef3936c3e20f0c176f9150" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, e.g.</source>
          <target state="translated">'，例如</target>
        </trans-unit>
        <trans-unit id="de40d739dfc6920248f5b9046b3c9b839f920f68" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, etc., with &amp;lsquo;</source>
          <target state="translated">'等，以'</target>
        </trans-unit>
        <trans-unit id="2aa5684705ecc6e2def69b7b8430a853ec505c39" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, even if they are executed earlier. The phase letter is one of &amp;lsquo;</source>
          <target state="translated">'，即使它们执行得较早。相位字母是&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="09e3614efaea8eab44d2d073c727d9df85c09585" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, except if</source>
          <target state="translated">'，除非</target>
        </trans-unit>
        <trans-unit id="05234cf66772b81ecd442f963fde2d9cf3f3b580" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, except that it verifies that bits that are not in the lower 32-bit range are all zero. Must be used instead of &amp;lsquo;</source>
          <target state="translated">'，除了它会验证不在低32位范围内的所有位都为零。必须用于代替&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="066ab954d39195c280a98dc287f05dc34c467231" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, except they don&amp;rsquo;t share the same suffix &lt;em&gt;space&lt;/em&gt;, so &amp;lsquo;</source>
          <target state="translated">'，除非它们不共享相同的后缀&lt;em&gt;空间&lt;/em&gt;，所以'</target>
        </trans-unit>
        <trans-unit id="98d65587f22436a3a12d35d6fe27c3546587cef2" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, for example</source>
          <target state="translated">'， 例如</target>
        </trans-unit>
        <trans-unit id="0d4f3e8108a13ab29d4b2e0e63a1ca33c2b22454" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, generating a new one if there is no such last file name. In the absence of any &amp;lsquo;</source>
          <target state="translated">'，如果没有最后一个文件名，则生成一个新文件。在没有任何&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="9db8be9dbf00d53f36b02e299cb40c1ccf21b3d5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, i.e., make every symbol public.</source>
          <target state="translated">'，即公开每个符号。</target>
        </trans-unit>
        <trans-unit id="f9417c06d6d376990e78c94bffca4a185de5c4ea" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, in which case the &lt;code&gt;__fp16&lt;/code&gt; type is not defined. See &lt;a href=&quot;half_002dprecision#Half_002dPrecision&quot;&gt;Half-Precision&lt;/a&gt;, for more information.</source>
          <target state="translated">'，则 &lt;code&gt;__fp16&lt;/code&gt; 类型。有关更多信息，请参见&lt;a href=&quot;half_002dprecision#Half_002dPrecision&quot;&gt;Half-Precision&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="01f1d4ba970d96674fdfce27113ede13dd96c83c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, in which case the rules are written to file &lt;var&gt;file&lt;/var&gt; using &lt;var&gt;target&lt;/var&gt; as the target name.</source>
          <target state="translated">'，在这种情况下，规则将使用 &lt;var&gt;target&lt;/var&gt; 作为目标名称写入文件 &lt;var&gt;file&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="18c4ce616b187a8cd7e37370e7c2a4558687b5bd" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, in which no floating-point arguments will be passed in registers.</source>
          <target state="translated">'，其中不会在寄存器中传递浮点参数。</target>
        </trans-unit>
        <trans-unit id="a3e7b4dd0f31f9fc49145a20fdc34f56d6192b15" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, meaning no alignment. The maximum allowed &lt;var&gt;n&lt;/var&gt; option value is 65536.</source>
          <target state="translated">'，表示不对齐。 &lt;var&gt;n&lt;/var&gt; 选项的最大允许值为65536。</target>
        </trans-unit>
        <trans-unit id="b1df550e442c6ce053b25ec1d413b95d867426aa" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, no workarounds are enabled. If &lt;var&gt;sirevision&lt;/var&gt; is &amp;lsquo;</source>
          <target state="translated">'，则未启用任何解决方法。如果 &lt;var&gt;sirevision&lt;/var&gt; 为'</target>
        </trans-unit>
        <trans-unit id="4638287656ac02959e2cefcae6acca031d4bd193" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, only the preprocessor macro is defined.</source>
          <target state="translated">'，仅定义了预处理器宏。</target>
        </trans-unit>
        <trans-unit id="f307dbc595c36b91f1275e80e0395cbaf3c6504c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, or &amp;lsquo;</source>
          <target state="translated">'， 要么 '</target>
        </trans-unit>
        <trans-unit id="9b3c982032ea0459140427383a85dba0acd2e1fd" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, or (for shared template code) &amp;lsquo;</source>
          <target state="translated">'，或（对于共享模板代码）'</target>
        </trans-unit>
        <trans-unit id="5eab487e4b72d07293fe7c795f5de0ccb7970c25" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, or a reference to a &lt;code&gt;typedef&lt;/code&gt; name for a previously defined structure or union type.</source>
          <target state="translated">'，或对先前定义的结构或联合类型的 &lt;code&gt;typedef&lt;/code&gt; 名称的引用。</target>
        </trans-unit>
        <trans-unit id="3f4b0ae84ca34d4bad67d128809cab75207b33d0" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, or even &amp;lsquo;</source>
          <target state="translated">'， 甚至 '</target>
        </trans-unit>
        <trans-unit id="1d1087187ab3a7e62992e275357cb57bcfa1c106" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, or it might get &amp;lsquo;</source>
          <target state="translated">'，否则可能会得到'</target>
        </trans-unit>
        <trans-unit id="3aca8c8acb74e379a3304f127abf609845bc280e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, or make the path absolute when generating a relative prefix.</source>
          <target state="translated">'，或在生成相对前缀时将路径设为绝对路径。</target>
        </trans-unit>
        <trans-unit id="b6358603813ed89a66fd98d2859d299f75ccce85" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, otherwise, it is turned off.</source>
          <target state="translated">'，否则将其关闭。</target>
        </trans-unit>
        <trans-unit id="0f1fda70fb0c46563a4357bb73dfbd4447b31663" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, respectively, in the following character). In the case of function definitions, a K&amp;amp;R-style list of arguments followed by their declarations is also provided, inside comments, after the declaration.</source>
          <target state="translated">'，分别用以下字符）。对于函数定义，在声明之后的注释内还会提供K＆R样式的参数列表及其后跟的声明。</target>
        </trans-unit>
        <trans-unit id="c3101771b9632d8f958f8bd2e3b3975e5bd0ed02" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, so &amp;lsquo;</source>
          <target state="translated">'，所以'</target>
        </trans-unit>
        <trans-unit id="c5b364cf3dc5ad7fb131b66cc0868f3b8543e70b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, that are defined by ISO C to stand for single characters. For example, &amp;lsquo;</source>
          <target state="translated">'，由ISO C定义以代表单个字符。例如， '</target>
        </trans-unit>
        <trans-unit id="4931b59d68a18af6c7fbe7e255d105b5cb1219bb" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, the &amp;ldquo;software trace cache&amp;rdquo; algorithm, which tries to put all often executed code together, minimizing the number of branches executed by making extra copies of code.</source>
          <target state="translated">&amp;rdquo;，即&amp;ldquo;软件跟踪缓存&amp;rdquo;算法，该算法尝试将所有经常执行的代码放在一起，通过制作额外的代码副本来最大程度地减少执行的分支数量。</target>
        </trans-unit>
        <trans-unit id="2073bc4d3052c9d45b6e4d60d51421cb09ad40d8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, the &lt;code&gt;__SILICON_REVISION__&lt;/code&gt; is defined to be &lt;code&gt;0xffff&lt;/code&gt;. If this optional &lt;var&gt;sirevision&lt;/var&gt; is not used, GCC assumes the latest known silicon revision of the targeted Blackfin processor.</source>
          <target state="translated">'， &lt;code&gt;__SILICON_REVISION__&lt;/code&gt; 定义为 &lt;code&gt;0xffff&lt;/code&gt; 。如果未使用此可选 &lt;var&gt;sirevision&lt;/var&gt; ，则GCC会假定目标Blackfin处理器的最新已知芯片版本。</target>
        </trans-unit>
        <trans-unit id="a7faca6a353f0ed8bbbd7fe58280558417f88bc1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, the &lt;code&gt;__SILICON_REVISION__&lt;/code&gt; is not defined. If &lt;var&gt;sirevision&lt;/var&gt; is &amp;lsquo;</source>
          <target state="translated">'，则 &lt;code&gt;__SILICON_REVISION__&lt;/code&gt; 。如果 &lt;var&gt;sirevision&lt;/var&gt; 为'</target>
        </trans-unit>
        <trans-unit id="f5c8011c2f55c0ac81c5d9ceb64477468b6c9a9e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, the compiler emits code for the function itself; this defines a version of the function that can be found via pointers (or by callers compiled without inlining). If all calls to the function can be inlined, you can avoid emitting the function by compiling with</source>
          <target state="translated">'，编译器会为函数本身发出代码；这定义了可以通过指针（或通过未经内联编译的调用方）找到的函数版本。如果可以内联所有对函数的调用，则可以通过使用</target>
        </trans-unit>
        <trans-unit id="5fce4bbe106b081174a0f5bef32f95cbfa790ac6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, the effect on an inline function defined in that class is similar to an explicit &lt;code&gt;extern&lt;/code&gt; declaration&amp;mdash;the compiler emits no code at all to define an independent version of the function. Its definition is used only for inlining with its callers.</source>
          <target state="translated">'，对该类中定义的内联函数的作用类似于显式的 &lt;code&gt;extern&lt;/code&gt; 声明-编译器根本不发出任何代码来定义该函数的独立版本。它的定义仅用于与其调用方的内联。</target>
        </trans-unit>
        <trans-unit id="bf5bc1539de695c3b4d3767d9c103937369811c1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, the last two letters must both be literally &amp;lsquo;</source>
          <target state="translated">'，最后两个字母都必须在字面上是'</target>
        </trans-unit>
        <trans-unit id="db79a20c00080e7d5e4b192fe6de466faac9115a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, the macro names the resolved architecture (either &lt;code&gt;&quot;mips1&quot;&lt;/code&gt; or &lt;code&gt;&quot;mips3&quot;&lt;/code&gt;). It names the default architecture when no</source>
          <target state="translated">'，该宏为解析的架构命名（ &lt;code&gt;&quot;mips1&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;mips3&quot;&lt;/code&gt; ）。如果没有，它将命名默认架构</target>
        </trans-unit>
        <trans-unit id="8d83a5ecd0c633a33d12c8a0921f9d9646b8105f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, the operand can have postincrement and postdecrement which require printing with &amp;lsquo;</source>
          <target state="translated">'，操作数可以具有后增和后减，需要使用'</target>
        </trans-unit>
        <trans-unit id="780d16f0177d79dcb186b26e4731ad4f3ff27e90" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, the operand can have postincrement which requires printing with &amp;lsquo;</source>
          <target state="translated">'，操作数可以具有后增量，需要使用'</target>
        </trans-unit>
        <trans-unit id="958abf9b2ba30ada1927e0d18d675fed8d221758" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, then updates the &amp;lsquo;</source>
          <target state="translated">'，然后更新'</target>
        </trans-unit>
        <trans-unit id="6f80d08a483db41013d0e0117c5b88a8e8ad1bd3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, there is a corresponding &lt;em&gt;base standard&lt;/em&gt;, the version of ISO C on which the GNU extended dialect is based. Warnings from</source>
          <target state="translated">'，有一个相应的&lt;em&gt;基本标准&lt;/em&gt;，即GNU扩展方言所基于的ISO C版本。来自的警告</target>
        </trans-unit>
        <trans-unit id="a8483af113196f523d78cdfed023c2f13973b39e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, this contributes no text to the argument.</source>
          <target state="translated">'，则不会在参数中添加任何文字。</target>
        </trans-unit>
        <trans-unit id="4d636acf24a127bc2b95b62fa251ecc17f5cc915" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, this is just like &amp;lsquo;</source>
          <target state="translated">'，就像'</target>
        </trans-unit>
        <trans-unit id="e894972486d8d6096ff2223f65e4a8883430900a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, this macro is not defined.</source>
          <target state="translated">'，则此宏未定义。</target>
        </trans-unit>
        <trans-unit id="6db9d39068e98a34cf2dbeda58f4d7c72ad17119" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, this works even when infinities, NaNs and negative zeros are involved.</source>
          <target state="translated">'，即使涉及无限大，NaN和负零也可以使用。</target>
        </trans-unit>
        <trans-unit id="f9f6f2167738a6bc27a8918056c08bdf0ac8ac61" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, those functions may not be loaded.</source>
          <target state="translated">'，则可能不会加载这些功能。</target>
        </trans-unit>
        <trans-unit id="848c5ba958a75e22dba01b795952aac18411fbbf" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, thus the invocation of &lt;code&gt;cc1&lt;/code&gt; is &amp;lsquo;</source>
          <target state="translated">'，因此 &lt;code&gt;cc1&lt;/code&gt; 的调用为'</target>
        </trans-unit>
        <trans-unit id="6d98c164b412ee8aa5fd4b179a66947857f9efe0" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, underflow traps are enabled as well.</source>
          <target state="translated">'，也会启用下溢陷阱。</target>
        </trans-unit>
        <trans-unit id="412c73084b584a3fd2f571e198882146b578aafa" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, usually the letter indicating the most common immediate-constant format.</source>
          <target state="translated">'，通常是表示最常见的立即常数格式的字母。</target>
        </trans-unit>
        <trans-unit id="5b2af747b468ebcf98a4ed4b7baee2a44d3c411c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, when supported by a target, or to &amp;lsquo;</source>
          <target state="translated">'，如果有目标支持，则为'</target>
        </trans-unit>
        <trans-unit id="4efda24d512ee43a5706f4bdf3be7939f7f6d247" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, when the structure field has the misaligned offset:</source>
          <target state="translated">'，当结构字段的偏移量未对齐时：</target>
        </trans-unit>
        <trans-unit id="93aa1e264ff57887de5dc1cb5417f8dd989d1e09" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, where &lt;var&gt;L&lt;/var&gt; is an uppercase letter. This is for ISO C.</source>
          <target state="translated">'，其中 &lt;var&gt;L&lt;/var&gt; 是大写字母。这是针对ISO C的。</target>
        </trans-unit>
        <trans-unit id="739a7d9d6e619ecc7399139269b374ab43d85367" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, where &lt;var&gt;X&lt;/var&gt; is a major version, &lt;var&gt;YY&lt;/var&gt; is the minor version, and &lt;var&gt;Z&lt;/var&gt; is compatibility code. Example values are &amp;lsquo;</source>
          <target state="translated">'，其中 &lt;var&gt;X&lt;/var&gt; 是主要版本， &lt;var&gt;YY&lt;/var&gt; 是次要版本， &lt;var&gt;Z&lt;/var&gt; 是兼容性代码。示例值是&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="d769a376fcd2331ff3efeece4ef65cc094eb46d9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, where the name of the friend is an unqualified-id, could be interpreted as a particular specialization of a template function; the warning exists to diagnose compatibility problems, and is enabled by default.</source>
          <target state="translated">'，如果朋友的名字是一个不合格的id，则可以解释为模板函数的特定专业化；该警告存在以诊断兼容性问题，并且默认情况下处于启用状态。</target>
        </trans-unit>
        <trans-unit id="cb4545941e1a456d9e76018c4df8a40b960f1b83" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, which can be confusing. Use the</source>
          <target state="translated">&amp;rdquo;，这可能会造成混淆。使用</target>
        </trans-unit>
        <trans-unit id="3a9a59268985f9334c00a17967c54ff7c32a0e16" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, which disables return address signing, &amp;lsquo;</source>
          <target state="translated">'，这将禁用返回地址签名，'</target>
        </trans-unit>
        <trans-unit id="87f652520c80de99647e10eb1ff77ab629d99978" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, which does not increase code size (except sometimes due to secondary effects like alignment), or &amp;lsquo;</source>
          <target state="translated">'，它不会增加代码的大小（除非有时由于对齐等次要影响而导致），或者</target>
        </trans-unit>
        <trans-unit id="8659feb795576fd08fccb6d569ea2287637015e4" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, which enables pointer signing for all functions. The default value is &amp;lsquo;</source>
          <target state="translated">'，可为所有功能启用指针签名。默认值为&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="4bcf01b8de353a2ead74230ef433e9b1d5c42c5f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, which enables pointer signing for functions which are not leaf functions, and &amp;lsquo;</source>
          <target state="translated">'，它为不是叶函数的函数启用指针签名，以及'</target>
        </trans-unit>
        <trans-unit id="919dfa4777ff858a1ffee761219e579bcc47fff2" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, which fetches the thread pointer from &lt;code&gt;cp15&lt;/code&gt; directly (supported in the arm6k architecture), and &amp;lsquo;</source>
          <target state="translated">'，直接从 &lt;code&gt;cp15&lt;/code&gt; 中获取线程指针（在arm6k体系结构中受支持），以及'</target>
        </trans-unit>
        <trans-unit id="c0bc21f369e03da1ff0fbdfedd85fac2ceffcf5f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, which generates calls to &lt;code&gt;__aeabi_read_tp&lt;/code&gt;, &amp;lsquo;</source>
          <target state="translated">'，会产生对 &lt;code&gt;__aeabi_read_tp&lt;/code&gt; 的调用，</target>
        </trans-unit>
        <trans-unit id="be7bc52286a0fa82e570dab15353ed73c224a194" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, which is treated exactly as if &amp;lsquo;</source>
          <target state="translated">&amp;rdquo;，就像对待&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="4b8132d93b5b364fb4107d3f7f7e80d8cb8cca0a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, which keeps function return unmodified. &amp;lsquo;</source>
          <target state="translated">'，使函数返回保持不变。'</target>
        </trans-unit>
        <trans-unit id="7c0ef144ca1606cff5c2fcba721912c1bf504b40" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, which keeps indirect call and jump unmodified. &amp;lsquo;</source>
          <target state="translated">'，这样可以保持间接调用和跳转不变。'</target>
        </trans-unit>
        <trans-unit id="beca4baa89360933636ffbc7ac4cf4af22fdf467" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, which means that no register is used for this purpose. The default is</source>
          <target state="translated">&amp;rdquo;，这意味着没有寄存器用于此目的。默认是</target>
        </trans-unit>
        <trans-unit id="1101672b2c1cf966ba104538143c46f9af09e54f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, which means to dump messages about successful optimizations from all the passes, omitting messages that are treated as &amp;ldquo;internals&amp;rdquo;.</source>
          <target state="translated">&amp;rdquo;，这意味着从所有过程中转储有关成功优化的消息，而忽略了被视为&amp;ldquo;内部&amp;rdquo;消息。</target>
        </trans-unit>
        <trans-unit id="3faa7f76311e939879aa32607e1cbda0c78aeffc" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, which produces vector-length agnostic code.</source>
          <target state="translated">'，产生矢量长度不可知代码。</target>
        </trans-unit>
        <trans-unit id="eebb01c01a4dcc45ae8a85f860ce121ea49fd1a8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, which selects the best architecture option for the host processor.</source>
          <target state="translated">'，它将为主机处理器选择最佳架构选项。</target>
        </trans-unit>
        <trans-unit id="13bf69f8c2ad5370a2f855e913a0eaf2e0a40255" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, which should be invoked with the command-line switch</source>
          <target state="translated">'，应使用命令行开关调用</target>
        </trans-unit>
        <trans-unit id="06afe658b05579d643bf49716402cd959b627012" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, which specifies Chaitin-Briggs coloring. Chaitin-Briggs coloring is not implemented for all architectures, but for those targets that do support it, it is the default because it generates better code.</source>
          <target state="translated">'，用于指定Chaitin-Briggs着色。Chaitin-Briggs着色并非针对所有体系结构都实现，但是对于支持该着色的目标，它是默认设置，因为它会生成更好的代码。</target>
        </trans-unit>
        <trans-unit id="79c08f6e9afbde3eae65486c01beb0bfcedf5e50" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, which specifies Chow&amp;rsquo;s priority coloring, or &amp;lsquo;</source>
          <target state="translated">'，它指定Chow的优先着色，或'</target>
        </trans-unit>
        <trans-unit id="b6395fd7f5367f1a12df6a010dc30044349a64d3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, which specifies to use IBM&amp;rsquo;s Mathematical Acceleration Subsystem (MASS) libraries for vectorizing intrinsics using external libraries. GCC currently emits calls to &lt;code&gt;acosd2&lt;/code&gt;, &lt;code&gt;acosf4&lt;/code&gt;, &lt;code&gt;acoshd2&lt;/code&gt;, &lt;code&gt;acoshf4&lt;/code&gt;, &lt;code&gt;asind2&lt;/code&gt;, &lt;code&gt;asinf4&lt;/code&gt;, &lt;code&gt;asinhd2&lt;/code&gt;, &lt;code&gt;asinhf4&lt;/code&gt;, &lt;code&gt;atan2d2&lt;/code&gt;, &lt;code&gt;atan2f4&lt;/code&gt;, &lt;code&gt;atand2&lt;/code&gt;, &lt;code&gt;atanf4&lt;/code&gt;, &lt;code&gt;atanhd2&lt;/code&gt;, &lt;code&gt;atanhf4&lt;/code&gt;, &lt;code&gt;cbrtd2&lt;/code&gt;, &lt;code&gt;cbrtf4&lt;/code&gt;, &lt;code&gt;cosd2&lt;/code&gt;, &lt;code&gt;cosf4&lt;/code&gt;, &lt;code&gt;coshd2&lt;/code&gt;, &lt;code&gt;coshf4&lt;/code&gt;, &lt;code&gt;erfcd2&lt;/code&gt;, &lt;code&gt;erfcf4&lt;/code&gt;, &lt;code&gt;erfd2&lt;/code&gt;, &lt;code&gt;erff4&lt;/code&gt;, &lt;code&gt;exp2d2&lt;/code&gt;, &lt;code&gt;exp2f4&lt;/code&gt;, &lt;code&gt;expd2&lt;/code&gt;, &lt;code&gt;expf4&lt;/code&gt;, &lt;code&gt;expm1d2&lt;/code&gt;, &lt;code&gt;expm1f4&lt;/code&gt;, &lt;code&gt;hypotd2&lt;/code&gt;, &lt;code&gt;hypotf4&lt;/code&gt;, &lt;code&gt;lgammad2&lt;/code&gt;, &lt;code&gt;lgammaf4&lt;/code&gt;, &lt;code&gt;log10d2&lt;/code&gt;, &lt;code&gt;log10f4&lt;/code&gt;, &lt;code&gt;log1pd2&lt;/code&gt;, &lt;code&gt;log1pf4&lt;/code&gt;, &lt;code&gt;log2d2&lt;/code&gt;, &lt;code&gt;log2f4&lt;/code&gt;, &lt;code&gt;logd2&lt;/code&gt;, &lt;code&gt;logf4&lt;/code&gt;, &lt;code&gt;powd2&lt;/code&gt;, &lt;code&gt;powf4&lt;/code&gt;, &lt;code&gt;sind2&lt;/code&gt;, &lt;code&gt;sinf4&lt;/code&gt;, &lt;code&gt;sinhd2&lt;/code&gt;, &lt;code&gt;sinhf4&lt;/code&gt;, &lt;code&gt;sqrtd2&lt;/code&gt;, &lt;code&gt;sqrtf4&lt;/code&gt;, &lt;code&gt;tand2&lt;/code&gt;, &lt;code&gt;tanf4&lt;/code&gt;, &lt;code&gt;tanhd2&lt;/code&gt;, and &lt;code&gt;tanhf4&lt;/code&gt; when generating code for power7. Both</source>
          <target state="translated">&amp;rdquo;，它指定使用IBM的数学加速子系统（MASS）库来使用外部库对内在函数进行矢量化。 GCC目前发出的呼吁 &lt;code&gt;acosd2&lt;/code&gt; ， &lt;code&gt;acosf4&lt;/code&gt; ， &lt;code&gt;acoshd2&lt;/code&gt; ， &lt;code&gt;acoshf4&lt;/code&gt; ， &lt;code&gt;asind2&lt;/code&gt; ， &lt;code&gt;asinf4&lt;/code&gt; ， &lt;code&gt;asinhd2&lt;/code&gt; ， &lt;code&gt;asinhf4&lt;/code&gt; ， &lt;code&gt;atan2d2&lt;/code&gt; ， &lt;code&gt;atan2f4&lt;/code&gt; ， &lt;code&gt;atand2&lt;/code&gt; ， &lt;code&gt;atanf4&lt;/code&gt; ， &lt;code&gt;atanhd2&lt;/code&gt; ， &lt;code&gt;atanhf4&lt;/code&gt; ， &lt;code&gt;cbrtd2&lt;/code&gt; ， &lt;code&gt;cbrtf4&lt;/code&gt; ， &lt;code&gt;cosd2&lt;/code&gt; ， &lt;code&gt;cosf4&lt;/code&gt; ， &lt;code&gt;coshd2&lt;/code&gt; ， &lt;code&gt;coshf4&lt;/code&gt; ， &lt;code&gt;erfcd2&lt;/code&gt; ， &lt;code&gt;erfcf4&lt;/code&gt; ， &lt;code&gt;erfd2&lt;/code&gt; ， &lt;code&gt;erff4&lt;/code&gt; ， &lt;code&gt;exp2d2&lt;/code&gt; ， &lt;code&gt;exp2f4&lt;/code&gt; ， &lt;code&gt;expd2&lt;/code&gt; ， &lt;code&gt;expf4&lt;/code&gt; ， &lt;code&gt;expm1d2&lt;/code&gt; ， &lt;code&gt;expm1f4&lt;/code&gt; ， &lt;code&gt;hypotd2&lt;/code&gt; ， &lt;code&gt;hypotf4&lt;/code&gt; ， &lt;code&gt;lgammad2&lt;/code&gt; ， &lt;code&gt;lgammaf4&lt;/code&gt; ， &lt;code&gt;log10d2&lt;/code&gt; ， &lt;code&gt;log10f4&lt;/code&gt; ， &lt;code&gt;log1pd2&lt;/code&gt; ， &lt;code&gt;log1pf4&lt;/code&gt; ， &lt;code&gt;log2d2&lt;/code&gt; ， &lt;code&gt;log2f4&lt;/code&gt; ， &lt;code&gt;logd2&lt;/code&gt; ， &lt;code&gt;logf4&lt;/code&gt; ， &lt;code&gt;powd2&lt;/code&gt; ， &lt;code&gt;powf4&lt;/code&gt; ， &lt;code&gt;sind2&lt;/code&gt; 生成 &lt;code&gt;tanhf4&lt;/code&gt; 代码时，， &lt;code&gt;sinf4&lt;/code&gt; ， &lt;code&gt;sinhd2&lt;/code&gt; ， &lt;code&gt;sinhf4&lt;/code&gt; ， &lt;code&gt;sqrtd2&lt;/code&gt; ， &lt;code&gt;sqrtf4&lt;/code&gt; ， &lt;code&gt;tand2&lt;/code&gt; ， &lt;code&gt;tanf4&lt;/code&gt; ， &lt;code&gt;tanhd2&lt;/code&gt; 和tanhf4。都</target>
        </trans-unit>
        <trans-unit id="ec52c6c8b68900c9a1b37331cf41ae5885dd6c8c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, which specify use of that register as a fixed register, and &amp;lsquo;</source>
          <target state="translated">'，用于指定将该寄存器用作固定寄存器，以及'</target>
        </trans-unit>
        <trans-unit id="0fa47f8504586e908692f17a17fab12ae381513a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, which still allows the compiler to generate code that uses the F and D extensions but only allows floating-point values up to 32 bits long to be passed in registers; or &amp;lsquo;</source>
          <target state="translated">&amp;rdquo;，仍然允许编译器生成使用F和D扩展名的代码，但只允许将最长32位长的浮点值传递到寄存器中；要么 '</target>
        </trans-unit>
        <trans-unit id="53d99d4b03fe4435b89eadd0e9f6c614ea297088" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, which uses the best available method for the selected processor. The default setting is &amp;lsquo;</source>
          <target state="translated">&amp;rdquo;，它对所选处理器使用最佳可用方法。默认设置为&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="2e084164fbfa7bff5a69b7598f6c58a8fcd0c7b2" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, without regard to any appended suffix.</source>
          <target state="translated">'，不考虑任何后缀。</target>
        </trans-unit>
        <trans-unit id="b27846e206f9ebe9eb4cd3b594b0158dff325fe5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, without spaces between multiple switches. This is supposed to ease shell processing.</source>
          <target state="translated">'，多个开关之间没有空格。应该可以简化外壳处理。</target>
        </trans-unit>
        <trans-unit id="86308658ed645552e296e3e286b374ae7fff10b1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;,&amp;lsquo;</source>
          <target state="translated">&amp;rsquo;,&amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="3525fe92d1fe943317ddfb69e6b92954c6550401" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;-newline. The rule has no commands.</source>
          <target state="translated">'-新队。该规则没有命令。</target>
        </trans-unit>
        <trans-unit id="7ae559764dfeb5b5e27bbbecfa78f7d761264167" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;-prefixed sequences to substitute variable text or to conditionally insert text into the command line. Using these constructs it is possible to generate quite complex command lines.</source>
          <target state="translated">前缀序列，以替换变量文本或有条件地将文本插入命令行。使用这些构造，可以生成非常复杂的命令行。</target>
        </trans-unit>
        <trans-unit id="cc1c5c0d2a49660e4c22ef3e1e1704e0f798a0eb" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;-sequences for spec strings. Note that spaces are not generated automatically around the results of expanding these sequences. Therefore you can concatenate them together or combine them with constant text in a single argument.</source>
          <target state="translated">'-规范字符串的序列。注意，扩展这些序列的结果不会自动产生空格。因此，您可以将它们连接在一起或在单个参数中将它们与常量文本组合在一起。</target>
        </trans-unit>
        <trans-unit id="4dece5708020cd65d858b4b08e3d8683a52a6a69" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;.</source>
          <target state="translated">&amp;rsquo;.</target>
        </trans-unit>
        <trans-unit id="c07eebce021b49b4fc041471ed4831d6137b2147" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. %{o*} substitutes this text, including the space. Thus two arguments are generated.</source>
          <target state="translated">'。％{o *}替换此文本，包括空格。这样就产生了两个参数。</target>
        </trans-unit>
        <trans-unit id="5d70589a69d369e7bf4347c7ccd68068ef698e63" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. &amp;lsquo;</source>
          <target state="translated">'。'</target>
        </trans-unit>
        <trans-unit id="bd99174a74b07be99af73cd2272c2a9644b883d1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. (This is currently a subset of what</source>
          <target state="translated">'。（目前，这是</target>
        </trans-unit>
        <trans-unit id="ebabbca2f175db2d4ffdc366591326dd41543c2b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. &lt;var&gt;SUFFIX&lt;/var&gt; is terminated by the next space or %.</source>
          <target state="translated">'。 &lt;var&gt;SUFFIX&lt;/var&gt; 由下一个空格或％终止。</target>
        </trans-unit>
        <trans-unit id="cb17f136b28af159a54ba2b3c86d8d1f3eca0e5d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. &lt;var&gt;suffix&lt;/var&gt; matches the regexp &amp;lsquo;</source>
          <target state="translated">'。 &lt;var&gt;suffix&lt;/var&gt; 匹配regexp'</target>
        </trans-unit>
        <trans-unit id="c2bfbba1f4c17d6ec9876dae8da4ae1e45397993" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. All values of &lt;var&gt;model&lt;/var&gt; have the same meaning as described in</source>
          <target state="translated">'。 &lt;var&gt;model&lt;/var&gt; 所有值具有与</target>
        </trans-unit>
        <trans-unit id="26a41e2a6f327d47909ecc0aba5f40c82b05f73e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. As &lt;em&gt;earlyclobber&lt;/em&gt; operands are always written, a read-only &lt;em&gt;earlyclobber&lt;/em&gt; operand is ill-formed and will be rejected by the compiler.</source>
          <target state="translated">'。由于总是写入&lt;em&gt;EarlyClobber&lt;/em&gt;操作数，因此只读的&lt;em&gt;EarlyClobber&lt;/em&gt;操作数&lt;em&gt;格式错误&lt;/em&gt;，将被编译器拒绝。</target>
        </trans-unit>
        <trans-unit id="c0112416480771c639f69f4bcd6e44161edeb27a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. Aside from that, you can use any other GCC options; but if you want to prove that every single line in your program was executed, you should not compile with optimization at the same time. On some machines the optimizer can eliminate some simple code lines by combining them with other lines. For example, code like this:</source>
          <target state="translated">'。除此之外，您还可以使用其他任何GCC选项；但是，如果您想证明程序中的每一行都已执行，则不应同时进行优化编译。在某些机器上，优化器可以通过将一些简单的代码行与其他代码行结合来消除它们。例如，如下代码：</target>
        </trans-unit>
        <trans-unit id="34668a2e06b3aadb0dbe019b921c38fc3dbab69b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. Backup copies of inline member functions, debugging information, and the internal tables used to implement virtual functions are all generated in implementation files.</source>
          <target state="translated">'。内联成员函数的备份副本，调试信息以及用于实现虚拟功能的内部表均在实现文件中生成。</target>
        </trans-unit>
        <trans-unit id="ef3f97180bfe2b9e9474f1ef401797f93dc9d108" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. ColdFire architectures are selected according to Freescale&amp;rsquo;s ISA classification and the permissible values are: &amp;lsquo;</source>
          <target state="translated">'。根据飞思卡尔的ISA分类选择ColdFire架构，允许的值为：</target>
        </trans-unit>
        <trans-unit id="ce9fac1370b0628735cce987d97cf16c0ec23915" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. Darwin does not support &amp;lsquo;</source>
          <target state="translated">'。达尔文不支持&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="144515adfb3f2fe5defdce77d168399c9e3984b2" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. Disables the floating-point and SIMD instructions on &amp;lsquo;</source>
          <target state="translated">'。禁用&amp;ldquo;上的浮点和SIMD指令</target>
        </trans-unit>
        <trans-unit id="7f011d7b5d4cc55f295dd9f02d73db5853869155" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. For example,</source>
          <target state="translated">'。例如，</target>
        </trans-unit>
        <trans-unit id="fb7234b5dfd962028dcfee17fd1c40d6becee595" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. GCC recognizes files with these names and compiles them as C++ programs even if you call the compiler the same way as for compiling C programs (usually with the name &lt;code&gt;gcc&lt;/code&gt;).</source>
          <target state="translated">'。即使您以与编译C程序相同的方式（通常使用 &lt;code&gt;gcc&lt;/code&gt; ）来调用编译器，GCC也会识别具有这些名称的文件并将其编译为C ++程序。</target>
        </trans-unit>
        <trans-unit id="f3dbb764224c436ae5269f0b14a98e9ab5220599" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. GCC, following the ISO standard, does not allow this.</source>
          <target state="translated">'。遵循ISO标准的GCC不允许这样做。</target>
        </trans-unit>
        <trans-unit id="08bff4931e5584bd604b402499372284b96ce5ff" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. If &lt;code&gt;%*&lt;/code&gt; appears in &lt;code&gt;X&lt;/code&gt;, all of the alternatives must be starred, and only the first matching alternative is substituted.</source>
          <target state="translated">'。如果 &lt;code&gt;%*&lt;/code&gt; 出现在 &lt;code&gt;X&lt;/code&gt; 中，则所有替代项都必须加星号，并且仅替换第一个匹配的替代项。</target>
        </trans-unit>
        <trans-unit id="6e7d68d3cf1754b449dca6cd9f416805cacc80a2" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. If a function is named that is not built-in in this version of GCC, this option is ignored. There is no corresponding</source>
          <target state="translated">'。如果此版本的GCC中没有内置函数的名称，则忽略此选项。没有对应的</target>
        </trans-unit>
        <trans-unit id="d4266bea6ec9a1e6780e56907ca8d131f13801c3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. If instead you write</source>
          <target state="translated">'。相反，如果你写</target>
        </trans-unit>
        <trans-unit id="b591f0ca58fd0c9f6c02aaebea340ca453078cbf" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. In C++, the mangled name for the target must be used. It is an error if &amp;lsquo;</source>
          <target state="translated">'。在C ++中，必须使用目标的错误名称。如果&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="b088c9c98ee027b033a647cf3092141c87b2c30d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. In the case of &amp;lsquo;</source>
          <target state="translated">'。如果是 '</target>
        </trans-unit>
        <trans-unit id="9036ed5683fc147515f005ff7457f833667588ae" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. In the past, the system header files on many systems did not actually declare &lt;code&gt;time&lt;/code&gt;, so it did not matter what type your program declared it to return. But in systems with ISO C headers, &lt;code&gt;time&lt;/code&gt; is declared to return &lt;code&gt;time_t&lt;/code&gt;, and if that is not the same as &lt;code&gt;long&lt;/code&gt;, then &amp;lsquo;</source>
          <target state="translated">'。过去，许多系统上的系统头文件实际上并未声明 &lt;code&gt;time&lt;/code&gt; ，因此程序声明要返回的类型无关紧要。但是在具有ISO C标头的系统中， &lt;code&gt;time&lt;/code&gt; 被声明为返回 &lt;code&gt;time_t&lt;/code&gt; ，如果与 &lt;code&gt;long&lt;/code&gt; 不同，则为'</target>
        </trans-unit>
        <trans-unit id="71de86373b2c95a3f4d64f72180d98333b9c245b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. It is used to define &lt;code&gt;struct foo&lt;/code&gt; in such a way that &lt;code&gt;struct foo&lt;/code&gt; has the same layout and the structure field &lt;code&gt;x&lt;/code&gt; has the same alignment when &lt;code&gt;__u64&lt;/code&gt; is aligned at either 4 or 8 bytes. Align &lt;code&gt;struct foo&lt;/code&gt; to 8 bytes:</source>
          <target state="translated">'。它用于以如下方式定义 &lt;code&gt;struct foo&lt;/code&gt; :当 &lt;code&gt;__u64&lt;/code&gt; 对齐4或8个字节时， &lt;code&gt;struct foo&lt;/code&gt; 具有相同的布局，并且结构字段 &lt;code&gt;x&lt;/code&gt; 具有相同的对齐方式。将 &lt;code&gt;struct foo&lt;/code&gt; 对齐为8个字节：</target>
        </trans-unit>
        <trans-unit id="5b7b69fb74833b9999f7b2578bf27a179fd441fc" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. Likewise, &amp;lsquo;</source>
          <target state="translated">'。同样，&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="b25ae87870095d116e612875bacad3ca68d7deb7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. Not available for ARC EM.</source>
          <target state="translated">'。不适用于ARC EM。</target>
        </trans-unit>
        <trans-unit id="f5033799763d08b021660d520078ce1d7313d968" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. Note that &amp;lsquo;</source>
          <target state="translated">'。注意 '</target>
        </trans-unit>
        <trans-unit id="318b20bba0b9b6136cc75e83b5151d88416e904c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. Note that only unnamed structs and unions are allowed, you may not have, for example, an unnamed &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">'。请注意，仅允许使用未命名的结构和联合，例如，您可能没有未命名的 &lt;code&gt;int&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c2efd7a1f09ee927b7431e335115931670665373" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. Note that the choice is subject to optimization: the compiler may use a more efficient model for symbols not visible outside of the translation unit, or if</source>
          <target state="translated">'。请注意，此选择有待优化：编译器可以对翻译单元外部不可见的符号使用更有效的模型，或者</target>
        </trans-unit>
        <trans-unit id="6d84fd44705faa919710e5a5a567c03be82e4e5e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. Pedantic warnings are also disabled in the expression that follows &lt;code&gt;__extension__&lt;/code&gt;. However, only system header files should use these escape routes; application programs should avoid them. See &lt;a href=&quot;alternate-keywords#Alternate-Keywords&quot;&gt;Alternate Keywords&lt;/a&gt;.</source>
          <target state="translated">'。在 &lt;code&gt;__extension__&lt;/code&gt; 后面的表达式中也禁用了Pedantic警告。但是，只有系统头文件才应使用这些转义路由。应用程序应避免使用它们。请参阅&lt;a href=&quot;alternate-keywords#Alternate-Keywords&quot;&gt;备用关键字&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d106126450d402defd32926b6a07b8058193e8cd" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. Previously, &amp;lsquo;</source>
          <target state="translated">'。以前，&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="91fec6793e91142970cbc2f94e0e2d931265d9a7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. Refer to</source>
          <target state="translated">'。参考</target>
        </trans-unit>
        <trans-unit id="1311df9de660e63cadb852066da316d261298d24" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. See &lt;a href=&quot;environment-variables#Environment-Variables&quot;&gt;Environment Variables&lt;/a&gt;.</source>
          <target state="translated">'。请参阅&lt;a href=&quot;environment-variables#Environment-Variables&quot;&gt;环境变量&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="aaf91ece2d881a3cd32c835822bcb56d2ad0243e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. Some calling conventions are impossible to implement on some ISAs: for example, &amp;lsquo;</source>
          <target state="translated">'。某些调用约定无法在某些ISA上实现：例如，&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="a190d1fbd8df2eaeb97bf8dfebcec6e9fb64c0b2" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. Specifying &amp;lsquo;</source>
          <target state="translated">'。指定&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="b517fa930eabc5143e6a2488d57edbae11688ae8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. Such a setting will name the data file</source>
          <target state="translated">'。这样的设置将命名数据文件</target>
        </trans-unit>
        <trans-unit id="fd1611dd4569a88af914da509268caa5134b1296" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. The &amp;lsquo;</source>
          <target state="translated">'。'</target>
        </trans-unit>
        <trans-unit id="95987fef4e179da34ae695b2d604db02e1ef2507" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. The ColdFire &lt;var&gt;cpu&lt;/var&gt;s are given by the table below, which also classifies the CPUs into families:</source>
          <target state="translated">'。下表给出了ColdFire &lt;var&gt;cpu&lt;/var&gt; ，该表也将CPU分为几类：</target>
        </trans-unit>
        <trans-unit id="39f26c85467bca2a86cf187cdaa1f82a92dd500b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. The ColdFire microarchitectures are: &amp;lsquo;</source>
          <target state="translated">'。ColdFire微架构是：</target>
        </trans-unit>
        <trans-unit id="1ea24288b4005507fd45c41a5bb5599705b6e6fd" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. The compiler also issues a warning, like &amp;lsquo;</source>
          <target state="translated">'。编译器还会发出警告，例如&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="c67138f86f8bd3b4491ad0910cc95a4fc7e9b819" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. The compiler gives errors for such constructs.</source>
          <target state="translated">'。编译器会为此类构造提供错误。</target>
        </trans-unit>
        <trans-unit id="0726de9452e52fbfdda6ff6a4218547b363e917e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. The default ISA is sm_30.</source>
          <target state="translated">'。默认的ISA是sm_30。</target>
        </trans-unit>
        <trans-unit id="984545af201446c7e2041d27d40b9dfbdfc1d480" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. The default cache size is 64KB.</source>
          <target state="translated">'。默认缓存大小为64KB。</target>
        </trans-unit>
        <trans-unit id="c5f007e66a67a47ccee24c846b7d52a755cea4ae" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. The default depends on how the compiler has been configured, it can be any of the above &lt;var&gt;WHEN&lt;/var&gt; options or also &amp;lsquo;</source>
          <target state="translated">'。默认值取决于编译器的配置方式，它可以是上述任何 &lt;var&gt;WHEN&lt;/var&gt; 选项，也可以是'</target>
        </trans-unit>
        <trans-unit id="99f888b01addeed94f74efc8a92fbac99be06433" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. The default if</source>
          <target state="translated">'。默认为</target>
        </trans-unit>
        <trans-unit id="ea0c5ec8fd22ea6fee202ca6916c9e682ee6e7fd" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. The default is &amp;lsquo;</source>
          <target state="translated">'。默认值为&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="d0e259ad7b9cda818e8d39201ed478f72bec6ec5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. The first one is useful for single-threaded applications, while the second one prevents profile corruption by emitting thread-safe code.</source>
          <target state="translated">'。第一个对单线程应用程序很有用，而第二个通过发出线程安全代码来防止配置文件损坏。</target>
        </trans-unit>
        <trans-unit id="3a7b6db71fd3de95568e7e8bb18be320b22766cf" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. The label must still be listed in the &lt;var&gt;GotoLabels&lt;/var&gt; section when using this approach.</source>
          <target state="translated">'。使用此方法时，标签仍必须在 &lt;var&gt;GotoLabels&lt;/var&gt; 部分中列出。</target>
        </trans-unit>
        <trans-unit id="509f5bcf7e8400bc0491d4aeedccc1df5fdbcc82" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. The meanings are the same as for the extensions to</source>
          <target state="translated">'。含义与对的扩展相同</target>
        </trans-unit>
        <trans-unit id="a50a8e414947d71b3be5444f7bfdf7f9c5a0d74e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. The option is needed when the program extends the lifetime of a scoped local variable or a compiler generated temporary beyond the end point defined by the language. When a lifetime of a variable ends, and if the variable lives in memory, the optimizing compiler has the freedom to reuse its stack space with other temporaries or scoped local variables whose live range does not overlap with it. Legacy code extending local lifetime is likely to break with the stack reuse optimization.</source>
          <target state="translated">'。当程序将作用域范围内的局部变量的寿命延长或临时生成的编译器的寿命超出该语言定义的终点时，需要使用该选项。当变量的生存期结束时，并且如果该变量存在于内存中，则优化编译器可以自由地将其堆栈空间与其他临时变量或作用域范围不重叠的局部作用域局部变量重用。延长本地生存期的旧代码很可能会因堆栈重用优化而中断。</target>
        </trans-unit>
        <trans-unit id="68e76650fa4e064c904802723a282ea409b1c512" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. The processor names are: &amp;lsquo;</source>
          <target state="translated">'。处理器名称为：'</target>
        </trans-unit>
        <trans-unit id="0c7ab966964d35b1d65d62764fbde6b02ce185c3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. The special value &amp;lsquo;</source>
          <target state="translated">'。特殊价值'</target>
        </trans-unit>
        <trans-unit id="ec1d5e9115273904b0d4e3217c9f9dadfb94a592" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. The value has type &lt;code&gt;void *&lt;/code&gt;. This value is a constant and can be used wherever a constant of that type is valid. For example:</source>
          <target state="translated">'。该值的类型为 &lt;code&gt;void *&lt;/code&gt; 。该值是一个常量，可以在该类型的常量有效的任何地方使用。例如：</target>
        </trans-unit>
        <trans-unit id="0a49ed6249ec64656dcc28e26855c09a1e70be82" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. These are the extensions that GCC uses for preprocessed files created by</source>
          <target state="translated">'。这些是GCC用于由创建的预处理文件的扩展名</target>
        </trans-unit>
        <trans-unit id="c340165ed2781f436e620f363d28887620b552e8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. These can be used to improve optimization. Currently, they are only used in one place: in</source>
          <target state="translated">'。这些可以用来改善优化。当前，它们仅在一个地方使用：</target>
        </trans-unit>
        <trans-unit id="80fa6be15a7162a6632d31e099a63ea1a1b003cc" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. This in turn is used by the</source>
          <target state="translated">'。依次由</target>
        </trans-unit>
        <trans-unit id="60a420a1dc9c2b1ba63eb51ebb8e08cd0a754a3a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. This is a GNU extension. For example,</source>
          <target state="translated">'。这是一个GNU扩展。例如，</target>
        </trans-unit>
        <trans-unit id="877bd31f7e2057375c174895bb473eb44a99c3aa" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. This is particularly useful in environments that operate a lot on the bit level (like microcontrollers).</source>
          <target state="translated">'。这在以位级别进行大量操作的环境（如微控制器）中特别有用。</target>
        </trans-unit>
        <trans-unit id="d54f292cb6286085f0e53e7d45c832d8af478541" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. This is useful if sourcefiles are in several different directories.</source>
          <target state="translated">'。如果源文件位于几个不同的目录中，这将很有用。</target>
        </trans-unit>
        <trans-unit id="dea282d75128e2e55025b832d35cd242bed89773" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. This option has been deprecated by -mbranch-protection.</source>
          <target state="translated">'。-mbranch-protection已弃用该选项。</target>
        </trans-unit>
        <trans-unit id="7480b51fde68ea2f5ca5289f9811faf70d22a0f8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. This option is deprecated. The</source>
          <target state="translated">'。不建议使用此选项。的</target>
        </trans-unit>
        <trans-unit id="ef37fc6184ad856cae988d5c0a2b60736e5c1c04" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. This option is only available on the 64-bit HP-UX GCC, i.e. configured with &amp;lsquo;</source>
          <target state="translated">'。此选项仅在64位HP-UX GCC上可用，即配置为&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="78af1a2b0f317b8f65a1549c2905f6cec65ef3c4" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. This tells the compiler to generate additional information needed by gcov (basically a flow graph of the program) and also includes additional code in the object files for generating the extra profiling information needed by gcov. These additional files are placed in the directory where the object file is located.</source>
          <target state="translated">'。这告诉编译器生成gcov所需的其他信息（基本上是程序的流程图），并且在目标文件中还包含其他代码，用于生成gcov所需的其他概要信息。这些其他文件放置在目标文件所在的目录中。</target>
        </trans-unit>
        <trans-unit id="f5ae572b044573aa8167cfdeb5660a51ca4f5cf3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. This temporary file is not meant for communication between processes, but rather as a junk disposal mechanism.</source>
          <target state="translated">'。该临时文件不是用于进程之间的通信，而是一种垃圾处理机制。</target>
        </trans-unit>
        <trans-unit id="de80f6d77c61c199645e26590cde27dc448403bc" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. To maintain the whole program optimization it is recommended to link such objects into static library instead. Alternatively it is possible to use H.J. Lu&amp;rsquo;s binutils with support for mixed objects.</source>
          <target state="translated">'。为了维持整个程序的优化，建议将此类对象链接到静态库中。或者，可以使用HJ Lu的binutils支持混合对象。</target>
        </trans-unit>
        <trans-unit id="f0d05b6029dd2a7b939fe9201df9c734ba3996a7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. To reduce exposure to denial-of-service attacks, the file name is now chosen in a way that is hard to predict even when previously chosen file names are known. For example, &amp;lsquo;</source>
          <target state="translated">'。为了减少遭受拒绝服务攻击的风险，现在以难以预测的方式选择文件名，即使已知先前选择的文件名也是如此。例如， '</target>
        </trans-unit>
        <trans-unit id="10bcdbe30a9c3f088aa63dfc7f0c5f6692a7ef56" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. To resolve this you either need to put</source>
          <target state="translated">'。要解决此问题，您要么需要</target>
        </trans-unit>
        <trans-unit id="95c6715f73aa5d0af712fb6134880b9fcbd79120" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. When a base standard is specified, the compiler accepts all programs following that standard plus those using GNU extensions that do not contradict it. For example,</source>
          <target state="translated">'。指定基本标准后，编译器将接受该标准之后的所有程序，以及使用与该标准不矛盾的GNU扩展的程序。例如，</target>
        </trans-unit>
        <trans-unit id="d141ae557c3ffdb3753a6a41a13d3a2b084753bd" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. When you list more than one possible location (for example, &amp;lsquo;</source>
          <target state="translated">'。当您列出多个可能的位置时（例如，&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="83fe51260eb75dd9c72893e7b9b2fb9495d8b24d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. While &amp;lsquo;</source>
          <target state="translated">'。而&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="99b60c3edd35097ae5312da98dd3e4613c5c59db" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. With native Solaris and GNU/Linux toolchains, &amp;lsquo;</source>
          <target state="translated">'。使用本机Solaris和GNU / Linux工具链，&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="1fa61258c1cd78b2c137d2dd13766886720e3936" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;. With the &amp;lsquo;</source>
          <target state="translated">'。与&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="f3dc366f61d8fabb2ad615ae2f691b7fc061f609" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;/&amp;lsquo;</source>
          <target state="translated">&amp;rsquo;/&amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="156309a7b165cae2860384c8bd41ff8b92b091f4" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;:</source>
          <target state="translated">&amp;rsquo;:</target>
        </trans-unit>
        <trans-unit id="1eb8135cc50a6d10a9fd22ec9ddc97deda072b07" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;: these extensions disable the specified option and any other extensions that may depend on the presence of that extension.</source>
          <target state="translated">'：这些扩展名禁用指定的选项以及可能取决于该扩展名存在的任何其他扩展名。</target>
        </trans-unit>
        <trans-unit id="10548d28e15289950fa348ee543ccdceadc64c48" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;; &amp;lsquo;</source>
          <target state="translated">'; '</target>
        </trans-unit>
        <trans-unit id="d056957801202f4b885351da27e86f96b001e71b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;; C++ header files often use &amp;lsquo;</source>
          <target state="translated">'; C ++头文件经常使用'</target>
        </trans-unit>
        <trans-unit id="14a65bdd12d63f7386ba288ffd05e53d2b1b3353" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;; and any setting of</source>
          <target state="translated">'; 和任何设置</target>
        </trans-unit>
        <trans-unit id="879ada406a8ceb853c0f4a2d334e5423ad141c4b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;; and preprocessed C++ files use the suffix &amp;lsquo;</source>
          <target state="translated">'; 和经过预处理的C ++文件使用后缀'</target>
        </trans-unit>
        <trans-unit id="779783ef739406f991e6471784da6ce1c3d86b00" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;; the default is &amp;lsquo;</source>
          <target state="translated">'; 默认值为&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="8e4fbe0f7061332ebc6307b11d6557e735e43959" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;; with</source>
          <target state="translated">'; 与</target>
        </trans-unit>
        <trans-unit id="532b1a64c747914b89bd10f272d06140e5c954e4" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;? Sometimes it allows better code to be generated.</source>
          <target state="translated">'？有时，它允许生成更好的代码。</target>
        </trans-unit>
        <trans-unit id="026366245e3ea8296dbdd0b1b6034424cc1ac47a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;](&amp;lsquo;</source>
          <target state="translated">&amp;rsquo;](&amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="60b0b92b2462673ed5f8cdc4eda20e78b1b728aa" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;][&amp;lsquo;</source>
          <target state="translated">&amp;rsquo;][&amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="1de782ae7763bac352b0e9b09d14d7a9ac06ff61" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;|&amp;lsquo;</source>
          <target state="translated">&amp;rsquo;|&amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="eb6294d9bae2e5ca823e84066b30abc5ef143039" translate="yes" xml:space="preserve">
          <source>'??/n'</source>
          <target state="translated">'??/n'</target>
        </trans-unit>
        <trans-unit id="4262b9cfb91c51cbf3f44b62fe2a7b81e2676c78" translate="yes" xml:space="preserve">
          <source>'FOOF'</source>
          <target state="translated">'FOOF'</target>
        </trans-unit>
        <trans-unit id="caa61a56c1bf4b89298cbbce30e9181117ce2f54" translate="yes" xml:space="preserve">
          <source>(C++ only) A base class is not initialized in the copy constructor of a derived class.</source>
          <target state="translated">（仅C ++）未在派生类的副本构造函数中初始化基类。</target>
        </trans-unit>
        <trans-unit id="ee2291a0563b01ff7fdfe4e8efa7650f8a5b537a" translate="yes" xml:space="preserve">
          <source>(C++ only) Ambiguous virtual bases.</source>
          <target state="translated">（仅C ++）模糊的虚拟基础。</target>
        </trans-unit>
        <trans-unit id="dc6745c9fc96f11cdd3ca8018b2f16a7465a02cc" translate="yes" xml:space="preserve">
          <source>(C++ only) An enumerator and a non-enumerator both appear in a conditional expression.</source>
          <target state="translated">（仅C ++）枚举器和非枚举器都出现在条件表达式中。</target>
        </trans-unit>
        <trans-unit id="3c9a648042433eeec71305942c0962bdaedafbb1" translate="yes" xml:space="preserve">
          <source>(C++ only) Subscripting an array that has been declared &lt;code&gt;register&lt;/code&gt;.</source>
          <target state="translated">（仅C ++）对已声明为 &lt;code&gt;register&lt;/code&gt; 的数组进行下标。</target>
        </trans-unit>
        <trans-unit id="68eedac95edd544dcb28cc6aa2281a183f6f6c6a" translate="yes" xml:space="preserve">
          <source>(C++ only) Taking the address of a variable that has been declared &lt;code&gt;register&lt;/code&gt;.</source>
          <target state="translated">（仅C ++）获取已声明为 &lt;code&gt;register&lt;/code&gt; 的变量的地址。</target>
        </trans-unit>
        <trans-unit id="daf861b43184d4153abb4df39cb8f7fd94eb561a" translate="yes" xml:space="preserve">
          <source>(C, Objective-C, C++, Objective-C++ and Fortran only)</source>
          <target state="translated">（仅限C，Objective-C，C ++，Objective-C ++和Fortran）</target>
        </trans-unit>
        <trans-unit id="2df280ab593af30434215cb8468898676012fc21" translate="yes" xml:space="preserve">
          <source>(Dis/En)able control speculative scheduling. This feature is available only during region scheduling (i.e. before reload). This results in generation of the &lt;code&gt;ld.s&lt;/code&gt; instructions and the corresponding check instructions &lt;code&gt;chk.s&lt;/code&gt;. The default setting is disabled.</source>
          <target state="translated">（禁用/启用）控制投机调度。此功能仅在区域调度期间（即重新加载之前）可用。这导致产生的 &lt;code&gt;ld.s&lt;/code&gt; 说明和相应的检查指令 &lt;code&gt;chk.s&lt;/code&gt; 。默认设置为禁用。</target>
        </trans-unit>
        <trans-unit id="9221df4a228447987ae95de2115c69067f514593" translate="yes" xml:space="preserve">
          <source>(Dis/En)able data speculative scheduling before reload. This results in generation of &lt;code&gt;ld.a&lt;/code&gt; instructions and the corresponding check instructions (&lt;code&gt;ld.c&lt;/code&gt; / &lt;code&gt;chk.a&lt;/code&gt;). The default setting is disabled.</source>
          <target state="translated">重新加载前（禁用/启用）数据推测性调度。这将导致生成 &lt;code&gt;ld.a&lt;/code&gt; 指令和相应的检查指令（ &lt;code&gt;ld.c&lt;/code&gt; / &lt;code&gt;chk.a&lt;/code&gt; ）。默认设置为禁用。</target>
        </trans-unit>
        <trans-unit id="bb4563f137d6532d80529c92294b38b94e3d50f0" translate="yes" xml:space="preserve">
          <source>(En/Dis)able data speculative scheduling after reload. This results in generation of &lt;code&gt;ld.a&lt;/code&gt; instructions and the corresponding check instructions (&lt;code&gt;ld.c&lt;/code&gt; / &lt;code&gt;chk.a&lt;/code&gt;). The default setting is enabled.</source>
          <target state="translated">重新加载后（启用/禁用）数据推测性调度。这将导致生成 &lt;code&gt;ld.a&lt;/code&gt; 指令和相应的检查指令（ &lt;code&gt;ld.c&lt;/code&gt; / &lt;code&gt;chk.a&lt;/code&gt; ）。默认设置为启用。</target>
        </trans-unit>
        <trans-unit id="9b5d3dd642fecc8c54f3574ae7e4eca939a0223d" translate="yes" xml:space="preserve">
          <source>(En/Dis)able speculative scheduling of the instructions that are dependent on the control speculative loads. This is effective only with</source>
          <target state="translated">取决于控制推测负载的指令的（启用/禁用）推测调度。这仅对</target>
        </trans-unit>
        <trans-unit id="6e24e206b19deaa607df74a2a03c88ca434715e8" translate="yes" xml:space="preserve">
          <source>(En/Dis)able speculative scheduling of the instructions that are dependent on the data speculative loads after reload. This is effective only with</source>
          <target state="translated">重新加载后取决于数据推测性加载的指令的（启用/禁用）推测性调度。这仅对</target>
        </trans-unit>
        <trans-unit id="9ed5d4687734c1c08a3521f633f36f3d8b047751" translate="yes" xml:space="preserve">
          <source>(En/Dis)able speculative scheduling of the instructions that are dependent on the data speculative loads before reload. This is effective only with</source>
          <target state="translated">重新加载之前取决于数据推测性加载的指令的（启用/禁用）推测性调度。这仅对</target>
        </trans-unit>
        <trans-unit id="f65f29a10482b00bc5d910c9f1c1ebf21261bfb6" translate="yes" xml:space="preserve">
          <source>(NOTE: This manual does not describe the Objective-C and Objective-C++ languages themselves. See &lt;a href=&quot;standards#Standards&quot;&gt;Language Standards Supported by GCC&lt;/a&gt;, for references.)</source>
          <target state="translated">（注意：本手册并未描述Objective-C和Objective-C ++语言本身。请参阅&lt;a href=&quot;standards#Standards&quot;&gt;GCC支持的语言标准以&lt;/a&gt;获取参考。）</target>
        </trans-unit>
        <trans-unit id="255cb0de41656d1d88145ac9a013fc923a373d29" translate="yes" xml:space="preserve">
          <source>(Of course, users strongly concerned about portability should indicate explicitly in each bit-field whether it is signed or not. In this way, they write programs which have the same meaning in both C dialects.)</source>
          <target state="translated">（当然，强烈关注可移植性的用户应在每个位字段中明确指出其是否已签名。通过这种方式，他们编写的程序在两个C语言中具有相同的含义。）</target>
        </trans-unit>
        <trans-unit id="8f6b7736e459a50ee7bbeb56f3d58bf288b8bded" translate="yes" xml:space="preserve">
          <source>(a) The FSF&amp;rsquo;s Front-Cover Text is:</source>
          <target state="translated">（a）FSF的封面文字为：</target>
        </trans-unit>
        <trans-unit id="2e75bfc57ae0ab8bcba864cc9d8834305f57fa0d" translate="yes" xml:space="preserve">
          <source>(although &lt;code&gt;inline&lt;/code&gt; can be used in a program compiled with</source>
          <target state="translated">（尽管可以在使用以下命令编译的程序中使用 &lt;code&gt;inline&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d32ccfc33694fd3b9b08e15cd17089eb0baac7ce" translate="yes" xml:space="preserve">
          <source>(and</source>
          <target state="translated">(and</target>
        </trans-unit>
        <trans-unit id="e7c1e631efc5e951a858a5546de3f08168476af8" translate="yes" xml:space="preserve">
          <source>(and its suboptions except for</source>
          <target state="translated">（及其子选项除外</target>
        </trans-unit>
        <trans-unit id="cf05f29eaa82449ea9aa6a568e24067dd4305c19" translate="yes" xml:space="preserve">
          <source>(b) The FSF&amp;rsquo;s Back-Cover Text is:</source>
          <target state="translated">（b）FSF的封底案文为：</target>
        </trans-unit>
        <trans-unit id="7c5c07cd3e0584e5f83e6eca859aaee8270b6f9f" translate="yes" xml:space="preserve">
          <source>(equivalent to</source>
          <target state="translated">（相当于</target>
        </trans-unit>
        <trans-unit id="6fe1e95fb4f3ef08fb68e78f655aad948380249c" translate="yes" xml:space="preserve">
          <source>(for C++11 with GNU extensions), or</source>
          <target state="translated">（对于具有GNU扩展名的C ++ 11），或</target>
        </trans-unit>
        <trans-unit id="6749511020de741ea49c56137cabe2321f62325a" translate="yes" xml:space="preserve">
          <source>(for C++14 with GNU extensions), or</source>
          <target state="translated">（对于具有GNU扩展名的C ++ 14），或</target>
        </trans-unit>
        <trans-unit id="347f5b597e85d7cf2b587972a2d1be7fc90d299d" translate="yes" xml:space="preserve">
          <source>(for C++17 with GNU extensions).</source>
          <target state="translated">（适用于具有GNU扩展名的C ++ 17）。</target>
        </trans-unit>
        <trans-unit id="fddd4e75314207e7b4d93d5aeca459aee1caa67b" translate="yes" xml:space="preserve">
          <source>(for C++98 with GNU extensions), or</source>
          <target state="translated">（对于具有GNU扩展名的C ++ 98），或</target>
        </trans-unit>
        <trans-unit id="acd73cb6eb7c3001e16e7f350d58f1e37fd35077" translate="yes" xml:space="preserve">
          <source>(for C11 with GNU extensions).</source>
          <target state="translated">（适用于具有GNU扩展名的C11）。</target>
        </trans-unit>
        <trans-unit id="0d304bbeefe2e485104adfe1c8dd44203659ea72" translate="yes" xml:space="preserve">
          <source>(for C90 with GNU extensions),</source>
          <target state="translated">（对于带有GNU扩展名的C90），</target>
        </trans-unit>
        <trans-unit id="bb0092b8683dbd00186e0dece89ae6c032549670" translate="yes" xml:space="preserve">
          <source>(for C99 with GNU extensions) or</source>
          <target state="translated">（适用于带有GNU扩展名的C99）或</target>
        </trans-unit>
        <trans-unit id="945ebd24fda58f96cbbedd3f15dfad1eeef3b869" translate="yes" xml:space="preserve">
          <source>(included in</source>
          <target state="translated">（包括在</target>
        </trans-unit>
        <trans-unit id="5272e337f576fd3bc809f60d0191a6671ae86a93" translate="yes" xml:space="preserve">
          <source>(long &lt;var&gt;exp&lt;/var&gt;, long &lt;var&gt;c&lt;/var&gt;, double &lt;var&gt;probability&lt;/var&gt;)</source>
          <target state="translated">（long &lt;var&gt;exp&lt;/var&gt; ，long &lt;var&gt;c&lt;/var&gt; ，double &lt;var&gt;probability&lt;/var&gt; ）</target>
        </trans-unit>
        <trans-unit id="dfc8504e187c996290246ad495a2cf2c1a3b31b8" translate="yes" xml:space="preserve">
          <source>(made from &lt;code&gt;COMPILER_PATH&lt;/code&gt; and</source>
          <target state="translated">（由 &lt;code&gt;COMPILER_PATH&lt;/code&gt; 和</target>
        </trans-unit>
        <trans-unit id="e6745aa693d17e821abd67ed4aeeb14aefa9e2c8" translate="yes" xml:space="preserve">
          <source>(made from &lt;code&gt;GCC_EXEC_PREFIX&lt;/code&gt;),</source>
          <target state="translated">（由 &lt;code&gt;GCC_EXEC_PREFIX&lt;/code&gt; 制造），</target>
        </trans-unit>
        <trans-unit id="682280673e3fef822f44e59e9eab0b6b94a02145" translate="yes" xml:space="preserve">
          <source>(made from &lt;code&gt;TARGET_SYSTEM_ROOT&lt;/code&gt;),</source>
          <target state="translated">（来自 &lt;code&gt;TARGET_SYSTEM_ROOT&lt;/code&gt; ），</target>
        </trans-unit>
        <trans-unit id="519f5cd783a31489bdabb22db2101a6aba0c69bb" translate="yes" xml:space="preserve">
          <source>(note that</source>
          <target state="translated">（注意</target>
        </trans-unit>
        <trans-unit id="762b7473fc9b01f5f7e845131d0e7c1d72ee12cc" translate="yes" xml:space="preserve">
          <source>(note the single quote surrounding the option).</source>
          <target state="translated">（请注意选项周围的单引号）。</target>
        </trans-unit>
        <trans-unit id="7739136dc697141cd8d76585cab6736b910f012b" translate="yes" xml:space="preserve">
          <source>(or</source>
          <target state="translated">(or</target>
        </trans-unit>
        <trans-unit id="9d3b478758763e62fffcc112311a494edb86b8e2" translate="yes" xml:space="preserve">
          <source>(or at least</source>
          <target state="translated">（或至少</target>
        </trans-unit>
        <trans-unit id="13837ddf736eb9effbcf49bb601c63831ec49562" translate="yes" xml:space="preserve">
          <source>(or filename suffixes) to tell &lt;code&gt;gcc&lt;/code&gt; where to start, and one of the options</source>
          <target state="translated">（或文件名后缀）告诉 &lt;code&gt;gcc&lt;/code&gt; 从哪里开始，以及其中一个选项</target>
        </trans-unit>
        <trans-unit id="09db8785647fde935fa1f767fe4c0bab3ab319f9" translate="yes" xml:space="preserve">
          <source>(or the above option combination), and doesn&amp;rsquo;t need</source>
          <target state="translated">（或以上选项组合），并且不需要</target>
        </trans-unit>
        <trans-unit id="80093bb361ef2b4667b08e10b253d923200ffc1e" translate="yes" xml:space="preserve">
          <source>(or the equivalent</source>
          <target state="translated">（或等效的</target>
        </trans-unit>
        <trans-unit id="590d907ceee53a6f5e07761d6444edeed40345ad" translate="yes" xml:space="preserve">
          <source>(see &lt;a href=&quot;adapteva-epiphany-options#Adapteva-Epiphany-Options&quot;&gt;Adapteva Epiphany Options&lt;/a&gt;) command-line switch and &lt;code&gt;#pragma long_calls&lt;/code&gt; settings.</source>
          <target state="translated">（请参阅&lt;a href=&quot;adapteva-epiphany-options#Adapteva-Epiphany-Options&quot;&gt;Adapteva主显选项&lt;/a&gt;）命令行开关和 &lt;code&gt;#pragma long_calls&lt;/code&gt; 设置。</target>
        </trans-unit>
        <trans-unit id="fed4f9fc14b26a8f1cd77a672d74ba7284e93bc1" translate="yes" xml:space="preserve">
          <source>(see &lt;a href=&quot;arc-options#ARC-Options&quot;&gt;ARC Options&lt;/a&gt;) command-line switches and &lt;code&gt;#pragma long_calls&lt;/code&gt; settings.</source>
          <target state="translated">（请参阅&lt;a href=&quot;arc-options#ARC-Options&quot;&gt;ARC Options&lt;/a&gt;）命令行开关和 &lt;code&gt;#pragma long_calls&lt;/code&gt; 设置。</target>
        </trans-unit>
        <trans-unit id="f60b07f30fcef804891a61a3656e18507e9fc89c" translate="yes" xml:space="preserve">
          <source>(see &lt;a href=&quot;arm-options#ARM-Options&quot;&gt;ARM Options&lt;/a&gt;) command-line switch and &lt;code&gt;#pragma long_calls&lt;/code&gt; settings. For ARM, the &lt;code&gt;long_call&lt;/code&gt; attribute indicates that the function might be far away from the call site and require a different (more expensive) calling sequence. The &lt;code&gt;short_call&lt;/code&gt; attribute always places the offset to the function from the call site into the &amp;lsquo;</source>
          <target state="translated">（请参阅&lt;a href=&quot;arm-options#ARM-Options&quot;&gt;ARM选项&lt;/a&gt;）命令行切换和 &lt;code&gt;#pragma long_calls&lt;/code&gt; 设置。对于ARM， &lt;code&gt;long_call&lt;/code&gt; 属性指示该函数可能远离调用站点，并且需要不同的（更昂贵的）调用序列。该 &lt;code&gt;short_call&lt;/code&gt; 属性始终将来自呼叫网站进入了&amp;ldquo;偏移功能</target>
        </trans-unit>
        <trans-unit id="4ba0ed75e8c7540c11c10cb8062d5bc95aac39de" translate="yes" xml:space="preserve">
          <source>(see &lt;a href=&quot;code-gen-options#Code-Gen-Options&quot;&gt;Code Gen Options&lt;/a&gt;) to reserve the register.</source>
          <target state="translated">（请参阅&lt;a href=&quot;code-gen-options#Code-Gen-Options&quot;&gt;代码生成选项&lt;/a&gt;）以保留寄存器。</target>
        </trans-unit>
        <trans-unit id="7d740585c10f26409831f844bd55d5eedd751463" translate="yes" xml:space="preserve">
          <source>(see &lt;a href=&quot;directory-options#Directory-Options&quot;&gt;Directory Options&lt;/a&gt;). These take precedence over places specified using environment variables, which in turn take precedence over those specified by the configuration of GCC. See &lt;a href=&quot;http://gcc.gnu.org/onlinedocs/gccint/Driver.html#Driver&quot;&gt;Controlling the Compilation Driver &lt;samp&gt;gcc&lt;/samp&gt;&lt;/a&gt; in GNU Compiler Collection (GCC) Internals.</source>
          <target state="translated">（请参阅&lt;a href=&quot;directory-options#Directory-Options&quot;&gt;目录选项&lt;/a&gt;）。它们优先于使用环境变量指定的位置，而环境变量又优先于GCC配置指定的位置。请参阅&lt;a href=&quot;http://gcc.gnu.org/onlinedocs/gccint/Driver.html#Driver&quot;&gt;控制编译驱动程序&lt;samp&gt;海湾合作委员会&lt;/samp&gt;&lt;/a&gt; 在GNU编译器集合（GCC）内部。</target>
        </trans-unit>
        <trans-unit id="cd1e6772aba404587464a979947570da09643511" translate="yes" xml:space="preserve">
          <source>(see &lt;a href=&quot;extended-asm#Extended-Asm&quot;&gt;Extended Asm&lt;/a&gt;) in the called function, to serve as a special side effect.</source>
          <target state="translated">（请参阅被&lt;a href=&quot;extended-asm#Extended-Asm&quot;&gt;扩展&lt;/a&gt;函数中的Extended Asm），以作为特殊的副作用。</target>
        </trans-unit>
        <trans-unit id="0938503247a790a7b4b9f4207e5e89f7a4253b1c" translate="yes" xml:space="preserve">
          <source>(see &lt;a href=&quot;instrumentation-options#Instrumentation-Options&quot;&gt;Instrumentation Options&lt;/a&gt;), you can compile it a second time using</source>
          <target state="translated">（请参见&lt;a href=&quot;instrumentation-options#Instrumentation-Options&quot;&gt;Instrumentation Options&lt;/a&gt;），您可以使用进行第二次编译</target>
        </trans-unit>
        <trans-unit id="d9cd77b4be10b663ba5f3b9cb3608966fbd644ed" translate="yes" xml:space="preserve">
          <source>(see &lt;a href=&quot;mips-options#MIPS-Options&quot;&gt;MIPS Options&lt;/a&gt;) command-line switch. The &lt;code&gt;long_call&lt;/code&gt; and &lt;code&gt;far&lt;/code&gt; attributes are synonyms, and cause the compiler to always call the function by first loading its address into a register, and then using the contents of that register. The &lt;code&gt;short_call&lt;/code&gt; and &lt;code&gt;near&lt;/code&gt; attributes are synonyms, and have the opposite effect; they specify that non-PIC calls should be made using the more efficient &lt;code&gt;jal&lt;/code&gt; instruction.</source>
          <target state="translated">（请参阅&lt;a href=&quot;mips-options#MIPS-Options&quot;&gt;MIPS选项&lt;/a&gt;）命令行开关。该 &lt;code&gt;long_call&lt;/code&gt; 和 &lt;code&gt;far&lt;/code&gt; 属性是同义词，并且使编译器总是先装入调用函数的地址到寄存器中，然后使用该寄存器的内容。的 &lt;code&gt;short_call&lt;/code&gt; 和 &lt;code&gt;near&lt;/code&gt; 属性是同义词，并且产生相反的效果; 他们指定应使用更有效的 &lt;code&gt;jal&lt;/code&gt; 指令进行非PIC调用。</target>
        </trans-unit>
        <trans-unit id="0e3f80e361ac2552514137893b0ab9fabcabe627" translate="yes" xml:space="preserve">
          <source>(see &lt;a href=&quot;optimize-options#Optimize-Options&quot;&gt;Optimize Options&lt;/a&gt;) option for this function.</source>
          <target state="translated">（请参阅&lt;a href=&quot;optimize-options#Optimize-Options&quot;&gt;优化选项&lt;/a&gt;）此功能的选项。</target>
        </trans-unit>
        <trans-unit id="9a18948f20eb8ae98ad70a254b90243efbc88d0d" translate="yes" xml:space="preserve">
          <source>(see &lt;a href=&quot;optimize-options#Optimize-Options&quot;&gt;Optimize Options&lt;/a&gt;) with</source>
          <target state="translated">（请参阅&lt;a href=&quot;optimize-options#Optimize-Options&quot;&gt;优化选项&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="d571704fcdb9d5ed79e67b473e0539ffd1606ce1" translate="yes" xml:space="preserve">
          <source>(see &lt;a href=&quot;optimize-options#Optimize-Options&quot;&gt;Options that Control Optimization&lt;/a&gt;).</source>
          <target state="translated">（请参阅&lt;a href=&quot;optimize-options#Optimize-Options&quot;&gt;控制优化的选项&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="8a4d90f4989adf26f774e757c32cb8c9fd263bdf" translate="yes" xml:space="preserve">
          <source>(see &lt;a href=&quot;preprocessor-options#Preprocessor-Options&quot;&gt;Preprocessor Options&lt;/a&gt;), with an optional</source>
          <target state="translated">（请参阅&lt;a href=&quot;preprocessor-options#Preprocessor-Options&quot;&gt;预处理器选项&lt;/a&gt;），以及一个可选的</target>
        </trans-unit>
        <trans-unit id="d55bcbae0d9eedb8abddb17abab718a9163fc72b" translate="yes" xml:space="preserve">
          <source>(see below).</source>
          <target state="translated">（见下文）。</target>
        </trans-unit>
        <trans-unit id="02b70b58cd98cdafb11bf8a667440d592448e3c5" translate="yes" xml:space="preserve">
          <source>(the default), the compiler generates save/restore instructions (except for leaf functions). This is the normal operating mode.</source>
          <target state="translated">（默认），编译器会生成保存/恢复指令（叶函数除外）。这是正常的操作模式。</target>
        </trans-unit>
        <trans-unit id="af40e6cb84087d46922c5a0ffb4867733e5cd979" translate="yes" xml:space="preserve">
          <source>(the default), this defaults to 11 (GCC 7 compatibility). If another ABI version is explicitly selected, this defaults to 0. For compatibility with GCC versions 3.2 through 4.9, use</source>
          <target state="translated">（默认），默认为11（GCC 7兼容性）。如果明确选择了另一个ABI版本，则默认为0。要与GCC 3.2至4.9版本兼容，请使用</target>
        </trans-unit>
        <trans-unit id="3ab143adbc1c1395faeaddeb77a75ce40da712c0" translate="yes" xml:space="preserve">
          <source>(the latter implies the former).</source>
          <target state="translated">（后者暗示前者）。</target>
        </trans-unit>
        <trans-unit id="ca51205aa488fda3fdecbf1f2de750f45ca42e49" translate="yes" xml:space="preserve">
          <source>(when compiling) and</source>
          <target state="translated">（编译时）和</target>
        </trans-unit>
        <trans-unit id="175effdff8d2479be4f59b65047aecd27e3b8b4c" translate="yes" xml:space="preserve">
          <source>(when linking). See the documentation for those options for more details.</source>
          <target state="translated">（链接时）。有关更多选项，请参阅这些选项的文档。</target>
        </trans-unit>
        <trans-unit id="20cd831899eee396a27bb94a8bab7bfba3524de0" translate="yes" xml:space="preserve">
          <source>(which it assumes are the names of linker input library archive files) and returns a result containing all the found arguments each prepended by</source>
          <target state="translated">（假定它是链接器输入库档案文件的名称），并返回一个包含所有找到的参数（每个参数都由前缀）的结果</target>
        </trans-unit>
        <trans-unit id="e73e5132b6755a2681bf9ea218d8fb5be273c29d" translate="yes" xml:space="preserve">
          <source>(which was the default from GCC 3.4 to 4.9) include:</source>
          <target state="translated">（这是GCC 3.4至4.9的默认设置）包括：</target>
        </trans-unit>
        <trans-unit id="d29cb22dfbd079dd15c9c9ee6ecc9e019d9f6e2b" translate="yes" xml:space="preserve">
          <source>(which will eventually be the default) or</source>
          <target state="translated">（最终将是默认设置）或</target>
        </trans-unit>
        <trans-unit id="4bf191089af86ec5288ab306c89094f4d0e110a0" translate="yes" xml:space="preserve">
          <source>(with no level) is the same as</source>
          <target state="translated">（无级别）与</target>
        </trans-unit>
        <trans-unit id="6b302cd20aa6ae0c1658b03d1a00c7adf9543273" translate="yes" xml:space="preserve">
          <source>(with, as for other standard versions,</source>
          <target state="translated">（与其他标准版本一样，</target>
        </trans-unit>
        <trans-unit id="2c929d8cb2c9ae0178197af8deb9b389a6c64e0e" translate="yes" xml:space="preserve">
          <source>(without the version), the version from this option is used for the warning.</source>
          <target state="translated">（无版本），此选项的版本用于警告。</target>
        </trans-unit>
        <trans-unit id="46c5daf75d33dba3c64b315f704b39ce85f4840a" translate="yes" xml:space="preserve">
          <source>) and FP64A (</source>
          <target state="translated">）和FP64A（</target>
        </trans-unit>
        <trans-unit id="563d45d6df052b34a41617f5f0d2d22fbf1bbfc5" translate="yes" xml:space="preserve">
          <source>) and a new value of &lt;code&gt;__STDC_VERSION__&lt;/code&gt;, and so is supported to the same extent as C11.</source>
          <target state="translated">）和 &lt;code&gt;__STDC_VERSION__&lt;/code&gt; 的新值，因此在与C11相同的程度上受支持。</target>
        </trans-unit>
        <trans-unit id="0f02ab141e40e964aecd5ca279400c7bf4b18cea" translate="yes" xml:space="preserve">
          <source>) and interprocedural constant propagation (</source>
          <target state="translated">）和过程间常数传播（</target>
        </trans-unit>
        <trans-unit id="e3fcef972d7d590f262c1cc874b47cd439afbe43" translate="yes" xml:space="preserve">
          <source>) and the ARM processor type for which to tune for performance (as if specified by</source>
          <target state="translated">）以及要针对其性能进行调整的ARM处理器类型（如</target>
        </trans-unit>
        <trans-unit id="676ea35ac4fbc9be6e247e62c7b74cdadd4458d2" translate="yes" xml:space="preserve">
          <source>) and the debug info format supports it.</source>
          <target state="translated">），并且调试信息格式支持它。</target>
        </trans-unit>
        <trans-unit id="959a7bd87d034ba23c5bbe122892dd9a038669b8" translate="yes" xml:space="preserve">
          <source>) and to determine the target processor for which to tune for performance (as if by</source>
          <target state="translated">），并确定要针对其性能进行调整的目标处理器（就像通过</target>
        </trans-unit>
        <trans-unit id="fa1fd71dcd9a799b64dd5ef03786633f6c950ba5" translate="yes" xml:space="preserve">
          <source>) are available:</source>
          <target state="translated">）可用：</target>
        </trans-unit>
        <trans-unit id="fff7787a85186574fddbf94130d99816fffebb35" translate="yes" xml:space="preserve">
          <source>) does not allow the use of the &lt;code&gt;icbi&lt;/code&gt; instruction. If the selected code generation option does not allow the use of the &lt;code&gt;icbi&lt;/code&gt; instruction, and</source>
          <target state="translated">）不允许使用 &lt;code&gt;icbi&lt;/code&gt; 指令。如果选择的代码生成选项不允许使用 &lt;code&gt;icbi&lt;/code&gt; 指令，则</target>
        </trans-unit>
        <trans-unit id="66d488336d845c3e11422345df2d9abe3c655b7d" translate="yes" xml:space="preserve">
          <source>) except that they do not change any feature macros. For example,</source>
          <target state="translated">），但它们不会更改任何功能宏。例如，</target>
        </trans-unit>
        <trans-unit id="b94ca66fe63e931f27878f6ec1bb8e784a2fccf3" translate="yes" xml:space="preserve">
          <source>) in size. The default is</source>
          <target state="translated">） 在尺寸方面。默认是</target>
        </trans-unit>
        <trans-unit id="542a755b0afdbf00d8d31e36ba9bc4cd6e84a889" translate="yes" xml:space="preserve">
          <source>) is available:</source>
          <target state="translated">）可用：</target>
        </trans-unit>
        <trans-unit id="a0553b2d9cf564cc761c6f8046ff2ebb991b33b4" translate="yes" xml:space="preserve">
          <source>) is based on the idea that when a local variable shadows another one of incompatible type, it is most likely intentional, not a bug or typo, as shown in the following example:</source>
          <target state="translated">）的想法是，当局部变量遮盖另一个不兼容类型的变量时，它很可能是有意的，而不是错误或错字，如以下示例所示：</target>
        </trans-unit>
        <trans-unit id="52d2a999f75dccc509e90809d18c6096a16a88e5" translate="yes" xml:space="preserve">
          <source>) is disabled.</source>
          <target state="translated">） 被禁用。</target>
        </trans-unit>
        <trans-unit id="2378d185f16386ef083035250a3ab4f0f7c4dd3b" translate="yes" xml:space="preserve">
          <source>) is enabled;</source>
          <target state="translated">）已启用；</target>
        </trans-unit>
        <trans-unit id="ff4d48ebc04f7eef9f0f196eb714e862d444f2d8" translate="yes" xml:space="preserve">
          <source>) is not supported on the HP PA machine, unless you use the preliminary GNU tools.</source>
          <target state="translated">除非您使用初步的GNU工具，否则HP PA机器不支持）。</target>
        </trans-unit>
        <trans-unit id="1de6a4c82af0028ed53010748154e492d457ccee" translate="yes" xml:space="preserve">
          <source>) on a 64-bit system, the IEEE 128-bit floating point support will also enable the generation of ISA 3.0 IEEE 128-bit floating point instructions. Otherwise, if you do not specify to generate ISA 3.0 instructions or you are targeting a 32-bit big endian system, IEEE 128-bit floating point will be done with software emulation.</source>
          <target state="translated">）在64位系统上，IEEE 128位浮点支持也将支持生成ISA 3.0 IEEE 128位浮点指令。否则，如果您不指定生成ISA 3.0指令，或者目标是32位大字节序系统，则将通过软件仿真来完成IEEE 128位浮点。</target>
        </trans-unit>
        <trans-unit id="372ab2853846c6ec09a1a55a70087f0853ac4490" translate="yes" xml:space="preserve">
          <source>) on the linker command line.</source>
          <target state="translated">）在链接器命令行上。</target>
        </trans-unit>
        <trans-unit id="0f87b9dafadcd5c3f21d76f5c33546bb45833f59" translate="yes" xml:space="preserve">
          <source>) or 32 bits (</source>
          <target state="translated">）或32位（</target>
        </trans-unit>
        <trans-unit id="88214b46b51ead2248a33b5dc3fb87a39aea5aca" translate="yes" xml:space="preserve">
          <source>) or &lt;code&gt;gprof&lt;/code&gt; (for</source>
          <target state="translated">）或 &lt;code&gt;gprof&lt;/code&gt; （用于</target>
        </trans-unit>
        <trans-unit id="92223374d02859d95dcd004e6050947644805c23" translate="yes" xml:space="preserve">
          <source>) or a 16-bit boundary (</source>
          <target state="translated">）或16位边界（</target>
        </trans-unit>
        <trans-unit id="de09a263a8cf42ae108ce7d225322cce5d807572" translate="yes" xml:space="preserve">
          <source>) or disables (</source>
          <target state="translated">）或禁用（</target>
        </trans-unit>
        <trans-unit id="6c992e85f9d035d560971258dac3cd10814fe987" translate="yes" xml:space="preserve">
          <source>) or if callee&amp;rsquo;s register usage cannot be known exactly (this happens on targets that do not expose prologues and epilogues in RTL).</source>
          <target state="translated">），或者无法确切了解被调用方的注册使用情况（这种情况发生在未公开RTL中的序言和结语的目标上）。</target>
        </trans-unit>
        <trans-unit id="665e2cbf7c203c26ee0978de2346b3d2559b1e78" translate="yes" xml:space="preserve">
          <source>) or if-conversion (</source>
          <target state="translated">）或if-conversion（</target>
        </trans-unit>
        <trans-unit id="f0fe0e76237f815ccac9b5973949d2128c4d25ab" translate="yes" xml:space="preserve">
          <source>) or later:</source>
          <target state="translated">）或更高版本：</target>
        </trans-unit>
        <trans-unit id="18fb7a4971f7182b1d06e123c98d77026a5601b8" translate="yes" xml:space="preserve">
          <source>) or size (</source>
          <target state="translated">）或尺寸（</target>
        </trans-unit>
        <trans-unit id="b61d90f715da7fa5414c6199e285572c09d6de3a" translate="yes" xml:space="preserve">
          <source>) or suffer significant run time performance penalties. On Pentium III, the Streaming SIMD Extension (SSE) data type &lt;code&gt;__m128&lt;/code&gt; may not work properly if it is not 16-byte aligned.</source>
          <target state="translated">）或遭受重大的运行时性能损失。在奔腾III上，如果未按16字节对齐，则流SIMD扩展（SSE）数据类型 &lt;code&gt;__m128&lt;/code&gt; 可能无法正常工作。</target>
        </trans-unit>
        <trans-unit id="cf692b44ef780ecaea543ddcdee9cc9544aea8a5" translate="yes" xml:space="preserve">
          <source>) passes information to the compiler about used and externally visible symbols. When the linker plugin is not available,</source>
          <target state="translated">）将已使用和外部可见符号传递给编译器的信息。当链接器插件不可用时，</target>
        </trans-unit>
        <trans-unit id="5293f6bbeebb606bbb53bc3a56ae4ac32132f596" translate="yes" xml:space="preserve">
          <source>) plus the other libraries and startup files it needs, in the proper order.</source>
          <target state="translated">）以及所需的其他库和启动文件（顺序正确）。</target>
        </trans-unit>
        <trans-unit id="e31a598c844d6a572bc984c25f00bb8bb60ffaa7" translate="yes" xml:space="preserve">
          <source>) requires a diagnostic, in some cases where there is undefined behavior at compile-time and in some other cases that do not prevent compilation of programs that are valid according to the standard. This is not equivalent to</source>
          <target state="translated">）需要进行诊断，在某些情况下会在编译时出现未定义的行为，而在某些其他情况下会阻止进行根据标准有效的程序的编译。这不等于</target>
        </trans-unit>
        <trans-unit id="606a6881ab81487da34e0ec67cc4569c78f1b735" translate="yes" xml:space="preserve">
          <source>) respectively.</source>
          <target state="translated">） 分别。</target>
        </trans-unit>
        <trans-unit id="c651c41b3e1b6730da2636dadc62cb5aca1af853" translate="yes" xml:space="preserve">
          <source>) retain a reference to DWARF Version 2 in their names, but apply to all currently-supported versions of DWARF.</source>
          <target state="translated">）在名称中保留对DWARF版本2的引用，但适用于DWARF当前支持的所有版本。</target>
        </trans-unit>
        <trans-unit id="b8d5778382dc7872cededaaa8c3f62d9e97c5db9" translate="yes" xml:space="preserve">
          <source>) that you don&amp;rsquo;t expect.</source>
          <target state="translated">），这是您所不希望的。</target>
        </trans-unit>
        <trans-unit id="096e30d6e1308807356b1a8243bd8e1c2bc7b4bc" translate="yes" xml:space="preserve">
          <source>) the actual recursion depth can be guessed from the probability that function recurses via a given call expression. This parameter limits inlining only to call expressions whose probability exceeds the given threshold (in percents).</source>
          <target state="translated">）的实际递归深度可以通过函数通过给定调用表达式递归的概率来猜测。此参数仅将内联限制为概率超过给定阈值（以百分比为单位）的调用表达式。</target>
        </trans-unit>
        <trans-unit id="9cc56b0abbda97d9e58f8de7d0f1f4cdbeb16304" translate="yes" xml:space="preserve">
          <source>) the linker plugin will default to</source>
          <target state="translated">）链接器插件将默认为</target>
        </trans-unit>
        <trans-unit id="a788f4704d0fa869be2f93937e1eeb5d09c8018e" translate="yes" xml:space="preserve">
          <source>) the security feature that verifies at run time, for every virtual call, that the vtable pointer through which the call is made is valid for the type of the object, and has not been corrupted or overwritten. If an invalid vtable pointer is detected at run time, an error is reported and execution of the program is immediately halted.</source>
          <target state="translated">）在运行时针对每个虚拟调用进行验证的安全功能，通过该vtable指针进行的调用对于该对象的类型有效，并且未被破坏或覆盖。如果在运行时检测到无效的vtable指针，则会报告错误，并立即停止执行程序。</target>
        </trans-unit>
        <trans-unit id="1574f5807a54ab6b1e028d7e41ef97567b726e97" translate="yes" xml:space="preserve">
          <source>) the use of RX floating-point hardware. The default is enabled for the RX600 series and disabled for the RX200 series.</source>
          <target state="translated">）使用RX浮点硬件。RX600系列默认为启用，RX200系列默认为禁用。</target>
        </trans-unit>
        <trans-unit id="e21d4e93e91989fd8efa13649a6d484d18b95cd7" translate="yes" xml:space="preserve">
          <source>) together with low-level details about the analysis.</source>
          <target state="translated">）以及有关该分析的低级详细信息。</target>
        </trans-unit>
        <trans-unit id="1653c12d8093ecbaf09e84a2fda310d1cb9789be" translate="yes" xml:space="preserve">
          <source>) when optimizing at</source>
          <target state="translated">）在优化时</target>
        </trans-unit>
        <trans-unit id="9b7ff0a38348e09a4d3f591bcc731db366000ffd" translate="yes" xml:space="preserve">
          <source>) will diagnose such cases. They are also diagnosed where constant expressions are required.</source>
          <target state="translated">）将诊断此类情况。还可以在需要常量表达式的地方对它们进行诊断。</target>
        </trans-unit>
        <trans-unit id="3d35521355b1a26451fecea1d0fdb8e861ae1a63" translate="yes" xml:space="preserve">
          <source>),</source>
          <target state="translated">),</target>
        </trans-unit>
        <trans-unit id="a44ea070f83a2ea8c508a0d94a9ffe92f0311a7b" translate="yes" xml:space="preserve">
          <source>), GCC emits a diagnostic stating that the option is not recognized. However, if the</source>
          <target state="translated">），GCC发出诊断信息，指出该选项未被识别。但是，如果</target>
        </trans-unit>
        <trans-unit id="d7b3ec32632cffbf1f22cdfe57cb8374a735a269" translate="yes" xml:space="preserve">
          <source>), a left margin is printed, showing line numbers. This option suppresses this left margin.</source>
          <target state="translated">），则打印出左边距，显示行号。此选项禁止显示此左边距。</target>
        </trans-unit>
        <trans-unit id="7416bd69e56d2b6037f51624d54028dd4e475dde" translate="yes" xml:space="preserve">
          <source>), a lot of functions that would otherwise not be considered for inlining by the compiler are investigated. To those functions, a different (more restrictive) limit compared to functions declared inline can be applied.</source>
          <target state="translated">），研究了许多编译器不会考虑内联的函数。对于那些函数，与内联声明的函数相比，可以应用不同的（更严格的）限制。</target>
        </trans-unit>
        <trans-unit id="4b95b8c10c47af6db88c3c798a9c8a9008ca4712" translate="yes" xml:space="preserve">
          <source>), and disabled by default when the GCC ABI is in use. If &lt;code&gt;CALLT&lt;/code&gt; instructions are being generated then the C preprocessor symbol &lt;code&gt;__V850_CALLT__&lt;/code&gt; is defined.</source>
          <target state="translated">），并且在使用GCC ABI时默认情况下处于禁用状态。如果正在生成 &lt;code&gt;CALLT&lt;/code&gt; 指令，则定义C预处理器符号 &lt;code&gt;__V850_CALLT__&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ffd387280782b84825cc54fe2e5fd6641710f278" translate="yes" xml:space="preserve">
          <source>), and the third is used when compiling C++.</source>
          <target state="translated">），第三个用于编译C ++。</target>
        </trans-unit>
        <trans-unit id="0b9246fb085de724853f192d16ca8ae6d5505d2a" translate="yes" xml:space="preserve">
          <source>), as programmers are notoriously bad at predicting how their programs actually perform. However, there are applications in which this data is hard to collect.</source>
          <target state="translated">），因为众所周知，程序员在预测其程序的实际执行情况时表现很差。但是，在某些应用程序中很难收集此数据。</target>
        </trans-unit>
        <trans-unit id="930d1fcc66826401b7d140d9007bf2954e451307" translate="yes" xml:space="preserve">
          <source>), diagnostics can label ranges of source code with pertinent information, such as the types of expressions:</source>
          <target state="translated">），诊断程序可以使用相关信息（例如表达式的类型）标记源代码范围：</target>
        </trans-unit>
        <trans-unit id="69723fbefd38a710c7dfc1692eb17c0f6c610d10" translate="yes" xml:space="preserve">
          <source>), dump a representation of the control flow graph suitable for viewing with GraphViz to</source>
          <target state="translated">），将适合用GraphViz查看的控制流程图的表示转储到</target>
        </trans-unit>
        <trans-unit id="80b590ade0ab221ac5e4234e6d4d4d05949c0482" translate="yes" xml:space="preserve">
          <source>), generate a __mcount_loc section that contains pointers to each profiling call. This is useful for automatically patching and out calls.</source>
          <target state="translated">），生成一个__mcount_loc节，其中包含指向每个性能分析调用的指针。这对于自动修补和拨出电话很有用。</target>
        </trans-unit>
        <trans-unit id="bfdc126f96f3450b0ed80efdbbcd69285411c30e" translate="yes" xml:space="preserve">
          <source>), generate the calls to the profiling functions as NOPs. This is useful when they should be patched in later dynamically. This is likely only useful together with</source>
          <target state="translated">），以NOP的形式生成对概要分析函数的调用。当以后应动态修补它们时，这很有用。这可能仅与</target>
        </trans-unit>
        <trans-unit id="bfef96d377a3855452441f358e957e550d74a331" translate="yes" xml:space="preserve">
          <source>), note that floating-point operations are not generated by GCC&amp;rsquo;s auto-vectorization pass unless</source>
          <target state="translated">），请注意，除非GCC的自动矢量化过程不生成浮点运算，除非</target>
        </trans-unit>
        <trans-unit id="a08d1f37fdd01ee828e85c675c534b9eb820d73e" translate="yes" xml:space="preserve">
          <source>), or</source>
          <target state="translated">）， 要么</target>
        </trans-unit>
        <trans-unit id="365febad52ba5ae4b17e37fcd01c2774f61022fd" translate="yes" xml:space="preserve">
          <source>), or an option for a later standard version, is used.</source>
          <target state="translated">），或使用更高标准版本的选项。</target>
        </trans-unit>
        <trans-unit id="70001bcdb1cc025e535a21f20ec6e5a609d02cd6" translate="yes" xml:space="preserve">
          <source>), or for test coverage analysis (</source>
          <target state="translated">），或用于测试覆盖率分析（</target>
        </trans-unit>
        <trans-unit id="7f71af6d58f5588e5885753f35af7b050e937149" translate="yes" xml:space="preserve">
          <source>), or separately specify</source>
          <target state="translated">），或分别指定</target>
        </trans-unit>
        <trans-unit id="19c045589af9c59852e87b276d0de6f5db11fc66" translate="yes" xml:space="preserve">
          <source>), or the</source>
          <target state="translated">）， 或者</target>
        </trans-unit>
        <trans-unit id="c1b08d7982a47273210539150a95f97d162673a4" translate="yes" xml:space="preserve">
          <source>), or to use the &lt;code&gt;gcov&lt;/code&gt; tool.</source>
          <target state="translated">），或使用 &lt;code&gt;gcov&lt;/code&gt; 工具。</target>
        </trans-unit>
        <trans-unit id="130bb4348d8251fa594f2be0aac3510a4118bbf1" translate="yes" xml:space="preserve">
          <source>), or when an optimization option such as</source>
          <target state="translated">）或优化选项（例如</target>
        </trans-unit>
        <trans-unit id="a68247a8af7280a00643481b52bb4ec6cbad2c43" translate="yes" xml:space="preserve">
          <source>), prologues and epilogues that have to save or restore a large number of registers are often shortened by using call to a special function in libgcc; this is referred to as a &lt;em&gt;millicode&lt;/em&gt; call. As these calls can pose performance issues, and/or cause linking issues when linking in a nonstandard way, this option is provided to turn on or off millicode call generation.</source>
          <target state="translated">），必须通过调用libgcc中的特殊函数来缩短必须保存或恢复大量寄存器的序言和结尾句；这称为&lt;em&gt;毫码&lt;/em&gt;调用。由于这些调用会导致性能问题，并且/或者在以非标准方式进行链接时会导致链接问题，因此提供了此选项来打开或关闭毫码调用生成。</target>
        </trans-unit>
        <trans-unit id="b2a7ba7846130c7a8e45123ef7d125b09931d28b" translate="yes" xml:space="preserve">
          <source>), put the profiling counter call before the prologue. Note: On x86 architectures the attribute &lt;code&gt;ms_hook_prologue&lt;/code&gt; isn&amp;rsquo;t possible at the moment for</source>
          <target state="translated">），将配置计数器调用置于序言之前。注意：在x86架构上， &lt;code&gt;ms_hook_prologue&lt;/code&gt; 无法使用ms_hook_prologue属性</target>
        </trans-unit>
        <trans-unit id="3d86644ae2fc8bedabf27beb5cf2316aa496946c" translate="yes" xml:space="preserve">
          <source>), so it is not available everywhere.</source>
          <target state="translated">），因此并非到处都有。</target>
        </trans-unit>
        <trans-unit id="775107e56917b7498a4a855146131dd87d5bd5fa" translate="yes" xml:space="preserve">
          <source>), so there is no need to modify the header file</source>
          <target state="translated">），因此无需修改头文件</target>
        </trans-unit>
        <trans-unit id="f69e7a52d8ea74d2d69c66bfa16bc63677452746" translate="yes" xml:space="preserve">
          <source>), the following additional functions are available for both 32-bit and 64-bit targets.</source>
          <target state="translated">），以下附加功能可用于32位和64位目标。</target>
        </trans-unit>
        <trans-unit id="9c38b1d1acd0f20276ad32aafe94d807c81016f3" translate="yes" xml:space="preserve">
          <source>), the following builtins are enabled.</source>
          <target state="translated">），则启用了以下内置函数。</target>
        </trans-unit>
        <trans-unit id="d18e82cc2e16d79a4313376dbe885b7ba013e3c7" translate="yes" xml:space="preserve">
          <source>), the functions &lt;code&gt;_exit&lt;/code&gt;, &lt;code&gt;alloca&lt;/code&gt;, &lt;code&gt;bcmp&lt;/code&gt;, &lt;code&gt;bzero&lt;/code&gt;, &lt;code&gt;dcgettext&lt;/code&gt;, &lt;code&gt;dgettext&lt;/code&gt;, &lt;code&gt;dremf&lt;/code&gt;, &lt;code&gt;dreml&lt;/code&gt;, &lt;code&gt;drem&lt;/code&gt;, &lt;code&gt;exp10f&lt;/code&gt;, &lt;code&gt;exp10l&lt;/code&gt;, &lt;code&gt;exp10&lt;/code&gt;, &lt;code&gt;ffsll&lt;/code&gt;, &lt;code&gt;ffsl&lt;/code&gt;, &lt;code&gt;ffs&lt;/code&gt;, &lt;code&gt;fprintf_unlocked&lt;/code&gt;, &lt;code&gt;fputs_unlocked&lt;/code&gt;, &lt;code&gt;gammaf&lt;/code&gt;, &lt;code&gt;gammal&lt;/code&gt;, &lt;code&gt;gamma&lt;/code&gt;, &lt;code&gt;gammaf_r&lt;/code&gt;, &lt;code&gt;gammal_r&lt;/code&gt;, &lt;code&gt;gamma_r&lt;/code&gt;, &lt;code&gt;gettext&lt;/code&gt;, &lt;code&gt;index&lt;/code&gt;, &lt;code&gt;isascii&lt;/code&gt;, &lt;code&gt;j0f&lt;/code&gt;, &lt;code&gt;j0l&lt;/code&gt;, &lt;code&gt;j0&lt;/code&gt;, &lt;code&gt;j1f&lt;/code&gt;, &lt;code&gt;j1l&lt;/code&gt;, &lt;code&gt;j1&lt;/code&gt;, &lt;code&gt;jnf&lt;/code&gt;, &lt;code&gt;jnl&lt;/code&gt;, &lt;code&gt;jn&lt;/code&gt;, &lt;code&gt;lgammaf_r&lt;/code&gt;, &lt;code&gt;lgammal_r&lt;/code&gt;, &lt;code&gt;lgamma_r&lt;/code&gt;, &lt;code&gt;mempcpy&lt;/code&gt;, &lt;code&gt;pow10f&lt;/code&gt;, &lt;code&gt;pow10l&lt;/code&gt;, &lt;code&gt;pow10&lt;/code&gt;, &lt;code&gt;printf_unlocked&lt;/code&gt;, &lt;code&gt;rindex&lt;/code&gt;, &lt;code&gt;scalbf&lt;/code&gt;, &lt;code&gt;scalbl&lt;/code&gt;, &lt;code&gt;scalb&lt;/code&gt;, &lt;code&gt;signbit&lt;/code&gt;, &lt;code&gt;signbitf&lt;/code&gt;, &lt;code&gt;signbitl&lt;/code&gt;, &lt;code&gt;signbitd32&lt;/code&gt;, &lt;code&gt;signbitd64&lt;/code&gt;, &lt;code&gt;signbitd128&lt;/code&gt;, &lt;code&gt;significandf&lt;/code&gt;, &lt;code&gt;significandl&lt;/code&gt;, &lt;code&gt;significand&lt;/code&gt;, &lt;code&gt;sincosf&lt;/code&gt;, &lt;code&gt;sincosl&lt;/code&gt;, &lt;code&gt;sincos&lt;/code&gt;, &lt;code&gt;stpcpy&lt;/code&gt;, &lt;code&gt;stpncpy&lt;/code&gt;, &lt;code&gt;strcasecmp&lt;/code&gt;, &lt;code&gt;strdup&lt;/code&gt;, &lt;code&gt;strfmon&lt;/code&gt;, &lt;code&gt;strncasecmp&lt;/code&gt;, &lt;code&gt;strndup&lt;/code&gt;, &lt;code&gt;strnlen&lt;/code&gt;, &lt;code&gt;toascii&lt;/code&gt;, &lt;code&gt;y0f&lt;/code&gt;, &lt;code&gt;y0l&lt;/code&gt;, &lt;code&gt;y0&lt;/code&gt;, &lt;code&gt;y1f&lt;/code&gt;, &lt;code&gt;y1l&lt;/code&gt;, &lt;code&gt;y1&lt;/code&gt;, &lt;code&gt;ynf&lt;/code&gt;, &lt;code&gt;ynl&lt;/code&gt; and &lt;code&gt;yn&lt;/code&gt; may be handled as built-in functions. All these functions have corresponding versions prefixed with &lt;code&gt;__builtin_&lt;/code&gt;, which may be used even in strict C90 mode.</source>
          <target state="translated">），则各功能 &lt;code&gt;_exit&lt;/code&gt; ， &lt;code&gt;alloca&lt;/code&gt; ， &lt;code&gt;bcmp&lt;/code&gt; ， &lt;code&gt;bzero&lt;/code&gt; ， &lt;code&gt;dcgettext&lt;/code&gt; ， &lt;code&gt;dgettext&lt;/code&gt; ， &lt;code&gt;dremf&lt;/code&gt; ， &lt;code&gt;dreml&lt;/code&gt; ， &lt;code&gt;drem&lt;/code&gt; ， &lt;code&gt;exp10f&lt;/code&gt; ， &lt;code&gt;exp10l&lt;/code&gt; ， &lt;code&gt;exp10&lt;/code&gt; ， &lt;code&gt;ffsll&lt;/code&gt; ， &lt;code&gt;ffsl&lt;/code&gt; ， &lt;code&gt;ffs&lt;/code&gt; ， &lt;code&gt;fprintf_unlocked&lt;/code&gt; ， &lt;code&gt;fputs_unlocked&lt;/code&gt; ， &lt;code&gt;gammaf&lt;/code&gt; ， &lt;code&gt;gammal&lt;/code&gt; ， &lt;code&gt;gamma&lt;/code&gt; ， &lt;code&gt;gammaf_r&lt;/code&gt; ， &lt;code&gt;gammal_r&lt;/code&gt; ， &lt;code&gt;gamma_r&lt;/code&gt; ， &lt;code&gt;gettext&lt;/code&gt; 的， &lt;code&gt;index&lt;/code&gt; ， &lt;code&gt;isascii&lt;/code&gt; ， &lt;code&gt;j0f&lt;/code&gt; ， &lt;code&gt;j0l&lt;/code&gt; ， &lt;code&gt;j0&lt;/code&gt; ， &lt;code&gt;j1f&lt;/code&gt; ， &lt;code&gt;j1l&lt;/code&gt; ， &lt;code&gt;j1&lt;/code&gt; ， &lt;code&gt;jnf&lt;/code&gt; ， &lt;code&gt;jnl&lt;/code&gt; ， &lt;code&gt;jn&lt;/code&gt; ， &lt;code&gt;lgammaf_r&lt;/code&gt; ， &lt;code&gt;lgammal_r&lt;/code&gt; ， &lt;code&gt;lgamma_r&lt;/code&gt; ， &lt;code&gt;mempcpy&lt;/code&gt; ， &lt;code&gt;pow10f&lt;/code&gt; ， &lt;code&gt;pow10l&lt;/code&gt; ， &lt;code&gt;pow10&lt;/code&gt; ， &lt;code&gt;printf_unlocked&lt;/code&gt; ， &lt;code&gt;rindex&lt;/code&gt; ， &lt;code&gt;scalbf&lt;/code&gt; ， &lt;code&gt;scalbl&lt;/code&gt; ， &lt;code&gt;scalb&lt;/code&gt; ， &lt;code&gt;signbit&lt;/code&gt; ， &lt;code&gt;signbitf&lt;/code&gt; ， &lt;code&gt;signbitl&lt;/code&gt; ， &lt;code&gt;signbitd32&lt;/code&gt; ， &lt;code&gt;signbitd64&lt;/code&gt; ， &lt;code&gt;signbitd128&lt;/code&gt; ， &lt;code&gt;significandf&lt;/code&gt; ， &lt;code&gt;significandl&lt;/code&gt; ， &lt;code&gt;significand&lt;/code&gt; ， &lt;code&gt;sincosf&lt;/code&gt; ， &lt;code&gt;sincosl&lt;/code&gt; ， &lt;code&gt;sincos&lt;/code&gt; ， &lt;code&gt;stpcpy&lt;/code&gt; ， &lt;code&gt;stpncpy&lt;/code&gt; ， &lt;code&gt;strcasecmp&lt;/code&gt; ， &lt;code&gt;strdup&lt;/code&gt; ， &lt;code&gt;strfmon&lt;/code&gt; ， &lt;code&gt;strncasecmp&lt;/code&gt; ， &lt;code&gt;strndup&lt;/code&gt; ， &lt;code&gt;strnlen&lt;/code&gt; ， &lt;code&gt;toascii&lt;/code&gt; 将， &lt;code&gt;y0f&lt;/code&gt; ， &lt;code&gt;y0l&lt;/code&gt; ， &lt;code&gt;y0&lt;/code&gt; ， &lt;code&gt;y1f&lt;/code&gt; ， &lt;code&gt;y1l&lt;/code&gt; ， &lt;code&gt;y1&lt;/code&gt; ， &lt;code&gt;ynf&lt;/code&gt; ， &lt;code&gt;ynl&lt;/code&gt; 和 &lt;code&gt;yn&lt;/code&gt; 可以作为内置函数来处理。所有这些功能都有对应的版本，其前缀为 &lt;code&gt;__builtin_&lt;/code&gt; ，即使在严格的C90模式下也可以使用。</target>
        </trans-unit>
        <trans-unit id="6a50cce50d0febfb570490b6c070e49f51ddec8b" translate="yes" xml:space="preserve">
          <source>), the object file name consists of the name of the source file with any suffix replaced with object file suffix and with any leading directory parts removed. If there are many included files then the rule is split into several lines using &amp;lsquo;</source>
          <target state="translated">），目标文件名由源文件名组成，后缀替换为目标文件后缀，并且前导目录部分已删除。如果包含许多文件，则使用'将规则分为几行</target>
        </trans-unit>
        <trans-unit id="3be8ddc45c8138713e4ff9590a244293505edbcb" translate="yes" xml:space="preserve">
          <source>), this switch only affects the &lt;code&gt;asm&lt;/code&gt; and &lt;code&gt;typeof&lt;/code&gt; keywords, since &lt;code&gt;inline&lt;/code&gt; is a standard keyword in ISO C99.</source>
          <target state="translated">），此开关仅影响 &lt;code&gt;asm&lt;/code&gt; 和 &lt;code&gt;typeof&lt;/code&gt; 关键字，因为 &lt;code&gt;inline&lt;/code&gt; 是ISO C99中的标准关键字。</target>
        </trans-unit>
        <trans-unit id="ad6667c074281d3be9d0a577eef269311cbfb9cd" translate="yes" xml:space="preserve">
          <source>), this warning is enabled by default and it is made into an error by</source>
          <target state="translated">），则默认情况下启用此警告，并通过以下方式将其变为错误</target>
        </trans-unit>
        <trans-unit id="d41919407ce8f78b6cd89401353e39179fec9ab2" translate="yes" xml:space="preserve">
          <source>).</source>
          <target state="translated">).</target>
        </trans-unit>
        <trans-unit id="a8da6016236d20b9786efd699df04e211b746377" translate="yes" xml:space="preserve">
          <source>). Aligning variables on 32-bit boundaries produces code that runs somewhat faster on processors with 32-bit busses at the expense of more memory.</source>
          <target state="translated">）。在32位边界上对齐变量会产生代码，这些代码在具有32位总线的处理器上的运行速度稍快，但会占用更多内存。</target>
        </trans-unit>
        <trans-unit id="010b7cdc441046d989a9ea1b15cc97865b1b6636" translate="yes" xml:space="preserve">
          <source>). Each object file&amp;rsquo;s &lt;var&gt;auxname&lt;/var&gt; is generated from the name of the output file, if explicitly specified and it is not the final executable, otherwise it is the basename of the source file. In both cases any suffix is removed (e.g.</source>
          <target state="translated">）。每个目标文件的 &lt;var&gt;auxname&lt;/var&gt; 由输出文件的名称生成（如果已明确指定），它不是最终的可执行文件，否则它是源文件的基本名称。在这两种情况下，都删除了任何后缀（例如，</target>
        </trans-unit>
        <trans-unit id="6634ed39eb6b3c05c70ac15c64888e1587ddc721" translate="yes" xml:space="preserve">
          <source>). Enabled at levels</source>
          <target state="translated">）。在级别启用</target>
        </trans-unit>
        <trans-unit id="015eb4d6e320fdcb40dde6916b75b927e7ad003c" translate="yes" xml:space="preserve">
          <source>). For example, the default is &amp;ldquo;off&amp;rdquo; for</source>
          <target state="translated">）。例如，默认设置为&amp;ldquo;关&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="c13df8815400fcd95d3934f417b07b1b26f46a2a" translate="yes" xml:space="preserve">
          <source>). If the file that contains a function definition matches with one of &lt;var&gt;file&lt;/var&gt;, then that function is not instrumented. The match is done on substrings: if the &lt;var&gt;file&lt;/var&gt; parameter is a substring of the file name, it is considered to be a match.</source>
          <target state="translated">）。如果包含函数定义的 &lt;var&gt;file&lt;/var&gt; 与file之一匹配，则不检测该函数。匹配是在子字符串上完成的：如果 &lt;var&gt;file&lt;/var&gt; 参数是文件名的子字符串，则认为是匹配项。</target>
        </trans-unit>
        <trans-unit id="2f212a70a9e377734872d88e49501c0700d10f3e" translate="yes" xml:space="preserve">
          <source>). Note that while the throughput of the sequence is generally higher than the throughput of the non-reciprocal instruction, the precision of the sequence can be decreased by up to 2 ulp (i.e. the inverse of 1.0 equals 0.99999994) for reciprocal square roots.</source>
          <target state="translated">）。请注意，虽然序列的吞吐量通常比非互易指令的吞吐量高，但对于平方根倒数，序列的精度最多可以降低2 ulp（即1.0的倒数等于0.99999994）。</target>
        </trans-unit>
        <trans-unit id="9b164e85e3a5e96ef823e8a23d64cc8f7c10af4b" translate="yes" xml:space="preserve">
          <source>). Only a few systems support this option.</source>
          <target state="translated">）。只有少数系统支持此选项。</target>
        </trans-unit>
        <trans-unit id="55e185f80b2ff3ddce6d7f09c20e1548417dee24" translate="yes" xml:space="preserve">
          <source>). PowerPC with</source>
          <target state="translated">）。PowerPC与</target>
        </trans-unit>
        <trans-unit id="dfb510fceebf36036dd894fdfbce120124fc5b07" translate="yes" xml:space="preserve">
          <source>). Prefixes are optional, and &amp;lsquo;</source>
          <target state="translated">）。前缀是可选的，而'</target>
        </trans-unit>
        <trans-unit id="6d10a247e2259eeac52b647017863fe87f5b993d" translate="yes" xml:space="preserve">
          <source>). See &lt;a href=&quot;cross_002dprofiling#Cross_002dprofiling&quot;&gt;Cross-profiling&lt;/a&gt;.</source>
          <target state="translated">）。请参阅&lt;a href=&quot;cross_002dprofiling#Cross_002dprofiling&quot;&gt;交叉分析&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="acde331edf16a3ec956afda9f9ff904e45d22d8e" translate="yes" xml:space="preserve">
          <source>). Similarly, Objective-C++ compilations may use C++-specific options (e.g.,</source>
          <target state="translated">）。同样，Objective-C ++编译可能会使用特定于C ++的选项（例如，</target>
        </trans-unit>
        <trans-unit id="e87d6a9687ee8b259d715c98478384173b51aa0b" translate="yes" xml:space="preserve">
          <source>). The FPXX extension mandates that all code must execute correctly when run using 32-bit or 64-bit registers. The code can be interlinked with either FP32 or FP64, but not both. The FP64A extension is similar to the FP64 extension but forbids the use of odd-numbered single-precision registers. This can be used in conjunction with the &lt;code&gt;FRE&lt;/code&gt; mode of FPUs in MIPS32R5 processors and allows both FP32 and FP64A code to interlink and run in the same process without changing FPU modes.</source>
          <target state="translated">）。FPXX扩展要求在使用32位或64位寄存器运行时，所有代码必须正确执行。该代码可以与FP32或FP64互连，但不能两者都互连。FP64A扩展与FP64扩展类似，但禁止使用奇数单精度寄存器。可以将其与MIPS32R5处理器中FPU 的 &lt;code&gt;FRE&lt;/code&gt; 模式结合使用，并允许FP32和FP64A代码相互链接并以相同的进程运行，而无需更改FPU模式。</target>
        </trans-unit>
        <trans-unit id="69623fc03f16d40bf923fc859f6aee6a12d3da3b" translate="yes" xml:space="preserve">
          <source>). The ISO C99 keyword &lt;code&gt;restrict&lt;/code&gt; is only available when</source>
          <target state="translated">）。ISO C99关键字 &lt;code&gt;restrict&lt;/code&gt; 仅在以下情况下可用</target>
        </trans-unit>
        <trans-unit id="58c4c654ef7ee136377ef2cafd1f5c6d8c816f58" translate="yes" xml:space="preserve">
          <source>). The number of available registers reserved for some other purposes is given by this parameter. Default of the parameter is the best found from numerous experiments.</source>
          <target state="translated">）。该参数给出了为其他目的保留的可用寄存器的数量。参数的默认值是从大量实验中得出的最佳值。</target>
        </trans-unit>
        <trans-unit id="13df10237921e86399697b2a5237e0144f1e89b4" translate="yes" xml:space="preserve">
          <source>). These heuristics are based on the control flow graph. If some branch probabilities are specified by &lt;code&gt;__builtin_expect&lt;/code&gt;, then the heuristics are used to guess branch probabilities for the rest of the control flow graph, taking the &lt;code&gt;__builtin_expect&lt;/code&gt; info into account. The interactions between the heuristics and &lt;code&gt;__builtin_expect&lt;/code&gt; can be complex, and in some cases, it may be useful to disable the heuristics so that the effects of &lt;code&gt;__builtin_expect&lt;/code&gt; are easier to understand.</source>
          <target state="translated">）。这些启发式方法基于控制流程图。如果 &lt;code&gt;__builtin_expect&lt;/code&gt; 指定了一些分支概率，则在考虑 &lt;code&gt;__builtin_expect&lt;/code&gt; 信息的情况下，将使用启发式方法来猜测其余控制流程图的分支概率。启发式方法和 &lt;code&gt;__builtin_expect&lt;/code&gt; 之间的交互可能很复杂，在某些情况下，禁用启发式方法可能很有用，以便使 &lt;code&gt;__builtin_expect&lt;/code&gt; 的效果更容易理解。</target>
        </trans-unit>
        <trans-unit id="2023f757a7ebb820a975281ad23d01e574d8eb79" translate="yes" xml:space="preserve">
          <source>). These string functions are described separately in order to group the descriptions closer to the function prototypes:</source>
          <target state="translated">）。这些字符串函数将单独描述，以便将描述分组到更接近函数原型的位置：</target>
        </trans-unit>
        <trans-unit id="751af366ba575d9d108cd1b4000d9ad97eaf52b1" translate="yes" xml:space="preserve">
          <source>). This flag is enabled by default at</source>
          <target state="translated">）。默认情况下，此标志处于启用状态</target>
        </trans-unit>
        <trans-unit id="389d320cf2fd3c5618d226a643e286a8173a0850" translate="yes" xml:space="preserve">
          <source>). This option implies that the sign of a zero result isn&amp;rsquo;t significant.</source>
          <target state="translated">）。此选项表示结果为零的符号不重要。</target>
        </trans-unit>
        <trans-unit id="40cd47fb3faf85196691543d50eeceb26496714f" translate="yes" xml:space="preserve">
          <source>). Valid values are 0 (no compression) to 9 (maximum compression). Values outside this range are clamped to either 0 or 9. If the option is not given, a default balanced compression setting is used.</source>
          <target state="translated">）。有效值为0（无压缩）至9（最大压缩）。超出此范围的值将被钳制为0或9。如果未提供该选项，则使用默认的平衡压缩设置。</target>
        </trans-unit>
        <trans-unit id="e275b6410662c14eec9fb78d9ba464e2a4ade618" translate="yes" xml:space="preserve">
          <source>). Where this option is used in conjunction with</source>
          <target state="translated">）。该选项与</target>
        </trans-unit>
        <trans-unit id="df74c471c52df8eca98a9d8f78604ccd98630755" translate="yes" xml:space="preserve">
          <source>). You must use this option when compiling the source files you want data about, and you must also use it when linking.</source>
          <target state="translated">）。编译要用于数据的源文件时，必须使用此选项，并且在链接时也必须使用它。</target>
        </trans-unit>
        <trans-unit id="67f69ef0c07d30c0476bd886f60193097cb47f3e" translate="yes" xml:space="preserve">
          <source>):</source>
          <target state="translated">):</target>
        </trans-unit>
        <trans-unit id="59f6dde452eff2a7dd073297be960fa570d00ed5" translate="yes" xml:space="preserve">
          <source>): Should have very few false positives and few false negatives. Slightly slower than levels 1 or 2 when optimization is enabled. Takes care of the common pun+dereference pattern in the front end: &lt;code&gt;*(int*)&amp;amp;some_float&lt;/code&gt;. If optimization is enabled, it also runs in the back end, where it deals with multiple statement cases using flow-sensitive points-to information. Only warns when the converted pointer is dereferenced. Does not warn about incomplete types.</source>
          <target state="translated">）：应该只有很少的误报和很少的误报。启用优化后，速度比级别1或2稍慢。照顾前端的普通双关+引用模式： &lt;code&gt;*(int*)&amp;amp;some_float&lt;/code&gt; 。如果启用了优化，它还将在后端运行，在该处使用流敏感的指向信息处理多个语句案例。仅在取消引用转换后的指针时警告。不警告类型不完整。</target>
        </trans-unit>
        <trans-unit id="68b94bb7c80d730c9c375c35b16cf1f64733269c" translate="yes" xml:space="preserve">
          <source>*-*-linux-*android*</source>
          <target state="translated">*-*-linux-*android*</target>
        </trans-unit>
        <trans-unit id="e2b642adbe68e3ea2f08e73036fb686d4e5ecf65" translate="yes" xml:space="preserve">
          <source>*-*-linux-*musl*</source>
          <target state="translated">*-*-linux-*musl*</target>
        </trans-unit>
        <trans-unit id="7d44bb0c460c86f6ed20b427ab87b20e89c94940" translate="yes" xml:space="preserve">
          <source>*-*-linux-*uclibc*</source>
          <target state="translated">*-*-linux-*uclibc*</target>
        </trans-unit>
        <trans-unit id="feb21874a106e7fdaf91fadac43af22b0bea36ab" translate="yes" xml:space="preserve">
          <source>+&lt;var&gt;extension&lt;/var&gt;</source>
          <target state="translated">+&lt;var&gt;extension&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="dad15bd181e6b2d074037dd769cb892a10dcffa3" translate="yes" xml:space="preserve">
          <source>+Accept TypeMismatch</source>
          <target state="translated">+接受类型不匹配</target>
        </trans-unit>
        <trans-unit id="0245508ac3119cf85af276774b536b3c6eb57300" translate="yes" xml:space="preserve">
          <source>+crc</source>
          <target state="translated">+crc</target>
        </trans-unit>
        <trans-unit id="172554656681a361758276db1e3c43b8560fd73f" translate="yes" xml:space="preserve">
          <source>+crypto</source>
          <target state="translated">+crypto</target>
        </trans-unit>
        <trans-unit id="f593a9cfed56aa8c5b2310dadc6602a92650e09b" translate="yes" xml:space="preserve">
          <source>+dotprod</source>
          <target state="translated">+dotprod</target>
        </trans-unit>
        <trans-unit id="c8958e48ef48898eea0aeee1b68eea46b1f26e18" translate="yes" xml:space="preserve">
          <source>+dsp</source>
          <target state="translated">+dsp</target>
        </trans-unit>
        <trans-unit id="9b8ca1a7ee75f7f450c6bed427a6d3f35d9847c6" translate="yes" xml:space="preserve">
          <source>+fp</source>
          <target state="translated">+fp</target>
        </trans-unit>
        <trans-unit id="12e90b41b5bbb85590517841a4eb99cb4b8a9251" translate="yes" xml:space="preserve">
          <source>+fp.dp</source>
          <target state="translated">+fp.dp</target>
        </trans-unit>
        <trans-unit id="61e1348f2cad78b911fccf2797471ad0d18e2b02" translate="yes" xml:space="preserve">
          <source>+fp.sp</source>
          <target state="translated">+fp.sp</target>
        </trans-unit>
        <trans-unit id="3c19a7766116f6a5d109b2fea2da2b1d277f1660" translate="yes" xml:space="preserve">
          <source>+fp16</source>
          <target state="translated">+fp16</target>
        </trans-unit>
        <trans-unit id="e36321f6f8d57d187d3bc885adca3f8e1fec74a2" translate="yes" xml:space="preserve">
          <source>+fp16fml</source>
          <target state="translated">+fp16fml</target>
        </trans-unit>
        <trans-unit id="9a28b8bd1ff670d2e1d8a6d041e8af642964b47f" translate="yes" xml:space="preserve">
          <source>+fpv5</source>
          <target state="translated">+fpv5</target>
        </trans-unit>
        <trans-unit id="6ce605d1bb51ed3fd5a75aed8a1d4c5fce2fbd02" translate="yes" xml:space="preserve">
          <source>+idiv</source>
          <target state="translated">+idiv</target>
        </trans-unit>
        <trans-unit id="298d552ef880bc40f53842de04e0129e8d4cbb7f" translate="yes" xml:space="preserve">
          <source>+k</source>
          <target state="translated">+k</target>
        </trans-unit>
        <trans-unit id="6bb6aad86a880aa66a62f4e67215e2922bf4ed3b" translate="yes" xml:space="preserve">
          <source>+lse</source>
          <target state="translated">+lse</target>
        </trans-unit>
        <trans-unit id="d3da1bfe2d64d68808b0b119209078764008b84e" translate="yes" xml:space="preserve">
          <source>+mp</source>
          <target state="translated">+mp</target>
        </trans-unit>
        <trans-unit id="c660acf5e4ec641d8c613d3f784064715b71970f" translate="yes" xml:space="preserve">
          <source>+neon</source>
          <target state="translated">+neon</target>
        </trans-unit>
        <trans-unit id="8aaddfb72d070d6159cd823fe6182666f17c4053" translate="yes" xml:space="preserve">
          <source>+neon-fp16</source>
          <target state="translated">+neon-fp16</target>
        </trans-unit>
        <trans-unit id="435f84a487ef70561af83eda3e1d7dd3d2436c1c" translate="yes" xml:space="preserve">
          <source>+neon-vfpv3</source>
          <target state="translated">+neon-vfpv3</target>
        </trans-unit>
        <trans-unit id="0ac1405d972e784cdc766f54e29dbf5ab415cbc9" translate="yes" xml:space="preserve">
          <source>+neon-vfpv4</source>
          <target state="translated">+neon-vfpv4</target>
        </trans-unit>
        <trans-unit id="718b50d5dae644e3a124de95caf9ccb46a386417" translate="yes" xml:space="preserve">
          <source>+no&amp;hellip;</source>
          <target state="translated">+no&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="ce8806c0fb02e176c7399646baa9a9c06a0ab272" translate="yes" xml:space="preserve">
          <source>+nocrypto</source>
          <target state="translated">+nocrypto</target>
        </trans-unit>
        <trans-unit id="c75685c50bbed60e49ef2d3d9ba5984a9087c460" translate="yes" xml:space="preserve">
          <source>+nodsp</source>
          <target state="translated">+nodsp</target>
        </trans-unit>
        <trans-unit id="bdad84fda97226b66790281c1f74f43e25c5dc2a" translate="yes" xml:space="preserve">
          <source>+nofp</source>
          <target state="translated">+nofp</target>
        </trans-unit>
        <trans-unit id="32d14ccb6dff53c000b7d0f3c1e570e199920277" translate="yes" xml:space="preserve">
          <source>+nofp.dp</source>
          <target state="translated">+nofp.dp</target>
        </trans-unit>
        <trans-unit id="70443bdbf953fd7737440bd1233875efade5e298" translate="yes" xml:space="preserve">
          <source>+noidiv</source>
          <target state="translated">+noidiv</target>
        </trans-unit>
        <trans-unit id="a12c1141d2021a4ae5103e34f0cb2e216132188d" translate="yes" xml:space="preserve">
          <source>+nosimd</source>
          <target state="translated">+nosimd</target>
        </trans-unit>
        <trans-unit id="4563e8723e89439d475e61672e05fb7dae35dfaf" translate="yes" xml:space="preserve">
          <source>+predres</source>
          <target state="translated">+predres</target>
        </trans-unit>
        <trans-unit id="612586060d4d1d6ca16cb6e8342ccd8cd466f161" translate="yes" xml:space="preserve">
          <source>+rdma</source>
          <target state="translated">+rdma</target>
        </trans-unit>
        <trans-unit id="50c84004301c1955521d1c5085a4e86bef9ad37a" translate="yes" xml:space="preserve">
          <source>+sb</source>
          <target state="translated">+sb</target>
        </trans-unit>
        <trans-unit id="523966f68f6b5229e9feb691969161ec915c6cc9" translate="yes" xml:space="preserve">
          <source>+sec</source>
          <target state="translated">+sec</target>
        </trans-unit>
        <trans-unit id="572761324c6cd16274d84a93b069f3f7bc8d622d" translate="yes" xml:space="preserve">
          <source>+simd</source>
          <target state="translated">+simd</target>
        </trans-unit>
        <trans-unit id="80493528a9034722885b8e9132606dd4336778f5" translate="yes" xml:space="preserve">
          <source>+vfpv2</source>
          <target state="translated">+vfpv2</target>
        </trans-unit>
        <trans-unit id="5e4ee72860cab166418a73e306a0921f5e6d4794" translate="yes" xml:space="preserve">
          <source>+vfpv3</source>
          <target state="translated">+vfpv3</target>
        </trans-unit>
        <trans-unit id="96f6116b06a306c4fe8edf91f7e6e981c085f418" translate="yes" xml:space="preserve">
          <source>+vfpv3-d16</source>
          <target state="translated">+vfpv3-d16</target>
        </trans-unit>
        <trans-unit id="efba751c5beb6a30957dc58f177e360fdd017763" translate="yes" xml:space="preserve">
          <source>+vfpv3-d16-fp16</source>
          <target state="translated">+vfpv3-d16-fp16</target>
        </trans-unit>
        <trans-unit id="2a14509c282a0dde2ff082ee3afda5e8f9d14e09" translate="yes" xml:space="preserve">
          <source>+vfpv3-fp16</source>
          <target state="translated">+vfpv3-fp16</target>
        </trans-unit>
        <trans-unit id="9b899bf3010c596d9deefcc3943f2e83ea96543a" translate="yes" xml:space="preserve">
          <source>+vfpv3xd</source>
          <target state="translated">+vfpv3xd</target>
        </trans-unit>
        <trans-unit id="e6dd5253fa77b609bac67127de01e8db18c70caa" translate="yes" xml:space="preserve">
          <source>+vfpv3xd-d16-fp16</source>
          <target state="translated">+vfpv3xd-d16-fp16</target>
        </trans-unit>
        <trans-unit id="1c9a97c629a2f14166d7a967313c8b311aaf24b4" translate="yes" xml:space="preserve">
          <source>+vfpv4</source>
          <target state="translated">+vfpv4</target>
        </trans-unit>
        <trans-unit id="f0753fa13c2da206656b61cc9e300da99d614fad" translate="yes" xml:space="preserve">
          <source>+vfpv4-d16</source>
          <target state="translated">+vfpv4-d16</target>
        </trans-unit>
        <trans-unit id="5c10b5b2cd673a0616d529aa5234b12ee7153808" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="translated">,</target>
        </trans-unit>
        <trans-unit id="0ed174b8649b3795e9bab6e28051e111ece3d5a1" translate="yes" xml:space="preserve">
          <source>, &amp;hellip;), and outputting DWARF 2 debug information at the normal level.</source>
          <target state="translated">，&amp;hellip;），然后以正常级别输出DWARF 2调试信息。</target>
        </trans-unit>
        <trans-unit id="1e892a0963fbddbf57a2e50e77e246f310118c85" translate="yes" xml:space="preserve">
          <source>, &amp;hellip;), debugging information (</source>
          <target state="translated">，&amp;hellip;），调试信息（</target>
        </trans-unit>
        <trans-unit id="9ce3d91211464125b1a2c5c681940a8dbbed2997" translate="yes" xml:space="preserve">
          <source>, &amp;hellip;).</source>
          <target state="translated">，&amp;hellip;）。</target>
        </trans-unit>
        <trans-unit id="3637dc66fe00abd3e693687e7b9b0ff7e487e998" translate="yes" xml:space="preserve">
          <source>, ...).</source>
          <target state="translated">，...）。</target>
        </trans-unit>
        <trans-unit id="e8373b7b9cf04295923fb7dd353f8cd016c13806" translate="yes" xml:space="preserve">
          <source>, &lt;code&gt;dbg_cnt(dce)&lt;/code&gt; returns true only for third and fourth invocation. For &lt;code&gt;dbg_cnt(tail_call)&lt;/code&gt; true is returned for first 10 invocations.</source>
          <target state="translated">， &lt;code&gt;dbg_cnt(dce)&lt;/code&gt; 仅对第三和第四次调用返回true。对于 &lt;code&gt;dbg_cnt(tail_call)&lt;/code&gt; ，前10次调用返回true。</target>
        </trans-unit>
        <trans-unit id="f7d0cb298b65dc1dd5a8ad63030abc502d65e4a5" translate="yes" xml:space="preserve">
          <source>, &lt;var&gt;charset&lt;/var&gt; can be any encoding supported by the system&amp;rsquo;s &lt;code&gt;iconv&lt;/code&gt; library routine; however, you will have problems with encodings that do not fit exactly in &lt;code&gt;wchar_t&lt;/code&gt;.</source>
          <target state="translated">， &lt;var&gt;charset&lt;/var&gt; 可以由系统支持的任何编码 &lt;code&gt;iconv&lt;/code&gt; 库程序; 但是，您将遇到与 &lt;code&gt;wchar_t&lt;/code&gt; 不完全匹配的编码问题。</target>
        </trans-unit>
        <trans-unit id="dacad0f81d1e260f88c4393b4848193fe16ac2b7" translate="yes" xml:space="preserve">
          <source>, &lt;var&gt;max_size&lt;/var&gt; specifies the max byte size with which inline algorithm &lt;var&gt;alg&lt;/var&gt; is allowed. For the last triplet, the &lt;var&gt;max_size&lt;/var&gt; must be &lt;code&gt;-1&lt;/code&gt;. The &lt;var&gt;max_size&lt;/var&gt; of the triplets in the list must be specified in increasing order. The minimal byte size for &lt;var&gt;alg&lt;/var&gt; is &lt;code&gt;0&lt;/code&gt; for the first triplet and &lt;code&gt;&lt;var&gt;max_size&lt;/var&gt; + 1&lt;/code&gt; of the preceding range.</source>
          <target state="translated">， &lt;var&gt;max_size&lt;/var&gt; 指定允许使用内联算法 &lt;var&gt;alg&lt;/var&gt; 的最大字节大小。对于最后一个三元组， &lt;var&gt;max_size&lt;/var&gt; 必须为 &lt;code&gt;-1&lt;/code&gt; 。列表中三元组的 &lt;var&gt;max_size&lt;/var&gt; 必须按升序指定。为最小字节大小 &lt;var&gt;alg&lt;/var&gt; 是 &lt;code&gt;0&lt;/code&gt; 为第一三线态和 &lt;code&gt;&lt;var&gt;max_size&lt;/var&gt; + 1&lt;/code&gt; 前述范围的。</target>
        </trans-unit>
        <trans-unit id="f9690121c5628f2c0341ffa6132d72efc83193d9" translate="yes" xml:space="preserve">
          <source>, GCC assumes that doubles have 8-byte alignment only if they are contained in another type, or if they have an absolute address. Otherwise, it assumes they have 4-byte alignment. Specifying this option avoids some rare compatibility problems with code generated by other compilers. It is not the default because it results in a performance loss, especially for floating-point code.</source>
          <target state="translated">，GCC假定双精度仅在包含在另一种类型中或具有绝对地址时才具有8字节对齐。否则，假定它们具有4字节对齐。指定此选项可避免与其他编译器生成的代码出现罕见的兼容性问题。它不是默认值，因为它会导致性能下降，尤其是对于浮点代码。</target>
        </trans-unit>
        <trans-unit id="91d079c553ba54a17781d7096ca0de1c9399ce98" translate="yes" xml:space="preserve">
          <source>, GCC assumes that the stack pointer, and frame pointer if present, are offset by -2047 which must be added back when making stack frame references. This is the default in 64-bit mode. Otherwise, assume no such offset is present.</source>
          <target state="translated">，GCC假定堆栈指针和帧指针（如果存在）偏移-2047，在进行堆栈帧引用时必须将其重新添加。这是64位模式下的默认设置。否则，假定不存在这种偏移。</target>
        </trans-unit>
        <trans-unit id="32d107fd8d29cc4e25c76f6bc2b8616923401802" translate="yes" xml:space="preserve">
          <source>, GCC defaults to whichever convention is standard for the target. If there is no standard convention, GCC defaults to</source>
          <target state="translated">，GCC会默认使用该目标的标准约定。如果没有标准约定，则GCC默认为</target>
        </trans-unit>
        <trans-unit id="a2827008d6317586583dcd9e0510d8d39bdf6108" translate="yes" xml:space="preserve">
          <source>, GCC generates code for the GR6 variant of the Visium architecture. The only difference from GR5 code is that the compiler will generate block move instructions.</source>
          <target state="translated">，GCC为Visium体系结构的GR6变体生成代码。与GR5代码的唯一区别是编译器将生成块移动指令。</target>
        </trans-unit>
        <trans-unit id="682c348ce24eeeb97abc0387035df3b607a2756f" translate="yes" xml:space="preserve">
          <source>, GCC generates code for the SPARC-V8+ ABI. The difference from the V8 ABI is that the global and out registers are considered 64 bits wide. This is enabled by default on Solaris in 32-bit mode for all SPARC-V9 processors.</source>
          <target state="translated">，GCC会为SPARC-V8 + ABI生成代码。与V8 ABI的区别在于全局寄存器和out寄存器被认为是64位宽。对于所有SPARC-V9处理器，默认情况下在Solaris上以32位模式启用此功能。</target>
        </trans-unit>
        <trans-unit id="5be22faf79e798733855688a8ebf060dd61b85ec" translate="yes" xml:space="preserve">
          <source>, GCC generates code for the SPARClet variant of the SPARC architecture. This adds the integer multiply, multiply/accumulate, integer divide step and scan (&lt;code&gt;ffs&lt;/code&gt;) instructions which exist in SPARClet but not in SPARC-V7. With</source>
          <target state="translated">，GCC为SPARC体系结构的SPARClet变体生成代码。这将添加SPARClet中存在但SPARC-V7中不存在的整数乘法，乘法/累加，整数除法步长和扫描（ &lt;code&gt;ffs&lt;/code&gt; ）指令。用</target>
        </trans-unit>
        <trans-unit id="246eb4b1205aee50122a8441dd133501e413f7d4" translate="yes" xml:space="preserve">
          <source>, GCC generates code for the SPARClite variant of the SPARC architecture. This adds the integer multiply, integer divide step and scan (&lt;code&gt;ffs&lt;/code&gt;) instructions which exist in SPARClite but not in SPARC-V7. With</source>
          <target state="translated">，GCC为SPARC体系结构的SPARClite变体生成代码。这将添加SPARClite中存在但SPARC-V7中不存在的整数乘法，整数除法步长和扫描（ &lt;code&gt;ffs&lt;/code&gt; ）指令。用</target>
        </trans-unit>
        <trans-unit id="5ea3b70bf876bbac6bd786d282b058e0a48e593e" translate="yes" xml:space="preserve">
          <source>, GCC generates code for the V8 variant of the SPARC architecture. The only difference from V7 code is that the compiler emits the integer multiply and integer divide instructions which exist in SPARC-V8 but not in SPARC-V7. With</source>
          <target state="translated">，GCC为SPARC体系结构的V8变体生成代码。与V7代码的唯一区别在于，编译器会发出SPARC-V8中存在的整数乘法和整数除法指令，但SPARC-V7中不存在。用</target>
        </trans-unit>
        <trans-unit id="d35cc98b9577afb980907076a54d84b7ee83c49b" translate="yes" xml:space="preserve">
          <source>, GCC generates code for the V9 variant of the SPARC architecture. This adds 64-bit integer and floating-point move instructions, 3 additional floating-point condition code registers and conditional move instructions. With</source>
          <target state="translated">，GCC为SPARC体系结构的V9变体生成代码。这将添加64位整数和浮点移动指令，3个其他浮点条件代码寄存器和条件移动指令。用</target>
        </trans-unit>
        <trans-unit id="6f52fa8335df2d3bb842c72b269dbd31476ebe55" translate="yes" xml:space="preserve">
          <source>, GCC generates code that takes advantage of the Floating-point Multiply Single to Double (FsMULd) instruction. The default is</source>
          <target state="translated">，GCC生成的代码利用了浮点乘以单到双（FsMULd）指令。默认是</target>
        </trans-unit>
        <trans-unit id="1475f8fe9a2a4d3740626e73d0883412752df34d" translate="yes" xml:space="preserve">
          <source>, GCC generates code that takes advantage of the UltraSPARC Compare-and-Branch-on-Condition instructions. The default is</source>
          <target state="translated">，GCC生成利用UltraSPARC条件比较和分支指令的代码。默认是</target>
        </trans-unit>
        <trans-unit id="a1d737bb2dcd98336bc50c965bd13e7436a7dd37" translate="yes" xml:space="preserve">
          <source>, GCC generates code that takes advantage of the UltraSPARC Fused Multiply-Add Floating-point instructions. The default is</source>
          <target state="translated">，GCC生成利用UltraSPARC融合乘加浮点指令的代码。默认是</target>
        </trans-unit>
        <trans-unit id="d23766f73710826fb3194882a59b3abf6466a524" translate="yes" xml:space="preserve">
          <source>, GCC generates code that takes advantage of the UltraSPARC Population Count instruction. The default is</source>
          <target state="translated">，GCC生成利用UltraSPARC填充计数指令的代码。默认是</target>
        </trans-unit>
        <trans-unit id="ef6c463793daa79795e5bac108508d4c88d9bbdb" translate="yes" xml:space="preserve">
          <source>, GCC generates code that takes advantage of the UltraSPARC Subtract-Extended-with-Carry instruction. The default is</source>
          <target state="translated">，GCC生成的代码利用了UltraSPARC减载扩展携带指令。默认是</target>
        </trans-unit>
        <trans-unit id="3ca4c46815c6d5d35fbb9551d58365f816e41479" translate="yes" xml:space="preserve">
          <source>, GCC generates code that takes advantage of the UltraSPARC Visual Instruction Set extensions. The default is</source>
          <target state="translated">，GCC生成利用UltraSPARC可视指令集扩展的代码。默认是</target>
        </trans-unit>
        <trans-unit id="cd5db5aaa75f0186e12c2a3c5260dce368624e0c" translate="yes" xml:space="preserve">
          <source>, GCC generates code that takes advantage of version 2.0 of the UltraSPARC Visual Instruction Set extensions. The default is</source>
          <target state="translated">，GCC生成的代码利用了UltraSPARC Visual Instruction Set扩展的2.0版。默认是</target>
        </trans-unit>
        <trans-unit id="2806fca697379e7dde9c87801608b121305c7d2b" translate="yes" xml:space="preserve">
          <source>, GCC generates code that takes advantage of version 3.0 of the UltraSPARC Visual Instruction Set extensions. The default is</source>
          <target state="translated">，GCC生成的代码利用了UltraSPARC Visual Instruction Set扩展的3.0版。默认是</target>
        </trans-unit>
        <trans-unit id="ba290b8a2744f98c0c8c96a2dd45eb3cf029cb39" translate="yes" xml:space="preserve">
          <source>, GCC generates code that takes advantage of version 4.0 of the UltraSPARC Visual Instruction Set extensions, plus the additional VIS instructions introduced in the Oracle SPARC Architecture 2017. The default is</source>
          <target state="translated">，GCC生成的代码利用了UltraSPARC可视指令集扩展版4.0，以及Oracle SPARC Architecture 2017中引入的其他VIS指令。默认值为</target>
        </trans-unit>
        <trans-unit id="18714e7f456c9768e056f11bedffefc81537d103" translate="yes" xml:space="preserve">
          <source>, GCC generates code that takes advantage of version 4.0 of the UltraSPARC Visual Instruction Set extensions. The default is</source>
          <target state="translated">，GCC生成的代码利用了UltraSPARC Visual Instruction Set扩展的4.0版。默认是</target>
        </trans-unit>
        <trans-unit id="18afbe646df06ef482b90a4ea8101ba75a14fb36" translate="yes" xml:space="preserve">
          <source>, GCC links your program against startup code that assumes a C99-style interface to &lt;code&gt;main&lt;/code&gt;, including a local copy of &lt;code&gt;argv&lt;/code&gt; strings.</source>
          <target state="translated">，GCC将您的程序与假定C99风格的接口的启动代码链接到 &lt;code&gt;main&lt;/code&gt; ，包括 &lt;code&gt;argv&lt;/code&gt; 字符串的本地副本。</target>
        </trans-unit>
        <trans-unit id="4b0d7b4c7ae6e8aba0c9f72af55f5d304c58fb90" translate="yes" xml:space="preserve">
          <source>, GCC puts a &amp;lsquo;</source>
          <target state="translated">，GCC将&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="dbb40763e80347d1210476d472706d4ce77f51a6" translate="yes" xml:space="preserve">
          <source>, GCC searches</source>
          <target state="translated">，GCC搜索</target>
        </trans-unit>
        <trans-unit id="ae1262a6470e2ff7634d806e9ee5903d47af8ad6" translate="yes" xml:space="preserve">
          <source>, GOT offsets are computed with 32 bits. With a &amp;lsquo;</source>
          <target state="translated">，GOT偏移是用32位计算的。用&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="398ba4aaa11c3bac9f0e3777574e92dc704d4bf0" translate="yes" xml:space="preserve">
          <source>, a library of internal subroutines which GCC uses to overcome shortcomings of particular machines, or special needs for some languages. (See &lt;a href=&quot;http://gcc.gnu.org/onlinedocs/gccint/Interface.html#Interface&quot;&gt;Interfacing to GCC Output&lt;/a&gt; in GNU Compiler Collection (GCC) Internals, for more discussion of</source>
          <target state="translated">，这是内部子例程的库，GCC用来克服特定计算机的缺点或某些语言的特殊需要。（有关以下内容的更多讨论，请参见GNU编译器集合（GCC）内部的&lt;a href=&quot;http://gcc.gnu.org/onlinedocs/gccint/Interface.html#Interface&quot;&gt;接口到GCC输出&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="58f77b34e40291c68cd5f9eb195333d97f9c0b55" translate="yes" xml:space="preserve">
          <source>, a precompiled header file in</source>
          <target state="translated">，是位于其中的预编译头文件</target>
        </trans-unit>
        <trans-unit id="902dbfb563932162e68ce134dadacceccbcb8994" translate="yes" xml:space="preserve">
          <source>, allowing at most a 16-bit offset for pc-relative addressing.</source>
          <target state="translated">，最多允许16位偏移量用于pc相对寻址。</target>
        </trans-unit>
        <trans-unit id="ee68baaad88f470b7b533567d25dcdc3a379ac30" translate="yes" xml:space="preserve">
          <source>, allowing the exception to be raised. This option does nothing unless</source>
          <target state="translated">，允许引发异常。该选项不执行任何操作，除非</target>
        </trans-unit>
        <trans-unit id="6a9e05e836489ac9950ec8969e19d268991d8395" translate="yes" xml:space="preserve">
          <source>, along with options to silence warnings, and omitting other options that would cause the compiler to produce output to files or to standard output as a side effect. Dump files and preserved temporary files are renamed so as to contain the &lt;code&gt;.gk&lt;/code&gt; additional extension during the second compilation, to avoid overwriting those generated by the first.</source>
          <target state="translated">，以及使警告静音的选项，并省略其他可能导致编译器产生副作用的选项，这些其他选项会导致编译器将输出生成到文件或标准输出。重命名转储文件和保留的临时文件，以便在第二次编译时包含 &lt;code&gt;.gk&lt;/code&gt; 附加扩展名，以避免覆盖第一个编译时生成的扩展名。</target>
        </trans-unit>
        <trans-unit id="b7934c6ea7ba618a96b99457fbe7b3b543c732ec" translate="yes" xml:space="preserve">
          <source>, also deprecate if the class has a user-provided destructor.</source>
          <target state="translated">，也反对该类是否具有用户提供的析构函数。</target>
        </trans-unit>
        <trans-unit id="6f80346a34a1c0832eaef10e9fb85d47cd2333b2" translate="yes" xml:space="preserve">
          <source>, an accompanying</source>
          <target state="translated">，伴随</target>
        </trans-unit>
        <trans-unit id="8278d2adba7612cf98a492d21a4ac4c78acb1202" translate="yes" xml:space="preserve">
          <source>, and</source>
          <target state="translated">和</target>
        </trans-unit>
        <trans-unit id="f426f972d9e2e410d1cd265b7d8eb71579d193d3" translate="yes" xml:space="preserve">
          <source>, and &amp;lsquo;</source>
          <target state="translated">和'</target>
        </trans-unit>
        <trans-unit id="23adf1a81d00b9577caedac00d8bb053cb588e55" translate="yes" xml:space="preserve">
          <source>, and &lt;var&gt;Mod&lt;/var&gt; references a variable &lt;var&gt;Var&lt;/var&gt; that is no bigger than &lt;var&gt;num&lt;/var&gt; bytes, you must make sure that &lt;var&gt;Var&lt;/var&gt; is placed in a small data section. If &lt;var&gt;Var&lt;/var&gt; is defined by another module, you must either compile that module with a high-enough</source>
          <target state="translated">，并且 &lt;var&gt;Mod&lt;/var&gt; 引用的变量 &lt;var&gt;Var&lt;/var&gt; 不大于 &lt;var&gt;num&lt;/var&gt; 个字节，因此必须确保将 &lt;var&gt;Var&lt;/var&gt; 放在较小的数据段中。如果 &lt;var&gt;Var&lt;/var&gt; 由另一个模块定义，则必须使用足够高的编译率编译该模块</target>
        </trans-unit>
        <trans-unit id="743749c4efffebe81ffd20a194825f3fc850b511" translate="yes" xml:space="preserve">
          <source>, and add the resulting directory to the include search path.</source>
          <target state="translated">，然后将结果目录添加到包含搜索路径。</target>
        </trans-unit>
        <trans-unit id="a16ad3ad201ad0e9edb67f4182af2991296c2f83" translate="yes" xml:space="preserve">
          <source>, and all preprocessed C source on standard output.</source>
          <target state="translated">，以及所有在标准输出上预处理的C源代码。</target>
        </trans-unit>
        <trans-unit id="90ed666d7d769802b6beda7c0dcee29960956ee6" translate="yes" xml:space="preserve">
          <source>, and by</source>
          <target state="translated">和</target>
        </trans-unit>
        <trans-unit id="d71752f09e96fc62366114cf7f0e7ed6dfc15ba5" translate="yes" xml:space="preserve">
          <source>, and can be disabled with</source>
          <target state="translated">，并且可以通过</target>
        </trans-unit>
        <trans-unit id="47e2ece9623c1b6de007925f8291dd7e268326a4" translate="yes" xml:space="preserve">
          <source>, and is now deprecated in favor of that option.</source>
          <target state="translated">，现在不建议使用该选项。</target>
        </trans-unit>
        <trans-unit id="6c621a5f8adf6dadb74b46610241e3bcd04d2e32" translate="yes" xml:space="preserve">
          <source>, and is the default for GCC on most targets. On the other hand, this behavior is not required by ISO C, and on some targets may carry a speed or code size penalty on variable references.</source>
          <target state="translated">，这是大多数目标上GCC的默认设置。另一方面，ISO C不需要这种行为，并且在某些目标上，变量引用可能会带来速度或代码大小的损失。</target>
        </trans-unit>
        <trans-unit id="88a5ea6b58f23701d3aa4146ace54029e8823718" translate="yes" xml:space="preserve">
          <source>, and only available for ARCv1 cores. This option is deprecated.</source>
          <target state="translated">，并且仅适用于ARCv1内核。不建议使用此选项。</target>
        </trans-unit>
        <trans-unit id="9e6256dac04a1e70e1c010f7986affe3cfbc4b96" translate="yes" xml:space="preserve">
          <source>, and put each precompiled header in the directory, perhaps using</source>
          <target state="translated">，然后将每个预编译的标头放在目录中，也许使用</target>
        </trans-unit>
        <trans-unit id="c2c2c76da72f0a333b5ed5016704ad851d0c39af" translate="yes" xml:space="preserve">
          <source>, and suppresses warnings with an implicit</source>
          <target state="translated">，并使用隐式禁止显示警告</target>
        </trans-unit>
        <trans-unit id="34f17ce4557bcdf5b55dbd872b85dc9b982eafa1" translate="yes" xml:space="preserve">
          <source>, and the only difference between the options is the value of &lt;code&gt;__STDC_VERSION__&lt;/code&gt;.</source>
          <target state="translated">，而选项之间的唯一区别是 &lt;code&gt;__STDC_VERSION__&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="96e931096776aece1fe3f0a9e4be616b683405e9" translate="yes" xml:space="preserve">
          <source>, and this one:</source>
          <target state="translated">， 还有这个：</target>
        </trans-unit>
        <trans-unit id="e7d139345f8f88ea2b0370b518948a4897eef2d7" translate="yes" xml:space="preserve">
          <source>, and thus is only supported on targets that have support for</source>
          <target state="translated">，因此仅在具有以下功能的目标上受支持</target>
        </trans-unit>
        <trans-unit id="b113e8bcc5e9f320f4732a36fdcbc4f0f5e0d09c" translate="yes" xml:space="preserve">
          <source>, and/or</source>
          <target state="translated">和/或</target>
        </trans-unit>
        <trans-unit id="c57f45466533085df41649cdee0f603a5cb41c26" translate="yes" xml:space="preserve">
          <source>, any</source>
          <target state="translated">， 任何</target>
        </trans-unit>
        <trans-unit id="866ed9c2b2d2bad8e5d74a3106d1846d7046ccca" translate="yes" xml:space="preserve">
          <source>, are also relevant for C++ programs. See &lt;a href=&quot;c-dialect-options#C-Dialect-Options&quot;&gt;Options Controlling C Dialect&lt;/a&gt;.</source>
          <target state="translated">，也与C ++程序有关。请参阅&lt;a href=&quot;c-dialect-options#C-Dialect-Options&quot;&gt;控制C语言的选项&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="51481c8b24c31c23ddc1a3abcf6ba83a1ef51299" translate="yes" xml:space="preserve">
          <source>, are ignored.</source>
          <target state="translated">，将被忽略。</target>
        </trans-unit>
        <trans-unit id="79a943208a4fedad276a1aa123b394ce668bbff3" translate="yes" xml:space="preserve">
          <source>, are ignored. The standard startup files are used normally, unless</source>
          <target state="translated">，将被忽略。正常使用标准启动文件，除非</target>
        </trans-unit>
        <trans-unit id="6379405f41516ac12b0f4139833678105195c0a4" translate="yes" xml:space="preserve">
          <source>, as a collection of messages with source file, line number and column number, with the following additional data for each message:</source>
          <target state="translated">，作为具有源文件，行号和列号的消息的集合，每条消息具有以下附加数据：</target>
        </trans-unit>
        <trans-unit id="fb00d545d0d5607110a98e502d1a1edbbdaa2098" translate="yes" xml:space="preserve">
          <source>, as the CR16C architecture does not support the far data model.</source>
          <target state="translated">，因为CR16C体系结构不支持far数据模型。</target>
        </trans-unit>
        <trans-unit id="5b479d70daa1736f38f38cdacfc0aca31404acb9" translate="yes" xml:space="preserve">
          <source>, as well as</source>
          <target state="translated">， 以及</target>
        </trans-unit>
        <trans-unit id="33d60ffd6d107c4c32d8b7981fa36d4a32ef8dab" translate="yes" xml:space="preserve">
          <source>, as well as by</source>
          <target state="translated">，以及</target>
        </trans-unit>
        <trans-unit id="399b3f0e115711c4cd717ca3bbb79382e386fd0b" translate="yes" xml:space="preserve">
          <source>, because this passes the entire string as a single argument, which is not what the linker expects.</source>
          <target state="translated">，因为这会将整个字符串作为单个参数传递，这不是链接程序所期望的。</target>
        </trans-unit>
        <trans-unit id="865e3dfce7701d87918161573fe82bb85b8c9703" translate="yes" xml:space="preserve">
          <source>, but additionally asserts that the program being compiled does not perform any floating-point operations. This option is presently supported only by some bare-metal MIPS configurations, where it may select a special set of libraries that lack all floating-point support (including, for example, the floating-point &lt;code&gt;printf&lt;/code&gt; formats). If code compiled with</source>
          <target state="translated">，但另外断言正在编译的程序不执行任何浮点运算。目前，只有某些裸机MIPS配置支持此选项，在该配置中，它可能会选择缺少所有浮点支持（包括例如浮点 &lt;code&gt;printf&lt;/code&gt; 格式）的一组特殊的库。如果代码使用</target>
        </trans-unit>
        <trans-unit id="e44afa57519c3ebb51125bff96010b68f9e7c42e" translate="yes" xml:space="preserve">
          <source>, but after any paths given with</source>
          <target state="translated">，但指定了</target>
        </trans-unit>
        <trans-unit id="da29ebe06aeaf8eeb2af99d65acf35ce314f7a2d" translate="yes" xml:space="preserve">
          <source>, but causes CSE to follow jumps that conditionally skip over blocks. When CSE encounters a simple &lt;code&gt;if&lt;/code&gt; statement with no else clause,</source>
          <target state="translated">，但会导致CSE跟随有条件跳过块的跳转。当CSE遇到一个没有else子句的简单 &lt;code&gt;if&lt;/code&gt; 语句时，</target>
        </trans-unit>
        <trans-unit id="cc018337da61987ae8a9683d2e8189ee04860e67" translate="yes" xml:space="preserve">
          <source>, but debug insns may get (non-overlapping) uids above it if the reserved range is exhausted.</source>
          <target state="translated">，但如果保留范围已用尽，则调试insns可能会在其上面获得（非重叠）uid。</target>
        </trans-unit>
        <trans-unit id="005377f41b9be83224f58308ed6955447f64b6d1" translate="yes" xml:space="preserve">
          <source>, but does not override the pipeline info. This helps reduce code size while still giving good performance.</source>
          <target state="translated">，但不会覆盖管道信息。这有助于减小代码大小，同时仍具有良好的性能。</target>
        </trans-unit>
        <trans-unit id="594ba3ce9f3f33a1e11308ab98fb068b622db145" translate="yes" xml:space="preserve">
          <source>, but emit only the macro names, not their expansions.</source>
          <target state="translated">，但仅发出宏名称，而不发出其扩展名。</target>
        </trans-unit>
        <trans-unit id="2d142b0d539e9cf1b604cc78dc509f4e7229fde5" translate="yes" xml:space="preserve">
          <source>, but is enabled by</source>
          <target state="translated">，但已启用</target>
        </trans-unit>
        <trans-unit id="8fc78f584be2b6aad9e5e5043f9934d5b9b136e4" translate="yes" xml:space="preserve">
          <source>, but it quotes any characters which are special to Make. &lt;code&gt;-MQ '$(objpfx)foo.o'&lt;/code&gt; gives</source>
          <target state="translated">，但引用了Make特殊的任何字符。 &lt;code&gt;-MQ '$(objpfx)foo.o'&lt;/code&gt; 给出</target>
        </trans-unit>
        <trans-unit id="4c4a33264da0720530175142264eac24f6ae7161" translate="yes" xml:space="preserve">
          <source>, but not</source>
          <target state="translated">， 但不是</target>
        </trans-unit>
        <trans-unit id="bddcaf1db7854ec894bd29481c117d0421a3605f" translate="yes" xml:space="preserve">
          <source>, but not at</source>
          <target state="translated">，但不在</target>
        </trans-unit>
        <trans-unit id="9c0770373d31ca6185df409b28c1a619d6e08d53" translate="yes" xml:space="preserve">
          <source>, but not other header files. The value &amp;lsquo;</source>
          <target state="translated">，而不是其他头文件。价值 '</target>
        </trans-unit>
        <trans-unit id="159001fe4af9e263248a6b95afa82d085080520c" translate="yes" xml:space="preserve">
          <source>, but not to skip more bytes than the size of the function.</source>
          <target state="translated">，但不要跳过比函数大小更多的字节。</target>
        </trans-unit>
        <trans-unit id="d958259abb765b7f6d8dcadea03974d1a2f40bf6" translate="yes" xml:space="preserve">
          <source>, but not with</source>
          <target state="translated">，但不能</target>
        </trans-unit>
        <trans-unit id="b216118818bb69b17957ca8878a61bc6b92bed60" translate="yes" xml:space="preserve">
          <source>, but only print for the WPA phase of Link Time Optimization.</source>
          <target state="translated">，但仅在&amp;ldquo;链接时间优化&amp;rdquo;的WPA阶段打印。</target>
        </trans-unit>
        <trans-unit id="4e35d7567098d27b15b90e10171d5a8dcf120925" translate="yes" xml:space="preserve">
          <source>, but pass linker options to locate initialized data at 0x40000000 and zero-initialized data at 0x80000000.</source>
          <target state="translated">，但传递链接器选项以将初始化的数据定位在0x40000000，将零初始化的数据定位在0x80000000。</target>
        </trans-unit>
        <trans-unit id="6f70c180932b6b9e56fc718a1092901e76994fec" translate="yes" xml:space="preserve">
          <source>, but requests an additional pass of instruction scheduling after register allocation has been done. This is especially useful on machines with a relatively small number of registers and where memory load instructions take more than one cycle.</source>
          <target state="translated">，但在完成寄存器分配后，要求通过另一次指令调度。这在寄存器数量相对较少且内存加载指令占用一个以上周期的机器上尤其有用。</target>
        </trans-unit>
        <trans-unit id="830b9851b653de89541a42c034a463a6fc26cd47" translate="yes" xml:space="preserve">
          <source>, but searches for a program such as &lt;code&gt;cpp&lt;/code&gt;.</source>
          <target state="translated">，但搜索诸如 &lt;code&gt;cpp&lt;/code&gt; 之类的程序。</target>
        </trans-unit>
        <trans-unit id="d72133be23d29e86bec8e3866d2ef1a66344d808" translate="yes" xml:space="preserve">
          <source>, but the default can be overridden by configuring GCC with</source>
          <target state="translated">，但可以通过使用以下命令配置GCC来覆盖默认设置</target>
        </trans-unit>
        <trans-unit id="387e7f946ae452eacdf73af60a95f99f5b4e63e8" translate="yes" xml:space="preserve">
          <source>, but the extension options do not affect the tuning of the generated code.</source>
          <target state="translated">，但扩展选项不会影响所生成代码的调整。</target>
        </trans-unit>
        <trans-unit id="2b9a159b4f28ed957d67b57c420c44a30c73f5f0" translate="yes" xml:space="preserve">
          <source>, but the generated position-independent code can be only linked into executables. Usually these options are used to compile code that will be linked using the</source>
          <target state="translated">，但是生成的位置无关代码只能链接到可执行文件中。通常，这些选项用于编译将使用</target>
        </trans-unit>
        <trans-unit id="ce00db4a928b7a01e2c8e7726b40ed1e61c2d0a0" translate="yes" xml:space="preserve">
          <source>, but the only useful values are those that select a particular CPU implementation. Those are &amp;lsquo;</source>
          <target state="translated">，但唯一有用的值是选择特定CPU实现的值。那些是 '</target>
        </trans-unit>
        <trans-unit id="8192753a9d1c499d01af47f83e4414507c8efbb8" translate="yes" xml:space="preserve">
          <source>, but the scheduling parameters set by</source>
          <target state="translated">，但由</target>
        </trans-unit>
        <trans-unit id="b748f41055c10d610a28ba47d6bb381220696d14" translate="yes" xml:space="preserve">
          <source>, but there are a few exceptions. GCC requires the freestanding environment provide &lt;code&gt;memcpy&lt;/code&gt;, &lt;code&gt;memmove&lt;/code&gt;, &lt;code&gt;memset&lt;/code&gt; and &lt;code&gt;memcmp&lt;/code&gt;. Finally, if &lt;code&gt;__builtin_trap&lt;/code&gt; is used, and the target does not implement the &lt;code&gt;trap&lt;/code&gt; pattern, then GCC emits a call to &lt;code&gt;abort&lt;/code&gt;.</source>
          <target state="translated">，但也有一些例外。GCC要求独立的环境提供 &lt;code&gt;memcpy&lt;/code&gt; ， &lt;code&gt;memmove&lt;/code&gt; ， &lt;code&gt;memset&lt;/code&gt; 和 &lt;code&gt;memcmp&lt;/code&gt; 。最后，如果使用了 &lt;code&gt;__builtin_trap&lt;/code&gt; ，并且目标未实现 &lt;code&gt;trap&lt;/code&gt; 模式，则GCC发出调用 &lt;code&gt;abort&lt;/code&gt; 的调用。</target>
        </trans-unit>
        <trans-unit id="e915a38ee11f159ae6606fe3c6ba38c9e85ffd1a" translate="yes" xml:space="preserve">
          <source>, but this can be overridden at configure time using</source>
          <target state="translated">，但是可以在配置时使用来覆盖</target>
        </trans-unit>
        <trans-unit id="4ff7f24239f93384ee139821001cb13bd9242f98" translate="yes" xml:space="preserve">
          <source>, but this option sets the list of function names to be excluded from instrumentation. The function name to be matched is its user-visible name, such as &lt;code&gt;vector&amp;lt;int&amp;gt; blah(const vector&amp;lt;int&amp;gt; &amp;amp;)&lt;/code&gt;, not the internal mangled name (e.g., &lt;code&gt;_Z4blahRSt6vectorIiSaIiEE&lt;/code&gt;). The match is done on substrings: if the &lt;var&gt;sym&lt;/var&gt; parameter is a substring of the function name, it is considered to be a match. For C99 and C++ extended identifiers, the function name must be given in UTF-8, not using universal character names.</source>
          <target state="translated">，但此选项设置要从检测中排除的功能名称列表。要匹配的函数名称是其用户可见的名称，例如 &lt;code&gt;vector&amp;lt;int&amp;gt; blah(const vector&amp;lt;int&amp;gt; &amp;amp;)&lt;/code&gt; ，而不是内部错误的名称（例如 &lt;code&gt;_Z4blahRSt6vectorIiSaIiEE&lt;/code&gt; ）。匹配是在子字符串上完成的：如果 &lt;var&gt;sym&lt;/var&gt; 参数是函数名称的子字符串，则认为它是匹配项。对于C99和C ++扩展标识符，函数名称必须以UTF-8给出，而不是使用通用字符名称。</target>
        </trans-unit>
        <trans-unit id="b4b542e5e2900b33582894496dd2fb25f7a186a1" translate="yes" xml:space="preserve">
          <source>, callers of such functions use an inlined PLT.</source>
          <target state="translated">，此类函数的调用者使用内联PLT。</target>
        </trans-unit>
        <trans-unit id="1bc40ffb21955611ebc01b821b57a8fb97abe447" translate="yes" xml:space="preserve">
          <source>, causes debug versions of the runtime functions for the vtable verification feature to be called. This flag also causes the compiler to log information about which vtable pointers it finds for each class. This information is written to a file named</source>
          <target state="translated">，导致调用vtable验证功能的运行时功能的调试版本。此标志还使编译器记录有关为每个类找到哪个vtable指针的信息。此信息将写入一个名为</target>
        </trans-unit>
        <trans-unit id="186899d07725833e558a3f1b37bca7595dd4ab80" translate="yes" xml:space="preserve">
          <source>, causes the compiler to tune for code size rather than execution speed, and performs further optimizations designed to reduce code size.</source>
          <target state="translated">，导致编译器调整代码大小而不是执行速度，并执行旨在减小代码大小的进一步优化。</target>
        </trans-unit>
        <trans-unit id="77a4aca34a1bfb27eca2f4c5b85088c452ff661a" translate="yes" xml:space="preserve">
          <source>, cold functions are automatically detected and this attribute is ignored.</source>
          <target state="translated">，则会自动检测到冷功能，并且会忽略此属性。</target>
        </trans-unit>
        <trans-unit id="f796dad3806ccc12e4efbb979242edaefd9c68ac" translate="yes" xml:space="preserve">
          <source>, debug information is generated for types declared in that file and</source>
          <target state="translated">，将为该文件中声明的类型生成调试信息，然后</target>
        </trans-unit>
        <trans-unit id="602f9aefc82b94f79ccc91c4e0a2d6024a300032" translate="yes" xml:space="preserve">
          <source>, defaulting to</source>
          <target state="translated">，默认为</target>
        </trans-unit>
        <trans-unit id="63e7e7ca16f5d6ce188c6f1a13bb0cfb59a90f05" translate="yes" xml:space="preserve">
          <source>, depending on the other options used, so that headers may for example be found in</source>
          <target state="translated">，具体取决于所使用的其他选项，因此可以在例如</target>
        </trans-unit>
        <trans-unit id="59850229d9fda282df9f43c3238d9cc1fe2f9ca4" translate="yes" xml:space="preserve">
          <source>, don&amp;rsquo;t generate (do generate) instruction sequences that load addresses for functions from the PLT part of the GOT rather than (traditional on other architectures) calls to the PLT. The default is</source>
          <target state="translated">，请勿生成（不要生成）从GOT的PLT部分加载函数地址的指令序列，而不是（在其他体系结构上是传统的）调用PLT的指令序列。默认是</target>
        </trans-unit>
        <trans-unit id="899cb9db2c2edf8462bd1866fd07b4a282dd26dc" translate="yes" xml:space="preserve">
          <source>, each</source>
          <target state="translated">，每个</target>
        </trans-unit>
        <trans-unit id="a212453865c3ae5d769c013e9814daf8f2a214a4" translate="yes" xml:space="preserve">
          <source>, etc.</source>
          <target state="translated">等</target>
        </trans-unit>
        <trans-unit id="2025ee33109115d150095e4dc9fbc6cecdccc59c" translate="yes" xml:space="preserve">
          <source>, etc. GCC considers</source>
          <target state="translated">等等。GCC认为</target>
        </trans-unit>
        <trans-unit id="c230b2ae171538a9903d9c6f4c54262988ff8a11" translate="yes" xml:space="preserve">
          <source>, except for that it outputs the &lt;code&gt;.code16gcc&lt;/code&gt; assembly directive at the beginning of the assembly output so that the binary can run in 16-bit mode.</source>
          <target state="translated">，除了它在汇编输出的开头输出 &lt;code&gt;.code16gcc&lt;/code&gt; 汇编指令，以便二进制文件可以在16位模式下运行。</target>
        </trans-unit>
        <trans-unit id="36187c82da4acd270eb00cabfd2754e7a35d89ac" translate="yes" xml:space="preserve">
          <source>, except on targets where GCC is the principal compiler. In those cases, we can choose the standard, and we chose the more efficient register return alternative.</source>
          <target state="translated">，但以GCC为主要编译器的目标除外。在这些情况下，我们可以选择标准，然后选择更有效的寄存器返回替代方法。</target>
        </trans-unit>
        <trans-unit id="4a7bfad050613cd89b494934c041ad85c96a7f4e" translate="yes" xml:space="preserve">
          <source>, except that</source>
          <target state="translated">， 除了那个</target>
        </trans-unit>
        <trans-unit id="424ca99182001aa93e0255bf1521df6608849e1a" translate="yes" xml:space="preserve">
          <source>, except that any output produced by scanning &lt;var&gt;file&lt;/var&gt; is thrown away. Macros it defines remain defined. This allows you to acquire all the macros from a header without also processing its declarations.</source>
          <target state="translated">，除了将丢弃扫描 &lt;var&gt;file&lt;/var&gt; 产生的任何输出。它定义的宏保持定义。这使您可以从标头获取所有宏，而无需处理其声明。</target>
        </trans-unit>
        <trans-unit id="af31397d348022357555d43ae6b6602db7237c77" translate="yes" xml:space="preserve">
          <source>, except that comments contained within macros are also passed through to the output file where the macro is expanded.</source>
          <target state="translated">，但宏中包含的注释也会传递到扩展宏的输出文件中。</target>
        </trans-unit>
        <trans-unit id="8293df57b65690a6a5b17ad151fb7402defdb639" translate="yes" xml:space="preserve">
          <source>, except that it implicitly passes</source>
          <target state="translated">，除了它隐式地通过</target>
        </trans-unit>
        <trans-unit id="f4ee9476717ae169b601f810748e3fbaeb86e2f3" translate="yes" xml:space="preserve">
          <source>, except that it just generates any needed static data, but does not affect the generated code in any other way. You normally do not need to enable this option; instead, a language processor that needs this handling enables it on your behalf.</source>
          <target state="translated">，只是它会生成任何所需的静态数据，而不会以任何其他方式影响生成的代码。您通常不需要启用此选项；相反，需要这种处理的语言处理器会代您启用它。</target>
        </trans-unit>
        <trans-unit id="daa2d6de31b71426a7c88a1aee1560252b4b2a7d" translate="yes" xml:space="preserve">
          <source>, except when selective scheduling is enabled.</source>
          <target state="translated">，除非启用了选择性计划。</target>
        </trans-unit>
        <trans-unit id="dce06a184830559e813d9f5a2f13966eb3de4b64" translate="yes" xml:space="preserve">
          <source>, expand the &lt;code&gt;__FILE__&lt;/code&gt; and &lt;code&gt;__BASE_FILE__&lt;/code&gt; macros as if the files resided in directory</source>
          <target state="translated">，展开 &lt;code&gt;__FILE__&lt;/code&gt; 和 &lt;code&gt;__BASE_FILE__&lt;/code&gt; 宏，就像文件位于目录中一样</target>
        </trans-unit>
        <trans-unit id="537e3d3f4595296c4732ae2914f89aff5f7a7f43" translate="yes" xml:space="preserve">
          <source>, fails and prints an error if asked to create a shared library with a less restrictive subtype than its input files (for instance, trying to put a &amp;lsquo;</source>
          <target state="translated">，如果要求创建一个比输入文件限制小的子类型的共享库，则会失败并显示错误（例如，尝试放置&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="fdb43e7f5581dd318ba35a4b1b7bd3f3204a8b2e" translate="yes" xml:space="preserve">
          <source>, for each function of your program GCC creates a program flow graph, then finds a spanning tree for the graph. Only arcs that are not on the spanning tree have to be instrumented: the compiler adds code to count the number of times that these arcs are executed. When an arc is the only exit or only entrance to a block, the instrumentation code can be added to the block; otherwise, a new basic block must be created to hold the instrumentation code.</source>
          <target state="translated">，对于您程序的每个功能，GCC都会创建一个程序流程图，然后为该图找到一个生成树。只需要检测不在生成树上的弧：编译器添加代码以计算这些弧的执行次数。当圆弧是某个块的唯一出口或唯一入口时，可以将检测代码添加到该块；否则，必须创建一个新的基本块来保存检测代码。</target>
        </trans-unit>
        <trans-unit id="5a62702328e51c81c8d14351efa5231be254fb50" translate="yes" xml:space="preserve">
          <source>, for which this feature is experimental.</source>
          <target state="translated">，此功能是实验性的。</target>
        </trans-unit>
        <trans-unit id="de44d1d94e89d69c9312fa31d05de00107553327" translate="yes" xml:space="preserve">
          <source>, forcibly change the way C symbols are represented in the object file. One use is to help link with legacy assembly code.</source>
          <target state="translated">，强制更改C符号在目标文件中的表示方式。一种用途是帮助链接旧的汇编代码。</target>
        </trans-unit>
        <trans-unit id="bc3d5d86fcab0fccd2357fb760ccfdbc87239051" translate="yes" xml:space="preserve">
          <source>, function calls with a such function as the callee or caller uses inlined PLT.</source>
          <target state="translated">，具有诸如被叫方或调用方使用内联PLT之类的功能的函数调用。</target>
        </trans-unit>
        <trans-unit id="b73db41c359e5e1618dc5e96de50a7c0cce9c547" translate="yes" xml:space="preserve">
          <source>, generating &lt;var&gt;N&lt;/var&gt; NOPs, with the function entry point before the &lt;var&gt;M&lt;/var&gt;th NOP instruction. &lt;var&gt;M&lt;/var&gt; defaults to 0 if omitted e.g. function entry point is before the first NOP.</source>
          <target state="translated">，生成 &lt;var&gt;N&lt;/var&gt; 个 NOP，其功能入口位于第 &lt;var&gt;M&lt;/var&gt; 个NOP指令之前。如果省略，则 &lt;var&gt;M&lt;/var&gt; 默认为0，例如，函数入口点在第一个NOP之前。</target>
        </trans-unit>
        <trans-unit id="66281c83f494cfe2e9913aed90954ff6500be7df" translate="yes" xml:space="preserve">
          <source>, giving just &amp;lsquo;</source>
          <target state="translated">，仅给出&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="7edb54e230ef45c40c202a2070aee0bf8eea9a7f" translate="yes" xml:space="preserve">
          <source>, hot functions are automatically detected and this attribute is ignored.</source>
          <target state="translated">，则会自动检测到热功能，并且将忽略此属性。</target>
        </trans-unit>
        <trans-unit id="cd70bd4accf5ece1456ab2be03ed1e6ee41d4b1c" translate="yes" xml:space="preserve">
          <source>, however the option is disabled if generated code will be instrumented for profiling (</source>
          <target state="translated">，但是如果将对生成的代码进行性能分析（</target>
        </trans-unit>
        <trans-unit id="1bce44abc1a9262df8cac0c50152864f825ccf63" translate="yes" xml:space="preserve">
          <source>, i.e. to store data in the little-endian format.</source>
          <target state="translated">，即以Little-endian格式存储数据。</target>
        </trans-unit>
        <trans-unit id="da5060e991a7ba759c2592a069e08cef00119e51" translate="yes" xml:space="preserve">
          <source>, i.e., do not enable</source>
          <target state="translated">，即不启用</target>
        </trans-unit>
        <trans-unit id="fe023c621e2a7b2cf31927bbba4a961d25408a71" translate="yes" xml:space="preserve">
          <source>, i.e., pass standard Linux linking options to the linker.</source>
          <target state="translated">，即，将标准Linux链接选项传递给链接器。</target>
        </trans-unit>
        <trans-unit id="c940f0489137021ec5391fb7b7ac2f5ace9d8059" translate="yes" xml:space="preserve">
          <source>, if OS libraries are present in</source>
          <target state="translated">，如果OS库存在于</target>
        </trans-unit>
        <trans-unit id="c3dd87cad0ef7982b3ab32988714c6ca54cf2f9e" translate="yes" xml:space="preserve">
          <source>, imply</source>
          <target state="translated">，暗示</target>
        </trans-unit>
        <trans-unit id="1f808929dc7d65506fc3a70039f1c27ca90486ac" translate="yes" xml:space="preserve">
          <source>, in addition to the</source>
          <target state="translated">，除了</target>
        </trans-unit>
        <trans-unit id="cf07eced2fe9d18835b5764136236b3da619529d" translate="yes" xml:space="preserve">
          <source>, in the same way that</source>
          <target state="translated">，就像</target>
        </trans-unit>
        <trans-unit id="b30d7a5cabdcb5756c85bb67b0a58b128c10f3cc" translate="yes" xml:space="preserve">
          <source>, including any libraries. This includes the system libraries and startup modules.</source>
          <target state="translated">，包括所有库。这包括系统库和启动模块。</target>
        </trans-unit>
        <trans-unit id="7b04496200d4f3af930e39d995d950d3bfbff027" translate="yes" xml:space="preserve">
          <source>, instead of guessing which path a branch is most likely to take, the &amp;lsquo;</source>
          <target state="translated">，而不是猜测分支最有可能采用的路径，</target>
        </trans-unit>
        <trans-unit id="f26cdfc5e353e2972712fe3c4c6c2c7061cd6b42" translate="yes" xml:space="preserve">
          <source>, is also specified with</source>
          <target state="translated">，也指定了</target>
        </trans-unit>
        <trans-unit id="297f123a9478230dfaae1454a7a30d8603dbe525" translate="yes" xml:space="preserve">
          <source>, is to use assembler macros instead.</source>
          <target state="translated">，而是使用汇编程序宏。</target>
        </trans-unit>
        <trans-unit id="9865f992f80d724f0d28f2e68445911d448f9a75" translate="yes" xml:space="preserve">
          <source>, it accesses the variables from a common anchor point instead. The effect is similar to the following pseudocode (which isn&amp;rsquo;t valid C):</source>
          <target state="translated">，而是从一个公共锚点访问变量。效果类似于以下伪代码（无效的C）：</target>
        </trans-unit>
        <trans-unit id="37c7d699148009585bcbfd24104e627443f4227f" translate="yes" xml:space="preserve">
          <source>, it adds code so that some data about values of expressions in the program is gathered.</source>
          <target state="translated">，它添加了代码，以便收集有关程序中表达式值的一些数据。</target>
        </trans-unit>
        <trans-unit id="8bb937a2afd69efa3de1fcfec93c85b21cd8d3c0" translate="yes" xml:space="preserve">
          <source>, it assumes GOT entries and small data are within a 12-bit range from the GOT base address; with</source>
          <target state="translated">，它假设GOT条目和小数据在距GOT基址12位的范围内；与</target>
        </trans-unit>
        <trans-unit id="70db58101b4a4dd5508449ddae97a05be51b3c50" translate="yes" xml:space="preserve">
          <source>, it defines the macros for every architecture in the range.</source>
          <target state="translated">，它定义了范围内每种架构的宏。</target>
        </trans-unit>
        <trans-unit id="a7334c92634fb9a0df41a81a512187c2464430d0" translate="yes" xml:space="preserve">
          <source>, it dumps debugging information about location maps. Every token in the output is preceded by the dump of the map its location belongs to.</source>
          <target state="translated">，它会转储有关位置图的调试信息。输出中的每个令牌都在其位置所属的地图转储之前。</target>
        </trans-unit>
        <trans-unit id="085a445042571b2a530ccf02bdc7d3dca3e56d18" translate="yes" xml:space="preserve">
          <source>, it has the same meaning as &amp;lsquo;</source>
          <target state="translated">，其含义与&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="0b7ad38301fa6cb9702cdcc46f4b9ac21cbe6bd6" translate="yes" xml:space="preserve">
          <source>, it instead searches</source>
          <target state="translated">，而是搜索</target>
        </trans-unit>
        <trans-unit id="da805275b6a01ffed7306b21a2664c3c591d7da2" translate="yes" xml:space="preserve">
          <source>, it is possible to extract and use them in an LTO link if you are using a linker with plugin support. To create static libraries suitable for LTO, use &lt;code&gt;gcc-ar&lt;/code&gt; and &lt;code&gt;gcc-ranlib&lt;/code&gt; instead of &lt;code&gt;ar&lt;/code&gt; and &lt;code&gt;ranlib&lt;/code&gt;; to show the symbols of object files with GIMPLE bytecode, use &lt;code&gt;gcc-nm&lt;/code&gt;. Those commands require that &lt;code&gt;ar&lt;/code&gt;, &lt;code&gt;ranlib&lt;/code&gt; and &lt;code&gt;nm&lt;/code&gt; have been compiled with plugin support. At link time, use the flag</source>
          <target state="translated">，如果您使用支持插件的链接器，则可以在LTO链接中提取和使用它们。要创建适用于LTO的静态库，请使用 &lt;code&gt;gcc-ar&lt;/code&gt; 和 &lt;code&gt;gcc-ranlib&lt;/code&gt; 代替 &lt;code&gt;ar&lt;/code&gt; 和 &lt;code&gt;ranlib&lt;/code&gt; ；要显示具有GIMPLE字节码的目标文件的符号，请使用 &lt;code&gt;gcc-nm&lt;/code&gt; 。这些命令要求使用插件支持编译 &lt;code&gt;ar&lt;/code&gt; ， &lt;code&gt;ranlib&lt;/code&gt; 和 &lt;code&gt;nm&lt;/code&gt; 。在链接时，使用标志</target>
        </trans-unit>
        <trans-unit id="0fdbc0dcc1b3d3cf0a25782f0c9d99618712795c" translate="yes" xml:space="preserve">
          <source>, it links the shared version of</source>
          <target state="translated">，它链接了的共享版本</target>
        </trans-unit>
        <trans-unit id="d873388541d922fb56183db4bb2553adba035d5a" translate="yes" xml:space="preserve">
          <source>, it reads back the data gathered and actually performs the optimizations based on them. Currently the optimizations include specialization of division operations using the knowledge about the value of the denominator.</source>
          <target state="translated">，它会回读收集到的数据，并根据这些数据实际执行优化。当前，优化包括使用有关分母值的知识来进行除法运算的专业化。</target>
        </trans-unit>
        <trans-unit id="a2f260537ad6dfb12892a249886247f016bc9ba2" translate="yes" xml:space="preserve">
          <source>, it reads back the data gathered from profiling values of expressions for usage in optimizations.</source>
          <target state="translated">，它会读取从表达式的分析值收集的数据，以用于优化。</target>
        </trans-unit>
        <trans-unit id="33fdaf8607572ca9dfc5db8fb8a043fa47838f46" translate="yes" xml:space="preserve">
          <source>, it trades 3 instructions for 4, one of which may be shared by multiple symbols, and it avoids the need for a GOT entry for the referenced symbol, so it&amp;rsquo;s more likely to be a win. If it is not,</source>
          <target state="translated">，它将3条指令换成4条指令，其中一条可以被多个符号共享，并且避免了对所引用符号的GOT条目的需求，因此更有可能获胜。如果不是，</target>
        </trans-unit>
        <trans-unit id="597abb8e1070ef05bc7ec2edf56f3622f0ab3d9c" translate="yes" xml:space="preserve">
          <source>, its assembler file in</source>
          <target state="translated">，其汇编文件位于</target>
        </trans-unit>
        <trans-unit id="2a5e7591ba964c2077d7342b00d00d8531ffe32b" translate="yes" xml:space="preserve">
          <source>, linking with the static version of libgcc by default. This allows exceptions to propagate through such shared libraries, without incurring relocation costs at library load time.</source>
          <target state="translated">，默认情况下链接到静态版本的libgcc。这允许异常通过此类共享库传播，而不会在库加载时招致重定位成本。</target>
        </trans-unit>
        <trans-unit id="f86f918c25844c67aabc1b85407cae7e6da5fdd5" translate="yes" xml:space="preserve">
          <source>, loops containing a load/store sequence can be changed to a load before the loop and a store after the loop.</source>
          <target state="translated">，可以将包含加载/存储序列的循环更改为循环之前的加载，并将其更改为循环之后的存储。</target>
        </trans-unit>
        <trans-unit id="6cfaf303daa057f828f7c2dbdcc5ee00d114011c" translate="yes" xml:space="preserve">
          <source>, merges the two files into a single internal image, and compiles the result as usual. Since both</source>
          <target state="translated">，将这两个文件合并为一个内部映像，然后照常编译结果。由于两者</target>
        </trans-unit>
        <trans-unit id="42efed7c6b6343d536a66fe0302d3bcf2db50bff" translate="yes" xml:space="preserve">
          <source>, merges them together into a single GIMPLE representation and optimizes them as usual to produce</source>
          <target state="translated">，将它们合并为一个GIMPLE表示形式，并照常对其进行优化以生成</target>
        </trans-unit>
        <trans-unit id="4de233cb30f72a91f767198fb4088b9d8434017e" translate="yes" xml:space="preserve">
          <source>, only calls to prototyped variable argument functions set or clear the bit.</source>
          <target state="translated">，仅调用原型变量参数函数设置或清除该位。</target>
        </trans-unit>
        <trans-unit id="500ad22c367338ded2a7f587262dff6519e20900" translate="yes" xml:space="preserve">
          <source>, only permits instructions to be used that are valid for the subtype of the file it is generating, so you cannot put 64-bit instructions in a &amp;lsquo;</source>
          <target state="translated">，仅允许使用对其生成的文件的子类型有效的指令，因此您不能将64位指令放在'</target>
        </trans-unit>
        <trans-unit id="b366d1a229ec84d93ba42e7ecafb33db5b7b9b39" translate="yes" xml:space="preserve">
          <source>, or</source>
          <target state="translated">， 要么</target>
        </trans-unit>
        <trans-unit id="9dc64f385a34f50d73ecc913e204ce42b3b016bf" translate="yes" xml:space="preserve">
          <source>, or if OS libraries are present in</source>
          <target state="translated">，或者如果存在OS库</target>
        </trans-unit>
        <trans-unit id="80b0984b332cb5904969fd0c26d2d20fdad7a2a9" translate="yes" xml:space="preserve">
          <source>, or model suboptions) when you specify this linker option.</source>
          <target state="translated">，或模型子选项）。</target>
        </trans-unit>
        <trans-unit id="a7f73a9aa24d964050dc3b77a89839f46d5544c2" translate="yes" xml:space="preserve">
          <source>, or model suboptions) when you specify this linker option.&lt;a href=&quot;#FOOT1&quot; id=&quot;DOCF1&quot; name=&quot;DOCF1&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;</source>
          <target state="translated">，或模型子选项）。&lt;a href=&quot;#FOOT1&quot; id=&quot;DOCF1&quot; name=&quot;DOCF1&quot;&gt;&lt;sup&gt;1个&lt;/sup&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7df955ad07564d81affa3b0a58d1230baa30b079" translate="yes" xml:space="preserve">
          <source>, or tagged with the equivalent &lt;code&gt;arch=armv8-a+crc&lt;/code&gt; attribute, can inline a function &lt;code&gt;bar&lt;/code&gt; compiled with</source>
          <target state="translated">或标记有等效 &lt;code&gt;arch=armv8-a+crc&lt;/code&gt; 属性，可以内联函数 &lt;code&gt;bar&lt;/code&gt; 编译</target>
        </trans-unit>
        <trans-unit id="c0d16ff2ecb94e39dbd670079ddc6dfea8cf86c2" translate="yes" xml:space="preserve">
          <source>, or use an environment variable like &lt;code&gt;DEPENDENCIES_OUTPUT&lt;/code&gt; (see &lt;a href=&quot;environment-variables#Environment-Variables&quot;&gt;Environment Variables&lt;/a&gt;). Debug output is still sent to the regular output stream as normal.</source>
          <target state="translated">，或使用 &lt;code&gt;DEPENDENCIES_OUTPUT&lt;/code&gt; 之类的环境变量（请参阅&lt;a href=&quot;environment-variables#Environment-Variables&quot;&gt;环境变量&lt;/a&gt;）。调试输出仍将照常发送到常规输出流。</target>
        </trans-unit>
        <trans-unit id="114413bb4f72c7de7da72bbb1c49201af1736906" translate="yes" xml:space="preserve">
          <source>, or use multiple</source>
          <target state="translated">，或使用多个</target>
        </trans-unit>
        <trans-unit id="b9de57a8368cc0be9e412c8156861efc31380ddb" translate="yes" xml:space="preserve">
          <source>, or with</source>
          <target state="translated">或</target>
        </trans-unit>
        <trans-unit id="42fd3001192750dfc840e657f931b977a68bb8c9" translate="yes" xml:space="preserve">
          <source>, otherwise GCC will allow some non-ISO C++ features as extensions. See &lt;a href=&quot;warning-options#Warning-Options&quot;&gt;Warning Options&lt;/a&gt;.</source>
          <target state="translated">，否则GCC将允许某些非ISO C ++功能作为扩展。请参阅&lt;a href=&quot;warning-options#Warning-Options&quot;&gt;警告选项&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4efb03b3f7239b259ed4938692deb4cfeedb504b" translate="yes" xml:space="preserve">
          <source>, otherwise compile code the same as</source>
          <target state="translated">，否则编译代码与</target>
        </trans-unit>
        <trans-unit id="9f722d4c3e2124084fb81e45309c5309f6a0001c" translate="yes" xml:space="preserve">
          <source>, otherwise it takes the name of the input file, removes any directory components and suffix, and applies a</source>
          <target state="translated">，否则它将使用输入文件的名称，删除所有目录组件和后缀，并应用</target>
        </trans-unit>
        <trans-unit id="2fdbcf702ccfe5b30e705c3cbb40781443600e37" translate="yes" xml:space="preserve">
          <source>, permits passing pointers to structures with anonymous fields to functions that expect pointers to elements of the type of the field, and permits referring to anonymous fields declared using a typedef. See &lt;a href=&quot;unnamed-fields#Unnamed-Fields&quot;&gt;Unnamed struct/union fields within structs/unions&lt;/a&gt;, for details. This is only supported for C, not C++.</source>
          <target state="translated">，允许将指向带有匿名字段的结构的指针传递给需要指向该字段类型元素的指针的函数，并允许引用使用typedef声明的匿名字段。有关详细信息，请参见&lt;a href=&quot;unnamed-fields#Unnamed-Fields&quot;&gt;结构/联合中的未命名结构/联合字段&lt;/a&gt;。仅C语言支持此功能，C ++不支持。</target>
        </trans-unit>
        <trans-unit id="efd6d891db77cd5a6b32757579c81c42fb30122c" translate="yes" xml:space="preserve">
          <source>, predefinition of command line and most builtin macros is disabled. Macros such as &lt;code&gt;__LINE__&lt;/code&gt;, which are contextually dependent, are handled normally. This enables compilation of files previously preprocessed with &lt;code&gt;-E -fdirectives-only&lt;/code&gt;.</source>
          <target state="translated">，命令行和大多数内置宏的预定义已禁用。上下文相关的宏（如 &lt;code&gt;__LINE__&lt;/code&gt; ）可以正常处理。这样可以编译以前用 &lt;code&gt;-E -fdirectives-only&lt;/code&gt; 预处理过的文件。</target>
        </trans-unit>
        <trans-unit id="415eb48854af3a6a56014b4f60405d06dc891dcf" translate="yes" xml:space="preserve">
          <source>, preprocessing is limited to the handling of directives such as &lt;code&gt;#define&lt;/code&gt;, &lt;code&gt;#ifdef&lt;/code&gt;, and &lt;code&gt;#error&lt;/code&gt;. Other preprocessor operations, such as macro expansion and trigraph conversion are not performed. In addition, the</source>
          <target state="translated">，预处理被限制为指示诸如的处理 &lt;code&gt;#define&lt;/code&gt; ， &lt;code&gt;#ifdef&lt;/code&gt; 来，和 &lt;code&gt;#error&lt;/code&gt; 。不执行其他预处理器操作，例如宏扩展和三字图转换。除此之外</target>
        </trans-unit>
        <trans-unit id="b0bfd8775564ba9a386c05bd93a1f015b33ee831" translate="yes" xml:space="preserve">
          <source>, rather than Newlib.</source>
          <target state="translated">，而不是Newlib。</target>
        </trans-unit>
        <trans-unit id="382a63ed22ee293d350fb2ac1e8963f3b5af303b" translate="yes" xml:space="preserve">
          <source>, record any references to them in the result of the compilation as if the files resided in directory</source>
          <target state="translated">，将所有对它们的引用记录在编译结果中，就像文件位于目录中一样</target>
        </trans-unit>
        <trans-unit id="5596d7a7c540b768140fc8e0589b7003ee3db084" translate="yes" xml:space="preserve">
          <source>, record debugging information describing them as if the files resided in directory</source>
          <target state="translated">，记录描述它们的调试信息，就像文件位于目录中一样</target>
        </trans-unit>
        <trans-unit id="a257c20cceb3376fd5c996cb7d116ca7848455c5" translate="yes" xml:space="preserve">
          <source>, regardless of the order of the options on the command line.</source>
          <target state="translated">，无论命令行上选项的顺序如何。</target>
        </trans-unit>
        <trans-unit id="12d501570d9936bde7534d9241ac0db13d604a8d" translate="yes" xml:space="preserve">
          <source>, respectively.</source>
          <target state="translated">， 分别。</target>
        </trans-unit>
        <trans-unit id="5bb4669872f9d1911aecb2ff977742a0d6c1e477" translate="yes" xml:space="preserve">
          <source>, see &lt;a href=&quot;avr-options#AVR-Options&quot;&gt;AVR Options&lt;/a&gt;.</source>
          <target state="translated">，请参阅&lt;a href=&quot;avr-options#AVR-Options&quot;&gt;AVR选项&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="af7e2fbf0415afcfbd5453b3d8148325e06b13e2" translate="yes" xml:space="preserve">
          <source>, see &lt;a href=&quot;optimize-options#Optimize-Options&quot;&gt;Optimize Options&lt;/a&gt;), and if GNU Binutils support &lt;a href=&quot;https://sourceware.org/PR21683&quot;&gt;PR21683&lt;/a&gt;.</source>
          <target state="translated">，请参阅&lt;a href=&quot;optimize-options#Optimize-Options&quot;&gt;优化选项&lt;/a&gt;），以及GNU Binutils是否支持&lt;a href=&quot;https://sourceware.org/PR21683&quot;&gt;PR21683&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f23b4d8e2af9ccece653777203cc633cc8613584" translate="yes" xml:space="preserve">
          <source>, since floating-point division by zero can be a legitimate way of obtaining infinities and NaNs.</source>
          <target state="translated">，因为将浮点数除以零可能是获得无穷大和NaN的合法方法。</target>
        </trans-unit>
        <trans-unit id="48743acb3c50007ccd27cb69772fa5958efec8aa" translate="yes" xml:space="preserve">
          <source>, since it usually increases code size.</source>
          <target state="translated">，因为它通常会增加代码大小。</target>
        </trans-unit>
        <trans-unit id="1142d002e80f61cb8906ee6ff983e94d926cb47b" translate="yes" xml:space="preserve">
          <source>, since slightly larger code is generated when</source>
          <target state="translated">，因为当</target>
        </trans-unit>
        <trans-unit id="8489f86e2aa5976abda688075895e8c118642126" translate="yes" xml:space="preserve">
          <source>, since there are errors enabled by this option and not enabled by the latter and vice versa.</source>
          <target state="translated">，因为此选项启用了错误，而该选项未启用，反之亦然。</target>
        </trans-unit>
        <trans-unit id="94ac58ccd302f428780f22989ed14b633a5da687" translate="yes" xml:space="preserve">
          <source>, so a lot of code can be recompiled with</source>
          <target state="translated">，因此许多代码都可以重新编译</target>
        </trans-unit>
        <trans-unit id="7164620902b23499669819ffa895173a5aa25027" translate="yes" xml:space="preserve">
          <source>, so that the libraries leave more room for the main program.</source>
          <target state="translated">，以便库为主程序留出更多空间。</target>
        </trans-unit>
        <trans-unit id="68680f64842e4482b6c97e2407b39d9d533a072a" translate="yes" xml:space="preserve">
          <source>, specifies a file to write the dependencies to. If no</source>
          <target state="translated">，指定要写入依赖项的文件。如果不</target>
        </trans-unit>
        <trans-unit id="3a902c43a69a00e9f2cfce60ce9290e659912859" translate="yes" xml:space="preserve">
          <source>, strip mine each loop in the loop nest by a given number of iterations. The strip length can be changed using the</source>
          <target state="translated">，以给定的迭代次数剥离循环嵌套中的每个循环。可以使用</target>
        </trans-unit>
        <trans-unit id="3b9b4086b33c372adc8859729f0f2fda99df10f0" translate="yes" xml:space="preserve">
          <source>, such that it is linked with the shared</source>
          <target state="translated">，使其与共享链接</target>
        </trans-unit>
        <trans-unit id="a3ab4b910db14b52efa18ff9cf025cb41c0d39a2" translate="yes" xml:space="preserve">
          <source>, tells the compiler to not pass</source>
          <target state="translated">，告诉编译器不通过</target>
        </trans-unit>
        <trans-unit id="a9bcafc2113daaac812f1518346b8bb3f4ad5920" translate="yes" xml:space="preserve">
          <source>, the</source>
          <target state="translated">，</target>
        </trans-unit>
        <trans-unit id="2b63f3bf562cc464d10a5f414760217b5e6be781" translate="yes" xml:space="preserve">
          <source>, the &lt;code&gt;gcc&lt;/code&gt; program instead returns with the numerically highest error produced by any phase returning an error indication. The C, C++, and Fortran front ends return 4 if an internal compiler error is encountered.</source>
          <target state="translated">，则 &lt;code&gt;gcc&lt;/code&gt; 程序将返回由任何相位返回错误指示而产生的数值最高的错误。如果遇到内部编译器错误，则C，C ++和Fortran前端返回4。</target>
        </trans-unit>
        <trans-unit id="ac3ce9581fef6bdbd359e9f45a5a99604a8cf6c7" translate="yes" xml:space="preserve">
          <source>, the Pentium Pro instruction set is used, so the code runs on all i686 family chips. When used with</source>
          <target state="translated">，因为使用了Pentium Pro指令集，所以代码可以在所有i686系列芯片上运行。当与</target>
        </trans-unit>
        <trans-unit id="fa194889cd144e6bbf27af39f845ba26d861d086" translate="yes" xml:space="preserve">
          <source>, the command</source>
          <target state="translated">， 命令</target>
        </trans-unit>
        <trans-unit id="e92a035b4927c9fce1d07fc2c810360ae211e587" translate="yes" xml:space="preserve">
          <source>, the compiler additionally optimizes it for Oracle M8 chips.</source>
          <target state="translated">，该编译器还针对Oracle M8芯片对其进行了优化。</target>
        </trans-unit>
        <trans-unit id="6a39a5fbbad7fe0ed957cc74cab0d30798133fa7" translate="yes" xml:space="preserve">
          <source>, the compiler additionally optimizes it for Oracle SPARC M7 chips. With</source>
          <target state="translated">，该编译器还针对Oracle SPARC M7芯片对其进行了优化。用</target>
        </trans-unit>
        <trans-unit id="1ac0c6c3a7e57517af6c1fd4d8c2f4ab55e3234b" translate="yes" xml:space="preserve">
          <source>, the compiler additionally optimizes it for Sun UltraSPARC T1 chips. With</source>
          <target state="translated">，该编译器还针对Sun UltraSPARC T1芯片对其进行了优化。用</target>
        </trans-unit>
        <trans-unit id="a5cb47d14afa8a18feae7e3577d1c2f7f39aa3a3" translate="yes" xml:space="preserve">
          <source>, the compiler additionally optimizes it for Sun UltraSPARC T2 chips. With</source>
          <target state="translated">，该编译器还针对Sun UltraSPARC T2芯片对其进行了优化。用</target>
        </trans-unit>
        <trans-unit id="4372efad9448f8e7c66d51c59cc8061f932390e7" translate="yes" xml:space="preserve">
          <source>, the compiler additionally optimizes it for Sun UltraSPARC T3 chips. With</source>
          <target state="translated">，该编译器还针对Sun UltraSPARC T3芯片对其进行了优化。用</target>
        </trans-unit>
        <trans-unit id="04c02ac5cdda7b9f9e1bd562613ee0b12cbaa11d" translate="yes" xml:space="preserve">
          <source>, the compiler additionally optimizes it for Sun UltraSPARC T4 chips. With</source>
          <target state="translated">，该编译器还针对Sun UltraSPARC T4芯片对其进行了优化。用</target>
        </trans-unit>
        <trans-unit id="fe8343d3123cbd58bc0f4cfc4dca465aa9ceca09" translate="yes" xml:space="preserve">
          <source>, the compiler additionally optimizes it for the Cypress CY7C602 chip, as used in the SPARCStation/SPARCServer 3xx series. This is also appropriate for the older SPARCStation 1, 2, IPX etc.</source>
          <target state="translated">，编译器还针对SPARCStation / SPARCServer 3xx系列中使用的Cypress CY7C602芯片对其进行了优化。这也适用于较旧的SPARCStation 1、2，IPX等。</target>
        </trans-unit>
        <trans-unit id="1e916d47d43e0128f6a11b321665069d28bed521" translate="yes" xml:space="preserve">
          <source>, the compiler additionally optimizes it for the Fujitsu MB86930 chip, which is the original SPARClite, with no FPU. With</source>
          <target state="translated">，编译器还会针对富士通MB86930芯片（不带FPU的原始SPARClite）对其进行优化。用</target>
        </trans-unit>
        <trans-unit id="59e587eb3c489ffd26283628358ebe3722a023bf" translate="yes" xml:space="preserve">
          <source>, the compiler additionally optimizes it for the Fujitsu MB86934 chip, which is the more recent SPARClite with FPU.</source>
          <target state="translated">，编译器还会针对富士通MB86934芯片进行优化，该芯片是最新的带有FPU的SPARClite。</target>
        </trans-unit>
        <trans-unit id="7d99095dcd3228954410a8eb6f64d85dbeae0243" translate="yes" xml:space="preserve">
          <source>, the compiler additionally optimizes it for the Sun UltraSPARC I/II/IIi chips. With</source>
          <target state="translated">，编译器还针对Sun UltraSPARC I / II / IIi芯片对其进行了优化。用</target>
        </trans-unit>
        <trans-unit id="841fa825f3bff788d457becd582c25c57258d89d" translate="yes" xml:space="preserve">
          <source>, the compiler additionally optimizes it for the Sun UltraSPARC III/III+/IIIi/IIIi+/IV/IV+ chips. With</source>
          <target state="translated">，编译器还针对Sun UltraSPARC III / III + / IIIi / IIIi + / IV / IV +芯片对其进行了优化。用</target>
        </trans-unit>
        <trans-unit id="858687102dd55ff8fc87c92e71e8832cd4e35c97" translate="yes" xml:space="preserve">
          <source>, the compiler additionally optimizes it for the SuperSPARC chip, as used in the SPARCStation 10, 1000 and 2000 series.</source>
          <target state="translated">，该编译器还针对SPARCStation 10、1000和2000系列中使用的SuperSPARC芯片对其进行了优化。</target>
        </trans-unit>
        <trans-unit id="aecd3e58e2014147bddadb0ae32ec7d9dee9a11b" translate="yes" xml:space="preserve">
          <source>, the compiler additionally optimizes it for the TEMIC SPARClet chip.</source>
          <target state="translated">，编译器还会针对TEMIC SPARClet芯片对其进行优化。</target>
        </trans-unit>
        <trans-unit id="a86eac710e38d27a598505cf74f39473202849dd" translate="yes" xml:space="preserve">
          <source>, the compiler assumes that structures should have 8-byte alignment. This enables the use of pairs of &lt;code&gt;ldd&lt;/code&gt; and &lt;code&gt;std&lt;/code&gt; instructions for copies in structure assignment, in place of twice as many &lt;code&gt;ld&lt;/code&gt; and &lt;code&gt;st&lt;/code&gt; pairs. However, the use of this changed alignment directly violates the SPARC ABI. Thus, it&amp;rsquo;s intended only for use on targets where the developer acknowledges that their resulting code is not directly in line with the rules of the ABI.</source>
          <target state="translated">，编译器假定结构应具有8字节对齐。这样就可以将成对的 &lt;code&gt;ldd&lt;/code&gt; 和 &lt;code&gt;std&lt;/code&gt; 指令用于结构分配中的副本，而不是两倍的 &lt;code&gt;ld&lt;/code&gt; 和 &lt;code&gt;st&lt;/code&gt; 对。但是，使用此更改的对齐方式直接违反了SPARC ABI。因此，它仅适用于开发人员承认其最终代码与ABI规则不完全一致的目标。</target>
        </trans-unit>
        <trans-unit id="6e95df22d51cc97b41caac28bfc5b9326fa6b5f0" translate="yes" xml:space="preserve">
          <source>, the compiler could use the extended instruction sets even if the built-ins are not used explicitly in the program. For this reason, applications that perform run-time CPU detection must compile separate files for each supported architecture, using the appropriate flags. In particular, the file containing the CPU detection code should be compiled without these options.</source>
          <target state="translated">，即使没有在程序中显式使用内置函数，编译器也可以使用扩展指令集。因此，执行运行时CPU检测的应用程序必须使用适当的标志为每个受支持的体系结构编译单独的文件。特别是，包含CPU检测代码的文件应在没有这些选项的情况下进行编译。</target>
        </trans-unit>
        <trans-unit id="ffdc7f53e47734d83c7e14a48d5c0f0132cfcca4" translate="yes" xml:space="preserve">
          <source>, the compiler does not generate save/restore instructions and uses a &amp;ldquo;flat&amp;rdquo; or single register window model. This model is compatible with the regular register window model. The local registers and the input registers (0&amp;ndash;5) are still treated as &amp;ldquo;call-saved&amp;rdquo; registers and are saved on the stack as needed.</source>
          <target state="translated">，编译器不会生成保存/恢复指令，而是使用&amp;ldquo;平面&amp;rdquo;或单寄存器窗口模型。该模型与常规寄存器窗口模型兼容。本地寄存器和输入寄存器（0-5）仍被视为&amp;ldquo;调用保存&amp;rdquo;寄存器，并根据需要保存在堆栈中。</target>
        </trans-unit>
        <trans-unit id="69e78890820dcd7f981ed8ef33a3a8c043e8ebf1" translate="yes" xml:space="preserve">
          <source>, the compiler generates checking code in functions returning structures or unions to detect size mismatches between the two sides of function calls, as per the 32-bit ABI.</source>
          <target state="translated">，编译器会根据32位ABI在返回结构或并集的函数中生成检查代码，以检测函数调用两侧之间的大小不匹配。</target>
        </trans-unit>
        <trans-unit id="428fba5d393e56eabf7998e3fc175cb944f8ad09" translate="yes" xml:space="preserve">
          <source>, the compiler tries to reduce code size and execution time, without performing any optimizations that take a great deal of compilation time.</source>
          <target state="translated">，编译器会尝试减少代码大小和执行时间，而不执行任何占用大量编译时间的优化。</target>
        </trans-unit>
        <trans-unit id="daf303df50714bc573b14a3f51a8300fe4c948bd" translate="yes" xml:space="preserve">
          <source>, the declaration of the function is diagnosed as well.</source>
          <target state="translated">，功能的声明也会被诊断。</target>
        </trans-unit>
        <trans-unit id="3026241c180440d0e9f94ba76190f2ca96852cd8" translate="yes" xml:space="preserve">
          <source>, the default for GCC 5.1.</source>
          <target state="translated">，是GCC 5.1的默认设置。</target>
        </trans-unit>
        <trans-unit id="692722d8e42a4b8d2a2c2032a7f0a3bed13e40ff" translate="yes" xml:space="preserve">
          <source>, the default for GCC 5.2.</source>
          <target state="translated">，是GCC 5.2的默认设置。</target>
        </trans-unit>
        <trans-unit id="c8c05f1d08fd7c0969883bbc9f062051a4b0a7b0" translate="yes" xml:space="preserve">
          <source>, the default for GCC 6.1.</source>
          <target state="translated">，是GCC 6.1的默认设置。</target>
        </trans-unit>
        <trans-unit id="b6fc73f89ebea91385b893380c45e9780bb3d84a" translate="yes" xml:space="preserve">
          <source>, the default is &amp;ldquo;on&amp;rdquo; for ColdFire architectures and &amp;ldquo;off&amp;rdquo; for M680x0 architectures. Otherwise, the default is taken from the target CPU (either the default CPU, or the one specified by</source>
          <target state="translated">，对于ColdFire架构，默认值为&amp;ldquo; on&amp;rdquo;；对于M680x0架构，默认值为&amp;ldquo; off&amp;rdquo;。否则，将从目标CPU（默认CPU或由</target>
        </trans-unit>
        <trans-unit id="772f6bbc0f9a324fca50c11ff8483df72f8e4584" translate="yes" xml:space="preserve">
          <source>, the default, causes the extra information to be omitted and is useful when comparing two assembler files.</source>
          <target state="translated">（默认值）会导致多余的信息被忽略，并且在比较两个汇编文件时非常有用。</target>
        </trans-unit>
        <trans-unit id="b4cd5e116a47d28493b581dcab5dad877c0c34fd" translate="yes" xml:space="preserve">
          <source>, the files with the profile feedback can fail to match the source file and GCC cannot use the profile feedback information. By default, this warning is enabled and is treated as an error.</source>
          <target state="translated">，具有配置文件反馈的文件可能无法与源文件匹配，并且GCC无法使用配置文件反馈信息。默认情况下，此警告处于启用状态，并被视为错误。</target>
        </trans-unit>
        <trans-unit id="49cbd8fc1988c38d8b75e8d548b8bb8d2f822f61" translate="yes" xml:space="preserve">
          <source>, the final executable will try to create the data file</source>
          <target state="translated">，最终的可执行文件将尝试创建数据文件</target>
        </trans-unit>
        <trans-unit id="815a1ce8e00e3334738617eb00c2c9266ebafe03" translate="yes" xml:space="preserve">
          <source>, the generated object file is larger than a regular object file because it contains GIMPLE bytecodes and the usual final code (see</source>
          <target state="translated">，则生成的目标文件要比常规目标文件大，因为它包含GIMPLE字节码和通常的最终代码（请参见</target>
        </trans-unit>
        <trans-unit id="93c87c2482200581ada6b793353d563f5ec679ac" translate="yes" xml:space="preserve">
          <source>, the library that comes with GCC, with</source>
          <target state="translated">，GCC随附的库，</target>
        </trans-unit>
        <trans-unit id="b7a1837ffa642bc6e9d87b5530ec03163e746678" translate="yes" xml:space="preserve">
          <source>, the literals are interspersed in the text section in order to keep them as close as possible to their references. This may be necessary for large assembly files. Literals for each function are placed right before that function.</source>
          <target state="translated">，文字会散布在文本部分中，以使其尽可能接近其引用。对于大型程序集文件，这可能是必需的。每个函数的文字都放在该函数之前。</target>
        </trans-unit>
        <trans-unit id="3874c30a889fc4550891f54d685ec72df06fd5db" translate="yes" xml:space="preserve">
          <source>, the normal function prologue and epilogue which set up the stack frame are omitted and no return instructions or return sequences are generated in the code. Use this option only together with visual inspection of the compiled code: no warnings or errors are generated when call-saved registers must be saved, or storage for local variables needs to be allocated.</source>
          <target state="translated">，将省略设置堆栈框架的常规函数​​序言和结尾，并且在代码中不会生成任何返回指令或返回序列。仅在视觉检查编译的代码时使用此选项：必须保存调用保存的寄存器或需要分配用于局部变量的存储时，不会生成任何警告或错误。</target>
        </trans-unit>
        <trans-unit id="50289040a36706f3a23d65e893eec4854af6d2e0" translate="yes" xml:space="preserve">
          <source>, the object file for</source>
          <target state="translated">，目标文件</target>
        </trans-unit>
        <trans-unit id="4f57e72cae764cab6dfaa8a6b984d61c8fcfcea0" translate="yes" xml:space="preserve">
          <source>, the profiling code first attempts to read in an existing</source>
          <target state="translated">，分析代码首先尝试读取现有的</target>
        </trans-unit>
        <trans-unit id="c6a1f5530e3d7b4711a9e708a49cfd47c423f4f7" translate="yes" xml:space="preserve">
          <source>, the rules for</source>
          <target state="translated">，规则</target>
        </trans-unit>
        <trans-unit id="8699bd16ca7024ea46de08dda1f9050558b25386" translate="yes" xml:space="preserve">
          <source>, the sign of the remainder follows the sign of the dividend. Both methods are arithmetically valid, the latter being almost exclusively used.</source>
          <target state="translated">，余数的符号跟随分红的符号。两种方法在算术上都是有效的，后者几乎是唯一使用的。</target>
        </trans-unit>
        <trans-unit id="29acbd1d62bfd215ea629596b9c554886b91017d" translate="yes" xml:space="preserve">
          <source>, the single-application/dual-core programming model is used. In this model, the main function of Core B should be named as &lt;code&gt;coreb_main&lt;/code&gt;.</source>
          <target state="translated">，则使用单应用程序/双核编程模型。在此模型中，核心B的主要功能应命名为 &lt;code&gt;coreb_main&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="667fda1f9e48385c0210894fbc7037623d1a4111" translate="yes" xml:space="preserve">
          <source>, the structure is aligned to a 1-byte boundary and is 1 byte in size.</source>
          <target state="translated">，该结构与1字节边界对齐，大小为1字节。</target>
        </trans-unit>
        <trans-unit id="e189049326051591313d1c5688fafbf491aeaf0f" translate="yes" xml:space="preserve">
          <source>, then</source>
          <target state="translated">， 然后</target>
        </trans-unit>
        <trans-unit id="7ee186a18ff42c73f0354082e8ef090089e5effc" translate="yes" xml:space="preserve">
          <source>, then running &lt;code&gt;gcov&lt;/code&gt; on the file</source>
          <target state="translated">，然后在文件上运行 &lt;code&gt;gcov&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6fd5514ee17d5d19d7515ba2ea9a77e61ac8a324" translate="yes" xml:space="preserve">
          <source>, then the dependencies are written to</source>
          <target state="translated">，然后将依赖项写入</target>
        </trans-unit>
        <trans-unit id="f4b8fa8d9a1275fa5b175ea2e48216447ff905c8" translate="yes" xml:space="preserve">
          <source>, then the precompiled header file is used if possible, and the original header is used otherwise.</source>
          <target state="translated">，则如果可能，将使用预编译的头文件，否则将使用原始头。</target>
        </trans-unit>
        <trans-unit id="564c028c79c98b2596f511c52750e11cf8ed8aa0" translate="yes" xml:space="preserve">
          <source>, then you must disable instrumentation on all functions that are part of the instrumentation framework with the attribute &lt;code&gt;patchable_function_entry (0)&lt;/code&gt; to prevent recursion.</source>
          <target state="translated">，则必须使用属性 &lt;code&gt;patchable_function_entry (0)&lt;/code&gt; 禁用属于检测框架一部分的所有功能的检测，以防止递归。</target>
        </trans-unit>
        <trans-unit id="e8d64d7606f91920bd635808a8350a26f4f43160" translate="yes" xml:space="preserve">
          <source>, then:</source>
          <target state="translated">， 然后：</target>
        </trans-unit>
        <trans-unit id="18b1ddc03f8c4f7114c6642a980a4266ab4ee91d" translate="yes" xml:space="preserve">
          <source>, there is a small window between the time that the stack pointer is updated and the address of the previous frame is stored, which means code that walks the stack frame across interrupts or signals may get corrupted data.</source>
          <target state="translated">，在更新堆栈指针和存储前一帧的地址之间有一个小窗口，这意味着在中断或信号中遍历堆栈帧的代码或信号可能会损坏数据。</target>
        </trans-unit>
        <trans-unit id="50141233a4a222a2ad6dabbea63d30e01eee8b71" translate="yes" xml:space="preserve">
          <source>, there may not be much stack space available for the latter code to run. If compiling all code, including library code, with</source>
          <target state="translated">，可能没有太多堆栈空间可用于运行后面的代码。如果使用编译所有代码，包括库代码</target>
        </trans-unit>
        <trans-unit id="326afd2af91c7cd70009eaf4d8cb90f6936cddbc" translate="yes" xml:space="preserve">
          <source>, they invoke &lt;code&gt;rdval&lt;/code&gt; and &lt;code&gt;wrval&lt;/code&gt;.</source>
          <target state="translated">，它们调用 &lt;code&gt;rdval&lt;/code&gt; 和 &lt;code&gt;wrval&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4b91ca3210bb29fc4dfea84458ae04652f30e451" translate="yes" xml:space="preserve">
          <source>, this causes the compiler to keep track of the total number of virtual calls it encounters and the number of verifications it inserts. It also counts the number of calls to certain run-time library functions that it inserts and logs this information for each compilation unit. The compiler writes this information to a file named</source>
          <target state="translated">，这会使编译器跟踪其遇到的虚拟调用总数以及插入的验证次数。它还计算插入的某些运行时库函数的调用次数，并为每个编译单元记录此信息。编译器将此信息写到名为</target>
        </trans-unit>
        <trans-unit id="f01188017d3c123848733d9fd6dfb22206ff1e87" translate="yes" xml:space="preserve">
          <source>, this is what you see when you use the basic &lt;code&gt;gcov&lt;/code&gt; facility:</source>
          <target state="translated">，这是使用基本 &lt;code&gt;gcov&lt;/code&gt; 工具时看到的内容：</target>
        </trans-unit>
        <trans-unit id="5e5bfa587207f7380ee4c3bb705530423614bbd5" translate="yes" xml:space="preserve">
          <source>, this optimization can be performed by the assembler and the linker alone without help from the compiler.</source>
          <target state="translated">，此优化可以仅由汇编器和链接器执行，而无需编译器的帮助。</target>
        </trans-unit>
        <trans-unit id="8d459e76328a6d385857ebd663c3475f17a65af0" translate="yes" xml:space="preserve">
          <source>, this option has no effect.</source>
          <target state="translated">，此选项无效。</target>
        </trans-unit>
        <trans-unit id="7d3c6490f4076f4eee8ed0cae6ad3221f0b61401" translate="yes" xml:space="preserve">
          <source>, this option increases both compilation time and the performance of the generated code.</source>
          <target state="translated">，此选项会增加编译时间和所生成代码的性能。</target>
        </trans-unit>
        <trans-unit id="d8fd13fa8750caa49540ff0768629b8cca833a35" translate="yes" xml:space="preserve">
          <source>, this option instructs the compiler to add code to gather information about values of expressions.</source>
          <target state="translated">，此选项指示编译器添加代码以收集有关表达式值的信息。</target>
        </trans-unit>
        <trans-unit id="429b287e8d0f22a8e7c02112f3cd1eb77566d212" translate="yes" xml:space="preserve">
          <source>, those directories are searched for all &amp;lsquo;</source>
          <target state="translated">，则在这些目录中搜索所有&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="4d73a0b8dae23d131af59205c0f51492334fc033" translate="yes" xml:space="preserve">
          <source>, those options take precedence over the appropriate part of this option.</source>
          <target state="translated">，这些选项优先于此选项的适当部分。</target>
        </trans-unit>
        <trans-unit id="32971533b36b13d8be7306c0655e0cba1b20c8f9" translate="yes" xml:space="preserve">
          <source>, though this could be supported for 68020 and higher processors.</source>
          <target state="translated">，尽管68020及更高版本的处理器可以支持此功能。</target>
        </trans-unit>
        <trans-unit id="ac0255e1660d4339b2ecf6c91d1ccb336078135f" translate="yes" xml:space="preserve">
          <source>, to improve optimizations based on the number of times each branch was taken. When a program compiled with</source>
          <target state="translated">，以根据每个分支的使用次数来改善优化。当程序编译时</target>
        </trans-unit>
        <trans-unit id="ac44f21a3de295129d64b5a774011adcf28ae140" translate="yes" xml:space="preserve">
          <source>, turn on other options, such as</source>
          <target state="translated">，打开其他选项，例如</target>
        </trans-unit>
        <trans-unit id="446f5cf91d366f03eddeeaf354f183b84e577619" translate="yes" xml:space="preserve">
          <source>, type-punning is allowed, provided the memory is accessed through the union type. So, the code above works as expected. See &lt;a href=&quot;structures-unions-enumerations-and-bit_002dfields-implementation#Structures-unions-enumerations-and-bit_002dfields-implementation&quot;&gt;Structures unions enumerations and bit-fields implementation&lt;/a&gt;. However, this code might not:</source>
          <target state="translated">，如果通过联合类型访问内存，则允许进行类型修改。因此，上面的代码按预期工作。请参见&lt;a href=&quot;structures-unions-enumerations-and-bit_002dfields-implementation#Structures-unions-enumerations-and-bit_002dfields-implementation&quot;&gt;结构联合枚举和位域实现&lt;/a&gt;。但是，此代码可能不会：</target>
        </trans-unit>
        <trans-unit id="3eb3379edebd14fb24a32aa3130ec6c35394eeb8" translate="yes" xml:space="preserve">
          <source>, unless</source>
          <target state="translated">，除非</target>
        </trans-unit>
        <trans-unit id="ac2274935835d1d79884f7f27c0ba51679421f90" translate="yes" xml:space="preserve">
          <source>, used in addition to</source>
          <target state="translated">，除了</target>
        </trans-unit>
        <trans-unit id="a56bae807872361f6ddda9c5d7baa9d2dc802cb0" translate="yes" xml:space="preserve">
          <source>, warnings are given about format features not in the selected standard version (but not for &lt;code&gt;strfmon&lt;/code&gt; formats, since those are not in any version of the C standard). See &lt;a href=&quot;c-dialect-options#C-Dialect-Options&quot;&gt;Options Controlling C Dialect&lt;/a&gt;.</source>
          <target state="translated">时，会发出有关所选标准版本中没有的格式功能的警告（但不会针对 &lt;code&gt;strfmon&lt;/code&gt; 格式发出警告，因为这些功能不在C标准的任何版本中）。请参阅&lt;a href=&quot;c-dialect-options#C-Dialect-Options&quot;&gt;控制C语言的选项&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="88a2f4ea153e2f7cf779ca618429b6ec5801bf5c" translate="yes" xml:space="preserve">
          <source>, where &lt;var&gt;N&lt;/var&gt; is a number in the range 0 to 9, then it is replaced by</source>
          <target state="translated">，其中 &lt;var&gt;N&lt;/var&gt; 是0到9之间的数字，然后将其替换为</target>
        </trans-unit>
        <trans-unit id="4756ea8500a07b5870d68c2dc4135f0e24797100" translate="yes" xml:space="preserve">
          <source>, where the &lt;var&gt;source-file&lt;/var&gt; component is the final filename part and the &lt;var&gt;md5&lt;/var&gt; component is calculated from the full mangled name that would have been used otherwise. The option is an alternative to the &lt;var&gt;&amp;ndash;preserve-paths&lt;/var&gt; on systems which have a filesystem limit.</source>
          <target state="translated">，其中 &lt;var&gt;source-file&lt;/var&gt; 组件是文件名的最后一部分，而 &lt;var&gt;md5&lt;/var&gt; 组件是根据完整改写的名称计算出来的，否则该名称会被使用。在具有文件系统限制的系统上，该选项是 &lt;var&gt;&amp;ndash;preserve-paths&lt;/var&gt; 的替代。</target>
        </trans-unit>
        <trans-unit id="230f86319e28b7455f7d53c3723a16687bfdfc57" translate="yes" xml:space="preserve">
          <source>, where the permissible values for &lt;var&gt;cpu&lt;/var&gt; are the same as those available for</source>
          <target state="translated">，其中 &lt;var&gt;cpu&lt;/var&gt; 的允许值与可用于</target>
        </trans-unit>
        <trans-unit id="2254d7466842a921ec0e93daa8a81e8d02ab2cfb" translate="yes" xml:space="preserve">
          <source>, which GCC rejects as an invalid option in any actual compilation (rather than preprocessing, assembly or linking). To get just a warning, setting &lt;code&gt;GCC_COMPARE_DEBUG&lt;/code&gt; to &amp;lsquo;</source>
          <target state="translated">，在任何实际的编译中（而不是预处理，汇编或链接），GCC都会将其视为无效选项。要仅获得警告， &lt;code&gt;GCC_COMPARE_DEBUG&lt;/code&gt; 设置为&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="e989e4cf45165ab34bb6bb136c281cdf9203ee24" translate="yes" xml:space="preserve">
          <source>, which allows GCC to inline most constant-sized copies.</source>
          <target state="translated">，这使GCC可以内联大多数恒定尺寸的副本。</target>
        </trans-unit>
        <trans-unit id="46699ca278faeacb3ea5e4e0e6aa330bfab42c0d" translate="yes" xml:space="preserve">
          <source>, which applies only to functions that are declared using the &lt;code&gt;dllexport&lt;/code&gt; attribute or declspec. See &lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;Declaring Attributes of Functions&lt;/a&gt;.</source>
          <target state="translated">，仅适用于使用 &lt;code&gt;dllexport&lt;/code&gt; 属性或declspec 声明的函数。请参见&lt;a href=&quot;function-attributes#Function-Attributes&quot;&gt;声明函数的属性&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cd54cb18e1d323986e9f863c779e1f697545e855" translate="yes" xml:space="preserve">
          <source>, which can be disabled with</source>
          <target state="translated">，可以通过以下方式禁用</target>
        </trans-unit>
        <trans-unit id="06b72facf8cc43915080a973ea5dda407d52591f" translate="yes" xml:space="preserve">
          <source>, which causes the compiler to recognize the same Objective-C language syntax recognized by GCC 4.0, and to produce an error if one of the new features is used.</source>
          <target state="translated">，这会使编译器识别出GCC 4.0识别的相同的Objective-C语言语法，并且如果使用新功能之一，则会产生错误。</target>
        </trans-unit>
        <trans-unit id="2de0e70e7120f7592acf3b303b06e39b57acee0c" translate="yes" xml:space="preserve">
          <source>, which disables the dumping of the final representation and the second compilation, preventing even &lt;code&gt;GCC_COMPARE_DEBUG&lt;/code&gt; from taking effect.</source>
          <target state="translated">，它会禁止转储最终表示形式和第二次编译，从而甚至阻止了 &lt;code&gt;GCC_COMPARE_DEBUG&lt;/code&gt; 生效。</target>
        </trans-unit>
        <trans-unit id="10e713fcad2fa12372ddfaea05c7df9060097043" translate="yes" xml:space="preserve">
          <source>, which implies</source>
          <target state="translated">，这意味着</target>
        </trans-unit>
        <trans-unit id="f2f82387a05712f0b55c15013dd25fcda2c6d51f" translate="yes" xml:space="preserve">
          <source>, which is also one of the effective C++ recommendations. However, the check is extended to warn about the lack of virtual destructor in accessible non-polymorphic bases classes too.</source>
          <target state="translated">，这也是有效的C ++建议之一。但是，该检查扩展为警告可访问的非多态基类中也缺少虚拟析构函数。</target>
        </trans-unit>
        <trans-unit id="8d738471a73ffb8b526b91636ca0ef2885217f80" translate="yes" xml:space="preserve">
          <source>, which is enabled by</source>
          <target state="translated">，由启用</target>
        </trans-unit>
        <trans-unit id="4502a0e761188e5c8233a9411a8864fc6121c93b" translate="yes" xml:space="preserve">
          <source>, which is enabled by default at</source>
          <target state="translated">，默认情况下启用</target>
        </trans-unit>
        <trans-unit id="7b03cadb73bdb5b121b37c664acf4102564be1aa" translate="yes" xml:space="preserve">
          <source>, which is on by default at</source>
          <target state="translated">，默认情况下位于</target>
        </trans-unit>
        <trans-unit id="65e8924d8e634e11e3e3c8423a5c0bf3ec344ab3" translate="yes" xml:space="preserve">
          <source>, which is still supported, because it does not use shell special characters.</source>
          <target state="translated">，仍受支持，因为它不使用shell特殊字符。</target>
        </trans-unit>
        <trans-unit id="6ce4b030ad0c9a1e1625f5d28ae9b41b1de635be" translate="yes" xml:space="preserve">
          <source>, which is the negative form of</source>
          <target state="translated">，这是的否定形式</target>
        </trans-unit>
        <trans-unit id="6ec90d1ff3ca86f96f89ef39059823f9658e3e1e" translate="yes" xml:space="preserve">
          <source>, which may turn on further options, such as</source>
          <target state="translated">，这可能会打开其他选项，例如</target>
        </trans-unit>
        <trans-unit id="082e8aad8694962e494d7d77884c7dfe5926bb26" translate="yes" xml:space="preserve">
          <source>, which merely tunes the generated code for the specified &lt;var&gt;cpu-type&lt;/var&gt;,</source>
          <target state="translated">，它仅会针对指定的 &lt;var&gt;cpu-type&lt;/var&gt; 调整生成的代码，</target>
        </trans-unit>
        <trans-unit id="f59e35e5dc78b628f6809a4752d27ac48bb1f008" translate="yes" xml:space="preserve">
          <source>, which must come from a separate C library implementation. Because of this the GNU C compiler does not define macro &lt;code&gt;__STDC_DEC_FP__&lt;/code&gt; to indicate that the implementation conforms to the technical report.</source>
          <target state="translated">，它必须来自单独的C库实现。因此，GNU C编译器未定义宏 &lt;code&gt;__STDC_DEC_FP__&lt;/code&gt; 来指示实现符合技术报告。</target>
        </trans-unit>
        <trans-unit id="9578678819c9dfdf597d5e59c8c2d0c2abbab9d6" translate="yes" xml:space="preserve">
          <source>, which places literals in a separate section in the output file unless</source>
          <target state="translated">，除非将文字放在输出文件的单独部分中，除非</target>
        </trans-unit>
        <trans-unit id="883ecbd65c15c80691c67d2f907d5c7aa2ef6aac" translate="yes" xml:space="preserve">
          <source>, which places literals in a separate section in the output file. This allows the literal pool to be placed in a data RAM/ROM, and it also allows the linker to combine literal pools from separate object files to remove redundant literals and improve code size. With</source>
          <target state="translated">，将文字放在输出文件的单独部分中。这允许将文字池放置在数据RAM / ROM中，并且还允许链接程序将来自单独目标文件的文字池组合在一起，以删除冗余文字并提高代码大小。用</target>
        </trans-unit>
        <trans-unit id="c4a3cc602f61d3b174e82540c1b8773914df0766" translate="yes" xml:space="preserve">
          <source>, which selects the one-application-per-core programming model. Without</source>
          <target state="translated">，它选择了每个内核一个应用程序的编程模型。不带</target>
        </trans-unit>
        <trans-unit id="fa953aa1d2a4a6171c0b8ff19c074aba480082a9" translate="yes" xml:space="preserve">
          <source>, which serves for most needs.</source>
          <target state="translated">，可满足大多数需求。</target>
        </trans-unit>
        <trans-unit id="a4f2d97a4a669aa53418fe3954e59b741a6fbbdf" translate="yes" xml:space="preserve">
          <source>, which tells GCC to ignore the attribute for inlined functions unless the</source>
          <target state="translated">，它告诉GCC忽略内联函数的属性，除非</target>
        </trans-unit>
        <trans-unit id="09a4ee6a5e86260dc3373c4048b2d477f6cfcda4" translate="yes" xml:space="preserve">
          <source>, which uses DImode as preferred SIMD mode.</source>
          <target state="translated">，它使用DImode作为首选SIMD模式。</target>
        </trans-unit>
        <trans-unit id="6f76a67230e5947e1c451436d1b658485d290c47" translate="yes" xml:space="preserve">
          <source>, which uses slower, but IEEE-compliant, software comparisons.</source>
          <target state="translated">，它使用速度较慢但符合IEEE标准的软件比较。</target>
        </trans-unit>
        <trans-unit id="556b07890fce44f6b6132283c9ed18c93acca22b" translate="yes" xml:space="preserve">
          <source>, which warns about any identifier that is not in the ISO 10646 &amp;ldquo;C&amp;rdquo; normalized form, &lt;em&gt;NFC&lt;/em&gt;. NFC is the recommended form for most uses. It is equivalent to</source>
          <target state="translated">，它会警告任何未采用ISO 10646&amp;ldquo; C&amp;rdquo;标准化形式的标识符&lt;em&gt;NFC&lt;/em&gt;。建议将NFC用于大多数用途。相当于</target>
        </trans-unit>
        <trans-unit id="32e2fd6d52e014696dd3032ae2240c099458a6e3" translate="yes" xml:space="preserve">
          <source>, which warns for pointer argument passing or assignment with different signedness.</source>
          <target state="translated">，它警告传递或签名不同的指针参数。</target>
        </trans-unit>
        <trans-unit id="8937da5834fe58a4195b5beccef41b08b4ec15c4" translate="yes" xml:space="preserve">
          <source>, which will turn these warnings into errors.</source>
          <target state="translated">，这会将这些警告变成错误。</target>
        </trans-unit>
        <trans-unit id="49d2d73c488287ee47e9e23a7bde89fad3f5a395" translate="yes" xml:space="preserve">
          <source>, while</source>
          <target state="translated">，而</target>
        </trans-unit>
        <trans-unit id="c986d828f7d9c3017ba629babae8bb52ae352cf6" translate="yes" xml:space="preserve">
          <source>, while the &amp;lsquo;</source>
          <target state="translated">，而&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="a9eafc1b8f96cf25eb2fe2756bd682cb2dd19e7d" translate="yes" xml:space="preserve">
          <source>, with the equal sign but without &lt;var&gt;opts&lt;/var&gt;, is equivalent to</source>
          <target state="translated">等号但不带 &lt;var&gt;opts&lt;/var&gt; 的等价于</target>
        </trans-unit>
        <trans-unit id="af1f38353679ab12cc97376ba65588d3f11963ec" translate="yes" xml:space="preserve">
          <source>, without regenerating the profiles. In these cases, the profile feedback data files do not contain any profile feedback information for the newly added function or file respectively. Also, in the case when profile count data (.gcda) files are removed, GCC cannot use any profile feedback information. In all these cases, warnings are issued to inform the user that a profile generation step is due.</source>
          <target state="translated">，而无需重新生成配置文件。在这些情况下，配置文件反馈数据文件不分别包含有关新添加的功能或文件的任何配置文件反馈信息。同样，在删除配置文件计数数据（.gcda）文件的情况下，GCC无法使用任何配置文件反馈信息。在所有这些情况下，都会发出警告以通知用户，配置文件生成步骤已到。</target>
        </trans-unit>
        <trans-unit id="52a27dd7fbbb21792c986b2b6824d02997f4ba52" translate="yes" xml:space="preserve">
          <source>, you cannot successfully use &amp;lsquo;</source>
          <target state="translated">，则无法成功使用&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="23ef02ca85f6b31d2291f491abea6f9361c6b954" translate="yes" xml:space="preserve">
          <source>, you may define macros such as:</source>
          <target state="translated">，您可以定义宏，例如：</target>
        </trans-unit>
        <trans-unit id="a514e8bd0a877b0e43d2a6e4382e7592decbff8f" translate="yes" xml:space="preserve">
          <source>, you must write</source>
          <target state="translated">，您必须写</target>
        </trans-unit>
        <trans-unit id="9d27805c306f9f2234b2f442e2c3ae50e7f6b738" translate="yes" xml:space="preserve">
          <source>, you should compile all source code with</source>
          <target state="translated">，您应该使用编译所有源代码</target>
        </trans-unit>
        <trans-unit id="e1d8dc37d34101f1c1384f1753d981d4a4b19c09" translate="yes" xml:space="preserve">
          <source>- &lt;code&gt;div&lt;/code&gt; and &lt;code&gt;ddiv&lt;/code&gt; do not always produce the correct result if one of the operands is negative.</source>
          <target state="translated">- 如果其中一个操作数为负， &lt;code&gt;div&lt;/code&gt; 和 &lt;code&gt;ddiv&lt;/code&gt; 并不总是产生正确的结果。</target>
        </trans-unit>
        <trans-unit id="4e45c9b5be01af93079947067a03297d9a5481bf" translate="yes" xml:space="preserve">
          <source>- &lt;code&gt;dmultu&lt;/code&gt; does not always produce the correct result.</source>
          <target state="translated">- &lt;code&gt;dmultu&lt;/code&gt; 并不总是产生正确的结果。</target>
        </trans-unit>
        <trans-unit id="28d877a0732ecb70d1b0d29bb8a8ac0cbdc46350" translate="yes" xml:space="preserve">
          <source>- &lt;code&gt;ll&lt;/code&gt;/&lt;code&gt;sc&lt;/code&gt; sequences may not behave atomically on revisions prior to 3.0. They may deadlock on revisions 2.6 and earlier.</source>
          <target state="translated">- &lt;code&gt;ll&lt;/code&gt; / &lt;code&gt;sc&lt;/code&gt; 序列可以不是以原子表现上之前3.0修订版。它们可能会在2.6和更早的版本上陷入僵局。</target>
        </trans-unit>
        <trans-unit id="fa7a5e7633b9a3ecd053316c95969628f0544ee8" translate="yes" xml:space="preserve">
          <source>- A double-word or a variable shift may give an incorrect result if executed immediately after starting an integer division.</source>
          <target state="translated">-如果在开始整数除法后立即执行，则双字或变量移位可能会给出错误的结果。</target>
        </trans-unit>
        <trans-unit id="e9f449d4a2d00742e6bf85e117d9a7f43dbe3ac3" translate="yes" xml:space="preserve">
          <source>- A double-word or a variable shift may give an incorrect result if executed while an integer multiplication is in progress.</source>
          <target state="translated">-如果在进行整数乘法时执行双字或变量移位，可能会导致错误的结果。</target>
        </trans-unit>
        <trans-unit id="37b5a028a0a61d0deef86c72ae21ad424fb6e2b5" translate="yes" xml:space="preserve">
          <source>- An integer division may give an incorrect result if started in a delay slot of a taken branch or a jump.</source>
          <target state="translated">-如果在采用的分支或跳转的延迟时隙中开始，整数除法可能会给出错误的结果。</target>
        </trans-unit>
        <trans-unit id="2f936f979fbda07460d599549f1df49a28fec083" translate="yes" xml:space="preserve">
          <source>- C and C++ constructors/destructors called during startup/shutdown.</source>
          <target state="translated">-在启动/关闭期间调用的C和C ++构造函数/析构函数。</target>
        </trans-unit>
        <trans-unit id="d917511b7e91146ed81c5690753d05a01acc4a7f" translate="yes" xml:space="preserve">
          <source>- Computed goto.</source>
          <target state="translated">-计算的goto。</target>
        </trans-unit>
        <trans-unit id="0d12a6b873acc6a7dc115ab6c3ad7b78003c597b" translate="yes" xml:space="preserve">
          <source>- If prologue-save function is used, see</source>
          <target state="translated">-如果使用了序言保存功能，请参见</target>
        </trans-unit>
        <trans-unit id="f404d504a2d046d8eb074ad64c1ff4564f204db6" translate="yes" xml:space="preserve">
          <source>- If the tools hit a &lt;code&gt;gs()&lt;/code&gt; modifier explained above.</source>
          <target state="translated">-如果工具点击了上面说明的 &lt;code&gt;gs()&lt;/code&gt; 修饰符。</target>
        </trans-unit>
        <trans-unit id="8544c24c038210d50588d230bbce1287f212a4a7" translate="yes" xml:space="preserve">
          <source>- Switch/case dispatch tables. If you do not want such dispatch tables you can specify the</source>
          <target state="translated">-开关/案例分配表。如果您不希望使用此类分派表，则可以指定</target>
        </trans-unit>
        <trans-unit id="10c2c384d1ba94948e8054a096aa485c0fc12ae5" translate="yes" xml:space="preserve">
          <source>- Taking address of a function or code label.</source>
          <target state="translated">-获取功能或代码标签的地址。</target>
        </trans-unit>
        <trans-unit id="d7148d1a6b1975ea9d5965578463516097e7671d" translate="yes" xml:space="preserve">
          <source>- The address of a label is taken by means of the &lt;code&gt;gs&lt;/code&gt; modifier (short for &lt;em&gt;generate stubs&lt;/em&gt;) like so:</source>
          <target state="translated">-标签的地址是通过 &lt;code&gt;gs&lt;/code&gt; 修饰符（&lt;em&gt;generate stubs的&lt;/em&gt;缩写）获取的，如下所示：</target>
        </trans-unit>
        <trans-unit id="14b71f67f8e45a2a107c7b5baf13d693803269da" translate="yes" xml:space="preserve">
          <source>- The final location of that label is in a code segment &lt;em&gt;outside&lt;/em&gt; the segment where the stubs are located.</source>
          <target state="translated">-该标签的最终位置在存根所在的段&lt;em&gt;之外&lt;/em&gt;的代码段中。</target>
        </trans-unit>
        <trans-unit id="19d63ce6052f4c54b84829f0b7d6e03edecb61ff" translate="yes" xml:space="preserve">
          <source>--coverage</source>
          <target state="translated">--coverage</target>
        </trans-unit>
        <trans-unit id="dfd9358562e69140980df6448abfc0be3f647ed5" translate="yes" xml:space="preserve">
          <source>--eh-frame-hdr</source>
          <target state="translated">--eh-frame-hdr</target>
        </trans-unit>
        <trans-unit id="a0a2fefd37a87ad5d2972a5d58e4ea49ca4f3287" translate="yes" xml:space="preserve">
          <source>--enable-auto-import</source>
          <target state="translated">--enable-auto-import</target>
        </trans-unit>
        <trans-unit id="19ec31a0c9370e4ca1653c6162cf9b8a97cdc3b1" translate="yes" xml:space="preserve">
          <source>--enable-cld</source>
          <target state="translated">--enable-cld</target>
        </trans-unit>
        <trans-unit id="45d75f7f8e031e18a19b4310578eef230b726c86" translate="yes" xml:space="preserve">
          <source>--enable-secureplt</source>
          <target state="translated">--enable-secureplt</target>
        </trans-unit>
        <trans-unit id="b4e2ad8851d273611b45f3eaa2ac10287c874b49" translate="yes" xml:space="preserve">
          <source>--export-all</source>
          <target state="translated">--export-all</target>
        </trans-unit>
        <trans-unit id="b9e9f25c1c659f705184cc8a6309a762e9c03bc8" translate="yes" xml:space="preserve">
          <source>--gc-sections</source>
          <target state="translated">--gc-sections</target>
        </trans-unit>
        <trans-unit id="9a8265a5ba2c33881e2717e7581df323a5188174" translate="yes" xml:space="preserve">
          <source>--help</source>
          <target state="translated">--help</target>
        </trans-unit>
        <trans-unit id="88d3346c36ef09ed6fcd3041d7c7328e66a82c3d" translate="yes" xml:space="preserve">
          <source>--help=</source>
          <target state="translated">--help=</target>
        </trans-unit>
        <trans-unit id="83e48cc5863539edea576aba905cb078520ec230" translate="yes" xml:space="preserve">
          <source>--help=param -Q</source>
          <target state="translated">--help =参数-Q</target>
        </trans-unit>
        <trans-unit id="142fdbe422fca8e1f0ae90e0fded107cf3324105" translate="yes" xml:space="preserve">
          <source>--help=target</source>
          <target state="translated">--help=target</target>
        </trans-unit>
        <trans-unit id="f4b42adb9ab9af50964868976f43d9f709933d73" translate="yes" xml:space="preserve">
          <source>--json-format</source>
          <target state="translated">--json-format</target>
        </trans-unit>
        <trans-unit id="7ee16625a2f5c7c7f5e47fea7979ac8403afdfad" translate="yes" xml:space="preserve">
          <source>--mlink-relax</source>
          <target state="translated">--mlink-relax</target>
        </trans-unit>
        <trans-unit id="c39e62a5d2c5adeeb352ed945b13bb7e7648c763" translate="yes" xml:space="preserve">
          <source>--param</source>
          <target state="translated">--param</target>
        </trans-unit>
        <trans-unit id="a016b2a12b436dad6a4936a8b629b5250cf51ab2" translate="yes" xml:space="preserve">
          <source>--param &lt;var&gt;name&lt;/var&gt;=&lt;var&gt;value&lt;/var&gt;</source>
          <target state="translated">--param &lt;var&gt;name&lt;/var&gt; = &lt;var&gt;value&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="2f053c2b9af56f4f6906583b62e669a5032f9c48" translate="yes" xml:space="preserve">
          <source>--param asan-globals=0</source>
          <target state="translated">--param asan-globals = 0</target>
        </trans-unit>
        <trans-unit id="046d1ab314aca2f65f8567874fe4552e8783d6c2" translate="yes" xml:space="preserve">
          <source>--param asan-instrument-reads=0</source>
          <target state="translated">--param asan-instrument-reads = 0</target>
        </trans-unit>
        <trans-unit id="6e97d7ea0a0d892c251b0b7c4fe2f043e62e2970" translate="yes" xml:space="preserve">
          <source>--param asan-instrument-writes=0</source>
          <target state="translated">--param asan-instrument-writes = 0</target>
        </trans-unit>
        <trans-unit id="4ad1600c2aab619b0afbc4bed8fa363a8a811bd2" translate="yes" xml:space="preserve">
          <source>--param asan-instrumentation-with-call-threshold=0</source>
          <target state="translated">--param asan仪器调用阈值= 0</target>
        </trans-unit>
        <trans-unit id="5802988b85eab2d413194fa277ff796a934b235b" translate="yes" xml:space="preserve">
          <source>--param asan-memintrin=0</source>
          <target state="translated">--param asan-memintrin = 0</target>
        </trans-unit>
        <trans-unit id="a85fa50efbf436bcb5274b389e28cd4ffa16e8f6" translate="yes" xml:space="preserve">
          <source>--param asan-stack=0</source>
          <target state="translated">--param asan-stack = 0</target>
        </trans-unit>
        <trans-unit id="3920aceaa4d0c4dbb9588dedd47f103a9721fd30" translate="yes" xml:space="preserve">
          <source>--param asan-use-after-return=0</source>
          <target state="translated">--param asan-use-after-return = 0</target>
        </trans-unit>
        <trans-unit id="d8104705ceeecd8dca5c855b23c02129d03fd3aa" translate="yes" xml:space="preserve">
          <source>--param hsa-gen-debug-stores=1</source>
          <target state="translated">--param hsa-gen-debug-stores = 1</target>
        </trans-unit>
        <trans-unit id="1b19ff06086c5a2903176b02fdbced7b43f5cec1" translate="yes" xml:space="preserve">
          <source>--param inline-unit-growth</source>
          <target state="translated">--param inline-unit-growth</target>
        </trans-unit>
        <trans-unit id="8ac078b12b033a45803b6b1ea17aa4781ed84483" translate="yes" xml:space="preserve">
          <source>--param ipcp-unit-growth=&lt;var&gt;value&lt;/var&gt;</source>
          <target state="translated">--param ipcp-unit-growth = &lt;var&gt;value&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="2af4ac3074fc1a44dab1c358abd5d1228d27f563" translate="yes" xml:space="preserve">
          <source>--param large-function-growth</source>
          <target state="translated">--param大功能增长</target>
        </trans-unit>
        <trans-unit id="534f801afcf7bc7c50134ff6ca99009838d8d944" translate="yes" xml:space="preserve">
          <source>--param large-unit-insns</source>
          <target state="translated">--param large-unit-insns</target>
        </trans-unit>
        <trans-unit id="915ddae1eb68b21bdc842f115e64d429b3a14b72" translate="yes" xml:space="preserve">
          <source>--param max-inline-insns-auto</source>
          <target state="translated">--param max-inline-insns-auto</target>
        </trans-unit>
        <trans-unit id="9a19e51c5b5d56bc48d8a8f9a2089239ebe6236a" translate="yes" xml:space="preserve">
          <source>--param max-inline-insns-recursive</source>
          <target state="translated">--param max-inline-insns-递归</target>
        </trans-unit>
        <trans-unit id="9361003e3d8e46181c22efb4985b02854d7dc435" translate="yes" xml:space="preserve">
          <source>--param max-inline-insns-recursive-auto</source>
          <target state="translated">--param max-inline-insns-递归自动</target>
        </trans-unit>
        <trans-unit id="f6e4e737c314e908bf52516ae5bf889ce65ae668" translate="yes" xml:space="preserve">
          <source>--param max-inline-insns-single</source>
          <target state="translated">--param max-inline-insns-单</target>
        </trans-unit>
        <trans-unit id="57cb16654bf412f81b669b2d34821dd4ba8b7030" translate="yes" xml:space="preserve">
          <source>--param max-inline-recursive-depth</source>
          <target state="translated">--param max-inline-递归深度</target>
        </trans-unit>
        <trans-unit id="4c6a76bb4d81a18fea0e7297c5fd8760d647efe2" translate="yes" xml:space="preserve">
          <source>--param max-inline-recursive-depth-auto</source>
          <target state="translated">--param max-inline-递归深度自动</target>
        </trans-unit>
        <trans-unit id="d1ba2dbdecea126c7e23c04d6ac886321cc7733c" translate="yes" xml:space="preserve">
          <source>--param uninlined-function-insns</source>
          <target state="translated">--param内联函数-insns</target>
        </trans-unit>
        <trans-unit id="17eda58b27eb24c794dbf2670f811bb35cf8bb9b" translate="yes" xml:space="preserve">
          <source>--param uninlined-function-time</source>
          <target state="translated">--param内联函数时间</target>
        </trans-unit>
        <trans-unit id="113c521d2174c60ad8429bab21a4d69ce45c9a47" translate="yes" xml:space="preserve">
          <source>--relax</source>
          <target state="translated">--relax</target>
        </trans-unit>
        <trans-unit id="f7c1ba277b846444ae3bd4ca793dbb934e79fdf7" translate="yes" xml:space="preserve">
          <source>--script</source>
          <target state="translated">--script</target>
        </trans-unit>
        <trans-unit id="a5ede7e0c2ae6c6fcf84131f816c957863ebd19e" translate="yes" xml:space="preserve">
          <source>--sysroot</source>
          <target state="translated">--sysroot</target>
        </trans-unit>
        <trans-unit id="03871aeb9fd58907b7f973a64c5639cb4e7185ee" translate="yes" xml:space="preserve">
          <source>--target-help</source>
          <target state="translated">--target-help</target>
        </trans-unit>
        <trans-unit id="0f1594e7e448c852207a80bcddef0a2c01be7c40" translate="yes" xml:space="preserve">
          <source>--with-avrlibc</source>
          <target state="translated">--with-avrlibc</target>
        </trans-unit>
        <trans-unit id="ce9b1aff97fde9fd43d3f25318e7f2c14d645d1a" translate="yes" xml:space="preserve">
          <source>--with-cpu=arc700</source>
          <target state="translated">--with-cpu=arc700</target>
        </trans-unit>
        <trans-unit id="43e7f9aa9f26e4a2140d9c389827315bea74b448" translate="yes" xml:space="preserve">
          <source>--with-divide=breaks</source>
          <target state="translated">--with-divide=breaks</target>
        </trans-unit>
        <trans-unit id="7f443db828f8e3d777f4a1b60d95db10836b91e6" translate="yes" xml:space="preserve">
          <source>--with-isl</source>
          <target state="translated">--with-isl</target>
        </trans-unit>
        <trans-unit id="fc41d3ef057a00c64ae7cfb6d19252d3b367b2b9" translate="yes" xml:space="preserve">
          <source>--with-ld</source>
          <target state="translated">--with-ld</target>
        </trans-unit>
        <trans-unit id="24da4df978f0b486d9ec64db5c1fe252e850e793" translate="yes" xml:space="preserve">
          <source>--with-llsc</source>
          <target state="translated">--with-llsc</target>
        </trans-unit>
        <trans-unit id="1182831e20ca3f6e430a11ff6d48f902300343ce" translate="yes" xml:space="preserve">
          <source>--with-mips-plt</source>
          <target state="translated">--with-mips-plt</target>
        </trans-unit>
        <trans-unit id="a4590555ef66878c596cf76dc3d4c90c6be76b04" translate="yes" xml:space="preserve">
          <source>--with-mode=</source>
          <target state="translated">--with-mode=</target>
        </trans-unit>
        <trans-unit id="b2fa43af3d4a14a383fec6e2351ddb4e36831862" translate="yes" xml:space="preserve">
          <source>--with-nan=2008</source>
          <target state="translated">--with-nan=2008</target>
        </trans-unit>
        <trans-unit id="4fe96070a351e01e2af2b6f7d024cdf8a1c61bd9" translate="yes" xml:space="preserve">
          <source>--with-stack-offset=&lt;var&gt;num&lt;/var&gt;</source>
          <target state="translated">--with-stack-offset=&lt;var&gt;num&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="e3ffd80c526299889fd686be4f265343646380d2" translate="yes" xml:space="preserve">
          <source>--with-synci</source>
          <target state="translated">--with-synci</target>
        </trans-unit>
        <trans-unit id="e5d3f84c56bdf1f37e55e0e34007337c1b87dd64" translate="yes" xml:space="preserve">
          <source>--without-llsc</source>
          <target state="translated">--without-llsc</target>
        </trans-unit>
        <trans-unit id="72f9a64e69c07f336c27b858328ddec628bce662" translate="yes" xml:space="preserve">
          <source>-128 &amp;hellip; 127</source>
          <target state="translated">-128&amp;hellip;127</target>
        </trans-unit>
        <trans-unit id="41c5556471c9c41b7ed8d4466077fcfe0f771ce6" translate="yes" xml:space="preserve">
          <source>-16 &amp;hellip; -1 or 1 &amp;hellip; 16</source>
          <target state="translated">-16&amp;hellip;-1或1&amp;hellip;16</target>
        </trans-unit>
        <trans-unit id="e33f307ec56ac23f4e4b4cd23eca5268e342d56c" translate="yes" xml:space="preserve">
          <source>-32 &amp;hellip; -1 or 1 &amp;hellip; 32</source>
          <target state="translated">-32&amp;hellip;-1或1&amp;hellip;32</target>
        </trans-unit>
        <trans-unit id="062ce7901f883b6a36571195d14fb1488ff09f89" translate="yes" xml:space="preserve">
          <source>-32768 &amp;hellip; 32767</source>
          <target state="translated">-32768&amp;hellip;32767</target>
        </trans-unit>
        <trans-unit id="6ceb2ac9236a010c304bc55d35af577b401a0019" translate="yes" xml:space="preserve">
          <source>-65536 &amp;hellip; -1</source>
          <target state="translated">-65536&amp;hellip;-1</target>
        </trans-unit>
        <trans-unit id="00eb96584e50e203a95b3cbcd93bc48c817a99ec" translate="yes" xml:space="preserve">
          <source>-8 &amp;hellip; -1 or 1 &amp;hellip; 8</source>
          <target state="translated">-8&amp;hellip;-1或1&amp;hellip;8</target>
        </trans-unit>
        <trans-unit id="e7f0f7286a983e45fbfd1fff997afcee609f2333" translate="yes" xml:space="preserve">
          <source>-8 &amp;hellip; 7</source>
          <target state="translated">-8&amp;hellip;7</target>
        </trans-unit>
        <trans-unit id="85ed27503e75a7fd173b61c00239456e00cdb29a" translate="yes" xml:space="preserve">
          <source>-&lt;var&gt;option&lt;/var&gt;</source>
          <target state="translated">-&lt;var&gt;option&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="bd6bd9306c20157668da23673684c32891f58798" translate="yes" xml:space="preserve">
          <source>-&lt;var&gt;options&lt;/var&gt;</source>
          <target state="translated">-&lt;var&gt;options&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="2a0d6e4753e404846b3da72d44a72c18a4eee19e" translate="yes" xml:space="preserve">
          <source>-A &lt;var&gt;predicate&lt;/var&gt;(&lt;var&gt;answer&lt;/var&gt;)</source>
          <target state="translated">- &lt;var&gt;predicate&lt;/var&gt; （ &lt;var&gt;answer&lt;/var&gt; ）</target>
        </trans-unit>
        <trans-unit id="07015ed8e6ee6c7fcd387da7930e1833c2e01479" translate="yes" xml:space="preserve">
          <source>-B</source>
          <target state="translated">-B</target>
        </trans-unit>
        <trans-unit id="987830b431e9134788ba712f6d0c48ea63e3891a" translate="yes" xml:space="preserve">
          <source>-Bfoo/</source>
          <target state="translated">-Bfoo/</target>
        </trans-unit>
        <trans-unit id="ee7e59e9e3033b6eb4d3599f36b9eb1d9d8f8078" translate="yes" xml:space="preserve">
          <source>-C</source>
          <target state="translated">-C</target>
        </trans-unit>
        <trans-unit id="ef7ee7cfb43b9008958829efd8d64b7848e321ab" translate="yes" xml:space="preserve">
          <source>-CC</source>
          <target state="translated">-CC</target>
        </trans-unit>
        <trans-unit id="ad9aee0e02aa7df5696f88c33c3f5b0003d54711" translate="yes" xml:space="preserve">
          <source>-D</source>
          <target state="translated">-D</target>
        </trans-unit>
        <trans-unit id="2047ccb3e8e0a61bccca0248688e755cb3f236c4" translate="yes" xml:space="preserve">
          <source>-D'&lt;var&gt;name&lt;/var&gt;(&lt;var&gt;args&amp;hellip;&lt;/var&gt;)=&lt;var&gt;definition&lt;/var&gt;'</source>
          <target state="translated">-D'&lt;var&gt;name&lt;/var&gt;(&lt;var&gt;args&amp;hellip;&lt;/var&gt;)=&lt;var&gt;definition&lt;/var&gt;'</target>
        </trans-unit>
        <trans-unit id="262528920a804b8fb5e7b87c7c093b02463ba1cd" translate="yes" xml:space="preserve">
          <source>-D_MT</source>
          <target state="translated">-D_MT</target>
        </trans-unit>
        <trans-unit id="ff8015eb2b1855f53bb4336bf8d4411ac6c84c5b" translate="yes" xml:space="preserve">
          <source>-E</source>
          <target state="translated">-E</target>
        </trans-unit>
        <trans-unit id="ccdf319fc9b8ab52413c4b1c6ce664c414d5cf27" translate="yes" xml:space="preserve">
          <source>-F</source>
          <target state="translated">-F</target>
        </trans-unit>
        <trans-unit id="1b2ad08f13af60d02a993673ad6cf8e4e6ac9e81" translate="yes" xml:space="preserve">
          <source>-G</source>
          <target state="translated">-G</target>
        </trans-unit>
        <trans-unit id="62f512c8380c514e868d4031e89e0f8d880a99c6" translate="yes" xml:space="preserve">
          <source>-G &lt;var&gt;num&lt;/var&gt;</source>
          <target state="translated">-G &lt;var&gt;num&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="47e3d2cf8ea0d633536dbd3e2533af100b37d5e7" translate="yes" xml:space="preserve">
          <source>-G0</source>
          <target state="translated">-G0</target>
        </trans-unit>
        <trans-unit id="f71e105f8a133b9bda2f781740d497e34f38d669" translate="yes" xml:space="preserve">
          <source>-I</source>
          <target state="translated">-I</target>
        </trans-unit>
        <trans-unit id="9b83cd11508a2476b5a96c6035b9a6d7d73f1bc7" translate="yes" xml:space="preserve">
          <source>-I-</source>
          <target state="translated">-I-</target>
        </trans-unit>
        <trans-unit id="9ea6fab88b8bd0f497a7d564844eba74cf1296b9" translate="yes" xml:space="preserve">
          <source>-I.-I/special/include</source>
          <target state="translated">-I.-I/special/include</target>
        </trans-unit>
        <trans-unit id="c20a39eb3af4897aa4dea2bd9a1ba1a16fa16352" translate="yes" xml:space="preserve">
          <source>-L</source>
          <target state="translated">-L</target>
        </trans-unit>
        <trans-unit id="a865f5c84febf7bb127859a28c7f9921091e23e9" translate="yes" xml:space="preserve">
          <source>-M</source>
          <target state="translated">-M</target>
        </trans-unit>
        <trans-unit id="766dfebbd99ff335150e93696f0b424fd8c884b0" translate="yes" xml:space="preserve">
          <source>-M -MF &lt;var&gt;file&lt;/var&gt;</source>
          <target state="translated">-M -MF &lt;var&gt;file&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="ca5f6d54e9f48e990f7a171ec03e9e3fb86dc230" translate="yes" xml:space="preserve">
          <source>-MD</source>
          <target state="translated">-MD</target>
        </trans-unit>
        <trans-unit id="0c6eb383fb3a09b37160c5897c59b00a3fd4c667" translate="yes" xml:space="preserve">
          <source>-MF</source>
          <target state="translated">-MF</target>
        </trans-unit>
        <trans-unit id="a1ac59d9d86036b584dd02c67da6433d94b6b0f8" translate="yes" xml:space="preserve">
          <source>-MG</source>
          <target state="translated">-MG</target>
        </trans-unit>
        <trans-unit id="8810841d9136e2ca78adcc2ef8fd22d1eec3b60d" translate="yes" xml:space="preserve">
          <source>-MM</source>
          <target state="translated">-MM</target>
        </trans-unit>
        <trans-unit id="ac72c219f25f02f5d3d4ba7f54c6fa61185a2d4f" translate="yes" xml:space="preserve">
          <source>-MMD</source>
          <target state="translated">-MMD</target>
        </trans-unit>
        <trans-unit id="44589fb1200176e2d38b10e3ce3a48fbb5d2da13" translate="yes" xml:space="preserve">
          <source>-MQ</source>
          <target state="translated">-MQ</target>
        </trans-unit>
        <trans-unit id="49af70a99559eb861cc6d4a1f4b6ab5846f595da" translate="yes" xml:space="preserve">
          <source>-MT</source>
          <target state="translated">-MT</target>
        </trans-unit>
        <trans-unit id="6fbdbbd677a18274726c99020f0c77540e6fc0b6" translate="yes" xml:space="preserve">
          <source>-Map output.map</source>
          <target state="translated">地图输出.map</target>
        </trans-unit>
        <trans-unit id="baef33bc876a687b961751394c8f81f05f3e79c2" translate="yes" xml:space="preserve">
          <source>-O</source>
          <target state="translated">-O</target>
        </trans-unit>
        <trans-unit id="28001261ce59788011325a3412244c444a2a24a2" translate="yes" xml:space="preserve">
          <source>-O0</source>
          <target state="translated">-O0</target>
        </trans-unit>
        <trans-unit id="3a2ea76ea5223ba5c06c330d567a466f18648faf" translate="yes" xml:space="preserve">
          <source>-O1</source>
          <target state="translated">-O1</target>
        </trans-unit>
        <trans-unit id="de7f63e37a3bbff37b896a3d357f24b36e7159e1" translate="yes" xml:space="preserve">
          <source>-O2</source>
          <target state="translated">-O2</target>
        </trans-unit>
        <trans-unit id="41db216f1b5121805a5bb23bb3b564099b2c7fec" translate="yes" xml:space="preserve">
          <source>-O3</source>
          <target state="translated">-O3</target>
        </trans-unit>
        <trans-unit id="16fca30851efb6bbe0fbe6acc177926861ea29f4" translate="yes" xml:space="preserve">
          <source>-Ofast</source>
          <target state="translated">-Ofast</target>
        </trans-unit>
        <trans-unit id="adea5820536ffc0a9b797d47ab6d3adf9d9ed815" translate="yes" xml:space="preserve">
          <source>-Og</source>
          <target state="translated">-Og</target>
        </trans-unit>
        <trans-unit id="0559338fd0e1684606077707239d6bae957b3bb3" translate="yes" xml:space="preserve">
          <source>-Os</source>
          <target state="translated">-Os</target>
        </trans-unit>
        <trans-unit id="5bb32e12d567b52d9769dd6d1b502cbafaf5b407" translate="yes" xml:space="preserve">
          <source>-P</source>
          <target state="translated">-P</target>
        </trans-unit>
        <trans-unit id="6422eedc12255e6b5d4e04ab2b26ee196c74c4c7" translate="yes" xml:space="preserve">
          <source>-Q</source>
          <target state="translated">-Q</target>
        </trans-unit>
        <trans-unit id="4710db6d0ebf661a7c7bc7c7c770a03430609ef3" translate="yes" xml:space="preserve">
          <source>-Q --help=optimizers</source>
          <target state="translated">-Q --help =优化程序</target>
        </trans-unit>
        <trans-unit id="3e0eab9f94000d4317af98881d10968930b431a1" translate="yes" xml:space="preserve">
          <source>-S</source>
          <target state="translated">-S</target>
        </trans-unit>
        <trans-unit id="332ec780f224383a9f30f4660fe42ecd1206e248" translate="yes" xml:space="preserve">
          <source>-T</source>
          <target state="translated">-T</target>
        </trans-unit>
        <trans-unit id="444a425ff4c74a2fbb3eec1cff25a92779a43296" translate="yes" xml:space="preserve">
          <source>-U</source>
          <target state="translated">-U</target>
        </trans-unit>
        <trans-unit id="561dfc356741ed4dc2784b39dba88c011c483888" translate="yes" xml:space="preserve">
          <source>-W</source>
          <target state="translated">-W</target>
        </trans-unit>
        <trans-unit id="f1db1304ad8ec2215aa07b2c6516c04dc1215726" translate="yes" xml:space="preserve">
          <source>-W&amp;hellip;</source>
          <target state="translated">-W&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="89e2891e8f37be83f9c4bbc3ad937b765c7867d7" translate="yes" xml:space="preserve">
          <source>-Wa</source>
          <target state="translated">-Wa</target>
        </trans-unit>
        <trans-unit id="78e4eeec44c73c0709f08dfe65f2539018eeb610" translate="yes" xml:space="preserve">
          <source>-Wabi</source>
          <target state="translated">-Wabi</target>
        </trans-unit>
        <trans-unit id="d58ff6fc53401d8eda6a61783ff443c03944ecdf" translate="yes" xml:space="preserve">
          <source>-Wabi-tag</source>
          <target state="translated">-Wabi-tag</target>
        </trans-unit>
        <trans-unit id="14c081a12c248967ddd5ccb1d2a8308ff6b812d8" translate="yes" xml:space="preserve">
          <source>-Wabi=2</source>
          <target state="translated">-Wabi=2</target>
        </trans-unit>
        <trans-unit id="cb87f86c75f94fb00e8f95b218c0027c524468e9" translate="yes" xml:space="preserve">
          <source>-Wabi=&lt;var&gt;n&lt;/var&gt;</source>
          <target state="translated">-Wabi=&lt;var&gt;n&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="12bc07aa073e0cde04567bf4f2d0123be6273b70" translate="yes" xml:space="preserve">
          <source>-Waligned-new=all</source>
          <target state="translated">-Waligned-new=all</target>
        </trans-unit>
        <trans-unit id="b6b6e46e1b3d43237d6e550d71cf4cf2b90c3a8a" translate="yes" xml:space="preserve">
          <source>-Wall</source>
          <target state="translated">-Wall</target>
        </trans-unit>
        <trans-unit id="8a1df80bae0bb2af66d8760bcc6aca7540345ff0" translate="yes" xml:space="preserve">
          <source>-Walloc-size-larger-than=</source>
          <target state="translated">-Walloc-size-larger-than=</target>
        </trans-unit>
        <trans-unit id="70b896f5f10e7a03de8e140d1d0164ee9a5116b9" translate="yes" xml:space="preserve">
          <source>-Walloca-larger-than</source>
          <target state="translated">-Walloca-larger-than</target>
        </trans-unit>
        <trans-unit id="2860f925943af1afcf90db4872877134ce06c7d8" translate="yes" xml:space="preserve">
          <source>-Walloca-larger-than=</source>
          <target state="translated">-Walloca-larger-than=</target>
        </trans-unit>
        <trans-unit id="203ef4e344ed1a739410037a96a4f5884e3ad233" translate="yes" xml:space="preserve">
          <source>-Walloca-larger-than=&lt;var&gt;byte-size&lt;/var&gt;</source>
          <target state="translated">-Walloca-larger-than=&lt;var&gt;byte-size&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="ecf85114b7f201d851b51f913e4be7748b3daf38" translate="yes" xml:space="preserve">
          <source>-Warray-bounds</source>
          <target state="translated">-Warray-bounds</target>
        </trans-unit>
        <trans-unit id="02eb1999df7f54d17603e0c053b76e8646947ef9" translate="yes" xml:space="preserve">
          <source>-Wattribute-alias</source>
          <target state="translated">-Wattribute-alias</target>
        </trans-unit>
        <trans-unit id="9765196f48ad96fec0d363f505ef6647f8de704a" translate="yes" xml:space="preserve">
          <source>-Wattribute-alias=0</source>
          <target state="translated">-Wattribute-alias=0</target>
        </trans-unit>
        <trans-unit id="5262f3c705c4c2a054e60db092066d5efc924685" translate="yes" xml:space="preserve">
          <source>-Wattribute-alias=1</source>
          <target state="translated">-Wattribute-alias=1</target>
        </trans-unit>
        <trans-unit id="dd676c93fb4ef29b129c7d4a0691ad65153e5461" translate="yes" xml:space="preserve">
          <source>-Wattribute-alias=2</source>
          <target state="translated">-Wattribute-alias=2</target>
        </trans-unit>
        <trans-unit id="249e9d32bb64eaa64fa45f88c041339894c5afa7" translate="yes" xml:space="preserve">
          <source>-Wattributes</source>
          <target state="translated">-Wattributes</target>
        </trans-unit>
        <trans-unit id="0565c965bfa6e13bd545739e5b8cedad7f28b624" translate="yes" xml:space="preserve">
          <source>-Wc++-compat</source>
          <target state="translated">-Wc++-compat</target>
        </trans-unit>
        <trans-unit id="cf32a3ff936d346c50f3d6e060af97d91bc935c4" translate="yes" xml:space="preserve">
          <source>-Wc++11-compat</source>
          <target state="translated">-Wc++11-compat</target>
        </trans-unit>
        <trans-unit id="09f352680749e550bb3a5012c7b09d7cc7c718b0" translate="yes" xml:space="preserve">
          <source>-Wc++17-compat</source>
          <target state="translated">-Wc++17-compat</target>
        </trans-unit>
        <trans-unit id="c6f069075c8d3297a054cce44dcb77db6345da27" translate="yes" xml:space="preserve">
          <source>-Wcatch-value</source>
          <target state="translated">-Wcatch-value</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
