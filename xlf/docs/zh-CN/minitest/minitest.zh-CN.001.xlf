<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="minitest">
    <body>
      <group id="minitest">
        <trans-unit id="bc042da1f7be02c327e1f65b60ca1253fae39e87" translate="yes" xml:space="preserve">
          <source>#&amp;lt;&amp;lt;</source>
          <target state="translated">#&amp;lt;&amp;lt;</target>
        </trans-unit>
        <trans-unit id="7a28f3a87b0ed0ab19370dcb4a9945d21608d094" translate="yes" xml:space="preserve">
          <source>#assert</source>
          <target state="translated">#assert</target>
        </trans-unit>
        <trans-unit id="3ff78939d268355c27257baab89961bc444a5e99" translate="yes" xml:space="preserve">
          <source>#assert_empty</source>
          <target state="translated">#assert_empty</target>
        </trans-unit>
        <trans-unit id="4e2da5c5114ee75496efab903df3cedda0421fe1" translate="yes" xml:space="preserve">
          <source>#assert_equal</source>
          <target state="translated">#assert_equal</target>
        </trans-unit>
        <trans-unit id="7e8f6ae3d6b8fda680006ceff8af78ed82eb7adc" translate="yes" xml:space="preserve">
          <source>#assert_in_delta</source>
          <target state="translated">#assert_in_delta</target>
        </trans-unit>
        <trans-unit id="a91989571173bcd8190e9c8d3024478d9138c1a3" translate="yes" xml:space="preserve">
          <source>#assert_in_epsilon</source>
          <target state="translated">#assert_in_epsilon</target>
        </trans-unit>
        <trans-unit id="f3fee8587bd6f97efeeb568a0d4bc533db0b0455" translate="yes" xml:space="preserve">
          <source>#assert_includes</source>
          <target state="translated">#assert_includes</target>
        </trans-unit>
        <trans-unit id="b42e9ee6477c9028027f712b2ac3b5829ef399a5" translate="yes" xml:space="preserve">
          <source>#assert_instance_of</source>
          <target state="translated">#assert_instance_of</target>
        </trans-unit>
        <trans-unit id="2a57f86b094d0e170f247d7c5551435cc3599b75" translate="yes" xml:space="preserve">
          <source>#assert_kind_of</source>
          <target state="translated">#assert_kind_of</target>
        </trans-unit>
        <trans-unit id="4df4fb27197a713ee82bb5de9eee360e1d0d6a14" translate="yes" xml:space="preserve">
          <source>#assert_match</source>
          <target state="translated">#assert_match</target>
        </trans-unit>
        <trans-unit id="a949990a668a2223e7abc0ed42e7422e04abcfe3" translate="yes" xml:space="preserve">
          <source>#assert_mock</source>
          <target state="translated">#assert_mock</target>
        </trans-unit>
        <trans-unit id="fe7ce2fb39a8ddbbf0226f70ef9cd9426b784a01" translate="yes" xml:space="preserve">
          <source>#assert_nil</source>
          <target state="translated">#assert_nil</target>
        </trans-unit>
        <trans-unit id="5a6579deb4495d0ac935375171eafaf0ca9f7e60" translate="yes" xml:space="preserve">
          <source>#assert_operator</source>
          <target state="translated">#assert_operator</target>
        </trans-unit>
        <trans-unit id="a3eb86b3465d573245e3d6382e73165247cf896f" translate="yes" xml:space="preserve">
          <source>#assert_output</source>
          <target state="translated">#assert_output</target>
        </trans-unit>
        <trans-unit id="007b59c5c4146e3ef132b9b1d91dcb78161abc24" translate="yes" xml:space="preserve">
          <source>#assert_performance</source>
          <target state="translated">#assert_performance</target>
        </trans-unit>
        <trans-unit id="8b1fb6f6bbe2a2632d9f57c5f661e36e93a3c568" translate="yes" xml:space="preserve">
          <source>#assert_performance_constant</source>
          <target state="translated">#assert_performance_constant</target>
        </trans-unit>
        <trans-unit id="b88d950e18948588383e7051fb23b3e5ed015d71" translate="yes" xml:space="preserve">
          <source>#assert_performance_exponential</source>
          <target state="translated">#assert_performance_exponential</target>
        </trans-unit>
        <trans-unit id="96ca4103322064dcd9fa34e3af190fe123256fae" translate="yes" xml:space="preserve">
          <source>#assert_performance_linear</source>
          <target state="translated">#assert_performance_linear</target>
        </trans-unit>
        <trans-unit id="7329fe9d6b2abdf54a602fffe7efe8798bdac0c3" translate="yes" xml:space="preserve">
          <source>#assert_performance_logarithmic</source>
          <target state="translated">#assert_performance_logarithmic</target>
        </trans-unit>
        <trans-unit id="d8984871a1b5b19d87944c0f0e71645358990776" translate="yes" xml:space="preserve">
          <source>#assert_performance_power</source>
          <target state="translated">#assert_performance_power</target>
        </trans-unit>
        <trans-unit id="ced674a3da4d7390d7595dc6fc1b2457e172a3ff" translate="yes" xml:space="preserve">
          <source>#assert_predicate</source>
          <target state="translated">#assert_predicate</target>
        </trans-unit>
        <trans-unit id="172d9ed838d3297b26979bab9dbb17feee152945" translate="yes" xml:space="preserve">
          <source>#assert_raises</source>
          <target state="translated">#assert_raises</target>
        </trans-unit>
        <trans-unit id="2b7db385fdc4b34311d2147ca8c20ff13e25543c" translate="yes" xml:space="preserve">
          <source>#assert_respond_to</source>
          <target state="translated">#assert_respond_to</target>
        </trans-unit>
        <trans-unit id="322da205b4b572b9261061b817ca426fa192de1c" translate="yes" xml:space="preserve">
          <source>#assert_same</source>
          <target state="translated">#assert_same</target>
        </trans-unit>
        <trans-unit id="ae4e9f93f7bbcb6b9d490d6bd0267738b206b6d7" translate="yes" xml:space="preserve">
          <source>#assert_send</source>
          <target state="translated">#assert_send</target>
        </trans-unit>
        <trans-unit id="d9883314d8b52bbb80be0bf541510a18e7d3f190" translate="yes" xml:space="preserve">
          <source>#assert_silent</source>
          <target state="translated">#assert_silent</target>
        </trans-unit>
        <trans-unit id="dc734de4f598646db294a7b1b3026ef752ac7c89" translate="yes" xml:space="preserve">
          <source>#assert_throws</source>
          <target state="translated">#assert_throws</target>
        </trans-unit>
        <trans-unit id="340de5e0b6cf9904430a80fee59ac34bff88aee9" translate="yes" xml:space="preserve">
          <source>#assertions</source>
          <target state="translated">#assertions</target>
        </trans-unit>
        <trans-unit id="c3226fae1ea28f8ba630d6c60eb4d1522034b253" translate="yes" xml:space="preserve">
          <source>#capture_io</source>
          <target state="translated">#capture_io</target>
        </trans-unit>
        <trans-unit id="0b51ea8eb5444d8238362a6351105c13802e5f44" translate="yes" xml:space="preserve">
          <source>#capture_subprocess_io</source>
          <target state="translated">#capture_subprocess_io</target>
        </trans-unit>
        <trans-unit id="7e6b9cc41a8d98c3dc9ed260dd9fa14d2c67c523" translate="yes" xml:space="preserve">
          <source>#describe</source>
          <target state="translated">#describe</target>
        </trans-unit>
        <trans-unit id="47779f17ed8f79fadf8f5ae8fcb8f181a7c9542d" translate="yes" xml:space="preserve">
          <source>#error?</source>
          <target state="translated">#error?</target>
        </trans-unit>
        <trans-unit id="943e7a7d9553de9b2ca73ce9444aef535619fcc6" translate="yes" xml:space="preserve">
          <source>#exception_details</source>
          <target state="translated">#exception_details</target>
        </trans-unit>
        <trans-unit id="de8497a1b638b684b4711fb5fa46379f053a0604" translate="yes" xml:space="preserve">
          <source>#expect</source>
          <target state="translated">#expect</target>
        </trans-unit>
        <trans-unit id="07a89e38d2c800779723fd80f61a4d273c9a023a" translate="yes" xml:space="preserve">
          <source>#failures</source>
          <target state="translated">#failures</target>
        </trans-unit>
        <trans-unit id="ae53f6ab048e6de14c2a38922984340197b7f712" translate="yes" xml:space="preserve">
          <source>#filter</source>
          <target state="translated">#filter</target>
        </trans-unit>
        <trans-unit id="d04c66a6dd817b258fc3efd8afd9ef26c7ee913b" translate="yes" xml:space="preserve">
          <source>#fit_error</source>
          <target state="translated">#fit_error</target>
        </trans-unit>
        <trans-unit id="3ab2c7da374e54b8ff6a8c1a34930ed2b7892e2e" translate="yes" xml:space="preserve">
          <source>#fit_exponential</source>
          <target state="translated">#fit_exponential</target>
        </trans-unit>
        <trans-unit id="abb360a19c03bfa3cf4d18ccd96b297432eb84d2" translate="yes" xml:space="preserve">
          <source>#fit_linear</source>
          <target state="translated">#fit_linear</target>
        </trans-unit>
        <trans-unit id="b599c72769468e94cca5eeb97d797224a6d72511" translate="yes" xml:space="preserve">
          <source>#fit_logarithmic</source>
          <target state="translated">#fit_logarithmic</target>
        </trans-unit>
        <trans-unit id="79c202c67a6804605c2d60c932a462dce12a0369" translate="yes" xml:space="preserve">
          <source>#fit_power</source>
          <target state="translated">#fit_power</target>
        </trans-unit>
        <trans-unit id="38de179c1916142a7cef89c9e20546600b583a78" translate="yes" xml:space="preserve">
          <source>#flunk</source>
          <target state="translated">#flunk</target>
        </trans-unit>
        <trans-unit id="d491e6801709c8291feaa618b153407704fd46d4" translate="yes" xml:space="preserve">
          <source>#jruby?</source>
          <target state="translated">#jruby?</target>
        </trans-unit>
        <trans-unit id="bd4eacc10f5d8381e94a06a51852162630e9a320" translate="yes" xml:space="preserve">
          <source>#klass</source>
          <target state="translated">#klass</target>
        </trans-unit>
        <trans-unit id="d7143de3452793d79f4ccb3cb25888c1a0e38f39" translate="yes" xml:space="preserve">
          <source>#location</source>
          <target state="translated">#location</target>
        </trans-unit>
        <trans-unit id="916e7bcec28063f082c1aaaeccc4580376b285fd" translate="yes" xml:space="preserve">
          <source>#maglev?</source>
          <target state="translated">#maglev?</target>
        </trans-unit>
        <trans-unit id="834a77dba3a4b4141e7f8b5201d079f3657a6b1a" translate="yes" xml:space="preserve">
          <source>#message</source>
          <target state="translated">#message</target>
        </trans-unit>
        <trans-unit id="2bee20afc3bfbc7571e7d906acd209ece0b5a4f7" translate="yes" xml:space="preserve">
          <source>#mu_pp</source>
          <target state="translated">#mu_pp</target>
        </trans-unit>
        <trans-unit id="166920f00d5d31b87fff68c59c464131cf2f5eef" translate="yes" xml:space="preserve">
          <source>#mu_pp_for_diff</source>
          <target state="translated">#mu_pp_for_diff</target>
        </trans-unit>
        <trans-unit id="7cb3c10670af5774d3e6fe1b6d4196bd4b8d1aaa" translate="yes" xml:space="preserve">
          <source>#must_be</source>
          <target state="translated">#must_be</target>
        </trans-unit>
        <trans-unit id="027351961b5b2a8bfc8c8a8a82986ee1c5914f6f" translate="yes" xml:space="preserve">
          <source>#must_be_close_to</source>
          <target state="translated">#must_be_close_to</target>
        </trans-unit>
        <trans-unit id="9a3defdb68ecedaf5065ccb7fed0d295804cfb2d" translate="yes" xml:space="preserve">
          <source>#must_be_empty</source>
          <target state="translated">#must_be_empty</target>
        </trans-unit>
        <trans-unit id="ca11a9e0091900468cc7b94d83ec0ab9b1d7c5a2" translate="yes" xml:space="preserve">
          <source>#must_be_instance_of</source>
          <target state="translated">#must_be_instance_of</target>
        </trans-unit>
        <trans-unit id="52e2e162eea69f97106d03cb6b18150168c06eaa" translate="yes" xml:space="preserve">
          <source>#must_be_kind_of</source>
          <target state="translated">#must_be_kind_of</target>
        </trans-unit>
        <trans-unit id="44c245794c776329c1a4bfb8cbe896f97a5fc024" translate="yes" xml:space="preserve">
          <source>#must_be_nil</source>
          <target state="translated">#must_be_nil</target>
        </trans-unit>
        <trans-unit id="1b21cc4b6ed4749ea30468c87e4d9c2f1ec16c89" translate="yes" xml:space="preserve">
          <source>#must_be_same_as</source>
          <target state="translated">#must_be_same_as</target>
        </trans-unit>
        <trans-unit id="56bb142d4e783587a026cfc9dee8f20c96f32f4e" translate="yes" xml:space="preserve">
          <source>#must_be_silent</source>
          <target state="translated">#must_be_silent</target>
        </trans-unit>
        <trans-unit id="47085a1bc8940a3b0a38efad249b71a26090210d" translate="yes" xml:space="preserve">
          <source>#must_be_within_delta</source>
          <target state="translated">#must_be_within_delta</target>
        </trans-unit>
        <trans-unit id="7cbb7ce2c93c5c5764a729da5d3e2fb9d118a3a8" translate="yes" xml:space="preserve">
          <source>#must_be_within_epsilon</source>
          <target state="translated">#must_be_within_epsilon</target>
        </trans-unit>
        <trans-unit id="1b7ba51942d0ecabf41666088421ab812ca093a1" translate="yes" xml:space="preserve">
          <source>#must_equal</source>
          <target state="translated">#must_equal</target>
        </trans-unit>
        <trans-unit id="d1510246563f6eef927a45ffcbc6e19068a5daff" translate="yes" xml:space="preserve">
          <source>#must_include</source>
          <target state="translated">#must_include</target>
        </trans-unit>
        <trans-unit id="2d22d5158d698e70e17b0a300d65a3ec0dfcd3f3" translate="yes" xml:space="preserve">
          <source>#must_match</source>
          <target state="translated">#must_match</target>
        </trans-unit>
        <trans-unit id="ba4d665526eec9e6dbe0b1e70b59e9b2cee1cde9" translate="yes" xml:space="preserve">
          <source>#must_output</source>
          <target state="translated">#must_output</target>
        </trans-unit>
        <trans-unit id="b42e4240ec0ff782688da0231cfb27b70874cdf4" translate="yes" xml:space="preserve">
          <source>#must_raise</source>
          <target state="translated">#must_raise</target>
        </trans-unit>
        <trans-unit id="044a30d63282cbd22b36afbb741b475edf6c4f3e" translate="yes" xml:space="preserve">
          <source>#must_respond_to</source>
          <target state="translated">#must_respond_to</target>
        </trans-unit>
        <trans-unit id="72038150042c5d7bc266c8615e091c7c7e550f3b" translate="yes" xml:space="preserve">
          <source>#must_throw</source>
          <target state="translated">#must_throw</target>
        </trans-unit>
        <trans-unit id="f7db73d98d36efc007345621b75ca305efd9e972" translate="yes" xml:space="preserve">
          <source>#name=</source>
          <target state="translated">#name=</target>
        </trans-unit>
        <trans-unit id="e56cc9ae65fd59053f8f53a14a0a36e530e02682" translate="yes" xml:space="preserve">
          <source>#passed?</source>
          <target state="translated">#passed?</target>
        </trans-unit>
        <trans-unit id="3bdfbee7a2d5e40bb647ad54e7d9f1a7da04216d" translate="yes" xml:space="preserve">
          <source>#prerecord</source>
          <target state="translated">#prerecord</target>
        </trans-unit>
        <trans-unit id="1e0983d63400f2edad79c2e15160350098deb8d3" translate="yes" xml:space="preserve">
          <source>#pride</source>
          <target state="translated">#pride</target>
        </trans-unit>
        <trans-unit id="13d7a344ca23366ea9bf8d8be867d8b306afd8a4" translate="yes" xml:space="preserve">
          <source>#print</source>
          <target state="translated">#print</target>
        </trans-unit>
        <trans-unit id="06a0962da7c258ad353f23b101e86d0eda1dbbac" translate="yes" xml:space="preserve">
          <source>#record</source>
          <target state="translated">#record</target>
        </trans-unit>
        <trans-unit id="48ba199074db8a39752df989bd9a88f917c122c2" translate="yes" xml:space="preserve">
          <source>#refute</source>
          <target state="translated">#refute</target>
        </trans-unit>
        <trans-unit id="bdba0ea441a267aaf612c91bbfc73a6ca06a9549" translate="yes" xml:space="preserve">
          <source>#refute_empty</source>
          <target state="translated">#refute_empty</target>
        </trans-unit>
        <trans-unit id="48cd2da26759d264206c5904b862abaa91a2006a" translate="yes" xml:space="preserve">
          <source>#refute_equal</source>
          <target state="translated">#refute_equal</target>
        </trans-unit>
        <trans-unit id="fe904504b773a41c797258d3c639bda945329942" translate="yes" xml:space="preserve">
          <source>#refute_in_delta</source>
          <target state="translated">#refute_in_delta</target>
        </trans-unit>
        <trans-unit id="4f981f91be63246f13a64a134722a65dbd6a21df" translate="yes" xml:space="preserve">
          <source>#refute_in_epsilon</source>
          <target state="translated">#refute_in_epsilon</target>
        </trans-unit>
        <trans-unit id="2755b612b97f70c9cb563af1f97a9f0586142178" translate="yes" xml:space="preserve">
          <source>#refute_includes</source>
          <target state="translated">#refute_includes</target>
        </trans-unit>
        <trans-unit id="bfb58aa10db96f0b9041b36557116799a8bf0fa8" translate="yes" xml:space="preserve">
          <source>#refute_instance_of</source>
          <target state="translated">#refute_instance_of</target>
        </trans-unit>
        <trans-unit id="db0b6e446ee4066d75e806be712e85494acd66ec" translate="yes" xml:space="preserve">
          <source>#refute_kind_of</source>
          <target state="translated">#refute_kind_of</target>
        </trans-unit>
        <trans-unit id="9718e0cd24e766b84efb86e66e99cb4ee8cd2c2c" translate="yes" xml:space="preserve">
          <source>#refute_match</source>
          <target state="translated">#refute_match</target>
        </trans-unit>
        <trans-unit id="dd2459381cb9e07cdc55d49474e7c31e1babe851" translate="yes" xml:space="preserve">
          <source>#refute_nil</source>
          <target state="translated">#refute_nil</target>
        </trans-unit>
        <trans-unit id="482b2fd24cb7d2cf8e460d20888d14044c8b2704" translate="yes" xml:space="preserve">
          <source>#refute_operator</source>
          <target state="translated">#refute_operator</target>
        </trans-unit>
        <trans-unit id="f113a4757651628f147e24f89dacae9b04ced78d" translate="yes" xml:space="preserve">
          <source>#refute_predicate</source>
          <target state="translated">#refute_predicate</target>
        </trans-unit>
        <trans-unit id="48e5f540411b7d46cba27e94a039f61f602c5280" translate="yes" xml:space="preserve">
          <source>#refute_respond_to</source>
          <target state="translated">#refute_respond_to</target>
        </trans-unit>
        <trans-unit id="bb8059d3af318a7f6ac0e0c6a1b757e4a7e7a6fa" translate="yes" xml:space="preserve">
          <source>#refute_same</source>
          <target state="translated">#refute_same</target>
        </trans-unit>
        <trans-unit id="c818cad163e7eb11ae137ee4b78fcc4ecbe0a49b" translate="yes" xml:space="preserve">
          <source>#report</source>
          <target state="translated">#report</target>
        </trans-unit>
        <trans-unit id="a4ee741d6c22f2896bb7bb59efd9104e9d9de3c6" translate="yes" xml:space="preserve">
          <source>#reporters</source>
          <target state="translated">#reporters</target>
        </trans-unit>
        <trans-unit id="d4a787de61ec378f91fd6b89de43303a3cd89283" translate="yes" xml:space="preserve">
          <source>#result_code</source>
          <target state="translated">#result_code</target>
        </trans-unit>
        <trans-unit id="19cd59e3d941b06b11d2af800a1eccd60bdc1413" translate="yes" xml:space="preserve">
          <source>#rubinius?</source>
          <target state="translated">#rubinius?</target>
        </trans-unit>
        <trans-unit id="345e65223d5211c1a2be6f2ea8f2c6131b02d1fa" translate="yes" xml:space="preserve">
          <source>#sigma</source>
          <target state="translated">#sigma</target>
        </trans-unit>
        <trans-unit id="2c0f22e264b7022ec5c20b607bbc088c1df39be7" translate="yes" xml:space="preserve">
          <source>#skipped?</source>
          <target state="translated">#skipped?</target>
        </trans-unit>
        <trans-unit id="d78d9be98da45895ef5f55535ae98038966568bf" translate="yes" xml:space="preserve">
          <source>#source_location</source>
          <target state="translated">#source_location</target>
        </trans-unit>
        <trans-unit id="4fa61c35c78d02241e60847f39df4220dcca76cc" translate="yes" xml:space="preserve">
          <source>#start</source>
          <target state="translated">#start</target>
        </trans-unit>
        <trans-unit id="3ac7898fdd69b73bd661c7e14ab211ba737a4bd3" translate="yes" xml:space="preserve">
          <source>#unknown</source>
          <target state="translated">#unknown</target>
        </trans-unit>
        <trans-unit id="b6b3e5cedc97f93e9042362dfe1a8dd5c5b9c690" translate="yes" xml:space="preserve">
          <source>#validation_for_fit</source>
          <target state="translated">#validation_for_fit</target>
        </trans-unit>
        <trans-unit id="7a49dd54918a3ada9b9d4a6273c6a24efd72ac44" translate="yes" xml:space="preserve">
          <source>#verify</source>
          <target state="translated">#verify</target>
        </trans-unit>
        <trans-unit id="f24e305e951d7fe0ae2a415596ac01cface7e2d2" translate="yes" xml:space="preserve">
          <source>#windows?</source>
          <target state="translated">#windows?</target>
        </trans-unit>
        <trans-unit id="382da45c8d8d2a2526ab6d2eebcd24ba873f41de" translate="yes" xml:space="preserve">
          <source>#wont_be</source>
          <target state="translated">#wont_be</target>
        </trans-unit>
        <trans-unit id="33ff831ecf3206814e16e19ca8a8202945bfe3d6" translate="yes" xml:space="preserve">
          <source>#wont_be_close_to</source>
          <target state="translated">#wont_be_close_to</target>
        </trans-unit>
        <trans-unit id="d6c7683c8860e8807f2240bd0740adc38f81cb88" translate="yes" xml:space="preserve">
          <source>#wont_be_empty</source>
          <target state="translated">#wont_be_empty</target>
        </trans-unit>
        <trans-unit id="144191b6018881fc3b3cbca5dd806fdb796cf66d" translate="yes" xml:space="preserve">
          <source>#wont_be_instance_of</source>
          <target state="translated">#wont_be_instance_of</target>
        </trans-unit>
        <trans-unit id="971d8ddf8d9bac9c1e271ef5dae5062ae1e9e98c" translate="yes" xml:space="preserve">
          <source>#wont_be_kind_of</source>
          <target state="translated">#wont_be_kind_of</target>
        </trans-unit>
        <trans-unit id="8855f8b2093d3dcd2cf348a89deae8d2257a6613" translate="yes" xml:space="preserve">
          <source>#wont_be_nil</source>
          <target state="translated">#wont_be_nil</target>
        </trans-unit>
        <trans-unit id="3e9b16b593f6358bb125c486bc2235700bcdccbf" translate="yes" xml:space="preserve">
          <source>#wont_be_same_as</source>
          <target state="translated">#wont_be_same_as</target>
        </trans-unit>
        <trans-unit id="2e3db771a0815723a51bbd792152b834f71059a1" translate="yes" xml:space="preserve">
          <source>#wont_be_within_delta</source>
          <target state="translated">#wont_be_within_delta</target>
        </trans-unit>
        <trans-unit id="f19c6cdb9f120b3d34683db7c88f9f89a8f50f85" translate="yes" xml:space="preserve">
          <source>#wont_be_within_epsilon</source>
          <target state="translated">#wont_be_within_epsilon</target>
        </trans-unit>
        <trans-unit id="9525b7663a79ff88ede810a74fa1682db5e9afb4" translate="yes" xml:space="preserve">
          <source>#wont_equal</source>
          <target state="translated">#wont_equal</target>
        </trans-unit>
        <trans-unit id="2c060bf1b4be2b94d435f5e01179c8c19c9fa7dc" translate="yes" xml:space="preserve">
          <source>#wont_include</source>
          <target state="translated">#wont_include</target>
        </trans-unit>
        <trans-unit id="ed3b7ce4e2fa985602d4b9f51aa1804cb91452f9" translate="yes" xml:space="preserve">
          <source>#wont_match</source>
          <target state="translated">#wont_match</target>
        </trans-unit>
        <trans-unit id="6bc2eea435d9b5c2544f615d74e93b3a5ef1d3e9" translate="yes" xml:space="preserve">
          <source>#wont_respond_to</source>
          <target state="translated">#wont_respond_to</target>
        </trans-unit>
        <trans-unit id="35399424bf25cd2eb0e683c0c8577b8dec3cf36c" translate="yes" xml:space="preserve">
          <source>&amp;copy; Ryan Davis, seattle.rb</source>
          <target state="translated">&amp;copy;瑞安&amp;middot;戴维斯（Ryan Davis），seattle.rb</target>
        </trans-unit>
        <trans-unit id="fec56de8a204d9bc7b3242531ecef8079b47c95d" translate="yes" xml:space="preserve">
          <source>&amp;hellip;and of course, everything from seattle.rb&amp;hellip;</source>
          <target state="translated">&amp;hellip;当然还有seattle.rb的一切&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="bc4cf855fe379534fc72dac834eb92b9f12e538c" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Mocks are pre-programmed with expectations which form a specification of the calls they are expected to receive. They can throw an exception if they receive a call they don't expect and are checked during verification to ensure they got all the calls they were expecting.&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;模拟已预先设定好期望值，从而形成了预期会收到的呼叫的规范。如果收到不希望的电话，并且可以在验证过程中进行检查，以确保收到所有他们期望的电话，他们可以抛出异常。&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="60c5dbff0d8d2cdf6fd88c2ed900e0f77a3fd8c8" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Stubs provide canned answers to calls made during the test&amp;rdquo;.</source>
          <target state="translated">&amp;ldquo;存根为测试期间发出的呼叫提供罐装答案&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="4d0a4f1d7489b50353c204692c8e9a659adf9576" translate="yes" xml:space="preserve">
          <source>&amp;lt;&amp;lt;(reporter)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">&amp;lt;&amp;lt;（记者）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aee9916bcc011f63ea1fb4a16f20bffc132aa3ba" translate="yes" xml:space="preserve">
          <source>&amp;lt;&amp;lt;(work;)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">&amp;lt;&amp;lt;（工作；）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="10a3de522995fe0d57219eb1c28dfc60e8313f11" translate="yes" xml:space="preserve">
          <source>(Inspired by lolcat, but with clean math)</source>
          <target state="translated">（受lolcat启发，但数学公式简洁）</target>
        </trans-unit>
        <trans-unit id="d58ac2cfb5106bb11875e107aaa3daa783866f39" translate="yes" xml:space="preserve">
          <source>(The MIT License)</source>
          <target state="translated">（麻省理工学院执照）</target>
        </trans-unit>
        <trans-unit id="5659289db39f61aae3617a548b6e48bda5edd11c" translate="yes" xml:space="preserve">
          <source>**Multi-threading and Mocks**</source>
          <target state="translated">**多线程和模拟**</target>
        </trans-unit>
        <trans-unit id="83a8de2e0df86a78901aebb16cc59277b4b7eb56" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;assertion&quot;&gt;Assertion&lt;/a&gt; raised when skipping a run.</source>
          <target state="translated">&lt;a href=&quot;assertion&quot;&gt;&lt;/a&gt;跳过运行时会引发断言。</target>
        </trans-unit>
        <trans-unit id="ccd0cd8cd2ffe088500226d6ed8911e34edb3fc8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;assertion&quot;&gt;Assertion&lt;/a&gt; wrapping an unexpected error that was raised during a run.</source>
          <target state="translated">&lt;a href=&quot;assertion&quot;&gt;断言&lt;/a&gt;包装了运行期间引发的意外错误。</target>
        </trans-unit>
        <trans-unit id="a79c3e361724e37f2b98faa3896c50acb796a502" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;assertions&quot;&gt;Minitest::Assertions&lt;/a&gt;, &lt;a href=&quot;reportable&quot;&gt;Minitest::Reportable&lt;/a&gt;, &lt;a href=&quot;test/lifecyclehooks&quot;&gt;Minitest::Test::LifecycleHooks&lt;/a&gt;, &lt;a href=&quot;guard&quot;&gt;Minitest::Guard&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;assertions&quot;&gt;最小测试::断言&lt;/a&gt;，&lt;a href=&quot;reportable&quot;&gt;最小&lt;/a&gt;&lt;a href=&quot;test/lifecyclehooks&quot;&gt;测试:: &lt;/a&gt;可报告，最小测试::测试:: LifecycleHooks，&lt;a href=&quot;guard&quot;&gt;最小&lt;/a&gt;测试:: Guard</target>
        </trans-unit>
        <trans-unit id="bcb294d30ad9305630a034e7d56e56a24bfc52e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;kernel&quot;&gt;Kernel&lt;/a&gt; extensions for minitest</source>
          <target state="translated">&lt;a href=&quot;kernel&quot;&gt;&lt;/a&gt;最小的内核扩展</target>
        </trans-unit>
        <trans-unit id="9dd7da28b19c15cd2e511077c568d407b40a76cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;minitest/assertions&quot;&gt;Assertions&lt;/a&gt; and expectations for testing Capistrano recipes.</source>
          <target state="translated">&lt;a href=&quot;minitest/assertions&quot;&gt;&lt;/a&gt;测试Capistrano配方的断言和期望。</target>
        </trans-unit>
        <trans-unit id="d440224cf60af689b641e7789b16087f0a67c581" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;minitest/parallel&quot;&gt;Parallel&lt;/a&gt; test executor</source>
          <target state="translated">&lt;a href=&quot;minitest/parallel&quot;&gt;并行&lt;/a&gt;测试执行器</target>
        </trans-unit>
        <trans-unit id="d1016373237220405774f241080cfe02fedc1614" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;minitest/spec&quot;&gt;Minitest::Spec&lt;/a&gt; extensions for Rails and beyond.</source>
          <target state="translated">&lt;a href=&quot;minitest/spec&quot;&gt;Minitest :: Spec&lt;/a&gt;扩展了Rails及其他。</target>
        </trans-unit>
        <trans-unit id="125eb38eee2a2b885195ff66fe5d45942594ee28" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;minitest/test&quot;&gt;Test&lt;/a&gt; names print Ruby &lt;a href=&quot;object&quot;&gt;Object&lt;/a&gt; types in color with your Minitest &lt;a href=&quot;minitest/spec&quot;&gt;Spec&lt;/a&gt; style tests.</source>
          <target state="translated">&lt;a href=&quot;minitest/test&quot;&gt;测试&lt;/a&gt;名称会在您的Minitest &lt;a href=&quot;minitest/spec&quot;&gt;Spec&lt;/a&gt;样式测试中以彩色显示Ruby &lt;a href=&quot;object&quot;&gt;Object&lt;/a&gt;类型。</target>
        </trans-unit>
        <trans-unit id="77ded8a50ceaaad1613bcb1aad14262d16174937" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;minitest/test&quot;&gt;Test&lt;/a&gt; notifier for minitest via growl.</source>
          <target state="translated">&lt;a href=&quot;minitest/test&quot;&gt;&lt;/a&gt;通过咆哮进行最小测试的测试通知程序。</target>
        </trans-unit>
        <trans-unit id="d316f804932243be5d2577a6791b7c5b0f811369" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;minitest/test&quot;&gt;Test&lt;/a&gt; notifier for minitest via libnotify.</source>
          <target state="translated">&lt;a href=&quot;minitest/test&quot;&gt;&lt;/a&gt;通过libnotify 测试 minitest的通知程序。</target>
        </trans-unit>
        <trans-unit id="d8d4765516ed3d21a70fe617f6eb3cffb9df443f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;object&quot;&gt;Object&lt;/a&gt; extensions for &lt;a href=&quot;minitest/mock&quot;&gt;Minitest::Mock&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;object&quot;&gt;&lt;/a&gt;&lt;a href=&quot;minitest/mock&quot;&gt;Minitest :: Mock的&lt;/a&gt;对象扩展。</target>
        </trans-unit>
        <trans-unit id="ff1ee5b547ff089db90a92c775e60c1831211bb6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;spec&quot;&gt;Minitest::Spec&lt;/a&gt; &amp;ndash; The faster, better, less-magical spec framework!</source>
          <target state="translated">&lt;a href=&quot;spec&quot;&gt;Minitest :: Spec&lt;/a&gt; &amp;ndash;更快，更好，更神奇的spec框架！</target>
        </trans-unit>
        <trans-unit id="08deaf8d172cda9d890a1d11660fae86e8781a32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AbstractReporter&lt;/code&gt; defines the API for reporters. You may subclass it and override any method you want to achieve your desired behavior.</source>
          <target state="translated">&lt;code&gt;AbstractReporter&lt;/code&gt; 为记者定义了API。您可以将其子类化，并覆盖要实现所需行为的任​​何方法。</target>
        </trans-unit>
        <trans-unit id="d17679dd040af97a80e55a921cceeb4f7104f0b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;args&lt;/code&gt; is compared to the expected args using case equality (ie, the '===' operator), allowing for less specific expectations.</source>
          <target state="translated">&lt;code&gt;args&lt;/code&gt; 是相比于使用的情况下相等（即，&amp;ldquo;===&amp;rdquo;操作符）的预期指定参数时，允许较少的特定的期望。</target>
        </trans-unit>
        <trans-unit id="f7e918a0c8b7f393d294f0fb0e860d1636198760" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exp&lt;/code&gt; takes an optional message on the end to help explain failures and defaults to StandardError if no exception class is passed.</source>
          <target state="translated">&lt;code&gt;exp&lt;/code&gt; 最后会显示一条可选消息以帮助解释失败，如果未传递任何异常类，则默认为StandardError。</target>
        </trans-unit>
        <trans-unit id="97f69be336dfbebaef11894883da11c5dd745017" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;send_ary&lt;/code&gt; is a receiver, message and arguments.</source>
          <target state="translated">&lt;code&gt;send_ary&lt;/code&gt; 是接收者，消息和参数。</target>
        </trans-unit>
        <trans-unit id="f2df68dd2ba58d81e5dafb4f8cd061ff31173b14" translate="yes" xml:space="preserve">
          <source>A minitest plugin that adds a report of the top tests by number of objects allocated.</source>
          <target state="translated">一个迷你测试插件,它增加了一个按分配对象数量排列的顶级测试报告。</target>
        </trans-unit>
        <trans-unit id="489b76ddb408876427083a7c5fdc1010dff504f1" translate="yes" xml:space="preserve">
          <source>A note on stubbing: In order to stub a method, the method must actually exist prior to stubbing. Use a singleton method to create a new non-existing method:</source>
          <target state="translated">关于 &quot;存根 &quot;的说明。为了存根一个方法,在存根之前,该方法必须实际存在。使用单人方法来创建一个新的不存在的方法。</target>
        </trans-unit>
        <trans-unit id="19f537dacbaa07115d3293d3f296ebad695ed470" translate="yes" xml:space="preserve">
          <source>A pry plugin w/ minitest support. See pry-rescue/minitest.rb.</source>
          <target state="translated">一个支持minitest的pry插件。参见pry-rescue/minitest.rb。</target>
        </trans-unit>
        <trans-unit id="c2604c3cd79723933c2cfaa4c7ab3e518eb04094" translate="yes" xml:space="preserve">
          <source>A reporter that gathers statistics about a test run. Does not do any IO because meant to be used as a parent class for a reporter that does.</source>
          <target state="translated">一个收集测试运行统计数据的报告器。不做任何IO,因为它的目的是作为做IO的报告器的父类。</target>
        </trans-unit>
        <trans-unit id="f732c33b4f7c425bccb7a4f4ffb2fea89cbe14e9" translate="yes" xml:space="preserve">
          <source>A reporter that prints the header, summary, and failure details at the end of the run.</source>
          <target state="translated">一个报告器,在运行结束时打印标题、摘要和失败细节。</target>
        </trans-unit>
        <trans-unit id="915dc01b0af9546531f9fc698b935fe798c718e9" translate="yes" xml:space="preserve">
          <source>A simple and clean mock object framework.</source>
          <target state="translated">一个简单干净的模拟对象框架。</target>
        </trans-unit>
        <trans-unit id="245a2c8a842c3fd4700757c3bf04556e99abde3f" translate="yes" xml:space="preserve">
          <source>A simple hook allowing you to run a block of code after everything is done running. Eg:</source>
          <target state="translated">一个简单的钩子,允许你在所有的代码运行完毕后运行一个代码块。例如</target>
        </trans-unit>
        <trans-unit id="1030fdb12cc21d4e0bb60f420331ecb398f37b7e" translate="yes" xml:space="preserve">
          <source>A very simple reporter that prints the &amp;ldquo;dots&amp;rdquo; during the run.</source>
          <target state="translated">一个非常简单的报告程序，可以在运行期间打印&amp;ldquo;点&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="f603d22086a7b952433d4bd508695e0006992811" translate="yes" xml:space="preserve">
          <source>About to start running a test. This allows a reporter to show that it is starting or that we are in the middle of a test run.</source>
          <target state="translated">即将开始运行测试。这可以让记者显示它正在开始或我们正在测试运行中。</target>
        </trans-unit>
        <trans-unit id="0772030a47427df8d8b76d07495454986efc103f" translate="yes" xml:space="preserve">
          <source>Activate the pride plugin. Called from both -p option and minitest/pride</source>
          <target state="translated">激活pride插件。在-p选项和minitest/pride中均可调用。</target>
        </trans-unit>
        <trans-unit id="d98ebd46008ecbd9fa13be4f7c084d6b2b2a7b38" translate="yes" xml:space="preserve">
          <source>Add a job to the queue</source>
          <target state="translated">将作业添加到队列中</target>
        </trans-unit>
        <trans-unit id="2a8eeeac840ad3c25d55396bea7020a1724476c7" translate="yes" xml:space="preserve">
          <source>Add a temporary stubbed method replacing &lt;code&gt;name&lt;/code&gt; for the duration of the &lt;code&gt;block&lt;/code&gt;. If &lt;code&gt;val_or_callable&lt;/code&gt; responds to call, then it returns the result of calling it, otherwise returns the value as-is. If stubbed method yields a block, &lt;code&gt;block_args&lt;/code&gt; will be passed along. Cleans up the stub at the end of the &lt;code&gt;block&lt;/code&gt;. The method &lt;code&gt;name&lt;/code&gt; must exist before stubbing.</source>
          <target state="translated">添加一个临时的存根方法，在 &lt;code&gt;block&lt;/code&gt; 的持续时间内替换 &lt;code&gt;name&lt;/code&gt; 。如果 &lt;code&gt;val_or_callable&lt;/code&gt; 响应调用，则返回调用结果，否则按原样返回值。如果存根方法产生一个块，则会传递 &lt;code&gt;block_args&lt;/code&gt; 。清理 &lt;code&gt;block&lt;/code&gt; 末尾的存根。在存根之前，方法 &lt;code&gt;name&lt;/code&gt; 必须存在。</target>
        </trans-unit>
        <trans-unit id="93b23f9be796d63e1c210d22ac1a804513ac6f19" translate="yes" xml:space="preserve">
          <source>Add another reporter to the mix.</source>
          <target state="translated">再加一个记者。</target>
        </trans-unit>
        <trans-unit id="e80f87db86b1a6c4f574612ce67ec882af85fed1" translate="yes" xml:space="preserve">
          <source>Add benchmarks to your tests.</source>
          <target state="translated">为您的测试添加基准。</target>
        </trans-unit>
        <trans-unit id="fa99795dbb2a5564bb8a1a40c15c4fbe16122c5a" translate="yes" xml:space="preserve">
          <source>Add tags for minitest.</source>
          <target state="translated">为minitest添加标签。</target>
        </trans-unit>
        <trans-unit id="db1658e6838a4228b757427fde3d92596a226f60" translate="yes" xml:space="preserve">
          <source>Adding all manner of shoulds to Minitest (bad idea)</source>
          <target state="translated">在Minitest中添加各种形式的应该(坏主意)。</target>
        </trans-unit>
        <trans-unit id="9522c403720996838e5c7de2395fd2c1b2164309" translate="yes" xml:space="preserve">
          <source>Adding custom reporters</source>
          <target state="translated">添加自定义报告器</target>
        </trans-unit>
        <trans-unit id="fce62b811756eda708304eced80821e1cfed7b49" translate="yes" xml:space="preserve">
          <source>Adds Minitest assertions to test for errors raised or not raised by Minitest itself.</source>
          <target state="translated">添加 Minitest 断言,以测试 Minitest 本身提出或未提出的错误。</target>
        </trans-unit>
        <trans-unit id="0ded15588c73ca48701049ea122caf6a04aa6abd" translate="yes" xml:space="preserve">
          <source>Adds Minitest assertions to test for the existence of HTML tags, including contents, within a provided string.</source>
          <target state="translated">添加Minitest断言,以测试所提供的字符串中是否存在HTML标签,包括内容。</target>
        </trans-unit>
        <trans-unit id="ac50e3478147a47f16d40bf5c69e608cf922b2da" translate="yes" xml:space="preserve">
          <source>Adds a new assertion to minitest for checking the contents of a collection, ignoring element order.</source>
          <target state="translated">为 minitest 添加了一个新的断言,用于检查集合的内容,忽略元素顺序。</target>
        </trans-unit>
        <trans-unit id="d00b76d2937c78bb02215724deb700983ef70029" translate="yes" xml:space="preserve">
          <source>Adds assertion and expectation to help testing filesystem contents.</source>
          <target state="translated">增加了断言和期望,以帮助测试文件系统内容。</target>
        </trans-unit>
        <trans-unit id="be6c492ca4f2fc7ac5fdf8ea5bfce34b03c223ac" translate="yes" xml:space="preserve">
          <source>Adds assertions that adhere to the matcher spec, but without any expectation infections.</source>
          <target state="translated">添加坚持匹配器规范的断言,但没有任何期望感染。</target>
        </trans-unit>
        <trans-unit id="f30f2f2113d516569ecbef39d73b19642b740934" translate="yes" xml:space="preserve">
          <source>Adds support for .predicate? methods.</source>
          <target state="translated">增加对.predicate? 方法的支持。</target>
        </trans-unit>
        <trans-unit id="b7ab0d506eec98190acbc63ba62ccdc84dd6cb0c" translate="yes" xml:space="preserve">
          <source>Adds support for RSpec-style let! to immediately invoke let statements before each test.</source>
          <target state="translated">增加对RSpec风格的let!的支持,以便在每次测试前立即调用let语句。</target>
        </trans-unit>
        <trans-unit id="b711149ff2fa2aa0c1d8452b1df1f8294a324a14" translate="yes" xml:space="preserve">
          <source>Adds support for RSpec-style matchers to minitest.</source>
          <target state="translated">为 minitest 增加了对 RSpec 式匹配器的支持。</target>
        </trans-unit>
        <trans-unit id="6e376dd4f94ae5b344821a6700a602e0f71c7701" translate="yes" xml:space="preserve">
          <source>Alias for: &lt;a href=&quot;dsl#method-i-it&quot;&gt;it&lt;/a&gt;</source>
          <target state="translated">别名：&lt;a href=&quot;dsl#method-i-it&quot;&gt;it&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="161084de60ecbb1e6f299047152f0292e88264cc" translate="yes" xml:space="preserve">
          <source>Alias for: &lt;a href=&quot;expectations#method-i-must_be_close_to&quot;&gt;must_be_close_to&lt;/a&gt;</source>
          <target state="translated">别名：&lt;a href=&quot;expectations#method-i-must_be_close_to&quot;&gt;must_be_close_to&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6393bed619a7656468fce4128493a5777b920dab" translate="yes" xml:space="preserve">
          <source>Alias for: &lt;a href=&quot;expectations#method-i-wont_be_close_to&quot;&gt;wont_be_close_to&lt;/a&gt;</source>
          <target state="translated">别名：&lt;a href=&quot;expectations#method-i-wont_be_close_to&quot;&gt;wont_be_close_to&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6f2a2c1d957887d8a0758a22e1cbe8aa7c9470bf" translate="yes" xml:space="preserve">
          <source>Alias for: &lt;a href=&quot;instancemethods#method-i-_&quot;&gt;_&lt;/a&gt;</source>
          <target state="translated">别名：&lt;a href=&quot;instancemethods#method-i-_&quot;&gt;_&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6cbb18280f181aa21b68f28e1347f7bb48559840" translate="yes" xml:space="preserve">
          <source>All mock objects are an instance of &lt;a href=&quot;mock&quot;&gt;Mock&lt;/a&gt;</source>
          <target state="translated">所有模拟对象都是&lt;a href=&quot;mock&quot;&gt;Mock&lt;/a&gt;的实例</target>
        </trans-unit>
        <trans-unit id="082146b9741ad615ade8460a8d28da7f8f4d692c" translate="yes" xml:space="preserve">
          <source>Also aliased as: &lt;a href=&quot;dsl#method-i-specify&quot;&gt;specify&lt;/a&gt;</source>
          <target state="translated">此外别名为：&lt;a href=&quot;dsl#method-i-specify&quot;&gt;指定&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f947bca2ab315d6c48a78e20457827866ad0b916" translate="yes" xml:space="preserve">
          <source>Also aliased as: &lt;a href=&quot;expectations#method-i-must_be_within_delta&quot;&gt;must_be_within_delta&lt;/a&gt;</source>
          <target state="translated">也别名为：&lt;a href=&quot;expectations#method-i-must_be_within_delta&quot;&gt;must_be_within_delta&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0c17505a325449693b4f49f592e3625bd87511ab" translate="yes" xml:space="preserve">
          <source>Also aliased as: &lt;a href=&quot;expectations#method-i-wont_be_within_delta&quot;&gt;wont_be_within_delta&lt;/a&gt;</source>
          <target state="translated">也别名为：&lt;a href=&quot;expectations#method-i-wont_be_within_delta&quot;&gt;wont_be_within_delta&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1d77b5b2d9a28527a57c0b3145100d9003300124" translate="yes" xml:space="preserve">
          <source>Also aliased as: &lt;a href=&quot;instancemethods#method-i-value&quot;&gt;value&lt;/a&gt;, &lt;a href=&quot;instancemethods#method-i-expect&quot;&gt;expect&lt;/a&gt;</source>
          <target state="translated">也别名为：&lt;a href=&quot;instancemethods#method-i-value&quot;&gt;value&lt;/a&gt;，&lt;a href=&quot;instancemethods#method-i-expect&quot;&gt;Expect&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3effa6206f55875a03b811abe2472b75638c2660" translate="yes" xml:space="preserve">
          <source>Also aliased to &lt;a href=&quot;instancemethods#method-i-value&quot;&gt;value&lt;/a&gt; and &lt;a href=&quot;instancemethods#method-i-expect&quot;&gt;expect&lt;/a&gt; for your aesthetic pleasure:</source>
          <target state="translated">还兼具&lt;a href=&quot;instancemethods#method-i-value&quot;&gt;价值&lt;/a&gt;和&lt;a href=&quot;instancemethods#method-i-expect&quot;&gt;期望&lt;/a&gt;您的审美乐趣：</target>
        </trans-unit>
        <trans-unit id="7ef536b5251b1798e1bc2fcfb6d424ae39b8c9b3" translate="yes" xml:space="preserve">
          <source>An assertion raised during the run, if any.</source>
          <target state="translated">在运行过程中提出的一种说法,如果有的话。</target>
        </trans-unit>
        <trans-unit id="0db6b97104219180838690e32113adf467082028" translate="yes" xml:space="preserve">
          <source>Annotate tests with metadata (key-value).</source>
          <target state="translated">用元数据(键值)对测试进行注释。</target>
        </trans-unit>
        <trans-unit id="10000247bb88ef92d08f54117da6778a1ef199b6" translate="yes" xml:space="preserve">
          <source>Another lazy man's accessor generator. Made even more lazy by setting the name for you to &lt;code&gt;subject&lt;/code&gt;.</source>
          <target state="translated">另一个懒人的访问器生成器。通过设置 &lt;code&gt;subject&lt;/code&gt; 名称使您更加懒惰。</target>
        </trans-unit>
        <trans-unit id="3a3984c588bed413db86a5a762e538746de41e1e" translate="yes" xml:space="preserve">
          <source>Are we showing our testing pride?</source>
          <target state="translated">我们是否表现出测试的自豪感?</target>
        </trans-unit>
        <trans-unit id="fcccb4151b42c68e17dc56bc56a6795f155c635f" translate="yes" xml:space="preserve">
          <source>Are you running the test with Bundler (e.g. via &lt;code&gt;bundle exec&lt;/code&gt; )? If so, in order to require minitest, you must first add the &lt;code&gt;gem
'minitest'&lt;/code&gt; to your Gemfile and run &lt;code&gt;bundle&lt;/code&gt;. Once it's installed, you should be able to require minitest and run your tests.</source>
          <target state="translated">您是否正在使用Bundler进行测试（例如通过 &lt;code&gt;bundle exec&lt;/code&gt; ）？如果是这样，为了要求最小测试，必须首先将 &lt;code&gt;gem 'minitest'&lt;/code&gt; 添加到Gemfile中并运行 &lt;code&gt;bundle&lt;/code&gt; 。安装完成后，您应该可以要求进行minitest并运行测试。</target>
        </trans-unit>
        <trans-unit id="711d82c0d2b11ec1ed6543b2dafa4ccf1aba8f39" translate="yes" xml:space="preserve">
          <source>Around and before_all/after_all/around_all hooks</source>
          <target state="translated">围绕和before_all/after_all/around_all挂钩。</target>
        </trans-unit>
        <trans-unit id="ad6c2951d225fb1f58c5ae9667546453fd50be9e" translate="yes" xml:space="preserve">
          <source>Around block for minitest. An alternative to setup/teardown dance.</source>
          <target state="translated">围绕街区进行迷你测试。另一种方式是设置/退场舞。</target>
        </trans-unit>
        <trans-unit id="e61485f16bc0d670ff75fb3cb00b9bedf88bb941" translate="yes" xml:space="preserve">
          <source>As a simplistic example:</source>
          <target state="translated">举个简单的例子。</target>
        </trans-unit>
        <trans-unit id="e25e5cf01691b1a1c1ff720881fdbb9df187f837" translate="yes" xml:space="preserve">
          <source>Assert that the mock verifies correctly.</source>
          <target state="translated">断言模拟验证正确。</target>
        </trans-unit>
        <trans-unit id="1e252a913d49eb540e01b9aa578bf1b833fd07cc" translate="yes" xml:space="preserve">
          <source>At some point, the methods on &lt;a href=&quot;../../../object&quot;&gt;Object&lt;/a&gt; will be deprecated and then removed.</source>
          <target state="translated">在某些时候，将不赞成使用&lt;a href=&quot;../../../object&quot;&gt;Object&lt;/a&gt;上的方法，然后将其删除。</target>
        </trans-unit>
        <trans-unit id="a6652617f2c799eb11ee727b16c5646c48af6905" translate="yes" xml:space="preserve">
          <source>Attributes</source>
          <target state="translated">Attributes</target>
        </trans-unit>
        <trans-unit id="fd4faa58bca69fe74557d9c07a30396e3e3ef59a" translate="yes" xml:space="preserve">
          <source>Authors&amp;hellip; Please send me a pull request with a description of your minitest extension.</source>
          <target state="translated">作者...请向我发送请求，其中包含您的最小扩展名的描述。</target>
        </trans-unit>
        <trans-unit id="eb01e880eddc0480b2920cf637122abe8e9d1a95" translate="yes" xml:space="preserve">
          <source>Automatic cassette managment with &lt;a href=&quot;minitest/spec&quot;&gt;Minitest::Spec&lt;/a&gt; and VCR.</source>
          <target state="translated">使用&lt;a href=&quot;minitest/spec&quot;&gt;Minitest :: Spec&lt;/a&gt;和VCR 自动进行磁带管理。</target>
        </trans-unit>
        <trans-unit id="7b84f9989743fb3246873824b247578e8987a881" translate="yes" xml:space="preserve">
          <source>Automatically retry failed test to help with flakiness.</source>
          <target state="translated">自动重试失败的测试,以帮助解决浮躁问题。</target>
        </trans-unit>
        <trans-unit id="b1fe19370a0775e7f6fe60baa64e80b58c0895a9" translate="yes" xml:space="preserve">
          <source>BasicObject</source>
          <target state="translated">BasicObject</target>
        </trans-unit>
        <trans-unit id="4f46ac72b3634f96c6860b1ed26d9d4cd71d21aa" translate="yes" xml:space="preserve">
          <source>Benchmarks</source>
          <target state="translated">Benchmarks</target>
        </trans-unit>
        <trans-unit id="5ae45180a13541e7a7c6461acf717dc2a2473e98" translate="yes" xml:space="preserve">
          <source>Bridge between Capybara RSpec matchers and &lt;a href=&quot;minitest/spec&quot;&gt;Minitest::Spec&lt;/a&gt; expectations (e.g. &lt;code&gt;page.must_have_content(&quot;Title&quot;)&lt;/code&gt;).</source>
          <target state="translated">在Capybara RSpec匹配器和&lt;a href=&quot;minitest/spec&quot;&gt;Minitest :: Spec&lt;/a&gt;期望之间的桥梁（例如 &lt;code&gt;page.must_have_content(&quot;Title&quot;)&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="f2f9c31f0efa5107889796d33fe89901870a5063" translate="yes" xml:space="preserve">
          <source>Bridges between test/unit and minitest.</source>
          <target state="translated">测试/单元和迷你测试之间的桥梁。</target>
        </trans-unit>
        <trans-unit id="b054d4360e8b52ff993edd4fb2710c410c9ca377" translate="yes" xml:space="preserve">
          <source>CI reporter plugin for Minitest.</source>
          <target state="translated">Minitest的CI报告插件。</target>
        </trans-unit>
        <trans-unit id="85c08fe7a3ebacb3ef2d1eb3b791b951aaf731df" translate="yes" xml:space="preserve">
          <source>Call this at the top of your tests when you absolutely positively need to have ordered tests. In doing so, you're admitting that you suck and your tests are weak.</source>
          <target state="translated">当你绝对肯定地需要有命令的测试时,在你的测试的顶部调用这个。这样做,你就承认你很烂,你的测试很弱。</target>
        </trans-unit>
        <trans-unit id="51bf908ee56c383e3387106ada8d69bfba0f443d" translate="yes" xml:space="preserve">
          <source>Call this at the top of your tests when you want to run your tests in parallel. In doing so, you're admitting that you rule and your tests are awesome.</source>
          <target state="translated">当你想并行运行你的测试时,在你的测试顶部调用这个。这样做,你就承认你是统治者,你的测试很厉害。</target>
        </trans-unit>
        <trans-unit id="156ff3a5845503e9b1add26413bb107cc924a756" translate="yes" xml:space="preserve">
          <source>Called at the end of the run.</source>
          <target state="translated">在运行结束时叫。</target>
        </trans-unit>
        <trans-unit id="201b0e1520edfc058271b8a19cf5a29f4b3e0a5a" translate="yes" xml:space="preserve">
          <source>Called for each result, passed or otherwise.</source>
          <target state="translated">对每个结果进行调用,无论是否通过。</target>
        </trans-unit>
        <trans-unit id="1cf38ea570ebd6f7d06dbcb370ebae239a1fa955" translate="yes" xml:space="preserve">
          <source>Called to see if you detected any problems.</source>
          <target state="translated">打电话问你是否发现了什么问题。</target>
        </trans-unit>
        <trans-unit id="ad13020fa9305d08ea43bd0d9f8a45cb6d7c90fa" translate="yes" xml:space="preserve">
          <source>Called when the run has started.</source>
          <target state="translated">运行开始后调用。</target>
        </trans-unit>
        <trans-unit id="d4568c7488bd757275952dcb035d525cea291830" translate="yes" xml:space="preserve">
          <source>Calls superclass method</source>
          <target state="translated">调用超类方法</target>
        </trans-unit>
        <trans-unit id="7b8ee21a349afe2c24bd0c1d18694d937ef3d844" translate="yes" xml:space="preserve">
          <source>Calls superclass method &lt;a href=&quot;benchmark#method-c-bench_range&quot;&gt;Minitest::Benchmark.bench_range&lt;/a&gt;</source>
          <target state="translated">调用超类方法&lt;a href=&quot;benchmark#method-c-bench_range&quot;&gt;Minitest :: Benchmark.bench_range&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5a181e913e8d236bff11b5e79ed4331b4150bbdb" translate="yes" xml:space="preserve">
          <source>Captures $stdout and $stderr into strings, using Tempfile to ensure that subprocess IO is captured as well.</source>
          <target state="translated">将$stdout和$stderr捕获为字符串,使用Tempfile确保子进程IO也被捕获。</target>
        </trans-unit>
        <trans-unit id="7d51a08587717283aab1d1a64d4f31a563fff39e" translate="yes" xml:space="preserve">
          <source>Captures $stdout and $stderr into strings:</source>
          <target state="translated">将$stdout和$stderr捕获为字符串。</target>
        </trans-unit>
        <trans-unit id="98d5c660601aa870c8e08ff8634a79981e29a647" translate="yes" xml:space="preserve">
          <source>Capybara integration for Minitest::Rails.</source>
          <target state="translated">Capybara集成了Minitest::Rails。</target>
        </trans-unit>
        <trans-unit id="080cdc22fc242c1c1a89f7e60ae42dd67ca4191b" translate="yes" xml:space="preserve">
          <source>Capybara matchers support for minitest unit and spec.</source>
          <target state="translated">Capybara匹配器支持minitest单元和规格。</target>
        </trans-unit>
        <trans-unit id="17adf037dcb842ff122887bf118835ae3716412d" translate="yes" xml:space="preserve">
          <source>Check your OS/shell documentation for the precise syntax (the above will not work on a basic Windows CMD prompt, look for the SET command). Once you've got it successfully outputing UTF-8, use the same setting when running rake in Minitest.</source>
          <target state="translated">检查你的OS/shell文档以了解精确的语法(上面的内容在基本的Windows CMD提示符上不起作用,请查找SET命令)。一旦你让它成功地输出UTF-8,在Minitest中运行rake时使用同样的设置。</target>
        </trans-unit>
        <trans-unit id="64939d22bc2255dac442055c8dffb615cffb3179" translate="yes" xml:space="preserve">
          <source>Clean API for excluding certain tests you don't want to run under certain conditions.</source>
          <target state="translated">干净的API,用于排除某些你不想在特定条件下运行的测试。</target>
        </trans-unit>
        <trans-unit id="927f3d827057032ef6d07c73de386075dd3a43d1" translate="yes" xml:space="preserve">
          <source>Color a string.</source>
          <target state="translated">着色的字符串。</target>
        </trans-unit>
        <trans-unit id="2fc5914f3797288ff9deefa1aa600400ef243494" translate="yes" xml:space="preserve">
          <source>Colored red/green output for Minitest.</source>
          <target state="translated">Minitest的彩色红/绿色输出。</target>
        </trans-unit>
        <trans-unit id="e87fd0a08971ceaa3e22f0c0a59c35cf04c09e4f" translate="yes" xml:space="preserve">
          <source>Comparing to rspec:</source>
          <target state="translated">与rspec相比。</target>
        </trans-unit>
        <trans-unit id="0f386d7e7881b32fa39cb7b62bdb15c0f3a4c0e1" translate="yes" xml:space="preserve">
          <source>Constants</source>
          <target state="translated">Constants</target>
        </trans-unit>
        <trans-unit id="356ae5250f0dbc8ad8d6b2a8252563f0a8c0b0ab" translate="yes" xml:space="preserve">
          <source>Contains pairs of matchers and &lt;a href=&quot;../spec&quot;&gt;Spec&lt;/a&gt; classes to be used to calculate the superclass of a top-level describe. This allows for automatically customizable spec types.</source>
          <target state="translated">包含成对的匹配器和&lt;a href=&quot;../spec&quot;&gt;Spec&lt;/a&gt;类，这些类用于计算顶级描述的超类。这允许自动自定义规格类型。</target>
        </trans-unit>
        <trans-unit id="ef434646c0da61ce6c7ccfe73fb71ff8128a6451" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; Ryan Davis, seattle.rb</source>
          <target state="translated">版权所有&amp;copy;Ryan Davis，seattle.rb</target>
        </trans-unit>
        <trans-unit id="69f66a68362d5c326ab44db36d0831be8d327e72" translate="yes" xml:space="preserve">
          <source>Create a benchmark that verifies that the performance is constant.</source>
          <target state="translated">创建一个基准,验证性能是否恒定。</target>
        </trans-unit>
        <trans-unit id="c7e9f28680f575902cf2488c04efcb65392ef197" translate="yes" xml:space="preserve">
          <source>Create a benchmark that verifies that the performance is exponential.</source>
          <target state="translated">创建一个基准,验证性能是否指数化。</target>
        </trans-unit>
        <trans-unit id="ee0e98031c3fb0a2547cb6e025d5ad2f1fd5e8a9" translate="yes" xml:space="preserve">
          <source>Create a benchmark that verifies that the performance is linear.</source>
          <target state="translated">创建一个基准,验证性能是否线性。</target>
        </trans-unit>
        <trans-unit id="8d484010ce84618ec4e117bcbe5ab7cfd7b01a33" translate="yes" xml:space="preserve">
          <source>Create a benchmark that verifies that the performance is logarithmic.</source>
          <target state="translated">创建一个基准,验证性能是否为对数。</target>
        </trans-unit>
        <trans-unit id="28a6bc693842a31aa8e7786e6236d02dc7a74860" translate="yes" xml:space="preserve">
          <source>Create a benchmark that verifies that the performance is power.</source>
          <target state="translated">创建一个基准,验证性能是权力。</target>
        </trans-unit>
        <trans-unit id="2b871f3b9d994d50cff64b3b9faecb435c6b57c8" translate="yes" xml:space="preserve">
          <source>Create a new test result from a Runnable instance.</source>
          <target state="translated">从Runnable实例创建一个新的测试结果。</target>
        </trans-unit>
        <trans-unit id="0074ad46a135556f9dee5b7cace9c1d792caa8d1" translate="yes" xml:space="preserve">
          <source>Create a parallel test executor of with &lt;code&gt;size&lt;/code&gt; workers.</source>
          <target state="translated">创建具有 &lt;code&gt;size&lt;/code&gt; 工人的并行测试执行程序。</target>
        </trans-unit>
        <trans-unit id="0c84b085bf8637d86fbb1fcb851764f759f17497" translate="yes" xml:space="preserve">
          <source>Create customizable Minitest output formats.</source>
          <target state="translated">创建可定制的Minitest输出格式。</target>
        </trans-unit>
        <trans-unit id="ab49791a9dfcf1821e7fcec4086cd7fffe6fa9ee" translate="yes" xml:space="preserve">
          <source>DESCRIPTION:</source>
          <target state="translated">DESCRIPTION:</target>
        </trans-unit>
        <trans-unit id="9a030a81f65c69cfd30a0fc72b6534c9e6a0debc" translate="yes" xml:space="preserve">
          <source>DO NOTE: There is a serious problem with the way that ruby 1.9/2.0 packages their own gems. They install a gem specification file, but don't install the gem contents in the gem path. This messes up Gem.find_files and many other things (gem which, gem contents, etc).</source>
          <target state="translated">注意:ruby 1.9/2.0打包自己的宝石的方式有一个严重的问题。他们安装了一个 gem 规范文件,但没有在 gem 路径中安装 gem 内容。这就会搞乱Gem.find_files和许多其他东西(gem which,gem contents等)。</target>
        </trans-unit>
        <trans-unit id="e9f53e95abf24f66b51f5a66e703c0f688df156a" translate="yes" xml:space="preserve">
          <source>DSL#after</source>
          <target state="translated">DSL#after</target>
        </trans-unit>
        <trans-unit id="b9cfc272531ba38cdf745081040b5ab9441fb73b" translate="yes" xml:space="preserve">
          <source>DSL#before</source>
          <target state="translated">DSL#before</target>
        </trans-unit>
        <trans-unit id="e51a4ec05e9a8baa193176a2311531e625ca7932" translate="yes" xml:space="preserve">
          <source>DSL#it</source>
          <target state="translated">DSL#it</target>
        </trans-unit>
        <trans-unit id="9cba402a249724a5f0989f9215fc37e0e60f2aef" translate="yes" xml:space="preserve">
          <source>DSL#let</source>
          <target state="translated">DSL#let</target>
        </trans-unit>
        <trans-unit id="20f505787b8c7b6b4d56c89778e5854234407ef0" translate="yes" xml:space="preserve">
          <source>DSL#register_spec_type</source>
          <target state="translated">DSL#register_spec_type</target>
        </trans-unit>
        <trans-unit id="7ede1994c97c2955710c14dad5a343fe383a3c95" translate="yes" xml:space="preserve">
          <source>DSL#spec_type</source>
          <target state="translated">DSL#spec_type</target>
        </trans-unit>
        <trans-unit id="a0cb94163937b3daff1c0dc73dc16efdb06c9f7b" translate="yes" xml:space="preserve">
          <source>DSL#specify</source>
          <target state="translated">DSL#specify</target>
        </trans-unit>
        <trans-unit id="533fe44ddd7cd80399216dfd8e41dd5399d10b13" translate="yes" xml:space="preserve">
          <source>DSL#subject</source>
          <target state="translated">DSL#subject</target>
        </trans-unit>
        <trans-unit id="839d0303b70e5ea80f4e927c1b30a1aaf3bc4721" translate="yes" xml:space="preserve">
          <source>DSL::InstanceMethods</source>
          <target state="translated">DSL::InstanceMethods</target>
        </trans-unit>
        <trans-unit id="05147cc3103cd96ad9a3d9b8c33528868a8176da" translate="yes" xml:space="preserve">
          <source>DSL::InstanceMethods#expect</source>
          <target state="translated">DSL::InstanceMethods#expect</target>
        </trans-unit>
        <trans-unit id="9556c348940466bf240e762b980ce3e75b921184" translate="yes" xml:space="preserve">
          <source>DSL::InstanceMethods#value</source>
          <target state="translated">DSL::InstanceMethods#value</target>
        </trans-unit>
        <trans-unit id="82fb62bc9448e51d8b56be922a38917b138f8bc6" translate="yes" xml:space="preserve">
          <source>Define a 'before' action. Inherits the way normal methods should.</source>
          <target state="translated">定义一个'before'动作。继承普通方法的方式。</target>
        </trans-unit>
        <trans-unit id="298c060e32029a87f77446368f021e163cb77ef1" translate="yes" xml:space="preserve">
          <source>Define an 'after' action. Inherits the way normal methods should.</source>
          <target state="translated">定义一个'after'动作。继承普通方法的方式。</target>
        </trans-unit>
        <trans-unit id="5f91a64a236cc7b04cd7eca89509520fd06f2da4" translate="yes" xml:space="preserve">
          <source>Define an expectation with name &lt;code&gt;desc&lt;/code&gt;. Name gets morphed to a proper test method name. For some freakish reason, people who write specs don't like class inheritance, so this goes way out of its way to make sure that expectations aren't inherited.</source>
          <target state="translated">用名称 &lt;code&gt;desc&lt;/code&gt; 定义期望。名称变形为适当的测试方法名称。出于某些怪异的原因，编写规范的人不喜欢类继承，因此这与确保期望不会被继承的方式大相径庭。</target>
        </trans-unit>
        <trans-unit id="ba8632d5aeb6eec9ca630662f85a8ebfcd4d7d5a" translate="yes" xml:space="preserve">
          <source>Define assert_log and enable minitest to test log messages. Supports Logger and Log4r::Logger.</source>
          <target state="translated">定义 assert_log 并启用 minitest 来测试日志信息。支持 Logger 和 Log4r::Logger。</target>
        </trans-unit>
        <trans-unit id="3e787df73b02a31ff21083dc20c9028d6e1f7fc0" translate="yes" xml:space="preserve">
          <source>Define your tests as methods beginning with &lt;code&gt;test_&lt;/code&gt;.</source>
          <target state="translated">将您的测试定义为以 &lt;code&gt;test_&lt;/code&gt; 开头的方法。</target>
        </trans-unit>
        <trans-unit id="0f0317baa284e799e905d7ead05658cf54e59f6a" translate="yes" xml:space="preserve">
          <source>Defines a test class subclassing from either &lt;a href=&quot;minitest/spec&quot;&gt;Minitest::Spec&lt;/a&gt; or from the surrounding describe's class. The surrounding class may subclass &lt;a href=&quot;minitest/spec&quot;&gt;Minitest::Spec&lt;/a&gt; manually in order to easily share code:</source>
          <target state="translated">从&lt;a href=&quot;minitest/spec&quot;&gt;Minitest :: Spec&lt;/a&gt;或周围的describe的类定义测试类的子类。周围的类可以手动将&lt;a href=&quot;minitest/spec&quot;&gt;Minitest :: Spec&lt;/a&gt;子类化，以便轻松共享代码：</target>
        </trans-unit>
        <trans-unit id="bbc8a9b697c09bbff0b8b4e2b03b928dff0e22f8" translate="yes" xml:space="preserve">
          <source>Defines contexts for code reuse in Minitest specs that share common expectations.</source>
          <target state="translated">定义了Minitest规范中代码重用的上下文,这些规范具有共同的期望。</target>
        </trans-unit>
        <trans-unit id="b070149d7806986d70f544ca915be4eb1b690f23" translate="yes" xml:space="preserve">
          <source>Defines the API for Reporters. Subclass this and override whatever you want. Go nuts.</source>
          <target state="translated">定义了Reporters的API。Subclass this and override whatever you want.发疯吧</target>
        </trans-unit>
        <trans-unit id="d3707cb7c0de5f199ed9b5894fb819ac0c9d6b74" translate="yes" xml:space="preserve">
          <source>Defines the order to run tests (:random by default). Override this or use a convenience method to change it for your tests.</source>
          <target state="translated">定义运行测试的顺序(默认为:随机)。覆盖它或使用一个方便的方法为你的测试改变它。</target>
        </trans-unit>
        <trans-unit id="fa14ebcae068b3a3524472320d72840393970693" translate="yes" xml:space="preserve">
          <source>Describe a series of expectations for a given target &lt;code&gt;desc&lt;/code&gt;.</source>
          <target state="translated">描述了一系列的给定目标的预期 &lt;code&gt;desc&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="de935c3177487c9601972470e4500155cd75a5fb" translate="yes" xml:space="preserve">
          <source>Detailed output inspired by rspec's documentation format.</source>
          <target state="translated">受rspec文档格式启发的详细输出。</target>
        </trans-unit>
        <trans-unit id="47312c958dcc819bd8c2bfdc72371a4662a13c82" translate="yes" xml:space="preserve">
          <source>Developing Minitest:</source>
          <target state="translated">开发Minitest。</target>
        </trans-unit>
        <trans-unit id="4e5bb268178d621f38e836ed98594890e971bf88" translate="yes" xml:space="preserve">
          <source>Did this run error?</source>
          <target state="translated">这个运行错误吗?</target>
        </trans-unit>
        <trans-unit id="f50ca698929a0fbee5627209ff259eb928dee762" translate="yes" xml:space="preserve">
          <source>Did this run pass?</source>
          <target state="translated">这次跑步通过了吗?</target>
        </trans-unit>
        <trans-unit id="8a8fc9cc2c8d704d4658692f547c01398c0cb13e" translate="yes" xml:space="preserve">
          <source>Dispatch to multiple reporters as one.</source>
          <target state="translated">向多名记者调度为一。</target>
        </trans-unit>
        <trans-unit id="c570ae95af89e451c97935ec98105055c33d8a37" translate="yes" xml:space="preserve">
          <source>Display test results with a Blink1.</source>
          <target state="translated">用Blink1显示测试结果。</target>
        </trans-unit>
        <trans-unit id="3f0abe1190df379605b0f623d0c1a5be4d8ba5e6" translate="yes" xml:space="preserve">
          <source>Drop in &lt;a href=&quot;minitest/spec&quot;&gt;Minitest::Spec&lt;/a&gt; superclass for ActiveSupport::TestCase.</source>
          <target state="translated">为ActiveSupport :: TestCase 放入&lt;a href=&quot;minitest/spec&quot;&gt;Minitest :: Spec&lt;/a&gt;超类。</target>
        </trans-unit>
        <trans-unit id="042b890a506cb1f86b057af9f2065c60f0543326" translate="yes" xml:space="preserve">
          <source>ESC</source>
          <target state="translated">ESC</target>
        </trans-unit>
        <trans-unit id="7e20f224093f23dce5fe363dc0cf5dba4f0a9819" translate="yes" xml:space="preserve">
          <source>Each subclass of Runnable is responsible for overriding this method to return all runnable methods. See methods_matching.</source>
          <target state="translated">Runnable的每个子类都负责重写这个方法,以返回所有可运行的方法。参见 methods_matching。</target>
        </trans-unit>
        <trans-unit id="88ae7b58494cb6e7b178211cbc976f2fa6a88a4e" translate="yes" xml:space="preserve">
          <source>Easily translate any RSpec matchers to Minitest assertions and expectations.</source>
          <target state="translated">轻松地将任何RSpec匹配器翻译成Minitest断言和期望。</target>
        </trans-unit>
        <trans-unit id="5e297a41e8ef5ac08adf9ee0810c2244721fa92b" translate="yes" xml:space="preserve">
          <source>Eg:</source>
          <target state="translated">Eg:</target>
        </trans-unit>
        <trans-unit id="46621207306b90f9a4853513988e5d8ae566bca4" translate="yes" xml:space="preserve">
          <source>End the escape sequence</source>
          <target state="translated">结束逃逸序列</target>
        </trans-unit>
        <trans-unit id="8bc1129998375748679d376768f13c261ab62c3d" translate="yes" xml:space="preserve">
          <source>Enumerates over &lt;code&gt;enum&lt;/code&gt; mapping &lt;code&gt;block&lt;/code&gt; if given, returning the sum of the result. Eg:</source>
          <target state="translated">枚举 &lt;code&gt;enum&lt;/code&gt; 映射 &lt;code&gt;block&lt;/code&gt; 如果给定），返回结果的总和。例如：</target>
        </trans-unit>
        <trans-unit id="7b17bc8fd08484d22855bffe2b49d4a5e5890989" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;../test/lifecyclehooks#method-i-setup&quot;&gt;Minitest::Test::LifecycleHooks#setup&lt;/a&gt;.</source>
          <target state="translated">等效于&lt;a href=&quot;../test/lifecyclehooks#method-i-setup&quot;&gt;Minitest :: Test :: LifecycleHooks＃setup&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="700018f8f3dbf276fd52ab1e32d36dbdfbb1ad21" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;../test/lifecyclehooks#method-i-teardown&quot;&gt;Minitest::Test::LifecycleHooks#teardown&lt;/a&gt;.</source>
          <target state="translated">等效于&lt;a href=&quot;../test/lifecyclehooks#method-i-teardown&quot;&gt;Minitest :: Test :: LifecycleHooks＃teardown&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="30a4cbf14e33065b4c2375d11ae0580cb6508436" translate="yes" xml:space="preserve">
          <source>Essentially, define an accessor for &lt;code&gt;name&lt;/code&gt; with &lt;code&gt;block&lt;/code&gt;.</source>
          <target state="translated">本质上，使用 &lt;code&gt;block&lt;/code&gt; 定义 &lt;code&gt;name&lt;/code&gt; 的访问器。</target>
        </trans-unit>
        <trans-unit id="20049bc069b0a04404c23d571b5e0b56f0660c02" translate="yes" xml:space="preserve">
          <source>Exception</source>
          <target state="translated">Exception</target>
        </trans-unit>
        <trans-unit id="c1f6604b7486fef57febf39070b6b5f55ece6c6b" translate="yes" xml:space="preserve">
          <source>Executor</source>
          <target state="translated">Executor</target>
        </trans-unit>
        <trans-unit id="53739d911f0811fc2bab8216a4ac282d2baad22b" translate="yes" xml:space="preserve">
          <source>Executor#&amp;lt;&amp;lt;</source>
          <target state="translated">Executor#&amp;lt;&amp;lt;</target>
        </trans-unit>
        <trans-unit id="7649153fae360bddf163c36cc6b0f2d233e3cb7f" translate="yes" xml:space="preserve">
          <source>Executor#shutdown</source>
          <target state="translated">Executor#shutdown</target>
        </trans-unit>
        <trans-unit id="8e8b5045e798c0664ed1bd24eb191618193bc6b7" translate="yes" xml:space="preserve">
          <source>Executor#size</source>
          <target state="translated">Executor#size</target>
        </trans-unit>
        <trans-unit id="413427b976d8a1bc74ad21534411ee2ba59d937e" translate="yes" xml:space="preserve">
          <source>Executor#start</source>
          <target state="translated">Executor#start</target>
        </trans-unit>
        <trans-unit id="244bb6c1f7225486a220279d30369b098e4ac7dd" translate="yes" xml:space="preserve">
          <source>Executor::new</source>
          <target state="translated">Executor::new</target>
        </trans-unit>
        <trans-unit id="306f9bedacb6142ee4c95495945aa21fe98bd5da" translate="yes" xml:space="preserve">
          <source>Expect syntax for &lt;a href=&quot;minitest/spec&quot;&gt;Minitest::Spec&lt;/a&gt; (e.g. expect(sequences).to_include :celery_man).</source>
          <target state="translated">&lt;a href=&quot;minitest/spec&quot;&gt;Minitest :: Spec的&lt;/a&gt; Expect语法（例如，Expect （sequences）.to_include：celery_man）。</target>
        </trans-unit>
        <trans-unit id="506dc396bdf26da447c65ba4bc30c6e03e89ecac" translate="yes" xml:space="preserve">
          <source>Expect that method &lt;code&gt;name&lt;/code&gt; is called, optionally with &lt;code&gt;args&lt;/code&gt; or a &lt;code&gt;blk&lt;/code&gt;, and returns &lt;code&gt;retval&lt;/code&gt;.</source>
          <target state="translated">期望方法 &lt;code&gt;name&lt;/code&gt; 被调用，可以选择使用 &lt;code&gt;args&lt;/code&gt; 或 &lt;code&gt;blk&lt;/code&gt; ，并返回 &lt;code&gt;retval&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="03688ba6aa340b87549088aa5739944cb6b1dc73" translate="yes" xml:space="preserve">
          <source>FAQ</source>
          <target state="translated">FAQ</target>
        </trans-unit>
        <trans-unit id="cccb9089deb30a0c73bba7c85194360574b186d7" translate="yes" xml:space="preserve">
          <source>FEATURES/PROBLEMS:</source>
          <target state="translated">FEATURES/PROBLEMS:</target>
        </trans-unit>
        <trans-unit id="1d36bec4d3d8b7110288680a7ebadaf263634e5f" translate="yes" xml:space="preserve">
          <source>Fails if &lt;code&gt;collection&lt;/code&gt; includes &lt;code&gt;obj&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;collection&lt;/code&gt; 包含 &lt;code&gt;obj&lt;/code&gt; ,则失败。</target>
        </trans-unit>
        <trans-unit id="7d8d1ef92dc5c141cbd81aca434fa6e4e3111d14" translate="yes" xml:space="preserve">
          <source>Fails if &lt;code&gt;exp == act&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;exp == act&lt;/code&gt; 失败。</target>
        </trans-unit>
        <trans-unit id="333c0633ccb1d20f0a2a610086d6d0f346e4bb13" translate="yes" xml:space="preserve">
          <source>Fails if &lt;code&gt;exp&lt;/code&gt; is the same (by object identity) as &lt;code&gt;act&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;exp&lt;/code&gt; 与 &lt;code&gt;act&lt;/code&gt; 相同（通过对象标识），则失败。</target>
        </trans-unit>
        <trans-unit id="83377f937e6151f681aa3ae03f483859abffd269" translate="yes" xml:space="preserve">
          <source>Fails if &lt;code&gt;matcher&lt;/code&gt;&lt;code&gt;=~&lt;/code&gt;&lt;code&gt;obj&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;matcher&lt;/code&gt; &lt;code&gt;=~&lt;/code&gt; &lt;code&gt;obj&lt;/code&gt; 失败。</target>
        </trans-unit>
        <trans-unit id="7634d4ad321552d2c60f1937a6990e959c9e10ff" translate="yes" xml:space="preserve">
          <source>Fails if &lt;code&gt;o1&lt;/code&gt; is not &lt;code&gt;op&lt;/code&gt;&lt;code&gt;o2&lt;/code&gt;. Eg:</source>
          <target state="translated">如果 &lt;code&gt;o1&lt;/code&gt; 不是 &lt;code&gt;op&lt;/code&gt; &lt;code&gt;o2&lt;/code&gt; 则失败。例如：</target>
        </trans-unit>
        <trans-unit id="1ad4b19dedd05c6d6d40e474c8eeb3833bb55dcb" translate="yes" xml:space="preserve">
          <source>Fails if &lt;code&gt;obj&lt;/code&gt; is a kind of &lt;code&gt;cls&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;obj&lt;/code&gt; 是 &lt;code&gt;cls&lt;/code&gt; 则失败。</target>
        </trans-unit>
        <trans-unit id="d6a639b0575fa47337ad54580218d22ed80caeca" translate="yes" xml:space="preserve">
          <source>Fails if &lt;code&gt;obj&lt;/code&gt; is an instance of &lt;code&gt;cls&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;obj&lt;/code&gt; 是 &lt;code&gt;cls&lt;/code&gt; 的实例，则失败。</target>
        </trans-unit>
        <trans-unit id="819b949c301bde3ddf522f5d02d6d25b08e811e5" translate="yes" xml:space="preserve">
          <source>Fails if &lt;code&gt;obj&lt;/code&gt; is empty.</source>
          <target state="translated">如果 &lt;code&gt;obj&lt;/code&gt; 为空则失败。</target>
        </trans-unit>
        <trans-unit id="6c9478ce04506a4ac7f265275b149d785cd0e800" translate="yes" xml:space="preserve">
          <source>Fails if &lt;code&gt;obj&lt;/code&gt; is nil.</source>
          <target state="translated">如果 &lt;code&gt;obj&lt;/code&gt; 为nil则失败。</target>
        </trans-unit>
        <trans-unit id="303a948523fe9e9af796b0d1d2e625734de5f853" translate="yes" xml:space="preserve">
          <source>Fails if &lt;code&gt;obj&lt;/code&gt; responds to the message &lt;code&gt;meth&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;obj&lt;/code&gt; 响应消息 &lt;code&gt;meth&lt;/code&gt; ，则失败。</target>
        </trans-unit>
        <trans-unit id="17dc5feb29311fb0b3a85bf83eb0272030bbf369" translate="yes" xml:space="preserve">
          <source>Fails if &lt;code&gt;test&lt;/code&gt; is truthy.</source>
          <target state="translated">如果 &lt;code&gt;test&lt;/code&gt; 是真实的，则失败。</target>
        </trans-unit>
        <trans-unit id="0701f61e3490127deb339bb90097055dab2d7588" translate="yes" xml:space="preserve">
          <source>Fails if stdout or stderr do not output the expected results. Pass in nil if you don't care about that streams output. Pass in &amp;ldquo;&amp;rdquo; if you require it to be silent. Pass in a regexp if you want to pattern match.</source>
          <target state="translated">如果stdout或stderr不输出预期结果，则失败。如果您不关心流输出，则传递nil。如果您要求保持沉默，请传递&amp;ldquo;&amp;rdquo;。如果要进行模式匹配，请传递正则表达式。</target>
        </trans-unit>
        <trans-unit id="5a35453e1d9da878e338a2c6f34b597830f42b20" translate="yes" xml:space="preserve">
          <source>Fails if the block outputs anything to stderr or stdout.</source>
          <target state="translated">如果该块向stderr或stdout输出任何内容,则失败。</target>
        </trans-unit>
        <trans-unit id="ddd0d8f8b6ac991ff516f8b2e1f7b3404ccbd88b" translate="yes" xml:space="preserve">
          <source>Fails unless &lt;code&gt;collection&lt;/code&gt; includes &lt;code&gt;obj&lt;/code&gt;.</source>
          <target state="translated">除非 &lt;code&gt;collection&lt;/code&gt; 包含 &lt;code&gt;obj&lt;/code&gt; ,否则失败。</target>
        </trans-unit>
        <trans-unit id="9c652cc0ab7f06e6b425e6bd67abfe42511a83dd" translate="yes" xml:space="preserve">
          <source>Fails unless &lt;code&gt;exp == act&lt;/code&gt; printing the difference between the two, if possible.</source>
          <target state="translated">除非 &lt;code&gt;exp == act&lt;/code&gt; 失败，否则如果无法打印出两者之间的差异，则该操作将失败。</target>
        </trans-unit>
        <trans-unit id="64515a88ee3287f13e3d423b4fdd550d58df729d" translate="yes" xml:space="preserve">
          <source>Fails unless &lt;code&gt;exp&lt;/code&gt; and &lt;code&gt;act&lt;/code&gt; are equal?</source>
          <target state="translated">除非 &lt;code&gt;exp&lt;/code&gt; 和 &lt;code&gt;act&lt;/code&gt; 相等，否则失败？</target>
        </trans-unit>
        <trans-unit id="4ee6206f05dbb59e78637d0c66e6218af0ff18c6" translate="yes" xml:space="preserve">
          <source>Fails unless &lt;code&gt;matcher&lt;/code&gt;&lt;code&gt;=~&lt;/code&gt;&lt;code&gt;obj&lt;/code&gt;.</source>
          <target state="translated">失败除非 &lt;code&gt;matcher&lt;/code&gt; &lt;code&gt;=~&lt;/code&gt; &lt;code&gt;obj&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8857bded037e75f51af87ce132e24ab3aba7d882" translate="yes" xml:space="preserve">
          <source>Fails unless &lt;code&gt;obj&lt;/code&gt; is a kind of &lt;code&gt;cls&lt;/code&gt;.</source>
          <target state="translated">除非 &lt;code&gt;obj&lt;/code&gt; 是一种 &lt;code&gt;cls&lt;/code&gt; ,否则它将失败。</target>
        </trans-unit>
        <trans-unit id="4689cd4063004e30b531d5c83d4e347678258e4b" translate="yes" xml:space="preserve">
          <source>Fails unless &lt;code&gt;obj&lt;/code&gt; is an instance of &lt;code&gt;cls&lt;/code&gt;.</source>
          <target state="translated">除非 &lt;code&gt;obj&lt;/code&gt; 是 &lt;code&gt;cls&lt;/code&gt; 的实例，否则失败。</target>
        </trans-unit>
        <trans-unit id="42ece5e30b42568797956a43868ffd317f47c2c2" translate="yes" xml:space="preserve">
          <source>Fails unless &lt;code&gt;obj&lt;/code&gt; is empty.</source>
          <target state="translated">除非 &lt;code&gt;obj&lt;/code&gt; 为空，否则失败。</target>
        </trans-unit>
        <trans-unit id="28399d418d45443d3c498d05d1efe59ee2b6d552" translate="yes" xml:space="preserve">
          <source>Fails unless &lt;code&gt;obj&lt;/code&gt; is nil</source>
          <target state="translated">除非 &lt;code&gt;obj&lt;/code&gt; 为nil 否则失败</target>
        </trans-unit>
        <trans-unit id="6f3135863c46491136cab7e02410dcfcf48125ec" translate="yes" xml:space="preserve">
          <source>Fails unless &lt;code&gt;obj&lt;/code&gt; responds to &lt;code&gt;meth&lt;/code&gt;.</source>
          <target state="translated">除非 &lt;code&gt;obj&lt;/code&gt; 响应 &lt;code&gt;meth&lt;/code&gt; ,否则失败。</target>
        </trans-unit>
        <trans-unit id="691d1fc449ac630f3063640c3afc33275239f570" translate="yes" xml:space="preserve">
          <source>Fails unless &lt;code&gt;test&lt;/code&gt; is truthy.</source>
          <target state="translated">除非 &lt;code&gt;test&lt;/code&gt; 是真实的，否则失败。</target>
        </trans-unit>
        <trans-unit id="e6bb7bb54e961bd5be8d2bb6c29ee2b64c1c3c4d" translate="yes" xml:space="preserve">
          <source>Fails unless the block raises one of &lt;code&gt;exp&lt;/code&gt;. Returns the exception matched so you can check the message, attributes, etc.</source>
          <target state="translated">除非块引发 &lt;code&gt;exp&lt;/code&gt; 之一，否则失败。返回匹配的异常，以便您可以检查消息，属性等。</target>
        </trans-unit>
        <trans-unit id="9e0e47f8fcaba54342ae03c4cc3a12435ba1087d" translate="yes" xml:space="preserve">
          <source>Fails unless the block throws &lt;code&gt;sym&lt;/code&gt;</source>
          <target state="translated">除非块抛出 &lt;code&gt;sym&lt;/code&gt; 否则失败</target>
        </trans-unit>
        <trans-unit id="e7a76660c37ce42a2db929c1ddb9675a4b953bd1" translate="yes" xml:space="preserve">
          <source>Fails unless the call returns a true value</source>
          <target state="translated">除非调用返回一个真值,否则失败。</target>
        </trans-unit>
        <trans-unit id="d978e2dce6f5f23446bd0902321269ef4752a77c" translate="yes" xml:space="preserve">
          <source>Fails with &lt;code&gt;msg&lt;/code&gt;</source>
          <target state="translated">与 &lt;code&gt;msg&lt;/code&gt; 失败</target>
        </trans-unit>
        <trans-unit id="fb4811d90ea47687bc0bc82bbddfa5e7a2bb30f8" translate="yes" xml:space="preserve">
          <source>Figure out the spec class to use based on a spec's description. Eg:</source>
          <target state="translated">根据规格的描述,找出要使用的规格类。例如</target>
        </trans-unit>
        <trans-unit id="348c1192a7e86a84eccb082de80e1456da5ab843" translate="yes" xml:space="preserve">
          <source>Filter &lt;code&gt;bt&lt;/code&gt; to something useful. Returns the whole thing if $DEBUG.</source>
          <target state="translated">过滤 &lt;code&gt;bt&lt;/code&gt; 到有用的东西。如果$ DEBUG，则返回整个内容。</target>
        </trans-unit>
        <trans-unit id="17a51589906b2dbe4006d155d88f6668c699f414" translate="yes" xml:space="preserve">
          <source>Find leaking state between tests</source>
          <target state="translated">查找测试之间的泄漏状态</target>
        </trans-unit>
        <trans-unit id="90cd4cba5819c371c495ba4b4ddc046323df405d" translate="yes" xml:space="preserve">
          <source>Fit is calculated by &lt;a href=&quot;benchmark#method-i-fit_exponential&quot;&gt;fit_exponential&lt;/a&gt;.</source>
          <target state="translated">适合度由&lt;a href=&quot;benchmark#method-i-fit_exponential&quot;&gt;fit_exponential&lt;/a&gt;计算。</target>
        </trans-unit>
        <trans-unit id="89886c682460850713bef04fa865050fa13a98e6" translate="yes" xml:space="preserve">
          <source>Fit is calculated by &lt;a href=&quot;benchmark#method-i-fit_linear&quot;&gt;fit_linear&lt;/a&gt;.</source>
          <target state="translated">拟合度由&lt;a href=&quot;benchmark#method-i-fit_linear&quot;&gt;fit_linear&lt;/a&gt;计算。</target>
        </trans-unit>
        <trans-unit id="28496dd8630fafaddeff4ad38324b5507e1d3959" translate="yes" xml:space="preserve">
          <source>Fit is calculated by &lt;a href=&quot;benchmark#method-i-fit_logarithmic&quot;&gt;fit_logarithmic&lt;/a&gt;.</source>
          <target state="translated">适合度由&lt;a href=&quot;benchmark#method-i-fit_logarithmic&quot;&gt;fit_logarithmic&lt;/a&gt;计算。</target>
        </trans-unit>
        <trans-unit id="687da719236ca814bb61551e1008b207d428aac8" translate="yes" xml:space="preserve">
          <source>Fit is calculated by &lt;a href=&quot;benchmark#method-i-fit_power&quot;&gt;fit_power&lt;/a&gt;.</source>
          <target state="translated">适合度由&lt;a href=&quot;benchmark#method-i-fit_power&quot;&gt;fit_power&lt;/a&gt;计算。</target>
        </trans-unit>
        <trans-unit id="9b74ca91ea596e6b12b8d4329cbb56cafbea4924" translate="yes" xml:space="preserve">
          <source>Fits the functional form: a + bx.</source>
          <target state="translated">符合函数形式:a+bx。</target>
        </trans-unit>
        <trans-unit id="366550edac6453c46f4ec42add2bdee503287092" translate="yes" xml:space="preserve">
          <source>Focus on one test at a time.</source>
          <target state="translated">每次专注于一个测试。</target>
        </trans-unit>
        <trans-unit id="a0d04824f9b77512b34b585447cc506d464679cb" translate="yes" xml:space="preserve">
          <source>For a list of expectations, see &lt;a href=&quot;expectations&quot;&gt;Minitest::Expectations&lt;/a&gt;.</source>
          <target state="translated">有关期望的列表，请参见&lt;a href=&quot;expectations&quot;&gt;Minitest :: Expectations&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6ee2b263e39836ed9ed644eb27e8941eb18c48fb" translate="yes" xml:space="preserve">
          <source>For comparing Floats. Fails if &lt;code&gt;exp&lt;/code&gt; and &lt;code&gt;act&lt;/code&gt; have a relative error less than &lt;code&gt;epsilon&lt;/code&gt;.</source>
          <target state="translated">用于比较浮点数。如果 &lt;code&gt;exp&lt;/code&gt; 和 &lt;code&gt;act&lt;/code&gt; 的相对误差小于 &lt;code&gt;epsilon&lt;/code&gt; ,则失败。</target>
        </trans-unit>
        <trans-unit id="4ed107daffcc43535fcd2b865b1336dc6c3c3c70" translate="yes" xml:space="preserve">
          <source>For comparing Floats. Fails if &lt;code&gt;exp&lt;/code&gt; is within &lt;code&gt;delta&lt;/code&gt; of &lt;code&gt;act&lt;/code&gt;.</source>
          <target state="translated">用于比较浮点数。如果失败 &lt;code&gt;exp&lt;/code&gt; 距离 &lt;code&gt;delta&lt;/code&gt; 的 &lt;code&gt;act&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="038a2a0bd71cae603ef3cc6003044efe3cb846be" translate="yes" xml:space="preserve">
          <source>For comparing Floats. Fails unless &lt;code&gt;exp&lt;/code&gt; and &lt;code&gt;act&lt;/code&gt; are within &lt;code&gt;delta&lt;/code&gt; of each other.</source>
          <target state="translated">用于比较浮点数。除非 &lt;code&gt;exp&lt;/code&gt; 和 &lt;code&gt;act&lt;/code&gt; 在彼此的 &lt;code&gt;delta&lt;/code&gt; 之内，否则它将失败。</target>
        </trans-unit>
        <trans-unit id="678a1e2cc01d97c80cbbb099abd0bd7857eac514" translate="yes" xml:space="preserve">
          <source>For comparing Floats. Fails unless &lt;code&gt;exp&lt;/code&gt; and &lt;code&gt;act&lt;/code&gt; have a relative error less than &lt;code&gt;epsilon&lt;/code&gt;.</source>
          <target state="translated">用于比较浮点数。除非 &lt;code&gt;exp&lt;/code&gt; 和 &lt;code&gt;act&lt;/code&gt; 的相对误差小于 &lt;code&gt;epsilon&lt;/code&gt; ,否则它将失败。</target>
        </trans-unit>
        <trans-unit id="d3e82537d6da5821cd4163111c34deb93124f5d8" translate="yes" xml:space="preserve">
          <source>For floats use assert_in_delta.</source>
          <target state="translated">对于浮点数使用 assert_in_delta。</target>
        </trans-unit>
        <trans-unit id="28c80844fc5e99957c099ff9ec7cabeb6a1c67d6" translate="yes" xml:space="preserve">
          <source>For floats use refute_in_delta.</source>
          <target state="translated">对于浮点数,使用 refute_in_delta。</target>
        </trans-unit>
        <trans-unit id="268b06d07377000120f853c0a02a0d2997b09ef6" translate="yes" xml:space="preserve">
          <source>For matchers support check out:</source>
          <target state="translated">匹配器支持检查。</target>
        </trans-unit>
        <trans-unit id="6d2392160b510b46a63f61fe3fda6207d09e1268" translate="yes" xml:space="preserve">
          <source>For more information about expectations, see &lt;a href=&quot;minitest/expectations&quot;&gt;Minitest::Expectations&lt;/a&gt;.</source>
          <target state="translated">有关期望的更多信息，请参见&lt;a href=&quot;minitest/expectations&quot;&gt;Minitest :: Expectations&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bc4f618ddbe79235b09655eed27b67b3efe355b0" translate="yes" xml:space="preserve">
          <source>For more information on getting started with writing specs, see:</source>
          <target state="translated">关于开始编写规范的更多信息,请看。</target>
        </trans-unit>
        <trans-unit id="6f3b7ac1b2add5574178393f91013ecd66156a6d" translate="yes" xml:space="preserve">
          <source>For some suggestions on how to improve your specs, try:</source>
          <target state="translated">关于如何提高规格的一些建议,可以试试。</target>
        </trans-unit>
        <trans-unit id="08dac2a7fba3871c8e6306ce5626f0f516ddc332" translate="yes" xml:space="preserve">
          <source>For testing with binary operators. Eg:</source>
          <target state="translated">用于测试二进制运算符。例如:</target>
        </trans-unit>
        <trans-unit id="53d7827d624d0b4756f5318b3c63d317a2efc171" translate="yes" xml:space="preserve">
          <source>For testing with predicates.</source>
          <target state="translated">用于用谓词进行测试。</target>
        </trans-unit>
        <trans-unit id="ef38523a2d3fc6bb1d06d30da8ba6ad297801ad1" translate="yes" xml:space="preserve">
          <source>For testing with predicates. Eg:</source>
          <target state="translated">用于用谓词进行测试。例如:</target>
        </trans-unit>
        <trans-unit id="fc2bab16e355f84b9c30d1a99c46073e217c7d8d" translate="yes" xml:space="preserve">
          <source>Fork-based parallelization</source>
          <target state="translated">叉式并行化</target>
        </trans-unit>
        <trans-unit id="d7ace38ca5afeac4947718d5cd3836ff4faa6699" translate="yes" xml:space="preserve">
          <source>GLOBALLY ACTIVATE MINITEST PRIDE! RAWR!</source>
          <target state="translated">全球活动MINITEST的骄傲!RAWR!</target>
        </trans-unit>
        <trans-unit id="b0f77a30ad0189bd84e46762b73399a65b090b13" translate="yes" xml:space="preserve">
          <source>Generally useful additions to minitest's assertions and expectations.</source>
          <target state="translated">一般来说,对minitest的断言和期望是有用的补充。</target>
        </trans-unit>
        <trans-unit id="a7e9116bc304b8cd012661a3045c78e4ae23e4ac" translate="yes" xml:space="preserve">
          <source>Get tests results as a TestResult object.</source>
          <target state="translated">以TestResult对象的形式获取测试结果。</target>
        </trans-unit>
        <trans-unit id="f31544a98253266a020a7bb888aaac75a8d2f342" translate="yes" xml:space="preserve">
          <source>Given that you'd like to test the following class:</source>
          <target state="translated">鉴于你想测试以下类。</target>
        </trans-unit>
        <trans-unit id="123ec03f451bb302001a08870f87a06dc75690f1" translate="yes" xml:space="preserve">
          <source>Helps you isolate and debug random test failures.</source>
          <target state="translated">帮助你隔离和调试随机测试失败。</target>
        </trans-unit>
        <trans-unit id="ff160cdd7614d035c4c4f22d5a37da7a1dba4fd2" translate="yes" xml:space="preserve">
          <source>Hint: If you &lt;em&gt;do&lt;/em&gt; want inheritance, use minitest/test. You can mix and match between assertions and expectations as much as you want.</source>
          <target state="translated">提示：如果您&lt;em&gt;确实&lt;/em&gt;想要继承，请使用minitest / test。您可以根据需要在断言和期望之间进行混合和匹配。</target>
        </trans-unit>
        <trans-unit id="78772dd29414de0182f3c1e791f058ba68769fb8" translate="yes" xml:space="preserve">
          <source>How to run code before a group of tests?</source>
          <target state="translated">如何在一组测试前运行代码?</target>
        </trans-unit>
        <trans-unit id="373f76fd92dc53fb47a8dd687cc9c11a5a0e5ab2" translate="yes" xml:space="preserve">
          <source>How to share code across test classes?</source>
          <target state="translated">如何跨测试类共享代码?</target>
        </trans-unit>
        <trans-unit id="1982d23e3aa3da83e9027ce17877dbd68bec4131" translate="yes" xml:space="preserve">
          <source>How to test SimpleDelegates?</source>
          <target state="translated">如何测试SimpleDelegates?</target>
        </trans-unit>
        <trans-unit id="3655c2bf45dcdd6f3a4bf65f0cdb02249a7f35fa" translate="yes" xml:space="preserve">
          <source>INSTALL:</source>
          <target state="translated">INSTALL:</target>
        </trans-unit>
        <trans-unit id="1b4701f272fcedc226829db9ba5f910fe943db75" translate="yes" xml:space="preserve">
          <source>Ideally, you'll use a rake task to run your tests, either piecemeal or all at once. Both rake and rails ship with rake tasks for running your tests. BUT! You don't have to:</source>
          <target state="translated">理想情况下,你会使用耙任务来运行你的测试,可以是零散的,也可以是一次性的。rake和rails都提供了用于运行测试的rake任务。但是!你不必这样做。</target>
        </trans-unit>
        <trans-unit id="e2768c97ba0dc56fe66304936d27f6d4dc3bdb36" translate="yes" xml:space="preserve">
          <source>If a method will be called multiple times, specify a new expect for each one. They will be used in the order you define them.</source>
          <target state="translated">如果一个方法将被多次调用,请为每个方法指定一个新的期望。它们将按照你定义的顺序被使用。</target>
        </trans-unit>
        <trans-unit id="8bb80309a0a60b6466112182610f948cbed90749" translate="yes" xml:space="preserve">
          <source>If there is no visible difference but the assertion fails, you should suspect that your #== is buggy, or your inspect output is missing crucial details. For nicer structural diffing, set &lt;a href=&quot;test#method-c-make_my_diffs_pretty-21&quot;&gt;Minitest::Test.make_my_diffs_pretty!&lt;/a&gt;</source>
          <target state="translated">如果没有明显的区别，但是断言失败，则应该怀疑您的＃==有错误，或者您的inspect输出缺少关键细节。要获得更好的结构&lt;a href=&quot;test#method-c-make_my_diffs_pretty-21&quot;&gt;差异&lt;/a&gt;，请设置Minitest :: Test.make_my_diffs_pretty！</target>
        </trans-unit>
        <trans-unit id="99124c8b1dff53066b0ea119157c7266d13b73b9" translate="yes" xml:space="preserve">
          <source>If you are using PowerShell make sure you run diff.exe, not just diff, which will invoke the PowerShell built in function.</source>
          <target state="translated">如果你使用PowerShell,请确保你运行diff.exe,而不仅仅是diff,它将调用PowerShell内置的函数。</target>
        </trans-unit>
        <trans-unit id="170f87a71a9475eeb754e180756b6dff96c29a32" translate="yes" xml:space="preserve">
          <source>If you see failures like either of these, you are probably missing diff tool:</source>
          <target state="translated">如果你看到类似这些故障,你可能缺少diff工具。</target>
        </trans-unit>
        <trans-unit id="22d5a18cd5c96b2a981a358cbabeba29e7268ad1" translate="yes" xml:space="preserve">
          <source>If you thought the &lt;a href=&quot;prideio&quot;&gt;PrideIO&lt;/a&gt; was colorful&amp;hellip;</source>
          <target state="translated">如果您认为&lt;a href=&quot;prideio&quot;&gt;PrideIO&lt;/a&gt;色彩缤纷&amp;hellip;&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="5237d19ab82da304cb048a4e8c5bbe57bb5e516e" translate="yes" xml:space="preserve">
          <source>If you use Cygwin or MSYS2 or similar there are packages that include a GNU diff for Windows. If you don't, you can download GNU diffutils from &lt;a href=&quot;http://gnuwin32.sourceforge.net/packages/diffutils.htm&quot;&gt;gnuwin32.sourceforge.net/packages/diffutils.htm&lt;/a&gt; (make sure to add it to your PATH).</source>
          <target state="translated">如果您使用Cygwin或MSYS2或类似产品，则有些软件包包含Windows的GNU差异。如果不这样做，则可以从&lt;a href=&quot;http://gnuwin32.sourceforge.net/packages/diffutils.htm&quot;&gt;gnuwin32.sourceforge.net/packages/diffutils.htm&lt;/a&gt;下载GNU diffutils （确保将其添加到PATH中）。</target>
        </trans-unit>
        <trans-unit id="6ec878a8c86b5df7008ebfbd253b3758f558143d" translate="yes" xml:space="preserve">
          <source>If you want to create an entirely different type of output (eg, CI, HTML, etc), this is the place to start.</source>
          <target state="translated">如果你想创建一个完全不同类型的输出(例如,CI,HTML等),这是开始的地方。</target>
        </trans-unit>
        <trans-unit id="e2f4da5789e000254e4905c7f16fde33e770d508" translate="yes" xml:space="preserve">
          <source>If your encoding is wrong, you'll see errors like:</source>
          <target state="translated">如果你的编码错误,你会看到这样的错误。</target>
        </trans-unit>
        <trans-unit id="2edb9e68b62734bff761b4593c6fc7bbc7ecb398" translate="yes" xml:space="preserve">
          <source>If your output is something other than UTF-8, you can set the RUBYOPTS env variable to a value of '-Eutf-8'. Something like:</source>
          <target state="translated">如果你的输出不是UTF-8,你可以将RUBYOPTS的env变量设置为'-Eutf-8'。就像这样。</target>
        </trans-unit>
        <trans-unit id="655503ca36c4f398c1e1434e9370e643c04d7fc9" translate="yes" xml:space="preserve">
          <source>Implicit declaration of the test subject.</source>
          <target state="translated">隐性声明的测试对象。</target>
        </trans-unit>
        <trans-unit id="4c5f87743501282fa63fbaffa15c1a3acc9cc8cd" translate="yes" xml:space="preserve">
          <source>Included modules:</source>
          <target state="translated">包括的模块:</target>
        </trans-unit>
        <trans-unit id="73533fc88e8af8a0fb2e6fdd5a1e1cdc91a54672" translate="yes" xml:space="preserve">
          <source>Incredibly small and fast runner, but no bells and whistles.</source>
          <target state="translated">不可思议的小而快的奔跑,但没有铃铛和口哨。</target>
        </trans-unit>
        <trans-unit id="b9a1f154b8b68793103414388cb351294446cc20" translate="yes" xml:space="preserve">
          <source>Instrument ActiveSupport::Notifications when test method is executed.</source>
          <target state="translated">Instrument ActiveSupport::Notifications when test method is executed.</target>
        </trans-unit>
        <trans-unit id="dc5fb6994e8d05697f16b89634e7187d4d0deb9d" translate="yes" xml:space="preserve">
          <source>Internal run method. Responsible for telling all Runnable sub-classes to run.</source>
          <target state="translated">内部运行方法。负责告诉所有Runnable子类运行。</target>
        </trans-unit>
        <trans-unit id="dbdeb8b2918ef30abef65605c475711036d1dcb2" translate="yes" xml:space="preserve">
          <source>Is this running on jruby?</source>
          <target state="translated">这是在jruby上运行吗?</target>
        </trans-unit>
        <trans-unit id="f3017a51acdfb78e986c81ec4440728371beb3b0" translate="yes" xml:space="preserve">
          <source>Is this running on maglev?</source>
          <target state="translated">这是在磁悬浮上运行吗?</target>
        </trans-unit>
        <trans-unit id="26fbcce39a915f27e0900ee582d9d35af60cc010" translate="yes" xml:space="preserve">
          <source>Is this running on mri?</source>
          <target state="translated">这是在核磁共振上运行吗?</target>
        </trans-unit>
        <trans-unit id="7409554a55d2c9d8b0ba456eee0c1ce453a441d3" translate="yes" xml:space="preserve">
          <source>Is this running on rubinius?</source>
          <target state="translated">这是在rubinius上运行吗?</target>
        </trans-unit>
        <trans-unit id="c05fc3153004a28d42bbe28905436552f27cbfb3" translate="yes" xml:space="preserve">
          <source>Is this running on windows?</source>
          <target state="translated">这是在Windows上运行吗?</target>
        </trans-unit>
        <trans-unit id="6d311c24b78b9e7050afd9c7505e1cb069ab2b96" translate="yes" xml:space="preserve">
          <source>It's where you hide your &amp;ldquo;assertions&amp;rdquo;.</source>
          <target state="translated">在这里您可以隐藏&amp;ldquo;断言&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="7132de4cf24315f6a494175e3b9db3a5f8de317e" translate="yes" xml:space="preserve">
          <source>JUnit-style XML reporter for minitest.</source>
          <target state="translated">用于minitest的JUnit风格的XML报告器。</target>
        </trans-unit>
        <trans-unit id="fd3a59df487d5f518978cc171c392bf637eb64d1" translate="yes" xml:space="preserve">
          <source>Just install minitest as a gem for real and you'll be happier.</source>
          <target state="translated">只要把minitest当做创业板来真正安装,你会更开心。</target>
        </trans-unit>
        <trans-unit id="74808d3df030e992e7b9444241625147986487c1" translate="yes" xml:space="preserve">
          <source>Kernel</source>
          <target state="translated">Kernel</target>
        </trans-unit>
        <trans-unit id="30f4443e208b7357a3fcca04340134962218cead" translate="yes" xml:space="preserve">
          <source>Known Extensions:</source>
          <target state="translated">已知扩展:</target>
        </trans-unit>
        <trans-unit id="78a6163d272b6fd9966151fbf42a2d61d8b323f4" translate="yes" xml:space="preserve">
          <source>LICENSE:</source>
          <target state="translated">LICENSE:</target>
        </trans-unit>
        <trans-unit id="58fd3b1b83cc7fc933d72fe934bdb6e534441281" translate="yes" xml:space="preserve">
          <source>Licensed under the MIT License.</source>
          <target state="translated">根据麻省理工学院许可证授权。</target>
        </trans-unit>
        <trans-unit id="023cf83e07dad3038695088ae3275ffcaa99bf42" translate="yes" xml:space="preserve">
          <source>LifecycleHooks</source>
          <target state="translated">LifecycleHooks</target>
        </trans-unit>
        <trans-unit id="96e127e0ad1050bbdfdd93cb9e3b744c4a98d163" translate="yes" xml:space="preserve">
          <source>LifecycleHooks#after_setup</source>
          <target state="translated">LifecycleHooks#after_setup</target>
        </trans-unit>
        <trans-unit id="04ba17dd04c4f612bcda618bab2b25a62ed29b8d" translate="yes" xml:space="preserve">
          <source>LifecycleHooks#after_teardown</source>
          <target state="translated">LifecycleHooks#after_teardown</target>
        </trans-unit>
        <trans-unit id="ccc59cc4bb673ef872b1320e69578194a35c91fa" translate="yes" xml:space="preserve">
          <source>LifecycleHooks#before_setup</source>
          <target state="translated">LifecycleHooks#before_setup</target>
        </trans-unit>
        <trans-unit id="60ec88f6d284df7cccb739751fd71d2bfff4998a" translate="yes" xml:space="preserve">
          <source>LifecycleHooks#before_teardown</source>
          <target state="translated">LifecycleHooks#before_teardown</target>
        </trans-unit>
        <trans-unit id="4222067550a2b9b5745b63b960a928db6a0bee91" translate="yes" xml:space="preserve">
          <source>LifecycleHooks#setup</source>
          <target state="translated">LifecycleHooks#setup</target>
        </trans-unit>
        <trans-unit id="bc353ec8d9a2688b50aba15c87673e3e5a01e7d5" translate="yes" xml:space="preserve">
          <source>LifecycleHooks#teardown</source>
          <target state="translated">LifecycleHooks#teardown</target>
        </trans-unit>
        <trans-unit id="3fbe84f7d29f25c283263bc3209480db1e7c4f76" translate="yes" xml:space="preserve">
          <source>List the 10 slowest tests in your suite.</source>
          <target state="translated">列出你的套件中最慢的10个测试。</target>
        </trans-unit>
        <trans-unit id="a0dfd7c4cd86494edb50c85da0823f6752ad5c42" translate="yes" xml:space="preserve">
          <source>Make diffs for this &lt;a href=&quot;test&quot;&gt;Test&lt;/a&gt; use pretty_inspect so that diff in assert_equal can have more details. NOTE: this is much slower than the regular inspect but much more usable for complex objects.</source>
          <target state="translated">使此&lt;a href=&quot;test&quot;&gt;测试的&lt;/a&gt;差异使用pretty_inspect，以便assert_equal中的差异可以具有更多详细信息。注意：这比常规检查要慢得多，但对复杂对象的可用性要大得多。</target>
        </trans-unit>
        <trans-unit id="ae7575a691b5d278e01a5ca7f092d16ce01fb2a4" translate="yes" xml:space="preserve">
          <source>Make the string even more colorful. Damnit.</source>
          <target state="translated">让绳子更加丰富多彩。该死的。</target>
        </trans-unit>
        <trans-unit id="a006f0403fa4e3235f20ea378d698a2e11c07201" translate="yes" xml:space="preserve">
          <source>Makes your Minitest mocks more resilient.</source>
          <target state="translated">让你的Minitest嘲讽更有弹性。</target>
        </trans-unit>
        <trans-unit id="e63e4519432a184f2c433088dda29083ad55f057" translate="yes" xml:space="preserve">
          <source>Manifest</source>
          <target state="translated">Manifest</target>
        </trans-unit>
        <trans-unit id="c9c0dd41f9023b4e120fe2f339921b7fb1704192" translate="yes" xml:space="preserve">
          <source>Metadata for describe/it blocks &amp;amp; CLI tag filter. E.g. &lt;code&gt;it
&quot;requires JS driver&quot;, js: true do&lt;/code&gt; &amp;amp; &lt;code&gt;ruby test.rb
--tag js&lt;/code&gt; runs tests tagged :js.</source>
          <target state="translated">describe / it块和CLI标记过滤器的元数据。例如， &lt;code&gt;it &quot;requires JS driver&quot;, js: true do&lt;/code&gt; ＆ &lt;code&gt;ruby test.rb --tag js&lt;/code&gt; 运行标记为：js的测试。</target>
        </trans-unit>
        <trans-unit id="09553862d404ed1dcffd3be88063df1f1d64c928" translate="yes" xml:space="preserve">
          <source>Minimal documentation format inspired by rspec's.</source>
          <target state="translated">受rspec的启发,最小的文档格式。</target>
        </trans-unit>
        <trans-unit id="f35a42111ee96cca9a4c98fa780dbedca16b7cca" translate="yes" xml:space="preserve">
          <source>Minimal support to use &lt;a href=&quot;minitest/spec&quot;&gt;Spec&lt;/a&gt; style in Rails 5+.</source>
          <target state="translated">在Rails 5+中使用&lt;a href=&quot;minitest/spec&quot;&gt;Spec&lt;/a&gt;样式的支持最少。</target>
        </trans-unit>
        <trans-unit id="f9c9bb0cc09e05af5632a50cde6c25232d2fc004" translate="yes" xml:space="preserve">
          <source>Minitest</source>
          <target state="translated">Minitest</target>
        </trans-unit>
        <trans-unit id="e3a6258d899c9e8fbc933fc63981900a31be2708" translate="yes" xml:space="preserve">
          <source>Minitest &lt;a href=&quot;assertions&quot;&gt;Assertions&lt;/a&gt;. All assertion methods accept a &lt;code&gt;msg&lt;/code&gt; which is printed if the assertion fails.</source>
          <target state="translated">最小测试&lt;a href=&quot;assertions&quot;&gt;断言&lt;/a&gt;。所有断言方法都接受一个 &lt;code&gt;msg&lt;/code&gt; ，如果断言失败，则将打印该msg。</target>
        </trans-unit>
        <trans-unit id="71e32c64e70669cfa82b5d84edca5f85522a54e4" translate="yes" xml:space="preserve">
          <source>Minitest assertions to speed-up development and testing of Ruby Sequel database setups.</source>
          <target state="translated">Minitest断言,以加快Ruby Sequel数据库设置的开发和测试。</target>
        </trans-unit>
        <trans-unit id="b1aa8a96d257c3b94b757690d9de303c7557045e" translate="yes" xml:space="preserve">
          <source>Minitest integration for Rails 3.x.</source>
          <target state="translated">Rails 3.x的Minitest集成。</target>
        </trans-unit>
        <trans-unit id="d316c45f30868da686242bf179742143dee20593" translate="yes" xml:space="preserve">
          <source>Minitest matchers for Mongoid.</source>
          <target state="translated">Mongoid的Minitest匹配器。</target>
        </trans-unit>
        <trans-unit id="cec4a6257eb558f3ffb2a2d020135278b16a543b" translate="yes" xml:space="preserve">
          <source>Minitest mocks do not support multi-threading if it works, fine, if it doesn't you can use regular ruby patterns and facilities like local variables. Here's an example of asserting that code inside a thread is run:</source>
          <target state="translated">Minitest mocks不支持多线程,如果能用,很好,如果不能用,你可以使用常规的ruby模式和局部变量等设施。这里有一个例子,可以断言一个线程里面的代码是运行的。</target>
        </trans-unit>
        <trans-unit id="92c44ed7c77e09495b752babc85ef7b80f36b71e" translate="yes" xml:space="preserve">
          <source>Minitest related goods</source>
          <target state="translated">迷你测试相关产品</target>
        </trans-unit>
        <trans-unit id="11c0f5291a3575401b6137d1f33ad8a1026bf4ac" translate="yes" xml:space="preserve">
          <source>Minitest uses composite reporter to output test results using multiple reporter instances. You can add new reporters to the composite during the init_plugins phase. As we saw in &lt;code&gt;plugin_bogus_init&lt;/code&gt; above, you simply add your reporter instance to the composite via &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;.</source>
          <target state="translated">Minitest使用复合报告程序通过多个报告程序实例输出测试结果。您可以在init_plugins阶段将新的报告程序添加到组合中。正如我们在上面的 &lt;code&gt;plugin_bogus_init&lt;/code&gt; 中所看到的，您只需通过 &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; 将报表实例添加到组合中。</target>
        </trans-unit>
        <trans-unit id="6c23f5ccefbe843cad9d39ca72d7d8a3de5ee8bd" translate="yes" xml:space="preserve">
          <source>Minitest's own tests require GNU (or similar) diff.</source>
          <target state="translated">Minitest自己的测试需要GNU(或类似的)diff。</target>
        </trans-unit>
        <trans-unit id="b27f4e7165e5747cec9d90498c9b255e20b109c8" translate="yes" xml:space="preserve">
          <source>Minitest's own tests require UTF-8 external encoding.</source>
          <target state="translated">Minitest自己的测试需要UTF-8外部编码。</target>
        </trans-unit>
        <trans-unit id="ccd944da1667d00c61e3bdef147607be46c0711b" translate="yes" xml:space="preserve">
          <source>Minitest's stub method overrides a single method for the duration of the block.</source>
          <target state="translated">Minitest 的存根方法在块的持续时间内覆盖单一方法。</target>
        </trans-unit>
        <trans-unit id="ae7669f04b627e5298fb4d22d4d9f8e14a5c65f2" translate="yes" xml:space="preserve">
          <source>Minitest::AbstractReporter</source>
          <target state="translated">Minitest::AbstractReporter</target>
        </trans-unit>
        <trans-unit id="5e6e7f650b7ccc9365d95ed3cee1d408a0ce1f4c" translate="yes" xml:space="preserve">
          <source>Minitest::Assertion</source>
          <target state="translated">Minitest::Assertion</target>
        </trans-unit>
        <trans-unit id="4c5f85d8a316f8c5908c73bd5043e1984e3a0db5" translate="yes" xml:space="preserve">
          <source>Minitest::Assertions</source>
          <target state="translated">Minitest::Assertions</target>
        </trans-unit>
        <trans-unit id="63397bd6dd9f7e583666e96588fec0c469c05d99" translate="yes" xml:space="preserve">
          <source>Minitest::Assertions#diff</source>
          <target state="translated">Minitest::Assertions#diff</target>
        </trans-unit>
        <trans-unit id="48a22f09daee21f3f8a2da1ac62ec3929c1fae4c" translate="yes" xml:space="preserve">
          <source>Minitest::Assertions#pass</source>
          <target state="translated">Minitest::Assertions#pass</target>
        </trans-unit>
        <trans-unit id="8f100d47a09439d5a893f63d2e7f7dbf3bd5ffec" translate="yes" xml:space="preserve">
          <source>Minitest::Assertions#skip</source>
          <target state="translated">Minitest::Assertions#skip</target>
        </trans-unit>
        <trans-unit id="95ae74568a00234c66d6be119ae459dac04b500f" translate="yes" xml:space="preserve">
          <source>Minitest::Assertions::diff</source>
          <target state="translated">Minitest::Assertions::diff</target>
        </trans-unit>
        <trans-unit id="72bf82026a1dd2331b17e04d70833cd7aa52b5a8" translate="yes" xml:space="preserve">
          <source>Minitest::Assertions::diff=</source>
          <target state="translated">Minitest::Assertions::diff=</target>
        </trans-unit>
        <trans-unit id="7da6556dd9d0c402af79d1f08dbedc501aff9eea" translate="yes" xml:space="preserve">
          <source>Minitest::BacktraceFilter</source>
          <target state="translated">Minitest::BacktraceFilter</target>
        </trans-unit>
        <trans-unit id="fd16a23f7d83b63f62ca270fb8d354653a95ccee" translate="yes" xml:space="preserve">
          <source>Minitest::BenchSpec</source>
          <target state="translated">Minitest::BenchSpec</target>
        </trans-unit>
        <trans-unit id="ebc966415df6d5eadd604041a10dd1caf9d4e336" translate="yes" xml:space="preserve">
          <source>Minitest::BenchSpec::bench</source>
          <target state="translated">Minitest::BenchSpec::bench</target>
        </trans-unit>
        <trans-unit id="c217fcd32caa610f0b7a2392009a50d97551ab15" translate="yes" xml:space="preserve">
          <source>Minitest::Benchmark</source>
          <target state="translated">Minitest::Benchmark</target>
        </trans-unit>
        <trans-unit id="0be4069e96941e1e2c5ab7332e548702f89d2b8f" translate="yes" xml:space="preserve">
          <source>Minitest::CompositeReporter</source>
          <target state="translated">Minitest::CompositeReporter</target>
        </trans-unit>
        <trans-unit id="4541f7f0cc63b5121afac2dee966ec3e6d05c57e" translate="yes" xml:space="preserve">
          <source>Minitest::Expectations</source>
          <target state="translated">Minitest::Expectations</target>
        </trans-unit>
        <trans-unit id="852f77b6eb9ccdd02500eabd6f245b4fef7896a5" translate="yes" xml:space="preserve">
          <source>Minitest::Guard</source>
          <target state="translated">Minitest::Guard</target>
        </trans-unit>
        <trans-unit id="dd665254fdd0d73cf3b538f9060ecb1fbbe9bbb5" translate="yes" xml:space="preserve">
          <source>Minitest::Guard#mri?</source>
          <target state="translated">Minitest::Guard#mri?</target>
        </trans-unit>
        <trans-unit id="7314d78eb1bb68a442f347a24cf9ff83596c5d2f" translate="yes" xml:space="preserve">
          <source>Minitest::Mock</source>
          <target state="translated">Minitest::Mock</target>
        </trans-unit>
        <trans-unit id="64dac480ce0aab676425e8ded719ac75d51b7efe" translate="yes" xml:space="preserve">
          <source>Minitest::Parallel</source>
          <target state="translated">Minitest::Parallel</target>
        </trans-unit>
        <trans-unit id="6220c4a4f6dc2828a3a6976b56b2b416374fd28b" translate="yes" xml:space="preserve">
          <source>Minitest::Parallel::Executor</source>
          <target state="translated">Minitest::Parallel::Executor</target>
        </trans-unit>
        <trans-unit id="aac536d7a80570956e62e93e3dade06fdc0d67c8" translate="yes" xml:space="preserve">
          <source>Minitest::PrideIO</source>
          <target state="translated">Minitest::PrideIO</target>
        </trans-unit>
        <trans-unit id="b1f97f08e0d5bd39bd8a783c2ea6fba20a41a6a8" translate="yes" xml:space="preserve">
          <source>Minitest::PrideIO#io</source>
          <target state="translated">Minitest::PrideIO#io</target>
        </trans-unit>
        <trans-unit id="9689085ff980bde075f379b334aafaf2b822da45" translate="yes" xml:space="preserve">
          <source>Minitest::PrideLOL</source>
          <target state="translated">Minitest::PrideLOL</target>
        </trans-unit>
        <trans-unit id="90b156c3874bfc59688282e48ef2669e3673d334" translate="yes" xml:space="preserve">
          <source>Minitest::ProgressReporter</source>
          <target state="translated">Minitest::ProgressReporter</target>
        </trans-unit>
        <trans-unit id="c18ace9df639620854bf4a21fd8896e6f4da76ca" translate="yes" xml:space="preserve">
          <source>Minitest::Reportable</source>
          <target state="translated">Minitest::Reportable</target>
        </trans-unit>
        <trans-unit id="c5533bb1c7b4322db08b810c83bbf3c2c4730b72" translate="yes" xml:space="preserve">
          <source>Minitest::Reporter</source>
          <target state="translated">Minitest::Reporter</target>
        </trans-unit>
        <trans-unit id="2221183d03670a1e5392a650c7db8cc74bdf0a2c" translate="yes" xml:space="preserve">
          <source>Minitest::Result</source>
          <target state="translated">Minitest::Result</target>
        </trans-unit>
        <trans-unit id="9e107a04ded4a12d7334168b86d918471c150774" translate="yes" xml:space="preserve">
          <source>Minitest::Result::from</source>
          <target state="translated">Minitest::Result::from</target>
        </trans-unit>
        <trans-unit id="a459d70432480c3043cd15dcbf6cf077d8960214" translate="yes" xml:space="preserve">
          <source>Minitest::Runnable</source>
          <target state="translated">Minitest::Runnable</target>
        </trans-unit>
        <trans-unit id="f281db0025bfa98ce01c7ec1047190700d504e19" translate="yes" xml:space="preserve">
          <source>Minitest::Runnable#name</source>
          <target state="translated">Minitest::Runnable#name</target>
        </trans-unit>
        <trans-unit id="eff3236cd5db542cbc9a50b5a15f748e3cb37348" translate="yes" xml:space="preserve">
          <source>Minitest::Runnable#run</source>
          <target state="translated">Minitest::Runnable#run</target>
        </trans-unit>
        <trans-unit id="9e1d55825e30c8126686f0b88acd07f2251e6de1" translate="yes" xml:space="preserve">
          <source>Minitest::Runnable#time</source>
          <target state="translated">Minitest::Runnable#time</target>
        </trans-unit>
        <trans-unit id="c16d6553792628103ec019fa7fbb63979ce1c5df" translate="yes" xml:space="preserve">
          <source>Minitest::Runnable::run</source>
          <target state="translated">Minitest::Runnable::run</target>
        </trans-unit>
        <trans-unit id="008b924a75091ef3d08376a392cf1ed15ca3a3fa" translate="yes" xml:space="preserve">
          <source>Minitest::Skip</source>
          <target state="translated">Minitest::Skip</target>
        </trans-unit>
        <trans-unit id="257ad879addf33bd1cc0d89a34b60cce6d15d01f" translate="yes" xml:space="preserve">
          <source>Minitest::Spec</source>
          <target state="translated">Minitest::Spec</target>
        </trans-unit>
        <trans-unit id="243b4646131820fcd0fabb2e7a27406027a5dd59" translate="yes" xml:space="preserve">
          <source>Minitest::Spec::DSL</source>
          <target state="translated">Minitest::Spec::DSL</target>
        </trans-unit>
        <trans-unit id="ce3a6bf3eb600908e647dec10401b7fc4fe5d3c5" translate="yes" xml:space="preserve">
          <source>Minitest::Spec::DSL::InstanceMethods</source>
          <target state="translated">Minitest::Spec::DSL::InstanceMethods</target>
        </trans-unit>
        <trans-unit id="9beeca536e6abd0b7e3a4a7e16847c56d303dfba" translate="yes" xml:space="preserve">
          <source>Minitest::StatisticsReporter</source>
          <target state="translated">Minitest::StatisticsReporter</target>
        </trans-unit>
        <trans-unit id="3270a075c932e22deb5aa31c89b28ead13ca521d" translate="yes" xml:space="preserve">
          <source>Minitest::SummaryReporter</source>
          <target state="translated">Minitest::SummaryReporter</target>
        </trans-unit>
        <trans-unit id="16596f8408b40402e03fb1fa1fea448e6247038b" translate="yes" xml:space="preserve">
          <source>Minitest::Test</source>
          <target state="translated">Minitest::Test</target>
        </trans-unit>
        <trans-unit id="edc8ad7448c67a41a02991cdedd5f4c35560512d" translate="yes" xml:space="preserve">
          <source>Minitest::Test#run</source>
          <target state="translated">Minitest::Test#run</target>
        </trans-unit>
        <trans-unit id="efde094c2d6aa15c42f0a1b1d3d9899f307152ba" translate="yes" xml:space="preserve">
          <source>Minitest::Test::LifecycleHooks</source>
          <target state="translated">Minitest::Test::LifecycleHooks</target>
        </trans-unit>
        <trans-unit id="07ebbd67da9a4cbe3bac3d19b6a429ecf319e707" translate="yes" xml:space="preserve">
          <source>Minitest::UnexpectedError</source>
          <target state="translated">Minitest::UnexpectedError</target>
        </trans-unit>
        <trans-unit id="f00429197e5b484da486ad9682bcdaff088b5754" translate="yes" xml:space="preserve">
          <source>Minitest::run</source>
          <target state="translated">Minitest::run</target>
        </trans-unit>
        <trans-unit id="4731741185e28601ad735cc472790cff5b345cd9" translate="yes" xml:space="preserve">
          <source>Mocks</source>
          <target state="translated">Mocks</target>
        </trans-unit>
        <trans-unit id="28aee78937d17f709b59b6215a8ea5db994d8553" translate="yes" xml:space="preserve">
          <source>Mocks and stubs are defined using terminology by Fowler &amp;amp; Meszaros at &lt;a href=&quot;http://www.martinfowler.com/bliki/TestDouble.html&quot;&gt;www.martinfowler.com/bliki/TestDouble.html&lt;/a&gt;:</source>
          <target state="translated">嘲弄和存根由Fowler＆&lt;a href=&quot;http://www.martinfowler.com/bliki/TestDouble.html&quot;&gt;Meszaros&lt;/a&gt;使用www.martinfowler.com/bliki/TestDouble.html的术语定义：</target>
        </trans-unit>
        <trans-unit id="bd98f5f5f55e41b6305e4ec1de7f73d1006ce1d2" translate="yes" xml:space="preserve">
          <source>Mocks and stubs defined using terminology by Fowler &amp;amp; Meszaros at &lt;a href=&quot;http://www.martinfowler.com/bliki/TestDouble.html&quot;&gt;www.martinfowler.com/bliki/TestDouble.html&lt;/a&gt;:</source>
          <target state="translated">使用Fowler＆&lt;a href=&quot;http://www.martinfowler.com/bliki/TestDouble.html&quot;&gt;Meszaros&lt;/a&gt;在www.martinfowler.com/bliki/TestDouble.html上的术语定义的小样和存根：</target>
        </trans-unit>
        <trans-unit id="bd4e473d905f2d770d05895435764461a1d21b83" translate="yes" xml:space="preserve">
          <source>Mongoid assertion matchers for Minitest.</source>
          <target state="translated">Minitest的Mongoid断言匹配器。</target>
        </trans-unit>
        <trans-unit id="1147fed3202e04aaa6308b6b8a54562bc67f3782" translate="yes" xml:space="preserve">
          <source>NND</source>
          <target state="translated">NND</target>
        </trans-unit>
        <trans-unit id="d4441e49a033dce8d17e8b3c1978ecc0f7d270a7" translate="yes" xml:space="preserve">
          <source>NOTE: 1.8 and 1.9 will be dropped in minitest 6+.</source>
          <target state="translated">注:1.8和1.9将在minitest 6+中放弃。</target>
        </trans-unit>
        <trans-unit id="a965706ee537289fa5a312965938ef98c979cb96" translate="yes" xml:space="preserve">
          <source>NOTE: &lt;code&gt;type&lt;/code&gt; is ignored and is only there to make porting easier.</source>
          <target state="translated">注意： &lt;code&gt;type&lt;/code&gt; 会被忽略，只是为了使移植更容易。</target>
        </trans-unit>
        <trans-unit id="1844d9590dd1e3fac184d4f7624bb8a199ba5aaa" translate="yes" xml:space="preserve">
          <source>NOTE: For efficiency, this method uses StringIO and does not capture IO for subprocesses. Use &lt;a href=&quot;assertions#method-i-capture_subprocess_io&quot;&gt;capture_subprocess_io&lt;/a&gt; for that.</source>
          <target state="translated">注意：为了提高效率，此方法使用StringIO，并且不捕获子进程的IO。为此使用&lt;a href=&quot;assertions#method-i-capture_subprocess_io&quot;&gt;capture_subprocess_io&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e6f9c7ea541c8e57e77a159f332b783658fd038e" translate="yes" xml:space="preserve">
          <source>NOTE: This method is approximately 10x slower than &lt;a href=&quot;assertions#method-i-capture_io&quot;&gt;capture_io&lt;/a&gt; so only use it when you need to test the output of a subprocess.</source>
          <target state="translated">注意：此方法大约比&lt;a href=&quot;assertions#method-i-capture_io&quot;&gt;capture_io&lt;/a&gt;慢10倍，因此仅在需要测试子流程的输出时才使用它。</target>
        </trans-unit>
        <trans-unit id="9ffb97f8573dad6c775282afc828fa7a39bc5b19" translate="yes" xml:space="preserve">
          <source>NOTE: this uses &lt;a href=&quot;assertions#method-i-capture_io&quot;&gt;capture_io&lt;/a&gt;, not &lt;a href=&quot;assertions#method-i-capture_subprocess_io&quot;&gt;capture_subprocess_io&lt;/a&gt;.</source>
          <target state="translated">注意：这使用&lt;a href=&quot;assertions#method-i-capture_io&quot;&gt;capture_io&lt;/a&gt;，而不是&lt;a href=&quot;assertions#method-i-capture_subprocess_io&quot;&gt;capture_subprocess_io&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b1578eb53ef1929cc81e02493af8014d70eb7603" translate="yes" xml:space="preserve">
          <source>Name of the run.</source>
          <target state="translated">运行的名称。</target>
        </trans-unit>
        <trans-unit id="b0045342a171374974769fbb087c3f5918914b4f" translate="yes" xml:space="preserve">
          <source>Note: skipped runs are not considered passing, but they don't cause the process to exit non-zero.</source>
          <target state="translated">注意:跳过的运行不视为通过,但不会导致进程非零退出。</target>
        </trans-unit>
        <trans-unit id="189b090edfd9b99c2c0700ac86c51fb1f4450f3f" translate="yes" xml:space="preserve">
          <source>Number of assertions executed in this run.</source>
          <target state="translated">本次运行中执行的断言数量。</target>
        </trans-unit>
        <trans-unit id="2883f191bc5ebfdc16c0813eff659b35363ea69b" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="translated">Object</target>
        </trans-unit>
        <trans-unit id="6cf852e12972e2d9e3a9128c6570641a7271645c" translate="yes" xml:space="preserve">
          <source>Object#stub</source>
          <target state="translated">Object#stub</target>
        </trans-unit>
        <trans-unit id="696d59b048fb5178716a850d965af4eff213ac62" translate="yes" xml:space="preserve">
          <source>Oh look! A &lt;a href=&quot;dsl&quot;&gt;Minitest::Spec::DSL&lt;/a&gt; module! Eat your heart out DHH.</source>
          <target state="translated">哦，看！一个&lt;a href=&quot;dsl&quot;&gt;Minitest :: Spec :: DSL&lt;/a&gt;模块！吃掉你的心脏DHH。</target>
        </trans-unit>
        <trans-unit id="ad250e59338ab44ee4c515c573c5ce0b3e4f490d" translate="yes" xml:space="preserve">
          <source>On 1.9, you already have it. To get newer candy you can still install the gem, and then requiring &amp;ldquo;minitest/autorun&amp;rdquo; should automatically pull it in. If not, you'll need to do it yourself:</source>
          <target state="translated">在1.9上，您已经拥有它。要获得更新的糖果，您仍然可以安装宝石，然后要求&amp;ldquo;最小/自动运行&amp;rdquo;将其自动拉入。如果没有，则需要自己动手做：</target>
        </trans-unit>
        <trans-unit id="c7772f7149938a270f5762162ebf9d229d96e222" translate="yes" xml:space="preserve">
          <source>Or add them to your specs. If you make benchmarks optional, you'll need to wrap your benchmarks in a conditional since the methods won't be defined. In minitest 5, the describe name needs to match &lt;code&gt;/Bench(mark)?$/&lt;/code&gt;.</source>
          <target state="translated">或将它们添加到您的规格中。如果您将基准设置为可选，则由于不需要定义方法，因此需要将基准包装为有条件的包装。在minitest 5中，描述名称必须匹配 &lt;code&gt;/Bench(mark)?$/&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b8ae22714dce3b2ca4c149f7bf9f3c83a7ee952e" translate="yes" xml:space="preserve">
          <source>Output is tab-delimited to make it easy to paste into a spreadsheet.</source>
          <target state="translated">输出是以标签分隔的,以便于粘贴到电子表格中。</target>
        </trans-unit>
        <trans-unit id="70c5410eeafd00de8c192ecaaf93ff522392dfa5" translate="yes" xml:space="preserve">
          <source>Outputs the summary of the run.</source>
          <target state="translated">输出运行的摘要。</target>
        </trans-unit>
        <trans-unit id="bcf5c8ea03419c3d9dd98f03fe2ea9a021efbca3" translate="yes" xml:space="preserve">
          <source>Parent:</source>
          <target state="translated">Parent:</target>
        </trans-unit>
        <trans-unit id="7118bc3fe973b340d775b370b16233b2eca0a0f5" translate="yes" xml:space="preserve">
          <source>Patches Minitest to allow for an easily configurable output.</source>
          <target state="translated">对 Minitest 进行修补,使其能够轻松配置输出。</target>
        </trans-unit>
        <trans-unit id="397013f7773d260f09ee2a9e12abc96847c9a738" translate="yes" xml:space="preserve">
          <source>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</source>
          <target state="translated">兹允许任何获得本软件和相关文档文件(&quot;软件&quot;)的人免费使用本软件,不受限制地处理本软件,包括但不限于使用、复制、修改、合并、出版、分发、再许可和/或出售本软件的权利,并允许获得本软件的人在以下条件下这样做。</target>
        </trans-unit>
        <trans-unit id="3d329f8cdc144280e1c670e3ed0ba30145a03d7a" translate="yes" xml:space="preserve">
          <source>Please note, because of the way that expectations are implemented, all expectations (eg &lt;a href=&quot;expectations#method-i-must_equal&quot;&gt;#must_equal&lt;/a&gt;) are dependent upon a thread local variable &lt;code&gt;:current_spec&lt;/code&gt;. If your specs rely on mixing threads into the specs themselves, you're better off using assertions or the new _(value) wrapper. For example:</source>
          <target state="translated">请注意，由于实现期望的方式，所有期望（例如&lt;a href=&quot;expectations#method-i-must_equal&quot;&gt;#must_equal&lt;/a&gt;）都依赖于线程局部变量 &lt;code&gt;:current_spec&lt;/code&gt; 。如果您的规范依赖于将线程混入规范本身，那么最好使用断言或新的_（value）包装器。例如：</target>
        </trans-unit>
        <trans-unit id="b0ffd652383797f893bf8edd1f5a8915fb401cff" translate="yes" xml:space="preserve">
          <source>PowerAssert for Minitest.</source>
          <target state="translated">PowerAssert for Minitest。</target>
        </trans-unit>
        <trans-unit id="71f34c136e3a37650fe0b95a35c5be2ab363ad87" translate="yes" xml:space="preserve">
          <source>Pretty, single-page HTML reports for your Minitest runs</source>
          <target state="translated">为您的Minitest运行提供漂亮的单页HTML报告。</target>
        </trans-unit>
        <trans-unit id="99db55c5c4d96251734ab3aca0f10b49e50f45dd" translate="yes" xml:space="preserve">
          <source>Print a list of tests that take too long</source>
          <target state="translated">打印时间过长的测试列表</target>
        </trans-unit>
        <trans-unit id="c626d5d35af2319814401ca269b7d2bf093b6651" translate="yes" xml:space="preserve">
          <source>Print out emoji for your test passes, fails, and skips.</source>
          <target state="translated">打印出你考试通过、失败、跳过的表情。</target>
        </trans-unit>
        <trans-unit id="b62598381e1c363fac93558c96a6fbbbc9331223" translate="yes" xml:space="preserve">
          <source>Private Instance Methods</source>
          <target state="translated">私有实例方法</target>
        </trans-unit>
        <trans-unit id="a49ec30e0cfc2571aa27176d9607b86a8165198d" translate="yes" xml:space="preserve">
          <source>Prominent Projects using Minitest:</source>
          <target state="translated">使用Minitest的著名项目。</target>
        </trans-unit>
        <trans-unit id="c79bba11455f2ee308c5035bcec947157fe98de7" translate="yes" xml:space="preserve">
          <source>Protocol: Nearly everything here boils up to &lt;code&gt;assert&lt;/code&gt;, which expects to be able to increment an instance accessor named &lt;code&gt;assertions&lt;/code&gt;. This is not provided by &lt;a href=&quot;assertions&quot;&gt;Assertions&lt;/a&gt; and must be provided by the thing including &lt;a href=&quot;assertions&quot;&gt;Assertions&lt;/a&gt;. See Minitest::Runnable for an example.</source>
          <target state="translated">协议：这里几乎所有内容都可以归结为 &lt;code&gt;assert&lt;/code&gt; ，它期望能够增加名为 &lt;code&gt;assertions&lt;/code&gt; 的实例访问器。这不是&lt;a href=&quot;assertions&quot;&gt;断言&lt;/a&gt;提供的，必须由包括&lt;a href=&quot;assertions&quot;&gt;断言&lt;/a&gt;的东西提供。有关示例，请参见Minitest :: Runnable。</target>
        </trans-unit>
        <trans-unit id="fd4b6f82f94b6d6267ac50222854ebdf50b9bbc1" translate="yes" xml:space="preserve">
          <source>Provides a simple set of guards that you can use in your tests to skip execution if it is not applicable. These methods are mixed into &lt;a href=&quot;test&quot;&gt;Test&lt;/a&gt; as both instance and class methods so you can use them inside or outside of the test methods.</source>
          <target state="translated">提供一组简单的保护措施，您可以在测试中使用这些保护措施来跳过执行（如果不适用）。这些方法作为实例方法和类方法混入&lt;a href=&quot;test&quot;&gt;Test中&lt;/a&gt;，因此您可以在测试方法的内部或外部使用它们。</target>
        </trans-unit>
        <trans-unit id="910736e1bdc83af568e2a1559c52a8f0c179a011" translate="yes" xml:space="preserve">
          <source>Provides before/after hooks for setup and teardown. These are meant for library writers, NOT for regular test authors. See &lt;a href=&quot;lifecyclehooks#method-i-before_setup&quot;&gt;before_setup&lt;/a&gt; for an example.</source>
          <target state="translated">提供用于设置和拆卸的前/后挂钩。这些仅适用于图书馆作者，而不适用于常规测试作者。有关示例，请参见&lt;a href=&quot;lifecyclehooks#method-i-before_setup&quot;&gt;before_setup&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="36066ade6a3411043896c3315a17dfd02f8d3062" translate="yes" xml:space="preserve">
          <source>Provides extensions to minitest for macruby UI testing.</source>
          <target state="translated">为macruby UI测试提供minitest的扩展。</target>
        </trans-unit>
        <trans-unit id="9f7165e99de4ad1bf6b5576650693811a0f7a087" translate="yes" xml:space="preserve">
          <source>Provides must_not as an alias for wont in Minitest.</source>
          <target state="translated">提供了must_not作为Minitest中wont的别名。</target>
        </trans-unit>
        <trans-unit id="eefa62fc7671bb761ac48cd75d4e2936c85c1e06" translate="yes" xml:space="preserve">
          <source>Provides rspec-ish context method to &lt;a href=&quot;minitest/spec&quot;&gt;Minitest::Spec&lt;/a&gt;.</source>
          <target state="translated">为&lt;a href=&quot;minitest/spec&quot;&gt;Minitest :: Spec&lt;/a&gt;提供rspec-ish上下文方法。</target>
        </trans-unit>
        <trans-unit id="d76b0f4f8246a0450e29bc5bd8c52b29fd97b23d" translate="yes" xml:space="preserve">
          <source>Public Class Methods</source>
          <target state="translated">公共类方法</target>
        </trans-unit>
        <trans-unit id="b28d50156043ef7155d1f5782b19755f2268a687" translate="yes" xml:space="preserve">
          <source>Public Instance Methods</source>
          <target state="translated">公共实例方法</target>
        </trans-unit>
        <trans-unit id="68d2a84ba1351c0fc7a36ef94946d9bd9a1099ce" translate="yes" xml:space="preserve">
          <source>RATIONALE:</source>
          <target state="translated">RATIONALE:</target>
        </trans-unit>
        <trans-unit id="5ad75e5994a4d57d9a42f8193b4b56d6175556a4" translate="yes" xml:space="preserve">
          <source>REQUIREMENTS:</source>
          <target state="translated">REQUIREMENTS:</target>
        </trans-unit>
        <trans-unit id="361831afe347e3678a242089081b2ca306192124" translate="yes" xml:space="preserve">
          <source>RSpec-style &lt;code&gt;x.should == y&lt;/code&gt; assertions for Minitest.</source>
          <target state="translated">RSpec风格的 &lt;code&gt;x.should == y&lt;/code&gt; 用于Minitest的断言。</target>
        </trans-unit>
        <trans-unit id="45f0f04efa601275f178dd7bc8e48bebdfacc880" translate="yes" xml:space="preserve">
          <source>Ranges are specified by &lt;a href=&quot;benchmark#method-c-bench_range&quot;&gt;::bench_range&lt;/a&gt;.</source>
          <target state="translated">范围由&lt;a href=&quot;benchmark#method-c-bench_range&quot;&gt;:: bench_range&lt;/a&gt;指定。</target>
        </trans-unit>
        <trans-unit id="b58a310c2e9f2c875be1a9e73e764a4e280b04b1" translate="yes" xml:space="preserve">
          <source>Rdoc&amp;hellip; why are you so dumb?</source>
          <target state="translated">Rdoc ...你为什么这么傻？</target>
        </trans-unit>
        <trans-unit id="8eea28f3d512799d6145ec680f19b491ab1d1963" translate="yes" xml:space="preserve">
          <source>Record a result and output the &lt;a href=&quot;runnable#method-i-result_code&quot;&gt;Minitest::Runnable#result_code&lt;/a&gt;. Stores the result of the run if the run did not pass.</source>
          <target state="translated">记录结果并输出&lt;a href=&quot;runnable#method-i-result_code&quot;&gt;Minitest :: Runnable＃result_code&lt;/a&gt;。如果运行未通过，则存储运行结果。</target>
        </trans-unit>
        <trans-unit id="6b35f0d0a91f9f45939349e9d049b4e699b7fcbd" translate="yes" xml:space="preserve">
          <source>Register a new type of spec that matches the spec's description. This method can take either a Regexp and a spec class or a spec class and a block that takes the description and returns true if it matches.</source>
          <target state="translated">注册一个与规格描述相匹配的新类型的规格。这个方法可以接受一个Regexp和一个spec类,或者一个spec类和一个接受描述的块,如果匹配则返回true。</target>
        </trans-unit>
        <trans-unit id="667fd0fc6004bb67f09a07175449f1a78fb47239" translate="yes" xml:space="preserve">
          <source>Registers Minitest to run at process exit</source>
          <target state="translated">注册 Minitest,以便在进程退出时运行。</target>
        </trans-unit>
        <trans-unit id="469cb3897cf7f997af3ccd7a90a0f597666cb566" translate="yes" xml:space="preserve">
          <source>Reimplements RSpec's &amp;ldquo;fail fast&amp;rdquo; feature</source>
          <target state="translated">重新实现RSpec的&amp;ldquo;快速故障&amp;rdquo;功能</target>
        </trans-unit>
        <trans-unit id="da898c18b5436abbe449092dced40268fa845c6e" translate="yes" xml:space="preserve">
          <source>Remember, &lt;code&gt;describe&lt;/code&gt; simply creates test classes. It's just ruby at the end of the day and all your normal Good Ruby Rules (tm) apply. If you want to extend your test using setup/teardown via a module, just make sure you ALWAYS call super. before/after automatically call super for you, so make sure you don't do it twice.</source>
          <target state="translated">记住， &lt;code&gt;describe&lt;/code&gt; 只是创建测试类。一天结束时它只是红宝石，所有正常的&amp;ldquo;良好Ruby规则&amp;rdquo;（tm）都适用。如果要通过模块使用设置/拆卸进行扩展测试，只需确保始终调用super。之前/之后会自动为您调用super，因此请确保不要重复两次。</target>
        </trans-unit>
        <trans-unit id="7c12cb89077804fbc2ca3d2843438bec419de35a" translate="yes" xml:space="preserve">
          <source>Reporter for the Mac OS X notification center.</source>
          <target state="translated">Mac OS X 通知中心的记者。</target>
        </trans-unit>
        <trans-unit id="aebc4590abecd9e9b903df11ad732c975c1b9cad" translate="yes" xml:space="preserve">
          <source>Represents anything &amp;ldquo;runnable&amp;rdquo;, like &lt;a href=&quot;test&quot;&gt;Test&lt;/a&gt;, &lt;a href=&quot;spec&quot;&gt;Spec&lt;/a&gt;, &lt;a href=&quot;benchmark&quot;&gt;Benchmark&lt;/a&gt;, or whatever you can dream up.</source>
          <target state="translated">表示任何&amp;ldquo;可运行&amp;rdquo;的东西，例如&lt;a href=&quot;test&quot;&gt;Test&lt;/a&gt;，&lt;a href=&quot;spec&quot;&gt;Spec&lt;/a&gt;，&lt;a href=&quot;benchmark&quot;&gt;Benchmark&lt;/a&gt;或您可以梦想的任何东西。</target>
        </trans-unit>
        <trans-unit id="f343303abb79c7e088d6ab8d53c2a22fccc04e5c" translate="yes" xml:space="preserve">
          <source>Represents run failures.</source>
          <target state="translated">代表运行失败。</target>
        </trans-unit>
        <trans-unit id="e51016750311556bc7d7bd60b6c8b450c3a6d9a2" translate="yes" xml:space="preserve">
          <source>Responsible for running all runnable methods in a given class, each in its own instance. Each instance is passed to the reporter to record.</source>
          <target state="translated">负责运行给定类中的所有可运行方法,每个方法都有自己的实例。每个实例都会传给报告人记录。</target>
        </trans-unit>
        <trans-unit id="71c64a83d7e3bf4c46b5b712d83235c83e3e6b41" translate="yes" xml:space="preserve">
          <source>Returns &amp;ldquo;.&amp;rdquo;, &amp;ldquo;F&amp;rdquo;, or &amp;ldquo;E&amp;rdquo; based on the result of the run.</source>
          <target state="translated">根据运行结果返回&amp;ldquo;。&amp;rdquo;，&amp;ldquo; F&amp;rdquo;或&amp;ldquo; E&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="633ae41c186faf395f29f24d759731c141db931b" translate="yes" xml:space="preserve">
          <source>Returns a diff between &lt;code&gt;exp&lt;/code&gt; and &lt;code&gt;act&lt;/code&gt;. If there is no known diff command or if it doesn't make sense to diff the output (single line, short output), then it simply returns a basic comparison between the two.</source>
          <target state="translated">返回 &lt;code&gt;exp&lt;/code&gt; 和 &lt;code&gt;act&lt;/code&gt; 之间的差异。如果没有已知的diff命令，或者对输出进行比较（单行，短输出）没有意义，则只需返回两者之间的基本比较。</target>
        </trans-unit>
        <trans-unit id="c372e5967cc525d4bc91429da33afc8c2e09b8de" translate="yes" xml:space="preserve">
          <source>Returns a proc that calls the specified fit method and asserts that the error is within a tolerable threshold.</source>
          <target state="translated">返回一个调用指定拟合方法的proc,并断言误差在可容忍的阈值内。</target>
        </trans-unit>
        <trans-unit id="2a61a04d2d3918fbe1a05b888172889197513358" translate="yes" xml:space="preserve">
          <source>Returns a proc that will output &lt;code&gt;msg&lt;/code&gt; along with the default message.</source>
          <target state="translated">返回将输出 &lt;code&gt;msg&lt;/code&gt; 以及默认消息的proc 。</target>
        </trans-unit>
        <trans-unit id="4d180f26d94c78deaa6298b6eec4c1e964bf31f7" translate="yes" xml:space="preserve">
          <source>Returns a set of ranges stepped exponentially from &lt;code&gt;min&lt;/code&gt; to &lt;code&gt;max&lt;/code&gt; by powers of &lt;code&gt;base&lt;/code&gt;. Eg:</source>
          <target state="translated">返回一组范围，范围是从 &lt;code&gt;min&lt;/code&gt; 到 &lt;code&gt;max&lt;/code&gt; 乘以 &lt;code&gt;base&lt;/code&gt; 的幂。例如：</target>
        </trans-unit>
        <trans-unit id="a72986aa1a9644bc883e4cc5178284ca0c7045b7" translate="yes" xml:space="preserve">
          <source>Returns a set of ranges stepped linearly from &lt;code&gt;min&lt;/code&gt; to &lt;code&gt;max&lt;/code&gt; by &lt;code&gt;step&lt;/code&gt;. Eg:</source>
          <target state="translated">返回一组范围的线性地从阶梯 &lt;code&gt;min&lt;/code&gt; 至 &lt;code&gt;max&lt;/code&gt; 通过 &lt;code&gt;step&lt;/code&gt; 。例如：</target>
        </trans-unit>
        <trans-unit id="d698dc821e21afc2b6c59d397a9df3730ea13291" translate="yes" xml:space="preserve">
          <source>Returns a single character string to print based on the result of the run. Eg &amp;ldquo;.&amp;rdquo;, &amp;ldquo;F&amp;rdquo;, or &amp;ldquo;E&amp;rdquo;.</source>
          <target state="translated">根据运行结果返回一个要打印的字符串。例如&amp;ldquo;。&amp;rdquo;，&amp;ldquo; F&amp;rdquo;或&amp;ldquo; E&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="c617c6e0a2d82cd981ab34ccad2db55afaa803ec" translate="yes" xml:space="preserve">
          <source>Returns a value monad that has all of Expectations methods available to it.</source>
          <target state="translated">返回一个拥有所有Expectations方法的值单体。</target>
        </trans-unit>
        <trans-unit id="8608aea993eaeb76e478c6e45fee7809fb6be3fe" translate="yes" xml:space="preserve">
          <source>Returns all instance methods matching the pattern &lt;code&gt;re&lt;/code&gt;.</source>
          <target state="translated">返回与模式 &lt;code&gt;re&lt;/code&gt; 匹配的所有实例方法。</target>
        </trans-unit>
        <trans-unit id="98177efa0d31e291f53e1e65e9fc33c219630353" translate="yes" xml:space="preserve">
          <source>Returns all instance methods starting with &amp;ldquo;test_&amp;rdquo;. Based on test_order, the methods are either sorted, randomized (default), or run in parallel.</source>
          <target state="translated">返回所有以&amp;ldquo; test_&amp;rdquo;开头的实例方法。基于test_order，这些方法可以排序，随机化（默认）或并行运行。</target>
        </trans-unit>
        <trans-unit id="2864c5c08489dcf9b875255a87620387382d5d08" translate="yes" xml:space="preserve">
          <source>Returns all subclasses of Runnable.</source>
          <target state="translated">返回Runnable的所有子类。</target>
        </trans-unit>
        <trans-unit id="93bfa26218201cb073e48af89d0d4a85a046ec98" translate="yes" xml:space="preserve">
          <source>Returns details for exception &lt;code&gt;e&lt;/code&gt;</source>
          <target state="translated">返回异常 &lt;code&gt;e&lt;/code&gt; 的详细信息</target>
        </trans-unit>
        <trans-unit id="da8630ced1219735d85728ad2476003a025013a9" translate="yes" xml:space="preserve">
          <source>Returns the diff command to use in &lt;a href=&quot;assertions#method-i-diff&quot;&gt;diff&lt;/a&gt;. Tries to intelligently figure out what diff to use.</source>
          <target state="translated">返回diff命令的使用&lt;a href=&quot;assertions#method-i-diff&quot;&gt;差异&lt;/a&gt;。尝试智能地找出要使用的差异。</target>
        </trans-unit>
        <trans-unit id="a96908391ff10e7c6b0f05dc21aace4e604396a0" translate="yes" xml:space="preserve">
          <source>Ruby / Minitest</source>
          <target state="translated">Ruby/Minitest</target>
        </trans-unit>
        <trans-unit id="40dd1c14ad52baa71c2483b53c36202b7ece90f5" translate="yes" xml:space="preserve">
          <source>Ruby 1.8.7+. No magic is involved. I hope.</source>
          <target state="translated">Ruby 1.8.7以上。不涉及魔法。我希望。</target>
        </trans-unit>
        <trans-unit id="2ca653061f55bc43cc87a9fdbf81264371b1aae0" translate="yes" xml:space="preserve">
          <source>Run Minitest suites as Chef report handlers</source>
          <target state="translated">作为Chef报告处理程序运行Minitest套件。</target>
        </trans-unit>
        <trans-unit id="661a6116b67c6e6c1532eb589c31c283b955d1c0" translate="yes" xml:space="preserve">
          <source>Run test at line number.</source>
          <target state="translated">在行号处运行测试。</target>
        </trans-unit>
        <trans-unit id="7bf17bd591200eed695ee5ee337d0dd11ffe071b" translate="yes" xml:space="preserve">
          <source>Run tests in parallel with a single database.</source>
          <target state="translated">用单个数据库并行运行测试。</target>
        </trans-unit>
        <trans-unit id="ed524c5b4a18cd69b19133fd750cae3815538b09" translate="yes" xml:space="preserve">
          <source>Running Your Tests</source>
          <target state="translated">运行测试</target>
        </trans-unit>
        <trans-unit id="52191bb84fc5b1096ae5e3d41442af938880fcd9" translate="yes" xml:space="preserve">
          <source>Runs (Get it? It's fast!) your tests and makes it easier to rerun individual failures.</source>
          <target state="translated">运行(明白了吗?它的速度很快!)你的测试,并使其更容易重新运行单个故障。</target>
        </trans-unit>
        <trans-unit id="4e2bab6e64837399c19ecec4535357e8b81e41df" translate="yes" xml:space="preserve">
          <source>Runs a single method and has the reporter record the result. This was considered internal API but is factored out of run so that subclasses can specialize the running of an individual test. See Minitest::ParallelTest::ClassMethods for an example.</source>
          <target state="translated">运行单个方法,并让报告人记录结果。这被认为是内部 API,但在运行中被保理出来,这样子类可以专门运行单个测试。请参阅 Minitest::ParallelTest::ClassMethods 来了解一个例子。</target>
        </trans-unit>
        <trans-unit id="00f9c788d9290a1704121d9c5ec7db18decfd7c8" translate="yes" xml:space="preserve">
          <source>Runs a single method. Needs to return self.</source>
          <target state="translated">运行一个方法。需要返回self。</target>
        </trans-unit>
        <trans-unit id="ac710c8f871438a14eff6ff55aafc40c1dfea4bc" translate="yes" xml:space="preserve">
          <source>Runs a single test with setup/teardown hooks.</source>
          <target state="translated">运行一个带有设置/减速钩的单一测试。</target>
        </trans-unit>
        <trans-unit id="77a4159577535448e41ee9f56702dfb65116740d" translate="yes" xml:space="preserve">
          <source>Runs after every test, after teardown. This hook is meant for libraries to extend minitest. It is not meant to be used by test developers.</source>
          <target state="translated">在每次测试结束后,拆机后运行。这个钩子是用来扩展minitest的库。它不适合测试开发人员使用。</target>
        </trans-unit>
        <trans-unit id="b0d744b712f81cafabb5e9a346b32525624cdbe7" translate="yes" xml:space="preserve">
          <source>Runs after every test, before teardown. This hook is meant for libraries to extend minitest. It is not meant to be used by test developers.</source>
          <target state="translated">在每次测试结束后,拆机前运行。这个钩子是用来扩展minitest的库。它不适合测试开发人员使用。</target>
        </trans-unit>
        <trans-unit id="f40a0ccd4f437bd3633b41ff1563ae9eaeac0590" translate="yes" xml:space="preserve">
          <source>Runs after every test. Use this to clean up after each test run.</source>
          <target state="translated">在每次测试后运行。在每次测试结束后使用此功能进行清理。</target>
        </trans-unit>
        <trans-unit id="3dd09067defdbf8e831223645893c29919f967f8" translate="yes" xml:space="preserve">
          <source>Runs before every test, after setup. This hook is meant for libraries to extend minitest. It is not meant to be used by test developers.</source>
          <target state="translated">在设置后,在每次测试前运行。这个钩子是用来扩展minitest的库。它不适合测试开发人员使用。</target>
        </trans-unit>
        <trans-unit id="5b9bc0ebe27d26d24a8e1f255ccdd0adc400d318" translate="yes" xml:space="preserve">
          <source>Runs before every test, before setup. This hook is meant for libraries to extend minitest. It is not meant to be used by test developers.</source>
          <target state="translated">在每次测试之前,在设置之前运行。这个钩子是用来扩展 minitest 的库。它不适合测试开发人员使用。</target>
        </trans-unit>
        <trans-unit id="3c12d07c5570f272d03910491f8c50c8bc1a508b" translate="yes" xml:space="preserve">
          <source>Runs before every test. Use this to set up before each test run.</source>
          <target state="translated">在每次测试前运行。在每次测试运行前使用此功能进行设置。</target>
        </trans-unit>
        <trans-unit id="4f4fda3fc476195c6484c7435281a7107330456b" translate="yes" xml:space="preserve">
          <source>Runs the given &lt;code&gt;work&lt;/code&gt; and asserts that the times gathered curve fit to match a power curve within a given error &lt;code&gt;threshold&lt;/code&gt;.</source>
          <target state="translated">运行给定的 &lt;code&gt;work&lt;/code&gt; 并断言所收集的时间曲线适合于在给定的误差 &lt;code&gt;threshold&lt;/code&gt; 内匹配幂曲线。</target>
        </trans-unit>
        <trans-unit id="595c1654552d9ef82db0ef2e03b289eaae454da9" translate="yes" xml:space="preserve">
          <source>Runs the given &lt;code&gt;work&lt;/code&gt; and asserts that the times gathered fit to match a constant rate (eg, linear slope == 0) within a given &lt;code&gt;threshold&lt;/code&gt;. Note: because we're testing for a slope of 0, R^2 is not a good determining factor for the fit, so the threshold is applied against the slope itself. As such, you probably want to tighten it from the default.</source>
          <target state="translated">运行给定的 &lt;code&gt;work&lt;/code&gt; 并断言所收集的时间适合于在给定 &lt;code&gt;threshold&lt;/code&gt; 内匹配恒定速率（例如，线性斜率== 0）。注意：由于我们正在测试坡度为0，因此R ^ 2并不是拟合的良好决定因素，因此将阈值应用于坡度本身。因此，您可能希望将其从默认值拧紧。</target>
        </trans-unit>
        <trans-unit id="027e4f9731372dadb47245aa4c4738f412f01f3c" translate="yes" xml:space="preserve">
          <source>Runs the given &lt;code&gt;work&lt;/code&gt; and asserts that the times gathered fit to match a exponential curve within a given error &lt;code&gt;threshold&lt;/code&gt;.</source>
          <target state="translated">运行给定的 &lt;code&gt;work&lt;/code&gt; 并断言所收集的时间适合于在给定的误差 &lt;code&gt;threshold&lt;/code&gt; 内匹配指数曲线。</target>
        </trans-unit>
        <trans-unit id="21746c7c182da2beeaf0d9bb8a9c7bc609cb8b6f" translate="yes" xml:space="preserve">
          <source>Runs the given &lt;code&gt;work&lt;/code&gt; and asserts that the times gathered fit to match a logarithmic curve within a given error &lt;code&gt;threshold&lt;/code&gt;.</source>
          <target state="translated">运行给定的 &lt;code&gt;work&lt;/code&gt; 并断言所收集的时间适合于在给定的误差 &lt;code&gt;threshold&lt;/code&gt; 内匹配对数曲线。</target>
        </trans-unit>
        <trans-unit id="74c76065167c81f1e490a298d1bc09f198d661be" translate="yes" xml:space="preserve">
          <source>Runs the given &lt;code&gt;work&lt;/code&gt; and asserts that the times gathered fit to match a straight line within a given error &lt;code&gt;threshold&lt;/code&gt;.</source>
          <target state="translated">运行给定的 &lt;code&gt;work&lt;/code&gt; 并断言所收集的时间适合于在给定的误差 &lt;code&gt;threshold&lt;/code&gt; 内匹配一条直线。</target>
        </trans-unit>
        <trans-unit id="b8aaf205cbaf1f397fc35442087ba20b77df0c6e" translate="yes" xml:space="preserve">
          <source>Runs the given &lt;code&gt;work&lt;/code&gt;, gathering the times of each run. Range and times are then passed to a given &lt;code&gt;validation&lt;/code&gt; proc. Outputs the benchmark name and times in tab-separated format, making it easy to paste into a spreadsheet for graphing or further analysis.</source>
          <target state="translated">运行给定的 &lt;code&gt;work&lt;/code&gt; ，收集每次运行的时间。然后将范围和时间传递给给定的 &lt;code&gt;validation&lt;/code&gt; 。以制表符分隔的格式输出基准名称和时间，使其易于粘贴到电子表格中以进行图形化或进一步分析。</target>
        </trans-unit>
        <trans-unit id="f5d0519a5161dd514fec000ef0e15041f7d0f089" translate="yes" xml:space="preserve">
          <source>SYNOPSIS:</source>
          <target state="translated">SYNOPSIS:</target>
        </trans-unit>
        <trans-unit id="36a9c5ee234e357491ab2e46af32188136d12992" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;assertions&quot;&gt;Minitest::Assertions&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;assertions&quot;&gt;Minitest :: Assertions&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0dcb7584a1252fa6ff38e61d382c7ae786fdb9ef" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;assertions#method-i-assert_empty&quot;&gt;Minitest::Assertions#assert_empty&lt;/a&gt;.</source>
          <target state="translated">参见&lt;a href=&quot;assertions#method-i-assert_empty&quot;&gt;Minitest :: Assertions＃assert_empty&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="eabc36c5e2eedd9c86a5949ea7feb9e814f7d8b2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;assertions#method-i-assert_equal&quot;&gt;Minitest::Assertions#assert_equal&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;assertions#method-i-assert_equal&quot;&gt;Minitest :: Assertions＃assert_equal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c783ed84d264598ac3b7a8aaca71275037999117" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;assertions#method-i-assert_in_delta&quot;&gt;Minitest::Assertions#assert_in_delta&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;assertions#method-i-assert_in_delta&quot;&gt;Minitest :: Assertions＃assert_in_delta&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e210cb419bc757792c8c863ea999fab3978c8501" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;assertions#method-i-assert_in_epsilon&quot;&gt;Minitest::Assertions#assert_in_epsilon&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;assertions#method-i-assert_in_epsilon&quot;&gt;Minitest :: Assertions＃assert_in_epsilon&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2484b56b840a566c08ac83eb186114d199c493f9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;assertions#method-i-assert_includes&quot;&gt;Minitest::Assertions#assert_includes&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;assertions#method-i-assert_includes&quot;&gt;Minitest :: Assertions＃assert_includes&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5d5f18df9169345fa2f190d9928ab366e0cff930" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;assertions#method-i-assert_instance_of&quot;&gt;Minitest::Assertions#assert_instance_of&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;assertions#method-i-assert_instance_of&quot;&gt;Minitest :: Assertions＃assert_instance_of&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="75e022778f770d718e8c2fb8b84d00370df65abd" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;assertions#method-i-assert_kind_of&quot;&gt;Minitest::Assertions#assert_kind_of&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;assertions#method-i-assert_kind_of&quot;&gt;Minitest :: Assertions＃assert_kind_of&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0cb9c6f0fe56f31ee2f4e0974224e0aec3bdacbe" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;assertions#method-i-assert_match&quot;&gt;Minitest::Assertions#assert_match&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;assertions#method-i-assert_match&quot;&gt;Minitest :: Assertions＃assert_match&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="84f7317ee3283da119b9ae7049630b55ddc21cb8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;assertions#method-i-assert_nil&quot;&gt;Minitest::Assertions#assert_nil&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;assertions#method-i-assert_nil&quot;&gt;Minitest :: Assertions＃assert_nil&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="660136032b58656aeb55e5ebced0b4667ab33c10" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;assertions#method-i-assert_operator&quot;&gt;Minitest::Assertions#assert_operator&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;assertions#method-i-assert_operator&quot;&gt;Minitest :: Assertions＃assert_operator&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="33ac0278fc3c9fdaebce6e5cedeade411628be95" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;assertions#method-i-assert_output&quot;&gt;Minitest::Assertions#assert_output&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;assertions#method-i-assert_output&quot;&gt;Minitest :: Assertions＃assert_output&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2932fdeda8fa70654e7393b219bc1e8b4ff24e7d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;assertions#method-i-assert_raises&quot;&gt;Minitest::Assertions#assert_raises&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;assertions#method-i-assert_raises&quot;&gt;Minitest :: Assertions＃assert_raises&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="124456c65741c9c871ad09d4532eacb0e13a89cf" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;assertions#method-i-assert_respond_to&quot;&gt;Minitest::Assertions#assert_respond_to&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;assertions#method-i-assert_respond_to&quot;&gt;Minitest :: Assertions＃assert_respond_to&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e8a7ddf9839e758707e7fb154a62be433a9f6d28" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;assertions#method-i-assert_same&quot;&gt;Minitest::Assertions#assert_same&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;assertions#method-i-assert_same&quot;&gt;Minitest :: Assertions＃assert_same&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="165851ced9f6a3d733c6751608c188c02f44555e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;assertions#method-i-assert_silent&quot;&gt;Minitest::Assertions#assert_silent&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;assertions#method-i-assert_silent&quot;&gt;Minitest :: Assertions＃assert_silent&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9e282fe89736f241c1059582fd319812de109b5d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;assertions#method-i-assert_throws&quot;&gt;Minitest::Assertions#assert_throws&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;assertions#method-i-assert_throws&quot;&gt;Minitest :: Assertions＃assert_throws&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3476d3f67dae9de616d84aacc95c69c7a26a2e02" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;assertions#method-i-refute_empty&quot;&gt;Minitest::Assertions#refute_empty&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;assertions#method-i-refute_empty&quot;&gt;Minitest :: Assertions＃refute_empty&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3312880b5e3daf29f9827adbf8688e23187151cf" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;assertions#method-i-refute_equal&quot;&gt;Minitest::Assertions#refute_equal&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;assertions#method-i-refute_equal&quot;&gt;Minitest :: Assertions＃refute_equal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="488d842d1c0308bfbc36bd08ac994b64165c9f56" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;assertions#method-i-refute_in_delta&quot;&gt;Minitest::Assertions#refute_in_delta&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;assertions#method-i-refute_in_delta&quot;&gt;Minitest :: Assertions＃refute_in_delta&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b79109b36f04877f5061fc7ddbe1382a9c474091" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;assertions#method-i-refute_in_epsilon&quot;&gt;Minitest::Assertions#refute_in_epsilon&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;assertions#method-i-refute_in_epsilon&quot;&gt;Minitest :: Assertions＃refute_in_epsilon&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="942208f545241a67615bdf366895d40c26ee722f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;assertions#method-i-refute_includes&quot;&gt;Minitest::Assertions#refute_includes&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;assertions#method-i-refute_includes&quot;&gt;Minitest :: Assertions＃refute_includes&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2cc00f86fe2ce6ae2276123da7034d7a081f2e26" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;assertions#method-i-refute_instance_of&quot;&gt;Minitest::Assertions#refute_instance_of&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;assertions#method-i-refute_instance_of&quot;&gt;Minitest :: Assertions＃refute_instance_of&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="01d25d0218fec0a24c1b9d7d95222fc1efaa25e0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;assertions#method-i-refute_kind_of&quot;&gt;Minitest::Assertions#refute_kind_of&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;assertions#method-i-refute_kind_of&quot;&gt;Minitest :: Assertions＃refute_kind_of&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="507cf2aaee5f5d73ae4c39ed5e5fd87133950675" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;assertions#method-i-refute_match&quot;&gt;Minitest::Assertions#refute_match&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;assertions#method-i-refute_match&quot;&gt;Minitest :: Assertions＃refute_match&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="42c6f8287f86b8422ab39765fccf9e59049b8256" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;assertions#method-i-refute_nil&quot;&gt;Minitest::Assertions#refute_nil&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;assertions#method-i-refute_nil&quot;&gt;Minitest :: Assertions＃refute_nil&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9741a62d86ae2432a9e330097caa2228b63ba94f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;assertions#method-i-refute_operator&quot;&gt;Minitest::Assertions#refute_operator&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;assertions#method-i-refute_operator&quot;&gt;Minitest :: Assertions＃refute_operator&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3e7f7da117701e8c60c9f65d9b43416166557d21" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;assertions#method-i-refute_respond_to&quot;&gt;Minitest::Assertions#refute_respond_to&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;assertions#method-i-refute_respond_to&quot;&gt;Minitest :: Assertions＃refute_respond_to&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="22e4d691a59d99d1b9591c5bfcf75361f10610e7" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;assertions#method-i-refute_same&quot;&gt;Minitest::Assertions#refute_same&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;assertions#method-i-refute_same&quot;&gt;Minitest :: Assertions＃refute_same&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="118a39c942f51bda1a6e5e936f72558fee72c46f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;benchspec#method-c-bench_performance_linear&quot;&gt;::bench_performance_linear&lt;/a&gt; for an example of how to use this.</source>
          <target state="translated">有关如何使用它的示例，请参见&lt;a href=&quot;benchspec#method-c-bench_performance_linear&quot;&gt;:: bench_performance_linear&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3757465b7eadf0e626f1f4404ce3938c210bbfd8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://www.graphpad.com/curvefit/goodness_of_fit.htm&quot;&gt;www.graphpad.com/curvefit/goodness_of_fit.htm&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;http://www.graphpad.com/curvefit/goodness_of_fit.htm&quot;&gt;www.graphpad.com/curvefit/goodness_of_fit.htm&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="012f4bb48442112ebf4d35a936c0b4d8cd075c92" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;lifecyclehooks#method-i-before_setup&quot;&gt;before_setup&lt;/a&gt; for an example.</source>
          <target state="translated">有关示例，请参见&lt;a href=&quot;lifecyclehooks#method-i-before_setup&quot;&gt;before_setup&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bc0fe4783b99ed6ce9a6faf071dffd8287c445cc" translate="yes" xml:space="preserve">
          <source>See Minitest.backtrace_filter=.</source>
          <target state="translated">参见Minitest.backtrace_filter=.</target>
        </trans-unit>
        <trans-unit id="809f09063373be19fa6fe56cf06ab5b6204c0412" translate="yes" xml:space="preserve">
          <source>See Minitest::Benchmark#bench_range for more details.</source>
          <target state="translated">有关详细信息,请参见 Minitest::Benchmark#bench_range。</target>
        </trans-unit>
        <trans-unit id="40c20784516913591bd7839ac4cc2b83d31e759b" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;assertions#method-c-diff&quot;&gt;::diff&lt;/a&gt;</source>
          <target state="translated">另见&lt;a href=&quot;assertions#method-c-diff&quot;&gt;：:: diff&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="72621ea956115de232762212362a94457c83f1b4" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;assertions#method-i-assert_output&quot;&gt;assert_output&lt;/a&gt;</source>
          <target state="translated">另请参见：&lt;a href=&quot;assertions#method-i-assert_output&quot;&gt;assert_output&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a3912a1d7334edb3c3fa1e716d686758f621d6e7" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;assertions#method-i-assert_silent&quot;&gt;assert_silent&lt;/a&gt;</source>
          <target state="translated">另请参阅：&lt;a href=&quot;assertions#method-i-assert_silent&quot;&gt;assert_silent&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e3a08d6ed25d2241062651fe9d472d7c766e1b8c" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;benchmark#method-c-bench_exp&quot;&gt;::bench_exp&lt;/a&gt; and &lt;a href=&quot;benchmark#method-c-bench_linear&quot;&gt;::bench_linear&lt;/a&gt;.</source>
          <target state="translated">另请参阅&lt;a href=&quot;benchmark#method-c-bench_exp&quot;&gt;：:: bench_exp&lt;/a&gt;和&lt;a href=&quot;benchmark#method-c-bench_linear&quot;&gt;:: bench_linear&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="db28dbdef3c6f2ed24077678aee10c708c94f05c" translate="yes" xml:space="preserve">
          <source>See design_rationale.rb to see how specs and tests work in minitest.</source>
          <target state="translated">请参阅 design_rationale.rb 来了解 minitest 中的规格和测试是如何工作的。</target>
        </trans-unit>
        <trans-unit id="9ff41e873104bb946dc04e656f51308014331b8c" translate="yes" xml:space="preserve">
          <source>See: &lt;a href=&quot;dsl#method-i-register_spec_type&quot;&gt;#register_spec_type&lt;/a&gt; and &lt;a href=&quot;dsl#method-i-spec_type&quot;&gt;#spec_type&lt;/a&gt;</source>
          <target state="translated">请参阅：&lt;a href=&quot;dsl#method-i-register_spec_type&quot;&gt;#register_spec_type&lt;/a&gt;和&lt;a href=&quot;dsl#method-i-spec_type&quot;&gt;#spec_type&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="804494a11ceb2d68c2eacb684cdf7b490f1f0c9c" translate="yes" xml:space="preserve">
          <source>See: &lt;a href=&quot;http://en.wikipedia.org/wiki/Coefficient_of_determination&quot;&gt;en.wikipedia.org/wiki/Coefficient_of_determination&lt;/a&gt;</source>
          <target state="translated">参见：&lt;a href=&quot;http://en.wikipedia.org/wiki/Coefficient_of_determination&quot;&gt;en.wikipedia.org/wiki/Coefficient_of_determination&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="79b4835f8b6568c1a47e45e6d24f0669296be788" translate="yes" xml:space="preserve">
          <source>See: &lt;a href=&quot;http://mathworld.wolfram.com/LeastSquaresFitting.html&quot;&gt;mathworld.wolfram.com/LeastSquaresFitting.html&lt;/a&gt;</source>
          <target state="translated">请参阅：&lt;a href=&quot;http://mathworld.wolfram.com/LeastSquaresFitting.html&quot;&gt;mathworld.wolfram.com/LeastSquaresFitting.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="82328ce00459786e6402e4758328b6c7bef16e69" translate="yes" xml:space="preserve">
          <source>See: &lt;a href=&quot;http://mathworld.wolfram.com/LeastSquaresFittingExponential.html&quot;&gt;mathworld.wolfram.com/LeastSquaresFittingExponential.html&lt;/a&gt;</source>
          <target state="translated">请参阅：&lt;a href=&quot;http://mathworld.wolfram.com/LeastSquaresFittingExponential.html&quot;&gt;mathworld.wolfram.com/LeastSquaresFittingExponential.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4c142f1ae9ac4354716fbf853399ba46771faee0" translate="yes" xml:space="preserve">
          <source>See: &lt;a href=&quot;http://mathworld.wolfram.com/LeastSquaresFittingLogarithmic.html&quot;&gt;mathworld.wolfram.com/LeastSquaresFittingLogarithmic.html&lt;/a&gt;</source>
          <target state="translated">请参阅：&lt;a href=&quot;http://mathworld.wolfram.com/LeastSquaresFittingLogarithmic.html&quot;&gt;mathworld.wolfram.com/LeastSquaresFittingLogarithmic.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a740b7b04afdb41a70589c36cdfaead9ffd58184" translate="yes" xml:space="preserve">
          <source>See: &lt;a href=&quot;http://mathworld.wolfram.com/LeastSquaresFittingPowerLaw.html&quot;&gt;mathworld.wolfram.com/LeastSquaresFittingPowerLaw.html&lt;/a&gt;</source>
          <target state="translated">请参阅：&lt;a href=&quot;http://mathworld.wolfram.com/LeastSquaresFittingPowerLaw.html&quot;&gt;mathworld.wolfram.com/LeastSquaresFittingPowerLaw.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6b1aac7a9445a66816b2daa27ca6f58b8ed3ab4b" translate="yes" xml:space="preserve">
          <source>See: &lt;a href=&quot;https://en.wikipedia.org/wiki/Coefficient_of_determination&quot;&gt;en.wikipedia.org/wiki/Coefficient_of_determination&lt;/a&gt;</source>
          <target state="translated">参见：&lt;a href=&quot;https://en.wikipedia.org/wiki/Coefficient_of_determination&quot;&gt;en.wikipedia.org/wiki/Coefficient_of_determination&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0483880f939aaa910396da9f1f0d4911d4f050bd" translate="yes" xml:space="preserve">
          <source>Semantically symmetric aliases for assertions and expectations.</source>
          <target state="translated">断言和期望的语义对称别名。</target>
        </trans-unit>
        <trans-unit id="bbf5c60c0794650f3fdee6e930039e77f32134e3" translate="yes" xml:space="preserve">
          <source>Set the diff command to use in &lt;a href=&quot;assertions#method-i-diff&quot;&gt;diff&lt;/a&gt;.</source>
          <target state="translated">设置diff命令以在&lt;a href=&quot;assertions#method-i-diff&quot;&gt;diff中&lt;/a&gt;使用。</target>
        </trans-unit>
        <trans-unit id="7f737cdddc091e3b3070728e3df487e50bb79d0b" translate="yes" xml:space="preserve">
          <source>Set the name of the run.</source>
          <target state="translated">设置运行的名称。</target>
        </trans-unit>
        <trans-unit id="2758373390827fe0a21e55a7f15fa5ef0e5ebe77" translate="yes" xml:space="preserve">
          <source>Shared code for anything that can get passed to a Reporter. See &lt;a href=&quot;test&quot;&gt;Minitest::Test&lt;/a&gt; &amp;amp; &lt;a href=&quot;result&quot;&gt;Minitest::Result&lt;/a&gt;.</source>
          <target state="translated">可以传递给Reporter的任何内容的共享代码。参见&lt;a href=&quot;test&quot;&gt;Minitest :: Test&lt;/a&gt;和&lt;a href=&quot;result&quot;&gt;Minitest :: Result&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0702ba1bbd9b9e38a0f3d6579127344db9a187d8" translate="yes" xml:space="preserve">
          <source>Shoulda style syntax for minitest test::unit.</source>
          <target state="translated">minitest test::unit的shoulda风格语法。</target>
        </trans-unit>
        <trans-unit id="c7fe3e02606ecf4ce7201ae358c0de7a78f072a3" translate="yes" xml:space="preserve">
          <source>Show your testing pride!</source>
          <target state="translated">展示您的测试自豪感</target>
        </trans-unit>
        <trans-unit id="cb64af9e78973e517b1ac5c4e3c1801de4b517f5" translate="yes" xml:space="preserve">
          <source>Shuts down the pool of workers by signalling them to quit and waiting for them all to finish what they're currently working on.</source>
          <target state="translated">通过示意工人退出来关闭工人池,并等待他们全部完成当前正在进行的工作。</target>
        </trans-unit>
        <trans-unit id="b559d0822ceb2a2883a6e961e94c5ef8f3487328" translate="yes" xml:space="preserve">
          <source>Skips the current run. If run in verbose-mode, the skipped run gets listed at the end of the run but doesn't cause a failure exit code.</source>
          <target state="translated">跳过当前运行的程序,如果在verbos模式下运行,则跳过的程序会在运行结束时被列出,但不会产生失败退出代码。如果在verbos模式下运行,跳过的运行会在运行结束时列出,但不会导致失败退出代码。</target>
        </trans-unit>
        <trans-unit id="dbeefb043e97f1652a732b4aa358304de0aa2b27" translate="yes" xml:space="preserve">
          <source>Specifies the ranges used for benchmarking for that class.</source>
          <target state="translated">指定用于该类基准测试的范围。</target>
        </trans-unit>
        <trans-unit id="a0c23a91d28e1ca1a9a7cd6027bc4f46e1bc15c8" translate="yes" xml:space="preserve">
          <source>Specifies the ranges used for benchmarking for that class. Defaults to exponential growth from 1 to 10k by powers of 10. Override if you need different ranges for your benchmarks.</source>
          <target state="translated">指定用于该类基准测试的范围。默认值为1到10k的10次方指数增长。如果您需要不同的基准范围,请覆盖。</target>
        </trans-unit>
        <trans-unit id="7b4379a60050b3f8c0955159ba45aa1d56de9268" translate="yes" xml:space="preserve">
          <source>Specs</source>
          <target state="translated">Specs</target>
        </trans-unit>
        <trans-unit id="4858a7873b34727bbbd398649ccf20f1741d721b" translate="yes" xml:space="preserve">
          <source>Start an escape sequence</source>
          <target state="translated">开始一个转义序列</target>
        </trans-unit>
        <trans-unit id="9125eb7b7a60c901b1a4fb0ad9e9a21029655768" translate="yes" xml:space="preserve">
          <source>Start the executor</source>
          <target state="translated">启动执行器</target>
        </trans-unit>
        <trans-unit id="968337151b1cbc84bcf066b55d1d464d97a2adcb" translate="yes" xml:space="preserve">
          <source>Starts reporting on the run.</source>
          <target state="translated">开始汇报运行情况。</target>
        </trans-unit>
        <trans-unit id="f20b175956e20ed2ed74b1651488678e6cefa1ba" translate="yes" xml:space="preserve">
          <source>Store information about speed of test execution provided by minitest-instrument in database.</source>
          <target state="translated">将minitest-strument提供的测试执行速度的信息保存在数据库中。</target>
        </trans-unit>
        <trans-unit id="a3e742b45e56d6e855bffcef22ad1706f96953b1" translate="yes" xml:space="preserve">
          <source>Stub any instance of a method on the given class for the duration of a block.</source>
          <target state="translated">在一个块的持续时间内,在给定的类上暂存一个方法的任何实例。</target>
        </trans-unit>
        <trans-unit id="ba950d3c63b2848bd99d65be91e958e58ca23bd0" translate="yes" xml:space="preserve">
          <source>Stub constants for the duration of a block.</source>
          <target state="translated">块持续时间的存根常数。</target>
        </trans-unit>
        <trans-unit id="3107408a50c756bdc03dcf7d5aed6d74eb0c9e3e" translate="yes" xml:space="preserve">
          <source>Stubs</source>
          <target state="translated">Stubs</target>
        </trans-unit>
        <trans-unit id="7874f24a703853dc1d2501038ebebe1ae0c474bd" translate="yes" xml:space="preserve">
          <source>Subclass &lt;a href=&quot;benchmark&quot;&gt;Benchmark&lt;/a&gt; to create your own benchmark runs. Methods starting with &amp;ldquo;bench_&amp;rdquo; get executed on a per-class.</source>
          <target state="translated">子类别&lt;a href=&quot;benchmark&quot;&gt;基准&lt;/a&gt;创建您自己的基准运行。以&amp;ldquo; bench_&amp;rdquo;开头的方法在每个类上执行。</target>
        </trans-unit>
        <trans-unit id="0bff2082516685afc690313a77d25650c438a6da" translate="yes" xml:space="preserve">
          <source>Subclass &lt;a href=&quot;test&quot;&gt;Test&lt;/a&gt; to create your own tests. Typically you'll want a &lt;a href=&quot;test&quot;&gt;Test&lt;/a&gt; subclass per implementation class.</source>
          <target state="translated">子类&lt;a href=&quot;test&quot;&gt;Test&lt;/a&gt;创建您自己的测试。通常，您需要每个实现类的&lt;a href=&quot;test&quot;&gt;Test&lt;/a&gt;子类。</target>
        </trans-unit>
        <trans-unit id="1541b9a0ed1150390c687b4d83ccbc5be85fae71" translate="yes" xml:space="preserve">
          <source>Subclasses of this are automatically registered and available in &lt;a href=&quot;runnable#method-c-runnables&quot;&gt;::runnables&lt;/a&gt;.</source>
          <target state="translated">它的子类会自动注册，并在&lt;a href=&quot;runnable#method-c-runnables&quot;&gt;:: runnables中&lt;/a&gt;可用。</target>
        </trans-unit>
        <trans-unit id="e53d041964f2426b7de74ebf5f95f5ac18507142" translate="yes" xml:space="preserve">
          <source>Support for shared specs and shared spec subclasses</source>
          <target state="translated">支持共享规格和共享规格子类。</target>
        </trans-unit>
        <trans-unit id="d4744ea0bf31c0f83b36cdc0383e0fe76c47028a" translate="yes" xml:space="preserve">
          <source>Support unit tests with expectation results in files. Differing results will be stored again in files.</source>
          <target state="translated">支持单元测试,期望结果在文件中。不同的结果将再次存储在文件中。</target>
        </trans-unit>
        <trans-unit id="aee384427acd85a7a8db786205221ddb0a6fdb46" translate="yes" xml:space="preserve">
          <source>THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</source>
          <target state="translated">本软件是 &quot;按原样 &quot;提供的,没有任何形式的明示或暗示的保证,包括但不限于适销性、特定用途的适用性和不侵权的保证。在任何情况下,作者或版权持有者均不对因本软件或本软件的使用或其他交易而引起的、因本软件的使用或与本软件有关的合同、侵权或其他行为的任何索赔、损害或其他责任负责。</target>
        </trans-unit>
        <trans-unit id="40ea9041285003e004a8f6fe2dd14ebb07961af2" translate="yes" xml:space="preserve">
          <source>TYPES</source>
          <target state="translated">TYPES</target>
        </trans-unit>
        <trans-unit id="818f1dbc060f3e4f464a500c3e045ec301a24783" translate="yes" xml:space="preserve">
          <source>Takes an array of x/y pairs and calculates the general R^2 value.</source>
          <target state="translated">取一个x/y对的数组并计算一般的R^2值。</target>
        </trans-unit>
        <trans-unit id="0295f17184d4f243a2e10ad99937bed5f458c519" translate="yes" xml:space="preserve">
          <source>Takes x and y values and returns [a, b, r^2].</source>
          <target state="translated">取x和y的值并返回[a,b,r^2]。</target>
        </trans-unit>
        <trans-unit id="640ab2bae07bedc4c163f679a746f7ab7fb5d1fa" translate="yes" xml:space="preserve">
          <source>Test</source>
          <target state="translated">Test</target>
        </trans-unit>
        <trans-unit id="030e67a8842ed0058f5f2c94a57d3dba965d0089" translate="yes" xml:space="preserve">
          <source>The IO we're going to pipe through.</source>
          <target state="translated">我们要管的IO。</target>
        </trans-unit>
        <trans-unit id="abf94dbab29db68325894cd60a65f3c2a1fc56fa" translate="yes" xml:space="preserve">
          <source>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</source>
          <target state="translated">上述版权声明和本许可声明应包含在软件的所有副本或主要部分中。</target>
        </trans-unit>
        <trans-unit id="e487923a402995855ae78ecda689beaca7c7a78b" translate="yes" xml:space="preserve">
          <source>The class name of the test result.</source>
          <target state="translated">测试结果的类名。</target>
        </trans-unit>
        <trans-unit id="df3f6f5bee14ba1474bf276f1e01bcb5b47748d5" translate="yes" xml:space="preserve">
          <source>The engine used to run multiple tests in parallel.</source>
          <target state="translated">用于并行运行多个测试的引擎。</target>
        </trans-unit>
        <trans-unit id="0f4d92ce154d2b86f6ce50ff86896e30fd85c049" translate="yes" xml:space="preserve">
          <source>The following implementation and test:</source>
          <target state="translated">以下实施和测试。</target>
        </trans-unit>
        <trans-unit id="732d705b09792510722940aad0c8de4695b63c6f" translate="yes" xml:space="preserve">
          <source>The list of reporters to dispatch to.</source>
          <target state="translated">派往的记者名单。</target>
        </trans-unit>
        <trans-unit id="a211994bc0fe2a43316864d22901ed57bcb77d88" translate="yes" xml:space="preserve">
          <source>The location identifier of this test. Depends on a method existing called class_name.</source>
          <target state="translated">这个测试的位置标识符。取决于一个叫做class_name的方法。</target>
        </trans-unit>
        <trans-unit id="29b38364bc72ab86c7478396d9c560b86ef7f019" translate="yes" xml:space="preserve">
          <source>The location of the test method.</source>
          <target state="translated">检验方法的位置。</target>
        </trans-unit>
        <trans-unit id="582fcfcef5f43a64d9cbd801f0a3618704049474" translate="yes" xml:space="preserve">
          <source>The overall structure of a run looks like this:</source>
          <target state="translated">跑步的整体结构是这样的。</target>
        </trans-unit>
        <trans-unit id="9bcd27a6f07507bdfa3364e93f0918f52f199602" translate="yes" xml:space="preserve">
          <source>The size of the pool of workers.</source>
          <target state="translated">工人队伍的规模。</target>
        </trans-unit>
        <trans-unit id="1266fcf3accfe31190dc10342a54292c72e34497" translate="yes" xml:space="preserve">
          <source>The spec version of &lt;a href=&quot;benchmark&quot;&gt;Minitest::Benchmark&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;benchmark&quot;&gt;Minitest :: Benchmark&lt;/a&gt;的规范版本。</target>
        </trans-unit>
        <trans-unit id="d26ee83106ffb441c1938acfda63017e9eadaef1" translate="yes" xml:space="preserve">
          <source>The standard backtrace filter for minitest.</source>
          <target state="translated">minitest的标准反跟踪过滤器。</target>
        </trans-unit>
        <trans-unit id="69c3afce1766d0698bf752fa1ceced1fa005c561" translate="yes" xml:space="preserve">
          <source>The time it took to run.</source>
          <target state="translated">运行的时间。</target>
        </trans-unit>
        <trans-unit id="d68c9c5a21aef82e0656a2e2ec182bed3004b45e" translate="yes" xml:space="preserve">
          <source>There are multiple lines of output, the first should be something like:</source>
          <target state="translated">有多行输出,第一行应该是这样的。</target>
        </trans-unit>
        <trans-unit id="2cabcafe49befd41003161f60e00d223a23c9d9a" translate="yes" xml:space="preserve">
          <source>There are runtime options available, both from minitest itself, and also provided via plugins. To see them, simply run with &lt;code&gt;--help&lt;/code&gt;:</source>
          <target state="translated">既有minitest本身提供的运行时选项，也有插件提供的。要查看它们，只需使用 &lt;code&gt;--help&lt;/code&gt; 即可运行：</target>
        </trans-unit>
        <trans-unit id="bbf0722a178ce8c4b92d7e1d04f9597970a79dcc" translate="yes" xml:space="preserve">
          <source>This can also do predicates:</source>
          <target state="translated">这也可以做谓词。</target>
        </trans-unit>
        <trans-unit id="0bc39950f8ba9234c801b9dbb019269b727bc529" translate="yes" xml:space="preserve">
          <source>This can be useful for expensive initializations or sharing state. Remember, this is just ruby code, so you need to make sure this technique and sharing state doesn't interfere with your tests.</source>
          <target state="translated">这对于昂贵的初始化或共享状态是很有用的。记住,这只是ruby代码,所以你需要确保这种技术和共享状态不会干扰你的测试。</target>
        </trans-unit>
        <trans-unit id="2234167c189dc5b66093e418e933fe5dda4c1063" translate="yes" xml:space="preserve">
          <source>This is a common problem in Windows, where the default external Encoding is often CP850, but can affect any platform. Minitest can run test suites using any Encoding, but to run Minitest's own tests you must have a default external Encoding of UTF-8.</source>
          <target state="translated">这是 Windows 中的一个常见问题,其中默认的外部编码通常是 CP850,但会影响任何平台。Minitest 可以使用任何编码运行测试套件,但要运行 Minitest 自己的测试,您必须有一个默认的 UTF-8 外部编码。</target>
        </trans-unit>
        <trans-unit id="4eee37b4278321fe3f773f3da2afe799f79a6a5a" translate="yes" xml:space="preserve">
          <source>This is added to the top-level &lt;a href=&quot;compositereporter&quot;&gt;CompositeReporter&lt;/a&gt; at the start of the run. If you want to change the output of minitest via a plugin, pull this out of the composite and replace it with your own.</source>
          <target state="translated">在运行开始时，它将添加到顶级&lt;a href=&quot;compositereporter&quot;&gt;CompositeReporter&lt;/a&gt;。如果要通过插件更改minitest的输出，请将其从组合中拉出，并用自己的替换。</target>
        </trans-unit>
        <trans-unit id="606b43f187b0da2bda0c8391314fe9d12051f018" translate="yes" xml:space="preserve">
          <source>This is also a problem primarily affecting Windows developers. PowerShell has a command called diff, but it is not suitable for use with Minitest.</source>
          <target state="translated">这也是一个主要影响Windows开发者的问题。PowerShell有一个名为diff的命令,但它不适合与Minitest一起使用。</target>
        </trans-unit>
        <trans-unit id="1fd230a8f4a33f7078b135693fd434e10620960b" translate="yes" xml:space="preserve">
          <source>This is also aliased to &lt;a href=&quot;dsl#method-i-specify&quot;&gt;specify&lt;/a&gt; and doesn't require a &lt;code&gt;desc&lt;/code&gt; arg.</source>
          <target state="translated">这也是别名，用于&lt;a href=&quot;dsl#method-i-specify&quot;&gt;指定&lt;/a&gt;并且不需要 &lt;code&gt;desc&lt;/code&gt; arg。</target>
        </trans-unit>
        <trans-unit id="4eb5d9f86e768ea6d3cd99dbcfe75a3a4889fab2" translate="yes" xml:space="preserve">
          <source>This is really meant for specs and is front-ended by &lt;a href=&quot;assertions#method-i-assert_operator&quot;&gt;#assert_operator&lt;/a&gt;:</source>
          <target state="translated">这确实是针对规范的，并且由&lt;a href=&quot;assertions#method-i-assert_operator&quot;&gt;#assert_operator进行了&lt;/a&gt;前端处理：</target>
        </trans-unit>
        <trans-unit id="f6ea832096f8205890df76440c7eedd1c0a9fb8b" translate="yes" xml:space="preserve">
          <source>This is really meant for specs and is front-ended by &lt;a href=&quot;assertions#method-i-refute_operator&quot;&gt;#refute_operator&lt;/a&gt;:</source>
          <target state="translated">这确实是针对规范的，并且是&lt;a href=&quot;assertions#method-i-refute_operator&quot;&gt;#refute_operator的前端&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="9293947f1938582e6be027574fe4e00abe9d5285" translate="yes" xml:space="preserve">
          <source>This is the top-level run method. Everything starts from here. It tells each Runnable sub-class to run, and each of those are responsible for doing whatever they do.</source>
          <target state="translated">这是最高级的运行方法。一切都从这里开始。它告诉每个Runnable子类运行,每个子类负责做任何事情。</target>
        </trans-unit>
        <trans-unit id="18afd7f34d74be0caaff71713d4425091fc94ea3" translate="yes" xml:space="preserve">
          <source>This is used to define a new benchmark method. You usually don't use this directly and is intended for those needing to write new performance curve fits (eg: you need a specific polynomial fit).</source>
          <target state="translated">这是用来定义一个新的基准方法。你通常不会直接使用它,它是为那些需要编写新的性能曲线拟合的人准备的(例如:你需要一个特定的多项式拟合)。</target>
        </trans-unit>
        <trans-unit id="e1ded212a5ca432020e974a6c5b0e2343f4df27d" translate="yes" xml:space="preserve">
          <source>This method of expectation-based testing is preferable to straight-expectation methods (on &lt;a href=&quot;../../../object&quot;&gt;Object&lt;/a&gt;) because it stores its test context, bypassing our hacky use of thread-local variables.</source>
          <target state="translated">这种基于期望的测试方法优于直接期望方法（在&lt;a href=&quot;../../../object&quot;&gt;Object上&lt;/a&gt;），因为它存储了测试上下文，从而绕过了我们对线程局部变量的恶意使用。</target>
        </trans-unit>
        <trans-unit id="d8c0274928143026d53b239cadf556728a6d9750" translate="yes" xml:space="preserve">
          <source>This represents a test result in a clean way that can be marshalled over a wire. Tests can do anything they want to the test instance and can create conditions that cause Marshal.dump to blow up. By using &lt;a href=&quot;result#method-c-from&quot;&gt;::from&lt;/a&gt; you can be reasonably sure that the test result can be marshalled.</source>
          <target state="translated">这代表可以以整齐的方式整理在电线上的测试结果。测试可以对测试实例做任何他们想做的事情，并且可以创建导致Marshal.dump崩溃的条件。通过使用&lt;a href=&quot;result#method-c-from&quot;&gt;:: from&lt;/a&gt;，可以合理地确定测试结果是否可以编组。</target>
        </trans-unit>
        <trans-unit id="cde160286c5550232877fcedef07507ac7e4da9c" translate="yes" xml:space="preserve">
          <source>This returns a diff-able human-readable version of &lt;code&gt;obj&lt;/code&gt;. This differs from the regular &lt;a href=&quot;assertions#method-i-mu_pp&quot;&gt;#mu_pp&lt;/a&gt; because it expands escaped newlines and makes hex-values generic (like object_ids). This uses &lt;a href=&quot;assertions#method-i-mu_pp&quot;&gt;#mu_pp&lt;/a&gt; to do the first pass and then cleans it up.</source>
          <target state="translated">这将返回 &lt;code&gt;obj&lt;/code&gt; 的可扩散的人类可读版本。这与常规的&lt;a href=&quot;assertions#method-i-mu_pp&quot;&gt;#mu_pp&lt;/a&gt;不同，因为它扩展了转义的换行符并使十六进制值通用（例如object_ids）。这使用&lt;a href=&quot;assertions#method-i-mu_pp&quot;&gt;#mu_pp&lt;/a&gt;进行第一遍，然后清除它。</target>
        </trans-unit>
        <trans-unit id="47af2e02fa4a4dd62e8750fa2af0ff97f7f0e27c" translate="yes" xml:space="preserve">
          <source>This returns a human-readable version of &lt;code&gt;obj&lt;/code&gt;. By default inspect is called. You can override this to use pretty_print if you want.</source>
          <target state="translated">这将返回人类可读的 &lt;code&gt;obj&lt;/code&gt; 版本。默认情况下，调用inspect。如果需要，您可以覆盖它以使用pretty_print。</target>
        </trans-unit>
        <trans-unit id="770556a832c29f5a87b3d107be398afd2d93e5c2" translate="yes" xml:space="preserve">
          <source>To check your current encoding, run:</source>
          <target state="translated">要检查你当前的编码,运行。</target>
        </trans-unit>
        <trans-unit id="d15abd4f2c5da2ec17e4afe0eab142ecce96dbbf" translate="yes" xml:space="preserve">
          <source>To define a plugin, add a file named minitest/XXX_plugin.rb to your project/gem. That file must be discoverable via ruby's LOAD_PATH (via rubygems or otherwise). Minitest will find and require that file using Gem.find_files. It will then try to call &lt;code&gt;plugin_XXX_init&lt;/code&gt; during startup. The option processor will also try to call &lt;code&gt;plugin_XXX_options&lt;/code&gt; passing the OptionParser instance and the current options hash. This lets you register your own command-line options. Here's a totally bogus example:</source>
          <target state="translated">要定义插件，请将名为minitest / XXX_plugin.rb的文件添加到您的项目/ gem。该文件必须可以通过ruby的LOAD_PATH找到（通过rubygems或其他方式）。Minitest将使用Gem.find_files查找并要求该文件。然后它将尝试在启动过程中调用 &lt;code&gt;plugin_XXX_init&lt;/code&gt; 。选项处理器还将尝试通过OptionParser实例和当前选项哈希值来调用 &lt;code&gt;plugin_XXX_options&lt;/code&gt; 。这使您可以注册自己的命令行选项。这是一个完全伪造的示例：</target>
        </trans-unit>
        <trans-unit id="5be62ec5ef2c118b995c224d81c30d53822852cc" translate="yes" xml:space="preserve">
          <source>To fit a functional form: y = a + b*ln(x).</source>
          <target state="translated">要拟合一个函数形式:y=a+b*ln(x)。</target>
        </trans-unit>
        <trans-unit id="f167345b8bc5e5ba36641631eb38323e64c075a7" translate="yes" xml:space="preserve">
          <source>To fit a functional form: y = ae^(bx).</source>
          <target state="translated">要拟合函数形式:y=ae^(bx)。</target>
        </trans-unit>
        <trans-unit id="a3e50a2231c3db656ed788853daf2ad44b21f4de" translate="yes" xml:space="preserve">
          <source>To fit a functional form: y = ax^b.</source>
          <target state="translated">要拟合一个函数形式:y=ax^b。</target>
        </trans-unit>
        <trans-unit id="69c9113ad75da6e23f23a276dff26e75c7de4dc5" translate="yes" xml:space="preserve">
          <source>Unit tests</source>
          <target state="translated">单元测试</target>
        </trans-unit>
        <trans-unit id="914fe9f3fd0d3ec72cbc1c59930e4201fb2b5f80" translate="yes" xml:space="preserve">
          <source>Unknown Extensions:</source>
          <target state="translated">未知的扩展部分。</target>
        </trans-unit>
        <trans-unit id="716271df297a0645832a8df3c82d49ae90e14736" translate="yes" xml:space="preserve">
          <source>Use Minitest assertions with keyword arguments.</source>
          <target state="translated">使用带有关键字参数的 Minitest 断言。</target>
        </trans-unit>
        <trans-unit id="bcc951c97b7226ba1afc06800e0c8df783815f8f" translate="yes" xml:space="preserve">
          <source>Use RSpec Mocks with Minitest.</source>
          <target state="translated">使用 RSpec Mocks 与 Minitest。</target>
        </trans-unit>
        <trans-unit id="513b3ab1c6e410c4e9d18d590bae190bd49136c0" translate="yes" xml:space="preserve">
          <source>Use a constant with begin&amp;hellip;end like this:</source>
          <target state="translated">像这样使用带有begin ... end的常量：</target>
        </trans-unit>
        <trans-unit id="fe7b0baef86bbdeb76c3e9f2c4a8ecacb93e3616" translate="yes" xml:space="preserve">
          <source>Use a module. That's exactly what they're for:</source>
          <target state="translated">使用一个模块。这正是他们的目的。</target>
        </trans-unit>
        <trans-unit id="5be66bf6992c23239abff6b6126c88eb9be59003" translate="yes" xml:space="preserve">
          <source>Using our example above, here is how we might implement MyCI:</source>
          <target state="translated">使用我们上面的例子,下面是我们如何实现MyCI。</target>
        </trans-unit>
        <trans-unit id="813295f603c2d84102efbeaf1a0d8d298708f60b" translate="yes" xml:space="preserve">
          <source>Verify that all methods were called as expected. Raises &lt;code&gt;MockExpectationError&lt;/code&gt; if the mock object was not called as expected.</source>
          <target state="translated">验证所有方法都按预期方式被调用。如果未按预期调用模拟对象，则引发 &lt;code&gt;MockExpectationError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a7d0f158dbf30b645c845cc51c138d7501c263c7" translate="yes" xml:space="preserve">
          <source>Was this run skipped?</source>
          <target state="translated">这段路程是跳过的吗?</target>
        </trans-unit>
        <trans-unit id="4bfc7c140457bb471d2af24b951dcd3de5e8ada2" translate="yes" xml:space="preserve">
          <source>Was this run skipped? See &lt;a href=&quot;runnable#method-i-passed-3F&quot;&gt;passed?&lt;/a&gt; for more information.</source>
          <target state="translated">此运行是否被跳过？看到&lt;a href=&quot;runnable#method-i-passed-3F&quot;&gt;通过了吗？&lt;/a&gt;想要查询更多的信息。</target>
        </trans-unit>
        <trans-unit id="0efeccfb7d8e09288e6c4d633b2f608bfea310a5" translate="yes" xml:space="preserve">
          <source>Was this testcase skipped? Meant for teardown.</source>
          <target state="translated">这个测试案例是跳过的吗?是为了拆解。</target>
        </trans-unit>
        <trans-unit id="bc54c0d30b0463f6d5f6ac3d144c7af8a7138679" translate="yes" xml:space="preserve">
          <source>Where was this run before an assertion was raised?</source>
          <target state="translated">在提出论断之前,这是在哪里跑的?</target>
        </trans-unit>
        <trans-unit id="6ce0e7d96684b75f8ea0360b72d4eb49e25de4e9" translate="yes" xml:space="preserve">
          <source>Why am I seeing &lt;code&gt;uninitialized constant MiniTest::Test (NameError)&lt;/code&gt;?</source>
          <target state="translated">为什么会看到 &lt;code&gt;uninitialized constant MiniTest::Test (NameError)&lt;/code&gt; ？</target>
        </trans-unit>
        <trans-unit id="d196be298a720c08bc7c4fa75109424ca5c655ef" translate="yes" xml:space="preserve">
          <source>Why use let instead of def? I honestly don't know.</source>
          <target state="translated">为什么用let而不用def?说实话,我也不知道。</target>
        </trans-unit>
        <trans-unit id="b8c1efa795792d598bf076e0908fbdd18f4ab242" translate="yes" xml:space="preserve">
          <source>Worker is a SimpleDelegate which in 1.9+ is a subclass of BasicObject. &lt;a href=&quot;minitest/expectations&quot;&gt;Expectations&lt;/a&gt; are put on &lt;a href=&quot;object&quot;&gt;Object&lt;/a&gt; (one level down) so the Worker (SimpleDelegate) hits &lt;code&gt;method_missing&lt;/code&gt; and delegates down to the &lt;code&gt;Object.new&lt;/code&gt; instance. That object doesn't respond to work so the test fails.</source>
          <target state="translated">Worker是一个SimpleDelegate，在1.9+中是BasicObject的子类。&lt;a href=&quot;minitest/expectations&quot;&gt;期望值&lt;/a&gt;放在&lt;a href=&quot;object&quot;&gt;Object上&lt;/a&gt;（向下一级），因此Worker（SimpleDelegate）命中 &lt;code&gt;method_missing&lt;/code&gt; 并委托给 &lt;code&gt;Object.new&lt;/code&gt; 实例。该对象不响应工作，因此测试失败。</target>
        </trans-unit>
        <trans-unit id="bf2c5f74882b016940122ae658611ebe2afdd21e" translate="yes" xml:space="preserve">
          <source>Wrap print to colorize the output.</source>
          <target state="translated">缠绕打印,对输出进行着色。</target>
        </trans-unit>
        <trans-unit id="a77b6e09e1838d2e0149ec07d5f9bcc7f2309f85" translate="yes" xml:space="preserve">
          <source>Wraps assert so failed assertions drop into the ruby debugger.</source>
          <target state="translated">包裹断言,所以失败的断言会掉到ruby调试器中。</target>
        </trans-unit>
        <trans-unit id="e5ae30c4c760ae11a888dc86150087c8ab9a17af" translate="yes" xml:space="preserve">
          <source>Writing Extensions</source>
          <target state="translated">写作扩展</target>
        </trans-unit>
        <trans-unit id="e97cec1c7225508f3ad053333abbac0e9120335c" translate="yes" xml:space="preserve">
          <source>Written by squishy human beings. Software can never be perfect. We will all eventually die.</source>
          <target state="translated">由软绵绵的人类编写。软件永远不可能是完美的。我们最终都会死。</target>
        </trans-unit>
        <trans-unit id="994833a6cb3223a89cde0b8bedfa7c0cf9cf30b9" translate="yes" xml:space="preserve">
          <source>You can bypass &lt;code&gt;SimpleDelegate#method_missing&lt;/code&gt; by extending the worker with &lt;code&gt;Minitest::Expectations&lt;/code&gt;. You can either do that in your setup at the instance level, like:</source>
          <target state="translated">您可以通过 &lt;code&gt;Minitest::Expectations&lt;/code&gt; 扩展worker 来绕过 &lt;code&gt;SimpleDelegate#method_missing&lt;/code&gt; 。您可以在实例级别的设置中执行此操作，例如：</target>
        </trans-unit>
        <trans-unit id="17aad5d5498aba766d6321fb4873c345f76d1c92" translate="yes" xml:space="preserve">
          <source>You can make sure it's installed and path is configured properly with:</source>
          <target state="translated">你可以用以下方法确保它的安装和路径配置正确。</target>
        </trans-unit>
        <trans-unit id="b1ae8b754b76efb0077e9c5cd0b9d750dc4daca3" translate="yes" xml:space="preserve">
          <source>_(value = nil, &amp;amp;block)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">_（value = nil，＆block）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a944160770c99da7f65226cf1d519436dbfed4ba" translate="yes" xml:space="preserve">
          <source>__run(reporter, options)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">__run（报告程序，选项）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fbc1289d4e9be4175fba4a3ce62f9e113a06db36" translate="yes" xml:space="preserve">
          <source>after(_type = nil, &amp;amp;block)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">after（_type = nil，＆block）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f70089139ac6de6f10f48f07c77957fed33cac07" translate="yes" xml:space="preserve">
          <source>after_run</source>
          <target state="translated">after_run</target>
        </trans-unit>
        <trans-unit id="e35ade9181088145f34a24f56f9daaa488698afb" translate="yes" xml:space="preserve">
          <source>after_run(&amp;amp;block)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">after_run（＆block）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="50dc73c58798aee48e4afe3296e45b86b70b3f18" translate="yes" xml:space="preserve">
          <source>after_setup()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">after_setup（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f4123f46302aafc0210b59a8ff9bb83978d9d6bc" translate="yes" xml:space="preserve">
          <source>after_teardown()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">after_teardown（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b1c7123dbdf59c0145f7185a7fad16236193aad9" translate="yes" xml:space="preserve">
          <source>arel</source>
          <target state="translated">arel</target>
        </trans-unit>
        <trans-unit id="2b5957eff659828a92fae233a53b0db568c19f7d" translate="yes" xml:space="preserve">
          <source>assay-minitest</source>
          <target state="translated">assay-minitest</target>
        </trans-unit>
        <trans-unit id="f361d6685119118e7cb4be997323214f65f21f98" translate="yes" xml:space="preserve">
          <source>assert(test, msg = nil)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">assert（test，msg = nil）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dc80a136514972daed5c4a38e70da99056305c60" translate="yes" xml:space="preserve">
          <source>assert_empty(obj, msg = nil)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">assert_empty（obj，msg = nil）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c9f1c196d3c66f01125828d3a193ab219ef84471" translate="yes" xml:space="preserve">
          <source>assert_equal(exp, act, msg = nil)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">assert_equal（exp，act，msg = nil）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="37c80b624075924fd31d0a54714a4a967245dbd5" translate="yes" xml:space="preserve">
          <source>assert_in_delta(exp, act, delta = 0.001, msg = nil)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">assert_in_delta（exp，act，delta = 0.001，msg = nil）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="585e2cbb62b8f5c8a2bcdbad7ca33f6d4725ae68" translate="yes" xml:space="preserve">
          <source>assert_in_epsilon(exp, act, epsilon = 0.001, msg = nil)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">assert_in_epsilon（exp，act，epsilon = 0.001，msg = nil）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0f92034b81a4cbb2656194fa9170fbdd28a8e9c1" translate="yes" xml:space="preserve">
          <source>assert_includes(collection, obj, msg = nil)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">assert_includes（collection，obj，msg = nil）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6258028dfdd37aa588cbdb8d201fe2e756863754" translate="yes" xml:space="preserve">
          <source>assert_instance_of(cls, obj, msg = nil)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">assert_instance_of（cls，obj，msg = nil）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="337317669cafb3d6c93937f22998914ff780c800" translate="yes" xml:space="preserve">
          <source>assert_kind_of(cls, obj, msg = nil)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">assert_kind_of（cls，obj，msg = nil）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="883389a3448ed7d6c8e210d7ddb15cd3d6be6eb9" translate="yes" xml:space="preserve">
          <source>assert_match(matcher, obj, msg = nil)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">assert_match（matcher，obj，msg = nil）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e2c27553ef0ea3828f4232f6259ce86c601167ed" translate="yes" xml:space="preserve">
          <source>assert_mock(mock)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">assert_mock（mock）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1bcd82470945392fefe343e6daa0680bc90c0b80" translate="yes" xml:space="preserve">
          <source>assert_nil(obj, msg = nil)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">assert_nil（obj，msg = nil）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="94e20ddc4d0bd76f9bacd85bf65f1fbdfa755537" translate="yes" xml:space="preserve">
          <source>assert_operator(o1, op, o2 = UNDEFINED, msg = nil)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">assert_operator（o1，op，o2 = UNDEFINED，msg = nil）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="972480111d7cc6d67a4a267b9f0bdc2561a04f99" translate="yes" xml:space="preserve">
          <source>assert_output(stdout = nil, stderr = nil) { || ... }&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">assert_output（stdout = nil，stderr = nil）{|| ...} &lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ecb87731cf6beab95b3381539ce1b773fa7c26e3" translate="yes" xml:space="preserve">
          <source>assert_performance(validation, &amp;amp;work)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">assert_performance（validation，＆work）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a6041e5f4824a1ad8bf0de52b2673c6f4205c48c" translate="yes" xml:space="preserve">
          <source>assert_performance_constant(threshold = 0.99, &amp;amp;work)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">assert_performance_constant（threshold = 0.99，＆work）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c232eda6e6af7158b9b929ae673dea2189f293a" translate="yes" xml:space="preserve">
          <source>assert_performance_exponential(threshold = 0.99, &amp;amp;work)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">assert_performance_exponential（threshold = 0.99，＆work）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="104af85ad4ad719366c6f41a29f5341cef62beec" translate="yes" xml:space="preserve">
          <source>assert_performance_linear(threshold = 0.99, &amp;amp;work)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">assert_performance_linear（threshold = 0.99，＆work）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d9e7664ea31543a70cf58ae3bb497f85b733ee30" translate="yes" xml:space="preserve">
          <source>assert_performance_logarithmic(threshold = 0.99, &amp;amp;work)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">assert_performance_logarithmic（threshold = 0.99，＆work）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="483ab8c043eea681ecf2ebaff4a54416b384a94c" translate="yes" xml:space="preserve">
          <source>assert_performance_power(threshold = 0.99, &amp;amp;work)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">assert_performance_power（threshold = 0.99，＆work）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="afaf8a1aacd6d0e84ca940bf004d45d4744ff1b2" translate="yes" xml:space="preserve">
          <source>assert_predicate(o1, op, msg = nil)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">assert_predicate（o1，op，msg = nil）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3f2468cece6de946963f62cea39fb9681e3987d5" translate="yes" xml:space="preserve">
          <source>assert_raises(*exp) { || ... }&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">assert_raises（* exp）{|| ...} &lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aa9179064108bbce61c20ff76e3ba76ff81ba5e1" translate="yes" xml:space="preserve">
          <source>assert_respond_to(obj, meth, msg = nil)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">assert_respond_to（obj，meth，msg = nil）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cb0921e9e225a95d24a18deaaefafcb30188f235" translate="yes" xml:space="preserve">
          <source>assert_same(exp, act, msg = nil)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">assert_same（exp，act，msg = nil）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="326d0e33fbf6b034179b9a4d55e5928c32016b4f" translate="yes" xml:space="preserve">
          <source>assert_send(send_ary, m = nil)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">assert_send（send_ary，m = nil）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8f4d4332437fb81162b8c534e5cc1789ab53110f" translate="yes" xml:space="preserve">
          <source>assert_silent() { || ... }&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">assert_silent（）{|| ...} &lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="282829d3e46ad077d5f53c3fa7eb9d6d82acb62f" translate="yes" xml:space="preserve">
          <source>assert_throws(sym, msg = nil) { || ... }&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">assert_throws（sym，msg = nil）{|| ...} &lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cb27bd9d01d74c119a96e0446fb334492ba7ac46" translate="yes" xml:space="preserve">
          <source>assertions[RW]</source>
          <target state="translated">assertions[RW]</target>
        </trans-unit>
        <trans-unit id="a3523a1f9c862c40e401ed6389bfee71b3642073" translate="yes" xml:space="preserve">
          <source>autorun</source>
          <target state="translated">autorun</target>
        </trans-unit>
        <trans-unit id="641cfe01f34e3fb6261af0b7376283c38355d132" translate="yes" xml:space="preserve">
          <source>autorun()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">autorun（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="52bc155d5a8fc4a56eda0e202db29ff1905374f6" translate="yes" xml:space="preserve">
          <source>autotest is a continuous testing facility meant to be used during development.</source>
          <target state="translated">autotest是一个在开发过程中使用的持续测试工具。</target>
        </trans-unit>
        <trans-unit id="2f71a839a1762d0afeff0e63838ed3675dd9e921" translate="yes" xml:space="preserve">
          <source>before(_type = nil, &amp;amp;block)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">before（_type = nil，＆block）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4e123571ce3942608f8c8ba292e955d1e617afae" translate="yes" xml:space="preserve">
          <source>before_setup()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">before_setup（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b1f45b0d36fca351696a6e2bd21ed51c9cf130ae" translate="yes" xml:space="preserve">
          <source>before_teardown()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">before_teardown（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9899ac4395082a28de060ac987f4fbf1019dd465" translate="yes" xml:space="preserve">
          <source>bench(name, &amp;amp;block)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">bench（name，＆block）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="25c329ae886947e46eaab8221a9d96c839a4ffc2" translate="yes" xml:space="preserve">
          <source>bench_exp</source>
          <target state="translated">bench_exp</target>
        </trans-unit>
        <trans-unit id="cb425ab2d422ae94d14e738ac5487971d5904fee" translate="yes" xml:space="preserve">
          <source>bench_exp(min, max, base = 10)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">bench_exp（min，max，base = 10）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="82f6bcce105ca3d1526b775cf5b562c78ee40b6d" translate="yes" xml:space="preserve">
          <source>bench_linear</source>
          <target state="translated">bench_linear</target>
        </trans-unit>
        <trans-unit id="2a9e21a05931bbff5b101e2bd64ff17c7283f130" translate="yes" xml:space="preserve">
          <source>bench_linear(min, max, step = 10)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">bench_linear（min，max，step = 10）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="603fdf56c92ea7dd2ae3f7fb810580f8eedca710" translate="yes" xml:space="preserve">
          <source>bench_performance_constant</source>
          <target state="translated">bench_performance_constant</target>
        </trans-unit>
        <trans-unit id="c0100924c1eed5805f53d2e76760958bf11971db" translate="yes" xml:space="preserve">
          <source>bench_performance_constant(name, threshold = 0.99, &amp;amp;work)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">bench_performance_constant（name，threshold = 0.99，＆work）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="566ba88d8fc0ac31fa450391d72b917883ef8871" translate="yes" xml:space="preserve">
          <source>bench_performance_exponential</source>
          <target state="translated">bench_performance_exponential</target>
        </trans-unit>
        <trans-unit id="94a339851f26d68aa7b3da5e25ac23fd0a7ca196" translate="yes" xml:space="preserve">
          <source>bench_performance_exponential(name, threshold = 0.99, &amp;amp;work)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">bench_performance_exponential（name，threshold = 0.99，＆work）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6fa31d8800bccb205858910b879a2d167a6de4b9" translate="yes" xml:space="preserve">
          <source>bench_performance_linear</source>
          <target state="translated">bench_performance_linear</target>
        </trans-unit>
        <trans-unit id="dcc07a40cf0e7b4d950b9a01800a80775ca45a8c" translate="yes" xml:space="preserve">
          <source>bench_performance_linear(name, threshold = 0.99, &amp;amp;work)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">bench_performance_linear（name，threshold = 0.99，＆work）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5e5fe88eed7cb35f2683b36bf96a1c705c1fccb1" translate="yes" xml:space="preserve">
          <source>bench_performance_logarithmic</source>
          <target state="translated">bench_performance_logarithmic</target>
        </trans-unit>
        <trans-unit id="2bd01dd2a82de54c38ce745e84fa864797285fdb" translate="yes" xml:space="preserve">
          <source>bench_performance_logarithmic(name, threshold = 0.99, &amp;amp;work)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">bench_performance_logarithmic（name，threshold = 0.99，＆work）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="16e3950940d040f693e7324529870f389e4fc839" translate="yes" xml:space="preserve">
          <source>bench_performance_power</source>
          <target state="translated">bench_performance_power</target>
        </trans-unit>
        <trans-unit id="4bd529591841b34d9cc32e36596ed58266140f0d" translate="yes" xml:space="preserve">
          <source>bench_performance_power(name, threshold = 0.99, &amp;amp;work)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">bench_performance_power（name，threshold = 0.99，＆work）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5cc5842feec2620bb935d2041e392851a6b5978f" translate="yes" xml:space="preserve">
          <source>bench_range</source>
          <target state="translated">bench_range</target>
        </trans-unit>
        <trans-unit id="d8ae53733cce3425978d5b5cd321c4c7712020f1" translate="yes" xml:space="preserve">
          <source>bench_range(&amp;amp;block)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">bench_range（＆block）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9f9b40292abdd4be57f737f3f00fc4df996ffa8c" translate="yes" xml:space="preserve">
          <source>bench_range()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">bench_range（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="34b0602aa0ef687d1d209f5c50367a06791da2cc" translate="yes" xml:space="preserve">
          <source>betterspecs.org</source>
          <target state="translated">betterspecs.org</target>
        </trans-unit>
        <trans-unit id="3e38e5ce4283f06de4b83ad13af081abc5e16740" translate="yes" xml:space="preserve">
          <source>bugs</source>
          <target state="translated">bugs</target>
        </trans-unit>
        <trans-unit id="ad5957ade7fa18b1fef146889efc2f4ccdc4fd76" translate="yes" xml:space="preserve">
          <source>but do note that several items there are debatable or specific to rspec.</source>
          <target state="translated">但请注意,有几项是值得商榷的,或者是针对rspec的。</target>
        </trans-unit>
        <trans-unit id="e19908150f3303f4ad07142ccabc6b2d7a0eb94b" translate="yes" xml:space="preserve">
          <source>capture_io() { || ... }&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">capture_io（）{|| ...} &lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1a60e9b08e240f06e741faa7f7c9c85970cdb0f4" translate="yes" xml:space="preserve">
          <source>capture_subprocess_io() { || ... }&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">capture_subprocess_io（）{|| ...} &lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0e7246013eb50a0b3938558a873e0428b68535a6" translate="yes" xml:space="preserve">
          <source>capybara_minitest_spec</source>
          <target state="translated">capybara_minitest_spec</target>
        </trans-unit>
        <trans-unit id="86d2c6b451b4556e0ec9f88da081c5c0e1bf8f11" translate="yes" xml:space="preserve">
          <source>class Minitest::AbstractReporter</source>
          <target state="translated">class Minitest::AbstractReporter</target>
        </trans-unit>
        <trans-unit id="a2c31e8bbf24191811c7c3152dacc497a97f2c29" translate="yes" xml:space="preserve">
          <source>class Minitest::Assertion</source>
          <target state="translated">class Minitest::Assertion</target>
        </trans-unit>
        <trans-unit id="d17260cb691d029241a50fb23f9d63bf5ee5b705" translate="yes" xml:space="preserve">
          <source>class Minitest::BacktraceFilter</source>
          <target state="translated">类 Minitest::BacktraceFilter</target>
        </trans-unit>
        <trans-unit id="3f134014dbc93d7246567d8e2030179609f1bd6c" translate="yes" xml:space="preserve">
          <source>class Minitest::BenchSpec</source>
          <target state="translated">Class Minitest::BenchSpec</target>
        </trans-unit>
        <trans-unit id="a06a21957f872cd1e8840703c5b82dbcb14d99df" translate="yes" xml:space="preserve">
          <source>class Minitest::Benchmark</source>
          <target state="translated">Class Minitest::Benchmark</target>
        </trans-unit>
        <trans-unit id="9c956d47ecb53f406c8629924d22e1ae8e33375a" translate="yes" xml:space="preserve">
          <source>class Minitest::CompositeReporter</source>
          <target state="translated">class Minitest::CompositeReporter</target>
        </trans-unit>
        <trans-unit id="53c5ca53130050e970a1ecc9b927e31d20236e2d" translate="yes" xml:space="preserve">
          <source>class Minitest::Mock</source>
          <target state="translated">Class Minitest::Mock</target>
        </trans-unit>
        <trans-unit id="4762ec4d0f50b02b0aa696e02dd9b23aed216859" translate="yes" xml:space="preserve">
          <source>class Minitest::Parallel::Executor</source>
          <target state="translated">类 Minitest::Parallel::Executor</target>
        </trans-unit>
        <trans-unit id="6446a480fdc484e09ed2c5c4809ebcf3757bc894" translate="yes" xml:space="preserve">
          <source>class Minitest::PrideIO</source>
          <target state="translated">Class Minitest::PrideIO</target>
        </trans-unit>
        <trans-unit id="6d6b320a84481046e79be64796c7e742dc692d6d" translate="yes" xml:space="preserve">
          <source>class Minitest::PrideLOL</source>
          <target state="translated">Class Minitest::PrideLOL</target>
        </trans-unit>
        <trans-unit id="fcd04c74d2495fcbf2d1fd0d361f937c87479190" translate="yes" xml:space="preserve">
          <source>class Minitest::ProgressReporter</source>
          <target state="translated">类 Minitest::ProgressReporter</target>
        </trans-unit>
        <trans-unit id="07d40c65c53e954ba3f583af25959546878120f4" translate="yes" xml:space="preserve">
          <source>class Minitest::Result</source>
          <target state="translated">class Minitest::Result</target>
        </trans-unit>
        <trans-unit id="dfd3b9ac8cce6346e084a773a7eb21cf5ab7fd14" translate="yes" xml:space="preserve">
          <source>class Minitest::Runnable</source>
          <target state="translated">类 Minitest::Runnable</target>
        </trans-unit>
        <trans-unit id="c94d3f14d385b7f904cb8f3322ccd103cbd78fed" translate="yes" xml:space="preserve">
          <source>class Minitest::Skip</source>
          <target state="translated">类 Minitest::Skip</target>
        </trans-unit>
        <trans-unit id="88e3c21fc633c05e41081150e3084af5e5fbb271" translate="yes" xml:space="preserve">
          <source>class Minitest::Spec</source>
          <target state="translated">Class Minitest::Spec</target>
        </trans-unit>
        <trans-unit id="10f451f797b3a9ca463e8fea7e9f4421aabe8d97" translate="yes" xml:space="preserve">
          <source>class Minitest::StatisticsReporter</source>
          <target state="translated">类 Minitest::StatisticsReporter</target>
        </trans-unit>
        <trans-unit id="3a65ceff82881ee3c6d8c3631fce1235f979405c" translate="yes" xml:space="preserve">
          <source>class Minitest::SummaryReporter</source>
          <target state="translated">class Minitest::SummaryReporter</target>
        </trans-unit>
        <trans-unit id="6f63d73b60f678ac18f9cfa934de7a98caa13661" translate="yes" xml:space="preserve">
          <source>class Minitest::Test</source>
          <target state="translated">Class Minitest::Test</target>
        </trans-unit>
        <trans-unit id="839d437b07e444cac213f90f49f7563ddd11d47e" translate="yes" xml:space="preserve">
          <source>class Minitest::UnexpectedError</source>
          <target state="translated">类 Minitest::UnexpectedError</target>
        </trans-unit>
        <trans-unit id="1c4a0d7c98244f9cefbbb99061f2409bdc4ea6cb" translate="yes" xml:space="preserve">
          <source>class Object</source>
          <target state="translated">类</target>
        </trans-unit>
        <trans-unit id="0647bbc2c29c6831dd3ddb4709d2e81e53609d6a" translate="yes" xml:space="preserve">
          <source>color_pound_spec_reporter</source>
          <target state="translated">color_pound_spec_reporter</target>
        </trans-unit>
        <trans-unit id="b212af4b690b005092cf980b2fa2c1816463fe42" translate="yes" xml:space="preserve">
          <source>describe(desc, *additional_desc, &amp;amp;block)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">describe（desc，* additional_desc，＆block）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ab1da18f23b9a28d91d489175aacb6cf8b963885" translate="yes" xml:space="preserve">
          <source>detroit-minitest</source>
          <target state="translated">detroit-minitest</target>
        </trans-unit>
        <trans-unit id="23259da268865a76162c89e22b96eeef7f234ca5" translate="yes" xml:space="preserve">
          <source>diff()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">diff（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f75196e729257837364fc6eadd04bc25c2d3dec2" translate="yes" xml:space="preserve">
          <source>diff(exp, act)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">diff（exp，act）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="682a421c8c0e82fab238799077bdf00f5d95e06b" translate="yes" xml:space="preserve">
          <source>diff=(o)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">diff =（o）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1e1a357d1c6c6290cab35451cb24d42a6308029b" translate="yes" xml:space="preserve">
          <source>docs.seattlerb.org/minitest</source>
          <target state="translated">docs.seattlerb.org/minitest</target>
        </trans-unit>
        <trans-unit id="abcb81151ac6d0f78553d1846d1e6147b5429a6f" translate="yes" xml:space="preserve">
          <source>em-minitest-spec</source>
          <target state="translated">em-minitest-spec</target>
        </trans-unit>
        <trans-unit id="4bb0566de8ca4848075d64ca6dd14fea11761eb1" translate="yes" xml:space="preserve">
          <source>emacs</source>
          <target state="translated">emacs</target>
        </trans-unit>
        <trans-unit id="aef76d489d9eafea97e255836d5587b8235d14d4" translate="yes" xml:space="preserve">
          <source>error?()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">错误？（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fa6d3254b3cdf5335fdc32f58cc83c2425920831" translate="yes" xml:space="preserve">
          <source>exception_details(e, msg)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">exception_details（e，msg）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dd8af9486091f0fc6c0410a4314a84381e4a195c" translate="yes" xml:space="preserve">
          <source>expect(name, retval, args = [], &amp;amp;blk)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">Expect（name，retval，args = []，＆blk）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="249d692bc0f6420bed0f31848da2e03a4363105d" translate="yes" xml:space="preserve">
          <source>expect(value = nil, &amp;amp;block)</source>
          <target state="translated">期望（值=零，＆块）</target>
        </trans-unit>
        <trans-unit id="1601ed16fb6abd3782044212efcb386b5e0cfda5" translate="yes" xml:space="preserve">
          <source>failures[RW]</source>
          <target state="translated">failures[RW]</target>
        </trans-unit>
        <trans-unit id="77a2c2a49c9020de5c23af597dfc21a0f31e8438" translate="yes" xml:space="preserve">
          <source>filter(bt)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">筛选器（bt）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9251339471a4bea091991b4cf2d1df8fb6d2b8fb" translate="yes" xml:space="preserve">
          <source>fit_error(xys) { |x| ... }&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">fit_error（xys）{| x | ...} &lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="27b83777d7268975acfc2085e7d7a2909e550889" translate="yes" xml:space="preserve">
          <source>fit_exponential(xs, ys)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">fit_exponential（xs，ys）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="771088b8581b6d1c3f49ffe0421c7ccb74d218f5" translate="yes" xml:space="preserve">
          <source>fit_linear(xs, ys)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">fit_linear（xs，ys）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="78a257d4678022c587dd8bf0bba6affeac8c8733" translate="yes" xml:space="preserve">
          <source>fit_logarithmic(xs, ys)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">fit_logarithmic（xs，ys）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0277ed806481c80f4c9f43e11a0574f36b658401" translate="yes" xml:space="preserve">
          <source>fit_power(xs, ys)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">fit_power（xs，ys）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="89d32a555dffae890694e87e8e974f388cc16171" translate="yes" xml:space="preserve">
          <source>flexmock-minitest</source>
          <target state="translated">flexmock-minitest</target>
        </trans-unit>
        <trans-unit id="df1b0a3be8f9e21b54209473516b65685f3399d7" translate="yes" xml:space="preserve">
          <source>flunk(msg = nil)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">flunk（msg = nil）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9bce3bc42c7c54b9f2b670d3061ae31e62802190" translate="yes" xml:space="preserve">
          <source>from(runnable)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">来自（可运行）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="86c95c34374d927c0b1d5e589a8264896fbeee60" translate="yes" xml:space="preserve">
          <source>github.com/arthurnn/minitest-emacs</source>
          <target state="translated">github.com/arthurnn/minitest-emacs</target>
        </trans-unit>
        <trans-unit id="1053aed0594e60c134b52f6bb7439a56a4866111" translate="yes" xml:space="preserve">
          <source>github.com/rmm5t/minitest-matchers_vaccine</source>
          <target state="translated">github.com/rmm5t/minitest-matchers_vaccine</target>
        </trans-unit>
        <trans-unit id="2a7c519509f19decba942a7a644586c3522099de" translate="yes" xml:space="preserve">
          <source>github.com/seattlerb/minitest</source>
          <target state="translated">github.com/seattlerb/minitest</target>
        </trans-unit>
        <trans-unit id="42660b0c4daaccf7b15cf0a29e154cf19dc62ae7" translate="yes" xml:space="preserve">
          <source>github.com/seattlerb/minitest/issues</source>
          <target state="translated">github.com/seattlerb/minitest/issues</target>
        </trans-unit>
        <trans-unit id="b06bd84d441646fc167163287dbc5ee6c658641f" translate="yes" xml:space="preserve">
          <source>github.com/sunaku/vim-ruby-minitest</source>
          <target state="translated">github.com/sunaku/vim-ruby-minitest</target>
        </trans-unit>
        <trans-unit id="1e0d7afb7828e0c714cb4936a125fd54ea7c1435" translate="yes" xml:space="preserve">
          <source>github.com/wojtekmach/minitest-matchers</source>
          <target state="translated">github.com/wojtekmach/minitest-matchers</target>
        </trans-unit>
        <trans-unit id="5fec8cacdeda947006d8276299f8334b1e98dd75" translate="yes" xml:space="preserve">
          <source>guard-minitest</source>
          <target state="translated">guard-minitest</target>
        </trans-unit>
        <trans-unit id="27ff5e47668800177ea98bb21696a7182b38b4f0" translate="yes" xml:space="preserve">
          <source>guard-minitest-decisiv</source>
          <target state="translated">guard-minitest-decisiv</target>
        </trans-unit>
        <trans-unit id="e83249bd3ba79932e16fb1fb5100dafade9954c2" translate="yes" xml:space="preserve">
          <source>home</source>
          <target state="translated">home</target>
        </trans-unit>
        <trans-unit id="0c0939ecbfab33215c11a00649364925d99eb2b2" translate="yes" xml:space="preserve">
          <source>i_suck_and_my_tests_are_order_dependent!</source>
          <target state="translated">i_suck_and_my_tests_are_order_dependent!</target>
        </trans-unit>
        <trans-unit id="2800d2949a656e1bc70f460fc1f2e541171ed9e7" translate="yes" xml:space="preserve">
          <source>i_suck_and_my_tests_are_order_dependent!()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">i_suck_and_my_tests_are_order_dependent！（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8e3985ed1773c60090a2fe9486fe50fbb2f0d3a8" translate="yes" xml:space="preserve">
          <source>io[R]</source>
          <target state="translated">io[R]</target>
        </trans-unit>
        <trans-unit id="677d07dde44f7bd50c7eae4fd9d55b3b9ef403f4" translate="yes" xml:space="preserve">
          <source>it(desc = &quot;anonymous&quot;, &amp;amp;block)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">it（desc =&amp;ldquo; anonymous&amp;rdquo;，＆block）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7da33f49740772bd4c0f244cc0fff335ffc6d639" translate="yes" xml:space="preserve">
          <source>journey</source>
          <target state="translated">journey</target>
        </trans-unit>
        <trans-unit id="f722461c5176fbe9a22988b16898163cebe784d0" translate="yes" xml:space="preserve">
          <source>jruby?(platform = RUBY_PLATFORM)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">jruby？（platform = RUBY_PLATFORM）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="61b46bbb240d145ead3ee10cfd1cd3c6afc69bac" translate="yes" xml:space="preserve">
          <source>klass[RW]</source>
          <target state="translated">klass[RW]</target>
        </trans-unit>
        <trans-unit id="e47b25fe17ccf218ca26a92f43746cc055cf7aa0" translate="yes" xml:space="preserve">
          <source>let(name, &amp;amp;block)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">let（name，＆block）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3fe6e71ddf804c9716426298c8b74f42b194b6c6" translate="yes" xml:space="preserve">
          <source>location()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">location（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="89126e9daf8af30e55805bc2d783083c5370e04f" translate="yes" xml:space="preserve">
          <source>maglev?(platform = defined?(RUBY_ENGINE) &amp;amp;&amp;amp; RUBY_ENGINE)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">maglev（平台=已定义？（RUBY_ENGINE）&amp;amp;&amp;amp; RUBY_ENGINE）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="791d3b93b656531072745359a4abb240a4455c64" translate="yes" xml:space="preserve">
          <source>make_my_diffs_pretty!</source>
          <target state="translated">make_my_diffs_pretty!</target>
        </trans-unit>
        <trans-unit id="9df18a1ed293685c78cc89b4a34cf87dfc7b7a05" translate="yes" xml:space="preserve">
          <source>make_my_diffs_pretty!()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">make_my_diffs_pretty！（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bc8166245b3af40f3cff9c55a99ce6af3529216a" translate="yes" xml:space="preserve">
          <source>message(msg = nil, ending = nil, &amp;amp;default)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">message（msg = nil，结尾= nil，＆default）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dd3de315429485798b09dfbdb7d7d4546af03c93" translate="yes" xml:space="preserve">
          <source>methods_matching</source>
          <target state="translated">methods_matching</target>
        </trans-unit>
        <trans-unit id="8a7959b24a7fe9dc04a4f6218e59305d1f409fea" translate="yes" xml:space="preserve">
          <source>methods_matching(re)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">Methods_matching（re）&lt;a&gt;显示源代码&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4b9ac4a0b347725eae3f8342529618ee74548b22" translate="yes" xml:space="preserve">
          <source>mime-types</source>
          <target state="translated">mime-types</target>
        </trans-unit>
        <trans-unit id="ddbbca266bdc61dd73a130e22f818e61321eb6fa" translate="yes" xml:space="preserve">
          <source>minispec-metadata</source>
          <target state="translated">minispec-metadata</target>
        </trans-unit>
        <trans-unit id="f8a435530b762afcc3e789424520d09d583a1104" translate="yes" xml:space="preserve">
          <source>minispec-rails</source>
          <target state="translated">minispec-rails</target>
        </trans-unit>
        <trans-unit id="38903300394dee88beb146a332224d405e3ec19d" translate="yes" xml:space="preserve">
          <source>minitest doesn't reinvent anything that ruby already provides, like: classes, modules, inheritance, methods. This means you only have to learn ruby to use minitest and all of your regular OO practices like extract-method refactorings still apply.</source>
          <target state="translated">minitest 不会重新发明任何 ruby 已经提供的东西,比如:类、模块、继承、方法。这意味着你只需要学习ruby就可以使用minitest,而你所有常规的OO实践,比如extract-method重构仍然适用。</target>
        </trans-unit>
        <trans-unit id="f83ad4e0b800ec94714796f27a4539683807fa9a" translate="yes" xml:space="preserve">
          <source>minitest provides a complete suite of testing facilities supporting TDD, BDD, mocking, and benchmarking.</source>
          <target state="translated">minitest提供了一套完整的测试设施,支持TDD、BDD、模拟和基准测试。</target>
        </trans-unit>
        <trans-unit id="8df564f8a4cd6cd3be78f8c97663397d3e7c7c68" translate="yes" xml:space="preserve">
          <source>minitest-activemodel</source>
          <target state="translated">minitest-activemodel</target>
        </trans-unit>
        <trans-unit id="f39d7c25d43d6514123efe6c7c4cbaf79554bfb3" translate="yes" xml:space="preserve">
          <source>minitest-ar-assertions</source>
          <target state="translated">minitest-ar-assertions</target>
        </trans-unit>
        <trans-unit id="58bf990819d7427a176dd83dfae2479d5d33711e" translate="yes" xml:space="preserve">
          <source>minitest-around</source>
          <target state="translated">minitest-around</target>
        </trans-unit>
        <trans-unit id="6df12da765da0abed92fa8f8a7389944e1505a21" translate="yes" xml:space="preserve">
          <source>minitest-assert_errors</source>
          <target state="translated">minitest-assert_errors</target>
        </trans-unit>
        <trans-unit id="a7815188af3f16409790de255a1135dad8070d50" translate="yes" xml:space="preserve">
          <source>minitest-autotest</source>
          <target state="translated">minitest-autotest</target>
        </trans-unit>
        <trans-unit id="167fcbcd0c033046ac9802238c3421e3524c279e" translate="yes" xml:space="preserve">
          <source>minitest-bacon</source>
          <target state="translated">minitest-bacon</target>
        </trans-unit>
        <trans-unit id="6f8d95cb60d9f5b49b80c612caba658f5a916e88" translate="yes" xml:space="preserve">
          <source>minitest-bacon extends minitest with bacon-like functionality.</source>
          <target state="translated">minitest-bacon 用类似于 bacon 的功能扩展了 minitest。</target>
        </trans-unit>
        <trans-unit id="b8b3e77a449616408e11008db65dbe5b480f3ed7" translate="yes" xml:space="preserve">
          <source>minitest-bang</source>
          <target state="translated">minitest-bang</target>
        </trans-unit>
        <trans-unit id="15c94bbacd7189ebf4effb6654ed7fc98cac9004" translate="yes" xml:space="preserve">
          <source>minitest-bisect</source>
          <target state="translated">minitest-bisect</target>
        </trans-unit>
        <trans-unit id="ef0da49632900cb67e238bd2671cb0850a801503" translate="yes" xml:space="preserve">
          <source>minitest-blink1_reporter</source>
          <target state="translated">minitest-blink1_reporter</target>
        </trans-unit>
        <trans-unit id="95a24e5120f02f4fd15cf75733697b22cbedad6c" translate="yes" xml:space="preserve">
          <source>minitest-capistrano</source>
          <target state="translated">minitest-capistrano</target>
        </trans-unit>
        <trans-unit id="d3adf792152049034d6c2c75c4901fd3bbc8478d" translate="yes" xml:space="preserve">
          <source>minitest-capybara</source>
          <target state="translated">minitest-capybara</target>
        </trans-unit>
        <trans-unit id="240811fab64e878b3d86c113ef0f44a2a82d8197" translate="yes" xml:space="preserve">
          <source>minitest-capybara-unit</source>
          <target state="translated">minitest-capybara-unit</target>
        </trans-unit>
        <trans-unit id="aa1da96e335157e94961bf3cfecd40b4cd410900" translate="yes" xml:space="preserve">
          <source>minitest-chef-handler</source>
          <target state="translated">minitest-chef-handler</target>
        </trans-unit>
        <trans-unit id="08c34397353e04fa89fefa654690274c1dd41dc0" translate="yes" xml:space="preserve">
          <source>minitest-ci</source>
          <target state="translated">minitest-ci</target>
        </trans-unit>
        <trans-unit id="c81dc3d4e8cf0749f7aa9749c1de69fd1ce715de" translate="yes" xml:space="preserve">
          <source>minitest-colorer</source>
          <target state="translated">minitest-colorer</target>
        </trans-unit>
        <trans-unit id="861d51401ba9dde7c027e10ba65235e4c4e0b447" translate="yes" xml:space="preserve">
          <source>minitest-context</source>
          <target state="translated">minitest-context</target>
        </trans-unit>
        <trans-unit id="9e9f8b71fdf827f3fd6dbf316130efdb24a49041" translate="yes" xml:space="preserve">
          <source>minitest-debugger</source>
          <target state="translated">minitest-debugger</target>
        </trans-unit>
        <trans-unit id="0b77d3446297cfb1193d9a622d01e35a52f29d83" translate="yes" xml:space="preserve">
          <source>minitest-deluxe</source>
          <target state="translated">minitest-deluxe</target>
        </trans-unit>
        <trans-unit id="d3e6c3b20a5b863c73187a51c66d5744a3ea450d" translate="yes" xml:space="preserve">
          <source>minitest-display</source>
          <target state="translated">minitest-display</target>
        </trans-unit>
        <trans-unit id="2ec7d261db679cab602ab522e91af8415359fc3f" translate="yes" xml:space="preserve">
          <source>minitest-doc_reporter</source>
          <target state="translated">minitest-doc_reporter</target>
        </trans-unit>
        <trans-unit id="f6410e22cbc87a7983967ea43321a13b631a6c3a" translate="yes" xml:space="preserve">
          <source>minitest-documentation</source>
          <target state="translated">minitest-documentation</target>
        </trans-unit>
        <trans-unit id="c38475b8888c4fe129a19832107cdfa4d90824be" translate="yes" xml:space="preserve">
          <source>minitest-emoji</source>
          <target state="translated">minitest-emoji</target>
        </trans-unit>
        <trans-unit id="fe5f13605e64243f875cd67f4eb31d1443ef913b" translate="yes" xml:space="preserve">
          <source>minitest-english</source>
          <target state="translated">minitest-english</target>
        </trans-unit>
        <trans-unit id="f913bb584e4df0b69789238178dc12573ff81b54" translate="yes" xml:space="preserve">
          <source>minitest-excludes</source>
          <target state="translated">minitest-excludes</target>
        </trans-unit>
        <trans-unit id="5a7327bc8df5fce8d0f017dd87b49f225ebe9069" translate="yes" xml:space="preserve">
          <source>minitest-extra-assertions</source>
          <target state="translated">minitest-extra-assertions</target>
        </trans-unit>
        <trans-unit id="c5c7b692c1178f56e17a2e2098a77f285b0bb58b" translate="yes" xml:space="preserve">
          <source>minitest-fail-fast</source>
          <target state="translated">minitest-fail-fast</target>
        </trans-unit>
        <trans-unit id="ba6ff28860df122e1274583f2add1bf82706ce1e" translate="yes" xml:space="preserve">
          <source>minitest-filecontent</source>
          <target state="translated">minitest-filecontent</target>
        </trans-unit>
        <trans-unit id="9b72850aded49bb82456c52fd4aeb15d6779ed2a" translate="yes" xml:space="preserve">
          <source>minitest-filesystem</source>
          <target state="translated">minitest-filesystem</target>
        </trans-unit>
        <trans-unit id="54a387798a384e5f768951ff90b3410c3f129dde" translate="yes" xml:space="preserve">
          <source>minitest-firemock</source>
          <target state="translated">minitest-firemock</target>
        </trans-unit>
        <trans-unit id="f2e7d1313da6452def12605584021f6fa9614d9c" translate="yes" xml:space="preserve">
          <source>minitest-focus</source>
          <target state="translated">minitest-focus</target>
        </trans-unit>
        <trans-unit id="f8c3a1812a63c965d5974715c3610f1f5b17c52d" translate="yes" xml:space="preserve">
          <source>minitest-gcstats</source>
          <target state="translated">minitest-gcstats</target>
        </trans-unit>
        <trans-unit id="5eed0070951279ae4aa5e5b96f3f49b3db7b7cb3" translate="yes" xml:space="preserve">
          <source>minitest-great_expectations</source>
          <target state="translated">minitest-great_expectations</target>
        </trans-unit>
        <trans-unit id="ba2774cd7c769e5fb57431d0f31f849c3cbfdcd4" translate="yes" xml:space="preserve">
          <source>minitest-growl</source>
          <target state="translated">minitest-growl</target>
        </trans-unit>
        <trans-unit id="996e1377f1953bb03c241c34c05642652c1c2005" translate="yes" xml:space="preserve">
          <source>minitest-happy</source>
          <target state="translated">minitest-happy</target>
        </trans-unit>
        <trans-unit id="3d2dadfe6575c5ace67a7799d5fe99a517f16b4f" translate="yes" xml:space="preserve">
          <source>minitest-have_tag</source>
          <target state="translated">minitest-have_tag</target>
        </trans-unit>
        <trans-unit id="3c2d8f63f0afcca53793f8435ef82e08fa28ec6d" translate="yes" xml:space="preserve">
          <source>minitest-hooks</source>
          <target state="translated">minitest-hooks</target>
        </trans-unit>
        <trans-unit id="6b9c8029bea0b3c91edcba103540382e3d6deef8" translate="yes" xml:space="preserve">
          <source>minitest-hyper</source>
          <target state="translated">minitest-hyper</target>
        </trans-unit>
        <trans-unit id="6960d0974477f6d35cb020aa84b7d131a9288d3f" translate="yes" xml:space="preserve">
          <source>minitest-implicit-subject</source>
          <target state="translated">minitest-implicit-subject</target>
        </trans-unit>
        <trans-unit id="6be4f78523ac9e1eb3319b8fd33f1ef8b49fa44e" translate="yes" xml:space="preserve">
          <source>minitest-instrument</source>
          <target state="translated">minitest-instrument</target>
        </trans-unit>
        <trans-unit id="b154887aa89d6e04003918681f74bd7a06b82464" translate="yes" xml:space="preserve">
          <source>minitest-instrument-db</source>
          <target state="translated">minitest-instrument-db</target>
        </trans-unit>
        <trans-unit id="31f3f3d6d5c693b94e7794fbea1d42829ab6b0f3" translate="yes" xml:space="preserve">
          <source>minitest-junit</source>
          <target state="translated">minitest-junit</target>
        </trans-unit>
        <trans-unit id="5c375934be5fc3b9213513ecd53e953541cff0aa" translate="yes" xml:space="preserve">
          <source>minitest-keyword</source>
          <target state="translated">minitest-keyword</target>
        </trans-unit>
        <trans-unit id="d80cfb61a5521a222036c61d85cb02d67530bef5" translate="yes" xml:space="preserve">
          <source>minitest-libnotify</source>
          <target state="translated">minitest-libnotify</target>
        </trans-unit>
        <trans-unit id="0d475713b8bb61bfeb7120aabe497e5bff1a3d27" translate="yes" xml:space="preserve">
          <source>minitest-line</source>
          <target state="translated">minitest-line</target>
        </trans-unit>
        <trans-unit id="a461f30691097d5742263e3d5eb404bba73ba032" translate="yes" xml:space="preserve">
          <source>minitest-logger</source>
          <target state="translated">minitest-logger</target>
        </trans-unit>
        <trans-unit id="175818d6ae5a4ec98ce7385331ef2255bad1a41f" translate="yes" xml:space="preserve">
          <source>minitest-macruby</source>
          <target state="translated">minitest-macruby</target>
        </trans-unit>
        <trans-unit id="c937f48a777852bb767c1d24cafe3b817a90773b" translate="yes" xml:space="preserve">
          <source>minitest-matchers</source>
          <target state="translated">minitest-matchers</target>
        </trans-unit>
        <trans-unit id="dc92957ade2c27dcb9c6c22b99c808d0831eea29" translate="yes" xml:space="preserve">
          <source>minitest-matchers_vaccine</source>
          <target state="translated">minitest-matchers_vaccine</target>
        </trans-unit>
        <trans-unit id="f5353f6f9e20a6683a6d5c9ee26de3048fca440f" translate="yes" xml:space="preserve">
          <source>minitest-metadata</source>
          <target state="translated">minitest-metadata</target>
        </trans-unit>
        <trans-unit id="282c41d9d20e538a3371e76855af9dfed3531669" translate="yes" xml:space="preserve">
          <source>minitest-mongoid</source>
          <target state="translated">minitest-mongoid</target>
        </trans-unit>
        <trans-unit id="5a7759c91ea75580454bac27fcf7146bc55203b7" translate="yes" xml:space="preserve">
          <source>minitest-must_not</source>
          <target state="translated">minitest-must_not</target>
        </trans-unit>
        <trans-unit id="ba13e48e1548634d8f16f4646ee85e94fc1fb6c2" translate="yes" xml:space="preserve">
          <source>minitest-optional_retry</source>
          <target state="translated">minitest-optional_retry</target>
        </trans-unit>
        <trans-unit id="175b40aa4837ecff31d6fe44f33eaf017ec1a604" translate="yes" xml:space="preserve">
          <source>minitest-osx</source>
          <target state="translated">minitest-osx</target>
        </trans-unit>
        <trans-unit id="eddfe342ef1387d137cba8f15e38a4751eb2a7e0" translate="yes" xml:space="preserve">
          <source>minitest-parallel-db</source>
          <target state="translated">minitest-parallel-db</target>
        </trans-unit>
        <trans-unit id="9eb0baf0dfcc4f2930d362cd9fd40ac492a66dd7" translate="yes" xml:space="preserve">
          <source>minitest-parallel_fork</source>
          <target state="translated">minitest-parallel_fork</target>
        </trans-unit>
        <trans-unit id="c2eef5458e32fb6adb17b0cdefde1e668e4b4db3" translate="yes" xml:space="preserve">
          <source>minitest-power_assert</source>
          <target state="translated">minitest-power_assert</target>
        </trans-unit>
        <trans-unit id="c4d37cacd9f1ff71471a2dd81491b33a5b70fef0" translate="yes" xml:space="preserve">
          <source>minitest-predicates</source>
          <target state="translated">minitest-predicates</target>
        </trans-unit>
        <trans-unit id="7f00960555d3eeab692985607f60c18648f08371" translate="yes" xml:space="preserve">
          <source>minitest-profile</source>
          <target state="translated">minitest-profile</target>
        </trans-unit>
        <trans-unit id="aecbc09385395e5f55bad867bc556c6347981cd4" translate="yes" xml:space="preserve">
          <source>minitest-rails</source>
          <target state="translated">minitest-rails</target>
        </trans-unit>
        <trans-unit id="5192da949795335ad4f0720c438fae0935edf90e" translate="yes" xml:space="preserve">
          <source>minitest-rails-capybara</source>
          <target state="translated">minitest-rails-capybara</target>
        </trans-unit>
        <trans-unit id="8f7a0176610a3ab98f0ea511473f82eeed6b1dc3" translate="yes" xml:space="preserve">
          <source>minitest-rails-shoulda</source>
          <target state="translated">minitest-rails-shoulda</target>
        </trans-unit>
        <trans-unit id="c40439e705ff5add9a3d683faa6783eff93e926a" translate="yes" xml:space="preserve">
          <source>minitest-reporters</source>
          <target state="translated">minitest-reporters</target>
        </trans-unit>
        <trans-unit id="7e93476e5e7b5601a76d564843f017e9e1e3ef75" translate="yes" xml:space="preserve">
          <source>minitest-rg</source>
          <target state="translated">minitest-rg</target>
        </trans-unit>
        <trans-unit id="c5553eb5300446e9d3a9802bf07e1bf2b0269f9c" translate="yes" xml:space="preserve">
          <source>minitest-rspec_mocks</source>
          <target state="translated">minitest-rspec_mocks</target>
        </trans-unit>
        <trans-unit id="0f261ff7719e6bf80fa834a6a2d84cfcf356906b" translate="yes" xml:space="preserve">
          <source>minitest-sequel</source>
          <target state="translated">minitest-sequel</target>
        </trans-unit>
        <trans-unit id="4e0663f3b40767e43336fe9d174cfc4ce95bfbd0" translate="yes" xml:space="preserve">
          <source>minitest-server</source>
          <target state="translated">minitest-server</target>
        </trans-unit>
        <trans-unit id="86762e3f1ab412410b96711456add275d5951789" translate="yes" xml:space="preserve">
          <source>minitest-server provides a client/server setup with your minitest process, allowing your test run to send its results directly to a handler.</source>
          <target state="translated">minitest-server 为您的 minitest 进程提供了一个客户端/服务器设置,允许您的测试运行直接将其结果发送到一个处理程序。</target>
        </trans-unit>
        <trans-unit id="d93941f169196e7b2e7e25d8bff778e91d9f0577" translate="yes" xml:space="preserve">
          <source>minitest-shared_description</source>
          <target state="translated">minitest-shared_description</target>
        </trans-unit>
        <trans-unit id="ab9587afa85d93bf053c10f85b581e565eb18108" translate="yes" xml:space="preserve">
          <source>minitest-should_syntax</source>
          <target state="translated">minitest-should_syntax</target>
        </trans-unit>
        <trans-unit id="96820dc723e819460b7a8c790a27e22129d4f8c4" translate="yes" xml:space="preserve">
          <source>minitest-shouldify</source>
          <target state="translated">minitest-shouldify</target>
        </trans-unit>
        <trans-unit id="f4157594388947a09786b029dbcc7e4b34b0420c" translate="yes" xml:space="preserve">
          <source>minitest-snail</source>
          <target state="translated">minitest-snail</target>
        </trans-unit>
        <trans-unit id="15ba6425dd357d21e736a0178c2b489308fedea8" translate="yes" xml:space="preserve">
          <source>minitest-spec</source>
          <target state="translated">minitest-spec</target>
        </trans-unit>
        <trans-unit id="9c8460386103ffbd882fb88e1dc19cec65124c55" translate="yes" xml:space="preserve">
          <source>minitest-spec-context</source>
          <target state="translated">minitest-spec-context</target>
        </trans-unit>
        <trans-unit id="6c45c44a291db04477b7f092e194962d1e61c4fb" translate="yes" xml:space="preserve">
          <source>minitest-spec-expect</source>
          <target state="translated">minitest-spec-expect</target>
        </trans-unit>
        <trans-unit id="f4487d0a0397bb9649d12a608840470c3bea87fc" translate="yes" xml:space="preserve">
          <source>minitest-spec-magic</source>
          <target state="translated">minitest-spec-magic</target>
        </trans-unit>
        <trans-unit id="996b7b92a7da7a195c000b15d2a04558c638eaf5" translate="yes" xml:space="preserve">
          <source>minitest-spec-rails</source>
          <target state="translated">minitest-spec-rails</target>
        </trans-unit>
        <trans-unit id="f04d44b1ef0758ac2ef16308b2e3e3df28e912da" translate="yes" xml:space="preserve">
          <source>minitest-spec-should</source>
          <target state="translated">minitest-spec-should</target>
        </trans-unit>
        <trans-unit id="b129e7edd213dfd2df715b602a32c16acdcb1c8f" translate="yes" xml:space="preserve">
          <source>minitest-sprint</source>
          <target state="translated">minitest-sprint</target>
        </trans-unit>
        <trans-unit id="9e5ce8e446e9422788ec24ad537a1be10e89a9b2" translate="yes" xml:space="preserve">
          <source>minitest-stately</source>
          <target state="translated">minitest-stately</target>
        </trans-unit>
        <trans-unit id="ca3c08f1258b2f4cc9cf2b8016ba4c3d6b62fc08" translate="yes" xml:space="preserve">
          <source>minitest-stub-const</source>
          <target state="translated">minitest-stub-const</target>
        </trans-unit>
        <trans-unit id="ca8e82f3de7125421e7580d6de86c932f500648c" translate="yes" xml:space="preserve">
          <source>minitest-stub_any_instance</source>
          <target state="translated">minitest-stub_any_instance</target>
        </trans-unit>
        <trans-unit id="f6eb540399b99ff6c113038ba14e95c09a6eff34" translate="yes" xml:space="preserve">
          <source>minitest-sugar</source>
          <target state="translated">minitest-sugar</target>
        </trans-unit>
        <trans-unit id="045cfd4c689d6fa174adf7cf0b5edcbfcd9d25e1" translate="yes" xml:space="preserve">
          <source>minitest-tags</source>
          <target state="translated">minitest-tags</target>
        </trans-unit>
        <trans-unit id="f49666eec7047d6accb9c2dbecb8bee6d120a965" translate="yes" xml:space="preserve">
          <source>minitest-unordered</source>
          <target state="translated">minitest-unordered</target>
        </trans-unit>
        <trans-unit id="dd7634a18f3aa23141cbbbe10c42332a4746f585" translate="yes" xml:space="preserve">
          <source>minitest-vcr</source>
          <target state="translated">minitest-vcr</target>
        </trans-unit>
        <trans-unit id="a09d7d2b2e48dd895ddc2f5734bf313354a4ea20" translate="yes" xml:space="preserve">
          <source>minitest/autorun - the easy and explicit way to run all your tests.</source>
          <target state="translated">minitest/autorun-运行所有测试的简单而明确的方法。</target>
        </trans-unit>
        <trans-unit id="f436e6b86951ce8665603327168d191cd8b41b56" translate="yes" xml:space="preserve">
          <source>minitest/benchmark - an awesome way to assert your algorithm's performance.</source>
          <target state="translated">minitest/benchmark--这是一个很好的方法来保证你的算法的性能。</target>
        </trans-unit>
        <trans-unit id="a840ea4f22c4bd7a252d58b2e92aea785beb22fe" translate="yes" xml:space="preserve">
          <source>minitest/benchmark is an awesome way to assert the performance of your algorithms in a repeatable manner. Now you can assert that your newb co-worker doesn't replace your linear algorithm with an exponential one!</source>
          <target state="translated">minitest/benchmark是一种以可重复的方式断言你的算法性能的很棒的方法。现在,你可以断言你的新同事没有用指数算法替换你的线性算法了。</target>
        </trans-unit>
        <trans-unit id="18a8096d5f20284d78750e73323e0073110c52be" translate="yes" xml:space="preserve">
          <source>minitest/mock - a simple and clean mock/stub system.</source>
          <target state="translated">minitest/mock-一个简单干净的mock/stub系统。</target>
        </trans-unit>
        <trans-unit id="f636aff7de932cc30d873594091bacb345855693" translate="yes" xml:space="preserve">
          <source>minitest/mock by Steven Baker, is a beautifully tiny mock (and stub) object framework.</source>
          <target state="translated">minitest/mock由Steven Baker编写,是一个精美的小型mock(和stub)对象框架。</target>
        </trans-unit>
        <trans-unit id="63b2eff6c6594082beaaa39f37bdc02db7b108e1" translate="yes" xml:space="preserve">
          <source>minitest/pride - show your pride in testing!</source>
          <target state="translated">minitest/自豪感--在测试中展现你的自豪感!</target>
        </trans-unit>
        <trans-unit id="c7a5fc6089f4ad0ebc0091fc25bfc50196d958d6" translate="yes" xml:space="preserve">
          <source>minitest/pride fabric: &lt;a href=&quot;http://www.spoonflower.com/fabric/3928730-again-by-katie_allen&quot;&gt;www.spoonflower.com/fabric/3928730-again-by-katie_allen&lt;/a&gt;</source>
          <target state="translated">迷你测试/骄傲面料：&lt;a href=&quot;http://www.spoonflower.com/fabric/3928730-again-by-katie_allen&quot;&gt;www.spoonflower.com/fabric/3928730-again-by-katie_allen&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4a55aacb3ec9f09b3ac663adc58f78159d4a0651" translate="yes" xml:space="preserve">
          <source>minitest/pride shows pride in testing and adds coloring to your test output. I guess it is an example of how to write IO pipes too. :P</source>
          <target state="translated">minitest/pride在测试中表现出自豪感,并为你的测试输出添加色彩。我想这也是一个如何写IO管道的例子吧。 :P</target>
        </trans-unit>
        <trans-unit id="e7f1cb71f4487ef71caf6f24acff72b766e368a3" translate="yes" xml:space="preserve">
          <source>minitest/spec - a very fast, simple, and clean spec system.</source>
          <target state="translated">minitest/spec-一个非常快速、简单、干净的规格系统。</target>
        </trans-unit>
        <trans-unit id="d07559f9173bddc8ab71573a18acad45d20ae336" translate="yes" xml:space="preserve">
          <source>minitest/spec is a functionally complete spec engine. It hooks onto minitest/test and seamlessly bridges test assertions over to spec expectations.</source>
          <target state="translated">minitest/spec 是一个功能完整的规范引擎。它与 minitest/test 挂钩,并将测试断言与规范期望无缝衔接。</target>
        </trans-unit>
        <trans-unit id="155daba2bd152d8277e28fe2eefd1fed1f3b6b3b" translate="yes" xml:space="preserve">
          <source>minitest/test - a very fast, simple, and clean test system.</source>
          <target state="translated">minitest/test-一个非常快速、简单、干净的测试系统。</target>
        </trans-unit>
        <trans-unit id="5db506cffd0ab90c1cb4ec4c1d581c42c9609011" translate="yes" xml:space="preserve">
          <source>minitest/test is a small and incredibly fast unit testing framework. It provides a rich set of assertions to make your tests clean and readable.</source>
          <target state="translated">minitest/test是一个小而快的单元测试框架。它提供了一套丰富的断言,让你的测试变得干净和可读。</target>
        </trans-unit>
        <trans-unit id="b5fc8772bf4e4e73a0d152059134f1bb1c18fd4e" translate="yes" xml:space="preserve">
          <source>minitest/test is meant to have a clean implementation for language implementors that need a minimal set of methods to bootstrap a working test suite. For example, there is no magic involved for test-case discovery.</source>
          <target state="translated">minitest/test 的目的是为语言实现者提供一个简洁的实现,这些语言实现者需要一组最小的方法来引导一个工作的测试套件。例如,测试用例的发现不涉及任何魔法。</target>
        </trans-unit>
        <trans-unit id="a5e3b150f8a327fd0fe0a0fe7a1329e5a52a130f" translate="yes" xml:space="preserve">
          <source>minitest/{test,spec,mock,benchmark}</source>
          <target state="translated">minitest/{test,spec,mock,benchmark}</target>
        </trans-unit>
        <trans-unit id="844e79750a3c845ac341ea9fd634de65842db4d8" translate="yes" xml:space="preserve">
          <source>minitest_owrapper</source>
          <target state="translated">minitest_owrapper</target>
        </trans-unit>
        <trans-unit id="6127c474325234ba870fda9cdc2663fd0f6c1b56" translate="yes" xml:space="preserve">
          <source>minitest_should</source>
          <target state="translated">minitest_should</target>
        </trans-unit>
        <trans-unit id="be6b9eabb98819e0cabd5a74c1fcdd74b514f12c" translate="yes" xml:space="preserve">
          <source>minitest_tu_shim</source>
          <target state="translated">minitest_tu_shim</target>
        </trans-unit>
        <trans-unit id="4969a292478d668dddd3166ec4e950496e8f2b8f" translate="yes" xml:space="preserve">
          <source>module Kernel</source>
          <target state="translated">核心模块</target>
        </trans-unit>
        <trans-unit id="05f2b0efa8403ccff14015f262866648f6259f5f" translate="yes" xml:space="preserve">
          <source>module Minitest</source>
          <target state="translated">模块Minitest</target>
        </trans-unit>
        <trans-unit id="df54c611c7de77abb80e054b03d0f3c9e069e257" translate="yes" xml:space="preserve">
          <source>module Minitest::Assertions</source>
          <target state="translated">模块 Minitest::Assertions</target>
        </trans-unit>
        <trans-unit id="b01c044f1664ba64b8ec5e9061caa55f67ce5fe7" translate="yes" xml:space="preserve">
          <source>module Minitest::Expectations</source>
          <target state="translated">模块 Minitest::Expectations</target>
        </trans-unit>
        <trans-unit id="84a58367f433877d6a0c2aa721a24da2efeae8ac" translate="yes" xml:space="preserve">
          <source>module Minitest::Guard</source>
          <target state="translated">模块Minitest::Guard</target>
        </trans-unit>
        <trans-unit id="cad5da778291bb34d57a6b8b2c304ad85ba2cfc1" translate="yes" xml:space="preserve">
          <source>module Minitest::Reportable</source>
          <target state="translated">模块 Minitest::Reportable</target>
        </trans-unit>
        <trans-unit id="6c853fad8abf94fbac995dc89e0916e83a8efbf3" translate="yes" xml:space="preserve">
          <source>module Minitest::Spec::DSL</source>
          <target state="translated">模块 Minitest::Spec::DSL</target>
        </trans-unit>
        <trans-unit id="9087b39d2c08942e5455f6eea88c57b74c954977" translate="yes" xml:space="preserve">
          <source>module Minitest::Spec::DSL::InstanceMethods</source>
          <target state="translated">模块Minitest::Spec::DSL::InstanceMethods。</target>
        </trans-unit>
        <trans-unit id="6ceb2c5bd2d647241256cccb1031ea7ec7bcc225" translate="yes" xml:space="preserve">
          <source>module Minitest::Test::LifecycleHooks</source>
          <target state="translated">模块Minitest::Test::LifecycleHooks。</target>
        </trans-unit>
        <trans-unit id="493049ceb649ecf5d7c3be724f664994bd1cf332" translate="yes" xml:space="preserve">
          <source>mongoid-minitest</source>
          <target state="translated">mongoid-minitest</target>
        </trans-unit>
        <trans-unit id="a6775676600da46465928ba98feebc985fb379c6" translate="yes" xml:space="preserve">
          <source>mri?(platform = RUBY_DESCRIPTION)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">mri？（platform = RUBY_DESCRIPTION）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a06200a6402096828530e8169c74a25ca004bb49" translate="yes" xml:space="preserve">
          <source>mu_pp(obj)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">mu_pp（obj）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3ae91e24cac39e92d88942be2a91e60f11d0f00e" translate="yes" xml:space="preserve">
          <source>mu_pp_for_diff(obj)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">mu_pp_for_diff（obj）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a7922eed16e0d9875c9e246cfd01814468380c77" translate="yes" xml:space="preserve">
          <source>must_be()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">must_be（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="240417b7116f34abfa9df43763e314b315fe2b5e" translate="yes" xml:space="preserve">
          <source>must_be_close_to()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">must_be_close_to（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="96d26d821f839d921ab85c98b47922ab37c9a774" translate="yes" xml:space="preserve">
          <source>must_be_empty()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">must_be_empty（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="95c062e1dc0a91a1184c0f953890fbdfa833b7c0" translate="yes" xml:space="preserve">
          <source>must_be_instance_of()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">must_be_instance_of（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6be43110b60ea91b353a7df300bfd31f63070078" translate="yes" xml:space="preserve">
          <source>must_be_kind_of()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">must_be_kind_of（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="18fabe6da45364ad4f90222ddd94aaaccdf48216" translate="yes" xml:space="preserve">
          <source>must_be_nil()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">must_be_nil（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="91cc4a4ad38337b83e0ca8624938f2194c963e35" translate="yes" xml:space="preserve">
          <source>must_be_same_as()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">must_be_same_as（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="47f974805ff6c926b6824e540ef3ae942800ef61" translate="yes" xml:space="preserve">
          <source>must_be_silent()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">must_be_silent（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="575d24943fec7b16637a98e7e9a20371022ad9a3" translate="yes" xml:space="preserve">
          <source>must_be_within_delta()</source>
          <target state="translated">must_be_within_delta()</target>
        </trans-unit>
        <trans-unit id="d47d57edda4a0a0cbbf94bded7aca11175fb9f30" translate="yes" xml:space="preserve">
          <source>must_be_within_epsilon()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">must_be_within_epsilon（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0517fa39a319b14841cc2caa7003d2df3065d227" translate="yes" xml:space="preserve">
          <source>must_equal()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">must_equal（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ab4aecb6739c547391801e8a35dacf2f856538c9" translate="yes" xml:space="preserve">
          <source>must_include()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">must_include（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1aed626c35ac0fa91c04844449f08fd89c6a92e5" translate="yes" xml:space="preserve">
          <source>must_match()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">must_match（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ec3db4efc9b04c18a397b137dea50a754cf4488a" translate="yes" xml:space="preserve">
          <source>must_output()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">must_output（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="df48bac929d176efb88699cd8711f8ce852976eb" translate="yes" xml:space="preserve">
          <source>must_raise()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">must_raise（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a9431d924a608d3e2487dadb082960583da6875b" translate="yes" xml:space="preserve">
          <source>must_respond_to()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">must_respond_to（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="76828200531eaec1e3183afe5f42b55cbe488031" translate="yes" xml:space="preserve">
          <source>must_throw()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">must_throw（）&lt;a&gt;显示源代码&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6b7103eb4099f3c2fc4a48ed2afb589d5f740d91" translate="yes" xml:space="preserve">
          <source>name()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">name（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="623f1adb6e5c2de60bd1d83846c7fd3293fc09b7" translate="yes" xml:space="preserve">
          <source>name=(o)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">名称=（o）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="79a2dd72ed3feb7d3d88d3ccd12c482fe2730747" translate="yes" xml:space="preserve">
          <source>new(size)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">new（size）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3e0635644e5f1ee9be6ec8273aef39decdcc6222" translate="yes" xml:space="preserve">
          <source>nokogiri</source>
          <target state="translated">nokogiri</target>
        </trans-unit>
        <trans-unit id="73585a50dc1d29d92585c20a7e79287cfba6f7ea" translate="yes" xml:space="preserve">
          <source>or you can extend the Worker class (within the test file!), like:</source>
          <target state="translated">或者你可以扩展Worker类(在测试文件中!),比如。</target>
        </trans-unit>
        <trans-unit id="1d9ad0addee82809659247e9008e6f9e82aa9000" translate="yes" xml:space="preserve">
          <source>or:</source>
          <target state="translated">or:</target>
        </trans-unit>
        <trans-unit id="1825072ed227d78f610a0fb8fc2285392f1d5363" translate="yes" xml:space="preserve">
          <source>outputs a failure:</source>
          <target state="translated">输出失败。</target>
        </trans-unit>
        <trans-unit id="9baceb04ef69b4f3f7c01c50ad4ad5ce58c67f74" translate="yes" xml:space="preserve">
          <source>outputs something like:</source>
          <target state="translated">输出类似于:</target>
        </trans-unit>
        <trans-unit id="28f6eaf0dc596538e9b184e4c928dc6f929fce58" translate="yes" xml:space="preserve">
          <source>parallelize_me!</source>
          <target state="translated">parallelize_me!</target>
        </trans-unit>
        <trans-unit id="5ceea591c15f86302bdf2f97c4b5be2450d9882c" translate="yes" xml:space="preserve">
          <source>parallelize_me!()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">parallelize_me！（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2b7edf073d9f88655fe16baea017188534aaa43e" translate="yes" xml:space="preserve">
          <source>pass(_msg = nil)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">pass（_msg = nil）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="283fd04328b234b958eb9216346191d68e7f0478" translate="yes" xml:space="preserve">
          <source>passed?</source>
          <target state="translated">passed?</target>
        </trans-unit>
        <trans-unit id="d8b4207e47a3ce508d3e32a5e4ab750b126ef8a8" translate="yes" xml:space="preserve">
          <source>passed?()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">通过了？（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9f4f9319bd8dfcd38a90a0ecb14955291f8467fc" translate="yes" xml:space="preserve">
          <source>prerecord(klass, name)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">prerecord（玻璃罐，名字）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0cc6131994eb887e586784763708cb98d2033e94" translate="yes" xml:space="preserve">
          <source>pride!</source>
          <target state="translated">pride!</target>
        </trans-unit>
        <trans-unit id="0d989a0a46bce70cb8c20e4171c0a059a88d72ac" translate="yes" xml:space="preserve">
          <source>pride!()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">骄傲！（）&lt;a&gt;显示源代码&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="20cbfa17f9c58f0f241cbd3971275668aa83f10f" translate="yes" xml:space="preserve">
          <source>pride(string)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">pride（string）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e553be18f657fdf8129646aa80f28fe3985f3612" translate="yes" xml:space="preserve">
          <source>pride?</source>
          <target state="translated">pride?</target>
        </trans-unit>
        <trans-unit id="4cc47e1d4d28585ffef97cd8ca9c3d3b006ba3b3" translate="yes" xml:space="preserve">
          <source>pride?()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">骄傲？（）&lt;a&gt;显示源代码&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2805b1527a5b4a5b6a7e7dbbcd7425e2f68c9c97" translate="yes" xml:space="preserve">
          <source>print(o)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">打印（o）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4ad4accf94dc3574ccdfe66f047ff96b3f213dc3" translate="yes" xml:space="preserve">
          <source>pry-rescue</source>
          <target state="translated">pry-rescue</target>
        </trans-unit>
        <trans-unit id="a085160158ab9d99ca54cf1876b36dddee2ad764" translate="yes" xml:space="preserve">
          <source>rails (active_support et al)</source>
          <target state="translated">rails (active_support等)</target>
        </trans-unit>
        <trans-unit id="4e3f6808349ac04b7b0430acc2169460087416e0" translate="yes" xml:space="preserve">
          <source>rake</source>
          <target state="translated">rake</target>
        </trans-unit>
        <trans-unit id="9c87d8642517940ade4014af91b83572c6648359" translate="yes" xml:space="preserve">
          <source>rdoc</source>
          <target state="translated">rdoc</target>
        </trans-unit>
        <trans-unit id="275a700078f03f25e840fd7ed4d0be5d2e30e359" translate="yes" xml:space="preserve">
          <source>record</source>
          <target state="translated">record</target>
        </trans-unit>
        <trans-unit id="1d9da91543bac3b6f8dcf3f378ba7b2190b9617f" translate="yes" xml:space="preserve">
          <source>record(result)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">记录（结果）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f969ca10e1c2852738cb0a7a1446a34177b440a2" translate="yes" xml:space="preserve">
          <source>refute(test, msg = nil)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">refute（test，msg = nil）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e001106374e9dc2f5823bcde66f0d30903e5ecfb" translate="yes" xml:space="preserve">
          <source>refute_empty(obj, msg = nil)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">refute_empty（obj，msg = nil）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="161606e1516826300b10b7cf6fb8e914d3222c2e" translate="yes" xml:space="preserve">
          <source>refute_equal(exp, act, msg = nil)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">refute_equal（exp，act，msg = nil）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7ed7c8813fb84c7e4486e1eccc3185b14a07fd51" translate="yes" xml:space="preserve">
          <source>refute_in_delta(exp, act, delta = 0.001, msg = nil)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">refute_in_delta（exp，act，delta = 0.001，msg = nil）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="08531288ceda6e0176288a7e1396259d7d0c4610" translate="yes" xml:space="preserve">
          <source>refute_in_epsilon(a, b, epsilon = 0.001, msg = nil)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">refute_in_epsilon（a，b，epsilon = 0.001，msg = nil）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2200644515daa9d9d258ecf90f7b028a332c13fc" translate="yes" xml:space="preserve">
          <source>refute_includes(collection, obj, msg = nil)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">refute_includes（collection，obj，msg = nil）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1147bceb395a0bbb121bdbc8d3dd26fbd13102a4" translate="yes" xml:space="preserve">
          <source>refute_instance_of(cls, obj, msg = nil)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">refute_instance_of（cls，obj，msg = nil）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f917c166fdcb50d14b3e81ef73346fed04c7e567" translate="yes" xml:space="preserve">
          <source>refute_kind_of(cls, obj, msg = nil)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">refute_kind_of（cls，obj，msg = nil）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="092025e75d50df4a0facbb5a8919355575e57781" translate="yes" xml:space="preserve">
          <source>refute_match(matcher, obj, msg = nil)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">refute_match（matcher，obj，msg = nil）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b3d61ed424353213786a57feaf4d8e67e0ad179e" translate="yes" xml:space="preserve">
          <source>refute_nil(obj, msg = nil)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">refute_nil（obj，msg = nil）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="71753a0d7c18a0eeaaada4c79d6812ea7db18b60" translate="yes" xml:space="preserve">
          <source>refute_operator(o1, op, o2 = UNDEFINED, msg = nil)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">refute_operator（o1，op，o2 = UNDEFINED，msg = nil）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d4494fd3f4c90432bd4a3a2fdc715842f6136cf8" translate="yes" xml:space="preserve">
          <source>refute_predicate(o1, op, msg = nil)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">refute_predicate（o1，op，msg = nil）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="783be6d158733ff4832acb555f1a9b2477b980b9" translate="yes" xml:space="preserve">
          <source>refute_respond_to(obj, meth, msg = nil)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">refute_respond_to（obj，meth，msg = nil）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="597bf687ae6ee792e4d64fd38d503ae98cd611be" translate="yes" xml:space="preserve">
          <source>refute_same(exp, act, msg = nil)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">refute_same（exp，act，msg = nil）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2db0fb54ba5f1f2ad723baa93b338966786d6339" translate="yes" xml:space="preserve">
          <source>register_spec_type(*args, &amp;amp;block)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">register_spec_type（* args，＆block）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a27297bde9732f2e73fbc06db2611764e3ad9855" translate="yes" xml:space="preserve">
          <source>report</source>
          <target state="translated">report</target>
        </trans-unit>
        <trans-unit id="039419fa9af79529fc66fab2b98be3c6b7b46029" translate="yes" xml:space="preserve">
          <source>report()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">report（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4a451e756e5b923a7335d44700d4a1a484251cfd" translate="yes" xml:space="preserve">
          <source>reporters[RW]</source>
          <target state="translated">reporters[RW]</target>
        </trans-unit>
        <trans-unit id="6e76f1b70e59fed13f0433a0cad1628de81032b7" translate="yes" xml:space="preserve">
          <source>result_code()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">result_code（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3d22ec4500a7333b1202684d98ddc19dfb0b5874" translate="yes" xml:space="preserve">
          <source>rspec2minitest</source>
          <target state="translated">rspec2minitest</target>
        </trans-unit>
        <trans-unit id="fbb950f1148e7290a8ecc43b1f3aafa522a4cfb9" translate="yes" xml:space="preserve">
          <source>rubinius?(platform = defined?(RUBY_ENGINE) &amp;amp;&amp;amp; RUBY_ENGINE)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">rubinius？（平台=已定义？（RUBY_ENGINE）&amp;amp;&amp;amp; RUBY_ENGINE）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d5bd5c5ad56cf8dad37a8dc5fbdfe8d7157674a9" translate="yes" xml:space="preserve">
          <source>run()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">run（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="81b7a1d3a84048e85e7ce389ed4fccf6af9d8ada" translate="yes" xml:space="preserve">
          <source>run(args = [])&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">运行（args = []）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ccd47503e6d001133684b506dfed086f48339ae0" translate="yes" xml:space="preserve">
          <source>run(reporter, options = {})&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">运行（报告程序，选项= {}）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ca48af7ed44c2caeb7b36eec002fd1d9db820cdf" translate="yes" xml:space="preserve">
          <source>run_one_method</source>
          <target state="translated">run_one_method</target>
        </trans-unit>
        <trans-unit id="4e41e4474046a9a445498263557446133869ef97" translate="yes" xml:space="preserve">
          <source>run_one_method(klass, method_name, reporter)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">run_one_method（类别，方法名称，报告者）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="97820ce341e719766ab21f5621499324d45933ac" translate="yes" xml:space="preserve">
          <source>runnable_methods</source>
          <target state="translated">runnable_methods</target>
        </trans-unit>
        <trans-unit id="746637e5c88bef9a191a6383c44ab15947b2b764" translate="yes" xml:space="preserve">
          <source>runnable_methods()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">runnable_methods（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e5023817e18bc851a27d9b7fd973f24d9d6a8850" translate="yes" xml:space="preserve">
          <source>runnables</source>
          <target state="translated">runnables</target>
        </trans-unit>
        <trans-unit id="aaa5334ed893233e0459221e9c6da176888e2ab7" translate="yes" xml:space="preserve">
          <source>runnables()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">runnables（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="927e2c4031ceae21f795cbb9ac1134f4d76ea94a" translate="yes" xml:space="preserve">
          <source>setup()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">setup（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6144cc4a3ff2ad24b69703cf31595e7bec8005ee" translate="yes" xml:space="preserve">
          <source>shutdown()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">shutdown（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2bde34054ade002d8d6c93b12b76fa15d69a1c42" translate="yes" xml:space="preserve">
          <source>sigma(enum, &amp;amp;block)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">sigma（enum，＆block）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b7af5a64c03e74696ff8874934ffd19b1b6e7adf" translate="yes" xml:space="preserve">
          <source>size[R]</source>
          <target state="translated">size[R]</target>
        </trans-unit>
        <trans-unit id="2bfeba1734e76680b7d45a5a5f819390a12a8da5" translate="yes" xml:space="preserve">
          <source>skip(msg = nil, bt = caller)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">skip（msg = nil，bt = caller）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ae46796774a976b1962460cee35772d92177e242" translate="yes" xml:space="preserve">
          <source>skipped?()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">跳过？（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="58c0edf54416589247ad00bd22c60b9adeaf3bfe" translate="yes" xml:space="preserve">
          <source>source_location[RW]</source>
          <target state="translated">source_location[RW]</target>
        </trans-unit>
        <trans-unit id="42962bb59b8a47e397dd037e5fbe9856a37391be" translate="yes" xml:space="preserve">
          <source>spec_type(desc, *additional)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">spec_type（desc，* additional）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ddebb1671e8ed7d0209d4da580cfe2e6805e5143" translate="yes" xml:space="preserve">
          <source>specify(desc = &quot;anonymous&quot;, &amp;amp;block)</source>
          <target state="translated">指定（desc =&amp;ldquo; anonymous&amp;rdquo;，＆block）</target>
        </trans-unit>
        <trans-unit id="c5f68e6763ac7c4d00173b405f47e4bfd96048a9" translate="yes" xml:space="preserve">
          <source>spork-minitest</source>
          <target state="translated">spork-minitest</target>
        </trans-unit>
        <trans-unit id="2b020927d3c6eb407223a1baa3d6ce3597a3f88d" translate="yes" xml:space="preserve">
          <source>start</source>
          <target state="translated">start</target>
        </trans-unit>
        <trans-unit id="10849d5f05a17ffc29e9a248743db4d04a271fe1" translate="yes" xml:space="preserve">
          <source>start()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">start（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ba97cfbe5338efbac5211079214bfe6ab21ef63d" translate="yes" xml:space="preserve">
          <source>stub(name, val_or_callable, *block_args) { |self| ... }&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">存根（名称，val_or_callable，* block_args）{|自我| ...} &lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="640f0620553282daf32601cafdd574b38c033674" translate="yes" xml:space="preserve">
          <source>subject(&amp;amp;block)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">subject（＆block）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0f8532f60631bdd43944b51a78c65feddbc7336b" translate="yes" xml:space="preserve">
          <source>teardown()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">teardown（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fcacd5c2d08235be629cb0ee55d90e1bf8ef16d2" translate="yes" xml:space="preserve">
          <source>test_order</source>
          <target state="translated">test_order</target>
        </trans-unit>
        <trans-unit id="316357e76bc51a68cf8d4c63317eacb7cb6e7945" translate="yes" xml:space="preserve">
          <source>test_order()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">test_order（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="62ff1186be3f9edd0eb9a674aaa2d42d98ad4b4d" translate="yes" xml:space="preserve">
          <source>time[RW]</source>
          <target state="translated">time[RW]</target>
        </trans-unit>
        <trans-unit id="52c7dcf369ea2be3bf7e4d6653a136c7d2575c3f" translate="yes" xml:space="preserve">
          <source>unknown()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">unknown（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="487f165af8661e7c62d7cadde8bcda5553d4d2c2" translate="yes" xml:space="preserve">
          <source>used for counting assertions</source>
          <target state="translated">喥</target>
        </trans-unit>
        <trans-unit id="a5156a95cf52b4b39752b877d775e4723109eab2" translate="yes" xml:space="preserve">
          <source>validation_for_fit(msg, threshold)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">validation_for_fit（信息，阈值）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="55c457936796a167560d484518a45a9ddc3c953e" translate="yes" xml:space="preserve">
          <source>value(value = nil, &amp;amp;block)</source>
          <target state="translated">值（值=零，＆块）</target>
        </trans-unit>
        <trans-unit id="a5c7127d564ca03af56893d3c4130cf9366778eb" translate="yes" xml:space="preserve">
          <source>verify()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">verify（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e1a58852a14e3a9968e89097ccb1fc37f2deba01" translate="yes" xml:space="preserve">
          <source>vim</source>
          <target state="translated">vim</target>
        </trans-unit>
        <trans-unit id="56f51ca85ba6d73591537ae18b64d0c8b3cdf17e" translate="yes" xml:space="preserve">
          <source>windows?(platform = RUBY_PLATFORM)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">Windows？（平台= RUBY_PLATFORM）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c1c4e0608d2e233fd0b038325862cee75a778969" translate="yes" xml:space="preserve">
          <source>wont_be()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">wont_be（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c2c71a08a94da64d43b4c00bd59549039c1cf2ea" translate="yes" xml:space="preserve">
          <source>wont_be_close_to()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">wont_be_close_to（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6ee7e0c115ad6e40eec4d937d91ef02ef841799f" translate="yes" xml:space="preserve">
          <source>wont_be_empty()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">wont_be_empty（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="736b3eaea40e7077f3bfae33b0f163145710d1ab" translate="yes" xml:space="preserve">
          <source>wont_be_instance_of()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">wont_be_instance_of（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f432632d3f83e94982cf72608205d8b1b890ae80" translate="yes" xml:space="preserve">
          <source>wont_be_kind_of()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">wont_be_kind_of（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9598d586a6cd7f98f53f18f6fc3cd9113fbb11cb" translate="yes" xml:space="preserve">
          <source>wont_be_nil()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">wont_be_nil（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
