<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="elisp">
    <body>
      <group id="elisp">
        <trans-unit id="86bc094886fdeba60f289e032c68c8317ae4043d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;delete&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the function deletes the text between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; after copying it, like &lt;code&gt;delete-and-extract-region&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;var&gt;delete&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则该函数在复制后在 &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 之间删除文本，例如 &lt;code&gt;delete-and-extract-region&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="583bbbf5f052337915c912c6916ac7ea82f20788" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;depth&lt;/var&gt; is nonzero, treat the starting position as being &lt;var&gt;depth&lt;/var&gt; parentheses deep. The scanner moves forward or backward through the buffer until the depth changes to zero &lt;var&gt;count&lt;/var&gt; times. Hence, a positive value for &lt;var&gt;depth&lt;/var&gt; has the effect of moving out &lt;var&gt;depth&lt;/var&gt; levels of parenthesis from the starting position, while a negative &lt;var&gt;depth&lt;/var&gt; has the effect of moving deeper by &lt;var&gt;-depth&lt;/var&gt; levels of parenthesis.</source>
          <target state="translated">如果 &lt;var&gt;depth&lt;/var&gt; 不为零，则将起始位置视为 &lt;var&gt;depth&lt;/var&gt; 括号。扫描仪在缓冲区中向前或向后移动，直到深度变为零 &lt;var&gt;count&lt;/var&gt; 时间为止。因此，对于正的值 &lt;var&gt;depth&lt;/var&gt; 具有移动出来的效果 &lt;var&gt;depth&lt;/var&gt; 从起始位置括号的水平，而负 &lt;var&gt;depth&lt;/var&gt; 具有由更深移动的效果 &lt;var&gt;-depth&lt;/var&gt; 括号的水平。</target>
        </trans-unit>
        <trans-unit id="e570710a94fca9498161ecc4ef84a4efd598a9fb" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;device-name&lt;/var&gt; is a non-empty string identifying a network interface name (see &lt;code&gt;network-interface-list&lt;/code&gt;), only handle packets received on that interface. If &lt;var&gt;device-name&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; (the default), handle packets received on any interface.</source>
          <target state="translated">如果 &lt;var&gt;device-name&lt;/var&gt; 是标识网络接口名称的非空字符串（请参阅 &lt;code&gt;network-interface-list&lt;/code&gt; ），则仅处理在该接口上收到的数据包。如果 &lt;var&gt;device-name&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; （默认值），则处理在任何接口上收到的数据包。</target>
        </trans-unit>
        <trans-unit id="12f30a418a7e15703ff91629848e61377eccace2" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;dir-flag&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;make-temp-file&lt;/code&gt; creates an empty directory instead of an empty file. It returns the file name, not the directory name, of that directory. See &lt;a href=&quot;directory-names#Directory-Names&quot;&gt;Directory Names&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;var&gt;dir-flag&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;make-temp-file&lt;/code&gt; 创建一个空目录，而不是一个空文件。它返回该目录的文件名，而不是目录名。请参阅&lt;a href=&quot;directory-names#Directory-Names&quot;&gt;目录名称&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="382c60da8a13c8d050fbe0739934b6aa2ac57217" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;display-flag&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, as it always is in interactive calls, that means to display the new buffer by calling &lt;code&gt;pop-to-buffer&lt;/code&gt;. If &lt;var&gt;norecord&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that means not to put the new buffer to the front of the buffer list.</source>
          <target state="translated">如果 &lt;var&gt;display-flag&lt;/var&gt; 是non - &lt;code&gt;nil&lt;/code&gt; ，那么在交互式调用中总是如此，这意味着通过调用 &lt;code&gt;pop-to-buffer&lt;/code&gt; 来显示新的缓冲区。如果 &lt;var&gt;norecord&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则表示不要将新缓冲区放在缓冲区列表的最前面。</target>
        </trans-unit>
        <trans-unit id="d1e8d3736b52fa94007796d9c1692ce665882dce" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;display&lt;/var&gt; is a list, each element should have the form &lt;code&gt;(&lt;var&gt;characteristic&lt;/var&gt; &lt;var&gt;value&lt;/var&gt;&amp;hellip;)&lt;/code&gt;. Here &lt;var&gt;characteristic&lt;/var&gt; specifies a way of classifying terminals, and the &lt;var&gt;value&lt;/var&gt;s are possible classifications which &lt;var&gt;display&lt;/var&gt; should apply to. Here are the possible values of &lt;var&gt;characteristic&lt;/var&gt;:</source>
          <target state="translated">如果 &lt;var&gt;display&lt;/var&gt; 是一个列表，则每个元素都应具有 &lt;code&gt;(&lt;var&gt;characteristic&lt;/var&gt; &lt;var&gt;value&lt;/var&gt;&amp;hellip;)&lt;/code&gt; 形式。在此， &lt;var&gt;characteristic&lt;/var&gt; 指定了对端子进行分类的方式，而 &lt;var&gt;value&lt;/var&gt; s是可能应适用于 &lt;var&gt;display&lt;/var&gt; 分类。以下是 &lt;var&gt;characteristic&lt;/var&gt; 的可能值：</target>
        </trans-unit>
        <trans-unit id="d174f427d4eaafddfb52beb9773287900f2dc3d1" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;display&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;call-process&lt;/code&gt; redisplays the buffer as output is inserted. (However, if the coding system chosen for decoding output is &lt;code&gt;undecided&lt;/code&gt;, meaning deduce the encoding from the actual data, then redisplay sometimes cannot continue once non-</source>
          <target state="translated">如果 &lt;var&gt;display&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;call-process&lt;/code&gt; 将在插入输出时重新显示缓冲区。（但是，如果 &lt;code&gt;undecided&lt;/code&gt; 选择用于解码输出的编码系统，这意味着从实际数据中推断出编码，则一旦非</target>
        </trans-unit>
        <trans-unit id="d4ea21d8c5c7d2d29c428ac36f3f90962e9c87ca" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;divisor&lt;/var&gt; is specified, this uses the kind of division operation that corresponds to &lt;code&gt;mod&lt;/code&gt;, rounding downward.</source>
          <target state="translated">如果指定了 &lt;var&gt;divisor&lt;/var&gt; ，则使用与 &lt;code&gt;mod&lt;/code&gt; 对应的除法运算，向下舍入。</target>
        </trans-unit>
        <trans-unit id="bc479043ec0d2b18757e218cedb7c00e95ecd19e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;divisor&lt;/var&gt; is zero, &lt;code&gt;mod&lt;/code&gt; signals an &lt;code&gt;arith-error&lt;/code&gt; error if both arguments are integers, and returns a NaN otherwise.</source>
          <target state="translated">如果 &lt;var&gt;divisor&lt;/var&gt; 为零，则如果两个参数均为整数，则 &lt;code&gt;mod&lt;/code&gt; &lt;code&gt;arith-error&lt;/code&gt; 错误信号，否则返回NaN。</target>
        </trans-unit>
        <trans-unit id="c178623deb0b8f95f251d48a76e84fefbf62e3e9" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;do-all&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, or if the user option &lt;code&gt;apropos-do-all&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;apropos&lt;/code&gt; also shows key bindings for the functions that are found; it also shows &lt;em&gt;all&lt;/em&gt; interned symbols, not just meaningful ones (and it lists them in the return value as well).</source>
          <target state="translated">如果 &lt;var&gt;do-all&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; 或用户选项 &lt;code&gt;apropos-do-all&lt;/code&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;apropos&lt;/code&gt; 还将显示找到的功能的键绑定；它还显示了&lt;em&gt;所有&lt;/em&gt;被嵌入的符号，而不仅仅是有意义的符号（并且还在返回值中列出了它们）。</target>
        </trans-unit>
        <trans-unit id="33ce637a0a2b19370799328e896cfce3437e0172" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;doc&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it becomes the function documentation of &lt;var&gt;name&lt;/var&gt;. Otherwise, any documentation provided by &lt;var&gt;definition&lt;/var&gt; is used.</source>
          <target state="translated">如果 &lt;var&gt;doc&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，它将成为 &lt;var&gt;name&lt;/var&gt; 的功能文档。否则，将使用 &lt;var&gt;definition&lt;/var&gt; 提供的任何文档。</target>
        </trans-unit>
        <trans-unit id="c4a82d22d8f8d771a79894593f0df6df2d7aee61" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;dontroute-flag&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the process can only send to hosts on the same network as the local host.</source>
          <target state="translated">如果 &lt;var&gt;dontroute-flag&lt;/var&gt; 为non - &lt;code&gt;nil&lt;/code&gt; ，则该进程只能发送到与本地主机位于同一网络上的主机。</target>
        </trans-unit>
        <trans-unit id="42ab5fc91f5dab9895db7481ee5983a4ac9c211e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;ellipsis&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be a string which will replace the end of &lt;var&gt;string&lt;/var&gt; (including any padding) if it extends beyond &lt;var&gt;width&lt;/var&gt;, unless the display width of &lt;var&gt;string&lt;/var&gt; is equal to or less than the display width of &lt;var&gt;ellipsis&lt;/var&gt;. If &lt;var&gt;ellipsis&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; and not a string, it stands for the value of the variable &lt;code&gt;truncate-string-ellipsis&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;var&gt;ellipsis&lt;/var&gt; 是非 &lt;code&gt;nil&lt;/code&gt; ，它应该是一个字符串，将取代的端 &lt;var&gt;string&lt;/var&gt; （包括任何填充），如果它超出 &lt;var&gt;width&lt;/var&gt; ，除非的显示宽度 &lt;var&gt;string&lt;/var&gt; 是等于或小于的显示宽度 &lt;var&gt;ellipsis&lt;/var&gt; 。如果 &lt;var&gt;ellipsis&lt;/var&gt; 不是 &lt;code&gt;nil&lt;/code&gt; 而不是字符串，则代表变量 &lt;code&gt;truncate-string-ellipsis&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="2826cdb06deaf308761e56a316ed73d9e5203aea" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;environment&lt;/var&gt; is provided, it specifies an alist of macro definitions that shadow the currently defined macros. Byte compilation uses this feature.</source>
          <target state="translated">如果提供了 &lt;var&gt;environment&lt;/var&gt; ，则它指定一个宏定义的列表，该列表遮盖了当前定义的宏。字节编译使用此功能。</target>
        </trans-unit>
        <trans-unit id="542f387e299daf7482746baebebaf49843ffc886" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;eop&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that means do only left-justification if &lt;code&gt;current-justification&lt;/code&gt; specifies full justification. This is used for the last line of a paragraph; even if the paragraph as a whole is fully justified, the last line should not be.</source>
          <target state="translated">如果 &lt;var&gt;eop&lt;/var&gt; 不为 &lt;code&gt;nil&lt;/code&gt; ，则意味着仅当 &lt;code&gt;current-justification&lt;/code&gt; 指定完全对齐方式时，才进行左对齐。这用于段落的最后一行；即使整个段落有充分的理由，最后一行也不应该。</target>
        </trans-unit>
        <trans-unit id="b767a472593eb9087c36efb1a2677ff134751d76" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;event&lt;/var&gt; is a click or button-down event, this returns the location of the event. If &lt;var&gt;event&lt;/var&gt; is a drag event, this returns the drag&amp;rsquo;s starting position.</source>
          <target state="translated">如果 &lt;var&gt;event&lt;/var&gt; 是单击或按下按钮事件，则返回事件的位置。如果 &lt;var&gt;event&lt;/var&gt; 是拖动事件，则返回拖动的起始位置。</target>
        </trans-unit>
        <trans-unit id="3182d1cd085f5c5f9e4f0a7063ec64d91c4a544c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;event&lt;/var&gt; is a drag event, this returns the position where the user released the mouse button. If &lt;var&gt;event&lt;/var&gt; is a click or button-down event, the value is actually the starting position, which is the only position such events have.</source>
          <target state="translated">如果 &lt;var&gt;event&lt;/var&gt; 是拖动事件，则返回用户释放鼠标按钮的位置。如果 &lt;var&gt;event&lt;/var&gt; 是单击或按下按钮事件，则该值实际上是起始位置，这是此类事件仅有的位置。</target>
        </trans-unit>
        <trans-unit id="3561dde7538812edf47c410dd61e2d20f114d954" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;exit-data&lt;/var&gt; is a string, its contents are stuffed into the terminal input buffer so that the shell (or whatever program next reads input) can read them.</source>
          <target state="translated">如果 &lt;var&gt;exit-data&lt;/var&gt; 是字符串，则将其内容填充到终端输入缓冲区中，以便shell（或接下来读取输入的任何程序）可以读取它们。</target>
        </trans-unit>
        <trans-unit id="05f37cadbb1d9d78268503daae0a0ec0a61c8159" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;exit-data&lt;/var&gt; is an integer, that is used as the exit status of the Emacs process. (This is useful primarily in batch operation; see &lt;a href=&quot;batch-mode#Batch-Mode&quot;&gt;Batch Mode&lt;/a&gt;.)</source>
          <target state="translated">如果 &lt;var&gt;exit-data&lt;/var&gt; 是整数，则将其用作Emacs进程的退出状态。（这主要在批处理操作中很有用；请参阅&lt;a href=&quot;batch-mode#Batch-Mode&quot;&gt;批处理模式&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="59385a764aea280257ae8a44bb876d196cf10076" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;exit-data&lt;/var&gt; is neither an integer nor a string, or is omitted, that means to use the (system-specific) exit status which indicates successful program termination.</source>
          <target state="translated">如果 &lt;var&gt;exit-data&lt;/var&gt; 既不是整数也不是字符串，或者被省略，则表示使用（特定于系统的）退出状态，该状态指示程序成功终止。</target>
        </trans-unit>
        <trans-unit id="6c659d5850809a6a575e252a2a77f0596847d686" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;face&lt;/var&gt; already has a default face spec, this macro does nothing.</source>
          <target state="translated">如果 &lt;var&gt;face&lt;/var&gt; 已具有默认的face spec，则此宏不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="94fed5cb65c7a9b4818db37905cdfffe7eb23fbd" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;family&lt;/var&gt; is specified but not available, Emacs will try the other families given in &lt;var&gt;alternate-families&lt;/var&gt;, one by one, until it finds a family that does exist.</source>
          <target state="translated">如果 &lt;var&gt;family&lt;/var&gt; 中规定，但不可用，Emacs会尝试在考虑到其他家庭 &lt;var&gt;alternate-families&lt;/var&gt; ，一个接一个，直到找到一个家庭确实存在。</target>
        </trans-unit>
        <trans-unit id="d1a45b958c28835fb9698926a23f189506fbeaa6" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;field&lt;/var&gt; is negative, sorting is by the -&lt;var&gt;field&lt;/var&gt;th field from the end of the line. This command is useful for sorting tables.</source>
          <target state="translated">如果 &lt;var&gt;field&lt;/var&gt; 是否定的，排序是由- &lt;var&gt;field&lt;/var&gt; 从行的末尾个字段。此命令对表排序很有用。</target>
        </trans-unit>
        <trans-unit id="566d542bf0d5e3db4f936d01f488aacec2657302" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;file-handler&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then look for a file name handler for the current buffer&amp;rsquo;s &lt;code&gt;default-directory&lt;/code&gt;, and invoke that file name handler to make the process. If there is no such handler, proceed as if &lt;var&gt;file-handler&lt;/var&gt; were &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;var&gt;file-handler&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则为当前缓冲区的 &lt;code&gt;default-directory&lt;/code&gt; 查找文件名处理程序，并调用该文件名处理程序进行此过程。如果没有这样的处理程序，则如同 &lt;var&gt;file-handler&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; 一样进行处理。</target>
        </trans-unit>
        <trans-unit id="3029954c3bea56e5ef19a69293e88d581a2b3d92" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;file&lt;/var&gt; is a directory, changes for all files in that directory will be notified. This does not work recursively.</source>
          <target state="translated">如果 &lt;var&gt;file&lt;/var&gt; 是目录，则将通知该目录中所有文件的更改。这不是递归的。</target>
        </trans-unit>
        <trans-unit id="2bad1c2c05300f5f775e1639c12dada6dd4ed103" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;filename&lt;/var&gt; does not contain either a directory name, or the suffix &lt;code&gt;.el&lt;/code&gt; or &lt;code&gt;.elc&lt;/code&gt;, this function insists on adding one of these suffixes, and it will not load from a file whose name is just &lt;var&gt;filename&lt;/var&gt; with no added suffix. (The variable &lt;code&gt;load-suffixes&lt;/code&gt; specifies the exact required suffixes.)</source>
          <target state="translated">如果 &lt;var&gt;filename&lt;/var&gt; 不包含目录名或后缀 &lt;code&gt;.el&lt;/code&gt; 或 &lt;code&gt;.elc&lt;/code&gt; ，则此函数将坚持添加这些后缀之一，并且不会从名称仅为 &lt;var&gt;filename&lt;/var&gt; 且未添加后缀的文件中加载。（变量 &lt;code&gt;load-suffixes&lt;/code&gt; 指定确切的所需后缀。）</target>
        </trans-unit>
        <trans-unit id="f17ccd75236d0820b4feff180f7e0404537acbed" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;filename&lt;/var&gt; has additional names aside from &lt;var&gt;filename&lt;/var&gt;, it continues to have those names. In fact, adding the name &lt;var&gt;newname&lt;/var&gt; with &lt;code&gt;add-name-to-file&lt;/code&gt; and then deleting &lt;var&gt;filename&lt;/var&gt; has the same effect as renaming, aside from momentary intermediate states and treatment of errors, directories and symbolic links.</source>
          <target state="translated">如果 &lt;var&gt;filename&lt;/var&gt; 由具有其他名称预留 &lt;var&gt;filename&lt;/var&gt; ，但它仍然有那些名字。实际上，除了暂时的中间状态以及对错误，目录和符号链接的处理之外，将名称 &lt;var&gt;newname&lt;/var&gt; 与 &lt;code&gt;add-name-to-file&lt;/code&gt; 添加在一起，然后删除 &lt;var&gt;filename&lt;/var&gt; 具有与重命名相同的效果。</target>
        </trans-unit>
        <trans-unit id="601974afa1a162f114a8f0d68223d4f6961c670d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;filename&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or the empty string, that stands for &amp;ldquo;no visited file&amp;rdquo;. In this case, &lt;code&gt;set-visited-file-name&lt;/code&gt; marks the buffer as having no visited file, without changing the buffer&amp;rsquo;s modified flag.</source>
          <target state="translated">如果 &lt;var&gt;filename&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; 或空字符串，则表示&amp;ldquo;没有访问过的文件&amp;rdquo;。在这种情况下， &lt;code&gt;set-visited-file-name&lt;/code&gt; 会将缓冲区标记为没有访问文件，而不会更改缓冲区的修改标志。</target>
        </trans-unit>
        <trans-unit id="7ae4783183417f463cd8a075cbb06e5ff1fa6eeb" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;filename&lt;/var&gt; is a directory name (see &lt;a href=&quot;directory-names#Directory-Names&quot;&gt;Directory Names&lt;/a&gt;), &lt;code&gt;write-file&lt;/code&gt; uses the name of the visited file, in directory &lt;var&gt;filename&lt;/var&gt;. If the buffer is not visiting a file, it uses the buffer name instead.</source>
          <target state="translated">如果 &lt;var&gt;filename&lt;/var&gt; 是目录名（请参阅&lt;a href=&quot;directory-names#Directory-Names&quot;&gt;Directory Names&lt;/a&gt;），则 &lt;code&gt;write-file&lt;/code&gt; 使用访问的文件 &lt;var&gt;filename&lt;/var&gt; ，在directory filename中。如果缓冲区不访问文件，它将使用缓冲区名称代替。</target>
        </trans-unit>
        <trans-unit id="a01e16f24a067a0fb0043befb2b5119347bcb45b" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;filename&lt;/var&gt; is a non-empty string, this function changes the name of the file visited in the current buffer to &lt;var&gt;filename&lt;/var&gt;. (If the buffer had no visited file, this gives it one.) The &lt;em&gt;next time&lt;/em&gt; the buffer is saved it will go in the newly-specified file.</source>
          <target state="translated">如果 &lt;var&gt;filename&lt;/var&gt; 是非空字符串，则此函数会将在当前缓冲区中访问的文件的名称更改为 &lt;var&gt;filename&lt;/var&gt; 。（如果缓冲区没有访问过的文件，则为它提供一个文件。）&lt;em&gt;下次&lt;/em&gt;保存缓冲区时，它将进入新指定的文件中。</target>
        </trans-unit>
        <trans-unit id="4acbb928ad7718634c30ddbc650bf49d7077a8c1" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;filename&lt;/var&gt; is a relative file name, such as</source>
          <target state="translated">如果 &lt;var&gt;filename&lt;/var&gt; 是一个相对文件名，例如</target>
        </trans-unit>
        <trans-unit id="ab7cf9a0ae4ba5c2776dd494921001dee3b006d8" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;filename&lt;/var&gt; is local, whether magic or not, this function does nothing and returns &lt;code&gt;nil&lt;/code&gt;. Otherwise it returns the file name of the local copy file.</source>
          <target state="translated">如果 &lt;var&gt;filename&lt;/var&gt; 是本地的（无论是否为魔术），则此函数不执行任何操作并返回 &lt;code&gt;nil&lt;/code&gt; 。否则，它将返回本地副本文件的文件名。</target>
        </trans-unit>
        <trans-unit id="bdcfa385b467a3758b0eaf7c8873a2a13cecce6c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;fin&lt;/var&gt; is not a &lt;code&gt;NULL&lt;/code&gt; pointer, it will be called with the &lt;var&gt;ptr&lt;/var&gt; as the argument when the &lt;code&gt;user-ptr&lt;/code&gt; object is garbage-collected. Don&amp;rsquo;t run any expensive code in a finalizer, because GC must finish quickly to keep Emacs responsive.</source>
          <target state="translated">如果 &lt;var&gt;fin&lt;/var&gt; 不是 &lt;code&gt;NULL&lt;/code&gt; 指针，则在对 &lt;code&gt;user-ptr&lt;/code&gt; 对象进行垃圾回收时，将使用 &lt;var&gt;ptr&lt;/var&gt; 作为参数调用它。不要在终结器中运行任何昂贵的代码，因为GC必须快速完成才能保持Emacs的响应速度。</target>
        </trans-unit>
        <trans-unit id="ff7b175c80093cc1a7c87a1db4ec4c5183f22789" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;firstonly&lt;/var&gt; is &lt;code&gt;non-ascii&lt;/code&gt;, then the value is a single vector representing the first key sequence found, rather than a list of all possible key sequences. If &lt;var&gt;firstonly&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, then the value is the first key sequence, except that key sequences consisting entirely of</source>
          <target state="translated">如果 &lt;var&gt;firstonly&lt;/var&gt; 是 &lt;code&gt;non-ascii&lt;/code&gt; ，则该值是表示找到的第一个键序列的单个向量，而不是所有可能的键序列的列表。如果 &lt;var&gt;firstonly&lt;/var&gt; 是 &lt;code&gt;t&lt;/code&gt; ，则该值是第一个键序列，除了键序列完全由</target>
        </trans-unit>
        <trans-unit id="a9c9a4ebd36d51532de9109ecf1ef74ffdcffcee" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;fixedcase&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;replace-match&lt;/code&gt; uses the replacement text without case conversion; otherwise, it converts the replacement text depending upon the capitalization of the text to be replaced. If the original text is all upper case, this converts the replacement text to upper case. If all words of the original text are capitalized, this capitalizes all the words of the replacement text. If all the words are one-letter and they are all upper case, they are treated as capitalized words rather than all-upper-case words.</source>
          <target state="translated">如果 &lt;var&gt;fixedcase&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;replace-match&lt;/code&gt; 使用替换文本而不进行大小写转换；否则，替换匹配将使用替换文本。否则，它将根据要替换的文本的大写形式转换替换文本。如果原始文本全部为大写，则将替换文本转换为大写。如果原始文本的所有单词都大写，则这将替换文本的所有单词都大写。如果所有单词都是一个字母并且都是大写字母，则将它们视为大写单词，而不是全部大写单词。</target>
        </trans-unit>
        <trans-unit id="2a40d1cb2516be8709248d56281f02652ac6d7e4" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;flow&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then Emacs uses &lt;small&gt;XON/XOFF&lt;/small&gt; (</source>
          <target state="translated">如果 &lt;var&gt;flow&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则Emacs使用&lt;small&gt;XON / XOFF&lt;/small&gt;（</target>
        </trans-unit>
        <trans-unit id="635c63be0831a1ed757723114405aa6bd54fbaf8" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;focus-frame&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, that cancels any existing redirection for &lt;var&gt;frame&lt;/var&gt;, which therefore once again receives its own events.</source>
          <target state="translated">如果 &lt;var&gt;focus-frame&lt;/var&gt; 被省略或为 &lt;code&gt;nil&lt;/code&gt; ，则取消 &lt;var&gt;frame&lt;/var&gt; 的任何现有重定向，因此将再次接收其自己的事件。</target>
        </trans-unit>
        <trans-unit id="8115dfd568aadd54bb88af1c3a50bd5b70843371" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;font&lt;/var&gt; is a font spec and the font spec does not specify &lt;var&gt;property&lt;/var&gt;, the return value is &lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;font&lt;/var&gt; is a font object or font entity, the value for the &lt;var&gt;:script&lt;/var&gt; property may be a list of scripts supported by the font.</source>
          <target state="translated">如果 &lt;var&gt;font&lt;/var&gt; 是字体规范，而font spec没有指定 &lt;var&gt;property&lt;/var&gt; ，则返回值为 &lt;code&gt;nil&lt;/code&gt; 。如果 &lt;var&gt;font&lt;/var&gt; 是字体对象或字体实体， &lt;var&gt;:script&lt;/var&gt; 属性的值可以是该字体支持的脚本列表。</target>
        </trans-unit>
        <trans-unit id="db64fed9b323411c5eb65e89e464409b9f0d0e85" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;fontname-regexp&lt;/var&gt; matches the font name that is about to be used, this says to choose a larger similar font according to the factor &lt;var&gt;scale-factor&lt;/var&gt;. You would use this feature to normalize the font size if certain fonts are bigger or smaller than their nominal heights and widths would suggest.</source>
          <target state="translated">如果 &lt;var&gt;fontname-regexp&lt;/var&gt; 与将要使用的字体名称匹配，则表示要根据factor &lt;var&gt;scale-factor&lt;/var&gt; 选择更大的相似字体。如果某些字体大于或小于其标称的高度和宽度，则可以使用此功能来规范字体大小。</target>
        </trans-unit>
        <trans-unit id="e2966ac7cad9193bc97d279b647a6bfcb8f2ef3f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;for-call-interactively&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;commandp&lt;/code&gt; returns &lt;code&gt;t&lt;/code&gt; only for objects that &lt;code&gt;call-interactively&lt;/code&gt; could call&amp;mdash;thus, not for keyboard macros.</source>
          <target state="translated">如果 &lt;var&gt;for-call-interactively&lt;/var&gt; 非 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;commandp&lt;/code&gt; 仅对 &lt;code&gt;call-interactively&lt;/code&gt; 调用可以调用的对象返回 &lt;code&gt;t&lt;/code&gt; ，因此，对于键盘宏则不返回t。</target>
        </trans-unit>
        <trans-unit id="a3879501f40effed5dfc6a6e9c2f47f761a3fe35" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;force&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that says to fix the line&amp;rsquo;s indentation if that doesn&amp;rsquo;t match the left margin value.</source>
          <target state="translated">如果 &lt;var&gt;force&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则表示如果行的缩进与左边界值不匹配，则修复该行的缩进。</target>
        </trans-unit>
        <trans-unit id="afc5dde916e411b66706e2ecc6bab5d6fbd387bf" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;force&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this command recompiles every &amp;lsquo;</source>
          <target state="translated">如果 &lt;var&gt;force&lt;/var&gt; 是不 &lt;code&gt;nil&lt;/code&gt; ，这个命令重新编译每一个&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="e1306eaefee46fe549483b00767967f1bec09389" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;format-string&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or the empty string, &lt;code&gt;message&lt;/code&gt; clears the echo area; if the echo area has been expanded automatically, this brings it back to its normal size. If the minibuffer is active, this brings the minibuffer contents back onto the screen immediately.</source>
          <target state="translated">如果 &lt;var&gt;format-string&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; 或为空字符串，则 &lt;code&gt;message&lt;/code&gt; 清除回显区域；如果回声区域已自动扩展，则将其恢复为正常大小。如果微型缓冲区处于活动状态，则会立即将微型缓冲区的内容带回到屏幕上。</target>
        </trans-unit>
        <trans-unit id="34926853f3ae3a13c10cafcd6ea5fc9cab947853" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;frame-number&lt;/var&gt; is out of range, &lt;code&gt;backtrace-frame&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;var&gt;frame-number&lt;/var&gt; 超出范围，则 &lt;code&gt;backtrace-frame&lt;/code&gt; 返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="026b2b86d9f4214d5e7e3288181c07240948b829" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;frame&lt;/var&gt; has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;buffer-predicate&lt;/code&gt; parameter, then &lt;code&gt;other-buffer&lt;/code&gt; uses that predicate to decide which buffers to consider. It calls the predicate once for each buffer, and if the value is &lt;code&gt;nil&lt;/code&gt;, that buffer is ignored. See &lt;a href=&quot;buffer-parameters#Buffer-Parameters&quot;&gt;Buffer Parameters&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;var&gt;frame&lt;/var&gt; 具有非 &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;buffer-predicate&lt;/code&gt; 参数，然后 &lt;code&gt;other-buffer&lt;/code&gt; 使用该谓词来决定考虑哪个缓冲区。它为每个缓冲区调用一次谓词，如果值为 &lt;code&gt;nil&lt;/code&gt; ，则忽略该缓冲区。请参阅&lt;a href=&quot;buffer-parameters#Buffer-Parameters&quot;&gt;缓冲区参数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fe96a7f4fb23e15bbd04ceb9ff4687a306778bd9" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;frame&lt;/var&gt; has at least one side window, this command saves the state of &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s root window in the &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s &lt;code&gt;window-state&lt;/code&gt; frame parameter and deletes all side windows on &lt;var&gt;frame&lt;/var&gt; afterwards.</source>
          <target state="translated">如果 &lt;var&gt;frame&lt;/var&gt; 具有至少一个侧窗，该命令保存的状态 &lt;var&gt;frame&lt;/var&gt; &amp;ldquo;在S根窗口 &lt;var&gt;frame&lt;/var&gt; s&amp;ldquo;的 &lt;code&gt;window-state&lt;/code&gt; 帧参数，并删除所有侧窗 &lt;var&gt;frame&lt;/var&gt; 之后。</target>
        </trans-unit>
        <trans-unit id="5f73160b9240e36ee07d2bed7f88dc75834bed9f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;frame&lt;/var&gt; has no side windows, but does have a &lt;code&gt;window-state&lt;/code&gt; parameter, this command uses that parameter&amp;rsquo;s value to restore the side windows on &lt;var&gt;frame&lt;/var&gt; leaving &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s main window alone.</source>
          <target state="translated">如果 &lt;var&gt;frame&lt;/var&gt; 没有侧窗，但确实有一个 &lt;code&gt;window-state&lt;/code&gt; 参数，此命令使用该参数的值恢复侧窗的 &lt;var&gt;frame&lt;/var&gt; 留下 &lt;var&gt;frame&lt;/var&gt; 单独的主窗口。</target>
        </trans-unit>
        <trans-unit id="8195a57843d2cbe8d7e96776dd8503054a2428ca" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;frame&lt;/var&gt; has no side windows, it returns &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s root window. Otherwise, it returns either an internal non-side window such that all other non-side windows on &lt;var&gt;frame&lt;/var&gt; descend from it, or the single live non-side window of &lt;var&gt;frame&lt;/var&gt;. Note that the main window of a frame cannot be deleted via &lt;code&gt;delete-window&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;var&gt;frame&lt;/var&gt; 没有侧窗，则返回 &lt;var&gt;frame&lt;/var&gt; 的根窗口。否则，它返回一个内部非侧面窗口（使 &lt;var&gt;frame&lt;/var&gt; 上的所有其他非侧面窗口从其下降），或者返回单个活动非 &lt;var&gt;frame&lt;/var&gt; 侧面frame。请注意，不能通过 &lt;code&gt;delete-window&lt;/code&gt; 删除框架的主窗口。</target>
        </trans-unit>
        <trans-unit id="367726c34a9b53c1f745c95df8caaf6d2fb4d85e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;frame&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, this function sets the default attributes for newly created frames. If &lt;var&gt;frame&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this function sets the attributes for all existing frames, as well as for newly created frames.</source>
          <target state="translated">如果 &lt;var&gt;frame&lt;/var&gt; 为 &lt;code&gt;t&lt;/code&gt; ，则此函数为新创建的帧设置默认属性。如果 &lt;var&gt;frame&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则此函数为所有现有框架以及新创建的框架设置属性。</target>
        </trans-unit>
        <trans-unit id="ca49ccfd45cbf005e0b3343c38212bce9dd98fbd" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;frame&lt;/var&gt; is a frame, this returns &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s local buffer list. If &lt;var&gt;frame&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or omitted, the fundamental buffer list is used: the buffers appear in order of most recent display or selection, regardless of which frames they were displayed on.</source>
          <target state="translated">如果 &lt;var&gt;frame&lt;/var&gt; 是框架，则返回 &lt;var&gt;frame&lt;/var&gt; 的本地缓冲区列表。如果 &lt;var&gt;frame&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; 或被省略，则使用基本缓冲区列表：缓冲区以最新显示或选择的顺序出现，而不管它们显示在哪个帧上。</target>
        </trans-unit>
        <trans-unit id="21526ce05c895c517d009c1e340b9297495ca30a" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;frame&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, that means the selected frame (see &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;). If &lt;var&gt;frame&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, this function returns the value of the specified attribute for newly-created frames (this is normally &lt;code&gt;unspecified&lt;/code&gt;, unless you have specified some value using &lt;code&gt;set-face-attribute&lt;/code&gt;; see below).</source>
          <target state="translated">如果省略 &lt;var&gt;frame&lt;/var&gt; 或 &lt;code&gt;nil&lt;/code&gt; ，则表示选择的帧（请参见&lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;）。如果 &lt;var&gt;frame&lt;/var&gt; 为 &lt;code&gt;t&lt;/code&gt; ，则此函数返回新创建的帧的指定属性的值（通常 &lt;code&gt;unspecified&lt;/code&gt; ，除非您使用 &lt;code&gt;set-face-attribute&lt;/code&gt; 指定了某个值；请参见下文）。</target>
        </trans-unit>
        <trans-unit id="04c9f5dbdbf57056de20af216b6217e5a1008869" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;frame&lt;/var&gt; is the selected frame, this makes &lt;var&gt;window&lt;/var&gt; the selected window.</source>
          <target state="translated">如果 &lt;var&gt;frame&lt;/var&gt; 是选定的框架，则使 &lt;var&gt;window&lt;/var&gt; 成为选定的窗口。</target>
        </trans-unit>
        <trans-unit id="b62a326d9c59337c9206f5c8cb417ff496177d7c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;from-fn&lt;/var&gt; is a function, it is called with two arguments, &lt;var&gt;begin&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;, which specify the part of the buffer it should convert. It should convert the text by editing it in place. Since this can change the length of the text, &lt;var&gt;from-fn&lt;/var&gt; should return the modified end position.</source>
          <target state="translated">如果 &lt;var&gt;from-fn&lt;/var&gt; 是一个函数，则使用两个参数 &lt;var&gt;begin&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 调用它，这些参数指定缓冲区应该转换的部分。它应该通过在适当位置进行编辑来转换文本。由于这可以更改文本的长度，因此 &lt;var&gt;from-fn&lt;/var&gt; 应该返回修改后的结束位置。</target>
        </trans-unit>
        <trans-unit id="15031736989c5b527bdff961b4f960a9873281df" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;from-string&lt;/var&gt; contains upper-case letters, then &lt;code&gt;perform-replace&lt;/code&gt; binds &lt;code&gt;case-fold-search&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt;, and it uses the &lt;var&gt;replacements&lt;/var&gt; without altering their case.</source>
          <target state="translated">如果 &lt;var&gt;from-string&lt;/var&gt; 包含大写字母，那么 &lt;code&gt;perform-replace&lt;/code&gt; 会将 &lt;code&gt;case-fold-search&lt;/code&gt; 绑定到 &lt;code&gt;nil&lt;/code&gt; ，并且它使用 &lt;var&gt;replacements&lt;/var&gt; 而不改变大小写。</target>
        </trans-unit>
        <trans-unit id="b095f85199320ea0f381313e29fdf428be161d8f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;from&lt;/var&gt; and &lt;var&gt;to&lt;/var&gt; are omitted, &lt;var&gt;var&lt;/var&gt; is bound to &lt;code&gt;nil&lt;/code&gt; before the loop begins, and the loop exits if &lt;var&gt;var&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; at the beginning of an iteration. Here is an example:</source>
          <target state="translated">如果省略了 &lt;var&gt;from&lt;/var&gt; 和 &lt;var&gt;to&lt;/var&gt; ，则 &lt;var&gt;var&lt;/var&gt; 在循环开始之前绑定为 &lt;code&gt;nil&lt;/code&gt; ，如果 &lt;var&gt;var&lt;/var&gt; 在迭代开始时为非 &lt;code&gt;nil&lt;/code&gt; ，则循环退出。这是一个例子：</target>
        </trans-unit>
        <trans-unit id="1749d4cb0d69ee3cfd7d906a44778e4c075c3f6e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;full-directory-p&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that means the directory listing is expected to show the full contents of a directory. You should specify &lt;code&gt;t&lt;/code&gt; when &lt;var&gt;file&lt;/var&gt; is a directory and switches do not contain &amp;lsquo;</source>
          <target state="translated">如果 &lt;var&gt;full-directory-p&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则意味着目录列表应显示目录的完整内容。当 &lt;var&gt;file&lt;/var&gt; 为目录且开关不包含'时，应指定 &lt;code&gt;t&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d66247893505a369ed4cb053e0b5c6f2f090957e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;full-name&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the function returns the files&amp;rsquo; absolute file names. Otherwise, it returns the names relative to the specified directory.</source>
          <target state="translated">如果 &lt;var&gt;full-name&lt;/var&gt; 为non - &lt;code&gt;nil&lt;/code&gt; ，则该函数返回文件的绝对文件名。否则，它将返回相对于指定目录的名称。</target>
        </trans-unit>
        <trans-unit id="d49fa525b58a0d59a11a107ecb8b69695fb04221" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;fun&lt;/var&gt; changes the window configuration by splitting or deleting windows, that does not alter the set of windows walked, which is determined prior to calling &lt;var&gt;fun&lt;/var&gt; for the first time.</source>
          <target state="translated">如果 &lt;var&gt;fun&lt;/var&gt; 通过拆分或删除窗口来更改窗口配置，则不会更改行走的窗口集，这是在首次调用 &lt;var&gt;fun&lt;/var&gt; 之前确定的。</target>
        </trans-unit>
        <trans-unit id="3fe508d57bda90eaddaffa2325240754b59f9d43" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;function&lt;/var&gt; already has a non-void function definition that is not an autoload object, this function does nothing and returns &lt;code&gt;nil&lt;/code&gt;. Otherwise, it constructs an autoload object (see &lt;a href=&quot;autoload-type#Autoload-Type&quot;&gt;Autoload Type&lt;/a&gt;), and stores it as the function definition for &lt;var&gt;function&lt;/var&gt;. The autoload object has this form:</source>
          <target state="translated">如果 &lt;var&gt;function&lt;/var&gt; 已经具有非空函数定义（不是自动加载对象），则此函数不执行任何操作并返回 &lt;code&gt;nil&lt;/code&gt; 。否则，它构造的自动加载对象（见&lt;a href=&quot;autoload-type#Autoload-Type&quot;&gt;自动加载类型&lt;/a&gt;），并且将其存储作为函数定义 &lt;var&gt;function&lt;/var&gt; 。自动加载对象具有以下形式：</target>
        </trans-unit>
        <trans-unit id="3518254475be6f5cca76bf3354fd0622d9edf816" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;function&lt;/var&gt; has a non-&lt;code&gt;nil&lt;/code&gt; property &lt;code&gt;permanent-local-hook&lt;/code&gt;, then &lt;code&gt;kill-all-local-variables&lt;/code&gt; (or changing major modes) won&amp;rsquo;t delete it from the hook variable&amp;rsquo;s local value.</source>
          <target state="translated">如果 &lt;var&gt;function&lt;/var&gt; 具有非 &lt;code&gt;nil&lt;/code&gt; 属性 &lt;code&gt;permanent-local-hook&lt;/code&gt; ，则 &lt;code&gt;kill-all-local-variables&lt;/code&gt; （或更改主要模式）不会从hook变量的本地值中将其删除。</target>
        </trans-unit>
        <trans-unit id="c28743625f6ee6485550c2099ff72be5c7aec25b" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;function&lt;/var&gt; is a byte-code function object, this immediately finishes loading the byte code of &lt;var&gt;function&lt;/var&gt; from its byte-compiled file, if it is not fully loaded already. Otherwise, it does nothing. It always returns &lt;var&gt;function&lt;/var&gt;.</source>
          <target state="translated">如果 &lt;var&gt;function&lt;/var&gt; 是字节码功能对象，则如果尚未完全加载，则立即从其字节编译文件中加载 &lt;var&gt;function&lt;/var&gt; 的字节码。否则，它什么都不做。它总是返回 &lt;var&gt;function&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="8c8dfe3909828e5bff9da4775e218962c70f106e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;function&lt;/var&gt; is a symbol, this function first looks for the &lt;code&gt;function-documentation&lt;/code&gt; property of that symbol; if that has a non-&lt;code&gt;nil&lt;/code&gt; value, the documentation comes from that value (if the value is not a string, it is evaluated).</source>
          <target state="translated">如果 &lt;var&gt;function&lt;/var&gt; 是一个符号，则此函数首先查找该符号的 &lt;code&gt;function-documentation&lt;/code&gt; 属性；如果该值具有非 &lt;code&gt;nil&lt;/code&gt; 值，则文档来自该值（如果该值不是字符串，则将对其进行评估）。</target>
        </trans-unit>
        <trans-unit id="c552c00d2fb0acf113638f263536a85a69ccb679" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;function&lt;/var&gt; is already present in &lt;var&gt;hook&lt;/var&gt; (comparing using &lt;code&gt;equal&lt;/code&gt;), then &lt;code&gt;add-hook&lt;/code&gt; does not add it a second time.</source>
          <target state="translated">如果 &lt;var&gt;hook&lt;/var&gt; 已经存在 &lt;var&gt;function&lt;/var&gt; （使用 &lt;code&gt;equal&lt;/code&gt; 进行比较），那么 &lt;code&gt;add-hook&lt;/code&gt; 不会再次添加它。</target>
        </trans-unit>
        <trans-unit id="d7df9fa48fe1587ad4057ede1a2ac2a660dbfefb" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;function&lt;/var&gt; is not a symbol, or if it has no &lt;code&gt;function-documentation&lt;/code&gt; property, then &lt;code&gt;documentation&lt;/code&gt; extracts the documentation string from the actual function definition, reading it from a file if called for.</source>
          <target state="translated">如果 &lt;var&gt;function&lt;/var&gt; 不是符号，或者它不具有 &lt;code&gt;function-documentation&lt;/code&gt; 属性，则 &lt;code&gt;documentation&lt;/code&gt; 文件从实际的函数定义中提取说明文件字符串，并在需要时从文件中读取。</target>
        </trans-unit>
        <trans-unit id="fcfb65a38e3f1e3c8d577272d09f4b1b738b8de8" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;function&lt;/var&gt; is not interactive, then the combined function will inherit the interactive spec, if any, of the original function. Else, the combined function will be interactive and will use the interactive spec of &lt;var&gt;function&lt;/var&gt;. One exception: if the interactive spec of &lt;var&gt;function&lt;/var&gt; is a function (i.e., a &lt;code&gt;lambda&lt;/code&gt; expression or an &lt;code&gt;fbound&lt;/code&gt; symbol rather than an expression or a string), then the interactive spec of the combined function will be a call to that function with as sole argument the interactive spec of the original function. To interpret the spec received as argument, use &lt;code&gt;advice-eval-interactive-spec&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;var&gt;function&lt;/var&gt; 不是交互式的，则组合功能将继承原始功能的交互式规范（如果有）。否则，组合功能将是交互式的，并且将使用 &lt;var&gt;function&lt;/var&gt; 的交互式规范。一个例外：如果 &lt;var&gt;function&lt;/var&gt; 的交互式规范是一个函数（即， &lt;code&gt;lambda&lt;/code&gt; 表达式或 &lt;code&gt;fbound&lt;/code&gt; 符号而不是表达式或字符串），则组合函数的交互式规范将是对该函数的调用，并带有唯一的参数原始功能的互动规范。要将收到的规范解释为参数，请使用 &lt;code&gt;advice-eval-interactive-spec&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="32c4bd79d78007d309e09a0d0bec3ddb57209ca3" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;function&lt;/var&gt; was previously registered as a fontification function using &lt;code&gt;jit-lock-register&lt;/code&gt;, this function unregisters it.</source>
          <target state="translated">如果 &lt;var&gt;function&lt;/var&gt; 是作为fontification功能使用以前注册的 &lt;code&gt;jit-lock-register&lt;/code&gt; ，此功能注销它。</target>
        </trans-unit>
        <trans-unit id="d031017db8498190d8da521cbc0271e5ff39cb8b" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;greedy&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function extends the match backwards as far as possible, stopping when a single additional previous character cannot be part of a match for &lt;var&gt;regexp&lt;/var&gt;. When the match is extended, its starting position is allowed to occur before &lt;var&gt;limit&lt;/var&gt;.</source>
          <target state="translated">如果 &lt;var&gt;greedy&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则此功能将匹配尽可能地向后扩展，并在单个额外的前一个字符不能作为 &lt;var&gt;regexp&lt;/var&gt; 匹配的一部分时停止。当比赛延长时，其起始位置允许在 &lt;var&gt;limit&lt;/var&gt; 之前。</target>
        </trans-unit>
        <trans-unit id="de124be120a7804c2bc4dcb4bcdea91661a2b84c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;header&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the frame title for the box is &amp;lsquo;</source>
          <target state="translated">如果 &lt;var&gt;header&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则框的框架标题为'</target>
        </trans-unit>
        <trans-unit id="7326d6e29ee45b9a104a4687a636f156545a9354" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;here&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it inserts the text in the buffer before point, and returns &lt;code&gt;nil&lt;/code&gt;. When this function is called interactively, it prints the same information in the echo area, but giving a prefix argument makes &lt;var&gt;here&lt;/var&gt; non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;var&gt;here&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则将文本插入到point之前的缓冲区中，并返回 &lt;code&gt;nil&lt;/code&gt; 。当此功能被称为交互，它打印在回声区相同的信息，但给人一种前缀参数使得 &lt;var&gt;here&lt;/var&gt; 不 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c3486bcd8782ee56514593a504032686da70375f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;hook&lt;/var&gt; is a non-&lt;code&gt;nil&lt;/code&gt; symbol whose &lt;code&gt;no-self-insert&lt;/code&gt; property is non-&lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;hook&lt;/var&gt; can explicitly control whether to insert the self-inserting input character that triggered the expansion. If &lt;var&gt;hook&lt;/var&gt; returns non-&lt;code&gt;nil&lt;/code&gt; in this case, that inhibits insertion of the character. By contrast, if &lt;var&gt;hook&lt;/var&gt; returns &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;expand-abbrev&lt;/code&gt; (or &lt;code&gt;abbrev-insert&lt;/code&gt;) also returns &lt;code&gt;nil&lt;/code&gt;, as if expansion had not really occurred.</source>
          <target state="translated">如果 &lt;var&gt;hook&lt;/var&gt; 是一个非 &lt;code&gt;nil&lt;/code&gt; 符号，其 &lt;code&gt;no-self-insert&lt;/code&gt; 属性为 &lt;code&gt;nil&lt;/code&gt; ， &lt;var&gt;hook&lt;/var&gt; 可以显式控制是否插入触发扩展的自插入输入字符。如果 &lt;var&gt;hook&lt;/var&gt; 返回非 &lt;code&gt;nil&lt;/code&gt; 在此情况下，抑制所述字符的插入。相比之下，如果 &lt;var&gt;hook&lt;/var&gt; 返回 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;expand-abbrev&lt;/code&gt; （或 &lt;code&gt;abbrev-insert&lt;/code&gt; ）也返回 &lt;code&gt;nil&lt;/code&gt; ，好像扩展并未真正发生。</target>
        </trans-unit>
        <trans-unit id="d16533ab79378f58db6c05f66c73e9f5942168bb" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;human&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the description is human-oriented. System abbrevs are listed and identified as such. Otherwise the description is a Lisp expression&amp;mdash;a call to &lt;code&gt;define-abbrev-table&lt;/code&gt; that would define &lt;var&gt;name&lt;/var&gt; as it is currently defined, but without the system abbrevs. (The mode or package using &lt;var&gt;name&lt;/var&gt; is supposed to add these to &lt;var&gt;name&lt;/var&gt; separately.)</source>
          <target state="translated">如果 &lt;var&gt;human&lt;/var&gt; 是不 &lt;code&gt;nil&lt;/code&gt; ，说明是人性化。系统缩写是这样列出并标识的。否则，说明将是Lisp表达式-对 &lt;code&gt;define-abbrev-table&lt;/code&gt; 的调用，该表将定义当前定义的 &lt;var&gt;name&lt;/var&gt; ，但没有系统缩写。（使用 &lt;var&gt;name&lt;/var&gt; 的模式或程序包应该将它们分别添加到 &lt;var&gt;name&lt;/var&gt; 。）</target>
        </trans-unit>
        <trans-unit id="4fb11bdd7919b821549c820e30bcdab23b65ddf8" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;ignore-case&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, characters are converted to lower-case before comparing them.</source>
          <target state="translated">如果 &lt;var&gt;ignore-case&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则在比较字符之前将其转换为小写。</target>
        </trans-unit>
        <trans-unit id="ce81e7e8bde20e3f5a7bca91ea554bcf82c0643a" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;image&lt;/var&gt; is a single image specification, Emacs draws the tool bar button in disabled state by applying an edge-detection algorithm to the image.</source>
          <target state="translated">如果 &lt;var&gt;image&lt;/var&gt; 是单个图像规范，则Emacs通过对图像应用边缘检测算法来在禁用状态下绘制工具栏按钮。</target>
        </trans-unit>
        <trans-unit id="64d20b99c0a35bc94cf60fe36333713b6a3905c7" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;include-cmds&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, complete key sequences in the result vector are interleaved with pseudo-events of the form &lt;code&gt;(nil . &lt;var&gt;COMMAND&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;COMMAND&lt;/var&gt; is the binding of the key sequence (see &lt;a href=&quot;command-overview#Command-Overview&quot;&gt;Command Overview&lt;/a&gt;).</source>
          <target state="translated">如果 &lt;var&gt;include-cmds&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则结果向量中的完整键序列与形式为 &lt;code&gt;(nil . &lt;var&gt;COMMAND&lt;/var&gt;)&lt;/code&gt; 伪事件交错，其中 &lt;var&gt;COMMAND&lt;/var&gt; 是键序列的绑定（请参阅&lt;a href=&quot;command-overview#Command-Overview&quot;&gt;命令概述&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="0a309119a0c28d33dceec892ff301ac8dd27e404" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;inherit-input-method&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then the current input method (if any) is employed to make it possible to enter a non-</source>
          <target state="translated">如果 &lt;var&gt;inherit-input-method&lt;/var&gt; 为non - &lt;code&gt;nil&lt;/code&gt; ，则使用当前输入法（如果有）来输入非-</target>
        </trans-unit>
        <trans-unit id="5023a04034e117314618eace81f2f46d79b6c374" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;inherit&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, only attributes directly defined by &lt;var&gt;face&lt;/var&gt; are considered, so the return value may be &lt;code&gt;unspecified&lt;/code&gt;, or a relative value. If &lt;var&gt;inherit&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;face&lt;/var&gt;&amp;rsquo;s definition of &lt;var&gt;attribute&lt;/var&gt; is merged with the faces specified by its &lt;code&gt;:inherit&lt;/code&gt; attribute; however the return value may still be &lt;code&gt;unspecified&lt;/code&gt; or relative. If &lt;var&gt;inherit&lt;/var&gt; is a face or a list of faces, then the result is further merged with that face (or faces), until it becomes specified and absolute.</source>
          <target state="translated">如果 &lt;var&gt;inherit&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则仅考虑由 &lt;var&gt;face&lt;/var&gt; 直接定义的属性，因此返回值可能 &lt;code&gt;unspecified&lt;/code&gt; ，也可能是相对值。如果 &lt;var&gt;inherit&lt;/var&gt; 不是 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;var&gt;face&lt;/var&gt; 的 &lt;var&gt;attribute&lt;/var&gt; 定义将与它的 &lt;code&gt;:inherit&lt;/code&gt; 属性指定的face合并；但是，返回值可能仍未 &lt;code&gt;unspecified&lt;/code&gt; 或相对。如果 &lt;var&gt;inherit&lt;/var&gt; 是一张脸或一张脸的列表，则结果将与该脸进一步合并，直到成为指定的和绝对的为止。</target>
        </trans-unit>
        <trans-unit id="fc5a99940587624d5f8e88905e5e3ffbe83de8bf" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;inherit&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the inserted characters inherit sticky text properties from the two characters before and after the insertion point. See &lt;a href=&quot;sticky-properties#Sticky-Properties&quot;&gt;Sticky Properties&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;var&gt;inherit&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则插入的字符将从插入点之前和之后的两个字符继承粘性文本属性。请参阅&lt;a href=&quot;sticky-properties#Sticky-Properties&quot;&gt;粘性属性&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bd6d2bf7276652257bfa2fcf702f1de6249212e0" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;initial&lt;/var&gt; is a string, the minibuffer starts out containing the text of the string, with point at the end, when the user starts to edit the text. If the user simply types</source>
          <target state="translated">如果 &lt;var&gt;initial&lt;/var&gt; 是一个字符串，则当用户开始编辑文本时，迷你缓冲区将开始包含该字符串的文本，并在末尾带有点。如果用户只是键入</target>
        </trans-unit>
        <trans-unit id="8680d30b1fc65c2bd5d4cdd6205c1b439666973e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;interactive&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that says &lt;var&gt;function&lt;/var&gt; can be called interactively. This lets completion in</source>
          <target state="translated">如果 &lt;var&gt;interactive&lt;/var&gt; 是不 &lt;code&gt;nil&lt;/code&gt; ，即说 &lt;var&gt;function&lt;/var&gt; 可以交互调用。这样可以完成</target>
        </trans-unit>
        <trans-unit id="305323029dc5e36501ec002d854e6fa1bda89b72" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;iterator&lt;/var&gt; is suspended inside an &lt;code&gt;unwind-protect&lt;/code&gt;&amp;rsquo;s &lt;code&gt;bodyform&lt;/code&gt; and becomes unreachable, Emacs will eventually run unwind handlers after a garbage collection pass. (Note that &lt;code&gt;iter-yield&lt;/code&gt; is illegal inside an &lt;code&gt;unwind-protect&lt;/code&gt;&amp;rsquo;s &lt;code&gt;unwindforms&lt;/code&gt;.) To ensure that these handlers are run before then, use &lt;code&gt;iter-close&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;var&gt;iterator&lt;/var&gt; 暂停在 &lt;code&gt;unwind-protect&lt;/code&gt; 的 &lt;code&gt;bodyform&lt;/code&gt; 并且变得不可访问，则Emacs将在垃圾回收通过之后最终运行unwind处理程序。（请注意，在 &lt;code&gt;unwind-protect&lt;/code&gt; 的 &lt;code&gt;unwindforms&lt;/code&gt; ， &lt;code&gt;iter-yield&lt;/code&gt; 是非法的。）要确保在此之前运行这些处理程序，请使用 &lt;code&gt;iter-close&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="68adac69631bb6af71abb5acf2b791fb1a4f7a22" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;kbdmacro&lt;/var&gt; is a symbol, then its function definition is used in place of &lt;var&gt;kbdmacro&lt;/var&gt;. If that is another symbol, this process repeats. Eventually the result should be a string or vector. If the result is not a symbol, string, or vector, an error is signaled.</source>
          <target state="translated">如果 &lt;var&gt;kbdmacro&lt;/var&gt; 是符号，则使用其功能定义代替 &lt;var&gt;kbdmacro&lt;/var&gt; 。如果那是另一个符号，则重复此过程。最终结果应该是字符串或向量。如果结果不是符号，字符串或向量，则表明存在错误。</target>
        </trans-unit>
        <trans-unit id="9801a6f8d4beefddfb578511212b729fa3e04a67" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;keep-backup-version&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then true file version numbers understood as such by the file system are discarded from the return value, but backup version numbers are kept.</source>
          <target state="translated">如果 &lt;var&gt;keep-backup-version&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，那么将从返回值中删除文件系统理解为的真实文件版本号，但保留备份版本号。</target>
        </trans-unit>
        <trans-unit id="fd493bfae6974707467e8f4da94507ec95f258ad" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;keep-mode-if-same&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function does not call the mode command if the buffer is already in the proper major mode. For instance, &lt;code&gt;set-visited-file-name&lt;/code&gt; sets this to &lt;code&gt;t&lt;/code&gt; to avoid killing buffer local variables that the user may have set.</source>
          <target state="translated">如果 &lt;var&gt;keep-mode-if-same&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则如果缓冲区已经处于正确的主模式下，则此函数不会调用mode命令。例如， &lt;code&gt;set-visited-file-name&lt;/code&gt; 将此设置为 &lt;code&gt;t&lt;/code&gt; ,以避免杀死用户可能已设置的缓冲区局部变量。</target>
        </trans-unit>
        <trans-unit id="2e5d6b64d5441408f2897b53ae6d730e7cd4bb9f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;keepalive-flag&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; for a stream connection, enable exchange of low-level keep-alive messages.</source>
          <target state="translated">如果对于流连接 &lt;var&gt;keepalive-flag&lt;/var&gt; 不 &lt;code&gt;nil&lt;/code&gt; ，请启用低级keep-alive消息的交换。</target>
        </trans-unit>
        <trans-unit id="d0e9336903c21276287d695af3704a99778e5015" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;key-regexp&lt;/var&gt; is:</source>
          <target state="translated">如果 &lt;var&gt;key-regexp&lt;/var&gt; 为：</target>
        </trans-unit>
        <trans-unit id="a0b9b556380220ffb46b1c6fb65c0dc341cb6d60" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;key&lt;/var&gt; contains a meta character (not a function key), that character is implicitly replaced by a two-character sequence: the value of &lt;code&gt;meta-prefix-char&lt;/code&gt;, followed by the corresponding non-meta character. Thus, the first example below is handled by conversion into the second example.</source>
          <target state="translated">如果 &lt;var&gt;key&lt;/var&gt; 包含一个元字符（不是功能键），则该字符将隐式替换为两个字符的序列： &lt;code&gt;meta-prefix-char&lt;/code&gt; 的值，后跟相应的非元字符。因此，下面的第一示例通过转换为第二示例来处理。</target>
        </trans-unit>
        <trans-unit id="38ecfb9f9e1a3501bfaf1c274b2980c7981abc98" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;key&lt;/var&gt; is &lt;code&gt;[t]&lt;/code&gt;, this sets the default binding in &lt;var&gt;keymap&lt;/var&gt;. When an event has no binding of its own, the Emacs command loop uses the keymap&amp;rsquo;s default binding, if there is one.</source>
          <target state="translated">如果 &lt;var&gt;key&lt;/var&gt; 为 &lt;code&gt;[t]&lt;/code&gt; ，则在 &lt;var&gt;keymap&lt;/var&gt; 中设置默认绑定。当一个事件没有自己的绑定时，如果有一个绑定，Emacs命令循环将使用键盘映射的默认绑定。</target>
        </trans-unit>
        <trans-unit id="9d007ebbfe70936b9c16b4e47f3152c8a687dbe1" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;key&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, the value is the complete status information for the connection, server, serial port, or pipe; that is, the list of keywords and values specified in &lt;code&gt;make-network-process&lt;/code&gt;, &lt;code&gt;make-serial-process&lt;/code&gt;, or &lt;code&gt;make-pipe-process&lt;/code&gt;, except that some of the values represent the current status instead of what you specified.</source>
          <target state="translated">如果 &lt;var&gt;key&lt;/var&gt; 为 &lt;code&gt;t&lt;/code&gt; ，则值是连接，服务器，串行端口或管道的完整状态信息；也就是说，在 &lt;code&gt;make-network-process&lt;/code&gt; ， &lt;code&gt;make-serial-process&lt;/code&gt; 或 &lt;code&gt;make-pipe-process&lt;/code&gt; 中指定的关键字和值的列表，除了某些值代表当前状态而不是您指定的值。</target>
        </trans-unit>
        <trans-unit id="3eef88733b744d4d8ba22904057183486bf34f35" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;key&lt;/var&gt; is a keyword, the function returns the value corresponding to that keyword.</source>
          <target state="translated">如果 &lt;var&gt;key&lt;/var&gt; 是关键字，则函数返回与该关键字对应的值。</target>
        </trans-unit>
        <trans-unit id="1fe505c313fe10ccf51a3b1c4045e8bdd68ce758" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;key&lt;/var&gt; starts with a mouse event (perhaps following a prefix event), the maps to be consulted are determined based on the event&amp;rsquo;s position. Otherwise, they are determined based on the value of point. However, you can override either of them by specifying &lt;var&gt;position&lt;/var&gt;. If &lt;var&gt;position&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be either a buffer position or an event position like the value of &lt;code&gt;event-start&lt;/code&gt;. Then the maps consulted are determined based on &lt;var&gt;position&lt;/var&gt;.</source>
          <target state="translated">如果 &lt;var&gt;key&lt;/var&gt; 以鼠标事件（可能在前缀事件之后）开始，则根据事件的位置确定要查询的地图。否则，将根据点的值确定它们。但是，您可以通过指定 &lt;var&gt;position&lt;/var&gt; 覆盖它们中的任何一个。如果 &lt;var&gt;position&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则它应该是缓冲区位置或事件位置，例如 &lt;code&gt;event-start&lt;/code&gt; 的值。然后根据 &lt;var&gt;position&lt;/var&gt; 确定要查询的地图。</target>
        </trans-unit>
        <trans-unit id="1ab7dbf10e805849d749f51d1bbad999b0122aec" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;keymap&lt;/var&gt; has submaps (bindings for prefix keys), they too receive new parent keymaps that reflect what &lt;var&gt;parent&lt;/var&gt; specifies for those prefix keys.</source>
          <target state="translated">如果 &lt;var&gt;keymap&lt;/var&gt; 具有子映射（前缀键的绑定），它们也将接收新的父键映射，这些新的父键映射反映了 &lt;var&gt;parent&lt;/var&gt; 为这些前缀键指定的内容。</target>
        </trans-unit>
        <trans-unit id="fccb678faab353122fa2e1f5a9ac1b9fe483270c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;keymap&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, then the maps used are the current active keymaps, disregarding &lt;code&gt;overriding-local-map&lt;/code&gt; (that is, pretending its value is &lt;code&gt;nil&lt;/code&gt;). If &lt;var&gt;keymap&lt;/var&gt; is a keymap, then the maps searched are &lt;var&gt;keymap&lt;/var&gt; and the global keymap. If &lt;var&gt;keymap&lt;/var&gt; is a list of keymaps, only those keymaps are searched.</source>
          <target state="translated">如果 &lt;var&gt;keymap&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则使用的映射是当前活动的键映射，而忽略 &lt;code&gt;overriding-local-map&lt;/code&gt; （即，假装其值为 &lt;code&gt;nil&lt;/code&gt; ）。如果 &lt;var&gt;keymap&lt;/var&gt; 是keymap，则搜索的 &lt;var&gt;keymap&lt;/var&gt; 是keymap和全局keymap。如果 &lt;var&gt;keymap&lt;/var&gt; 是keymap的列表，则仅搜索那些keymap。</target>
        </trans-unit>
        <trans-unit id="afef749f0ed8d9b7b5e44103ec3b6c41f83801a9" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;keymap&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that keymap is the local keymap to use in the minibuffer. If &lt;var&gt;keymap&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, the value of &lt;code&gt;minibuffer-local-map&lt;/code&gt; is used as the keymap. Specifying a keymap is the most important way to customize the minibuffer for various applications such as completion.</source>
          <target state="translated">如果 &lt;var&gt;keymap&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则该keymap是要在迷你缓冲区中使用的本地keymap。如果省略 &lt;var&gt;keymap&lt;/var&gt; 或 &lt;code&gt;nil&lt;/code&gt; ，则将 &lt;code&gt;minibuffer-local-map&lt;/code&gt; 的值用作键映射。指定按键映射是针对各种应用（例如完成）自定义迷你缓冲区的最重要方法。</target>
        </trans-unit>
        <trans-unit id="f5b57269deb4b6580452d3f46f04e726e68c9f94" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;laxmatch&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it means there should be no error if there is no subexpression numbered &lt;var&gt;subexp&lt;/var&gt; in &lt;var&gt;matcher&lt;/var&gt;. Obviously, fontification of the subexpression numbered &lt;var&gt;subexp&lt;/var&gt; will not occur. However, fontification of other subexpressions (and other regexps) will continue. If &lt;var&gt;laxmatch&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, and the specified subexpression is missing, then an error is signaled which terminates search-based fontification.</source>
          <target state="translated">如果 &lt;var&gt;laxmatch&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则意味着在 &lt;var&gt;matcher&lt;/var&gt; 中没有编号为 &lt;var&gt;subexp&lt;/var&gt; 的子表达式时，应该没有错误。显然，编号为 &lt;var&gt;subexp&lt;/var&gt; 的子表达式的字体将不会发生。但是，其他子表达式（和其他正则表达式）的字体将继续。如果 &lt;var&gt;laxmatch&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，并且缺少指定的子表达式，则将发出错误消息，该错误将终止基于搜索的字体。</target>
        </trans-unit>
        <trans-unit id="f2901c57b5d8694910a57307520ad3c26e7ccbbe" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;left&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; and &lt;var&gt;inverse&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this means that the y-pixel value returned for any line specifies the distance in pixels from the left edge of the last (leftmost) glyph of that line to the right edge (body edge if &lt;var&gt;body&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;) of &lt;var&gt;window&lt;/var&gt;. If &lt;var&gt;left&lt;/var&gt; and &lt;var&gt;inverse&lt;/var&gt; are both non-&lt;code&gt;nil&lt;/code&gt;, the y-pixel value returned for any line specifies the distance in pixels from the left edge (body edge if &lt;var&gt;body&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;) of &lt;var&gt;window&lt;/var&gt; to the left edge of the last (leftmost) glyph of that line.</source>
          <target state="translated">如果 &lt;var&gt;left&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; 且 &lt;var&gt;inverse&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则这意味着针对任何行返回的y像素值指定了从该行的最后一个（最左侧）字形的左边缘到右边缘（如果为体边缘，则为像素）的距离（以像素为单位） &lt;var&gt;body&lt;/var&gt; 是非 &lt;code&gt;nil&lt;/code&gt; 的） &lt;var&gt;window&lt;/var&gt; 。如果 &lt;var&gt;left&lt;/var&gt; 和 &lt;var&gt;inverse&lt;/var&gt; 均为非 &lt;code&gt;nil&lt;/code&gt; ，则为任何行返回的y像素值指定从 &lt;var&gt;window&lt;/var&gt; 的左边缘（如果 &lt;var&gt;body&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则为body边缘）到最后一个（最左边）的左边缘的距离（以像素为单位）那条线的字形。</target>
        </trans-unit>
        <trans-unit id="be828177f3b6c4b6519507c07d4107040b780ade" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;limit&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, it means to choose a new seed as if Emacs were restarting, typically from the system entropy. On systems lacking entropy pools, choose the seed from less-random volatile data such as the current time.</source>
          <target state="translated">如果 &lt;var&gt;limit&lt;/var&gt; 为 &lt;code&gt;t&lt;/code&gt; ，则意味着要选择一个新种子，就像Emacs正在重新启动一样，通常是从系统熵中选择。在缺乏熵池的系统上，从不那么随机的易失性数据（例如当前时间）中选择种子。</target>
        </trans-unit>
        <trans-unit id="5b68f1050fcbf8f573965d7b17ddf9c856e8812b" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;limit&lt;/var&gt; is a positive fixnum, the value is chosen to be nonnegative and less than &lt;var&gt;limit&lt;/var&gt;. Otherwise, the value might be any fixnum, i.e., any integer from &lt;code&gt;most-negative-fixnum&lt;/code&gt; through &lt;code&gt;most-positive-fixnum&lt;/code&gt; (see &lt;a href=&quot;integer-basics#Integer-Basics&quot;&gt;Integer Basics&lt;/a&gt;).</source>
          <target state="translated">如果 &lt;var&gt;limit&lt;/var&gt; 是一个正的fixnum，则将值选择为非负且小于 &lt;var&gt;limit&lt;/var&gt; 。否则，该值可以是任何fixnum，即从 &lt;code&gt;most-negative-fixnum&lt;/code&gt; 到 &lt;code&gt;most-positive-fixnum&lt;/code&gt; 的任何整数（请参阅&lt;a href=&quot;integer-basics#Integer-Basics&quot;&gt;Integer Basics&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="417d75bb8b3a1c460180c3c7926ae36dac0d4145" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;limit&lt;/var&gt; is a string, it means to choose a new seed based on the string&amp;rsquo;s contents.</source>
          <target state="translated">如果 &lt;var&gt;limit&lt;/var&gt; 是字符串，则意味着根据字符串的内容选择一个新种子。</target>
        </trans-unit>
        <trans-unit id="0492de86ea3be849e0f2da0effb3111a934e1754" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;limit&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it is a buffer position; if the beginning of the field is before &lt;var&gt;limit&lt;/var&gt;, then &lt;var&gt;limit&lt;/var&gt; will be returned instead.</source>
          <target state="translated">如果 &lt;var&gt;limit&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则为缓冲区位置；否则为0。如果字段的开头在 &lt;var&gt;limit&lt;/var&gt; 之前，则将返回 &lt;var&gt;limit&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="587785dff44f5e0f04e90e83cc8bb6b74173c381" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;limit&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it is a buffer position; if the end of the field is after &lt;var&gt;limit&lt;/var&gt;, then &lt;var&gt;limit&lt;/var&gt; will be returned instead.</source>
          <target state="translated">如果 &lt;var&gt;limit&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则为缓冲区位置；否则为0。如果字段的末尾在 &lt;var&gt;limit&lt;/var&gt; 之后，则将返回 &lt;var&gt;limit&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="a89303d2068a0479a9c61c462ccd8dc0fefef1c2" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;limit&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it must be a position in the current buffer. It specifies the upper bound to the search. No match extending after that position is accepted. If &lt;var&gt;limit&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the end of the accessible portion of the buffer.</source>
          <target state="translated">如果 &lt;var&gt;limit&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则它必须是当前缓冲区中的位置。它指定搜索的上限。在该位置被接受后，没有比赛扩大。如果 &lt;var&gt;limit&lt;/var&gt; 省略或为 &lt;code&gt;nil&lt;/code&gt; ，则默认为缓冲区可访问部分的末尾。</target>
        </trans-unit>
        <trans-unit id="355c20aed688261f90727f7234112f9681ff781f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;limit&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it must be a position in the current buffer; it specifies the upper bound to the search. The match found must not extend after that position.</source>
          <target state="translated">如果 &lt;var&gt;limit&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则它必须是当前缓冲区中的一个位置；它指定搜索的上限。找到的匹配不得在该位置之后延伸。</target>
        </trans-unit>
        <trans-unit id="9297be59454e1a754f06eef423b65713648dc0ea" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;limit&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then the scan ends at position &lt;var&gt;limit&lt;/var&gt;. If there is no property change before that point, &lt;code&gt;next-single-property-change&lt;/code&gt; returns &lt;var&gt;limit&lt;/var&gt;.</source>
          <target state="translated">如果 &lt;var&gt;limit&lt;/var&gt; 不 &lt;code&gt;nil&lt;/code&gt; ，则扫描在位置 &lt;var&gt;limit&lt;/var&gt; 处结束。如果在此之前没有属性更改，则 &lt;code&gt;next-single-property-change&lt;/code&gt; 将返回 &lt;var&gt;limit&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="9690710ef9da23b621d7dfa860746992d8f37deb" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;limit&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then the scan ends at position &lt;var&gt;limit&lt;/var&gt;. If there is no property change before that point, this function returns &lt;var&gt;limit&lt;/var&gt;.</source>
          <target state="translated">如果 &lt;var&gt;limit&lt;/var&gt; 不 &lt;code&gt;nil&lt;/code&gt; ，则扫描在位置 &lt;var&gt;limit&lt;/var&gt; 处结束。如果在那之前没有属性更改，则此函数返回 &lt;var&gt;limit&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="76ec879549d2b357eaf032a4d1a0e5d120d2878c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;limit&lt;/var&gt; is supplied (it must be a number or a marker), it specifies the maximum position in the buffer that point can be skipped to. Point will stop at or before &lt;var&gt;limit&lt;/var&gt;.</source>
          <target state="translated">如果提供了 &lt;var&gt;limit&lt;/var&gt; （必须是数字或标记），它将指定缓冲区中可以跳过该点的最大位置。点将在 &lt;var&gt;limit&lt;/var&gt; 处或之前停止。</target>
        </trans-unit>
        <trans-unit id="76a425c9b93feedd8259bab6b2fe5cdc7ac0c135" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;linger-arg&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, wait for successful transmission of all queued packets on the connection before it is deleted (see &lt;code&gt;delete-process&lt;/code&gt;). If &lt;var&gt;linger-arg&lt;/var&gt; is an integer, it specifies the maximum time in seconds to wait for queued packets to be sent before closing the connection. The default is &lt;code&gt;nil&lt;/code&gt;, which means to discard unsent queued packets when the process is deleted.</source>
          <target state="translated">如果 &lt;var&gt;linger-arg&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，请在连接上等待所有已排队数据包的成功传输，然后再将其删除（请参阅 &lt;code&gt;delete-process&lt;/code&gt; ）。如果 &lt;var&gt;linger-arg&lt;/var&gt; 是整数，则它指定关闭连接之前等待发送排队数据包的最长时间（以秒为单位）。缺省值为 &lt;code&gt;nil&lt;/code&gt; ，这意味着在删除进程时丢弃未发送的排队数据包。</target>
        </trans-unit>
        <trans-unit id="d20324b9dfe0ad3135dd3cca84e3a639d94edf1c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;list&lt;/var&gt; is not &lt;code&gt;nil&lt;/code&gt; or a cons cell, &lt;code&gt;safe-length&lt;/code&gt; returns 0.</source>
          <target state="translated">如果 &lt;var&gt;list&lt;/var&gt; 不是 &lt;code&gt;nil&lt;/code&gt; 或cons单元格，则 &lt;code&gt;safe-length&lt;/code&gt; 返回0。</target>
        </trans-unit>
        <trans-unit id="f21c3cb62cce40abd0a67cd9eafca1b0c8049e07" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;literal&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;var&gt;replacement&lt;/var&gt; is inserted exactly as it is, the only alterations being case changes as needed. If it is &lt;code&gt;nil&lt;/code&gt; (the default), then the character &amp;lsquo;</source>
          <target state="translated">如果 &lt;var&gt;literal&lt;/var&gt; 不是 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;var&gt;replacement&lt;/var&gt; 将按原样插入，唯一的更改是根据需要更改大小写。如果为 &lt;code&gt;nil&lt;/code&gt; （默认值），则字符'</target>
        </trans-unit>
        <trans-unit id="db6c136a27bb820796e874179ca984f900ddb4cc" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;load&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this command loads the compiled file after compiling it. Interactively, &lt;var&gt;load&lt;/var&gt; is the prefix argument.</source>
          <target state="translated">如果 &lt;var&gt;load&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则此命令在编译后加载已编译的文件。交互式地， &lt;var&gt;load&lt;/var&gt; 是前缀参数。</target>
        </trans-unit>
        <trans-unit id="ea9440d9b5f4dd277725a72af24eaba7092d6a75" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;local&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that says to add &lt;var&gt;function&lt;/var&gt; to the buffer-local hook list instead of to the global hook list. This makes the hook buffer-local and adds &lt;code&gt;t&lt;/code&gt; to the buffer-local value. The latter acts as a flag to run the hook functions in the default value as well as in the local value.</source>
          <target state="translated">如果 &lt;var&gt;local&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则表示将 &lt;var&gt;function&lt;/var&gt; 添加到本地缓冲区挂钩列表，而不是全局挂钩列表。这使钩子成为本地缓冲区，并将 &lt;code&gt;t&lt;/code&gt; 添加到本地缓冲区值。后者充当在默认值和本地值中运行挂钩函数的标志。</target>
        </trans-unit>
        <trans-unit id="a6cde464c5f6e3d1d68e588fb6c6d428cffda934" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;local&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that says to remove &lt;var&gt;function&lt;/var&gt; from the buffer-local hook list instead of from the global hook list.</source>
          <target state="translated">如果 &lt;var&gt;local&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则表示从本地缓冲区挂钩列表中删除 &lt;var&gt;function&lt;/var&gt; ，而不是从全局挂钩列表中删除功能。</target>
        </trans-unit>
        <trans-unit id="8d65aea389f65c19be6a6aafc97ff590a4cd1b41" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;loopfunc&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it is a function that is called, without arguments, prior to each iteration of the macro. If &lt;var&gt;loopfunc&lt;/var&gt; returns &lt;code&gt;nil&lt;/code&gt;, then this stops execution of the macro.</source>
          <target state="translated">如果 &lt;var&gt;loopfunc&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则该函数在每次宏迭代之前被调用，不带参数。如果 &lt;var&gt;loopfunc&lt;/var&gt; 返回 &lt;code&gt;nil&lt;/code&gt; ，则这将停止执行宏。</target>
        </trans-unit>
        <trans-unit id="5fe23c8bf6b4ebe541da711f4408c1aca504de8d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;mask&lt;/var&gt; is &lt;code&gt;heuristic&lt;/code&gt; or &lt;code&gt;(heuristic &lt;var&gt;bg&lt;/var&gt;)&lt;/code&gt;, build a clipping mask for the image, so that the background of a frame is visible behind the image. If &lt;var&gt;bg&lt;/var&gt; is not specified, or if &lt;var&gt;bg&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, determine the background color of the image by looking at the four corners of the image, assuming the most frequently occurring color from the corners is the background color of the image. Otherwise, &lt;var&gt;bg&lt;/var&gt; must be a list &lt;code&gt;(&lt;var&gt;red&lt;/var&gt; &lt;var&gt;green&lt;/var&gt; &lt;var&gt;blue&lt;/var&gt;)&lt;/code&gt; specifying the color to assume for the background of the image.</source>
          <target state="translated">如果 &lt;var&gt;mask&lt;/var&gt; 是 &lt;code&gt;heuristic&lt;/code&gt; 或 &lt;code&gt;(heuristic &lt;var&gt;bg&lt;/var&gt;)&lt;/code&gt; ，请为图像建立一个剪裁蒙版，以便在图像后面可以看到框架的背景。如果 &lt;var&gt;bg&lt;/var&gt; 未指定，或者如果 &lt;var&gt;bg&lt;/var&gt; 是 &lt;code&gt;t&lt;/code&gt; ，通过观察图像的四个角中，假设从拐角处的最频繁出现的颜色确定的图像的背景颜色是图像的背景色。否则， &lt;var&gt;bg&lt;/var&gt; 必须是一个列表 &lt;code&gt;(&lt;var&gt;red&lt;/var&gt; &lt;var&gt;green&lt;/var&gt; &lt;var&gt;blue&lt;/var&gt;)&lt;/code&gt; 指定要为图像背景采用的颜色。</target>
        </trans-unit>
        <trans-unit id="c2fbe70a6023303a1a1c54aca4b69ff1e60244b5" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;mask&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, remove a mask from the image, if it has one. Images in some formats include a mask which can be removed by specifying &lt;code&gt;:mask nil&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;var&gt;mask&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则从图像中除去一个遮罩（如果有的话）。某些格式的图像包含一个掩码，可以通过指定 &lt;code&gt;:mask nil&lt;/code&gt; 除去。</target>
        </trans-unit>
        <trans-unit id="29b3c63a62c16a62b20885f28c3a0f60d1f12ab1" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;match-list&lt;/var&gt; refers to a buffer that doesn&amp;rsquo;t exist, you don&amp;rsquo;t get an error; that sets the match data in a meaningless but harmless way.</source>
          <target state="translated">如果 &lt;var&gt;match-list&lt;/var&gt; 引用的缓冲区不存在，则不会出错。以无意义但无害的方式设置匹配数据。</target>
        </trans-unit>
        <trans-unit id="6b868964784012f301882061fadf2a9192150264" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;match-regexp&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function returns only those file names that contain a match for that regular expression&amp;mdash;the other file names are excluded from the list. On case-insensitive filesystems, the regular expression matching is case-insensitive.</source>
          <target state="translated">如果 &lt;var&gt;match-regexp&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则此函数仅返回包含与该正则表达式匹配的文件名-其他文件名将从列表中排除。在不区分大小写的文件系统上，正则表达式匹配不区分大小写。</target>
        </trans-unit>
        <trans-unit id="a945bf4fa1494c2e854b52dfe7655381799b677c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;message&lt;/var&gt; is a string, then the optional argument &lt;var&gt;buffer-name&lt;/var&gt; is the name of the buffer used to display it when a pop-up buffer is used, defaulting to</source>
          <target state="translated">如果 &lt;var&gt;message&lt;/var&gt; 是字符串，则可选参数 &lt;var&gt;buffer-name&lt;/var&gt; 是使用弹出缓冲区时用于显示它的缓冲区的名称，默认为</target>
        </trans-unit>
        <trans-unit id="760f0f6a2a1bc2d59cd6eae2a7e49da39f7cba81" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;message&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it is displayed in the echo area while &lt;var&gt;string&lt;/var&gt; is displayed in the buffer. If it is &lt;code&gt;nil&lt;/code&gt;, a default message says to type &lt;var&gt;char&lt;/var&gt; to continue.</source>
          <target state="translated">如果 &lt;var&gt;message&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则它显示在回显区域中，而 &lt;var&gt;string&lt;/var&gt; 则显示在缓冲区中。如果为 &lt;code&gt;nil&lt;/code&gt; ，则默认消息显示键入 &lt;var&gt;char&lt;/var&gt; 以继续。</target>
        </trans-unit>
        <trans-unit id="ea7a25f7e7e8508103c16260b0a4d9e913d01385" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;min-value&lt;/var&gt; and &lt;var&gt;max-value&lt;/var&gt; are numbers, you can give the argument &lt;var&gt;current-value&lt;/var&gt; a numerical value specifying the initial progress; if omitted, this defaults to &lt;var&gt;min-value&lt;/var&gt;.</source>
          <target state="translated">如果 &lt;var&gt;min-value&lt;/var&gt; 和 &lt;var&gt;max-value&lt;/var&gt; 是数字，则可以为参数 &lt;var&gt;current-value&lt;/var&gt; 提供一个指定初始进度的数值；如果省略，则默认为 &lt;var&gt;min-value&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="cb777f84764d51a3d01c9187dbee3b0316f62b83" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;minibuf&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, the cyclic ordering includes all minibuffer windows. If &lt;var&gt;minibuf&lt;/var&gt; is neither &lt;code&gt;t&lt;/code&gt; nor &lt;code&gt;nil&lt;/code&gt;, minibuffer windows are not included even if they are active.</source>
          <target state="translated">如果 &lt;var&gt;minibuf&lt;/var&gt; 为 &lt;code&gt;t&lt;/code&gt; ，则循环顺序包括所有minibuffer窗口。如果 &lt;var&gt;minibuf&lt;/var&gt; 既不是 &lt;code&gt;t&lt;/code&gt; 也不是 &lt;code&gt;nil&lt;/code&gt; ，则即使它们处于活动状态，也不包含minibuffer窗口。</target>
        </trans-unit>
        <trans-unit id="76a2b331501df7f82f53a73ac549c9fe781c256d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;mode&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this function adds &lt;var&gt;keywords&lt;/var&gt; to &lt;code&gt;font-lock-keywords&lt;/code&gt; in the current buffer. This way of calling &lt;code&gt;font-lock-add-keywords&lt;/code&gt; is usually used in mode hook functions.</source>
          <target state="translated">如果 &lt;var&gt;mode&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则此函数将 &lt;var&gt;keywords&lt;/var&gt; 添加到当前缓冲区的 &lt;code&gt;font-lock-keywords&lt;/code&gt; 中。这种调用 &lt;code&gt;font-lock-add-keywords&lt;/code&gt; 的方法通常在模式挂钩函数中使用。</target>
        </trans-unit>
        <trans-unit id="358fff141b55cbcbbf4a72f5daf12d75a9590b09" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;mode&lt;/var&gt; is a symbol which is a major mode command name, such as &lt;code&gt;c-mode&lt;/code&gt;, the effect is that enabling Font Lock mode in &lt;var&gt;mode&lt;/var&gt; will add &lt;var&gt;keywords&lt;/var&gt; to &lt;code&gt;font-lock-keywords&lt;/code&gt;. Calling with a non-&lt;code&gt;nil&lt;/code&gt; value of &lt;var&gt;mode&lt;/var&gt; is correct only in your</source>
          <target state="translated">如果 &lt;var&gt;mode&lt;/var&gt; 是一个象征这是一个主要模式的命令名称，如 &lt;code&gt;c-mode&lt;/code&gt; ，其效果是，使字体锁定模式 &lt;var&gt;mode&lt;/var&gt; 将新增 &lt;var&gt;keywords&lt;/var&gt; 到 &lt;code&gt;font-lock-keywords&lt;/code&gt; 。与非呼叫 &lt;code&gt;nil&lt;/code&gt; 的数值 &lt;var&gt;mode&lt;/var&gt; 只有在正确的</target>
        </trans-unit>
        <trans-unit id="2554816ae984d23f35288cef825daf0cffbd1b77" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;multibyte&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, strings given to the process filter are multibyte, otherwise they are unibyte. The default is &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;var&gt;multibyte&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则给进程过滤器的字符串为multibyte，否则为unibyte。默认值为 &lt;code&gt;t&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9cd8ae8855810177e168ad382d0f1df3450d7ae5" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;must-succeed&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, failure to open the connection terminates Emacs. Otherwise, it is an ordinary Lisp error.</source>
          <target state="translated">如果 &lt;var&gt;must-succeed&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则打开连接失败将终止Emacs。否则，这是一个普通的Lisp错误。</target>
        </trans-unit>
        <trans-unit id="e5a85e125d6507b27a491ad49accf35437a93d01" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;mustbenew&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;write-region&lt;/code&gt; asks for confirmation if &lt;var&gt;filename&lt;/var&gt; names an existing file. If &lt;var&gt;mustbenew&lt;/var&gt; is the symbol &lt;code&gt;excl&lt;/code&gt;, then &lt;code&gt;write-region&lt;/code&gt; does not ask for confirmation, but instead it signals an error &lt;code&gt;file-already-exists&lt;/code&gt; if the file already exists. Although &lt;code&gt;write-region&lt;/code&gt; normally follows a symbolic link and creates the pointed-to file if the symbolic link is dangling, it does not follow symbolic links if &lt;var&gt;mustbenew&lt;/var&gt; is &lt;code&gt;excl&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;var&gt;mustbenew&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;write-region&lt;/code&gt; 要求确认 &lt;var&gt;filename&lt;/var&gt; 名是否命名现有文件。如果 &lt;var&gt;mustbenew&lt;/var&gt; 是符号 &lt;code&gt;excl&lt;/code&gt; ，那么 &lt;code&gt;write-region&lt;/code&gt; 不请求确认，而是它标志着一个错误 &lt;code&gt;file-already-exists&lt;/code&gt; 如果该文件已经存在。尽管 &lt;code&gt;write-region&lt;/code&gt; 通常跟随符号链接并在该符号链接悬空时创建指向的文件，但是如果 &lt;var&gt;mustbenew&lt;/var&gt; 是 &lt;code&gt;excl&lt;/code&gt; ，则它不跟随符号链接。</target>
        </trans-unit>
        <trans-unit id="3746e7a4b93c2f5e09997704bda110912ad41e91" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;n&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then it puts point &lt;var&gt;n&lt;/var&gt; tenths of the way from the beginning of the accessible portion of the buffer. In an interactive call, &lt;var&gt;n&lt;/var&gt; is the numeric prefix argument, if provided; otherwise &lt;var&gt;n&lt;/var&gt; defaults to &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;var&gt;n&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则它将点 &lt;var&gt;n&lt;/var&gt; 置于缓冲区可访问部分的开头的十分之一处。在交互式调用中， &lt;var&gt;n&lt;/var&gt; 是数字前缀参数（如果提供）；否则， &lt;var&gt;n&lt;/var&gt; 默认为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7fa5843f9731734f80c905de68bf6f57d9a02cd3" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;n&lt;/var&gt; is zero, &lt;code&gt;nthcdr&lt;/code&gt; returns all of &lt;var&gt;list&lt;/var&gt;. If the length of &lt;var&gt;list&lt;/var&gt; is &lt;var&gt;n&lt;/var&gt; or less, &lt;code&gt;nthcdr&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;var&gt;n&lt;/var&gt; 为零，则 &lt;code&gt;nthcdr&lt;/code&gt; 返回 &lt;var&gt;list&lt;/var&gt; 的全部。如果 &lt;var&gt;list&lt;/var&gt; 的长度为 &lt;var&gt;n&lt;/var&gt; 或更小，则 &lt;code&gt;nthcdr&lt;/code&gt; 返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f4b40ddbf15f1a1972220177b91db86c24e8d264" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;n&lt;/var&gt; is zero, indicating a request for the latest kill, &lt;code&gt;current-kill&lt;/code&gt; calls the value of &lt;code&gt;interprogram-paste-function&lt;/code&gt; (documented below) before consulting the kill ring. If that value is a function and calling it returns a string or a list of several strings, &lt;code&gt;current-kill&lt;/code&gt; pushes the strings onto the kill ring and returns the first string. It also sets the yanking pointer to point to the kill-ring entry of the first string returned by &lt;code&gt;interprogram-paste-function&lt;/code&gt;, regardless of the value of &lt;var&gt;do-not-move&lt;/var&gt;. Otherwise, &lt;code&gt;current-kill&lt;/code&gt; does not treat a zero value for &lt;var&gt;n&lt;/var&gt; specially: it returns the entry pointed at by the yanking pointer and does not move the yanking pointer.</source>
          <target state="translated">如果 &lt;var&gt;n&lt;/var&gt; 为零，表示请求最后一次终止，则 &lt;code&gt;current-kill&lt;/code&gt; 会在咨询终止环之前调用 &lt;code&gt;interprogram-paste-function&lt;/code&gt; 的值（如下所述）。如果该值是一个函数并调用它返回一个字符串或几个字符串的列表，则 &lt;code&gt;current-kill&lt;/code&gt; 将这些字符串推到kill环上并返回第一个字符串。它还将yanking指针设置为指向 &lt;code&gt;interprogram-paste-function&lt;/code&gt; 返回的第一个字符串的kill-ring条目，而不管 &lt;var&gt;do-not-move&lt;/var&gt; 的值如何。否则， &lt;code&gt;current-kill&lt;/code&gt; 不将 &lt;var&gt;n&lt;/var&gt; 的值视为零 特别是：它返回拉动指针指向的条目，并且不移动拉动指针。</target>
        </trans-unit>
        <trans-unit id="c4a84c3df345bcac96cded9a268e2fd2a15b3b21" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;name&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this function modifies the fontset of the selected frame or that of &lt;var&gt;frame&lt;/var&gt; if &lt;var&gt;frame&lt;/var&gt; is not &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;var&gt;name&lt;/var&gt; 是 &lt;code&gt;nil&lt;/code&gt; ，该函数修改所选择的帧的字体集或的 &lt;var&gt;frame&lt;/var&gt; ，如果 &lt;var&gt;frame&lt;/var&gt; 是不是 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="23df771eaf3bad31db2ac910d60c1121c8c471d3" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;name&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, this function modifies the default fontset, whose short name is &amp;lsquo;</source>
          <target state="translated">如果 &lt;var&gt;name&lt;/var&gt; 为 &lt;code&gt;t&lt;/code&gt; ，则此函数将修改默认字体集，其短名称为'</target>
        </trans-unit>
        <trans-unit id="0730e252581492ff86652eae61f09fd2092984ed" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;name&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it means to delete all overlays in the specified region. If &lt;var&gt;start&lt;/var&gt; and/or &lt;var&gt;end&lt;/var&gt; are omitted or &lt;code&gt;nil&lt;/code&gt;, that means the beginning and end of the buffer respectively. Therefore, &lt;code&gt;(remove-overlays)&lt;/code&gt; removes all the overlays in the current buffer.</source>
          <target state="translated">如果 &lt;var&gt;name&lt;/var&gt; 省略或 &lt;code&gt;nil&lt;/code&gt; ，则意味着删除指定区域中的所有叠加层。如果 &lt;var&gt;start&lt;/var&gt; 和/或 &lt;var&gt;end&lt;/var&gt; 省略或为 &lt;code&gt;nil&lt;/code&gt; ，则分别表示缓冲区的开始和结束。因此， &lt;code&gt;(remove-overlays)&lt;/code&gt; 删除当前缓冲区中的所有叠加。</target>
        </trans-unit>
        <trans-unit id="6af1bf26a6a0bc89c6b24efcee8567b5fd3a6e3d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;new-pos&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;constrain-to-field&lt;/code&gt; uses the value of point instead, and moves point to the resulting position in addition to returning that position.</source>
          <target state="translated">如果 &lt;var&gt;new-pos&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，那么 &lt;code&gt;constrain-to-field&lt;/code&gt; 将使用point的值代替，并将point移动到结果位置，除了返回该位置。</target>
        </trans-unit>
        <trans-unit id="9b5541e81cf359db0249d926f39f56051c6aaf6f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;newname&lt;/var&gt; exists, then it must be an empty directory if &lt;var&gt;oldname&lt;/var&gt; is a directory and a non-directory otherwise.</source>
          <target state="translated">如果存在 &lt;var&gt;newname&lt;/var&gt; ，则如果 &lt;var&gt;oldname&lt;/var&gt; 是目录，则它必须是一个空目录，否则是一个非目录。</target>
        </trans-unit>
        <trans-unit id="70f0c76c07e217c62c33d733d989713df6e7203e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;newname&lt;/var&gt; is a symbolic link, its directory entry is replaced, not the directory entry it points to. If &lt;var&gt;oldname&lt;/var&gt; is a symbolic link, this function might or might not follow the link; it does not follow the link on GNU platforms. If &lt;var&gt;oldname&lt;/var&gt; is a directory, this function typically fails, although for the superuser on a few old-fashioned non-GNU platforms it can succeed and create a filesystem that is not tree-structured.</source>
          <target state="translated">如果 &lt;var&gt;newname&lt;/var&gt; 是符号链接，则替换其目录条目，而不是它指向的目录条目。如果 &lt;var&gt;oldname&lt;/var&gt; 是符号链接，则此函数可能会也可能不会跟随该链接；它不遵循GNU平台上的链接。如果 &lt;var&gt;oldname&lt;/var&gt; 是目录，则此功能通常会失败，尽管对于一些老式的非GNU平台上的超级用户而言，它可以成功并创建非树形结构的文件系统。</target>
        </trans-unit>
        <trans-unit id="e5bad4da3538be0c529de47a9ba28d4ee862b7df" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;no-error&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; and a suitable path can&amp;rsquo;t be found, don&amp;rsquo;t signal an error. Instead, return a list of directories as before, except that &lt;code&gt;nil&lt;/code&gt; appears in place of the image directory.</source>
          <target state="translated">如果 &lt;var&gt;no-error&lt;/var&gt; 是非 &lt;code&gt;nil&lt;/code&gt; 和合适的路径无法找到，不发出错误信号。而是像以前一样返回目录列表，只是 &lt;code&gt;nil&lt;/code&gt; 代替了图像目录。</target>
        </trans-unit>
        <trans-unit id="36e771c9c8ea6812625c3ae824d4c85aff3882bf" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;no-remap&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, find the bindings for &lt;var&gt;other-command&lt;/var&gt; and treat them as though they are also bindings for &lt;var&gt;command&lt;/var&gt;. If &lt;var&gt;no-remap&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, include the vector &lt;code&gt;[remap &lt;var&gt;other-command&lt;/var&gt;]&lt;/code&gt; in the list of possible key sequences, instead of finding those bindings.</source>
          <target state="translated">如果 &lt;var&gt;no-remap&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，请找到 &lt;var&gt;other-command&lt;/var&gt; 的绑定，并将它们也视为 &lt;var&gt;command&lt;/var&gt; 的绑定。如果 &lt;var&gt;no-remap&lt;/var&gt; 不为 &lt;code&gt;nil&lt;/code&gt; ，则在可能的键序列列表中包括向量 &lt;code&gt;[remap &lt;var&gt;other-command&lt;/var&gt;]&lt;/code&gt; ，而不是查找这些绑定。</target>
        </trans-unit>
        <trans-unit id="de293f24fde5a6bfad440f3302beb58e65ef06e1" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;no-remap&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, return the bindings for &lt;var&gt;other-command&lt;/var&gt; rather than &lt;var&gt;command&lt;/var&gt;. If &lt;var&gt;no-remap&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, return the bindings for &lt;var&gt;command&lt;/var&gt;, ignoring the fact that it is remapped.</source>
          <target state="translated">如果 &lt;var&gt;no-remap&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则返回 &lt;var&gt;other-command&lt;/var&gt; 而不是 &lt;var&gt;command&lt;/var&gt; 的绑定。如果 &lt;var&gt;no-remap&lt;/var&gt; 为non - &lt;code&gt;nil&lt;/code&gt; ，则返回 &lt;var&gt;command&lt;/var&gt; 的绑定，而忽略它被重新映射的事实。</target>
        </trans-unit>
        <trans-unit id="00e082503381f94a9d71d41842fc34eccabb510d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;noauto&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that says not to enable or disable Auto-Save mode. The mode remains enabled if it was enabled before.</source>
          <target state="translated">如果 &lt;var&gt;noauto&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则表示不启用或禁用自动保存模式。如果之前已启用，则该模式保持启用状态。</target>
        </trans-unit>
        <trans-unit id="b29af83687727fd1b589a3008542c14f5b548ea8" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;nodigits&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;suppress-keymap&lt;/code&gt; defines digits to run &lt;code&gt;digit-argument&lt;/code&gt;, and</source>
          <target state="translated">如果 &lt;var&gt;nodigits&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，那么press &lt;code&gt;suppress-keymap&lt;/code&gt; 定义数字以运行 &lt;code&gt;digit-argument&lt;/code&gt; ，然后</target>
        </trans-unit>
        <trans-unit id="d0a493315f909df0fe4aba7cda1b88945120716f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;nodisp&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;sit-for&lt;/code&gt; does not redisplay, but it still returns as soon as input is available (or when the timeout elapses).</source>
          <target state="translated">如果 &lt;var&gt;nodisp&lt;/var&gt; 不为 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;sit-for&lt;/code&gt; 不会重新显示，但是只要有可用的输入（或经过超时），它仍然会返回。</target>
        </trans-unit>
        <trans-unit id="d5c2797052a29fc6fac6d9aca68e89cff39f4db3" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;noerror&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;word-search-forward&lt;/code&gt; signals an error if the search fails. If &lt;var&gt;noerror&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, then it returns &lt;code&gt;nil&lt;/code&gt; instead of signaling an error. If &lt;var&gt;noerror&lt;/var&gt; is neither &lt;code&gt;nil&lt;/code&gt; nor &lt;code&gt;t&lt;/code&gt;, it moves point to &lt;var&gt;limit&lt;/var&gt; (or the end of the accessible portion of the buffer) and returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;var&gt;noerror&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，那么如果搜索失败， &lt;code&gt;word-search-forward&lt;/code&gt; 发出错误信号。如果 &lt;var&gt;noerror&lt;/var&gt; 是 &lt;code&gt;t&lt;/code&gt; ，则它返回 &lt;code&gt;nil&lt;/code&gt; 而不是发出错误信号。如果 &lt;var&gt;noerror&lt;/var&gt; 既不是 &lt;code&gt;nil&lt;/code&gt; 也不是 &lt;code&gt;t&lt;/code&gt; ，它将移动点到 &lt;var&gt;limit&lt;/var&gt; （或缓冲区的可访问部分的末尾）并返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b34901434cb924798166f7998a7c369b13aa3ff8" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;noerror&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that suppresses errors from actual loading of the file. In that case, &lt;code&gt;require&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt; if loading the file fails. Normally, &lt;code&gt;require&lt;/code&gt; returns &lt;var&gt;feature&lt;/var&gt;.</source>
          <target state="translated">如果 &lt;var&gt;noerror&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则可以从实际加载文件时抑制错误。在这种情况下，如果加载文件失败，则 &lt;code&gt;require&lt;/code&gt; 返回 &lt;code&gt;nil&lt;/code&gt; 。通常， &lt;code&gt;require&lt;/code&gt; 返回 &lt;var&gt;feature&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="fb8a7c392a4b5b154111bf576d8db335aef254ae" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;noescape&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that inhibits use of quoting characters in the output. (This argument is supported in Emacs versions 19 and later.)</source>
          <target state="translated">如果 &lt;var&gt;noescape&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则禁止在输出中使用引号字符。（Emacs版本19和更高版本支持此参数。）</target>
        </trans-unit>
        <trans-unit id="bac112f69fe2ae136cf186ae67923f75cd73b274" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;noexclude&lt;/var&gt; is present and non-&lt;code&gt;nil&lt;/code&gt;, that disables the normal action of &lt;code&gt;yank-handled-properties&lt;/code&gt; and &lt;code&gt;yank-excluded-properties&lt;/code&gt; on the inserted string.</source>
          <target state="translated">如果存在 &lt;var&gt;noexclude&lt;/var&gt; 且非 &lt;code&gt;nil&lt;/code&gt; ，则禁用对插入的字符串执行 &lt;code&gt;yank-handled-properties&lt;/code&gt; 和 &lt;code&gt;yank-excluded-properties&lt;/code&gt; 的常规操作。</target>
        </trans-unit>
        <trans-unit id="7eb19dbd4a4e2455ddba09e86ea3f445ea3b92cc" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;noforce&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, and &lt;var&gt;position&lt;/var&gt; would place point off screen at the next redisplay, then redisplay computes a new window-start position that works well with point, and thus &lt;var&gt;position&lt;/var&gt; is not used.</source>
          <target state="translated">如果 &lt;var&gt;noforce&lt;/var&gt; 不为 &lt;code&gt;nil&lt;/code&gt; ，并且 &lt;var&gt;position&lt;/var&gt; 将在下次重新显示时将点置于屏幕外，则重新显示将计算出一个新的窗口起始位置，该位置与point配合得很好，因此不使用该 &lt;var&gt;position&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="0ecca1827da80ecd5be14fb9fb2d0fbd4811a32f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;noforce&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function does not recompile files that have an up-to-date &amp;lsquo;</source>
          <target state="translated">如果 &lt;var&gt;noforce&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则此函数不会重新编译具有最新&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="78f3227e2803afeeafa3e87719ab498e6a18e8a6" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;noindirect&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;where-is-internal&lt;/code&gt; doesn&amp;rsquo;t look inside menu-items to find their commands. This makes it possible to search for a menu-item itself.</source>
          <target state="translated">如果 &lt;var&gt;noindirect&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;where-is-internal&lt;/code&gt; 不会在菜单项中查找其命令。这样就可以搜索菜单项本身。</target>
        </trans-unit>
        <trans-unit id="26693b86f9e15c7345b1f99c962018c4276f22ce" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;nomodes&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that means don&amp;rsquo;t alter the buffer&amp;rsquo;s major mode, don&amp;rsquo;t process local variables specifications in the file, and don&amp;rsquo;t run &lt;code&gt;find-file-hook&lt;/code&gt;. This feature is used by &lt;code&gt;revert-buffer&lt;/code&gt; in some cases.</source>
          <target state="translated">如果 &lt;var&gt;nomodes&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则意味着不要更改缓冲区的主模式，不要处理文件中的局部变量规范，也不要运行 &lt;code&gt;find-file-hook&lt;/code&gt; 。在某些情况下， &lt;code&gt;revert-buffer&lt;/code&gt; 会使用此功能。</target>
        </trans-unit>
        <trans-unit id="0d10ebd500fb3448c1a40d71edf4b908895de050" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;nonstickiness&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this means that the property &lt;var&gt;property&lt;/var&gt; is rear-nonsticky by default. Since all properties are front-nonsticky by default, this makes &lt;var&gt;property&lt;/var&gt; nonsticky in both directions by default.</source>
          <target state="translated">如果 &lt;var&gt;nonstickiness&lt;/var&gt; 为non- &lt;code&gt;nil&lt;/code&gt; ，则意味着默认情况下，property &lt;var&gt;property&lt;/var&gt; 为背面非粘性。由于默认情况下所有属性都在前面不粘，因此默认情况下这会使 &lt;var&gt;property&lt;/var&gt; 在两个方向上都不粘。</target>
        </trans-unit>
        <trans-unit id="83892fe7706bb36fcc64573410d45dd2c22713cb" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;nosort&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;directory-files&lt;/code&gt; does not sort the list, so you get the file names in no particular order. Use this if you want the utmost possible speed and don&amp;rsquo;t care what order the files are processed in. If the order of processing is visible to the user, then the user will probably be happier if you do sort the names.</source>
          <target state="translated">如果 &lt;var&gt;nosort&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;directory-files&lt;/code&gt; 不会对列表进行排序，因此您将以不特定的顺序获取文件名。如果需要最大的速度并且不关心文件的处理顺序，请使用此选项。如果用户可以看到处理的顺序，那么如果对名称进行排序，则用户可能会更满意。</target>
        </trans-unit>
        <trans-unit id="e9ba6185ce28fd5f39867dd3f5cda9873d3d87e2" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;nosqueeze&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that means do not change interior whitespace.</source>
          <target state="translated">如果 &lt;var&gt;nosqueeze&lt;/var&gt; 不为 &lt;code&gt;nil&lt;/code&gt; ，则意味着不要更改内部空白。</target>
        </trans-unit>
        <trans-unit id="6598274c6486d7fe5670d764afd9c92143e9519e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;nosqueeze&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that means to leave whitespace other than line breaks untouched. If &lt;var&gt;squeeze-after&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it specifies a position in the region, and means don&amp;rsquo;t canonicalize spaces before that position.</source>
          <target state="translated">如果 &lt;var&gt;nosqueeze&lt;/var&gt; 不为 &lt;code&gt;nil&lt;/code&gt; ，则表示保留除换行符以外的空白。如果 &lt;var&gt;squeeze-after&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则指定该区域中的位置，并且意味着不要规范化该位置之前的空格。</target>
        </trans-unit>
        <trans-unit id="d6892e309bf8fcc44554b83a98e758b86dcaf968" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;nosqueeze&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that means to leave whitespace other than line breaks untouched. If &lt;var&gt;to-eop&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that means to keep filling to the end of the paragraph&amp;mdash;or the next hard newline, if &lt;code&gt;use-hard-newlines&lt;/code&gt; is enabled (see below).</source>
          <target state="translated">如果 &lt;var&gt;nosqueeze&lt;/var&gt; 不为 &lt;code&gt;nil&lt;/code&gt; ，则表示保留除换行符以外的空白。如果 &lt;var&gt;to-eop&lt;/var&gt; 为non - &lt;code&gt;nil&lt;/code&gt; ，则表示要填充到段落末尾或下一个硬换行符（如果启用了 &lt;code&gt;use-hard-newlines&lt;/code&gt; ）（请参见下文）。</target>
        </trans-unit>
        <trans-unit id="e931aa8ba8f040aad8beafd66d9db46e9038ece6" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;not-current&lt;/var&gt;, if point is in a region where we have a match, then skip past that and find the next instance instead.</source>
          <target state="translated">如果 &lt;var&gt;not-current&lt;/var&gt; ，则如果point在我们具有匹配项的区域中，则跳过该范围并找到下一个实例。</target>
        </trans-unit>
        <trans-unit id="ad5c7639ee10fd0fbdca8effe5c458cff315189c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;noundo&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;subst-char-in-region&lt;/code&gt; does not record the change for undo and does not mark the buffer as modified. This was useful for controlling the old selective display feature (see &lt;a href=&quot;selective-display#Selective-Display&quot;&gt;Selective Display&lt;/a&gt;).</source>
          <target state="translated">如果 &lt;var&gt;noundo&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;subst-char-in-region&lt;/code&gt; 不会记录对undo的更改，也不会将缓冲区标记为已修改。这对于控制旧的选择性显示功能很有用（请参阅&amp;ldquo;&lt;a href=&quot;selective-display#Selective-Display&quot;&gt;选择性显示&amp;rdquo;&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="a9014652f43b7f3736feab16399f1f869b549d21" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;object1&lt;/var&gt; and &lt;var&gt;object2&lt;/var&gt; are numbers with differing types or values, then they cannot be the same object and &lt;code&gt;eq&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;. If they are fixnums with the same value, then they are the same object and &lt;code&gt;eq&lt;/code&gt; returns &lt;code&gt;t&lt;/code&gt;. If they were computed separately but happen to have the same value and the same non-fixnum numeric type, then they might or might not be the same object, and &lt;code&gt;eq&lt;/code&gt; returns &lt;code&gt;t&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt; depending on whether the Lisp interpreter created one object or two.</source>
          <target state="translated">如果 &lt;var&gt;object1&lt;/var&gt; 和 &lt;var&gt;object2&lt;/var&gt; 是具有不同类型或值的数字，则它们不能是同一对象，并且 &lt;code&gt;eq&lt;/code&gt; 返回 &lt;code&gt;nil&lt;/code&gt; 。如果它们是具有相同值的fixnum，则它们是同一对象，并且 &lt;code&gt;eq&lt;/code&gt; 返回 &lt;code&gt;t&lt;/code&gt; 。如果它们是分别计算的，但碰巧具有相同的值和相同的非固定数字类型，则它们可能是或不是同一对象，并且 &lt;code&gt;eq&lt;/code&gt; 返回 &lt;code&gt;t&lt;/code&gt; 或 &lt;code&gt;nil&lt;/code&gt; 取决于Lisp解释器创建了一个还是两个对象。</target>
        </trans-unit>
        <trans-unit id="2af6f2a24faac9514358b8004f083d20948c6b84" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;object1&lt;/var&gt; and &lt;var&gt;object2&lt;/var&gt; are symbols with the same name, they are normally the same object&amp;mdash;but see &lt;a href=&quot;creating-symbols#Creating-Symbols&quot;&gt;Creating Symbols&lt;/a&gt; for exceptions. For other non-numeric types (e.g., lists, vectors, strings), two arguments with the same contents or elements are not necessarily &lt;code&gt;eq&lt;/code&gt; to each other: they are &lt;code&gt;eq&lt;/code&gt; only if they are the same object, meaning that a change in the contents of one will be reflected by the same change in the contents of the other.</source>
          <target state="translated">如果 &lt;var&gt;object1&lt;/var&gt; 和 &lt;var&gt;object2&lt;/var&gt; 是具有相同名称的符号，则它们通常是同一对象-但请参阅&lt;a href=&quot;creating-symbols#Creating-Symbols&quot;&gt;创建符号&lt;/a&gt;以获取例外。对于其它非数字的类型（例如，列表，载体，字符串），两个参数具有相同的内容或元件不一定 &lt;code&gt;eq&lt;/code&gt; 彼此：它们是 &lt;code&gt;eq&lt;/code&gt; 仅当它们是相同的对象，这意味着在所述内容的变化另一个内容的相同变化将反映出其中的一个。</target>
        </trans-unit>
        <trans-unit id="b1ee70c11cfc433529378d20ac72c39a1e8fea7d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;object&lt;/var&gt; is a buffer, &lt;var&gt;pos&lt;/var&gt; is the position in the buffer.</source>
          <target state="translated">如果 &lt;var&gt;object&lt;/var&gt; 是缓冲区，则 &lt;var&gt;pos&lt;/var&gt; 是缓冲区中的位置。</target>
        </trans-unit>
        <trans-unit id="0e27eb072bc84c5470eb495591cdba437e15fad2" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;object&lt;/var&gt; is a string (an overlay string or a string displayed with the &lt;code&gt;display&lt;/code&gt; property), &lt;var&gt;pos&lt;/var&gt; is the position in that string.</source>
          <target state="translated">如果 &lt;var&gt;object&lt;/var&gt; 是字符串（覆盖字符串或使用 &lt;code&gt;display&lt;/code&gt; 属性显示的字符串），则 &lt;var&gt;pos&lt;/var&gt; 是该字符串中的位置。</target>
        </trans-unit>
        <trans-unit id="38a61ea0980d18fce10e9b53b0321cf0fdd0800c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;object&lt;/var&gt; is an overlay, that overlay has a &lt;code&gt;help-echo&lt;/code&gt; property, and &lt;var&gt;pos&lt;/var&gt; is the position in the overlay&amp;rsquo;s buffer.</source>
          <target state="translated">如果 &lt;var&gt;object&lt;/var&gt; 是叠加层，则该叠加层具有 &lt;code&gt;help-echo&lt;/code&gt; 属性，而 &lt;var&gt;pos&lt;/var&gt; 是叠加层缓冲区中的位置。</target>
        </trans-unit>
        <trans-unit id="d3a9907e2699fe2ba585907784b6a1667fe8494e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;old-pos&lt;/var&gt; is at the boundary of two fields, then the acceptable final positions depend on the argument &lt;var&gt;escape-from-edge&lt;/var&gt;. If &lt;var&gt;escape-from-edge&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, then &lt;var&gt;new-pos&lt;/var&gt; must be in the field whose &lt;code&gt;field&lt;/code&gt; property equals what new characters inserted at &lt;var&gt;old-pos&lt;/var&gt; would inherit. (This depends on the stickiness of the &lt;code&gt;field&lt;/code&gt; property for the characters before and after &lt;var&gt;old-pos&lt;/var&gt;.) If &lt;var&gt;escape-from-edge&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;new-pos&lt;/var&gt; can be anywhere in the two adjacent fields. Additionally, if two fields are separated by another field with the special value &lt;code&gt;boundary&lt;/code&gt;, then any point within this special field is also considered to be on the boundary.</source>
          <target state="translated">如果 &lt;var&gt;old-pos&lt;/var&gt; 在两个字段的边界处，则可接受的最终位置取决于论点 &lt;var&gt;escape-from-edge&lt;/var&gt; 。如果 &lt;var&gt;escape-from-edge&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;var&gt;new-pos&lt;/var&gt; 必须位于其 &lt;code&gt;field&lt;/code&gt; 属性等于在 &lt;var&gt;old-pos&lt;/var&gt; 插入的新字符将继承的字段的字段中。 （这取决于 &lt;var&gt;old-pos&lt;/var&gt; 之前和之后字符的 &lt;code&gt;field&lt;/code&gt; 属性的粘性。）如果 &lt;var&gt;escape-from-edge&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;var&gt;new-pos&lt;/var&gt; 可以位于两个相邻字段中的任何位置。此外，如果两个字段被另一个具有特殊值的字段分隔 &lt;code&gt;boundary&lt;/code&gt; ，则该特殊字段内的任何点也被视为位于边界上。</target>
        </trans-unit>
        <trans-unit id="7b45ce06e8242468687d939a7db0ceab289b73f3" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;oldmap&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that changes the behavior of &lt;code&gt;substitute-key-definition&lt;/code&gt;: the bindings in &lt;var&gt;oldmap&lt;/var&gt; determine which keys to rebind. The rebindings still happen in &lt;var&gt;keymap&lt;/var&gt;, not in &lt;var&gt;oldmap&lt;/var&gt;. Thus, you can change one map under the control of the bindings in another. For example,</source>
          <target state="translated">如果 &lt;var&gt;oldmap&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则更改了replace &lt;code&gt;substitute-key-definition&lt;/code&gt; 的行为： &lt;var&gt;oldmap&lt;/var&gt; 中的绑定确定了要重新绑定的键。重新绑定仍然发生在 &lt;var&gt;keymap&lt;/var&gt; 中，而不是在 &lt;var&gt;oldmap&lt;/var&gt; 中。因此，您可以在另一个地图的绑定控制下更改一个地图。例如，</target>
        </trans-unit>
        <trans-unit id="2a6bdbd640045c08255f0d67a91e3c33581a9f85" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;omit-nulls&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; (or omitted), the result contains null strings whenever there are two consecutive matches for &lt;var&gt;separators&lt;/var&gt;, or a match is adjacent to the beginning or end of &lt;var&gt;string&lt;/var&gt;. If &lt;var&gt;omit-nulls&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, these null strings are omitted from the result.</source>
          <target state="translated">如果 &lt;var&gt;omit-nulls&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; （或省略），则当 &lt;var&gt;separators&lt;/var&gt; 有两个连续的匹配项，或者 &lt;var&gt;string&lt;/var&gt; 的开头或结尾与之相邻时，结果将包含空字符串。如果 &lt;var&gt;omit-nulls&lt;/var&gt; 为 &lt;code&gt;t&lt;/code&gt; ，则从结果中忽略这些空字符串。</target>
        </trans-unit>
        <trans-unit id="4aad24ed126b51cb92662abeec69efc832d15095" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;oobinline-flag&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; for a stream connection, receive out-of-band data in the normal data stream. Otherwise, ignore out-of-band data.</source>
          <target state="translated">如果 &lt;var&gt;oobinline-flag&lt;/var&gt; 是非 &lt;code&gt;nil&lt;/code&gt; 用于流连接，正常数据流中接收了带外数据。否则，请忽略带外数据。</target>
        </trans-unit>
        <trans-unit id="37779651e9adbb5f6f48ea776433a34f31a2eb33" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;operation&lt;/var&gt; is &lt;code&gt;insert-file-contents&lt;/code&gt;, the argument corresponding to the target may be a cons cell of the form &lt;code&gt;(&lt;var&gt;filename&lt;/var&gt; . &lt;var&gt;buffer&lt;/var&gt;)&lt;/code&gt;. In that case, &lt;var&gt;filename&lt;/var&gt; is a file name to look up in &lt;code&gt;file-coding-system-alist&lt;/code&gt;, and &lt;var&gt;buffer&lt;/var&gt; is a buffer that contains the file&amp;rsquo;s contents (not yet decoded). If &lt;code&gt;file-coding-system-alist&lt;/code&gt; specifies a function to call for this file, and that function needs to examine the file&amp;rsquo;s contents (as it usually does), it should examine the contents of &lt;var&gt;buffer&lt;/var&gt; instead of reading the file.</source>
          <target state="translated">如果 &lt;var&gt;operation&lt;/var&gt; 是 &lt;code&gt;insert-file-contents&lt;/code&gt; ，对应于目标的参数可以是以下形式的cons单元 &lt;code&gt;(&lt;var&gt;filename&lt;/var&gt; . &lt;var&gt;buffer&lt;/var&gt;)&lt;/code&gt; 。在这种情况下， &lt;var&gt;filename&lt;/var&gt; 是要在 &lt;code&gt;file-coding-system-alist&lt;/code&gt; 中查找的文件名， &lt;var&gt;buffer&lt;/var&gt; 是一个包含文件内容（尚未解码）的缓冲区。如果 &lt;code&gt;file-coding-system-alist&lt;/code&gt; 指定了要调用此文件的函数，并且该函数需要检查文件的内容（通常如此），则应检查 &lt;var&gt;buffer&lt;/var&gt; 的内容，而不是读取文件。</target>
        </trans-unit>
        <trans-unit id="d891618ccc439543f9deced17fd85e88a18cce65" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;param&lt;/var&gt; is present and non-&lt;code&gt;nil&lt;/code&gt;, it replaces &lt;var&gt;string&lt;/var&gt; (or the substring of &lt;var&gt;string&lt;/var&gt; being processed) as the object passed to &lt;var&gt;function&lt;/var&gt; (or &lt;code&gt;insert&lt;/code&gt;). For example, if &lt;var&gt;function&lt;/var&gt; is &lt;code&gt;yank-rectangle&lt;/code&gt;, &lt;var&gt;param&lt;/var&gt; should be a list of strings to insert as a rectangle.</source>
          <target state="translated">如果 &lt;var&gt;param&lt;/var&gt; 存在和非 &lt;code&gt;nil&lt;/code&gt; ，它将替换 &lt;var&gt;string&lt;/var&gt; （或子字符串 &lt;var&gt;string&lt;/var&gt; 被处理）作为对象传递给 &lt;var&gt;function&lt;/var&gt; （或 &lt;code&gt;insert&lt;/code&gt; ）。例如，如果 &lt;var&gt;function&lt;/var&gt; 为 &lt;code&gt;yank-rectangle&lt;/code&gt; ，则 &lt;var&gt;param&lt;/var&gt; 应该是要插入为矩形的字符串列表。</target>
        </trans-unit>
        <trans-unit id="d30e2c584d8dbc2a078ae811bcb4a57e2608707f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;parent&lt;/var&gt; has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;mode-class&lt;/code&gt; symbol property, then &lt;code&gt;define-derived-mode&lt;/code&gt; sets the &lt;code&gt;mode-class&lt;/code&gt; property of &lt;var&gt;variant&lt;/var&gt; to the same value. This ensures, for example, that if &lt;var&gt;parent&lt;/var&gt; is a special mode, then &lt;var&gt;variant&lt;/var&gt; is also a special mode (see &lt;a href=&quot;major-mode-conventions#Major-Mode-Conventions&quot;&gt;Major Mode Conventions&lt;/a&gt;).</source>
          <target state="translated">如果 &lt;var&gt;parent&lt;/var&gt; 具有非 &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;mode-class&lt;/code&gt; 符号属性，则 &lt;code&gt;define-derived-mode&lt;/code&gt; 将 &lt;var&gt;variant&lt;/var&gt; 的 &lt;code&gt;mode-class&lt;/code&gt; 属性设置为相同的值。例如，这可以确保，如果 &lt;var&gt;parent&lt;/var&gt; 是特殊模式，则 &lt;var&gt;variant&lt;/var&gt; 也是特殊模式（请参见&amp;ldquo;&lt;a href=&quot;major-mode-conventions#Major-Mode-Conventions&quot;&gt;主要模式约定&amp;rdquo;&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="7b1617578c1a56dedad969852c0b1d45b2ea11df" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;pattern&lt;/var&gt; is written as a relative file name, it is interpreted relative to the current default directory. The file names returned are normally also relative to the current default directory. However, if &lt;var&gt;full&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, they are absolute.</source>
          <target state="translated">如果将 &lt;var&gt;pattern&lt;/var&gt; 写为相对文件名，则相对于当前默认目录进行解释。返回的文件名通常也相对于当前默认目录。但是，如果 &lt;var&gt;full&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则它们是绝对的。</target>
        </trans-unit>
        <trans-unit id="1c99972e410371a92d8f69b335df771151454562" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;pattern&lt;/var&gt; is written as an absolute file name, the values are absolute also.</source>
          <target state="translated">如果将 &lt;var&gt;pattern&lt;/var&gt; 写为绝对文件名，则这些值也是绝对的。</target>
        </trans-unit>
        <trans-unit id="fc49ec34b1436f43b3eeb5e7a55dc8182e6de5e6" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;period&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then the returned value includes the period that delimits the extension, and if &lt;var&gt;filename&lt;/var&gt; has no extension, the value is &lt;code&gt;&quot;&quot;&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;var&gt;period&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则返回的值包括定界扩展名的句点；如果 &lt;var&gt;filename&lt;/var&gt; 没有扩展名，则值为 &lt;code&gt;&quot;&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4ed3a227cc989252164f90e310eca16feab9cb5c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;pixels-p&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;lines&lt;/var&gt; specifies a number of pixels. In this case, the return value is &lt;var&gt;lines&lt;/var&gt;.</source>
          <target state="translated">如果 &lt;var&gt;pixels-p&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;var&gt;lines&lt;/var&gt; 指定像素数。在这种情况下，返回值为 &lt;var&gt;lines&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="784762c4516053ed35d7fc0595d15975dab5431a" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;pixelwise&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the return value is rounded down to the nearest integer, if necessary. This means that if a column on the right of the text area is only partially visible, that column is not counted. It also means that the width of a window&amp;rsquo;s body can never exceed its total width as returned by &lt;code&gt;window-total-width&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;var&gt;pixelwise&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则必要时将返回值舍入为最接近的整数。这意味着如果文本区域右侧的一列仅部分可见，则不计该列。这也意味着，窗口主体的宽度绝不能超过 &lt;code&gt;window-total-width&lt;/code&gt; 返回的总宽度。</target>
        </trans-unit>
        <trans-unit id="c62e60e501a28aa524f768d674258822704eccc8" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;pixelwise&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the return value is rounded down to the nearest integer, if necessary. This means that if a line at the bottom of the text area is only partially visible, that line is not counted. It also means that the height of a window&amp;rsquo;s body can never exceed its total height as returned by &lt;code&gt;window-total-height&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;var&gt;pixelwise&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则必要时将返回值舍入为最接近的整数。这意味着，如果文本区域底部的一行仅部分可见，则不计该行。这也意味着窗口的高度不能超过 &lt;code&gt;window-total-height&lt;/code&gt; 返回的总高度。</target>
        </trans-unit>
        <trans-unit id="4e57da36286b8cb1902091ef2218e3a32b743eac" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;pos-or-prop&lt;/var&gt; is a marker or number, this function returns a non-&lt;code&gt;nil&lt;/code&gt; value if the text at that position is currently invisible.</source>
          <target state="translated">如果 &lt;var&gt;pos-or-prop&lt;/var&gt; 是一个标记或数字，该函数返回一个非 &lt;code&gt;nil&lt;/code&gt; 如果在那个位置的文本是不可见的当前值。</target>
        </trans-unit>
        <trans-unit id="b657c5c40081843536657ec55d6f3cad825161c2" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;pos-or-prop&lt;/var&gt; is any other kind of Lisp object, that is taken to mean a possible value of the &lt;code&gt;invisible&lt;/code&gt; text or overlay property. In that case, this function returns a non-&lt;code&gt;nil&lt;/code&gt; value if that value would cause text to become invisible, based on the current value of &lt;code&gt;buffer-invisibility-spec&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;var&gt;pos-or-prop&lt;/var&gt; 是任何其他类型的Lisp对象，则表示 &lt;code&gt;invisible&lt;/code&gt; 文本或overlay属性的可能值。在那种情况下，如果该值会导致文本不可见，则此函数将根据 &lt;code&gt;buffer-invisibility-spec&lt;/code&gt; 的当前值返回非 &lt;code&gt;nil&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="5d64ca800dd9eb161d321e9a0d7374e76e593748" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;pos&lt;/var&gt; is at the beginning of its field, and &lt;var&gt;escape-from-edge&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then the return value is always the beginning of the preceding field that &lt;em&gt;ends&lt;/em&gt; at &lt;var&gt;pos&lt;/var&gt;, regardless of the stickiness of the &lt;code&gt;field&lt;/code&gt; properties around &lt;var&gt;pos&lt;/var&gt;.</source>
          <target state="translated">如果 &lt;var&gt;pos&lt;/var&gt; 是在其字段的开始，和 &lt;var&gt;escape-from-edge&lt;/var&gt; 是非 &lt;code&gt;nil&lt;/code&gt; ，则返回值始终是前述字段的开头即&lt;em&gt;端部&lt;/em&gt;在 &lt;var&gt;pos&lt;/var&gt; ，无论的粘性的 &lt;code&gt;field&lt;/code&gt; 周围属性 &lt;var&gt;pos&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="46417bbbf875d6256c94c47b965787bbed275199" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;pos&lt;/var&gt; is at the end of its field, and &lt;var&gt;escape-from-edge&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then the return value is always the end of the following field that &lt;em&gt;begins&lt;/em&gt; at &lt;var&gt;pos&lt;/var&gt;, regardless of the stickiness of the &lt;code&gt;field&lt;/code&gt; properties around &lt;var&gt;pos&lt;/var&gt;.</source>
          <target state="translated">如果 &lt;var&gt;pos&lt;/var&gt; 是在其字段的结束，和 &lt;var&gt;escape-from-edge&lt;/var&gt; 是非 &lt;code&gt;nil&lt;/code&gt; ，则返回值始终是以下字段的结束&lt;em&gt;开始&lt;/em&gt;在 &lt;var&gt;pos&lt;/var&gt; ，无论的粘性的 &lt;code&gt;field&lt;/code&gt; 周围属性 &lt;var&gt;pos&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="96a53e112df0ffde3b4c25dce291c3cce9686c57" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;position&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or a marker that points nowhere, then &lt;var&gt;marker&lt;/var&gt; is set to point nowhere.</source>
          <target state="translated">如果 &lt;var&gt;position&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; 或标记无处指向，则将 &lt;var&gt;marker&lt;/var&gt; 设置为无处指向。</target>
        </trans-unit>
        <trans-unit id="83c105bf919f3622f1dcd1a7fd5c58cceeef6513" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;position&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, it means to use the current mouse position (or the top-left corner of the frame if the mouse is not available on a text terminal). If &lt;var&gt;position&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it means to precompute the key binding equivalents for the keymaps specified in &lt;var&gt;menu&lt;/var&gt;, without actually displaying or popping up the menu.</source>
          <target state="translated">如果 &lt;var&gt;position&lt;/var&gt; 为 &lt;code&gt;t&lt;/code&gt; ，则表示使用当前的鼠标位置（如果文本终端上没有鼠标，则使用框架的左上角）。如果 &lt;var&gt;position&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则意味着要预先计算 &lt;var&gt;menu&lt;/var&gt; 中指定的按键映射的按键绑定等效项，而无需实际显示或弹出菜单。</target>
        </trans-unit>
        <trans-unit id="f3eeaf5e6367889ab92df1cab57056dd2fc164b3" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;position&lt;/var&gt; is at the end of &lt;var&gt;object&lt;/var&gt;, both the &lt;small&gt;CAR&lt;/small&gt; and the &lt;small&gt;CDR&lt;/small&gt; of the value are &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;var&gt;position&lt;/var&gt; 在 &lt;var&gt;object&lt;/var&gt; 的末尾，则该值的&lt;small&gt;CAR&lt;/small&gt;和&lt;small&gt;CDR&lt;/small&gt;均为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="faac8d599dce1586e227e803a02a728fc9b08789" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;position&lt;/var&gt; is visible, &lt;code&gt;pos-visible-in-window-p&lt;/code&gt; returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;partially&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;; if &lt;var&gt;partially&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, and the character following &lt;var&gt;position&lt;/var&gt; is fully visible, it returns a list of the form &lt;code&gt;(&lt;var&gt;x&lt;/var&gt; &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; are the pixel coordinates relative to the top left corner of the window; otherwise it returns an extended list of the form &lt;code&gt;(&lt;var&gt;x&lt;/var&gt; &lt;var&gt;y&lt;/var&gt; &lt;var&gt;rtop&lt;/var&gt; &lt;var&gt;rbot&lt;/var&gt; &lt;var&gt;rowh&lt;/var&gt; &lt;var&gt;vpos&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;rtop&lt;/var&gt; and &lt;var&gt;rbot&lt;/var&gt; specify the number of off-window pixels at the top and bottom of the row at &lt;var&gt;position&lt;/var&gt;, &lt;var&gt;rowh&lt;/var&gt; specifies the visible height of that row, and &lt;var&gt;vpos&lt;/var&gt; specifies the vertical position (zero-based row number) of that row.</source>
          <target state="translated">如果 &lt;var&gt;position&lt;/var&gt; 是可见的，则 &lt;code&gt;pos-visible-in-window-p&lt;/code&gt; 如果 &lt;var&gt;partially&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则返回 &lt;code&gt;t&lt;/code&gt; ；如果 &lt;var&gt;partially&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，并且字符跟随 &lt;var&gt;position&lt;/var&gt; 是完全可见的，则返回格式为 &lt;code&gt;(&lt;var&gt;x&lt;/var&gt; &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; &lt;var&gt;x&lt;/var&gt; &lt;var&gt;y&lt;/var&gt; ）的列表，其中 &lt;var&gt;x&lt;/var&gt; 和 &lt;var&gt;y&lt;/var&gt; 是相对于窗口左上角的像素坐标；否则，它将返回形式为 &lt;code&gt;(&lt;var&gt;x&lt;/var&gt; &lt;var&gt;y&lt;/var&gt; &lt;var&gt;rtop&lt;/var&gt; &lt;var&gt;rbot&lt;/var&gt; &lt;var&gt;rowh&lt;/var&gt; &lt;var&gt;vpos&lt;/var&gt;)&lt;/code&gt; &lt;var&gt;x&lt;/var&gt; &lt;var&gt;y&lt;/var&gt; &lt;var&gt;rtop&lt;/var&gt; &lt;var&gt;rbot&lt;/var&gt; &lt;var&gt;rowh&lt;/var&gt; &lt;var&gt;vpos&lt;/var&gt; ）的扩展列表，其中 &lt;var&gt;rtop&lt;/var&gt; 和 &lt;var&gt;rbot&lt;/var&gt; 指定在 &lt;var&gt;position&lt;/var&gt; row的顶部和底部的窗口外像素的数量， &lt;var&gt;rowh&lt;/var&gt; 指定该行的可见高度，而 &lt;var&gt;vpos&lt;/var&gt; 指定该行的垂直位置（从零开始的行号）。</target>
        </trans-unit>
        <trans-unit id="55cc33edc7be2cd9526c5a9533403095ca7c456a" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;predicate&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; and if &lt;var&gt;collection&lt;/var&gt; contains several strings that are equal to each other, as determined by &lt;code&gt;compare-strings&lt;/code&gt; according to &lt;code&gt;completion-ignore-case&lt;/code&gt;, then &lt;var&gt;predicate&lt;/var&gt; should accept either all or none of them. Otherwise, the return value of &lt;code&gt;test-completion&lt;/code&gt; is essentially unpredictable.</source>
          <target state="translated">如果 &lt;var&gt;predicate&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，并且 &lt;var&gt;collection&lt;/var&gt; 包含多个彼此相等 &lt;code&gt;compare-strings&lt;/code&gt; 由 &lt;code&gt;completion-ignore-case&lt;/code&gt; strings根据completion-ignore-case确定），则 &lt;var&gt;predicate&lt;/var&gt; 应全部接受，也可以不接受。否则， &lt;code&gt;test-completion&lt;/code&gt; 的返回值基本上是不可预测的。</target>
        </trans-unit>
        <trans-unit id="bdb1cc039095ceac1bea80584a172b1f443cac21" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;predicate&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it specifies a function of one argument that decides which file names are acceptable completion alternatives. A file name is an acceptable value if &lt;var&gt;predicate&lt;/var&gt; returns non-&lt;code&gt;nil&lt;/code&gt; for it.</source>
          <target state="translated">如果 &lt;var&gt;predicate&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则它指定一个参数的函数，该参数确定哪些文件名是可接受的补全选择。如果 &lt;var&gt;predicate&lt;/var&gt; 为其返回 &lt;code&gt;nil&lt;/code&gt; ，则文件名是可接受的值。</target>
        </trans-unit>
        <trans-unit id="8580e26c159c1afb13cde8e06fdd1a34d8e08cd5" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;prefix&lt;/var&gt; is given, it should be a prefix key sequence; then &lt;code&gt;accessible-keymaps&lt;/code&gt; includes only the submaps whose prefixes start with &lt;var&gt;prefix&lt;/var&gt;. These elements look just as they do in the value of &lt;code&gt;(accessible-keymaps)&lt;/code&gt;; the only difference is that some elements are omitted.</source>
          <target state="translated">如果 &lt;var&gt;prefix&lt;/var&gt; 给出，它应该是一个前缀键序列; 然后 &lt;code&gt;accessible-keymaps&lt;/code&gt; 仅包含其前缀以 &lt;var&gt;prefix&lt;/var&gt; 开头的子映射。这些元素的外观与 &lt;code&gt;(accessible-keymaps)&lt;/code&gt; 的值相同。唯一的区别是省略了某些元素。</target>
        </trans-unit>
        <trans-unit id="a347999f1d1b713f4dd4865d93365fa337bb5c95" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;prefix&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be a prefix key; then the listing includes only keys that start with &lt;var&gt;prefix&lt;/var&gt;.</source>
          <target state="translated">如果 &lt;var&gt;prefix&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则应为前缀键；否则为false。然后列表仅包含以 &lt;var&gt;prefix&lt;/var&gt; 开头的键。</target>
        </trans-unit>
        <trans-unit id="ca36dbd3bd6f556ea18734cb45b9bd8faaa32550" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;preserve&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this means to stop preserving the height/width of &lt;var&gt;window&lt;/var&gt;, lifting any respective restraint induced by a previous call of this function for &lt;var&gt;window&lt;/var&gt;. Calling &lt;code&gt;enlarge-window&lt;/code&gt;, &lt;code&gt;shrink-window&lt;/code&gt; or &lt;code&gt;fit-window-to-buffer&lt;/code&gt; with &lt;var&gt;window&lt;/var&gt; as argument may also remove the respective restraint.</source>
          <target state="translated">如果 &lt;var&gt;preserve&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则这意味着将停止保留 &lt;var&gt;window&lt;/var&gt; 的高度/宽度，并取消由该函数先前调用 &lt;var&gt;window&lt;/var&gt; 引起的任何约束。以 &lt;var&gt;window&lt;/var&gt; 为参数调用 &lt;code&gt;enlarge-window&lt;/code&gt; ， &lt;code&gt;shrink-window&lt;/code&gt; 或 &lt;code&gt;fit-window-to-buffer&lt;/code&gt; 可能也会删除相应的约束。</target>
        </trans-unit>
        <trans-unit id="70b2755117f45760e422eb22c3d62e12c4e7c7a4" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;pretend&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then Emacs displays &lt;var&gt;height&lt;/var&gt; lines of output in &lt;var&gt;frame&lt;/var&gt;, but does not change its value for the actual height of the frame. This is only useful on text terminals. Using a smaller height than the terminal actually implements may be useful to reproduce behavior observed on a smaller screen, or if the terminal malfunctions when using its whole screen. Setting the frame height directly does not always work, because knowing the correct actual size may be necessary for correct cursor positioning on text terminals.</source>
          <target state="translated">如果 &lt;var&gt;pretend&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，那么Emacs将在 &lt;var&gt;frame&lt;/var&gt; 中显示输出的 &lt;var&gt;height&lt;/var&gt; 线，但不会更改其实际值以表示框架的实际高度。这仅在文本终端上有用。使用比终端实际实现的高度小的高度可能有助于重现在较小屏幕上观察到的行为，或者如果终端在使用其整个屏幕时出现故障，则可能会有用。直接设置框架高度并不总是可行的，因为知道正确的实际大小对于在文本终端上正确定位光标可能是必需的。</target>
        </trans-unit>
        <trans-unit id="798dab2980b4189ca407ba85b40f9a38bc88abfd" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;process&lt;/var&gt; does not have a buffer, &lt;code&gt;process-mark&lt;/code&gt; returns a marker that points nowhere.</source>
          <target state="translated">如果 &lt;var&gt;process&lt;/var&gt; 没有缓冲区，则 &lt;code&gt;process-mark&lt;/code&gt; 将返回一个指向无处的标记。</target>
        </trans-unit>
        <trans-unit id="440f703b88c0360d005a972e8afcd27c23624d36" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;process&lt;/var&gt; is a datagram connection or server, this function returns its remote peer address.</source>
          <target state="translated">如果 &lt;var&gt;process&lt;/var&gt; 是数据报连接或服务器，则此函数返回其远程对等地址。</target>
        </trans-unit>
        <trans-unit id="b974ca55176bdcfc401335afa634c590cb8298b6" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;process&lt;/var&gt; is a datagram connection or server, this function sets its remote peer address to &lt;var&gt;address&lt;/var&gt;.</source>
          <target state="translated">如果 &lt;var&gt;process&lt;/var&gt; 是数据报连接或服务器，则此功能将其远程对等地址设置为 &lt;var&gt;address&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="2fb199d58887ed1728511057c2cf80aabcf45b87" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;process&lt;/var&gt; is a non-blocking network stream that hasn&amp;rsquo;t been fully set up yet, then this function will block until that has happened. If given the optional &lt;var&gt;no-block&lt;/var&gt; parameter, this function will return &lt;code&gt;nil&lt;/code&gt; instead of blocking.</source>
          <target state="translated">如果 &lt;var&gt;process&lt;/var&gt; 是尚未完全设置的非阻塞网络流，则此功能将一直阻塞，直到发生这种情况为止。如果提供了可选的 &lt;var&gt;no-block&lt;/var&gt; 参数，则此函数将返回 &lt;code&gt;nil&lt;/code&gt; 而不是阻塞。</target>
        </trans-unit>
        <trans-unit id="61ac6dbc8147a26153803b8153c37f8ee249df1c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;process&lt;/var&gt; is a process, and the argument &lt;var&gt;just-this-one&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, only output from that process is handled, suspending output from other processes until some output has been received from that process or the timeout expires. If &lt;var&gt;just-this-one&lt;/var&gt; is an integer, also inhibit running timers. This feature is generally not recommended, but may be necessary for specific applications, such as speech synthesis.</source>
          <target state="translated">如果 &lt;var&gt;process&lt;/var&gt; 是一个进程，且参数 &lt;var&gt;just-this-one&lt;/var&gt; 为non- &lt;code&gt;nil&lt;/code&gt; ，则仅处理该进程的输出，暂停其他进程的输出，直到从该进程接收到某些输出或超时到期为止。如果 &lt;var&gt;just-this-one&lt;/var&gt; 是一个整数，则还禁止运行计时器。通常不建议使用此功能，但对于特定应用（例如语音合成）可能是必需的。</target>
        </trans-unit>
        <trans-unit id="bb4c2d271cb8d5cf6b340e26056049f2b0cd468d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;program&lt;/var&gt; exits with a non-zero exit status, this function signals an error.</source>
          <target state="translated">如果 &lt;var&gt;program&lt;/var&gt; 以非零退出状态退出，则此函数会发出错误信号。</target>
        </trans-unit>
        <trans-unit id="284b476ea5c6c02ef3e08ef66c25dfe87039466a" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;program&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, Emacs opens a new pseudoterminal (pty) and associates its input and output with &lt;var&gt;buffer-or-name&lt;/var&gt;, without creating a subprocess. In that case, the remaining arguments &lt;var&gt;args&lt;/var&gt; are ignored.</source>
          <target state="translated">如果 &lt;var&gt;program&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则Emacs将打开一个新的伪终端（pty）并将其输入和输出与 &lt;var&gt;buffer-or-name&lt;/var&gt; 关联，而无需创建子进程。在这种情况下，其余参数 &lt;var&gt;args&lt;/var&gt; 将被忽略。</target>
        </trans-unit>
        <trans-unit id="7a068c0ed13f4b12558a0ac454fd5ebc9a03b071" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;prompt&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that becomes the overall prompt string for the keymap. The prompt string should be given for menu keymaps (see &lt;a href=&quot;defining-menus#Defining-Menus&quot;&gt;Defining Menus&lt;/a&gt;).</source>
          <target state="translated">如果 &lt;var&gt;prompt&lt;/var&gt; 为non- &lt;code&gt;nil&lt;/code&gt; ，则它将成为键盘映射的整体提示字符串。应该为菜单键盘映射提供提示字符串（请参阅&amp;ldquo;&lt;a href=&quot;defining-menus#Defining-Menus&quot;&gt;定义菜单&amp;rdquo;&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="b9183e502e9d5b4a77e58ff41346ba19cb0aa17f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;prompt&lt;/var&gt; is supplied, it specifies a string for prompting the user. The prompt string is always displayed in the echo area, followed by a single &amp;lsquo;</source>
          <target state="translated">如果提供了 &lt;var&gt;prompt&lt;/var&gt; ，则它指定用于提示用户的字符串。提示字符串始终显示在回显区域中，后跟单个'</target>
        </trans-unit>
        <trans-unit id="b8cdf2773a6fb1439f3a41376c8f7fe6ac57d8da" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;props&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the effect is to get rid of all properties from the specified range of text. Here&amp;rsquo;s an example:</source>
          <target state="translated">如果 &lt;var&gt;props&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则效果是摆脱指定文本范围内的所有属性。这是一个例子：</target>
        </trans-unit>
        <trans-unit id="8afb837ad0393bcd35f16b34e9e0d91dd9d41b2e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;query-flag&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it replaces all occurrences; otherwise, it asks the user what to do about each one.</source>
          <target state="translated">如果 &lt;var&gt;query-flag&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，它将替换所有出现的内容；否则，它将询问用户该如何处理。</target>
        </trans-unit>
        <trans-unit id="0d3207a5cfbb93826b7faedab3cdbc2f46ee5045" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;query-only&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it only lists processes whose query flag is non-&lt;code&gt;nil&lt;/code&gt;. See &lt;a href=&quot;query-before-exit#Query-Before-Exit&quot;&gt;Query Before Exit&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;var&gt;query-only&lt;/var&gt; 是非 &lt;code&gt;nil&lt;/code&gt; ，只列出过程，其查询标志是非 &lt;code&gt;nil&lt;/code&gt; 。请参阅&lt;a href=&quot;query-before-exit#Query-Before-Exit&quot;&gt;退出前查询&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6890ef2b1573eed73e499d955a44c98846cafb19" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;quit-char&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it specifies the character to use for quitting. Normally this character is</source>
          <target state="translated">如果 &lt;var&gt;quit-char&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则它指定用于退出的字符。通常这个字符是</target>
        </trans-unit>
        <trans-unit id="a3a577714ad408acffc0d7cc1067326e87907443" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;read-function&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be a function, which is used instead of &lt;code&gt;read&lt;/code&gt; to read expressions one by one. This function is called with one argument, the stream for reading input. You can also use the variable &lt;code&gt;load-read-function&lt;/code&gt; (see &lt;a href=&quot;how-programs-do-loading#Definition-of-load_002dread_002dfunction&quot;&gt;How Programs Do Loading&lt;/a&gt;) to specify this function, but it is more robust to use the &lt;var&gt;read-function&lt;/var&gt; argument.</source>
          <target state="translated">如果 &lt;var&gt;read-function&lt;/var&gt; 为non - &lt;code&gt;nil&lt;/code&gt; ，则应为一个函数，而不是使用 &lt;code&gt;read&lt;/code&gt; 来逐个读取表达式。使用一个参数调用该函数，该参数用于读取输入。您也可以使用变量 &lt;code&gt;load-read-function&lt;/code&gt; （请参阅&lt;a href=&quot;how-programs-do-loading#Definition-of-load_002dread_002dfunction&quot;&gt;程序如何进行加载&lt;/a&gt;）来指定此功能，但是使用 &lt;var&gt;read-function&lt;/var&gt; 参数更可靠。</target>
        </trans-unit>
        <trans-unit id="d3db26c2ae9afb5816606d7f0a78c1829b1ed42d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;read&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;var&gt;default&lt;/var&gt; is also used as the input to &lt;code&gt;read&lt;/code&gt;, if the user enters empty input. If &lt;var&gt;default&lt;/var&gt; is a list of strings, the first string is used as the input. If &lt;var&gt;default&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, empty input results in an &lt;code&gt;end-of-file&lt;/code&gt; error. However, in the usual case (where &lt;var&gt;read&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;), &lt;code&gt;read-from-minibuffer&lt;/code&gt; ignores &lt;var&gt;default&lt;/var&gt; when the user enters empty input and returns an empty string, &lt;code&gt;&quot;&quot;&lt;/code&gt;. In this respect, it differs from all the other minibuffer input functions in this chapter.</source>
          <target state="translated">如果 &lt;var&gt;read&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则如果用户输入空输入，则 &lt;var&gt;default&lt;/var&gt; 还将用作 &lt;code&gt;read&lt;/code&gt; 的输入。如果 &lt;var&gt;default&lt;/var&gt; 是字符串列表，则第一个字符串用作输入。如果 &lt;var&gt;default&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则空输入将导致 &lt;code&gt;end-of-file&lt;/code&gt; 错误。但是，在通常情况下（ &lt;var&gt;read&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ），当用户输入空输入并返回空字符串 &lt;code&gt;&quot;&quot;&lt;/code&gt; 时， &lt;code&gt;read-from-minibuffer&lt;/code&gt; 会忽略 &lt;var&gt;default&lt;/var&gt; 。在这方面，它不同于本章中的所有其他小型缓冲区输入功能。</target>
        </trans-unit>
        <trans-unit id="5bad559afbcb968e474745ed42743ad8548140a8" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;real-binding&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, then &lt;var&gt;item-string&lt;/var&gt; appears in the menu but cannot be selected.</source>
          <target state="translated">如果 &lt;var&gt;real-binding&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;var&gt;item-string&lt;/var&gt; 出现在菜单中，但无法选择。</target>
        </trans-unit>
        <trans-unit id="1a263509e902be80b222e3f22285ef1c3be84047" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;real-binding&lt;/var&gt; is a symbol and has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;menu-enable&lt;/code&gt; property, that property is an expression that controls whether the menu item is enabled. Every time the keymap is used to display a menu, Emacs evaluates the expression, and it enables the menu item only if the expression&amp;rsquo;s value is non-&lt;code&gt;nil&lt;/code&gt;. When a menu item is disabled, it is displayed in a fuzzy fashion, and cannot be selected.</source>
          <target state="translated">如果 &lt;var&gt;real-binding&lt;/var&gt; 是一个符号，并且具有非 &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;menu-enable&lt;/code&gt; 属性，则该属性是一个表达式，用于控制是否启用菜单项。每次使用键盘映射显示菜单时，Emacs都会评估表达式，并且仅当表达式的值为 &lt;code&gt;nil&lt;/code&gt; ，它才会启用菜单项。禁用菜单项时，它将以模糊方式显示，并且无法选择。</target>
        </trans-unit>
        <trans-unit id="29fba77baa5fe708b6e13bfc62e89f6007e228b0" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;record-flag&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then this command and its arguments are unconditionally added to the list &lt;code&gt;command-history&lt;/code&gt;. Otherwise, the command is added only if it uses the minibuffer to read an argument. See &lt;a href=&quot;command-history#Command-History&quot;&gt;Command History&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;var&gt;record-flag&lt;/var&gt; 不为 &lt;code&gt;nil&lt;/code&gt; ，那么此命令及其参数将无条件地添加到list &lt;code&gt;command-history&lt;/code&gt; 中。否则，仅当命令使用最小缓冲区读取参数时才添加命令。请参阅&lt;a href=&quot;command-history#Command-History&quot;&gt;命令历史记录&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0b2c805c5f0aa1671bed4ef92a3890da3c1d0949" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;regexp-flag&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;var&gt;from-string&lt;/var&gt; is considered a regular expression; otherwise, it must match literally. If &lt;var&gt;delimited-flag&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then only replacements surrounded by word boundaries are considered.</source>
          <target state="translated">如果 &lt;var&gt;regexp-flag&lt;/var&gt; 不为 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;var&gt;from-string&lt;/var&gt; 被视为正则表达式；否则，它必须在字面上匹配。如果 &lt;var&gt;delimited-flag&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则仅考虑单词边界包围的替换。</target>
        </trans-unit>
        <trans-unit id="cae4def785cb9497f8cd4e7881057bc29505c8c4" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;registry&lt;/var&gt; is specified but not available, Emacs will try the other registries given in &lt;var&gt;alternate-registries&lt;/var&gt;, one by one, until it finds a registry that does exist.</source>
          <target state="translated">如果指定了 &lt;var&gt;registry&lt;/var&gt; 但不可用，则Emacs会一一尝试尝试 &lt;var&gt;alternate-registries&lt;/var&gt; 注册表中提供的其他注册表，直到找到确实存在的注册表。</target>
        </trans-unit>
        <trans-unit id="26052509c06bed95c26314f9cccfbe9d4958b6f1" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;rehash-size&lt;/var&gt; is an integer, it should be positive, and the hash table grows by adding approximately that much to the nominal size. If &lt;var&gt;rehash-size&lt;/var&gt; is floating point, it had better be greater than 1, and the hash table grows by multiplying the old size by approximately that number.</source>
          <target state="translated">如果 &lt;var&gt;rehash-size&lt;/var&gt; 是一个整数，则它应该为正数，并且哈希表会通过在名义大小上增加大约相同的值来增长。如果 &lt;var&gt;rehash-size&lt;/var&gt; 是浮点数，则最好大于1，并且哈希表通过将旧大小乘以该数字而增长。</target>
        </trans-unit>
        <trans-unit id="f2aea6014682cd0fd1247472b57595db84c9d053" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;remote&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, and &lt;code&gt;default-directory&lt;/code&gt; is a remote directory, &lt;var&gt;program&lt;/var&gt; is searched on the respective remote host.</source>
          <target state="translated">如果 &lt;var&gt;remote&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，并且 &lt;code&gt;default-directory&lt;/code&gt; 是远程目录，则在相应的远程主机上搜索 &lt;var&gt;program&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="dfe3cec663924e20b8e8887353bd47071e65adc6" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;repeat-count&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be an integer. Then it specifies how many times to use each of the strings in the &lt;var&gt;replacements&lt;/var&gt; list before advancing cyclically to the next one.</source>
          <target state="translated">如果 &lt;var&gt;repeat-count&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则应为整数。然后，它指定在循环前进到下一个字符串之前，使用 &lt;var&gt;replacements&lt;/var&gt; 列表中的每个字符串多少次。</target>
        </trans-unit>
        <trans-unit id="4ba4b93350562914b3611df9d32c00e0da009f40" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;repeat&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the timer runs just once, the first time Emacs remains idle for a long enough time. More often &lt;var&gt;repeat&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, which means to run the timer &lt;em&gt;each time&lt;/em&gt; Emacs remains idle for &lt;var&gt;secs&lt;/var&gt; seconds.</source>
          <target state="translated">如果 &lt;var&gt;repeat&lt;/var&gt; 是 &lt;code&gt;nil&lt;/code&gt; ，则计时器仅运行一次，这是Emacs第一次空闲足够长的时间。更经常 &lt;var&gt;repeat&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，这意味着运行定时器&lt;em&gt;每次&lt;/em&gt;Emacs的保持空闲 &lt;var&gt;secs&lt;/var&gt; 秒。</target>
        </trans-unit>
        <trans-unit id="d67d19c85268ddcf560ad1dcebef1d1a4641647a" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;replace&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;kill-new&lt;/code&gt; replaces the first element of the kill ring with &lt;var&gt;string&lt;/var&gt;, rather than pushing &lt;var&gt;string&lt;/var&gt; onto the kill ring.</source>
          <target state="translated">如果 &lt;var&gt;replace&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;kill-new&lt;/code&gt; 用 &lt;var&gt;string&lt;/var&gt; 替换kill环的第一个元素，而不是将 &lt;var&gt;string&lt;/var&gt; 推到kill环上。</target>
        </trans-unit>
        <trans-unit id="d4725e9067b58a8acd67ce0d63643d233b166952" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;replacements&lt;/var&gt; is a cons cell, &lt;code&gt;(&lt;var&gt;function&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;data&lt;/var&gt;)&lt;/code&gt;, this means to call &lt;var&gt;function&lt;/var&gt; after each match to get the replacement text. This function is called with two arguments: &lt;var&gt;data&lt;/var&gt;, and the number of replacements already made.</source>
          <target state="translated">如果 &lt;var&gt;replacements&lt;/var&gt; 为一个cons单元， &lt;code&gt;(&lt;var&gt;function&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;data&lt;/var&gt;)&lt;/code&gt; ，这个手段来调用 &lt;var&gt;function&lt;/var&gt; 每场比赛后得到替换文本。调用此函数有两个参数： &lt;var&gt;data&lt;/var&gt; 和已经进行的替换次数。</target>
        </trans-unit>
        <trans-unit id="e9b92e7de5ef3d0096eef07cab7e5acb3e5f3a02" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;reseat&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, all markers on the &lt;var&gt;match-list&lt;/var&gt; list are reseated to point to nowhere.</source>
          <target state="translated">如果 &lt;var&gt;reseat&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;var&gt;match-list&lt;/var&gt; 列表上的所有标记都将重新定位以指向无处。</target>
        </trans-unit>
        <trans-unit id="9e22a90f87ee4e0a28f0a43256bea55bceb44c30" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;reseat&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, all markers on the &lt;var&gt;reuse&lt;/var&gt; list are reseated to point to nowhere.</source>
          <target state="translated">如果 &lt;var&gt;reseat&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则重新 &lt;var&gt;reuse&lt;/var&gt; 列表上的所有标记以指向无处。</target>
        </trans-unit>
        <trans-unit id="79faed9a6e8588e5f1f6d0061a7ceab47596f5f2" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;restriction&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be a list of charsets to search. Alternatively, it can be a coding system, in which case the returned charset must be supported by that coding system (see &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Coding Systems&lt;/a&gt;).</source>
          <target state="translated">如果 &lt;var&gt;restriction&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则应为要搜索的字符集列表。或者，它可以是一个编码系统，在这种情况下，返回的字符集必须由该编码系统支持（请参阅&lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Coding Systems&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="4e0a2593036d10955a73cdcc3a1bed33b3212e9a" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;reuse&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be a list. In that case, &lt;code&gt;match-data&lt;/code&gt; stores the match data in &lt;var&gt;reuse&lt;/var&gt;. That is, &lt;var&gt;reuse&lt;/var&gt; is destructively modified. &lt;var&gt;reuse&lt;/var&gt; does not need to have the right length. If it is not long enough to contain the match data, it is extended. If it is too long, the length of &lt;var&gt;reuse&lt;/var&gt; stays the same, but the elements that were not used are set to &lt;code&gt;nil&lt;/code&gt;. The purpose of this feature is to reduce the need for garbage collection.</source>
          <target state="translated">如果 &lt;var&gt;reuse&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则应为列表。在这种情况下， &lt;code&gt;match-data&lt;/code&gt; 会 &lt;var&gt;reuse&lt;/var&gt; 存储匹配数据。也就是说，破坏性地修改了 &lt;var&gt;reuse&lt;/var&gt; 。 &lt;var&gt;reuse&lt;/var&gt; 不需要长度合适。如果长度不足以包含匹配数据，则会对其进行扩展。如果太长，则 &lt;var&gt;reuse&lt;/var&gt; 的长度保持不变，但是未使用的元素将设置为 &lt;code&gt;nil&lt;/code&gt; 。此功能的目的是减少垃圾收集的需求。</target>
        </trans-unit>
        <trans-unit id="222679d354577d757ac22b3b1566dd77fc259235" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;reuseaddr-flag&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; (the default) for a stream server process, allow this server to reuse a specific port number (see &lt;code&gt;:service&lt;/code&gt;), unless another process on this host is already listening on that port. If &lt;var&gt;reuseaddr-flag&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, there may be a period of time after the last use of that port (by any process on the host) where it is not possible to make a new server on that port.</source>
          <target state="translated">如果对于流服务器进程， &lt;var&gt;reuseaddr-flag&lt;/var&gt; 不 &lt;code&gt;nil&lt;/code&gt; （默认值），则允许该服务器重用特定的端口号（请参阅 &lt;code&gt;:service&lt;/code&gt; ），除非该主机上的另一个进程已经在该端口上侦听。如果 &lt;var&gt;reuseaddr-flag&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则在最后一次使用该端口（由主机上的任何进程）之后，可能会有一段时间无法在该端口上创建新服务器。</target>
        </trans-unit>
        <trans-unit id="ae9dd7142bb21c9c57e2950646994b2965287f32" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;reverse&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the sort is in reverse order.</source>
          <target state="translated">如果 &lt;var&gt;reverse&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则排序为相反顺序。</target>
        </trans-unit>
        <trans-unit id="622bc88ea182e257798f41748330ff7bc1b3830b" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;rigid&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; (interactively, with a prefix argument), then after this command indents a line or inserts a tab, it also rigidly indents the entire balanced expression which starts at the beginning of the current line, in order to reflect the new indentation. This argument is ignored if the command indents the region.</source>
          <target state="translated">如果 &lt;var&gt;rigid&lt;/var&gt; 是非 &lt;code&gt;nil&lt;/code&gt; （交互，用一个前缀参数），则此命令缩进的线或插入一个制表后，它也刚性地缩进开始于当前行的开头的整个平衡表达，以反映新的缩进。如果命令使区域缩进，则忽略此参数。</target>
        </trans-unit>
        <trans-unit id="08f1cd4e99cfd160730c721b29ea4ba5b4a55e0d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;seconds&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, Emacs is considered idle while waiting for user input to arrive. Idle timers&amp;mdash;those created with &lt;code&gt;run-with-idle-timer&lt;/code&gt; (see &lt;a href=&quot;idle-timers#Idle-Timers&quot;&gt;Idle Timers&lt;/a&gt;)&amp;mdash;can run during this period. However, if &lt;var&gt;seconds&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the state of idleness remains unchanged. If Emacs is non-idle when &lt;code&gt;read-event&lt;/code&gt; is called, it remains non-idle throughout the operation of &lt;code&gt;read-event&lt;/code&gt;; if Emacs is idle (which can happen if the call happens inside an idle timer), it remains idle.</source>
          <target state="translated">如果 &lt;var&gt;seconds&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则在等待用户输入到达时Emacs被认为是空闲的。空闲计时器（使用 &lt;code&gt;run-with-idle-timer&lt;/code&gt; 创建的计时器）（请参见&lt;a href=&quot;idle-timers#Idle-Timers&quot;&gt;空闲计时器&lt;/a&gt;）可以在此期间运行。但是，如果 &lt;var&gt;seconds&lt;/var&gt; 不 &lt;code&gt;nil&lt;/code&gt; ，则空闲状态保持不变。如果在调用 &lt;code&gt;read-event&lt;/code&gt; 时Emacs是非空闲的，则在整个 &lt;code&gt;read-event&lt;/code&gt; 的操作中它仍保持非空闲；如果Emacs处于空闲状态（如果调用在空闲计时器内发生，则可能发生），它保持空闲状态。</target>
        </trans-unit>
        <trans-unit id="5642e33637174a8c339af0aa142ae8c3a71c46aa" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;seconds&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be a number specifying the maximum time to wait for input, in seconds. If no input arrives within that time, &lt;code&gt;read-event&lt;/code&gt; stops waiting and returns &lt;code&gt;nil&lt;/code&gt;. A floating point &lt;var&gt;seconds&lt;/var&gt; means to wait for a fractional number of seconds. Some systems support only a whole number of seconds; on these systems, &lt;var&gt;seconds&lt;/var&gt; is rounded down. If &lt;var&gt;seconds&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;read-event&lt;/code&gt; waits as long as necessary for input to arrive.</source>
          <target state="translated">如果 &lt;var&gt;seconds&lt;/var&gt; 不为 &lt;code&gt;nil&lt;/code&gt; ，则它应该是一个数字，以秒为单位指定等待输入的最长时间。如果在此时间内没有输入到达，则 &lt;code&gt;read-event&lt;/code&gt; 停止等待并返回 &lt;code&gt;nil&lt;/code&gt; 。浮点 &lt;var&gt;seconds&lt;/var&gt; 表示等待几分之一秒。某些系统仅支持整数秒。在这些系统上， &lt;var&gt;seconds&lt;/var&gt; 被舍入。如果 &lt;var&gt;seconds&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;read-event&lt;/code&gt; 等待输入到达所需的时间。</target>
        </trans-unit>
        <trans-unit id="8386d9a4eefbe519440f3c3d975d045871d06db5" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;separation&lt;/var&gt; is 0 and &lt;var&gt;to&lt;/var&gt; is neither &lt;code&gt;nil&lt;/code&gt; nor numerically equal to &lt;var&gt;from&lt;/var&gt;, &lt;code&gt;number-sequence&lt;/code&gt; signals an error, since those arguments specify an infinite sequence.</source>
          <target state="translated">如果 &lt;var&gt;separation&lt;/var&gt; 为0，且 &lt;var&gt;to&lt;/var&gt; 既不为 &lt;code&gt;nil&lt;/code&gt; ,也不为数值上的 &lt;var&gt;from&lt;/var&gt; ，则 &lt;code&gt;number-sequence&lt;/code&gt; 表示错误，因为这些参数指定了无限序列。</target>
        </trans-unit>
        <trans-unit id="6d92d4436bafe64db0b8bdba3d216bc11fa628fc" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;separators&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; (or omitted), the default is the value of &lt;code&gt;split-string-default-separators&lt;/code&gt; and the function behaves as if &lt;var&gt;omit-nulls&lt;/var&gt; were &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;var&gt;separators&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; （或省略），则默认值为 &lt;code&gt;split-string-default-separators&lt;/code&gt; 的值，该函数的行为就像 &lt;var&gt;omit-nulls&lt;/var&gt; 为 &lt;code&gt;t&lt;/code&gt; 一样。</target>
        </trans-unit>
        <trans-unit id="09d4f13d9281bb64e2677b4eac3ea8ecb6bf1ab5" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;separators&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to &lt;code&gt;&quot;\\s-+&quot;&lt;/code&gt;, which is a regular expression that matches one or more characters with whitespace syntax (see &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;Syntax Class Table&lt;/a&gt;).</source>
          <target state="translated">如果 &lt;var&gt;separators&lt;/var&gt; 被省略或 &lt;code&gt;nil&lt;/code&gt; ，则默认为 &lt;code&gt;&quot;\\s-+&quot;&lt;/code&gt; ，它是一个正则表达式的一个或多个字符与空白的语法相匹配（参见&lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;语法类表&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="854fc5a8bf2a20bd3bff850b8a969c5717c1f0a2" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;sequence&lt;/var&gt; is a list, &lt;code&gt;delete&lt;/code&gt; is to &lt;code&gt;delq&lt;/code&gt; as &lt;code&gt;member&lt;/code&gt; is to &lt;code&gt;memq&lt;/code&gt;: it uses &lt;code&gt;equal&lt;/code&gt; to compare elements with &lt;var&gt;object&lt;/var&gt;, like &lt;code&gt;member&lt;/code&gt;; when it finds an element that matches, it cuts the element out just as &lt;code&gt;delq&lt;/code&gt; would. As with &lt;code&gt;delq&lt;/code&gt;, you should typically use the return value by assigning it to the variable which held the original list.</source>
          <target state="translated">如果 &lt;var&gt;sequence&lt;/var&gt; 是一个列表，则 &lt;code&gt;delete&lt;/code&gt; 是对 &lt;code&gt;delq&lt;/code&gt; 的删除，而 &lt;code&gt;member&lt;/code&gt; 是 &lt;code&gt;memq&lt;/code&gt; 的删除：它使用 &lt;code&gt;equal&lt;/code&gt; 来比较与 &lt;var&gt;object&lt;/var&gt; 的元素，例如 &lt;code&gt;member&lt;/code&gt; ; 当找到匹配的元素时，它将像 &lt;code&gt;delq&lt;/code&gt; 一样将其切出。与 &lt;code&gt;delq&lt;/code&gt; 一样，通常应通过将返回值分配给保存原始列表的变量来使用返回值。</target>
        </trans-unit>
        <trans-unit id="f9659fb0feaec0514fe61e48c096bba52bcb7e4f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;sequence&lt;/var&gt; is empty, this function signals an error.</source>
          <target state="translated">如果 &lt;var&gt;sequence&lt;/var&gt; 为空，则此功能会发出错误信号。</target>
        </trans-unit>
        <trans-unit id="a701d0e0b8bfabee07d5e74d36fccd0aaf23ff6d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;server-flag&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, create a server. Otherwise, create a connection. For a stream type server, &lt;var&gt;server-flag&lt;/var&gt; may be an integer, which then specifies the length of the queue of pending connections to the server. The default queue length is 5.</source>
          <target state="translated">如果 &lt;var&gt;server-flag&lt;/var&gt; 不为 &lt;code&gt;nil&lt;/code&gt; ，则创建服务器。否则，创建一个连接。对于流类型的服务器， &lt;var&gt;server-flag&lt;/var&gt; 可以是整数，然后指定到服务器的挂起连接队列的长度。默认队列长度为5。</target>
        </trans-unit>
        <trans-unit id="6213d01563379e9136196a8c3dea906d973f8bea" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;set-minimum&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the new scroll amount becomes the lower bound for automatic scrolling; that is, automatic scrolling will not scroll a window to a column less than the value returned by this function. Interactive calls pass non-&lt;code&gt;nil&lt;/code&gt; for &lt;var&gt;set-minimum&lt;/var&gt;.</source>
          <target state="translated">如果 &lt;var&gt;set-minimum&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则新的滚动量成为自动滚动的下限；否则，自动滚动。也就是说，自动滚动不会将窗口滚动到小于此函数返回值的列。交互式呼叫的 &lt;var&gt;set-minimum&lt;/var&gt; 传递非 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cd51b1294a9e7a2e5ef38fe131e5f49b53ebe0de" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;side&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt; or &lt;code&gt;right&lt;/code&gt;, the new window is placed on the right of &lt;var&gt;window&lt;/var&gt;. If &lt;var&gt;side&lt;/var&gt; is &lt;code&gt;left&lt;/code&gt;, the new window is placed on the left of &lt;var&gt;window&lt;/var&gt;. In both these cases, &lt;var&gt;size&lt;/var&gt; specifies a total window width, in columns.</source>
          <target state="translated">如果 &lt;var&gt;side&lt;/var&gt; 是 &lt;code&gt;t&lt;/code&gt; 或 &lt;code&gt;right&lt;/code&gt; ，则新窗口将位于 &lt;var&gt;window&lt;/var&gt; 的右侧。如果 &lt;var&gt;side&lt;/var&gt; 是 &lt;code&gt;left&lt;/code&gt; ，新的窗口被放置在左边 &lt;var&gt;window&lt;/var&gt; 。在这两种情况下， &lt;var&gt;size&lt;/var&gt; 均以列为单位指定总窗口宽度。</target>
        </trans-unit>
        <trans-unit id="1b71e5e555e2a363d30553ba727292f357281932" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;size&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this function obeys the variables &lt;code&gt;window-min-height&lt;/code&gt; and &lt;code&gt;window-min-width&lt;/code&gt; (see &lt;a href=&quot;window-sizes#Window-Sizes&quot;&gt;Window Sizes&lt;/a&gt;). Thus, it signals an error if splitting would result in making a window smaller than those variables specify. However, a non-&lt;code&gt;nil&lt;/code&gt; value for &lt;var&gt;size&lt;/var&gt; causes those variables to be ignored; in that case, the smallest allowable window is considered to be one that has space for a text area one line tall and/or two columns wide.</source>
          <target state="translated">如果 &lt;var&gt;size&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则此函数服从变量 &lt;code&gt;window-min-height&lt;/code&gt; 和 &lt;code&gt;window-min-width&lt;/code&gt; （请参见&lt;a href=&quot;window-sizes#Window-Sizes&quot;&gt;Window Sizes&lt;/a&gt;）。因此，如果拆分会导致使窗口小于那些变量指定的范围，则会发出错误信号。但是， &lt;var&gt;size&lt;/var&gt; 的非 &lt;code&gt;nil&lt;/code&gt; 值会导致这些变量被忽略；在这种情况下，最小的允许窗口被认为是具有一行一行和/或两列宽的文本区域的空间的窗口。</target>
        </trans-unit>
        <trans-unit id="b633c9205c4f539145890a7ae6e749104bec146b" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;spec-alist&lt;/var&gt; contains more than one association with the same &lt;var&gt;letter&lt;/var&gt;, the closest one to the start of the list is used.</source>
          <target state="translated">如果 &lt;var&gt;spec-alist&lt;/var&gt; 包含多个具有相同 &lt;var&gt;letter&lt;/var&gt; 关联，则使用最接近列表开头的关联。</target>
        </trans-unit>
        <trans-unit id="ee5c4e886babc50191f48bbbcd6e8f7a70511d96" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;spec-alist&lt;/var&gt; contains more unique &lt;var&gt;letter&lt;/var&gt; keys than there are unique specification characters in &lt;var&gt;template&lt;/var&gt;, the unused keys are simply ignored.</source>
          <target state="translated">如果 &lt;var&gt;spec-alist&lt;/var&gt; 包含的唯一 &lt;var&gt;letter&lt;/var&gt; 键多于 &lt;var&gt;template&lt;/var&gt; 中的唯一说明字符，则未使用的键将被忽略。</target>
        </trans-unit>
        <trans-unit id="84f9a512be9e80fe9a56d88f0957df707399bdf9" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;spec_version&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the server supports a specification prior to &amp;lsquo;</source>
          <target state="translated">如果 &lt;var&gt;spec_version&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则服务器支持'</target>
        </trans-unit>
        <trans-unit id="af0dbbeb9d2f1be798ead1bbb9b5024e72bd988d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;start&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, then the command writes the entire buffer contents (&lt;em&gt;not&lt;/em&gt; just the accessible portion) to the file and ignores &lt;var&gt;end&lt;/var&gt;.</source>
          <target state="translated">如果 &lt;var&gt;start&lt;/var&gt; 是 &lt;code&gt;nil&lt;/code&gt; ，则该命令的整个缓冲区内容（写入&lt;em&gt;不&lt;/em&gt;只是可访问部分）到该文件并忽略 &lt;var&gt;end&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="7e7cdef8a248c833f3e9f0975b11a5c6d1f54491" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;start&lt;/var&gt; is a string, then &lt;code&gt;write-region&lt;/code&gt; writes or appends that string, rather than text from the buffer. &lt;var&gt;end&lt;/var&gt; is ignored in this case.</source>
          <target state="translated">如果 &lt;var&gt;start&lt;/var&gt; 是一个字符串，则 &lt;code&gt;write-region&lt;/code&gt; 将写入或附加该字符串，而不是缓冲区中的文本。在这种情况下，将忽略 &lt;var&gt;end&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="9f8b47e15ad68d0891e8c9b125e2797186ef0b5c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;start&lt;/var&gt; is supplied, then reading begins at index &lt;var&gt;start&lt;/var&gt; in the string (where the first character is at index 0). If you specify &lt;var&gt;end&lt;/var&gt;, then reading is forced to stop just before that index, as if the rest of the string were not there.</source>
          <target state="translated">如果提供了 &lt;var&gt;start&lt;/var&gt; ，则读取 &lt;var&gt;start&lt;/var&gt; 字符串的索引开头开始（第一个字符位于索引0）。如果指定 &lt;var&gt;end&lt;/var&gt; ，则将强制在该索引之前停止读取，就好像字符串的其余部分不在该位置。</target>
        </trans-unit>
        <trans-unit id="1064524b7d7d3e8de9713f9ea7f70aea53abf953" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;state&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;start&lt;/var&gt; is assumed to be at the top level of parenthesis structure, such as the beginning of a function definition. Alternatively, you might wish to resume parsing in the middle of the structure. To do this, you must provide a &lt;var&gt;state&lt;/var&gt; argument that describes the initial status of parsing. The value returned by a previous call to &lt;code&gt;parse-partial-sexp&lt;/code&gt; will do nicely.</source>
          <target state="translated">如果 &lt;var&gt;state&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则假定 &lt;var&gt;start&lt;/var&gt; 在括号结构的顶层，例如函数定义的开头。或者，您可能希望在结构中间继续解析。为此，您必须提供一个 &lt;var&gt;state&lt;/var&gt; 参数来描述解析的初始状态。先前调用 &lt;code&gt;parse-partial-sexp&lt;/code&gt; 返回的值会很好。</target>
        </trans-unit>
        <trans-unit id="1b1e965c41f20d0496aa0f65e56130346a4d517f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;stderr&lt;/var&gt; is a buffer, Emacs will create a pipe process, the &lt;em&gt;standard error process&lt;/em&gt;. This process will have the default filter (see &lt;a href=&quot;filter-functions#Filter-Functions&quot;&gt;Filter Functions&lt;/a&gt;), sentinel (see &lt;a href=&quot;sentinels#Sentinels&quot;&gt;Sentinels&lt;/a&gt;), and coding systems (see &lt;a href=&quot;default-coding-systems#Default-Coding-Systems&quot;&gt;Default Coding Systems&lt;/a&gt;). On the other hand, it will use &lt;var&gt;query-flag&lt;/var&gt; as its query-on-exit flag (see &lt;a href=&quot;query-before-exit#Query-Before-Exit&quot;&gt;Query Before Exit&lt;/a&gt;). It will be associated with the &lt;var&gt;stderr&lt;/var&gt; buffer (see &lt;a href=&quot;process-buffers#Process-Buffers&quot;&gt;Process Buffers&lt;/a&gt;) and send its output (which is the standard error of the main process) there.</source>
          <target state="translated">如果 &lt;var&gt;stderr&lt;/var&gt; 是缓冲区，则Emacs将创建管道进程（&lt;em&gt;标准错误进程）&lt;/em&gt;。此过程将具有默认过滤器（请参阅&lt;a href=&quot;filter-functions#Filter-Functions&quot;&gt;过滤器功能&lt;/a&gt;），哨兵（请参阅&lt;a href=&quot;sentinels#Sentinels&quot;&gt;Sentinels&lt;/a&gt;）和编码系统（请参阅&lt;a href=&quot;default-coding-systems#Default-Coding-Systems&quot;&gt;默认编码系统&lt;/a&gt;）。另一方面，它将使用 &lt;var&gt;query-flag&lt;/var&gt; 作为其退出时&lt;a href=&quot;query-before-exit#Query-Before-Exit&quot;&gt;查询&lt;/a&gt;标志（请参阅退出前查询）。它将与 &lt;var&gt;stderr&lt;/var&gt; 缓冲区关联（请参阅&lt;a href=&quot;process-buffers#Process-Buffers&quot;&gt;Process Buffers&lt;/a&gt;）并在那里发送其输出（这是主进程的标准错误）。</target>
        </trans-unit>
        <trans-unit id="a5e62af174b242025e0fdb63aecdd440c285a2c7" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;stderr&lt;/var&gt; is a pipe process, Emacs will use it as standard error process for the new process.</source>
          <target state="translated">如果 &lt;var&gt;stderr&lt;/var&gt; 是管道进程，则Emacs会将其用作新进程的标准错误进程。</target>
        </trans-unit>
        <trans-unit id="ed5602c6572f68ec28cdd36515ff160efea43149" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;stopped&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, start the network connection or server in the stopped state.</source>
          <target state="translated">如果 &lt;var&gt;stopped&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则在stopped状态下启动网络连接或服务器。</target>
        </trans-unit>
        <trans-unit id="a8f1e9ac512b8b8aa763432c8aa6436fd5cc736c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;stopped&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, start the process in the stopped state. In the stopped state, a pipe process does not accept incoming data, but you can send outgoing data. The stopped state is set by &lt;code&gt;stop-process&lt;/code&gt; and cleared by &lt;code&gt;continue-process&lt;/code&gt; (see &lt;a href=&quot;signals-to-processes#Signals-to-Processes&quot;&gt;Signals to Processes&lt;/a&gt;).</source>
          <target state="translated">如果 &lt;var&gt;stopped&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则以stopped状态启动该过程。在停止状态下，管道进程不接受传入数据，但是您可以发送传出数据。停止状态由 &lt;code&gt;stop-process&lt;/code&gt; 设置，并由 &lt;code&gt;continue-process&lt;/code&gt; 清除（请参阅&lt;a href=&quot;signals-to-processes#Signals-to-Processes&quot;&gt;信号到过程&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="486bdcab2a6b255a0b57fc7fb8ae9ec92b88d963" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;string-or-char&lt;/var&gt; is a string, this function capitalizes the initials of the words in &lt;var&gt;string-or-char&lt;/var&gt;, without altering any letters other than the initials. It returns a new string whose contents are a copy of &lt;var&gt;string-or-char&lt;/var&gt;, in which each word has had its initial letter converted to upper case.</source>
          <target state="translated">如果 &lt;var&gt;string-or-char&lt;/var&gt; 是字符串，则此函数将 &lt;var&gt;string-or-char&lt;/var&gt; 中单词的首字母大写，而不更改除首字母之外的任何字母。它返回一个新字符串，其内容是 &lt;var&gt;string-or-char&lt;/var&gt; 的副本，其中每个单词的首字母都转换为大写。</target>
        </trans-unit>
        <trans-unit id="238dd0f09c59f6b49fbe1e9c6ba5d5c043f84e1f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;string&lt;/var&gt; does not reach &lt;var&gt;width&lt;/var&gt;, then the result ends where &lt;var&gt;string&lt;/var&gt; ends. If one multi-column character in &lt;var&gt;string&lt;/var&gt; extends across the column &lt;var&gt;width&lt;/var&gt;, that character is not included in the result. Thus, the result can fall short of &lt;var&gt;width&lt;/var&gt; but cannot go beyond it.</source>
          <target state="translated">如果 &lt;var&gt;string&lt;/var&gt; 未达到 &lt;var&gt;width&lt;/var&gt; ，则结果在 &lt;var&gt;string&lt;/var&gt; 结束处结束。如果 &lt;var&gt;string&lt;/var&gt; 一个多列字符跨越整个列 &lt;var&gt;width&lt;/var&gt; ，则该字符不包括在结果中。因此，结果可能无法达到 &lt;var&gt;width&lt;/var&gt; 但不能超出宽度。</target>
        </trans-unit>
        <trans-unit id="b7faa9f933af4a311232e27474b1f916a7348050" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;string&lt;/var&gt; is a multibyte string, this function returns &lt;var&gt;string&lt;/var&gt; itself. Otherwise, it returns a new string with the same bytes as &lt;var&gt;string&lt;/var&gt;, but treating each multibyte sequence as one character. This means that the value may have fewer characters than &lt;var&gt;string&lt;/var&gt; has. If a byte sequence in &lt;var&gt;string&lt;/var&gt; is invalid as a multibyte representation of a single character, each byte in the sequence is treated as a raw 8-bit byte. The newly-created string contains no text properties.</source>
          <target state="translated">如果 &lt;var&gt;string&lt;/var&gt; 是多字节字符串，则此函数将返回 &lt;var&gt;string&lt;/var&gt; 本身。否则，返回具有相同的字节作为一个新字符串 &lt;var&gt;string&lt;/var&gt; ，而是把每个多字节序列作为一个字符。这意味着该值的字符数可能少于 &lt;var&gt;string&lt;/var&gt; 的字符数。如果 &lt;var&gt;string&lt;/var&gt; 的字节序列作为单个字符的多字节表示形式无效，则该序列中的每个字节都将被视为原始8位字节。新创建的字符串不包含文本属性。</target>
        </trans-unit>
        <trans-unit id="4b608a2f2f52718650c1a44a54ce290435148dc4" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;string&lt;/var&gt; is already a unibyte string, this function returns &lt;var&gt;string&lt;/var&gt; itself. Otherwise, it returns a new string with the same bytes as &lt;var&gt;string&lt;/var&gt;, but treating each byte as a separate character (so that the value may have more characters than &lt;var&gt;string&lt;/var&gt;); as an exception, each eight-bit character representing a raw byte is converted into a single byte. The newly-created string contains no text properties.</source>
          <target state="translated">如果 &lt;var&gt;string&lt;/var&gt; 已经是一个单字节字符串，则此函数将返回 &lt;var&gt;string&lt;/var&gt; 本身。否则，它返回一个新的字符串以相同的字节 &lt;var&gt;string&lt;/var&gt; ，但将每个字节作为一个单独的字符（以使该值可以具有比多个字符 &lt;var&gt;string&lt;/var&gt; ）; 作为例外，代表原始字节的每个八位字符都转换为一个字节。新创建的字符串不包含文本属性。</target>
        </trans-unit>
        <trans-unit id="cc1e8a34915dedfac1b19a6d45f70ebc384f6e81" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;string&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, its characters are sent to Emacs&amp;rsquo;s superior shell, to be read as terminal input. The characters in &lt;var&gt;string&lt;/var&gt; are not echoed by the superior shell; only the results appear.</source>
          <target state="translated">如果 &lt;var&gt;string&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则其字符将发送到Emacs的高级Shell，以作为终端输入读取。 &lt;var&gt;string&lt;/var&gt; 中的字符不会被上级外壳回显；只显示结果。</target>
        </trans-unit>
        <trans-unit id="38e099f5f28342bbc774d61a146dfdaae0efdaba" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;strings&lt;/var&gt; is the empty list, the return value is a regexp that never matches anything.</source>
          <target state="translated">如果 &lt;var&gt;strings&lt;/var&gt; 是空列表，则返回值是一个从不匹配任何内容的正则表达式。</target>
        </trans-unit>
        <trans-unit id="97e5f295c2cdf3fef7745bcc83f6d9310efe00b9" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;subexp&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that says to replace just subexpression number &lt;var&gt;subexp&lt;/var&gt; of the regexp that was matched, not the entire match. For example, after matching &amp;lsquo;</source>
          <target state="translated">如果 &lt;var&gt;subexp&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则表示仅替换匹配的regexp的子表达式编号 &lt;var&gt;subexp&lt;/var&gt; ，而不是整个匹配项。例如，匹配&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="17e6c14619a48c15c81a8a104a358917ec58b2f5" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;subtype&lt;/var&gt; has the &lt;code&gt;char-table-extra-slots&lt;/code&gt; symbol property, that specifies the number of extra slots in the char-table. This should be an integer between 0 and 10; otherwise, &lt;code&gt;make-char-table&lt;/code&gt; raises an error. If &lt;var&gt;subtype&lt;/var&gt; has no &lt;code&gt;char-table-extra-slots&lt;/code&gt; symbol property (see &lt;a href=&quot;property-lists#Property-Lists&quot;&gt;Property Lists&lt;/a&gt;), the char-table has no extra slots.</source>
          <target state="translated">如果 &lt;var&gt;subtype&lt;/var&gt; 具有 &lt;code&gt;char-table-extra-slots&lt;/code&gt; 符号属性，则该属性指定char-table中额外的插槽数。这应该是0到10之间的整数；否则， &lt;code&gt;make-char-table&lt;/code&gt; 会引发错误。如果 &lt;var&gt;subtype&lt;/var&gt; 没有 &lt;code&gt;char-table-extra-slots&lt;/code&gt; 符号属性（请参见&lt;a href=&quot;property-lists#Property-Lists&quot;&gt;属性列表&lt;/a&gt;），则char-table没有额外的插槽。</target>
        </trans-unit>
        <trans-unit id="e9e41abd138984c7d2eb029448da7b05b35bf5d3" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;suffix&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;make-temp-file&lt;/code&gt; adds it at the end of the file name.</source>
          <target state="translated">如果 &lt;var&gt;suffix&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;make-temp-file&lt;/code&gt; 将其添加到文件名的末尾。</target>
        </trans-unit>
        <trans-unit id="b0cb3b361bbbcfca5af1fce7182f5c264d301f0b" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;symbol&lt;/var&gt; has a buffer-local binding in the current buffer, &lt;code&gt;defvar&lt;/code&gt; acts on the default value, which is buffer-independent, rather than the buffer-local binding. It sets the default value if the default value is void. See &lt;a href=&quot;buffer_002dlocal-variables#Buffer_002dLocal-Variables&quot;&gt;Buffer-Local Variables&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;var&gt;symbol&lt;/var&gt; 在当前缓冲区中具有本地缓冲区绑定，则 &lt;code&gt;defvar&lt;/code&gt; 会作用于默认值，该默认值与缓冲区无关，而不是本地缓冲区绑定。如果默认值为空，它将设置默认值。请参阅&lt;a href=&quot;buffer_002dlocal-variables#Buffer_002dLocal-Variables&quot;&gt;缓冲区局部变量&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ef082f86ace32c0314e201d0be908b051f5492a3" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;symbol&lt;/var&gt; has a dynamic local binding, &lt;code&gt;makunbound&lt;/code&gt; voids the current binding, and this voidness lasts only as long as the local binding is in effect. Afterwards, the previously shadowed local or global binding is reexposed; then the variable will no longer be void, unless the reexposed binding is void too.</source>
          <target state="translated">如果 &lt;var&gt;symbol&lt;/var&gt; 具有动态本地绑定，则 &lt;code&gt;makunbound&lt;/code&gt; 会使当前绑定无效，并且这种无效性仅在有效本地绑定的情况下持续存在。然后，重新暴露先前阴影的局部或全局绑定；那么该变量将不再是无效的，除非重新暴露的绑定也无效。</target>
        </trans-unit>
        <trans-unit id="0b4b053a21b46acafcc9fca3c5b527939c88adfd" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;symbol&lt;/var&gt; is already lexically bound (e.g., if the &lt;code&gt;defvar&lt;/code&gt; form occurs in a &lt;code&gt;let&lt;/code&gt; form with lexical binding enabled), then &lt;code&gt;defvar&lt;/code&gt; sets the dynamic value. The lexical binding remains in effect until its binding construct exits. See &lt;a href=&quot;variable-scoping#Variable-Scoping&quot;&gt;Variable Scoping&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;var&gt;symbol&lt;/var&gt; 已经词法结合（例如，如果 &lt;code&gt;defvar&lt;/code&gt; 在发生形式 &lt;code&gt;let&lt;/code&gt; 形式具有词汇结合启用），则 &lt;code&gt;defvar&lt;/code&gt; 设置动态值。词法绑定一直有效，直到其绑定构造退出为止。请参阅&lt;a href=&quot;variable-scoping#Variable-Scoping&quot;&gt;可变作用域&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="02b9b71c4c64cf72e491274e76972257c5144331" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;symbol&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be a symbol; then this macro defines &lt;var&gt;symbol&lt;/var&gt; as a function for popping up the menu (see &lt;a href=&quot;pop_002dup-menus#Pop_002dUp-Menus&quot;&gt;Pop-Up Menus&lt;/a&gt;), with &lt;var&gt;doc&lt;/var&gt; as its documentation string. &lt;var&gt;symbol&lt;/var&gt; should not be quoted.</source>
          <target state="translated">如果 &lt;var&gt;symbol&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则应为符号；否则为false。然后此宏将 &lt;var&gt;symbol&lt;/var&gt; 定义为用于弹出菜单的功能（请参见&lt;a href=&quot;pop_002dup-menus#Pop_002dUp-Menus&quot;&gt;Pop-Up Menus&lt;/a&gt;），其中 &lt;var&gt;doc&lt;/var&gt; 为文档字符串。 &lt;var&gt;symbol&lt;/var&gt; 不应加引号。</target>
        </trans-unit>
        <trans-unit id="981ad96cac5032c5ebab6758c7ff3993a6216ce8" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;symbol&lt;/var&gt; is not actually a symbol, a &lt;code&gt;wrong-type-argument&lt;/code&gt; error is signaled.</source>
          <target state="translated">如果 &lt;var&gt;symbol&lt;/var&gt; 实际上不是符号，则表明 &lt;code&gt;wrong-type-argument&lt;/code&gt; 错误。</target>
        </trans-unit>
        <trans-unit id="ccbbbbbaec743c0719bb95b5ca9b992a3beee9f1" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;symbol&lt;/var&gt; is part of a sequencing pattern &lt;var&gt;seqpat&lt;/var&gt; (e.g., by using &lt;code&gt;and&lt;/code&gt;, below), the binding is also available to the portion of &lt;var&gt;seqpat&lt;/var&gt; following the appearance of &lt;var&gt;symbol&lt;/var&gt;. This usage has some caveats, see &lt;a href=&quot;#pcase_002dsymbol_002dcaveats&quot;&gt;caveats&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;var&gt;symbol&lt;/var&gt; 是排序模式 &lt;var&gt;seqpat&lt;/var&gt; 的一部分（例如，通过在下面使用 &lt;code&gt;and&lt;/code&gt; ），则在 &lt;var&gt;symbol&lt;/var&gt; 出现后，绑定也可用于 &lt;var&gt;seqpat&lt;/var&gt; 的一部分。此用法有一些警告，请参阅&lt;a href=&quot;#pcase_002dsymbol_002dcaveats&quot;&gt;警告&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fcac716a2ce0d702099f5bd80357cf72ea94c32f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;symbol&lt;/var&gt;&amp;rsquo;s definition is a byte-code function object, &lt;code&gt;byte-compile&lt;/code&gt; does nothing and returns &lt;code&gt;nil&lt;/code&gt;. It does not compile the symbol&amp;rsquo;s definition again, since the original (non-compiled) code has already been replaced in the symbol&amp;rsquo;s function cell by the byte-compiled code.</source>
          <target state="translated">如果 &lt;var&gt;symbol&lt;/var&gt; 的定义是字节码函数对象，则 &lt;code&gt;byte-compile&lt;/code&gt; 不执行任何操作并返回 &lt;code&gt;nil&lt;/code&gt; 。它不会再次编译符号的定义，因为原始（未编译的）代码已在符号的功能单元中被字节编译的代码替换。</target>
        </trans-unit>
        <trans-unit id="5f27a90dd8bffeddda02c9a0142776a45ffe4f38" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;syntax&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the return value is &lt;code&gt;nil&lt;/code&gt;. This is so that the expression</source>
          <target state="translated">如果 &lt;var&gt;syntax&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则返回值为 &lt;code&gt;nil&lt;/code&gt; 。这样的表达</target>
        </trans-unit>
        <trans-unit id="dc45e1d679498d8d5df720f51ef1aa38cdbd5542" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;syntaxes&lt;/var&gt; starts with &amp;lsquo;</source>
          <target state="translated">如果 &lt;var&gt;syntaxes&lt;/var&gt; 以&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="e2426d81f8b8ba08be26cbd86258aed2310c30a8" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;target&lt;/var&gt; is a relative file name, the resulting symbolic link is interpreted relative to the directory containing the symbolic link. See &lt;a href=&quot;relative-file-names#Relative-File-Names&quot;&gt;Relative File Names&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;var&gt;target&lt;/var&gt; 是相对文件名，则相对于包含符号链接的目录来解释生成的符号链接。请参阅&lt;a href=&quot;relative-file-names#Relative-File-Names&quot;&gt;相对文件名&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="eac7052b536752164e12dcf27b7eff2371525b90" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;template&lt;/var&gt; contains the same specification character more than once, then the same &lt;var&gt;replacement&lt;/var&gt; found in &lt;var&gt;spec-alist&lt;/var&gt; is used as a basis for all of that character&amp;rsquo;s substitutions.</source>
          <target state="translated">如果 &lt;var&gt;template&lt;/var&gt; 不止一次包含相同的规范字符，则将 &lt;var&gt;spec-alist&lt;/var&gt; 找到的相同 &lt;var&gt;replacement&lt;/var&gt; 用作该字符所有替换的基础。</target>
        </trans-unit>
        <trans-unit id="bcaa3c59d1bd107d501986d7c09c4e8f2f0ecf78" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;terminal&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected frame&amp;rsquo;s terminal. &lt;var&gt;terminal&lt;/var&gt; can also be a frame, meaning that frame&amp;rsquo;s terminal.</source>
          <target state="translated">如果 &lt;var&gt;terminal&lt;/var&gt; 省略或为 &lt;code&gt;nil&lt;/code&gt; ，则默认为所选框架的端子。 &lt;var&gt;terminal&lt;/var&gt; 也可以是框架，表示框架的终端。</target>
        </trans-unit>
        <trans-unit id="d820257dd4d95ef64be75ea9b9ab576f34b6841f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;text&lt;/var&gt; is a string, &lt;code&gt;make-temp-file&lt;/code&gt; inserts it in the file.</source>
          <target state="translated">如果 &lt;var&gt;text&lt;/var&gt; 是字符串， &lt;code&gt;make-temp-file&lt;/code&gt; 会将其插入文件中。</target>
        </trans-unit>
        <trans-unit id="47f916373b85444012892bbaa32e2ee85c921af1" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;thread&lt;/var&gt; is blocked in &lt;code&gt;condition-wait&lt;/code&gt;, this returns the condition variable.</source>
          <target state="translated">如果 &lt;var&gt;thread&lt;/var&gt; 在 &lt;code&gt;condition-wait&lt;/code&gt; 中被阻塞，则返回条件变量。</target>
        </trans-unit>
        <trans-unit id="67559f5e436fb644e7082eeec37b4136a62c6fce" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;thread&lt;/var&gt; is blocked in &lt;code&gt;mutex-lock&lt;/code&gt;, this returns the mutex.</source>
          <target state="translated">如果 &lt;var&gt;thread&lt;/var&gt; 在 &lt;code&gt;mutex-lock&lt;/code&gt; 被阻塞，则返回互斥。</target>
        </trans-unit>
        <trans-unit id="d148be74ea38df9497915eeb8e705ef9a145eb3f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;thread&lt;/var&gt; is blocked in &lt;code&gt;thread-join&lt;/code&gt;, this returns the thread for which it is waiting.</source>
          <target state="translated">如果 &lt;var&gt;thread&lt;/var&gt; 在 &lt;code&gt;thread-join&lt;/code&gt; 中被阻塞，则返回它正在等待的线程。</target>
        </trans-unit>
        <trans-unit id="5f7bc097b53fcf1da308ff7c97c2dcc898251390" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;thread&lt;/var&gt; is the main thread, the signal is not propagated there. Instead, it is shown as message in the main thread.</source>
          <target state="translated">如果 &lt;var&gt;thread&lt;/var&gt; 是主线程，则信号不会在那里传播。相反，它在主线程中显示为消息。</target>
        </trans-unit>
        <trans-unit id="2587d4a2a4e9483d470c237279298811c9e7a8fc" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;time&lt;/var&gt; has higher precision than nanoseconds, then this function truncates it to nanosecond precision towards negative infinity. This function signals an error if &lt;var&gt;time&lt;/var&gt; (truncated to nanoseconds) cannot be represented by &lt;code&gt;struct timespec&lt;/code&gt;. For example, if &lt;code&gt;time_t&lt;/code&gt; is a 32-bit integer type, then a &lt;var&gt;time&lt;/var&gt; value of ten billion seconds would signal an error, but a &lt;var&gt;time&lt;/var&gt; value of 600 picoseconds would get truncated to zero.</source>
          <target state="translated">如果 &lt;var&gt;time&lt;/var&gt; 精确度高于纳秒，则此功能会将其截断至负无穷大的纳秒精度。如果 &lt;var&gt;time&lt;/var&gt; （截断为纳秒）不能用 &lt;code&gt;struct timespec&lt;/code&gt; 表示，则此函数会发出错误消息。例如，如果 &lt;code&gt;time_t&lt;/code&gt; 是32位整数类型，那么100亿秒的 &lt;var&gt;time&lt;/var&gt; 值将发出错误信号，但是600皮秒的 &lt;var&gt;time&lt;/var&gt; 值将被截断为零。</target>
        </trans-unit>
        <trans-unit id="fbf56cdaf0c7a03f2b2dfc154c9d986d9e169a52" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;time&lt;/var&gt; is infinite or a NaN, this function signals an error. Otherwise, if &lt;var&gt;time&lt;/var&gt; cannot be represented exactly, conversion truncates it toward minus infinity. When &lt;var&gt;form&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, conversion is always exact so no truncation occurs, and the returned clock resolution is no less than that of &lt;var&gt;time&lt;/var&gt;. By way of contrast, &lt;code&gt;float-time&lt;/code&gt; can convert any Lisp time value without signaling an error, although the result might not be exact. See &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;var&gt;time&lt;/var&gt; 是无限的或NaN，则此函数会发出错误信号。否则，如果无法精确表示 &lt;var&gt;time&lt;/var&gt; ，则转换会将其截断为负无穷大。当 &lt;var&gt;form&lt;/var&gt; 为 &lt;code&gt;t&lt;/code&gt; 时，转换始终是精确的，因此不会发生截断，并且返回的时钟分辨率不小于 &lt;var&gt;time&lt;/var&gt; 的分辨率。相比之下， &lt;code&gt;float-time&lt;/code&gt; 可以转换任何Lisp时间值而不会发出错误信号，尽管结果可能不准确。请参阅&lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;时间&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3bf007ce5f322c4636ceb949ca3a999685c3b78c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;time&lt;/var&gt; is neither &lt;code&gt;nil&lt;/code&gt; nor an integer flag returned by &lt;code&gt;visited-file-modtime&lt;/code&gt;, it should be a Lisp time value (see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;).</source>
          <target state="translated">如果 &lt;var&gt;time&lt;/var&gt; 既不是 &lt;code&gt;nil&lt;/code&gt; 也不是 &lt;code&gt;visited-file-modtime&lt;/code&gt; 返回的整数标志，则它应该是Lisp时间值（请参阅&lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="51ed1963d031e695fe67ebb2febf4852eab7b79e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;time&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then this function gives the new file the same last-modified time that the old one has. (This works on only some operating systems.) If setting the time gets an error, &lt;code&gt;copy-file&lt;/code&gt; signals a &lt;code&gt;file-date-error&lt;/code&gt; error. In an interactive call, a prefix argument specifies a non-&lt;code&gt;nil&lt;/code&gt; value for &lt;var&gt;time&lt;/var&gt;.</source>
          <target state="translated">如果 &lt;var&gt;time&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则此函数为新文件提供与旧文件相同的最后修改时间。（这仅在某些操作系统上有效。）如果设置时间出错，则 &lt;code&gt;copy-file&lt;/code&gt; 表示 &lt;code&gt;file-date-error&lt;/code&gt; 错误。在一个交互式通话，前缀参数指定一个非 &lt;code&gt;nil&lt;/code&gt; 的值 &lt;var&gt;time&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="faea1fea326683eb4563aaf16a9ff19b6bc0c76c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;to-column&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be an integer specifying the number of columns of indentation; then this function gives each line exactly that much indentation, by either adding or deleting whitespace.</source>
          <target state="translated">如果 &lt;var&gt;to-column&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则应为整数，指定缩进的列数；否则为0。然后此功能通过添加或删除空格为每行精确缩进。</target>
        </trans-unit>
        <trans-unit id="6f6fa639431eb645cc79363b3a76cb55f7941e29" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;to-fn&lt;/var&gt; is a function, it is called with three arguments: &lt;var&gt;begin&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;, which specify the part of the buffer it should convert, and &lt;var&gt;buffer&lt;/var&gt;, which specifies which buffer. There are two ways it can do the conversion:</source>
          <target state="translated">如果 &lt;var&gt;to-fn&lt;/var&gt; 是一个函数，则使用三个参数调用它： &lt;var&gt;begin&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; ，它们指定应转换的缓冲区的一部分， &lt;var&gt;buffer&lt;/var&gt; ，它指定哪个缓冲区。它可以通过两种方式进行转换：</target>
        </trans-unit>
        <trans-unit id="81fd781d39eec7ea3f46b072e42d9c27a2a64fee" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;to-fn&lt;/var&gt; is a string, it is a shell command; Emacs runs the command as a filter to perform the conversion.</source>
          <target state="translated">如果 &lt;var&gt;to-fn&lt;/var&gt; 是一个字符串，则它是一个shell命令；Emacs将命令作为过滤器运行以执行转换。</target>
        </trans-unit>
        <trans-unit id="e6bfd27da3325d8ff754d2a572396684f54008e8" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;tty&lt;/var&gt; is already suspended, this function does nothing.</source>
          <target state="translated">如果 &lt;var&gt;tty&lt;/var&gt; 已被挂起，则此功能不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="cee74f41416cc96f2a24289ecaaaa869a1e44796" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;tty&lt;/var&gt; specifies a terminal device used by Emacs, this function relinquishes the device and restores it to its prior state. Frames that used the device continue to exist, but are not updated and Emacs doesn&amp;rsquo;t read input from them. &lt;var&gt;tty&lt;/var&gt; can be a terminal object, a frame (meaning the terminal for that frame), or &lt;code&gt;nil&lt;/code&gt; (meaning the terminal for the selected frame). See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;var&gt;tty&lt;/var&gt; 指定了Emacs使用的终端设备，则此函数放弃该设备并将其恢复到其先前状态。使用该设备的框架仍然存在，但不会更新，Emacs不会从中读取输入。 &lt;var&gt;tty&lt;/var&gt; 可以是终端对象，框架（表示该框架的终端）或 &lt;code&gt;nil&lt;/code&gt; （表示所选框架的终端）。请参阅&lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;多个终端&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="866dc9dc6319fc85a323bd658b6535cb79305c35" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;uid&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then it should be a number (a user-id) or a string (a login name). Then &lt;code&gt;user-full-name&lt;/code&gt; returns the full name corresponding to that user-id or login name. If you specify a user-id or login name that isn&amp;rsquo;t defined, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;var&gt;uid&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则它应该是数字（用户ID）或字符串（登录名）。然后， &lt;code&gt;user-full-name&lt;/code&gt; 返回与该用户ID或登录名相对应的全名。如果您指定的用户名或登录名未定义，则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="99a0d9fdada8443612f364827def2de927d53fd2" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;undo&lt;/var&gt; is present and non-&lt;code&gt;nil&lt;/code&gt;, it is a function that will be called by &lt;code&gt;yank-pop&lt;/code&gt; to undo the insertion of the current object. It is called with two arguments, the start and end of the current region. &lt;var&gt;function&lt;/var&gt; can set &lt;code&gt;yank-undo-function&lt;/code&gt; to override the &lt;var&gt;undo&lt;/var&gt; value.</source>
          <target state="translated">如果存在 &lt;var&gt;undo&lt;/var&gt; 而不是 &lt;code&gt;nil&lt;/code&gt; ，则此函数将被 &lt;code&gt;yank-pop&lt;/code&gt; 调用以撤消当前对象的插入。它用两个参数调用，即当前区域的开始和结束。 &lt;var&gt;function&lt;/var&gt; 可以设置 &lt;code&gt;yank-undo-function&lt;/code&gt; 来覆盖 &lt;var&gt;undo&lt;/var&gt; 值。</target>
        </trans-unit>
        <trans-unit id="c7fa8e08868183dc2249f0e3555b97870b32e09c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;update&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;window-end&lt;/code&gt; always returns an up-to-date value for where display ends, based on the current &lt;code&gt;window-start&lt;/code&gt; value. If a previously saved value of that position is still valid, &lt;code&gt;window-end&lt;/code&gt; returns that value; otherwise it computes the correct value by scanning the buffer text.</source>
          <target state="translated">如果 &lt;var&gt;update&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;window-end&lt;/code&gt; 始终根据当前 &lt;code&gt;window-start&lt;/code&gt; 值返回显示结束的最新值。如果先前保存的该位置的值仍然有效，则 &lt;code&gt;window-end&lt;/code&gt; 返回该值；否则，返回0。否则，它将通过扫描缓冲区文本来计算正确的值。</target>
        </trans-unit>
        <trans-unit id="83f961012b906889ca57a51ce9b30370f12471fe" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;use-external-socket&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; use any sockets passed to Emacs on invocation instead of allocating one. This is used by the Emacs server code to allow on-demand socket activation. If Emacs wasn&amp;rsquo;t passed a socket, this option is silently ignored.</source>
          <target state="translated">如果 &lt;var&gt;use-external-socket&lt;/var&gt; 是不 &lt;code&gt;nil&lt;/code&gt; 时使用传递给Emacs的上调用，而不是分配一个任意插座。Emacs服务器代码使用它来允许按需套接字激活。如果Emacs没有传递套接字，则此选项将被忽略。</target>
        </trans-unit>
        <trans-unit id="6a7c7b9022969765745e412569e605585ab060b3" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;value1&lt;/var&gt; is a relative value for the face attribute &lt;var&gt;attribute&lt;/var&gt;, returns it merged with the underlying value &lt;var&gt;value2&lt;/var&gt;; otherwise, if &lt;var&gt;value1&lt;/var&gt; is an absolute value for the face attribute &lt;var&gt;attribute&lt;/var&gt;, returns &lt;var&gt;value1&lt;/var&gt; unchanged.</source>
          <target state="translated">如果 &lt;var&gt;value1&lt;/var&gt; 是face属性 &lt;var&gt;attribute&lt;/var&gt; 的相对值，则返回与基础值 &lt;var&gt;value2&lt;/var&gt; 合并的值; 否则，如果 &lt;var&gt;value1&lt;/var&gt; 是face属性 &lt;var&gt;attribute&lt;/var&gt; 的绝对值，则返回 &lt;var&gt;value1&lt;/var&gt; 不变。</target>
        </trans-unit>
        <trans-unit id="1501c691e888db9ec6ebe0af2b4f6a762c79934d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;value&lt;/var&gt; is specified, and &lt;var&gt;symbol&lt;/var&gt; is void (i.e., it has no dynamically bound value; see &lt;a href=&quot;void-variables#Void-Variables&quot;&gt;Void Variables&lt;/a&gt;), then &lt;var&gt;value&lt;/var&gt; is evaluated and &lt;var&gt;symbol&lt;/var&gt; is set to the result. But if &lt;var&gt;symbol&lt;/var&gt; is not void, &lt;var&gt;value&lt;/var&gt; is not evaluated, and &lt;var&gt;symbol&lt;/var&gt;&amp;rsquo;s value is left unchanged. If &lt;var&gt;value&lt;/var&gt; is omitted, the value of &lt;var&gt;symbol&lt;/var&gt; is not changed in any case.</source>
          <target state="translated">如果指定了 &lt;var&gt;value&lt;/var&gt; ，并且 &lt;var&gt;symbol&lt;/var&gt; 为void（即，它没有动态绑定的值；请参见&lt;a href=&quot;void-variables#Void-Variables&quot;&gt;Void Variables&lt;/a&gt;），则将 &lt;var&gt;value&lt;/var&gt; 并将 &lt;var&gt;symbol&lt;/var&gt; 设置为结果。但是，如果 &lt;var&gt;symbol&lt;/var&gt; 是不是无效的， &lt;var&gt;value&lt;/var&gt; 不评价， &lt;var&gt;symbol&lt;/var&gt; 的价值保持不变。如果 &lt;var&gt;value&lt;/var&gt; 被省略，的值 &lt;var&gt;symbol&lt;/var&gt; 在任何情况下也不会改变。</target>
        </trans-unit>
        <trans-unit id="081b95c700fe775f26956ab6db394efc7894ffdb" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;var&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, that means no variable is bound. Then the error symbol and associated data are not available to the handler.</source>
          <target state="translated">如果 &lt;var&gt;var&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则表示没有变量绑定。然后，错误符号和关联的数据对处理程序不可用。</target>
        </trans-unit>
        <trans-unit id="6cf26c5d8c1fc1e03f7659c51c2167b19849253e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;variable&lt;/var&gt; does not have a default value, then calling this command will give it a default value of &lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;variable&lt;/var&gt; already has a default value, that value remains unchanged. Subsequently calling &lt;code&gt;makunbound&lt;/code&gt; on &lt;var&gt;variable&lt;/var&gt; will result in a void buffer-local value and leave the default value unaffected.</source>
          <target state="translated">如果 &lt;var&gt;variable&lt;/var&gt; 没有默认值，则调用此命令将为其赋予默认值 &lt;code&gt;nil&lt;/code&gt; 。如果 &lt;var&gt;variable&lt;/var&gt; 已经具有默认值，则该值保持不变。随后在 &lt;var&gt;variable&lt;/var&gt; 上调用 &lt;code&gt;makunbound&lt;/code&gt; 会导致无效的缓冲区局部值，并且使默认值不受影响。</target>
        </trans-unit>
        <trans-unit id="9680817196d72f27e9d13cbb6b1d48bfec334e08" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;visible-ok&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;other-buffer&lt;/code&gt; avoids returning a buffer visible in any window on any visible frame, except as a last resort. If &lt;var&gt;visible-ok&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then it does not matter whether a buffer is displayed somewhere or not.</source>
          <target state="translated">如果 &lt;var&gt;visible-ok&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;other-buffer&lt;/code&gt; 避免返回在任何可见帧的任何窗口中可见的缓冲区，除非万不得已。如果 &lt;var&gt;visible-ok&lt;/var&gt; 不为 &lt;code&gt;nil&lt;/code&gt; ，则缓冲区是否显示在任何地方都没有关系。</target>
        </trans-unit>
        <trans-unit id="6f11bdf42f1d530cd96bae1b60625343f5524e02" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;visit&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, then Emacs establishes an association between the buffer and the file: the buffer is then visiting that file. It also sets the last file modification time for the current buffer to &lt;var&gt;filename&lt;/var&gt;&amp;rsquo;s modtime, and marks the buffer as not modified. This feature is used by &lt;code&gt;save-buffer&lt;/code&gt;, but you probably should not use it yourself.</source>
          <target state="translated">如果 &lt;var&gt;visit&lt;/var&gt; 为 &lt;code&gt;t&lt;/code&gt; ，那么Emacs将在缓冲区和文件之间建立关联：然后缓冲区正在访问该文件。还将当前缓冲区的最后文件修改时间设置为文件 &lt;var&gt;filename&lt;/var&gt; 的modtime，并将缓冲区标记为未修改。 &lt;code&gt;save-buffer&lt;/code&gt; 使用此功能，但您可能不应该自己使用它。</target>
        </trans-unit>
        <trans-unit id="246e4d1c6e6afb943ca327caf9e64f83136f20aa" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;visit&lt;/var&gt; is a string, it specifies the file name to visit. This way, you can write the data to one file (&lt;var&gt;filename&lt;/var&gt;) while recording the buffer as visiting another file (&lt;var&gt;visit&lt;/var&gt;). The argument &lt;var&gt;visit&lt;/var&gt; is used in the echo area message and also for file locking; &lt;var&gt;visit&lt;/var&gt; is stored in &lt;code&gt;buffer-file-name&lt;/code&gt;. This feature is used to implement &lt;code&gt;file-precious-flag&lt;/code&gt;; don&amp;rsquo;t use it yourself unless you really know what you&amp;rsquo;re doing.</source>
          <target state="translated">如果 &lt;var&gt;visit&lt;/var&gt; 是一个字符串，则它指定要访问的文件名。这样，您可以在将缓冲区记录为访问另一个文件（ &lt;var&gt;visit&lt;/var&gt; ）的同时将数据写入一个文件（ &lt;var&gt;filename&lt;/var&gt; ）。参数 &lt;var&gt;visit&lt;/var&gt; 用于回显区域消息中，也用于文件锁定。 &lt;var&gt;visit&lt;/var&gt; 存储在 &lt;code&gt;buffer-file-name&lt;/code&gt; 中。此功能用于实现 &lt;code&gt;file-precious-flag&lt;/code&gt; ；除非您真的知道自己在做什么，否则请不要自己使用它。</target>
        </trans-unit>
        <trans-unit id="6b4a4b3a70e1e0d0b1f3aa6c9e23277f30082674" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;visit&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function additionally marks the buffer as unmodified and sets up various fields in the buffer so that it is visiting the file &lt;var&gt;filename&lt;/var&gt;: these include the buffer&amp;rsquo;s visited file name and its last save file modtime. This feature is used by &lt;code&gt;find-file-noselect&lt;/code&gt; and you probably should not use it yourself.</source>
          <target state="translated">如果 &lt;var&gt;visit&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则此函数还会将缓冲区标记为未修改，并在缓冲区中设置各个字段，以便其访问文件 &lt;var&gt;filename&lt;/var&gt; ：这些文件包括缓冲区的访问文件名及其最后保存的文件modtime。该功能由 &lt;code&gt;find-file-noselect&lt;/code&gt; 使用，您可能不应该自己使用它。</target>
        </trans-unit>
        <trans-unit id="ec5dbce89952423fb67e0972aa3a58ef96e350a3" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;warn&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then this function issues a warning if an auto-save file exists and is more recent than the visited file.</source>
          <target state="translated">如果 &lt;var&gt;warn&lt;/var&gt; 不为 &lt;code&gt;nil&lt;/code&gt; ，则此功能会在存在自动保存的文件且该文件比访问的文件更新的情况下发出警告。</target>
        </trans-unit>
        <trans-unit id="b46d4acb4cf7b9dce319e3d320c437f4387c6047" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;weak&lt;/var&gt; is &lt;code&gt;key-and-value&lt;/code&gt; or &lt;code&gt;t&lt;/code&gt;, both the key and the value must be live in order to preserve the association. Thus, the hash table does not protect either keys or values from garbage collection; if either one is collected as garbage, that removes the association.</source>
          <target state="translated">如果 &lt;var&gt;weak&lt;/var&gt; 是 &lt;code&gt;key-and-value&lt;/code&gt; 或 &lt;code&gt;t&lt;/code&gt; ，则键和值都必须同时存在才能保留关联。因此，哈希表不能保护键或值免受垃圾回收；如果其中任何一个被收集为垃圾，则删除该关联。</target>
        </trans-unit>
        <trans-unit id="bc5451feb70a80d59c655a33edf898614731b08d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;weak&lt;/var&gt; is &lt;code&gt;key-or-value&lt;/code&gt;, either the key or the value can preserve the association. Thus, associations are removed from the hash table when both their key and value would be collected as garbage (if not for references from weak hash tables).</source>
          <target state="translated">如果 &lt;var&gt;weak&lt;/var&gt; 是 &lt;code&gt;key-or-value&lt;/code&gt; ，则键或值可以保留关联。因此，当关联的键和值都将作为垃圾收集时（如果不是来自弱哈希表的引用），会将关联从哈希表中删除。</target>
        </trans-unit>
        <trans-unit id="ae9e60e0603a0552eb11d49586c0ad595cdd8b54" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;weak&lt;/var&gt; is &lt;code&gt;value&lt;/code&gt;, then the hash table does not prevent values from being collected as garbage (if they are not referenced anywhere else); if a particular value does get collected, the corresponding association is removed from the hash table.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是 &lt;var&gt;weak&lt;/var&gt; ，则哈希表不会阻止将值收集为垃圾（如果未在其他任何地方引用它们）；如果确实收集到特定值，则从哈希表中删除相应的关联。</target>
        </trans-unit>
        <trans-unit id="62cef1d954d6fb85b755e1ce780adbcbe0be9175" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;width&lt;/var&gt; is a number, it specifies that the space width should be &lt;var&gt;width&lt;/var&gt; times the normal character width. &lt;var&gt;width&lt;/var&gt; can also be a &lt;em&gt;pixel width&lt;/em&gt; specification (see &lt;a href=&quot;pixel-specification#Pixel-Specification&quot;&gt;Pixel Specification&lt;/a&gt;).</source>
          <target state="translated">如果 &lt;var&gt;width&lt;/var&gt; 是一个数字，则它指定空格宽度应为 &lt;var&gt;width&lt;/var&gt; 乘以正常字符宽度。 &lt;var&gt;width&lt;/var&gt; 也可以是&lt;em&gt;像素宽度&lt;/em&gt;规范（请参见&lt;a href=&quot;pixel-specification#Pixel-Specification&quot;&gt;Pixel Specification&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="2a0f880b17579fea02ad371d9abc1dc449748a52" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;wildcards&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, which is always true in an interactive call, then &lt;code&gt;find-file&lt;/code&gt; expands wildcard characters in &lt;var&gt;filename&lt;/var&gt; and visits all the matching files.</source>
          <target state="translated">如果 &lt;var&gt;wildcards&lt;/var&gt; 为non- &lt;code&gt;nil&lt;/code&gt; ，这在交互式调用中始终为true，则 &lt;code&gt;find-file&lt;/code&gt; 会扩展 &lt;var&gt;filename&lt;/var&gt; 中的通配符，并访问所有匹配的文件。</target>
        </trans-unit>
        <trans-unit id="07a4e63abbb85f3d495187a672b77ef3d46bf086" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;window&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window.</source>
          <target state="translated">如果 &lt;var&gt;window&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则默认为所选窗口。</target>
        </trans-unit>
        <trans-unit id="3b0662b3c0b907db7784baf8422c8523260adbe7" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;window&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window. If the window cannot be resized as demanded, an error is signaled.</source>
          <target state="translated">如果 &lt;var&gt;window&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则默认为所选窗口。如果无法按要求调整窗口大小，则会发出错误信号。</target>
        </trans-unit>
        <trans-unit id="73895410117091f2036192e72faa26f5ae8a3696" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;window&lt;/var&gt; is &lt;em&gt;strongly dedicated&lt;/em&gt; to a buffer and &lt;var&gt;buffer-or-name&lt;/var&gt; does not specify that buffer, this function signals an error. See &lt;a href=&quot;dedicated-windows#Dedicated-Windows&quot;&gt;Dedicated Windows&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;var&gt;window&lt;/var&gt; 被&lt;em&gt;强烈专用&lt;/em&gt;缓冲器并 &lt;var&gt;buffer-or-name&lt;/var&gt; 不指定缓冲区，这个函数发出错误信号。请参阅&lt;a href=&quot;dedicated-windows#Dedicated-Windows&quot;&gt;专用Windows&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="87cda5d75535ddbcabe4ce91eae66bc6b587dc3b" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;window&lt;/var&gt; is a live window, the new window inherits various properties from it, including margins and scroll bars. If &lt;var&gt;window&lt;/var&gt; is an internal window, the new window inherits the properties of the window selected within &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s frame.</source>
          <target state="translated">如果 &lt;var&gt;window&lt;/var&gt; 是活动窗口，则新窗口会从中继承各种属性，包括边距和滚动条。如果 &lt;var&gt;window&lt;/var&gt; 是内部窗口，则新窗口将继承在 &lt;var&gt;window&lt;/var&gt; 框架内选择的窗口的属性。</target>
        </trans-unit>
        <trans-unit id="a7fd3640aa79ae6b142869e1fb11e2f5db2b31c5" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;window&lt;/var&gt; is not large enough to accommodate a scroll bar of the desired dimension, this leaves the corresponding scroll bar unchanged.</source>
          <target state="translated">如果 &lt;var&gt;window&lt;/var&gt; 的大小不足以容纳所需尺寸的滚动条，则相应的滚动条将保持不变。</target>
        </trans-unit>
        <trans-unit id="ddd6d6ca0b31575b80b1be34d6d03c61b740c27d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;window&lt;/var&gt; is not large enough to accommodate fringes of the desired width, this leaves the fringes of &lt;var&gt;window&lt;/var&gt; unchanged.</source>
          <target state="translated">如果 &lt;var&gt;window&lt;/var&gt; 的大小不足以容纳所需宽度的条纹，则 &lt;var&gt;window&lt;/var&gt; 的条纹将保持不变。</target>
        </trans-unit>
        <trans-unit id="c7d26a822d67cd3b20eb23d2c8d5237b866ae162" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;window&lt;/var&gt; is not large enough to accommodate margins of the desired width, this leaves the margins of &lt;var&gt;window&lt;/var&gt; unchanged.</source>
          <target state="translated">如果 &lt;var&gt;window&lt;/var&gt; 的大小不足以容纳所需宽度的边距，则 &lt;var&gt;window&lt;/var&gt; 的边距将保持不变。</target>
        </trans-unit>
        <trans-unit id="cbd6e55f0d32133d423f36ec54beceef4df93dda" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;window&lt;/var&gt; is part of a horizontal combination and the value of the option &lt;code&gt;fit-window-to-buffer-horizontally&lt;/code&gt; (see below) is non-&lt;code&gt;nil&lt;/code&gt;, this function adjusts &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s width. The new width of &lt;var&gt;window&lt;/var&gt; is calculated from the maximum length of its buffer&amp;rsquo;s lines that follow the current start position of &lt;var&gt;window&lt;/var&gt;. The optional argument &lt;var&gt;max-width&lt;/var&gt; specifies a maximum width and defaults to the width of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s frame. The optional argument &lt;var&gt;min-width&lt;/var&gt; specifies a minimum width and defaults to &lt;code&gt;window-min-width&lt;/code&gt;. Both &lt;var&gt;max-width&lt;/var&gt; and &lt;var&gt;min-width&lt;/var&gt; are specified in columns and include fringes, margins and scrollbars, if any.</source>
          <target state="translated">如果 &lt;var&gt;window&lt;/var&gt; 是水平组合的一部分，并且水平 &lt;code&gt;fit-window-to-buffer-horizontally&lt;/code&gt; 于fit-window-to-buffer的选项的值（请参见下文）为 &lt;code&gt;nil&lt;/code&gt; ，则此功能会调整 &lt;var&gt;window&lt;/var&gt; 的宽度。 &lt;var&gt;window&lt;/var&gt; 的新宽度是根据其缓冲区的当前 &lt;var&gt;window&lt;/var&gt; 起始位置的最大长度来计算的。可选参数 &lt;var&gt;max-width&lt;/var&gt; 指定最大宽度，默认为 &lt;var&gt;window&lt;/var&gt; 框架的宽度。可选参数 &lt;var&gt;min-width&lt;/var&gt; 指定最小宽度，默认为 &lt;code&gt;window-min-width&lt;/code&gt; 。二者 &lt;var&gt;max-width&lt;/var&gt; 和 &lt;var&gt;min-width&lt;/var&gt; 在列中指定，并包括边缘，边距和滚动条（如果有）。</target>
        </trans-unit>
        <trans-unit id="dd4030d09853d72a6ad706951a4c09bc51fe8c7e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;window&lt;/var&gt; is part of a vertical combination, this function adjusts &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s height. The new height is calculated from the actual height of the accessible portion of its buffer. The optional argument &lt;var&gt;max-height&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, specifies the maximum total height that this function can give &lt;var&gt;window&lt;/var&gt;. The optional argument &lt;var&gt;min-height&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, specifies the minimum total height that it can give, which overrides the variable &lt;code&gt;window-min-height&lt;/code&gt;. Both &lt;var&gt;max-height&lt;/var&gt; and &lt;var&gt;min-height&lt;/var&gt; are specified in lines and include mode and header line and a bottom divider, if any.</source>
          <target state="translated">如果 &lt;var&gt;window&lt;/var&gt; 是垂直组合的一部分，则此功能会调整 &lt;var&gt;window&lt;/var&gt; 的高度。新高度是根据其缓冲区可访问部分的实际高度计算得出的。可选参数 &lt;var&gt;max-height&lt;/var&gt; （如果非 &lt;code&gt;nil&lt;/code&gt; ）指定此函数可以赋予 &lt;var&gt;window&lt;/var&gt; 的最大总高度。可选参数 &lt;var&gt;min-height&lt;/var&gt; ，如果不是 &lt;code&gt;nil&lt;/code&gt; ，则指定它可以给出的最小总高度，该高度将覆盖变量 &lt;code&gt;window-min-height&lt;/code&gt; 。二者 &lt;var&gt;max-height&lt;/var&gt; 和 &lt;var&gt;min-height&lt;/var&gt; 在线被指定，并且包括模式和标题行和底分频器，如果有的话。</target>
        </trans-unit>
        <trans-unit id="2a4770ab34ce275d090f2c3f83f1fdd06899dedc" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;window&lt;/var&gt; is selected, this simply does &lt;code&gt;goto-char&lt;/code&gt; in &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s buffer.</source>
          <target state="translated">如果选择 &lt;var&gt;window&lt;/var&gt; ，则只会在 &lt;var&gt;window&lt;/var&gt; 的缓冲区中执行 &lt;code&gt;goto-char&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7b1f3819de02532b271f42167ead365a3b2a4b01" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;window&lt;/var&gt; shall be deleted, is the only window on its frame and there are other frames on that frame&amp;rsquo;s terminal, the value of the optional argument &lt;var&gt;bury-or-kill&lt;/var&gt; determines how to proceed with the window. If &lt;var&gt;bury-or-kill&lt;/var&gt; equals &lt;code&gt;kill&lt;/code&gt;, the frame is deleted unconditionally. Otherwise, the fate of the frame is determined by calling &lt;code&gt;frame-auto-hide-function&lt;/code&gt; (see below) with that frame as sole argument.</source>
          <target state="translated">如果 &lt;var&gt;window&lt;/var&gt; 将被删除，这是该窗口框架上的唯一窗口，并且该窗口终端上还有其他框架，则可选参数 &lt;var&gt;bury-or-kill&lt;/var&gt; 的值确定如何继续该窗口。如果 &lt;var&gt;bury-or-kill&lt;/var&gt; 等于 &lt;code&gt;kill&lt;/code&gt; ，则无条件删除帧。否则，通过以该框架作为唯一参数调用 &lt;code&gt;frame-auto-hide-function&lt;/code&gt; （参见下文）来确定框架的命运。</target>
        </trans-unit>
        <trans-unit id="b4a6963591d62872fac299ee519da1185778699d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;x&lt;/var&gt; is finite, then &lt;var&gt;s&lt;/var&gt; is a floating-point number between 0.5 (inclusive) and 1.0 (exclusive), &lt;var&gt;e&lt;/var&gt; is an integer, and &lt;var&gt;x&lt;/var&gt; = &lt;var&gt;s&lt;/var&gt; * 2**&lt;var&gt;e&lt;/var&gt;. If &lt;var&gt;x&lt;/var&gt; is zero or infinity, then &lt;var&gt;s&lt;/var&gt; is the same as &lt;var&gt;x&lt;/var&gt;. If &lt;var&gt;x&lt;/var&gt; is a NaN, then &lt;var&gt;s&lt;/var&gt; is also a NaN. If &lt;var&gt;x&lt;/var&gt; is zero, then &lt;var&gt;e&lt;/var&gt; is 0.</source>
          <target state="translated">如果 &lt;var&gt;x&lt;/var&gt; 是有限的，则 &lt;var&gt;s&lt;/var&gt; 是介于0.5（含）和1.0（不含）之间的浮点数， &lt;var&gt;e&lt;/var&gt; 是整数，并且 &lt;var&gt;x&lt;/var&gt; = &lt;var&gt;s&lt;/var&gt; * 2 ** &lt;var&gt;e&lt;/var&gt; 。如果 &lt;var&gt;x&lt;/var&gt; 为零或无穷大，则 &lt;var&gt;s&lt;/var&gt; 与 &lt;var&gt;x&lt;/var&gt; 相同。如果 &lt;var&gt;x&lt;/var&gt; 是NaN，则 &lt;var&gt;s&lt;/var&gt; 也是NaN。如果 &lt;var&gt;x&lt;/var&gt; 为零，则 &lt;var&gt;e&lt;/var&gt; 为0。</target>
        </trans-unit>
        <trans-unit id="447e7b65c8b11485cc215c5eb0d80eeaf6769f7b" translate="yes" xml:space="preserve">
          <source>If ACLs are not supported or the file does not exist, then the return value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果不支持ACL或文件不存在，则返回值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f5c1fbb91a50e63cb0b76b1c5d578b1789a7a55a" translate="yes" xml:space="preserve">
          <source>If Auto Compression mode is enabled, as it is by default, then if &lt;code&gt;load&lt;/code&gt; can not find a file, it searches for a compressed version of the file before trying other file names. It decompresses and loads it if it exists. It looks for compressed versions by appending each of the suffixes in &lt;code&gt;jka-compr-load-suffixes&lt;/code&gt; to the file name. The value of this variable must be a list of strings. Its standard value is &lt;code&gt;(&quot;.gz&quot;)&lt;/code&gt;.</source>
          <target state="translated">如果启用了&amp;ldquo;自动压缩&amp;rdquo;模式（默认情况下为默认模式），则如果 &lt;code&gt;load&lt;/code&gt; 找不到文件，它将在尝试其他文件名之前搜索文件的压缩版本。它解压缩并加载它（如果存在）。它通过将 &lt;code&gt;jka-compr-load-suffixes&lt;/code&gt; 中的每个后缀附加到文件名来查找压缩版本。此变量的值必须是字符串列表。其标准值为 &lt;code&gt;(&quot;.gz&quot;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="19e54c962f7dd79e1fc7867f5e3102aa865a73ca" translate="yes" xml:space="preserve">
          <source>If Edebug detects a syntax error while instrumenting, it leaves point at the erroneous code and signals an &lt;code&gt;invalid-read-syntax&lt;/code&gt; error. Example:</source>
          <target state="translated">如果Edebug在检测过程中检测到语法错误，它将指向错误代码，并发出 &lt;code&gt;invalid-read-syntax&lt;/code&gt; 错误信号。例：</target>
        </trans-unit>
        <trans-unit id="3be47050736fff885a6116b32ea1daa64351b7ed" translate="yes" xml:space="preserve">
          <source>If Emacs exits due to signaling an error in batch mode, the exit status of the Emacs command is non-zero:</source>
          <target state="translated">如果Emacs因在批处理模式下发出错误信号而退出,Emacs命令的退出状态是非零。</target>
        </trans-unit>
        <trans-unit id="e67a7deab72fd9417551a81812eaf2e9f7e5f914" translate="yes" xml:space="preserve">
          <source>If Emacs is built with GTK+ or Nextstep, the tool bar can only show one line, so this variable has no effect.</source>
          <target state="translated">如果Emacs是用GTK+或Nextstep构建的,工具栏只能显示一行,所以这个变量没有影响。</target>
        </trans-unit>
        <trans-unit id="d56940dc3553b8f69d6b8d13681d9f5a7c74b029" translate="yes" xml:space="preserve">
          <source>If Emacs is idle, this function returns the length of time Emacs has been idle, using the same format as &lt;code&gt;current-time&lt;/code&gt; (see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;).</source>
          <target state="translated">如果Emacs空闲，则此函数使用与 &lt;code&gt;current-time&lt;/code&gt; 相同的格式返回Emacs空闲的时间长度（请参阅&lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="ec4add1da37cdefc247326ddd0e133ce9fba3efb" translate="yes" xml:space="preserve">
          <source>If SELinux is not supported or the file does not exist, then the return value is &lt;code&gt;(nil nil nil nil)&lt;/code&gt;.</source>
          <target state="translated">如果不支持SELinux或文件不存在，则返回值为 &lt;code&gt;(nil nil nil nil)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ab14e08663cfa91c3db576b804543ef8f8a279b3" translate="yes" xml:space="preserve">
          <source>If Transient Mark mode is enabled or &lt;var&gt;force&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function deactivates the mark and runs the normal hook &lt;code&gt;deactivate-mark-hook&lt;/code&gt;. Otherwise, it does nothing.</source>
          <target state="translated">如果启用瞬态标记模式或 &lt;var&gt;force&lt;/var&gt; 是不 &lt;code&gt;nil&lt;/code&gt; ，该功能停用标志并运行正常钩 &lt;code&gt;deactivate-mark-hook&lt;/code&gt; 。否则，它什么都不做。</target>
        </trans-unit>
        <trans-unit id="07d7f05b9ae25ab88e359a5dc53a4252b71ffe70" translate="yes" xml:space="preserve">
          <source>If Transient Mark mode is enabled, and &lt;code&gt;mark-even-if-inactive&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;mark&lt;/code&gt; signals an error if the mark is inactive. However, if &lt;var&gt;force&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;mark&lt;/code&gt; disregards inactivity of the mark, and returns the mark position (or &lt;code&gt;nil&lt;/code&gt;) anyway.</source>
          <target state="translated">如果启用了&amp;ldquo;临时标记&amp;rdquo;模式，并且 &lt;code&gt;mark-even-if-inactive&lt;/code&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则如果标记未激活，则 &lt;code&gt;mark&lt;/code&gt; 发出错误信号。但是，如果 &lt;var&gt;force&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;mark&lt;/code&gt; 忽略标记的不活动状态，并且无论如何返回标记位置（或 &lt;code&gt;nil&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="4a86e0d976aa7cf58f838e55f71256266064bf71" translate="yes" xml:space="preserve">
          <source>If Transient Mark mode is enabled, certain editing commands that normally apply to text near point, apply instead to the region when the mark is active. This is the main motivation for using Transient Mark mode. (Another is that this enables highlighting of the region when the mark is active. See &lt;a href=&quot;display#Display&quot;&gt;Display&lt;/a&gt;.)</source>
          <target state="translated">如果启用了&amp;ldquo;临时标记&amp;rdquo;模式，则通常会在标记处于活动状态时将某些通常应用于点附近文本的编辑命令应用于区域。这是使用瞬变标记模式的主要动机。（另一个是当标记处于活动状态时，这可以突出显示该区域。请参见&lt;a href=&quot;display#Display&quot;&gt;显示&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="8605a51e352c5b5f1ad525364c97c770197a7dee" translate="yes" xml:space="preserve">
          <source>If a &amp;lsquo;</source>
          <target state="translated">如果一个 '</target>
        </trans-unit>
        <trans-unit id="f143509ca8ee59240acfff6197c41217c9159e0c" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;defcustom&lt;/code&gt; does not specify any &lt;code&gt;:group&lt;/code&gt;, the last group defined with &lt;code&gt;defgroup&lt;/code&gt; in the same file will be used. This way, most &lt;code&gt;defcustom&lt;/code&gt; do not need an explicit &lt;code&gt;:group&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;defcustom&lt;/code&gt; 未指定任何 &lt;code&gt;:group&lt;/code&gt; ，则将使用同一文件中由 &lt;code&gt;defgroup&lt;/code&gt; 定义的最后一个组。这样，大多数 &lt;code&gt;defcustom&lt;/code&gt; 不需要显式的 &lt;code&gt;:group&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0130db0b8b3db08d4951e056fcfc2b5ec763ea50" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;throw&lt;/code&gt; is executed during the execution of &lt;var&gt;body&lt;/var&gt;, specifying the same value &lt;var&gt;tag&lt;/var&gt;, the &lt;code&gt;catch&lt;/code&gt; form exits immediately; the value it returns is whatever was specified as the second argument of &lt;code&gt;throw&lt;/code&gt;.</source>
          <target state="translated">如果在 &lt;var&gt;body&lt;/var&gt; 执行过程中执行了 &lt;code&gt;throw&lt;/code&gt; 并指定了相同的value &lt;var&gt;tag&lt;/var&gt; ，则 &lt;code&gt;catch&lt;/code&gt; 表单立即退出；它返回的值是指定为 &lt;code&gt;throw&lt;/code&gt; 第二个参数的值。</target>
        </trans-unit>
        <trans-unit id="0706edfed7e00cc4d42f94bdd4da4bee79e492ca" translate="yes" xml:space="preserve">
          <source>If a &lt;var&gt;symbol&lt;/var&gt; is not buffer-local for the current buffer, and is not marked automatically buffer-local, &lt;code&gt;setq-default&lt;/code&gt; has the same effect as &lt;code&gt;setq&lt;/code&gt;. If &lt;var&gt;symbol&lt;/var&gt; is buffer-local for the current buffer, then this changes the value that other buffers will see (as long as they don&amp;rsquo;t have a buffer-local value), but not the value that the current buffer sees.</source>
          <target state="translated">如果 &lt;var&gt;symbol&lt;/var&gt; 不是当前缓冲区的本地缓冲区，并且没有自动标记为本地缓冲区，则 &lt;code&gt;setq-default&lt;/code&gt; 与 &lt;code&gt;setq&lt;/code&gt; 的作用相同。如果 &lt;var&gt;symbol&lt;/var&gt; 是当前缓冲区的本地缓冲区，那么这将更改其他缓冲区将看到的值（只要它们没有缓冲区本地值），但不会更改当前缓冲区看到的值。</target>
        </trans-unit>
        <trans-unit id="6d09d11f96853cfc9168b5bb65e4e288953cb8a6" translate="yes" xml:space="preserve">
          <source>If a &lt;var&gt;tag&lt;/var&gt; has the form &lt;code&gt;(eval &lt;var&gt;expr&lt;/var&gt;)&lt;/code&gt;, evaluate &lt;var&gt;expr&lt;/var&gt; with the variable &lt;code&gt;tag&lt;/code&gt; dynamically bound to the value of &lt;var&gt;form&lt;/var&gt;. A non-&lt;code&gt;nil&lt;/code&gt; result indicates a match.</source>
          <target state="translated">如果 &lt;var&gt;tag&lt;/var&gt; 的格式为 &lt;code&gt;(eval &lt;var&gt;expr&lt;/var&gt;)&lt;/code&gt; ，则使用动态绑定到 &lt;var&gt;form&lt;/var&gt; 值的变量 &lt;code&gt;tag&lt;/code&gt; 评估 &lt;var&gt;expr&lt;/var&gt; 。阿非 &lt;code&gt;nil&lt;/code&gt; 结果表示一致。</target>
        </trans-unit>
        <trans-unit id="d64f9083808f39165ea317967b062c0b1c2aa875" translate="yes" xml:space="preserve">
          <source>If a backtrace frame starts with &amp;lsquo;</source>
          <target state="translated">如果回溯帧以&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="2bc2b27e155784dc9a258adf0bf0a8d412c0d63d" translate="yes" xml:space="preserve">
          <source>If a backup was made by renaming, the return value is a cons cell of the form (&lt;var&gt;modes&lt;/var&gt;&lt;var&gt;extra-alist&lt;/var&gt;&lt;var&gt;backupname&lt;/var&gt;), where &lt;var&gt;modes&lt;/var&gt; are the mode bits of the original file, as returned by &lt;code&gt;file-modes&lt;/code&gt; (see &lt;a href=&quot;testing-accessibility#Testing-Accessibility&quot;&gt;Testing Accessibility&lt;/a&gt;), &lt;var&gt;extra-alist&lt;/var&gt; is an alist describing the original file&amp;rsquo;s extended attributes, as returned by &lt;code&gt;file-extended-attributes&lt;/code&gt; (see &lt;a href=&quot;extended-attributes#Extended-Attributes&quot;&gt;Extended Attributes&lt;/a&gt;), and &lt;var&gt;backupname&lt;/var&gt; is the name of the backup.</source>
          <target state="translated">如果备份是通过重命名发，返回值的形式（的利弊细胞 &lt;var&gt;modes&lt;/var&gt; &lt;var&gt;extra-alist&lt;/var&gt; &lt;var&gt;backupname&lt;/var&gt; ），其中 &lt;var&gt;modes&lt;/var&gt; 是原始文件的模式位，被返回的 &lt;code&gt;file-modes&lt;/code&gt; （见&lt;a href=&quot;testing-accessibility#Testing-Accessibility&quot;&gt;测试辅助功能&lt;/a&gt;）， &lt;var&gt;extra-alist&lt;/var&gt; 是一个列表，用于描述原始文件的扩展属性，该扩展属性由 &lt;code&gt;file-extended-attributes&lt;/code&gt; 返回（请参见&lt;a href=&quot;extended-attributes#Extended-Attributes&quot;&gt;Extended Attributes&lt;/a&gt;），并且 &lt;var&gt;backupname&lt;/var&gt; 是备份的名称。</target>
        </trans-unit>
        <trans-unit id="2c88897a720af47e907771ae913e7fc5603c0e89" translate="yes" xml:space="preserve">
          <source>If a buffer is &lt;em&gt;read-only&lt;/em&gt;, then you cannot change its contents, although you may change your view of the contents by scrolling and narrowing.</source>
          <target state="translated">如果缓冲区是&lt;em&gt;只读的&lt;/em&gt;，则尽管可以通过滚动和缩小来更改内容视图，但是不能更改其内容。</target>
        </trans-unit>
        <trans-unit id="c470f9c5e67a1af9ac52b8a461ba9c4467bb7077" translate="yes" xml:space="preserve">
          <source>If a character has a &lt;code&gt;category&lt;/code&gt; property, we call it the &lt;em&gt;property category&lt;/em&gt; of the character. It should be a symbol. The properties of the symbol serve as defaults for the properties of the character.</source>
          <target state="translated">如果角色具有 &lt;code&gt;category&lt;/code&gt; 属性，我们将其称为角色的&lt;em&gt;属性类别&lt;/em&gt;。它应该是一个符号。符号的属性用作字符属性的默认值。</target>
        </trans-unit>
        <trans-unit id="5ab0e335265f6f91a6770f98adbf5ffcddb3bf12" translate="yes" xml:space="preserve">
          <source>If a character has a &lt;code&gt;category&lt;/code&gt; property, we call it the &lt;em&gt;property category&lt;/em&gt; of the character. It should be a symbol. The properties of this symbol serve as defaults for the properties of the character.</source>
          <target state="translated">如果角色具有 &lt;code&gt;category&lt;/code&gt; 属性，我们将其称为角色的&lt;em&gt;属性类别&lt;/em&gt;。它应该是一个符号。该符号的属性用作字符属性的默认值。</target>
        </trans-unit>
        <trans-unit id="a325bcfd7299a47799b677ecb3d032bd944fd5f7" translate="yes" xml:space="preserve">
          <source>If a character has a non-&lt;code&gt;nil&lt;/code&gt; entry in an active display table, the display table takes effect; in this case, Emacs does not consult &lt;code&gt;glyphless-char-display&lt;/code&gt; at all.</source>
          <target state="translated">如果一个字符具有非 &lt;code&gt;nil&lt;/code&gt; 在活动显示表条目中，显示表生效; 在这种情况下，Emacs完全不参考 &lt;code&gt;glyphless-char-display&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6a2b8c4ce0a813f762458f74fdba3b2d22b1abe1" translate="yes" xml:space="preserve">
          <source>If a character has the property &lt;code&gt;modification-hooks&lt;/code&gt;, then its value should be a list of functions; modifying that character calls all of those functions before the actual modification. Each function receives two arguments: the beginning and end of the part of the buffer being modified. Note that if a particular modification hook function appears on several characters being modified by a single primitive, you can&amp;rsquo;t predict how many times the function will be called. Furthermore, insertion will not modify any existing character, so this hook will only be run when removing some characters, replacing them with others, or changing their text-properties.</source>
          <target state="translated">如果一个字符的属性为 &lt;code&gt;modification-hooks&lt;/code&gt; ，则其值应为函数列表；否则为false。修改该字符会在实际修改之前调用所有这些功能。每个函数接收两个参数：正在修改的缓冲区部分的开始和结尾。请注意，如果特定修改挂钩函数出现在单个原语所修改的多个字符上，则您无法预测该函数将被调用多少次。此外，插入不会修改任何现有字符，因此仅在删除某些字符，将其替换为其他字符或更改其文本属性时才运行此挂钩。</target>
        </trans-unit>
        <trans-unit id="cf6c171a09ab4b48f6f51b014c81c9b650ae5c4f" translate="yes" xml:space="preserve">
          <source>If a character has the property &lt;code&gt;read-only&lt;/code&gt;, then modifying that character is not allowed. Any command that would do so gets an error, &lt;code&gt;text-read-only&lt;/code&gt;. If the property value is a string, that string is used as the error message.</source>
          <target state="translated">如果一个字符具有 &lt;code&gt;read-only&lt;/code&gt; 属性，则不允许修改该字符。这样做的任何命令都会产生错误，即 &lt;code&gt;text-read-only&lt;/code&gt; 。如果属性值为字符串，则将该字符串用作错误消息。</target>
        </trans-unit>
        <trans-unit id="5ff4a394e8b02fd937e03c0717ce827002675ca4" translate="yes" xml:space="preserve">
          <source>If a character&amp;rsquo;s &lt;code&gt;front-sticky&lt;/code&gt; property is &lt;code&gt;t&lt;/code&gt;, then all its properties are front-sticky. If the &lt;code&gt;front-sticky&lt;/code&gt; property is a list, then the sticky properties of the character are those whose names are in the list. For example, if a character has a &lt;code&gt;front-sticky&lt;/code&gt; property whose value is &lt;code&gt;(face read-only)&lt;/code&gt;, then insertion before the character can inherit its &lt;code&gt;face&lt;/code&gt; property and its &lt;code&gt;read-only&lt;/code&gt; property, but no others.</source>
          <target state="translated">如果角色的 &lt;code&gt;front-sticky&lt;/code&gt; 属性为 &lt;code&gt;t&lt;/code&gt; ，则其所有属性均为前粘属性。如果 &lt;code&gt;front-sticky&lt;/code&gt; 属性是列表，则角色的sticky属性是名称在列表中的属性。例如，如果一个角色的 &lt;code&gt;front-sticky&lt;/code&gt; 属性的值为 &lt;code&gt;(face read-only)&lt;/code&gt; ，则在该角色之前插入可以继承其 &lt;code&gt;face&lt;/code&gt; 属性和其 &lt;code&gt;read-only&lt;/code&gt; 属性，但不能继承其他属性。</target>
        </trans-unit>
        <trans-unit id="cd39a6445b8e750c7f9dd57cb8ea29448e449653" translate="yes" xml:space="preserve">
          <source>If a command &lt;var&gt;other-command&lt;/var&gt; is remapped to &lt;var&gt;command&lt;/var&gt;:</source>
          <target state="translated">如果将命令 &lt;var&gt;other-command&lt;/var&gt; 重新映射到 &lt;var&gt;command&lt;/var&gt; ：</target>
        </trans-unit>
        <trans-unit id="ca799751386325886a8170a870fc3794daed593d" translate="yes" xml:space="preserve">
          <source>If a command ends with point inside or at the boundary of invisible text, the main editing loop relocates point to one of the two ends of the invisible text. Emacs chooses the direction of relocation so that it is the same as the overall movement direction of the command; if in doubt, it prefers a position where an inserted char would not inherit the &lt;code&gt;invisible&lt;/code&gt; property. Additionally, if the text is not replaced by an ellipsis and the command only moved within the invisible text, then point is moved one extra character so as to try and reflect the command&amp;rsquo;s movement by a visible movement of the cursor.</source>
          <target state="translated">如果命令以不可见文本的内部或边界结尾的点结束，则主编辑循环会将点重新定位到不可见文本的两端之一。Emacs选择重定位的方向，使其与命令的整体移动方向相同。如有疑问，它更喜欢插入的char不继承 &lt;code&gt;invisible&lt;/code&gt; 属性的位置。此外，如果文本未用省略号代替，并且命令仅在不可见的文本内移动，则将点移动一个额外的字符，以尝试通过可见的光标移动来反映命令的移动。</target>
        </trans-unit>
        <trans-unit id="c02095386719e5b0d1fbf2aae78668af843d5ca3" translate="yes" xml:space="preserve">
          <source>If a command has multiple bindings, this function normally uses the first one it finds. You can specify one particular key binding by assigning an &lt;code&gt;:advertised-binding&lt;/code&gt; symbol property to the command, like this:</source>
          <target state="translated">如果命令具有多个绑定，则此功能通常使用它找到的第一个绑定。您可以通过为命令分配 &lt;code&gt;:advertised-binding&lt;/code&gt; symbol属性来指定一种特定的键绑定，如下所示：</target>
        </trans-unit>
        <trans-unit id="5d1a39eb22ef81b7fb55d0807c90696ea2cfa0f7" translate="yes" xml:space="preserve">
          <source>If a command name has a property &lt;code&gt;enable-recursive-minibuffers&lt;/code&gt; that is non-&lt;code&gt;nil&lt;/code&gt;, then the command can use the minibuffer to read arguments even if it is invoked from the minibuffer. A command can also achieve this by binding &lt;code&gt;enable-recursive-minibuffers&lt;/code&gt; to &lt;code&gt;t&lt;/code&gt; in the interactive declaration (see &lt;a href=&quot;using-interactive#Using-Interactive&quot;&gt;Using Interactive&lt;/a&gt;). The minibuffer command &lt;code&gt;next-matching-history-element&lt;/code&gt; (normally</source>
          <target state="translated">如果命令名称的属性 &lt;code&gt;enable-recursive-minibuffers&lt;/code&gt; 为non- &lt;code&gt;nil&lt;/code&gt; ，则即使从微型缓冲区调用该命令，该命令也可以使用微型缓冲区读取参数。命令还可以通过在交互式声明中将 &lt;code&gt;enable-recursive-minibuffers&lt;/code&gt; 绑定到 &lt;code&gt;t&lt;/code&gt; 来实现此目的（请参阅&lt;a href=&quot;using-interactive#Using-Interactive&quot;&gt;使用Interactive&lt;/a&gt;）。minibuffer命令 &lt;code&gt;next-matching-history-element&lt;/code&gt; （通常</target>
        </trans-unit>
        <trans-unit id="6bb6a6576cb926daa3494c0908a08057d34148fb" translate="yes" xml:space="preserve">
          <source>If a connection from a process contains buffered data, &lt;code&gt;accept-process-output&lt;/code&gt; can return non-&lt;code&gt;nil&lt;/code&gt; even after the process has exited. Therefore, although the following loop:</source>
          <target state="translated">如果从一个进程的连接包含缓冲数据， &lt;code&gt;accept-process-output&lt;/code&gt; 可以返回非 &lt;code&gt;nil&lt;/code&gt; 进程已结束，也。因此，尽管出现以下循环：</target>
        </trans-unit>
        <trans-unit id="4caa731ac6b008d448f362c498f5481d5e11ec54" translate="yes" xml:space="preserve">
          <source>If a customization item has a type such as &lt;code&gt;hook&lt;/code&gt; or &lt;code&gt;alist&lt;/code&gt;, which supports &lt;code&gt;:options&lt;/code&gt;, you can add additional values to the list from outside the &lt;code&gt;defcustom&lt;/code&gt; declaration by calling &lt;code&gt;custom-add-frequent-value&lt;/code&gt;. For example, if you define a function &lt;code&gt;my-lisp-mode-initialization&lt;/code&gt; intended to be called from &lt;code&gt;emacs-lisp-mode-hook&lt;/code&gt;, you might want to add that to the list of reasonable values for &lt;code&gt;emacs-lisp-mode-hook&lt;/code&gt;, but not by editing its definition. You can do it thus:</source>
          <target state="translated">如果自定义项目具有支持 &lt;code&gt;:options&lt;/code&gt; 的类型，例如 &lt;code&gt;hook&lt;/code&gt; 或 &lt;code&gt;alist&lt;/code&gt; ，则可以通过调用 &lt;code&gt;custom-add-frequent-value&lt;/code&gt; 从 &lt;code&gt;defcustom&lt;/code&gt; 声明之外将其他值添加到列表中。例如，如果定义了打算从 &lt;code&gt;emacs-lisp-mode-hook&lt;/code&gt; 调用的函数 &lt;code&gt;my-lisp-mode-initialization&lt;/code&gt; ，则可能要将其添加到 &lt;code&gt;emacs-lisp-mode-hook&lt;/code&gt; 的合理值列表中，但是而不是编辑其定义。您可以这样进行：</target>
        </trans-unit>
        <trans-unit id="6efb7988bcf68e6a2f95773375f6e046c871845c" translate="yes" xml:space="preserve">
          <source>If a daemon was requested, it calls &lt;code&gt;server-start&lt;/code&gt;. (On POSIX systems, if a background daemon was requested, it then detaches from the controlling terminal.) See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Emacs-Server.html#Emacs-Server&quot;&gt;Emacs Server&lt;/a&gt; in</source>
          <target state="translated">如果请求了守护程序，它将调用 &lt;code&gt;server-start&lt;/code&gt; 。（在POSIX系统，如果请求后台守护进程，它然后从控制终端分离。）参见&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Emacs-Server.html#Emacs-Server&quot;&gt;Emacs的服务器&lt;/a&gt;中</target>
        </trans-unit>
        <trans-unit id="0eec4f909bc2a2b8d762de836142aa6d9abdc05e" translate="yes" xml:space="preserve">
          <source>If a file has a &amp;lsquo;</source>
          <target state="translated">如果文件包含&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="f449b7603d80817180abb3dea84db94c1bc2d093" translate="yes" xml:space="preserve">
          <source>If a file name handler is invoked, it determines the program to run based on the first argument &lt;var&gt;program&lt;/var&gt;. For instance, suppose that a handler for remote files is invoked. Then the path that is used for searching for the program might be different from &lt;code&gt;exec-path&lt;/code&gt;.</source>
          <target state="translated">如果调用了文件名处理程序，它将根据第一个参数 &lt;var&gt;program&lt;/var&gt; 确定要运行的程序。例如，假设调用了远程文件的处理程序。然后，用于搜索程序 &lt;code&gt;exec-path&lt;/code&gt; 可能与exec-path不同。</target>
        </trans-unit>
        <trans-unit id="009f7589e473df75e8be2a540f5e95f30abe2214" translate="yes" xml:space="preserve">
          <source>If a file&amp;rsquo;s name is</source>
          <target state="translated">如果文件名是</target>
        </trans-unit>
        <trans-unit id="909ad20685056441977aa0878c59a154ccf3d576" translate="yes" xml:space="preserve">
          <source>If a file-local variable could specify an arbitrary function or Lisp expression that would be called later, visiting a file could take over your Emacs. Emacs protects against this by automatically setting only those file-local variables whose specified values are known to be safe. Other file-local variables are set only if the user agrees.</source>
          <target state="translated">如果一个文件本地变量可以指定一个以后会被调用的任意函数或Lisp表达式,那么访问一个文件可能会占用你的Emacs。Emacs通过自动设置那些已知其指定值是安全的文件本地变量来防止这种情况。其他文件本地变量只有在用户同意的情况下才会被设置。</target>
        </trans-unit>
        <trans-unit id="b6da7e96e65ba0f36317067a20d84bd5da2d1d3d" translate="yes" xml:space="preserve">
          <source>If a frame has a non-&lt;code&gt;nil&lt;/code&gt; title, it appears in the window system&amp;rsquo;s title bar at the top of the frame, and also in the mode line of windows in that frame if &lt;code&gt;mode-line-frame-identification&lt;/code&gt; uses &amp;lsquo;</source>
          <target state="translated">如果帧具有非 &lt;code&gt;nil&lt;/code&gt; 标题，它出现在窗口系统的标题栏在框架的顶部，以及在窗口的模式线在该帧如果 &lt;code&gt;mode-line-frame-identification&lt;/code&gt; 用途'</target>
        </trans-unit>
        <trans-unit id="23e66a655fb8d036410d6e10616867d04de9b35f" translate="yes" xml:space="preserve">
          <source>If a frame has evaluated its arguments and called its function already, &lt;var&gt;evald&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt; and &lt;var&gt;args&lt;/var&gt; is a list of values. &lt;var&gt;flags&lt;/var&gt; is a plist of properties of the current frame: currently, the only supported property is &lt;code&gt;:debug-on-exit&lt;/code&gt;, which is &lt;code&gt;t&lt;/code&gt; if the stack frame&amp;rsquo;s &lt;code&gt;debug-on-exit&lt;/code&gt; flag is set.</source>
          <target state="translated">如果框架已评估其参数并已调用其函数，则 &lt;var&gt;evald&lt;/var&gt; 为 &lt;code&gt;t&lt;/code&gt; ,而 &lt;var&gt;args&lt;/var&gt; 为值列表。 &lt;var&gt;flags&lt;/var&gt; 是当前帧的属性的列表：当前，唯一受支持的属性是 &lt;code&gt;:debug-on-exit&lt;/code&gt; ，如果设置了堆栈帧的 &lt;code&gt;debug-on-exit&lt;/code&gt; 标志，则为 &lt;code&gt;t&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1d9e46c7c1be49972c908c4bcd8928513196de0b" translate="yes" xml:space="preserve">
          <source>If a frame has not evaluated its arguments yet or is a special form, &lt;var&gt;evald&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; and &lt;var&gt;args&lt;/var&gt; is a list of forms.</source>
          <target state="translated">如果框架尚未评估其自变量或为特殊形式，则 &lt;var&gt;evald&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ,而 &lt;var&gt;args&lt;/var&gt; 为形式列表。</target>
        </trans-unit>
        <trans-unit id="8ad4d628235cb3816a950ab23fc8cbae997732d6" translate="yes" xml:space="preserve">
          <source>If a function in &lt;code&gt;emacs-save-session-functions&lt;/code&gt; returns non-&lt;code&gt;nil&lt;/code&gt;, Emacs tells the session manager to cancel the shutdown.</source>
          <target state="translated">如果 &lt;code&gt;emacs-save-session-functions&lt;/code&gt; 中的函数返回 &lt;code&gt;nil&lt;/code&gt; ，则Emacs告诉会话管理器取消关闭。</target>
        </trans-unit>
        <trans-unit id="2a0938ebf0b2e6eda3af83386b59338c24d1a6ac" translate="yes" xml:space="preserve">
          <source>If a function in &lt;code&gt;write-file-functions&lt;/code&gt; returns non-&lt;code&gt;nil&lt;/code&gt;, it is responsible for making a backup file (if that is appropriate). To do so, execute the following code:</source>
          <target state="translated">如果 &lt;code&gt;write-file-functions&lt;/code&gt; 中的函数返回non - &lt;code&gt;nil&lt;/code&gt; ，则它负责制作备份文件（如果合适）。为此，执行以下代码：</target>
        </trans-unit>
        <trans-unit id="45a2004aa694211fb63e30f8d45131d77ed77910" translate="yes" xml:space="preserve">
          <source>If a function name is underlined, that means Emacs knows where its source code is located. You can click with the mouse on that name, or move to it and type</source>
          <target state="translated">如果一个函数名被下划线,那就意味着Emacs知道它的源代码在哪里。你可以用鼠标点击该名称,或者移动到该名称上,然后输入</target>
        </trans-unit>
        <trans-unit id="bc9fb1fbe9e79ab7e7987eb4809776d1373f2542" translate="yes" xml:space="preserve">
          <source>If a given family is specified but does not exist, this variable specifies alternative font families to try. Each element should have this form:</source>
          <target state="translated">如果指定了一个给定的字库,但不存在,这个变量就会指定要尝试的其他字库。每个元素都应该有这种形式。</target>
        </trans-unit>
        <trans-unit id="7163e535874a24fb9a92945549690ad69c9b9c91" translate="yes" xml:space="preserve">
          <source>If a group of consecutive characters have equal and non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;intangible&lt;/code&gt; properties, then you cannot place point between them. If you try to move point forward into the group, point actually moves to the end of the group. If you try to move point backward into the group, point actually moves to the start of the group.</source>
          <target state="translated">如果一组连续的字符有平等的和非 &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;intangible&lt;/code&gt; 的属性，那么你不能把它们之间的点。如果尝试将点向前移动到组中，则点实际上将移动到组的末尾。如果尝试将点向后移动到组中，则点实际上将移动到组的开始。</target>
        </trans-unit>
        <trans-unit id="4daee049e0d024cf26498e0b0e1e416e277242ec" translate="yes" xml:space="preserve">
          <source>If a hook variable has a non-&lt;code&gt;nil&lt;/code&gt; value, that value should be a list of functions. &lt;code&gt;run-hooks&lt;/code&gt; calls all the functions, one by one, with no arguments.</source>
          <target state="translated">如果hook变量具有非 &lt;code&gt;nil&lt;/code&gt; 值，则该值应为函数列表。 &lt;code&gt;run-hooks&lt;/code&gt; 不带参数地调用所有函数。</target>
        </trans-unit>
        <trans-unit id="fae7e2f6e8ad8c2b2c1155f361ef0b2395901d47" translate="yes" xml:space="preserve">
          <source>If a key is defined as a prefix in more than one active map, then its various definitions are in effect merged: the commands defined in the minor mode keymaps come first, followed by those in the local map&amp;rsquo;s prefix definition, and then by those from the global map.</source>
          <target state="translated">如果一个键在多个活动映射中定义为前缀，则其各种定义实际上会合并：在次要模式映射中定义的命令首先出现，然后在本地映射的前缀定义中出现，然后是来自全球地图。</target>
        </trans-unit>
        <trans-unit id="3e325f3f0bffc2b381cfd7f40aec87ce62ca6bdd" translate="yes" xml:space="preserve">
          <source>If a list of display specifications includes more than one replacing display specification, the first overrides the rest. Replacing display specifications make most other display specifications irrelevant, since those don&amp;rsquo;t apply to the replacement.</source>
          <target state="translated">如果显示规范列表包含多个替换显示规范，则第一个将覆盖其余显示规范。替换显示规格会使大多数其他显示规格不相关，因为这些不适用于替换。</target>
        </trans-unit>
        <trans-unit id="98c0cfaa42fee87c09b24c943a05698f58091bee" translate="yes" xml:space="preserve">
          <source>If a macro has a helper function to build its result, and that macro is used both locally and outside the package, then &lt;code&gt;eval-and-compile&lt;/code&gt; should be used to get the helper both when compiling and then later when running.</source>
          <target state="translated">如果宏具有帮助函数来生成结果，并且该宏在软件包的本地和外部使用，则应使用 &lt;code&gt;eval-and-compile&lt;/code&gt; 既在编译时又在运行时获取该助手。</target>
        </trans-unit>
        <trans-unit id="71012494381897ae21b221e46898bd150769e458" translate="yes" xml:space="preserve">
          <source>If a macro has no Edebug specification, neither through a &lt;code&gt;debug&lt;/code&gt; declaration nor through a &lt;code&gt;def-edebug-spec&lt;/code&gt; call, the variable &lt;code&gt;edebug-eval-macro-args&lt;/code&gt; comes into play.</source>
          <target state="translated">如果宏没有Edebug规范，既没有通过 &lt;code&gt;debug&lt;/code&gt; 声明，也没有通过 &lt;code&gt;def-edebug-spec&lt;/code&gt; 调用，则变量 &lt;code&gt;edebug-eval-macro-args&lt;/code&gt; 起作用。</target>
        </trans-unit>
        <trans-unit id="548e6e96fe74dbbc73fe3dcae50bba962c7fd3f9" translate="yes" xml:space="preserve">
          <source>If a module needs to call Emacs functions, it should do so through the</source>
          <target state="translated">如果一个模块需要调用Emacs函数,它应该通过</target>
        </trans-unit>
        <trans-unit id="438931f48764200c63d972c27896bd946ba67b5f" translate="yes" xml:space="preserve">
          <source>If a newline character has this property, it is a &amp;ldquo;hard&amp;rdquo; newline. The fill commands do not alter hard newlines and do not move words across them. However, this property takes effect only if the &lt;code&gt;use-hard-newlines&lt;/code&gt; minor mode is enabled. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Hard-and-Soft-Newlines.html#Hard-and-Soft-Newlines&quot;&gt;Hard and Soft Newlines&lt;/a&gt; in</source>
          <target state="translated">如果换行符具有此属性，则它是&amp;ldquo;硬&amp;rdquo;换行符。fill命令不会更改硬换行符，也不会在其间移动单词。但是，仅当启用 &lt;code&gt;use-hard-newlines&lt;/code&gt; minor模式时，此属性才有效。见&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Hard-and-Soft-Newlines.html#Hard-and-Soft-Newlines&quot;&gt;硬和软换行符&lt;/a&gt;在</target>
        </trans-unit>
        <trans-unit id="cf898f148459e4667a515d27fdc45dec6967774c" translate="yes" xml:space="preserve">
          <source>If a part of &lt;var&gt;body&lt;/var&gt; binds &lt;code&gt;inhibit-quit&lt;/code&gt; to non-&lt;code&gt;nil&lt;/code&gt;, arrival of input during those parts won&amp;rsquo;t cause an abort until the end of that part.</source>
          <target state="translated">如果一部分 &lt;var&gt;body&lt;/var&gt; 结合 &lt;code&gt;inhibit-quit&lt;/code&gt; 到非 &lt;code&gt;nil&lt;/code&gt; ，在这些部分输入的到达不会引起中止，直到该部分的端部。</target>
        </trans-unit>
        <trans-unit id="61692cd8db0d28fecba2475130992ccef1b3727c" translate="yes" xml:space="preserve">
          <source>If a particular grouping construct in the regular expression was never matched&amp;mdash;for instance, if it appears inside of an alternative that wasn&amp;rsquo;t used, or inside of a repetition that repeated zero times&amp;mdash;then the corresponding &amp;lsquo;</source>
          <target state="translated">如果正则表达式中的特定分组构造从未匹配过（例如，如果它出现在未使用的替代分组中，或者出现在重复了零次的重复中），则对应的'</target>
        </trans-unit>
        <trans-unit id="af4fe3395c8b45518750584483251291bcceffcb" translate="yes" xml:space="preserve">
          <source>If a problem occurs when you run the program, you can use the built-in Emacs Lisp debugger to suspend the Lisp evaluator, and examine and/or alter its internal state.</source>
          <target state="translated">如果运行程序时出现问题,可以使用内置的Emacs Lisp调试器来暂停Lisp评估器,并检查和/或改变其内部状态。</target>
        </trans-unit>
        <trans-unit id="243106beefd7f4681b63a362a29ccf5e5ae51a7e" translate="yes" xml:space="preserve">
          <source>If a program attempts to change objects that should not be changed, the resulting behavior is undefined: the Lisp interpreter might signal an error, or it might crash or behave unpredictably in other ways.&lt;a href=&quot;#FOOT2&quot; name=&quot;DOCF2&quot;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;</source>
          <target state="translated">如果程序试图更改不应更改的对象，则导致的行为是不确定的：Lisp解释器可能会发出错误信号，或者它可能崩溃或以其他方式无法正常运行。&lt;a href=&quot;#FOOT2&quot; name=&quot;DOCF2&quot;&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c435d12951a941c540a76edf63e274f49c4fb461" translate="yes" xml:space="preserve">
          <source>If a program makes several text changes in the same area of the buffer, using the macro &lt;code&gt;combine-after-change-calls&lt;/code&gt; around that part of the program can make it run considerably faster when after-change hooks are in use. When the after-change hooks are ultimately called, the arguments specify a portion of the buffer including all of the changes made within the &lt;code&gt;combine-after-change-calls&lt;/code&gt; body.</source>
          <target state="translated">如果程序在缓冲区的同一区域中进行了多个文本更改，则在使用该部分后挂钩时，在程序的该部分周围使用宏 &lt;code&gt;combine-after-change-calls&lt;/code&gt; 可使它的运行速度大大提高。最终调用更改后挂钩时，参数指定缓冲区的一部分，包括在 &lt;code&gt;combine-after-change-calls&lt;/code&gt; 主体内进行的所有更改。</target>
        </trans-unit>
        <trans-unit id="3d81a2b42f603297bebed05ca83ccda1b8a78048" translate="yes" xml:space="preserve">
          <source>If a specification fails to match at some point, this does not necessarily mean a syntax error will be signaled; instead, &lt;em&gt;backtracking&lt;/em&gt; will take place until all alternatives have been exhausted. Eventually every element of the argument list must be matched by some element in the specification, and every required element in the specification must match some argument.</source>
          <target state="translated">如果某个规范在某个时候不匹配，这并不一定意味着将发出语法错误；取而代之的是，将进行&lt;em&gt;回溯，&lt;/em&gt;直到用尽所有替代方法。最终，参数列表中的每个元素都必须与规范中的某个元素匹配，并且规范中的每个必需元素都必须与某个参数匹配。</target>
        </trans-unit>
        <trans-unit id="7ba26fa136b6d3f5f0d0bae4d89c52641ff643b4" translate="yes" xml:space="preserve">
          <source>If a subexpression of a backquote construct has no substitutions or splices, it acts like &lt;code&gt;quote&lt;/code&gt; in that it yields conses, vectors and strings that might be shared and should not be modified. See &lt;a href=&quot;self_002devaluating-forms#Self_002dEvaluating-Forms&quot;&gt;Self-Evaluating Forms&lt;/a&gt;.</source>
          <target state="translated">如果反引号构造的子表达式没有替换或剪接，则其作用类似于 &lt;code&gt;quote&lt;/code&gt; ，因为它会产生可能共享且不应修改的conses，vector和字符串。请参阅&lt;a href=&quot;self_002devaluating-forms#Self_002dEvaluating-Forms&quot;&gt;自我评估表格&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="514160586b0a8e80be8af506a6edc7f6e6ac6e26" translate="yes" xml:space="preserve">
          <source>If a symbol with the desired name is found, the reader uses that symbol. If the obarray does not contain a symbol with that name, the reader makes a new symbol and adds it to the obarray. Finding or adding a symbol with a certain name is called &lt;em&gt;interning&lt;/em&gt; it, and the symbol is then called an &lt;em&gt;interned symbol&lt;/em&gt;.</source>
          <target state="translated">如果找到了具有所需名称的符号，则阅读器将使用该符号。如果对象数组不包含具有该名称的符号，则阅读器会制作一个新符号并将其添加到对象数组中。查找或添加具有特定名称的符号称为对其&lt;em&gt;进行intern&lt;/em&gt;，然后将该符号称为&lt;em&gt;interned symbol&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="5792ba55fa583eab230c2719559e8b5d0ed2308f" translate="yes" xml:space="preserve">
          <source>If a syntactic problem is preventing Lisp from even reading the program, you can locate it using Lisp editing commands.</source>
          <target state="translated">如果一个语法问题使Lisp甚至无法读取程序,你可以使用Lisp编辑命令找到它。</target>
        </trans-unit>
        <trans-unit id="bffb687fbdff53add60c8beb535d1c15fcec78ae" translate="yes" xml:space="preserve">
          <source>If a timer function calls functions that can change the match data, it should save and restore the match data. See &lt;a href=&quot;saving-match-data#Saving-Match-Data&quot;&gt;Saving Match Data&lt;/a&gt;.</source>
          <target state="translated">如果计时器函数调用可以更改匹配数据的函数，则应保存并恢复匹配数据。请参阅&lt;a href=&quot;saving-match-data#Saving-Match-Data&quot;&gt;保存比赛数据&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1a3dab018b18bf5dc87ccab46352179b2b3b307c" translate="yes" xml:space="preserve">
          <source>If a variable appears as an element of &lt;code&gt;minor-mode-overriding-map-alist&lt;/code&gt;, the map specified by that element totally replaces any map specified for the same variable in &lt;code&gt;minor-mode-map-alist&lt;/code&gt;.</source>
          <target state="translated">如果某个变量显示为 &lt;code&gt;minor-mode-overriding-map-alist&lt;/code&gt; 的元素，则该元素指定的映射将完全替换为 &lt;code&gt;minor-mode-map-alist&lt;/code&gt; 中的同一变量指定的任何映射。</target>
        </trans-unit>
        <trans-unit id="02cb55f35f85cb2854d347ba342c503214f2b062" translate="yes" xml:space="preserve">
          <source>If a window&amp;rsquo;s pixel height is not an integral multiple of its frame&amp;rsquo;s default character height, the number of lines occupied by the window is rounded internally. This is done in a way such that, if the window is a parent window, the sum of the total heights of all its child windows internally equals the total height of their parent. This means that although two windows have the same pixel height, their internal total heights may differ by one line. This means also, that if window is vertically combined and has a next sibling, the topmost row of that sibling can be calculated as the sum of this window&amp;rsquo;s topmost row and total height (see &lt;a href=&quot;coordinates-and-windows#Coordinates-and-Windows&quot;&gt;Coordinates and Windows&lt;/a&gt;)</source>
          <target state="translated">如果窗口的像素高度不是其框架默认字符高度的整数倍，则该窗口占用的行数将在内部进行舍入。这样做的方式是，如果窗口是父窗口，则其所有子窗口的总高度之和在内部等于其父窗口的总高度。这意味着尽管两个窗口具有相同的像素高度，但它们的内部总高度可能相差一行。这也意味着，如果窗口是垂直组合的并具有下一个同级，则该同级的最上一行可以计算为该窗口最上一行和总高度的总和（请参见&lt;a href=&quot;coordinates-and-windows#Coordinates-and-Windows&quot;&gt;坐标和Windows&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="ef0b95c50f0eef3857eb543b00e33c0bcde5709c" translate="yes" xml:space="preserve">
          <source>If a window&amp;rsquo;s pixel width is not an integral multiple of its frame&amp;rsquo;s character width, the number of lines occupied by the window is rounded internally. This is done in a way such that, if the window is a parent window, the sum of the total widths of all its children internally equals the total width of their parent. This means that although two windows have the same pixel width, their internal total widths may differ by one column. This means also, that if this window is horizontally combined and has a next sibling, the leftmost column of that sibling can be calculated as the sum of this window&amp;rsquo;s leftmost column and total width (see &lt;a href=&quot;coordinates-and-windows#Coordinates-and-Windows&quot;&gt;Coordinates and Windows&lt;/a&gt;). The optional argument &lt;var&gt;round&lt;/var&gt; behaves as it does for &lt;code&gt;window-total-height&lt;/code&gt;.</source>
          <target state="translated">如果窗口的像素宽度不是其框架字符宽度的整数倍，则该窗口所占据的行数将在内部取整。这样做的方式是，如果窗口是父窗口，则其所有子级的总宽度之和在内部等于其父级的总宽度。这意味着尽管两个窗口具有相同的像素宽度，但它们的内部总宽度可能相差一列。这也意味着，如果此窗口是水平组合的并具有下一个同级，则可将该同级的最左列计算为该窗口最左列与总宽度的总和（请参见&lt;a href=&quot;coordinates-and-windows#Coordinates-and-Windows&quot;&gt;Coordinates and Windows&lt;/a&gt;）。可选参数 &lt;var&gt;round&lt;/var&gt; 的行为与 &lt;code&gt;window-total-height&lt;/code&gt; 的行为相同。</target>
        </trans-unit>
        <trans-unit id="9f54ed66047ff25005c5a27d3c92a34578c06887" translate="yes" xml:space="preserve">
          <source>If actual arguments for the optional and rest variables are omitted, then they always default to &lt;code&gt;nil&lt;/code&gt;. There is no way for the function to distinguish between an explicit argument of &lt;code&gt;nil&lt;/code&gt; and an omitted argument. However, the body of the function is free to consider &lt;code&gt;nil&lt;/code&gt; an abbreviation for some other meaningful value. This is what &lt;code&gt;substring&lt;/code&gt; does; &lt;code&gt;nil&lt;/code&gt; as the third argument to &lt;code&gt;substring&lt;/code&gt; means to use the length of the string supplied.</source>
          <target state="translated">如果可选变量和rest变量的实际参数被忽略，则它们始终默认为 &lt;code&gt;nil&lt;/code&gt; 。该函数无法区分显式参数 &lt;code&gt;nil&lt;/code&gt; 和省略的参数。但是，函数的主体可以随意将 &lt;code&gt;nil&lt;/code&gt; 作为其他有意义值的缩写。这是 &lt;code&gt;substring&lt;/code&gt; 作用； &lt;code&gt;nil&lt;/code&gt; 作为 &lt;code&gt;substring&lt;/code&gt; 的第三个参数表示使用提供的字符串的长度。</target>
        </trans-unit>
        <trans-unit id="4dd0b048a1ae42f26f486c26d115d7212b1fef97" translate="yes" xml:space="preserve">
          <source>If all of these functions return &lt;code&gt;nil&lt;/code&gt;, then the argument is treated as a file name to visit.</source>
          <target state="translated">如果所有这些函数都返回 &lt;code&gt;nil&lt;/code&gt; ，则将该参数视为要访问的文件名。</target>
        </trans-unit>
        <trans-unit id="80c524a9180c48af0283044015fb44d72905d3db" translate="yes" xml:space="preserve">
          <source>If all the &lt;var&gt;conditions&lt;/var&gt; turn out &lt;code&gt;nil&lt;/code&gt;, then the &lt;code&gt;or&lt;/code&gt; expression returns &lt;code&gt;nil&lt;/code&gt;. Just &lt;code&gt;(or)&lt;/code&gt;, with no &lt;var&gt;conditions&lt;/var&gt;, returns &lt;code&gt;nil&lt;/code&gt;, appropriate because all the &lt;var&gt;conditions&lt;/var&gt; turned out &lt;code&gt;nil&lt;/code&gt;. (Think about it; which one did not?)</source>
          <target state="translated">如果所有的 &lt;var&gt;conditions&lt;/var&gt; 变成 &lt;code&gt;nil&lt;/code&gt; ，那么 &lt;code&gt;or&lt;/code&gt; 表达式返回 &lt;code&gt;nil&lt;/code&gt; 。只是 &lt;code&gt;(or)&lt;/code&gt; 没有 &lt;var&gt;conditions&lt;/var&gt; ，则返回 &lt;code&gt;nil&lt;/code&gt; ，这是适当的，因为所有 &lt;var&gt;conditions&lt;/var&gt; 变为 &lt;code&gt;nil&lt;/code&gt; 。 （考虑一下；哪一个没有？）</target>
        </trans-unit>
        <trans-unit id="9d8206c2839ebaaa2594473d36a35256669c56e5" translate="yes" xml:space="preserve">
          <source>If all the &lt;var&gt;conditions&lt;/var&gt; turn out non-&lt;code&gt;nil&lt;/code&gt;, then the value of the last of them becomes the value of the &lt;code&gt;and&lt;/code&gt; form. Just &lt;code&gt;(and)&lt;/code&gt;, with no &lt;var&gt;conditions&lt;/var&gt;, returns &lt;code&gt;t&lt;/code&gt;, appropriate because all the &lt;var&gt;conditions&lt;/var&gt; turned out non-&lt;code&gt;nil&lt;/code&gt;. (Think about it; which one did not?)</source>
          <target state="translated">如果所有 &lt;var&gt;conditions&lt;/var&gt; 都为非 &lt;code&gt;nil&lt;/code&gt; ，则最后一个条件的值将成为 &lt;code&gt;and&lt;/code&gt; 形式的值。Just &lt;code&gt;(and)&lt;/code&gt; 在没有 &lt;var&gt;conditions&lt;/var&gt; 返回 &lt;code&gt;t&lt;/code&gt; ，因为所有 &lt;var&gt;conditions&lt;/var&gt; 变为 &lt;code&gt;nil&lt;/code&gt; ，所以t是适当的。（考虑一下；哪一个没有？）</target>
        </trans-unit>
        <trans-unit id="d7d69013792720d185b2b66133b846cd99c6e339" translate="yes" xml:space="preserve">
          <source>If all the arguments are integers, the result is an integer, obtained by rounding the quotient towards zero after each division.</source>
          <target state="translated">如果所有参数都是整数,那么结果是一个整数,在每次除法后将商四舍五入为零。</target>
        </trans-unit>
        <trans-unit id="a66d8e038907512ea75e34f80ae5aca0011c55e8" translate="yes" xml:space="preserve">
          <source>If all the characters in the range specified for &lt;code&gt;buffer-substring&lt;/code&gt; have a non-&lt;code&gt;nil&lt;/code&gt; value for this property, &lt;code&gt;buffer-substring&lt;/code&gt; does not call the &lt;code&gt;buffer-access-fontify-functions&lt;/code&gt; functions. It assumes these characters already have the right text properties, and just copies the properties they already have.</source>
          <target state="translated">如果指定的范围内的所有字符 &lt;code&gt;buffer-substring&lt;/code&gt; 具有非 &lt;code&gt;nil&lt;/code&gt; 值这个属性， &lt;code&gt;buffer-substring&lt;/code&gt; 不会调用 &lt;code&gt;buffer-access-fontify-functions&lt;/code&gt; 功能。假定这些字符已经具有正确的文本属性，并且仅复制它们已经具有的属性。</target>
        </trans-unit>
        <trans-unit id="74daf9e3ff4eb549cd541100a271641a4e2e3986" translate="yes" xml:space="preserve">
          <source>If an alist element matches &lt;var&gt;key&lt;/var&gt; by this criterion, then &lt;code&gt;assoc-default&lt;/code&gt; returns a value based on this element. If the element is a cons, then the value is the element&amp;rsquo;s &lt;small&gt;CDR&lt;/small&gt;. Otherwise, the return value is &lt;var&gt;default&lt;/var&gt;.</source>
          <target state="translated">如果alist元素按此条件与 &lt;var&gt;key&lt;/var&gt; 匹配，则 &lt;code&gt;assoc-default&lt;/code&gt; 将基于此元素返回一个值。如果元素是一个缺点，则该值为元素的&lt;small&gt;CDR&lt;/small&gt;。否则，返回值为 &lt;var&gt;default&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="8bfdfc86e81d4db3fe90351ba0ef1fb79c3e2576" translate="yes" xml:space="preserve">
          <source>If an editor command sets this variable non-&lt;code&gt;nil&lt;/code&gt;, then the editor command loop deactivates the mark after the command returns (if Transient Mark mode is enabled). All the primitives that change the buffer set &lt;code&gt;deactivate-mark&lt;/code&gt;, to deactivate the mark when the command is finished. Setting this variable makes it buffer-local.</source>
          <target state="translated">如果编辑器命令将此变量设置为 &lt;code&gt;nil&lt;/code&gt; ，则编辑器命令循环将在命令返回后停用该标记（如果启用了瞬变标记模式）。所有更改缓冲区集的原语都将 &lt;code&gt;deactivate-mark&lt;/code&gt; 禁用，以在命令完成后停用该标记。设置此变量使其成为局部缓冲区。</target>
        </trans-unit>
        <trans-unit id="4b945adb45e9f446f56407d3dc48a6722aedabb2" translate="yes" xml:space="preserve">
          <source>If an element of &lt;code&gt;auto-mode-alist&lt;/code&gt; has the form &lt;code&gt;(&lt;var&gt;regexp&lt;/var&gt;
&lt;var&gt;function&lt;/var&gt; t)&lt;/code&gt;, then after calling &lt;var&gt;function&lt;/var&gt;, Emacs searches &lt;code&gt;auto-mode-alist&lt;/code&gt; again for a match against the portion of the file name that did not match before. This feature is useful for uncompression packages: an entry of the form &lt;code&gt;(&quot;\\.gz\\'&quot;
&lt;var&gt;function&lt;/var&gt; t)&lt;/code&gt; can uncompress the file and then put the uncompressed file in the proper mode according to the name sans &amp;lsquo;</source>
          <target state="translated">如果 &lt;code&gt;auto-mode-alist&lt;/code&gt; 元素的格式为 &lt;code&gt;(&lt;var&gt;regexp&lt;/var&gt; &lt;var&gt;function&lt;/var&gt; t)&lt;/code&gt; ，则在调用 &lt;var&gt;function&lt;/var&gt; 之后，Emacs再次搜索 &lt;code&gt;auto-mode-alist&lt;/code&gt; 与文件名中之前不匹配的部分匹配。此功能对解压缩包很有用：形式 &lt;code&gt;(&quot;\\.gz\\'&quot; &lt;var&gt;function&lt;/var&gt; t)&lt;/code&gt; 的条目可以解压缩文件，然后根据名称sans'将其置于正确的模式。</target>
        </trans-unit>
        <trans-unit id="1fd0bc1acf76a530f3520b116420dfdd3224243b" translate="yes" xml:space="preserve">
          <source>If an element of &lt;code&gt;completion-ignored-extensions&lt;/code&gt; ends in a slash &amp;lsquo;</source>
          <target state="translated">如果 &lt;code&gt;completion-ignored-extensions&lt;/code&gt; 的元素以斜杠结尾，</target>
        </trans-unit>
        <trans-unit id="f0bedb2e343491e22a55abc5e6b2edad751f20da" translate="yes" xml:space="preserve">
          <source>If an element of &lt;var&gt;display&lt;/var&gt; specifies more than one &lt;var&gt;value&lt;/var&gt; for a given &lt;var&gt;characteristic&lt;/var&gt;, any of those values is acceptable. If &lt;var&gt;display&lt;/var&gt; has more than one element, each element should specify a different &lt;var&gt;characteristic&lt;/var&gt;; then &lt;em&gt;each&lt;/em&gt; characteristic of the terminal must match one of the &lt;var&gt;value&lt;/var&gt;s specified for it in &lt;var&gt;display&lt;/var&gt;.</source>
          <target state="translated">如果 &lt;var&gt;display&lt;/var&gt; 元素为给定 &lt;var&gt;characteristic&lt;/var&gt; 指定了多个 &lt;var&gt;value&lt;/var&gt; ，则这些值中的任何一个都是可以接受的。如果 &lt;var&gt;display&lt;/var&gt; 具有多个元素，则每个元素应指定不同的 &lt;var&gt;characteristic&lt;/var&gt; ；那么终端的&lt;em&gt;每个&lt;/em&gt;特性必须匹配 &lt;var&gt;display&lt;/var&gt; 为它指定的 &lt;var&gt;value&lt;/var&gt; 之一。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a0f85ef9bf7f78b5e45751f2cae294ae69e741d6" translate="yes" xml:space="preserve">
          <source>If an element of a keymap is a char-table, it counts as holding bindings for all character events with no modifier bits (see &lt;a href=&quot;other-char-bits#modifier-bits&quot;&gt;modifier bits&lt;/a&gt;): the element whose index is &lt;var&gt;c&lt;/var&gt; is the binding for the character &lt;var&gt;c&lt;/var&gt;. This is a compact way to record lots of bindings. A keymap with such a char-table is called a &lt;em&gt;full keymap&lt;/em&gt;. Other keymaps are called &lt;em&gt;sparse keymaps&lt;/em&gt;.</source>
          <target state="translated">如果键映射的元素是一个字符表，则它对所有没有修饰符位的字符事件都视为保持绑定（请参见&lt;a href=&quot;other-char-bits#modifier-bits&quot;&gt;修饰符位&lt;/a&gt;）：索引为 &lt;var&gt;c&lt;/var&gt; 的元素是字符 &lt;var&gt;c&lt;/var&gt; 的绑定。这是一种记录大量绑定的紧凑方法。具有此类字符表的键&lt;em&gt;映射&lt;/em&gt;称为&lt;em&gt;完整键映射&lt;/em&gt;。其他键盘映射称为&lt;em&gt;稀疏键盘映射&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="c9922dfd72e7c6301d3e7e3226411370e6e9e816" translate="yes" xml:space="preserve">
          <source>If an element of a keymap is itself a keymap, it counts as if this inner keymap were inlined in the outer keymap. This is used for multiple-inheritance, such as in &lt;code&gt;make-composed-keymap&lt;/code&gt;.</source>
          <target state="translated">如果一个键映射表的元素本身就是一个键映射表，则将其视为该内部键映射表已内联在外部键映射表中。这用于多重继承，例如在 &lt;code&gt;make-composed-keymap&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="794700a26b21d88036a1d6d6c1bb7a8042db8bd7" translate="yes" xml:space="preserve">
          <source>If an error (or other nonlocal exit) occurs inside the body of &lt;code&gt;atomic-change-group&lt;/code&gt;, it unmakes all the changes in that buffer that were during the execution of the body. This kind of change group has no effect on any other buffers&amp;mdash;any such changes remain.</source>
          <target state="translated">如果 &lt;code&gt;atomic-change-group&lt;/code&gt; 的主体内部发生错误（或其他非本地退出），它将取消执行该主体期间缓冲区中的所有更改。这种更改组对任何其他缓冲区都没有影响，任何此类更改都会保留下来。</target>
        </trans-unit>
        <trans-unit id="b96d2db48a3e38faee5fded775347f9916a661df" translate="yes" xml:space="preserve">
          <source>If an error happens during execution of a filter function, it is caught automatically, so that it doesn&amp;rsquo;t stop the execution of whatever program was running when the filter function was started. However, if &lt;code&gt;debug-on-error&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, errors are not caught. This makes it possible to use the Lisp debugger to debug filter functions. See &lt;a href=&quot;debugger#Debugger&quot;&gt;Debugger&lt;/a&gt;.</source>
          <target state="translated">如果在执行过滤器功能期间发生错误，则会自动捕获该错误，从而不会在启动过滤器功能时停止正在运行的任何程序的执行。但是，如果 &lt;code&gt;debug-on-error&lt;/code&gt; 是不 &lt;code&gt;nil&lt;/code&gt; ，错误没有被卡住。这样就可以使用Lisp调试器来调试过滤器功能。请参阅&lt;a href=&quot;debugger#Debugger&quot;&gt;调试器&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="16d5d6b6ed23920d3d7ce1f0ad21aad044d422f0" translate="yes" xml:space="preserve">
          <source>If an error happens during execution of a sentinel, it is caught automatically, so that it doesn&amp;rsquo;t stop the execution of whatever programs was running when the sentinel was started. However, if &lt;code&gt;debug-on-error&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, errors are not caught. This makes it possible to use the Lisp debugger to debug the sentinel. See &lt;a href=&quot;debugger#Debugger&quot;&gt;Debugger&lt;/a&gt;.</source>
          <target state="translated">如果在执行前哨操作时发生错误，则会自动捕获该错误，以使它不会停止在前哨启动时正在运行的任何程序的执行。但是，如果 &lt;code&gt;debug-on-error&lt;/code&gt; 是不 &lt;code&gt;nil&lt;/code&gt; ，错误没有被卡住。这样就可以使用Lisp调试器来调试哨兵。请参阅&lt;a href=&quot;debugger#Debugger&quot;&gt;调试器&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7576496955d9c8fe66999ffe6ac9638a3d4b0d14" translate="yes" xml:space="preserve">
          <source>If an error is handled by some &lt;code&gt;condition-case&lt;/code&gt; form, this ordinarily prevents the debugger from being run, even if &lt;code&gt;debug-on-error&lt;/code&gt; says this error should invoke the debugger.</source>
          <target state="translated">如果错误是通过某种 &lt;code&gt;condition-case&lt;/code&gt; 格式处理的，则通常会阻止调试器运行，即使 &lt;code&gt;debug-on-error&lt;/code&gt; 指出此错误应调用调试器也是如此。</target>
        </trans-unit>
        <trans-unit id="bb1089078e8bda3d5179947460aa8b6a9afdccb9" translate="yes" xml:space="preserve">
          <source>If an error occurs during an evaluation from the evaluation list, the error message is displayed in a string as if it were the result. Therefore, expressions using variables that are not currently valid do not interrupt your debugging.</source>
          <target state="translated">如果在从评估列表中进行评估时发生了错误,错误信息会以字符串的形式显示,就像它是结果一样。因此,使用当前无效的变量的表达式不会中断你的调试。</target>
        </trans-unit>
        <trans-unit id="cd204baa76eb198b8d26040a8681eac19d3a32a6" translate="yes" xml:space="preserve">
          <source>If an error was signaled, presumably the variable &lt;code&gt;debug-on-error&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;. If &lt;code&gt;quit&lt;/code&gt; was signaled, then presumably the variable &lt;code&gt;debug-on-quit&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果发出错误信号，则推测变量 &lt;code&gt;debug-on-error&lt;/code&gt; 为 &lt;code&gt;nil&lt;/code&gt; 。如果发出 &lt;code&gt;quit&lt;/code&gt; 信号，则变量 &lt;code&gt;debug-on-quit&lt;/code&gt; 可能为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0ac4638e34f448d2176b52875ef4f2ae48a1c64a" translate="yes" xml:space="preserve">
          <source>If an expression in your program produces a value containing circular list structure, you may get an error when Edebug attempts to print it.</source>
          <target state="translated">如果你的程序中的表达式产生一个包含循环列表结构的值,当Edebug试图打印它时,你可能会得到一个错误。</target>
        </trans-unit>
        <trans-unit id="83e95e3593e5ba7d75e8a5f81e09496856f8762e" translate="yes" xml:space="preserve">
          <source>If an expression&amp;rsquo;s first symbol is that of a special form, the expression should follow the rules of that special form; otherwise, Emacs&amp;rsquo;s behavior is not well-defined (though it will not crash). For example, &lt;code&gt;((lambda (x) x . 3) 4)&lt;/code&gt; contains a subexpression that begins with &lt;code&gt;lambda&lt;/code&gt; but is not a well-formed &lt;code&gt;lambda&lt;/code&gt; expression, so Emacs may signal an error, or may return 3 or 4 or &lt;code&gt;nil&lt;/code&gt;, or may behave in other ways.</source>
          <target state="translated">如果表达式的第一个符号是特殊形式的符号，则表达式应遵循该特殊形式的规则；否则，Emacs的行为没有明确定义（尽管不会崩溃）。例如， &lt;code&gt;((lambda (x) x . 3) 4)&lt;/code&gt; x。3 ）4）包含一个以 &lt;code&gt;lambda&lt;/code&gt; 开头但不是格式正确的 &lt;code&gt;lambda&lt;/code&gt; 表达式的子表达式，因此Emacs可能会发出错误信号，或者可能返回3或4或 &lt;code&gt;nil&lt;/code&gt; ，或者以其他方式表现。</target>
        </trans-unit>
        <trans-unit id="ef63e3482304164515199599167722e126821fc8" translate="yes" xml:space="preserve">
          <source>If an image in the image cache has not been displayed for a specified period of time, Emacs removes it from the cache and frees the associated memory.</source>
          <target state="translated">如果图像缓存中的图像在指定时间内没有显示,Emacs就会将其从缓存中删除,并释放相关内存。</target>
        </trans-unit>
        <trans-unit id="b0b9eb6f1ea605f94ee0744cdcce85dafd0092ee" translate="yes" xml:space="preserve">
          <source>If an input character is upper-case (or has the shift modifier) and has no key binding, but its lower-case equivalent has one, then &lt;code&gt;read-key-sequence&lt;/code&gt; converts the character to lower case. Note that &lt;code&gt;lookup-key&lt;/code&gt; does not perform case conversion in this way.</source>
          <target state="translated">如果输入字符是大写字母（或具有shift修饰符）并且没有键绑定，但是等效的小写字母只有一个，则 &lt;code&gt;read-key-sequence&lt;/code&gt; 会将字符转换为小写。请注意， &lt;code&gt;lookup-key&lt;/code&gt; 不会以这种方式执行大小写转换。</target>
        </trans-unit>
        <trans-unit id="c978c7eeed0d2a8515ee8ca4aeb1040cc8a43019" translate="yes" xml:space="preserve">
          <source>If an overlay has a &lt;code&gt;category&lt;/code&gt; property, we call it the &lt;em&gt;category&lt;/em&gt; of the overlay. It should be a symbol. The properties of the symbol serve as defaults for the properties of the overlay.</source>
          <target state="translated">如果叠加层具有 &lt;code&gt;category&lt;/code&gt; 属性，我们将其称为叠加层的&lt;em&gt;类别&lt;/em&gt;。它应该是一个符号。符号的属性用作叠加层属性的默认设置。</target>
        </trans-unit>
        <trans-unit id="c237ac180b9da966635d558c6b10abd0eea515bb" translate="yes" xml:space="preserve">
          <source>If an overlay has a &lt;code&gt;help-echo&lt;/code&gt; property, then when you move the mouse onto the text in the overlay, Emacs displays a help string in the echo area, or in the tooltip window. For details see &lt;a href=&quot;special-properties#Text-help_002decho&quot;&gt;Text help-echo&lt;/a&gt;.</source>
          <target state="translated">如果叠加层具有 &lt;code&gt;help-echo&lt;/code&gt; 属性，则当您将鼠标移到叠加层中的文本上时，Emacs会在回显区域或工具提示窗口中显示帮助字符串。有关详细信息，请参见&lt;a href=&quot;special-properties#Text-help_002decho&quot;&gt;文本help-echo&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8e7059e05227dc5f1ff385e286e4aadac14a7bb0" translate="yes" xml:space="preserve">
          <source>If any buffers are auto-saved, &lt;code&gt;do-auto-save&lt;/code&gt; normally displays a message saying &amp;lsquo;</source>
          <target state="translated">如果有任何缓冲区被自动保存，则 &lt;code&gt;do-auto-save&lt;/code&gt; 通常会显示一条消息，说明&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="b398921f8b70f112936a79cd10e1c65e69b5289d" translate="yes" xml:space="preserve">
          <source>If any full-width windows are present, only those windows are considered. A minibuffer window is never a candidate. A dedicated window (see &lt;a href=&quot;dedicated-windows#Dedicated-Windows&quot;&gt;Dedicated Windows&lt;/a&gt;) is never a candidate unless the optional argument &lt;var&gt;dedicated&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;. The selected window is never returned, unless it is the only candidate. However, if the optional argument &lt;var&gt;not-selected&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function returns &lt;code&gt;nil&lt;/code&gt; in that case.</source>
          <target state="translated">如果存在任何全角窗口，则仅考虑那些窗口。迷你缓冲区窗口永远都不是候选对象。专用窗口（见&lt;a href=&quot;dedicated-windows#Dedicated-Windows&quot;&gt;专用的Windows&lt;/a&gt;）从来都不是一个候选人，除非可选的参数 &lt;var&gt;dedicated&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; 。除非是唯一的候选窗口，否则不会返回选定的窗口。但是，如果可选参数 &lt;var&gt;not-selected&lt;/var&gt; 为non - &lt;code&gt;nil&lt;/code&gt; ，则在这种情况下此函数返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f7ea12623a225de3a0805b08cfcbf1a9f944e06a" translate="yes" xml:space="preserve">
          <source>If any function in &lt;code&gt;write-region-annotate-functions&lt;/code&gt; returns with a different buffer current, Emacs calls &lt;code&gt;write-region-post-annotation-function&lt;/code&gt; more than once. Emacs calls it with the last buffer that was current, and again with the buffer before that, and so on back to the original buffer.</source>
          <target state="translated">如果 &lt;code&gt;write-region-annotate-functions&lt;/code&gt; 中的任何函数返回的缓冲电流不同，则Emacs会多次调用 &lt;code&gt;write-region-post-annotation-function&lt;/code&gt; 。Emacs使用当前的最后一个缓冲区来调用它，然后使用之前的缓冲区来调用它，依此类推直到原始缓冲区。</target>
        </trans-unit>
        <trans-unit id="207735bef0d8ecc047235f0cdc4365432c0e909e" translate="yes" xml:space="preserve">
          <source>If any given attribute has not been specified during the preceding steps, Emacs applies the attribute of the &lt;code&gt;default&lt;/code&gt; face.</source>
          <target state="translated">如果在前面的步骤中未指定任何给定的属性，则Emacs将应用 &lt;code&gt;default&lt;/code&gt; 面的属性。</target>
        </trans-unit>
        <trans-unit id="8a4fd90c3d8ffc0107542304b0d34991bf68442f" translate="yes" xml:space="preserve">
          <source>If any of the &lt;var&gt;conditions&lt;/var&gt; evaluates to &lt;code&gt;nil&lt;/code&gt;, then the result of the &lt;code&gt;and&lt;/code&gt; must be &lt;code&gt;nil&lt;/code&gt; regardless of the remaining &lt;var&gt;conditions&lt;/var&gt;; so &lt;code&gt;and&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt; right away, ignoring the remaining &lt;var&gt;conditions&lt;/var&gt;.</source>
          <target state="translated">如果任何的 &lt;var&gt;conditions&lt;/var&gt; 评估为 &lt;code&gt;nil&lt;/code&gt; ，然后的结果 &lt;code&gt;and&lt;/code&gt; 必须是 &lt;code&gt;nil&lt;/code&gt; 的剩余不管 &lt;var&gt;conditions&lt;/var&gt; ; 因此 &lt;code&gt;and&lt;/code&gt; 返回 &lt;code&gt;nil&lt;/code&gt; ，而忽略其余 &lt;var&gt;conditions&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="fdf1f839b81c56a0c15cfb77ed81ec0e32313b36" translate="yes" xml:space="preserve">
          <source>If any of the &lt;var&gt;conditions&lt;/var&gt; evaluates to a non-&lt;code&gt;nil&lt;/code&gt; value, then the result of the &lt;code&gt;or&lt;/code&gt; must be non-&lt;code&gt;nil&lt;/code&gt;; so &lt;code&gt;or&lt;/code&gt; returns right away, ignoring the remaining &lt;var&gt;conditions&lt;/var&gt;. The value it returns is the non-&lt;code&gt;nil&lt;/code&gt; value of the condition just evaluated.</source>
          <target state="translated">如果任一 &lt;var&gt;conditions&lt;/var&gt; 的计算结果为非 &lt;code&gt;nil&lt;/code&gt; 值，然后的结果 &lt;code&gt;or&lt;/code&gt; 必须不 &lt;code&gt;nil&lt;/code&gt; ; 所以 &lt;code&gt;or&lt;/code&gt; 立即返回，忽略其余 &lt;var&gt;conditions&lt;/var&gt; 。它返回的值是无 &lt;code&gt;nil&lt;/code&gt; 只是评估条件的值。</target>
        </trans-unit>
        <trans-unit id="c49c4e3f88c006d5e147f8d6c7e243982a86546c" translate="yes" xml:space="preserve">
          <source>If any of the functions in this hook returns non-&lt;code&gt;nil&lt;/code&gt;, the file is considered already written and the rest are not called and neither are the functions in &lt;code&gt;write-file-functions&lt;/code&gt;.</source>
          <target state="translated">如果此挂钩中的任何函数返回non- &lt;code&gt;nil&lt;/code&gt; ，则认为该文件已被写入，其余文件不会被调用， &lt;code&gt;write-file-functions&lt;/code&gt; 中的函数也不会被调用。</target>
        </trans-unit>
        <trans-unit id="01ea4c2d2042c831547f78252041f98a8f433fa9" translate="yes" xml:space="preserve">
          <source>If any of the specified values is zero, no window can be created on the corresponding side. &lt;code&gt;display-buffer-in-side-window&lt;/code&gt; will not signal an error in that case, but will return &lt;code&gt;nil&lt;/code&gt;. If a specified value just forbids the creation of an additional side window, the most suitable window on that side is reused and may have its &lt;code&gt;window-slot&lt;/code&gt; parameter changed accordingly.</source>
          <target state="translated">如果任何指定的值为零，则不能在相应的边上创建任何窗口。在这种情况下， &lt;code&gt;display-buffer-in-side-window&lt;/code&gt; 不会表示错误，但将返回 &lt;code&gt;nil&lt;/code&gt; 。如果指定的值仅禁止创建其他侧窗，则该侧上最合适的窗将被重用，并且其 &lt;code&gt;window-slot&lt;/code&gt; 参数可能会相应更改。</target>
        </trans-unit>
        <trans-unit id="374b52ae64de7017caf47364121148c90657479f" translate="yes" xml:space="preserve">
          <source>If any other type of object is found, the events used so far in the lookup form a complete key, and the object is its binding, but the binding is not executable as a command.</source>
          <target state="translated">如果找到任何其他类型的对象,到目前为止,在查找中使用的事件形成了一个完整的键,该对象就是它的绑定,但该绑定不能作为命令执行。</target>
        </trans-unit>
        <trans-unit id="1d8e8479db6971bdadb82163778c2d31bd749b04" translate="yes" xml:space="preserve">
          <source>If any text in the region already has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;face&lt;/code&gt; property, those face(s) are retained. This function sets the &lt;code&gt;face&lt;/code&gt; property to a list of faces, with &lt;var&gt;face&lt;/var&gt; as the first element (by default) and the pre-existing faces as the remaining elements. If the optional argument &lt;var&gt;appendp&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;face&lt;/var&gt; is appended to the end of the list instead. Note that in a face list, the first occurring value for each attribute takes precedence.</source>
          <target state="translated">如果在该区域的任何文本已经具有非 &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;face&lt;/code&gt; 属性，面部的那些（一个或多个）被保留。此函数将 &lt;code&gt;face&lt;/code&gt; 属性设置为面孔列表，其中 &lt;var&gt;face&lt;/var&gt; 作为第一个元素（默认），而预先存在的faces作为其余元素。如果可选参数 &lt;var&gt;appendp&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ， &lt;var&gt;face&lt;/var&gt; 被附加到列表的末尾来代替。请注意，在面部列表中，每个属性的第一个出现值优先。</target>
        </trans-unit>
        <trans-unit id="6f6bfe9f1061d8adf7f832f1826f0f50c0156163" translate="yes" xml:space="preserve">
          <source>If appropriate, it creates a graphical frame. As part of creating the graphical frame, it initializes the window system specified by &lt;code&gt;initial-frame-alist&lt;/code&gt; and &lt;code&gt;default-frame-alist&lt;/code&gt; (see &lt;a href=&quot;initial-parameters#Initial-Parameters&quot;&gt;Initial Parameters&lt;/a&gt;) for the graphical frame, by calling the &lt;code&gt;window-system-initialization&lt;/code&gt; function for that window system. This is not done in batch (noninteractive) or daemon mode.</source>
          <target state="translated">如果合适，它将创建一个图形框架。作为创建图形框架的一部分，它通过调用该 &lt;code&gt;window-system-initialization&lt;/code&gt; 的window-system-initialization函数来初始化由图形框架的 &lt;code&gt;initial-frame-alist&lt;/code&gt; 和 &lt;code&gt;default-frame-alist&lt;/code&gt; 指定的窗口系统（请参阅&lt;a href=&quot;initial-parameters#Initial-Parameters&quot;&gt;Initial Parameters&lt;/a&gt;）。这不是以批处理（非交互式）或守护程序模式完成的。</target>
        </trans-unit>
        <trans-unit id="0be5fcf223e7492c26c34f33aba4f7281833b444" translate="yes" xml:space="preserve">
          <source>If argument &lt;var&gt;preserve-uid-gid&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, we let the operating system decide the user and group ownership of the new file (this is usually set to the user running Emacs). If &lt;var&gt;preserve-uid-gid&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, we attempt to copy the user and group ownership of the file. This works only on some operating systems, and only if you have the correct permissions to do so.</source>
          <target state="translated">如果参数 &lt;var&gt;preserve-uid-gid&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则让操作系统决定新文件的用户和组所有权（通常将其设置为运行Emacs的用户）。如果 &lt;var&gt;preserve-uid-gid&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，我们将尝试复制该文件的用户和组所有权。这仅在某些操作系统上有效，并且只有在您具有相应权限的情况下才可以使用。</target>
        </trans-unit>
        <trans-unit id="b901b43ecef22f92e6dad567b955ac1454dffa56" translate="yes" xml:space="preserve">
          <source>If at garbage collection time the undo info for the current command exceeds this limit, Emacs discards the info and displays a warning. This is a last ditch limit to prevent memory overflow.</source>
          <target state="translated">如果在垃圾回收的时候,当前命令的undo信息超过了这个限制,Emacs就会丢弃这些信息并显示一个警告。这是防止内存溢出的最后限制。</target>
        </trans-unit>
        <trans-unit id="7a492759d0b9fd8e5bf98107c2695c5fae247780" translate="yes" xml:space="preserve">
          <source>If both &lt;code&gt;:max-width&lt;/code&gt; and &lt;code&gt;:height&lt;/code&gt; are specified, but &lt;code&gt;:width&lt;/code&gt; is not, preserving the aspect ratio might require that width exceeds &lt;code&gt;:max-width&lt;/code&gt;. If this happens, scaling will use a smaller value for the height so as to preserve the aspect ratio while not exceeding &lt;code&gt;:max-width&lt;/code&gt;. Similarly when both &lt;code&gt;:max-height&lt;/code&gt; and &lt;code&gt;:width&lt;/code&gt; are specified, but &lt;code&gt;:height&lt;/code&gt; is not. For example, if you have a 200x100 image and specify that &lt;code&gt;:width&lt;/code&gt; should be 400 and &lt;code&gt;:max-height&lt;/code&gt; should be 150, you&amp;rsquo;ll end up with an image that is 300x150: Preserving the aspect ratio and not exceeding the &amp;ldquo;max&amp;rdquo; setting. This combination of parameters is a useful way of saying &amp;ldquo;display this image as large as possible, but no larger than the available display area&amp;rdquo;.</source>
          <target state="translated">如果同时指定了 &lt;code&gt;:max-width&lt;/code&gt; 和 &lt;code&gt;:height&lt;/code&gt; ，但未指定 &lt;code&gt;:width&lt;/code&gt; ，则保留宽高比可能要求宽度超过 &lt;code&gt;:max-width&lt;/code&gt; 。如果发生这种情况，缩放将使用较小的高度值，以在不超过 &lt;code&gt;:max-width&lt;/code&gt; 的情况下保持宽高比。同样，当同时指定 &lt;code&gt;:max-height&lt;/code&gt; 和 &lt;code&gt;:width&lt;/code&gt; ，但未指定 &lt;code&gt;:height&lt;/code&gt; 时。例如，如果您有200x100的图片，并指定 &lt;code&gt;:width&lt;/code&gt; 应该为400，而 &lt;code&gt;:max-height&lt;/code&gt; 应该为150，则最终会得到300x150的图像：保留宽高比且不超过&amp;ldquo;最大&amp;rdquo;设置。参数的这种组合是&amp;ldquo;显示尽可能大的图像，但不大于可用显示区域&amp;rdquo;的有用方式。</target>
        </trans-unit>
        <trans-unit id="b0ee3f6c00c1b8ce8a38eb0b6b009d345cdf245e" translate="yes" xml:space="preserve">
          <source>If both &lt;var&gt;target&lt;/var&gt; and &lt;var&gt;linkname&lt;/var&gt; have remote file name syntax, and if both remote identifications are equal, the symbolic link points to the local file name part of &lt;var&gt;target&lt;/var&gt;.</source>
          <target state="translated">如果 &lt;var&gt;target&lt;/var&gt; 和 &lt;var&gt;linkname&lt;/var&gt; 都具有远程文件名语法，并且两个远程标识都相等，则符号链接指向 &lt;var&gt;target&lt;/var&gt; 的本地文件名部分。</target>
        </trans-unit>
        <trans-unit id="cb151627cc061abee8d8bf5fa108eaf13699a0a3" translate="yes" xml:space="preserve">
          <source>If called from Lisp with a non-&lt;code&gt;nil&lt;/code&gt;&lt;var&gt;buffer&lt;/var&gt; argument, this function displays the documentation for that buffer&amp;rsquo;s major and minor modes, rather than those of the current buffer.</source>
          <target state="translated">如果从Lisp的调用非 &lt;code&gt;nil&lt;/code&gt; &lt;var&gt;buffer&lt;/var&gt; 的说法，该功能显示文档该缓冲区的主要和次要的模式，而不是那些当前缓冲区。</target>
        </trans-unit>
        <trans-unit id="b78048003acdb1229558285b58cce83d7ed8a966" translate="yes" xml:space="preserve">
          <source>If called interactively with no prefix argument, this command invokes a transient mode for adjusting indentation rigidly. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Indentation-Commands.html#Indentation-Commands&quot;&gt;Indentation Commands&lt;/a&gt; in</source>
          <target state="translated">如果以无前缀参数的方式交互式调用，则此命令将调用过渡模式以严格调整缩进。见&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Indentation-Commands.html#Indentation-Commands&quot;&gt;压痕命令&lt;/a&gt;中</target>
        </trans-unit>
        <trans-unit id="a2f05e0f166dde8de0bcdfd83d874da97c808afc" translate="yes" xml:space="preserve">
          <source>If called interactively, this command prompts for &lt;var&gt;character&lt;/var&gt; using its Unicode name or its code point. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Inserting-Text.html#Inserting-Text&quot;&gt;Inserting Text&lt;/a&gt; in</source>
          <target state="translated">如果以交互方式调用，此命令将使用其Unicode名称或代码点提示输入 &lt;var&gt;character&lt;/var&gt; 。参见&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Inserting-Text.html#Inserting-Text&quot;&gt;插入文本&lt;/a&gt;中</target>
        </trans-unit>
        <trans-unit id="bec58c9c6f7e1d78b7e04af503844fbe0b77e8d8" translate="yes" xml:space="preserve">
          <source>If called non-interactively, &lt;var&gt;mode&lt;/var&gt; must be an integer. Only the lowest 12 bits of the integer are used; on most systems, only the lowest 9 bits are meaningful. You can use the Lisp construct for octal numbers to enter &lt;var&gt;mode&lt;/var&gt;. For example,</source>
          <target state="translated">如果以非交互 &lt;var&gt;mode&lt;/var&gt; 调用，则mode必须为整数。仅使用整数的最低12位；否则，将使用整数。在大多数系统上，只有最低的9位才有意义。您可以使用Lisp构造八进制数进入 &lt;var&gt;mode&lt;/var&gt; 。例如，</target>
        </trans-unit>
        <trans-unit id="697a3e2341919babe955a417091c1d61e468dd0f" translate="yes" xml:space="preserve">
          <source>If compiled with GnuTLS, Emacs offers built-in cryptographic support. Following the GnuTLS API terminology, the available tools are digests, MACs, symmetric ciphers, and AEAD ciphers.</source>
          <target state="translated">如果编译了GnuTLS,Emacs提供了内置的加密支持。按照GnuTLS API术语,可用的工具有摘要、MAC、对称密码和AEAD密码。</target>
        </trans-unit>
        <trans-unit id="0b4caab5499880569503f08e74d47fa52d4abb14" translate="yes" xml:space="preserve">
          <source>If consecutive characters have unequal non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;intangible&lt;/code&gt; properties, they belong to separate groups; each group is separately treated as described above.</source>
          <target state="translated">如果连续字符有不平等的非 &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;intangible&lt;/code&gt; 性质，它们属于不同的组; 每个组均如上所述进行单独处理。</target>
        </trans-unit>
        <trans-unit id="8861219114987340fa0175b8d8040faddf5d79f9" translate="yes" xml:space="preserve">
          <source>If decoded text is inserted in some buffer, this command returns the length of the decoded text. If that buffer is a unibyte buffer (see &lt;a href=&quot;selecting-a-representation#Selecting-a-Representation&quot;&gt;Selecting a Representation&lt;/a&gt;), the internal representation of the decoded text (see &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Text Representations&lt;/a&gt;) is inserted into the buffer as individual bytes.</source>
          <target state="translated">如果在某些缓冲区中插入了解码文本，则此命令将返回解码文本的长度。如果该缓冲区是单字节缓冲区（请参见&lt;a href=&quot;selecting-a-representation#Selecting-a-Representation&quot;&gt;选择表示形式&lt;/a&gt;），则已解码文本的内部表示形式（请参见&lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Text Representations&lt;/a&gt;）将作为单个字节插入到缓冲区中。</target>
        </trans-unit>
        <trans-unit id="1868b5514617e7be689264a4de2fe369509204fb" translate="yes" xml:space="preserve">
          <source>If deleting the window would leave no more windows in the window tree (e.g., if it is the only live window in the frame) or all remaining windows on &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s frame are side windows (see &lt;a href=&quot;side-windows#Side-Windows&quot;&gt;Side Windows&lt;/a&gt;), an error is signaled. If &lt;var&gt;window&lt;/var&gt; is part of an atomic window (see &lt;a href=&quot;atomic-windows#Atomic-Windows&quot;&gt;Atomic Windows&lt;/a&gt;), this function tries to delete the root of that atomic window instead.</source>
          <target state="translated">如果删除窗口会留下没有更多的窗口在窗口树（例如，如果它是在框架中唯一的实况窗口），或在所有其他的窗口 &lt;var&gt;window&lt;/var&gt; 的框架被侧窗（见&lt;a href=&quot;side-windows#Side-Windows&quot;&gt;侧窗&lt;/a&gt;），发出错误信号。如果 &lt;var&gt;window&lt;/var&gt; 是原子窗口的一部分（请参阅&lt;a href=&quot;atomic-windows#Atomic-Windows&quot;&gt;Atomic Windows&lt;/a&gt;），则此函数尝试删除该原子窗口的根。</target>
        </trans-unit>
        <trans-unit id="17cc98f8b3f5bbd9f9adfc31e26ce49f0be6a385" translate="yes" xml:space="preserve">
          <source>If either of these functions is called in a command that was invoked using the mouse&amp;mdash;more precisely, if &lt;code&gt;last-nonmenu-event&lt;/code&gt; (see &lt;a href=&quot;command-loop-info#Command-Loop-Info&quot;&gt;Command Loop Info&lt;/a&gt;) is either &lt;code&gt;nil&lt;/code&gt; or a list&amp;mdash;then it uses a dialog box or pop-up menu to ask the question. Otherwise, it uses keyboard input. You can force use either of the mouse or of keyboard input by binding &lt;code&gt;last-nonmenu-event&lt;/code&gt; to a suitable value around the call.</source>
          <target state="translated">如果在使用鼠标调用的命令中调用了这两个函数中的任意一个（更确切地说，如果 &lt;code&gt;last-nonmenu-event&lt;/code&gt; （请参见&lt;a href=&quot;command-loop-info#Command-Loop-Info&quot;&gt;Command Loop Info&lt;/a&gt;）为 &lt;code&gt;nil&lt;/code&gt; 或列表，则使用对话框或弹出菜单问这个问题。否则，它将使用键盘输入。通过将 &lt;code&gt;last-nonmenu-event&lt;/code&gt; 绑定到调用周围的适当值，可以强制使用鼠标或键盘输入。</target>
        </trans-unit>
        <trans-unit id="45bf1b4255bac8c96c5cbfb0ef79309aaa2aa0fc" translate="yes" xml:space="preserve">
          <source>If encoded text is inserted in some buffer, this command returns the length of the encoded text.</source>
          <target state="translated">如果在某个缓冲区中插入了编码文本,则该命令返回编码文本的长度。</target>
        </trans-unit>
        <trans-unit id="7cfcf382829c0a591a31d5f1858635938f636235" translate="yes" xml:space="preserve">
          <source>If every &lt;var&gt;condition&lt;/var&gt; evaluates to &lt;code&gt;nil&lt;/code&gt;, so that every clause fails, &lt;code&gt;cond&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果每个 &lt;var&gt;condition&lt;/var&gt; 计算结果 &lt;code&gt;nil&lt;/code&gt; ，则每个子句均失败， &lt;code&gt;cond&lt;/code&gt; 返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="16b308e442a51b045935b6909d71f2c02991dcac" translate="yes" xml:space="preserve">
          <source>If functions are defined programmatically (with &lt;code&gt;fset&lt;/code&gt; say), then &lt;code&gt;eval-and-compile&lt;/code&gt; can be used to have that done at compile-time as well as run-time, so calls to those functions are checked (and warnings about &amp;ldquo;not known to be defined&amp;rdquo; suppressed).</source>
          <target state="translated">如果函数是通过编程定义的（使用 &lt;code&gt;fset&lt;/code&gt; 表示），则可以使用 &lt;code&gt;eval-and-compile&lt;/code&gt; 在编译时和运行时完成该操作，因此将检查对这些函数的调用（并警告&amp;ldquo;关于未知&amp;rdquo;被定义&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="5c129c5231bb00580890ea0f7117085c0fa3bf61" translate="yes" xml:space="preserve">
          <source>If given, this should be the identifier of a previously defined gradient object.</source>
          <target state="translated">如果给定,这应该是先前定义的梯度对象的标识符。</target>
        </trans-unit>
        <trans-unit id="7e6a51a5498996905b492caacc6859cb50ba7919" translate="yes" xml:space="preserve">
          <source>If image transforms are not supported, &lt;code&gt;:rotation&lt;/code&gt;, &lt;code&gt;:crop&lt;/code&gt;, &lt;code&gt;:width&lt;/code&gt;, &lt;code&gt;:height&lt;/code&gt;, &lt;code&gt;:scale&lt;/code&gt;, &lt;code&gt;:max-width&lt;/code&gt; and &lt;code&gt;:max-height&lt;/code&gt; will only be usable through ImageMagick, if available (see &lt;a href=&quot;imagemagick-images#ImageMagick-Images&quot;&gt;ImageMagick Images&lt;/a&gt;).</source>
          <target state="translated">如果不支持图像变换，则 &lt;code&gt;:rotation&lt;/code&gt; ， &lt;code&gt;:crop&lt;/code&gt; ， &lt;code&gt;:width&lt;/code&gt; ， &lt;code&gt;:height&lt;/code&gt; ， &lt;code&gt;:scale&lt;/code&gt; ， &lt;code&gt;:max-width&lt;/code&gt; 和 &lt;code&gt;:max-height&lt;/code&gt; 仅可通过ImageMagick使用（如果可用）（请参见&lt;a href=&quot;imagemagick-images#ImageMagick-Images&quot;&gt;ImageMagick Images&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="be1841000b7ca7ecd02fe657726d303725073556" translate="yes" xml:space="preserve">
          <source>If in doubt, use &lt;code&gt;any&lt;/code&gt;; the only known proper use of &lt;code&gt;interactive&lt;/code&gt; is if you need to decide whether to display a helpful message while a function is running.</source>
          <target state="translated">如果有疑问，可以使用 &lt;code&gt;any&lt;/code&gt; ; &lt;code&gt;interactive&lt;/code&gt; 的唯一已知的正确用法是，如果需要确定在功能运行时是否显示有用的消息。</target>
        </trans-unit>
        <trans-unit id="25d359ce61cf8c815d198212ff26252c75ac0564" translate="yes" xml:space="preserve">
          <source>If it doesn&amp;rsquo;t find a suitable window, this function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果找不到合适的窗口，则此函数返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d663e9f71b40bc3b791ff1f7fbbfe0e96c637a33" translate="yes" xml:space="preserve">
          <source>If it is -1, that means auto-saving is temporarily shut off in this buffer due to a substantial decrease in size. Explicitly saving the buffer stores a positive value in this variable, thus reenabling auto-saving. Turning auto-save mode off or on also updates this variable, so that the substantial decrease in size is forgotten.</source>
          <target state="translated">如果是-1,意味着由于缓冲区的大小大幅减少,自动保存被暂时关闭。明确保存缓冲区会在这个变量中存储一个正值,从而重新启用自动保存。关闭或开启自动保存模式也会更新这个变量,这样就会忘记缓冲区大小的大幅减少。</target>
        </trans-unit>
        <trans-unit id="c3fcc3cec543bf1340c5f3eed0b2d2edd23dc9d2" translate="yes" xml:space="preserve">
          <source>If it is -2, that means this buffer should disregard changes in buffer size; in particular, it should not shut off auto-saving temporarily due to changes in buffer size.</source>
          <target state="translated">如果是-2,表示这个缓冲区应该不考虑缓冲区大小的变化,特别是不应该因为缓冲区大小的变化而暂时关闭自动保存。</target>
        </trans-unit>
        <trans-unit id="26f7b148788693e43d5b15be6a524986c17c9bdf" translate="yes" xml:space="preserve">
          <source>If it is &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;split-window-below&lt;/code&gt; adjusts point in each of the two windows to minimize redisplay. (This is useful on slow terminals.) It selects whichever window contains the screen line that point was previously on. Note that this only affects &lt;code&gt;split-window-below&lt;/code&gt;, not the lower-level &lt;code&gt;split-window&lt;/code&gt; function.</source>
          <target state="translated">如果为 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;split-window-below&lt;/code&gt; 在以下两个窗口中的每个窗口中调整点，以最大程度地减少重新显示。（这对于慢速终端很有用。）它将选择包含先前指向该点的屏幕线的任何窗口。请注意，这仅影响 &lt;code&gt;split-window-below&lt;/code&gt; 而不影响较低级别的 &lt;code&gt;split-window&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="75bb0c08c9579f4b67e1bdcee5654535bf0851c8" translate="yes" xml:space="preserve">
          <source>If it is impossible to move to column &lt;var&gt;column&lt;/var&gt; because that is in the middle of a multicolumn character such as a tab, point moves to the end of that character. However, if &lt;var&gt;force&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, and &lt;var&gt;column&lt;/var&gt; is in the middle of a tab, then &lt;code&gt;move-to-column&lt;/code&gt; either converts the tab into spaces (when &lt;code&gt;indent-tabs-mode&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;), or inserts enough spaces before it (otherwise), so that point can move precisely to column &lt;var&gt;column&lt;/var&gt;. Other multicolumn characters can cause anomalies despite &lt;var&gt;force&lt;/var&gt;, since there is no way to split them.</source>
          <target state="translated">如果由于在多列字符（例如制表符）的中间而无法移动到column &lt;var&gt;column&lt;/var&gt; ，则点将移动到该字符的末尾。但是，如果 &lt;var&gt;force&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，并且 &lt;var&gt;column&lt;/var&gt; 位于选项卡的中间，则 &lt;code&gt;move-to-column&lt;/code&gt; 要么将选项卡转换为空格（当 &lt;code&gt;indent-tabs-mode&lt;/code&gt; 为 &lt;code&gt;nil&lt;/code&gt; 时），要么在其之前插入足够的空格（否则） ），以便该点可以精确地移至column &lt;var&gt;column&lt;/var&gt; 。尽管没有 &lt;var&gt;force&lt;/var&gt; ，但其他多列字符仍可能导致异常，因为无法拆分它们。</target>
        </trans-unit>
        <trans-unit id="4c061e5992b432ab0822e64b7514d9bc023cedfe" translate="yes" xml:space="preserve">
          <source>If it is impossible to obtain the load average, this function signals an error. On some platforms, access to load averages requires installing Emacs as setuid or setgid so that it can read kernel information, and that usually isn&amp;rsquo;t advisable.</source>
          <target state="translated">如果无法获得平均负载，则此功能会发出错误信号。在某些平台上，要访问平均负载，需要将Emacs安装为setuid或setgid，以便它可以读取内核信息，通常不建议这样做。</target>
        </trans-unit>
        <trans-unit id="7758a8649ab676d21a46b78499adca1ee262c836" translate="yes" xml:space="preserve">
          <source>If it is possible to move &lt;var&gt;count&lt;/var&gt; words, without being stopped prematurely by the buffer boundary or a field boundary, the value is &lt;code&gt;t&lt;/code&gt;. Otherwise, the return value is &lt;code&gt;nil&lt;/code&gt; and point stops at the buffer boundary or field boundary.</source>
          <target state="translated">如果可以移动 &lt;var&gt;count&lt;/var&gt; 而不被缓冲区边界或字段边界过早停止，则值为 &lt;code&gt;t&lt;/code&gt; 。否则，返回值为 &lt;code&gt;nil&lt;/code&gt; ,并且点在缓冲区边界或字段边界处停止。</target>
        </trans-unit>
        <trans-unit id="fd9b78d9850bcf0fff88ff5b620b111b6dc77cc2" translate="yes" xml:space="preserve">
          <source>If its value is &lt;code&gt;width-only&lt;/code&gt;, sizes are evened only if the reused window is on the left or right of the selected one and the selected window is wider than the reused one. If its value is &lt;code&gt;height-only&lt;/code&gt; sizes are evened only if the reused window is above or beneath the selected window and the selected window is higher than the reused one. Any other non-&lt;code&gt;nil&lt;/code&gt; value means to even sizes in any of these cases provided the selected window is larger than the reused one in the sense of their combination.</source>
          <target state="translated">如果其值是 &lt;code&gt;width-only&lt;/code&gt; ，则仅当重用窗口在所选窗口的左侧或右侧且所选窗口比重用窗口宽时，才使尺寸均匀。如果其值是 &lt;code&gt;height-only&lt;/code&gt; 则仅当重用的窗口在所选窗口的上方或下方且所选窗口高于重用的窗口时，大小才会相等。任何其它非 &lt;code&gt;nil&lt;/code&gt; 值的装置，即使在尺寸任何这些情况下，提供所选择的窗口比在它们的组合的意义上的再利用一个大。</target>
        </trans-unit>
        <trans-unit id="a382ec562741e63e7998a124cb803b1183dfef44" translate="yes" xml:space="preserve">
          <source>If loading the file succeeds but does not provide &lt;var&gt;feature&lt;/var&gt;, &lt;code&gt;require&lt;/code&gt; signals an error about the missing feature.</source>
          <target state="translated">如果加载文件成功但不提供 &lt;var&gt;feature&lt;/var&gt; ，则 &lt;code&gt;require&lt;/code&gt; 会发出有关缺少功能的错误的信号。</target>
        </trans-unit>
        <trans-unit id="1c9993b616405d69a26202591fe2c37eafc12f84" translate="yes" xml:space="preserve">
          <source>If more than one frame is considered, the cyclic ordering is obtained by appending the orderings for those frames, in the same order as the list of all live frames (see &lt;a href=&quot;finding-all-frames#Finding-All-Frames&quot;&gt;Finding All Frames&lt;/a&gt;).</source>
          <target state="translated">如果考虑多个帧，则通过以与所有活动帧的列表相同的顺序附加这些帧的顺序来获得循环排序（请参阅&lt;a href=&quot;finding-all-frames#Finding-All-Frames&quot;&gt;查找所有帧&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="caf0360b452a602e7271a13c236426dd72800cb8" translate="yes" xml:space="preserve">
          <source>If more than one window qualifies as usable according to these rules, this function makes a choice in the following order of preference:</source>
          <target state="translated">如果根据这些规则,有多个窗口符合使用条件,则该函数按以下优先顺序进行选择。</target>
        </trans-unit>
        <trans-unit id="60ca5dbda750b8d340c893a8fd68059aff011a7b" translate="yes" xml:space="preserve">
          <source>If narrowing is in effect, &lt;var&gt;position&lt;/var&gt; still counts from the beginning of the buffer, but point cannot go outside the accessible portion. If &lt;var&gt;position&lt;/var&gt; is out of range, &lt;code&gt;goto-char&lt;/code&gt; moves point to the beginning or the end of the accessible portion.</source>
          <target state="translated">如果缩小有效，则 &lt;var&gt;position&lt;/var&gt; 仍从缓冲区的开头算起，但是点不能超出可访问部分。如果 &lt;var&gt;position&lt;/var&gt; 超出范围，则 &lt;code&gt;goto-char&lt;/code&gt; 将指向可访问部分的开头或结尾。</target>
        </trans-unit>
        <trans-unit id="4da11780726f2d02db95b81120b41418f94d288c" translate="yes" xml:space="preserve">
          <source>If no &lt;var&gt;sequences&lt;/var&gt; are given, &lt;code&gt;nil&lt;/code&gt; is returned:</source>
          <target state="translated">如果没有给出 &lt;var&gt;sequences&lt;/var&gt; ，则返回 &lt;code&gt;nil&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="afa63ffa83226e6d4d0087510463ec804351a8e2" translate="yes" xml:space="preserve">
          <source>If no alist element matches &lt;var&gt;key&lt;/var&gt;, &lt;code&gt;assoc-default&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果没有alist元素与 &lt;var&gt;key&lt;/var&gt; 匹配，则 &lt;code&gt;assoc-default&lt;/code&gt; 返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="099527a76ee688c1972fba42fc2746eb0aa78de6" translate="yes" xml:space="preserve">
          <source>If no instrumented code is being executed when &lt;code&gt;edebug&lt;/code&gt; is called, that function calls &lt;code&gt;debug&lt;/code&gt;.</source>
          <target state="translated">如果在 &lt;code&gt;edebug&lt;/code&gt; 时未执行任何检测代码，则该函数将调用 &lt;code&gt;debug&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3b7902d119289744c9c60b8e9ba8734e44d393c2" translate="yes" xml:space="preserve">
          <source>If no matching character or flags are needed, only one character (specifying the syntax class) is sufficient.</source>
          <target state="translated">如果不需要匹配字符或标志,只需要一个字符(指定语法类)即可。</target>
        </trans-unit>
        <trans-unit id="6635be92db6b49ff346c8530d9044f8cfebe5e76" translate="yes" xml:space="preserve">
          <source>If no return point is in effect with tag &lt;var&gt;tag&lt;/var&gt;, then a &lt;code&gt;no-catch&lt;/code&gt; error is signaled with data &lt;code&gt;(&lt;var&gt;tag&lt;/var&gt; &lt;var&gt;value&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">如果标签 &lt;var&gt;tag&lt;/var&gt; 没有有效的返回点，则通过数据 &lt;code&gt;(&lt;var&gt;tag&lt;/var&gt; &lt;var&gt;value&lt;/var&gt;)&lt;/code&gt; &lt;var&gt;tag&lt;/var&gt; &lt;var&gt;value&lt;/var&gt; ）发出 &lt;code&gt;no-catch&lt;/code&gt; 错误信号。</target>
        </trans-unit>
        <trans-unit id="c623989ecb4b6aa623ded291c555cd7366aec465" translate="yes" xml:space="preserve">
          <source>If no sentinel function was specified for a process, it will use the default sentinel function, which inserts a message in the process&amp;rsquo;s buffer with the process name and the string describing the event.</source>
          <target state="translated">如果没有为进程指定哨兵功能，它将使用默认的哨兵功能，该功能将一条消息插入到进程的缓冲区中，其中包含进程名称和描述事件的字符串。</target>
        </trans-unit>
        <trans-unit id="fc7669396f72d8863e9cf2e15da6cad47eca550a" translate="yes" xml:space="preserve">
          <source>If no specific base offset is set for alignment, it is always relative to the left edge of the text area. For example, &amp;lsquo;</source>
          <target state="translated">如果未设置用于对齐的特定基本偏移，则该偏移始终相对于文本区域的左边缘。例如， '</target>
        </trans-unit>
        <trans-unit id="2d6c0df365fb46197c73cec7c0435c48adc4054f" translate="yes" xml:space="preserve">
          <source>If no suitable buffer exists, the buffer</source>
          <target state="translated">如果不存在合适的缓冲区,则缓冲区</target>
        </trans-unit>
        <trans-unit id="92a082cb753749db0e7088ebfc66a0bc66e1e3da" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt; such an entry tells Emacs to preserve the size of the window chosen (see &lt;a href=&quot;preserving-window-sizes#Preserving-Window-Sizes&quot;&gt;Preserving Window Sizes&lt;/a&gt;). The value should be either &lt;code&gt;(t&amp;nbsp;.&amp;nbsp;nil)&lt;/code&gt; to preserve the width of the window, &lt;code&gt;(nil&amp;nbsp;.&amp;nbsp;t)&lt;/code&gt; to preserve its height or &lt;code&gt;(t&amp;nbsp;.&amp;nbsp;t)&lt;/code&gt; to preserve both, its width and its height. This entry should be processed only under certain conditions which are specified right after this list.</source>
          <target state="translated">如果非 &lt;code&gt;nil&lt;/code&gt; 这样的条目告诉Emacs的保存选择的窗口大小（见&lt;a href=&quot;preserving-window-sizes#Preserving-Window-Sizes&quot;&gt;保留窗口大小&lt;/a&gt;）。该值应为 &lt;code&gt;(t&amp;nbsp;.&amp;nbsp;nil)&lt;/code&gt; 以保留窗口的宽度，为 &lt;code&gt;(nil&amp;nbsp;.&amp;nbsp;t)&lt;/code&gt; 以保留其高度，或为 &lt;code&gt;(t&amp;nbsp;.&amp;nbsp;t)&lt;/code&gt; 既保留其宽度也要保留其高度。只能在此列表后立即指定的某些条件下处理此条目。</target>
        </trans-unit>
        <trans-unit id="2df23b09dda1e396597f8ec06e758ffb6362d745" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, Edebug binds &lt;code&gt;print-circle&lt;/code&gt; to this value while printing results. The default value is &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">如果为非 &lt;code&gt;nil&lt;/code&gt; ，则Edebug在打印结果时将 &lt;code&gt;print-circle&lt;/code&gt; 绑定到该值。默认值为 &lt;code&gt;t&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c8b4d06f0cea614db276930788a603afccf902aa" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, Edebug binds &lt;code&gt;print-length&lt;/code&gt; to this value while printing results. The default value is &lt;code&gt;50&lt;/code&gt;.</source>
          <target state="translated">如果为非 &lt;code&gt;nil&lt;/code&gt; ，则Edebug在打印结果时将 &lt;code&gt;print-length&lt;/code&gt; 绑定到该值。默认值为 &lt;code&gt;50&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ebac442e709eda708f773e90646194acc862b933" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, Edebug binds &lt;code&gt;print-level&lt;/code&gt; to this value while printing results. The default value is &lt;code&gt;50&lt;/code&gt;.</source>
          <target state="translated">如果为非 &lt;code&gt;nil&lt;/code&gt; ，则Edebug在打印结果时将 &lt;code&gt;print-level&lt;/code&gt; 绑定到该值。默认值为 &lt;code&gt;50&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e5bbdc3e349ee9de9df4fff61c4ed3ebcd61f2ff" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, Edebug tests coverage of all expressions debugged. See &lt;a href=&quot;coverage-testing#Coverage-Testing&quot;&gt;Coverage Testing&lt;/a&gt;.</source>
          <target state="translated">如果为非 &lt;code&gt;nil&lt;/code&gt; ，则Edebug会测试所有已调试表达式的覆盖率。请参阅&lt;a href=&quot;coverage-testing#Coverage-Testing&quot;&gt;覆盖率测试&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cf21ba8fe3d5a3afec7e5ab377e09959c68764d5" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, Edebug tries to remove any of its own instrumentation when showing the results of expressions. This is relevant when debugging macros where the results of expressions are themselves instrumented expressions. As a very artificial example, suppose that the example function &lt;code&gt;fac&lt;/code&gt; has been instrumented, and consider a macro of the form:</source>
          <target state="translated">如果为非 &lt;code&gt;nil&lt;/code&gt; ，则Edebug在显示表达式结果时会尝试删除其自身的任何工具。这在调试宏时很重要，在宏中，表达式的结果本身就是检测的表达式。作为一个非常人为的示例，假设已经检测了示例函数 &lt;code&gt;fac&lt;/code&gt; ，并考虑以下形式的宏：</target>
        </trans-unit>
        <trans-unit id="06f558a0db32f216e4552c38fae062a52450fbe2" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, Emacs automatically lowers the frame when it is deselected. Some window managers do not allow this.</source>
          <target state="translated">如果为非 &lt;code&gt;nil&lt;/code&gt; ，则取消选择时，Emacs会自动降低框架。一些窗口管理器不允许这样做。</target>
        </trans-unit>
        <trans-unit id="d0f999f9fb0c1cb7b78d9f1e89393cdc199fe103" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, Emacs automatically raises the frame when it is selected. Some window managers do not allow this.</source>
          <target state="translated">如果为非 &lt;code&gt;nil&lt;/code&gt; ，则选择Emacs时会自动升起框架。一些窗口管理器不允许这样做。</target>
        </trans-unit>
        <trans-unit id="9c3f60d0c9b1e0439fcfc255da11300a37a2873b" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, always ask for the server&amp;rsquo;s capabilities, even when doing a &amp;lsquo;</source>
          <target state="translated">如果为非 &lt;code&gt;nil&lt;/code&gt; ，则始终要求服务器的功能，即使执行&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="8297a79a55a2079d3efa603d16f6eb1d0132e092" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, an expression to test for at every stop point. If the result is non-&lt;code&gt;nil&lt;/code&gt;, then break. Errors are ignored. See &lt;a href=&quot;global-break-condition#Global-Break-Condition&quot;&gt;Global Break Condition&lt;/a&gt;.</source>
          <target state="translated">如果为非 &lt;code&gt;nil&lt;/code&gt; ，则在每个停止点进行测试的表达式。如果结果为非 &lt;code&gt;nil&lt;/code&gt; ，则中断。错误将被忽略。请参阅&lt;a href=&quot;global-break-condition#Global-Break-Condition&quot;&gt;全局中断条件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="86b7764a4b5a389fb150dcdc9c80efb20f92bc18" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, and &lt;code&gt;:return-value&lt;/code&gt; is also non-&lt;code&gt;nil&lt;/code&gt;, Emacs will warn if the connection isn&amp;rsquo;t encrypted. This is useful for protocols like</source>
          <target state="translated">如果 &lt;code&gt;nil&lt;/code&gt; 和 &lt;code&gt;:return-value&lt;/code&gt; 也是 &lt;code&gt;nil&lt;/code&gt; ，则如果连接未加密，Emacs将发出警告。这对于像这样的协议很有用</target>
        </trans-unit>
        <trans-unit id="434f9fa211c26b9ea10b34c88422ffccf1a3d1fa" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, continue defining or executing any keyboard macro that is executing outside of Edebug. Use this with caution since it is not debugged. See &lt;a href=&quot;edebug-execution-modes#Edebug-Execution-Modes&quot;&gt;Edebug Execution Modes&lt;/a&gt;.</source>
          <target state="translated">如果为非 &lt;code&gt;nil&lt;/code&gt; ，则继续定义或执行在Edebug之外执行的任何键盘宏。由于未调试，请谨慎使用。请参阅&lt;a href=&quot;edebug-execution-modes#Edebug-Execution-Modes&quot;&gt;Edebug执行模式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="09f55e7f1ed0753693dffc3dd3c1787fc1a815e1" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, do opportunistic</source>
          <target state="translated">如果不是 &lt;code&gt;nil&lt;/code&gt; ，则采取机会主义</target>
        </trans-unit>
        <trans-unit id="3c1e8b6c51588a7fe1f3ca87b947b981bc73afc8" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, such an entry tells &lt;code&gt;display-buffer&lt;/code&gt; to mark any window it creates as dedicated to its buffer (see &lt;a href=&quot;dedicated-windows#Dedicated-Windows&quot;&gt;Dedicated Windows&lt;/a&gt;). It does that by calling &lt;code&gt;set-window-dedicated-p&lt;/code&gt; with the chosen window as first argument and the entry&amp;rsquo;s value as second.</source>
          <target state="translated">如果为非 &lt;code&gt;nil&lt;/code&gt; ，则该条目告诉 &lt;code&gt;display-buffer&lt;/code&gt; 将其创建的任何窗口标记为专用于其缓冲区（请参见&amp;ldquo;&lt;a href=&quot;dedicated-windows#Dedicated-Windows&quot;&gt;专用Windows&amp;rdquo;&lt;/a&gt;）。它通过调用 &lt;code&gt;set-window-dedicated-p&lt;/code&gt; 来实现，将选定的窗口作为第一个参数，并将条目的值作为第二个参数。</target>
        </trans-unit>
        <trans-unit id="83842571f2da9dfd88127a81e7bd282c6bb11150" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, tell Xt to wait for the window manager to confirm geometry changes. Some window managers, including versions of Fvwm2 and KDE, fail to confirm, so Xt hangs. Set this to &lt;code&gt;nil&lt;/code&gt; to prevent hanging with those window managers.</source>
          <target state="translated">如果为非 &lt;code&gt;nil&lt;/code&gt; ，则告诉Xt等待窗口管理器确认几何形状更改。某些窗口管理器（包括Fvwm2和KDE的版本）无法确认，因此Xt挂起。将此设置为 &lt;code&gt;nil&lt;/code&gt; 可以防止与那些窗口管理器一起挂起。</target>
        </trans-unit>
        <trans-unit id="efd9a8e593ce9ad32fc830d9618b3acb28445443" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, that means number continuously across print calls. This affects the numbers printed for &amp;lsquo;</source>
          <target state="translated">如果为非 &lt;code&gt;nil&lt;/code&gt; ，则表示在打印调用中连续编号。这会影响为&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="2a4541e8d7c469c57e74b63f08c2025c97e0882c" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the</source>
          <target state="translated">如果不 &lt;code&gt;nil&lt;/code&gt; ，则</target>
        </trans-unit>
        <trans-unit id="9be8f94664dd4525417ea58d6dc2ff472536e701" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the color for the background of scroll bars. It is equivalent to the &lt;code&gt;:background&lt;/code&gt; attribute of the &lt;code&gt;scroll-bar&lt;/code&gt; face.</source>
          <target state="translated">如果为非 &lt;code&gt;nil&lt;/code&gt; ，则为滚动条背景的颜色。它等效于 &lt;code&gt;scroll-bar&lt;/code&gt; 表面的 &lt;code&gt;:background&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="a9ac4b1e76bdba2df8d1d561f666e5db1883fcc4" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the color for the foreground of scroll bars. It is equivalent to the &lt;code&gt;:foreground&lt;/code&gt; attribute of the &lt;code&gt;scroll-bar&lt;/code&gt; face.</source>
          <target state="translated">如果为非 &lt;code&gt;nil&lt;/code&gt; ，则为滚动条的前景色。它等效于 &lt;code&gt;scroll-bar&lt;/code&gt; 面板的 &lt;code&gt;:foreground&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="adc6455ac3165478fddd2e57e3f43c6b9d048a35" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the default value of &lt;code&gt;print-circle&lt;/code&gt; for printing results in Edebug. See &lt;a href=&quot;output-variables#Output-Variables&quot;&gt;Output Variables&lt;/a&gt;.</source>
          <target state="translated">如果为非 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;print-circle&lt;/code&gt; 的默认打印圆度将导致Edebug。请参见&lt;a href=&quot;output-variables#Output-Variables&quot;&gt;输出变量&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e96b1587470baab87f7e448864020eda5787b934" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the default value of &lt;code&gt;print-length&lt;/code&gt; for printing results in Edebug. See &lt;a href=&quot;output-variables#Output-Variables&quot;&gt;Output Variables&lt;/a&gt;.</source>
          <target state="translated">如果为非 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;print-length&lt;/code&gt; 的默认打印长度值将导致Edebug。请参见&lt;a href=&quot;output-variables#Output-Variables&quot;&gt;输出变量&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4e6e7e87e1c8258c8084276530c822b9a8e24b00" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the default value of &lt;code&gt;print-level&lt;/code&gt; for printing results in Edebug. See &lt;a href=&quot;output-variables#Output-Variables&quot;&gt;Output Variables&lt;/a&gt;.</source>
          <target state="translated">如果为non- &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;print-level&lt;/code&gt; 的默认打印级别值导致Edebug。请参见&lt;a href=&quot;output-variables#Output-Variables&quot;&gt;输出变量&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4dbca5f789d3b451ab7705325121fbfc1c24775e" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the frame can be moved with the mouse by dragging the header line of its topmost window.</source>
          <target state="translated">如果为非 &lt;code&gt;nil&lt;/code&gt; ，则可以通过拖动框架最顶部窗口的标题行来移动框架。</target>
        </trans-unit>
        <trans-unit id="8b4877f75b5365fe0a54e72c2c62ecb6c6d15e86" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the frame can be moved with the mouse by dragging the mode line of its bottommost window. Note that such a frame is not allowed to have its own minibuffer window.</source>
          <target state="translated">如果为非 &lt;code&gt;nil&lt;/code&gt; ，则可以通过拖动最底部窗口的模式线来移动框架。注意，这样的帧不允许有自己的迷你缓冲区窗口。</target>
        </trans-unit>
        <trans-unit id="318d4d00cdd54ad23fd3e065537a23cdde9e75e3" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the frame can be resized by dragging its internal borders, if present, with the mouse.</source>
          <target state="translated">如果为非 &lt;code&gt;nil&lt;/code&gt; ，则可以通过使用鼠标拖动其内部边界（如果存在）来调整框架的大小。</target>
        </trans-unit>
        <trans-unit id="a43ce41848c96c8ad14f6796e1d973d08c57fa8e" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the frame is drawn to the screen without double buffering. Emacs normally attempts to use double buffering, where available, to reduce flicker. Set this property if you experience display bugs or pine for that retro, flicker-y feeling.</source>
          <target state="translated">如果为非 &lt;code&gt;nil&lt;/code&gt; ，则将帧绘制到屏幕上而不进行双缓冲。Emacs通常尝试使用双缓冲（如果有）来减少闪烁。如果您遇到显示错误或松木带来的复古，闪烁感，请设置此属性。</target>
        </trans-unit>
        <trans-unit id="bc1ad98081e6e325221a3abe42d5ac8ed1f7c21f" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the frame is visible on all virtual desktops on systems with virtual desktops.</source>
          <target state="translated">如果为 &lt;code&gt;nil&lt;/code&gt; ，则该框架在具有虚拟桌面的系统上的所有虚拟桌面上可见。</target>
        </trans-unit>
        <trans-unit id="b44601ecee8752e8c0f8056fa9e24dc94ac1ca89" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the greeting string returned by the host.</source>
          <target state="translated">如果为非 &lt;code&gt;nil&lt;/code&gt; ，则主机返回的问候字符串。</target>
        </trans-unit>
        <trans-unit id="40cc2de753b0ea772d8160c0c2ca7c1eca5fbf7e" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the host&amp;rsquo;s capability string.</source>
          <target state="translated">如果为非 &lt;code&gt;nil&lt;/code&gt; ，则为主机的功能字符串。</target>
        </trans-unit>
        <trans-unit id="913ca5bd1d8fdf1f8806857c3c6b7d729b5ba66a" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the named function prevents the &lt;code&gt;undo&lt;/code&gt; operation from being restricted to the active region, if &lt;code&gt;undo&lt;/code&gt; is invoked immediately after the function. See &lt;a href=&quot;undo#Undo&quot;&gt;Undo&lt;/a&gt;.</source>
          <target state="translated">如果为non- &lt;code&gt;nil&lt;/code&gt; ，则命名函数将防止 &lt;code&gt;undo&lt;/code&gt; 操作被限制在活动区域​​中，如果在该函数之后立即调用 &lt;code&gt;undo&lt;/code&gt; 。请参阅&lt;a href=&quot;undo#Undo&quot;&gt;撤消&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2d8e8f3e81bf8fc64ffd0106f328d6a269d4831b" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the side windows on the left and right of a frame occupy the frame&amp;rsquo;s full height. Otherwise, the side windows on the top and bottom of the frame occupy the frame&amp;rsquo;s full width.</source>
          <target state="translated">如果为非 &lt;code&gt;nil&lt;/code&gt; ，则框架左侧和右侧的侧窗占据框架的整个高度。否则，框架顶部和底部的侧窗会占据框架的整个宽度。</target>
        </trans-unit>
        <trans-unit id="6849fc0b0f94a8fa335c8cd9a717ed71ba10be1a" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the value is a function to generate prefix text for warnings. Programs can bind the variable to a suitable function. &lt;code&gt;display-warning&lt;/code&gt; calls this function with the warnings buffer current, and the function can insert text in it. That text becomes the beginning of the warning message.</source>
          <target state="translated">如果为非 &lt;code&gt;nil&lt;/code&gt; ，则该值是用于生成警告的前缀文本的函数。程序可以将变量绑定到合适的函数。 &lt;code&gt;display-warning&lt;/code&gt; 使用警告缓冲区电流调用此函数，并且该函数可以在其中插入文本。该文本成为警告消息的开头。</target>
        </trans-unit>
        <trans-unit id="a73c2141d528d307e119504f64bddbdbc47d5931" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the value of this variable is a function for &lt;code&gt;mouse-position&lt;/code&gt; to call. &lt;code&gt;mouse-position&lt;/code&gt; calls this function just before returning, with its normal return value as the sole argument, and it returns whatever this function returns to it.</source>
          <target state="translated">如果为非 &lt;code&gt;nil&lt;/code&gt; ，则此变量的值是用于调用 &lt;code&gt;mouse-position&lt;/code&gt; 的函数。 &lt;code&gt;mouse-position&lt;/code&gt; 仅在返回之前调用此函数，其正常返回值作为唯一参数，并且它将返回此函数返回的所有内容。</target>
        </trans-unit>
        <trans-unit id="750c670af188e92079aa3e73ea73d571df6e4c56" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the value should be a regular expression describing the end of a sentence, including the whitespace following the sentence. (All paragraph boundaries also end sentences, regardless.)</source>
          <target state="translated">如果为non- &lt;code&gt;nil&lt;/code&gt; ，则该值应为描述句子结尾的正则表达式，包括句子后面的空白。（无论如何，所有段落的边界也都以句子结尾。）</target>
        </trans-unit>
        <trans-unit id="c36e160fc038d6c8fa570f7f15030f619d7679da" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the value should look like this:</source>
          <target state="translated">如果为非 &lt;code&gt;nil&lt;/code&gt; ，则值应如下所示：</target>
        </trans-unit>
        <trans-unit id="5dd5a98b9783da84f3c6b8a9cb9fa1c915208201" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, the value specifies the slot of the side window supposed to display the buffer. This entry is used only by &lt;code&gt;display-buffer-in-side-window&lt;/code&gt;.</source>
          <target state="translated">如果为非 &lt;code&gt;nil&lt;/code&gt; ，则该值指定应该显示缓冲区的侧窗的插槽。该条目仅由 &lt;code&gt;display-buffer-in-side-window&lt;/code&gt; 使用。</target>
        </trans-unit>
        <trans-unit id="2761f772ea8c9a650bbb931af03989afe8eaeafc" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this buffer-local variable holds a regular expression that specifies what text can appear before the open-parenthesis that starts a defun. That is to say, a defun begins on a line that starts with a match for this regular expression, followed by a character with open-parenthesis syntax.</source>
          <target state="translated">如果为非 &lt;code&gt;nil&lt;/code&gt; ，则此缓冲区局部变量将保存一个正则表达式，该正则表达式指定可以在启动defun的开括号前出现的文本。也就是说，defun从以该正则表达式的匹配项开头的行开始，然后是带有开放括号语法的字符。</target>
        </trans-unit>
        <trans-unit id="e6476927ea753cd0c025802bf82f4bd899e70109" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this frame&amp;rsquo;s window is never split automatically.</source>
          <target state="translated">如果为非 &lt;code&gt;nil&lt;/code&gt; ，则此框架的窗口永远不会自动拆分。</target>
        </trans-unit>
        <trans-unit id="a4e5bffd8c4ad2619c77cd8c172745f3480ba234" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this frame&amp;rsquo;s window-system window is drawn without decorations, like the title, minimize/maximize boxes and external borders. This usually means that the window cannot be dragged, resized, iconified, maximized or deleted with the mouse. If &lt;code&gt;nil&lt;/code&gt;, the frame&amp;rsquo;s window is usually drawn with all the elements listed above unless their display has been suspended via window manager settings.</source>
          <target state="translated">如果为非 &lt;code&gt;nil&lt;/code&gt; ，则绘制此框架的窗口系统窗口时不带标题之类的修饰，请最小化/最大化框和外部边框。这通常意味着无法使用鼠标拖动，调整窗口大小，图标化，最大化或删除窗口。如果为 &lt;code&gt;nil&lt;/code&gt; ，则通常使用上面列出的所有元素绘制框架的窗口，除非已通过窗口管理器设置暂停了它们的显示。</target>
        </trans-unit>
        <trans-unit id="befe1b622137d81a8704e321ed93a4af1ba6f0ff" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this is a directory within which to look for the</source>
          <target state="translated">如果为非 &lt;code&gt;nil&lt;/code&gt; ，则这是在其中查找目录的目录。</target>
        </trans-unit>
        <trans-unit id="29d9d4b33508048f3fc26e3bfc177f3409d73fc0" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this means that the frame does not want to receive input focus via explicit mouse clicks or when moving the mouse into it either via &lt;code&gt;focus-follows-mouse&lt;/code&gt; (see &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;) or &lt;code&gt;mouse-autoselect-window&lt;/code&gt; (see &lt;a href=&quot;mouse-window-auto_002dselection#Mouse-Window-Auto_002dselection&quot;&gt;Mouse Window Auto-selection&lt;/a&gt;). This may have the unwanted side-effect that a user cannot scroll a non-selected frame with the mouse. Some window managers may not honor this parameter.</source>
          <target state="translated">如果为非 &lt;code&gt;nil&lt;/code&gt; ，则表示该框架不希望通过显式鼠标单击或在通过 &lt;code&gt;focus-follows-mouse&lt;/code&gt; （请参阅&lt;a href=&quot;input-focus#Input-Focus&quot;&gt;输入焦点&lt;/a&gt;）或 &lt;code&gt;mouse-autoselect-window&lt;/code&gt; （请参见&lt;a href=&quot;mouse-window-auto_002dselection#Mouse-Window-Auto_002dselection&quot;&gt;鼠标窗口&lt;/a&gt;）将鼠标移入其中时接收输入焦点。自动选择）。这可能会产生用户无法使用鼠标滚动未选择的帧的不良副作用。一些窗口管理器可能不遵守此参数。</target>
        </trans-unit>
        <trans-unit id="b7e95ea56bde9c36bccfc56c9be82022db509b49" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this means that the frame does not want to receive input focus when it is mapped (see &lt;a href=&quot;visibility-of-frames#Visibility-of-Frames&quot;&gt;Visibility of Frames&lt;/a&gt;). Some window managers may not honor this parameter.</source>
          <target state="translated">如果为非 &lt;code&gt;nil&lt;/code&gt; ，则表示该帧在映射时不希望接收输入焦点（请参见&lt;a href=&quot;visibility-of-frames#Visibility-of-Frames&quot;&gt;帧的可见性&lt;/a&gt;）。一些窗口管理器可能不遵守此参数。</target>
        </trans-unit>
        <trans-unit id="08c2d3c2c49097a87f9798fe68b125db546bcce1" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this means that this frame is a child frame (see &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;), and this parameter specifies its parent frame. If &lt;code&gt;nil&lt;/code&gt;, this means that this frame is a normal, top-level frame.</source>
          <target state="translated">如果为非 &lt;code&gt;nil&lt;/code&gt; ，则表示此帧是子帧（请参见&lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;），并且此参数指定其父帧。如果为 &lt;code&gt;nil&lt;/code&gt; ，则表示该帧是普通的顶级帧。</target>
        </trans-unit>
        <trans-unit id="3dc5cecd5ae6adced229d7859e627328536d0fb9" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this means that this is an &lt;em&gt;override redirect&lt;/em&gt; frame&amp;mdash;a frame not handled by window managers under X. Override redirect frames have no window manager decorations, can be positioned and resized only via Emacs&amp;rsquo; positioning and resizing functions and are usually drawn on top of all other frames. Setting this parameter has no effect on MS-Windows.</source>
          <target state="translated">如果为 &lt;code&gt;nil&lt;/code&gt; ，则表示这是一个&lt;em&gt;覆盖重定向&lt;/em&gt;框架-X之下窗口管理器不处理的框架。覆盖重定向框架没有窗口管理器装饰，只能通过Emacs的定位和调整大小功能进行定位和调整大小，通常在所有其他框架上绘制。设置此参数在MS-Windows上不起作用。</target>
        </trans-unit>
        <trans-unit id="da44bdfd5b24c8bfe0e4891fe8c73345cdb16849" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this means the menu bar is external (not part of the native frame of &lt;var&gt;frame&lt;/var&gt;).</source>
          <target state="translated">如果非 &lt;code&gt;nil&lt;/code&gt; ，这意味着菜单栏是外部的（不是天然帧的一部分 &lt;var&gt;frame&lt;/var&gt; ）。</target>
        </trans-unit>
        <trans-unit id="962a1a045ca85f14cf97fdf8ab31eea548b04b94" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this means the tool bar is external (not part of the native frame of &lt;var&gt;frame&lt;/var&gt;).</source>
          <target state="translated">如果非 &lt;code&gt;nil&lt;/code&gt; ，这意味着工具栏是外部的（不是天然帧的一部分 &lt;var&gt;frame&lt;/var&gt; ）。</target>
        </trans-unit>
        <trans-unit id="4eac0859d84f0a05577356e8fbce498e280209b6" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this parameter specifies another frame whose deletion will automatically trigger the deletion of this frame. See &lt;a href=&quot;deleting-frames#Deleting-Frames&quot;&gt;Deleting Frames&lt;/a&gt;.</source>
          <target state="translated">如果为非 &lt;code&gt;nil&lt;/code&gt; ，则此参数指定另一个框架，其删除将自动触发该框架的删除。请参阅&lt;a href=&quot;deleting-frames#Deleting-Frames&quot;&gt;删除框架&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="20ed41705ebeeda266d5dae4c9797dae4768c160" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this parameter specifies the frame whose windows will be scrolled whenever the mouse wheel is scrolled with the mouse pointer hovering over this frame, see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Mouse-Commands.html#Mouse-Commands&quot;&gt;Mouse Commands&lt;/a&gt; in</source>
          <target state="translated">如果非 &lt;code&gt;nil&lt;/code&gt; ，该参数指定的窗户只要鼠标轮与鼠标指针悬停在该帧滚动将滚动框架，看到&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Mouse-Commands.html#Mouse-Commands&quot;&gt;鼠标命令&lt;/a&gt;在</target>
        </trans-unit>
        <trans-unit id="ea97d1dd955b4a93685dec6602c740f2fecdb06f" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this property indicates that the case of the abbrev&amp;rsquo;s name is significant and should only match a text with the same pattern of capitalization. It also disables the code that modifies the capitalization of the expansion.</source>
          <target state="translated">如果为non- &lt;code&gt;nil&lt;/code&gt; ，则此属性表示缩写名称的大小写是有意义的，并且仅应匹配具有相同大写字母样式的文本。它还禁用修改扩展名大写的代码。</target>
        </trans-unit>
        <trans-unit id="3b0f23f2b6d5c910a35b595d44ea4ce68ff1dea0" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this property is a regular expression that indicates how to extract the name of the abbrev before point, before looking it up in the table. When the regular expression matches before point, the abbrev name is expected to be in submatch 1. If this property is &lt;code&gt;nil&lt;/code&gt;, the default is to use &lt;code&gt;backward-word&lt;/code&gt; and &lt;code&gt;forward-word&lt;/code&gt; to find the name. This property allows the use of abbrevs whose name contains characters of non-word syntax.</source>
          <target state="translated">如果为non- &lt;code&gt;nil&lt;/code&gt; ，则此属性为正则表达式，指示如何在指向表之前查找缩写之前提取缩写的名称。当正则表达式在point之前匹配时，缩写名称应位于子匹配1中。如果此属性为 &lt;code&gt;nil&lt;/code&gt; ，则默认值为使用 &lt;code&gt;backward-word&lt;/code&gt; 和 &lt;code&gt;forward-word&lt;/code&gt; 来查找名称。此属性允许使用名称包含非单词语法字符的缩写。</target>
        </trans-unit>
        <trans-unit id="da204cd82fccce49a73b14d713bb7c44d191f46e" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this property marks the abbrev as a system abbrev. Such abbrevs are not saved (see &lt;a href=&quot;abbrev-files#Abbrev-Files&quot;&gt;Abbrev Files&lt;/a&gt;).</source>
          <target state="translated">如果为非 &lt;code&gt;nil&lt;/code&gt; ，则此属性将缩写标记为系统缩写。这样的缩写不被保存（请参阅Abbrev &lt;a href=&quot;abbrev-files#Abbrev-Files&quot;&gt;Files&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="b7864d17274f58c7d7228812dc0a0690207352bc" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this property should be a function of no arguments which returns &lt;code&gt;nil&lt;/code&gt; if the abbrev should not be used and &lt;code&gt;t&lt;/code&gt; otherwise.</source>
          <target state="translated">如果为非 &lt;code&gt;nil&lt;/code&gt; ，则此属性应为不带参数的函数，如果不应使用缩写则返回 &lt;code&gt;nil&lt;/code&gt; ,否则返回 &lt;code&gt;t&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d52160aabd29ccf2ccf85f78b5eb3a00cb4614a4" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this should be a function that accepts the same arguments as &lt;code&gt;read-file-name&lt;/code&gt;. When &lt;code&gt;read-file-name&lt;/code&gt; is called, it calls this function with the supplied arguments instead of doing its usual work.</source>
          <target state="translated">如果为非 &lt;code&gt;nil&lt;/code&gt; ，则该函数应接受与 &lt;code&gt;read-file-name&lt;/code&gt; 相同的参数。当 &lt;code&gt;read-file-name&lt;/code&gt; 被调用时，它调用所提供的参数，而不是做其平时的工作中此功能。</target>
        </trans-unit>
        <trans-unit id="af404a683fbefe27acb5086d831aa82f029d298e" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this specifies that the minor mode should be global rather than buffer-local. It defaults to &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果为非 &lt;code&gt;nil&lt;/code&gt; ，则指定次要模式应为全局模式，而不是局部缓冲区。默认为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="62767a1386886516923d977b00950df7b261c6f7" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this specifies the named variable&amp;rsquo;s documentation string. This is set automatically by &lt;code&gt;defvar&lt;/code&gt; and related functions. See &lt;a href=&quot;defining-faces#Defining-Faces&quot;&gt;Defining Faces&lt;/a&gt;.</source>
          <target state="translated">If non- &lt;code&gt;nil&lt;/code&gt; , this specifies the named variable&amp;rsquo;s documentation string. This is set automatically by &lt;code&gt;defvar&lt;/code&gt; and related functions. See &lt;a href=&quot;defining-faces#Defining-Faces&quot;&gt;Defining Faces&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="20d0b6089b85f69d0a48b3636ebf1867a4b03293" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this tells the window manager to remove the frame&amp;rsquo;s icon from the taskbar associated with the frame&amp;rsquo;s display and inhibit switching to the frame&amp;rsquo;s window via the combination</source>
          <target state="translated">If non- &lt;code&gt;nil&lt;/code&gt; , this tells the window manager to remove the frame&amp;rsquo;s icon from the taskbar associated with the frame&amp;rsquo;s display and inhibit switching to the frame&amp;rsquo;s window via the combination</target>
        </trans-unit>
        <trans-unit id="c636a6cd5eb64c7cc32e0232081bb6526956cb5c" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this variable enables detection of circular and shared structure in printing. See &lt;a href=&quot;circular-objects#Circular-Objects&quot;&gt;Circular Objects&lt;/a&gt;.</source>
          <target state="translated">If non- &lt;code&gt;nil&lt;/code&gt; , this variable enables detection of circular and shared structure in printing. See &lt;a href=&quot;circular-objects#Circular-Objects&quot;&gt;Circular Objects&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="4943f3537977953a83f606eb122772e31539c861" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this variable enables detection of uninterned symbols (see &lt;a href=&quot;creating-symbols#Creating-Symbols&quot;&gt;Creating Symbols&lt;/a&gt;) in printing. When this is enabled, uninterned symbols print with the prefix &amp;lsquo;</source>
          <target state="translated">If non- &lt;code&gt;nil&lt;/code&gt; , this variable enables detection of uninterned symbols (see &lt;a href=&quot;creating-symbols#Creating-Symbols&quot;&gt;Creating Symbols&lt;/a&gt;) in printing. When this is enabled, uninterned symbols print with the prefix &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="e740af8f1d9afb1b33a754a87cc5c1a51f9a0cf2" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this variable enables the reading of circular and shared structures. See &lt;a href=&quot;circular-objects#Circular-Objects&quot;&gt;Circular Objects&lt;/a&gt;. Its default value is &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">If non- &lt;code&gt;nil&lt;/code&gt; , this variable enables the reading of circular and shared structures. See &lt;a href=&quot;circular-objects#Circular-Objects&quot;&gt;Circular Objects&lt;/a&gt;. Its default value is &lt;code&gt;t&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c43ef7f6cdbaf44d75a6a5e8be960c86f73a9314" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this variable holds a function for finding the beginning of a defun. The function &lt;code&gt;beginning-of-defun&lt;/code&gt; calls this function instead of using its normal method, passing it its optional argument. If the argument is non-&lt;code&gt;nil&lt;/code&gt;, the function should move back by that many functions, like &lt;code&gt;beginning-of-defun&lt;/code&gt; does.</source>
          <target state="translated">If non- &lt;code&gt;nil&lt;/code&gt; , this variable holds a function for finding the beginning of a defun. The function &lt;code&gt;beginning-of-defun&lt;/code&gt; calls this function instead of using its normal method, passing it its optional argument. If the argument is non- &lt;code&gt;nil&lt;/code&gt; , the function should move back by that many functions, like &lt;code&gt;beginning-of-defun&lt;/code&gt; does.</target>
        </trans-unit>
        <trans-unit id="8ba48d5a1f651bee184dff9da83bc16ddb3d2bb6" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this variable holds a function for finding the end of a defun. The function &lt;code&gt;end-of-defun&lt;/code&gt; calls this function instead of using its normal method.</source>
          <target state="translated">If non- &lt;code&gt;nil&lt;/code&gt; , this variable holds a function for finding the end of a defun. The function &lt;code&gt;end-of-defun&lt;/code&gt; calls this function instead of using its normal method.</target>
        </trans-unit>
        <trans-unit id="a45561e07f2520c635c526032ab3106d071ec2d8" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this variable holds a keymap to use instead of &lt;code&gt;overriding-local-map&lt;/code&gt;, the buffer&amp;rsquo;s local keymap, text property or overlay keymaps, and all the minor mode keymaps.</source>
          <target state="translated">If non- &lt;code&gt;nil&lt;/code&gt; , this variable holds a keymap to use instead of &lt;code&gt;overriding-local-map&lt;/code&gt; , the buffer&amp;rsquo;s local keymap, text property or overlay keymaps, and all the minor mode keymaps.</target>
        </trans-unit>
        <trans-unit id="b0a3bbe8306a043ed80dc3d3269b0d063a9cdaf5" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this variable holds a keymap to use instead of the buffer&amp;rsquo;s local keymap, any text property or overlay keymaps, and any minor mode keymaps. This keymap, if specified, overrides all other maps that would have been active, except for the current global map.</source>
          <target state="translated">If non- &lt;code&gt;nil&lt;/code&gt; , this variable holds a keymap to use instead of the buffer&amp;rsquo;s local keymap, any text property or overlay keymaps, and any minor mode keymaps. This keymap, if specified, overrides all other maps that would have been active, except for the current global map.</target>
        </trans-unit>
        <trans-unit id="1106df1ab5132fac1dbae2e453ec2bd4a0ec3e6d" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this variable is a string that specifies a file or directory for Emacs to display after starting up, instead of the startup screen. If its value is a function, Emacs calls that function which must return a buffer which is then displayed. If its value is &lt;code&gt;t&lt;/code&gt;, Emacs displays the</source>
          <target state="translated">If non- &lt;code&gt;nil&lt;/code&gt; , this variable is a string that specifies a file or directory for Emacs to display after starting up, instead of the startup screen. If its value is a function, Emacs calls that function which must return a buffer which is then displayed. If its value is &lt;code&gt;t&lt;/code&gt; , Emacs displays the</target>
        </trans-unit>
        <trans-unit id="a7735c3b50e466c5346e5483a5cf6de45a740a3c" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this variable&amp;rsquo;s value should be a regular expression matching a line separates two paragraphs. The regular expression is always matched after a newline, so it is best to anchor it, i.e., begin it with a &lt;code&gt;&quot;^&quot;&lt;/code&gt;.</source>
          <target state="translated">If non- &lt;code&gt;nil&lt;/code&gt; , this variable&amp;rsquo;s value should be a regular expression matching a line separates two paragraphs. The regular expression is always matched after a newline, so it is best to anchor it, i.e., begin it with a &lt;code&gt;&quot;^&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d8c483d93ec64f7cd1bb9d46db96b7a9b42b8cbd" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, this variable&amp;rsquo;s value should be a regular expression matching a line that starts or separates two paragraphs. The regular expression is always matched after a newline, so it is best to anchor it, i.e., begin it with a &lt;code&gt;&quot;^&quot;&lt;/code&gt;.</source>
          <target state="translated">If non- &lt;code&gt;nil&lt;/code&gt; , this variable&amp;rsquo;s value should be a regular expression matching a line that starts or separates two paragraphs. The regular expression is always matched after a newline, so it is best to anchor it, i.e., begin it with a &lt;code&gt;&quot;^&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="280cbc03daf2bda778c4a01d6aeb7519dd501af4" translate="yes" xml:space="preserve">
          <source>If non-&lt;code&gt;nil&lt;/code&gt;, try to make an asynchronous connection.</source>
          <target state="translated">If non- &lt;code&gt;nil&lt;/code&gt; , try to make an asynchronous connection.</target>
        </trans-unit>
        <trans-unit id="61817df020a9cee36aafed5b8511a8145e9c9a55" translate="yes" xml:space="preserve">
          <source>If none of the alternatives will work, then &lt;var&gt;symbol&lt;/var&gt; is defined as &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">If none of the alternatives will work, then &lt;var&gt;symbol&lt;/var&gt; is defined as &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ab210fcdba9cf2a292faa98b31540cd2272662ce" translate="yes" xml:space="preserve">
          <source>If not a string, &lt;var&gt;prompter&lt;/var&gt; should be a function of one argument (the next object to ask about) and should return the question text. If the value is a string, that is the question to ask the user. The function can also return &lt;code&gt;t&lt;/code&gt;, meaning do act on this object (and don&amp;rsquo;t ask the user), or &lt;code&gt;nil&lt;/code&gt;, meaning ignore this object (and don&amp;rsquo;t ask the user).</source>
          <target state="translated">If not a string, &lt;var&gt;prompter&lt;/var&gt; should be a function of one argument (the next object to ask about) and should return the question text. If the value is a string, that is the question to ask the user. The function can also return &lt;code&gt;t&lt;/code&gt; , meaning do act on this object (and don&amp;rsquo;t ask the user), or &lt;code&gt;nil&lt;/code&gt; , meaning ignore this object (and don&amp;rsquo;t ask the user).</target>
        </trans-unit>
        <trans-unit id="67a1d4c8683efa99c2168cdafc5e612006344baf" translate="yes" xml:space="preserve">
          <source>If not running in batch mode, it initializes the window system that the variable &lt;code&gt;initial-window-system&lt;/code&gt; specifies (see &lt;a href=&quot;window-systems#Window-Systems&quot;&gt;initial-window-system&lt;/a&gt;). The initialization function, &lt;code&gt;window-system-initialization&lt;/code&gt;, is a &lt;em&gt;generic function&lt;/em&gt; (see &lt;a href=&quot;generic-functions#Generic-Functions&quot;&gt;Generic Functions&lt;/a&gt;) whose actual implementation is different for each supported window system. If the value of &lt;code&gt;initial-window-system&lt;/code&gt; is &lt;var&gt;windowsystem&lt;/var&gt;, then the appropriate implementation of the initialization function is defined in the file</source>
          <target state="translated">If not running in batch mode, it initializes the window system that the variable &lt;code&gt;initial-window-system&lt;/code&gt; specifies (see &lt;a href=&quot;window-systems#Window-Systems&quot;&gt;initial-window-system&lt;/a&gt;). The initialization function, &lt;code&gt;window-system-initialization&lt;/code&gt; , is a &lt;em&gt;generic function&lt;/em&gt; (see &lt;a href=&quot;generic-functions#Generic-Functions&quot;&gt;Generic Functions&lt;/a&gt;) whose actual implementation is different for each supported window system. If the value of &lt;code&gt;initial-window-system&lt;/code&gt; is &lt;var&gt;windowsystem&lt;/var&gt; , then the appropriate implementation of the initialization function is defined in the file</target>
        </trans-unit>
        <trans-unit id="bb9448622189047367a41ddeacab7b38408ac501" translate="yes" xml:space="preserve">
          <source>If omitted, &lt;var&gt;key-type&lt;/var&gt; and &lt;var&gt;value-type&lt;/var&gt; default to &lt;code&gt;sexp&lt;/code&gt;.</source>
          <target state="translated">If omitted, &lt;var&gt;key-type&lt;/var&gt; and &lt;var&gt;value-type&lt;/var&gt; default to &lt;code&gt;sexp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a7e71cebc3c66ab4082f201e462bbaf1ce7c0b68" translate="yes" xml:space="preserve">
          <source>If one end of the region is in the middle of a word, the part of the word within the region is treated as an entire word.</source>
          <target state="translated">如果该区域的一端在一个词的中间,则该区域内的词的部分作为一个完整的词处理。</target>
        </trans-unit>
        <trans-unit id="66a4039abe03c13c0561b28386a05539429258f2" translate="yes" xml:space="preserve">
          <source>If one of these events arrives in the middle of a key sequence&amp;mdash;that is, after a prefix key&amp;mdash;then Emacs reorders the events so that this event comes either before or after the multi-event key sequence, not within it.</source>
          <target state="translated">If one of these events arrives in the middle of a key sequence&amp;mdash;that is, after a prefix key&amp;mdash;then Emacs reorders the events so that this event comes either before or after the multi-event key sequence, not within it.</target>
        </trans-unit>
        <trans-unit id="70c820f28b6f81163a2fcd6aeeb0821735017d2c" translate="yes" xml:space="preserve">
          <source>If one of those coding systems can safely encode all the specified text, &lt;code&gt;select-safe-coding-system&lt;/code&gt; chooses it and returns it. Otherwise, it asks the user to choose from a list of coding systems which can encode all the text, and returns the user&amp;rsquo;s choice.</source>
          <target state="translated">If one of those coding systems can safely encode all the specified text, &lt;code&gt;select-safe-coding-system&lt;/code&gt; chooses it and returns it. Otherwise, it asks the user to choose from a list of coding systems which can encode all the text, and returns the user&amp;rsquo;s choice.</target>
        </trans-unit>
        <trans-unit id="ac28b562a40846fb95c93a8e31234c329ab78e48" translate="yes" xml:space="preserve">
          <source>If only one match exists and &lt;var&gt;filename&lt;/var&gt; matches it exactly, the function returns &lt;code&gt;t&lt;/code&gt;. The function returns &lt;code&gt;nil&lt;/code&gt; if directory &lt;var&gt;directory&lt;/var&gt; contains no name starting with &lt;var&gt;filename&lt;/var&gt;.</source>
          <target state="translated">If only one match exists and &lt;var&gt;filename&lt;/var&gt; matches it exactly, the function returns &lt;code&gt;t&lt;/code&gt; . The function returns &lt;code&gt;nil&lt;/code&gt; if directory &lt;var&gt;directory&lt;/var&gt; contains no name starting with &lt;var&gt;filename&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="01df909390f239453c6a94e3d0fb276a63413958" translate="yes" xml:space="preserve">
          <source>If optional argument &lt;var&gt;base64url&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then padding is optional, and the URL variant of base 64 encoding is used.</source>
          <target state="translated">If optional argument &lt;var&gt;base64url&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , then padding is optional, and the URL variant of base 64 encoding is used.</target>
        </trans-unit>
        <trans-unit id="d861c286c60b784f7a1b3417fdf86a78bcec09ba" translate="yes" xml:space="preserve">
          <source>If optional argument &lt;var&gt;buffer&lt;/var&gt; specifies a buffer, the decoded text is inserted in that buffer after point (point does not move). In this case, the return value is the length of the decoded text. If that buffer is a unibyte buffer, the internal representation of the decoded text is inserted into it as individual bytes.</source>
          <target state="translated">If optional argument &lt;var&gt;buffer&lt;/var&gt; specifies a buffer, the decoded text is inserted in that buffer after point (point does not move). In this case, the return value is the length of the decoded text. If that buffer is a unibyte buffer, the internal representation of the decoded text is inserted into it as individual bytes.</target>
        </trans-unit>
        <trans-unit id="480ea6c814466472736a87d99b32421822788b2f" translate="yes" xml:space="preserve">
          <source>If optional argument &lt;var&gt;style-variant-p&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that says to create bold, italic and bold-italic variants of the fontset as well. These variant fontsets do not have a short name, only a long one, which is made by altering &lt;var&gt;fontpattern&lt;/var&gt; to indicate the bold and/or italic status.</source>
          <target state="translated">If optional argument &lt;var&gt;style-variant-p&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , that says to create bold, italic and bold-italic variants of the fontset as well. These variant fontsets do not have a short name, only a long one, which is made by altering &lt;var&gt;fontpattern&lt;/var&gt; to indicate the bold and/or italic status.</target>
        </trans-unit>
        <trans-unit id="22b0c570c8e94a4480bf1874391ca5f7bf4ec0af" translate="yes" xml:space="preserve">
          <source>If parts of the string have &lt;code&gt;face&lt;/code&gt; properties, they control display of the text just as they would text in the buffer. Any characters which have no &lt;code&gt;face&lt;/code&gt; properties are displayed, by default, in the face &lt;code&gt;mode-line&lt;/code&gt; or &lt;code&gt;mode-line-inactive&lt;/code&gt; (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Standard-Faces.html#Standard-Faces&quot;&gt;Standard Faces&lt;/a&gt; in</source>
          <target state="translated">If parts of the string have &lt;code&gt;face&lt;/code&gt; properties, they control display of the text just as they would text in the buffer. Any characters which have no &lt;code&gt;face&lt;/code&gt; properties are displayed, by default, in the face &lt;code&gt;mode-line&lt;/code&gt; or &lt;code&gt;mode-line-inactive&lt;/code&gt; (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Standard-Faces.html#Standard-Faces&quot;&gt;Standard Faces&lt;/a&gt; in</target>
        </trans-unit>
        <trans-unit id="8bac572666fabef579b22818bbade7a65d83f51c" translate="yes" xml:space="preserve">
          <source>If passed a marker as its argument, &lt;code&gt;copy-marker&lt;/code&gt; returns a new marker that points to the same place and the same buffer as does &lt;var&gt;marker-or-integer&lt;/var&gt;. If passed an integer as its argument, &lt;code&gt;copy-marker&lt;/code&gt; returns a new marker that points to position &lt;var&gt;marker-or-integer&lt;/var&gt; in the current buffer.</source>
          <target state="translated">If passed a marker as its argument, &lt;code&gt;copy-marker&lt;/code&gt; returns a new marker that points to the same place and the same buffer as does &lt;var&gt;marker-or-integer&lt;/var&gt; . If passed an integer as its argument, &lt;code&gt;copy-marker&lt;/code&gt; returns a new marker that points to position &lt;var&gt;marker-or-integer&lt;/var&gt; in the current buffer.</target>
        </trans-unit>
        <trans-unit id="dfe34896c40a35569875599278219978bfea436c" translate="yes" xml:space="preserve">
          <source>If point is in the middle of a word, the part of the word before point is ignored when moving forward. The rest is treated as an entire word.</source>
          <target state="translated">如果点在一个词的中间,前进时忽略点之前的部分。其余部分则作为一个完整的词处理。</target>
        </trans-unit>
        <trans-unit id="3749fd862364fdb39215d6dc2b445a92a26ab2f8" translate="yes" xml:space="preserve">
          <source>If point was inside the deleted region, its value afterward is &lt;var&gt;start&lt;/var&gt;. Otherwise, point relocates with the surrounding text, as markers do.</source>
          <target state="translated">If point was inside the deleted region, its value afterward is &lt;var&gt;start&lt;/var&gt; . Otherwise, point relocates with the surrounding text, as markers do.</target>
        </trans-unit>
        <trans-unit id="80e36e301d501f8216853561e1b67dadd77e8c14" translate="yes" xml:space="preserve">
          <source>If present, &lt;var&gt;doc&lt;/var&gt; should be the function&amp;rsquo;s documentation string (see &lt;a href=&quot;function-documentation#Function-Documentation&quot;&gt;Function Documentation&lt;/a&gt;); &lt;var&gt;declare&lt;/var&gt;, if present, should be a &lt;code&gt;declare&lt;/code&gt; form (see &lt;a href=&quot;declare-form#Declare-Form&quot;&gt;Declare Form&lt;/a&gt;) specifying the function&amp;rsquo;s metadata.</source>
          <target state="translated">If present, &lt;var&gt;doc&lt;/var&gt; should be the function&amp;rsquo;s documentation string (see &lt;a href=&quot;function-documentation#Function-Documentation&quot;&gt;Function Documentation&lt;/a&gt;); &lt;var&gt;declare&lt;/var&gt; , if present, should be a &lt;code&gt;declare&lt;/code&gt; form (see &lt;a href=&quot;declare-form#Declare-Form&quot;&gt;Declare Form&lt;/a&gt;) specifying the function&amp;rsquo;s metadata.</target>
        </trans-unit>
        <trans-unit id="592fe49d913f982c1c614220519b3c486b6bc502" translate="yes" xml:space="preserve">
          <source>If provided, &lt;var&gt;stopped&lt;/var&gt; must be &lt;code&gt;nil&lt;/code&gt;; it is an error to use any non-&lt;code&gt;nil&lt;/code&gt; value. The &lt;code&gt;:stop&lt;/code&gt; key is ignored otherwise and is retained for compatibility with other process types such as pipe processes. Asynchronous subprocesses never start in the stopped state.</source>
          <target state="translated">If provided, &lt;var&gt;stopped&lt;/var&gt; must be &lt;code&gt;nil&lt;/code&gt; ; it is an error to use any non- &lt;code&gt;nil&lt;/code&gt; value. The &lt;code&gt;:stop&lt;/code&gt; key is ignored otherwise and is retained for compatibility with other process types such as pipe processes. Asynchronous subprocesses never start in the stopped state.</target>
        </trans-unit>
        <trans-unit id="dfcc614230ff099bc17d061b1a9cb77878a865a4" translate="yes" xml:space="preserve">
          <source>If provided, &lt;var&gt;subfeatures&lt;/var&gt; should be a list of symbols indicating a set of specific subfeatures provided by this version of &lt;var&gt;feature&lt;/var&gt;. You can test the presence of a subfeature using &lt;code&gt;featurep&lt;/code&gt;. The idea of subfeatures is that you use them when a package (which is one &lt;var&gt;feature&lt;/var&gt;) is complex enough to make it useful to give names to various parts or functionalities of the package, which might or might not be loaded, or might or might not be present in a given version. See &lt;a href=&quot;network-feature-testing#Network-Feature-Testing&quot;&gt;Network Feature Testing&lt;/a&gt;, for an example.</source>
          <target state="translated">If provided, &lt;var&gt;subfeatures&lt;/var&gt; should be a list of symbols indicating a set of specific subfeatures provided by this version of &lt;var&gt;feature&lt;/var&gt; . You can test the presence of a subfeature using &lt;code&gt;featurep&lt;/code&gt; . The idea of subfeatures is that you use them when a package (which is one &lt;var&gt;feature&lt;/var&gt; ) is complex enough to make it useful to give names to various parts or functionalities of the package, which might or might not be loaded, or might or might not be present in a given version. See &lt;a href=&quot;network-feature-testing#Network-Feature-Testing&quot;&gt;Network Feature Testing&lt;/a&gt;, for an example.</target>
        </trans-unit>
        <trans-unit id="e2eabbe3fa4f2d35632affab0a43c6df27913857" translate="yes" xml:space="preserve">
          <source>If reading the file got an error because the file does not exist, but its directory does exist, the caller should pass a non-&lt;code&gt;nil&lt;/code&gt; value for &lt;var&gt;error&lt;/var&gt;. In that case, &lt;code&gt;after-find-file&lt;/code&gt; issues a warning: &amp;lsquo;</source>
          <target state="translated">If reading the file got an error because the file does not exist, but its directory does exist, the caller should pass a non- &lt;code&gt;nil&lt;/code&gt; value for &lt;var&gt;error&lt;/var&gt; . In that case, &lt;code&gt;after-find-file&lt;/code&gt; issues a warning: &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="554a84d46c1333835581ab6df680ffa7a31b4615" translate="yes" xml:space="preserve">
          <source>If repeated invocations of this command have already shown all buffers previously shown in &lt;var&gt;window&lt;/var&gt;, further invocations will show buffers from the buffer list of the frame &lt;var&gt;window&lt;/var&gt; appears on (see &lt;a href=&quot;buffer-list#Buffer-List&quot;&gt;Buffer List&lt;/a&gt;).</source>
          <target state="translated">If repeated invocations of this command have already shown all buffers previously shown in &lt;var&gt;window&lt;/var&gt; , further invocations will show buffers from the buffer list of the frame &lt;var&gt;window&lt;/var&gt; appears on (see &lt;a href=&quot;buffer-list#Buffer-List&quot;&gt;Buffer List&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="eea47e31caf682f7c71a68241a70e2c82326f87d" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;t&lt;/code&gt;, draw an arc in &lt;em&gt;positive angle direction&lt;/em&gt;. Otherwise, draw it in &lt;em&gt;negative angle direction&lt;/em&gt;.</source>
          <target state="translated">If set to &lt;code&gt;t&lt;/code&gt; , draw an arc in &lt;em&gt;positive angle direction&lt;/em&gt;. Otherwise, draw it in &lt;em&gt;negative angle direction&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="1f172df4c7c3218d6e1f98dbbb15ba718462660a" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;t&lt;/code&gt;, draw an arc sweep greater than or equal to 180 degrees. Otherwise, draw an arc sweep smaller than or equal to 180 degrees.</source>
          <target state="translated">If set to &lt;code&gt;t&lt;/code&gt; , draw an arc sweep greater than or equal to 180 degrees. Otherwise, draw an arc sweep smaller than or equal to 180 degrees.</target>
        </trans-unit>
        <trans-unit id="67032af11735e17a37ddd89ff58864ae7c1ce3e1" translate="yes" xml:space="preserve">
          <source>If several sources (overlays and/or a text property) specify values for the &lt;code&gt;display&lt;/code&gt; property, only one of the values takes effect, following the rules of &lt;code&gt;get-char-property&lt;/code&gt;. See &lt;a href=&quot;examining-properties#Examining-Properties&quot;&gt;Examining Properties&lt;/a&gt;.</source>
          <target state="translated">If several sources (overlays and/or a text property) specify values for the &lt;code&gt;display&lt;/code&gt; property, only one of the values takes effect, following the rules of &lt;code&gt;get-char-property&lt;/code&gt; . See &lt;a href=&quot;examining-properties#Examining-Properties&quot;&gt;Examining Properties&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="c074546b8fe6d7ca3e6f2e14f46644ca120fdf4a" translate="yes" xml:space="preserve">
          <source>If some Lisp object can&amp;rsquo;t be represented in JSON, the serialization functions will signal an error of type &lt;code&gt;wrong-type-argument&lt;/code&gt;. The parsing functions can also signal the following errors:</source>
          <target state="translated">If some Lisp object can&amp;rsquo;t be represented in JSON, the serialization functions will signal an error of type &lt;code&gt;wrong-type-argument&lt;/code&gt; . The parsing functions can also signal the following errors:</target>
        </trans-unit>
        <trans-unit id="8e5e3934a5d5e20d2331b5a62708ba9dc067be98" translate="yes" xml:space="preserve">
          <source>If some values are covered by more than one of the alternatives, customize will choose the first alternative that the value fits. This means you should always list the most specific types first, and the most general last. Here&amp;rsquo;s an example of proper usage:</source>
          <target state="translated">If some values are covered by more than one of the alternatives, customize will choose the first alternative that the value fits. This means you should always list the most specific types first, and the most general last. Here&amp;rsquo;s an example of proper usage:</target>
        </trans-unit>
        <trans-unit id="9ef863607d02025ca88f613cd7f2998c82c1e3cb" translate="yes" xml:space="preserve">
          <source>If something special should be done if the user switches a buffer from this mode to any other major mode, this mode can set up a buffer-local value for &lt;code&gt;change-major-mode-hook&lt;/code&gt; (see &lt;a href=&quot;creating-buffer_002dlocal#Creating-Buffer_002dLocal&quot;&gt;Creating Buffer-Local&lt;/a&gt;).</source>
          <target state="translated">If something special should be done if the user switches a buffer from this mode to any other major mode, this mode can set up a buffer-local value for &lt;code&gt;change-major-mode-hook&lt;/code&gt; (see &lt;a href=&quot;creating-buffer_002dlocal#Creating-Buffer_002dLocal&quot;&gt;Creating Buffer-Local&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="06b14227a7f4c3fc1c01323854e38f7bd6895191" translate="yes" xml:space="preserve">
          <source>If splitting the selected window fails and there is a non-dedicated window below the selected one showing some other buffer, this function tries to use that window for showing &lt;var&gt;buffer&lt;/var&gt;.</source>
          <target state="translated">If splitting the selected window fails and there is a non-dedicated window below the selected one showing some other buffer, this function tries to use that window for showing &lt;var&gt;buffer&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="3171bd5912c72436fbbc18b56096ef42d8a41b5f" translate="yes" xml:space="preserve">
          <source>If started by the X session manager, it calls &lt;code&gt;emacs-session-restore&lt;/code&gt; passing it as argument the ID of the previous session. See &lt;a href=&quot;session-management#Session-Management&quot;&gt;Session Management&lt;/a&gt;.</source>
          <target state="translated">If started by the X session manager, it calls &lt;code&gt;emacs-session-restore&lt;/code&gt; passing it as argument the ID of the previous session. See &lt;a href=&quot;session-management#Session-Management&quot;&gt;Session Management&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a5c5d634f325e4f5dde5c41de6695d4c44baf93f" translate="yes" xml:space="preserve">
          <source>If started on a text terminal, it loads the terminal-specific Lisp library (see &lt;a href=&quot;terminal_002dspecific#Terminal_002dSpecific&quot;&gt;Terminal-Specific&lt;/a&gt;), and runs the hook &lt;code&gt;tty-setup-hook&lt;/code&gt;. This is not done in &lt;code&gt;--batch&lt;/code&gt; mode, nor if &lt;code&gt;term-file-prefix&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">If started on a text terminal, it loads the terminal-specific Lisp library (see &lt;a href=&quot;terminal_002dspecific#Terminal_002dSpecific&quot;&gt;Terminal-Specific&lt;/a&gt;), and runs the hook &lt;code&gt;tty-setup-hook&lt;/code&gt; . This is not done in &lt;code&gt;--batch&lt;/code&gt; mode, nor if &lt;code&gt;term-file-prefix&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="29f4b9655356d4a0356d199cc4f7f41ac90dc783" translate="yes" xml:space="preserve">
          <source>If successful it returns a list of Lisp representations of network addresses, otherwise it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">If successful it returns a list of Lisp representations of network addresses, otherwise it returns &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="40c0fd421e87b00227c46aaa704ee2421a1c5407" translate="yes" xml:space="preserve">
          <source>If text has a &lt;code&gt;line-prefix&lt;/code&gt; property, the prefix it defines will be added at display time to the beginning of every non-continuation line. It may be a string or an image (see &lt;a href=&quot;other-display-specs#Other-Display-Specs&quot;&gt;Other Display Specs&lt;/a&gt;), or a stretch of whitespace such as specified by the &lt;code&gt;:width&lt;/code&gt; or &lt;code&gt;:align-to&lt;/code&gt; display properties (see &lt;a href=&quot;specified-space#Specified-Space&quot;&gt;Specified Space&lt;/a&gt;).</source>
          <target state="translated">If text has a &lt;code&gt;line-prefix&lt;/code&gt; property, the prefix it defines will be added at display time to the beginning of every non-continuation line. It may be a string or an image (see &lt;a href=&quot;other-display-specs#Other-Display-Specs&quot;&gt;Other Display Specs&lt;/a&gt;), or a stretch of whitespace such as specified by the &lt;code&gt;:width&lt;/code&gt; or &lt;code&gt;:align-to&lt;/code&gt; display properties (see &lt;a href=&quot;specified-space#Specified-Space&quot;&gt;Specified Space&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="44bc217d22059bdc283ced6839d350ff858ba4cd" translate="yes" xml:space="preserve">
          <source>If text has a &lt;code&gt;wrap-prefix&lt;/code&gt; property, the prefix it defines will be added at display time to the beginning of every continuation line due to text wrapping (so if lines are truncated, the wrap-prefix is never used). It may be a string or an image (see &lt;a href=&quot;other-display-specs#Other-Display-Specs&quot;&gt;Other Display Specs&lt;/a&gt;), or a stretch of whitespace such as specified by the &lt;code&gt;:width&lt;/code&gt; or &lt;code&gt;:align-to&lt;/code&gt; display properties (see &lt;a href=&quot;specified-space#Specified-Space&quot;&gt;Specified Space&lt;/a&gt;).</source>
          <target state="translated">If text has a &lt;code&gt;wrap-prefix&lt;/code&gt; property, the prefix it defines will be added at display time to the beginning of every continuation line due to text wrapping (so if lines are truncated, the wrap-prefix is never used). It may be a string or an image (see &lt;a href=&quot;other-display-specs#Other-Display-Specs&quot;&gt;Other Display Specs&lt;/a&gt;), or a stretch of whitespace such as specified by the &lt;code&gt;:width&lt;/code&gt; or &lt;code&gt;:align-to&lt;/code&gt; display properties (see &lt;a href=&quot;specified-space#Specified-Space&quot;&gt;Specified Space&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="5d15fe92b153b20c4991e58ddab61aea1df96e7c" translate="yes" xml:space="preserve">
          <source>If text has a string as its &lt;code&gt;help-echo&lt;/code&gt; property, then when you move the mouse onto that text, Emacs displays that string in the echo area, or in the tooltip window (see &lt;a href=&quot;tooltips#Tooltips&quot;&gt;Tooltips&lt;/a&gt;), after passing it through &lt;code&gt;substitute-command-keys&lt;/code&gt;.</source>
          <target state="translated">If text has a string as its &lt;code&gt;help-echo&lt;/code&gt; property, then when you move the mouse onto that text, Emacs displays that string in the echo area, or in the tooltip window (see &lt;a href=&quot;tooltips#Tooltips&quot;&gt;Tooltips&lt;/a&gt;), after passing it through &lt;code&gt;substitute-command-keys&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b184a99089048ed59983006ccef80734494848e0" translate="yes" xml:space="preserve">
          <source>If that frame has evaluated its arguments and called its function already, the return value is &lt;code&gt;(t &lt;var&gt;function&lt;/var&gt;
&lt;var&gt;arg-values&lt;/var&gt;&amp;hellip;)&lt;/code&gt;.</source>
          <target state="translated">If that frame has evaluated its arguments and called its function already, the return value is &lt;code&gt;(t &lt;var&gt;function&lt;/var&gt; &lt;var&gt;arg-values&lt;/var&gt;&amp;hellip;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="847eb61278468d0df3be4da2323afe62799a6a4e" translate="yes" xml:space="preserve">
          <source>If that frame has not evaluated the arguments yet, or is a special form, the value is &lt;code&gt;(nil &lt;var&gt;function&lt;/var&gt; &lt;var&gt;arg-forms&lt;/var&gt;&amp;hellip;)&lt;/code&gt;.</source>
          <target state="translated">If that frame has not evaluated the arguments yet, or is a special form, the value is &lt;code&gt;(nil &lt;var&gt;function&lt;/var&gt; &lt;var&gt;arg-forms&lt;/var&gt;&amp;hellip;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3d9b7696c9777c3fdef5f5f1690ef14ee23382d9" translate="yes" xml:space="preserve">
          <source>If the</source>
          <target state="translated">如果</target>
        </trans-unit>
        <trans-unit id="5e17af952a2c4573220ead681dd1e997a966e239" translate="yes" xml:space="preserve">
          <source>If the 1-minute load average is available, but the 5- or 15-minute averages are not, this function returns a shortened list containing the available averages.</source>
          <target state="translated">如果1分钟的负载平均值可用,但5分钟或15分钟的平均值不可用,该函数返回一个包含可用平均值的缩短列表。</target>
        </trans-unit>
        <trans-unit id="97280f2e3281d934f6ea504750b20af163002078" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;defcustom&lt;/code&gt; form for &lt;var&gt;var&lt;/var&gt; has been evaluated prior to this &lt;code&gt;custom-set-variables&lt;/code&gt; call, &lt;var&gt;expression&lt;/var&gt; is immediately evaluated, and the variable&amp;rsquo;s value is set to the result. Otherwise, &lt;var&gt;expression&lt;/var&gt; is stored into the variable&amp;rsquo;s &lt;code&gt;saved-value&lt;/code&gt; property, to be evaluated when the relevant &lt;code&gt;defcustom&lt;/code&gt; is called (usually when the library defining that variable is loaded into Emacs).</source>
          <target state="translated">If the &lt;code&gt;defcustom&lt;/code&gt; form for &lt;var&gt;var&lt;/var&gt; has been evaluated prior to this &lt;code&gt;custom-set-variables&lt;/code&gt; call, &lt;var&gt;expression&lt;/var&gt; is immediately evaluated, and the variable&amp;rsquo;s value is set to the result. Otherwise, &lt;var&gt;expression&lt;/var&gt; is stored into the variable&amp;rsquo;s &lt;code&gt;saved-value&lt;/code&gt; property, to be evaluated when the relevant &lt;code&gt;defcustom&lt;/code&gt; is called (usually when the library defining that variable is loaded into Emacs).</target>
        </trans-unit>
        <trans-unit id="f174fd011e0f1c8a4e31cac2931b13c453f23857" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;font-lock-multiline&lt;/code&gt; variable is set to &lt;code&gt;t&lt;/code&gt;, Font Lock will try to add the &lt;code&gt;font-lock-multiline&lt;/code&gt; property automatically on multiline constructs. This is not a universal solution, however, since it slows down Font Lock somewhat. It can miss some multiline constructs, or make the property larger or smaller than necessary.</source>
          <target state="translated">If the &lt;code&gt;font-lock-multiline&lt;/code&gt; variable is set to &lt;code&gt;t&lt;/code&gt; , Font Lock will try to add the &lt;code&gt;font-lock-multiline&lt;/code&gt; property automatically on multiline constructs. This is not a universal solution, however, since it slows down Font Lock somewhat. It can miss some multiline constructs, or make the property larger or smaller than necessary.</target>
        </trans-unit>
        <trans-unit id="1790598c9ae458e0c35a5d4725099be9d0246fd4" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;other-window&lt;/code&gt; parameter of the selected window is a function, and &lt;code&gt;ignore-window-parameters&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;, that function will be called with the arguments &lt;var&gt;count&lt;/var&gt; and &lt;var&gt;all-frames&lt;/var&gt; instead of the normal operation of this function.</source>
          <target state="translated">If the &lt;code&gt;other-window&lt;/code&gt; parameter of the selected window is a function, and &lt;code&gt;ignore-window-parameters&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt; , that function will be called with the arguments &lt;var&gt;count&lt;/var&gt; and &lt;var&gt;all-frames&lt;/var&gt; instead of the normal operation of this function.</target>
        </trans-unit>
        <trans-unit id="03b321af0c9e866eddae56c1656e85dcbc358fbe" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;window&lt;/code&gt; property is non-&lt;code&gt;nil&lt;/code&gt;, then the overlay applies only on that window.</source>
          <target state="translated">If the &lt;code&gt;window&lt;/code&gt; property is non- &lt;code&gt;nil&lt;/code&gt; , then the overlay applies only on that window.</target>
        </trans-unit>
        <trans-unit id="97d3e8d43b35d39378da1c412e7a81cc5af262b9" translate="yes" xml:space="preserve">
          <source>If the &lt;small&gt;CAR&lt;/small&gt; of &lt;var&gt;list&lt;/var&gt; is &lt;code&gt;lambda&lt;/code&gt;, then the list is a lambda expression. This is presumed to be a function, and is treated as such (see above). In order to execute properly as a key binding, this function must be a command&amp;mdash;it must have an &lt;code&gt;interactive&lt;/code&gt; specification. See &lt;a href=&quot;defining-commands#Defining-Commands&quot;&gt;Defining Commands&lt;/a&gt;.</source>
          <target state="translated">If the &lt;small&gt;CAR&lt;/small&gt; of &lt;var&gt;list&lt;/var&gt; is &lt;code&gt;lambda&lt;/code&gt; , then the list is a lambda expression. This is presumed to be a function, and is treated as such (see above). In order to execute properly as a key binding, this function must be a command&amp;mdash;it must have an &lt;code&gt;interactive&lt;/code&gt; specification. See &lt;a href=&quot;defining-commands#Defining-Commands&quot;&gt;Defining Commands&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="7154685a78e92985a36c6d7e12500a86e731c4fc" translate="yes" xml:space="preserve">
          <source>If the &lt;small&gt;CAR&lt;/small&gt; of &lt;var&gt;list&lt;/var&gt; is the symbol &lt;code&gt;keymap&lt;/code&gt;, then the list is a keymap, and is treated as a keymap (see above).</source>
          <target state="translated">If the &lt;small&gt;CAR&lt;/small&gt; of &lt;var&gt;list&lt;/var&gt; is the symbol &lt;code&gt;keymap&lt;/code&gt; , then the list is a keymap, and is treated as a keymap (see above).</target>
        </trans-unit>
        <trans-unit id="fe289f9488db4ee1cd75cb0cd7b6108b6d71dc5c" translate="yes" xml:space="preserve">
          <source>If the &lt;small&gt;CDR&lt;/small&gt; of a list&amp;rsquo;s last cons cell is some value other than &lt;code&gt;nil&lt;/code&gt;, we call the structure a &lt;em&gt;dotted list&lt;/em&gt;, since its printed representation would use dotted pair notation (see &lt;a href=&quot;dotted-pair-notation#Dotted-Pair-Notation&quot;&gt;Dotted Pair Notation&lt;/a&gt;). There is one other possibility: some cons cell&amp;rsquo;s &lt;small&gt;CDR&lt;/small&gt; could point to one of the previous cons cells in the list. We call that structure a &lt;em&gt;circular list&lt;/em&gt;.</source>
          <target state="translated">If the &lt;small&gt;CDR&lt;/small&gt; of a list&amp;rsquo;s last cons cell is some value other than &lt;code&gt;nil&lt;/code&gt; , we call the structure a &lt;em&gt;dotted list&lt;/em&gt;, since its printed representation would use dotted pair notation (see &lt;a href=&quot;dotted-pair-notation#Dotted-Pair-Notation&quot;&gt;Dotted Pair Notation&lt;/a&gt;). There is one other possibility: some cons cell&amp;rsquo;s &lt;small&gt;CDR&lt;/small&gt; could point to one of the previous cons cells in the list. We call that structure a &lt;em&gt;circular list&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="424e8198016ba0ccc4d18f9f610113713028987b" translate="yes" xml:space="preserve">
          <source>If the &lt;var&gt;alist&lt;/var&gt; argument of that function (see &lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;Choosing Window&lt;/a&gt;) contains a &lt;code&gt;preserve-size&lt;/code&gt; entry, the size of the window produced by that function is preserved.</source>
          <target state="translated">If the &lt;var&gt;alist&lt;/var&gt; argument of that function (see &lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;Choosing Window&lt;/a&gt;) contains a &lt;code&gt;preserve-size&lt;/code&gt; entry, the size of the window produced by that function is preserved.</target>
        </trans-unit>
        <trans-unit id="c52639c39140e2bd123aed39bf8018dece7b3c48" translate="yes" xml:space="preserve">
          <source>If the &lt;var&gt;doc-string&lt;/var&gt; argument is supplied, it specifies the documentation string for the variable (stored in the symbol&amp;rsquo;s &lt;code&gt;variable-documentation&lt;/code&gt; property). See &lt;a href=&quot;documentation#Documentation&quot;&gt;Documentation&lt;/a&gt;.</source>
          <target state="translated">If the &lt;var&gt;doc-string&lt;/var&gt; argument is supplied, it specifies the documentation string for the variable (stored in the symbol&amp;rsquo;s &lt;code&gt;variable-documentation&lt;/code&gt; property). See &lt;a href=&quot;documentation#Documentation&quot;&gt;Documentation&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="d01ce025c58e0693441c85648be2ceace369821d" translate="yes" xml:space="preserve">
          <source>If the &lt;var&gt;docstring&lt;/var&gt; argument is non-&lt;code&gt;nil&lt;/code&gt;, it specifies the documentation for &lt;var&gt;new-alias&lt;/var&gt;; otherwise, the alias gets the same documentation as &lt;var&gt;base-variable&lt;/var&gt; has, if any, unless &lt;var&gt;base-variable&lt;/var&gt; is itself an alias, in which case &lt;var&gt;new-alias&lt;/var&gt; gets the documentation of the variable at the end of the chain of aliases.</source>
          <target state="translated">If the &lt;var&gt;docstring&lt;/var&gt; argument is non- &lt;code&gt;nil&lt;/code&gt; , it specifies the documentation for &lt;var&gt;new-alias&lt;/var&gt; ; otherwise, the alias gets the same documentation as &lt;var&gt;base-variable&lt;/var&gt; has, if any, unless &lt;var&gt;base-variable&lt;/var&gt; is itself an alias, in which case &lt;var&gt;new-alias&lt;/var&gt; gets the documentation of the variable at the end of the chain of aliases.</target>
        </trans-unit>
        <trans-unit id="8abe3fc2fdc3412f9be8328b5b8da045f82402b4" translate="yes" xml:space="preserve">
          <source>If the &lt;var&gt;file&lt;/var&gt; cannot be watched for some reason, this function signals a &lt;code&gt;file-notify-error&lt;/code&gt; error.</source>
          <target state="translated">If the &lt;var&gt;file&lt;/var&gt; cannot be watched for some reason, this function signals a &lt;code&gt;file-notify-error&lt;/code&gt; error.</target>
        </trans-unit>
        <trans-unit id="d4664b8df5d4e7d3bdde95bfdbcdf58cf12a2663" translate="yes" xml:space="preserve">
          <source>If the &lt;var&gt;find-file&lt;/var&gt; argument to &lt;code&gt;normal-mode&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;normal-mode&lt;/code&gt; assumes that the &lt;code&gt;find-file&lt;/code&gt; function is calling it. In this case, it may process local variables in the &amp;lsquo;</source>
          <target state="translated">If the &lt;var&gt;find-file&lt;/var&gt; argument to &lt;code&gt;normal-mode&lt;/code&gt; is non- &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;normal-mode&lt;/code&gt; assumes that the &lt;code&gt;find-file&lt;/code&gt; function is calling it. In this case, it may process local variables in the &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="544e0e4ec05ea04f153a1ffe2c205b4abdb7efdd" translate="yes" xml:space="preserve">
          <source>If the &lt;var&gt;height&lt;/var&gt; value doesn&amp;rsquo;t fit the previous possibilities, it is a form. Emacs evaluates it to get the new height, with the symbol &lt;code&gt;height&lt;/code&gt; bound to the current specified font height.</source>
          <target state="translated">If the &lt;var&gt;height&lt;/var&gt; value doesn&amp;rsquo;t fit the previous possibilities, it is a form. Emacs evaluates it to get the new height, with the symbol &lt;code&gt;height&lt;/code&gt; bound to the current specified font height.</target>
        </trans-unit>
        <trans-unit id="2ee2a9e2a05e9cbd4ebcabce4d98e573ce6b99f1" translate="yes" xml:space="preserve">
          <source>If the &lt;var&gt;path&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that list of directories is used instead of &lt;code&gt;load-path&lt;/code&gt;.</source>
          <target state="translated">If the &lt;var&gt;path&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , that list of directories is used instead of &lt;code&gt;load-path&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f9dbd115e2fe4851e1fd608ae59011205214448c" translate="yes" xml:space="preserve">
          <source>If the &lt;var&gt;value&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, mark &lt;var&gt;option&lt;/var&gt; as automatically buffer-local; if the value is &lt;code&gt;permanent&lt;/code&gt;, also set &lt;var&gt;option&lt;/var&gt;s &lt;code&gt;permanent-local&lt;/code&gt; property to &lt;code&gt;t&lt;/code&gt;. See &lt;a href=&quot;creating-buffer_002dlocal#Creating-Buffer_002dLocal&quot;&gt;Creating Buffer-Local&lt;/a&gt;.</source>
          <target state="translated">If the &lt;var&gt;value&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt; , mark &lt;var&gt;option&lt;/var&gt; as automatically buffer-local; if the value is &lt;code&gt;permanent&lt;/code&gt; , also set &lt;var&gt;option&lt;/var&gt; s &lt;code&gt;permanent-local&lt;/code&gt; property to &lt;code&gt;t&lt;/code&gt; . See &lt;a href=&quot;creating-buffer_002dlocal#Creating-Buffer_002dLocal&quot;&gt;Creating Buffer-Local&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="fc8ad90de57bbf124d088ff2c62b110c84781c3c" translate="yes" xml:space="preserve">
          <source>If the Emacs process&amp;rsquo;s user-id does not correspond to any known user (and provided &lt;code&gt;NAME&lt;/code&gt; is not set), the result is &lt;code&gt;&quot;unknown&quot;&lt;/code&gt;.</source>
          <target state="translated">If the Emacs process&amp;rsquo;s user-id does not correspond to any known user (and provided &lt;code&gt;NAME&lt;/code&gt; is not set), the result is &lt;code&gt;&quot;unknown&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8b4e9cfb4b7ef208b80fee0e223a915694d643a8" translate="yes" xml:space="preserve">
          <source>If the action code is a string or vector, the</source>
          <target state="translated">如果动作代码是一个字符串或向量,那么</target>
        </trans-unit>
        <trans-unit id="22a69351149b285cd95fc9520541a02ef12445d5" translate="yes" xml:space="preserve">
          <source>If the actual subdivision into intervals is meaningful, that means you can distinguish between a buffer that is just one interval with a certain property, and a buffer containing the same text subdivided into two intervals, both of which have that property.</source>
          <target state="translated">如果实际细分为区间是有意义的,那就意味着你可以区分一个缓冲区只是一个具有某种属性的区间,和一个包含同一文本的缓冲区被细分为两个区间,这两个区间都具有该属性。</target>
        </trans-unit>
        <trans-unit id="5a83c2ef9b2ea8b65afff88495273d99dca09042" translate="yes" xml:space="preserve">
          <source>If the argument &lt;var&gt;binary&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, the function returns the &lt;em&gt;text form&lt;/em&gt; of the hash, as an ordinary Lisp string. If &lt;var&gt;binary&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it returns the hash in &lt;em&gt;binary form&lt;/em&gt;, as a sequence of bytes stored in a unibyte string.</source>
          <target state="translated">If the argument &lt;var&gt;binary&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt; , the function returns the &lt;em&gt;text form&lt;/em&gt; of the hash, as an ordinary Lisp string. If &lt;var&gt;binary&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , it returns the hash in &lt;em&gt;binary form&lt;/em&gt;, as a sequence of bytes stored in a unibyte string.</target>
        </trans-unit>
        <trans-unit id="e10d049a8be15c0c954d31fb09186546a431b4fd" translate="yes" xml:space="preserve">
          <source>If the argument &lt;var&gt;delay-question&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, delay sending this question until the process has finished replying to any previous questions. This produces more reliable results with some processes.</source>
          <target state="translated">If the argument &lt;var&gt;delay-question&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , delay sending this question until the process has finished replying to any previous questions. This produces more reliable results with some processes.</target>
        </trans-unit>
        <trans-unit id="fdab9ed15c636e7683dee919701455b2de68f386" translate="yes" xml:space="preserve">
          <source>If the argument &lt;var&gt;help&lt;/var&gt; is given, it should be a list of this form:</source>
          <target state="translated">If the argument &lt;var&gt;help&lt;/var&gt; is given, it should be a list of this form:</target>
        </trans-unit>
        <trans-unit id="7880971ad13cb4ee532d137f1832525ca323a437" translate="yes" xml:space="preserve">
          <source>If the argument &lt;var&gt;inherit-input-method&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then the minibuffer inherits the current input method (see &lt;a href=&quot;input-methods#Input-Methods&quot;&gt;Input Methods&lt;/a&gt;) and the setting of &lt;code&gt;enable-multibyte-characters&lt;/code&gt; (see &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Text Representations&lt;/a&gt;) from whichever buffer was current before entering the minibuffer.</source>
          <target state="translated">If the argument &lt;var&gt;inherit-input-method&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , then the minibuffer inherits the current input method (see &lt;a href=&quot;input-methods#Input-Methods&quot;&gt;Input Methods&lt;/a&gt;) and the setting of &lt;code&gt;enable-multibyte-characters&lt;/code&gt; (see &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Text Representations&lt;/a&gt;) from whichever buffer was current before entering the minibuffer.</target>
        </trans-unit>
        <trans-unit id="79a597d61ae6fb37cd3c5f737528903c265a9607" translate="yes" xml:space="preserve">
          <source>If the argument &lt;var&gt;predicate&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then it must be a function of one argument, unless &lt;var&gt;collection&lt;/var&gt; is a hash table, in which case it should be a function of two arguments. It is used to test each possible match, and the match is accepted only if &lt;var&gt;predicate&lt;/var&gt; returns non-&lt;code&gt;nil&lt;/code&gt;. The argument given to &lt;var&gt;predicate&lt;/var&gt; is either a string or a cons cell (the &lt;small&gt;CAR&lt;/small&gt; of which is a string) from the alist, or a symbol (&lt;em&gt;not&lt;/em&gt; a symbol name) from the obarray. If &lt;var&gt;collection&lt;/var&gt; is a hash table, &lt;var&gt;predicate&lt;/var&gt; is called with two arguments, the string key and the associated value.</source>
          <target state="translated">If the argument &lt;var&gt;predicate&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , then it must be a function of one argument, unless &lt;var&gt;collection&lt;/var&gt; is a hash table, in which case it should be a function of two arguments. It is used to test each possible match, and the match is accepted only if &lt;var&gt;predicate&lt;/var&gt; returns non- &lt;code&gt;nil&lt;/code&gt; . The argument given to &lt;var&gt;predicate&lt;/var&gt; is either a string or a cons cell (the &lt;small&gt;CAR&lt;/small&gt; of which is a string) from the alist, or a symbol (&lt;em&gt;not&lt;/em&gt; a symbol name) from the obarray. If &lt;var&gt;collection&lt;/var&gt; is a hash table, &lt;var&gt;predicate&lt;/var&gt; is called with two arguments, the string key and the associated value.</target>
        </trans-unit>
        <trans-unit id="1e8ec49cd22906ec7c362708e48e45bccbf9fab6" translate="yes" xml:space="preserve">
          <source>If the argument &lt;var&gt;replace&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it means to replace the contents of the buffer (actually, just the accessible portion) with the contents of the file. This is better than simply deleting the buffer contents and inserting the whole file, because (1) it preserves some marker positions and (2) it puts less data in the undo list.</source>
          <target state="translated">If the argument &lt;var&gt;replace&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , it means to replace the contents of the buffer (actually, just the accessible portion) with the contents of the file. This is better than simply deleting the buffer contents and inserting the whole file, because (1) it preserves some marker positions and (2) it puts less data in the undo list.</target>
        </trans-unit>
        <trans-unit id="b9ce24fc8b5938e53493beb02dffd65685e0462c" translate="yes" xml:space="preserve">
          <source>If the argument is a string with text properties, the property list in the copy is itself a copy, not shared with the original&amp;rsquo;s property list. However, the actual values of the properties are shared. See &lt;a href=&quot;text-properties#Text-Properties&quot;&gt;Text Properties&lt;/a&gt;.</source>
          <target state="translated">If the argument is a string with text properties, the property list in the copy is itself a copy, not shared with the original&amp;rsquo;s property list. However, the actual values of the properties are shared. See &lt;a href=&quot;text-properties#Text-Properties&quot;&gt;Text Properties&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="f6769c6ffad1ce1803b2f5f120ff2fd6346460fe" translate="yes" xml:space="preserve">
          <source>If the attempt to make point visible (i.e., in a fully-visible screen line) fails, the display routines will disregard the requested window-start position and compute a new one anyway. Thus, for reliable results Lisp programs that call this function should always move point to be inside the window whose display starts at &lt;var&gt;position&lt;/var&gt;.</source>
          <target state="translated">If the attempt to make point visible (i.e., in a fully-visible screen line) fails, the display routines will disregard the requested window-start position and compute a new one anyway. Thus, for reliable results Lisp programs that call this function should always move point to be inside the window whose display starts at &lt;var&gt;position&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="53aa631615bd5530c64e36d6c02beaed78d34de9" translate="yes" xml:space="preserve">
          <source>If the autoloaded file fails to define the desired Lisp function or macro, then an error is signaled with data &lt;code&gt;&quot;Autoloading failed to
define function &lt;var&gt;function-name&lt;/var&gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">If the autoloaded file fails to define the desired Lisp function or macro, then an error is signaled with data &lt;code&gt;&quot;Autoloading failed to define function &lt;var&gt;function-name&lt;/var&gt;&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="803922d41afa50bf9a9d9ac003f082cfe949a52b" translate="yes" xml:space="preserve">
          <source>If the base location starts with &amp;lsquo;</source>
          <target state="translated">If the base location starts with &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="b618cf6da3ee38d4f1100dca09e58dac2332f9d6" translate="yes" xml:space="preserve">
          <source>If the binding of a key sequence is a keymap, we call the key sequence a &lt;em&gt;prefix key&lt;/em&gt;. Otherwise, we call it a &lt;em&gt;complete key&lt;/em&gt; (because no more events can be added to it). If the binding is &lt;code&gt;nil&lt;/code&gt;, we call the key &lt;em&gt;undefined&lt;/em&gt;. Examples of prefix keys are</source>
          <target state="translated">If the binding of a key sequence is a keymap, we call the key sequence a &lt;em&gt;prefix key&lt;/em&gt;. Otherwise, we call it a &lt;em&gt;complete key&lt;/em&gt; (because no more events can be added to it). If the binding is &lt;code&gt;nil&lt;/code&gt; , we call the key &lt;em&gt;undefined&lt;/em&gt;. Examples of prefix keys are</target>
        </trans-unit>
        <trans-unit id="b42b592b3eaf84b0272824c58a7b1c63f70a7137" translate="yes" xml:space="preserve">
          <source>If the buffer</source>
          <target state="translated">如果缓冲区</target>
        </trans-unit>
        <trans-unit id="9fb23d2ab9e30a958cb01f3be9687521a1f2108c" translate="yes" xml:space="preserve">
          <source>If the buffer has no recorded last modification time, this function returns zero. This case occurs, for instance, if the buffer is not visiting a file or if the time has been explicitly cleared by &lt;code&gt;clear-visited-file-modtime&lt;/code&gt;. Note, however, that &lt;code&gt;visited-file-modtime&lt;/code&gt; returns a timestamp for some non-file buffers too. For instance, in a Dired buffer listing a directory, it returns the last modification time of that directory, as recorded by Dired.</source>
          <target state="translated">If the buffer has no recorded last modification time, this function returns zero. This case occurs, for instance, if the buffer is not visiting a file or if the time has been explicitly cleared by &lt;code&gt;clear-visited-file-modtime&lt;/code&gt; . Note, however, that &lt;code&gt;visited-file-modtime&lt;/code&gt; returns a timestamp for some non-file buffers too. For instance, in a Dired buffer listing a directory, it returns the last modification time of that directory, as recorded by Dired.</target>
        </trans-unit>
        <trans-unit id="3eb696d2b48fba3d8c9166772e7011af11a1be37" translate="yes" xml:space="preserve">
          <source>If the buffer is visiting a file and contains unsaved changes, &lt;code&gt;kill-buffer&lt;/code&gt; asks the user to confirm before the buffer is killed. It does this even if not called interactively. To prevent the request for confirmation, clear the modified flag before calling &lt;code&gt;kill-buffer&lt;/code&gt;. See &lt;a href=&quot;buffer-modification#Buffer-Modification&quot;&gt;Buffer Modification&lt;/a&gt;.</source>
          <target state="translated">If the buffer is visiting a file and contains unsaved changes, &lt;code&gt;kill-buffer&lt;/code&gt; asks the user to confirm before the buffer is killed. It does this even if not called interactively. To prevent the request for confirmation, clear the modified flag before calling &lt;code&gt;kill-buffer&lt;/code&gt; . See &lt;a href=&quot;buffer-modification#Buffer-Modification&quot;&gt;Buffer Modification&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="b0bca82333b4ce5dd152ea39f5819e4f37d2eaa1" translate="yes" xml:space="preserve">
          <source>If the buffer is visiting a file that doesn&amp;rsquo;t exist, this function returns -1.</source>
          <target state="translated">If the buffer is visiting a file that doesn&amp;rsquo;t exist, this function returns -1.</target>
        </trans-unit>
        <trans-unit id="f6ab4ecbe64f576dadab98e97450e5f18510d5ba" translate="yes" xml:space="preserve">
          <source>If the buffer of a window of &lt;var&gt;configuration&lt;/var&gt; has been killed since &lt;var&gt;configuration&lt;/var&gt; was made, that window is, as a rule, removed from the restored configuration. However, if that window is the last window remaining in the restored configuration, another live buffer is shown in it.</source>
          <target state="translated">If the buffer of a window of &lt;var&gt;configuration&lt;/var&gt; has been killed since &lt;var&gt;configuration&lt;/var&gt; was made, that window is, as a rule, removed from the restored configuration. However, if that window is the last window remaining in the restored configuration, another live buffer is shown in it.</target>
        </trans-unit>
        <trans-unit id="6e8f1242e15fde8f68946683c1fc5e14009fd4e5" translate="yes" xml:space="preserve">
          <source>If the buffer or text is read-only, &lt;code&gt;kill-region&lt;/code&gt; modifies the kill ring just the same, then signals an error without modifying the buffer. This is convenient because it lets the user use a series of kill commands to copy text from a read-only buffer into the kill ring.</source>
          <target state="translated">If the buffer or text is read-only, &lt;code&gt;kill-region&lt;/code&gt; modifies the kill ring just the same, then signals an error without modifying the buffer. This is convenient because it lets the user use a series of kill commands to copy text from a read-only buffer into the kill ring.</target>
        </trans-unit>
        <trans-unit id="808f6a7fd9a07ae313e156bf9263fe4bfab2277b" translate="yes" xml:space="preserve">
          <source>If the buffer position &lt;var&gt;position&lt;/var&gt; is visible in window &lt;var&gt;window&lt;/var&gt;, this function returns the display coordinates of the upper/left corner of the glyph at &lt;var&gt;position&lt;/var&gt;. The return value is a cons of the X- and Y-coordinates of that corner, relative to an origin at (0, 0) of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s display. It returns &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;position&lt;/var&gt; is not visible in &lt;var&gt;window&lt;/var&gt;.</source>
          <target state="translated">If the buffer position &lt;var&gt;position&lt;/var&gt; is visible in window &lt;var&gt;window&lt;/var&gt; , this function returns the display coordinates of the upper/left corner of the glyph at &lt;var&gt;position&lt;/var&gt; . The return value is a cons of the X- and Y-coordinates of that corner, relative to an origin at (0, 0) of &lt;var&gt;window&lt;/var&gt; &amp;rsquo;s display. It returns &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;position&lt;/var&gt; is not visible in &lt;var&gt;window&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="2c08f507628df4359197a1739c4f41981f186505" translate="yes" xml:space="preserve">
          <source>If the buffer size specified by &lt;code&gt;*&lt;var&gt;len&lt;/var&gt;&lt;/code&gt; is large enough to hold the string&amp;rsquo;s text, the function stores in &lt;code&gt;*&lt;var&gt;len&lt;/var&gt;&lt;/code&gt; the actual number of bytes copied to &lt;var&gt;buf&lt;/var&gt;, including the terminating null byte, and returns &lt;code&gt;true&lt;/code&gt;. If the buffer is too small, the function raises the &lt;code&gt;args-out-of-range&lt;/code&gt; error condition, stores the required number of bytes in &lt;code&gt;*&lt;var&gt;len&lt;/var&gt;&lt;/code&gt;, and returns &lt;code&gt;false&lt;/code&gt;. See &lt;a href=&quot;module-nonlocal#Module-Nonlocal&quot;&gt;Module Nonlocal&lt;/a&gt;, for how to handle pending error conditions.</source>
          <target state="translated">If the buffer size specified by &lt;code&gt;*&lt;var&gt;len&lt;/var&gt;&lt;/code&gt; is large enough to hold the string&amp;rsquo;s text, the function stores in &lt;code&gt;*&lt;var&gt;len&lt;/var&gt;&lt;/code&gt; the actual number of bytes copied to &lt;var&gt;buf&lt;/var&gt; , including the terminating null byte, and returns &lt;code&gt;true&lt;/code&gt; . If the buffer is too small, the function raises the &lt;code&gt;args-out-of-range&lt;/code&gt; error condition, stores the required number of bytes in &lt;code&gt;*&lt;var&gt;len&lt;/var&gt;&lt;/code&gt; , and returns &lt;code&gt;false&lt;/code&gt; . See &lt;a href=&quot;module-nonlocal#Module-Nonlocal&quot;&gt;Module Nonlocal&lt;/a&gt;, for how to handle pending error conditions.</target>
        </trans-unit>
        <trans-unit id="4096e8444dc3c6041bd288b8d8d22dfd6b4f8727" translate="yes" xml:space="preserve">
          <source>If the buffer that used to be current has been killed by the time of exit from &lt;code&gt;save-current-buffer&lt;/code&gt;, then it is not made current again, of course. Instead, whichever buffer was current just before exit remains current.</source>
          <target state="translated">If the buffer that used to be current has been killed by the time of exit from &lt;code&gt;save-current-buffer&lt;/code&gt; , then it is not made current again, of course. Instead, whichever buffer was current just before exit remains current.</target>
        </trans-unit>
        <trans-unit id="c5684710e6f636642a1e22d212f2b9d103d05737" translate="yes" xml:space="preserve">
          <source>If the button has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;follow-link&lt;/code&gt; property, and &lt;code&gt;mouse-1-click-follows-link&lt;/code&gt; is set, a quick</source>
          <target state="translated">If the button has a non- &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;follow-link&lt;/code&gt; property, and &lt;code&gt;mouse-1-click-follows-link&lt;/code&gt; is set, a quick</target>
        </trans-unit>
        <trans-unit id="eccbf77d477d2a7c5de1862108f5baba2e869ed2" translate="yes" xml:space="preserve">
          <source>If the characters copied from &lt;var&gt;string&lt;/var&gt; have text properties, the properties are copied into the new string also. See &lt;a href=&quot;text-properties#Text-Properties&quot;&gt;Text Properties&lt;/a&gt;.</source>
          <target state="translated">If the characters copied from &lt;var&gt;string&lt;/var&gt; have text properties, the properties are copied into the new string also. See &lt;a href=&quot;text-properties#Text-Properties&quot;&gt;Text Properties&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="5b607989553c9dbdef0c41babb143b4033c4f93b" translate="yes" xml:space="preserve">
          <source>If the command asks for a prefix argument, it receives the value &lt;var&gt;prefix-argument&lt;/var&gt;. If &lt;code&gt;execute-extended-command&lt;/code&gt; is called interactively, the current raw prefix argument is used for &lt;var&gt;prefix-argument&lt;/var&gt;, and thus passed on to whatever command is run.</source>
          <target state="translated">If the command asks for a prefix argument, it receives the value &lt;var&gt;prefix-argument&lt;/var&gt; . If &lt;code&gt;execute-extended-command&lt;/code&gt; is called interactively, the current raw prefix argument is used for &lt;var&gt;prefix-argument&lt;/var&gt; , and thus passed on to whatever command is run.</target>
        </trans-unit>
        <trans-unit id="3fc92ac537a37267fa3d2ae35555184873591f1b" translate="yes" xml:space="preserve">
          <source>If the command is a keyboard macro (i.e., a string or vector), Emacs executes it using &lt;code&gt;execute-kbd-macro&lt;/code&gt; (see &lt;a href=&quot;keyboard-macros#Keyboard-Macros&quot;&gt;Keyboard Macros&lt;/a&gt;).</source>
          <target state="translated">If the command is a keyboard macro (i.e., a string or vector), Emacs executes it using &lt;code&gt;execute-kbd-macro&lt;/code&gt; (see &lt;a href=&quot;keyboard-macros#Keyboard-Macros&quot;&gt;Keyboard Macros&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="3e7fee2389ae3316646e9192b70deb7670674b09" translate="yes" xml:space="preserve">
          <source>If the command was invoked through shift-translation, set the mark and activate the region temporarily, or extend an already active region, before the command is run. If the command was invoked without shift-translation, and the region is temporarily active, deactivate the region before the command is run. Special.</source>
          <target state="translated">如果命令是通过移位翻译调用的,则在命令运行前设置标记并暂时激活该区域,或扩展已经激活的区域。如果命令是在没有移位翻译的情况下调用的,且区域暂时处于活动状态,则在命令运行前停用该区域。特殊情况。</target>
        </trans-unit>
        <trans-unit id="6c83cfde2807ead6babd5c50dc52c4abfd86c927" translate="yes" xml:space="preserve">
          <source>If the condition is a function, &lt;var&gt;func&lt;/var&gt;, then a position &lt;var&gt;pos&lt;/var&gt; is inside a link if &lt;code&gt;(&lt;var&gt;func&lt;/var&gt; &lt;var&gt;pos&lt;/var&gt;)&lt;/code&gt; evaluates to non-&lt;code&gt;nil&lt;/code&gt;. The value returned by &lt;var&gt;func&lt;/var&gt; serves as the action code.</source>
          <target state="translated">If the condition is a function, &lt;var&gt;func&lt;/var&gt; , then a position &lt;var&gt;pos&lt;/var&gt; is inside a link if &lt;code&gt;(&lt;var&gt;func&lt;/var&gt; &lt;var&gt;pos&lt;/var&gt;)&lt;/code&gt; evaluates to non- &lt;code&gt;nil&lt;/code&gt; . The value returned by &lt;var&gt;func&lt;/var&gt; serves as the action code.</target>
        </trans-unit>
        <trans-unit id="2b611e5d0539f4653aead23fb1c79ba4aee87256" translate="yes" xml:space="preserve">
          <source>If the condition is the symbol &lt;code&gt;mouse-face&lt;/code&gt;, a position is inside a link if there is a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;mouse-face&lt;/code&gt; property at that position. The action code is always &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">If the condition is the symbol &lt;code&gt;mouse-face&lt;/code&gt; , a position is inside a link if there is a non- &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;mouse-face&lt;/code&gt; property at that position. The action code is always &lt;code&gt;t&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="056e7702641ae931e2d243ed19a6e2197a02f48c" translate="yes" xml:space="preserve">
          <source>If the condition value is anything else, then the position is inside a link and the condition itself is the action code. Clearly, you should specify this kind of condition only when applying the condition via a text or property overlay on the link text (so that it does not apply to the entire buffer).</source>
          <target state="translated">如果条件值是其他东西,那么位置就在链接里面,条件本身就是操作代码。显然,只有在通过文本或属性叠加在链接文本上应用条件时,你才应该指定这种条件(这样它就不会应用于整个缓冲区)。</target>
        </trans-unit>
        <trans-unit id="bf453ddf2c18b51f178d0aea4c9759763dbe2cac" translate="yes" xml:space="preserve">
          <source>If the connection &lt;code&gt;type&lt;/code&gt; is &lt;code&gt;shell&lt;/code&gt;, this parameter will be interpreted as a format-spec string that will be executed to make the connection. The specs available are &amp;lsquo;</source>
          <target state="translated">If the connection &lt;code&gt;type&lt;/code&gt; is &lt;code&gt;shell&lt;/code&gt; , this parameter will be interpreted as a format-spec string that will be executed to make the connection. The specs available are &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="1b87022066cecde4b54384a04abbdd54e7dc31cd" translate="yes" xml:space="preserve">
          <source>If the content directory contains a file named</source>
          <target state="translated">如果内容目录包含一个名为</target>
        </trans-unit>
        <trans-unit id="e45ae9eaeb69f38a1876754ce7a5029f59407d6b" translate="yes" xml:space="preserve">
          <source>If the crop area is outside or overlaps the edge of the image it will be reduced to exclude any areas outside of the image. This means it is not possible to use &lt;code&gt;:crop&lt;/code&gt; to increase the size of the image by entering large &lt;var&gt;width&lt;/var&gt; or &lt;var&gt;height&lt;/var&gt; values.</source>
          <target state="translated">If the crop area is outside or overlaps the edge of the image it will be reduced to exclude any areas outside of the image. This means it is not possible to use &lt;code&gt;:crop&lt;/code&gt; to increase the size of the image by entering large &lt;var&gt;width&lt;/var&gt; or &lt;var&gt;height&lt;/var&gt; values.</target>
        </trans-unit>
        <trans-unit id="070aacbb69df6bef77d26cbb42be7950af03d1a9" translate="yes" xml:space="preserve">
          <source>If the current Emacs session restored its state from a dump file, this function returns information about the dump file and the time it took to restore the Emacs state. The value is an alist &lt;code&gt;((dumped-with-pdumper&amp;nbsp;.&amp;nbsp;t)&amp;nbsp;(load-time&amp;nbsp;.&amp;nbsp;&lt;var&gt;time&lt;/var&gt;)&amp;nbsp;(dump-file-name&amp;nbsp;.&amp;nbsp;&lt;var&gt;file&lt;/var&gt;))&lt;/code&gt;, where &lt;var&gt;file&lt;/var&gt; is the name of the dump file, and &lt;var&gt;time&lt;/var&gt; is the time in seconds it took to restore the state from the dump file. If the current session was not restored from a dump file, the value is nil.</source>
          <target state="translated">If the current Emacs session restored its state from a dump file, this function returns information about the dump file and the time it took to restore the Emacs state. The value is an alist &lt;code&gt;((dumped-with-pdumper&amp;nbsp;.&amp;nbsp;t)&amp;nbsp;(load-time&amp;nbsp;.&amp;nbsp;&lt;var&gt;time&lt;/var&gt;)&amp;nbsp;(dump-file-name&amp;nbsp;.&amp;nbsp;&lt;var&gt;file&lt;/var&gt;))&lt;/code&gt; , where &lt;var&gt;file&lt;/var&gt; is the name of the dump file, and &lt;var&gt;time&lt;/var&gt; is the time in seconds it took to restore the state from the dump file. If the current session was not restored from a dump file, the value is nil.</target>
        </trans-unit>
        <trans-unit id="d0eeb02c99c9b3df4b9d379c927dc934adec3211" translate="yes" xml:space="preserve">
          <source>If the current buffer is not the same as the selected window&amp;rsquo;s buffer, &lt;code&gt;recursive-edit&lt;/code&gt; saves and restores the current buffer. Otherwise, if you switch buffers, the buffer you switched to is current after &lt;code&gt;recursive-edit&lt;/code&gt; returns.</source>
          <target state="translated">If the current buffer is not the same as the selected window&amp;rsquo;s buffer, &lt;code&gt;recursive-edit&lt;/code&gt; saves and restores the current buffer. Otherwise, if you switch buffers, the buffer you switched to is current after &lt;code&gt;recursive-edit&lt;/code&gt; returns.</target>
        </trans-unit>
        <trans-unit id="4e253d213ea596399bdda97ff0dc4b3561896f5b" translate="yes" xml:space="preserve">
          <source>If the debugger was entered due to a</source>
          <target state="translated">如果是由于进入了调试器,那么由于</target>
        </trans-unit>
        <trans-unit id="33b4631942887b90e212a97ab276b928655c23c0" translate="yes" xml:space="preserve">
          <source>If the default value is &lt;code&gt;nil&lt;/code&gt;, then whenever Emacs creates a new buffer via a command such as</source>
          <target state="translated">如果默认值为 &lt;code&gt;nil&lt;/code&gt; ，那么每当Emacs通过诸如以下命令创建新缓冲区时，</target>
        </trans-unit>
        <trans-unit id="b7e870a26e6d4420e95bcef64f66010c99679503" translate="yes" xml:space="preserve">
          <source>If the display is not up to date, &lt;code&gt;window-line-height&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;. In that case, &lt;code&gt;pos-visible-in-window-p&lt;/code&gt; may be used to obtain related information.</source>
          <target state="translated">如果显示不是最新的，则 &lt;code&gt;window-line-height&lt;/code&gt; 返回 &lt;code&gt;nil&lt;/code&gt; 。在那种情况下，可以使用 &lt;code&gt;pos-visible-in-window-p&lt;/code&gt; 获得相关信息。</target>
        </trans-unit>
        <trans-unit id="fc8a692ea2ab45dd7d66680b28759c6ef6c56a76" translate="yes" xml:space="preserve">
          <source>If the environment variable &lt;code&gt;EMACSLOADPATH&lt;/code&gt; is set, it modifies the above initialization procedure. Emacs initializes &lt;code&gt;load-path&lt;/code&gt; based on the value of the environment variable.</source>
          <target state="translated">如果设置了环境变量 &lt;code&gt;EMACSLOADPATH&lt;/code&gt; ，它将修改上述初始化过程。Emacs根据环境变量的值初始化 &lt;code&gt;load-path&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0b0792d3cb5a730ad75c8819fca45ba09bdd293d" translate="yes" xml:space="preserve">
          <source>If the error is not handled, the two arguments are used in printing the error message. Normally, this error message is provided by the &lt;code&gt;error-message&lt;/code&gt; property of &lt;var&gt;error-symbol&lt;/var&gt;. If &lt;var&gt;data&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this is followed by a colon and a comma separated list of the unevaluated elements of &lt;var&gt;data&lt;/var&gt;. For &lt;code&gt;error&lt;/code&gt;, the error message is the &lt;small&gt;CAR&lt;/small&gt; of &lt;var&gt;data&lt;/var&gt; (that must be a string). Subcategories of &lt;code&gt;file-error&lt;/code&gt; are handled specially.</source>
          <target state="translated">如果未处理错误，则在打印错误消息时将使用两个参数。通常，此错误消息由 &lt;var&gt;error-symbol&lt;/var&gt; 的 &lt;code&gt;error-message&lt;/code&gt; 属性提供。如果 &lt;var&gt;data&lt;/var&gt; 是非 &lt;code&gt;nil&lt;/code&gt; ，这之后是一个冒号和逗号分隔的未计算的元素列表 &lt;var&gt;data&lt;/var&gt; 。为 &lt;code&gt;error&lt;/code&gt; ，该错误消息为&lt;small&gt;CAR&lt;/small&gt;的 &lt;var&gt;data&lt;/var&gt; （即必须是一个字符串）。 &lt;code&gt;file-error&lt;/code&gt; 子类别专门处理。&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a1b1a1682bbb0c3c3979b868da534ea83fc519b4" translate="yes" xml:space="preserve">
          <source>If the event has modifiers, Emacs attempts to resolve them and return the code of the corresponding character. For example, if the user types</source>
          <target state="translated">如果事件中有修饰符,Emacs会尝试解析这些修饰符并返回相应字符的代码。例如,如果用户输入</target>
        </trans-unit>
        <trans-unit id="225e4b6cef0a4ca594213b47905edc7ed2bc1eac" translate="yes" xml:space="preserve">
          <source>If the events are all characters and all can fit in a string, then &lt;code&gt;read-key-sequence&lt;/code&gt; returns a string (see &lt;a href=&quot;strings-of-events#Strings-of-Events&quot;&gt;Strings of Events&lt;/a&gt;). Otherwise, it returns a vector, since a vector can hold all kinds of events&amp;mdash;characters, symbols, and lists. The elements of the string or vector are the events in the key sequence.</source>
          <target state="translated">如果所有事件都是字符，并且所有事件都可以容纳在字符串中，那么 &lt;code&gt;read-key-sequence&lt;/code&gt; 将返回一个字符串（请参阅&lt;a href=&quot;strings-of-events#Strings-of-Events&quot;&gt;事件字符串&lt;/a&gt;）。否则，它将返回一个向量，因为向量可以容纳所有类型的事件-字符，符号和列表。字符串或向量的元素是键序列中的事件。</target>
        </trans-unit>
        <trans-unit id="ce369d4f903bbc523e37f3d49117138394797808" translate="yes" xml:space="preserve">
          <source>If the exact result needs expensive processing, the function will return &lt;code&gt;nil&lt;/code&gt; rather than an approximation. This is the default if the argument is omitted.</source>
          <target state="translated">如果准确的结果需要昂贵的处理，则该函数将返回 &lt;code&gt;nil&lt;/code&gt; 而不是一个近似值。如果省略该参数，则为默认设置。</target>
        </trans-unit>
        <trans-unit id="6478f8f8f9e75aaedaa7f79c8530c973ef5dc68e" translate="yes" xml:space="preserve">
          <source>If the expression is a function call and the function has a &lt;code&gt;safe-local-eval-function&lt;/code&gt; property, the property value determines whether the expression is safe to evaluate. The property value can be a predicate to call to test the expression, a list of such predicates (it&amp;rsquo;s safe if any predicate succeeds), or &lt;code&gt;t&lt;/code&gt; (always safe provided the arguments are constant).</source>
          <target state="translated">如果表达式是函数调用，并且函数具有 &lt;code&gt;safe-local-eval-function&lt;/code&gt; 属性，则该属性值确定表达式是否可以安全求值。属性值可以是调用谓词以测试表达式的谓词，此类谓词的列表（如果任何谓词成功，则是安全的）或 &lt;code&gt;t&lt;/code&gt; （只要参数为常数，则始终是安全的）。</target>
        </trans-unit>
        <trans-unit id="246f0b794f5833994c3b4afba6bb00dea24847ff" translate="yes" xml:space="preserve">
          <source>If the feature is not present, then &lt;code&gt;require&lt;/code&gt; loads &lt;var&gt;filename&lt;/var&gt; with &lt;code&gt;load&lt;/code&gt;. If &lt;var&gt;filename&lt;/var&gt; is not supplied, then the name of the symbol &lt;var&gt;feature&lt;/var&gt; is used as the base file name to load. However, in this case, &lt;code&gt;require&lt;/code&gt; insists on finding &lt;var&gt;feature&lt;/var&gt; with an added &amp;lsquo;</source>
          <target state="translated">如果该功能不存在，则 &lt;code&gt;require&lt;/code&gt; 使用 &lt;code&gt;load&lt;/code&gt; 加载 &lt;var&gt;filename&lt;/var&gt; 。如果未提供 &lt;var&gt;filename&lt;/var&gt; 名，则将符号 &lt;var&gt;feature&lt;/var&gt; 的名称用作要加载的基本文件名。然而，在这种情况下， &lt;code&gt;require&lt;/code&gt; 坚持发现 &lt;var&gt;feature&lt;/var&gt; 与添加的&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="1b34ced467c1db9728611c7e825513efb68ab17e" translate="yes" xml:space="preserve">
          <source>If the file &lt;var&gt;filename&lt;/var&gt; is a symbolic link, this function does not follow it and instead returns its link target as a string. (The link target string is not necessarily the full absolute file name of the target; determining the full file name that the link points to is nontrivial, see below.)</source>
          <target state="translated">如果文件文件 &lt;var&gt;filename&lt;/var&gt; 是符号链接，则此函数不跟随它，而是以字符串形式返回其链接目标。（链接目标字符串不一定是目标的完整绝对文件名；确定链接指向的完整文件名是不平凡的，请参见下文。）</target>
        </trans-unit>
        <trans-unit id="daa4cbc77776264f23c0b7180ce1cedea2df5b48" translate="yes" xml:space="preserve">
          <source>If the file &lt;var&gt;filename&lt;/var&gt; is not a symbolic link, or does not exist, or if there is trouble determining whether it is a symbolic link, &lt;code&gt;file-symlink-p&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果文件文件 &lt;var&gt;filename&lt;/var&gt; 不是符号链接，或者不存在，或者在确定它是否是符号链接时遇到问题，则 &lt;code&gt;file-symlink-p&lt;/code&gt; 返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9081835f33fcc13ee24a20a867687f9c01a96103" translate="yes" xml:space="preserve">
          <source>If the file does not exist, or if there was trouble determining whether the file exists, this function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果文件不存在，或者确定文件是否存在困难，则此函数返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6be3be1ef2fedd8fcb4152b1108b2cfb54d0fc98" translate="yes" xml:space="preserve">
          <source>If the file has a &amp;lsquo;</source>
          <target state="translated">如果文件包含&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="41388f1b4096e6fa4787336ec13211d44a826c00" translate="yes" xml:space="preserve">
          <source>If the first binding found is not a prefix definition (a keymap or a symbol defined as a keymap), all subsequent bindings from other minor modes are omitted, since they would be completely shadowed. Similarly, the list omits non-prefix bindings that follow prefix bindings.</source>
          <target state="translated">如果找到的第一个绑定不是前缀定义(键映射或定义为键映射的符号),那么其他小模式的所有后续绑定都会被省略,因为它们会被完全遮挡。同样,列表也会省略前缀绑定之后的非前缀绑定。</target>
        </trans-unit>
        <trans-unit id="1269fe1c152616b5831220daaf4b88ca325ebbd9" translate="yes" xml:space="preserve">
          <source>If the first character of a &lt;code&gt;help-echo&lt;/code&gt; string has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;help-echo-inhibit-substitution&lt;/code&gt; property, then it is displayed as-is by &lt;code&gt;show-help-function&lt;/code&gt;, without being passed through &lt;code&gt;substitute-command-keys&lt;/code&gt;.</source>
          <target state="translated">如果的第一个字符 &lt;code&gt;help-echo&lt;/code&gt; 串具有非 &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;help-echo-inhibit-substitution&lt;/code&gt; 属性，那么它被显示为-是通过 &lt;code&gt;show-help-function&lt;/code&gt; ，而无需通过传递 &lt;code&gt;substitute-command-keys&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0504a2b1bfe3f74f41527bbd85fbbaf1d767693d" translate="yes" xml:space="preserve">
          <source>If the first element of a list being evaluated is a Lisp function object, byte-code object or primitive function object, then that list is a &lt;em&gt;function call&lt;/em&gt;. For example, here is a call to the function &lt;code&gt;+&lt;/code&gt;:</source>
          <target state="translated">如果要评估的列表的第一个元素是Lisp函数对象，字节码对象或原始函数对象，则该列表是&lt;em&gt;函数调用&lt;/em&gt;。例如，这是对函数 &lt;code&gt;+&lt;/code&gt; 的调用：</target>
        </trans-unit>
        <trans-unit id="d4d3598834c24a7693a8fd21c29f55906c01fa05" translate="yes" xml:space="preserve">
          <source>If the first element of a list being evaluated is a macro object, then the list is a &lt;em&gt;macro call&lt;/em&gt;. When a macro call is evaluated, the elements of the rest of the list are &lt;em&gt;not&lt;/em&gt; initially evaluated. Instead, these elements themselves are used as the arguments of the macro. The macro definition computes a replacement form, called the &lt;em&gt;expansion&lt;/em&gt; of the macro, to be evaluated in place of the original form. The expansion may be any sort of form: a self-evaluating constant, a symbol, or a list. If the expansion is itself a macro call, this process of expansion repeats until some other sort of form results.</source>
          <target state="translated">如果要评估的列表的第一个元素是宏对象，则列表是&lt;em&gt;宏调用&lt;/em&gt;。当评估宏调用时，列表中其余部分的元素最初&lt;em&gt;并未&lt;/em&gt;评估。而是将这些元素本身用作宏的参数。宏定义计算替换形式，称为宏&lt;em&gt;扩展&lt;/em&gt;，以代替原始形式进行评估。扩展可以采用任何形式：自评估常数，符号或列表。如果扩展本身是宏调用，则重复此扩展过程，直到产生其他形式的表单为止。</target>
        </trans-unit>
        <trans-unit id="6f7e00b69b17dbca10bf930ce17a6a8d2d2e1e94" translate="yes" xml:space="preserve">
          <source>If the first element of the list is a symbol then evaluation examines the symbol&amp;rsquo;s function cell, and uses its contents instead of the original symbol. If the contents are another symbol, this process, called &lt;em&gt;symbol function indirection&lt;/em&gt;, is repeated until it obtains a non-symbol. See &lt;a href=&quot;function-names#Function-Names&quot;&gt;Function Names&lt;/a&gt;, for more information about symbol function indirection.</source>
          <target state="translated">如果列表的第一个元素是符号，则评估将检查该符号的功能单元，并使用其内容代替原始符号。如果内容是另一个符号，则重复此过程（称为&lt;em&gt;符号函数间接）&lt;/em&gt;，直到获得非符号为止。有关符号函数间接&lt;a href=&quot;function-names#Function-Names&quot;&gt;寻址&lt;/a&gt;的更多信息，请参见函数名称。</target>
        </trans-unit>
        <trans-unit id="ad92a627467e7834d807fa7b3dd6513ec66d6a69" translate="yes" xml:space="preserve">
          <source>If the flag has any other value, the completion function should return &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果该标志还有其他值，则完成函数应返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4fb2ca720c18bb03a7cfb28e99d5e6859f339dce" translate="yes" xml:space="preserve">
          <source>If the forms in &lt;var&gt;body&lt;/var&gt; do not change the major mode in the output buffer, so that it is still Help mode at the end of their execution, then &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt; makes this buffer read-only at the end, and also scans it for function and variable names to make them into clickable cross-references. See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/elisp/Documentation-Tips.html#Docstring-hyperlinks&quot;&gt;Tips for Documentation Strings&lt;/a&gt;, in particular the item on hyperlinks in documentation strings, for more details.</source>
          <target state="translated">如果 &lt;var&gt;body&lt;/var&gt; 的表单没有更改输出缓冲区中的主模式，因此在执行结束时仍为帮助模式，则 &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt; 使该缓冲区在结尾处为只读，并对其进行扫描以查找功能和变量名称，以使其成为可点击的交叉引用。有关更多详细信息，请参见&lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/elisp/Documentation-Tips.html#Docstring-hyperlinks&quot;&gt;文档字符串的提示&lt;/a&gt;，尤其是文档字符串中超链接上的项目。</target>
        </trans-unit>
        <trans-unit id="34ae174f15000b5b4f1155077643095ccbcd1d70" translate="yes" xml:space="preserve">
          <source>If the fourth argument &lt;var&gt;stop-before&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, parsing stops when it comes to any character that starts a sexp. If &lt;var&gt;stop-comment&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, parsing stops after the start of an unnested comment. If &lt;var&gt;stop-comment&lt;/var&gt; is the symbol &lt;code&gt;syntax-table&lt;/code&gt;, parsing stops after the start of an unnested comment or a string, or after the end of an unnested comment or a string, whichever comes first.</source>
          <target state="translated">如果第四个参数 &lt;var&gt;stop-before&lt;/var&gt; 为non - &lt;code&gt;nil&lt;/code&gt; ，则对于任何以sexp开始的字符，解析将停止。如果 &lt;var&gt;stop-comment&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则在开始未嵌套的注释之后，解析将停止。如果 &lt;var&gt;stop-comment&lt;/var&gt; 是符号 &lt;code&gt;syntax-table&lt;/code&gt; ，则解析将在未嵌套的注释或字符串的开头之后或在未嵌套的注释或字符串的结尾之后（以先到者为准）停止。</target>
        </trans-unit>
        <trans-unit id="dbfab4d630e281344c72bf5e9a98b187083a44b0" translate="yes" xml:space="preserve">
          <source>If the fourth element, &lt;var&gt;syntax-alist&lt;/var&gt;, is non-&lt;code&gt;nil&lt;/code&gt;, it should be a list of cons cells of the form &lt;code&gt;(&lt;var&gt;char-or-string&lt;/var&gt;
. &lt;var&gt;string&lt;/var&gt;)&lt;/code&gt;. These are used to set up a syntax table for syntactic fontification; the resulting syntax table is stored in &lt;code&gt;font-lock-syntax-table&lt;/code&gt;. If &lt;var&gt;syntax-alist&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, syntactic fontification uses the syntax table returned by the &lt;code&gt;syntax-table&lt;/code&gt; function. See &lt;a href=&quot;syntax-table-functions#Syntax-Table-Functions&quot;&gt;Syntax Table Functions&lt;/a&gt;.</source>
          <target state="translated">如果第四元件， &lt;var&gt;syntax-alist&lt;/var&gt; ，是非 &lt;code&gt;nil&lt;/code&gt; ，它应该是这样的形式的缺点的小区的列表 &lt;code&gt;(&lt;var&gt;char-or-string&lt;/var&gt; . &lt;var&gt;string&lt;/var&gt;)&lt;/code&gt; 。这些用于建立语法表以进行语法字体化。生成的语法表存储在 &lt;code&gt;font-lock-syntax-table&lt;/code&gt; 中。如果省略了alyntax &lt;var&gt;syntax-alist&lt;/var&gt; 或 &lt;code&gt;nil&lt;/code&gt; ，则语法字体化使用语法表功能返回的 &lt;code&gt;syntax-table&lt;/code&gt; 。请参见&lt;a href=&quot;syntax-table-functions#Syntax-Table-Functions&quot;&gt;语法表函数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ca26394f9acc0f72bb7c85a2233be0fd78bf02fd" translate="yes" xml:space="preserve">
          <source>If the frame from which &lt;var&gt;configuration&lt;/var&gt; was saved is dead, all this function does is to restore the value of the variable &lt;code&gt;minibuffer-scroll-window&lt;/code&gt; and to adjust the value returned by &lt;code&gt;minibuffer-selected-window&lt;/code&gt;. In this case, the function returns &lt;code&gt;nil&lt;/code&gt;. Otherwise, it returns &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">如果从中保存 &lt;var&gt;configuration&lt;/var&gt; 的帧已失效，则此功能 &lt;code&gt;minibuffer-scroll-window&lt;/code&gt; 只是恢复变量minibuffer-scroll-window的值，并调整 &lt;code&gt;minibuffer-selected-window&lt;/code&gt; 返回的值。在这种情况下，该函数返回 &lt;code&gt;nil&lt;/code&gt; 。否则，它返回 &lt;code&gt;t&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="43e23c2c5c0fbaf03bfa45ab6610d5c3c070c4f5" translate="yes" xml:space="preserve">
          <source>If the frame name was specified explicitly when the frame was created, this parameter will be that name. If the frame wasn&amp;rsquo;t explicitly named, this parameter will be &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果在创建框架时明确指定了框架名称，则此参数就是该名称。如果未显式命名框架，则此参数为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b40b680f37eec91a65c8d822eaa97f36e3776ed1" translate="yes" xml:space="preserve">
          <source>If the function cell is void, the return value is &lt;code&gt;nil&lt;/code&gt;. To distinguish between a function cell that is void and one set to &lt;code&gt;nil&lt;/code&gt;, use &lt;code&gt;fboundp&lt;/code&gt; (see below).</source>
          <target state="translated">如果函数单元格为void，则返回值为 &lt;code&gt;nil&lt;/code&gt; 。要区分一个无效的功能单元和一个设为 &lt;code&gt;nil&lt;/code&gt; 的功能单元，请使用 &lt;code&gt;fboundp&lt;/code&gt; （请参见下文）。</target>
        </trans-unit>
        <trans-unit id="b1124e09571d6a7b655a7b4df0e1722289f39b5b" translate="yes" xml:space="preserve">
          <source>If the function reads input itself, it can have the effect of altering the event that follows. For example, here&amp;rsquo;s how to define</source>
          <target state="translated">如果该函数本身读取输入，则可能会更改随后的事件。例如，这是定义方法</target>
        </trans-unit>
        <trans-unit id="b96a696d6b170dde1f2edcc76f25c109b66df8b6" translate="yes" xml:space="preserve">
          <source>If the height spec is a cons of the format shown, the numeric height is &lt;var&gt;ratio&lt;/var&gt; times the height of face &lt;var&gt;face&lt;/var&gt;. &lt;var&gt;ratio&lt;/var&gt; can be any type of number, or &lt;code&gt;nil&lt;/code&gt; which means a ratio of 1. If &lt;var&gt;face&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, it refers to the current face.</source>
          <target state="translated">如果高度规格是所示格式的缺点，则数字高度为 &lt;var&gt;ratio&lt;/var&gt; 乘以face &lt;var&gt;face&lt;/var&gt; 的高度。 &lt;var&gt;ratio&lt;/var&gt; 可以是任何类型的数字，也可以是 &lt;code&gt;nil&lt;/code&gt; ，它表示比率为1。如果 &lt;var&gt;face&lt;/var&gt; 是 &lt;code&gt;t&lt;/code&gt; ，则表示当前面。</target>
        </trans-unit>
        <trans-unit id="256c5fa77fea0edfc5bc4b36c843f4724d0484db" translate="yes" xml:space="preserve">
          <source>If the height spec is a cons of the format shown, the numeric height is &lt;var&gt;ratio&lt;/var&gt; times the height of the contents of the line.</source>
          <target state="translated">如果高度规格是所示格式的缺点，则数字高度为 &lt;var&gt;ratio&lt;/var&gt; 乘以行内容的高度。</target>
        </trans-unit>
        <trans-unit id="d3170a24913f8e79e2fe1e2b1d247d7b1d093881" translate="yes" xml:space="preserve">
          <source>If the height spec is a float, &lt;var&gt;float&lt;/var&gt;, the numeric height value is &lt;var&gt;float&lt;/var&gt; times the frame&amp;rsquo;s default line height.</source>
          <target state="translated">如果高度规格是float，则 &lt;var&gt;float&lt;/var&gt; 的数字高度值为 &lt;var&gt;float&lt;/var&gt; 乘以框架的默认线高。</target>
        </trans-unit>
        <trans-unit id="360acc6136e529abcfe96a8d521d34c34dec43c2" translate="yes" xml:space="preserve">
          <source>If the height spec is a positive integer, the height value is that integer.</source>
          <target state="translated">如果高度规格是一个正整数,高度值就是这个整数。</target>
        </trans-unit>
        <trans-unit id="98e412860a40fccd31b62cd34f4c1f036c5e60de" translate="yes" xml:space="preserve">
          <source>If the hook variable is buffer-local, the buffer-local variable will be used instead of the global variable. However, if the buffer-local variable contains the element &lt;code&gt;t&lt;/code&gt;, the global hook variable will be run as well.</source>
          <target state="translated">如果钩子变量是局部于缓冲区的，则将使用局部于缓冲区的变量代替全局变量。但是，如果局部缓冲区变量包含元素 &lt;code&gt;t&lt;/code&gt; ，那么还将运行全局钩子变量。</target>
        </trans-unit>
        <trans-unit id="9ce6481c7077ae75ab928e3ea2e9fe7899f54a10" translate="yes" xml:space="preserve">
          <source>If the hook variable&amp;rsquo;s name does not end with &amp;lsquo;</source>
          <target state="translated">如果hook变量的名称不以'结尾</target>
        </trans-unit>
        <trans-unit id="7194289d33f24df74509a84c551f2a7b847a6c3c" translate="yes" xml:space="preserve">
          <source>If the input method function calls &lt;code&gt;read-event&lt;/code&gt; or &lt;code&gt;read-key-sequence&lt;/code&gt;, it should bind &lt;code&gt;input-method-function&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt; first, to prevent recursion.</source>
          <target state="translated">如果输入法函数调用 &lt;code&gt;read-event&lt;/code&gt; 或 &lt;code&gt;read-key-sequence&lt;/code&gt; ，则应首先将 &lt;code&gt;input-method-function&lt;/code&gt; 绑定到 &lt;code&gt;nil&lt;/code&gt; ，以防止递归。</target>
        </trans-unit>
        <trans-unit id="b92832948f818aa5efd59c2e9db8f1bbd9dfaf42" translate="yes" xml:space="preserve">
          <source>If the keyboard character value is in the range of 0 to 127, it can go in the string unchanged.</source>
          <target state="translated">如果键盘字符值在0到127的范围内,它可以不变地进入字符串。</target>
        </trans-unit>
        <trans-unit id="a78d52707568efb8cb99d72237791962edb1bb7d" translate="yes" xml:space="preserve">
          <source>If the last event came from a keyboard macro, the value is &lt;code&gt;macro&lt;/code&gt;.</source>
          <target state="translated">如果最后一个事件来自键盘宏，则值为 &lt;code&gt;macro&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="db9de26b78dce76c9d7c2f665eaa2e2f3820a073" translate="yes" xml:space="preserve">
          <source>If the last line of the documentation string begins with the keyword &amp;lsquo;</source>
          <target state="translated">如果文档字符串的最后一行以关键字&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="29659fa361b130ec92b10faa358cc4b631fd3026" translate="yes" xml:space="preserve">
          <source>If the last redisplay of &lt;var&gt;window&lt;/var&gt; was preempted, and did not finish, Emacs does not know the position of the end of display in that window. In that case, this function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果最后一次重新显示 &lt;var&gt;window&lt;/var&gt; 被抢占并且没有完成，则Emacs将不知道该窗口中显示结束的位置。在这种情况下，此函数返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="593f83092bf8a9f2ef87711ac3044535d5c9c61a" translate="yes" xml:space="preserve">
          <source>If the last regular expression search found a match, this function returns the position of the start of the matching text or of a subexpression of it.</source>
          <target state="translated">如果最后一次正则表达式搜索发现了匹配,这个函数返回匹配文本或其子表达式的起始位置。</target>
        </trans-unit>
        <trans-unit id="a09d4605b1d9c1964692cc9c6b51d21e2e5fc180" translate="yes" xml:space="preserve">
          <source>If the last such operation was done against a string with &lt;code&gt;string-match&lt;/code&gt;, then you should pass the same string as the argument &lt;var&gt;in-string&lt;/var&gt;. After a buffer search or match, you should omit &lt;var&gt;in-string&lt;/var&gt; or pass &lt;code&gt;nil&lt;/code&gt; for it; but you should make sure that the current buffer when you call &lt;code&gt;match-string&lt;/code&gt; is the one in which you did the searching or matching. Failure to follow this advice will lead to incorrect results.</source>
          <target state="translated">如果最后一次这样的操作是针对具有 &lt;code&gt;string-match&lt;/code&gt; 的字符串完成的，则应传递与参数 &lt;var&gt;in-string&lt;/var&gt; 相同的字符串。在缓冲区搜索或匹配之后，您应该省略 &lt;var&gt;in-string&lt;/var&gt; 或将 &lt;code&gt;nil&lt;/code&gt; 传递给它；但是您应该确保在调用 &lt;code&gt;match-string&lt;/code&gt; 时当前的缓冲区是进行搜索或匹配的缓冲区。不遵循此建议将导致错误的结果。</target>
        </trans-unit>
        <trans-unit id="e62a0d108f094251e8c76edc0426c34a0df15e77" translate="yes" xml:space="preserve">
          <source>If the length is not a multiple of 8, the printed representation shows extra elements, but these extras really make no difference. For instance, in the next example, the two bool-vectors are equal, because only the first 3 bits are used:</source>
          <target state="translated">如果长度不是8的倍数,打印出来的表示法会显示出额外的元素,但这些额外的元素其实没有什么区别。例如,在下一个例子中,两个bool向量是相等的,因为只使用了前3位。</target>
        </trans-unit>
        <trans-unit id="e1a58687f298bfc5e14e06f12ac22bf3d01e6a0e" translate="yes" xml:space="preserve">
          <source>If the lower bound of a range is greater than its upper bound, the range is empty and represents no characters. Thus, &amp;lsquo;</source>
          <target state="translated">如果范围的下限大于其上限，则该范围为空，不表示任何字符。因此，</target>
        </trans-unit>
        <trans-unit id="23d26dae81faa69c7288d9d25473c5bab73ca975" translate="yes" xml:space="preserve">
          <source>If the macro is expanded just once, in compilation, then the object is constructed just once, during compilation. But in interpreted execution, the macro is expanded each time the macro call runs, and this means a new object is constructed each time.</source>
          <target state="translated">如果在编译中,宏只展开一次,那么在编译过程中就只构造一次对象。但是在解释执行中,每次宏调用运行时,宏都会被展开,这意味着每次都会构造一个新的对象。</target>
        </trans-unit>
        <trans-unit id="bc125edda6b08303280445c68325d12ae377eac0" translate="yes" xml:space="preserve">
          <source>If the menu keymap contains a binding to a nested keymap, the nested keymap specifies a &lt;em&gt;submenu&lt;/em&gt;. There will be a menu item, labeled by the nested keymap&amp;rsquo;s item string, and clicking on this item automatically pops up the specified submenu. As a special exception, if the menu keymap contains a single nested keymap and no other menu items, the menu shows the contents of the nested keymap directly, not as a submenu.</source>
          <target state="translated">如果菜单键盘映射包含对嵌套键盘映射的绑定，则嵌套键盘映射指定一个&lt;em&gt;子菜单&lt;/em&gt;。将有一个菜单项，由嵌套键盘映射的项字符串标记，然后单击该项会自动弹出指定的子菜单。作为一个特殊的例外，如果菜单键盘映射只包含一个嵌套的键盘映射，而没有其他菜单项，则菜单将直接显示嵌套键盘映射的内容，而不是子菜单。</target>
        </trans-unit>
        <trans-unit id="4f7ebb7b6e6d5779c7c43bfe78217b03a694528d" translate="yes" xml:space="preserve">
          <source>If the minibuffer window is active, it is normally considered (so that this function returns &lt;code&gt;nil&lt;/code&gt;). However, if the optional argument &lt;var&gt;no-mini&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the minibuffer window is ignored even if active. The optional argument &lt;var&gt;all-frames&lt;/var&gt; has the same meaning as for &lt;code&gt;next-window&lt;/code&gt;.</source>
          <target state="translated">如果minibuffer窗口是活动的，通常会考虑它（以便此函数返回 &lt;code&gt;nil&lt;/code&gt; ）。但是，如果可选参数 &lt;var&gt;no-mini&lt;/var&gt; 为non - &lt;code&gt;nil&lt;/code&gt; ，则即使处于活动状态，也会忽略迷你缓冲区窗口。可选参数 &lt;var&gt;all-frames&lt;/var&gt; 与 &lt;code&gt;next-window&lt;/code&gt; 具有相同的含义。</target>
        </trans-unit>
        <trans-unit id="faf29a5efd78ebe45a2c9aa07cbed9ae9d00bde9" translate="yes" xml:space="preserve">
          <source>If the minor mode Abbrev mode is enabled, the buffer-local variable &lt;code&gt;abbrev-mode&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, and abbrevs are automatically expanded in the buffer. For the user-level commands for abbrevs, see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Abbrevs.html#Abbrevs&quot;&gt;Abbrev Mode&lt;/a&gt; in</source>
          <target state="translated">如果启用了次要模式缩略模式下，缓冲区局部变量 &lt;code&gt;abbrev-mode&lt;/code&gt; 是非 &lt;code&gt;nil&lt;/code&gt; ，和abbrevs在缓存器自动展开。用于abbrevs用户级指令，请参见&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Abbrevs.html#Abbrevs&quot;&gt;缩略模式&lt;/a&gt;中</target>
        </trans-unit>
        <trans-unit id="de290dee00842dc125e13b1b3e24f4708ce7084f" translate="yes" xml:space="preserve">
          <source>If the mode command is called from Lisp (i.e., non-interactively), it should enable the mode if the argument is omitted or &lt;code&gt;nil&lt;/code&gt;; it should toggle the mode if the argument is the symbol &lt;code&gt;toggle&lt;/code&gt;; otherwise it should treat the argument in the same way as for an interactive call with a numeric prefix argument, as described above.</source>
          <target state="translated">如果从Lisp调用了mode命令（即非交互地），那么如果省略了参数或 &lt;code&gt;nil&lt;/code&gt; ，则应该启用模式。如果参数为符号 &lt;code&gt;toggle&lt;/code&gt; ，则应切换模式; 否则，它应该像处理带有数字前缀参数的交互式调用一样处理该参数，如上所述。</target>
        </trans-unit>
        <trans-unit id="bec430cf6e44ccde778d907c50c0e83848046d8c" translate="yes" xml:space="preserve">
          <source>If the mode handles a language that has a syntax for comments, it should set the variables that define the comment syntax. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Options-for-Comments.html#Options-for-Comments&quot;&gt;Options Controlling Comments&lt;/a&gt; in</source>
          <target state="translated">如果模式处理的语言具有注释语法，则应设置定义注释语法的变量。见&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Options-for-Comments.html#Options-for-Comments&quot;&gt;选项来控制注释&lt;/a&gt;中</target>
        </trans-unit>
        <trans-unit id="766701d4c597749957ec20b1f96189d041bff034" translate="yes" xml:space="preserve">
          <source>If the multi-file package contains auxiliary data files (such as images), the package&amp;rsquo;s Lisp code can refer to these files via the variable &lt;code&gt;load-file-name&lt;/code&gt; (see &lt;a href=&quot;loading#Loading&quot;&gt;Loading&lt;/a&gt;). Here is an example:</source>
          <target state="translated">如果多文件程序包包含辅助数据文件（例如图像），则该程序包的Lisp代码可以通过变量 &lt;code&gt;load-file-name&lt;/code&gt; 引用这些文件（请参见&lt;a href=&quot;loading#Loading&quot;&gt;Loading&lt;/a&gt;）。这是一个例子：</target>
        </trans-unit>
        <trans-unit id="d409ef26b553fc0018482eae4ed734f3c5c6a110" translate="yes" xml:space="preserve">
          <source>If the name of an item in the group starts with &lt;var&gt;prefix&lt;/var&gt;, and the customizable variable &lt;code&gt;custom-unlispify-remove-prefixes&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the item&amp;rsquo;s tag will omit &lt;var&gt;prefix&lt;/var&gt;. A group can have any number of prefixes.</source>
          <target state="translated">如果组中项目的名称以 &lt;var&gt;prefix&lt;/var&gt; 开头，并且可自定义变量 &lt;code&gt;custom-unlispify-remove-prefixes&lt;/code&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则该项目的标签将省略 &lt;var&gt;prefix&lt;/var&gt; 。一个组可以有任意数量的前缀。</target>
        </trans-unit>
        <trans-unit id="70c90c2a423ece13756844b933ee2df670dd4b76" translate="yes" xml:space="preserve">
          <source>If the new auto-reverting is part of Emacs, you should mention it in the documentation string of &lt;code&gt;global-auto-revert-non-file-buffers&lt;/code&gt;.</source>
          <target state="translated">如果新的自动还原是Emacs的一部分，则应在 &lt;code&gt;global-auto-revert-non-file-buffers&lt;/code&gt; 的文档字符串中提及它。</target>
        </trans-unit>
        <trans-unit id="59618baebc74ea9b713a2434becf1bd9cef8f88b" translate="yes" xml:space="preserve">
          <source>If the object is a string, its text properties are copied into the output. The text properties of the &amp;lsquo;</source>
          <target state="translated">如果对象是字符串，则将其文本属性复制到输出中。'的文本属性</target>
        </trans-unit>
        <trans-unit id="bbf1c2ad722d60dcaedc7d580443b6a686265aa8" translate="yes" xml:space="preserve">
          <source>If the operating system doesn&amp;rsquo;t supply all the information necessary to compute the value, the unknown elements of the list are &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果操作系统未提供计算该值所需的所有信息，则列表中的未知元素为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4134e96049215e44babeaf58a040a9486a384f27" translate="yes" xml:space="preserve">
          <source>If the option &lt;code&gt;fit-frame-to-buffer&lt;/code&gt; (see below) is non-&lt;code&gt;nil&lt;/code&gt;, this function will try to resize the frame of &lt;var&gt;window&lt;/var&gt; to fit its contents by calling &lt;code&gt;fit-frame-to-buffer&lt;/code&gt; (see below).</source>
          <target state="translated">如果选项 &lt;code&gt;fit-frame-to-buffer&lt;/code&gt; （请参见下文）为非 &lt;code&gt;nil&lt;/code&gt; ，则此函数将通过调用 &lt;code&gt;fit-frame-to-buffer&lt;/code&gt; （请参见下文）来尝试调整 &lt;var&gt;window&lt;/var&gt; 框架的大小以适合其内容。</target>
        </trans-unit>
        <trans-unit id="7a1f7cafee4e439f83630c4e50184d68bca21388" translate="yes" xml:space="preserve">
          <source>If the option &lt;code&gt;load-prefer-newer&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then when searching suffixes, &lt;code&gt;load&lt;/code&gt; selects whichever version of a file (&amp;lsquo;</source>
          <target state="translated">如果选项 &lt;code&gt;load-prefer-newer&lt;/code&gt; 为non - &lt;code&gt;nil&lt;/code&gt; ，则在搜索后缀时， &lt;code&gt;load&lt;/code&gt; 选择文件的哪个版本（&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="6972526adbec033bedbd9f1472b039c3252b6c51" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;code&gt;keymaps&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it specifies a list of keymaps to search in. This argument is ignored if &lt;code&gt;position&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果可选参数 &lt;code&gt;keymaps&lt;/code&gt; 是不 &lt;code&gt;nil&lt;/code&gt; ，它指定的键盘布局在搜索列表。如果这种说法被忽略 &lt;code&gt;position&lt;/code&gt; 是不可 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2d13d6f2b54cc4e9294b60597b7417e40d2eac6e" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;absolute&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this means to return edges relative to the native position of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s frame. &lt;var&gt;absolute&lt;/var&gt; non-&lt;code&gt;nil&lt;/code&gt; means to return coordinates relative to the origin (0, 0) of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s display. On non-graphical systems this argument has no effect.</source>
          <target state="translated">如果可选参数 &lt;var&gt;absolute&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则意味着返回相对于 &lt;var&gt;window&lt;/var&gt; 框架原始位置的边。 &lt;var&gt;absolute&lt;/var&gt; 非 &lt;code&gt;nil&lt;/code&gt; 手段，返回相对于原点（0，0）坐标 &lt;var&gt;window&lt;/var&gt; 的显示。在非图形系统上，此参数无效。</target>
        </trans-unit>
        <trans-unit id="942217ba0ceb902eab90c24638b8f068b8adc202" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;body&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this means to return the edges corresponding to the total size of &lt;var&gt;window&lt;/var&gt;. &lt;var&gt;body&lt;/var&gt; non-&lt;code&gt;nil&lt;/code&gt; means to return the edges of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s body (aka text area). If &lt;var&gt;body&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;window&lt;/var&gt; must specify a live window.</source>
          <target state="translated">如果可选参数 &lt;var&gt;body&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则意味着返回与 &lt;var&gt;window&lt;/var&gt; 的总大小相对应的边。 &lt;var&gt;body&lt;/var&gt; non- &lt;code&gt;nil&lt;/code&gt; 表示返回 &lt;var&gt;window&lt;/var&gt; 主体的边缘（又称文本区域）。如果 &lt;var&gt;body&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;var&gt;window&lt;/var&gt; 必须指定一个活动窗口。</target>
        </trans-unit>
        <trans-unit id="98a6a65e6e71ac598f7759ffc1aa4f0f17eb5099" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;check-timers&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then if no input is available, Emacs runs any timers which are ready. See &lt;a href=&quot;timers#Timers&quot;&gt;Timers&lt;/a&gt;.</source>
          <target state="translated">如果可选参数 &lt;var&gt;check-timers&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则如果没有可用的输入，则Emacs将运行任何准备好的计时器。请参阅&lt;a href=&quot;timers#Timers&quot;&gt;计时器&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d8f788f6da02c6227cc5cf0441d2b91d40d5c360" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;discard-comments&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, any top-level comment is discarded. (This argument is obsolete and will be removed in future Emacs versions. To remove comments, use the &lt;code&gt;xml-remove-comments&lt;/code&gt; utility function on the data before you call the parsing function.)</source>
          <target state="translated">如果可选参数 &lt;var&gt;discard-comments&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则任何顶级注释都将被丢弃。 （此参数已过时，将在以后的Emacs版本中删除。要删除注释，请在调用解析函数之前对数据使用 &lt;code&gt;xml-remove-comments&lt;/code&gt; 实用程序函数。）</target>
        </trans-unit>
        <trans-unit id="b6ab51bf07649dfa9b96691b7fc43fbdf855ba00" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;first&lt;/var&gt; is an integer, it denotes the index (starting with 0) of the first line of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s glyph matrix to be returned. Note that if &lt;var&gt;window&lt;/var&gt; has a header line, the line with index 0 is that header line. If &lt;var&gt;first&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the first line to be considered is determined by the value of the optional argument &lt;var&gt;body&lt;/var&gt;: If &lt;var&gt;body&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this means to start with the first line of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s body, skipping any header line, if present. Otherwise, this function will start with the first line of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s glyph matrix, possibly the header line.</source>
          <target state="translated">如果可选参数 &lt;var&gt;first&lt;/var&gt; 是整数，则表示要返回的 &lt;var&gt;window&lt;/var&gt; 字形矩阵第一行的索引（从0开始）。请注意，如果 &lt;var&gt;window&lt;/var&gt; 具有标题行，则索引为0的行就是该标题行。如果 &lt;var&gt;first&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则要考虑的第一行由可选参数 &lt;var&gt;body&lt;/var&gt; 的值确定：如果 &lt;var&gt;body&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则意味着从 &lt;var&gt;window&lt;/var&gt; 的body的第一行开始，跳过任何标题行（如果存在） 。否则，此函数将从 &lt;var&gt;window&lt;/var&gt; 的字形矩阵的第一行（可能是标题行）开始。</target>
        </trans-unit>
        <trans-unit id="2a8154d809b8ebbd9c4648ca1d0087a606bb47e2" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;fold-wildcards&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, consecutive wildcards in the XLFD are folded into one.</source>
          <target state="translated">如果可选参数 &lt;var&gt;fold-wildcards&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则XLFD中的连续通配符将被折叠为一个。</target>
        </trans-unit>
        <trans-unit id="17803140fbecda3b457cb2f98fe20241b13198d0" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;force-same-window&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; and the selected window is not suitable for displaying the buffer, this function always signals an error when called non-interactively. In interactive use, if the selected window is a minibuffer window, this function will try to use some other window instead. If the selected window is strongly dedicated to its buffer, the option &lt;code&gt;switch-to-buffer-in-dedicated-window&lt;/code&gt; described next can be used to proceed.</source>
          <target state="translated">如果可选参数 &lt;var&gt;force-same-window&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，并且所选窗口不适合显示缓冲区，则此函数在非交互式调用时始终会发出错误消息。在交互使用中，如果所选窗口是迷你缓冲区窗口，则此函数将尝试使用其他窗口。如果所选窗口专门用于其缓冲区，则可以使用下面介绍的选项&amp;ldquo; &lt;code&gt;switch-to-buffer-in-dedicated-window&lt;/code&gt; 进行操作。</target>
        </trans-unit>
        <trans-unit id="bf71899a17742651d2154bd40f20ac07da3c6d22" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;frame&lt;/var&gt; is specified, it returns the name of the font of &lt;var&gt;face&lt;/var&gt; for that frame. If &lt;var&gt;frame&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, the selected frame is used. In the latter case, if the optional third argument &lt;var&gt;character&lt;/var&gt; is supplied, it returns the font name used for &lt;var&gt;character&lt;/var&gt;.</source>
          <target state="translated">如果可选的参数 &lt;var&gt;frame&lt;/var&gt; 被指定时，它返回的字体的名称 &lt;var&gt;face&lt;/var&gt; 该帧。如果省略 &lt;var&gt;frame&lt;/var&gt; 或 &lt;code&gt;nil&lt;/code&gt; ，则使用选定的帧。在后一种情况下，如果提供了可选的第三个参数 &lt;var&gt;character&lt;/var&gt; ，它将返回用于 &lt;var&gt;character&lt;/var&gt; 的字体名称。</target>
        </trans-unit>
        <trans-unit id="96eea2deb29fd0e9c6ac91753ac1f4c6f87dd7cb" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;frames&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this applies the font to the selected frame only. If &lt;var&gt;frames&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be a list of frames to act upon, or &lt;code&gt;t&lt;/code&gt; meaning all existing and all future graphical frames.</source>
          <target state="translated">如果可选参数 &lt;var&gt;frames&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则该字体仅将字体应用于所选框架。如果 &lt;var&gt;frames&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则应为要操作的帧列表，或者 &lt;code&gt;t&lt;/code&gt; 表示所有现有的和将来的图形帧。</target>
        </trans-unit>
        <trans-unit id="66524ab75cc1a677566a8075645e69c22c49d84e" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;group&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function also checks that the file&amp;rsquo;s group would be unchanged.</source>
          <target state="translated">如果可选参数 &lt;var&gt;group&lt;/var&gt; 为non- &lt;code&gt;nil&lt;/code&gt; ，则此函数还将检查文件的组是否保持不变。</target>
        </trans-unit>
        <trans-unit id="dc7b9b4167f6b13cb2f8aa1c39c6cc0cdb4b372d" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;handle-mode&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, then all this function does is return a symbol specifying the major mode, if the &amp;lsquo;</source>
          <target state="translated">如果可选参数 &lt;var&gt;handle-mode&lt;/var&gt; 为 &lt;code&gt;t&lt;/code&gt; ，则此函数所做的全部工作是返回指定主模式的符号，如果'</target>
        </trans-unit>
        <trans-unit id="efc9a5f2a0d3d044b40f95f8b635024abb54970f" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;horizontal&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this means to return non-&lt;code&gt;nil&lt;/code&gt; if and only if &lt;var&gt;window&lt;/var&gt; is part of a horizontal combination.</source>
          <target state="translated">如果可选参数 &lt;var&gt;horizontal&lt;/var&gt; 为non- &lt;code&gt;nil&lt;/code&gt; ，这意味着仅当 &lt;var&gt;window&lt;/var&gt; 是水平组合的一部分时才返回non- &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="83a9c8a93022a096b01708b60415f35cb89112fd" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;ignore&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it means to ignore minimum window sizes and fixed-size restrictions. If &lt;var&gt;ignore&lt;/var&gt; is &lt;code&gt;safe&lt;/code&gt;, this means windows can get as small as one line and/or two columns.</source>
          <target state="translated">如果可选参数 &lt;var&gt;ignore&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则意味着忽略最小窗口大小和固定大小限制。如果 &lt;var&gt;ignore&lt;/var&gt; 是 &lt;code&gt;safe&lt;/code&gt; ，则意味着窗口可以小到一行和/或两列。</target>
        </trans-unit>
        <trans-unit id="4f213acc0249fad89d41d85026c2365c2d829cc6" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;inhibit-capture-property&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, and &lt;var&gt;old-pos&lt;/var&gt; has a non-&lt;code&gt;nil&lt;/code&gt; property of that name, then any field boundaries are ignored.</source>
          <target state="translated">如果可选参数 &lt;var&gt;inhibit-capture-property&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，而 &lt;var&gt;old-pos&lt;/var&gt; 具有该名称的 &lt;code&gt;nil&lt;/code&gt; 属性，则任何字段边界都将被忽略。</target>
        </trans-unit>
        <trans-unit id="70a29817b0c4edcca5649ad869cb723c93bcbf44" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;keep-size&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this keeps the number of frame lines and columns fixed. (If non-&lt;code&gt;nil&lt;/code&gt;, the option &lt;code&gt;frame-inhibit-implied-resize&lt;/code&gt; described in the next section will override this.) If &lt;var&gt;keep-size&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; (or with a prefix argument), it tries to keep the size of the display area of the current frame fixed by adjusting the number of lines and columns.</source>
          <target state="translated">如果可选参数 &lt;var&gt;keep-size&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，这将使框架行和列数保持固定。 （如果为non- &lt;code&gt;nil&lt;/code&gt; ，则下一节中描述的选项 &lt;code&gt;frame-inhibit-implied-resize&lt;/code&gt; 将覆盖此内容。）如果 &lt;var&gt;keep-size&lt;/var&gt; 为non - &lt;code&gt;nil&lt;/code&gt; （或带有前缀参数），它将尝试保持显示的大小通过调整行数和列数来固定当前帧的区域。</target>
        </trans-unit>
        <trans-unit id="de719d27f6f2cb678c19f026b7e92ec281747e6b" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;last&lt;/var&gt; is an integer, it denotes the index of the last line of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s glyph matrix that shall be returned. If &lt;var&gt;last&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the last line to be considered is determined by the value of &lt;var&gt;body&lt;/var&gt;: If &lt;var&gt;body&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this means to use the last line of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s body, omitting &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s mode line, if present. Otherwise, this means to use the last line of &lt;var&gt;window&lt;/var&gt; which may be the mode line.</source>
          <target state="translated">如果可选参数 &lt;var&gt;last&lt;/var&gt; 为整数，则表示应返回的 &lt;var&gt;window&lt;/var&gt; 字形矩阵的最后一行的索引。如果 &lt;var&gt;last&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则要考虑的最后一行由 &lt;var&gt;body&lt;/var&gt; 的值确定：如果 &lt;var&gt;body&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则表示使用 &lt;var&gt;window&lt;/var&gt; body的最后一行，如果不存在则忽略 &lt;var&gt;window&lt;/var&gt; 的模式行。否则，这意味着使用 &lt;var&gt;window&lt;/var&gt; 的最后一行，这可能是模式行。</target>
        </trans-unit>
        <trans-unit id="12c83b7f9aace8c155bb219d0fd91503e17d0817" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;mini&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this means to return the minibuffer window if and only if it is currently active. If &lt;var&gt;mini&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function may return the minibuffer window even when it&amp;rsquo;s not active. However, if &lt;var&gt;wrap&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it always acts as if &lt;var&gt;mini&lt;/var&gt; were &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果可选参数 &lt;var&gt;mini&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，这意味着仅当当前处于活动状态时才返回minibuffer窗口。如果 &lt;var&gt;mini&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则即使未激活minibuffer窗口，该函数也可能返回该窗口。但是，如果 &lt;var&gt;wrap&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则它总是像 &lt;var&gt;mini&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; 一样起作用。</target>
        </trans-unit>
        <trans-unit id="5511462c9c4977d0cd83a29124933c790a0a0164" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;must-suffix&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;load&lt;/code&gt; insists that the file name used must end in either &amp;lsquo;</source>
          <target state="translated">如果可选参数 &lt;var&gt;must-suffix&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;load&lt;/code&gt; 坚持使用的文件名必须以'</target>
        </trans-unit>
        <trans-unit id="6239f8f2206b6656204db08625818021608084ae" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;no-angles&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the angle brackets around function keys and event symbols are omitted; this is for compatibility with old versions of Emacs which didn&amp;rsquo;t use the brackets.</source>
          <target state="translated">如果可选参数 &lt;var&gt;no-angles&lt;/var&gt; 为non - &lt;code&gt;nil&lt;/code&gt; ，则省略功能键和事件符号周围的尖括号；这是为了与不使用括号的Emacs的旧版本兼容。</target>
        </trans-unit>
        <trans-unit id="541d4ba76979bfd5c88c5d5842f7e0fd1e0a1d50" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;no-pad&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; then this function doesn&amp;rsquo;t generate the padding (&lt;code&gt;=&lt;/code&gt;).</source>
          <target state="translated">如果可选参数 &lt;var&gt;no-pad&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ,则此函数不会生成填充（ &lt;code&gt;=&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="f66a6b09ca7b976ee8eb89e6be2104be63ce1a76" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;no-pad&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; then this function doesn&amp;rsquo;t generate the padding.</source>
          <target state="translated">如果可选参数 &lt;var&gt;no-pad&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ,则此函数不会生成填充。</target>
        </trans-unit>
        <trans-unit id="77d5b1707ea76a1dbdb066e84d247eab1870ba77" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;norecord&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function does not alter the list of most recently selected windows, nor the buffer list.</source>
          <target state="translated">如果可选参数 &lt;var&gt;norecord&lt;/var&gt; 为non- &lt;code&gt;nil&lt;/code&gt; ，则此函数不会更改最近选择的窗口的列表，也不会更改缓冲区列表。</target>
        </trans-unit>
        <trans-unit id="a5326dfb605251ff6c0b5692abbc55c1aa47aa5e" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;nosuffix&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;load&lt;/code&gt; does not try the suffixes &amp;lsquo;</source>
          <target state="translated">如果可选参数 &lt;var&gt;nosuffix&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;load&lt;/code&gt; 不会尝试使用后缀'</target>
        </trans-unit>
        <trans-unit id="a279dc204bfea65e494272f987280f42d5b4e3a8" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;old-name&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it specifies a file in the user&amp;rsquo;s home directory,</source>
          <target state="translated">如果可选参数 &lt;var&gt;old-name&lt;/var&gt; 为non- &lt;code&gt;nil&lt;/code&gt; ，则它在用户的主目录中指定一个文件，</target>
        </trans-unit>
        <trans-unit id="b64c0af0469d5571e33c344081b577166c995bc0" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;only-in-line&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, and constraining &lt;var&gt;new-pos&lt;/var&gt; in the usual way would move it to a different line, &lt;var&gt;new-pos&lt;/var&gt; is returned unconstrained. This used in commands that move by line, such as &lt;code&gt;next-line&lt;/code&gt; and &lt;code&gt;beginning-of-line&lt;/code&gt;, so that they respect field boundaries only in the case where they can still move to the right line.</source>
          <target state="translated">如果可选参数 &lt;var&gt;only-in-line&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，并且以常规方式约束 &lt;var&gt;new-pos&lt;/var&gt; 会将其移至另一行，则 &lt;var&gt;new-pos&lt;/var&gt; 将不受约束地返回。它用于按行移动的命令（例如 &lt;code&gt;next-line&lt;/code&gt; 和 &lt;code&gt;beginning-of-line&lt;/code&gt; ，以便仅在仍然可以移动到右行的情况下才遵守字段边界。</target>
        </trans-unit>
        <trans-unit id="89a3540a2ddd227c3da7412945b6da99d10dfd7d" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;only&lt;/var&gt; is &lt;code&gt;vertically&lt;/code&gt;, this function may resize the frame vertically only. If &lt;var&gt;only&lt;/var&gt; is &lt;code&gt;horizontally&lt;/code&gt;, it may resize the frame horizontally only.</source>
          <target state="translated">如果 &lt;var&gt;only&lt;/var&gt; 可选参数是 &lt;code&gt;vertically&lt;/code&gt; ，则此函数可能仅垂直调整框架的大小。如果 &lt;var&gt;only&lt;/var&gt; 是 &lt;code&gt;horizontally&lt;/code&gt; ，它可能只进行水平调整框架。</target>
        </trans-unit>
        <trans-unit id="5a230cb235eaaab6d70d21c1cb8a38327fbdcb69" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;pixelwise&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this means to return the coordinates in terms of the default character width and height of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s frame (see &lt;a href=&quot;frame-font#Frame-Font&quot;&gt;Frame Font&lt;/a&gt;), rounded if necessary. &lt;var&gt;pixelwise&lt;/var&gt; non-&lt;code&gt;nil&lt;/code&gt; means to return the coordinates in pixels. Note that the pixel specified by &lt;var&gt;right&lt;/var&gt; and &lt;var&gt;bottom&lt;/var&gt; is immediately outside of these edges. If &lt;var&gt;absolute&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;pixelwise&lt;/var&gt; is implicitly non-&lt;code&gt;nil&lt;/code&gt; too.</source>
          <target state="translated">如果可选参数 &lt;var&gt;pixelwise&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则表示以默认字符宽度和 &lt;var&gt;window&lt;/var&gt; 框架的高度（请参见&lt;a href=&quot;frame-font#Frame-Font&quot;&gt;Frame Font&lt;/a&gt;）为单位返回坐标，并在必要时进行四舍五入。 &lt;var&gt;pixelwise&lt;/var&gt; 非 &lt;code&gt;nil&lt;/code&gt; 手段，以像素为单位返回的坐标。请注意，由 &lt;var&gt;right&lt;/var&gt; 和 &lt;var&gt;bottom&lt;/var&gt; 指定的像素紧邻这些边缘。如果 &lt;var&gt;absolute&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ， &lt;var&gt;pixelwise&lt;/var&gt; 也将隐式为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="67538d7d98419175426b128c36b0b3bebe8742df" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;pixelwise&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;delta&lt;/var&gt; is interpreted as pixels.</source>
          <target state="translated">如果可选参数 &lt;var&gt;pixelwise&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ， &lt;var&gt;delta&lt;/var&gt; 被解释为像素。</target>
        </trans-unit>
        <trans-unit id="a9879bc9333880b25266af065a9218d798d982fc" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;pixelwise&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;delta&lt;/var&gt; will be interpreted as pixels.</source>
          <target state="translated">如果可选参数 &lt;var&gt;pixelwise&lt;/var&gt; 为non- &lt;code&gt;nil&lt;/code&gt; ，则 &lt;var&gt;delta&lt;/var&gt; 将被解释为像素。</target>
        </trans-unit>
        <trans-unit id="e79461cf0df5f6b16759d099fcd618f8a17c7868" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;pixelwise&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function returns the body height of &lt;var&gt;window&lt;/var&gt; counted in pixels.</source>
          <target state="translated">如果可选参数 &lt;var&gt;pixelwise&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则此函数返回以像素为单位的 &lt;var&gt;window&lt;/var&gt; 的主体高度。</target>
        </trans-unit>
        <trans-unit id="88be3cbbdc085160c9724bd37eb18c5ece2bd9f1" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;pixelwise&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function returns the body width of &lt;var&gt;window&lt;/var&gt; in units of pixels.</source>
          <target state="translated">如果可选参数 &lt;var&gt;pixelwise&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则此函数以像素为单位返回 &lt;var&gt;window&lt;/var&gt; 的主体宽度。</target>
        </trans-unit>
        <trans-unit id="e2f9666d74b1c2d8541a5e786737c4a527467fd1" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;preserve-permissions&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function copies the file modes (or &amp;ldquo;permissions&amp;rdquo;) of &lt;var&gt;oldname&lt;/var&gt; to &lt;var&gt;newname&lt;/var&gt;, as well as the Access Control List and SELinux context (if any). See &lt;a href=&quot;information-about-files#Information-about-Files&quot;&gt;Information about Files&lt;/a&gt;.</source>
          <target state="translated">如果可选参数 &lt;var&gt;preserve-permissions&lt;/var&gt; 是不 &lt;code&gt;nil&lt;/code&gt; ，该功能将文件复制模式（或&amp;ldquo;许可&amp;rdquo;）的 &lt;var&gt;oldname&lt;/var&gt; 到 &lt;var&gt;newname&lt;/var&gt; ，以及访问控制列表和SELinux值（如果有的话）。请参阅&lt;a href=&quot;information-about-files#Information-about-Files&quot;&gt;有关文件的信息&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="029a3d44d3a297af4af150ff61d208892d560bbb" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;preserve-size&lt;/var&gt; of that function (see &lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;Resizing Windows&lt;/a&gt;) is non-&lt;code&gt;nil&lt;/code&gt;, the size established by that function is preserved.</source>
          <target state="translated">如果该函数的可选参数 &lt;var&gt;preserve-size&lt;/var&gt; （请参见&amp;ldquo;&lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;调整Windows的大小&amp;rdquo;&lt;/a&gt;）为非 &lt;code&gt;nil&lt;/code&gt; ，则保留该函数建立的大小。</target>
        </trans-unit>
        <trans-unit id="6e6bbdaef60dada357717568596197154dd7321c" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;preserve&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, this means to preserve the current height/width of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s body. The height/width of &lt;var&gt;window&lt;/var&gt; will change only if Emacs has no better choice. Resizing a window whose height/width is preserved by this function never throws an error.</source>
          <target state="translated">如果可选参数 &lt;var&gt;preserve&lt;/var&gt; 为 &lt;code&gt;t&lt;/code&gt; ，则表示保留 &lt;var&gt;window&lt;/var&gt; 主体的当前高度/宽度。仅当Emacs没有更好的选择时， &lt;var&gt;window&lt;/var&gt; 的高度/宽度才会改变。调整其高度/宽度被此函数保留的窗口的大小永远不会引发错误。</target>
        </trans-unit>
        <trans-unit id="89f5f499a676e24ccca2ae80726f4f232f2be90d" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;prompt&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be a string to display in the echo area as a prompt. If &lt;var&gt;prompt&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or the string &amp;lsquo;</source>
          <target state="translated">如果可选的参数 &lt;var&gt;prompt&lt;/var&gt; 为non- &lt;code&gt;nil&lt;/code&gt; ，则它应该是一个字符串，作为提示在回显区域中显示。如果 &lt;var&gt;prompt&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; 或字符串'</target>
        </trans-unit>
        <trans-unit id="d01db317320d26ca3e4ad5d1baa6aead22560513" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;rawfile&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;after-find-file&lt;/code&gt; is not called, and the &lt;code&gt;find-file-not-found-functions&lt;/code&gt; are not run in case of failure. What&amp;rsquo;s more, a non-&lt;code&gt;nil&lt;/code&gt;&lt;var&gt;rawfile&lt;/var&gt; value suppresses coding system conversion and format conversion.</source>
          <target state="translated">如果可选参数 &lt;var&gt;rawfile&lt;/var&gt; 为non &lt;code&gt;after-find-file&lt;/code&gt; &lt;code&gt;nil&lt;/code&gt; ，则不会调用after-find-file，并且在失败的情况下不会运行 &lt;code&gt;find-file-not-found-functions&lt;/code&gt; 函数。更重要的是，非 &lt;code&gt;nil&lt;/code&gt; &lt;var&gt;rawfile&lt;/var&gt; 值，抑制编码系统转换和格式转换。</target>
        </trans-unit>
        <trans-unit id="9dee660bbd61d9d3eb4ff8e4b9583cdaa1d22789" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;really-word&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it finds a word; otherwise, it finds a symbol (which includes both word characters and symbol constituent characters).</source>
          <target state="translated">如果可选参数 &lt;var&gt;really-word&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则会找到一个单词；否则，它会找到一个符号（包括单词字符和符号组成字符）。</target>
        </trans-unit>
        <trans-unit id="cb6c903ec4ea9d4de23615c3a0c722139cb94b36" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;remember-pos&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function looks for the &lt;var&gt;id&lt;/var&gt; element on the current line, if any, and tries to move to that entry after all the entries are (re)inserted.</source>
          <target state="translated">如果可选参数 &lt;var&gt;remember-pos&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则此函数在当前行（如果有）上查找 &lt;var&gt;id&lt;/var&gt; 元素，并在（重新）插入所有条目之后尝试移至该条目。</target>
        </trans-unit>
        <trans-unit id="c50ccd8c5be45306369670ca97b8346a0508bffa" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;round&lt;/var&gt; is &lt;code&gt;ceiling&lt;/code&gt;, this function returns the smallest integer larger than &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s pixel height divided by the character height of its frame; if it is &lt;code&gt;floor&lt;/code&gt;, it returns the largest integer smaller than said value; with any other &lt;var&gt;round&lt;/var&gt; it returns the internal value of &lt;var&gt;windows&lt;/var&gt;&amp;rsquo;s total height.</source>
          <target state="translated">如果可选参数 &lt;var&gt;round&lt;/var&gt; 为 &lt;code&gt;ceiling&lt;/code&gt; ，则此函数返回大于 &lt;var&gt;window&lt;/var&gt; 像素高度除以其框架字符高度的最小整数；如果是 &lt;code&gt;floor&lt;/code&gt; ，则返回小于所述值的最大整数；与其他任何 &lt;var&gt;round&lt;/var&gt; 它将返回 &lt;var&gt;windows&lt;/var&gt; 总高度的内部值。</target>
        </trans-unit>
        <trans-unit id="5c0338135cc80796e1eb8d151c1e9949aeae7c3d" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;sign&lt;/var&gt; is a negative number, it means to use the right or bottom edge of &lt;var&gt;window&lt;/var&gt; as reference position instead of &lt;code&gt;window-point&lt;/code&gt;. If &lt;var&gt;sign&lt;/var&gt; is a positive number, it means to use the left or top edge of &lt;var&gt;window&lt;/var&gt; as reference position.</source>
          <target state="translated">如果可选参数 &lt;var&gt;sign&lt;/var&gt; 为负数，则意味着使用 &lt;var&gt;window&lt;/var&gt; 的右边缘或下边缘作为参考位置，而不是 &lt;code&gt;window-point&lt;/code&gt; 。如果 &lt;var&gt;sign&lt;/var&gt; 为正数，则意味着将 &lt;var&gt;window&lt;/var&gt; 的左边缘或上边缘用作参考位置。</target>
        </trans-unit>
        <trans-unit id="2e74dce35aeb60451a6f89698126e1e40b28805c" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;strict&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then point must be in or next to the symbol or word&amp;mdash;if no symbol or word is there, the function returns &lt;code&gt;nil&lt;/code&gt;. Otherwise, a nearby symbol or word on the same line is acceptable.</source>
          <target state="translated">如果可选参数 &lt;var&gt;strict&lt;/var&gt; 为non- &lt;code&gt;nil&lt;/code&gt; ，则point必须在符号或单词中或旁边&amp;mdash;如果没有符号或单词，函数将返回 &lt;code&gt;nil&lt;/code&gt; 。否则，可以接受同一行附近的符号或单词。</target>
        </trans-unit>
        <trans-unit id="85a078037bb47ea6da257269962f893fa95d36c4" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;substitute&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, Emacs calls the function &lt;code&gt;substitute-env-vars&lt;/code&gt; to expand any environment variables in &lt;var&gt;value&lt;/var&gt;.</source>
          <target state="translated">如果可选参数 &lt;var&gt;substitute&lt;/var&gt; 为non- &lt;code&gt;nil&lt;/code&gt; ，则Emacs会调用函数 &lt;code&gt;substitute-env-vars&lt;/code&gt; 来扩展 &lt;var&gt;value&lt;/var&gt; 中的所有环境变量。</target>
        </trans-unit>
        <trans-unit id="048f128e5ceb4df9f865a4f7389308d38bf4767b" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;switch-buffer&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, and completion is performed in the minibuffer, &lt;var&gt;function&lt;/var&gt; will be called with current buffer set to the buffer from which the minibuffer was entered.</source>
          <target state="translated">如果可选参数 &lt;var&gt;switch-buffer&lt;/var&gt; 为non- &lt;code&gt;nil&lt;/code&gt; ，并且在迷你缓冲区中完成了操作，则将在当前缓冲区设置为输入迷你缓冲区的缓冲区的情况下调用 &lt;var&gt;function&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="08a4dd17345e143aedf66d1ce0a83721748bf1e6" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;trash&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; and the variable &lt;code&gt;delete-by-moving-to-trash&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this command moves the file into the system Trash instead of deleting it. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Misc-File-Ops.html#Misc-File-Ops&quot;&gt;Miscellaneous File Operations&lt;/a&gt; in</source>
          <target state="translated">如果可选参数 &lt;var&gt;trash&lt;/var&gt; 是非 &lt;code&gt;nil&lt;/code&gt; 并且可变 &lt;code&gt;delete-by-moving-to-trash&lt;/code&gt; 是非 &lt;code&gt;nil&lt;/code&gt; ，此命令中的文件移动到系统垃圾箱而不是删除它。见&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Misc-File-Ops.html#Misc-File-Ops&quot;&gt;其他文件操作&lt;/a&gt;中</target>
        </trans-unit>
        <trans-unit id="4c7d233a39cdc40ae2a87dce42cf20848095fce5" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;trim&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be a regular expression to match text to trim from the beginning and end of each substring. If trimming makes the substring empty, it is treated as null.</source>
          <target state="translated">如果可选参数 &lt;var&gt;trim&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则它应该是一个正则表达式，以匹配要从每个子字符串的开头和结尾修剪的文本。如果修整使子字符串为空，则将其视为null。</target>
        </trans-unit>
        <trans-unit id="0474de3e3cfb36597aeb20e585cfaab243a75642" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;update&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function will only erase or add entries that have changed since the last print. This is several times faster if most entries haven&amp;rsquo;t changed since the last time this function was called. The only difference in outcome is that tags placed via &lt;code&gt;tabulated-list-put-tag&lt;/code&gt; will not be removed from entries that haven&amp;rsquo;t changed (normally all tags are removed).</source>
          <target state="translated">如果可选参数 &lt;var&gt;update&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则此函数将仅擦除或添加自上次打印以来已更改的条目。如果自上次调用此函数以来大多数条目都没有更改，则速度要快几倍。结果的唯一区别是，通过 &lt;code&gt;tabulated-list-put-tag&lt;/code&gt; 放置标签放置的标签不会从未更改的条目中删除（通常会删除所有标签）。</target>
        </trans-unit>
        <trans-unit id="34ef184b831e0c920b50c5c6e19e0c8ea037c0fc" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;wrap&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this means to wrap &lt;var&gt;direction&lt;/var&gt; around frame borders. For example, if &lt;var&gt;window&lt;/var&gt; is at the top of the frame and &lt;var&gt;direction&lt;/var&gt; is &lt;code&gt;above&lt;/code&gt;, then this function usually returns the frame&amp;rsquo;s minibuffer window if it&amp;rsquo;s active and a window at the bottom of the frame otherwise.</source>
          <target state="translated">如果可选参数 &lt;var&gt;wrap&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则意味着将 &lt;var&gt;direction&lt;/var&gt; 环绕框架边框。例如，如果 &lt;var&gt;window&lt;/var&gt; 在框架的顶部，而 &lt;var&gt;direction&lt;/var&gt; 在 &lt;code&gt;above&lt;/code&gt; ，则此函数通常返回框架的minibuffer窗口（如果处于活动状态），否则返回一个窗口在框架的底部。</target>
        </trans-unit>
        <trans-unit id="8549d0f21d86c989d10e25c901126fd388809096" translate="yes" xml:space="preserve">
          <source>If the optional argument &lt;var&gt;writable&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this means to not use markers for sampling positions like &lt;code&gt;window-point&lt;/code&gt; or &lt;code&gt;window-start&lt;/code&gt;. This argument should be non-&lt;code&gt;nil&lt;/code&gt; when the state will be written to disk and read back in another session.</source>
          <target state="translated">如果可选参数 &lt;var&gt;writable&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则意味着不要使用标记对诸如 &lt;code&gt;window-point&lt;/code&gt; 或 &lt;code&gt;window-start&lt;/code&gt; 之类的位置进行采样。这种说法应该是不 &lt;code&gt;nil&lt;/code&gt; 时的状态将被写入到磁盘上，而在另一个会话回读。</target>
        </trans-unit>
        <trans-unit id="ceb05d9193a1bc7f982112320813187e1c1876a3" translate="yes" xml:space="preserve">
          <source>If the optional arguments &lt;var&gt;reference-face&lt;/var&gt; and &lt;var&gt;frame&lt;/var&gt; are specified, the returned list includes only fonts that are the same size as &lt;var&gt;reference-face&lt;/var&gt; (a face name) currently is on the frame &lt;var&gt;frame&lt;/var&gt;.</source>
          <target state="translated">如果指定了可选参数 &lt;var&gt;reference-face&lt;/var&gt; 和 &lt;var&gt;frame&lt;/var&gt; ，则返回的列表仅包含与frame &lt;var&gt;frame&lt;/var&gt; 上当前与 &lt;var&gt;reference-face&lt;/var&gt; （人脸名称）大小相同的字体。</target>
        </trans-unit>
        <trans-unit id="5277a2e4b2715d42fd68e395b8ef7fb55afa51fe" translate="yes" xml:space="preserve">
          <source>If the optional second argument &lt;var&gt;do-not-move&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;current-kill&lt;/code&gt; doesn&amp;rsquo;t alter the yanking pointer; it just returns the &lt;var&gt;n&lt;/var&gt;th kill, counting from the current yanking pointer.</source>
          <target state="translated">如果可选的第二个参数 &lt;var&gt;do-not-move&lt;/var&gt; 为non- &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;current-kill&lt;/code&gt; 不会更改拉动指针；它仅返回第 &lt;var&gt;n&lt;/var&gt; 个kill，从当前的指针指针开始计数。</target>
        </trans-unit>
        <trans-unit id="0e51c40bdf5065b39b31e97f01fc136cf2c272d7" translate="yes" xml:space="preserve">
          <source>If the optional second argument &lt;var&gt;ignore&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be a string, a potential buffer name. It means to consider that potential buffer acceptable, if it is tried, even it is the name of an existing buffer (which would normally be rejected). Thus, if buffers named &amp;lsquo;</source>
          <target state="translated">如果可选的第二个参数 &lt;var&gt;ignore&lt;/var&gt; 为non- &lt;code&gt;nil&lt;/code&gt; ，则应为字符串，可能的缓冲区名称。这意味着如果尝试了，则认为该潜在缓冲区是可接受的，即使它是现有缓冲区的名称（通常会拒绝）。因此，如果缓冲区名为&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="21b56a00ec159b94529bf7aadfc94d111c5699b4" translate="yes" xml:space="preserve">
          <source>If the paragraph has as yet only one line, the function tests the validity of the prefix candidate just found. The function then returns the candidate if it&amp;rsquo;s valid, or a string of spaces otherwise. (see the description of &lt;code&gt;adaptive-fill-first-line-regexp&lt;/code&gt; below).</source>
          <target state="translated">如果该段落只有一行，则该功能将测试刚刚找到的前缀候选者的有效性。然后，该函数将返回候选值（如果有效），否则返回一串空格。（请参见下面的 &lt;code&gt;adaptive-fill-first-line-regexp&lt;/code&gt; 的说明）。</target>
        </trans-unit>
        <trans-unit id="dfd81ad0f84ba2b0164d9238eabfac5d9cb05431" translate="yes" xml:space="preserve">
          <source>If the parameter&amp;rsquo;s value is a symbol, it specifies a number through the value of &lt;code&gt;tty-color-mode-alist&lt;/code&gt;, and the associated number is used instead.</source>
          <target state="translated">如果参数的值是符号，则通过 &lt;code&gt;tty-color-mode-alist&lt;/code&gt; 的值指定一个数字，并使用关联的数字代替。</target>
        </trans-unit>
        <trans-unit id="9893303f7ed34f18f99bb475aaec259e0d2ecbf2" translate="yes" xml:space="preserve">
          <source>If the part of &lt;var&gt;filename&lt;/var&gt; before the first slash is &amp;lsquo;</source>
          <target state="translated">如果 &lt;var&gt;filename&lt;/var&gt; 的第一个斜杠之前的部分是'</target>
        </trans-unit>
        <trans-unit id="5f22cf6536ccc005c13385137d89081d1dc837e2" translate="yes" xml:space="preserve">
          <source>If the predicate is neither &lt;code&gt;t&lt;/code&gt; nor &lt;code&gt;nil&lt;/code&gt;, then it should be a function of no arguments. It will be called in each buffer to decide whether to offer to save that buffer. If it returns a non-&lt;code&gt;nil&lt;/code&gt; value in a certain buffer, that means do offer to save that buffer.</source>
          <target state="translated">如果谓词既不是 &lt;code&gt;t&lt;/code&gt; 也不是 &lt;code&gt;nil&lt;/code&gt; ，那么它应该是没有参数的函数。将在每个缓冲区中调用它来决定是否提供保存该缓冲区。如果它在某个缓冲区中返回非 &lt;code&gt;nil&lt;/code&gt; 值，则表示确实愿意保存该缓冲区。</target>
        </trans-unit>
        <trans-unit id="650d2ded902ef2d668e84d6c2d0f41e02a33671b" translate="yes" xml:space="preserve">
          <source>If the prefix key ends with a mouse event, Emacs handles the menu keymap by popping up a visible menu, so that the user can select a choice with the mouse. When the user clicks on a menu item, the event generated is whatever character or symbol has the binding that brought about that menu item. (A menu item may generate a series of events if the menu has multiple levels or comes from the menu bar.)</source>
          <target state="translated">如果前缀键以鼠标事件结束,Emacs处理菜单键图的方式是弹出一个可见的菜单,这样用户就可以用鼠标进行选择。当用户点击一个菜单项时,产生的事件是任何字符或符号具有带来该菜单项的绑定。(如果菜单有多级或来自菜单栏,一个菜单项可能会产生一系列事件)。</target>
        </trans-unit>
        <trans-unit id="57227ce473189ca647671661a371ca4ff2aa3d17" translate="yes" xml:space="preserve">
          <source>If the previous nonblank line has no indent points beyond the current column, this command does nothing.</source>
          <target state="translated">如果之前的非空行在当前列之外没有缩进点,则此命令不做任何操作。</target>
        </trans-unit>
        <trans-unit id="3ff12eb1a5dce92c245dde7c64a07f76dd4a443b" translate="yes" xml:space="preserve">
          <source>If the previous nonblank line has no next indent point (i.e., none at a great enough column position), &lt;code&gt;indent-relative&lt;/code&gt; either does nothing (if &lt;var&gt;unindented-ok&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;) or calls &lt;code&gt;tab-to-tab-stop&lt;/code&gt;. Thus, if point is underneath and to the right of the last column of a short line of text, this command ordinarily moves point to the next tab stop by inserting whitespace.</source>
          <target state="translated">如果以前的非空行没有未来缩进点（即，根本没有足够大的列位置）， &lt;code&gt;indent-relative&lt;/code&gt; 要么什么也不做（如果 &lt;var&gt;unindented-ok&lt;/var&gt; 是非 &lt;code&gt;nil&lt;/code&gt; ）或来电 &lt;code&gt;tab-to-tab-stop&lt;/code&gt; 。因此，如果point在短文本的最后一列的下方和右侧，则此命令通常通过插入空格将点移动到下一个制表符停止位置。</target>
        </trans-unit>
        <trans-unit id="f4da0c6d9b4449d476585ee23e7db4cf7ce32c0b" translate="yes" xml:space="preserve">
          <source>If the problem is not simply an imbalance of parentheses, a useful technique is to try</source>
          <target state="translated">如果问题不是简单的小括号不平衡,一个有用的技术是尝试一下。</target>
        </trans-unit>
        <trans-unit id="db8ed5464e72b8c476ff4ec16a10f0cd51524277" translate="yes" xml:space="preserve">
          <source>If the process has the &lt;code&gt;adjust-window-size-function&lt;/code&gt; property (see &lt;a href=&quot;process-information#Process-Information&quot;&gt;Process Information&lt;/a&gt;), its value overrides the global and buffer-local values of &lt;code&gt;window-adjust-process-window-size-function&lt;/code&gt;.</source>
          <target state="translated">如果该进程具有 &lt;code&gt;adjust-window-size-function&lt;/code&gt; 属性（请参见&lt;a href=&quot;process-information#Process-Information&quot;&gt;Process Information&lt;/a&gt;），则其值将覆盖 &lt;code&gt;window-adjust-process-window-size-function&lt;/code&gt; 的全局值和缓冲区局部值。</target>
        </trans-unit>
        <trans-unit id="deb072058be162ae286bf0b45dcb8683abfed0a3" translate="yes" xml:space="preserve">
          <source>If the process object represents a network, serial, or pipe connection, its status changes to &lt;code&gt;closed&lt;/code&gt;; otherwise, it changes to &lt;code&gt;signal&lt;/code&gt;, unless the process already exited. See &lt;a href=&quot;process-information#Process-Information&quot;&gt;process-status&lt;/a&gt;.</source>
          <target state="translated">如果过程对象代表网络，串行或管道连接，则其状态将更改为 &lt;code&gt;closed&lt;/code&gt; ；否则，它将更改为 &lt;code&gt;signal&lt;/code&gt; ，除非该进程已经退出。参见&lt;a href=&quot;process-information#Process-Information&quot;&gt;process-status&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="45961f038e011d9c685fb46da83bdbfb5b85f171" translate="yes" xml:space="preserve">
          <source>If the process&amp;rsquo;s buffer is displayed in a window, your Lisp program may wish to tell the process the dimensions of that window, so that the process could adapt its output to those dimensions, much as it adapts to the screen dimensions. The following functions allow communicating this kind of information to processes; however, not all systems support the underlying functionality, so it is best to provide fallbacks, e.g., via command-line arguments or environment variables.</source>
          <target state="translated">如果该进程的缓冲区显示在一个窗口中，则您的Lisp程序可能希望告诉该进程该窗口的尺寸，以便该进程可以使其输出适应那些尺寸，就像它适合于屏幕尺寸一样。以下功能允许将此类信息传达给流程；但是，并非所有系统都支持底层功能，因此最好提供备用，例如通过命令行参数或环境变量。</target>
        </trans-unit>
        <trans-unit id="8cd7170a08590da16f5decc34d06ab10bce6a4b0" translate="yes" xml:space="preserve">
          <source>If the property is &lt;code&gt;nil&lt;/code&gt;, the character&amp;rsquo;s syntax is determined from the current syntax table in the usual way.</source>
          <target state="translated">如果属性为 &lt;code&gt;nil&lt;/code&gt; ，则以常规方式根据当前语法表确定字符的语法。</target>
        </trans-unit>
        <trans-unit id="a8ff877c231716bcd85163a925d07773b1cd1a3a" translate="yes" xml:space="preserve">
          <source>If the property value is &lt;code&gt;t&lt;/code&gt;, the newline character has no effect on the displayed height of the line&amp;mdash;the visible contents alone determine the height. The &lt;code&gt;line-spacing&lt;/code&gt; property, described below, is also ignored in this case. This is useful for tiling small images (or image slices) without adding blank areas between the images.</source>
          <target state="translated">如果属性值为 &lt;code&gt;t&lt;/code&gt; ，则换行符对显示的行高没有影响-仅可见内容确定行高。在这种情况下，以下描述的 &lt;code&gt;line-spacing&lt;/code&gt; 属性也将被忽略。这对于平铺小图像（或图像切片）而不在图像之间添加空白区域很有用。</target>
        </trans-unit>
        <trans-unit id="9332afdec02fd82c547da6eae33cd85f1c4398ad" translate="yes" xml:space="preserve">
          <source>If the property value is a list of the form &lt;code&gt;(&lt;var&gt;height&lt;/var&gt;
&lt;var&gt;total&lt;/var&gt;)&lt;/code&gt;, that adds extra space &lt;em&gt;below&lt;/em&gt; the display line. First Emacs uses &lt;var&gt;height&lt;/var&gt; as a height spec to control extra space &lt;em&gt;above&lt;/em&gt; the line; then it adds enough space &lt;em&gt;below&lt;/em&gt; the line to bring the total line height up to &lt;var&gt;total&lt;/var&gt;. In this case, any value of &lt;code&gt;line-spacing&lt;/code&gt; property for the newline is ignored.</source>
          <target state="translated">如果属性值是形式的列表 &lt;code&gt;(&lt;var&gt;height&lt;/var&gt; &lt;var&gt;total&lt;/var&gt;)&lt;/code&gt; ，则会在显示行&lt;em&gt;下方&lt;/em&gt;添加额外的空间。首先，Emacs使用 &lt;var&gt;height&lt;/var&gt; 作为高度规格来控制线条&lt;em&gt;上方&lt;/em&gt;的额外空间；然后添加足够的空间，&lt;em&gt;下面&lt;/em&gt;的线，使线路总高度达到 &lt;var&gt;total&lt;/var&gt; 。在这种情况下，将忽略换行符的 &lt;code&gt;line-spacing&lt;/code&gt; 属性的任何值。</target>
        </trans-unit>
        <trans-unit id="d11de86d9df45640319ada9503f7c6f26a6b6d39" translate="yes" xml:space="preserve">
          <source>If the property value is a syntax table, that table is used instead of the current buffer&amp;rsquo;s syntax table to determine the syntax for the underlying text character.</source>
          <target state="translated">如果属性值为语法表，则使用该表代替当前缓冲区的语法表来确定基础文本字符的语法。</target>
        </trans-unit>
        <trans-unit id="864eb49d276a3277ab58bccd89b45a4672ea219c" translate="yes" xml:space="preserve">
          <source>If the property value isn&amp;rsquo;t &lt;code&gt;nil&lt;/code&gt;, isn&amp;rsquo;t a string, and doesn&amp;rsquo;t refer to text in a file, then it is evaluated as a Lisp expression to obtain a string.</source>
          <target state="translated">如果属性值不是 &lt;code&gt;nil&lt;/code&gt; ，不是字符串，并且不引用文件中的文本，则将其作为Lisp表达式求值以获得字符串。</target>
        </trans-unit>
        <trans-unit id="38f97111526e39821c2939de43b1aba8774177fb" translate="yes" xml:space="preserve">
          <source>If the property value refers to a documentation string stored in the</source>
          <target state="translated">如果属性值指的是存储在文档中的文档字符串。</target>
        </trans-unit>
        <trans-unit id="6ac707385120af438b707d6888f43c296b9d96b5" translate="yes" xml:space="preserve">
          <source>If the reference window is internal, a reused window must share with it the edge specified by the &lt;code&gt;direction&lt;/code&gt; entry. Hence if, for example, the reference window is the frame&amp;rsquo;s root window and the value of the &lt;code&gt;direction&lt;/code&gt; entry is &lt;code&gt;left&lt;/code&gt;, a reused window must be on the left of the frame. This means that the left edge coordinate of the chosen window and that of the reference window are the same.</source>
          <target state="translated">如果参考窗口是内部窗口，则重用窗口必须与其共享 &lt;code&gt;direction&lt;/code&gt; 输入所指定的边缘。因此，例如，如果参考窗口是框架的根窗口，而 &lt;code&gt;direction&lt;/code&gt; 条目的值是 &lt;code&gt;left&lt;/code&gt; ，则重用窗口必须在框架的左侧。这意味着所选窗口的左边缘坐标与参考窗口的左边缘坐标相同。</target>
        </trans-unit>
        <trans-unit id="9f5b2b71a3d3948411e4d70107c5df0df5f1c0c4" translate="yes" xml:space="preserve">
          <source>If the reference window is live, the edge the chosen window will share with it is always the opposite of the one specified by the &lt;code&gt;direction&lt;/code&gt; entry. For example, if the value of the &lt;code&gt;direction&lt;/code&gt; entry is &lt;code&gt;left&lt;/code&gt;, the chosen window&amp;rsquo;s right edge coordinate (see &lt;a href=&quot;coordinates-and-windows#Coordinates-and-Windows&quot;&gt;Coordinates and Windows&lt;/a&gt;) will equal the reference window&amp;rsquo;s left edge coordinate.</source>
          <target state="translated">如果参考窗口处于活动状态，则所选窗口将与之共享的边缘始终与 &lt;code&gt;direction&lt;/code&gt; 条目指定的边缘相反。例如，如果 &lt;code&gt;direction&lt;/code&gt; 条目的值为 &lt;code&gt;left&lt;/code&gt; ，则所选窗口的右边缘坐标（请参见&lt;a href=&quot;coordinates-and-windows#Coordinates-and-Windows&quot;&gt;Coordinates and Windows&lt;/a&gt;）将等于参考窗口的左边缘坐标。</target>
        </trans-unit>
        <trans-unit id="de8210d397027ede8152086bfd375e22438b2494" translate="yes" xml:space="preserve">
          <source>If the region contains null bytes, the value is &lt;code&gt;no-conversion&lt;/code&gt;, even if the region contains text encoded in some coding system.</source>
          <target state="translated">如果该区域包含空字节，则该值是 &lt;code&gt;no-conversion&lt;/code&gt; ，即使该区域包含以某种编码系统编码的文本也是如此。</target>
        </trans-unit>
        <trans-unit id="0d6ba2dd5762a7f4a7ba3464533b3e64af4857d6" translate="yes" xml:space="preserve">
          <source>If the region contains only</source>
          <target state="translated">如果该区域只包含</target>
        </trans-unit>
        <trans-unit id="da6ea29f28104a6e98fc44a5521cbaeb973455e6" translate="yes" xml:space="preserve">
          <source>If the region ends with a newline, that is ignored unless the optional third argument &lt;var&gt;count-final-newline&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果以新行，除非可选的第三个参数被忽略的区域端部 &lt;var&gt;count-final-newline&lt;/var&gt; 是非 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dd0c3591cf826a762edbb01a1829efc13aec39b6" translate="yes" xml:space="preserve">
          <source>If the register contains a rectangle, then the rectangle is inserted with its upper left corner at point. This means that text is inserted in the current line and underneath it on successive lines.</source>
          <target state="translated">如果寄存器中包含一个矩形,那么插入的矩形的左上角为点。这意味着文本被插入到当前行和连续行的下方。</target>
        </trans-unit>
        <trans-unit id="5200a31714675a4baf5e8883a9477814cbe3c49a" translate="yes" xml:space="preserve">
          <source>If the register contains something other than saved text (a string) or a rectangle (a list), currently useless things happen. This may be changed in the future.</source>
          <target state="translated">如果寄存器中包含的不是保存的文本(字符串)或矩形(列表),那么目前无用的事情就会发生。这一点将来可能会被改变。</target>
        </trans-unit>
        <trans-unit id="15587f2b6b239a89a7a50c6b82274c197ef4f9d8" translate="yes" xml:space="preserve">
          <source>If the ring is full, insertion removes the oldest element to make room for the new element.</source>
          <target state="translated">如果环已满,插入时将删除最旧的元素,为新元素腾出空间。</target>
        </trans-unit>
        <trans-unit id="07d396c6040d9ac9a81e1564994516bdd4c6f009" translate="yes" xml:space="preserve">
          <source>If the ring is full, this function removes the newest element to make room for the inserted element.</source>
          <target state="translated">如果环已满,该函数将删除最新的元素,为插入的元素腾出空间。</target>
        </trans-unit>
        <trans-unit id="351123b37ff30f7d72eb53f1e662ced452ab9e5f" translate="yes" xml:space="preserve">
          <source>If the root window is live, &lt;var&gt;root&lt;/var&gt; is that window itself. Otherwise, &lt;var&gt;root&lt;/var&gt; is a list &lt;code&gt;(&lt;var&gt;dir&lt;/var&gt; &lt;var&gt;edges&lt;/var&gt; &lt;var&gt;w1&lt;/var&gt;
&lt;var&gt;w2&lt;/var&gt; ...)&lt;/code&gt; where &lt;var&gt;dir&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; for a horizontal combination and &lt;code&gt;t&lt;/code&gt; for a vertical combination, &lt;var&gt;edges&lt;/var&gt; gives the size and position of the combination, and the remaining elements are the child windows. Each child window may again be a window object (for a live window) or a list with the same format as above (for an internal window). The &lt;var&gt;edges&lt;/var&gt; element is a list &lt;code&gt;(&lt;var&gt;left&lt;/var&gt;
&lt;var&gt;top&lt;/var&gt; &lt;var&gt;right&lt;/var&gt; &lt;var&gt;bottom&lt;/var&gt;)&lt;/code&gt;, similar to the value returned by &lt;code&gt;window-edges&lt;/code&gt; (see &lt;a href=&quot;coordinates-and-windows#Coordinates-and-Windows&quot;&gt;Coordinates and Windows&lt;/a&gt;).</source>
          <target state="translated">如果根窗口是活动的，则 &lt;var&gt;root&lt;/var&gt; 是该窗口本身。否则， &lt;var&gt;root&lt;/var&gt; 是一个列表 &lt;code&gt;(&lt;var&gt;dir&lt;/var&gt; &lt;var&gt;edges&lt;/var&gt; &lt;var&gt;w1&lt;/var&gt; &lt;var&gt;w2&lt;/var&gt; ...)&lt;/code&gt; ，其中 &lt;var&gt;dir&lt;/var&gt; 对于水平组合为 &lt;code&gt;nil&lt;/code&gt; ，对于垂直组合为 &lt;code&gt;t&lt;/code&gt; ， &lt;var&gt;edges&lt;/var&gt; 给出组合的大小和位置，其余元素为子窗口。每个子窗口可以再次是窗口对象（用于活动窗口）或具有与上述格式相同的列表（用于内部窗口）。的 &lt;var&gt;edges&lt;/var&gt; 元件是一个列表 &lt;code&gt;(&lt;var&gt;left&lt;/var&gt; &lt;var&gt;top&lt;/var&gt; &lt;var&gt;right&lt;/var&gt; &lt;var&gt;bottom&lt;/var&gt;)&lt;/code&gt; ，类似于 &lt;code&gt;window-edges&lt;/code&gt; 返回的值（请参阅&lt;a href=&quot;coordinates-and-windows#Coordinates-and-Windows&quot;&gt;坐标和Windows&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="75f2d2615cdf15afd6e2956e0f406addfc292e3f" translate="yes" xml:space="preserve">
          <source>If the same device is already used by another Emacs terminal, this function signals an error. If &lt;var&gt;tty&lt;/var&gt; is not suspended, this function does nothing.</source>
          <target state="translated">如果另一个Emacs终端已经使用了同一设备，则此功能会发出错误信号。如果未暂停 &lt;var&gt;tty&lt;/var&gt; ，则此功能不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="9f4664c6eaadcc29dcd11a7a83385d2fcd93ec2a" translate="yes" xml:space="preserve">
          <source>If the scan reaches the beginning or end of (the accessible part of) the buffer while in the middle of a parenthetical grouping, an error is signaled. If it reaches the beginning or end between groupings but before count is used up, &lt;code&gt;nil&lt;/code&gt; is returned.</source>
          <target state="translated">如果扫描在括号分组的中间到达缓冲区的开始或结尾（缓冲区的可访问部分），则会发出错误信号。如果到达分组之间的开始或结束但在计数用完之前，则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4acd2aff831c33301fe4a64be957276117c7148c" translate="yes" xml:space="preserve">
          <source>If the scan reaches the beginning or end of the accessible part of the buffer before it has scanned over &lt;var&gt;count&lt;/var&gt; parenthetical groupings, the return value is &lt;code&gt;nil&lt;/code&gt; if the depth at that point is zero; if the depth is non-zero, a &lt;code&gt;scan-error&lt;/code&gt; error is signaled.</source>
          <target state="translated">如果扫描在遍历 &lt;var&gt;count&lt;/var&gt; 括号分组之前到达缓冲区的可访问部分的开始或结尾，则如果该点的深度 &lt;code&gt;nil&lt;/code&gt; ，则返回值为nil；否则，返回值为nil。如果深度不为零，则表示 &lt;code&gt;scan-error&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b72b3d1bc43c12b4a85856c7dd6958ece6c9afb4" translate="yes" xml:space="preserve">
          <source>If the selected window already displays the specified buffer, it continues to do so, but another window is nonetheless found to display it as well.</source>
          <target state="translated">如果选定的窗口已经显示了指定的缓冲区,它就会继续显示,但还是会找到另一个窗口来显示它。</target>
        </trans-unit>
        <trans-unit id="dceae8e1e44f45ff9d0c4b64f5bf61c85f4575b9" translate="yes" xml:space="preserve">
          <source>If the selected window cannot be scrolled any further, this function signals an error. Otherwise, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果所选窗口无法进一步滚动，则此功能会发出错误信号。否则，它返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e01943ee8ae40b424c8c87ce4dfa3f86b2e61d4c" translate="yes" xml:space="preserve">
          <source>If the server has a non-default filter, the connection process does not get a separate process buffer; otherwise, Emacs creates a new buffer for the purpose. The buffer name is the server&amp;rsquo;s buffer name or process name, concatenated with the client identification string.</source>
          <target state="translated">如果服务器具有非默认过滤器，则连接进程不会获得单独的进程缓冲区；而是，否则，Emacs为此创建一个新的缓冲区。缓冲区名称是服务器的缓冲区名称或进程名称，与客户端标识字符串连接在一起。</target>
        </trans-unit>
        <trans-unit id="b444a41e96b7b5461f62ba6762f799de730d5fed" translate="yes" xml:space="preserve">
          <source>If the size of the runtime object passed to the module is smaller than what it expects, it means the module was compiled for an Emacs version newer (later) than the one which attempts to load it, i.e. the module might be incompatible with the Emacs binary.</source>
          <target state="translated">如果传递给模块的运行时对象的大小比它所期望的要小,这意味着模块是为Emacs的新版本(比试图加载它的版本要晚)编译的,也就是说模块可能与Emacs二进制文件不兼容。</target>
        </trans-unit>
        <trans-unit id="3125142d2b191df0f1c165cd14c13902b40256a6" translate="yes" xml:space="preserve">
          <source>If the specified buffer is already displayed in another window, in any frame on the current terminal, this switches to that window instead of creating a new frame. However, the selected window is never used for this.</source>
          <target state="translated">如果指定的缓冲区已经显示在另一个窗口中,在当前终端的任何框架中,这将切换到该窗口,而不是创建一个新的框架。但是,选定的窗口永远不会被用于此。</target>
        </trans-unit>
        <trans-unit id="368eb52100a670c323089c06cb84ffa26ffa5f61" translate="yes" xml:space="preserve">
          <source>If the specified file name matches more than one handler, the one whose match starts last in the file name gets precedence. This rule is chosen so that handlers for jobs such as uncompression are handled first, before handlers for jobs such as remote file access.</source>
          <target state="translated">如果指定的文件名匹配了多个处理程序,那么在文件名中最后开始匹配的那个处理程序将获得优先权。选择这条规则是为了使解压缩等工作的处理程序先于远程文件访问等工作的处理程序被处理。</target>
        </trans-unit>
        <trans-unit id="47338737b3726ee5de9d6fe222ce94ab18a8e014" translate="yes" xml:space="preserve">
          <source>If the specified portions of the two strings match, the value is &lt;code&gt;t&lt;/code&gt;. Otherwise, the value is an integer which indicates how many leading characters agree, and which string is less. Its absolute value is one plus the number of characters that agree at the beginning of the two strings. The sign is negative if &lt;var&gt;string1&lt;/var&gt; (or its specified portion) is less.</source>
          <target state="translated">如果两个字符串的指定部分匹配，则值为 &lt;code&gt;t&lt;/code&gt; 。否则，该值是一个整数，表示同意多少个前导字符，而哪个字符串较少。它的绝对值是一个加上两个字符串开头所同意的字符数。如果 &lt;var&gt;string1&lt;/var&gt; （或它的指定部分）较小，则符号为负。</target>
        </trans-unit>
        <trans-unit id="b72a9bc23284b1b084d3b464c5edfa5fdb086238" translate="yes" xml:space="preserve">
          <source>If the specified text includes raw bytes (see &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Text Representations&lt;/a&gt;), &lt;code&gt;select-safe-coding-system&lt;/code&gt; suggests &lt;code&gt;raw-text&lt;/code&gt; for its encoding.</source>
          <target state="translated">如果指定的文本包括原始字节（请参阅&lt;a href=&quot;text-representations#Text-Representations&quot;&gt;文本表示形式&lt;/a&gt;），则 &lt;code&gt;select-safe-coding-system&lt;/code&gt; 建议使用 &lt;code&gt;raw-text&lt;/code&gt; 进行编码。</target>
        </trans-unit>
        <trans-unit id="3744739d16eed63f1dd914249642ab3e23bd01ab" translate="yes" xml:space="preserve">
          <source>If the string &lt;var&gt;string&lt;/var&gt; does not contain control characters, you can do the same job in a more general way by creating (and then subsequently deleting) an overlay with a &lt;code&gt;before-string&lt;/code&gt; property. See &lt;a href=&quot;overlay-properties#Overlay-Properties&quot;&gt;Overlay Properties&lt;/a&gt;.</source>
          <target state="translated">如果字符串 &lt;var&gt;string&lt;/var&gt; 不包含控制字符，则可以通过创建（然后随后删除）具有 &lt;code&gt;before-string&lt;/code&gt; 属性的覆盖图，以更通用的方式完成相同的工作。请参见&lt;a href=&quot;overlay-properties#Overlay-Properties&quot;&gt;叠加属性&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d944f5ccc1c2dcc8be92dff45d1a38a5f4016504" translate="yes" xml:space="preserve">
          <source>If the string or vector &lt;var&gt;key&lt;/var&gt; is not a valid key sequence according to the prefix keys specified in &lt;var&gt;keymap&lt;/var&gt;, it must be too long and have extra events at the end that do not fit into a single key sequence. Then the value is a number, the number of events at the front of &lt;var&gt;key&lt;/var&gt; that compose a complete key.</source>
          <target state="translated">如果根据 &lt;var&gt;keymap&lt;/var&gt; 中指定的前缀键，字符串或矢量 &lt;var&gt;key&lt;/var&gt; 不是有效的键序列，则它必须太长，并且末尾有多余事件，这些事件不能容纳单个键序列。然后，该值是一个数字，即组成完整密钥的 &lt;var&gt;key&lt;/var&gt; 前面的事件数。</target>
        </trans-unit>
        <trans-unit id="1e63534bbb115f7e096f3e5fe79eec8a69b6b872" translate="yes" xml:space="preserve">
          <source>If the subprocess writes to its standard error stream, by default the error output is also passed to the process filter function. If Emacs uses a pseudo-TTY (pty) for communication with the subprocess, then it is impossible to separate the standard output and standard error streams of the subprocess, because a pseudo-TTY has only one output channel. In that case, if you want to keep the output to those streams separate, you should redirect one of them to a file&amp;mdash;for example, by using an appropriate shell command via &lt;code&gt;start-process-shell-command&lt;/code&gt; or a similar function.</source>
          <target state="translated">如果子流程写入其标准错误流，则默认情况下，错误输出也将传递到流程过滤器功能。如果Emacs使用伪TTY（pty）与子流程进行通信，则不可能分离子流程的标准输出和标准错误流，因为伪TTY只有一个输出通道。在这种情况下，如果要将输出分别保留到这些流中，则应将其中之一重定向到文件中，例如，通过 &lt;code&gt;start-process-shell-command&lt;/code&gt; 或类似的函数使用适当的shell命令。</target>
        </trans-unit>
        <trans-unit id="18702f98124649c8759bfe76e277da2cdd4539dd" translate="yes" xml:space="preserve">
          <source>If the symbol has an Edebug specification, this &lt;em&gt;indirect specification&lt;/em&gt; should be either a list specification that is used in place of the symbol, or a function that is called to process the arguments. The specification may be defined with &lt;code&gt;def-edebug-spec&lt;/code&gt; just as for macros. See the &lt;code&gt;defun&lt;/code&gt; example.</source>
          <target state="translated">如果符号具有Edebug规范，则此&lt;em&gt;间接规范&lt;/em&gt;应该是用于代替符号的列表规范，或者是用于处理参数的函数。可以像宏一样使用 &lt;code&gt;def-edebug-spec&lt;/code&gt; 定义该规范。请参阅 &lt;code&gt;defun&lt;/code&gt; 示例。</target>
        </trans-unit>
        <trans-unit id="374fdf8e2f867fb559b2ac4c3da7aad809207ef4" translate="yes" xml:space="preserve">
          <source>If the system can&amp;rsquo;t provide the requested information, or if &lt;var&gt;item&lt;/var&gt; is not one of those symbols, the value is &lt;code&gt;nil&lt;/code&gt;. All strings in the return value are decoded using &lt;code&gt;locale-coding-system&lt;/code&gt;. See &lt;a href=&quot;http://www.gnu.org/software/libc/manual/html_node/Locales.html#Locales&quot;&gt;Locales&lt;/a&gt; in</source>
          <target state="translated">如果系统无法提供所需的信息，或者 &lt;var&gt;item&lt;/var&gt; 不是那些符号之一，则值为 &lt;code&gt;nil&lt;/code&gt; 。返回值中的所有字符串都使用 &lt;code&gt;locale-coding-system&lt;/code&gt; 进行解码。见&lt;a href=&quot;http://www.gnu.org/software/libc/manual/html_node/Locales.html#Locales&quot;&gt;语言环境&lt;/a&gt;中</target>
        </trans-unit>
        <trans-unit id="058904110d90f3382409450e37c5d8142365664c" translate="yes" xml:space="preserve">
          <source>If the system doesn&amp;rsquo;t provide a way to determine the processor run time, &lt;code&gt;get-internal-run-time&lt;/code&gt; returns the same time as &lt;code&gt;current-time&lt;/code&gt;.</source>
          <target state="translated">如果系统没有提供确定处理器运行时间的方法，则 &lt;code&gt;get-internal-run-time&lt;/code&gt; 返回与 &lt;code&gt;current-time&lt;/code&gt; 相同的时间。</target>
        </trans-unit>
        <trans-unit id="434b5b0af97ab8d8dd5e8759dd47712f688d17c6" translate="yes" xml:space="preserve">
          <source>If the target of a symbolic links has remote file name syntax, &lt;code&gt;file-truename&lt;/code&gt; returns it quoted. See &lt;a href=&quot;file-name-expansion#File-Name-Expansion&quot;&gt;Functions that Expand Filenames&lt;/a&gt;.</source>
          <target state="translated">如果符号链接的目标具有远程文件名语法，则 &lt;code&gt;file-truename&lt;/code&gt; 会将其返回引用。请参见&lt;a href=&quot;file-name-expansion#File-Name-Expansion&quot;&gt;扩展文件名的函数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5c00d5af3b2ed2919c1b3c4daeaaeb19caff9b66" translate="yes" xml:space="preserve">
          <source>If the text area of &lt;var&gt;frame&lt;/var&gt; measured in pixels is not a multiple of its default font size, the values returned by these functions are rounded down to the number of characters of the default font that fully fit into the text area.</source>
          <target state="translated">如果以像素为单位的 &lt;var&gt;frame&lt;/var&gt; 文本区域不是其默认字体大小的倍数，则这些函数返回的值将四舍五入为完全适合该文本区域的默认字体的字符数。</target>
        </trans-unit>
        <trans-unit id="8786be1522ac71c913570f53dec91d3853821ad2" translate="yes" xml:space="preserve">
          <source>If the text being copied has any text properties, these are copied into the string along with the characters they belong to. See &lt;a href=&quot;text-properties#Text-Properties&quot;&gt;Text Properties&lt;/a&gt;. However, overlays (see &lt;a href=&quot;overlays#Overlays&quot;&gt;Overlays&lt;/a&gt;) in the buffer and their properties are ignored, not copied.</source>
          <target state="translated">如果要复制的文本具有任何文本属性，则这些属性将与它们所属的字符一起复制到字符串中。请参阅&lt;a href=&quot;text-properties#Text-Properties&quot;&gt;文本属性&lt;/a&gt;。但是，缓冲区中的叠加层（请参见&lt;a href=&quot;overlays#Overlays&quot;&gt;Overlays&lt;/a&gt;）及其属性将被忽略，而不是被复制。</target>
        </trans-unit>
        <trans-unit id="7e0e1d506376880fbedc83b940ca88f8dbddc189" translate="yes" xml:space="preserve">
          <source>If the text comes from an overlay string via &lt;code&gt;before-string&lt;/code&gt; or &lt;code&gt;after-string&lt;/code&gt; properties (see &lt;a href=&quot;overlay-properties#Overlay-Properties&quot;&gt;Overlay Properties&lt;/a&gt;), or from a display string (see &lt;a href=&quot;other-display-specs#Other-Display-Specs&quot;&gt;Other Display Specs&lt;/a&gt;), and the string doesn&amp;rsquo;t contain a &lt;code&gt;face&lt;/code&gt; or &lt;code&gt;mouse-face&lt;/code&gt; property, or these properties leave some face attributes undefined, but the buffer text affected by the overlay/display property does define a face or those attributes, Emacs applies the face attributes of the &amp;ldquo;underlying&amp;rdquo; buffer text. Note that this is so even if the overlay or display string is displayed in the display margins (see &lt;a href=&quot;display-margins#Display-Margins&quot;&gt;Display Margins&lt;/a&gt;).</source>
          <target state="translated">如果文字是通过字符串 &lt;code&gt;before-string&lt;/code&gt; 或字符串 &lt;code&gt;after-string&lt;/code&gt; 属性（请参见&lt;a href=&quot;overlay-properties#Overlay-Properties&quot;&gt;Overlay属性&lt;/a&gt;）来自显示字符串，或来自显示字符串（请参见&lt;a href=&quot;other-display-specs#Other-Display-Specs&quot;&gt;其他显示规格&lt;/a&gt;），而该字符串不包含 &lt;code&gt;face&lt;/code&gt; 或 &lt;code&gt;mouse-face&lt;/code&gt; 属性，或这些属性保留了一些未定义的面部属性，但是受overlay / display属性影响的缓冲区文本确实定义了一个或多个面部，Emacs应用了&amp;ldquo;基础&amp;rdquo;缓冲区文本的面部属性。请注意，即使在显示边距中显示叠加或显示字符串，也是如此（请参见&lt;a href=&quot;display-margins#Display-Margins&quot;&gt;显示边距&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="a97f7657ea771f686cebbc0832dcd8543f3efd08" translate="yes" xml:space="preserve">
          <source>If the text consists of a special glyph, the glyph can specify a particular face. See &lt;a href=&quot;glyphs#Glyphs&quot;&gt;Glyphs&lt;/a&gt;.</source>
          <target state="translated">如果文本包含特殊字形，则该字形可以指定特定的面孔。参见&lt;a href=&quot;glyphs#Glyphs&quot;&gt;字形&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6ed1c5d19c45070f011fd3ad93563e85d39f4884" translate="yes" xml:space="preserve">
          <source>If the text contains a &lt;code&gt;face&lt;/code&gt; or &lt;code&gt;mouse-face&lt;/code&gt; property, Emacs applies the specified faces and face attributes. See &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Special Properties&lt;/a&gt;. (This is how Font Lock mode faces are applied. See &lt;a href=&quot;font-lock-mode#Font-Lock-Mode&quot;&gt;Font Lock Mode&lt;/a&gt;.)</source>
          <target state="translated">如果文本包含 &lt;code&gt;face&lt;/code&gt; 或 &lt;code&gt;mouse-face&lt;/code&gt; 属性，则Emacs将应用指定的face和face属性。请参阅&lt;a href=&quot;special-properties#Special-Properties&quot;&gt;特殊属性&lt;/a&gt;。（这是应用&amp;ldquo;字体锁定&amp;rdquo;模式的方式。请参见&amp;ldquo;&lt;a href=&quot;font-lock-mode#Font-Lock-Mode&quot;&gt;字体锁定模式&amp;rdquo;&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="188480b76f860986894ec660734475f5481a24b8" translate="yes" xml:space="preserve">
          <source>If the text contains no multibyte characters, the function returns the list &lt;code&gt;(undecided)&lt;/code&gt;.</source>
          <target state="translated">如果文本不包含多字节字符，则该函数返回列表 &lt;code&gt;(undecided)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c67ef61d0e798bd2ee21b733b0d87a814c416b58" translate="yes" xml:space="preserve">
          <source>If the text is to be read back into Lisp, then you should print with quoting characters to avoid ambiguity. Likewise, if the purpose is to describe a Lisp object clearly for a Lisp programmer. However, if the purpose of the output is to look nice for humans, then it is usually better to print without quoting.</source>
          <target state="translated">如果文本是要被读回Lisp中,那么你应该用引号字符打印,以避免歧义。同样,如果目的是为了给Lisp程序员描述清楚一个Lisp对象。然而,如果输出的目的是为了让人类看起来更漂亮,那么通常最好不要带引号。</target>
        </trans-unit>
        <trans-unit id="a28c0597326f1c340e9d260f3f2992cc34aaeb88" translate="yes" xml:space="preserve">
          <source>If the text lies within an active region, Emacs highlights it using the &lt;code&gt;region&lt;/code&gt; face. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Standard-Faces.html#Standard-Faces&quot;&gt;Standard Faces&lt;/a&gt; in</source>
          <target state="translated">如果文本位于活动区域内，则Emacs将使用 &lt;code&gt;region&lt;/code&gt; 面突出显示该文本。见&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Standard-Faces.html#Standard-Faces&quot;&gt;标准面临&lt;/a&gt;的</target>
        </trans-unit>
        <trans-unit id="3152ab7e2009ef4b0ce7a2a65fc608a7c95eccd9" translate="yes" xml:space="preserve">
          <source>If the text lies within an overlay with a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;face&lt;/code&gt; property, Emacs applies the face(s) specified by that property. If the overlay has a &lt;code&gt;mouse-face&lt;/code&gt; property and the mouse is near enough to the overlay, Emacs applies the face or face attributes specified by the &lt;code&gt;mouse-face&lt;/code&gt; property instead. See &lt;a href=&quot;overlay-properties#Overlay-Properties&quot;&gt;Overlay Properties&lt;/a&gt;.</source>
          <target state="translated">如果文本谎言与非覆盖范围内 &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;face&lt;/code&gt; 财产，Emacs的应用由该属性指定了脸（或多个）。如果覆盖层具有 &lt;code&gt;mouse-face&lt;/code&gt; 属性，并且鼠标与覆盖层足够近，则Emacs会应用 &lt;code&gt;mouse-face&lt;/code&gt; 属性指定的face或face属性。请参见&lt;a href=&quot;overlay-properties#Overlay-Properties&quot;&gt;叠加属性&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d8ea720c5ffd43b26e4511d204c3c42a1ebbf0ac" translate="yes" xml:space="preserve">
          <source>If the text lies within the mode line of the selected window, Emacs applies the &lt;code&gt;mode-line&lt;/code&gt; face. For the mode line of a non-selected window, Emacs applies the &lt;code&gt;mode-line-inactive&lt;/code&gt; face. For a header line, Emacs applies the &lt;code&gt;header-line&lt;/code&gt; face. For a tab line, Emacs applies the &lt;code&gt;tab-line&lt;/code&gt; face.</source>
          <target state="translated">如果文本位于所选窗口的模式行内，则Emacs将应用 &lt;code&gt;mode-line&lt;/code&gt; 面。对于未选定窗口的模式行，Emacs将应用 &lt;code&gt;mode-line-inactive&lt;/code&gt; 面。对于标题行，Emacs应用 &lt;code&gt;header-line&lt;/code&gt; 面。对于选项卡行，Emacs将应用 &lt;code&gt;tab-line&lt;/code&gt; 面。</target>
        </trans-unit>
        <trans-unit id="f14408a8adf68c964ab66da93531e1a6dcf2ca7d" translate="yes" xml:space="preserve">
          <source>If the text property can&amp;rsquo;t be found, the function returns &lt;code&gt;nil&lt;/code&gt;. If it&amp;rsquo;s found, point is placed at the end of the region that has this text property match, and a &lt;code&gt;prop-match&lt;/code&gt; structure is returned.</source>
          <target state="translated">如果找不到text属性，则该函数返回 &lt;code&gt;nil&lt;/code&gt; 。如果找到，则将点放置在具有此文本属性匹配的区域的末尾，并返回 &lt;code&gt;prop-match&lt;/code&gt; 结构。</target>
        </trans-unit>
        <trans-unit id="cf486874c81d1fe52f4ef78646fb3b9ced6f1ff2" translate="yes" xml:space="preserve">
          <source>If the third argument &lt;var&gt;target-depth&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, parsing stops if the depth in parentheses becomes equal to &lt;var&gt;target-depth&lt;/var&gt;. The depth starts at 0, or at whatever is given in &lt;var&gt;state&lt;/var&gt;.</source>
          <target state="translated">如果第三个参数 &lt;var&gt;target-depth&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则括号中的深度等于 &lt;var&gt;target-depth&lt;/var&gt; 时，分析将停止。深度从0或 &lt;var&gt;state&lt;/var&gt; 给出的任何值开始。</target>
        </trans-unit>
        <trans-unit id="9d5ad229b8c2601e6354d21fe0f2c4a561753fd7" translate="yes" xml:space="preserve">
          <source>If the third element of the &lt;code&gt;quit-restore&lt;/code&gt; parameter is a list of buffer, window start (see &lt;a href=&quot;window-start-and-end#Window-Start-and-End&quot;&gt;Window Start and End&lt;/a&gt;), and point (see &lt;a href=&quot;window-point#Window-Point&quot;&gt;Window Point&lt;/a&gt;), and that buffer is still live, the buffer will be displayed, and start and point set accordingly. If, in addition, &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s buffer was temporarily resized, this function will also try to restore the original height of &lt;var&gt;window&lt;/var&gt;.</source>
          <target state="translated">如果 &lt;code&gt;quit-restore&lt;/code&gt; 参数的第三个元素是缓冲区列表，窗口开始（请参见&lt;a href=&quot;window-start-and-end#Window-Start-and-End&quot;&gt;Window Start和End&lt;/a&gt;）和点（请参见&lt;a href=&quot;window-point#Window-Point&quot;&gt;Window Point&lt;/a&gt;），并且该缓冲区仍处于活动状态，则将显示该缓冲区，并显示开始和点据此设定。此外，如果暂时调整了 &lt;var&gt;window&lt;/var&gt; 缓冲区的大小，则此功能还将尝试恢复 &lt;var&gt;window&lt;/var&gt; 的原始高度。</target>
        </trans-unit>
        <trans-unit id="08c08de732ef1903e040dc8cf4dec2533c0a2c93" translate="yes" xml:space="preserve">
          <source>If the thread exits, all the processes locked to it are unlocked.</source>
          <target state="translated">如果线程退出,所有锁定到它的进程都会被解锁。</target>
        </trans-unit>
        <trans-unit id="9b71f206c2504ba9835d9d1903e089a08251f745" translate="yes" xml:space="preserve">
          <source>If the two objects are not &lt;code&gt;equal&lt;/code&gt;, the values returned by &lt;code&gt;sxhash-equal&lt;/code&gt; are usually different, but not always; once in a rare while, by luck, you will encounter two distinct-looking objects that give the same result from &lt;code&gt;sxhash-equal&lt;/code&gt;.</source>
          <target state="translated">如果两个对象不 &lt;code&gt;equal&lt;/code&gt; ，则 &lt;code&gt;sxhash-equal&lt;/code&gt; 返回的值通常不同，但并不总是相同；偶尔，很幸运，您会遇到两个看起来完全不同的对象，它们从 &lt;code&gt;sxhash-equal&lt;/code&gt; 获得相同的结果。</target>
        </trans-unit>
        <trans-unit id="5fbd3cda5f7477844c9dcdbfc32e84643051e910" translate="yes" xml:space="preserve">
          <source>If the user chooses the first alternative in the choice, then the overall list has two elements and the second element is &lt;code&gt;t&lt;/code&gt;. If the user chooses the second alternative, then the overall list has three elements and the second and third must be strings.</source>
          <target state="translated">如果用户在选择中选择第一个选项，则整个列表包含两个元素，第二个元素为 &lt;code&gt;t&lt;/code&gt; 。如果用户选择第二个选项，则整个列表包含三个元素，第二个和第三个必须是字符串。</target>
        </trans-unit>
        <trans-unit id="9fd4d775c63b1a97e06fd3e09efa71f518031662" translate="yes" xml:space="preserve">
          <source>If the user first types</source>
          <target state="translated">如果用户先输入</target>
        </trans-unit>
        <trans-unit id="ed418a913476cd3524c85ba5a1824a2ceeeef0aa" translate="yes" xml:space="preserve">
          <source>If the user gets rid of the dialog box without making a valid choice, for instance using the window manager, then this produces a quit and &lt;code&gt;x-popup-dialog&lt;/code&gt; does not return.</source>
          <target state="translated">如果用户在没有做出有效选择的情况下放弃了该对话框，例如使用窗口管理器，则这将导致退出并不会返回 &lt;code&gt;x-popup-dialog&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1c4d7a33c83c3a3d552119c04d724d503fdfe072" translate="yes" xml:space="preserve">
          <source>If the user gets rid of the menu without making a valid choice, for instance by clicking the mouse away from a valid choice or by typing</source>
          <target state="translated">如果用户在没有做出有效选择的情况下摆脱菜单,例如通过点击鼠标离开有效选择或输入</target>
        </trans-unit>
        <trans-unit id="ea4480620e10d170e62b5dd356b4e58bbdf1b518" translate="yes" xml:space="preserve">
          <source>If the user presses and releases the left mouse button over the same location, that generates a sequence of events like this:</source>
          <target state="translated">如果用户在同一个位置上按下并释放鼠标左键,就会产生一连串类似这样的事件。</target>
        </trans-unit>
        <trans-unit id="219b7bca739acce06d6952536ce4a19ab3917e6a" translate="yes" xml:space="preserve">
          <source>If the user then types</source>
          <target state="translated">如果用户再输入</target>
        </trans-unit>
        <trans-unit id="3ce549524a0375112651ee6807c161b6db6cdf00" translate="yes" xml:space="preserve">
          <source>If the user types</source>
          <target state="translated">如果用户输入</target>
        </trans-unit>
        <trans-unit id="a384ff5a54f414aff1846ff0c45074f478370490" translate="yes" xml:space="preserve">
          <source>If the user wants to completely control the look of the prompt, the most convenient way to do that is to specify the &lt;code&gt;default&lt;/code&gt; face at the end of all face lists. For instance:</source>
          <target state="translated">如果用户想完全控制提示的外观，最方便的方法是在所有面部列表的末尾指定 &lt;code&gt;default&lt;/code&gt; 面部。例如：</target>
        </trans-unit>
        <trans-unit id="f0afc2a17ad86f3382250b68dcf2c4ea65c5e9a6" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;default&lt;/code&gt;, only print &lt;code&gt;charset&lt;/code&gt; text properties if there is an &amp;ldquo;unexpected&amp;rdquo; &lt;code&gt;charset&lt;/code&gt; property. For ascii characters, all charsets are considered &amp;ldquo;expected&amp;rdquo;. Otherwise, the expected &lt;code&gt;charset&lt;/code&gt; property of a character is given by &lt;code&gt;char-charset&lt;/code&gt;.</source>
          <target state="translated">如果该值为 &lt;code&gt;default&lt;/code&gt; ，则只有在存在&amp;ldquo;意外&amp;rdquo; &lt;code&gt;charset&lt;/code&gt; 属性时才打印 &lt;code&gt;charset&lt;/code&gt; 文本属性。对于ASCII字符，所有字符集均视为&amp;ldquo;预期&amp;rdquo;。否则， &lt;code&gt;charset&lt;/code&gt; 的预期charset属性由 &lt;code&gt;char-charset&lt;/code&gt; 给出。</target>
        </trans-unit>
        <trans-unit id="9ab3879e5145736dfbed3b20968831ce59dc17fb" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;grow-only&lt;/code&gt;, the tool bar expands automatically, but does not contract automatically. To contract the tool bar, the user has to redraw the frame by entering</source>
          <target state="translated">如果该值是 &lt;code&gt;grow-only&lt;/code&gt; ，则工具栏会自动展开，但不会自动收缩。要收缩工具栏，用户必须通过输入重新绘制框架</target>
        </trans-unit>
        <trans-unit id="7cb68140441efc447477892703745ce3bcdf30fe" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;height&lt;/code&gt;, then only the window&amp;rsquo;s height is fixed; if the value is &lt;code&gt;width&lt;/code&gt;, then only the window&amp;rsquo;s width is fixed. Any other non-&lt;code&gt;nil&lt;/code&gt; value fixes both the width and the height.</source>
          <target state="translated">如果值为 &lt;code&gt;height&lt;/code&gt; ，则仅窗口的高度是固定的；否则，值为0 。如果值为 &lt;code&gt;width&lt;/code&gt; ，则仅窗口的宽度是固定的。任何其他非 &lt;code&gt;nil&lt;/code&gt; 值都固定宽度和高度。</target>
        </trans-unit>
        <trans-unit id="5bdc6e42a3b35b4cc7c1e6809e7ebf7a4ddd5c36" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;nil&lt;/code&gt; (the default), then there is no limit.</source>
          <target state="translated">如果值为 &lt;code&gt;nil&lt;/code&gt; （默认值），则没有限制。</target>
        </trans-unit>
        <trans-unit id="c15eae920adf8ce0d2fec498eb508af66805c17a" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;charset&lt;/code&gt; text properties are never printed. If &lt;code&gt;t&lt;/code&gt;, they are always printed.</source>
          <target state="translated">如果值为 &lt;code&gt;nil&lt;/code&gt; ，则永远不会打印 &lt;code&gt;charset&lt;/code&gt; 文本属性。如果 &lt;code&gt;t&lt;/code&gt; ，则始终打印它们。</target>
        </trans-unit>
        <trans-unit id="92b326569ebf15a4b7fb245bb0fdceba7a93dec6" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;nil&lt;/code&gt;, Emacs does not remove images from the cache except when you explicitly clear it. This mode can be useful for debugging.</source>
          <target state="translated">如果值为 &lt;code&gt;nil&lt;/code&gt; ，则Emacs不会从缓存中删除图像，除非您明确将其清除。此模式对于调试很有用。</target>
        </trans-unit>
        <trans-unit id="39a8877903cd7fa29b7cceab7cd75abec4a154c6" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;nil&lt;/code&gt;, as it is by default, then the function &lt;code&gt;sentence-end&lt;/code&gt; constructs the regexp. That is why you should always call the function &lt;code&gt;sentence-end&lt;/code&gt; to obtain the regexp to be used to recognize the end of a sentence.</source>
          <target state="translated">如果值为 &lt;code&gt;nil&lt;/code&gt; （默认情况下为默认值），则函数 &lt;code&gt;sentence-end&lt;/code&gt; 构造regexp。这就是为什么您应始终调用函数 &lt;code&gt;sentence-end&lt;/code&gt; 以获得用于识别句子结尾的正则表达式的原因。</target>
        </trans-unit>
        <trans-unit id="468729e3a9700545eff7256bd812b75139abbdf7" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;nil&lt;/code&gt;, that means use no stipple pattern.</source>
          <target state="translated">如果值为 &lt;code&gt;nil&lt;/code&gt; ，则表示不使用点画模式。</target>
        </trans-unit>
        <trans-unit id="36597fbd18928466d8e834377bf073ed7a691958" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;nil&lt;/code&gt;, there is no short cut, and &lt;code&gt;indent-region&lt;/code&gt; actually works line by line.</source>
          <target state="translated">如果值为 &lt;code&gt;nil&lt;/code&gt; ，则没有捷径，并且 &lt;code&gt;indent-region&lt;/code&gt; 实际上逐行工作。</target>
        </trans-unit>
        <trans-unit id="700a7b58dc10a099d378778b3c8f172734efe6b0" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;no&lt;/code&gt;, then if the completion table fails to match the text at point, &lt;code&gt;completion-at-point&lt;/code&gt; moves on to the next function in &lt;code&gt;completion-at-point-functions&lt;/code&gt; instead of reporting a completion failure.</source>
          <target state="translated">如果该值 &lt;code&gt;no&lt;/code&gt; ，那么如果完成表未能在点匹配文本， &lt;code&gt;completion-at-point&lt;/code&gt; 到下一个功能在移动 &lt;code&gt;completion-at-point-functions&lt;/code&gt; ，而不是报告完成故障。</target>
        </trans-unit>
        <trans-unit id="4e41af7941c3971292e0e85b00bbeefc61e9670e" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;special&lt;/code&gt;, the named major mode is special. See &lt;a href=&quot;major-mode-conventions#Major-Mode-Conventions&quot;&gt;Major Mode Conventions&lt;/a&gt;.</source>
          <target state="translated">如果该值是 &lt;code&gt;special&lt;/code&gt; ，则命名的major模式为special。请参阅&lt;a href=&quot;major-mode-conventions#Major-Mode-Conventions&quot;&gt;主要模式约定&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f672a47781029fb09f39975884574172889a7af7" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;t&lt;/code&gt;, these commands instead move point to the beginning or end of the buffer (depending on scrolling direction); only if point is already on that position do they signal an error.</source>
          <target state="translated">如果值为 &lt;code&gt;t&lt;/code&gt; ，则这些命令将指针移至缓冲区的开头或结尾（取决于滚动方向）；否则，将命令移至缓冲区的开头或结尾。仅当点已经在该位置上时，它们才发出错误信号。</target>
        </trans-unit>
        <trans-unit id="29d957785b808e7c19d9391f0a4be2c11d43d626" translate="yes" xml:space="preserve">
          <source>If the value is a function, &lt;code&gt;current-kill&lt;/code&gt; calls it to get the most recent kill. If the function returns a non-&lt;code&gt;nil&lt;/code&gt; value, then that value is used as the most recent kill. If it returns &lt;code&gt;nil&lt;/code&gt;, then the front of the kill ring is used.</source>
          <target state="translated">如果值是一个函数，则 &lt;code&gt;current-kill&lt;/code&gt; 调用它以获取最新的kill。如果函数返回一个非 &lt;code&gt;nil&lt;/code&gt; 值，则该值被用作最近的追杀。如果返回 &lt;code&gt;nil&lt;/code&gt; ，则使用kill环的前端。</target>
        </trans-unit>
        <trans-unit id="2efa664ce25bc68241838829062a86b1d08a26ca" translate="yes" xml:space="preserve">
          <source>If the value is a function, &lt;code&gt;kill-new&lt;/code&gt; and &lt;code&gt;kill-append&lt;/code&gt; call it with the new first element of the kill ring as the argument.</source>
          <target state="translated">如果该值是一个函数，则 &lt;code&gt;kill-new&lt;/code&gt; 和 &lt;code&gt;kill-append&lt;/code&gt; 以kill环的新的第一个元素作为参数来调用它。</target>
        </trans-unit>
        <trans-unit id="5e905120e99d2f357f206cb76e224ddcd21994e5" translate="yes" xml:space="preserve">
          <source>If the value is a list, each list element corresponds to one entry, and should have the form &lt;code&gt;(&lt;var&gt;id&lt;/var&gt;&amp;nbsp;&lt;var&gt;contents&lt;/var&gt;)&lt;/code&gt;, where</source>
          <target state="translated">如果值是一个列表，则每个列表元素都对应一个条目，并且应采用 &lt;code&gt;(&lt;var&gt;id&lt;/var&gt;&amp;nbsp;&lt;var&gt;contents&lt;/var&gt;)&lt;/code&gt; 的形式，其中</target>
        </trans-unit>
        <trans-unit id="fb730abde36feb6570e0edc644f20655f48ac985" translate="yes" xml:space="preserve">
          <source>If the value is a list, only the listed windows are saved and restored.</source>
          <target state="translated">如果值是列表,则只保存和恢复列出的窗口。</target>
        </trans-unit>
        <trans-unit id="af878dd003d2bc2e6b758e24fbfb3309bd97c17e" translate="yes" xml:space="preserve">
          <source>If the value is an integer, it directly specifies the maximum image height and width, measured in pixels. If it is floating point, it specifies the maximum image height and width as a ratio to the frame height and width. If the value is non-numeric, there is no explicit limit on the size of images.</source>
          <target state="translated">如果是整数,则直接指定最大图像的高度和宽度,以像素为单位。如果是浮点数,则指定最大图像高度和宽度与帧高度和宽度的比例。如果该值为非数值,则对图像的大小没有明确的限制。</target>
        </trans-unit>
        <trans-unit id="33f437b405d89bf668073b5c7ce081a5a2c02dcd" translate="yes" xml:space="preserve">
          <source>If the value is non-&lt;code&gt;nil&lt;/code&gt; and not &lt;code&gt;t&lt;/code&gt;, Emacs adjusts point to keep the cursor at the same vertical position, even if the scrolling command didn&amp;rsquo;t move point off-window.</source>
          <target state="translated">如果该值是非 &lt;code&gt;nil&lt;/code&gt; 而不是 &lt;code&gt;t&lt;/code&gt; ，则Emacs会调整点以将光标保持在相同的垂直位置，即使滚动命令没有将光标移到窗口之外。</target>
        </trans-unit>
        <trans-unit id="2851cccc0e63a3f52ab08d7a9cb6c3e6a674388d" translate="yes" xml:space="preserve">
          <source>If the value is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;display-buffer&lt;/code&gt; does not necessarily have to display the buffer and the caller is prepared to accept that. This entry is not intended for user customizations, since there is no guarantee that an arbitrary caller of &lt;code&gt;display-buffer&lt;/code&gt; will be able to handle the case that no window will display the buffer. &lt;code&gt;display-buffer-no-window&lt;/code&gt; is the only action function that cares about this entry.</source>
          <target state="translated">如果该值不为 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;display-buffer&lt;/code&gt; 不一定必须显示该缓冲区，并且调用方已准备好接受它。此项不适合用户自定义，因为不能保证 &lt;code&gt;display-buffer&lt;/code&gt; 的任意调用者将能够处理没有窗口显示缓冲区的情况。 &lt;code&gt;display-buffer-no-window&lt;/code&gt; 是唯一关心该条目的动作函数。</target>
        </trans-unit>
        <trans-unit id="477bb7946100fa9a868977f2ca1fc8c26a6c6644" translate="yes" xml:space="preserve">
          <source>If the value is non-&lt;code&gt;nil&lt;/code&gt;, the named function is considered generally safe for evaluation. See &lt;a href=&quot;function-safety#Function-Safety&quot;&gt;Function Safety&lt;/a&gt;.</source>
          <target state="translated">如果该值不为 &lt;code&gt;nil&lt;/code&gt; ，则通常认为该命名函数对于评估是安全的。请参阅&lt;a href=&quot;function-safety#Function-Safety&quot;&gt;功能安全&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e16aff5bcb64ef95cfca3536ac2753af829bb27a" translate="yes" xml:space="preserve">
          <source>If the value is non-&lt;code&gt;nil&lt;/code&gt;, the named function is considered to be pure (see &lt;a href=&quot;what-is-a-function#What-Is-a-Function&quot;&gt;What Is a Function&lt;/a&gt;). Calls with constant arguments can be evaluated at compile time. This may shift run time errors to compile time. Not to be confused with pure storage (see &lt;a href=&quot;pure-storage#Pure-Storage&quot;&gt;Pure Storage&lt;/a&gt;).</source>
          <target state="translated">如果该值是非 &lt;code&gt;nil&lt;/code&gt; ，则该命名函数被认为是纯函数（请参见函数是&lt;a href=&quot;what-is-a-function#What-Is-a-Function&quot;&gt;什么&lt;/a&gt;）。具有常量参数的调用可以在编译时评估。这可能会将运行时错误转换为编译时间。不要与纯存储混淆（请参阅&lt;a href=&quot;pure-storage#Pure-Storage&quot;&gt;Pure Storage&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="259729fa4406a0a6d0d70913ff740b5affcc6f9b" translate="yes" xml:space="preserve">
          <source>If the value is non-&lt;code&gt;nil&lt;/code&gt;, the named function is disabled as a command. See &lt;a href=&quot;disabling-commands#Disabling-Commands&quot;&gt;Disabling Commands&lt;/a&gt;.</source>
          <target state="translated">如果该值是非 &lt;code&gt;nil&lt;/code&gt; ，则禁用指定功能作为命令。请参阅&lt;a href=&quot;disabling-commands#Disabling-Commands&quot;&gt;禁用命令&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7cb441f9be2c8cb05d790d297512b2da9a0fdd51" translate="yes" xml:space="preserve">
          <source>If the value is non-&lt;code&gt;nil&lt;/code&gt;, the named function is safe to call in file-local evaluation forms. See &lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;File Local Variables&lt;/a&gt;.</source>
          <target state="translated">如果该值是非 &lt;code&gt;nil&lt;/code&gt; ，则可以在文件本地评估表中安全调用命名函数。请参阅&lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;文件局部变量&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7090499177c1d5aa1c6ffaf8fc256cc9286d33ab" translate="yes" xml:space="preserve">
          <source>If the value is non-&lt;code&gt;nil&lt;/code&gt;, the named function should not be deleted from the local value of a hook variable when changing major modes. See &lt;a href=&quot;setting-hooks#Setting-Hooks&quot;&gt;Setting Hooks&lt;/a&gt;.</source>
          <target state="translated">如果值是non- &lt;code&gt;nil&lt;/code&gt; ，则在更改主要模式时，不应从挂钩变量的本地值中删除命名函数。请参阅&amp;ldquo;&lt;a href=&quot;setting-hooks#Setting-Hooks&quot;&gt;设置挂钩&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7bcd63797aa231c2fc8170dd790d6c1274593c68" translate="yes" xml:space="preserve">
          <source>If the value is non-&lt;code&gt;nil&lt;/code&gt;, the named variable is a buffer-local variable whose value should not be reset when changing major modes. See &lt;a href=&quot;creating-buffer_002dlocal#Creating-Buffer_002dLocal&quot;&gt;Creating Buffer-Local&lt;/a&gt;.</source>
          <target state="translated">如果该值是非 &lt;code&gt;nil&lt;/code&gt; ，则命名变量是局部缓冲区变量，在更改主要模式时不应重置其值。请参阅&lt;a href=&quot;creating-buffer_002dlocal#Creating-Buffer_002dLocal&quot;&gt;创建Buffer-Local&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="23ce86d21a94c261ce33a6155e01509d55aa1608" translate="yes" xml:space="preserve">
          <source>If the value is non-&lt;code&gt;nil&lt;/code&gt;, the named variable is considered risky as a file-local variable. See &lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;File Local Variables&lt;/a&gt;.</source>
          <target state="translated">如果该值为 &lt;code&gt;nil&lt;/code&gt; ，则将命名变量作为文件本地变量视为有风险。请参阅&lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;文件局部变量&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5e9f0af4d30295bb81b9dc7f9a19baa56bc6dd78" translate="yes" xml:space="preserve">
          <source>If the value is non-&lt;code&gt;nil&lt;/code&gt;, then comments are treated as whitespace by the functions in this section and by &lt;code&gt;forward-sexp&lt;/code&gt;, &lt;code&gt;scan-lists&lt;/code&gt; and &lt;code&gt;scan-sexps&lt;/code&gt;.</source>
          <target state="translated">如果该值不为 &lt;code&gt;nil&lt;/code&gt; ，则本节中的函数以及 &lt;code&gt;forward-sexp&lt;/code&gt; ， &lt;code&gt;scan-lists&lt;/code&gt; 和 &lt;code&gt;scan-sexps&lt;/code&gt; 将注释视为空格。</target>
        </trans-unit>
        <trans-unit id="9afa3015bea2a1daaa715c6ae2ba74ee7419f635" translate="yes" xml:space="preserve">
          <source>If the value is non-&lt;code&gt;nil&lt;/code&gt;, this signals that the selected window must not be used for displaying the buffer. All action functions that (re-)use an existing window should respect this entry.</source>
          <target state="translated">如果该值不为 &lt;code&gt;nil&lt;/code&gt; ，则表示不能使用所选窗口显示缓冲区。（重新）使用现有窗口的所有动作功能都应遵守此条目。</target>
        </trans-unit>
        <trans-unit id="ee5cc1ed2e593d6b233408babcfcb8e3035d9a94" translate="yes" xml:space="preserve">
          <source>If the value is zero or &lt;code&gt;nil&lt;/code&gt;, then auto-saving is not done as a result of idleness, only after a certain number of input events as specified by &lt;code&gt;auto-save-interval&lt;/code&gt;.</source>
          <target state="translated">如果该值为0或 &lt;code&gt;nil&lt;/code&gt; ，那么仅由于一定数量的输入事件（由 &lt;code&gt;auto-save-interval&lt;/code&gt; 指定）之后，由于空闲而不会进行自动保存。</target>
        </trans-unit>
        <trans-unit id="76f5d493cd82fcfb629f119ac8dbd7a3b97bad0c" translate="yes" xml:space="preserve">
          <source>If the value is zero, then command input is not echoed.</source>
          <target state="translated">如果数值为零,那么命令输入就不会被呼应。</target>
        </trans-unit>
        <trans-unit id="060f0c2de95a83bc0ccb45f9abd9bb5bd7667b58" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;selective-display&lt;/code&gt; is &lt;code&gt;t&lt;/code&gt;, then the character control-m marks the start of hidden text; the control-m, and the rest of the line following it, are not displayed. This is explicit selective display.</source>
          <target state="translated">如果 &lt;code&gt;selective-display&lt;/code&gt; 的值为 &lt;code&gt;t&lt;/code&gt; ，则字符control -m标记隐藏文本的开始；控件-m及其后面的其余行均不显示。这是显式的选择性显示。</target>
        </trans-unit>
        <trans-unit id="555139376ac09bc81e6c182a9608275dd0abd710" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;selective-display&lt;/code&gt; is a positive integer, then lines that start with more than that many columns of indentation are not displayed.</source>
          <target state="translated">如果 &lt;code&gt;selective-display&lt;/code&gt; 的值是一个正整数，则不显示以缩进列数目多的行开头。</target>
        </trans-unit>
        <trans-unit id="68582a05aa95013824d3ad372c233549e62c49f2" translate="yes" xml:space="preserve">
          <source>If the value of &lt;var&gt;ascent&lt;/var&gt; is a non-negative number no greater than 100, it specifies that &lt;var&gt;ascent&lt;/var&gt; percent of the height of the space should be considered as the ascent of the space&amp;mdash;that is, the part above the baseline. The ascent may also be specified in pixel units with a &lt;em&gt;pixel ascent&lt;/em&gt; specification (see &lt;a href=&quot;pixel-specification#Pixel-Specification&quot;&gt;Pixel Specification&lt;/a&gt;).</source>
          <target state="translated">如果 &lt;var&gt;ascent&lt;/var&gt; 的值是不大于100的非负数，则它指定应将空间高度的 &lt;var&gt;ascent&lt;/var&gt; 百分比视为空间的上升，即基线上方的部分。还可以使用&lt;em&gt;像素上升&lt;/em&gt;规范（请参见&lt;a href=&quot;pixel-specification#Pixel-Specification&quot;&gt;Pixel Specification&lt;/a&gt;）以像素为单位指定&lt;em&gt;上升&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="c67a95af34a0a2fbb8831a9466cb5e82ffc37289" translate="yes" xml:space="preserve">
          <source>If the value of &lt;var&gt;condition&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the clause fails, so the &lt;code&gt;cond&lt;/code&gt; moves on to the following clause, trying its &lt;var&gt;condition&lt;/var&gt;.</source>
          <target state="translated">如果 &lt;var&gt;condition&lt;/var&gt; 的值为 &lt;code&gt;nil&lt;/code&gt; ，则该子句失败，因此 &lt;code&gt;cond&lt;/code&gt; 转到下一个子句，尝试其 &lt;var&gt;condition&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="b26492df425382cda0433c05f8eee45418127a7d" translate="yes" xml:space="preserve">
          <source>If the value of the &lt;code&gt;disabled&lt;/code&gt; property is a string, the message saying the command is disabled includes that string. For example:</source>
          <target state="translated">如果 &lt;code&gt;disabled&lt;/code&gt; 属性的值为字符串，则表示命令已禁用的消息包括该字符串。例如：</target>
        </trans-unit>
        <trans-unit id="566ca9c0dbabe27b2c6fa5789311bef1cbda3a5f" translate="yes" xml:space="preserve">
          <source>If the value of the &lt;code&gt;help-echo&lt;/code&gt; property is a function, that function is called with three arguments, &lt;var&gt;window&lt;/var&gt;, &lt;var&gt;object&lt;/var&gt; and &lt;var&gt;pos&lt;/var&gt; and should return a help string or &lt;code&gt;nil&lt;/code&gt; for none. The first argument, &lt;var&gt;window&lt;/var&gt; is the window in which the help was found. The second, &lt;var&gt;object&lt;/var&gt;, is the buffer, overlay or string which had the &lt;code&gt;help-echo&lt;/code&gt; property. The &lt;var&gt;pos&lt;/var&gt; argument is as follows:</source>
          <target state="translated">如果 &lt;code&gt;help-echo&lt;/code&gt; 属性的值是一个函数，则将使用三个参数 &lt;var&gt;window&lt;/var&gt; ， &lt;var&gt;object&lt;/var&gt; 和 &lt;var&gt;pos&lt;/var&gt; 调用该函数，并且该函数应返回一个帮助字符串或 &lt;code&gt;nil&lt;/code&gt; （无）。第一个参数 &lt;var&gt;window&lt;/var&gt; 是在其中找到帮助的窗口。第二个 &lt;var&gt;object&lt;/var&gt; 是具有 &lt;code&gt;help-echo&lt;/code&gt; 属性的缓冲区，覆盖或字符串。该 &lt;var&gt;pos&lt;/var&gt; 参数如下：</target>
        </trans-unit>
        <trans-unit id="272c984932838f6844b94c52070e171efba296f8" translate="yes" xml:space="preserve">
          <source>If the value of the &lt;code&gt;help-echo&lt;/code&gt; property is neither a function nor a string, it is evaluated to obtain a help string.</source>
          <target state="translated">如果 &lt;code&gt;help-echo&lt;/code&gt; 属性的值既不是函数也不是字符串，则将其求值以获得帮助字符串。</target>
        </trans-unit>
        <trans-unit id="b8c377b2a9a4ca7febcecccc29dc18024a3f802e" translate="yes" xml:space="preserve">
          <source>If the value of the variable is &lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;save-buffer&lt;/code&gt; doesn&amp;rsquo;t add newlines at all. &lt;code&gt;nil&lt;/code&gt; is the default value, but a few major modes set it to &lt;code&gt;t&lt;/code&gt; in particular buffers.</source>
          <target state="translated">如果变量的值为 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;save-buffer&lt;/code&gt; 根本不会添加换行符。 &lt;code&gt;nil&lt;/code&gt; 是默认值，但是一些主要模式在特定缓冲区中将其设置为 &lt;code&gt;t&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0ac5493d5a3cecee27b7d297a2e462236561533c" translate="yes" xml:space="preserve">
          <source>If the value of this buffer-local variable is non-&lt;code&gt;nil&lt;/code&gt; (the default), Emacs performs bidirectional reordering for display. The reordering affects buffer text, as well as display strings and overlay strings from text and overlay properties in the buffer (see &lt;a href=&quot;overlay-properties#Overlay-Properties&quot;&gt;Overlay Properties&lt;/a&gt;, and see &lt;a href=&quot;display-property#Display-Property&quot;&gt;Display Property&lt;/a&gt;). If the value is &lt;code&gt;nil&lt;/code&gt;, Emacs does not perform bidirectional reordering in the buffer.</source>
          <target state="translated">如果该缓冲局部变量的值是不 &lt;code&gt;nil&lt;/code&gt; （缺省值），那么Emacs执行用于显示的双向重排。重新排序会影响缓冲区文本以及缓冲区中文本和覆盖属性的显示字符串和覆盖字符串（请参见&lt;a href=&quot;overlay-properties#Overlay-Properties&quot;&gt;Overlay Properties&lt;/a&gt;，和&lt;a href=&quot;display-property#Display-Property&quot;&gt;Display属性&lt;/a&gt;）。如果值为 &lt;code&gt;nil&lt;/code&gt; ，则Emacs不会在缓冲区中执行双向重新排序。</target>
        </trans-unit>
        <trans-unit id="19cfe301d5b1c21b59d7667f67b9846e5cb99b66" translate="yes" xml:space="preserve">
          <source>If the value of this buffer-local variable is the symbol &lt;code&gt;right-to-left&lt;/code&gt; or &lt;code&gt;left-to-right&lt;/code&gt;, all paragraphs in the buffer are assumed to have that specified direction. Any other value is equivalent to &lt;code&gt;nil&lt;/code&gt; (the default), which means to determine the base direction of each paragraph from its contents.</source>
          <target state="translated">如果此缓冲区局部变量的值是 &lt;code&gt;right-to-left&lt;/code&gt; 或 &lt;code&gt;left-to-right&lt;/code&gt; 的符号，则假定缓冲区中的所有段落都具有指定的方向。其他任何值都等于 &lt;code&gt;nil&lt;/code&gt; （默认值），这意味着根据其内容确定每个段落的基本方向。</target>
        </trans-unit>
        <trans-unit id="812fc63336994f949e3d3139adf98158b4eeeb2b" translate="yes" xml:space="preserve">
          <source>If the value of this option is non-&lt;code&gt;nil&lt;/code&gt;, Emacs resizes windows in units of pixels. This currently affects functions like &lt;code&gt;split-window&lt;/code&gt; (see &lt;a href=&quot;splitting-windows#Splitting-Windows&quot;&gt;Splitting Windows&lt;/a&gt;), &lt;code&gt;maximize-window&lt;/code&gt;, &lt;code&gt;minimize-window&lt;/code&gt;, &lt;code&gt;fit-window-to-buffer&lt;/code&gt;, &lt;code&gt;fit-frame-to-buffer&lt;/code&gt; and &lt;code&gt;shrink-window-if-larger-than-buffer&lt;/code&gt; (all listed below).</source>
          <target state="translated">如果此选项的值为 &lt;code&gt;nil&lt;/code&gt; ，则Emacs将以像素为单位调整窗口大小。当前，这会影响诸如 &lt;code&gt;split-window&lt;/code&gt; （请参见&lt;a href=&quot;splitting-windows#Splitting-Windows&quot;&gt;分割窗口&lt;/a&gt;）， &lt;code&gt;maximize-window&lt;/code&gt; ， &lt;code&gt;minimize-window&lt;/code&gt; ， &lt;code&gt;fit-window-to-buffer&lt;/code&gt; ， &lt;code&gt;fit-frame-to-buffer&lt;/code&gt; 以及 &lt;code&gt;shrink-window-if-larger-than-buffer&lt;/code&gt; （全部在下面列出）。</target>
        </trans-unit>
        <trans-unit id="5cf1bf75cb42bb084c10a3366213ff8870a2d138" translate="yes" xml:space="preserve">
          <source>If the value of this parameter is &lt;code&gt;nil&lt;/code&gt;, the frame&amp;rsquo;s position and size remain unaltered when the parent frame is resized, so the position and size ratios may change. If the value of this parameter is &lt;code&gt;t&lt;/code&gt;, Emacs will try to preserve the frame&amp;rsquo;s size and position ratios, hence the frame&amp;rsquo;s size and position relative to its parent frame may change.</source>
          <target state="translated">如果此参数的值为 &lt;code&gt;nil&lt;/code&gt; ，则在调整父框架的大小时，框架的位置和大小将保持不变，因此位置和大小之比可能会发生变化。如果此参数的值为 &lt;code&gt;t&lt;/code&gt; ，则Emacs将尝试保留框架的大小和位置比率，因此框架相对于其父框架的大小和位置可能会改变。</target>
        </trans-unit>
        <trans-unit id="0510e819ccf0c675338a805bc0b404c4a3b6f7a9" translate="yes" xml:space="preserve">
          <source>If the value of this variable is &lt;code&gt;nil&lt;/code&gt;, standard functions that read from the minibuffer don&amp;rsquo;t add new elements to the history list. This lets Lisp programs explicitly manage input history by using &lt;code&gt;add-to-history&lt;/code&gt;. The default value is &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">如果此变量的值为 &lt;code&gt;nil&lt;/code&gt; ，则从小型缓冲区读取的标准函数不会在历史记录列表中添加新元素。这使Lisp程序可以使用 &lt;code&gt;add-to-history&lt;/code&gt; 显式管理输入历史。默认值为 &lt;code&gt;t&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9f0defdc43585356036419fc3a095ddbc8793b32" translate="yes" xml:space="preserve">
          <source>If the value of this variable is &lt;code&gt;t&lt;/code&gt;, that means when adding a new history element, all previous identical elements are deleted.</source>
          <target state="translated">如果此变量的值为 &lt;code&gt;t&lt;/code&gt; ，则意味着在添加新的历史记录元素时，将删除所有以前相同的元素。</target>
        </trans-unit>
        <trans-unit id="00e756b626fcfa2be38e0c2c66f51589b80680ba" translate="yes" xml:space="preserve">
          <source>If the value of this variable is non-&lt;code&gt;nil&lt;/code&gt; (the default), &lt;code&gt;split-window-below&lt;/code&gt; behaves as described above.</source>
          <target state="translated">如果此变量的值为non- &lt;code&gt;nil&lt;/code&gt; （默认值），则 &lt;code&gt;split-window-below&lt;/code&gt; 的行为如上所述。</target>
        </trans-unit>
        <trans-unit id="a59f8293a2949cc6a25118ff9b69aa66a58661cb" translate="yes" xml:space="preserve">
          <source>If the value of this variable is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;display-buffer&lt;/code&gt; is allowed to split an existing window to make a new window for displaying in. This is the default.</source>
          <target state="translated">如果此变量的值为non &lt;code&gt;display-buffer&lt;/code&gt; &lt;code&gt;nil&lt;/code&gt; ，则允许display-buffer拆分现有窗口以创建一个新窗口以供显示。这是默认设置。</target>
        </trans-unit>
        <trans-unit id="a9a51ed077c6bca22acf5bd2c879943a99f0bb0f" translate="yes" xml:space="preserve">
          <source>If the value of this variable is non-&lt;code&gt;nil&lt;/code&gt;, Emacs loads a terminal-specific initialization file as follows:</source>
          <target state="translated">如果此变量的值为non- &lt;code&gt;nil&lt;/code&gt; ，则Emacs如下加载终端特定的初始化文件：</target>
        </trans-unit>
        <trans-unit id="9c4d11e131a1d859bb2af4f2e3fdec41460a90c4" translate="yes" xml:space="preserve">
          <source>If the value of this variable is non-&lt;code&gt;nil&lt;/code&gt;, Font Lock does not do syntactic fontification, only search-based fontification based on &lt;code&gt;font-lock-keywords&lt;/code&gt;. It is normally set by Font Lock mode based on the &lt;var&gt;keywords-only&lt;/var&gt; element in &lt;code&gt;font-lock-defaults&lt;/code&gt;. If the value is &lt;code&gt;nil&lt;/code&gt;, Font Lock will call &lt;code&gt;jit-lock-register&lt;/code&gt; (see &lt;a href=&quot;other-font-lock-variables#Other-Font-Lock-Variables&quot;&gt;Other Font Lock Variables&lt;/a&gt;) to set up for automatic refontification of buffer text following a modified line to reflect the new syntactic context due to the change.</source>
          <target state="translated">如果此变量的值为non- &lt;code&gt;nil&lt;/code&gt; ，则Font Lock不会进行语法字体化，而只会执行基于 &lt;code&gt;font-lock-keywords&lt;/code&gt; 的基于搜索的字体化。通常由字体锁定模式根据 &lt;code&gt;font-lock-defaults&lt;/code&gt; 中 &lt;var&gt;keywords-only&lt;/var&gt; 元素设置。如果值为 &lt;code&gt;nil&lt;/code&gt; ，则Font Lock将调用 &lt;code&gt;jit-lock-register&lt;/code&gt; （请参阅&lt;a href=&quot;other-font-lock-variables#Other-Font-Lock-Variables&quot;&gt;其他Font Lock变量&lt;/a&gt;）来设置，以便在修改后的行之后自动重命名缓冲区文本，以反映更改后的新语法上下文。</target>
        </trans-unit>
        <trans-unit id="2960c7a8febeec7d927a7af133e174629bbfb833" translate="yes" xml:space="preserve">
          <source>If the value of this variable is non-&lt;code&gt;nil&lt;/code&gt;, case is not considered significant in completion. Within &lt;code&gt;read-file-name&lt;/code&gt;, this variable is overridden by &lt;code&gt;read-file-name-completion-ignore-case&lt;/code&gt; (see &lt;a href=&quot;reading-file-names#Reading-File-Names&quot;&gt;Reading File Names&lt;/a&gt;); within &lt;code&gt;read-buffer&lt;/code&gt;, it is overridden by &lt;code&gt;read-buffer-completion-ignore-case&lt;/code&gt; (see &lt;a href=&quot;high_002dlevel-completion#High_002dLevel-Completion&quot;&gt;High-Level Completion&lt;/a&gt;).</source>
          <target state="translated">如果此变量的值为 &lt;code&gt;nil&lt;/code&gt; ，则在完成时不认为大小写重要。在 &lt;code&gt;read-file-name&lt;/code&gt; 内，该变量被 &lt;code&gt;read-file-name-completion-ignore-case&lt;/code&gt; 覆盖（请参见&lt;a href=&quot;reading-file-names#Reading-File-Names&quot;&gt;阅读文件名&lt;/a&gt;）。在 &lt;code&gt;read-buffer&lt;/code&gt; 中，它被 &lt;code&gt;read-buffer-completion-ignore-case&lt;/code&gt; 覆盖（请参阅&amp;ldquo;&lt;a href=&quot;high_002dlevel-completion#High_002dLevel-Completion&quot;&gt;高级完成&amp;rdquo;&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="d6c67d32ca611252d8fc5f1b5880098b768694a6" translate="yes" xml:space="preserve">
          <source>If the value of this variable is non-&lt;code&gt;nil&lt;/code&gt;, it should be a window object. When the function &lt;code&gt;scroll-other-window&lt;/code&gt; is called in the minibuffer, it scrolls this window (see &lt;a href=&quot;textual-scrolling#Textual-Scrolling&quot;&gt;Textual Scrolling&lt;/a&gt;).</source>
          <target state="translated">如果此变量的值为non- &lt;code&gt;nil&lt;/code&gt; ，则它应该是一个窗口对象。在迷你缓冲区中调用函数 &lt;code&gt;scroll-other-window&lt;/code&gt; 时，它将滚动该窗口（请参见&lt;a href=&quot;textual-scrolling#Textual-Scrolling&quot;&gt;文本滚动&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="9e95218ab547b22918b93cabf2b6d43c2fe537ca" translate="yes" xml:space="preserve">
          <source>If the value of this variable is non-&lt;code&gt;nil&lt;/code&gt;, that means &lt;code&gt;display-buffer&lt;/code&gt; may display buffers by making new frames. The default is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果此变量的值为non- &lt;code&gt;nil&lt;/code&gt; ，则表示 &lt;code&gt;display-buffer&lt;/code&gt; 可以通过制作新帧来显示缓冲区。默认值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="360c01786da313e8914310faac623782020e21b4" translate="yes" xml:space="preserve">
          <source>If the value specifies a function, that function is called with one argument&amp;mdash;the chosen window. The function is supposed to adjust the height of the window; its return value is ignored. Suitable functions are &lt;code&gt;shrink-window-if-larger-than-buffer&lt;/code&gt; and &lt;code&gt;fit-window-to-buffer&lt;/code&gt;, see &lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;Resizing Windows&lt;/a&gt;.</source>
          <target state="translated">如果该值指定一个函数，则使用一个参数（所选窗口）调用该函数。该功能应该调整窗口的高度；其返回值将被忽略。合适的功能是 &lt;code&gt;shrink-window-if-larger-than-buffer&lt;/code&gt; 和 &lt;code&gt;fit-window-to-buffer&lt;/code&gt; （请参阅&lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;调整窗口大小）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="57707f18f785ecc801b8f5afbc05fff4dced7d86" translate="yes" xml:space="preserve">
          <source>If the value specifies a function, that function is called with one argument&amp;mdash;the chosen window. The function is supposed to adjust the width of the window; its return value is ignored.</source>
          <target state="translated">如果该值指定一个函数，则使用一个参数（所选窗口）调用该函数。该功能应该调整窗口的宽度；其返回值将被忽略。</target>
        </trans-unit>
        <trans-unit id="a79cda4b6734f4c8cd077b1e9f5396ef14b06321" translate="yes" xml:space="preserve">
          <source>If the variable &lt;code&gt;auto-resize-tool-bars&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, Emacs wraps the internal tool bar when its width becomes too large for its frame. If and when Emacs (un-)wraps the internal tool bar, it by default keeps the outer height of the frame unchanged, so the native height of the frame (see below) will change instead. Emacs built with GTK+, on the other hand, never wraps the tool bar but may automatically increase the outer width of a frame in order to accommodate an overlong tool bar.</source>
          <target state="translated">如果变量 &lt;code&gt;auto-resize-tool-bars&lt;/code&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，那么当Emacs的宽度对于其框架而言过大时，Emacs会包装内部工具栏。如果并且当Emacs（取消）包装内部工具栏时，默认情况下它将保持框架的外部高度不变，因此框架的原始高度（请参见下文）将发生变化。另一方面，使用GTK +构建的Emacs从不包裹工具栏，但可能会自动增加框架的外部宽度以容纳超长的工具栏。</target>
        </trans-unit>
        <trans-unit id="c8070019cd13c6f9ef8f3dd737702a0064c04727" translate="yes" xml:space="preserve">
          <source>If the variable &lt;code&gt;completion-ignore-case&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, completion ignores case when comparing the input against the possible matches. See &lt;a href=&quot;basic-completion#Basic-Completion&quot;&gt;Basic Completion&lt;/a&gt;. In this mode of operation, &lt;var&gt;predicate&lt;/var&gt; must also ignore case, or you will get surprising results.</source>
          <target state="translated">如果变量 &lt;code&gt;completion-ignore-case&lt;/code&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则在将输入与可能的匹配进行比较时，complete忽略大小写。请参阅&lt;a href=&quot;basic-completion#Basic-Completion&quot;&gt;基本完成&lt;/a&gt;。在这种操作模式下， &lt;var&gt;predicate&lt;/var&gt; 也必须忽略大小写，否则您将得到令人惊讶的结果。</target>
        </trans-unit>
        <trans-unit id="42c1194e671d47a84f55790bd93d0d192ce44404" translate="yes" xml:space="preserve">
          <source>If the variable &lt;code&gt;minibuffer-allow-text-properties&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then the string that is returned includes whatever text properties were present in the minibuffer. Otherwise all the text properties are stripped when the value is returned.</source>
          <target state="translated">如果变量 &lt;code&gt;minibuffer-allow-text-properties&lt;/code&gt; 为non - &lt;code&gt;nil&lt;/code&gt; ，则返回的字符串包括minibuffer中存在的任何文本属性。否则，返回值时，所有文本属性都将被剥离。</target>
        </trans-unit>
        <trans-unit id="0fd52c18b8e8730c692db14bdff9e0f641a8adfc" translate="yes" xml:space="preserve">
          <source>If the variable &lt;code&gt;select-safe-coding-system-accept-default-p&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be a function taking a single argument. It is used in place of &lt;var&gt;accept-default-p&lt;/var&gt;, overriding any value supplied for this argument.</source>
          <target state="translated">如果变量 &lt;code&gt;select-safe-coding-system-accept-default-p&lt;/code&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则它应该是一个带有单个参数的函数。它用于代替 &lt;var&gt;accept-default-p&lt;/var&gt; ，它会覆盖为此参数提供的任何值。</target>
        </trans-unit>
        <trans-unit id="ba30a6d68e9424f264d433cf2bc9e1d8da9ccbb1" translate="yes" xml:space="preserve">
          <source>If the variable is lexically bound, the value reported by &lt;code&gt;symbol-value&lt;/code&gt; is not necessarily the same as the variable&amp;rsquo;s lexical value, which is determined by the lexical environment rather than the symbol&amp;rsquo;s value cell. See &lt;a href=&quot;variable-scoping#Variable-Scoping&quot;&gt;Variable Scoping&lt;/a&gt;.</source>
          <target state="translated">如果变量是按词法绑定的，则 &lt;code&gt;symbol-value&lt;/code&gt; 值报告的值不一定与变量的词法值相同，后者是由词法环境而不是符号的值单元格确定的。请参阅&lt;a href=&quot;variable-scoping#Variable-Scoping&quot;&gt;可变作用域&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2cc97422846b390d66f71d3f440cd0096fde1d63" translate="yes" xml:space="preserve">
          <source>If the variable is terminal-local (see &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;), this function signals an error. Such variables cannot have buffer-local bindings as well.</source>
          <target state="translated">如果变量是本地终端变量（请参见&lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;），则此函数会发出错误信号。这样的变量也不能具有局部缓冲区绑定。</target>
        </trans-unit>
        <trans-unit id="5499f5ed3b50f30f4688e5c4db6fba581e67d1a2" translate="yes" xml:space="preserve">
          <source>If the variable&amp;rsquo;s name ends in &amp;lsquo;</source>
          <target state="translated">如果变量名以&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="e9f61c12e5a938e87c2c68dc7d8b0cb42c3add87" translate="yes" xml:space="preserve">
          <source>If the variable&amp;rsquo;s value is &lt;code&gt;nil&lt;/code&gt; then there is no function to call.</source>
          <target state="translated">如果变量的值为 &lt;code&gt;nil&lt;/code&gt; ，则没有函数可调用。</target>
        </trans-unit>
        <trans-unit id="da77a96697264f1d46e2cb1c7d972dbe27f731bf" translate="yes" xml:space="preserve">
          <source>If the vector does not include the port number, &lt;var&gt;p&lt;/var&gt;, or if &lt;var&gt;omit-port&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the result does not include the &lt;code&gt;:&lt;var&gt;p&lt;/var&gt;&lt;/code&gt; suffix.</source>
          <target state="translated">如果向量不包括端口号 &lt;var&gt;p&lt;/var&gt; ，或者 &lt;var&gt;omit-port&lt;/var&gt; 不为 &lt;code&gt;nil&lt;/code&gt; ，则结果不包括 &lt;code&gt;:&lt;var&gt;p&lt;/var&gt;&lt;/code&gt; 后缀。</target>
        </trans-unit>
        <trans-unit id="025248ccceae386bc67ad5cd8e7c95dde75410bd" translate="yes" xml:space="preserve">
          <source>If the width is too small, &lt;code&gt;format&lt;/code&gt; does not truncate the object&amp;rsquo;s printed representation. Thus, you can use a width to specify a minimum spacing between columns with no risk of losing information. In the following two examples, &amp;lsquo;</source>
          <target state="translated">如果宽度太小， &lt;code&gt;format&lt;/code&gt; 不会截断对象的打印表示形式。因此，您可以使用宽度指定列之间的最小间距，而不会丢失信息。在以下两个示例中，&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="e88f1c383e1c6de576660f951c4c14f3986be3ba" translate="yes" xml:space="preserve">
          <source>If the window contains a row taller than the height of the window (for example in the presence of a large image), the scroll functions will adjust the window&amp;rsquo;s vertical scroll position to scroll the partially visible row. Lisp callers can disable this feature by binding the variable &lt;code&gt;auto-window-vscroll&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt; (see &lt;a href=&quot;vertical-scrolling#Vertical-Scrolling&quot;&gt;Vertical Scrolling&lt;/a&gt;).</source>
          <target state="translated">如果窗口包含的行比窗口的高度高（例如，在有大图像的情况下），则滚动功能将调整窗口的垂直滚动位置以滚动部分可见的行。Lisp调用者可以通过将变量 &lt;code&gt;auto-window-vscroll&lt;/code&gt; 绑定到 &lt;code&gt;nil&lt;/code&gt; 来禁用此功能（请参见&amp;ldquo;&lt;a href=&quot;vertical-scrolling#Vertical-Scrolling&quot;&gt;垂直滚动&amp;rdquo;&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="58da0ad987577d2d969ffa549fd2f1c2eb3eab39" translate="yes" xml:space="preserve">
          <source>If there are backups numbered 1, 2, 3, 5, and 7, and both of these variables have the value 2, then the backups numbered 1 and 2 are kept as old versions and those numbered 5 and 7 are kept as new versions; backup version 3 is excess. The function &lt;code&gt;find-backup-file-name&lt;/code&gt; (see &lt;a href=&quot;backup-names#Backup-Names&quot;&gt;Backup Names&lt;/a&gt;) is responsible for determining which backup versions to delete, but does not delete them itself.</source>
          <target state="translated">如果有编号为1、2、3、5和7的备份，并且两个变量的值均为2，则编号为1和2的备份将保留为旧版本，编号为5和7的备份将保留为新版本；备份版本3过多。函数 &lt;code&gt;find-backup-file-name&lt;/code&gt; （请参阅&lt;a href=&quot;backup-names#Backup-Names&quot;&gt;备份名称&lt;/a&gt;）负责确定要删除的备份版本，但不会自行删除它们。</target>
        </trans-unit>
        <trans-unit id="e6b4bfda96fbc609978591cef5622b754174446a" translate="yes" xml:space="preserve">
          <source>If there are two candidate windows of the same size, this function prefers the one that comes first in the cyclic ordering of windows, starting from the selected window.</source>
          <target state="translated">如果有两个相同大小的候选窗口,该函数从所选窗口开始,在窗口的循环排序中优先选择先到的那个。</target>
        </trans-unit>
        <trans-unit id="7b7eb1941e0354d1c6f4238cc39982b2e0eea94d" translate="yes" xml:space="preserve">
          <source>If there is a dedicated window showing the buffer, and that window is the only one on its frame, this function also deletes that frame if it is not the only frame on the terminal.</source>
          <target state="translated">如果有一个专门的窗口显示缓冲区,而该窗口是其帧上唯一的一个窗口,如果该窗口不是终端上唯一的帧,那么这个函数也会删除该帧。</target>
        </trans-unit>
        <trans-unit id="2ddb1fcae7a9d577f34c9ea1b850f472c8e9a139" translate="yes" xml:space="preserve">
          <source>If there is a fill prefix, &lt;code&gt;indent-region&lt;/code&gt; indents each line by making it start with the fill prefix.</source>
          <target state="translated">如果存在填充前缀，则 &lt;code&gt;indent-region&lt;/code&gt; 通过使每行以填充前缀开头来缩进。</target>
        </trans-unit>
        <trans-unit id="8e9e69163b0fbf6e36bd75fa2ef274e9f29d014e" translate="yes" xml:space="preserve">
          <source>If there is a fill prefix, and the second of the lines being joined starts with the prefix, then &lt;code&gt;delete-indentation&lt;/code&gt; deletes the fill prefix before joining the lines. See &lt;a href=&quot;margins#Margins&quot;&gt;Margins&lt;/a&gt;.</source>
          <target state="translated">如果存在填充前缀，并且要连接的第二行以该前缀开头，则 &lt;code&gt;delete-indentation&lt;/code&gt; 会在连接这些行之前删除填充前缀。参见&lt;a href=&quot;margins#Margins&quot;&gt;边距&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="00c7be75182fe6893a2fc04a1937b3015736bb74" translate="yes" xml:space="preserve">
          <source>If there is a match, the value of &lt;code&gt;pcase&lt;/code&gt; is the value of the last of &lt;var&gt;body-forms&lt;/var&gt; in the successful clause. Otherwise, &lt;code&gt;pcase&lt;/code&gt; evaluates to &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果存在匹配项，则 &lt;code&gt;pcase&lt;/code&gt; 的值是成功子句中最后一个 &lt;var&gt;body-forms&lt;/var&gt; 的值。否则， &lt;code&gt;pcase&lt;/code&gt; 的计算结果为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="239149c24e786c9e2489616d4cd84a2398b91519" translate="yes" xml:space="preserve">
          <source>If there is an image at the click location, this is the image object as returned by &lt;code&gt;find-image&lt;/code&gt; (see &lt;a href=&quot;defining-images#Defining-Images&quot;&gt;Defining Images&lt;/a&gt;); otherwise this is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果单击位置处有图像，则这是 &lt;code&gt;find-image&lt;/code&gt; 返回的图像对象（请参见&lt;a href=&quot;defining-images#Defining-Images&quot;&gt;定义图像&lt;/a&gt;）；否则 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eea73d996587a876ca65a3ae23b074ee83114aeb" translate="yes" xml:space="preserve">
          <source>If there is more than one conversion, &lt;code&gt;write-region&lt;/code&gt; merges their annotations destructively into one sorted list. Later, when the text from the buffer is actually written to the file, it intermixes the specified annotations at the corresponding positions. All this takes place without modifying the buffer.</source>
          <target state="translated">如果转换不止一次，则 &lt;code&gt;write-region&lt;/code&gt; 破坏性地将其注释合并到一个排序的列表中。后来，当缓冲区中的文本实际写入文件时，它将在指定位置混合指定的注释。所有这些操作都无需修改缓冲区。</target>
        </trans-unit>
        <trans-unit id="bc71318b153defd40d75c8fb2df1691e14b3d63d" translate="yes" xml:space="preserve">
          <source>If there is no &lt;var&gt;prop&lt;/var&gt; property strictly speaking, but the character has a property category that is a symbol, then &lt;code&gt;get-text-property&lt;/code&gt; returns the &lt;var&gt;prop&lt;/var&gt; property of that symbol.</source>
          <target state="translated">如果严格说来没有 &lt;var&gt;prop&lt;/var&gt; 属性，但是字符具有作为符号的属性类别，则 &lt;code&gt;get-text-property&lt;/code&gt; 返回该符号的 &lt;var&gt;prop&lt;/var&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="62df673db401de9102912271f958fe629ab77b49" translate="yes" xml:space="preserve">
          <source>If there is no applicable handler for the error, it terminates the current command and returns control to the editor command loop. (The command loop has an implicit handler for all kinds of errors.) The command loop&amp;rsquo;s handler uses the error symbol and associated data to print an error message. You can use the variable &lt;code&gt;command-error-function&lt;/code&gt; to control how this is done:</source>
          <target state="translated">如果没有适用于该错误的处理程序，它将终止当前命令并将控制权返回给编辑器命令循环。 （命令循环具有用于所有类型错误的隐式处理程序。）命令循环的处理程序使用错误符号和关联的数据来打印错误消息。您可以使用变量 &lt;code&gt;command-error-function&lt;/code&gt; 来控制操作方式：</target>
        </trans-unit>
        <trans-unit id="d13e9413b607a2a2de3ef7114c92fa2e573d925d" translate="yes" xml:space="preserve">
          <source>If there is no font that exactly matches all desired face attributes (&lt;code&gt;:width&lt;/code&gt;, &lt;code&gt;:height&lt;/code&gt;, &lt;code&gt;:weight&lt;/code&gt;, and &lt;code&gt;:slant&lt;/code&gt;), this variable specifies the order in which these attributes should be considered when selecting the closest matching font. The value should be a list containing those four attribute symbols, in order of decreasing importance. The default is &lt;code&gt;(:width :height :weight
:slant)&lt;/code&gt;.</source>
          <target state="translated">如果没有与所有所需的面部属性完全匹配的字体（ &lt;code&gt;:width&lt;/code&gt; ， &lt;code&gt;:height&lt;/code&gt; ， &lt;code&gt;:weight&lt;/code&gt; 和 &lt;code&gt;:slant&lt;/code&gt; ），则此变量指定在选择最接近的匹配字体时应考虑这些属性的顺序。该值应该是一个列表，其中包含这四个属性符号（以重要性递减的顺序）。默认值为 &lt;code&gt;(:width :height :weight :slant)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cd34e79fd11cb89ebb18daa849151e90f2652afa" translate="yes" xml:space="preserve">
          <source>If there is no line corresponding to the specified &lt;var&gt;line&lt;/var&gt;, &lt;code&gt;window-line-height&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;. Otherwise, it returns a list &lt;code&gt;(&lt;var&gt;height&lt;/var&gt; &lt;var&gt;vpos&lt;/var&gt; &lt;var&gt;ypos&lt;/var&gt; &lt;var&gt;offbot&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;height&lt;/var&gt; is the height in pixels of the visible part of the line, &lt;var&gt;vpos&lt;/var&gt; and &lt;var&gt;ypos&lt;/var&gt; are the vertical position in lines and pixels of the line relative to the top of the first text line, and &lt;var&gt;offbot&lt;/var&gt; is the number of off-window pixels at the bottom of the text line. If there are off-window pixels at the top of the (first) text line, &lt;var&gt;ypos&lt;/var&gt; is negative.</source>
          <target state="translated">如果没有与指定行相对应的 &lt;var&gt;line&lt;/var&gt; ，则 &lt;code&gt;window-line-height&lt;/code&gt; 返回 &lt;code&gt;nil&lt;/code&gt; 。否则，它返回一个列表 &lt;code&gt;(&lt;var&gt;height&lt;/var&gt; &lt;var&gt;vpos&lt;/var&gt; &lt;var&gt;ypos&lt;/var&gt; &lt;var&gt;offbot&lt;/var&gt;)&lt;/code&gt; ，其中 &lt;var&gt;height&lt;/var&gt; 是该行可见部分的高度（以像素为单位）， &lt;var&gt;vpos&lt;/var&gt; 和 &lt;var&gt;ypos&lt;/var&gt; 是该行的垂直位置以及该行相对于第一个文本顶部的像素行， &lt;var&gt;offbot&lt;/var&gt; 是文本行底部的窗口外像素数。如果在（第一行）文本行的顶部有窗口外像素，则 &lt;var&gt;ypos&lt;/var&gt; 为负。</target>
        </trans-unit>
        <trans-unit id="58d49d5547a126f307c0ac2b901ef857396f1b2b" translate="yes" xml:space="preserve">
          <source>If there is no recent invocation of &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; that can be undone, this function tries to show a buffer from the buffer list of the frame &lt;var&gt;window&lt;/var&gt; appears on (see &lt;a href=&quot;buffer-list#Buffer-List&quot;&gt;Buffer List&lt;/a&gt;).</source>
          <target state="translated">如果最近没有撤销撤消的 &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; 调用，此函数将尝试显示帧 &lt;var&gt;window&lt;/var&gt; 的缓冲区列表中出现的&lt;a href=&quot;buffer-list#Buffer-List&quot;&gt;缓冲区&lt;/a&gt;（请参见Buffer List）。</target>
        </trans-unit>
        <trans-unit id="9dd64eab7b6ffb8f7e5924983ab88700dd4b03cd" translate="yes" xml:space="preserve">
          <source>If there is no such window, this function tries to create a new window by splitting the selected one, and displays &lt;var&gt;buffer&lt;/var&gt; there. It will also try to adjust that window&amp;rsquo;s size provided &lt;var&gt;alist&lt;/var&gt; contains a suitable &lt;code&gt;window-height&lt;/code&gt; or &lt;code&gt;window-width&lt;/code&gt; entry, see above.</source>
          <target state="translated">如果没有这样的窗口，则此函数尝试通过拆分选定的窗口来创建一个新窗口，并在那里显示 &lt;var&gt;buffer&lt;/var&gt; 。它也将尝试以调整窗口的大小提供 &lt;var&gt;alist&lt;/var&gt; 包含合适的 &lt;code&gt;window-height&lt;/code&gt; 或 &lt;code&gt;window-width&lt;/code&gt; 入口，上面看到的。</target>
        </trans-unit>
        <trans-unit id="078fd7bfdb217b2ab89e33373df21b9f10571d5f" translate="yes" xml:space="preserve">
          <source>If there is no window at that position, the return value is &lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;frame&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected frame.</source>
          <target state="translated">如果在该位置没有窗口，则返回值为 &lt;code&gt;nil&lt;/code&gt; 。如果省略 &lt;var&gt;frame&lt;/var&gt; 或 &lt;code&gt;nil&lt;/code&gt; ，则默认为所选框架。</target>
        </trans-unit>
        <trans-unit id="5dcb701415ed2df9a0a0875bc17e2ee8bca7d7e1" translate="yes" xml:space="preserve">
          <source>If there is no window at the specified position, the return value is &lt;code&gt;nil&lt;/code&gt; . Otherwise, the return value is one of the following:</source>
          <target state="translated">如果在指定位置没有窗口，则返回值为 &lt;code&gt;nil&lt;/code&gt; 。否则，返回值为以下之一：</target>
        </trans-unit>
        <trans-unit id="93b073a7aa145aa9caa6dda66c1ae5ec8fc7be99" translate="yes" xml:space="preserve">
          <source>If there is no window system support, this function does nothing.</source>
          <target state="translated">如果没有窗口系统的支持,这个功能就没有任何作用。</target>
        </trans-unit>
        <trans-unit id="9913df0d9bdf18e69b5564a0b6970ac42b891192" translate="yes" xml:space="preserve">
          <source>If there was overflow in pure space (see &lt;a href=&quot;pure-storage#Pure-Storage&quot;&gt;Pure Storage&lt;/a&gt;), and Emacs was dumped using the (now obsolete) &lt;code&gt;unexec&lt;/code&gt; method (see &lt;a href=&quot;building-emacs#Building-Emacs&quot;&gt;Building Emacs&lt;/a&gt;), then &lt;code&gt;garbage-collect&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;, because a real garbage collection cannot be done in that case.</source>
          <target state="translated">如果纯空间中发生了溢出（请参阅&lt;a href=&quot;pure-storage#Pure-Storage&quot;&gt;Pure Storage&lt;/a&gt;），并且使用（现在已过时的） &lt;code&gt;unexec&lt;/code&gt; 方法（请参阅&lt;a href=&quot;building-emacs#Building-Emacs&quot;&gt;Building Emacs&lt;/a&gt;）转储了Emacs，则 &lt;code&gt;garbage-collect&lt;/code&gt; 返回 &lt;code&gt;nil&lt;/code&gt; ，因为在这种情况下无法进行真正的垃圾收集。</target>
        </trans-unit>
        <trans-unit id="2d00cfb9d4ff8180801f1e00b989d13809bdad99" translate="yes" xml:space="preserve">
          <source>If there was previously no binding for &lt;var&gt;key&lt;/var&gt; in &lt;var&gt;keymap&lt;/var&gt;, the new binding is added at the beginning of &lt;var&gt;keymap&lt;/var&gt;. The order of bindings in a keymap makes no difference for keyboard input, but it does matter for menu keymaps (see &lt;a href=&quot;menu-keymaps#Menu-Keymaps&quot;&gt;Menu Keymaps&lt;/a&gt;).</source>
          <target state="translated">如果先前在 &lt;var&gt;keymap&lt;/var&gt; 中没有 &lt;var&gt;key&lt;/var&gt; 绑定，则将新绑定添加到 &lt;var&gt;keymap&lt;/var&gt; 的开头。键盘映射中的绑定顺序对于键盘输入没有影响，但对于菜单键盘映射则很重要（请参阅&lt;a href=&quot;menu-keymaps#Menu-Keymaps&quot;&gt;菜单键盘映射&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="bc26661694c756b8d17373d3511cb3072fe325ce" translate="yes" xml:space="preserve">
          <source>If these measures are not sufficient to prevent malfunction, a library can define an explicit unloader named &lt;code&gt;&lt;var&gt;feature&lt;/var&gt;-unload-function&lt;/code&gt;. If that symbol is defined as a function, &lt;code&gt;unload-feature&lt;/code&gt; calls it with no arguments before doing anything else. It can do whatever is appropriate to unload the library. If it returns &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;unload-feature&lt;/code&gt; proceeds to take the normal unload actions. Otherwise it considers the job to be done.</source>
          <target state="translated">如果这些措施不足以防止发生故障，则库可以定义一个名为 &lt;code&gt;&lt;var&gt;feature&lt;/var&gt;-unload-function&lt;/code&gt; 的显式卸载程序。如果该符号被定义为函数，则在执行其他任何操作之前， &lt;code&gt;unload-feature&lt;/code&gt; 将不带任何参数地对其进行调用。它可以做适当的卸载库的工作。如果返回 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;unload-feature&lt;/code&gt; 继续执行正常的unload操作。否则，它认为该工作已完成。</target>
        </trans-unit>
        <trans-unit id="f6e978456ddb3af8bdb29674f743e9d5dd150503" translate="yes" xml:space="preserve">
          <source>If these parameters include &lt;code&gt;(minibuffer . nil)&lt;/code&gt;, that indicates that the initial frame should have no minibuffer. In this case, Emacs creates a separate &lt;em&gt;minibuffer-only frame&lt;/em&gt; as well.</source>
          <target state="translated">如果这些参数包括 &lt;code&gt;(minibuffer . nil)&lt;/code&gt; ，则表明初始帧不应包含minibuffer。在这种情况下，Emacs也会创建一个单独&lt;em&gt;的仅&lt;/em&gt;具有&lt;em&gt;迷你缓冲区的帧&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="45a33a7d9575de222295306570ac344670f6cf04" translate="yes" xml:space="preserve">
          <source>If these settings affect the frame geometry and appearance, you&amp;rsquo;ll see the frame appear with the wrong ones and then change to the specified ones. If that bothers you, you can specify the same geometry and appearance with X resources; those do take effect before the frame is created. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/X-Resources.html#X-Resources&quot;&gt;X Resources&lt;/a&gt; in</source>
          <target state="translated">如果这些设置影响框架的几何形状和外观，您会看到框架显示错误，然后更改为指定的框架。如果这让您感到困扰，则可以使用X资源指定相同的几何形状和外观。它们确实会在创建框架之前生效。请参阅&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/X-Resources.html#X-Resources&quot;&gt;相关的X资源&lt;/a&gt;中</target>
        </trans-unit>
        <trans-unit id="20b37a1a8d0ef1b02a68fec7c144c8fa31d612e3" translate="yes" xml:space="preserve">
          <source>If these two fields are not equal, a change in the status of the process needs to be reported, either by running the sentinel or by inserting a message in the process buffer.</source>
          <target state="translated">如果这两个字段不相等,则需要通过运行哨兵或在进程缓冲区插入消息来报告进程状态的变化。</target>
        </trans-unit>
        <trans-unit id="9e4a278a7bb8c7d888ffd1bd92ec0c91aad99bbe" translate="yes" xml:space="preserve">
          <source>If these two values differ, each of them is called (if not &lt;code&gt;nil&lt;/code&gt;) with two arguments: the old value of point, and the new one.</source>
          <target state="translated">如果这两个值不同，则分别使用两个参数调用它们（如果不是 &lt;code&gt;nil&lt;/code&gt; ）：point的旧值和新的值。</target>
        </trans-unit>
        <trans-unit id="5bb514ff1bb5eb470a34a42dcf8fc1976c539473" translate="yes" xml:space="preserve">
          <source>If this attempts to move past the beginning or end of the buffer (or the limits of the accessible portion, when narrowing is in effect), it signals an error with error symbol &lt;code&gt;beginning-of-buffer&lt;/code&gt; or &lt;code&gt;end-of-buffer&lt;/code&gt;.</source>
          <target state="translated">如果此操作尝试越过缓冲区的开始或结尾（或有效缩小时可访问部分的限制），则会发出带有错误符号&amp;ldquo; &lt;code&gt;beginning-of-buffer&lt;/code&gt; 或&amp;ldquo;缓冲区 &lt;code&gt;end-of-buffer&lt;/code&gt; 的错误信号。</target>
        </trans-unit>
        <trans-unit id="d89a8b26977d8b1cba2b979d344a05b8f10a0e1c" translate="yes" xml:space="preserve">
          <source>If this buffer local variable is non-&lt;code&gt;nil&lt;/code&gt;, a single character which usually terminates a comment doesn&amp;rsquo;t do so when that character is escaped. This is used in C and C++ Modes, where line comments starting with &amp;lsquo;</source>
          <target state="translated">如果此缓冲区局部变量为non- &lt;code&gt;nil&lt;/code&gt; ，则通常会终止注释的单个字符在转义该字符时不会这样做。在C和C ++模式下使用，其中以'开头的行注释</target>
        </trans-unit>
        <trans-unit id="2a78281c6da18de26fb269a25c35ff41b470eed4" translate="yes" xml:space="preserve">
          <source>If this buffer-local variable is non-&lt;code&gt;nil&lt;/code&gt;, Emacs Lisp files and buffers are evaluated using lexical binding instead of dynamic binding. (However, special variables are still dynamically bound; see below.) If &lt;code&gt;nil&lt;/code&gt;, dynamic binding is used for all local variables. This variable is typically set for a whole Emacs Lisp file, as a file local variable (see &lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;File Local Variables&lt;/a&gt;). Note that unlike other such variables, this one must be set in the first line of a file.</source>
          <target state="translated">如果此局部缓冲区变量为非 &lt;code&gt;nil&lt;/code&gt; ，则使用词法绑定而不是动态绑定来评估Emacs Lisp文件和缓冲区。（但是，特殊变量仍然是动态绑定的；请参见下文。）如果为 &lt;code&gt;nil&lt;/code&gt; ，则将动态绑定用于所有局部变量。通常为整个Emacs Lisp文件设置此变量，作为文件局部变量（请参阅&lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;文件局部变量&lt;/a&gt;）。请注意，与其他此类变量不同，此变量必须在文件的第一行中设置。</target>
        </trans-unit>
        <trans-unit id="5fd544423344dffb99b915492fe4d50fbde43e7e" translate="yes" xml:space="preserve">
          <source>If this buffer-local variable is non-&lt;code&gt;nil&lt;/code&gt;, it defines a &lt;em&gt;line prefix&lt;/em&gt; which Emacs displays at the start of every non-continuation line. Its value may be a string or an image (see &lt;a href=&quot;other-display-specs#Other-Display-Specs&quot;&gt;Other Display Specs&lt;/a&gt;), or a stretch of whitespace such as specified by the &lt;code&gt;:width&lt;/code&gt; or &lt;code&gt;:align-to&lt;/code&gt; display properties (see &lt;a href=&quot;specified-space#Specified-Space&quot;&gt;Specified Space&lt;/a&gt;). The value is interpreted in the same way as a &lt;code&gt;display&lt;/code&gt; text property. See &lt;a href=&quot;display-property#Display-Property&quot;&gt;Display Property&lt;/a&gt;.</source>
          <target state="translated">如果此局部缓冲区变量为non- &lt;code&gt;nil&lt;/code&gt; ，则它定义&lt;em&gt;行前缀&lt;/em&gt;，Emacs将在每条非连续行的开头显示该&lt;em&gt;行前缀&lt;/em&gt;。它的值可以是字符串或图像（请参阅&lt;a href=&quot;other-display-specs#Other-Display-Specs&quot;&gt;其他显示规格&lt;/a&gt;），也可以是一连串的空白，例如，由 &lt;code&gt;:width&lt;/code&gt; 或 &lt;code&gt;:align-to&lt;/code&gt; &lt;a href=&quot;specified-space#Specified-Space&quot;&gt;指定&lt;/a&gt;以显示属性（请参见指定的空间）。该值的解释方式与 &lt;code&gt;display&lt;/code&gt; 文本属性相同。请参阅&lt;a href=&quot;display-property#Display-Property&quot;&gt;显示属性&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7ed4e323befa87981b8acf726e4f3b6b4fee8d81" translate="yes" xml:space="preserve">
          <source>If this buffer-local variable is non-&lt;code&gt;nil&lt;/code&gt;, it defines a &lt;em&gt;wrap prefix&lt;/em&gt; which Emacs displays at the start of every continuation line. (If lines are truncated, &lt;code&gt;wrap-prefix&lt;/code&gt; is never used.) Its value may be a string or an image (see &lt;a href=&quot;other-display-specs#Other-Display-Specs&quot;&gt;Other Display Specs&lt;/a&gt;), or a stretch of whitespace such as specified by the &lt;code&gt;:width&lt;/code&gt; or &lt;code&gt;:align-to&lt;/code&gt; display properties (see &lt;a href=&quot;specified-space#Specified-Space&quot;&gt;Specified Space&lt;/a&gt;). The value is interpreted in the same way as a &lt;code&gt;display&lt;/code&gt; text property. See &lt;a href=&quot;display-property#Display-Property&quot;&gt;Display Property&lt;/a&gt;.</source>
          <target state="translated">如果此局部变量不为 &lt;code&gt;nil&lt;/code&gt; ，则它定义一个&lt;em&gt;包装前缀&lt;/em&gt;，Emacs将在每个续行的开头显示该&lt;em&gt;包装前缀&lt;/em&gt;。 （如果行被截断，则将不使用 &lt;code&gt;wrap-prefix&lt;/code&gt; 。）其值可以是字符串或图像（请参见&lt;a href=&quot;other-display-specs#Other-Display-Specs&quot;&gt;其他显示规格&lt;/a&gt;），也可以是一段空白，例如 &lt;code&gt;:width&lt;/code&gt; 或 &lt;code&gt;:align-to&lt;/code&gt; 显示属性（请参阅&amp;ldquo;&lt;a href=&quot;specified-space#Specified-Space&quot;&gt;指定空间&amp;rdquo;&lt;/a&gt;）。该值的解释方式与 &lt;code&gt;display&lt;/code&gt; 文本属性相同。请参阅&lt;a href=&quot;display-property#Display-Property&quot;&gt;显示属性&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5b2093e43127b528d7fa6ef0ef8cefd2e58a3d1e" translate="yes" xml:space="preserve">
          <source>If this buffer-local variable is non-&lt;code&gt;nil&lt;/code&gt;, lines that extend beyond the right edge of the window are truncated; otherwise, they are continued. As a special exception, the variable &lt;code&gt;truncate-partial-width-windows&lt;/code&gt; takes precedence in &lt;em&gt;partial-width&lt;/em&gt; windows (i.e., windows that do not occupy the entire frame width).</source>
          <target state="translated">如果此局部缓冲区变量为non- &lt;code&gt;nil&lt;/code&gt; ，则超出窗口右边缘的行将被截断；否则，行将被截断。否则，它们将继续。作为特殊例外，变量 &lt;code&gt;truncate-partial-width-windows&lt;/code&gt; 在&lt;em&gt;部分宽度&lt;/em&gt;窗口（即，不占据整个框架宽度的窗口）中优先。</target>
        </trans-unit>
        <trans-unit id="432a86badb47f48e7893242df18107541092759f" translate="yes" xml:space="preserve">
          <source>If this buffer-local variable is non-&lt;code&gt;nil&lt;/code&gt;, the buffer will have its state saved in the desktop file at desktop save. If the value is a function, it is called at desktop save with argument &lt;var&gt;desktop-dirname&lt;/var&gt;, and its value is saved in the desktop file along with the state of the buffer for which it was called. When file names are returned as part of the auxiliary information, they should be formatted using the call</source>
          <target state="translated">如果此局部缓冲区变量为非 &lt;code&gt;nil&lt;/code&gt; ，则在桌面保存时将其状态保存在桌面文件中。如果该值是一个函数，则在桌面保存时使用参数 &lt;var&gt;desktop-dirname&lt;/var&gt; 调用它，并且将其值与被调用的缓冲区的状态一起保存在桌面文件中。当文件名作为辅助信息的一部分返回时，应使用调用对其进行格式化</target>
        </trans-unit>
        <trans-unit id="aea1538287ef132a6f081b048de51ee7126dd3d0" translate="yes" xml:space="preserve">
          <source>If this buffer-local variable is non-&lt;code&gt;nil&lt;/code&gt;, the size of any window displaying the buffer cannot normally be changed. Deleting a window or changing the frame&amp;rsquo;s size may still change the window&amp;rsquo;s size, if there is no choice.</source>
          <target state="translated">如果此缓冲区局部变量为非 &lt;code&gt;nil&lt;/code&gt; ，则通常无法更改显示缓冲区的任何窗口的大小。如果没有选择，删除窗口或更改框架的大小仍可能会更改窗口的大小。</target>
        </trans-unit>
        <trans-unit id="ca6416739929a65d7f2b8c3c029749537cabf4cd" translate="yes" xml:space="preserve">
          <source>If this buffer-local variable is non-&lt;code&gt;nil&lt;/code&gt;, then Emacs displays &amp;lsquo;</source>
          <target state="translated">如果此缓冲区局部变量为非 &lt;code&gt;nil&lt;/code&gt; ，则Emacs显示&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="f7b2357a9b265553c83c5f86a847eef1e6ada00f" translate="yes" xml:space="preserve">
          <source>If this command acts on the entire buffer (i.e., if called interactively with the mark inactive, or called from Lisp with &lt;var&gt;end&lt;/var&gt;&lt;code&gt;nil&lt;/code&gt;), it also deletes all trailing lines at the end of the buffer if the variable &lt;code&gt;delete-trailing-lines&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果此命令作用于整个缓冲区（即，以标记inactive进行交互调用，或以 &lt;code&gt;nil&lt;/code&gt; &lt;var&gt;end&lt;/var&gt; 从Lisp调用），并且在变量 &lt;code&gt;delete-trailing-lines&lt;/code&gt; 为non时，它也会删除缓冲区末尾的所有尾随行- &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="10e05f72983ccd5f7221cc5bbedbc6e56e4772a2" translate="yes" xml:space="preserve">
          <source>If this date doesn&amp;rsquo;t exist (if you&amp;rsquo;re running this on January 31st, for instance), then the date will be shifted back until you get a valid date (which will be February 28th or 29th, depending).</source>
          <target state="translated">如果该日期不存在（例如，如果您在1月31日运行此日期），则该日期将向后移，直到获得有效日期（具体取决于2月28日或29日）。</target>
        </trans-unit>
        <trans-unit id="6021a1625b26607bebed3ac67c79e7ec4507fa5a" translate="yes" xml:space="preserve">
          <source>If this flag is non-&lt;code&gt;nil&lt;/code&gt;, it says that the window has been scrolled explicitly by the Lisp program, and the value of the window&amp;rsquo;s &lt;code&gt;start&lt;/code&gt; was set for redisplay to honor. This affects what the next redisplay does if point is off the screen: instead of scrolling the window to show the text around point, it moves point to a location that is on the screen.</source>
          <target state="translated">如果此标志为非 &lt;code&gt;nil&lt;/code&gt; ，则表示该窗口已由Lisp程序显式滚动，并且该窗口的 &lt;code&gt;start&lt;/code&gt; 值已设置为重新显示以符合要求。如果点不在屏幕上，这将影响下一次重新显示的操作：与其滚动窗口以显示点周围的文本，不如将其移动到屏幕上的某个位置。</target>
        </trans-unit>
        <trans-unit id="d6d906318560283537873b00d59001402d7d79d1" translate="yes" xml:space="preserve">
          <source>If this function chooses a window on another frame, it makes that frame visible and, unless &lt;var&gt;alist&lt;/var&gt; contains an &lt;code&gt;inhibit-switch-frame&lt;/code&gt; entry, raises that frame if necessary.</source>
          <target state="translated">如果此功能而选择在另一帧中的窗口，它使该帧可见的，除非 &lt;var&gt;alist&lt;/var&gt; 含有 &lt;code&gt;inhibit-switch-frame&lt;/code&gt; 进入，如果有必要提高该帧。</target>
        </trans-unit>
        <trans-unit id="083f00a7a5dc646d622c67db6c142468e4d124a3" translate="yes" xml:space="preserve">
          <source>If this function finds a match, the index of the first character beyond the match is available as &lt;code&gt;(match-end 0)&lt;/code&gt;. See &lt;a href=&quot;match-data#Match-Data&quot;&gt;Match Data&lt;/a&gt;.</source>
          <target state="translated">如果此函数找到匹配项，则匹配项之外的第一个字符的索引可用作 &lt;code&gt;(match-end 0)&lt;/code&gt; 。请参阅&lt;a href=&quot;match-data#Match-Data&quot;&gt;匹配数据&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="00afe0829cdcf5109e09154bc5fa5ac61c0045b3" translate="yes" xml:space="preserve">
          <source>If this function is called more than once for the same &lt;var&gt;tabname&lt;/var&gt;, subsequent calls add the definitions in &lt;var&gt;definitions&lt;/var&gt; to &lt;var&gt;tabname&lt;/var&gt;, rather than overwriting the entire original contents. (A subsequent call only overrides abbrevs explicitly redefined or undefined in &lt;var&gt;definitions&lt;/var&gt;.)</source>
          <target state="translated">如果对同一 &lt;var&gt;tabname&lt;/var&gt; 多次调用此函数，则后续调用会将定义中的 &lt;var&gt;definitions&lt;/var&gt; 添加到 &lt;var&gt;tabname&lt;/var&gt; 中，而不是覆盖整个原始内容。（A后续调用仅覆盖abbrevs明确定义或未定义的 &lt;var&gt;definitions&lt;/var&gt; 。）</target>
        </trans-unit>
        <trans-unit id="ce7c75305a7d83b0473e741f01d7a4f352cc4272" translate="yes" xml:space="preserve">
          <source>If this function reaches the end of the buffer (or of the accessible portion, if narrowing is in effect), it positions point there. No error is signaled.</source>
          <target state="translated">如果该函数到达缓冲区的末端(或可访问部分的末端,如果窄化有效),它将点定位在那里。不会发出错误信号。</target>
        </trans-unit>
        <trans-unit id="869432596a2a5223e5603635258e0bd03b99e0ab" translate="yes" xml:space="preserve">
          <source>If this function returns &lt;code&gt;fail&lt;/code&gt;, &lt;code&gt;display-buffer&lt;/code&gt; will skip the execution of any further display actions and return &lt;code&gt;nil&lt;/code&gt; immediately. If this function returns &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;display-buffer&lt;/code&gt; will continue with the next display action, if any.</source>
          <target state="translated">如果此函数返回 &lt;code&gt;fail&lt;/code&gt; ，则 &lt;code&gt;display-buffer&lt;/code&gt; 将跳过任何其他显示动作的执行，并立即返回 &lt;code&gt;nil&lt;/code&gt; 。如果此函数返回 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;display-buffer&lt;/code&gt; 将继续进行下一个显示操作（如果有）。</target>
        </trans-unit>
        <trans-unit id="4cf9767642228285268994a6ab6915acdd90f010" translate="yes" xml:space="preserve">
          <source>If this function returns a vector, Emacs will decide, as part of the text encoding or decoding process, what eol conversion to use. For decoding, the end-of-line format of the text is auto-detected, and the eol conversion is set to match it (e.g., DOS-style CRLF format will imply &lt;code&gt;dos&lt;/code&gt; eol conversion). For encoding, the eol conversion is taken from the appropriate default coding system (e.g., default value of &lt;code&gt;buffer-file-coding-system&lt;/code&gt; for &lt;code&gt;buffer-file-coding-system&lt;/code&gt;), or from the default eol conversion appropriate for the underlying platform.</source>
          <target state="translated">如果此函数返回向量，则Emacs将在文本编码或解码过程中确定要使用的eol转换。对于解码，将自动检测文本的行尾格式，并将eol转换设置为与之匹配（例如，DOS样式的CRLF格式将表示 &lt;code&gt;dos&lt;/code&gt; eol转换）。对于编码，eol转换取自适当的默认编码系统（例如， &lt;code&gt;buffer-file-coding-system&lt;/code&gt; 的 &lt;code&gt;buffer-file-coding-system&lt;/code&gt; 的缺省值），或取自适用于基础平台的缺省eol转换。</target>
        </trans-unit>
        <trans-unit id="957e091db8006f7d5019b6610a727feaefde8377" translate="yes" xml:space="preserve">
          <source>If this is &lt;code&gt;above&lt;/code&gt;, the window-system will display the window that corresponds to the frame above all other window-system windows that do not have the &lt;code&gt;above&lt;/code&gt; property set. If this is &lt;code&gt;nil&lt;/code&gt;, the frame&amp;rsquo;s window is displayed below all windows that have the &lt;code&gt;above&lt;/code&gt; property set and above all windows that have the &lt;code&gt;below&lt;/code&gt; property set. If this is &lt;code&gt;below&lt;/code&gt;, the frame&amp;rsquo;s window is displayed below all windows that do not have the &lt;code&gt;below&lt;/code&gt; property set.</source>
          <target state="translated">如果在此 &lt;code&gt;above&lt;/code&gt; ，则窗口系统将在所有未设置 &lt;code&gt;above&lt;/code&gt; 属性的其他窗口系统窗口上方显示与该框架相对应的窗口。如果为 &lt;code&gt;nil&lt;/code&gt; ，则框架的窗口显示在设置了 &lt;code&gt;above&lt;/code&gt; 属性的所有窗口的 &lt;code&gt;below&lt;/code&gt; ，以及设置了以下属性的所有窗口的上方。如果在 &lt;code&gt;below&lt;/code&gt; ，则框架的窗口显示在所有未设置 &lt;code&gt;below&lt;/code&gt; 属性的窗口下方。</target>
        </trans-unit>
        <trans-unit id="a1b52e2df3a9e454258b898cfd79cd310a2b4629" translate="yes" xml:space="preserve">
          <source>If this is &lt;code&gt;nil&lt;/code&gt;, minibuffer-only frames are never resized automatically.</source>
          <target state="translated">如果为 &lt;code&gt;nil&lt;/code&gt; ，则仅会自动调整仅用于迷你缓冲区的帧的大小。</target>
        </trans-unit>
        <trans-unit id="1b97a488003cc5ca076256ac37cb97d8ce9b384b" translate="yes" xml:space="preserve">
          <source>If this is a cons cell with the symbol &lt;code&gt;text-pixels&lt;/code&gt; in its &lt;small&gt;CAR&lt;/small&gt;, the &lt;small&gt;CDR&lt;/small&gt; of that cell specifies the width of the frame&amp;rsquo;s text area in pixels.</source>
          <target state="translated">如果这是一个在其&lt;small&gt;CAR中&lt;/small&gt;具有符号 &lt;code&gt;text-pixels&lt;/code&gt; 的con单元格，则该单元格的&lt;small&gt;CDR&lt;/small&gt;以像素为单位指定帧的文本区域的宽度。&lt;small&gt;&lt;/small&gt;&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ceab50f0b43f6e3c6d961c1c4b3442015452d10b" translate="yes" xml:space="preserve">
          <source>If this is a function, that function is called with the minibuffer-only frame to be resized as sole argument. At the time this function is called, the buffer of the minibuffer window of that frame is the buffer whose contents will be shown the next time that window is redisplayed. The function is expected to fit the frame to the buffer in some appropriate way.</source>
          <target state="translated">如果这是一个函数,则调用该函数时,将仅以要调整大小的迷你缓冲区框架作为唯一参数。在该函数被调用时,该帧的minibuffer窗口的缓冲区是缓冲区,其内容将在下次重新显示该窗口时显示。该函数被期望以某种适当的方式将该帧与缓冲区相适应。</target>
        </trans-unit>
        <trans-unit id="ba58f7a102aacf78663d445e616b82cacc64e985" translate="yes" xml:space="preserve">
          <source>If this is a number, Emacs performs gamma correction which adjusts the brightness of all colors. The value should be the screen gamma of your display.</source>
          <target state="translated">如果这是一个数字,Emacs会执行伽玛校正,调整所有颜色的亮度。这个值应该是你的显示器的屏幕伽玛值。</target>
        </trans-unit>
        <trans-unit id="214dc66d885f284b40d9e4dd95560530b6fa7bad" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;fit-window-to-buffer&lt;/code&gt; can resize windows horizontally. If this is &lt;code&gt;nil&lt;/code&gt; (the default) &lt;code&gt;fit-window-to-buffer&lt;/code&gt; never resizes windows horizontally. If this is &lt;code&gt;only&lt;/code&gt;, it can resize windows horizontally only. Any other value means &lt;code&gt;fit-window-to-buffer&lt;/code&gt; can resize windows in both dimensions.</source>
          <target state="translated">如果这是不 &lt;code&gt;nil&lt;/code&gt; ， &lt;code&gt;fit-window-to-buffer&lt;/code&gt; 可水平调整窗口大小。如果 &lt;code&gt;nil&lt;/code&gt; （默认值），则 &lt;code&gt;fit-window-to-buffer&lt;/code&gt; 永远不会水平调整窗口大小。如果 &lt;code&gt;only&lt;/code&gt; ，则只能水平调整窗口大小。任何其他值意味着 &lt;code&gt;fit-window-to-buffer&lt;/code&gt; 可以在两个维度上调整窗口大小。</target>
        </trans-unit>
        <trans-unit id="68fad749eafc426bf4990d05bc7ff44d68a8f27b" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, Edebug saves and restores point in all displayed buffers.</source>
          <target state="translated">如果这是不 &lt;code&gt;nil&lt;/code&gt; ，Edebug保存和恢复所有显示的缓存点。</target>
        </trans-unit>
        <trans-unit id="c7d3e31eef250c7f036160920ec649b83cac0e19" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, Edebug saves and restores the window configuration. That takes some time, so if your program does not care what happens to the window configurations, it is better to set this variable to &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果这是不 &lt;code&gt;nil&lt;/code&gt; ，Edebug保存和恢复窗口配置。这需要一些时间，因此，如果您的程序不在乎窗口配置会发生什么，最好将此变量设置为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="25397ea9796e92b2f97a1c9835eb561c55c0d2c6" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, Lisp programs and the Emacs user can use the mark even when it is inactive. This option affects the behavior of Transient Mark mode. When the option is non-&lt;code&gt;nil&lt;/code&gt;, deactivation of the mark turns off region highlighting, but commands that use the mark behave as if the mark were still active.</source>
          <target state="translated">如果不是 &lt;code&gt;nil&lt;/code&gt; ，则即使Lisp程序和Emacs用户处于非活动状态，也可以使用该标志。此选项影响瞬变标记模式的行为。当该选项为非 &lt;code&gt;nil&lt;/code&gt; 时，取消激活标记会关闭区域突出显示，但是使用该标记的命令的行为就像该标记仍处于活动状态一样。</target>
        </trans-unit>
        <trans-unit id="32e5f481bd60270d4d523952079fe2b86a69f722" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, activation of the minibuffer raises the frame that the minibuffer window is in.</source>
          <target state="translated">如果不是 &lt;code&gt;nil&lt;/code&gt; ，则激活迷你缓冲区会提高迷你缓冲区窗口所在的帧。</target>
        </trans-unit>
        <trans-unit id="4cd5343813932e73cf5340856c97ee940339918f" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, it specifies how Emacs should ring the bell. Its value should be a function of no arguments. If this is non-&lt;code&gt;nil&lt;/code&gt;, it takes precedence over the &lt;code&gt;visible-bell&lt;/code&gt; variable.</source>
          <target state="translated">如果这是不 &lt;code&gt;nil&lt;/code&gt; ，它指定的Emacs应该怎么按铃。它的值应该是没有参数的函数。如果它不是 &lt;code&gt;nil&lt;/code&gt; ，则它优先于 &lt;code&gt;visible-bell&lt;/code&gt; 变量。</target>
        </trans-unit>
        <trans-unit id="efc97046a89125b922e5821a3169617150b06d88" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, it suppresses the display of any truncation and continuation glyphs (see &lt;a href=&quot;truncation#Truncation&quot;&gt;Truncation&lt;/a&gt;) for all buffers displayed by this frame. This is useful to eliminate such glyphs when fitting a frame to its buffer via &lt;code&gt;fit-frame-to-buffer&lt;/code&gt; (see &lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;Resizing Windows&lt;/a&gt;).</source>
          <target state="translated">如果此值不为 &lt;code&gt;nil&lt;/code&gt; ，则它将抑制此帧显示的所有缓冲区的任何截断和连续字形（请参见&lt;a href=&quot;truncation#Truncation&quot;&gt;Truncation&lt;/a&gt;）的显示。通过 &lt;code&gt;fit-frame-to-buffer&lt;/code&gt; 将框架适合其缓冲区时，消除此类字形很有用（请参见&amp;ldquo;&lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;调整Windows大小&amp;rdquo;&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="15bc554b1227e9ff4e2721564b7c2b2775503828" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, its value specifies the current input method function.</source>
          <target state="translated">如果它为非 &lt;code&gt;nil&lt;/code&gt; ，则其值指定当前输入法函数。</target>
        </trans-unit>
        <trans-unit id="d8ebd7b13853249094ed488c8f78e6577cc51264" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, lines exactly as wide as the window (not counting the final newline character) are not continued. Instead, when point is at the end of the line, the cursor appears in the right fringe.</source>
          <target state="translated">如果不是 &lt;code&gt;nil&lt;/code&gt; ，则不会继续与窗口完全一样的行（不计算最后的换行符）。相反，当点位于行的末尾时，光标将出现在右边缘。</target>
        </trans-unit>
        <trans-unit id="e8990e9caa5c1237e7d8e51a9c922fecc23e5895" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, normal evaluation of defining forms such as &lt;code&gt;defun&lt;/code&gt; and &lt;code&gt;defmacro&lt;/code&gt; instruments them for Edebug. This applies to &lt;code&gt;eval-defun&lt;/code&gt;, &lt;code&gt;eval-region&lt;/code&gt;, &lt;code&gt;eval-buffer&lt;/code&gt;, and &lt;code&gt;eval-current-buffer&lt;/code&gt;.</source>
          <target state="translated">如果这是不 &lt;code&gt;nil&lt;/code&gt; ，限定形式，例如正常评价 &lt;code&gt;defun&lt;/code&gt; 定义和 &lt;code&gt;defmacro&lt;/code&gt; 仪器它们Edebug。这适用于 &lt;code&gt;eval-defun&lt;/code&gt; ， &lt;code&gt;eval-region&lt;/code&gt; ， &lt;code&gt;eval-buffer&lt;/code&gt; 和 &lt;code&gt;eval-current-buffer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9d6c08e8d8b954fd9b6294fd0ec73a15ae4084db" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, that means to print quoted forms using abbreviated reader syntax, e.g., &lt;code&gt;(quote foo)&lt;/code&gt; prints as &lt;code&gt;'foo&lt;/code&gt;, and &lt;code&gt;(function foo)&lt;/code&gt; as &lt;code&gt;#'foo&lt;/code&gt;. The default is &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">如果不是 &lt;code&gt;nil&lt;/code&gt; ，则意味着使用缩写的阅读器语法打印带引号的表单，例如 &lt;code&gt;(quote foo)&lt;/code&gt; 打印为 &lt;code&gt;'foo&lt;/code&gt; ，而 &lt;code&gt;(function foo)&lt;/code&gt; 打印为 &lt;code&gt;#'foo&lt;/code&gt; 。默认值为 &lt;code&gt;t&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0bd893cb621263d5a8aed807abb674c372296c4e" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, the byte compiler generates compiled files that are set up for dynamic function loading.</source>
          <target state="translated">如果这是不 &lt;code&gt;nil&lt;/code&gt; ，字节编译器生成都设置了动态加载函数编译的文件。</target>
        </trans-unit>
        <trans-unit id="f671cbf7a74fb9649d8457f3817e33c450312bf6" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, the byte compiler generates compiled files that are set up for dynamic loading of documentation strings.</source>
          <target state="translated">如果这不是 &lt;code&gt;nil&lt;/code&gt; ，则字节编译器会生成已编译的文件，这些文件是为动态加载文档字符串而设置的。</target>
        </trans-unit>
        <trans-unit id="b07863475998c4a32689d25fb90d69b1da1bf839" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, the commands &lt;code&gt;eval-defun&lt;/code&gt;, &lt;code&gt;eval-region&lt;/code&gt;, &lt;code&gt;eval-buffer&lt;/code&gt;, and &lt;code&gt;eval-current-buffer&lt;/code&gt; instrument all forms, even those that don&amp;rsquo;t define anything. This doesn&amp;rsquo;t apply to loading or evaluations in the minibuffer.</source>
          <target state="translated">如果这不是 &lt;code&gt;nil&lt;/code&gt; ，则命令 &lt;code&gt;eval-defun&lt;/code&gt; ， &lt;code&gt;eval-region&lt;/code&gt; ， &lt;code&gt;eval-buffer&lt;/code&gt; 和 &lt;code&gt;eval-current-buffer&lt;/code&gt; 会使用所有形式，即使没有定义任何形式。这不适用于迷你缓冲区中的加载或评估。</target>
        </trans-unit>
        <trans-unit id="44390378a6c86190f73e863e432a1f4ef3129c93" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, the syntax scanning functions, like &lt;code&gt;forward-sexp&lt;/code&gt;, pay attention to &lt;code&gt;syntax-table&lt;/code&gt; text properties. Otherwise they use only the current syntax table.</source>
          <target state="translated">如果这是不 &lt;code&gt;nil&lt;/code&gt; ，语法扫描功能，如 &lt;code&gt;forward-sexp&lt;/code&gt; ，要注意 &lt;code&gt;syntax-table&lt;/code&gt; 文本属性。否则，它们仅使用当前语法表。</target>
        </trans-unit>
        <trans-unit id="31979f380b3a283a11adf5b42adad210b4c1c1c0" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, then this frame is not eligible as candidate for the functions &lt;code&gt;next-frame&lt;/code&gt;, &lt;code&gt;previous-frame&lt;/code&gt; (see &lt;a href=&quot;finding-all-frames#Finding-All-Frames&quot;&gt;Finding All Frames&lt;/a&gt;) and &lt;code&gt;other-frame&lt;/code&gt;, see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Frame-Commands.html#Frame-Commands&quot;&gt;Frame Commands&lt;/a&gt; in</source>
          <target state="translated">如果这是不 &lt;code&gt;nil&lt;/code&gt; ，那么这个框架是没有资格作为候选人功能 &lt;code&gt;next-frame&lt;/code&gt; ， &lt;code&gt;previous-frame&lt;/code&gt; （见&lt;a href=&quot;finding-all-frames#Finding-All-Frames&quot;&gt;查找所有帧&lt;/a&gt;）和 &lt;code&gt;other-frame&lt;/code&gt; ，看到&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Frame-Commands.html#Frame-Commands&quot;&gt;框架命令&lt;/a&gt;中</target>
        </trans-unit>
        <trans-unit id="7474f5eb32084fc7c649f56db83b1ebc853f111c" translate="yes" xml:space="preserve">
          <source>If this is non-&lt;code&gt;nil&lt;/code&gt;, trace each function entry and exit. Tracing output is displayed in a buffer named</source>
          <target state="translated">如果不是 &lt;code&gt;nil&lt;/code&gt; ，则跟踪每个函数的入口和出口。跟踪输出显示在名为的缓冲区中</target>
        </trans-unit>
        <trans-unit id="966b0b23e2e6a979368c63d07ebeae90cd5c5031" translate="yes" xml:space="preserve">
          <source>If this is non-zero, killing Emacs while this process is still running does not ask for confirmation about killing the process.</source>
          <target state="translated">如果这个值为非零,在这个进程还在运行时,杀死Emacs不会要求确认是否杀死进程。</target>
        </trans-unit>
        <trans-unit id="d54a1a91cde2285cd5aaadb10fc1f42680cf6093" translate="yes" xml:space="preserve">
          <source>If this is specified, the value should be the customization group for this mode. (Not all major modes have one.) The command &lt;code&gt;customize-mode&lt;/code&gt; uses this. &lt;code&gt;define-derived-mode&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; automatically define the specified customization group.</source>
          <target state="translated">如果指定了此值，则该值应该是此模式的自定义组。（并非所有主要模式都有一个。）命令 &lt;code&gt;customize-mode&lt;/code&gt; 使用此模式。 &lt;code&gt;define-derived-mode&lt;/code&gt; 并&lt;em&gt;没有&lt;/em&gt;自动定义指定的定制基。</target>
        </trans-unit>
        <trans-unit id="04620961e87f58784713e3322ba28ec85c00503d" translate="yes" xml:space="preserve">
          <source>If this mode is appropriate only for specially-prepared text produced by the mode itself (rather than by the user typing at the keyboard or by an external file), then the major mode command symbol should have a property named &lt;code&gt;mode-class&lt;/code&gt; with value &lt;code&gt;special&lt;/code&gt;, put on as follows:</source>
          <target state="translated">如果此模式仅适用于由模式本身生成的特殊准备的文本（而不是由用户在键盘上键入或由外部文件输入），则主模式命令符号应具有名为 &lt;code&gt;mode-class&lt;/code&gt; 的属性，其值为 &lt;code&gt;special&lt;/code&gt; ，穿上如下：</target>
        </trans-unit>
        <trans-unit id="e52d7d62fa08aa799be7c38c4bcea4fc9b87548a" translate="yes" xml:space="preserve">
          <source>If this option is &lt;code&gt;nil&lt;/code&gt; (the default), &lt;code&gt;scroll-up-command&lt;/code&gt; and &lt;code&gt;scroll-down-command&lt;/code&gt; simply signal an error when no more scrolling is possible.</source>
          <target state="translated">如果此选项为 &lt;code&gt;nil&lt;/code&gt; （默认值），则在无法再滚动时， &lt;code&gt;scroll-up-command&lt;/code&gt; 和 &lt;code&gt;scroll-down-command&lt;/code&gt; 仅表示错误。</target>
        </trans-unit>
        <trans-unit id="c72c6e58405043640334e93fb6f7182db318cd87" translate="yes" xml:space="preserve">
          <source>If this option is &lt;code&gt;nil&lt;/code&gt; (the default), a frame&amp;rsquo;s text pixel size is usually rounded to a multiple of the current values of that frame&amp;rsquo;s &lt;code&gt;frame-char-height&lt;/code&gt; and &lt;code&gt;frame-char-width&lt;/code&gt; whenever the frame is resized. If this is non-&lt;code&gt;nil&lt;/code&gt;, no rounding occurs, hence frame sizes can increase/decrease by one pixel.</source>
          <target state="translated">如果此选项为 &lt;code&gt;nil&lt;/code&gt; （默认值），则每当调整框架大小时，框架的文本像素大小通常会四舍五入为该框架的 &lt;code&gt;frame-char-height&lt;/code&gt; 和 &lt;code&gt;frame-char-width&lt;/code&gt; 的当前值的倍数。如果不为 &lt;code&gt;nil&lt;/code&gt; ，则不会进行舍入，因此帧大小可以增加/减少一个像素。</target>
        </trans-unit>
        <trans-unit id="54e6a84c9b36ca0d120b8c3a7c43d66826e7e66f" translate="yes" xml:space="preserve">
          <source>If this option is &lt;code&gt;nil&lt;/code&gt;, changing a frame&amp;rsquo;s font, menu bar, tool bar, internal borders, fringes or scroll bars may resize its outer frame in order to keep the number of columns or lines of its text area unaltered. If this option is &lt;code&gt;t&lt;/code&gt;, no such resizing is done.</source>
          <target state="translated">如果此选项为 &lt;code&gt;nil&lt;/code&gt; ，则更改框架的字体，菜单栏，工具栏，内部边框，边框或滚动条可能会调整其外部框架的大小，以保持其文本区域的列数或行数不变。如果此选项为 &lt;code&gt;t&lt;/code&gt; ，则不会进行任何大小调整。</target>
        </trans-unit>
        <trans-unit id="bc3d02de48ee15116c952f577e906c1c9aa16a73" translate="yes" xml:space="preserve">
          <source>If this option is &lt;code&gt;t&lt;/code&gt;, whenever a scrolling command moves point off-window, Emacs tries to adjust point to keep the cursor at its old vertical position in the window, rather than the window edge.</source>
          <target state="translated">如果此选项为 &lt;code&gt;t&lt;/code&gt; ，则每当滚动命令将指针移出窗口时，Emacs都会尝试调整点以将光标保持在窗口中的旧垂直位置，而不是窗口边缘。</target>
        </trans-unit>
        <trans-unit id="c9c66e4f3c606fe9374e63f54b58084764036d09" translate="yes" xml:space="preserve">
          <source>If this option is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;fit-window-to-buffer&lt;/code&gt; can fit a frame to its buffer. A frame is fit if and only if its root window is a live window and this option is non-&lt;code&gt;nil&lt;/code&gt;. If this is &lt;code&gt;horizontally&lt;/code&gt;, frames are fit horizontally only. If this is &lt;code&gt;vertically&lt;/code&gt;, frames are fit vertically only. Any other non-&lt;code&gt;nil&lt;/code&gt; value means frames can be resized in both dimensions.</source>
          <target state="translated">如果此选项为非 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;fit-window-to-buffer&lt;/code&gt; 可使框架适合其缓冲区。当且仅当其根窗口是活动窗口且此选项为 &lt;code&gt;nil&lt;/code&gt; 时,框架才适合。如果 &lt;code&gt;horizontally&lt;/code&gt; ，则框架只能水平放置。如果是 &lt;code&gt;vertically&lt;/code&gt; 放置，则框架仅垂直放置。任何其它非 &lt;code&gt;nil&lt;/code&gt; 值意味着帧可以在两个维度上被调整大小。</target>
        </trans-unit>
        <trans-unit id="5a164d6ee90c48aec0e7a278ea57b7f2b904c6c5" translate="yes" xml:space="preserve">
          <source>If this option is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;kill-region&lt;/code&gt; does not signal an error if the buffer or text is read-only. Instead, it simply returns, updating the kill ring but not changing the buffer.</source>
          <target state="translated">如果此选项为非 &lt;code&gt;nil&lt;/code&gt; ，则如果缓冲区或文本为只读，则 &lt;code&gt;kill-region&lt;/code&gt; 不会发出错误信号。相反，它只是返回，更新了kill环，而不更改缓冲区。</target>
        </trans-unit>
        <trans-unit id="22125abcac48d44de59b6d6f7908442688ad4bf5" translate="yes" xml:space="preserve">
          <source>If this option is non-&lt;code&gt;nil&lt;/code&gt;, Emacs moves the mouse pointer to the frame selected by &lt;code&gt;select-frame-set-input-focus&lt;/code&gt;. That function is used by a number of commands like, for example, &lt;code&gt;other-frame&lt;/code&gt; and &lt;code&gt;pop-to-buffer&lt;/code&gt;.</source>
          <target state="translated">如果此选项为非 &lt;code&gt;nil&lt;/code&gt; ，则Emacs将鼠标指针移动到由 &lt;code&gt;select-frame-set-input-focus&lt;/code&gt; 选择的帧。该功能由许多命令使用，例如 &lt;code&gt;other-frame&lt;/code&gt; 和 &lt;code&gt;pop-to-buffer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a6926437ee3cbc9261b34b88045a049cd4e85b2e" translate="yes" xml:space="preserve">
          <source>If this option is non-&lt;code&gt;nil&lt;/code&gt;, then rather than stopping at the first suffix that exists, &lt;code&gt;load&lt;/code&gt; tests them all, and uses whichever file is the newest.</source>
          <target state="translated">如果此选项为non- &lt;code&gt;nil&lt;/code&gt; ，则不要停止在存在的第一个后缀，而是对其全部进行 &lt;code&gt;load&lt;/code&gt; 测试，并使用最新的文件。</target>
        </trans-unit>
        <trans-unit id="7938d876e61b6c7f68a93ccf5def31340f0740d4" translate="yes" xml:space="preserve">
          <source>If this parameter is a number, the bottom edge of the frame never appears below the bottom edge of its display or parent frame. Moreover, as many pixels of the frame as specified by that number will remain visible when the frame is moved against any of the remaining edges of its display or parent frame. Setting this parameter is useful to guard against dragging a child frame with a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;drag-with-mode-line&lt;/code&gt; parameter completely out of the area of its parent frame.</source>
          <target state="translated">如果此参数是数字，则框架的底部边缘永远不会出现在其显示器或父框架的底部边缘下方。此外，当帧相对于其显示器或父帧的任何其余边缘移动时，该数字指定的帧像素将保持可见。设置此参数对于防止将带有非 &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;drag-with-mode-line&lt;/code&gt; 参数的子框架完全拖出其父框架的区域非常有用。</target>
        </trans-unit>
        <trans-unit id="4992c37fede8a3de36e28c682e030ea0ca3db304" translate="yes" xml:space="preserve">
          <source>If this parameter is a number, the top edge of the frame never appears above the top edge of its display or parent frame. Moreover, as many pixels of the frame as specified by that number will remain visible when the frame is moved against any of the remaining edges of its display or parent frame. Setting this parameter is useful to guard against dragging a child frame with a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;drag-with-header-line&lt;/code&gt; parameter completely out of the area of its parent frame.</source>
          <target state="translated">如果此参数是数字，则框架的顶部边缘永远不会出现在其显示器或父框架的顶部边缘上方。此外，当帧相对于其显示器或父帧的任何其余边缘移动时，该数字指定的帧像素将保持可见。设置此参数对于防止将带有非 &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;drag-with-header-line&lt;/code&gt; 参数的子框架完全拖出其父框架的区域非常有用。</target>
        </trans-unit>
        <trans-unit id="10409beb3adb01bf40f542ff77e3e5110bb6c63e" translate="yes" xml:space="preserve">
          <source>If this property is non-&lt;code&gt;nil&lt;/code&gt;, it specifies a keymap for a portion of the text. This keymap is used when the character after point is within the overlay, and takes precedence over most other keymaps. See &lt;a href=&quot;active-keymaps#Active-Keymaps&quot;&gt;Active Keymaps&lt;/a&gt;.</source>
          <target state="translated">如果此属性为非 &lt;code&gt;nil&lt;/code&gt; ，则它为文本的一部分指定一个键盘映射。当下一个字符位于叠加层之内时，将使用此键盘映射，并且优先于大多数其他键盘映射。请参阅&lt;a href=&quot;active-keymaps#Active-Keymaps&quot;&gt;活动键盘映射&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2d2b81550b31723ed604392c207f47173dad656f" translate="yes" xml:space="preserve">
          <source>If this property is non-&lt;code&gt;nil&lt;/code&gt;, the overlay is deleted automatically if it becomes empty (i.e., if its length becomes zero). If you give an empty overlay (see &lt;a href=&quot;managing-overlays#Managing-Overlays&quot;&gt;empty overlay&lt;/a&gt;) a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;evaporate&lt;/code&gt; property, that deletes it immediately. Note that, unless an overlay has this property, it will not be deleted when the text between its starting and ending positions is deleted from the buffer.</source>
          <target state="translated">如果此属性为非 &lt;code&gt;nil&lt;/code&gt; ，则如果覆盖层为空（即，其长度为零），则覆盖层会自动删除。如果你给一个空的叠加（见&lt;a href=&quot;managing-overlays#Managing-Overlays&quot;&gt;空覆盖&lt;/a&gt;）非 &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;evaporate&lt;/code&gt; 财产，立即将其删除。请注意，除非叠加层具有此属性，否则当从缓冲区中删除其开始位置和结束位置之间的文本时，不会删除它。</target>
        </trans-unit>
        <trans-unit id="10e35c6643ea67ea950c9d4d716db33c0599a8da" translate="yes" xml:space="preserve">
          <source>If this property is omitted, it defaults to 50.</source>
          <target state="translated">如果省略此属性,则默认为50。</target>
        </trans-unit>
        <trans-unit id="b5a662f58b04bc1493160f98949460c71e1112e3" translate="yes" xml:space="preserve">
          <source>If this user option is set to &lt;code&gt;t&lt;/code&gt; (the default), then Emacs asks for confirmation before killing processes on exit. If it is &lt;code&gt;nil&lt;/code&gt;, Emacs kills processes without confirmation, i.e., the query flag of all processes is ignored.</source>
          <target state="translated">如果此用户选项设置为 &lt;code&gt;t&lt;/code&gt; （默认值），则Emacs在终止退出进程之前会要求确认。如果为 &lt;code&gt;nil&lt;/code&gt; ，则Emacs将不经确认就终止进程，即，将忽略所有进程的查询标志。</target>
        </trans-unit>
        <trans-unit id="7f1aca46aaa1831df876a405f5ebfb2e74ca7800" translate="yes" xml:space="preserve">
          <source>If this variable has a non-&lt;code&gt;nil&lt;/code&gt; value (the default), running the command &lt;code&gt;eval-expression&lt;/code&gt; causes &lt;code&gt;debug-on-error&lt;/code&gt; to be temporarily bound to &lt;code&gt;t&lt;/code&gt;. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Lisp-Eval.html#Lisp-Eval&quot;&gt;Evaluating Emacs-Lisp Expressions&lt;/a&gt; in</source>
          <target state="translated">如果此变量具有非 &lt;code&gt;nil&lt;/code&gt; 值（缺省值），则运行命令 &lt;code&gt;eval-expression&lt;/code&gt; 会导致 &lt;code&gt;debug-on-error&lt;/code&gt; 临时绑定到 &lt;code&gt;t&lt;/code&gt; 。请参见中的&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Lisp-Eval.html#Lisp-Eval&quot;&gt;评估Emacs-Lisp表达式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dc406ae5e5fdc48715cf4643b78845c64944a962" translate="yes" xml:space="preserve">
          <source>If this variable has a non-&lt;code&gt;nil&lt;/code&gt; value, ISO-2022 escape sequences are ignored when detecting the encoding of a region or a string. The result is that no text is ever detected as encoded in some ISO-2022 encoding, and all escape sequences become visible in a buffer. &lt;strong&gt;Warning:&lt;/strong&gt;&lt;em&gt;Use this variable with extreme caution, because many files in the Emacs distribution use ISO-2022 encoding.&lt;/em&gt;</source>
          <target state="translated">如果该变量具有非 &lt;code&gt;nil&lt;/code&gt; 值，检测区域或字符串的编码时ISO-2022的转义序列被忽略。结果是，从未检测到任何文本以某种ISO-2022编码进行编码，并且所有转义序列在缓冲区中均可见。&lt;strong&gt;警告：&lt;/strong&gt;&lt;em&gt;请谨慎使用此变量，因为Emacs发行版中的许多文件都使用ISO-2022编码。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5da5197b312d51b191187d6196c20e10a6137205" translate="yes" xml:space="preserve">
          <source>If this variable has a non-&lt;code&gt;nil&lt;/code&gt; value, null bytes are ignored when detecting the encoding of a region or a string. This allows the encoding of text that contains null bytes to be correctly detected, such as Info files with Index nodes.</source>
          <target state="translated">如果此变量具有非 &lt;code&gt;nil&lt;/code&gt; 值，则在检测区域或字符串的编码时将忽略空字节。这样可以正确检测包含空字节的文本的编码，例如带有索引节点的信息文件。</target>
        </trans-unit>
        <trans-unit id="c373b5c3a8de63fb3cea0bba1d0eb1e3d3ef7af5" translate="yes" xml:space="preserve">
          <source>If this variable is &lt;code&gt;nil&lt;/code&gt; (the default), or it fails to match a filename, the backup is made in the original file&amp;rsquo;s directory.</source>
          <target state="translated">如果此变量为 &lt;code&gt;nil&lt;/code&gt; （默认值），或者它与文件名不匹配，那么将在原始文件的目录中进行备份。</target>
        </trans-unit>
        <trans-unit id="9b260f60b0da661c6386e4a8c57481caca5f924e" translate="yes" xml:space="preserve">
          <source>If this variable is &lt;code&gt;nil&lt;/code&gt; and the initial minibuffer contents are empty, the user may have to explicitly fetch the next history element to access a default value. If the variable is non-&lt;code&gt;nil&lt;/code&gt;, the initial minibuffer contents are always non-empty and the user can always request a default value by immediately typing</source>
          <target state="translated">如果此变量为 &lt;code&gt;nil&lt;/code&gt; 并且初始最小缓冲区内容为空，则用户可能必须显式获取下一个历史记录元素以访问默认值。如果变量为非 &lt;code&gt;nil&lt;/code&gt; ，则初始迷你缓冲区的内容始终为非空，并且用户始终可以通过立即键入来请求默认值</target>
        </trans-unit>
        <trans-unit id="4a377c85d375a1d05f2bc24d6a94706665f459b2" translate="yes" xml:space="preserve">
          <source>If this variable is &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;split-window&lt;/code&gt; can only split a window (denoted by &lt;var&gt;window&lt;/var&gt;) if &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s screen area is large enough to accommodate both itself and the new window.</source>
          <target state="translated">如果此变量为 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;split-window&lt;/code&gt; 只能在 &lt;var&gt;window&lt;/var&gt; 的屏幕区域足以容纳其自身和新窗口的情况下拆分窗口（以 &lt;var&gt;window&lt;/var&gt; 表示）。</target>
        </trans-unit>
        <trans-unit id="e5efa0bdf46c1cfda3ed747418a3db73ea898921" translate="yes" xml:space="preserve">
          <source>If this variable is &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;switch-to-buffer&lt;/code&gt; displays the buffer specified by &lt;var&gt;buffer-or-name&lt;/var&gt; at the position of that buffer&amp;rsquo;s &lt;code&gt;point&lt;/code&gt;. If this variable is &lt;code&gt;already-displayed&lt;/code&gt;, it tries to display the buffer at its previous position in the selected window, provided the buffer is currently displayed in some other window on any visible or iconified frame. If this variable is &lt;code&gt;t&lt;/code&gt;, &lt;code&gt;switch-to-buffer&lt;/code&gt; unconditionally tries to display the buffer at its previous position in the selected window.</source>
          <target state="translated">如果此变量为 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;switch-to-buffer&lt;/code&gt; 在该缓冲区的 &lt;code&gt;point&lt;/code&gt; 位置显示由 &lt;var&gt;buffer-or-name&lt;/var&gt; 指定的缓冲区。如果 &lt;code&gt;already-displayed&lt;/code&gt; 此变量，则只要缓冲区当前显示在某个其他窗口中任何可见或图标化帧上，它就会尝试在选定窗口中的先前位置显示缓冲区。如果此变量为 &lt;code&gt;t&lt;/code&gt; ，则 &lt;code&gt;switch-to-buffer&lt;/code&gt; 无条件尝试在选定窗口中的先前位置显示缓冲区。</target>
        </trans-unit>
        <trans-unit id="21114982217e29f559b82573a3eccc2b154e4432" translate="yes" xml:space="preserve">
          <source>If this variable is &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; may switch to any buffer, including those already shown in other windows.</source>
          <target state="translated">如果该变量是 &lt;code&gt;nil&lt;/code&gt; ， &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; 可以切换到任何缓冲器，包括在其他窗口已经示出的那些。</target>
        </trans-unit>
        <trans-unit id="d8a3d004b6873a2a169b03d65608121fffb72f67" translate="yes" xml:space="preserve">
          <source>If this variable is &lt;code&gt;nil&lt;/code&gt;, Emacs does not lock files.</source>
          <target state="translated">如果此变量为 &lt;code&gt;nil&lt;/code&gt; ，则Emacs不会锁定文件。</target>
        </trans-unit>
        <trans-unit id="89623922f044cdd08657525c28b20ee10211a651" translate="yes" xml:space="preserve">
          <source>If this variable is &lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;blink-matching-open&lt;/code&gt; does nothing.</source>
          <target state="translated">如果此变量为 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;blink-matching-open&lt;/code&gt; 不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="2cfb381e21594551805791d32d6d3364b07223cd" translate="yes" xml:space="preserve">
          <source>If this variable is &lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;read-from-minibuffer&lt;/code&gt; and &lt;code&gt;read-string&lt;/code&gt; strip all text properties from the minibuffer input before returning it. However, &lt;code&gt;read-no-blanks-input&lt;/code&gt; (see below), as well as &lt;code&gt;read-minibuffer&lt;/code&gt; and related functions (see &lt;a href=&quot;object-from-minibuffer#Object-from-Minibuffer&quot;&gt;Reading Lisp Objects With the Minibuffer&lt;/a&gt;), and all functions that do minibuffer input with completion, discard text properties unconditionally, regardless of the value of this variable.</source>
          <target state="translated">如果此变量为 &lt;code&gt;nil&lt;/code&gt; ， &lt;code&gt;read-from-minibuffer&lt;/code&gt; &lt;code&gt;read-string&lt;/code&gt; 和读取字符串从minibuffer输入中删除所有文本属性，然后再返回。但是， &lt;code&gt;read-no-blanks-input&lt;/code&gt; （请参见下文）以及 &lt;code&gt;read-minibuffer&lt;/code&gt; 和相关函数（请参阅&lt;a href=&quot;object-from-minibuffer#Object-from-Minibuffer&quot;&gt;使用Minibuffer读取Lisp对象&lt;/a&gt;）以及所有完成miniminibuffer输入的函数，无条件地丢弃文本属性，无论此变量的值。</target>
        </trans-unit>
        <trans-unit id="b1d0a7e3669bd5769ff2e4ddd7ec40d799965cf0" translate="yes" xml:space="preserve">
          <source>If this variable is &lt;code&gt;nil&lt;/code&gt;, this does not necessarily mean that any window showing the buffer can be resized in the desired direction. To determine that, use the function &lt;code&gt;window-resizable&lt;/code&gt;. See &lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;Resizing Windows&lt;/a&gt;.</source>
          <target state="translated">如果此变量为 &lt;code&gt;nil&lt;/code&gt; ，则不一定意味着可以在所需方向上调整显示缓冲区的任何窗口的大小。要确定这一点，请使用 &lt;code&gt;window-resizable&lt;/code&gt; 功能。请参阅&lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;调整Windows大小&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a14af0d500a6d6203f4039a676d4516a111cf6ae" translate="yes" xml:space="preserve">
          <source>If this variable is &lt;code&gt;nil&lt;/code&gt;, you cannot invoke minibuffer commands when the minibuffer is active, not even if you switch to another window to do it.</source>
          <target state="translated">如果此变量为 &lt;code&gt;nil&lt;/code&gt; ，则当微型缓冲区处于活动状态时，即使切换到另一个窗口也不能调用微型缓冲区命令。</target>
        </trans-unit>
        <trans-unit id="594867f6c30f7651767ce9e8c5f29e2d63c57c0c" translate="yes" xml:space="preserve">
          <source>If this variable is &lt;code&gt;t&lt;/code&gt;, &lt;code&gt;split-window&lt;/code&gt; tries to resize all windows that are part of the same combination as &lt;var&gt;window&lt;/var&gt;, in order to accommodate the new window. In particular, this may allow &lt;code&gt;split-window&lt;/code&gt; to succeed even if &lt;var&gt;window&lt;/var&gt; is a fixed-size window or too small to ordinarily split. Furthermore, subsequently resizing or deleting &lt;var&gt;window&lt;/var&gt; may resize all other windows in its combination.</source>
          <target state="translated">如果该变量是 &lt;code&gt;t&lt;/code&gt; ， &lt;code&gt;split-window&lt;/code&gt; 试图调整属于同一组合的一部分的所有窗口 &lt;var&gt;window&lt;/var&gt; ，以适应新的窗口。特别是，即使 &lt;var&gt;window&lt;/var&gt; 是固定大小的窗口或太小而无法正常 &lt;code&gt;split-window&lt;/code&gt; ，这也可以使拆分窗口成功。此外，随后调整 &lt;var&gt;window&lt;/var&gt; 大小或删除窗口可能会调整其组合中所有其他窗口的大小。</target>
        </trans-unit>
        <trans-unit id="d1240ec35ce1119433c9ff4d706e7e07c1704aa2" translate="yes" xml:space="preserve">
          <source>If this variable is &lt;code&gt;t&lt;/code&gt;, then saving a file deletes excess backup versions silently. If it is &lt;code&gt;nil&lt;/code&gt;, that means to ask for confirmation before deleting excess backups. Otherwise, they are not deleted at all.</source>
          <target state="translated">如果此变量为 &lt;code&gt;t&lt;/code&gt; ，则保存文件将静默删除多余的备份版本。如果为 &lt;code&gt;nil&lt;/code&gt; ，则意味着在删除多余的备份之前要求确认。否则，它们将不会被删除。</target>
        </trans-unit>
        <trans-unit id="20cf7005f85044b4fe10e90fbd2922b7f7fb99a9" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt; (the default), Emacs makes backups by copying in cases where renaming would change either the owner or the group of the file.</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; （默认值），则在重命名会更改文件所有者或文件组的情况下，Emacs会通过复制进行备份。</target>
        </trans-unit>
        <trans-unit id="6ac994bc716560b0f970621acd4b471ce55be78a" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt; when a command returns to the command loop, then the command loop does not check for those text properties, and does not move point out of sequences that have them.</source>
          <target state="translated">如果命令返回命令循环时此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则命令循环将不检查那些文本属性，也不会将指针移出具有它们的序列。</target>
        </trans-unit>
        <trans-unit id="bace1650d13777be92f95887dd4d32eecfa88f81" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;message&lt;/code&gt; and related functions call it with no arguments when their argument message is &lt;code&gt;nil&lt;/code&gt; or the empty string.</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则当 &lt;code&gt;message&lt;/code&gt; 和相关函数的自变量message为 &lt;code&gt;nil&lt;/code&gt; 或空字符串时，message和相关函数将不带自变量。</target>
        </trans-unit>
        <trans-unit id="c1f25dcc5e8473bcf19e57671b5e742689784221" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;read-buffer&lt;/code&gt; ignores case when performing completion while reading the buffer name.</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;read-buffer&lt;/code&gt; 在读取缓冲区名称时执行完成操作时将忽略大小写。</target>
        </trans-unit>
        <trans-unit id="bbc01c87c2c736a01297e40708d9bc2eea75308d" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;read-file-name&lt;/code&gt; ignores case when performing completion.</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则执行完成时， &lt;code&gt;read-file-name&lt;/code&gt; 忽略大小写。</target>
        </trans-unit>
        <trans-unit id="e1af2e516e1731ec5691914fe684ea6870a2bd9b" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;scan-sexps&lt;/code&gt; treats all non-</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;scan-sexps&lt;/code&gt; 将处理所有非</target>
        </trans-unit>
        <trans-unit id="2806dadd88bb70627d555c7ccdb2df2e87d6e884" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;sort-subr&lt;/code&gt; and the other buffer sorting functions ignore case when comparing strings.</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则在比较字符串时 &lt;code&gt;sort-subr&lt;/code&gt; 和其他缓冲区排序函数将忽略大小写。</target>
        </trans-unit>
        <trans-unit id="6c25756dd86611671f3153436090287d38ed5950" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;switch-to-buffer&lt;/code&gt; respects display actions specified by &lt;code&gt;display-buffer-overriding-action&lt;/code&gt;, &lt;code&gt;display-buffer-alist&lt;/code&gt; and other display related variables.</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;switch-to-buffer&lt;/code&gt; 遵守由 &lt;code&gt;display-buffer-overriding-action&lt;/code&gt; ， &lt;code&gt;display-buffer-alist&lt;/code&gt; 和其他与显示相关的变量指定的显示动作。</target>
        </trans-unit>
        <trans-unit id="2d9323d5a2f41b361036ddb3df85eeaea1baaabe" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; will refrain from switching to certain buffers. The following values can be used:</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; 将避免切换到某些缓冲区。可以使用以下值：</target>
        </trans-unit>
        <trans-unit id="6f8b633c15af3635e4d6fb6a6c0f5084235f704f" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt; calls it as a function to do the job of displaying a help buffer. The function gets one argument, which is the buffer it should display.</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt; 会将其作为函数来显示帮助缓冲区。该函数获得一个参数，这是它应显示的缓冲区。</target>
        </trans-unit>
        <trans-unit id="b45139ff1fb7adc7b74e6d5409a3a5983efc470b" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, Emacs always makes backup files by copying. The default is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则Emacs始终通过复制来制作备份文件。默认值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1d51063434f8bbb63a99074f83c5e64c82816980" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, Emacs auto-saves buffers in the files they are visiting. That is, the auto-save is done in the same file that you are editing. Normally, this variable is &lt;code&gt;nil&lt;/code&gt;, so auto-save files have distinct names that are created by &lt;code&gt;make-auto-save-file-name&lt;/code&gt;.</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则Emacs会在其访问的文件中自动保存缓冲区。也就是说，自动保存是在您正在编辑的同一文件中完成的。通常，此变量为 &lt;code&gt;nil&lt;/code&gt; ，因此自动保存文件具有由 &lt;code&gt;make-auto-save-file-name&lt;/code&gt; 创建的不同名称。</target>
        </trans-unit>
        <trans-unit id="834c09bab1aa496311263cf0de3e2ca620518527" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, Emacs displays a message at the beginning and end of garbage collection. The default value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则Emacs在垃圾回收的开始和结束时显示一条消息。默认值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c3633f89136bf7feadfc976095b51e28ac6f62fd" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, Emacs does not look up X resources, and X resources do not have any effect when creating new frames.</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则Emacs不会查找X资源，并且X资源在创建新框架时没有任何作用。</target>
        </trans-unit>
        <trans-unit id="207397c1e70879d418a5aeb0b3721f4a98bea246" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, Emacs makes backups by copying for files with multiple names (hard links). The default is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则Emacs通过复制具有多个名称（硬链接）的文件来进行备份。默认值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4133361e941fb85b4b5864cbd4b84b18bec370a2" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, Emacs will try to automatically select the window under the mouse pointer. The following values are meaningful:</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则Emacs将尝试自动选择鼠标指针下方的窗口。以下值是有意义的：</target>
        </trans-unit>
        <trans-unit id="3f388d3d4bc61aef5a9232085d49b686ff163ff7" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, a period followed by just one space does not count as the end of a sentence, and the filling functions avoid breaking the line at such a place.</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则仅将一个空格后面的句点不算作句子的结尾，并且填充函数可避免在该位置处断行。</target>
        </trans-unit>
        <trans-unit id="950d5268ecb65fd2680e60c1d248cc988f2f3806" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, a sentence can end without a period. This is used for languages like Thai, where sentences end with a double space but without a period.</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则句子可以不加句号结束。这用于泰语等语言，其中句子以双倍空格结尾但没有句点。</target>
        </trans-unit>
        <trans-unit id="d3d32a32adfb3aeef6215fd4bfb85130c2a123e8" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, all of the change hooks are disabled; none of them run. This affects all the hook variables described above in this section, as well as the hooks attached to certain special text properties (see &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Special Properties&lt;/a&gt;) and overlay properties (see &lt;a href=&quot;overlay-properties#Overlay-Properties&quot;&gt;Overlay Properties&lt;/a&gt;).</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则禁用所有更改挂钩；否则，将禁用所有更改挂钩。他们都没有跑。这会影响本节中上述所有钩子变量，以及附加到某些特殊文本属性（请参见&lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Special Properties&lt;/a&gt;）和覆盖属性（请参见&lt;a href=&quot;overlay-properties#Overlay-Properties&quot;&gt;Overlay Properties&lt;/a&gt;）的钩子。</target>
        </trans-unit>
        <trans-unit id="2ffc9890d3b90ef1f3080654443150dd4bbab62b" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, backups are inhibited. It records the result of testing &lt;code&gt;backup-enable-predicate&lt;/code&gt; on the visited file name. It can also coherently be used by other mechanisms that inhibit backups based on which file is visited. For example, VC sets this variable non-&lt;code&gt;nil&lt;/code&gt; to prevent making backups for files managed with a version control system.</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则禁止备份。它在访问的文件名上记录测试 &lt;code&gt;backup-enable-predicate&lt;/code&gt; 的结果。其他机制也可以基于访问哪个文件来禁止备份，从而一致地使用它。例如，VC将此变量设置为 &lt;code&gt;nil&lt;/code&gt; ,以防止对使用版本控制系统管理的文件进行备份。</target>
        </trans-unit>
        <trans-unit id="dbec36e38f19eeb11c146f8269324b7fdf70520f" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, buffers that are visiting files have auto-saving enabled by default. Otherwise, they do not.</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则默认情况下，正在访问文件的缓冲区已启用自动保存。否则，他们不会。</target>
        </trans-unit>
        <trans-unit id="025314b7262d14c39abfca6e9831f30272667c3e" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, calling &lt;code&gt;recenter&lt;/code&gt; with a &lt;code&gt;nil&lt;/code&gt;&lt;var&gt;count&lt;/var&gt; argument and non-&lt;code&gt;nil&lt;/code&gt;&lt;var&gt;redisplay&lt;/var&gt; argument redraws the frame. The default value is &lt;code&gt;tty&lt;/code&gt;, which means only redraw the frame if it is a tty frame.</source>
          <target state="translated">如果该变量为非 &lt;code&gt;nil&lt;/code&gt; ，调用 &lt;code&gt;recenter&lt;/code&gt; 具有 &lt;code&gt;nil&lt;/code&gt; &lt;var&gt;count&lt;/var&gt; 参数和非 &lt;code&gt;nil&lt;/code&gt; &lt;var&gt;redisplay&lt;/var&gt; 参数重绘帧。默认值为 &lt;code&gt;tty&lt;/code&gt; ，这意味着仅当它是tty框架时才重画该框架。</target>
        </trans-unit>
        <trans-unit id="3494024f21dd122ec5225998d1cc7fc1f54d85a6" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, certain motion functions including &lt;code&gt;forward-word&lt;/code&gt;, &lt;code&gt;forward-sentence&lt;/code&gt;, and &lt;code&gt;forward-paragraph&lt;/code&gt; ignore field boundaries.</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则某些运动功能（包括 &lt;code&gt;forward-word&lt;/code&gt; ， &lt;code&gt;forward-sentence&lt;/code&gt; 和 &lt;code&gt;forward-paragraph&lt;/code&gt; 会忽略字段边界。</target>
        </trans-unit>
        <trans-unit id="bd0f3e86b9ecff032bd540684c751ffd8dd5b909" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, commands defined with &lt;code&gt;make-help-screen&lt;/code&gt; display their &lt;var&gt;help-line&lt;/var&gt; strings in the echo area at first, and display the longer &lt;var&gt;help-text&lt;/var&gt; strings only if the user types the help character again.</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则使用 &lt;code&gt;make-help-screen&lt;/code&gt; 定义的命令首先在回显区域显示其 &lt;var&gt;help-line&lt;/var&gt; 字符串，并且仅当用户再次键入帮助字符时才显示较长的 &lt;var&gt;help-text&lt;/var&gt; 字符串。</target>
        </trans-unit>
        <trans-unit id="9750f1edf74db0b608b6fccefea113c32bd8ce2e" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, control characters in strings are printed as backslash sequences by the print functions &lt;code&gt;prin1&lt;/code&gt; and &lt;code&gt;print&lt;/code&gt; that print with quoting. If this variable and &lt;code&gt;print-escape-newlines&lt;/code&gt; are both non-&lt;code&gt;nil&lt;/code&gt;, the latter takes precedences for newlines and formfeeds.</source>
          <target state="translated">如果该变量是不 &lt;code&gt;nil&lt;/code&gt; ，在串控制字符打印由打印功能反斜杠序列 &lt;code&gt;prin1&lt;/code&gt; 和 &lt;code&gt;print&lt;/code&gt; 该打印带引用。如果此变量和 &lt;code&gt;print-escape-newlines&lt;/code&gt; 都为 &lt;code&gt;nil&lt;/code&gt; ，则后者优先于换行和换页。</target>
        </trans-unit>
        <trans-unit id="0ebcf8ab557e661172fe9de6982d3f1cecc78d63" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, every stack frame of the backtrace is displayed as a list. This aims at improving the backtrace readability at the cost of special forms no longer being visually different from regular function calls.</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则回溯的每个堆栈帧都将显示为列表。这样做的目的是以特殊形式的形式来提高回溯的可读性，这些形式在视觉上不再与常规函数调用不同。</target>
        </trans-unit>
        <trans-unit id="825abb330d17f730939fccaedf4a9b54362af1aa" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, face filters that specify attributes applied only when certain conditions are met will be deemed to match always.</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则指定仅在满足某些条件时应用的属性的面部过滤器将被视为始终匹配。</target>
        </trans-unit>
        <trans-unit id="73b99057e876adfddae006656294be7fad80418d" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, indentation functions can insert tabs as well as spaces. Otherwise, they insert only spaces. Setting this variable automatically makes it buffer-local in the current buffer.</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则缩进功能可以插入制表符和空格。否则，它们仅插入空格。自动设置此变量将使其在当前缓冲区中位于本地缓冲区中。</target>
        </trans-unit>
        <trans-unit id="e475f46321e795ba81086b40cd4690ce691cace1" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, it is used instead of &lt;code&gt;system-name&lt;/code&gt; for purposes of generating email addresses. For example, it is used when constructing the default value of &lt;code&gt;user-mail-address&lt;/code&gt;. See &lt;a href=&quot;user-identification#User-Identification&quot;&gt;User Identification&lt;/a&gt;.</source>
          <target state="translated">如果此变量为non- &lt;code&gt;nil&lt;/code&gt; ，则使用它代替 &lt;code&gt;system-name&lt;/code&gt; 来生成电子邮件地址。例如，在构造 &lt;code&gt;user-mail-address&lt;/code&gt; 的默认值时使用它。请参阅&lt;a href=&quot;user-identification#User-Identification&quot;&gt;用户标识&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4a72e135e2602c7ab3b2c6d5205e6df8a8c1f366" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, it means that the user plans to use global abbrevs only. This tells the commands that define mode-specific abbrevs to define global ones instead. This variable does not alter the behavior of the functions in this section; it is examined by their callers.</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则意味着用户计划仅使用全局缩写。这告诉定义特定于模式的缩写的命令改为定义全局缩写。该变量不会改变本节中功能的行为；由呼叫者检查。</target>
        </trans-unit>
        <trans-unit id="28a614e5388ec41951b4289105842e28d7c742aa" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, it prevents Emacs from loading the default initialization library file. The default value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则它将阻止Emacs加载默认的初始化库文件。默认值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="01405602d1f9c9c7910f4c21fb957b674e7f4e15" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, it says to call the debugger before the next &lt;code&gt;eval&lt;/code&gt;, &lt;code&gt;apply&lt;/code&gt; or &lt;code&gt;funcall&lt;/code&gt;. Entering the debugger sets &lt;code&gt;debug-on-next-call&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则表示在下一个 &lt;code&gt;eval&lt;/code&gt; ， &lt;code&gt;apply&lt;/code&gt; 或 &lt;code&gt;funcall&lt;/code&gt; 之前调用调试器。进入调试器，将 &lt;code&gt;debug-on-next-call&lt;/code&gt; 设置为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="530af39356cdaa6611678480707bf74e936dfaf2" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, it should be a function of one argument, the text of a message to display in the echo area. This function will be called by &lt;code&gt;message&lt;/code&gt; and related functions. If the function returns &lt;code&gt;nil&lt;/code&gt;, the message is displayed in the echo area as usual. If this function returns a string, that string is displayed in the echo area instead of the original one. If this function returns other non-&lt;code&gt;nil&lt;/code&gt; values, that means the message was already handled, so &lt;code&gt;message&lt;/code&gt; will not display anything in the echo area. See also &lt;code&gt;clear-message-function&lt;/code&gt; that can be used to clear the message displayed by this function.</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则它应该是一个参数的函数，该参数是要在回显区域中显示的消息文本。该功能将由 &lt;code&gt;message&lt;/code&gt; 和相关功能调用。如果函数返回 &lt;code&gt;nil&lt;/code&gt; ，则消息将照常显示在回显区域中。如果此函数返回一个字符串，则该字符串将显示在回显区域中，而不是原始字符串中。如果这个函数返回其他非 &lt;code&gt;nil&lt;/code&gt; 值，这意味着该消息已经被处理，所以 &lt;code&gt;message&lt;/code&gt; 不会显示在回声区东西。另请参阅 &lt;code&gt;clear-message-function&lt;/code&gt; ，该功能可用于清除此功能显示的消息。</target>
        </trans-unit>
        <trans-unit id="e2ad2623c2c20ffd237a9f8ff4f6b25a14cd11ae" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, it should be a function that is called with no arguments, to choose an enclosing range of text for refontification for the command</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则应为不带参数调用的函数，以选择一个封闭的文本范围来重新命名命令</target>
        </trans-unit>
        <trans-unit id="5e34de40cdee34dbcbae19ce1c28736a9aabb232" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, it should be a function to determine which face to use for a given syntactic element (a string or a comment).</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则它应该是确定给定句法元素（字符串或注释）使用哪张面孔的函数。</target>
        </trans-unit>
        <trans-unit id="736539861dd446a2363faa03b08be25dfdb36758" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, it should be a regular expression that says how to search for whitespace. In that case, any group of spaces in a regular expression being searched for stands for use of this regular expression. However, spaces inside of constructs such as &amp;lsquo;</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则应为正则表达式，说明如何搜索空格。在这种情况下，将搜索正则表达式中的任何空格组以表示正则表达式的使用。但是，诸如&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="94da8319895436b58271d8d72a7d99fdf5bd1757" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, it should be a string of characters that can end a sentence without following spaces.</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则应为一串可以结束句子而不能使用空格的字符串。</target>
        </trans-unit>
        <trans-unit id="9e8a33451a4e0e6e7f790a3cc598efe8a089d8fa" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, it specifies a function called to display help strings. These may be &lt;code&gt;help-echo&lt;/code&gt; properties, menu help strings (see &lt;a href=&quot;simple-menu-items#Simple-Menu-Items&quot;&gt;Simple Menu Items&lt;/a&gt;, see &lt;a href=&quot;extended-menu-items#Extended-Menu-Items&quot;&gt;Extended Menu Items&lt;/a&gt;), or tool bar help strings (see &lt;a href=&quot;tool-bar#Tool-Bar&quot;&gt;Tool Bar&lt;/a&gt;). The specified function is called with one argument, the help string to display, which is passed through &lt;code&gt;substitute-command-keys&lt;/code&gt; before being given to the function, unless the help string has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;help-echo-inhibit-substitution&lt;/code&gt; property on its first character; see &lt;a href=&quot;keys-in-documentation#Keys-in-Documentation&quot;&gt;Keys in Documentation&lt;/a&gt;. See the code of Tooltip mode (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Tooltips.html#Tooltips&quot;&gt;Tooltips&lt;/a&gt; in</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则它指定一个调用以显示帮助字符串的函数。这些可能是 &lt;code&gt;help-echo&lt;/code&gt; 属性，菜单帮助字符串（请参阅&amp;ldquo;&lt;a href=&quot;simple-menu-items#Simple-Menu-Items&quot;&gt;简单菜单项&amp;rdquo;&lt;/a&gt;，&amp;ldquo;&lt;a href=&quot;extended-menu-items#Extended-Menu-Items&quot;&gt;扩展菜单项&amp;rdquo;&lt;/a&gt;）或工具栏帮助字符串（请参见&lt;a href=&quot;tool-bar#Tool-Bar&quot;&gt;Tool Bar&lt;/a&gt;）。指定的函数将使用一个参数（要显示的帮助字符串）进行调用，该参数在提供给该函数之前先通过 &lt;code&gt;substitute-command-keys&lt;/code&gt; 传递，除非该帮助字符串在其字符串上具有非 &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;help-echo-inhibit-substitution&lt;/code&gt; 属性第一个字符；请参阅&lt;a href=&quot;keys-in-documentation#Keys-in-Documentation&quot;&gt;文档中的键&lt;/a&gt;。参阅工具提示模式的代码（参见&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Tooltips.html#Tooltips&quot;&gt;工具提示&lt;/a&gt;中</target>
        </trans-unit>
        <trans-unit id="4287285430bf7978ba440dfcc104a76072b43a35" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, it specifies the coding system to use for reading a file, or for input from a synchronous subprocess.</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则它指定用于读取文件或来自同步子进程的输入的编码系统。</target>
        </trans-unit>
        <trans-unit id="3c10b413e9e836ba3f5eb5e379ef529e4a062a92" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, it specifies the initial execution mode for Edebug when it is first activated. Possible values are &lt;code&gt;step&lt;/code&gt;, &lt;code&gt;next&lt;/code&gt;, &lt;code&gt;go&lt;/code&gt;, &lt;code&gt;Go-nonstop&lt;/code&gt;, &lt;code&gt;trace&lt;/code&gt;, &lt;code&gt;Trace-fast&lt;/code&gt;, &lt;code&gt;continue&lt;/code&gt;, and &lt;code&gt;Continue-fast&lt;/code&gt;.</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则它在首次激活时为Edebug指定初始执行模式。可能的值是 &lt;code&gt;step&lt;/code&gt; ， &lt;code&gt;next&lt;/code&gt; ， &lt;code&gt;go&lt;/code&gt; ， &lt;code&gt;Go-nonstop&lt;/code&gt; ， &lt;code&gt;trace&lt;/code&gt; ， &lt;code&gt;Trace-fast&lt;/code&gt; ， &lt;code&gt;continue&lt;/code&gt; ，并 &lt;code&gt;Continue-fast&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="940530d5bdee4613d57b898314fac2eba6763217" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, it tells &lt;code&gt;scroll-other-window&lt;/code&gt; which buffer&amp;rsquo;s window to scroll.</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，它将告诉 &lt;code&gt;scroll-other-window&lt;/code&gt; 滚动哪个缓冲区的窗口。</target>
        </trans-unit>
        <trans-unit id="796d64fb0f974a198f156df00380fe8b383a4f59" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, its value is a form to evaluate whenever the character &lt;code&gt;help-char&lt;/code&gt; is read. If evaluating the form produces a string, that string is displayed.</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则其值是一种在读取字符 &lt;code&gt;help-char&lt;/code&gt; 时求值的形式。如果评估表单产生一个字符串，则会显示该字符串。</target>
        </trans-unit>
        <trans-unit id="4cd924a70c5a5420e03b4274b724474270d013cd" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, its value should be a function that finds the next definition to put in the buffer index, scanning backward in the buffer from point. It should return &lt;code&gt;nil&lt;/code&gt; if it doesn&amp;rsquo;t find another definition before point. Otherwise it should leave point at the place it finds a definition and return any non-&lt;code&gt;nil&lt;/code&gt; value.</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则其值应为一个函数，该函数查找要放入缓冲区索引的下一个定义，并从该点向后扫描缓冲区。如果在点之前没有找到其他定义，则应返回 &lt;code&gt;nil&lt;/code&gt; 。否则，它应该找到一个清晰的地方留下点和返回任何非 &lt;code&gt;nil&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="5966261c0c16f735efd5e99361f20e922539db62" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, its value should be a function to return the name for a definition, assuming point is in that definition as the &lt;code&gt;imenu-prev-index-position-function&lt;/code&gt; function would leave it.</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则其值应为返回定义名称的函数，假设point在该定义中，因为 &lt;code&gt;imenu-prev-index-position-function&lt;/code&gt; 函数会将其保留。</target>
        </trans-unit>
        <trans-unit id="1f013b1f0ed05ce1ab2df32aa0fef5d09e538287" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, some standard functions do not process window parameters. The functions currently affected by this are &lt;code&gt;split-window&lt;/code&gt;, &lt;code&gt;delete-window&lt;/code&gt;, &lt;code&gt;delete-other-windows&lt;/code&gt;, and &lt;code&gt;other-window&lt;/code&gt;.</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则某些标准函数不会处理窗口参数。当前受此影响的功能是 &lt;code&gt;split-window&lt;/code&gt; ， &lt;code&gt;delete-window&lt;/code&gt; ， &lt;code&gt;delete-other-windows&lt;/code&gt; 和 &lt;code&gt;other-window&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="03c7c4d79ccb4d42f80c3d18e6c04a8e755e29f2" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, the &lt;code&gt;line-move&lt;/code&gt;, &lt;code&gt;scroll-up&lt;/code&gt;, and &lt;code&gt;scroll-down&lt;/code&gt; functions will automatically modify the vertical scroll position to scroll through display rows that are taller than the height of the window, for example in the presence of large images.</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;line-move&lt;/code&gt; ， &lt;code&gt;scroll-up&lt;/code&gt; 和 &lt;code&gt;scroll-down&lt;/code&gt; 功能将自动修改垂直滚动位置，以滚动显示高于窗口高度的显示行，例如在存在大图像。</target>
        </trans-unit>
        <trans-unit id="5f51c12f5aa3e060488bafd691e3268772c08c8b" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, the completion commands automatically display a list of possible completions whenever nothing can be completed because the next character is not uniquely determined.</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则由于无法唯一确定下一个字符而无法完成任何操作时，完成命令会自动显示可能完成的列表。</target>
        </trans-unit>
        <trans-unit id="21443464bd01045a5e435e1de5bf762da34a42e1" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, the filling functions do not delete newlines that have the &lt;code&gt;hard&lt;/code&gt; text property. These hard newlines act as paragraph separators. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Hard-and-Soft-Newlines.html#Hard-and-Soft-Newlines&quot;&gt;Hard and Soft Newlines&lt;/a&gt; in</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则填充函数不会删除具有 &lt;code&gt;hard&lt;/code&gt; 文本属性的换行符。这些硬的换行符用作段落分隔符。见&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Hard-and-Soft-Newlines.html#Hard-and-Soft-Newlines&quot;&gt;硬和软换行符&lt;/a&gt;在</target>
        </trans-unit>
        <trans-unit id="679fbd7d9ffa305c2784992adda94271941edb90" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, the function &lt;code&gt;yank-pop&lt;/code&gt; uses its value instead of &lt;code&gt;delete-region&lt;/code&gt; to delete the text inserted by the previous &lt;code&gt;yank&lt;/code&gt; or &lt;code&gt;yank-pop&lt;/code&gt; command. The value must be a function of two arguments, the start and end of the current region.</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则函数 &lt;code&gt;yank-pop&lt;/code&gt; 使用其值而不是 &lt;code&gt;delete-region&lt;/code&gt; 来删除由上一个 &lt;code&gt;yank&lt;/code&gt; 或 &lt;code&gt;yank-pop&lt;/code&gt; 命令插入的文本。该值必须是两个参数的函数，即当前区域的开始和结束。</target>
        </trans-unit>
        <trans-unit id="93a2434654ec45e739de56657a18ff8876d78ad0" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, the prefixes specified by a group&amp;rsquo;s &lt;code&gt;:prefix&lt;/code&gt; keyword are omitted from tag names, whenever the user customizes the group.</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则每当用户自定义组时，将从标签名称中省略由组的 &lt;code&gt;:prefix&lt;/code&gt; 关键字指定的前缀。</target>
        </trans-unit>
        <trans-unit id="e5d159208606e32b48fc2d1b9aded69f5b4066fd" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, the tool bar automatically resizes to show all defined tool bar items&amp;mdash;but not larger than a quarter of the frame&amp;rsquo;s height.</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则工具栏将自动调整大小以显示所有已定义的工具栏项目，但不大于框架高度的四分之一。</target>
        </trans-unit>
        <trans-unit id="13e280ca7f80fc8854be1c34c381f58c33201e02" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, the value of &lt;code&gt;overriding-local-map&lt;/code&gt; or &lt;code&gt;overriding-terminal-local-map&lt;/code&gt; can affect the display of the menu bar. The default value is &lt;code&gt;nil&lt;/code&gt;, so those map variables have no effect on the menu bar.</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;overriding-local-map&lt;/code&gt; 或 &lt;code&gt;overriding-terminal-local-map&lt;/code&gt; 的值可能会影响菜单栏的显示。默认值为 &lt;code&gt;nil&lt;/code&gt; ，因此那些映射变量对菜单栏无效。</target>
        </trans-unit>
        <trans-unit id="4124d763334c8a7421ef5e7e0065624fb83c8f7c" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;save-buffer&lt;/code&gt; protects against I/O errors while saving by writing the new file to a temporary name instead of the name it is supposed to have, and then renaming it to the intended name after it is clear there are no errors. This procedure prevents problems such as a lack of disk space from resulting in an invalid file.</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;save-buffer&lt;/code&gt; 时通过将新文件写入临时名称（而不是其应有的名称），然后将其重命名为预期的名称，保存缓冲区可防止I / O错误。清除没有错误。此过程可防止诸如磁盘空间不足之类的问题导致文件无效。</target>
        </trans-unit>
        <trans-unit id="af993b034155d780baaff868c13c3f78dad09007" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, then Emacs quits immediately, unless &lt;code&gt;inhibit-quit&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;. Typing</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则Emacs会立即退出，除非 &lt;code&gt;inhibit-quit&lt;/code&gt; 为非 &lt;code&gt;nil&lt;/code&gt; 。打字</target>
        </trans-unit>
        <trans-unit id="76218ba9f2ed8739a1159ea14cb27b16675a7947" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, then multibyte non-</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则多字节非-</target>
        </trans-unit>
        <trans-unit id="347e0ea47aafb7add84c5d8c171d6c7c19355bd0" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, then newline characters in strings are printed as &amp;lsquo;</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则字符串中的换行符将打印为'</target>
        </trans-unit>
        <trans-unit id="6c347410c56038a6f8cb71013d4d57ee168183fc" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, then read-only buffers and, depending on the actual value, some or all read-only characters may be modified. Read-only characters in a buffer are those that have a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;read-only&lt;/code&gt; text property. See &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Special Properties&lt;/a&gt;, for more information about text properties.</source>
          <target state="translated">如果此变量为non - &lt;code&gt;nil&lt;/code&gt; ，则为只读缓冲区，并且根据实际值，可能会修改部分或全部只读字符。只读在缓冲区中的字符是那些具有非 &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;read-only&lt;/code&gt; 文本属性。有关文本属性的更多信息，请参见&lt;a href=&quot;special-properties#Special-Properties&quot;&gt;特殊属性&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0b2ed4fbebaf5d95d00f7d374e99d6b6f8a364f2" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, then the various &lt;code&gt;find-file&lt;/code&gt; commands check for wildcard characters and visit all the files that match them (when invoked interactively or when their &lt;var&gt;wildcards&lt;/var&gt; argument is non-&lt;code&gt;nil&lt;/code&gt;). If this option is &lt;code&gt;nil&lt;/code&gt;, then the &lt;code&gt;find-file&lt;/code&gt; commands ignore their &lt;var&gt;wildcards&lt;/var&gt; argument and never treat wildcard characters specially.</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则各种 &lt;code&gt;find-file&lt;/code&gt; 命令将检查通配符并访问与之匹配的所有文件（以交互方式调用时或当其 &lt;var&gt;wildcards&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ）。如果此选项为 &lt;code&gt;nil&lt;/code&gt; ，那么 &lt;code&gt;find-file&lt;/code&gt; 命令将忽略其 &lt;var&gt;wildcards&lt;/var&gt; 参数，并且从不对通配符进行特殊处理。</target>
        </trans-unit>
        <trans-unit id="c78c42547923adcce6905297eaf8af608611acc0" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, then unibyte non-</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则为单字节非-</target>
        </trans-unit>
        <trans-unit id="6647182cae9f951d8aeda46add5a82e6ede0ce3e" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, tool bar items display in raised form when the mouse moves over them.</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则当鼠标移到工具栏项上时，工具栏项将以凸起的形式显示。</target>
        </trans-unit>
        <trans-unit id="8dfab937b0b83165d5343abdad293917abfa1c29" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, two words of different kind (e.g., English and CJK) will be separated with a space when concatenating one that is in the end of a line and the other that is in the beginning of the next line for filling.</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则在连接一个位于行尾的字符串和另一个位于下一行开头的字符串时，两个不同类型的单词（例如，英语和CJK）将以空格分隔。填充。</target>
        </trans-unit>
        <trans-unit id="fa1c4b04a8d4d70822b089390ffdf01fa17e5734" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, when the undo info exceeds &lt;code&gt;undo-outer-limit&lt;/code&gt;, Emacs asks in the echo area whether to discard the info. The default value is &lt;code&gt;nil&lt;/code&gt;, which means to discard it automatically.</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则当撤消信息超出 &lt;code&gt;undo-outer-limit&lt;/code&gt; 时，Emacs将在回显区域中询问是否丢弃该信息。默认值为 &lt;code&gt;nil&lt;/code&gt; ，这意味着将自动丢弃它。</target>
        </trans-unit>
        <trans-unit id="fa5ff03c3e322d8d21fa31e2c5f3c569a8fff9a1" translate="yes" xml:space="preserve">
          <source>If this variable is non-&lt;code&gt;nil&lt;/code&gt;, you can invoke commands (such as &lt;code&gt;find-file&lt;/code&gt;) that use minibuffers even while the minibuffer is active. Such invocation produces a recursive editing level for a new minibuffer. The outer-level minibuffer is invisible while you are editing the inner one.</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则即使微型缓冲区处于活动状态，您也可以调用使用微型缓冲区的命令（例如 &lt;code&gt;find-file&lt;/code&gt; ）。这样的调用会为新的迷你缓冲区产生递归编辑级别。在编辑内部的迷你缓冲区时，外部的迷你缓冲区不可见。</target>
        </trans-unit>
        <trans-unit id="7987f4ed83976384243a666b286c2798956277e4" translate="yes" xml:space="preserve">
          <source>If this variable&amp;rsquo;s value is &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;write-region&lt;/code&gt; uses the &lt;code&gt;fsync&lt;/code&gt; system call after writing a file. Although this slows Emacs down, it lessens the risk of data loss after power failure. If the value is &lt;code&gt;t&lt;/code&gt;, Emacs does not use &lt;code&gt;fsync&lt;/code&gt;. The default value is &lt;code&gt;nil&lt;/code&gt; when Emacs is interactive, and &lt;code&gt;t&lt;/code&gt; when Emacs runs in batch mode. See &lt;a href=&quot;files-and-storage#Files-and-Storage&quot;&gt;Files and Storage&lt;/a&gt;.</source>
          <target state="translated">如果此变量的值为 &lt;code&gt;nil&lt;/code&gt; ，则在写入文件后， &lt;code&gt;write-region&lt;/code&gt; 将使用 &lt;code&gt;fsync&lt;/code&gt; 系统调用。尽管这会降低Emacs的速度，但可以降低断电后数据丢失的风险。如果值为 &lt;code&gt;t&lt;/code&gt; ，则Emacs不使用 &lt;code&gt;fsync&lt;/code&gt; 。当Emacs是交互式的时，默认值为 &lt;code&gt;nil&lt;/code&gt; ;当Emacs以批处理模式运行时，默认值为 &lt;code&gt;t&lt;/code&gt; 。请参阅&lt;a href=&quot;files-and-storage#Files-and-Storage&quot;&gt;文件和存储&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a8c9dc8dcf95bb83031625a9f5835f26578f929b" translate="yes" xml:space="preserve">
          <source>If this variable&amp;rsquo;s value is non-&lt;code&gt;nil&lt;/code&gt;, an open parenthesis in column 0 is considered to be the start of a defun. If it is &lt;code&gt;nil&lt;/code&gt;, an open parenthesis in column 0 has no special meaning. The default is &lt;code&gt;t&lt;/code&gt;. If a string literal happens to have a parenthesis in column 0, escape it with a backslash to avoid a false positive.</source>
          <target state="translated">如果此变量的值为 &lt;code&gt;nil&lt;/code&gt; ，则将列0中的右括号视为defun的开始。如果为 &lt;code&gt;nil&lt;/code&gt; ，则第0列中的右括号没有特殊含义。默认值为 &lt;code&gt;t&lt;/code&gt; 。如果字符串文字恰好在第0列中带有括号，请使用反斜杠对其进行转义以避免误报。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
