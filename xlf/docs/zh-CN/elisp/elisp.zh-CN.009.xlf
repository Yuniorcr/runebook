<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="elisp">
    <body>
      <group id="elisp">
        <trans-unit id="57fd3b99c89cac9b015ac961b28c9cf44c0be4ce" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;smie-rule-next-p&lt;/strong&gt;&lt;em&gt;&amp;amp;rest tokens&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;smie-rule-next-p &lt;/strong&gt;&lt;em&gt;＆rest令牌&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="576da7eb86008d3d58a3527e4728f627216e70d9" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;smie-rule-parent-p&lt;/strong&gt;&lt;em&gt;&amp;amp;rest parents&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;smie-rule-parent-p &lt;/strong&gt;&lt;em&gt;＆rest父母&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6d55df3f4a89a791af1edfba5e43983786f3f0bc" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;smie-rule-parent&lt;/strong&gt;&lt;em&gt;&amp;amp;optional offset&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;smie-rule-parent&lt;/strong&gt;&lt;em&gt;和可选的偏移量&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="931d392a055184403f0fa27020296ce9e14481d3" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;smie-rule-prev-p&lt;/strong&gt;&lt;em&gt;&amp;amp;rest tokens&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;smie-rule-prev-p &lt;/strong&gt;&lt;em&gt;＆rest令牌&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f77d79c3cb8eb196f0e8d3e14a4601835d745b57" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;smie-rule-separator&lt;/strong&gt;&lt;em&gt;method&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;smie-rule-分隔符&lt;/strong&gt;&lt;em&gt;方法&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bab1a0d0c96b452a6482a86a3bad99109d88007d" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;smie-rule-sibling-p&lt;/strong&gt;</source>
          <target state="translated">功能：&lt;strong&gt;smie-rule-sibling-p&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="74087efbdea0102aba8deb87707895661a297899" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;smie-setup&lt;/strong&gt;&lt;em&gt;grammar rules-function &amp;amp;rest keywords&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;smie-setup&lt;/strong&gt;&lt;em&gt;语法规则&lt;/em&gt;&lt;strong&gt;-function &lt;/strong&gt;&lt;em&gt;＆rest关键字&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="793caede0616ac66a8456a922c0b899fae20c1f0" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;sort-subr&lt;/strong&gt;&lt;em&gt;reverse nextrecfun endrecfun &amp;amp;optional startkeyfun endkeyfun predicate&lt;/em&gt;</source>
          <target state="translated">函数：&lt;strong&gt;sort-subr&lt;/strong&gt;&lt;em&gt;反向nextrecfun endrecfun和可选的startkeyfun endkeyfun谓词&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="65014cdb10106fe65a4668873cfdb09eb5c057f6" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;sort&lt;/strong&gt;&lt;em&gt;sequence predicate&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;排序&lt;/strong&gt;&lt;em&gt;顺序谓词&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5013c25748ea8edbc14eb14a0669adf7c8951945" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;special-form-p&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;特殊形式的p&lt;/strong&gt;&lt;em&gt;对象&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c2e3717b5d5109756011171fefed759af70e0ade" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;special-variable-p&lt;/strong&gt;&lt;em&gt;symbol&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;特殊变量-p&lt;/strong&gt;&lt;em&gt;符号&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a3f4435780cad3137c817ca5a642c32bb3faad6d" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;split-string-and-unquote&lt;/strong&gt;&lt;em&gt;string &amp;amp;optional separators&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;分割字符串和不带&lt;/strong&gt;&lt;em&gt;引号的字符串和可选的分隔符&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dcc31163d06d23c9c806b26cdd4a6ea8bf056c99" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;split-string&lt;/strong&gt;&lt;em&gt;string &amp;amp;optional separators omit-nulls trim&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;分割&lt;/strong&gt;&lt;em&gt;字符串和可选的分隔符省略零修剪&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="38f034881c5b4e93360bc2e6d24baa72853e9518" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;split-window-sensibly&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;明智地分割窗口&lt;/strong&gt;&lt;em&gt;和可选窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="df5362778cd663c68d3ae7d9c3d2cab399ad9049" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;split-window&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window size side pixelwise&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;分割窗口&lt;/strong&gt;&lt;em&gt;和可选窗口大小，以像素为单位&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="08a81adfd49b06ff73aa3bae2c0f331d987323a1" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;sqrt&lt;/strong&gt;&lt;em&gt;arg&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;sqrt &lt;/strong&gt;&lt;em&gt;arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="821a8918c4b9b1928861a865cd3062c5ee19f319" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;standard-case-table&lt;/strong&gt;</source>
          <target state="translated">功能：&lt;strong&gt;标准案例表&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cf18aa5c30a12fbe4e10918c2e0caa651c2a0331" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;standard-category-table&lt;/strong&gt;</source>
          <target state="translated">功能：&lt;strong&gt;标准类别表&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4fbfc2a4a7d543e26c435812da2906006f12e1de" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;standard-syntax-table&lt;/strong&gt;</source>
          <target state="translated">功能：&lt;strong&gt;标准语法表&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="183bc9322dfc3146ee9ea555545ad8d5dcb74253" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;start-file-process-shell-command&lt;/strong&gt;&lt;em&gt;name buffer-or-name command&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;开始文件处理外壳命令&lt;/strong&gt;&lt;em&gt;名称缓冲区或名称命令&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fd7b2379eb364a905d20f1d39964c17d208fc055" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;start-file-process&lt;/strong&gt;&lt;em&gt;name buffer-or-name program &amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;开始文件进程&lt;/strong&gt;&lt;em&gt;名称缓冲区或名称程序＆rest args&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4c9a35caafdb4f18dbf99a36b80e14fc1cdc8d63" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;start-process-shell-command&lt;/strong&gt;&lt;em&gt;name buffer-or-name command&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;start-process-shell-command&lt;/strong&gt;&lt;em&gt;名称buffer-or-name命令&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c07e986506e272f875456977830a7cf299fd5e63" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;start-process&lt;/strong&gt;&lt;em&gt;name buffer-or-name program &amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;开始进程&lt;/strong&gt;&lt;em&gt;名称缓冲区或名称程序＆rest args&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fe50e8c2e6ad4a228e46c4f3e6ad7a7bb0072718" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;stop-process&lt;/strong&gt;&lt;em&gt;&amp;amp;optional process current-group&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;停止过程&lt;/strong&gt;&lt;em&gt;和可选过程电流组&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4edd90f2358dd6fb67a3fac316a3bdd090fbdc17" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;store-substring&lt;/strong&gt;&lt;em&gt;string idx obj&lt;/em&gt;</source>
          <target state="translated">函数：&lt;strong&gt;存储子&lt;/strong&gt;&lt;em&gt;字符串字符串idx obj&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d1330a3dc3eab19e1789ac14fc8f0f03e29ed994" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string&amp;lt;&lt;/strong&gt;&lt;em&gt;string1 string2&lt;/em&gt;</source>
          <target state="translated">函数：&lt;strong&gt;string &amp;lt; &lt;/strong&gt;&lt;em&gt;string1 string2&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="09e2ccd1ecc348737ed9cd456a4517248e55d497" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string-as-multibyte&lt;/strong&gt;&lt;em&gt;string&lt;/em&gt;</source>
          <target state="translated">函数：&lt;strong&gt;多字节&lt;/strong&gt;&lt;em&gt;字符串&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="49bccbdcce6624072ab9e4d642f26eab8184f8c0" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string-as-unibyte&lt;/strong&gt;&lt;em&gt;string&lt;/em&gt;</source>
          <target state="translated">函数：&lt;strong&gt;字符串为单字节&lt;/strong&gt;&lt;em&gt;字符串&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="770e8134569c458e95d2934d68561ed2737a5ca0" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string-bytes&lt;/strong&gt;&lt;em&gt;string&lt;/em&gt;</source>
          <target state="translated">函数：&lt;strong&gt;字符串字节&lt;/strong&gt;&lt;em&gt;字符串&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cc7e67f962be71d58130f4a720d8c2ab5642342a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string-collate-equalp&lt;/strong&gt;&lt;em&gt;string1 string2 &amp;amp;optional locale ignore-case&lt;/em&gt;</source>
          <target state="translated">函数：&lt;strong&gt;string-collat​​e-equalp &lt;/strong&gt;&lt;em&gt;string1 string2和可选的语言环境忽略大小写&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="67f95b7540c3939dddd48fb0d77b8a965d41ac82" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string-collate-lessp&lt;/strong&gt;&lt;em&gt;string1 string2 &amp;amp;optional locale ignore-case&lt;/em&gt;</source>
          <target state="translated">函数：&lt;strong&gt;string-collat​​e-lessp &lt;/strong&gt;&lt;em&gt;string1 string2和可选的语言环境忽略大小写&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f7cd11a5e434cda056aaf9c9da374cab065a6a6c" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string-distance&lt;/strong&gt;&lt;em&gt;string1 string2 &amp;amp;optional bytecompare&lt;/em&gt;</source>
          <target state="translated">函数：&lt;strong&gt;string-distance &lt;/strong&gt;&lt;em&gt;string1 string2和可选的bytecompare&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3ea5710993adb8175ead17afb02f7a0cf940a998" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string-equal&lt;/strong&gt;&lt;em&gt;string1 string2&lt;/em&gt;</source>
          <target state="translated">函数：&lt;strong&gt;字符串等于&lt;/strong&gt;&lt;em&gt;字符串1 string2&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="01cb96e8b6a32a45a61cf97599d7cea365f9e4c0" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string-greaterp&lt;/strong&gt;&lt;em&gt;string1 string2&lt;/em&gt;</source>
          <target state="translated">函数：&lt;strong&gt;string-greaterp &lt;/strong&gt;&lt;em&gt;string1 string2&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="56c941a710f6bc66390a41bdb086d11aaf35522c" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string-lessp&lt;/strong&gt;&lt;em&gt;string1 string2&lt;/em&gt;</source>
          <target state="translated">函数：&lt;strong&gt;string-lessp &lt;/strong&gt;&lt;em&gt;string1 string2&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ac5527fc8de07f9372daae93998033c564b0c42d" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string-match-p&lt;/strong&gt;&lt;em&gt;regexp string &amp;amp;optional start&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;string-match-p正则&lt;/strong&gt;&lt;em&gt;表达式字符串和可选的开始&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fa3c17ab9bc075c89c21b3dc3b12983626884885" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string-match&lt;/strong&gt;&lt;em&gt;regexp string &amp;amp;optional start&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;字符串匹配正则&lt;/strong&gt;&lt;em&gt;表达式字符串和可选的开始&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fe0d77ce49383006dfa70f37d54436eb5f67b117" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string-or-null-p&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">函数：&lt;strong&gt;字符串或空p&lt;/strong&gt;&lt;em&gt;对象&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b121bdf258803ca6e77ffa5f841a000e0d114762" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string-prefix-p&lt;/strong&gt;&lt;em&gt;string1 string2 &amp;amp;optional ignore-case&lt;/em&gt;</source>
          <target state="translated">函数：&lt;strong&gt;string-prefix-p &lt;/strong&gt;&lt;em&gt;string1 string2和可选的ignore-case&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="df936c61ad70bef5478d7d029c35fd24816e9746" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string-suffix-p&lt;/strong&gt;&lt;em&gt;suffix string &amp;amp;optional ignore-case&lt;/em&gt;</source>
          <target state="translated">函数：&lt;strong&gt;string-suffix-p&lt;/strong&gt;&lt;em&gt;后缀字符串和可选的忽略大小写&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="46810f0169f2fb4d29f5a2eb4bfdb7935bf16861" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string-to-char&lt;/strong&gt;&lt;em&gt;string&lt;/em&gt;</source>
          <target state="translated">函数：&lt;strong&gt;字符串到字符的&lt;/strong&gt;&lt;em&gt;字符串&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a682003e5d7dfa988e0c8ada135408b001f52b0a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string-to-multibyte&lt;/strong&gt;&lt;em&gt;string&lt;/em&gt;</source>
          <target state="translated">函数：&lt;strong&gt;字符串到多字节&lt;/strong&gt;&lt;em&gt;字符串&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2685a342007322e10f4bbbb3a7acdf6f06ee48f5" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string-to-number&lt;/strong&gt;&lt;em&gt;string &amp;amp;optional base&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;字符串到数字&lt;/strong&gt;&lt;em&gt;字符串和可选基数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c03d4db2bb05e0f1cfab14fb30f51641fdd92f8e" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string-to-syntax&lt;/strong&gt;&lt;em&gt;desc&lt;/em&gt;</source>
          <target state="translated">函数：&lt;strong&gt;字符串到语法&lt;/strong&gt;&lt;em&gt;desc&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="47db59ea8ac12fe9f587caec2e6b7c5c0432fafc" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string-to-unibyte&lt;/strong&gt;&lt;em&gt;string&lt;/em&gt;</source>
          <target state="translated">函数：&lt;strong&gt;字符串到单字节&lt;/strong&gt;&lt;em&gt;字符串&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="461464bf7d25349b796fdd4810a2f0a7d22c0801" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string-version-lessp&lt;/strong&gt;&lt;em&gt;string1 string2&lt;/em&gt;</source>
          <target state="translated">函数：&lt;strong&gt;string-version-lessp &lt;/strong&gt;&lt;em&gt;string1 string2&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e1b32a0d6d8cbaf3d99e550bbcaf9a1102e16fb6" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string-width&lt;/strong&gt;&lt;em&gt;string&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;字符串宽度的&lt;/strong&gt;&lt;em&gt;字符串&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="352a59fafc41167fc081c02c319dd9a08f8a852e" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string&lt;/strong&gt;&lt;em&gt;&amp;amp;rest characters&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;字符串&lt;/strong&gt;&lt;em&gt;和其余字符&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c1a88579ba19d7ff1d43ef424ae70d6467c71ad7" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;string=&lt;/strong&gt;&lt;em&gt;string1 string2&lt;/em&gt;</source>
          <target state="translated">函数：&lt;strong&gt;string = &lt;/strong&gt;&lt;em&gt;string1 string2&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e92e7cbc4802a96339c9982551a039742c98b7f6" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;stringp&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">函数：&lt;strong&gt;stringp&lt;/strong&gt;&lt;em&gt;对象&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0df16dc9d07d6a73b94d130eb96178b0531b886d" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;subr-arity&lt;/strong&gt;&lt;em&gt;subr&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;subr-arity &lt;/strong&gt;&lt;em&gt;subr&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="42e82398542a79998f55d0f976fc4ed4cd280147" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;subrp&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;subrp&lt;/strong&gt;&lt;em&gt;对象&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6d6b47cdad3df088fc2ff441ad0b9cb509724310" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;subst-char-in-region&lt;/strong&gt;&lt;em&gt;start end old-char new-char &amp;amp;optional noundo&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;在区域内&lt;/strong&gt;&lt;em&gt;开始替换&lt;/em&gt;&lt;strong&gt;字符，在&lt;/strong&gt;&lt;em&gt;开始时结束字符，在新字符＆可选的noundo中&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d132f6a71b144ba7841ea007e3a8a423da2547c3" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;substitute-command-keys&lt;/strong&gt;&lt;em&gt;string&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;替代命令键&lt;/strong&gt;&lt;em&gt;字符串&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6f1c5bcfeaf4528a950d4ed26da1a144bb76187e" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;substitute-in-file-name&lt;/strong&gt;&lt;em&gt;filename&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;文件名中的替代文件&lt;/strong&gt;&lt;em&gt;名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bf6dcef9d93ca652873680f02762b098337c19ca" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;substitute-key-definition&lt;/strong&gt;&lt;em&gt;olddef newdef keymap &amp;amp;optional oldmap&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;替代键定义&lt;/strong&gt;&lt;em&gt;olddef newdef&lt;/em&gt;&lt;strong&gt;键&lt;/strong&gt;&lt;em&gt;映射和可选的oldmap&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="11022a60326c965b74c05098e2d5c07d2fce4365" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;substring-no-properties&lt;/strong&gt;&lt;em&gt;string &amp;amp;optional start end&lt;/em&gt;</source>
          <target state="translated">函数：&lt;strong&gt;substring-no-properties&lt;/strong&gt;&lt;em&gt;字符串和可选的开始结束&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="991b0a2b8bb216409c3d753969bc59b684ac75dd" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;substring&lt;/strong&gt;&lt;em&gt;string &amp;amp;optional start end&lt;/em&gt;</source>
          <target state="translated">函数：&lt;strong&gt;子&lt;/strong&gt;&lt;em&gt;字符串和可选的开始结束&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2f855b1526fece8e9bb6f220588a096367090011" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;suppress-keymap&lt;/strong&gt;&lt;em&gt;keymap &amp;amp;optional nodigits&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;抑制键映射键&lt;/strong&gt;&lt;em&gt;映射和可选的无数字&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="68b18929214970a70d297c2b273d3d65d9f5f7e6" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;suspend-tty&lt;/strong&gt;&lt;em&gt;&amp;amp;optional tty&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;suspant-tty&lt;/strong&gt;&lt;em&gt;和可选的tty&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="db233700f7d83075922254cdba5211d3dd416f07" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;svg-circle&lt;/strong&gt;&lt;em&gt;svg x y radius &amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;svg-圆&lt;/strong&gt;&lt;em&gt;svg xy半径和剩余参数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b937d9c6e9267a5dcc5ada70a1592282ce38372f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;svg-clip-path&lt;/strong&gt;&lt;em&gt;svg &amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;svg-clip-path &lt;/strong&gt;&lt;em&gt;svg＆rest args&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1a3384a2990b209fe0957df5149acbc511d20923" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;svg-create&lt;/strong&gt;&lt;em&gt;width height &amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;svg-create &lt;/strong&gt;&lt;em&gt;width height＆rest args&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c788692d891336fddd3e053923c31c6e2099ea0c" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;svg-ellipse&lt;/strong&gt;&lt;em&gt;svg x y x-radius y-radius &amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;svg-椭圆&lt;/strong&gt;&lt;em&gt;svg xy x半径y半径＆rest args&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5d6359ccd605b6da5a9cf85fa2d7004901257787" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;svg-embed&lt;/strong&gt;&lt;em&gt;svg image image-type datap &amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;svg嵌入的&lt;/strong&gt;&lt;em&gt;svg图像图像类型datap＆rest args&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9c5b6883ac8dd7b887d7829db68871c329f3e348" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;svg-gradient&lt;/strong&gt;&lt;em&gt;svg id type stops&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;SVG渐变&lt;/strong&gt;&lt;em&gt;SVG ID类型停止&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d1ac4ad0c3989da0255197a17344b1391fcf0c7a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;svg-image&lt;/strong&gt;&lt;em&gt;svg&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;svg-图像&lt;/strong&gt;&lt;em&gt;svg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f3ef83d3549b0d10d3794e6de24a9f350afcdc5e" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;svg-line&lt;/strong&gt;&lt;em&gt;svg x1 y1 x2 y2 &amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;svg-line &lt;/strong&gt;&lt;em&gt;svg x1 y1 x2 y2＆rest args&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b4d7f0b746114c094a89d3843df93c64cd1d302a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;svg-node&lt;/strong&gt;&lt;em&gt;svg tag &amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;svg-node &lt;/strong&gt;&lt;em&gt;svg标签和剩余参数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d74c03fa33ef6cbeebdc3ce8eee823a8fba6d4aa" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;svg-path&lt;/strong&gt;&lt;em&gt;svg commands &amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;svg-path &lt;/strong&gt;&lt;em&gt;svg命令＆rest args&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fa4c8e6f24acbcf589c0f19b38440f08e6289056" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;svg-polygon&lt;/strong&gt;&lt;em&gt;svg points &amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;svg-多边形&lt;/strong&gt;&lt;em&gt;svg点和其余参数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="be9bd41b7b2275a863e1ee27c62a2db89b484e29" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;svg-polyline&lt;/strong&gt;&lt;em&gt;svg points &amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;SVG折线&lt;/strong&gt;&lt;em&gt;SVG点和剩余参数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="00ced8e9ac1369ca868181bda3d6ee1a4422d8f8" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;svg-rectangle&lt;/strong&gt;&lt;em&gt;svg x y width height &amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;svg-矩形&lt;/strong&gt;&lt;em&gt;svg xy宽度高度和其余参数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="aa29403fb272db7db4b63a6be3bd13f32041b778" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;svg-remove&lt;/strong&gt;&lt;em&gt;svg id&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;svg-删除&lt;/strong&gt;&lt;em&gt;svg ID&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cb5f35709c5457b057432a82e7ba40112b2ef325" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;svg-text&lt;/strong&gt;&lt;em&gt;svg text &amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;svg文本&lt;/strong&gt;&lt;em&gt;svg文本和其余参数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c2a277b02b0fbcf6919360b5d3b7b7247b0bd1e3" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;sxhash-eq&lt;/strong&gt;&lt;em&gt;obj&lt;/em&gt;</source>
          <target state="translated">函数：&lt;strong&gt;sxhash-eq &lt;/strong&gt;&lt;em&gt;obj&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="356c4be403278116fae295ef6e12965d8e7caab7" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;sxhash-eql&lt;/strong&gt;&lt;em&gt;obj&lt;/em&gt;</source>
          <target state="translated">函数：&lt;strong&gt;sxhash-eql &lt;/strong&gt;&lt;em&gt;obj&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ef6abe80b92418038028633dd5b7abd8299867b4" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;sxhash-equal&lt;/strong&gt;&lt;em&gt;obj&lt;/em&gt;</source>
          <target state="translated">函数：&lt;strong&gt;sxhash-等于&lt;/strong&gt;&lt;em&gt;obj&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0af25972888a173e6b9a585dcaf377c653fddaa0" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;symbol-file&lt;/strong&gt;&lt;em&gt;symbol &amp;amp;optional type&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;符号文件&lt;/strong&gt;&lt;em&gt;符号和可选类型&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c5ee5cfc69a252acc6a93f97caf0294ab75348ed" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;symbol-function&lt;/strong&gt;&lt;em&gt;symbol&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;符号-功能&lt;/strong&gt;&lt;em&gt;符号&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ef9c73059c26fd08a4528a9a5918451b2ac0f7aa" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;symbol-name&lt;/strong&gt;&lt;em&gt;symbol&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;符号名称&lt;/strong&gt;&lt;em&gt;符号&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="31cc9d5b106279f364fe2aa12cafa9865674d8f7" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;symbol-plist&lt;/strong&gt;&lt;em&gt;symbol&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;symbol-plist&lt;/strong&gt;&lt;em&gt;符号&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bde7ad5a7622b738d05dca511494dd1648c67eac" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;symbol-value&lt;/strong&gt;&lt;em&gt;symbol&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;符号值&lt;/strong&gt;&lt;em&gt;符号&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ece1c06207095d32a4bf43af9815ed2d3efc6b1d" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;symbolp&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;symbolp&lt;/strong&gt;&lt;em&gt;对象&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d99b7b689eb68a05c6b91a83147b4625d8b529c8" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;syntax-after&lt;/strong&gt;&lt;em&gt;pos&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;语法后&lt;/strong&gt;&lt;em&gt;pos&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8bd5eaac2863c9c0139f655a6542809c0c7b0836" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;syntax-class&lt;/strong&gt;&lt;em&gt;syntax&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;语法类&lt;/strong&gt;&lt;em&gt;语法&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="049f02e358a763490a1b710d6fa8dd65cf226254" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;syntax-ppss-context&lt;/strong&gt;&lt;em&gt;state&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;语法-ppss-上下文&lt;/strong&gt;&lt;em&gt;状态&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="734555132f355be3ef39856d22ce237312f7f579" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;syntax-ppss-flush-cache&lt;/strong&gt;&lt;em&gt;beg &amp;amp;rest ignored-args&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;语法-ppss-flush-cache&lt;/strong&gt;&lt;em&gt;乞求和休息忽略参数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="749e3dd5abc997bee83273ff66977aca26ac94e3" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;syntax-ppss-toplevel-pos&lt;/strong&gt;&lt;em&gt;state&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;syntax-ppss-toplevel-pos&lt;/strong&gt;&lt;em&gt;状态&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cf8dc3ee4f3de1d33156bff9e9be637d6b16073e" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;syntax-ppss&lt;/strong&gt;&lt;em&gt;&amp;amp;optional pos&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;语法-ppss&lt;/strong&gt;&lt;em&gt;和可选pos&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="347abddde6c9b57488696e10daffe6c6e2bbed7b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;syntax-table-p&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;语法表-p&lt;/strong&gt;&lt;em&gt;对象&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ec3d9a1c194ab6f1f2f940b2a528d54333da6132" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;syntax-table&lt;/strong&gt;</source>
          <target state="translated">功能：&lt;strong&gt;语法表&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="000b879b3b0248ae117f17c694d1a7398d484e56" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;system-groups&lt;/strong&gt;</source>
          <target state="translated">功能：&lt;strong&gt;系统组&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e35d2381b502c4ee6626ce1fd63fbb5db9d575c0" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;system-name&lt;/strong&gt;</source>
          <target state="translated">功能：&lt;strong&gt;系统名称&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aad91ccb1e2b61d228b9dd7fae275d07b2f66267" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;system-users&lt;/strong&gt;</source>
          <target state="translated">功能：&lt;strong&gt;系统用户&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c6098fb2a7709ab7eff5ba589c9af83051bdd2f8" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tabulated-list-clear-all-tags&lt;/strong&gt;</source>
          <target state="translated">功能：&lt;strong&gt;列表式清除所有标签&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="51b7a3dc38315716ac213d1dc1763321eccdcb26" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tabulated-list-delete-entry&lt;/strong&gt;</source>
          <target state="translated">功能：&lt;strong&gt;列表列表删除条目&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="28614f43667ef0da739c23a6eaba789903a68d17" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tabulated-list-get-entry&lt;/strong&gt;&lt;em&gt;&amp;amp;optional pos&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;列表列表条目&lt;/strong&gt;&lt;em&gt;和可选pos&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e86f5cb8ec9f55c60c811ac7a4a19624217c6c4e" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tabulated-list-get-id&lt;/strong&gt;&lt;em&gt;&amp;amp;optional pos&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;列表列表获取ID&lt;/strong&gt;&lt;em&gt;和可选pos&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ce4d1dbbd1b6cdf70fd9c8a0d4452af4db086ad2" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tabulated-list-header-overlay-p&lt;/strong&gt;&lt;em&gt;&amp;amp;optional POS&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;列表列表头标题-p&lt;/strong&gt;&lt;em&gt;和可选POS&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="adfe6f1ac4f1169af7f5c97dd41d793e55453215" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tabulated-list-init-header&lt;/strong&gt;</source>
          <target state="translated">功能：&lt;strong&gt;列表列表初始标题&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="40b949767d49073761469f6a82ecb3a7b1b2a9ea" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tabulated-list-print&lt;/strong&gt;&lt;em&gt;&amp;amp;optional remember-pos update&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;列表列表打印&lt;/strong&gt;&lt;em&gt;和可选的记住位置更新&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e6547bb774400bca8935f35ed1fb95fe2fa474f9" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tabulated-list-put-tag&lt;/strong&gt;&lt;em&gt;tag &amp;amp;optional advance&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;列表列表放置标签&lt;/strong&gt;&lt;em&gt;标签和可选的高级&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="024a3e0e06fbdf7267c06e6ba03cbed24d990122" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tabulated-list-set-col&lt;/strong&gt;&lt;em&gt;col desc &amp;amp;optional change-entry-data&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;列表列表集&lt;/strong&gt;&lt;em&gt;col desc和可选的更改条目数据&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e90d31a0542e70383ea31c92ce7c2eaa821b077b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tan&lt;/strong&gt;&lt;em&gt;arg&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;谭&lt;/strong&gt;&lt;em&gt;ARG&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f859dd6a09cd632fa23cfad67d45dff8983bd413" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;temporary-file-directory&lt;/strong&gt;</source>
          <target state="translated">功能：&lt;strong&gt;临时文件目录&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0ffd0dda0b05a5a6681b5aa5051fa2bc73428cd0" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;terminal-coding-system&lt;/strong&gt;&lt;em&gt;&amp;amp;optional terminal&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;终端编码系统&lt;/strong&gt;&lt;em&gt;和可选终端&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1ebffcf0f17b68796843dae599e1e512f5545222" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;terminal-list&lt;/strong&gt;</source>
          <target state="translated">功能：&lt;strong&gt;终端列表&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="76e2db443bc7442b2a2ea0ac4cd5f44da07a9a47" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;terminal-live-p&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;terminal-live-p&lt;/strong&gt;&lt;em&gt;对象&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5cf20dff17a85531d07fb4c60cf444682a04d555" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;terminal-name&lt;/strong&gt;&lt;em&gt;&amp;amp;optional terminal&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;终端名称&lt;/strong&gt;&lt;em&gt;和可选终端&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="936c4dbdc0234eb59c267836a47dcb14c217c8e8" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;terminal-parameter&lt;/strong&gt;&lt;em&gt;terminal parameter&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;端子参数&lt;/strong&gt;&lt;em&gt;端子参数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e33519a133c002a4a26f258714f4d29f38ea2006" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;terminal-parameters&lt;/strong&gt;&lt;em&gt;&amp;amp;optional terminal&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;端子参数&lt;/strong&gt;&lt;em&gt;和可选端子&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="116ca99a50fa47897734d3d55c9fc864004a0607" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;terpri&lt;/strong&gt;&lt;em&gt;&amp;amp;optional stream ensure&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;terpri&lt;/strong&gt;&lt;em&gt;和可选流确保&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ce3e3f3135b49115d611a6b5b83cb8d7bd73db15" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;test-completion&lt;/strong&gt;&lt;em&gt;string collection &amp;amp;optional predicate&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;测试完成&lt;/strong&gt;&lt;em&gt;字符串收集和可选谓词&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="39e36528777a8a24178b7a3f5f26e2cd001ccd76" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;text-char-description&lt;/strong&gt;&lt;em&gt;character&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;文字字符描述&lt;/strong&gt;&lt;em&gt;字符&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c4440a43d1d3f5504d516266e091d5d69c1e625e" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;text-properties-at&lt;/strong&gt;&lt;em&gt;position &amp;amp;optional object&lt;/em&gt;</source>
          <target state="translated">功能：&lt;em&gt;位置&lt;/em&gt;&lt;strong&gt;处的文本属性&lt;/strong&gt;&lt;em&gt;和可选对象&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c06f60d0ac2b3365c254f08252ca6b6d6d45a1a6" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;text-property-any&lt;/strong&gt;&lt;em&gt;start end prop value &amp;amp;optional object&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;文本属性-任何&lt;/strong&gt;&lt;em&gt;开始，结束，prop值和可选对象&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c5cfc0748b921ee7f6a97797595fd7e5167387ad" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;text-property-not-all&lt;/strong&gt;&lt;em&gt;start end prop value &amp;amp;optional object&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;文本属性并非全部&lt;/strong&gt;&lt;em&gt;起始，结束prop值和可选对象&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a4a011b8b86bb545d57af1ca333e03eeaf8fce20" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;text-property-search-backward&lt;/strong&gt;&lt;em&gt;prop &amp;amp;optional value predicate not-current&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;文本属性-向后搜索属性&lt;/strong&gt;&lt;em&gt;和可选值谓词非当前&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="87375f813b499e13b0f132db237c0b7dd8e969fd" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;text-property-search-forward&lt;/strong&gt;&lt;em&gt;prop &amp;amp;optional value predicate not-current&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;文本属性-搜索-转发属性&lt;/strong&gt;&lt;em&gt;和可选值谓词非当前&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6bdc4aed27e2b19aacd17d1af152860dc9bec9af" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;thing-at-point&lt;/strong&gt;&lt;em&gt;thing &amp;amp;optional no-properties&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;即时&lt;/strong&gt;&lt;em&gt;事物和可选的无属性&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9f675d128837e01702ba8833bc230b92e1d9acec" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;this-command-keys-vector&lt;/strong&gt;</source>
          <target state="translated">功能：&lt;strong&gt;此命令键向量&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="20e8791016c3db0bb20252ce623cbcbcf2513ce6" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;this-command-keys&lt;/strong&gt;</source>
          <target state="translated">功能：&lt;strong&gt;此命令键&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2aea6136a633538b94fc10a3eb918373aedddffd" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;thread--blocker&lt;/strong&gt;&lt;em&gt;thread&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;线程-阻塞&lt;/strong&gt;&lt;em&gt;线程&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e29e850ef6ded11b848b0fae3e582017051818dc" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;thread-join&lt;/strong&gt;&lt;em&gt;thread&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;螺纹连接&lt;/strong&gt;&lt;em&gt;螺纹&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3b646478d20a177b35809aaa4a40fb7da71a2003" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;thread-last-error&lt;/strong&gt;&lt;em&gt;&amp;amp;optional cleanup&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;线程最后错误&lt;/strong&gt;&lt;em&gt;和可选清除&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b607af40c1df513df3ce7dd24351a21cf81c03a3" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;thread-live-p&lt;/strong&gt;&lt;em&gt;thread&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;thread-live-p&lt;/strong&gt;&lt;em&gt;线程&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0c4ad7f02b50a6c412cc413b2c75ff2f958856e6" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;thread-name&lt;/strong&gt;&lt;em&gt;thread&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;线程名&lt;/strong&gt;&lt;em&gt;线程&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8d51ac1e87c3f0ea9d5dfff20e77847df401efd6" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;thread-signal&lt;/strong&gt;&lt;em&gt;thread error-symbol data&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;线程信号&lt;/strong&gt;&lt;em&gt;线程错误符号数据&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="223f8761f827893d083be3a5f89286b3da40deac" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;thread-yield&lt;/strong&gt;</source>
          <target state="translated">功能：&lt;strong&gt;螺纹屈服&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aef5f30c6ed42144e47327be04e1f13bc7deee95" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;threadp&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;threadp&lt;/strong&gt;&lt;em&gt;对象&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="00a9a6621e0bf1a606c3e34c37c16ff26e8c5a20" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;throw&lt;/strong&gt;&lt;em&gt;tag value&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;抛出&lt;/strong&gt;&lt;em&gt;标签值&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f05ce7d1b219bc2400460168ca872d427af2ad9d" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;thunk-force&lt;/strong&gt;&lt;em&gt;thunk&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;unk力&lt;/strong&gt;&lt;em&gt;unk&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ce3cdc0f9e518b06a9085ddf26165322976fd478" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;time-add&lt;/strong&gt;&lt;em&gt;t1 t2&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;加时&lt;/strong&gt;&lt;em&gt;t1 t2&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f34759dcef5aa6e8140615c627c77af38e089647" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;time-convert&lt;/strong&gt;&lt;em&gt;time &amp;amp;optional form&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;时间转换&lt;/strong&gt;&lt;em&gt;时间和可选格式&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a0b523e1c291791c3944241e6342fc2dd0ff8be2" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;time-equal-p&lt;/strong&gt;&lt;em&gt;t1 t2&lt;/em&gt;</source>
          <target state="translated">函数：&lt;strong&gt;时间等于-p &lt;/strong&gt;&lt;em&gt;t1 t2&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fbed692f34b8ab40753cff8a6bc94e8753a0f6cf" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;time-less-p&lt;/strong&gt;&lt;em&gt;t1 t2&lt;/em&gt;</source>
          <target state="translated">功能：无&lt;strong&gt;时间p &lt;/strong&gt;&lt;em&gt;t1 t2&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3a89c202b29d42a8a04ee34bbab735de5cd3b2bb" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;time-subtract&lt;/strong&gt;&lt;em&gt;t1 t2&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;减时&lt;/strong&gt;&lt;em&gt;t1 t2&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="db42f98e4fb277bfa96ff4fe74d06f1f5a3702ee" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;time-to-day-in-year&lt;/strong&gt;&lt;em&gt;time-value&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;一年中的一天中的&lt;/strong&gt;&lt;em&gt;时间值&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a209c7b1adb1949d8917bf0568f355d14d799f8a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;time-to-days&lt;/strong&gt;&lt;em&gt;time-value&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;每日&lt;/strong&gt;&lt;em&gt;时间值&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e4ef3f1c1386f6b1530b4800a696d1af0cc81b63" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;timerp&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;timerp&lt;/strong&gt;&lt;em&gt;对象&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7412f6f4139342308ceb177db6e795c66a676750" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tool-bar-add-item-from-menu&lt;/strong&gt;&lt;em&gt;command icon &amp;amp;optional map &amp;amp;rest props&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;菜单栏中的工具栏添加项从菜单&lt;/strong&gt;&lt;em&gt;命令图标和可选的地图和休息道具&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6eb2bd4c421c208922f149fcdf8748648b44ddb7" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tool-bar-add-item&lt;/strong&gt;&lt;em&gt;icon def key &amp;amp;rest props&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;工具栏添加项&lt;/strong&gt;&lt;em&gt;图标def键和休息道具&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="acb98a30cf56d3f0024c29319961641d2163ab1f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tool-bar-local-item-from-menu&lt;/strong&gt;&lt;em&gt;command icon in-map &amp;amp;optional from-map &amp;amp;rest props&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;菜单中的工具栏本地项从菜单&lt;/strong&gt;&lt;em&gt;命令图标和可选的从地图和休息道具&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4aea0f8be381bc84dad65ecea59364b3c5b10b4f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tooltip-event-buffer&lt;/strong&gt;&lt;em&gt;event&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;工具提示事件缓冲区&lt;/strong&gt;&lt;em&gt;事件&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="659d3aa848158f2002baac9924fd6261656497e8" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tooltip-mode&lt;/strong&gt;</source>
          <target state="translated">功能：&lt;strong&gt;工具提示模式&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="80c256be5ad24972104cf08094160b284e56a161" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tq-close&lt;/strong&gt;&lt;em&gt;queue&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;关闭&lt;/strong&gt;&lt;em&gt;队列&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="84842fabbade0fd5cad6ac8d4d6eaed2c05d3d55" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tq-create&lt;/strong&gt;&lt;em&gt;process&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;tq创建&lt;/strong&gt;&lt;em&gt;过程&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5022b3ff4c6e8c8a6839113b6fd765cc40382971" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tq-enqueue&lt;/strong&gt;&lt;em&gt;queue question regexp closure fn &amp;amp;optional delay-question&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;tq排队&lt;/strong&gt;&lt;em&gt;队列问题正则表达式关闭fn和可选的延迟问题&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="80b0ac80203dfdb08cce998f6eca02843f602bc0" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;transpose-regions&lt;/strong&gt;&lt;em&gt;start1 end1 start2 end2 &amp;amp;optional leave-markers&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;转置区域&lt;/strong&gt;&lt;em&gt;start1 end1 start2 end2和可选的离开标记&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="11d2c4e935f9081f6f25b4d85999607695024f1e" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;truncate-string-to-width&lt;/strong&gt;&lt;em&gt;string width &amp;amp;optional start-column padding ellipsis&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;截断字符串到宽度的&lt;/strong&gt;&lt;em&gt;字符串宽度和可选的起始列填充省略号&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="796afd4e7fdf6c51beece5e663559989acc6276f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;truncate&lt;/strong&gt;&lt;em&gt;number &amp;amp;optional divisor&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;截断&lt;/strong&gt;&lt;em&gt;数字和可选的除数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="22645d3077dce6038529eb885135720f8cbbdf2a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;try-completion&lt;/strong&gt;&lt;em&gt;string collection &amp;amp;optional predicate&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;尝试完成&lt;/strong&gt;&lt;em&gt;字符串收集和可选谓词&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="275ee990b31ba319aa4582babaafb905f7084aba" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tty-color-alist&lt;/strong&gt;&lt;em&gt;&amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;tty-color-alist&lt;/strong&gt;&lt;em&gt;和可选框架&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9a48ac75637e55be805a5fe7ee587bf2eeaa1a88" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tty-color-approximate&lt;/strong&gt;&lt;em&gt;rgb &amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;tty-color- &lt;/strong&gt;&lt;em&gt;rgb和可选帧&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b002c9f49127ca5f9213d8142c267da208d3f1a5" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tty-color-clear&lt;/strong&gt;&lt;em&gt;&amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;tty色透明&lt;/strong&gt;&lt;em&gt;和可选框架&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d15ed934c6b390461e2bb6656a5ade2158d08526" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tty-color-define&lt;/strong&gt;&lt;em&gt;name number &amp;amp;optional rgb frame&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;tty-color-define&lt;/strong&gt;&lt;em&gt;名称编号和可选的rgb框架&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bcc5eb1be018d1548e68b876863e936fad7e0fb4" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tty-color-translate&lt;/strong&gt;&lt;em&gt;color &amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;tty-color-translate&lt;/strong&gt;&lt;em&gt;颜色和可选框架&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8e446b528bca857af5614f88a9e05ee902f7f198" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;tty-top-frame&lt;/strong&gt;&lt;em&gt;&amp;amp;optional terminal&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;tty-top-frame&lt;/strong&gt;&lt;em&gt;和可选终端&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5209dec7bf9d63652df31d8116156026920bd4bc" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;type-of&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;类型&lt;/strong&gt;&lt;em&gt;对象&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e178cc125be8c88fd4bacf079a6deef2b3207a4d" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;undo-auto-amalgamate&lt;/strong&gt;</source>
          <target state="translated">功能：&lt;strong&gt;撤消自动融合&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ecaae5e3265a48f9c6401a49b65f5c4b2918d11f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;undo-boundary&lt;/strong&gt;</source>
          <target state="translated">功能：&lt;strong&gt;撤销边界&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c7339cb1dafd4953f8c1ace0c04e8fc08d7e0c68" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;unhandled-file-name-directory&lt;/strong&gt;&lt;em&gt;filename&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;未处理的文件名目录&lt;/strong&gt;&lt;em&gt;名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fd2da7f72b7fb99a202499e01e4a2da5e603659e" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;unibyte-char-to-multibyte&lt;/strong&gt;&lt;em&gt;char&lt;/em&gt;</source>
          <target state="translated">函数：&lt;strong&gt;单字节&lt;/strong&gt;&lt;em&gt;字符&lt;/em&gt;&lt;strong&gt;到多字节&lt;/strong&gt;&lt;em&gt;字符&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ac283f3a5b70af98289e879e6c50e2726440d914" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;unibyte-string&lt;/strong&gt;&lt;em&gt;&amp;amp;rest bytes&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;单&lt;/strong&gt;&lt;em&gt;字节&lt;/em&gt;&lt;strong&gt;字符串&lt;/strong&gt;&lt;em&gt;和其余字节&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5a5409c9a7834c2a611f77df8d0a113069708671" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;unintern&lt;/strong&gt;&lt;em&gt;symbol obarray&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;unintern&lt;/strong&gt;&lt;em&gt;符号数组&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="63b3c1cedafaf98aa9feb5c608a4a71d391a80ee" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;unlock-buffer&lt;/strong&gt;</source>
          <target state="translated">功能：&lt;strong&gt;解锁缓冲区&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="00ca9df6d0d61d2b116299c3f42f3f36e5e77dd6" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;unsafep&lt;/strong&gt;&lt;em&gt;form &amp;amp;optional unsafep-vars&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;unsafep&lt;/strong&gt;&lt;em&gt;形式和可选的unsafep-vars&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d4e9f5b39c79c48fcbc4f4ad0712b8029ce7493c" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;upcase-initials&lt;/strong&gt;&lt;em&gt;string-or-char&lt;/em&gt;</source>
          <target state="translated">函数：&lt;strong&gt;upcase缩写&lt;/strong&gt;&lt;em&gt;字符串或字符&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="612d491c7d934ad85c45272e7cd836526774f28e" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;upcase&lt;/strong&gt;&lt;em&gt;string-or-char&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;大写&lt;/strong&gt;&lt;em&gt;字符串或字符&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="51e05c710d70f58fefb21ffe5e51d8611f9875ce" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;use-global-map&lt;/strong&gt;&lt;em&gt;keymap&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;use-global-map &lt;/strong&gt;&lt;em&gt;keymap&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d3195c501b2c8f60bdc2f0c3106b629a3c4129a6" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;use-local-map&lt;/strong&gt;&lt;em&gt;keymap&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;use-local-map键&lt;/strong&gt;&lt;em&gt;映射&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="50390f31f81b9d427fae8e74dd7c19278aa39b4c" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;use-region-p&lt;/strong&gt;</source>
          <target state="translated">功能：&lt;strong&gt;use-region-p&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="23a7240765b9589bbd78d57dbf22c9352ff2fd61" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;user-error&lt;/strong&gt;&lt;em&gt;format-string &amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">函数：&lt;strong&gt;用户错误&lt;/strong&gt;&lt;em&gt;格式字符串和其余参数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5188422fbbb8efb69e01b3e00a6d66a27921da05" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;user-full-name&lt;/strong&gt;&lt;em&gt;&amp;amp;optional uid&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;用户全名&lt;/strong&gt;&lt;em&gt;和可选的uid&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="aa3028fd1926f71a08c2dc49a9916f1612be9574" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;user-login-name&lt;/strong&gt;&lt;em&gt;&amp;amp;optional uid&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;用户登录名&lt;/strong&gt;&lt;em&gt;和可选的uid&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="194b3d60f93a917f0e297e78df3f161c2525ccde" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;user-ptrp&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;user-ptrp&lt;/strong&gt;&lt;em&gt;对象&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cd8318b6a8f2ec6da13764a64acaaf148cedd4fb" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;user-real-login-name&lt;/strong&gt;</source>
          <target state="translated">功能：&lt;strong&gt;用户真实登录名&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="50e34f3bdbf5b63e46c07b103084d91d8dece7ec" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;user-real-uid&lt;/strong&gt;</source>
          <target state="translated">功能：&lt;strong&gt;用户真实uid&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7d6c7aa369acfe0b33dda1c25e55c42596b850e5" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;user-uid&lt;/strong&gt;</source>
          <target state="translated">功能：&lt;strong&gt;user-uid&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e4916f4818ae01b61066a61b8faf91091745c3b2" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;vc-responsible-backend&lt;/strong&gt;&lt;em&gt;file&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;vc-responsible-backend&lt;/strong&gt;&lt;em&gt;文件&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bd0443be97e0f772b0c7693136b365004ddd1458" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;vconcat&lt;/strong&gt;&lt;em&gt;&amp;amp;rest sequences&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;vconcat&lt;/strong&gt;&lt;em&gt;和其余序列&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4349d551d7309567d1a995c05e692383a8e1eba4" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;vector&lt;/strong&gt;&lt;em&gt;&amp;amp;rest objects&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;矢量&lt;/strong&gt;&lt;em&gt;和其余对象&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="be21dcf05de75f4f959717429558f7c13a241446" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;vectorp&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;vectorp&lt;/strong&gt;&lt;em&gt;对象&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="59e015a7ada00d4a0c51ef073c85389877979cb8" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;verify-visited-file-modtime&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;verify-visited-file-modtime&lt;/strong&gt;&lt;em&gt;和可选缓冲区&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="da0a663c6643ddbb774322b2ed11b57bfac77335" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;vertical-motion&lt;/strong&gt;&lt;em&gt;count &amp;amp;optional window cur-col&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;垂直运动&lt;/strong&gt;&lt;em&gt;计数和可选的窗口光标&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="01ec81c35e513e7319f46d511ff86ab6accb9f6a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;visible-frame-list&lt;/strong&gt;</source>
          <target state="translated">功能：&lt;strong&gt;可见框架列表&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c7cee9ef5542e5f16d647457aae181a3a9302646" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;visited-file-modtime&lt;/strong&gt;</source>
          <target state="translated">功能：&lt;strong&gt;访问文件的modtime&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7e53b398bd003662cda12cab5cd00fb6e59d9810" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;w32-notification-close&lt;/strong&gt;&lt;em&gt;id&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;w32-notification-close &lt;/strong&gt;&lt;em&gt;id&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e761292d96f707f38f5f244dc3a917be4c283e92" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;w32-notification-notify&lt;/strong&gt;&lt;em&gt;&amp;amp;rest params&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;w32-notification-notify&lt;/strong&gt;&lt;em&gt;和rest参数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4e22072f5423bc08430120757ceafeff4bfb7a05" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;waiting-for-user-input-p&lt;/strong&gt;</source>
          <target state="translated">功能：&lt;strong&gt;等待用户输入-p&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3f27c2074a4b5e3511c6602b7c96641fe90fb45e" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;walk-windows&lt;/strong&gt;&lt;em&gt;fun &amp;amp;optional minibuf all-frames&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;步入式窗户&lt;/strong&gt;&lt;em&gt;乐趣和可选的minibuf全帧&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cdc495d5d4f15b87e264d1f07e7999a0e0064cfd" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;warn&lt;/strong&gt;&lt;em&gt;message &amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;警告&lt;/strong&gt;&lt;em&gt;消息和剩余参数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="effa99492cc5022e4ac5fd45653293f6aacca9d4" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;where-is-internal&lt;/strong&gt;&lt;em&gt;command &amp;amp;optional keymap firstonly noindirect no-remap&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;where-is-internal&lt;/strong&gt;&lt;em&gt;命令和可选键映射firstonly noindirect no-remap&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c4fabf32a800c28d286fb6803d13260a98ce4975" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-absolute-body-pixel-edges&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗口绝对主体像素边缘&lt;/strong&gt;&lt;em&gt;和可选窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4446ad81beeef5af1d3d102c7450c6ae31e7e037" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-absolute-pixel-edges&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗口绝对像素边缘&lt;/strong&gt;&lt;em&gt;和可选窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="644e4a58c0f056ff5944b101a05b2f2e4aab69af" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-absolute-pixel-position&lt;/strong&gt;&lt;em&gt;&amp;amp;optional position window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗口绝对像素位置&lt;/strong&gt;&lt;em&gt;和可选位置窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6bf86508282a4288b9731275e483dab243f70391" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-at-side-p&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window side&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;p&lt;/strong&gt;&lt;em&gt;侧窗和可选侧窗&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6ef3385a5963d59e65e68bba090b16043c483a48" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-at&lt;/strong&gt;&lt;em&gt;x y &amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗口&lt;/strong&gt;&lt;em&gt;x y和可选框&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="790f770959ee16706581fcb02fb0191a849932f1" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-atom-root&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;window-atom-root&lt;/strong&gt;&lt;em&gt;和可选窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b9be5987f8adb0ab452a25563aee99150dfff425" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-body-edges&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗身边缘&lt;/strong&gt;&lt;em&gt;和可选窗&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c50a25fac5e4a5bfdead4ee7fef84cc6e0d94adb" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-body-height&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window pixelwise&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗口主体高度&lt;/strong&gt;&lt;em&gt;和可选窗口像素&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="24ea0bec5d30f4ad2f81e3687c6f273422052003" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-body-pixel-edges&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗口-主体-像素-边缘&lt;/strong&gt;&lt;em&gt;和可选窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="76991d2120017eb7399d575260c123d9eba3ff43" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-body-size&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window horizontal pixelwise&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗口主体大小&lt;/strong&gt;&lt;em&gt;和可选窗口水平像素方向&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="07d64902cd7b65b468d097a6a14491910bbb193f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-body-width&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window pixelwise&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;window-body-width&lt;/strong&gt;&lt;em&gt;和可选窗口像素化&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9fa1cc475ed944d06d107e56eb7d43b52b7bd3ac" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-bottom-divider-width&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;window-bottom-divider-width&lt;/strong&gt;&lt;em&gt;和可选窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="47825452027ed1c6185785802b455393a5154ded" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-buffer&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗口缓冲区&lt;/strong&gt;&lt;em&gt;和可选窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5ee17a4c19dc8c7851ed2b17d63f4399391c6530" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-child&lt;/strong&gt;&lt;em&gt;window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;子&lt;/strong&gt;&lt;em&gt;窗口窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="020541d4b2e6194ade2c9b658794492dd8f862f0" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-combination-limit&lt;/strong&gt;&lt;em&gt;window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;window-combination-limit&lt;/strong&gt;&lt;em&gt;窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b2e1f55749f64d4426a8c26da971d1de846f9af5" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-combined-p&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window horizontal&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;window-combined-p&lt;/strong&gt;&lt;em&gt;和可选窗口水平&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="677b0a7f737eaa56e437f2c3dfd6ab6ec59adc25" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-configuration-frame&lt;/strong&gt;&lt;em&gt;config&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗口配置框架&lt;/strong&gt;&lt;em&gt;配置&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1d0f406907619ac7f4269f4e9d1e00530ebfbe96" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-configuration-p&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;window-configuration -p&lt;/strong&gt;&lt;em&gt;对象&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1b062c2c1fc3d6daddb1c1a5044081a3974786c0" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-current-scroll-bars&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;window-current-scroll-bars&lt;/strong&gt;&lt;em&gt;和可选窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cd4965d098ddc41f7a1eb04e4564768114e3a741" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-dedicated-p&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗口专用-p&lt;/strong&gt;&lt;em&gt;和可选窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="564e8de20c60e78eed234d0b557dad00c2d95c7a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-display-table&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗口显示表&lt;/strong&gt;&lt;em&gt;和可选窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2e5e5c490c8a3d27e817570928cf7f157f268949" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-edges&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window body absolute pixelwise&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗边&lt;/strong&gt;&lt;em&gt;和可选的窗体绝对像素化&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="09e857a410ad803b5db229c55ca1e5e33a91345d" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-end&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window update&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗口末端&lt;/strong&gt;&lt;em&gt;和可选窗口更新&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9bfe412f2a740e1ddd69e32158a5c89689d388f7" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-font-height&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window face&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗口字体高度&lt;/strong&gt;&lt;em&gt;和可选的窗口面&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="86c260ad476c51815ba4730fb819fe7c3d544b17" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-font-width&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window face&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗口字体宽度&lt;/strong&gt;&lt;em&gt;和可选的窗口面&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f26981f8d996b31aa4ecef85690c40406df98f60" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-frame&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗框&lt;/strong&gt;&lt;em&gt;和可选窗&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="53f767c43ae054b2bf8baacb393155f669be14df" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-fringes&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗饰&lt;/strong&gt;&lt;em&gt;和可选窗&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ad97ff5cf9365d0972f7e527f24e74430532704f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-full-height-p&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;全高&lt;/strong&gt;&lt;em&gt;窗口&lt;/em&gt;&lt;strong&gt;p&lt;/strong&gt;&lt;em&gt;和可选窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f7efad29b4fd8c34926283bd49f31b62efa3ddf5" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-full-width-p&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;window-full-width-p&lt;/strong&gt;&lt;em&gt;和可选窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1c0a981fe0adfcd148d21c7ad63ac1cf75f35704" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-group-end&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window update&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗口组结束&lt;/strong&gt;&lt;em&gt;和可选窗口更新&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2ac3c9915dbe5344eb753d1058dd98e8083fb1ea" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-group-start&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;window-group-start&lt;/strong&gt;&lt;em&gt;和可选窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="363f1c6e757dff471e63978bbaf4812926952cc9" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-header-line-height&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗口标题行高度&lt;/strong&gt;&lt;em&gt;和可选窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="09164adb1009aa487769c11a130a00c7b4c42656" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-hscroll&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;window-hscroll&lt;/strong&gt;&lt;em&gt;和可选窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="274834900addd0345d1bbfc2fb619fa1cff8207b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-in-direction&lt;/strong&gt;&lt;em&gt;direction &amp;amp;optional window ignore sign wrap mini&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗口在方向&lt;/strong&gt;&lt;em&gt;上与可选的窗口忽略标志包装的迷你&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e7033feb293e6c006adf2181871649003a6106c1" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-largest-empty-rectangle&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window count min-width min-height positions left&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗口最大空矩形&lt;/strong&gt;&lt;em&gt;和可选窗口计数最小宽度最小高度左位置&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="878000dc38b151b5f92f291594cae2de0e90fc8a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-left-child&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;左上子&lt;/strong&gt;&lt;em&gt;窗口和可选窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="306cde53b431a3849e0756e058b94e1e79ed825f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-line-height&lt;/strong&gt;&lt;em&gt;&amp;amp;optional line window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗口线高&lt;/strong&gt;&lt;em&gt;和可选线窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b70624c99ada1286938484581530474a78d82788" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-lines-pixel-dimensions&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window first last body inverse left&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗口线像素尺寸&lt;/strong&gt;&lt;em&gt;和可选窗口第一个最后一个主体反向向左&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="910d0a99832b573b8acab344668ac5abb3d65f9c" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-list&lt;/strong&gt;&lt;em&gt;&amp;amp;optional frame minibuffer window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗口列表&lt;/strong&gt;&lt;em&gt;和可选帧迷你缓冲区窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="97d109bd983313b37bffb6bdaabd9605e2f373d6" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-live-p&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;window-live-p&lt;/strong&gt;&lt;em&gt;对象&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="086726fdbc87acfc943575c7fc752cb83a19f7f3" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-main-window&lt;/strong&gt;&lt;em&gt;&amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗口主窗口&lt;/strong&gt;&lt;em&gt;和可选框架&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dfb70d9cd6360386f65f428e1301d7516141a40d" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-make-atom&lt;/strong&gt;&lt;em&gt;window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;window-make-atom&lt;/strong&gt;&lt;em&gt;窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0e254805489bf48537b180c6e927eb235e1b89ba" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-margins&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗口边距&lt;/strong&gt;&lt;em&gt;和可选窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b32aeedacf5f773637bdb8c9cb3ced62058137a3" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-max-chars-per-line&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window face&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;每行窗口最大字符数&lt;/strong&gt;&lt;em&gt;和可选窗口面&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d2f48147e0a3d254dea3471cf78ee84cb5292ca1" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-min-size&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window horizontal ignore pixelwise&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;最小窗口大小&lt;/strong&gt;&lt;em&gt;和可选窗口水平按像素忽略&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="50358253a98bf62593be3c59b75f9dfee6431518" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-minibuffer-p&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;window-minibuffer-p&lt;/strong&gt;&lt;em&gt;和可选窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7b8a2dbd5ab2146c03722f5527e81fec9a3ca965" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-mode-line-height&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗口模式行高&lt;/strong&gt;&lt;em&gt;和可选窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c28cbf1737b94c31889d836938ac4c1bad1460e6" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-next-buffers&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗口下一个缓冲区&lt;/strong&gt;&lt;em&gt;和可选窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6181fc6036e4b35f2dfd79d131e39d626b5d45c9" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-next-sibling&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;下一个同级&lt;/strong&gt;&lt;em&gt;窗口和可选窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="eee1180b6a7d98c645e38d1ddabf31c5b299ad52" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-old-body-pixel-height&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗口老像素高度&lt;/strong&gt;&lt;em&gt;和可选窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a7537e1e431ffaffa58f007651bb9674edc491cb" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-old-body-pixel-width&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;window-old-body-pixel-width&lt;/strong&gt;&lt;em&gt;和可选窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4d038bf39d79a7fc8863d226c995e96681f8fd8b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-old-buffer&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;旧窗口缓冲区&lt;/strong&gt;&lt;em&gt;和可选窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="aff8c5b7886c1979a285be1695a988022a689151" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-old-pixel-height&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;老像素高度&lt;/strong&gt;&lt;em&gt;窗口和可选窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8af78c76d0b374dbada2d267fba005041f66276d" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-old-pixel-width&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗口旧像素宽度&lt;/strong&gt;&lt;em&gt;和可选窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="170b42a00aa0e4b864533a660dbbb48fecfa2b9c" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-parameter&lt;/strong&gt;&lt;em&gt;window parameter&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗口参数&lt;/strong&gt;&lt;em&gt;窗口参数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f3a8a018e68afb432e3e152f49379b28614bdeca" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-parameters&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗口参数&lt;/strong&gt;&lt;em&gt;和可选窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2cf46d0613aceba550e80e8160f438381ee8c4fe" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-parent&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗口父级&lt;/strong&gt;&lt;em&gt;和可选窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="eff5242c8da0cf2f9da2cbf4ac5c755a2ddfa86e" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-pixel-edges&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗口像素边缘&lt;/strong&gt;&lt;em&gt;和可选窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="90a312cf7fa6e6c2af841aa2b1082604851d12f5" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-pixel-height&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗口像素高度&lt;/strong&gt;&lt;em&gt;和可选窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4f5d121c7ce1bc038dbfa2c794aca816b1bb2fde" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-pixel-width&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗口像素宽度&lt;/strong&gt;&lt;em&gt;和可选窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4ca44ecdb78dfbb42f43a1c11158354270a3a2fc" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-point&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗口点&lt;/strong&gt;&lt;em&gt;和可选窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e07b41374ac0b60f55de84059965e7f04c3ea979" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-preserve-size&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window horizontal preserve&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗口保留大小&lt;/strong&gt;&lt;em&gt;和可选窗口水平保留&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="faa500f3de859d915f6cc90120a578b21e1cb757" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-preserved-size&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window horizontal&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;保留窗口大小&lt;/strong&gt;&lt;em&gt;和可选窗口水平&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8554a94e02fe738fe12743332207e26eef489f4f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-prev-buffers&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;window-prev-buffers&lt;/strong&gt;&lt;em&gt;和可选窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c69c006307e6b81d1235a52462fa43463538e084" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-prev-sibling&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">功能：上&lt;strong&gt;一级&lt;/strong&gt;&lt;em&gt;窗口和可选窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d01047c627af25d6bae9b18e2f5e6271bea13cfd" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-resizable&lt;/strong&gt;&lt;em&gt;window delta &amp;amp;optional horizontal ignore pixelwise&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;可调整&lt;/strong&gt;&lt;em&gt;窗口&lt;/em&gt;&lt;strong&gt;大小的&lt;/strong&gt;&lt;em&gt;窗口增量和可选水平忽略像素&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="98a9e7fb5561f750728841952b38ab13de1d4076" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-resize&lt;/strong&gt;&lt;em&gt;window delta &amp;amp;optional horizontal ignore pixelwise&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗口大小调整&lt;/strong&gt;&lt;em&gt;窗口增量和可选水平忽略像素方向&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0c3c1f8a82c1167aba8033cd343d5c2cf84a3349" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-right-divider-width&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;window-right-divider-width&lt;/strong&gt;&lt;em&gt;和可选窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7e7df5f2b7188f441bfc3a3132164aa3256a598c" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-scroll-bar-height&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;window-scroll-bar-height&lt;/strong&gt;&lt;em&gt;和可选窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fb715a076d48ccf7791640d4842fc770d0ea6005" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-scroll-bar-width&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;window-scroll-bar-width&lt;/strong&gt;&lt;em&gt;和可选窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2227dcbaf057fe090a30032a15e83ba22b9c4ced" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-scroll-bars&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗口滚动条&lt;/strong&gt;&lt;em&gt;和可选窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a134a54ddcb0493beb678f187ebf4355f821e9a9" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-start&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗口启动&lt;/strong&gt;&lt;em&gt;和可选窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4a6104fb60c8c7390e28ee32cce7241d1ef10a31" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-state-get&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window writable&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗口状态获取&lt;/strong&gt;&lt;em&gt;和可选的可写窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="175f1d078b1ead3eb8e94460736ba2f35ce4385b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-state-put&lt;/strong&gt;&lt;em&gt;state &amp;amp;optional window ignore&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗口状态输入&lt;/strong&gt;&lt;em&gt;状态和可选窗口忽略&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ec60ab06fcfee24f442429f8e00dfae52d78af78" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-system&lt;/strong&gt;&lt;em&gt;&amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗户系统&lt;/strong&gt;&lt;em&gt;和可选框架&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a2b1ff8d200c6cfe69d5bd4278c06bebc9afba00" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-text-pixel-size&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window from to x-limit y-limit mode-and-header-line&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗口文本像素大小&lt;/strong&gt;&lt;em&gt;和可选窗口从到x限制y限制模式和标题行&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9b5e7f925331fced31814bb0474a1a3ff0662eb5" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-top-child&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;子&lt;/strong&gt;&lt;em&gt;窗口和可选窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bf547f07ba02a82ac1d4251430d21bae14857227" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-total-height&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window round&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;总高度&lt;/strong&gt;&lt;em&gt;窗口和可选的窗口圆角&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="25216fbfa32843692899b0898ffe0bb8628b8c29" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-total-size&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window horizontal round&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗口总大小&lt;/strong&gt;&lt;em&gt;和可选窗口水平倒圆角&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ac20aec039125e0f0ea72839db9ba1b83acfc3ce" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-total-width&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window round&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗口总宽度&lt;/strong&gt;&lt;em&gt;和可选窗口圆角&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cd6c1a0a0ec443bf6a8f5d5fa121a6a53a8e3125" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-tree&lt;/strong&gt;&lt;em&gt;&amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗口树&lt;/strong&gt;&lt;em&gt;和可选框架&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2514d95985d052bb4e0f71c2ccd0c68d354ba5e9" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-use-time&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;窗口使用时间&lt;/strong&gt;&lt;em&gt;和可选窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="27d6018ff3c390aefda76b95ca369035e12212ec" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-valid-p&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;window-valid -p&lt;/strong&gt;&lt;em&gt;对象&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="421480287ede76ebb4f4c704c435450228798c7b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;window-vscroll&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window pixels-p&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;window-vscroll&lt;/strong&gt;&lt;em&gt;和可选窗口像素-p&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1f5a652d29d57a628af63f4ddacbbc12288f43dd" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;windowp&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;windowp&lt;/strong&gt;&lt;em&gt;对象&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e0ef2730ea18b8350ca1196dc3a845b5ef849634" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;write-char&lt;/strong&gt;&lt;em&gt;character &amp;amp;optional stream&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;写&lt;/strong&gt;&lt;em&gt;字符和可选流&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="91fddda4017a6e3e81e1fe9f557a7ba90950daf0" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;x-close-connection&lt;/strong&gt;&lt;em&gt;display&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;x-close-connection&lt;/strong&gt;&lt;em&gt;显示&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d1466d18c7ec87e58cad4cf0f462312aba9bbb8f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;x-display-list&lt;/strong&gt;</source>
          <target state="translated">功能：&lt;strong&gt;x-display-list&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0a7c89bc52481d7041be910fc982542b13e94a84" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;x-double-buffered-p&lt;/strong&gt;&lt;em&gt;&amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;x-double-buffered-p&lt;/strong&gt;&lt;em&gt;和可选帧&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a051713e3f019168c6ce92f718f2a2e416fe58f2" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;x-family-fonts&lt;/strong&gt;&lt;em&gt;&amp;amp;optional family frame&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;x系列字体&lt;/strong&gt;&lt;em&gt;和可选的家庭框架&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9b6b92922c76cda529545c680fc8fca586045562" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;x-focus-frame&lt;/strong&gt;&lt;em&gt;frame &amp;amp;optional noactivate&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;x对焦&lt;/strong&gt;&lt;em&gt;框和可选noactivate&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="37dc7f2f9a0dbf6745fc6c3f94eabcab415f016c" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;x-get-resource&lt;/strong&gt;&lt;em&gt;attribute class &amp;amp;optional component subclass&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;x-get-resource&lt;/strong&gt;&lt;em&gt;属性类和可选组件子类&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="574c14eab363838e882ef0854ccb55e344b0ead6" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;x-list-fonts&lt;/strong&gt;&lt;em&gt;name &amp;amp;optional reference-face frame maximum width&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;x-list-fonts&lt;/strong&gt;&lt;em&gt;名称和可选的参考面框架最大宽度&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b1de9ff0264ee36733e8b9a6116ae67df1037f3c" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;x-open-connection&lt;/strong&gt;&lt;em&gt;display &amp;amp;optional xrm-string must-succeed&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;x-open-connection&lt;/strong&gt;&lt;em&gt;显示和可选的xrm-string必须成功&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2931574591b9a73386a7769f0163de3836998a81" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;x-parse-geometry&lt;/strong&gt;&lt;em&gt;geom&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;x-parse-geometry &lt;/strong&gt;&lt;em&gt;geom&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6cc69a9ddc6208c1a021bd98c54c71992c2dc738" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;x-popup-dialog&lt;/strong&gt;&lt;em&gt;position contents &amp;amp;optional header&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;x-popup-dialog&lt;/strong&gt;&lt;em&gt;位置内容和可选标题&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="657707167d061e778f16934087f760413d37e90b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;x-popup-menu&lt;/strong&gt;&lt;em&gt;position menu&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;x弹出菜单&lt;/strong&gt;&lt;em&gt;位置菜单&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7ad2b58e8c8f897d4daef347175ce58623244d9e" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;x-server-vendor&lt;/strong&gt;&lt;em&gt;&amp;amp;optional display&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;x服务器供应商&lt;/strong&gt;&lt;em&gt;和可选显示&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a9d0faea795c6243bbdb5a6d55b629b043a63af2" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;x-server-version&lt;/strong&gt;&lt;em&gt;&amp;amp;optional display&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;x服务器版本&lt;/strong&gt;&lt;em&gt;和可选显示&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4231b265fbafad5e2088c9b19f0d33c302e655a7" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;xor&lt;/strong&gt;&lt;em&gt;condition1 condition2&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;异或&lt;/strong&gt;&lt;em&gt;条件1条件2&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f28ecbef98d586be37b5762b738a1814197485dd" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;xwidget-buffer&lt;/strong&gt;&lt;em&gt;xwidget&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;xwidget缓冲区&lt;/strong&gt;&lt;em&gt;xwidget&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d552ce6483728054dc381aad91c527c042a44839" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;xwidget-info&lt;/strong&gt;&lt;em&gt;xwidget&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;xwidget-info &lt;/strong&gt;&lt;em&gt;xwidget&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f2f265f6cb8391cf48e201af30640901fb6ee95b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;xwidget-plist&lt;/strong&gt;&lt;em&gt;xwidget&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;xwidget-plist &lt;/strong&gt;&lt;em&gt;xwidget&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="567d02f9215a4b41b6f509b1f2eb8965d4d3fcc7" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;xwidget-query-on-exit-flag&lt;/strong&gt;&lt;em&gt;xwidget&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;xwidget退出时查询标志&lt;/strong&gt;&lt;em&gt;xwidget&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b75f5f0e3b44466ab5fe61fd9cc40846a6360fba" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;xwidget-resize&lt;/strong&gt;&lt;em&gt;xwidget width height&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;xwidget调整&lt;/strong&gt;&lt;em&gt;xwidget宽度的高度&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d4c170048cc1c16145bb683616dfad185859ed06" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;xwidget-size-request&lt;/strong&gt;&lt;em&gt;xwidget&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;xwidget-size-request &lt;/strong&gt;&lt;em&gt;xwidget&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7642ec1f8d645021f62d7b72507769be5743e5c0" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;xwidget-webkit-execute-script-rv&lt;/strong&gt;&lt;em&gt;xwidget script &amp;amp;optional default&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;xwidget-webkit-execute-script-rv &lt;/strong&gt;&lt;em&gt;xwidget脚本和可选默认&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="50b93bc712102e195a07661aa6a3717ad82cddab" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;xwidget-webkit-execute-script&lt;/strong&gt;&lt;em&gt;xwidget script&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;xwidget-webkit-execute-script &lt;/strong&gt;&lt;em&gt;xwidget脚本&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c995922ec5796753cbde8ca8a1ddbb441616bf67" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;xwidget-webkit-get-title&lt;/strong&gt;&lt;em&gt;xwidget&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;xwidget-webkit-get-title &lt;/strong&gt;&lt;em&gt;xwidget&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3f38b62cbed1e0b3779050ff24a193445fb3e83b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;xwidget-webkit-goto-uri&lt;/strong&gt;&lt;em&gt;xwidget uri&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;xwidget-webkit-goto-uri &lt;/strong&gt;&lt;em&gt;xwidget uri&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b7e7c11e28f2ffeb2c29ab67bb2a37a708405080" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;xwidgetp&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;xwidgetp&lt;/strong&gt;&lt;em&gt;对象&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0a81e88b7d08049a4a74f026bd2cb1470e4b2444" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;y-or-n-p-with-timeout&lt;/strong&gt;&lt;em&gt;prompt seconds default&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;y-或-np-with-timeout&lt;/strong&gt;&lt;em&gt;提示秒默认&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b3224f3316be355fffa77fa77612d79e20e4a9f2" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;y-or-n-p&lt;/strong&gt;&lt;em&gt;prompt&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;y-或-np&lt;/strong&gt;&lt;em&gt;提示&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fd639d612d172cb6304981eddb2227c73443e96f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;yes-or-no-p&lt;/strong&gt;&lt;em&gt;prompt&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;是或否-p&lt;/strong&gt;&lt;em&gt;提示&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c9782bc7bace59ae952d9d5518de1d59f82ff942" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;zerop&lt;/strong&gt;&lt;em&gt;number&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;zerop&lt;/strong&gt;&lt;em&gt;号码&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0dff4cd06472c1d6220497f2dbb7daa752896667" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;zlib-available-p&lt;/strong&gt;</source>
          <target state="translated">功能：&lt;strong&gt;zlib-available-p&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="13df82c296e92922f18f9b101f3080a72169f013" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;zlib-decompress-region&lt;/strong&gt;&lt;em&gt;start end &amp;amp;optional allow-partial&lt;/em&gt;</source>
          <target state="translated">功能：&lt;strong&gt;zlib-decompress-region&lt;/strong&gt;&lt;em&gt;开始结束和可选的allow-partial&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2b961dea1dc0c60ddf9a2c8e9d090f6f7d082483" translate="yes" xml:space="preserve">
          <source>Functions</source>
          <target state="translated">Functions</target>
        </trans-unit>
        <trans-unit id="17e49430d385434c560ab18e0afe812eac6c9c3d" translate="yes" xml:space="preserve">
          <source>Functions and macros that use rx forms.</source>
          <target state="translated">使用rx形式的函数和宏。</target>
        </trans-unit>
        <trans-unit id="e985fc070b38d0219dea4dc72f64e8ee148cbc29" translate="yes" xml:space="preserve">
          <source>Functions and macros using rx regexps</source>
          <target state="translated">使用rx regexps的函数和宏。</target>
        </trans-unit>
        <trans-unit id="a3f17c084c9be9048d3cedfd8a2095dd80997fea" translate="yes" xml:space="preserve">
          <source>Functions and variables for kill ring access.</source>
          <target state="translated">杀伤环访问的函数和变量。</target>
        </trans-unit>
        <trans-unit id="7932dd56d16faf7e955a24c3240332285c7602b6" translate="yes" xml:space="preserve">
          <source>Functions defined using &lt;code&gt;cl-defmethod&lt;/code&gt; cannot be made interactive, i.e. commands (see &lt;a href=&quot;defining-commands#Defining-Commands&quot;&gt;Defining Commands&lt;/a&gt;), by adding the &lt;code&gt;interactive&lt;/code&gt; form to them. If you need a polymorphic command, we recommend defining a normal command that calls a polymorphic function defined via &lt;code&gt;cl-defgeneric&lt;/code&gt; and &lt;code&gt;cl-defmethod&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;cl-defmethod&lt;/code&gt; 定义的函数不能通过将 &lt;code&gt;interactive&lt;/code&gt; 形式添加到交互中而变得交互，即命令（请参见&lt;a href=&quot;defining-commands#Defining-Commands&quot;&gt;定义命令&lt;/a&gt;）。如果需要多态命令，建议您定义一个普通命令，该命令调用通过 &lt;code&gt;cl-defgeneric&lt;/code&gt; 和 &lt;code&gt;cl-defmethod&lt;/code&gt; 定义的多态函数。</target>
        </trans-unit>
        <trans-unit id="33a33099709948ce81e215f6e51dff2404cc61e5" translate="yes" xml:space="preserve">
          <source>Functions defined using &lt;code&gt;defun&lt;/code&gt; have a hard-coded set of assumptions about the types and expected values of their arguments. For example, a function that was designed to handle values of its argument that are either numbers or lists of numbers will fail or signal an error if called with a value of any other type, such as a vector or a string. This happens because the implementation of the function is not prepared to deal with types other than those assumed during the design.</source>
          <target state="translated">使用 &lt;code&gt;defun&lt;/code&gt; 定义的函数具有一组关于其参数的类型和期望值的硬编码假设。例如，被设计为处理其自变量为数字或数字列表的值的函数，如果使用任何其他类型的值（例如向量或字符串）进行调用，将失败或发出错误信号。发生这种情况是因为该函数的实现未准备好处理设计期间假定的类型以外的类型。</target>
        </trans-unit>
        <trans-unit id="64d123daf526eab41cdc3facaf061f89275d0e7c" translate="yes" xml:space="preserve">
          <source>Functions defined via &lt;code&gt;define-inline&lt;/code&gt; have several advantages with respect to macros defined by &lt;code&gt;defsubst&lt;/code&gt; or &lt;code&gt;defmacro&lt;/code&gt;:</source>
          <target state="translated">通过 &lt;code&gt;defsubst&lt;/code&gt; &lt;code&gt;define-inline&lt;/code&gt; 函数相对于defsubst或 &lt;code&gt;defmacro&lt;/code&gt; 定义的宏具有多个优点：</target>
        </trans-unit>
        <trans-unit id="5b9edad7626fced928fd0f66178e6b0042ec3e5a" translate="yes" xml:space="preserve">
          <source>Functions for Key Lookup</source>
          <target state="translated">钥匙查询的功能</target>
        </trans-unit>
        <trans-unit id="c48e9d042008699b99b46a56d001d8caa2e6a029" translate="yes" xml:space="preserve">
          <source>Functions for Killing</source>
          <target state="translated">杀人的功能</target>
        </trans-unit>
        <trans-unit id="f23851edd43ece67d06850b7a2766a9d90644f29" translate="yes" xml:space="preserve">
          <source>Functions for Vectors</source>
          <target state="translated">向量的函数</target>
        </trans-unit>
        <trans-unit id="30d19083c9b802f1b40f1818519b3bafa3939c59" translate="yes" xml:space="preserve">
          <source>Functions for Visiting Files</source>
          <target state="translated">访问文件的功能</target>
        </trans-unit>
        <trans-unit id="5f70e2f0ca2964c2c9ce77abd21c41e619d583d6" translate="yes" xml:space="preserve">
          <source>Functions for Working with Faces</source>
          <target state="translated">使用面孔的功能</target>
        </trans-unit>
        <trans-unit id="d94b7f67a7255149e8bbda84a704038e6fc1ee70" translate="yes" xml:space="preserve">
          <source>Functions for Yanking</source>
          <target state="translated">Yanking的功能</target>
        </trans-unit>
        <trans-unit id="e098656af6a0fb96e659a33854766e9f7121079c" translate="yes" xml:space="preserve">
          <source>Functions for displaying a buffer can be told to not use specific windows by marking these windows as &lt;em&gt;dedicated&lt;/em&gt; to their buffers. &lt;code&gt;display-buffer&lt;/code&gt; (see &lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;Choosing Window&lt;/a&gt;) never uses a dedicated window for displaying another buffer in it. &lt;code&gt;get-lru-window&lt;/code&gt; and &lt;code&gt;get-largest-window&lt;/code&gt; (see &lt;a href=&quot;cyclic-window-ordering#Cyclic-Window-Ordering&quot;&gt;Cyclic Window Ordering&lt;/a&gt;) do not consider dedicated windows as candidates when their &lt;var&gt;dedicated&lt;/var&gt; argument is non-&lt;code&gt;nil&lt;/code&gt;. The behavior of &lt;code&gt;set-window-buffer&lt;/code&gt; (see &lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;Buffers and Windows&lt;/a&gt;) with respect to dedicated windows is slightly different, see below.</source>
          <target state="translated">通过将这些窗口标记为&lt;em&gt;专用&lt;/em&gt;于其缓冲区，可以告知显示缓冲区的功能不要使用特定的窗口。 &lt;code&gt;display-buffer&lt;/code&gt; （请参见&lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;选择窗口&lt;/a&gt;）从不使用专用窗口在其中显示另一个缓冲区。 &lt;code&gt;get-lru-window&lt;/code&gt; ，并 &lt;code&gt;get-largest-window&lt;/code&gt; （见&lt;a href=&quot;cyclic-window-ordering#Cyclic-Window-Ordering&quot;&gt;循环窗口顺序&lt;/a&gt;）不考虑专用窗口为候选人时，他们的 &lt;var&gt;dedicated&lt;/var&gt; 说法是不 &lt;code&gt;nil&lt;/code&gt; 。的行为 &lt;code&gt;set-window-buffer&lt;/code&gt; （见&lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;缓冲器和Windows&lt;/a&gt;）相对于专用的Windows略有不同，见下文。</target>
        </trans-unit>
        <trans-unit id="55fdd5d7db124180399d931fc1d42f549fa627d2" translate="yes" xml:space="preserve">
          <source>Functions for explicit filling.</source>
          <target state="translated">显性填充的功能。</target>
        </trans-unit>
        <trans-unit id="66376e0b74f9c79d192649ebbdad50ff67bd65ed" translate="yes" xml:space="preserve">
          <source>Functions for operating on regular expressions.</source>
          <target state="translated">用于操作正则表达式的函数。</target>
        </trans-unit>
        <trans-unit id="0d09a2bf9ef6730b5071282225aa8c10c88aa2a9" translate="yes" xml:space="preserve">
          <source>Functions for records.</source>
          <target state="translated">记录的功能。</target>
        </trans-unit>
        <trans-unit id="5bf9cc881ecbe1ce5df25364d81f1ec2efd884fa" translate="yes" xml:space="preserve">
          <source>Functions for retrieving the height and/or width of window dividers (see &lt;a href=&quot;window-dividers#Window-Dividers&quot;&gt;Window Dividers&lt;/a&gt;), fringes (see &lt;a href=&quot;fringes#Fringes&quot;&gt;Fringes&lt;/a&gt;), scroll bars (see &lt;a href=&quot;scroll-bars#Scroll-Bars&quot;&gt;Scroll Bars&lt;/a&gt;), and display margins (see &lt;a href=&quot;display-margins#Display-Margins&quot;&gt;Display Margins&lt;/a&gt;) are described in the corresponding sections.</source>
          <target state="translated">相应部分介绍了用于检索窗口分隔线（请参见&lt;a href=&quot;window-dividers#Window-Dividers&quot;&gt;Window Dividers&lt;/a&gt;），条纹（请参见&lt;a href=&quot;fringes#Fringes&quot;&gt;Fringes&lt;/a&gt;），滚动条（请参见&lt;a href=&quot;scroll-bars#Scroll-Bars&quot;&gt;Scroll Bars&lt;/a&gt;）和显示页边距（请参见&lt;a href=&quot;display-margins#Display-Margins&quot;&gt;显示页边距&lt;/a&gt;）的高度和/或宽度的功能。</target>
        </trans-unit>
        <trans-unit id="b9bb5e9911944d5a30c4fbfb4b5aca566bf017e6" translate="yes" xml:space="preserve">
          <source>Functions for sorting parts of the buffer.</source>
          <target state="translated">缓冲区部分排序的功能。</target>
        </trans-unit>
        <trans-unit id="fe9e779b64d115d5ef6ae0821423cc2c8757e95d" translate="yes" xml:space="preserve">
          <source>Functions in the Ewoc package.</source>
          <target state="translated">Ewoc包中的功能。</target>
        </trans-unit>
        <trans-unit id="3a3123e19434fae2e4a9ebf9b81753bd5943b4d6" translate="yes" xml:space="preserve">
          <source>Functions run by this hook should avoid calling &lt;code&gt;select-window&lt;/code&gt; with a nil &lt;var&gt;norecord&lt;/var&gt; argument or &lt;code&gt;with-temp-buffer&lt;/code&gt; since either may lead to infinite recursion.</source>
          <target state="translated">该钩子运行的函数应避免使用nil &lt;var&gt;norecord&lt;/var&gt; 参数或 &lt;code&gt;with-temp-buffer&lt;/code&gt; 调用 &lt;code&gt;select-window&lt;/code&gt; ，因为二者之一都可能导致无限递归。</target>
        </trans-unit>
        <trans-unit id="f19b2906ad93af7b231a3cf540015ff3414b6782" translate="yes" xml:space="preserve">
          <source>Functions set up to load files containing their real definitions.</source>
          <target state="translated">为加载包含其真实定义的文件而设置的函数。</target>
        </trans-unit>
        <trans-unit id="397cb760a8d42673b95050672dfe9882d84429c6" translate="yes" xml:space="preserve">
          <source>Functions specifically for arrays.</source>
          <target state="translated">专门针对数组的函数。</target>
        </trans-unit>
        <trans-unit id="bdb43fb549a2620e04415871c6287a42e67a809f" translate="yes" xml:space="preserve">
          <source>Functions specifically for vectors.</source>
          <target state="translated">专门针对向量的函数。</target>
        </trans-unit>
        <trans-unit id="031db2d13f7ad53080afda1be16d788b6c73999a" translate="yes" xml:space="preserve">
          <source>Functions specified buffer-locally are called for any window showing the corresponding buffer if at least one window on that frame has been added, deleted or assigned another buffer or changed its total or body size since the last time window change functions were run. Each call is performed with the window showing the buffer temporarily selected and its buffer current.</source>
          <target state="translated">如果自上次运行窗口更改函数以来,该帧上至少有一个窗口被添加、删除或分配了另一个缓冲区,或改变了其总大小或主体大小,则会对显示相应缓冲区的任何窗口调用指定的函数buffer-locally。每次调用都是在显示缓冲区的窗口暂时被选中及其缓冲区当前的情况下进行的。</target>
        </trans-unit>
        <trans-unit id="429d6e144d10d7c4525f1ad1420c26ec5e578883" translate="yes" xml:space="preserve">
          <source>Functions specified buffer-locally are called for any window showing the corresponding buffer if that window has been added or assigned another buffer or changed its total or body size since the last time window change functions were run. In this case the window is passed as argument.</source>
          <target state="translated">如果自上次运行窗口变化函数以来,任何显示相应缓冲区的窗口被添加或分配了另一个缓冲区,或改变了其总大小或主体大小,则会调用指定的缓冲区局部函数。在这种情况下,窗口作为参数被传递。</target>
        </trans-unit>
        <trans-unit id="33eed22ccb8c68683a6cff0a57d30cf647ebcfcb" translate="yes" xml:space="preserve">
          <source>Functions specified buffer-locally are called for any window showing the corresponding buffer if that window has been added or assigned another buffer, changed its total or body size or has been selected or deselected (among all windows or among all windows on its frame) since the last time window change functions were run. In this case the window is passed as argument.</source>
          <target state="translated">对于显示相应缓冲区的任何窗口,如果该窗口在上次运行窗口更改函数后被添加或分配了另一个缓冲区,改变了其总大小或主体大小,或被选中或取消选中(在所有窗口中或在其框架上的所有窗口中),则会调用指定的buffer-locally函数。在这种情况下,窗口作为参数被传递。</target>
        </trans-unit>
        <trans-unit id="40c37d8c15326a7117bf83263645646aa479bd58" translate="yes" xml:space="preserve">
          <source>Functions specified buffer-locally are called for any window showing the corresponding buffer if that window has been created or assigned that buffer since the last time window change functions were run. In this case the window is passed as argument.</source>
          <target state="translated">如果自上次运行窗口变化函数后,任何显示相应缓冲区的窗口被创建或分配了该缓冲区,则对该窗口调用指定的函数buffer-locally。在这种情况下,窗口作为参数被传递。</target>
        </trans-unit>
        <trans-unit id="f01d852fa63856ea57df09dc3683ae2ff8ba936c" translate="yes" xml:space="preserve">
          <source>Functions specified buffer-locally are called for any window showing the corresponding buffer if that window has been selected or deselected (among all windows or among all windows on its frame) since the last time window change functions were run. In this case the window is passed as argument.</source>
          <target state="translated">如果自上次运行窗口更改函数以来,任何显示相应缓冲区的窗口被选中或取消选中(在所有窗口中或在其框架上的所有窗口中),则会调用指定的buffer-locally函数。在这种情况下,窗口作为参数被传递。</target>
        </trans-unit>
        <trans-unit id="65092bb036e837d95b317e5ae25f274c1d51222e" translate="yes" xml:space="preserve">
          <source>Functions specified by the default value are also run for a frame when that frame&amp;rsquo;s window state change flag (see below) has been set since last redisplay.</source>
          <target state="translated">自上次重新显示以来，已设置该帧的窗口状态更改标志（参见下文）时，也会为该帧运行默认值指定的功能。</target>
        </trans-unit>
        <trans-unit id="477a6405f412f8471c5ca40a02a46c46fb0f5aaf" translate="yes" xml:space="preserve">
          <source>Functions specified by the default value are called for a frame if at least one window on that frame has been added or assigned another buffer or changed its total or body size since the last time window change functions were run. In this case the frame is passed as argument.</source>
          <target state="translated">如果一个框架上至少有一个窗口在上次运行窗口更改函数后被添加或分配了另一个缓冲区,或者改变了它的总大小或主体大小,则调用默认值指定的函数。在这种情况下,框架被作为参数传递。</target>
        </trans-unit>
        <trans-unit id="349d72bfb82dbb8ca6c0bc171637ef7c54f2e56c" translate="yes" xml:space="preserve">
          <source>Functions specified by the default value are called for a frame if at least one window on that frame has been added, deleted or assigned another buffer since the last time window change functions were run. In this case the frame is passed as argument.</source>
          <target state="translated">如果一个框架上至少有一个窗口在上次运行窗口更改函数后被添加、删除或分配到另一个缓冲区,则调用默认值指定的函数。在这种情况下,框架作为参数被传递。</target>
        </trans-unit>
        <trans-unit id="7c5477b2c5c088714cbd9c48c9cd5d1fc8066e00" translate="yes" xml:space="preserve">
          <source>Functions specified by the default value are called for a frame if at least one window on that frame has been added, deleted or assigned another buffer, changed its total or body size or that frame has been selected or deselected or the frame&amp;rsquo;s selected window has changed since the last time window change functions were run. In this case the frame is passed as argument.</source>
          <target state="translated">如果已在该框架上添加或删除了至少一个窗口，或者为其分配了另一个缓冲区，更改了其总大小或主体大小，或者已选择或取消选择了该框架，或者已更改了框架的选定窗口，则将为该框架调用默认值指定的功能自上次运行窗口更改功能以来。在这种情况下，框架将作为参数传递。</target>
        </trans-unit>
        <trans-unit id="f0244e1f79592261987871c87bf9faf4e95d1113" translate="yes" xml:space="preserve">
          <source>Functions specified by the default value are called for a frame if that frame has been selected or deselected or the frame&amp;rsquo;s selected window has changed since the last time window change functions were run. In this case the frame is passed as argument.</source>
          <target state="translated">如果自上次运行窗口更改功能以来已选择或取消选择该帧，或者该帧的选定窗口已更改，则将为该帧调用默认值指定的功能。在这种情况下，框架将作为参数传递。</target>
        </trans-unit>
        <trans-unit id="ea83a0ba4f250cb0b5c6fe530188703b9ba2ccae" translate="yes" xml:space="preserve">
          <source>Functions specified by the default value are called for each frame if at least one window on that frame has been added, deleted or assigned another buffer or changed its total or body size since the last time window change functions were run. Each call is performed with the frame temporarily selected and the selected window&amp;rsquo;s buffer current.</source>
          <target state="translated">如果自上次运行窗口更改功能以来，至少已在该帧上添加，删除或分配了另一个缓冲区，或更改了其总大小或主体大小，则为每个帧调用默认值指定的函数。每次调用都是在临时选定的帧和选定窗口的缓冲电流的情况下进行的。</target>
        </trans-unit>
        <trans-unit id="16aa9be2f756a78c23c4002999b9109f0616b2ce" translate="yes" xml:space="preserve">
          <source>Functions such as &lt;code&gt;read-key-sequence&lt;/code&gt; that construct strings of keyboard input characters follow these rules: they construct vectors instead of strings, when the events won&amp;rsquo;t fit in a string.</source>
          <target state="translated">诸如 &lt;code&gt;read-key-sequence&lt;/code&gt; 之类的功能可以构造键盘输入字符的字符串，遵循以下规则：当事件不适合字符串时，它们可以构造矢量而不是字符串。</target>
        </trans-unit>
        <trans-unit id="3a8d02b47233f0ff6a298c2ba8bd4819e887d2b1" translate="yes" xml:space="preserve">
          <source>Functions supposed to remove a buffer from a window or a window from a frame can behave specially when a window they operate on is dedicated. We will distinguish three basic cases, namely where (1) the window is not the only window on its frame, (2) the window is the only window on its frame but there are other frames on the same terminal left, and (3) the window is the only window on the only frame on the same terminal.</source>
          <target state="translated">本应从窗口中删除缓冲区或从框架中删除窗口的函数,在它们操作的窗口是专用的时候,会有特殊的表现。我们将区分三种基本情况,即:(1)窗口不是其框架上的唯一窗口,(2)窗口是其框架上的唯一窗口,但同一终端上还剩下其他框架,(3)窗口是同一终端上唯一框架上的唯一窗口。</target>
        </trans-unit>
        <trans-unit id="09f185f012c9fc1b3bbe85eb3c92873005eb9f06" translate="yes" xml:space="preserve">
          <source>Functions that Create Markers</source>
          <target state="translated">创建标记的函数</target>
        </trans-unit>
        <trans-unit id="c292474caaca7cc23d2177c5672b2736cb1b3534" translate="yes" xml:space="preserve">
          <source>Functions that Create Subprocesses</source>
          <target state="translated">创建子进程的函数</target>
        </trans-unit>
        <trans-unit id="9658d6fb43e8c0287ac5885704e77796a1a908d2" translate="yes" xml:space="preserve">
          <source>Functions that Expand Filenames</source>
          <target state="translated">扩展文件名的函数</target>
        </trans-unit>
        <trans-unit id="7322f4a28bf556ca185d676f7248234c2aac6178" translate="yes" xml:space="preserve">
          <source>Functions that Operate on Arrays</source>
          <target state="translated">对数组进行操作的函数</target>
        </trans-unit>
        <trans-unit id="0b9b3045c03bf792e26e487ff91a6051b449b899" translate="yes" xml:space="preserve">
          <source>Functions that Rearrange Lists</source>
          <target state="translated">重新排列列表的函数</target>
        </trans-unit>
        <trans-unit id="4fa762080d73364e3a69ee0ce1c6184966e562f9" translate="yes" xml:space="preserve">
          <source>Functions that accept any kind of sequence.</source>
          <target state="translated">接受任何类型的序列的函数。</target>
        </trans-unit>
        <trans-unit id="caf7dec299e1f38799b711747ff1bd3af55a6c19" translate="yes" xml:space="preserve">
          <source>Functions that convert to and from local time accept an optional &lt;em&gt;time zone rule&lt;/em&gt; argument, which specifies the conversion&amp;rsquo;s time zone and daylight saving time history. If the time zone rule is omitted or &lt;code&gt;nil&lt;/code&gt;, the conversion uses Emacs&amp;rsquo;s default time zone. If it is &lt;code&gt;t&lt;/code&gt;, the conversion uses Universal Time. If it is &lt;code&gt;wall&lt;/code&gt;, the conversion uses the system wall clock time. If it is a string, the conversion uses the time zone rule equivalent to setting &lt;code&gt;TZ&lt;/code&gt; to that string. If it is a list (&lt;var&gt;offset&lt;/var&gt;&lt;var&gt;abbr&lt;/var&gt;), where &lt;var&gt;offset&lt;/var&gt; is an integer number of seconds east of Universal Time and &lt;var&gt;abbr&lt;/var&gt; is a string, the conversion uses a fixed time zone with the given offset and abbreviation. An integer &lt;var&gt;offset&lt;/var&gt; is treated as if it were (&lt;var&gt;offset&lt;/var&gt;&lt;var&gt;abbr&lt;/var&gt;), where &lt;var&gt;abbr&lt;/var&gt; is a numeric abbreviation on POSIX-compatible platforms and is unspecified on MS-Windows.</source>
          <target state="translated">往返于本地时间的函数接受一个可选的&lt;em&gt;时区规则&lt;/em&gt;参数，该参数指定转换的时区和夏令时历史。如果忽略了时区规则或 &lt;code&gt;nil&lt;/code&gt; ，则转换将使用Emacs的默认时区。如果为 &lt;code&gt;t&lt;/code&gt; ，则转换使用世界标准时间。如果是 &lt;code&gt;wall&lt;/code&gt; ，则转换使用系统的墙上时钟时间。如果是字符串，则转换将使用与将 &lt;code&gt;TZ&lt;/code&gt; 设置为该字符串等效的时区规则。如果它是一个列表（ &lt;var&gt;offset&lt;/var&gt; &lt;var&gt;abbr&lt;/var&gt; ），其中 &lt;var&gt;offset&lt;/var&gt; 是世界时（东部时间）和 &lt;var&gt;abbr&lt;/var&gt; 以东的整数秒数如果是字符串，则转换使用具有给定偏移量和缩写的固定时区。整数 &lt;var&gt;offset&lt;/var&gt; 被视为（ &lt;var&gt;offset&lt;/var&gt; &lt;var&gt;abbr&lt;/var&gt; ），其中 &lt;var&gt;abbr&lt;/var&gt; 是与POSIX兼容的平台上的数字缩写，在MS-Windows上未指定。</target>
        </trans-unit>
        <trans-unit id="dc2f9bde3b84d70d5c0a98fe6c8340e56885252e" translate="yes" xml:space="preserve">
          <source>Functions that create buffers.</source>
          <target state="translated">创建缓冲区的函数。</target>
        </trans-unit>
        <trans-unit id="f93bdb368841c9ff14ce695dcfc4943839623bad" translate="yes" xml:space="preserve">
          <source>Functions that enclose a lexical environment.</source>
          <target state="translated">包围一个词汇环境的函数。</target>
        </trans-unit>
        <trans-unit id="e236dab72a27840a70d010ab0eb2f299e7fd313d" translate="yes" xml:space="preserve">
          <source>Functions that kill text.</source>
          <target state="translated">杀文本的函数。</target>
        </trans-unit>
        <trans-unit id="b80d174dad443398f135c18f08693e8b67ed6be0" translate="yes" xml:space="preserve">
          <source>Functions that load Emacs Lisp packages can also load dynamic modules. They recognize dynamic modules by looking at their file-name extension, a.k.a. &amp;ldquo;suffix&amp;rdquo;. This suffix is platform-dependent.</source>
          <target state="translated">加载Emacs Lisp软件包的函数也可以加载动态模块。他们通过查看文件扩展名（也称为&amp;ldquo;后缀&amp;rdquo;）来识别动态模块。此后缀取决于平台。</target>
        </trans-unit>
        <trans-unit id="efe5615ef277c7d21f2a452bc42126761e02a88e" translate="yes" xml:space="preserve">
          <source>Functions that start subprocesses.</source>
          <target state="translated">启动子进程的函数。</target>
        </trans-unit>
        <trans-unit id="a81ae5069ff939ab2a095be146ccb7480a1d143b" translate="yes" xml:space="preserve">
          <source>Functions that the compiler will expand inline.</source>
          <target state="translated">编译器将内联展开的函数。</target>
        </trans-unit>
        <trans-unit id="1e5dc8e3bd462212743edd796dc3e69c09b913d9" translate="yes" xml:space="preserve">
          <source>Functions to Unpack and Pack Bytes</source>
          <target state="translated">解压和打包字节的函数</target>
        </trans-unit>
        <trans-unit id="acf939d708d4b38671cfd4b2c0a14af8ee063597" translate="yes" xml:space="preserve">
          <source>Functions to allocate new strings.</source>
          <target state="translated">用于分配新字符串的函数。</target>
        </trans-unit>
        <trans-unit id="0a3b52c2c8318d76b264bb5a80c0c9705ee4033f" translate="yes" xml:space="preserve">
          <source>Functions to apply customization settings.</source>
          <target state="translated">应用自定义设置的功能。</target>
        </trans-unit>
        <trans-unit id="dd66cde79714217a2e072ca91147461f29be70be" translate="yes" xml:space="preserve">
          <source>Functions to call before Edebug is used. Each time it is set to a new value, Edebug will call those functions once and then reset &lt;code&gt;edebug-setup-hook&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt;. You could use this to load up Edebug specifications associated with a package you are using, but only when you also use Edebug. See &lt;a href=&quot;instrumenting#Instrumenting&quot;&gt;Instrumenting&lt;/a&gt;.</source>
          <target state="translated">使用Edebug之前要调用的函数。每次将其设置为新值时，Edebug都会调用这些函数一次，然后将 &lt;code&gt;edebug-setup-hook&lt;/code&gt; 重置为 &lt;code&gt;nil&lt;/code&gt; 。您可以使用它来加载与所使用的软件包相关联的Edebug规范，但前提是您还必须使用Edebug。见&lt;a href=&quot;instrumenting#Instrumenting&quot;&gt;插桩&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0a642467450189b1b4a6b31582b7dc83004a8bf1" translate="yes" xml:space="preserve">
          <source>Functions to create and copy keymaps.</source>
          <target state="translated">创建和复制键盘图的功能。</target>
        </trans-unit>
        <trans-unit id="2c47d13c2cc54d3100ed5e103448564750d99ac8" translate="yes" xml:space="preserve">
          <source>Functions to create hash tables.</source>
          <target state="translated">创建哈希表的函数。</target>
        </trans-unit>
        <trans-unit id="edf668fd2d1d446837053f0d58930d2d591c689c" translate="yes" xml:space="preserve">
          <source>Functions to examine and set face attributes.</source>
          <target state="translated">检验和设置人脸属性的功能。</target>
        </trans-unit>
        <trans-unit id="03618e6d238f97707b322ebf914b567b65950cba" translate="yes" xml:space="preserve">
          <source>Functions to extract info from mouse events.</source>
          <target state="translated">从鼠标事件中提取信息的功能。</target>
        </trans-unit>
        <trans-unit id="b49017a265b0f3bf6ca55c4bd9d6ba61f2532043" translate="yes" xml:space="preserve">
          <source>Functions to get info from scroll bar events.</source>
          <target state="translated">从滚动条事件中获取信息的功能。</target>
        </trans-unit>
        <trans-unit id="ee5780e6ec1abfb3b33aae9b86ac4ed506250bd5" translate="yes" xml:space="preserve">
          <source>Functions to insert or adjust indentation.</source>
          <target state="translated">插入或调整缩进的功能。</target>
        </trans-unit>
        <trans-unit id="5fd556fd7932e0ab4fcbfc00eb1d10bdc4ebabf0" translate="yes" xml:space="preserve">
          <source>Functions to operate on coding system names.</source>
          <target state="translated">对编码系统名称进行操作的功能。</target>
        </trans-unit>
        <trans-unit id="28292fb828f5ee00010554a8677a5643f2bfe90d" translate="yes" xml:space="preserve">
          <source>Functions to print Lisp objects as text.</source>
          <target state="translated">将Lisp对象打印成文本的功能。</target>
        </trans-unit>
        <trans-unit id="231d8e499c1b42e8a43567edd9e1715f9a74624d" translate="yes" xml:space="preserve">
          <source>Functions to read Lisp objects from text.</source>
          <target state="translated">从文本中读取Lisp对象的函数。</target>
        </trans-unit>
        <trans-unit id="4452d4be433ea03d933bc31a8e5b9ff90544210d" translate="yes" xml:space="preserve">
          <source>Functions used to count and insert indentation.</source>
          <target state="translated">用于计数和插入缩进的函数。</target>
        </trans-unit>
        <trans-unit id="7786cf7d679354ab042a40f3b579751508e4ca9d" translate="yes" xml:space="preserve">
          <source>Functions, variables, macros, commands, user options, and special forms are described in this manual in a uniform format. The first line of a description contains the name of the item followed by its arguments, if any. The category&amp;mdash;function, variable, or whatever&amp;mdash;appears at the beginning of the line. The description follows on succeeding lines, sometimes with examples.</source>
          <target state="translated">函数，变量，宏，命令，用户选项和特殊形式在本手册中以统一格式描述。描述的第一行包含该项目的名称，后跟其参数（如果有）。类别（函数，变量或其他内容）出现在行的开头。后面的描述有时带有示例。</target>
        </trans-unit>
        <trans-unit id="f177e8243dc3d7af82298b042c624be80fdc42ea" translate="yes" xml:space="preserve">
          <source>Further control over network connections.</source>
          <target state="translated">进一步控制网络连接。</target>
        </trans-unit>
        <trans-unit id="80e175f49a31064e7e0f004b3931296051e97c64" translate="yes" xml:space="preserve">
          <source>Further tuning of side windows.</source>
          <target state="translated">进一步调整侧窗。</target>
        </trans-unit>
        <trans-unit id="dd769b7c90aec0b6fac4faceb7a7c7effe0a96b9" translate="yes" xml:space="preserve">
          <source>Further vendor-specific caps start with &lt;code&gt;:x-vendor&lt;/code&gt;, like &lt;code&gt;:x-gnome-foo-cap&lt;/code&gt;.</source>
          <target state="translated">其他特定于供应商的大写字母以 &lt;code&gt;:x-vendor&lt;/code&gt; 开头，例如 &lt;code&gt;:x-gnome-foo-cap&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="38fcb1688e09c732b908e16b9869d904b88e7d33" translate="yes" xml:space="preserve">
          <source>Furthermore, if you build Emacs with ImageMagick (&lt;code&gt;libMagickWand&lt;/code&gt;) support, Emacs can display any image format that ImageMagick can. See &lt;a href=&quot;imagemagick-images#ImageMagick-Images&quot;&gt;ImageMagick Images&lt;/a&gt;. All images displayed via ImageMagick have type symbol &lt;code&gt;imagemagick&lt;/code&gt;.</source>
          <target state="translated">此外，如果使用ImageMagick（ &lt;code&gt;libMagickWand&lt;/code&gt; ）支持构建Emacs ，则Emacs可以显示ImageMagick可以的任何图像格式。请参阅&lt;a href=&quot;imagemagick-images#ImageMagick-Images&quot;&gt;ImageMagick图片&lt;/a&gt;。通过ImageMagick显示的所有图像都带有符号 &lt;code&gt;imagemagick&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a36a6718f54524d846894fb04b5b885b4e43e63b" translate="yes" xml:space="preserve">
          <source>G</source>
          <target state="translated">G</target>
        </trans-unit>
        <trans-unit id="d3ab0d37a5570c2a63b16ca617fa7f37aa9c811f" translate="yes" xml:space="preserve">
          <source>GID</source>
          <target state="translated">GID</target>
        </trans-unit>
        <trans-unit id="758f6c9347b91091c38ad698a8eba6aeac47b9c4" translate="yes" xml:space="preserve">
          <source>GIF</source>
          <target state="translated">GIF</target>
        </trans-unit>
        <trans-unit id="b1d04b7353f342b3fc0e138dd448e6d3d2a270b7" translate="yes" xml:space="preserve">
          <source>GNU Emacs Internals</source>
          <target state="translated">GNU Emacs内部</target>
        </trans-unit>
        <trans-unit id="14bfe5c12f7749ed07408ca85f24a1934bf6aa27" translate="yes" xml:space="preserve">
          <source>GNU Emacs Lisp Reference Manual</source>
          <target state="translated">GNU Emacs Lisp参考手册</target>
        </trans-unit>
        <trans-unit id="6b7ca1de2621b353948cc136cf63a45e8c2a7488" translate="yes" xml:space="preserve">
          <source>GNU Emacs Lisp is largely inspired by Maclisp, and a little by Common Lisp. If you know Common Lisp, you will notice many similarities. However, many features of Common Lisp have been omitted or simplified in order to reduce the memory requirements of GNU Emacs. Sometimes the simplifications are so drastic that a Common Lisp user might be very confused. We will occasionally point out how GNU Emacs Lisp differs from Common Lisp. If you don&amp;rsquo;t know Common Lisp, don&amp;rsquo;t worry about it; this manual is self-contained.</source>
          <target state="translated">GNU Emacs Lisp的灵感主要来自Maclisp，而Common Lisp则颇受启发。如果您知道Common Lisp，您会发现很多相似之处。但是，为了减少GNU Emacs的内存需求，Common Lisp的许多功能已被省略或简化。有时，这种简化太过激烈，以至于普通Lisp用户可能会非常困惑。我们有时会指出GNU Emacs Lisp与Common Lisp有何不同。如果您不了解Common Lisp，请不用担心。本手册是独立的。</target>
        </trans-unit>
        <trans-unit id="1624112f8e7208e6275b3c1c19938103ec6a0d70" translate="yes" xml:space="preserve">
          <source>GNU Emacs Manual</source>
          <target state="translated">GNU Emacs手册</target>
        </trans-unit>
        <trans-unit id="5a69d404ab2cc0f949da504d77f240952b515504" translate="yes" xml:space="preserve">
          <source>GNU Emacs has convenient built-in help facilities, most of which derive their information from documentation strings associated with functions and variables. This chapter describes how to access documentation strings in Lisp programs.</source>
          <target state="translated">GNU Emacs有方便的内置帮助设施,其中大部分信息来自与函数和变量相关联的文档字符串。本章将介绍如何在Lisp程序中访问文档字符串。</target>
        </trans-unit>
        <trans-unit id="4618ab4bd7d71d093e513abd54ab028d951cda4f" translate="yes" xml:space="preserve">
          <source>GNU Emacs provides two ways to search through a buffer for specified text: exact string searches and regular expression searches. After a regular expression search, you can examine the &lt;em&gt;match data&lt;/em&gt; to determine which text matched the whole regular expression or various portions of it.</source>
          <target state="translated">GNU Emacs提供了两种在缓冲区中搜索指定文本的方式：精确字符串搜索和正则表达式搜索。在进行正则表达式搜索之后，您可以检查&lt;em&gt;匹配数据，&lt;/em&gt;以确定哪些文本与整个正则表达式或其各个部分匹配。</target>
        </trans-unit>
        <trans-unit id="75d3dab0c6ec9b6214031068e696841594386a33" translate="yes" xml:space="preserve">
          <source>GNU Emacs supports two numeric data types: &lt;em&gt;integers&lt;/em&gt; and &lt;em&gt;floating-point numbers&lt;/em&gt;. Integers are whole numbers such as -3, 0, 7, 13, and 511. Floating-point numbers are numbers with fractional parts, such as -4.5, 0.0, and 2.71828. They can also be expressed in exponential notation: &amp;lsquo;</source>
          <target state="translated">GNU Emacs支持两种数字数据类型：&lt;em&gt;整数&lt;/em&gt;和&lt;em&gt;浮点数&lt;/em&gt;。整数是整数，例如-3、0、7、13和511。浮点数是带有小数部分的数字，例如-4.5、0.0和2.71828。它们也可以用指数表示法表示：</target>
        </trans-unit>
        <trans-unit id="0e4ec8a54cfff9c2845fa38842cb6cd1bdea197d" translate="yes" xml:space="preserve">
          <source>GNU Free Documentation License</source>
          <target state="translated">GNU 自由文档许可证</target>
        </trans-unit>
        <trans-unit id="31fe0bd96e05d07216701ff457b8adaf6462379b" translate="yes" xml:space="preserve">
          <source>GPL</source>
          <target state="translated">GPL</target>
        </trans-unit>
        <trans-unit id="5b32b8542e4c8854b05455c0b114c2bdced713ad" translate="yes" xml:space="preserve">
          <source>Garbage Collection</source>
          <target state="translated">垃圾收集</target>
        </trans-unit>
        <trans-unit id="d674677a434a2e3575c77dfb46bfbee4d7060c68" translate="yes" xml:space="preserve">
          <source>General Escape Syntax</source>
          <target state="translated">一般转义语法</target>
        </trans-unit>
        <trans-unit id="701c7ea4f3592c8bc6c19272368508c9df5de196" translate="yes" xml:space="preserve">
          <source>General rules for &lt;code&gt;interactive&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;interactive&lt;/code&gt; 一般规则。</target>
        </trans-unit>
        <trans-unit id="48fe18b8ba83244d204eb141c298982a8060a124" translate="yes" xml:space="preserve">
          <source>Generalized Variables</source>
          <target state="translated">通用变量</target>
        </trans-unit>
        <trans-unit id="030419782f2a733612cc396ed0c3545800e732d8" translate="yes" xml:space="preserve">
          <source>Generalized variables are analogous to lvalues in the C language, where &amp;lsquo;</source>
          <target state="translated">通用变量类似于C语言中的左值，其中&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="496918d17db6ffea3a60600cfa121b42a6514811" translate="yes" xml:space="preserve">
          <source>Generally speaking, when you define a globalized minor mode, you should also define a non-globalized version, so that people can use (or disable) it in individual buffers. This also allows them to disable a globally enabled minor mode in a specific major mode, by using that mode&amp;rsquo;s hook.</source>
          <target state="translated">一般而言，定义全球化的次要模式时，还应该定义非全球化的版本，以便人们可以在单独的缓冲区中使用（或禁用）它。这也允许他们通过使用特定模式的钩子来禁用全局启用的次要模式。</target>
        </trans-unit>
        <trans-unit id="f7a4fa64846c3dbb9cb99780ca819530b39f1dfc" translate="yes" xml:space="preserve">
          <source>Generally, it&amp;rsquo;s always a good idea for users and Lisp programmers to be prepared for the case that a window already shows the buffer in question and to reuse that window. In the preceding subsection we have shown that failing to do so properly may cause &lt;code&gt;display-buffer&lt;/code&gt; to continuously pop up a new frame although a frame showing that buffer existed already. In a few cases only, it might be undesirable to reuse a window, for example, when a different portion of the buffer should be shown in that window.</source>
          <target state="translated">通常，对于用户和Lisp程序员来说，对于一个窗口已经显示了相关缓冲区并重用该窗口的情况，始终是一个好主意。在前面的小节中，我们显示了未能正确执行操作的情况，尽管显示该缓冲区的帧已经存在，但可能会导致 &lt;code&gt;display-buffer&lt;/code&gt; 连续弹出一个新帧。仅在少数情况下，例如当应在该窗口中显示缓冲区的不同部分时，可能不希望重用该窗口。</target>
        </trans-unit>
        <trans-unit id="574618e2ddb4515808c47847cae9efbf4a779681" translate="yes" xml:space="preserve">
          <source>Generally, you should not modify &lt;code&gt;exec-path&lt;/code&gt; directly. Instead, ensure that your &lt;code&gt;PATH&lt;/code&gt; environment variable is set appropriately before starting Emacs. Trying to modify &lt;code&gt;exec-path&lt;/code&gt; independently of &lt;code&gt;PATH&lt;/code&gt; can lead to confusing results.</source>
          <target state="translated">通常，您不应直接修改 &lt;code&gt;exec-path&lt;/code&gt; 。相反，在启动Emacs之前，请确保已正确设置 &lt;code&gt;PATH&lt;/code&gt; 环境变量。尝试独立于 &lt;code&gt;PATH&lt;/code&gt; 修改 &lt;code&gt;exec-path&lt;/code&gt; 可能导致混乱的结果。</target>
        </trans-unit>
        <trans-unit id="f02c218f33c7eba628218756088bc02c1777bca2" translate="yes" xml:space="preserve">
          <source>Generating Unique File Names</source>
          <target state="translated">生成独特的文件名</target>
        </trans-unit>
        <trans-unit id="f339cdb02c5864e2baa89460c01991fd5a3c6ef1" translate="yes" xml:space="preserve">
          <source>Generating names for temporary files.</source>
          <target state="translated">生成临时文件的名称。</target>
        </trans-unit>
        <trans-unit id="a3e705cc61a19f33d7c9c030f107a70569966485" translate="yes" xml:space="preserve">
          <source>Generators</source>
          <target state="translated">Generators</target>
        </trans-unit>
        <trans-unit id="83082f46072d254fd933bf6e78414552f2b12960" translate="yes" xml:space="preserve">
          <source>Generic Functions</source>
          <target state="translated">通用函数</target>
        </trans-unit>
        <trans-unit id="5f50f6b153771364ca39f783ae9d640205b67a5b" translate="yes" xml:space="preserve">
          <source>Generic Modes</source>
          <target state="translated">通用模式</target>
        </trans-unit>
        <trans-unit id="b88bfefd0e466ecfaeaddeb2533f86c3d2ec6a83" translate="yes" xml:space="preserve">
          <source>Generic comment delimiters: &amp;lsquo;</source>
          <target state="translated">通用注释定界符：</target>
        </trans-unit>
        <trans-unit id="7d9c2e77016bbfb6f675ef530c30b1b6b5bb842c" translate="yes" xml:space="preserve">
          <source>Generic functions (see &lt;a href=&quot;generic-functions#Generic-Functions&quot;&gt;Generic Functions&lt;/a&gt;) cannot be turned into commands by adding the &lt;code&gt;interactive&lt;/code&gt; form to them.</source>
          <target state="translated">通用函数（请参见&lt;a href=&quot;generic-functions#Generic-Functions&quot;&gt;通用函数&lt;/a&gt;）不能通过将 &lt;code&gt;interactive&lt;/code&gt; 表单添加到命令中而变成命令。</target>
        </trans-unit>
        <trans-unit id="9c4041b323dd98d1002d8fa0298ef239450e028b" translate="yes" xml:space="preserve">
          <source>Generic sequences and coroutines.</source>
          <target state="translated">通用序列和coroutine。</target>
        </trans-unit>
        <trans-unit id="a400a070b91967359f7d6f2c3139143218239285" translate="yes" xml:space="preserve">
          <source>Generic string delimiters: &amp;lsquo;</source>
          <target state="translated">通用字符串定界符：'</target>
        </trans-unit>
        <trans-unit id="aa81eb34e68cc623a70757c80ef211f86b74fa4e" translate="yes" xml:space="preserve">
          <source>Geometric properties of frames.</source>
          <target state="translated">框架的几何属性。</target>
        </trans-unit>
        <trans-unit id="9d1226717c2fc305626512b0a1ae618fddfee0b9" translate="yes" xml:space="preserve">
          <source>Geometry</source>
          <target state="translated">Geometry</target>
        </trans-unit>
        <trans-unit id="331f110504f685e70d4805561ba7bb9b1257ebaa" translate="yes" xml:space="preserve">
          <source>Get the property of button &lt;var&gt;button&lt;/var&gt; named &lt;var&gt;prop&lt;/var&gt;.</source>
          <target state="translated">获取名为 &lt;var&gt;prop&lt;/var&gt; 的按钮 &lt;var&gt;button&lt;/var&gt; 的属性。</target>
        </trans-unit>
        <trans-unit id="6f29e98bffec95c0716b44aa0ff24d95f35e85d8" translate="yes" xml:space="preserve">
          <source>Get the property of button-type &lt;var&gt;type&lt;/var&gt; named &lt;var&gt;prop&lt;/var&gt;.</source>
          <target state="translated">获取钮扣型的物业 &lt;var&gt;type&lt;/var&gt; 命名的 &lt;var&gt;prop&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="1300375e6b68edaa6c9f48f364532b48587457c1" translate="yes" xml:space="preserve">
          <source>Getting Help about a Major Mode</source>
          <target state="translated">获取有关主要模式的帮助</target>
        </trans-unit>
        <trans-unit id="e8c30a115e708d9217f0f8cc494653cfd0fd1e8d" translate="yes" xml:space="preserve">
          <source>Getting Out of Emacs</source>
          <target state="translated">摆脱Emacs</target>
        </trans-unit>
        <trans-unit id="d05810aa7a877af6d6d557a016e80237324d6245" translate="yes" xml:space="preserve">
          <source>Getting a list of the files in a directory.</source>
          <target state="translated">获取一个目录中的文件列表。</target>
        </trans-unit>
        <trans-unit id="dccbae42f56e432919881cd1370d677166e8d171" translate="yes" xml:space="preserve">
          <source>Getting and setting properties of buttons.</source>
          <target state="translated">获取和设置按钮的属性。</target>
        </trans-unit>
        <trans-unit id="5a1a6921621184d5b2f8f89cc717ecd8b9a4c5e6" translate="yes" xml:space="preserve">
          <source>Getting events that say when the mouse moves.</source>
          <target state="translated">获取鼠标移动时说的事件。</target>
        </trans-unit>
        <trans-unit id="85cac9116f0607b577f8d8eeffa321543d0619ab" translate="yes" xml:space="preserve">
          <source>Getting resource values from the server.</source>
          <target state="translated">从服务器获取资源值。</target>
        </trans-unit>
        <trans-unit id="5d49eedfc0c13be4fcbd69c57b1a390cf43ea3e0" translate="yes" xml:space="preserve">
          <source>Getting the current time.</source>
          <target state="translated">获取当前时间。</target>
        </trans-unit>
        <trans-unit id="ab85d34d75a00e57918cfafc749c7632c211454b" translate="yes" xml:space="preserve">
          <source>Getting the definitions of color names.</source>
          <target state="translated">获取颜色名称的定义。</target>
        </trans-unit>
        <trans-unit id="946d19f23a33cb351289cfb8681252cf5f6a7369" translate="yes" xml:space="preserve">
          <source>Getting the run time used by Emacs.</source>
          <target state="translated">获取Emacs使用的运行时间。</target>
        </trans-unit>
        <trans-unit id="e734df2a071a77f50b0f83b4cdcc755167f315f0" translate="yes" xml:space="preserve">
          <source>Getting the user id, system type, environment variables, and other such things.</source>
          <target state="translated">获取用户id、系统类型、环境变量等这些东西。</target>
        </trans-unit>
        <trans-unit id="5819778898df55e3a762f0c5728b457970d72cae" translate="yes" xml:space="preserve">
          <source>Git</source>
          <target state="translated">Git</target>
        </trans-unit>
        <trans-unit id="f79da25e922286c5950fac82d11d13650d06d624" translate="yes" xml:space="preserve">
          <source>Give your type a name.</source>
          <target state="translated">给你的类型起个名字。</target>
        </trans-unit>
        <trans-unit id="b23c8b9bb8e3d40e4b62661cea0e852296d05ab8" translate="yes" xml:space="preserve">
          <source>Given a directory name, you can combine it with a relative file name using &lt;code&gt;concat&lt;/code&gt;:</source>
          <target state="translated">给定目录名，您可以使用 &lt;code&gt;concat&lt;/code&gt; 将其与相对文件名结合使用：</target>
        </trans-unit>
        <trans-unit id="03eee537a386700e1b67cbf9c43d9deb0ffd4beb" translate="yes" xml:space="preserve">
          <source>Given a numeric significand &lt;var&gt;s&lt;/var&gt; and an integer exponent &lt;var&gt;e&lt;/var&gt;, this function returns the floating point number &lt;var&gt;s&lt;/var&gt; * 2**&lt;var&gt;e&lt;/var&gt;.</source>
          <target state="translated">给定一个数字 &lt;var&gt;s&lt;/var&gt; 和一个整数指数 &lt;var&gt;e&lt;/var&gt; ，此函数返回浮点数 &lt;var&gt;s&lt;/var&gt; * 2 ** &lt;var&gt;e&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="68cb20ec878c99ef2d7414d7433fa3b590d895ca" translate="yes" xml:space="preserve">
          <source>Given a possibly relative file name, you can expand any leading &amp;lsquo;</source>
          <target state="translated">给定一个可能的相对文件名，您可以扩展任何前导'</target>
        </trans-unit>
        <trans-unit id="95fd4f822d202e3ef15de8810d2413dc0253a40b" translate="yes" xml:space="preserve">
          <source>Given a syntax descriptor &lt;var&gt;desc&lt;/var&gt; (a string), this function returns the corresponding raw syntax descriptor.</source>
          <target state="translated">给定语法描述符 &lt;var&gt;desc&lt;/var&gt; （字符串），此函数将返回相应的原始语法描述符。</target>
        </trans-unit>
        <trans-unit id="a7b92c8dc41c0b326d3d5eab48c3e0ffc3cb251a" translate="yes" xml:space="preserve">
          <source>Global Break Condition</source>
          <target state="translated">全球断裂条件</target>
        </trans-unit>
        <trans-unit id="2ff4e53e2b802e1ec127c83da80fa5fc4b5333fa" translate="yes" xml:space="preserve">
          <source>Global Variables</source>
          <target state="translated">全局变量</target>
        </trans-unit>
        <trans-unit id="b9f99ed058cdfb8caf27e052b046dc7e06cc8e42" translate="yes" xml:space="preserve">
          <source>Global and local variable bindings are found in most programming languages in one form or another. Emacs, however, also supports additional, unusual kinds of variable binding, such as &lt;em&gt;buffer-local&lt;/em&gt; bindings, which apply only in one buffer. Having different values for a variable in different buffers is an important customization method. (Variables can also have bindings that are local to each terminal. See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;.)</source>
          <target state="translated">全局和局部变量绑定在大多数编程语言中都以一种或另一种形式出现。但是，Emacs还支持其他异常类型的变量绑定，例如仅适用于一个缓冲区&lt;em&gt;的局部缓冲区&lt;/em&gt;绑定。重要的自定义方法是在不同的缓冲区中为变量提供不同的值。 （变量也可以具有每个终端本地的绑定。请参见&amp;ldquo;&lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;多个终端&amp;rdquo;&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="3d2db2a2d338fcb074c79ae872a80351dd31e921" translate="yes" xml:space="preserve">
          <source>Global variables have values that last until explicitly superseded with new values. Sometimes it is useful to give a variable a &lt;em&gt;local value&lt;/em&gt;&amp;mdash;a value that takes effect only within a certain part of a Lisp program. When a variable has a local value, we say that it is &lt;em&gt;locally bound&lt;/em&gt; to that value, and that it is a &lt;em&gt;local variable&lt;/em&gt;.</source>
          <target state="translated">全局变量的值一直持续到被新值明确取代为止。有时给变量一个&lt;em&gt;局部值&lt;/em&gt;是有用的，该&lt;em&gt;值&lt;/em&gt;仅在Lisp程序的特定部分内有效。当变量具有局部值时，我们说它是&lt;em&gt;局部绑定&lt;/em&gt;到该值，并且它是&lt;em&gt;局部变量&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="bb66713e6aa8c404db85a93a71c3a289ce4f0a1b" translate="yes" xml:space="preserve">
          <source>Globally enabling the mode also affects buffers subsequently created by visiting files, and buffers that use a major mode other than Fundamental mode; but it does not detect the creation of a new buffer in Fundamental mode.</source>
          <target state="translated">全局启用该模式也会影响访问文件随后创建的缓冲区,以及使用Fundamental模式以外的主要模式的缓冲区;但它不会检测在Fundamental模式下创建新的缓冲区。</target>
        </trans-unit>
        <trans-unit id="3b03f6e25770704fd7572875ba7ab707169c405d" translate="yes" xml:space="preserve">
          <source>Glyph matrices describing the current and desired display of this window.</source>
          <target state="translated">描述该窗口当前和期望显示的字形矩阵。</target>
        </trans-unit>
        <trans-unit id="6f2a41f0c50f68185e74d8fd8b047928278c851b" translate="yes" xml:space="preserve">
          <source>Glyphless Character Display</source>
          <target state="translated">无字形字符显示</target>
        </trans-unit>
        <trans-unit id="34899bb5363519f7fab6c0fcd14f61f65bf8e8f4" translate="yes" xml:space="preserve">
          <source>Glyphs</source>
          <target state="translated">Glyphs</target>
        </trans-unit>
        <trans-unit id="363c5e8f2bfc9456faf0e86453ba4fe84f19d6d6" translate="yes" xml:space="preserve">
          <source>GnuTLS Cryptographic Functions</source>
          <target state="translated">GnuTLS加密函数</target>
        </trans-unit>
        <trans-unit id="4ed6064f1c767d2780770d64cd8150bc5f5f64ec" translate="yes" xml:space="preserve">
          <source>GnuTLS Cryptography</source>
          <target state="translated">GnuTLS加密技术</target>
        </trans-unit>
        <trans-unit id="822ec426f1b627d84ee00c1aa2bd77f7cc4d26cd" translate="yes" xml:space="preserve">
          <source>Go non-stop: ignore breakpoints (&lt;code&gt;edebug-Go-nonstop-mode&lt;/code&gt;). You can still stop the program by typing</source>
          <target state="translated">不间断运行：忽略断点（ &lt;code&gt;edebug-Go-nonstop-mode&lt;/code&gt; ）。您仍然可以通过键入以下命令停止程序</target>
        </trans-unit>
        <trans-unit id="bfd637a5fbe2a922596a4eb3f26c79909240e5a3" translate="yes" xml:space="preserve">
          <source>Go: run until the next breakpoint (&lt;code&gt;edebug-go-mode&lt;/code&gt;). See &lt;a href=&quot;breakpoints#Breakpoints&quot;&gt;Breakpoints&lt;/a&gt;.</source>
          <target state="translated">继续：运行到下一个断点（ &lt;code&gt;edebug-go-mode&lt;/code&gt; ）。请参阅&lt;a href=&quot;breakpoints#Breakpoints&quot;&gt;断点&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="933d88fbffde17125081175103d1989c33bc3029" translate="yes" xml:space="preserve">
          <source>Good maintainable indentation functions usually fall into two categories: either parsing forward from some safe starting point until the position of interest, or parsing backward from the position of interest. Neither of the two is a clearly better choice than the other: parsing backward is often more difficult than parsing forward because programming languages are designed to be parsed forward, but for the purpose of indentation it has the advantage of not needing to guess a safe starting point, and it generally enjoys the property that only a minimum of text will be analyzed to decide the indentation of a line, so indentation will tend to be less affected by syntax errors in some earlier unrelated piece of code. Parsing forward on the other hand is usually easier and has the advantage of making it possible to reindent efficiently a whole region at a time, with a single parse.</source>
          <target state="translated">好的可维护的缩进函数通常分为两类:要么从某个安全的起点向前解析直到感兴趣的位置,要么从感兴趣的位置向后解析。两者都没有明显的优劣之分:向后解析通常比向前解析更困难,因为编程语言的设计就是为了向前解析,但对于缩进的目的来说,它的优点是不需要猜测一个安全的起点,而且它通常享有这样的特性,即只需要分析最少的文本就可以决定一行的缩进,所以缩进往往会较少地受到一些较早的无关代码中语法错误的影响。另一方面,前向解析通常比较容易,它的优点是可以一次有效地重新缩进整个区域,只需一次解析。</target>
        </trans-unit>
        <trans-unit id="c02c99bb49b14aee53dd10cd6270712867ff2a5b" translate="yes" xml:space="preserve">
          <source>Google Native Client (</source>
          <target state="translated">谷歌原生客户端 (</target>
        </trans-unit>
        <trans-unit id="42ee360434cc6e02e51843f90e45c43f5cd8222b" translate="yes" xml:space="preserve">
          <source>Group name corresponding to the effective user&amp;rsquo;s group ID, a string.</source>
          <target state="translated">与有效用户的组ID对应的组名，字符串。</target>
        </trans-unit>
        <trans-unit id="a9219e179a17e42dafd277588fede5e068604888" translate="yes" xml:space="preserve">
          <source>H-</source>
          <target state="translated">H-</target>
        </trans-unit>
        <trans-unit id="b65c5617339d2ad05f65cebd963d5db8109a36f4" translate="yes" xml:space="preserve">
          <source>H-a</source>
          <target state="translated">H-a</target>
        </trans-unit>
        <trans-unit id="98cfefccd41326df1c019bd2134961149cb4c122" translate="yes" xml:space="preserve">
          <source>HYPER</source>
          <target state="translated">HYPER</target>
        </trans-unit>
        <trans-unit id="b313e317f3321c8db221f164577ede4d314070a1" translate="yes" xml:space="preserve">
          <source>Handle subsequent invocations of &lt;code&gt;display-buffer&lt;/code&gt;</source>
          <target state="translated">处理 &lt;code&gt;display-buffer&lt;/code&gt; 后续调用</target>
        </trans-unit>
        <trans-unit id="ba2c9ae953de0391c94c416ac5efdfc059df4186" translate="yes" xml:space="preserve">
          <source>Handle this function like a &amp;lsquo;</source>
          <target state="translated">像处理&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="14e12a854e3f2af5a1f810404b3e215e1050bb55" translate="yes" xml:space="preserve">
          <source>Handlers for &lt;code&gt;insert-file-contents&lt;/code&gt; typically need to clear the buffer&amp;rsquo;s modified flag, with &lt;code&gt;(set-buffer-modified-p nil)&lt;/code&gt;, if the &lt;var&gt;visit&lt;/var&gt; argument is non-&lt;code&gt;nil&lt;/code&gt;. This also has the effect of unlocking the buffer if it is locked.</source>
          <target state="translated">如果 &lt;var&gt;visit&lt;/var&gt; 参数为非 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;insert-file-contents&lt;/code&gt; 处理程序通常需要使用 &lt;code&gt;(set-buffer-modified-p nil)&lt;/code&gt; 清除缓冲区的修改标志。如果缓冲区被锁定，这也具有解锁缓冲区的效果。</target>
        </trans-unit>
        <trans-unit id="3c84cfd00d4c080dbeef3d2d78b20b84c8af76b1" translate="yes" xml:space="preserve">
          <source>Handlers that don&amp;rsquo;t really do anything special for actual access to the file&amp;mdash;such as the ones that implement completion of host names for remote file names&amp;mdash;should have a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;safe-magic&lt;/code&gt; property. For instance, Emacs normally protects directory names it finds in &lt;code&gt;PATH&lt;/code&gt; from becoming magic, if they look like magic file names, by prefixing them with &amp;lsquo;</source>
          <target state="translated">处理程序不会做什么特别的实际访问文件，诸如实现远程文件主机名完成的那些名字，应该有非 &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;safe-magic&lt;/code&gt; 属性。例如，Emacs通常会在 &lt;code&gt;PATH&lt;/code&gt; 中找到的目录名称看起来像魔术文件名一样，以前缀&amp;ldquo;'</target>
        </trans-unit>
        <trans-unit id="f035c8210f7349018c80c3f6159806e178588805" translate="yes" xml:space="preserve">
          <source>Handling compiler error messages.</source>
          <target state="translated">处理编译器错误信息。</target>
        </trans-unit>
        <trans-unit id="3a65fc8af4ac6fce99cb0874e341518313404719" translate="yes" xml:space="preserve">
          <source>Handling local variable lists in files.</source>
          <target state="translated">处理文件中的局部变量列表。</target>
        </trans-unit>
        <trans-unit id="5cb83b7b7a273c443024f4b6f41a5c3403668a57" translate="yes" xml:space="preserve">
          <source>Handling of error conditions and nonlocal exits.</source>
          <target state="translated">错误条件和非本地退出的处理。</target>
        </trans-unit>
        <trans-unit id="796b9f791899bac6cd9e5366029a14642d9992c8" translate="yes" xml:space="preserve">
          <source>Hash Table Access</source>
          <target state="translated">哈希表访问</target>
        </trans-unit>
        <trans-unit id="3d79b9ba79bbb39f306c206356dcef4d216b4993" translate="yes" xml:space="preserve">
          <source>Hash Table Type</source>
          <target state="translated">哈希表类型</target>
        </trans-unit>
        <trans-unit id="d5b36413b8512c07b9d877c706ab0ef1b552f2e1" translate="yes" xml:space="preserve">
          <source>Hash Tables</source>
          <target state="translated">散列表</target>
        </trans-unit>
        <trans-unit id="16239c9e52703715588a3938d66eb705195e0da6" translate="yes" xml:space="preserve">
          <source>Hash notation cannot be read at all, so the Lisp reader signals the error &lt;code&gt;invalid-read-syntax&lt;/code&gt; whenever it encounters &amp;lsquo;</source>
          <target state="translated">哈希符号不能在所有的读取，所以Lisp的读者信号错误 &lt;code&gt;invalid-read-syntax&lt;/code&gt; 每当遇到&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="5132b811914bd7b45510a577c90507eca7f92695" translate="yes" xml:space="preserve">
          <source>Having obtained the arguments, Lisp invokes the macro definition just as a function is invoked. The argument variables of the macro are bound to the argument values from the macro call, or to a list of them in the case of a &lt;code&gt;&amp;amp;rest&lt;/code&gt; argument. And the macro body executes and returns its value just as a function body does.</source>
          <target state="translated">获得参数后，Lisp就像调用函数一样调用宏定义。宏的参数变量绑定到宏调用中的参数值，如果是 &lt;code&gt;&amp;amp;rest&lt;/code&gt; 参数，则绑定到它们的列表。宏主体就像函数主体一样执行并返回其值。</target>
        </trans-unit>
        <trans-unit id="5d00e152da53b1b2080b0df81972b9d02bae3c8f" translate="yes" xml:space="preserve">
          <source>Heap space which is not currently used, in &lt;var&gt;unit-size&lt;/var&gt; units.</source>
          <target state="translated">当前未使用的堆空间，以 &lt;var&gt;unit-size&lt;/var&gt; 单位。</target>
        </trans-unit>
        <trans-unit id="c47ae15370cfe1ed2781eedc1dc2547d12d9e972" translate="yes" xml:space="preserve">
          <source>Help</source>
          <target state="translated">Help</target>
        </trans-unit>
        <trans-unit id="d2dd00589d7b674fe976ce005e954ea6b9f27564" translate="yes" xml:space="preserve">
          <source>Help (Type ? for further options)</source>
          <target state="translated">帮助(键入?</target>
        </trans-unit>
        <trans-unit id="8be3aecf7753313deb6195b6d9f2b528895f2b61" translate="yes" xml:space="preserve">
          <source>Help Functions</source>
          <target state="translated">帮助功能</target>
        </trans-unit>
        <trans-unit id="1e7eebdb08c9dbf27c7668e2badd51e667707d3c" translate="yes" xml:space="preserve">
          <source>Helper</source>
          <target state="translated">Helper</target>
        </trans-unit>
        <trans-unit id="6c3d9ab10018fd04a5ba7e022a1b72c3f569abac" translate="yes" xml:space="preserve">
          <source>Helper Functions for Indentation Rules</source>
          <target state="translated">缩进规则的辅助函数</target>
        </trans-unit>
        <trans-unit id="99da0ca420fedeb5f771b5ca0616eb2690de4991" translate="yes" xml:space="preserve">
          <source>Helper functions for indentation rules.</source>
          <target state="translated">缩进规则的辅助功能。</target>
        </trans-unit>
        <trans-unit id="8118c060ea873f0458b1d35aae85b10c878c1f1d" translate="yes" xml:space="preserve">
          <source>Helper-describe-bindings</source>
          <target state="translated">Helper-describe-bindings</target>
        </trans-unit>
        <trans-unit id="bffb261f2d07fa5e9ebc770f1470184479a186f2" translate="yes" xml:space="preserve">
          <source>Helper-help</source>
          <target state="translated">Helper-help</target>
        </trans-unit>
        <trans-unit id="2c9302396ef66992baa089e464952f8271b0c3f0" translate="yes" xml:space="preserve">
          <source>Hence, &lt;code&gt;display-buffer-reuse-window&lt;/code&gt; is one action function that should be used as often as possible, both in &lt;var&gt;action&lt;/var&gt; arguments and customizations. An &lt;code&gt;inhibit-same-window&lt;/code&gt; entry in the &lt;var&gt;action&lt;/var&gt; argument usually takes care of the most common case where reusing a window showing the buffer should be avoided&amp;mdash;that where the window in question is the selected one.</source>
          <target state="translated">因此， &lt;code&gt;display-buffer-reuse-window&lt;/code&gt; 是一个动作函数，应在 &lt;var&gt;action&lt;/var&gt; 参数和自定义中尽可能频繁地使用。在 &lt;var&gt;action&lt;/var&gt; 参数中使用 &lt;code&gt;inhibit-same-window&lt;/code&gt; 条目通常可以解决最常见的情况，即应避免重用显示缓冲区的窗口，即该窗口是选定的窗口。</target>
        </trans-unit>
        <trans-unit id="9b2f5084dbbffb48e2183c0e79949c5eb114b2c9" translate="yes" xml:space="preserve">
          <source>Hence, if &lt;var&gt;size&lt;/var&gt; is specified, it&amp;rsquo;s the caller&amp;rsquo;s responsibility to check whether the emanating windows are large enough to encompass all areas like a mode line or a scroll bar. The function &lt;code&gt;window-min-size&lt;/code&gt; (see &lt;a href=&quot;window-sizes#Window-Sizes&quot;&gt;Window Sizes&lt;/a&gt;) can be used to determine the minimum requirements of &lt;var&gt;window&lt;/var&gt; in this regard. Since the new window usually inherits areas like the mode line or the scroll bar from &lt;var&gt;window&lt;/var&gt;, that function is also a good guess for the minimum size of the new window. The caller should specify a smaller size only if it correspondingly removes an inherited area before the next redisplay.</source>
          <target state="translated">因此，如果指定了 &lt;var&gt;size&lt;/var&gt; ，则呼叫者有责任检查发射窗口是否足够大以涵盖模式行或滚动条之类的所有区域。功能 &lt;code&gt;window-min-size&lt;/code&gt; （见&lt;a href=&quot;window-sizes#Window-Sizes&quot;&gt;窗口大小&lt;/a&gt;）可以被用于确定最低要求的 &lt;var&gt;window&lt;/var&gt; 在这方面。由于新的窗口通常会继承像模式行或滚动条区域 &lt;var&gt;window&lt;/var&gt; ，该功能也是新窗口的最小尺寸很好的猜测。只有在下一次重新显示之前相应地删除了继承的区域时，调用方才应指定较小的大小。</target>
        </trans-unit>
        <trans-unit id="3ca67392e6dc778f2b858f89193a1bfb58e87895" translate="yes" xml:space="preserve">
          <source>Hence, the &lt;small&gt;CDR&lt;/small&gt; of a proper list is always a proper list. The &lt;small&gt;CDR&lt;/small&gt; of a nonempty proper list is a proper list containing all the elements except the first.</source>
          <target state="translated">因此，适当列表的&lt;small&gt;CDR&lt;/small&gt;始终是适当列表。非空正确列表的&lt;small&gt;CDR&lt;/small&gt;是包含除第一个元素外的所有元素的正确列表。</target>
        </trans-unit>
        <trans-unit id="27e61c02dadbcea427a5b4f6cac0501bc791e679" translate="yes" xml:space="preserve">
          <source>Hence, users should set up a &lt;code&gt;pop-up-frame-parameters&lt;/code&gt; action alist entry in &lt;code&gt;display-buffer-alist&lt;/code&gt; instead of customizing &lt;code&gt;pop-up-frame-alist&lt;/code&gt;. Only this will guarantee that the value of a parameter specified by the user overrides the value of that parameter specified by the caller of &lt;code&gt;display-buffer&lt;/code&gt;.</source>
          <target state="translated">因此，用户应在 &lt;code&gt;display-buffer-alist&lt;/code&gt; 中设置 &lt;code&gt;pop-up-frame-parameters&lt;/code&gt; 操作列表项，而不是自定义 &lt;code&gt;pop-up-frame-alist&lt;/code&gt; 。只有这样才能保证用户指定的参数值会覆盖 &lt;code&gt;display-buffer&lt;/code&gt; 调用者指定的参数值。</target>
        </trans-unit>
        <trans-unit id="6a93030d55ba5b4985811ad4a7c7050d8f4754ad" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;forward-line&lt;/code&gt; moves point to the start of the next record, and &lt;code&gt;end-of-line&lt;/code&gt; moves point to the end of record. We do not pass the arguments &lt;var&gt;startkeyfun&lt;/var&gt; and &lt;var&gt;endkeyfun&lt;/var&gt;, because the entire record is used as the sort key.</source>
          <target state="translated">在这里， &lt;code&gt;forward-line&lt;/code&gt; 移动指向下一个记录的开始， &lt;code&gt;end-of-line&lt;/code&gt; 移动指向记录的结束。我们不传递参数 &lt;var&gt;startkeyfun&lt;/var&gt; 和 &lt;var&gt;endkeyfun&lt;/var&gt; ，因为整个记录都用作排序键。</target>
        </trans-unit>
        <trans-unit id="d1336b7750a17f1153fb7f8ae95fb0b8da6a2bc9" translate="yes" xml:space="preserve">
          <source>Here &lt;var&gt;form&lt;/var&gt; is an expression to be evaluated the first time this value of &lt;code&gt;font-lock-keywords&lt;/code&gt; is used in a buffer. Its value should have one of the forms described in this table.</source>
          <target state="translated">这里的 &lt;var&gt;form&lt;/var&gt; 是一个第一次在缓冲区中使用 &lt;code&gt;font-lock-keywords&lt;/code&gt; 的值时要评估的表达式。其值应具有此表中描述的形式之一。</target>
        </trans-unit>
        <trans-unit id="f76f0e6bf0a1474f237d5cced9a1ba5f285b6d65" translate="yes" xml:space="preserve">
          <source>Here &lt;var&gt;frame&lt;/var&gt; is the frame which was current when the input language changed; &lt;var&gt;codepage&lt;/var&gt; is the new codepage number; and &lt;var&gt;language-id&lt;/var&gt; is the numerical ID of the new input language. The coding-system (see &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Coding Systems&lt;/a&gt;) that corresponds to &lt;var&gt;codepage&lt;/var&gt; is &lt;code&gt;cp&lt;var&gt;codepage&lt;/var&gt;&lt;/code&gt; or &lt;code&gt;windows-&lt;var&gt;codepage&lt;/var&gt;&lt;/code&gt;. To convert &lt;var&gt;language-id&lt;/var&gt; to a string (e.g., to use it for various language-dependent features, such as &lt;code&gt;set-language-environment&lt;/code&gt;), use the &lt;code&gt;w32-get-locale-info&lt;/code&gt; function, like this:</source>
          <target state="translated">这里的 &lt;var&gt;frame&lt;/var&gt; 是输入语言改变时的当前frame； &lt;var&gt;codepage&lt;/var&gt; 是新的代码页编号；和 &lt;var&gt;language-id&lt;/var&gt; 是新的输入语言的数字ID。对应于 &lt;var&gt;codepage&lt;/var&gt; 的编码系统（请参阅&lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;编码系统&lt;/a&gt;）是 &lt;code&gt;cp&lt;var&gt;codepage&lt;/var&gt;&lt;/code&gt; &lt;var&gt;codepage&lt;/var&gt; 或 &lt;code&gt;windows-&lt;var&gt;codepage&lt;/var&gt;&lt;/code&gt; &lt;var&gt;codepage&lt;/var&gt; 。要将 &lt;var&gt;language-id&lt;/var&gt; 转换为字符串（例如，将其用于各种与语言相关的功能，例如 &lt;code&gt;set-language-environment&lt;/code&gt; ），请使用 &lt;code&gt;w32-get-locale-info&lt;/code&gt; 函数，如下所示：</target>
        </trans-unit>
        <trans-unit id="98a14b41b9816825deb746b14a625abfad8575b1" translate="yes" xml:space="preserve">
          <source>Here &lt;var&gt;input-method&lt;/var&gt; is the input method name, a string; &lt;var&gt;language-env&lt;/var&gt; is another string, the name of the language environment this input method is recommended for. (That serves only for documentation purposes.)</source>
          <target state="translated">这里的 &lt;var&gt;input-method&lt;/var&gt; 是输入法的名称，一个字符串； &lt;var&gt;language-env&lt;/var&gt; 是另一个字符串，建议使用此输入法的语言环境的名称。（这仅用于文档目的。）</target>
        </trans-unit>
        <trans-unit id="e84277320459e0c2431f3d0481ba514e93bb3fab" translate="yes" xml:space="preserve">
          <source>Here &lt;var&gt;mode-variable&lt;/var&gt; is the variable that controls enabling of the minor mode, and &lt;var&gt;string&lt;/var&gt; is a short string, starting with a space, to represent the mode in the mode line. These strings must be short so that there is room for several of them at once.</source>
          <target state="translated">这里的 &lt;var&gt;mode-variable&lt;/var&gt; 是控制次要模式启用的变量， &lt;var&gt;string&lt;/var&gt; 是一个短字符串，以空格开头，表示模式行中的模式。这些字符串必须简短，以便一次可以容纳多个字符串。</target>
        </trans-unit>
        <trans-unit id="3a60fbe5ebc43250e6a84d96ec7b90e00eda5326" translate="yes" xml:space="preserve">
          <source>Here &lt;var&gt;pos&lt;/var&gt; is the buffer position where the scan stopped, &lt;var&gt;vpos&lt;/var&gt; is the vertical screen position, and &lt;var&gt;hpos&lt;/var&gt; is the horizontal screen position.</source>
          <target state="translated">这里 &lt;var&gt;pos&lt;/var&gt; 是在扫描停止缓冲位置， &lt;var&gt;vpos&lt;/var&gt; 是垂直画面位置和 &lt;var&gt;hpos&lt;/var&gt; 是水平屏幕位置。</target>
        </trans-unit>
        <trans-unit id="0a0961570e60b97df202b02f8105c4e3cd5adc0f" translate="yes" xml:space="preserve">
          <source>Here &lt;var&gt;sname&lt;/var&gt; is the name you used as the third argument to &lt;code&gt;DEFUN&lt;/code&gt;.</source>
          <target state="translated">这里 &lt;var&gt;sname&lt;/var&gt; 是你作为第三个参数名称 &lt;code&gt;DEFUN&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5a392afa53cdbf3ff0c4a970c9f61a388883a17c" translate="yes" xml:space="preserve">
          <source>Here are a few examples of using this function:</source>
          <target state="translated">下面是使用这个函数的几个例子。</target>
        </trans-unit>
        <trans-unit id="00dc8a771598ebd39d719a5249f7192adfa7abd6" translate="yes" xml:space="preserve">
          <source>Here are a few special cases in the symbol-naming convention for function keys:</source>
          <target state="translated">下面是函数键的符号命名惯例中的几种特殊情况。</target>
        </trans-unit>
        <trans-unit id="1617531679f620aa954fbbe3cfaf6025eb9aff51" translate="yes" xml:space="preserve">
          <source>Here are additional functions for creating and working with faces.</source>
          <target state="translated">以下是用于创建和处理面孔的附加功能。</target>
        </trans-unit>
        <trans-unit id="b5cb75399fbf3a9a6bde0650bb034b6723eda5e9" translate="yes" xml:space="preserve">
          <source>Here are examples illustrating these principles:</source>
          <target state="translated">以下是说明这些原则的例子。</target>
        </trans-unit>
        <trans-unit id="6f6e55ed07f8e4b2a2fd41e0e3e2008283bd14b7" translate="yes" xml:space="preserve">
          <source>Here are examples of &lt;code&gt;ash&lt;/code&gt;, shifting a pattern of bits one place to the left and to the right. These examples show only the low-order bits of the binary pattern; leading bits all agree with the highest-order bit shown. As you can see, shifting left by one is equivalent to multiplying by two, whereas shifting right by one is equivalent to dividing by two and then rounding toward minus infinity.</source>
          <target state="translated">这是 &lt;code&gt;ash&lt;/code&gt; 的示例，将位的模式左右移动一个位置。这些示例仅显示了二进制模式的低位。前导位均与所示的最高位一致。如您所见，向左移动等于乘以2，向右移动等于除以2，然后四舍五入为负无穷大。</target>
        </trans-unit>
        <trans-unit id="137be5cd363eeacaf9134569353b6ffbe9769501" translate="yes" xml:space="preserve">
          <source>Here are examples of creating markers, setting markers, and moving point to markers:</source>
          <target state="translated">下面是创建标记、设置标记、移动点到标记的例子。</target>
        </trans-unit>
        <trans-unit id="4d0f160094e8084d0b542e0ad3832bd9e2a51c15" translate="yes" xml:space="preserve">
          <source>Here are examples of shifting left or right by two bits:</source>
          <target state="translated">下面是左移或右移两个位的例子。</target>
        </trans-unit>
        <trans-unit id="8a89bb8173b69c16b50ee0063d5f921a8c999342" translate="yes" xml:space="preserve">
          <source>Here are examples of the special sequences:</source>
          <target state="translated">以下是特殊序列的例子。</target>
        </trans-unit>
        <trans-unit id="cecbedaa4784f6b28b5221e9a91c48761a8d659b" translate="yes" xml:space="preserve">
          <source>Here are examples of this function and &lt;code&gt;point-min-marker&lt;/code&gt;, shown in a buffer containing a version of the source file for the text of this chapter.</source>
          <target state="translated">这是此函数和 &lt;code&gt;point-min-marker&lt;/code&gt; 的示例，在包含本章文本源文件版本的缓冲区中显示。</target>
        </trans-unit>
        <trans-unit id="81316090a9e475c51c45e63a6fa3b07c04ea527c" translate="yes" xml:space="preserve">
          <source>Here are functions you can use to do this. They use &lt;code&gt;eq&lt;/code&gt; for comparing property values. In all cases, &lt;var&gt;object&lt;/var&gt; defaults to the current buffer.</source>
          <target state="translated">您可以使用以下功能来执行此操作。他们使用 &lt;code&gt;eq&lt;/code&gt; 来比较属性值。在所有情况下， &lt;var&gt;object&lt;/var&gt; 默认为当前缓冲区。</target>
        </trans-unit>
        <trans-unit id="06499340cfbcc2e40ec198bcd18d7c13c979dc86" translate="yes" xml:space="preserve">
          <source>Here are important terms for functions and function-like objects:</source>
          <target state="translated">这里是函数和类函数对象的重要术语。</target>
        </trans-unit>
        <trans-unit id="ef60819367469431645003b5c4099276c33be12b" translate="yes" xml:space="preserve">
          <source>Here are read syntaxes for these special floating-point values:</source>
          <target state="translated">下面是这些特殊浮点值的读取语法。</target>
        </trans-unit>
        <trans-unit id="639232f04f02162315ea68715b78daa740f40bb3" translate="yes" xml:space="preserve">
          <source>Here are several examples of symbol names. Note that the &amp;lsquo;</source>
          <target state="translated">这是符号名称的几个示例。请注意，</target>
        </trans-unit>
        <trans-unit id="bba68344a933b71c6208ead1de8a2ab5e79790f7" translate="yes" xml:space="preserve">
          <source>Here are several examples, which assume the typical &lt;code&gt;text-quoting-style&lt;/code&gt; settings:</source>
          <target state="translated">这是几个示例，它们采用典型的 &lt;code&gt;text-quoting-style&lt;/code&gt; 设置：</target>
        </trans-unit>
        <trans-unit id="bd4cf0b1a247964beb166424793dd3eef042abf9" translate="yes" xml:space="preserve">
          <source>Here are several functions concerned with balanced-parenthesis expressions (also called &lt;em&gt;sexps&lt;/em&gt; in connection with moving across them in Emacs). The syntax table controls how these functions interpret various characters; see &lt;a href=&quot;syntax-tables#Syntax-Tables&quot;&gt;Syntax Tables&lt;/a&gt;. See &lt;a href=&quot;parsing-expressions#Parsing-Expressions&quot;&gt;Parsing Expressions&lt;/a&gt;, for lower-level primitives for scanning sexps or parts of sexps. For user-level commands, see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Parentheses.html#Parentheses&quot;&gt;Commands for Editing with Parentheses&lt;/a&gt; in</source>
          <target state="translated">这是与平衡括号表达式有关的几个函数（在Emacs中与跨表达式移动相关联也称为&lt;em&gt;sexps&lt;/em&gt;）。语法表控制这些函数如何解释各种字符。请参阅&lt;a href=&quot;syntax-tables#Syntax-Tables&quot;&gt;语法表&lt;/a&gt;。请参阅&lt;a href=&quot;parsing-expressions#Parsing-Expressions&quot;&gt;解析表达式&lt;/a&gt;，以获取用于扫描性征或性征的一部分的较低级原语。有关用户级命令，请参见《&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Parentheses.html#Parentheses&quot;&gt;带括号的编辑命令》&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0e88d5016e05e6dd463bda1a4a0f7b8ec7949644" translate="yes" xml:space="preserve">
          <source>Here are some examples (assuming dynamic binding is in effect):</source>
          <target state="translated">下面是一些例子(假设动态绑定有效)。</target>
        </trans-unit>
        <trans-unit id="f84fa4910c4099f139d75904015531ce710604bf" translate="yes" xml:space="preserve">
          <source>Here are some examples of &lt;code&gt;interactive&lt;/code&gt;:</source>
          <target state="translated">以下是一些 &lt;code&gt;interactive&lt;/code&gt; 示例：</target>
        </trans-unit>
        <trans-unit id="ff77fd09f0784ef851674d2e1915d4269d34ce80" translate="yes" xml:space="preserve">
          <source>Here are some examples of argument lists and proper calls:</source>
          <target state="translated">下面是一些论据列表和正确调用的例子。</target>
        </trans-unit>
        <trans-unit id="ddcda280324ee4a6967a5f968cd3950c403c4108" translate="yes" xml:space="preserve">
          <source>Here are some examples of elements of this kind, and what they do:</source>
          <target state="translated">以下是这类要素的一些例子,以及它们的作用。</target>
        </trans-unit>
        <trans-unit id="d57ef96ba65f97020756c78d439f23a3f7b44ac8" translate="yes" xml:space="preserve">
          <source>Here are some examples of expressions that use &lt;code&gt;quote&lt;/code&gt;:</source>
          <target state="translated">以下是一些使用 &lt;code&gt;quote&lt;/code&gt; 的表达式示例：</target>
        </trans-unit>
        <trans-unit id="063f8ca4a26036639902e8d6e1f8d82daa6761ac" translate="yes" xml:space="preserve">
          <source>Here are some examples where the final argument is not a list:</source>
          <target state="translated">下面是一些最终参数不是列表的例子。</target>
        </trans-unit>
        <trans-unit id="8f417879437689d4a9a02fcf7a14bf70386ed44c" translate="yes" xml:space="preserve">
          <source>Here are some examples. This form defines &lt;code&gt;foo&lt;/code&gt; but does not initialize it:</source>
          <target state="translated">这里有些例子。这种形式定义了 &lt;code&gt;foo&lt;/code&gt; ,但没有初始化它：</target>
        </trans-unit>
        <trans-unit id="0931022beea83b3afc095873234631b7243eeca4" translate="yes" xml:space="preserve">
          <source>Here are some examples:</source>
          <target state="translated">下面是一些例子。</target>
        </trans-unit>
        <trans-unit id="86e9ed7298c17e817f468344c85791439ea71311" translate="yes" xml:space="preserve">
          <source>Here are some functions that rearrange lists destructively by modifying the &lt;small&gt;CDR&lt;/small&gt;s of their component cons cells. These functions are destructive because they chew up the original lists passed to them as arguments, relinking their cons cells to form a new list that is the returned value.</source>
          <target state="translated">以下是一些功能，这些功能可以通过修改其组件cons单元的&lt;small&gt;CDR&lt;/small&gt;来破坏性地重新排列列表。这些函数具有破坏性，因为它们会破坏作为参数传递给它们的原始列表，从而重新链接其cons单元格以形成作为返回值的新列表。</target>
        </trans-unit>
        <trans-unit id="4dc1cb899829ad639af67d05bbc8b90a9ee8d518" translate="yes" xml:space="preserve">
          <source>Here are some functions that relate to vectors:</source>
          <target state="translated">下面是一些与向量有关的函数。</target>
        </trans-unit>
        <trans-unit id="2606a57d06a34bc11ef95d9600b08616d1e79bc3" translate="yes" xml:space="preserve">
          <source>Here are some guidelines for use of integer types in the Emacs C source code. These guidelines sometimes give competing advice; common sense is advised.</source>
          <target state="translated">下面是Emacs C源代码中使用整数类型的一些指南。这些指南有时会给出相互竞争的建议;建议使用常识。</target>
        </trans-unit>
        <trans-unit id="8a2f601ac00765c945d1d141194f3f1f67233057" translate="yes" xml:space="preserve">
          <source>Here are some of the fields in &lt;code&gt;struct buffer_text&lt;/code&gt;:</source>
          <target state="translated">这是 &lt;code&gt;struct buffer_text&lt;/code&gt; 中的一些字段：</target>
        </trans-unit>
        <trans-unit id="408dfbd718530128a5fcf9328a69a3bdbbed6263" translate="yes" xml:space="preserve">
          <source>Here are some of the standard minibuffer history list variables:</source>
          <target state="translated">下面是一些标准的minibuffer历史列表变量。</target>
        </trans-unit>
        <trans-unit id="80b1b8a51a4536353943812a5257ba6519df398b" translate="yes" xml:space="preserve">
          <source>Here are some other functions for working with hash tables.</source>
          <target state="translated">这里有一些其他的函数用于处理哈希表。</target>
        </trans-unit>
        <trans-unit id="1f1c7b2052fa8c088a9bfffb139b47bfbead1338" translate="yes" xml:space="preserve">
          <source>Here are some other functions that can convert to or from a string:</source>
          <target state="translated">下面是一些其他的函数,可以对字符串进行转换或从字符串转换。</target>
        </trans-unit>
        <trans-unit id="8d57a58bf24124dd6eacf13f3bc12d9c39aa6b41" translate="yes" xml:space="preserve">
          <source>Here are some sample programs in this small language, including their evaluation results:</source>
          <target state="translated">下面是这个小语种的一些示例程序,包括它们的评估结果。</target>
        </trans-unit>
        <trans-unit id="3e6bfbb0d6f1343aa40712dc29c3fe8413233a02" translate="yes" xml:space="preserve">
          <source>Here are some variables that can be used to alter the default completion behavior.</source>
          <target state="translated">下面是一些可以用来改变默认完成行为的变量。</target>
        </trans-unit>
        <trans-unit id="4b60364ba45dfb996488db317f7bdf0b520b34cb" translate="yes" xml:space="preserve">
          <source>Here are the Lisp facilities for working with coding systems:</source>
          <target state="translated">下面是Lisp工作编码系统的设施。</target>
        </trans-unit>
        <trans-unit id="eddf13195ff83e0650e651fb86d9df8b243a50a9" translate="yes" xml:space="preserve">
          <source>Here are the code character descriptions for use with &lt;code&gt;interactive&lt;/code&gt;:</source>
          <target state="translated">这是与 &lt;code&gt;interactive&lt;/code&gt; 一起使用的代码字符描述：</target>
        </trans-unit>
        <trans-unit id="5cf7f3097b76335b093258f884f35ba3efd99f46" translate="yes" xml:space="preserve">
          <source>Here are the commands available in the thread list buffer:</source>
          <target state="translated">以下是线程列表缓冲区中可用的命令。</target>
        </trans-unit>
        <trans-unit id="16af31b0c509efd73310129915b656a1d62086e4" translate="yes" xml:space="preserve">
          <source>Here are the conventions for displaying each character code (in the absence of a display table, which can override these conventions; see &lt;a href=&quot;display-tables#Display-Tables&quot;&gt;Display Tables&lt;/a&gt;).</source>
          <target state="translated">这是显示每个字符代码的约定（在没有显示表的情况下，可以覆盖这些约定；请参见&lt;a href=&quot;display-tables#Display-Tables&quot;&gt;显示表&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="dbb83ef93267822964caca02bd6405a79c7cd2a6" translate="yes" xml:space="preserve">
          <source>Here are the conventions for how to define the levels of fontification:</source>
          <target state="translated">下面是如何定义字体层次的约定。</target>
        </trans-unit>
        <trans-unit id="5f96d38cddf32c5fbe612cf9fbffcbcf2206e0b3" translate="yes" xml:space="preserve">
          <source>Here are the different possible values for the &lt;var&gt;where&lt;/var&gt; argument of &lt;code&gt;add-function&lt;/code&gt; and &lt;code&gt;advice-add&lt;/code&gt;, specifying how the advice &lt;var&gt;function&lt;/var&gt; and the original function should be composed.</source>
          <target state="translated">这是 &lt;code&gt;add-function&lt;/code&gt; 和 &lt;code&gt;advice-add&lt;/code&gt; 的 &lt;var&gt;where&lt;/var&gt; 参数的不同可能值，指定了应如何组合建议 &lt;var&gt;function&lt;/var&gt; 和原始功能。</target>
        </trans-unit>
        <trans-unit id="6c09d16d485d736950593cc1224ab217b508b8f1" translate="yes" xml:space="preserve">
          <source>Here are the functions and variables pertaining to key lookup.</source>
          <target state="translated">下面是与键查找有关的函数和变量。</target>
        </trans-unit>
        <trans-unit id="8062721030578e70cdc1899551c4f45efb57b08e" translate="yes" xml:space="preserve">
          <source>Here are the functions for working with case tables:</source>
          <target state="translated">下面是处理病例表的功能。</target>
        </trans-unit>
        <trans-unit id="87378c02f37fe2e0247907313670ecd662edc946" translate="yes" xml:space="preserve">
          <source>Here are the functions that insert text with inheritance of properties:</source>
          <target state="translated">下面是插入具有继承属性的文本的函数。</target>
        </trans-unit>
        <trans-unit id="1e9f24ba91c1b2a714337332d8cebd3a447c4757" translate="yes" xml:space="preserve">
          <source>Here are the functions to perform explicit encoding or decoding. The encoding functions produce sequences of bytes; the decoding functions are meant to operate on sequences of bytes. All of these functions discard text properties. They also set &lt;code&gt;last-coding-system-used&lt;/code&gt; to the precise coding system they used.</source>
          <target state="translated">这是执行显式编码或解码的功能。编码功能产生字节序列；解码功能旨在对字节序列进行操作。所有这些功能都放弃文本属性。他们还将使用的 &lt;code&gt;last-coding-system-used&lt;/code&gt; 的精确编码系统。</target>
        </trans-unit>
        <trans-unit id="28eaa8cb1aade679b5fe5e00cce8764b851a51ae" translate="yes" xml:space="preserve">
          <source>Here are the kinds of elements an undo list can have:</source>
          <target state="translated">以下是撤销列表可以拥有的元素种类。</target>
        </trans-unit>
        <trans-unit id="4375f7c405abbf0783beb19e0f9eb45733fb0193" translate="yes" xml:space="preserve">
          <source>Here are the meaningful bindings for &lt;code&gt;query-replace-map&lt;/code&gt;. Several of them are meaningful only for &lt;code&gt;query-replace&lt;/code&gt; and friends.</source>
          <target state="translated">这是 &lt;code&gt;query-replace-map&lt;/code&gt; 的有意义的绑定。其中一些仅对 &lt;code&gt;query-replace&lt;/code&gt; 和好友有意义。</target>
        </trans-unit>
        <trans-unit id="6ca7d4b16a95005d82503a0fef3765241e740851" translate="yes" xml:space="preserve">
          <source>Here are the meaningful keywords:</source>
          <target state="translated">下面是有意义的关键词。</target>
        </trans-unit>
        <trans-unit id="52c8f55727b89f72bc0b652ec57b7252b56faa57" translate="yes" xml:space="preserve">
          <source>Here are the meanings of the elements of the parser state:</source>
          <target state="translated">下面是解析器状态元素的含义。</target>
        </trans-unit>
        <trans-unit id="d94aaee89255e78138d313a6f1d7ad7890afd344" translate="yes" xml:space="preserve">
          <source>Here are the meanings of various data types as mode line constructs:</source>
          <target state="translated">下面是各种数据类型作为模线构造的含义。</target>
        </trans-unit>
        <trans-unit id="c48dc0afa8b6f3b554e1361bfe5452cee2690533" translate="yes" xml:space="preserve">
          <source>Here are the operations that a magic file name handler gets to handle:</source>
          <target state="translated">下面是魔法文件名处理程序要处理的操作。</target>
        </trans-unit>
        <trans-unit id="8dc9de53ca0b1774673c6e514bf1ac2c841e3be3" translate="yes" xml:space="preserve">
          <source>Here are the other sorts of display specifications that you can use in the &lt;code&gt;display&lt;/code&gt; text property.</source>
          <target state="translated">这是可以在 &lt;code&gt;display&lt;/code&gt; 文本属性中使用的其他种类的显示规范。</target>
        </trans-unit>
        <trans-unit id="fc52f666e265ae0c9f56da53fb64e3f7962cd27e" translate="yes" xml:space="preserve">
          <source>Here are the possibilities for &lt;var&gt;indent-spec&lt;/var&gt;:</source>
          <target state="translated">这是 &lt;var&gt;indent-spec&lt;/var&gt; 的可能性：</target>
        </trans-unit>
        <trans-unit id="bd8f927182baeadf22304b1787b869388c462e0d" translate="yes" xml:space="preserve">
          <source>Here are the possible values of a raw prefix argument:</source>
          <target state="translated">以下是原始前缀参数的可能值。</target>
        </trans-unit>
        <trans-unit id="5ce8af3326f43219d0b796ae363fcc6fb5290d76" translate="yes" xml:space="preserve">
          <source>Here are the results of calling &lt;code&gt;display-prefix&lt;/code&gt; with various raw prefix arguments:</source>
          <target state="translated">以下是使用各种原始前缀参数调用 &lt;code&gt;display-prefix&lt;/code&gt; 的结果：</target>
        </trans-unit>
        <trans-unit id="f8bd0dff50fa0bc6f8b7d41502a3ce0666433fd5" translate="yes" xml:space="preserve">
          <source>Here are the syntax codes corresponding to the various syntax classes:</source>
          <target state="translated">下面是各种语法类对应的语法代码。</target>
        </trans-unit>
        <trans-unit id="02419c54e9641319e2657b7a171e5f19a59d1820" translate="yes" xml:space="preserve">
          <source>Here are two commands that users use to do these things. They are documented here to warn you not to use them in Lisp programs, because they set the mark and display messages in the echo area.</source>
          <target state="translated">这里有两个用户用来做这些事情的命令。这里将它们记录下来,以警告你不要在Lisp程序中使用它们,因为它们会在回音区设置标记和显示信息。</target>
        </trans-unit>
        <trans-unit id="d456ebb039ab244fe5dae1e00aa97b11fbc4c412" translate="yes" xml:space="preserve">
          <source>Here are two examples of using the &lt;code&gt;disassemble&lt;/code&gt; function. We have added explanatory comments to help you relate the byte-code to the Lisp source; these do not appear in the output of &lt;code&gt;disassemble&lt;/code&gt;.</source>
          <target state="translated">这是使用 &lt;code&gt;disassemble&lt;/code&gt; 功能的两个示例。我们添加了解释性注释，以帮助您将字节码与Lisp源相关联。这些不会出现在 &lt;code&gt;disassemble&lt;/code&gt; 的输出中。</target>
        </trans-unit>
        <trans-unit id="9edfa8e5875009b929968ddbe402225f8162f1d6" translate="yes" xml:space="preserve">
          <source>Here are two functions you can use to let the user specify a coding system, with completion. See &lt;a href=&quot;completion#Completion&quot;&gt;Completion&lt;/a&gt;.</source>
          <target state="translated">您可以使用以下两个功能让用户指定一个完整的编码系统。参见&lt;a href=&quot;completion#Completion&quot;&gt;完成&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5c83740577306ed45ac274b900bd7f3b5ba73e86" translate="yes" xml:space="preserve">
          <source>Here are two tricky examples, slightly different, showing two return points at once. First, two return points with the same tag, &lt;code&gt;hack&lt;/code&gt;:</source>
          <target state="translated">这是两个棘手的示例，略有不同，它们一次显示两个返回点。首先，两个具有相同标签的返回点 &lt;code&gt;hack&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="092b131d90381ba124eed988566772c2a6456cf4" translate="yes" xml:space="preserve">
          <source>Here as an example is the local keymap for Lisp mode, a sparse keymap. It defines bindings for</source>
          <target state="translated">这里以Lisp模式的本地键图为例,是一个稀疏的键图。它定义了</target>
        </trans-unit>
        <trans-unit id="d64a1eb3e58d49ebe21bfb389f9ddc298d5f7e47" translate="yes" xml:space="preserve">
          <source>Here is a &lt;code&gt;condition-case&lt;/code&gt; that catches all kinds of errors, including those from &lt;code&gt;error&lt;/code&gt;:</source>
          <target state="translated">这里有一个 &lt;code&gt;condition-case&lt;/code&gt; ，捕捉各种错误，包括那些从 &lt;code&gt;error&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="1bbfadfecc0b352b761dbc46fc706a61713e65f5" translate="yes" xml:space="preserve">
          <source>Here is a complete example of defining a menu keymap. It is the definition of the &amp;lsquo;</source>
          <target state="translated">这是定义菜单键盘映射的完整示例。这是&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="c81928a7986c29a35e3a430e7c9b93d221171bc7" translate="yes" xml:space="preserve">
          <source>Here is a complete list of the other facilities that create local bindings:</source>
          <target state="translated">以下是创建本地绑定的其他设施的完整列表。</target>
        </trans-unit>
        <trans-unit id="a0b74d5a4d19e17a1b933a541c61a251a7d7dcc2" translate="yes" xml:space="preserve">
          <source>Here is a complicated regexp which was formerly used by Emacs to recognize the end of a sentence together with any whitespace that follows. (Nowadays Emacs uses a similar but more complex default regexp constructed by the function &lt;code&gt;sentence-end&lt;/code&gt;. See &lt;a href=&quot;standard-regexps#Standard-Regexps&quot;&gt;Standard Regexps&lt;/a&gt;.)</source>
          <target state="translated">这是一个复杂的正则表达式，Emacs以前曾使用它来识别句子的结尾以及后面的所有空格。（现在，Emacs使用由函数 &lt;code&gt;sentence-end&lt;/code&gt; 构造的类似但更复杂的默认正则表达式。请参见&lt;a href=&quot;standard-regexps#Standard-Regexps&quot;&gt;标准正则表达式&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="68a62b3887d5a1953d69b473c527423dff9a1f02" translate="yes" xml:space="preserve">
          <source>Here is a description of an imaginary function &lt;code&gt;foo&lt;/code&gt;:</source>
          <target state="translated">这是一个虚函数 &lt;code&gt;foo&lt;/code&gt; 的描述：</target>
        </trans-unit>
        <trans-unit id="2f46c1b7c1d2de04e6d5b9719e04342c93a0f898" translate="yes" xml:space="preserve">
          <source>Here is a description of the imaginary &lt;code&gt;electric-future-map&lt;/code&gt; variable.</source>
          <target state="translated">这里是虚构的 &lt;code&gt;electric-future-map&lt;/code&gt; 变量的描述。</target>
        </trans-unit>
        <trans-unit id="916f8753aed4924ef34d156c6bba72ba53312983" translate="yes" xml:space="preserve">
          <source>Here is a diagram that shows the variable &lt;code&gt;kill-ring-yank-pointer&lt;/code&gt; pointing to the second entry in the kill ring &lt;code&gt;(&quot;some text&quot; &quot;a
different piece of text&quot; &quot;yet older text&quot;)&lt;/code&gt;.</source>
          <target state="translated">这是一个图，显示了指向kill环中第二个条目的变量 &lt;code&gt;kill-ring-yank-pointer&lt;/code&gt; &lt;code&gt;(&quot;some text&quot; &quot;a different piece of text&quot; &quot;yet older text&quot;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="33bd9b0ba1a7304928238acd8f4c4598a6c0eec8" translate="yes" xml:space="preserve">
          <source>Here is a graphical depiction of the shared structure of the two lists in the variables &lt;code&gt;x1&lt;/code&gt; and &lt;code&gt;x2&lt;/code&gt;, showing why replacing &lt;code&gt;b&lt;/code&gt; changes them both:</source>
          <target state="translated">这是变量 &lt;code&gt;x1&lt;/code&gt; 和 &lt;code&gt;x2&lt;/code&gt; 中两个列表的共享结构的图形描述，显示了为什么替换 &lt;code&gt;b&lt;/code&gt; 会同时更改它们：</target>
        </trans-unit>
        <trans-unit id="dc1791fc3f5bb15b88e532189ac78686747d1a5f" translate="yes" xml:space="preserve">
          <source>Here is a hypothetical example of a &lt;code&gt;mode-line-format&lt;/code&gt; that might be useful for Shell mode (in reality, Shell mode does not set &lt;code&gt;mode-line-format&lt;/code&gt;):</source>
          <target state="translated">这是一个 &lt;code&gt;mode-line-format&lt;/code&gt; 的假设示例，该示例可能对Shell模式有用（实际上，Shell模式未设置 &lt;code&gt;mode-line-format&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="3d15abff95dc8163f745f384fe891b686aa58739" translate="yes" xml:space="preserve">
          <source>Here is a hypothetical example:</source>
          <target state="translated">下面是一个假设性的例子。</target>
        </trans-unit>
        <trans-unit id="4d651f57e09cfcd20265a834c68092a2d788a136" translate="yes" xml:space="preserve">
          <source>Here is a list of Debugger mode commands:</source>
          <target state="translated">下面是调试器模式的命令列表。</target>
        </trans-unit>
        <trans-unit id="6fa50994432ab5b07cddcf9ec07572c0474ff42b" translate="yes" xml:space="preserve">
          <source>Here is a list of additional specifications that may appear only after &lt;code&gt;&amp;amp;define&lt;/code&gt;. See the &lt;code&gt;defun&lt;/code&gt; example.</source>
          <target state="translated">这是仅在 &lt;code&gt;&amp;amp;define&lt;/code&gt; 之后出现的其他规范的列表。请参阅 &lt;code&gt;defun&lt;/code&gt; 示例。</target>
        </trans-unit>
        <trans-unit id="9fb270bb583b1d781a38c0fbd9e1a306fd83758a" translate="yes" xml:space="preserve">
          <source>Here is a list of commands for navigating and viewing backtraces:</source>
          <target state="translated">下面是一个用于导航和查看回溯的命令列表。</target>
        </trans-unit>
        <trans-unit id="ae115ab933bf031ad672f92db2d7a03acbbd55b0" translate="yes" xml:space="preserve">
          <source>Here is a list of the characters that are special in a regular expression.</source>
          <target state="translated">下面是正则表达式中的特殊字符列表。</target>
        </trans-unit>
        <trans-unit id="97a9610dc317adee664c6c0f5be148db4e5ba6d9" translate="yes" xml:space="preserve">
          <source>Here is a list of the more important error symbols in standard Emacs, grouped by concept. The list includes each symbol&amp;rsquo;s message and a cross reference to a description of how the error can occur.</source>
          <target state="translated">这是按概念分类的标准Emacs中更重要的错误符号的列表。该列表包括每个符号的消息以及对如何发生错误的描述的交叉引用。</target>
        </trans-unit>
        <trans-unit id="647a3a50d44a7c44404a8e6f0f3f19a3267316b3" translate="yes" xml:space="preserve">
          <source>Here is a list of the special sequences and what they mean:</source>
          <target state="translated">以下是特殊序列的列表以及它们的含义。</target>
        </trans-unit>
        <trans-unit id="fbd35d90dd59e4f40b6348053f9b417b84fc179e" translate="yes" xml:space="preserve">
          <source>Here is a list of the standard fringe bitmaps defined in Emacs, and how they are currently used in Emacs (via &lt;code&gt;fringe-indicator-alist&lt;/code&gt; and &lt;code&gt;fringe-cursor-alist&lt;/code&gt;):</source>
          <target state="translated">这是Emacs中定义的标准边缘位图的列表，以及它们在Emacs中的当前使用方式（通过 &lt;code&gt;fringe-indicator-alist&lt;/code&gt; 和 &lt;code&gt;fringe-cursor-alist&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="43d1f4e24171d3ee7eabed794219acc79d758f40" translate="yes" xml:space="preserve">
          <source>Here is a list, in alphabetical order, of all of the special forms in Emacs Lisp with a reference to where each is described.</source>
          <target state="translated">这里是Emacs Lisp中所有特殊形式的列表,按字母顺序排列,并注明了每一种形式的描述位置。</target>
        </trans-unit>
        <trans-unit id="3656710e08488c24fab0f132131291fc3a3fba64" translate="yes" xml:space="preserve">
          <source>Here is a macro definition that creates this expansion:</source>
          <target state="translated">这里有一个宏观的定义,创建了这个扩展。</target>
        </trans-unit>
        <trans-unit id="f835c8a36c0132345eb0adb7c252b2a201016e44" translate="yes" xml:space="preserve">
          <source>Here is a more complex illustration, showing the three-element list, &lt;code&gt;((pine needles) oak maple)&lt;/code&gt;, the first element of which is a two-element list:</source>
          <target state="translated">这是一个更复杂的示例，显示了三元素列表 &lt;code&gt;((pine needles) oak maple)&lt;/code&gt; ，其第一个元素是两元素列表：</target>
        </trans-unit>
        <trans-unit id="7e2581c576f1c1477124a42e19f67c781eba0061" translate="yes" xml:space="preserve">
          <source>Here is a more complicated example that combines several aforementioned features:</source>
          <target state="translated">下面是一个比较复杂的例子,结合了上述几个特点。</target>
        </trans-unit>
        <trans-unit id="e8e9ff760511437efff764dc24f55ee6e0392aea" translate="yes" xml:space="preserve">
          <source>Here is a more realistic example of using &lt;code&gt;and&lt;/code&gt;:</source>
          <target state="translated">这是使用 &lt;code&gt;and&lt;/code&gt; 的更实际的示例：</target>
        </trans-unit>
        <trans-unit id="dea64f52060af0b6a6fb878a92467f21c110c033" translate="yes" xml:space="preserve">
          <source>Here is a pseudo-Lisp summary of how Emacs searches the active keymaps:</source>
          <target state="translated">这里是一个关于Emac如何搜索活动键图的伪Lisp总结。</target>
        </trans-unit>
        <trans-unit id="3773ec9da4023cf8fa5fa83972f01da702ab4cbd" translate="yes" xml:space="preserve">
          <source>Here is a simple example of correct use of &lt;code&gt;save-restriction&lt;/code&gt;:</source>
          <target state="translated">这是正确使用 &lt;code&gt;save-restriction&lt;/code&gt; 的简单示例：</target>
        </trans-unit>
        <trans-unit id="3c52ae7a844b360ae053120b9b3deb9f08a17c19" translate="yes" xml:space="preserve">
          <source>Here is a simple example using functions of the ewoc package to implement a &lt;em&gt;color components&lt;/em&gt; display, an area in a buffer that represents a vector of three integers (itself representing a 24-bit RGB value) in various ways.</source>
          <target state="translated">这是一个使用ewoc软件包的功能来实现&lt;em&gt;颜色分量&lt;/em&gt;显示的简单示例，该&lt;em&gt;颜色&lt;/em&gt;是缓冲区中以各种方式表示三个整数（本身表示24位RGB值）的向量的区域。</target>
        </trans-unit>
        <trans-unit id="da58a4e18eecb366990aa6865ef0649ffa163de7" translate="yes" xml:space="preserve">
          <source>Here is a simplified version of the default value of &lt;code&gt;mode-line-format&lt;/code&gt;. The real default value also specifies addition of text properties.</source>
          <target state="translated">这是 &lt;code&gt;mode-line-format&lt;/code&gt; 的默认值的简化版本。真实的默认值还指定了文本属性的添加。</target>
        </trans-unit>
        <trans-unit id="318fd25157a7a54cc54514dad19143f1b5cb6a17" translate="yes" xml:space="preserve">
          <source>Here is a simplified version of the standard definition of this function:</source>
          <target state="translated">这里是这个函数的标准定义的简化版。</target>
        </trans-unit>
        <trans-unit id="fe46c407075c04d2c2bf25778bb7932beee81b33" translate="yes" xml:space="preserve">
          <source>Here is a table of constructors and how to use them to write composite types:</source>
          <target state="translated">这里有一个构造函数表,以及如何使用它们来编写复合类型。</target>
        </trans-unit>
        <trans-unit id="59e9a4e221140c59f1ed4abe816ce09f90028590" translate="yes" xml:space="preserve">
          <source>Here is a table of predefined type predicates, in alphabetical order, with references to further information.</source>
          <target state="translated">以下是按字母顺序排列的预定义类型谓词表,并附有进一步的信息参考。</target>
        </trans-unit>
        <trans-unit id="469b56ff0b9c3104db637c701bbdd90f313fefeb" translate="yes" xml:space="preserve">
          <source>Here is a table of several functions that do things related to function calling and function definitions. They are documented elsewhere, but we provide cross references here.</source>
          <target state="translated">这里有几个函数的表格,它们做的事情与函数调用和函数定义有关。这些函数在其他地方都有记载,但我们在这里提供了交叉参考。</target>
        </trans-unit>
        <trans-unit id="ffc909362735d9e0bad79baab5dbcaa76ac01b82" translate="yes" xml:space="preserve">
          <source>Here is a table of syntax classes, the characters that designate them, their meanings, and examples of their use.</source>
          <target state="translated">这里有一个语法类的表格,指定它们的字符,它们的含义,以及它们的使用实例。</target>
        </trans-unit>
        <trans-unit id="43a31c971557501d2a192b352b875b95c80368e7" translate="yes" xml:space="preserve">
          <source>Here is a table of text property names that have special built-in meanings. The following sections list a few additional special property names that control filling and property inheritance. All other names have no standard meaning, and you can use them as you like.</source>
          <target state="translated">这里是一个具有特殊内置含义的文本属性名表。下面的章节列出了一些额外的控制填充和属性继承的特殊属性名。所有其他名称都没有标准含义,你可以随意使用它们。</target>
        </trans-unit>
        <trans-unit id="b273c10d4f3c7f341e9ff0b1f358e1304545b3d1" translate="yes" xml:space="preserve">
          <source>Here is a table of the keywords that are currently meaningful in &lt;var&gt;sound&lt;/var&gt;, and their meanings:</source>
          <target state="translated">下表列出了目前在 &lt;var&gt;sound&lt;/var&gt; 上有意义的关键字及其含义：</target>
        </trans-unit>
        <trans-unit id="15f3f94bfa2a25b49562ef01c515038c6b6e0c1e" translate="yes" xml:space="preserve">
          <source>Here is a table of the keywords you can use in keyword-value pairs in a composite type:</source>
          <target state="translated">下面是一个可以在复合类型的关键字-值对中使用的关键字表。</target>
        </trans-unit>
        <trans-unit id="b71c5f04bb031787dd30f5c83601bbbebda25ddb" translate="yes" xml:space="preserve">
          <source>Here is a table of the possibilities for &lt;var&gt;specification&lt;/var&gt; and how each directs processing of arguments.</source>
          <target state="translated">下表列出了 &lt;var&gt;specification&lt;/var&gt; 的可能性以及每种可能性如何指导参数的处理。</target>
        </trans-unit>
        <trans-unit id="95831131b384a2b21e4c0b8c5022c442f687a653" translate="yes" xml:space="preserve">
          <source>Here is a table of the possible flags for a character &lt;var&gt;c&lt;/var&gt;, and what they mean:</source>
          <target state="translated">下表列出了字符 &lt;var&gt;c&lt;/var&gt; 的可能标志及其含义：</target>
        </trans-unit>
        <trans-unit id="2c43a6789fdaf3f9f0a10d31de842cab32220ac2" translate="yes" xml:space="preserve">
          <source>Here is a table of the properties that are supported:</source>
          <target state="translated">下面是支持的属性表。</target>
        </trans-unit>
        <trans-unit id="6a4844f0bdbbb2087add8ab2d2ddeae5af01c6f5" translate="yes" xml:space="preserve">
          <source>Here is a table of valid format specifications:</source>
          <target state="translated">以下是有效格式规格表。</target>
        </trans-unit>
        <trans-unit id="162f01c8064dc8140a9185449b539a67fd6a7185" translate="yes" xml:space="preserve">
          <source>Here is a way of using this function to get the same effect as &lt;code&gt;save-window-excursion&lt;/code&gt;:</source>
          <target state="translated">这是一种使用此功能获得与 &lt;code&gt;save-window-excursion&lt;/code&gt; 相同的效果的方法：</target>
        </trans-unit>
        <trans-unit id="744d7c83201116cf26504fabdf581d91728c15f5" translate="yes" xml:space="preserve">
          <source>Here is a way to remove the first element from a list in the variable &lt;code&gt;x&lt;/code&gt;, then return the value of that former element:</source>
          <target state="translated">这是一种从变量 &lt;code&gt;x&lt;/code&gt; 的列表中删除第一个元素，然后返回该前一个元素的值的方法：</target>
        </trans-unit>
        <trans-unit id="8314306c5662ec954e95355d957dc09e43065ff2" translate="yes" xml:space="preserve">
          <source>Here is a working example that does nothing useful:</source>
          <target state="translated">下面是一个没有任何用处的工作例子。</target>
        </trans-unit>
        <trans-unit id="99ac11664a626a3bf23df90364701afffc78f1c0" translate="yes" xml:space="preserve">
          <source>Here is an &lt;code&gt;rx&lt;/code&gt; regexp&lt;a href=&quot;#FOOT19&quot; name=&quot;DOCF19&quot;&gt;&lt;sup&gt;19&lt;/sup&gt;&lt;/a&gt; that matches a block comment in the C programming language:</source>
          <target state="translated">这是与C编程语言中的块注释匹配的 &lt;code&gt;rx&lt;/code&gt; regexp &lt;a href=&quot;#FOOT19&quot; name=&quot;DOCF19&quot;&gt;&lt;sup&gt;19&lt;/sup&gt;&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="bd4912b0008836ebe4c4d6a5f214785bc64807af" translate="yes" xml:space="preserve">
          <source>Here is an actual example derived from an FTP package. It creates a process (see &lt;a href=&quot;processes#Processes&quot;&gt;Processes&lt;/a&gt;) to try to establish a connection to a remote machine. As the function &lt;code&gt;ftp-login&lt;/code&gt; is highly susceptible to numerous problems that the writer of the function cannot anticipate, it is protected with a form that guarantees deletion of the process in the event of failure. Otherwise, Emacs might fill up with useless subprocesses.</source>
          <target state="translated">这是从FTP包派生的实际示例。它创建一个过程（请参阅&lt;a href=&quot;processes#Processes&quot;&gt;Processs&lt;/a&gt;）以尝试建立与远程计算机的连接。由于功能 &lt;code&gt;ftp-login&lt;/code&gt; 极易受到该功能的编写者无法预料的众多问题的影响，因此它以一种在出现故障时保证删除进程的形式进行保护。否则，Emacs可能会填充无用的子进程。</target>
        </trans-unit>
        <trans-unit id="2c6c545bff6edc8de86f5029834d4a83dfd207f8" translate="yes" xml:space="preserve">
          <source>Here is an alternative form of box diagram, showing the same relationship:</source>
          <target state="translated">下面是另一种形式的框图,显示了同样的关系。</target>
        </trans-unit>
        <trans-unit id="c31e8fe1e11610a32d5d5ba11267b69aa3fd55fd" translate="yes" xml:space="preserve">
          <source>Here is an example in which we supply the string &lt;code&gt;&quot;(testing)&quot;&lt;/code&gt; as initial input:</source>
          <target state="translated">这是一个示例，其中我们提供字符串 &lt;code&gt;&quot;(testing)&quot;&lt;/code&gt; 作为初始输入：</target>
        </trans-unit>
        <trans-unit id="b86bce27a19e9f4648331aac6e64bbf62c755859" translate="yes" xml:space="preserve">
          <source>Here is an example of a buffer used as an output stream. Point is initially located as shown immediately before the &amp;lsquo;</source>
          <target state="translated">这是用作输出流的缓冲区的示例。点的位置最初位于&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="53438c03b4a323d58857a792c0542b1dd07ab7b0" translate="yes" xml:space="preserve">
          <source>Here is an example of an alist. The key &lt;code&gt;pine&lt;/code&gt; is associated with the value &lt;code&gt;cones&lt;/code&gt;; the key &lt;code&gt;oak&lt;/code&gt; is associated with &lt;code&gt;acorns&lt;/code&gt;; and the key &lt;code&gt;maple&lt;/code&gt; is associated with &lt;code&gt;seeds&lt;/code&gt;.</source>
          <target state="translated">这是一个列表的示例。关键 &lt;code&gt;pine&lt;/code&gt; 与价值 &lt;code&gt;cones&lt;/code&gt; ; 关键的 &lt;code&gt;oak&lt;/code&gt; 与 &lt;code&gt;acorns&lt;/code&gt; ; 关键的 &lt;code&gt;maple&lt;/code&gt; 与 &lt;code&gt;seeds&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="70ef28e8dd5308942ad08bb3d40d77f00ac988aa" translate="yes" xml:space="preserve">
          <source>Here is an example of an indentation function:</source>
          <target state="translated">下面是一个缩进函数的例子。</target>
        </trans-unit>
        <trans-unit id="779f7067a330e8986505e09ac582b68d864e98fe" translate="yes" xml:space="preserve">
          <source>Here is an example of calling this function explicitly.</source>
          <target state="translated">下面是一个显式调用这个函数的例子。</target>
        </trans-unit>
        <trans-unit id="5fcdc8a458b478674add3a28b36d76dfce247f8e" translate="yes" xml:space="preserve">
          <source>Here is an example of code that creates a circular structure:</source>
          <target state="translated">下面是一个创建循环结构的代码示例。</target>
        </trans-unit>
        <trans-unit id="8e674610220ca661dcfb5249f926dce24baae49b" translate="yes" xml:space="preserve">
          <source>Here is an example of how to prepend several pattern pairs to &lt;code&gt;auto-mode-alist&lt;/code&gt;. (You might use this sort of expression in your init file.)</source>
          <target state="translated">这是一个示例，说明如何将几个模式对添加到 &lt;code&gt;auto-mode-alist&lt;/code&gt; 。（您可以在init文件中使用这种表达。）</target>
        </trans-unit>
        <trans-unit id="e56919ec39808d10990921a81c1dc9d83d00164f" translate="yes" xml:space="preserve">
          <source>Here is an example of how to scan the buffer by chunks of text within which all properties are constant:</source>
          <target state="translated">下面是一个如何通过文本块扫描缓冲区的例子,其中所有属性都是不变的。</target>
        </trans-unit>
        <trans-unit id="18942237e1d3391835ef9c18950661211b133070" translate="yes" xml:space="preserve">
          <source>Here is an example of how you could use these hooks:</source>
          <target state="translated">下面是一个如何使用这些钩子的例子。</target>
        </trans-unit>
        <trans-unit id="0198ddb5a6b6ba6514d1e2ed0aa15f5788ab242f" translate="yes" xml:space="preserve">
          <source>Here is an example of reading from a stream that is a buffer, showing where point is located before and after:</source>
          <target state="translated">下面是一个从流中读取缓冲区的例子,显示了点在前后的位置。</target>
        </trans-unit>
        <trans-unit id="f568b2f16ed58e552e6a40ea4f5c9fc59d1a63a1" translate="yes" xml:space="preserve">
          <source>Here is an example of reading from a stream that is a marker, initially positioned at the beginning of the buffer shown. The value read is the symbol &lt;code&gt;This&lt;/code&gt;.</source>
          <target state="translated">这是从作为标记的流中读取的示例，该流最初位于所示缓冲区的开头。读取的值是符号 &lt;code&gt;This&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b0f40e737fc8729eddfa8ceefca55d842b78581e" translate="yes" xml:space="preserve">
          <source>Here is an example of replacing the &lt;small&gt;CDR&lt;/small&gt; of a list with a different list. All but the first element of the list are removed in favor of a different sequence of elements. The first element is unchanged, because it resides in the &lt;small&gt;CAR&lt;/small&gt; of the list, and is not reached via the &lt;small&gt;CDR&lt;/small&gt;.</source>
          <target state="translated">这是用另一个列表替换列表的&lt;small&gt;CDR&lt;/small&gt;的示例。除去列表中的第一个元素以外的所有元素，以便使用其他元素顺序。第一个元素不变，因为它位于列表的&lt;small&gt;CAR&lt;/small&gt;中，并且无法通过&lt;small&gt;CDR&lt;/small&gt;到达。</target>
        </trans-unit>
        <trans-unit id="091103fe621d16b03529fe9dd9c2d79361aee85d" translate="yes" xml:space="preserve">
          <source>Here is an example of the use of &lt;code&gt;call-process&lt;/code&gt;, as used to be found in the definition of the &lt;code&gt;insert-directory&lt;/code&gt; function:</source>
          <target state="translated">这是使用 &lt;code&gt;call-process&lt;/code&gt; 的示例，该示例可在 &lt;code&gt;insert-directory&lt;/code&gt; 函数的定义中找到：</target>
        </trans-unit>
        <trans-unit id="1499f217e74e57e46dfbccb31f593542ac49e209" translate="yes" xml:space="preserve">
          <source>Here is an example of the use of a filter function:</source>
          <target state="translated">下面是一个使用过滤器功能的例子。</target>
        </trans-unit>
        <trans-unit id="dab019c7f022f57bcd229f98491fc22c61bc3e48" translate="yes" xml:space="preserve">
          <source>Here is an example of using &lt;code&gt;append&lt;/code&gt;:</source>
          <target state="translated">这是使用 &lt;code&gt;append&lt;/code&gt; 的示例：</target>
        </trans-unit>
        <trans-unit id="8a238289db2dfcaa0496780041a9df54809ae2f8" translate="yes" xml:space="preserve">
          <source>Here is an example of using &lt;code&gt;called-interactively-p&lt;/code&gt;:</source>
          <target state="translated">这是使用 &lt;code&gt;called-interactively-p&lt;/code&gt; 的示例：</target>
        </trans-unit>
        <trans-unit id="a81f1a4896a4aae90f18dc82a957a568796e09b4" translate="yes" xml:space="preserve">
          <source>Here is an example of using &lt;code&gt;condition-case&lt;/code&gt; to handle the error that results from dividing by zero. The handler displays the error message (but without a beep), then returns a very large number.</source>
          <target state="translated">这是一个使用 &lt;code&gt;condition-case&lt;/code&gt; 处理因零除而导致的错误的示例。处理程序显示错误消息（但不发出蜂鸣声），然后返回一个非常大的数字。</target>
        </trans-unit>
        <trans-unit id="e26dc47e83dc453396d344fd29e85f7ddd2347a9" translate="yes" xml:space="preserve">
          <source>Here is an example of using &lt;code&gt;define-minor-mode&lt;/code&gt;:</source>
          <target state="translated">这是使用 &lt;code&gt;define-minor-mode&lt;/code&gt; 的示例：</target>
        </trans-unit>
        <trans-unit id="39ef4075ee61f191dbbb2065e1ed751957357262" translate="yes" xml:space="preserve">
          <source>Here is an example of using &lt;code&gt;easy-menu-define&lt;/code&gt; to define a menu similar to the one defined in the example in &lt;a href=&quot;menu-bar#Menu-Bar&quot;&gt;Menu Bar&lt;/a&gt;:</source>
          <target state="translated">这是一个使用 &lt;code&gt;easy-menu-define&lt;/code&gt; 定义菜单的示例，类似于&lt;a href=&quot;menu-bar#Menu-Bar&quot;&gt;菜单栏&lt;/a&gt;示例中定义的菜单：</target>
        </trans-unit>
        <trans-unit id="e4ebaaa49a428e162911447bfa5549bef4a7227b" translate="yes" xml:space="preserve">
          <source>Here is an example of using &lt;code&gt;image-load-path-for-library&lt;/code&gt;:</source>
          <target state="translated">这是使用 &lt;code&gt;image-load-path-for-library&lt;/code&gt; 的示例：</target>
        </trans-unit>
        <trans-unit id="b519ff35d8489f0c46cc90f5772917f1c398a581" translate="yes" xml:space="preserve">
          <source>Here is an example of using &lt;code&gt;pcase&lt;/code&gt; to implement a simple interpreter for a little expression language (note that this requires lexical binding for the lambda expression in the &lt;code&gt;fn&lt;/code&gt; clause to properly capture &lt;code&gt;body&lt;/code&gt; and &lt;code&gt;arg&lt;/code&gt; (see &lt;a href=&quot;lexical-binding#Lexical-Binding&quot;&gt;Lexical Binding&lt;/a&gt;):</source>
          <target state="translated">这是一个使用 &lt;code&gt;pcase&lt;/code&gt; 为少量表达式语言实现简单解释器的示例（请注意，这需要对 &lt;code&gt;fn&lt;/code&gt; 子句中的lambda表达式进行词法绑定，以正确捕获 &lt;code&gt;body&lt;/code&gt; 和 &lt;code&gt;arg&lt;/code&gt; （请参阅&lt;a href=&quot;lexical-binding#Lexical-Binding&quot;&gt;Lexical Binding&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="11e83b56365b8fa74ba19c8c025aeb08fcfc3b0b" translate="yes" xml:space="preserve">
          <source>Here is an example of using &lt;code&gt;read-file-name&lt;/code&gt;:</source>
          <target state="translated">这是使用 &lt;code&gt;read-file-name&lt;/code&gt; 的示例：</target>
        </trans-unit>
        <trans-unit id="0153d60da811e6ff65004567fed4cc2802a03cca" translate="yes" xml:space="preserve">
          <source>Here is an example of using &lt;code&gt;set-process-query-on-exit-flag&lt;/code&gt; on a shell process to avoid querying:</source>
          <target state="translated">这是在shell进程 &lt;code&gt;set-process-query-on-exit-flag&lt;/code&gt; 使用set-process-query-on-exit-flag以避免查询的示例：</target>
        </trans-unit>
        <trans-unit id="4e30643770804e938cbaafb3043cbe5b27f906a9" translate="yes" xml:space="preserve">
          <source>Here is an example of using the match data, with a comment showing the positions within the text:</source>
          <target state="translated">下面是一个使用匹配数据的例子,并附上注释,显示文本中的位置。</target>
        </trans-unit>
        <trans-unit id="06e6e206b2610ebf74cb71d81076218801ba782a" translate="yes" xml:space="preserve">
          <source>Here is an example of using the two functions, &lt;code&gt;documentation&lt;/code&gt; and &lt;code&gt;documentation-property&lt;/code&gt;, to display the documentation strings for several symbols in a</source>
          <target state="translated">这是一个使用两个功能（ &lt;code&gt;documentation&lt;/code&gt; 和 &lt;code&gt;documentation-property&lt;/code&gt; ）来显示一个符号中多个符号的文档字符串的示例。</target>
        </trans-unit>
        <trans-unit id="7333a24f61245f75d1cf3e767e59662e3864cdf6" translate="yes" xml:space="preserve">
          <source>Here is an example of using this function:</source>
          <target state="translated">下面是使用这个函数的一个例子。</target>
        </trans-unit>
        <trans-unit id="ed0d0e4770b0d93c3cfff914f5ac1db3fc8b8d0c" translate="yes" xml:space="preserve">
          <source>Here is an example of what the evaluation list window looks like after several expressions have been added to it:</source>
          <target state="translated">下面是一个例子,说明在评估列表窗口中添加了几个表达式后的样子。</target>
        </trans-unit>
        <trans-unit id="be5286fdd0ae9f92686e8e9bc91e4ffc06377571" translate="yes" xml:space="preserve">
          <source>Here is an example showing a keymap before and after substitution:</source>
          <target state="translated">下面是一个例子,展示了替换前和替换后的键图。</target>
        </trans-unit>
        <trans-unit id="59122977b2355be69df328d005699ccb9ff2b482" translate="yes" xml:space="preserve">
          <source>Here is an example showing how to make a keymap that inherits from &lt;code&gt;text-mode-map&lt;/code&gt;:</source>
          <target state="translated">这是显示如何制作从 &lt;code&gt;text-mode-map&lt;/code&gt; 继承的键盘映射的示例：</target>
        </trans-unit>
        <trans-unit id="b6e6f825d9c519d74c186cb009651964da31b06e" translate="yes" xml:space="preserve">
          <source>Here is an example that just inserts some text into</source>
          <target state="translated">下面是一个例子,只是将一些文本插入到</target>
        </trans-unit>
        <trans-unit id="ec46a5dde5ea0a07c86bfbb291f74208f141dcaf" translate="yes" xml:space="preserve">
          <source>Here is an example which illustrates this point. A string serves as a replacing display specification, which replaces the text that has the property with the specified string (see &lt;a href=&quot;other-display-specs#Other-Display-Specs&quot;&gt;Other Display Specs&lt;/a&gt;). Consider the following function:</source>
          <target state="translated">这是说明这一点的示例。字符串用作替换显示规范，该规范用指定的字符串替换具有属性的文本（请参见&lt;a href=&quot;other-display-specs#Other-Display-Specs&quot;&gt;其他显示规范&lt;/a&gt;）。考虑以下功能：</target>
        </trans-unit>
        <trans-unit id="5e301ef8b882cbdd4fa7fd0759418b909b85d813" translate="yes" xml:space="preserve">
          <source>Here is an example which uses the predicates &lt;code&gt;listp&lt;/code&gt; to check for a list and &lt;code&gt;symbolp&lt;/code&gt; to check for a symbol.</source>
          <target state="translated">这是一个使用谓词 &lt;code&gt;listp&lt;/code&gt; 检查列表和使用 &lt;code&gt;symbolp&lt;/code&gt; 检查符号的示例。</target>
        </trans-unit>
        <trans-unit id="5d24ca8395423089b6025dfe97286774905923b8" translate="yes" xml:space="preserve">
          <source>Here is an example, using the function &lt;code&gt;test&lt;/code&gt; shown in the example for &lt;code&gt;try-completion&lt;/code&gt;:</source>
          <target state="translated">这是一个示例，将示例中显示的功能 &lt;code&gt;test&lt;/code&gt; 用于 &lt;code&gt;try-completion&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="410861a827009bfe04137708043dffcd0ea11e0c" translate="yes" xml:space="preserve">
          <source>Here is an example. The first condition returns the integer 1, which is not &lt;code&gt;nil&lt;/code&gt;. Similarly, the second condition returns the integer 2, which is not &lt;code&gt;nil&lt;/code&gt;. The third condition is &lt;code&gt;nil&lt;/code&gt;, so the remaining condition is never evaluated.</source>
          <target state="translated">这是一个例子。第一个条件返回整数1，而不是 &lt;code&gt;nil&lt;/code&gt; 。同样，第二个条件返回整数2，而不是 &lt;code&gt;nil&lt;/code&gt; 。第三个条件为 &lt;code&gt;nil&lt;/code&gt; ，因此永远不会评估其余条件。</target>
        </trans-unit>
        <trans-unit id="540ee2aaf7182c6dfc449b18e5accb694e3b0894" translate="yes" xml:space="preserve">
          <source>Here is an example:</source>
          <target state="translated">下面是一个例子。</target>
        </trans-unit>
        <trans-unit id="d616e6f33b5793e4424f01717c571300ee5813bb" translate="yes" xml:space="preserve">
          <source>Here is another diagram of the same list, &lt;code&gt;(rose violet
buttercup)&lt;/code&gt;, sketched in a different manner:</source>
          <target state="translated">这是同一列表的另一幅图 &lt;code&gt;(rose violet buttercup)&lt;/code&gt; ，以不同的方式描绘：</target>
        </trans-unit>
        <trans-unit id="d166e1a3cc1b3c9792f17af4d7c78865f34a0bc5" translate="yes" xml:space="preserve">
          <source>Here is another example function, with more complicated arguments. This comes from the code in</source>
          <target state="translated">这里是另一个函数的例子,参数更复杂。这来自于</target>
        </trans-unit>
        <trans-unit id="f84493d6a5cb2718ac0378fb3f0268d00c795bf3" translate="yes" xml:space="preserve">
          <source>Here is another example of creating, examining, and updating a bool-vector:</source>
          <target state="translated">下面是另一个创建、检查和更新一个bool-vector的例子。</target>
        </trans-unit>
        <trans-unit id="0ac5fdde4723107740b0a61efbb91b44f740be70" translate="yes" xml:space="preserve">
          <source>Here is another example that contrasts direct and indirect calls to &lt;code&gt;called-interactively-p&lt;/code&gt;.</source>
          <target state="translated">这是另一个示例，将直接调用和间接调用与 &lt;code&gt;called-interactively-p&lt;/code&gt; 对比。</target>
        </trans-unit>
        <trans-unit id="bcf0da0cdbb1a62fa4a7457f558ad951fb2eb882" translate="yes" xml:space="preserve">
          <source>Here is another example that shows how to reformulate a simple matching task from its traditional implementation (function &lt;code&gt;grok/traditional&lt;/code&gt;) to one using &lt;code&gt;pcase&lt;/code&gt; (function &lt;code&gt;grok/pcase&lt;/code&gt;). The docstring for both these functions is: &amp;ldquo;If OBJ is a string of the form &quot;key:NUMBER&quot;, return NUMBER (a string). Otherwise, return the list (&quot;149&quot; default).&amp;rdquo; First, the traditional implementation (see &lt;a href=&quot;regular-expressions#Regular-Expressions&quot;&gt;Regular Expressions&lt;/a&gt;):</source>
          <target state="translated">这是另一个示例，显示了如何将简单的匹配任务从其传统实现（函数 &lt;code&gt;grok/traditional&lt;/code&gt; ）重新 &lt;code&gt;pcase&lt;/code&gt; 为使用pcase（函数 &lt;code&gt;grok/pcase&lt;/code&gt; ）的任务。这两个函数的文档字符串是：&amp;ldquo;如果OBJ是形式为&amp;ldquo; key：NUMBER&amp;rdquo;的字符串，则返回NUMBER（字符串）。否则，返回列表（默认为&amp;ldquo; 149&amp;rdquo;）。&amp;rdquo; 首先，是传统的实现方式（请参见&lt;a href=&quot;regular-expressions#Regular-Expressions&quot;&gt;正则表达式&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="aa3ca317e0fe521a2857d002a7c735add2ab267d" translate="yes" xml:space="preserve">
          <source>Here is another example, in which the keys and values are not symbols:</source>
          <target state="translated">下面是另一个例子,其中的键和值都不是符号。</target>
        </trans-unit>
        <trans-unit id="94f76f0f147e0ae1a79f92ffdad3303970e71a42" translate="yes" xml:space="preserve">
          <source>Here is another example, which illustrates setting a dynamically bound variable using &lt;code&gt;setq&lt;/code&gt;:</source>
          <target state="translated">这是另一个示例，它说明了使用 &lt;code&gt;setq&lt;/code&gt; 设置动态绑定变量：</target>
        </trans-unit>
        <trans-unit id="3c6ce8daf11cbd2ce09eb8625e1b4ab36c91b7bb" translate="yes" xml:space="preserve">
          <source>Here is another example. Point is initially located at the beginning of the line. Searching moves point to between the space and the word &amp;lsquo;</source>
          <target state="translated">这是另一个例子。点最初位于行的开头。搜索移动指向空间与单词&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="c96e0949bd86302f12b469864644efef00c1e00b" translate="yes" xml:space="preserve">
          <source>Here is how lexical binding works. Each binding construct defines a &lt;em&gt;lexical environment&lt;/em&gt;, specifying the variables that are bound within the construct and their local values. When the Lisp evaluator wants the current value of a variable, it looks first in the lexical environment; if the variable is not specified in there, it looks in the symbol&amp;rsquo;s value cell, where the dynamic value is stored.</source>
          <target state="translated">这是词汇绑定的工作方式。每个绑定构造都定义一个&lt;em&gt;词法环境&lt;/em&gt;，指定在构造内绑定的变量及其局部值。当Lisp评估器想要一个变量的当前值时，它首先在词法环境中查找；然后在变量环境中查找它。如果未在其中指定变量，它将在符号的值单元格中查找，该值存储动态值。</target>
        </trans-unit>
        <trans-unit id="c865effa2ab105ca8b1ced7058910223439a298c" translate="yes" xml:space="preserve">
          <source>Here is how the Lisp mode syntax and abbrev tables are defined:</source>
          <target state="translated">下面是Lisp模式语法和缩写表的定义。</target>
        </trans-unit>
        <trans-unit id="c77a29dfcca39f5712e504d404cc60bc93f8ddd6" translate="yes" xml:space="preserve">
          <source>Here is how the actual mode command is defined now:</source>
          <target state="translated">下面是现在实际模式命令的定义。</target>
        </trans-unit>
        <trans-unit id="c3f9cb95a933ebbfa89306ab4cad10a54fed251e" translate="yes" xml:space="preserve">
          <source>Here is how to insert an item called &amp;lsquo;</source>
          <target state="translated">这是如何插入名为&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="f32f97a28a3df3542cba50e134781a211a8a8b8f" translate="yes" xml:space="preserve">
          <source>Here is how to set up a timer that runs when Emacs is idle for a certain length of time. Aside from how to set them up, idle timers work just like ordinary timers.</source>
          <target state="translated">下面是如何设置一个计时器,当Emacs闲置一定时间后,就会运行。除了如何设置外,空闲定时器的工作原理和普通定时器一样。</target>
        </trans-unit>
        <trans-unit id="73b336151b89dfa57fd5a3116bf103c85cacd3d7" translate="yes" xml:space="preserve">
          <source>Here is how we define a new error symbol, &lt;code&gt;new-error&lt;/code&gt;:</source>
          <target state="translated">这是我们定义新错误符号 &lt;code&gt;new-error&lt;/code&gt; 的方法：</target>
        </trans-unit>
        <trans-unit id="278159de2ac0eea6740d85026aa356f593bfec23" translate="yes" xml:space="preserve">
          <source>Here is how we make this menu appear as an item in the parent menu:</source>
          <target state="translated">下面是我们如何让这个菜单作为一个项目出现在父菜单中。</target>
        </trans-unit>
        <trans-unit id="8c21fffb9118efefe9955cda89cb3a598c567ffb" translate="yes" xml:space="preserve">
          <source>Here is how you can determine whether a given position &lt;var&gt;position&lt;/var&gt; is off the screen due to horizontal scrolling:</source>
          <target state="translated">这是确定水平滚动是否会导致给定位置 &lt;var&gt;position&lt;/var&gt; 偏离屏幕的方法：</target>
        </trans-unit>
        <trans-unit id="c74f249585edbbe21b50d14f4f6db617a524b4f4" translate="yes" xml:space="preserve">
          <source>Here is how you could define &lt;code&gt;indirect-function&lt;/code&gt; in Lisp:</source>
          <target state="translated">这是在Lisp中定义 &lt;code&gt;indirect-function&lt;/code&gt; 的方法：</target>
        </trans-unit>
        <trans-unit id="4b58880b182e875e4ffd43024735888dcb0b1141" translate="yes" xml:space="preserve">
          <source>Here is how you could define a hash table test equivalent to the predefined test value &lt;code&gt;equal&lt;/code&gt;. The keys can be any Lisp object, and equal-looking objects are considered the same key.</source>
          <target state="translated">这是定义等同于预定义测试值 &lt;code&gt;equal&lt;/code&gt; 的哈希表测试的方法。键可以是任何Lisp对象，并且外观相同的对象被视为同一键。</target>
        </trans-unit>
        <trans-unit id="72d58a73bcb1a0aaaaa75916e4aff066b20cda8e" translate="yes" xml:space="preserve">
          <source>Here is the &lt;code&gt;nreverse&lt;/code&gt; of our favorite example, &lt;code&gt;(a b c)&lt;/code&gt;, presented graphically:</source>
          <target state="translated">这是我们最喜欢的示例 &lt;code&gt;(a b c)&lt;/code&gt; 的 &lt;code&gt;nreverse&lt;/code&gt; 形式，以图形方式显示：</target>
        </trans-unit>
        <trans-unit id="52dad43ecdffec7ede8fe242d6e268ade98c1217" translate="yes" xml:space="preserve">
          <source>Here is the full list of value types for all the character properties that Emacs knows about:</source>
          <target state="translated">这里是Emacs知道的所有字符属性的值类型的完整列表。</target>
        </trans-unit>
        <trans-unit id="165874cadba17d5d3677e2dd1ff17703831bb43e" translate="yes" xml:space="preserve">
          <source>Here is the list &lt;code&gt;(A ())&lt;/code&gt;, or equivalently &lt;code&gt;(A nil)&lt;/code&gt;, depicted with boxes and arrows:</source>
          <target state="translated">这是列表 &lt;code&gt;(A ())&lt;/code&gt; 或等效地 &lt;code&gt;(A nil)&lt;/code&gt; ，用方框和箭头表示：</target>
        </trans-unit>
        <trans-unit id="63473693fbf5f0b5f414ef4b5e769c68e4b4cc8a" translate="yes" xml:space="preserve">
          <source>Here is the result in box notation:</source>
          <target state="translated">下面是用方框符号表示的结果。</target>
        </trans-unit>
        <trans-unit id="b58cd804ad37268f76450c142797d95ddcd3b2e1" translate="yes" xml:space="preserve">
          <source>Here is this result in box notation:</source>
          <target state="translated">下面是这个结果,用方框符号表示。</target>
        </trans-unit>
        <trans-unit id="d8db3f5678d4881c9659299a2c52678ef3c34f78" translate="yes" xml:space="preserve">
          <source>Here is what happens if you call &lt;code&gt;read-event&lt;/code&gt; and then press the right-arrow function key:</source>
          <target state="translated">如果您调用 &lt;code&gt;read-event&lt;/code&gt; 然后按右箭头功能键，将发生以下情况：</target>
        </trans-unit>
        <trans-unit id="bbc82272ce24b80fbfe653ba2048f726ecc3a213" translate="yes" xml:space="preserve">
          <source>Here is what it does:</source>
          <target state="translated">下面是它的作用。</target>
        </trans-unit>
        <trans-unit id="d8a64dd987725c95c697cdc701e2cf346b5d21a1" translate="yes" xml:space="preserve">
          <source>Here is what the elements do:</source>
          <target state="translated">下面是这些元素的作用。</target>
        </trans-unit>
        <trans-unit id="92381fa1dee4b9ab71de83aa818691da5023b408" translate="yes" xml:space="preserve">
          <source>Here is what the elements in a format definition mean:</source>
          <target state="translated">下面是格式定义中元素的含义。</target>
        </trans-unit>
        <trans-unit id="7316f9a5d190d55fb62de679758bd848f2561f53" translate="yes" xml:space="preserve">
          <source>Here is what the elements mean:</source>
          <target state="translated">下面是这些元素的含义。</target>
        </trans-unit>
        <trans-unit id="44f6b6d7bc6b1056cbce48daac68b7c3fd953483" translate="yes" xml:space="preserve">
          <source>Here is what you would see upon evaluating &lt;code&gt;(suspend-emacs &quot;pwd&quot;)&lt;/code&gt;:</source>
          <target state="translated">这是您在评估时会看到的内容 &lt;code&gt;(suspend-emacs &quot;pwd&quot;)&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="b71b9ff4a43b85addd63fd704cc696b06d2b86ea" translate="yes" xml:space="preserve">
          <source>Here we assume that the environment variable &lt;code&gt;HOME&lt;/code&gt;, which holds the user&amp;rsquo;s home directory, has value &amp;lsquo;</source>
          <target state="translated">在这里，我们假设保存用户主目录的环境变量 &lt;code&gt;HOME&lt;/code&gt; 的值为'</target>
        </trans-unit>
        <trans-unit id="078f0f8281f11549a79c2080907286c26c800bd1" translate="yes" xml:space="preserve">
          <source>Here we describe functions that test for equality between two objects. Other functions test equality of contents between objects of specific types, e.g., strings. For these predicates, see the appropriate chapter describing the data type.</source>
          <target state="translated">这里我们描述的是测试两个对象之间的平等性的函数。其他函数则是测试特定类型的对象(如字符串)之间内容的平等性。关于这些谓词,请参阅描述数据类型的相应章节。</target>
        </trans-unit>
        <trans-unit id="15bcd4993d3497b5f327778b30c758aee49bf596" translate="yes" xml:space="preserve">
          <source>Here we describe in full detail the function &lt;code&gt;debug&lt;/code&gt; that is used to invoke the debugger.</source>
          <target state="translated">在这里，我们详细描述了用于调用调试器的功能 &lt;code&gt;debug&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="446f009f2318dc525b4b61051ba41b2877f17238" translate="yes" xml:space="preserve">
          <source>Here we describe the functions for creating keymaps.</source>
          <target state="translated">这里我们介绍一下创建键图的功能。</target>
        </trans-unit>
        <trans-unit id="6dec84dad4da4a5ee7664542c17eeb4ff6f81103" translate="yes" xml:space="preserve">
          <source>Here we list the variables that hold the abbrev tables for the preloaded major modes of Emacs.</source>
          <target state="translated">这里我们列出了存放Emacs预装的主要模式的缩写表的变量。</target>
        </trans-unit>
        <trans-unit id="01f8e72f46daa28c926074e72dff286c0b0dfec0" translate="yes" xml:space="preserve">
          <source>Here we read from the contents of a string:</source>
          <target state="translated">这里我们从一个字符串的内容中读取。</target>
        </trans-unit>
        <trans-unit id="28af53b18c8716f35bf567ed69cee7a4383d37ed" translate="yes" xml:space="preserve">
          <source>Here we regard &lt;code&gt;red&lt;/code&gt; as the value associated with &lt;code&gt;rose&lt;/code&gt;. One advantage of this kind of alist is that you can store other related information&amp;mdash;even a list of other items&amp;mdash;in the &lt;small&gt;CDR&lt;/small&gt; of the &lt;small&gt;CDR&lt;/small&gt;. One disadvantage is that you cannot use &lt;code&gt;rassq&lt;/code&gt; (see below) to find the element containing a given value. When neither of these considerations is important, the choice is a matter of taste, as long as you are consistent about it for any given alist.</source>
          <target state="translated">在这里，我们将 &lt;code&gt;red&lt;/code&gt; 视为与 &lt;code&gt;rose&lt;/code&gt; 关联的值。这种清单的一个优点是，您可以在&lt;small&gt;CDR&lt;/small&gt;的&lt;small&gt;CDR中&lt;/small&gt;存储其他相关信息（甚至是其他项的列表）。一个缺点是您不能使用 &lt;code&gt;rassq&lt;/code&gt; （请参见下文）查找包含给定值的元素。当这两个因素都不重要时，选择就取决于口味，只要您对任何给定列表保持一致即可。</target>
        </trans-unit>
        <trans-unit id="dd7973c64daa73f9bd93caa3101082dbba8fc7d2" translate="yes" xml:space="preserve">
          <source>Here we show the use of vectors and strings as arguments to &lt;code&gt;append&lt;/code&gt;:</source>
          <target state="translated">在这里，我们展示了使用向量和字符串作为 &lt;code&gt;append&lt;/code&gt; 参数：</target>
        </trans-unit>
        <trans-unit id="194444ef1d6702d0caa4d985ff8a0038869cf567" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a complete example that creates and inserts an image with a circle:</source>
          <target state="translated">这是一个完整的示例，该示例创建并插入带圆圈的图像：</target>
        </trans-unit>
        <trans-unit id="e41a119faaee67049f9d292edabb3a05ff9ea822" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a list of a few terminal parameters that have a special meaning:</source>
          <target state="translated">这是一些具有特殊含义的终端参数的列表：</target>
        </trans-unit>
        <trans-unit id="8ebe199680feee9aa28292ee6abbd78e4e187f7c" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a scenario showing how to use &lt;code&gt;add-to-list&lt;/code&gt;:</source>
          <target state="translated">这是显示如何使用 &lt;code&gt;add-to-list&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="d5f18ca01e7c7012d44a2db77f434a51fe310f12" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a scenario showing how to use &lt;code&gt;add-to-ordered-list&lt;/code&gt;:</source>
          <target state="translated">这是显示如何使用 &lt;code&gt;add-to-ordered-list&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c687d4efe39bb50c5bd3d2e5c5a8f4c6d8712516" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a table of the possible elements of a specification list, with their meanings (see &lt;a href=&quot;specification-examples#Specification-Examples&quot;&gt;Specification Examples&lt;/a&gt;, for the referenced examples):</source>
          <target state="translated">下表列出了规范列表中可能包含的元素及其含义（有关参考示例，请参见&amp;ldquo;&lt;a href=&quot;specification-examples#Specification-Examples&quot;&gt;规范&lt;/a&gt;示例&amp;rdquo;）：</target>
        </trans-unit>
        <trans-unit id="1dfd553b4b856d959b4aa4b7aec56cb9b738cafb" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an equivalent definition simplified through use of backquote:</source>
          <target state="translated">这是通过使用反引号简化的等效定义：</target>
        </trans-unit>
        <trans-unit id="03294699440d63c624892ed37549524f6c40bc39" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an equivalent way to write it:</source>
          <target state="translated">这是一种等效的编写方式：</target>
        </trans-unit>
        <trans-unit id="7d19e01d3afa0c5abe9ee03dedb7c89cfa6e2dd8" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of a byte-code function object, in printed representation. It is the definition of the command &lt;code&gt;backward-sexp&lt;/code&gt;.</source>
          <target state="translated">这是打印形式的字节码函数对象的示例。它是命令 &lt;code&gt;backward-sexp&lt;/code&gt; 的定义。</target>
        </trans-unit>
        <trans-unit id="0cae75adf99d8d8fa92a9bfb2fe27353aba95dce" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of defining a new category for characters that have strong right-to-left directionality (see &lt;a href=&quot;bidirectional-display#Bidirectional-Display&quot;&gt;Bidirectional Display&lt;/a&gt;) and using it in a special category table. To obtain the information about the directionality of characters, the example code uses the &amp;lsquo;</source>
          <target state="translated">这是为具有强烈的左右方向性的字符定义新类别的示例（请参见&lt;a href=&quot;bidirectional-display#Bidirectional-Display&quot;&gt;Bidirectional Display&lt;/a&gt;），并在特殊类别表中使用它。为了获得有关字符方向性的信息，示例代码使用了&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="e30905e3f10c47003f204da0e5fce1266ba4d62b" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of setting up a menu bar item:</source>
          <target state="translated">这是设置菜单栏项的示例：</target>
        </trans-unit>
        <trans-unit id="d2470c6344f893ee78e988bf79737a8e708e2080" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of the data produced by this function on a 2-monitor display:</source>
          <target state="translated">这是此功能在2个显示器上显示的数据示例：</target>
        </trans-unit>
        <trans-unit id="6aa1e7a94e70d3153e4cd2549894eae7faf1eb5b" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of using &lt;code&gt;completing-read&lt;/code&gt;:</source>
          <target state="translated">这是使用 &lt;code&gt;completing-read&lt;/code&gt; 的示例：</target>
        </trans-unit>
        <trans-unit id="ad175307c534899ae290bc148ed7a2ae41b2205b" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of using &lt;code&gt;define-inline&lt;/code&gt;:</source>
          <target state="translated">这是使用 &lt;code&gt;define-inline&lt;/code&gt; 的示例：</target>
        </trans-unit>
        <trans-unit id="2a2fb1bf8d9fa38adc8239edf8bef43ad67ad912" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of using &lt;code&gt;shell-quote-argument&lt;/code&gt; to construct a shell command:</source>
          <target state="translated">这是使用 &lt;code&gt;shell-quote-argument&lt;/code&gt; 构造shell命令的示例：</target>
        </trans-unit>
        <trans-unit id="921b0bd8c88ffd94a6bd112934274daa34d38c49" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of using the &lt;code&gt;keyboard-translate-table&lt;/code&gt; to make</source>
          <target state="translated">这是使用 &lt;code&gt;keyboard-translate-table&lt;/code&gt; 制作的示例</target>
        </trans-unit>
        <trans-unit id="45081af269ab136cfd20f4ef3f527efc3e8110b7" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of what &lt;em&gt;not&lt;/em&gt; to do:</source>
          <target state="translated">这是&lt;em&gt;不&lt;/em&gt;执行操作的示例：</target>
        </trans-unit>
        <trans-unit id="b965366404937ad4f05104afb1af9f02483b582a" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example that adds a function to a mode hook to turn on Auto Fill mode when in Lisp Interaction mode:</source>
          <target state="translated">这是一个在模式挂钩中添加功能以在Lisp交互模式下打开&amp;ldquo;自动填充&amp;rdquo;模式的示例：</target>
        </trans-unit>
        <trans-unit id="36c163ed03ed7f3d63180c8cc7ad38ead8f3f0ce" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example that highlights some advantages &lt;code&gt;pcase&lt;/code&gt; has over &lt;code&gt;cl-case&lt;/code&gt; (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/cl/Conditionals.html#Conditionals&quot;&gt;Conditionals&lt;/a&gt; in</source>
          <target state="translated">这里有一个例子，突出一些优势 &lt;code&gt;pcase&lt;/code&gt; 拥有超过 &lt;code&gt;cl-case&lt;/code&gt; （见&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/cl/Conditionals.html#Conditionals&quot;&gt;条件语句&lt;/a&gt;中</target>
        </trans-unit>
        <trans-unit id="4345897b100740a6cf51c97f93a6eb09ebfc7ffe" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example to illustrate use of this function:</source>
          <target state="translated">这是一个示例说明此功能的用法：</target>
        </trans-unit>
        <trans-unit id="1650f93164a148f60b8bb84a30e5493101892e4d" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example using boxes to illustrate dotted pair notation. This example shows the pair &lt;code&gt;(rose . violet)&lt;/code&gt;:</source>
          <target state="translated">这是一个使用方框说明点对符号的示例。此示例显示了一对 &lt;code&gt;(rose . violet)&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="3dcb94616c206b262c069981593dfcc791d7727c" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example which assumes Font-Lock mode is not enabled:</source>
          <target state="translated">这是一个示例，假定未启用字体锁定模式：</target>
        </trans-unit>
        <trans-unit id="f925021c85579d991c73fc2d9a75bae119de77ab" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s how to avoid the problem, by examining point and the mark after reading the keyboard input:</source>
          <target state="translated">通过阅读键盘输入后检查点和​​标记来避免出现此问题的方法：</target>
        </trans-unit>
        <trans-unit id="fda598e1b620ab50332164a5479782347c875fda" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s how to do partial application in Emacs Lisp:</source>
          <target state="translated">这是在Emacs Lisp中进行部分应用的方法：</target>
        </trans-unit>
        <trans-unit id="1e0f1fa26dca63562a6e9cb1c9e8f6bd1f3fed79" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s how to examine the data in an X-style window geometry specification:</source>
          <target state="translated">这是检查X样式窗口几何规范中数据的方法：</target>
        </trans-unit>
        <trans-unit id="3ecfa2e9b8ba9fe6d6aaa14266c9febdc60db3e6" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s how we could define the built-in function &lt;code&gt;1+&lt;/code&gt;, if it didn&amp;rsquo;t exist, using &lt;code&gt;apply-partially&lt;/code&gt; and &lt;code&gt;+&lt;/code&gt;, another built-in function:</source>
          <target state="translated">如果不使用内置函数 &lt;code&gt;1+&lt;/code&gt; ，则可以使用 &lt;code&gt;apply-partially&lt;/code&gt; 和 &lt;code&gt;+&lt;/code&gt; 定义另一个内置函数，这是下面的方法：</target>
        </trans-unit>
        <trans-unit id="2c62d8149cf85b2bfd8ccdd1e986aa2df7982fd5" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s the example at the beginning of this subsection rewritten using &lt;code&gt;ignore-errors&lt;/code&gt;:</source>
          <target state="translated">这是本小节开始处使用 &lt;code&gt;ignore-errors&lt;/code&gt; 重写的示例：</target>
        </trans-unit>
        <trans-unit id="625001b287a97f0983de9ef13b2be8d872058fdb" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s what that produces in</source>
          <target state="translated">这就是产生的</target>
        </trans-unit>
        <trans-unit id="e14ff05fa1690931ca98b57a70fa39bd10068642" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;edit&lt;/code&gt; is the symbol produced by a fake function key, it is used by the global map for the &amp;lsquo;</source>
          <target state="translated">在这里， &lt;code&gt;edit&lt;/code&gt; 是由伪造的功能键产生的符号，全局映射将其用于&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="2959d44f3e9ba30ae049fe04f7150eda605be7b8" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;his-tracing-function&lt;/code&gt; is called instead of the original function and receives the original function (additionally to that function&amp;rsquo;s arguments) as argument, so it can call it if and when it needs to. When you&amp;rsquo;re tired of seeing this output, you can revert to the untraced behavior with:</source>
          <target state="translated">在这里， &lt;code&gt;his-tracing-function&lt;/code&gt; 代替了原始函数被调用，并接收原始函数（作为该函数的参数的附加参数）作为参数，因此它可以在需要时和需要时调用它。当您厌倦了看到此输出时，可以使用以下方法恢复为未跟踪的行为：</target>
        </trans-unit>
        <trans-unit id="b65cde67e2f5b727a21f69be6b3ed1b78a713cfe" translate="yes" xml:space="preserve">
          <source>Here, &lt;var&gt;anchored-matcher&lt;/var&gt;, like &lt;var&gt;matcher&lt;/var&gt;, is either a regular expression or a function. After a match of &lt;var&gt;matcher&lt;/var&gt; is found, point is at the end of the match. Now, Font Lock evaluates the form &lt;var&gt;pre-form&lt;/var&gt;. Then it searches for matches of &lt;var&gt;anchored-matcher&lt;/var&gt; and uses &lt;var&gt;subexp-highlighters&lt;/var&gt; to highlight these. A &lt;var&gt;subexp-highlighter&lt;/var&gt; is as described above. Finally, Font Lock evaluates &lt;var&gt;post-form&lt;/var&gt;.</source>
          <target state="translated">在这里，类似于 &lt;var&gt;matcher&lt;/var&gt; 的 &lt;var&gt;anchored-matcher&lt;/var&gt; 是一个正则表达式或一个函数。找到匹配 &lt;var&gt;matcher&lt;/var&gt; 项后，点位于匹配项的末尾。现在，Font Lock将评估表单 &lt;var&gt;pre-form&lt;/var&gt; 。然后，它搜索 &lt;var&gt;anchored-matcher&lt;/var&gt; 并使用 &lt;var&gt;subexp-highlighters&lt;/var&gt; 突出显示这些匹配项。子 &lt;var&gt;subexp-highlighter&lt;/var&gt; 如上所述。最后，字体锁定将评估 &lt;var&gt;post-form&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="1576a01f0244fcfc5fc4030522d06e88d083cae4" translate="yes" xml:space="preserve">
          <source>Here, &lt;var&gt;find-in&lt;/var&gt; and &lt;var&gt;find-in-any&lt;/var&gt; are pseudo functions that search in one keymap and in an alist of keymaps, respectively. Note that the &lt;code&gt;set-transient-map&lt;/code&gt; function works by setting &lt;code&gt;overriding-terminal-local-map&lt;/code&gt; (see &lt;a href=&quot;controlling-active-maps#Controlling-Active-Maps&quot;&gt;Controlling Active Maps&lt;/a&gt;).</source>
          <target state="translated">在这里， &lt;var&gt;find-in&lt;/var&gt; 和 &lt;var&gt;find-in-any&lt;/var&gt; 是伪函数，它们分别在一个键映射和一个键映射列表中进行搜索。请注意， &lt;code&gt;set-transient-map&lt;/code&gt; 函数通过设置 &lt;code&gt;overriding-terminal-local-map&lt;/code&gt; 起作用（请参见&lt;a href=&quot;controlling-active-maps#Controlling-Active-Maps&quot;&gt;控制活动地图&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="39352705efc6ada42c53b3d022d40ec648bf917c" translate="yes" xml:space="preserve">
          <source>Here, &lt;var&gt;item-name&lt;/var&gt; is an expression which evaluates to the menu item string. Thus, the string need not be a constant.</source>
          <target state="translated">这里， &lt;var&gt;item-name&lt;/var&gt; 是一个表达式，其结果为菜单项字符串。因此，字符串不必是常量。</target>
        </trans-unit>
        <trans-unit id="5f9ed2116320470859fcdd5b982b49e03881c791" translate="yes" xml:space="preserve">
          <source>Here, &lt;var&gt;pre-form&lt;/var&gt; and &lt;var&gt;post-form&lt;/var&gt; are &lt;code&gt;nil&lt;/code&gt;. Therefore searching for &amp;lsquo;</source>
          <target state="translated">在此， &lt;var&gt;pre-form&lt;/var&gt; 和 &lt;var&gt;post-form&lt;/var&gt; 均为 &lt;code&gt;nil&lt;/code&gt; 。因此搜索&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="c749009a00bb2e2a9af48b6aa791e75a6049b94a" translate="yes" xml:space="preserve">
          <source>Here, &lt;var&gt;score&lt;/var&gt; is an integer measure of how important the symbol seems to be as a match. Each of the remaining elements is a documentation string, or &lt;code&gt;nil&lt;/code&gt;, for &lt;var&gt;symbol&lt;/var&gt; as a function, variable, etc.</source>
          <target state="translated">在这里， &lt;var&gt;score&lt;/var&gt; 是一个整数度量，用于衡量该符号在匹配中的重要性。其余每个元素都是一个文档字符串，或 &lt;code&gt;nil&lt;/code&gt; ，用于将 &lt;var&gt;symbol&lt;/var&gt; 作为函数，变量等。</target>
        </trans-unit>
        <trans-unit id="a301b22272d385eb41e4d01dad68cbec73bb295c" translate="yes" xml:space="preserve">
          <source>Here, &lt;var&gt;style&lt;/var&gt; is the name of the completion style (a symbol), which may be used in the &lt;code&gt;completion-styles&lt;/code&gt; variable to refer to this style; &lt;var&gt;try-completion&lt;/var&gt; is the function that does the completion; &lt;var&gt;all-completions&lt;/var&gt; is the function that lists the completions; and &lt;var&gt;doc&lt;/var&gt; is a string describing the completion style.</source>
          <target state="translated">这里， &lt;var&gt;style&lt;/var&gt; 是完成样式（符号）的名称，可以在 &lt;code&gt;completion-styles&lt;/code&gt; 变量中使用它来引用该样式； &lt;var&gt;try-completion&lt;/var&gt; 是完成功能； &lt;var&gt;all-completions&lt;/var&gt; 是列出完成情况的函数；和 &lt;var&gt;doc&lt;/var&gt; 是描述完成风格的字符串。</target>
        </trans-unit>
        <trans-unit id="e86ab2395af76a007cb1a2de0284943a6f1c7efc" translate="yes" xml:space="preserve">
          <source>Here, although</source>
          <target state="translated">在这里,虽然</target>
        </trans-unit>
        <trans-unit id="498e1fa7d5d722fc7bbdbd9b2ee1d0478902b16c" translate="yes" xml:space="preserve">
          <source>Here, if &lt;var&gt;menu-title&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it says that the matches for this element should go in a submenu of the buffer index; &lt;var&gt;menu-title&lt;/var&gt; itself specifies the name for the submenu. If &lt;var&gt;menu-title&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the matches for this element go directly in the top level of the buffer index.</source>
          <target state="translated">在这里，如果 &lt;var&gt;menu-title&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则表示该元素的匹配项应进入缓冲区索引的子菜单； &lt;var&gt;menu-title&lt;/var&gt; 本身指定了子菜单的名称。如果 &lt;var&gt;menu-title&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则此元素的匹配项直接进入缓冲区索引的顶层。</target>
        </trans-unit>
        <trans-unit id="f77613f257d815d6ac563a262bfa29d3c6bfa924" translate="yes" xml:space="preserve">
          <source>Here, the purpose is to inform the user that editing the buffer with the aim of saving it in the file may be futile or undesirable. The user who wants to change the buffer text despite this can do so after clearing the read-only flag with</source>
          <target state="translated">这里的目的是告诉用户,编辑缓冲区并将其保存在文件中可能是徒劳的,或者是不可取的。如果用户想修改缓冲区的文本,可以在清除了只读标志后,用</target>
        </trans-unit>
        <trans-unit id="7b74fbd95615088e7e786de83f8c4d2bd52ba63c" translate="yes" xml:space="preserve">
          <source>Here, the variable &lt;code&gt;x&lt;/code&gt; has no global value. When it is lexically bound within a &lt;code&gt;let&lt;/code&gt; form, it can be used in the textual confines of that &lt;code&gt;let&lt;/code&gt; form. But it can &lt;em&gt;not&lt;/em&gt; be used from within a &lt;code&gt;getx&lt;/code&gt; function called from the &lt;code&gt;let&lt;/code&gt; form, since the function definition of &lt;code&gt;getx&lt;/code&gt; occurs outside the &lt;code&gt;let&lt;/code&gt; form itself.</source>
          <target state="translated">此处，变量 &lt;code&gt;x&lt;/code&gt; 没有全局值。当它以词法绑定在一个 &lt;code&gt;let&lt;/code&gt; 形式中时，可以在该 &lt;code&gt;let&lt;/code&gt; 形式的文本范围内使用。但是&lt;em&gt;不能&lt;/em&gt;在从 &lt;code&gt;let&lt;/code&gt; 表单调用的 &lt;code&gt;getx&lt;/code&gt; 函数中使用它，因为 &lt;code&gt;getx&lt;/code&gt; 的函数定义发生在 &lt;code&gt;let&lt;/code&gt; 表单本身之外。</target>
        </trans-unit>
        <trans-unit id="d62359856af6a1dd77a70afcc341f43d97d22879" translate="yes" xml:space="preserve">
          <source>Here, we bind a local variable to record the current buffer, and then &lt;code&gt;save-current-buffer&lt;/code&gt; arranges to make it current again later. Next, &lt;code&gt;set-buffer&lt;/code&gt; makes the specified buffer current, and &lt;code&gt;insert-buffer-substring&lt;/code&gt; copies the string from the original buffer to the specified (and now current) buffer.</source>
          <target state="translated">在这里，我们绑定一个局部变量来记录当前缓冲区，然后通过 &lt;code&gt;save-current-buffer&lt;/code&gt; 安排使其在以后再次变为当前状态。接下来， &lt;code&gt;set-buffer&lt;/code&gt; 使指定的缓冲区成为当前缓冲区， &lt;code&gt;insert-buffer-substring&lt;/code&gt; 将字符串从原始缓冲区复制到指定（现在为当前​​）缓冲区。</target>
        </trans-unit>
        <trans-unit id="f418719441cdc28217531e3aa11a5ceffed76b22" translate="yes" xml:space="preserve">
          <source>Here, we list the symbol properties which are used for special purposes in Emacs. In the following table, whenever we say &amp;ldquo;the named function&amp;rdquo;, that means the function whose name is the relevant symbol; similarly for &amp;ldquo;the named variable&amp;rdquo; etc.</source>
          <target state="translated">在这里，我们列出了Emacs中用于特殊目的的符号属性。在下表中，每当我们说&amp;ldquo;命名函数&amp;rdquo;时，即表示名称为相关符号的函数；类似地，&amp;ldquo;命名变量&amp;rdquo;等</target>
        </trans-unit>
        <trans-unit id="5dff4be05031090362214882b6beb05668c3ef6c" translate="yes" xml:space="preserve">
          <source>Hewlett-Packard HPUX operating system.</source>
          <target state="translated">Hewlett-Packard HPUX操作系统。</target>
        </trans-unit>
        <trans-unit id="52044fc2617df4e7777ebd0eda1460a6cada2876" translate="yes" xml:space="preserve">
          <source>Hiding part of the buffer text (the old way).</source>
          <target state="translated">隐藏部分缓冲区文字(老办法)。</target>
        </trans-unit>
        <trans-unit id="a20c39452d5f8ac23e8e4ebbe809794cc855efe4" translate="yes" xml:space="preserve">
          <source>Hiding part of the buffer text.</source>
          <target state="translated">隐藏部分缓冲区文字。</target>
        </trans-unit>
        <trans-unit id="da9e6337871a585fb43de87ba2662d40c9b7c264" translate="yes" xml:space="preserve">
          <source>High-Level Completion Functions</source>
          <target state="translated">高级完成功能</target>
        </trans-unit>
        <trans-unit id="d500a7d2fe9db57d85c473ab68a4782cd14bfc53" translate="yes" xml:space="preserve">
          <source>Higher-level functions for switching to a buffer.</source>
          <target state="translated">用于切换到缓冲区的上层功能。</target>
        </trans-unit>
        <trans-unit id="87d9a466b82e403bc424a90dc19bd2b45a7832df" translate="yes" xml:space="preserve">
          <source>Highlight all matches for &lt;var&gt;regexp&lt;/var&gt; using &lt;code&gt;font-lock-keyword-face&lt;/code&gt;. For example,</source>
          <target state="translated">使用 &lt;code&gt;font-lock-keyword-face&lt;/code&gt; 突出显示 &lt;var&gt;regexp&lt;/var&gt; 的所有匹配项。例如，</target>
        </trans-unit>
        <trans-unit id="17fd9c1b95a3a0dbac118cae13033f5377a3fb91" translate="yes" xml:space="preserve">
          <source>Hook for automatic face assignment.</source>
          <target state="translated">用于自动分配面的钩子。</target>
        </trans-unit>
        <trans-unit id="a2e37946619969b6a5169633d442076a66d5c852" translate="yes" xml:space="preserve">
          <source>Hook run after a frame&amp;rsquo;s font changes.</source>
          <target state="translated">框架字体更改后，挂钩运行。</target>
        </trans-unit>
        <trans-unit id="79eecf90a76c504f312ce3ece16f14a234473873" translate="yes" xml:space="preserve">
          <source>Hook run in each window just before redisplaying it. See &lt;a href=&quot;forcing-redisplay#Forcing-Redisplay&quot;&gt;Forcing Redisplay&lt;/a&gt;.</source>
          <target state="translated">挂钩在每个窗口中运行，然后重新显示。请参阅&lt;a href=&quot;forcing-redisplay#Forcing-Redisplay&quot;&gt;强制重新显示&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9c4b657fa9b71c1e2fdbbf51aa1e7279f5b1b593" translate="yes" xml:space="preserve">
          <source>Hook run when a prefix command needs to preserve the prefix by passing the current prefix command state to the next command. For example,</source>
          <target state="translated">当前缀命令需要通过将当前前缀命令状态传递给下一条命令来保存前缀时,运行该钩子。例如</target>
        </trans-unit>
        <trans-unit id="af5e168a7b1a893f006931ba2a264880902860cc" translate="yes" xml:space="preserve">
          <source>Hook run when about to switch windows with a mouse command.</source>
          <target state="translated">钩子运行时,即将用鼠标命令切换窗口。</target>
        </trans-unit>
        <trans-unit id="599a026ddc806032d8b0cad13cf7114d9b52a3d0" translate="yes" xml:space="preserve">
          <source>Hook run when the buffer list changes (see &lt;a href=&quot;buffer-list#Buffer-List&quot;&gt;Buffer List&lt;/a&gt;).</source>
          <target state="translated">缓冲区列表更改时进行钩子运行（请参阅&lt;a href=&quot;buffer-list#Buffer-List&quot;&gt;缓冲区列表&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="4bd8f3f03a576b2088bd73a2339d07fca1de805d" translate="yes" xml:space="preserve">
          <source>Hooks</source>
          <target state="translated">Hooks</target>
        </trans-unit>
        <trans-unit id="905236119d4bae6aa580384bd76e41bfcad6fedc" translate="yes" xml:space="preserve">
          <source>Hooks for Loading</source>
          <target state="translated">用于装载的钩子</target>
        </trans-unit>
        <trans-unit id="55fa86096d9e891408187fe0c6edb599398bae91" translate="yes" xml:space="preserve">
          <source>Hooks for Window Scrolling and Changes</source>
          <target state="translated">窗口滚动和变化的钩子</target>
        </trans-unit>
        <trans-unit id="36e1091503d42fff1551e9d69a988a817d72e698" translate="yes" xml:space="preserve">
          <source>Hooks for scrolling, window size changes, redisplay going past a certain point, or window configuration changes.</source>
          <target state="translated">钩子用于滚动、改变窗口大小、重新显示经过某点或改变窗口配置。</target>
        </trans-unit>
        <trans-unit id="cea58c21b18c52dadef4333f88314d5eabce3408" translate="yes" xml:space="preserve">
          <source>Hooks run at the end of major mode functions.</source>
          <target state="translated">钩子运行在主要模式功能的末端。</target>
        </trans-unit>
        <trans-unit id="437d6443c80ea6fdc9d224a4b93f14952517f8de" translate="yes" xml:space="preserve">
          <source>Horizontal Scrolling</source>
          <target state="translated">水平滚动</target>
        </trans-unit>
        <trans-unit id="5ae2a2ea9e6b8c19b46fe640a33cf043697ad15b" translate="yes" xml:space="preserve">
          <source>Horizontal scroll bars are not available on all platforms. The function &lt;code&gt;horizontal-scroll-bars-available-p&lt;/code&gt; which takes no argument returns non-&lt;code&gt;nil&lt;/code&gt; if they are available on your system.</source>
          <target state="translated">水平滚动条并非在所有平台上都可用。如果不带任何参数的函数 &lt;code&gt;horizontal-scroll-bars-available-p&lt;/code&gt; 在系统上可用时返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0c81abc87bdc5538df96766fcae6d44438449d0a" translate="yes" xml:space="preserve">
          <source>How</source>
          <target state="translated">How</target>
        </trans-unit>
        <trans-unit id="ca55c03f6a42b83fa9eaededf809b17e04172808" translate="yes" xml:space="preserve">
          <source>How Abbrev mode works, and its data structures.</source>
          <target state="translated">Abbrev模式的工作原理及其数据结构。</target>
        </trans-unit>
        <trans-unit id="424728aefa8b5c3e18cf4f1a3fcfc57fb5c940c0" translate="yes" xml:space="preserve">
          <source>How C integer types are used inside Emacs.</source>
          <target state="translated">在Emacs内部如何使用C整型。</target>
        </trans-unit>
        <trans-unit id="73455db4440abe5141ca24f22ed0359d457dd6ee" translate="yes" xml:space="preserve">
          <source>How Emacs Chooses a Major Mode</source>
          <target state="translated">Emacs如何选择主要模式</target>
        </trans-unit>
        <trans-unit id="c64e5a470e25ae36e8718f9edaeda563ccee8bf6" translate="yes" xml:space="preserve">
          <source>How Emacs Processes Errors</source>
          <target state="translated">Emacs如何处理错误</target>
        </trans-unit>
        <trans-unit id="2d8f941da2deb1b9d9faa33dcd7fe9b7f4068dd7" translate="yes" xml:space="preserve">
          <source>How Emacs chooses the major mode automatically.</source>
          <target state="translated">Emacs如何自动选择主要模式。</target>
        </trans-unit>
        <trans-unit id="c8f98665afb6d797a12b846d875829ff07a98414" translate="yes" xml:space="preserve">
          <source>How Emacs combines the faces specified for a character.</source>
          <target state="translated">Emacs如何结合为字符指定的面孔。</target>
        </trans-unit>
        <trans-unit id="7c1329a8372ebc6bb20659d406cae8a1ccf559e7" translate="yes" xml:space="preserve">
          <source>How Emacs displays individual characters.</source>
          <target state="translated">Emacs如何显示单个字符。</target>
        </trans-unit>
        <trans-unit id="d6a4957c45721935c4eacc744c13d6d3849b6983" translate="yes" xml:space="preserve">
          <source>How Emacs makes backup files, and when.</source>
          <target state="translated">Emacs如何制作备份文件,以及何时制作。</target>
        </trans-unit>
        <trans-unit id="7e37f8cb70c0d5a907f84ce6fe7fc0c44dac0b6c" translate="yes" xml:space="preserve">
          <source>How Emacs modifies events as they are read.</source>
          <target state="translated">Emacs如何在读取事件时对其进行修改。</target>
        </trans-unit>
        <trans-unit id="a41da7339116d96fc155f50d0e55588c91dba4cd" translate="yes" xml:space="preserve">
          <source>How Emacs represents a syntactic state.</source>
          <target state="translated">Emacs如何表示一种语法状态。</target>
        </trans-unit>
        <trans-unit id="bfd386c2ea524e6fd76b8d59c4329236be84642e" translate="yes" xml:space="preserve">
          <source>How Emacs represents text.</source>
          <target state="translated">Emacs如何表示文本。</target>
        </trans-unit>
        <trans-unit id="88b2901cabaa46b34ea7ac49c84333db845b2798" translate="yes" xml:space="preserve">
          <source>How Emacs searches the active keymaps for a key binding.</source>
          <target state="translated">Emacs如何在活动的键图中搜索键绑定。</target>
        </trans-unit>
        <trans-unit id="e0642c3a194855a09b27e1f8072a0b89ad321288" translate="yes" xml:space="preserve">
          <source>How Emacs selects a display table to use.</source>
          <target state="translated">Emacs如何选择使用显示表。</target>
        </trans-unit>
        <trans-unit id="039c9a91251d2f4de444f4c547dfd8099e3ff514" translate="yes" xml:space="preserve">
          <source>How Emacs shows the matching open parenthesis.</source>
          <target state="translated">Emacs如何显示匹配的开括号。</target>
        </trans-unit>
        <trans-unit id="380e0e65ee7c9b33a3a9973573f7a481d3221798" translate="yes" xml:space="preserve">
          <source>How Lisp chooses among local and global values.</source>
          <target state="translated">Lisp如何在局部和全局价值中进行选择。</target>
        </trans-unit>
        <trans-unit id="e7c3ac1ce3c120c98c707e6ec97b0148965795df" translate="yes" xml:space="preserve">
          <source>How Lisp expressions are evaluated.</source>
          <target state="translated">Lisp表达式如何评价。</target>
        </trans-unit>
        <trans-unit id="54694456311324833b0d2778ba9d175e3834d16e" translate="yes" xml:space="preserve">
          <source>How Lisp objects are represented as text.</source>
          <target state="translated">如何将Lisp对象表现为文本。</target>
        </trans-unit>
        <trans-unit id="1276ad6fec455c6f792b7076f5b144eb2a972ea4" translate="yes" xml:space="preserve">
          <source>How Lisp programs can access doc strings.</source>
          <target state="translated">Lisp程序如何访问doc字符串。</target>
        </trans-unit>
        <trans-unit id="875d90ae56d0cb6fff586ac27659c7b7c961d464" translate="yes" xml:space="preserve">
          <source>How Lisp programs that produce the buffer contents can also specify how to fontify it.</source>
          <target state="translated">产生缓冲区内容的Lisp程序如何也可以指定如何将其字体化。</target>
        </trans-unit>
        <trans-unit id="76d1158f6da7afb3897eae1012abc518825bfab5" translate="yes" xml:space="preserve">
          <source>How Many Times is the Macro Expanded?</source>
          <target state="translated">宏观扩容多少倍?</target>
        </trans-unit>
        <trans-unit id="46dd5eecd75a00aa746a1e82f857d1771d78c53c" translate="yes" xml:space="preserve">
          <source>How Programs Do Loading</source>
          <target state="translated">程序如何加载</target>
        </trans-unit>
        <trans-unit id="20e1cad0da33d268f73c19c14c87622dda733544" translate="yes" xml:space="preserve">
          <source>How a frame finds the minibuffer to use.</source>
          <target state="translated">一个框架如何找到要使用的迷你缓冲区。</target>
        </trans-unit>
        <trans-unit id="8329c5c2849e79168b3c04e28e1760e2e56d2704" translate="yes" xml:space="preserve">
          <source>How a minor mode can have its own keymap.</source>
          <target state="translated">一个小模式如何能有自己的键图。</target>
        </trans-unit>
        <trans-unit id="8cb4537d8d445cf7b7e956e26b0afad50374ce03" translate="yes" xml:space="preserve">
          <source>How an overlay is represented.</source>
          <target state="translated">叠加是如何表示的。</target>
        </trans-unit>
        <trans-unit id="e006e40be02272210385671c86e1cabb2d191298" translate="yes" xml:space="preserve">
          <source>How auto-fill mode is implemented to break lines.</source>
          <target state="translated">自动填充模式如何实现断行。</target>
        </trans-unit>
        <trans-unit id="9012bdc0553f929b4a96e7a3a221a12b3f2f2d4a" translate="yes" xml:space="preserve">
          <source>How auto-save files are made; how their names are chosen.</source>
          <target state="translated">自动保存文件如何制作;文件名如何选择。</target>
        </trans-unit>
        <trans-unit id="19b47519682252ee1fe1c0da369d9c625bca873d" translate="yes" xml:space="preserve">
          <source>How backup file names are computed; customization.</source>
          <target state="translated">备份文件名的计算方式;自定义。</target>
        </trans-unit>
        <trans-unit id="0c91a3d9bd17b18ee7ce9c669f1504e5e417b662" translate="yes" xml:space="preserve">
          <source>How backup files are made; how their names are chosen.</source>
          <target state="translated">如何制作备份文件;如何选择文件名称。</target>
        </trans-unit>
        <trans-unit id="f06b6f2af20599395965a809e336fb9ea24a0277" translate="yes" xml:space="preserve">
          <source>How characters are classified.</source>
          <target state="translated">人物如何分类。</target>
        </trans-unit>
        <trans-unit id="911878bf88471d8466c56679c11480d4f05c4a1a" translate="yes" xml:space="preserve">
          <source>How command-line arguments are processed, and how you can customize them.</source>
          <target state="translated">如何处理命令行参数,以及如何自定义参数。</target>
        </trans-unit>
        <trans-unit id="c3b53a662da8d449648c34d2aa4c948902559be4" translate="yes" xml:space="preserve">
          <source>How errors are classified for trapping them.</source>
          <target state="translated">如何对错误进行分类,以便捕捉错误。</target>
        </trans-unit>
        <trans-unit id="0a38f032b696d076d8b68a655c1a25ca7eebbc45" translate="yes" xml:space="preserve">
          <source>How errors are signaled and handled.</source>
          <target state="translated">如何发出信号和处理错误。</target>
        </trans-unit>
        <trans-unit id="cce731acfa687f07c8f4db919d457062c98f66d6" translate="yes" xml:space="preserve">
          <source>How exiting works (permanent or temporary).</source>
          <target state="translated">如何退出(永久或临时);</target>
        </trans-unit>
        <trans-unit id="3dfd1c954b5570fb6538a7aaaf5dad3ed3d3322f" translate="yes" xml:space="preserve">
          <source>How file I/O functions handle coding systems.</source>
          <target state="translated">文件I/O函数如何处理编码系统。</target>
        </trans-unit>
        <trans-unit id="3eafa734a3277fc013d15120983c57ea33996f00" translate="yes" xml:space="preserve">
          <source>How functions are expressed as Lisp objects.</source>
          <target state="translated">如何将函数表达为Lisp对象。</target>
        </trans-unit>
        <trans-unit id="a9460171ea1f14a9ebd08bfd9f7738dbf76717b4" translate="yes" xml:space="preserve">
          <source>How glyphless characters are drawn.</source>
          <target state="translated">无字形字符如何画。</target>
        </trans-unit>
        <trans-unit id="d72eec1426b7faeaed9323930c07dee408af2e79" translate="yes" xml:space="preserve">
          <source>How inserted text gets properties from neighboring text.</source>
          <target state="translated">插入的文本如何从邻近的文本中获取属性。</target>
        </trans-unit>
        <trans-unit id="3f4015407a40e50be2cde63f2794a460c0d48c1e" translate="yes" xml:space="preserve">
          <source>How keyboard macros are implemented.</source>
          <target state="translated">键盘宏是如何实现的。</target>
        </trans-unit>
        <trans-unit id="eb129e00edeb3399921850a331e8478ebceaf56a" translate="yes" xml:space="preserve">
          <source>How large displayed text is.</source>
          <target state="translated">显示的文字有多大。</target>
        </trans-unit>
        <trans-unit id="b3afbf6ff2acc03e7c81882009a449b388164513" translate="yes" xml:space="preserve">
          <source>How lists are made out of cons cells.</source>
          <target state="translated">列表是如何由弊端单元格组成的。</target>
        </trans-unit>
        <trans-unit id="83a2051f17a03d488ddb9c4789bb2d3e03ae3e3d" translate="yes" xml:space="preserve">
          <source>How macros are expanded by the compiler.</source>
          <target state="translated">宏如何被编译器扩展。</target>
        </trans-unit>
        <trans-unit id="0e90df76b8c9882f371d3c2ecfa0adc94105e22e" translate="yes" xml:space="preserve">
          <source>How modes can have buffer state saved between Emacs sessions.</source>
          <target state="translated">模式如何在Emacs会话之间保存缓冲区状态。</target>
        </trans-unit>
        <trans-unit id="a3b851160ca439424e212f77f2ab97ea581f8bc1" translate="yes" xml:space="preserve">
          <source>How modes can highlight text according to syntax.</source>
          <target state="translated">模式如何根据语法突出显示文本。</target>
        </trans-unit>
        <trans-unit id="ea757377c2e3eb5e61db46483b85b18f70d7e8a1" translate="yes" xml:space="preserve">
          <source>How one keymap can inherit the bindings of another keymap.</source>
          <target state="translated">一个keymap如何继承另一个keymap的绑定。</target>
        </trans-unit>
        <trans-unit id="d73ce1802c896d458f105e9764eda3a0ae17b71c" translate="yes" xml:space="preserve">
          <source>How processes and threads interact.</source>
          <target state="translated">进程和线程如何互动。</target>
        </trans-unit>
        <trans-unit id="943be7c63ffdac714498a5552a43c91fd1f31ad9" translate="yes" xml:space="preserve">
          <source>How reading an event uses the input method.</source>
          <target state="translated">读取一个事件如何使用输入法。</target>
        </trans-unit>
        <trans-unit id="85606317869c4f375cc627f820063269ee22674b" translate="yes" xml:space="preserve">
          <source>How registers are implemented. Accessing the text or position stored in a register.</source>
          <target state="translated">寄存器是如何实现的。访问存储在寄存器中的文本或位置。</target>
        </trans-unit>
        <trans-unit id="b5d083d590eb3795fd2c0494823ab6871d69743d" translate="yes" xml:space="preserve">
          <source>How such commands access the minibuffer text.</source>
          <target state="translated">这类命令如何访问minibuffer文本。</target>
        </trans-unit>
        <trans-unit id="e367d992826c4b7f32659c02c5ca7f8ca7c0a67d" translate="yes" xml:space="preserve">
          <source>How symbols are kept unique.</source>
          <target state="translated">符号如何保持唯一性。</target>
        </trans-unit>
        <trans-unit id="431acda916ce9bcc9004326cc21b8a3717115f3a" translate="yes" xml:space="preserve">
          <source>How syntax table information is stored.</source>
          <target state="translated">语法表信息的存储方式。</target>
        </trans-unit>
        <trans-unit id="315f1888746c644271380d742b7599a886f5fde3" translate="yes" xml:space="preserve">
          <source>How the command history is set up, and how accessed.</source>
          <target state="translated">命令历史记录如何设置,如何访问。</target>
        </trans-unit>
        <trans-unit id="246769fcb127a15ca0605886dbf4b03b171b6779" translate="yes" xml:space="preserve">
          <source>How the command loop handles disabled commands.</source>
          <target state="translated">命令循环如何处理禁用命令。</target>
        </trans-unit>
        <trans-unit id="5fd15974c17152aef7f997f78970a0ba8df9b1e7" translate="yes" xml:space="preserve">
          <source>How the command loop reads commands.</source>
          <target state="translated">命令循环如何读取命令。</target>
        </trans-unit>
        <trans-unit id="bf05fc1c194e6e2c2a633e008a7a6e3f6c6f496c" translate="yes" xml:space="preserve">
          <source>How the commands to set prefix args work.</source>
          <target state="translated">设置前缀args的命令如何工作。</target>
        </trans-unit>
        <trans-unit id="91b4635751cc57d63446319cd4799b8788dc6c3f" translate="yes" xml:space="preserve">
          <source>How the dumped Emacs is made.</source>
          <target state="translated">倾销的Emacs是如何制作的。</target>
        </trans-unit>
        <trans-unit id="11b61f8ba4e524da829402c71693d4881e7a0c61" translate="yes" xml:space="preserve">
          <source>How the editor command loop works, and how you can call its subroutines.</source>
          <target state="translated">编辑器命令循环如何工作,以及如何调用它的子程序。</target>
        </trans-unit>
        <trans-unit id="9698565b3002bf4e4f46750c3a685ca1337bccdf" translate="yes" xml:space="preserve">
          <source>How the mark is implemented with a marker.</source>
          <target state="translated">如何用记号器实现记号。</target>
        </trans-unit>
        <trans-unit id="2f38bd22734607fe3cae8b8392d5889c6cbc92b8" translate="yes" xml:space="preserve">
          <source>How the symbols &lt;code&gt;nil&lt;/code&gt; and &lt;code&gt;t&lt;/code&gt; are used.</source>
          <target state="translated">如何使用符号 &lt;code&gt;nil&lt;/code&gt; 和 &lt;code&gt;t&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="05b78c93f5fe9e0865913a69d7d57592c8731ce2" translate="yes" xml:space="preserve">
          <source>How the terminal-specific Lisp file is read.</source>
          <target state="translated">终端专用Lisp文件的读取方式。</target>
        </trans-unit>
        <trans-unit id="d07b14367ed4ac2515a0e599d2dbc84e143a0567" translate="yes" xml:space="preserve">
          <source>How to Signal an Error</source>
          <target state="translated">如何发出错误信号</target>
        </trans-unit>
        <trans-unit id="3a31adaf08318a4966b4b88702a5b6e5e5af51f7" translate="yes" xml:space="preserve">
          <source>How to access the region.</source>
          <target state="translated">如何进入该区域。</target>
        </trans-unit>
        <trans-unit id="25c796afcb5aaa97b3b52ecebdeff8fe97007f17" translate="yes" xml:space="preserve">
          <source>How to add new items to a menu.</source>
          <target state="translated">如何在菜单中添加新项目。</target>
        </trans-unit>
        <trans-unit id="6de44fd5549373e8e9c00b85fc04c92a03d83d38" translate="yes" xml:space="preserve">
          <source>How to add, subtract, multiply and divide.</source>
          <target state="translated">如何加、减、乘、除。</target>
        </trans-unit>
        <trans-unit id="afa7a81e4159b28e1b4b41ae69718ad986731c93" translate="yes" xml:space="preserve">
          <source>How to avoid displaying another buffer in a specific window.</source>
          <target state="translated">如何避免在特定窗口中显示另一个缓冲区。</target>
        </trans-unit>
        <trans-unit id="aa8546661ae1f57744974a6c605f0dea7a376d19" translate="yes" xml:space="preserve">
          <source>How to avoid that buffers get lost in between windows.</source>
          <target state="translated">如何避免缓冲区在窗口之间丢失。</target>
        </trans-unit>
        <trans-unit id="95b188b2dae487fa73362229e7d945da70e3c392" translate="yes" xml:space="preserve">
          <source>How to call the function &lt;code&gt;debug&lt;/code&gt;.</source>
          <target state="translated">如何调用函数 &lt;code&gt;debug&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="98eba38c05fa88b9c30ad0dfb13950962ae5ed2d" translate="yes" xml:space="preserve">
          <source>How to change a frame&amp;rsquo;s parameters.</source>
          <target state="translated">如何更改框架的参数。</target>
        </trans-unit>
        <trans-unit id="584d283ee202b0a7afd45a5153a4ef8b5cf2e74e" translate="yes" xml:space="preserve">
          <source>How to choose a window for displaying a buffer.</source>
          <target state="translated">如何选择显示缓冲区的窗口。</target>
        </trans-unit>
        <trans-unit id="889a3f666af4c61de2d0629af5121c441bb5decf" translate="yes" xml:space="preserve">
          <source>How to coerce Font Lock into properly highlighting multiline constructs.</source>
          <target state="translated">如何胁迫Font Lock正确高亮显示多行结构。</target>
        </trans-unit>
        <trans-unit id="c6e972dc0a66030144b054cad1a5fcd75dcee8d5" translate="yes" xml:space="preserve">
          <source>How to create, examine and alter syntax tables.</source>
          <target state="translated">如何创建、检查和改变语法表。</target>
        </trans-unit>
        <trans-unit id="7a791a4e001a6ac9ea4279a3a77ed0c51442423e" translate="yes" xml:space="preserve">
          <source>How to customize the menu bar.</source>
          <target state="translated">如何自定义菜单栏。</target>
        </trans-unit>
        <trans-unit id="58a90a2d964bdc73a4edf5b8a45d5b1cecdd234a" translate="yes" xml:space="preserve">
          <source>How to define a coding system is an arcane matter, and is not documented here.</source>
          <target state="translated">如何定义编码系统是一个很玄妙的问题,这里不做记载。</target>
        </trans-unit>
        <trans-unit id="b0830c9813b6a38032206e8dceae014f437aa7fe" translate="yes" xml:space="preserve">
          <source>How to define a face.</source>
          <target state="translated">如何定义一张脸。</target>
        </trans-unit>
        <trans-unit id="963f454b3e02a674e70674f8079ea290a486b06b" translate="yes" xml:space="preserve">
          <source>How to define a glyph, and what glyphs mean.</source>
          <target state="translated">如何定义一个字形,以及字形的含义。</target>
        </trans-unit>
        <trans-unit id="bffa5d1adff8569497dea41136c9588c5389b005" translate="yes" xml:space="preserve">
          <source>How to define and examine faces.</source>
          <target state="translated">如何定义和检查面孔。</target>
        </trans-unit>
        <trans-unit id="1831635dc9eadce3f4799bcd9062d3a05e656dad" translate="yes" xml:space="preserve">
          <source>How to define your own rx forms.</source>
          <target state="translated">如何定义自己的处方表。</target>
        </trans-unit>
        <trans-unit id="43bb8620d83e28db5e68aaf5c7cf9fdb0b8e09e6" translate="yes" xml:space="preserve">
          <source>How to display the cursor. Legitimate values are:</source>
          <target state="translated">如何显示光标。合法值是:</target>
        </trans-unit>
        <trans-unit id="1e1e722dc555e0eba92871029eaa26bfc5ffcb35" translate="yes" xml:space="preserve">
          <source>How to distinguish various sorts of list forms.</source>
          <target state="translated">如何区分各种列表形式。</target>
        </trans-unit>
        <trans-unit id="0ce21d9b92903a59aca05b3b1552b2b08463a2e9" translate="yes" xml:space="preserve">
          <source>How to enable and disable undo information. How to control how much information is kept.</source>
          <target state="translated">如何启用和禁用撤销信息。如何控制信息的保存量。</target>
        </trans-unit>
        <trans-unit id="02a7c5fa566cfc647af09f294de23fa71d709ee5" translate="yes" xml:space="preserve">
          <source>How to enable lexical binding.</source>
          <target state="translated">如何启用词汇绑定。</target>
        </trans-unit>
        <trans-unit id="e02986b18d513ea22722b980555a66fd9903de73" translate="yes" xml:space="preserve">
          <source>How to examine all existing frames.</source>
          <target state="translated">如何检查所有现有的框架。</target>
        </trans-unit>
        <trans-unit id="2477e5d3553fcc6700cc0b69d229d28489401db4" translate="yes" xml:space="preserve">
          <source>How to find a file in standard places.</source>
          <target state="translated">如何在标准的地方找到一个文件。</target>
        </trans-unit>
        <trans-unit id="6fdaa01098d58394f8c8a5ccc0e44755601e354b" translate="yes" xml:space="preserve">
          <source>How to find a spurious close paren or missing open.</source>
          <target state="translated">如何找到一个虚假的近亲或失踪的开。</target>
        </trans-unit>
        <trans-unit id="546322a22b8767e18ea0312bd5734d59f3d4d892" translate="yes" xml:space="preserve">
          <source>How to find a spurious open paren or missing close.</source>
          <target state="translated">如何找到虚假的开家长或丢失的关。</target>
        </trans-unit>
        <trans-unit id="4508e9cb53ed5fecb01557cb9f9fe44bbc369263" translate="yes" xml:space="preserve">
          <source>How to find syntax errors.</source>
          <target state="translated">如何发现语法错误。</target>
        </trans-unit>
        <trans-unit id="acccfe1e2eedd45b7498bd909391c965814563f6" translate="yes" xml:space="preserve">
          <source>How to invoke and customize completion.</source>
          <target state="translated">如何调用和自定义完成。</target>
        </trans-unit>
        <trans-unit id="7fff9f7cff02ebf6de7010bb23e0dfef97e7dbd8" translate="yes" xml:space="preserve">
          <source>How to invoke the Lisp interpreter explicitly.</source>
          <target state="translated">如何显式调用Lisp解释器。</target>
        </trans-unit>
        <trans-unit id="b1b9e2940cf245b51808121c7d6f61585c662db7" translate="yes" xml:space="preserve">
          <source>How to look at all the existing buffers.</source>
          <target state="translated">如何查看所有现有的缓冲区。</target>
        </trans-unit>
        <trans-unit id="34ec9fe9a56502c4f930d94f883c460d15f9c68d" translate="yes" xml:space="preserve">
          <source>How to make a keymap that defines a menu.</source>
          <target state="translated">如何制作一个定义菜单的keymap。</target>
        </trans-unit>
        <trans-unit id="a2bc9dfabedfac860e672276bbd3d66b9c84751e" translate="yes" xml:space="preserve">
          <source>How to package a single .el file.</source>
          <target state="translated">如何打包单个.el文件。</target>
        </trans-unit>
        <trans-unit id="f4b8c19c329b5bc56446536360857c69c68a896f" translate="yes" xml:space="preserve">
          <source>How to package multiple files.</source>
          <target state="translated">如何对多个文件进行打包。</target>
        </trans-unit>
        <trans-unit id="af653ef8f4ff00959d4b6219fde22206384903a6" translate="yes" xml:space="preserve">
          <source>How to produce trace output in a buffer.</source>
          <target state="translated">如何在缓冲区中产生跟踪输出。</target>
        </trans-unit>
        <trans-unit id="9e5a558e3ec24a2347966c1329d3ee02e34f495b" translate="yes" xml:space="preserve">
          <source>How to put documentation in a function.</source>
          <target state="translated">如何在函数中放入文档。</target>
        </trans-unit>
        <trans-unit id="e5d5fefb1b58087d7078d369bb3663d7ac94d5ca" translate="yes" xml:space="preserve">
          <source>How to put functions on a hook, or remove them.</source>
          <target state="translated">如何把功能放在钩子上,或者删除它们。</target>
        </trans-unit>
        <trans-unit id="21673b685715f7818c84d129e8e31e8f33f35b07" translate="yes" xml:space="preserve">
          <source>How to read a Lisp object or expression.</source>
          <target state="translated">如何读取Lisp对象或表达式。</target>
        </trans-unit>
        <trans-unit id="76b8dbb93659061cda4f1c058522cc96f5c78568" translate="yes" xml:space="preserve">
          <source>How to read a straight text string.</source>
          <target state="translated">如何读懂一个直线文字串。</target>
        </trans-unit>
        <trans-unit id="1d44481861a0b27922b9fbe396d05c57e1f7608e" translate="yes" xml:space="preserve">
          <source>How to read and set abbrev properties. Which properties have which effect.</source>
          <target state="translated">如何读取和设置简写属性。哪些属性有哪些效果。</target>
        </trans-unit>
        <trans-unit id="4982e640e83f9a33b20109133078a1d0cd550c5c" translate="yes" xml:space="preserve">
          <source>How to read and set abbrev table properties. Which properties have which effect.</source>
          <target state="translated">如何读取和设置简表属性。哪些属性有哪些效果。</target>
        </trans-unit>
        <trans-unit id="fc129106eeffa3a79dddd98e2bd0fbe84ba96460" translate="yes" xml:space="preserve">
          <source>How to read and set properties. What properties do to the screen display.</source>
          <target state="translated">如何读取和设置属性。属性对屏幕显示的作用。</target>
        </trans-unit>
        <trans-unit id="06bbb932d66cdf4cef87ff0a5a0e26da5fe306f8" translate="yes" xml:space="preserve">
          <source>How to read input events from the keyboard or mouse.</source>
          <target state="translated">如何读取键盘或鼠标的输入事件。</target>
        </trans-unit>
        <trans-unit id="006de7d43da6bac230f0a8e3e188777fea185278" translate="yes" xml:space="preserve">
          <source>How to read just one event.</source>
          <target state="translated">如何只读一个事件。</target>
        </trans-unit>
        <trans-unit id="084ce719b3d66bab7fcdb292d62649f87e3aa377" translate="yes" xml:space="preserve">
          <source>How to read one key sequence.</source>
          <target state="translated">如何读取一键序列。</target>
        </trans-unit>
        <trans-unit id="da7e78b38de5635099259fb05116f8a0f84bacef" translate="yes" xml:space="preserve">
          <source>How to report an error.</source>
          <target state="translated">如何报错。</target>
        </trans-unit>
        <trans-unit id="54dc9f697a823b124ee9914dbd0ff3b8567601a0" translate="yes" xml:space="preserve">
          <source>How to request key lookup.</source>
          <target state="translated">如何申请密钥查询。</target>
        </trans-unit>
        <trans-unit id="9e910cb2d0cc6b121e240abcc195ff5cb145f16b" translate="yes" xml:space="preserve">
          <source>How to reread or throw away input events.</source>
          <target state="translated">如何重读或扔掉输入事件。</target>
        </trans-unit>
        <trans-unit id="1f92efa5ad42e9cdbaef14a012c71a1706d76c68" translate="yes" xml:space="preserve">
          <source>How to restore the state prior to displaying a buffer.</source>
          <target state="translated">如何恢复显示缓冲区之前的状态。</target>
        </trans-unit>
        <trans-unit id="2bd60b7bf14ec2d6b95feff3282cf5814b49de80" translate="yes" xml:space="preserve">
          <source>How to run a hook.</source>
          <target state="translated">如何运行一个钩子。</target>
        </trans-unit>
        <trans-unit id="c996fa30158f4274ebb47865a320f076e4763bd8" translate="yes" xml:space="preserve">
          <source>How to specify Lisp strings.</source>
          <target state="translated">如何指定Lisp字符串。</target>
        </trans-unit>
        <trans-unit id="08410822c3a2ba93603db144c7356fde9ba7377b" translate="yes" xml:space="preserve">
          <source>How to specify an image for use in &lt;code&gt;:display&lt;/code&gt;.</source>
          <target state="translated">如何指定要在 &lt;code&gt;:display&lt;/code&gt; 中使用的图像。</target>
        </trans-unit>
        <trans-unit id="93a021b4f614ad8f528308affeb7fb1734a14088" translate="yes" xml:space="preserve">
          <source>How to specify characters by their codes.</source>
          <target state="translated">如何通过代码来指定字符。</target>
        </trans-unit>
        <trans-unit id="89d64245365e5868434353c1c18fe79f30b28b42" translate="yes" xml:space="preserve">
          <source>How to specify complex patterns of evaluation.</source>
          <target state="translated">如何指定复杂的评价模式。</target>
        </trans-unit>
        <trans-unit id="22a42034aac1180d73f83fff38dbd567a6232e7c" translate="yes" xml:space="preserve">
          <source>How to specify margins for filling commands.</source>
          <target state="translated">如何指定填充命令的边距。</target>
        </trans-unit>
        <trans-unit id="58794ee5be37801b138025b720bc3ca48ac5a93d" translate="yes" xml:space="preserve">
          <source>How to teach Emacs to indent for a major mode.</source>
          <target state="translated">如何教Emacs缩进的主要模式。</target>
        </trans-unit>
        <trans-unit id="7fd2bd6342dae1eb68613b0e709d5a675535ca09" translate="yes" xml:space="preserve">
          <source>How to test evaluation coverage.</source>
          <target state="translated">如何测试评价覆盖率。</target>
        </trans-unit>
        <trans-unit id="cabd761d617b5357fad25d66f4ebbc1681c32def" translate="yes" xml:space="preserve">
          <source>How to unload a library that was loaded.</source>
          <target state="translated">如何卸载被加载的库。</target>
        </trans-unit>
        <trans-unit id="0d55e3212d08896ceeeaa77d19c87444cc23f9c9" translate="yes" xml:space="preserve">
          <source>How to use &lt;code&gt;pcase&lt;/code&gt; and friends.</source>
          <target state="translated">如何使用 &lt;code&gt;pcase&lt;/code&gt; 和朋友。</target>
        </trans-unit>
        <trans-unit id="20b574c8a165d8a10848cad0a4919d5912131959" translate="yes" xml:space="preserve">
          <source>How to use an existing function.</source>
          <target state="translated">如何使用现有的功能。</target>
        </trans-unit>
        <trans-unit id="b1d8549ec9446bbed5459f275a5ffbe6e2e8e3f6" translate="yes" xml:space="preserve">
          <source>How to use hooks; how to write code that provides hooks.</source>
          <target state="translated">如何使用钩子;如何编写提供钩子的代码。</target>
        </trans-unit>
        <trans-unit id="397c70b5aa7958abf3bbd4291d0b1e795a6db2de" translate="yes" xml:space="preserve">
          <source>How to wait until process output arrives.</source>
          <target state="translated">如何等到进程输出到达。</target>
        </trans-unit>
        <trans-unit id="1c30e9666fd6c327731ef484a3a909772e16b583" translate="yes" xml:space="preserve">
          <source>How to work with bool-vectors.</source>
          <target state="translated">如何使用bool-向量。</target>
        </trans-unit>
        <trans-unit id="dcb3cc4dba44c005cbdc12b32a6e9c3409b31fef" translate="yes" xml:space="preserve">
          <source>How to work with char-tables.</source>
          <target state="translated">如何使用图表表。</target>
        </trans-unit>
        <trans-unit id="50e14026cd301cbc7c15888338d8006b6117ac06" translate="yes" xml:space="preserve">
          <source>How to write a macro definition.</source>
          <target state="translated">如何写宏定义。</target>
        </trans-unit>
        <trans-unit id="f2626db4c8972f5298b8bd23108422f3ae4d0b31" translate="yes" xml:space="preserve">
          <source>How unibyte and multibyte relate to codes of individual characters.</source>
          <target state="translated">单字节和多字节与单个字符代码的关系。</target>
        </trans-unit>
        <trans-unit id="9c3a6d6fb888a93f9b13417e4714435f08d1f37d" translate="yes" xml:space="preserve">
          <source>How users actuate the menu with the keyboard.</source>
          <target state="translated">用户如何用键盘操作菜单。</target>
        </trans-unit>
        <trans-unit id="5f52510e53837c8871c96a8a4ce4e4b3f7e357a7" translate="yes" xml:space="preserve">
          <source>How users actuate the menu with the mouse.</source>
          <target state="translated">用户如何用鼠标操作菜单。</target>
        </trans-unit>
        <trans-unit id="b84e7b6373cd543c2668923674fbfb3bd6c1af3c" translate="yes" xml:space="preserve">
          <source>How various sorts of objects are evaluated.</source>
          <target state="translated">如何评价各种对象。</target>
        </trans-unit>
        <trans-unit id="1bc7e4b9fd61439b8a59d378697564a244418612" translate="yes" xml:space="preserve">
          <source>How yanking is done.</source>
          <target state="translated">拽是怎么做的。</target>
        </trans-unit>
        <trans-unit id="0db990b5ad8fd1a0ad4e10e1fa4cee2eb3f386ff" translate="yes" xml:space="preserve">
          <source>How you can trap errors and continue execution.</source>
          <target state="translated">如何捕捉错误并继续执行。</target>
        </trans-unit>
        <trans-unit id="c34f30d62a19f9bd568b81a72a6017a9cc032b6f" translate="yes" xml:space="preserve">
          <source>How, when and why macros are expanded.</source>
          <target state="translated">如何、何时以及为什么要扩展宏。</target>
        </trans-unit>
        <trans-unit id="d712cc7071561b25bbf69d3a36de2812fe0afaa1" translate="yes" xml:space="preserve">
          <source>However,</source>
          <target state="translated">However,</target>
        </trans-unit>
        <trans-unit id="cf847965f03e83065a0d6e8915b249c6821cc6da" translate="yes" xml:space="preserve">
          <source>However, &lt;code&gt;expand-file-name&lt;/code&gt; expands leading &amp;lsquo;</source>
          <target state="translated">但是， &lt;code&gt;expand-file-name&lt;/code&gt; 会以'</target>
        </trans-unit>
        <trans-unit id="b1c6040b74d9c73c473c84f549e1915ecc95fde5" translate="yes" xml:space="preserve">
          <source>However, &lt;var&gt;facespec&lt;/var&gt; can also evaluate to a list of this form:</source>
          <target state="translated">但是， &lt;var&gt;facespec&lt;/var&gt; 也可以评估为以下形式的列表：</target>
        </trans-unit>
        <trans-unit id="18dc73a045eaa93f274aa0ea125775bec0b459d8" translate="yes" xml:space="preserve">
          <source>However, association lists have their own advantages. Depending on your application, it may be faster to add an association to the front of an association list than to update a property. All properties for a symbol are stored in the same property list, so there is a possibility of a conflict between different uses of a property name. (For this reason, it is a good idea to choose property names that are probably unique, such as by beginning the property name with the program&amp;rsquo;s usual name-prefix for variables and functions.) An association list may be used like a stack where associations are pushed on the front of the list and later discarded; this is not possible with a property list.</source>
          <target state="translated">但是，关联列表有其自身的优点。根据您的应用程序，将关联添加到关联列表的前面可能比更新属性更快。符号的所有属性都存储在相同的属性列表中，因此属性名称的不同用法之间可能会发生冲突。 （因此，最好选择可能唯一的属性名称，例如，以程序的常规变量和函数名称前缀开头属性名称。）关联列表可以像堆栈一样使用，其中的关联被推到列表的最前面，随后被丢弃；使用属性列表是不可能的。</target>
        </trans-unit>
        <trans-unit id="6fdb019f402056aff1f54c3fbe10ac44d0751b68" translate="yes" xml:space="preserve">
          <source>However, calling &lt;code&gt;sit-for&lt;/code&gt; this way is considered obsolete (see &lt;a href=&quot;waiting#Waiting&quot;&gt;Waiting&lt;/a&gt;). The old calling convention is deprecated like this:</source>
          <target state="translated">但是， &lt;code&gt;sit-for&lt;/code&gt; 这种方式调用静坐被认为是过时的（请参见&lt;a href=&quot;waiting#Waiting&quot;&gt;Waiting&lt;/a&gt;）。不建议使用旧的调用约定，如下所示：</target>
        </trans-unit>
        <trans-unit id="89bbfb09d0be7d93668a28799c5e28192794bf66" translate="yes" xml:space="preserve">
          <source>However, certain values for first argument to &lt;code&gt;debug&lt;/code&gt; have a special significance. (Normally, these values are used only by the internals of Emacs, and not by programmers calling &lt;code&gt;debug&lt;/code&gt;.) Here is a table of these special values:</source>
          <target state="translated">但是， &lt;code&gt;debug&lt;/code&gt; 第一个参数的某些值具有特殊的意义。（通常，这些值仅由Emacs内部使用，而不由程序员调用 &lt;code&gt;debug&lt;/code&gt; 来使用。）以下是这些特殊值的表：</target>
        </trans-unit>
        <trans-unit id="8de178e11bbaacc8760ca159034380712879380b" translate="yes" xml:space="preserve">
          <source>However, empty input is always permitted, regardless of the value of &lt;var&gt;require-match&lt;/var&gt;; in that case, &lt;code&gt;completing-read&lt;/code&gt; returns the first element of &lt;var&gt;default&lt;/var&gt;, if it is a list; &lt;code&gt;&quot;&quot;&lt;/code&gt;, if &lt;var&gt;default&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;; or &lt;var&gt;default&lt;/var&gt;. The string or strings in &lt;var&gt;default&lt;/var&gt; are also available to the user through the history commands.</source>
          <target state="translated">但是，无论 &lt;var&gt;require-match&lt;/var&gt; 的值如何，总是允许空输入。在这种情况下， &lt;code&gt;completing-read&lt;/code&gt; 将返回 &lt;var&gt;default&lt;/var&gt; 的第一个元素（如果它是一个列表）； &lt;code&gt;&quot;&quot;&lt;/code&gt; ，如果 &lt;var&gt;default&lt;/var&gt; 值为 &lt;code&gt;nil&lt;/code&gt; ；或 &lt;var&gt;default&lt;/var&gt; 。 &lt;var&gt;default&lt;/var&gt; ，一个或多个字符串也可以通过历史命令提供给用户。</target>
        </trans-unit>
        <trans-unit id="792aa444c031c2fa64190182ed2af2de4e7b4dbe" translate="yes" xml:space="preserve">
          <source>However, entry to the debugger is not a normal consequence of an error. Many commands signal Lisp errors when invoked inappropriately, and during ordinary editing it would be very inconvenient to enter the debugger each time this happens. So if you want errors to enter the debugger, set the variable &lt;code&gt;debug-on-error&lt;/code&gt; to non-&lt;code&gt;nil&lt;/code&gt;. (The command &lt;code&gt;toggle-debug-on-error&lt;/code&gt; provides an easy way to do this.)</source>
          <target state="translated">但是，进入调试器并不是错误的正常结果。当不当调用时，许多命令会发出Lisp错误的信号，并且在常规编辑期间，每次发生这种情况时都很难进入调试器。因此，如果您希望错误进入调试器，请将变量 &lt;code&gt;debug-on-error&lt;/code&gt; 设置为 &lt;code&gt;nil&lt;/code&gt; 。（命令 &lt;code&gt;toggle-debug-on-error&lt;/code&gt; 提供了一种简便的方法。）</target>
        </trans-unit>
        <trans-unit id="a371da1f5e52f9fc85ed5b003d28727395a3da17" translate="yes" xml:space="preserve">
          <source>However, if Emacs is compiled without X toolkit support, or on text terminals, submenus are not supported. Each nested keymap is shown as a menu item, but clicking on it does not automatically pop up the submenu. If you wish to imitate the effect of submenus, you can do that by giving a nested keymap an item string which starts with &amp;lsquo;</source>
          <target state="translated">但是，如果Emacs是在没有X工具包支持的情况下或在文本终端上编译的，则不支持子菜单。每个嵌套的键盘映射都显示为一个菜单项，但是单击它不会自动弹出子菜单。如果您想模仿子菜单的效果，可以通过给嵌套键盘映射一个以'开头的项目字符串来实现</target>
        </trans-unit>
        <trans-unit id="4c65a0739e555f939cffbe68b6ffcca06a140399" translate="yes" xml:space="preserve">
          <source>However, if the command has called &lt;code&gt;read-key-sequence&lt;/code&gt;, it returns the last read key sequence. See &lt;a href=&quot;key-sequence-input#Key-Sequence-Input&quot;&gt;Key Sequence Input&lt;/a&gt;. The value is a string if all events in the sequence were characters that fit in a string. See &lt;a href=&quot;input-events#Input-Events&quot;&gt;Input Events&lt;/a&gt;.</source>
          <target state="translated">但是，如果该命令调用了 &lt;code&gt;read-key-sequence&lt;/code&gt; ，它将返回最后一个读键序列。请参阅&lt;a href=&quot;key-sequence-input#Key-Sequence-Input&quot;&gt;按键序列输入&lt;/a&gt;。如果序列中的所有事件都是适合字符串的字符，则该值为字符串。请参阅&lt;a href=&quot;input-events#Input-Events&quot;&gt;输入事件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0c595b60168d6767424ea95918ae571bacc6c180" translate="yes" xml:space="preserve">
          <source>However, it is easy to arrange for editing to behave consistently for questions of the form, &amp;ldquo;What are the properties of text at this buffer or string position?&amp;rdquo; So we have decided these are the only questions that make sense; we have not implemented asking questions about where intervals start or end.</source>
          <target state="translated">但是，很容易安排编辑以一致地表现以下形式的问题：&amp;ldquo;在此缓冲区或字符串位置的文本的属性是什么？&amp;rdquo; 因此，我们认为这些是唯一有意义的问题。我们尚未实施有关间隔在哪里开始或结束的提问。</target>
        </trans-unit>
        <trans-unit id="51b804270cee73a96e1897e1269c9ad3c0f552cc" translate="yes" xml:space="preserve">
          <source>However, most programs would do well to avoid these issues by following the recommendations at the beginning of this section.</source>
          <target state="translated">然而,大多数计划都可以通过遵循本节开头的建议来避免这些问题。</target>
        </trans-unit>
        <trans-unit id="dc207c4dbd9c7949ec4c7488ed32fae11dd5b968" translate="yes" xml:space="preserve">
          <source>However, not all of the characters you can write with backslash escape-sequences are valid in strings. The only control characters that a string can hold are the</source>
          <target state="translated">然而,并不是所有可以用反斜杠转义序列书写的字符都在字符串中有效。字符串中唯一能容纳的控制字符是</target>
        </trans-unit>
        <trans-unit id="ff06e550d91036d4357bc0ebb36365ccd29010ec" translate="yes" xml:space="preserve">
          <source>However, refraining from using buffer display functions and falling back on a split &amp;amp; delete windows metaphor is not a good idea either. Buffer display functions give Lisp programs and users a framework to reconcile their different needs; no comparable framework exists for splitting and deleting windows. Buffer display functions also allow to at least partially restore the layout of a frame when removing a buffer from it later (see &lt;a href=&quot;quitting-windows#Quitting-Windows&quot;&gt;Quitting Windows&lt;/a&gt;).</source>
          <target state="translated">但是，不要使用缓冲区显示功能，而要依靠分割和删除窗口的隐喻也不是一个好主意。缓冲区显示功能为Lisp程序和用户提供了调解其不同需求的框架。不存在用于拆分和删除窗口的类似框架。缓冲区显示功能还允许在以后从中删除缓冲区时至少部分恢复框架的布局（请参阅&lt;a href=&quot;quitting-windows#Quitting-Windows&quot;&gt;退出Windows&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="0708109dffd2408086ea747748000aad57a60fb4" translate="yes" xml:space="preserve">
          <source>However, replacing matches in a string is more complex, especially if you want to do it efficiently. So Emacs provides a function to do this.</source>
          <target state="translated">然而,在一个字符串中替换匹配是比较复杂的,尤其是当你想高效地进行替换时。所以Emacs提供了一个函数来实现这个功能。</target>
        </trans-unit>
        <trans-unit id="9de554e12d95bd1680f448d39b8be6b09f245cd7" translate="yes" xml:space="preserve">
          <source>However, the fact that the internal structure of a closure is exposed to the rest of the Lisp world is considered an internal implementation detail. For this reason, we recommend against directly examining or altering the structure of closure objects.</source>
          <target state="translated">然而,一个闭包的内部结构暴露给Lisp世界的其余部分的事实被认为是一个内部实现细节。出于这个原因,我们建议不要直接检查或改变闭包对象的结构。</target>
        </trans-unit>
        <trans-unit id="ce0a58a92b64459bc9f8e7f781f04d28663d42b0" translate="yes" xml:space="preserve">
          <source>However, the other arguments (all but the last) should be mutable lists.</source>
          <target state="translated">然而,其他的参数(除了最后一个)应该是可变的列表。</target>
        </trans-unit>
        <trans-unit id="688020fba4783bbaacee756d3edcaac100fedf38" translate="yes" xml:space="preserve">
          <source>However, these two operations are not precisely inverse to each other. There are three kinds of exceptions:</source>
          <target state="translated">然而,这两种操作并不完全是相互倒置的。有三种例外情况。</target>
        </trans-unit>
        <trans-unit id="f359488fd7eea11470821fd3884427bf508d78fd" translate="yes" xml:space="preserve">
          <source>However, this is not very commonly done.</source>
          <target state="translated">然而,这种做法并不常见。</target>
        </trans-unit>
        <trans-unit id="d77eec705a1ec091eb7e408fd698817be403ec6a" translate="yes" xml:space="preserve">
          <source>However, two distinct buffers are never considered &lt;code&gt;equal&lt;/code&gt;, even if their textual contents are the same.</source>
          <target state="translated">但是，即使两个不同的缓冲区的文本内容 &lt;code&gt;equal&lt;/code&gt; ，也永远不会将它们视为相等。</target>
        </trans-unit>
        <trans-unit id="cc55cc0b2759b9b581d764617f1a907123fc2d78" translate="yes" xml:space="preserve">
          <source>However, unibyte display and overlay strings &lt;em&gt;are&lt;/em&gt; reordered if their parent buffer is reordered. This is because plain-&lt;small&gt;ASCII&lt;/small&gt; strings are stored by Emacs as unibyte strings. If a unibyte display or overlay string includes non-&lt;small&gt;ASCII&lt;/small&gt; characters, these characters are assumed to have left-to-right direction.</source>
          <target state="translated">然而，unibyte显示和叠加的字符串&lt;em&gt;是&lt;/em&gt;如果他们的父母缓冲区被重新排序重新排序。这是因为Emacs将纯&lt;small&gt;ASCII&lt;/small&gt;字符串存储为单字节字符串。如果单字节显示或覆盖字符串包含非&lt;small&gt;ASCII&lt;/small&gt;字符，则假定这些字符具有从左到右的方向。</target>
        </trans-unit>
        <trans-unit id="d5f0c936454766aae72845ba282e7e98b80d8110" translate="yes" xml:space="preserve">
          <source>However, unmatched parentheses are the most common syntax errors in Lisp, and we can give further advice for those cases. (In addition, just moving point through the code with Show Paren mode enabled might find the mismatch.)</source>
          <target state="translated">然而,未匹配的括号是Lisp中最常见的语法错误,我们可以针对这些情况给出进一步的建议。(另外,只要在启用Show Paren模式的情况下,在代码中移动点,可能就会发现不匹配的情况。)</target>
        </trans-unit>
        <trans-unit id="03b455b2c17a57d8e9d5c211f72b346e400cc0d9" translate="yes" xml:space="preserve">
          <source>However, when &lt;var&gt;separators&lt;/var&gt; can match the empty string, &lt;var&gt;omit-nulls&lt;/var&gt; is usually &lt;code&gt;t&lt;/code&gt;, so that the subtleties in the three previous examples are rarely relevant:</source>
          <target state="translated">但是，当 &lt;var&gt;separators&lt;/var&gt; 可以匹配空字符串时， &lt;var&gt;omit-nulls&lt;/var&gt; 通常为 &lt;code&gt;t&lt;/code&gt; ，因此前面三个示例中的微妙之处很少涉及：</target>
        </trans-unit>
        <trans-unit id="718ecf2826f15e8efa1c8dac7c4b3cccda20b651" translate="yes" xml:space="preserve">
          <source>However, when its &lt;var&gt;norecord&lt;/var&gt; argument is &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;select-window&lt;/code&gt; updates the buffer list and thus indirectly runs the normal hook &lt;code&gt;buffer-list-update-hook&lt;/code&gt; (see &lt;a href=&quot;buffer-list#Buffer-List&quot;&gt;Buffer List&lt;/a&gt;). Consequently, that hook provides one way to run a function whenever a window gets selected more &amp;ldquo;permanently&amp;rdquo;.</source>
          <target state="translated">但是，当其 &lt;var&gt;norecord&lt;/var&gt; 参数为 &lt;code&gt;nil&lt;/code&gt; 时， &lt;code&gt;select-window&lt;/code&gt; 将更新缓冲区列表，从而间接运行正常的钩子 &lt;code&gt;buffer-list-update-hook&lt;/code&gt; （请参阅&lt;a href=&quot;buffer-list#Buffer-List&quot;&gt;缓冲区列表&lt;/a&gt;）。因此，无论何时更&amp;ldquo;永久地&amp;rdquo;选择窗口，该钩子都会提供一种运行功能的方法。</target>
        </trans-unit>
        <trans-unit id="79271087883810661a9b09557e9e03c0a21596a1" translate="yes" xml:space="preserve">
          <source>However, you can also create a frame without a minibuffer. Such a frame must use the minibuffer window of some other frame. That other frame will serve as &lt;em&gt;surrogate minibuffer frame&lt;/em&gt; for this frame and cannot be deleted via &lt;code&gt;delete-frame&lt;/code&gt; (see &lt;a href=&quot;deleting-frames#Deleting-Frames&quot;&gt;Deleting Frames&lt;/a&gt;) as long as this frame is live.</source>
          <target state="translated">但是，您也可以创建没有迷你缓冲区的框架。这样的帧必须使用其他帧的最小缓冲区窗口。该其他帧将用作该帧的&lt;em&gt;替代微型缓冲区帧&lt;/em&gt;，并且只要该帧处于活动状态就无法通过 &lt;code&gt;delete-frame&lt;/code&gt; &lt;a href=&quot;deleting-frames#Deleting-Frames&quot;&gt;删除&lt;/a&gt;（请参阅Deleting Frames）。</target>
        </trans-unit>
        <trans-unit id="f14b8455423cc843b907f295eced2a775dd065fc" translate="yes" xml:space="preserve">
          <source>Human text has no string quote characters. We do not want quotation marks to turn off the usual syntactic properties of other characters in the quotation.</source>
          <target state="translated">人类的文本没有字符串引号字符。我们不希望引号关闭引号中其他字符的通常语法属性。</target>
        </trans-unit>
        <trans-unit id="ca73ab65568cd125c2d27a22bbd9e863c10b675d" translate="yes" xml:space="preserve">
          <source>I</source>
          <target state="translated">I</target>
        </trans-unit>
        <trans-unit id="9f67560836cacb4e2524b4b90afead28109e8bc3" translate="yes" xml:space="preserve">
          <source>I/O operations for files and subprocesses set this variable to the coding system name that was used. The explicit encoding and decoding functions (see &lt;a href=&quot;explicit-encoding#Explicit-Encoding&quot;&gt;Explicit Encoding&lt;/a&gt;) set it too.</source>
          <target state="translated">文件和子进程的I / O操作将此变量设置为使用的编码系统名称。显式编码和解码功能（请参阅&lt;a href=&quot;explicit-encoding#Explicit-Encoding&quot;&gt;Explicit Encoding&lt;/a&gt;）也对其进行了设置。</target>
        </trans-unit>
        <trans-unit id="efdc5bf687d79d6ca141c8f8c956df39a5e454a1" translate="yes" xml:space="preserve">
          <source>IBM&amp;rsquo;s AIX.</source>
          <target state="translated">IBM的AIX。</target>
        </trans-unit>
        <trans-unit id="89f89c02cf47e091e726a4e07b88af0966806897" translate="yes" xml:space="preserve">
          <source>ID</source>
          <target state="translated">ID</target>
        </trans-unit>
        <trans-unit id="91e003cabbbc52544795f505584d809fe4bf1cdc" translate="yes" xml:space="preserve">
          <source>IEEE</source>
          <target state="translated">IEEE</target>
        </trans-unit>
        <trans-unit id="271f9ef2ea16868dc1f492eb21741835493a94db" translate="yes" xml:space="preserve">
          <source>IMAP</source>
          <target state="translated">IMAP</target>
        </trans-unit>
        <trans-unit id="badba9bfa60a25ef45b318d3e6da210839e6ca9f" translate="yes" xml:space="preserve">
          <source>ISO8859-1</source>
          <target state="translated">ISO8859-1</target>
        </trans-unit>
        <trans-unit id="302e65332ce636117a1e1a3258eec970e6b4fa4a" translate="yes" xml:space="preserve">
          <source>Ideally, a minor mode should have its desired effect regardless of the other minor modes in effect. It should be possible to activate and deactivate minor modes in any order.</source>
          <target state="translated">理想的情况是,一个小调应该有它想要的效果,而不考虑其他小调的效果。应该能够以任何顺序激活和停用小模式。</target>
        </trans-unit>
        <trans-unit id="29d04e3122abcc0a8fa90513b222c8fdfb97e976" translate="yes" xml:space="preserve">
          <source>Ideally, the function described next should focus a frame without also raising it above other frames. Unfortunately, many window-systems or window managers may refuse to comply.</source>
          <target state="translated">理想的情况是,接下来描述的功能应该聚焦一个框架,而不需要将其提升到其他框架之上。不幸的是,许多窗口系统或窗口管理人可能拒绝遵守。</target>
        </trans-unit>
        <trans-unit id="71869b49217f0c538915793a7950d3d69b9b0ce5" translate="yes" xml:space="preserve">
          <source>Identifier of a clip path.</source>
          <target state="translated">夹子路径的标识符。</target>
        </trans-unit>
        <trans-unit id="07786f4d523ed61d051da615f6d04399a077035f" translate="yes" xml:space="preserve">
          <source>Idle Timers</source>
          <target state="translated">怠速计时器</target>
        </trans-unit>
        <trans-unit id="b94b85388613ff812132cfe4fbfdcb534fff787e" translate="yes" xml:space="preserve">
          <source>If &amp;lsquo;</source>
          <target state="translated">如果</target>
        </trans-unit>
        <trans-unit id="aad7c6884272d1e4dcc675b2f023d1cbbc05533e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;auto-hscroll-mode&lt;/code&gt; is set, redisplay automatically alters the horizontal scrolling of a window as necessary to ensure that point is always visible. However, you can still set the horizontal scrolling value explicitly. The value you specify serves as a lower bound for automatic scrolling, i.e., automatic scrolling will not scroll a window to a column less than the specified one.</source>
          <target state="translated">如果设置了自动滚动 &lt;code&gt;auto-hscroll-mode&lt;/code&gt; ，则重新显示会根据需要自动更改窗口的水平滚动，以确保始终可见该点。但是，您仍然可以显式设置水平滚动值。您指定的值用作自动滚动的下限，即，自动滚动不会将窗口滚动到小于指定列的列。</target>
        </trans-unit>
        <trans-unit id="1fe0e580e717c10f8a759c1dd7f4eeb5704a80d7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;buffer-file-name&lt;/code&gt; is the name of a symbolic link, then both numbers refer to the recursive target.</source>
          <target state="translated">如果 &lt;code&gt;buffer-file-name&lt;/code&gt; 是符号链接的名称，则两个数字均引用递归目标。</target>
        </trans-unit>
        <trans-unit id="829541a3ac61ebdfcc9db3375a2bc43fd84f7916" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;buffer-name&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;, it means that &lt;var&gt;buffer&lt;/var&gt; has been killed. See &lt;a href=&quot;killing-buffers#Killing-Buffers&quot;&gt;Killing Buffers&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;code&gt;buffer-name&lt;/code&gt; 返回 &lt;code&gt;nil&lt;/code&gt; ，则表示该 &lt;var&gt;buffer&lt;/var&gt; 已被终止。请参阅&lt;a href=&quot;killing-buffers#Killing-Buffers&quot;&gt;终止缓冲区&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="46f447c162e799d05330a676bca5b0fcb295d636" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;case-fold-search&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &amp;lsquo;</source>
          <target state="translated">如果 &lt;code&gt;case-fold-search&lt;/code&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则'</target>
        </trans-unit>
        <trans-unit id="a0b9960e130d96964b19241ad00eff41f9ce88b1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;confirm-after-completion&lt;/code&gt;, the user can exit with any input, but is asked for confirmation if the preceding command was a completion command (i.e., one of the commands in &lt;code&gt;minibuffer-confirm-exit-commands&lt;/code&gt;) and the resulting input is not an element of &lt;var&gt;collection&lt;/var&gt;. See &lt;a href=&quot;completion-commands#Completion-Commands&quot;&gt;Completion Commands&lt;/a&gt;.</source>
          <target state="translated">如果使用 &lt;code&gt;confirm-after-completion&lt;/code&gt; ，则用户可以使用任何输入退出，但要求确认前面的命令是否为完成命令（即 &lt;code&gt;minibuffer-confirm-exit-commands&lt;/code&gt; 中的命令之一），并且输入的结果不是 &lt;var&gt;collection&lt;/var&gt; 的要素。请参阅&lt;a href=&quot;completion-commands#Completion-Commands&quot;&gt;完成命令&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5461efaad213f3eb605cb1b5fdb92b93dcdd14ea" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;confirm&lt;/code&gt;, the user can exit with any input, but is asked for confirmation if the input is not an element of &lt;var&gt;collection&lt;/var&gt;.</source>
          <target state="translated">如果 &lt;code&gt;confirm&lt;/code&gt; ，则用户可以输入任何内容退出，但要求输入是否不是 &lt;var&gt;collection&lt;/var&gt; 元素的确认。</target>
        </trans-unit>
        <trans-unit id="56a2e2b051fdd48e6f61becb8058096fbb89bed3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;ctl-arrow&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;, these characters are displayed as octal escapes (see below).</source>
          <target state="translated">如果 &lt;code&gt;ctl-arrow&lt;/code&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则这些字符显示为八进制转义符（请参见下文）。</target>
        </trans-unit>
        <trans-unit id="3a3818b3c737a83ae8f9647a2324022e11fb3240" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;cursor-in-echo-area&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;read-event&lt;/code&gt; moves the cursor temporarily to the echo area, to the end of any message displayed there. Otherwise &lt;code&gt;read-event&lt;/code&gt; does not move the cursor.</source>
          <target state="translated">如果 &lt;code&gt;cursor-in-echo-area&lt;/code&gt; 不是 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;read-event&lt;/code&gt; 将光标暂时移至echo区域，直到该区域显示的任何消息的末尾。否则， &lt;code&gt;read-event&lt;/code&gt; 不会移动光标。</target>
        </trans-unit>
        <trans-unit id="29272f1a3239d180b66c3ca86f82f37d4b1a93e0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;edebug-all-defs&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then the commands &lt;code&gt;eval-region&lt;/code&gt;, &lt;code&gt;eval-current-buffer&lt;/code&gt;, and &lt;code&gt;eval-buffer&lt;/code&gt; also instrument any definitions they evaluate. Similarly, &lt;code&gt;edebug-all-forms&lt;/code&gt; controls whether &lt;code&gt;eval-region&lt;/code&gt; should instrument &lt;em&gt;any&lt;/em&gt; form, even non-defining forms. This doesn&amp;rsquo;t apply to loading or evaluations in the minibuffer. The command</source>
          <target state="translated">如果 &lt;code&gt;edebug-all-defs&lt;/code&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则命令 &lt;code&gt;eval-region&lt;/code&gt; ， &lt;code&gt;eval-current-buffer&lt;/code&gt; 和 &lt;code&gt;eval-buffer&lt;/code&gt; 也会检测它们评估的所有定义。同样， &lt;code&gt;edebug-all-forms&lt;/code&gt; 控制 &lt;code&gt;eval-region&lt;/code&gt; 是否应该使用&lt;em&gt;任何&lt;/em&gt;形式，甚至是非定义形式。这不适用于迷你缓冲区中的加载或评估。命令</target>
        </trans-unit>
        <trans-unit id="70a0cd64673c1dc0e8322c4aec31a25356783f0a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;eval-expression-debug-on-error&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;, then the value of &lt;code&gt;debug-on-error&lt;/code&gt; is not changed during &lt;code&gt;eval-expression&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;eval-expression-debug-on-error&lt;/code&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则在 &lt;code&gt;eval-expression&lt;/code&gt; 期间不会更改 &lt;code&gt;debug-on-error&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="9e432450f2427a1b9005131e79358edb9cd012ad" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;face-remapping-alist&lt;/code&gt; is buffer-local, its local value takes effect only within that buffer. If &lt;code&gt;face-remapping-alist&lt;/code&gt; includes faces applicable only to certain windows, by using the &lt;code&gt;(:filtered&amp;nbsp;(:window&amp;nbsp;&lt;var&gt;param&lt;/var&gt;&amp;nbsp;&lt;var&gt;val&lt;/var&gt;)&amp;nbsp;&lt;var&gt;spec&lt;/var&gt;)&lt;/code&gt;, that face takes effect only in windows that match the filter conditions (see &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Special Properties&lt;/a&gt;). To turn off face filtering temporarily, bind &lt;code&gt;face-filters-always-match&lt;/code&gt; to a non-&lt;code&gt;nil&lt;/code&gt; value, then all face filters will match any window.</source>
          <target state="translated">如果 &lt;code&gt;face-remapping-alist&lt;/code&gt; 是本地缓冲区，则其本地值仅在该缓冲区内有效。如果 &lt;code&gt;face-remapping-alist&lt;/code&gt; 使用 &lt;code&gt;(:filtered&amp;nbsp;(:window&amp;nbsp;&lt;var&gt;param&lt;/var&gt;&amp;nbsp;&lt;var&gt;val&lt;/var&gt;)&amp;nbsp;&lt;var&gt;spec&lt;/var&gt;)&lt;/code&gt; 包含仅适用于某些窗口的人脸，则该人脸仅在与过滤条件匹配的窗口中生效（请参见&lt;a href=&quot;special-properties#Special-Properties&quot;&gt;特殊属性&lt;/a&gt;）。要暂时关闭面部过滤，请将 &lt;code&gt;face-filters-always-match&lt;/code&gt; 绑定到非 &lt;code&gt;nil&lt;/code&gt; 值，然后所有面部过滤器将匹配任何窗口。</target>
        </trans-unit>
        <trans-unit id="9b1649a5b7a065e83379816410d80d87cebacd78" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;file-remote-p&lt;/code&gt; returns the same identifier for two different filenames, that means they are stored on the same file system and can be accessed locally with respect to each other. This means, for example, that it is possible to start a remote process accessing both files at the same time. Implementers of file name handlers need to ensure this principle is valid.</source>
          <target state="translated">如果 &lt;code&gt;file-remote-p&lt;/code&gt; 为两个不同的文件名返回相同的标识符，则意味着它们存储在同一文件系统中，并且可以相对于彼此进行本地访问。例如，这意味着可以启动同时访问两个文件的远程进程。文件名处理程序的实现者需要确保该原理有效。</target>
        </trans-unit>
        <trans-unit id="a2c637ab9601d46a392ea3a8b2632dd7d555d20f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;foo&lt;/code&gt; ever returns non-&lt;code&gt;nil&lt;/code&gt;, we stop immediately and return a list of &lt;var&gt;i&lt;/var&gt; and &lt;var&gt;j&lt;/var&gt;. If &lt;code&gt;foo&lt;/code&gt; always returns &lt;code&gt;nil&lt;/code&gt;, the &lt;code&gt;catch&lt;/code&gt; returns normally, and the value is &lt;code&gt;nil&lt;/code&gt;, since that is the result of the &lt;code&gt;while&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;foo&lt;/code&gt; 返回non- &lt;code&gt;nil&lt;/code&gt; ，我们将立即停止并返回 &lt;var&gt;i&lt;/var&gt; 和 &lt;var&gt;j&lt;/var&gt; 的列表。如果 &lt;code&gt;foo&lt;/code&gt; 始终返回 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;catch&lt;/code&gt; 正常返回，并且值为 &lt;code&gt;nil&lt;/code&gt; ，因为那是 &lt;code&gt;while&lt;/code&gt; 的结果。</target>
        </trans-unit>
        <trans-unit id="7a4e5486651ab7df7edadaca89bf4d93f09bf583" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;forward-line&lt;/code&gt; encounters the beginning or end of the buffer (or of the accessible portion) before finding that many lines, it sets point there. No error is signaled.</source>
          <target state="translated">如果在找到那么多行之前，前 &lt;code&gt;forward-line&lt;/code&gt; 遇到了缓冲区（或可访问部分）的开始或结尾，它将在此处设置点。无错误信号。</target>
        </trans-unit>
        <trans-unit id="5a2d827e470d5b406aef6074dfda99815a4dff0f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;inhibit-field-text-motion&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function ignores field boundaries.</source>
          <target state="translated">如果 &lt;code&gt;inhibit-field-text-motion&lt;/code&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则此函数将忽略字段边界。</target>
        </trans-unit>
        <trans-unit id="51043c8efef0439b6507b16e43134a965d115d5b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;inhibit-quit&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt; on entry to &lt;code&gt;with-local-quit&lt;/code&gt;, it only executes the &lt;var&gt;body&lt;/var&gt;, and setting &lt;code&gt;quit-flag&lt;/code&gt; causes a normal quit. However, if &lt;code&gt;inhibit-quit&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt; so that ordinary quitting is delayed, a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;quit-flag&lt;/code&gt; triggers a special kind of local quit. This ends the execution of &lt;var&gt;body&lt;/var&gt; and exits the &lt;code&gt;with-local-quit&lt;/code&gt; body with &lt;code&gt;quit-flag&lt;/code&gt; still non-&lt;code&gt;nil&lt;/code&gt;, so that another (ordinary) quit will happen as soon as that is allowed. If &lt;code&gt;quit-flag&lt;/code&gt; is already non-&lt;code&gt;nil&lt;/code&gt; at the beginning of &lt;var&gt;body&lt;/var&gt;, the local quit happens immediately and the body doesn&amp;rsquo;t execute at all.</source>
          <target state="translated">如果 &lt;code&gt;inhibit-quit&lt;/code&gt; 在进入 &lt;code&gt;with-local-quit&lt;/code&gt; -quit时为 &lt;code&gt;nil&lt;/code&gt; ，则它仅执行 &lt;var&gt;body&lt;/var&gt; ，并且设置 &lt;code&gt;quit-flag&lt;/code&gt; 会导致正常退出。但是，如果 &lt;code&gt;inhibit-quit&lt;/code&gt; 是非 &lt;code&gt;nil&lt;/code&gt; ，使普通戒烟延迟，非 &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;quit-flag&lt;/code&gt; 触发器一种特殊的地方退出。这将结束 &lt;var&gt;body&lt;/var&gt; 的执行，并退出 &lt;code&gt;quit-flag&lt;/code&gt; 仍为 &lt;code&gt;nil&lt;/code&gt; 的 &lt;code&gt;with-local-quit&lt;/code&gt; 主体，以便在允许的情况下尽快发生另一个（普通）退出。如果 &lt;code&gt;quit-flag&lt;/code&gt; 已经是不 &lt;code&gt;nil&lt;/code&gt; 在 &lt;var&gt;body&lt;/var&gt; 开始时，局部戒烟立即发生，身体根本不执行。</target>
        </trans-unit>
        <trans-unit id="7f8c74035a8cb997496d0b611c7ea870cf10da8a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;inhibit-read-only&lt;/code&gt; is &lt;code&gt;t&lt;/code&gt;, all &lt;code&gt;read-only&lt;/code&gt; character properties have no effect. If &lt;code&gt;inhibit-read-only&lt;/code&gt; is a list, then &lt;code&gt;read-only&lt;/code&gt; character properties have no effect if they are members of the list (comparison is done with &lt;code&gt;eq&lt;/code&gt;).</source>
          <target state="translated">如果 &lt;code&gt;inhibit-read-only&lt;/code&gt; 为 &lt;code&gt;t&lt;/code&gt; ，则所有 &lt;code&gt;read-only&lt;/code&gt; 字符属性均无效。如果 &lt;code&gt;inhibit-read-only&lt;/code&gt; 是一个列表，则 &lt;code&gt;read-only&lt;/code&gt; 字符属性如果是列表的成员，则无效（与 &lt;code&gt;eq&lt;/code&gt; 进行比较）。</target>
        </trans-unit>
        <trans-unit id="c55cfdc2ceba604d0d2a19cee341d55451cc14e3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;initial-buffer-choice&lt;/code&gt; is a string, it visits the file (or directory) with that name. If it is a function, it calls the function with no arguments and selects the buffer that it returns. If one file is given as a command line argument, that file is visited and its buffer displayed alongside &lt;code&gt;initial-buffer-choice&lt;/code&gt;. If more than one file is given, all of the files are visited and the</source>
          <target state="translated">如果 &lt;code&gt;initial-buffer-choice&lt;/code&gt; 是一个字符串，它将使用该名称访问文件（或目录）。如果它是一个函数，它将不带任何参数地调用该函数，并选择返回的缓冲区。如果给定一个文件作为命令行参数，则将访问该文件，并将其缓冲区显示在 &lt;code&gt;initial-buffer-choice&lt;/code&gt; 旁边。如果给出多个文件，则将访问所有文件，并且</target>
        </trans-unit>
        <trans-unit id="84f9cee38c1da88e0c1e0c6c21024290eeb74a02" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;initialize&lt;/code&gt; is interpreted, a new list &lt;code&gt;(nil)&lt;/code&gt; is constructed each time &lt;code&gt;initialize&lt;/code&gt; is called. Thus, no side effect survives between calls. If &lt;code&gt;initialize&lt;/code&gt; is compiled, then the macro &lt;code&gt;empty-object&lt;/code&gt; is expanded during compilation, producing a single constant &lt;code&gt;(nil)&lt;/code&gt; that is reused and altered each time &lt;code&gt;initialize&lt;/code&gt; is called.</source>
          <target state="translated">如果解释了 &lt;code&gt;initialize&lt;/code&gt; ，则每次调用 &lt;code&gt;initialize&lt;/code&gt; 时都会构造一个新列表 &lt;code&gt;(nil)&lt;/code&gt; 。因此，两次调用之间没有副作用。如果对 &lt;code&gt;initialize&lt;/code&gt; 进行了编译，则宏 &lt;code&gt;empty-object&lt;/code&gt; 将在编译期间扩展，从而生成单个常量 &lt;code&gt;(nil)&lt;/code&gt; ，每次调用 &lt;code&gt;initialize&lt;/code&gt; 时，该常量都将被重用和更改。</target>
        </trans-unit>
        <trans-unit id="89d03bfa14a3a599ab9f3507a4557cb5f601f879" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;keyboard-translate-table&lt;/code&gt; is a char-table (see &lt;a href=&quot;char_002dtables#Char_002dTables&quot;&gt;Char-Tables&lt;/a&gt;), then each character read from the keyboard is looked up in this char-table. If the value found there is non-&lt;code&gt;nil&lt;/code&gt;, then it is used instead of the actual input character.</source>
          <target state="translated">如果 &lt;code&gt;keyboard-translate-table&lt;/code&gt; 是一个字符表（请参见&lt;a href=&quot;char_002dtables#Char_002dTables&quot;&gt;Char-Tables&lt;/a&gt;），那么将从键盘读取的每个字符都在该字符表中查找。如果找到的值是非 &lt;code&gt;nil&lt;/code&gt; ，则使用它代替实际的输入字符。</target>
        </trans-unit>
        <trans-unit id="1725c27d3e93d3aa95bcc95ca06516787abfd6a9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;load&lt;/code&gt; can&amp;rsquo;t find the file to load, then normally it signals a &lt;code&gt;file-error&lt;/code&gt; (with &amp;lsquo;</source>
          <target state="translated">如果 &lt;code&gt;load&lt;/code&gt; 找不到要加载的文件，则通常会发出 &lt;code&gt;file-error&lt;/code&gt; （带有'</target>
        </trans-unit>
        <trans-unit id="499e59af9185ce89a3a1d0eded66faf420e4b84a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;logand&lt;/code&gt; is not passed any argument, it returns a value of -1. This number is an identity element for &lt;code&gt;logand&lt;/code&gt; because its binary representation consists entirely of ones. If &lt;code&gt;logand&lt;/code&gt; is passed just one argument, it returns that argument.</source>
          <target state="translated">如果 &lt;code&gt;logand&lt;/code&gt; 没有传递任何参数，则返回值-1。此数字是 &lt;code&gt;logand&lt;/code&gt; 的标识元素，因为其二进制表示形式完全由1组成。如果 &lt;code&gt;logand&lt;/code&gt; 传递给一个参数，它将返回该参数。</target>
        </trans-unit>
        <trans-unit id="93d523e894576ecda8f58bfe39e7f8ce8e569887" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;map-y-or-n-p&lt;/code&gt; is called in a command that was invoked using the mouse&amp;mdash;more precisely, if &lt;code&gt;last-nonmenu-event&lt;/code&gt; (see &lt;a href=&quot;command-loop-info#Command-Loop-Info&quot;&gt;Command Loop Info&lt;/a&gt;) is either &lt;code&gt;nil&lt;/code&gt; or a list&amp;mdash;then it uses a dialog box or pop-up menu to ask the question. In this case, it does not use keyboard input or the echo area. You can force use either of the mouse or of keyboard input by binding &lt;code&gt;last-nonmenu-event&lt;/code&gt; to a suitable value around the call.</source>
          <target state="translated">如果在使用鼠标调用的命令中调用了 &lt;code&gt;map-y-or-n-p&lt;/code&gt; ，更确切地说，如果 &lt;code&gt;last-nonmenu-event&lt;/code&gt; （请参见&lt;a href=&quot;command-loop-info#Command-Loop-Info&quot;&gt;Command Loop Info&lt;/a&gt;）为 &lt;code&gt;nil&lt;/code&gt; 或列表，那么它将使用对话框或弹出窗口菜单问问题。在这种情况下，它不使用键盘输入或回声区域。通过将 &lt;code&gt;last-nonmenu-event&lt;/code&gt; 绑定到调用周围的适当值，可以强制使用鼠标或键盘输入。</target>
        </trans-unit>
        <trans-unit id="f8c296e21aa128d3c0f5c66d8dba7e532539e929" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;nil&lt;/code&gt; appears in the list, it separates the left-hand items from the right-hand items; items that precede the &lt;code&gt;nil&lt;/code&gt; appear on the left, and items that follow the &lt;code&gt;nil&lt;/code&gt; appear on the right. If you don&amp;rsquo;t include a &lt;code&gt;nil&lt;/code&gt; in the list, then approximately half the items appear on each side.</source>
          <target state="translated">如果 &lt;code&gt;nil&lt;/code&gt; 出现在列表中，则它将左侧项目与右侧项目分开； &lt;code&gt;nil&lt;/code&gt; 之前的项目显示在左侧， &lt;code&gt;nil&lt;/code&gt; 之后的项目显示在右侧。如果您未在列表中添加 &lt;code&gt;nil&lt;/code&gt; ，则大约有一半的项目会出现在每一侧。</target>
        </trans-unit>
        <trans-unit id="5515e6fd078c4efad5af2f66657ba62ae9a530b6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;nil&lt;/code&gt; is not a valid value for the alternative, then it is essential to specify a valid default with &lt;code&gt;:value&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;nil&lt;/code&gt; 不是替代值的有效值，则必须使用 &lt;code&gt;:value&lt;/code&gt; 指定有效的默认值。</target>
        </trans-unit>
        <trans-unit id="25ef9611d8559538ef93f907db7709b2ec8d4a9c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;nil&lt;/code&gt;, connection-local variables are ignored. This variable shall be changed temporarily only in special modes.</source>
          <target state="translated">如果为 &lt;code&gt;nil&lt;/code&gt; ，则忽略连接局部变量。该变量只能在特殊模式下临时更改。</target>
        </trans-unit>
        <trans-unit id="df8d7f12804cc1e9e78af17bced00f10cca6b517" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;nil&lt;/code&gt;, directory-local variables are ignored. This variable may be useful for modes that want to ignore directory-locals while still respecting file-local variables (see &lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;File Local Variables&lt;/a&gt;).</source>
          <target state="translated">如果为 &lt;code&gt;nil&lt;/code&gt; ，则忽略目录局部变量。对于希望在忽略目录本地变量的同时仍然遵循文件本地变量的模式，此变量可能很有用（请参阅&lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;文件本地变量&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="4230ba0cfc94e6df0cc531710a6014f6be93acbc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;nil&lt;/code&gt;, the usual minibuffer exit commands work regardless of the input in the minibuffer.</source>
          <target state="translated">如果为 &lt;code&gt;nil&lt;/code&gt; ，则无论迷你缓冲区中的输入如何，通常的迷你缓冲区退出命令都将起作用。</target>
        </trans-unit>
        <trans-unit id="45945d579cd4d0ee9fb57f6593154b8c0695e1b2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;process-environment&lt;/code&gt; contains multiple elements that specify the same environment variable, the first of these elements specifies the variable, and the others are ignored.</source>
          <target state="translated">如果 &lt;code&gt;process-environment&lt;/code&gt; 包含指定同一环境变量的多个元素，则这些元素中的第一个指定变量，其余元素被忽略。</target>
        </trans-unit>
        <trans-unit id="658e89416338bf46256f4560192964179bf3b56a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;read-event&lt;/code&gt; gets an event that is defined as a help character, then in some cases &lt;code&gt;read-event&lt;/code&gt; processes the event directly without returning. See &lt;a href=&quot;help-functions#Help-Functions&quot;&gt;Help Functions&lt;/a&gt;. Certain other events, called &lt;em&gt;special events&lt;/em&gt;, are also processed directly within &lt;code&gt;read-event&lt;/code&gt; (see &lt;a href=&quot;special-events#Special-Events&quot;&gt;Special Events&lt;/a&gt;).</source>
          <target state="translated">如果 &lt;code&gt;read-event&lt;/code&gt; 获取定义为帮助字符的事件，则在某些情况下， &lt;code&gt;read-event&lt;/code&gt; 将直接处理该事件而不会返回。请参阅&lt;a href=&quot;help-functions#Help-Functions&quot;&gt;帮助功能&lt;/a&gt;。某些其他事件（称为&lt;em&gt;特殊事件&lt;/em&gt;）也可以在 &lt;code&gt;read-event&lt;/code&gt; 直接处理（请参见&lt;a href=&quot;special-events#Special-Events&quot;&gt;特殊事件&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="5d06f0e4d682a5f002456d54bb3256adfff73c15" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;read-key-sequence&lt;/code&gt; receives a drag event that has no key binding, and the corresponding click event does have a binding, it changes the drag event into a click event at the drag&amp;rsquo;s starting position. This means that you don&amp;rsquo;t have to distinguish between click and drag events unless you want to.</source>
          <target state="translated">如果 &lt;code&gt;read-key-sequence&lt;/code&gt; 接收到没有键绑定的拖动事件，并且相应的click事件确实具有绑定，则它将拖动事件在拖动的开始位置更改为click事件。这意味着除非您愿意，否则不必区分单击和拖动事件。</target>
        </trans-unit>
        <trans-unit id="28fc97f8044b3adc13b5e680b4ce0e7bd56344c6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;sequence&lt;/code&gt; is a vector or string, &lt;code&gt;delete&lt;/code&gt; returns a copy of &lt;code&gt;sequence&lt;/code&gt; with all elements &lt;code&gt;equal&lt;/code&gt; to &lt;code&gt;object&lt;/code&gt; removed.</source>
          <target state="translated">如果 &lt;code&gt;sequence&lt;/code&gt; 是向量或字符串，则 &lt;code&gt;delete&lt;/code&gt; 将返回 &lt;code&gt;sequence&lt;/code&gt; 的副本，其中所有 &lt;code&gt;equal&lt;/code&gt; &lt;code&gt;object&lt;/code&gt; 元素都将被删除。</target>
        </trans-unit>
        <trans-unit id="298a11ee0b66bdcd79a658002f445e0b0094cc31" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;shift-select-mode&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt; and the current command was invoked via shift translation (see &lt;a href=&quot;key-sequence-input#Key-Sequence-Input&quot;&gt;shift-translation&lt;/a&gt;), this function sets the mark and temporarily activates the region, unless the region was already temporarily activated in this way. Otherwise, if the region has been activated temporarily, it deactivates the mark and restores the variable &lt;code&gt;transient-mark-mode&lt;/code&gt; to its earlier value.</source>
          <target state="translated">如果 &lt;code&gt;shift-select-mode&lt;/code&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，并且当前的命令是通过shift转换调用的（请参见&lt;a href=&quot;key-sequence-input#Key-Sequence-Input&quot;&gt;shift-translation&lt;/a&gt;），则此功能会设置标记并临时激活该区域，除非已经以这种方式临时激活了该区域。否则，如果该区域已被临时激活，则它将禁用标记并将变量 &lt;code&gt;transient-mark-mode&lt;/code&gt; 恢复为先前的值。</target>
        </trans-unit>
        <trans-unit id="a06308f1911ac30acacef0585da85d0b1bd73fab" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;t&lt;/code&gt;, the usual minibuffer exit commands won&amp;rsquo;t exit unless the input completes to an element of &lt;var&gt;collection&lt;/var&gt;.</source>
          <target state="translated">如果为 &lt;code&gt;t&lt;/code&gt; ，除非输入完成对元素的 &lt;var&gt;collection&lt;/var&gt; 否则普通的minibuffer退出命令不会退出。</target>
        </trans-unit>
        <trans-unit id="416953e1029905198c9875acb2a41ab2a373fb4e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;unintern&lt;/code&gt; does delete a symbol, it returns &lt;code&gt;t&lt;/code&gt;. Otherwise it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;unintern&lt;/code&gt; 确实删除了符号，则返回 &lt;code&gt;t&lt;/code&gt; 。否则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="99904379b7e94ef6e87179b145c37ee8f04eb2dc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;window-combination-limit&lt;/code&gt; is &lt;code&gt;t&lt;/code&gt;, splitting &lt;var&gt;W2&lt;/var&gt; in the initial configuration of our scenario would have produced this:</source>
          <target state="translated">如果 &lt;code&gt;window-combination-limit&lt;/code&gt; 为 &lt;code&gt;t&lt;/code&gt; ，则在我们的方案的初始配置中拆分 &lt;var&gt;W2&lt;/var&gt; 会产生以下结果：</target>
        </trans-unit>
        <trans-unit id="87fe06563bc8cb77eb764ca481b895cf55f1d053" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;window-combination-resize&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;, splitting window &lt;var&gt;W3&lt;/var&gt; leaves the size of &lt;var&gt;W2&lt;/var&gt; unchanged:</source>
          <target state="translated">如果 &lt;code&gt;window-combination-resize&lt;/code&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则分割窗口 &lt;var&gt;W3&lt;/var&gt; 会使 &lt;var&gt;W2&lt;/var&gt; 的大小保持不变：</target>
        </trans-unit>
        <trans-unit id="530e02fad58c9e59a8e4781a12a36578627ba60f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;window-combination-resize&lt;/code&gt; is &lt;code&gt;t&lt;/code&gt;, splitting &lt;var&gt;W3&lt;/var&gt; instead leaves all three live windows with approximately the same height:</source>
          <target state="translated">如果 &lt;code&gt;window-combination-resize&lt;/code&gt; 为 &lt;code&gt;t&lt;/code&gt; ，则拆分 &lt;var&gt;W3&lt;/var&gt; 会使所有三个活动窗口的高度大致相同：</target>
        </trans-unit>
        <trans-unit id="a80fdc55c9afdffa2ef6fc18444834540f21ea51" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;accept-defaults&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;lookup-key&lt;/code&gt; considers default bindings as well as bindings for the specific events in &lt;var&gt;key&lt;/var&gt;. Otherwise, &lt;code&gt;lookup-key&lt;/code&gt; reports only bindings for the specific sequence &lt;var&gt;key&lt;/var&gt;, ignoring default bindings except when you explicitly ask about them. (To do this, supply &lt;code&gt;t&lt;/code&gt; as an element of &lt;var&gt;key&lt;/var&gt;; see &lt;a href=&quot;format-of-keymaps#Format-of-Keymaps&quot;&gt;Format of Keymaps&lt;/a&gt;.)</source>
          <target state="translated">如果 &lt;var&gt;accept-defaults&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;lookup-key&lt;/code&gt; 会考虑默认绑定以及 &lt;var&gt;key&lt;/var&gt; 中特定事件的绑定。否则， &lt;code&gt;lookup-key&lt;/code&gt; 仅报告特定序列 &lt;var&gt;key&lt;/var&gt; 绑定，而忽略默认绑定，除非您明确询问它们。（为此，提供 &lt;code&gt;t&lt;/code&gt; 作为 &lt;var&gt;key&lt;/var&gt; 的元素；请参见&lt;a href=&quot;format-of-keymaps#Format-of-Keymaps&quot;&gt;Keymap的Format&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="eccc5343e553c8ea98b7f06f96b277d88506315c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;action&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be a display action to pass to &lt;code&gt;display-buffer&lt;/code&gt; (see &lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;Choosing Window&lt;/a&gt;). Alternatively, a non-&lt;code&gt;nil&lt;/code&gt;, non-list value means to pop to a window other than the selected one&amp;mdash;even if the buffer is already displayed in the selected window.</source>
          <target state="translated">如果 &lt;var&gt;action&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则应该是传递给 &lt;code&gt;display-buffer&lt;/code&gt; 的显示操作（请参见&lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;选择窗口&lt;/a&gt;）。可替代地，一个非 &lt;code&gt;nil&lt;/code&gt; 的，非列表值的装置，以弹出到比其他的窗口所选择的一个，即使缓冲器已经被显示在所选择的窗口。</target>
        </trans-unit>
        <trans-unit id="5eff92c7085cf3a076a169c6eddb3f266b6428ed" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;after-find-file-from-revert-buffer&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that means this call was from &lt;code&gt;revert-buffer&lt;/code&gt;. This has no direct effect, but some mode functions and hook functions check the value of this variable.</source>
          <target state="translated">如果 &lt;var&gt;after-find-file-from-revert-buffer&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则表示此调用来自 &lt;code&gt;revert-buffer&lt;/code&gt; 。这没有直接作用，但是某些模式函数和挂钩函数会检查此变量的值。</target>
        </trans-unit>
        <trans-unit id="5d9e1513f9a0d483e7ac718b8c0d8ed27e7b235f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;alist&lt;/var&gt; also contains a &lt;code&gt;window&lt;/code&gt; entry, its value specifies a reference window. That value can be a special symbol like &lt;code&gt;main&lt;/code&gt; which stands for the selected frame&amp;rsquo;s main window (see &lt;a href=&quot;side-window-options-and-functions#Side-Window-Options-and-Functions&quot;&gt;Side Window Options and Functions&lt;/a&gt;) or &lt;code&gt;root&lt;/code&gt; standing for the selected frame&amp;rsquo;s root window (see &lt;a href=&quot;windows-and-frames#Windows-and-Frames&quot;&gt;Windows and Frames&lt;/a&gt;). It can also specify an arbitrary valid window. Any other value (or omitting the &lt;code&gt;window&lt;/code&gt; entry entirely) means to use the selected window as reference window.</source>
          <target state="translated">如果 &lt;var&gt;alist&lt;/var&gt; 还包含一个 &lt;code&gt;window&lt;/code&gt; 项，其值指定参考窗口。该值可以像一个特殊符号 &lt;code&gt;main&lt;/code&gt; 其代表选定帧的主窗口（见&lt;a href=&quot;side-window-options-and-functions#Side-Window-Options-and-Functions&quot;&gt;侧窗选项和功能&lt;/a&gt;）或 &lt;code&gt;root&lt;/code&gt; 站立选定帧的根窗口（&lt;a href=&quot;windows-and-frames#Windows-and-Frames&quot;&gt;窗口和框架&lt;/a&gt;）。它还可以指定一个任意有效窗口。任何其他值（或完全省略 &lt;code&gt;window&lt;/code&gt; 条目）意味着将所选窗口用作参考窗口。</target>
        </trans-unit>
        <trans-unit id="725fcd581a9446ad3b9a2e6d59fd55f8a35bcd2e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;alist&lt;/var&gt; contains a &lt;code&gt;mode&lt;/code&gt; entry, its value specifes a major mode (a symbol) or a list of major modes. If &lt;var&gt;alist&lt;/var&gt; contains no &lt;code&gt;mode&lt;/code&gt; entry, the current major mode of &lt;var&gt;buffer&lt;/var&gt; is used instead. A window is a candidate if it displays a buffer whose mode derives from one of the modes specified thusly.</source>
          <target state="translated">如果 &lt;var&gt;alist&lt;/var&gt; 包含 &lt;code&gt;mode&lt;/code&gt; 条目，则其值指定主要模式（符号）或主要模式列表。如果 &lt;var&gt;alist&lt;/var&gt; 不包含任何 &lt;code&gt;mode&lt;/code&gt; 进入，目前主要模式的 &lt;var&gt;buffer&lt;/var&gt; 来代替。如果窗口显示一个缓冲区，该缓冲区的模式派生自由此指定的模式之一，则该窗口为候选项。</target>
        </trans-unit>
        <trans-unit id="56ee9592cb469b948fa327f04dabd6f070822801" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;alist&lt;/var&gt; contains a &lt;code&gt;reusable-frames&lt;/code&gt; entry (see &lt;a href=&quot;buffer-display-action-alists#Buffer-Display-Action-Alists&quot;&gt;Buffer Display Action Alists&lt;/a&gt;), its value determines which frames to search for a suitable window. If &lt;var&gt;alist&lt;/var&gt; contains no &lt;code&gt;reusable-frames&lt;/code&gt; entry, this function searches just the selected frame if &lt;code&gt;display-buffer-reuse-frames&lt;/code&gt; and &lt;code&gt;pop-up-frames&lt;/code&gt; are both &lt;code&gt;nil&lt;/code&gt;; it searches all frames on the current terminal if either of those variables is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;var&gt;alist&lt;/var&gt; 包含一个 &lt;code&gt;reusable-frames&lt;/code&gt; 条目（请参阅&lt;a href=&quot;buffer-display-action-alists#Buffer-Display-Action-Alists&quot;&gt;Buffer Display Action Alists&lt;/a&gt;），则其值确定要搜索合适的窗口的帧。如果 &lt;var&gt;alist&lt;/var&gt; 不包含 &lt;code&gt;reusable-frames&lt;/code&gt; 条目，则在 &lt;code&gt;display-buffer-reuse-frames&lt;/code&gt; 和 &lt;code&gt;pop-up-frames&lt;/code&gt; 均为 &lt;code&gt;nil&lt;/code&gt; 时，此函数仅搜索选定的帧；如果这些变量中的任何一个为非 &lt;code&gt;nil&lt;/code&gt; ,它将搜索当前终端上的所有帧。</target>
        </trans-unit>
        <trans-unit id="10852a2d11b31a0dbce952a8e6e7973867256dee" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;alist&lt;/var&gt; contains a &lt;code&gt;window-min-height&lt;/code&gt; entry, this function ensures that the window used is or can become at least as high as specified by that entry&amp;rsquo;s value. Note that this is only a guarantee. In order to actually resize the window used, &lt;var&gt;alist&lt;/var&gt; must also provide an appropriate &lt;code&gt;window-height&lt;/code&gt; entry.</source>
          <target state="translated">如果 &lt;var&gt;alist&lt;/var&gt; 包含 &lt;code&gt;window-min-height&lt;/code&gt; 条目，则此功能可确保所使用的窗口等于或可以变得至少等于该条目的值指定的高度。请注意，这仅仅是保证。为了实际调整使用的窗口， &lt;var&gt;alist&lt;/var&gt; 还必须提供相应的 &lt;code&gt;window-height&lt;/code&gt; 条目。</target>
        </trans-unit>
        <trans-unit id="6c28abdd4a6e44e09ed2f169546521564e174bdd" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;alist&lt;/var&gt; contains a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;inhibit-same-window&lt;/code&gt; entry, the selected window is not eligible for use. A dedicated window is usable only if it already shows &lt;var&gt;buffer&lt;/var&gt;. If &lt;var&gt;alist&lt;/var&gt; contains a &lt;code&gt;previous-window&lt;/code&gt; entry, the window specified by that entry is usable even if it never showed &lt;var&gt;buffer&lt;/var&gt; before.</source>
          <target state="translated">如果 &lt;var&gt;alist&lt;/var&gt; 包含非 &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;inhibit-same-window&lt;/code&gt; 项，所选的窗户是没有资格使用。专用窗口仅在已经显示 &lt;var&gt;buffer&lt;/var&gt; 时才可用。如果 &lt;var&gt;alist&lt;/var&gt; 包含上一个 &lt;code&gt;previous-window&lt;/code&gt; 条目，则即使该条目之前从未显示过 &lt;var&gt;buffer&lt;/var&gt; ，该条目指定的窗口仍可用。</target>
        </trans-unit>
        <trans-unit id="f5b1257b6d1ae29bb71bb8238269e77d2901c6c5" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;alist&lt;/var&gt; has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;allow-no-window&lt;/code&gt; entry, then this function does not display &lt;var&gt;buffer&lt;/var&gt; and returns the symbol &lt;code&gt;fail&lt;/code&gt;. This constitutes the only exception to the convention that an action function returns either &lt;code&gt;nil&lt;/code&gt; or a window showing &lt;var&gt;buffer&lt;/var&gt;. If &lt;var&gt;alist&lt;/var&gt; has no such &lt;code&gt;allow-no-window&lt;/code&gt; entry, this function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;var&gt;alist&lt;/var&gt; 有非 &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;allow-no-window&lt;/code&gt; 进入，那么这个功能不显示 &lt;var&gt;buffer&lt;/var&gt; 并返回符号 &lt;code&gt;fail&lt;/code&gt; 。这是操作函数返回 &lt;code&gt;nil&lt;/code&gt; 或显示 &lt;var&gt;buffer&lt;/var&gt; 的窗口的约定的唯一例外。如果 &lt;var&gt;alist&lt;/var&gt; 没有这样的 &lt;code&gt;allow-no-window&lt;/code&gt; 条目，则此函数返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3635ed42481c3086b85728f6223ec2571754c106" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;alist&lt;/var&gt; has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;frame-predicate&lt;/code&gt; entry, its value is a function taking one argument (a frame), returning non-&lt;code&gt;nil&lt;/code&gt; if the frame is a candidate; this function replaces the default predicate.</source>
          <target state="translated">如果 &lt;var&gt;alist&lt;/var&gt; 具有非 &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;frame-predicate&lt;/code&gt; 条目，则其值是带有一个参数（一个框架）的函数，如果该框架是候选者，则返回 &lt;code&gt;nil&lt;/code&gt; 否则，返回0。此函数替换默认谓词。</target>
        </trans-unit>
        <trans-unit id="b1d2c4d2032162e5b2a0313d933be86efef19ec2" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;alist&lt;/var&gt; has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;inhibit-same-window&lt;/code&gt; entry, the selected window is not eligible for reuse. The set of frames to search for a window already displaying &lt;var&gt;buffer&lt;/var&gt; can be specified with the help of the &lt;code&gt;reusable-frames&lt;/code&gt; action alist entry. If &lt;var&gt;alist&lt;/var&gt; contains no &lt;code&gt;reusable-frames&lt;/code&gt; entry, this function searches just the selected frame.</source>
          <target state="translated">如果 &lt;var&gt;alist&lt;/var&gt; 有非 &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;inhibit-same-window&lt;/code&gt; 项，所选的窗户是没有资格获得重用。可以在 &lt;code&gt;reusable-frames&lt;/code&gt; 动作列表项的帮助下指定用于搜索已经显示 &lt;var&gt;buffer&lt;/var&gt; 的窗口的框架集。如果 &lt;var&gt;alist&lt;/var&gt; 不包含 &lt;code&gt;reusable-frames&lt;/code&gt; 进入，此功能只搜索选定的帧。</target>
        </trans-unit>
        <trans-unit id="5cb7f9d4b67ff68e7892acfa28fb819a212c07ab" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;alist&lt;/var&gt; has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;inhibit-same-window&lt;/code&gt; entry, the selected window is not used; thus if the selected frame has a single window, it is not used.</source>
          <target state="translated">如果 &lt;var&gt;alist&lt;/var&gt; 具有非 &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;inhibit-same-window&lt;/code&gt; 条目中，不使用所选择的窗口; 因此，如果所选框架只有一个窗口，则不使用它。</target>
        </trans-unit>
        <trans-unit id="c0de7397591c376720ad6e08bbe5dbfcdf6663c9" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;along-with-file&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that means to assume that the former visited file has been renamed to &lt;var&gt;filename&lt;/var&gt;. In this case, the command does not change the buffer&amp;rsquo;s modified flag, nor the buffer&amp;rsquo;s recorded last file modification time as reported by &lt;code&gt;visited-file-modtime&lt;/code&gt; (see &lt;a href=&quot;modification-time#Modification-Time&quot;&gt;Modification Time&lt;/a&gt;). If &lt;var&gt;along-with-file&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this function clears the recorded last file modification time, after which &lt;code&gt;visited-file-modtime&lt;/code&gt; returns zero.</source>
          <target state="translated">如果 &lt;var&gt;along-with-file&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则意味着假定先前访问的文件已重命名为 &lt;var&gt;filename&lt;/var&gt; 。在这种情况下，该命令不会更改缓冲区的修改标志，也不会更改该缓冲区记录的上次文件修改时间（如 &lt;code&gt;visited-file-modtime&lt;/code&gt; 所报告的那样）（请参见&lt;a href=&quot;modification-time#Modification-Time&quot;&gt;修改时间&lt;/a&gt;）。如果 &lt;var&gt;along-with-file&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则此功能将清除记录的上次文件修改时间，此后 &lt;code&gt;visited-file-modtime&lt;/code&gt; 返回零。</target>
        </trans-unit>
        <trans-unit id="30bff7bbc4b4d504b4c4f0335aafbcd1c86f1727" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;append&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then the specified text is appended to the existing file contents (if any). If &lt;var&gt;append&lt;/var&gt; is a number, &lt;code&gt;write-region&lt;/code&gt; seeks to that byte offset from the start of the file and writes the data from there.</source>
          <target state="translated">如果 &lt;var&gt;append&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则将指定的文本附加到现有文件内容（如果有）上。如果 &lt;var&gt;append&lt;/var&gt; 是一个数字，则 &lt;code&gt;write-region&lt;/code&gt; 查找到距文件开头的字节偏移量，然后从该位置开始写入数据。</target>
        </trans-unit>
        <trans-unit id="357d4724bb98908fbf6106edd4a5dd56e6a47ad9" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;arg&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, then the replacement text is the previous element of the kill ring. If &lt;var&gt;arg&lt;/var&gt; is numeric, the replacement is the &lt;var&gt;arg&lt;/var&gt;th previous kill. If &lt;var&gt;arg&lt;/var&gt; is negative, a more recent kill is the replacement.</source>
          <target state="translated">如果 &lt;var&gt;arg&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则替换文本是kill环的前一个元素。如果 &lt;var&gt;arg&lt;/var&gt; 为数字，则替换为先前杀死的 &lt;var&gt;arg&lt;/var&gt; 。如果 &lt;var&gt;arg&lt;/var&gt; 为负，则替换为最近的一次终止。</target>
        </trans-unit>
        <trans-unit id="716ebd39a60d464c65ae89843a32d535f16a8ff7" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;arg&lt;/var&gt; is a non-&lt;code&gt;nil&lt;/code&gt; list (which occurs interactively when the user types</source>
          <target state="translated">如果 &lt;var&gt;arg&lt;/var&gt; 是非 &lt;code&gt;nil&lt;/code&gt; 列表（当用户键入时交互式出现</target>
        </trans-unit>
        <trans-unit id="76d1e59bdc71eea56fe6bd2e5ce73b2d640d780f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;arg&lt;/var&gt; is a number, then &lt;code&gt;yank&lt;/code&gt; inserts the &lt;var&gt;arg&lt;/var&gt;th most recently killed text&amp;mdash;the &lt;var&gt;arg&lt;/var&gt;th element of the kill ring list, counted cyclically from the front, which is considered the first element for this purpose.</source>
          <target state="translated">如果 &lt;var&gt;arg&lt;/var&gt; 是一个数字，则 &lt;code&gt;yank&lt;/code&gt; 插入 &lt;var&gt;arg&lt;/var&gt; 第一个最近终止的文本- &lt;var&gt;arg&lt;/var&gt; 环列表中的arg th元素，从前面开始循环计数，被认为是第一个元素。</target>
        </trans-unit>
        <trans-unit id="7ce96ea9cffa29463867b2524fd328bce2c60ceb" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;arg&lt;/var&gt; is positive, enable backward compatibility with old-style structs.</source>
          <target state="translated">如果 &lt;var&gt;arg&lt;/var&gt; 为正，则启用与旧式结构的向后兼容性。</target>
        </trans-unit>
        <trans-unit id="4f45dc822c7ed8081aeb8ceadb802788aa326da7" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;argdesc&lt;/var&gt; is a list, the arguments will be dynamically bound before executing the byte code. If &lt;var&gt;argdesc&lt;/var&gt; is an integer, the arguments will be instead pushed onto the stack of the byte-code interpreter, before executing the code.</source>
          <target state="translated">如果 &lt;var&gt;argdesc&lt;/var&gt; 是一个列表，则在执行字节代码之前将动态绑定参数。如果 &lt;var&gt;argdesc&lt;/var&gt; 是整数，则在执行代码之前，将把参数推入字节码解释器的堆栈。</target>
        </trans-unit>
        <trans-unit id="eceeaa804b4bd82db12929224d66562d4251ec1b" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;arglist&lt;/var&gt; is present, it must be a list of zero or more argument names, and &lt;var&gt;name&lt;/var&gt; is then defined as a parameterized form. When used in an &lt;code&gt;rx&lt;/code&gt; expression as &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; &lt;var&gt;arg&lt;/var&gt;&amp;hellip;)&lt;/code&gt;, each &lt;var&gt;arg&lt;/var&gt; will replace the corresponding argument name inside &lt;var&gt;rx-form&lt;/var&gt;.</source>
          <target state="translated">如果存在 &lt;var&gt;arglist&lt;/var&gt; ，则它必须是零个或多个参数名称的列表，然后将 &lt;var&gt;name&lt;/var&gt; 定义为参数化形式。在 &lt;code&gt;rx&lt;/code&gt; 表达式中用作 &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; &lt;var&gt;arg&lt;/var&gt;&amp;hellip;)&lt;/code&gt; ，每个 &lt;var&gt;arg&lt;/var&gt; 将替换 &lt;var&gt;rx-form&lt;/var&gt; 中的相应参数名称。</target>
        </trans-unit>
        <trans-unit id="6c12a27a11102d26f4496706eca6c32079ac52f1" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;array&lt;/var&gt; is a string and &lt;var&gt;object&lt;/var&gt; is not a character, a &lt;code&gt;wrong-type-argument&lt;/code&gt; error results.</source>
          <target state="translated">如果 &lt;var&gt;array&lt;/var&gt; 是一个字符串，而 &lt;var&gt;object&lt;/var&gt; 不是一个字符，则会导致 &lt;code&gt;wrong-type-argument&lt;/code&gt; 错误。</target>
        </trans-unit>
        <trans-unit id="265a6b2f7fc7386b51f273b08b3c8e5e990553dd" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;array&lt;/var&gt; is a string and &lt;var&gt;object&lt;/var&gt; is not a character, a &lt;code&gt;wrong-type-argument&lt;/code&gt; error results. The function converts a unibyte string to multibyte if necessary to insert a character.</source>
          <target state="translated">如果 &lt;var&gt;array&lt;/var&gt; 是一个字符串，而 &lt;var&gt;object&lt;/var&gt; 不是一个字符，则会导致 &lt;code&gt;wrong-type-argument&lt;/code&gt; 错误。如果需要插入字符，该函数会将单字节字符串转换为多字节。</target>
        </trans-unit>
        <trans-unit id="3e9d30b9e0b939d5cef41a836fd9dabc52901d98" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;ascent&lt;/var&gt; is &lt;code&gt;center&lt;/code&gt;, the image is vertically centered around a centerline which would be the vertical centerline of text drawn at the position of the image, in the manner specified by the text properties and overlays that apply to the image.</source>
          <target state="translated">如果 &lt;var&gt;ascent&lt;/var&gt; 为 &lt;code&gt;center&lt;/code&gt; ，则以文本属性和应用于图像的叠加层指定的方式，将图像垂直围绕中心线居中对齐，该中心线将是在图像位置绘制的文本的垂直中心线。</target>
        </trans-unit>
        <trans-unit id="9d2ab54a37af86fc55fd32a062910778188cbb37" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;ascent&lt;/var&gt; is a number, that percentage of the image&amp;rsquo;s height is used for its ascent.</source>
          <target state="translated">如果 &lt;var&gt;ascent&lt;/var&gt; 是一个数字，则将图像高度的该百分比用于其上升。</target>
        </trans-unit>
        <trans-unit id="d1aa1a557c52350cdb14f9a63b67296d95f98c5c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;backward-only&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the function deletes spaces and tabs before point, but not after point.</source>
          <target state="translated">如果&amp;ldquo; &lt;var&gt;backward-only&lt;/var&gt; &amp;rdquo;为非 &lt;code&gt;nil&lt;/code&gt; ，则该函数删除point之前的空格和制表符，而不删除point之后的空格和制表符。</target>
        </trans-unit>
        <trans-unit id="872984f07dc0786d85e8faa005659fb02084fd39" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;base-buffer&lt;/var&gt; is an indirect buffer, its base buffer is used as the base for the new buffer. If, in addition, &lt;var&gt;clone&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the initial state is copied from the actual base buffer, not from &lt;var&gt;base-buffer&lt;/var&gt;.</source>
          <target state="translated">如果 &lt;var&gt;base-buffer&lt;/var&gt; 是间接缓冲区，则将其基本缓冲区用作新缓冲区的基础。此外，如果 &lt;var&gt;clone&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则从实际的基本缓冲区而不是从 &lt;var&gt;base-buffer&lt;/var&gt; 复制初始状态。</target>
        </trans-unit>
        <trans-unit id="fb3afd540c99dea47f329a5d50a243a6d102f880" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;base&lt;/var&gt; is specified, &lt;var&gt;frame-number&lt;/var&gt; counts relative to the topmost frame whose &lt;var&gt;function&lt;/var&gt; is &lt;var&gt;base&lt;/var&gt;.</source>
          <target state="translated">如果指定了 &lt;var&gt;base&lt;/var&gt; ，则 &lt;var&gt;frame-number&lt;/var&gt; 相对于其 &lt;var&gt;function&lt;/var&gt; 为 &lt;var&gt;base&lt;/var&gt; 的最顶层帧进行计数。</target>
        </trans-unit>
        <trans-unit id="ff37c39bbde49bd63d59835bc5a58fcb6554eb8e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;beg&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; are non-&lt;code&gt;nil&lt;/code&gt;, they should be numbers that are byte offsets specifying the portion of the file to insert. In this case, &lt;var&gt;visit&lt;/var&gt; must be &lt;code&gt;nil&lt;/code&gt;. For example,</source>
          <target state="translated">如果 &lt;var&gt;beg&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则它们应为数字，它们是字节偏移量，指定要插入的文件部分。在这种情况下， &lt;var&gt;visit&lt;/var&gt; 必须为 &lt;code&gt;nil&lt;/code&gt; 。例如，</target>
        </trans-unit>
        <trans-unit id="15ebb4c67bdf87b14cdc398a93c82e1e4ccd9562" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;body-form&lt;/var&gt; finishes normally, &lt;code&gt;unwind-protect&lt;/code&gt; returns the value of &lt;var&gt;body-form&lt;/var&gt;, after it evaluates the &lt;var&gt;cleanup-forms&lt;/var&gt;. If &lt;var&gt;body-form&lt;/var&gt; does not finish, &lt;code&gt;unwind-protect&lt;/code&gt; does not return any value in the normal sense.</source>
          <target state="translated">如果 &lt;var&gt;body-form&lt;/var&gt; 正常完成，则 &lt;code&gt;unwind-protect&lt;/code&gt; 在评估 &lt;var&gt;cleanup-forms&lt;/var&gt; 之后将返回 &lt;var&gt;body-form&lt;/var&gt; 的值。如果 &lt;var&gt;body-form&lt;/var&gt; 未完成，则正常情况下， &lt;code&gt;unwind-protect&lt;/code&gt; 不会返回任何值。</target>
        </trans-unit>
        <trans-unit id="45998480fd55bebcf7f680c6d080569c3f94f1be" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;body&lt;/var&gt; changes the current buffer, &lt;code&gt;save-restriction&lt;/code&gt; still restores the restrictions on the original buffer (the buffer whose restrictions it saved from), but it does not restore the identity of the current buffer.</source>
          <target state="translated">如果 &lt;var&gt;body&lt;/var&gt; 更改了当前缓冲区，则 &lt;code&gt;save-restriction&lt;/code&gt; 仍会恢复对原始缓冲区（从中保存其限制的缓冲区）的限制，但不会恢复当前缓冲区的身份。</target>
        </trans-unit>
        <trans-unit id="d801531c4c8be84ff0a18d9dc265942df4275d1a" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;bool&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; for a stream connection, return without waiting for the connection to complete. When the connection succeeds or fails, Emacs will call the sentinel function, with a second argument matching &lt;code&gt;&quot;open&quot;&lt;/code&gt; (if successful) or &lt;code&gt;&quot;failed&quot;&lt;/code&gt;. The default is to block, so that &lt;code&gt;make-network-process&lt;/code&gt; does not return until the connection has succeeded or failed.</source>
          <target state="translated">如果 &lt;var&gt;bool&lt;/var&gt; 是不 &lt;code&gt;nil&lt;/code&gt; 的流连接，返回，而不等待连接完成。当连接成功或失败时，Emacs将调用sendinel函数，并使用第二个参数匹配 &lt;code&gt;&quot;open&quot;&lt;/code&gt; （如果成功）或 &lt;code&gt;&quot;failed&quot;&lt;/code&gt; 。默认设置为阻塞，以便在连接成功或失败之前不返回 &lt;code&gt;make-network-process&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb3eb7e0749f22ae1ca2c8bce34b1fd45e6e87d1" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;broadcast-flag&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; for a datagram process, the process will receive datagram packet sent to a broadcast address, and be able to send packets to a broadcast address. This is ignored for a stream connection.</source>
          <target state="translated">如果 &lt;var&gt;broadcast-flag&lt;/var&gt; 是不 &lt;code&gt;nil&lt;/code&gt; 的数据报的过程，该过程将接收发送到广播地址的数据报文包，并能够将数据包发送到广播地址。对于流连接，将忽略它。</target>
        </trans-unit>
        <trans-unit id="ef125bc9fc136fa0e0e0ab2fa0d5fb599148add8" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;buffer-or-name&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or omitted, this means to bury the current buffer. In addition, if the current buffer is displayed in the selected window, this makes sure that the window is either deleted or another buffer is shown in it. More precisely, if the selected window is dedicated (see &lt;a href=&quot;dedicated-windows#Dedicated-Windows&quot;&gt;Dedicated Windows&lt;/a&gt;) and there are other windows on its frame, the window is deleted. If it is the only window on its frame and that frame is not the only frame on its terminal, the frame is dismissed by calling the function specified by &lt;code&gt;frame-auto-hide-function&lt;/code&gt; (see &lt;a href=&quot;quitting-windows#Quitting-Windows&quot;&gt;Quitting Windows&lt;/a&gt;). Otherwise, it calls &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; (see &lt;a href=&quot;window-history#Window-History&quot;&gt;Window History&lt;/a&gt;) to show another buffer in that window. If &lt;var&gt;buffer-or-name&lt;/var&gt; is displayed in some other window, it remains displayed there.</source>
          <target state="translated">如果 &lt;var&gt;buffer-or-name&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; 或省略，则表示要埋入当前缓冲区。此外，如果当前缓冲区显示在选定的窗口中，则可以确保删除该窗口或在其中显示另一个缓冲区。更准确地说，如果所选窗口是专用窗口（请参见&amp;ldquo;&lt;a href=&quot;dedicated-windows#Dedicated-Windows&quot;&gt;专用窗口&amp;rdquo;&lt;/a&gt;），并且其框架上还有其他窗口，则该窗口将被删除。如果它是框架上唯一的窗口，并且不是终端上的唯一框架，则可以通过调用 &lt;code&gt;frame-auto-hide-function&lt;/code&gt; 指定的函数来消除该框架（请参阅&lt;a href=&quot;quitting-windows#Quitting-Windows&quot;&gt;退出Windows&lt;/a&gt;）。否则，它将调用 &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; （请参阅&lt;a href=&quot;window-history#Window-History&quot;&gt;窗口历史记录）&lt;/a&gt;）以在该窗口中显示另一个缓冲区。如果在其他窗口中显示&amp;ldquo; &lt;var&gt;buffer-or-name&lt;/var&gt; &amp;rdquo;,则该窗口将保持显示状态。</target>
        </trans-unit>
        <trans-unit id="73ee4af92f1d60661454a2b9237f8c2a64df3433" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;buffer-or-name&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it defaults to the buffer returned by &lt;code&gt;other-buffer&lt;/code&gt; (see &lt;a href=&quot;buffer-list#Buffer-List&quot;&gt;Buffer List&lt;/a&gt;). If &lt;var&gt;buffer-or-name&lt;/var&gt; is a string that is not the name of any existing buffer, this function creates a new buffer with that name; the new buffer&amp;rsquo;s major mode is determined by the variable &lt;code&gt;major-mode&lt;/code&gt; (see &lt;a href=&quot;major-modes#Major-Modes&quot;&gt;Major Modes&lt;/a&gt;).</source>
          <target state="translated">如果 &lt;var&gt;buffer-or-name&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则默认为 &lt;code&gt;other-buffer&lt;/code&gt; 返回的缓冲区（请参见&lt;a href=&quot;buffer-list#Buffer-List&quot;&gt;Buffer List&lt;/a&gt;）。如果 &lt;var&gt;buffer-or-name&lt;/var&gt; 是不是任何现有缓冲区名称的字符串，则此函数将使用该名称创建一个新缓冲区；新缓冲区的主模式由变量 &lt;code&gt;major-mode&lt;/code&gt; 确定（请参见&lt;a href=&quot;major-modes#Major-Modes&quot;&gt;Major Modes&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="30220adb1d551b10adf8267d04f1188fef5af9ed" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;buffer-or-name&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it defaults to the buffer returned by &lt;code&gt;other-buffer&lt;/code&gt; (see &lt;a href=&quot;buffer-list#Buffer-List&quot;&gt;Buffer List&lt;/a&gt;). If &lt;var&gt;buffer-or-name&lt;/var&gt; is a string that is not the name of any existing buffer, this function creates a new buffer with that name; the new buffer&amp;rsquo;s major mode is determined by the variable &lt;code&gt;major-mode&lt;/code&gt; (see &lt;a href=&quot;major-modes#Major-Modes&quot;&gt;Major Modes&lt;/a&gt;). In any case, that buffer is made current and returned, even when no suitable window was found to display it.</source>
          <target state="translated">如果 &lt;var&gt;buffer-or-name&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则默认为 &lt;code&gt;other-buffer&lt;/code&gt; 返回的缓冲区（请参见&lt;a href=&quot;buffer-list#Buffer-List&quot;&gt;Buffer List&lt;/a&gt;）。如果 &lt;var&gt;buffer-or-name&lt;/var&gt; 是不是任何现有缓冲区名称的字符串，则此函数将使用该名称创建一个新缓冲区；新缓冲区的主模式由变量 &lt;code&gt;major-mode&lt;/code&gt; 确定（请参见&lt;a href=&quot;major-modes#Major-Modes&quot;&gt;Major Modes&lt;/a&gt;）。在任何情况下，即使找不到合适的窗口来显示该缓冲区，该缓冲区也将变为当前状态并返回。</target>
        </trans-unit>
        <trans-unit id="b7d24a16b304acac1c2810700295f803c144750f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;buffer-or-name&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be a buffer or a buffer name. Then &lt;code&gt;describe-bindings&lt;/code&gt; lists that buffer&amp;rsquo;s bindings, instead of the current buffer&amp;rsquo;s.</source>
          <target state="translated">如果 &lt;var&gt;buffer-or-name&lt;/var&gt; 为non - &lt;code&gt;nil&lt;/code&gt; ，则应为缓冲区或缓冲区名称。然后 &lt;code&gt;describe-bindings&lt;/code&gt; 列出该缓冲区的绑定，而不是当前缓冲区的绑定。</target>
        </trans-unit>
        <trans-unit id="3ac7dd105d336cb89cf157d6acc6b787000950d4" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;buffer&lt;/var&gt; is a list of the form &lt;code&gt;(&lt;var&gt;real-destination&lt;/var&gt;
&lt;var&gt;error-destination&lt;/var&gt;)&lt;/code&gt;, and &lt;var&gt;error-destination&lt;/var&gt; names a file, then the same remarks as for &lt;var&gt;infile&lt;/var&gt; apply.</source>
          <target state="translated">如果 &lt;var&gt;buffer&lt;/var&gt; 是形式的列表 &lt;code&gt;(&lt;var&gt;real-destination&lt;/var&gt; &lt;var&gt;error-destination&lt;/var&gt;)&lt;/code&gt; ，并且 &lt;var&gt;error-destination&lt;/var&gt; 为文件命名，则适用与 &lt;var&gt;infile&lt;/var&gt; 相同的注释。</target>
        </trans-unit>
        <trans-unit id="1d0359aa3fe25fc69dc07e6ca29b4f66d0837d41" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;buffer&lt;/var&gt; is not supplied (or if it is not a live buffer), then &lt;code&gt;other-buffer&lt;/code&gt; returns the first buffer in the selected frame&amp;rsquo;s local buffer list. (If &lt;var&gt;frame&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it returns the first buffer in &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s local buffer list instead.)</source>
          <target state="translated">如果未提供 &lt;var&gt;buffer&lt;/var&gt; （或者它不是活动缓冲区），则 &lt;code&gt;other-buffer&lt;/code&gt; 返回所选帧的本地缓冲区列表中的第一个缓冲区。（如果 &lt;var&gt;frame&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，那么它将返回该 &lt;var&gt;frame&lt;/var&gt; 的本地缓冲区列表中的第一个缓冲区。）</target>
        </trans-unit>
        <trans-unit id="ae252e707395bc41b8753bd347560dd7ec882bb8" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;buffer&lt;/var&gt; is omitted, &lt;var&gt;overlay&lt;/var&gt; stays in the same buffer it was already associated with; if &lt;var&gt;overlay&lt;/var&gt; was deleted, it goes into the current buffer.</source>
          <target state="translated">如果省略 &lt;var&gt;buffer&lt;/var&gt; ，则 &lt;var&gt;overlay&lt;/var&gt; 保留在与之关联的缓冲区中；如果 &lt;var&gt;overlay&lt;/var&gt; 被删除，它将进入当前缓冲区。</target>
        </trans-unit>
        <trans-unit id="62e99f0349fc78c10ecefce6b7cf7c32af231e43" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;change-entry-data&lt;/var&gt; is non-nil, this function modifies the underlying data (usually the column descriptor in the list &lt;code&gt;tabulated-list-entries&lt;/code&gt;) by setting the column descriptor of the vector to &lt;code&gt;desc&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;var&gt;change-entry-data&lt;/var&gt; 不为null，则此函数通过将向量的列描述符设置为 &lt;code&gt;desc&lt;/code&gt; 来修改基础数据（通常是list &lt;code&gt;tabulated-list-entries&lt;/code&gt; 中的列描述符）。</target>
        </trans-unit>
        <trans-unit id="8b3fcbb637fb6e97d1cf042302558188a16c6d3b" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;clone&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then the indirect buffer originally shares the state of &lt;var&gt;base-buffer&lt;/var&gt; such as major mode, minor modes, buffer local variables and so on. If &lt;var&gt;clone&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt; the indirect buffer&amp;rsquo;s state is set to the default state for new buffers.</source>
          <target state="translated">如果 &lt;var&gt;clone&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则间接缓冲区最初共享 &lt;var&gt;base-buffer&lt;/var&gt; 的状态，例如主模式，次模式，缓冲区局部变量等。如果忽略了 &lt;var&gt;clone&lt;/var&gt; 或 &lt;code&gt;nil&lt;/code&gt; ,则将间接缓冲区的状态设置为新缓冲区的默认状态。</target>
        </trans-unit>
        <trans-unit id="8cdd24220db1d0a2a7b0244ba86e37dee93b6147" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;coding-system&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it specifies a coding system to use to encode the text; if omitted or &lt;code&gt;nil&lt;/code&gt;, the default coding system is used, like in &lt;code&gt;secure-hash&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;var&gt;coding-system&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则指定用于对文本进行编码的编码系统；否则为null。如果省略或为 &lt;code&gt;nil&lt;/code&gt; ，则使用默认的编码系统，就像 &lt;code&gt;secure-hash&lt;/code&gt; 中一样。</target>
        </trans-unit>
        <trans-unit id="9a690380927ee5901372591d5284051354cad0dd" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;coding-system&lt;/var&gt; supports all Emacs characters, the value is &lt;code&gt;(emacs)&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;var&gt;coding-system&lt;/var&gt; 支持所有Emacs字符，则值为 &lt;code&gt;(emacs)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c03cf0b0fe61615ffb23203353ac7b6995c851e4" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;coding-system&lt;/var&gt; supports all ISO-2022 charsets, the value is &lt;code&gt;iso-2022&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;var&gt;coding-system&lt;/var&gt; 支持所有ISO-2022字符集，则值为 &lt;code&gt;iso-2022&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1c45cff040aa275e73d4391255baaed8c1a9935b" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;coding-system&lt;/var&gt; supports all Unicode characters, the value is &lt;code&gt;(unicode)&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;var&gt;coding-system&lt;/var&gt; 支持所有Unicode字符，则值为 &lt;code&gt;(unicode)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dfdc2a64d7544067e7e61270065fa6764571fba2" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;coding-system&lt;/var&gt; supports all the characters in the internal coding system used by Emacs version 21 (prior to the implementation of internal Unicode support), the value is &lt;code&gt;emacs-mule&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;var&gt;coding-system&lt;/var&gt; 支持Emacs版本21使用的内部编码系统中的所有字符（在实现内部Unicode支持之前），则值为 &lt;code&gt;emacs-mule&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="72d145ade7fc0912780a0c8ec20e78dafd6c98ed" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;coding&lt;/var&gt; (or what returned by the above function) is &lt;code&gt;undecided&lt;/code&gt;, the normal code-detection is performed.</source>
          <target state="translated">如果 &lt;code&gt;undecided&lt;/code&gt; &lt;var&gt;coding&lt;/var&gt; （或上述函数返回的编码），则执行常规代码检测。</target>
        </trans-unit>
        <trans-unit id="db20a52e4f2ab94009b490489e0e0e947d8da479" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;coding&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the default rules for finding the coding system will apply. See &lt;a href=&quot;default-coding-systems#Default-Coding-Systems&quot;&gt;Default Coding Systems&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;var&gt;coding&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则将使用查找编码系统的默认规则。请参阅&lt;a href=&quot;default-coding-systems#Default-Coding-Systems&quot;&gt;默认编码系统&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e516a0a97b1977a087e5164b5a0d70fb7b458de2" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;coding&lt;/var&gt; is a function name, the function should take one argument, a list of all arguments passed to &lt;code&gt;find-operation-coding-system&lt;/code&gt;. It must return a coding system or a cons cell containing two coding systems. This value has the same meaning as described above.</source>
          <target state="translated">如果 &lt;var&gt;coding&lt;/var&gt; 是一个函数名，则该函数应采用一个参数，即传递给 &lt;code&gt;find-operation-coding-system&lt;/code&gt; 的所有参数的列表。它必须返回一个编码系统或包含两个编码系统的cons单元。该值具有与上述相同的含义。</target>
        </trans-unit>
        <trans-unit id="c25a8876b39ac3574e8bf63a8345161a254638ec" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;coding&lt;/var&gt; is a symbol, it specifies the coding system to be used for both reading and writing of data from and to the connection. If &lt;var&gt;coding&lt;/var&gt; is a cons cell &lt;code&gt;(&lt;var&gt;decoding&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;encoding&lt;/var&gt;)&lt;/code&gt;, then &lt;var&gt;decoding&lt;/var&gt; will be used for reading and &lt;var&gt;encoding&lt;/var&gt; for writing.</source>
          <target state="translated">如果 &lt;var&gt;coding&lt;/var&gt; 是符号，则它指定用于从连接读取数据和向连接写入数据的编码系统。如果 &lt;var&gt;coding&lt;/var&gt; 是cons单元 &lt;code&gt;(&lt;var&gt;decoding&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;encoding&lt;/var&gt;)&lt;/code&gt; ，然后 &lt;var&gt;decoding&lt;/var&gt; 将被用于读取和 &lt;var&gt;encoding&lt;/var&gt; 进行写入。</target>
        </trans-unit>
        <trans-unit id="d1bd442a66c3355fcb27059a02ff9b74b3a5221a" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;coding&lt;/var&gt; is a symbol, it specifies the coding system to be used for both reading and writing of data from and to the connection. If &lt;var&gt;coding&lt;/var&gt; is a cons cell &lt;code&gt;(&lt;var&gt;decoding&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;encoding&lt;/var&gt;)&lt;/code&gt;, then &lt;var&gt;decoding&lt;/var&gt; will be used for reading and &lt;var&gt;encoding&lt;/var&gt; for writing. The coding system used for encoding the data written to the program is also used for encoding the command-line arguments (but not the program itself, whose file name is encoded as any other file name; see &lt;a href=&quot;encoding-and-i_002fo#Encoding-and-I_002fO&quot;&gt;file-name-coding-system&lt;/a&gt;).</source>
          <target state="translated">如果 &lt;var&gt;coding&lt;/var&gt; 是符号，则它指定用于从连接读取数据和向连接写入数据的编码系统。如果 &lt;var&gt;coding&lt;/var&gt; 是cons单元 &lt;code&gt;(&lt;var&gt;decoding&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;encoding&lt;/var&gt;)&lt;/code&gt; ，然后 &lt;var&gt;decoding&lt;/var&gt; 将被用于读取和 &lt;var&gt;encoding&lt;/var&gt; 进行写入。用于对写入程序的数据进行编码的编码系统也用于对命令行参数进行编码（但不对程序本身进行编码，其文件名被编码为任何其他文件名；请参见&lt;a href=&quot;encoding-and-i_002fo#Encoding-and-I_002fO&quot;&gt;file-name-coding-system&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="449d3445b04d9cb68fc2ecf9e5b920a09b6f5983" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;coding&lt;/var&gt; is a symbol, it specifies the coding system used for both reading and writing for this process. If &lt;var&gt;coding&lt;/var&gt; is a cons &lt;code&gt;(&lt;var&gt;decoding&lt;/var&gt; . &lt;var&gt;encoding&lt;/var&gt;)&lt;/code&gt;, &lt;var&gt;decoding&lt;/var&gt; is used for reading, and &lt;var&gt;encoding&lt;/var&gt; is used for writing. If not specified, the default is to determine the coding systems from the data itself.</source>
          <target state="translated">如果 &lt;var&gt;coding&lt;/var&gt; 是符号，则它指定用于此过程的读写的编码系统。如果 &lt;var&gt;coding&lt;/var&gt; 是一个缺点 &lt;code&gt;(&lt;var&gt;decoding&lt;/var&gt; . &lt;var&gt;encoding&lt;/var&gt;)&lt;/code&gt; ， &lt;var&gt;decoding&lt;/var&gt; 用于读取和 &lt;var&gt;encoding&lt;/var&gt; 被用于写入。如果未指定，则默认值为根据数据本身确定编码系统。</target>
        </trans-unit>
        <trans-unit id="caca2ec15cd30de5941dbd96f74f120c1d738f6a" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;collection&lt;/var&gt; is a function, it is called with three arguments, the values &lt;var&gt;string&lt;/var&gt;, &lt;var&gt;predicate&lt;/var&gt; and &lt;code&gt;lambda&lt;/code&gt;; whatever it returns, &lt;code&gt;test-completion&lt;/code&gt; returns in turn.</source>
          <target state="translated">如果 &lt;var&gt;collection&lt;/var&gt; 是一个函数，则使用三个参数调用它，值分别是 &lt;var&gt;string&lt;/var&gt; ， &lt;var&gt;predicate&lt;/var&gt; 和 &lt;code&gt;lambda&lt;/code&gt; 。无论返回什么， &lt;code&gt;test-completion&lt;/code&gt; 都会依次返回。</target>
        </trans-unit>
        <trans-unit id="ca2a1f418cb352b69583eb17fa2d9b44dac15d82" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;collection&lt;/var&gt; is a function, it is called with three arguments: &lt;var&gt;string&lt;/var&gt;, &lt;var&gt;predicate&lt;/var&gt; and &lt;code&gt;t&lt;/code&gt;; then &lt;code&gt;all-completions&lt;/code&gt; returns whatever the function returns. See &lt;a href=&quot;programmed-completion#Programmed-Completion&quot;&gt;Programmed Completion&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;var&gt;collection&lt;/var&gt; 是一个函数，则使用三个参数调用它： &lt;var&gt;string&lt;/var&gt; ， &lt;var&gt;predicate&lt;/var&gt; 和 &lt;code&gt;t&lt;/code&gt; ；然后， &lt;code&gt;all-completions&lt;/code&gt; 返回函数返回的结果。请参阅&lt;a href=&quot;programmed-completion#Programmed-Completion&quot;&gt;计划完成&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d8d26785fda217f7aa5fa5be119f924830d3f3f1" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;collection&lt;/var&gt; is a hash table, then the keys that are strings or symbols are the possible completions. Other keys are ignored.</source>
          <target state="translated">如果 &lt;var&gt;collection&lt;/var&gt; 是哈希表，则可能是字符串或符号的键。其他键将被忽略。</target>
        </trans-unit>
        <trans-unit id="03a3a72fe50a62182d86841f39a24658f71d481d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;collection&lt;/var&gt; is a list, the permissible completions are specified by the elements of the list, each of which should be either a string, or a cons cell whose &lt;small&gt;CAR&lt;/small&gt; is either a string or a symbol (a symbol is converted to a string using &lt;code&gt;symbol-name&lt;/code&gt;). If the list contains elements of any other type, those are ignored.</source>
          <target state="translated">如果 &lt;var&gt;collection&lt;/var&gt; 是一个列表，则允许的补全由列表的元素指定，每个元素应为字符串或一个cons单元，其&lt;small&gt;CAR&lt;/small&gt;可以为字符串或符号（将符号使用 &lt;code&gt;symbol-name&lt;/code&gt; 转换为字符串-name）。如果列表包含任何其他类型的元素，则将忽略这些元素。</target>
        </trans-unit>
        <trans-unit id="17b2fdd0ee2028630e087d441c9b063ee52b3238" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;collection&lt;/var&gt; is an obarray (see &lt;a href=&quot;creating-symbols#Creating-Symbols&quot;&gt;Creating Symbols&lt;/a&gt;), the names of all symbols in the obarray form the set of permissible completions.</source>
          <target state="translated">如果 &lt;var&gt;collection&lt;/var&gt; 是一个obarray（请参阅&lt;a href=&quot;creating-symbols#Creating-Symbols&quot;&gt;创建Symbols&lt;/a&gt;），则obarray中所有符号的名称构成了一组允许的补全。</target>
        </trans-unit>
        <trans-unit id="19b9a16753d1d0c76a3a6fe6f8c263167e69e05b" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;color&lt;/var&gt; is not defined, the value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果未定义 &lt;var&gt;color&lt;/var&gt; ，则值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ffcc3ecedd737ce5e0ed4c18a6c95fed6c4807d" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;command&lt;/var&gt; is a symbol, its function definition is used in its place. A symbol with an &lt;code&gt;autoload&lt;/code&gt; definition counts as a command if it was declared to stand for an interactively callable function. Such a definition is handled by loading the specified library and then rechecking the definition of the symbol.</source>
          <target state="translated">如果 &lt;var&gt;command&lt;/var&gt; 是符号，则在其位置使用其功能定义。如果声明具有 &lt;code&gt;autoload&lt;/code&gt; 定义的符号代表可交互调用的函数，则该符号将视为命令。通过加载指定的库，然后重新检查符号的定义来处理这样的定义。</target>
        </trans-unit>
        <trans-unit id="91834090d16746cc0a5b8ad769ced61892aa2e17" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;command&lt;/var&gt; is remapped to &lt;var&gt;other-command&lt;/var&gt;:</source>
          <target state="translated">如果将 &lt;var&gt;command&lt;/var&gt; 重新映射到 &lt;var&gt;other-command&lt;/var&gt; ：</target>
        </trans-unit>
        <trans-unit id="64c2820fa5c51d14e61e48664da4ba16306846b8" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;condition&lt;/var&gt; has the value &lt;code&gt;nil&lt;/code&gt;, and no &lt;var&gt;else-forms&lt;/var&gt; are given, &lt;code&gt;if&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;var&gt;condition&lt;/var&gt; 的值为 &lt;code&gt;nil&lt;/code&gt; ，并且没有给出 &lt;var&gt;else-forms&lt;/var&gt; ， &lt;code&gt;if&lt;/code&gt; 返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="65ea0151f32adb3d349c5ede7fe9751002bef5d9" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;confirm&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that means to ask for confirmation before overwriting an existing file. Interactively, confirmation is required, unless the user supplies a prefix argument.</source>
          <target state="translated">如果 &lt;var&gt;confirm&lt;/var&gt; 是不 &lt;code&gt;nil&lt;/code&gt; ，这意味着要覆盖现有文件之前要求确认。以交互方式，除非用户提供前缀参数，否则需要确认。</target>
        </trans-unit>
        <trans-unit id="89261659941a2fe8833a37fd0178aa658fcfd67a" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;connected&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function returns &lt;code&gt;nil&lt;/code&gt; even if &lt;var&gt;filename&lt;/var&gt; is remote, if Emacs has no network connection to its host. This is useful when you want to avoid the delay of making connections when they don&amp;rsquo;t exist.</source>
          <target state="translated">如果 &lt;var&gt;connected&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，即使Emacs与其主机之间没有网络连接，即使 &lt;var&gt;filename&lt;/var&gt; 是远程的，此函数也将返回 &lt;code&gt;nil&lt;/code&gt; 。当您要避免在不存在连接时延迟建立连接时，这很有用。</target>
        </trans-unit>
        <trans-unit id="ccf10fd01a9ae8920af21e27033ba6215a2f2ad1" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;count&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; (or a non-&lt;code&gt;nil&lt;/code&gt; list), &lt;code&gt;recenter&lt;/code&gt; puts the line containing point in the middle of the window. If &lt;var&gt;count&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; and &lt;var&gt;redisplay&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function may redraw the frame, according to the value of &lt;code&gt;recenter-redisplay&lt;/code&gt;. Thus, omitting the second argument can be used to countermand the effect of &lt;code&gt;recenter-redisplay&lt;/code&gt; being non-&lt;code&gt;nil&lt;/code&gt;. Interactive calls pass non-&amp;lsquo;nil&amp;rsquo; for &lt;var&gt;redisplay&lt;/var&gt;.</source>
          <target state="translated">如果 &lt;var&gt;count&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; （或非 &lt;code&gt;nil&lt;/code&gt; 列表），则 &lt;code&gt;recenter&lt;/code&gt; 将包含点的行放在窗口中间。如果 &lt;var&gt;count&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; 并且 &lt;var&gt;redisplay&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则此函数可以根据 &lt;code&gt;recenter-redisplay&lt;/code&gt; 的值重新绘制框架。因此，省略第二个参数可以用来 &lt;code&gt;recenter-redisplay&lt;/code&gt; 的效果为非 &lt;code&gt;nil&lt;/code&gt; 。交互式呼叫通过非&amp;ldquo; nil&amp;rdquo;进行 &lt;var&gt;redisplay&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="9fdebe07429389e64290374dbb3657aa3d83f3fd" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;count&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, then point moves to the beginning of the line in the middle of the window. If the absolute value of &lt;var&gt;count&lt;/var&gt; is greater than the size of the window, then point moves to the place that would appear on that screen line if the window were tall enough. This will probably cause the next redisplay to scroll to bring that location onto the screen.</source>
          <target state="translated">如果 &lt;var&gt;count&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则点将移动到窗口中间的行的开头。如果 &lt;var&gt;count&lt;/var&gt; 的绝对值大于窗口的大小，则如果窗口足够高，则点将移动到该屏幕线上出现的位置。这可能会导致下一次重新显示滚动以将该位置显示在屏幕上。</target>
        </trans-unit>
        <trans-unit id="20c71b0115e47a9cdeacc0567e8f374a92d7c2bf" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;count&lt;/var&gt; is a non-negative number, that puts the line containing point &lt;var&gt;count&lt;/var&gt; lines down from the top of the window. If &lt;var&gt;count&lt;/var&gt; is a negative number, then it counts upward from the bottom of the window, so that -1 stands for the last usable line in the window.</source>
          <target state="translated">如果 &lt;var&gt;count&lt;/var&gt; 是非负数，则将包含点 &lt;var&gt;count&lt;/var&gt; 线的线从窗口顶部向下放置。如果 &lt;var&gt;count&lt;/var&gt; 是负数，则它将从窗口底部向上计数，因此-1表示窗口中的最后一条可用行。</target>
        </trans-unit>
        <trans-unit id="0c6a05204e55d15a5590f6031b88f84a12787c0c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;count&lt;/var&gt; is a positive number &lt;var&gt;n&lt;/var&gt;, the search is done &lt;var&gt;n&lt;/var&gt; times; each successive search starts at the end of the previous match. If all these successive searches succeed, the function call succeeds, moving point and returning its new value. Otherwise the function call fails, with results depending on the value of &lt;var&gt;noerror&lt;/var&gt;, as described above. If &lt;var&gt;count&lt;/var&gt; is a negative number -&lt;var&gt;n&lt;/var&gt;, the search is done &lt;var&gt;n&lt;/var&gt; times in the opposite (backward) direction.</source>
          <target state="translated">如果 &lt;var&gt;count&lt;/var&gt; 是一个正数 &lt;var&gt;n&lt;/var&gt; ，则搜索进行 &lt;var&gt;n&lt;/var&gt; 次；每个后续搜索均从上一个匹配项的末尾开始。如果所有这些连续搜索都成功，则函数调用成功，移动点并返回其新值。否则，函数调用将失败，其结果取决于 &lt;var&gt;noerror&lt;/var&gt; 的值，如上所述。如果 &lt;var&gt;count&lt;/var&gt; 是负数 &lt;var&gt;n&lt;/var&gt; ，则在相反（向后）的方向上搜索 &lt;var&gt;n&lt;/var&gt; 次。</target>
        </trans-unit>
        <trans-unit id="3447e606e9bb92e2c519014804ddddc097243c95" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;count&lt;/var&gt; is a positive number, it specifies how many successive occurrences to search for. Point is positioned at the end of the last match. If &lt;var&gt;count&lt;/var&gt; is a negative number, the search is backward and point is positioned at the beginning of the last match.</source>
          <target state="translated">如果 &lt;var&gt;count&lt;/var&gt; 是一个正数，则它指定要搜索的连续次数。点位于最后一场比赛的末尾。如果 &lt;var&gt;count&lt;/var&gt; 是负数，则搜索是向后的，并且点位于最后一个匹配项的开头。</target>
        </trans-unit>
        <trans-unit id="513c3f81cdb51da0678088e92aabe97a7e0afb65" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;count&lt;/var&gt; is negative, it scrolls backward instead. If &lt;var&gt;count&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; (or omitted), the distance scrolled is &lt;code&gt;next-screen-context-lines&lt;/code&gt; lines less than the height of the window&amp;rsquo;s text area.</source>
          <target state="translated">如果 &lt;var&gt;count&lt;/var&gt; 为负，则向后滚动。如果 &lt;var&gt;count&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; （或省略），则滚动的距离是小于窗口文本区域高度的 &lt;code&gt;next-screen-context-lines&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2f6c20f30bca3e0c5f4509b114cced459fb205cb" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;count&lt;/var&gt; is negative, it scrolls forward instead. In other respects, it behaves the same way as &lt;code&gt;scroll-up&lt;/code&gt; does.</source>
          <target state="translated">如果 &lt;var&gt;count&lt;/var&gt; 为负，它将向前滚动。在其他方面，它的行为与 &lt;code&gt;scroll-up&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="75922895621df076b8b2f06a4ce221fe9a219abb" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;count&lt;/var&gt; is zero, then the value is the position of the start of the entire match. Otherwise, &lt;var&gt;count&lt;/var&gt; specifies a subexpression in the regular expression, and the value of the function is the starting position of the match for that subexpression.</source>
          <target state="translated">如果 &lt;var&gt;count&lt;/var&gt; 为零，则该值是整个比赛开始的位置。否则， &lt;var&gt;count&lt;/var&gt; 在正则表达式中指定一个子表达式，并且函数的值是该子表达式的匹配项的起始位置。</target>
        </trans-unit>
        <trans-unit id="8b22ff0641fd7490e741cf6aba4ef42cb4a4f012" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;criteria&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it applies for all remote connections. Therefore, the example above would be equivalent to</source>
          <target state="translated">如果 &lt;var&gt;criteria&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则适用于所有远程连接。因此，上面的示例将等效于</target>
        </trans-unit>
        <trans-unit id="422c6920b8ca5636e0bdb77f86ba33d39b0b2c0c" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;current-name&lt;/var&gt; is a symbol, the warning message says to use &lt;var&gt;current-name&lt;/var&gt; instead of &lt;var&gt;obsolete-name&lt;/var&gt;. &lt;var&gt;current-name&lt;/var&gt; does not need to be an alias for &lt;var&gt;obsolete-name&lt;/var&gt;; it can be a different function with similar functionality. &lt;var&gt;current-name&lt;/var&gt; can also be a string, which serves as the warning message. The message should begin in lower case, and end with a period. It can also be &lt;code&gt;nil&lt;/code&gt;, in which case the warning message provides no additional details.</source>
          <target state="translated">如果 &lt;var&gt;current-name&lt;/var&gt; 是符号，则警告消息会显示使用 &lt;var&gt;current-name&lt;/var&gt; 而不是 &lt;var&gt;obsolete-name&lt;/var&gt; 。 &lt;var&gt;current-name&lt;/var&gt; 不必是 &lt;var&gt;obsolete-name&lt;/var&gt; 的别名；它可以是具有相似功能的其他功能。 &lt;var&gt;current-name&lt;/var&gt; 也可以是一个字符串，用作警告消息。该消息应以小写字母开头，并以句点结尾。也可以为 &lt;code&gt;nil&lt;/code&gt; ，在这种情况下，警告消息不提供其他详细信息。</target>
        </trans-unit>
        <trans-unit id="f0d4713be132244c7c48e0b310f5f3891df5f731" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;current-only&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, only the current buffer is auto-saved.</source>
          <target state="translated">如果 &lt;var&gt;current-only&lt;/var&gt; 不为 &lt;code&gt;nil&lt;/code&gt; ，则仅自动保存当前缓冲区。</target>
        </trans-unit>
        <trans-unit id="2eb351e8e2d1be9f71fb5603248820b0aeb6044f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;customizations&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should consist of alternating &lt;code&gt;defcustom&lt;/code&gt; keywords (typically &lt;code&gt;:group&lt;/code&gt; and &lt;code&gt;:version&lt;/code&gt;) and values to add to the declaration of &lt;code&gt;&lt;var&gt;command&lt;/var&gt;-alternatives&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;var&gt;customizations&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，它应包括交替的 &lt;code&gt;defcustom&lt;/code&gt; 关键字（通常 &lt;code&gt;:group&lt;/code&gt; 和 &lt;code&gt;:version&lt;/code&gt; ）和值添加到的声明 &lt;code&gt;&lt;var&gt;command&lt;/var&gt;-alternatives&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c46136e97a9bf5979379245dd0f6ed51b20fadc0" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;data&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it means to clear out the selection. Otherwise, &lt;var&gt;data&lt;/var&gt; may be a string, a symbol, an integer (or a cons of two integers or list of two integers), an overlay, or a cons of two markers pointing to the same buffer. An overlay or a pair of markers stands for text in the overlay or between the markers. The argument &lt;var&gt;data&lt;/var&gt; may also be a vector of valid non-vector selection values.</source>
          <target state="translated">如果 &lt;var&gt;data&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则意味着清除选择。否则， &lt;var&gt;data&lt;/var&gt; 可以是字符串，符号，整数（或两个整数的缺点或两个整数的列表），覆盖图或指向同一缓冲区的两个标记的缺点。覆盖层或一对标记代表覆盖层中或标记之间的文本。自变量 &lt;var&gt;data&lt;/var&gt; 也可以是有效的非向量选择值的向量。</target>
        </trans-unit>
        <trans-unit id="889bceac456a0197e8d2b55bf560f6dc4dd5b33b" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;default-coding-system&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that is the first coding system to try; if that can handle the text, &lt;code&gt;select-safe-coding-system&lt;/code&gt; returns that coding system. It can also be a list of coding systems; then the function tries each of them one by one. After trying all of them, it next tries the current buffer&amp;rsquo;s value of &lt;code&gt;buffer-file-coding-system&lt;/code&gt; (if it is not &lt;code&gt;undecided&lt;/code&gt;), then the default value of &lt;code&gt;buffer-file-coding-system&lt;/code&gt; and finally the user&amp;rsquo;s most preferred coding system, which the user can set using the command &lt;code&gt;prefer-coding-system&lt;/code&gt; (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Recognize-Coding.html#Recognize-Coding&quot;&gt;Recognizing Coding Systems&lt;/a&gt; in</source>
          <target state="translated">如果 &lt;var&gt;default-coding-system&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则这是第一个尝试的编码系统；如果可以处理文本，则 &lt;code&gt;select-safe-coding-system&lt;/code&gt; 返回该编码系统。它也可以是编码系统的列表；然后函数会逐个尝试每个。在尝试了所有参数之后，接下来将尝试当前缓冲区的 &lt;code&gt;buffer-file-coding-system&lt;/code&gt; 值（如果尚未 &lt;code&gt;undecided&lt;/code&gt; ），然后是 &lt;code&gt;buffer-file-coding-system&lt;/code&gt; 的默认值，最后是用户最喜欢的编码系统，用户可以设定用命令 &lt;code&gt;prefer-coding-system&lt;/code&gt; （参见&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Recognize-Coding.html#Recognize-Coding&quot;&gt;认识编码系统&lt;/a&gt;中</target>
        </trans-unit>
        <trans-unit id="b5f894135fab5d4114345d64ff11564755f2778e" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;default&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; and &lt;var&gt;initial&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;read-directory-name&lt;/code&gt; constructs a substitute default by combining &lt;var&gt;directory&lt;/var&gt; (or the current buffer&amp;rsquo;s default directory if &lt;var&gt;directory&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;) and &lt;var&gt;initial&lt;/var&gt;. If both &lt;var&gt;default&lt;/var&gt; and &lt;var&gt;initial&lt;/var&gt; are &lt;code&gt;nil&lt;/code&gt;, this function uses &lt;var&gt;directory&lt;/var&gt; as substitute default, or the current buffer&amp;rsquo;s default directory if &lt;var&gt;directory&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;var&gt;default&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ,而 &lt;var&gt;initial&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;read-directory-name&lt;/code&gt; 通过组合 &lt;var&gt;directory&lt;/var&gt; （如果 &lt;var&gt;directory&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ,则为当前缓冲区的默认目录）和 &lt;var&gt;initial&lt;/var&gt; 来构造一个替代默认值。如果 &lt;var&gt;default&lt;/var&gt; 和 &lt;var&gt;initial&lt;/var&gt; 均为 &lt;code&gt;nil&lt;/code&gt; ，则此函数使用 &lt;var&gt;directory&lt;/var&gt; 作为替代default；如果 &lt;var&gt;directory&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则使用当前缓冲区的默认目录。</target>
        </trans-unit>
        <trans-unit id="290e83590d59dc15ac38d7b8d71f29443d988f12" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;default&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;read-file-name&lt;/code&gt; tries to find a substitute default to use in its place, which it treats in exactly the same way as if it had been specified explicitly. If &lt;var&gt;default&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, but &lt;var&gt;initial&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then the default is the absolute file name obtained from &lt;var&gt;directory&lt;/var&gt; and &lt;var&gt;initial&lt;/var&gt;. If both &lt;var&gt;default&lt;/var&gt; and &lt;var&gt;initial&lt;/var&gt; are &lt;code&gt;nil&lt;/code&gt; and the buffer is visiting a file, &lt;code&gt;read-file-name&lt;/code&gt; uses the absolute file name of that file as default. If the buffer is not visiting a file, then there is no default. In that case, if the user types</source>
          <target state="translated">如果 &lt;var&gt;default&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;read-file-name&lt;/code&gt; 会尝试查找一个替代默认值以替代其使用，它的处理方式与显式指定的方式完全相同。如果 &lt;var&gt;default&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，但 &lt;var&gt;initial&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则默认值为从 &lt;var&gt;directory&lt;/var&gt; 和 &lt;var&gt;initial&lt;/var&gt; 获得的绝对文件名。如果 &lt;var&gt;default&lt;/var&gt; 和 &lt;var&gt;initial&lt;/var&gt; 均为 &lt;code&gt;nil&lt;/code&gt; 并且缓冲区正在访问文件，则 &lt;code&gt;read-file-name&lt;/code&gt; 默认使用该文件的绝对文件名。如果缓冲区不访问文件，则没有默认值。在这种情况下，如果用户键入</target>
        </trans-unit>
        <trans-unit id="3a7cd80e6c760a181014bda07ac321785a25b4f1" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;default&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then the function returns &lt;var&gt;default&lt;/var&gt; if the user exits the minibuffer with the same non-empty contents that &lt;code&gt;read-file-name&lt;/code&gt; inserted initially. The initial minibuffer contents are always non-empty if &lt;code&gt;insert-default-directory&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, as it is by default. &lt;var&gt;default&lt;/var&gt; is not checked for validity, regardless of the value of &lt;var&gt;require-match&lt;/var&gt;. However, if &lt;var&gt;require-match&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the initial minibuffer contents should be a valid file (or directory) name. Otherwise &lt;code&gt;read-file-name&lt;/code&gt; attempts completion if the user exits without any editing, and does not return &lt;var&gt;default&lt;/var&gt;. &lt;var&gt;default&lt;/var&gt; is also available through the history commands.</source>
          <target state="translated">如果 &lt;var&gt;default&lt;/var&gt; 为non- &lt;code&gt;nil&lt;/code&gt; ，则如果用户退出的minibuffer具有与最初插入的 &lt;code&gt;read-file-name&lt;/code&gt; 相同的非空内容，则函数返回 &lt;var&gt;default&lt;/var&gt; 。如果 &lt;code&gt;insert-default-directory&lt;/code&gt; 为non - &lt;code&gt;nil&lt;/code&gt; ，则初始的迷你缓冲区内容始终为非空值，因为默认情况下是这样。不管 &lt;var&gt;require-match&lt;/var&gt; 的值如何，都不会检查 &lt;var&gt;default&lt;/var&gt; 的有效性。但是，如果 &lt;var&gt;require-match&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则最小缓冲区的初始内容应为有效的文件（或目录）名称。否则 &lt;code&gt;read-file-name&lt;/code&gt; 如果用户不进行任何编辑就退出，则尝试完成操作，并且不返回 &lt;var&gt;default&lt;/var&gt; 。还可以通过history命令获得 &lt;var&gt;default&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="61c747fafcf538add509f3d60069e5679f3cb7ff" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;defaults&lt;/var&gt; is a symbol, &lt;code&gt;read-regexp&lt;/code&gt; consults the value of the variable &lt;code&gt;read-regexp-defaults-function&lt;/code&gt; (see below), and if that is non-&lt;code&gt;nil&lt;/code&gt; uses it in preference to &lt;var&gt;defaults&lt;/var&gt;. The value in this case should be either:</source>
          <target state="translated">如果 &lt;var&gt;defaults&lt;/var&gt; 是符号，则 &lt;code&gt;read-regexp&lt;/code&gt; 会查询变量 &lt;code&gt;read-regexp-defaults-function&lt;/code&gt; 的值（请参见下文），如果非 &lt;code&gt;nil&lt;/code&gt; 则优先使用它作为 &lt;var&gt;defaults&lt;/var&gt; 。在这种情况下，该值应为：</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
