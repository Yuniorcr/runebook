<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="elisp">
    <body>
      <group id="elisp">
        <trans-unit id="3cd342ba06c23a25d16fd236a7f966d0d056af1f" translate="yes" xml:space="preserve">
          <source>This variable controls the type of device used to communicate with asynchronous subprocesses. If it is non-&lt;code&gt;nil&lt;/code&gt;, then ptys are used, when available. Otherwise, pipes are used.</source>
          <target state="translated">此变量控制用于与异步子流程进行通信的设备的类型。如果为非 &lt;code&gt;nil&lt;/code&gt; ，则使用ptys（如果可用）。否则，将使用管道。</target>
        </trans-unit>
        <trans-unit id="08dab0e1be55eda47d60f04b66e72dbf4991257a" translate="yes" xml:space="preserve">
          <source>This variable controls the width of the block cursor displayed on extra-wide glyphs such as a tab or a stretch of white space. By default, the block cursor is only as wide as the font&amp;rsquo;s default character, and will not cover all of the width of the glyph under it if that glyph is extra-wide. A non-&lt;code&gt;nil&lt;/code&gt; value of this variable means draw the block cursor as wide as the glyph under it. The default value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此变量控制在超宽字形（如制表符或空白区域）上显示的块光标的宽度。默认情况下，块光标仅与字体的默认字符一样宽，并且如果该字形为超宽字符，则不会覆盖该字形下的所有宽度。阿非 &lt;code&gt;nil&lt;/code&gt; 的该变量手段值绘制块光标一样宽，其下的字形。默认值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d2c94643005270d2f6942ac824485b58fccd37c3" translate="yes" xml:space="preserve">
          <source>This variable controls where the cursor appears when a message is displayed in the echo area. If it is non-&lt;code&gt;nil&lt;/code&gt;, then the cursor appears at the end of the message. Otherwise, the cursor appears at point&amp;mdash;not in the echo area at all.</source>
          <target state="translated">此变量控制在回显区域中显示消息时光标出现的位置。如果它不是 &lt;code&gt;nil&lt;/code&gt; ，则光标出现在消息的末尾。否则，光标将出现在该点上，而根本不在回波区域中。</target>
        </trans-unit>
        <trans-unit id="78e7ca46765b59977f37436355a9173f0e329969" translate="yes" xml:space="preserve">
          <source>This variable controls whether Emacs redraws the entire screen after it has been suspended and resumed. Non-&lt;code&gt;nil&lt;/code&gt; means there is no need to redraw, &lt;code&gt;nil&lt;/code&gt; means redrawing is needed. The default is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此变量控制Emacs在挂起并恢复后是否重绘整个屏幕。不 &lt;code&gt;nil&lt;/code&gt; 表示不需要重画， &lt;code&gt;nil&lt;/code&gt; 表示需要重画。默认值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="95ed5a9c5b6a6c89551fc1e814afb457f4301833" translate="yes" xml:space="preserve">
          <source>This variable controls whether and where to put vertical scroll bars in all frames. The possible values are &lt;code&gt;nil&lt;/code&gt; for no scroll bars, &lt;code&gt;left&lt;/code&gt; to put scroll bars on the left and &lt;code&gt;right&lt;/code&gt; to put scroll bars on the right.</source>
          <target state="translated">此变量控制是否在所有帧中以及在何处放置垂直滚动条。对于没有滚动条的可能值为 &lt;code&gt;nil&lt;/code&gt; ， &lt;code&gt;left&lt;/code&gt; 将滚动条放在左侧， &lt;code&gt;right&lt;/code&gt; 将滚动条放在右侧。</target>
        </trans-unit>
        <trans-unit id="7df164e792b3f011293c3807677c5d151cc496d6" translate="yes" xml:space="preserve">
          <source>This variable controls whether matching against the regular expressions in the value of &lt;code&gt;imenu-generic-expression&lt;/code&gt; is case-sensitive: &lt;code&gt;t&lt;/code&gt;, the default, means matching should ignore case.</source>
          <target state="translated">此变量控制是否与 &lt;code&gt;imenu-generic-expression&lt;/code&gt; 值中的正则表达式匹配是否区分大小写： &lt;code&gt;t&lt;/code&gt; （默认值）表示匹配应忽略大小写。</target>
        </trans-unit>
        <trans-unit id="d02e62e020640c94610e93821c553803a4840267" translate="yes" xml:space="preserve">
          <source>This variable controls whether overwrite mode is in effect. The value should be &lt;code&gt;overwrite-mode-textual&lt;/code&gt;, &lt;code&gt;overwrite-mode-binary&lt;/code&gt;, or &lt;code&gt;nil&lt;/code&gt;. &lt;code&gt;overwrite-mode-textual&lt;/code&gt; specifies textual overwrite mode (treats newlines and tabs specially), and &lt;code&gt;overwrite-mode-binary&lt;/code&gt; specifies binary overwrite mode (treats newlines and tabs like any other characters).</source>
          <target state="translated">此变量控制覆盖模式是否有效。该值应为 &lt;code&gt;overwrite-mode-textual&lt;/code&gt; ， &lt;code&gt;overwrite-mode-binary&lt;/code&gt; 或 &lt;code&gt;nil&lt;/code&gt; 。 &lt;code&gt;overwrite-mode-textual&lt;/code&gt; 指定文本覆盖模式（特别处理换行符和制表符）， &lt;code&gt;overwrite-mode-binary&lt;/code&gt; 指定二进制覆盖模式（与其他字符一样处理换行符和制表符）。</target>
        </trans-unit>
        <trans-unit id="71582013e38557cb3e57f0a7f2ea5f5ca1a89269" translate="yes" xml:space="preserve">
          <source>This variable controls whether splitting a window shall make a new parent window. The following values are recognized:</source>
          <target state="translated">此变量控制是否将一个窗口分割成一个新的父窗口。认可以下值。</target>
        </trans-unit>
        <trans-unit id="5eb9cb044b76a0dc1c9f45e7078a6e99b97f7127" translate="yes" xml:space="preserve">
          <source>This variable controls whether to display horizontal scroll bars on all frames.</source>
          <target state="translated">这个变量控制是否在所有框架上显示水平滚动条。</target>
        </trans-unit>
        <trans-unit id="a632ac8d482713a1abb64ffbcdfcbb77d0cb10ea" translate="yes" xml:space="preserve">
          <source>This variable controls whether to make a single non-numbered backup file or multiple numbered backups.</source>
          <target state="translated">此变量控制是否制作单个非编号的备份文件或多个编号的备份。</target>
        </trans-unit>
        <trans-unit id="db956e2faef94ec73d2a29df9c5551af74d3a3ab" translate="yes" xml:space="preserve">
          <source>This variable controls whether to process file-local variables. The possible values are:</source>
          <target state="translated">这个变量控制是否处理文件本地变量。可能的值是:</target>
        </trans-unit>
        <trans-unit id="e955c53253b76738989360bbe0d5dea962526fe9" translate="yes" xml:space="preserve">
          <source>This variable controls which scalable fonts to use. A value of &lt;code&gt;nil&lt;/code&gt;, the default, means do not use scalable fonts. &lt;code&gt;t&lt;/code&gt; means to use any scalable font that seems appropriate for the text.</source>
          <target state="translated">此变量控制使用哪些可缩放字体。默认值 &lt;code&gt;nil&lt;/code&gt; 表示不使用可缩放字体。 &lt;code&gt;t&lt;/code&gt; 的手段使用任何可缩放字体，似乎适合于文本。</target>
        </trans-unit>
        <trans-unit id="2b112526a1bb4b41aeac91c7058d7c49be5a3fab" translate="yes" xml:space="preserve">
          <source>This variable defines all the supported input methods. Each element defines one input method, and should have the form:</source>
          <target state="translated">这个变量定义了所有支持的输入法。每个元素都定义了一个输入法,并且应该有这样的形式。</target>
        </trans-unit>
        <trans-unit id="5dcb928d3e7690e22825f5503358d051f545a004" translate="yes" xml:space="preserve">
          <source>This variable defines the limit on the total number of local variable bindings and &lt;code&gt;unwind-protect&lt;/code&gt; cleanups (see &lt;a href=&quot;cleanups#Cleanups&quot;&gt;Cleaning Up from Nonlocal Exits&lt;/a&gt;) that are allowed before Emacs signals an error (with data &lt;code&gt;&quot;Variable binding depth exceeds
max-specpdl-size&quot;&lt;/code&gt;).</source>
          <target state="translated">此变量定义在Emacs发出错误之前（数据为 &lt;code&gt;&quot;Variable binding depth exceeds max-specpdl-size&quot;&lt;/code&gt; ）允许的局部变量绑定和 &lt;code&gt;unwind-protect&lt;/code&gt; &lt;a href=&quot;cleanups#Cleanups&quot;&gt;清除&lt;/a&gt;（请参阅从非本地出口清除）总数的限制。</target>
        </trans-unit>
        <trans-unit id="90c7b8613d0ea919fdf51054ed265d37e7c5583c" translate="yes" xml:space="preserve">
          <source>This variable defines the maximum depth allowed in calls to &lt;code&gt;eval&lt;/code&gt;, &lt;code&gt;apply&lt;/code&gt;, and &lt;code&gt;funcall&lt;/code&gt; before an error is signaled (with error message &lt;code&gt;&quot;Lisp nesting exceeds max-lisp-eval-depth&quot;&lt;/code&gt;).</source>
          <target state="translated">此变量定义在发出错误信号之前，调用 &lt;code&gt;eval&lt;/code&gt; ， &lt;code&gt;apply&lt;/code&gt; 和 &lt;code&gt;funcall&lt;/code&gt; 所允许的最大深度（错误消息为 &lt;code&gt;&quot;Lisp nesting exceeds max-lisp-eval-depth&quot;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="90f7b79d53299023760247cd85be49bd9dc75aa5" translate="yes" xml:space="preserve">
          <source>This variable defines the tab stop columns used by &lt;code&gt;tab-to-tab-stop&lt;/code&gt;. It should be either &lt;code&gt;nil&lt;/code&gt;, or a list of increasing integers, which need not be evenly spaced. The list is implicitly extended to infinity through repetition of the interval between the last and penultimate elements (or &lt;code&gt;tab-width&lt;/code&gt; if the list has fewer than two elements). A value of &lt;code&gt;nil&lt;/code&gt; means a tab stop every &lt;code&gt;tab-width&lt;/code&gt; columns.</source>
          <target state="translated">此变量定义 &lt;code&gt;tab-to-tab-stop&lt;/code&gt; 使用的制表位停止列。它应该是 &lt;code&gt;nil&lt;/code&gt; ，或者是一个递增整数的列表，不需要均匀地隔开。通过重复最后一个元素和倒数第二个元素之间的间隔（如果列表少于两个元素，则 &lt;code&gt;tab-width&lt;/code&gt; 将列表隐式扩展到无穷大。值为 &lt;code&gt;nil&lt;/code&gt; 表示每个 &lt;code&gt;tab-width&lt;/code&gt; 列的制表位停止。</target>
        </trans-unit>
        <trans-unit id="469a95c0cf0383f02d3f41134c71a2730552315f" translate="yes" xml:space="preserve">
          <source>This variable determines how much time should elapse before command characters echo. Its value must be a number, and specifies the number of seconds to wait before echoing. If the user types a prefix key (such as</source>
          <target state="translated">这个变量决定了命令字符回声前应该经过多少时间。它的值必须是一个数字,并指定在回音前要等待的秒数。如果用户输入一个前缀键(如</target>
        </trans-unit>
        <trans-unit id="4fd680cb90cefb4c53559f6e815614208c70e0f1" translate="yes" xml:space="preserve">
          <source>This variable determines whether &lt;code&gt;defun&lt;/code&gt; should make a copy of the function definition in pure storage. If it is non-&lt;code&gt;nil&lt;/code&gt;, then the function definition is copied into pure storage.</source>
          <target state="translated">此变量确定 &lt;code&gt;defun&lt;/code&gt; 是否应在纯存储中复制函数定义。如果为非 &lt;code&gt;nil&lt;/code&gt; ，则将函数定义复制到纯存储中。</target>
        </trans-unit>
        <trans-unit id="a9b3f4c2a441b23660570b29f6532cc9e1efcda6" translate="yes" xml:space="preserve">
          <source>This variable determines whether Emacs asks for confirmation before exiting the minibuffer; &lt;code&gt;completing-read&lt;/code&gt; binds this variable, and the function &lt;code&gt;minibuffer-complete-and-exit&lt;/code&gt; checks the value before exiting. If the value is &lt;code&gt;nil&lt;/code&gt;, confirmation is not required. If the value is &lt;code&gt;confirm&lt;/code&gt;, the user may exit with an input that is not a valid completion alternative, but Emacs asks for confirmation. If the value is &lt;code&gt;confirm-after-completion&lt;/code&gt;, the user may exit with an input that is not a valid completion alternative, but Emacs asks for confirmation if the user submitted the input right after any of the completion commands in &lt;code&gt;minibuffer-confirm-exit-commands&lt;/code&gt;.</source>
          <target state="translated">此变量确定Emacs在退出迷你缓冲区之前是否要求确认； &lt;code&gt;completing-read&lt;/code&gt; 将绑定此变量，函数 &lt;code&gt;minibuffer-complete-and-exit&lt;/code&gt; 在退出前检查该值。如果值为 &lt;code&gt;nil&lt;/code&gt; ，则不需要确认。如果该值是 &lt;code&gt;confirm&lt;/code&gt; ，则用户可能会以无效的替代输入退出，但Emacs要求进行确认。如果该值是&amp;ldquo; &lt;code&gt;confirm-after-completion&lt;/code&gt; &amp;rdquo;，则用户可以使用无效的替代输入退出，但是Emacs要求确认用户是否在 &lt;code&gt;minibuffer-confirm-exit-commands&lt;/code&gt; 任何完成命令之后立即提交了输入。命令。</target>
        </trans-unit>
        <trans-unit id="0a786b1fd8466ab1fe094be0c082410ad1c7ed6a" translate="yes" xml:space="preserve">
          <source>This variable determines whether Emacs should flash the screen to represent a bell. Non-&lt;code&gt;nil&lt;/code&gt; means yes, &lt;code&gt;nil&lt;/code&gt; means no. This is effective on graphical displays, and on text terminals provided the terminal&amp;rsquo;s Termcap entry defines the visible bell capability (&amp;lsquo;</source>
          <target state="translated">此变量确定Emacs是否应使屏幕闪烁以表示响铃。非 &lt;code&gt;nil&lt;/code&gt; 的手段是， &lt;code&gt;nil&lt;/code&gt; 表示没有。如果终端的Termcap条目定义了可见的响铃功能（&amp;ldquo;'</target>
        </trans-unit>
        <trans-unit id="a591395fdfa218eef7172413d43a22630bda1ff1" translate="yes" xml:space="preserve">
          <source>This variable determines whether Emacs should quit when &lt;code&gt;quit-flag&lt;/code&gt; is set to a value other than &lt;code&gt;nil&lt;/code&gt;. If &lt;code&gt;inhibit-quit&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;quit-flag&lt;/code&gt; has no special effect.</source>
          <target state="translated">此变量确定当 &lt;code&gt;quit-flag&lt;/code&gt; 设置为 &lt;code&gt;nil&lt;/code&gt; 以外的其他值时，Emacs是否应该退出。如果 &lt;code&gt;inhibit-quit&lt;/code&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;quit-flag&lt;/code&gt; 没有特殊作用。</target>
        </trans-unit>
        <trans-unit id="893f930fc46c884a3893f35797c61c21e39223ef" translate="yes" xml:space="preserve">
          <source>This variable determines whether files may be written out that do &lt;em&gt;not&lt;/em&gt; end with a newline. If the value of the variable is &lt;code&gt;t&lt;/code&gt;, then &lt;code&gt;save-buffer&lt;/code&gt; silently adds a newline at the end of the buffer whenever it does not already end in one. If the value is &lt;code&gt;visit&lt;/code&gt;, Emacs adds a missing newline just after it visits the file. If the value is &lt;code&gt;visit-save&lt;/code&gt;, Emacs adds a missing newline both on visiting and on saving. For any other non-&lt;code&gt;nil&lt;/code&gt; value, &lt;code&gt;save-buffer&lt;/code&gt; asks the user whether to add a newline each time the case arises.</source>
          <target state="translated">此变量确定是否可以写出&lt;em&gt;不&lt;/em&gt;以换行符结尾的文件。如果变量的值为 &lt;code&gt;t&lt;/code&gt; ，则只要缓冲区缓冲区末尾没有换行， &lt;code&gt;save-buffer&lt;/code&gt; 就会在其末尾静默添加换行符。如果值为 &lt;code&gt;visit&lt;/code&gt; ，则Emacs在访问文件后立即添加缺少的换行符。如果值是 &lt;code&gt;visit-save&lt;/code&gt; ，那么Emacs在访问和保存时都会添加一个缺少的换行符。对于任何其他非 &lt;code&gt;nil&lt;/code&gt; 值， &lt;code&gt;save-buffer&lt;/code&gt; 会在每次出现这种情况时询问用户是否添加换行符。</target>
        </trans-unit>
        <trans-unit id="e172255c5f5beddb870c65d32a0c64c4e7560b8b" translate="yes" xml:space="preserve">
          <source>This variable determines whether or not to make backup files. If it is non-&lt;code&gt;nil&lt;/code&gt;, then Emacs creates a backup of each file when it is saved for the first time&amp;mdash;provided that &lt;code&gt;backup-inhibited&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt; (see below).</source>
          <target state="translated">此变量确定是否制作备份文件。如果它不是 &lt;code&gt;nil&lt;/code&gt; ，则Emacs首次保存时会为每个文件创建一个备份-前提是 &lt;code&gt;backup-inhibited&lt;/code&gt; 为 &lt;code&gt;nil&lt;/code&gt; （请参见下文）。</target>
        </trans-unit>
        <trans-unit id="d0557efc37e8614c9df4ccd758ad183283699c70" translate="yes" xml:space="preserve">
          <source>This variable determines whether the debugger is called when &lt;code&gt;quit&lt;/code&gt; is signaled and not handled. If &lt;code&gt;debug-on-quit&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then the debugger is called whenever you quit (that is, type</source>
          <target state="translated">此变量确定在发出 &lt;code&gt;quit&lt;/code&gt; 信号并对其不进行处理时是否调用调试器。如果 &lt;code&gt;debug-on-quit&lt;/code&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则每次退出时都会调用调试器（即，键入</target>
        </trans-unit>
        <trans-unit id="bac72ab8ca2d7af1e4899843968d1d08e03b798d" translate="yes" xml:space="preserve">
          <source>This variable determines whether the debugger is called when an error is signaled and not handled. If &lt;code&gt;debug-on-error&lt;/code&gt; is &lt;code&gt;t&lt;/code&gt;, all kinds of errors call the debugger, except those listed in &lt;code&gt;debug-ignored-errors&lt;/code&gt; (see below). If it is &lt;code&gt;nil&lt;/code&gt;, none call the debugger.</source>
          <target state="translated">此变量确定在发出错误信号且未处理错误时是否调用调试器。如果 &lt;code&gt;debug-on-error&lt;/code&gt; 为 &lt;code&gt;t&lt;/code&gt; ，则除 &lt;code&gt;debug-ignored-errors&lt;/code&gt; （参见下文）中列出的那些错误外，所有其他类型的错误均会调用调试器。如果为 &lt;code&gt;nil&lt;/code&gt; ，则不调用调试器。</target>
        </trans-unit>
        <trans-unit id="cffccb915c87836e47c44ecb08b11f0fb475fd65" translate="yes" xml:space="preserve">
          <source>This variable determines whether the higher-level replacement functions should preserve case. If the variable is &lt;code&gt;nil&lt;/code&gt;, that means to use the replacement text verbatim. A non-&lt;code&gt;nil&lt;/code&gt; value means to convert the case of the replacement text according to the text being replaced.</source>
          <target state="translated">此变量确定更高级别的替换功能是否应保留大小写。如果变量为 &lt;code&gt;nil&lt;/code&gt; ，则表示逐字使用替换文本。阿非 &lt;code&gt;nil&lt;/code&gt; 值的装置，以根据被替换的文本替换文本的情况下进行转换。</target>
        </trans-unit>
        <trans-unit id="bcc4ce012d842154070d4da43d844b8f600202a4" translate="yes" xml:space="preserve">
          <source>This variable displays the buffer&amp;rsquo;s major and minor modes. Its default value also displays the recursive editing level, information on the process status, and whether narrowing is in effect.</source>
          <target state="translated">此变量显示缓冲区的主要和次要模式。其默认值还显示递归编辑级别，有关过程状态的信息以及缩小是否有效。</target>
        </trans-unit>
        <trans-unit id="01dfec2e7126648b5e75cc691fb798cf60c163e9" translate="yes" xml:space="preserve">
          <source>This variable gives major modes a way to specify not to break a line at certain places. Its value should be a list of functions. Whenever filling considers breaking the line at a certain place in the buffer, it calls each of these functions with no arguments and with point located at that place. If any of the functions returns non-&lt;code&gt;nil&lt;/code&gt;, then the line won&amp;rsquo;t be broken there.</source>
          <target state="translated">此变量为主要模式提供一种方法，用于指定在某些位置不换行。它的值应该是功能列表。每当填充考虑在缓冲区中的某个位置处断行时，它都会在不带参数且点位于该位置的情况下调用每个函数。如果任何一个函数返回non- &lt;code&gt;nil&lt;/code&gt; ，那么该行将不会在此处断开。</target>
        </trans-unit>
        <trans-unit id="c19ca7b3824dbf0d5ea6d173e4af5d21990d9b95" translate="yes" xml:space="preserve">
          <source>This variable has no effect on text-mode frames, since the text-mode cursor is drawn by the terminal out of Emacs&amp;rsquo;s control.</source>
          <target state="translated">该变量对文本模式框架没有影响，因为文本模式光标是由终端在Emacs的控制之下绘制的。</target>
        </trans-unit>
        <trans-unit id="6457fcf88f857a96880e9cc70e03f9164c5c33c4" translate="yes" xml:space="preserve">
          <source>This variable holds a function to print help for a prefix key. The function is called when the user types a prefix key followed by the help character, and the help character has no binding after that prefix. The variable&amp;rsquo;s default value is &lt;code&gt;describe-prefix-bindings&lt;/code&gt;.</source>
          <target state="translated">此变量具有打印前缀键帮助的功能。当用户键入前缀键后跟帮助字符，并且该前缀后面没有帮助字符时，将调用该函数。变量的默认值是 &lt;code&gt;describe-prefix-bindings&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8ad3f587330f30e2a8a998a4442a0dbd9fcda3c4" translate="yes" xml:space="preserve">
          <source>This variable holds a keymap for special events. If an event type has a binding in this keymap, then it is special, and the binding for the event is run directly by &lt;code&gt;read-event&lt;/code&gt;. See &lt;a href=&quot;special-events#Special-Events&quot;&gt;Special Events&lt;/a&gt;.</source>
          <target state="translated">此变量保存特殊事件的键盘映射。如果事件类型在此键图中具有绑定，则它是特殊的，并且该事件的绑定直接由 &lt;code&gt;read-event&lt;/code&gt; 运行。请参阅&lt;a href=&quot;special-events#Special-Events&quot;&gt;特殊事件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="acdb9255d8d2ac1527090085d7cd0dcaafbc9b9e" translate="yes" xml:space="preserve">
          <source>This variable holds a keymap similar to &lt;code&gt;input-decode-map&lt;/code&gt; except that it describes key sequences which should be translated to alternative interpretations that are usually preferred. It applies after &lt;code&gt;input-decode-map&lt;/code&gt; and before &lt;code&gt;key-translation-map&lt;/code&gt;.</source>
          <target state="translated">该变量具有与 &lt;code&gt;input-decode-map&lt;/code&gt; 映射相似的键映射，不同之处在于它描述了键序列，应将其转换为通常首选的替代解释。它适用于 &lt;code&gt;input-decode-map&lt;/code&gt; 之后和 &lt;code&gt;key-translation-map&lt;/code&gt; 之前。</target>
        </trans-unit>
        <trans-unit id="a37ca85b72485a9401ac40435b9a83097a9637b7" translate="yes" xml:space="preserve">
          <source>This variable holds a keymap that describes the character sequences sent by function keys on an ordinary character terminal.</source>
          <target state="translated">这个变量保存了一个描述普通字符终端上功能键发送的字符序列的键谱。</target>
        </trans-unit>
        <trans-unit id="26eed1dd6f3bb036d68a21adce16e29025efd29e" translate="yes" xml:space="preserve">
          <source>This variable holds a keymap that extends &lt;code&gt;query-replace-map&lt;/code&gt; by providing additional keybindings that are useful in multi-buffer replacements. The additional bindings are:</source>
          <target state="translated">此变量包含一个键 &lt;code&gt;query-replace-map&lt;/code&gt; ，该键图通过提供在多缓冲区替换中有用的其他键绑定来扩展查询替换图。其他绑定是：</target>
        </trans-unit>
        <trans-unit id="519c8bdd8ad460519783549c408e663b9e9f1b93" translate="yes" xml:space="preserve">
          <source>This variable holds a list of all variables of type &lt;code&gt;DEFVAR_BOOL&lt;/code&gt;.</source>
          <target state="translated">此变量包含 &lt;code&gt;DEFVAR_BOOL&lt;/code&gt; 类型的所有变量的列表。</target>
        </trans-unit>
        <trans-unit id="f8883be969a765e6d09cf5ca1b75b7d3d50f0803" translate="yes" xml:space="preserve">
          <source>This variable holds a list of commands that cause Emacs to ask for confirmation before exiting the minibuffer, if the &lt;var&gt;require-match&lt;/var&gt; argument to &lt;code&gt;completing-read&lt;/code&gt; is &lt;code&gt;confirm-after-completion&lt;/code&gt;. The confirmation is requested if the user attempts to exit the minibuffer immediately after calling any command in this list.</source>
          <target state="translated">如果 &lt;code&gt;completing-read&lt;/code&gt; 的 &lt;var&gt;require-match&lt;/var&gt; 参数为 &lt;code&gt;confirm-after-completion&lt;/code&gt; ，则此变量包含一个命令列表，这些命令会导致Emacs在退出迷你缓冲区之前进行确认。如果用户在调用此列表中的任何命令后立即尝试退出小型缓冲区，则请求确认。</target>
        </trans-unit>
        <trans-unit id="4dd1042e2c01f4b8fa8b02392a9cab7b62f91950" translate="yes" xml:space="preserve">
          <source>This variable holds a list of events waiting to be read as command input. The events are used in the order they appear in the list, and removed one by one as they are used.</source>
          <target state="translated">这个变量保存了一个等待作为命令输入读取的事件列表。事件按其在列表中出现的顺序使用,并在使用时逐一删除。</target>
        </trans-unit>
        <trans-unit id="c8b955a77f35fb09b5608537bbc29fbda392394f" translate="yes" xml:space="preserve">
          <source>This variable holds a list of expressions that are safe to evaluate when found in the &amp;lsquo;</source>
          <target state="translated">该变量包含一个表达式列表，当在&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="bd6bb60be08f69010d3276ce4955632b8da29bca" translate="yes" xml:space="preserve">
          <source>This variable holds a list of fake function keys for items to display at the end of the menu bar rather than in normal sequence. The default value is &lt;code&gt;(help-menu)&lt;/code&gt;; thus, the &amp;lsquo;</source>
          <target state="translated">此变量包含伪造的功能键列表，这些功能键的项目显示在菜单栏的末尾，而不是以正常顺序显示。默认值为 &lt;code&gt;(help-menu)&lt;/code&gt; ; 就这样 '</target>
        </trans-unit>
        <trans-unit id="4d8e53c3f492a4feeb707a31a70018e618b50aea" translate="yes" xml:space="preserve">
          <source>This variable holds a list of files that should be reverted without query. The value is a list of regular expressions. If the visited file name matches one of these regular expressions, and the file has changed on disk but the buffer is not modified, then &lt;code&gt;revert-buffer&lt;/code&gt; reverts the file without asking the user for confirmation.</source>
          <target state="translated">此变量包含应无查询即还原的文件列表。该值是一个正则表达式列表。如果访问的文件名与这些正则表达式之一匹配，并且文件在磁盘上已更改，但缓冲区未修改，则 &lt;code&gt;revert-buffer&lt;/code&gt; 会在不要求用户确认的情况下恢复文件。</target>
        </trans-unit>
        <trans-unit id="05f0e9a25b020fbdaf07864fbfca1659990b7ee9" translate="yes" xml:space="preserve">
          <source>This variable holds a list of functions for computing text properties. Before &lt;code&gt;buffer-substring&lt;/code&gt; copies the text and text properties for a portion of the buffer, it calls all the functions in this list. Each of the functions receives two arguments that specify the range of the buffer being accessed. (The buffer itself is always the current buffer.)</source>
          <target state="translated">此变量包含用于计算文本属性的功能列表。在 &lt;code&gt;buffer-substring&lt;/code&gt; 复制缓冲区的一部分的文本和文本属性之前，它将调用此列表中的所有函数。每个函数都接收两个参数，这些参数指定要访问的缓冲区的范围。（缓冲区本身始终是当前缓冲区。）</target>
        </trans-unit>
        <trans-unit id="39212b9fda9b331c0853ff560cd41550f9877e99" translate="yes" xml:space="preserve">
          <source>This variable holds a list of functions that Emacs should call before redisplaying a window with scrolling. Displaying a different buffer in a window and making a new window also call these functions.</source>
          <target state="translated">这个变量保存了Emacs在重新显示滚动窗口之前应该调用的函数列表。在窗口中显示不同的缓冲区和创建一个新窗口也会调用这些函数。</target>
        </trans-unit>
        <trans-unit id="cb3bc673165c3862f8f3b5f00bed0f9586bd5e48" translate="yes" xml:space="preserve">
          <source>This variable holds a list of functions that are called by Emacs redisplay as needed, just before doing redisplay. They are called even when Font Lock Mode isn&amp;rsquo;t enabled. When Font Lock Mode is enabled, this variable usually holds just one function, &lt;code&gt;jit-lock-function&lt;/code&gt;.</source>
          <target state="translated">此变量包含在重新显示之前按需要由Emacs重新显示调用的函数的列表。即使未启用字体锁定模式，也会调用它们。启用字体锁定模式后，此变量通常仅包含一个功能 &lt;code&gt;jit-lock-function&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="57ae90a775480403077f7b65b706fafab3e50565" translate="yes" xml:space="preserve">
          <source>This variable holds a list of functions that try to determine a coding system for a file based on its undecoded contents.</source>
          <target state="translated">这个变量包含了一个函数列表,这些函数试图根据文件的未编码内容来确定文件的编码系统。</target>
        </trans-unit>
        <trans-unit id="b0df7a29f56cb8c387d8d3a398285ded4a61ed8b" translate="yes" xml:space="preserve">
          <source>This variable holds a list of functions to call after Emacs modifies a buffer. Each function receives three arguments: the beginning and end of the region just changed, and the length of the text that existed before the change. All three arguments are integers. The buffer that has been changed is always the current buffer when the function is called.</source>
          <target state="translated">这个变量保存了Emacs修改缓冲区后要调用的函数列表。每个函数都会收到三个参数:刚刚修改的区域的开始和结束,以及修改前存在的文本长度。这三个参数都是整数。当函数被调用时,被修改的缓冲区总是当前的缓冲区。</target>
        </trans-unit>
        <trans-unit id="72161f22138defda7e8b68a6f85e2c55d4627ebb" translate="yes" xml:space="preserve">
          <source>This variable holds a list of functions to call when Emacs is about to modify a buffer. Each function gets two arguments, the beginning and end of the region that is about to change, represented as integers. The buffer that is about to change is always the current buffer when the function is called.</source>
          <target state="translated">这个变量保存了Emacs即将修改缓冲区时要调用的函数列表。每个函数都会得到两个参数,即即将改变的区域的开始和结束,用整数表示。当函数被调用时,即将改变的缓冲区总是当前的缓冲区。</target>
        </trans-unit>
        <trans-unit id="3c016e628b4a6507907ac2c4314536d83f87d5c9" translate="yes" xml:space="preserve">
          <source>This variable holds a list of handlers whose use is presently inhibited for a certain operation.</source>
          <target state="translated">这个变量保存了一个处理程序的列表,这些处理程序目前被禁止用于某项操作。</target>
        </trans-unit>
        <trans-unit id="ea61d5937ac2a283fec1ab3e7face5cd37b6540a" translate="yes" xml:space="preserve">
          <source>This variable holds a list of hooks to be scanned before unloading a library, to remove functions defined in the library.</source>
          <target state="translated">这个变量保存了一个钩子的列表,在卸载库之前,要对其进行扫描,以删除库中定义的函数。</target>
        </trans-unit>
        <trans-unit id="7a0b38af7c3d63375438c7111762565267f721a0" translate="yes" xml:space="preserve">
          <source>This variable holds a list of keymap alists to use for emulation modes. It is intended for modes or packages using multiple minor-mode keymaps. Each element is a keymap alist which has the same format and meaning as &lt;code&gt;minor-mode-map-alist&lt;/code&gt;, or a symbol with a variable binding which is such an alist. The active keymaps in each alist are used before &lt;code&gt;minor-mode-map-alist&lt;/code&gt; and &lt;code&gt;minor-mode-overriding-map-alist&lt;/code&gt;.</source>
          <target state="translated">此变量包含用于仿真模式的键映射列表列表。它适用于使用多个次模式键盘映射的模式或程序包。每个元素都是一个keymap alist，其格式和含义与 &lt;code&gt;minor-mode-map-alist&lt;/code&gt; 相同，或者是一个带有变量绑定的符号，例如alist。每个列表中的活动键盘映射在 &lt;code&gt;minor-mode-map-alist&lt;/code&gt; 和 &lt;code&gt;minor-mode-overriding-map-alist&lt;/code&gt; 之前使用。</target>
        </trans-unit>
        <trans-unit id="fb2f272aee36e56653000a6360b6770eb64c46cb" translate="yes" xml:space="preserve">
          <source>This variable holds a list of variables that should not be given local values by files. Any value specified for one of these variables is completely ignored.</source>
          <target state="translated">这个变量包含了一个不应该被文件赋予本地值的变量列表。任何为这些变量指定的值都会被完全忽略。</target>
        </trans-unit>
        <trans-unit id="bc86c91af69c14fafcd027fed651f97ec5d6985b" translate="yes" xml:space="preserve">
          <source>This variable holds a marker that indicates where to display the overlay arrow. It should point at the beginning of a line. On a non-graphical display the arrow text appears at the beginning of that line, overlaying any text that would otherwise appear. Since the arrow is usually short, and the line usually begins with indentation, normally nothing significant is overwritten.</source>
          <target state="translated">这个变量拥有一个标记,指示在哪里显示覆盖箭头。它应该指向一行的开头。在非图形化显示中,箭头文本出现在该行的开头,覆盖任何本来会出现的文本。由于箭头通常很短,而且该行通常以缩进的方式开始,通常不会覆盖任何重要的内容。</target>
        </trans-unit>
        <trans-unit id="9d61ea0c88eaa0a5e4b9f178d493594754669b2c" translate="yes" xml:space="preserve">
          <source>This variable holds a mode line construct that, by default, appears in the mode line just after the &lt;code&gt;which-func-mode&lt;/code&gt; minor mode if set, else after &lt;code&gt;mode-line-modes&lt;/code&gt;. The command &lt;code&gt;display-time&lt;/code&gt; sets &lt;code&gt;global-mode-string&lt;/code&gt; to refer to the variable &lt;code&gt;display-time-string&lt;/code&gt;, which holds a string containing the time and load information.</source>
          <target state="translated">此变量包含一个模式行构造，默认情况下，该模式行构造仅在模式行中出现在 &lt;code&gt;which-func-mode&lt;/code&gt; 次要模式之后，否则在 &lt;code&gt;mode-line-modes&lt;/code&gt; 。命令 &lt;code&gt;display-time&lt;/code&gt; 将 &lt;code&gt;global-mode-string&lt;/code&gt; 设置为引用变量 &lt;code&gt;display-time-string&lt;/code&gt; ，该变量包含一个包含时间和负载信息的字符串。</target>
        </trans-unit>
        <trans-unit id="fcba3becc0285d5958e5e08987d62cf7feaa8bf7" translate="yes" xml:space="preserve">
          <source>This variable holds a property list giving default values for text properties. Whenever a character does not specify a value for a property, neither directly, through a category symbol, or through &lt;code&gt;char-property-alias-alist&lt;/code&gt;, the value stored in this list is used instead. Here is an example:</source>
          <target state="translated">此变量包含一个属性列表，该列表提供了文本属性的默认值。每当字符未直接通过类别符号或通过 &lt;code&gt;char-property-alias-alist&lt;/code&gt; 指定属性值时，都将使用此列表中存储的值。这是一个例子：</target>
        </trans-unit>
        <trans-unit id="6febb37570f0069143f80c3299aa0ae6dc1ea022" translate="yes" xml:space="preserve">
          <source>This variable holds a special keymap that defines the valid user responses for &lt;code&gt;perform-replace&lt;/code&gt; and the commands that use it, as well as &lt;code&gt;y-or-n-p&lt;/code&gt; and &lt;code&gt;map-y-or-n-p&lt;/code&gt;. This map is unusual in two ways:</source>
          <target state="translated">此变量包含一个特殊的键映射，该键映射定义了对 &lt;code&gt;perform-replace&lt;/code&gt; 的有效用户响应以及使用该响应的命令，以及 &lt;code&gt;y-or-n-p&lt;/code&gt; 和 &lt;code&gt;map-y-or-n-p&lt;/code&gt; 。该地图在两个方面很不寻常：</target>
        </trans-unit>
        <trans-unit id="e027cb271cc7816d0728efbc0b205739d6616ba6" translate="yes" xml:space="preserve">
          <source>This variable holds a string that says which character separates directories in a search path (as found in an environment variable). Its value is &lt;code&gt;&quot;:&quot;&lt;/code&gt; for Unix and GNU systems, and &lt;code&gt;&quot;;&quot;&lt;/code&gt; for MS systems.</source>
          <target state="translated">该变量包含一个字符串，该字符串说明哪个字符分隔了搜索路径中的目录（在环境变量中可以找到）。对于Unix和GNU系统，其值为 &lt;code&gt;&quot;:&quot;&lt;/code&gt; 为 &lt;code&gt;&quot;;&quot;&lt;/code&gt; 用于MS系统。</target>
        </trans-unit>
        <trans-unit id="a5ce090ba1e37fd187314cd6eb4cbc03eea27056" translate="yes" xml:space="preserve">
          <source>This variable holds a vector used internally by printing to implement the &lt;code&gt;print-circle&lt;/code&gt; feature. You should not use it except to bind it to &lt;code&gt;nil&lt;/code&gt; when you bind &lt;code&gt;print-continuous-numbering&lt;/code&gt;.</source>
          <target state="translated">该变量保存一个向量，供打印内部使用以实现 &lt;code&gt;print-circle&lt;/code&gt; 功能。绑定 &lt;code&gt;print-continuous-numbering&lt;/code&gt; 时，除了将其绑定到 &lt;code&gt;nil&lt;/code&gt; 之外，不应使用它。</target>
        </trans-unit>
        <trans-unit id="e8c8534f7c8274e8bf6f37c2fe9a42af806712e5" translate="yes" xml:space="preserve">
          <source>This variable holds an alist of frame parameters (see &lt;a href=&quot;frame-parameters#Frame-Parameters&quot;&gt;Frame Parameters&lt;/a&gt;), which is used by the function specified by &lt;code&gt;pop-up-frame-function&lt;/code&gt; to make a new frame. The default is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此变量包含一个框架参数列表（请参阅&lt;a href=&quot;frame-parameters#Frame-Parameters&quot;&gt;Frame Parameters&lt;/a&gt;），由 &lt;code&gt;pop-up-frame-function&lt;/code&gt; 指定的函数使用它来制作新框架。默认值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2bd0f19b72e06400232e027dac176fbbf7f56c2c" translate="yes" xml:space="preserve">
          <source>This variable holds an alist which defines the default rear-stickiness of various text properties. Each element has the form &lt;code&gt;(&lt;var&gt;property&lt;/var&gt; . &lt;var&gt;nonstickiness&lt;/var&gt;)&lt;/code&gt;, and it defines the stickiness of a particular text property, &lt;var&gt;property&lt;/var&gt;.</source>
          <target state="translated">此变量包含一个列表，该列表定义了各种文本属性的默认后置粘性。每个元素具有形式 &lt;code&gt;(&lt;var&gt;property&lt;/var&gt; . &lt;var&gt;nonstickiness&lt;/var&gt;)&lt;/code&gt; ，它定义一个特定的文本属性，的粘性 &lt;var&gt;property&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="4d7db826376c8067cacb3f63ed8e4b98a30275b6" translate="yes" xml:space="preserve">
          <source>This variable holds an alist which maps property names to a list of alternative property names. If a character does not specify a direct value for a property, the alternative property names are consulted in order; the first non-&lt;code&gt;nil&lt;/code&gt; value is used. This variable takes precedence over &lt;code&gt;default-text-properties&lt;/code&gt;, and &lt;code&gt;category&lt;/code&gt; properties take precedence over this variable.</source>
          <target state="translated">此变量包含一个列表，该列表将属性名称映射到备用属性名称列表。如果字符未指定属性的直接值，则会按顺序查询替代属性名称；否则，将使用默认属性。第一非 &lt;code&gt;nil&lt;/code&gt; 值被使用。此变量优先于 &lt;code&gt;default-text-properties&lt;/code&gt; ， &lt;code&gt;category&lt;/code&gt; 属性优先于此变量。</target>
        </trans-unit>
        <trans-unit id="af2c67026fb0f574e04fc0b237633d78c6ce4340" translate="yes" xml:space="preserve">
          <source>This variable holds an association list whose elements specify how the mode line should indicate that a minor mode is active. Each element of the &lt;code&gt;minor-mode-alist&lt;/code&gt; should be a two-element list:</source>
          <target state="translated">此变量包含一个关联列表，其元素指定模式行应如何指示次要模式处于活动状态。 &lt;code&gt;minor-mode-alist&lt;/code&gt; 的每个元素应为两个元素的列表：</target>
        </trans-unit>
        <trans-unit id="c2ef0f3af4d98038c101a6cf8a10b77abd695807" translate="yes" xml:space="preserve">
          <source>This variable holds the absolute file name of the user&amp;rsquo;s init file. If the actual init file loaded is a compiled file, such as</source>
          <target state="translated">此变量保存用户初始化文件的绝对文件名。如果实际加载的初始文件是编译文件，例如</target>
        </trans-unit>
        <trans-unit id="344e3ec7ab37cb172cdd1eced860a903d281793e" translate="yes" xml:space="preserve">
          <source>This variable holds the default input method for commands that choose an input method. Unlike &lt;code&gt;current-input-method&lt;/code&gt;, this variable is normally global.</source>
          <target state="translated">对于选择输入法的命令，此变量保留默认输入法。与 &lt;code&gt;current-input-method&lt;/code&gt; 不同，此变量通常是全局变量。</target>
        </trans-unit>
        <trans-unit id="c18ab7020fe4b988f02d37bfa4ede4f52f31cc4f" translate="yes" xml:space="preserve">
          <source>This variable holds the default input stream&amp;mdash;the stream that &lt;code&gt;read&lt;/code&gt; uses when the &lt;var&gt;stream&lt;/var&gt; argument is &lt;code&gt;nil&lt;/code&gt;. The default is &lt;code&gt;t&lt;/code&gt;, meaning use the minibuffer.</source>
          <target state="translated">此变量保存默认的输入流-当 &lt;var&gt;stream&lt;/var&gt; 参数为 &lt;code&gt;nil&lt;/code&gt; 时， &lt;code&gt;read&lt;/code&gt; 的流将使用。默认值为 &lt;code&gt;t&lt;/code&gt; ，表示使用迷你缓冲区。</target>
        </trans-unit>
        <trans-unit id="de7e4cb0ec2d8d47f0102bb97612d107a65d1c40" translate="yes" xml:space="preserve">
          <source>This variable holds the directory in which the Emacs executable was located when it was run, or &lt;code&gt;nil&lt;/code&gt; if that directory cannot be determined.</source>
          <target state="translated">此变量保存Emacs可执行文件在运行时所在的目录，如果无法确定该目录，则为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c455202da051f3ef291d0eee22f8c132d61fc324" translate="yes" xml:space="preserve">
          <source>This variable holds the erase character that was selected in the system&amp;rsquo;s terminal driver, before Emacs was started.</source>
          <target state="translated">此变量保存启动Emacs之前在系统终端驱动程序中选择的擦除字符。</target>
        </trans-unit>
        <trans-unit id="b114475c947fc394c0e8313bb8050389d142aae8" translate="yes" xml:space="preserve">
          <source>This variable holds the last input event read as part of a key sequence, not counting events resulting from mouse menus.</source>
          <target state="translated">这个变量保存了最后一次读取的输入事件,作为按键序列的一部分,不包括鼠标菜单产生的事件。</target>
        </trans-unit>
        <trans-unit id="db576e55004516d9773f1a3a339c3d8e134cf2f8" translate="yes" xml:space="preserve">
          <source>This variable holds the list of environment variables Emacs inherited from its parent process when Emacs started.</source>
          <target state="translated">这个变量存放Emacs启动时从父进程继承的环境变量列表。</target>
        </trans-unit>
        <trans-unit id="1463352f694104f674d13094544ffbddd5ca61ef" translate="yes" xml:space="preserve">
          <source>This variable holds the list of killed text sequences, most recently killed first.</source>
          <target state="translated">这个变量保存着被杀死的文本序列列表,最近被杀死的文本序列排在第一位。</target>
        </trans-unit>
        <trans-unit id="7f1502c6bf20a05a12fd6941180204001da754ef" translate="yes" xml:space="preserve">
          <source>This variable holds the name of the Emacs default directory. It defaults to</source>
          <target state="translated">这个变量存放Emacs默认目录的名称。它的默认值是</target>
        </trans-unit>
        <trans-unit id="23bb178224a3d419452e5059d88d71c25405975a" translate="yes" xml:space="preserve">
          <source>This variable holds the name of the directory in which Emacs finds certain documentation and text files that come with Emacs.</source>
          <target state="translated">这个变量存放Emacs查找某些随Emacs而来的文档和文本文件的目录名称。</target>
        </trans-unit>
        <trans-unit id="c9f0175743a7dfe6c220146fc87b9f51c89f1569" translate="yes" xml:space="preserve">
          <source>This variable holds the name of the directory which should contain the file &lt;code&gt;&quot;DOC&quot;&lt;/code&gt; that contains documentation strings for built-in and preloaded functions and variables.</source>
          <target state="translated">此变量包含目录名称，该目录应包含文件 &lt;code&gt;&quot;DOC&quot;&lt;/code&gt; ，该文件包含内置函数和预加载函数和变量的文档字符串。</target>
        </trans-unit>
        <trans-unit id="77d539bc690d78b070e77ecc5d587508f7810036" translate="yes" xml:space="preserve">
          <source>This variable holds the name of the input method now active in the current buffer. (It automatically becomes local in each buffer when set in any fashion.) It is &lt;code&gt;nil&lt;/code&gt; if no input method is active in the buffer now.</source>
          <target state="translated">此变量保存当前在当前缓冲区中处于活动状态的输入法的名称。（以任何方式设置时，它会自动在每个缓冲区中变为本地。）如果现在在缓冲区中没有输入法处于活动状态，则为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="51d42a153c502ad4ca8a2564f9ea1e4a88087a97" translate="yes" xml:space="preserve">
          <source>This variable holds the program name under which Emacs was invoked. The value is a string, and does not include a directory name.</source>
          <target state="translated">这个变量保存了Emacs被调用的程序名。值是一个字符串,不包括目录名。</target>
        </trans-unit>
        <trans-unit id="cd30ea6e8a624b9b928d0444fa4de07fcf9d2be9" translate="yes" xml:space="preserve">
          <source>This variable holds the raw prefix argument for the &lt;em&gt;current&lt;/em&gt; command. Commands may examine it directly, but the usual method for accessing it is with &lt;code&gt;(interactive &quot;P&quot;)&lt;/code&gt;.</source>
          <target state="translated">此变量保存&lt;em&gt;当前&lt;/em&gt;命令的原始前缀参数。命令可以直接检查它，但是访问它的常用方法是使用 &lt;code&gt;(interactive &quot;P&quot;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c2228b9f862753c70e303ec4badcaa1e473beca6" translate="yes" xml:space="preserve">
          <source>This variable holds the standard GNU configuration name for the hardware/software configuration of your system, as a string. For example, a typical value for a 64-bit GNU/Linux system is &amp;lsquo;</source>
          <target state="translated">该变量以字符串的形式保存系统硬件/软件配置的标准GNU配置名称。例如，对于64位GNU / Linux系统，典型值是'</target>
        </trans-unit>
        <trans-unit id="c419e4b6ad8620a603b0b2c42f92b1e629d65d10" translate="yes" xml:space="preserve">
          <source>This variable holds the string to display to call attention to a particular line, or &lt;code&gt;nil&lt;/code&gt; if the arrow feature is not in use. On a graphical display the contents of the string are ignored; instead a glyph is displayed in the fringe area to the left of the display area.</source>
          <target state="translated">此变量包含要显示的字符串，以引起人们对特定行的注意；如果未使用箭头功能，则为 &lt;code&gt;nil&lt;/code&gt; 。在图形显示中，字符串的内容将被忽略；而是在显示区域左侧的边缘区域中显示一个字形。</target>
        </trans-unit>
        <trans-unit id="81e67f6a532f93dac31cd045964834d6fdfed067" translate="yes" xml:space="preserve">
          <source>This variable holds the syntax table to use for fontification of comments and strings. It is normally set by Font Lock mode based on the &lt;var&gt;syntax-alist&lt;/var&gt; element in &lt;code&gt;font-lock-defaults&lt;/code&gt;. If this value is &lt;code&gt;nil&lt;/code&gt;, syntactic fontification uses the buffer&amp;rsquo;s syntax table (the value returned by the function &lt;code&gt;syntax-table&lt;/code&gt;; see &lt;a href=&quot;syntax-table-functions#Syntax-Table-Functions&quot;&gt;Syntax Table Functions&lt;/a&gt;).</source>
          <target state="translated">该变量保存语法表，用于注释和字符串的字体化。通常由Font Lock模式根据 &lt;code&gt;font-lock-defaults&lt;/code&gt; 中的 &lt;var&gt;syntax-alist&lt;/var&gt; 元素来设置。如果该值为 &lt;code&gt;nil&lt;/code&gt; ，则语法字体化将使用缓冲区的语法表（该函数 &lt;code&gt;syntax-table&lt;/code&gt; 返回的值；请参见&lt;a href=&quot;syntax-table-functions#Syntax-Table-Functions&quot;&gt;语法表函数&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="e15a7227d43de41555c9e1d25dc1664f812412f1" translate="yes" xml:space="preserve">
          <source>This variable holds the system-dependent value of the file-name extension of the module files. Its value is</source>
          <target state="translated">这个变量存放模块文件的文件名扩展名的系统相关值。它的值是</target>
        </trans-unit>
        <trans-unit id="c2f9f6eb303cdf33dba48f246b5c950f6cf7a5a8" translate="yes" xml:space="preserve">
          <source>This variable holds the total number of input events received so far from the terminal&amp;mdash;not counting those generated by keyboard macros.</source>
          <target state="translated">该变量保存到目前为止从终端接收到的输入事件的总数，不包括键盘宏生成的事件。</target>
        </trans-unit>
        <trans-unit id="f6d2e595e4de0a9a555a6943813249af150ddc15" translate="yes" xml:space="preserve">
          <source>This variable holds the value of &lt;code&gt;window-system&lt;/code&gt; used for the first frame created by Emacs during startup. (When Emacs is invoked as a daemon, it does not create any initial frames, so &lt;code&gt;initial-window-system&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;, except on MS-Windows, where it is still &lt;code&gt;w32&lt;/code&gt;. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Initial-Options.html#Initial-Options&quot;&gt;daemon&lt;/a&gt; in</source>
          <target state="translated">此变量保存在启动期间由Emacs创建的第一帧所使用的 &lt;code&gt;window-system&lt;/code&gt; 的值。（当Emacs的被调用作为守护程序，它不产生任何初始帧，使 &lt;code&gt;initial-window-system&lt;/code&gt; 是 &lt;code&gt;nil&lt;/code&gt; ，除了在MS-Windows，其中它仍然是 &lt;code&gt;w32&lt;/code&gt; 。参见&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Initial-Options.html#Initial-Options&quot;&gt;守护进程&lt;/a&gt;在</target>
        </trans-unit>
        <trans-unit id="6659bea196a72c1ed60f39d4d02f3a69d7a3316b" translate="yes" xml:space="preserve">
          <source>This variable holds the value of the mode line construct that displays information about the language environment, buffer coding system, and current input method. See &lt;a href=&quot;non_002dascii-characters#Non_002dASCII-Characters&quot;&gt;Non-ASCII Characters&lt;/a&gt;.</source>
          <target state="translated">此变量保存模式行构造的值，该结构显示有关语言环境，缓冲区编码系统和当前输入方法的信息。请参阅&lt;a href=&quot;non_002dascii-characters#Non_002dASCII-Characters&quot;&gt;非ASCII字符&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="865ab5f439f010d5038e5c2f6bd8d5328cf2eee0" translate="yes" xml:space="preserve">
          <source>This variable holds the value of the mode line construct that displays whether the current buffer is modified. Its default value displays &amp;lsquo;</source>
          <target state="translated">此变量保存显示当前缓冲区是否被修改的模式行构造的值。其默认值显示为&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="bcbda22dd3d867b0b17321627e60172591c001fd" translate="yes" xml:space="preserve">
          <source>This variable identifies the buffer being displayed in the window. Its default value displays the buffer name, padded with spaces to at least 12 columns.</source>
          <target state="translated">这个变量标识窗口中显示的缓冲区。它的默认值是显示缓冲区的名称,至少12列,用空格填充。</target>
        </trans-unit>
        <trans-unit id="f18ef3fa8d1cc594172be55851eb657c47e6c250" translate="yes" xml:space="preserve">
          <source>This variable identifies the current frame. Its default value displays &lt;code&gt;&quot; &quot;&lt;/code&gt; if you are using a window system which can show multiple frames, or &lt;code&gt;&quot;-%F &quot;&lt;/code&gt; on an ordinary terminal which shows only one frame at a time.</source>
          <target state="translated">此变量标识当前帧。如果使用的窗口系统可以显示多帧，则其默认值显示为 &lt;code&gt;&quot; &quot;&lt;/code&gt; ，而在普通终端上一次仅显示一帧的默认值显示为 &lt;code&gt;&quot;-%F &quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ace1bdce23e62b3a59d6cb4caceefebf39a10b6f" translate="yes" xml:space="preserve">
          <source>This variable indicates the position in the buffer. Its default value displays the buffer percentage and, optionally, the buffer size, the line number and the column number.</source>
          <target state="translated">这个变量表示在缓冲区中的位置,它的默认值显示缓冲区的百分比,还可以选择缓冲区的大小、行号和列号。它的默认值显示缓冲区的百分比,还可以选择显示缓冲区的大小、行号和列号。</target>
        </trans-unit>
        <trans-unit id="671b82f00a9a8576ccf6f84946da4d3ff9fac8dc" translate="yes" xml:space="preserve">
          <source>This variable indicates whether a call of &lt;code&gt;process-file&lt;/code&gt; changes remote files.</source>
          <target state="translated">此变量指示是否调用 &lt;code&gt;process-file&lt;/code&gt; 更改远程文件。</target>
        </trans-unit>
        <trans-unit id="c5ca8a1815d706760193424f27cfc780af9e0726" translate="yes" xml:space="preserve">
          <source>This variable is &lt;code&gt;t&lt;/code&gt; by default. Instead of customizing it to &lt;code&gt;nil&lt;/code&gt; and thus telling &lt;code&gt;display-buffer&lt;/code&gt; what not to do, it&amp;rsquo;s much better to list in &lt;code&gt;display-buffer-base-action&lt;/code&gt; the action functions it should try instead as, for example:</source>
          <target state="translated">默认情况下，此变量为 &lt;code&gt;t&lt;/code&gt; 。与其将其自定义为 &lt;code&gt;nil&lt;/code&gt; 从而告诉 &lt;code&gt;display-buffer&lt;/code&gt; 不应该做什么，不如将其应尝试使用的动作功能列出在 &lt;code&gt;display-buffer-base-action&lt;/code&gt; 中，例如：</target>
        </trans-unit>
        <trans-unit id="64d84c91e24c06852beaf523c2628b072cd44f30" translate="yes" xml:space="preserve">
          <source>This variable is &lt;code&gt;t&lt;/code&gt; if Emacs is nearly out of memory for Lisp objects, and &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">如果Emacs几乎没有Lisp对象的内存，则此变量为 &lt;code&gt;t&lt;/code&gt; ，否则为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a29a7f36bac714cd1390c2bea5038a184550e3a2" translate="yes" xml:space="preserve">
          <source>This variable is a list of functions to be called for &lt;code&gt;interrupt-process&lt;/code&gt;. The arguments of the functions are the same as for &lt;code&gt;interrupt-process&lt;/code&gt;. These functions are called in the order of the list, until one of them returns non-&lt;code&gt;nil&lt;/code&gt;. The default function, which shall always be the last in this list, is &lt;code&gt;internal-default-interrupt-process&lt;/code&gt;.</source>
          <target state="translated">该变量是要为 &lt;code&gt;interrupt-process&lt;/code&gt; 调用的函数的列表。这些函数的参数与 &lt;code&gt;interrupt-process&lt;/code&gt; 相同。这些函数按照列表的顺序调用，直到其中一个返回non- &lt;code&gt;nil&lt;/code&gt; 为止。默认函数（应始终是此列表中的最后一个）是 &lt;code&gt;internal-default-interrupt-process&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ad928e450478c2ee2f972890b7f476fec9518899" translate="yes" xml:space="preserve">
          <source>This variable is a list of strings, each describing one environment variable. The functions &lt;code&gt;getenv&lt;/code&gt; and &lt;code&gt;setenv&lt;/code&gt; work by means of this variable.</source>
          <target state="translated">此变量是字符串列表，每个字符串描述一个环境变量。函数 &lt;code&gt;getenv&lt;/code&gt; 和 &lt;code&gt;setenv&lt;/code&gt; 通过此变量工作。</target>
        </trans-unit>
        <trans-unit id="019729030d7f528fa882520193abfe0636ac6ef2" translate="yes" xml:space="preserve">
          <source>This variable is a list of suffixes (strings) to try adding to the specified program file name. The list should include &lt;code&gt;&quot;&quot;&lt;/code&gt; if you want the name to be tried exactly as specified. The default value is system-dependent.</source>
          <target state="translated">此变量是后缀（字符串）的列表，以尝试添加到指定的程序文件名中。如果您希望完全按照指定的名称尝试，则列表应包括 &lt;code&gt;&quot;&quot;&lt;/code&gt; 。默认值取决于系统。</target>
        </trans-unit>
        <trans-unit id="71e6e9699e598953ad68f45834b68438c1678d93" translate="yes" xml:space="preserve">
          <source>This variable is a normal hook that Emacs runs after initializing a new text terminal. (This applies when Emacs starts up in non-windowed mode, and when making a tty &lt;code&gt;emacsclient&lt;/code&gt; connection.) The hook runs after loading your init file (if applicable) and the terminal-specific Lisp file, so you can use it to adjust the definitions made by that file.</source>
          <target state="translated">此变量是Emacs在初始化新的文本终端后运行的常规挂钩。（这适用于Emacs在非窗口模式下启动以及建立tty &lt;code&gt;emacsclient&lt;/code&gt; 连接时的情况。）挂钩在加载初始化文件（如果适用）和特定于终端的Lisp文件后运行，因此您可以使用它来调整该文件所做的定义。</target>
        </trans-unit>
        <trans-unit id="cc94f282c9a33b6d17eb327be833789be53f4e80" translate="yes" xml:space="preserve">
          <source>This variable is a normal hook that Emacs runs before suspending.</source>
          <target state="translated">这个变量是Emacs在暂停之前运行的普通钩子。</target>
        </trans-unit>
        <trans-unit id="161804933a898b6ce3815d927143897231ca924e" translate="yes" xml:space="preserve">
          <source>This variable is a normal hook that Emacs runs on resuming after a suspension.</source>
          <target state="translated">这个变量是Emacs在暂停后恢复运行的正常挂钩。</target>
        </trans-unit>
        <trans-unit id="067a9793a37e5b13d1fa26a6240ed27801da0d83" translate="yes" xml:space="preserve">
          <source>This variable is a normal hook that is run whenever a buffer is changed that was previously in the unmodified state.</source>
          <target state="translated">这个变量是一个正常的钩子,每当一个缓冲区被改变时,之前处于未修改状态的缓冲区就会被运行。</target>
        </trans-unit>
        <trans-unit id="dc8a1a6e522c3155d706b319dc60d360ef84bf69" translate="yes" xml:space="preserve">
          <source>This variable is a normal hook. See &lt;a href=&quot;hooks#Hooks&quot;&gt;Hooks&lt;/a&gt;.</source>
          <target state="translated">这个变量是一个普通的钩子。参见&lt;a href=&quot;hooks#Hooks&quot;&gt;挂钩&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="055b47c6f182f3895741b93e0453e248a18dc3f4" translate="yes" xml:space="preserve">
          <source>This variable is also the threshold for motion of the mouse to count as a drag.</source>
          <target state="translated">这个变量也是鼠标运动算作拖动的阈值。</target>
        </trans-unit>
        <trans-unit id="0775e11bc47c6c9aa391629165fd13f07f7886a9" translate="yes" xml:space="preserve">
          <source>This variable is always local to the current terminal and cannot be buffer-local. See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;.</source>
          <target state="translated">此变量始终在当前端子本地，并且不能在缓冲区本地。请参阅&lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;多个终端&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2c1f7c6b398e0096b95fd38063ff445df4e85135" translate="yes" xml:space="preserve">
          <source>This variable is always local to the current terminal and cannot be buffer-local. See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;. It is used to implement incremental search mode.</source>
          <target state="translated">此变量始终在当前端子本地，并且不能在缓冲区本地。请参阅&lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;多个终端&lt;/a&gt;。用于实现增量搜索模式。</target>
        </trans-unit>
        <trans-unit id="aff1906dcbd5538dbdd5f4b77127483d16fc81fd" translate="yes" xml:space="preserve">
          <source>This variable is an alist describing keymaps that may or may not be active according to the values of certain variables. Its elements look like this:</source>
          <target state="translated">这个变量是一个描述keymaps的alist,根据某些变量的值,keymaps可能会被激活,也可能不会被激活。它的元素是这样的。</target>
        </trans-unit>
        <trans-unit id="9bf8a251cb783050ddc345f638dd7b108ad2b16a" translate="yes" xml:space="preserve">
          <source>This variable is an alist mapping image types to file name extensions. Emacs uses this in conjunction with the &lt;code&gt;:format&lt;/code&gt; image property (see below) to give a hint to the ImageMagick library as to the type of an image. Each element has the form &lt;code&gt;(&lt;var&gt;type&lt;/var&gt;
&lt;var&gt;extension&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;type&lt;/var&gt; is a symbol specifying an image content-type, and &lt;var&gt;extension&lt;/var&gt; is a string that specifies the associated file name extension.</source>
          <target state="translated">此变量是将图像类型映射到文件扩展名的列表。Emacs将其与 &lt;code&gt;:format&lt;/code&gt; image属性结合使用（请参见下文），以向ImageMagick库提供有关图像类型的提示。每个元素的格式均为 &lt;code&gt;(&lt;var&gt;type&lt;/var&gt; &lt;var&gt;extension&lt;/var&gt;)&lt;/code&gt; ，其中 &lt;var&gt;type&lt;/var&gt; 是指定图像内容类型的符号， &lt;var&gt;extension&lt;/var&gt; 是指定关联文件扩展名的字符串。</target>
        </trans-unit>
        <trans-unit id="6c7441610c3a78b915a4e35eb1c09eb17fc914f8" translate="yes" xml:space="preserve">
          <source>This variable is an alist of elements of the form &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; .
&lt;var&gt;contents&lt;/var&gt;)&lt;/code&gt;. Normally, there is one element for each Emacs register that has been used.</source>
          <target state="translated">该变量是形式的元件的ALIST &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; . &lt;var&gt;contents&lt;/var&gt;)&lt;/code&gt; 。通常，每个已使用的Emacs寄存器都有一个元素。</target>
        </trans-unit>
        <trans-unit id="c005dccb280eafc5942f145355e725dae803dbb5" translate="yes" xml:space="preserve">
          <source>This variable is an alist of syntax table modifiers to use while processing &lt;code&gt;imenu-generic-expression&lt;/code&gt;, to override the syntax table of the current buffer. Each element should have this form:</source>
          <target state="translated">此变量是语法表修饰符的列表，可在处理 &lt;code&gt;imenu-generic-expression&lt;/code&gt; 时使用，以覆盖当前缓冲区的语法表。每个元素应具有以下形式：</target>
        </trans-unit>
        <trans-unit id="667451d1cd5450086c893e0dd92a52214569dd62" translate="yes" xml:space="preserve">
          <source>This variable is an alist of text patterns and corresponding coding systems. Each element has the form &lt;code&gt;(&lt;var&gt;regexp&lt;/var&gt;
. &lt;var&gt;coding-system&lt;/var&gt;)&lt;/code&gt;; a file whose first few kilobytes match &lt;var&gt;regexp&lt;/var&gt; is decoded with &lt;var&gt;coding-system&lt;/var&gt; when its contents are read into a buffer. The settings in this alist take priority over &lt;code&gt;coding:&lt;/code&gt; tags in the files and the contents of &lt;code&gt;file-coding-system-alist&lt;/code&gt; (see below). The default value is set so that Emacs automatically recognizes mail files in Babyl format and reads them with no code conversions.</source>
          <target state="translated">此变量是文本模式和相应的编码系统的列表。每个元素具有形式 &lt;code&gt;(&lt;var&gt;regexp&lt;/var&gt; . &lt;var&gt;coding-system&lt;/var&gt;)&lt;/code&gt; ;当文件的内容读入缓冲区时，其前几千字节与 &lt;var&gt;regexp&lt;/var&gt; 匹配的文件将通过 &lt;var&gt;coding-system&lt;/var&gt; 解码。该列表中的设置优先于 &lt;code&gt;coding:&lt;/code&gt; 文件中的标记和 &lt;code&gt;file-coding-system-alist&lt;/code&gt; （请参见下文）。设置默认值是为了使Emacs可以自动识别Babyl格式的邮件文件，并且无需进行代码转换即可读取它们。</target>
        </trans-unit>
        <trans-unit id="94a29e4805ccc22e16f51eeab593167416353c0a" translate="yes" xml:space="preserve">
          <source>This variable is an alist of user-defined command-line options and associated handler functions. By default it is empty, but you can add elements if you wish.</source>
          <target state="translated">这个变量是一个用户定义的命令行选项和相关处理函数的列表。默认情况下,它是空的,但如果你愿意,你可以添加元素。</target>
        </trans-unit>
        <trans-unit id="2cab6b86ef5216fa5fc8c63a4d0ac1605f26a69b" translate="yes" xml:space="preserve">
          <source>This variable is an alist specifying which coding systems to use for a subprocess, depending on which program is running in the subprocess. It works like &lt;code&gt;file-coding-system-alist&lt;/code&gt;, except that &lt;var&gt;pattern&lt;/var&gt; is matched against the program name used to start the subprocess. The coding system or systems specified in this alist are used to initialize the coding systems used for I/O to the subprocess, but you can specify other coding systems later using &lt;code&gt;set-process-coding-system&lt;/code&gt;.</source>
          <target state="translated">该变量是一个列表，用于指定要用于子流程的编码系统，具体取决于子流程中正在运行的程序。它的工作方式类似于 &lt;code&gt;file-coding-system-alist&lt;/code&gt; ，只是 &lt;var&gt;pattern&lt;/var&gt; 与用于启动子进程的程序名相匹配。此列表中指定的一个或多个编码系统用于初始化用于子 &lt;code&gt;set-process-coding-system&lt;/code&gt; I / O的编码系统，但是稍后可以使用set-process-coding-system来指定其他编码系统。</target>
        </trans-unit>
        <trans-unit id="373e9dce11ae976d1e778d4eafe0d3a69feb2897" translate="yes" xml:space="preserve">
          <source>This variable is an alist specifying which parameters get saved by &lt;code&gt;current-window-configuration&lt;/code&gt; and &lt;code&gt;window-state-get&lt;/code&gt;, and subsequently restored by &lt;code&gt;set-window-configuration&lt;/code&gt; and &lt;code&gt;window-state-put&lt;/code&gt;. See &lt;a href=&quot;window-configurations#Window-Configurations&quot;&gt;Window Configurations&lt;/a&gt;.</source>
          <target state="translated">该变量是一个清单，指定哪些参数由 &lt;code&gt;current-window-configuration&lt;/code&gt; 和 &lt;code&gt;window-state-get&lt;/code&gt; 保存，然后由 &lt;code&gt;set-window-configuration&lt;/code&gt; 和 &lt;code&gt;window-state-put&lt;/code&gt; 恢复。请参阅&lt;a href=&quot;window-configurations#Window-Configurations&quot;&gt;窗口配置&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a3f81404dfac1fe44b53204c180b72eb7545faed" translate="yes" xml:space="preserve">
          <source>This variable is an alist that specifies the coding system to use for network streams. It works much like &lt;code&gt;file-coding-system-alist&lt;/code&gt;, with the difference that the &lt;var&gt;pattern&lt;/var&gt; in an element may be either a port number or a regular expression. If it is a regular expression, it is matched against the network service name used to open the network stream.</source>
          <target state="translated">此变量是一个清单，用于指定要用于网络流的编码系统。它的工作原理与 &lt;code&gt;file-coding-system-alist&lt;/code&gt; 相似，不同之处在于元素中的 &lt;var&gt;pattern&lt;/var&gt; 可以是端口号或正则表达式。如果它是正则表达式，则将其与用于打开网络流的网络服务名称匹配。</target>
        </trans-unit>
        <trans-unit id="3a959be21ff862cf002f86cdcaf3a543f74ddbe6" translate="yes" xml:space="preserve">
          <source>This variable is an alist that specifies the coding systems to use for reading and writing particular files. Each element has the form &lt;code&gt;(&lt;var&gt;pattern&lt;/var&gt; . &lt;var&gt;coding&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;pattern&lt;/var&gt; is a regular expression that matches certain file names. The element applies to file names that match &lt;var&gt;pattern&lt;/var&gt;.</source>
          <target state="translated">此变量是一个清单，用于指定用于读取和写入特定文件的编码系统。每个元素具有形式 &lt;code&gt;(&lt;var&gt;pattern&lt;/var&gt; . &lt;var&gt;coding&lt;/var&gt;)&lt;/code&gt; ，其中 &lt;var&gt;pattern&lt;/var&gt; 是正则表达式匹配的某些文件名。元素适用于与 &lt;var&gt;pattern&lt;/var&gt; 匹配的文件名。</target>
        </trans-unit>
        <trans-unit id="a7972cb56630206ee640b4248a3ccc058f94097b" translate="yes" xml:space="preserve">
          <source>This variable is an alist that specifies the coding systems to use for reading and writing particular files. Its form is like that of &lt;code&gt;file-coding-system-alist&lt;/code&gt;, but, unlike the latter, this variable takes priority over any &lt;code&gt;coding:&lt;/code&gt; tags in the file.</source>
          <target state="translated">此变量是一个清单，用于指定用于读取和写入特定文件的编码系统。它的形式类似于 &lt;code&gt;file-coding-system-alist&lt;/code&gt; 的形式，但是与后者不同，此变量的优先级高于文件中的任何 &lt;code&gt;coding:&lt;/code&gt; 标记。</target>
        </trans-unit>
        <trans-unit id="36c69cfbac56eab11877033b8b333faca3c9ecb2" translate="yes" xml:space="preserve">
          <source>This variable is an association list mapping terminal types to their aliases. For example, an element of the form &lt;code&gt;(&quot;vt102&quot;
. &quot;vt100&quot;)&lt;/code&gt; means to treat a terminal of type &amp;lsquo;</source>
          <target state="translated">此变量是将终端类型映射到其别名的关联列表。例如，形式为 &lt;code&gt;(&quot;vt102&quot; . &quot;vt100&quot;)&lt;/code&gt; 的元素表示处理类型为'</target>
        </trans-unit>
        <trans-unit id="124f6da8225ba9005cd78976d832a6444e2d5930" translate="yes" xml:space="preserve">
          <source>This variable is an older variant of &lt;code&gt;scroll-conservatively&lt;/code&gt;. The difference is that if its value is &lt;var&gt;n&lt;/var&gt;, that permits scrolling only by precisely &lt;var&gt;n&lt;/var&gt; lines, not a smaller number. This feature does not work with &lt;code&gt;scroll-margin&lt;/code&gt;. The default value is zero.</source>
          <target state="translated">该变量是 &lt;code&gt;scroll-conservatively&lt;/code&gt; 的旧版本。不同之处在于，如果其值为 &lt;var&gt;n&lt;/var&gt; ，则仅允许滚动精确的 &lt;var&gt;n&lt;/var&gt; 行，而不是较小的数量。此功能不适用于 &lt;code&gt;scroll-margin&lt;/code&gt; 。默认值为零。</target>
        </trans-unit>
        <trans-unit id="4e34486b85511f4c0616559a5644a62aeb9440a2" translate="yes" xml:space="preserve">
          <source>This variable is another keymap used just like &lt;code&gt;input-decode-map&lt;/code&gt; to translate input events into other events. It differs from &lt;code&gt;input-decode-map&lt;/code&gt; in that it goes to work after &lt;code&gt;local-function-key-map&lt;/code&gt; is finished rather than before; it receives the results of translation by &lt;code&gt;local-function-key-map&lt;/code&gt;.</source>
          <target state="translated">此变量是另一个键盘映射，与 &lt;code&gt;input-decode-map&lt;/code&gt; 一样,用于将输入事件转换为其他事件。它与 &lt;code&gt;input-decode-map&lt;/code&gt; 的不同之处在于，它是在完成 &lt;code&gt;local-function-key-map&lt;/code&gt; 之后而不是之前开始工作的；它通过 &lt;code&gt;local-function-key-map&lt;/code&gt; 接收翻译结果。</target>
        </trans-unit>
        <trans-unit id="5939ba0f237dde5ad4377992ce082070202f65ef" translate="yes" xml:space="preserve">
          <source>This variable is automatically buffer-local in all buffers; its value specifies the buffer&amp;rsquo;s display table. If it is &lt;code&gt;nil&lt;/code&gt;, there is no buffer display table.</source>
          <target state="translated">此变量在所有缓冲区中自动为本地缓冲区；它的值指定缓冲区的显示表。如果为 &lt;code&gt;nil&lt;/code&gt; ，则没有缓冲区显示表。</target>
        </trans-unit>
        <trans-unit id="c215a418df69d5bc5e4d0af22dcea97a5d9a31d1" translate="yes" xml:space="preserve">
          <source>This variable is displayed at the end of the mode line.</source>
          <target state="translated">此变量显示在模式行的最后。</target>
        </trans-unit>
        <trans-unit id="c848938c7b57cf6e780da020514fc4b9f3212981" translate="yes" xml:space="preserve">
          <source>This variable is displayed at the front of the mode line. By default, this construct is displayed right at the beginning of the mode line, except that if there is a memory-full message, it is displayed first.</source>
          <target state="translated">这个变量显示在模式行的前面。默认情况下,这个结构体显示在模式行的开头,但如果有内存满的消息,则会先显示。</target>
        </trans-unit>
        <trans-unit id="0bc313dc0a92d8a91dc86fe9988d07a6ce0408fa" translate="yes" xml:space="preserve">
          <source>This variable is ignored if the buffer is already displayed in the selected window or never appeared in it before, or if &lt;code&gt;switch-to-buffer&lt;/code&gt; calls &lt;code&gt;pop-to-buffer&lt;/code&gt; to display the buffer.</source>
          <target state="translated">如果缓冲区已经显示在所选窗口中，或者以前从未出现在该窗口中，或者如果 &lt;code&gt;switch-to-buffer&lt;/code&gt; 调用 &lt;code&gt;pop-to-buffer&lt;/code&gt; 显示缓冲区，则忽略此变量。</target>
        </trans-unit>
        <trans-unit id="d35b4864af0de99a8d562e2ac965a573b15d48a2" translate="yes" xml:space="preserve">
          <source>This variable is ignored if the given &lt;var&gt;library&lt;/var&gt; is statically linked into Emacs.</source>
          <target state="translated">如果给定 &lt;var&gt;library&lt;/var&gt; 静态链接到Emacs，则忽略此变量。</target>
        </trans-unit>
        <trans-unit id="797f256bf076b78b90391f0e757c3fdf9ac63473" translate="yes" xml:space="preserve">
          <source>This variable is non-&lt;code&gt;nil&lt;/code&gt; if Emacs is in the process of loading a file, and it is &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">如果Emacs正在加载文件，则此变量为 &lt;code&gt;nil&lt;/code&gt; ，否则为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1eb3b35fd50500f504a0f75fdaa9b199fdad25b8" translate="yes" xml:space="preserve">
          <source>This variable is non-&lt;code&gt;nil&lt;/code&gt; if and only if a keyboard macro is being defined. A command can test this variable so as to behave differently while a macro is being defined. The value is &lt;code&gt;append&lt;/code&gt; while appending to the definition of an existing macro. The commands &lt;code&gt;start-kbd-macro&lt;/code&gt;, &lt;code&gt;kmacro-start-macro&lt;/code&gt; and &lt;code&gt;end-kbd-macro&lt;/code&gt; set this variable&amp;mdash;do not set it yourself.</source>
          <target state="translated">当且仅当定义了键盘宏时，此变量才为 &lt;code&gt;nil&lt;/code&gt; 。命令可以测试此变量，以便在定义宏时表现不同。值被 &lt;code&gt;append&lt;/code&gt; 而追加到现有的宏的定义。命令 &lt;code&gt;start-kbd-macro&lt;/code&gt; ， &lt;code&gt;kmacro-start-macro&lt;/code&gt; 和 &lt;code&gt;end-kbd-macro&lt;/code&gt; 设置此变量-请勿自行设置。</target>
        </trans-unit>
        <trans-unit id="5afd9a3da466744d91ed051036855f1a242c35a6" translate="yes" xml:space="preserve">
          <source>This variable is non-&lt;code&gt;nil&lt;/code&gt; when Emacs is running in batch mode.</source>
          <target state="translated">当Emacs以批处理模式运行时，此变量为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b71c63bce963e4462ce41aa1c838705cd629a347" translate="yes" xml:space="preserve">
          <source>This variable is normally &lt;code&gt;nil&lt;/code&gt;, but the undo commands bind it to &lt;code&gt;t&lt;/code&gt;. This is so that various kinds of change hooks can tell when they&amp;rsquo;re being called for the sake of undoing.</source>
          <target state="translated">该变量通常为 &lt;code&gt;nil&lt;/code&gt; ，但是undo命令将其绑定到 &lt;code&gt;t&lt;/code&gt; 。这样一来，各种各样的变更钩子就可以告知它们何时被撤消。</target>
        </trans-unit>
        <trans-unit id="d9bc765189a8bb5b379197dc9ae2ed38f4623384" translate="yes" xml:space="preserve">
          <source>This variable is normally set through the &amp;ldquo;other&amp;rdquo; elements in &lt;code&gt;font-lock-defaults&lt;/code&gt;:</source>
          <target state="translated">通常通过 &lt;code&gt;font-lock-defaults&lt;/code&gt; 中的&amp;ldquo; other&amp;rdquo;元素来设置此变量：</target>
        </trans-unit>
        <trans-unit id="27b670d7942c08834e5aa9a9568085b3f2bf3382" translate="yes" xml:space="preserve">
          <source>This variable is not a normal hook, because each function is called with two arguments: the window, and its new display-start position. At the time of the call, the display-start position of the argument window is already set to its new value, and the buffer to be displayed in the window is set as the current buffer.</source>
          <target state="translated">这个变量不是一个普通的钩子,因为每个函数的调用都有两个参数:窗口,以及它的新的显示-开始位置。在调用时,参数window的显示起始位置已经被设置为新的值,而要在window中显示的缓冲区被设置为当前缓冲区。</target>
        </trans-unit>
        <trans-unit id="376a0b2e857edf00ad857a5b0eb49dadd1cf62cb" translate="yes" xml:space="preserve">
          <source>This variable is obsolete and will be removed in future versions.</source>
          <target state="translated">这个变量已经过时,在未来的版本中会被删除。</target>
        </trans-unit>
        <trans-unit id="caef5e927198433683f631964ab6349e7678f98b" translate="yes" xml:space="preserve">
          <source>This variable is provided for backward compatibility only. It is obeyed by &lt;code&gt;display-buffer&lt;/code&gt; via a special mechanism in &lt;code&gt;display-buffer-fallback-action&lt;/code&gt;, which calls the action function &lt;code&gt;display-buffer-pop-up-window&lt;/code&gt; (see &lt;a href=&quot;buffer-display-action-functions#Buffer-Display-Action-Functions&quot;&gt;Buffer Display Action Functions&lt;/a&gt;) when the value of this option is non-&lt;code&gt;nil&lt;/code&gt;. It is not consulted by &lt;code&gt;display-buffer-pop-up-window&lt;/code&gt; itself, which the user may specify directly in &lt;code&gt;display-buffer-alist&lt;/code&gt; etc.</source>
          <target state="translated">提供此变量仅是为了向后兼容。它是由服从 &lt;code&gt;display-buffer&lt;/code&gt; 通过在一种特殊的机制 &lt;code&gt;display-buffer-fallback-action&lt;/code&gt; ，它调用动作功能 &lt;code&gt;display-buffer-pop-up-window&lt;/code&gt; （见&lt;a href=&quot;buffer-display-action-functions#Buffer-Display-Action-Functions&quot;&gt;缓冲区显示操作功能&lt;/a&gt;）当这个选项的值是非 &lt;code&gt;nil&lt;/code&gt; 。不能由 &lt;code&gt;display-buffer-pop-up-window&lt;/code&gt; 本身查询，用户可以在 &lt;code&gt;display-buffer-alist&lt;/code&gt; 等中直接指定。</target>
        </trans-unit>
        <trans-unit id="fe6ba336d942b6fcea77dc52d3523412d56064ec" translate="yes" xml:space="preserve">
          <source>This variable is provided mainly for backward compatibility. It is obeyed by &lt;code&gt;display-buffer&lt;/code&gt; via a special mechanism in &lt;code&gt;display-buffer-fallback-action&lt;/code&gt;, which calls the action function &lt;code&gt;display-buffer-pop-up-frame&lt;/code&gt; (see &lt;a href=&quot;buffer-display-action-functions#Buffer-Display-Action-Functions&quot;&gt;Buffer Display Action Functions&lt;/a&gt;) if the value is non-&lt;code&gt;nil&lt;/code&gt;. (This is done before attempting to split a window.) This variable is not consulted by &lt;code&gt;display-buffer-pop-up-frame&lt;/code&gt; itself, which the user may specify directly in &lt;code&gt;display-buffer-alist&lt;/code&gt; etc.</source>
          <target state="translated">提供此变量主要是为了向后兼容。 &lt;code&gt;display-buffer&lt;/code&gt; 通过 &lt;code&gt;display-buffer-fallback-action&lt;/code&gt; 中的一种特殊机制来遵守它，如果该值不为 &lt;code&gt;nil&lt;/code&gt; ，则调用动作函数 &lt;code&gt;display-buffer-pop-up-frame&lt;/code&gt; （请参阅&lt;a href=&quot;buffer-display-action-functions#Buffer-Display-Action-Functions&quot;&gt;Buffer Display Action函数&lt;/a&gt;）。 （这是在尝试分割窗口之前完成的。） &lt;code&gt;display-buffer-pop-up-frame&lt;/code&gt; 本身不咨询该变量，用户可以在 &lt;code&gt;display-buffer-alist&lt;/code&gt; 等中直接指定。</target>
        </trans-unit>
        <trans-unit id="93e1ba20cdb5f38185724217a17fe96e960eda25" translate="yes" xml:space="preserve">
          <source>This variable is set automatically by Emacs. Its value is &lt;code&gt;t&lt;/code&gt; when there are two or more frames (not counting minibuffer-only frames or invisible frames). The default value of &lt;code&gt;frame-title-format&lt;/code&gt; uses &lt;code&gt;multiple-frames&lt;/code&gt; so as to put the buffer name in the frame title only when there is more than one frame.</source>
          <target state="translated">此变量由Emacs自动设置。当有两个或更多帧（不计算仅用于迷你缓冲区的帧或不可见帧）时，其值为 &lt;code&gt;t&lt;/code&gt; 。 &lt;code&gt;frame-title-format&lt;/code&gt; 的默认值使用 &lt;code&gt;multiple-frames&lt;/code&gt; 以便仅在一个以上的帧时才将缓冲区名称放在帧标题中。</target>
        </trans-unit>
        <trans-unit id="0f6b0216548829286d841787d7fb6ac3ba4b4400" translate="yes" xml:space="preserve">
          <source>This variable is set by modes to specify how to fontify text in that mode. It automatically becomes buffer-local when set. If its value is &lt;code&gt;nil&lt;/code&gt;, Font Lock mode does no highlighting, and you can use the &amp;lsquo;</source>
          <target state="translated">该变量由模式设置，以指定如何在该模式下字体化文本。设置后，它将自动变为本地缓冲区。如果其值为 &lt;code&gt;nil&lt;/code&gt; ，则&amp;ldquo;字体锁定&amp;rdquo;模式不突出显示，您可以使用&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="03be4af58c3aec1ad32af06e6b698351482d7eec" translate="yes" xml:space="preserve">
          <source>This variable is set non-&lt;code&gt;nil&lt;/code&gt; by defining or altering any abbrevs (except system abbrevs). This serves as a flag for various Emacs commands to offer to save your abbrevs.</source>
          <target state="translated">这个变量被设置非 &lt;code&gt;nil&lt;/code&gt; 通过定义或改变任何abbrevs（除系统abbrevs）。这是各种Emacs命令的标志，可用来保存您的缩写。</target>
        </trans-unit>
        <trans-unit id="ca27bbac57654ccf2415ebe2c70b3ea90647ce9e" translate="yes" xml:space="preserve">
          <source>This variable is set to the last input event that was read by the command loop as part of a command. The principal use of this variable is in &lt;code&gt;self-insert-command&lt;/code&gt;, which uses it to decide which character to insert.</source>
          <target state="translated">此变量设置为命令循环作为命令的一部分读取的最后一个输入事件。该变量的主要用途是在 &lt;code&gt;self-insert-command&lt;/code&gt; 中，它使用它来确定要插入哪个字符。</target>
        </trans-unit>
        <trans-unit id="f52560d9347e2a733b950594d1ee2bd1ee802fbb" translate="yes" xml:space="preserve">
          <source>This variable is set up by Emacs just like &lt;code&gt;last-command&lt;/code&gt;, but never altered by Lisp programs.</source>
          <target state="translated">就像 &lt;code&gt;last-command&lt;/code&gt; 一样，此变量由Emacs设置，但Lisp程序从未更改过。</target>
        </trans-unit>
        <trans-unit id="76a29e52f85f2aa6242f6e4f58aafd9e372ad48e" translate="yes" xml:space="preserve">
          <source>This variable is significant only if &lt;code&gt;backup-by-copying&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;, since copying is always used when that variable is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">仅当 &lt;code&gt;backup-by-copying&lt;/code&gt; 为 &lt;code&gt;nil&lt;/code&gt; 时，此变量才有意义，因为在该变量为非 &lt;code&gt;nil&lt;/code&gt; 时始终使用复制。</target>
        </trans-unit>
        <trans-unit id="02406f64c5cf3ddc50c8626b920a2fa095ddb8df" translate="yes" xml:space="preserve">
          <source>This variable is the definition of the most recently defined keyboard macro. Its value is a string or vector, or &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此变量是最近定义的键盘宏的定义。它的值是一个字符串或向量，或 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="50ab5da14852f23091c972692a46461ad3a9497e" translate="yes" xml:space="preserve">
          <source>This variable is the meta-prefix character code. It is used for translating a meta character to a two-character sequence so it can be looked up in a keymap. For useful results, the value should be a prefix event (see &lt;a href=&quot;prefix-keys#Prefix-Keys&quot;&gt;Prefix Keys&lt;/a&gt;). The default value is 27, which is the</source>
          <target state="translated">此变量是元前缀字符代码。它用于将元字符转换为两个字符的序列，以便可以在键盘图中查找它。为了获得有用的结果，该值应该是一个前缀事件（请参阅&lt;a href=&quot;prefix-keys#Prefix-Keys&quot;&gt;Prefix Keys&lt;/a&gt;）。默认值为27，即</target>
        </trans-unit>
        <trans-unit id="376c5d142708b7d85e9e19b23ca69182f40d0fc1" translate="yes" xml:space="preserve">
          <source>This variable is the standard obarray for use by &lt;code&gt;intern&lt;/code&gt; and &lt;code&gt;read&lt;/code&gt;.</source>
          <target state="translated">此变量是供 &lt;code&gt;intern&lt;/code&gt; 和 &lt;code&gt;read&lt;/code&gt; 使用的标准对象数组。</target>
        </trans-unit>
        <trans-unit id="1039647cd38f8bfd4258dddb552926ab6a4a4ed9" translate="yes" xml:space="preserve">
          <source>This variable is used by &lt;code&gt;read-file-name&lt;/code&gt;, and thus, indirectly, by most commands reading file names. (This includes all commands that use the code letters &amp;lsquo;</source>
          <target state="translated">该变量由 &lt;code&gt;read-file-name&lt;/code&gt; 使用，因此，大多数读取文件名的命令间接使用此变量。（这包括所有使用代码字母'</target>
        </trans-unit>
        <trans-unit id="aedb0bf79b146af9682aaaed6462ef9188293a47" translate="yes" xml:space="preserve">
          <source>This variable is used by passing it as an argument to the function &lt;code&gt;replace-match&lt;/code&gt;. See &lt;a href=&quot;replacing-match#Replacing-Match&quot;&gt;Replacing Match&lt;/a&gt;.</source>
          <target state="translated">通过将该变量作为参数传递给函数 &lt;code&gt;replace-match&lt;/code&gt; 来使用。请参阅&lt;a href=&quot;replacing-match#Replacing-Match&quot;&gt;替换比赛&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="66315d01aad0af584ac9d069327490c6bab486f4" translate="yes" xml:space="preserve">
          <source>This variable is used by the function &lt;code&gt;delete-auto-save-file-if-necessary&lt;/code&gt;. If it is non-&lt;code&gt;nil&lt;/code&gt;, Emacs deletes auto-save files when a true save is done (in the visited file). This saves disk space and unclutters your directory.</source>
          <target state="translated">该变量由函数 &lt;code&gt;delete-auto-save-file-if-necessary&lt;/code&gt; 使用。如果不是 &lt;code&gt;nil&lt;/code&gt; ，则在完成真正的保存后（在访问的文件中）Emacs会删除自动保存的文件。这样可以节省磁盘空间并整理目录。</target>
        </trans-unit>
        <trans-unit id="62db85ef23e40c3a7577d5236a43bea3d0b01cf4" translate="yes" xml:space="preserve">
          <source>This variable is used in conjunction with the &lt;code&gt;minor-mode-alist&lt;/code&gt; to display the minor mode name in the mode line. It also determines whether the minor mode keymap is active, via &lt;code&gt;minor-mode-map-alist&lt;/code&gt; (see &lt;a href=&quot;controlling-active-maps#Controlling-Active-Maps&quot;&gt;Controlling Active Maps&lt;/a&gt;). Individual commands or hooks can also check its value.</source>
          <target state="translated">该变量与 &lt;code&gt;minor-mode-alist&lt;/code&gt; 结合使用，以在模式行中显示次要模式名称。它还通过 &lt;code&gt;minor-mode-map-alist&lt;/code&gt; 确定次要模式键盘映射是否处于活动状态（请参阅&lt;a href=&quot;controlling-active-maps#Controlling-Active-Maps&quot;&gt;控制活动映射&lt;/a&gt;）。单个命令或挂钩也可以检查其值。</target>
        </trans-unit>
        <trans-unit id="f10f1b7d43a13da55ece7c54f425ba94153de2b3" translate="yes" xml:space="preserve">
          <source>This variable is used to define the maximum size of image that Emacs will load. Emacs will refuse to load (and display) any image that is larger than this limit.</source>
          <target state="translated">这个变量用于定义Emacs将加载的图像的最大尺寸,Emacs将拒绝加载(和显示)任何大于这个限制的图像。Emacs将拒绝加载(和显示)任何大于此限制的图像。</target>
        </trans-unit>
        <trans-unit id="cb63013f442736c9ce6a071ed8662141a1cace92" translate="yes" xml:space="preserve">
          <source>This variable is used to identify &lt;code&gt;emacsclient&lt;/code&gt; frames.</source>
          <target state="translated">此变量用于标识 &lt;code&gt;emacsclient&lt;/code&gt; 框架。</target>
        </trans-unit>
        <trans-unit id="e87edcba6da84a8bebb299509ddb8ae3703fd740" translate="yes" xml:space="preserve">
          <source>This variable is used to show whether &lt;code&gt;default-directory&lt;/code&gt; for the current buffer is remote.</source>
          <target state="translated">此变量用于显示当前缓冲区的 &lt;code&gt;default-directory&lt;/code&gt; 是否为远程目录。</target>
        </trans-unit>
        <trans-unit id="84409f176efb2c42d215233ff2fae5d51b9502e8" translate="yes" xml:space="preserve">
          <source>This variable is used to specify extra properties of the current completion command. It is intended to be let-bound by specialized completion commands. Its value should be a list of property and value pairs. The following properties are supported:</source>
          <target state="translated">此变量用于指定当前完成命令的额外属性。它的目的是让专门的完成命令来约束。它的值应该是一个属性和值对的列表。支持以下属性。</target>
        </trans-unit>
        <trans-unit id="c93b80661ff181348fe72f3b646d1db6a33626b1" translate="yes" xml:space="preserve">
          <source>This variable is useful for referring back to values of forms recently evaluated. It is generally a bad idea to print the value of &lt;code&gt;values&lt;/code&gt; itself, since this may be very long. Instead, examine particular elements, like this:</source>
          <target state="translated">此变量对于参考最近评估的表单的值很有用。打印 &lt;code&gt;values&lt;/code&gt; 本身的值通常是一个坏主意，因为这可能很长。相反，请检查特定元素，如下所示：</target>
        </trans-unit>
        <trans-unit id="436db1e43d4a73a88992fa12b3a5af3ca227c735" translate="yes" xml:space="preserve">
          <source>This variable keeps the main thread Emacs is running, or &lt;code&gt;nil&lt;/code&gt; if Emacs is compiled without thread support.</source>
          <target state="translated">该变量使Emacs的主线程保持运行状态；如果Emacs的编译没有线程支持，则该变量为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0d4cd53aa022f27698b2e0664ef69eb65bd377c2" translate="yes" xml:space="preserve">
          <source>This variable lets Lisp programs &amp;ldquo;press&amp;rdquo; the modifier keys on the keyboard. The value is a character. Only the modifiers of the character matter. Each time the user types a keyboard key, it is altered as if those modifier keys were held down. For instance, if you bind &lt;code&gt;extra-keyboard-modifiers&lt;/code&gt; to &lt;code&gt;?\C-\M-a&lt;/code&gt;, then all keyboard input characters typed during the scope of the binding will have the control and meta modifiers applied to them. The character &lt;code&gt;?\C-@&lt;/code&gt;, equivalent to the integer 0, does not count as a control character for this purpose, but as a character with no modifiers. Thus, setting &lt;code&gt;extra-keyboard-modifiers&lt;/code&gt; to zero cancels any modification.</source>
          <target state="translated">此变量使Lisp程序可以&amp;ldquo;按下&amp;rdquo;键盘上的修饰键。该值是一个字符。只有角色的修饰语很重要。每次用户键入键盘键时，都会对其进行更改，就像按下了这些修饰键一样。例如，如果将 &lt;code&gt;extra-keyboard-modifiers&lt;/code&gt; 绑定到 &lt;code&gt;?\C-\M-a&lt;/code&gt; ，则在绑定范围内键入的所有键盘输入字符都将对其应用控制和meta修饰符。等效于整数0的字符 &lt;code&gt;?\C-@&lt;/code&gt; 不会为此目的算作控制字符，而是不带修饰符的字符。因此，将 &lt;code&gt;extra-keyboard-modifiers&lt;/code&gt; 设置为零会取消所有修改。</target>
        </trans-unit>
        <trans-unit id="01341c9aaa373d91702cb7e8ffda6a4c916f0625" translate="yes" xml:space="preserve">
          <source>This variable lets you specify alternative font registries to try, if a given registry is specified and doesn&amp;rsquo;t exist. Each element should have this form:</source>
          <target state="translated">如果指定了给定的注册表但该注册表不存在，则可以使用此变量指定其他字体注册表。每个元素应具有以下形式：</target>
        </trans-unit>
        <trans-unit id="d1c3d7e0c03db028ef7a807bfc918813c4fc5bca" translate="yes" xml:space="preserve">
          <source>This variable limits the effective value of &lt;code&gt;scroll-margin&lt;/code&gt; to a fraction of the current window line height. For example, if the current window has 20 lines and &lt;code&gt;maximum-scroll-margin&lt;/code&gt; is 0.1, then the scroll margins will never be larger than 2 lines, no matter how big &lt;code&gt;scroll-margin&lt;/code&gt; is.</source>
          <target state="translated">此变量将 &lt;code&gt;scroll-margin&lt;/code&gt; 的有效值限制为当前窗口行高的一小部分。例如，如果当前窗口有20行，并且 &lt;code&gt;maximum-scroll-margin&lt;/code&gt; 为0.1，则滚动边距将永远不会大于2行，无论 &lt;code&gt;scroll-margin&lt;/code&gt; 有多大。</target>
        </trans-unit>
        <trans-unit id="4c7a4e958845ea40dde2dc0c25650bff2b222785" translate="yes" xml:space="preserve">
          <source>This variable names the function to be called to request the user to select a proper coding system for encoding text when the default coding system for an output operation cannot safely encode that text. The default value of this variable is &lt;code&gt;select-safe-coding-system&lt;/code&gt;. Emacs primitives that write text to files, such as &lt;code&gt;write-region&lt;/code&gt;, or send text to other processes, such as &lt;code&gt;process-send-region&lt;/code&gt;, normally call the value of this variable, unless &lt;code&gt;coding-system-for-write&lt;/code&gt; is bound to a non-&lt;code&gt;nil&lt;/code&gt; value (see &lt;a href=&quot;specifying-coding-systems#Specifying-Coding-Systems&quot;&gt;Specifying Coding Systems&lt;/a&gt;).</source>
          <target state="translated">当用于输出操作的默认编码系统无法安全地对该文本进行编码时，此变量命名要调用的函数，以请求用户选择适当的编码系统来对文本进行编码。此变量的默认值为 &lt;code&gt;select-safe-coding-system&lt;/code&gt; 。将文本写入文件（例如 &lt;code&gt;write-region&lt;/code&gt; ）或将文本发送到其他进程（例如 &lt;code&gt;process-send-region&lt;/code&gt; )的Emacs原语通常会调用此变量的值，除非 &lt;code&gt;coding-system-for-write&lt;/code&gt; 绑定到非- &lt;code&gt;nil&lt;/code&gt; 值（参见&lt;a href=&quot;specifying-coding-systems#Specifying-Coding-Systems&quot;&gt;指定编码系统&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="c23531bf92c593cfc879e88f1976a1773f78275d" translate="yes" xml:space="preserve">
          <source>This variable provides a way of communicating killed text to other programs, when you are using a window system. Its value should be &lt;code&gt;nil&lt;/code&gt; or a function of one required argument.</source>
          <target state="translated">使用窗口系统时，此变量提供了一种将杀死的文本与其他程序进行通信的方法。它的值应为 &lt;code&gt;nil&lt;/code&gt; 或一个必需参数的函数。</target>
        </trans-unit>
        <trans-unit id="1e7e004520da68bebcdd98a02f42428be2f0ca64" translate="yes" xml:space="preserve">
          <source>This variable provides a way of transferring killed text from other programs, when you are using a window system. Its value should be &lt;code&gt;nil&lt;/code&gt; or a function of no arguments.</source>
          <target state="translated">当使用窗口系统时，此变量提供了一种从其他程序传输终止文本的方法。其值应为 &lt;code&gt;nil&lt;/code&gt; 或无参数的函数。</target>
        </trans-unit>
        <trans-unit id="030a51c56b05836f902d0059148131139d93e32f" translate="yes" xml:space="preserve">
          <source>This variable provides a way to override how the filling functions, such as &lt;code&gt;fill-region&lt;/code&gt; and &lt;code&gt;fill-paragraph&lt;/code&gt;, move forward to the next paragraph. Its value should be a function, which is called with a single argument &lt;var&gt;n&lt;/var&gt;, the number of paragraphs to move, and should return the difference between &lt;var&gt;n&lt;/var&gt; and the number of paragraphs actually moved. The default value of this variable is &lt;code&gt;forward-paragraph&lt;/code&gt;. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Paragraphs.html#Paragraphs&quot;&gt;Paragraphs&lt;/a&gt; in</source>
          <target state="translated">此变量提供了一种方法来覆盖填充功能（例如 &lt;code&gt;fill-region&lt;/code&gt; 和 &lt;code&gt;fill-paragraph&lt;/code&gt; ）如何前进到下一个段落。它的值应该是一个函数，该函数使用单个参数 &lt;var&gt;n&lt;/var&gt; （要移动的段落数）调用，并且应该返回 &lt;var&gt;n&lt;/var&gt; 与实际移动的段落数之间的差。此变量的默认值为 &lt;code&gt;forward-paragraph&lt;/code&gt; 。见&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Paragraphs.html#Paragraphs&quot;&gt;段落&lt;/a&gt;中</target>
        </trans-unit>
        <trans-unit id="74277818ea9e0a2b5ede9f7b50a31147007f80c2" translate="yes" xml:space="preserve">
          <source>This variable provides a way to override the filling of paragraphs. If its value is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;fill-paragraph&lt;/code&gt; calls this function to do the work. If the function returns a non-&lt;code&gt;nil&lt;/code&gt; value, &lt;code&gt;fill-paragraph&lt;/code&gt; assumes the job is done, and immediately returns that value.</source>
          <target state="translated">该变量提供了一种覆盖段落填充的方法。如果其值不为 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;fill-paragraph&lt;/code&gt; 调用此函数进行工作。如果函数返回一个非 &lt;code&gt;nil&lt;/code&gt; 值， &lt;code&gt;fill-paragraph&lt;/code&gt; 假设工作已经完成，并立即返回值。</target>
        </trans-unit>
        <trans-unit id="3800af661db458dc57b43e12e3912a9d79acd6e2" translate="yes" xml:space="preserve">
          <source>This variable provides another way to mark some variable values as safe. It is a list of cons cells &lt;code&gt;(&lt;var&gt;var&lt;/var&gt; . &lt;var&gt;val&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;var&lt;/var&gt; is a variable name and &lt;var&gt;val&lt;/var&gt; is a value which is safe for that variable.</source>
          <target state="translated">此变量提供了将某些变量值标记为安全的另一种方法。这是利弊小区的名单 &lt;code&gt;(&lt;var&gt;var&lt;/var&gt; . &lt;var&gt;val&lt;/var&gt;)&lt;/code&gt; ，其中 &lt;var&gt;var&lt;/var&gt; 是一个变量名， &lt;var&gt;val&lt;/var&gt; 是一个值，它是该变量是安全的。</target>
        </trans-unit>
        <trans-unit id="e9a7fa839145e25eab7f151fb8df4a357ebe5d83" translate="yes" xml:space="preserve">
          <source>This variable records the debugging status of the current interactive command. Each time a command is called interactively, this variable is bound to &lt;code&gt;nil&lt;/code&gt;. The debugger can set this variable to leave information for future debugger invocations during the same command invocation.</source>
          <target state="translated">此变量记录当前交互式命令的调试状态。每次交互式调用命令时，此变量都绑定到 &lt;code&gt;nil&lt;/code&gt; 。调试器可以将此变量设置为在同一命令调用期间为将来的调试器调用保留信息。</target>
        </trans-unit>
        <trans-unit id="f873bc0862353ed3c8f1ba89acfe8e0c6ef90866" translate="yes" xml:space="preserve">
          <source>This variable records the last terminal input event read, whether as part of a command or explicitly by a Lisp program.</source>
          <target state="translated">这个变量记录了最后一次读取的终端输入事件,无论是作为命令的一部分还是由Lisp程序显式读取。</target>
        </trans-unit>
        <trans-unit id="869dca2c2f9e7f7334d4386ab6d41a8e06254e7c" translate="yes" xml:space="preserve">
          <source>This variable records the name of the command now being executed by the editor command loop. Like &lt;code&gt;last-command&lt;/code&gt;, it is normally a symbol with a function definition.</source>
          <target state="translated">此变量记录现在由编辑器命令循环执行的命令的名称。像 &lt;code&gt;last-command&lt;/code&gt; 一样，它通常是带有函数定义的符号。</target>
        </trans-unit>
        <trans-unit id="2d872a1f6d0665742d4676aabfb07f7d4c548912" translate="yes" xml:space="preserve">
          <source>This variable records the name of the previous command executed by the command loop (the one before the current command). Normally the value is a symbol with a function definition, but this is not guaranteed.</source>
          <target state="translated">这个变量记录了命令循环执行的前一条命令的名称(当前命令之前的那条)。通常情况下,值是一个带有函数定义的符号,但这并不保证。</target>
        </trans-unit>
        <trans-unit id="5918077a2c6da3ca401f27a49f212010561acad3" translate="yes" xml:space="preserve">
          <source>This variable records which frame the last input event was directed to. Usually this is the frame that was selected when the event was generated, but if that frame has redirected input focus to another frame, the value is the frame to which the event was redirected. See &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;.</source>
          <target state="translated">此变量记录最后一个输入事件指向的帧。通常，这是生成事件时选择的框架，但是如果该框架已将输入焦点重定向到另一个框架，则该值是事件已重定向到的框架。请参阅&lt;a href=&quot;input-focus#Input-Focus&quot;&gt;输入焦点&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="838efdf98ab2d6a4103e8b325a314c7f102faafd" translate="yes" xml:space="preserve">
          <source>This variable says which user&amp;rsquo;s init files should be used by Emacs&amp;mdash;or &lt;code&gt;nil&lt;/code&gt; if none. &lt;code&gt;&quot;&quot;&lt;/code&gt; stands for the user who originally logged in. The value reflects command-line options such as &amp;lsquo;</source>
          <target state="translated">此变量表示Emacs应该使用哪个用户的初始化文件，如果没有，则为 &lt;code&gt;nil&lt;/code&gt; 。 &lt;code&gt;&quot;&quot;&lt;/code&gt; 代表最初登录的用户。该值反映了命令行选项，例如&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="b8cdae38282e80af0604a2e14d035922b435d21a" translate="yes" xml:space="preserve">
          <source>This variable specifies a function for creating a new frame, in order to make a new window for displaying a buffer. It is used by the &lt;code&gt;display-buffer-pop-up-frame&lt;/code&gt; action function.</source>
          <target state="translated">此变量指定用于创建新框架的功能，以便创建用于显示缓冲区的新窗口。它由 &lt;code&gt;display-buffer-pop-up-frame&lt;/code&gt; 动作功能使用。</target>
        </trans-unit>
        <trans-unit id="5e4442ca5c7969783e4ca5795f2afb7427dd11bd" translate="yes" xml:space="preserve">
          <source>This variable specifies a function for splitting a window, in order to make a new window for displaying a buffer. It is used by the &lt;code&gt;display-buffer-pop-up-window&lt;/code&gt; action function to actually split the window.</source>
          <target state="translated">此变量指定用于拆分窗口的功能，以便创建一个用于显示缓冲区的新窗口。它用于由 &lt;code&gt;display-buffer-pop-up-window&lt;/code&gt; 作用函数来实际分割窗口。</target>
        </trans-unit>
        <trans-unit id="65bbbcce82a2b180ed1f53c1c2a5225d601d52fe" translate="yes" xml:space="preserve">
          <source>This variable specifies a function that &lt;code&gt;perform-replace&lt;/code&gt; calls to search for the next regexp to replace. Its default value is &lt;code&gt;re-search-forward&lt;/code&gt;. Any other value should name a function of 3 arguments: the first 3 arguments of &lt;code&gt;re-search-forward&lt;/code&gt; (see &lt;a href=&quot;regexp-search#Regexp-Search&quot;&gt;Regexp Search&lt;/a&gt;).</source>
          <target state="translated">此变量指定一个函数，该函数 &lt;code&gt;perform-replace&lt;/code&gt; 调用以搜索要替换的下一个正则表达式。其默认值为 &lt;code&gt;re-search-forward&lt;/code&gt; 。任何其他值应命名为3个参数的函数： &lt;code&gt;re-search-forward&lt;/code&gt; 的前3个参数（请参阅&lt;a href=&quot;regexp-search#Regexp-Search&quot;&gt;Regexp Search&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="b5c4a8558378e7897087c9a8964f5db5818d45af" translate="yes" xml:space="preserve">
          <source>This variable specifies a function that &lt;code&gt;perform-replace&lt;/code&gt; calls to search for the next string to replace. Its default value is &lt;code&gt;search-forward&lt;/code&gt;. Any other value should name a function of 3 arguments: the first 3 arguments of &lt;code&gt;search-forward&lt;/code&gt; (see &lt;a href=&quot;string-search#String-Search&quot;&gt;String Search&lt;/a&gt;).</source>
          <target state="translated">此变量指定一个函数，该函数 &lt;code&gt;perform-replace&lt;/code&gt; 调用以搜索要替换的下一个字符串。其默认值为 &lt;code&gt;search-forward&lt;/code&gt; 。任何其他值应命名为3个参数的函数： &lt;code&gt;search-forward&lt;/code&gt; 的前3个参数（请参阅&lt;a href=&quot;string-search#String-Search&quot;&gt;String Search&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="a45f554a4aa8212f2f21f28653b295cbf0e7b2bb" translate="yes" xml:space="preserve">
          <source>This variable specifies a list of directories for searching for bitmap files, for the &lt;code&gt;:stipple&lt;/code&gt; attribute.</source>
          <target state="translated">该变量为 &lt;code&gt;:stipple&lt;/code&gt; 属性指定用于搜索位图文件的目录列表。</target>
        </trans-unit>
        <trans-unit id="8fba5ef4481ab8fcb184f7f33ecf0a7dd3cc3c3a" translate="yes" xml:space="preserve">
          <source>This variable specifies additional properties (other than &lt;code&gt;font-lock-face&lt;/code&gt;) that are being managed by Font Lock mode. It is used by &lt;code&gt;font-lock-default-unfontify-region&lt;/code&gt;, which normally only manages the &lt;code&gt;font-lock-face&lt;/code&gt; property. If you want Font Lock to manage other properties as well, you must specify them in a &lt;var&gt;facespec&lt;/var&gt; in &lt;code&gt;font-lock-keywords&lt;/code&gt; as well as add them to this list. See &lt;a href=&quot;search_002dbased-fontification#Search_002dbased-Fontification&quot;&gt;Search-based Fontification&lt;/a&gt;.</source>
          <target state="translated">此变量指定由字体锁定模式管理的其他属性（除 &lt;code&gt;font-lock-face&lt;/code&gt; 之外）。它由 &lt;code&gt;font-lock-default-unfontify-region&lt;/code&gt; 使用，该区域通常仅管理 &lt;code&gt;font-lock-face&lt;/code&gt; 属性。如果还希望字体锁定来管理其他属性，则必须在 &lt;var&gt;facespec&lt;/var&gt; 中使用 &lt;code&gt;font-lock-keywords&lt;/code&gt; 指定它们，并将它们添加到此列表中。请参阅&lt;a href=&quot;search_002dbased-fontification#Search_002dbased-Fontification&quot;&gt;基于搜索的字体&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="58b32be0616add930abcc0229a185014687618a3" translate="yes" xml:space="preserve">
          <source>This variable specifies an alternate expression-reading function for &lt;code&gt;load&lt;/code&gt; and &lt;code&gt;eval-region&lt;/code&gt; to use instead of &lt;code&gt;read&lt;/code&gt;. The function should accept one argument, just as &lt;code&gt;read&lt;/code&gt; does.</source>
          <target state="translated">此变量指定供 &lt;code&gt;load&lt;/code&gt; 和 &lt;code&gt;eval-region&lt;/code&gt; 代替 &lt;code&gt;read&lt;/code&gt; 使用的替代表达式读取函数。该函数应该接受一个参数，就像 &lt;code&gt;read&lt;/code&gt; 一样。</target>
        </trans-unit>
        <trans-unit id="47afa05a6ca15744c12c8cfb9ead083a585c8508" translate="yes" xml:space="preserve">
          <source>This variable specifies an extra margin to add around tool bar items. The value is an integer, a number of pixels. The default is 4.</source>
          <target state="translated">这个变量指定在工具栏项目周围增加一个额外的边距。这个值是一个整数,一个像素数。默认值为4。</target>
        </trans-unit>
        <trans-unit id="28a60e86db17f840ccf892abf60a57ce5b31694a" translate="yes" xml:space="preserve">
          <source>This variable specifies errors which should not enter the debugger, regardless of the value of &lt;code&gt;debug-on-error&lt;/code&gt;. Its value is a list of error condition symbols and/or regular expressions. If the error has any of those condition symbols, or if the error message matches any of the regular expressions, then that error does not enter the debugger.</source>
          <target state="translated">此变量指定无论 &lt;code&gt;debug-on-error&lt;/code&gt; 的值如何都不应进入调试器的错误。它的值是错误条件符号和/或正则表达式的列表。如果错误具有任何这些条件符号，或者错误消息与任何正则表达式匹配，则该错误不会进入调试器。</target>
        </trans-unit>
        <trans-unit id="610d2f60484605ad3b25ae4464f4129aa59413bb" translate="yes" xml:space="preserve">
          <source>This variable specifies functions called during redisplay when a window buffer or size change occurred or the selected window or a frame&amp;rsquo;s selected window has changed. The value should be a list of functions that take one argument.</source>
          <target state="translated">此变量指定当窗口缓冲区或大小发生更改或所选窗口或框架的所选窗口发生更改时在重新显示期间调用的函数。该值应该是带有一个参数的函数列表。</target>
        </trans-unit>
        <trans-unit id="3d8e14aa00cc2e5390b451efdefaf901a24ade75" translate="yes" xml:space="preserve">
          <source>This variable specifies functions called during redisplay when a window size change occurred. The value should be a list of functions that take one argument.</source>
          <target state="translated">这个变量指定了在重新显示过程中,当窗口大小发生变化时调用的函数。值应该是一个接受一个参数的函数列表。</target>
        </trans-unit>
        <trans-unit id="ce5feb8199a3d98702bebba8d8e3973ea691970e" translate="yes" xml:space="preserve">
          <source>This variable specifies functions called during redisplay when either the buffer or the size of a window has changed. The value should be a list of functions that take no argument.</source>
          <target state="translated">这个变量指定了在重新显示过程中,当缓冲区或窗口大小改变时调用的函数。值应该是一个不接受参数的函数列表。</target>
        </trans-unit>
        <trans-unit id="7806002cf71bb7e163e4d092fb091325c48654cf" translate="yes" xml:space="preserve">
          <source>This variable specifies functions called during redisplay when the selected window or a frame&amp;rsquo;s selected window has changed. The value should be a list of functions that take one argument.</source>
          <target state="translated">当所选择的窗口或帧的选择窗口已经改变的重新显示期间调用该变量指定的功能。该值应该是带有一个参数的函数列表。</target>
        </trans-unit>
        <trans-unit id="f7833b0be19287045b397324f27aa2c7aab7bc4e" translate="yes" xml:space="preserve">
          <source>This variable specifies functions called during redisplay when window buffers have changed. The value should be a list of functions that take one argument.</source>
          <target state="translated">这个变量指定了当窗口缓冲区发生变化时在重新显示过程中调用的函数。值应该是一个接受一个参数的函数列表。</target>
        </trans-unit>
        <trans-unit id="9c60b198dea33a3125eb0199ee5d70f221776b30" translate="yes" xml:space="preserve">
          <source>This variable specifies how many lines to keep in the</source>
          <target state="translated">这个变量指定了要在</target>
        </trans-unit>
        <trans-unit id="19eb12c9e520a401f4bc57afed37f4fb936151c2" translate="yes" xml:space="preserve">
          <source>This variable specifies how many of the newest backup versions to keep in the Dired command</source>
          <target state="translated">这个变量指定在Dired命令中保留多少个最新的备份版本。</target>
        </trans-unit>
        <trans-unit id="5df2b7a09afcd7fb1b1eb2e48b42fd361b595d3a" translate="yes" xml:space="preserve">
          <source>This variable specifies how to blink the cursor. Each element has the form &lt;code&gt;(&lt;var&gt;on-state&lt;/var&gt; . &lt;var&gt;off-state&lt;/var&gt;)&lt;/code&gt;. Whenever the cursor type equals &lt;var&gt;on-state&lt;/var&gt; (comparing using &lt;code&gt;equal&lt;/code&gt;), the corresponding &lt;var&gt;off-state&lt;/var&gt; specifies what the cursor looks like when it blinks off. Both &lt;var&gt;on-state&lt;/var&gt; and &lt;var&gt;off-state&lt;/var&gt; should be suitable values for the &lt;code&gt;cursor-type&lt;/code&gt; frame parameter.</source>
          <target state="translated">此变量指定如何使光标闪烁。每个元件具有如下形式 &lt;code&gt;(&lt;var&gt;on-state&lt;/var&gt; . &lt;var&gt;off-state&lt;/var&gt;)&lt;/code&gt; 。每当光标类型等于 &lt;var&gt;on-state&lt;/var&gt; （使用 &lt;code&gt;equal&lt;/code&gt; 进行比较）时，相应的 &lt;var&gt;off-state&lt;/var&gt; 指定光标闪烁时的外观。两个 &lt;var&gt;on-state&lt;/var&gt; 和 &lt;var&gt;off-state&lt;/var&gt; 应为合适的值 &lt;code&gt;cursor-type&lt;/code&gt; 帧参数。</target>
        </trans-unit>
        <trans-unit id="a80bbc6a3b5bf0e978540d2a9ace58466f8031cd" translate="yes" xml:space="preserve">
          <source>This variable specifies how to compute a name for a frame when you have not explicitly specified one. The variable&amp;rsquo;s value is actually a mode line construct, just like &lt;code&gt;mode-line-format&lt;/code&gt;, except that the &amp;lsquo;</source>
          <target state="translated">该变量指定当您未明确指定框架名称时如何计算框架名称。变量的值实际上是一个模式行构造，就像 &lt;code&gt;mode-line-format&lt;/code&gt; 一样，除了'</target>
        </trans-unit>
        <trans-unit id="fc57b803d6d7feb0e149332857d8f86659f5aeeb" translate="yes" xml:space="preserve">
          <source>This variable specifies how to compute the name for an iconified frame, when you have not explicitly specified the frame title. This title appears in the icon itself.</source>
          <target state="translated">这个变量指定了当你没有明确指定框架标题时,如何计算一个图标化框架的名称。这个标题会出现在图标本身中。</target>
        </trans-unit>
        <trans-unit id="6f21c5f703b1d42ea73e3ce7b2318d579f34230f" translate="yes" xml:space="preserve">
          <source>This variable specifies how to print floating-point numbers. The default is &lt;code&gt;nil&lt;/code&gt;, meaning use the shortest output that represents the number without losing information.</source>
          <target state="translated">此变量指定如何打印浮点数。默认值为 &lt;code&gt;nil&lt;/code&gt; ，这意味着使用最短的输出表示数字，而不会丢失信息。</target>
        </trans-unit>
        <trans-unit id="4d85ac68025c7374662b52e6041af9d632761223" translate="yes" xml:space="preserve">
          <source>This variable specifies major modes to use for scripts that specify a command interpreter in a &amp;lsquo;</source>
          <target state="translated">该变量指定用于在&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="33a8cdb5288fc58856324af31431fd97f9dee42b" translate="yes" xml:space="preserve">
          <source>This variable specifies scaling for certain faces. Its value should be a list of elements of the form</source>
          <target state="translated">这个变量指定某些面的缩放比例。它的值应该是一个元素列表,其形式是</target>
        </trans-unit>
        <trans-unit id="ad0b684e7b13be16e65d9022dd3b6342565c5b43" translate="yes" xml:space="preserve">
          <source>This variable specifies special completion styles and other completion behaviors to use when completing certain types of text. Its value should be an alist with elements of the form &lt;code&gt;(&lt;var&gt;category&lt;/var&gt;
. &lt;var&gt;alist&lt;/var&gt;)&lt;/code&gt;. &lt;var&gt;category&lt;/var&gt; is a symbol describing what is being completed; currently, the &lt;code&gt;buffer&lt;/code&gt;, &lt;code&gt;file&lt;/code&gt;, and &lt;code&gt;unicode-name&lt;/code&gt; categories are defined, but others can be defined via specialized completion functions (see &lt;a href=&quot;programmed-completion#Programmed-Completion&quot;&gt;Programmed Completion&lt;/a&gt;). &lt;var&gt;alist&lt;/var&gt; is an association list describing how completion should behave for the corresponding category. The following alist keys are supported:</source>
          <target state="translated">此变量指定在完成某些类型的文本时要使用的特殊完成样式和其他完成行为。其值应与以下形式的元素的ALIST &lt;code&gt;(&lt;var&gt;category&lt;/var&gt; . &lt;var&gt;alist&lt;/var&gt;)&lt;/code&gt; 。 &lt;var&gt;category&lt;/var&gt; 是描述完成的符号；当前，定义了 &lt;code&gt;buffer&lt;/code&gt; ， &lt;code&gt;file&lt;/code&gt; 和 &lt;code&gt;unicode-name&lt;/code&gt; 类别，但可以通过专门的完成函数来定义其他类别（请参见&lt;a href=&quot;programmed-completion#Programmed-Completion&quot;&gt;Programmed Completion&lt;/a&gt;）。 &lt;var&gt;alist&lt;/var&gt; 是一个关联列表，描述了相应类别的完成行为。支持以下列表键：</target>
        </trans-unit>
        <trans-unit id="201fe48697604b97fbb6e28322917a0c5c6923fc" translate="yes" xml:space="preserve">
          <source>This variable specifies special text property handling conditions for yanked text. It takes effect after the text has been inserted (either normally, or via the &lt;code&gt;yank-handler&lt;/code&gt; property), and prior to &lt;code&gt;yank-excluded-properties&lt;/code&gt; taking effect.</source>
          <target state="translated">此变量为选中的文本指定特殊的文本属性处理条件。在插入文本之后（通常或通过 &lt;code&gt;yank-handler&lt;/code&gt; 属性），并且在 &lt;code&gt;yank-excluded-properties&lt;/code&gt; 生效之前，此命令生效。</target>
        </trans-unit>
        <trans-unit id="9441cfaaf5b9a202d9dfacdc63307e6a8d043ca7" translate="yes" xml:space="preserve">
          <source>This variable specifies the application name that &lt;code&gt;x-get-resource&lt;/code&gt; should look up. The default value is &lt;code&gt;&quot;Emacs&quot;&lt;/code&gt;. You can examine X resources for other application names by binding this variable to some other string, around a call to &lt;code&gt;x-get-resource&lt;/code&gt;.</source>
          <target state="translated">此变量指定 &lt;code&gt;x-get-resource&lt;/code&gt; 应该查找的应用程序名称。默认值为 &lt;code&gt;&quot;Emacs&quot;&lt;/code&gt; 。通过在调用 &lt;code&gt;x-get-resource&lt;/code&gt; 的周围将此变量绑定到其他字符串，可以检查X资源是否具有其他应用程序名称。</target>
        </trans-unit>
        <trans-unit id="dc683e48d553af20f144d383bf880d2a28d6ba52" translate="yes" xml:space="preserve">
          <source>This variable specifies the base left margin column. In Fundamental mode,</source>
          <target state="translated">这个变量指定了基本的左边距列。在基本模式下。</target>
        </trans-unit>
        <trans-unit id="1c8864e7cce633e7e1b197bed02481239c82db1f" translate="yes" xml:space="preserve">
          <source>This variable specifies the character to be used on GUI frames as an indication that the column is sorted in the ascending order.</source>
          <target state="translated">这个变量指定在GUI框架上使用的字符,以表示该列是按升序排列的。</target>
        </trans-unit>
        <trans-unit id="fa51bf5fffabf0f819d44b04889de7f6858728a3" translate="yes" xml:space="preserve">
          <source>This variable specifies the character to use to ask to see the next line of a menu. Its initial value is 32, the code for</source>
          <target state="translated">这个变量指定了用来要求查看菜单下一行的字符。它的初始值是32,代码为</target>
        </trans-unit>
        <trans-unit id="be2aa08dfc092a1c6bf9ab20d5cbfc2f275f4ea5" translate="yes" xml:space="preserve">
          <source>This variable specifies the coding system for saving the buffer (by overriding &lt;code&gt;buffer-file-coding-system&lt;/code&gt;). Note that it is not used for &lt;code&gt;write-region&lt;/code&gt;.</source>
          <target state="translated">此变量指定用于保存缓冲区的编码系统（通过重写 &lt;code&gt;buffer-file-coding-system&lt;/code&gt; ）。注意，它不用于 &lt;code&gt;write-region&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5ca4ad8129f5074b342b9b1d7e2613ffa381d9f1" translate="yes" xml:space="preserve">
          <source>This variable specifies the coding system to use for decoding system error messages and&amp;mdash;on X Window system only&amp;mdash;keyboard input, for sending batch output to the standard output and error streams, for encoding the format argument to &lt;code&gt;format-time-string&lt;/code&gt;, and for decoding the return value of &lt;code&gt;format-time-string&lt;/code&gt;.</source>
          <target state="translated">此变量指定用于解码系统错误消息和（仅在X Window系统上）键盘输入，用于将批输出发送到标准输出和错误流，用于将format参数编码为 &lt;code&gt;format-time-string&lt;/code&gt; 以及用于解码 &lt;code&gt;format-time-string&lt;/code&gt; 的返回值。</target>
        </trans-unit>
        <trans-unit id="ed9b5319052f4785f314a8827aaf6892ed10d740" translate="yes" xml:space="preserve">
          <source>This variable specifies the coding system to use when reading and writing selections or the clipboard. See &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Coding Systems&lt;/a&gt;. The default is &lt;code&gt;compound-text-with-extensions&lt;/code&gt;, which converts to the text representation that X11 normally uses.</source>
          <target state="translated">此变量指定在读写选择或剪贴板时要使用的编码系统。请参阅&lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;编码系统&lt;/a&gt;。缺省值为 &lt;code&gt;compound-text-with-extensions&lt;/code&gt; ，它将转换为X11通常使用的文本表示形式。</target>
        </trans-unit>
        <trans-unit id="378b9a5d350f9a9ad8ee132e85190d8db4f5a38f" translate="yes" xml:space="preserve">
          <source>This variable specifies the coding systems to use for subprocess (and network stream) input and output, when nothing else specifies what to do.</source>
          <target state="translated">这个变量指定了子进程(和网络流)输入和输出时要使用的编码系统,当没有其他规定的时候,可以使用这个变量。</target>
        </trans-unit>
        <trans-unit id="d20f5fdfae6e9e29472d33941477bfbb49f9c979" translate="yes" xml:space="preserve">
          <source>This variable specifies the current buffer&amp;rsquo;s text representation. If it is non-&lt;code&gt;nil&lt;/code&gt;, the buffer contains multibyte text; otherwise, it contains unibyte encoded text or binary non-text data.</source>
          <target state="translated">此变量指定当前缓冲区的文本表示形式。如果为非 &lt;code&gt;nil&lt;/code&gt; ，则缓冲区包含多字节文本；否则为0。否则，它包含单字节编码的文本或二进制非文本数据。</target>
        </trans-unit>
        <trans-unit id="5d3980a91c0b6581e0fe9f29071be798902ea992" translate="yes" xml:space="preserve">
          <source>This variable specifies the default radix for &lt;code&gt;sort-numeric-fields&lt;/code&gt; to parse numbers.</source>
          <target state="translated">此变量指定用于 &lt;code&gt;sort-numeric-fields&lt;/code&gt; 以解析数字的默认基数。</target>
        </trans-unit>
        <trans-unit id="bfb2f574c8c4c28f9c49e5ab317eb6fdf3230549" translate="yes" xml:space="preserve">
          <source>This variable specifies the directory name for creating certain temporary files, which are likely to be small.</source>
          <target state="translated">这个变量指定了创建某些临时文件的目录名,这些文件可能很小。</target>
        </trans-unit>
        <trans-unit id="a987d6d65258d6d9671e6bac8d806a9e1156dde3" translate="yes" xml:space="preserve">
          <source>This variable specifies the directory name for creating temporary files. Its value should be a directory name (see &lt;a href=&quot;directory-names#Directory-Names&quot;&gt;Directory Names&lt;/a&gt;), but it is good for Lisp programs to cope if the value is a directory&amp;rsquo;s file name instead. Using the value as the second argument to &lt;code&gt;expand-file-name&lt;/code&gt; is a good way to achieve that.</source>
          <target state="translated">此变量指定用于创建临时文件的目录名称。它的值应该是目录名（请参阅&lt;a href=&quot;directory-names#Directory-Names&quot;&gt;Directory Names&lt;/a&gt;），但是如果该值是目录的文件名，那么Lisp程序可以应对。将值用作 &lt;code&gt;expand-file-name&lt;/code&gt; 的第二个参数是实现此目的的好方法。</target>
        </trans-unit>
        <trans-unit id="1611a6b6c3693c0e75493a5f0497cd5f97a908bb" translate="yes" xml:space="preserve">
          <source>This variable specifies the format for displaying the warning type in the warning message. The result of formatting the type this way gets included in the message under the control of the string in the entry in &lt;code&gt;warning-levels&lt;/code&gt;. The default value is &lt;code&gt;&quot; (%s)&quot;&lt;/code&gt;. If you bind it to &lt;code&gt;&quot;&quot;&lt;/code&gt; then the warning type won&amp;rsquo;t appear at all.</source>
          <target state="translated">此变量指定用于在警告消息中显示警告类型的格式。以这种方式格式化类型的结果将在 &lt;code&gt;warning-levels&lt;/code&gt; 条目中的字符串控制下包含在消息中。默认值为 &lt;code&gt;&quot; (%s)&quot;&lt;/code&gt; 。如果将其绑定到 &lt;code&gt;&quot;&quot;&lt;/code&gt; 则警告类型将根本不会出现。</target>
        </trans-unit>
        <trans-unit id="547c7ec8698eaa3947afe33c14120014564c9731" translate="yes" xml:space="preserve">
          <source>This variable specifies the format to use for auto-saving. Its value is a list of format names, just like the value of &lt;code&gt;buffer-file-format&lt;/code&gt;; however, it is used instead of &lt;code&gt;buffer-file-format&lt;/code&gt; for writing auto-save files. If the value is &lt;code&gt;t&lt;/code&gt;, the default, auto-saving uses the same format as a regular save in the same buffer. This variable is always buffer-local in all buffers.</source>
          <target state="translated">此变量指定用于自动保存的格式。它的值是格式名称的列表，就像 &lt;code&gt;buffer-file-format&lt;/code&gt; 的值一样；但是，它用来代替自动写入 &lt;code&gt;buffer-file-format&lt;/code&gt; 的缓冲区文件格式。如果值为 &lt;code&gt;t&lt;/code&gt; ，则默认情况下，自动保存将使用与常规保存相同的格式在同一缓冲区中。在所有缓冲区中，此变量始终是本地缓冲区的。</target>
        </trans-unit>
        <trans-unit id="b4dc5b5723ce3a0a28294a22f224b01267f52812" translate="yes" xml:space="preserve">
          <source>This variable specifies the frame to use for the minibuffer window, by default. It does not affect existing frames. It is always local to the current terminal and cannot be buffer-local. See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;.</source>
          <target state="translated">默认情况下，此变量指定用于迷你缓冲区窗口的帧。它不会影响现有框架。它始终在当前终端本地，并且不能在缓冲区本地。请参阅&lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;多个终端&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1207c49d1658e5cddb3ac60c96b0abae0f872d43" translate="yes" xml:space="preserve">
          <source>This variable specifies the function to use for &lt;code&gt;auto-fill-function&lt;/code&gt;, if and when Auto Fill is turned on. Major modes can set buffer-local values for this variable to alter how Auto Fill works.</source>
          <target state="translated">如果启用了自动填充 &lt;code&gt;auto-fill-function&lt;/code&gt; ，则此变量指定用于自动填充功能的功能。主要模式可以为此变量设置缓冲区局部值，以更改自动填充的工作方式。</target>
        </trans-unit>
        <trans-unit id="90cff5f29e4dc76d1ef32bcfb9a2d7a7e447091d" translate="yes" xml:space="preserve">
          <source>This variable specifies the function to use for creating a buffer index. The function should take no arguments, and return an index alist for the current buffer. It is called within &lt;code&gt;save-excursion&lt;/code&gt;, so where it leaves point makes no difference.</source>
          <target state="translated">此变量指定用于创建缓冲区索引的函数。该函数应不带任何参数，并返回当前缓冲区的索引列表。在 &lt;code&gt;save-excursion&lt;/code&gt; 中称为它，因此离开点的位置没有任何区别。</target>
        </trans-unit>
        <trans-unit id="bf7f6ea21193d6889f8633999c0158dad3dc1690" translate="yes" xml:space="preserve">
          <source>This variable specifies the height of the border drawn below the tool bar area. An integer specifies height as a number of pixels. If the value is one of &lt;code&gt;internal-border-width&lt;/code&gt; (the default) or &lt;code&gt;border-width&lt;/code&gt;, the tool bar border height corresponds to the corresponding frame parameter.</source>
          <target state="translated">此变量指定在工具栏区域下方绘制的边框的高度。整数将高度指定为像素数。如果该值是 &lt;code&gt;internal-border-width&lt;/code&gt; （默认值）或 &lt;code&gt;border-width&lt;/code&gt; 之一，则工具栏的边框高度对应于相应的frame参数。</target>
        </trans-unit>
        <trans-unit id="47037cd622dfd389fb7e9867995dde974ec8a5ea" translate="yes" xml:space="preserve">
          <source>This variable specifies the height of the buffer&amp;rsquo;s horizontal scroll bar, measured in pixels. A value of &lt;code&gt;nil&lt;/code&gt; means to use the value specified by the frame.</source>
          <target state="translated">此变量指定缓冲区水平滚动条的高度，以像素为单位。值为 &lt;code&gt;nil&lt;/code&gt; 表示使用框架指定的值。</target>
        </trans-unit>
        <trans-unit id="c3f89f4773cf5ef9dea1171ba5c6d7fa4f6ea06a" translate="yes" xml:space="preserve">
          <source>This variable specifies the instance name that &lt;code&gt;x-get-resource&lt;/code&gt; should look up. The default value is the name Emacs was invoked with, or the value specified with the &amp;lsquo;</source>
          <target state="translated">此变量指定 &lt;code&gt;x-get-resource&lt;/code&gt; 应该查找的实例名称。默认值是调用Emacs的名称，或用'</target>
        </trans-unit>
        <trans-unit id="364a24b2a4de2644ca246fb33bd538fb74192345" translate="yes" xml:space="preserve">
          <source>This variable specifies the list of frame parameters that a newly created frame inherits from the currently selected frame. For each parameter (a symbol) that is an element in this list and has not been assigned earlier when processing &lt;code&gt;make-frame&lt;/code&gt;, the function sets the value of that parameter in the created frame to its value in the selected frame.</source>
          <target state="translated">此变量指定新创建的框架从当前所选框架继承的框架参数列表。对于此列表中作为元素且在处理 &lt;code&gt;make-frame&lt;/code&gt; 时尚未分配的每个参数（符号），该函数将在创建的帧中将该参数的值设置为所选帧中的值。</target>
        </trans-unit>
        <trans-unit id="2d35dbd1f1cbbc9d29c269281b758b180f96fa72" translate="yes" xml:space="preserve">
          <source>This variable specifies the locale to use for formatting time values. Changing the locale can cause messages to appear according to the conventions of a different language. If the variable is &lt;code&gt;nil&lt;/code&gt;, the locale is specified by environment variables in the usual POSIX fashion.</source>
          <target state="translated">此变量指定用于格式化时间值的语言环境。更改语言环境可能会导致消息根据另一种语言的约定出现。如果变量为 &lt;code&gt;nil&lt;/code&gt; ，则语言环境由环境变量以通常的POSIX方式指定。</target>
        </trans-unit>
        <trans-unit id="ce1d2d8005b7ca34344c47676b32308fd49696c7" translate="yes" xml:space="preserve">
          <source>This variable specifies the locale to use for generating system error messages. Changing the locale can cause messages to come out in a different language or in a different orthography. If the variable is &lt;code&gt;nil&lt;/code&gt;, the locale is specified by environment variables in the usual POSIX fashion.</source>
          <target state="translated">此变量指定用于生成系统错误消息的语言环境。更改区域设置可能导致消息以不同的语言或不同的拼字形式发出。如果变量为 &lt;code&gt;nil&lt;/code&gt; ，则语言环境由环境变量以通常的POSIX方式指定。</target>
        </trans-unit>
        <trans-unit id="b7fba5cc3b98b6d29065924f8a9d4075b8157911" translate="yes" xml:space="preserve">
          <source>This variable specifies the location of the horizontal scroll bar. The possible values are &lt;code&gt;bottom&lt;/code&gt;, &lt;code&gt;t&lt;/code&gt;, which means to use the frame&amp;rsquo;s default, and &lt;code&gt;nil&lt;/code&gt; for no scroll bar.</source>
          <target state="translated">此变量指定水平滚动条的位置。可能的值是 &lt;code&gt;bottom&lt;/code&gt; ， &lt;code&gt;t&lt;/code&gt; ，表示使用框架的默认值，而 &lt;code&gt;nil&lt;/code&gt; 表示没有滚动条。</target>
        </trans-unit>
        <trans-unit id="ba2de9ee13d4031729d5a9ee43dc1e6311f3a892" translate="yes" xml:space="preserve">
          <source>This variable specifies the location of the vertical scroll bar. The possible values are &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;t&lt;/code&gt;, which means to use the frame&amp;rsquo;s default, and &lt;code&gt;nil&lt;/code&gt; for no scroll bar.</source>
          <target state="translated">此变量指定垂直滚动条的位置。可能的值是 &lt;code&gt;left&lt;/code&gt; ， &lt;code&gt;right&lt;/code&gt; ， &lt;code&gt;t&lt;/code&gt; ，这意味着使用框架的默认值，而 &lt;code&gt;nil&lt;/code&gt; 表示没有滚动条。</target>
        </trans-unit>
        <trans-unit id="69133e246175bfd5d0a22d3fe1be1c90479173b0" translate="yes" xml:space="preserve">
          <source>This variable specifies the mapping from logical cursor type to the actual fringe bitmaps displayed in the right fringe. The value is an alist where each element has the form &lt;code&gt;(&lt;var&gt;cursor-type&lt;/var&gt;
. &lt;var&gt;bitmap&lt;/var&gt;)&lt;/code&gt;, which means to use the fringe bitmap &lt;var&gt;bitmap&lt;/var&gt; to display cursors of type &lt;var&gt;cursor-type&lt;/var&gt;.</source>
          <target state="translated">此变量指定从逻辑光标类型到右侧条纹中显示的实际条纹位图的映射。值，其中每个元件具有形式的ALIST &lt;code&gt;(&lt;var&gt;cursor-type&lt;/var&gt; . &lt;var&gt;bitmap&lt;/var&gt;)&lt;/code&gt; ，装置使用条纹位图，其中 &lt;var&gt;bitmap&lt;/var&gt; ，以类型的显示游标 &lt;var&gt;cursor-type&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="6c7d7911f4543d366f94621589ef0f22a2e59600" translate="yes" xml:space="preserve">
          <source>This variable specifies the marker insertion type (see &lt;a href=&quot;marker-insertion-types#Marker-Insertion-Types&quot;&gt;Marker Insertion Types&lt;/a&gt;) of &lt;code&gt;window-point&lt;/code&gt;. The default is &lt;code&gt;nil&lt;/code&gt;, so &lt;code&gt;window-point&lt;/code&gt; will stay behind text inserted there.</source>
          <target state="translated">此变量指定 &lt;code&gt;window-point&lt;/code&gt; 的标记插入类型（请参见&lt;a href=&quot;marker-insertion-types#Marker-Insertion-Types&quot;&gt;标记插入类型&lt;/a&gt;）。默认值为 &lt;code&gt;nil&lt;/code&gt; ，因此 &lt;code&gt;window-point&lt;/code&gt; 保留在此处插入的文本后面。</target>
        </trans-unit>
        <trans-unit id="d547fc7b3e5daf8682664f7559fc4888275252b9" translate="yes" xml:space="preserve">
          <source>This variable specifies the maximum distance to scan for a matching parenthesis before giving up.</source>
          <target state="translated">这个变量指定了在放弃之前扫描匹配括号的最大距离。</target>
        </trans-unit>
        <trans-unit id="4331531e42e3cfd8b105fc413fe044b36cda9ed5" translate="yes" xml:space="preserve">
          <source>This variable specifies the minimum distance between the baseline and the underline, in pixels, when displaying underlined text.</source>
          <target state="translated">该变量指定了显示下划线文本时,基线和下划线之间的最小距离,单位为像素。</target>
        </trans-unit>
        <trans-unit id="4ff2fab04b0a8a80990c4c2dc50157d5d0a5b14a" translate="yes" xml:space="preserve">
          <source>This variable specifies the mouse pointer style for void text areas. These include the areas after the end of a line or below the last line in the buffer. The default is to use the &lt;code&gt;arrow&lt;/code&gt; (non-text) pointer style.</source>
          <target state="translated">此变量指定空白文本区域的鼠标指针样式。这些包括缓冲区末尾行之后或最后一行下面的区域。默认为使用 &lt;code&gt;arrow&lt;/code&gt; （非文本）指针样式。</target>
        </trans-unit>
        <trans-unit id="647b68f79271fb9a2bb273613105f8130038a3a3" translate="yes" xml:space="preserve">
          <source>This variable specifies the number of seconds an image can remain in the cache without being displayed. When an image is not displayed for this length of time, Emacs removes it from the image cache.</source>
          <target state="translated">这个变量指定了图像在缓存中不被显示的秒数,当图像在这个时间段不被显示时,Emacs会从图像缓存中删除它。当图像在这个时间段内不显示时,Emacs会将其从图像缓存中删除。</target>
        </trans-unit>
        <trans-unit id="3717e00be82f4280534f560bb48fdc135830758d" translate="yes" xml:space="preserve">
          <source>This variable specifies the number of seconds to keep indicating the matching parenthesis. A fraction of a second often gives good results, but the default is 1, which works on all systems.</source>
          <target state="translated">这个变量指定了保持指示匹配小括号的秒数。一秒钟的几分之一通常会得到很好的结果,但默认值是1,这对所有系统都适用。</target>
        </trans-unit>
        <trans-unit id="39d953edf710709c0a768c11e2dad4fd17e0bedd" translate="yes" xml:space="preserve">
          <source>This variable specifies the pointer shape to use ordinarily in the Emacs frame, for the &lt;code&gt;text&lt;/code&gt; pointer style.</source>
          <target state="translated">此变量为 &lt;code&gt;text&lt;/code&gt; 指针样式指定通常在Emacs框架中使用的指针形状。</target>
        </trans-unit>
        <trans-unit id="3acb782e30c855540af87af7dfd6791f80e3c377" translate="yes" xml:space="preserve">
          <source>This variable specifies the pointer shape to use when the mouse is over mouse-sensitive text.</source>
          <target state="translated">这个变量指定了鼠标在鼠标敏感的文本上时要使用的指针形状。</target>
        </trans-unit>
        <trans-unit id="78daca2ffa4db7218ae8fa29709b23bb9b58f78b" translate="yes" xml:space="preserve">
          <source>This variable specifies the shadow width for tool bar items. The value is an integer, a number of pixels. The default is 1.</source>
          <target state="translated">此变量用于指定工具条项的阴影宽度。值是一个整数,一个像素数。默认值为1。</target>
        </trans-unit>
        <trans-unit id="02be399ab6eb5a97c78ec2b2537fe2b1697e3d85" translate="yes" xml:space="preserve">
          <source>This variable specifies the site-customization file to load before the user&amp;rsquo;s init file. Its normal value is &lt;code&gt;&quot;site-start&quot;&lt;/code&gt;. The only way you can change it with real effect is to do so before dumping Emacs.</source>
          <target state="translated">此变量指定要在用户的init文件之前加载的站点自定义文件。其正常值为 &lt;code&gt;&quot;site-start&quot;&lt;/code&gt; 。真正生效的唯一更改方法是在转储Emacs之前进行更改。</target>
        </trans-unit>
        <trans-unit id="37d4e059ccdb3e6de1f300dc91e0dd83ce69c04a" translate="yes" xml:space="preserve">
          <source>This variable specifies the width of the buffer&amp;rsquo;s vertical scroll bars, measured in pixels. A value of &lt;code&gt;nil&lt;/code&gt; means to use the value specified by the frame.</source>
          <target state="translated">此变量指定缓冲区的垂直滚动条的宽度，以像素为单位。值为 &lt;code&gt;nil&lt;/code&gt; 表示使用框架指定的值。</target>
        </trans-unit>
        <trans-unit id="c2154eb8d82062df0ff1bc0af13a3b298023129e" translate="yes" xml:space="preserve">
          <source>This variable specifies the width of the left margin, in character cell (a.k.a. &amp;ldquo;column&amp;rdquo;) units. It is buffer-local in all buffers. A value of &lt;code&gt;nil&lt;/code&gt; means no left marginal area.</source>
          <target state="translated">此变量以字符单元格（也称为&amp;ldquo;列&amp;rdquo;）为单位指定左边距的宽度。它在所有缓冲区中都是本地缓冲区的。值为 &lt;code&gt;nil&lt;/code&gt; 表示无左边缘区域。</target>
        </trans-unit>
        <trans-unit id="6dbf7925fed5e555d32215115c54c9040fc53829" translate="yes" xml:space="preserve">
          <source>This variable specifies the width of the right margin, in character cell units. It is buffer-local in all buffers. A value of &lt;code&gt;nil&lt;/code&gt; means no right marginal area.</source>
          <target state="translated">此变量以字符单元为单位指定右边距的宽度。它在所有缓冲区中都是本地缓冲区的。值为 &lt;code&gt;nil&lt;/code&gt; 表示无右边缘区域。</target>
        </trans-unit>
        <trans-unit id="a9f9625a4db9d9be5024c43270ebd62ab0007def" translate="yes" xml:space="preserve">
          <source>This variable specifies whether &lt;code&gt;split-window-sensibly&lt;/code&gt; is allowed to split the window placing the new window below. If it is an integer, that means to split only if the original window has at least that many lines. If it is &lt;code&gt;nil&lt;/code&gt;, that means not to split this way.</source>
          <target state="translated">此变量指定是否允许 &lt;code&gt;split-window-sensibly&lt;/code&gt; 分割窗口，将新窗口置于下面。如果它是整数，则意味着仅在原始窗口至少具有这么多行的情况下才进行拆分。如果为 &lt;code&gt;nil&lt;/code&gt; ，则表示不以这种方式拆分。</target>
        </trans-unit>
        <trans-unit id="b41a83fecf2ea8718c1d075ec448219f4d5c2e06" translate="yes" xml:space="preserve">
          <source>This variable specifies whether &lt;code&gt;split-window-sensibly&lt;/code&gt; is allowed to split the window placing the new window to the right. If the value is an integer, that means to split only if the original window has at least that many columns. If the value is &lt;code&gt;nil&lt;/code&gt;, that means not to split this way.</source>
          <target state="translated">该变量指定是否允许 &lt;code&gt;split-window-sensibly&lt;/code&gt; 分割窗口，将新窗口置于右侧。如果该值为整数，则意味着仅在原始窗口至少具有那么多列的情况下才进行拆分。如果值为 &lt;code&gt;nil&lt;/code&gt; ，则表示不以这种方式拆分。</target>
        </trans-unit>
        <trans-unit id="d9bb07b24457bfa0b74b8767f09ff0c6316a8090" translate="yes" xml:space="preserve">
          <source>This variable specifies which kinds of &lt;code&gt;invisible&lt;/code&gt; properties actually make a character invisible. Setting this variable makes it buffer-local.</source>
          <target state="translated">该变量指定哪些 &lt;code&gt;invisible&lt;/code&gt; 属性实际上使字符不可见。设置此变量使其成为局部缓冲区。</target>
        </trans-unit>
        <trans-unit id="17c813cb9033d42c0b8cf5d747a7b6085a942dbc" translate="yes" xml:space="preserve">
          <source>This variable states the format of the visited file. More precisely, this is a list of the file format names that were decoded in the course of visiting the current buffer&amp;rsquo;s file. It is always buffer-local in all buffers.</source>
          <target state="translated">该变量表示访问文件的格式。更准确地说，这是在访问当前缓冲区的文件的过程中已解码的文件格式名称的列表。它在所有缓冲区中始终是本地缓冲区的。</target>
        </trans-unit>
        <trans-unit id="da7cafbff2b38383440d584757fd82a9de8eba44" translate="yes" xml:space="preserve">
          <source>This variable stores a list of available completion styles. Each element in the list has the form</source>
          <target state="translated">这个变量存储了一个可用的完成方式的列表。列表中的每个元素都有如下形式</target>
        </trans-unit>
        <trans-unit id="17f83d8de294ef2cecc9630aaa2beb375107806f" translate="yes" xml:space="preserve">
          <source>This variable stores the most recently executed command that was not part of an input event. This is the command &lt;code&gt;repeat&lt;/code&gt; will try to repeat, See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Repeating.html#Repeating&quot;&gt;Repeating&lt;/a&gt; in</source>
          <target state="translated">此变量存储不是输入事件一部分的最近执行的命令。这是命令 &lt;code&gt;repeat&lt;/code&gt; 会尽量重复，见&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Repeating.html#Repeating&quot;&gt;重复&lt;/a&gt;在</target>
        </trans-unit>
        <trans-unit id="a115d98ecd06b867ba0d6d5fb383d4bc9e081148" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value indicates which element of the kill ring is at the front of the ring for yanking. More precisely, the value is a tail of the value of &lt;code&gt;kill-ring&lt;/code&gt;, and its &lt;small&gt;CAR&lt;/small&gt; is the kill string that</source>
          <target state="translated">该变量的值指示杀死环中的哪个元素位于环的前端以进行拉环。更确切地说，该值是 &lt;code&gt;kill-ring&lt;/code&gt; 值的尾部，其&lt;small&gt;CAR&lt;/small&gt;是</target>
        </trans-unit>
        <trans-unit id="28b449eebc7d7edfda6a70d0dbffa98c0835bd0a" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value is a function to be called on certain occasions to decide whether a file should have backup files. The function receives one argument, an absolute file name to consider. If the function returns &lt;code&gt;nil&lt;/code&gt;, backups are disabled for that file. Otherwise, the other variables in this section say whether and how to make backups.</source>
          <target state="translated">此变量的值是在某些情况下调用的函数，用于确定文件是否应具有备份文件。该函数接收一个参数，即要考虑的绝对文件名。如果函数返回 &lt;code&gt;nil&lt;/code&gt; ，则将禁用该文件的备份。否则，本节中的其他变量将说明是否以及如何进行备份。</target>
        </trans-unit>
        <trans-unit id="dc8b8ca7c391cc44d3a365f8f9dc794435dbf006" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value is a function to use for making backup file names. The function &lt;code&gt;make-backup-file-name&lt;/code&gt; calls it. See &lt;a href=&quot;backup-names#Backup-Names&quot;&gt;Naming Backup Files&lt;/a&gt;.</source>
          <target state="translated">此变量的值是用于创建备份文件名的函数。函数 &lt;code&gt;make-backup-file-name&lt;/code&gt; 调用它。请参阅&lt;a href=&quot;backup-names#Backup-Names&quot;&gt;命名备份文件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="893a2fc55e2e2153c2af5f0618b49c99f500ff40" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value is a list of functions for handling an unrecognized command-line argument. Each time the next argument to be processed has no special meaning, the functions in this list are called, in order of appearance, until one of them returns a non-&lt;code&gt;nil&lt;/code&gt; value.</source>
          <target state="translated">此变量的值是用于处理无法识别的命令行参数的函数列表。每次下一个要处理的自变量没有特殊含义时，将按出现顺序调用此列表中的函数，直到其中一个函数返回非 &lt;code&gt;nil&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="bc2e266e96128e3a14fb9923a805d9d2b37dcd1d" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value is a list of locations in which to search for image files. If an element is a string or a variable symbol whose value is a string, the string is taken to be the name of a directory to search. If an element is a variable symbol whose value is a list, that is taken to be a list of directories to search.</source>
          <target state="translated">该变量的值是在其中搜索图像文件的位置的列表。如果元素是字符串或值是字符串的变量符号，则该字符串被视为要搜索的目录的名称。如果元素是变量符号，其值是列表，则将其视为要搜索的目录列表。</target>
        </trans-unit>
        <trans-unit id="d741a57be79a7cf4500ec42da9b736aabe51fab0" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value is a list of recent complex commands, each represented as a form to evaluate. It continues to accumulate all complex commands for the duration of the editing session, but when it reaches the maximum size (see &lt;a href=&quot;minibuffer-history#Minibuffer-History&quot;&gt;Minibuffer History&lt;/a&gt;), the oldest elements are deleted as new ones are added.</source>
          <target state="translated">该变量的值是最近复杂命令的列表，每个命令都表示为要评估的形式。在编辑会话期间，它将继续累积所有复杂的命令，但是当达到最大大小时（请参见&lt;a href=&quot;minibuffer-history#Minibuffer-History&quot;&gt;Minibuffer History&lt;/a&gt;），将删除最早的元素，并添加新的元素。</target>
        </trans-unit>
        <trans-unit id="5058e0ab7f62d94f45af0797e7839b3845294923" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value is a list of variables, each of which specifies the position of an overlay arrow. The variable &lt;code&gt;overlay-arrow-position&lt;/code&gt; has its normal meaning because it is on this list.</source>
          <target state="translated">该变量的值是一个变量列表，每个变量指定覆盖箭头的位置。变量 &lt;code&gt;overlay-arrow-position&lt;/code&gt; 具有其正常含义，因为它在此列表中。</target>
        </trans-unit>
        <trans-unit id="44a929b2e08b8f6aa70b439f4cd1fa6273927793" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value is an alist of filename patterns and backup directories. Each element looks like</source>
          <target state="translated">该变量的值是文件名模式和备份目录的列表。每个元素看起来像</target>
        </trans-unit>
        <trans-unit id="7aacd20b1436c5de4bc8e223a38bdc9776f8de89" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value is an alist of parameter values used when creating an initial minibuffer-only frame (i.e., the minibuffer-only frame that Emacs creates if &lt;code&gt;initial-frame-alist&lt;/code&gt; specifies a frame with no minibuffer).</source>
          <target state="translated">此变量的值是创建初始仅用于迷你缓冲区的帧（即，如果 &lt;code&gt;initial-frame-alist&lt;/code&gt; 指定没有最小缓冲区的帧，则Emacs创建的仅用于迷你缓冲区的帧）使用的参数值列表。</target>
        </trans-unit>
        <trans-unit id="b2c83351d05a84fa1f3bb0c43c7d6af151d1760a" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value is an alist of parameter values used when creating the initial frame. You can set this variable to specify the appearance of the initial frame without altering subsequent frames. Each element has the form:</source>
          <target state="translated">此变量的值是创建初始帧时使用的参数值的列表。您可以设置此变量以指定初始帧的外观，而不更改后续帧。每个元素具有以下形式：</target>
        </trans-unit>
        <trans-unit id="cab3f21a743ebbf42fa83ec406c102cb55344245" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value is an alist with elements of the form &lt;code&gt;(&lt;var&gt;regexp&lt;/var&gt; .  &lt;var&gt;function&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;regexp&lt;/var&gt; is a regular expression and &lt;var&gt;function&lt;/var&gt; is a function or &lt;code&gt;nil&lt;/code&gt;. After visiting a file, &lt;code&gt;set-auto-mode&lt;/code&gt; calls &lt;var&gt;function&lt;/var&gt; if the text at the beginning of the buffer matches &lt;var&gt;regexp&lt;/var&gt; and &lt;var&gt;function&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;; if &lt;var&gt;function&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;auto-mode-alist&lt;/code&gt; gets to decide the mode.</source>
          <target state="translated">这个变量的值是用以下形式的元素的ALIST &lt;code&gt;(&lt;var&gt;regexp&lt;/var&gt; . &lt;var&gt;function&lt;/var&gt;)&lt;/code&gt; ，其中， &lt;var&gt;regexp&lt;/var&gt; 是一个正则表达式和 &lt;var&gt;function&lt;/var&gt; 是一个函数或 &lt;code&gt;nil&lt;/code&gt; 。访问文件后，如果缓冲区开头的文本与 &lt;var&gt;regexp&lt;/var&gt; 匹配且 &lt;var&gt;function&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;set-auto-mode&lt;/code&gt; 调用 &lt;var&gt;function&lt;/var&gt; ；如果 &lt;var&gt;function&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;auto-mode-alist&lt;/code&gt; 可以决定模式。</target>
        </trans-unit>
        <trans-unit id="3f326fd22cbf929b5ae168b7956962ea68f9c7f7" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value is the function to be used by &lt;code&gt;indent-for-tab-command&lt;/code&gt;, and various other indentation commands, to indent the current line. It is usually assigned by the major mode; for instance, Lisp mode sets it to &lt;code&gt;lisp-indent-line&lt;/code&gt;, C mode sets it to &lt;code&gt;c-indent-line&lt;/code&gt;, and so on. The default value is &lt;code&gt;indent-relative&lt;/code&gt;. See &lt;a href=&quot;auto_002dindentation#Auto_002dIndentation&quot;&gt;Auto-Indentation&lt;/a&gt;.</source>
          <target state="translated">该变量的值是 &lt;code&gt;indent-for-tab-command&lt;/code&gt; 和其他各种缩进命令要用来缩进当前行的函数。通常由主模式分配。例如，Lisp模式将其设置为 &lt;code&gt;lisp-indent-line&lt;/code&gt; ，C模式将其设置为 &lt;code&gt;c-indent-line&lt;/code&gt; ，依此类推。缺省值为 &lt;code&gt;indent-relative&lt;/code&gt; 。请参阅&lt;a href=&quot;auto_002dindentation#Auto_002dIndentation&quot;&gt;自动缩进&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5b1717e39c9de4078e75fab7be060140bc30fa8d" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value is the number of key sequences processed so far in this Emacs session. This includes key sequences read from the terminal and key sequences read from keyboard macros being executed.</source>
          <target state="translated">该变量的值是到目前为止在此Emacs会话中已处理的键序列的数量。这包括从终端读取的按键序列和从正在执行的键盘宏读取的按键序列。</target>
        </trans-unit>
        <trans-unit id="68ad74c4f3dafbd6aefc18a3730afb39bc2299f0" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value is the output speed of the terminal, as far as Emacs knows. Setting this variable does not change the speed of actual data transmission, but the value is used for calculations such as padding.</source>
          <target state="translated">据Emacs所知，此变量的值是终端的输出速度。设置此变量不会改变实际数据传输的速度，但是该值用于诸如填充之类的计算。</target>
        </trans-unit>
        <trans-unit id="25a355f8c549766b983dc094b814383e58efa960" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value is the predicate that &lt;code&gt;completing-read&lt;/code&gt; passes to &lt;code&gt;try-completion&lt;/code&gt;. The variable is also used by the other minibuffer completion functions.</source>
          <target state="translated">此变量的值是 &lt;code&gt;completing-read&lt;/code&gt; 传递给 &lt;code&gt;try-completion&lt;/code&gt; 的谓词。其他小型缓冲区完成功能也使用该变量。</target>
        </trans-unit>
        <trans-unit id="0366e444cde45f86f09a3bbed79660866c2f0b03" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value is the program to run to generate a directory listing for the function &lt;code&gt;insert-directory&lt;/code&gt;. It is ignored on systems which generate the listing with Lisp code.</source>
          <target state="translated">该变量的值是要运行的程序，用于为功能 &lt;code&gt;insert-directory&lt;/code&gt; 生成目录列表。在使用Lisp代码生成列表的系统上，它将被忽略。</target>
        </trans-unit>
        <trans-unit id="05ac9fc7fe9e7e22ea7861eab678db85ccb75987" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value should be an alist with one element for each system-specific keysym. Each element has the form &lt;code&gt;(&lt;var&gt;code&lt;/var&gt;
. &lt;var&gt;symbol&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;code&lt;/var&gt; is the numeric keysym code (not including the vendor-specific bit, -2**28), and &lt;var&gt;symbol&lt;/var&gt; is the name for the function key.</source>
          <target state="translated">此变量的值应该是一个清单，每个系统特定的键符都有一个元素。每个元素具有形式 &lt;code&gt;(&lt;var&gt;code&lt;/var&gt; . &lt;var&gt;symbol&lt;/var&gt;)&lt;/code&gt; ，其中 &lt;var&gt;code&lt;/var&gt; 是数字键符码（不包括供应商特定的位，-2 ** 28），和 &lt;var&gt;symbol&lt;/var&gt; 是为功能键的名称。</target>
        </trans-unit>
        <trans-unit id="00d207a37cf68558f0ae1947fa541f4ac10e6b8f" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value specifies the maximum number of times to repeat calling a timer function in a row, when many previously scheduled calls were unavoidably delayed.</source>
          <target state="translated">此变量的值指定当许多先前计划的调用不可避免地延迟时，连续重复调用计时器函数的最大次数。</target>
        </trans-unit>
        <trans-unit id="e2832fa12a34cf1d4e0a14fa96a7eb9dc98670d0" translate="yes" xml:space="preserve">
          <source>This variable&amp;rsquo;s value specifies the style of justification to use for text that doesn&amp;rsquo;t specify a style with a text property. The possible values are &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;full&lt;/code&gt;, &lt;code&gt;center&lt;/code&gt;, or &lt;code&gt;none&lt;/code&gt;. The default value is &lt;code&gt;left&lt;/code&gt;.</source>
          <target state="translated">此变量的值指定用于不使用text属性指定样式的文本的对正样式。可能的值是 &lt;code&gt;left&lt;/code&gt; ， &lt;code&gt;right&lt;/code&gt; ， &lt;code&gt;full&lt;/code&gt; ， &lt;code&gt;center&lt;/code&gt; 或 &lt;code&gt;none&lt;/code&gt; 。默认值为 &lt;code&gt;left&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ff2f4fbe63a94436db535b4b05b9f7b38cec3050" translate="yes" xml:space="preserve">
          <source>This variable, if non-&lt;code&gt;nil&lt;/code&gt; in a particular buffer, tells &lt;code&gt;save-buffers-kill-emacs&lt;/code&gt; and &lt;code&gt;save-some-buffers&lt;/code&gt; to save this buffer (if it&amp;rsquo;s modified) without asking the user. The variable automatically becomes buffer-local when set for any reason.</source>
          <target state="translated">如果在特定缓冲区中不 &lt;code&gt;nil&lt;/code&gt; ，则此变量将告诉 &lt;code&gt;save-buffers-kill-emacs&lt;/code&gt; 和 &lt;code&gt;save-some-buffers&lt;/code&gt; 保存该缓冲区（如果已修改），而无需询问用户。出于任何原因设置时，该变量将自动变为本地缓冲区。</target>
        </trans-unit>
        <trans-unit id="dac46863aa288d219a8e7c62c0f8c133144fd14a" translate="yes" xml:space="preserve">
          <source>This variable, if non-&lt;code&gt;nil&lt;/code&gt; in a particular buffer, tells &lt;code&gt;save-buffers-kill-emacs&lt;/code&gt; to offer to save that buffer, just as it offers to save file-visiting buffers. If &lt;code&gt;save-some-buffers&lt;/code&gt; is called with the second optional argument set to &lt;code&gt;t&lt;/code&gt;, it will also offer to save the buffer. Lastly, if this variable is set to the symbol &lt;code&gt;always&lt;/code&gt;, both &lt;code&gt;save-buffers-kill-emacs&lt;/code&gt; and &lt;code&gt;save-some-buffers&lt;/code&gt; will always offer to save. See &lt;a href=&quot;saving-buffers#Definition-of-save_002dsome_002dbuffers&quot;&gt;Definition of save-some-buffers&lt;/a&gt;. The variable &lt;code&gt;buffer-offer-save&lt;/code&gt; automatically becomes buffer-local when set for any reason. See &lt;a href=&quot;buffer_002dlocal-variables#Buffer_002dLocal-Variables&quot;&gt;Buffer-Local Variables&lt;/a&gt;.</source>
          <target state="translated">如果在特定缓冲区中不 &lt;code&gt;nil&lt;/code&gt; ，则该变量会告诉 &lt;code&gt;save-buffers-kill-emacs&lt;/code&gt; 提供该缓冲区的保存，就像它提供了保存文件访问缓冲区的一样。如果在第二个可选参数设置为 &lt;code&gt;t&lt;/code&gt; 的情况下调用 &lt;code&gt;save-some-buffers&lt;/code&gt; ，则它还将提供保存缓冲区的功能。最后，如果将此变量设置为 &lt;code&gt;always&lt;/code&gt; ，则 &lt;code&gt;save-buffers-kill-emacs&lt;/code&gt; 和 &lt;code&gt;save-some-buffers&lt;/code&gt; 都将始终提供保存。请参阅&lt;a href=&quot;saving-buffers#Definition-of-save_002dsome_002dbuffers&quot;&gt;save-some-buffers的定义&lt;/a&gt;。出于任何原因进行设置时，变量 &lt;code&gt;buffer-offer-save&lt;/code&gt; 会自动变为局部于缓冲区。请参阅&lt;a href=&quot;buffer_002dlocal-variables#Buffer_002dLocal-Variables&quot;&gt;缓冲区局部变量&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="71b0adc72c4f43c008ef56251f584004a240f38e" translate="yes" xml:space="preserve">
          <source>This variable, if non-&lt;code&gt;nil&lt;/code&gt;, causes &lt;code&gt;display-buffer&lt;/code&gt; to even window sizes whenever it reuses an existing window, and that window is adjacent to the selected one.</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则每当重用现有窗口且该窗口与所选窗口相邻时，它会使 &lt;code&gt;display-buffer&lt;/code&gt; 窗口大小均匀。</target>
        </trans-unit>
        <trans-unit id="44260951edaebc7923ae2a34e5e6222d10e7b053" translate="yes" xml:space="preserve">
          <source>This variable, if non-&lt;code&gt;nil&lt;/code&gt;, enables Transient Mark mode. In Transient Mark mode, every buffer-modifying primitive sets &lt;code&gt;deactivate-mark&lt;/code&gt;. As a consequence, most commands that modify the buffer also deactivate the mark.</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则启用瞬变标记模式。在瞬态标记模式下，每个修改缓冲区的原语集都会 &lt;code&gt;deactivate-mark&lt;/code&gt; 。结果，大多数修改缓冲区的命令也会使标记无效。</target>
        </trans-unit>
        <trans-unit id="81de96b0a50b5ec8926b2434801de8b58f91d03c" translate="yes" xml:space="preserve">
          <source>This variable, if non-&lt;code&gt;nil&lt;/code&gt;, inhibits the startup screen. In that case, Emacs typically displays the</source>
          <target state="translated">如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ，则禁止启动屏幕。在这种情况下，Emacs通常会显示</target>
        </trans-unit>
        <trans-unit id="29394b9a6c26348ba3a0840f9e17074c7d8b78ed" translate="yes" xml:space="preserve">
          <source>This variable, if non-&lt;code&gt;nil&lt;/code&gt;, is a list that specifies regular expressions for finding definitions for Imenu. Simple elements of &lt;code&gt;imenu-generic-expression&lt;/code&gt; look like this:</source>
          <target state="translated">此变量（如果为非 &lt;code&gt;nil&lt;/code&gt; ）是一个列表，该列表指定用于查找Imenu定义的正则表达式。 &lt;code&gt;imenu-generic-expression&lt;/code&gt; 的简单元素如下所示：</target>
        </trans-unit>
        <trans-unit id="69febab3127d1c990867cf5a06a84f24c63faf38" translate="yes" xml:space="preserve">
          <source>This variable, if non-&lt;code&gt;nil&lt;/code&gt;, means to fill lines automatically within comments only. More precisely, this means that if a comment syntax was defined for the current buffer, then self-inserting a character outside of a comment will not call &lt;code&gt;auto-fill-function&lt;/code&gt;.</source>
          <target state="translated">如果该变量为非 &lt;code&gt;nil&lt;/code&gt; ，则意味着仅在注释内自动填充行。更确切地说，这意味着，如果为当前缓冲区定义了注释语法，则在注释外部自动插入字符不会调用 &lt;code&gt;auto-fill-function&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4c9c36d3064cde17874cb26e2bc8d25c8bf942fb" translate="yes" xml:space="preserve">
          <source>This variable, if non-&lt;code&gt;nil&lt;/code&gt;, should be a string, which is treated as documentation to be inserted into the</source>
          <target state="translated">此变量（如果为非 &lt;code&gt;nil&lt;/code&gt; ）应为字符串，将被视为要插入文档中的文档</target>
        </trans-unit>
        <trans-unit id="a93a98bbc3986c45dac57d05f848ebecbbba3d70" translate="yes" xml:space="preserve">
          <source>This variable, if non-&lt;code&gt;nil&lt;/code&gt;, should store a function for applying &lt;code&gt;syntax-table&lt;/code&gt; properties to a specified stretch of text. It is intended to be used by major modes to install a function which applies &lt;code&gt;syntax-table&lt;/code&gt; properties in some mode-appropriate way.</source>
          <target state="translated">如果该变量为非 &lt;code&gt;nil&lt;/code&gt; ，则应存储一个函数，用于将 &lt;code&gt;syntax-table&lt;/code&gt; 属性应用于指定的文本段。主要模式打算将其用于安装以某种模式适当方式应用 &lt;code&gt;syntax-table&lt;/code&gt; 属性的函数。</target>
        </trans-unit>
        <trans-unit id="76b7cefce0231098ecd5bcd17d59eb7fdb7ac572" translate="yes" xml:space="preserve">
          <source>This variable, if non-&lt;code&gt;nil&lt;/code&gt;, specifies a function for reading buffer names. &lt;code&gt;read-buffer&lt;/code&gt; calls this function instead of doing its usual work, with the same arguments passed to &lt;code&gt;read-buffer&lt;/code&gt;.</source>
          <target state="translated">如果非 &lt;code&gt;nil&lt;/code&gt; ，则此变量指定用于读取缓冲区名称的函数。 &lt;code&gt;read-buffer&lt;/code&gt; 调用此函数而不是执行其通常的工作，传递给 &lt;code&gt;read-buffer&lt;/code&gt; 的参数相同。</target>
        </trans-unit>
        <trans-unit id="9ec5a7d27c1eecead5422d97b4733c20bd9e3484" translate="yes" xml:space="preserve">
          <source>This variable, if non-&lt;code&gt;nil&lt;/code&gt;, specifies a function to use to handle errors that return control to the Emacs command loop. The function should take three arguments: &lt;var&gt;data&lt;/var&gt;, a list of the same form that &lt;code&gt;condition-case&lt;/code&gt; would bind to its variable; &lt;var&gt;context&lt;/var&gt;, a string describing the situation in which the error occurred, or (more often) &lt;code&gt;nil&lt;/code&gt;; and &lt;var&gt;caller&lt;/var&gt;, the Lisp function which called the primitive that signaled the error.</source>
          <target state="translated">如果此变量非 &lt;code&gt;nil&lt;/code&gt; ，则指定用于处理将控制权返回给Emacs命令循环的错误的函数。该函数应采用三个参数： &lt;var&gt;data&lt;/var&gt; ， &lt;code&gt;condition-case&lt;/code&gt; 绑定到其变量的形式相同的列表； &lt;var&gt;context&lt;/var&gt; ，一个字符串，描述发生错误的情况，或者（通常）为 &lt;code&gt;nil&lt;/code&gt; ；和 &lt;var&gt;caller&lt;/var&gt; ，Lisp函数调用了表明错误的原语。</target>
        </trans-unit>
        <trans-unit id="b9a0a58683d1cf19dd34cad61e9676296dd976ca" translate="yes" xml:space="preserve">
          <source>This variable, if non-&lt;code&gt;nil&lt;/code&gt;, specifies the same behavior as &lt;code&gt;backup-by-copying-when-mismatch&lt;/code&gt;, but only for certain user-id and group-id values: namely, those less than or equal to a certain number. You set this variable to that number.</source>
          <target state="translated">此变量（如果为非 &lt;code&gt;nil&lt;/code&gt; ）则指定与&amp;ldquo; &lt;code&gt;backup-by-copying-when-mismatch&lt;/code&gt; &amp;rdquo;相同的行为，但仅适用于某些用户ID和组ID值：即小于或等于某个数字的值。您将此变量设置为该数字。</target>
        </trans-unit>
        <trans-unit id="5f6a746698d95522f516d4e175ca6390e3cfa935" translate="yes" xml:space="preserve">
          <source>This variable, if non-&lt;code&gt;nil&lt;/code&gt;, specifies the width of the left fringe in pixels. A value of &lt;code&gt;nil&lt;/code&gt; means to use the left fringe width from the window&amp;rsquo;s frame.</source>
          <target state="translated">如果此变量不是 &lt;code&gt;nil&lt;/code&gt; ，则以像素为单位指定左边缘的宽度。值为 &lt;code&gt;nil&lt;/code&gt; 意味着使用窗口框架的左边缘宽度。</target>
        </trans-unit>
        <trans-unit id="356cb002c64df66fecef3293a4c115bad25376cf" translate="yes" xml:space="preserve">
          <source>This variable, if non-&lt;code&gt;nil&lt;/code&gt;, specifies the width of the right fringe in pixels. A value of &lt;code&gt;nil&lt;/code&gt; means to use the right fringe width from the window&amp;rsquo;s frame.</source>
          <target state="translated">如果此变量不是 &lt;code&gt;nil&lt;/code&gt; ，则以像素为单位指定右边缘的宽度。值为 &lt;code&gt;nil&lt;/code&gt; 意味着使用窗口框架的正确条纹宽度。</target>
        </trans-unit>
        <trans-unit id="e9c73e97a3e79bcc6d33d68e1025d6274af6d54d" translate="yes" xml:space="preserve">
          <source>This variable, local in every buffer, specifies how to display the header line, for windows displaying the buffer. The format of the value is the same as for &lt;code&gt;mode-line-format&lt;/code&gt; (see &lt;a href=&quot;mode-line-data#Mode-Line-Data&quot;&gt;Mode Line Data&lt;/a&gt;). It is normally &lt;code&gt;nil&lt;/code&gt;, so that ordinary buffers have no header line.</source>
          <target state="translated">对于每个显示缓冲区的窗口，此变量位于每个缓冲区的本地，它指定如何显示标题行。该值的格式与 &lt;code&gt;mode-line-format&lt;/code&gt; 相同（请参见&lt;a href=&quot;mode-line-data#Mode-Line-Data&quot;&gt;Mode Line Data&lt;/a&gt;）。通常为 &lt;code&gt;nil&lt;/code&gt; ，因此普通缓冲区没有标题行。</target>
        </trans-unit>
        <trans-unit id="7d93c24dd60cfdaa139c07413f57005f6064007b" translate="yes" xml:space="preserve">
          <source>This variable, when non-&lt;code&gt;nil&lt;/code&gt;, holds the indentation context for the sub-mode&amp;rsquo;s indentation engine provided by the superior major mode. The value should be a list of the form &lt;code&gt;(&lt;var&gt;first-column&lt;/var&gt; . &lt;var&gt;rest&lt;/var&gt;&lt;/code&gt;. The members of the list have the following meaning:</source>
          <target state="translated">当此变量为非 &lt;code&gt;nil&lt;/code&gt; 时，将保留上级主要模式提供的子模式缩进引擎的缩进上下文。值应该是以下形式的列表 &lt;code&gt;(&lt;var&gt;first-column&lt;/var&gt; . &lt;var&gt;rest&lt;/var&gt;&lt;/code&gt; 列表的成员具有以下含义：</target>
        </trans-unit>
        <trans-unit id="b7189abae835d29da6383960806b6b5548521784" translate="yes" xml:space="preserve">
          <source>This way you can explicitly specify all aspects of the box. The value &lt;var&gt;width&lt;/var&gt; specifies the width of the lines to draw; it defaults to 1. A negative width -&lt;var&gt;n&lt;/var&gt; means to draw a line of width &lt;var&gt;n&lt;/var&gt; whose top and bottom parts occupy the space of the underlying text, thus avoiding any increase in the character height.</source>
          <target state="translated">这样，您可以显式指定框的所有方面。 &lt;var&gt;width&lt;/var&gt; 值指定要绘制的线条的宽度；其默认值为1。负宽度- &lt;var&gt;n&lt;/var&gt; 装置来画线宽度的 &lt;var&gt;n&lt;/var&gt; 其顶部和底部占据基础文本的空间，从而避免了在字符高度的任何增加。</target>
        </trans-unit>
        <trans-unit id="d9a477f071d07508b96e42ce0279e953c7a59081" translate="yes" xml:space="preserve">
          <source>This way, the special value &lt;code&gt;nil&lt;/code&gt; is not treated like other symbols, and symbols are not treated like other Lisp expressions.</source>
          <target state="translated">这样，特殊值 &lt;code&gt;nil&lt;/code&gt; 不会像其他符号一样被对待，并且符号不会像其他Lisp表达式一样被对待。</target>
        </trans-unit>
        <trans-unit id="2dfb87f5811617605a6219af108230f85b2f65e3" translate="yes" xml:space="preserve">
          <source>This will block until this thread acquires &lt;var&gt;mutex&lt;/var&gt;, or until this thread is signaled using &lt;code&gt;thread-signal&lt;/code&gt;. If &lt;var&gt;mutex&lt;/var&gt; is already owned by this thread, this simply returns.</source>
          <target state="translated">这将阻塞，直到此线程获取 &lt;var&gt;mutex&lt;/var&gt; ，或直到使用 &lt;code&gt;thread-signal&lt;/code&gt; 通知此线程为止。如果此线程已拥有 &lt;var&gt;mutex&lt;/var&gt; ，则仅返回此值。</target>
        </trans-unit>
        <trans-unit id="4e4f051a810187de0f991c0ad754ba4546c36eca" translate="yes" xml:space="preserve">
          <source>This will cause the process&amp;rsquo;s output to be passed to &lt;code&gt;my-tracing-function&lt;/code&gt; before being passed to the original process filter. &lt;code&gt;my-tracing-function&lt;/code&gt; receives the same arguments as the original function. When you&amp;rsquo;re done with it, you can revert to the untraced behavior with:</source>
          <target state="translated">这将导致流程的输出在传递到原始流程过滤器之前先传递给 &lt;code&gt;my-tracing-function&lt;/code&gt; 。 &lt;code&gt;my-tracing-function&lt;/code&gt; 接收的参数与原始函数相同。完成后，您可以使用以下方法还原为无法追踪的行为：</target>
        </trans-unit>
        <trans-unit id="5b4dc9c49dcad06de6342a899c3f5d137405b88d" translate="yes" xml:space="preserve">
          <source>This will generate an IV (Initialization Vector) of the specified length using the GnuTLS &lt;code&gt;GNUTLS_RND_NONCE&lt;/code&gt; generator and pass it to the function. This ensures that the IV is unpredictable and unlikely to be reused in the same session. The actual value of the IV is returned by the function as described below.</source>
          <target state="translated">这将使用GnuTLS &lt;code&gt;GNUTLS_RND_NONCE&lt;/code&gt; 生成器生成指定长度的IV（初始化向量），并将其传递给函数。这样可以确保IV不可预测，并且不太可能在同一会话中重复使用。IV的实际值由如下所述的函数返回。</target>
        </trans-unit>
        <trans-unit id="a9a9c24a32da079d5ccc449519a4a85f6209bb0e" translate="yes" xml:space="preserve">
          <source>This will give a new frame full height after typing in it</source>
          <target state="translated">这样输入后会给一个新的框架全高</target>
        </trans-unit>
        <trans-unit id="900bf9b9596c5a6eb6a451eaa4e23722c6fd06e1" translate="yes" xml:space="preserve">
          <source>This will give you a list of all those URLs.</source>
          <target state="translated">这将给你一个所有这些URL的列表。</target>
        </trans-unit>
        <trans-unit id="160566e21dfbd4c02d91bb4dcfc5f49576d9dc4a" translate="yes" xml:space="preserve">
          <source>This will not only extract &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; but will additionally test that &lt;code&gt;my-list&lt;/code&gt; is a list containing exactly 3 elements and whose first element is the symbol &lt;code&gt;add&lt;/code&gt;. If any of those tests fail, &lt;code&gt;pcase&lt;/code&gt; will immediately return &lt;code&gt;nil&lt;/code&gt; without calling &lt;code&gt;message&lt;/code&gt;.</source>
          <target state="translated">这不仅将提取 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; ，还将另外测试 &lt;code&gt;my-list&lt;/code&gt; 是一个正好包含3个元素且其第一个元素是符号 &lt;code&gt;add&lt;/code&gt; 的列表。如果任何这些测试失败， &lt;code&gt;pcase&lt;/code&gt; 将立即返回 &lt;code&gt;nil&lt;/code&gt; 而不调用 &lt;code&gt;message&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f19ac812850c506ef6806f98037a06ed420056d9" translate="yes" xml:space="preserve">
          <source>This will pick out all the bits that have no face properties, which will result in the list &amp;lsquo;</source>
          <target state="translated">这将挑选出所有没有面属性的位，这将导致列表&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="7a26b8094858b8581da56dc0cbee2d620a5e3979" translate="yes" xml:space="preserve">
          <source>This will pick out all the regions where &lt;code&gt;face&lt;/code&gt; is set to something, but this is split up into where the properties change, so the result here will be &amp;lsquo;</source>
          <target state="translated">这将挑选出将 &lt;code&gt;face&lt;/code&gt; 设置为某物的所有区域，但这会拆分为属性发生变化的区域，因此这里的结果将是'</target>
        </trans-unit>
        <trans-unit id="daad30c58fe7378790b30fb0f086e9dd290fafe0" translate="yes" xml:space="preserve">
          <source>This will pick out all the words that use the &lt;code&gt;bold&lt;/code&gt; face.</source>
          <target state="translated">这将挑选出所有使用 &lt;code&gt;bold&lt;/code&gt; 字的单词。</target>
        </trans-unit>
        <trans-unit id="f308a6f1f3e09b044ee5edae541ccb89d09e0ae1" translate="yes" xml:space="preserve">
          <source>This window&amp;rsquo;s combination limit, meaningful only for a parent window. If this is &lt;code&gt;t&lt;/code&gt;, then it is not allowed to delete this window and recombine its child windows with other siblings of this window.</source>
          <target state="translated">此窗口的组合限制，仅对父窗口有意义。如果这是 &lt;code&gt;t&lt;/code&gt; ，则不允许删除该窗口并将其子窗口与该窗口的其他同级窗口重新组合。</target>
        </trans-unit>
        <trans-unit id="9d971e58411e18d438570cc649a8eb36f0ec6c71" translate="yes" xml:space="preserve">
          <source>This works because &lt;code&gt;toggle-debug-on-error&lt;/code&gt; is defined as a command which toggles the variable &lt;code&gt;debug-on-error&lt;/code&gt;.</source>
          <target state="translated">这之所以有效，是因为将 &lt;code&gt;toggle-debug-on-error&lt;/code&gt; 定义为切换变量 &lt;code&gt;debug-on-error&lt;/code&gt; 的命令。</target>
        </trans-unit>
        <trans-unit id="817693394b86befd10ceb05ff052a7149c1da178" translate="yes" xml:space="preserve">
          <source>This works because later Emacs versions always &lt;em&gt;add&lt;/em&gt; members to the environment, never &lt;em&gt;remove&lt;/em&gt; any members, so the size can only grow with new Emacs releases. Given the version of Emacs, the module can use only the parts of the module</source>
          <target state="translated">之所以可行，是因为更高版本的Emacs总是向环境&lt;em&gt;添加&lt;/em&gt;成员，从不&lt;em&gt;删除&lt;/em&gt;任何成员，因此大小只能随着​​新的Emacs发行版而增加。给定Emacs的版本，该模块只能使用该模块的各个部分</target>
        </trans-unit>
        <trans-unit id="44ff78eff6b3f3cbc3b63aa1a08744007c5eed93" translate="yes" xml:space="preserve">
          <source>This works just like &lt;code&gt;write-file-functions&lt;/code&gt;, but it is intended for hooks that pertain to the buffer&amp;rsquo;s contents, not to the particular visited file or its location, and can be used to create arbitrary save processes for buffers that aren&amp;rsquo;t visiting files at all. Such hooks are usually set up by major modes, as buffer-local bindings for this variable. This variable automatically becomes buffer-local whenever it is set; switching to a new major mode always resets this variable, but calling &lt;code&gt;set-visited-file-name&lt;/code&gt; does not.</source>
          <target state="translated">它的作用与 &lt;code&gt;write-file-functions&lt;/code&gt; 相同，但是它是用于与缓冲区内容有关的钩子，而不是与特定访问的文件或其位置有关的钩子，可用于为不访问文件的缓冲区创建任意保存过程完全没有 此类挂钩通常由主要模式设置，作为此变量的缓冲区局部绑定。只要设置此变量，它就会自动变为局部缓冲区；切换到新的主模式始终会重置此变量，但不会调用 &lt;code&gt;set-visited-file-name&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7aea3b4688113352cc4351e7c399bbe6a0038551" translate="yes" xml:space="preserve">
          <source>This works like &lt;code&gt;func-arity&lt;/code&gt;, but only for built-in functions and without symbol indirection. It signals an error for non-built-in functions. We recommend to use &lt;code&gt;func-arity&lt;/code&gt; instead.</source>
          <target state="translated">这类似于 &lt;code&gt;func-arity&lt;/code&gt; ，但仅适用于内置函数且无符号间接。它为非内置功能发出错误信号。我们建议改用 &lt;code&gt;func-arity&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2222791c63562b777cf74014b1491b79d36a4a47" translate="yes" xml:space="preserve">
          <source>This works like &lt;code&gt;list&lt;/code&gt; except for the formatting of text in the Custom buffer. &lt;code&gt;list&lt;/code&gt; labels each element value with its tag; &lt;code&gt;group&lt;/code&gt; does not.</source>
          <target state="translated">除了自定义缓冲区中文本的格式设置外，这与 &lt;code&gt;list&lt;/code&gt; 类似。 &lt;code&gt;list&lt;/code&gt; 标签标记每个元素值； &lt;code&gt;group&lt;/code&gt; 不。</target>
        </trans-unit>
        <trans-unit id="4b607ec78848fecf526dafc21738c8f9a1d3ecf5" translate="yes" xml:space="preserve">
          <source>This works like &lt;code&gt;magic-mode-alist&lt;/code&gt;, except that it is handled only if &lt;code&gt;auto-mode-alist&lt;/code&gt; does not specify a mode for this file.</source>
          <target state="translated">这与 &lt;code&gt;magic-mode-alist&lt;/code&gt; 一样，除了仅在 &lt;code&gt;auto-mode-alist&lt;/code&gt; 没有为该文件指定模式的情况下才进行处理。</target>
        </trans-unit>
        <trans-unit id="42271ccc9f11ca5afafc41968821ce04459e7f5f" translate="yes" xml:space="preserve">
          <source>This works like &lt;code&gt;substring&lt;/code&gt; but discards all text properties from the value. Also, &lt;var&gt;start&lt;/var&gt; may be omitted or &lt;code&gt;nil&lt;/code&gt;, which is equivalent to 0. Thus, &lt;code&gt;(substring-no-properties&amp;nbsp;&lt;var&gt;string&lt;/var&gt;)&lt;/code&gt; returns a copy of &lt;var&gt;string&lt;/var&gt;, with all text properties removed.</source>
          <target state="translated">这就像 &lt;code&gt;substring&lt;/code&gt; 一样工作，但是从值中丢弃所有文本属性。另外， &lt;var&gt;start&lt;/var&gt; 可以被省略或 &lt;code&gt;nil&lt;/code&gt; ，这相当于0。因此， &lt;code&gt;(substring-no-properties&amp;nbsp;&lt;var&gt;string&lt;/var&gt;)&lt;/code&gt; 返回的副本 &lt;var&gt;string&lt;/var&gt; ，并移除所有文本属性。</target>
        </trans-unit>
        <trans-unit id="ed187f77f38a5b16068509086961c75b92666f79" translate="yes" xml:space="preserve">
          <source>This works much like &lt;code&gt;coding-system-for-read&lt;/code&gt;, except that it applies to output rather than input. It affects writing to files, as well as sending output to subprocesses and net connections. It also applies to encoding command-line arguments with which Emacs invokes subprocesses.</source>
          <target state="translated">这类似于 &lt;code&gt;coding-system-for-read&lt;/code&gt; ，除了它适用于输出而不是输入。它影响到文件的写入以及将输出发送到子进程和网络连接。它也适用于对Emacs调用子流程的命令行参数进行编码。</target>
        </trans-unit>
        <trans-unit id="59003b84c07559474d31fd804eb8f75a70284b77" translate="yes" xml:space="preserve">
          <source>Those functions also use backslash sequences for multibyte non-</source>
          <target state="translated">这些函数也使用反斜杠序列来处理多字节非。</target>
        </trans-unit>
        <trans-unit id="b95f15bef4206fcd326264dee199cb267ce225d6" translate="yes" xml:space="preserve">
          <source>Those functions also use backslash sequences for unibyte non-</source>
          <target state="translated">这些函数也使用反斜杠序列来表示单字节的非?</target>
        </trans-unit>
        <trans-unit id="5856f5777b6dc484b1eb665793fb948525751099" translate="yes" xml:space="preserve">
          <source>Though many windows may exist simultaneously, at any time one window is designated the &lt;em&gt;selected window&lt;/em&gt;. This is the window where the cursor is (usually) displayed when Emacs is ready for a command. The selected window usually displays the current buffer (see &lt;a href=&quot;current-buffer#Current-Buffer&quot;&gt;Current Buffer&lt;/a&gt;), but this is not necessarily the case.</source>
          <target state="translated">尽管可能同时存在许多窗口，但是在任何时候都可以将一个窗口指定为&lt;em&gt;所选窗口&lt;/em&gt;。这是Emacs准备执行命令时（通常）显示光标的窗口。选定的窗口通常显示当前缓冲区（请参阅&lt;a href=&quot;current-buffer#Current-Buffer&quot;&gt;Current Buffer&lt;/a&gt;），但不一定是这种情况。</target>
        </trans-unit>
        <trans-unit id="6ab521570bbcdbefcba29a6661b03914c0b32d52" translate="yes" xml:space="preserve">
          <source>Thread Type</source>
          <target state="translated">螺纹类型</target>
        </trans-unit>
        <trans-unit id="2d269b4a5c1f8bab25480b97386aa237fb44ff03" translate="yes" xml:space="preserve">
          <source>Thread objects have no read syntax. They print in hash notation, giving the name of the thread (if it has been given a name) or its address in core:</source>
          <target state="translated">线程对象没有读取语法。它们用哈希符号打印,给出线程的名称(如果给了它一个名称)或它在核心中的地址。</target>
        </trans-unit>
        <trans-unit id="bb12e8aaaecc434fd51e448fe7669bced1bdd107" translate="yes" xml:space="preserve">
          <source>Threads</source>
          <target state="translated">Threads</target>
        </trans-unit>
        <trans-unit id="8d53a0e9f60f19ac58e4e30827894f674de690b7" translate="yes" xml:space="preserve">
          <source>Threads can be created and waited for. A thread cannot be exited directly, but the current thread can be exited implicitly, and other threads can be signaled.</source>
          <target state="translated">线程可以被创建和等待。不能直接退出线程,但可以隐式退出当前线程,也可以对其他线程发出信号。</target>
        </trans-unit>
        <trans-unit id="4c401881f263de09614480a519f56aa18cabc74e" translate="yes" xml:space="preserve">
          <source>Throughout this chapter, &amp;ldquo;text&amp;rdquo; refers to the characters in the buffer, together with their properties (when relevant). Keep in mind that point is always between two characters, and the cursor appears on the character after point.</source>
          <target state="translated">在本章中，&amp;ldquo;文本&amp;rdquo;是指缓冲区中的字符及其属性（如果相关）。请记住，该点始终位于两个字符之间，并且光标将出现在该点之后的字符上。</target>
        </trans-unit>
        <trans-unit id="4b8288563d76af911e25930716d0cac92968d4b5" translate="yes" xml:space="preserve">
          <source>Throughout this manual, the phrases &amp;ldquo;the Lisp reader&amp;rdquo; and &amp;ldquo;the Lisp printer&amp;rdquo; refer to those routines in Lisp that convert textual representations of Lisp objects into actual Lisp objects, and vice versa. See &lt;a href=&quot;printed-representation#Printed-Representation&quot;&gt;Printed Representation&lt;/a&gt;, for more details. You, the person reading this manual, are thought of as the programmer and are addressed as &amp;ldquo;you&amp;rdquo;. The user is the person who uses Lisp programs, including those you write.</source>
          <target state="translated">在本手册中，短语&amp;ldquo; Lisp阅读器&amp;rdquo;和&amp;ldquo; Lisp打印机&amp;rdquo;是指Lisp中的那些将Lisp对象的文本表示形式转换为实际Lisp对象的例程，反之亦然。有关更多详细信息，请参见&lt;a href=&quot;printed-representation#Printed-Representation&quot;&gt;印刷表示&lt;/a&gt;。您（阅读本手册的人）被认为是程序员，并且被称呼为&amp;ldquo;您&amp;rdquo;。用户是使用Lisp程序（包括您编写的程序）的人。</target>
        </trans-unit>
        <trans-unit id="9d333b3edb2142ed227358d10eac5e32f293c1d8" translate="yes" xml:space="preserve">
          <source>Thus if &lt;var&gt;fontpattern&lt;/var&gt; is this,</source>
          <target state="translated">因此，如果 &lt;var&gt;fontpattern&lt;/var&gt; 是这个，</target>
        </trans-unit>
        <trans-unit id="a2c87b537d1224b2a6ad61d086a4d629e1722be2" translate="yes" xml:space="preserve">
          <source>Thus, &amp;lsquo;</source>
          <target state="translated">因此，</target>
        </trans-unit>
        <trans-unit id="3ac50cff3cdf79feac987887f115c6c4551c8556" translate="yes" xml:space="preserve">
          <source>Thus, a function in &lt;code&gt;write-region-annotate-functions&lt;/code&gt; can create a buffer, give this variable the local value of &lt;code&gt;kill-buffer&lt;/code&gt; in that buffer, set up the buffer with altered text, and make the buffer current. The buffer will be killed after &lt;code&gt;write-region&lt;/code&gt; is done.</source>
          <target state="translated">因此， &lt;code&gt;write-region-annotate-functions&lt;/code&gt; 中的函数可以创建一个缓冲区，为该变量提供该 &lt;code&gt;kill-buffer&lt;/code&gt; 中kill-buffer的本地值，使用更改后的文本设置该缓冲区，并使该缓冲区成为当前缓冲区。 &lt;code&gt;write-region&lt;/code&gt; 完成后，缓冲区将被杀死。</target>
        </trans-unit>
        <trans-unit id="9cd7c0f20cc4962292b3c8c8d99ff59cb2ddb404" translate="yes" xml:space="preserve">
          <source>Thus, any valid height spec determines the height in pixels, one way or another. If the line contents&amp;rsquo; height is less than that, Emacs adds extra vertical space above the line to achieve the specified total height.</source>
          <target state="translated">因此，任何有效的高度规格都会以一种或另一种方式确定以像素为单位的高度。如果行内容的高度小于该高度，则Emacs在行上方添加额外的垂直空间以达到指定的总高度。</target>
        </trans-unit>
        <trans-unit id="03ab585299ede210bc4090198332814b205ee5dc" translate="yes" xml:space="preserve">
          <source>Thus, if the command moved point back to an invisible range (with the usual stickiness), Emacs moves point back to the beginning of that range. If the command moved point forward into an invisible range, Emacs moves point forward to the first visible character that follows the invisible text and then forward one more character.</source>
          <target state="translated">因此,如果命令将点移动到一个不可见的范围(具有通常的粘性),Emacs 将点移动到该范围的开始。如果命令将点向前移动到一个不可见的范围,Emacs将点向前移动到不可见文本后面的第一个可见字符,然后再向前移动一个字符。</target>
        </trans-unit>
        <trans-unit id="0b885fa081e5f6faf147ce71fc2eb228505921a4" translate="yes" xml:space="preserve">
          <source>Thus, if the original item was defined this way,</source>
          <target state="translated">因此,如果原来的项目是这样定义的。</target>
        </trans-unit>
        <trans-unit id="141bd126a24d1137b98f80ec3bb8e786c1abf288" translate="yes" xml:space="preserve">
          <source>Thus, if you set &lt;code&gt;backup-by-copying-when-privileged-mismatch&lt;/code&gt; to 0, backup by copying is done for the superuser and group 0 only, when necessary to prevent a change in the owner of the file.</source>
          <target state="translated">因此，如果 &lt;code&gt;backup-by-copying-when-privileged-mismatch&lt;/code&gt; 通过复制进行备份&amp;rdquo;设置为0，则仅在必要时才对超级用户和组0执行通过复制进行备份，以防止更改文件的所有者。</target>
        </trans-unit>
        <trans-unit id="eb0dbc223d80bf436cf99b6c0585d13e872fd662" translate="yes" xml:space="preserve">
          <source>Thus, the complete syntax for an argument list is as follows:</source>
          <target state="translated">因此,一个参数列表的完整语法如下。</target>
        </trans-unit>
        <trans-unit id="514aac49d5a6574eb2e045497dae93d9caaf5dbc" translate="yes" xml:space="preserve">
          <source>Thus, the function returns a non-&lt;code&gt;nil&lt;/code&gt; value if the file name ends with a &amp;lsquo;</source>
          <target state="translated">因此，如果文件名以'结尾，该函数将返回非 &lt;code&gt;nil&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="1c0bc68ad07460d16a6c86f2eaa3e27e454505a8" translate="yes" xml:space="preserve">
          <source>Thus, the symbol for the key</source>
          <target state="translated">因此,钥匙的符号是</target>
        </trans-unit>
        <trans-unit id="e6f6a15eeba5458c2cd39ecf32d429566249933e" translate="yes" xml:space="preserve">
          <source>Thus, to define a new method of key lookup, you need to specify both a function to compute the hash code from a key, and a function to compare two keys directly. The two functions should be consistent with each other: that is, two keys&amp;rsquo; hash codes should be the same if the keys compare as equal. Also, since the two functions can be called at any time (such as by the garbage collector), the functions should be free of side effects and should return quickly, and their behavior should depend on only on properties of the keys that do not change.</source>
          <target state="translated">因此，要定义一种新的密钥查找方法，您既需要指定一个函数来从一个密钥计算哈希码，又要指定一个用于直接比较两个密钥的函数。这两个函数应该彼此一致：也就是说，如果两个键的相等比较，则两个键的哈希码应该相同。另外，由于可以随时调用这两个函数（例如由垃圾收集器调用），所以这些函数应该没有副作用，并且应该迅速返回，并且它们的行为应仅取决于不变的键的属性。 。</target>
        </trans-unit>
        <trans-unit id="582a7c3d69fa69b60f2db20237cefec358cfad85" translate="yes" xml:space="preserve">
          <source>Time Calculations</source>
          <target state="translated">时间计算</target>
        </trans-unit>
        <trans-unit id="ec024476e8910d25ad39c9ff8458ef285476a847" translate="yes" xml:space="preserve">
          <source>Time Conversion</source>
          <target state="translated">时间转换</target>
        </trans-unit>
        <trans-unit id="44a7822891d1caaed18bfbde79f248fc78fb3fc0" translate="yes" xml:space="preserve">
          <source>Time Zone Rules</source>
          <target state="translated">时区规则</target>
        </trans-unit>
        <trans-unit id="677503965fb8fe8cd0f6c09959e0be5d258e9807" translate="yes" xml:space="preserve">
          <source>Time of Day</source>
          <target state="translated">每天的时间</target>
        </trans-unit>
        <trans-unit id="ca3b3626cd602840bd2ccae454814427a6f70af2" translate="yes" xml:space="preserve">
          <source>Time spent by the process in the system (kernel) context, for processing system calls. The corresponding &lt;var&gt;value&lt;/var&gt; is a Lisp timestamp.</source>
          <target state="translated">进程在系统（内核）上下文中花费的时间，用于处理系统调用。相应的 &lt;var&gt;value&lt;/var&gt; Lisp时间戳记。</target>
        </trans-unit>
        <trans-unit id="baaeeba37e2ea7675f434f23ea6bcc350d2a5a33" translate="yes" xml:space="preserve">
          <source>Time spent by the process in the user context, for running the application&amp;rsquo;s code. The corresponding &lt;var&gt;value&lt;/var&gt; is a Lisp timestamp (see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;).</source>
          <target state="translated">进程在用户上下文中花费的时间，用于运行应用程序的代码。相应的 &lt;var&gt;value&lt;/var&gt; Lisp时间戳记（请参阅&amp;ldquo;&lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;时间&amp;rdquo;&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="575376bef4c5fc7318a81bb14ff601241ffe1cbe" translate="yes" xml:space="preserve">
          <source>Time values can be converted to and from calendrical and other forms. Some of these conversions rely on operating system functions that limit the range of possible time values, and signal an error such as &amp;lsquo;</source>
          <target state="translated">时间值可以与日历和其他形式进行转换。其中某些转换依赖于操作系统功能，这些功能会限制可能的时间值的范围，并发出错误消息，例如&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="aa7e7755c39803e493e24923003524919122f3e5" translate="yes" xml:space="preserve">
          <source>Timer functions should also avoid calling functions that cause Emacs to wait, such as &lt;code&gt;sit-for&lt;/code&gt; (see &lt;a href=&quot;waiting#Waiting&quot;&gt;Waiting&lt;/a&gt;). This can lead to unpredictable effects, since other timers (or even the same timer) can run while waiting. If a timer function needs to perform an action after a certain time has elapsed, it can do this by scheduling a new timer.</source>
          <target state="translated">计时器功能还应避免调用导致Emacs等待的功能，例如， &lt;code&gt;sit-for&lt;/code&gt; （请参阅&lt;a href=&quot;waiting#Waiting&quot;&gt;Waiting&lt;/a&gt;）。由于其他计时器（甚至同一计时器）可以在等待时运行，因此这可能导致不可预测的结果。如果计时器功能需要在一定时间后执行操作，则可以通过安排新的计时器来执行此操作。</target>
        </trans-unit>
        <trans-unit id="1b459f04ff70d0b0dda739bf607d8d33495315e0" translate="yes" xml:space="preserve">
          <source>Timers for Delayed Execution</source>
          <target state="translated">延迟执行的定时器</target>
        </trans-unit>
        <trans-unit id="4cf1b54b003a59c279d1ba0b615a8a5f3459ca8c" translate="yes" xml:space="preserve">
          <source>Tips</source>
          <target state="translated">Tips</target>
        </trans-unit>
        <trans-unit id="ed9a57f848ca80c6e25752c6419f6e56c70f77f5" translate="yes" xml:space="preserve">
          <source>Tips for Defining Variables Robustly</source>
          <target state="translated">稳健定义变量的技巧</target>
        </trans-unit>
        <trans-unit id="4175dfb6345a6ed8c49c58bdfd8f88fb7b64b67e" translate="yes" xml:space="preserve">
          <source>Tips for writing a minor mode.</source>
          <target state="translated">小调的写作技巧。</target>
        </trans-unit>
        <trans-unit id="bdca972c5ffd1202222bd6267a51a55f1b7c6823" translate="yes" xml:space="preserve">
          <source>Title Bar</source>
          <target state="translated">标题栏</target>
        </trans-unit>
        <trans-unit id="792bab7e740af3866f1dd9c4450679179194ed82" translate="yes" xml:space="preserve">
          <source>To access (or alter) the elements in the time value, the &lt;code&gt;decoded-time-second&lt;/code&gt;, &lt;code&gt;decoded-time-minute&lt;/code&gt;, &lt;code&gt;decoded-time-hour&lt;/code&gt;, &lt;code&gt;decoded-time-day&lt;/code&gt;, &lt;code&gt;decoded-time-month&lt;/code&gt;, &lt;code&gt;decoded-time-year&lt;/code&gt;, &lt;code&gt;decoded-time-weekday&lt;/code&gt;, &lt;code&gt;decoded-time-dst&lt;/code&gt; and &lt;code&gt;decoded-time-zone&lt;/code&gt; accessors can be used.</source>
          <target state="translated">要访问（或更改）时间值中的元素，需要 &lt;code&gt;decoded-time-second&lt;/code&gt; ， &lt;code&gt;decoded-time-minute&lt;/code&gt; ， &lt;code&gt;decoded-time-hour&lt;/code&gt; ， &lt;code&gt;decoded-time-day&lt;/code&gt; ， &lt;code&gt;decoded-time-month&lt;/code&gt; ， &lt;code&gt;decoded-time-year&lt;/code&gt; ， &lt;code&gt;decoded-time-weekday&lt;/code&gt; ， &lt;code&gt;decoded-time-dst&lt;/code&gt; 和 &lt;code&gt;decoded-time-zone&lt;/code&gt; 访问器。</target>
        </trans-unit>
        <trans-unit id="43dc195b9080250f519540998a2c5a8f5d041ac2" translate="yes" xml:space="preserve">
          <source>To access the contents of a mouse position list in the &lt;var&gt;position&lt;/var&gt; slot of a click event, you should typically use the functions documented in &lt;a href=&quot;accessing-mouse#Accessing-Mouse&quot;&gt;Accessing Mouse&lt;/a&gt;. The explicit format of the list depends on where the click occurred. For clicks in the text area, mode line, header line, tab line, or in the fringe or marginal areas, the mouse position list has the form</source>
          <target state="translated">要在click事件的 &lt;var&gt;position&lt;/var&gt; 插槽中访问鼠标位置列表的内容，通常应使用&amp;ldquo;&lt;a href=&quot;accessing-mouse#Accessing-Mouse&quot;&gt;访问鼠标&amp;rdquo;中&lt;/a&gt;记录的功能。列表的显式格式取决于单击发生的位置。对于在文本区域，模式行，标题行，制表行或边缘或边缘区域中的单击，鼠标位置列表的形式为</target>
        </trans-unit>
        <trans-unit id="235f6e020ed5d69d374e18e26adf50fdd8a9afa1" translate="yes" xml:space="preserve">
          <source>To add a customization for a second buffer one would then write:</source>
          <target state="translated">如果要为第二个缓冲区添加自定义功能,则需要写。</target>
        </trans-unit>
        <trans-unit id="b53ee005115d4bc799a117e118afae627f87c915" translate="yes" xml:space="preserve">
          <source>To add an item to the menu bar, invent a fake function key of your own (let&amp;rsquo;s call it &lt;var&gt;key&lt;/var&gt;), and make a binding for the key sequence &lt;code&gt;[menu-bar &lt;var&gt;key&lt;/var&gt;]&lt;/code&gt;. Most often, the binding is a menu keymap, so that pressing a button on the menu bar item leads to another menu.</source>
          <target state="translated">要将一个项目添加到菜单栏中，请发明一个自己的假功能键（我们称其为 &lt;var&gt;key&lt;/var&gt; ），并为键序列绑定 &lt;code&gt;[menu-bar &lt;var&gt;key&lt;/var&gt;]&lt;/code&gt; 。大多数情况下，绑定是菜单键映射，因此在菜单栏项上按下按钮会导致另一个菜单。</target>
        </trans-unit>
        <trans-unit id="cd9a1dafd9b8a49df125d2b55de23e028c238bb2" translate="yes" xml:space="preserve">
          <source>To allow its users to initiate JSONRPC contacts (notifications or requests) or reply to endpoint requests, the subclass must have an implementation of the &lt;code&gt;jsonrpc-connection-send&lt;/code&gt; method.</source>
          <target state="translated">为了允许其用户启动JSONRPC联系人（通知或请求）或回复端点请求，子类必须具有 &lt;code&gt;jsonrpc-connection-send&lt;/code&gt; 方法的实现。</target>
        </trans-unit>
        <trans-unit id="55ca7463ded90201daa87e4d482f14eb3f606801" translate="yes" xml:space="preserve">
          <source>To automatically display a message in the echo area or in a pop-buffer, depending on its size, use &lt;code&gt;display-message-or-buffer&lt;/code&gt; (see below).</source>
          <target state="translated">要根据消息的大小在回显区域或弹出缓冲区中自动显示消息，请使用 &lt;code&gt;display-message-or-buffer&lt;/code&gt; （请参阅下文）。</target>
        </trans-unit>
        <trans-unit id="04b0e0265887990aa01de0d92bd3a351a40d12f1" translate="yes" xml:space="preserve">
          <source>To avoid conflict, cooperative conversions do not modify the buffer, but instead specify &lt;em&gt;annotations&lt;/em&gt;, a list of elements of the form &lt;code&gt;(&lt;var&gt;position&lt;/var&gt; . &lt;var&gt;string&lt;/var&gt;)&lt;/code&gt;, sorted in order of increasing &lt;var&gt;position&lt;/var&gt;.</source>
          <target state="translated">为了避免冲突，合作转化率不修改缓冲区，而是指定&lt;em&gt;注释&lt;/em&gt;，表单的元素列表 &lt;code&gt;(&lt;var&gt;position&lt;/var&gt; . &lt;var&gt;string&lt;/var&gt;)&lt;/code&gt; ，整理增加的顺序 &lt;var&gt;position&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="d09fba6f6abb0ce78ff8127847eea2de7a0bba7d" translate="yes" xml:space="preserve">
          <source>To avoid conflicts with other type names, Lisp programs that define new types of records should normally use the naming conventions of the package where these record types are introduced for the names of the types. Note that the names of the types which could possibly conflict might not be known at the time the package defining a record type is loaded; they could be loaded at some future point in time.</source>
          <target state="translated">为了避免与其他类型名称发生冲突,定义新记录类型的Lisp程序通常应该使用引入这些记录类型的包的命名约定作为类型名称。请注意,在加载定义记录类型的包时,可能冲突的类型名称可能还不知道;它们可能在未来的某个时间点被加载。</target>
        </trans-unit>
        <trans-unit id="e2a50b76a162337325e7276fa43ccd9804b2eb9e" translate="yes" xml:space="preserve">
          <source>To avoid confusion, we usually store the result of &lt;code&gt;nreverse&lt;/code&gt; back in the same variable which held the original list:</source>
          <target state="translated">为了避免混淆，我们通常将 &lt;code&gt;nreverse&lt;/code&gt; 的结果存储在保存原始列表的同一变量中：</target>
        </trans-unit>
        <trans-unit id="5b3904b394b86a2eacb65f3b29df5181abd20d8e" translate="yes" xml:space="preserve">
          <source>To avoid such problems, you should call &lt;code&gt;save-excursion&lt;/code&gt; only after setting the desired current buffer, as in the following example:</source>
          <target state="translated">为避免此类问题，仅在设置所需的当前缓冲区后，才应调用 &lt;code&gt;save-excursion&lt;/code&gt; ，如以下示例所示：</target>
        </trans-unit>
        <trans-unit id="2228eb3abc6eabfc0c09c3dba568ac339a975006" translate="yes" xml:space="preserve">
          <source>To avoid that dragging moves a frame completely out of its parent&amp;rsquo;s native frame, something which might happen when the mouse cursor overshoots and makes the frame difficult to retrieve once the mouse button has been released, it is advisable to set the frame&amp;rsquo;s &lt;code&gt;top-visible&lt;/code&gt; or &lt;code&gt;bottom-visible&lt;/code&gt; parameter correspondingly.</source>
          <target state="translated">为避免拖动将帧完全移出其父级的原始帧，这可能在鼠标光标过冲时发生，并且一旦释放鼠标按钮使该帧难于找回，建议将帧设置为 &lt;code&gt;top-visible&lt;/code&gt; 或 &lt;code&gt;bottom-visible&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="7280b19374f8217c16ade18f1e59c63667eb03e5" translate="yes" xml:space="preserve">
          <source>To avoid the issues mentioned above, or if the &lt;var&gt;dirname&lt;/var&gt; value might be &lt;code&gt;nil&lt;/code&gt; (for example, from an element of &lt;code&gt;load-path&lt;/code&gt;), use:</source>
          <target state="translated">为了避免上述问题，或者 &lt;var&gt;dirname&lt;/var&gt; 值可能为 &lt;code&gt;nil&lt;/code&gt; （例如，来自 &lt;code&gt;load-path&lt;/code&gt; 的元素），请使用：</target>
        </trans-unit>
        <trans-unit id="06b328352984f5866b5037561b1c5f12a0cc560f" translate="yes" xml:space="preserve">
          <source>To avoid these problems, &lt;strong&gt;don&amp;rsquo;t evaluate an argument expression while computing the macro expansion&lt;/strong&gt;. Instead, substitute the expression into the macro expansion, so that its value will be computed as part of executing the expansion. This is how the other examples in this chapter work.</source>
          <target state="translated">为避免这些问题，&lt;strong&gt;在计算宏扩展时不要评估参数表达式&lt;/strong&gt;。而是将表达式替换为宏扩展，以便在执行扩展时计算其值。这就是本章中其他示例的工作方式。</target>
        </trans-unit>
        <trans-unit id="151a4e1d6be0d40ecf6f500b522ca57880aee748" translate="yes" xml:space="preserve">
          <source>To avoid this, a character must first be converted into a string, using &lt;code&gt;string&lt;/code&gt; function, before being passed to one of the casing functions. Of course, no assumptions on the length of the result may be made.</source>
          <target state="translated">为避免这种情况，必须先使用 &lt;code&gt;string&lt;/code&gt; 函数将字符转换为字符串，然后再将其传递给大小写函数之一。当然，不能假设结果的长度。</target>
        </trans-unit>
        <trans-unit id="c08d14ae870dedecf552e1f86aa6eea63bd9fd99" translate="yes" xml:space="preserve">
          <source>To catch a user signal, bind the corresponding event to an interactive command in the &lt;code&gt;special-event-map&lt;/code&gt; (see &lt;a href=&quot;controlling-active-maps#Controlling-Active-Maps&quot;&gt;Controlling Active Maps&lt;/a&gt;). The command is called with no arguments, and the specific signal event is available in &lt;code&gt;last-input-event&lt;/code&gt; (see &lt;a href=&quot;event-input-misc#Event-Input-Misc&quot;&gt;Event Input Misc&lt;/a&gt;. For example:</source>
          <target state="translated">要捕获用户信号，请将相应的事件绑定到 &lt;code&gt;special-event-map&lt;/code&gt; 中的交互式命令（请参见&lt;a href=&quot;controlling-active-maps#Controlling-Active-Maps&quot;&gt;控制Active Maps&lt;/a&gt;）。调用该命令时不带参数，并且特定的信号事件在 &lt;code&gt;last-input-event&lt;/code&gt; 中可用（请参阅&lt;a href=&quot;event-input-misc#Event-Input-Misc&quot;&gt;事件输入杂项&lt;/a&gt;。例如：</target>
        </trans-unit>
        <trans-unit id="b60cc1ba860cf61e455af88cf8feaed4e8e7146b" translate="yes" xml:space="preserve">
          <source>To change the order or value of a specific frame&amp;rsquo;s buffer list, set that frame&amp;rsquo;s &lt;code&gt;buffer-list&lt;/code&gt; parameter with &lt;code&gt;modify-frame-parameters&lt;/code&gt; (see &lt;a href=&quot;parameter-access#Parameter-Access&quot;&gt;Parameter Access&lt;/a&gt;).</source>
          <target state="translated">要更改特定帧的缓冲区列表的顺序或值，请使用 &lt;code&gt;modify-frame-parameters&lt;/code&gt; 设置该帧的 &lt;code&gt;buffer-list&lt;/code&gt; 参数（请参阅&amp;ldquo;&lt;a href=&quot;parameter-access#Parameter-Access&quot;&gt;参数访问&amp;rdquo;&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="48997c06dd2af5aa4bd2669c1f8ee166bf8f313c" translate="yes" xml:space="preserve">
          <source>To check for ImageMagick support, use the following:</source>
          <target state="translated">要检查是否支持ImageMagick,请使用以下方法。</target>
        </trans-unit>
        <trans-unit id="2debbc20ba57a4693461659f109833cc9f2eef69" translate="yes" xml:space="preserve">
          <source>To clear out a string that contained a password, use &lt;code&gt;clear-string&lt;/code&gt;:</source>
          <target state="translated">要清除包含密码 &lt;code&gt;clear-string&lt;/code&gt; ，请使用clear-string：</target>
        </trans-unit>
        <trans-unit id="826939281f100c5ead46cd93ab44c37cdfc70201" translate="yes" xml:space="preserve">
          <source>To clear the frequency count and coverage data for a definition, simply reinstrument it with &lt;code&gt;eval-defun&lt;/code&gt;.</source>
          <target state="translated">要清除定义的频率计数和覆盖范围数据，只需使用 &lt;code&gt;eval-defun&lt;/code&gt; 重新插入。</target>
        </trans-unit>
        <trans-unit id="9ea85c9d57b9612ecf213929c1439272e19b49bc" translate="yes" xml:space="preserve">
          <source>To conserve memory, Emacs does not hold fixed-length 22-bit numbers that are codepoints of text characters within buffers and strings. Rather, Emacs uses a variable-length internal representation of characters, that stores each character as a sequence of 1 to 5 8-bit bytes, depending on the magnitude of its codepoint&lt;a href=&quot;#FOOT17&quot; name=&quot;DOCF17&quot;&gt;&lt;sup&gt;17&lt;/sup&gt;&lt;/a&gt;. For example, any</source>
          <target state="translated">为了节省内存，Emacs不保存固定长度的22位数字，这些数字是缓冲区和字符串中文本字符的代码点。相反，Emacs使用字符的长度可变的内部表示形式，根据其代码点&lt;a href=&quot;#FOOT17&quot; name=&quot;DOCF17&quot;&gt;&lt;sup&gt;17&lt;/sup&gt;&lt;/a&gt;的大小，每个字符以1到5个8位字节的序列存储。例如，任何</target>
        </trans-unit>
        <trans-unit id="62bee7c8192286adfd0c7acee5e1574b082e60da" translate="yes" xml:space="preserve">
          <source>To control output format more precisely, you can put a string in this variable. The string should hold a &amp;lsquo;</source>
          <target state="translated">为了更精确地控制输出格式，可以在此变量中放置一个字符串。该字符串应包含一个'</target>
        </trans-unit>
        <trans-unit id="ba9870e4247d169ea559ccaf09840adafed3981a" translate="yes" xml:space="preserve">
          <source>To control unpacking and packing, you write a &lt;em&gt;data layout specification&lt;/em&gt;, a special nested list describing named and typed &lt;em&gt;fields&lt;/em&gt;. This specification controls the length of each field to be processed, and how to pack or unpack it. We normally keep bindat specs in variables whose names end in &amp;lsquo;</source>
          <target state="translated">为了控制拆包和打包，您编写了一个&lt;em&gt;数据布局规范&lt;/em&gt;，一个特殊的嵌套列表，描述了命名&lt;em&gt;字段&lt;/em&gt;和键入&lt;em&gt;字段&lt;/em&gt;。该规范控制要处理的每个字段的长度，以及如何打包或拆包。通常，我们将bindat规范保留在名称以'结尾的变量中</target>
        </trans-unit>
        <trans-unit id="0f9397e2a68037dd11d8ba74c654a18dd8898ef6" translate="yes" xml:space="preserve">
          <source>To convert a directory name to its abbreviation, use this function:</source>
          <target state="translated">要将目录名转换为其缩写,请使用此函数。</target>
        </trans-unit>
        <trans-unit id="ec062d3d87c3e3508835c86383da0aff25d9dc46" translate="yes" xml:space="preserve">
          <source>To convert an integer to floating point, use the function &lt;code&gt;float&lt;/code&gt;.</source>
          <target state="translated">要将整数转换为浮点，请使用 &lt;code&gt;float&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="bb0887b6e6ad7546bf3ba790c69350aac035c76f" translate="yes" xml:space="preserve">
          <source>To copy the contents of a file into a buffer, use the function &lt;code&gt;insert-file-contents&lt;/code&gt;. (Don&amp;rsquo;t use the command &lt;code&gt;insert-file&lt;/code&gt; in a Lisp program, as that sets the mark.)</source>
          <target state="translated">要将文件的内容复制到缓冲区中，请使用函数 &lt;code&gt;insert-file-contents&lt;/code&gt; 。（不要在Lisp程序中使用命令 &lt;code&gt;insert-file&lt;/code&gt; ，因为那样会设置标记。）</target>
        </trans-unit>
        <trans-unit id="133d24c64118311f91ce8dc247810f556ae14153" translate="yes" xml:space="preserve">
          <source>To create a new atomic window from an existing live window or to add a new window to an existing atomic window, the following buffer display action function (see &lt;a href=&quot;buffer-display-action-functions#Buffer-Display-Action-Functions&quot;&gt;Buffer Display Action Functions&lt;/a&gt;) can be used:</source>
          <target state="translated">要从现有的实时窗口创建新的原子窗口或将新窗口添加到现有的原子窗口，可以使用以下缓冲区显示动作函数（请参见&lt;a href=&quot;buffer-display-action-functions#Buffer-Display-Action-Functions&quot;&gt;缓冲区显示动作函数&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="29ff3e80f60dfd08ff1b5590946bd89af0abab17" translate="yes" xml:space="preserve">
          <source>To create a new child frame or to convert a normal frame into a child frame, set that frame&amp;rsquo;s &lt;code&gt;parent-frame&lt;/code&gt; parameter (see &lt;a href=&quot;frame-interaction-parameters#Frame-Interaction-Parameters&quot;&gt;Frame Interaction Parameters&lt;/a&gt;) to that of an already existing frame. The frame specified by that parameter will then be the frame&amp;rsquo;s parent frame as long as the parameter is not changed or reset. Technically, this makes the child frame&amp;rsquo;s window-system window a child window of the parent frame&amp;rsquo;s window-system window.</source>
          <target state="translated">要创建新的子框架或将普通框架转换为子框架，请将该框架的 &lt;code&gt;parent-frame&lt;/code&gt; 参数（请参阅&amp;ldquo;&lt;a href=&quot;frame-interaction-parameters#Frame-Interaction-Parameters&quot;&gt;框架交互参数&amp;rdquo;&lt;/a&gt;）设置为现有框架的参数。只要不更改或重置参数，该参数指定的帧即成为该帧的父帧。从技术上讲，这使子框架的窗口系统窗口成为父框架的窗口系统窗口的子窗口。</target>
        </trans-unit>
        <trans-unit id="ab5f54acfa8eddfb20c7033fd6db4713b5307cdb" translate="yes" xml:space="preserve">
          <source>To create a new frame, call the function &lt;code&gt;make-frame&lt;/code&gt;.</source>
          <target state="translated">要创建新框架，请调用函数 &lt;code&gt;make-frame&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="520e6d95fc677b710393ae409ecfe311056a233b" translate="yes" xml:space="preserve">
          <source>To deal with an excess close parenthesis, first go to the beginning of the file, then type</source>
          <target state="translated">要处理多余的小括号,首先进入文件的开头,然后键入</target>
        </trans-unit>
        <trans-unit id="adff80d0afc108dda2cc35897c7b315aedf5b28c" translate="yes" xml:space="preserve">
          <source>To debug a Lisp program with Edebug, you must first &lt;em&gt;instrument&lt;/em&gt; the Lisp code that you want to debug. A simple way to do this is to first move point into the definition of a function or macro and then do</source>
          <target state="translated">要使用Edebug调试Lisp程序，必须首先&lt;em&gt;检测&lt;/em&gt;要调试的Lisp代码。一种简单的方法是先将点移到函数或宏的定义中，然后执行</target>
        </trans-unit>
        <trans-unit id="915d1eaa14aa3e00e6bcaad57665857bb7499f4f" translate="yes" xml:space="preserve">
          <source>To debug an error that happens during loading of the init file, use the option &amp;lsquo;</source>
          <target state="translated">要调试在加载初始化文件期间发生的错误，请使用选项'</target>
        </trans-unit>
        <trans-unit id="3bdad9168cc7c8303d260876d234b4ac3a92a4ea" translate="yes" xml:space="preserve">
          <source>To define</source>
          <target state="translated">要定义</target>
        </trans-unit>
        <trans-unit id="47b1b0291e0b6e36ef353b4609dc3200dd5e719a" translate="yes" xml:space="preserve">
          <source>To define a customizable variable, you should use &lt;code&gt;defcustom&lt;/code&gt; (which calls &lt;code&gt;defvar&lt;/code&gt; as a subroutine). See &lt;a href=&quot;variable-definitions#Variable-Definitions&quot;&gt;Variable Definitions&lt;/a&gt;.</source>
          <target state="translated">要定义可自定义的变量，应使用 &lt;code&gt;defcustom&lt;/code&gt; （将 &lt;code&gt;defvar&lt;/code&gt; 作为子例程调用）。请参阅&lt;a href=&quot;variable-definitions#Variable-Definitions&quot;&gt;变量定义&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="da089848c03f8ce3f8980943a85c2ada002c9db8" translate="yes" xml:space="preserve">
          <source>To define a kind of magic file name, you must supply a regular expression to define the class of names (all those that match the regular expression), plus a handler that implements all the primitive Emacs file operations for file names that match.</source>
          <target state="translated">要定义一种神奇的文件名,你必须提供一个正则表达式来定义名字的类别(所有与正则表达式相匹配的名字),再加上一个处理程序,该处理程序实现了对匹配的文件名的所有原始Emacs文件操作。</target>
        </trans-unit>
        <trans-unit id="be46e3ea1fad3493a5c2d659f71c451b37468aba" translate="yes" xml:space="preserve">
          <source>To define a real menu item which can be selected, the extended format binding looks like this:</source>
          <target state="translated">要定义一个可以选择的真正的菜单项,扩展格式绑定是这样的。</target>
        </trans-unit>
        <trans-unit id="242173ab3939d3e25ee7d06573de8c62f25e018d" translate="yes" xml:space="preserve">
          <source>To define items in some local map, bind &lt;code&gt;tool-bar-map&lt;/code&gt; with &lt;code&gt;let&lt;/code&gt; around calls of this function:</source>
          <target state="translated">在一些地方的地图定义项，绑定 &lt;code&gt;tool-bar-map&lt;/code&gt; 与 &lt;code&gt;let&lt;/code&gt; 这个函数的调用左右：</target>
        </trans-unit>
        <trans-unit id="4b51a95034fae70a0f906d327a9971bc4d4ef1ce" translate="yes" xml:space="preserve">
          <source>To define system-specific X11 keysyms, set the variable &lt;code&gt;system-key-alist&lt;/code&gt;.</source>
          <target state="translated">要定义系统特定的X11键符，请设置变量 &lt;code&gt;system-key-alist&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="73c67c5491a375c80d720438c106b29de8cdb852" translate="yes" xml:space="preserve">
          <source>To delete a group, move point into it and type</source>
          <target state="translated">要删除一个组,将点移动到它里面,然后输入</target>
        </trans-unit>
        <trans-unit id="8e96ef9ec0fc817e8f29201278b2f3e54af7b1ea" translate="yes" xml:space="preserve">
          <source>To describe the lexing rules of your language to SMIE, you need 2 functions, one to fetch the next token, and another to fetch the previous token. Those functions will usually first skip whitespace and comments and then look at the next chunk of text to see if it is a special token. If so it should skip the token and return a description of this token. Usually this is simply the string extracted from the buffer, but it can be anything you want. For example:</source>
          <target state="translated">要向 SMIE 描述你的语言的词法规则,你需要 2 个函数,一个用来获取下一个标记,另一个用来获取上一个标记。这些函数通常会先跳过空格和注释,然后查看下一个文本块是否是特殊标记。如果是,它应该跳过这个标记,并返回这个标记的描述。通常这只是从缓冲区中提取的字符串,但它可以是任何你想要的东西。比如说</target>
        </trans-unit>
        <trans-unit id="4cb372b3c447b50febee755be839e76e33054af7" translate="yes" xml:space="preserve">
          <source>To determine whether a given subprocess actually got a pipe or a pty, use the function &lt;code&gt;process-tty-name&lt;/code&gt; (see &lt;a href=&quot;process-information#Process-Information&quot;&gt;Process Information&lt;/a&gt;).</source>
          <target state="translated">要确定给定的子流程实际上是否有管道或pty，请使用 &lt;code&gt;process-tty-name&lt;/code&gt; 函数（请参阅&lt;a href=&quot;process-information#Process-Information&quot;&gt;Process Information&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="7f0898334262efad40a7b01e832830958d6ea6b2" translate="yes" xml:space="preserve">
          <source>To disable the dynamic loading feature for a specific file, set this option to &lt;code&gt;nil&lt;/code&gt; in its header line (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/File-Variables.html#File-Variables&quot;&gt;Local Variables in Files&lt;/a&gt; in</source>
          <target state="translated">要禁用动态加载功能特定的文件，将该选项设置为 &lt;code&gt;nil&lt;/code&gt; 在其标题行（见&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/File-Variables.html#File-Variables&quot;&gt;中的文件本地变量&lt;/a&gt;中</target>
        </trans-unit>
        <trans-unit id="8d5e3874fad54b27ff6edfe7772adf4f6fbd2b49" translate="yes" xml:space="preserve">
          <source>To display a space of specified width and/or height, use a display specification of the form &lt;code&gt;(space . &lt;var&gt;props&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;props&lt;/var&gt; is a property list (a list of alternating properties and values). You can put this property on one or more consecutive characters; a space of the specified height and width is displayed in place of &lt;em&gt;all&lt;/em&gt; of those characters. These are the properties you can use in &lt;var&gt;props&lt;/var&gt; to specify the weight of the space:</source>
          <target state="translated">要显示指定宽度和/或高度的空间，请使用形式为 &lt;code&gt;(space . &lt;var&gt;props&lt;/var&gt;)&lt;/code&gt; 的显示说明，其中 &lt;var&gt;props&lt;/var&gt; 是属性列表（交替的属性和值的列表）。您可以将此属性放在一个或多个连续字符上；将显示指定高度和宽度的空格来代替&lt;em&gt;所有&lt;/em&gt;这些字符。您可以在 &lt;var&gt;props&lt;/var&gt; 使用以下属性来指定空间的重量：</target>
        </trans-unit>
        <trans-unit id="4ffc4ba1a6de109bae00ebf9c118c0264731234e" translate="yes" xml:space="preserve">
          <source>To display an embedded widget in a buffer, you must first create an xwidget object, and then use that object as the display specifier in a &lt;code&gt;display&lt;/code&gt; text or overlay property (see &lt;a href=&quot;display-property#Display-Property&quot;&gt;Display Property&lt;/a&gt;).</source>
          <target state="translated">要在缓冲区中显示嵌入式窗口小部件，必须首先创建一个xwidget对象，然后将该对象用作 &lt;code&gt;display&lt;/code&gt; 文本或overlay属性中的显示说明符（请参见&lt;a href=&quot;display-property#Display-Property&quot;&gt;Display Property&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="612e166b28872c3a8d06d7757780349cd9e9885d" translate="yes" xml:space="preserve">
          <source>To display an image in an Emacs buffer, you must first create an image descriptor, then use it as a display specifier in the &lt;code&gt;display&lt;/code&gt; property of text that is displayed (see &lt;a href=&quot;display-property#Display-Property&quot;&gt;Display Property&lt;/a&gt;).</source>
          <target state="translated">要在Emacs缓冲区中显示图像，必须首先创建图像描述符，然后在 &lt;code&gt;display&lt;/code&gt; 的文本的display属性中将其用作显示说明符（请参见&lt;a href=&quot;display-property#Display-Property&quot;&gt;Display Property&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="a8ab40d8502bb236444d4c748c84422d49084ce2" translate="yes" xml:space="preserve">
          <source>To display something in the margin &lt;em&gt;in association with&lt;/em&gt; certain buffer text, without altering or preventing the display of that text, put a &lt;code&gt;before-string&lt;/code&gt; property on the text and put the margin display specification on the contents of the before-string.</source>
          <target state="translated">若要在空白处&lt;em&gt;与&lt;/em&gt;某些缓冲区文本&lt;em&gt;相关联&lt;/em&gt;地显示某些内容，而又不改变或阻止该文本的显示，请在文本上放置一个 &lt;code&gt;before-string&lt;/code&gt; 属性，并在该字符串前的内容上放置空白显示规范。</target>
        </trans-unit>
        <trans-unit id="2ac1a88bca0cfc132b292a9580511ca77f20d1c7" translate="yes" xml:space="preserve">
          <source>To distinguish the different types of processes, the &lt;code&gt;process-type&lt;/code&gt; function returns the symbol &lt;code&gt;network&lt;/code&gt; for a network connection or server, &lt;code&gt;serial&lt;/code&gt; for a serial port connection, &lt;code&gt;pipe&lt;/code&gt; for a pipe connection, or &lt;code&gt;real&lt;/code&gt; for a real subprocess.</source>
          <target state="translated">为了区分不同类型的过程，该 &lt;code&gt;process-type&lt;/code&gt; 函数返回符号 &lt;code&gt;network&lt;/code&gt; 进行网络连接或服务器， &lt;code&gt;serial&lt;/code&gt; 对串行端口连接， &lt;code&gt;pipe&lt;/code&gt; 用于管连接，或 &lt;code&gt;real&lt;/code&gt; 为一个真正的子进程。</target>
        </trans-unit>
        <trans-unit id="05d5c1daa8d28f63fa48996b94da05d2812ba71a" translate="yes" xml:space="preserve">
          <source>To do this for one buffer, the one already current, simply write a call to &lt;code&gt;atomic-change-group&lt;/code&gt; around the code that makes the changes, like this:</source>
          <target state="translated">要对一个已经存在的缓冲区执行此操作，只需 &lt;code&gt;atomic-change-group&lt;/code&gt; 的代码周围编写对atomic-change-group的调用，如下所示：</target>
        </trans-unit>
        <trans-unit id="eb94ca63ae89215346ca01eaf463c0cfab2f34ae" translate="yes" xml:space="preserve">
          <source>To do this, write one or more &lt;em&gt;evaluation list groups&lt;/em&gt; in the evaluation list buffer. An evaluation list group consists of one or more Lisp expressions. Groups are separated by comment lines.</source>
          <target state="translated">为此，请在评估列表缓冲区中写入一个或多个&lt;em&gt;评估列表组&lt;/em&gt;。评估列表组由一个或多个Lisp表达式组成。组由注释行分隔。</target>
        </trans-unit>
        <trans-unit id="6a44041b6bf383ffe5217b5f44c2750ab46451e4" translate="yes" xml:space="preserve">
          <source>To edit a particular file in unibyte representation, visit it using &lt;code&gt;find-file-literally&lt;/code&gt;. See &lt;a href=&quot;visiting-functions#Visiting-Functions&quot;&gt;Visiting Functions&lt;/a&gt;. You can convert a multibyte buffer to unibyte by saving it to a file, killing the buffer, and visiting the file again with &lt;code&gt;find-file-literally&lt;/code&gt;. Alternatively, you can use</source>
          <target state="translated">要以unibyte形式编辑特定文件，请使用 &lt;code&gt;find-file-literally&lt;/code&gt; 访问该文件。请参阅&lt;a href=&quot;visiting-functions#Visiting-Functions&quot;&gt;访问函数&lt;/a&gt;。您可以将多字节缓冲区转换为单字节，方法是将其保存到文件中，杀死该缓冲区，然后使用 &lt;code&gt;find-file-literally&lt;/code&gt; 再次访问该文件。或者，您可以使用</target>
        </trans-unit>
        <trans-unit id="fe5e6c27a8f59ef290015d6ac8f824d9b7ff9b2e" translate="yes" xml:space="preserve">
          <source>To emulate Unicode-compliant collation on MS-Windows systems, bind &lt;code&gt;w32-collate-ignore-punctuation&lt;/code&gt; to a non-&lt;code&gt;nil&lt;/code&gt; value, since the codeset part of the locale cannot be &lt;code&gt;&quot;UTF-8&quot;&lt;/code&gt; on MS-Windows.</source>
          <target state="translated">要在MS-Windows系统上模拟符合Unicode的排序规则， &lt;code&gt;w32-collate-ignore-punctuation&lt;/code&gt; 绑定到非 &lt;code&gt;nil&lt;/code&gt; 值，因为在MS-Windows上语言环境的代码集部分不能为 &lt;code&gt;&quot;UTF-8&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bb22ac9aa97cf59701dbd87a30f14a83e31dc830" translate="yes" xml:space="preserve">
          <source>To enclose a complicated expression for the postfix operators &amp;lsquo;</source>
          <target state="translated">为后缀运算符'</target>
        </trans-unit>
        <trans-unit id="5bb9a33127055a186c9841f0be6edc07e148df56" translate="yes" xml:space="preserve">
          <source>To enclose a set of &amp;lsquo;</source>
          <target state="translated">附上一组&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="aad4f7e11ac2c1007d79990475b1ffc586453615" translate="yes" xml:space="preserve">
          <source>To ensure that the return value is always specified and absolute, use a value of &lt;code&gt;default&lt;/code&gt; for &lt;var&gt;inherit&lt;/var&gt;; this will resolve any unspecified or relative values by merging with the &lt;code&gt;default&lt;/code&gt; face (which is always completely specified).</source>
          <target state="translated">为了确保返回值总是被指定的和绝对的，使用的值 &lt;code&gt;default&lt;/code&gt; 为 &lt;var&gt;inherit&lt;/var&gt; ;这将通过合并 &lt;code&gt;default&lt;/code&gt; 面（始终完全指定）来解析所有未指定或相对的值。</target>
        </trans-unit>
        <trans-unit id="e0c126d62e13c91e026ad9e86846f8ad4de3d634" translate="yes" xml:space="preserve">
          <source>To execute a command, Emacs first reads its arguments by calling &lt;code&gt;command-execute&lt;/code&gt; (see &lt;a href=&quot;interactive-call#Interactive-Call&quot;&gt;Interactive Call&lt;/a&gt;). For commands written in Lisp, the &lt;code&gt;interactive&lt;/code&gt; specification says how to read the arguments. This may use the prefix argument (see &lt;a href=&quot;prefix-command-arguments#Prefix-Command-Arguments&quot;&gt;Prefix Command Arguments&lt;/a&gt;) or may read with prompting in the minibuffer (see &lt;a href=&quot;minibuffers#Minibuffers&quot;&gt;Minibuffers&lt;/a&gt;). For example, the command &lt;code&gt;find-file&lt;/code&gt; has an &lt;code&gt;interactive&lt;/code&gt; specification which says to read a file name using the minibuffer. The function body of &lt;code&gt;find-file&lt;/code&gt; does not use the minibuffer, so if you call &lt;code&gt;find-file&lt;/code&gt; as a function from Lisp code, you must supply the file name string as an ordinary Lisp function argument.</source>
          <target state="translated">要执行命令，Emacs首先通过调用 &lt;code&gt;command-execute&lt;/code&gt; 来读取其自变量（请参阅&lt;a href=&quot;interactive-call#Interactive-Call&quot;&gt;Interactive Call&lt;/a&gt;）。对于用Lisp编写的命令， &lt;code&gt;interactive&lt;/code&gt; 规范说明了如何读取参数。这可以使用prefix参数（请参见&lt;a href=&quot;prefix-command-arguments#Prefix-Command-Arguments&quot;&gt;Prefix Command Arguments&lt;/a&gt;），也可以通过提示在&lt;a href=&quot;minibuffers#Minibuffers&quot;&gt;微型&lt;/a&gt;缓冲区中读取（请参见Minibuffers）。例如，命令 &lt;code&gt;find-file&lt;/code&gt; 具有 &lt;code&gt;interactive&lt;/code&gt; 规范，该规范要求使用迷你缓冲区读取文件名。 &lt;code&gt;find-file&lt;/code&gt; 的函数主体不使用迷你缓冲区，因此如果您调用 &lt;code&gt;find-file&lt;/code&gt; 作为Lisp代码中的函数，您必须提供文件名字符串作为普通的Lisp函数参数。</target>
        </trans-unit>
        <trans-unit id="6566806b47a3aa9b7f3de92a2db0b971d64f96a5" translate="yes" xml:space="preserve">
          <source>To facilitate handling plists, this library makes liberal use of &lt;code&gt;cl-lib&lt;/code&gt; library (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/cl/index.html#Top&quot;&gt;cl-lib&lt;/a&gt; in</source>
          <target state="translated">为了便于搬运的Plist，这个库使得自由使用的 &lt;code&gt;cl-lib&lt;/code&gt; 库（见&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/cl/index.html#Top&quot;&gt;CL-LIB&lt;/a&gt;中</target>
        </trans-unit>
        <trans-unit id="943b21f8b9590e90a090aea3ca4bdaf4332a1e92" translate="yes" xml:space="preserve">
          <source>To facilitate support for window systems that support multiple selections, this function may also return a list of strings. In that case, the first string is used as the most recent kill, and all the other strings are pushed onto the kill ring, for easy access by &lt;code&gt;yank-pop&lt;/code&gt;.</source>
          <target state="translated">为了促进对支持多个选择的窗口系统的支持，此函数还可能返回字符串列表。在这种情况下，第一个字符串用作最近的kill，其他所有字符串都将插入kill环，以便 &lt;code&gt;yank-pop&lt;/code&gt; 轻松访问。</target>
        </trans-unit>
        <trans-unit id="c2d6ad27ab1b6fc479f12591a36ec3f7865428c9" translate="yes" xml:space="preserve">
          <source>To find multiline constructs reliably, you must either manually place the &lt;code&gt;font-lock-multiline&lt;/code&gt; property on the text before Font Lock mode looks at it, or use &lt;code&gt;font-lock-fontify-region-function&lt;/code&gt;.</source>
          <target state="translated">为了可靠地找到多行构造，您必须在Font Lock模式查看之前在文本上手动放置 &lt;code&gt;font-lock-multiline&lt;/code&gt; 属性，或者使用 &lt;code&gt;font-lock-fontify-region-function&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="736c0fcb8de5bb8353a063e5781898cc0450f96a" translate="yes" xml:space="preserve">
          <source>To find out where your breakpoints are, use the</source>
          <target state="translated">要找出你的断点在哪里,使用</target>
        </trans-unit>
        <trans-unit id="f460081de818da04e5a9cff694d9ecde40a8ee4d" translate="yes" xml:space="preserve">
          <source>To find the file, &lt;code&gt;load&lt;/code&gt; first looks for a file named</source>
          <target state="translated">要查找文件，首先要 &lt;code&gt;load&lt;/code&gt; 以查找名为</target>
        </trans-unit>
        <trans-unit id="da338d47b276994da0478e188dcbe079feaf3afe" translate="yes" xml:space="preserve">
          <source>To force point to the end of the new output, no matter where it was previously, eliminate the variable &lt;code&gt;moving&lt;/code&gt; from the example and call &lt;code&gt;goto-char&lt;/code&gt; unconditionally. Note that this doesn&amp;rsquo;t necessarily move the window point. The default filter actually uses &lt;code&gt;insert-before-markers&lt;/code&gt; which moves all markers, including the window point. This may move unrelated markers, so it&amp;rsquo;s generally better to move the window point explicitly, or set its insertion type to &lt;code&gt;t&lt;/code&gt; (see &lt;a href=&quot;window-point#Window-Point&quot;&gt;Window Point&lt;/a&gt;).</source>
          <target state="translated">要强制指向新的输出，不管它是以前结束时，消除所述可变 &lt;code&gt;moving&lt;/code&gt; 从实例和呼叫 &lt;code&gt;goto-char&lt;/code&gt; 无条件。请注意，这不一定会移动窗口点。默认过滤器实际上使用 &lt;code&gt;insert-before-markers&lt;/code&gt; 器来移动所有标记，包括窗口点。这可能会移动不相关的标记，因此通常最好显式移动窗口点，或将其插入类型设置为 &lt;code&gt;t&lt;/code&gt; （请参见&lt;a href=&quot;window-point#Window-Point&quot;&gt;Window Point&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="4288c93e20156dd07221471369ed083de2003c77" translate="yes" xml:space="preserve">
          <source>To generate repeat events, successive mouse button presses must be at approximately the same screen position. The value of &lt;code&gt;double-click-fuzz&lt;/code&gt; specifies the maximum number of pixels the mouse may be moved (horizontally or vertically) between two successive clicks to make a double-click.</source>
          <target state="translated">要生成重复事件，连续的鼠标按钮按下必须在大约相同的屏幕位置。 &lt;code&gt;double-click-fuzz&lt;/code&gt; 的值指定两次连续单击之间鼠标（水平或垂直）移动鼠标的最大像素数。</target>
        </trans-unit>
        <trans-unit id="780f4821e6554fc54824a572b385fa0fc600c6df" translate="yes" xml:space="preserve">
          <source>To generate repeat events, the number of milliseconds between successive button presses must be less than the value of &lt;code&gt;double-click-time&lt;/code&gt;. Setting &lt;code&gt;double-click-time&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt; disables multi-click detection entirely. Setting it to &lt;code&gt;t&lt;/code&gt; removes the time limit; Emacs then detects multi-clicks by position only.</source>
          <target state="translated">要生成重复事件，连续两次按下按钮之间的毫秒数必须小于 &lt;code&gt;double-click-time&lt;/code&gt; 的值。将 &lt;code&gt;double-click-time&lt;/code&gt; 设置为 &lt;code&gt;nil&lt;/code&gt; 会完全禁用多次单击检测。将其设置为 &lt;code&gt;t&lt;/code&gt; 会删除时间限制；然后，Emacs仅按位置检测多次点击。</target>
        </trans-unit>
        <trans-unit id="19d088bf54b936cef160191c2cebeed8a1d1ed35" translate="yes" xml:space="preserve">
          <source>To handle a SIGUSR1 signal, define an interactive function, and bind it to the &lt;code&gt;signal usr1&lt;/code&gt; event sequence:</source>
          <target state="translated">要处理SIGUSR1信号，请定义一个交互函数，并将其绑定到 &lt;code&gt;signal usr1&lt;/code&gt; 事件序列：</target>
        </trans-unit>
        <trans-unit id="c32006c4ff4c766228037b6b2afe06d3f3a145af" translate="yes" xml:space="preserve">
          <source>To help debug programs, unrecognized &amp;lsquo;</source>
          <target state="translated">为了帮助调试程序，无法识别的&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="3849d18d8fabe966dd35742de30de88b9eae3d6b" translate="yes" xml:space="preserve">
          <source>To help describe one form, we sometimes show another form that produces identical results. The exact equivalence of two forms is indicated with &amp;lsquo;</source>
          <target state="translated">为了帮助描述一种形式，有时我们会显示产生相同结果的另一种形式。两种形式的精确等价用'</target>
        </trans-unit>
        <trans-unit id="fe6c6111fdf3fec951dcd98ca0836d457ab405fa" translate="yes" xml:space="preserve">
          <source>To help understand specifications.</source>
          <target state="translated">为了帮助理解规格。</target>
        </trans-unit>
        <trans-unit id="e7576433676549c25899233eb67d4f87d1a704bb" translate="yes" xml:space="preserve">
          <source>To illustrate some of the above, suppose that you have the line:</source>
          <target state="translated">为了说明上面的一些情况,假设你有这条线。</target>
        </trans-unit>
        <trans-unit id="d9955b25ef22660ce84067f31b4afc415a9b0964" translate="yes" xml:space="preserve">
          <source>To illustrate the difference between &lt;code&gt;file-chase-links&lt;/code&gt; and &lt;code&gt;file-truename&lt;/code&gt;, suppose that</source>
          <target state="translated">为了说明 &lt;code&gt;file-chase-links&lt;/code&gt; 和 &lt;code&gt;file-truename&lt;/code&gt; 之间的区别，假设</target>
        </trans-unit>
        <trans-unit id="d22f5aae492a50a5ddf46999ea08278e96a32b03" translate="yes" xml:space="preserve">
          <source>To illustrate the effect of &lt;code&gt;window-combination-resize&lt;/code&gt;, consider the following frame layout.</source>
          <target state="translated">为了说明 &lt;code&gt;window-combination-resize&lt;/code&gt; 的效果，请考虑以下框架布局。</target>
        </trans-unit>
        <trans-unit id="090fd0dd48cab6913fa6cc0fdbb3061886ab5e87" translate="yes" xml:space="preserve">
          <source>To illustrate usage, here is a Lisp function that returns a list of the overlays that specify property &lt;var&gt;prop&lt;/var&gt; for the character at point:</source>
          <target state="translated">为了说明用法，下面是一个Lisp函数，该函数返回一个叠加层列表，这些叠加层为该点指定字符的属性 &lt;var&gt;prop&lt;/var&gt; ：</target>
        </trans-unit>
        <trans-unit id="9aa3dbb1b5573770c3cda95ee5fd660e4b6f1d60" translate="yes" xml:space="preserve">
          <source>To indicate clickability, add the &lt;code&gt;mouse-face&lt;/code&gt; text property to the text of the link; then Emacs will highlight the link when the mouse moves over it. In addition, you should define a tooltip or echo area message, using the &lt;code&gt;help-echo&lt;/code&gt; text property. See &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Special Properties&lt;/a&gt;. For instance, here is how Dired indicates that file names are clickable:</source>
          <target state="translated">为了表示可点击性，请在链接的文本中添加 &lt;code&gt;mouse-face&lt;/code&gt; text属性。那么当鼠标移到该链接时，Emacs将突出显示该链接。另外，您应该使用 &lt;code&gt;help-echo&lt;/code&gt; text属性定义工具提示或回显区域消息。请参阅&lt;a href=&quot;special-properties#Special-Properties&quot;&gt;特殊属性&lt;/a&gt;。例如，以下是Dired指示文件名可单击的方式：</target>
        </trans-unit>
        <trans-unit id="3a1dbfb3a0e34748a91329934ecf56b22e833a24" translate="yes" xml:space="preserve">
          <source>To inspect or modify Edebug&amp;rsquo;s instrumentation before it is used, set this variable to a function which takes one argument, an instrumented top-level form, and returns either the same or a replacement form, which Edebug will then use as the final result of instrumentation.</source>
          <target state="translated">要在使用前检查或修改Edebug的检测，请将​​此变量设置为一个函数，该函数接受一个参数，即检测的顶层形式，并返回相同或替换的形式，然后Edebug将其用作检测的最终结果。 。</target>
        </trans-unit>
        <trans-unit id="171f3d4271e887f0b4d6bc8015659001762bbfdf" translate="yes" xml:space="preserve">
          <source>To investigate a problem that happens in the middle of a program, one useful technique is to enter the debugger whenever a certain function is called. You can do this to the function in which the problem occurs, and then step through the function, or you can do this to a function called shortly before the problem, step quickly over the call to that function, and then step through its caller.</source>
          <target state="translated">要调查一个发生在程序中间的问题,一个有用的技术是每当调用某个函数时就进入调试器。你可以对发生问题的函数这样做,然后步入该函数,也可以对问题发生前不久调用的函数这样做,快速步入对该函数的调用,然后步入其调用者。</target>
        </trans-unit>
        <trans-unit id="f9c5055a6610fc9a3afc3c681376560eea1c90af" translate="yes" xml:space="preserve">
          <source>To invoke a recursive editing level, call the function &lt;code&gt;recursive-edit&lt;/code&gt;. This function contains the command loop; it also contains a call to &lt;code&gt;catch&lt;/code&gt; with tag &lt;code&gt;exit&lt;/code&gt;, which makes it possible to exit the recursive editing level by throwing to &lt;code&gt;exit&lt;/code&gt; (see &lt;a href=&quot;catch-and-throw#Catch-and-Throw&quot;&gt;Catch and Throw&lt;/a&gt;). If you throw a value other than &lt;code&gt;t&lt;/code&gt;, then &lt;code&gt;recursive-edit&lt;/code&gt; returns normally to the function that called it. The command</source>
          <target state="translated">要调用递归编辑级别，请调用函数 &lt;code&gt;recursive-edit&lt;/code&gt; 。该函数包含命令循环；它还包含一个呼叫 &lt;code&gt;catch&lt;/code&gt; 与标签 &lt;code&gt;exit&lt;/code&gt; ，这使得它可以通过抛出退出递归编辑水平 &lt;code&gt;exit&lt;/code&gt; （见&lt;a href=&quot;catch-and-throw#Catch-and-Throw&quot;&gt;捕捉和投掷&lt;/a&gt;）。如果抛出 &lt;code&gt;t&lt;/code&gt; 以外的其他值，则 &lt;code&gt;recursive-edit&lt;/code&gt; 通常会返回到调用它的函数。命令</target>
        </trans-unit>
        <trans-unit id="57679f9ec522a25d4f3a4eff83a4c6bab4a13c8e" translate="yes" xml:space="preserve">
          <source>To make</source>
          <target state="translated">为了使</target>
        </trans-unit>
        <trans-unit id="b28b8c078d49d61565091491fb61c804021a5b9f" translate="yes" xml:space="preserve">
          <source>To make Edebug properly instrument expressions that call macros, some extra care is needed. This subsection explains the details.</source>
          <target state="translated">为了使Edebug正确地工具调用宏的表达式,需要一些额外的注意。本小节解释了细节。</target>
        </trans-unit>
        <trans-unit id="e110967bcc187afa87061918c1137868844ccda5" translate="yes" xml:space="preserve">
          <source>To make a buffer-local binding for an Emacs customization variable, use &lt;code&gt;make-local-variable&lt;/code&gt; in the major mode command, not &lt;code&gt;make-variable-buffer-local&lt;/code&gt;. The latter function would make the variable local to every buffer in which it is subsequently set, which would affect buffers that do not use this mode. It is undesirable for a mode to have such global effects. See &lt;a href=&quot;buffer_002dlocal-variables#Buffer_002dLocal-Variables&quot;&gt;Buffer-Local Variables&lt;/a&gt;.</source>
          <target state="translated">要为Emacs自定义变量 &lt;code&gt;make-local-variable&lt;/code&gt; 缓冲区绑定，请在主模式命令中使用make-local-variable，而不是 &lt;code&gt;make-variable-buffer-local&lt;/code&gt; 。后一个函数将使变量在随后设置该变量的每个缓冲区中都是局部的，这将影响不使用此模式的缓冲区。模式具有这种全局影响是不希望的。请参阅&lt;a href=&quot;buffer_002dlocal-variables#Buffer_002dLocal-Variables&quot;&gt;缓冲区局部变量&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="54b4d66a91658eb38ae8d3816f21e38f37d89312" translate="yes" xml:space="preserve">
          <source>To make a multibuffer change group, call &lt;code&gt;prepare-change-group&lt;/code&gt; once for each buffer you want to cover, then use &lt;code&gt;nconc&lt;/code&gt; to combine the returned values, like this:</source>
          <target state="translated">要创建多缓冲区更改组，请为要覆盖的每个缓冲区调用一次 &lt;code&gt;prepare-change-group&lt;/code&gt; ，然后使用 &lt;code&gt;nconc&lt;/code&gt; 组合返回的值，如下所示：</target>
        </trans-unit>
        <trans-unit id="42dd4afbb0436d09e3eed3fd88ecae2967293889" translate="yes" xml:space="preserve">
          <source>To make just a few elements optional, followed by non-optional elements, use &lt;code&gt;[&amp;amp;optional &lt;var&gt;specs&lt;/var&gt;&amp;hellip;]&lt;/code&gt;. To specify that several elements must all match or none, use &lt;code&gt;&amp;amp;optional
[&lt;var&gt;specs&lt;/var&gt;&amp;hellip;]&lt;/code&gt;. See the &lt;code&gt;defun&lt;/code&gt; example.</source>
          <target state="translated">要仅使一些元素成为可选元素，然后使它们成为非可选元素，请使用 &lt;code&gt;[&amp;amp;optional &lt;var&gt;specs&lt;/var&gt;&amp;hellip;]&lt;/code&gt; 。要指定几个元素必须全部匹配或不匹配，请使用 &lt;code&gt;&amp;amp;optional [&lt;var&gt;specs&lt;/var&gt;&amp;hellip;]&lt;/code&gt; 。请参阅 &lt;code&gt;defun&lt;/code&gt; 示例。</target>
        </trans-unit>
        <trans-unit id="5d823ee2f72dacdbb4f2dba2de9e92b6f561495a" translate="yes" xml:space="preserve">
          <source>To make the filter force the process buffer to be visible whenever new text arrives, you could insert a line like the following just before the &lt;code&gt;with-current-buffer&lt;/code&gt; construct:</source>
          <target state="translated">为了使过滤器在新文本到达时强制进程缓冲区可见，您可以在 &lt;code&gt;with-current-buffer&lt;/code&gt; 构造之前插入如下一行：</target>
        </trans-unit>
        <trans-unit id="cde27adc42d5ce2a917b7e5753117c5b2eb6d70d" translate="yes" xml:space="preserve">
          <source>To make the link clickable, bind</source>
          <target state="translated">要使链接可以点击,请绑定</target>
        </trans-unit>
        <trans-unit id="eebdd90143c4ee3d9ff5ef4a53378de662d0d3f1" translate="yes" xml:space="preserve">
          <source>To model this agnosticism, the &lt;code&gt;jsonrpc&lt;/code&gt; library uses objects of a &lt;code&gt;jsonrpc-connection&lt;/code&gt; class, which represent a connection to a remote JSON endpoint (for details on Emacs&amp;rsquo;s object system, see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/eieio/index.html#Top&quot;&gt;EIEIO&lt;/a&gt; in</source>
          <target state="translated">为了模拟这种不可知论的 &lt;code&gt;jsonrpc&lt;/code&gt; 一个图书馆的使用对象 &lt;code&gt;jsonrpc-connection&lt;/code&gt; 类，它代表了一个远程端点JSON（Emacs中的目标系统上的连接的详细信息，请参阅&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/eieio/index.html#Top&quot;&gt;EIEIO&lt;/a&gt;在</target>
        </trans-unit>
        <trans-unit id="69ee4e3a63fd1b81d7b8fceb19ec1049f1405ece" translate="yes" xml:space="preserve">
          <source>To move forward over all comments and whitespace following point, use &lt;code&gt;(forward-comment (buffer-size))&lt;/code&gt;. &lt;code&gt;(buffer-size)&lt;/code&gt; is a good argument to use, because the number of comments in the buffer cannot exceed that many.</source>
          <target state="translated">要向前移动所有注释和空格，请使用 &lt;code&gt;(forward-comment (buffer-size))&lt;/code&gt; 。 &lt;code&gt;(buffer-size)&lt;/code&gt; 是一个很好的参数，因为缓冲区中的注释数量不能超过该数量。</target>
        </trans-unit>
        <trans-unit id="3a64c88e283e2c164b1c2e9cd45b6b01b9a7ce69" translate="yes" xml:space="preserve">
          <source>To move point to the beginning of the buffer, write:</source>
          <target state="translated">要将点移动到缓冲区的开始,写。</target>
        </trans-unit>
        <trans-unit id="0a7d809abf99f50235c3ecafab33d06be35faaf2" translate="yes" xml:space="preserve">
          <source>To operate temporarily on another buffer, put the &lt;code&gt;set-buffer&lt;/code&gt; within a &lt;code&gt;save-current-buffer&lt;/code&gt; form. Here, as an example, is a simplified version of the command &lt;code&gt;append-to-buffer&lt;/code&gt;:</source>
          <target state="translated">要在另一个缓冲区临时工作，把 &lt;code&gt;set-buffer&lt;/code&gt; 一个内 &lt;code&gt;save-current-buffer&lt;/code&gt; 形式。例如，这里是命令 &lt;code&gt;append-to-buffer&lt;/code&gt; 的简化版本：</target>
        </trans-unit>
        <trans-unit id="840d374dedfec04c1cd90fbe525bf0978f4444a0" translate="yes" xml:space="preserve">
          <source>To perform the actual binding:</source>
          <target state="translated">要进行实际的绑定。</target>
        </trans-unit>
        <trans-unit id="644d37c71966a7999a7bcd75d495874fdf040fc1" translate="yes" xml:space="preserve">
          <source>To play sound using Emacs, use the function &lt;code&gt;play-sound&lt;/code&gt;. Only certain systems are supported; if you call &lt;code&gt;play-sound&lt;/code&gt; on a system which cannot really do the job, it gives an error.</source>
          <target state="translated">要使用Emacs播放声音，请使用功能 &lt;code&gt;play-sound&lt;/code&gt; 。仅支持某些系统；如果您在无法真正完成工作的系统上调用 &lt;code&gt;play-sound&lt;/code&gt; ，则会出现错误。</target>
        </trans-unit>
        <trans-unit id="fd6aefb60a528939aa2c87de8c1c8c9781ea9512" translate="yes" xml:space="preserve">
          <source>To position the frame above or below a specific other frame use the function &lt;code&gt;frame-restack&lt;/code&gt; (see &lt;a href=&quot;raising-and-lowering#Raising-and-Lowering&quot;&gt;Raising and Lowering&lt;/a&gt;).</source>
          <target state="translated">要将框架放置在其他特定框架的上方或下方，请使用 &lt;code&gt;frame-restack&lt;/code&gt; 功能（请参阅&amp;ldquo;&lt;a href=&quot;raising-and-lowering#Raising-and-Lowering&quot;&gt;升高和降低&amp;rdquo;&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="438bfd54a1d9648a75ddbf6e0255651657c4562b" translate="yes" xml:space="preserve">
          <source>To present a consistent environment (see &lt;a href=&quot;intro-eval#Intro-Eval&quot;&gt;Intro Eval&lt;/a&gt;) to &lt;var&gt;body-forms&lt;/var&gt; (thus avoiding an evaluation error on match), if any of the sub-patterns let-binds a set of symbols, they &lt;em&gt;must&lt;/em&gt; all bind the same set of symbols.</source>
          <target state="translated">为了给 &lt;var&gt;body-forms&lt;/var&gt; 呈现一致的环境（请参见&lt;a href=&quot;intro-eval#Intro-Eval&quot;&gt;Intro Eval&lt;/a&gt;）（从而避免匹配时评估错误），如果任何子模式将一组符号绑定在一起，则它们都&lt;em&gt;必须&lt;/em&gt;绑定同一组符号。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a13738b26455ab39383ce4949493d6c3c45ea8a7" translate="yes" xml:space="preserve">
          <source>To prevent conflicts among different libraries running in the same Emacs, each Lisp program that uses &lt;code&gt;make-temp-file&lt;/code&gt; should have its own &lt;var&gt;prefix&lt;/var&gt;. The number added to the end of &lt;var&gt;prefix&lt;/var&gt; distinguishes between the same application running in different Emacs jobs. Additional added characters permit a large number of distinct names even in one Emacs job.</source>
          <target state="translated">为了防止在同一Emacs中运行的不同库之间发生冲突，每个使用 &lt;code&gt;make-temp-file&lt;/code&gt; 的Lisp程序都应具有自己的 &lt;var&gt;prefix&lt;/var&gt; 。 &lt;var&gt;prefix&lt;/var&gt; 末尾添加的数字区分在不同Emacs作业中运行的同一应用程序。即使在一项Emacs作业中，附加的附加字符也允许使用大量不同的名称。</target>
        </trans-unit>
        <trans-unit id="a8aa3b83dc8758c1842c778a847e228296a9a60d" translate="yes" xml:space="preserve">
          <source>To prevent the frame from disappearing completely from view, the variable &lt;code&gt;frame-alpha-lower-limit&lt;/code&gt; defines a lower opacity limit. If the value of the frame parameter is less than the value of this variable, Emacs uses the latter. By default, &lt;code&gt;frame-alpha-lower-limit&lt;/code&gt; is 20.</source>
          <target state="translated">为防止框架从视图中完全消失，变量 &lt;code&gt;frame-alpha-lower-limit&lt;/code&gt; 定义了较低的不透明度极限。如果frame参数的值小于此变量的值，则Emacs使用后者。默认情况下， &lt;code&gt;frame-alpha-lower-limit&lt;/code&gt; 为20。</target>
        </trans-unit>
        <trans-unit id="77cb35a44c69e8ef332d334e39083a29ea134122" translate="yes" xml:space="preserve">
          <source>To process input events in addition to checking whether the user wants to quit, use the following function, which is available since Emacs 27.1.</source>
          <target state="translated">要处理输入事件,除了检查用户是否要退出外,还可以使用以下函数,该函数从Emacs 27.1开始可用。</target>
        </trans-unit>
        <trans-unit id="a3226813c7f19af25b5f4262861b3e27ad0d9e76" translate="yes" xml:space="preserve">
          <source>To produce a window configuration displaying multiple buffers (or different views of one and the same buffer) in one and the same display cycle, Lisp programmers will unavoidably have to write their own action functions. A few tricks listed below might help in this regard.</source>
          <target state="translated">为了在同一个显示周期内生成一个显示多个缓冲区(或同一缓冲区的不同视图)的窗口配置,Lisp程序员将不可避免地不得不编写自己的动作函数。下面列举的几个技巧可能会在这方面有所帮助。</target>
        </trans-unit>
        <trans-unit id="c48bec204f9101905ceec67fe17a3a4024809876" translate="yes" xml:space="preserve">
          <source>To profile Emacs at the level of its C code, you can build it using the</source>
          <target state="translated">要在Emacs的C代码层面上对其进行描述,你可以使用</target>
        </trans-unit>
        <trans-unit id="f61369d2bd521bd23a19d33542ecfd86cf3a53cd" translate="yes" xml:space="preserve">
          <source>To put different properties on various parts of a string, you can construct each part with &lt;code&gt;propertize&lt;/code&gt; and then combine them with &lt;code&gt;concat&lt;/code&gt;:</source>
          <target state="translated">为了把不同性质的字符串的各个部分，你可以构造与各部分 &lt;code&gt;propertize&lt;/code&gt; ，然后用它们组合起来 &lt;code&gt;concat&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="e6208b4ca41ece824897f98f3082d113ccbb91c6" translate="yes" xml:space="preserve">
          <source>To read a password to pass to another program, you can use the function &lt;code&gt;read-passwd&lt;/code&gt;.</source>
          <target state="translated">要读取密码以传递给另一个程序，可以使用 &lt;code&gt;read-passwd&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="8cb9f4387c5f024af6136108f7794122d41c3c1f" translate="yes" xml:space="preserve">
          <source>To read user input of color names with completion, use &lt;code&gt;read-color&lt;/code&gt; (see &lt;a href=&quot;high_002dlevel-completion#High_002dLevel-Completion&quot;&gt;read-color&lt;/a&gt;).</source>
          <target state="translated">要读取带有完成的颜色名称的用户输入，请使用 &lt;code&gt;read-color&lt;/code&gt; （请参阅&lt;a href=&quot;high_002dlevel-completion#High_002dLevel-Completion&quot;&gt;read-color&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="212468440ed19612efe97b9dd5daacce36a0b01d" translate="yes" xml:space="preserve">
          <source>To record a matched substring for future reference with &amp;lsquo;</source>
          <target state="translated">记录匹配的子字符串以供将来使用'</target>
        </trans-unit>
        <trans-unit id="0bdd9cdabe498c9fa805f2b32f8896d98542b23f" translate="yes" xml:space="preserve">
          <source>To remove all text properties from certain text, use &lt;code&gt;set-text-properties&lt;/code&gt; and specify &lt;code&gt;nil&lt;/code&gt; for the new property list.</source>
          <target state="translated">要从某些文本中删除所有文本属性，请使用 &lt;code&gt;set-text-properties&lt;/code&gt; 并为新的属性列表指定 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="262aee16099c1d6f975de082cdad4bf0207b4131" translate="yes" xml:space="preserve">
          <source>To remove instrumentation from a definition, simply re-evaluate its definition in a way that does not instrument. There are two ways of evaluating forms that never instrument them: from a file with &lt;code&gt;load&lt;/code&gt;, and from the minibuffer with &lt;code&gt;eval-expression&lt;/code&gt; (</source>
          <target state="translated">要从定义中删除工具，只需以不进行工具的方式重新评估其定义。有两种评估形式的工具永远不会对它们进行检测：从带有 &lt;code&gt;load&lt;/code&gt; 的文件和从带有 &lt;code&gt;eval-expression&lt;/code&gt; （</target>
        </trans-unit>
        <trans-unit id="518b3a6ff4b1dd998472452e5862d09ea2071bec" translate="yes" xml:space="preserve">
          <source>To remove the notification and its icon from the taskbar, use the following function:</source>
          <target state="translated">要从任务栏中删除通知及其图标,请使用以下功能。</target>
        </trans-unit>
        <trans-unit id="986e7ba4dae55e936ed49639ef1308a69784776e" translate="yes" xml:space="preserve">
          <source>To repeat only a few elements, use &lt;code&gt;[&amp;amp;rest &lt;var&gt;specs&lt;/var&gt;&amp;hellip;]&lt;/code&gt;. To specify several elements that must all match on every repetition, use &lt;code&gt;&amp;amp;rest [&lt;var&gt;specs&lt;/var&gt;&amp;hellip;]&lt;/code&gt;.</source>
          <target state="translated">要仅重复几个元素，请使用 &lt;code&gt;[&amp;amp;rest &lt;var&gt;specs&lt;/var&gt;&amp;hellip;]&lt;/code&gt; 。要指定每次重复都必须匹配的几个元素，请使用 &lt;code&gt;&amp;amp;rest [&lt;var&gt;specs&lt;/var&gt;&amp;hellip;]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f37d0de2b374a7d3098277c92a2faad3f25e2d4c" translate="yes" xml:space="preserve">
          <source>To replace a buffer in all the windows that display it, use &lt;code&gt;replace-buffer-in-windows&lt;/code&gt;, See &lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;Buffers and Windows&lt;/a&gt;.</source>
          <target state="translated">要在所有显示缓冲区的窗口中 &lt;code&gt;replace-buffer-in-windows&lt;/code&gt; ，请使用replace-buffer-in-windows，请参见&amp;ldquo;&lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;缓冲区和Windows&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b71ced9d558b0dec657ab6166aa5589e85ee2ed8" translate="yes" xml:space="preserve">
          <source>To represent shared or circular structures within a complex of Lisp objects, you can use the reader constructs &amp;lsquo;</source>
          <target state="translated">要表示复杂的Lisp对象中的共享或圆形结构，可以使用阅读器构造'</target>
        </trans-unit>
        <trans-unit id="9ccbc7e730e6c305ddd9fa94c9a50e27baae42bd" translate="yes" xml:space="preserve">
          <source>To require the presence of a feature, call &lt;code&gt;require&lt;/code&gt; with the feature name as argument. &lt;code&gt;require&lt;/code&gt; looks in the global variable &lt;code&gt;features&lt;/code&gt; to see whether the desired feature has been provided already. If not, it loads the feature from the appropriate file. This file should call &lt;code&gt;provide&lt;/code&gt; at the top level to add the feature to &lt;code&gt;features&lt;/code&gt;; if it fails to do so, &lt;code&gt;require&lt;/code&gt; signals an error.</source>
          <target state="translated">要要求功能存在，请以功能名称作为参数调用 &lt;code&gt;require&lt;/code&gt; 。 &lt;code&gt;require&lt;/code&gt; 在全局变量 &lt;code&gt;features&lt;/code&gt; 查找，以查看是否已经提供了所需的功能。如果不是，它将从适当的文件中加载功能。这个文件应该在最顶层调用 &lt;code&gt;provide&lt;/code&gt; 以将功能添加到 &lt;code&gt;features&lt;/code&gt; ;如果这样做失败，则 &lt;code&gt;require&lt;/code&gt; 信号会出错。</target>
        </trans-unit>
        <trans-unit id="b49c5ac92d06c25038dd0041f112cb2235ef45cb" translate="yes" xml:space="preserve">
          <source>To resize or move an undecorated child frame with the mouse, special frame parameters (see &lt;a href=&quot;mouse-dragging-parameters#Mouse-Dragging-Parameters&quot;&gt;Mouse Dragging Parameters&lt;/a&gt;) have to be used. The internal border of a child frame, if present, can be used to resize the frame with the mouse, provided that frame has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;drag-internal-border&lt;/code&gt; parameter. If set, the &lt;code&gt;snap-width&lt;/code&gt; parameter indicates the number of pixels where the frame &lt;em&gt;snaps&lt;/em&gt; at the respective edge or corner of its parent frame.</source>
          <target state="translated">要使用鼠标调整大小或移动未修饰的子框架，必须使用特殊的框架参数（请参阅&amp;ldquo;&lt;a href=&quot;mouse-dragging-parameters#Mouse-Dragging-Parameters&quot;&gt;鼠标拖动参数&amp;rdquo;&lt;/a&gt;）。一个子框架的内部边界，如果存在的话，可以用于调整用鼠标帧，提供该帧具有非 &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;drag-internal-border&lt;/code&gt; 参数。如果设置，则 &lt;code&gt;snap-width&lt;/code&gt; 参数指示帧在其父帧的相应边缘或拐角处&lt;em&gt;捕捉&lt;/em&gt;的像素数。</target>
        </trans-unit>
        <trans-unit id="18a7f6aed1914a5b6307ab63f1dc2fc9de165b16" translate="yes" xml:space="preserve">
          <source>To restrict which files can trigger the evaluation, include a directory or an extension or both in &lt;var&gt;library&lt;/var&gt;. Only a file whose absolute true name (i.e., the name with all symbolic links chased out) matches all the given name components will match. In the following example,</source>
          <target state="translated">要限制哪些文件可以触发评估，请在 &lt;var&gt;library&lt;/var&gt; 中包含目录或扩展名或两者。只有其绝对真实名称（即，带有所有符号链接的名称被删除）与所有给定名称组成部分匹配的文件才会匹配。在以下示例中，</target>
        </trans-unit>
        <trans-unit id="e5efed6dcee2953bf863d21107d285d0ef594649" translate="yes" xml:space="preserve">
          <source>To search for a user-specific configuration file, See &lt;a href=&quot;standard-file-names#Standard-File-Names&quot;&gt;Standard File Names&lt;/a&gt;, for the &lt;code&gt;locate-user-emacs-file&lt;/code&gt; function.</source>
          <target state="translated">要搜索特定于用户的配置文件，请参阅&lt;a href=&quot;standard-file-names#Standard-File-Names&quot;&gt;标准文件名&lt;/a&gt;中的 &lt;code&gt;locate-user-emacs-file&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="5cd663ab539881f4feaf727f97346e7999fc925c" translate="yes" xml:space="preserve">
          <source>To set up the link so that it obeys &lt;code&gt;mouse-1-click-follows-link&lt;/code&gt;, you must either (1) apply a &lt;code&gt;follow-link&lt;/code&gt; text or overlay property to the link text, or (2) bind the &lt;code&gt;follow-link&lt;/code&gt; event to a keymap (which can be a major mode keymap or a local keymap specified via the &lt;code&gt;keymap&lt;/code&gt; text property). The value of the &lt;code&gt;follow-link&lt;/code&gt; property, or the binding for the &lt;code&gt;follow-link&lt;/code&gt; event, acts as a condition for the link action. This condition tells Emacs two things: the circumstances under which a</source>
          <target state="translated">要设置链接使其遵循 &lt;code&gt;mouse-1-click-follows-link&lt;/code&gt; ，您必须（1）将 &lt;code&gt;follow-link&lt;/code&gt; 文本或overlay属性应用于链接文本，或（2）将 &lt;code&gt;follow-link&lt;/code&gt; 事件绑定到键映射（可以是主要模式键映射，也可以是通过 &lt;code&gt;keymap&lt;/code&gt; text属性指定的本地键映射）。 &lt;code&gt;follow-link&lt;/code&gt; 属性的值或 &lt;code&gt;follow-link&lt;/code&gt; 事件的绑定充当链接操作的条件。这种情况告诉Emacs两件事：</target>
        </trans-unit>
        <trans-unit id="a806bd89d05e5ed99e180df488566decb6e80bdf" translate="yes" xml:space="preserve">
          <source>To specify a preference for showing an arbitrary buffer, users should customize &lt;code&gt;display-buffer-base-action&lt;/code&gt;. An example of how users who prefer working with multiple frames would do that was given in the previous subsection. &lt;code&gt;display-buffer-alist&lt;/code&gt; should be reserved for displaying specific buffers in a specific way.</source>
          <target state="translated">要指定显示任意缓冲区的首选项，用户应自定义 &lt;code&gt;display-buffer-base-action&lt;/code&gt; 。上一小节提供了一个示例，说明喜欢使用多个框架的用户将如何进行操作。 &lt;code&gt;display-buffer-alist&lt;/code&gt; 应该保留用于以特定方式显示特定缓冲区。</target>
        </trans-unit>
        <trans-unit id="31661002e5719518c1266de217cfbbc4e81acd41" translate="yes" xml:space="preserve">
          <source>To specify a relative time as a string, use numbers followed by units. For example:</source>
          <target state="translated">要将相对时间指定为一个字符串,请使用数字和单位。例如:</target>
        </trans-unit>
        <trans-unit id="8e4cde9036cb2179b40c67210e0c1af5d8a06068" translate="yes" xml:space="preserve">
          <source>To specify optional arguments that may be omitted when a function is called, simply include the keyword &lt;code&gt;&amp;amp;optional&lt;/code&gt; before the optional arguments. To specify a list of zero or more extra arguments, include the keyword &lt;code&gt;&amp;amp;rest&lt;/code&gt; before one final argument.</source>
          <target state="translated">要指定调用函数时可能会省略的可选参数，只需在可选参数之前添加关键字 &lt;code&gt;&amp;amp;optional&lt;/code&gt; 。要指定零个或多个其他参数的列表，请在一个最后一个参数之前添加关键字 &lt;code&gt;&amp;amp;rest&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2bbf15b6662b15fa335d60b1b3abc35346beaeb7" translate="yes" xml:space="preserve">
          <source>To sum up, it&amp;rsquo;s best to avoid side-effecting references to &lt;var&gt;symbol&lt;/var&gt; patterns entirely, not only in &lt;var&gt;boolean-expression&lt;/var&gt; (in &lt;code&gt;guard&lt;/code&gt;), but also in &lt;var&gt;expr&lt;/var&gt; (in &lt;code&gt;let&lt;/code&gt;) and &lt;var&gt;function&lt;/var&gt; (in &lt;code&gt;pred&lt;/code&gt; and &lt;code&gt;app&lt;/code&gt;).</source>
          <target state="translated">总结起来，最好是完全避免对 &lt;var&gt;symbol&lt;/var&gt; 模式的副作用，这不仅在 &lt;var&gt;boolean-expression&lt;/var&gt; （在 &lt;code&gt;guard&lt;/code&gt; 中），而且在 &lt;var&gt;expr&lt;/var&gt; （在 &lt;code&gt;let&lt;/code&gt; 中）和 &lt;var&gt;function&lt;/var&gt; （在 &lt;code&gt;pred&lt;/code&gt; 和 &lt;code&gt;app&lt;/code&gt; 中）也是如此。</target>
        </trans-unit>
        <trans-unit id="eaa50c326ee36f629d6843a550096a8a4fb28140" translate="yes" xml:space="preserve">
          <source>To summarize, &lt;code&gt;load&lt;/code&gt; normally first tries the suffixes in the value of &lt;code&gt;(get-load-suffixes)&lt;/code&gt; and then those in &lt;code&gt;load-file-rep-suffixes&lt;/code&gt;. If &lt;var&gt;nosuffix&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it skips the former group, and if &lt;var&gt;must-suffix&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it skips the latter group.</source>
          <target state="translated">总而言之， &lt;code&gt;load&lt;/code&gt; 通常首先尝试使用 &lt;code&gt;(get-load-suffixes)&lt;/code&gt; 值的后缀，然后再尝试使用 &lt;code&gt;load-file-rep-suffixes&lt;/code&gt; 的后缀。如果 &lt;var&gt;nosuffix&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则跳过前一组，如果 &lt;var&gt;must-suffix&lt;/var&gt; 为non - &lt;code&gt;nil&lt;/code&gt; ，则跳过后一组。</target>
        </trans-unit>
        <trans-unit id="22c4f6949c89bada70cd6b6e7099ad9bd8af7b67" translate="yes" xml:space="preserve">
          <source>To summarize, when you click a button and then press it again right away, Emacs generates a down event and a click event for the first click, a double-down event when you press the button again, and finally either a double-click or a double-drag event.</source>
          <target state="translated">总结一下,当你点击一个按钮,然后马上再按一次,Emacs会产生一个向下事件和第一次点击的点击事件,当你再次按下按钮时,会产生一个双向下事件,最后不是双击就是双拖事件。</target>
        </trans-unit>
        <trans-unit id="0259b7bf163bae7c35ad46edb62016a8f2722fab" translate="yes" xml:space="preserve">
          <source>To support programs with &amp;lsquo;</source>
          <target state="translated">为了支持带有&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="bb43ee21f37f25de0e7c358b02b65048d8082204" translate="yes" xml:space="preserve">
          <source>To support this multitude of characters and scripts, Emacs closely follows the &lt;em&gt;Unicode Standard&lt;/em&gt;. The Unicode Standard assigns a unique number, called a &lt;em&gt;codepoint&lt;/em&gt;, to each and every character. The range of codepoints defined by Unicode, or the Unicode &lt;em&gt;codespace&lt;/em&gt;, is &lt;code&gt;0..#x10FFFF&lt;/code&gt; (in hexadecimal notation), inclusive. Emacs extends this range with codepoints in the range &lt;code&gt;#x110000..#x3FFFFF&lt;/code&gt;, which it uses for representing characters that are not unified with Unicode and &lt;em&gt;raw 8-bit bytes&lt;/em&gt; that cannot be interpreted as characters. Thus, a character codepoint in Emacs is a 22-bit integer.</source>
          <target state="translated">为了支持众多字符和脚本，Emacs严格遵循&lt;em&gt;Unicode标准&lt;/em&gt;。Unicode标准为每个字符分配一个唯一的数字，称为&lt;em&gt;代码点&lt;/em&gt;。的范围内的Unicode，或Unicode的定义码点的&lt;em&gt;码域&lt;/em&gt;，是 &lt;code&gt;0..#x10FFFF&lt;/code&gt; （以十六进制表示法），包括端值。Emacs通过在 &lt;code&gt;#x110000..#x3FFFFF&lt;/code&gt; 范围内的代码点扩展了此范围，它用于表示未与Unicode统一的字符以及无法解释为字符的&lt;em&gt;原始8位字节&lt;/em&gt;。因此，Emacs中的字符代码点是22位整数。</target>
        </trans-unit>
        <trans-unit id="16458f1bebc24520bce10ea3f0c1902c0ee010b9" translate="yes" xml:space="preserve">
          <source>To test for the availability of a given network feature, use &lt;code&gt;featurep&lt;/code&gt; like this:</source>
          <target state="translated">要测试给定网络功能的可用性，请使用 &lt;code&gt;featurep&lt;/code&gt; 功能部件：</target>
        </trans-unit>
        <trans-unit id="75c4c410d0f0be17ecc87dce7c1e6fb544adff14" translate="yes" xml:space="preserve">
          <source>To test for the availability of a given network option, use &lt;code&gt;featurep&lt;/code&gt; like this:</source>
          <target state="translated">为了测试针对特定的网络选项的可用性，使用 &lt;code&gt;featurep&lt;/code&gt; 这样的：</target>
        </trans-unit>
        <trans-unit id="79622a3cda2b3ecf6d318ecb9e2c46b512eaa7c4" translate="yes" xml:space="preserve">
          <source>To test numbers for numerical equality, you should normally use &lt;code&gt;=&lt;/code&gt; instead of non-numeric comparison predicates like &lt;code&gt;eq&lt;/code&gt;, &lt;code&gt;eql&lt;/code&gt; and &lt;code&gt;equal&lt;/code&gt;. Distinct floating-point and large integer objects can be numerically equal. If you use &lt;code&gt;eq&lt;/code&gt; to compare them, you test whether they are the same &lt;em&gt;object&lt;/em&gt;; if you use &lt;code&gt;eql&lt;/code&gt; or &lt;code&gt;equal&lt;/code&gt;, you test whether their values are &lt;em&gt;indistinguishable&lt;/em&gt;. In contrast, &lt;code&gt;=&lt;/code&gt; uses numeric comparison, and sometimes returns &lt;code&gt;t&lt;/code&gt; when a non-numeric comparison would return &lt;code&gt;nil&lt;/code&gt; and vice versa. See &lt;a href=&quot;float-basics#Float-Basics&quot;&gt;Float Basics&lt;/a&gt;.</source>
          <target state="translated">要测试数字的数字相等性，通常应使用 &lt;code&gt;=&lt;/code&gt; 而不是 &lt;code&gt;eq&lt;/code&gt; ， &lt;code&gt;eql&lt;/code&gt; 和 &lt;code&gt;equal&lt;/code&gt; 等非数字比较谓词。不同的浮点数和大整数对象可以在数值上相等。如果使用 &lt;code&gt;eq&lt;/code&gt; 比较它们，则测试它们是否是同一&lt;em&gt;对象&lt;/em&gt;；如果使用 &lt;code&gt;eql&lt;/code&gt; 或 &lt;code&gt;equal&lt;/code&gt; ，则测试它们的值是否&lt;em&gt;不可区分&lt;/em&gt;。相反， &lt;code&gt;=&lt;/code&gt; 使用数字比较，当非数字比较返回 &lt;code&gt;nil&lt;/code&gt; 时，有时返回 &lt;code&gt;t&lt;/code&gt; ，反之亦然。请参阅&lt;a href=&quot;float-basics#Float-Basics&quot;&gt;浮动基础知识&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="58c9724eaae0dddeafa1103e3839ab337720bf8a" translate="yes" xml:space="preserve">
          <source>To test the signal handler, you can make Emacs send a signal to itself:</source>
          <target state="translated">为了测试信号处理程序,你可以让Emacs向自己发送一个信号。</target>
        </trans-unit>
        <trans-unit id="d541fd2770557362118e5f6c07a70dded650d464" translate="yes" xml:space="preserve">
          <source>To undefine a function name, use &lt;code&gt;fmakunbound&lt;/code&gt;. See &lt;a href=&quot;function-cells#Function-Cells&quot;&gt;Function Cells&lt;/a&gt;.</source>
          <target state="translated">要取消定义函数名，请使用 &lt;code&gt;fmakunbound&lt;/code&gt; 。请参见&lt;a href=&quot;function-cells#Function-Cells&quot;&gt;功能单元&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="da06ea0a734ee2c2a7864dbf4ddd97a92368e782" translate="yes" xml:space="preserve">
          <source>To understand how &lt;code&gt;sort-subr&lt;/code&gt; works, consider the whole accessible portion of the buffer as being divided into disjoint pieces called &lt;em&gt;sort records&lt;/em&gt;. The records may or may not be contiguous, but they must not overlap. A portion of each sort record (perhaps all of it) is designated as the sort key. Sorting rearranges the records in order by their sort keys.</source>
          <target state="translated">要了解 &lt;code&gt;sort-subr&lt;/code&gt; 的工作原理，请考虑将缓冲区的整个可访问部分划分为多个不相连的部分，称为&lt;em&gt;sort records&lt;/em&gt;。记录可以是连续的也可以不是连续的，但是它们不能重叠。每个排序记录的一部分（也许全部）都指定为排序键。排序按记录的排序键重新排列记录。</target>
        </trans-unit>
        <trans-unit id="2369e9a9d2001c0a7353eb74acfb8413016b4bf3" translate="yes" xml:space="preserve">
          <source>To understand how symbols are created in GNU Emacs Lisp, you must know how Lisp reads them. Lisp must ensure that it finds the same symbol every time it reads the same set of characters. Failure to do so would cause complete confusion.</source>
          <target state="translated">要了解GNU Emacs Lisp中如何创建符号,你必须知道Lisp是如何读取它们的。Lisp必须确保每次读取同一组字符时都能找到相同的符号。如果做不到这一点,就会造成完全的混乱。</target>
        </trans-unit>
        <trans-unit id="6e55e6461cd675fc80b5fee01f1ae446554533bf" translate="yes" xml:space="preserve">
          <source>To understand how various functions work on integers, especially the bitwise operators (see &lt;a href=&quot;bitwise-operations#Bitwise-Operations&quot;&gt;Bitwise Operations&lt;/a&gt;), it is often helpful to view the numbers in their binary form.</source>
          <target state="translated">要了解各种函数如何处理整数，尤其是按位运算符（请参阅&lt;a href=&quot;bitwise-operations#Bitwise-Operations&quot;&gt;按&lt;/a&gt;位运算符），通常以二进制形式查看数字会很有帮助。</target>
        </trans-unit>
        <trans-unit id="fc079681c4b65e6d90dd1e389536549bc9a768a7" translate="yes" xml:space="preserve">
          <source>To undo the remapping of a command, remap it to &lt;code&gt;nil&lt;/code&gt;; e.g.,</source>
          <target state="translated">要撤消命令的重新映射，请将其重新映射为 &lt;code&gt;nil&lt;/code&gt; 。例如，</target>
        </trans-unit>
        <trans-unit id="29530c6c2dd76c8f54f545055dd1fd60f3663441" translate="yes" xml:space="preserve">
          <source>To use XBM format, specify &lt;code&gt;xbm&lt;/code&gt; as the image type. This image format doesn&amp;rsquo;t require an external library, so images of this type are always supported.</source>
          <target state="translated">要使用XBM格式，请指定 &lt;code&gt;xbm&lt;/code&gt; 作为图像类型。这种图像格式不需要外部库，因此始终支持这种类型的图像。</target>
        </trans-unit>
        <trans-unit id="c90e5b4b810c083c043fa42260d8d7b68463ffba" translate="yes" xml:space="preserve">
          <source>To use XPM format, specify &lt;code&gt;xpm&lt;/code&gt; as the image type. The additional image property &lt;code&gt;:color-symbols&lt;/code&gt; is also meaningful with the &lt;code&gt;xpm&lt;/code&gt; image type:</source>
          <target state="translated">要使用XPM格式，请指定 &lt;code&gt;xpm&lt;/code&gt; 作为图像类型。附加的图像属性 &lt;code&gt;:color-symbols&lt;/code&gt; 对于 &lt;code&gt;xpm&lt;/code&gt; 图像类型也很有意义：</target>
        </trans-unit>
        <trans-unit id="3c24abd143422a8b29a6b56bb2ea32cea6354b1c" translate="yes" xml:space="preserve">
          <source>To use a generator function, first call it normally, producing a &lt;em&gt;iterator&lt;/em&gt; object. An iterator is a specific instance of a generator. Then use &lt;code&gt;iter-next&lt;/code&gt; to retrieve values from this iterator. When there are no more values to pull from an iterator, &lt;code&gt;iter-next&lt;/code&gt; raises an &lt;code&gt;iter-end-of-sequence&lt;/code&gt; condition with the iterator&amp;rsquo;s final value.</source>
          <target state="translated">要使用生成器函数，请先正常调用它，生成一个&lt;em&gt;迭代器&lt;/em&gt;对象。迭代器是生成器的特定实例。然后使用 &lt;code&gt;iter-next&lt;/code&gt; 从此迭代器中检索值。当没有更多值要从迭代器中提取时， &lt;code&gt;iter-next&lt;/code&gt; 会使用迭代器的最终值引发一个 &lt;code&gt;iter-end-of-sequence&lt;/code&gt; 条件。</target>
        </trans-unit>
        <trans-unit id="ea4124b3da5c67731463ccf1b3e77511f2d6c4b3" translate="yes" xml:space="preserve">
          <source>To use the change group, you must &lt;em&gt;activate&lt;/em&gt; it. You must do this before making any changes in the text of &lt;var&gt;buffer&lt;/var&gt;.</source>
          <target state="translated">要使用更改组，必须&lt;em&gt;激活&lt;/em&gt;它。您必须先执行此操作，然后再更改 &lt;var&gt;buffer&lt;/var&gt; 的文本。</target>
        </trans-unit>
        <trans-unit id="366f54e2165c598704a8f316a19a801859e54301" translate="yes" xml:space="preserve">
          <source>To use this feature, pass a function as the &lt;var&gt;collection&lt;/var&gt; argument to &lt;code&gt;completing-read&lt;/code&gt;. The function &lt;code&gt;completing-read&lt;/code&gt; arranges to pass your completion function along to &lt;code&gt;try-completion&lt;/code&gt;, &lt;code&gt;all-completions&lt;/code&gt;, and other basic completion functions, which will then let your function do all the work.</source>
          <target state="translated">要使用此功能，请将一个函数作为 &lt;var&gt;collection&lt;/var&gt; 参数传递给 &lt;code&gt;completing-read&lt;/code&gt; 。函数 &lt;code&gt;completing-read&lt;/code&gt; 安排将您的完成功能与 &lt;code&gt;try-completion&lt;/code&gt; ， &lt;code&gt;all-completions&lt;/code&gt; 和其他基本的完成功能一起传递，然后让您的功能完成所有工作。</target>
        </trans-unit>
        <trans-unit id="2630b830cf5b0fb707be5f7aed3659fadcd107a1" translate="yes" xml:space="preserve">
          <source>To verify that these functions really are declared where &lt;code&gt;declare-function&lt;/code&gt; says they are, use &lt;code&gt;check-declare-file&lt;/code&gt; to check all &lt;code&gt;declare-function&lt;/code&gt; calls in one source file, or use &lt;code&gt;check-declare-directory&lt;/code&gt; check all the files in and under a certain directory.</source>
          <target state="translated">要验证是否确实在声明函数所声明的位置 &lt;code&gt;declare-function&lt;/code&gt; 了这些函数，请使用 &lt;code&gt;check-declare-file&lt;/code&gt; 检查一个源文件中的所有 &lt;code&gt;declare-function&lt;/code&gt; 调用，或使用 &lt;code&gt;check-declare-directory&lt;/code&gt; 检查特定目录下及其下的所有文件。目录。</target>
        </trans-unit>
        <trans-unit id="c4710a8005674ec4cd23bafc0b4ef95b67bdfe13" translate="yes" xml:space="preserve">
          <source>To write Lisp code that modifies the buffer without causing deactivation of the mark at the end of the command, bind &lt;code&gt;deactivate-mark&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt; around the code that does the modification. For example:</source>
          <target state="translated">要编写Lisp代码以修改缓冲区而不在命令末尾导致标记 &lt;code&gt;deactivate-mark&lt;/code&gt; ，请在执行修改的代码周围将deactivate-mark绑定为 &lt;code&gt;nil&lt;/code&gt; 。例如：</target>
        </trans-unit>
        <trans-unit id="cd2f963109c7e2979bbf2eb19a4b013eb5c8a86d" translate="yes" xml:space="preserve">
          <source>To write a repeat-until loop, which will execute something on each iteration and then do the end-test, put the body followed by the end-test in a &lt;code&gt;progn&lt;/code&gt; as the first argument of &lt;code&gt;while&lt;/code&gt;, as shown here:</source>
          <target state="translated">要编写一个repeat-until循环，该循环将在每次迭代中执行一些操作，然后进行最终测试，请将主体和随后的最终测试放在 &lt;code&gt;progn&lt;/code&gt; 中作为 &lt;code&gt;while&lt;/code&gt; 的第一个参数，如下所示：</target>
        </trans-unit>
        <trans-unit id="1ae25fb46929690898f12d07fcafa4a05f668f8b" translate="yes" xml:space="preserve">
          <source>Together with &lt;code&gt;funcall&lt;/code&gt;, described below, this function provides a means for invoking any Lisp-callable Emacs function, provided that its name is a pure</source>
          <target state="translated">与下面描述的 &lt;code&gt;funcall&lt;/code&gt; 一起，此函数提供了一种调用任何可调用Lisp的Emacs函数的方法，只要它的名称是纯</target>
        </trans-unit>
        <trans-unit id="6a4f61ffb13cdb137768f45464d2daf99cde6986" translate="yes" xml:space="preserve">
          <source>Together, the argument &lt;var&gt;writable&lt;/var&gt; and the variable &lt;code&gt;window-persistent-parameters&lt;/code&gt; specify which window parameters are saved by this function. See &lt;a href=&quot;window-parameters#Window-Parameters&quot;&gt;Window Parameters&lt;/a&gt;.</source>
          <target state="translated">参数 &lt;var&gt;writable&lt;/var&gt; 和变量 &lt;code&gt;window-persistent-parameters&lt;/code&gt; 一起指定此函数保存哪些窗口参数。请参阅&lt;a href=&quot;window-parameters#Window-Parameters&quot;&gt;窗口参数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7605fce452fda76551ca8d398b1c77bfc7a07642" translate="yes" xml:space="preserve">
          <source>Toggle &lt;code&gt;print-circle&lt;/code&gt; for the frame at point.</source>
          <target state="translated">在点处切换框架的 &lt;code&gt;print-circle&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7c55ef57de1f86b340adc1ae9978aed2694c6f99" translate="yes" xml:space="preserve">
          <source>Toggle &lt;code&gt;print-gensym&lt;/code&gt; for the frame at point.</source>
          <target state="translated">切换点的框架的 &lt;code&gt;print-gensym&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9bb33058d124e0b4f5e2ec57ad52470200037bf6" translate="yes" xml:space="preserve">
          <source>Toggle the display of local variables of the current stack frame.</source>
          <target state="translated">切换显示当前堆栈框架的局部变量。</target>
        </trans-unit>
        <trans-unit id="834b5ba59f87addb15585289c12709f144fa44fe" translate="yes" xml:space="preserve">
          <source>Toggle whether Edebug saves and restores the outside window configuration (&lt;code&gt;edebug-toggle-save-windows&lt;/code&gt;).</source>
          <target state="translated">切换Edebug是否保存和恢复外部窗口配置（ &lt;code&gt;edebug-toggle-save-windows&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="c597b48773c11ca5b60e2e19b4de6ca7d28619e4" translate="yes" xml:space="preserve">
          <source>Toggle whether to disable the breakpoint near point (&lt;code&gt;edebug-toggle-disable-breakpoint&lt;/code&gt;). This command is mostly useful if the breakpoint is conditional and it would take some work to recreate the condition.</source>
          <target state="translated">切换是否禁用断点近点（ &lt;code&gt;edebug-toggle-disable-breakpoint&lt;/code&gt; ）。如果断点是有条件的，并且重新创建条件需要一些工作，则此命令最有用。</target>
        </trans-unit>
        <trans-unit id="8cdb0b32730b410b96d6ace4a6845b0d689513ad" translate="yes" xml:space="preserve">
          <source>Tool Bar</source>
          <target state="translated">工具栏</target>
        </trans-unit>
        <trans-unit id="a30c5a75556e7266b6a7a7426676a7295fee6d4e" translate="yes" xml:space="preserve">
          <source>Tool bars</source>
          <target state="translated">工具杆</target>
        </trans-unit>
        <trans-unit id="f9b2611afc5ea6219aed5d32674f355502583ebc" translate="yes" xml:space="preserve">
          <source>Tools and tips for debugging Lisp programs.</source>
          <target state="translated">调试Lisp程序的工具和技巧。</target>
        </trans-unit>
        <trans-unit id="3b0bb3d1bfe1457152fb66a5bb31635d4f18e66e" translate="yes" xml:space="preserve">
          <source>Tooltip Mode is a minor mode that enables display of tooltips. Turning off this mode causes the tooltips be displayed in the echo area. On text-mode (a.k.a. &amp;ldquo;TTY&amp;rdquo;) frames, tooltips are always displayed in the echo area.</source>
          <target state="translated">工具提示模式是次要模式，可显示工具提示。关闭此模式会使工具提示显示在回显区域中。在文本模式（也称为&amp;ldquo; TTY&amp;rdquo;）框架上，工具提示始终显示在回显区域中。</target>
        </trans-unit>
        <trans-unit id="a70afb07bb2c328f7ecbd8aac33d2f8f158ba719" translate="yes" xml:space="preserve">
          <source>Tooltip display in Emacs.</source>
          <target state="translated">Emacs中的工具提示显示。</target>
        </trans-unit>
        <trans-unit id="45a025dbf80367ecabf2143f1cd73cb481a93960" translate="yes" xml:space="preserve">
          <source>Tooltips</source>
          <target state="translated">Tooltips</target>
        </trans-unit>
        <trans-unit id="6131f75d59fc6314da7da55138ad69d66f13396d" translate="yes" xml:space="preserve">
          <source>Tooltips are displayed in special frames called tooltip frames, which have their own frame parameters (see &lt;a href=&quot;frame-parameters#Frame-Parameters&quot;&gt;Frame Parameters&lt;/a&gt;). Unlike other frames, the default parameters for tooltip frames are stored in a special variable.</source>
          <target state="translated">工具提示显示在称为工具提示框架的特殊框架中，它们具有自己的框架参数（请参见&lt;a href=&quot;frame-parameters#Frame-Parameters&quot;&gt;框架参数&lt;/a&gt;）。与其他框架不同，工具提示框架的默认参数存储在特殊变量中。</target>
        </trans-unit>
        <trans-unit id="cae0435c41e816c24f0838fdf4e76c044c8b4e00" translate="yes" xml:space="preserve">
          <source>Top</source>
          <target state="translated">Top</target>
        </trans-unit>
        <trans-unit id="4522bd3f0018af8e5af764927a8ad9045a9902bf" translate="yes" xml:space="preserve">
          <source>Total heap size, in &lt;var&gt;unit-size&lt;/var&gt; units.</source>
          <target state="translated">总堆大小，以 &lt;var&gt;unit-size&lt;/var&gt; 单位。</target>
        </trans-unit>
        <trans-unit id="3b454aaf9f48c5b83a0068be2bee977587791c2e" translate="yes" xml:space="preserve">
          <source>Trace Buffer</source>
          <target state="translated">跟踪缓冲区</target>
        </trans-unit>
        <trans-unit id="1965e014d48fda9cda201912038356860300b1e4" translate="yes" xml:space="preserve">
          <source>Trace slow or fast, stopping briefly at each stop point, or at each breakpoint.</source>
          <target state="translated">追踪速度慢或快,在每个停止点或每个断点短暂停留。</target>
        </trans-unit>
        <trans-unit id="f0221846a6146b35e28b360caa4f87ee111c61da" translate="yes" xml:space="preserve">
          <source>Trace: pause (normally one second) at each Edebug stop point (&lt;code&gt;edebug-trace-mode&lt;/code&gt;).</source>
          <target state="translated">跟踪：在每个Edebug停止点（ &lt;code&gt;edebug-trace-mode&lt;/code&gt; ）暂停（通常为一秒）。</target>
        </trans-unit>
        <trans-unit id="fd5b66d78a9aaf43b4e20b383511da4abfe465e6" translate="yes" xml:space="preserve">
          <source>Trailing garbage following expression</source>
          <target state="translated">表达式后的尾部垃圾</target>
        </trans-unit>
        <trans-unit id="b73db9e59eef72b8f146fa16407441bdbe6661b9" translate="yes" xml:space="preserve">
          <source>Transaction Queues</source>
          <target state="translated">交易尾数</target>
        </trans-unit>
        <trans-unit id="9025315f1f26097cf9461da7a71d143959b8ada8" translate="yes" xml:space="preserve">
          <source>Transaction queues are implemented by means of a filter function. See &lt;a href=&quot;filter-functions#Filter-Functions&quot;&gt;Filter Functions&lt;/a&gt;.</source>
          <target state="translated">事务队列是通过过滤器功能实现的。请参阅&lt;a href=&quot;filter-functions#Filter-Functions&quot;&gt;过滤器功能&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cc8e0d8b57a0330d7f87c52c4f7b798a0ffbf9fd" translate="yes" xml:space="preserve">
          <source>Transaction-based communication with subprocesses.</source>
          <target state="translated">与子进程进行基于事务的通信。</target>
        </trans-unit>
        <trans-unit id="5358cdd26e65ec3d1c3846e60fc713ece9e8add2" translate="yes" xml:space="preserve">
          <source>Transferring focus from a child frame to an ancestor that is not its parent by clicking with the mouse in a visible part of that ancestor&amp;rsquo;s window may fail with some window-systems. You may have to click into the direct parent&amp;rsquo;s window-system window first.</source>
          <target state="translated">通过在某个祖先窗口的可见部分中单击鼠标，将焦点从子框架转移到不是其父项的祖先可能会因某些窗口系统而失败。您可能必须先单击直接父级的窗口系统窗口。</target>
        </trans-unit>
        <trans-unit id="f74140f05c439601037d62694ac18544a05778f6" translate="yes" xml:space="preserve">
          <source>Transferring text to and from other X clients.</source>
          <target state="translated">在其他X客户端之间传输文本。</target>
        </trans-unit>
        <trans-unit id="e00a921183307d4af50564690b4a2589a590ab0f" translate="yes" xml:space="preserve">
          <source>Translate &lt;var&gt;rx-expr&lt;/var&gt; to a string regexp which is returned. If &lt;var&gt;no-group&lt;/var&gt; is absent or nil, bracket the result in a non-capturing group, &amp;lsquo;</source>
          <target state="translated">将 &lt;var&gt;rx-expr&lt;/var&gt; 转换为返回的字符串regexp。如果 &lt;var&gt;no-group&lt;/var&gt; 存在或没有ngroup，则将结果括在非捕获组中，&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="dec78bb5fcd9d91b9206fcdbcd067bc1dcd27453" translate="yes" xml:space="preserve">
          <source>Translate the &lt;var&gt;rx-expr&lt;/var&gt;s to a string regexp, as if they were the body of a &lt;code&gt;(seq &amp;hellip;)&lt;/code&gt; form. The &lt;code&gt;rx&lt;/code&gt; macro expands to a string constant, or, if &lt;code&gt;literal&lt;/code&gt; or &lt;code&gt;regexp&lt;/code&gt; forms are used, a Lisp expression that evaluates to a string.</source>
          <target state="translated">将 &lt;var&gt;rx-expr&lt;/var&gt; 转换为字符串regexp，就好像它们是 &lt;code&gt;(seq &amp;hellip;)&lt;/code&gt; 形式的主体一样。所述 &lt;code&gt;rx&lt;/code&gt; 宏扩展为字符串常量，或者，如果 &lt;code&gt;literal&lt;/code&gt; 或 &lt;code&gt;regexp&lt;/code&gt; 中使用的形式，一个Lisp表达式，其值的字符串。</target>
        </trans-unit>
        <trans-unit id="939fecf7f46173f3030b9d459d3e82dd172f6277" translate="yes" xml:space="preserve">
          <source>Translation keymaps have the same structure as other keymaps, but are used differently: they specify translations to make while reading key sequences, rather than bindings for complete key sequences. As each key sequence is read, it is checked against each translation keymap. If one of the translation keymaps binds &lt;var&gt;k&lt;/var&gt; to a vector &lt;var&gt;v&lt;/var&gt;, then whenever &lt;var&gt;k&lt;/var&gt; appears as a sub-sequence &lt;em&gt;anywhere&lt;/em&gt; in a key sequence, that sub-sequence is replaced with the events in &lt;var&gt;v&lt;/var&gt;.</source>
          <target state="translated">翻译键映射与其他键映射具有相同的结构，但用法不同：它们指定在读取键序列时进行的翻译，而不是完整键序列的绑定。在读取每个键序列时，将对照每个翻译键映射对其进行检查。如果翻译键映射中的一个将 &lt;var&gt;k&lt;/var&gt; 绑定到向量 &lt;var&gt;v&lt;/var&gt; ，则只要 &lt;var&gt;k&lt;/var&gt; 在键序列中的&lt;em&gt;任意位置&lt;/em&gt;出现为子序列，该子序列就会被 &lt;var&gt;v&lt;/var&gt; 中的事件替换。</target>
        </trans-unit>
        <trans-unit id="44f128eb05a4342acee3e0ccfddac11b3f06bbdf" translate="yes" xml:space="preserve">
          <source>Translation keymaps take effect only after Emacs has decoded the keyboard input (via the input coding system specified by &lt;code&gt;keyboard-coding-system&lt;/code&gt;). See &lt;a href=&quot;terminal-i_002fo-encoding#Terminal-I_002fO-Encoding&quot;&gt;Terminal I/O Encoding&lt;/a&gt;.</source>
          <target state="translated">仅在Emacs解码了键盘输入（通过 &lt;code&gt;keyboard-coding-system&lt;/code&gt; 指定的输入编码系统）后，翻译键盘映射才会生效。请参阅&lt;a href=&quot;terminal-i_002fo-encoding#Terminal-I_002fO-Encoding&quot;&gt;终端I / O编码&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bde9fd0ecd53c93a87e48d5606241921a50aebf9" translate="yes" xml:space="preserve">
          <source>Translation of Characters</source>
          <target state="translated">角色的翻译</target>
        </trans-unit>
        <trans-unit id="476faea9dbdcc537fe988fec82715790ec252000" translate="yes" xml:space="preserve">
          <source>Translation tables are used for conversion.</source>
          <target state="translated">翻译表是用来转换的。</target>
        </trans-unit>
        <trans-unit id="77714c800f2a0d01cd00c46410503f6e7f5c222d" translate="yes" xml:space="preserve">
          <source>Transposition of Text</source>
          <target state="translated">文本的换位</target>
        </trans-unit>
        <trans-unit id="57baf272fcdf7e6813d05a0d4525ee0ba9c934ad" translate="yes" xml:space="preserve">
          <source>Trapping Errors</source>
          <target state="translated">诱捕错误</target>
        </trans-unit>
        <trans-unit id="8432711a6287d81e6dc0107d33da390800119952" translate="yes" xml:space="preserve">
          <source>Trapping errors with Edebug.</source>
          <target state="translated">用Edebug捕捉错误。</target>
        </trans-unit>
        <trans-unit id="3f6e9a5cb83002b8d8e4f89b225b1358f0baee53" translate="yes" xml:space="preserve">
          <source>Treat each other with respect</source>
          <target state="translated">互相尊重</target>
        </trans-unit>
        <trans-unit id="0d94209a1de787a06dc2b518db5a26e50a92924c" translate="yes" xml:space="preserve">
          <source>Treating a byte sequence as unibyte or multi.</source>
          <target state="translated">将一个字节序列处理为单字节或多字节。</target>
        </trans-unit>
        <trans-unit id="f68bae276652515d4de24b004e58e392d961d7b9" translate="yes" xml:space="preserve">
          <source>Trig, exponential and logarithmic functions.</source>
          <target state="translated">三角函数、指数函数和对数函数。</target>
        </trans-unit>
        <trans-unit id="bae275226ca95f5a2e345e5ae0bf461938409bba" translate="yes" xml:space="preserve">
          <source>Truenames</source>
          <target state="translated">Truenames</target>
        </trans-unit>
        <trans-unit id="59f6a9fc2fffb15b78c0b81473cdfd56174958cf" translate="yes" xml:space="preserve">
          <source>Truncation</source>
          <target state="translated">Truncation</target>
        </trans-unit>
        <trans-unit id="4f4ba6582c51838bdd028085a979c4e9964d63d8" translate="yes" xml:space="preserve">
          <source>Trying this with the new, modified form above in a configuration that does not show</source>
          <target state="translated">用上面新的、修改过的表格在一个不显示的配置中试一下</target>
        </trans-unit>
        <trans-unit id="87a8b6ec68b23732e7a1115a2e3fe743debb751e" translate="yes" xml:space="preserve">
          <source>Two Lisp objects are the same, as keys, if they are equal according to &lt;code&gt;equal&lt;/code&gt;.</source>
          <target state="translated">如果两个Lisp对象根据 &lt;code&gt;equal&lt;/code&gt; s相等，则它们与键相同。</target>
        </trans-unit>
        <trans-unit id="6e3b64e804122785994f06558cf886f5f08edf64" translate="yes" xml:space="preserve">
          <source>Two alternatives: renaming the old file or copying it.</source>
          <target state="translated">两个选择:重命名旧文件或复制它。</target>
        </trans-unit>
        <trans-unit id="900115902bb3ee3eacd450cde6022ead295d4b57" translate="yes" xml:space="preserve">
          <source>Two dashed lines with a 3D raised appearance.</source>
          <target state="translated">两条虚线,具有3D凸起的外观。</target>
        </trans-unit>
        <trans-unit id="078c40a10f9782638729ef5c4fa93a5a757baf2c" translate="yes" xml:space="preserve">
          <source>Two dashed lines with a 3D sunken appearance.</source>
          <target state="translated">两条虚线,具有3D凹陷的外观。</target>
        </trans-unit>
        <trans-unit id="276e80b5a218e2e63286157ede2fef9ed3f62b00" translate="yes" xml:space="preserve">
          <source>Two distinct markers are considered &lt;code&gt;equal&lt;/code&gt; (even though not &lt;code&gt;eq&lt;/code&gt;) to each other if they have the same position and buffer, or if they both point nowhere.</source>
          <target state="translated">如果两个不同的标记具有相同的位置和缓冲区，或者它们都指向无处，则认为它们彼此 &lt;code&gt;equal&lt;/code&gt; （即使不是 &lt;code&gt;eq&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="d1f7d0d088985dc7d823ec171ca809b396c7a10a" translate="yes" xml:space="preserve">
          <source>Two events of the same type are equivalent where key bindings are concerned; thus, they always run the same command. That does not necessarily mean they do the same things, however, as some commands look at the whole event to decide what to do. For example, some commands use the location of a mouse event to decide where in the buffer to act.</source>
          <target state="translated">同一类型的两个事件在键绑定方面是等价的;因此,它们总是运行相同的命令。然而,这并不一定意味着它们做的事情是一样的,因为有些命令会从整个事件来决定做什么。例如,有些命令使用鼠标事件的位置来决定在缓冲区的哪个位置采取行动。</target>
        </trans-unit>
        <trans-unit id="b4781945d76820f5582c1252f5928ec31da5e039" translate="yes" xml:space="preserve">
          <source>Two functions are specifically provided for adding elements to &lt;code&gt;buffer-invisibility-spec&lt;/code&gt; and removing elements from it.</source>
          <target state="translated">专门提供了两个功能，用于将元素添加到 &lt;code&gt;buffer-invisibility-spec&lt;/code&gt; 并从中删除元素。</target>
        </trans-unit>
        <trans-unit id="09c677640ac11fca59db4aeaf6a01fa851a98022" translate="yes" xml:space="preserve">
          <source>Two functions modify lists that are the values of variables.</source>
          <target state="translated">两个函数修改的列表是变量的值。</target>
        </trans-unit>
        <trans-unit id="64b110ffe33ad523c38c09aea216906feb5f0461" translate="yes" xml:space="preserve">
          <source>Two lines with a 3D raised appearance.</source>
          <target state="translated">两条线,外观呈3D凸起。</target>
        </trans-unit>
        <trans-unit id="a2d7be84e660c9fc4b82fde08bacf6b24faadb5f" translate="yes" xml:space="preserve">
          <source>Two lines with a 3D sunken appearance.</source>
          <target state="translated">两条线,外观呈3D下沉式。</target>
        </trans-unit>
        <trans-unit id="c06e2850d5b49bddb3395c2341d9d3e3816b11e2" translate="yes" xml:space="preserve">
          <source>Two other action functions are described in their proper sections&amp;mdash;&lt;code&gt;display-buffer-in-side-window&lt;/code&gt; (see &lt;a href=&quot;displaying-buffers-in-side-windows#Displaying-Buffers-in-Side-Windows&quot;&gt;Displaying Buffers in Side Windows&lt;/a&gt;) and &lt;code&gt;display-buffer-in-atom-window&lt;/code&gt; (see &lt;a href=&quot;atomic-windows#Atomic-Windows&quot;&gt;Atomic Windows&lt;/a&gt;).</source>
          <target state="translated">其他两个动作函数在其相应的章节中进行了介绍： &lt;code&gt;display-buffer-in-side-window&lt;/code&gt; （请参见&lt;a href=&quot;displaying-buffers-in-side-windows#Displaying-Buffers-in-Side-Windows&quot;&gt;在侧面Windows中显示缓冲区&lt;/a&gt;）和 &lt;code&gt;display-buffer-in-atom-window&lt;/code&gt; （请参见&lt;a href=&quot;atomic-windows#Atomic-Windows&quot;&gt;Atomic Windows&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="95a90e7310bb1b6e635f813931f512d86ab08031" translate="yes" xml:space="preserve">
          <source>Two other constructs likewise evaluate a series of forms but return different values:</source>
          <target state="translated">另外两个构造同样评估一系列形式,但返回的值不同。</target>
        </trans-unit>
        <trans-unit id="bdd6d7f1d69bc7abceb42a042e581e1002b8ba55" translate="yes" xml:space="preserve">
          <source>Two special theme names are disallowed (using them causes an error): &lt;code&gt;user&lt;/code&gt; is a dummy theme that stores the user&amp;rsquo;s direct customization settings, and &lt;code&gt;changed&lt;/code&gt; is a dummy theme that stores changes made outside of the Customize system.</source>
          <target state="translated">不允许使用两个特殊主题名称（使用它们会导致错误）： &lt;code&gt;user&lt;/code&gt; 是一个虚拟主题，用于存储用户的直接自定义设置，而 &lt;code&gt;changed&lt;/code&gt; 是一个虚拟主题，用于存储在Customize系统之外进行的更改。</target>
        </trans-unit>
        <trans-unit id="f6b8d7a1f84068dcc928473f4bb4df2868788137" translate="yes" xml:space="preserve">
          <source>Two structures (see</source>
          <target state="translated">两个结构(见</target>
        </trans-unit>
        <trans-unit id="4c02ddd9ae4a5e67609618883fb3b0c4bbb927de" translate="yes" xml:space="preserve">
          <source>Two symbols to avoid are &lt;code&gt;t&lt;/code&gt;, which behaves like &lt;code&gt;_&lt;/code&gt; (above) and is deprecated, and &lt;code&gt;nil&lt;/code&gt;, which signals an error. Likewise, it makes no sense to bind keyword symbols (see &lt;a href=&quot;constant-variables#Constant-Variables&quot;&gt;Constant Variables&lt;/a&gt;).</source>
          <target state="translated">要避免的两个符号是 &lt;code&gt;t&lt;/code&gt; ，它的行为类似于 &lt;code&gt;_&lt;/code&gt; （在上面）并已弃用，而 &lt;code&gt;nil&lt;/code&gt; 则指示错误。同样，绑定关键字符号也没有意义（请参见&lt;a href=&quot;constant-variables#Constant-Variables&quot;&gt;常量变量&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="16985e22324ae4be5cd933afda373600250e566f" translate="yes" xml:space="preserve">
          <source>Two variables, &lt;code&gt;kept-old-versions&lt;/code&gt; and &lt;code&gt;kept-new-versions&lt;/code&gt;, determine which backup versions should be kept. This function keeps those versions by excluding them from the &lt;small&gt;CDR&lt;/small&gt; of the value. See &lt;a href=&quot;numbered-backups#Numbered-Backups&quot;&gt;Numbered Backups&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;kept-old-versions&lt;/code&gt; 和 &lt;code&gt;kept-new-versions&lt;/code&gt; 这两个变量确定应保留哪些备份版本。此功能通过从值的&lt;small&gt;CDR&lt;/small&gt;中排除这些版本来保留这些版本。请参阅&lt;a href=&quot;numbered-backups#Numbered-Backups&quot;&gt;编号备份&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fd2d7ad2a3cce3a9b95cfd11a8bcd35c7023c0f3" translate="yes" xml:space="preserve">
          <source>Two ways a marker can relocate when you insert where it points.</source>
          <target state="translated">当你插入标记指向的地方时,标记有两种方式可以重新定位。</target>
        </trans-unit>
        <trans-unit id="a59d7b7ab83add791ccaa6844d61e665eb13b934" translate="yes" xml:space="preserve">
          <source>Type Descriptors</source>
          <target state="translated">类型描述符</target>
        </trans-unit>
        <trans-unit id="115fb513abcf93f79ab99094dfb28657b17a527a" translate="yes" xml:space="preserve">
          <source>Type Keywords</source>
          <target state="translated">输入关键词</target>
        </trans-unit>
        <trans-unit id="871ed8af7087eb9d57bbb752007d4585dcd2cca0" translate="yes" xml:space="preserve">
          <source>Type Predicates</source>
          <target state="translated">类型谓词</target>
        </trans-unit>
        <trans-unit id="b6bbb849584fc733097de838d310739c3cdb7cd2" translate="yes" xml:space="preserve">
          <source>Type Predicates for Numbers</source>
          <target state="translated">数字的类型谓词</target>
        </trans-unit>
        <trans-unit id="048b7bb2912e3402740f919c5dfbbdfb7a4761cb" translate="yes" xml:space="preserve">
          <source>Type alias: &lt;strong&gt;emacs_limb_t&lt;/strong&gt;</source>
          <target state="translated">输入别名：&lt;strong&gt;emacs_limb_t&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b2bca6250f5a4bae7d8d26caddc5f558438c3e69" translate="yes" xml:space="preserve">
          <source>Types found in all Lisp systems.</source>
          <target state="translated">所有Lisp系统中都有的类型。</target>
        </trans-unit>
        <trans-unit id="592fd9a1b2a71f0d04b169ff7f60f6f55ae838dd" translate="yes" xml:space="preserve">
          <source>Types specific to Emacs.</source>
          <target state="translated">Emacs特有的类型。</target>
        </trans-unit>
        <trans-unit id="d0833b0f443685c0ed11621e61c9b07b86c24e54" translate="yes" xml:space="preserve">
          <source>Typical values for &lt;var&gt;path&lt;/var&gt; are &lt;code&gt;exec-path&lt;/code&gt; (see &lt;a href=&quot;subprocess-creation#Subprocess-Creation&quot;&gt;Subprocess Creation&lt;/a&gt;) when looking for executable programs, or &lt;code&gt;load-path&lt;/code&gt; (see &lt;a href=&quot;library-search#Library-Search&quot;&gt;Library Search&lt;/a&gt;) when looking for Lisp files. If &lt;var&gt;filename&lt;/var&gt; is absolute, &lt;var&gt;path&lt;/var&gt; has no effect, but the suffixes in &lt;var&gt;suffixes&lt;/var&gt; are still tried.</source>
          <target state="translated">&lt;var&gt;path&lt;/var&gt; 的典型值是在查找可执行程序时的 &lt;code&gt;exec-path&lt;/code&gt; （请参阅&amp;ldquo;&lt;a href=&quot;subprocess-creation#Subprocess-Creation&quot;&gt;子进程创建&amp;rdquo;&lt;/a&gt;），或者在查找Lisp文件时的 &lt;code&gt;load-path&lt;/code&gt; （请参见&lt;a href=&quot;library-search#Library-Search&quot;&gt;Library Search&lt;/a&gt;）。如果 &lt;var&gt;filename&lt;/var&gt; 是绝对文件名，则 &lt;var&gt;path&lt;/var&gt; 无效，但是仍尝试使用后缀中的 &lt;var&gt;suffixes&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="f5458a15564f1c431c22949b2b4273c2314398c0" translate="yes" xml:space="preserve">
          <source>Typically grave accent and apostrophe in the format translate to matching curved quotes, e.g.,</source>
          <target state="translated">通常格式中的重音和省略号会转化为相匹配的弯引号,例如:。</target>
        </trans-unit>
        <trans-unit id="d914284cca0cf58ff03339bd63ddccef1dba0681" translate="yes" xml:space="preserve">
          <source>Typically, &lt;var&gt;body&lt;/var&gt; rewrites the invoked pattern to use more basic patterns. Although all patterns eventually reduce to core patterns, &lt;code&gt;body&lt;/code&gt; need not use core patterns straight away. The following example defines two patterns, named &lt;code&gt;less-than&lt;/code&gt; and &lt;code&gt;integer-less-than&lt;/code&gt;.</source>
          <target state="translated">通常， &lt;var&gt;body&lt;/var&gt; 重写调用的模式以使用更多基本模式。尽管所有模式最终都会减少为核心模式，但是 &lt;code&gt;body&lt;/code&gt; 无需立即使用核心模式。以下示例定义了两种模式，分别命名为 &lt;code&gt;less-than&lt;/code&gt; 和 &lt;code&gt;integer-less-than&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f86e865bcb97dcef7ef8622e26dcb3c0900725b1" translate="yes" xml:space="preserve">
          <source>Typically, grave accents and apostrophes are treated specially in documentation strings and diagnostic messages, and translate to matching single quotation marks (also called &amp;ldquo;curved quotes&amp;rdquo;). For example, the documentation string</source>
          <target state="translated">通常，在文档字符串和诊断消息中会特别处理重音和撇号，并将其翻译为匹配的单引号（也称为&amp;ldquo;弯曲引号&amp;rdquo;）。例如，文档字符串</target>
        </trans-unit>
        <trans-unit id="46ca480785d69ee167efc4e08e708904c7e9a5cd" translate="yes" xml:space="preserve">
          <source>Typically, the display routines run by &lt;code&gt;display-buffer&lt;/code&gt; will set the &lt;code&gt;quit-restore&lt;/code&gt; window parameter correctly. It&amp;rsquo;s also possible to set it manually, using the following code for displaying &lt;var&gt;buffer&lt;/var&gt; in &lt;var&gt;window&lt;/var&gt;:</source>
          <target state="translated">通常，由 &lt;code&gt;display-buffer&lt;/code&gt; 运行的显示例程将正确设置 &lt;code&gt;quit-restore&lt;/code&gt; 窗口参数。也可以使用以下代码在 &lt;var&gt;window&lt;/var&gt; 中显示 &lt;var&gt;buffer&lt;/var&gt; 来手动设置它：</target>
        </trans-unit>
        <trans-unit id="bc066e01c03d97313b8c0f88f2923124a6ca0222" translate="yes" xml:space="preserve">
          <source>Typically, when you invoke &lt;code&gt;delq&lt;/code&gt;, you should use the return value by assigning it to the variable which held the original list. The reason for this is explained below.</source>
          <target state="translated">通常，在调用 &lt;code&gt;delq&lt;/code&gt; 时，应通过将返回值分配给保存原始列表的变量来使用返回值。其原因说明如下。</target>
        </trans-unit>
        <trans-unit id="68436902c83b43b911b94e78cef30b2a838179e9" translate="yes" xml:space="preserve">
          <source>Typically, you define an ewoc with &lt;code&gt;ewoc-create&lt;/code&gt;, and then pass the resulting ewoc structure to other functions in the Ewoc package to build nodes within it, and display it in the buffer. Once it is displayed in the buffer, other functions determine the correspondence between buffer positions and nodes, move point from one node&amp;rsquo;s textual representation to another, and so forth. See &lt;a href=&quot;abstract-display-functions#Abstract-Display-Functions&quot;&gt;Abstract Display Functions&lt;/a&gt;.</source>
          <target state="translated">通常，您使用 &lt;code&gt;ewoc-create&lt;/code&gt; 定义一个ewoc ，然后将生成的ewoc结构传递给Ewoc包中的其他函数，以在其中构建节点，并将其显示在缓冲区中。一旦将其显示在缓冲区中，其他功能将确定缓冲区位置和节点之间的对应关系，将点从一个节点的文本表示形式移动到另一个节点，等等。请参见&lt;a href=&quot;abstract-display-functions#Abstract-Display-Functions&quot;&gt;抽象显示函数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5614fd83d7c12176ea9d23d0a9a55af15cb1297f" translate="yes" xml:space="preserve">
          <source>Typing</source>
          <target state="translated">Typing</target>
        </trans-unit>
        <trans-unit id="b2c7c0caa10a0cca5ea7d69e54018ae0c0389dd6" translate="yes" xml:space="preserve">
          <source>U</source>
          <target state="translated">U</target>
        </trans-unit>
        <trans-unit id="d5bbff0823236d5bac754929f8481e9cb4c8d098" translate="yes" xml:space="preserve">
          <source>U+&lt;var&gt;10ffff&lt;/var&gt;</source>
          <target state="translated">U+&lt;var&gt;10ffff&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="e91bef77f8609fb9bf50d4fbfdf4276ec072a927" translate="yes" xml:space="preserve">
          <source>UBA</source>
          <target state="translated">UBA</target>
        </trans-unit>
        <trans-unit id="d3fc3161813ba3f0de61150b594950ca9e11b667" translate="yes" xml:space="preserve">
          <source>UCD</source>
          <target state="translated">UCD</target>
        </trans-unit>
        <trans-unit id="8118daf9c86a705bf6c301c185dc8d3b5d7d605a" translate="yes" xml:space="preserve">
          <source>UDP network connections.</source>
          <target state="translated">UDP网络连接。</target>
        </trans-unit>
        <trans-unit id="d946adf52a4783929f122d341b29ac0fe188371c" translate="yes" xml:space="preserve">
          <source>UID</source>
          <target state="translated">UID</target>
        </trans-unit>
        <trans-unit id="11a66854c0ed7fd7fbaf5a561663c5dc867c9f19" translate="yes" xml:space="preserve">
          <source>UP</source>
          <target state="translated">UP</target>
        </trans-unit>
        <trans-unit id="0e2d9b0777a485c1276de0803c12a7d76fbc5c39" translate="yes" xml:space="preserve">
          <source>URL</source>
          <target state="translated">URL</target>
        </trans-unit>
        <trans-unit id="29d0b50fb5f46ed9e73d295c4368c7e33419a958" translate="yes" xml:space="preserve">
          <source>Undefined color</source>
          <target state="translated">未定义的颜色</target>
        </trans-unit>
        <trans-unit id="9ebb1b34bc4bd2e2a22ba2788411fe72f978b3d9" translate="yes" xml:space="preserve">
          <source>Under Emacs Lisp&amp;rsquo;s default dynamic scoping rule (see &lt;a href=&quot;variable-scoping#Variable-Scoping&quot;&gt;Variable Scoping&lt;/a&gt;), the value cell stores the variable&amp;rsquo;s current (local or global) value. Note that an unassigned value cell is &lt;em&gt;not&lt;/em&gt; the same as having &lt;code&gt;nil&lt;/code&gt; in the value cell. The symbol &lt;code&gt;nil&lt;/code&gt; is a Lisp object and can be the value of a variable, just as any other object can be; but it is still a value. If a variable is void, trying to evaluate the variable signals a &lt;code&gt;void-variable&lt;/code&gt; error, instead of returning a value.</source>
          <target state="translated">根据Emacs Lisp的默认动态范围规则（请参阅&lt;a href=&quot;variable-scoping#Variable-Scoping&quot;&gt;Variable Scoping&lt;/a&gt;），值单元格存储变量的当前（本地或全局）值。注意，未指定的值单元是&lt;em&gt;不&lt;/em&gt;相同的具有 &lt;code&gt;nil&lt;/code&gt; 的值单元。符号 &lt;code&gt;nil&lt;/code&gt; 是一个Lisp对象，并且可以是变量的值，就像其他任何对象一样。但这仍然是一个价值。如果变量为空，则尝试评估该变量会发出一个 &lt;code&gt;void-variable&lt;/code&gt; 错误，而不是返回值。</target>
        </trans-unit>
        <trans-unit id="0ec307772aa57918876ae8b715b7f379621b832f" translate="yes" xml:space="preserve">
          <source>Under X, Emacs uses the Motif window manager hints to turn off decorations. Some window managers may not honor these hints.</source>
          <target state="translated">在X下,Emacs使用Motif窗口管理器提示来关闭装饰。有些窗口管理器可能不尊重这些提示。</target>
        </trans-unit>
        <trans-unit id="ed8dca9e818d8bcbdcca4662863fb8e87cf60ce5" translate="yes" xml:space="preserve">
          <source>Under dynamic binding, this macro effectively makes &lt;code&gt;lambda&lt;/code&gt; forms self-quoting: evaluating a form whose &lt;small&gt;CAR&lt;/small&gt; is &lt;code&gt;lambda&lt;/code&gt; yields the form itself:</source>
          <target state="translated">在动态绑定下，此宏有效地使 &lt;code&gt;lambda&lt;/code&gt; 表单自引用：评估其&lt;small&gt;CAR&lt;/small&gt;为 &lt;code&gt;lambda&lt;/code&gt; 的表单将产生该表单本身：</target>
        </trans-unit>
        <trans-unit id="ba85f5add6b67e44d47f7751fb0f3c82778ea03f" translate="yes" xml:space="preserve">
          <source>Under some circumstances, a command can use a minibuffer even if there is an active minibuffer; such a minibuffer is called a &lt;em&gt;recursive minibuffer&lt;/em&gt;. The first minibuffer is named &amp;lsquo;</source>
          <target state="translated">在某些情况下，即使有活动的微型缓冲区，命令也可以使用微型缓冲区；这样的微型缓冲区称为&lt;em&gt;递归微型缓冲区&lt;/em&gt;。第一个迷你缓冲区名为&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="11b91dc369c91068c73dea6e6dc80ebad323e8f7" translate="yes" xml:space="preserve">
          <source>Under some circumstances, if the number of images in the cache grows too large, the actual eviction delay may be shorter than this.</source>
          <target state="translated">在某些情况下,如果缓存中的图片数量增长过大,实际的驱逐延迟可能会比这个时间短。</target>
        </trans-unit>
        <trans-unit id="11eded0aaaba20c27a228c4aa613b3399f7491e9" translate="yes" xml:space="preserve">
          <source>Under the hood, there are two kinds of integers&amp;mdash;small integers, called &lt;em&gt;fixnums&lt;/em&gt;, and large integers, called &lt;em&gt;bignums&lt;/em&gt;.</source>
          <target state="translated">在&lt;em&gt;底层&lt;/em&gt;，有两种整数-小整数（称为&lt;em&gt;fixnums&lt;/em&gt;）和大整数（称为&lt;em&gt;bignums）&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="c9739fdf443679c0e0ff4f5e723c1c33accba182" translate="yes" xml:space="preserve">
          <source>Under the optional lexical scoping rule, the value cell only holds the variable&amp;rsquo;s global value&amp;mdash;the value outside of any lexical binding construct. When a variable is lexically bound, the local value is determined by the lexical environment; hence, variables can have local values even if their symbols&amp;rsquo; value cells are unassigned.</source>
          <target state="translated">在可选的词法作用域规则下，值单元格仅保存变量的全局值，即任何词法绑定构造之外的值。当变量按词法绑定时，局部值由词法环境确定；因此，即使未分配符号的值单元，变量也可以具有局部值。</target>
        </trans-unit>
        <trans-unit id="1a644237b01fa721b77c11c234b4a6fc40fe1486" translate="yes" xml:space="preserve">
          <source>Under very special circumstances, you may want to disable multibyte character support, for a specific buffer. When multibyte characters are disabled in a buffer, we call that &lt;em&gt;unibyte mode&lt;/em&gt;. In unibyte mode, each character in the buffer has a character code ranging from 0 through 255 (0377 octal); 0 through 127 (0177 octal) represent</source>
          <target state="translated">在非常特殊的情况下，您可能要禁用特定缓冲区的多字节字符支持。当缓冲区中的多字节字符被禁用时，我们将其&lt;em&gt;称为单字节模式&lt;/em&gt;。在单字节模式下，缓冲区中的每个字符都有一个字符代码，范围从0到255（八进制的0377）；0至127（八进制0177）表示</target>
        </trans-unit>
        <trans-unit id="b47a9ddd69070e836e8773962db03c7cf5ab2f52" translate="yes" xml:space="preserve">
          <source>Underline in color &lt;var&gt;color&lt;/var&gt;, a string specifying a color.</source>
          <target state="translated">在颜色 &lt;var&gt;color&lt;/var&gt; 下划线，该字符串指定颜色。</target>
        </trans-unit>
        <trans-unit id="816d0b4131241274c853cf7d9142c8a9aae7d264" translate="yes" xml:space="preserve">
          <source>Underline with the foreground color of the face.</source>
          <target state="translated">用脸部的前景色划线。</target>
        </trans-unit>
        <trans-unit id="39fc72124884d6573e4f9f89585f071ed0782696" translate="yes" xml:space="preserve">
          <source>Undo</source>
          <target state="translated">Undo</target>
        </trans-unit>
        <trans-unit id="281d39d3bc1033bb4c97a2b3ba9b214c5be68783" translate="yes" xml:space="preserve">
          <source>Undo all replacements and move back to the place where the first replacement was performed.</source>
          <target state="translated">撤销所有的替换,并移回第一次替换的地方。</target>
        </trans-unit>
        <trans-unit id="7b894fcdc32b3ad81a6057bebf7ecb31dc5b3a0c" translate="yes" xml:space="preserve">
          <source>Undo last replacement and move back to the place where that replacement was performed.</source>
          <target state="translated">撤消上一次的更换,并移回进行更换的地方。</target>
        </trans-unit>
        <trans-unit id="d2d0acddfb8713f6b7ec382e14a11ccf344c2f5d" translate="yes" xml:space="preserve">
          <source>Undoing changes to the text of a buffer.</source>
          <target state="translated">撤销对缓冲区文本的修改。</target>
        </trans-unit>
        <trans-unit id="e0bee459f00570042ea5b5eaadd4bbcfcbf90743" translate="yes" xml:space="preserve">
          <source>Unfortunately, this fix introduces another problem, described in the following section.</source>
          <target state="translated">遗憾的是,这一修正带来了另一个问题,将在下一节介绍。</target>
        </trans-unit>
        <trans-unit id="e31b09d65668ba63cf629464412a4848c6cd08d8" translate="yes" xml:space="preserve">
          <source>Unfortunately, this sometimes causes confusion, because some people tend to think in terms of the opposite convention: they imagine the window moving over text that remains in place, so that &amp;ldquo;down&amp;rdquo; commands take you to the end of the buffer. This convention is consistent with fact that such a command is bound to a key named</source>
          <target state="translated">不幸的是，这有时会引起混乱，因为有些人倾向于按照相反的约定思考：他们想象窗口在保留的文本上移动，以便&amp;ldquo;向下&amp;rdquo;命令将您带到缓冲区的末尾。该约定与这样的命令绑定到名为</target>
        </trans-unit>
        <trans-unit id="6d237f1ecdfe656324056d6b62508d4bf63e1755" translate="yes" xml:space="preserve">
          <source>Unless &lt;var&gt;force&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function only deletes the file if it was written by the current Emacs session since the last true save.</source>
          <target state="translated">除非 &lt;var&gt;force&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，否则该函数仅在文件自上次真正保存以来由当前Emacs会话写入时删除文件。</target>
        </trans-unit>
        <trans-unit id="5826c784a9257af0c0f1eb6514a59ac26452a236" translate="yes" xml:space="preserve">
          <source>Unless &lt;var&gt;force&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function refuses to make &lt;var&gt;frame&lt;/var&gt; invisible if all other frames are invisible.</source>
          <target state="translated">除非 &lt;var&gt;force&lt;/var&gt; 是不 &lt;code&gt;nil&lt;/code&gt; ，这个功能拒不 &lt;var&gt;frame&lt;/var&gt; ，如果其他所有的帧都看不见的无形。</target>
        </trans-unit>
        <trans-unit id="ed50acf3c1d6d3ce1772be7e3dbd15d882d5dd0a" translate="yes" xml:space="preserve">
          <source>Unless &lt;var&gt;symbol&lt;/var&gt; is marked as risky (i.e., it has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;risky-local-variable&lt;/code&gt; property), all text properties specified in &lt;var&gt;symbol&lt;/var&gt;&amp;rsquo;s value are ignored. This includes the text properties of strings in &lt;var&gt;symbol&lt;/var&gt;&amp;rsquo;s value, as well as all &lt;code&gt;:eval&lt;/code&gt; and &lt;code&gt;:propertize&lt;/code&gt; forms in it. (The reason for this is security: non-risky variables could be set automatically from file variables without prompting the user.)</source>
          <target state="translated">除非 &lt;var&gt;symbol&lt;/var&gt; 被标记为高风险（即它有一个非 &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;risky-local-variable&lt;/code&gt; 属性），在指定的所有文字性质 &lt;var&gt;symbol&lt;/var&gt; 的价值被忽略。其中包括 &lt;var&gt;symbol&lt;/var&gt; 值中字符串的文本属性，以及其中的所有 &lt;code&gt;:eval&lt;/code&gt; 和 &lt;code&gt;:propertize&lt;/code&gt; 形式。 （这样做的原因是安全性：可以从文件变量中自动设置非风险变量，而无需提示用户。）</target>
        </trans-unit>
        <trans-unit id="c3f7337161f1704f9af17cc57bd41d608e24679e" translate="yes" xml:space="preserve">
          <source>Unless there is a very good reason to prefer &lt;code&gt;left&lt;/code&gt; or &lt;code&gt;right&lt;/code&gt;, it is usually preferable to mark operators as associative, using &lt;code&gt;assoc&lt;/code&gt;. For that reason &lt;code&gt;&quot;+&quot;&lt;/code&gt; and &lt;code&gt;&quot;*&quot;&lt;/code&gt; are defined above as &lt;code&gt;assoc&lt;/code&gt;, although the language defines them formally as left associative.</source>
          <target state="translated">除非有很好的理由偏爱 &lt;code&gt;left&lt;/code&gt; 或 &lt;code&gt;right&lt;/code&gt; ，否则通常最好使用 &lt;code&gt;assoc&lt;/code&gt; 将运算符标记为关联的。因此， &lt;code&gt;&quot;+&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;*&quot;&lt;/code&gt; 在上面被定义为 &lt;code&gt;assoc&lt;/code&gt; ，尽管语言在形式上将它们定义为左关联。</target>
        </trans-unit>
        <trans-unit id="cd3fc851b5c5995784a99ba41df02359a405266e" translate="yes" xml:space="preserve">
          <source>Unless you start Emacs with the</source>
          <target state="translated">除非你在启动Emacs时使用</target>
        </trans-unit>
        <trans-unit id="0d6a87b2e11856ded731eaa5449bda0617f91c77" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;%&lt;/code&gt;, &lt;code&gt;mod&lt;/code&gt; permits floating-point arguments; it rounds the quotient downward (towards minus infinity) to an integer, and uses that quotient to compute the remainder.</source>
          <target state="translated">与 &lt;code&gt;%&lt;/code&gt; 不同， &lt;code&gt;mod&lt;/code&gt; 允许使用浮点参数。它将商向下（朝负无穷大）取整为整数，并使用该商计算余数。</target>
        </trans-unit>
        <trans-unit id="d8bb808b59c029dcccf366b325ed96c4c8aa345d" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;format&lt;/code&gt;, which assigns specific meanings to a fixed set of specification characters, &lt;code&gt;format-spec&lt;/code&gt; accepts arbitrary specification characters and treats them all equally. For example:</source>
          <target state="translated">与 &lt;code&gt;format&lt;/code&gt; 不同，format将特定的含义分配给固定的一组规范字符，而 &lt;code&gt;format-spec&lt;/code&gt; 接受任意规范字符并将它们等同对待。例如：</target>
        </trans-unit>
        <trans-unit id="a6cf67239e5b30fc7b19173ff18498cd7ce1c68a" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;functionp&lt;/code&gt;, the next three functions do &lt;em&gt;not&lt;/em&gt; treat a symbol as its function definition.</source>
          <target state="translated">与 &lt;code&gt;functionp&lt;/code&gt; 不同，接下来的三个函数&lt;em&gt;不&lt;/em&gt;将符号视为其函数定义。</target>
        </trans-unit>
        <trans-unit id="fbe5ba18622c8386029b3b94e1482dcf799ecf8e" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;load&lt;/code&gt;, &lt;code&gt;module-load&lt;/code&gt; doesn&amp;rsquo;t record the module in &lt;code&gt;load-history&lt;/code&gt;, doesn&amp;rsquo;t print any messages, and doesn&amp;rsquo;t protect against recursive loads. Most users should therefore use &lt;code&gt;load&lt;/code&gt;, &lt;code&gt;load-file&lt;/code&gt;, &lt;code&gt;load-library&lt;/code&gt;, or &lt;code&gt;require&lt;/code&gt; instead of &lt;code&gt;module-load&lt;/code&gt;.</source>
          <target state="translated">与 &lt;code&gt;load&lt;/code&gt; 不同， &lt;code&gt;module-load&lt;/code&gt; 不会在 &lt;code&gt;load-history&lt;/code&gt; 中记录模块，不打印任何消息，也不能防止递归负载。因此，大多数用户应使用 &lt;code&gt;load&lt;/code&gt; ， &lt;code&gt;load-file&lt;/code&gt; ， &lt;code&gt;load-library&lt;/code&gt; 或 &lt;code&gt;require&lt;/code&gt; 而不是 &lt;code&gt;module-load&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="050d0f6ebf1d3c5888f57236e32c18d5f3ebd92e" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;pcase-let&lt;/code&gt;, but similarly to &lt;code&gt;let*&lt;/code&gt;, each &lt;var&gt;exp&lt;/var&gt; is matched against its corresponding &lt;var&gt;pattern&lt;/var&gt; before processing the next element of &lt;var&gt;bindings&lt;/var&gt;, so the variable bindings introduced in each one of the &lt;var&gt;bindings&lt;/var&gt; are available in the &lt;var&gt;exp&lt;/var&gt;s of the &lt;var&gt;bindings&lt;/var&gt; that follow it, additionally to being available in &lt;var&gt;body&lt;/var&gt;.</source>
          <target state="translated">不像 &lt;code&gt;pcase-let&lt;/code&gt; ，但同样地 &lt;code&gt;let*&lt;/code&gt; ，每个 &lt;var&gt;exp&lt;/var&gt; 是针对其对应的匹配 &lt;var&gt;pattern&lt;/var&gt; 处理的下一个元素之前 &lt;var&gt;bindings&lt;/var&gt; ，所以在每一个引入的变量绑定 &lt;var&gt;bindings&lt;/var&gt; 是在可用 &lt;var&gt;exp&lt;/var&gt; 的第 &lt;var&gt;bindings&lt;/var&gt; 它后面除了 &lt;var&gt;body&lt;/var&gt; 可用。</target>
        </trans-unit>
        <trans-unit id="3bf0d69557efdc7fd270f0f047fffdb2efe2201b" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;read-key-sequence&lt;/code&gt;, this function does not modify the specified events in ways that discard information (see &lt;a href=&quot;key-sequence-input#Key-Sequence-Input&quot;&gt;Key Sequence Input&lt;/a&gt;). In particular, it does not convert letters to lower case and it does not change drag events to clicks.</source>
          <target state="translated">与 &lt;code&gt;read-key-sequence&lt;/code&gt; 不同，此函数不会以丢弃信息的方式修改指定的事件（请参阅&lt;a href=&quot;key-sequence-input#Key-Sequence-Input&quot;&gt;Key Sequence Input&lt;/a&gt;）。特别是，它不会将字母转换为小写，也不会将拖动事件更改为点击。</target>
        </trans-unit>
        <trans-unit id="40ee735c829abf5224229748444b930045adae65" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;window-body-width&lt;/code&gt;, this function accounts for the actual size of &lt;var&gt;face&lt;/var&gt;&amp;rsquo;s font, instead of working in units of the canonical character width of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s frame (see &lt;a href=&quot;frame-font#Frame-Font&quot;&gt;Frame Font&lt;/a&gt;). It also accounts for space used by the continuation glyph, if &lt;var&gt;window&lt;/var&gt; lacks one or both of its fringes.</source>
          <target state="translated">与 &lt;code&gt;window-body-width&lt;/code&gt; 不同，此函数考虑 &lt;var&gt;face&lt;/var&gt; 字体的实际大小，而不是以 &lt;var&gt;window&lt;/var&gt; 框架的规范字符宽度为单位进行工作（请参见&lt;a href=&quot;frame-font#Frame-Font&quot;&gt;Frame Font&lt;/a&gt;）。如果 &lt;var&gt;window&lt;/var&gt; 缺少其一个或两个边缘，则它还会考虑连续字形所使用的空间。</target>
        </trans-unit>
        <trans-unit id="e59462d4b500be2d6de3f19f9797422c88586dfe" translate="yes" xml:space="preserve">
          <source>Unlike X windows, Emacs windows are &lt;em&gt;tiled&lt;/em&gt;; they never overlap within the area of the frame. When a window is created, resized, or deleted, the change in window space is taken from or given to the adjacent windows, so that the total area of the frame is unchanged.</source>
          <target state="translated">与X窗口不同，Emacs窗口是&lt;em&gt;平铺的&lt;/em&gt;；它们不会在框架区域内重叠。创建，调整大小或删除窗口时，窗口空间的变化是从相邻窗口获取或赋予相邻窗口，因此框架的总面积不变。</target>
        </trans-unit>
        <trans-unit id="bfbfd1f29164e78b4210b38e600ffb42ab7d02bf" translate="yes" xml:space="preserve">
          <source>Unlike most minor modes, there is no &lt;code&gt;auto-save-mode&lt;/code&gt; variable. Auto Save mode is enabled if &lt;code&gt;buffer-auto-save-file-name&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt; and &lt;code&gt;buffer-saved-size&lt;/code&gt; (see below) is non-zero.</source>
          <target state="translated">与大多数次要模式不同，没有 &lt;code&gt;auto-save-mode&lt;/code&gt; 变量。如果 &lt;code&gt;buffer-auto-save-file-name&lt;/code&gt; 不为 &lt;code&gt;nil&lt;/code&gt; 并且 &lt;code&gt;buffer-saved-size&lt;/code&gt; （参见下文）为非零，则启用自动保存模式。</target>
        </trans-unit>
        <trans-unit id="ae59e03f00d2a8a0d7adc3d6f352735a53eb1ba0" translate="yes" xml:space="preserve">
          <source>Unlike with other similar hooks, when Emacs calls these functions, &lt;code&gt;inhibit-modification-hooks&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; get bound to non-&lt;code&gt;nil&lt;/code&gt;. If the functions modify the buffer, you should consider binding this variable to non-&lt;code&gt;nil&lt;/code&gt; to prevent any buffer changes running the change hooks. Otherwise, you must be prepared for recursive calls. See &lt;a href=&quot;change-hooks#Change-Hooks&quot;&gt;Change Hooks&lt;/a&gt;.</source>
          <target state="translated">不同于与其他类似的挂钩，当Emacs中调用这些函数， &lt;code&gt;inhibit-modification-hooks&lt;/code&gt; 并&lt;em&gt;不能&lt;/em&gt;获取绑定到非 &lt;code&gt;nil&lt;/code&gt; 。如果函数修改了缓冲区，则应考虑将此变量绑定为 &lt;code&gt;nil&lt;/code&gt; ,以防止任何缓冲区更改运行更改挂钩。否则，您必须为递归调用做好准备。请参阅&amp;ldquo;&lt;a href=&quot;change-hooks#Change-Hooks&quot;&gt;更改挂钩&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b0dd9a8036a712c8a1d9b9ebb330912c29faad7f" translate="yes" xml:space="preserve">
          <source>Unloading</source>
          <target state="translated">Unloading</target>
        </trans-unit>
        <trans-unit id="169daf44b90db9844104deace7c2d65b96ca84a7" translate="yes" xml:space="preserve">
          <source>Unpack/pack this field according to the type specification &lt;var&gt;type&lt;/var&gt;.</source>
          <target state="translated">根据类型说明 &lt;var&gt;type&lt;/var&gt; 打开/包装此字段。</target>
        </trans-unit>
        <trans-unit id="5944c4e306b00ce4acba6e0c05e4d28fb5eccbaf" translate="yes" xml:space="preserve">
          <source>Unset any breakpoints in the current form (&lt;code&gt;edebug-unset-breakpoints&lt;/code&gt;).</source>
          <target state="translated">取消 &lt;code&gt;edebug-unset-breakpoints&lt;/code&gt; 当前形式的所有断点（edebug-unset-breakpoints）。</target>
        </trans-unit>
        <trans-unit id="42357abaaff65af9bf691adce20cfa004bd2fbd6" translate="yes" xml:space="preserve">
          <source>Unset the breakpoint (if any) at the stop point at or after point (&lt;code&gt;edebug-unset-breakpoint&lt;/code&gt;).</source>
          <target state="translated">在终止点（ &lt;code&gt;edebug-unset-breakpoint&lt;/code&gt; ）或之后的终止点取消设置断点（如果有）。</target>
        </trans-unit>
        <trans-unit id="1abd54e069ad62b6a851c7507133d2798043f0cc" translate="yes" xml:space="preserve">
          <source>Unsigned byte, with length 1.</source>
          <target state="translated">无符号字节,长度为1。</target>
        </trans-unit>
        <trans-unit id="7a58f2c59f09e32940adaa60f399e8f16efaca5d" translate="yes" xml:space="preserve">
          <source>Unsigned integer in little endian order, with length 2, 3 and 4, respectively.</source>
          <target state="translated">按小恩字顺序排列的无符号整数,长度分别为2、3、4。</target>
        </trans-unit>
        <trans-unit id="efce86b9c675e2105ba635bfd05c044cd1416dfc" translate="yes" xml:space="preserve">
          <source>Unsigned integer in network byte order, with length 2.</source>
          <target state="translated">按网络字节顺序排列的无符号整数,长度为2。</target>
        </trans-unit>
        <trans-unit id="cdc58b621424ac5c9f159d2a34ccb08ff1c15724" translate="yes" xml:space="preserve">
          <source>Unsigned integer in network byte order, with length 3.</source>
          <target state="translated">按网络字节顺序排列的无符号整数,长度为3。</target>
        </trans-unit>
        <trans-unit id="fa42938e718c4e082432b53be6b2d37849b80c45" translate="yes" xml:space="preserve">
          <source>Unsigned integer in network byte order, with length 4. Note: These values may be limited by Emacs&amp;rsquo;s integer implementation limits.</source>
          <target state="translated">网络字节顺序的无符号整数，长度为4。注意：这些值可能会受到Emacs的整数实现限制的限制。</target>
        </trans-unit>
        <trans-unit id="6de3a7bbeb0d0f3a3acd1346d1f7d9a305cda13c" translate="yes" xml:space="preserve">
          <source>Up to reordering, the resulting regexp of &lt;code&gt;regexp-opt&lt;/code&gt; is equivalent to but usually more efficient than that of a simplified version:</source>
          <target state="translated">直到重新排序，生成的 &lt;code&gt;regexp-opt&lt;/code&gt; 的regexp与简化版本等效，但通常比简化版本更有效：</target>
        </trans-unit>
        <trans-unit id="8247becf9ac6653a02a39777ce74cbe014920503" translate="yes" xml:space="preserve">
          <source>Update the list of threads and their statuses.</source>
          <target state="translated">更新线程列表及其状态。</target>
        </trans-unit>
        <trans-unit id="0611993c1afe354549b1d86771c424e02f72189c" translate="yes" xml:space="preserve">
          <source>Upon reading, each object inside the parentheses becomes an element of the list. That is, a cons cell is made for each element. The &lt;small&gt;CAR&lt;/small&gt; slot of the cons cell holds the element, and its &lt;small&gt;CDR&lt;/small&gt; slot refers to the next cons cell of the list, which holds the next element in the list. The &lt;small&gt;CDR&lt;/small&gt; slot of the last cons cell is set to hold &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">阅读时，括号内的每个对象将成为列表的元素。即，为每个元素制作一个cons单元。cons单元格的&lt;small&gt;CAR&lt;/small&gt;插槽保存该元素，而其&lt;small&gt;CDR&lt;/small&gt;插槽引用列表的下一个cons单元格，该单元格保存列表中的下一个元素。最后一个cons单元的&lt;small&gt;CDR&lt;/small&gt;插槽设置为保持 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d144995a54b686ad33ed928d9139095bb3a1b891" translate="yes" xml:space="preserve">
          <source>Upper-case format sequences produce the units in addition to the numbers, lower-case formats produce only the numbers.</source>
          <target state="translated">大写格式序列除产生数字外还产生单位,小写格式只产生数字。</target>
        </trans-unit>
        <trans-unit id="1d4d43cc6f3a833e0340a0d1794b6d7b9958657e" translate="yes" xml:space="preserve">
          <source>Use</source>
          <target state="translated">Use</target>
        </trans-unit>
        <trans-unit id="dce40f834de5af3d15d079c90384193566a0f882" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;#&lt;var&gt;n&lt;/var&gt;=&lt;/code&gt; before an object to label it for later reference; subsequently, you can use &lt;code&gt;#&lt;var&gt;n&lt;/var&gt;#&lt;/code&gt; to refer the same object in another place. Here, &lt;var&gt;n&lt;/var&gt; is some integer. For example, here is how to make a list in which the first element recurs as the third element:</source>
          <target state="translated">使用 &lt;code&gt;#&lt;var&gt;n&lt;/var&gt;=&lt;/code&gt; 一个目的是将其标记以供日后参考之前; 随后，可以使用 &lt;code&gt;#&lt;var&gt;n&lt;/var&gt;#&lt;/code&gt; 引用另一个地方的同一对象。在这里， &lt;var&gt;n&lt;/var&gt; 是一些整数。例如，这是如何制作一个列表，其中第一个元素作为第三个元素重复出现：</target>
        </trans-unit>
        <trans-unit id="ccffc72e351b0553a988e650238e8c1469d03ca7" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;:group &lt;var&gt;group&lt;/var&gt;&lt;/code&gt; in &lt;var&gt;keyword-args&lt;/var&gt; to specify the custom group for the mode variable of the global minor mode.</source>
          <target state="translated">在 &lt;var&gt;keyword-args&lt;/var&gt; 使用 &lt;code&gt;:group &lt;var&gt;group&lt;/var&gt;&lt;/code&gt; 可以为全局次要模式的mode变量指定自定义组。</target>
        </trans-unit>
        <trans-unit id="7fd388e2d50e3c627cb73d3dd1f0e9147989998b" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;aref&lt;/code&gt; (see &lt;a href=&quot;array-functions#Array-Functions&quot;&gt;Array Functions&lt;/a&gt;) to get the raw syntax descriptor of a character, e.g. &lt;code&gt;(aref&amp;nbsp;(syntax-table)&amp;nbsp;ch)&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;aref&lt;/code&gt; （请参见&lt;a href=&quot;array-functions#Array-Functions&quot;&gt;Array Functions&lt;/a&gt;）获取字符的原始语法描述符，例如 &lt;code&gt;(aref&amp;nbsp;(syntax-table)&amp;nbsp;ch)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="97f5bc88905c68246d63968fb55583b4c0401b5b" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;nil&lt;/code&gt; as the first of the &lt;var&gt;debugger-args&lt;/var&gt; when you want to enter the debugger explicitly. The rest of the &lt;var&gt;debugger-args&lt;/var&gt; are printed on the top line of the buffer. You can use this feature to display messages&amp;mdash;for example, to remind yourself of the conditions under which &lt;code&gt;debug&lt;/code&gt; is called.</source>
          <target state="translated">要显式进入调试器时，请使用 &lt;code&gt;nil&lt;/code&gt; 作为 &lt;var&gt;debugger-args&lt;/var&gt; 的第一个。其余的 &lt;var&gt;debugger-args&lt;/var&gt; 打印在缓冲区的第一行。您可以使用此功能显示消息，例如，提醒自己调用 &lt;code&gt;debug&lt;/code&gt; 的条件。</target>
        </trans-unit>
        <trans-unit id="0956088b61a3b050e1ce95a50a000de591b2a084" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;sleep-for&lt;/code&gt; when you wish to guarantee a delay.</source>
          <target state="translated">当您希望保证延迟时，请使用 &lt;code&gt;sleep-for&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="95289ce6217988d0cb02f420011f6eb1c1819184" translate="yes" xml:space="preserve">
          <source>Use &lt;var&gt;buffer&lt;/var&gt; as the process buffer.</source>
          <target state="translated">使用 &lt;var&gt;buffer&lt;/var&gt; 作为进程缓冲区。</target>
        </trans-unit>
        <trans-unit id="b4d4613860b33fc7e36026b575b43d5abf76f8ad" translate="yes" xml:space="preserve">
          <source>Use &lt;var&gt;buffer&lt;/var&gt; as the process buffer. If the value is &lt;code&gt;nil&lt;/code&gt;, the subprocess is not associated with any buffer.</source>
          <target state="translated">使用 &lt;var&gt;buffer&lt;/var&gt; 作为进程缓冲区。如果值为 &lt;code&gt;nil&lt;/code&gt; ，则子进程不与任何缓冲区关联。</target>
        </trans-unit>
        <trans-unit id="ae0796dcc8e3e6384925cf1d83afc1011c2029ac" translate="yes" xml:space="preserve">
          <source>Use &lt;var&gt;coding&lt;/var&gt; as the coding system for this process. To specify different coding systems for decoding data from the connection and for encoding data sent to it, specify &lt;code&gt;(&lt;var&gt;decoding&lt;/var&gt; .
&lt;var&gt;encoding&lt;/var&gt;)&lt;/code&gt; for &lt;var&gt;coding&lt;/var&gt;.</source>
          <target state="translated">使用 &lt;var&gt;coding&lt;/var&gt; 作为此过程的编码系统。要指定不同的编码系统以解码来自连接的数据并编码发送给连接的数据，请指定 &lt;code&gt;(&lt;var&gt;decoding&lt;/var&gt; . &lt;var&gt;encoding&lt;/var&gt;)&lt;/code&gt; 以进行 &lt;var&gt;coding&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="5de94f1a819715bbebc572fc610f1b1589d72d68" translate="yes" xml:space="preserve">
          <source>Use &lt;var&gt;command&lt;/var&gt; as the command line of the process. The value should be a list starting with the program&amp;rsquo;s executable file name, followed by strings to give to the program as its arguments. If the first element of the list is &lt;code&gt;nil&lt;/code&gt;, Emacs opens a new pseudoterminal (pty) and associates its input and output with &lt;var&gt;buffer&lt;/var&gt;, without actually running any program; the rest of the list elements are ignored in that case.</source>
          <target state="translated">使用 &lt;var&gt;command&lt;/var&gt; 作为过程的命令行。该值应该是一个列表，该列表以程序的可执行文件名开头，后跟要作为程序参数的字符串。如果列表的第一个元素为 &lt;code&gt;nil&lt;/code&gt; ，则Emacs将打开一个新的伪终端（pty）并将其输入和输出与 &lt;var&gt;buffer&lt;/var&gt; 关联，而无需实际运行任何程序。在这种情况下，其余列表元素将被忽略。</target>
        </trans-unit>
        <trans-unit id="18aee7a37cad775c5df86383a5963752bd15dbd0" translate="yes" xml:space="preserve">
          <source>Use &lt;var&gt;criteria&lt;/var&gt; to match possible values. This is used only in &lt;code&gt;restricted-sexp&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;var&gt;criteria&lt;/var&gt; 匹配可能的值。这仅在 &lt;code&gt;restricted-sexp&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6d6302eef993c5fd4313ae0b3049c27cc8e3bc78" translate="yes" xml:space="preserve">
          <source>Use &lt;var&gt;doc&lt;/var&gt; as the documentation string for this value (or part of the value) that corresponds to this type. In order for this to work, you must specify a value for &lt;code&gt;:format&lt;/code&gt;, and use &amp;lsquo;</source>
          <target state="translated">使用 &lt;var&gt;doc&lt;/var&gt; 作为与此类型对应的此值（或值的一部分）的文档字符串。为了使它起作用，您必须为 &lt;code&gt;:format&lt;/code&gt; 指定一个值，并使用'</target>
        </trans-unit>
        <trans-unit id="38a0a6267f5c5df6416398696c8987a607fb2de2" translate="yes" xml:space="preserve">
          <source>Use &lt;var&gt;label&lt;/var&gt;, a string, instead of the item&amp;rsquo;s name, to label the item in customization menus and buffers. &lt;strong&gt;Don&amp;rsquo;t use a tag which is substantially different from the item&amp;rsquo;s real name; that would cause confusion.&lt;/strong&gt;</source>
          <target state="translated">使用 &lt;var&gt;label&lt;/var&gt; （字符串，而不是项目名称）在自定义菜单和缓冲区中标记该项目。&lt;strong&gt;请勿使用与商品的真实姓名有实质性差异的标签；那会引起混乱。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1a14e6a2fe2d56471b74b10a9d37a3f1cf80fff5" translate="yes" xml:space="preserve">
          <source>Use &lt;var&gt;tag&lt;/var&gt; (a string) as the tag for the value (or part of the value) that corresponds to this type.</source>
          <target state="translated">使用 &lt;var&gt;tag&lt;/var&gt; （字符串）作为与此类型相对应的值（或值的一部分）的标签。</target>
        </trans-unit>
        <trans-unit id="37fb399c005854ea1a1f14512c0a9f758ca0982a" translate="yes" xml:space="preserve">
          <source>Use &lt;var&gt;tag&lt;/var&gt; as the name of this alternative, for user communication purposes. This is useful for a type that appears inside of a &lt;code&gt;choice&lt;/code&gt;.</source>
          <target state="translated">为了用户交流的目的，请使用 &lt;var&gt;tag&lt;/var&gt; 作为此替代项的名称。这对于出现在 &lt;code&gt;choice&lt;/code&gt; 内部的类型很有用。</target>
        </trans-unit>
        <trans-unit id="c1a19b4f2d1b6bed331d284fa9f2181ea3e87908" translate="yes" xml:space="preserve">
          <source>Use &lt;var&gt;tip&lt;/var&gt; as the tooltip for the notification. If &lt;var&gt;tip&lt;/var&gt; is a string, this is the text of a tooltip that will be shown when the mouse pointer hovers over the tray icon added by the notification. If &lt;var&gt;tip&lt;/var&gt; is not a string, or if this parameter is not specified, the default tooltip text is &amp;lsquo;</source>
          <target state="translated">使用 &lt;var&gt;tip&lt;/var&gt; 作为通知的工具提示。如果 &lt;var&gt;tip&lt;/var&gt; 是字符串，则这是工具提示的文本，当鼠标指针悬停在通知添加的托盘图标上时，将显示该提示。如果 &lt;var&gt;tip&lt;/var&gt; 不是字符串，或者未指定此参数，则默认的工具提示文本为'</target>
        </trans-unit>
        <trans-unit id="fbca07f69bbb0a518ed4235913b478f281e538dc" translate="yes" xml:space="preserve">
          <source>Use &lt;var&gt;type&lt;/var&gt; as the data type for this option. It specifies which values are legitimate, and how to display the value (see &lt;a href=&quot;customization-types#Customization-Types&quot;&gt;Customization Types&lt;/a&gt;). Every &lt;code&gt;defcustom&lt;/code&gt; should specify a value for this keyword.</source>
          <target state="translated">使用 &lt;var&gt;type&lt;/var&gt; 作为此选项的数据类型。它指定哪些值是合法的，以及如何显示该值（请参阅&amp;ldquo;&lt;a href=&quot;customization-types#Customization-Types&quot;&gt;自定义类型&amp;rdquo;&lt;/a&gt;）。每个 &lt;code&gt;defcustom&lt;/code&gt; 都应为此关键字指定一个值。</target>
        </trans-unit>
        <trans-unit id="8347ef3a24625aac52e35d187706fdf7865b09d9" translate="yes" xml:space="preserve">
          <source>Use &lt;var&gt;variable&lt;/var&gt; (a symbol) as the history list, and assume that the initial history position is &lt;var&gt;startpos&lt;/var&gt; (a nonnegative integer).</source>
          <target state="translated">使用 &lt;var&gt;variable&lt;/var&gt; （符号）作为历史记录列表，并假定初始历史记录位置为 &lt;var&gt;startpos&lt;/var&gt; （非负整数）。</target>
        </trans-unit>
        <trans-unit id="f9ea11ecb24ac51a9fd9a1426a3f575f2b9af5eb" translate="yes" xml:space="preserve">
          <source>Use &lt;var&gt;variable&lt;/var&gt; (a symbol) as the history list.</source>
          <target state="translated">使用 &lt;var&gt;variable&lt;/var&gt; （符号）作为历史记录列表。</target>
        </trans-unit>
        <trans-unit id="56a94bf7f718cdf3377f1e36d09002168c3e86e8" translate="yes" xml:space="preserve">
          <source>Use a &lt;code&gt;(:propertize &lt;var&gt;elt&lt;/var&gt; &lt;var&gt;props&lt;/var&gt;&amp;hellip;)&lt;/code&gt; construct to give &lt;var&gt;elt&lt;/var&gt; a text property specified by &lt;var&gt;props&lt;/var&gt;.</source>
          <target state="translated">使用 &lt;code&gt;(:propertize &lt;var&gt;elt&lt;/var&gt; &lt;var&gt;props&lt;/var&gt;&amp;hellip;)&lt;/code&gt; 构造为 &lt;var&gt;elt&lt;/var&gt; 提供 &lt;var&gt;props&lt;/var&gt; 指定的文本属性。</target>
        </trans-unit>
        <trans-unit id="d327ac5f8db2005904ae2fe386ee6bf398215ced" translate="yes" xml:space="preserve">
          <source>Use a list containing &lt;code&gt;:eval &lt;var&gt;form&lt;/var&gt;&lt;/code&gt; in the mode line data structure, and make &lt;var&gt;form&lt;/var&gt; evaluate to a string that has a text property.</source>
          <target state="translated">在模式行数据结构中使用包含 &lt;code&gt;:eval &lt;var&gt;form&lt;/var&gt;&lt;/code&gt; 的列表，并使 &lt;var&gt;form&lt;/var&gt; 评估为具有text属性的字符串。</target>
        </trans-unit>
        <trans-unit id="89e4e5ba0adc2e1f1eb81797d1aaf2efa1fc3014" translate="yes" xml:space="preserve">
          <source>Use of &lt;var&gt;initial&lt;/var&gt; is mostly deprecated; we recommend using a non-&lt;code&gt;nil&lt;/code&gt; value only in conjunction with specifying a cons cell for &lt;var&gt;history&lt;/var&gt;. See &lt;a href=&quot;initial-input#Initial-Input&quot;&gt;Initial Input&lt;/a&gt;.</source>
          <target state="translated">&lt;var&gt;initial&lt;/var&gt; 不推荐使用initial；我们建议仅在为 &lt;var&gt;history&lt;/var&gt; 指定cons单元格的同时使用 &lt;code&gt;nil&lt;/code&gt; 值。请参阅&lt;a href=&quot;initial-input#Initial-Input&quot;&gt;初始输入&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d29d21b34e96e2c562ed13312bc737a094a646d2" translate="yes" xml:space="preserve">
          <source>Use of a cons cell as the value for &lt;var&gt;initial&lt;/var&gt; arguments is deprecated.</source>
          <target state="translated">不建议使用con单元格作为 &lt;var&gt;initial&lt;/var&gt; 参数的值。</target>
        </trans-unit>
        <trans-unit id="9e43930964ad425cf199261b9f37fee68dd1457a" translate="yes" xml:space="preserve">
          <source>Use of encoding for terminal I/O.</source>
          <target state="translated">对终端I/O使用编码。</target>
        </trans-unit>
        <trans-unit id="d270630ab107723a28dcfa4dcdbf3420a9e423fb" translate="yes" xml:space="preserve">
          <source>Use of the minibuffer reads input events, and that alters the values of variables such as &lt;code&gt;this-command&lt;/code&gt; and &lt;code&gt;last-command&lt;/code&gt; (see &lt;a href=&quot;command-loop-info#Command-Loop-Info&quot;&gt;Command Loop Info&lt;/a&gt;). Your program should bind them around the code that uses the minibuffer, if you do not want that to change them.</source>
          <target state="translated">迷你缓冲区的使用读取输入事件，并更改变量的值，例如 &lt;code&gt;this-command&lt;/code&gt; 和 &lt;code&gt;last-command&lt;/code&gt; （请参见&lt;a href=&quot;command-loop-info#Command-Loop-Info&quot;&gt;Command Loop Info&lt;/a&gt;）。如果您不希望更改它们，则程序应将它们绑定到使用迷你缓冲区的代码周围。</target>
        </trans-unit>
        <trans-unit id="5347ff425a354417e9a1d6637d256e051dba9bee" translate="yes" xml:space="preserve">
          <source>Use overlays to highlight parts of the buffer.</source>
          <target state="translated">使用叠加来突出缓冲区的部分。</target>
        </trans-unit>
        <trans-unit id="fc53c16cff054002cb490fb1d90b039f3094274b" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;:set&lt;/code&gt; function to initialize the variable, if it is already set or has been customized; otherwise, just use &lt;code&gt;set-default&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;:set&lt;/code&gt; 函数初始化变量（如果已设置或已自定义）；否则，只需使用 &lt;code&gt;set-default&lt;/code&gt; 即可。</target>
        </trans-unit>
        <trans-unit id="924756e5be9d1baf0a3599f7c292dd2e27c179ce" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;font-lock-fontify-region-function&lt;/code&gt; hook similarly to extend the scan so that the scanned text never starts or ends in the middle of a multiline construct.</source>
          <target state="translated">类似地使用 &lt;code&gt;font-lock-fontify-region-function&lt;/code&gt; 钩子来扩展扫描，以使扫描的文本永远不会在多行构造的中间开始或结束。</target>
        </trans-unit>
        <trans-unit id="591db228b5d39738df1ff275555b37fe6f05e83c" translate="yes" xml:space="preserve">
          <source>Use the command</source>
          <target state="translated">使用命令</target>
        </trans-unit>
        <trans-unit id="5ebe07c9360bde756d125a996dff0141df0191e1" translate="yes" xml:space="preserve">
          <source>Use the elements of &lt;var&gt;argument-list&lt;/var&gt; as the arguments of the type construct. For instance, &lt;code&gt;(const :args (foo))&lt;/code&gt; is equivalent to &lt;code&gt;(const foo)&lt;/code&gt;. You rarely need to write &lt;code&gt;:args&lt;/code&gt; explicitly, because normally the arguments are recognized automatically as whatever follows the last keyword-value pair.</source>
          <target state="translated">使用 &lt;var&gt;argument-list&lt;/var&gt; 的元素作为类型构造的参数。例如， &lt;code&gt;(const :args (foo))&lt;/code&gt; 等同于 &lt;code&gt;(const foo)&lt;/code&gt; 。您很少需要显式地编写 &lt;code&gt;:args&lt;/code&gt; ，因为通常参数会自动识别为最后一个关键字/值对之后的内容。</target>
        </trans-unit>
        <trans-unit id="bcb154cf5a3a53ca3d408af20c24cb5e6ad4d8bc" translate="yes" xml:space="preserve">
          <source>Use the face &lt;var&gt;face&lt;/var&gt; (a face name or a list of face names) for button text displayed with &amp;lsquo;</source>
          <target state="translated">使用脸 &lt;var&gt;face&lt;/var&gt; （人脸名称或面部名的列表）与&amp;ldquo;显示按钮文本</target>
        </trans-unit>
        <trans-unit id="77283a6ddab4699e1e393d2d33775cd38ddabb0d" translate="yes" xml:space="preserve">
          <source>Use the string &lt;var&gt;name&lt;/var&gt; as the process name. As with &lt;code&gt;make-process&lt;/code&gt;, it is modified if necessary to make it unique.</source>
          <target state="translated">使用字符串 &lt;var&gt;name&lt;/var&gt; 作为进程名称。与 &lt;code&gt;make-process&lt;/code&gt; 一样，如有必要对其进行修改以使其唯一。</target>
        </trans-unit>
        <trans-unit id="f6bb25da68a52ad5e36645a8fc9c911e2d5c2b06" translate="yes" xml:space="preserve">
          <source>Use the string &lt;var&gt;name&lt;/var&gt; as the process name. It is modified if necessary to make it unique.</source>
          <target state="translated">使用字符串 &lt;var&gt;name&lt;/var&gt; 作为进程名称。如果有必要对其进行修改以使其唯一。</target>
        </trans-unit>
        <trans-unit id="8db9c19cb7d83234e6a5adedbe26edfea639a5a7" translate="yes" xml:space="preserve">
          <source>Use the string &lt;var&gt;name&lt;/var&gt; as the process name; if a process with this name already exists, then &lt;var&gt;name&lt;/var&gt; is modified (by appending &amp;lsquo;</source>
          <target state="translated">使用字符串 &lt;var&gt;name&lt;/var&gt; 作为进程名称；如果已经存在使用该名称的进程，则该 &lt;var&gt;name&lt;/var&gt; 被修改（通过添加&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="43724c02820653276c4e926ae11aa9da78260343" translate="yes" xml:space="preserve">
          <source>Use the variable&amp;rsquo;s &lt;code&gt;:set&lt;/code&gt; function to initialize the variable, but do not reinitialize it if it is already non-void.</source>
          <target state="translated">使用变量的 &lt;code&gt;:set&lt;/code&gt; 函数来初始化变量，但是如果它已经是非空的，则不要重新初始化它。</target>
        </trans-unit>
        <trans-unit id="32e078501df17012ea8d38101904d103fdf84f68" translate="yes" xml:space="preserve">
          <source>Use vectors instead of strings for key sequences, when you plan to use them for anything other than as arguments to &lt;code&gt;lookup-key&lt;/code&gt; and &lt;code&gt;define-key&lt;/code&gt;. For example, you can use &lt;code&gt;read-key-sequence-vector&lt;/code&gt; instead of &lt;code&gt;read-key-sequence&lt;/code&gt;, and &lt;code&gt;this-command-keys-vector&lt;/code&gt; instead of &lt;code&gt;this-command-keys&lt;/code&gt;.</source>
          <target state="translated">当您计划将向量用于除 &lt;code&gt;lookup-key&lt;/code&gt; 和 &lt;code&gt;define-key&lt;/code&gt; 的参数之外的其他任何东西时，请使用向量而不是字符串作为键序列。例如，您可以使用 &lt;code&gt;read-key-sequence-vector&lt;/code&gt; 代替 &lt;code&gt;read-key-sequence&lt;/code&gt; ，并且使用 &lt;code&gt;this-command-keys-vector&lt;/code&gt; 代替 &lt;code&gt;this-command-keys&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1d437051055eedcc2ca89645536d3211050f05cd" translate="yes" xml:space="preserve">
          <source>Use vectors to write key sequence constants containing meta characters, even when passing them directly to &lt;code&gt;define-key&lt;/code&gt;.</source>
          <target state="translated">使用向量编写包含元字符的键序列常量，即使将它们直接传递给 &lt;code&gt;define-key&lt;/code&gt; 也不例外。</target>
        </trans-unit>
        <trans-unit id="db3eece4ecc1dc6e264461d6ea4ffad9165b70f4" translate="yes" xml:space="preserve">
          <source>Used for different types of fringe cursors.</source>
          <target state="translated">用于不同类型的流苏光标。</target>
        </trans-unit>
        <trans-unit id="b538c7641de65de254e5145946df36d16687694a" translate="yes" xml:space="preserve">
          <source>Used for overlay arrows (see &lt;a href=&quot;overlay-arrow#Overlay-Arrow&quot;&gt;Overlay Arrow&lt;/a&gt;).</source>
          <target state="translated">用于叠加箭头（请参见&lt;a href=&quot;overlay-arrow#Overlay-Arrow&quot;&gt;叠加箭头&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="abe7fe50c254613f17b49fa29988afb4159cdd9e" translate="yes" xml:space="preserve">
          <source>Used for truncation and continuation lines.</source>
          <target state="translated">用于截断和延续线。</target>
        </trans-unit>
        <trans-unit id="77f8f0d4453cf80de6dff56b7d9173f1602790f6" translate="yes" xml:space="preserve">
          <source>Used in keymaps to undefine keys. It calls &lt;code&gt;ding&lt;/code&gt;, but does not cause an error.</source>
          <target state="translated">在键盘映射中使用以取消定义按键。它调用 &lt;code&gt;ding&lt;/code&gt; ，但不会导致错误。</target>
        </trans-unit>
        <trans-unit id="6259ffefea40662abbcdbf789a1ab4e77db1cd41" translate="yes" xml:space="preserve">
          <source>Used only in one-line paragraphs, this regular expression acts as an additional check of the validity of the one available candidate fill prefix: the candidate must match this regular expression, or match &lt;code&gt;comment-start-skip&lt;/code&gt;. If it doesn&amp;rsquo;t, &lt;code&gt;fill-context-prefix&lt;/code&gt; replaces the candidate with a string of spaces of the same width as it.</source>
          <target state="translated">仅在单行段落中使用，此正则表达式充当对一个可用候选填充前缀有效性的附加检查：候选必须与该正则表达式匹配，或与 &lt;code&gt;comment-start-skip&lt;/code&gt; 匹配。如果不是，则 &lt;code&gt;fill-context-prefix&lt;/code&gt; 将候选字符串替换为其宽度相同的空格字符串。</target>
        </trans-unit>
        <trans-unit id="d7d4536b2c038c53d4bc30e470e42275f3c0eba8" translate="yes" xml:space="preserve">
          <source>Used to indicate buffer boundaries.</source>
          <target state="translated">用来表示缓冲区的边界。</target>
        </trans-unit>
        <trans-unit id="af215d27954516e94b0fc99a63a8235a6bf5c96c" translate="yes" xml:space="preserve">
          <source>Used to indicate continued lines.</source>
          <target state="translated">用来表示续行。</target>
        </trans-unit>
        <trans-unit id="4ba8160bf81bfb699940005e7f1da16ade203e5a" translate="yes" xml:space="preserve">
          <source>Used to indicate empty lines after the buffer end when &lt;code&gt;indicate-empty-lines&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">当 &lt;code&gt;indicate-empty-lines&lt;/code&gt; 为非 &lt;code&gt;nil&lt;/code&gt; 时，用于指示缓冲区结束后的空行。</target>
        </trans-unit>
        <trans-unit id="8cffa0b7c31156b9dba3c8dad5ce97e043b0874c" translate="yes" xml:space="preserve">
          <source>Used to indicate truncated lines.</source>
          <target state="translated">用于表示截断的行。</target>
        </trans-unit>
        <trans-unit id="ff41ba79407155df83a875106517da53820bd804" translate="yes" xml:space="preserve">
          <source>Used when &lt;code&gt;indicate-buffer-boundaries&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;: &lt;code&gt;up&lt;/code&gt; and &lt;code&gt;down&lt;/code&gt; indicate a buffer boundary lying above or below the window edge; &lt;code&gt;top&lt;/code&gt; and &lt;code&gt;bottom&lt;/code&gt; indicate the topmost and bottommost buffer text line; and &lt;code&gt;top-bottom&lt;/code&gt; indicates where there is just one line of text in the buffer.</source>
          <target state="translated">当 &lt;code&gt;indicate-buffer-boundaries&lt;/code&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ： &lt;code&gt;up&lt;/code&gt; 和 &lt;code&gt;down&lt;/code&gt; 指示缓冲区边界位于窗口边缘的上方或下方； &lt;code&gt;top&lt;/code&gt; 和 &lt;code&gt;bottom&lt;/code&gt; 指示缓冲区的最顶部和底部文本行；和 &lt;code&gt;top-bottom&lt;/code&gt; 指示其中存在缓冲区文本的仅仅一行。</target>
        </trans-unit>
        <trans-unit id="fca1c34ecbffa5469b5a1e0d47bb759b17462bcf" translate="yes" xml:space="preserve">
          <source>Used when the item is disabled and deselected.</source>
          <target state="translated">当项目被禁用和取消选择时使用。</target>
        </trans-unit>
        <trans-unit id="aed513916b82a279df7cdecb65133e5f6fe7d296" translate="yes" xml:space="preserve">
          <source>Used when the item is disabled and selected.</source>
          <target state="translated">当项目被禁用和选择时使用。</target>
        </trans-unit>
        <trans-unit id="f6403844c6cde23b98f83024612325ae4911a2a6" translate="yes" xml:space="preserve">
          <source>Used when the item is enabled and deselected.</source>
          <target state="translated">启用和取消选择时使用。</target>
        </trans-unit>
        <trans-unit id="124314249d1e4d88e4cacc25deaaa5077fe2391e" translate="yes" xml:space="preserve">
          <source>Used when the item is enabled and selected.</source>
          <target state="translated">启用并选择项目时使用。</target>
        </trans-unit>
        <trans-unit id="834a5fa19a43c628e3bddc071bf0ab0ee64a69f7" translate="yes" xml:space="preserve">
          <source>Used when turning Font Lock off to remove the fontification. Calls the function specified by &lt;code&gt;font-lock-unfontify-buffer-function&lt;/code&gt;.</source>
          <target state="translated">关闭字体锁定以删除字体时使用。调用 &lt;code&gt;font-lock-unfontify-buffer-function&lt;/code&gt; 指定的函数。</target>
        </trans-unit>
        <trans-unit id="ec441e9bcf6082e0f12c028ed5408f4c649408df" translate="yes" xml:space="preserve">
          <source>Useful regexps for finding sentences, pages,...</source>
          <target state="translated">有用的regexps用于查找句子、页面、...</target>
        </trans-unit>
        <trans-unit id="52f4c119180f7fb6d994831c0aa80b1b6a041349" translate="yes" xml:space="preserve">
          <source>User Identification</source>
          <target state="translated">用户识别</target>
        </trans-unit>
        <trans-unit id="5a7b6cb49093de47e45197faf6e8bbc9f056a153" translate="yes" xml:space="preserve">
          <source>User Option</source>
          <target state="translated">用户选项</target>
        </trans-unit>
        <trans-unit id="28410b3350e06e2fa0834b6176e4cb723f59e7b4" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;abbrev-all-caps&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;abbrev-all-caps&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c45451d8667cdacc66dcb7f0e140a293f2fb3bf8" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;abbrev-file-name&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;abbrev-file-name&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="60aa454e39d066188f3ff75cb2e9493dc35bc275" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;adaptive-fill-first-line-regexp&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;adaptive-fill-first-line-regexp&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6d694ff0e9c14523131210ba897964e19fd01df3" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;adaptive-fill-function&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;自适应填充功能&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3d96a6b8d06266741a89dee11401eefd36c906f8" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;adaptive-fill-mode&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;自适应填充模式&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cd5c48e6f2a40efd885a7618a979cc59191f6ed8" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;adaptive-fill-regexp&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;adaptive-fill-regexp&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0519fc23bdcce5847aea01f46c05e70db8068c52" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;after-save-hook&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;挂机后&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4080f0497ae605a17b7190584d5ec5eab44a8dc9" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;auto-coding-alist&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;自动编码助手&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="61975c3318294654e4c94d9ae0cf9748a82c50f6" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;auto-coding-functions&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;自动编码功能&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cf59cb635bf51812802fec80c30da74401d09860" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;auto-coding-regexp-alist&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;auto-coding-regexp-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4e9f634e0f06e18d0ed86c4e77f2073c2c29fe52" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;auto-save-default&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;自动保存默认&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3dff66dd30cb605c076ac4b7974bbd03800d5e7d" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;auto-save-interval&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;自动保存间隔&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="81fe1cba1aca838d9ffab4c92390d32941938180" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;auto-save-list-file-prefix&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;自动保存列表文件前缀&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d41eecb34f774743aa33d910bb2482bbe8d7b08d" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;auto-save-timeout&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;自动保存超时&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ee44287d38d58aa51397e6b5f77d1e1ce9de482c" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;auto-save-visited-file-name&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;自动保存访问的文件名&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="43c78be3ab642be9eaa09629ede811c760c6a138" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;backup-by-copying-when-linked&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;链接时通过复制进行备份&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a5549944d7a5d28ea7a8f478850bc195b871f485" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;backup-by-copying-when-mismatch&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;不匹配时通过复制备份&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4fb5dc7296fc13b00cc23d92851fbd86bd3daa0c" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;backup-by-copying-when-privileged-mismatch&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;特权不匹配时通过复制备份&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c2bb38b721f2987be672b0e32883be2a89c3f5a3" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;backup-by-copying&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;按拷贝备份&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="068ebf8f246d83e3287693a52b81ddf0df139288" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;backup-directory-alist&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;backup-directory-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7dd50b1792ca4c59e2de6a85c7ca152163979cf4" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;backward-delete-char-untabify-method&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;向后删除char-unabify方法&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0987b9376cf2fba178df47557cd44071b2eb9d08" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;baud-rate&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;波特率&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="18a82c1ea00820f4a6aeef167526e2b576c3f55e" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;before-save-hook&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;挂机前&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="54f40b17677608cda6fd1d1438fee7cb980f1033" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;bidi-paragraph-direction&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;bidi-paragraph-direction&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a4a6f814c8c2b1865428cbda24dbf918afdd08b5" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;blink-cursor-alist&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;blink-cursor-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="942ec96b08b66980d026d6e83ffcf2d1ec5ac5d1" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;blink-matching-delay&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;眨眼匹配延迟&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="59f0be597b7dd3de8707aa48930bbc461a712b59" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;blink-matching-paren-distance&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;blink-matching-paren-distance&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="67a927bfb1e5a8be0cfec3ad5c591e9ce927dbfd" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;blink-matching-paren&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;blink-matching-paren&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="71eaeb40dc971950168818607db8107cb4187c47" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;buffer-offer-save&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;buffer-offer-save&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0d4a580632797b1bda9861a878dc05466615df30" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;byte-compile-dynamic-docstrings&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;byte-compile-dynamic-docstrings&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="debb05e40a6fa5093a02bba3803e975707c8293c" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;case-fold-search&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;case-fold-search&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="56715016a0005a087c8a35ad721614698a2b2419" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;case-replace&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;大小写替换&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e58693ea6b4f3f236b558781b3a55bb24653a8a2" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;comment-auto-fill-only-comments&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;comment-auto-fill-only-comments&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ac64b79e5a59c1b8198d4fe48e0c34d0c5570018" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;completion-auto-help&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;完成自动帮助&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7a47db07e11abf1f50adb341656b449a12b4014e" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;completion-category-overrides&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;completion-category-overrides&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="019cb06c6610b9eaefe7708ae5720e9c61df03cb" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;completion-ignored-extensions&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;忽略补全的扩展名&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aa86f8a5833c3ce711530f7d6ef7e2e1c20b55bb" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;completion-styles&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;完成样式&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9ca7d363a3f633e276a62a94a10da754812b9ab9" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;confirm-kill-processes&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;确认杀死进程&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b6d4698def969239e463ce8e42ae32f53cab7817" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;create-lockfiles&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;create-lockfiles&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="77f653c4b6ca3c51c3cca338e9717ef5d8f8624d" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;ctl-arrow&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;ctl-arrow&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="39e31e0ab66d8a337176cad0fa35d47ee3fd7c01" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;cursor-in-non-selected-windows&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;非选定窗口中的光标&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6cb1fe87b665317df0d675bb75fe2ac38710def8" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;cursor-type&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;光标类型&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="77bd2e9a6697fb282bd386990eb75fe48aebd7b5" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;custom-unlispify-remove-prefixes&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;custom-unlispify-remove-prefixes&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d70d4ba47d6348ece539fbd747dc36e46bc5cfec" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;debug-ignored-errors&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;debug-ignored-errors&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="548882c7a49849867858ebf7746b18faa6000816" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;debug-on-error&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;错误调试&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1848194d9301ab230c13dc307b370e0e76d24c28" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;debug-on-event&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;事件调试&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0eed717db04ca79fbd57a3f401a695218a4c554f" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;debug-on-quit&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;退出调试&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7232a912da22413ed88cc62966ba07cc8752fdd0" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;debug-on-signal&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;调试信号&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c1baaa1bb2d209ad48121ae80943ac95b2d2468f" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;debugger-stack-frame-as-list&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;debugger-stack-frame-as-list&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9d67c241963cac07a06266d63f47f294b34e5847" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;default-frame-alist&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;default-frame-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dbebe0bea42dce97f53c087415df69731a795deb" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;default-input-method&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;default-input-method&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="543b2906eb8b7a4acebccd293e7073a63569a08f" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;default-justification&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;默认对齐&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="197c838a71c037d112684867e942dc7780ee661d" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;defun-prompt-regexp&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;defun-prompt-regexp&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ac69d6bcdb703ebe65de4a21cc58a51dbaa0815e" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;delete-auto-save-files&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;delete-auto-save-files&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="388af63f3b488811465b3062df76529e7b0dd296" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;delete-exited-processes&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;delete-exited-processes&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a03740ce1a6df96f98f48614c03da0b736a18eb4" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;delete-old-versions&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;delete-old-versions&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ff016dcf9a811096087bbba666af3917f8d2a8ee" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;dired-kept-versions&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;dired-kept-versions&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8fa38053ad0888dad7f17f056754526f812fb7c1" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;display-buffer-alist&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;display-buffer-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6cf586172da0be30837f695db0f1fcf6a803ee02" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;display-buffer-base-action&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;display-buffer-base-action&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c73a613d3529e7651d979c7e4a0099850441f928" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;display-mm-dimensions-alist&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;display-mm-dimensions-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2980bfcf14802254ac335a74b4b2db6370f4cdee" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;double-click-fuzz&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;双击-模糊&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="341f6df01a33fc02281615ffa6ee36224ecd01d7" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;double-click-time&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;双击时间&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="123762ef824474c41f1c0f4d1e3a2940b0d2d019" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;echo-keystrokes&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;echo-keystrokes&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b3ef61939f118de9c19c891322a73c56a9929946" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-after-instrumentation-function&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;edebug-instrumentation-function功能&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7fc0e752e3d1beaaaccb8455b26f7b3e6a329154" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-all-defs&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;edebug-all-defs&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fb0d4b66353ae6c69fc4661f1289de0dd9b1b194" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-all-forms&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;edebug-all-forms&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6c34e59ff5902febe9b95bd014c4342e32041acf" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-behavior-alist&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;edebug-behavior-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="72ce7a9c1de8193687b4d371208fbc38e1233302" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-continue-kbd-macro&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;edebug-continue-kbd-macro&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dfd786966cf2a5c18a859ac996a5d19d7f4fb780" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-eval-macro-args&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;edebug-eval-macro-args&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6735a79edc4ae8c5f23236d37c93782fa99d8887" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-global-break-condition&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;edebug-global-break-condition&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fe26f4b7c0b79567431d424c0fffb5f10f9283f1" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-initial-mode&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;edebug-initial-mode&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="38cfbb1acf52f668fb58e70a6c3df4be9d4f3f92" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-new-definition-function&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;edebug-new-definition-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="692de54118fb891d07ae0f4985d43aca8240c00d" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-on-error&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;edebug-on-error&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7c12b0ad09144463d7cf0e0dd44e2830eb38b800" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-on-quit&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;edebug-on-quit&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="df81c24fdf2875bf92629e60520d6eaf968a71de" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-print-circle&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;edebug-print-circle&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0bca6364b556ead9206a512cf9865c5242983304" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-print-length&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;edebug-print-length&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5784fa9b4442a645004169046f8f0304378c6ccf" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-print-level&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;edebug-print-level&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bce966e94cc5d17473dfc3fb637caf72fb7199db" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-save-displayed-buffer-points&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;edebug-save-displayed-buffer-points&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fdac976c66e24961b4ddff9d6cb8460cb93cacb5" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-save-windows&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;edebug-save-windows&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="33837f4a4affd2fe34be38e8c4aaca84fe6c7232" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-setup-hook&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;edebug-setup-hook&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ce8d963e8463660c8b777b5b52c5856b95d9932a" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-sit-for-seconds&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;edebug-sit-seconds&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="038959d942095d75d2e4f361297cdce77eb03df5" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-sit-on-break&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;edebug-sit-on-break&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c9dfa9a444494ac62f042daca8e31203b7f72cac" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-test-coverage&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;edebug-test-coverage&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="584b272777efaa57abcff8499652dfa418ae5fc9" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-trace&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;edebug-trace&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2791b0ce480428c68fd2e24dc11b41dd85bb0836" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;edebug-unwrap-results&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;edebug-unwrap-results&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1f9cd2f4e2d257196158387bed354c1b66e67c03" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;enable-local-eval&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;enable-local-eval&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="71abbe6d97f0261108857870ec0a047dea8ff237" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;enable-local-variables&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;enable-local-variables&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3a17823be327f79d2c722dffee8644b2ce5301d3" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;enable-recursive-minibuffers&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;enable-recursive-minibuffers&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="94e40a86fcdbcd7d22b05b03a23213843940c14e" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;eval-expression-debug-on-error&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;错误时的eval-expression-debug&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="656244de2111b64747b02ab4cf26a9cc518da92d" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;eval-expression-print-length&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;eval-expression-print-length&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="11852a0e87a20c1096f0644dbc38fffc64868da4" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;eval-expression-print-level&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;eval-expression-print-level&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0ffc8ec6ecee44f93ff57a5499c51a6b9a84a05d" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;even-window-sizes&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;偶数窗口大小&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="46450ebf2cc5dd66d1315e675c8e67a4cd0f1993" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;exec-path&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;exec-path&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="97b456163b050acacc1d377b86cdf0d53400aace" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;exec-suffixes&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;exec-suffixes&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3861d0808e25a889177909c888e3020027f9692a" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;face-font-family-alternatives&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;face-font-family-alternatives&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e4d2fd778814dc8bbf7b7318d5d34c015a2529ec" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;face-font-registry-alternatives&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;face-font-registry-alternatives&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d5a1bd2a380815524fc65568aa6b01913c8f7e80" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;face-font-selection-order&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;face-font-selection-order&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="582368ed33dfd2e843f6049e190f685fd208f6ca" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;file-coding-system-alist&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;file-coding-system-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="59ed3f64b1f8ebefdf60592c3f3ec0a1c60f2f0b" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;file-precious-flag&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;file-precious-flag&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="079a1c55a8e0aba2709f556603ba9156dfd38d6f" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;fill-column&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;填充列&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dbc900155982949e130a936b1b85b78d3996a8fb" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;fill-individual-varying-indent&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;fill-individual-varying-indent&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="484ef66c2840584ab2d1ec87e7f4575b492f0fa9" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;fill-nobreak-predicate&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;fill-nobreak-predicate&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ac221d5a8a96cd7f0777149ece8d090543237655" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;fill-prefix&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;填充前缀&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="34e5b860aa2c643a982017a5ebc7a8694764cf9d" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;fill-separate-heterogeneous-words-with-space&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;使用空格填充分隔的异构单词&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f994b01781e67140eef2838152e3b79e8063d5ea" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;find-file-hook&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;find-file-hook&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f2eee2502312c71ccd1f25552d84cad62c3ff10e" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;find-file-wildcards&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;find-file-wildcards&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3f786a7e0c9b0a709e86cd918f6fd8a81c7ddb08" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;fit-frame-to-buffer-margins&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;fit-frame-to-buffer-margins&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9459b4e10392fbf7ae08150b2ab9839fb285818b" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;fit-frame-to-buffer-sizes&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;fit-frame-to-buffer-sizes&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="49f27d043403426bbcb0c42c88443cb657bd91b4" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;fit-frame-to-buffer&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;适合框架到缓冲区&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4810a1cb5472fc0c094cf0ef99331ad34866fcf3" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;fit-window-to-buffer-horizontally&lt;/strong&gt;</source>
          <target state="translated">用户选项：水平&lt;strong&gt;适应窗口到缓冲区&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="322afabcf85694a7c8ac9bf4eb4832aacc2501da" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;focus-follows-mouse&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;焦点跟随鼠标&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6ff9d479a9c8993b0937c8435d198febce31f376" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;frame-auto-hide-function&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;帧自动隐藏功能&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9744b7fa5d91df7537cfb44c5b2f3a94dc6686c5" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;frame-inhibit-implied-resize&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;帧禁止隐含调整大小&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="08ecf2f14805a04a4dd96f781b8ac10d22b89677" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;frame-resize-pixelwise&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;逐帧调整像素大小&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8f39c798fea2c6435a50a1cb0fdc648cba270803" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;garbage-collection-messages&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;垃圾收集消息&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="17a531e0c306e100a3962a7e05b567a373f14ecb" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;gc-cons-percentage&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;gc-cons-percentage&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fb157ce410eafa6a67e87afaba4c2fc5485da687" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;gc-cons-threshold&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;gc-cons-threshold&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="30bad75ed48273e169c41ea96840ae0eb7ffa5a9" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;glyphless-char-display-control&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;glyphless-char-display-control&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="63e0a17e6aefe87e369ca7880810ac8649b175cf" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;help-char&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;help-char&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d8977384f31f8d0f3d5d46fc68c96f50dd1d4ad9" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;help-event-list&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;help-event-list&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="165d6c2e081ca11cff49e6fb65c220d7c955c535" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;history-delete-duplicates&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;历史记录删除重复项&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="55cf165385612cd4121eb3f50f945b4df2dd327e" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;history-length&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;history-length&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f0d27372f683802a4a4e72b3312d58fd1364bc67" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;horizontal-scroll-bar-mode&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;horizo​​ntal-scroll-bar-mode&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eeec319582766a863b72eb767f46ba6ac4316bda" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;iconify-child-frame&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;iconify-child-frame&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2c1b22b16c91c7126d42e1cf134d32fbbec481ec" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;image-load-path&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;image-load-path&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8a6c6b047f7ca1cec00d7abc10155d2941513ff0" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;imagemagick-enabled-types&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;imagemagick-enabled-types&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ee56d5cd797f61829fdf983385a2f9701a2abe19" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;imagemagick-types-inhibit&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;imagemagick-types-inhibit&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b8c830199288cee63c3d58ae25523278267ab32b" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;indent-tabs-mode&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;indent-tabs-mode&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6bdcac469ff1b1d6819856fad89f48365208ff15" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;indicate-buffer-boundaries&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;indicate-buffer-boundaries&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="837acd4c4348a48941615e6b876ae12e9d4920f0" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;indicate-empty-lines&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;指示空行&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9ddd9c1a1f72ee9817c7c32c732aed967f392218" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;inhibit-default-init&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;禁止默认初始化&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c07ee4d6cbaaef8d228b264b06692e5585e8a0fb" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;inhibit-eol-conversion&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;抑制eol转换&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ab10a55ffed759066103340443e65b954e1960af" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;inhibit-startup-echo-area-message&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;禁止启动回显区域消息&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="be628ed715e60502d42231888b4c7ca4620a8838" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;inhibit-startup-screen&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;禁止启动屏幕&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aa2d025e15c4e51110800fc5901e83076b11b997" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;initial-buffer-choice&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;initial-buffer-choice&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="293febdb54eb561e30ef3288cfc814fbc417e433" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;initial-frame-alist&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;初始帧警报&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="93302d21017c5104e5850f272e9e318d67c184c1" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;initial-major-mode&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;initial-major-mode&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="074e13b8f4d8258a672514bee4c412708bb9d0f7" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;initial-scratch-message&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;initial-scratch-message&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="95c4066e90e17aa5eb769e379fd7e1caf45cfdda" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;insert-default-directory&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;insert-default-directory&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d7f3ea4fb1875733b99668a0da9ee6c56244fb12" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;kept-new-versions&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;keep-new-versions&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1898e46db12f091c72ed6975f33dc62df8a7874e" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;kept-old-versions&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;keep-old-versions&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="41e072b67a02f47751c787fc6d6172fb05e0aa1e" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;kill-emacs-query-functions&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;kill-emacs-query-functions&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f644e2b33573cd4de36a63c99b9a3e8bdd4ef022" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;kill-read-only-ok&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;kill-read-only-ok&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="48ddeca8678f5ad171a611c9d0d8d23b0f17ca2a" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;kill-ring-max&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;kill-ring-max&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c847d6d0f149a1f240d0cf38375643a2ed401c31" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;left-margin&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;左边距&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3298ddabdbc62bf7e05d97d6422eebff6be6ac45" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;load-prefer-newer&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;load-prefer-newer&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3963a3eb14253ac0ccea60b221c1260d525f01dd" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;mail-host-address&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;mail-host-address&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f06fd63b93a8fa4fcf1e1082d8116fb99df55347" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;major-mode&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;major-mode&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fcebd7f372cd54dcf3d243db099cfbbde056d6fe" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;make-backup-file-name-function&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;make-backup-file-name-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="37afdb68b7b57ad2fd4f950251ac180c069bd60f" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;make-backup-files&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;make-backup-files&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b97ab1598e8545c434f69ce7312ade87f3bf54df" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;mark-even-if-inactive&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;标记为无效&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="29b548438ecc23999bb6af8e8cd5e3381527734d" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;mark-ring-max&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;mark-ring-max&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ba640261d0635ced3f01b7cf76e99ff0ee821aef" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;max-lisp-eval-depth&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;max-lisp-eval-depth&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8d70d60ad71a8596a7e00b971ff692df9e02b9bb" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;max-mini-window-height&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;max-mini-window-height&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1e100be4f93f5791cd49c58800512ff373fd93b4" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;max-specpdl-size&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;max-specpdl-size&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b842b2ed6ef3bab321a961a302ac916290e80e6b" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;maximum-scroll-margin&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;maximum-scroll-margin&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="afe2bb33beb852c77e9b756a4eeb3758a1a3deae" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;message-log-max&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;message-log-max&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="648dfdd3beb7f82d417e28af5d4cb6bc1047219c" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;meta-prefix-char&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;meta-prefix-char&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1f7062214fbe519baf6a2b422a9089498c686612" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;minibuffer-auto-raise&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;minibuffer-auto-raise&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ae608d5b35861b079b534bbfed4424d7e080aacd" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;minibuffer-frame-alist&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;minibuffer-frame-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="435307e8b87f1b7d420f2a031d6389c44d421d7b" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;mode-line-format&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;mode-line-format&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f01ec468ac8d0cec2fa49ed0ab5e1e3778ccfe95" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;mode-line-percent-position&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;mode-line-percent-position&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="107d8e9642da4ab0c9f0ba9330a618be2787aba0" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;mouse-autoselect-window&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;mouse-autoselect-window&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b00f64fb4c1ba156cc9027add8f100fe21153b64" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;next-screen-context-lines&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;下一屏上下文行&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a984c944e9211ac9e362f336ce2c95414abc4e0d" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;no-redraw-on-reenter&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;no-redraw-on-enter&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="42cfe6a1ec84264664b7bb4f6516c2bca8120d2a" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;only-global-abbrevs&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;only-global-abbrevs&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b9189f6cbb4af201ac8d9c3c832b90f38c1b818b" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;open-paren-in-column-0-is-defun-start&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;open-paren-in-column-0-is-defun-start&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a1b533afe7aa23d666b931ee348c84efc2ff2695" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;overflow-newline-into-fringe&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;overflow-newline-into-fringe&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4277c81cc256986b3e5fbcae86c78c3d7e81d101" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;package-archives&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;包归档&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="abd3f45a2d6f1e46bdf412d5df4e1c9bb4151852" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;page-delimiter&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;页面定界符&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c868cfc194bf8e2f63b0921a49cb365562f136ab" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;paragraph-separate&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;段分隔&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d9fe1dae9cc26592d3b04439f592c2d92226b29a" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;paragraph-start&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;段落开头&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="215e019db282235c2f3291e6ab749c9615898555" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;parse-sexp-ignore-comments&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;parse-sexp-ignore-comments&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1ea235bbefe36faf62f02fd53105c489d9762d45" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;pop-up-frame-alist&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;pop-up-frame-alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fff3d4a073e1b0f2c3d480b174b469a6261fca0f" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;pop-up-frame-function&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;弹出框功能&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e1c4ea7edbd60b9bfcdc53c764cf88e6b72fbe91" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;pop-up-frames&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;弹出框&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="146fc74ea723498ebd2b91c166cc4fd730f4feb9" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;pop-up-windows&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;弹出窗口&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6a5f0bbea5af962bc637e5721a1a67e4833ee0cc" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;read-buffer-completion-ignore-case&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;read-buffer-completion-ignore-case&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="98fb75b07a5e3735455bf954c55376f8d390b26b" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;read-buffer-function&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;读取缓冲区功能&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="22d5089b62007482b5348fa86b16e7ac8154b33e" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;read-file-name-completion-ignore-case&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;读取文件名完成忽略大小写&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2b415a87fe83a8a974b0729bb7b5bbd626af05de" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;read-regexp-defaults-function&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;read-regexp-defaults-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e9b32c965d073876adcf0c5afd895de8c2bff4f1" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;recenter-positions&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;最近职位&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2b9dae85338c4fd1cad1e36c317590539e44f777" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;recenter-redisplay&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;最近显示&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9dc9594acb063584b5168d2dc47449e01cefeff4" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;remote-file-name-inhibit-cache&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;远程文件名禁止缓存&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2202b433e382bc61f939ea30c615d522198fddb1" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;require-final-newline&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;require-final-newline&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4c1e4c32fd28670113589d36c283eaccd26f7959" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;resize-mini-frames&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;调整小帧大小&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e2b4da97e84b2053107eea0e3e322971222e9008" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;resize-mini-windows&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;resize-mini-windows&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4285a1385d7de52902a8aba6f4f1b36604df7970" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;revert-without-query&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;无查询还原&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="07269d8d5663468257f7d330f18554727864a5ac" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;ring-bell-function&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;铃声功能&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e869aab0065eea20bbd08c9d11b1bc8562582d81" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;safe-local-eval-forms&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;safe-local-eval-forms&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="13a90cb7715959ebba083904ce2c1cd0dbd1a88c" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;safe-local-variable-values&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;safe-local-variable-values&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4b293bc47fee2108c9d1a1b6d50913c8c321f82a" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;save-abbrevs&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;save-abbrevs&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f69107dbd3903c8b02e3cd58d96bf1340d87a283" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;scalable-fonts-allowed&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;可缩放字体允许&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cdd4fc021be16dc348456acf0556a6199d99b0fd" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;scroll-bar-mode&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;滚动条模式&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a628269f18dcce0eebf684334042e7c548235a16" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;scroll-conservatively&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;保守滚动&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ab5e0522ea630c192cca09006fd2287f77df520b" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;scroll-down-aggressively&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;积极向下滚动&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9207ad18698d00baabac3dac3857a8e24a2b005b" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;scroll-error-top-bottom&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;scroll-error-top-bottom&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4673c50748e2ffc639022e36426cb7fc04f51dbd" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;scroll-margin&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;滚动边距&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="24f3b5732086cd9ed909aab52296d30ba7c026ee" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;scroll-preserve-screen-position&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;滚动保留屏幕位置&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="751af27c85e64122a8b18d15d25fdeaac5136a89" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;scroll-step&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;滚动步&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ed80e549ad0063462daa02267106df62d69dba8c" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;scroll-up-aggressively&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;积极向上滚动&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b721261228369f123dac405285b1b2ccce90f95e" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;selection-coding-system&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;选择编码系统&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e5172be8c5a2198cededa723d7659c7ffafd1846" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;selective-display-ellipses&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;selective-display-省略号&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f9181a2d8ef519c53398451122675253216bc24f" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;sentence-end-double-space&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;句子结尾双空格&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c82e39aa4d5dfe5f48821ea26be8c3c044acff1c" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;sentence-end-without-period&lt;/strong&gt;</source>
          <target state="translated">用户选项：无&lt;strong&gt;句句末&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a8af8bb3173b0b80e4e695ac8d858849a2546ec5" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;sentence-end-without-space&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;无空格的句子结尾&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="29a5fbf9a48439ece48a6a2af628e7df22bd1dae" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;sentence-end&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;句子结尾&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a660e4a9ba6b509854a50125772c26d1d7131b04" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;server-after-make-frame-hook&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;server-after-make-frame-hook&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f036be396cfee6b169535fa5d2f7b00d7c2dbe50" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;site-run-file&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;site-run-file&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9b30ed7c6921d901f572bc75513d72c4a9e4d19d" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;small-temporary-file-directory&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;small-temporary-file-directory&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="decfe30396e3a040072434ba95176d407cfd68a4" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;smie-config&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;smie-config&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3e80e4168dfd09e4d8585aa2c08d5e201649c6db" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;sort-fold-case&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;按大小写排序&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8b6369c4f9fa4713c763b0c6bb4106994040a780" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;sort-numeric-base&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;sort-numeric-base&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d04e59beff571d6768b99ddd1b26fcd0e5fd0b81" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;split-height-threshold&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;split-height-threshold&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d9feb3596d3d8fadf098cd91902e8d2bff7d1f56" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;split-width-threshold&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;split-width-threshold&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="39f61f71631d3a8fcda108d48a846a6430155101" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;split-window-keep-point&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;拆分窗口保持点&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="12ae0eb93d05094e6b130af385cad3b2e934e420" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;split-window-preferred-function&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;拆分窗口优先功能&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="896ab34550a7492756e323bef2ff216fb8497103" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;switch-to-buffer-in-dedicated-window&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;切换到专用窗口中的缓冲区&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3798a9a233f35f6cde0cd69ea78cbd23c345a1b9" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;switch-to-buffer-obey-display-actions&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;切换到缓冲区服从显示动作&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a143024cb4b6228295e787e286c2c6267de0b7d6" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;switch-to-buffer-preserve-window-point&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;切换到缓冲区保留窗口点&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e68ec057fc0b9e3146c14ce7808504b31ff9a7db" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;switch-to-prev-buffer-skip&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;切换到上一个缓冲区跳过&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f7839e796b54df17769fe69391454ca9db84d40a" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;tab-always-indent&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;tab-always-indent&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e652f8e5f07d16b1a40334c3bc7373d186d0de80" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;tab-stop-list&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;tab-stop-list&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="79d223b0d15d829694c113dd790eb3276d3f881b" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;tab-width&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;制表符宽度&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="52a26745bca4eb7bc5f2b5c7c5f72771e117b9b6" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;tabulated-list-gui-sort-indicator-asc&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;tabulated-list-gui-sort-indicator-asc&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f6efdb80f3960f3082272ebb78968b22d0fc7357" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;tabulated-list-gui-sort-indicator-desc&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;tabulated-list-gui-sort-indicator-desc&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bfb5cd49ebc3ad8078e8d8838e0362559e800df1" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;tabulated-list-tty-sort-indicator-asc&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;tabulated-list-tty-sort-indicator-asc&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c97f196bfec167b4f18a4d093d9e198e3dc51542" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;tabulated-list-tty-sort-indicator-desc&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;tabulated-list-tty-sort-indicator-desc&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b7ae21690300459c3b5e7bfca879d16189bcfaaf" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;temp-buffer-max-height&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;temp-buffer-max-height&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fae0b229d78fabd9aa64607e2acd4cda493f6c29" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;temp-buffer-max-width&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;temp-buffer-max-width&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f0bbd29a3cafe0aab90cd939d78b9a72d951ac7e" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;temp-buffer-resize-mode&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;temp-buffer-resize-mode&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="80ac221c7a8fa6d33e76cdb4923156022cac0e2b" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;temp-buffer-show-function&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;temp-buffer-show-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5c6dbae4864415e056792bece71e17287a4bc3cf" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;temporary-file-directory&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;临时文件目录&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="158ff1d824dbf0cb8f872a727a5768694ba90c36" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;term-file-aliases&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;term-file-aliases&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f30eb96004f9bf4382b0a6ab5b624ece0c3d3201" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;term-file-prefix&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;term-file-prefix&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e398d9159d118db283fb9aec57fd618415718382" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;text-quoting-style&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;文本引用样式&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b300ae39b452fc803b0523327f30959605ebc0fe" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;three-step-help&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;三步帮助&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5b5c5c70a4a56ff9ab74ad77acffa2f11467f844" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;timer-max-repeats&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;timer-max-repeats&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2fc2a22a8e359b5ac0a4852ad4cfcff1bb7e601f" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;tooltip-frame-parameters&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;tooltip-frame-parameters&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d47ff3a2f50e36a97b4ad7cbc9408b6bd5fd7f97" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;transient-mark-mode&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;瞬态标记模式&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b9dd7936ee0951639bf0fd3e0effaa4496a105d2" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;truncate-lines&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;截断行&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="072be005f3102f99e2a41226d54ad91c16668f32" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;truncate-partial-width-windows&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;truncate-partial-width-windows&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1a3405291198f09371d3cb55d4e63e56bfeacf52" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;underline-minimum-offset&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;下划线最小偏移量&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="40e4bfc8dfdb0e6a063c7aa9f58669568c3cef91" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;undo-ask-before-discard&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;放弃前要放弃&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="11bafcfd995818dad19da4797a111aab176e3cdf" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;undo-limit&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;undo-limit&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3fa5f1b1aa067c429149e6db67333067b262f7db" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;undo-outer-limit&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;undo-outer-limit&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="74b2d3bae0a1cffb0386c84f322370bf9a8a9ab2" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;undo-strong-limit&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;undo-strong-limit&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9912767bf86a847037ecaaa22fa1c2fea232e3b3" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;user-mail-address&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;用户邮箱地址&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c96a62ba733c08a38da4667b78490e9f2ffda758" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;version-control&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;版本控制&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7d3a9ce2bcdb48275ccdaa93d12c868d9bf33af7" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;visible-bell&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;visible-bell&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="18d36ee66aa82f89bb8eddb4f3290cb1f6720ddb" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;void-text-area-pointer&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;void-text-area-pointer&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2f1e938519e13f216a3504489f3bb280dbb7c635" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;warning-minimum-level&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;最低警告级别&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d83b4b1937e016912ce72bc306f4c08856a7cad1" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;warning-minimum-log-level&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;warning-minimum-log-level&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e928cc30beba638abb1c494ce1225cc5b3353089" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;warning-suppress-log-types&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;warning-suppress-log-types&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fba4d2f39ad852a4f3609d0684e4f62533ff2deb" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;warning-suppress-types&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;警告抑制类型&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="53de0c555da42bc2fe8aa3e2f723c67952632ec7" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;window-adjust-process-window-size-function&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;window-adjust-process-window-size-function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0b792d6805d6b6dd41d5b43ee69fa74b80b2d8e5" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;window-combination-limit&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;window-combination-limit&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="187fb24132852740b155c22b64a13a1a09b562a7" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;window-combination-resize&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;window-combination-resize&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1b7a7d3c4ceebe8b031bf8fe14986c101eae04cd" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;window-min-height&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;window-min-height&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9164bb10b5ddf9f1bb0e79e8b11619648a12b2a7" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;window-min-width&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;window-min-width&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e2b3e88854df7a84c6ddcfdd1cb9c57b28fa4d31" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;window-resize-pixelwise&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;window-resize-pixelwise&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5d89dec3a22b55b593c2e7750a2375300002483d" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;window-sides-reversed&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;window-sides-reversed&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="615ed7728d91858ac0624a248aa03ccc5a31de1d" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;window-sides-slots&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;window-sides-slots&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="99bf091e7d31b65627a48aa97e3140fc9a4032dd" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;window-sides-vertical&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;window-sides-vertical&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="de4e17b6d7064f487c214da5878c69325d1038cb" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;words-include-escapes&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;words-include-escapes&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2c45a675b2c67cc1d4bd06de53d8f87fd76a2534" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;x-bitmap-file-path&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;x-bitmap-file-path&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2dbe2dc654c85ab338898c68de51e878c4a440b1" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;x-stretch-cursor&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;x-stretch-cursor&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8818578254b5734074b99780afe1fa82aa87ca73" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;yank-excluded-properties&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;yank-excluded-properties&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f5ba98f6bdbb94daef0464f8ae60d624a645fe5d" translate="yes" xml:space="preserve">
          <source>User Option: &lt;strong&gt;yank-handled-properties&lt;/strong&gt;</source>
          <target state="translated">用户选项：&lt;strong&gt;yank-handled-properties&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1de7235e5e18c45e9eee3f7459ead96aa520a838" translate="yes" xml:space="preserve">
          <source>User name corresponding to the process&amp;rsquo;s effective user ID, a string.</source>
          <target state="translated">对应于进程的有效用户ID的用户名，字符串。</target>
        </trans-unit>
        <trans-unit id="7ea9da211f91ec53882d2cbfad3f68ea513110aa" translate="yes" xml:space="preserve">
          <source>User option descriptions have the same format, but &amp;lsquo;</source>
          <target state="translated">用户选项说明的格式相同，但是&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="924ea45dba9cfb737de93b201fb9138336e9f0d1" translate="yes" xml:space="preserve">
          <source>User-Chosen Coding Systems</source>
          <target state="translated">用户选择的编码系统</target>
        </trans-unit>
        <trans-unit id="1e828498ee7c4a1a0818bba472ac957d278b44db" translate="yes" xml:space="preserve">
          <source>User-Level Deletion Commands</source>
          <target state="translated">用户级删除命令</target>
        </trans-unit>
        <trans-unit id="1dfe2708d6ba334c0751034b7ad614ba7d91f9dd" translate="yes" xml:space="preserve">
          <source>User-Level Insertion Commands</source>
          <target state="translated">用户级插入命令</target>
        </trans-unit>
        <trans-unit id="fb5b174bf760eb8257b4356d98745298bae543fe" translate="yes" xml:space="preserve">
          <source>User-defined forms are allowed wherever arbitrary &lt;code&gt;rx&lt;/code&gt; expressions are expected; for example, in the body of a &lt;code&gt;zero-or-one&lt;/code&gt; form, but not inside &lt;code&gt;any&lt;/code&gt; or &lt;code&gt;category&lt;/code&gt; forms. They are also allowed inside &lt;code&gt;not&lt;/code&gt; and &lt;code&gt;intersection&lt;/code&gt; forms.</source>
          <target state="translated">无论何时需要任意 &lt;code&gt;rx&lt;/code&gt; 表达式，都允许使用用户定义的形式；例如，在 &lt;code&gt;zero-or-one&lt;/code&gt; 形式的正文中，但不在 &lt;code&gt;any&lt;/code&gt; 或 &lt;code&gt;category&lt;/code&gt; 形式的正文中。他们还允许内部 &lt;code&gt;not&lt;/code&gt; 和 &lt;code&gt;intersection&lt;/code&gt; 形式。</target>
        </trans-unit>
        <trans-unit id="0914d12fede3ba9837cdc0fb8c03368b3883648f" translate="yes" xml:space="preserve">
          <source>User-level commands to delete text.</source>
          <target state="translated">删除文本的用户级命令。</target>
        </trans-unit>
        <trans-unit id="760c2e5d6a2ed0b161891b3ed8da3b71c82542f7" translate="yes" xml:space="preserve">
          <source>User-level commands to insert text.</source>
          <target state="translated">插入文本的用户级命令。</target>
        </trans-unit>
        <trans-unit id="d8ad8ebea60071702ac3b98801544d46519b4e75" translate="yes" xml:space="preserve">
          <source>User-level facilities such as &lt;code&gt;save-some-buffers&lt;/code&gt; can save abbrevs in a file automatically, under the control of variables described here.</source>
          <target state="translated">用户级工具（如 &lt;code&gt;save-some-buffers&lt;/code&gt; )可以在此处描述的变量的控制下将缩写词自动保存到文件中。</target>
        </trans-unit>
        <trans-unit id="016dcba589061035865effd67304a44827db53e0" translate="yes" xml:space="preserve">
          <source>Users of Emacs can customize variables and faces without writing Lisp code, by using the Customize interface. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Easy-Customization.html#Easy-Customization&quot;&gt;Easy Customization&lt;/a&gt; in</source>
          <target state="translated">Emacs的用户可以使用Customize界面自定义变量和面孔，而无需编写Lisp代码。见&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Easy-Customization.html#Easy-Customization&quot;&gt;轻松定制&lt;/a&gt;的</target>
        </trans-unit>
        <trans-unit id="073cb1a9f02790f1c382d66a5e165fbd879ed812" translate="yes" xml:space="preserve">
          <source>Users should not pose too many and too severe restrictions on how arbitrary buffers get displayed. Otherwise, they will risk to lose the characteristics of showing a buffer for a certain purpose. Suppose a Lisp program has been written to compare different versions of a buffer in two windows side-by-side. If the customization of &lt;code&gt;display-buffer-alist&lt;/code&gt; prescribes that any such buffer should be always shown in or below the selected window, the program will have a hard time to set up the desired window configuration via &lt;code&gt;display-buffer&lt;/code&gt;.</source>
          <target state="translated">用户不应对显示任意缓冲区的方式施加太多和过于严格的限制。否则，他们将冒失去为特定目的显示缓冲区的特性的风险。假设编写了一个Lisp程序来并排比较两个窗口中缓冲区的不同版本。如果 &lt;code&gt;display-buffer-alist&lt;/code&gt; 的自定义规定任何此类缓冲区应始终显示在所选窗口中或下方，则该程序将很难通过 &lt;code&gt;display-buffer&lt;/code&gt; 设置所需的窗口配置。</target>
        </trans-unit>
        <trans-unit id="d3ff2b8805121b4b737f60e17ad2a4471c66f3a9" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;define-button-type&lt;/code&gt; to define default properties for buttons is not necessary&amp;mdash;buttons without any specified type use the built-in button-type &lt;code&gt;button&lt;/code&gt;&amp;mdash;but it is encouraged, since doing so usually makes the resulting code clearer and more efficient.</source>
          <target state="translated">不必使用 &lt;code&gt;define-button-type&lt;/code&gt; 来定义按钮的默认属性-没有任何指定类型的按钮使用内置的button-type &lt;code&gt;button&lt;/code&gt; -但鼓励这样做，因为这样做通常会使结果代码更清晰，更高效。</target>
        </trans-unit>
        <trans-unit id="507877882630243a7ce7ff32f7d32c64ee159759" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;defvar&lt;/code&gt; without a value, it is possible to bind a variable dynamically just in one file, or in just one part of a file while still binding it lexically elsewhere. For example:</source>
          <target state="translated">使用不带值的 &lt;code&gt;defvar&lt;/code&gt; ，可以仅在一个文件中或仅在文件的一部分中动态绑定变量，而仍然可以按词法将其绑定到其他位置。例如：</target>
        </trans-unit>
        <trans-unit id="7e80543e1e49de1a96e62663bd68adf904370039" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;format-alist&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;format-alist&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7ccb759ca3677aabfad1af8b10708463e0b51ad0" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;make-network-process&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;make-network-process&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="db4348769ca897770226b71b32116b0169de0af5" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;save-current-buffer&lt;/code&gt; or &lt;code&gt;with-current-buffer&lt;/code&gt;, as we did, correctly handles quitting, errors, and &lt;code&gt;throw&lt;/code&gt;, as well as ordinary evaluation.</source>
          <target state="translated">像我们一样，使用 &lt;code&gt;save-current-buffer&lt;/code&gt; 或 &lt;code&gt;with-current-buffer&lt;/code&gt; 可以正确处理退出，错误和 &lt;code&gt;throw&lt;/code&gt; 以及普通评估。</target>
        </trans-unit>
        <trans-unit id="f7f934e347d52fbd65d974a6bf9703170eacea74" translate="yes" xml:space="preserve">
          <source>Using Edebug</source>
          <target state="translated">使用Edebug</target>
        </trans-unit>
        <trans-unit id="4b15083f2f55228225f883511993852a1c781cc9" translate="yes" xml:space="preserve">
          <source>Using Lexical Binding</source>
          <target state="translated">使用词汇绑定</target>
        </trans-unit>
        <trans-unit id="b03b6832c9a810aee38ef3d568c1355d93e602b9" translate="yes" xml:space="preserve">
          <source>Using Lists as Sets</source>
          <target state="translated">将列表作为集合使用</target>
        </trans-unit>
        <trans-unit id="62c447976c01d9a4f5d0e19fbea8379041fbd394" translate="yes" xml:space="preserve">
          <source>Using a reporter object as the &lt;var&gt;reporter-or-message&lt;/var&gt; argument is useful if you want to specify the optional arguments in &lt;var&gt;make-progress-reporter&lt;/var&gt;. For instance, you can write the previous example as follows:</source>
          <target state="translated">如果要在 &lt;var&gt;make-progress-reporter&lt;/var&gt; 中指定可选参数，则使用一个reporter对象作为 &lt;var&gt;reporter-or-message&lt;/var&gt; 参数很有用。例如，您可以编写以下示例：</target>
        </trans-unit>
        <trans-unit id="205f104bb020f38a62085e15c61ad67a762df080" translate="yes" xml:space="preserve">
          <source>Using an alist to specify conversions gives rise to some useful properties:</source>
          <target state="translated">使用alist来指定转换,会产生一些有用的属性。</target>
        </trans-unit>
        <trans-unit id="d5e5bba75e7cf96fcaa85285c5cd69704e0d3648" translate="yes" xml:space="preserve">
          <source>Using bindat to pack and unpack binary data.</source>
          <target state="translated">使用bindat打包和解压二进制数据。</target>
        </trans-unit>
        <trans-unit id="1802746be476744aea6b38f0de7463e8ec32dea5" translate="yes" xml:space="preserve">
          <source>Using command aliases in menu items.</source>
          <target state="translated">在菜单项中使用命令别名。</target>
        </trans-unit>
        <trans-unit id="6feb767b97f9e00ed5b6b489effa8307a4645014" translate="yes" xml:space="preserve">
          <source>Using completion to read file names and shell commands.</source>
          <target state="translated">使用完成来读取文件名和shell命令。</target>
        </trans-unit>
        <trans-unit id="bd870a5d90a07a6d28b538e446a4aac640e031cc" translate="yes" xml:space="preserve">
          <source>Using interactive</source>
          <target state="translated">使用交互式</target>
        </trans-unit>
        <trans-unit id="afb897c6f70341e0c1fa71a2c50417e796c5ccf9" translate="yes" xml:space="preserve">
          <source>Using pcase patterns to extract subfields.</source>
          <target state="translated">使用pcase模式来提取子字段。</target>
        </trans-unit>
        <trans-unit id="b7f122774f1889c6feb365b1f55c6257fd361088" translate="yes" xml:space="preserve">
          <source>Using symbols in programs to stand for values.</source>
          <target state="translated">在程序中使用符号来代表数值。</target>
        </trans-unit>
        <trans-unit id="7b3fece2328c443bec9ec80fb28a0616ec779b0e" translate="yes" xml:space="preserve">
          <source>Using text properties in the mode line.</source>
          <target state="translated">使用模式行中的文本属性。</target>
        </trans-unit>
        <trans-unit id="4fb999282d5753b2cc18251ca1c23c3341ffbab5" translate="yes" xml:space="preserve">
          <source>Using text properties to make regions of text do something when you click on them.</source>
          <target state="translated">使用文本属性使文本区域在你点击它们时做一些事情。</target>
        </trans-unit>
        <trans-unit id="f90be5f76d735c2d7a72679b0a07f29c0c1c2fa8" translate="yes" xml:space="preserve">
          <source>Using the &lt;var&gt;persistent&lt;/var&gt; argument of &lt;code&gt;set-window-scroll-bars&lt;/code&gt; and &lt;code&gt;set-window-fringes&lt;/code&gt; (see &lt;a href=&quot;fringe-size_002fpos#Fringe-Size_002fPos&quot;&gt;Fringe Size/Pos&lt;/a&gt;) you can reliably and permanently turn off scroll bars and/or fringes in any minibuffer window by adding the following snippet to your early init file (see &lt;a href=&quot;init-file#Init-File&quot;&gt;Init File&lt;/a&gt;).</source>
          <target state="translated">使用 &lt;code&gt;set-window-scroll-bars&lt;/code&gt; 和 &lt;code&gt;set-window-fringes&lt;/code&gt; 的 &lt;var&gt;persistent&lt;/var&gt; 参数（请参见&lt;a href=&quot;fringe-size_002fpos#Fringe-Size_002fPos&quot;&gt;Fringe Size / Pos&lt;/a&gt;），您可以通过在您的早期版本中添加以下代码段，从而可靠地永久关闭任何minibuffer窗口中的滚动条和/或边缘。初始化文件（请参阅&lt;a href=&quot;init-file#Init-File&quot;&gt;初始化文件&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="845af645f6b5ea1d7ffb87dcb9e348ff5e3549a1" translate="yes" xml:space="preserve">
          <source>Using the Debugger</source>
          <target state="translated">使用调试器</target>
        </trans-unit>
        <trans-unit id="67d5f08a0f0cb5ef571645c16fd7a0663a9e7a84" translate="yes" xml:space="preserve">
          <source>Using the GNU Compiler Collection</source>
          <target state="translated">使用GNU编译器集合</target>
        </trans-unit>
        <trans-unit id="a5798d72ad4fcb99b7225108b09ea92cb4ad8bcc" translate="yes" xml:space="preserve">
          <source>Using the first element in &lt;var&gt;coordinate-sets&lt;/var&gt;, draw a cubic B&amp;eacute;zier curve from the current point. If there are multiple coordinate sets, draw a polybezier. Each coordinate set is a list of the form &lt;code&gt;(&lt;var&gt;x1&lt;/var&gt; &lt;var&gt;y1&lt;/var&gt; &lt;var&gt;x2&lt;/var&gt; &lt;var&gt;y2&lt;/var&gt; &lt;var&gt;x&lt;/var&gt; &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt;, where (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;) is the curve&amp;rsquo;s end point. (&lt;var&gt;x1&lt;/var&gt;, &lt;var&gt;y1&lt;/var&gt;) and (&lt;var&gt;x2&lt;/var&gt;, &lt;var&gt;y2&lt;/var&gt;) are control points at the beginning and at the end, respectively.</source>
          <target state="translated">使用 &lt;var&gt;coordinate-sets&lt;/var&gt; 的第一个元素，从当前点绘制三次贝塞尔曲线。如果有多个坐标集，请绘制一个多边形贝塞尔曲线。每个坐标集都是 &lt;code&gt;(&lt;var&gt;x1&lt;/var&gt; &lt;var&gt;y1&lt;/var&gt; &lt;var&gt;x2&lt;/var&gt; &lt;var&gt;y2&lt;/var&gt; &lt;var&gt;x&lt;/var&gt; &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; 形式的列表，其中（ &lt;var&gt;x&lt;/var&gt; ， &lt;var&gt;y&lt;/var&gt; ）是曲线的终点。 （ &lt;var&gt;x1&lt;/var&gt; ， &lt;var&gt;y1&lt;/var&gt; ）和（ &lt;var&gt;x2&lt;/var&gt; ， &lt;var&gt;y2&lt;/var&gt; ）分别是开始和结束的控制点。</target>
        </trans-unit>
        <trans-unit id="8607cfbfe7607bcd97cb2731ef458e12b3b2fdd0" translate="yes" xml:space="preserve">
          <source>Using the first element in &lt;var&gt;coordinate-sets&lt;/var&gt;, draw a cubic B&amp;eacute;zier curve from the current point. If there are multiple coordinate sets, draw a polybezier. Each coordinate set is a list of the form &lt;code&gt;(&lt;var&gt;x2&lt;/var&gt; &lt;var&gt;y2&lt;/var&gt; &lt;var&gt;x&lt;/var&gt; &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt;, where (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;) is the curve&amp;rsquo;s end point and (&lt;var&gt;x2&lt;/var&gt;, &lt;var&gt;y2&lt;/var&gt;) is the corresponding control point. The first control point is the reflection of the second control point of the previous command relative to the current point, if that command was &lt;code&gt;curveto&lt;/code&gt; or &lt;code&gt;smooth-curveto&lt;/code&gt;. Otherwise the first control point coincides with the current point.</source>
          <target state="translated">使用 &lt;var&gt;coordinate-sets&lt;/var&gt; 的第一个元素，从当前点绘制三次贝塞尔曲线。如果有多个坐标集，请绘制一个多边形贝塞尔曲线。每个坐标集都是形式为 &lt;code&gt;(&lt;var&gt;x2&lt;/var&gt; &lt;var&gt;y2&lt;/var&gt; &lt;var&gt;x&lt;/var&gt; &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; 的列表，其中（ &lt;var&gt;x&lt;/var&gt; ， &lt;var&gt;y&lt;/var&gt; ）是曲线的终点，而（ &lt;var&gt;x2&lt;/var&gt; ， &lt;var&gt;y2&lt;/var&gt; ）是相应的控制点。第一个控制点是上一个命令的第二个控制点相对于当前点的反射（如果该命令是 &lt;code&gt;curveto&lt;/code&gt; 或 &lt;code&gt;smooth-curveto&lt;/code&gt; )。否则，第一个控制点与当前点重合。</target>
        </trans-unit>
        <trans-unit id="33c42fd0fe0681d5844e8882c20b96f73ac7ba77" translate="yes" xml:space="preserve">
          <source>Using the first element in &lt;var&gt;coordinate-sets&lt;/var&gt;, draw a quadratic B&amp;eacute;zier curve from the current point. If there are multiple coordinate sets, draw a polybezier. Each coordinate set is a list of the form &lt;code&gt;(&lt;var&gt;x1&lt;/var&gt; &lt;var&gt;y1&lt;/var&gt; &lt;var&gt;x&lt;/var&gt; &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt;, where (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;) is the curve&amp;rsquo;s end point and (&lt;var&gt;x1&lt;/var&gt;, &lt;var&gt;y1&lt;/var&gt;) is the control point.</source>
          <target state="translated">使用 &lt;var&gt;coordinate-sets&lt;/var&gt; 的第一个元素，从当前点绘制二次贝塞尔曲线。如果有多个坐标集，请绘制一个多边形贝塞尔曲线。每个坐标集都是 &lt;code&gt;(&lt;var&gt;x1&lt;/var&gt; &lt;var&gt;y1&lt;/var&gt; &lt;var&gt;x&lt;/var&gt; &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; 形式的列表，其中（ &lt;var&gt;x&lt;/var&gt; ， &lt;var&gt;y&lt;/var&gt; ）是曲线的终点，而（ &lt;var&gt;x1&lt;/var&gt; ， &lt;var&gt;y1&lt;/var&gt; ）是控制点。</target>
        </trans-unit>
        <trans-unit id="c19dd1f643d1da36df54f9fa72bb47b3c42164f2" translate="yes" xml:space="preserve">
          <source>Using the first element in &lt;var&gt;coordinate-sets&lt;/var&gt;, draw a quadratic B&amp;eacute;zier curve from the current point. If there are multiple coordinate sets, draw a polybezier. Each coordinate set is a list of the form &lt;code&gt;(&lt;var&gt;x&lt;/var&gt; &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt;, where (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;) is the curve&amp;rsquo;s end point. The control point is the reflection of the control point of the previous command relative to the current point, if that command was &lt;code&gt;quadratic-bezier-curveto&lt;/code&gt; or &lt;code&gt;smooth-quadratic-bezier-curveto&lt;/code&gt;. Otherwise the control point coincides with the current point.</source>
          <target state="translated">使用 &lt;var&gt;coordinate-sets&lt;/var&gt; 的第一个元素，从当前点绘制二次贝塞尔曲线。如果有多个坐标集，请绘制一个多边形贝塞尔曲线。每个坐标集都是 &lt;code&gt;(&lt;var&gt;x&lt;/var&gt; &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; 形式的列表，其中（ &lt;var&gt;x&lt;/var&gt; ， &lt;var&gt;y&lt;/var&gt; ）是曲线的终点。如果该命令是 &lt;code&gt;quadratic-bezier-curveto&lt;/code&gt; 或 &lt;code&gt;smooth-quadratic-bezier-curveto&lt;/code&gt; ，则控制点是前一个命令的控制点相对于当前点的反射。否则，控制点与当前点重合。</target>
        </trans-unit>
        <trans-unit id="78017e08e4c0da9c01bf13555ba41b7cf9c572df" translate="yes" xml:space="preserve">
          <source>Using the first element in &lt;var&gt;coordinate-sets&lt;/var&gt;, draw an elliptical arc from the current point. If there are multiple coordinate sets, draw a sequence of elliptical arcs. Each coordinate set is a list of the form &lt;code&gt;(&lt;var&gt;rx&lt;/var&gt; &lt;var&gt;ry&lt;/var&gt; &lt;var&gt;x&lt;/var&gt; &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt;, where (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;) is the end point of the ellipse, and (&lt;var&gt;rx&lt;/var&gt;, &lt;var&gt;ry&lt;/var&gt;) are its radii. Attributes may be appended to the list:</source>
          <target state="translated">在 &lt;var&gt;coordinate-sets&lt;/var&gt; 使用第一个元素，从当前点绘制一个椭圆弧。如果有多个坐标集，请绘制一系列椭圆弧。每个坐标集都是形式为 &lt;code&gt;(&lt;var&gt;rx&lt;/var&gt; &lt;var&gt;ry&lt;/var&gt; &lt;var&gt;x&lt;/var&gt; &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; 的列表，其中（ &lt;var&gt;x&lt;/var&gt; ， &lt;var&gt;y&lt;/var&gt; ）是椭圆的终点，而（ &lt;var&gt;rx&lt;/var&gt; ， &lt;var&gt;ry&lt;/var&gt; ）是其半径。属性可以附加到列表中：</target>
        </trans-unit>
        <trans-unit id="7be49b5e5c7a33e195d62a77829135efa43c037e" translate="yes" xml:space="preserve">
          <source>Using the minibuffer to read input.</source>
          <target state="translated">使用minibuffer读取输入。</target>
        </trans-unit>
        <trans-unit id="f7505ee25600083f29457ce4a7ee395181c7cf5d" translate="yes" xml:space="preserve">
          <source>Using the module</source>
          <target state="translated">使用该模块</target>
        </trans-unit>
        <trans-unit id="8d768b22b5b81aa1c86e79689008416c960b7ad9" translate="yes" xml:space="preserve">
          <source>Using this option may require special privileges on some systems.</source>
          <target state="translated">在某些系统上使用该选项可能需要特殊的权限。</target>
        </trans-unit>
        <trans-unit id="b26d9004a1fd1e976a780d938c440fed4f12515f" translate="yes" xml:space="preserve">
          <source>Using this transport, the JSONRPC messages are encoded on the wire as plain text and prefaced by some basic HTTP-style enveloping headers, such as &amp;ldquo;Content-Length&amp;rdquo;.</source>
          <target state="translated">使用此传输，JSONRPC消息在网络上被编码为纯文本，并以一些基本的HTTP样式的包头（例如&amp;ldquo; Content-Length&amp;rdquo;）作为开头。</target>
        </trans-unit>
        <trans-unit id="2e3bbc57e7ecf30215f79db6fcfe7bca11189b47" translate="yes" xml:space="preserve">
          <source>Usual Display Conventions</source>
          <target state="translated">通常的显示协议</target>
        </trans-unit>
        <trans-unit id="ad5f0a9ee46915e3da4ecb9449eeff7d4c18cfa4" translate="yes" xml:space="preserve">
          <source>Usual PC monitors have a screen gamma of 2.2, so color values in Emacs, and in X windows generally, are calibrated to display properly on a monitor with that gamma value. If you specify 2.2 for &lt;code&gt;screen-gamma&lt;/code&gt;, that means no correction is needed. Other values request correction, designed to make the corrected colors appear on your screen the way they would have appeared without correction on an ordinary monitor with a gamma value of 2.2.</source>
          <target state="translated">通常的PC显示器的屏幕灰度系数为2.2，因此，在Emacs和X窗口中，通常会对色值进行校准以在具有该灰度系数值的显示器上正确显示。如果将 &lt;code&gt;screen-gamma&lt;/code&gt; 指定为2.2 ，则意味着不需要校正。其他值要求进行校正，旨在使校正后的颜色在伽玛值为2.2的普通显示器上以未经校正的方式出现在屏幕上。</target>
        </trans-unit>
        <trans-unit id="d8a9652e07fdba948c91b8e1799d7dc8298b8437" translate="yes" xml:space="preserve">
          <source>Usually it&amp;rsquo;s best to use &lt;code&gt;overriding-local-map&lt;/code&gt; as the expression for &lt;var&gt;keymap&lt;/var&gt;. Then &lt;code&gt;where-is-internal&lt;/code&gt; searches precisely the keymaps that are active. To search only the global map, pass the value &lt;code&gt;(keymap)&lt;/code&gt; (an empty keymap) as &lt;var&gt;keymap&lt;/var&gt;.</source>
          <target state="translated">通常，最好将 &lt;code&gt;overriding-local-map&lt;/code&gt; 用作 &lt;var&gt;keymap&lt;/var&gt; 的表达式。然后 &lt;code&gt;where-is-internal&lt;/code&gt; 精确搜索活动的键映射。要仅搜索全局映射，请将值 &lt;code&gt;(keymap)&lt;/code&gt; （一个空的keymap）作为 &lt;var&gt;keymap&lt;/var&gt; 传递。</target>
        </trans-unit>
        <trans-unit id="6c82832b7dd765e152b9fc84537c6ced1bf62aef" translate="yes" xml:space="preserve">
          <source>Usually the value of &lt;code&gt;help-form&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;. Then the help character has no special meaning at the level of command input, and it becomes part of a key sequence in the normal way. The standard key binding of</source>
          <target state="translated">通常， &lt;code&gt;help-form&lt;/code&gt; 的值为 &lt;code&gt;nil&lt;/code&gt; 。然后，帮助字符在命令输入级别上没有特殊含义，并且按常规方式成为键序列的一部分。的标准键绑定</target>
        </trans-unit>
        <trans-unit id="a385e6e4a6245a46630df8ddd8fd2679076ce468" translate="yes" xml:space="preserve">
          <source>Usually this function is called when the next input event arrives after displaying an echo-area message. The function is expected to clear the message displayed by its counterpart function specified by &lt;code&gt;set-message-function&lt;/code&gt;.</source>
          <target state="translated">通常，在显示回显区域消息后下一个输入事件到达时，将调用此函数。该功能应清除由 &lt;code&gt;set-message-function&lt;/code&gt; 指定的其对应功能显示的消息。</target>
        </trans-unit>
        <trans-unit id="f8f11570428f4529fd87952bdb9ba00c3da9a496" translate="yes" xml:space="preserve">
          <source>Usually, a function is implemented as a primitive because it is a fundamental part of Lisp (e.g., &lt;code&gt;car&lt;/code&gt;), or because it provides a low-level interface to operating system services, or because it needs to run fast. Unlike functions defined in Lisp, primitives can be modified or added only by changing the C sources and recompiling Emacs. See &lt;a href=&quot;writing-emacs-primitives#Writing-Emacs-Primitives&quot;&gt;Writing Emacs Primitives&lt;/a&gt;.</source>
          <target state="translated">通常，将函数实现为原始函数是因为它是Lisp的基本组成部分（例如 &lt;code&gt;car&lt;/code&gt; ），或者因为它为操作系统服务提供了底层接口，或者因为它需要快速运行。与Lisp中定义的函数不同，仅可以通过更改C源代码并重新编译Emacs来修改或添加原语。请参阅&lt;a href=&quot;writing-emacs-primitives#Writing-Emacs-Primitives&quot;&gt;编写Emacs基本体&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8fbabc42b68953507e477df44ec250d700d7774e" translate="yes" xml:space="preserve">
          <source>Usually, child frames do not exhibit window manager decorations like a title bar or external borders (see &lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;Frame Geometry&lt;/a&gt;). When the child frame does not show a menu or tool bar, any other of the frame&amp;rsquo;s borders (see &lt;a href=&quot;layout-parameters#Layout-Parameters&quot;&gt;Layout Parameters&lt;/a&gt;) can be used instead of the external borders.</source>
          <target state="translated">通常，子框架不会像标题栏或外部边框那样显示窗口管理器装饰（请参见&lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;框架几何&lt;/a&gt;）。当子框架不显示菜单或工具栏时，可以使用框架的任何其他边界（请参见&lt;a href=&quot;layout-parameters#Layout-Parameters&quot;&gt;Layout Parameters&lt;/a&gt;）代替外部边界。</target>
        </trans-unit>
        <trans-unit id="9f387a3c3858f1e35ee5cdc8abd757df62aabda5" translate="yes" xml:space="preserve">
          <source>Usually, moving a parent frame moves along all its child frames and their descendants as well, keeping their relative positions unaltered. Note that the hook &lt;code&gt;move-frame-functions&lt;/code&gt; (see &lt;a href=&quot;frame-position#Frame-Position&quot;&gt;Frame Position&lt;/a&gt;) is run for a child frame only when the position of the child frame relative to its parent frame changes.</source>
          <target state="translated">通常，移动父框架会沿其所有子框架及其后代移动，同时保持其相对位置不变。请注意，仅当子框架相对于其父框架的位置发生变化时，才对子框架运行hook &lt;code&gt;move-frame-functions&lt;/code&gt; 函数（请参见&amp;ldquo;&lt;a href=&quot;frame-position#Frame-Position&quot;&gt;框架位置&amp;rdquo;&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="dc9c0beada3128b35482d65aae16abbbc5f26533" translate="yes" xml:space="preserve">
          <source>Usually, no horizontal scrolling is in effect; then the leftmost column is at the left edge of the window. In this state, scrolling to the right is meaningless, since there is no data to the left of the edge to be revealed by it; so this is not allowed. Scrolling to the left is allowed; it scrolls the first columns of text off the edge of the window and can reveal additional columns on the right that were truncated before. Once a window has a nonzero amount of leftward horizontal scrolling, you can scroll it back to the right, but only so far as to reduce the net horizontal scroll to zero. There is no limit to how far left you can scroll, but eventually all the text will disappear off the left edge.</source>
          <target state="translated">通常情况下,没有水平滚动的效果;那么最左边的一列就在窗口的左边边缘。在这种状态下,向右滚动是没有意义的,因为边缘左边没有数据可以显示,所以不允许向右滚动。向左滚动是被允许的;它可以滚动窗口边缘的第一列文本,并且可以显示出右边额外的、之前被截断的列。一旦一个窗口有了一个非零的向左水平滚动量,你就可以将其向右滚动,但只能将净水平滚动量减少到零。你可以向左滚动的范围没有限制,但最终所有的文字都会从左边缘消失。</target>
        </trans-unit>
        <trans-unit id="ea62aa2fe86a457a72fe4de5203baf8fc2f210d4" translate="yes" xml:space="preserve">
          <source>Usually, the active keymaps are: (i) the keymap specified by the &lt;code&gt;keymap&lt;/code&gt; property, (ii) the keymaps of enabled minor modes, (iii) the current buffer&amp;rsquo;s local keymap, and (iv) the global keymap, in that order. Emacs searches for each input key sequence in all these keymaps.</source>
          <target state="translated">通常，活动键盘映射是：（i） &lt;code&gt;keymap&lt;/code&gt; 属性指定的键盘映射，（ii）启用的次要模式的键盘映射，（iii）当前缓冲区的本地键盘映射，以及（iv）全局键盘映射，按此顺序。Emacs在所有这些键图中搜索每个输入键序列。</target>
        </trans-unit>
        <trans-unit id="9b9fb838eb5fcdc300a49526342dda78379aacd1" translate="yes" xml:space="preserve">
          <source>Usually, the records are rearranged in order of ascending sort key. If the first argument to the &lt;code&gt;sort-subr&lt;/code&gt; function, &lt;var&gt;reverse&lt;/var&gt;, is non-&lt;code&gt;nil&lt;/code&gt;, the sort records are rearranged in order of descending sort key.</source>
          <target state="translated">通常，记录按升序排序。如果第一个参数 &lt;code&gt;sort-subr&lt;/code&gt; 功能， &lt;var&gt;reverse&lt;/var&gt; ，是不 &lt;code&gt;nil&lt;/code&gt; ，排序记录重新排列降序排序键的顺序。</target>
        </trans-unit>
        <trans-unit id="3b041849051a37134572bb487f95e27b79674028" translate="yes" xml:space="preserve">
          <source>Usually, this function returns the fill prefix, a string. However, before doing this, the function makes a final check (not specially mentioned in the following) that a line starting with this prefix wouldn&amp;rsquo;t look like the start of a paragraph. Should this happen, the function signals the anomaly by returning &lt;code&gt;nil&lt;/code&gt; instead.</source>
          <target state="translated">通常，此函数返回填充前缀字符串。但是，在执行此操作之前，该函数将进行最终检查（以下没有特别说明），以该前缀开头的行看起来不像段落的开头。如果发生这种情况，该函数将通过返回 &lt;code&gt;nil&lt;/code&gt; 来发出异常信号。</target>
        </trans-unit>
        <trans-unit id="7fac3b4d5003c79523fe0f703a0c72bb5d7727dc" translate="yes" xml:space="preserve">
          <source>Utility functions:</source>
          <target state="translated">实用功能。</target>
        </trans-unit>
        <trans-unit id="9303be7e663e13165b626f75ad7f1ef9bd96eba2" translate="yes" xml:space="preserve">
          <source>Valid RGB values are described in &lt;a href=&quot;color-names#Color-Names&quot;&gt;Color Names&lt;/a&gt;.</source>
          <target state="translated">有效的RGB值在&amp;ldquo;&lt;a href=&quot;color-names#Color-Names&quot;&gt;颜色名称&amp;rdquo;中&lt;/a&gt;进行了描述。</target>
        </trans-unit>
        <trans-unit id="8dce170de238b1feda2ecd9674ea3ca0d068fbcb" translate="yes" xml:space="preserve">
          <source>Value</source>
          <target state="translated">Value</target>
        </trans-unit>
        <trans-unit id="ea32ee2963c0ab05a7001c3313cbf39dcb651b15" translate="yes" xml:space="preserve">
          <source>Value is either 1 or 0, depending on whether &lt;code&gt;normal-erase-is-backspace-mode&lt;/code&gt; is turned on or off on this terminal. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/DEL-Does-Not-Delete.html#DEL-Does-Not-Delete&quot;&gt;DEL Does Not Delete&lt;/a&gt; in</source>
          <target state="translated">值是1还是0，具体取决于此终端上是 &lt;code&gt;normal-erase-is-backspace-mode&lt;/code&gt; 。见&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/DEL-Does-Not-Delete.html#DEL-Does-Not-Delete&quot;&gt;DEL不会删除&lt;/a&gt;在</target>
        </trans-unit>
        <trans-unit id="27fec02551d2c7b23758814b159a5dd18c8d9bf7" translate="yes" xml:space="preserve">
          <source>Value is the integer unique ID of the notification that can be used to remove the notification using &lt;code&gt;w32-notification-close&lt;/code&gt;, described below. If the function fails, the return value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">值是通知的整数唯一ID，可用于使用 &lt;code&gt;w32-notification-close&lt;/code&gt; 删除通知，如下所述。如果函数失败，则返回值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="97a0b0ead5d29482d2854affebf4ac2810d1dede" translate="yes" xml:space="preserve">
          <source>Value must be a function of a single argument, the &lt;code&gt;jsonrpc-process-connection&lt;/code&gt; object. The function is called after the underlying process object has been deleted (either deliberately by &lt;code&gt;jsonrpc-shutdown&lt;/code&gt;, or unexpectedly, because of some external cause).</source>
          <target state="translated">值必须是单个参数 &lt;code&gt;jsonrpc-process-connection&lt;/code&gt; 对象的函数。在删除了基础流程对象之后（由于 &lt;code&gt;jsonrpc-shutdown&lt;/code&gt; 故意或由于某些外部原因而意外地），将调用该函数。</target>
        </trans-unit>
        <trans-unit id="10f70f2ede4a93ca4e2ea44b3cbb460825ad069b" translate="yes" xml:space="preserve">
          <source>Value must be a live process object or a function of no arguments producing one such object. If passed a process object, the object is expected to contain a pre-established connection; otherwise, the function is called immediately after the object is made.</source>
          <target state="translated">值必须是一个活的过程对象或一个没有参数的函数,产生一个这样的对象。如果传递的是一个进程对象,则希望该对象包含一个预先建立的连接;否则,该函数在该对象产生后立即被调用。</target>
        </trans-unit>
        <trans-unit id="fb9f869922fac372b4eb1e810a4a38f0c49180dc" translate="yes" xml:space="preserve">
          <source>Value of the last field processed.</source>
          <target state="translated">处理的最后一个字段的值。</target>
        </trans-unit>
        <trans-unit id="8fd35ac25d6d0ab9b948eca26cb84bd76d2b9225" translate="yes" xml:space="preserve">
          <source>Values can be the symbols &lt;code&gt;always&lt;/code&gt;, &lt;code&gt;when-mapped&lt;/code&gt;, or &lt;code&gt;not-useful&lt;/code&gt;. The function can also return &lt;code&gt;nil&lt;/code&gt; when the question is inapplicable to a certain kind of display.</source>
          <target state="translated">值可以是 &lt;code&gt;always&lt;/code&gt; ， &lt;code&gt;when-mapped&lt;/code&gt; 或 &lt;code&gt;not-useful&lt;/code&gt; 的符号。当问题不适用于某种类型的显示器时，该函数还可以返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="19de69cb601f53a4ea7af22a65c71ae63251365c" translate="yes" xml:space="preserve">
          <source>Variable</source>
          <target state="translated">Variable</target>
        </trans-unit>
        <trans-unit id="7e50dbc760408fb500260afea8b047b38d0007e8" translate="yes" xml:space="preserve">
          <source>Variable Aliases</source>
          <target state="translated">变量别名</target>
        </trans-unit>
        <trans-unit id="1e81fac2c7879f6589f4e7917936fbc714b78210" translate="yes" xml:space="preserve">
          <source>Variable aliases are convenient for replacing an old name for a variable with a new name. &lt;code&gt;make-obsolete-variable&lt;/code&gt; declares that the old name is obsolete and therefore that it may be removed at some stage in the future.</source>
          <target state="translated">变量别名便于用新名称替换变量的旧名称。 &lt;code&gt;make-obsolete-variable&lt;/code&gt; 声明旧名称已过时，因此可以在将来的某个阶段将其删除。</target>
        </trans-unit>
        <trans-unit id="5328b4a344a25829c6d43b1c8a757f75ced9250c" translate="yes" xml:space="preserve">
          <source>Variable values in effect only in one buffer.</source>
          <target state="translated">变量值只在一个缓冲区内有效。</target>
        </trans-unit>
        <trans-unit id="64b77fd2c3194f1999e81482226ab5e74b0b4528" translate="yes" xml:space="preserve">
          <source>Variable values that exist only temporarily.</source>
          <target state="translated">只暂时存在的变量值。</target>
        </trans-unit>
        <trans-unit id="6a0e70f15443599912e2ebe9fa29e3f5e7a88104" translate="yes" xml:space="preserve">
          <source>Variable values that exist permanently, everywhere.</source>
          <target state="translated">变量值,永久存在,无处不在。</target>
        </trans-unit>
        <trans-unit id="f7a3501076850280c5cfc97caa779a34c98dbdd0" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;abbrev-expand-function&lt;/strong&gt;</source>
          <target state="translated">变量：&lt;strong&gt;缩写扩展功能&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="33808904c2fa1c9855605ab44950be7a4edd2970" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;abbrev-minor-mode-table-alist&lt;/strong&gt;</source>
          <target state="translated">变量：&lt;strong&gt;缩写模式下的表alist&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="74183064d32636f4099cb1fd975697c3a4201c34" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;abbrev-start-location-buffer&lt;/strong&gt;</source>
          <target state="translated">变量：&lt;strong&gt;abbrev-start-location-buffer&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9f94f4c98db644fe81df061b14ddac64605eba34" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;abbrev-start-location&lt;/strong&gt;</source>
          <target state="translated">变量：&lt;strong&gt;abbrev-start-location&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="47e94df2550463086bd3bb16c19b477072ef921e" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;abbrev-table-name-list&lt;/strong&gt;</source>
          <target state="translated">变量：&lt;strong&gt;abbrev-table-name-list&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="016a31c3a2d4212df698cb095ea2509a574aa665" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;abbrevs-changed&lt;/strong&gt;</source>
          <target state="translated">变量：&lt;strong&gt;缩写更改&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1513d387d78c29996055b161f0a7afa8db403f4a" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;activate-mark-hook&lt;/strong&gt;</source>
          <target state="translated">变量：&lt;strong&gt;激活标记钩&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="242dc639864126b7024c078ef93109fd927e5d3f" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;after-change-functions&lt;/strong&gt;</source>
          <target state="translated">变量：&lt;strong&gt;变更后功能&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b74a7c414ed36d6229dcfe78bc5f686c183d1832" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;after-change-major-mode-hook&lt;/strong&gt;</source>
          <target state="translated">变量：&lt;strong&gt;更改后主要模式挂钩&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c1df72d09e159c3c938dfbf526d3cc5a1b98f49c" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;after-focus-change-function&lt;/strong&gt;</source>
          <target state="translated">变量：&lt;strong&gt;对焦后改变功能&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f2a28059dc38c6e6e1e674c0da6c7521120a093c" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;after-init-hook&lt;/strong&gt;</source>
          <target state="translated">变量：&lt;strong&gt;after-init-hook&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8659e75230e10d890b526a96369c02b7a89c1b61" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;after-insert-file-functions&lt;/strong&gt;</source>
          <target state="translated">变量：&lt;strong&gt;插入文件后功能&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ea92b9bf812aa138f462af09efa08b7346d3adbd" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;after-load-functions&lt;/strong&gt;</source>
          <target state="translated">变量：&lt;strong&gt;加载后功能&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7090e66024352f23061910053c293e2194ac1953" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;after-make-frame-functions&lt;/strong&gt;</source>
          <target state="translated">变量：&lt;strong&gt;后框架功能&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0f7075690f7f1ac5e0597adb68c7c9c357259a6d" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;after-revert-hook&lt;/strong&gt;</source>
          <target state="translated">变量：&lt;strong&gt;还原后挂钩&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d8fa557c5b5f530320075e9f06c8e20eee45aa6f" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;ascii-case-table&lt;/strong&gt;</source>
          <target state="translated">变量：&lt;strong&gt;ascii-case-table&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1c0023efb5f53f4c2d08e17e0b9fdbaa3723bab6" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;auto-fill-chars&lt;/strong&gt;</source>
          <target state="translated">变量：&lt;strong&gt;自动填充字符&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2bd1dbf30bcd5f5d23cf26f523eab2ad56bdeadc" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;auto-fill-function&lt;/strong&gt;</source>
          <target state="translated">变量：&lt;strong&gt;自动填充功能&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="21da8ffa2dd9d317e33f938bea16a95d493fc54a" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;auto-mode-alist&lt;/strong&gt;</source>
          <target state="translated">变量：&lt;strong&gt;自动模式警报&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0a3281bcc6d12d375b7e121e2be57203e790a022" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;auto-raise-tool-bar-buttons&lt;/strong&gt;</source>
          <target state="translated">变量：&lt;strong&gt;自动升起工具栏按钮&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="45e8558758e110107557214d8b354cccbda7ea1d" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;auto-resize-tool-bars&lt;/strong&gt;</source>
          <target state="translated">变量：&lt;strong&gt;自动调整大小工具栏&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="025ec1f413272cddcd07c4a634c584beea58b8e3" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;auto-save-hook&lt;/strong&gt;</source>
          <target state="translated">变量：&lt;strong&gt;自动保存挂钩&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="171a642e185227a72766f2c35d638cb346363bff" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;auto-save-list-file-name&lt;/strong&gt;</source>
          <target state="translated">变量：&lt;strong&gt;自动保存列表文件名&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fd0283f5e93ae7621381ad25ad6ff3b5999e2a89" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;auto-window-vscroll&lt;/strong&gt;</source>
          <target state="translated">变量：&lt;strong&gt;自动窗口-vscroll&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f26775ebce6d195c0edbd9b246482a52fb91ca50" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;backup-enable-predicate&lt;/strong&gt;</source>
          <target state="translated">变量：&lt;strong&gt;备份启用谓词&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1ed1688ce62143c5c0d1c7ac505e1329f262fba2" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;backup-inhibited&lt;/strong&gt;</source>
          <target state="translated">变量：&lt;strong&gt;禁止备份&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d04a4fa335fe7697599d15570860b1d73bc6b29c" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;before-change-functions&lt;/strong&gt;</source>
          <target state="translated">变量：&lt;strong&gt;变更前功能&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c33d44f6716dcffc0a75e506f670bb8953768510" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;before-hack-local-variables-hook&lt;/strong&gt;</source>
          <target state="translated">变量：&lt;strong&gt;hack-local-variables-hook前&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="160c62b6e327e365b2a48fbcd1359366110d5d57" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;before-init-hook&lt;/strong&gt;</source>
          <target state="translated">变量：&lt;strong&gt;初始钩前&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e7a06fe895df569728125c2dcce6f1a11092ba22" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;before-make-frame-hook&lt;/strong&gt;</source>
          <target state="translated">变量：制作&lt;strong&gt;前挂钩&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="26256f794e2e98edfbcf81376a5bbae7ef01eddf" translate="yes" xml:space="preserve">
          <source>Variable: &lt;strong&gt;before-revert-hook&lt;/strong&gt;</source>
          <target state="translated">变量：&lt;strong&gt;还原前挂机&lt;/strong&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
