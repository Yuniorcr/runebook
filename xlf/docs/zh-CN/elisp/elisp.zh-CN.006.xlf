<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="elisp">
    <body>
      <group id="elisp">
        <trans-unit id="e89b83ea45b8211c6a3d739f6bcfdf5e0cd6f31e" translate="yes" xml:space="preserve">
          <source>Characters used to quote the following character so that it loses its normal syntactic meaning. This differs from an escape character in that only the character immediately following is ever affected.</source>
          <target state="translated">用于引用后面的字符,使其失去正常的语法意义。这不同于转义字符,因为只有紧接着的字符才会受到影响。</target>
        </trans-unit>
        <trans-unit id="5229f8ca7b5787266007ffe5eba509ce0205199f" translate="yes" xml:space="preserve">
          <source>Checking Whether to Stop</source>
          <target state="translated">检查是否停止</target>
        </trans-unit>
        <trans-unit id="1a02b865af27fd48cef26220daaa2a67ec3dc750" translate="yes" xml:space="preserve">
          <source>Checks a watch specified by its &lt;var&gt;descriptor&lt;/var&gt; for validity. &lt;var&gt;descriptor&lt;/var&gt; should be an object returned by &lt;code&gt;file-notify-add-watch&lt;/code&gt;.</source>
          <target state="translated">检查由其 &lt;var&gt;descriptor&lt;/var&gt; 指定的监视的有效性。 &lt;var&gt;descriptor&lt;/var&gt; 应该是 &lt;code&gt;file-notify-add-watch&lt;/code&gt; 返回的对象。</target>
        </trans-unit>
        <trans-unit id="83179d5bd01bda75c335784db8234cd8ca386bda" translate="yes" xml:space="preserve">
          <source>Checksum/Hash</source>
          <target state="translated">Checksum/Hash</target>
        </trans-unit>
        <trans-unit id="679834cba93998f32ac18bdd82e858f68d5374ba" translate="yes" xml:space="preserve">
          <source>Child Frames</source>
          <target state="translated">儿童框架</target>
        </trans-unit>
        <trans-unit id="651d8f98e31cc326b908e8831624a12b619cdefd" translate="yes" xml:space="preserve">
          <source>Child frames (see &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;) can be used to display a buffer within the screen estate of the selected frame without disrupting that frame&amp;rsquo;s window configuration and without the overhead associated with full-fledged frames as inflicted by &lt;code&gt;display-buffer-pop-up-frame&lt;/code&gt;.</source>
          <target state="translated">子帧（请参阅&lt;a href=&quot;child-frames#Child-Frames&quot;&gt;子帧&lt;/a&gt;）可用于在选定帧的屏幕区域内显示缓冲区，而不会破坏该帧的窗口配置，并且不会因 &lt;code&gt;display-buffer-pop-up-frame&lt;/code&gt; 造成的与成熟帧相关的开销。</target>
        </trans-unit>
        <trans-unit id="7fd4ad5ffb3ee017cfd6baa0c4df549c330ffadb" translate="yes" xml:space="preserve">
          <source>Child frames are objects halfway between windows (see &lt;a href=&quot;windows#Windows&quot;&gt;Windows&lt;/a&gt;) and &amp;ldquo;normal&amp;rdquo; frames. Like windows, they are attached to an owning frame. Unlike windows, they may overlap each other&amp;mdash;changing the size or position of one child frame does not change the size or position of any of its sibling child frames.</source>
          <target state="translated">子框架是介于窗口（请参阅&lt;a href=&quot;windows#Windows&quot;&gt;Windows&lt;/a&gt;）和&amp;ldquo;普通&amp;rdquo;框架之间的对象。像窗户一样，它们也连接到拥有的框架上。与窗口不同，它们可能会彼此重叠-更改一个子框架的大小或位置不会更改其任何同级子框架的大小或位置。</target>
        </trans-unit>
        <trans-unit id="54b1528f3b5e11f2897c9ba2b7e6b0d9a1b9f5ca" translate="yes" xml:space="preserve">
          <source>Choosing a Window for Displaying a Buffer</source>
          <target state="translated">选择显示缓冲区的窗口</target>
        </trans-unit>
        <trans-unit id="41ff354b2b330bd1f8a0587675e43cb32a731f33" translate="yes" xml:space="preserve">
          <source>Class</source>
          <target state="translated">Class</target>
        </trans-unit>
        <trans-unit id="73bcb4439511ca3316880511069b81c7b6b61a69" translate="yes" xml:space="preserve">
          <source>Classification of List Forms</source>
          <target state="translated">名单表格的分类</target>
        </trans-unit>
        <trans-unit id="54c91eee8b88cd7a1da84e4494811ae5be0bed92" translate="yes" xml:space="preserve">
          <source>Classifying Events</source>
          <target state="translated">事件分类</target>
        </trans-unit>
        <trans-unit id="f5391928fc04cf37d3f22d32b219810c4273845a" translate="yes" xml:space="preserve">
          <source>Cleaning Up from Nonlocal Exits</source>
          <target state="translated">清理非本地离职人员</target>
        </trans-unit>
        <trans-unit id="fc468d2ca020e6dff65c4251ad7d8bf45c408ae4" translate="yes" xml:space="preserve">
          <source>Clearing the screen and redrawing everything on it.</source>
          <target state="translated">清空屏幕,重新绘制屏幕上的一切。</target>
        </trans-unit>
        <trans-unit id="7db198a937ac58d5e998c1fdbce3834a5ff9eca3" translate="yes" xml:space="preserve">
          <source>Click Events</source>
          <target state="translated">点击事件</target>
        </trans-unit>
        <trans-unit id="da6e383b5d1b1b1956e1584a3ad86559a36d616a" translate="yes" xml:space="preserve">
          <source>Click and drag events happen when the user releases a mouse button. They cannot happen earlier, because there is no way to distinguish a click from a drag until the button is released.</source>
          <target state="translated">点击和拖动事件发生在用户释放鼠标按钮时。它们不可能在更早的时候发生,因为在释放按钮之前,无法区分点击和拖动。</target>
        </trans-unit>
        <trans-unit id="27f90a33cf05473b8ded38f28ac8d8396e58fe83" translate="yes" xml:space="preserve">
          <source>Close parenthesis characters: &amp;lsquo;</source>
          <target state="translated">右括号字符：'</target>
        </trans-unit>
        <trans-unit id="16b1546bfaf51b2730baa3cec8823ad69c6d520a" translate="yes" xml:space="preserve">
          <source>Closures</source>
          <target state="translated">Closures</target>
        </trans-unit>
        <trans-unit id="adac69379a626c2436948a4ef1792c7d719ef929" translate="yes" xml:space="preserve">
          <source>Code</source>
          <target state="translated">Code</target>
        </trans-unit>
        <trans-unit id="dee7438ecaee98dd605c8e5aa6a72193cc4f6922" translate="yes" xml:space="preserve">
          <source>Code Characters for interactive</source>
          <target state="translated">用于互动的代码字符</target>
        </trans-unit>
        <trans-unit id="6470cde5fd75e1703752e56115e4bcddaf9cceb0" translate="yes" xml:space="preserve">
          <source>Code compiled with older versions of &lt;code&gt;cl-defstruct&lt;/code&gt; that doesn&amp;rsquo;t use records may run into problems when used in a new Emacs. To alleviate this, Emacs detects when an old &lt;code&gt;cl-defstruct&lt;/code&gt; is used, and enables a mode in which &lt;code&gt;type-of&lt;/code&gt; handles old struct objects as if they were records.</source>
          <target state="translated">在新的Emacs中使用不使用记录的旧版本的 &lt;code&gt;cl-defstruct&lt;/code&gt; 编译的代码可能会出现问题。为了减轻这种情况，Emacs检测何时使用了旧的 &lt;code&gt;cl-defstruct&lt;/code&gt; ，并启用了一种模式，其中 &lt;code&gt;type-of&lt;/code&gt; 可以处理旧的struct对象，就像它们是记录一样。</target>
        </trans-unit>
        <trans-unit id="33fdada377e49ae37a3c31b87e114946ed169d2a" translate="yes" xml:space="preserve">
          <source>Code injection</source>
          <target state="translated">代码注入</target>
        </trans-unit>
        <trans-unit id="18b0235e9afe1feaca30156e4892efc6ab26d7a5" translate="yes" xml:space="preserve">
          <source>Code to be evaluated when you compile.</source>
          <target state="translated">编译时要评估的代码。</target>
        </trans-unit>
        <trans-unit id="b6c3d03f3f13def89e9159e5bc9746d725a8a258" translate="yes" xml:space="preserve">
          <source>Coding Systems</source>
          <target state="translated">编码系统</target>
        </trans-unit>
        <trans-unit id="09fbb89da0a4960ed091b8c56b1f02bba432c584" translate="yes" xml:space="preserve">
          <source>Coding Systems in Lisp</source>
          <target state="translated">Lisp中的编码系统</target>
        </trans-unit>
        <trans-unit id="c9be43da075c215c8f83d1e681a4d817e7eaa607" translate="yes" xml:space="preserve">
          <source>Coding conventions for keymaps, etc.</source>
          <target state="translated">钥匙图的编码惯例等。</target>
        </trans-unit>
        <trans-unit id="39471b1fef4c84d820ea6e5a4212dd283a64a8c9" translate="yes" xml:space="preserve">
          <source>Coding systems</source>
          <target state="translated">编码系统</target>
        </trans-unit>
        <trans-unit id="5fd08d03f752629350fef2d6b1fdacbc33659d81" translate="yes" xml:space="preserve">
          <source>Coding systems are conversions for saving files.</source>
          <target state="translated">编码系统是保存文件的转换。</target>
        </trans-unit>
        <trans-unit id="01b50d07b72e325efee7f2a5bf6c853960632b54" translate="yes" xml:space="preserve">
          <source>Coding-system for decoding the input from this process.</source>
          <target state="translated">编码系统,用于解码这一过程的输入。</target>
        </trans-unit>
        <trans-unit id="a85178ce8930e46ab4657390593e7e60d87d4c95" translate="yes" xml:space="preserve">
          <source>Coding-system for encoding the output to this process.</source>
          <target state="translated">编码系统,用于对该过程的输出进行编码。</target>
        </trans-unit>
        <trans-unit id="a24395fcf1b0bc32a7dfba3425426c6b7828a95f" translate="yes" xml:space="preserve">
          <source>Collapse the top-level Lisp form at point back to a single line.</source>
          <target state="translated">将点的顶级Lisp形式折叠回单行。</target>
        </trans-unit>
        <trans-unit id="432d3e9ca89096f9c70a9bb73faa021692ce5813" translate="yes" xml:space="preserve">
          <source>Collecting output from an asynchronous subprocess.</source>
          <target state="translated">收集异步子进程的输出。</target>
        </trans-unit>
        <trans-unit id="ebfb64e7412f7f27872aa6cf171f3913c339ce10" translate="yes" xml:space="preserve">
          <source>Color Names</source>
          <target state="translated">颜色名称</target>
        </trans-unit>
        <trans-unit id="e3927d2c55cb26e4ebd8ce79eb7711e317d6fd30" translate="yes" xml:space="preserve">
          <source>Column number computations ignore the width of the window and the amount of horizontal scrolling. Consequently, a column value can be arbitrarily high. The first (or leftmost) column is numbered 0. They also ignore overlays and text properties, aside from invisibility.</source>
          <target state="translated">列数计算忽略了窗口的宽度和水平滚动量。因此,列号的数值可以任意高。第一列(或最左边)的列数为0,它们也忽略了覆盖和文本属性,但不可见。</target>
        </trans-unit>
        <trans-unit id="3ea2ad512de5225992b14118d265ae7f9784a448" translate="yes" xml:space="preserve">
          <source>Combined with &lt;code&gt;set-mouse-absolute-pixel-position&lt;/code&gt;, this function can be used to move the mouse pointer to an arbitrary buffer position visible in some window:</source>
          <target state="translated">与 &lt;code&gt;set-mouse-absolute-pixel-position&lt;/code&gt; 结合使用，此功能可用于将鼠标指针移动到某个窗口中可见的任意缓冲区位置：</target>
        </trans-unit>
        <trans-unit id="89e2914b178bf01f3b67e7bc4822bc007c826709" translate="yes" xml:space="preserve">
          <source>Combining the above steps, code that arranges for a C function &lt;code&gt;module_func&lt;/code&gt; to be callable as &lt;code&gt;module-func&lt;/code&gt; from Lisp will look like this, as part of the module initialization function:</source>
          <target state="translated">结合以上步骤，安排C函数 &lt;code&gt;module_func&lt;/code&gt; 可从Lisp调用为 &lt;code&gt;module-func&lt;/code&gt; 的代码将如下所示，作为模块初始化功能的一部分：</target>
        </trans-unit>
        <trans-unit id="8901895fb1b1d4c4ea2fec368c25176bf73e2f7e" translate="yes" xml:space="preserve">
          <source>Command</source>
          <target state="translated">Command</target>
        </trans-unit>
        <trans-unit id="c540a913da6c7b24f00fa572431089391b33ba91" translate="yes" xml:space="preserve">
          <source>Command History</source>
          <target state="translated">命令历史</target>
        </trans-unit>
        <trans-unit id="fd286e9f4701c5ae71cd777de6993c25d3f1eb67" translate="yes" xml:space="preserve">
          <source>Command Loop</source>
          <target state="translated">命令循环</target>
        </trans-unit>
        <trans-unit id="981f6c22cf8efdfc346eaed94e8c7f5cae58d8cc" translate="yes" xml:space="preserve">
          <source>Command Loop Overview</source>
          <target state="translated">命令循环概述</target>
        </trans-unit>
        <trans-unit id="3f3d24c09abbcec88e17c87c6854f2e4e285971d" translate="yes" xml:space="preserve">
          <source>Command string to query the host capabilities.</source>
          <target state="translated">查询主机功能的命令串。</target>
        </trans-unit>
        <trans-unit id="8dbfe3bf892eb128f5e004de24fe67ebda0dba0d" translate="yes" xml:space="preserve">
          <source>Command, macro, and special form descriptions have the same format, but the word &amp;lsquo;</source>
          <target state="translated">命令，宏和特殊形式的描述具有相同的格式，但单词&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="bbfab97586e9e9754ecbaa71f3ee5cde157ac426" translate="yes" xml:space="preserve">
          <source>Command-Line Arguments</source>
          <target state="translated">命令行参数</target>
        </trans-unit>
        <trans-unit id="59bc0e224c7e7e59056390feeaa654b6497e479a" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;Helper-describe-bindings&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;Helper-describe-bindings&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="02947e9cdbd2a788e40e92f3a39930efc038d654" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;Helper-help&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;Helper-help&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4f07969fc71bb922ddb78e99f2fb2f9dbf3bdee4" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;abbrev-prefix-mark&lt;/strong&gt;&lt;em&gt;&amp;amp;optional arg&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;abbrev-prefix-mark&lt;/strong&gt;&lt;em&gt;和可选arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="16ae22e65e25d198b02e780000faaa640d81c403" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;abort-recursive-edit&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;中止递归编辑&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3b64d5ee66c7a9bdfab9fafa524bbca02b5d9e0a" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;add-name-to-file&lt;/strong&gt;&lt;em&gt;oldname newname &amp;amp;optional ok-if-already-exists&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;将名称添加到文件中的&lt;/strong&gt;&lt;em&gt;旧&lt;/em&gt;&lt;strong&gt;名称新名称&lt;/strong&gt;&lt;em&gt;和可选的&amp;ldquo;如果已经存在&amp;rdquo;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2efdc1e04ae9bbfc8a5c5f77eb57393e6ba6c8a6" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;append-to-file&lt;/strong&gt;&lt;em&gt;start end filename&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;附加到文件的&lt;/strong&gt;&lt;em&gt;开始，结束文件名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="444ee64e2cb86d4270389235ef9409b07d16db26" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;apropos&lt;/strong&gt;&lt;em&gt;pattern &amp;amp;optional do-all&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;适当的&lt;/strong&gt;&lt;em&gt;模式和可选的全部操作&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b3b13d866c34d7b2f40773b63466dff5c114c357" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;auto-save-mode&lt;/strong&gt;&lt;em&gt;arg&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;自动保存模式&lt;/strong&gt;&lt;em&gt;arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="98fda1dd64b95b361397324a49ef122a6fe4ec5e" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;back-to-indentation&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;回到缩进&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e5696804adbeb171e5e31ca9c4a46dad3af1ff4c" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;backward-button&lt;/strong&gt;&lt;em&gt;n &amp;amp;optional wrap display-message&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;后退按钮&lt;/strong&gt;&lt;em&gt;n和可选的环绕显示消息&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7a9e2790a02fe4be912584770427851eb0c58fc9" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;backward-char&lt;/strong&gt;&lt;em&gt;&amp;amp;optional count&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;后向字符&lt;/strong&gt;&lt;em&gt;和可选计数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4c4cd64a338a5515395a75f0997b22711d93b7c9" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;backward-delete-char-untabify&lt;/strong&gt;&lt;em&gt;count &amp;amp;optional killp&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;向后删除char-unabify &lt;/strong&gt;&lt;em&gt;count和可选的killp&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d9b13005ec6a01d44552deb6087c47a03e742c8c" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;backward-list&lt;/strong&gt;&lt;em&gt;&amp;amp;optional arg&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;向后列表&lt;/strong&gt;&lt;em&gt;和可选arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a4235d509f16b7475f2a35b4cd2e9f364b6395b2" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;backward-sexp&lt;/strong&gt;&lt;em&gt;&amp;amp;optional arg&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;向后展开&lt;/strong&gt;&lt;em&gt;和可选arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dd32744e5f47d652a012d23a6a5209212394c585" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;backward-to-indentation&lt;/strong&gt;&lt;em&gt;&amp;amp;optional arg&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;向后缩进&lt;/strong&gt;&lt;em&gt;和可选arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a826d20711b66f57cfb32a5c13243f2dc9d0c20e" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;backward-up-list&lt;/strong&gt;&lt;em&gt;&amp;amp;optional arg escape-strings no-syntax-crossing&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;向后列表&lt;/strong&gt;&lt;em&gt;和可选的arg转义字符串无语法交叉&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dd40da246e79640098fa204a6e526d41f51e3aa6" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;backward-word&lt;/strong&gt;&lt;em&gt;&amp;amp;optional count&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;后退单词&lt;/strong&gt;&lt;em&gt;和可选计数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2529cf99c47bd4f37db6757e1795094cc76a7016" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;balance-windows-area&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;balance-windows-area&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="79d52d3178e06275261a84929e7b4211eb529d91" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;balance-windows&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window-or-frame&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;天平窗&lt;/strong&gt;&lt;em&gt;和可选的窗框&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="686fae0f4b94961eb0689ba6c7e6962213cf4744" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;base64-decode-region&lt;/strong&gt;&lt;em&gt;beg end &amp;amp;optional base64url&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;base64-decode-region&lt;/strong&gt;&lt;em&gt;开头和可选的base64url&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9a821641a4a0f39aad5a202c8a22ae7316d0c383" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;base64-encode-region&lt;/strong&gt;&lt;em&gt;beg end &amp;amp;optional no-line-break&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;base64-encode-region&lt;/strong&gt;&lt;em&gt;开头和可选的无换行符&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5deed6bd00dfa73cad1194893a2dab5c283012e6" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;base64url-encode-region&lt;/strong&gt;&lt;em&gt;beg end &amp;amp;optional no-pad&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;base64url-encode-region开头&lt;/strong&gt;&lt;em&gt;和可选的no-pad&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2e84b211208acb865a5546ff8abade8848b61de2" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;beginning-of-buffer&lt;/strong&gt;&lt;em&gt;&amp;amp;optional n&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;缓冲区开始&lt;/strong&gt;&lt;em&gt;和可选n&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fd0dc7d516948caff6ff6c5577817f07d679609a" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;beginning-of-defun&lt;/strong&gt;&lt;em&gt;&amp;amp;optional arg&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;defun-of-defun&lt;/strong&gt;&lt;em&gt;和可选的arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ee3a0cd20e0a26aeccf613b3c8d5cba8fc5296c8" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;beginning-of-line&lt;/strong&gt;&lt;em&gt;&amp;amp;optional count&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;行首&lt;/strong&gt;&lt;em&gt;和可选计数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8929c859fa86eb521234e1544261d86f664e84b5" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;blink-matching-open&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;blink-matching-open&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ec6265ad897022edcb9ad57cfc84936b56d9c03f" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;buffer-disable-undo&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer-or-name&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;buffer-disable-undo&lt;/strong&gt;&lt;em&gt;和可选的buffer-or-name&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="007cd9631bbb8465ff005d8df6e1d75eed331b06" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;buffer-enable-undo&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer-or-name&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;buffer-enable-undo&lt;/strong&gt;&lt;em&gt;和可选的buffer-or-name&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2a9f1425f3195bb90d82387a172f3935a7bc8ee5" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;bury-buffer&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer-or-name&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;埋入缓冲区&lt;/strong&gt;&lt;em&gt;和可选的缓冲区或名称&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="18d41d965abd41ab91d23510dfb3d55dba2cea85" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;byte-compile-file&lt;/strong&gt;&lt;em&gt;filename &amp;amp;optional load&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;字节编译文件文件&lt;/strong&gt;&lt;em&gt;名和可选加载&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="803a259953f07768c90a958a12192e08209c1de8" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;byte-recompile-directory&lt;/strong&gt;&lt;em&gt;directory &amp;amp;optional flag force&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;字节重新编译目录&lt;/strong&gt;&lt;em&gt;目录和可选标志强制&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b3b8340a584ae43edbe2cc3be252527a88e34e0d" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;cancel-debug-on-entry&lt;/strong&gt;&lt;em&gt;&amp;amp;optional function-name&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;取消输入调试&lt;/strong&gt;&lt;em&gt;和可选函数名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="518730f23d22b0566fcfb9ef79408df20aa31eb7" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;cancel-debug-on-variable-change&lt;/strong&gt;&lt;em&gt;&amp;amp;optional variable&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;取消对变量更改的调试&lt;/strong&gt;&lt;em&gt;和可选变量&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a84191d7e9c9413e8e2ff61685afdf2fbb47c539" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;capitalize-region&lt;/strong&gt;&lt;em&gt;start end&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;大写区域&lt;/strong&gt;&lt;em&gt;开始结束&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="28cca831889ad779b17e2bc1fa1b190fb83f5de0" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;capitalize-word&lt;/strong&gt;&lt;em&gt;count&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;大写单词&lt;/strong&gt;&lt;em&gt;计数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d958a5ed4e4eee053c9387f1f89f0a389c0d6811" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;clone-indirect-buffer&lt;/strong&gt;&lt;em&gt;newname display-flag &amp;amp;optional norecord&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;clone-indirect-buffer新名称&lt;/strong&gt;&lt;em&gt;显示标志和可选的norecord&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="81891a3e8ea7806000ede5731e7faba008a6bac9" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;closepath&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;closepath&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c9600bac0b950404c0923f7c2b93d80670ba8a2a" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;compile-defun&lt;/strong&gt;&lt;em&gt;&amp;amp;optional arg&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;compile-defun &lt;/strong&gt;&lt;em&gt;＆optional arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f63db58fb0ffa6ee7f256da91d1589656e6c7b97" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;copy-directory&lt;/strong&gt;&lt;em&gt;dirname newname &amp;amp;optional keep-time parents copy-contents&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;复制目录&lt;/strong&gt;&lt;em&gt;dirname newname和可选的保留时间的父母copy-contents&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d4d74f32426cc9f14311f20eff393517d0afab6d" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;copy-file&lt;/strong&gt;&lt;em&gt;oldname newname &amp;amp;optional ok-if-already-exists time preserve-uid-gid preserve-extended-attributes&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;复制文件&lt;/strong&gt;&lt;em&gt;旧名称新名称和可选的确定时间（如果已经存在）保留uid gid保留扩展属性&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0e848e946acd685526011028ba6dc37e80c9df39" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;copy-region-as-kill&lt;/strong&gt;&lt;em&gt;start end &amp;amp;optional region&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;kill-copy-region-as-kill&lt;/strong&gt;&lt;em&gt;起始端和可选区域&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="aee190b0c6a011197cfacfa5dddca9e82b45d97a" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;count-words&lt;/strong&gt;&lt;em&gt;start end&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;计数字&lt;/strong&gt;&lt;em&gt;开始结束&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c92a2fea03b1c245964fbce8979c86f73488e79e" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;curveto&lt;/strong&gt;&lt;em&gt;coordinate-sets&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;曲线到&lt;/strong&gt;&lt;em&gt;坐标集&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="922df3d3ddd2841a70c4146d8c090a753906afc3" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;debug-on-entry&lt;/strong&gt;&lt;em&gt;function-name&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;进入调试&lt;/strong&gt;&lt;em&gt;功能名称&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4863b75a64143403b9c6d8c5ea1467a4cf64aae5" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;debug-on-variable-change&lt;/strong&gt;&lt;em&gt;variable&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;debug-on-variable-change&lt;/strong&gt;&lt;em&gt;变量&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fbe4e5e24d2aa2f23b0a3b3e7a587806cb171098" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;debug&lt;/strong&gt;&lt;em&gt;&amp;amp;rest debugger-args&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;debug &lt;/strong&gt;&lt;em&gt;＆rest debugger-args&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f9c2b6759e4509b7728d12193ccfdb8bc122ed35" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;decode-coding-region&lt;/strong&gt;&lt;em&gt;start end coding-system &amp;amp;optional destination&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;decode-coding-region&lt;/strong&gt;&lt;em&gt;开始结束编码系统和可选目的地&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2756a122fc8cb6cfee9185b8d444d35e0b5b2fc8" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;delete-backward-char&lt;/strong&gt;&lt;em&gt;count &amp;amp;optional killp&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;delete-backward-char &lt;/strong&gt;&lt;em&gt;count和可选的killp&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a9aeed952a3ba56790e714b9928f29943f95bbe7" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;delete-blank-lines&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;delete-blank-lines&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="62c34c4923e17b7d0e5e1bec7ca9a8f8358a55c4" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;delete-char&lt;/strong&gt;&lt;em&gt;count &amp;amp;optional killp&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;delete-char &lt;/strong&gt;&lt;em&gt;count和可选的killp&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="691f01e3fa0f4b6b47907082997fcf406d6386d9" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;delete-directory&lt;/strong&gt;&lt;em&gt;dirname &amp;amp;optional recursive trash&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;delete-directory &lt;/strong&gt;&lt;em&gt;dirname和可选的递归垃圾箱&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="45f93b85cde38b0a7cc615ef7cfe749e52bbfa10" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;delete-file&lt;/strong&gt;&lt;em&gt;filename &amp;amp;optional trash&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;删除文件&lt;/strong&gt;&lt;em&gt;名和可选垃圾&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1a3fceb3f3c0e98f92e3fd4202a59cb3eb8dd624" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;delete-frame&lt;/strong&gt;&lt;em&gt;&amp;amp;optional frame force&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;删除框架&lt;/strong&gt;&lt;em&gt;和可选框架力&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="86ececc0777481e40660a2ff725bdcda17aa725f" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;delete-horizontal-space&lt;/strong&gt;&lt;em&gt;&amp;amp;optional backward-only&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;delete-horizo​​ntal-space&lt;/strong&gt;&lt;em&gt;和可选向后&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="656387dd155811d6e98405811ddd88b637cf21d6" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;delete-indentation&lt;/strong&gt;&lt;em&gt;&amp;amp;optional join-following-p beg end&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;delete-indentation&lt;/strong&gt;&lt;em&gt;和optional join-following -p开头&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="698a3aaf6b4c8adf75662a04e6a7c5d0be250682" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;delete-minibuffer-contents&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;delete-minibuffer-contents&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f8d6f35dde4b84863e3f1877dd018b4e8bcbcba0" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;delete-other-frames&lt;/strong&gt;&lt;em&gt;&amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;删除其他框架&lt;/strong&gt;&lt;em&gt;和可选框架&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e2a8ece1dd524c2478b7b4f1767035dd2f73a456" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;delete-other-windows&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;delete-other-windows&lt;/strong&gt;&lt;em&gt;和可选窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d1d80f5fc2f0bf8867b4549863fc440dda2d6699" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;delete-region&lt;/strong&gt;&lt;em&gt;start end&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;delete-region&lt;/strong&gt;&lt;em&gt;开始结束&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c52d0a0cb1c4d3e5116f8c0b7d347424dea77d41" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;delete-trailing-whitespace&lt;/strong&gt;&lt;em&gt;&amp;amp;optional start end&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;delete-trailing-whitespace&lt;/strong&gt;&lt;em&gt;和可选的开始结束&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="549a3d4828134516d0bf60010bcfe475973d893a" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;delete-window&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;删除窗口&lt;/strong&gt;&lt;em&gt;和可选窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ab76dec031d048675ba017ea3ea777d14c1f726a" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;delete-windows-on&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer-or-name frame&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;delete-windows-on&lt;/strong&gt;&lt;em&gt;和可选的buffer-or-name框架&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3fdb84a5c86a34182acfc86473256621e5173cf5" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;describe-bindings&lt;/strong&gt;&lt;em&gt;&amp;amp;optional prefix buffer-or-name&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;describe-bindings&lt;/strong&gt;&lt;em&gt;和可选的前缀buffer-or-name&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="eac291ce203288be6eb9f6a92d853493f0c0e3c8" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;describe-buffer-case-table&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;describe-buffer-case-table&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5b2831cfd8813191e73cd78995ca8ca2c694ee09" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;describe-categories&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer-or-name&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;describe-categories&lt;/strong&gt;&lt;em&gt;和可选的buffer-or-name&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d033724b174f562b0324fc20868921e01c4a2045" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;describe-current-display-table&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;describe-current-display-table&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="336c4bbd9c280813d533bc3dd8b8838799f1bcea" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;describe-mode&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;describe-mode&lt;/strong&gt;&lt;em&gt;和可选缓冲区&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a442b1e3d6410066f99d90c1fd68f33f064ac1ae" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;describe-prefix-bindings&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;describe-prefix-bindings&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9e2e2eaf639122189e404c98a0c113086e31cf87" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;describe-syntax&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;describe-syntax&lt;/strong&gt;&lt;em&gt;和可选缓冲区&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a29a4c440dea09a3db7b1f2f95796cff0a414da4" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;digit-argument&lt;/strong&gt;&lt;em&gt;arg&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;digit-argument &lt;/strong&gt;&lt;em&gt;arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="81a8ab84fead6d5a35f538f69ddd1b0302e5a06c" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;disable-command&lt;/strong&gt;&lt;em&gt;command&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;disable-command&lt;/strong&gt;&lt;em&gt;命令&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="06de647f35ac4ae305d187b9185d78f8a714554d" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;disable-theme&lt;/strong&gt;&lt;em&gt;theme&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;disable-theme&lt;/strong&gt;&lt;em&gt;主题&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="26931dbc9579eecf14dbe8dd7175172e939bbb53" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;disassemble&lt;/strong&gt;&lt;em&gt;object &amp;amp;optional buffer-or-name&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;反汇编&lt;/strong&gt;&lt;em&gt;对象和可选的缓冲区或名称&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6c258e71e44175155cd46fe7ebe7441067916e47" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;display-buffer&lt;/strong&gt;&lt;em&gt;buffer-or-name &amp;amp;optional action frame&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;display-buffer &lt;/strong&gt;&lt;em&gt;buffer-or-name和可选操作帧&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e6c4afa013c978edae68d1a4e7144699522dbddb" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;do-auto-save&lt;/strong&gt;&lt;em&gt;&amp;amp;optional no-message current-only&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;do-auto-save&lt;/strong&gt;&lt;em&gt;和可选的无消息仅当前&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d019dcfc74c5246c50871a7f9ea70aa04c8bb096" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;down-list&lt;/strong&gt;&lt;em&gt;&amp;amp;optional arg&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;下列表&lt;/strong&gt;&lt;em&gt;和可选arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="46caaef87b1928f17de0c5d83ece3d622dd29a2f" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;downcase-region&lt;/strong&gt;&lt;em&gt;start end&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;downcase-region&lt;/strong&gt;&lt;em&gt;开始结束&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2f2ed36185c4514de8b8a135be7bbc75a3c5e142" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;downcase-word&lt;/strong&gt;&lt;em&gt;count&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;小写单词&lt;/strong&gt;&lt;em&gt;计数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="547f5a4b5ff359929b595e9f28b3da5f2c4ed1b1" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;edebug-display-freq-count&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;edebug-display-freq-count&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="24ab3882e83bdbc401485f8a5f96e49b2b6a7a9d" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;edebug-set-initial-mode&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;edebug-set-initial-mode&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f4e67ad5f5bff63b162bba1f9dfd00d51dae1562" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;elliptical-arc&lt;/strong&gt;&lt;em&gt;coordinate-sets&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;椭圆弧&lt;/strong&gt;&lt;em&gt;坐标集&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cabb3019c3ea4ca9d57ccd698958feb6a93de274" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;emacs-init-time&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;emacs-init-time&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="58541ffbf3952425a5ade30559e989570a2b4d1f" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;emacs-uptime&lt;/strong&gt;&lt;em&gt;&amp;amp;optional format&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;emacs-uptime&lt;/strong&gt;&lt;em&gt;和可选格式&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0c3fb7f171f9110d44b59ba2ad7587b9bc102b7c" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;emacs-version&lt;/strong&gt;&lt;em&gt;&amp;amp;optional here&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;emacs版本&lt;/strong&gt;&lt;em&gt;和可选此处&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b140e2d789bf4ba1bf77c76fcee6a89e9f628655" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;enable-command&lt;/strong&gt;&lt;em&gt;command&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;enable-command&lt;/strong&gt;&lt;em&gt;命令&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="57a546f18ba9a39723c06bbc9343368c68b2ab14" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;enable-theme&lt;/strong&gt;&lt;em&gt;theme&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;enable-theme&lt;/strong&gt;&lt;em&gt;主题&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7cefa7e9a66ea8211e8d79234b5e8d10c91641f6" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;encode-coding-region&lt;/strong&gt;&lt;em&gt;start end coding-system &amp;amp;optional destination&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;encoding-coding-region&lt;/strong&gt;&lt;em&gt;起始结束编码系统和可选目标&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5558e507573728623a38b84cf073899bec05d473" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;end-of-buffer&lt;/strong&gt;&lt;em&gt;&amp;amp;optional n&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;缓冲区结尾&lt;/strong&gt;&lt;em&gt;和可选n&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cfb3cd165fcc03777b037258d057b1c95e6f54e0" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;end-of-defun&lt;/strong&gt;&lt;em&gt;&amp;amp;optional arg&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;defun-of-defun&lt;/strong&gt;&lt;em&gt;和可选的arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="affc2da175fb6b2ce6cd24c2100689ba30580f3a" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;end-of-line&lt;/strong&gt;&lt;em&gt;&amp;amp;optional count&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;行尾&lt;/strong&gt;&lt;em&gt;和可选计数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="311b6bddea93a0c2ef32275dcad433191db0e2c6" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;erase-buffer&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;擦除缓冲区&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8507804a7df314eff4fab5265c05f0aa89c2e9d8" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;eval-buffer&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer-or-name stream filename unibyte print&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;eval缓冲区&lt;/strong&gt;&lt;em&gt;和可选的缓冲区或名称流文件名单字节打印&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8a8ea8f53d14afa1a1416f0a8190e8b9a72eaae2" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;eval-region&lt;/strong&gt;&lt;em&gt;start end &amp;amp;optional stream read-function&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;eval-region&lt;/strong&gt;&lt;em&gt;开始结束和可选的流读取功能&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c7e63fcff3071920b098a1ec1938c9a6c0f18e2e" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;execute-extended-command&lt;/strong&gt;&lt;em&gt;prefix-argument&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;execute-extended-command&lt;/strong&gt;&lt;em&gt;前缀参数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c10136cd2348184f37a28f58788ac74070e8ee8b" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;exit-minibuffer&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;exit-minibuffer&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="14ce7837436f33568662d572c1424f45c34ad565" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;exit-recursive-edit&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;exit-recursive-edit&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3a44dd6987a1ffba7aa55dc8e00995c7bf0f6851" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;expand-abbrev&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;expand-abbrev&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4d7efe99ce5558874e7885b19e171f4ccd1773f8" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;fill-individual-paragraphs&lt;/strong&gt;&lt;em&gt;start end &amp;amp;optional justify citation-regexp&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;填充个人段落&lt;/strong&gt;&lt;em&gt;开始结尾和可选的证明引用正则表达式&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="68f8b04bf4a87f26b77e1d3968b4e76c33ade7bd" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;fill-paragraph&lt;/strong&gt;&lt;em&gt;&amp;amp;optional justify region&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;填充段落&lt;/strong&gt;&lt;em&gt;和可选的对齐区域&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ab43b90e94a5eacc656ea508bfe428a707981482" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;fill-region-as-paragraph&lt;/strong&gt;&lt;em&gt;start end &amp;amp;optional justify nosqueeze squeeze-after&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;按段填充区域&lt;/strong&gt;&lt;em&gt;开始结尾，并且可选，然后按nosqueeze squeeze-after&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8ce218dfd77e733846a751ec2bf76e6496a4fb62" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;fill-region&lt;/strong&gt;&lt;em&gt;start end &amp;amp;optional justify nosqueeze to-eop&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;填充区域&lt;/strong&gt;&lt;em&gt;开始结束和可选的对齐方式来暂停进入&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="434503cd260d6caf1783e81862bf7d7f958488b2" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;find-file-literally&lt;/strong&gt;&lt;em&gt;filename&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;find-file-literally&lt;/strong&gt;&lt;em&gt;文件名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="14bae761c2ce9c1a3851b74464415e97b17653ab" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;find-file-other-window&lt;/strong&gt;&lt;em&gt;filename &amp;amp;optional wildcards&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;find-file-other-window&lt;/strong&gt;&lt;em&gt;文件名和可选通配符&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d14c0ebad95fa0a47437a551648265c9d061f748" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;find-file-read-only&lt;/strong&gt;&lt;em&gt;filename &amp;amp;optional wildcards&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;find-file-read-only&lt;/strong&gt;&lt;em&gt;文件名和可选通配符&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="69b8e9e849fba2d10d533610173431469994f8c7" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;find-file&lt;/strong&gt;&lt;em&gt;filename &amp;amp;optional wildcards&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;查找文件&lt;/strong&gt;&lt;em&gt;名和可选通配符&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="518b952f143fd81d1f28ef013315ad4b62bdd33c" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;fit-frame-to-buffer&lt;/strong&gt;&lt;em&gt;&amp;amp;optional frame max-height min-height max-width min-width only&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;fit-frame-to-buffer&lt;/strong&gt;&lt;em&gt;和可选帧max-height min-height max-width仅min-width&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d7f8405a86f9c611b5ab93931c6e30c1825512fb" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;fit-window-to-buffer&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window max-height min-height max-width min-width preserve-size&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;fit-window-to-buffer&lt;/strong&gt;&lt;em&gt;和可选窗口max-height min-height max-width min-width保留大小&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f95dcb269e6ce80fcb7b09dcae7b7e0f6699bc37" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;fixup-whitespace&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;fixup-whitespace&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e131e6aa4792af96b8b47f0b787ae4f77fe31002" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;format-find-file&lt;/strong&gt;&lt;em&gt;file format&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;format-find-file&lt;/strong&gt;&lt;em&gt;文件格式&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8d701179e67643c161c33eb711d33ea7935b176b" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;format-insert-file&lt;/strong&gt;&lt;em&gt;file format &amp;amp;optional beg end&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;format-insert-file&lt;/strong&gt;&lt;em&gt;文件格式和可选的结尾&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="711b38bfe6c4319d48b9a18fc30275f30df997e0" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;format-write-file&lt;/strong&gt;&lt;em&gt;file format &amp;amp;optional confirm&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;format-write-file&lt;/strong&gt;&lt;em&gt;文件格式和可选确认&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="33efdff38220ef39e744f81152bc08b28e716bfb" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;forward-button&lt;/strong&gt;&lt;em&gt;n &amp;amp;optional wrap display-message no-error&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;前向按钮&lt;/strong&gt;&lt;em&gt;n和可选换行显示消息无错误&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a2014b76c37bc1fe83082bc4f55d88e9d81b473d" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;forward-char&lt;/strong&gt;&lt;em&gt;&amp;amp;optional count&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;正向字符&lt;/strong&gt;&lt;em&gt;和可选计数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4a8227b7963bdd3e086fda44e0acb9ffc5a41d03" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;forward-line&lt;/strong&gt;&lt;em&gt;&amp;amp;optional count&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;前线&lt;/strong&gt;&lt;em&gt;和可选计数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d0f8a26fb43b647c16417b5303e3f4062ce465f7" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;forward-list&lt;/strong&gt;&lt;em&gt;&amp;amp;optional arg&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;转发列表&lt;/strong&gt;&lt;em&gt;和可选arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0037e9c22b9632b0ca04b8d1041b7e512038fd2b" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;forward-sexp&lt;/strong&gt;&lt;em&gt;&amp;amp;optional arg&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;forward-sexp&lt;/strong&gt;&lt;em&gt;和可选arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="66680ad0ead308cbc5de61a61947e92c0c37480e" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;forward-to-indentation&lt;/strong&gt;&lt;em&gt;&amp;amp;optional arg&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;前进到缩进&lt;/strong&gt;&lt;em&gt;和可选arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7bec9ec6d36d1f1e580fd123f73cf8c5c74421e3" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;forward-word&lt;/strong&gt;&lt;em&gt;&amp;amp;optional count&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;前向字&lt;/strong&gt;&lt;em&gt;和可选计数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2b8364d43b28915c9aaee538c0e9c397067ed8ca" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;fundamental-mode&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;基本模式&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="135aceda589a7c28e8dc596bd3d2d52009ad05e3" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;garbage-collect&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;垃圾收集&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f9d187e4a90283b895d6eafb68e76b9ea4cdf80c" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;getenv&lt;/strong&gt;&lt;em&gt;var &amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;getenv &lt;/strong&gt;&lt;em&gt;var和可选框架&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="33e55fe619dc268c2fdd48a00c02ecb5011d3dd4" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;global-set-key&lt;/strong&gt;&lt;em&gt;key binding&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;全局设置键&lt;/strong&gt;&lt;em&gt;键绑定&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8b8c01b4e1a3225ffc294eaf4947f415a25abd03" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;global-unset-key&lt;/strong&gt;&lt;em&gt;key&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;global-unset-key&lt;/strong&gt;&lt;em&gt;键&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4d425ab0b8cce6194c6f5b89db301531080023dc" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;goto-char&lt;/strong&gt;&lt;em&gt;position&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;转到字符&lt;/strong&gt;&lt;em&gt;位置&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f3243d2c8b4e732a6798da7f7b67c28d6a5e8f8a" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;goto-history-element&lt;/strong&gt;&lt;em&gt;nabs&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;goto- &lt;/strong&gt;&lt;em&gt;history-&lt;/em&gt;&lt;strong&gt;元素小记&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b5d834632457aacbe6d67cc5373d0406ff46bd8f" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;gui-set-selection&lt;/strong&gt;&lt;em&gt;type data&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;gui集选择&lt;/strong&gt;&lt;em&gt;类型数据&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9f9f71a68f0ae3f417936f4352b4c97c9f532b3d" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;handle-focus-in&lt;/strong&gt;&lt;em&gt;event&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;处理焦点进入&lt;/strong&gt;&lt;em&gt;事件&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dcf5ba9ab88d788cd9ccd08083274712148f2d33" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;handle-switch-frame&lt;/strong&gt;&lt;em&gt;frame&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;手柄开关框架&lt;/strong&gt;&lt;em&gt;框架&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bd7c8fc606e350a862c82219a85c9fcc1e734aac" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;horizontal-lineto&lt;/strong&gt;&lt;em&gt;x-coordinates&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;水平线到&lt;/strong&gt;&lt;em&gt;x坐标&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0bca4d375084c490d38732649901037af18600c4" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;iconify-frame&lt;/strong&gt;&lt;em&gt;&amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;iconify框架&lt;/strong&gt;&lt;em&gt;和可选框架&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="28376f6d4d14d4ba95f6cd0ef14d519469faa819" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;imenu-add-to-menubar&lt;/strong&gt;&lt;em&gt;name&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;imenu-add-to-menubar&lt;/strong&gt;&lt;em&gt;名称&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="83d85e704073a680a9ab40860b3fb4e35d736c5b" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;indent-according-to-mode&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;缩进模式&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c246ad642a506335ea203b08a4add72f01f6dca0" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;indent-code-rigidly&lt;/strong&gt;&lt;em&gt;start end columns &amp;amp;optional nochange-regexp&lt;/em&gt;</source>
          <target state="translated">命令：以&lt;strong&gt;缩进代码&lt;/strong&gt;&lt;em&gt;开头的结尾列和可选的nochange-regexp&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="270e3f43020e9bd9e93667655679dcc6f2f9fe1a" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;indent-for-tab-command&lt;/strong&gt;&lt;em&gt;&amp;amp;optional rigid&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;缩进制表符命令&lt;/strong&gt;&lt;em&gt;和可选的刚性&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="176c4e43ff80664444fd466c019171b4694d2e74" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;indent-region&lt;/strong&gt;&lt;em&gt;start end &amp;amp;optional to-column&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;缩进区域&lt;/strong&gt;&lt;em&gt;开始结束和可选的列&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3998d8394b9540580f612fe25fb7c64ca60d8620" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;indent-relative-first-indent-point&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;indent-relative-first-indent-point&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e772c9806c8ce05ec3da6ba4d032df8b1df85953" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;indent-relative&lt;/strong&gt;&lt;em&gt;&amp;amp;optional unindented-ok&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;相对于缩进&lt;/strong&gt;&lt;em&gt;和可选indented-ok&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b412adbd584000dac1a0bbd5689936f4fd539ccd" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;indent-rigidly&lt;/strong&gt;&lt;em&gt;start end count&lt;/em&gt;</source>
          <target state="translated">命令：以&lt;strong&gt;缩进方式&lt;/strong&gt;&lt;em&gt;开始结束计数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c8e4d649047379c5e17f55c86d9cc6706a77396a" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;indent-to&lt;/strong&gt;&lt;em&gt;column &amp;amp;optional minimum&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;缩进至&lt;/strong&gt;&lt;em&gt;列和可选的最小值&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a71481f19a91b478a7aff6890d9357e5abad35c0" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;insert-buffer&lt;/strong&gt;&lt;em&gt;from-buffer-or-name&lt;/em&gt;</source>
          <target state="translated">命令：&lt;em&gt;从缓冲区或名称&lt;/em&gt;&lt;strong&gt;插入缓冲区&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b8815e94521d52fd77a29d3fda24dcf8285b17f8" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;insert-char&lt;/strong&gt;&lt;em&gt;character &amp;amp;optional count inherit&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;insert-char&lt;/strong&gt;&lt;em&gt;字符和可选计数继承&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6e0abbf19abc072a6b7b56407403dfb3335e38cc" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;insert-register&lt;/strong&gt;&lt;em&gt;reg &amp;amp;optional beforep&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;insert-register &lt;/strong&gt;&lt;em&gt;reg和可选的prep&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e79b06800ecaca9051978dbfe7dab6c1ffeefd95" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;invert-face&lt;/strong&gt;&lt;em&gt;face &amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;反面&lt;/strong&gt;&lt;em&gt;和可选框&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="84b0549cc40b42a2b15cd0cc95fad9c69f7c892d" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;just-one-space&lt;/strong&gt;&lt;em&gt;&amp;amp;optional n&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;仅一个空格&lt;/strong&gt;&lt;em&gt;和可选n&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8aab092a162541dd2a9606d54cfd8c2450be8b36" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;justify-current-line&lt;/strong&gt;&lt;em&gt;&amp;amp;optional how eop nosqueeze&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;justify-current-line&lt;/strong&gt;&lt;em&gt;和可选的eop nosqueeze&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9fb476cea6da1e9d1098cc4d6c7b16673e9ad0bf" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;keyboard-quit&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;键盘退出&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6a435d92658abec77f53a10b92fb9dcfed65ae6d" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;kill-buffer&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer-or-name&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;kill-buffer&lt;/strong&gt;&lt;em&gt;和可选的buffer-or-name&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="003da45d20aee1fe9532383f88b7a68e585e86c6" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;kill-emacs&lt;/strong&gt;&lt;em&gt;&amp;amp;optional exit-data&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;kill-emacs&lt;/strong&gt;&lt;em&gt;和可选的退出数据&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="407c7e175dd49c63417e8b8c7397848b158b56e5" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;kill-local-variable&lt;/strong&gt;&lt;em&gt;variable&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;kill-local-variable&lt;/strong&gt;&lt;em&gt;变量&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="845138c1a1f687d73d2dba1b16c82e5d6b0dee55" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;kill-region&lt;/strong&gt;&lt;em&gt;start end &amp;amp;optional region&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;kill-region&lt;/strong&gt;&lt;em&gt;开始结束和可选区域&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e21f7f25793d2f5ca420e1502b941a4589e7050a" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;lineto&lt;/strong&gt;&lt;em&gt;points&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;lineto&lt;/strong&gt;&lt;em&gt;点&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8ca6885773c7d98728104aee98c243a122bf90a6" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;list-charset-chars&lt;/strong&gt;&lt;em&gt;charset&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;list-charset-chars &lt;/strong&gt;&lt;em&gt;charset&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="55b2c51859f6e32fbb9ed38f8d57d0a6cebd5881" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;list-load-path-shadows&lt;/strong&gt;&lt;em&gt;&amp;amp;optional stringp&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;list-load-path-shadows&lt;/strong&gt;&lt;em&gt;和可选的stringp&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="35950266cb0a951b746684628f7a7e78a4209727" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;list-processes&lt;/strong&gt;&lt;em&gt;&amp;amp;optional query-only buffer&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;列表进程&lt;/strong&gt;&lt;em&gt;和可选的仅查询缓冲区&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="11ef8f8a469800b67f120785941b41ba290c31ac" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;load-file&lt;/strong&gt;&lt;em&gt;filename&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;加载文件的文件&lt;/strong&gt;&lt;em&gt;名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7af6470f785f84f9c97a9317219a0728d1ad1a50" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;load-library&lt;/strong&gt;&lt;em&gt;library&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;负载&lt;/strong&gt;&lt;em&gt;库&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="013c40fb40b23fc8c45f3faf70dcda1430877894" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;load-theme&lt;/strong&gt;&lt;em&gt;theme &amp;amp;optional no-confirm no-enable&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;load-theme&lt;/strong&gt;&lt;em&gt;主题和可选的no-confirm no-enable&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ac160e12e0ed8e1587e6190b966f539227605142" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;local-set-key&lt;/strong&gt;&lt;em&gt;key binding&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;本地设置键&lt;/strong&gt;&lt;em&gt;键绑定&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="89649055e1c984642257be864cafca2874c483b7" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;local-unset-key&lt;/strong&gt;&lt;em&gt;key&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;local-unset-key&lt;/strong&gt;&lt;em&gt;键&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7be867a95825683de61435921e7202786ad6eb55" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;locate-library&lt;/strong&gt;&lt;em&gt;library &amp;amp;optional nosuffix path interactive-call&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;locate-library&lt;/strong&gt;&lt;em&gt;库和可选的nosuffix路径交互式调用&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="08037e8341deaa6f71d7210c061cf49b6c682a39" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;lower-frame&lt;/strong&gt;&lt;em&gt;&amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;下框&lt;/strong&gt;&lt;em&gt;和可选框&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="84ba2f2b19a73a4d24d6d71bc57d767c69ca6bbe" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;make-directory&lt;/strong&gt;&lt;em&gt;dirname &amp;amp;optional parents&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;make- &lt;/strong&gt;&lt;em&gt;dir&lt;/em&gt;&lt;strong&gt;目录名&lt;/strong&gt;&lt;em&gt;和可选的父级&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5431e989d4d25206363accc61bf35ed9587b4d77" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;make-empty-file&lt;/strong&gt;&lt;em&gt;filename &amp;amp;optional parents&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;make-empty-file文件&lt;/strong&gt;&lt;em&gt;名和可选的父级&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c6d7ba5a8f3796e9f2a54c0d24f19bbd274714f9" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;make-frame-invisible&lt;/strong&gt;&lt;em&gt;&amp;amp;optional frame force&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;使框架不可见&lt;/strong&gt;&lt;em&gt;和可选框架力&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="eb99d3fb40c563f58915bd80fef630df1d70c0dd" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;make-frame-on-display&lt;/strong&gt;&lt;em&gt;display &amp;amp;optional parameters&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;在显示框架上&lt;/strong&gt;&lt;em&gt;显示和可选参数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5bfca4bc3079dffd13fca42de356d69dc865d29c" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;make-frame-on-monitor&lt;/strong&gt;&lt;em&gt;monitor &amp;amp;optional display parameters&lt;/em&gt;</source>
          <target state="translated">命令：&amp;ldquo;&lt;strong&gt;在监视器上制作框架&amp;rdquo;&lt;/strong&gt;&lt;em&gt;监视器和可选的显示参数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e6b559a010673d902e44d6c6af31a4ded7444ee8" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;make-frame-visible&lt;/strong&gt;&lt;em&gt;&amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;使框架可见&lt;/strong&gt;&lt;em&gt;和可选框架&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8ce9c3687a670fdb34d0bc46d50ed28079683e4f" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;make-frame&lt;/strong&gt;&lt;em&gt;&amp;amp;optional parameters&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;make-frame&lt;/strong&gt;&lt;em&gt;和可选参数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cad230c5fa9a3a7dd4a62094589957160d65dd9f" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;make-indirect-buffer&lt;/strong&gt;&lt;em&gt;base-buffer name &amp;amp;optional clone&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;make-indirect-buffer&lt;/strong&gt;&lt;em&gt;基本缓冲区名称和可选克隆&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ae05b085c0569831165199ec9aa9c5fde7df1f5d" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;make-local-variable&lt;/strong&gt;&lt;em&gt;variable&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;make-local-variable&lt;/strong&gt;&lt;em&gt;变量&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="033747c1752579ab5ac79bb175041d5dfc750db9" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;make-symbolic-link&lt;/strong&gt;&lt;em&gt;target linkname &amp;amp;optional ok-if-already-exists&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;make-symbolic-link&lt;/strong&gt;&lt;em&gt;目标链接名和可选的ok-if-already-exists&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d0d2dc0a8369a06f77f3fc047cd2cd561194a19f" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;make-variable-buffer-local&lt;/strong&gt;&lt;em&gt;variable&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;make-variable-buffer-local&lt;/strong&gt;&lt;em&gt;变量&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0747495bc61c5c5e7609fcd9400132392a461229" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;maximize-window&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;最大化窗口&lt;/strong&gt;&lt;em&gt;和可选窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="62192a7aabcc06f8e06b95087fc0f9b31d4ae0b1" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;minibuffer-complete-and-exit&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;minibuffer完成并退出&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="608122c10a17b5fb4a5dfa634426856ba9a38d99" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;minibuffer-complete-word&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;minibuffer-complete-word&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2300325c2f35af5ba5040d68e46ca3914dcead0a" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;minibuffer-complete&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;minibuffer-complete&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="35457412f265029bc4450a06997c61b1e90e4279" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;minibuffer-completion-help&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;minibuffer-completion-help&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="80f7dcfe74a74563bdbf01c08bf0e4ed66aa50aa" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;minibuffer-inactive-mode&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;minibuffer-inactive-mode&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ea0a208312c6a812b9877c5482ecf002c10b1145" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;minimize-window&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;最小化窗口&lt;/strong&gt;&lt;em&gt;和可选窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a04c5beb4c30420f2ee48c9701675fc7cae8833f" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;modify-syntax-entry&lt;/strong&gt;&lt;em&gt;char syntax-descriptor &amp;amp;optional table&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;modify-syntax-entry &lt;/strong&gt;&lt;em&gt;char语法描述符和可选表&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="14767c417881034bb42a7a88700922aaacf19227" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;move-to-column&lt;/strong&gt;&lt;em&gt;column &amp;amp;optional force&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;移至&lt;/strong&gt;&lt;em&gt;列和可选力&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bdf6c05afa3de8f0ee2b3798432eb42eb930bd9f" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;move-to-left-margin&lt;/strong&gt;&lt;em&gt;&amp;amp;optional n force&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;向左移空白&lt;/strong&gt;&lt;em&gt;和可选n强制&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="37977269d224e0a44d6af18b87ecc84ab76e12a4" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;move-to-window-line&lt;/strong&gt;&lt;em&gt;count&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;移至窗口行&lt;/strong&gt;&lt;em&gt;数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0743135a7d1617a7eb47c1caee68689789b2191d" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;moveto&lt;/strong&gt;&lt;em&gt;points&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;移至&lt;/strong&gt;&lt;em&gt;点&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="11bde94aad75b99ef2f61c901c05a0e9a37aa02d" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;narrow-to-page&lt;/strong&gt;&lt;em&gt;&amp;amp;optional move-count&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;缩小到页面&lt;/strong&gt;&lt;em&gt;和可选的移动计数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ea57559d6b3f53eeacebd9b28862cf0d143b0d07" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;narrow-to-region&lt;/strong&gt;&lt;em&gt;start end&lt;/em&gt;</source>
          <target state="translated">命令：从&lt;strong&gt;狭窄区域&lt;/strong&gt;&lt;em&gt;开始到结束&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a7b86fb8b873de48205f3acb26db2a8d54ea50dd" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;negative-argument&lt;/strong&gt;&lt;em&gt;arg&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;负参数&lt;/strong&gt;&lt;em&gt;arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1ac29756d604e4f2b405639a717f03dc4ee0b680" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;newline-and-indent&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;换行和缩进&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3ac7ce7c6f53066b18c805477f90a7c7771ecaae" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;newline&lt;/strong&gt;&lt;em&gt;&amp;amp;optional number-of-newlines interactive&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;换行符&lt;/strong&gt;&lt;em&gt;和可选的换行数交互&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="01a84cf716a0ecc4ee2e43bcd3661816eca63631" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;next-complete-history-element&lt;/strong&gt;&lt;em&gt;n&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;next-complete-history-element &lt;/strong&gt;&lt;em&gt;n&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8c09d36f1961233a215a7095161026051f746207" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;next-history-element&lt;/strong&gt;&lt;em&gt;n&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;next-history-element &lt;/strong&gt;&lt;em&gt;n&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8ddf13c65b799aa7f4f157c951cd0584a7e3c8e0" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;next-matching-history-element&lt;/strong&gt;&lt;em&gt;pattern n&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;next-matching-history-element&lt;/strong&gt;&lt;em&gt;模式n&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5160e0482b8ccd3e0148335c82247d6b5b7a7a84" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;normal-mode&lt;/strong&gt;&lt;em&gt;&amp;amp;optional find-file&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;普通模式&lt;/strong&gt;&lt;em&gt;和可选查找文件&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="538c336e406ef98faaa2c1d7e5f196aeb01a1631" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;not-modified&lt;/strong&gt;&lt;em&gt;&amp;amp;optional arg&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;未修改&lt;/strong&gt;&lt;em&gt;和可选arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ff77288095b01f32a9f054a3a8d866967ddfc5fa" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;open-dribble-file&lt;/strong&gt;&lt;em&gt;filename&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;open-dribble-file文件&lt;/strong&gt;&lt;em&gt;名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2cdb754aa18c8a1ef26a91efce8b7b800ec522a1" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;open-termscript&lt;/strong&gt;&lt;em&gt;filename&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;open-termscript&lt;/strong&gt;&lt;em&gt;文件名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ec4897db34aca6ed970591552341737ebe4a5ffb" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;other-window&lt;/strong&gt;&lt;em&gt;count &amp;amp;optional all-frames&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;其他窗口&lt;/strong&gt;&lt;em&gt;计数和可选全帧&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4f38ac22323bc41502c239e76a7faef10b354741" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;package-initialize&lt;/strong&gt;&lt;em&gt;&amp;amp;optional no-activate&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;package-initialize&lt;/strong&gt;&lt;em&gt;和可选的no-activate&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="00a39a71d7924fe5a7ed3b4e07812b8d12cbd590" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;play-sound-file&lt;/strong&gt;&lt;em&gt;file &amp;amp;optional volume device&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;播放声音文件&lt;/strong&gt;&lt;em&gt;文件和可选的音量设备&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ce84cf4c19993ae58f93047680f36f7acc5a623c" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;pop-to-buffer&lt;/strong&gt;&lt;em&gt;buffer-or-name &amp;amp;optional action norecord&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;弹出缓冲区&lt;/strong&gt;&lt;em&gt;缓冲区或名称和可选操作norecord&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a2731d47faaeb80da67df382baac6fbe574393ae" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;posix-search-backward&lt;/strong&gt;&lt;em&gt;regexp &amp;amp;optional limit noerror count&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;posix-search-backward &lt;/strong&gt;&lt;em&gt;regexp和可选限制noerror计数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c42f6c7f8b9f92ef8e7fefa083ccdb2efafbed6d" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;posix-search-forward&lt;/strong&gt;&lt;em&gt;regexp &amp;amp;optional limit noerror count&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;posix-search-forward正则&lt;/strong&gt;&lt;em&gt;表达式和可选限制noerror count&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b240ab9cedf57ed3edc8c6e3afbe8b0074796aec" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;previous-complete-history-element&lt;/strong&gt;&lt;em&gt;n&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;previous-complete-history-element &lt;/strong&gt;&lt;em&gt;n&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f93724e093845c7199046be7deab55e1c094b13d" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;previous-history-element&lt;/strong&gt;&lt;em&gt;n&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;previous-history-element &lt;/strong&gt;&lt;em&gt;n&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9ba4a10bda5511d61f2c2c1d782ce16a6e5b363f" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;previous-matching-history-element&lt;/strong&gt;&lt;em&gt;pattern n&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;先前匹配历史元素&lt;/strong&gt;&lt;em&gt;模式n&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ee76e7f8b92c4aebdcbd9eabef7e70e06432f582" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;prog-mode&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;编模式&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ff71199cac5c2e86d312db76b154347d7dbb801f" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;push-button&lt;/strong&gt;&lt;em&gt;&amp;amp;optional pos use-mouse-action&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;按钮&lt;/strong&gt;&lt;em&gt;和可选pos use-mouse-action&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0364648b0fb1183b2e4a88084380dd8f2eb4adf0" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;quadratic-bezier-curveto&lt;/strong&gt;&lt;em&gt;coordinate-sets&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;二次贝塞尔曲线弯曲&lt;/strong&gt;&lt;em&gt;坐标集&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3b557efeb3692c1427f167c060ccf92b90648f32" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;quit-window&lt;/strong&gt;&lt;em&gt;&amp;amp;optional kill window&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;退出窗口&lt;/strong&gt;&lt;em&gt;和可选的终止窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3d9e9cd6afcaea9275dd62ff0d547dc8cf0ddff5" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;raise-frame&lt;/strong&gt;&lt;em&gt;&amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;提升框&lt;/strong&gt;&lt;em&gt;和可选框&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3f6a55ebbf0177dc6e3b663a77d46b71aae5e4a3" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;re-search-backward&lt;/strong&gt;&lt;em&gt;regexp &amp;amp;optional limit noerror count&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;反向搜索正则&lt;/strong&gt;&lt;em&gt;表达式和可选限制noerror count&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8de86ec77e151f287ee7942d391760c998d8a1b0" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;re-search-forward&lt;/strong&gt;&lt;em&gt;regexp &amp;amp;optional limit noerror count&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;重新搜索正则&lt;/strong&gt;&lt;em&gt;表达式和可选限制noerror count&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="49ccaba964cf21d08a0458002cf4c9ca6ceb24cc" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;read-color&lt;/strong&gt;&lt;em&gt;&amp;amp;optional prompt convert allow-empty display&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;读取颜色&lt;/strong&gt;&lt;em&gt;和可选提示转换为空显示&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b63d2c778dfc516db8cff3466b3e437cc9cabb8b" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;read-kbd-macro&lt;/strong&gt;&lt;em&gt;string &amp;amp;optional need-vector&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;read-kbd-宏&lt;/strong&gt;&lt;em&gt;字符串和可选的必要向量&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="96d265224313b2fe182805423bf1f5e746e6e1e6" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;read-only-mode&lt;/strong&gt;&lt;em&gt;&amp;amp;optional arg&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;只读模式&lt;/strong&gt;&lt;em&gt;和可选arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ae242dc30acc185143331dfc7df514f67285944e" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;recenter-top-bottom&lt;/strong&gt;&lt;em&gt;&amp;amp;optional count&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;laster-top-bottom&lt;/strong&gt;&lt;em&gt;和可选计数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="63cdf706727f67c1e2ced427c41d5ec35b21e513" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;recenter&lt;/strong&gt;&lt;em&gt;&amp;amp;optional count redisplay&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;recenter&lt;/strong&gt;&lt;em&gt;和可选的计数重新显示&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4c4b64676dee07518bbaaae2a863f65b9e0d7f1b" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;recursive-edit&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;递归编辑&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="362b09cc848e97c6ebd95319c7d1324eeac05041" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;redraw-display&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;redraw-display&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d348d0988e31ef85a6873d98086548588b3f290f" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;reindent-then-newline-and-indent&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;重新缩进然后换行并缩进&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="823d0c06b5a8746d01e6ba36d73405b6395a1db8" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;rename-buffer&lt;/strong&gt;&lt;em&gt;newname &amp;amp;optional unique&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;重命名缓冲区新名称&lt;/strong&gt;&lt;em&gt;和可选的唯一&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="29e7cd7cd61396569cd697c06b7b7f0f185759cf" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;rename-file&lt;/strong&gt;&lt;em&gt;filename newname &amp;amp;optional ok-if-already-exists&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;重命名文件&lt;/strong&gt;&lt;em&gt;名newname和可选的ok-如果已经存在&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="af1f7f47139ff49f53a7031b2c1b1a009e1377e5" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;replace-buffer-contents&lt;/strong&gt;&lt;em&gt;source &amp;amp;optional max-secs max-costs&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;replace-buffer-contents&lt;/strong&gt;&lt;em&gt;源和可选的max-secs max-costs&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1dc0ea97a8662e58385a0b9d79aa14fbbba446e3" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;replace-buffer-in-windows&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer-or-name&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;replace-buffer-in-windows&lt;/strong&gt;&lt;em&gt;和可选的buffer-or-name&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b7f9b72d3a788372daceca6d28f445d512461aad" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;revert-buffer&lt;/strong&gt;&lt;em&gt;&amp;amp;optional ignore-auto noconfirm preserve-modes&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;还原缓冲区&lt;/strong&gt;&lt;em&gt;和可选的ignore-auto noconfirm保留模式&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6dbc4f20cca6675c743e04dbf2f98f61950f6c09" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;run-at-time&lt;/strong&gt;&lt;em&gt;time repeat function &amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;运行时&lt;/strong&gt;&lt;em&gt;时间重复功能＆rest args&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6e4839e255e61e7b30082978e392bcbc1bcfdd7e" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;run-with-idle-timer&lt;/strong&gt;&lt;em&gt;secs repeat function &amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;以空转计时器运行&lt;/strong&gt;&lt;em&gt;秒数重复功能＆rest args&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9b6ba8dd5a28321007102d9360d43d6996aefab3" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;run-with-timer&lt;/strong&gt;&lt;em&gt;secs repeat function &amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;带计时器运行&lt;/strong&gt;&lt;em&gt;秒重复功能＆rest args&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c9c97bffa146d85a721bf28173e60a6491b5a586" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;save-buffer&lt;/strong&gt;&lt;em&gt;&amp;amp;optional backup-option&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;保存缓冲区&lt;/strong&gt;&lt;em&gt;和可选的备份选项&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2b874f9732706d8771345cad8c4eed60f15b3ecc" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;save-some-buffers&lt;/strong&gt;&lt;em&gt;&amp;amp;optional save-silently-p pred&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;save-some-buffers&lt;/strong&gt;&lt;em&gt;和可选的save-silently-p pred&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6212d7a5e69483d84ca727bad2e30597d79fdad8" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;scroll-down-command&lt;/strong&gt;&lt;em&gt;&amp;amp;optional count&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;向下滚动命令&lt;/strong&gt;&lt;em&gt;和可选计数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="07117908279d50b8ff1a028bb5b99560e33c6fdc" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;scroll-down&lt;/strong&gt;&lt;em&gt;&amp;amp;optional count&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;向下滚动&lt;/strong&gt;&lt;em&gt;和可选计数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="512ffac92bb639175b8bfbe916d2dedcb91bffcd" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;scroll-left&lt;/strong&gt;&lt;em&gt;&amp;amp;optional count set-minimum&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;向左滚动&lt;/strong&gt;&lt;em&gt;和可选的最小计数集&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fe88ecbc3963eb2a0a3efb458d672da391b073a5" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;scroll-other-window-down&lt;/strong&gt;&lt;em&gt;&amp;amp;optional count&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;向下滚动其他窗口&lt;/strong&gt;&lt;em&gt;和可选计数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="18aee2240bbe724b0edc0eff32808d4dda50a1e0" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;scroll-other-window&lt;/strong&gt;&lt;em&gt;&amp;amp;optional count&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;scroll-other-window&lt;/strong&gt;&lt;em&gt;和可选计数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cae32dcb7bd7eb35b3f3bf558ad4ea17c673a2f6" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;scroll-right&lt;/strong&gt;&lt;em&gt;&amp;amp;optional count set-minimum&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;向右滚动&lt;/strong&gt;&lt;em&gt;和可选的最小计数集&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e28799aeed74ded405162b73ed44eb6a1bca66df" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;scroll-up-command&lt;/strong&gt;&lt;em&gt;&amp;amp;optional count&lt;/em&gt;</source>
          <target state="translated">命令：上&lt;strong&gt;滚命令&lt;/strong&gt;&lt;em&gt;和可选计数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="451ae45bf9f55ce6b82d269978547f9a35bc4f1a" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;scroll-up&lt;/strong&gt;&lt;em&gt;&amp;amp;optional count&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;向上滚动&lt;/strong&gt;&lt;em&gt;和可选计数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d86502a5927be536b8619923e729d4554b3f6eb0" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;search-backward&lt;/strong&gt;&lt;em&gt;string &amp;amp;optional limit noerror count&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;向后搜索&lt;/strong&gt;&lt;em&gt;字符串和可选限制无错误计数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="154c7d209104d734bba5e1180fceaa5d92ea3d51" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;search-forward&lt;/strong&gt;&lt;em&gt;string &amp;amp;optional limit noerror count&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;搜索&lt;/strong&gt;&lt;em&gt;字符串和可选限制noerror计数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="29aaf03253f934e28dc2d0a8789fa7da4e215c4d" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;select-frame&lt;/strong&gt;&lt;em&gt;frame &amp;amp;optional norecord&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;选择帧&lt;/strong&gt;&lt;em&gt;帧和可选的norecord&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="47c35f339881445a0a6a83a9d68d5f85df971325" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;self-insert-and-exit&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;自我插入并退出&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0cab8342a53269b33f617cf5e4a194f1a1942cb9" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;self-insert-command&lt;/strong&gt;&lt;em&gt;count &amp;amp;optional char&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;自我插入命令&lt;/strong&gt;&lt;em&gt;计数和可选字符&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6f9f2ef023d88e483cbb9610483c16382a0ac150" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;serial-term&lt;/strong&gt;&lt;em&gt;port speed &amp;amp;optional line-mode&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;串行&lt;/strong&gt;&lt;em&gt;端口速度和可选线路模式&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="62bef2cf4b8e12edf1acf830e96e279265d8d77f" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;set-face-background&lt;/strong&gt;&lt;em&gt;face color &amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;设置脸部背景&lt;/strong&gt;&lt;em&gt;脸部颜色和可选框&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4f26ba6ae88e450ec267ed9974a365ca313fa468" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;set-face-extend&lt;/strong&gt;&lt;em&gt;face extend &amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;set-face-extend&lt;/strong&gt;&lt;em&gt;面扩展和可选框架&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9730f6865af3c4084db75cf6af1b0a6fb08b5dd0" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;set-face-font&lt;/strong&gt;&lt;em&gt;face font &amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;set-face-font&lt;/strong&gt;&lt;em&gt;字体和可选框架&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="24e1d2ff5f996a203183b37c520be2a2161b6b75" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;set-face-foreground&lt;/strong&gt;&lt;em&gt;face color &amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;set-face-foreground人&lt;/strong&gt;&lt;em&gt;脸颜色和可选框&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f47e6c07400f2ae122715b4ecd7f68157b45235d" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;set-face-inverse-video&lt;/strong&gt;&lt;em&gt;face inverse-video-p &amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;set-face-inverse-video人&lt;/strong&gt;&lt;em&gt;脸逆视频-p和可选帧&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b9f9cb4b2d494cbdc8b50300013fd5467c128f6f" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;set-face-stipple&lt;/strong&gt;&lt;em&gt;face pattern &amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;设置面部点画的&lt;/strong&gt;&lt;em&gt;面部图案和可&lt;/em&gt;&lt;strong&gt;选框&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e0956a2ffe74d2315678d0707f073ce6d6f93609" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;set-face-underline&lt;/strong&gt;&lt;em&gt;face underline &amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;set-face-underline &lt;/strong&gt;&lt;em&gt;face下划线和可选框架&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="75b9619594ae5be5342ce78dc28c5ea7dac583be" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;set-file-modes&lt;/strong&gt;&lt;em&gt;filename mode&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;set-file-modes&lt;/strong&gt;&lt;em&gt;文件名模式&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="47bfb647cfee439e1167b83df31de3663752d8fa" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;set-frame-font&lt;/strong&gt;&lt;em&gt;font &amp;amp;optional keep-size frames&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;set-frame-font&lt;/strong&gt;&lt;em&gt;字体和可选的保持大小框架&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b1a94128ae515637665d96ff7e6c3f8575151a78" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;set-input-method&lt;/strong&gt;&lt;em&gt;input-method&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;set-input-method&lt;/strong&gt;&lt;em&gt;输入法&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cbbd9d6d3f19c307fbf02650c3e4fb2aa36c4404" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;set-keyboard-coding-system&lt;/strong&gt;&lt;em&gt;coding-system &amp;amp;optional terminal&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;set-keyboard-coding-system&lt;/strong&gt;&lt;em&gt;编码系统和可选终端&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="04793e6263350afe373aac47960e6644ef58fe06" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;set-left-margin&lt;/strong&gt;&lt;em&gt;from to margin&lt;/em&gt;</source>
          <target state="translated">命令：&lt;em&gt;从到边距&lt;/em&gt;&lt;strong&gt;设置左边界&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="59116db1ba9fc61105cf4a47c9377d67766bb1e7" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;set-right-margin&lt;/strong&gt;&lt;em&gt;from to margin&lt;/em&gt;</source>
          <target state="translated">命令：&lt;em&gt;从到边距&lt;/em&gt;&lt;strong&gt;设置右页&lt;/strong&gt;&lt;em&gt;边距&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e1fc62a90864d1aa1ce647ef1b5e155ab2bb4706" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;set-terminal-coding-system&lt;/strong&gt;&lt;em&gt;coding-system &amp;amp;optional terminal&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;set-terminal-coding-system&lt;/strong&gt;&lt;em&gt;编码系统和可选终端&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8b009fb39670e2033bd04a9216c334d787f12135" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;set-visited-file-name&lt;/strong&gt;&lt;em&gt;filename &amp;amp;optional no-query along-with-file&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;set-visited-file-name&lt;/strong&gt;&lt;em&gt;文件名和可选的不带文件查询&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c19f02fbc3a721ab8b8650296ac58584dced96be" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;setenv&lt;/strong&gt;&lt;em&gt;variable &amp;amp;optional value substitute&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;setenv&lt;/strong&gt;&lt;em&gt;变量和可选值替代&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ce60abd012aee31e7bdf0b76bf611939061830d7" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;shrink-window-if-larger-than-buffer&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;收缩窗口（如果大于缓冲区）&lt;/strong&gt;&lt;em&gt;和可选窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fccdb8e7fc0c114282fae1d0aaf1b35f8ab1a42e" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;signal-process&lt;/strong&gt;&lt;em&gt;process signal&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;信号处理&lt;/strong&gt;&lt;em&gt;过程信号&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cc22011168f29a5ab2bb6cca83f32fe687d4da69" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;smie-close-block&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;smie-close-block&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ccd8dc48c1978c14b01919c5b614c276c2d5b587" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;smie-config-guess&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;smie-config-guess&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5f4471bd799bde7f4afbb8c796bfe8c7b96c20a5" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;smie-config-save&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;smie-config-save&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5d700709f8f0078f6ed146efeecb5f440e3d74a9" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;smie-config-set-indent&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;smie-config-set-indent&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="475e993b0e02616bc6fd86b1705e2f94fdbab593" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;smie-config-show-indent&lt;/strong&gt;&lt;em&gt;&amp;amp;optional move&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;smie-config-show-indent&lt;/strong&gt;&lt;em&gt;和可选移动&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1b278fdef4d3f37466a977ba4af1ab4e234f5b24" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;smie-down-list&lt;/strong&gt;&lt;em&gt;&amp;amp;optional arg&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;smie-down-list&lt;/strong&gt;&lt;em&gt;和可选arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7555f737ca70be74cc76eda47fa81219383fcf7f" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;smooth-curveto&lt;/strong&gt;&lt;em&gt;coordinate-sets&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;平滑曲线&lt;/strong&gt;&lt;em&gt;坐标集&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="779c12119dedaaa2da16f05eece6a700adf28984" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;smooth-quadratic-bezier-curveto&lt;/strong&gt;&lt;em&gt;coordinate-sets&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;平滑二次贝塞尔曲线弯曲&lt;/strong&gt;&lt;em&gt;坐标集&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f70c93aee92d2207c92a1dc25377574b427244fb" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;sort-columns&lt;/strong&gt;&lt;em&gt;reverse &amp;amp;optional beg end&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;sort-columns&lt;/strong&gt;&lt;em&gt;反向和可选的乞求结束&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="377eb09513621ee4d23cd8a9da831da8ac107c75" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;sort-fields&lt;/strong&gt;&lt;em&gt;field start end&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;sort-fields&lt;/strong&gt;&lt;em&gt;字段开始结束&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="46d1af22f4206fa46924b5b53e1364edccaf57f3" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;sort-lines&lt;/strong&gt;&lt;em&gt;reverse start end&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;排序行&lt;/strong&gt;&lt;em&gt;反向开始结束&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="242df0b378bb9ee567df1aeb723299fa153cb36e" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;sort-numeric-fields&lt;/strong&gt;&lt;em&gt;field start end&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;sort-numeric-fields&lt;/strong&gt;&lt;em&gt;字段开始结束&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9ff1aae7c33abba55cb47f8aa4d8067779076872" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;sort-pages&lt;/strong&gt;&lt;em&gt;reverse start end&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;排序页面&lt;/strong&gt;&lt;em&gt;反向开始结束&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1f0472a6a86b9c8dcc68ac5aa4e2bb765898fe7d" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;sort-paragraphs&lt;/strong&gt;&lt;em&gt;reverse start end&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;排序段落&lt;/strong&gt;&lt;em&gt;反向开始结束&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1311a5f007f500a9ea58e17429e1f66852bd14e0" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;sort-regexp-fields&lt;/strong&gt;&lt;em&gt;reverse record-regexp key-regexp start end&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;sort-regexp-fields&lt;/strong&gt;&lt;em&gt;反向记录-regexp键-regexp开始结束&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ad03bb65a05eabcb0d6653b898004963e8ed8545" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;special-mode&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;特殊模式&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bf136062ef6f844ede6b82ae566e06c70a119f1d" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;split-window-below&lt;/strong&gt;&lt;em&gt;&amp;amp;optional size&lt;/em&gt;</source>
          <target state="translated">命令：以下&lt;strong&gt;分割窗口&lt;/strong&gt;&lt;em&gt;和可选大小&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ade63c72a1928918bf401f1182749f8620ca1963" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;split-window-right&lt;/strong&gt;&lt;em&gt;&amp;amp;optional size&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;向右分割窗口&lt;/strong&gt;&lt;em&gt;和可选大小&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ec3e04c813567e49c8b9ef6b143486e65241c1d0" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;suspend-emacs&lt;/strong&gt;&lt;em&gt;&amp;amp;optional string&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;suspend-emacs&lt;/strong&gt;&lt;em&gt;和可选字符串&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5c37193681c7005dbab43dc4c6c76948005e9c01" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;suspend-frame&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;暂停帧&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1bdf2e93cb024513bae68ce3a48406fb2ad9bbc5" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;switch-to-buffer-other-frame&lt;/strong&gt;&lt;em&gt;buffer-or-name &amp;amp;optional norecord&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;切换到缓冲区其他帧&lt;/strong&gt;&lt;em&gt;缓冲区或名称和可选的norecord&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4a97ad1d6a70583f4d99b86e84b1f54292395d69" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;switch-to-buffer-other-window&lt;/strong&gt;&lt;em&gt;buffer-or-name &amp;amp;optional norecord&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;切换到缓冲区其他窗口&lt;/strong&gt;&lt;em&gt;缓冲区或名称和可选的norecord&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8d69e17078397fe8559b9982432aee469c7aa78f" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;switch-to-buffer&lt;/strong&gt;&lt;em&gt;buffer-or-name &amp;amp;optional norecord force-same-window&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;切换到缓冲区&lt;/strong&gt;&lt;em&gt;缓冲区或名称和可选的norecord强制相同窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9233fef6d280cea05ba0400911544955229e156f" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;switch-to-next-buffer&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;切换到下一个缓冲区&lt;/strong&gt;&lt;em&gt;和可选窗口&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e9dbdcb41856087f9a5fff9b0a642c35ce37e54e" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;switch-to-prev-buffer&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window bury-or-kill&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;切换到上一个缓冲区&lt;/strong&gt;&lt;em&gt;和可选窗口埋入或杀死&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="13e0adbc9352633271be0e1d8dc72bc116896dad" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;tab-to-tab-stop&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;选项卡到选项卡停止&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fec88d25579fda4506d663aec061b7f5e7914dc9" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;text-mode&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;文本模式&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6e84a897eed953c0472e151fbafa97fd79aff603" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;top-level&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;顶级&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8a01ee799a181534920554b84d761b9864e34f0e" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;translate-region&lt;/strong&gt;&lt;em&gt;start end table&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;翻译区域&lt;/strong&gt;&lt;em&gt;开始结束表&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f5cf6aad4c0136da8a3209702c68006a7af1cf52" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;unbury-buffer&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;unbury-buffer&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a1dfb29942ba870348d8a858657011edda847ff6" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;undefined&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;未定义&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c02b871891f5202d1658111d85e523bef58313cd" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;universal-argument&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;通用参数&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9046f886462ea307d72a27b9506b7cb51d33fe67" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;unload-feature&lt;/strong&gt;&lt;em&gt;feature &amp;amp;optional force&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;卸载&lt;/strong&gt;&lt;em&gt;功能和可选力&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bb119272401adfb7405c0b13c51e7e17162b494a" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;up-list&lt;/strong&gt;&lt;em&gt;&amp;amp;optional arg escape-strings no-syntax-crossing&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;向上列表&lt;/strong&gt;&lt;em&gt;和可选的arg转义字符串无语法交叉&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="84bb7b0848bffe8df3f5f7b103c5c4a7ce906fc9" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;upcase-region&lt;/strong&gt;&lt;em&gt;start end&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;upcase-region &lt;/strong&gt;&lt;em&gt;start结束&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cce479ce21039984fa588f8b6c53cae8e87d1338" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;upcase-word&lt;/strong&gt;&lt;em&gt;count&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;大写单词&lt;/strong&gt;&lt;em&gt;计数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f6e02b53162a9a2053521b4469093be5aea51eae" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;vertical-lineto&lt;/strong&gt;&lt;em&gt;y-coordinates&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;垂直线到&lt;/strong&gt;&lt;em&gt;y坐标&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="41b8bd53ca7ac9cb3acf4a71759213f64fb4f234" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;view-register&lt;/strong&gt;&lt;em&gt;reg&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;view-register &lt;/strong&gt;&lt;em&gt;reg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e0cb734bf7a8eebc34cca2bf8347fddbf95df83a" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;widen&lt;/strong&gt;</source>
          <target state="translated">命令：&lt;strong&gt;加宽&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5b3d537ed51d03685067b22f98bde6ef903ae776" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;window-swap-states&lt;/strong&gt;&lt;em&gt;&amp;amp;optional window-1 window-2 size&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;window-swap-states&lt;/strong&gt;&lt;em&gt;和可选的window-1 window-2 size&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8d20e00ae0fb347be721d7d5cef077eb88735aad" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;window-toggle-side-windows&lt;/strong&gt;&lt;em&gt;&amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;window-toggle-side-windows&lt;/strong&gt;&lt;em&gt;和可选框架&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3040d743406b7a5e008e1ce60bb68ad12784ddb6" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;word-search-backward-lax&lt;/strong&gt;&lt;em&gt;string &amp;amp;optional limit noerror count&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;word-search-backward-lax&lt;/strong&gt;&lt;em&gt;字符串和可选限制noerror计数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9b3900669704f539822d0e5bca435963b458bef3" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;word-search-backward&lt;/strong&gt;&lt;em&gt;string &amp;amp;optional limit noerror count&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;单词搜索后退&lt;/strong&gt;&lt;em&gt;字符串和可选限制无错误计数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="212401e7497fe805acd13f546d23cce43cd81346" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;word-search-forward-lax&lt;/strong&gt;&lt;em&gt;string &amp;amp;optional limit noerror count&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;word-search-forward-lax&lt;/strong&gt;&lt;em&gt;字符串和可选限制noerror计数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f49891793b2f2391e0a8cd721ab62d2d19601f16" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;word-search-forward&lt;/strong&gt;&lt;em&gt;string &amp;amp;optional limit noerror count&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;单词搜索&lt;/strong&gt;&lt;em&gt;字符串和可选的限制无错误计数&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="902a26f7f9264c9bd7495594d3ed992624563358" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;write-abbrev-file&lt;/strong&gt;&lt;em&gt;&amp;amp;optional filename&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;write-abbrev-file&lt;/strong&gt;&lt;em&gt;和可选文件名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a011038d7c5c0edd900c38db4105703d56cf493b" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;write-file&lt;/strong&gt;&lt;em&gt;filename &amp;amp;optional confirm&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;写文件&lt;/strong&gt;&lt;em&gt;名和可选确认&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4348b73f93da98e05a96206dd636ff2cca7b946f" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;write-region&lt;/strong&gt;&lt;em&gt;start end filename &amp;amp;optional append visit lockname mustbenew&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;写区域&lt;/strong&gt;&lt;em&gt;开始，结束文件名和可选的追加访问锁名必须是新的&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6e7bb63154322046db2d6c8bf0d587ecf5fa861f" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;yank-pop&lt;/strong&gt;&lt;em&gt;&amp;amp;optional arg&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;yank-pop&lt;/strong&gt;&lt;em&gt;和可选arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cd0e2f297045190c083a7dbabfd542df399742f6" translate="yes" xml:space="preserve">
          <source>Command: &lt;strong&gt;yank&lt;/strong&gt;&lt;em&gt;&amp;amp;optional arg&lt;/em&gt;</source>
          <target state="translated">命令：&lt;strong&gt;yank &lt;/strong&gt;&lt;em&gt;＆optional arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d6c89886295465020232d1acaee34896917e2d48" translate="yes" xml:space="preserve">
          <source>Commands for Binding Keys</source>
          <target state="translated">绑定键的命令</target>
        </trans-unit>
        <trans-unit id="0cbf8177d019311814ddd90200b02a5bcb662d61" translate="yes" xml:space="preserve">
          <source>Commands for saving buffers are unaffected by narrowing; they save the entire buffer regardless of any narrowing.</source>
          <target state="translated">保存缓冲区的命令不受缩窄的影响;无论是否缩窄,它们都会保存整个缓冲区。</target>
        </trans-unit>
        <trans-unit id="9b53d7ba90187ba5afa5b3fc94a8bec040fda196" translate="yes" xml:space="preserve">
          <source>Commands include strings and vectors (which are treated as keyboard macros), lambda expressions that contain a top-level &lt;code&gt;interactive&lt;/code&gt; form (see &lt;a href=&quot;using-interactive#Using-Interactive&quot;&gt;Using Interactive&lt;/a&gt;), byte-code function objects made from such lambda expressions, autoload objects that are declared as interactive (non-&lt;code&gt;nil&lt;/code&gt; fourth argument to &lt;code&gt;autoload&lt;/code&gt;), and some primitive functions. Also, a symbol is considered a command if it has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;interactive-form&lt;/code&gt; property, or if its function definition satisfies &lt;code&gt;commandp&lt;/code&gt;.</source>
          <target state="translated">命令包括字符串和向量（它们被视为键盘宏），包含顶级 &lt;code&gt;interactive&lt;/code&gt; 形式的lambda表达式（请参阅&lt;a href=&quot;using-interactive#Using-Interactive&quot;&gt;使用Interactive&lt;/a&gt;），由此类lambda表达式制成的字节码函数对象，自动加载被声明为交互的对象（非- &lt;code&gt;nil&lt;/code&gt; 第四个参数 &lt;code&gt;autoload&lt;/code&gt; ），和一些原始功能。另外，如果符号具有非 &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;interactive-form&lt;/code&gt; 属性，或者其功能定义满足 &lt;code&gt;commandp&lt;/code&gt; ，则将其视为命令。</target>
        </trans-unit>
        <trans-unit id="024c023476f141141c18039299f7002a9d975f87" translate="yes" xml:space="preserve">
          <source>Commands like</source>
          <target state="translated">命令,如</target>
        </trans-unit>
        <trans-unit id="2698ee43719d058ff86e4e467effa767a2780841" translate="yes" xml:space="preserve">
          <source>Commands that access the kill ring.</source>
          <target state="translated">访问杀戒的命令。</target>
        </trans-unit>
        <trans-unit id="a2da0179656617c5d32ee30ae8d074056f2e5ef1" translate="yes" xml:space="preserve">
          <source>Commands that change the size of windows (see &lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;Resizing Windows&lt;/a&gt;), or split them (see &lt;a href=&quot;splitting-windows#Splitting-Windows&quot;&gt;Splitting Windows&lt;/a&gt;), obey the variables &lt;code&gt;window-min-height&lt;/code&gt; and &lt;code&gt;window-min-width&lt;/code&gt;, which specify the smallest allowable window height and width. They also obey the variable &lt;code&gt;window-size-fixed&lt;/code&gt;, with which a window can be &lt;em&gt;fixed&lt;/em&gt; in size (see &lt;a href=&quot;preserving-window-sizes#Preserving-Window-Sizes&quot;&gt;Preserving Window Sizes&lt;/a&gt;).</source>
          <target state="translated">更改窗口大小（请参见&lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;调整&lt;/a&gt;窗口大小）或拆分窗口（请参见&lt;a href=&quot;splitting-windows#Splitting-Windows&quot;&gt;拆分窗口&lt;/a&gt;）的命令应遵循变量 &lt;code&gt;window-min-height&lt;/code&gt; 和 &lt;code&gt;window-min-width&lt;/code&gt; ，它们指定了最小的允许窗口高度和宽度。它们还遵循变量 &lt;code&gt;window-size-fixed&lt;/code&gt; ，通过它可以&lt;em&gt;固定&lt;/em&gt;窗口的大小（请参见&amp;ldquo;&lt;a href=&quot;preserving-window-sizes#Preserving-Window-Sizes&quot;&gt;保留窗口大小&amp;rdquo;&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="7bb156744a59e3c469068fb585b92c9377439401" translate="yes" xml:space="preserve">
          <source>Commands that loop, searching and replacing.</source>
          <target state="translated">循环、搜索和替换的命令。</target>
        </trans-unit>
        <trans-unit id="39077cc4f9f99b5c009431fe125e0565694482e6" translate="yes" xml:space="preserve">
          <source>Commands to jump to a specified place.</source>
          <target state="translated">命令跳转到指定地点。</target>
        </trans-unit>
        <trans-unit id="345f1ca0cbcdfaee1b6ff2d3384695a16b7d1b92" translate="yes" xml:space="preserve">
          <source>Commands used as key bindings in minibuffers.</source>
          <target state="translated">在迷你缓冲区中用作键绑定的命令。</target>
        </trans-unit>
        <trans-unit id="49ad61ca7e49f2fa83f48be5f56322f11ecd0882" translate="yes" xml:space="preserve">
          <source>Commands used while in the debugger.</source>
          <target state="translated">在调试器中使用的命令。</target>
        </trans-unit>
        <trans-unit id="023a3dfd3298d8324fedd31fa2da0f1be7a3a965" translate="yes" xml:space="preserve">
          <source>Comment enders: &amp;lsquo;</source>
          <target state="translated">评论结尾：</target>
        </trans-unit>
        <trans-unit id="de24c55c45660f7d870e708e7bc1702d5c011feb" translate="yes" xml:space="preserve">
          <source>Comment starters: &amp;lsquo;</source>
          <target state="translated">评论开始者：&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="fce06e20e5f7f74aacccab40b59b75a56c8f7305" translate="yes" xml:space="preserve">
          <source>Comments</source>
          <target state="translated">Comments</target>
        </trans-unit>
        <trans-unit id="8c19c716bf03668fed602c51e64d7688dc85038a" translate="yes" xml:space="preserve">
          <source>Comments and their formatting conventions.</source>
          <target state="translated">评论及其格式惯例;</target>
        </trans-unit>
        <trans-unit id="b7b7635ea31b9ba2bccbee5c3a14f43d910f31c9" translate="yes" xml:space="preserve">
          <source>Comments can appear at certain points in the middle of an object&amp;rsquo;s read sequence without affecting the result of reading it.</source>
          <target state="translated">注释可以出现在对象读取序列中间的某些点上，而不会影响读取结果。</target>
        </trans-unit>
        <trans-unit id="b5529843e9bc457c0f3ae38cf3504131047fe2f0" translate="yes" xml:space="preserve">
          <source>Common Item Keywords</source>
          <target state="translated">常见项目关键词</target>
        </trans-unit>
        <trans-unit id="88c69ce37e402739dba1a7b40279b7ab85f6120f" translate="yes" xml:space="preserve">
          <source>Common Lisp Extensions</source>
          <target state="translated">常见的Lisp扩展</target>
        </trans-unit>
        <trans-unit id="d4db0bbf7184136260c24be2c67969fdcc69cc61" translate="yes" xml:space="preserve">
          <source>Common Lisp Extensions for GNU Emacs Lisp</source>
          <target state="translated">GNU Emacs Lisp的通用Lisp扩展。</target>
        </trans-unit>
        <trans-unit id="eb539ba663e0f404bb4048e484420d85554a1137" translate="yes" xml:space="preserve">
          <source>Common Problems Using Macros</source>
          <target state="translated">使用宏的常见问题</target>
        </trans-unit>
        <trans-unit id="856564e2ae364f148ccd23f2ceb539fcf6216d2f" translate="yes" xml:space="preserve">
          <source>Common keyword arguments for all kinds of customization declarations.</source>
          <target state="translated">各种自定义声明的常用关键字参数。</target>
        </trans-unit>
        <trans-unit id="6b49ee40a782a8c9b806d0ab21e62f1980769cc0" translate="yes" xml:space="preserve">
          <source>Communicating values and objects between Emacs and your module functions.</source>
          <target state="translated">在Emacs和你的模块函数之间传递值和对象。</target>
        </trans-unit>
        <trans-unit id="e342143365a2622326f837accd2c41b08cc3c0b5" translate="yes" xml:space="preserve">
          <source>Communicating with Serial Ports</source>
          <target state="translated">与串行端口通信</target>
        </trans-unit>
        <trans-unit id="89949c3848891d6567f959ece5f2ad672202fa7b" translate="yes" xml:space="preserve">
          <source>Communicating with serial ports.</source>
          <target state="translated">与串口通信。</target>
        </trans-unit>
        <trans-unit id="6778e86a8d6b05b7867fb8b5cc87fc85fa62d6e2" translate="yes" xml:space="preserve">
          <source>Communicating with the window manager.</source>
          <target state="translated">与窗口管理员沟通。</target>
        </trans-unit>
        <trans-unit id="b0f18071ab967d2204c3e0d26f86eaf816b8d617" translate="yes" xml:space="preserve">
          <source>Compare these examples with the examples of &lt;code&gt;apply&lt;/code&gt;.</source>
          <target state="translated">将这些示例与 &lt;code&gt;apply&lt;/code&gt; 示例进行比较。</target>
        </trans-unit>
        <trans-unit id="405b13d07114472db679f8ec5457ac60130a82a6" translate="yes" xml:space="preserve">
          <source>Compare this with &lt;code&gt;memq&lt;/code&gt;:</source>
          <target state="translated">将此与 &lt;code&gt;memq&lt;/code&gt; 进行比较：</target>
        </trans-unit>
        <trans-unit id="1b019b87d23c47d7c66ff2fd4031438ec631bd79" translate="yes" xml:space="preserve">
          <source>Comparing Text</source>
          <target state="translated">比较文本</target>
        </trans-unit>
        <trans-unit id="95982814f72e19fec0fd3b99109dfb5b63e1257f" translate="yes" xml:space="preserve">
          <source>Comparing characters or strings.</source>
          <target state="translated">比较字符或字符串。</target>
        </trans-unit>
        <trans-unit id="c66617dc8d66f35540478eb6bee035ffa120c56d" translate="yes" xml:space="preserve">
          <source>Comparing circular lists may therefore cause deep recursion that leads to an error, and this may result in counterintuitive behavior such as &lt;code&gt;(equal a b)&lt;/code&gt; returning &lt;code&gt;t&lt;/code&gt; whereas &lt;code&gt;(equal b a)&lt;/code&gt; signals an error.</source>
          <target state="translated">因此，比较循环列表可能会导致深度递归，从而导致错误，并且可能导致违反直觉的行为，例如 &lt;code&gt;(equal a b)&lt;/code&gt; 返回 &lt;code&gt;t&lt;/code&gt; 而 &lt;code&gt;(equal b a)&lt;/code&gt; 表示错误。</target>
        </trans-unit>
        <trans-unit id="6a7ee30eb676cbc735cd894cf2bf34f00abcb038" translate="yes" xml:space="preserve">
          <source>Comparing substrings of buffers.</source>
          <target state="translated">比较缓冲区的子串。</target>
        </trans-unit>
        <trans-unit id="273b9ed97d01e07afecfb1e9a9132920e64fd651" translate="yes" xml:space="preserve">
          <source>Comparison of Characters and Strings</source>
          <target state="translated">字符和字符串的比较</target>
        </trans-unit>
        <trans-unit id="6a63910b738b1e2e2df184363f826f6b9f540a0f" translate="yes" xml:space="preserve">
          <source>Comparison of Numbers</source>
          <target state="translated">数字比较</target>
        </trans-unit>
        <trans-unit id="9342f700a3e55d278469c203b5eb7cf66f6afde3" translate="yes" xml:space="preserve">
          <source>Comparison of strings is case-sensitive, but does not take account of text properties&amp;mdash;it compares only the characters in the strings. See &lt;a href=&quot;text-properties#Text-Properties&quot;&gt;Text Properties&lt;/a&gt;. Use &lt;code&gt;equal-including-properties&lt;/code&gt; to also compare text properties. For technical reasons, a unibyte string and a multibyte string are &lt;code&gt;equal&lt;/code&gt; if and only if they contain the same sequence of character codes and all these codes are in the range 0 through 127 (</source>
          <target state="translated">字符串比较区分大小写，但不考虑文本属性-它仅比较字符串中的字符。请参阅&lt;a href=&quot;text-properties#Text-Properties&quot;&gt;文本属性&lt;/a&gt;。使用 &lt;code&gt;equal-including-properties&lt;/code&gt; 还可以比较文本属性。由于技术原因，一个unibyte字符串和多字节字符串是 &lt;code&gt;equal&lt;/code&gt; ，当且仅当它们所包含的字符代码相同的序列，所有这些代码到127的范围是0（</target>
        </trans-unit>
        <trans-unit id="8b6d532998965364c360bdfe468305e9182a9ec8" translate="yes" xml:space="preserve">
          <source>Comparison of the advantages of property lists and association lists.</source>
          <target state="translated">物业清单和协会清单的优势比较。</target>
        </trans-unit>
        <trans-unit id="93a99950a9ea500265e66f392a7bd6add454368b" translate="yes" xml:space="preserve">
          <source>Compatibility for cl-defstruct.</source>
          <target state="translated">对cl-defstruct的兼容性。</target>
        </trans-unit>
        <trans-unit id="83fe64ebb2a4f8e1967420eac322068373238d0d" translate="yes" xml:space="preserve">
          <source>Compatibility verification</source>
          <target state="translated">兼容性验证</target>
        </trans-unit>
        <trans-unit id="f53d3632ba8f6a9c0a14db8153bd8b40eb346b2c" translate="yes" xml:space="preserve">
          <source>Compilation makes programs run faster.</source>
          <target state="translated">编译可以使程序运行得更快。</target>
        </trans-unit>
        <trans-unit id="c307f23a350ff3cbf11f39a7884970127ba45b6d" translate="yes" xml:space="preserve">
          <source>Compilation of the C source files in the</source>
          <target state="translated">中的C语言源文件的编译。</target>
        </trans-unit>
        <trans-unit id="db25c66100f5283d989daf1e06008dca3edfb13b" translate="yes" xml:space="preserve">
          <source>Compilation works by reading the input file one form at a time. If it is a definition of a function or macro, the compiled function or macro definition is written out. Other forms are batched together, then each batch is compiled, and written so that its compiled code will be executed when the file is read. All comments are discarded when the input file is read.</source>
          <target state="translated">编译的工作方式是一次一个表格地读取输入文件。如果是函数或宏的定义,编译后的函数或宏定义就会被写出来。其他表格被分批放在一起,然后对每一批进行编译,并写出其编译后的代码将在读取文件时被执行。读取输入文件时,所有注释都会被丢弃。</target>
        </trans-unit>
        <trans-unit id="03a28ca8c3d9613144507cbc2e784d7d08f72e10" translate="yes" xml:space="preserve">
          <source>Compiler Errors</source>
          <target state="translated">编译器错误</target>
        </trans-unit>
        <trans-unit id="1b7e00c7011424058eea93745b20337bafc3389e" translate="yes" xml:space="preserve">
          <source>Completing text in ordinary buffers.</source>
          <target state="translated">在普通缓冲区中补充文字。</target>
        </trans-unit>
        <trans-unit id="2ff255684a2277f806fcebf3fe338ed27857f350" translate="yes" xml:space="preserve">
          <source>Completion</source>
          <target state="translated">Completion</target>
        </trans-unit>
        <trans-unit id="c662019ea8458f5db9a4275818bc22d53c6c775b" translate="yes" xml:space="preserve">
          <source>Completion Variables</source>
          <target state="translated">完成变量</target>
        </trans-unit>
        <trans-unit id="4b30ae54975d46c38aec0ba1d66f9ec137982b21" translate="yes" xml:space="preserve">
          <source>Completion and the Minibuffer</source>
          <target state="translated">完成和迷你缓冲器</target>
        </trans-unit>
        <trans-unit id="8952388475de8de6e1a8979a85ec9e3a52e099f8" translate="yes" xml:space="preserve">
          <source>Completion in Ordinary Buffers</source>
          <target state="translated">在普通缓冲区完成</target>
        </trans-unit>
        <trans-unit id="1e145aadd17b8a0bb15c1d5fc789830f0e4539ed" translate="yes" xml:space="preserve">
          <source>Complex Regexp Example</source>
          <target state="translated">复杂的重复表达式示例</target>
        </trans-unit>
        <trans-unit id="288afe81a28ad9bb9ef9e984ab8791ca1882c4a8" translate="yes" xml:space="preserve">
          <source>Complex commands executed while in Edebug are added to the variable &lt;code&gt;command-history&lt;/code&gt;. In rare cases this can alter execution.</source>
          <target state="translated">在Edebug中执行的复杂命令将添加到变量 &lt;code&gt;command-history&lt;/code&gt; 中。在极少数情况下，这可能会改变执行。</target>
        </trans-unit>
        <trans-unit id="0f9560ff7537f4f98f996f644e7427df60b57022" translate="yes" xml:space="preserve">
          <source>Components of a Lambda Expression</source>
          <target state="translated">Lambda表达式的组成部分</target>
        </trans-unit>
        <trans-unit id="17b085bb7e9b4109140dcbfdb4a52b59de6c7e37" translate="yes" xml:space="preserve">
          <source>Components of a buffer structure.</source>
          <target state="translated">缓冲区结构的组成部分。</target>
        </trans-unit>
        <trans-unit id="409a6573f232221348fe42e50813686f2e2ccf57" translate="yes" xml:space="preserve">
          <source>Components of a process structure.</source>
          <target state="translated">流程结构的组成部分。</target>
        </trans-unit>
        <trans-unit id="d706733e74c4ae29f2e5abed0387937671d83fb7" translate="yes" xml:space="preserve">
          <source>Components of a window structure.</source>
          <target state="translated">窗口结构的组成部分。</target>
        </trans-unit>
        <trans-unit id="7bf0ab10fb9860e23b1ca89e4313be7fafb258f7" translate="yes" xml:space="preserve">
          <source>Composite Types</source>
          <target state="translated">复合型</target>
        </trans-unit>
        <trans-unit id="f2963d89c4ddfb428f89d7016d1bf88d0f623928" translate="yes" xml:space="preserve">
          <source>Compound objects with programmer-defined types.</source>
          <target state="translated">具有程序员定义类型的复合对象。</target>
        </trans-unit>
        <trans-unit id="04e9702574a684045c6c20e0f591b8ac274b9519" translate="yes" xml:space="preserve">
          <source>Computing cryptographic hashes.</source>
          <target state="translated">计算加密哈希。</target>
        </trans-unit>
        <trans-unit id="640d00e2c89256296340b25d596bc910b6ea0565" translate="yes" xml:space="preserve">
          <source>Computing horizontal positions, and using them.</source>
          <target state="translated">计算水平位置,并使用它们。</target>
        </trans-unit>
        <trans-unit id="b5bbf2947b37a26298d485ba138646e6e81b133b" translate="yes" xml:space="preserve">
          <source>Computing text properties in a lazy fashion only when text is examined.</source>
          <target state="translated">只有在检查文本时,才以懒惰的方式计算文本属性。</target>
        </trans-unit>
        <trans-unit id="e2831f1e1f61e6b2cfe6a8e5cc3a90f246816679" translate="yes" xml:space="preserve">
          <source>Conceptually, the &lt;code&gt;pcase&lt;/code&gt; macro borrows the first-arg focus of &lt;code&gt;cl-case&lt;/code&gt; and the clause-processing flow of &lt;code&gt;cond&lt;/code&gt;, replacing &lt;var&gt;condition&lt;/var&gt; with a generalization of the equality test which is a variant of &lt;em&gt;pattern matching&lt;/em&gt;, and adding facilities so that you can concisely express a clause&amp;rsquo;s predicate, and arrange to share let-bindings between a clause&amp;rsquo;s predicate and &lt;var&gt;body-forms&lt;/var&gt;.</source>
          <target state="translated">从概念上讲， &lt;code&gt;pcase&lt;/code&gt; 宏借用了 &lt;code&gt;cl-case&lt;/code&gt; 的first-arg焦点和 &lt;code&gt;cond&lt;/code&gt; 的子句处理流程，用等式测试（这是&lt;em&gt;模式匹配&lt;/em&gt;的变体）的泛化来替换 &lt;var&gt;condition&lt;/var&gt; ，并添加了一些功能，以便您可以简洁地表达子句的谓词，并安排在子句的谓词和 &lt;var&gt;body-forms&lt;/var&gt; 之间共享let-bindings 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bbb590f36e663f85f3e05c9dc5742a389a34ae6c" translate="yes" xml:space="preserve">
          <source>Concurrency in Emacs Lisp.</source>
          <target state="translated">Emacs Lisp中的并发性。</target>
        </trans-unit>
        <trans-unit id="0308bf1a2bfd99ab8973493a5442fa885afbd54a" translate="yes" xml:space="preserve">
          <source>Condition Variable Type</source>
          <target state="translated">条件变量类型</target>
        </trans-unit>
        <trans-unit id="e904aa2c86dbf4af02712a78cd2ea4e268b322de" translate="yes" xml:space="preserve">
          <source>Condition Variables</source>
          <target state="translated">条件变量</target>
        </trans-unit>
        <trans-unit id="1a24131d1910898ac9915abf5eaa57783b24cd48" translate="yes" xml:space="preserve">
          <source>Condition variable for thread synchronization.</source>
          <target state="translated">线程同步的条件变量。</target>
        </trans-unit>
        <trans-unit id="f01f46142f2cc3c48d541b3fdf404a5e4e6808c0" translate="yes" xml:space="preserve">
          <source>Condition variable objects have no read syntax. They print in hash notation, giving the name of the condition variable (if it has been given a name) or its address in core:</source>
          <target state="translated">条件变量对象没有读取语法。它们用哈希符号打印,给出条件变量的名称(如果有名称的话)或核心地址。</target>
        </trans-unit>
        <trans-unit id="dac84f5497b6df8e9bde6a4b55df0ba3ab46e192" translate="yes" xml:space="preserve">
          <source>Conditional control structures choose among alternatives. Emacs Lisp has five conditional forms: &lt;code&gt;if&lt;/code&gt;, which is much the same as in other languages; &lt;code&gt;when&lt;/code&gt; and &lt;code&gt;unless&lt;/code&gt;, which are variants of &lt;code&gt;if&lt;/code&gt;; &lt;code&gt;cond&lt;/code&gt;, which is a generalized case statement; and &lt;code&gt;pcase&lt;/code&gt;, which is a generalization of &lt;code&gt;cond&lt;/code&gt; (see &lt;a href=&quot;pattern_002dmatching-conditional#Pattern_002dMatching-Conditional&quot;&gt;Pattern-Matching Conditional&lt;/a&gt;).</source>
          <target state="translated">条件控制结构在替代方案中进行选择。Emacs Lisp有五种条件形式： &lt;code&gt;if&lt;/code&gt; ，与其他语言几乎相同； &lt;code&gt;when&lt;/code&gt; 和 &lt;code&gt;unless&lt;/code&gt; ，是 &lt;code&gt;if&lt;/code&gt; 的变体; &lt;code&gt;cond&lt;/code&gt; ，这是广义的案例陈述；和 &lt;code&gt;pcase&lt;/code&gt; ，这是 &lt;code&gt;cond&lt;/code&gt; 的一般化（请参见&lt;a href=&quot;pattern_002dmatching-conditional#Pattern_002dMatching-Conditional&quot;&gt;Pattern-Matching Conditional&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="d6a56385d0729f6ff4bf27671cc845cb6f2cfde5" translate="yes" xml:space="preserve">
          <source>Conditionals</source>
          <target state="translated">Conditionals</target>
        </trans-unit>
        <trans-unit id="ec4237f259bdb0c52ebceead5fa341f7b45521ac" translate="yes" xml:space="preserve">
          <source>Conditionals, loops, nonlocal exits.</source>
          <target state="translated">条件、循环、非本地退出。</target>
        </trans-unit>
        <trans-unit id="e3df3a4349b8c21c3316d2662479738b113784c2" translate="yes" xml:space="preserve">
          <source>Conditions for copying and changing GNU Emacs.</source>
          <target state="translated">复制和更改GNU Emacs的条件。</target>
        </trans-unit>
        <trans-unit id="c0e07a9d32061f3729e59a3a542a372ae3d11e7e" translate="yes" xml:space="preserve">
          <source>Connection Local Variables</source>
          <target state="translated">连接本地变量</target>
        </trans-unit>
        <trans-unit id="6271f2a864dc4c9ed30a0925fd37185cfb55d1b6" translate="yes" xml:space="preserve">
          <source>Connection-local variables provide a general mechanism for different variable settings in buffers with a remote connection. They are bound and set depending on the remote connection a buffer is dedicated to.</source>
          <target state="translated">连接局部变量为具有远程连接的缓冲区中的不同变量设置提供了一种通用机制。它们根据缓冲区专用的远程连接进行绑定和设置。</target>
        </trans-unit>
        <trans-unit id="32cbdb9adf84d9e743d888aadd5c918d7c8b7ee3" translate="yes" xml:space="preserve">
          <source>Cons Cell and List Types</source>
          <target state="translated">单元格和列表类型的缺点</target>
        </trans-unit>
        <trans-unit id="6f308a7e36eda1a6771fb5462339703571e0812a" translate="yes" xml:space="preserve">
          <source>Cons cell, an object used to construct lists.</source>
          <target state="translated">Cons单元格,一个用于构建列表的对象。</target>
        </trans-unit>
        <trans-unit id="4dc542b5e89c8aa17a0b193bacf7d21566802126" translate="yes" xml:space="preserve">
          <source>Cons cells, and lists (which are made from cons cells).</source>
          <target state="translated">Cons单元,以及列表(由cons单元组成)。</target>
        </trans-unit>
        <trans-unit id="53d6b8dc405508eaf77b606b7bd6c9295464d078" translate="yes" xml:space="preserve">
          <source>Consecutive characters with the same &lt;code&gt;field&lt;/code&gt; property constitute a &lt;em&gt;field&lt;/em&gt;. Some motion functions including &lt;code&gt;forward-word&lt;/code&gt; and &lt;code&gt;beginning-of-line&lt;/code&gt; stop moving at a field boundary. See &lt;a href=&quot;fields#Fields&quot;&gt;Fields&lt;/a&gt;.</source>
          <target state="translated">具有相同 &lt;code&gt;field&lt;/code&gt; 属性的连续字符构成一个&lt;em&gt;字段&lt;/em&gt;。某些运动功能（包括 &lt;code&gt;forward-word&lt;/code&gt; 和 &lt;code&gt;beginning-of-line&lt;/code&gt; 在字段边界处停止移动。请参阅&lt;a href=&quot;fields#Fields&quot;&gt;字段&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="91f2705305df6818ef3212941c300f43e16c0207" translate="yes" xml:space="preserve">
          <source>Consider a scenario starting with two live windows &lt;var&gt;W2&lt;/var&gt; and &lt;var&gt;W3&lt;/var&gt; and their parent &lt;var&gt;W1&lt;/var&gt;.</source>
          <target state="translated">考虑这样一个场景开始有两个活窗 &lt;var&gt;W2&lt;/var&gt; 和 &lt;var&gt;W3&lt;/var&gt; 和他们的父母 &lt;var&gt;W1&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="a18834e4c1af3ac8fea8eacff9981fe260c76a91" translate="yes" xml:space="preserve">
          <source>Consider all frames.</source>
          <target state="translated">考虑所有框架。</target>
        </trans-unit>
        <trans-unit id="ed7f37e7554953ae02c1b81fae5627a14e01dafc" translate="yes" xml:space="preserve">
          <source>Consider all visible frames.</source>
          <target state="translated">考虑所有可见的框架。</target>
        </trans-unit>
        <trans-unit id="0b96dbfab92a855bebe04f3516ee05d5bae0623d" translate="yes" xml:space="preserve">
          <source>Consider all visible or iconified frames.</source>
          <target state="translated">考虑所有可见的或图标化的框架。</target>
        </trans-unit>
        <trans-unit id="9cb3dcfbff2725168727a0057a419e0d33be43c9" translate="yes" xml:space="preserve">
          <source>Consider only the frames using that particular window as their minibuffer.</source>
          <target state="translated">只考虑使用该特定窗口作为其迷你缓冲区的帧。</target>
        </trans-unit>
        <trans-unit id="38159e8244fa8b3ea8e914d127a3d2635b36466b" translate="yes" xml:space="preserve">
          <source>Consider reusing a window that already shows the buffer</source>
          <target state="translated">考虑重用一个已经显示缓冲区的窗口。</target>
        </trans-unit>
        <trans-unit id="d7f69e049d11cfea430a186ac01ffac1bca0cfc8" translate="yes" xml:space="preserve">
          <source>Consider the following example:</source>
          <target state="translated">请看下面的例子。</target>
        </trans-unit>
        <trans-unit id="a0138afecb0349d0e9d821d9e96e1789673d7bc7" translate="yes" xml:space="preserve">
          <source>Consider the following form:</source>
          <target state="translated">考虑以下形式:</target>
        </trans-unit>
        <trans-unit id="f91123e128a0ad8647bd4197eb387b7f955c5db0" translate="yes" xml:space="preserve">
          <source>Constant: &lt;strong&gt;dir-locals-file&lt;/strong&gt;</source>
          <target state="translated">常量：&lt;strong&gt;dir-locals-file&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3f0b0c040e67429d7937324d1f295b463bb4cd82" translate="yes" xml:space="preserve">
          <source>Constant: &lt;strong&gt;display-buffer-fallback-action&lt;/strong&gt;</source>
          <target state="translated">常量：&lt;strong&gt;显示缓冲区后备动作&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3f8fd389c1ea35644816d07621a7f7d33a93bbf6" translate="yes" xml:space="preserve">
          <source>Constructs for Combining Conditions</source>
          <target state="translated">组合条件的构造</target>
        </trans-unit>
        <trans-unit id="488bead113fba1530f4bdc3a65718abc100b5435" translate="yes" xml:space="preserve">
          <source>Constructs in rx regexps</source>
          <target state="translated">rx regexps中的结构物</target>
        </trans-unit>
        <trans-unit id="dcd26a91ccaa1390fa72e482ee3fcb173da5534b" translate="yes" xml:space="preserve">
          <source>Constructs in the Mode Line</source>
          <target state="translated">模式线中的结构</target>
        </trans-unit>
        <trans-unit id="95c753ad87dce261bfb26be17a5d19b6445e59a5" translate="yes" xml:space="preserve">
          <source>Constructs valid in rx forms.</source>
          <target state="translated">构造在rx表格中有效。</target>
        </trans-unit>
        <trans-unit id="45dda95a8a895acaa082d4568625c2b2229adc6d" translate="yes" xml:space="preserve">
          <source>Consult the source file</source>
          <target state="translated">参考源文件</target>
        </trans-unit>
        <trans-unit id="ffe4bd03d1a9b826c2949410fe04f67bd3703796" translate="yes" xml:space="preserve">
          <source>Contents of Directories</source>
          <target state="translated">目录的内容</target>
        </trans-unit>
        <trans-unit id="61fff9ca74cb63cd0ee0dbec527015ffa34af070" translate="yes" xml:space="preserve">
          <source>Continue execution, but enter the debugger the next time any Lisp function is called. This allows you to step through the subexpressions of an expression, seeing what values the subexpressions compute, and what else they do.</source>
          <target state="translated">继续执行,但下次调用任何Lisp函数时要进入调试器。这可以让你逐步查看一个表达式的子表达式,看看子表达式计算了什么值,还有什么作用。</target>
        </trans-unit>
        <trans-unit id="d69d5dd87a25594fb3576b0bad9d587d69a6b5a4" translate="yes" xml:space="preserve">
          <source>Continue: pause one second at each breakpoint, and then continue (&lt;code&gt;edebug-continue-mode&lt;/code&gt;).</source>
          <target state="translated">继续：在每个断点处暂停一秒钟，然后继续（ &lt;code&gt;edebug-continue-mode&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="aa2d6c89a63b55f635a6f3209d09b093ff6f0556" translate="yes" xml:space="preserve">
          <source>Contrast this function with &lt;code&gt;buffer-substring&lt;/code&gt; (see &lt;a href=&quot;buffer-contents#Buffer-Contents&quot;&gt;Buffer Contents&lt;/a&gt;), which returns a string containing a portion of the text in the current buffer. The beginning of a string is at index 0, but the beginning of a buffer is at index 1.</source>
          <target state="translated">将此功能与 &lt;code&gt;buffer-substring&lt;/code&gt; （请参阅&lt;a href=&quot;buffer-contents#Buffer-Contents&quot;&gt;Buffer Contents&lt;/a&gt;）进行比较，后者返回一个字符串，其中包含当前缓冲区中的部分文本。字符串的开头位于索引0，但缓冲区的开头位于索引1。</target>
        </trans-unit>
        <trans-unit id="49551177d73377982310b6a218929215d8146939" translate="yes" xml:space="preserve">
          <source>Control Structures</source>
          <target state="translated">控制结构</target>
        </trans-unit>
        <trans-unit id="924d2ed382c4c53d0f69ac054827f4513077f47f" translate="yes" xml:space="preserve">
          <source>Control characters can be represented using yet another read syntax. This consists of a question mark followed by a backslash, caret, and the corresponding non-control character, in either upper or lower case. For example, both &amp;lsquo;</source>
          <target state="translated">可以使用另一种读取语法来表示控制字符。它由问号，反斜杠，脱字号和相应的非控制字符（大写或小写）组成。例如，两个&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="f74284a69aad3b3a5d8f4027059afac05653bad3" translate="yes" xml:space="preserve">
          <source>Control over the garbage collector via &lt;code&gt;gc-cons-threshold&lt;/code&gt; and &lt;code&gt;gc-cons-percentage&lt;/code&gt; is only approximate. Although Emacs checks for threshold exhaustion regularly, for efficiency reasons it does not do so immediately after every change to the heap or to &lt;code&gt;gc-cons-threshold&lt;/code&gt; or &lt;code&gt;gc-cons-percentage&lt;/code&gt;, so exhausting the threshold does not immediately trigger garbage collection. Also, for efficiency in threshold calculations Emacs approximates the heap size, which counts the bytes used by currently-accessible objects in the heap.</source>
          <target state="translated">通过 &lt;code&gt;gc-cons-threshold&lt;/code&gt; 和 &lt;code&gt;gc-cons-percentage&lt;/code&gt; 对垃圾收集器的控制仅是近似的。尽管Emacs定期检查阈值耗尽，但是出于效率原因，它不会在每次对堆或 &lt;code&gt;gc-cons-threshold&lt;/code&gt; 或 &lt;code&gt;gc-cons-percentage&lt;/code&gt; 进行更改后立即进行检查，因此耗尽阈值不会立即触发垃圾回收。同样，为了提高阈值计算的效率，Emacs估算堆大小，该大小计算堆中当前可访问对象使用的字节数。</target>
        </trans-unit>
        <trans-unit id="51a5660859ba3abd6ee50652d76f51626dbeda37" translate="yes" xml:space="preserve">
          <source>Control-?</source>
          <target state="translated">Control-?</target>
        </trans-unit>
        <trans-unit id="a928bf5944d990a73e01c2a9c46d6b813a9da870" translate="yes" xml:space="preserve">
          <source>Control-Character Syntax</source>
          <target state="translated">控制字符语法</target>
        </trans-unit>
        <trans-unit id="77dd55f6961c048be4d9b751dba76e78f4b78946" translate="yes" xml:space="preserve">
          <source>Controlling and recording terminal output.</source>
          <target state="translated">控制和记录终端输出。</target>
        </trans-unit>
        <trans-unit id="df80da38626c73dcd2fc3da688ac3bdfaea15e62" translate="yes" xml:space="preserve">
          <source>Controlling expansion; expansion subroutines.</source>
          <target state="translated">控制扩展;扩展子程序。</target>
        </trans-unit>
        <trans-unit id="d34aa18cbf6a7a63430bb1c86a6be161b5055c63" translate="yes" xml:space="preserve">
          <source>Controlling frame size, position, font, etc.</source>
          <target state="translated">控制画面大小、位置、字体等。</target>
        </trans-unit>
        <trans-unit id="c569645c1abce1208ce172bc38a08a90ca3fc79e" translate="yes" xml:space="preserve">
          <source>Controlling how backups and auto-save files are made.</source>
          <target state="translated">控制备份和自动保存文件的方式。</target>
        </trans-unit>
        <trans-unit id="c45476ac159b7503880ae8c1c361226f931128b4" translate="yes" xml:space="preserve">
          <source>Controlling scroll bars.</source>
          <target state="translated">控制滚动条。</target>
        </trans-unit>
        <trans-unit id="fd1d5488a535d755032a9351c64ea83e91227c14" translate="yes" xml:space="preserve">
          <source>Controlling the Active Keymaps</source>
          <target state="translated">控制活动钥匙图</target>
        </trans-unit>
        <trans-unit id="ec30bb9dfc9153a75fe431da3c119c33e9d68f49" translate="yes" xml:space="preserve">
          <source>Controlling the cursor appearance.</source>
          <target state="translated">控制光标的外观。</target>
        </trans-unit>
        <trans-unit id="59f0d0ec6f80826d9cf4911ade02e2a9e0cdcbb0" translate="yes" xml:space="preserve">
          <source>Controlling the default choices.</source>
          <target state="translated">控制默认选择。</target>
        </trans-unit>
        <trans-unit id="307712c4ad63fe120cd8b931f02a7a363de9a1cf" translate="yes" xml:space="preserve">
          <source>Controlling the echo area.</source>
          <target state="translated">控制回音区。</target>
        </trans-unit>
        <trans-unit id="d645de8f844b199d2c01dc646ad8a798f357d0bb" translate="yes" xml:space="preserve">
          <source>Controlling the height of lines.</source>
          <target state="translated">控制线条的高度。</target>
        </trans-unit>
        <trans-unit id="a41d2e67da9b04bb9f13efd1bd65a2797266a367" translate="yes" xml:space="preserve">
          <source>Controlling visibility with &lt;code&gt;buffer-invisibility-spec&lt;/code&gt; is especially useful in a program to display the list of entries in a database. It permits the implementation of convenient filtering commands to view just a part of the entries in the database. Setting this variable is very fast, much faster than scanning all the text in the buffer looking for properties to change.</source>
          <target state="translated">在显示数据库中条目列表的程序中，使用 &lt;code&gt;buffer-invisibility-spec&lt;/code&gt; 控制可见性特别有用。它允许执行方便的过滤命令，以仅查看数据库中的部分条目。设置此变量非常快，比扫描缓冲区中的所有文本以查找要更改的属性要快得多。</target>
        </trans-unit>
        <trans-unit id="1e6169e424d1c227ade5dd8fd4bae60a65d3dc64" translate="yes" xml:space="preserve">
          <source>Controlling whether to use multibyte characters.</source>
          <target state="translated">控制是否使用多字节字符。</target>
        </trans-unit>
        <trans-unit id="41d9b8a8c185480bfd8dc8a0945d46e6e57a9221" translate="yes" xml:space="preserve">
          <source>Controlling which region gets refontified after a buffer change.</source>
          <target state="translated">控制哪个区域在缓冲区变化后被重新强化。</target>
        </trans-unit>
        <trans-unit id="29dfd2de929a124566ac189d7ec4e22dc91ab245" translate="yes" xml:space="preserve">
          <source>Controlling window fringes.</source>
          <target state="translated">控制窗户的边缘。</target>
        </trans-unit>
        <trans-unit id="c466c2f7e8f5d9f3ec2ea66bb91e6eaf343b3ec1" translate="yes" xml:space="preserve">
          <source>Convenient special cases of completion (reading buffer names, variable names, etc.).</source>
          <target state="translated">方便完成的特殊情况(读取缓冲区名、变量名等)。</target>
        </trans-unit>
        <trans-unit id="2ef62e3b35ca60e53cfc4e279e31f0f36898e8a5" translate="yes" xml:space="preserve">
          <source>Convenient ways to define an image for later use.</source>
          <target state="translated">方便地定义一个图像,以便以后使用。</target>
        </trans-unit>
        <trans-unit id="0bf7285054ee7661778b8a7284eaea504418ae73" translate="yes" xml:space="preserve">
          <source>Convenient ways to display an image once it is defined.</source>
          <target state="translated">一旦定义了图像,就可以方便地显示它。</target>
        </trans-unit>
        <trans-unit id="61856b8c17a4ff32006fe4b7dcc6f96f253b2120" translate="yes" xml:space="preserve">
          <source>Conventions</source>
          <target state="translated">Conventions</target>
        </trans-unit>
        <trans-unit id="7bc6fe2a7d08aa9e4c9a522ac0824dfc3b75ad2f" translate="yes" xml:space="preserve">
          <source>Conventions for Writing Minor Modes</source>
          <target state="translated">编写小调的约定</target>
        </trans-unit>
        <trans-unit id="3deb94933a9a171984a0cda13ccda169584422dd" translate="yes" xml:space="preserve">
          <source>Conversion Between Lisp and Module Values</source>
          <target state="translated">Lisp和模块值之间的转换</target>
        </trans-unit>
        <trans-unit id="7b6dda7c75495bb4fd913fe9cda86fcd2f093d3f" translate="yes" xml:space="preserve">
          <source>Conversion from byte arrays to nested alists is also known as &lt;em&gt;deserializing&lt;/em&gt; or &lt;em&gt;unpacking&lt;/em&gt;, while going in the opposite direction is also known as &lt;em&gt;serializing&lt;/em&gt; or &lt;em&gt;packing&lt;/em&gt;.</source>
          <target state="translated">从字节数组到嵌套列表的转换也称为&lt;em&gt;反序列化&lt;/em&gt;或&lt;em&gt;拆包&lt;/em&gt;，而相反的方向也称为&lt;em&gt;序列化&lt;/em&gt;或&lt;em&gt;打包&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="02b1b45f9d975a92faeb4f148eccff062e636bba" translate="yes" xml:space="preserve">
          <source>Conversion of Characters and Strings</source>
          <target state="translated">字符和字符串的转换</target>
        </trans-unit>
        <trans-unit id="a7c081d9514285553713aaf0f3604e600eb2d9de" translate="yes" xml:space="preserve">
          <source>Conversion of tabs to spaces happens only if &lt;var&gt;count&lt;/var&gt; is positive. If it is negative, exactly -&lt;var&gt;count&lt;/var&gt; characters after point are deleted.</source>
          <target state="translated">仅当 &lt;var&gt;count&lt;/var&gt; 为正数时，才会将制表符转换为空格。如果为负，则精确删除-点后的 &lt;var&gt;count&lt;/var&gt; 字符。</target>
        </trans-unit>
        <trans-unit id="05b05c33a74179f0f175207e819e7a3e68c0bbf4" translate="yes" xml:space="preserve">
          <source>Conversion starts with one representation and produces another representation. When there is only one conversion to do, there is no conflict about what to start with. However, when there are multiple conversions involved, conflict may arise when two conversions need to start with the same data.</source>
          <target state="translated">转换从一个表征开始,产生另一个表征。当只有一个转换要做时,不存在从什么开始的冲突。但是,当涉及多个转换时,当两个转换需要从相同的数据开始时,可能会出现冲突。</target>
        </trans-unit>
        <trans-unit id="96405b08f6874f5dac1e34f5aa43e87067b82684" translate="yes" xml:space="preserve">
          <source>Conversion to and from various file formats.</source>
          <target state="translated">转换为和从各种文件格式。</target>
        </trans-unit>
        <trans-unit id="337acaaa689021b4ee7a9d42ef3e943196cef220" translate="yes" xml:space="preserve">
          <source>Conversion to or from base 64 encoding.</source>
          <target state="translated">转换为或从基数64编码。</target>
        </trans-unit>
        <trans-unit id="35d70b7c19413e4896d7b3762df5948231ef619e" translate="yes" xml:space="preserve">
          <source>Convert the Internet address vector &lt;var&gt;ip&lt;/var&gt; to a string in the usual dotted notation.</source>
          <target state="translated">将Internet地址向量 &lt;var&gt;ip&lt;/var&gt; 转换为通常的点分表示法的字符串。</target>
        </trans-unit>
        <trans-unit id="d4778c6f6fbd78060d18e640b0577ff1f19e9085" translate="yes" xml:space="preserve">
          <source>Converting Lisp objects to text and back.</source>
          <target state="translated">将Lisp对象转换为文本并返回。</target>
        </trans-unit>
        <trans-unit id="fc8fdc9fa5a83cea24c50aab5e3362950a9bfc97" translate="yes" xml:space="preserve">
          <source>Converting Text Representations</source>
          <target state="translated">转换文本表示</target>
        </trans-unit>
        <trans-unit id="90f6e1b3c6da0822ea0b9914a612e30d83c96069" translate="yes" xml:space="preserve">
          <source>Converting among timestamp forms.</source>
          <target state="translated">时间戳形式之间的转换。</target>
        </trans-unit>
        <trans-unit id="26ac13ddb29d0dd1caa237a75b4438e366e1517b" translate="yes" xml:space="preserve">
          <source>Converting an Emacs Lisp program to lexical binding is easy. First, add a file-local variable setting of &lt;code&gt;lexical-binding&lt;/code&gt; to &lt;code&gt;t&lt;/code&gt; in the header line of the Emacs Lisp source file (see &lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;File Local Variables&lt;/a&gt;). Second, check that every variable in the program which needs to be dynamically bound has a variable definition, so that it is not inadvertently bound lexically.</source>
          <target state="translated">将Emacs Lisp程序转换为词汇绑定很容易。首先，在Emacs Lisp源文件的标题行中，将 &lt;code&gt;t&lt;/code&gt; 的 &lt;code&gt;lexical-binding&lt;/code&gt; 的文件局部变量设置添加到t（请参见&lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;文件局部变量&lt;/a&gt;）。其次，检查程序中需要动态绑定的每个变量都有一个变量定义，这样就不会无意间按词法绑定。</target>
        </trans-unit>
        <trans-unit id="fc10701f0526602d946fa10a00b4c09978a6ead0" translate="yes" xml:space="preserve">
          <source>Converting coordinates to windows.</source>
          <target state="translated">将坐标转换为窗口。</target>
        </trans-unit>
        <trans-unit id="524c596225982bf2828d086c696ecb11e47c4298" translate="yes" xml:space="preserve">
          <source>Converting float to integer and vice versa.</source>
          <target state="translated">将浮点数转换为整数,反之亦然。</target>
        </trans-unit>
        <trans-unit id="0bb4b95e1bc29b98a83290af4288e9f72e2a0e04" translate="yes" xml:space="preserve">
          <source>Converting multibyte text to unibyte converts all</source>
          <target state="translated">将多字节文本转换为单字节将所有的</target>
        </trans-unit>
        <trans-unit id="fa2156a499b76291b1a27ac1a43926bb4f82cfd4" translate="yes" xml:space="preserve">
          <source>Converting relative file names to absolute ones.</source>
          <target state="translated">将相对文件名转换为绝对文件名。</target>
        </trans-unit>
        <trans-unit id="7c2dc98411dbd3091c4b50f256b466e1b535f24d" translate="yes" xml:space="preserve">
          <source>Converting timestamps to text and vice versa.</source>
          <target state="translated">将时间戳转换为文本,反之亦然。</target>
        </trans-unit>
        <trans-unit id="7afe6e99a534eb8a522692395adedc0d96df056c" translate="yes" xml:space="preserve">
          <source>Converting to and from characters and strings.</source>
          <target state="translated">字符和字符串之间的转换。</target>
        </trans-unit>
        <trans-unit id="b968665d75903a1148fa2d697573cd91bbcaaeef" translate="yes" xml:space="preserve">
          <source>Converting unibyte text to multibyte text leaves</source>
          <target state="translated">将单字节文本转换为多字节文本时,剩下的是</target>
        </trans-unit>
        <trans-unit id="472c8d106551794420807834d8b6cfbdc8233275" translate="yes" xml:space="preserve">
          <source>Converting unibyte to multibyte and vice versa.</source>
          <target state="translated">将单字节转换为多字节,反之亦然。</target>
        </trans-unit>
        <trans-unit id="3a07f3577430864cee004b96ff66a0168d3c55ca" translate="yes" xml:space="preserve">
          <source>Coordinates and Windows</source>
          <target state="translated">坐标和窗口</target>
        </trans-unit>
        <trans-unit id="eeebb6a0149995df68dcbd9a928f37aa757c3a3f" translate="yes" xml:space="preserve">
          <source>Coordinates by default are absolute. To use coordinates relative to the last position, or &amp;ndash; initially &amp;ndash; to the origin, set the attribute &lt;var&gt;:relative&lt;/var&gt; to &lt;code&gt;t&lt;/code&gt;. This attribute can be specified for the function or for individual commands. If specified for the function, then all commands use relative coordinates by default. To make an individual command use absolute coordinates, set &lt;var&gt;:relative&lt;/var&gt; to &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">默认情况下，坐标为绝对坐标。要使用相对于最后位置的坐标，或者相对于原点使用坐标，请将属性 &lt;var&gt;:relative&lt;/var&gt; 设置为 &lt;code&gt;t&lt;/code&gt; 。可以为功能或单个命令指定此属性。如果为该功能指定，则所有命令默认都使用相对坐标。要使单个命令使用绝对坐标，请将 &lt;var&gt;:relative&lt;/var&gt; 设置为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8da3db9270db343a7b0a696a8877ef2f7be01b76" translate="yes" xml:space="preserve">
          <source>Copying text between strings and buffers preserves the properties along with the characters; this includes such diverse functions as &lt;code&gt;substring&lt;/code&gt;, &lt;code&gt;insert&lt;/code&gt;, and &lt;code&gt;buffer-substring&lt;/code&gt;.</source>
          <target state="translated">在字符串和缓冲区之间复制文本会保留属性以及字符；这包括诸如 &lt;code&gt;substring&lt;/code&gt; ， &lt;code&gt;insert&lt;/code&gt; 和 &lt;code&gt;buffer-substring&lt;/code&gt; 的各种功能。</target>
        </trans-unit>
        <trans-unit id="9b2ceb26d4b98a07244f3a0d316e0e282c56e18b" translate="yes" xml:space="preserve">
          <source>Copyright &amp;copy; 1990-1996, 1998-2019 Free Software Foundation, Inc.</source>
          <target state="translated">版权所有&amp;copy;1990-1996、1998-2019自由软件基金会，Inc.</target>
        </trans-unit>
        <trans-unit id="2102df6b141a640305fd55a5e765b5f702fb72eb" translate="yes" xml:space="preserve">
          <source>Corrections were supplied by Drew Adams, Juanma Barranquero, Karl Berry, Jim Blandy, Bard Bloom, Stephane Boucher, David Boyes, Alan Carroll, Richard Davis, Lawrence R. Dodd, Peter Doornbosch, David A. Duff, Chris Eich, Beverly Erlebacher, David Eckelkamp, Ralf Fassel, Eirik Fuller, Stephen Gildea, Bob Glickstein, Eric Hanchrow, Jesper Harder, George Hartzell, Nathan Hess, Masayuki Ida, Dan Jacobson, Jak Kirman, Bob Knighten, Frederick M. Korz, Joe Lammens, Glenn M. Lewis, K. Richard Magill, Brian Marick, Roland McGrath, Stefan Monnier, Skip Montanaro, John Gardiner Myers, Thomas A. Peterson, Francesco Potort&amp;igrave;, Friedrich Pukelsheim, Arnold D. Robbins, Raul Rockwell, Jason Rumney, Per Starb&amp;auml;ck, Shinichirou Sugou, Kimmo Suominen, Edward Tharp, Bill Trost, Rickard Westman, Jean White, Eduard Wiebe, Matthew Wilding, Carl Witty, Dale Worley, Rusty Wright, and David D. Zuhn.</source>
          <target state="translated">更正由Drew Adams，Juanma Barranquero，Karl Berry，Jim Blandy，Bard Bloom，Stephane Boucher，David Boyes，Alan Carroll，Richard Davis，Lawrence R.Dodd，Peter Doornbosch，David A.Duff，Chris Eich，Beverly Erlebacher提供， David Eckelkamp，Ralf Fassel，Eirik Fuller，Stephen Gildea，Bob Glickstein，Eric Hanchrow，Jesper Harder，George Hartzell，Nathan Hess，Masayuki Ida，Dan Jacobson，Jak Kirman，Bob Knighten，Frederick M.Korz，Joe Lammens，Glenn M. Lewis，K。Richard Magill，Brian Marick，Roland McGrath，Stefan Monnier，Skip Montanaro，John Gardiner Myers，Thomas A.Peterson，FrancescoPotort&amp;igrave;，Friedrich Pukelsheim，Arnold D.Robbins，Raul Rockwell，Jason Rumney，PerStarb&amp;auml;ck，Shinichirou Sugou ，Kimmo Suominen，Edward Tharp，Bill Trost，Rickard Westman，Jean White，Eduard Wiebe，Matthew Wilding，Carl Witty，Dale Worley，Rusty Wright和David D. Zuhn。</target>
        </trans-unit>
        <trans-unit id="b9ba1710f3c11a1b452cc804f42def7b223ae6f5" translate="yes" xml:space="preserve">
          <source>Corresponding string regexp: &amp;lsquo;</source>
          <target state="translated">对应的字符串正则表达式：</target>
        </trans-unit>
        <trans-unit id="7c41d18405d41a7b0640633e526c2946d40de878" translate="yes" xml:space="preserve">
          <source>Corresponds to Unicode language- and context-independent special lower-casing rules. The value of this property is a string (which may be empty). For example mapping for U+0130 &lt;small&gt;LATIN CAPITAL LETTER I WITH DOT ABOVE&lt;/small&gt; the value is &lt;code&gt;&quot;i\u0307&quot;&lt;/code&gt; (i.e. 2-character string consisting of &lt;small&gt;LATIN SMALL LETTER I&lt;/small&gt; followed by U+0307 &lt;small&gt;COMBINING DOT ABOVE&lt;/small&gt;). For characters with no special mapping, the value is &lt;code&gt;nil&lt;/code&gt; which means &lt;code&gt;lowercase&lt;/code&gt; property needs to be consulted instead.</source>
          <target state="translated">对应于Unicode语言和上下文无关的特殊小写字母规则。此属性的值是一个字符串（可以为空）。用于U + 0130示例映射&lt;small&gt;LATIN CAPITAL LETTER我WITH DOT ABOVE&lt;/small&gt;值是 &lt;code&gt;&quot;i\u0307&quot;&lt;/code&gt; （即，2个字符组成的字符串&lt;small&gt;拉丁小写字母我&lt;/small&gt;随后U + 0307 &lt;small&gt;COMBINING DOT ABOVE&lt;/small&gt;）。对于没有特殊映射的字符，其值为 &lt;code&gt;nil&lt;/code&gt; ，这意味着需要查询 &lt;code&gt;lowercase&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="b5a54d91ef13bd529c42abafa0fb7ea35f71c990" translate="yes" xml:space="preserve">
          <source>Corresponds to Unicode language- and context-independent special upper-casing rules. The value of this property is a string (which may be empty). For example mapping for U+00DF &lt;small&gt;LATIN SMALL LETTER SHARP S&lt;/small&gt; is &lt;code&gt;&quot;SS&quot;&lt;/code&gt;. For characters with no special mapping, the value is &lt;code&gt;nil&lt;/code&gt; which means &lt;code&gt;uppercase&lt;/code&gt; property needs to be consulted instead.</source>
          <target state="translated">对应于Unicode语言和上下文无关的特殊大写规则。此属性的值是一个字符串（可以为空）。用于U + 00DF示例映射&lt;small&gt;拉丁小写字母清音S&lt;/small&gt;是 &lt;code&gt;&quot;SS&quot;&lt;/code&gt; 。对于没有特殊映射的字符，其值为 &lt;code&gt;nil&lt;/code&gt; ，这意味着需要查询 &lt;code&gt;uppercase&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="a7d1cb521db4f75e84a16e684adca4b2af98b75c" translate="yes" xml:space="preserve">
          <source>Corresponds to Unicode unconditional special title-casing rules. The value of this property is a string (which may be empty). For example mapping for U+FB01 &lt;small&gt;LATIN SMALL LIGATURE FI&lt;/small&gt; the value is &lt;code&gt;&quot;Fi&quot;&lt;/code&gt;. For characters with no special mapping, the value is &lt;code&gt;nil&lt;/code&gt; which means &lt;code&gt;titlecase&lt;/code&gt; property needs to be consulted instead.</source>
          <target state="translated">对应于Unicode无条件的特殊标题框规则。此属性的值是一个字符串（可以为空）。例如，U + FB01&lt;small&gt;拉丁小尺寸FI&lt;/small&gt;的映射值为 &lt;code&gt;&quot;Fi&quot;&lt;/code&gt; 。对于没有特殊映射的字符，该值为 &lt;code&gt;nil&lt;/code&gt; ，这意味着需要参考 &lt;code&gt;titlecase&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="75b750f2e6da0a3d2a6bc519797c592d18d71dd5" translate="yes" xml:space="preserve">
          <source>Corresponds to the &lt;code&gt;Canonical_Combining_Class&lt;/code&gt; Unicode property. The value is an integer. For unassigned codepoints, the value is zero.</source>
          <target state="translated">对应于 &lt;code&gt;Canonical_Combining_Class&lt;/code&gt; Unicode属性。整数形式。对于未分配的代码点，该值为零。</target>
        </trans-unit>
        <trans-unit id="cc9225abecb16fcfbfafe41d62a9a6271ff1bc4f" translate="yes" xml:space="preserve">
          <source>Corresponds to the &lt;code&gt;General_Category&lt;/code&gt; Unicode property. The value is a symbol whose name is a 2-letter abbreviation of the character&amp;rsquo;s classification. For unassigned codepoints, the value is &lt;code&gt;Cn&lt;/code&gt;.</source>
          <target state="translated">对应于 &lt;code&gt;General_Category&lt;/code&gt; Unicode属性。该值是一个符号，其名称是字符分类的2个字母的缩写。对于未分配的代码点，该值为 &lt;code&gt;Cn&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="be06e073e66fd593a9849a78ad735893ade8cc11" translate="yes" xml:space="preserve">
          <source>Corresponds to the &lt;code&gt;Name&lt;/code&gt; Unicode property. The value is a string consisting of upper-case Latin letters A to Z, digits, spaces, and hyphen &amp;lsquo;</source>
          <target state="translated">对应于 &lt;code&gt;Name&lt;/code&gt; Unicode属性。字符串形式，由大写拉丁字母A到Z，数字，空格和连字符'</target>
        </trans-unit>
        <trans-unit id="2f8fd32ceb9fd632a2ceb9d4c0c0c63306d38349" translate="yes" xml:space="preserve">
          <source>Corresponds to the Unicode &lt;code&gt;Bidi_Class&lt;/code&gt; property. The value is a symbol whose name is the Unicode &lt;em&gt;directional type&lt;/em&gt; of the character. Emacs uses this property when it reorders bidirectional text for display (see &lt;a href=&quot;bidirectional-display#Bidirectional-Display&quot;&gt;Bidirectional Display&lt;/a&gt;). For unassigned codepoints, the value depends on the code blocks to which the codepoint belongs: most unassigned codepoints get the value of &lt;code&gt;L&lt;/code&gt; (strong L), but some get values of &lt;code&gt;AL&lt;/code&gt; (Arabic letter) or &lt;code&gt;R&lt;/code&gt; (strong R).</source>
          <target state="translated">对应于Unicode &lt;code&gt;Bidi_Class&lt;/code&gt; 属性。该值是一个符号，其名称是字符的Unicode&lt;em&gt;定向类型&lt;/em&gt;。Emacs在对双向文本进行重新排序以进行显示时使用此属性（请参阅&amp;ldquo;&lt;a href=&quot;bidirectional-display#Bidirectional-Display&quot;&gt;双向显示&amp;rdquo;&lt;/a&gt;）。对于未分配的代码点，该值取决于该代码点所属的代码块：大多数未分配的代码点获得 &lt;code&gt;L&lt;/code&gt; 的值（强L），但有些获得 &lt;code&gt;AL&lt;/code&gt; （阿拉伯字母）或 &lt;code&gt;R&lt;/code&gt; （强R）的值。</target>
        </trans-unit>
        <trans-unit id="829beecebbebcce9941e38c929f1a7cad7264cdc" translate="yes" xml:space="preserve">
          <source>Corresponds to the Unicode &lt;code&gt;Bidi_Mirrored&lt;/code&gt; property. The value of this property is a symbol, either &lt;code&gt;Y&lt;/code&gt; or &lt;code&gt;N&lt;/code&gt;. For unassigned codepoints, the value is &lt;code&gt;N&lt;/code&gt;.</source>
          <target state="translated">对应于Unicode &lt;code&gt;Bidi_Mirrored&lt;/code&gt; 属性。此属性的值是 &lt;code&gt;Y&lt;/code&gt; 或 &lt;code&gt;N&lt;/code&gt; 的符号。对于未分配的码点，该值为 &lt;code&gt;N&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f9e759e1b98f990f210ac6bb9f5d912b4d1caa6c" translate="yes" xml:space="preserve">
          <source>Corresponds to the Unicode &lt;code&gt;Bidi_Mirroring_Glyph&lt;/code&gt; property. The value of this property is a character whose glyph represents the mirror image of the character&amp;rsquo;s glyph, or &lt;code&gt;nil&lt;/code&gt; if there&amp;rsquo;s no defined mirroring glyph. All the characters whose &lt;code&gt;mirrored&lt;/code&gt; property is &lt;code&gt;N&lt;/code&gt; have &lt;code&gt;nil&lt;/code&gt; as their &lt;code&gt;mirroring&lt;/code&gt; property; however, some characters whose &lt;code&gt;mirrored&lt;/code&gt; property is &lt;code&gt;Y&lt;/code&gt; also have &lt;code&gt;nil&lt;/code&gt; for &lt;code&gt;mirroring&lt;/code&gt;, because no appropriate characters exist with mirrored glyphs. Emacs uses this property to display mirror images of characters when appropriate (see &lt;a href=&quot;bidirectional-display#Bidirectional-Display&quot;&gt;Bidirectional Display&lt;/a&gt;). For unassigned codepoints, the value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">对应于Unicode &lt;code&gt;Bidi_Mirroring_Glyph&lt;/code&gt; 属性。此属性的值是一个字符，其字形代表该字符字形的镜像，如果没有定义的镜像字形，则为 &lt;code&gt;nil&lt;/code&gt; 。其所有的人物 &lt;code&gt;mirrored&lt;/code&gt; 属性是 &lt;code&gt;N&lt;/code&gt; 具有 &lt;code&gt;nil&lt;/code&gt; 作为其 &lt;code&gt;mirroring&lt;/code&gt; 财产;但是，某些 &lt;code&gt;mirrored&lt;/code&gt; 属性为 &lt;code&gt;Y&lt;/code&gt; 的字符也 &lt;code&gt;nil&lt;/code&gt; 用于 &lt;code&gt;mirroring&lt;/code&gt; 字符，因为镜像字形不存在适当的字符。 Emacs在适当时使用此属性显示字符的镜像（请参阅&lt;a href=&quot;bidirectional-display#Bidirectional-Display&quot;&gt;双向显示）。&lt;/a&gt;）。对于未分配的代码点，该值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="265879e7606999c4fecc98ef35dfec9da486c9b5" translate="yes" xml:space="preserve">
          <source>Corresponds to the Unicode &lt;code&gt;Bidi_Paired_Bracket&lt;/code&gt; property. The value of this property is the codepoint of a character&amp;rsquo;s &lt;em&gt;paired bracket&lt;/em&gt;, or &lt;code&gt;nil&lt;/code&gt; if the character is not a bracket character. This establishes a mapping between characters that are treated as bracket pairs by the Unicode Bidirectional Algorithm; Emacs uses this property when it decides how to reorder for display parentheses, braces, and other similar characters (see &lt;a href=&quot;bidirectional-display#Bidirectional-Display&quot;&gt;Bidirectional Display&lt;/a&gt;).</source>
          <target state="translated">对应于Unicode &lt;code&gt;Bidi_Paired_Bracket&lt;/code&gt; 属性。此属性的值是一个字符的的代码点&lt;em&gt;配对支架&lt;/em&gt;，或 &lt;code&gt;nil&lt;/code&gt; 如果字符不是一个括号字符。这将在被Unicode双向算法视为括号对的字符之间建立映射。Emacs在决定如何对显示括号，花括号和其他类似字符进行重新排序时使用此属性（请参阅&lt;a href=&quot;bidirectional-display#Bidirectional-Display&quot;&gt;双向显示&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="c3dff4e6b8526fbe88330dd801a8d89bd2b4ba08" translate="yes" xml:space="preserve">
          <source>Corresponds to the Unicode &lt;code&gt;Bidi_Paired_Bracket_Type&lt;/code&gt; property. For characters whose &lt;code&gt;paired-bracket&lt;/code&gt; property is non-&lt;code&gt;nil&lt;/code&gt;, the value of this property is a symbol, either &lt;code&gt;o&lt;/code&gt; (for opening bracket characters) or &lt;code&gt;c&lt;/code&gt; (for closing bracket characters). For characters whose &lt;code&gt;paired-bracket&lt;/code&gt; property is &lt;code&gt;nil&lt;/code&gt;, the value is the symbol &lt;code&gt;n&lt;/code&gt; (None). Like &lt;code&gt;paired-bracket&lt;/code&gt;, this property is used for bidirectional display.</source>
          <target state="translated">对应于Unicode &lt;code&gt;Bidi_Paired_Bracket_Type&lt;/code&gt; 属性。对于 &lt;code&gt;paired-bracket&lt;/code&gt; 属性为non- &lt;code&gt;nil&lt;/code&gt; 的字符，此属性的值是一个符号，可以是 &lt;code&gt;o&lt;/code&gt; （用于开括号字符）或 &lt;code&gt;c&lt;/code&gt; （用于闭括号字符）。对于 &lt;code&gt;paired-bracket&lt;/code&gt; 属性为 &lt;code&gt;nil&lt;/code&gt; 的字符，其值为符号 &lt;code&gt;n&lt;/code&gt; （无）。像 &lt;code&gt;paired-bracket&lt;/code&gt; ，此属性用于双向显示。</target>
        </trans-unit>
        <trans-unit id="777c7ab0edc9827c3f8a4183f60c38cbbfacd58b" translate="yes" xml:space="preserve">
          <source>Corresponds to the Unicode &lt;code&gt;ISO_Comment&lt;/code&gt; property. The value is either a string or &lt;code&gt;nil&lt;/code&gt;. For unassigned codepoints, the value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">对应于Unicode &lt;code&gt;ISO_Comment&lt;/code&gt; 属性。该值为字符串或 &lt;code&gt;nil&lt;/code&gt; 。对于未分配的代码点，该值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a3cc8f9ccb4adcab4253ea6d0f97742c0adc37f7" translate="yes" xml:space="preserve">
          <source>Corresponds to the Unicode &lt;code&gt;Numeric_Value&lt;/code&gt; property for characters whose &lt;code&gt;Numeric_Type&lt;/code&gt; is &amp;lsquo;</source>
          <target state="translated">对应于 &lt;code&gt;Numeric_Type&lt;/code&gt; 为'的字符的Unicode &lt;code&gt;Numeric_Value&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="76392a8c382a428eaff015e5935c52cac0bc1279" translate="yes" xml:space="preserve">
          <source>Corresponds to the Unicode &lt;code&gt;Simple_Lowercase_Mapping&lt;/code&gt; property. The value of this property is a single character. For unassigned codepoints, the value is &lt;code&gt;nil&lt;/code&gt;, which means the character itself.</source>
          <target state="translated">对应于Unicode &lt;code&gt;Simple_Lowercase_Mapping&lt;/code&gt; 属性。此属性的值是一个字符。对于未分配的代码点，该值为 &lt;code&gt;nil&lt;/code&gt; ，这意味着字符本身。</target>
        </trans-unit>
        <trans-unit id="d7eb6f31edfe7cd2d32bf7fefe78f5da2dca8cda" translate="yes" xml:space="preserve">
          <source>Corresponds to the Unicode &lt;code&gt;Simple_Titlecase_Mapping&lt;/code&gt; property. &lt;em&gt;Title case&lt;/em&gt; is a special form of a character used when the first character of a word needs to be capitalized. The value of this property is a single character. For unassigned codepoints, the value is &lt;code&gt;nil&lt;/code&gt;, which means the character itself.</source>
          <target state="translated">对应于Unicode &lt;code&gt;Simple_Titlecase_Mapping&lt;/code&gt; 属性。&lt;em&gt;标题大小写&lt;/em&gt;是一种特殊形式的字符，当单词的第一个字符需要大写时使用。此属性的值是一个字符。对于未分配的代码点，该值为 &lt;code&gt;nil&lt;/code&gt; ，这意味着字符本身。</target>
        </trans-unit>
        <trans-unit id="3ad30905593adfe4f3ea16b516868dc1926bf342" translate="yes" xml:space="preserve">
          <source>Corresponds to the Unicode &lt;code&gt;Simple_Uppercase_Mapping&lt;/code&gt; property. The value of this property is a single character. For unassigned codepoints, the value is &lt;code&gt;nil&lt;/code&gt;, which means the character itself.</source>
          <target state="translated">对应于Unicode &lt;code&gt;Simple_Uppercase_Mapping&lt;/code&gt; 属性。此属性的值是一个字符。对于未分配的代码点，该值为 &lt;code&gt;nil&lt;/code&gt; ，这意味着字符本身。</target>
        </trans-unit>
        <trans-unit id="2ef3e02019fafe84f9e1ab7effc843e021ce4c50" translate="yes" xml:space="preserve">
          <source>Corresponds to the Unicode &lt;code&gt;Unicode_1_Name&lt;/code&gt; property. The value is a string. For unassigned codepoints, and characters that have no value for this property, the value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">对应于Unicode &lt;code&gt;Unicode_1_Name&lt;/code&gt; 属性。该值是一个字符串。对于未分配的代码点和对此属性没有值的字符，该值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="57cebd554d2452b091a6834063266c57dda3987c" translate="yes" xml:space="preserve">
          <source>Corresponds to the Unicode properties &lt;code&gt;Decomposition_Type&lt;/code&gt; and &lt;code&gt;Decomposition_Value&lt;/code&gt;. The value is a list, whose first element may be a symbol representing a compatibility formatting tag, such as &lt;code&gt;small&lt;/code&gt;&lt;a href=&quot;#FOOT18&quot; name=&quot;DOCF18&quot;&gt;&lt;sup&gt;18&lt;/sup&gt;&lt;/a&gt;; the other elements are characters that give the compatibility decomposition sequence of this character. For characters that don&amp;rsquo;t have decomposition sequences, and for unassigned codepoints, the value is a list with a single member, the character itself.</source>
          <target state="translated">对应于Unicode属性 &lt;code&gt;Decomposition_Type&lt;/code&gt; 和 &lt;code&gt;Decomposition_Value&lt;/code&gt; 。该值是一个列表，其第一个元件可以是表示兼容性格式化标签，例如一个符号 &lt;code&gt;small&lt;/code&gt; &lt;a href=&quot;#FOOT18&quot; name=&quot;DOCF18&quot;&gt;&lt;sup&gt;18&lt;/sup&gt;&lt;/a&gt; ;其他元素是给出该字符兼容性分解顺序的字符。对于没有分解序列的字符，对于未分配的代码点，该值是具有单个成员的列表，即字符本身。</target>
        </trans-unit>
        <trans-unit id="a9f3afecd5b11773110d68344dc0b656b9a38866" translate="yes" xml:space="preserve">
          <source>Counting Columns</source>
          <target state="translated">数列</target>
        </trans-unit>
        <trans-unit id="30106347ab7dfc885850c282c1789d99c22c045f" translate="yes" xml:space="preserve">
          <source>Coverage Testing</source>
          <target state="translated">覆盖测试</target>
        </trans-unit>
        <trans-unit id="2c8cafce14580e467bd97b418d2ec4ab69ebe1a9" translate="yes" xml:space="preserve">
          <source>Coverage testing makes execution slower, so it is only done if &lt;code&gt;edebug-test-coverage&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;. Frequency counting is performed for all executions of an instrumented function, even if the execution mode is Go-nonstop, and regardless of whether coverage testing is enabled.</source>
          <target state="translated">覆盖率测试会使执行速度变慢，因此仅在 &lt;code&gt;edebug-test-coverage&lt;/code&gt; 为非 &lt;code&gt;nil&lt;/code&gt; 时才执行。即使执行模式为不间断，并且无论是否启用覆盖测试，都会对已执行功能的所有执行执行频率计数。</target>
        </trans-unit>
        <trans-unit id="034a0e42e1d096ac2c6d69f81959f24e55f87812" translate="yes" xml:space="preserve">
          <source>Coverage testing works by comparing the result of each expression with the previous result; each form in the program is considered covered if it has returned two different values since you began testing coverage in the current Emacs session. Thus, to do coverage testing on your program, execute it under various conditions and note whether it behaves correctly; Edebug will tell you when you have tried enough different conditions that each form has returned two different values.</source>
          <target state="translated">覆盖率测试的工作原理是将每个表达式的结果与之前的结果进行比较;如果程序中的每个窗体自你在当前Emacs会话中开始测试覆盖率以来,已经返回了两个不同的值,那么它就被认为是覆盖率测试。因此,要对你的程序进行覆盖测试,在各种条件下执行它,并注意它的行为是否正确;当你已经尝试了足够多的不同条件,每个表单都返回了两个不同的值时,Edebug会告诉你。</target>
        </trans-unit>
        <trans-unit id="69aec66a0de409221ab641593c97f6a684d5c6bc" translate="yes" xml:space="preserve">
          <source>Create a gradient in &lt;var&gt;svg&lt;/var&gt; with identifier &lt;var&gt;id&lt;/var&gt;. &lt;var&gt;type&lt;/var&gt; specifies the gradient type, and can be either &lt;code&gt;linear&lt;/code&gt; or &lt;code&gt;radial&lt;/code&gt;. &lt;var&gt;stops&lt;/var&gt; is a list of percentage/color pairs.</source>
          <target state="translated">在 &lt;var&gt;svg&lt;/var&gt; 中使用标识符 &lt;var&gt;id&lt;/var&gt; 创建一个渐变。 &lt;var&gt;type&lt;/var&gt; 指定渐变类型，可以是 &lt;code&gt;linear&lt;/code&gt; 或 &lt;code&gt;radial&lt;/code&gt; 。 &lt;var&gt;stops&lt;/var&gt; 是百分比/颜色对的列表。</target>
        </trans-unit>
        <trans-unit id="5b3f8ac5dd9211371315437c84fb1a43601b5ae9" translate="yes" xml:space="preserve">
          <source>Create a new mutex and return it. If &lt;var&gt;name&lt;/var&gt; is specified, it is a name given to the mutex. It must be a string. The name is for debugging purposes only; it has no meaning to Emacs.</source>
          <target state="translated">创建一个新的互斥锁并返回它。如果 &lt;var&gt;name&lt;/var&gt; 被指定，它是给互斥体的名称。它必须是一个字符串。该名称仅用于调试目的。这对Emacs毫无意义。</target>
        </trans-unit>
        <trans-unit id="46201199d56ab2049e0ee8de7d14fc9d19354561" translate="yes" xml:space="preserve">
          <source>Create a new thread of execution which invokes &lt;var&gt;function&lt;/var&gt;. When &lt;var&gt;function&lt;/var&gt; returns, the thread exits.</source>
          <target state="translated">创建一个新的执行线程来调用 &lt;var&gt;function&lt;/var&gt; 。当 &lt;var&gt;function&lt;/var&gt; 返回时，线程退出。</target>
        </trans-unit>
        <trans-unit id="ad3bb5246587053fa90c947af204d33db68119c2" translate="yes" xml:space="preserve">
          <source>Create a new, empty SVG image with the specified dimensions. &lt;var&gt;args&lt;/var&gt; is an argument plist with you can specify following:</source>
          <target state="translated">使用指定的尺寸创建一个新的空SVG图像。 &lt;var&gt;args&lt;/var&gt; 是参数plist，可以指定以下内容：</target>
        </trans-unit>
        <trans-unit id="24a2a63f8a6c630e8a0de0f5b291f213111d7c3b" translate="yes" xml:space="preserve">
          <source>Creates a binding for each symbol used as keys the association list &lt;var&gt;alist&lt;/var&gt;, prefixed with dot. This can be useful when accessing several items in the same association list, and it&amp;rsquo;s best understood through a simple example:</source>
          <target state="translated">为每个用作关联列表 &lt;var&gt;alist&lt;/var&gt; 的键的符号创建绑定，前缀为点。当访问同一关联列表中的多个项目时，这可能很有用，最好通过一个简单的示例来理解：</target>
        </trans-unit>
        <trans-unit id="277eb1ddc0fba89d0c324aebb3ac22130fc9997c" translate="yes" xml:space="preserve">
          <source>Creating Buffers</source>
          <target state="translated">创建缓冲区</target>
        </trans-unit>
        <trans-unit id="2c02b38e7e9de104210c9e49f0084a391aafb956" translate="yes" xml:space="preserve">
          <source>Creating Frames</source>
          <target state="translated">创建框架</target>
        </trans-unit>
        <trans-unit id="71f7ccb3cbb500f4be782df338ec0c314ad93f9a" translate="yes" xml:space="preserve">
          <source>Creating Hash Tables</source>
          <target state="translated">创建哈希表</target>
        </trans-unit>
        <trans-unit id="5f26462b023172db036944232b432ae67ca6892d" translate="yes" xml:space="preserve">
          <source>Creating Keymaps</source>
          <target state="translated">创建键图</target>
        </trans-unit>
        <trans-unit id="8fd8132f6aff1f7027d01bbe93746f358b6fdcad" translate="yes" xml:space="preserve">
          <source>Creating Strings</source>
          <target state="translated">创建字符串</target>
        </trans-unit>
        <trans-unit id="3839e146cd7dafa372f25e37666c9e45bfc07b82" translate="yes" xml:space="preserve">
          <source>Creating a Synchronous Process</source>
          <target state="translated">创建一个同步的过程</target>
        </trans-unit>
        <trans-unit id="a9fa8de13d47a14f5dc8a9fef6d945c160509ca7" translate="yes" xml:space="preserve">
          <source>Creating a buffer adds it to the end of the buffer list, and killing a buffer removes it from that list. A buffer moves to the front of this list whenever it is chosen for display in a window (see &lt;a href=&quot;switching-buffers#Switching-Buffers&quot;&gt;Switching Buffers&lt;/a&gt;) or a window displaying it is selected (see &lt;a href=&quot;selecting-windows#Selecting-Windows&quot;&gt;Selecting Windows&lt;/a&gt;). A buffer moves to the end of the list when it is buried (see &lt;code&gt;bury-buffer&lt;/code&gt;, below). There are no functions available to the Lisp programmer which directly manipulate the buffer list.</source>
          <target state="translated">创建一个缓冲区会将其添加到缓冲区列表的末尾，而杀死一个缓冲区会将其从该列表中删除。只要选择将&lt;a href=&quot;switching-buffers#Switching-Buffers&quot;&gt;缓冲区&lt;/a&gt;显示在窗口中（请参阅切换缓冲区）或选择显示它的窗口（请参阅&lt;a href=&quot;selecting-windows#Selecting-Windows&quot;&gt;选择Windows&lt;/a&gt;），缓冲区就会移到此列表的前面。当缓冲区被掩埋时，其移动到列表的末尾（请参见下面的 &lt;code&gt;bury-buffer&lt;/code&gt; ）。Lisp程序员没有可用的直接操作缓冲区列表的函数。</target>
        </trans-unit>
        <trans-unit id="ed4603473f232f5f8cf861f4be491eb219aee848" translate="yes" xml:space="preserve">
          <source>Creating a new window.</source>
          <target state="translated">创建一个新窗口。</target>
        </trans-unit>
        <trans-unit id="4027485962223b6cb73023a2d88288b803b7c5e0" translate="yes" xml:space="preserve">
          <source>Creating additional frames.</source>
          <target state="translated">创建额外的框架。</target>
        </trans-unit>
        <trans-unit id="8b8559726ac2573cc58414ea6c305b7f55cf3674" translate="yes" xml:space="preserve">
          <source>Creating an Asynchronous Process</source>
          <target state="translated">创建一个异步进程</target>
        </trans-unit>
        <trans-unit id="1261a76603fc4a1361d91e79e06d6c4d50e5de64" translate="yes" xml:space="preserve">
          <source>Creating an uninterned symbol is useful in generating Lisp code, because an uninterned symbol used as a variable in the code you generate cannot clash with any variables used in other Lisp programs.</source>
          <target state="translated">创建一个未内嵌的符号在生成Lisp代码时很有用,因为在你生成的代码中作为变量使用的未内嵌符号不能与其他Lisp程序中使用的任何变量发生冲突。</target>
        </trans-unit>
        <trans-unit id="95339642e495f7c716396730a9ad5979d9c94e02" translate="yes" xml:space="preserve">
          <source>Creating and Deleting Buffer-Local Bindings</source>
          <target state="translated">创建和删除缓冲区本地绑定。</target>
        </trans-unit>
        <trans-unit id="61dee4e18a3da5d3f2a2a3f71fc5e9d08abf3d49" translate="yes" xml:space="preserve">
          <source>Creating and Deleting Directories.</source>
          <target state="translated">创建和删除目录。</target>
        </trans-unit>
        <trans-unit id="0e56e94b432c828ea0f1a0f952f774f5a2a27039" translate="yes" xml:space="preserve">
          <source>Creating and Interning Symbols</source>
          <target state="translated">创建和插入符号</target>
        </trans-unit>
        <trans-unit id="3366c9f14a827ad13843519d3bf31fb320ef81e6" translate="yes" xml:space="preserve">
          <source>Creating and Maintaining Package Archives</source>
          <target state="translated">创建和维护软件包档案</target>
        </trans-unit>
        <trans-unit id="bb1b28716d46535ac7cb7d52c53eab6d6a672af0" translate="yes" xml:space="preserve">
          <source>Creating and destroying buffer-local bindings.</source>
          <target state="translated">创建和销毁缓冲区本地绑定。</target>
        </trans-unit>
        <trans-unit id="fca2d290720fc36b3104b9c835cc4158000f397c" translate="yes" xml:space="preserve">
          <source>Creating and manipulating SVG images.</source>
          <target state="translated">创建和操作SVG图像。</target>
        </trans-unit>
        <trans-unit id="5580b9bfda3f8709ae48d10484f73a6ff460c7ae" translate="yes" xml:space="preserve">
          <source>Creating and moving overlays.</source>
          <target state="translated">创建和移动覆盖层。</target>
        </trans-unit>
        <trans-unit id="a23b9312ab8ea1c200f01c35b1671f6b2e52abfb" translate="yes" xml:space="preserve">
          <source>Creating and using buffer objects.</source>
          <target state="translated">创建和使用缓冲区对象。</target>
        </trans-unit>
        <trans-unit id="ad3fe03db6db3953a7f03ba026dd0ac7834de8ad" translate="yes" xml:space="preserve">
          <source>Creating and working with abbrev tables.</source>
          <target state="translated">创建和使用缩写表。</target>
        </trans-unit>
        <trans-unit id="209381f6a863041e32e402014141fbb4b32628db" translate="yes" xml:space="preserve">
          <source>Creating list structure.</source>
          <target state="translated">创建列表结构。</target>
        </trans-unit>
        <trans-unit id="e9f7e6299daa93dee268e83f922c93f2fb95343e" translate="yes" xml:space="preserve">
          <source>Creating, Copying and Deleting Directories</source>
          <target state="translated">创建、复制和删除目录</target>
        </trans-unit>
        <trans-unit id="de7c5e51a86d1848649313c0fb579dd4cadcdf2a" translate="yes" xml:space="preserve">
          <source>Cropping is performed after scaling but before rotation.</source>
          <target state="translated">裁剪是在缩放之后但在旋转之前进行的。</target>
        </trans-unit>
        <trans-unit id="aa967da7b29ee7cb01b2dd9632adc2e81550d83d" translate="yes" xml:space="preserve">
          <source>Cross-references to specific Lisp primitives that have a special bearing on how functions work.</source>
          <target state="translated">交叉引用对函数工作方式有特殊影响的特定Lisp基元。</target>
        </trans-unit>
        <trans-unit id="48968706e2b7937bd1eca5739cd23bd395e0bc4d" translate="yes" xml:space="preserve">
          <source>Cryptographic algorithms imported from GnuTLS.</source>
          <target state="translated">从GnuTLS导入的加密算法。</target>
        </trans-unit>
        <trans-unit id="c4cf579bb0e875b6a35dbb3791620653e8523bf7" translate="yes" xml:space="preserve">
          <source>Current index (within &lt;code&gt;bindat-raw&lt;/code&gt;) for unpacking or packing.</source>
          <target state="translated">用于拆包或打包的当前索引（在 &lt;code&gt;bindat-raw&lt;/code&gt; 内）。</target>
        </trans-unit>
        <trans-unit id="3fe8e41f672d13705e32f9f2c1cb9a4c7c7f59d2" translate="yes" xml:space="preserve">
          <source>Currently this function always returns &lt;code&gt;nil&lt;/code&gt; on platforms other than MS-DOS, MS-Windows, Cygwin, and macOS. It does not detect case-insensitivity of mounted filesystems, such as Samba shares or NFS-mounted Windows volumes. On remote hosts, it assumes &lt;code&gt;t&lt;/code&gt; for the &amp;lsquo;</source>
          <target state="translated">当前，此函数在MS-DOS，MS-Windows，Cygwin和macOS以外的平台上始终返回 &lt;code&gt;nil&lt;/code&gt; 。它不会检测已安装文件系统（例如Samba共享或已安装NFS的Windows卷）是否区分大小写。在远程主机上，它假定 &lt;code&gt;t&lt;/code&gt; 为'</target>
        </trans-unit>
        <trans-unit id="2a42d0e8ab77f37df230d1db17d31d8a1a52f967" translate="yes" xml:space="preserve">
          <source>Currently, all overlays take priority over text properties.</source>
          <target state="translated">目前,所有覆盖物都优先于文本属性。</target>
        </trans-unit>
        <trans-unit id="dafc9de4ff7c070680e5b6e3bdaa9d265ab232ff" translate="yes" xml:space="preserve">
          <source>Currently, an Emacs Lisp closure object is represented by a list with the symbol &lt;code&gt;closure&lt;/code&gt; as the first element, a list representing the lexical environment as the second element, and the argument list and body forms as the remaining elements:</source>
          <target state="translated">当前，Emacs Lisp闭包对象由以下列表表示：符号 &lt;code&gt;closure&lt;/code&gt; 作为第一个元素，列表表示词法环境作为第二个元素，参数列表和主体形式作为其余元素：</target>
        </trans-unit>
        <trans-unit id="cfbfcc573ee50e99e6dc9569b7be94b2909815b0" translate="yes" xml:space="preserve">
          <source>Currently, cons cells and strings can be allocated this way. This is implemented by C macros like &lt;code&gt;AUTO_CONS&lt;/code&gt; and &lt;code&gt;AUTO_STRING&lt;/code&gt; that define a named &lt;code&gt;Lisp_Object&lt;/code&gt; with block lifetime. These objects are not freed by the garbage collector; instead, they have automatic storage duration, i.e., they are allocated like local variables and are automatically freed at the end of execution of the C block that defined the object.</source>
          <target state="translated">当前，可以通过这种方式分配con单元格和字符串。这由C宏（如 &lt;code&gt;AUTO_CONS&lt;/code&gt; 和 &lt;code&gt;AUTO_STRING&lt;/code&gt; ）实现，这些宏定义了具有块生存期的命名 &lt;code&gt;Lisp_Object&lt;/code&gt; 。这些对象不会被垃圾收集器释放；相反，它们具有自动存储持续时间，即，它们像局部变量一样被分配，并在定义对象的C块执行结束时自动释放。</target>
        </trans-unit>
        <trans-unit id="3f843ff0b7c19358930979776eba2414b01ba368" translate="yes" xml:space="preserve">
          <source>Currently, thread switching will occur upon explicit request via &lt;code&gt;thread-yield&lt;/code&gt;, when waiting for keyboard input or for process output from asynchronous processes (e.g., during &lt;code&gt;accept-process-output&lt;/code&gt;), or during blocking operations relating to threads, such as mutex locking or &lt;code&gt;thread-join&lt;/code&gt;.</source>
          <target state="translated">当前，线程切换将在通过 &lt;code&gt;thread-yield&lt;/code&gt; 明确请求后，等待键盘输入或异步进程的进程输出时发生（例如，在 &lt;code&gt;accept-process-output&lt;/code&gt; 期间），或者在与线程有关的阻塞操作（例如互斥锁或 &lt;code&gt;thread-join&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="10d1c3df2fdc30bcf7106e9ff17d7a241172fdd0" translate="yes" xml:space="preserve">
          <source>Cursor Parameters</source>
          <target state="translated">游标参数</target>
        </trans-unit>
        <trans-unit id="74deebbf11289efb48b26fdd227d5107697b03d7" translate="yes" xml:space="preserve">
          <source>Cursor arrow keys</source>
          <target state="translated">光标方向键</target>
        </trans-unit>
        <trans-unit id="ed739cecfa0ebac41f34cb65b5e03769e7e4f689" translate="yes" xml:space="preserve">
          <source>Custom Format Strings</source>
          <target state="translated">自定义格式字符串</target>
        </trans-unit>
        <trans-unit id="e2446e02511ff322c94ba4520cc8e483f718f149" translate="yes" xml:space="preserve">
          <source>Custom Themes</source>
          <target state="translated">自定义主题</target>
        </trans-unit>
        <trans-unit id="013dd3b33912fdf447dd50a19f3d1b829ec97c8b" translate="yes" xml:space="preserve">
          <source>Custom filter functions normally should use this marker in the same fashion. For an example of a filter function that uses &lt;code&gt;process-mark&lt;/code&gt;, see &lt;a href=&quot;filter-functions#Process-Filter-Example&quot;&gt;Process Filter Example&lt;/a&gt;.</source>
          <target state="translated">自定义过滤器功能通常应以相同的方式使用此标记。有关使用 &lt;code&gt;process-mark&lt;/code&gt; 的过滤器功能的示例，请参见&lt;a href=&quot;filter-functions#Process-Filter-Example&quot;&gt;流程过滤器示例&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2d606c1a05fa86dad7f436ef50b7540789e88645" translate="yes" xml:space="preserve">
          <source>Custom group name to use in all generated &lt;code&gt;defcustom&lt;/code&gt; forms. Defaults to &lt;var&gt;mode&lt;/var&gt; without the possible trailing &amp;lsquo;</source>
          <target state="translated">在所有生成的 &lt;code&gt;defcustom&lt;/code&gt; 表单中使用的自定义组名称。默认为 &lt;var&gt;mode&lt;/var&gt; 不带尾随&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="55ad8d7e45af15be996aefbc85f6dd2f3fb1b75f" translate="yes" xml:space="preserve">
          <source>Custom printing prints this as &amp;lsquo;</source>
          <target state="translated">自定义打印将其打印为&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="d7f0ac9e007291a6ccc21d036f4711505ad9d0b1" translate="yes" xml:space="preserve">
          <source>Customization</source>
          <target state="translated">Customization</target>
        </trans-unit>
        <trans-unit id="bcc93eb9f29c14f18642692d3a4974d916477d3a" translate="yes" xml:space="preserve">
          <source>Customization Settings</source>
          <target state="translated">自定义设置</target>
        </trans-unit>
        <trans-unit id="04d44e90a5bfe15756c24a537c089f9b151e4253" translate="yes" xml:space="preserve">
          <source>Customization Types</source>
          <target state="translated">定制类型</target>
        </trans-unit>
        <trans-unit id="66d09a049d3cd2402a0a63a3a5ae832789a40747" translate="yes" xml:space="preserve">
          <source>Customization items include customizable variables, which are defined with the &lt;code&gt;defcustom&lt;/code&gt; macro; customizable faces, which are defined with &lt;code&gt;defface&lt;/code&gt; (described separately in &lt;a href=&quot;defining-faces#Defining-Faces&quot;&gt;Defining Faces&lt;/a&gt;); and &lt;em&gt;customization groups&lt;/em&gt;, defined with &lt;code&gt;defgroup&lt;/code&gt;, which act as containers for groups of related customization items.</source>
          <target state="translated">自定义项包括可自定义的变量，这些变量是通过 &lt;code&gt;defcustom&lt;/code&gt; 宏定义的；可自定义的面孔，这些面孔用 &lt;code&gt;defface&lt;/code&gt; 定义（在&lt;a href=&quot;defining-faces#Defining-Faces&quot;&gt;定义面孔&lt;/a&gt;中单独描述）；和 &lt;code&gt;defgroup&lt;/code&gt; 定义的&lt;em&gt;定制组&lt;/em&gt;，它们充当相关定制项组的容器。</target>
        </trans-unit>
        <trans-unit id="f158f616fc590fd5497d3370520813208f2e8cbb" translate="yes" xml:space="preserve">
          <source>Customization of printing.</source>
          <target state="translated">印刷的定制化。</target>
        </trans-unit>
        <trans-unit id="0273fbaa3f3273cec74c3c580d117dfcc15babaa" translate="yes" xml:space="preserve">
          <source>Customize indentation for different modes.</source>
          <target state="translated">自定义不同模式的缩进。</target>
        </trans-unit>
        <trans-unit id="9133757b897bf4b85b7c0204f975f328f274f50f" translate="yes" xml:space="preserve">
          <source>Customizing Emacs startup processing.</source>
          <target state="translated">自定义Emacs的启动处理。</target>
        </trans-unit>
        <trans-unit id="e6e84e8d84de12cd99fa06937e9f09f8732419b1" translate="yes" xml:space="preserve">
          <source>Customizing Fringe Bitmaps</source>
          <target state="translated">自定义边缘位图</target>
        </trans-unit>
        <trans-unit id="3b8ff8e11e4fb1da766a852b99e97a70cd969f4b" translate="yes" xml:space="preserve">
          <source>Customizing Indentation</source>
          <target state="translated">自定义缩进</target>
        </trans-unit>
        <trans-unit id="8fe6c6e2a1eaec91a8a78c53785092508b54fd02" translate="yes" xml:space="preserve">
          <source>Customizing Search-Based Fontification</source>
          <target state="translated">自定义基于搜索的字体化</target>
        </trans-unit>
        <trans-unit id="c7625c5baf95752cd15eace670b96b0ef771c100" translate="yes" xml:space="preserve">
          <source>Customizing case conversion.</source>
          <target state="translated">自定义案例转换。</target>
        </trans-unit>
        <trans-unit id="6167e1b2404393ec51f13b5e1cb943d05aaab259" translate="yes" xml:space="preserve">
          <source>Customizing indentation.</source>
          <target state="translated">自定义缩进。</target>
        </trans-unit>
        <trans-unit id="b9b16757037fdf9726a988523e66d3419c81b9d8" translate="yes" xml:space="preserve">
          <source>Customizing search-based fontification.</source>
          <target state="translated">自定义基于搜索的字体。</target>
        </trans-unit>
        <trans-unit id="1e002765cb015d2040010276c67c92983535e2a7" translate="yes" xml:space="preserve">
          <source>Customizing the following option can be useful to tweak the behavior of &lt;code&gt;iconify-frame&lt;/code&gt; for child frames.</source>
          <target state="translated">定制以下选项对于调整子框架的 &lt;code&gt;iconify-frame&lt;/code&gt; 行为非常有用。</target>
        </trans-unit>
        <trans-unit id="181cbd72ff07e869968695fdb944b543d5980f2c" translate="yes" xml:space="preserve">
          <source>Customizing the text that appears in the mode line.</source>
          <target state="translated">自定义模式行中出现的文字。</target>
        </trans-unit>
        <trans-unit id="8d6c2f5daf19aa75f4e1b8ab69eacea59e924210" translate="yes" xml:space="preserve">
          <source>Cyclic Ordering of Windows</source>
          <target state="translated">窗口的循环排序</target>
        </trans-unit>
        <trans-unit id="252a1026126dfb1fc5ecfb78a023c2c36117f67a" translate="yes" xml:space="preserve">
          <source>Cygwin, a POSIX layer on top of MS-Windows.</source>
          <target state="translated">Cygwin,是MS-Windows之上的POSIX层。</target>
        </trans-unit>
        <trans-unit id="50c9e8d5fc98727b4bbc93cf5d64a68db647f04f" translate="yes" xml:space="preserve">
          <source>D</source>
          <target state="translated">D</target>
        </trans-unit>
        <trans-unit id="4315dde2202a2604da2011e0d8a8b8e62ec6d78b" translate="yes" xml:space="preserve">
          <source>D-Bus error</source>
          <target state="translated">D-Bus错误</target>
        </trans-unit>
        <trans-unit id="a9918c5ba1ee56f6347be64641450486f504c362" translate="yes" xml:space="preserve">
          <source>D-Bus integration in Emacs</source>
          <target state="translated">Emacs中的D-Bus集成</target>
        </trans-unit>
        <trans-unit id="4d017cb3dcf43d965d38a31c9ad97cefabc893fb" translate="yes" xml:space="preserve">
          <source>DEL</source>
          <target state="translated">DEL</target>
        </trans-unit>
        <trans-unit id="76931684f59ea532389570ad4583cbadad055aaf" translate="yes" xml:space="preserve">
          <source>DELDEL b RET</source>
          <target state="translated">DELDEL b RET</target>
        </trans-unit>
        <trans-unit id="92ed52dada39fb200ab2f2c36819ace9cc664813" translate="yes" xml:space="preserve">
          <source>DOC</source>
          <target state="translated">DOC</target>
        </trans-unit>
        <trans-unit id="61f6f421ef32670498c220ee8ee339df076a5ad9" translate="yes" xml:space="preserve">
          <source>DOM</source>
          <target state="translated">DOM</target>
        </trans-unit>
        <trans-unit id="30e504c829201f1e519376dfee2e0e399c82484c" translate="yes" xml:space="preserve">
          <source>DOWN</source>
          <target state="translated">DOWN</target>
        </trans-unit>
        <trans-unit id="4d48a05bb7b3bc05df54390709bac5516139342d" translate="yes" xml:space="preserve">
          <source>DRINK</source>
          <target state="translated">DRINK</target>
        </trans-unit>
        <trans-unit id="f0ca804396bbe9796461f738a0814988aa612f98" translate="yes" xml:space="preserve">
          <source>Darwin (macOS).</source>
          <target state="translated">达尔文(macOS)。</target>
        </trans-unit>
        <trans-unit id="1bf4f17f9700c1701af42f2e56868d9f6d09c4f8" translate="yes" xml:space="preserve">
          <source>Dashes sufficient to fill the remainder of the mode line.</source>
          <target state="translated">破折号足以填满模式行的剩余部分。</target>
        </trans-unit>
        <trans-unit id="631198ff3ac261c2cbb21a5af8ea00d2496f294b" translate="yes" xml:space="preserve">
          <source>Data formats of buffers, windows, processes.</source>
          <target state="translated">缓冲区、窗口、进程的数据格式。</target>
        </trans-unit>
        <trans-unit id="50ae936aba35b46eaaa718954e267e219aeecaaf" translate="yes" xml:space="preserve">
          <source>Data that Edebug saves and restores.</source>
          <target state="translated">Edebug保存和恢复的数据。</target>
        </trans-unit>
        <trans-unit id="4997e39a9624907d99a90da6a24d2384e58d08fd" translate="yes" xml:space="preserve">
          <source>Data types of objects in Emacs Lisp.</source>
          <target state="translated">Emacs Lisp中对象的数据类型。</target>
        </trans-unit>
        <trans-unit id="b85bab2408f6dca03671a2bf847cad8603236cb1" translate="yes" xml:space="preserve">
          <source>Datagrams</source>
          <target state="translated">Datagrams</target>
        </trans-unit>
        <trans-unit id="2f0b899096c90841c481c3a5e4eb71228fb95299" translate="yes" xml:space="preserve">
          <source>Dealing With Compressed Data</source>
          <target state="translated">处理压缩数据</target>
        </trans-unit>
        <trans-unit id="9222d46ca1ead7a04a17a4901e8924b2e6389ad3" translate="yes" xml:space="preserve">
          <source>Dealing with compressed data.</source>
          <target state="translated">处理压缩数据。</target>
        </trans-unit>
        <trans-unit id="4333709c02ad553298735787840db205447e4bf6" translate="yes" xml:space="preserve">
          <source>Debugger Commands</source>
          <target state="translated">调试器命令</target>
        </trans-unit>
        <trans-unit id="c0a64f60f8166abad9109622cff56916eca00125" translate="yes" xml:space="preserve">
          <source>Debugger entered--Lisp error:</source>
          <target state="translated">调试器进入--Lisp错误。</target>
        </trans-unit>
        <trans-unit id="a9b76db0ab64fbc8945fc04a9db739acb3ce1d01" translate="yes" xml:space="preserve">
          <source>Debugger entered--beginning evaluation of function call form:</source>
          <target state="translated">调试器进入--开始评估函数调用形式。</target>
        </trans-unit>
        <trans-unit id="f073d56cad54541e4a8aa748d9077195459160e8" translate="yes" xml:space="preserve">
          <source>Debugger entered--entering a function:</source>
          <target state="translated">调试器进入--进入一个函数。</target>
        </trans-unit>
        <trans-unit id="bf5499780dc32f465a89033befb659618c7d1067" translate="yes" xml:space="preserve">
          <source>Debugger entered--returning value:</source>
          <target state="translated">调试器进入--返回值。</target>
        </trans-unit>
        <trans-unit id="54f3a1482d8cc5b74544c48b6b83cbf61622d549" translate="yes" xml:space="preserve">
          <source>Debugger mode is derived from Backtrace mode, which is also used to show backtraces by Edebug and ERT. (see &lt;a href=&quot;edebug#Edebug&quot;&gt;Edebug&lt;/a&gt;, and &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/ert/index.html#Top&quot;&gt;the ERT manual&lt;/a&gt; in</source>
          <target state="translated">调试器模式派生自Backtrace模式，该模式还用于显示Edebug和ERT的backtrace。（请参阅&lt;a href=&quot;edebug#Edebug&quot;&gt;Edebug&lt;/a&gt;和&lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/ert/index.html#Top&quot;&gt;ERT手册&lt;/a&gt;，网址为</target>
        </trans-unit>
        <trans-unit id="895b27c88016513d278a0ce3dc0663fae3829d58" translate="yes" xml:space="preserve">
          <source>Debugging</source>
          <target state="translated">Debugging</target>
        </trans-unit>
        <trans-unit id="9363ad24df1c66d66891ca4fe683ed560a885b51" translate="yes" xml:space="preserve">
          <source>Debugging Infinite Loops</source>
          <target state="translated">调试无限循环</target>
        </trans-unit>
        <trans-unit id="6a98ee1bca9b4b0eed13ef2f2fa4088a504a99c8" translate="yes" xml:space="preserve">
          <source>Debugging Invalid Lisp Syntax</source>
          <target state="translated">调试无效的Lisp语法</target>
        </trans-unit>
        <trans-unit id="726e1aaf22c1b68abbd6517f07544530bcb01765" translate="yes" xml:space="preserve">
          <source>Debugging Lisp Programs</source>
          <target state="translated">调试Lisp程序</target>
        </trans-unit>
        <trans-unit id="bfe30e1515e21c7d814c61937ff5dad81efd561e" translate="yes" xml:space="preserve">
          <source>Deciding what is the right indentation is controlled in Emacs by &lt;code&gt;indent-line-function&lt;/code&gt; (see &lt;a href=&quot;mode_002dspecific-indent#Mode_002dSpecific-Indent&quot;&gt;Mode-Specific Indent&lt;/a&gt;). For some modes, the &lt;em&gt;right&lt;/em&gt; indentation cannot be known reliably, typically because indentation is significant so several indentations are valid but with different meanings. In that case, the mode should set &lt;code&gt;electric-indent-inhibit&lt;/code&gt; to make sure the line is not constantly re-indented against the user&amp;rsquo;s wishes.</source>
          <target state="translated">在Emacs中，通过 &lt;code&gt;indent-line-function&lt;/code&gt; 控制正确的缩进（请参阅&lt;a href=&quot;mode_002dspecific-indent#Mode_002dSpecific-Indent&quot;&gt;&amp;ldquo;特定于模式的缩进&amp;rdquo;&lt;/a&gt;）。对于某些模式，&lt;em&gt;正确的&lt;/em&gt;缩进无法可靠地获知，通常是因为缩进很重要，所以几个缩进有效但含义不同。在这种情况下，该模式应设置 &lt;code&gt;electric-indent-inhibit&lt;/code&gt; ，以确保不会不断违反用户的意愿重新压痕线。</target>
        </trans-unit>
        <trans-unit id="e4c3a2d0cc24a4535ef91791064ffe989cbd382a" translate="yes" xml:space="preserve">
          <source>Decimal</source>
          <target state="translated">Decimal</target>
        </trans-unit>
        <trans-unit id="616d764d5561637afed958f56d1bfbce22fd65c5" translate="yes" xml:space="preserve">
          <source>Declare &lt;var&gt;expander&lt;/var&gt; to be the function to handle calls to the macro (or function) as a generalized variable, similarly to &lt;code&gt;gv-define-expander&lt;/code&gt;. &lt;var&gt;expander&lt;/var&gt; can be a symbol or it can be of the form &lt;code&gt;(lambda
(&lt;var&gt;arg&lt;/var&gt;) &lt;var&gt;body&lt;/var&gt;)&lt;/code&gt; in which case that function will additionally have access to the macro (or function)&amp;rsquo;s arguments.</source>
          <target state="translated">申报 &lt;var&gt;expander&lt;/var&gt; 成为函数来处理呼叫到宏（或功能），为广义变量，类似于 &lt;code&gt;gv-define-expander&lt;/code&gt; 。 &lt;var&gt;expander&lt;/var&gt; 可以是一个符号，也可以是 &lt;code&gt;(lambda (&lt;var&gt;arg&lt;/var&gt;) &lt;var&gt;body&lt;/var&gt;)&lt;/code&gt; 在这种情况下，该函数还可以访问宏（或函数）的参数。</target>
        </trans-unit>
        <trans-unit id="6c64b4ea540b1501e4fff4ccf3280eeb2512b3e5" translate="yes" xml:space="preserve">
          <source>Declare &lt;var&gt;group&lt;/var&gt; as a customization group containing &lt;var&gt;members&lt;/var&gt;. Do not quote the symbol &lt;var&gt;group&lt;/var&gt;. The argument &lt;var&gt;doc&lt;/var&gt; specifies the documentation string for the group.</source>
          <target state="translated">将 &lt;var&gt;group&lt;/var&gt; 声明为包含 &lt;var&gt;members&lt;/var&gt; 的自定义组。不要引用符号 &lt;var&gt;group&lt;/var&gt; 。参数 &lt;var&gt;doc&lt;/var&gt; 指定该组的文档字符串。</target>
        </trans-unit>
        <trans-unit id="93dc0980891df2b822f1fd96127880a3e5a2554a" translate="yes" xml:space="preserve">
          <source>Declare &lt;var&gt;setter&lt;/var&gt; to be the function to handle calls to the macro (or function) as a generalized variable. &lt;var&gt;setter&lt;/var&gt; can be a symbol in which case it will be passed to &lt;code&gt;gv-define-simple-setter&lt;/code&gt;, or it can be of the form &lt;code&gt;(lambda (&lt;var&gt;arg&lt;/var&gt;) &lt;var&gt;body&lt;/var&gt;)&lt;/code&gt; in which case that function will additionally have access to the macro (or function)&amp;rsquo;s arguments and it will be passed to &lt;code&gt;gv-define-setter&lt;/code&gt;.</source>
          <target state="translated">将 &lt;var&gt;setter&lt;/var&gt; 声明为处理作为通用变量对宏（或函数）的调用的函数。 &lt;var&gt;setter&lt;/var&gt; 可以是一个符号，在这种情况下，它将被传递给 &lt;code&gt;gv-define-simple-setter&lt;/code&gt; ，或者可以是 &lt;code&gt;(lambda (&lt;var&gt;arg&lt;/var&gt;) &lt;var&gt;body&lt;/var&gt;)&lt;/code&gt; 在这种情况下，该函数还可以访问宏（或函数） ）的参数，它将传递给 &lt;code&gt;gv-define-setter&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3e8682b3ce4252f53e13c377b15222e1d2639ce4" translate="yes" xml:space="preserve">
          <source>Declares that the function does not examine any values except its arguments, and has no effects except the return value. This corresponds to &lt;code&gt;__attribute__&amp;nbsp;((__const__))&lt;/code&gt; attribute of GCC.</source>
          <target state="translated">声明该函数除了其参数外不检查任何值，并且除了返回值外没有任何作用。这对应于GCC的 &lt;code&gt;__attribute__&amp;nbsp;((__const__))&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="b336e92bf3460862343639ef63e8754dc39821fa" translate="yes" xml:space="preserve">
          <source>Declares the C function as one that never returns. This corresponds to the C11 keyword &lt;code&gt;_Noreturn&lt;/code&gt; and to &lt;code&gt;__attribute__&amp;nbsp;((__noreturn__))&lt;/code&gt; attribute of GCC (see &lt;a href=&quot;http://gcc.gnu.org/onlinedocs/gcc/Function-Attributes.html#Function-Attributes&quot;&gt;Function Attributes&lt;/a&gt; in</source>
          <target state="translated">声明C函数为永不返回的函数。这对应于C11的关键字 &lt;code&gt;_Noreturn&lt;/code&gt; 并 &lt;code&gt;__attribute__&amp;nbsp;((__noreturn__))&lt;/code&gt; GCC的属性（参见&lt;a href=&quot;http://gcc.gnu.org/onlinedocs/gcc/Function-Attributes.html#Function-Attributes&quot;&gt;函数属性&lt;/a&gt;在</target>
        </trans-unit>
        <trans-unit id="4b609e829b1f39ffc7abb135201be1d26a824a42" translate="yes" xml:space="preserve">
          <source>Declaring Functions Obsolete</source>
          <target state="translated">宣布函数过时</target>
        </trans-unit>
        <trans-unit id="a375d846fc99b76d44be77afcfaff8bf8fd721a2" translate="yes" xml:space="preserve">
          <source>Declaring functions obsolete.</source>
          <target state="translated">宣布职能过时。</target>
        </trans-unit>
        <trans-unit id="fd886d70ed04c5c9788bb139145ee56af83bb0fe" translate="yes" xml:space="preserve">
          <source>Declaring user options.</source>
          <target state="translated">宣布用户选项。</target>
        </trans-unit>
        <trans-unit id="4d455d362355b88934a8cb03f2e247e4d1f10901" translate="yes" xml:space="preserve">
          <source>Decoding Process Output</source>
          <target state="translated">解码过程输出</target>
        </trans-unit>
        <trans-unit id="b2b02f50b54ccd59dc2cf7dfe6610c6847df18aa" translate="yes" xml:space="preserve">
          <source>Decomposing and expanding file names.</source>
          <target state="translated">分解和扩展文件名。</target>
        </trans-unit>
        <trans-unit id="e2e79c379d627abc7011d97113a7c147d232dd53" translate="yes" xml:space="preserve">
          <source>Decrease the image size (&lt;code&gt;image-increase-size&lt;/code&gt;). A prefix value of &amp;lsquo;</source>
          <target state="translated">减小图像尺寸（ &lt;code&gt;image-increase-size&lt;/code&gt; ）。前缀值&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="1cd4322e0025edba9da289684f149b4c88fb0346" translate="yes" xml:space="preserve">
          <source>Dedicated Windows</source>
          <target state="translated">专用窗口</target>
        </trans-unit>
        <trans-unit id="5a483a6aba48b5541acb455b768e2987adbced73" translate="yes" xml:space="preserve">
          <source>Default Coding Systems</source>
          <target state="translated">默认编码系统</target>
        </trans-unit>
        <trans-unit id="e3eebbc3d88852fe95fdf7f8a075da219b54f51a" translate="yes" xml:space="preserve">
          <source>Deferred JSONRPC requests</source>
          <target state="translated">推迟的JSONRPC请求</target>
        </trans-unit>
        <trans-unit id="cc7ec807d125f40ab7dbc746bf04f29da7b789cd" translate="yes" xml:space="preserve">
          <source>Deferred and Lazy Evaluation</source>
          <target state="translated">推迟评价和懒惰评价</target>
        </trans-unit>
        <trans-unit id="2cd8ae6b3014d472223013f1bed99c90d62f589c" translate="yes" xml:space="preserve">
          <source>Deferred and lazy evaluation of forms.</source>
          <target state="translated">推迟和懒惰的评价形式。</target>
        </trans-unit>
        <trans-unit id="92d4c684ce53e874b5d2de26c404f0fab45054c3" translate="yes" xml:space="preserve">
          <source>Deferring a warning until the end of a command.</source>
          <target state="translated">将警告推迟到命令结束。</target>
        </trans-unit>
        <trans-unit id="f26ce47f3889f4005fbb26c94472b19840db383f" translate="yes" xml:space="preserve">
          <source>Define &lt;var&gt;name&lt;/var&gt; globally in all subsequent calls to &lt;code&gt;rx&lt;/code&gt; and &lt;code&gt;rx-to-string&lt;/code&gt;. If &lt;var&gt;arglist&lt;/var&gt; is absent, then &lt;var&gt;name&lt;/var&gt; is defined as a plain symbol to be replaced with &lt;var&gt;rx-form&lt;/var&gt;. Example:</source>
          <target state="translated">在随后的所有对 &lt;code&gt;rx&lt;/code&gt; 和 &lt;code&gt;rx-to-string&lt;/code&gt; 的调用中全局定义 &lt;var&gt;name&lt;/var&gt; 。如果不存在 &lt;var&gt;arglist&lt;/var&gt; ，则将 &lt;var&gt;name&lt;/var&gt; 定义为要用 &lt;var&gt;rx-form&lt;/var&gt; 替换的纯符号。例：</target>
        </trans-unit>
        <trans-unit id="6fad15fa907f8937eb3d4b5845880363fd13b197" translate="yes" xml:space="preserve">
          <source>Define a binding in &lt;var&gt;map&lt;/var&gt; for &lt;var&gt;key&lt;/var&gt;, with value &lt;var&gt;binding&lt;/var&gt;, just like &lt;code&gt;define-key&lt;/code&gt;, but position the binding in &lt;var&gt;map&lt;/var&gt; after the binding for the event &lt;var&gt;after&lt;/var&gt;. The argument &lt;var&gt;key&lt;/var&gt; should be of length one&amp;mdash;a vector or string with just one element. But &lt;var&gt;after&lt;/var&gt; should be a single event type&amp;mdash;a symbol or a character, not a sequence. The new binding goes after the binding for &lt;var&gt;after&lt;/var&gt;. If &lt;var&gt;after&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt; or is omitted, then the new binding goes last, at the end of the keymap. However, new bindings are added before any inherited keymap.</source>
          <target state="translated">定义在绑定 &lt;var&gt;map&lt;/var&gt; 为 &lt;var&gt;key&lt;/var&gt; ，以价值 &lt;var&gt;binding&lt;/var&gt; ，就像 &lt;code&gt;define-key&lt;/code&gt; ，但在位置上的结合 &lt;var&gt;map&lt;/var&gt; 的事件后绑定 &lt;var&gt;after&lt;/var&gt; 。参数 &lt;var&gt;key&lt;/var&gt; 的长度应为一，即只有一个元素的向量或字符串。但是 &lt;var&gt;after&lt;/var&gt; 应该是单个事件类型-符号或字符，而不是序列。新绑定在after &lt;var&gt;after&lt;/var&gt; 。如果 &lt;var&gt;after&lt;/var&gt; 是 &lt;code&gt;t&lt;/code&gt; 或被省略，则新绑定在键盘映射的末尾进行到最后。但是，新的绑定被添加到任何继承的键映射之前。</target>
        </trans-unit>
        <trans-unit id="4b1d82600c3cc9aee41275ec0422f841061671f0" translate="yes" xml:space="preserve">
          <source>Define a button type called &lt;var&gt;name&lt;/var&gt; (a symbol). The remaining arguments form a sequence of &lt;var&gt;property value&lt;/var&gt; pairs, specifying default property values for buttons with this type (a button&amp;rsquo;s type may be set by giving it a &lt;code&gt;type&lt;/code&gt; property when creating the button, using the &lt;code&gt;:type&lt;/code&gt; keyword argument).</source>
          <target state="translated">定义一个称为 &lt;var&gt;name&lt;/var&gt; （符号）的按钮类型。其余参数组成一系列 &lt;var&gt;property value&lt;/var&gt; 对，为该类型的按钮指定默认属性值（可以在创建按钮时使用 &lt;code&gt;:type&lt;/code&gt; 关键字参数为它提供 &lt;code&gt;type&lt;/code&gt; 属性来设置按钮的类型）。</target>
        </trans-unit>
        <trans-unit id="40167d6bc75d81da324841a63bc228382c899eda" translate="yes" xml:space="preserve">
          <source>Define a command, called the &lt;em&gt;mode command&lt;/em&gt;, whose name is the same as the mode variable. Its job is to set the value of the mode variable, plus anything else that needs to be done to actually enable or disable the mode&amp;rsquo;s features.</source>
          <target state="translated">定义一个名为&lt;em&gt;mode command的命令&lt;/em&gt;，其名称与mode变量相同。它的工作是设置模式变量的值，以及实际启用或禁用模式功能所需的其他任何操作。</target>
        </trans-unit>
        <trans-unit id="5b3911ba258c45d951eb09ce327d6327600f97cd" translate="yes" xml:space="preserve">
          <source>Define a function &lt;var&gt;name&lt;/var&gt; by providing code that does its inlining, as a compiler macro. The function will accept the argument list &lt;var&gt;args&lt;/var&gt; and will have the specified &lt;var&gt;body&lt;/var&gt;.</source>
          <target state="translated">通过提供内联代码作为编译器宏来定义函数 &lt;var&gt;name&lt;/var&gt; 。该函数将接受参数列表 &lt;var&gt;args&lt;/var&gt; 并具有指定的 &lt;var&gt;body&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="06f0c3b54279790f6e4e6152945d1960f89d6232" translate="yes" xml:space="preserve">
          <source>Define a major mode command whose name ends in &amp;lsquo;</source>
          <target state="translated">定义主模式命令，其名称以'</target>
        </trans-unit>
        <trans-unit id="e16a251b7cb568a2f64599e49c10e2623b9cdf87" translate="yes" xml:space="preserve">
          <source>Define a new kind of pattern for &lt;code&gt;pcase&lt;/code&gt;, to be invoked as &lt;code&gt;(&lt;var&gt;name&lt;/var&gt;&amp;nbsp;&lt;var&gt;actual-args&lt;/var&gt;)&lt;/code&gt;. The &lt;code&gt;pcase&lt;/code&gt; macro expands this into a function call that evaluates &lt;var&gt;body&lt;/var&gt;, whose job it is to rewrite the invoked pattern into some other pattern, in an environment where &lt;var&gt;args&lt;/var&gt; are bound to &lt;var&gt;actual-args&lt;/var&gt;.</source>
          <target state="translated">为 &lt;code&gt;pcase&lt;/code&gt; 定义一种新的模式，将其作为 &lt;code&gt;(&lt;var&gt;name&lt;/var&gt;&amp;nbsp;&lt;var&gt;actual-args&lt;/var&gt;)&lt;/code&gt; 为real -args）调用。该 &lt;code&gt;pcase&lt;/code&gt; 宏扩展到一个函数调用，评估这个 &lt;var&gt;body&lt;/var&gt; ，他们的工作是给被调用的模式改写成一些其他的方式，在环境 &lt;var&gt;args&lt;/var&gt; 绑定到 &lt;var&gt;actual-args&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="c7a3a63ede7ee673b32fdb44c5efdf420fddea4b" translate="yes" xml:space="preserve">
          <source>Define a variable whose name ends in &amp;lsquo;</source>
          <target state="translated">定义一个名称以'结尾的变量</target>
        </trans-unit>
        <trans-unit id="01ca4f537e5b6fb350a73139e92b5826fbc1da1d" translate="yes" xml:space="preserve">
          <source>Define new kinds of patterns.</source>
          <target state="translated">定义新的模式种类。</target>
        </trans-unit>
        <trans-unit id="1574d39ddc8e97a226a1d8cb06e78fe895d7df3d" translate="yes" xml:space="preserve">
          <source>Define the new command &lt;var&gt;command&lt;/var&gt;, a symbol.</source>
          <target state="translated">定义新的命令 &lt;var&gt;command&lt;/var&gt; ，一个符号。</target>
        </trans-unit>
        <trans-unit id="d947a410a3371bc8d9bcbdae25bcb129e5f909f2" translate="yes" xml:space="preserve">
          <source>Defining Abbrevs</source>
          <target state="translated">定义缩略语</target>
        </trans-unit>
        <trans-unit id="fb0f647aaf1c6151a3d8cc3a0531968f69b015f7" translate="yes" xml:space="preserve">
          <source>Defining Clickable Text</source>
          <target state="translated">定义可点击文本</target>
        </trans-unit>
        <trans-unit id="0661364f5b88cee9a3e7cd671d05954e0b7e065d" translate="yes" xml:space="preserve">
          <source>Defining Commands</source>
          <target state="translated">定义命令</target>
        </trans-unit>
        <trans-unit id="7c35f8d83deab0145be4d48cda7ab6061b2c0234" translate="yes" xml:space="preserve">
          <source>Defining Customization Groups</source>
          <target state="translated">定义自定义组</target>
        </trans-unit>
        <trans-unit id="232e9aae78dd4b2f5ac2885b864565c9a87aaf08" translate="yes" xml:space="preserve">
          <source>Defining Customization Variables</source>
          <target state="translated">定义自定义变量</target>
        </trans-unit>
        <trans-unit id="eeaff52266db8975b3467e8a2a23c862ea813694" translate="yes" xml:space="preserve">
          <source>Defining Derived Modes</source>
          <target state="translated">定义派生模式</target>
        </trans-unit>
        <trans-unit id="7bff63f6c40a05f614743732fca3a8cd3f3ec60a" translate="yes" xml:space="preserve">
          <source>Defining Faces</source>
          <target state="translated">定义面孔</target>
        </trans-unit>
        <trans-unit id="292f60f275382399afa74120ffd27ed50a5e4820" translate="yes" xml:space="preserve">
          <source>Defining Functions</source>
          <target state="translated">定义功能</target>
        </trans-unit>
        <trans-unit id="bc0e5190c63d7638fea7ab22527e8a9bcd6b61d6" translate="yes" xml:space="preserve">
          <source>Defining Global Variables</source>
          <target state="translated">定义全局变量</target>
        </trans-unit>
        <trans-unit id="03b551717b801c85b3f4c6202703e2b7a5f1f132" translate="yes" xml:space="preserve">
          <source>Defining Hash Comparisons</source>
          <target state="translated">定义哈希比较</target>
        </trans-unit>
        <trans-unit id="000c827897d0c5b6e4b0eef1c26dfd57794fc942" translate="yes" xml:space="preserve">
          <source>Defining Images</source>
          <target state="translated">定义图像</target>
        </trans-unit>
        <trans-unit id="c2a9a9049467f076ecc786d8c892846d3e4bdabb" translate="yes" xml:space="preserve">
          <source>Defining Macros</source>
          <target state="translated">定义宏</target>
        </trans-unit>
        <trans-unit id="e5bf67f2d84551bb8f01ded936cad84409218c3c" translate="yes" xml:space="preserve">
          <source>Defining Menus</source>
          <target state="translated">定义菜单</target>
        </trans-unit>
        <trans-unit id="59a219c45d072199c8cf96321b2e41f7b334385b" translate="yes" xml:space="preserve">
          <source>Defining Minor Modes</source>
          <target state="translated">定义小模式</target>
        </trans-unit>
        <trans-unit id="b15f26fbaadf18dcb334990b69565e7609240b4c" translate="yes" xml:space="preserve">
          <source>Defining New Types</source>
          <target state="translated">定义新类型</target>
        </trans-unit>
        <trans-unit id="0f7b06b40ef169c929f2853c1200f8f3430628ef" translate="yes" xml:space="preserve">
          <source>Defining Symbols</source>
          <target state="translated">符号的定义</target>
        </trans-unit>
        <trans-unit id="2f418b59c5b1b8f56416efc3410b0257fca96303" translate="yes" xml:space="preserve">
          <source>Defining Tokens</source>
          <target state="translated">定义代币</target>
        </trans-unit>
        <trans-unit id="3abc8dcee838071e573dcb4a9454e62238167b14" translate="yes" xml:space="preserve">
          <source>Defining a key with a keymap as its definition.</source>
          <target state="translated">定义一个键,用一个键图作为其定义。</target>
        </trans-unit>
        <trans-unit id="0901120335c1f000be7be9cecb5d0a1f67da5d4a" translate="yes" xml:space="preserve">
          <source>Defining a menu as a keymap.</source>
          <target state="translated">将菜单定义为键盘图。</target>
        </trans-unit>
        <trans-unit id="26d8feb75af6af38c5e291bf31271aaede12f926" translate="yes" xml:space="preserve">
          <source>Defining a new major mode based on another major mode.</source>
          <target state="translated">在另一个主要模式的基础上定义一个新的主要模式。</target>
        </trans-unit>
        <trans-unit id="abdd847a979898a997ef153e5a841805a67b7bb3" translate="yes" xml:space="preserve">
          <source>Defining a simple major mode that supports comment syntax and Font Lock mode.</source>
          <target state="translated">定义一个简单的主要模式,支持注释语法和字体锁定模式。</target>
        </trans-unit>
        <trans-unit id="1e83a8d776e89dbaa702f43a2a87e0bcbcc39b77" translate="yes" xml:space="preserve">
          <source>Defining and Using Fields</source>
          <target state="translated">定义和使用字段</target>
        </trans-unit>
        <trans-unit id="2c3ae13ba1844e079bcb228d7b919681c8fae1ae" translate="yes" xml:space="preserve">
          <source>Defining colors for text terminals.</source>
          <target state="translated">定义文本终端的颜色。</target>
        </trans-unit>
        <trans-unit id="73bb06852e2bf62b0d26902251c5dac71e5909b8" translate="yes" xml:space="preserve">
          <source>Defining common properties for classes of buttons.</source>
          <target state="translated">定义按钮类的通用属性。</target>
        </trans-unit>
        <trans-unit id="73d463c28d160c1407c4e5c8e8ef936cb007fee1" translate="yes" xml:space="preserve">
          <source>Defining functions is only half the battle. Functions don&amp;rsquo;t do anything until you &lt;em&gt;call&lt;/em&gt; them, i.e., tell them to run. Calling a function is also known as &lt;em&gt;invocation&lt;/em&gt;.</source>
          <target state="translated">定义功能只是成功的一半。在&lt;em&gt;调用&lt;/em&gt;它们之前，函数不会执行任何操作，即，告诉它们运行。调用函数也称为&lt;em&gt;调用&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="317d7bd642eb54915fafa1af942eb40ec6668e2f" translate="yes" xml:space="preserve">
          <source>Defining major and minor modes.</source>
          <target state="translated">定义大调和小调。</target>
        </trans-unit>
        <trans-unit id="ff9e6e8dd045f31bfac0b50386d6eacde1449ac5" translate="yes" xml:space="preserve">
          <source>Defining major modes.</source>
          <target state="translated">界定主要模式;</target>
        </trans-unit>
        <trans-unit id="32c208be973e8ee73a4d6c479be6f77dbbea7599" translate="yes" xml:space="preserve">
          <source>Defining minor modes.</source>
          <target state="translated">定义小模式;</target>
        </trans-unit>
        <trans-unit id="053f76a94a47848425eceba36ae62313c8e1893a" translate="yes" xml:space="preserve">
          <source>Defining new &lt;code&gt;setf&lt;/code&gt; forms.</source>
          <target state="translated">定义新的 &lt;code&gt;setf&lt;/code&gt; 形式。</target>
        </trans-unit>
        <trans-unit id="8bb8263cb8ca1234c412facf2dd284a3ddfe6b94" translate="yes" xml:space="preserve">
          <source>Defining new comparison methods.</source>
          <target state="translated">定义新的比较方法;</target>
        </trans-unit>
        <trans-unit id="6d124bbc995169c620bc969c66d38fb19b27dc20" translate="yes" xml:space="preserve">
          <source>Defining new rx forms</source>
          <target state="translated">定义新的处方表</target>
        </trans-unit>
        <trans-unit id="240c94f74ab9403d09f880074823add14683f43f" translate="yes" xml:space="preserve">
          <source>Defining new setf forms</source>
          <target state="translated">定义新的组合形式</target>
        </trans-unit>
        <trans-unit id="e74b5b45842a0eaf14e722af5da9ce5867a48e56" translate="yes" xml:space="preserve">
          <source>Defining the C function is not enough to make a Lisp primitive available; you must also create the Lisp symbol for the primitive and store a suitable subr object in its function cell. The code looks like this:</source>
          <target state="translated">定义C函数还不足以使Lisp基元可用;你还必须为基元创建Lisp符号,并在其函数单元中存储一个合适的subr对象。代码是这样的。</target>
        </trans-unit>
        <trans-unit id="42a5940f21524c5d855701d113ae535587f2a106" translate="yes" xml:space="preserve">
          <source>Defining the Grammar of a Language</source>
          <target state="translated">定义语言的语法</target>
        </trans-unit>
        <trans-unit id="06b1845ee9ca1e4314da4b6aa865902c7731874a" translate="yes" xml:space="preserve">
          <source>Defining the bindings from keys to commands.</source>
          <target state="translated">定义从键到命令的绑定。</target>
        </trans-unit>
        <trans-unit id="f9bc3c657d25c81feff59acde906446fdef4d273" translate="yes" xml:space="preserve">
          <source>Defining the grammar of a language.</source>
          <target state="translated">界定语言的语法。</target>
        </trans-unit>
        <trans-unit id="42549b967cdc3393d086adbccdc54df809c825f7" translate="yes" xml:space="preserve">
          <source>Defining tokens.</source>
          <target state="translated">界定代币。</target>
        </trans-unit>
        <trans-unit id="ef3448568dd44c9a23e447d204244b2e72e70d35" translate="yes" xml:space="preserve">
          <source>Definitions are only ever expanded in calls to &lt;code&gt;rx&lt;/code&gt; or &lt;code&gt;rx-to-string&lt;/code&gt;, not merely by their presence in definition macros. This means that the order of definitions doesn&amp;rsquo;t matter, even when they refer to each other, and that syntax errors only show up when they are used, not when they are defined.</source>
          <target state="translated">仅在对 &lt;code&gt;rx&lt;/code&gt; 或 &lt;code&gt;rx-to-string&lt;/code&gt; 的调用中扩展定义，而不仅仅是通过它们在定义宏中的存在。这意味着定义的顺序无关紧要，即使它们相互引用，语法错误也只会在使用它们时出现，而不是在定义时出现。</target>
        </trans-unit>
        <trans-unit id="af5436e69b505fd2783852e4aefc09a338f20d4b" translate="yes" xml:space="preserve">
          <source>Definitions cannot refer to themselves recursively, directly or indirectly. If you find yourself needing this, you want a parser, not a regular expression.</source>
          <target state="translated">定义不能直接或间接地递归引用自己。如果你发现自己需要这样做,你需要的是一个解析器,而不是一个正则表达式。</target>
        </trans-unit>
        <trans-unit id="1468ec6f048a54dbe9848cc6b4971f03da666f36" translate="yes" xml:space="preserve">
          <source>Definitions for function or function-like objects:</source>
          <target state="translated">函数或类函数对象的定义。</target>
        </trans-unit>
        <trans-unit id="39ff38f9a26ba412c27b7fa09a0ae2e4b1c285c3" translate="yes" xml:space="preserve">
          <source>Definitions for major or minor modes:</source>
          <target state="translated">大调或小调的定义。</target>
        </trans-unit>
        <trans-unit id="8539590274bfed06ceaa124d0697f7c508ef6b3d" translate="yes" xml:space="preserve">
          <source>Delayed Warnings</source>
          <target state="translated">延迟警告</target>
        </trans-unit>
        <trans-unit id="33506acc2b6e3057377ee7ce9aa2112679ab203e" translate="yes" xml:space="preserve">
          <source>Delete the evaluation list group that point is in (&lt;code&gt;edebug-delete-eval-item&lt;/code&gt;).</source>
          <target state="translated">删除该点所在的评估列表组（ &lt;code&gt;edebug-delete-eval-item&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="2c209d5ef4d9d2316618eb4350c4aaeaf66d3855" translate="yes" xml:space="preserve">
          <source>Delete the text being considered, then enter a recursive edit to replace it.</source>
          <target state="translated">删除正在考虑的文本,然后输入递归编辑来替换它。</target>
        </trans-unit>
        <trans-unit id="328ae7db6f0cdc1f73590ba17d06208643351e45" translate="yes" xml:space="preserve">
          <source>Delete trailing whitespace in the region defined by &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;.</source>
          <target state="translated">删除由 &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 定义的区域中的尾随空格。</target>
        </trans-unit>
        <trans-unit id="b301b11eca946d28ce0a0e1c3965ac29e3909864" translate="yes" xml:space="preserve">
          <source>Deleting &lt;var&gt;W4&lt;/var&gt; will now give its entire space to &lt;var&gt;W2&lt;/var&gt;, including the space earlier stolen from &lt;var&gt;W3&lt;/var&gt;.</source>
          <target state="translated">现在，删除 &lt;var&gt;W4&lt;/var&gt; 会将其整个空间分配给 &lt;var&gt;W2&lt;/var&gt; ，包括之前从 &lt;var&gt;W3&lt;/var&gt; 窃取的空间。</target>
        </trans-unit>
        <trans-unit id="78a7f9b3c271968026af0d83330e2d766542b71f" translate="yes" xml:space="preserve">
          <source>Deleting &lt;var&gt;W5&lt;/var&gt; in this configuration normally causes the deletion of &lt;var&gt;W3&lt;/var&gt; and &lt;var&gt;W4&lt;/var&gt;. The remaining live windows &lt;var&gt;W2&lt;/var&gt;, &lt;var&gt;W6&lt;/var&gt; and &lt;var&gt;W7&lt;/var&gt; are recombined to form a new horizontal combination with parent &lt;var&gt;W1&lt;/var&gt;.</source>
          <target state="translated">在此配置中删除 &lt;var&gt;W5&lt;/var&gt; 通常会导致删除 &lt;var&gt;W3&lt;/var&gt; 和 &lt;var&gt;W4&lt;/var&gt; 。剩余的活动窗口 &lt;var&gt;W2&lt;/var&gt; ， &lt;var&gt;W6&lt;/var&gt; 和 &lt;var&gt;W7&lt;/var&gt; 与父级 &lt;var&gt;W1&lt;/var&gt; 重新组合以形成新的水平组合。</target>
        </trans-unit>
        <trans-unit id="c8eccf74b5945265cce74f8809394c77a0d31816" translate="yes" xml:space="preserve">
          <source>Deleting Frames</source>
          <target state="translated">删除帧</target>
        </trans-unit>
        <trans-unit id="99dcf64770c9acd686156d3b51eeda7dde2d6fd1" translate="yes" xml:space="preserve">
          <source>Deleting Processes</source>
          <target state="translated">删除流程</target>
        </trans-unit>
        <trans-unit id="5feae627d15073e8528a3710a456813ffe57f315" translate="yes" xml:space="preserve">
          <source>Deleting Text</source>
          <target state="translated">删除文本</target>
        </trans-unit>
        <trans-unit id="1f3a4086749ac4842b2c9324dbd9ad8aafdb0f44" translate="yes" xml:space="preserve">
          <source>Deleting Windows</source>
          <target state="translated">删除Windows</target>
        </trans-unit>
        <trans-unit id="a9028f6761bbea4bdc8df0b6147be4b6f7a80b11" translate="yes" xml:space="preserve">
          <source>Deleting any of the live windows &lt;var&gt;W2&lt;/var&gt;, &lt;var&gt;W3&lt;/var&gt; or &lt;var&gt;W4&lt;/var&gt; will distribute its space proportionally among the two remaining live windows.</source>
          <target state="translated">删除活动窗口 &lt;var&gt;W2&lt;/var&gt; ， &lt;var&gt;W3&lt;/var&gt; 或 &lt;var&gt;W4&lt;/var&gt; 中的任何一个将在其余两个活动窗口之间按比例分配其空间。</target>
        </trans-unit>
        <trans-unit id="f83b450eb4436635bf01fc73e0760925d5090f53" translate="yes" xml:space="preserve">
          <source>Deleting text around a marker&amp;rsquo;s position leaves the marker between the characters immediately before and after the deleted text. Inserting text at the position of a marker normally leaves the marker either in front of or after the new text, depending on the marker&amp;rsquo;s &lt;em&gt;insertion type&lt;/em&gt; (see &lt;a href=&quot;marker-insertion-types#Marker-Insertion-Types&quot;&gt;Marker Insertion Types&lt;/a&gt;)&amp;mdash;unless the insertion is done with &lt;code&gt;insert-before-markers&lt;/code&gt; (see &lt;a href=&quot;insertion#Insertion&quot;&gt;Insertion&lt;/a&gt;).</source>
          <target state="translated">删除标记位置周围的文本会在标记之前和之后的字符之间留下标记。通常，根据标记的&lt;em&gt;插入类型&lt;/em&gt;（请参见&lt;a href=&quot;marker-insertion-types#Marker-Insertion-Types&quot;&gt;标记插入类型&lt;/a&gt;），在标记的位置插入文本通常会将标记留在新文本的前面或后面（除非使用 &lt;code&gt;insert-before-markers&lt;/code&gt; &lt;a href=&quot;insertion#Insertion&quot;&gt;插入&lt;/a&gt;（请参见插入）完成插入操作） 。</target>
        </trans-unit>
        <trans-unit id="ec6ad6e40114c37a9cc3eb2b4970c4e1ca689728" translate="yes" xml:space="preserve">
          <source>Deletion means removing part of the text in a buffer, without saving it in the kill ring (see &lt;a href=&quot;the-kill-ring#The-Kill-Ring&quot;&gt;The Kill Ring&lt;/a&gt;). Deleted text can&amp;rsquo;t be yanked, but can be reinserted using the undo mechanism (see &lt;a href=&quot;undo#Undo&quot;&gt;Undo&lt;/a&gt;). Some deletion functions do save text in the kill ring in some special cases.</source>
          <target state="translated">删除意味着将部分文本删除到缓冲区中，而不将其保存在kill ring中（请参阅&lt;a href=&quot;the-kill-ring#The-Kill-Ring&quot;&gt;Kill Ring&lt;/a&gt;）。不能删除已删除的文本，但可以使用撤消机制将其重新插入（请参阅&lt;a href=&quot;undo#Undo&quot;&gt;Undo&lt;/a&gt;）。在某些特殊情况下，某些删除功能会将文本保存在kill环中。</target>
        </trans-unit>
        <trans-unit id="d3b86785daadf87cba63ca84f94340f90c737f61" translate="yes" xml:space="preserve">
          <source>Denotes a slot at the specified side where to locate the window. A value of zero means to preferably position the window in the middle of the specified side. A negative value means to use a slot preceding (that is, above or on the left of) the middle slot. A positive value means to use a slot following (that is, below or on the right of) the middle slot. Hence, all windows on a specific side are ordered by their &lt;code&gt;slot&lt;/code&gt; value. If unspecified, the window is located in the middle of the specified side.</source>
          <target state="translated">表示在指定侧的窗口所在位置的插槽。零值表示最好将窗口定位在指定边的中间。负值表示使用中间插槽之前（即上方或左侧）的插槽。正值表示在中间插槽之后（即下方或右侧）使用插槽。因此，特定侧上的所有窗口均按其 &lt;code&gt;slot&lt;/code&gt; 值排序。如果未指定，则窗口位于指定侧面的中间。</target>
        </trans-unit>
        <trans-unit id="fea14be7ae615af9a8c515c8681c4d2bbaccfb4d" translate="yes" xml:space="preserve">
          <source>Denotes the side of the frame where the window shall be located. Valid values are &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt; and &lt;code&gt;bottom&lt;/code&gt;. If unspecified, the window is located at the bottom of the frame.</source>
          <target state="translated">表示窗口应位于框架的一侧。有效值为 &lt;code&gt;left&lt;/code&gt; ， &lt;code&gt;top&lt;/code&gt; ， &lt;code&gt;right&lt;/code&gt; 和 &lt;code&gt;bottom&lt;/code&gt; 。如果未指定，则窗口位于框架的底部。</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">Dependencies</target>
        </trans-unit>
        <trans-unit id="bedd6011ba9ecc5156948ffb0990ae535f37d142" translate="yes" xml:space="preserve">
          <source>Depending on &lt;var&gt;operation&lt;/var&gt;, this function looks up the target in &lt;code&gt;file-coding-system-alist&lt;/code&gt;, &lt;code&gt;process-coding-system-alist&lt;/code&gt;, or &lt;code&gt;network-coding-system-alist&lt;/code&gt;. If the target is found in the alist, &lt;code&gt;find-operation-coding-system&lt;/code&gt; returns its association in the alist; otherwise it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">根据 &lt;var&gt;operation&lt;/var&gt; ，此功能可以在 &lt;code&gt;file-coding-system-alist&lt;/code&gt; ， &lt;code&gt;process-coding-system-alist&lt;/code&gt; 或 &lt;code&gt;network-coding-system-alist&lt;/code&gt; 中查找目标。如果在列表中找到目标，则 &lt;code&gt;find-operation-coding-system&lt;/code&gt; 返回在列表中的关联；否则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="06bc8bb4606ec5215c88b84e064499d7145434d9" translate="yes" xml:space="preserve">
          <source>Depending on the capabilities of Emacs, how asynchronous &lt;code&gt;:nowait&lt;/code&gt; is may vary. The three elements that may (or may not) be done asynchronously are domain name resolution, socket setup, and (for TLS connections) TLS negotiation.</source>
          <target state="translated">取决于Emacs的功能，异步 &lt;code&gt;:nowait&lt;/code&gt; 的方式可能有所不同。可以（或可以不）异步完成的三个元素是域名解析，套接字设置和（对于TLS连接）TLS协商。</target>
        </trans-unit>
        <trans-unit id="dc188ba509d11146070cddaf5c2e2c230695ec89" translate="yes" xml:space="preserve">
          <source>Depending on the implementation of the file name handler, it might not be possible to apply &lt;code&gt;process-filter&lt;/code&gt; or &lt;code&gt;process-sentinel&lt;/code&gt; to the resulting process object. See &lt;a href=&quot;filter-functions#Filter-Functions&quot;&gt;Filter Functions&lt;/a&gt;, and &lt;a href=&quot;sentinels#Sentinels&quot;&gt;Sentinels&lt;/a&gt;.</source>
          <target state="translated">根据文件名处理程序的实现，可能无法将 &lt;code&gt;process-filter&lt;/code&gt; 或 &lt;code&gt;process-sentinel&lt;/code&gt; 应用于生成的流程对象。请参阅&lt;a href=&quot;filter-functions#Filter-Functions&quot;&gt;过滤器功能&lt;/a&gt;和&lt;a href=&quot;sentinels#Sentinels&quot;&gt;哨兵&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f9a60ac53d061f9d8873dd95c1dfb41d008557b5" translate="yes" xml:space="preserve">
          <source>Depending on the implementation of the file name handler, it might not be possible to apply &lt;var&gt;filter&lt;/var&gt; or &lt;var&gt;sentinel&lt;/var&gt; to the resulting process object. The &lt;code&gt;:stderr&lt;/code&gt; argument cannot be a pipe process, file name handlers do not support pipe processes for this. A buffer as &lt;code&gt;:stderr&lt;/code&gt; argument is accepted, its contents is shown without the use of pipe processes. See &lt;a href=&quot;filter-functions#Filter-Functions&quot;&gt;Filter Functions&lt;/a&gt;, &lt;a href=&quot;sentinels#Sentinels&quot;&gt;Sentinels&lt;/a&gt;, and &lt;a href=&quot;accepting-output#Accepting-Output&quot;&gt;Accepting Output&lt;/a&gt;.</source>
          <target state="translated">根据文件名处理程序的实现，可能无法将 &lt;var&gt;filter&lt;/var&gt; 或 &lt;var&gt;sentinel&lt;/var&gt; 应用于结果的过程对象。的 &lt;code&gt;:stderr&lt;/code&gt; 参数不能是管道过程中，文件名的处理程序不支持管过程这一点。接受如 &lt;code&gt;:stderr&lt;/code&gt; 参数的缓冲区，其内容在不使用管道进程的情况下显示。请参阅&lt;a href=&quot;filter-functions#Filter-Functions&quot;&gt;过滤器功能&lt;/a&gt;，&lt;a href=&quot;sentinels#Sentinels&quot;&gt;哨兵&lt;/a&gt;和&lt;a href=&quot;accepting-output#Accepting-Output&quot;&gt;接受输出&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c59a6955f565a3bf05ff68cbeedaae22c1315ff7" translate="yes" xml:space="preserve">
          <source>Depending on the user&amp;rsquo;s answer, the function may return normally, in which case the modification of the buffer proceeds, or it may signal a &lt;code&gt;file-supersession&lt;/code&gt; error with data &lt;code&gt;(&lt;var&gt;filename&lt;/var&gt;)&lt;/code&gt;, in which case the proposed buffer modification is not allowed.</source>
          <target state="translated">根据用户的回答，该函数可能会正常返回，在这种情况下，缓冲区的修改将继续进行，或者它可能会发出带有数据 &lt;code&gt;(&lt;var&gt;filename&lt;/var&gt;)&lt;/code&gt; &lt;var&gt;filename&lt;/var&gt; ）的 &lt;code&gt;file-supersession&lt;/code&gt; 替换错误，在这种情况下，建议的缓冲区修改是不允许的。</target>
        </trans-unit>
        <trans-unit id="d9dd9b99607a185bc516282a5ab52c5a2808cc3d" translate="yes" xml:space="preserve">
          <source>Depending on window system, focus events may also be delivered repeatedly and with different focus states before settling to the expected values. Code relying on focus notifications should &amp;ldquo;debounce&amp;rdquo; any user-visible updates arising from focus changes, perhaps by deferring work until redisplay.</source>
          <target state="translated">根据窗口系统的不同，在设置为期望值之前，焦点事件也可能会以不同的焦点状态重复发送。依赖焦点通知的代码应该&amp;ldquo;消除&amp;rdquo;焦点更改引起的任何用户可见的更新，可能是通过推迟工作直到重新显示。</target>
        </trans-unit>
        <trans-unit id="a6808e3217dc97b0ba5040237e8ab6c099e5256e" translate="yes" xml:space="preserve">
          <source>Describing Characters for Help Messages</source>
          <target state="translated">描述帮助信息的字符</target>
        </trans-unit>
        <trans-unit id="4ddb61c77e85503a63a72ff2293050c34ad0997e" translate="yes" xml:space="preserve">
          <source>Describing Data Layout</source>
          <target state="translated">描述数据布局</target>
        </trans-unit>
        <trans-unit id="60e01e591c18093a3c8d91387277c0c70e93a365" translate="yes" xml:space="preserve">
          <source>Describing classes of strings.</source>
          <target state="translated">描述字符串的类别。</target>
        </trans-unit>
        <trans-unit id="44d30a9f5dc29b06003908a2feda5a3c5f492bd7" translate="yes" xml:space="preserve">
          <source>Describing data layout.</source>
          <target state="translated">描述数据布局。</target>
        </trans-unit>
        <trans-unit id="393d501a404e0e6cf95a77ba1b9ca7830370cc20" translate="yes" xml:space="preserve">
          <source>Designating a buffer as current so that primitives will access its contents.</source>
          <target state="translated">将缓冲区指定为当前,以便基元能够访问其内容。</target>
        </trans-unit>
        <trans-unit id="1208aaeff328a0683eea78ee9e0b6d189bbff9de" translate="yes" xml:space="preserve">
          <source>Desktop Notifications</source>
          <target state="translated">桌面通知</target>
        </trans-unit>
        <trans-unit id="d6ab5674456bfee9fd0204086f26f1c7198f5cfb" translate="yes" xml:space="preserve">
          <source>Desktop Save Mode</source>
          <target state="translated">桌面保存模式</target>
        </trans-unit>
        <trans-unit id="e52c618207f4fecb07a945f42f84c9b36064658d" translate="yes" xml:space="preserve">
          <source>Desktop notifications.</source>
          <target state="translated">桌面通知。</target>
        </trans-unit>
        <trans-unit id="7aa28956b5ee17c204043e25c45408ee2a030c9d" translate="yes" xml:space="preserve">
          <source>Despite the distinction between files and buffers, people often refer to a file when they mean a buffer and vice-versa. Indeed, we say, &amp;ldquo;I am editing a file&amp;rdquo;, rather than, &amp;ldquo;I am editing a buffer that I will soon save as a file of the same name&amp;rdquo;. Humans do not usually need to make the distinction explicit. When dealing with a computer program, however, it is good to keep the distinction in mind.</source>
          <target state="translated">尽管文件和缓冲区之间有区别，但是人们通常在指缓冲区时引用文件，反之亦然。实际上，我们说的是&amp;ldquo;我正在编辑文件&amp;rdquo;，而不是&amp;ldquo;我正在编辑一个缓冲区，不久以后我将它另存为同名文件&amp;rdquo;。人类通常不需要明确区分。但是，在处理计算机程序时，最好记住区别。</target>
        </trans-unit>
        <trans-unit id="331bdd291900a9bf32d3e5b6523da562bcb078b2" translate="yes" xml:space="preserve">
          <source>Destructuring with pcase Patterns</source>
          <target state="translated">使用pcase模式进行结构设计</target>
        </trans-unit>
        <trans-unit id="6e1b5ae06788e9890654031efec0e7d2f10bd2c7" translate="yes" xml:space="preserve">
          <source>Details about the suffixes that &lt;code&gt;load&lt;/code&gt; tries.</source>
          <target state="translated">有关尝试 &lt;code&gt;load&lt;/code&gt; 的后缀的详细信息。</target>
        </trans-unit>
        <trans-unit id="39b4f808ccf9d054848685c364375487284211dc" translate="yes" xml:space="preserve">
          <source>Details and special features of argument lists.</source>
          <target state="translated">论证清单的细节和特殊性。</target>
        </trans-unit>
        <trans-unit id="a40e064ad4da784ab7635e2de415069d78ab768c" translate="yes" xml:space="preserve">
          <source>Details of using synchronous subprocesses.</source>
          <target state="translated">使用同步子进程的细节。</target>
        </trans-unit>
        <trans-unit id="e9e6287247b7bdf22492d62d095489ef544826d9" translate="yes" xml:space="preserve">
          <source>Details on reading the init file.</source>
          <target state="translated">读取init文件的细节。</target>
        </trans-unit>
        <trans-unit id="e64bbd92b717d415a4fc10f79e726fc2127580ec" translate="yes" xml:space="preserve">
          <source>Determining the features of a terminal.</source>
          <target state="translated">确定终端的特征。</target>
        </trans-unit>
        <trans-unit id="00de309eba87afb5119600cc73a7d17d72130c38" translate="yes" xml:space="preserve">
          <source>Determining the syntactic state of a position.</source>
          <target state="translated">确定一个位置的语法状态。</target>
        </trans-unit>
        <trans-unit id="5901cd4e0f6865c55bbd5e5fd5853a9e728645ef" translate="yes" xml:space="preserve">
          <source>Determining whether a Function is Safe to Call</source>
          <target state="translated">确定一个函数是否可以安全调用。</target>
        </trans-unit>
        <trans-unit id="810769ec7821b1ca0280e66813916a14fdbdbb7e" translate="yes" xml:space="preserve">
          <source>Determining whether a function is safe to call.</source>
          <target state="translated">判断一个函数是否可以安全调用。</target>
        </trans-unit>
        <trans-unit id="36fec1d6bd6fafea17fbcb6651b0ceab1bee1dd9" translate="yes" xml:space="preserve">
          <source>Determining whether the visited file was changed behind Emacs&amp;rsquo;s back.</source>
          <target state="translated">确定访问的文件是否在Emacs的背后更改了。</target>
        </trans-unit>
        <trans-unit id="f3e6638d8983368cd66eb98c8285025ea28eef00" translate="yes" xml:space="preserve">
          <source>Determining which network features work on the machine you are using.</source>
          <target state="translated">确定哪些网络功能在你使用的机器上工作。</target>
        </trans-unit>
        <trans-unit id="9df5b59ac2daac4a68cc51ccfe1bd15991c0b2e8" translate="yes" xml:space="preserve">
          <source>Dialog Boxes</source>
          <target state="translated">对话框</target>
        </trans-unit>
        <trans-unit id="0687da02c9edb60aabcae43b40d506a20188fdfe" translate="yes" xml:space="preserve">
          <source>Dialog boxes always appear in the center of a frame; the argument &lt;var&gt;position&lt;/var&gt; specifies which frame. The possible values are as in &lt;code&gt;x-popup-menu&lt;/code&gt;, but the precise coordinates or the individual window don&amp;rsquo;t matter; only the frame matters.</source>
          <target state="translated">对话框始终出现在框架的中央；参数 &lt;var&gt;position&lt;/var&gt; 指定哪个帧。可能的值与 &lt;code&gt;x-popup-menu&lt;/code&gt; 中的一样，但是精确的坐标或单个窗口无关紧要；只有框架很重要。</target>
        </trans-unit>
        <trans-unit id="2f093cef7e8a405c5d998976c2b2e9c4c90b4a43" translate="yes" xml:space="preserve">
          <source>Digit</source>
          <target state="translated">Digit</target>
        </trans-unit>
        <trans-unit id="b0305cf73b048a3eb5e04fc6f33d59b344e2d16c" translate="yes" xml:space="preserve">
          <source>Directories are files, so &lt;code&gt;file-exists-p&lt;/code&gt; can return &lt;code&gt;t&lt;/code&gt; when given a directory. However, because &lt;code&gt;file-exists-p&lt;/code&gt; follows symbolic links, it returns &lt;code&gt;t&lt;/code&gt; for a symbolic link name only if the target file exists.</source>
          <target state="translated">目录是文件，因此给定目录时， &lt;code&gt;file-exists-p&lt;/code&gt; 可以返回 &lt;code&gt;t&lt;/code&gt; 。但是，由于 &lt;code&gt;file-exists-p&lt;/code&gt; 跟随符号链接，因此只有在目标文件存在的情况下，它才会返回 &lt;code&gt;t&lt;/code&gt; 作为符号链接名称。</target>
        </trans-unit>
        <trans-unit id="e2c53dd675781bb78457d15755ac4b2a4638e8ff" translate="yes" xml:space="preserve">
          <source>Directory Local Variables</source>
          <target state="translated">目录本地变量</target>
        </trans-unit>
        <trans-unit id="426a9b6d2466a4f29b89b28233d69fac41fb21a2" translate="yes" xml:space="preserve">
          <source>Directory Names</source>
          <target state="translated">目录名称</target>
        </trans-unit>
        <trans-unit id="2c84295511e3d4860f4bce3fecbb7461e64b72a8" translate="yes" xml:space="preserve">
          <source>Disabling Commands</source>
          <target state="translated">禁用命令</target>
        </trans-unit>
        <trans-unit id="dcccdac068d8a62f9b3c978d24578c5580db3597" translate="yes" xml:space="preserve">
          <source>Disabling Multibyte Characters</source>
          <target state="translated">禁用多字节字符</target>
        </trans-unit>
        <trans-unit id="b63aea91e73ae4b743ae07d1c313e661a92893d2" translate="yes" xml:space="preserve">
          <source>Disallows switching and signals an error as in non-interactive use.</source>
          <target state="translated">在非交互式使用中,禁止切换并发出错误信号。</target>
        </trans-unit>
        <trans-unit id="2b2e65d75308fb0c58764ba66e1aed8954bac31c" translate="yes" xml:space="preserve">
          <source>Disassembled Byte-Code</source>
          <target state="translated">拆卸的字节码</target>
        </trans-unit>
        <trans-unit id="90b38775d5adaa24835b7c16777fe848a1a4cbe4" translate="yes" xml:space="preserve">
          <source>Disassembling byte-code; how to read byte-code.</source>
          <target state="translated">拆解字节码;如何读取字节码。</target>
        </trans-unit>
        <trans-unit id="1e9fd62605dba6fed0e7fb9746cb62c8494027ae" translate="yes" xml:space="preserve">
          <source>Discard the output, and return &lt;code&gt;nil&lt;/code&gt; immediately without waiting for the subprocess to finish.</source>
          <target state="translated">放弃输出，并立即返回 &lt;code&gt;nil&lt;/code&gt; ，而无需等待子进程完成。</target>
        </trans-unit>
        <trans-unit id="992a43465e9392fd9e0d446a198942cf52368d8a" translate="yes" xml:space="preserve">
          <source>Discard the output.</source>
          <target state="translated">丢弃输出。</target>
        </trans-unit>
        <trans-unit id="574ff9b0c49cdeb5f5508548ae0cab44fecee038" translate="yes" xml:space="preserve">
          <source>Display</source>
          <target state="translated">Display</target>
        </trans-unit>
        <trans-unit id="81976d6d3677b8f815c544607fbb8e0be199d26a" translate="yes" xml:space="preserve">
          <source>Display &lt;var&gt;icon&lt;/var&gt; in the system tray. If &lt;var&gt;icon&lt;/var&gt; is a string, it should specify a file name from which to load the icon; the specified file should be a</source>
          <target state="translated">在系统任务栏中显示 &lt;var&gt;icon&lt;/var&gt; 。如果 &lt;var&gt;icon&lt;/var&gt; 是字符串，则应指定要从中加载图标的文件名；指定的文件应该是</target>
        </trans-unit>
        <trans-unit id="bb21fc4e6315641e302dd1e85e80c62c87e27dc4" translate="yes" xml:space="preserve">
          <source>Display &lt;var&gt;string&lt;/var&gt; instead of the text that has this property.</source>
          <target state="translated">显示 &lt;var&gt;string&lt;/var&gt; 而不是具有此属性的文本。</target>
        </trans-unit>
        <trans-unit id="06c7259195a5cfcfc7309d074ff05f0942b78c06" translate="yes" xml:space="preserve">
          <source>Display Feature Testing</source>
          <target state="translated">显示功能测试</target>
        </trans-unit>
        <trans-unit id="f8ebb335c55c27c5cb02b66785d8fc6c2200a42e" translate="yes" xml:space="preserve">
          <source>Display Specs That Replace The Text</source>
          <target state="translated">替换文本的显示规格</target>
        </trans-unit>
        <trans-unit id="4b23ea0399bf455fd7f5eb176880b1c4396487ef" translate="yes" xml:space="preserve">
          <source>Display Tables</source>
          <target state="translated">显示表</target>
        </trans-unit>
        <trans-unit id="c041e540a063c612bf30d300064b216e9911d3d2" translate="yes" xml:space="preserve">
          <source>Display a backtrace, excluding Edebug&amp;rsquo;s own functions for clarity (&lt;code&gt;edebug-backtrace&lt;/code&gt;).</source>
          <target state="translated">显示回溯，不包含Edebug自身的功能（ &lt;code&gt;edebug-backtrace&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="cf3970add366bcb040ee5da0cb743c24387355b8" translate="yes" xml:space="preserve">
          <source>Display a backtrace, omitting Edebug&amp;rsquo;s own frames.</source>
          <target state="translated">显示回溯，省略Edebug自己的框架。</target>
        </trans-unit>
        <trans-unit id="80eaf252351452404cceb9c3512de080d3ec4022" translate="yes" xml:space="preserve">
          <source>Display a box containing that string. The string should contain at most 6</source>
          <target state="translated">显示一个包含该字符串的方框。该字符串应最多包含6个</target>
        </trans-unit>
        <trans-unit id="f9a0de3d9806ce236d06a171a16fa2c799573f82" translate="yes" xml:space="preserve">
          <source>Display a box containing the Unicode codepoint of the character, in hexadecimal notation.</source>
          <target state="translated">显示一个包含该字符的Unicode码点的方框,用十六进制表示。</target>
        </trans-unit>
        <trans-unit id="421baf3300af3c04fcc7fde9988e106db63a3756" translate="yes" xml:space="preserve">
          <source>Display a filled box. (This is the default.)</source>
          <target state="translated">显示一个填充框。这是默认的。</target>
        </trans-unit>
        <trans-unit id="c1bae4bf40eb3abaf0da005765bab148a23ee3d3" translate="yes" xml:space="preserve">
          <source>Display a hollow box.</source>
          <target state="translated">展示一个空心盒子。</target>
        </trans-unit>
        <trans-unit id="63fc9198730ee5ced3bfd519ecb3823b1c64a2b0" translate="yes" xml:space="preserve">
          <source>Display a horizontal bar &lt;var&gt;height&lt;/var&gt; pixels high.</source>
          <target state="translated">显示水平条 &lt;var&gt;height&lt;/var&gt; 像素高。</target>
        </trans-unit>
        <trans-unit id="c0b1db6a491723ac650cce6cdac2683566bea301" translate="yes" xml:space="preserve">
          <source>Display a horizontal bar.</source>
          <target state="translated">显示一个水平条。</target>
        </trans-unit>
        <trans-unit id="d49f4d013bc386c399cd430b0133f59dbc543678" translate="yes" xml:space="preserve">
          <source>Display a list of functions that will invoke the debugger when called. This is a list of functions that are set to break on entry by means of &lt;code&gt;debug-on-entry&lt;/code&gt;.</source>
          <target state="translated">显示将在调用时调用调试器的函数列表。这是一系列功能，这些功能设置为通过进入 &lt;code&gt;debug-on-entry&lt;/code&gt; 进入时中断。</target>
        </trans-unit>
        <trans-unit id="70ab8c7f2c8802cb8a11f7f88c5f9d002f5bfe01" translate="yes" xml:space="preserve">
          <source>Display a literal &amp;lsquo;</source>
          <target state="translated">显示文字'</target>
        </trans-unit>
        <trans-unit id="13c81c276414bb62766057cb0952e6a0156a6de5" translate="yes" xml:space="preserve">
          <source>Display a thin space, 1-pixel wide on graphical displays, or 1-character wide on text terminals.</source>
          <target state="translated">显示一个细小的空间,在图形显示器上显示1像素宽,或在文本终端上显示1字符宽。</target>
        </trans-unit>
        <trans-unit id="d389be1988fbcf8b9e82962c470d62ff9d8d1054" translate="yes" xml:space="preserve">
          <source>Display a vertical bar &lt;var&gt;width&lt;/var&gt; pixels wide between characters.</source>
          <target state="translated">在字符之间显示垂直条 &lt;var&gt;width&lt;/var&gt; 像素。</target>
        </trans-unit>
        <trans-unit id="da3a7e5ec42d7735a91ac0b8ca7e0eda22bfdb7d" translate="yes" xml:space="preserve">
          <source>Display a vertical bar between characters.</source>
          <target state="translated">显示字符之间的垂直条。</target>
        </trans-unit>
        <trans-unit id="6784b24563815961a55f4b75c27f8f4f0b03237a" translate="yes" xml:space="preserve">
          <source>Display an empty box.</source>
          <target state="translated">显示一个空盒子。</target>
        </trans-unit>
        <trans-unit id="e84a974ad0b3695b2210f348f78aab26f82c3ed7" translate="yes" xml:space="preserve">
          <source>Display expression results and evaluate expressions as if outside of Edebug.</source>
          <target state="translated">显示表达式结果,并像在Edebug之外一样评估表达式。</target>
        </trans-unit>
        <trans-unit id="191827dd8029a9d776f9248bc6aa52887421b5af" translate="yes" xml:space="preserve">
          <source>Display of an arrow to indicate position.</source>
          <target state="translated">显示箭头指示位置。</target>
        </trans-unit>
        <trans-unit id="378deda6e314e626dc3325c6542de919a5fb97b7" translate="yes" xml:space="preserve">
          <source>Display of bidirectional scripts, such as Arabic and Farsi.</source>
          <target state="translated">显示双向文字,如阿拉伯语和波斯语。</target>
        </trans-unit>
        <trans-unit id="ba8254baa2a06e0921938bfddb5892e4e2922fc5" translate="yes" xml:space="preserve">
          <source>Display some help, then ask again.</source>
          <target state="translated">显示一些帮助,然后再问。</target>
        </trans-unit>
        <trans-unit id="44497e1875e699b4d8eb5c7bf819bdfb142b969b" translate="yes" xml:space="preserve">
          <source>Display specs that replace the text.</source>
          <target state="translated">显示取代文字的规格。</target>
        </trans-unit>
        <trans-unit id="b61003725ba577c7cc8e7675c491a9fcc12b1c21" translate="yes" xml:space="preserve">
          <source>Display tables (see &lt;a href=&quot;display-tables#Display-Tables&quot;&gt;Display Tables&lt;/a&gt;).</source>
          <target state="translated">显示表（请参阅&lt;a href=&quot;display-tables#Display-Tables&quot;&gt;显示表&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="7252342da48e710925e4d98b3fe5efaf560909af" translate="yes" xml:space="preserve">
          <source>Display the angle icons and arrows in the left fringe.</source>
          <target state="translated">在左边缘显示角度图标和箭头。</target>
        </trans-unit>
        <trans-unit id="3fde49393afde3594d470777246e6a5c155d7ee6" translate="yes" xml:space="preserve">
          <source>Display the angle icons and arrows in the right fringe.</source>
          <target state="translated">在右侧流苏中显示角度图标和箭头。</target>
        </trans-unit>
        <trans-unit id="f0042d66c4311f4eec1e6ac6c0d0c3f0b167a987" translate="yes" xml:space="preserve">
          <source>Display the angle icons in the left fringe and don&amp;rsquo;t display the arrows.</source>
          <target state="translated">在左边缘显示角度图标，不显示箭头。</target>
        </trans-unit>
        <trans-unit id="4477d164c0a9a3bb5b547ae6fe60c063979d3489" translate="yes" xml:space="preserve">
          <source>Display the character in the usual way.</source>
          <target state="translated">以通常的方式显示字符。</target>
        </trans-unit>
        <trans-unit id="2bf33014805f5983925be163210b73090cf0f207" translate="yes" xml:space="preserve">
          <source>Display the help message for Edebug (&lt;code&gt;edebug-help&lt;/code&gt;).</source>
          <target state="translated">显示Edebug的帮助消息（ &lt;code&gt;edebug-help&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="20780bc7d38845f05463f82c4075ff1905bc9bf0" translate="yes" xml:space="preserve">
          <source>Display the specified glyph code instead.</source>
          <target state="translated">显示指定的字形代码。</target>
        </trans-unit>
        <trans-unit id="d681a90c083eac19dc61c728241c99e9fb3f3235" translate="yes" xml:space="preserve">
          <source>Display the text &lt;var&gt;button&lt;/var&gt; marked as a button. The &lt;code&gt;:action&lt;/code&gt; attribute specifies what the button will do if the user invokes it; its value is a function which takes two arguments&amp;mdash;the widget which the button appears in, and the event.</source>
          <target state="translated">显示文本 &lt;var&gt;button&lt;/var&gt; 标记为一个按钮。的 &lt;code&gt;:action&lt;/code&gt; 属性指定哪些按钮会做，如果用户调用它; 它的值是一个带有两个参数的函数-按钮出现的小部件和事件。</target>
        </trans-unit>
        <trans-unit id="5b954471724c68567e89f11b0099d61ecf6a99c4" translate="yes" xml:space="preserve">
          <source>Display this glyph by sending the specified string to the terminal.</source>
          <target state="translated">通过向终端发送指定的字符串来显示这个字形。</target>
        </trans-unit>
        <trans-unit id="24be2c8620ecfdcb9b0fd471d40947e188d9dc51" translate="yes" xml:space="preserve">
          <source>Display this glyph literally.</source>
          <target state="translated">按字面意思显示这个字形。</target>
        </trans-unit>
        <trans-unit id="fea5f0565f7f797b9005e9d138263b73ab3829a0" translate="yes" xml:space="preserve">
          <source>Display with &lt;var&gt;graphical&lt;/var&gt; on graphical displays, and with &lt;var&gt;text&lt;/var&gt; on text terminals. Both &lt;var&gt;graphical&lt;/var&gt; and &lt;var&gt;text&lt;/var&gt; must be one of the display methods described above.</source>
          <target state="translated">与显示 &lt;var&gt;graphical&lt;/var&gt; 上的图形显示，并与 &lt;var&gt;text&lt;/var&gt; 上的文本终端。两个 &lt;var&gt;graphical&lt;/var&gt; 和 &lt;var&gt;text&lt;/var&gt; 必须是上述显示方法之一。</target>
        </trans-unit>
        <trans-unit id="618af68e847b05850ad14d5397680a98adf78ce3" translate="yes" xml:space="preserve">
          <source>Displaying Buffers in Side Windows</source>
          <target state="translated">在侧窗中显示缓冲区</target>
        </trans-unit>
        <trans-unit id="d1600c42c4eb0f76394268c18eef97dec832cf2b" translate="yes" xml:space="preserve">
          <source>Displaying Faces</source>
          <target state="translated">显示面孔</target>
        </trans-unit>
        <trans-unit id="7b1334b22ec9e0d8c7cba40d6730d6b0e815df86" translate="yes" xml:space="preserve">
          <source>Displaying Messages in the Echo Area</source>
          <target state="translated">在回音区显示信息</target>
        </trans-unit>
        <trans-unit id="67c36a37f843e665d1276f456d6877a2fd593360" translate="yes" xml:space="preserve">
          <source>Displaying a Buffer in a Suitable Window</source>
          <target state="translated">在合适的窗口中显示缓冲区</target>
        </trans-unit>
        <trans-unit id="434d9ea4002d3d972f5539bf323be65b2685e162" translate="yes" xml:space="preserve">
          <source>Displaying a box to ask yes or no.</source>
          <target state="translated">显示一个问是或不是的框。</target>
        </trans-unit>
        <trans-unit id="10c7c45826793acd46c045e931912a7c1864364f" translate="yes" xml:space="preserve">
          <source>Displaying a buffer in a suitable window.</source>
          <target state="translated">在合适的窗口中显示缓冲区。</target>
        </trans-unit>
        <trans-unit id="a37daaf6d4f46253134c64944fcd6f393053a501" translate="yes" xml:space="preserve">
          <source>Displaying a menu for the user to select from.</source>
          <target state="translated">显示菜单供用户选择。</target>
        </trans-unit>
        <trans-unit id="71abbc1f9c4d06843e29188c3da79172ab1b6c57" translate="yes" xml:space="preserve">
          <source>Displaying an image; adjusting the height, spacing, and other properties of text.</source>
          <target state="translated">显示图像;调整文字的高度、间距等属性。</target>
        </trans-unit>
        <trans-unit id="f0bacadfbee90f312fe142827bf5d96a476640cd" translate="yes" xml:space="preserve">
          <source>Displaying cursors in the right fringe.</source>
          <target state="translated">在右侧边缘显示光标。</target>
        </trans-unit>
        <trans-unit id="c1c42fa19459fc2384d8cd8487b3fd07b2c3ef6b" translate="yes" xml:space="preserve">
          <source>Displaying images in Emacs buffers.</source>
          <target state="translated">在Emacs缓冲区中显示图像。</target>
        </trans-unit>
        <trans-unit id="06d1773f36b9cb6d9242979bd3192bd0e0940f37" translate="yes" xml:space="preserve">
          <source>Displaying in the Margins</source>
          <target state="translated">显示在空白处</target>
        </trans-unit>
        <trans-unit id="e4df838dd20a50826a4380b30a00a45486a89912" translate="yes" xml:space="preserve">
          <source>Displaying indicator icons in the window fringes.</source>
          <target state="translated">在窗口边缘显示指示图标。</target>
        </trans-unit>
        <trans-unit id="c46ff06fda3da50f5945685fc35881b8046b8bbf" translate="yes" xml:space="preserve">
          <source>Displaying messages at the bottom of the screen.</source>
          <target state="translated">在屏幕底部显示信息。</target>
        </trans-unit>
        <trans-unit id="c61a533f834e81b81144741488edb351c4b59dcb" translate="yes" xml:space="preserve">
          <source>Displaying native widgets in Emacs buffers.</source>
          <target state="translated">在Emacs缓冲区中显示本地小部件。</target>
        </trans-unit>
        <trans-unit id="d4bcb92d9051207e05eab3f4ef68fc9592f0837f" translate="yes" xml:space="preserve">
          <source>Displaying on several different devices.</source>
          <target state="translated">在几个不同的设备上显示。</target>
        </trans-unit>
        <trans-unit id="d0a918c947546c08aa9a141cea5cc904a4cd838c" translate="yes" xml:space="preserve">
          <source>Displaying one space with a specified width.</source>
          <target state="translated">显示一个具有指定宽度的空间。</target>
        </trans-unit>
        <trans-unit id="c00f3dd89d830f0c197a9af05d57c679befeed71" translate="yes" xml:space="preserve">
          <source>Displaying text or images to the side of the main text.</source>
          <target state="translated">在正文边上显示文字或图片。</target>
        </trans-unit>
        <trans-unit id="889086fb020a91decec214af763c6371b2b40b76" translate="yes" xml:space="preserve">
          <source>Displaying warning messages for the user.</source>
          <target state="translated">显示用户的警告信息。</target>
        </trans-unit>
        <trans-unit id="08708fb6139494af1f8eae88fb02aa680ac0bbbb" translate="yes" xml:space="preserve">
          <source>Displays that go away automatically.</source>
          <target state="translated">自动消失的显示器。</target>
        </trans-unit>
        <trans-unit id="62fc1dcc0dcd09f2e883c44b44308f40130d7908" translate="yes" xml:space="preserve">
          <source>Distinguish Interactive Calls</source>
          <target state="translated">区分交互式呼叫</target>
        </trans-unit>
        <trans-unit id="9dc78fcea75ac6a294f1849abb64d1181eadc426" translate="yes" xml:space="preserve">
          <source>Distinguish the name and kind of system.</source>
          <target state="translated">区分系统的名称和种类。</target>
        </trans-unit>
        <trans-unit id="6533ea8690381322c5b1b97f75f21692cf282471" translate="yes" xml:space="preserve">
          <source>Distinguishing Kinds of Files</source>
          <target state="translated">区分文件的种类</target>
        </trans-unit>
        <trans-unit id="2cb93d16c36551db9a1f1534947289af69a0bb1c" translate="yes" xml:space="preserve">
          <source>Dividers can be dragged with the mouse and are therefore useful for adjusting the sizes of adjacent windows with the mouse. They also serve to visually set apart adjacent windows when no scroll bars or mode lines are present. The following three faces allow the customization of the appearance of dividers:</source>
          <target state="translated">分隔线可以用鼠标拖动,因此可以用鼠标调整相邻窗口的大小。当没有滚动条或模式线存在时,它们还可以在视觉上将相邻窗口分开。以下三个面允许自定义分隔线的外观。</target>
        </trans-unit>
        <trans-unit id="ad4e1c7dbe4bdbab1cd854c2bc81ac366e2fd865" translate="yes" xml:space="preserve">
          <source>Do &lt;em&gt;not&lt;/em&gt; use &lt;code&gt;undecided&lt;/code&gt; for &lt;var&gt;coding-system&lt;/var&gt; when encoding text, since that may lead to unexpected results. Instead, use &lt;code&gt;select-safe-coding-system&lt;/code&gt; (see &lt;a href=&quot;user_002dchosen-coding-systems#User_002dChosen-Coding-Systems&quot;&gt;select-safe-coding-system&lt;/a&gt;) to suggest a suitable encoding, if there&amp;rsquo;s no obvious pertinent value for &lt;var&gt;coding-system&lt;/var&gt;.</source>
          <target state="translated">千万&lt;em&gt;不能&lt;/em&gt;使用 &lt;code&gt;undecided&lt;/code&gt; 的 &lt;var&gt;coding-system&lt;/var&gt; 编码文本时，因为这可能会导致意想不到的结果。如果没有明显的相关 &lt;var&gt;coding-system&lt;/var&gt; 值，请使用 &lt;code&gt;select-safe-coding-system&lt;/code&gt; （请参阅&lt;a href=&quot;user_002dchosen-coding-systems#User_002dChosen-Coding-Systems&quot;&gt;select-safe-coding-system&lt;/a&gt;）建议合适的编码。</target>
        </trans-unit>
        <trans-unit id="de7db9469e6fcb3df0bf71de137cf9509a4f001a" translate="yes" xml:space="preserve">
          <source>Do &lt;em&gt;not&lt;/em&gt; use &lt;code&gt;window-system&lt;/code&gt; and &lt;code&gt;initial-window-system&lt;/code&gt; as predicates or boolean flag variables, if you want to write code that works differently on text terminals and graphic displays. That is because &lt;code&gt;window-system&lt;/code&gt; is not a good indicator of Emacs capabilities on a given display type. Instead, use &lt;code&gt;display-graphic-p&lt;/code&gt; or any of the other &lt;code&gt;display-*-p&lt;/code&gt; predicates described in &lt;a href=&quot;display-feature-testing#Display-Feature-Testing&quot;&gt;Display Feature Testing&lt;/a&gt;.</source>
          <target state="translated">千万&lt;em&gt;不能&lt;/em&gt;使用 &lt;code&gt;window-system&lt;/code&gt; 和 &lt;code&gt;initial-window-system&lt;/code&gt; 作为谓词或布尔标志变量，如果你想编写代码，在文本终端和图形显示原理不同。这是因为在给定的显示类型上， &lt;code&gt;window-system&lt;/code&gt; 不是Emacs功能的良好指示。而是使用 &lt;code&gt;display-graphic-p&lt;/code&gt; 或&lt;a href=&quot;display-feature-testing#Display-Feature-Testing&quot;&gt;Display Feature Testing中&lt;/a&gt;描述的任何其他 &lt;code&gt;display-*-p&lt;/code&gt; 谓词。</target>
        </trans-unit>
        <trans-unit id="233fe85b908a3966e038cfd1f6207c31a852e6bd" translate="yes" xml:space="preserve">
          <source>Do &lt;em&gt;not&lt;/em&gt; use these functions to make a buffer temporarily current just so a Lisp program can access or modify it. They have side-effects, such as changing window histories (see &lt;a href=&quot;window-history#Window-History&quot;&gt;Window History&lt;/a&gt;), which will surprise the user if used that way. If you want to make a buffer current to modify it in Lisp, use &lt;code&gt;with-current-buffer&lt;/code&gt;, &lt;code&gt;save-current-buffer&lt;/code&gt;, or &lt;code&gt;set-buffer&lt;/code&gt;. See &lt;a href=&quot;current-buffer#Current-Buffer&quot;&gt;Current Buffer&lt;/a&gt;.</source>
          <target state="translated">千万&lt;em&gt;不能&lt;/em&gt;使用这些功能，使缓冲区临时电流只是这么一个Lisp程序可以访问或修改。它们具有副作用，例如更改窗口历史记录（请参见&lt;a href=&quot;window-history#Window-History&quot;&gt;Window History&lt;/a&gt;），如果以这种方式使用会使用户感到惊讶。如果要在Lisp中使缓冲区变为当前状态以对其进行修改，请使用 &lt;code&gt;with-current-buffer&lt;/code&gt; ， &lt;code&gt;save-current-buffer&lt;/code&gt; 或 &lt;code&gt;set-buffer&lt;/code&gt; 。请参阅&lt;a href=&quot;current-buffer#Current-Buffer&quot;&gt;当前缓冲区&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="38fc2968457ef75487f5bc222ebaa2b81e23705c" translate="yes" xml:space="preserve">
          <source>Do &lt;em&gt;not&lt;/em&gt; use this function to compare file names for equality, as filesystems generally don&amp;rsquo;t honor linguistic equivalence of strings that collation implements.</source>
          <target state="translated">千万&lt;em&gt;不能&lt;/em&gt;使用此功能的文件名进行相等比较，如文件系统一般不兑现字符串整理工具的语言等价。</target>
        </trans-unit>
        <trans-unit id="28fd18c2acbdc2fd4f133cf31b66d79e6e87da38" translate="yes" xml:space="preserve">
          <source>Do not add an autoload comment unless it is really necessary. Autoloading code means it is always globally visible. Once an item is autoloaded, there is no compatible way to transition back to it not being autoloaded (after people become accustomed to being able to use it without an explicit load).</source>
          <target state="translated">除非真的有必要,否则不要添加自动加载注释。自动加载代码意味着它始终是全局可见的。一旦一个项目被自动加载,就没有兼容的方法来过渡到不自动加载(在人们习惯于不明确加载就能使用它之后)。</target>
        </trans-unit>
        <trans-unit id="2e8a8223e2ebfb4c1c978ae7798b361f94435264" translate="yes" xml:space="preserve">
          <source>Do not assume that signed integer arithmetic wraps around on overflow. This is no longer true of Emacs porting targets: signed integer overflow has undefined behavior in practice, and can dump core or even cause earlier or later code to behave illogically. Unsigned overflow does wrap around reliably, modulo a power of two.</source>
          <target state="translated">不要以为有符号的整数运算在溢出时就会被包起来。在 Emacs 移植目标中,这一点已经不适用了:有符号的整数溢出在实践中具有未定义的行为,并且可能会转储核心,甚至导致早期或后期的代码表现得不合逻辑。无符号溢出确实可以可靠地绕过,而且是二的幂。</target>
        </trans-unit>
        <trans-unit id="df08ea961eba96b4703510d94d0caf12ed0cfe99" translate="yes" xml:space="preserve">
          <source>Do not confuse evaluation with command key interpretation. The editor command loop translates keyboard input into a command (an interactively callable function) using the active keymaps, and then uses &lt;code&gt;call-interactively&lt;/code&gt; to execute that command. Executing the command usually involves evaluation, if the command is written in Lisp; however, this step is not considered a part of command key interpretation. See &lt;a href=&quot;command-loop#Command-Loop&quot;&gt;Command Loop&lt;/a&gt;.</source>
          <target state="translated">不要将评估与命令键解释混淆。编辑器命令循环使用活动键盘映射将键盘输入转换为命令（可交互调用的函数），然后使用 &lt;code&gt;call-interactively&lt;/code&gt; 来执行该命令。如果命令是用Lisp编写的，则执行命令通常涉及评估。但是，此步骤不被视为命令键解释的一部分。请参阅&lt;a href=&quot;command-loop#Command-Loop&quot;&gt;命令循环&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f960f784b0378b1b2968b70ff446ffc187486372" translate="yes" xml:space="preserve">
          <source>Do not display a splash screen.</source>
          <target state="translated">不要显示闪屏。</target>
        </trans-unit>
        <trans-unit id="e214470f906dbb222eca782a10acf99ae0c14a92" translate="yes" xml:space="preserve">
          <source>Do not include any</source>
          <target state="translated">不包括任何</target>
        </trans-unit>
        <trans-unit id="899be68a4bd888b45bba6dfa338a09cfcad9fd43" translate="yes" xml:space="preserve">
          <source>Do not include any file named</source>
          <target state="translated">不要包含任何名为</target>
        </trans-unit>
        <trans-unit id="5e18950e85e5243977283ed6bf32212cb5049fd8" translate="yes" xml:space="preserve">
          <source>Do not initialize any display; just start a server. (A &amp;ldquo;background&amp;rdquo; daemon automatically runs in the background.)</source>
          <target state="translated">不要初始化任何显示；只需启动服务器。（&amp;ldquo;后台&amp;rdquo;守护程序会在后台自动运行。）</target>
        </trans-unit>
        <trans-unit id="353066bea6254b066e985958ab8f2a1927efac85" translate="yes" xml:space="preserve">
          <source>Do not load either the init file, or the</source>
          <target state="translated">既不要加载init文件,也不要加载</target>
        </trans-unit>
        <trans-unit id="f111403f756ee69a1f603ab8b93d6d91f9ca7c4e" translate="yes" xml:space="preserve">
          <source>Do not load the</source>
          <target state="translated">不要加载</target>
        </trans-unit>
        <trans-unit id="79a269c4ff2f9b02abbe1bfaea2ba8e8fe52b67e" translate="yes" xml:space="preserve">
          <source>Do not make numbered backups.</source>
          <target state="translated">不要进行编号备份。</target>
        </trans-unit>
        <trans-unit id="8333f4318fa47fe7570f638ec0bf702637984ca4" translate="yes" xml:space="preserve">
          <source>Do not rely on the return value of this function.</source>
          <target state="translated">不要依赖这个函数的返回值。</target>
        </trans-unit>
        <trans-unit id="564d9ba928017991b47c37a09c97a86042ca1dde" translate="yes" xml:space="preserve">
          <source>Do not rely on using &lt;code&gt;set-buffer&lt;/code&gt; to change the current buffer back, because that won&amp;rsquo;t do the job if a quit happens while the wrong buffer is current. For instance, in the previous example, it would have been wrong to do this:</source>
          <target state="translated">不要依赖于使用 &lt;code&gt;set-buffer&lt;/code&gt; 来变回当前缓冲区，因为如果在当前错误的缓冲区上发生退出操作，那将不会起作用。例如，在前面的示例中，这样做是错误的：</target>
        </trans-unit>
        <trans-unit id="e8694f14fe6085f1a0940403263577dcc48d28e8" translate="yes" xml:space="preserve">
          <source>Do not set this variable in the init file of a new user, or in a way that affects more than one user, as that would prevent new users from receiving information about copyleft and basic Emacs usage.</source>
          <target state="translated">不要在新用户的初始文件中设置这个变量,也不要以影响多个用户的方式设置这个变量,因为这将阻止新用户接收关于复制左和基本Emacs使用的信息。</target>
        </trans-unit>
        <trans-unit id="a6986cdc41a6855298866206f6bc9feaf3a8bf15" translate="yes" xml:space="preserve">
          <source>Do not take action for this question&amp;mdash;in other words, &amp;ldquo;no&amp;rdquo;.</source>
          <target state="translated">不要对这个问题采取行动，换句话说，&amp;ldquo;不&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="de2febfa3c3a94aee2602f7bdba301145781eead" translate="yes" xml:space="preserve">
          <source>Do not try substituting your own definition of &lt;code&gt;self-insert-command&lt;/code&gt; for the standard one. The editor command loop handles this function specially.</source>
          <target state="translated">不要尝试将您自己的 &lt;code&gt;self-insert-command&lt;/code&gt; 定义替换为标准定义。编辑器命令循环专门处理此功能。</target>
        </trans-unit>
        <trans-unit id="968419346d77d1d7263a2d71365343884217cf6e" translate="yes" xml:space="preserve">
          <source>Do not use this feature if you want to deprecate the calling convention and favor the one you advertise by the above specification. Instead, use the &lt;code&gt;advertised-calling-convention&lt;/code&gt; declaration (see &lt;a href=&quot;declare-form#Declare-Form&quot;&gt;Declare Form&lt;/a&gt;) or &lt;code&gt;set-advertised-calling-convention&lt;/code&gt; (see &lt;a href=&quot;obsolete-functions#Obsolete-Functions&quot;&gt;Obsolete Functions&lt;/a&gt;), because these two will cause the byte compiler emit a warning message when it compiles Lisp programs which use the deprecated calling convention.</source>
          <target state="translated">如果您要弃用调用约定并偏爱通过上述规范发布的约定，请不要使用此功能。而是使用 &lt;code&gt;advertised-calling-convention&lt;/code&gt; 声明（请参见&lt;a href=&quot;declare-form#Declare-Form&quot;&gt;Delare Form&lt;/a&gt;）或 &lt;code&gt;set-advertised-calling-convention&lt;/code&gt; （请参见&lt;a href=&quot;obsolete-functions#Obsolete-Functions&quot;&gt;Obsolete Functions&lt;/a&gt;），因为这两个将导致字节编译器在编译使用不推荐使用的Lisp程序时发出警告消息。调用约定。</target>
        </trans-unit>
        <trans-unit id="60912253d929b405611bb4392c3ff58e690b51f9" translate="yes" xml:space="preserve">
          <source>Do not use this function when &lt;var&gt;symbol&lt;/var&gt; refers to a lexical variable.</source>
          <target state="translated">当 &lt;var&gt;symbol&lt;/var&gt; 引用词法变量时，请勿使用此功能。</target>
        </trans-unit>
        <trans-unit id="73b395364dbc1c5e16423699afae417ede5f4983" translate="yes" xml:space="preserve">
          <source>Do not write an &lt;code&gt;interactive&lt;/code&gt; spec in the definition; &lt;code&gt;define-derived-mode&lt;/code&gt; does that automatically.</source>
          <target state="translated">不要在定义中编写 &lt;code&gt;interactive&lt;/code&gt; 规范； &lt;code&gt;define-derived-mode&lt;/code&gt; 自动执行此操作。</target>
        </trans-unit>
        <trans-unit id="8848a365d884ff7da783abf7b8547724681f6af6" translate="yes" xml:space="preserve">
          <source>Do not write an idle timer function containing a loop which does a certain amount of processing each time around, and exits when &lt;code&gt;(input-pending-p)&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;. This approach seems very natural but has two problems:</source>
          <target state="translated">不要编写包含循环的空闲计时器函数，该函数每次都会进行一定量的处理，并在 &lt;code&gt;(input-pending-p)&lt;/code&gt; 为非 &lt;code&gt;nil&lt;/code&gt; 时退出。这种方法看起来很自然，但是有两个问题：</target>
        </trans-unit>
        <trans-unit id="ecc1f12a5d5fc23f4a355fb24545320c8e3faf93" translate="yes" xml:space="preserve">
          <source>Do nothing and return &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">什么也不做，返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0fe179966cdf99fd145baab1e3cb6283cb78952b" translate="yes" xml:space="preserve">
          <source>Do take the action being considered&amp;mdash;in other words, &amp;ldquo;yes&amp;rdquo;.</source>
          <target state="translated">请采取正在考虑的操作，换句话说，是。</target>
        </trans-unit>
        <trans-unit id="c16faaa225dcafeaef3dfc125d73ae423bdd28a8" translate="yes" xml:space="preserve">
          <source>Do the work in the expansion, not in the macro.</source>
          <target state="translated">在拓展中做工作,而不是在宏观中做工作。</target>
        </trans-unit>
        <trans-unit id="326027f70bf51bce3001c234d43eb5ac5438b99d" translate="yes" xml:space="preserve">
          <source>Document Object Model</source>
          <target state="translated">文件对象模型</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">Documentation</target>
        </trans-unit>
        <trans-unit id="16f4a9e55f34c4d58fb0062a86313f87e2869310" translate="yes" xml:space="preserve">
          <source>Documentation Basics</source>
          <target state="translated">文档基础知识</target>
        </trans-unit>
        <trans-unit id="aa7ad8f8b8acaa1d720733bcf9ea66f81693f3ac" translate="yes" xml:space="preserve">
          <source>Documentation Strings and Compilation</source>
          <target state="translated">文档字符串和编译</target>
        </trans-unit>
        <trans-unit id="2202abdde612c0f1e3b85911661648863494b572" translate="yes" xml:space="preserve">
          <source>Documentation Strings of Functions</source>
          <target state="translated">文件中的函数串</target>
        </trans-unit>
        <trans-unit id="e00e04541fd52506ed471e4a08e3e91b486eb0d1" translate="yes" xml:space="preserve">
          <source>Documentation strings can contain special &lt;em&gt;key substitution sequences&lt;/em&gt;, referring to key bindings which are looked up only when the user views the documentation. This allows the help commands to display the correct keys even if a user rearranges the default key bindings. See &lt;a href=&quot;keys-in-documentation#Keys-in-Documentation&quot;&gt;Keys in Documentation&lt;/a&gt;.</source>
          <target state="translated">文档字符串可以包含特殊的&lt;em&gt;键替换序列&lt;/em&gt;，这些&lt;em&gt;键替换序列&lt;/em&gt;是指仅在用户查看文档时才查找的键绑定。即使用户重新排列了默认的按键绑定，这也可以使帮助命令显示正确的按键。请参阅&lt;a href=&quot;keys-in-documentation#Keys-in-Documentation&quot;&gt;文档中的键&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="321ed5bb074c2e5f7e8f7c850470287c3ff944f6" translate="yes" xml:space="preserve">
          <source>Doing the unpacking and packing.</source>
          <target state="translated">做好拆包打包工作。</target>
        </trans-unit>
        <trans-unit id="4705b5bfe5049cec50beab7a2d0425febd06b20f" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t autoload a user option just so that a user can set it.</source>
          <target state="translated">不要仅自动加载用户选项，以便用户可以对其进行设置。</target>
        </trans-unit>
        <trans-unit id="26c5736246d86f0c4f54f6c7e6941770ceff1a20" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t display a cursor.</source>
          <target state="translated">不显示光标。</target>
        </trans-unit>
        <trans-unit id="1a1da393bb24789b8e9323cce07f89f23e04c2db" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t display any of these fringe icons.</source>
          <target state="translated">不要显示任何这些边缘图标。</target>
        </trans-unit>
        <trans-unit id="f3949fa329f9a33a321f2ce2d34398cea7feea8c" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t display the character.</source>
          <target state="translated">不显示字符。</target>
        </trans-unit>
        <trans-unit id="6d5a07409d3617859b93028cf71987f644db427b" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t draw a box.</source>
          <target state="translated">不要画盒子。</target>
        </trans-unit>
        <trans-unit id="f85901d8ebc3fb6397aa8cb40e097529408d9e4a" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t enter the debugger when the current frame is exited. This cancels a</source>
          <target state="translated">当前帧退出时不要进入调试器。这取消了</target>
        </trans-unit>
        <trans-unit id="2f0eaa1b48bf688804d628fd8fce75d64b49fe1a" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t evaluate the macro arguments too many times. Don&amp;rsquo;t hide the user&amp;rsquo;s variables.</source>
          <target state="translated">不要过多地评估宏参数。不要隐藏用户的变量。</target>
        </trans-unit>
        <trans-unit id="31b646a672019b0c4af4c0b7f4c1856b94bee872" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t evaluate them; put them in the expansion.</source>
          <target state="translated">不要评估他们；将它们放在扩展中。</target>
        </trans-unit>
        <trans-unit id="e1828f6d8c73bb91bc991f489215eb6cd85762ce" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t set any variables.</source>
          <target state="translated">不要设置任何变量。</target>
        </trans-unit>
        <trans-unit id="38f9a54be0de8b49258207992a0946a1289c706a" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t try concatenating a slash by hand, as in</source>
          <target state="translated">请勿尝试手动串联斜杠，例如</target>
        </trans-unit>
        <trans-unit id="b5e3187b1d52b50f6dbf3d965c086b56ff0703fe" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t underline.</source>
          <target state="translated">不要强调。</target>
        </trans-unit>
        <trans-unit id="f6300044f6ffbcf976164b47e57e2db1b5073d5d" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use both &lt;code&gt;:height&lt;/code&gt; and &lt;code&gt;:relative-height&lt;/code&gt; together.</source>
          <target state="translated">不要同时使用 &lt;code&gt;:height&lt;/code&gt; 和 &lt;code&gt;:relative-height&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ad430b7229cfa9b750fe8038c38ff80cb008dc53" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use this function in programs, since it prints a message in the echo area; use &lt;code&gt;set-buffer-modified-p&lt;/code&gt; (above) instead.</source>
          <target state="translated">不要在程序中使用此功能，因为它会在回显区域中显示一条消息。使用 &lt;code&gt;set-buffer-modified-p&lt;/code&gt; （上面）代替。</target>
        </trans-unit>
        <trans-unit id="cc7db9c5dfabcab9035d404eaaa9481ee3407c1f" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use this function to check whether there is &lt;em&gt;no&lt;/em&gt; window in &lt;var&gt;direction&lt;/var&gt;. Calling &lt;code&gt;window-at-side-p&lt;/code&gt; described above is a much more efficient way to do that.</source>
          <target state="translated">不要使用此功能检查 &lt;var&gt;direction&lt;/var&gt; 是否&lt;em&gt;没有&lt;/em&gt;窗口。调用上述的 &lt;code&gt;window-at-side-p&lt;/code&gt; 是一种更有效的方法。</target>
        </trans-unit>
        <trans-unit id="a48e83c50db44f43204ee0643f746402918672df" translate="yes" xml:space="preserve">
          <source>Dotted Pair Notation</source>
          <target state="translated">点对记法</target>
        </trans-unit>
        <trans-unit id="293dc3c8d0dbe616ddc284ca6435d89b71caeb67" translate="yes" xml:space="preserve">
          <source>Double and triple click (or drag, or down).</source>
          <target state="translated">双击和三击(或拖动,或向下)。</target>
        </trans-unit>
        <trans-unit id="84382f3edb5e487df1ec05164b26f0e6a7feb2e4" translate="yes" xml:space="preserve">
          <source>Dozens of Lisp implementations have been built over the years, each with its own idiosyncrasies. Many of them were inspired by Maclisp, which was written in the 1960s at MIT&amp;rsquo;s Project MAC. Eventually the implementers of the descendants of Maclisp came together and developed a standard for Lisp systems, called Common Lisp. In the meantime, Gerry Sussman and Guy Steele at MIT developed a simplified but very powerful dialect of Lisp, called Scheme.</source>
          <target state="translated">这些年来，已经建立了数十种Lisp实现，每种实现都有其自身的特点。他们中的许多人都受到Maclisp的启发，Maclisp是1960年代在麻省理工学院的MAC项目上写的。最终，Maclisp的后代的实现者聚在一起，为Lisp系统开发了一个标准，称为Common Lisp。同时，麻省理工学院的格里&amp;middot;苏斯曼（Gerry Sussman）和盖伊&amp;middot;斯蒂尔（Guy Steele）开发了一种简化但功能强大的Lisp方言，称为方言。</target>
        </trans-unit>
        <trans-unit id="aec85e07254e33572c8e500ff1fdafce3c6331d3" translate="yes" xml:space="preserve">
          <source>Drag Events</source>
          <target state="translated">拖拽活动</target>
        </trans-unit>
        <trans-unit id="c0ea9dbe7ad5c10534189f39f164e8c765c4d655" translate="yes" xml:space="preserve">
          <source>Drag and Drop</source>
          <target state="translated">拖放</target>
        </trans-unit>
        <trans-unit id="d59e660c0102692bbdf50415e3070a2122e31ad1" translate="yes" xml:space="preserve">
          <source>Draw a box with lines of width 1, in color &lt;var&gt;color&lt;/var&gt;.</source>
          <target state="translated">用颜色 &lt;var&gt;color&lt;/var&gt; 绘制一个宽度为1的线的框。</target>
        </trans-unit>
        <trans-unit id="2977a14b36f4f73976adce10afe1d0abe18d8852" translate="yes" xml:space="preserve">
          <source>Draw a box with lines of width 1, in the foreground color.</source>
          <target state="translated">用前景色画一个宽度为1的线条的方框。</target>
        </trans-unit>
        <trans-unit id="fa87fe236b7b4a06cff97b01c6203ec74d5702b9" translate="yes" xml:space="preserve">
          <source>Draw a horizontal line from the current point to the first element in &lt;var&gt;x-coordinates&lt;/var&gt;. Specifying multiple coordinates is possible, although usually this doesn&amp;rsquo;t make sense.</source>
          <target state="translated">从当前点到 &lt;var&gt;x-coordinates&lt;/var&gt; 的第一个元素画一条水平线。可以指定多个坐标，尽管通常这没有意义。</target>
        </trans-unit>
        <trans-unit id="fc96b5ad985774d64b653e36cdab50823307cf58" translate="yes" xml:space="preserve">
          <source>Draw a line from the current point to the first element in &lt;var&gt;points&lt;/var&gt;, a list of X/Y position pairs. If more than one point is specified, draw a polyline.</source>
          <target state="translated">从当前点到 &lt;var&gt;points&lt;/var&gt; 中的第一个元素（X / Y位置对的列表）画一条线。如果指定了多个点，则绘制一条折线。</target>
        </trans-unit>
        <trans-unit id="8f19cba7d8259572e26e84b5303e9f9c55b3cbc4" translate="yes" xml:space="preserve">
          <source>Draw vertical lines.</source>
          <target state="translated">画垂直线。</target>
        </trans-unit>
        <trans-unit id="8c8cb95ea0721106cfd07aa2040778dfd5b9815e" translate="yes" xml:space="preserve">
          <source>Drawing Lists as Box Diagrams</source>
          <target state="translated">将列表画成框图</target>
        </trans-unit>
        <trans-unit id="d356c0bc1d2b6c148f709aa3bfd04ac3facca290" translate="yes" xml:space="preserve">
          <source>Drawing a horizontal line through a menu.</source>
          <target state="translated">通过菜单画一条水平线。</target>
        </trans-unit>
        <trans-unit id="e3aff30d699314de92ad6b8497c8dbae5b4c0f0c" translate="yes" xml:space="preserve">
          <source>Drawing pictures of lists.</source>
          <target state="translated">绘制清单图片。</target>
        </trans-unit>
        <trans-unit id="0922ad7bde79830b3446a49a9f96bc185eb8ce22" translate="yes" xml:space="preserve">
          <source>Dropping (see &lt;a href=&quot;drag-and-drop#Drag-and-Drop&quot;&gt;Drag and Drop&lt;/a&gt;) on child frames is not guaranteed to work on all window-systems. Some will drop the object on the parent frame or on some ancestor instead.</source>
          <target state="translated">不能保证子框架上的&lt;a href=&quot;drag-and-drop#Drag-and-Drop&quot;&gt;拖放&lt;/a&gt;（请参见拖放）在所有窗口系统上都不能正常工作。某些对象会将对象放置在父框架或某些祖先上。</target>
        </trans-unit>
        <trans-unit id="0d96e0007e7a77f7cd3933f5aef11df2f10c72d1" translate="yes" xml:space="preserve">
          <source>Dumping Emacs uses a special value of &lt;code&gt;load-path&lt;/code&gt;. If you use a</source>
          <target state="translated">转储Emacs使用特殊的 &lt;code&gt;load-path&lt;/code&gt; 值。如果您使用</target>
        </trans-unit>
        <trans-unit id="95fa8648a285817054eb4fea3aef35dede41872f" translate="yes" xml:space="preserve">
          <source>During completion for the commands &lt;code&gt;describe-variable&lt;/code&gt; and &lt;code&gt;describe-function&lt;/code&gt;, Emacs will try to load files which may contain definitions matching the prefix being completed. The variable &lt;code&gt;definition-prefixes&lt;/code&gt; holds a hashtable which maps a prefix to the corresponding list of files to load for it. Entries to this mapping are added by calls to &lt;code&gt;register-definition-prefixes&lt;/code&gt; which are generated by &lt;code&gt;update-file-autoloads&lt;/code&gt; (see &lt;a href=&quot;autoload#Autoload&quot;&gt;Autoload&lt;/a&gt;). Files which don&amp;rsquo;t contain any definitions worth loading (test files, for examples), should set &lt;code&gt;autoload-compute-prefixes&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt; as a file-local variable.</source>
          <target state="translated">在完成 &lt;code&gt;describe-variable&lt;/code&gt; 和 &lt;code&gt;describe-function&lt;/code&gt; 命令的过程中，Emacs将尝试加载可能包含与正在完成的前缀匹配的定义的文件。变量 &lt;code&gt;definition-prefixes&lt;/code&gt; 包含一个哈希表，该哈希表将前缀映射到要为其加载的文件的相应列表。通过调用对 &lt;code&gt;update-file-autoloads&lt;/code&gt; 生成的 &lt;code&gt;register-definition-prefixes&lt;/code&gt; 添加，可以添加到此映射的条目（请参见&lt;a href=&quot;autoload#Autoload&quot;&gt;Autoload&lt;/a&gt;）。不包含任何值得加载的定义的文件（例如测试文件）应将 &lt;code&gt;autoload-compute-prefixes&lt;/code&gt; 设置为 &lt;code&gt;nil&lt;/code&gt; 作为文件本地变量。</target>
        </trans-unit>
        <trans-unit id="86c088d03b10c53d3f0537037e709113573ae6fe" translate="yes" xml:space="preserve">
          <source>During decoding, the translation table&amp;rsquo;s translations are applied to the characters that result from ordinary decoding. If a coding system has the property &lt;code&gt;:decode-translation-table&lt;/code&gt;, that specifies the translation table to use, or a list of translation tables to apply in sequence. (This is a property of the coding system, as returned by &lt;code&gt;coding-system-get&lt;/code&gt;, not a property of the symbol that is the coding system&amp;rsquo;s name. See &lt;a href=&quot;coding-system-basics#Coding-System-Basics&quot;&gt;Basic Concepts of Coding Systems&lt;/a&gt;.) Finally, if &lt;code&gt;standard-translation-table-for-decode&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the resulting characters are translated by that table.</source>
          <target state="translated">在解码期间，转换表的转换将应用于普通解码产生的字符。如果编码系统具有 &lt;code&gt;:decode-translation-table&lt;/code&gt; 属性，则该属性指定要使用的翻译表，或按顺序应用的翻译表列表。 （这是由 &lt;code&gt;coding-system-get&lt;/code&gt; 返回的编码系统的属性，而不是作为编码系统名称的符号的属性。请参阅编码系统的&lt;a href=&quot;coding-system-basics#Coding-System-Basics&quot;&gt;基本概念&lt;/a&gt;。）最后，如果 &lt;code&gt;standard-translation-table-for-decode&lt;/code&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，结果字符由该表转换。</target>
        </trans-unit>
        <trans-unit id="1e2d6913f37cab64feb54fd1decfc9d9cf80a826" translate="yes" xml:space="preserve">
          <source>During encoding, the translation table&amp;rsquo;s translations are applied to the characters in the buffer, and the result of translation is actually encoded. If a coding system has property &lt;code&gt;:encode-translation-table&lt;/code&gt;, that specifies the translation table to use, or a list of translation tables to apply in sequence. In addition, if the variable &lt;code&gt;standard-translation-table-for-encode&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it specifies the translation table to use for translating the result.</source>
          <target state="translated">在编码期间，转换表的转换将应用于缓冲区中的字符，并且转换结果实际上已编码。如果编码系统具有 &lt;code&gt;:encode-translation-table&lt;/code&gt; 属性，则该属性指定要使用的翻译表，或按顺序应用的翻译表列表。另外，如果变量 &lt;code&gt;standard-translation-table-for-encode&lt;/code&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则它指定用于转换结果的转换表。</target>
        </trans-unit>
        <trans-unit id="a60e2707304846a25ff125d19667ad97d4b8f7cf" translate="yes" xml:space="preserve">
          <source>During the search, such overlays are made temporarily visible by temporarily modifying their invisible and intangible properties. If you want this to be done differently for a certain overlay, give it an &lt;code&gt;isearch-open-invisible-temporary&lt;/code&gt; property which is a function. The function is called with two arguments: the first is the overlay, and the second is &lt;code&gt;nil&lt;/code&gt; to make the overlay visible, or &lt;code&gt;t&lt;/code&gt; to make it invisible again.</source>
          <target state="translated">在搜索过程中，可以通过临时修改其不可见和无形属性来使其暂时可见。如果您希望针对某个叠加层以不同的方式执行此操作，请为其提供 &lt;code&gt;isearch-open-invisible-temporary&lt;/code&gt; 属性，该属性是一个函数。该函数使用两个参数调用：第一个是叠加层，第二个为 &lt;code&gt;nil&lt;/code&gt; 以使叠加层可见，或 &lt;code&gt;t&lt;/code&gt; 使其再次不可见。</target>
        </trans-unit>
        <trans-unit id="46041d7b3a149a23812e4e933506aabb4a9ab2f4" translate="yes" xml:space="preserve">
          <source>Dynamic Binding</source>
          <target state="translated">动态绑定</target>
        </trans-unit>
        <trans-unit id="128a473aba996b2af1d499c3022127709683f3bd" translate="yes" xml:space="preserve">
          <source>Dynamic Loading of Individual Functions</source>
          <target state="translated">单个函数的动态加载</target>
        </trans-unit>
        <trans-unit id="cc9263394df1557dab9048b7bcdb4148d36bb71b" translate="yes" xml:space="preserve">
          <source>Dynamic binding is implemented in Emacs Lisp in a simple way. Each symbol has a value cell, which specifies its current dynamic value (or absence of value). See &lt;a href=&quot;symbol-components#Symbol-Components&quot;&gt;Symbol Components&lt;/a&gt;. When a symbol is given a dynamic local binding, Emacs records the contents of the value cell (or absence thereof) in a stack, and stores the new local value in the value cell. When the binding construct finishes executing, Emacs pops the old value off the stack, and puts it in the value cell.</source>
          <target state="translated">动态绑定在Emacs Lisp中以简单的方式实现。每个符号都有一个值单元格，用于指定其当前动态值（或不存在值）。请参见&lt;a href=&quot;symbol-components#Symbol-Components&quot;&gt;符号组件&lt;/a&gt;。当符号被赋予动态本地绑定时，Emacs将值单元格的内容（或不存在）记录在堆栈中，并将新的本地值存储在值单元格中。当绑定构造完成执行时，Emacs将旧值从堆栈中弹出，并将其放入值单元格中。</target>
        </trans-unit>
        <trans-unit id="9ae7c0f42cd07828f1bf590c8d23d55e60e3fd2c" translate="yes" xml:space="preserve">
          <source>Dynamic bindings have dynamic scope and extent, as shown by the following example:</source>
          <target state="translated">动态绑定具有动态范围和程度,如下例所示。</target>
        </trans-unit>
        <trans-unit id="6a2d23ac0a1a60ebb1567eb0b607f430e882ea62" translate="yes" xml:space="preserve">
          <source>Dynamic inclusion</source>
          <target state="translated">动态包容</target>
        </trans-unit>
        <trans-unit id="85dace7cbccb6288ac9c34034ace72c0ba1992e6" translate="yes" xml:space="preserve">
          <source>Dynamic loading of documentation strings from byte-compiled files is determined, at compile time, for each byte-compiled file. It can be disabled via the option &lt;code&gt;byte-compile-dynamic-docstrings&lt;/code&gt;.</source>
          <target state="translated">在编译时，为每个字节编译的文件确定从字节编译的文件中动态加载文档字符串。可以通过选项 &lt;code&gt;byte-compile-dynamic-docstrings&lt;/code&gt; 禁用它。</target>
        </trans-unit>
        <trans-unit id="cddf8eda8cba15edd9de2d208896a5bbd1beb8e2" translate="yes" xml:space="preserve">
          <source>Dynamic loading of documentation strings.</source>
          <target state="translated">文件字符串的动态加载。</target>
        </trans-unit>
        <trans-unit id="2d6fdaf9ca04871afe2d95ccf757891e17b11eb5" translate="yes" xml:space="preserve">
          <source>Dynamic loading of individual functions.</source>
          <target state="translated">动态加载各个功能。</target>
        </trans-unit>
        <trans-unit id="75cad57a98400009355757c7d7d7bcdbea9e4c71" translate="yes" xml:space="preserve">
          <source>Dynamically Loaded Libraries</source>
          <target state="translated">动态加载的图书馆</target>
        </trans-unit>
        <trans-unit id="e0184adedf913b076626646d3f52c3b49c39ad6d" translate="yes" xml:space="preserve">
          <source>E</source>
          <target state="translated">E</target>
        </trans-unit>
        <trans-unit id="12ef1e2dc47a1a341b42f2ca521c6666dbea7d5a" translate="yes" xml:space="preserve">
          <source>EAT</source>
          <target state="translated">EAT</target>
        </trans-unit>
        <trans-unit id="816d1cf7923a918e5ec217f7d33d310e255ecaff" translate="yes" xml:space="preserve">
          <source>EIEIO</source>
          <target state="translated">EIEIO</target>
        </trans-unit>
        <trans-unit id="35252c2233b1689952b37966f3d98ef79579b119" translate="yes" xml:space="preserve">
          <source>EMACS_LIMB_MAX</source>
          <target state="translated">EMACS_LIMB_MAX</target>
        </trans-unit>
        <trans-unit id="cda4aab5bcbd0ed38717196ad5a3684cd59490a3" translate="yes" xml:space="preserve">
          <source>EOF</source>
          <target state="translated">EOF</target>
        </trans-unit>
        <trans-unit id="d1fc7fa24d222f6128354dd046b978be46a5cd49" translate="yes" xml:space="preserve">
          <source>ERT: Emacs Lisp Regression Testing</source>
          <target state="translated">ERT:Emacs Lisp回归测试</target>
        </trans-unit>
        <trans-unit id="042b890a506cb1f86b057af9f2065c60f0543326" translate="yes" xml:space="preserve">
          <source>ESC</source>
          <target state="translated">ESC</target>
        </trans-unit>
        <trans-unit id="02ca6798be3680f2fe46f378f7bd1739974388a2" translate="yes" xml:space="preserve">
          <source>ESC O</source>
          <target state="translated">ESC O</target>
        </trans-unit>
        <trans-unit id="185d2e2d796a6ed477b87b5299821b76c9453398" translate="yes" xml:space="preserve">
          <source>ESC O P</source>
          <target state="translated">ESC O P</target>
        </trans-unit>
        <trans-unit id="efea0065f1cd59fe153098de1076d7ad99a795c6" translate="yes" xml:space="preserve">
          <source>ESC [</source>
          <target state="translated">ESC [</target>
        </trans-unit>
        <trans-unit id="7c8614de8fb44c996aec575dd8405fad70b3c112" translate="yes" xml:space="preserve">
          <source>ESC a</source>
          <target state="translated">ESC a</target>
        </trans-unit>
        <trans-unit id="11daa9e0c6c68f082faf8d6db21ec8f42d4afa0c" translate="yes" xml:space="preserve">
          <source>ESC b</source>
          <target state="translated">ESC b</target>
        </trans-unit>
        <trans-unit id="adf9a7197eabefbcbc072a3d07809c0f776d2cb6" translate="yes" xml:space="preserve">
          <source>ESCESC</source>
          <target state="translated">ESCESC</target>
        </trans-unit>
        <trans-unit id="2b8d8e576670837bf59ee1e2936925a3bbca393c" translate="yes" xml:space="preserve">
          <source>ESCF1</source>
          <target state="translated">ESCF1</target>
        </trans-unit>
        <trans-unit id="15a145a0865fc87452b6849492a43aa1f081119e" translate="yes" xml:space="preserve">
          <source>ESCend</source>
          <target state="translated">ESCend</target>
        </trans-unit>
        <trans-unit id="e56d6e9c1a313add08aaf693766cfaa8dbb47041" translate="yes" xml:space="preserve">
          <source>EST</source>
          <target state="translated">EST</target>
        </trans-unit>
        <trans-unit id="effa508f014d094d733f5635009cbe6601d52a75" translate="yes" xml:space="preserve">
          <source>Each &lt;var&gt;bitmap&lt;/var&gt; should be a symbol specifying the fringe bitmap to be displayed for that logical cursor type. See &lt;a href=&quot;fringe-bitmaps#Fringe-Bitmaps&quot;&gt;Fringe Bitmaps&lt;/a&gt;.</source>
          <target state="translated">每个 &lt;var&gt;bitmap&lt;/var&gt; 应该是一个符号，用于指定要为该逻辑光标类型显示的边缘位图。请参见&lt;a href=&quot;fringe-bitmaps#Fringe-Bitmaps&quot;&gt;边缘位图&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="266e2dc31b4b84e4b89de45f40ae556c79fb08c2" translate="yes" xml:space="preserve">
          <source>Each &lt;var&gt;bitmaps&lt;/var&gt; value may be a list of symbols &lt;code&gt;(&lt;var&gt;left&lt;/var&gt;
&lt;var&gt;right&lt;/var&gt; [&lt;var&gt;left1&lt;/var&gt; &lt;var&gt;right1&lt;/var&gt;])&lt;/code&gt;. The &lt;var&gt;left&lt;/var&gt; and &lt;var&gt;right&lt;/var&gt; symbols specify the bitmaps shown in the left and/or right fringe, for the specific indicator. &lt;var&gt;left1&lt;/var&gt; and &lt;var&gt;right1&lt;/var&gt; are specific to the &lt;code&gt;bottom&lt;/code&gt; and &lt;code&gt;top-bottom&lt;/code&gt; indicators, and are used to indicate that the last text line has no final newline. Alternatively, &lt;var&gt;bitmaps&lt;/var&gt; may be a single symbol which is used in both left and right fringes.</source>
          <target state="translated">每个 &lt;var&gt;bitmaps&lt;/var&gt; 值可以是一个符号列表 &lt;code&gt;(&lt;var&gt;left&lt;/var&gt; &lt;var&gt;right&lt;/var&gt; [&lt;var&gt;left1&lt;/var&gt; &lt;var&gt;right1&lt;/var&gt;])&lt;/code&gt; 。的 &lt;var&gt;left&lt;/var&gt; 和 &lt;var&gt;right&lt;/var&gt; 的符号指定要在左和/或右边缘中示出的位图，用于特定指示符。 &lt;var&gt;left1&lt;/var&gt; 和 &lt;var&gt;right1&lt;/var&gt; 特定于 &lt;code&gt;bottom&lt;/code&gt; 和 &lt;code&gt;top-bottom&lt;/code&gt; 指示器，用于指示最后一个文本行没有最终换行符。替代地， &lt;var&gt;bitmaps&lt;/var&gt; 可以是在左右边缘都使用的单个符号。</target>
        </trans-unit>
        <trans-unit id="166174c1e575a285ef181abdaa07134f0e9f5c5f" translate="yes" xml:space="preserve">
          <source>Each &lt;var&gt;cursor-type&lt;/var&gt; should be one of &lt;code&gt;box&lt;/code&gt;, &lt;code&gt;hollow&lt;/code&gt;, &lt;code&gt;bar&lt;/code&gt;, &lt;code&gt;hbar&lt;/code&gt;, or &lt;code&gt;hollow-small&lt;/code&gt;. The first four have the same meanings as in the &lt;code&gt;cursor-type&lt;/code&gt; frame parameter (see &lt;a href=&quot;cursor-parameters#Cursor-Parameters&quot;&gt;Cursor Parameters&lt;/a&gt;). The &lt;code&gt;hollow-small&lt;/code&gt; type is used instead of &lt;code&gt;hollow&lt;/code&gt; when the normal &lt;code&gt;hollow-rectangle&lt;/code&gt; bitmap is too tall to fit on a specific display line.</source>
          <target state="translated">每个 &lt;var&gt;cursor-type&lt;/var&gt; 应为 &lt;code&gt;box&lt;/code&gt; ， &lt;code&gt;hollow&lt;/code&gt; ， &lt;code&gt;bar&lt;/code&gt; ， &lt;code&gt;hbar&lt;/code&gt; 或 &lt;code&gt;hollow-small&lt;/code&gt; 。前四个含义与 &lt;code&gt;cursor-type&lt;/code&gt; frame参数中的含义相同（请参阅&lt;a href=&quot;cursor-parameters#Cursor-Parameters&quot;&gt;Cursor Parameters&lt;/a&gt;）。的 &lt;code&gt;hollow-small&lt;/code&gt; 型来代替 &lt;code&gt;hollow&lt;/code&gt; 当正常 &lt;code&gt;hollow-rectangle&lt;/code&gt; 位图太高，以适应特定的显示线。</target>
        </trans-unit>
        <trans-unit id="6cb043c5d2a35e5e89877851f720861156b38447" translate="yes" xml:space="preserve">
          <source>Each &lt;var&gt;indicator&lt;/var&gt; should be one of the following symbols:</source>
          <target state="translated">每个 &lt;var&gt;indicator&lt;/var&gt; 应为以下符号之一：</target>
        </trans-unit>
        <trans-unit id="214ed5e3cc5ef10a56ac63989e2bed399edecb13" translate="yes" xml:space="preserve">
          <source>Each &lt;var&gt;item&lt;/var&gt; should be a cons cell, &lt;code&gt;(&lt;var&gt;line&lt;/var&gt; . &lt;var&gt;value&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;line&lt;/var&gt; is a string and &lt;var&gt;value&lt;/var&gt; is the value to return if that &lt;var&gt;line&lt;/var&gt; is chosen. Unlike in a menu keymap, a &lt;code&gt;nil&lt;/code&gt;&lt;var&gt;value&lt;/var&gt; does not make the menu item non-selectable. Alternatively, each &lt;var&gt;item&lt;/var&gt; can be a string rather than a cons cell; this makes a non-selectable menu item.</source>
          <target state="translated">每个 &lt;var&gt;item&lt;/var&gt; 应该是一个cons单元， &lt;code&gt;(&lt;var&gt;line&lt;/var&gt; . &lt;var&gt;value&lt;/var&gt;)&lt;/code&gt; ，其中 &lt;var&gt;line&lt;/var&gt; 是一个字符串， &lt;var&gt;value&lt;/var&gt; 是如果该返回的值 &lt;var&gt;line&lt;/var&gt; 被选择。与菜单键图中的不同， &lt;code&gt;nil&lt;/code&gt; &lt;var&gt;value&lt;/var&gt; 不会使菜单项不可选择。或者，每个 &lt;var&gt;item&lt;/var&gt; 可以是字符串，而不是cons单元格；这将导致无法选择的菜单项。</target>
        </trans-unit>
        <trans-unit id="c14a95be6848d8cce2e11a5b8c2bade65e785bb6" translate="yes" xml:space="preserve">
          <source>Each &lt;var&gt;pattern&lt;/var&gt; has to be a &lt;em&gt;pcase pattern&lt;/em&gt;, which can use either one of the core patterns defined below, or one of the patterns defined via &lt;code&gt;pcase-defmacro&lt;/code&gt; (see &lt;a href=&quot;extending-pcase#Extending-pcase&quot;&gt;Extending pcase&lt;/a&gt;).</source>
          <target state="translated">每个 &lt;var&gt;pattern&lt;/var&gt; 都必须是&lt;em&gt;pcase模式&lt;/em&gt;，可以使用以下定义的核心模式之一，也可以使用通过 &lt;code&gt;pcase-defmacro&lt;/code&gt; 定义的模式之一（请参阅&lt;a href=&quot;extending-pcase#Extending-pcase&quot;&gt;扩展pcase&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="e88d2cad4124f0d2b0ffdde305341b3395b3a5c5" translate="yes" xml:space="preserve">
          <source>Each Emacs Lisp package should have one main customization group which contains all the options, faces and other groups in the package. If the package has a small number of options and faces, use just one group and put everything in it. When there are more than twenty or so options and faces, then you should structure them into subgroups, and put the subgroups under the package&amp;rsquo;s main customization group. It is OK to put some of the options and faces in the package&amp;rsquo;s main group alongside the subgroups.</source>
          <target state="translated">每个Emacs Lisp软件包应具有一个主要的自定义组，其中包含该软件包中的所有选项，面和其他组。如果包装盒中的选件和面孔较少，则仅使用一组并将所有物品放入其中。如果有超过二十个左右的选项和面，则应将它们分为子组，并将这些子组放在程序包的主要自定义组下。可以将某些选项和面放在包的主组中并与子组一起放置。</target>
        </trans-unit>
        <trans-unit id="5f6033aab130af56e580c9dd562b7a59876a864f" translate="yes" xml:space="preserve">
          <source>Each Emacs window (aside from minibuffer windows) typically has a mode line at the bottom, which displays status information about the buffer displayed in the window. The mode line contains information about the buffer, such as its name, associated file, depth of recursive editing, and major and minor modes. A window can also have a &lt;em&gt;header line&lt;/em&gt;, which is much like the mode line but appears at the top of the window.</source>
          <target state="translated">每个Emacs窗口（除了微型缓冲区窗口外）通常在底部都有一个模式行，该模式行显示有关窗口中显示的缓冲区的状态信息。模式行包含有关缓冲区的信息，例如缓冲区的名称，关联文件，递归编辑的深度以及主要和次要模式。窗口也可以具有&lt;em&gt;标题行&lt;/em&gt;，该&lt;em&gt;标题行&lt;/em&gt;与模式行非常相似，但出现在窗口的顶部。</target>
        </trans-unit>
        <trans-unit id="8c6317ebe0f6d8aa4fb2bae37cd27d1bb0f9123b" translate="yes" xml:space="preserve">
          <source>Each alist element corresponds to one archive, and should have the form &lt;code&gt;(&lt;var&gt;id&lt;/var&gt; . &lt;var&gt;location&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;id&lt;/var&gt; is the name of the archive (a string) and &lt;var&gt;location&lt;/var&gt; is its &lt;em&gt;base location&lt;/em&gt; (a string).</source>
          <target state="translated">每个ALIST元件对应于一个存档，并应具有的形式 &lt;code&gt;(&lt;var&gt;id&lt;/var&gt; . &lt;var&gt;location&lt;/var&gt;)&lt;/code&gt; ，其中 &lt;var&gt;id&lt;/var&gt; 是归档（字符串）的名称和 &lt;var&gt;location&lt;/var&gt; 是它的&lt;em&gt;基本位置&lt;/em&gt;（字符串）。</target>
        </trans-unit>
        <trans-unit id="d4f07dd626ea5ff28aeefdca103d4e94ee03a16e" translate="yes" xml:space="preserve">
          <source>Each argument in &lt;var&gt;specs&lt;/var&gt; has the form of a property list, and each one should specify at least the &lt;code&gt;:type&lt;/code&gt; property and either the &lt;code&gt;:file&lt;/code&gt; or the &lt;code&gt;:data&lt;/code&gt; property. The value of &lt;code&gt;:type&lt;/code&gt; should be a symbol specifying the image type, the value of &lt;code&gt;:file&lt;/code&gt; is the file to load the image from, and the value of &lt;code&gt;:data&lt;/code&gt; is a string containing the actual image data. Here is an example:</source>
          <target state="translated">&lt;var&gt;specs&lt;/var&gt; 中的每个参数都具有属性列表的形式，每个参数都应至少指定 &lt;code&gt;:type&lt;/code&gt; 属性以及 &lt;code&gt;:file&lt;/code&gt; 或 &lt;code&gt;:data&lt;/code&gt; 属性。 &lt;code&gt;:type&lt;/code&gt; 的值应该是指定图像类型的符号， &lt;code&gt;:file&lt;/code&gt; 的值是从中加载图像的文件，而 &lt;code&gt;:data&lt;/code&gt; 的值是包含实际图像数据的字符串。这是一个例子：</target>
        </trans-unit>
        <trans-unit id="bdf9173b5972e775fde1cf136d947eea39e89247" translate="yes" xml:space="preserve">
          <source>Each buffer has a &lt;em&gt;category table&lt;/em&gt; which records which categories are defined and also which characters belong to each category. Each category table defines its own categories, but normally these are initialized by copying from the standard categories table, so that the standard categories are available in all modes.</source>
          <target state="translated">每个缓冲区都有一个&lt;em&gt;类别表&lt;/em&gt;，该&lt;em&gt;表&lt;/em&gt;记录定义了哪些类别以及哪些字符属于每个类别。每个类别表定义了自己的类别，但是通常通过从标准类别表中进行复制来初始化这些类别，以便在所有模式下都可以使用标准类别。</target>
        </trans-unit>
        <trans-unit id="f89748f49f4b8c3d5fd63441bd60cca9df74bf96" translate="yes" xml:space="preserve">
          <source>Each buffer has a local keymap to override the standard (global) bindings. A minor mode can also override them.</source>
          <target state="translated">每个缓冲区都有一个本地的键图,可以覆盖标准(全局)绑定。小模式也可以覆盖它们。</target>
        </trans-unit>
        <trans-unit id="5e447b10eb6df01c4e3d0c2a4e80be30c76bc73d" translate="yes" xml:space="preserve">
          <source>Each buffer has a special marker, which is designated &lt;em&gt;the mark&lt;/em&gt;. When a buffer is newly created, this marker exists but does not point anywhere; this means that the mark doesn&amp;rsquo;t exist in that buffer yet. Subsequent commands can set the mark.</source>
          <target state="translated">每个缓冲区都有一个特殊的标记，称为&lt;em&gt;标记&lt;/em&gt;。当新创建一个缓冲区时，该标记存在但不指向任何地方。这意味着该缓冲区中尚不存在该标记。后续命令可以设置标记。</target>
        </trans-unit>
        <trans-unit id="46855e8bf9790b10ba3d7f48ea7bf1808928b7c0" translate="yes" xml:space="preserve">
          <source>Each buffer has a unique name, which is a string. Many of the functions that work on buffers accept either a buffer or a buffer name as an argument. Any argument called &lt;var&gt;buffer-or-name&lt;/var&gt; is of this sort, and an error is signaled if it is neither a string nor a buffer. Any argument called &lt;var&gt;buffer&lt;/var&gt; must be an actual buffer object, not a name.</source>
          <target state="translated">每个缓冲区都有一个唯一的名称，该名称是一个字符串。在缓冲区上起作用的许多函数都接受缓冲区或缓冲区名称作为参数。任何称为 &lt;var&gt;buffer-or-name&lt;/var&gt; 的参数都是这种类型，如果它既不是字符串也不是缓冲区，则将指示错误。任何称为 &lt;var&gt;buffer&lt;/var&gt; 的参数都必须是实际的缓冲区对象，而不是名称。</target>
        </trans-unit>
        <trans-unit id="182be56e3b3a51020ca83602b9fc5c377b1a7b76" translate="yes" xml:space="preserve">
          <source>Each buffer has its own major mode, and each major mode has its own idea of the syntax class of various characters. For example, in Lisp mode, the character &amp;lsquo;</source>
          <target state="translated">每个缓冲区都有自己的主模式，每个主模式对各种字符的语法类都有自己的想法。例如，在Lisp模式下，字符'</target>
        </trans-unit>
        <trans-unit id="29b5c253a0d151a49ff410c88e774910588ae346" translate="yes" xml:space="preserve">
          <source>Each buffer has its own value of point, which is independent of the value of point in other buffers. Each window also has a value of point, which is independent of the value of point in other windows on the same buffer. This is why point can have different values in various windows that display the same buffer. When a buffer appears in only one window, the buffer&amp;rsquo;s point and the window&amp;rsquo;s point normally have the same value, so the distinction is rarely important. See &lt;a href=&quot;window-point#Window-Point&quot;&gt;Window Point&lt;/a&gt;, for more details.</source>
          <target state="translated">每个缓冲区都有其自己的point值，该值与其他缓冲区中的point值无关。每个窗口还具有一个point值，该值独立于同一缓冲区中其他窗口中的point值。这就是为什么point在显示相同缓冲区的各种窗口中可以具有不同的值的原因。当一个缓冲区仅出现在一个窗口中时，该缓冲区的点和该窗口的点通常具有相同的值，因此区分几乎不重要。有关更多详细信息，请参见&lt;a href=&quot;window-point#Window-Point&quot;&gt;Window Point&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6088d83a1bfb5707a7c8e330babd382857dc6487" translate="yes" xml:space="preserve">
          <source>Each button has an associated list of properties defining its appearance and behavior, and other arbitrary properties may be used for application specific purposes. The following properties have special meaning to the Button package:</source>
          <target state="translated">每个按钮都有一个相关的属性列表,定义了它的外观和行为,其他的任意属性可以用于应用程序的特定目的。以下属性对Button包有特殊意义。</target>
        </trans-unit>
        <trans-unit id="47c281267996ad33cafe0a510c7bbab86fa4c24e" translate="yes" xml:space="preserve">
          <source>Each category has a name, which is an</source>
          <target state="translated">每个类别都有一个名称,这是一个</target>
        </trans-unit>
        <trans-unit id="ad267f6e9c1b7d73c51055d7770ece8131529a7b" translate="yes" xml:space="preserve">
          <source>Each char-table has a &lt;em&gt;subtype&lt;/em&gt;, a symbol, which serves two purposes:</source>
          <target state="translated">每个char表都有一个&lt;em&gt;子类型&lt;/em&gt;（一个符号），它有两个作用：</target>
        </trans-unit>
        <trans-unit id="6c5be0e6844b629ad423f23ba34a8811a71af497" translate="yes" xml:space="preserve">
          <source>Each character position in a buffer or a string can have a &lt;em&gt;text property list&lt;/em&gt;, much like the property list of a symbol (see &lt;a href=&quot;property-lists#Property-Lists&quot;&gt;Property Lists&lt;/a&gt;). The properties belong to a particular character at a particular place, such as, the letter &amp;lsquo;</source>
          <target state="translated">缓冲区或字符串中的每个字符位置都可以具有&lt;em&gt;文本属性列表&lt;/em&gt;，这与符号的属性列表非常相似（请参见&lt;a href=&quot;property-lists#Property-Lists&quot;&gt;属性列表&lt;/a&gt;）。这些属性在特定位置属于特定字符，例如字母&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="094f0066f73625c09e48be172c8999a5532948d8" translate="yes" xml:space="preserve">
          <source>Each child window can be either a live window, or an internal window (which in turn would have its own child windows). Therefore, each internal window can be thought of as occupying a certain rectangular &lt;em&gt;screen area&lt;/em&gt;&amp;mdash;the union of the areas occupied by the live windows that are ultimately descended from it.</source>
          <target state="translated">每个子窗口可以是活动窗口，也可以是内部窗口（依次具有自己的子窗口）。因此，每个内部窗口都可以视为占据了一定的矩形&lt;em&gt;屏幕区域&lt;/em&gt;-最终从其降级的活动窗口所占&lt;em&gt;面积&lt;/em&gt;的并集。</target>
        </trans-unit>
        <trans-unit id="7dd2617202e2f0d88eeeb7eafc129bd79afb41b1" translate="yes" xml:space="preserve">
          <source>Each clause in &lt;var&gt;clauses&lt;/var&gt; has the form: &lt;code&gt;(&lt;var&gt;pattern&lt;/var&gt;&amp;nbsp;&lt;var&gt;body-forms&lt;/var&gt;&amp;hellip;)&lt;/code&gt;.</source>
          <target state="translated">在每个子句 &lt;var&gt;clauses&lt;/var&gt; 的形式为： &lt;code&gt;(&lt;var&gt;pattern&lt;/var&gt;&amp;nbsp;&lt;var&gt;body-forms&lt;/var&gt;&amp;hellip;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="371b2398ceeeec78348a8871921a9ebac3ed6fc6" translate="yes" xml:space="preserve">
          <source>Each element has the form &lt;code&gt;(&lt;var&gt;level&lt;/var&gt; &lt;var&gt;string&lt;/var&gt;
&lt;var&gt;function&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;level&lt;/var&gt; is the severity level it defines. &lt;var&gt;string&lt;/var&gt; specifies the textual description of this level. &lt;var&gt;string&lt;/var&gt; should use &amp;lsquo;</source>
          <target state="translated">每个元素都具有形式 &lt;code&gt;(&lt;var&gt;level&lt;/var&gt; &lt;var&gt;string&lt;/var&gt; &lt;var&gt;function&lt;/var&gt;)&lt;/code&gt; ，其中 &lt;var&gt;level&lt;/var&gt; 是它定义的严重性级别。 &lt;var&gt;string&lt;/var&gt; 指定此级别的文字描述。 &lt;var&gt;string&lt;/var&gt; 应使用'</target>
        </trans-unit>
        <trans-unit id="54bf49af3c895879d230d0733b0f756348a366f5" translate="yes" xml:space="preserve">
          <source>Each element has the form &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; &lt;var&gt;number&lt;/var&gt; . &lt;var&gt;rgb&lt;/var&gt;)&lt;/code&gt; or &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; &lt;var&gt;number&lt;/var&gt;)&lt;/code&gt;. Here, &lt;var&gt;name&lt;/var&gt; is the color name, &lt;var&gt;number&lt;/var&gt; is the number used to specify it to the terminal. If present, &lt;var&gt;rgb&lt;/var&gt; is a list of three color values (for red, green, and blue) that says what the color actually looks like.</source>
          <target state="translated">每个元素具有形式 &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; &lt;var&gt;number&lt;/var&gt; . &lt;var&gt;rgb&lt;/var&gt;)&lt;/code&gt; 或 &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; &lt;var&gt;number&lt;/var&gt;)&lt;/code&gt; 。在这里， &lt;var&gt;name&lt;/var&gt; 是颜色名称， &lt;var&gt;number&lt;/var&gt; 是用于向终端指定颜色的数字。如果存在， &lt;var&gt;rgb&lt;/var&gt; 是三个颜色值（用于红色，绿色和蓝色）的列表，该值表示颜色的实际外观。</target>
        </trans-unit>
        <trans-unit id="83b7a769b44739d88eeb24f5b3657bafc5d91c99" translate="yes" xml:space="preserve">
          <source>Each element in &lt;var&gt;specs&lt;/var&gt; should have the form &lt;code&gt;(&lt;var&gt;property&lt;/var&gt;
&lt;var&gt;args&lt;/var&gt;&amp;hellip;)&lt;/code&gt;, which should not be quoted. These have the following effects:</source>
          <target state="translated">中的每个元素 &lt;var&gt;specs&lt;/var&gt; 的格式应该为 &lt;code&gt;(&lt;var&gt;property&lt;/var&gt; &lt;var&gt;args&lt;/var&gt;&amp;hellip;)&lt;/code&gt; ，这不应该被引用。这些具有以下效果：</target>
        </trans-unit>
        <trans-unit id="247a7be0573252e630ce78d92b936b8015dbca23" translate="yes" xml:space="preserve">
          <source>Each element in the list is a vector of the following form:</source>
          <target state="translated">列表中的每个元素都是以下形式的向量。</target>
        </trans-unit>
        <trans-unit id="418f4b46b873574b39cf124bac88f49c2bdd301c" translate="yes" xml:space="preserve">
          <source>Each element in this alist describes one loaded library (including libraries that are preloaded at startup). It is a list whose &lt;small&gt;CAR&lt;/small&gt; is the absolute file name of the library (a string). The rest of the list elements have these forms:</source>
          <target state="translated">此列表中的每个元素都描述了一个已加载的库（包括在启动时预加载的库）。它是一个列表，其&lt;small&gt;CAR&lt;/small&gt;是库的绝对文件名（字符串）。列表元素的其余部分具有以下形式：</target>
        </trans-unit>
        <trans-unit id="344226d58792cbe08f0ee32eb082be5d6582a4c7" translate="yes" xml:space="preserve">
          <source>Each element is a list of the form &lt;code&gt;(&lt;var&gt;library&lt;/var&gt;&amp;nbsp;&lt;var&gt;files&lt;/var&gt;&amp;hellip;)&lt;/code&gt;, where the &lt;code&gt;car&lt;/code&gt; is a symbol representing a supported external library, and the rest are strings giving alternate filenames for that library.</source>
          <target state="translated">每个元素都是表单的列表 &lt;code&gt;(&lt;var&gt;library&lt;/var&gt;&amp;nbsp;&lt;var&gt;files&lt;/var&gt;&amp;hellip;)&lt;/code&gt; ，其中 &lt;code&gt;car&lt;/code&gt; 是代表受支持的外部库的符号，其余的是为该库提供备用文件名的字符串。</target>
        </trans-unit>
        <trans-unit id="d29fd04fcb13d090c757322a936c0e741e2812c4" translate="yes" xml:space="preserve">
          <source>Each element of &lt;code&gt;font-lock-keywords&lt;/code&gt; should have one of these forms:</source>
          <target state="translated">&lt;code&gt;font-lock-keywords&lt;/code&gt; 的每个元素都应具有以下形式之一：</target>
        </trans-unit>
        <trans-unit id="038d0ef67cc096bc0eba55db2cb42db8573d10bb" translate="yes" xml:space="preserve">
          <source>Each element of &lt;code&gt;font-lock-keywords&lt;/code&gt; specifies how to find certain cases of text, and how to highlight those cases. Font Lock mode processes the elements of &lt;code&gt;font-lock-keywords&lt;/code&gt; one by one, and for each element, it finds and handles all matches. Ordinarily, once part of the text has been fontified already, this cannot be overridden by a subsequent match in the same text; but you can specify different behavior using the &lt;var&gt;override&lt;/var&gt; element of a &lt;var&gt;subexp-highlighter&lt;/var&gt;.</source>
          <target state="translated">&lt;code&gt;font-lock-keywords&lt;/code&gt; 的每个元素都指定如何查找文本的某些情况以及如何突出显示这些情况。字体锁定模式一一处理 &lt;code&gt;font-lock-keywords&lt;/code&gt; 的元素，然后针对每个元素查找并处理所有匹配项。通常，一旦文本的一部分已经被字体化，则该文本不能被同一文本中的后续匹配所覆盖。但是您可以使用 &lt;var&gt;subexp-highlighter&lt;/var&gt; 的 &lt;var&gt;override&lt;/var&gt; 元素指定其他行为。</target>
        </trans-unit>
        <trans-unit id="c3ecb50f451b69d67c29a1f841163c9a51b4dd1c" translate="yes" xml:space="preserve">
          <source>Each element of &lt;var&gt;bindings&lt;/var&gt; is on the form &lt;code&gt;(&lt;var&gt;name&lt;/var&gt;&amp;nbsp;[&lt;var&gt;arglist&lt;/var&gt;]&amp;nbsp;&lt;var&gt;rx-form&lt;/var&gt;)&lt;/code&gt;, where the parts have the same meaning as in &lt;code&gt;rx-define&lt;/code&gt; above. Example:</source>
          <target state="translated">&lt;var&gt;bindings&lt;/var&gt; 每个元素都采用形式 &lt;code&gt;(&lt;var&gt;name&lt;/var&gt;&amp;nbsp;[&lt;var&gt;arglist&lt;/var&gt;]&amp;nbsp;&lt;var&gt;rx-form&lt;/var&gt;)&lt;/code&gt; ，其中各部分的含义与上述 &lt;code&gt;rx-define&lt;/code&gt; 中的含义相同。例：</target>
        </trans-unit>
        <trans-unit id="f5841ba6e4abfd446a51aa58c6afc36d45a9a72a" translate="yes" xml:space="preserve">
          <source>Each element of the list specifies a criterion for invisibility; if a character&amp;rsquo;s &lt;code&gt;invisible&lt;/code&gt; property fits any one of these criteria, the character is invisible. The list can have two kinds of elements:</source>
          <target state="translated">列表的每个元素都指定了隐身条件；如果角色的 &lt;code&gt;invisible&lt;/code&gt; 属性符合以下任一条件，则该字符不可见。该列表可以包含两种元素：</target>
        </trans-unit>
        <trans-unit id="0aa0938815ccffdc049f9d52f230709c273f88f4" translate="yes" xml:space="preserve">
          <source>Each entry has a key which represents the algorithm, followed by a plist with internal details about the algorithm. The plist will have &lt;code&gt;:type gnutls-digest-algorithm&lt;/code&gt; and also will have the key &lt;code&gt;:digest-algorithm-length 64&lt;/code&gt; to indicate the size, in bytes, of the resulting digest.</source>
          <target state="translated">每个条目都有一个代表算法的键，后跟一个带有有关该算法内部详细信息的plist。plist将具有 &lt;code&gt;:type gnutls-digest-algorithm&lt;/code&gt; 类型，并且还将具有 &lt;code&gt;:digest-algorithm-length 64&lt;/code&gt; 密钥，以指示结果摘要的大小（以字节为单位）。</target>
        </trans-unit>
        <trans-unit id="3ed4bcab3f06461a767acaa6c6d4cbcad9ab18be" translate="yes" xml:space="preserve">
          <source>Each entry has a key which represents the algorithm, followed by a plist with internal details about the algorithm. The plist will have &lt;code&gt;:type gnutls-mac-algorithm&lt;/code&gt; and also will have the keys &lt;code&gt;:mac-algorithm-length&lt;/code&gt;&lt;code&gt;:mac-algorithm-keysize&lt;/code&gt;&lt;code&gt;:mac-algorithm-noncesize&lt;/code&gt; to indicate the size, in bytes, of the resulting hash, the key, and the nonce respectively.</source>
          <target state="translated">每个条目都有一个代表算法的键，后跟一个带有有关该算法内部详细信息的plist。 plist将具有 &lt;code&gt;:type gnutls-mac-algorithm&lt;/code&gt; 并将具有键 &lt;code&gt;:mac-algorithm-length&lt;/code&gt; &lt;code&gt;:mac-algorithm-keysize&lt;/code&gt; &lt;code&gt;:mac-algorithm-noncesize&lt;/code&gt; 指示生成的哈希值，密钥的大小（以字节为单位） ，和分别为nonce。</target>
        </trans-unit>
        <trans-unit id="572fe639f46c1ca7545e98f17128a184fffc8b14" translate="yes" xml:space="preserve">
          <source>Each entry has a key which represents the cipher, followed by a plist with internal details about the algorithm. The plist will have &lt;code&gt;:type gnutls-symmetric-cipher&lt;/code&gt; and also will have the keys &lt;code&gt;:cipher-aead-capable&lt;/code&gt; set to &lt;code&gt;nil&lt;/code&gt; or &lt;code&gt;t&lt;/code&gt; to indicate AEAD capability; and &lt;code&gt;:cipher-tagsize&lt;/code&gt;&lt;code&gt;:cipher-blocksize&lt;/code&gt;&lt;code&gt;:cipher-keysize&lt;/code&gt;&lt;code&gt;:cipher-ivsize&lt;/code&gt; to indicate the size, in bytes, of the tag, block size of the resulting data, the key, and the IV respectively.</source>
          <target state="translated">每个条目都有一个代表密码的密钥，后跟一个带有有关该算法的内部详细信息的plist。 plist将具有 &lt;code&gt;:type gnutls-symmetric-cipher&lt;/code&gt; ，还将具有 &lt;code&gt;:cipher-aead-capable&lt;/code&gt; 的密钥设置为 &lt;code&gt;nil&lt;/code&gt; 或 &lt;code&gt;t&lt;/code&gt; 以指示AEAD功能；和 &lt;code&gt;:cipher-tagsize&lt;/code&gt; &lt;code&gt;:cipher-blocksize&lt;/code&gt; &lt;code&gt;:cipher-keysize&lt;/code&gt; &lt;code&gt;:cipher-ivsize&lt;/code&gt; 分别指示标签的大小（以字节为单位），结果数据的块大小，密钥和IV。</target>
        </trans-unit>
        <trans-unit id="140b1e2bb3c49c9a73870b27a628d0d3e834d04c" translate="yes" xml:space="preserve">
          <source>Each entry in a syntax table is a &lt;em&gt;raw syntax descriptor&lt;/em&gt;: a cons cell of the form &lt;code&gt;(&lt;var&gt;syntax-code&lt;/var&gt;
. &lt;var&gt;matching-char&lt;/var&gt;)&lt;/code&gt;. &lt;var&gt;syntax-code&lt;/var&gt; is an integer which encodes the syntax class and syntax flags, according to the table below. &lt;var&gt;matching-char&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, specifies a matching character (similar to the second character in a syntax descriptor).</source>
          <target state="translated">在一个语法表的每个条目是一个&lt;em&gt;原始语法描述符&lt;/em&gt;：如下形式的cons单元 &lt;code&gt;(&lt;var&gt;syntax-code&lt;/var&gt; . &lt;var&gt;matching-char&lt;/var&gt;)&lt;/code&gt; 。 &lt;var&gt;syntax-code&lt;/var&gt; 是一个整数，根据下表对语法类别和语法标志进行编码。 &lt;var&gt;matching-char&lt;/var&gt; ，如果非 &lt;code&gt;nil&lt;/code&gt; ，则指定匹配字符（类似于语法描述符中的第二个字符）。</target>
        </trans-unit>
        <trans-unit id="84f28a2ca7dd11c2dd1dfb04bd78cce2b5a041ed" translate="yes" xml:space="preserve">
          <source>Each entry to Edebug redisplays the evaluation list by inserting each expression in the buffer, followed by its current value. It also inserts comment lines so that each expression becomes its own group. Thus, if you type</source>
          <target state="translated">Edebug的每个条目都会在缓冲区中插入每个表达式,然后是它的当前值,从而重新显示评估列表。它还插入注释行,使每个表达式成为自己的组。因此,如果您键入</target>
        </trans-unit>
        <trans-unit id="f985f0876ac047e6c61bfea4d59bcf2b7ec1d86f" translate="yes" xml:space="preserve">
          <source>Each error symbol has a set of parent error conditions that is a list of symbols. Normally this list includes the error symbol itself and the symbol &lt;code&gt;error&lt;/code&gt;. Occasionally it includes additional symbols, which are intermediate classifications, narrower than &lt;code&gt;error&lt;/code&gt; but broader than a single error symbol. For example, all the errors in accessing files have the condition &lt;code&gt;file-error&lt;/code&gt;. If we do not say here that a certain error symbol has additional error conditions, that means it has none.</source>
          <target state="translated">每个错误符号都有一组父错误条件，这些条件是符号列表。通常这个列表包括错误符号本身和符号 &lt;code&gt;error&lt;/code&gt; 。有时，它包括其他符号，它们是中间类别，比 &lt;code&gt;error&lt;/code&gt; 窄，但比单个错误符号宽。例如，访问文件中的所有错误都具有条件 &lt;code&gt;file-error&lt;/code&gt; 。如果我们在这里没有说某个错误符号具有其他错误条件，则意味着它没有任何错误条件。</target>
        </trans-unit>
        <trans-unit id="2f812eca72faa91575c25ffa918dec0300f40d65" translate="yes" xml:space="preserve">
          <source>Each error that occurs has an &lt;em&gt;error symbol&lt;/em&gt; that describes what kind of error it is, and which describes also a list of condition names (see &lt;a href=&quot;error-symbols#Error-Symbols&quot;&gt;Error Symbols&lt;/a&gt;). Emacs searches all the active &lt;code&gt;condition-case&lt;/code&gt; forms for a handler that specifies one or more of these condition names; the innermost matching &lt;code&gt;condition-case&lt;/code&gt; handles the error. Within this &lt;code&gt;condition-case&lt;/code&gt;, the first applicable handler handles the error.</source>
          <target state="translated">每个发生的&lt;em&gt;错误&lt;/em&gt;都有一个&lt;em&gt;错误符号&lt;/em&gt;，该&lt;em&gt;错误符号&lt;/em&gt;描述了哪种错误，还描述了条件名称列表（请参见&lt;a href=&quot;error-symbols#Error-Symbols&quot;&gt;错误符号&lt;/a&gt;）。Emacs在所有活动的 &lt;code&gt;condition-case&lt;/code&gt; 形式中搜索一个指定这些条件名称中一个或多个的处理程序。最里面匹配的 &lt;code&gt;condition-case&lt;/code&gt; 处理错误。在这种 &lt;code&gt;condition-case&lt;/code&gt; ，第一个适用的处理程序将处理错误。</target>
        </trans-unit>
        <trans-unit id="d76d4607d130cc67c59a005f79c0bffee88d5a52" translate="yes" xml:space="preserve">
          <source>Each face that the mode defines should, if possible, inherit from an existing Emacs face. See &lt;a href=&quot;basic-faces#Basic-Faces&quot;&gt;Basic Faces&lt;/a&gt;, and &lt;a href=&quot;faces-for-font-lock#Faces-for-Font-Lock&quot;&gt;Faces for Font Lock&lt;/a&gt;.</source>
          <target state="translated">如果可能，该模式定义的每个面孔都应继承自现有的Emacs面孔。请参见&lt;a href=&quot;basic-faces#Basic-Faces&quot;&gt;基本面孔&lt;/a&gt;和&lt;a href=&quot;faces-for-font-lock#Faces-for-Font-Lock&quot;&gt;字体锁定面孔&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="77bea3dd3402c1db33ec9bf61e4a8fa3b5763282" translate="yes" xml:space="preserve">
          <source>Each frame has a &lt;em&gt;default font&lt;/em&gt; which specifies the default character size for that frame. This size is meant when retrieving or changing the size of a frame in terms of columns or lines (see &lt;a href=&quot;size-parameters#Size-Parameters&quot;&gt;Size Parameters&lt;/a&gt;). It is also used when resizing (see &lt;a href=&quot;window-sizes#Window-Sizes&quot;&gt;Window Sizes&lt;/a&gt;) or splitting (see &lt;a href=&quot;splitting-windows#Splitting-Windows&quot;&gt;Splitting Windows&lt;/a&gt;) windows.</source>
          <target state="translated">每个框架都有一个&lt;em&gt;默认字体&lt;/em&gt;，该&lt;em&gt;字体&lt;/em&gt;指定该框架的默认字符大小。此大小是指在检索或更改以列或行为单位的框架大小时（请参见&lt;a href=&quot;size-parameters#Size-Parameters&quot;&gt;Size Parameters&lt;/a&gt;）。在调整&lt;a href=&quot;window-sizes#Window-Sizes&quot;&gt;窗口&lt;/a&gt;大小（请参见&amp;ldquo;窗口大小&amp;rdquo;）或拆分窗口（请参见&amp;ldquo;&lt;a href=&quot;splitting-windows#Splitting-Windows&quot;&gt;拆分窗口&amp;rdquo;&lt;/a&gt;）时也使用它。</target>
        </trans-unit>
        <trans-unit id="7c9aafef1930137c16544e0b68e7ffda8cd345ce" translate="yes" xml:space="preserve">
          <source>Each function in this hook should accept two arguments, &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;. It should return either a cons cell of two adjusted buffer positions, &lt;code&gt;(&lt;var&gt;new-start&lt;/var&gt; . &lt;var&gt;new-end&lt;/var&gt;)&lt;/code&gt;, or &lt;code&gt;nil&lt;/code&gt; if no adjustment is necessary. The hook functions are run in turn, repeatedly, until they all return &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">该挂钩中的每个函数都应接受两个参数 &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 。它应该返回任一调整缓冲器位置的两个cons单元， &lt;code&gt;(&lt;var&gt;new-start&lt;/var&gt; . &lt;var&gt;new-end&lt;/var&gt;)&lt;/code&gt; ，或 &lt;code&gt;nil&lt;/code&gt; ，如果没有调整是必要的。钩子函数依次重复运行，直到它们全部返回 &lt;code&gt;nil&lt;/code&gt; 为止。</target>
        </trans-unit>
        <trans-unit id="588edfd671f1f617aeb5cd122aff89277339bb27" translate="yes" xml:space="preserve">
          <source>Each function in this list is called by &lt;code&gt;insert-file-contents&lt;/code&gt; with one argument, the number of characters inserted, and with point at the beginning of the inserted text. Each function should leave point unchanged, and return the new character count describing the inserted text as modified by the function.</source>
          <target state="translated">此列表中的每个函数都由带有一个参数，插入的字符数以及插入文本开头的point的 &lt;code&gt;insert-file-contents&lt;/code&gt; 调用。每个函数都应使点保持不变，并返回描述该函数修改的插入文本的新字符数。</target>
        </trans-unit>
        <trans-unit id="c83a4399a6c923e3d08fae198138a2f98174a32a" translate="yes" xml:space="preserve">
          <source>Each function in this list should be written to look at text in the current buffer, but should not modify it in any way. The buffer will contain the text of parts of the file. Each function should take one argument, &lt;var&gt;size&lt;/var&gt;, which tells it how many characters to look at, starting from point. If the function succeeds in determining a coding system for the file, it should return that coding system. Otherwise, it should return &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">应该编写此列表中的每个函数以查看当前缓冲区中的文本，但不应以任何方式对其进行修改。缓冲区将包含文件各部分的文本。每个函数应采用一个参数 &lt;var&gt;size&lt;/var&gt; ，该参数告诉它从点开始要看多少个字符。如果函数成功确定文件的编码系统，则应返回该编码系统。否则，它应该返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="235d91ba92896bbd0339cbc80d0f7ff64497f384" translate="yes" xml:space="preserve">
          <source>Each image descriptor has the form &lt;code&gt;(image . &lt;var&gt;props&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;props&lt;/var&gt; is a property list of alternating keyword symbols and values, including at least the pair &lt;code&gt;:type &lt;var&gt;type&lt;/var&gt;&lt;/code&gt; that specifies the image type.</source>
          <target state="translated">每个图像描述符具有形式 &lt;code&gt;(image . &lt;var&gt;props&lt;/var&gt;)&lt;/code&gt; ，其中 &lt;var&gt;props&lt;/var&gt; 是交替的关键字的符号和值的属性列表，包括至少一对 &lt;code&gt;:type &lt;var&gt;type&lt;/var&gt;&lt;/code&gt; ，用于指定图像类型。</target>
        </trans-unit>
        <trans-unit id="97238b9b58affb7b3a1c2c1dbbd291a0ab78d2b2" translate="yes" xml:space="preserve">
          <source>Each input method has a name, which is currently a string; in the future, symbols may also be usable as input method names.</source>
          <target state="translated">每个输入法都有一个名称,目前是一个字符串;将来,符号也可以作为输入法名称使用。</target>
        </trans-unit>
        <trans-unit id="b68855ebc1a78ae55b334c95707422ad2286e75c" translate="yes" xml:space="preserve">
          <source>Each internal window always has at least two child windows. If this number falls to one as a result of window deletion, Emacs automatically deletes the internal window, and its sole remaining child window takes its place in the window tree.</source>
          <target state="translated">每个内部窗口总是至少有两个子窗口。如果因为删除窗口而使这一数字下降到1,Emacs就会自动删除内部窗口,其唯一剩下的子窗口就会在窗口树中占据一席之地。</target>
        </trans-unit>
        <trans-unit id="58ef8e2ad206534a200d2fd255565c1384f0cd21" translate="yes" xml:space="preserve">
          <source>Each keymap is a list whose &lt;small&gt;CAR&lt;/small&gt; is the symbol &lt;code&gt;keymap&lt;/code&gt;. The remaining elements of the list define the key bindings of the keymap. A symbol whose function definition is a keymap is also a keymap. Use the function &lt;code&gt;keymapp&lt;/code&gt; (see below) to test whether an object is a keymap.</source>
          <target state="translated">每个键盘映射都是一个列表，其&lt;small&gt;CAR&lt;/small&gt;是符号 &lt;code&gt;keymap&lt;/code&gt; 。列表的其余元素定义了键映射的键绑定。函数定义为键映射的符号也是键映射。使用功能 &lt;code&gt;keymapp&lt;/code&gt; （请参见下文）测试对象是否为键盘映射。</target>
        </trans-unit>
        <trans-unit id="71b9a641e07d2f8e576dc2b9135e5863bf5b6da9" translate="yes" xml:space="preserve">
          <source>Each line of the backtrace represents one function call. The line shows the function followed by a list of the values of the function&amp;rsquo;s arguments if they are all known; if they are still being computed, the line consists of a list containing the function and its unevaluated arguments. Long lists or deeply nested structures may be elided.</source>
          <target state="translated">回溯的每一行代表一个函数调用。这行代码显示了该函数，然后列出了该函数的参数值（如果它们都是已知的）的列表；如果仍在计算它们，则该行由一个包含函数及其未评估参数的列表组成。可能会省略长列表或深层嵌套的结构。</target>
        </trans-unit>
        <trans-unit id="c9ae24340a44ae06d86da670e58a13c44fd88c1b" translate="yes" xml:space="preserve">
          <source>Each list element following &lt;code&gt;&amp;amp;or&lt;/code&gt; is a single alternative. To group two or more list elements as a single alternative, enclose them in &lt;code&gt;[&amp;hellip;]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;amp;or&lt;/code&gt; 之后的每个列表元素都是一个替代方案。要将两个或多个列表元素分组为一个替代项，请将它们括在 &lt;code&gt;[&amp;hellip;]&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="a583ef6a10db82e632751712c5ea65db221cd7e6" translate="yes" xml:space="preserve">
          <source>Each list element has the form &lt;code&gt;(&lt;var&gt;buffer&lt;/var&gt; &lt;var&gt;window-start&lt;/var&gt;
&lt;var&gt;window-pos&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;buffer&lt;/var&gt; is a buffer previously shown in the window, &lt;var&gt;window-start&lt;/var&gt; is the window start position (see &lt;a href=&quot;window-start-and-end#Window-Start-and-End&quot;&gt;Window Start and End&lt;/a&gt;) when that buffer was last shown, and &lt;var&gt;window-pos&lt;/var&gt; is the point position (see &lt;a href=&quot;window-point#Window-Point&quot;&gt;Window Point&lt;/a&gt;) when that buffer was last shown in &lt;var&gt;window&lt;/var&gt;.</source>
          <target state="translated">每个列表元素的形式为 &lt;code&gt;(&lt;var&gt;buffer&lt;/var&gt; &lt;var&gt;window-start&lt;/var&gt; &lt;var&gt;window-pos&lt;/var&gt;)&lt;/code&gt; ，其中 &lt;var&gt;buffer&lt;/var&gt; 是窗口中先前显示的缓冲区， &lt;var&gt;window-start&lt;/var&gt; 是最后显示该缓冲区时的窗口起始位置（请参见&lt;a href=&quot;window-start-and-end#Window-Start-and-End&quot;&gt;Window Start和End&lt;/a&gt;），以及 &lt;var&gt;window-pos&lt;/var&gt; 是该缓冲区最后在 &lt;var&gt;window&lt;/var&gt; 中显示的点位置（请参见&lt;a href=&quot;window-point#Window-Point&quot;&gt;Window Point&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="5f7c2055e3e8554ed9ad1590b417507d7bd08daf" translate="yes" xml:space="preserve">
          <source>Each local binding has a certain &lt;em&gt;scope&lt;/em&gt; and &lt;em&gt;extent&lt;/em&gt;. &lt;em&gt;Scope&lt;/em&gt; refers to &lt;em&gt;where&lt;/em&gt; in the textual source code the binding can be accessed. &lt;em&gt;Extent&lt;/em&gt; refers to &lt;em&gt;when&lt;/em&gt;, as the program is executing, the binding exists.</source>
          <target state="translated">每个局部绑定都有一定的&lt;em&gt;范围&lt;/em&gt;和&lt;em&gt;程度&lt;/em&gt;。&lt;em&gt;范围&lt;/em&gt;是指&lt;em&gt;其中&lt;/em&gt;在所述文本源代码的结合可以被访问。&lt;em&gt;范围&lt;/em&gt;是指，&lt;em&gt;当&lt;/em&gt;程序执行时，绑定存在。</target>
        </trans-unit>
        <trans-unit id="86aba8266c0d25b83d7502075b116356d65aa6a2" translate="yes" xml:space="preserve">
          <source>Each major mode should have a normal &lt;em&gt;mode hook&lt;/em&gt; named &lt;code&gt;&lt;var&gt;modename&lt;/var&gt;-mode-hook&lt;/code&gt;. The very last thing the major mode command should do is to call &lt;code&gt;run-mode-hooks&lt;/code&gt;. This runs the normal hook &lt;code&gt;change-major-mode-after-body-hook&lt;/code&gt;, the mode hook, the function &lt;code&gt;hack-local-variables&lt;/code&gt; (when the buffer is visiting a file), and then the normal hook &lt;code&gt;after-change-major-mode-hook&lt;/code&gt;. See &lt;a href=&quot;mode-hooks#Mode-Hooks&quot;&gt;Mode Hooks&lt;/a&gt;.</source>
          <target state="translated">每个主要模式都应具有一个名为 &lt;code&gt;&lt;var&gt;modename&lt;/var&gt;-mode-hook&lt;/code&gt; -mode-hook的普通&lt;em&gt;模式&lt;/em&gt;挂钩。主要模式命令应该做的最后一件事是调用 &lt;code&gt;run-mode-hooks&lt;/code&gt; 。这将运行普通钩子 &lt;code&gt;change-major-mode-after-body-hook&lt;/code&gt; ，模式钩子，功能 &lt;code&gt;hack-local-variables&lt;/code&gt; （当缓冲区访问文件时），然后运行普通钩子 &lt;code&gt;after-change-major-mode-hook&lt;/code&gt; 。请参阅&lt;a href=&quot;mode-hooks#Mode-Hooks&quot;&gt;模式挂钩&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="287323fb95433b6dbd622d9ec00f0ea2aff3f057" translate="yes" xml:space="preserve">
          <source>Each match for this element creates an index item, and when the index item is selected by the user, it calls &lt;var&gt;function&lt;/var&gt; with arguments consisting of the item name, the buffer position, and &lt;var&gt;arguments&lt;/var&gt;.</source>
          <target state="translated">每个匹配该元素创建索引项，并且当通过用户选择的索引项，它调用 &lt;var&gt;function&lt;/var&gt; 与由项目名，缓冲器的位置，和参数 &lt;var&gt;arguments&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="4e22ba30379343332318e195f64357d09a59ae9e" translate="yes" xml:space="preserve">
          <source>Each minor mode can have its own keymap, which is active when the mode is enabled. To set up a keymap for a minor mode, add an element to the alist &lt;code&gt;minor-mode-map-alist&lt;/code&gt;. See &lt;a href=&quot;controlling-active-maps#Definition-of-minor_002dmode_002dmap_002dalist&quot;&gt;Definition of minor-mode-map-alist&lt;/a&gt;.</source>
          <target state="translated">每个次要模式都可以具有自己的键盘映射，该键盘映射在启用该模式后便会激活。要为次要模式设置键盘映射，请在alist &lt;code&gt;minor-mode-map-alist&lt;/code&gt; 中添加一个元素。请参见&lt;a href=&quot;controlling-active-maps#Definition-of-minor_002dmode_002dmap_002dalist&quot;&gt;minor-mode-map-alist的定义&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d528e8c9b29d9bee51e02521c92a873e3dea5cb8" translate="yes" xml:space="preserve">
          <source>Each mode can define alternative levels so that the user can select more or less.</source>
          <target state="translated">每种模式都可以定义备选级别,让用户可以多选或少选。</target>
        </trans-unit>
        <trans-unit id="4eef0b9d650277ed1c085296e6911d448ba1318f" translate="yes" xml:space="preserve">
          <source>Each non-</source>
          <target state="translated">每个非</target>
        </trans-unit>
        <trans-unit id="d922d78c2410876672ed17d819419fb4a2331ea9" translate="yes" xml:space="preserve">
          <source>Each of the &lt;var&gt;bindings&lt;/var&gt; is either (i) a symbol, in which case that symbol is locally bound to &lt;code&gt;nil&lt;/code&gt;; or (ii) a list of the form &lt;code&gt;(&lt;var&gt;symbol&lt;/var&gt; &lt;var&gt;value-form&lt;/var&gt;)&lt;/code&gt;, in which case &lt;var&gt;symbol&lt;/var&gt; is locally bound to the result of evaluating &lt;var&gt;value-form&lt;/var&gt;. If &lt;var&gt;value-form&lt;/var&gt; is omitted, &lt;code&gt;nil&lt;/code&gt; is used.</source>
          <target state="translated">每个 &lt;var&gt;bindings&lt;/var&gt; 都是（i）一个符号，在这种情况下，该符号局部绑定到 &lt;code&gt;nil&lt;/code&gt; ；或（ii）形式的列表 &lt;code&gt;(&lt;var&gt;symbol&lt;/var&gt; &lt;var&gt;value-form&lt;/var&gt;)&lt;/code&gt; ，在这种情况下， &lt;var&gt;symbol&lt;/var&gt; 局部绑定到 &lt;var&gt;value-form&lt;/var&gt; 的评估结果。如果省略 &lt;var&gt;value-form&lt;/var&gt; ，则使用 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="782fca7b50440dc1aaec7c6460896c933ad7a194" translate="yes" xml:space="preserve">
          <source>Each of the &lt;var&gt;handlers&lt;/var&gt; is a list of the form &lt;code&gt;(&lt;var&gt;conditions&lt;/var&gt;
&lt;var&gt;body&lt;/var&gt;&amp;hellip;)&lt;/code&gt;. Here &lt;var&gt;conditions&lt;/var&gt; is an error condition name to be handled, or a list of condition names (which can include &lt;code&gt;debug&lt;/code&gt; to allow the debugger to run before the handler). A condition name of &lt;code&gt;t&lt;/code&gt; matches any condition. &lt;var&gt;body&lt;/var&gt; is one or more Lisp expressions to be executed when this handler handles an error. Here are examples of handlers:</source>
          <target state="translated">每个 &lt;var&gt;handlers&lt;/var&gt; 都是形式的列表 &lt;code&gt;(&lt;var&gt;conditions&lt;/var&gt; &lt;var&gt;body&lt;/var&gt;&amp;hellip;)&lt;/code&gt; 。这里的 &lt;var&gt;conditions&lt;/var&gt; 是要处理的错误条件名称，或者是条件名称列表（可以包括 &lt;code&gt;debug&lt;/code&gt; 以允许调试器在处理程序之前运行）。条件名称 &lt;code&gt;t&lt;/code&gt; 匹配任何条件。 &lt;var&gt;body&lt;/var&gt; 是此处理程序处理错误时要执行的一个或多个Lisp表达式。以下是处理程序的示例：</target>
        </trans-unit>
        <trans-unit id="a47cbfe89c8be0c83074ab2820d5cb0e5b9b19da" translate="yes" xml:space="preserve">
          <source>Each of the different Lisp modes has a slightly different keymap. For example, Lisp mode binds</source>
          <target state="translated">每一种不同的Lisp模式都有一个稍微不同的键图。例如,Lisp模式绑定了</target>
        </trans-unit>
        <trans-unit id="fa7a9bc42e8e4ddded7690e1cf1607e4f6fa3c66" translate="yes" xml:space="preserve">
          <source>Each of the following elements in the specification list is an alternative. One of the alternatives must match, or the &lt;code&gt;&amp;amp;or&lt;/code&gt; specification fails.</source>
          <target state="translated">规范列表中的以下每个元素都是可选的。备选方案之一必须匹配，否则 &lt;code&gt;&amp;amp;or&lt;/code&gt; 规范将失败。</target>
        </trans-unit>
        <trans-unit id="f8367e0ae94dbffb5e444377e5e6c187c66fa397" translate="yes" xml:space="preserve">
          <source>Each of the following elements is matched as alternatives as if by using &lt;code&gt;&amp;amp;or&lt;/code&gt;, but if any of them match, the specification fails. If none of them match, nothing is matched, but the &lt;code&gt;&amp;amp;not&lt;/code&gt; specification succeeds.</source>
          <target state="translated">以下每个元素都可以作为替代匹配，就好像使用 &lt;code&gt;&amp;amp;or&lt;/code&gt; 一样，但是如果其中任何一个匹配，说明将失败。如果它们都不匹配，则没有任何匹配，但是 &lt;code&gt;&amp;amp;not&lt;/code&gt; 规范成功。</target>
        </trans-unit>
        <trans-unit id="977b6c1d424e5a35915d6c7be59d9d10d724e091" translate="yes" xml:space="preserve">
          <source>Each of the signal-sending functions takes two optional arguments: &lt;var&gt;process&lt;/var&gt; and &lt;var&gt;current-group&lt;/var&gt;.</source>
          <target state="translated">每个信号发送功能都带有两个可选参数： &lt;var&gt;process&lt;/var&gt; 和 &lt;var&gt;current-group&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="efd9953c58b5618fd12636f78f4637746045da22" translate="yes" xml:space="preserve">
          <source>Each of the subprocess-creating functions has a &lt;var&gt;buffer-or-name&lt;/var&gt; argument that specifies where the output from the program will go. It should be a buffer or a buffer name; if it is a buffer name, that will create the buffer if it does not already exist. It can also be &lt;code&gt;nil&lt;/code&gt;, which says to discard the output, unless a custom filter function handles it. (See &lt;a href=&quot;filter-functions#Filter-Functions&quot;&gt;Filter Functions&lt;/a&gt;, and &lt;a href=&quot;read-and-print#Read-and-Print&quot;&gt;Read and Print&lt;/a&gt;.) Normally, you should avoid having multiple processes send output to the same buffer because their output would be intermixed randomly. For synchronous processes, you can send the output to a file instead of a buffer (and the corresponding argument is therefore more appropriately called &lt;var&gt;destination&lt;/var&gt;). By default, both standard output and standard error streams go to the same destination, but all the 3 primitives allow optionally to direct the standard error stream to a different destination.</source>
          <target state="translated">每个子流程创建函数都有一个 &lt;var&gt;buffer-or-name&lt;/var&gt; 参数，该参数指定程序输出将到达的位置。它应该是一个缓冲区或缓冲区名称；如果它是一个缓冲区名称，则在缓冲区尚不存在时将创建该缓冲区。它也可以是 &lt;code&gt;nil&lt;/code&gt; ，表示丢弃输出，除非自定义过滤器函数对其进行处理。 （请参阅&lt;a href=&quot;filter-functions#Filter-Functions&quot;&gt;过滤器功能&lt;/a&gt;，以及&lt;a href=&quot;read-and-print#Read-and-Print&quot;&gt;读取和打印&lt;/a&gt;。）通常，应避免让多个进程将输出发送到同一缓冲区，因为它们的输出将被随机混合。对于同步过程，您可以将输出发送到文件而不是缓冲区（因此，相应的参数更合适地称为 &lt;var&gt;destination&lt;/var&gt; ）。默认情况下，标准输出流和标准错误流都到达相同的目的地，但是所有3个原语都允许将标准错误流定向到其他目的地。</target>
        </trans-unit>
        <trans-unit id="4dd40e95c6a835360b6b7f11c588fa5e8a597930" translate="yes" xml:space="preserve">
          <source>Each of these image formats is associated with an &lt;em&gt;image type symbol&lt;/em&gt;. The symbols for the above formats are, respectively, &lt;code&gt;pbm&lt;/code&gt;, &lt;code&gt;xbm&lt;/code&gt;, &lt;code&gt;xpm&lt;/code&gt;, &lt;code&gt;gif&lt;/code&gt;, &lt;code&gt;jpeg&lt;/code&gt;, &lt;code&gt;tiff&lt;/code&gt;, &lt;code&gt;png&lt;/code&gt;, and &lt;code&gt;svg&lt;/code&gt;.</source>
          <target state="translated">这些图像格式中的每一个都与&lt;em&gt;图像类型符号&lt;/em&gt;相关联。以上格式的符号分别是 &lt;code&gt;pbm&lt;/code&gt; ， &lt;code&gt;xbm&lt;/code&gt; ， &lt;code&gt;xpm&lt;/code&gt; ， &lt;code&gt;gif&lt;/code&gt; ， &lt;code&gt;jpeg&lt;/code&gt; ， &lt;code&gt;tiff&lt;/code&gt; ， &lt;code&gt;png&lt;/code&gt; 和 &lt;code&gt;svg&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6bd36effaf14bf0fb0e87e0425e8ad6f14ffb592" translate="yes" xml:space="preserve">
          <source>Each of these symbols is both a face name, and a variable whose default value is the symbol itself. Thus, the default value of &lt;code&gt;font-lock-comment-face&lt;/code&gt; is &lt;code&gt;font-lock-comment-face&lt;/code&gt;.</source>
          <target state="translated">这些符号中的每一个都是面部名称，也是一个变量，其默认值是符号本身。因此，缺省值 &lt;code&gt;font-lock-comment-face&lt;/code&gt; 是 &lt;code&gt;font-lock-comment-face&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="291666f153c17f5fcc090bf2ddada2e48a1cde39" translate="yes" xml:space="preserve">
          <source>Each package (whether simple or multi-file) has certain &lt;em&gt;attributes&lt;/em&gt;:</source>
          <target state="translated">每个包（无论是简单文件还是多文件）都具有某些&lt;em&gt;属性&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="e4e32c346825be260782068946efb49f224cbe75" translate="yes" xml:space="preserve">
          <source>Each paragraph of bidirectional text has a &lt;em&gt;base direction&lt;/em&gt;, either right-to-left or left-to-right. Left-to-right paragraphs are displayed beginning at the left margin of the window, and are truncated or continued when the text reaches the right margin. Right-to-left paragraphs are displayed beginning at the right margin, and are continued or truncated at the left margin.</source>
          <target state="translated">双向文本的每个段落都有一个&lt;em&gt;基本方向&lt;/em&gt;，即从右到左或从左到右。从窗口的左边距开始显示从左到右的段落，当文本到达右边距时，这些段落将被截断或继续。从右边界开始显示从右到左的段落，并在左边界继续或截断。</target>
        </trans-unit>
        <trans-unit id="cde848f49ba018cc29964e215c495a8c27d89694" translate="yes" xml:space="preserve">
          <source>Each primitive type has a corresponding Lisp function that checks whether an object is a member of that type.</source>
          <target state="translated">每个基元类型都有一个对应的Lisp函数,用于检查一个对象是否是该类型的成员。</target>
        </trans-unit>
        <trans-unit id="23f6b5abc1ef17571fdf5c06f953e5d8690ca2f7" translate="yes" xml:space="preserve">
          <source>Each property has a name and a value. Both of these can be any Lisp object, but the name is normally a symbol. Typically each property name symbol is used for a particular purpose; for instance, the text property &lt;code&gt;face&lt;/code&gt; specifies the faces for displaying the character (see &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Special Properties&lt;/a&gt;). The usual way to access the property list is to specify a name and ask what value corresponds to it.</source>
          <target state="translated">每个属性都有一个名称和一个值。这两个都可以是任何Lisp对象，但名称通常是符号。通常，每个属性名称符号都用于特定目的。例如，text属性 &lt;code&gt;face&lt;/code&gt; 指定用于显示字符的面孔（请参见&lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Special Properties&lt;/a&gt;）。访问属性列表的通常方法是指定名称并询问与之对应的值。</target>
        </trans-unit>
        <trans-unit id="1c1fea8ac4dca56f1c610d54d8aaf271e1962df6" translate="yes" xml:space="preserve">
          <source>Each signal has a standard effect on the subprocess. Most signals kill the subprocess, but some stop (or resume) execution instead. Most signals can optionally be handled by programs; if the program handles the signal, then we can say nothing in general about its effects.</source>
          <target state="translated">每个信号对子进程都有一个标准的影响。大多数信号会杀死子进程,但有些信号则会停止(或恢复)执行。大多数信号可以选择由程序处理;如果程序处理了信号,那么我们就不能笼统地说它的影响。</target>
        </trans-unit>
        <trans-unit id="c047bfaf3c4495ab37b9bd7458af73d1c3930d11" translate="yes" xml:space="preserve">
          <source>Each special form has its own rules for which arguments are evaluated and which are used without evaluation. Whether a particular argument is evaluated may depend on the results of evaluating other arguments.</source>
          <target state="translated">每种特殊形式都有自己的规则,规定哪些参数是被评估的,哪些参数是不被评估的。某一特定参数是否被评估可能取决于评估其他参数的结果。</target>
        </trans-unit>
        <trans-unit id="72dd71100c38a66ebf0fcfa852239a90749b52f5" translate="yes" xml:space="preserve">
          <source>Each specification in &lt;var&gt;specs&lt;/var&gt; is a property list with contents depending on image type. All specifications must at least contain the properties &lt;code&gt;:type &lt;var&gt;type&lt;/var&gt;&lt;/code&gt; and either &lt;code&gt;:file&amp;nbsp;&lt;var&gt;file&lt;/var&gt;&lt;/code&gt; or &lt;code&gt;:data&amp;nbsp;&lt;var&gt;data&lt;/var&gt;&lt;/code&gt;, where &lt;var&gt;type&lt;/var&gt; is a symbol specifying the image type, e.g., &lt;code&gt;xbm&lt;/code&gt;, &lt;var&gt;file&lt;/var&gt; is the file to load the image from, and &lt;var&gt;data&lt;/var&gt; is a string containing the actual image data. The first specification in the list whose &lt;var&gt;type&lt;/var&gt; is supported, and &lt;var&gt;file&lt;/var&gt; exists, is used to construct the image specification to be returned. If no specification is satisfied, &lt;code&gt;nil&lt;/code&gt; is returned.</source>
          <target state="translated">规格中的每个 &lt;var&gt;specs&lt;/var&gt; 都是一个属性列表，其内容取决于图像类型。所有规范都必须至少包含属性 &lt;code&gt;:type &lt;var&gt;type&lt;/var&gt;&lt;/code&gt; 和 &lt;code&gt;:file&amp;nbsp;&lt;var&gt;file&lt;/var&gt;&lt;/code&gt; 或 &lt;code&gt;:data&amp;nbsp;&lt;var&gt;data&lt;/var&gt;&lt;/code&gt; ，其中 &lt;var&gt;type&lt;/var&gt; 是指定图像类型的符号，例如 &lt;code&gt;xbm&lt;/code&gt; ， &lt;var&gt;file&lt;/var&gt; 是从中加载图像的文件， &lt;var&gt;data&lt;/var&gt; 是字符串包含实际的图像数据。列表中其 &lt;var&gt;type&lt;/var&gt; 受支持且 &lt;var&gt;file&lt;/var&gt; 存在的第一个规范用于构造要返回的图像规范。如果没有满足规格，则为 &lt;code&gt;nil&lt;/code&gt; 返回。</target>
        </trans-unit>
        <trans-unit id="dbf7a48962876ca66372154f2f1def78d7d85188" translate="yes" xml:space="preserve">
          <source>Each symbol has a property list for recording miscellaneous information.</source>
          <target state="translated">每个符号都有一个属性列表,用于记录杂项信息。</target>
        </trans-unit>
        <trans-unit id="52fbede7ba5a23a939caafe5e9932ca45c34d031" translate="yes" xml:space="preserve">
          <source>Each symbol has four components (or &amp;ldquo;cells&amp;rdquo;), each of which references another object:</source>
          <target state="translated">每个符号都有四个组件（或&amp;ldquo;单元格&amp;rdquo;），每个组件都引用另一个对象：</target>
        </trans-unit>
        <trans-unit id="be67417f8b53a64af086e681886ca9f4c3c8fb8d" translate="yes" xml:space="preserve">
          <source>Each symbol&amp;rsquo;s properties and property values are stored in the symbol&amp;rsquo;s property list cell (see &lt;a href=&quot;symbol-components#Symbol-Components&quot;&gt;Symbol Components&lt;/a&gt;), in the form of a property list (see &lt;a href=&quot;property-lists#Property-Lists&quot;&gt;Property Lists&lt;/a&gt;).</source>
          <target state="translated">每个符号的属性和属性值都以属性列表的形式（请参见&amp;ldquo;&lt;a href=&quot;property-lists#Property-Lists&quot;&gt;属性列表&amp;rdquo;&lt;/a&gt;）存储在符号的属性列表单元格中（请参见&lt;a href=&quot;symbol-components#Symbol-Components&quot;&gt;Symbol组件&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="82a1accf94b0791d1a997333410db664204fd93c" translate="yes" xml:space="preserve">
          <source>Each syntax class is designated by a mnemonic character, which serves as the name of the class when you need to specify a class. Usually, this designator character is one that is often assigned that class; however, its meaning as a designator is unvarying and independent of what syntax that character currently has. Thus, &amp;lsquo;</source>
          <target state="translated">每个语法类都由一个助记符指定，当您需要指定一个类时，该字符将用作该类的名称。通常，该指示符是经常被分配给该类别的角色。但是，它作为代号的含义是不变的，并且与该字符当前具有的语法无关。因此，</target>
        </trans-unit>
        <trans-unit id="20c83e6b7e66f23e9b34223f18b5c3c8faeecf1b" translate="yes" xml:space="preserve">
          <source>Each terminal has a list of associated parameters. These &lt;em&gt;terminal parameters&lt;/em&gt; are mostly a convenient way of storage for terminal-local variables, but some terminal parameters have a special meaning.</source>
          <target state="translated">每个终端都有一个相关参数的列表。这些&lt;em&gt;终端参数&lt;/em&gt;主要是用于存储终端局部变量的便捷方法，但是某些终端参数具有特殊含义。</target>
        </trans-unit>
        <trans-unit id="3a95c9cc702f0dae817aad9ce2f5bcddea359025" translate="yes" xml:space="preserve">
          <source>Each terminal type can have its own Lisp library that Emacs loads when run on that type of terminal. The library&amp;rsquo;s name is constructed by concatenating the value of the variable &lt;code&gt;term-file-prefix&lt;/code&gt; and the terminal type (specified by the environment variable &lt;code&gt;TERM&lt;/code&gt;). Normally, &lt;code&gt;term-file-prefix&lt;/code&gt; has the value &lt;code&gt;&quot;term/&quot;&lt;/code&gt;; changing this is not recommended. If there is an entry matching &lt;code&gt;TERM&lt;/code&gt; in the &lt;code&gt;term-file-aliases&lt;/code&gt; association list, Emacs uses the associated value in place of &lt;code&gt;TERM&lt;/code&gt;. Emacs finds the file in the normal manner, by searching the &lt;code&gt;load-path&lt;/code&gt; directories, and trying the &amp;lsquo;</source>
          <target state="translated">每种终端类型都可以有自己的Lisp库，当在该类型的终端上运行时，Emacs会加载该库。库的名称是通过将变量 &lt;code&gt;term-file-prefix&lt;/code&gt; 的值和终端类型（由环境变量 &lt;code&gt;TERM&lt;/code&gt; 指定）连接起来构成的。通常， &lt;code&gt;term-file-prefix&lt;/code&gt; 的值为 &lt;code&gt;&quot;term/&quot;&lt;/code&gt; ;不建议更改此设置。如果在 &lt;code&gt;term-file-aliases&lt;/code&gt; 关联列表中存在与 &lt;code&gt;TERM&lt;/code&gt; 匹配的条目，则Emacs将使用关联的值代替 &lt;code&gt;TERM&lt;/code&gt; 。 Emacs通过搜索 &lt;code&gt;load-path&lt;/code&gt; 目录，然后尝试使用&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="abf9852196e45b8ddf01ffeb0a06d4b366da14b5" translate="yes" xml:space="preserve">
          <source>Each time a generic function is called, it builds the &lt;em&gt;effective method&lt;/em&gt; which will handle this invocation by combining the applicable methods defined for the function. The process of finding the applicable methods and producing the effective method is called &lt;em&gt;dispatch&lt;/em&gt;. The applicable methods are those all of whose specializers are compatible with the actual arguments of the call. Since all of the arguments must be compatible with the specializers, they all determine whether a method is applicable. Methods that explicitly specialize more than one argument are called &lt;em&gt;multiple-dispatch methods&lt;/em&gt;.</source>
          <target state="translated">每次调用通用函数时，它都会通过组合为该函数定义的适用方法来构建&lt;em&gt;有效的方法&lt;/em&gt;，该&lt;em&gt;方法&lt;/em&gt;将处理该调用。找到适用方法并产生有效方法的过程称为&lt;em&gt;调度&lt;/em&gt;。适用的方法是所有其专长都与调用的实际参数兼容的方法。由于所有参数都必须与专业化工具兼容，因此它们都确定方法是否适用。显式专门化多个参数的方法称为&lt;em&gt;多调度方法&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="47a0fbac78b3eea53dfbeb6288c7d952fd355c24" translate="yes" xml:space="preserve">
          <source>Each time a question is asked, the user may enter</source>
          <target state="translated">每次提出问题时,用户可以输入</target>
        </trans-unit>
        <trans-unit id="aad2a9d470474da5d8494a55e6808054f9e31862" translate="yes" xml:space="preserve">
          <source>Each time you use</source>
          <target state="translated">每次使用</target>
        </trans-unit>
        <trans-unit id="ef5f67cf376cd71cde435468e95d944f3c241104" translate="yes" xml:space="preserve">
          <source>Each variable on this list can have properties &lt;code&gt;overlay-arrow-string&lt;/code&gt; and &lt;code&gt;overlay-arrow-bitmap&lt;/code&gt; that specify an overlay arrow string (for text terminals) or fringe bitmap (for graphical terminals) to display at the corresponding overlay arrow position. If either property is not set, the default &lt;code&gt;overlay-arrow-string&lt;/code&gt; or &lt;code&gt;overlay-arrow&lt;/code&gt; fringe indicator is used.</source>
          <target state="translated">此列表上的每个变量都可以具有属性 &lt;code&gt;overlay-arrow-string&lt;/code&gt; 和 &lt;code&gt;overlay-arrow-bitmap&lt;/code&gt; ，这些属性指定要在相应的覆盖箭头位置显示的覆盖箭头字符串（对于文本终端）或边缘位图（对于图形终端）。如果未设置任何一个属性，则使用默认的 &lt;code&gt;overlay-arrow-string&lt;/code&gt; 或 &lt;code&gt;overlay-arrow&lt;/code&gt; 条纹指示符。</target>
        </trans-unit>
        <trans-unit id="4ef6f686fb9bcdcb38b76a946d731d5b21776b57" translate="yes" xml:space="preserve">
          <source>Each warning has a &lt;em&gt;warning type&lt;/em&gt; to classify it. The type is a list of symbols. The first symbol should be the custom group that you use for the program&amp;rsquo;s user options. For example, byte compiler warnings use the warning type &lt;code&gt;(bytecomp)&lt;/code&gt;. You can also subcategorize the warnings, if you wish, by using more symbols in the list.</source>
          <target state="translated">每个警告都有一个&lt;em&gt;警告类型&lt;/em&gt;以对其进行分类。该类型是符号列表。第一个符号应该是用于程序的用户选项的自定义组。例如，字节编译器警告使用警告类型 &lt;code&gt;(bytecomp)&lt;/code&gt; 。如果需要，还可以通过在列表中使用更多符号来对警告进行分类。</target>
        </trans-unit>
        <trans-unit id="c7b05419563012fae186137d3649c98f1f79fa29" translate="yes" xml:space="preserve">
          <source>Each window belongs to exactly one frame (see &lt;a href=&quot;frames#Frames&quot;&gt;Frames&lt;/a&gt;).</source>
          <target state="translated">每个窗口恰好属于一个框架（请参阅&lt;a href=&quot;frames#Frames&quot;&gt;Frames&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="3dbb592ccdc83f880aa1c33595a352f03e950a3c" translate="yes" xml:space="preserve">
          <source>Each window can specify a display table, and so can each buffer. The window&amp;rsquo;s display table, if there is one, takes precedence over the buffer&amp;rsquo;s display table. If neither exists, Emacs tries to use the standard display table; if that is &lt;code&gt;nil&lt;/code&gt;, Emacs uses the usual character display conventions (see &lt;a href=&quot;usual-display#Usual-Display&quot;&gt;Usual Display&lt;/a&gt;).</source>
          <target state="translated">每个窗口可以指定一个显示表，每个缓冲区也可以。窗口的显示表（如果有的话）优先于缓冲区的显示表。如果两者都不存在，则Emacs尝试使用标准显示表；如果为 &lt;code&gt;nil&lt;/code&gt; ，则Emacs使用常规的字符显示约定（请参见&amp;ldquo;&lt;a href=&quot;usual-display#Usual-Display&quot;&gt;常规显示&amp;rdquo;&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="377bae922cb141c720011b4887600679610fc2e2" translate="yes" xml:space="preserve">
          <source>Each window displays the contents of a buffer.</source>
          <target state="translated">每个窗口都会显示一个缓冲区的内容。</target>
        </trans-unit>
        <trans-unit id="36e2e629a25c4f98d548b38fe566963d0bf5edbb" translate="yes" xml:space="preserve">
          <source>Each window has its own location of point.</source>
          <target state="translated">每个窗口都有自己的点位。</target>
        </trans-unit>
        <trans-unit id="471c73409475e7e93e86c9bda3823fa89d907def" translate="yes" xml:space="preserve">
          <source>Each window has its own value of point (see &lt;a href=&quot;point#Point&quot;&gt;Point&lt;/a&gt;), independent of the value of point in other windows displaying the same buffer. This makes it useful to have multiple windows showing one buffer.</source>
          <target state="translated">每个窗口都有其自己的point值（请参见&lt;a href=&quot;point#Point&quot;&gt;Point&lt;/a&gt;），与其他显示相同缓冲区的窗口中的point值无关。这使具有多个显示一个缓冲区的窗口很有用。</target>
        </trans-unit>
        <trans-unit id="21af55b760406410c2ff15a1789fb087e13f691d" translate="yes" xml:space="preserve">
          <source>Each window maintains a marker used to keep track of a buffer position that specifies where in the buffer display should start. This position is called the &lt;em&gt;display-start&lt;/em&gt; position of the window (or just the &lt;em&gt;start&lt;/em&gt;). The character after this position is the one that appears at the upper left corner of the window. It is usually, but not inevitably, at the beginning of a text line.</source>
          <target state="translated">每个窗口都有一个标记，用于跟踪缓冲区位置，该位置指定缓冲区显示应从何处开始。此位置称为窗口的&lt;em&gt;显示开始&lt;/em&gt;位置（或仅称为&lt;em&gt;start&lt;/em&gt;）。此位置之后的字符是显示在窗口左上角的字符。它通常但并非不可避免地在文本行的开头。</target>
        </trans-unit>
        <trans-unit id="fce687f2b757b30204db6be7e540c24d557b9814" translate="yes" xml:space="preserve">
          <source>Each window remembers in a list the buffers it has previously displayed, and the order in which these buffers were removed from it. This history is used, for example, by &lt;code&gt;replace-buffer-in-windows&lt;/code&gt; (see &lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;Buffers and Windows&lt;/a&gt;), and when quitting windows (see &lt;a href=&quot;quitting-windows#Quitting-Windows&quot;&gt;Quitting Windows&lt;/a&gt;). The list is automatically maintained by Emacs, but you can use the following functions to explicitly inspect or alter it:</source>
          <target state="translated">每个窗口都会在列表中记住其先前显示的缓冲区以及从中删除这些缓冲区的顺序。例如，该历史记录可用于&lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;Windows中&lt;/a&gt;的 &lt;code&gt;replace-buffer-in-windows&lt;/code&gt; （请参见Buffers和Windows），以及在退出窗口时（请参见&lt;a href=&quot;quitting-windows#Quitting-Windows&quot;&gt;退出Windows&lt;/a&gt;）。该列表由Emacs自动维护，但是您可以使用以下功能来显式检查或更改它：</target>
        </trans-unit>
        <trans-unit id="8aecaaf814d79e70608c06de7e5e42031379d48e" translate="yes" xml:space="preserve">
          <source>Each window remembers the buffers displayed in it.</source>
          <target state="translated">每个窗口都会记住其中显示的缓冲区。</target>
        </trans-unit>
        <trans-unit id="6813d6d7a333036a4e7f2011729ff7b5325fc05c" translate="yes" xml:space="preserve">
          <source>Eager macro-expansion skipped due to cycle&amp;hellip;</source>
          <target state="translated">由于周期的原因，急切的宏扩展被跳过了&amp;hellip;&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="c7819a9a17cb6e9b801c22d26ce09956afd86797" translate="yes" xml:space="preserve">
          <source>Easier construction of list structure.</source>
          <target state="translated">更容易构建列表结构。</target>
        </trans-unit>
        <trans-unit id="62982c50a7c0a185c8095d28e3fa75a7344df943" translate="yes" xml:space="preserve">
          <source>Easy Menu</source>
          <target state="translated">简单菜单</target>
        </trans-unit>
        <trans-unit id="e669883509d7784c6369e20b9c8e23e7a2ae19ce" translate="yes" xml:space="preserve">
          <source>Echo Area Customization</source>
          <target state="translated">回音区定制</target>
        </trans-unit>
        <trans-unit id="e3ef941690c36ee5499f59f47789430e59decd21" translate="yes" xml:space="preserve">
          <source>Echo area messages are logged for the user.</source>
          <target state="translated">回音区信息为用户记录。</target>
        </trans-unit>
        <trans-unit id="d0d356e2906e1462d5588304b1489624265299d3" translate="yes" xml:space="preserve">
          <source>Edebug</source>
          <target state="translated">Edebug</target>
        </trans-unit>
        <trans-unit id="de72542989794bf4f9b5288408d18fa3b9d956e8" translate="yes" xml:space="preserve">
          <source>Edebug Breakpoints</source>
          <target state="translated">Edebug断点</target>
        </trans-unit>
        <trans-unit id="b8aee5a6d2c322bc3ab9fb40d52ca9936fbddd0c" translate="yes" xml:space="preserve">
          <source>Edebug Display Update</source>
          <target state="translated">Edebug显示更新</target>
        </trans-unit>
        <trans-unit id="bc18eb808760456413933f510d2a752bd1e8d6ab" translate="yes" xml:space="preserve">
          <source>Edebug Execution Modes</source>
          <target state="translated">Edebug执行模式</target>
        </trans-unit>
        <trans-unit id="db5fcd0b8950d84b987ca870e92762ff16aec921" translate="yes" xml:space="preserve">
          <source>Edebug Options</source>
          <target state="translated">Edebug选项</target>
        </trans-unit>
        <trans-unit id="ff142d85d91b23e86bff42fd24362bcde946851e" translate="yes" xml:space="preserve">
          <source>Edebug Recursive Edit</source>
          <target state="translated">Edebug 递归编辑</target>
        </trans-unit>
        <trans-unit id="fa24aa898a4d87754b34d172971d0b2fd796309e" translate="yes" xml:space="preserve">
          <source>Edebug Views</source>
          <target state="translated">Edebug浏览量</target>
        </trans-unit>
        <trans-unit id="aaaaaf87ac09329f2cde58c88e53a15cfbfc4fd2" translate="yes" xml:space="preserve">
          <source>Edebug also has a coverage testing feature (see &lt;a href=&quot;coverage-testing#Coverage-Testing&quot;&gt;Coverage Testing&lt;/a&gt;). These features partly duplicate each other, and it would be cleaner to combine them.</source>
          <target state="translated">Edebug还具有覆盖率测试功能（请参阅&lt;a href=&quot;coverage-testing#Coverage-Testing&quot;&gt;Coverage Testing&lt;/a&gt;）。这些功能部分互为复制，将它们组合起来会更清洁。</target>
        </trans-unit>
        <trans-unit id="5994b668cd44159515a3e4ba54f24512ebee8719" translate="yes" xml:space="preserve">
          <source>Edebug always stops or pauses at a breakpoint, except when the Edebug mode is Go-nonstop. In that mode, it ignores breakpoints entirely.</source>
          <target state="translated">Edebug总是在断点处停止或暂停,除非Edebug模式是Go-nonstop。在该模式下,它完全忽略断点。</target>
        </trans-unit>
        <trans-unit id="8ac07564c784bdf322cd2d256e04366eca19af10" translate="yes" xml:space="preserve">
          <source>Edebug and Macros</source>
          <target state="translated">Edebug和宏</target>
        </trans-unit>
        <trans-unit id="2334c070b2d93786e0f9d4e0e6ef1389b7e33bc2" translate="yes" xml:space="preserve">
          <source>Edebug binds &lt;code&gt;debug-on-error&lt;/code&gt; to this value, if &lt;code&gt;debug-on-error&lt;/code&gt; was previously &lt;code&gt;nil&lt;/code&gt;. See &lt;a href=&quot;trapping-errors#Trapping-Errors&quot;&gt;Trapping Errors&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;code&gt;debug-on-error&lt;/code&gt; 先前为 &lt;code&gt;nil&lt;/code&gt; ，则Edebug会将 &lt;code&gt;debug-on-error&lt;/code&gt; 与该值绑定。请参阅&lt;a href=&quot;trapping-errors#Trapping-Errors&quot;&gt;陷阱错误&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f770030db08cea088bd08663ed881e1cd0f21f55" translate="yes" xml:space="preserve">
          <source>Edebug binds &lt;code&gt;debug-on-quit&lt;/code&gt; to this value, if &lt;code&gt;debug-on-quit&lt;/code&gt; was previously &lt;code&gt;nil&lt;/code&gt;. See &lt;a href=&quot;trapping-errors#Trapping-Errors&quot;&gt;Trapping Errors&lt;/a&gt;.</source>
          <target state="translated">Edebug结合 &lt;code&gt;debug-on-quit&lt;/code&gt; 这个值，如果 &lt;code&gt;debug-on-quit&lt;/code&gt; 以前 &lt;code&gt;nil&lt;/code&gt; 。请参阅&lt;a href=&quot;trapping-errors#Trapping-Errors&quot;&gt;陷阱错误&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="581bbe1c7b1bf43b35887b695cec303d8cc475a0" translate="yes" xml:space="preserve">
          <source>Edebug can record an execution trace, storing it in a buffer named</source>
          <target state="translated">Edebug可以记录执行跟踪,并将其存储在一个名为--的缓冲区中。</target>
        </trans-unit>
        <trans-unit id="20366c58a50ec9fdef7674ad425cec8c20ee076b" translate="yes" xml:space="preserve">
          <source>Edebug cannot save and restore the value of &lt;code&gt;unread-command-events&lt;/code&gt;. Entering Edebug while this variable has a nontrivial value can interfere with execution of the program you are debugging.</source>
          <target state="translated">Edebug无法保存和恢复 &lt;code&gt;unread-command-events&lt;/code&gt; 的值。当此变量具有非平凡的值时输入Edebug可能会干扰正在调试的程序的执行。</target>
        </trans-unit>
        <trans-unit id="16918456881c20d67309bd633563ae947d9b3b7b" translate="yes" xml:space="preserve">
          <source>Edebug is a source-level debugger for Emacs Lisp programs, with which you can:</source>
          <target state="translated">Edebug是Emacs Lisp程序的源码级调试器,有了它你可以。</target>
        </trans-unit>
        <trans-unit id="789c782ce1bff1de5d155e3b1f0f895fb82a5514" translate="yes" xml:space="preserve">
          <source>Edebug knows how to instrument all the standard special forms, &lt;code&gt;interactive&lt;/code&gt; forms with an expression argument, anonymous lambda expressions, and other defining forms. However, Edebug cannot determine on its own what a user-defined macro will do with the arguments of a macro call, so you must provide that information using Edebug specifications; for details, see &lt;a href=&quot;edebug-and-macros#Edebug-and-Macros&quot;&gt;Edebug and Macros&lt;/a&gt;.</source>
          <target state="translated">Edebug知道如何处理所有标准特殊格式，带有表达式参数的 &lt;code&gt;interactive&lt;/code&gt; 窗体，匿名lambda表达式以及其他定义窗体。但是，Edebug无法自行确定用户定义的宏将如何处理宏调用的参数，因此您必须使用Edebug规范提供该信息。有关详细信息，请参见&lt;a href=&quot;edebug-and-macros#Edebug-and-Macros&quot;&gt;Edebug和宏&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1207a8c1131590d2c1fba8e8a08045f9810e7ded" translate="yes" xml:space="preserve">
          <source>Edebug provides rudimentary coverage testing and display of execution frequency.</source>
          <target state="translated">Edebug提供了基本的覆盖测试和执行频率的显示。</target>
        </trans-unit>
        <trans-unit id="36c74f738d92fd5a51f36c24f8a45083919a4383" translate="yes" xml:space="preserve">
          <source>Edebug specifications provide the power of regular expression matching, plus some context-free grammar constructs: the matching of sublists with balanced parentheses, recursive processing of forms, and recursion via indirect specifications.</source>
          <target state="translated">Edebug规范提供了正则表达式匹配的强大功能,再加上一些无上下文的语法构造:用平衡括号匹配子列表,对形式进行递归处理,以及通过间接规范进行递归。</target>
        </trans-unit>
        <trans-unit id="f06b5c4b7654995d8c103e8f7c041be09dabee12" translate="yes" xml:space="preserve">
          <source>Edebug supports evaluation of expressions containing references to lexically bound symbols created by the following constructs in</source>
          <target state="translated">Edebug支持对表达式的评估,这些表达式包含由以下结构创建的词法绑定符号的引用。</target>
        </trans-unit>
        <trans-unit id="92e9b4ffd97bcf6f208e24140d67894084ea0be2" translate="yes" xml:space="preserve">
          <source>Edebug supports several execution modes for running the program you are debugging. We call these alternatives &lt;em&gt;Edebug execution modes&lt;/em&gt;; do not confuse them with major or minor modes. The current Edebug execution mode determines how far Edebug continues execution before stopping&amp;mdash;whether it stops at each stop point, or continues to the next breakpoint, for example&amp;mdash;and how much Edebug displays the progress of the evaluation before it stops.</source>
          <target state="translated">Edebug支持几种执行模式来运行您正在调试的程序。我们将这些替代方法&lt;em&gt;称为Edebug执行模式&lt;/em&gt;；不要将它们与主要或次要模式混淆。当前的Edebug执行模式确定Edebug在停止之前继续执行的距离（例如，它在每个停止点处停止还是继续到下一个断点），以及Edebug在停止之前显示评估进度的程度。</target>
        </trans-unit>
        <trans-unit id="f7233d448eb4726f6f80864ae5edc50a6ac1b407" translate="yes" xml:space="preserve">
          <source>Edebug tries to be transparent to the program you are debugging, but it does not succeed completely. Edebug also tries to be transparent when you evaluate expressions with</source>
          <target state="translated">Edebug试图对你正在调试的程序透明化,但它并不完全成功。Edebug也试图在你用</target>
        </trans-unit>
        <trans-unit id="33534c2c4e6a92bffabc52624dabaee51456428a" translate="yes" xml:space="preserve">
          <source>Edebug uses the following specifications for &lt;code&gt;defun&lt;/code&gt; and the associated argument list and &lt;code&gt;interactive&lt;/code&gt; specifications. It is necessary to handle interactive forms specially since an expression argument is actually evaluated outside of the function body. (The specification for &lt;code&gt;defmacro&lt;/code&gt; is very similar to that for &lt;code&gt;defun&lt;/code&gt;, but allows for the &lt;code&gt;declare&lt;/code&gt; statement.)</source>
          <target state="translated">Edebug使用以下规格 &lt;code&gt;defun&lt;/code&gt; 定义和相关参数列表和 &lt;code&gt;interactive&lt;/code&gt; 规范。由于表达式自变量实际上是在函数体外部求值的，因此有必要特别处理交互形式。（规范第 &lt;code&gt;defmacro&lt;/code&gt; 是非常相似的 &lt;code&gt;defun&lt;/code&gt; 定义，但允许 &lt;code&gt;declare&lt;/code&gt; 声明。）</target>
        </trans-unit>
        <trans-unit id="28e944e5aaec320c912fa03faba41f7a60142004" translate="yes" xml:space="preserve">
          <source>Edebug&amp;rsquo;s behavior may also be changed on a per-definition basis by adding an entry to this alist, with a key of your choice and three functions. Then set the &lt;code&gt;edebug-behavior&lt;/code&gt; symbol property of an instrumented definition to the key of the new entry, and Edebug will call the new functions in place of its own for that definition.</source>
          <target state="translated">通过在此列表中添加一个条目（具有您选择的键和三个功能），也可以根据定义更改Edebug的行为。然后将已检测定义的 &lt;code&gt;edebug-behavior&lt;/code&gt; 符号属性设置为新条目的键，Edebug将为该定义调用新函数代替其自身的函数。</target>
        </trans-unit>
        <trans-unit id="2f53d1947915ed6dc821d423e99aa65ab03bb93d" translate="yes" xml:space="preserve">
          <source>Edebug&amp;rsquo;s step mode stops execution when the next stop point is reached. There are three other ways to stop Edebug execution once it has started: breakpoints, the global break condition, and source breakpoints.</source>
          <target state="translated">当到达下一个停止点时，Edebug的步进模式将停止执行。启动Edebug后，还有其他三种停止执行的方法：断点，全局中断条件和源断点。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
