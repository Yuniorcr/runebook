<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="elisp">
    <body>
      <group id="elisp">
        <trans-unit id="49f9de5cdd026d53e82afe5f7a540af01f423517" translate="yes" xml:space="preserve">
          <source>The value of a &lt;code&gt;while&lt;/code&gt; form is always &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">a的值 &lt;code&gt;while&lt;/code&gt; 形式始终是 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9912c1305dfe708608a449f833a2f31f708f2dbf" translate="yes" xml:space="preserve">
          <source>The value of a hook variable should be a list of functions. You can manipulate that list using the normal Lisp facilities, but the modular way is to use the functions &lt;code&gt;add-hook&lt;/code&gt; and &lt;code&gt;remove-hook&lt;/code&gt;, defined below. They take care to handle some unusual situations and avoid problems.</source>
          <target state="translated">hook变量的值应为函数列表。您可以使用常规的Lisp工具来操作该列表，但是模块化方法是使用下面定义的 &lt;code&gt;add-hook&lt;/code&gt; 和 &lt;code&gt;remove-hook&lt;/code&gt; 函数。他们会小心处理一些异常情况并避免出现问题。</target>
        </trans-unit>
        <trans-unit id="c0ed2587fe635b2d9e79d3541e6cc504fd9eebb9" translate="yes" xml:space="preserve">
          <source>The value of point in each displayed buffer is saved and restored if &lt;code&gt;edebug-save-displayed-buffer-points&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;edebug-save-displayed-buffer-points&lt;/code&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ,则保存并恢复每个显示缓冲区中的point值。</target>
        </trans-unit>
        <trans-unit id="0652902dbda00a1f1b8c6d489b8db651b1b2521c" translate="yes" xml:space="preserve">
          <source>The value of point is a number no less than 1, and no greater than the buffer size plus 1. If narrowing is in effect (see &lt;a href=&quot;narrowing#Narrowing&quot;&gt;Narrowing&lt;/a&gt;), then point is constrained to fall within the accessible portion of the buffer (possibly at one end of it).</source>
          <target state="translated">point的值是一个不小于1且不大于缓冲区大小加1的数字。如果正在变窄（请参见&lt;a href=&quot;narrowing#Narrowing&quot;&gt;Narrowing&lt;/a&gt;），则将point限制在缓冲区的可访问部分内（可能在一端）的）。</target>
        </trans-unit>
        <trans-unit id="c649d29a460c292a996b1cc1a21ea82f922077f2" translate="yes" xml:space="preserve">
          <source>The value of such an element denotes the side of the existing window where the new window shall be located. Valid values are &lt;code&gt;below&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;above&lt;/code&gt; and &lt;code&gt;left&lt;/code&gt;. The default is &lt;code&gt;below&lt;/code&gt;. The &lt;code&gt;window-atom&lt;/code&gt; parameter of the new window is set to this value.</source>
          <target state="translated">此类元素的值表示现有窗口应位于新窗口所在的那一侧。有效值分别 &lt;code&gt;below&lt;/code&gt; ， &lt;code&gt;right&lt;/code&gt; ， &lt;code&gt;above&lt;/code&gt; 和 &lt;code&gt;left&lt;/code&gt; 。默认为 &lt;code&gt;below&lt;/code&gt; 。新窗口的 &lt;code&gt;window-atom&lt;/code&gt; 参数设置为此值。</target>
        </trans-unit>
        <trans-unit id="3bee44a93e7dbfe8f5da10b43e59eebc67ba3be4" translate="yes" xml:space="preserve">
          <source>The value of such an element specifies an existing window the new window shall be combined with. If it specifies an internal window, all children of that window become part of the atomic window too. If no window is specified, the new window becomes a sibling of the selected window. The &lt;code&gt;window-atom&lt;/code&gt; parameter of the existing window is set to &lt;code&gt;main&lt;/code&gt; provided that window is live and its &lt;code&gt;window-atom&lt;/code&gt; parameter was not already set.</source>
          <target state="translated">此类元素的值指定新窗口应与之合并的现有窗口。如果指定内部窗口，则该窗口的所有子窗口也将成为原子窗口的一部分。如果未指定任何窗口，则新窗口将成为所选窗口的同级窗口。该 &lt;code&gt;window-atom&lt;/code&gt; 现有窗口的参数设置为 &lt;code&gt;main&lt;/code&gt; 提供该窗口是活动的，它的 &lt;code&gt;window-atom&lt;/code&gt; 参数还没有设置。</target>
        </trans-unit>
        <trans-unit id="36dca9fc8ccdca39123615ba9dd441f1ea0709cd" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;:mime-charset&lt;/code&gt; property is also defined as an alias for the coding system.</source>
          <target state="translated">所述的值 &lt;code&gt;:mime-charset&lt;/code&gt; 属性也被定义为用于编码系统的别名。</target>
        </trans-unit>
        <trans-unit id="683fca4c2cdec479bdd8c0d4b67ec7a0cb22ccb8" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;:width&lt;/code&gt;, &lt;code&gt;:align-to&lt;/code&gt;, &lt;code&gt;:height&lt;/code&gt;, and &lt;code&gt;:ascent&lt;/code&gt; properties can be a special kind of expression that is evaluated during redisplay. The result of the evaluation is used as an absolute number of pixels.</source>
          <target state="translated">所述的值 &lt;code&gt;:width&lt;/code&gt; ， &lt;code&gt;:align-to&lt;/code&gt; ， &lt;code&gt;:height&lt;/code&gt; ，和 &lt;code&gt;:ascent&lt;/code&gt; 特性可以是一种特殊的重新显示期间被评估表达的。评估结果用作像素的绝对数量。</target>
        </trans-unit>
        <trans-unit id="b5883233bcfdece07654ec3fc2db74080cba9898" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;setq&lt;/code&gt; form is the value of the last &lt;var&gt;form&lt;/var&gt;.</source>
          <target state="translated">该值 &lt;code&gt;setq&lt;/code&gt; 形式是最后的价值 &lt;var&gt;form&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="c20effc01d2e40edc2a51c8522b1818bc27ec613" translate="yes" xml:space="preserve">
          <source>The value of the &lt;var&gt;key-regexp&lt;/var&gt; argument specifies what part of each record is the sort key. The &lt;var&gt;key-regexp&lt;/var&gt; could match the whole record, or only a part. In the latter case, the rest of the record has no effect on the sorted order of records, but it is carried along when the record moves to its new position.</source>
          <target state="translated">&lt;var&gt;key-regexp&lt;/var&gt; 参数的值指定每个记录的哪一部分是排序键。在 &lt;var&gt;key-regexp&lt;/var&gt; 可以匹配整个记录，或只是其中的一部分。在后一种情况下，记录的其余部分对记录的排序顺序没有影响，但是当记录移至新位置时会随身携带。</target>
        </trans-unit>
        <trans-unit id="61f439d56d48d0b8c0f5d67dbcbbd53e2a928133" translate="yes" xml:space="preserve">
          <source>The value of the &lt;var&gt;record-regexp&lt;/var&gt; argument specifies how to divide the buffer into sort records. At the end of each record, a search is done for this regular expression, and the text that matches it is taken as the next record. For example, the regular expression &amp;lsquo;</source>
          <target state="translated">&lt;var&gt;record-regexp&lt;/var&gt; 参数的值指定如何将缓冲区划分为排序记录。在每个记录的末尾，将搜索此正则表达式，并将与之匹配的文本作为下一条记录。例如，正则表达式&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="39ba2b3d88e32ebb4217d6fb97a97f51cd7ad773" translate="yes" xml:space="preserve">
          <source>The value of the last form in &lt;var&gt;body&lt;/var&gt; is returned, unless the argument &lt;var&gt;quit-function&lt;/var&gt; is specified. In that case, it is called with two arguments: the window showing the buffer and the result of &lt;var&gt;body&lt;/var&gt;. The final return value is then whatever &lt;var&gt;quit-function&lt;/var&gt; returns.</source>
          <target state="translated">除非指定参数 &lt;var&gt;quit-function&lt;/var&gt; ，否则返回 &lt;var&gt;body&lt;/var&gt; 最后一个形式的值。在这种情况下，将使用两个参数调用它：显示缓冲区的窗口和 &lt;var&gt;body&lt;/var&gt; 的结果。最终的返回值就是 &lt;var&gt;quit-function&lt;/var&gt; 返回的值。</target>
        </trans-unit>
        <trans-unit id="e78b740538539c7c406d38d214ecf64e0a9c548f" translate="yes" xml:space="preserve">
          <source>The value of the last form in &lt;var&gt;body&lt;/var&gt; is returned.</source>
          <target state="translated">返回 &lt;var&gt;body&lt;/var&gt; 最后一个表单的值。</target>
        </trans-unit>
        <trans-unit id="5503ca30040ea0d8a2bf36ebd8b2d6d451adef8e" translate="yes" xml:space="preserve">
          <source>The value of the optional argument &lt;var&gt;require-match&lt;/var&gt; determines how the user may exit the minibuffer:</source>
          <target state="translated">可选参数 &lt;var&gt;require-match&lt;/var&gt; 的值确定用户如何退出迷你缓冲区：</target>
        </trans-unit>
        <trans-unit id="91cb6366ae526fcd118c1c7987633bf5fb25c0aa" translate="yes" xml:space="preserve">
          <source>The value of this abnormal hook should be a list of functions, which are used to compute a completion table (see &lt;a href=&quot;basic-completion#Basic-Completion&quot;&gt;Basic Completion&lt;/a&gt;) for completing the text at point. It can be used by major modes to provide mode-specific completion tables (see &lt;a href=&quot;major-mode-conventions#Major-Mode-Conventions&quot;&gt;Major Mode Conventions&lt;/a&gt;).</source>
          <target state="translated">这个异常钩子的值应该是一个函数列表，这些函数用于计算完成表（请参见&lt;a href=&quot;basic-completion#Basic-Completion&quot;&gt;Basic Completion&lt;/a&gt;）以完成点处的文本。主要模式可以使用它来提供特定于模式的完成表（请参阅&lt;a href=&quot;major-mode-conventions#Major-Mode-Conventions&quot;&gt;主要模式约定&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="1f63a8b7cc8d9cea6e125635c39e1ca62c26e1ba" translate="yes" xml:space="preserve">
          <source>The value of this buffer-local variable is the (mode-specific) abbreviation table of the current buffer. It can also be a list of such tables.</source>
          <target state="translated">这个buffer-local变量的值是当前缓冲区的(特定模式)缩写表。它也可以是一个这样的表的列表。</target>
        </trans-unit>
        <trans-unit id="ffb436c64e5dfdae7baf41af2904d33b30ffad65" translate="yes" xml:space="preserve">
          <source>The value of this buffer-local variable is the default directory for the current buffer. It should be an absolute directory name; it may start with &amp;lsquo;</source>
          <target state="translated">此局部缓冲区变量的值是当前缓冲区的默认目录。它应该是绝对目录名；它可能以&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="911b12790a3948cec2a227be07bf8d24f3677dcc" translate="yes" xml:space="preserve">
          <source>The value of this buffer-local variable is the length of the current buffer, when it was last read in, saved, or auto-saved. This is used to detect a substantial decrease in size, and turn off auto-saving in response.</source>
          <target state="translated">缓冲区局部变量的值是当前缓冲区的长度,即最后一次读入、保存或自动保存的时间。这个变量用于检测缓冲区的大小是否大幅减少,并关闭自动保存功能。</target>
        </trans-unit>
        <trans-unit id="0fd2598f40c31f5cad837711cfca8950d8dcbaeb" translate="yes" xml:space="preserve">
          <source>The value of this buffer-local variable is the list of saved former marks of the current buffer, most recent first.</source>
          <target state="translated">这个buffer-local变量的值是当前缓冲区保存的前标记列表,最近的先保存。</target>
        </trans-unit>
        <trans-unit id="34c1d5bd1b00a5f68781fa93debb24f2ea06a228" translate="yes" xml:space="preserve">
          <source>The value of this buffer-local variable is the spacing between tab stops used for displaying tab characters in Emacs buffers. The value is in units of columns, and the default is 8. Note that this feature is completely independent of the user-settable tab stops used by the command &lt;code&gt;tab-to-tab-stop&lt;/code&gt;. See &lt;a href=&quot;indent-tabs#Indent-Tabs&quot;&gt;Indent Tabs&lt;/a&gt;.</source>
          <target state="translated">此缓冲区局部变量的值是用于在Emacs缓冲区中显示制表符的制表位之间的间距。该值以列为单位，默认值为8。请注意，此功能完全独立于 &lt;code&gt;tab-to-tab-stop&lt;/code&gt; 命令使用的用户可设置的制表位。请参阅&lt;a href=&quot;indent-tabs#Indent-Tabs&quot;&gt;缩进标签&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="519d26f1c87601f1ce760feed44524edd2e01ae9" translate="yes" xml:space="preserve">
          <source>The value of this buffer-local variable should be a function (of no arguments) to be called after self-inserting a character from the table &lt;code&gt;auto-fill-chars&lt;/code&gt;, see below. It may be &lt;code&gt;nil&lt;/code&gt;, in which case nothing special is done in that case.</source>
          <target state="translated">在从表 &lt;code&gt;auto-fill-chars&lt;/code&gt; 中自我插入一个字符后，将调用此缓冲区局部变量的值（无参数），请参见下文。它可能为 &lt;code&gt;nil&lt;/code&gt; ，在这种情况下，没有进行任何特殊处理。</target>
        </trans-unit>
        <trans-unit id="caea4537a082e3806e14a0dedfb084a8ccdecf75" translate="yes" xml:space="preserve">
          <source>The value of this obsolete variable should be a list of functions that accept a single string argument and return another string. The default &lt;code&gt;filter-buffer-substring&lt;/code&gt; function passes the buffer substring to the first function in this list, and the return value of each function is passed to the next function. The return value of the last function is passed to &lt;code&gt;filter-buffer-substring-functions&lt;/code&gt;.</source>
          <target state="translated">这个过时的变量的值应该是一个函数列表，这些函数接受单个字符串参数并返回另一个字符串。默认的 &lt;code&gt;filter-buffer-substring&lt;/code&gt; 函数将缓冲区子字符串传递给此列表中的第一个函数，而每个函数的返回值将传递给下一个函数。最后一个函数的返回值传递给 &lt;code&gt;filter-buffer-substring-functions&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="14a333d5db25651595647364a355fb887be56865" translate="yes" xml:space="preserve">
          <source>The value of this option can be also a list of frame parameters. In that case, implied resizing is inhibited for the change of a parameter that appears in this list. Parameters currently handled by this option are &lt;code&gt;font&lt;/code&gt;, &lt;code&gt;font-backend&lt;/code&gt;, &lt;code&gt;internal-border-width&lt;/code&gt;, &lt;code&gt;menu-bar-lines&lt;/code&gt; and &lt;code&gt;tool-bar-lines&lt;/code&gt;.</source>
          <target state="translated">此选项的值也可以是框架参数的列表。在这种情况下，隐含的调整大小会因为此列表中出现的参数的更改而被禁止。该选项当前处理的参数是 &lt;code&gt;font&lt;/code&gt; ， &lt;code&gt;font-backend&lt;/code&gt; ， &lt;code&gt;internal-border-width&lt;/code&gt; ， &lt;code&gt;menu-bar-lines&lt;/code&gt; 和 &lt;code&gt;tool-bar-lines&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3e83ed5cb4d5f62c69d5bf2a02a4d3115ea77186" translate="yes" xml:space="preserve">
          <source>The value of this option is an alist mapping conditions to display actions. Each condition may be either a regular expression matching a buffer name or a function that takes two arguments: a buffer name and the &lt;var&gt;action&lt;/var&gt; argument passed to &lt;code&gt;display-buffer&lt;/code&gt;. If either the name of the buffer passed to &lt;code&gt;display-buffer&lt;/code&gt; matches a regular expression in this alist, or the function specified by a condition returns non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;display-buffer&lt;/code&gt; uses the corresponding display action to display the buffer.</source>
          <target state="translated">此选项的值是列表列表条件，用于显示操作。每个条件可以是与缓冲区名称匹配的正则表达式，也可以是带有两个参数的函数：缓冲区名称和传递给 &lt;code&gt;display-buffer&lt;/code&gt; 的 &lt;var&gt;action&lt;/var&gt; 参数。如果传递给 &lt;code&gt;display-buffer&lt;/code&gt; 的缓冲区名称与该列表中的正则表达式匹配，或者由条件指定的函数返回non &lt;code&gt;display-buffer&lt;/code&gt; &lt;code&gt;nil&lt;/code&gt; ，则display-buffer使用相应的显示操作来显示缓冲区。</target>
        </trans-unit>
        <trans-unit id="f7f0d552de7fde481ea8ba3d348287bb76ef6370" translate="yes" xml:space="preserve">
          <source>The value of this option should be a display action. This option can be used to define a standard display action for calls to &lt;code&gt;display-buffer&lt;/code&gt;.</source>
          <target state="translated">此选项的值应该是显示操作。此选项可用于定义对 &lt;code&gt;display-buffer&lt;/code&gt; 的调用的标准显示动作。</target>
        </trans-unit>
        <trans-unit id="1982bc460b3acf20b72b5d8f8e0b8f69732c0b5a" translate="yes" xml:space="preserve">
          <source>The value of this parameter is a cons cell whose &lt;small&gt;CAR&lt;/small&gt; and &lt;small&gt;CDR&lt;/small&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, specify the minimum values (in columns) for the left and right margin of this window (see &lt;a href=&quot;display-margins#Display-Margins&quot;&gt;Display Margins&lt;/a&gt;. When present, Emacs will use these values instead of the actual margin widths for determining whether a window can be split or shrunk horizontally.</source>
          <target state="translated">此参数的值是一个cons单元格，其&lt;small&gt;CAR&lt;/small&gt;和&lt;small&gt;CDR&lt;/small&gt;（如果为 &lt;code&gt;nil&lt;/code&gt; ，则为nil）则指定此窗口左右边界的最小值（请参见&lt;a href=&quot;display-margins#Display-Margins&quot;&gt;显示&lt;/a&gt;边界）。确定窗口是否可以水平拆分或缩小的实际边距宽度的多少。</target>
        </trans-unit>
        <trans-unit id="73135c98ff9d5f3b757d7d2d8c8c54929aa02856" translate="yes" xml:space="preserve">
          <source>The value of this property, &lt;var&gt;help&lt;/var&gt;, specifies a help-echo string to display while the mouse is on that item. This is displayed in the same way as &lt;code&gt;help-echo&lt;/code&gt; text properties (see &lt;a href=&quot;special-properties#Help-display&quot;&gt;Help display&lt;/a&gt;). Note that this must be a constant string, unlike the &lt;code&gt;help-echo&lt;/code&gt; property for text and overlays.</source>
          <target state="translated">此属性的值 &lt;var&gt;help&lt;/var&gt; ，指定当鼠标在该项目上时显示的帮助回显字符串。该显示方式与 &lt;code&gt;help-echo&lt;/code&gt; 文本属性的显示方式相同（请参阅&amp;ldquo;&lt;a href=&quot;special-properties#Help-display&quot;&gt;帮助显示&amp;rdquo;&lt;/a&gt;）。请注意，与文本和覆盖图的 &lt;code&gt;help-echo&lt;/code&gt; 属性不同，它必须是一个常量字符串。</target>
        </trans-unit>
        <trans-unit id="12db18bf704f645ea58921e288a12705f317f668" translate="yes" xml:space="preserve">
          <source>The value of this user option is a symbol that specifies the style Emacs should use for single quotes in the wording of help and messages. If the option&amp;rsquo;s value is &lt;code&gt;curve&lt;/code&gt;, the style is</source>
          <target state="translated">此用户选项的值是一个符号，用于指定Emacs在帮助和消息的措词中应使用单引号引起的样式。如果选项的值为 &lt;code&gt;curve&lt;/code&gt; ，则样式为</target>
        </trans-unit>
        <trans-unit id="a39d636df5f5c9f6eeef4e7d617080a5753f3330" translate="yes" xml:space="preserve">
          <source>The value of this variable determines the major mode of the initial</source>
          <target state="translated">这个变量的值决定了初始的主要模式。</target>
        </trans-unit>
        <trans-unit id="ec9a110c01c8c7ed80a2b14875b7fd93b17a23df" translate="yes" xml:space="preserve">
          <source>The value of this variable indicates the time at which Emacs was built. It uses the style of &lt;code&gt;current-time&lt;/code&gt; (see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;), or is &lt;code&gt;nil&lt;/code&gt; if the information is not available.</source>
          <target state="translated">该变量的值指示构建Emacs的时间。它使用 &lt;code&gt;current-time&lt;/code&gt; 的样式（请参阅&lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;），如果信息不可用，则为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7126b5bb562715f119a074a9fb6f9539c652ed90" translate="yes" xml:space="preserve">
          <source>The value of this variable is &lt;code&gt;t&lt;/code&gt; once the command line has been processed.</source>
          <target state="translated">处理完命令行后，此变量的值为 &lt;code&gt;t&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d734191b39f03642c9ca10157d8d93befc682dbb" translate="yes" xml:space="preserve">
          <source>The value of this variable is a buffer position (an integer or a marker) for &lt;code&gt;expand-abbrev&lt;/code&gt; to use as the start of the next abbrev to be expanded. The value can also be &lt;code&gt;nil&lt;/code&gt;, which means to use the word before point instead. &lt;code&gt;abbrev-start-location&lt;/code&gt; is set to &lt;code&gt;nil&lt;/code&gt; each time &lt;code&gt;expand-abbrev&lt;/code&gt; is called. This variable is also set by &lt;code&gt;abbrev-prefix-mark&lt;/code&gt;.</source>
          <target state="translated">该变量的值是一个缓冲区位置（整数或标记）， &lt;code&gt;expand-abbrev&lt;/code&gt; 用作下一个要扩展的缩写的开始。该值也可以是 &lt;code&gt;nil&lt;/code&gt; ，这意味着要使用point之前的单词。每次调用 &lt;code&gt;expand-abbrev&lt;/code&gt; 时， &lt;code&gt;abbrev-start-location&lt;/code&gt; 设置为 &lt;code&gt;nil&lt;/code&gt; 。该变量也由 &lt;code&gt;abbrev-prefix-mark&lt;/code&gt; 设置。</target>
        </trans-unit>
        <trans-unit id="1fa6cf030fdf3d942d3466e8d2a76742bda4ab1b" translate="yes" xml:space="preserve">
          <source>The value of this variable is a char-table (see &lt;a href=&quot;char_002dtables#Char_002dTables&quot;&gt;Char-Tables&lt;/a&gt;) that specifies, for each character, its Unicode &lt;code&gt;General_Category&lt;/code&gt; property as a symbol.</source>
          <target state="translated">此变量的值是一个字符表（请参见&lt;a href=&quot;char_002dtables#Char_002dTables&quot;&gt;Char-Tables&lt;/a&gt;），该表为每个字符指定其Unicode &lt;code&gt;General_Category&lt;/code&gt; 属性作为符号。</target>
        </trans-unit>
        <trans-unit id="7ba7ac5d05f8bee892363deea964b1380bb266d1" translate="yes" xml:space="preserve">
          <source>The value of this variable is a char-table that specifies the width of each character in columns that it will occupy on the screen.</source>
          <target state="translated">这个变量的值是一个char-table,指定了每个字符在屏幕上所占列的宽度。</target>
        </trans-unit>
        <trans-unit id="fb2925010bd994bd500ca39b6e263f1a4fbc0618" translate="yes" xml:space="preserve">
          <source>The value of this variable is a char-table that specifies, for each character, a symbol whose name is the script to which the character belongs, according to the Unicode Standard classification of the Unicode code space into script-specific blocks. This char-table has a single extra slot whose value is the list of all script symbols.</source>
          <target state="translated">这个变量的值是一个字符表,根据Unicode标准对Unicode代码空间的分类,为每个字符指定一个符号,其名称是该字符所属的脚本。这个字符表有一个额外的槽,其值是所有脚本符号的列表。</target>
        </trans-unit>
        <trans-unit id="62e38dcba10ebd10ed021a19971e4e68aec9afdc" translate="yes" xml:space="preserve">
          <source>The value of this variable is a char-table that specifies, for each character, whether it is printable or not. That is, if evaluating &lt;code&gt;(aref printable-chars char)&lt;/code&gt; results in &lt;code&gt;t&lt;/code&gt;, the character is printable, and if it results in &lt;code&gt;nil&lt;/code&gt;, it is not.</source>
          <target state="translated">此变量的值是一个字符表，它为每个字符指定是否可打印。也就是说，如果求值 &lt;code&gt;(aref printable-chars char)&lt;/code&gt; 结果为 &lt;code&gt;t&lt;/code&gt; ，则字符是可打印的，而如果结果为 &lt;code&gt;nil&lt;/code&gt; ，则不是。</target>
        </trans-unit>
        <trans-unit id="d185fa900c5b6d5d5843afc08b4f7ca02fa56927" translate="yes" xml:space="preserve">
          <source>The value of this variable is a char-table which defines glyphless characters and how they are displayed. Each entry must be one of the following display methods:</source>
          <target state="translated">这个变量的值是一个字符表,它定义了无字形字符和它们的显示方式。每个条目必须是以下显示方法之一。</target>
        </trans-unit>
        <trans-unit id="16053fd945be0355c0afa6bafe1716c51992d3ce" translate="yes" xml:space="preserve">
          <source>The value of this variable is a full keymap used by Electric Command Future mode. The functions in this map allow you to edit commands you have not yet thought about executing.</source>
          <target state="translated">这个变量的值是电动命令未来模式使用的完整键图。这个图谱中的功能允许你编辑你还没有想到要执行的命令。</target>
        </trans-unit>
        <trans-unit id="bc9b16dd544b211e330b1ab8935748a5b2ce4d61" translate="yes" xml:space="preserve">
          <source>The value of this variable is a function that &lt;code&gt;expand-abbrev&lt;/code&gt; will call with no arguments to do the expansion. The function can do anything it wants before and after performing the expansion. It should return the abbrev symbol if expansion took place.</source>
          <target state="translated">此变量的值是 &lt;code&gt;expand-abbrev&lt;/code&gt; 将调用的函数，不带参数即可进行扩展。该函数可以在执行扩展之前和之后执行任何所需的操作。如果进行了扩展，则应返回缩写符号。</target>
        </trans-unit>
        <trans-unit id="895242d99288a5e7484baa95b5a0b6635e384c18" translate="yes" xml:space="preserve">
          <source>The value of this variable is a function that &lt;code&gt;filter-buffer-substring&lt;/code&gt; will call to do the actual work. The function receives three arguments, the same as those of &lt;code&gt;filter-buffer-substring&lt;/code&gt;, which it should treat as per the documentation of that function. It should return the filtered text (and optionally delete the source text).</source>
          <target state="translated">此变量的值是 &lt;code&gt;filter-buffer-substring&lt;/code&gt; 将调用以执行实际工作的函数。该函数接收三个参数，与 &lt;code&gt;filter-buffer-substring&lt;/code&gt; 的参数相同，应根据该函数的文档对其进行处理。它应该返回过滤的文本（并有选择地删除源文本）。</target>
        </trans-unit>
        <trans-unit id="fbbbbaa436e4df5bde4fbe1ba9b2858aa0e0c766" translate="yes" xml:space="preserve">
          <source>The value of this variable is a function that can be used by &lt;code&gt;indent-region&lt;/code&gt; as a short cut. It should take two arguments, the start and end of the region. You should design the function so that it will produce the same results as indenting the lines of the region one by one, but presumably faster.</source>
          <target state="translated">此变量的值是一个可以由 &lt;code&gt;indent-region&lt;/code&gt; 用作快捷方式的函数。它应该有两个参数，区域的开始和结束。您应该设计函数，使其产生与缩进区域的线条相同的结果，但可能更快。</target>
        </trans-unit>
        <trans-unit id="f3821bf85d9aeff1378d29948aa261bfa194d593" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of ImageMagick image types which Emacs may attempt to render using ImageMagick. Each list element should be one of the symbols in the list returned by &lt;code&gt;imagemagick-types&lt;/code&gt;, or an equivalent string. Alternatively, a value of &lt;code&gt;t&lt;/code&gt; enables ImageMagick for all possible image types. Regardless of the value of this variable, &lt;code&gt;imagemagick-types-inhibit&lt;/code&gt; (see below) takes precedence.</source>
          <target state="translated">此变量的值是Emacs尝试使用ImageMagick渲染的ImageMagick图像类型的列表。每个列表元素应为 &lt;code&gt;imagemagick-types&lt;/code&gt; 返回的列表中的符号之一，或等效的字符串。另外， &lt;code&gt;t&lt;/code&gt; 值对所有可能的图像类型都启用ImageMagick。无论此变量的值如何， &lt;code&gt;imagemagick-types-inhibit&lt;/code&gt; （请参见下文）均优先。</target>
        </trans-unit>
        <trans-unit id="9de9333a1769c5c462265b3d8bd79b1d5ee87d05" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of all minor mode commands.</source>
          <target state="translated">这个变量的值是所有小模式命令的列表。</target>
        </trans-unit>
        <trans-unit id="47a8ae72a588c611af4dd474d9a9965282c852e9" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of completion style (symbols) to use for performing completion. A &lt;em&gt;completion style&lt;/em&gt; is a set of rules for generating completions. Each symbol occurring this list must have a corresponding entry in &lt;code&gt;completion-styles-alist&lt;/code&gt;.</source>
          <target state="translated">此变量的值是用于执行完成的完成样式（符号）的列表。一个&lt;em&gt;完成的风格&lt;/em&gt;是一组用于发电的完成规则。出现在该列表中的每个符号都必须在 &lt;code&gt;completion-styles-alist&lt;/code&gt; 具有一个对应的条目。</target>
        </trans-unit>
        <trans-unit id="29a32af46e4eeadb6fb35baac6ed9c6739f1c9f8" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of directories to search for programs to run in subprocesses. Each element is either the name of a directory (i.e., a string), or &lt;code&gt;nil&lt;/code&gt;, which stands for the default directory (which is the value of &lt;code&gt;default-directory&lt;/code&gt;). See &lt;a href=&quot;locating-files#Locating-Files&quot;&gt;executable-find&lt;/a&gt;, for the details of this search.</source>
          <target state="translated">该变量的值是目录列表，用于搜索要在子进程中运行的程序。每个元素要么是目录名（即字符串），要么是 &lt;code&gt;nil&lt;/code&gt; ，它代表默认目录（这是 &lt;code&gt;default-directory&lt;/code&gt; 的值）。有关此搜索的详细信息，请参见&lt;a href=&quot;locating-files#Locating-Files&quot;&gt;execute-find&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4f32a4eab842de190c1e695fd9e2152827b42fc2" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of directories to search when loading files with &lt;code&gt;load&lt;/code&gt;. Each element is a string (which must be a directory) or &lt;code&gt;nil&lt;/code&gt; (which stands for the current working directory).</source>
          <target state="translated">该变量的值是在使用 &lt;code&gt;load&lt;/code&gt; 加载文件时要搜索的目录的列表。每个元素都是一个字符串（必须是目录）或 &lt;code&gt;nil&lt;/code&gt; （代表当前工作目录）。</target>
        </trans-unit>
        <trans-unit id="253b1f7802a872862cd35b4dffcb6775c54311a8" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of elements of the form &lt;code&gt;(&lt;var&gt;mode&lt;/var&gt; . &lt;var&gt;abbrev-table&lt;/var&gt;)&lt;/code&gt; where &lt;var&gt;mode&lt;/var&gt; is the name of a variable: if the variable is bound to a non-&lt;code&gt;nil&lt;/code&gt; value, then the &lt;var&gt;abbrev-table&lt;/var&gt; is active, otherwise it is ignored. &lt;var&gt;abbrev-table&lt;/var&gt; can also be a list of abbrev tables.</source>
          <target state="translated">这个变量的值是以下形式的元素的列表 &lt;code&gt;(&lt;var&gt;mode&lt;/var&gt; . &lt;var&gt;abbrev-table&lt;/var&gt;)&lt;/code&gt; ，其中 &lt;var&gt;mode&lt;/var&gt; 是一个变量的名称：如果变量绑定到一个非 &lt;code&gt;nil&lt;/code&gt; 值，则该 &lt;var&gt;abbrev-table&lt;/var&gt; 是有效的，否则它被忽略。 &lt;var&gt;abbrev-table&lt;/var&gt; 也可以是abbrev表的列表。</target>
        </trans-unit>
        <trans-unit id="40d59ecb84f610c7ca9b936f63f0ac181287b46b" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of event types that serve as alternative help characters. These events are handled just like the event specified by &lt;code&gt;help-char&lt;/code&gt;.</source>
          <target state="translated">此变量的值是事件类型的列表，这些事件类型可用作替代帮助字符。这些事件的处理就像 &lt;code&gt;help-char&lt;/code&gt; 指定的事件一样。</target>
        </trans-unit>
        <trans-unit id="6ddcbef14446d78cc4e1ee3e9fae5bc0b58251c5" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of functions to be called after a file is visited. The file&amp;rsquo;s local-variables specification (if any) will have been processed before the hooks are run. The buffer visiting the file is current when the hook functions are run.</source>
          <target state="translated">该变量的值是访问文件后要调用的函数的列表。该文件的局部变量规范（如果有）将在运行挂钩之前已得到处理。运行挂钩函数时，访问文件的缓冲区是当前的。</target>
        </trans-unit>
        <trans-unit id="4a37504953ca04fe3adf8b140d470266df3deb66" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of functions to be called before writing out a buffer to its visited file. If one of them returns non-&lt;code&gt;nil&lt;/code&gt;, the file is considered already written and the rest of the functions are not called, nor is the usual code for writing the file executed.</source>
          <target state="translated">此变量的值是在将缓冲区写到其访问的文件之前要调用的函数的列表。如果其中之一返回non- &lt;code&gt;nil&lt;/code&gt; ，则认为该文件已被写入，并且不会调用其余函数，也不会执行用于写入文件的常规代码。</target>
        </trans-unit>
        <trans-unit id="fb6acbc82868d45944f82b4791b7635aef8fde9d" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of functions to be called when &lt;code&gt;find-file&lt;/code&gt; or &lt;code&gt;find-file-noselect&lt;/code&gt; is passed a nonexistent file name. &lt;code&gt;find-file-noselect&lt;/code&gt; calls these functions as soon as it detects a nonexistent file. It calls them in the order of the list, until one of them returns non-&lt;code&gt;nil&lt;/code&gt;. &lt;code&gt;buffer-file-name&lt;/code&gt; is already set up.</source>
          <target state="translated">这个变量的值时调用的函数列表 &lt;code&gt;find-file&lt;/code&gt; 或 &lt;code&gt;find-file-noselect&lt;/code&gt; 传递一个不存在的文件名。一旦 &lt;code&gt;find-file-noselect&lt;/code&gt; 不存在，find-file-noselect就会调用这些功能。它要求它们在列表中的顺序，直到其中一个返回非 &lt;code&gt;nil&lt;/code&gt; 。 &lt;code&gt;buffer-file-name&lt;/code&gt; 已经设置。</target>
        </trans-unit>
        <trans-unit id="ce64d0031359699b8cfafc51d537afbdf1484ede" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of symbols that are the features loaded in the current Emacs session. Each symbol was put in this list with a call to &lt;code&gt;provide&lt;/code&gt;. The order of the elements in the &lt;code&gt;features&lt;/code&gt; list is not significant.</source>
          <target state="translated">该变量的值是符号列表，这些符号是当前Emacs会话中加载的功能。每个符号都被放在这个列表中，并 &lt;code&gt;provide&lt;/code&gt; 了呼叫。 &lt;code&gt;features&lt;/code&gt; 列表中元素的顺序并不重要。</target>
        </trans-unit>
        <trans-unit id="63e64601fef9cafb97c46d2990222c9f7f4311c8" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of the keywords to highlight. Lisp programs should not set this variable directly. Normally, the value is automatically set by Font Lock mode, using the &lt;var&gt;keywords&lt;/var&gt; element in &lt;code&gt;font-lock-defaults&lt;/code&gt;. The value can also be altered using the functions &lt;code&gt;font-lock-add-keywords&lt;/code&gt; and &lt;code&gt;font-lock-remove-keywords&lt;/code&gt; (see &lt;a href=&quot;customizing-keywords#Customizing-Keywords&quot;&gt;Customizing Keywords&lt;/a&gt;).</source>
          <target state="translated">此变量的值是要突出显示的关键字的列表。Lisp程序不应直接设置此变量。通常，该值是通过Font Lock模式使用 &lt;code&gt;font-lock-defaults&lt;/code&gt; 中的 &lt;var&gt;keywords&lt;/var&gt; 元素自动设置的。也可以使用 &lt;code&gt;font-lock-add-keywords&lt;/code&gt; 和 &lt;code&gt;font-lock-remove-keywords&lt;/code&gt; 功能更改该值（请参阅&lt;a href=&quot;customizing-keywords#Customizing-Keywords&quot;&gt;自定义关键字&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="133759324957b9672c4b0b1c0d11bac955ea2da2" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of the values returned by all the expressions that were read, evaluated, and printed from buffers (including the minibuffer) by the standard Emacs commands which do this. (Note that this does &lt;em&gt;not&lt;/em&gt; include evaluation in</source>
          <target state="translated">此变量的值是由执行此操作的标准Emacs命令从缓冲区（包括微型缓冲区）读取，评估和打印的所有表达式返回的值的列表。（请注意，这并&lt;em&gt;没有&lt;/em&gt;包括在评估</target>
        </trans-unit>
        <trans-unit id="f54e2eed25b0db677a48a0649bd0311f6852f604" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of themes loaded into Emacs. Each theme is represented by a Lisp symbol (the theme name). The default value of this variable is a list containing two dummy themes: &lt;code&gt;(user changed)&lt;/code&gt;. The &lt;code&gt;changed&lt;/code&gt; theme stores settings made before any Custom themes are applied (e.g., variables set outside of Customize). The &lt;code&gt;user&lt;/code&gt; theme stores settings the user has customized and saved. Any additional themes declared with the &lt;code&gt;deftheme&lt;/code&gt; macro are added to the front of this list.</source>
          <target state="translated">该变量的值是加载到Emacs中的主题列表。每个主题均由Lisp符号（主题名称）表示。此变量的默认值是一个包含两个虚拟主题的列表：（ &lt;code&gt;(user changed)&lt;/code&gt; 。在 &lt;code&gt;changed&lt;/code&gt; 之前的任何自定义主题做主题存储的设置应用（例如，变量设置自定义之外）。该 &lt;code&gt;user&lt;/code&gt; 的主题存储的设置在用户自定义并保存。使用 &lt;code&gt;deftheme&lt;/code&gt; 宏声明的所有其他主题都添加到此列表的前面。</target>
        </trans-unit>
        <trans-unit id="124d3c23221104c7409d74944cb02f2b99b0114e" translate="yes" xml:space="preserve">
          <source>The value of this variable is a list of warnings to be displayed after the current command has finished. Each element must be a list</source>
          <target state="translated">这个变量的值是当前命令结束后要显示的警告列表。每个元素必须是一个列表</target>
        </trans-unit>
        <trans-unit id="89d3ec324274c4cfefe0acf837435da3f85f3c47" translate="yes" xml:space="preserve">
          <source>The value of this variable is a local keymap for characters following the Help key,</source>
          <target state="translated">这个变量的值是Help键后字符的本地键图。</target>
        </trans-unit>
        <trans-unit id="aa3a6a128eaffd7a416313e23382dec1addead25" translate="yes" xml:space="preserve">
          <source>The value of this variable is a mode line construct that controls the contents of the mode-line. It is always buffer-local in all buffers.</source>
          <target state="translated">这个变量的值是一个模式行构造,它控制模式行的内容。在所有的缓冲区中,它总是缓冲区本地的。</target>
        </trans-unit>
        <trans-unit id="25cd23c85bbb1ee221f951d01edffe0cd1ce0147" translate="yes" xml:space="preserve">
          <source>The value of this variable is a nonnegative integer that controls whether Emacs signals a range error when a large integer would be calculated. Integers with absolute values less than 2**&lt;var&gt;n&lt;/var&gt;, where &lt;var&gt;n&lt;/var&gt; is this variable&amp;rsquo;s value, do not signal a range error. Attempts to create larger integers typically signal a range error, although there might be no signal if a larger integer can be created cheaply. Setting this variable to a large number can be costly if a computation creates huge integers.</source>
          <target state="translated">此变量的值是一个非负整数，它控制在计算大整数时Emacs是否发出范围误差。绝对值小于2 ** &lt;var&gt;n&lt;/var&gt; 的整数，其中 &lt;var&gt;n&lt;/var&gt; 是此变量的值，不表示范围错误。尝试创建较大的整数通常会发出范围错误的信号，尽管如果可以廉价地创建较大的整数可能不会发出信号。如果计算创建巨大的整数，则将此变量设置为较大的值可能会非常昂贵。</target>
        </trans-unit>
        <trans-unit id="b0a0e6475857d62888333d14d74963c15033a16f" translate="yes" xml:space="preserve">
          <source>The value of this variable is a string, the name of a directory that contains programs that come with GNU Emacs and are intended for Emacs to invoke. The program &lt;code&gt;movemail&lt;/code&gt; is an example of such a program; Rmail uses it to fetch new mail from an inbox.</source>
          <target state="translated">此变量的值是一个字符串，即目录的名称，该目录包含GNU Emacs附带的程​​序，旨在供Emacs调用。程序 &lt;code&gt;movemail&lt;/code&gt; 是此类程序的一个示例。Rmail使用它从收件箱中提取新邮件。</target>
        </trans-unit>
        <trans-unit id="cfb572f9bc2f44e32d32a8a2cdf630179f422cca" translate="yes" xml:space="preserve">
          <source>The value of this variable is a symbol indicating the type of operating system Emacs is running on. The possible values are:</source>
          <target state="translated">这个变量的值是一个符号,表示Emacs运行的操作系统类型。可能的值是:</target>
        </trans-unit>
        <trans-unit id="8002c2c1eaf55d7b7ae8a209355f0464c509a693" translate="yes" xml:space="preserve">
          <source>The value of this variable is a symbol that specifies the style Emacs should use for single quotes in the wording of help and messages. If the variable&amp;rsquo;s value is &lt;code&gt;curve&lt;/code&gt;, the style is</source>
          <target state="translated">此变量的值是一个符号，用于指定Emacs在帮助和消息的措词中应使用单引号引起的样式。如果变量的值是 &lt;code&gt;curve&lt;/code&gt; ，则样式为</target>
        </trans-unit>
        <trans-unit id="2bdd79099d412978e3bbbe37242d52feb2a029ee" translate="yes" xml:space="preserve">
          <source>The value of this variable is an alist of package archives recognized by the Emacs package manager.</source>
          <target state="translated">这个变量的值是Emacs包管理器识别的软件包存档列表。</target>
        </trans-unit>
        <trans-unit id="c06b37baadabba3c87ddc88b38f5d0fd1b8c18ac" translate="yes" xml:space="preserve">
          <source>The value of this variable is an alist that associates the names of loaded library files with the names of the functions and variables they defined, as well as the features they provided or required.</source>
          <target state="translated">这个变量的值是一个列表,它将加载的库文件的名称与它们所定义的函数和变量的名称,以及它们所提供或需要的功能联系起来。</target>
        </trans-unit>
        <trans-unit id="81c720fde775ca08c6d96c03b1485dbda6b71c77" translate="yes" xml:space="preserve">
          <source>The value of this variable is an alist whose elements have the form &lt;code&gt;(&lt;var&gt;face&lt;/var&gt; . &lt;var&gt;remapping&lt;/var&gt;)&lt;/code&gt;. This causes Emacs to display any text having the face &lt;var&gt;face&lt;/var&gt; with &lt;var&gt;remapping&lt;/var&gt;, rather than the ordinary definition of &lt;var&gt;face&lt;/var&gt;.</source>
          <target state="translated">这个变量的值是一个ALIST其元素具有形式 &lt;code&gt;(&lt;var&gt;face&lt;/var&gt; . &lt;var&gt;remapping&lt;/var&gt;)&lt;/code&gt; 。这导致的Emacs显示具有面部的任何文本 &lt;var&gt;face&lt;/var&gt; 与 &lt;var&gt;remapping&lt;/var&gt; ，而不是普通的定义 &lt;var&gt;face&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="c2f18cf20c9a3c4ca8706679eb65fe735172405b" translate="yes" xml:space="preserve">
          <source>The value of this variable is not guaranteed to be accurate except while processing &lt;code&gt;frame-title-format&lt;/code&gt; or &lt;code&gt;icon-title-format&lt;/code&gt;.</source>
          <target state="translated">除了在处理 &lt;code&gt;frame-title-format&lt;/code&gt; 或 &lt;code&gt;icon-title-format&lt;/code&gt; 时,不能保证此变量的值是准确的。</target>
        </trans-unit>
        <trans-unit id="933998c144085b4faa6ba67abba92172b97c7da6" translate="yes" xml:space="preserve">
          <source>The value of this variable is the buffer for which &lt;code&gt;abbrev-start-location&lt;/code&gt; has been set. Trying to expand an abbrev in any other buffer clears &lt;code&gt;abbrev-start-location&lt;/code&gt;. This variable is set by &lt;code&gt;abbrev-prefix-mark&lt;/code&gt;.</source>
          <target state="translated">此变量的值是已为其设置了 &lt;code&gt;abbrev-start-location&lt;/code&gt; 的缓冲区。尝试在任何其他缓冲区中扩展abbrev会清除 &lt;code&gt;abbrev-start-location&lt;/code&gt; 。该变量由 &lt;code&gt;abbrev-prefix-mark&lt;/code&gt; 设置。</target>
        </trans-unit>
        <trans-unit id="8abb5c97c277797f521989347c2e42ed6365ddf0" translate="yes" xml:space="preserve">
          <source>The value of this variable is the completion table (see &lt;a href=&quot;basic-completion#Basic-Completion&quot;&gt;Basic Completion&lt;/a&gt;) used for completion in the minibuffer. This is the global variable that contains what &lt;code&gt;completing-read&lt;/code&gt; passes to &lt;code&gt;try-completion&lt;/code&gt;. It is used by minibuffer completion commands such as &lt;code&gt;minibuffer-complete-word&lt;/code&gt;.</source>
          <target state="translated">此变量的值是用于在迷你缓冲区中&lt;a href=&quot;basic-completion#Basic-Completion&quot;&gt;完成&lt;/a&gt;的完成表（请参见Basic Completion）。这是全局变量，其中包含 &lt;code&gt;completing-read&lt;/code&gt; 传递给 &lt;code&gt;try-completion&lt;/code&gt; 的内容。迷你缓冲区补全命令（例如 &lt;code&gt;minibuffer-complete-word&lt;/code&gt; )使用它。</target>
        </trans-unit>
        <trans-unit id="96328791cd147154e17de70ea41f23cfbbba1087" translate="yes" xml:space="preserve">
          <source>The value of this variable is the default output stream&amp;mdash;the stream that print functions use when the &lt;var&gt;stream&lt;/var&gt; argument is &lt;code&gt;nil&lt;/code&gt;. The default is &lt;code&gt;t&lt;/code&gt;, meaning display in the echo area.</source>
          <target state="translated">此变量的值是默认的输出流-当 &lt;var&gt;stream&lt;/var&gt; 参数为 &lt;code&gt;nil&lt;/code&gt; 时，打印函数使用的流。默认值为 &lt;code&gt;t&lt;/code&gt; ，表示在回显区域中显示。</target>
        </trans-unit>
        <trans-unit id="ae0831846c75f4a338c383d0f402cd3358232b5d" translate="yes" xml:space="preserve">
          <source>The value of this variable is the function called to insert an entry at point, including its terminating newline. The function should accept two arguments, &lt;var&gt;id&lt;/var&gt; and &lt;var&gt;contents&lt;/var&gt;, having the same meanings as in &lt;code&gt;tabulated-list-entries&lt;/code&gt;. The default value is a function which inserts an entry in a straightforward way; a mode which uses Tabulated List mode in a more complex way can specify another function.</source>
          <target state="translated">此变量的值是调用该函数以在点处插入条目的功能，包括其终止换行符。该函数应接受两个参数， &lt;var&gt;id&lt;/var&gt; 和 &lt;var&gt;contents&lt;/var&gt; ，其含义与 &lt;code&gt;tabulated-list-entries&lt;/code&gt; 中的含义相同。默认值是一个函数，它可以直接插入一个条目。以更复杂的方式使用&amp;ldquo;列表列表&amp;rdquo;模式的模式可以指定其他功能。</target>
        </trans-unit>
        <trans-unit id="7eb19205eadf49f07947146594a55f4d23efc62f" translate="yes" xml:space="preserve">
          <source>The value of this variable is the function to call to invoke the debugger. Its value must be a function of any number of arguments, or, more typically, the name of a function. This function should invoke some kind of debugger. The default value of the variable is &lt;code&gt;debug&lt;/code&gt;.</source>
          <target state="translated">此变量的值是调用该函数以调用调试器的函数。它的值必须是任意数量的参数的函数，或更常见的是函数的名称。此函数应调用某种调试器。变量的默认值为 &lt;code&gt;debug&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2e04c4a7f8af8a9ebc7bdd81f634adf0304f9ff3" translate="yes" xml:space="preserve">
          <source>The value of this variable is the function to use to revert this buffer. It should be a function with two optional arguments to do the work of reverting. The two optional arguments, &lt;var&gt;ignore-auto&lt;/var&gt; and &lt;var&gt;noconfirm&lt;/var&gt;, are the arguments that &lt;code&gt;revert-buffer&lt;/code&gt; received.</source>
          <target state="translated">此变量的值是用于还原此缓冲区的函数。它应该是一个具有两个可选参数的函数来执行还原工作。两个可选参数 &lt;var&gt;ignore-auto&lt;/var&gt; 和 &lt;var&gt;noconfirm&lt;/var&gt; 是 &lt;code&gt;revert-buffer&lt;/code&gt; 接收到的参数。</target>
        </trans-unit>
        <trans-unit id="dccef0d640ff834b4588b6b92c1b4f8ea1188ab5" translate="yes" xml:space="preserve">
          <source>The value of this variable is the greatest &amp;ldquo;small&amp;rdquo; integer that Emacs Lisp can handle. Typical values are 2**29 - 1 on 32-bit and 2**61 - 1 on 64-bit platforms.</source>
          <target state="translated">该变量的值是Emacs Lisp可以处理的最大&amp;ldquo;小&amp;rdquo;整数。在32位平台上，典型值为2 ** 29-1；在64位平台上，典型值为2 ** 61-1。</target>
        </trans-unit>
        <trans-unit id="31d2e828cbc40f3144bc61afc08c98328c1ac5de" translate="yes" xml:space="preserve">
          <source>The value of this variable is the help character&amp;mdash;the character that Emacs recognizes as meaning Help. By default, its value is 8, which stands for</source>
          <target state="translated">此变量的值是帮助字符-Emacs识别为帮助字符。默认情况下，其值为8，代表</target>
        </trans-unit>
        <trans-unit id="861876551f6ac7a8725b6a32b02dca6d5191372b" translate="yes" xml:space="preserve">
          <source>The value of this variable is the list of command-line arguments passed to Emacs.</source>
          <target state="translated">这个变量的值是传递给Emacs的命令行参数列表。</target>
        </trans-unit>
        <trans-unit id="e1d06ef5c8374bd750485c57abb50eaf06daf7d7" translate="yes" xml:space="preserve">
          <source>The value of this variable is the list of command-line arguments that have not yet been processed.</source>
          <target state="translated">这个变量的值是尚未处理的命令行参数列表。</target>
        </trans-unit>
        <trans-unit id="8621be2dbb39d088c193d4800a069de83beb18d9" translate="yes" xml:space="preserve">
          <source>The value of this variable is the list of properties to remove from inserted text. Its default value contains properties that might lead to annoying results, such as causing the text to respond to the mouse or specifying key bindings. It takes effect after &lt;code&gt;yank-handled-properties&lt;/code&gt;.</source>
          <target state="translated">此变量的值是要从插入的文本中删除的属性的列表。它的默认值包含可能导致令人讨厌的结果的属性，例如使文本响应鼠标或指定键绑定。在 &lt;code&gt;yank-handled-properties&lt;/code&gt; 之后生效。</target>
        </trans-unit>
        <trans-unit id="8d9925e5d0a28171f82d357e771493164bc09d3e" translate="yes" xml:space="preserve">
          <source>The value of this variable is the maximum depth of nesting of parentheses and brackets when printed. Any list or vector at a depth exceeding this limit is abbreviated with an ellipsis. A value of &lt;code&gt;nil&lt;/code&gt; (which is the default) means no limit.</source>
          <target state="translated">此变量的值是打印时括号和括号的最大嵌套深度。深度超过此限制的任何列表或向量均用省略号缩写。值 &lt;code&gt;nil&lt;/code&gt; （这是默认值）表示没有限制。</target>
        </trans-unit>
        <trans-unit id="eb378354f5b1934a365311626daef8c8f15e3726" translate="yes" xml:space="preserve">
          <source>The value of this variable is the maximum length to which the kill ring can grow, before elements are thrown away at the end. The default value for &lt;code&gt;kill-ring-max&lt;/code&gt; is 60.</source>
          <target state="translated">该变量的值是终止环可以增长到的最大长度，最后将元素扔掉。 &lt;code&gt;kill-ring-max&lt;/code&gt; 的默认值为60。</target>
        </trans-unit>
        <trans-unit id="d9a8a3bd5402f6a796285f30ee6bc93592d72acc" translate="yes" xml:space="preserve">
          <source>The value of this variable is the maximum number of elements to print in any list, vector or bool-vector. If an object being printed has more than this many elements, it is abbreviated with an ellipsis.</source>
          <target state="translated">这个变量的值是任何列表、向量或布尔向量中要打印的最大元素数。如果被打印的对象的元素数超过这个数目,则用省略号缩写。</target>
        </trans-unit>
        <trans-unit id="7b37d57abfb4a2f074e6037b361dac854df3ffa8" translate="yes" xml:space="preserve">
          <source>The value of this variable is the maximum size of &lt;code&gt;mark-ring&lt;/code&gt;. If more marks than this are pushed onto the &lt;code&gt;mark-ring&lt;/code&gt;, &lt;code&gt;push-mark&lt;/code&gt; discards an old mark when it adds a new one.</source>
          <target state="translated">此变量的值是 &lt;code&gt;mark-ring&lt;/code&gt; 的最大大小。如果将更多的标记推到 &lt;code&gt;mark-ring&lt;/code&gt; ，则 &lt;code&gt;push-mark&lt;/code&gt; 标记在添加新标记时会丢弃旧标记。</target>
        </trans-unit>
        <trans-unit id="48773690fdc08336034aef99b22ec4fc2a9b5c64" translate="yes" xml:space="preserve">
          <source>The value of this variable is the number of bytes of pure storage allocated so far. Typically, in a dumped Emacs, this number is very close to the total amount of pure storage available&amp;mdash;if it were not, we would preallocate less.</source>
          <target state="translated">该变量的值是到目前为止分配的纯存储的字节数。通常，在转储的Emacs中，该数字非常接近可用纯存储的总量-如果没有，我们将减少预分配的数量。</target>
        </trans-unit>
        <trans-unit id="2c86f658454ce161d8f58c6e376a24f5f8cf79cd" translate="yes" xml:space="preserve">
          <source>The value of this variable is the number of bytes of storage that must be allocated for Lisp objects after one garbage collection in order to trigger another garbage collection. You can use the result returned by &lt;code&gt;garbage-collect&lt;/code&gt; to get an information about size of the particular object type; space allocated to the contents of buffers does not count.</source>
          <target state="translated">此变量的值是在一次垃圾回收之后必须为Lisp对象分配的存储字节数，才能触发另一次垃圾回收。您可以使用 &lt;code&gt;garbage-collect&lt;/code&gt; 返回的结果来获取有关特定对象类型的大小的信息。分配给缓冲区内容的空间不计算在内。</target>
        </trans-unit>
        <trans-unit id="150ad9877598c36bf3cee9f020560f46415fcc2e" translate="yes" xml:space="preserve">
          <source>The value of this variable is the number of lines of continuity to retain when scrolling by full screens. For example, &lt;code&gt;scroll-up&lt;/code&gt; with an argument of &lt;code&gt;nil&lt;/code&gt; scrolls so that this many lines at the bottom of the window appear instead at the top. The default value is &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">此变量的值是在全屏滚动时要保留的连续行数。例如，使用 &lt;code&gt;nil&lt;/code&gt; 作为参数的 &lt;code&gt;scroll-up&lt;/code&gt; 滚动会滚动，以使窗口底部的许多行显示在顶部而不是顶部。默认值为 &lt;code&gt;2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4d8917920114f6f4a89a92a84fe6cd7179f01520" translate="yes" xml:space="preserve">
          <source>The value of this variable is the number of newest versions to keep when a new numbered backup is made. The newly made backup is included in the count. The default value is 2.</source>
          <target state="translated">此变量的值是在进行新的编号备份时要保留的最新版本数。新做的备份包含在计数中。默认值为 2。</target>
        </trans-unit>
        <trans-unit id="3fda003729cd66ceee7578e564a338758839795b" translate="yes" xml:space="preserve">
          <source>The value of this variable is the number of oldest versions to keep when a new numbered backup is made. The default value is 2.</source>
          <target state="translated">此变量的值是在进行新的编号备份时要保留的最旧版本的数量。默认值为 2。</target>
        </trans-unit>
        <trans-unit id="0178a3a721a41f19d88414a6b7b93fafcc92109e" translate="yes" xml:space="preserve">
          <source>The value of this variable is the number of seconds of idle time that should cause auto-saving. Each time the user pauses for this long, Emacs does auto-saving for all buffers in which that is enabled. (If the current buffer is large, the specified timeout is multiplied by a factor that increases as the size increases; for a million-byte buffer, the factor is almost 4.)</source>
          <target state="translated">这个变量的值是导致自动保存的空闲时间的秒数。每当用户暂停这么长的时间,Emacs就会对所有启用自动保存的缓冲区进行自动保存。如果当前的缓冲区很大,指定的超时时间会乘以一个系数,这个系数会随着缓冲区大小的增加而增加;对于百万字节的缓冲区,这个系数几乎是4。</target>
        </trans-unit>
        <trans-unit id="fdf8e548c75801c18e4f5fe5fdd7423692172485" translate="yes" xml:space="preserve">
          <source>The value of this variable is the numerically least &amp;ldquo;small&amp;rdquo; integer that Emacs Lisp can handle. It is negative. Typical values are -2**29 on 32-bit and -2**61 on 64-bit platforms.</source>
          <target state="translated">该变量的值是Emacs Lisp可以处理的数字上最小的&amp;ldquo;小&amp;rdquo;整数。这是负面的。在32位平台上，典型值为-2 ** 29；在64位平台上，典型值为-2 ** 61。</target>
        </trans-unit>
        <trans-unit id="b63628af4530d5ce2d1423179f1adbff69a076e4" translate="yes" xml:space="preserve">
          <source>The value of this variable is the raw prefix argument for the &lt;em&gt;next&lt;/em&gt; editing command. Commands such as &lt;code&gt;universal-argument&lt;/code&gt; that specify prefix arguments for the following command work by setting this variable.</source>
          <target state="translated">该变量的值是&lt;em&gt;下一个&lt;/em&gt;编辑命令的原始前缀参数。通过设置该变量，可以为以下命令指定前缀参数的命令（例如 &lt;code&gt;universal-argument&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8bd5505e14516c641a0fb607026db3f9d627e426" translate="yes" xml:space="preserve">
          <source>The value of this variable is the standard display table, which is used when Emacs is displaying a buffer in a window with neither a window display table nor a buffer display table defined, or when Emacs is outputting text to the standard output or error streams. Although its default is typically &lt;code&gt;nil&lt;/code&gt;, in an interactive session if the terminal cannot display curved quotes, its default maps curved quotes to ASCII approximations. See &lt;a href=&quot;text-quoting-style#Text-Quoting-Style&quot;&gt;Text Quoting Style&lt;/a&gt;.</source>
          <target state="translated">此变量的值是标准显示表，当Emacs在未定义窗口显示表或缓冲区显示表的窗口中显示缓冲区时，或者当Emacs将文本输出到标准输出或错误流时，将使用该变量。尽管其默认值通常为 &lt;code&gt;nil&lt;/code&gt; ，但在交互式会话中，如果终端无法显示弯曲的引号，则其默认值会将弯曲的引号映射为ASCII近似值。请参阅&lt;a href=&quot;text-quoting-style#Text-Quoting-Style&quot;&gt;文本引用样式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="59e3ab4b6c002115ffa6a12ef7488eb1000fce9d" translate="yes" xml:space="preserve">
          <source>The value of this variable is the version of Emacs being run. It is a string such as &lt;code&gt;&quot;26.1&quot;&lt;/code&gt;. A value with three numeric components, such as &lt;code&gt;&quot;26.0.91&quot;&lt;/code&gt;, indicates an unreleased test version. (Prior to Emacs 26.1, the string includes an extra final component with the integer that is now stored in &lt;code&gt;emacs-build-number&lt;/code&gt;; e.g., &lt;code&gt;&quot;25.1.1&quot;&lt;/code&gt;.)</source>
          <target state="translated">该变量的值是正在运行的Emacs的版本。它是一个字符串，例如 &lt;code&gt;&quot;26.1&quot;&lt;/code&gt; 。具有三个数字成分的值，例如 &lt;code&gt;&quot;26.0.91&quot;&lt;/code&gt; ，表示未发布的测试版本。（在Emacs 26.1之前，该字符串包括一个额外的最终组件，该组件的整数现在存储在 &lt;code&gt;emacs-build-number&lt;/code&gt; 中；例如， &lt;code&gt;&quot;25.1.1&quot;&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="13d6c3bf692d7cebd430e9a540f492e27af06ad8" translate="yes" xml:space="preserve">
          <source>The value of this variable lists the ImageMagick image types which should never be rendered using ImageMagick, regardless of the value of &lt;code&gt;imagemagick-enabled-types&lt;/code&gt;. A value of &lt;code&gt;t&lt;/code&gt; disables ImageMagick entirely.</source>
          <target state="translated">此变量的值列出了ImageMagick图像类型，无论 &lt;code&gt;imagemagick-enabled-types&lt;/code&gt; 的值如何，都不应使用ImageMagick呈现该图像类型。 &lt;code&gt;t&lt;/code&gt; 值完全禁用ImageMagick。</target>
        </trans-unit>
        <trans-unit id="303b235b615311f7ea255c195980f3dd06aa14e0" translate="yes" xml:space="preserve">
          <source>The value of this variable must be a function, which is called by &lt;code&gt;completing-read&lt;/code&gt; to actually do its work. It should accept the same arguments as &lt;code&gt;completing-read&lt;/code&gt;. This can be bound to a different function to completely override the normal behavior of &lt;code&gt;completing-read&lt;/code&gt;.</source>
          <target state="translated">此变量的值必须是一个函数，通过 &lt;code&gt;completing-read&lt;/code&gt; 调用该函数以实际完成其工作。它应该接受与complete &lt;code&gt;completing-read&lt;/code&gt; 相同的参数。可以将其绑定到其他功能，以完全覆盖completely &lt;code&gt;completing-read&lt;/code&gt; 的正常行为。</target>
        </trans-unit>
        <trans-unit id="1226f2429f46bf033e925f781cf8b85d8cb67680" translate="yes" xml:space="preserve">
          <source>The value of this variable names an Emacs Lisp file where the autoload calls should go. The default value is</source>
          <target state="translated">这个变量的值是Emacs Lisp文件的名字,自动加载的调用应该放在那里。默认值是</target>
        </trans-unit>
        <trans-unit id="40d83e7def34305b8fc50d910e7c289b690bac09" translate="yes" xml:space="preserve">
          <source>The value of this variable should be a display action, which is treated with the highest priority by &lt;code&gt;display-buffer&lt;/code&gt;. The default value is an empty display action, i.e., &lt;code&gt;(nil&amp;nbsp;.&amp;nbsp;nil)&lt;/code&gt;.</source>
          <target state="translated">此变量的值应该是一个显示操作，该操作将由 &lt;code&gt;display-buffer&lt;/code&gt; 优先处理。默认值为空显示动作，即 &lt;code&gt;(nil&amp;nbsp;.&amp;nbsp;nil)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="de683728d88c65383b1fb0a4d4c0e143b0d98fe0" translate="yes" xml:space="preserve">
          <source>The value of this variable should be a function (of no arguments) to be called whenever a character with close parenthesis syntax is inserted. The value of &lt;code&gt;blink-paren-function&lt;/code&gt; may be &lt;code&gt;nil&lt;/code&gt;, in which case nothing is done.</source>
          <target state="translated">每当插入具有紧密括号语法的字符时，此变量的值应该是一个不带任何参数的函数。 &lt;code&gt;blink-paren-function&lt;/code&gt; 的值可能为 &lt;code&gt;nil&lt;/code&gt; ，在这种情况下不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="b2dc1fa5f1a2fdb6c4c6717f7f894d9f186ffcae" translate="yes" xml:space="preserve">
          <source>The value of this variable should be a function of two arguments: a process and the list of windows displaying the process&amp;rsquo;s buffer. When the function is called, the process&amp;rsquo;s buffer is the current buffer. The function should return a cons cell &lt;code&gt;(&lt;var&gt;width&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;height&lt;/var&gt;)&lt;/code&gt; that describes the dimensions of the logical process window to be passed via a call to &lt;code&gt;set-process-window-size&lt;/code&gt;. The function can also return &lt;code&gt;nil&lt;/code&gt;, in which case Emacs will not call &lt;code&gt;set-process-window-size&lt;/code&gt; for this process.</source>
          <target state="translated">此变量的值应该是两个参数的函数：一个进程和显示该进程缓冲区的窗口列表。调用该函数时，进程的缓冲区是当前缓冲区。该函数应返回一个cons单元 &lt;code&gt;(&lt;var&gt;width&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;height&lt;/var&gt;)&lt;/code&gt; 描述的逻辑的处理窗口的尺寸以经由到呼叫被传递 &lt;code&gt;set-process-window-size&lt;/code&gt; 。该函数还可以返回 &lt;code&gt;nil&lt;/code&gt; ，在这种情况下，Emacs不会为此进程调用 &lt;code&gt;set-process-window-size&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="18ecc20cfb79cb28cfc3c0f86e79cb037503ab21" translate="yes" xml:space="preserve">
          <source>The value of this variable should be a function. When the user invokes a disabled command interactively, this function is called instead of the disabled command. It can use &lt;code&gt;this-command-keys&lt;/code&gt; to determine what the user typed to run the command, and thus find the command itself.</source>
          <target state="translated">此变量的值应该是一个函数。当用户以交互方式调用禁用的命令时，将调用此函数而不是禁用的命令。它可以使用 &lt;code&gt;this-command-keys&lt;/code&gt; 来确定用户键入的内容来运行命令，从而找到命令本身。</target>
        </trans-unit>
        <trans-unit id="440fd6f3fe4086cfcbed381053251b8ba6bd3e2e" translate="yes" xml:space="preserve">
          <source>The value of this variable should be a string whose syntax is a Lisp comment.</source>
          <target state="translated">这个变量的值应该是一个语法为Lisp注释的字符串。</target>
        </trans-unit>
        <trans-unit id="a518e7693499305932b085da27f9bb3f7b0a936b" translate="yes" xml:space="preserve">
          <source>The value of this variable should be either &lt;code&gt;nil&lt;/code&gt; or a fraction &lt;var&gt;f&lt;/var&gt; between 0 and 1. If it is a fraction, that specifies where on the screen to put point when scrolling down. More precisely, when a window scrolls down because point is above the window start, the new start position is chosen to put point &lt;var&gt;f&lt;/var&gt; part of the window height from the top. The larger &lt;var&gt;f&lt;/var&gt;, the more aggressive the scrolling.</source>
          <target state="translated">此变量的值应为 &lt;code&gt;nil&lt;/code&gt; 或0到1之间的小数 &lt;var&gt;f&lt;/var&gt; 。如果是小数，则指定向下滚动时屏幕上放置点的位置。更准确地说，当由于点位于窗口起点上方而向下滚动窗口时，将选择新的开始位置，以将点 &lt;var&gt;f&lt;/var&gt; 从顶部移至窗口高度的一部分。 &lt;var&gt;f&lt;/var&gt; 越大，滚动越积极。</target>
        </trans-unit>
        <trans-unit id="da9ab538210ad97f321250c6838047d4466efc1a" translate="yes" xml:space="preserve">
          <source>The value of this variable specifies a function to call to check whether a buffer needs reverting. The default value only handles buffers that are visiting files, by checking their modification time. Buffers that are not visiting files require a custom function of one optional argument &lt;var&gt;noconfirm&lt;/var&gt;. The function should return non-&lt;code&gt;nil&lt;/code&gt; if the buffer should be reverted. The buffer is current when this function is called.</source>
          <target state="translated">此变量的值指定一个函数来检查缓冲区是否需要还原。默认值仅通过检查缓冲区的修改时间来处理正在访问文件的缓冲区。不访问文件的缓冲区需要一个可选参数 &lt;var&gt;noconfirm&lt;/var&gt; 的自定义函数。如果应还原缓冲区，则函数应返回non- &lt;code&gt;nil&lt;/code&gt; 。调用此函数时，缓冲区是当前的。</target>
        </trans-unit>
        <trans-unit id="12dca8a93c0036a1980e2e69ff462cb1ac961e17" translate="yes" xml:space="preserve">
          <source>The value of this variable specifies how often to do auto-saving, in terms of number of input events. Each time this many additional input events are read, Emacs does auto-saving for all buffers in which that is enabled. Setting this to zero disables autosaving based on the number of characters typed.</source>
          <target state="translated">这个变量的值指定了自动保存的频率,以输入事件的数量为单位。每次读取这么多额外的输入事件时,Emacs就会对所有启用自动保存的缓冲区进行自动保存。将其设置为0,则根据输入的字符数禁止自动保存。</target>
        </trans-unit>
        <trans-unit id="2ee4257ee2662122b633a4b0cbe9a66ce225a38e" translate="yes" xml:space="preserve">
          <source>The value of this variable specifies the amount of consing before a garbage collection occurs, as a fraction of the current heap size. This criterion and &lt;code&gt;gc-cons-threshold&lt;/code&gt; apply in parallel, and garbage collection occurs only when both criteria are satisfied.</source>
          <target state="translated">此变量的值指定垃圾回收发生之前的cons数量，以当前堆大小的一小部分表示。此条件和 &lt;code&gt;gc-cons-threshold&lt;/code&gt; 并行应用，并且仅当两个条件都满足时才进行垃圾回收。</target>
        </trans-unit>
        <trans-unit id="e15c226f38ff49c3333b1e006ff2cc624b6b04dc" translate="yes" xml:space="preserve">
          <source>The value of this variable specifies the current sort key for the Tabulated List buffer. If it is &lt;code&gt;nil&lt;/code&gt;, no sorting is done. Otherwise, it should have the form &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; . &lt;var&gt;flip&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;name&lt;/var&gt; is a string matching one of the column names in &lt;code&gt;tabulated-list-format&lt;/code&gt;, and &lt;var&gt;flip&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, means to invert the sort order.</source>
          <target state="translated">此变量的值指定列表列表缓冲区的当前排序键。如果为 &lt;code&gt;nil&lt;/code&gt; ，则不进行排序。否则，它应该具有的形式 &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; . &lt;var&gt;flip&lt;/var&gt;)&lt;/code&gt; ，其中， &lt;var&gt;name&lt;/var&gt; 是列名的字符串匹配一个 &lt;code&gt;tabulated-list-format&lt;/code&gt; ，并 &lt;var&gt;flip&lt;/var&gt; ，如果不 &lt;code&gt;nil&lt;/code&gt; ，手段反转排序顺序。</target>
        </trans-unit>
        <trans-unit id="c4af1068f1e05dee5d6fefee8b641be1f2c78d71" translate="yes" xml:space="preserve">
          <source>The value of this variable specifies the function to use to insert the updated contents when reverting this buffer. The function receives two arguments: first the file name to use; second, &lt;code&gt;t&lt;/code&gt; if the user has asked to read the auto-save file.</source>
          <target state="translated">此变量的值指定在还原此缓冲区时用于插入更新内容的函数。该函数接收两个参数：首先是要使用的文件名；第二， &lt;code&gt;t&lt;/code&gt; 如果用户要求读自动保存文件。</target>
        </trans-unit>
        <trans-unit id="d7f7bfe65157559bbddd1955ea91ebf264d68077" translate="yes" xml:space="preserve">
          <source>The value of this variable specifies the maximum length for all history lists that don&amp;rsquo;t specify their own maximum lengths. If the value is &lt;code&gt;t&lt;/code&gt;, that means there is no maximum (don&amp;rsquo;t delete old elements). If a history list variable&amp;rsquo;s symbol has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;history-length&lt;/code&gt; property, it overrides this variable for that particular history list.</source>
          <target state="translated">此变量的值指定所有未指定其最大长度的历史记录列表的最大长度。如果值为 &lt;code&gt;t&lt;/code&gt; ，则表示没有最大值（请勿删除旧元素）。如果历史记录列表变量的符号具有不 &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;history-length&lt;/code&gt; 属性，则它将覆盖该特定历史记录列表的变量。</target>
        </trans-unit>
        <trans-unit id="57d3c0b7a901e93cfaa40fe9b9de672f0e622cf4" translate="yes" xml:space="preserve">
          <source>The value of this variable, if non-&lt;code&gt;nil&lt;/code&gt;, is the current glyph table. It takes effect only on character terminals; on graphical displays, all glyphs are displayed literally. The glyph table should be a vector whose &lt;var&gt;g&lt;/var&gt;th element specifies how to display glyph code &lt;var&gt;g&lt;/var&gt;, where &lt;var&gt;g&lt;/var&gt; is the glyph code for a glyph whose face is unspecified. Each element should be one of the following:</source>
          <target state="translated">该变量的值（如果非 &lt;code&gt;nil&lt;/code&gt; ）是当前字形表。仅对字符终端有效；在图形显示中，所有字形均按字面显示。字形表应该是一个向量，其第 &lt;var&gt;g&lt;/var&gt; 个元素指定如何显示字形代码 &lt;var&gt;g&lt;/var&gt; ，其中 &lt;var&gt;g&lt;/var&gt; 是未指定面部的字形的字形代码。每个元素应为以下之一：</target>
        </trans-unit>
        <trans-unit id="ce482bcd0ec534adb705f36979bc396efd3afe84" translate="yes" xml:space="preserve">
          <source>The value of this variable, if non-&lt;code&gt;nil&lt;/code&gt;, should be a function. This function is called, with no arguments, after &lt;code&gt;write-region&lt;/code&gt; has completed.</source>
          <target state="translated">该变量的值（如果为非 &lt;code&gt;nil&lt;/code&gt; ）应该是一个函数。 &lt;code&gt;write-region&lt;/code&gt; 完成后，将不带任何参数地调用此函数。</target>
        </trans-unit>
        <trans-unit id="4bc5385973eb55e5a5f4212d89cd8023b5d45cc8" translate="yes" xml:space="preserve">
          <source>The value returned by &lt;code&gt;call-process&lt;/code&gt; (unless you told it not to wait) indicates the reason for process termination. A number gives the exit status of the subprocess; 0 means success, and any other value means failure. If the process terminated with a signal, &lt;code&gt;call-process&lt;/code&gt; returns a string describing the signal. If you told &lt;code&gt;call-process&lt;/code&gt; not to wait, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;call-process&lt;/code&gt; 返回的值（除非您告诉它不要等待）指示进程终止的原因。数字表示子流程的退出状态；0表示成功，任何其他值表示失败。如果进程以信号终止，则 &lt;code&gt;call-process&lt;/code&gt; 返回描述该信号的字符串。如果您告诉 &lt;code&gt;call-process&lt;/code&gt; 不等待，则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f96085924dfd5d71ffa529190dd3a22501712287" translate="yes" xml:space="preserve">
          <source>The value returned by &lt;code&gt;garbage-collect&lt;/code&gt; describes the amount of memory used by Lisp data, broken down by data type. By contrast, the function &lt;code&gt;memory-limit&lt;/code&gt; provides information on the total amount of memory Emacs is currently using.</source>
          <target state="translated">&lt;code&gt;garbage-collect&lt;/code&gt; 返回的值描述Lisp数据使用的内存量，并按数据类型细分。相反，功能 &lt;code&gt;memory-limit&lt;/code&gt; 提供有关Emacs当前正在使用的内存总量的信息。</target>
        </trans-unit>
        <trans-unit id="31e7a32e779b109733b4aa450e495a30fb5d2ec6" translate="yes" xml:space="preserve">
          <source>The value returned by &lt;code&gt;parse-partial-sexp&lt;/code&gt; (a Lisp primitive for indentation and nesting computation) when it parses up to the beginning of this line.</source>
          <target state="translated">&lt;code&gt;parse-partial-sexp&lt;/code&gt; （用于缩进和嵌套计算的Lisp原语）返回到此行开头时返回的值。</target>
        </trans-unit>
        <trans-unit id="22d588379a0688ed195ba832770bfcb90fc7a1a1" translate="yes" xml:space="preserve">
          <source>The value returned by &lt;code&gt;save-excursion&lt;/code&gt; is the result of the last form in &lt;var&gt;body&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt; if no body forms were given.</source>
          <target state="translated">返回的值 &lt;code&gt;save-excursion&lt;/code&gt; 是最后一种形式的结果 &lt;var&gt;body&lt;/var&gt; ，或 &lt;code&gt;nil&lt;/code&gt; ，如果没有身体的形式给予。</target>
        </trans-unit>
        <trans-unit id="e0452bed199b14aafda21c04a93f979b209faa96" translate="yes" xml:space="preserve">
          <source>The value returned by &lt;code&gt;save-restriction&lt;/code&gt; is that returned by the last form in &lt;var&gt;body&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt; if no body forms were given.</source>
          <target state="translated">&lt;code&gt;save-restriction&lt;/code&gt; 返回的值是 &lt;var&gt;body&lt;/var&gt; 中最后一个形式返回的值，如果没有给出任何形式，则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c74d3864bf57e201710c0f494d7941abdf62bf83" translate="yes" xml:space="preserve">
          <source>The value returned by &lt;code&gt;window-state-get&lt;/code&gt; can be used in the same session to make a clone of a window in another window. It can be also written to disk and read back in another session. In either case, use the following function to restore the state of the window.</source>
          <target state="translated">&lt;code&gt;window-state-get&lt;/code&gt; 返回的值可以在同一会话中使用，以在另一个窗口中克隆一个窗口。也可以将其写入磁盘并在另一个会话中回读。在任何一种情况下，都可以使用以下功能恢复窗口的状态。</target>
        </trans-unit>
        <trans-unit id="7596c5c7cfff59135fc00ba0034aff9d324568ff" translate="yes" xml:space="preserve">
          <source>The value returned by the function is a vector of the form &lt;code&gt;[&lt;var&gt;name&lt;/var&gt; &lt;var&gt;filename&lt;/var&gt; &lt;var&gt;pixel-size&lt;/var&gt; &lt;var&gt;max-width&lt;/var&gt;
&lt;var&gt;ascent&lt;/var&gt; &lt;var&gt;descent&lt;/var&gt; &lt;var&gt;space-width&lt;/var&gt; &lt;var&gt;average-width&lt;/var&gt;
&lt;var&gt;capability&lt;/var&gt;]&lt;/code&gt;. Here&amp;rsquo;s the description of each components of this vector:</source>
          <target state="translated">由该函数返回的值是以下形式的矢量 &lt;code&gt;[&lt;var&gt;name&lt;/var&gt; &lt;var&gt;filename&lt;/var&gt; &lt;var&gt;pixel-size&lt;/var&gt; &lt;var&gt;max-width&lt;/var&gt; &lt;var&gt;ascent&lt;/var&gt; &lt;var&gt;descent&lt;/var&gt; &lt;var&gt;space-width&lt;/var&gt; &lt;var&gt;average-width&lt;/var&gt; &lt;var&gt;capability&lt;/var&gt;]&lt;/code&gt; 。这是此向量的每个组成部分的描述：</target>
        </trans-unit>
        <trans-unit id="7f1af6cd4e0db0a9010ab9bcf0a730b7bc413d9b" translate="yes" xml:space="preserve">
          <source>The value returned by the function is a vector of the form &lt;code&gt;[&lt;var&gt;opened-name&lt;/var&gt; &lt;var&gt;full-name&lt;/var&gt; &lt;var&gt;size&lt;/var&gt; &lt;var&gt;height&lt;/var&gt;
&lt;var&gt;baseline-offset&lt;/var&gt; &lt;var&gt;relative-compose&lt;/var&gt; &lt;var&gt;default-ascent&lt;/var&gt;
&lt;var&gt;max-width&lt;/var&gt; &lt;var&gt;ascent&lt;/var&gt; &lt;var&gt;descent&lt;/var&gt; &lt;var&gt;space-width&lt;/var&gt;
&lt;var&gt;average-width&lt;/var&gt; &lt;var&gt;filename&lt;/var&gt; &lt;var&gt;capability&lt;/var&gt;]&lt;/code&gt;. Here&amp;rsquo;s the description of each components of this vector:</source>
          <target state="translated">该函数返回的值是以下形式的向量： &lt;code&gt;[&lt;var&gt;opened-name&lt;/var&gt; &lt;var&gt;full-name&lt;/var&gt; &lt;var&gt;size&lt;/var&gt; &lt;var&gt;height&lt;/var&gt; &lt;var&gt;baseline-offset&lt;/var&gt; &lt;var&gt;relative-compose&lt;/var&gt; &lt;var&gt;default-ascent&lt;/var&gt; &lt;var&gt;max-width&lt;/var&gt; &lt;var&gt;ascent&lt;/var&gt; &lt;var&gt;descent&lt;/var&gt; &lt;var&gt;space-width&lt;/var&gt; &lt;var&gt;average-width&lt;/var&gt; &lt;var&gt;filename&lt;/var&gt; &lt;var&gt;capability&lt;/var&gt;]&lt;/code&gt; 。这是此向量的每个组成部分的描述：</target>
        </trans-unit>
        <trans-unit id="d45b07b4efd10701d924481455a5da20eaaa3618" translate="yes" xml:space="preserve">
          <source>The value returned is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">返回的值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d0a7f39be3f9da493d01e7c44973c0716de188f5" translate="yes" xml:space="preserve">
          <source>The value returned is &lt;var&gt;columns&lt;/var&gt;.</source>
          <target state="translated">返回的值是 &lt;var&gt;columns&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="975f3a289665270f4ba1e59734e35f87c9928129" translate="yes" xml:space="preserve">
          <source>The value returned is &lt;var&gt;marker&lt;/var&gt;.</source>
          <target state="translated">返回的值是 &lt;var&gt;marker&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="73a439c0a0e9878cfb0da4ec67a1717f7e4a93a8" translate="yes" xml:space="preserve">
          <source>The value returned is &lt;var&gt;variable&lt;/var&gt;.</source>
          <target state="translated">返回的值是 &lt;var&gt;variable&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="dec60e5c6fc38f40ce6cf94f56c02b10791c1e22" translate="yes" xml:space="preserve">
          <source>The value returned is always &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">返回的值始终为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="47d0638c890cedd458d1d1403d1e7e0313168cb6" translate="yes" xml:space="preserve">
          <source>The value returned is the screen line number point has moved to, relative to the top line of the window.</source>
          <target state="translated">返回的值是相对于窗口顶线而言,点移动到的屏幕线数。</target>
        </trans-unit>
        <trans-unit id="b2ccc57b2f309a480d2e7f6a52e01939c829850f" translate="yes" xml:space="preserve">
          <source>The value should be a cons cell of the form &lt;code&gt;(&lt;var&gt;input-coding&lt;/var&gt;
. &lt;var&gt;output-coding&lt;/var&gt;)&lt;/code&gt;. Here &lt;var&gt;input-coding&lt;/var&gt; applies to input from the subprocess, and &lt;var&gt;output-coding&lt;/var&gt; applies to output to it.</source>
          <target state="translated">该值应该是形式为 &lt;code&gt;(&lt;var&gt;input-coding&lt;/var&gt; . &lt;var&gt;output-coding&lt;/var&gt;)&lt;/code&gt; 的cons单元格。这里， &lt;var&gt;input-coding&lt;/var&gt; 适用于来自子流程的输入，而 &lt;var&gt;output-coding&lt;/var&gt; 适用于对其的输出。</target>
        </trans-unit>
        <trans-unit id="afa4a6e9d7cbd4770933f00e367e5337ede28bad" translate="yes" xml:space="preserve">
          <source>The value should be a function for &lt;em&gt;annotating&lt;/em&gt; completions. The function should take one argument, &lt;var&gt;string&lt;/var&gt;, which is a possible completion. It should return a string, which is displayed after the completion &lt;var&gt;string&lt;/var&gt; in the</source>
          <target state="translated">该值应该是用于&lt;em&gt;注释&lt;/em&gt;完成的函数。该函数应采用一个参数 &lt;var&gt;string&lt;/var&gt; ，这可能是一个完成。它应该返回一个字符串，它建成后显示的 &lt;var&gt;string&lt;/var&gt; 中</target>
        </trans-unit>
        <trans-unit id="c201901c0018b0c92d92e65e50c18f3c1c34c052" translate="yes" xml:space="preserve">
          <source>The value should be a function for sorting completions, when &lt;code&gt;completion-cycle-threshold&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt; and the user is cycling through completion alternatives. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Completion-Options.html#Completion-Options&quot;&gt;Completion Options&lt;/a&gt; in</source>
          <target state="translated">当 &lt;code&gt;completion-cycle-threshold&lt;/code&gt; 不 &lt;code&gt;nil&lt;/code&gt; 并且用户正在循环选择完成时，该值应该是对完成进行排序的函数。见&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Completion-Options.html#Completion-Options&quot;&gt;完成选项&lt;/a&gt;中</target>
        </trans-unit>
        <trans-unit id="22ba0d62cbcc1ae0208dc24b05830349e9976f9d" translate="yes" xml:space="preserve">
          <source>The value should be a function for sorting completions. The function should take one argument, a list of completion strings, and return a sorted list of completion strings. It is allowed to alter the input list destructively.</source>
          <target state="translated">该值应该是一个用于排序完成情况的函数。该函数应接受一个参数,即一个完成品字符串列表,并返回一个经过排序的完成品字符串列表。允许破坏性地改变输入列表。</target>
        </trans-unit>
        <trans-unit id="e101dd6c8e98ecc490ae874e5dcfb9d80b45d061" translate="yes" xml:space="preserve">
          <source>The value should be a function that takes no arguments and returns a frame, or &lt;code&gt;nil&lt;/code&gt; if no frame could be created. The default value is a function that creates a frame using the parameters specified by &lt;code&gt;pop-up-frame-alist&lt;/code&gt; (see below).</source>
          <target state="translated">该值应为不带参数且返回框架的函数，如果无法创建框架，则为 &lt;code&gt;nil&lt;/code&gt; 。默认值是使用 &lt;code&gt;pop-up-frame-alist&lt;/code&gt; 指定的参数创建框架的函数（请参见下文）。</target>
        </trans-unit>
        <trans-unit id="b2200b61001be6b8b42c0f192f2e1441d6be0fba" translate="yes" xml:space="preserve">
          <source>The value should be a function to add annotations in the completions buffer. This function must accept one argument, a completion, and should either return &lt;code&gt;nil&lt;/code&gt; or a string to be displayed next to the completion.</source>
          <target state="translated">该值应该是在完成缓冲区中添加注释的函数。此函数必须接受一个参数，即完成，并且应返回 &lt;code&gt;nil&lt;/code&gt; 或要在完成旁边显示的字符串。</target>
        </trans-unit>
        <trans-unit id="faa61fa6487d98c4ad45fdb4f4dd02ad923d60a5" translate="yes" xml:space="preserve">
          <source>The value should be a function to run after performing completion. The function should accept two arguments, &lt;var&gt;string&lt;/var&gt; and &lt;var&gt;status&lt;/var&gt;, where &lt;var&gt;string&lt;/var&gt; is the text to which the field was completed, and &lt;var&gt;status&lt;/var&gt; indicates what kind of operation happened: &lt;code&gt;finished&lt;/code&gt; if text is now complete, &lt;code&gt;sole&lt;/code&gt; if the text cannot be further completed but completion is not finished, or &lt;code&gt;exact&lt;/code&gt; if the text is a valid completion but may be further completed.</source>
          <target state="translated">该值应该是执行完成后要运行的函数。该函数应接受两个参数， &lt;var&gt;string&lt;/var&gt; 和 &lt;var&gt;status&lt;/var&gt; ，其中 &lt;var&gt;string&lt;/var&gt; 是其完成文本框中的文字，和 &lt;var&gt;status&lt;/var&gt; 指示什么样的操作发生了： &lt;code&gt;finished&lt;/code&gt; ，如果文本已经完成，现在 &lt;code&gt;sole&lt;/code&gt; 如果文本不能进一步完成，但完成是未完成，如果文本是有效的完成但可能会进一步完成，则为 &lt;code&gt;exact&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9b7ebbfe345be5a867dbde46e6a2761a575df403" translate="yes" xml:space="preserve">
          <source>The value should be a list of completion styles (symbols).</source>
          <target state="translated">该值应该是一个完成样式(符号)的列表。</target>
        </trans-unit>
        <trans-unit id="925758dfea64d9dd86f0a3bf26a2bd82f0f1f147" translate="yes" xml:space="preserve">
          <source>The value should be a predicate that completion candidates need to satisfy.</source>
          <target state="translated">该值应该是完成候选人需要满足的前提条件。</target>
        </trans-unit>
        <trans-unit id="5cb79d51602bd8eb1cf7a88ebf99635042f65726" translate="yes" xml:space="preserve">
          <source>The value should be a symbol describing what kind of text the completion function is trying to complete. If the symbol matches one of the keys in &lt;code&gt;completion-category-overrides&lt;/code&gt;, the usual completion behavior is overridden. See &lt;a href=&quot;completion-variables#Completion-Variables&quot;&gt;Completion Variables&lt;/a&gt;.</source>
          <target state="translated">该值应该是一个符号，描述完成功能试图完成的文本类型。如果该符号与 &lt;code&gt;completion-category-overrides&lt;/code&gt; 中的键之一匹配，则通常的完成行为将被覆盖。请参见&lt;a href=&quot;completion-variables#Completion-Variables&quot;&gt;完成变量&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="12bf4f6f2a54e741e94637b75c4db474bd81d15b" translate="yes" xml:space="preserve">
          <source>The value should be a value for &lt;code&gt;completion-cycle-threshold&lt;/code&gt; (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Completion-Options.html#Completion-Options&quot;&gt;Completion Options&lt;/a&gt; in</source>
          <target state="translated">该值应该是一个值 &lt;code&gt;completion-cycle-threshold&lt;/code&gt; （见&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Completion-Options.html#Completion-Options&quot;&gt;完成选项&lt;/a&gt;中</target>
        </trans-unit>
        <trans-unit id="0ff26f2d74e7f80625e6dcbebeacb661b2c0a9f8" translate="yes" xml:space="preserve">
          <source>The value should be an alist of elements &lt;code&gt;(&lt;var&gt;prop&lt;/var&gt;
. &lt;var&gt;fun&lt;/var&gt;)&lt;/code&gt;. Each alist element is handled in order. The inserted text is scanned for stretches of text having text properties &lt;code&gt;eq&lt;/code&gt; to &lt;var&gt;prop&lt;/var&gt;; for each such stretch, &lt;var&gt;fun&lt;/var&gt; is called with three arguments: the value of the property, and the start and end positions of the text.</source>
          <target state="translated">值应该是元素的ALIST &lt;code&gt;(&lt;var&gt;prop&lt;/var&gt; . &lt;var&gt;fun&lt;/var&gt;)&lt;/code&gt; 。每个清单元素均按顺序处理。插入的文本被扫描用于具有文本属性的文本段 &lt;code&gt;eq&lt;/code&gt; 到 &lt;var&gt;prop&lt;/var&gt; ; 对于每个这样的拉伸，将通过三个参数调用 &lt;var&gt;fun&lt;/var&gt; ：属性的值以及文本的开始和结束位置。</target>
        </trans-unit>
        <trans-unit id="0feffcbb3119f336531a6fd74cbbff440dba66ac" translate="yes" xml:space="preserve">
          <source>The value specifies a direction which, together with a &lt;code&gt;window&lt;/code&gt; entry, allows &lt;code&gt;display-buffer-in-direction&lt;/code&gt; to determine the location of the window to display the buffer.</source>
          <target state="translated">该值指定一个方向，该方向与 &lt;code&gt;window&lt;/code&gt; 条目一起允许 &lt;code&gt;display-buffer-in-direction&lt;/code&gt; 确定显示缓冲区的窗口的位置。</target>
        </trans-unit>
        <trans-unit id="611611e171be434468ec675dea405dd5312d8f63" translate="yes" xml:space="preserve">
          <source>The value specifies a function for determining safe file-local values for the named variable. See &lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;File Local Variables&lt;/a&gt;.</source>
          <target state="translated">该值指定一个函数，用于确定命名变量的安全文件本地值。请参阅&lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;文件局部变量&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ea946c727c16f4c700d3a131807aa1fa7ac26e10" translate="yes" xml:space="preserve">
          <source>The value specifies a minimum height of the window used, in lines. If a window is not or cannot be made as high as specified by this entry, the window is not considered for use. The only client of this entry is presently &lt;code&gt;display-buffer-below-selected&lt;/code&gt;.</source>
          <target state="translated">该值以行为单位指定所用窗口的最小高度。如果窗口没有达到或不能达到该条目指定的高度，则不考虑使用该窗口。该条目的唯一客户端当前是 &lt;code&gt;display-buffer-below-selected&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e878f22a9e22e5e6ae516631fd4b2f22c80a65af" translate="yes" xml:space="preserve">
          <source>The value specifies a window that is in some way related to the window chosen by &lt;code&gt;display-buffer&lt;/code&gt;. This entry is currently used by &lt;code&gt;display-buffer-in-atom-window&lt;/code&gt; to indicate the window on whose side the new window shall be created. It is also used by &lt;code&gt;display-buffer-in-direction&lt;/code&gt; to specify the reference window on whose side the resulting window shall appear.</source>
          <target state="translated">该值指定一个窗口，该窗口在某种程度上与 &lt;code&gt;display-buffer&lt;/code&gt; 选择的窗口有关。 &lt;code&gt;display-buffer-in-atom-window&lt;/code&gt; 当前使用此条目指示要在其一侧创建新窗口的窗口。 &lt;code&gt;display-buffer-in-direction&lt;/code&gt; 也使用它来指定参考窗口，在该参考窗口上将出现结果窗口。</target>
        </trans-unit>
        <trans-unit id="a230a1b00acb88265aaebae444183845a0a12075" translate="yes" xml:space="preserve">
          <source>The value specifies an alist of frame parameters to give a new frame, if one is created. &lt;code&gt;display-buffer-pop-up-frame&lt;/code&gt; is its one and only addressee.</source>
          <target state="translated">该值指定一个框架参数列表，以创建一个新框架（如果已创建）。 &lt;code&gt;display-buffer-pop-up-frame&lt;/code&gt; 是其唯一的收件人。</target>
        </trans-unit>
        <trans-unit id="712354d6ecb588545e689e9cf4e0f436a0db7e70" translate="yes" xml:space="preserve">
          <source>The value specifies an alist of frame parameters to use when the buffer is displayed on a child frame. This entry is used only by &lt;code&gt;display-buffer-in-child-frame&lt;/code&gt;.</source>
          <target state="translated">该值指定当缓冲区显示在子框架上时要使用的框架参数列表。该条目仅由 &lt;code&gt;display-buffer-in-child-frame&lt;/code&gt; 使用。</target>
        </trans-unit>
        <trans-unit id="cc8a52f49cd1e2b71d0412b55ac293683a602f45" translate="yes" xml:space="preserve">
          <source>The value specifies an alist of window parameters to give the chosen window. All action functions that choose a window should process this entry.</source>
          <target state="translated">该值指定了一个窗口参数的列表,以给出所选窗口。所有选择窗口的动作函数都应该处理这个条目。</target>
        </trans-unit>
        <trans-unit id="cebae73a089b0cf31db115ca79a05a8ad5a3d9f1" translate="yes" xml:space="preserve">
          <source>The value specifies options for a command.</source>
          <target state="translated">该值指定了一个命令的选项。</target>
        </trans-unit>
        <trans-unit id="70a0d168bab1f71658353f8a2d881540c5b9b497" translate="yes" xml:space="preserve">
          <source>The value specifies the parent frame to be used when the buffer is displayed on a child frame. This entry is used only by &lt;code&gt;display-buffer-in-child-frame&lt;/code&gt;.</source>
          <target state="translated">该值指定在子帧上显示缓冲区时要使用的父帧。该条目仅由 &lt;code&gt;display-buffer-in-child-frame&lt;/code&gt; 使用。</target>
        </trans-unit>
        <trans-unit id="0c548691ebd219b442c5f2af316d1d293d80adbd" translate="yes" xml:space="preserve">
          <source>The value specifies the set of frames to search for a window that can be reused because it already displays the buffer. It can be set as follows:</source>
          <target state="translated">该值指定搜索窗口的帧集,因为它已经显示缓冲区,所以可以重复使用。它可以设置如下。</target>
        </trans-unit>
        <trans-unit id="af34abd1ebb5fd7575ea1f5e82855c70ca1ac344" translate="yes" xml:space="preserve">
          <source>The value specifies whether and how to adjust the height of the chosen window and can be one of the following:</source>
          <target state="translated">该值指定了是否调整和如何调整所选窗口的高度,可以是以下几种情况之一。</target>
        </trans-unit>
        <trans-unit id="505bb1f9ff0dba8805de9df77265d82a7c2cdafa" translate="yes" xml:space="preserve">
          <source>The value stores the documentation string of the named face. This is set automatically by &lt;code&gt;defface&lt;/code&gt;. See &lt;a href=&quot;defining-faces#Defining-Faces&quot;&gt;Defining Faces&lt;/a&gt;.</source>
          <target state="translated">该值存储命名面的文档字符串。这是通过 &lt;code&gt;defface&lt;/code&gt; 自动设置的。请参阅&lt;a href=&quot;defining-faces#Defining-Faces&quot;&gt;定义面孔&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a55d35705528885818f514326dd9b25fb751d4f9" translate="yes" xml:space="preserve">
          <source>The value string normally has text properties that correspond to the faces, keymaps, etc., that the mode line would have. Any character for which no &lt;code&gt;face&lt;/code&gt; property is specified by &lt;var&gt;format&lt;/var&gt; gets a default value determined by &lt;var&gt;face&lt;/var&gt;. If &lt;var&gt;face&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, that stands for either &lt;code&gt;mode-line&lt;/code&gt; if &lt;var&gt;window&lt;/var&gt; is selected, otherwise &lt;code&gt;mode-line-inactive&lt;/code&gt;. If &lt;var&gt;face&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or omitted, that stands for the default face. If &lt;var&gt;face&lt;/var&gt; is an integer, the value returned by this function will have no text properties.</source>
          <target state="translated">值字符串通常具有与模式行将具有的面，键映射等相对应的文本属性。没有由 &lt;var&gt;format&lt;/var&gt; 指定 &lt;code&gt;face&lt;/code&gt; 属性的任何字符都将获得由 &lt;var&gt;face&lt;/var&gt; 确定的默认值。如果 &lt;var&gt;face&lt;/var&gt; 是 &lt;code&gt;t&lt;/code&gt; ，则在选择 &lt;var&gt;window&lt;/var&gt; 的情况 &lt;code&gt;mode-line&lt;/code&gt; 代表任一模式行，否则代表 &lt;code&gt;mode-line-inactive&lt;/code&gt; 。如果 &lt;var&gt;face&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; 或被省略，则代表默认的face。如果 &lt;var&gt;face&lt;/var&gt; 是一个整数，则此函数返回的值将没有文本属性。</target>
        </trans-unit>
        <trans-unit id="3591dd575c16a1fb94691cd3cca981235d32b6ff" translate="yes" xml:space="preserve">
          <source>The value, &lt;var&gt;background&lt;/var&gt;, should be a string specifying the image background color, or &lt;code&gt;nil&lt;/code&gt; for the default color. This color is used for each pixel in the PBM that is 0. The default is the frame&amp;rsquo;s background color.</source>
          <target state="translated">值 &lt;var&gt;background&lt;/var&gt; 应该是指定图像背景颜色的字符串，或者为默认颜色的 &lt;code&gt;nil&lt;/code&gt; 。该颜色用于PBM中的每个像素，该像素为0。默认值为框架的背景色。</target>
        </trans-unit>
        <trans-unit id="458f07b42dc208884ff2ff5ab13f9b69732605ef" translate="yes" xml:space="preserve">
          <source>The value, &lt;var&gt;background&lt;/var&gt;, should be a string specifying the image background color, or &lt;code&gt;nil&lt;/code&gt; for the default color. This color is used for each pixel in the XBM that is 0. The default is the frame&amp;rsquo;s background color.</source>
          <target state="translated">值 &lt;var&gt;background&lt;/var&gt; 应该是指定图像背景颜色的字符串，或者为默认颜色的 &lt;code&gt;nil&lt;/code&gt; 。XBM中每个像素的颜色均为0。默认值为框架的背景色。</target>
        </trans-unit>
        <trans-unit id="83fa724b0ab7a36133791af18f6967d44343acd2" translate="yes" xml:space="preserve">
          <source>The value, &lt;var&gt;data&lt;/var&gt;, specifies the contents of the image. There are three formats you can use for &lt;var&gt;data&lt;/var&gt;:</source>
          <target state="translated">值 &lt;var&gt;data&lt;/var&gt; 指定图像的内容。您可以使用三种格式的 &lt;var&gt;data&lt;/var&gt; ：</target>
        </trans-unit>
        <trans-unit id="7b521a7e9b651d09dfd41d51b4e01b49ec76cdfe" translate="yes" xml:space="preserve">
          <source>The value, &lt;var&gt;foreground&lt;/var&gt;, should be a string specifying the image foreground color, or &lt;code&gt;nil&lt;/code&gt; for the default color. This color is used for each pixel in the PBM that is 1. The default is the frame&amp;rsquo;s foreground color.</source>
          <target state="translated">&lt;var&gt;foreground&lt;/var&gt; 值应为指定图像前景色的字符串，默认值应为 &lt;code&gt;nil&lt;/code&gt; 。该颜色用于PBM中每个像素为1的情况。默认值为帧的前景色。</target>
        </trans-unit>
        <trans-unit id="dc6e9bbff6399dd6222c56642a86367c8cc843d6" translate="yes" xml:space="preserve">
          <source>The value, &lt;var&gt;foreground&lt;/var&gt;, should be a string specifying the image foreground color, or &lt;code&gt;nil&lt;/code&gt; for the default color. This color is used for each pixel in the XBM that is 1. The default is the frame&amp;rsquo;s foreground color.</source>
          <target state="translated">&lt;var&gt;foreground&lt;/var&gt; 值应为指定图像前景色的字符串，默认值应为 &lt;code&gt;nil&lt;/code&gt; 。该颜色用于XBM中每个像素为1的情况。默认值为帧的前景色。</target>
        </trans-unit>
        <trans-unit id="eb345c174c35c0159b93a1f9149ad3d4e1130275" translate="yes" xml:space="preserve">
          <source>The value, &lt;var&gt;height&lt;/var&gt;, specifies the height of the image, in pixels.</source>
          <target state="translated">&lt;var&gt;height&lt;/var&gt; 值指定图像的高度，以像素为单位。</target>
        </trans-unit>
        <trans-unit id="b9ea6d3dec735a3a948c97af424b63f71478e6cb" translate="yes" xml:space="preserve">
          <source>The value, &lt;var&gt;symbols&lt;/var&gt;, should be an alist whose elements have the form &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; . &lt;var&gt;color&lt;/var&gt;)&lt;/code&gt;. In each element, &lt;var&gt;name&lt;/var&gt; is the name of a color as it appears in the image file, and &lt;var&gt;color&lt;/var&gt; specifies the actual color to use for displaying that name.</source>
          <target state="translated">的值， &lt;var&gt;symbols&lt;/var&gt; ，应该是一个ALIST其元素具有形式 &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; . &lt;var&gt;color&lt;/var&gt;)&lt;/code&gt; 。在每个元素中， &lt;var&gt;name&lt;/var&gt; 是在图像文件中显示的颜色的名称，而 &lt;var&gt;color&lt;/var&gt; 指定用于显示该名称的实际颜色。</target>
        </trans-unit>
        <trans-unit id="dcde525351a6f12a8b348e73f3817e78fee629b1" translate="yes" xml:space="preserve">
          <source>The value, &lt;var&gt;type&lt;/var&gt;, should be a symbol specifying the type of the image data, as found in &lt;code&gt;image-format-suffixes&lt;/code&gt;. This is used when the image does not have an associated file name, to provide a hint to ImageMagick to help it detect the image type.</source>
          <target state="translated">值 &lt;var&gt;type&lt;/var&gt; 应该是指定图像数据类型的符号，如 &lt;code&gt;image-format-suffixes&lt;/code&gt; 中所示。当图像没有关联的文件名时使用此方法，以向ImageMagick提供提示以帮助其检测图像类型。</target>
        </trans-unit>
        <trans-unit id="531d38e8be68abb161b4857aa037531d56c07b0d" translate="yes" xml:space="preserve">
          <source>The value, &lt;var&gt;weak&lt;/var&gt;, must be one of &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;key&lt;/code&gt;, &lt;code&gt;value&lt;/code&gt;, &lt;code&gt;key-or-value&lt;/code&gt;, &lt;code&gt;key-and-value&lt;/code&gt;, or &lt;code&gt;t&lt;/code&gt; which is an alias for &lt;code&gt;key-and-value&lt;/code&gt;. If &lt;var&gt;weak&lt;/var&gt; is &lt;code&gt;key&lt;/code&gt; then the hash table does not prevent its keys from being collected as garbage (if they are not referenced anywhere else); if a particular key does get collected, the corresponding association is removed from the hash table.</source>
          <target state="translated">&lt;var&gt;weak&lt;/var&gt; 值必须是 &lt;code&gt;nil&lt;/code&gt; ， &lt;code&gt;key&lt;/code&gt; ， &lt;code&gt;value&lt;/code&gt; ， &lt;code&gt;key-or-value&lt;/code&gt; ， &lt;code&gt;key-and-value&lt;/code&gt; 或 &lt;code&gt;t&lt;/code&gt; 之一，t是 &lt;code&gt;key-and-value&lt;/code&gt; 的别名。如果 &lt;code&gt;key&lt;/code&gt; &lt;var&gt;weak&lt;/var&gt; ，则哈希表不会阻止将其键收集为垃圾（如果未在其他任何地方引用它们）；如果确实收集到特定的密钥，则从哈希表中删除相应的关联。</target>
        </trans-unit>
        <trans-unit id="fa76d4528e5ae6cb4684c0da77a8308d0cb82b94" translate="yes" xml:space="preserve">
          <source>The value, &lt;var&gt;width&lt;/var&gt;, specifies the width of the image, in pixels.</source>
          <target state="translated">&lt;var&gt;width&lt;/var&gt; 值指定图像的宽度（以像素为单位）。</target>
        </trans-unit>
        <trans-unit id="be1644837474a9fe39ca523e6b28004356025b7a" translate="yes" xml:space="preserve">
          <source>The value, if non-&lt;code&gt;nil&lt;/code&gt;, specifies the maximum minibuffer history length for the named history list variable. See &lt;a href=&quot;minibuffer-history#Minibuffer-History&quot;&gt;Minibuffer History&lt;/a&gt;.</source>
          <target state="translated">如果值为非 &lt;code&gt;nil&lt;/code&gt; ，则指定命名历史记录列表变量的最大最小缓冲区历史记录长度。请参阅&lt;a href=&quot;minibuffer-history#Minibuffer-History&quot;&gt;最小缓冲区历史记录&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f7dd81aa41d587c809be779d8678d7703a9d070c" translate="yes" xml:space="preserve">
          <source>The value, if non-&lt;code&gt;nil&lt;/code&gt;, specifies the number of extra slots in the named char-table type. See &lt;a href=&quot;char_002dtables#Char_002dTables&quot;&gt;Char-Tables&lt;/a&gt;.</source>
          <target state="translated">该值（如果为非 &lt;code&gt;nil&lt;/code&gt; ）指定命名的char表类型中的额外插槽数。参见&lt;a href=&quot;char_002dtables#Char_002dTables&quot;&gt;字符表&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7d157992c080feaba61c3f9992a35160809e8293" translate="yes" xml:space="preserve">
          <source>The values in &lt;var&gt;delta&lt;/var&gt; can be negative to subtract values instead.</source>
          <target state="translated">&lt;var&gt;delta&lt;/var&gt; 的值可以为负，以代之以减去值。</target>
        </trans-unit>
        <trans-unit id="25bd5003a5bfd3ff9957bc21c007d9f2e961478c" translate="yes" xml:space="preserve">
          <source>The values must be known and written in advance.</source>
          <target state="translated">这些数值必须事先知道并写好。</target>
        </trans-unit>
        <trans-unit id="e5da79067043a3cf400b4585327d4bc12a8d8220" translate="yes" xml:space="preserve">
          <source>The values of &lt;code&gt;modiff&lt;/code&gt; and &lt;code&gt;overlay_modiff&lt;/code&gt;, respectively, after the last complete redisplay. If their current values match &lt;code&gt;modiff&lt;/code&gt; or &lt;code&gt;overlay_modiff&lt;/code&gt;, that means &lt;code&gt;beg_unchanged&lt;/code&gt; and &lt;code&gt;end_unchanged&lt;/code&gt; contain no useful information.</source>
          <target state="translated">在最后一次完全重新显示之后，分别是 &lt;code&gt;modiff&lt;/code&gt; 和 &lt;code&gt;overlay_modiff&lt;/code&gt; 的值。如果它们的当前值与 &lt;code&gt;modiff&lt;/code&gt; 或 &lt;code&gt;overlay_modiff&lt;/code&gt; 匹配，则意味着 &lt;code&gt;beg_unchanged&lt;/code&gt; 和 &lt;code&gt;end_unchanged&lt;/code&gt; 不包含有用的信息。</target>
        </trans-unit>
        <trans-unit id="ed47fccd292efe605a4c56a267c480abd538960b" translate="yes" xml:space="preserve">
          <source>The values specified here may be later overridden by invoking &lt;code&gt;set-window-buffer&lt;/code&gt; (see &lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;Buffers and Windows&lt;/a&gt;) on &lt;var&gt;window&lt;/var&gt; with its &lt;var&gt;keep-margins&lt;/var&gt; argument &lt;code&gt;nil&lt;/code&gt; or omitted.</source>
          <target state="translated">以后可以通过在其 &lt;var&gt;window&lt;/var&gt; 使用其 &lt;var&gt;keep-margins&lt;/var&gt; 参数 &lt;code&gt;nil&lt;/code&gt; 或省略 &lt;code&gt;set-window-buffer&lt;/code&gt; （请参见&lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;Buffers和Windows&lt;/a&gt;）来覆盖此处指定的值。</target>
        </trans-unit>
        <trans-unit id="ffdbbe9270c4e6a0880d799e803e12a916413aa7" translate="yes" xml:space="preserve">
          <source>The values specified here may be later overridden by invoking &lt;code&gt;set-window-buffer&lt;/code&gt; (see &lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;Buffers and Windows&lt;/a&gt;) on &lt;var&gt;window&lt;/var&gt; with its &lt;var&gt;keep-margins&lt;/var&gt; argument &lt;code&gt;nil&lt;/code&gt; or omitted. However, if the optional fifth argument &lt;var&gt;persistent&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; and the other arguments are processed successfully, the values specified here unconditionally survive subsequent invocations of &lt;code&gt;set-window-buffer&lt;/code&gt;.</source>
          <target state="translated">以后可以通过在其 &lt;var&gt;window&lt;/var&gt; 使用其 &lt;var&gt;keep-margins&lt;/var&gt; 参数 &lt;code&gt;nil&lt;/code&gt; 或省略 &lt;code&gt;set-window-buffer&lt;/code&gt; （请参见&lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;Buffers和Windows&lt;/a&gt;）来覆盖此处指定的值。但是，如果可选的第五个参数 &lt;var&gt;persistent&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，并且其他参数已成功处理，则此处指定的值将无条件保留在 &lt;code&gt;set-window-buffer&lt;/code&gt; 的后续调用中。</target>
        </trans-unit>
        <trans-unit id="9f20937a44fbec35b55cf8ad483755599c4f4983" translate="yes" xml:space="preserve">
          <source>The values specified here may be later overridden by invoking &lt;code&gt;set-window-buffer&lt;/code&gt; (see &lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;Buffers and Windows&lt;/a&gt;) on &lt;var&gt;window&lt;/var&gt; with its &lt;var&gt;keep-margins&lt;/var&gt; argument &lt;code&gt;nil&lt;/code&gt; or omitted. However, if the optional fifth argument &lt;var&gt;persistent&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; and the other arguments are processed successfully, the values specified here unconditionally survive subsequent invocations of &lt;code&gt;set-window-buffer&lt;/code&gt;. This can be used to permanently turn off fringes in the minibuffer window, consult the description of &lt;code&gt;set-window-scroll-bars&lt;/code&gt; for an example (see &lt;a href=&quot;scroll-bars#Scroll-Bars&quot;&gt;Scroll Bars&lt;/a&gt;).</source>
          <target state="translated">稍后可以通过在其 &lt;var&gt;window&lt;/var&gt; 使用其 &lt;var&gt;keep-margins&lt;/var&gt; 参数 &lt;code&gt;nil&lt;/code&gt; 或省略 &lt;code&gt;set-window-buffer&lt;/code&gt; （请参见&lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;Buffers和Windows&lt;/a&gt;）来覆盖此处指定的值。但是，如果可选的第五个参数 &lt;var&gt;persistent&lt;/var&gt; 为non- &lt;code&gt;nil&lt;/code&gt; ，并且其他参数已成功处理，则此处指定的值将无条件保留在 &lt;code&gt;set-window-buffer&lt;/code&gt; 的后续调用中。这可用于永久关闭minibuffer窗口中的条纹，有关示例，请参考 &lt;code&gt;set-window-scroll-bars&lt;/code&gt; 的描述（请参见&lt;a href=&quot;scroll-bars#Scroll-Bars&quot;&gt;滚动条&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="9d0a64001addcf5c84bd11eeecbbe2a812972b09" translate="yes" xml:space="preserve">
          <source>The values you can use, to specify either of these pointer shapes, are defined in the file</source>
          <target state="translated">您可以用来指定这些指针形状的值在文件</target>
        </trans-unit>
        <trans-unit id="70c4d9624135a1d02ee3a53311a97032dd279c56" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;&lt;var&gt;command&lt;/var&gt;-alternatives&lt;/code&gt; should contain an alist with alternative implementations of &lt;var&gt;command&lt;/var&gt;. Until this variable is set, &lt;code&gt;define-alternatives&lt;/code&gt; has no effect.</source>
          <target state="translated">可变 &lt;code&gt;&lt;var&gt;command&lt;/var&gt;-alternatives&lt;/code&gt; 应该包含的替换实现一个ALIST &lt;var&gt;command&lt;/var&gt; 。在设置此变量之前， &lt;code&gt;define-alternatives&lt;/code&gt; 无效。</target>
        </trans-unit>
        <trans-unit id="edfb1c8edeea6bfd958815e01d5a1cbf976013b7" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;backup-by-copying&lt;/code&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, says to use the second method, which is to copy the original file and overwrite it with the new buffer contents. The variable &lt;code&gt;file-precious-flag&lt;/code&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, also has this effect (as a sideline of its main significance). See &lt;a href=&quot;saving-buffers#Saving-Buffers&quot;&gt;Saving Buffers&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;code&gt;backup-by-copying&lt;/code&gt; 变量backup-by- copy （如果不是 &lt;code&gt;nil&lt;/code&gt; )，则表示使用第二种方法，即复制原始文件并用新的缓冲区内容覆盖它。变量 &lt;code&gt;file-precious-flag&lt;/code&gt; （如果不是 &lt;code&gt;nil&lt;/code&gt; ）也具有此作用（作为其主要含义的副词）。请参阅&lt;a href=&quot;saving-buffers#Saving-Buffers&quot;&gt;保存缓冲区&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="784cb7a1b10dca75362ea63cc44adc63b202f651" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;display-buffer-overriding-action&lt;/code&gt;.</source>
          <target state="translated">可变的 &lt;code&gt;display-buffer-overriding-action&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="da7252e1b84fd0839fae971325637e2c2419366d" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;face-remapping-alist&lt;/code&gt; is used for buffer-local or global changes in the appearance of a face. For instance, it is used to implement the &lt;code&gt;text-scale-adjust&lt;/code&gt; command (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Text-Scale.html#Text-Scale&quot;&gt;Text Scale&lt;/a&gt; in</source>
          <target state="translated">变量 &lt;code&gt;face-remapping-alist&lt;/code&gt; 用于面部外观的缓冲区局部或全局更改。例如，它是用来实现 &lt;code&gt;text-scale-adjust&lt;/code&gt; 命令（见&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Text-Scale.html#Text-Scale&quot;&gt;文字比例&lt;/a&gt;在</target>
        </trans-unit>
        <trans-unit id="e34c858c384be3019173ab7142614489d00972d3" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;file-name-coding-system&lt;/code&gt; specifies the coding system to use for encoding file names. Emacs encodes file names using that coding system for all file operations. If &lt;code&gt;file-name-coding-system&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;, Emacs uses a default coding system determined by the selected language environment. In the default language environment, any non-</source>
          <target state="translated">变量 &lt;code&gt;file-name-coding-system&lt;/code&gt; 指定用于编码文件名的编码系统。Emacs使用该编码系统对所有文件操作编码文件名。如果 &lt;code&gt;file-name-coding-system&lt;/code&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，那么Emacs将使用由所选语言环境确定的默认编码系统。在默认语言环境中，任何非</target>
        </trans-unit>
        <trans-unit id="f0a2a7962865afd977c9962e346463309608747d" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;file-name-handler-alist&lt;/code&gt; holds a list of handlers, together with regular expressions that determine when to apply each handler. Each element has this form:</source>
          <target state="translated">变量 &lt;code&gt;file-name-handler-alist&lt;/code&gt; 包含处理程序列表以及确定何时应用每个处理程序的正则表达式。每个元素都具有以下形式：</target>
        </trans-unit>
        <trans-unit id="31a91e3271c754112418809b5d918df00d438cdc" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;inhibit-point-motion-hooks&lt;/code&gt; by default inhibits running the &lt;code&gt;point-left&lt;/code&gt; and &lt;code&gt;point-entered&lt;/code&gt; hooks, see &lt;a href=&quot;#Inhibit-point-motion-hooks&quot;&gt;Inhibit point motion hooks&lt;/a&gt;.</source>
          <target state="translated">默认情况下，变量 &lt;code&gt;inhibit-point-motion-hooks&lt;/code&gt; 禁止运行 &lt;code&gt;point-left&lt;/code&gt; &lt;code&gt;point-entered&lt;/code&gt; 和点输入的挂钩，请参阅&lt;a href=&quot;#Inhibit-point-motion-hooks&quot;&gt;禁止点运动挂钩&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="80d2dd14eab302d61ea77d5bcf3d662baf312644" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;kill-ring&lt;/code&gt; holds the kill ring contents, in the form of a list of strings. The most recent kill is always at the front of the list.</source>
          <target state="translated">变量 &lt;code&gt;kill-ring&lt;/code&gt; 以字符串列表的形式保存kill ring的内容。最近的杀人事件始终排在榜首。</target>
        </trans-unit>
        <trans-unit id="1af116daf2ff92fc810afa12d7b3276cfcb4e1cd" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;max-mini-window-height&lt;/code&gt;, which specifies the maximum height for resizing minibuffer windows, also applies to the echo area (which is really a special use of the minibuffer window; see &lt;a href=&quot;minibuffer-windows#Minibuffer-Windows&quot;&gt;Minibuffer Windows&lt;/a&gt;).</source>
          <target state="translated">变量 &lt;code&gt;max-mini-window-height&lt;/code&gt; ，它指定用于调整小型缓冲区窗口大小的最大高度，该变量也适用于回显区域（这实际上是&lt;a href=&quot;minibuffer-windows#Minibuffer-Windows&quot;&gt;小型&lt;/a&gt;缓冲区窗口的一种特殊用法；请参见小型缓冲区窗口）。</target>
        </trans-unit>
        <trans-unit id="97a8e64d6a49b6e2b383ab7b9d91e1b975482616" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;overriding-local-map&lt;/code&gt; is normally ignored when determining the menu bar contents. That is, the menu bar is computed from the keymaps that would be active if &lt;code&gt;overriding-local-map&lt;/code&gt; were &lt;code&gt;nil&lt;/code&gt;. See &lt;a href=&quot;active-keymaps#Active-Keymaps&quot;&gt;Active Keymaps&lt;/a&gt;.</source>
          <target state="translated">确定菜单栏内容时，通常会忽略变量 &lt;code&gt;overriding-local-map&lt;/code&gt; 。也就是说，菜单栏是根据 &lt;code&gt;overriding-local-map&lt;/code&gt; 为 &lt;code&gt;nil&lt;/code&gt; 时将处于活动状态的按键映射计算得出的。请参阅&lt;a href=&quot;active-keymaps#Active-Keymaps&quot;&gt;活动键盘映射&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f7a4850b24d3c2ac6ae8142c3ffc8f37ad0d3a10" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;paragraph-separate&lt;/code&gt; controls how to distinguish paragraphs. See &lt;a href=&quot;standard-regexps#Standard-Regexps&quot;&gt;Standard Regexps&lt;/a&gt;.</source>
          <target state="translated">可变的 &lt;code&gt;paragraph-separate&lt;/code&gt; 符控制如何区分段落。请参阅&lt;a href=&quot;standard-regexps#Standard-Regexps&quot;&gt;标准正则表达式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d4e5e030204bb60690092b5c001a6c2d2385a3dc" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;selection-coding-system&lt;/code&gt; specifies how to encode selections for the window system. See &lt;a href=&quot;window-system-selections#Window-System-Selections&quot;&gt;Window System Selections&lt;/a&gt;.</source>
          <target state="translated">变量 &lt;code&gt;selection-coding-system&lt;/code&gt; 指定如何对窗口系统的选择进行编码。请参阅&lt;a href=&quot;window-system-selections#Window-System-Selections&quot;&gt;窗口系统选择&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="005a4747db2da8eb60b4c4d70cc7430741bf77b2" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;use-dialog-box&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Dialog-Boxes.html#Dialog-Boxes&quot;&gt;Dialog Boxes&lt;/a&gt; in</source>
          <target state="translated">变量 &lt;code&gt;use-dialog-box&lt;/code&gt; 为 &lt;code&gt;nil&lt;/code&gt; 。见&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Dialog-Boxes.html#Dialog-Boxes&quot;&gt;对话框&lt;/a&gt;中</target>
        </trans-unit>
        <trans-unit id="81d9e1a111c06c72dd5fe05bcdd79e7bb53745fd" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;vc-mode&lt;/code&gt;, buffer-local in each buffer, records whether the buffer&amp;rsquo;s visited file is maintained with version control, and, if so, which kind. Its value is a string that appears in the mode line, or &lt;code&gt;nil&lt;/code&gt; for no version control.</source>
          <target state="translated">变量 &lt;code&gt;vc-mode&lt;/code&gt; （每个缓冲区中的局部缓冲区）记录是否使用版本控制来维护该缓冲区的访问文件，如果是，则使用哪种类型。它的值是出现在模式行中的字符串，如果没有版本控制，则为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3f4edf43932306ed36279cea1dd13405c1358ef5" translate="yes" xml:space="preserve">
          <source>The variable in overall control of the mode line is &lt;code&gt;mode-line-format&lt;/code&gt;.</source>
          <target state="translated">模式行总体控制中的变量是 &lt;code&gt;mode-line-format&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="506280d27c3a453af25eaf83b2e22ba4756bde25" translate="yes" xml:space="preserve">
          <source>The variable is a normal hook (see &lt;a href=&quot;hooks#Hooks&quot;&gt;Hooks&lt;/a&gt;).</source>
          <target state="translated">该变量是一个普通钩子（请参见&lt;a href=&quot;hooks#Hooks&quot;&gt;Hooks&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="bd9d0d131cd223849d83a9a897d9082204faab10" translate="yes" xml:space="preserve">
          <source>The variable is always local to the current terminal and cannot be buffer-local. See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;.</source>
          <target state="translated">该变量始终在当前端子本地，并且不能在缓冲区本地。请参阅&lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;多个终端&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="afffab14c74c322c6258e66827462e1a16d2b8ec" translate="yes" xml:space="preserve">
          <source>The variable is always local to the current terminal, and cannot be buffer-local. See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;.</source>
          <target state="translated">该变量始终在当前端子本地，并且不能在缓冲区本地。请参阅&lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;多个终端&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1b97401b6a596ccc158402fffb09944fd2fd36e2" translate="yes" xml:space="preserve">
          <source>The variable is intended for internal use and is defined in C code. (Emacs code contributed before 2018 may follow other conventions, which are being phased out.)</source>
          <target state="translated">该变量旨在供内部使用,用C代码定义。(2018年之前贡献的Emacs代码可能会遵循其他约定,这些约定正在逐步被淘汰)。</target>
        </trans-unit>
        <trans-unit id="cb202781764a3574f77a5a340b243172f7492fda" translate="yes" xml:space="preserve">
          <source>The variable is intended for internal use and is defined in the file</source>
          <target state="translated">变量为内部使用,定义在文件</target>
        </trans-unit>
        <trans-unit id="41f80727e5413f13677ccab0cafcbdb5331c71cc" translate="yes" xml:space="preserve">
          <source>The variable is needed because in some cases a function reads an event and then decides not to use it. Storing the event in this variable causes it to be processed normally, by the command loop or by the functions to read command input.</source>
          <target state="translated">之所以需要这个变量,是因为在某些情况下,一个函数读取了一个事件,然后决定不使用它。将事件存储在这个变量中会导致事件被正常处理,由命令循环或由函数读取命令输入。</target>
        </trans-unit>
        <trans-unit id="3150be7b7ac09c6a1f548c75f40f74c6a1f6ef59" translate="yes" xml:space="preserve">
          <source>The variable which directly controls search-based fontification is &lt;code&gt;font-lock-keywords&lt;/code&gt;, which is typically specified via the &lt;var&gt;keywords&lt;/var&gt; element in &lt;code&gt;font-lock-defaults&lt;/code&gt;.</source>
          <target state="translated">基于搜索的直接控制可变fontification是 &lt;code&gt;font-lock-keywords&lt;/code&gt; ，其经由通常指定 &lt;var&gt;keywords&lt;/var&gt; 在元件 &lt;code&gt;font-lock-defaults&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4c5b07c9b1876282e7d1f551953a370749b40a01" translate="yes" xml:space="preserve">
          <source>The variable&amp;rsquo;s normal value is &lt;code&gt;nil&lt;/code&gt;, which means to handle each warning separately.</source>
          <target state="translated">变量的正常值为 &lt;code&gt;nil&lt;/code&gt; ，这意味着分别处理每个警告。</target>
        </trans-unit>
        <trans-unit id="c95ce49750efde5fed6afd86875120cb2d79d29e" translate="yes" xml:space="preserve">
          <source>The variable&amp;rsquo;s ordinary binding, which is not associated with any specific buffer, is called the &lt;em&gt;default binding&lt;/em&gt;. In most cases, this is the global binding.</source>
          <target state="translated">不与任何特定缓冲区关联的变量的普通绑定称为&lt;em&gt;默认绑定&lt;/em&gt;。在大多数情况下，这是全局绑定。</target>
        </trans-unit>
        <trans-unit id="0002578a86e49c7b26b7d6dae1705110ffa7f565" translate="yes" xml:space="preserve">
          <source>The variables &lt;code&gt;last-command&lt;/code&gt;, &lt;code&gt;this-command&lt;/code&gt;, &lt;code&gt;last-command-event&lt;/code&gt;, &lt;code&gt;last-input-event&lt;/code&gt;, &lt;code&gt;last-event-frame&lt;/code&gt;, &lt;code&gt;last-nonmenu-event&lt;/code&gt;, and &lt;code&gt;track-mouse&lt;/code&gt;. Commands in Edebug do not affect these variables outside of Edebug.</source>
          <target state="translated">变量 &lt;code&gt;last-command&lt;/code&gt; ， &lt;code&gt;this-command&lt;/code&gt; ， &lt;code&gt;last-command-event&lt;/code&gt; ， &lt;code&gt;last-input-event&lt;/code&gt; ， &lt;code&gt;last-event-frame&lt;/code&gt; ， &lt;code&gt;last-nonmenu-event&lt;/code&gt; 和 &lt;code&gt;track-mouse&lt;/code&gt; 。Edebug中的命令不会影响Edebug之外的这些变量。</target>
        </trans-unit>
        <trans-unit id="ec74bb4b14cd4ddba613a9beb2bc907924ad1fd7" translate="yes" xml:space="preserve">
          <source>The variables &lt;code&gt;overlay-arrow-position&lt;/code&gt; and &lt;code&gt;overlay-arrow-string&lt;/code&gt; are saved and restored, so you can safely invoke Edebug from the recursive edit elsewhere in the same buffer.</source>
          <target state="translated">变量 &lt;code&gt;overlay-arrow-position&lt;/code&gt; 和 &lt;code&gt;overlay-arrow-string&lt;/code&gt; 已保存并恢复，因此您可以从同一缓冲区中其他位置的递归编辑中安全地调用Edebug。</target>
        </trans-unit>
        <trans-unit id="12dd85f0af26cb40d63289524c75ea79f44a055c" translate="yes" xml:space="preserve">
          <source>The variables and subgroups of a group are stored in the &lt;code&gt;custom-group&lt;/code&gt; property of the group&amp;rsquo;s symbol. See &lt;a href=&quot;symbol-plists#Symbol-Plists&quot;&gt;Symbol Plists&lt;/a&gt;. The value of that property is a list of pairs whose &lt;code&gt;car&lt;/code&gt; is the variable or subgroup symbol and the &lt;code&gt;cdr&lt;/code&gt; is either &lt;code&gt;custom-variable&lt;/code&gt; or &lt;code&gt;custom-group&lt;/code&gt;.</source>
          <target state="translated">组的变量和子组存储在组符号的 &lt;code&gt;custom-group&lt;/code&gt; 属性中。请参见&lt;a href=&quot;symbol-plists#Symbol-Plists&quot;&gt;符号列表&lt;/a&gt;。该属性的值是对列表，其 &lt;code&gt;car&lt;/code&gt; 是变量或子组符号，而 &lt;code&gt;cdr&lt;/code&gt; 是 &lt;code&gt;custom-variable&lt;/code&gt; 或 &lt;code&gt;custom-group&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7ad60ac6e02db9591e6f7dda4a2e131b2f72ea7a" translate="yes" xml:space="preserve">
          <source>The variables whose names end in &amp;lsquo;</source>
          <target state="translated">名称以'结尾的变量</target>
        </trans-unit>
        <trans-unit id="bab9f851db4965f0aa949afaf727a84dac3bbdef" translate="yes" xml:space="preserve">
          <source>The various forms in &lt;code&gt;rx&lt;/code&gt; regexps are described below. The shorthand &lt;var&gt;rx&lt;/var&gt; represents any &lt;code&gt;rx&lt;/code&gt; form, and &lt;var&gt;rx&lt;/var&gt;&amp;hellip; means zero or more &lt;code&gt;rx&lt;/code&gt; forms. Where the corresponding string regexp syntax is given, &lt;var&gt;A&lt;/var&gt;, &lt;var&gt;B&lt;/var&gt;, &amp;hellip; are string regexp subexpressions.</source>
          <target state="translated">&lt;code&gt;rx&lt;/code&gt; 正则表达式中的各种形式如下所述。速记 &lt;var&gt;rx&lt;/var&gt; 表示任何 &lt;code&gt;rx&lt;/code&gt; 形式，而 &lt;var&gt;rx&lt;/var&gt; &amp;hellip;表示零个或多个 &lt;code&gt;rx&lt;/code&gt; 形式。在给出了相应的字符串正则表达式语法的情况下， &lt;var&gt;A&lt;/var&gt; ， &lt;var&gt;B&lt;/var&gt; ，&amp;hellip;是字符串正则表达式子表达式。</target>
        </trans-unit>
        <trans-unit id="3fb4271848a99a415f5fac5439780d5440f9b920" translate="yes" xml:space="preserve">
          <source>The vast majority of buffer changing primitives will call &lt;code&gt;before-change-functions&lt;/code&gt; and &lt;code&gt;after-change-functions&lt;/code&gt; in balanced pairs, once for each change, where the arguments to these hooks exactly delimit the change being made. Yet, hook functions should not rely on this always being the case, because some complex primitives call &lt;code&gt;before-change-functions&lt;/code&gt; once before making changes, and then call &lt;code&gt;after-change-functions&lt;/code&gt; zero or more times, depending on how many individual changes the primitive is making. When that happens, the arguments to &lt;code&gt;before-change-functions&lt;/code&gt; will enclose a region in which the individual changes are made, but won&amp;rsquo;t necessarily be the minimal such region, and the arguments to each successive call of &lt;code&gt;after-change-functions&lt;/code&gt; will then delimit the part of text being changed exactly. In general, we advise using either the before- or the after-change hook, but not both.</source>
          <target state="translated">绝大多数更改缓冲区的原语将在平衡对中调用 &lt;code&gt;before-change-functions&lt;/code&gt; 和 &lt;code&gt;after-change-functions&lt;/code&gt; ，每次更改一次，这些钩子的参数正好界定了所做的更改。但是，钩子函数不应该总是这样，因为某些复杂的原语 &lt;code&gt;before-change-functions&lt;/code&gt; 调用更改前函数一次，然后根据更改了多少个人对原语进行多次 &lt;code&gt;after-change-functions&lt;/code&gt; 零次或多次。正在做。发生这种情况时， &lt;code&gt;before-change-functions&lt;/code&gt; 的参数将围成一个区域，在该区域中进行单个更改，但不一定是最小的此类区域，然后，每次后续调用 &lt;code&gt;after-change-functions&lt;/code&gt; 的自变量将界定准确更改的文本部分。通常，我们建议使用变更前或变更后挂钩，但不要同时使用。</target>
        </trans-unit>
        <trans-unit id="01527b8d037e3db74e702be995e76aba34c55c3a" translate="yes" xml:space="preserve">
          <source>The vector of Lisp objects referenced by the byte code. These include symbols used as function names and variable names.</source>
          <target state="translated">字节码引用的Lisp对象的向量,包括作为函数名和变量名的符号。这些对象包括用作函数名和变量名的符号。</target>
        </trans-unit>
        <trans-unit id="c3778db41acf0d35db1dc61c9cf1b4b3b4f8a61d" translate="yes" xml:space="preserve">
          <source>The vendor name. For example, &amp;lsquo;</source>
          <target state="translated">供应商名称。例如， '</target>
        </trans-unit>
        <trans-unit id="3336772c213085c20a832b2612cfbefdb3b13ec1" translate="yes" xml:space="preserve">
          <source>The version number comes from the &amp;lsquo;</source>
          <target state="translated">版本号来自&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="81a17dbb44063c857219c81f3cd4198fa63eea70" translate="yes" xml:space="preserve">
          <source>The vertical scroll position is measured in units of the normal line height, which is the height of the default font. Thus, if the value is .5, that means the window contents will be scrolled up half the normal line height. If it is 3.3, that means the window contents are scrolled up somewhat over three times the normal line height.</source>
          <target state="translated">垂直滚动位置以正常行高为单位,也就是默认字体的高度。因此,如果该值是0.5,意味着窗口内容将向上滚动到正常行高的一半。如果是3.3,则意味着窗口内容将滚动到正常行高的三倍以上。</target>
        </trans-unit>
        <trans-unit id="bc4829014d1d53e420832706fbc8210addcc9ffd" translate="yes" xml:space="preserve">
          <source>The very first thing this function does is run the normal hook &lt;code&gt;change-major-mode-hook&lt;/code&gt; (see below).</source>
          <target state="translated">此功能首先要做的是运行正常的hook &lt;code&gt;change-major-mode-hook&lt;/code&gt; （请参见下文）。</target>
        </trans-unit>
        <trans-unit id="2a386d0814fb0c47f95262bcd9a80770783517ae" translate="yes" xml:space="preserve">
          <source>The virtual memory size of the process, measured in kilobytes.</source>
          <target state="translated">进程的虚拟内存大小,以千字节为单位。</target>
        </trans-unit>
        <trans-unit id="d546af21745b05bf5bc7bae48a02537d10b7c151" translate="yes" xml:space="preserve">
          <source>The visibility status of a frame is also available as a frame parameter. You can read or change it as such. See &lt;a href=&quot;management-parameters#Management-Parameters&quot;&gt;Management Parameters&lt;/a&gt;. The user can also iconify and deiconify frames with the window manager. This happens below the level at which Emacs can exert any control, but Emacs does provide events that you can use to keep track of such changes. See &lt;a href=&quot;misc-events#Misc-Events&quot;&gt;Misc Events&lt;/a&gt;.</source>
          <target state="translated">框架的可见性状态也可用作框架参数。您可以这样阅读或更改它。请参阅&lt;a href=&quot;management-parameters#Management-Parameters&quot;&gt;管理参数&lt;/a&gt;。用户还可以使用窗口管理器对框架进行图标化和去图标化。这发生在Emacs可以施加任何控制的级别以下，但是Emacs确实提供了可用于跟踪此类更改的事件。请参阅&lt;a href=&quot;misc-events#Misc-Events&quot;&gt;其他事件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="50e098ac168a10d2d4a1e79562ce0e334e8bd88a" translate="yes" xml:space="preserve">
          <source>The visited file name, obtained with the &lt;code&gt;buffer-file-name&lt;/code&gt; function. See &lt;a href=&quot;buffer-file-name#Buffer-File-Name&quot;&gt;Buffer File Name&lt;/a&gt;.</source>
          <target state="translated">使用 &lt;code&gt;buffer-file-name&lt;/code&gt; 函数获得的已访问文件名。请参阅&lt;a href=&quot;buffer-file-name#Buffer-File-Name&quot;&gt;缓冲区文件名&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5f85520dd16c49b22fafbad49ad07147a119591b" translate="yes" xml:space="preserve">
          <source>The visual effect of an overlay is the same as of the corresponding text property (see &lt;a href=&quot;text-properties#Text-Properties&quot;&gt;Text Properties&lt;/a&gt;). However, due to a different implementation, overlays generally don&amp;rsquo;t scale well (many operations take a time that is proportional to the number of overlays in the buffer). If you need to affect the visual appearance of many portions in the buffer, we recommend using text properties.</source>
          <target state="translated">叠加层的视觉效果与相应的text属性相同（请参见&lt;a href=&quot;text-properties#Text-Properties&quot;&gt;Text Properties&lt;/a&gt;）。但是，由于实现方式不同，覆盖层通常无法很好地扩展（许多操作所花费的时间与缓冲区中覆盖层的数量成比例）。如果需要影响缓冲区中许多部分的视觉外观，建议使用文本属性。</target>
        </trans-unit>
        <trans-unit id="d5ca138eae9cfe76bef0e2c59914224c9bdc3031" translate="yes" xml:space="preserve">
          <source>The wait functions are designed to wait for a certain amount of time to pass or until there is input. For example, you may wish to pause in the middle of a computation to allow the user time to view the display. &lt;code&gt;sit-for&lt;/code&gt; pauses and updates the screen, and returns immediately if input comes in, while &lt;code&gt;sleep-for&lt;/code&gt; pauses without updating the screen.</source>
          <target state="translated">等待功能被设计为等待一段时间或直到有输入为止。例如，您可能希望在计算过程中暂停以使用户有时间查看显示内容。 &lt;code&gt;sit-for&lt;/code&gt; 暂停和更新屏幕，并立即如果输入进来的回报，而 &lt;code&gt;sleep-for&lt;/code&gt; 不更新屏幕暂停。</target>
        </trans-unit>
        <trans-unit id="192ef2dfd536e9e70dc893e0e89a1431107ac5ac" translate="yes" xml:space="preserve">
          <source>The way to correct this is to use an uninterned symbol instead of &lt;code&gt;max&lt;/code&gt; (see &lt;a href=&quot;creating-symbols#Creating-Symbols&quot;&gt;Creating Symbols&lt;/a&gt;). The uninterned symbol can be bound and referred to just like any other symbol, but since it is created by &lt;code&gt;for&lt;/code&gt;, we know that it cannot already appear in the user&amp;rsquo;s program. Since it is not interned, there is no way the user can put it into the program later. It will never appear anywhere except where put by &lt;code&gt;for&lt;/code&gt;. Here is a definition of &lt;code&gt;for&lt;/code&gt; that works this way:</source>
          <target state="translated">纠正此问题的方法是使用未隔离的符号而不是 &lt;code&gt;max&lt;/code&gt; （请参阅&lt;a href=&quot;creating-symbols#Creating-Symbols&quot;&gt;创建符号&lt;/a&gt;）。可以像其他任何符号一样绑定和引用未隔离的符号，但是由于它是由 &lt;code&gt;for&lt;/code&gt; 创建的，因此我们知道它不可能已经出现在用户程序中。由于未进行实习，因此用户以后无法将其放入程序中。除了 &lt;code&gt;for&lt;/code&gt; 放置的地方，它永远不会出现在任何地方。这是通过这种方式工作的 &lt;code&gt;for&lt;/code&gt; 的定义：</target>
        </trans-unit>
        <trans-unit id="66b4cae96d1e2c0bcd9a52b36cee9d786ca97469" translate="yes" xml:space="preserve">
          <source>The way to declare new customization groups is with &lt;code&gt;defgroup&lt;/code&gt;.</source>
          <target state="translated">声明新的定制组的方法是使用 &lt;code&gt;defgroup&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="db0b6d7df13b1e2fdfc4c27e9f22fde31dbc569b" translate="yes" xml:space="preserve">
          <source>The way to display something in the margins is to specify it in a margin display specification in the &lt;code&gt;display&lt;/code&gt; property of some text. This is a replacing display specification, meaning that the text you put it on does not get displayed; the margin display appears, but that text does not.</source>
          <target state="translated">在边距中显示内容的方法是在某些文本的 &lt;code&gt;display&lt;/code&gt; 属性中的边距显示规范中指定它。这是一个替代性的显示规范，这意味着将不会显示您放置在其上的文本。出现边距显示，但不显示该文本。</target>
        </trans-unit>
        <trans-unit id="1737239af08f996045b6fcb09811eee72ac3f86e" translate="yes" xml:space="preserve">
          <source>The way to do this is to specify the faces in the text with the special text property &lt;code&gt;font-lock-face&lt;/code&gt; (see &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Special Properties&lt;/a&gt;). When Font Lock mode is enabled, this property controls the display, just like the &lt;code&gt;face&lt;/code&gt; property. When Font Lock mode is disabled, &lt;code&gt;font-lock-face&lt;/code&gt; has no effect on the display.</source>
          <target state="translated">执行此操作的方法是使用特殊文本属性 &lt;code&gt;font-lock-face&lt;/code&gt; （请参见&lt;a href=&quot;special-properties#Special-Properties&quot;&gt;特殊属性&lt;/a&gt;）在文本中指定面孔。启用字体锁定模式后，此属性将控制显示，就像 &lt;code&gt;face&lt;/code&gt; 属性一样。禁用字体锁定模式时， &lt;code&gt;font-lock-face&lt;/code&gt; 在显示屏上不起作用。</target>
        </trans-unit>
        <trans-unit id="129aacdb8825813ce33bdb7106847a380bb1f4e6" translate="yes" xml:space="preserve">
          <source>The way to rebind a key is to change its entry in a keymap. If you change a binding in the global keymap, the change is effective in all buffers (though it has no direct effect in buffers that shadow the global binding with a local one). If you change the current buffer&amp;rsquo;s local map, that usually affects all buffers using the same major mode. The &lt;code&gt;global-set-key&lt;/code&gt; and &lt;code&gt;local-set-key&lt;/code&gt; functions are convenient interfaces for these operations (see &lt;a href=&quot;key-binding-commands#Key-Binding-Commands&quot;&gt;Key Binding Commands&lt;/a&gt;). You can also use &lt;code&gt;define-key&lt;/code&gt;, a more general function; then you must explicitly specify the map to change.</source>
          <target state="translated">重新绑定键的方法是更改​​键映射中的键条目。如果您更改了全局键映射中的绑定，则该更改在所有缓冲区中均有效（尽管在使用本地缓冲区映射全局绑定的缓冲区中没有直接作用）。如果更改当前缓冲区的本地映射，通常会影响使用相同主模式的所有缓冲区。在 &lt;code&gt;global-set-key&lt;/code&gt; 和 &lt;code&gt;local-set-key&lt;/code&gt; 的功能是为这些操作方便的接口（见&lt;a href=&quot;key-binding-commands#Key-Binding-Commands&quot;&gt;键绑定命令&lt;/a&gt;）。您还可以使用 &lt;code&gt;define-key&lt;/code&gt; ，这是更通用的功能；那么您必须明确指定要更改的地图。</target>
        </trans-unit>
        <trans-unit id="fe05ab0a232a34266b1e0d8cdfc6c737d45d841d" translate="yes" xml:space="preserve">
          <source>The way you control explicit selective display is by replacing a newline (control-j) with a carriage return (control-m). The text that was formerly a line following that newline is now hidden. Strictly speaking, it is temporarily no longer a line at all, since only newlines can separate lines; it is now part of the previous line.</source>
          <target state="translated">控制显式选择性显示的方法是用回车(control-m)代替换行(control-j)。原本是一行的文本在换行符之后就被隐藏了。严格地说,它暂时根本不再是一行,因为只有换行符才能分隔行,它现在是前一行的一部分。</target>
        </trans-unit>
        <trans-unit id="892bdef3fcc8380be601ff3b96fc9536e8469a69" translate="yes" xml:space="preserve">
          <source>The weakness of a hash table specifies whether the presence of a key or value in the hash table preserves it from garbage collection.</source>
          <target state="translated">哈希表的弱点指定了哈希表中的键或值的存在是否能使其免受垃圾收集。</target>
        </trans-unit>
        <trans-unit id="d6cc12223fc5458a08353a47288b23382be4b087" translate="yes" xml:space="preserve">
          <source>The widgets can specify predicates to say whether an inline value matches the widget with the &lt;code&gt;:match-inline&lt;/code&gt; element.</source>
          <target state="translated">小部件可以指定谓词来说明内联值是否与具有 &lt;code&gt;:match-inline&lt;/code&gt; 元素的小部件匹配。</target>
        </trans-unit>
        <trans-unit id="ed69a293e691b205905c7d5e0a4347f1d87f0d5a" translate="yes" xml:space="preserve">
          <source>The width (in pixels) of lines drawn, and outlines around solid shapes.</source>
          <target state="translated">绘制的线条宽度(像素),以及实体形状周围的轮廓。</target>
        </trans-unit>
        <trans-unit id="4a1892ba0d0e173378f79f3ed678b5d7efba8a0a" translate="yes" xml:space="preserve">
          <source>The width (thickness) reserved for the bottom divider (see &lt;a href=&quot;window-dividers#Window-Dividers&quot;&gt;Window Dividers&lt;/a&gt;) of any window on the frame, in pixels. A value of zero means to not draw bottom dividers.</source>
          <target state="translated">帧上任何窗口的底部分隔线（请参阅&amp;ldquo;&lt;a href=&quot;window-dividers#Window-Dividers&quot;&gt;窗口&lt;/a&gt;分隔线&amp;rdquo;）保留的宽度（厚度），以像素为单位。零值表示不绘制底部分隔线。</target>
        </trans-unit>
        <trans-unit id="558fa961e0191929dec1ba6cbf01d57c94178289" translate="yes" xml:space="preserve">
          <source>The width (thickness) reserved for the right divider (see &lt;a href=&quot;window-dividers#Window-Dividers&quot;&gt;Window Dividers&lt;/a&gt;) of any window on the frame, in pixels. A value of zero means to not draw right dividers.</source>
          <target state="translated">为帧上任何窗口的右分隔线（请参见&lt;a href=&quot;window-dividers#Window-Dividers&quot;&gt;Window Dividers&lt;/a&gt;）保留的宽度（厚度），以像素为单位。零值表示不绘制右分隔线。</target>
        </trans-unit>
        <trans-unit id="90bb0e3cf3541f9772a18bad6f13e8fc7599b3c5" translate="yes" xml:space="preserve">
          <source>The width in pixels of the frame&amp;rsquo;s internal border (see &lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;Frame Geometry&lt;/a&gt;).</source>
          <target state="translated">框架内部边框的宽度（以像素为单位）（请参见&lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;框架几何&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="c0695b58e941a86963af8bdaa7c318bb86722ff6" translate="yes" xml:space="preserve">
          <source>The width in pixels of the frame&amp;rsquo;s outer border (see &lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;Frame Geometry&lt;/a&gt;).</source>
          <target state="translated">框架外边界的宽度（以像素为单位）（请参见&lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;框架几何&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="1ad9450ad829c4af084ca6d6f4dff95662763c56" translate="yes" xml:space="preserve">
          <source>The width of the internal border of &lt;var&gt;frame&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;frame&lt;/var&gt; 内部边框的宽度。</target>
        </trans-unit>
        <trans-unit id="ae93b55fd23229e2027f0ffca79696be32b880e1" translate="yes" xml:space="preserve">
          <source>The width of the outer border of &lt;var&gt;frame&lt;/var&gt;. The value is meaningful for non-GTK+ X builds only.</source>
          <target state="translated">&lt;var&gt;frame&lt;/var&gt; 外边框的宽度。该值仅对非GTK + X版本有意义。</target>
        </trans-unit>
        <trans-unit id="007bb5c61439f12d2ef2a7267ef1975e048fd3b0" translate="yes" xml:space="preserve">
          <source>The width of this window&amp;rsquo;s vertical scroll bar and the height of this window&amp;rsquo;s horizontal scroll bar, in pixels.</source>
          <target state="translated">此窗口的垂直滚动条的宽度和此窗口的水平滚动条的高度（以像素为单位）。</target>
        </trans-unit>
        <trans-unit id="e829b9ac7b5a75b53a82013fdf3f85cf151e76f0" translate="yes" xml:space="preserve">
          <source>The width of vertical scroll bars, in pixels, or &lt;code&gt;nil&lt;/code&gt; meaning to use the default width.</source>
          <target state="translated">垂直滚动条的宽度，以像素为单位，或者为 &lt;code&gt;nil&lt;/code&gt; ,表示使用默认宽度。</target>
        </trans-unit>
        <trans-unit id="e03654807eef2aa62c363739ba25e938310fc1e8" translate="yes" xml:space="preserve">
          <source>The width, in pixels, of the font&amp;rsquo;s space character.</source>
          <target state="translated">字体的空格字符的宽度（以像素为单位）。</target>
        </trans-unit>
        <trans-unit id="1dbdff9d4f8aba85601189bb83369c69cf6d80bf" translate="yes" xml:space="preserve">
          <source>The widths of the left and right margins in this window. A value of zero means no margin.</source>
          <target state="translated">窗口中左右边距的宽度。值为0表示没有边距。</target>
        </trans-unit>
        <trans-unit id="667e71608920d91a6815b335a2f78b9d18827f03" translate="yes" xml:space="preserve">
          <source>The window &lt;var&gt;window&lt;/var&gt; is used for obtaining parameters such as the width, the horizontal scrolling, and the display table. But &lt;code&gt;vertical-motion&lt;/code&gt; always operates on the current buffer, even if &lt;var&gt;window&lt;/var&gt; currently displays some other buffer.</source>
          <target state="translated">窗口 &lt;var&gt;window&lt;/var&gt; 用于获取诸如宽度，水平滚动和显示表之类的参数。但是，即使 &lt;var&gt;window&lt;/var&gt; 当前显示其他缓冲区， &lt;code&gt;vertical-motion&lt;/code&gt; 始终在当前缓冲区上运行。</target>
        </trans-unit>
        <trans-unit id="d2decde8be6ffd87e4a5ac1b11957bbacc1f4066" translate="yes" xml:space="preserve">
          <source>The window &lt;var&gt;window&lt;/var&gt; serves only to specify which display table to use. &lt;code&gt;compute-motion&lt;/code&gt; always operates on the current buffer, regardless of what buffer is displayed in &lt;var&gt;window&lt;/var&gt;.</source>
          <target state="translated">窗口 &lt;var&gt;window&lt;/var&gt; 仅用于指定要使用的显示表。无论 &lt;var&gt;window&lt;/var&gt; 中显示什么缓冲区， &lt;code&gt;compute-motion&lt;/code&gt; 始终对当前缓冲区进行操作。</target>
        </trans-unit>
        <trans-unit id="4f4813f65c74fdebbc7e8be16faa5ab31e765ada" translate="yes" xml:space="preserve">
          <source>The window configuration is not restored on error or quit, but the outside selected window &lt;em&gt;is&lt;/em&gt; reselected even on error or quit in case a &lt;code&gt;save-excursion&lt;/code&gt; is active. If the value of &lt;code&gt;edebug-save-windows&lt;/code&gt; is a list, only the listed windows are saved and restored.</source>
          <target state="translated">错误或退出时不会恢复窗口配置，但是如果 &lt;code&gt;save-excursion&lt;/code&gt; 则即使错误或退出&lt;em&gt;也会&lt;/em&gt;重新选择外部选择的窗口。如果 &lt;code&gt;edebug-save-windows&lt;/code&gt; 的值是列表，则仅列出并保存列出的窗口。</target>
        </trans-unit>
        <trans-unit id="b5e36cb2e5250fc2fc73614846caeb741168fe8f" translate="yes" xml:space="preserve">
          <source>The window in which the click occurred.</source>
          <target state="translated">发生点击的窗口。</target>
        </trans-unit>
        <trans-unit id="43ba63357161599c3c6d640f071701fc41817fb8" translate="yes" xml:space="preserve">
          <source>The window point is established when a window is first created; it is initialized from the buffer&amp;rsquo;s point, or from the window point of another window opened on the buffer if such a window exists.</source>
          <target state="translated">首次创建窗口时建立窗口点。它是从缓冲区的点初始化的，或者从存在缓冲区的另一个窗口的窗口点初始化的。</target>
        </trans-unit>
        <trans-unit id="21cd1704c6bc80f89122014e2efafdcc999cb781" translate="yes" xml:space="preserve">
          <source>The window specified by any &lt;code&gt;previous-window&lt;/code&gt;&lt;var&gt;alist&lt;/var&gt; entry, provided it is not the selected window.</source>
          <target state="translated">如果不是选定窗口，则由任何 &lt;code&gt;previous-window&lt;/code&gt; &lt;var&gt;alist&lt;/var&gt; 条目指定的窗口。</target>
        </trans-unit>
        <trans-unit id="7c5d6bab6152c63ed0eedf9b7490dea6279bde8a" translate="yes" xml:space="preserve">
          <source>The window start and horizontal scrolling of the source code buffer are not restored, however, so that the display remains coherent within Edebug.</source>
          <target state="translated">然而,窗口的启动和源代码缓冲区的水平滚动并没有恢复,因此,在Edebug中的显示仍然是一致的。</target>
        </trans-unit>
        <trans-unit id="8a0992f4eeaaa8c898270f6ac1c10aae2c8bdf2d" translate="yes" xml:space="preserve">
          <source>The window whose scroll bar was clicked on.</source>
          <target state="translated">其滚动条被点击的窗口。</target>
        </trans-unit>
        <trans-unit id="176c003d1370db2fba484fc39d7e42b225a06af7" translate="yes" xml:space="preserve">
          <source>The window&amp;rsquo;s display table, or &lt;code&gt;nil&lt;/code&gt; if none is specified for it.</source>
          <target state="translated">窗口的显示表；如果未指定，则为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d89efc64e6b638f0411a533ab926dc8cf4b43c89" translate="yes" xml:space="preserve">
          <source>The window-relative vertical position of the line containing &lt;code&gt;window_end_pos&lt;/code&gt;.</source>
          <target state="translated">包含 &lt;code&gt;window_end_pos&lt;/code&gt; 的线的窗口相对垂直位置。</target>
        </trans-unit>
        <trans-unit id="ddc0c25dcfde1cf013980df2ede9f5f487a12559" translate="yes" xml:space="preserve">
          <source>The window-relative vertical position of the line showing the cursor as of the last redisplay that finished.</source>
          <target state="translated">显示光标的行在最后一次重新显示完成时的窗口相对垂直位置。</target>
        </trans-unit>
        <trans-unit id="19d78d69ed62dbe0c081baecf64bf39c74beb8b5" translate="yes" xml:space="preserve">
          <source>The windows in each frame are organized into a &lt;em&gt;window tree&lt;/em&gt;. See &lt;a href=&quot;windows-and-frames#Windows-and-Frames&quot;&gt;Windows and Frames&lt;/a&gt;. The leaf nodes of each window tree are live windows&amp;mdash;the ones actually displaying buffers. The internal nodes of the window tree are &lt;em&gt;internal windows&lt;/em&gt;, which are not live.</source>
          <target state="translated">每个框架中的&lt;em&gt;窗口&lt;/em&gt;都组织成一个&lt;em&gt;窗口树&lt;/em&gt;。请参阅&lt;a href=&quot;windows-and-frames#Windows-and-Frames&quot;&gt;Windows和框架&lt;/a&gt;。每个窗口树的叶节点都是活动窗口，即实际显示缓冲区的窗口。窗口树的内部节点是不活动的&lt;em&gt;内部窗口&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="7ba5625ecf4e266603282ffe15318affa3471aef" translate="yes" xml:space="preserve">
          <source>The word &lt;em&gt;process&lt;/em&gt; usually means a running program. Emacs itself runs in a process of this sort. However, in Emacs Lisp, a process is a Lisp object that designates a subprocess created by the Emacs process. Programs such as shells, GDB, ftp, and compilers, running in subprocesses of Emacs, extend the capabilities of Emacs. An Emacs subprocess takes textual input from Emacs and returns textual output to Emacs for further manipulation. Emacs can also send signals to the subprocess.</source>
          <target state="translated">&lt;em&gt;进程&lt;/em&gt;一词通常表示正在运行的程序。Emacs本身在这种过程中运行。但是，在Emacs Lisp中，进程是Lisp对象，它指定由Emacs进程创建的子进程。在Emacs的子进程中运行的程序（例如shell，GDB，ftp和编译器）扩展了Emacs的功能。一个Emacs子进程从Emacs获取文本输入，并将文本输出返回给Emacs进行进一步处理。Emacs也可以将信号发送到子进程。</target>
        </trans-unit>
        <trans-unit id="5e33feb1b485d5b35c342b63e6368aaa73a16a60" translate="yes" xml:space="preserve">
          <source>The year, an integer typically greater than 1900.</source>
          <target state="translated">年,一个通常大于1900年的整数。</target>
        </trans-unit>
        <trans-unit id="5d422c4871acb4daa515b96859ddb6313519114b" translate="yes" xml:space="preserve">
          <source>Then find the actual matching close parenthesis by typing</source>
          <target state="translated">然后通过键入</target>
        </trans-unit>
        <trans-unit id="25258eb9508f9f8c3143dbf1060b1f5a03a4190b" translate="yes" xml:space="preserve">
          <source>Then this function returns a list of directories which contains first the directory in which &lt;var&gt;image&lt;/var&gt; was found, followed by the value of &lt;code&gt;load-path&lt;/code&gt;. If &lt;var&gt;path&lt;/var&gt; is given, it is used instead of &lt;code&gt;load-path&lt;/code&gt;.</source>
          <target state="translated">然后此函数返回目录列表，该目录首先包含在其中找到 &lt;var&gt;image&lt;/var&gt; 的目录，然后是 &lt;code&gt;load-path&lt;/code&gt; 的值。如果给定 &lt;var&gt;path&lt;/var&gt; ，则使用它代替 &lt;code&gt;load-path&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="894cb389eb05f2c7493a2ac1931a6e04315bf08c" translate="yes" xml:space="preserve">
          <source>Then, if &lt;var&gt;condition&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; when tested, the &lt;code&gt;cond&lt;/code&gt; form returns the value of &lt;var&gt;condition&lt;/var&gt;.</source>
          <target state="translated">然后，如果 &lt;var&gt;condition&lt;/var&gt; 是不 &lt;code&gt;nil&lt;/code&gt; 进行测试时，所述 &lt;code&gt;cond&lt;/code&gt; 形式，返回的值 &lt;var&gt;condition&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="8caa84a6ee4a8ad260f9327c1877dc18fce75afb" translate="yes" xml:space="preserve">
          <source>Then, the font specifications for all but Chinese GB2312 characters have &amp;lsquo;</source>
          <target state="translated">然后，除中文GB2312字符外的所有字体规范都带有'</target>
        </trans-unit>
        <trans-unit id="17ee68a49f1c9ee78f81e68f9f744bfe141c4a21" translate="yes" xml:space="preserve">
          <source>Then, whenever &lt;code&gt;my-mode-map&lt;/code&gt; is active, if the user types</source>
          <target state="translated">然后，只要用户键入 &lt;code&gt;my-mode-map&lt;/code&gt; ，</target>
        </trans-unit>
        <trans-unit id="5b544e6d0a81a1f1983dd0e6865daf009408806b" translate="yes" xml:space="preserve">
          <source>There are a couple of ways in which a variable could be modified (or at least appear to be modified) without triggering a watchpoint.</source>
          <target state="translated">有几种方法可以在不触发监视点的情况下修改变量(或者至少看起来是修改了)。</target>
        </trans-unit>
        <trans-unit id="4810fd34e613503da7a7271cade94d5170cbacb6" translate="yes" xml:space="preserve">
          <source>There are a number of commands devoted to the editing and recall of previous commands. The commands &lt;code&gt;repeat-complex-command&lt;/code&gt;, and &lt;code&gt;list-command-history&lt;/code&gt; are described in the user manual (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Repetition.html#Repetition&quot;&gt;Repetition&lt;/a&gt; in</source>
          <target state="translated">有许多命令专门用于编辑和调用以前的命令。的命令 &lt;code&gt;repeat-complex-command&lt;/code&gt; ，和 &lt;code&gt;list-command-history&lt;/code&gt; 在用户手册中描述（参见&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Repetition.html#Repetition&quot;&gt;Repetition&lt;/a&gt;在</target>
        </trans-unit>
        <trans-unit id="7b011f7007d94c5c72274e3c8d4d061190ed0bc1" translate="yes" xml:space="preserve">
          <source>There are also some bool-vector set operation functions, described below:</source>
          <target state="translated">此外,还有一些bool-vector集的操作功能,下面介绍。</target>
        </trans-unit>
        <trans-unit id="8bd13201286cd465fcc15dcd843023e25d6a951c" translate="yes" xml:space="preserve">
          <source>There are conventions for writing minor modes just as there are for major modes (see &lt;a href=&quot;major-modes#Major-Modes&quot;&gt;Major Modes&lt;/a&gt;). These conventions are described below. The easiest way to follow them is to use the macro &lt;code&gt;define-minor-mode&lt;/code&gt;. See &lt;a href=&quot;defining-minor-modes#Defining-Minor-Modes&quot;&gt;Defining Minor Modes&lt;/a&gt;.</source>
          <target state="translated">与编写主要模式一样，有写次要模式的约定（请参见&amp;ldquo;&lt;a href=&quot;major-modes#Major-Modes&quot;&gt;主要模式&amp;rdquo;&lt;/a&gt;）。这些约定描述如下。遵循它们的最简单方法是使用宏 &lt;code&gt;define-minor-mode&lt;/code&gt; 。请参阅&lt;a href=&quot;defining-minor-modes#Defining-Minor-Modes&quot;&gt;定义次要模式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6f5a57538b1c42c6bebc04336094d61e86ca1b21" translate="yes" xml:space="preserve">
          <source>There are currently three forms of Lisp timestamps, each of which represents a number of seconds:</source>
          <target state="translated">目前Lisp时间戳有三种形式,每一种形式代表一个秒数。</target>
        </trans-unit>
        <trans-unit id="56dfc4fc368a465162c56454477eaa5687676ab1" translate="yes" xml:space="preserve">
          <source>There are four functions to convert floating-point numbers to integers; they differ in how they round. All accept an argument &lt;var&gt;number&lt;/var&gt; and an optional argument &lt;var&gt;divisor&lt;/var&gt;. Both arguments may be integers or floating-point numbers. &lt;var&gt;divisor&lt;/var&gt; may also be &lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;divisor&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or omitted, these functions convert &lt;var&gt;number&lt;/var&gt; to an integer, or return it unchanged if it already is an integer. If &lt;var&gt;divisor&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, they divide &lt;var&gt;number&lt;/var&gt; by &lt;var&gt;divisor&lt;/var&gt; and convert the result to an integer. If &lt;var&gt;divisor&lt;/var&gt; is zero (whether integer or floating point), Emacs signals an &lt;code&gt;arith-error&lt;/code&gt; error.</source>
          <target state="translated">有四个函数可以将浮点数转换为整数。它们的取舍方式不同。所有人都接受一个参数 &lt;var&gt;number&lt;/var&gt; 和一个可选的参数 &lt;var&gt;divisor&lt;/var&gt; 。这两个参数都可以是整数或浮点数。 &lt;var&gt;divisor&lt;/var&gt; 也可以为 &lt;code&gt;nil&lt;/code&gt; 。如果 &lt;var&gt;divisor&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; 或被省略，则这些函数将 &lt;var&gt;number&lt;/var&gt; 转换为整数，如果已经是整数，则将其返回原样。如果 &lt;var&gt;divisor&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则将 &lt;var&gt;number&lt;/var&gt; 除以 &lt;var&gt;divisor&lt;/var&gt; 并将结果转换为整数。如果 &lt;var&gt;divisor&lt;/var&gt; 为零（无论是整数还是浮点数），Emacs都会 &lt;code&gt;arith-error&lt;/code&gt; 错误。</target>
        </trans-unit>
        <trans-unit id="d5eb98c61d7180e170b72be2864914198310f83f" translate="yes" xml:space="preserve">
          <source>There are four ways to specify text properties for text in the mode line:</source>
          <target state="translated">有四种方法可以为模式行中的文本指定文本属性。</target>
        </trans-unit>
        <trans-unit id="a9440ba34e5f80f815e1dc28e60b578e2e89b21b" translate="yes" xml:space="preserve">
          <source>There are many other, more specialized, maps than these; in particular those associated with major and minor modes. The minibuffer uses several keymaps (see &lt;a href=&quot;completion-commands#Completion-Commands&quot;&gt;Completion Commands&lt;/a&gt;). For more details on keymaps, see &lt;a href=&quot;keymaps#Keymaps&quot;&gt;Keymaps&lt;/a&gt;.</source>
          <target state="translated">除此以外，还有许多其他的，更专业的地图。特别是那些与主要和次要模式相关的内容。迷你缓冲区使用了几个键映射（请参阅&lt;a href=&quot;completion-commands#Completion-Commands&quot;&gt;Completion Commands&lt;/a&gt;）。有关键盘映射的更多详细信息，请参见&lt;a href=&quot;keymaps#Keymaps&quot;&gt;键盘映射&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="070b832c129cab1c873dac5bab08fc0bc798e588" translate="yes" xml:space="preserve">
          <source>There are many separate minibuffer history lists, used for different kinds of inputs. It&amp;rsquo;s the Lisp programmer&amp;rsquo;s job to specify the right history list for each use of the minibuffer.</source>
          <target state="translated">有许多单独的小型缓冲区历史记录列表，用于不同类型的输入。Lisp程序员的工作是为每次使用迷你缓冲区指定正确的历史记录列表。</target>
        </trans-unit>
        <trans-unit id="c0f9785866adf2557a41519a5ff551bf39a1bb80" translate="yes" xml:space="preserve">
          <source>There are no</source>
          <target state="translated">没有</target>
        </trans-unit>
        <trans-unit id="efbe79c18c70e6b3a0b9604c044c9cef2637dd78" translate="yes" xml:space="preserve">
          <source>There are other properties defined for the regions of text in a button, but these are not generally interesting for typical uses.</source>
          <target state="translated">对于按钮中的文本区域,还定义了其他属性,但这些属性对于典型的用途来说通常并不有趣。</target>
        </trans-unit>
        <trans-unit id="65617bc57347ff83b82a4dafdbca7965d572ddf3" translate="yes" xml:space="preserve">
          <source>There are other special conventions for the text in documentation strings&amp;mdash;for instance, you can refer to functions, variables, and sections of this manual. See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/elisp/Documentation-Tips.html#Documentation-Tips&quot;&gt;Documentation Tips&lt;/a&gt;, for details.</source>
          <target state="translated">文档字符串中的文本还有其他特殊约定，例如，您可以参考本手册的函数，变量和部分。有关详细信息，请参见&lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/elisp/Documentation-Tips.html#Documentation-Tips&quot;&gt;文档提示&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bc70e5c922e2e49cfaf793fd3312e885eaf9157f" translate="yes" xml:space="preserve">
          <source>There are several alternatives you can use for &lt;var&gt;link-data&lt;/var&gt;:</source>
          <target state="translated">有几种替代方法可用于 &lt;var&gt;link-data&lt;/var&gt; ：</target>
        </trans-unit>
        <trans-unit id="347f46b30b75f43e3e329a51b4f9f141a980e45a" translate="yes" xml:space="preserve">
          <source>There are several functions that take an existing completion table and return a modified version. &lt;code&gt;completion-table-case-fold&lt;/code&gt; returns a case-insensitive table. &lt;code&gt;completion-table-in-turn&lt;/code&gt; and &lt;code&gt;completion-table-merge&lt;/code&gt; combine multiple input tables in different ways. &lt;code&gt;completion-table-subvert&lt;/code&gt; alters a table to use a different initial prefix. &lt;code&gt;completion-table-with-quoting&lt;/code&gt; returns a table suitable for operating on quoted text. &lt;code&gt;completion-table-with-predicate&lt;/code&gt; filters a table with a predicate function. &lt;code&gt;completion-table-with-terminator&lt;/code&gt; adds a terminating string.</source>
          <target state="translated">有几个函数可以使用现有的完成表并返回修改后的版本。 &lt;code&gt;completion-table-case-fold&lt;/code&gt; 返回不区分大小写的表。 &lt;code&gt;completion-table-in-turn&lt;/code&gt; &lt;code&gt;completion-table-merge&lt;/code&gt; 和完成表合并以不同的方式组合多个输入表。 &lt;code&gt;completion-table-subvert&lt;/code&gt; 更改表以使用其他初始前缀。 &lt;code&gt;completion-table-with-quoting&lt;/code&gt; 返回一个适用于对带引号的文本进行操作的表。 &lt;code&gt;completion-table-with-predicate&lt;/code&gt; 过滤带有谓词功能的表。 &lt;code&gt;completion-table-with-terminator&lt;/code&gt; 添加一个终止字符串。</target>
        </trans-unit>
        <trans-unit id="c3c283f44ca32e55d1aeaa6c8ba479ebaa377c9c" translate="yes" xml:space="preserve">
          <source>There are several other variable name conventions; here is a complete list:</source>
          <target state="translated">还有一些其他的变量名称约定,这里是一个完整的列表。</target>
        </trans-unit>
        <trans-unit id="4bb1239b76f76c5a9f69f8e0a5f058db3c2c4c76" translate="yes" xml:space="preserve">
          <source>There are several variables that control how Font Lock mode highlights text. But major modes should not set any of these variables directly. Instead, they should set &lt;code&gt;font-lock-defaults&lt;/code&gt; as a buffer-local variable. The value assigned to this variable is used, if and when Font Lock mode is enabled, to set all the other variables.</source>
          <target state="translated">有几个变量控制&amp;ldquo;字体锁定&amp;rdquo;模式如何突出显示文本。但是主要模式不应直接设置任何这些变量。相反，他们应该将 &lt;code&gt;font-lock-defaults&lt;/code&gt; 设置为局部缓冲区变量。如果启用了字体锁定模式，则当分配字体变量模式时，将使用分配给该变量的值来设置所有其他变量。</target>
        </trans-unit>
        <trans-unit id="3520ae182a02058f69edf04f15fb6488c0fe5433" translate="yes" xml:space="preserve">
          <source>There are several ways to explicitly specify a larger line height, either by specifying an absolute height for the display line, or by specifying vertical space. However, no matter what you specify, the actual line height can never be less than the default.</source>
          <target state="translated">有几种方法可以明确指定更大的行高,可以指定显示行的绝对高度,也可以指定垂直空间。但是,无论您如何指定,实际的行高都不能低于默认值。</target>
        </trans-unit>
        <trans-unit id="81af9e15a9ba4c2165debde033a9a2d4638a848d" translate="yes" xml:space="preserve">
          <source>There are several ways to find and investigate problems in an Emacs Lisp program.</source>
          <target state="translated">有几种方法可以发现和调查Emacs Lisp程序中的问题。</target>
        </trans-unit>
        <trans-unit id="d3bcae2f3fa55ef2219d610a3700030045063687" translate="yes" xml:space="preserve">
          <source>There are situations in Lisp where you need to refer to the symbol itself rather than the value of that symbol. One such case is when temporarily overriding the value of a variable, which in Lisp is done with &lt;code&gt;let&lt;/code&gt;. In C sources, this is done by defining a corresponding, constant symbol, and using &lt;code&gt;specbind&lt;/code&gt;. By convention, &lt;code&gt;Qmy_lisp_variable&lt;/code&gt; corresponds to &lt;code&gt;Vmy_lisp_variable&lt;/code&gt;; to define it, use the &lt;code&gt;DEFSYM&lt;/code&gt; macro. i.e.</source>
          <target state="translated">在Lisp中，有些情况下您需要引用符号本身而不是该符号的值。一种这样的情况是当临时覆盖变量的值时，在Lisp中使用 &lt;code&gt;let&lt;/code&gt; 来完成。在C源代码中，这是通过定义相应的常量符号并使用 &lt;code&gt;specbind&lt;/code&gt; 来完成的。按照惯例， &lt;code&gt;Qmy_lisp_variable&lt;/code&gt; 对应于 &lt;code&gt;Vmy_lisp_variable&lt;/code&gt; ；要定义它，请使用 &lt;code&gt;DEFSYM&lt;/code&gt; 宏。即</target>
        </trans-unit>
        <trans-unit id="e4e5b0d0a58dbcdc60ba12438edd47d4ac5481c8" translate="yes" xml:space="preserve">
          <source>There are some file types where it is not appropriate to scan the file contents for a mode specifier. For example, a tar archive may happen to contain, near the end of the file, a member file that has a local variables section specifying a mode for that particular file. This should not be applied to the containing tar file. Similarly, a tiff image file might just happen to contain a first line that seems to match the &amp;lsquo;</source>
          <target state="translated">在某些文件类型中，不适合扫描文件内容以查找模式说明符。例如，一个tar归档文件可能恰好在文件结尾附近包含一个成员文件，该成员文件具有一个局部变量部分，用于指定该特定文件的模式。这不应应用于包含的tar文件。同样，tiff图片文件可能恰好包含似乎与&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="6ef12d2e37d1f84f04c09af5a59fb08332be34fe" translate="yes" xml:space="preserve">
          <source>There are some function definitions that &amp;lsquo;</source>
          <target state="translated">有一些函数定义</target>
        </trans-unit>
        <trans-unit id="b1fc61b0494cd0a88f92c4b058e0e7bfd5a21e24" translate="yes" xml:space="preserve">
          <source>There are special functions for producing a human-readable textual description of a character for the sake of messages. See &lt;a href=&quot;describing-characters#Describing-Characters&quot;&gt;Describing Characters&lt;/a&gt;.</source>
          <target state="translated">为了产生消息，有一些特殊的功能可以产生人类可读的字符文字描述。请参阅&lt;a href=&quot;describing-characters#Describing-Characters&quot;&gt;描述字符&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1e43a50b1dd052eabdd8e042e065f2a2ed9e7998" translate="yes" xml:space="preserve">
          <source>There are three kinds of basic values:</source>
          <target state="translated">基本价值观有三种。</target>
        </trans-unit>
        <trans-unit id="b0735adb37bfc41b867b231242a40734a3b00756" translate="yes" xml:space="preserve">
          <source>There are three possibilities for the argument &lt;var&gt;arg-descriptor&lt;/var&gt;:</source>
          <target state="translated">参数 &lt;var&gt;arg-descriptor&lt;/var&gt; 有三种可能性：</target>
        </trans-unit>
        <trans-unit id="4623fb4685bbf4280a4e141ad3eab869c9975673" translate="yes" xml:space="preserve">
          <source>There are three primitives that create a new subprocess in which to run a program. One of them, &lt;code&gt;make-process&lt;/code&gt;, creates an asynchronous process and returns a process object (see &lt;a href=&quot;asynchronous-processes#Asynchronous-Processes&quot;&gt;Asynchronous Processes&lt;/a&gt;). The other two, &lt;code&gt;call-process&lt;/code&gt; and &lt;code&gt;call-process-region&lt;/code&gt;, create a synchronous process and do not return a process object (see &lt;a href=&quot;synchronous-processes#Synchronous-Processes&quot;&gt;Synchronous Processes&lt;/a&gt;). There are various higher-level functions that make use of these primitives to run particular types of process.</source>
          <target state="translated">有三个基元创建一个新的子进程，以在其中运行程序。其中之一， &lt;code&gt;make-process&lt;/code&gt; ，创建一个异步过程并返回一个过程对象（请参见&lt;a href=&quot;asynchronous-processes#Asynchronous-Processes&quot;&gt;Asynchronous Processes&lt;/a&gt;）。另外两个 &lt;code&gt;call-process&lt;/code&gt; 和 &lt;code&gt;call-process-region&lt;/code&gt; 创建一个同步进程，并且不返回进程对象（请参见&lt;a href=&quot;synchronous-processes#Synchronous-Processes&quot;&gt;Synchronous Processes&lt;/a&gt;）。有许多使用这些原语来运行特定类型进程的高级功能。</target>
        </trans-unit>
        <trans-unit id="b6ce9698a02eeafb78037fc69ac4b447502a2398" translate="yes" xml:space="preserve">
          <source>There are three ways to do rehighlighting of multiline constructs:</source>
          <target state="translated">有三种方法可以对多线构造进行再亮化。</target>
        </trans-unit>
        <trans-unit id="b5ae132907f4eaeb3b141a67fe192bab8554dd75" translate="yes" xml:space="preserve">
          <source>There are three ways to ensure correct identification of multiline constructs:</source>
          <target state="translated">有三种方法可以确保正确识别多行构造。</target>
        </trans-unit>
        <trans-unit id="02b99159f172f34b42581153a35c9d9f6509e368" translate="yes" xml:space="preserve">
          <source>There are two classes of terminals: &lt;em&gt;text terminals&lt;/em&gt; and &lt;em&gt;graphical terminals&lt;/em&gt;. Text terminals are non-graphics-capable displays, including &lt;code&gt;xterm&lt;/code&gt; and other terminal emulators. On a text terminal, each Emacs frame occupies the terminal&amp;rsquo;s entire screen; although you can create additional frames and switch between them, the terminal only shows one frame at a time. Graphical terminals, on the other hand, are managed by graphical display systems such as the X Window System, which allow Emacs to show multiple frames simultaneously on the same display.</source>
          <target state="translated">终端有两类：&lt;em&gt;文本终端&lt;/em&gt;和&lt;em&gt;图形终端&lt;/em&gt;。文本终端是不支持图形的显示，包括 &lt;code&gt;xterm&lt;/code&gt; 和其他终端仿真器。在文本终端上，每个Emacs框架都占据终端的整个屏幕。尽管您可以创建其他框架并在它们之间进行切换，但是终端一次只能显示一帧。另一方面，图形终端由图形显示系统（例如X Window System）管理，该系统允许Emacs在同一显示器上同时显示多个帧。</target>
        </trans-unit>
        <trans-unit id="d56673e36ac18f4a7201d660191225c3ed023071" translate="yes" xml:space="preserve">
          <source>There are two convenience functions for defining tool bar items, as follows.</source>
          <target state="translated">有两个方便的功能用于定义工具栏项目,如下所示。</target>
        </trans-unit>
        <trans-unit id="6713d06d362550d2fbd6bf74a5f0fde6d2bcd0fb" translate="yes" xml:space="preserve">
          <source>There are two different methods for specifying directory local variables: by putting them in a special file, or by defining a &lt;em&gt;project class&lt;/em&gt; for that directory.</source>
          <target state="translated">有两种不同的方法可以指定目录局部变量：将它们放在一个特殊文件中，或者为该目录定义一个&lt;em&gt;项目类&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="7518b8878262b7af1f08215d0d225f13a54d4a54" translate="yes" xml:space="preserve">
          <source>There are two general categories of types in Emacs Lisp: those having to do with Lisp programming, and those having to do with editing. The former exist in many Lisp implementations, in one form or another. The latter are unique to Emacs Lisp.</source>
          <target state="translated">在Emacs Lisp中,一般有两类类型:一类是与Lisp编程有关的类型,另一类是与编辑有关的类型。前者存在于许多Lisp实现中,以这样或那样的形式存在。后者则是Emacs Lisp所独有的。</target>
        </trans-unit>
        <trans-unit id="7780ab4bb2fd4b095c1c281e2009b2a706663d9a" translate="yes" xml:space="preserve">
          <source>There are two kinds of input you can get from the keyboard: ordinary keys, and function keys. Ordinary keys correspond to (possibly modified) characters; the events they generate are represented in Lisp as characters. The event type of a &lt;em&gt;character event&lt;/em&gt; is the character itself (an integer), which might have some modifier bits set; see &lt;a href=&quot;classifying-events#Classifying-Events&quot;&gt;Classifying Events&lt;/a&gt;.</source>
          <target state="translated">您可以从键盘获得两种输入：普通键和功能键。普通键对应（可能已修改）字符；它们生成的事件在Lisp中用字符表示。&lt;em&gt;字符事件&lt;/em&gt;的事件类型是字符本身（整数），可能会设置一些修饰符位。请参阅&lt;a href=&quot;classifying-events#Classifying-Events&quot;&gt;分类事件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="39cd2bac89b7a8134e344d2a81de8082d54c9694" translate="yes" xml:space="preserve">
          <source>There are two representations of the prefix argument: &lt;em&gt;raw&lt;/em&gt; and &lt;em&gt;numeric&lt;/em&gt;. The editor command loop uses the raw representation internally, and so do the Lisp variables that store the information, but commands can request either representation.</source>
          <target state="translated">prefix参数有两种表示形式：&lt;em&gt;raw&lt;/em&gt;和&lt;em&gt;numeric&lt;/em&gt;。编辑器命令循环在内部使用原始表示形式，存储信息的Lisp变量也是如此，但是命令可以请求任一种表示形式。</target>
        </trans-unit>
        <trans-unit id="6bb6034776c4d0f21194c1e0588414124c802332" translate="yes" xml:space="preserve">
          <source>There are two text representations for non-</source>
          <target state="translated">有两种文字表述方式,用于非</target>
        </trans-unit>
        <trans-unit id="fae1a698eafa5dc42066049ce21dee7258f1165c" translate="yes" xml:space="preserve">
          <source>There are two ways that Emacs can make a backup file:</source>
          <target state="translated">Emacs有两种方法可以制作备份文件。</target>
        </trans-unit>
        <trans-unit id="e05d7168854ad68f1c0b5577b7d65f713b450bc4" translate="yes" xml:space="preserve">
          <source>There are two ways to drag an entire child frame with the mouse: The &lt;code&gt;drag-with-mode-line&lt;/code&gt; parameter, if non-&lt;code&gt;nil&lt;/code&gt;, allows to drag a frame without minibuffer window (see &lt;a href=&quot;minibuffer-windows#Minibuffer-Windows&quot;&gt;Minibuffer Windows&lt;/a&gt;) via the mode line area of its bottommost window. The &lt;code&gt;drag-with-header-line&lt;/code&gt; parameter, if non-&lt;code&gt;nil&lt;/code&gt;, allows to drag the frame via the header line area of its topmost window.</source>
          <target state="translated">有两种方法可以用鼠标拖动整个子框架： &lt;code&gt;drag-with-mode-line&lt;/code&gt; 参数，如果为非 &lt;code&gt;nil&lt;/code&gt; ，则允许通过其最底端的模式线区域拖动没有&lt;a href=&quot;minibuffer-windows#Minibuffer-Windows&quot;&gt;最小缓冲&lt;/a&gt;窗口的框架（请参见Minibuffer Windows）。窗口。该 &lt;code&gt;drag-with-header-line&lt;/code&gt; 参数，如果非 &lt;code&gt;nil&lt;/code&gt; ，允许通过它的最上层的窗口的标题行区域拖动该帧。</target>
        </trans-unit>
        <trans-unit id="febd79069dcce3d171b21ec2da044e27843c284f" translate="yes" xml:space="preserve">
          <source>There are two ways to get out of Emacs: you can kill the Emacs job, which exits permanently, or you can suspend it, which permits you to reenter the Emacs process later. (In a graphical environment, you can of course simply switch to another application without doing anything special to Emacs, then switch back to Emacs when you want.)</source>
          <target state="translated">有两种方法可以退出Emacs:你可以杀死Emacs作业,永久退出,或者你可以暂停它,允许你以后重新进入Emacs进程。(在图形环境中,你当然可以简单地切换到另一个应用程序,而不对Emacs做任何特别的事情,然后在你想的时候切换回Emacs)。</target>
        </trans-unit>
        <trans-unit id="91babbeb975fdf773c24f538fb1cfc649a409b06" translate="yes" xml:space="preserve">
          <source>There are two ways to set up an autoloaded function: by calling &lt;code&gt;autoload&lt;/code&gt;, and by writing a &amp;ldquo;magic&amp;rdquo; comment in the source before the real definition. &lt;code&gt;autoload&lt;/code&gt; is the low-level primitive for autoloading; any Lisp program can call &lt;code&gt;autoload&lt;/code&gt; at any time. Magic comments are the most convenient way to make a function autoload, for packages installed along with Emacs. These comments do nothing on their own, but they serve as a guide for the command &lt;code&gt;update-file-autoloads&lt;/code&gt;, which constructs calls to &lt;code&gt;autoload&lt;/code&gt; and arranges to execute them when Emacs is built.</source>
          <target state="translated">设置自动加载功能的方法有两种：通过调用 &lt;code&gt;autoload&lt;/code&gt; ，以及在实际定义之前在源代码中写入&amp;ldquo;魔术&amp;rdquo;注释。 &lt;code&gt;autoload&lt;/code&gt; 是用于自动加载的底层原语；任何Lisp程序都可以随时调用 &lt;code&gt;autoload&lt;/code&gt; 。对于与Emacs一起安装的软件包，魔术注释是使函数自动加载的最便捷方法。这些注释不能单独执行任何操作，但它们可作为 &lt;code&gt;update-file-autoloads&lt;/code&gt; 命令的指南，该命令构造对 &lt;code&gt;autoload&lt;/code&gt; 的调用，并安排在构建Emacs时执行它们。</target>
        </trans-unit>
        <trans-unit id="b5a24f5d6edcb58050debdd5416633f2a78ff230" translate="yes" xml:space="preserve">
          <source>There are various defaults for how to blink each type of cursor, if the type is not mentioned as an &lt;var&gt;on-state&lt;/var&gt; here. Changes in this variable do not take effect immediately, only when you specify the &lt;code&gt;cursor-type&lt;/code&gt; frame parameter.</source>
          <target state="translated">如果未 &lt;var&gt;on-state&lt;/var&gt; 此处将其称为打开状态，则如何闪烁每种类型的光标有多种默认设置。仅当您指定 &lt;code&gt;cursor-type&lt;/code&gt; frame参数时，此变量的更改才会立即生效。</target>
        </trans-unit>
        <trans-unit id="fa4758fd3e7817469e8d029cea8975d505254e6e" translate="yes" xml:space="preserve">
          <source>There are, however, a few exceptions: it is ok to use a limited set of expressions such as &lt;code&gt;(point)&lt;/code&gt;, &lt;code&gt;(mark)&lt;/code&gt;, &lt;code&gt;(region-beginning)&lt;/code&gt;, and &lt;code&gt;(region-end)&lt;/code&gt;, because Emacs recognizes them specially and puts the expression (rather than its value) into the command history. To see whether the expression you wrote is one of these exceptions, run the command, then examine &lt;code&gt;(car command-history)&lt;/code&gt;.</source>
          <target state="translated">但是，也有一些例外：可以使用一组有限的表达式，例如 &lt;code&gt;(point)&lt;/code&gt; ， &lt;code&gt;(mark)&lt;/code&gt; ， &lt;code&gt;(region-beginning)&lt;/code&gt; 和 &lt;code&gt;(region-end)&lt;/code&gt; ，因为Emacs会特别识别它们并将其放在表达式（而不是其值）添加到命令历史记录中。要查看您编写的表达式是否是这些异常之一，请运行命令，然后检查 &lt;code&gt;(car command-history)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7e9c7cb18529ed6dcc3960b26faa66bf4ad86d08" translate="yes" xml:space="preserve">
          <source>There are, in general, many buffers in an Emacs session. At any time, one of them is designated the &lt;em&gt;current buffer&lt;/em&gt;&amp;mdash;the buffer in which most editing takes place. Most of the primitives for examining or changing text operate implicitly on the current buffer (see &lt;a href=&quot;text#Text&quot;&gt;Text&lt;/a&gt;).</source>
          <target state="translated">通常，Emacs会话中有许多缓冲区。在任何时候，其中一个被指定为&lt;em&gt;当前&lt;/em&gt;缓冲区，即其中进行大多数编辑的缓冲区。用于检查或更改文本的大多数原语都在当前缓冲区上隐式操作（请参见&lt;a href=&quot;text#Text&quot;&gt;Text&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="ca315d80cf52d85dc191f8a4e11596e3728e557e" translate="yes" xml:space="preserve">
          <source>There can be at most one active notification at any given time. An active notification must be removed by calling &lt;code&gt;w32-notification-close&lt;/code&gt; before a new one can be shown.</source>
          <target state="translated">在任何给定时间最多可以有一个活动通知。在显示新 &lt;code&gt;w32-notification-close&lt;/code&gt; 之前，必须通过调用w32-notification-close删除活动通知。</target>
        </trans-unit>
        <trans-unit id="652594e6285d683eae8a6b2aac6731460c3a8258" translate="yes" xml:space="preserve">
          <source>There is a name parallel between GnuTLS MAC and digest algorithms but they are separate things internally and should not be mixed.</source>
          <target state="translated">GnuTLS的MAC和digest算法之间有一个平行的名字,但它们内部是分开的东西,不应该混合。</target>
        </trans-unit>
        <trans-unit id="e2aa5cf61b46410aac7def0b532cc1292ff7a176" translate="yes" xml:space="preserve">
          <source>There is also a separate global mark ring, but that is used only in a few particular user-level commands, and is not relevant to Lisp programming. So we do not describe it here.</source>
          <target state="translated">还有一个单独的全局标记环,但它只在一些特殊的用户级命令中使用,与Lisp编程无关。所以我们在这里不对其进行描述。</target>
        </trans-unit>
        <trans-unit id="5a1a9835b2deb5ae2be8528a446fb5a8f8bfc3a8" translate="yes" xml:space="preserve">
          <source>There is an anomalous case where newly inserted text at &lt;var&gt;pos&lt;/var&gt; would not inherit the &lt;code&gt;field&lt;/code&gt; property from either side. This happens if the previous character&amp;rsquo;s &lt;code&gt;field&lt;/code&gt; property is not rear-sticky, and the following character&amp;rsquo;s &lt;code&gt;field&lt;/code&gt; property is not front-sticky. In this case, &lt;var&gt;pos&lt;/var&gt; belongs to neither the preceding field nor the following field; the field functions treat it as belonging to an empty field whose beginning and end are both at &lt;var&gt;pos&lt;/var&gt;.</source>
          <target state="translated">有一种异常情况，即在 &lt;var&gt;pos&lt;/var&gt; 处新插入的文本不会从任何一侧继承 &lt;code&gt;field&lt;/code&gt; 属性。如果发生这种情况前一个字符的 &lt;code&gt;field&lt;/code&gt; 属性不是后发粘，以下字符的 &lt;code&gt;field&lt;/code&gt; 属性不前粘性。在这种情况下， &lt;var&gt;pos&lt;/var&gt; 既不属于前面的字段也不属于后面的字段；field函数将其视为属于一个空字段，该字段的开始和结束均在 &lt;var&gt;pos&lt;/var&gt; 处。</target>
        </trans-unit>
        <trans-unit id="99608075f31379d3731857fc93b7b4b2ed2139ed" translate="yes" xml:space="preserve">
          <source>There is another wrinkle: because floating-point arithmetic is not exact, it is often a bad idea to check for equality of floating-point values. Usually it is better to test for approximate equality. Here&amp;rsquo;s a function to do this:</source>
          <target state="translated">还有另一个难题：由于浮点算法不精确，因此检查浮点值的相等性通常是一个坏主意。通常，最好测试近似相等性。这是执行此操作的功能：</target>
        </trans-unit>
        <trans-unit id="4c243b81e8c9962816c02c71e3fa1f5cc7d86fbe" translate="yes" xml:space="preserve">
          <source>There is just one situation where you should specify a string for an &lt;var&gt;initial&lt;/var&gt; argument. This is when you specify a cons cell for the &lt;var&gt;history&lt;/var&gt; argument. See &lt;a href=&quot;minibuffer-history#Minibuffer-History&quot;&gt;Minibuffer History&lt;/a&gt;.</source>
          <target state="translated">在一种情况下，您应该为 &lt;var&gt;initial&lt;/var&gt; 参数指定一个字符串。这是当您为 &lt;var&gt;history&lt;/var&gt; 参数指定一个cons单元时。请参阅&lt;a href=&quot;minibuffer-history#Minibuffer-History&quot;&gt;最小缓冲区历史记录&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a125144ca4e988b17612eceb6ec0c03776798e3a" translate="yes" xml:space="preserve">
          <source>There is no argument to specify the length of the char-table, because all char-tables have room for any valid character code as an index.</source>
          <target state="translated">没有参数来指定char-table的长度,因为所有的char-table都可以容纳任何有效的字符代码作为索引。</target>
        </trans-unit>
        <trans-unit id="370afa4bae6026ef7ed6e7018648381f30f86233" translate="yes" xml:space="preserve">
          <source>There is no limit on the number of iterations that may occur. The loop will continue until either &lt;var&gt;condition&lt;/var&gt; evaluates to &lt;code&gt;nil&lt;/code&gt; or until an error or &lt;code&gt;throw&lt;/code&gt; jumps out of it (see &lt;a href=&quot;nonlocal-exits#Nonlocal-Exits&quot;&gt;Nonlocal Exits&lt;/a&gt;).</source>
          <target state="translated">对可能发生的迭代次数没有限制。循环将继续，直到任一 &lt;var&gt;condition&lt;/var&gt; 计算结果为 &lt;code&gt;nil&lt;/code&gt; 或直到出现错误或 &lt;code&gt;throw&lt;/code&gt; 异常为止（请参见&lt;a href=&quot;nonlocal-exits#Nonlocal-Exits&quot;&gt;Nonlocal Exits&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="2001784aa80f2afa0294b2cfd6bb448a06d77ba1" translate="yes" xml:space="preserve">
          <source>There is no primitive for creating terminal objects. Emacs creates them as needed, such as when you call &lt;code&gt;make-frame-on-display&lt;/code&gt; (described below).</source>
          <target state="translated">没有用于创建终端对象的原语。Emacs根据需要创建它们，例如，当您调用 &lt;code&gt;make-frame-on-display&lt;/code&gt; （如下所述）。</target>
        </trans-unit>
        <trans-unit id="ea7a53ff8f70c9f430428c9728e618d3bde5ce69" translate="yes" xml:space="preserve">
          <source>There is no special function to access default values in a char-table. To do that, use &lt;code&gt;char-table-range&lt;/code&gt; (see below).</source>
          <target state="translated">没有特殊功能可访问字符表中的默认值。为此，请使用 &lt;code&gt;char-table-range&lt;/code&gt; （请参见下文）。</target>
        </trans-unit>
        <trans-unit id="a5fad7ed1e8c3ad9f09e3903d9b1c444ed47bb43" translate="yes" xml:space="preserve">
          <source>There is no way to have required arguments following optional ones&amp;mdash;it would not make sense. To see why this must be so, suppose that &lt;code&gt;c&lt;/code&gt; in the example were optional and &lt;code&gt;d&lt;/code&gt; were required. Suppose three actual arguments are given; which variable would the third argument be for? Would it be used for the &lt;var&gt;c&lt;/var&gt;, or for &lt;var&gt;d&lt;/var&gt;? One can argue for both possibilities. Similarly, it makes no sense to have any more arguments (either required or optional) after a &lt;code&gt;&amp;amp;rest&lt;/code&gt; argument.</source>
          <target state="translated">没有办法在可选参数后面加上必需的参数，这是没有意义的。为了了解为什么必须这样做，假设示例中的 &lt;code&gt;c&lt;/code&gt; 是可选的，而 &lt;code&gt;d&lt;/code&gt; 是必需的。假设给出了三个实际参数；第三个参数适用于哪个变量？是用于 &lt;var&gt;c&lt;/var&gt; 还是用于 &lt;var&gt;d&lt;/var&gt; ？可以为这两种可能性争论不休。同样，在 &lt;code&gt;&amp;amp;rest&lt;/code&gt; 参数后再有其他参数（必需或可选）是没有意义的。</target>
        </trans-unit>
        <trans-unit id="c3e4e82ed3441b855ea25aedc8368e992146a44d" translate="yes" xml:space="preserve">
          <source>There is no way to share structure between two hash tables, the way two alists can share a common tail.</source>
          <target state="translated">没有办法在两个哈希表之间共享结构,就像两个alists可以共享一个共同的尾巴一样。</target>
        </trans-unit>
        <trans-unit id="8e7bc00f4cbe042c39601255bf67d8ad682c7e42" translate="yes" xml:space="preserve">
          <source>There is no way to specify two different buttons with different actions.</source>
          <target state="translated">没有办法指定两个不同动作的按钮。</target>
        </trans-unit>
        <trans-unit id="61dd589ffa94add83c99de7478c67bd1bb20c561" translate="yes" xml:space="preserve">
          <source>There is one exception: if the value of &lt;var&gt;symbol&lt;/var&gt; is a string, it is displayed verbatim: the &lt;code&gt;%&lt;/code&gt;-constructs are not recognized.</source>
          <target state="translated">有一个例外：如果 &lt;var&gt;symbol&lt;/var&gt; 的值为字符串，则逐字显示：无法识别 &lt;code&gt;%&lt;/code&gt; -constructs。</target>
        </trans-unit>
        <trans-unit id="bc8d78c4efd733708bc3daa467d344b184d4f9d7" translate="yes" xml:space="preserve">
          <source>There should be no newlines in any of these strings.</source>
          <target state="translated">这些字符串中都不应该有换行符。</target>
        </trans-unit>
        <trans-unit id="236a32def63c3e13f6b88accb492b3b35fcd5746" translate="yes" xml:space="preserve">
          <source>Therefore,</source>
          <target state="translated">Therefore,</target>
        </trans-unit>
        <trans-unit id="4a5ccb0d8538fcc42f2c57dd7658bc1aa97f78f2" translate="yes" xml:space="preserve">
          <source>Therefore, avoid binding a variable more than once in a single &lt;code&gt;let&lt;/code&gt; form.</source>
          <target state="translated">因此，避免以单个 &lt;code&gt;let&lt;/code&gt; 形式多次绑定变量。</target>
        </trans-unit>
        <trans-unit id="3f0c4931ff9ec7321b627fb38158d861e1342e80" translate="yes" xml:space="preserve">
          <source>Therefore, we recommend that your module functions check for nonlocal exit conditions and recover from them, using the functions described below.</source>
          <target state="translated">因此,我们建议您的模块函数使用下面描述的函数来检查非本地退出条件并从中恢复。</target>
        </trans-unit>
        <trans-unit id="acdd2f9e8b919a1eaea822bd88c17593f336892c" translate="yes" xml:space="preserve">
          <source>Therefore, with an asynchronous subprocess, if at all possible, use a coding system which determines both the character code conversion and the end of line conversion&amp;mdash;that is, one like &lt;code&gt;latin-1-unix&lt;/code&gt;, rather than &lt;code&gt;undecided&lt;/code&gt; or &lt;code&gt;latin-1&lt;/code&gt;.</source>
          <target state="translated">因此，对于异步子过程，如果可能的话，请使用既确定字符代码转换又确定行尾转换的编码系统，即像 &lt;code&gt;latin-1-unix&lt;/code&gt; 这样的代码，而不是 &lt;code&gt;undecided&lt;/code&gt; 或 &lt;code&gt;latin-1&lt;/code&gt; 的代码。</target>
        </trans-unit>
        <trans-unit id="75c7cc98cf6082a937f2f125bb7ef9641a0a7f04" translate="yes" xml:space="preserve">
          <source>Therefore, you must define an Edebug specification for each macro that Edebug will encounter, to explain the format of calls to that macro. To do this, add a &lt;code&gt;debug&lt;/code&gt; declaration to the macro definition. Here is a simple example that shows the specification for the &lt;code&gt;for&lt;/code&gt; example macro (see &lt;a href=&quot;argument-evaluation#Argument-Evaluation&quot;&gt;Argument Evaluation&lt;/a&gt;).</source>
          <target state="translated">因此，您必须为Edebug会遇到的每个宏定义一个Edebug规范，以说明对该宏的调用格式。为此，将 &lt;code&gt;debug&lt;/code&gt; 声明添加到宏定义。下面是一个简单的例子，示出了对于本说明书中 &lt;code&gt;for&lt;/code&gt; 示例宏（见&lt;a href=&quot;argument-evaluation#Argument-Evaluation&quot;&gt;论证评价&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="49ef1a726d3cde715758037bc20ad098d7916e7d" translate="yes" xml:space="preserve">
          <source>Therefore, you should avoid side effects in computation of the macro expansion, unless you really know what you are doing.</source>
          <target state="translated">因此,你应该避免在计算宏观扩张的副作用,除非你真的知道你在做什么。</target>
        </trans-unit>
        <trans-unit id="2acdaf6815658bc6863a95aee2b071c2d08ae394" translate="yes" xml:space="preserve">
          <source>These &lt;em&gt;adjustments&lt;/em&gt; of point that ended up in the middle of invisible text can be disabled by setting &lt;code&gt;disable-point-adjustment&lt;/code&gt; to a non-&lt;code&gt;nil&lt;/code&gt; value. See &lt;a href=&quot;adjusting-point#Adjusting-Point&quot;&gt;Adjusting Point&lt;/a&gt;.</source>
          <target state="translated">，这些&lt;em&gt;调整&lt;/em&gt;，在看不见的文字中间结束点可以通过设置禁用 &lt;code&gt;disable-point-adjustment&lt;/code&gt; 到非 &lt;code&gt;nil&lt;/code&gt; 值。请参阅&lt;a href=&quot;adjusting-point#Adjusting-Point&quot;&gt;调整点&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a8564c8c52bb26dff06c342dbcb38aa25ab8d1b9" translate="yes" xml:space="preserve">
          <source>These Edebug commands let you view aspects of the buffer and window status as they were before entry to Edebug. The outside window configuration is the collection of windows and contents that were in effect outside of Edebug.</source>
          <target state="translated">这些Edebug命令可以让你在进入Edebug之前查看缓冲区和窗口状态的各个方面。外部窗口配置是在Edebug之外生效的窗口和内容的集合。</target>
        </trans-unit>
        <trans-unit id="6453b0933bfa540398285ce050210e845ff2ceb3" translate="yes" xml:space="preserve">
          <source>These add a new node encapsulating &lt;var&gt;data&lt;/var&gt;, adding it to &lt;var&gt;ewoc&lt;/var&gt; before or after &lt;var&gt;node&lt;/var&gt;, respectively.</source>
          <target state="translated">它们添加了一个封装 &lt;var&gt;data&lt;/var&gt; 的新节点，分别将其添加到 &lt;var&gt;ewoc&lt;/var&gt; 之前或之后的 &lt;var&gt;node&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="cceb809aac53f3844ad4768044a343487be9a561" translate="yes" xml:space="preserve">
          <source>These add a new node encapsulating &lt;var&gt;data&lt;/var&gt;, putting it, respectively, at the beginning or end of &lt;var&gt;ewoc&lt;/var&gt;&amp;rsquo;s chain of nodes.</source>
          <target state="translated">这些添加了一个封装 &lt;var&gt;data&lt;/var&gt; 的新节点，并将其分别放置在 &lt;var&gt;ewoc&lt;/var&gt; 的节点链的开始或结尾。</target>
        </trans-unit>
        <trans-unit id="9ab0fb39b092432c876efaa650e2a9f9b04d1bbe" translate="yes" xml:space="preserve">
          <source>These additional functions are useful for creating and operating on network connections. Note that they are supported only on some systems.</source>
          <target state="translated">这些附加功能对创建和操作网络连接很有用。请注意,这些功能只在某些系统上得到支持。</target>
        </trans-unit>
        <trans-unit id="2c532782eb32e3923cdfc2475afae8a2de94759f" translate="yes" xml:space="preserve">
          <source>These all match the empty string, but only in specific places.</source>
          <target state="translated">这些都符合空字符串,但只在特定的地方。</target>
        </trans-unit>
        <trans-unit id="f41713a72eb6ace454547fa2e43e197443fe335c" translate="yes" xml:space="preserve">
          <source>These are &lt;em&gt;non-greedy&lt;/em&gt; variants of the operators &amp;lsquo;</source>
          <target state="translated">这些是运营商的&lt;em&gt;非贪婪&lt;/em&gt;变体</target>
        </trans-unit>
        <trans-unit id="05a64b60dec8513fc7fc45aa9b2b7f8fcbfea952" translate="yes" xml:space="preserve">
          <source>These are commands and functions for locating and operating on buttons in an Emacs buffer.</source>
          <target state="translated">这些命令和功能用于定位和操作Emacs缓冲区中的按钮。</target>
        </trans-unit>
        <trans-unit id="a25be8cdc54fda5fa4fb98a074855d8423e41aea" translate="yes" xml:space="preserve">
          <source>These are functions for getting and setting properties of buttons. Often these are used by a button&amp;rsquo;s invocation function to determine what to do.</source>
          <target state="translated">这些是获取和设置按钮属性的功能。通常，按钮的调用功能会使用这些参数来确定要执行的操作。</target>
        </trans-unit>
        <trans-unit id="d1b514a069d836860d7af7a1feabca32dc715f0b" translate="yes" xml:space="preserve">
          <source>These are handled by &lt;code&gt;serial-process-configure&lt;/code&gt;, which is called by &lt;code&gt;make-serial-process&lt;/code&gt;.</source>
          <target state="translated">这些由 &lt;code&gt;serial-process-configure&lt;/code&gt; 处理，由 &lt;code&gt;make-serial-process&lt;/code&gt; 调用。</target>
        </trans-unit>
        <trans-unit id="43e0a28142decb2dd4f625cb10b5b79d2323f33c" translate="yes" xml:space="preserve">
          <source>These are not all the keymaps you would see in actuality.</source>
          <target state="translated">这些并不是你在实际中看到的所有钥匙图。</target>
        </trans-unit>
        <trans-unit id="bea269feb73538722101398f683861482dfa4553" translate="yes" xml:space="preserve">
          <source>These are the actual column and row coordinate numbers of the glyph under the &lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt; position. If &lt;var&gt;x&lt;/var&gt; lies beyond the last column of actual text on its line, &lt;var&gt;col&lt;/var&gt; is reported by adding fictional extra columns that have the default character width. Row 0 is taken to be the header line if the window has one, or Row 1 if the window also has the tab line, or the topmost row of the text area otherwise. Column 0 is taken to be the leftmost column of the text area for clicks on a window text area, or the leftmost mode line or header line column for clicks there. For clicks on fringes or vertical borders, these have no meaningful data. For clicks on margins, &lt;var&gt;col&lt;/var&gt; is measured from the left edge of the margin area and &lt;var&gt;row&lt;/var&gt; is measured from the top of the margin area.</source>
          <target state="translated">这些是字形在 &lt;var&gt;x&lt;/var&gt; ， &lt;var&gt;y&lt;/var&gt; 位置下的实际列和行坐标号。如果 &lt;var&gt;x&lt;/var&gt; 超出其行上实际文本的最后一列，则通过添加具有默认字符宽度的虚构额外列来报告 &lt;var&gt;col&lt;/var&gt; 。如果窗口有一个行，则将第0行作为标题行；如果窗口也有制表符行，则将第1行视为标题行；否则，将文本行的最上一行作为行标题。列0视为在窗口文本区域上单击的文本区域的最左列，或在此单击的最左侧模式行或标题行的列。对于条纹或垂直边框的单击，这些没有有意义的数据。对于点击边距， &lt;var&gt;col&lt;/var&gt; 是从边距区域的左边缘测量的， &lt;var&gt;row&lt;/var&gt; 从边缘区域的顶部开始测量行。</target>
        </trans-unit>
        <trans-unit id="b6710b3c7596b8062fe07c6ef077774336111b3b" translate="yes" xml:space="preserve">
          <source>These are the basic trigonometric functions, with argument &lt;var&gt;arg&lt;/var&gt; measured in radians.</source>
          <target state="translated">这些是基本的三角函数，参数 &lt;var&gt;arg&lt;/var&gt; 以弧度表示。</target>
        </trans-unit>
        <trans-unit id="3156ee651cfae432e445cac09c15634298d44340" translate="yes" xml:space="preserve">
          <source>These are the pixel coordinates of the click, relative to the top left corner of &lt;var&gt;object&lt;/var&gt;, which is &lt;code&gt;(0 . 0)&lt;/code&gt;. If &lt;var&gt;object&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, which stands for a buffer, the coordinates are relative to the top left corner of the character glyph clicked on.</source>
          <target state="translated">这些是相对于 &lt;var&gt;object&lt;/var&gt; 左上角的单击的像素坐标，即 &lt;code&gt;(0 . 0)&lt;/code&gt; 。如果 &lt;var&gt;object&lt;/var&gt; 是 &lt;code&gt;nil&lt;/code&gt; ，代表缓冲区，则坐标是相对于单击的字符字形的左上角。</target>
        </trans-unit>
        <trans-unit id="44037f1bfc96fc4c3fcece5a2260c354838848ef" translate="yes" xml:space="preserve">
          <source>These are the pixel width and height of &lt;var&gt;object&lt;/var&gt; or, if this is &lt;code&gt;nil&lt;/code&gt;, those of the character glyph clicked on.</source>
          <target state="translated">这些是 &lt;var&gt;object&lt;/var&gt; 的像素宽度和高度，如果为 &lt;code&gt;nil&lt;/code&gt; ，则为单击的字符字形的像素宽度和高度。</target>
        </trans-unit>
        <trans-unit id="aaa95e66e38549b3b4cfab7bd5de76818d93641c" translate="yes" xml:space="preserve">
          <source>These are the primitive functions for searching through the text in a buffer. They are meant for use in programs, but you may call them interactively. If you do so, they prompt for the search string; the arguments &lt;var&gt;limit&lt;/var&gt; and &lt;var&gt;noerror&lt;/var&gt; are &lt;code&gt;nil&lt;/code&gt;, and &lt;var&gt;repeat&lt;/var&gt; is 1. For more details on interactive searching, see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Search.html#Search&quot;&gt;Searching and Replacement&lt;/a&gt; in</source>
          <target state="translated">这些是用于在缓冲区中搜索文本的原始函数。它们仅用于程序中，但您可以以交互方式调用它们。如果这样做，他们会提示您输入搜索字符串；否则，将提示您输入搜索字符串。参数 &lt;var&gt;limit&lt;/var&gt; 和 &lt;var&gt;noerror&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ， &lt;var&gt;repeat&lt;/var&gt; 为1。有关交互式搜索的更多详细信息，请参见中的&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Search.html#Search&quot;&gt;搜索和替换&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a8f6ecbf809bb173225aa25ef24cd83076b55357" translate="yes" xml:space="preserve">
          <source>These are the values for &lt;code&gt;print-length&lt;/code&gt; and &lt;code&gt;print-level&lt;/code&gt; used by &lt;code&gt;eval-expression&lt;/code&gt;, and thus, indirectly, by many interactive evaluation commands (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Lisp-Eval.html#Lisp-Eval&quot;&gt;Evaluating Emacs-Lisp Expressions&lt;/a&gt; in</source>
          <target state="translated">这些都为值 &lt;code&gt;print-length&lt;/code&gt; 和 &lt;code&gt;print-level&lt;/code&gt; 通过使用 &lt;code&gt;eval-expression&lt;/code&gt; ，并且因此，间接地通过许多交互式评估命令（见&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Lisp-Eval.html#Lisp-Eval&quot;&gt;评价的Emacs Lisp的表达&lt;/a&gt;在</target>
        </trans-unit>
        <trans-unit id="16da5f24988d3dc8397faf47e6b65dae11be9561" translate="yes" xml:space="preserve">
          <source>These commands find the file that ought to contain a function&amp;rsquo;s definition using &lt;code&gt;locate-library&lt;/code&gt;; if that finds no file, they expand the definition file name relative to the directory of the file that contains the &lt;code&gt;declare-function&lt;/code&gt; call.</source>
          <target state="translated">这些命令使用 &lt;code&gt;locate-library&lt;/code&gt; 查找应该包含函数定义的文件；如果找不到文件，则它们将相对于包含&amp;ldquo; &lt;code&gt;declare-function&lt;/code&gt; 调用的文件目录扩展定义文件名。</target>
        </trans-unit>
        <trans-unit id="9610813d55354bbe4e5030f270dfa5ba887ef1c1" translate="yes" xml:space="preserve">
          <source>These commands may fail to work as expected in case of nonlocal exit, as that can bypass the temporary breakpoint where you expected the program to stop.</source>
          <target state="translated">在非本地退出的情况下,这些命令可能无法像预期的那样工作,因为这会绕过你期望程序停止的临时断点。</target>
        </trans-unit>
        <trans-unit id="652e15cb81b20860fa9afbd7456c6600d4924dc7" translate="yes" xml:space="preserve">
          <source>These commands, primarily for interactive use, act based on the indentation in the text.</source>
          <target state="translated">这些命令主要用于交互式使用,根据文本中的缩进进行操作。</target>
        </trans-unit>
        <trans-unit id="9afc92acf428ab9dda92d38a5fa15921e29d7751" translate="yes" xml:space="preserve">
          <source>These constants are fundamentally different from the constants defined using the &lt;code&gt;defconst&lt;/code&gt; special form (see &lt;a href=&quot;defining-variables#Defining-Variables&quot;&gt;Defining Variables&lt;/a&gt;). A &lt;code&gt;defconst&lt;/code&gt; form serves to inform human readers that you do not intend to change the value of a variable, but Emacs does not raise an error if you actually change it.</source>
          <target state="translated">这些常量从根本上不同于使用 &lt;code&gt;defconst&lt;/code&gt; 特殊形式定义的常量（请参见&lt;a href=&quot;defining-variables#Defining-Variables&quot;&gt;定义变量&lt;/a&gt;）。一个 &lt;code&gt;defconst&lt;/code&gt; 形式旨在告知人类的读者，你不打算改变一个变量的值，但如果你真的改变它的Emacs不会引发错误。</target>
        </trans-unit>
        <trans-unit id="f9e556f07147f8ec31bdf6d5c6a298d8b46cf7c9" translate="yes" xml:space="preserve">
          <source>These definitions also act as guides for programming tools. For example, the</source>
          <target state="translated">这些定义还可以作为编程工具的指南。例如</target>
        </trans-unit>
        <trans-unit id="8a8338c7500ec00a26cdd8a7454fff6a72f07f61" translate="yes" xml:space="preserve">
          <source>These escape sequences may also be used in strings. See &lt;a href=&quot;non_002dascii-in-strings#Non_002dASCII-in-Strings&quot;&gt;Non-ASCII in Strings&lt;/a&gt;.</source>
          <target state="translated">这些转义序列也可以在字符串中使用。请参阅&lt;a href=&quot;non_002dascii-in-strings#Non_002dASCII-in-Strings&quot;&gt;字符串中的非ASCII&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1fe77a489c5367bea12d3ad180626352917c22f7" translate="yes" xml:space="preserve">
          <source>These events are generated when the Emacs process receives the signals &lt;code&gt;SIGUSR1&lt;/code&gt; and &lt;code&gt;SIGUSR2&lt;/code&gt;. They contain no additional data because signals do not carry additional information. They can be useful for debugging (see &lt;a href=&quot;error-debugging#Error-Debugging&quot;&gt;Error Debugging&lt;/a&gt;).</source>
          <target state="translated">当Emacs进程接收到信号 &lt;code&gt;SIGUSR1&lt;/code&gt; 和 &lt;code&gt;SIGUSR2&lt;/code&gt; 时，将生成这些事件。它们不包含其他数据，因为信号不携带其他信息。它们对于调试很有用（请参阅&lt;a href=&quot;error-debugging#Error-Debugging&quot;&gt;错误调试&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="4ed1d20ada108250ff1fdf53243d88eb2ca0e4bb" translate="yes" xml:space="preserve">
          <source>These examples show typical uses of &lt;code&gt;error&lt;/code&gt;:</source>
          <target state="translated">这些示例显示了 &lt;code&gt;error&lt;/code&gt; 的典型用法：</target>
        </trans-unit>
        <trans-unit id="7371eee8b69413ed2418406d7a6e8607e5619fd4" translate="yes" xml:space="preserve">
          <source>These facilities provide information about which version of Emacs is in use.</source>
          <target state="translated">这些设施提供了关于Emacs正在使用的版本的信息。</target>
        </trans-unit>
        <trans-unit id="5307fb7809a0088f52c378521717d0b834ea65f4" translate="yes" xml:space="preserve">
          <source>These features permit you to write code to be evaluated during compilation of a program.</source>
          <target state="translated">这些功能允许你在编译程序的过程中编写代码进行评估。</target>
        </trans-unit>
        <trans-unit id="64695ab218480c1570234a3c90fd0da8fa46b8eb" translate="yes" xml:space="preserve">
          <source>These fields are only used in an indirect buffer, or in a buffer that is the base of an indirect buffer. Each holds a marker that records &lt;code&gt;pt&lt;/code&gt;, &lt;code&gt;begv&lt;/code&gt;, and &lt;code&gt;zv&lt;/code&gt; respectively, for this buffer when the buffer is not current.</source>
          <target state="translated">这些字段仅在间接缓冲区或作为间接缓冲区基础的缓冲区中使用。每个缓冲区中都有一个标记，分别在该缓冲区不是当前缓冲区时记录该缓冲区的 &lt;code&gt;pt&lt;/code&gt; ， &lt;code&gt;begv&lt;/code&gt; 和 &lt;code&gt;zv&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="32273c814e3a6d721ce29c67960251f2a5c93194" translate="yes" xml:space="preserve">
          <source>These fields count the number of buffer-modification events performed in this buffer. &lt;code&gt;modiff&lt;/code&gt; is incremented after each buffer-modification event, and is never otherwise changed; &lt;code&gt;save_modiff&lt;/code&gt; contains the value of &lt;code&gt;modiff&lt;/code&gt; the last time the buffer was visited or saved; &lt;code&gt;chars_modiff&lt;/code&gt; counts only modifications to the characters in the buffer, ignoring all other kinds of changes (such as text properties); and &lt;code&gt;overlay_modiff&lt;/code&gt; counts only modifications to the buffer&amp;rsquo;s overlays.</source>
          <target state="translated">这些字段计算在此缓冲区中执行的缓冲区修改事件的数量。在每个缓冲区修改事件之后， &lt;code&gt;modiff&lt;/code&gt; 都会增加，并且永远不会更改； &lt;code&gt;save_modiff&lt;/code&gt; 包含上次访问或保存缓冲区时的 &lt;code&gt;modiff&lt;/code&gt; 值； &lt;code&gt;chars_modiff&lt;/code&gt; 仅计算对缓冲区中字符的修改，而忽略所有其他类型的更改（例如文本属性）；和 &lt;code&gt;overlay_modiff&lt;/code&gt; 仅计算对缓冲区的叠加层的修改。</target>
        </trans-unit>
        <trans-unit id="6844a9a43b79ccec05a390c8b25f33aea98210e1" translate="yes" xml:space="preserve">
          <source>These fields hold, respectively, a list of overlays that end at or before the current overlay center, and a list of overlays that end after the current overlay center. See &lt;a href=&quot;managing-overlays#Managing-Overlays&quot;&gt;Managing Overlays&lt;/a&gt;. &lt;code&gt;overlays_before&lt;/code&gt; is sorted in order of decreasing end position, and &lt;code&gt;overlays_after&lt;/code&gt; is sorted in order of increasing beginning position.</source>
          <target state="translated">这些字段分别包含在当前叠加层中心或之前终止的叠加层列表以及在当前叠加层中心之后终止的叠加层列表。请参阅&lt;a href=&quot;managing-overlays#Managing-Overlays&quot;&gt;管理叠加层&lt;/a&gt;。 &lt;code&gt;overlays_before&lt;/code&gt; 按结束位置递减的顺序排序，而 &lt;code&gt;overlays_after&lt;/code&gt; 按开始位置递减的顺序排序。</target>
        </trans-unit>
        <trans-unit id="41d5d75a953e2e4c59e81e7694f747e4614197bb" translate="yes" xml:space="preserve">
          <source>These fields store the buffer&amp;rsquo;s local keymap (see &lt;a href=&quot;keymaps#Keymaps&quot;&gt;Keymaps&lt;/a&gt;), abbrev table (see &lt;a href=&quot;abbrev-tables#Abbrev-Tables&quot;&gt;Abbrev Tables&lt;/a&gt;), syntax table (see &lt;a href=&quot;syntax-tables#Syntax-Tables&quot;&gt;Syntax Tables&lt;/a&gt;), category table (see &lt;a href=&quot;categories#Categories&quot;&gt;Categories&lt;/a&gt;), and display table (see &lt;a href=&quot;display-tables#Display-Tables&quot;&gt;Display Tables&lt;/a&gt;).</source>
          <target state="translated">这些字段存储缓冲区的本地键映射（请参见&lt;a href=&quot;keymaps#Keymaps&quot;&gt;Keymaps&lt;/a&gt;），缩写表（请参见&lt;a href=&quot;abbrev-tables#Abbrev-Tables&quot;&gt;Abbrev表&lt;/a&gt;），语法表（请参见&lt;a href=&quot;syntax-tables#Syntax-Tables&quot;&gt;语法表&lt;/a&gt;），类别表（请参见&lt;a href=&quot;categories#Categories&quot;&gt;分类&lt;/a&gt;）和显示表（请参见&lt;a href=&quot;display-tables#Display-Tables&quot;&gt;显示表&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="caefee5d23d6c6c86af8afeee33d761f23111f61" translate="yes" xml:space="preserve">
          <source>These fields store the conversion tables for converting text to lower case, upper case, and for canonicalizing text for case-fold search. See &lt;a href=&quot;case-tables#Case-Tables&quot;&gt;Case Tables&lt;/a&gt;.</source>
          <target state="translated">这些字段存储转换表，这些转换表用于将文本转换为小写，大写形式，以及将文本规范化以进行大小写搜索。请参阅&lt;a href=&quot;case-tables#Case-Tables&quot;&gt;案例表&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7356bdab197c4b307f4273606b00e5f3504341eb" translate="yes" xml:space="preserve">
          <source>These fields store the values of Lisp variables that are automatically buffer-local (see &lt;a href=&quot;buffer_002dlocal-variables#Buffer_002dLocal-Variables&quot;&gt;Buffer-Local Variables&lt;/a&gt;), whose corresponding variable names have the additional prefix &lt;code&gt;buffer-&lt;/code&gt; and have underscores replaced with dashes. For instance, &lt;code&gt;undo_list&lt;/code&gt; stores the value of &lt;code&gt;buffer-undo-list&lt;/code&gt;.</source>
          <target state="translated">这些字段存储自动在缓冲区本地的Lisp变量的值（请参见&lt;a href=&quot;buffer_002dlocal-variables#Buffer_002dLocal-Variables&quot;&gt;Buffer-Local Variables&lt;/a&gt;），其相应的变量名称具有附加的前缀 &lt;code&gt;buffer-&lt;/code&gt; ,并用短划线代替下划线。例如， &lt;code&gt;undo_list&lt;/code&gt; 存储 &lt;code&gt;buffer-undo-list&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="c066cf74888d99cf9151237fbea57958b8cb93e2" translate="yes" xml:space="preserve">
          <source>These fields store the values of Lisp variables that are automatically buffer-local (see &lt;a href=&quot;buffer_002dlocal-variables#Buffer_002dLocal-Variables&quot;&gt;Buffer-Local Variables&lt;/a&gt;), whose corresponding variable names have underscores replaced with dashes. For instance, &lt;code&gt;mode_line_format&lt;/code&gt; stores the value of &lt;code&gt;mode-line-format&lt;/code&gt;.</source>
          <target state="translated">这些字段存储自动在缓冲区本地的Lisp变量的值（请参阅&lt;a href=&quot;buffer_002dlocal-variables#Buffer_002dLocal-Variables&quot;&gt;Buffer-Local Variables&lt;/a&gt;），其相应的变量名称下划线用短划线代替。例如， &lt;code&gt;mode_line_format&lt;/code&gt; 存储 &lt;code&gt;mode-line-format&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="fb8146d57fbe325b7f14b432b9d92bc60b3cfeea" translate="yes" xml:space="preserve">
          <source>These frame parameters control the use of fonts and colors.</source>
          <target state="translated">这些框架参数控制字体和颜色的使用。</target>
        </trans-unit>
        <trans-unit id="75cd82a0c0e58c25cdc9b6bacbe21efea6ec7f69" translate="yes" xml:space="preserve">
          <source>These frame parameters enable or disable various parts of the frame, or control their sizes.</source>
          <target state="translated">这些框架参数启用或禁用框架的各个部分,或控制它们的大小。</target>
        </trans-unit>
        <trans-unit id="d255f11855dcf4a52f043d8501aaa97f70e52f62" translate="yes" xml:space="preserve">
          <source>These frame parameters give the most basic information about the frame. &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; are meaningful on all terminals.</source>
          <target state="translated">这些框架参数提供有关框架的最基本信息。 &lt;code&gt;title&lt;/code&gt; 和 &lt;code&gt;name&lt;/code&gt; 在所有终端上都有意义。</target>
        </trans-unit>
        <trans-unit id="6c680cf74be3c7198bef700334e34054ecd3a7e0" translate="yes" xml:space="preserve">
          <source>These frame parameters, meaningful on all kinds of terminals, deal with which buffers have been, or should, be displayed in the frame.</source>
          <target state="translated">这些帧参数,在所有类型的终端上都有意义,处理哪些缓冲区已经或应该在帧中显示。</target>
        </trans-unit>
        <trans-unit id="6c15e83c2865f543ed1b272587e6e144469be662" translate="yes" xml:space="preserve">
          <source>These functions accept a display (either a frame or the name of a terminal) as an optional argument. We hope in the future to make Emacs support different colors on different text terminals; then this argument will specify which terminal to operate on (the default being the selected frame&amp;rsquo;s terminal; see &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;). At present, though, the &lt;var&gt;frame&lt;/var&gt; argument has no effect.</source>
          <target state="translated">这些函数接受显示（框架或终端名称）作为可选参数。我们希望将来使Emacs在不同的文本终端上支持不同的颜色；然后此参数将指定要在哪个终端上进行操作（默认为所选框架的终端；请参见&lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;）。但是，目前， &lt;var&gt;frame&lt;/var&gt; 参数无效。</target>
        </trans-unit>
        <trans-unit id="91e12a819cc188763f60c0b340292fb53a08ac26" translate="yes" xml:space="preserve">
          <source>These functions access and select minibuffer windows, test whether they are active and control how they get resized.</source>
          <target state="translated">这些函数访问和选择迷你缓冲区窗口,测试它们是否处于活动状态,并控制它们如何调整大小。</target>
        </trans-unit>
        <trans-unit id="121a5761d8b20b0742174be73c6b20355bf2397e" translate="yes" xml:space="preserve">
          <source>These functions access the minibuffer prompt and contents.</source>
          <target state="translated">这些功能可以访问minibuffer的提示和内容。</target>
        </trans-unit>
        <trans-unit id="8471e7b0600804b60a50e9b8512731d75d72de26" translate="yes" xml:space="preserve">
          <source>These functions and variables deal with recursive minibuffers (see &lt;a href=&quot;recursive-editing#Recursive-Editing&quot;&gt;Recursive Editing&lt;/a&gt;):</source>
          <target state="translated">这些函数和变量处理递归迷你缓冲区（请参阅&lt;a href=&quot;recursive-editing#Recursive-Editing&quot;&gt;递归编辑&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="0553c0ae5b9ff8a094605fff6f3203bf3cf7f9a6" translate="yes" xml:space="preserve">
          <source>These functions and variables give information about the total amount of memory allocation that Emacs has done, broken down by data type. Note the difference between these and the values returned by &lt;code&gt;garbage-collect&lt;/code&gt;; those count objects that currently exist, but these count the number or size of all allocations, including those for objects that have since been freed.</source>
          <target state="translated">这些函数和变量提供有关Emacs已完成的内存分配总量（按数据类型细分）的信息。注意这些和 &lt;code&gt;garbage-collect&lt;/code&gt; 返回的值之间的区别；那些计数当前存在的对象，但是这些计数所有分配的数量或大小，包括那些已经释放的对象。</target>
        </trans-unit>
        <trans-unit id="6fc606e7b511561a87e15edff497fda623372a9b" translate="yes" xml:space="preserve">
          <source>These functions and variables provide access to the kill ring at a lower level, but are still convenient for use in Lisp programs, because they take care of interaction with window system selections (see &lt;a href=&quot;window-system-selections#Window-System-Selections&quot;&gt;Window System Selections&lt;/a&gt;).</source>
          <target state="translated">这些函数和变量提供了访问较低级别的终止环的权限，但仍便于在Lisp程序中使用，因为它们负责与窗口系统选择进行交互（请参见&amp;ldquo;&lt;a href=&quot;window-system-selections#Window-System-Selections&quot;&gt;窗口系统选择&amp;rdquo;&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="57edc7f3b602347790883112e32461c39a8b215d" translate="yes" xml:space="preserve">
          <source>These functions are called with no arguments. They can access the command-line argument under consideration through the variable &lt;code&gt;argi&lt;/code&gt;, which is bound temporarily at this point. The remaining arguments (not including the current one) are in the variable &lt;code&gt;command-line-args-left&lt;/code&gt;.</source>
          <target state="translated">调用这些函数时不带参数。他们可以通过变量 &lt;code&gt;argi&lt;/code&gt; 访问正在考虑的命令行参数，变量argi暂时绑定。其余参数（不包括当前参数）在变量 &lt;code&gt;command-line-args-left&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="97f83cee255103144d520b839f7f8062dbf43bf9" translate="yes" xml:space="preserve">
          <source>These functions are useful for decoding scroll bar events.</source>
          <target state="translated">这些功能对解码滚动条事件很有用。</target>
        </trans-unit>
        <trans-unit id="c8f58ab0f0faf7770a13f5fb5b71914974523873" translate="yes" xml:space="preserve">
          <source>These functions compute a position list given particular buffer position or screen position. You can access the data in this position list with the functions described above.</source>
          <target state="translated">这些函数计算给定的特定缓冲区位置或屏幕位置的位置列表。你可以通过上述函数访问这个位置列表中的数据。</target>
        </trans-unit>
        <trans-unit id="22c7dfe3c796bddf45291a7df571d895a905f8ec" translate="yes" xml:space="preserve">
          <source>These functions convert events, key sequences, or characters to textual descriptions. These descriptions are useful for including arbitrary text characters or key sequences in messages, because they convert non-printing and whitespace characters to sequences of printing characters. The description of a non-whitespace printing character is the character itself.</source>
          <target state="translated">这些函数将事件、关键序列或字符转换为文本描述。这些描述对于在消息中包含任意文本字符或键序列非常有用,因为它们将非打印字符和空白字符转换为打印字符序列。非空格打印字符的描述就是字符本身。</target>
        </trans-unit>
        <trans-unit id="32854e57fd4225961eb6f7a796377d636a1707d5" translate="yes" xml:space="preserve">
          <source>These functions convert the set string to multibyte if the buffer is multibyte, and they convert it to unibyte if the buffer is unibyte, as the search functions do (see &lt;a href=&quot;searching-and-matching#Searching-and-Matching&quot;&gt;Searching and Matching&lt;/a&gt;).</source>
          <target state="translated">这些函数将缓冲区设置为多字节时将设置的字符串转换为多字节，如果缓冲区为单字节，则将其转换为unibyte，就像搜索功能一样（请参阅&lt;a href=&quot;searching-and-matching#Searching-and-Matching&quot;&gt;Searching and Matching&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="bde16a6327954ca3dc2ee15e2e43d1b54fb616d9" translate="yes" xml:space="preserve">
          <source>These functions convert time values (see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;) to Lisp timestamps, or into calendrical information and vice versa.</source>
          <target state="translated">这些函数将时间值（请参阅&lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;&amp;ldquo;每日时间&amp;rdquo;&lt;/a&gt;）转换为Lisp时间戳，或转换为日历信息，反之亦然。</target>
        </trans-unit>
        <trans-unit id="a82b07d93809f41e92feaab96902ece14f6ca96b" translate="yes" xml:space="preserve">
          <source>These functions convert time values to text in a string, and vice versa. Time values include &lt;code&gt;nil&lt;/code&gt;, numbers, and Lisp timestamps (see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;).</source>
          <target state="translated">这些函数将时间值转换为字符串中的文本，反之亦然。时间值包括 &lt;code&gt;nil&lt;/code&gt; ，数字和Lisp时间戳（请参阅&amp;ldquo;&lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;时间&amp;rdquo;&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="893a001c0a39bd95a9eed9a404de87e4453643d2" translate="yes" xml:space="preserve">
          <source>These functions copy text characters from strings and buffers along with their properties. The inserted characters have exactly the same properties as the characters they were copied from. By contrast, characters specified as separate arguments, not part of a string or buffer, inherit their text properties from the neighboring text.</source>
          <target state="translated">这些函数从字符串和缓冲区中复制文本字符以及它们的属性。插入的字符与它们被复制的字符具有完全相同的属性。相反,作为单独参数指定的字符,不属于字符串或缓冲区的一部分,将从邻近的文本中继承它们的文本属性。</target>
        </trans-unit>
        <trans-unit id="12996c12645dffe62b5b718b306e09838a845251" translate="yes" xml:space="preserve">
          <source>These functions count each character according to the number of columns it occupies on the screen. This means control characters count as occupying 2 or 4 columns, depending upon the value of &lt;code&gt;ctl-arrow&lt;/code&gt;, and tabs count as occupying a number of columns that depends on the value of &lt;code&gt;tab-width&lt;/code&gt; and on the column where the tab begins. See &lt;a href=&quot;usual-display#Usual-Display&quot;&gt;Usual Display&lt;/a&gt;.</source>
          <target state="translated">这些功能根据屏幕上占用的列数对每个字符进行计数。这意味着控制字符计数为占据2或4列，具体取决于 &lt;code&gt;ctl-arrow&lt;/code&gt; 的值，而制表符计数为占据若干列，具体取决于 &lt;code&gt;tab-width&lt;/code&gt; 的值和制表符开始的列。请参阅&lt;a href=&quot;usual-display#Usual-Display&quot;&gt;常规显示&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5587cca0f32b361e7619386323dd5952fc38156a" translate="yes" xml:space="preserve">
          <source>These functions do not modify the strings that are passed to them as arguments.</source>
          <target state="translated">这些函数不会修改作为参数传递给它们的字符串。</target>
        </trans-unit>
        <trans-unit id="0db9562b1b3d1a26285c73f9d1f5a2bc76ccbea1" translate="yes" xml:space="preserve">
          <source>These functions do not move point; instead, they return a position (or &lt;code&gt;nil&lt;/code&gt;). Remember that a position is always between two characters; the position returned by these functions is between two characters with different properties.</source>
          <target state="translated">这些功能不会移动点；相反，它们返回一个头寸（或 &lt;code&gt;nil&lt;/code&gt; ）。请记住，位置始终在两个字符之间；这些函数返回的位置在两个具有不同属性的字符之间。</target>
        </trans-unit>
        <trans-unit id="3480b687890db37e25d8679a8fb2aa1513692262" translate="yes" xml:space="preserve">
          <source>These functions handle both strings and buffers. Keep in mind that positions in a string start from 0, whereas positions in a buffer start from 1. Passing a buffer other than the current buffer may be slow.</source>
          <target state="translated">这些函数既可以处理字符串,也可以处理缓冲区,请注意字符串中的位置从0开始,而缓冲区中的位置从1开始。请注意,字符串中的位置从0开始,而缓冲区中的位置从1开始,传递当前缓冲区以外的缓冲区可能会很慢。</target>
        </trans-unit>
        <trans-unit id="0bb3307e88dba10f0e4bca2c9c929691f427fc25" translate="yes" xml:space="preserve">
          <source>These functions let you read and change the parameter values of a frame.</source>
          <target state="translated">这些函数可以让你读取和改变一个框架的参数值。</target>
        </trans-unit>
        <trans-unit id="c6d0e6907567470f2b32ecff3c3b392fd450cfb8" translate="yes" xml:space="preserve">
          <source>These functions move point based on a count of characters. &lt;code&gt;goto-char&lt;/code&gt; is the fundamental primitive; the other functions use that.</source>
          <target state="translated">这些功能根据字符数移动点。 &lt;code&gt;goto-char&lt;/code&gt; 是基本原语；其他功能使用它。</target>
        </trans-unit>
        <trans-unit id="ab2d1d99ce04f193040231a1c2648552979f7f3c" translate="yes" xml:space="preserve">
          <source>These functions must take care when using &lt;code&gt;window-end&lt;/code&gt; (see &lt;a href=&quot;window-start-and-end#Window-Start-and-End&quot;&gt;Window Start and End&lt;/a&gt;); if you need an up-to-date value, you must use the &lt;var&gt;update&lt;/var&gt; argument to ensure you get it.</source>
          <target state="translated">使用 &lt;code&gt;window-end&lt;/code&gt; 时，这些功能必须小心（请参阅&lt;a href=&quot;window-start-and-end#Window-Start-and-End&quot;&gt;Window Start和End&lt;/a&gt;）；如果您需要最新的值，则必须使用 &lt;var&gt;update&lt;/var&gt; 参数来确保获得它。</target>
        </trans-unit>
        <trans-unit id="3599ddd0ccc7c1bb59af0d7739752be6bff46ebb" translate="yes" xml:space="preserve">
          <source>These functions obtain additional information about the window system in use where Emacs shows the specified &lt;var&gt;display&lt;/var&gt;. (Their names begin with &lt;code&gt;x-&lt;/code&gt; for historical reasons.)</source>
          <target state="translated">这些功能获取有关正在使用的窗口系统的附加信息，其中Emacs显示指定的 &lt;var&gt;display&lt;/var&gt; 。（由于历史原因，它们的名称以 &lt;code&gt;x-&lt;/code&gt; 开头。）</target>
        </trans-unit>
        <trans-unit id="147b8d3bc6d563d67f966133e2f695c2f4abb602" translate="yes" xml:space="preserve">
          <source>These functions operate on regular expressions.</source>
          <target state="translated">这些函数对正则表达式进行操作。</target>
        </trans-unit>
        <trans-unit id="e69cc7c761fefbaaa6ca87ea52d54171150d39f1" translate="yes" xml:space="preserve">
          <source>These functions perform calendrical computations using time values (see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;). As with any time value, a value of &lt;code&gt;nil&lt;/code&gt; for any of their time-value arguments stands for the current system time, and a single number stands for the number of seconds since the epoch.</source>
          <target state="translated">这些函数使用时间值执行日历计算（请参阅&lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;&amp;ldquo;每日时间&amp;rdquo;&lt;/a&gt;）。与任何时间值一样，其任何时间值参数的 &lt;code&gt;nil&lt;/code&gt; 值代表当前系统时间，而单个数字代表自纪元以来的秒数。</target>
        </trans-unit>
        <trans-unit id="3faf858a56995dbf1b0c10b1e20365c9dbd2ca0e" translate="yes" xml:space="preserve">
          <source>These functions provide a way to determine which color names are valid, and what they look like. In some cases, the value depends on the &lt;em&gt;selected frame&lt;/em&gt;, as described below; see &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;, for the meaning of the term &amp;ldquo;selected frame&amp;rdquo;.</source>
          <target state="translated">这些功能提供了一种方法来确定哪些颜色名称有效以及它们的外观。在某些情况下，该值取决于&lt;em&gt;所选的帧&lt;/em&gt;，如下所述；有关术语&amp;ldquo;选定框架&amp;rdquo;的含义，请参见&amp;ldquo;&lt;a href=&quot;input-focus#Input-Focus&quot;&gt;输入焦点&lt;/a&gt;&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="e4a65d15c1a9ebd9e09a4df510c5e9378c690d84" translate="yes" xml:space="preserve">
          <source>These functions read and set the properties of an overlay:</source>
          <target state="translated">这些函数读取和设置覆盖层的属性。</target>
        </trans-unit>
        <trans-unit id="607cbb4ce5975ddb134e1cf42345aca20205753f" translate="yes" xml:space="preserve">
          <source>These functions return the default height and width of a character in &lt;var&gt;frame&lt;/var&gt;, measured in pixels. Together, these values establish the size of the default font on &lt;var&gt;frame&lt;/var&gt;. The values depend on the choice of font for &lt;var&gt;frame&lt;/var&gt;, see &lt;a href=&quot;font-and-color-parameters#Font-and-Color-Parameters&quot;&gt;Font and Color Parameters&lt;/a&gt;.</source>
          <target state="translated">这些函数返回 &lt;var&gt;frame&lt;/var&gt; 字符的默认高度和宽度，以像素为单位。这些值一起确定 &lt;var&gt;frame&lt;/var&gt; 上默认字体的大小。该值取决于 &lt;var&gt;frame&lt;/var&gt; 字体的选​​择，请参见&lt;a href=&quot;font-and-color-parameters#Font-and-Color-Parameters&quot;&gt;字体和颜色参数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="09a64473d43e2d708e1c38b96ec8cf37fc09d875" translate="yes" xml:space="preserve">
          <source>These functions return the foreground color (or background color, respectively) of face &lt;var&gt;face&lt;/var&gt;, as a string. If the color is unspecified, they return &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">这些函数以字符串的形式返回face &lt;var&gt;face&lt;/var&gt; 的前景色（或背景色）。如果颜色未指定，则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b636fdb808fc2c3c957e28785d6a35d90f659dad" translate="yes" xml:space="preserve">
          <source>These functions return the height and width of the text area of &lt;var&gt;frame&lt;/var&gt;, measured in units of the default font height and width of &lt;var&gt;frame&lt;/var&gt; (see &lt;a href=&quot;frame-font#Frame-Font&quot;&gt;Frame Font&lt;/a&gt;). These functions are plain shorthands for writing &lt;code&gt;(frame-parameter frame 'height)&lt;/code&gt; and &lt;code&gt;(frame-parameter frame 'width)&lt;/code&gt;.</source>
          <target state="translated">这些函数返回 &lt;var&gt;frame&lt;/var&gt; 文本区域的高度和宽度，以默认字体 &lt;var&gt;frame&lt;/var&gt; 高度和宽度为单位（请参见&lt;a href=&quot;frame-font#Frame-Font&quot;&gt;Frame Font&lt;/a&gt;）。这些功能是编写 &lt;code&gt;(frame-parameter frame 'height)&lt;/code&gt; 和 &lt;code&gt;(frame-parameter frame 'width)&lt;/code&gt; frame'width）的简单速记。</target>
        </trans-unit>
        <trans-unit id="d115313b39c99bf9a73e868edab4210be5dfd0f0" translate="yes" xml:space="preserve">
          <source>These functions return the inner width and height of &lt;var&gt;frame&lt;/var&gt; in pixels.</source>
          <target state="translated">这些函数返回 &lt;var&gt;frame&lt;/var&gt; 的内部宽度和高度（以像素为单位）。</target>
        </trans-unit>
        <trans-unit id="65317fceab04a5393a4610411e7d919c58166f8a" translate="yes" xml:space="preserve">
          <source>These functions return the native width and height of &lt;var&gt;frame&lt;/var&gt; in pixels.</source>
          <target state="translated">这些函数返回以像素为单位的 &lt;var&gt;frame&lt;/var&gt; 的原始宽度和高度。</target>
        </trans-unit>
        <trans-unit id="e5df50bad22f793708058c5c3f72feb1556e5127" translate="yes" xml:space="preserve">
          <source>These functions return the outer width and height of &lt;var&gt;frame&lt;/var&gt; in pixels.</source>
          <target state="translated">这些函数返回 &lt;var&gt;frame&lt;/var&gt; 的外部宽度和高度（以像素为单位）。</target>
        </trans-unit>
        <trans-unit id="d38fe85c22ca89727598b0326e70dba74667d37d" translate="yes" xml:space="preserve">
          <source>These functions return the width and height of the text area of &lt;var&gt;frame&lt;/var&gt; in pixels.</source>
          <target state="translated">这些函数返回以像素为单位的文本 &lt;var&gt;frame&lt;/var&gt; 的宽度和高度。</target>
        </trans-unit>
        <trans-unit id="5a1289dbdd5c9e8a4981cd1858d16f383b2575b6" translate="yes" xml:space="preserve">
          <source>These functions scan text to determine where screen lines break, and thus take time proportional to the distance scanned.</source>
          <target state="translated">这些功能扫描文本以确定屏幕线条断裂的位置,因此所需时间与扫描距离成正比。</target>
        </trans-unit>
        <trans-unit id="32c7206d08128117007e8bcd42d2f606dcff371d" translate="yes" xml:space="preserve">
          <source>These functions take a mouse position list as argument, and return various parts of it:</source>
          <target state="translated">这些函数以鼠标位置列表作为参数,并返回其中的各个部分。</target>
        </trans-unit>
        <trans-unit id="e6a7353e1fe65b73c3cb43570c87e9dc028c7932" translate="yes" xml:space="preserve">
          <source>These functions test for permission to access a file for reading, writing, or execution. Unless explicitly stated otherwise, they follow symbolic links. See &lt;a href=&quot;kinds-of-files#Kinds-of-Files&quot;&gt;Kinds of Files&lt;/a&gt;.</source>
          <target state="translated">这些功能测试是否允许访问文件以进行读取，写入或执行。除非另有明确说明，否则它们遵循符号链接。请参阅&lt;a href=&quot;kinds-of-files#Kinds-of-Files&quot;&gt;文件种类&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0c38f568a6c8f77175070f3ca62775f408c9dfb6" translate="yes" xml:space="preserve">
          <source>These functions, and one macro, provide convenient ways to modify a list which is stored in a variable.</source>
          <target state="translated">这些函数和一个宏提供了方便的方法来修改存储在变量中的列表。</target>
        </trans-unit>
        <trans-unit id="f3821e4594e2f12e52ea2fed5751cf5bb0734c0c" translate="yes" xml:space="preserve">
          <source>These have the attributes indicated by their names (e.g., &lt;code&gt;bold&lt;/code&gt; has a bold &lt;code&gt;:weight&lt;/code&gt; attribute), with all other attributes unspecified (and so given by &lt;code&gt;default&lt;/code&gt;).</source>
          <target state="translated">这些属性具有其名称所指示的属性（例如， &lt;code&gt;bold&lt;/code&gt; 具有粗体 &lt;code&gt;:weight&lt;/code&gt; 属性），而所有其他属性均未指定（因此 &lt;code&gt;default&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="e47e777be261258dca54be3fbba695fcf02c9d58" translate="yes" xml:space="preserve">
          <source>These have the same meanings as the face attributes of the same name. See &lt;a href=&quot;face-attributes#Face-Attributes&quot;&gt;Face Attributes&lt;/a&gt;. &lt;code&gt;:family&lt;/code&gt; and &lt;code&gt;:foundry&lt;/code&gt; are strings, while the other three are symbols. As example values, &lt;code&gt;:slant&lt;/code&gt; may be &lt;code&gt;italic&lt;/code&gt;, &lt;code&gt;:weight&lt;/code&gt; may be &lt;code&gt;bold&lt;/code&gt; and &lt;code&gt;:width&lt;/code&gt; may be &lt;code&gt;normal&lt;/code&gt;.</source>
          <target state="translated">它们与相同名称的face属性具有相同的含义。请参阅&lt;a href=&quot;face-attributes#Face-Attributes&quot;&gt;脸部属性&lt;/a&gt;。 &lt;code&gt;:family&lt;/code&gt; 和 &lt;code&gt;:foundry&lt;/code&gt; 是字符串，而其他三个是符号。作为示例值， &lt;code&gt;:slant&lt;/code&gt; 可以是 &lt;code&gt;italic&lt;/code&gt; ， &lt;code&gt;:weight&lt;/code&gt; 可以是 &lt;code&gt;bold&lt;/code&gt; 而 &lt;code&gt;:width&lt;/code&gt; 可以是 &lt;code&gt;normal&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3fe0bcdf4e749c72aab0c293540927291ac1aa2d" translate="yes" xml:space="preserve">
          <source>These hook variables let you arrange to take notice of changes in buffers (or in a particular buffer, if you make them buffer-local). See also &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Special Properties&lt;/a&gt;, for how to detect changes to specific parts of the text.</source>
          <target state="translated">这些挂钩变量使您可以安排注意到缓冲区（或特定缓冲区，如果使它们成为本地缓冲区）的变化。另请参见&lt;a href=&quot;special-properties#Special-Properties&quot;&gt;特殊属性&lt;/a&gt;，以了解如何检测对文本特定部分的更改。</target>
        </trans-unit>
        <trans-unit id="b3722c7720a390976cdaddd26a76da19ca95a48a" translate="yes" xml:space="preserve">
          <source>These keymaps control various areas of the mode line. See &lt;a href=&quot;mode-line-format#Mode-Line-Format&quot;&gt;Mode Line Format&lt;/a&gt;.</source>
          <target state="translated">这些按键图控制模式行的各个区域。请参见&lt;a href=&quot;mode-line-format#Mode-Line-Format&quot;&gt;模式行格式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d6e2c6883adbcf22c3241682e727075a42dfe00e" translate="yes" xml:space="preserve">
          <source>These keymaps display the main, top-level menus in the menu bar. Some of them contain sub-menus. For example, the Edit menu contains &lt;code&gt;menu-bar-search-menu&lt;/code&gt;, etc. See &lt;a href=&quot;menu-bar#Menu-Bar&quot;&gt;Menu Bar&lt;/a&gt;.</source>
          <target state="translated">这些键盘映射在菜单栏中显示主要的顶层菜单。其中一些包含子菜单。例如，&amp;ldquo;编辑&amp;rdquo;菜单包含 &lt;code&gt;menu-bar-search-menu&lt;/code&gt; 等。请参见&lt;a href=&quot;menu-bar#Menu-Bar&quot;&gt;菜单栏&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e1b24d17104d2a599a62ef2eba9d12e47d4c600d" translate="yes" xml:space="preserve">
          <source>These keys correspond to common</source>
          <target state="translated">这些键与常见的</target>
        </trans-unit>
        <trans-unit id="4c47cdbac4a7f662759169877670d03eab27b377" translate="yes" xml:space="preserve">
          <source>These kinds of event are generated by moving a mouse wheel. The &lt;var&gt;position&lt;/var&gt; element is a mouse position list (see &lt;a href=&quot;click-events#Click-Events&quot;&gt;Click Events&lt;/a&gt;), specifying the position of the mouse cursor when the event occurred.</source>
          <target state="translated">这些事件是通过移动鼠标滚轮生成的。该 &lt;var&gt;position&lt;/var&gt; 元素是一个鼠标位置列表（见&lt;a href=&quot;click-events#Click-Events&quot;&gt;点击活动&lt;/a&gt;），指定鼠标光标的位置，当事件发生时。</target>
        </trans-unit>
        <trans-unit id="327aa77a271ae0747539593d4f1f1061887141f4" translate="yes" xml:space="preserve">
          <source>These macros all expect three arguments:</source>
          <target state="translated">这些宏都需要三个参数。</target>
        </trans-unit>
        <trans-unit id="661bb57259287c5d9e6a9cf26af06d46adf0c8f2" translate="yes" xml:space="preserve">
          <source>These mapping functions do not allow char-tables because a char-table is a sparse array whose nominal range of indices is very large. To map over a char-table in a way that deals properly with its sparse nature, use the function &lt;code&gt;map-char-table&lt;/code&gt; (see &lt;a href=&quot;char_002dtables#Char_002dTables&quot;&gt;Char-Tables&lt;/a&gt;).</source>
          <target state="translated">这些映射函数不允许使用char-table，因为char-table是稀疏数组，其标称索引范围非常大。要以适当处理其稀疏性质的方式映射到char表，请使用 &lt;code&gt;map-char-table&lt;/code&gt; 函数（请参见&lt;a href=&quot;char_002dtables#Char_002dTables&quot;&gt;Char-Tables&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="889061821013abb0e636cc7d94dfee19f317076e" translate="yes" xml:space="preserve">
          <source>These mathematical functions allow integers as well as floating-point numbers as arguments.</source>
          <target state="translated">这些数学函数允许整数和浮点数作为参数。</target>
        </trans-unit>
        <trans-unit id="0f431d7e8f6682cc5d52bc8367b56e6ab2917c79" translate="yes" xml:space="preserve">
          <source>These move point to the previous or next, respectively, &lt;var&gt;arg&lt;/var&gt;th node in &lt;var&gt;ewoc&lt;/var&gt;. &lt;code&gt;ewoc-goto-prev&lt;/code&gt; does not move if it is already at the first node or if &lt;var&gt;ewoc&lt;/var&gt; is empty, whereas &lt;code&gt;ewoc-goto-next&lt;/code&gt; moves past the last node, returning &lt;code&gt;nil&lt;/code&gt;. Excepting this special case, these functions return the node moved to.</source>
          <target state="translated">这些移动指向前一个或下分别 &lt;var&gt;arg&lt;/var&gt; 个节点在 &lt;var&gt;ewoc&lt;/var&gt; 。 &lt;code&gt;ewoc-goto-prev&lt;/code&gt; 已经在第一个节点上，或者 &lt;var&gt;ewoc&lt;/var&gt; 为空，则它不会移动，而 &lt;code&gt;ewoc-goto-next&lt;/code&gt; 会经过最后一个节点，返回 &lt;code&gt;nil&lt;/code&gt; 。除了这种特殊情况，这些函数将返回移动到的节点。</target>
        </trans-unit>
        <trans-unit id="ca83389bce48c8c68a57c8b12e41b5c8416c3707" translate="yes" xml:space="preserve">
          <source>These narrow classifications are grouped into a hierarchy of wider classes called &lt;em&gt;error conditions&lt;/em&gt;, identified by &lt;em&gt;condition names&lt;/em&gt;. The narrowest such classes belong to the error symbols themselves: each error symbol is also a condition name. There are also condition names for more extensive classes, up to the condition name &lt;code&gt;error&lt;/code&gt; which takes in all kinds of errors (but not &lt;code&gt;quit&lt;/code&gt;). Thus, each error has one or more condition names: &lt;code&gt;error&lt;/code&gt;, the error symbol if that is distinct from &lt;code&gt;error&lt;/code&gt;, and perhaps some intermediate classifications.</source>
          <target state="translated">这些狭窄的分类被分为称为&lt;em&gt;错误条件&lt;/em&gt;的较宽类别的层次结构，由&lt;em&gt;条件名称&lt;/em&gt;标识。此类最狭窄的类属于错误符号本身：每个错误符号也是条件名称。对于更广泛的类，也有条件名称，直到条件名称 &lt;code&gt;error&lt;/code&gt; 会吸收所有类型的错误（但不会 &lt;code&gt;quit&lt;/code&gt; ）。因此，每个错误都有一个或多个条件名称： &lt;code&gt;error&lt;/code&gt; ，错误符号（如果不同于 &lt;code&gt;error&lt;/code&gt; ）和某些中间分类。</target>
        </trans-unit>
        <trans-unit id="014e4a097c82195bde9b7c25fe9dd9bf73df7a55" translate="yes" xml:space="preserve">
          <source>These normal hooks are run, respectively, when the mark becomes active and when it becomes inactive. The hook &lt;code&gt;activate-mark-hook&lt;/code&gt; is also run at the end of the command loop if the mark is active and it is possible that the region may have changed.</source>
          <target state="translated">当标记变为活动状态或变为无效状态时，分别运行这些常规钩子。如果标记处于活动状态，则钩子 &lt;code&gt;activate-mark-hook&lt;/code&gt; 也会在命令循环的末尾运行，并且区域可能已更改。</target>
        </trans-unit>
        <trans-unit id="2e9f87ff7e3198e668f10966de785d119907aade" translate="yes" xml:space="preserve">
          <source>These options affect the behavior of Edebug:</source>
          <target state="translated">这些选项会影响Edebug的行为。</target>
        </trans-unit>
        <trans-unit id="a4f845e8272f1ee4ffc16d323f1859daa1283172" translate="yes" xml:space="preserve">
          <source>These overrides are useful when you want to make some text unaffected by the reordering algorithm, and instead directly control the display order. But they can also be used for malicious purposes, known as &lt;em&gt;phishing&lt;/em&gt;. Specifically, a URL on a Web page or a link in an email message can be manipulated to make its visual appearance unrecognizable, or similar to some popular benign location, while the real location, interpreted by a browser in the logical order, is very different.</source>
          <target state="translated">当您想使某些文本不受重新排序算法的影响，而是直接控制显示顺序时，这些覆盖很有用。但是它们也可以用于恶意目的，称为&lt;em&gt;网络钓鱼&lt;/em&gt;。具体来说，可以操纵网页上的URL或电子邮件中的链接以使其视觉外观无法识别，或类似于某些受欢迎的良性位置，而浏览器按逻辑顺序解释的实际位置却大不相同。 。</target>
        </trans-unit>
        <trans-unit id="095c879a0e1c874617dc77661a08cd7ebf30f266" translate="yes" xml:space="preserve">
          <source>These parameters are mostly useful for child frames (see &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;) that come without window manager decorations. If necessary, they can be used for undecorated top-level frames as well.</source>
          <target state="translated">这些参数对于没有窗口管理器装饰的子框架（请参阅&lt;a href=&quot;child-frames#Child-Frames&quot;&gt;子框架&lt;/a&gt;）最有用。如有必要，它们也可以用于未经修饰的顶层框架。</target>
        </trans-unit>
        <trans-unit id="153ef778c6b97967d9f2ce43fda7f854e08c56ba" translate="yes" xml:space="preserve">
          <source>These parameters are used internally for implementing side windows (see &lt;a href=&quot;side-windows#Side-Windows&quot;&gt;Side Windows&lt;/a&gt;).</source>
          <target state="translated">这些参数在内部用于实现侧窗（见&lt;a href=&quot;side-windows#Side-Windows&quot;&gt;侧窗&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="7903a938448c17a3c92a1961733615528e815829" translate="yes" xml:space="preserve">
          <source>These parameters supply forms of interactions between different frames.</source>
          <target state="translated">这些参数供给了不同框架之间的交互形式。</target>
        </trans-unit>
        <trans-unit id="604caa6b860829abeb4d2d5ad8b8d6949bef07a0" translate="yes" xml:space="preserve">
          <source>These problems will never happen in normal circumstances with installed Emacs files. But they are quite likely to happen with Lisp files that you are changing. The easiest way to prevent these problems is to reload the new compiled file immediately after each recompilation.</source>
          <target state="translated">这些问题在正常情况下不会发生在已安装的Emacs文件上。但是,这些问题很有可能发生在你正在改变的Lisp文件上。防止这些问题的最简单的方法是在每次重新编译后立即重新加载新的编译文件。</target>
        </trans-unit>
        <trans-unit id="74497c2b387c074f0b80666e13f53d25f241ac27" translate="yes" xml:space="preserve">
          <source>These properties are obsolete; please use &lt;code&gt;cursor-sensor-functions&lt;/code&gt; instead.</source>
          <target state="translated">这些属性已过时；请改用 &lt;code&gt;cursor-sensor-functions&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6cc7c4e05f99db3539d2f04a9d301a520f52d552" translate="yes" xml:space="preserve">
          <source>These properties are used to record a customizable variable&amp;rsquo;s standard value, saved value, customized-but-unsaved value, and themed values. Do not set them directly; they are managed by &lt;code&gt;defcustom&lt;/code&gt; and related functions. See &lt;a href=&quot;variable-definitions#Variable-Definitions&quot;&gt;Variable Definitions&lt;/a&gt;.</source>
          <target state="translated">这些属性用于记录可自定义变量的标准值，已保存值，已自定义但未保存的值和主题值。不要直接设置它们；它们由 &lt;code&gt;defcustom&lt;/code&gt; 和相关功能管理。请参阅&lt;a href=&quot;variable-definitions#Variable-Definitions&quot;&gt;变量定义&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="68a5f034c7853205bde56ac0e877bed5c54aae41" translate="yes" xml:space="preserve">
          <source>These properties are used to record a face&amp;rsquo;s standard, saved, customized, and themed face specs. Do not set them directly; they are managed by &lt;code&gt;defface&lt;/code&gt; and related functions. See &lt;a href=&quot;defining-faces#Defining-Faces&quot;&gt;Defining Faces&lt;/a&gt;.</source>
          <target state="translated">这些属性用于记录面部的标准，已保存，自定义和主题面部规格。不要直接设置它们；它们由 &lt;code&gt;defface&lt;/code&gt; 和相关功能进行管理。请参阅&lt;a href=&quot;defining-faces#Defining-Faces&quot;&gt;定义面孔&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1cf87969ab79defe053b28ccbfbf4fba573ae8e3" translate="yes" xml:space="preserve">
          <source>These render &lt;code&gt;cl-case&lt;/code&gt; unsuitable for strings or compound data structures (e.g., lists or vectors). (&lt;code&gt;cond&lt;/code&gt; doesn&amp;rsquo;t have these limitations, but it has others, see above.)</source>
          <target state="translated">这些使 &lt;code&gt;cl-case&lt;/code&gt; 不适合字符串或复合数据结构（例如，列表或向量）。（ &lt;code&gt;cond&lt;/code&gt; 没有这些限制，但是有其他限制，请参见上文。）</target>
        </trans-unit>
        <trans-unit id="317f88dc617e3083b4efda6c5e9c655c9f5b336a" translate="yes" xml:space="preserve">
          <source>These results make sense because the binary codes for control-_ and control-W are 11111 and 10111, respectively.</source>
          <target state="translated">这些结果是合理的,因为控制-_和控制-W的二进制代码分别是1111和10111。</target>
        </trans-unit>
        <trans-unit id="ad489d015d653d05e2a1ccfa8abb77e06f2f8a64" translate="yes" xml:space="preserve">
          <source>These results make sense, because the binary code for &amp;lsquo;</source>
          <target state="translated">这些结果很有道理，因为&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="a4c4dda550da1b321a6d80128f1268ee7812b202" translate="yes" xml:space="preserve">
          <source>These return, respectively, the previous node and the next node of &lt;var&gt;node&lt;/var&gt; in &lt;var&gt;ewoc&lt;/var&gt;.</source>
          <target state="translated">这些回报，分别为前一个节点和下一个节点的 &lt;var&gt;node&lt;/var&gt; 在 &lt;var&gt;ewoc&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="739a145c115b98a28b37f057c49f7f8134102375" translate="yes" xml:space="preserve">
          <source>These search functions convert the regular expression to multibyte if the buffer is multibyte; they convert the regular expression to unibyte if the buffer is unibyte. See &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Text Representations&lt;/a&gt;.</source>
          <target state="translated">如果缓冲区是多字节的，这些搜索功能会将正则表达式转换为多字节；如果缓冲区为unibyte，它们会将正则表达式转换为unibyte。请参阅&lt;a href=&quot;text-representations#Text-Representations&quot;&gt;文本表示&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cad6f6a80c908d9567b01aa919faa1349448d0c5" translate="yes" xml:space="preserve">
          <source>These search functions convert the search string to multibyte if the buffer is multibyte; they convert the search string to unibyte if the buffer is unibyte. See &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Text Representations&lt;/a&gt;.</source>
          <target state="translated">如果缓冲区为多字节，这些搜索功能会将搜索字符串转换为多字节；如果缓冲区为unibyte，它们会将搜索字符串转换为unibyte。请参阅&lt;a href=&quot;text-representations#Text-Representations&quot;&gt;文本表示&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bd2b14d5ec156e1364acc616d89bab67278f031d" translate="yes" xml:space="preserve">
          <source>These sequences which start with backslash are also known as &lt;em&gt;escape sequences&lt;/em&gt;, because backslash plays the role of an escape character; this has nothing to do with the character</source>
          <target state="translated">这些以反斜杠开头的序列也称为&lt;em&gt;转义序列&lt;/em&gt;，因为反斜杠起着转义字符的作用。这与角色无关</target>
        </trans-unit>
        <trans-unit id="456dfa373a289f0f0b4deebb6c8a4d3795bcf6cb" translate="yes" xml:space="preserve">
          <source>These set the &lt;code&gt;:foreground&lt;/code&gt; attribute (or &lt;code&gt;:background&lt;/code&gt; attribute, respectively) of &lt;var&gt;face&lt;/var&gt; to &lt;var&gt;color&lt;/var&gt;.</source>
          <target state="translated">这些将 &lt;var&gt;face&lt;/var&gt; 的 &lt;code&gt;:foreground&lt;/code&gt; 属性（或分别为 &lt;code&gt;:background&lt;/code&gt; 属性）设置为 &lt;var&gt;color&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="4361dc475638198651233d489b0c06358bc64f73" translate="yes" xml:space="preserve">
          <source>These specify the text to display before and after a button. Each can be:</source>
          <target state="translated">这些指定了按钮前后要显示的文字。每个按钮都可以是:</target>
        </trans-unit>
        <trans-unit id="aae1e62c125521a40620f94052f6c91a214adc3a" translate="yes" xml:space="preserve">
          <source>These text properties affect the behavior of the fill commands. They are used for representing formatted text. See &lt;a href=&quot;filling#Filling&quot;&gt;Filling&lt;/a&gt;, and &lt;a href=&quot;margins#Margins&quot;&gt;Margins&lt;/a&gt;.</source>
          <target state="translated">这些文本属性影响填充命令的行为。它们用于表示格式化的文本。请参见&lt;a href=&quot;filling#Filling&quot;&gt;填充&lt;/a&gt;和&lt;a href=&quot;margins#Margins&quot;&gt;边距&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f87d3b575a3c7c8a91b4b2214f3ee45679d4e508" translate="yes" xml:space="preserve">
          <source>These types are the first-class citizens of an internal type system. Since the tag space is limited, all other types are the subtypes of &lt;code&gt;Lisp_Vectorlike&lt;/code&gt;. Vector subtypes are enumerated by &lt;code&gt;enum pvec_type&lt;/code&gt;, and nearly all complex objects like windows, buffers, frames, and processes fall into this category.</source>
          <target state="translated">这些类型是内部类型系统的一等公民。由于标签空间有限，因此所有其他类型都是 &lt;code&gt;Lisp_Vectorlike&lt;/code&gt; 的子类型。向 &lt;code&gt;enum pvec_type&lt;/code&gt; 类型由枚举pvec_type枚举，几乎所有复杂的对象（如窗口，缓冲区，框架和进程）都属于此类。</target>
        </trans-unit>
        <trans-unit id="45b8c3a592e7f6abf7e293e1c03ad1586a17177b" translate="yes" xml:space="preserve">
          <source>These variables affect newly created frames. They do not normally affect existing frames; however, if you set the mouse color of a frame, that also installs the current value of those two variables. See &lt;a href=&quot;font-and-color-parameters#Font-and-Color-Parameters&quot;&gt;Font and Color Parameters&lt;/a&gt;.</source>
          <target state="translated">这些变量影响新创建的框架。它们通常不会影响现有框架。但是，如果设置框架的鼠标颜色，则还会安装这两个变量的当前值。请参见&lt;a href=&quot;font-and-color-parameters#Font-and-Color-Parameters&quot;&gt;字体和颜色参数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c3bd982161583df9a64b8b6e96576aac88da7ce8" translate="yes" xml:space="preserve">
          <source>These variables are used by users to control what happens when a Lisp program reports a warning.</source>
          <target state="translated">这些变量被用户用来控制当一个Lisp程序报告一个警告时发生的事情。</target>
        </trans-unit>
        <trans-unit id="1db6b1b9fba288780dcd3afa212e5cf3e56eb6c2" translate="yes" xml:space="preserve">
          <source>These variables are used for detecting and reporting circular and shared structure:</source>
          <target state="translated">这些变量用于检测和报告循环和共享结构。</target>
        </trans-unit>
        <trans-unit id="105e44643481b52f29feb563c36e254820e60447" translate="yes" xml:space="preserve">
          <source>These variables control details of how the echo area works.</source>
          <target state="translated">这些变量控制了回音区工作的细节。</target>
        </trans-unit>
        <trans-unit id="8264858250c0b5c5b182cf58fd1f9b100b7739a2" translate="yes" xml:space="preserve">
          <source>They occupy one-fourth the space of a vector of the same elements.</source>
          <target state="translated">它们占据了相同元素的向量的四分之一的空间。</target>
        </trans-unit>
        <trans-unit id="96fd86992c2d294dc7c966a9cc379303e0e5acd0" translate="yes" xml:space="preserve">
          <source>Things you should think about when you define a variable.</source>
          <target state="translated">当你定义一个变量时,你应该考虑的事情。</target>
        </trans-unit>
        <trans-unit id="85f58635e7a6031c4a0dd6f3081e83750aac35d0" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;cond&lt;/code&gt; expression returns &lt;code&gt;foo&lt;/code&gt; if the value of &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;hack&lt;/code&gt;, and returns the string &lt;code&gt;&quot;default&quot;&lt;/code&gt; otherwise.</source>
          <target state="translated">这 &lt;code&gt;cond&lt;/code&gt; 表达式返回 &lt;code&gt;foo&lt;/code&gt; 的当值 &lt;code&gt;a&lt;/code&gt; 为 &lt;code&gt;hack&lt;/code&gt; ，并返回字符串 &lt;code&gt;&quot;default&quot;&lt;/code&gt; ，否则。</target>
        </trans-unit>
        <trans-unit id="b703be92a7238d219e5c1003ffb23f6cb975b30b" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;defsubst&lt;/code&gt; returns non-nil if there is a fake header at &lt;var&gt;pos&lt;/var&gt;. A fake header is used if &lt;code&gt;tabulated-list-use-header-line&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt; to put the column names at the beginning of the buffer. If omitted or &lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;pos&lt;/var&gt; defaults to &lt;code&gt;point-min&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;var&gt;pos&lt;/var&gt; 上有假标头，则此 &lt;code&gt;defsubst&lt;/code&gt; 返回non-nil 。一个假头使用，如果 &lt;code&gt;tabulated-list-use-header-line&lt;/code&gt; 是 &lt;code&gt;nil&lt;/code&gt; 投入列名在缓冲区的开始。如果省略或为 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;var&gt;pos&lt;/var&gt; 默认为 &lt;code&gt;point-min&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="48176d2024c8007a4ac5be85e04bd56a7171720e" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;defsubst&lt;/code&gt; returns the ID object from &lt;code&gt;tabulated-list-entries&lt;/code&gt; (if that is a list) or from the list returned by &lt;code&gt;tabulated-list-entries&lt;/code&gt; (if it is a function). If omitted or &lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;pos&lt;/var&gt; defaults to point.</source>
          <target state="translated">此 &lt;code&gt;defsubst&lt;/code&gt; 从 &lt;code&gt;tabulated-list-entries&lt;/code&gt; （如果是列表）或 &lt;code&gt;tabulated-list-entries&lt;/code&gt; 返回的列表（如果是函数）中返回ID对象。如果省略或为 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;var&gt;pos&lt;/var&gt; 默认为point。</target>
        </trans-unit>
        <trans-unit id="cb3d98858d13b8b6d93ec3bd144c3be22d5c1298" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;defsubst&lt;/code&gt; returns the entry object from &lt;code&gt;tabulated-list-entries&lt;/code&gt; (if that is a list) or from the list returned by &lt;code&gt;tabulated-list-entries&lt;/code&gt; (if it is a function). This will be a vector for the ID at &lt;var&gt;pos&lt;/var&gt;. If there is no entry at &lt;var&gt;pos&lt;/var&gt;, then the function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此 &lt;code&gt;defsubst&lt;/code&gt; 从 &lt;code&gt;tabulated-list-entries&lt;/code&gt; （如果是列表）或 &lt;code&gt;tabulated-list-entries&lt;/code&gt; 返回的列表（如果是函数）中返回条目对象。这将是 &lt;var&gt;pos&lt;/var&gt; 上ID的向量。如果 &lt;var&gt;pos&lt;/var&gt; 上没有任何条目，则该函数返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1ec261da340db358d40d23007d994d2a60279eb6" translate="yes" xml:space="preserve">
          <source>This API has mandatory and optional parts.</source>
          <target state="translated">这个API有必选和可选两部分。</target>
        </trans-unit>
        <trans-unit id="b7609c40d243bed2533715ddbd3d688727dca73c" translate="yes" xml:space="preserve">
          <source>This abnormal hook exists for the benefit of packages like</source>
          <target state="translated">这个异常钩子的存在,是为了让类似于</target>
        </trans-unit>
        <trans-unit id="58753480194a35a20eca9121e273f8370cbd4c6b" translate="yes" xml:space="preserve">
          <source>This abnormal hook is a list of functions to call when Emacs needs to display a tooltip. Each function is called with a single argument &lt;var&gt;event&lt;/var&gt; which is a copy of the last mouse movement event. If a function on this list actually displays the tooltip, it should return non-&lt;code&gt;nil&lt;/code&gt;, and then the rest of the functions will not be called. The default value of this variable is a single function &lt;code&gt;tooltip-help-tips&lt;/code&gt;.</source>
          <target state="translated">这个异常的钩子是Emacs需要显示工具提示时要调用的函数的列表。使用单个参数 &lt;var&gt;event&lt;/var&gt; 调用每个函数，该事件是上次鼠标移动事件的副本。如果此列表上的某个函数实际上显示了工具提示，则应返回 &lt;code&gt;nil&lt;/code&gt; ，然后其余函数将不会被调用。此变量的默认值为单个功能 &lt;code&gt;tooltip-help-tips&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="79fc999f2d6f734a8d2f583e4c9251e7567de0ff" translate="yes" xml:space="preserve">
          <source>This abnormal hook is run after loading a file. Each function in the hook is called with a single argument, the absolute filename of the file that was just loaded.</source>
          <target state="translated">这个异常的钩子是在加载一个文件后运行的。钩子中的每个函数都用一个参数来调用,即刚刚加载的文件的绝对文件名。</target>
        </trans-unit>
        <trans-unit id="9e18cb58ef8cb625a4bc43d899fbc09ba5220975" translate="yes" xml:space="preserve">
          <source>This abnormal hook is run by the syntax parsing code prior to calling &lt;code&gt;syntax-propertize-function&lt;/code&gt;. Its role is to help locate safe starting and ending buffer positions for passing to &lt;code&gt;syntax-propertize-function&lt;/code&gt;. For example, a major mode can add a function to this hook to identify multi-line syntactic constructs, and ensure that the boundaries do not fall in the middle of one.</source>
          <target state="translated">这个异常的挂钩由​​语法分析代码运行，然后再调用 &lt;code&gt;syntax-propertize-function&lt;/code&gt; 。它的作用是帮助找到安全的开始和结束缓冲区位置，以传递给 &lt;code&gt;syntax-propertize-function&lt;/code&gt; 。例如，主模式可以向此钩子添加一个函数，以识别多行语法结构，并确保边界不落在一个中间。</target>
        </trans-unit>
        <trans-unit id="d6f96d5f610333f2d917ab647cc390f66c9defed" translate="yes" xml:space="preserve">
          <source>This abnormal hook permits a derived mode to supply a password for the underlying command interpreter without prompting the user.</source>
          <target state="translated">这个异常的钩子允许派生模式在不提示用户的情况下为底层命令解释器供给密码。</target>
        </trans-unit>
        <trans-unit id="6f123b63749113b196200986d7076efd408e9046" translate="yes" xml:space="preserve">
          <source>This acts like a call to &lt;code&gt;set-advertised-calling-convention&lt;/code&gt; (see &lt;a href=&quot;obsolete-functions#Obsolete-Functions&quot;&gt;Obsolete Functions&lt;/a&gt;); &lt;var&gt;signature&lt;/var&gt; specifies the correct argument list for calling the function or macro, and &lt;var&gt;when&lt;/var&gt; should be a string indicating when the old argument list was first made obsolete.</source>
          <target state="translated">这就像调用 &lt;code&gt;set-advertised-calling-convention&lt;/code&gt; 一样（请参阅&lt;a href=&quot;obsolete-functions#Obsolete-Functions&quot;&gt;过时的功能&lt;/a&gt;）； &lt;var&gt;signature&lt;/var&gt; 指定了正确的参数列表来调用函数或宏， &lt;var&gt;when&lt;/var&gt; 要表示当第一次被任命为旧参数列表过时的字符串。</target>
        </trans-unit>
        <trans-unit id="3efa63614ced0a11b3c72a7ee627168a41a3f6a6" translate="yes" xml:space="preserve">
          <source>This adds &lt;code&gt;comint&lt;/code&gt; to the global &lt;code&gt;features&lt;/code&gt; list, so that &lt;code&gt;(require 'comint)&lt;/code&gt; will henceforth know that nothing needs to be done.</source>
          <target state="translated">这会将 &lt;code&gt;comint&lt;/code&gt; 添加到全局 &lt;code&gt;features&lt;/code&gt; 列表中，因此 &lt;code&gt;(require 'comint)&lt;/code&gt; 从此将知道不需要执行任何操作。</target>
        </trans-unit>
        <trans-unit id="43afc452dbf0605822321a1093e4e4cd228c755d" translate="yes" xml:space="preserve">
          <source>This adds a shadow rectangle around the image. The value, &lt;var&gt;relief&lt;/var&gt;, specifies the width of the shadow lines, in pixels. If &lt;var&gt;relief&lt;/var&gt; is negative, shadows are drawn so that the image appears as a pressed button; otherwise, it appears as an unpressed button.</source>
          <target state="translated">这将在图像周围添加阴影矩形。值 &lt;var&gt;relief&lt;/var&gt; 指定阴影线的宽度（以像素为单位）。如果 &lt;var&gt;relief&lt;/var&gt; 为负，则会绘制阴影，使图像显示为按下的按钮；否则，它将显示为未按下的按钮。</target>
        </trans-unit>
        <trans-unit id="1a801bffd8f04ef31dc913229d1561a41fc7042e" translate="yes" xml:space="preserve">
          <source>This alist contains connection criteria and their assigned profile names. The function &lt;code&gt;connection-local-set-profiles&lt;/code&gt; updates this list.</source>
          <target state="translated">该列表包含连接条件及其分配的配置文件名称。函数 &lt;code&gt;connection-local-set-profiles&lt;/code&gt; 更新此列表。</target>
        </trans-unit>
        <trans-unit id="4f4502b00e41d7ca380ee4cfc50445848b782901" translate="yes" xml:space="preserve">
          <source>This alist holds directory names, their assigned class names, and modification times of the associated directory local variables file (if there is one). The function &lt;code&gt;dir-locals-set-directory-class&lt;/code&gt; updates this list.</source>
          <target state="translated">该列表包含目录名称，它们分配的类名称以及关联的目录局部变量文件的修改时间（如果有的话）。函数 &lt;code&gt;dir-locals-set-directory-class&lt;/code&gt; 更新此列表。</target>
        </trans-unit>
        <trans-unit id="a8ab290d6f51f915395187d421755332681e880d" translate="yes" xml:space="preserve">
          <source>This alist holds the class symbols and the associated variable settings. It is updated by &lt;code&gt;dir-locals-set-class-variables&lt;/code&gt;.</source>
          <target state="translated">该列表包含类符号和关联的变量设置。它由 &lt;code&gt;dir-locals-set-class-variables&lt;/code&gt; 更新。</target>
        </trans-unit>
        <trans-unit id="bc82ba461075944d297062d4c28cc81706a37309" translate="yes" xml:space="preserve">
          <source>This alist holds the connection profile symbols and the associated variable settings. It is updated by &lt;code&gt;connection-local-set-profile-variables&lt;/code&gt;.</source>
          <target state="translated">该列表包含连接配置文件符号和关联的变量设置。它由 &lt;code&gt;connection-local-set-profile-variables&lt;/code&gt; 更新。</target>
        </trans-unit>
        <trans-unit id="8171e356e7dd4f8499ba5a1da391cc53d0f4bd00" translate="yes" xml:space="preserve">
          <source>This alist provides a mapping for the versions of Emacs that are associated with versions of a package listed in the &lt;code&gt;:package-version&lt;/code&gt; keyword. Its elements are:</source>
          <target state="translated">该列表提供与 &lt;code&gt;:package-version&lt;/code&gt; 关键字中列出的软件包版本相关联的Emacs版本的映射。其元素是：</target>
        </trans-unit>
        <trans-unit id="06592cb7cf21d4fcaa0dee8cb5604b4348587185" translate="yes" xml:space="preserve">
          <source>This allows you to add more methods, distinguished by &lt;var&gt;string&lt;/var&gt;, for the same specializers and qualifiers.</source>
          <target state="translated">这使您可以为相同的专门化 &lt;var&gt;string&lt;/var&gt; 和限定符添加更多由string区分的方法。</target>
        </trans-unit>
        <trans-unit id="c16f689854eb14d66c247d3bf3249725e2f016e1" translate="yes" xml:space="preserve">
          <source>This allows you to request an exact string match or search when calling a function that wants a regular expression.</source>
          <target state="translated">这允许你在调用一个想要使用正则表达式的函数时,请求一个精确的字符串匹配或搜索。</target>
        </trans-unit>
        <trans-unit id="47fb6ce0a178b4dc9378256a543571c1df9a44d5" translate="yes" xml:space="preserve">
          <source>This alternative can match any Lisp value, but if the user chooses this alternative, that selects the value &lt;var&gt;value&lt;/var&gt;.</source>
          <target state="translated">该替代方案可以匹配任何Lisp值，但是如果用户选择此替代方案，则将选择值 &lt;var&gt;value&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="112333b5519a3aed32902f3bc5970788aac3b12d" translate="yes" xml:space="preserve">
          <source>This appears in the customization buffer as a checklist, so that each of &lt;var&gt;types&lt;/var&gt; may have either one corresponding element or none. It is not possible to specify two different elements that match the same one of &lt;var&gt;types&lt;/var&gt;. For example, &lt;code&gt;(set integer symbol)&lt;/code&gt; allows one integer and/or one symbol in the list; it does not allow multiple integers or multiple symbols. As a result, it is rare to use nonspecific types such as &lt;code&gt;integer&lt;/code&gt; in a &lt;code&gt;set&lt;/code&gt;.</source>
          <target state="translated">这在自定义缓冲区中显示为一个清单，因此每种 &lt;var&gt;types&lt;/var&gt; 可以具有一个对应的元素，也可以没有。无法指定两个与同一 &lt;var&gt;types&lt;/var&gt; 之一匹配的不同元素。例如， &lt;code&gt;(set integer symbol)&lt;/code&gt; 允许列表中一个整数和/或一个符号；它不允许多个整数或多个符号。结果，很少在 &lt;code&gt;set&lt;/code&gt; 中使用非特定类型，例如 &lt;code&gt;integer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b36ce3a8c3a8ed5189ac8face0c668655a5e5f4c" translate="yes" xml:space="preserve">
          <source>This associates an image map of &lt;em&gt;hot spots&lt;/em&gt; with this image.</source>
          <target state="translated">这会将&lt;em&gt;热点&lt;/em&gt;的图像地图与此图像相关联。</target>
        </trans-unit>
        <trans-unit id="03693e568733886d4ead4bbfaae6a08b9fdd7df3" translate="yes" xml:space="preserve">
          <source>This auxiliary method will run &lt;em&gt;instead&lt;/em&gt; of the primary method. The most specific of such methods will be run before any other method. Such methods normally use &lt;code&gt;cl-call-next-method&lt;/code&gt;, described below, to invoke the other auxiliary or primary methods.</source>
          <target state="translated">该辅助方法将&lt;em&gt;代替&lt;/em&gt;主要方法运行。这些方法中最具体的方法将在其他任何方法之前运行。此类方法通常使用如下所述的 &lt;code&gt;cl-call-next-method&lt;/code&gt; 来调用其他辅助方法或主要方法。</target>
        </trans-unit>
        <trans-unit id="db147a312f33833d2fd860cd24397cb31dbf000a" translate="yes" xml:space="preserve">
          <source>This auxiliary method will run after the primary method. More accurately, all such methods will run after the primary, in the most-specific-last order.</source>
          <target state="translated">这个辅助方法将在主方法之后运行。更准确地说,所有这些方法都将在主要方法之后运行,以最特定的最后顺序运行。</target>
        </trans-unit>
        <trans-unit id="055c47046a5c43dada4f7a4d408ec55ea04beec6" translate="yes" xml:space="preserve">
          <source>This auxiliary method will run before the primary method. More accurately, all the &lt;code&gt;:before&lt;/code&gt; methods will run before the primary, in the most-specific-first order.</source>
          <target state="translated">该辅助方法将在主要方法之前运行。更准确地说，所有 &lt;code&gt;:before&lt;/code&gt; 方法将以最具体的优先顺序在主要对象之前运行。</target>
        </trans-unit>
        <trans-unit id="bee7bb3a89efc2fe0ae6cd1401c2134693f080dd" translate="yes" xml:space="preserve">
          <source>This behaves correctly whether or not &lt;code&gt;foo-mode&lt;/code&gt; was already enabled, since the &lt;code&gt;foo-mode&lt;/code&gt; mode command unconditionally enables the minor mode when it is called from Lisp with no argument. Disabling a minor mode in a mode hook is a little uglier:</source>
          <target state="translated">无论是否已启用 &lt;code&gt;foo-mode&lt;/code&gt; ，这都可以正确执行，因为 &lt;code&gt;foo-mode&lt;/code&gt; mode命令在从Lisp中不带参数调用时无条件地启用了次要模式。在模式挂钩中禁用次要模式比较麻烦：</target>
        </trans-unit>
        <trans-unit id="39ca8e6d40bb48a402fdef66a4a6b1b4a21a323e" translate="yes" xml:space="preserve">
          <source>This behaves like &lt;code&gt;scroll-down&lt;/code&gt;, except that if the selected window cannot be scrolled any further and the value of the variable &lt;code&gt;scroll-error-top-bottom&lt;/code&gt; is &lt;code&gt;t&lt;/code&gt;, it tries to move to the beginning of the buffer instead. If point is already there, it signals an error.</source>
          <target state="translated">行为类似于下 &lt;code&gt;scroll-down&lt;/code&gt; ，不同之处在于，如果无法进一步滚动所选窗口，并且变量 &lt;code&gt;scroll-error-top-bottom&lt;/code&gt; 的值为 &lt;code&gt;t&lt;/code&gt; ，它将尝试移至缓冲区的开头。如果该点已经存在，则表明存在错误。</target>
        </trans-unit>
        <trans-unit id="7f36ad1f78e72aecbe8b2c0b04e86ce649b99772" translate="yes" xml:space="preserve">
          <source>This behaves like &lt;code&gt;scroll-up&lt;/code&gt;, except that if the selected window cannot be scrolled any further and the value of the variable &lt;code&gt;scroll-error-top-bottom&lt;/code&gt; is &lt;code&gt;t&lt;/code&gt;, it tries to move to the end of the buffer instead. If point is already there, it signals an error.</source>
          <target state="translated">行为类似于上 &lt;code&gt;scroll-up&lt;/code&gt; ，不同之处在于，如果无法进一步滚动所选窗口，并且变量 &lt;code&gt;scroll-error-top-bottom&lt;/code&gt; 的值为 &lt;code&gt;t&lt;/code&gt; ，它将尝试移至缓冲区的末尾。如果该点已经存在，则表明存在错误。</target>
        </trans-unit>
        <trans-unit id="1ac98d0eafcb4e384476c40a7a906cd36426c915" translate="yes" xml:space="preserve">
          <source>This behavior is system-dependent; e.g., punctuation and whitespace are never ignored on Cygwin, regardless of locale.</source>
          <target state="translated">这种行为是依赖于系统的,例如,在Cygwin上,无论在什么地方,标点符号和空白都不会被忽略。</target>
        </trans-unit>
        <trans-unit id="854a75c9a12be07e055ae41e6e28be84d26fe4fb" translate="yes" xml:space="preserve">
          <source>This buffer-local variable contains the mode line information on process status in modes used for communicating with subprocesses. It is displayed immediately following the major mode name, with no intervening space. For example, its value in the</source>
          <target state="translated">这个缓冲区局部变量包含了用于与子进程通信的模式中进程状态的模式行信息。它紧跟在主要模式名称之后显示,中间没有空格。例如,它在</target>
        </trans-unit>
        <trans-unit id="26971293cec1b62350ce5f2ec93656e3fec17bfe" translate="yes" xml:space="preserve">
          <source>This buffer-local variable contains the name of the file being visited in the current buffer, or &lt;code&gt;nil&lt;/code&gt; if it is not visiting a file. It is a permanent local variable, unaffected by &lt;code&gt;kill-all-local-variables&lt;/code&gt;.</source>
          <target state="translated">此局部缓冲区变量包含当前缓冲区中正在访问的文件的名称，如果未访问文件，则为 &lt;code&gt;nil&lt;/code&gt; 。它是一个永久的局部变量，不受 &lt;code&gt;kill-all-local-variables&lt;/code&gt; 的影响。</target>
        </trans-unit>
        <trans-unit id="9b4f48a9402ce9021fdac6a00491950abfac8906" translate="yes" xml:space="preserve">
          <source>This buffer-local variable controls how control characters are displayed. If it is non-&lt;code&gt;nil&lt;/code&gt;, they are displayed as a caret followed by the character: &amp;lsquo;</source>
          <target state="translated">此缓冲区局部变量控制如何显示控制字符。如果不是 &lt;code&gt;nil&lt;/code&gt; ，则显示为插入符号，后跟字符：</target>
        </trans-unit>
        <trans-unit id="b82206ceced11bfe56f1845c4f3c481cd88baf44" translate="yes" xml:space="preserve">
          <source>This buffer-local variable controls how the buffer boundaries and window scrolling are indicated in the window fringes.</source>
          <target state="translated">这个缓冲区局部变量控制缓冲区边界和窗口滚动在窗口边缘的显示方式。</target>
        </trans-unit>
        <trans-unit id="d47a47cdae3010d7867a8d17862f4b478496c7b9" translate="yes" xml:space="preserve">
          <source>This buffer-local variable controls how the cursor looks in a selected window showing the buffer. If its value is &lt;code&gt;t&lt;/code&gt;, that means to use the cursor specified by the &lt;code&gt;cursor-type&lt;/code&gt; frame parameter. Otherwise, the value should be one of the cursor types listed above, and it overrides the &lt;code&gt;cursor-type&lt;/code&gt; frame parameter.</source>
          <target state="translated">此缓冲区局部变量控制光标在显示缓冲区的选定窗口中的外观。如果其值为 &lt;code&gt;t&lt;/code&gt; ，则表示使用由 &lt;code&gt;cursor-type&lt;/code&gt; frame参数指定的光标。否则，该值应该是上面列出的游标类型之一，并且它会覆盖 &lt;code&gt;cursor-type&lt;/code&gt; frame参数。</target>
        </trans-unit>
        <trans-unit id="d1ca4aa7c82d737697dd8d0d960d00652e403afa" translate="yes" xml:space="preserve">
          <source>This buffer-local variable controls how the cursor looks in a window that is not selected. It supports the same values as the &lt;code&gt;cursor-type&lt;/code&gt; frame parameter; also, &lt;code&gt;nil&lt;/code&gt; means don&amp;rsquo;t display a cursor in nonselected windows, and &lt;code&gt;t&lt;/code&gt; (the default) means use a standard modification of the usual cursor type (solid box becomes hollow box, and bar becomes a narrower bar).</source>
          <target state="translated">此局部缓冲区变量控制光标在未选中的窗口中的外观。它支持与 &lt;code&gt;cursor-type&lt;/code&gt; 帧参数相同的值；同样， &lt;code&gt;nil&lt;/code&gt; 表示不在未选择的窗口中显示光标，而 &lt;code&gt;t&lt;/code&gt; （默认值）表示对通常的光标类型进行标准修改（实心框变为空心框，而条形变为较窄的条形）。</target>
        </trans-unit>
        <trans-unit id="0dd7b89ebde5a492e44d747fc9dd3f1d69d5200e" translate="yes" xml:space="preserve">
          <source>This buffer-local variable determines whether searches should ignore case. If the variable is &lt;code&gt;nil&lt;/code&gt; they do not ignore case; otherwise (and by default) they do ignore case.</source>
          <target state="translated">此局部缓冲区变量确定搜索是否应忽略大小写。如果变量为 &lt;code&gt;nil&lt;/code&gt; ，则不忽略大小写；否则（默认情况下）它们会忽略大小写。</target>
        </trans-unit>
        <trans-unit id="a8e930f5d382fe096fe2bc1869a2652b42c52937" translate="yes" xml:space="preserve">
          <source>This buffer-local variable enables selective display. This means that lines, or portions of lines, may be made hidden.</source>
          <target state="translated">这个缓冲区局部变量可以实现选择性显示。这意味着行或行的一部分可以被隐藏。</target>
        </trans-unit>
        <trans-unit id="6ba2f1b5a0e175e95a9ac3488fc6f3ef00d32ac1" translate="yes" xml:space="preserve">
          <source>This buffer-local variable holds the &amp;ldquo;pretty&amp;rdquo; name of the current buffer&amp;rsquo;s major mode. Each major mode should set this variable so that the mode name will appear in the mode line. The value does not have to be a string, but can use any of the data types valid in a mode-line construct (see &lt;a href=&quot;mode-line-data#Mode-Line-Data&quot;&gt;Mode Line Data&lt;/a&gt;). To compute the string that will identify the mode name in the mode line, use &lt;code&gt;format-mode-line&lt;/code&gt; (see &lt;a href=&quot;emulating-mode-line#Emulating-Mode-Line&quot;&gt;Emulating Mode Line&lt;/a&gt;).</source>
          <target state="translated">此缓冲区局部变量保存当前缓冲区的主模式的&amp;ldquo;漂亮&amp;rdquo;名称。每个主要模式都应设置此变量，以便模式名称出现在模式行中。该值不必是字符串，但是可以使用在模式行构造中有效的任何数据类型（请参见&lt;a href=&quot;mode-line-data#Mode-Line-Data&quot;&gt;模式行数据&lt;/a&gt;）。要计算将在模式行中标识模式名称的字符串，请使用 &lt;code&gt;format-mode-line&lt;/code&gt; （请参见&lt;a href=&quot;emulating-mode-line#Emulating-Mode-Line&quot;&gt;模拟模式行&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="4e124125cb63da0d14822f14f50cd5c731f1bc04" translate="yes" xml:space="preserve">
          <source>This buffer-local variable holds the abbreviated truename of the file visited in the current buffer, or &lt;code&gt;nil&lt;/code&gt; if no file is visited. It is a permanent local, unaffected by &lt;code&gt;kill-all-local-variables&lt;/code&gt;. See &lt;a href=&quot;truenames#Truenames&quot;&gt;Truenames&lt;/a&gt;, and &lt;a href=&quot;directory-names#abbreviate_002dfile_002dname&quot;&gt;abbreviate-file-name&lt;/a&gt;.</source>
          <target state="translated">此缓冲区局部变量保存当前缓冲区中已访问文件的缩写真实名称，如果未访问任何文件，则为 &lt;code&gt;nil&lt;/code&gt; 。它是永久本地 &lt;code&gt;kill-all-local-variables&lt;/code&gt; ，不受kill-all-local-variables的影响。请参阅&lt;a href=&quot;truenames#Truenames&quot;&gt;Truenames&lt;/a&gt;和&lt;a href=&quot;directory-names#abbreviate_002dfile_002dname&quot;&gt;abbreviate-file-name&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9b844703a84e21272992606a4863c03e4e7e789d" translate="yes" xml:space="preserve">
          <source>This buffer-local variable holds the alist of file-local variable settings. Each element of the alist is of the form &lt;code&gt;(&lt;var&gt;var&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;value&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;var&lt;/var&gt; is a symbol of the local variable and &lt;var&gt;value&lt;/var&gt; is its value. When Emacs visits a file, it first collects all the file-local variables into this alist, and then the &lt;code&gt;hack-local-variables&lt;/code&gt; function applies them one by one.</source>
          <target state="translated">此缓冲区局部变量保存文件局部变量设置的列表。所述ALIST的每个元件的形式为 &lt;code&gt;(&lt;var&gt;var&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;value&lt;/var&gt;)&lt;/code&gt; ，其中， &lt;var&gt;var&lt;/var&gt; 是局部变量的符号和 &lt;var&gt;value&lt;/var&gt; 是其值。当Emacs访问文件时，它首先将所有文件本地变量收集到此列表中，然后 &lt;code&gt;hack-local-variables&lt;/code&gt; 函数将它们逐一应用。</target>
        </trans-unit>
        <trans-unit id="5fc5aab80adcb832f12f4a45e3b6e909ebe80df5" translate="yes" xml:space="preserve">
          <source>This buffer-local variable holds the file number and directory device number of the file visited in the current buffer, or &lt;code&gt;nil&lt;/code&gt; if no file or a nonexistent file is visited. It is a permanent local, unaffected by &lt;code&gt;kill-all-local-variables&lt;/code&gt;.</source>
          <target state="translated">此缓冲区局部变量保存在当前缓冲区中访问的文件的文件号和目录设备号；如果未访问任何文件或不存在的文件，则为 &lt;code&gt;nil&lt;/code&gt; 。它是永久本地 &lt;code&gt;kill-all-local-variables&lt;/code&gt; ，不受kill-all-local-variables的影响。</target>
        </trans-unit>
        <trans-unit id="a451d75ee2557e01f0400b09d2af9045e48761c6" translate="yes" xml:space="preserve">
          <source>This buffer-local variable is either &lt;code&gt;nil&lt;/code&gt; or a function for Font Lock mode to call to determine the region to scan and fontify.</source>
          <target state="translated">此局部缓冲区变量为 &lt;code&gt;nil&lt;/code&gt; 或&amp;ldquo;字体锁定&amp;rdquo;模式的函数以调用以确定要扫描和字体化的区域。</target>
        </trans-unit>
        <trans-unit id="c4881b1a5764ec2cc333276f7885b261fa887500" translate="yes" xml:space="preserve">
          <source>This buffer-local variable is the name of the file used for auto-saving the current buffer. It is &lt;code&gt;nil&lt;/code&gt; if the buffer should not be auto-saved.</source>
          <target state="translated">此局部缓冲区变量是用于自动保存当前缓冲区的文件的名称。如果不应自动保存缓冲区，则 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="92e1c1c14e58f4755d743d128bbd4758cf2daf8e" translate="yes" xml:space="preserve">
          <source>This buffer-local variable records the coding system used for saving the buffer and for writing part of the buffer with &lt;code&gt;write-region&lt;/code&gt;. If the text to be written cannot be safely encoded using the coding system specified by this variable, these operations select an alternative encoding by calling the function &lt;code&gt;select-safe-coding-system&lt;/code&gt; (see &lt;a href=&quot;user_002dchosen-coding-systems#User_002dChosen-Coding-Systems&quot;&gt;User-Chosen Coding Systems&lt;/a&gt;). If selecting a different encoding requires to ask the user to specify a coding system, &lt;code&gt;buffer-file-coding-system&lt;/code&gt; is updated to the newly selected coding system.</source>
          <target state="translated">此缓冲区局部变量记录用于保存缓冲区以及使用 &lt;code&gt;write-region&lt;/code&gt; 写入缓冲区的一部分的编码系统。如果无法使用此变量指定的编码系统对要写入的文本进行安全编码，则这些操作将通过调用函数 &lt;code&gt;select-safe-coding-system&lt;/code&gt; （请参阅&lt;a href=&quot;user_002dchosen-coding-systems#User_002dChosen-Coding-Systems&quot;&gt;User-Chosen编码系统&lt;/a&gt;）来选择其他编码。如果选择其他编码要求用户指定编码系统，则将 &lt;code&gt;buffer-file-coding-system&lt;/code&gt; 更新为新选择的编码系统。</target>
        </trans-unit>
        <trans-unit id="17efdfc6682eda1e0603a92ff93b7b0758219f13" translate="yes" xml:space="preserve">
          <source>This buffer-local variable records the number of times a buffer has been displayed in a window. It is incremented each time &lt;code&gt;set-window-buffer&lt;/code&gt; is called for the buffer.</source>
          <target state="translated">此缓冲区局部变量记录缓冲区在窗口中显示的次数。每次 &lt;code&gt;set-window-buffer&lt;/code&gt; 调用set-window-buffer时，它都会增加。</target>
        </trans-unit>
        <trans-unit id="490c47d457b534b7dc5f22d93a13a9aa33bae8cf" translate="yes" xml:space="preserve">
          <source>This buffer-local variable records the time at which a buffer was last displayed in a window. The value is &lt;code&gt;nil&lt;/code&gt; if the buffer has never been displayed. It is updated each time &lt;code&gt;set-window-buffer&lt;/code&gt; is called for the buffer, with the value returned by &lt;code&gt;current-time&lt;/code&gt; (see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;).</source>
          <target state="translated">此缓冲区局部变量记录缓冲区最后一次在窗口中显示的时间。如果从未显示过该缓冲区，则该值为 &lt;code&gt;nil&lt;/code&gt; 。每次 &lt;code&gt;set-window-buffer&lt;/code&gt; 调用set-window-buffer时都会更新该值，并使用 &lt;code&gt;current-time&lt;/code&gt; 返回的值（请参阅&lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="a8f2327684accfcd211b2b72beee01fea76508f1" translate="yes" xml:space="preserve">
          <source>This buffer-local variable says whether this buffer&amp;rsquo;s file has been backed up on account of this buffer. If it is non-&lt;code&gt;nil&lt;/code&gt;, the backup file has been written. Otherwise, the file should be backed up when it is next saved (if backups are enabled). This is a permanent local; &lt;code&gt;kill-all-local-variables&lt;/code&gt; does not alter it.</source>
          <target state="translated">此缓冲区局部变量表示是否已由于该缓冲区而备份了该缓冲区的文件。如果为非 &lt;code&gt;nil&lt;/code&gt; ，则已写入备份文件。否则，应在下次保存文件时备份文件（如果启用了备份）。这是一个永久性的地方； &lt;code&gt;kill-all-local-variables&lt;/code&gt; 不会更改它。</target>
        </trans-unit>
        <trans-unit id="a6afe8a14ae8e8b156dda8ff2db27360c5718f45" translate="yes" xml:space="preserve">
          <source>This buffer-local variable specifies a string to display in a buffer listing where the visited file name would go, for buffers that don&amp;rsquo;t have a visited file name. Dired buffers use this variable.</source>
          <target state="translated">对于没有访问文件名的缓冲区，此局部缓冲区变量指定一个字符串，该字符串显示在要访问的文件名所在的缓冲区列表中。Dired缓冲区使用此变量。</target>
        </trans-unit>
        <trans-unit id="33f15a604b26fdc36df67e09f9ee034fbd85e8f8" translate="yes" xml:space="preserve">
          <source>This buffer-local variable specifies the entries displayed in the Tabulated List buffer. Its value should be either a list, or a function.</source>
          <target state="translated">这个缓冲区局部变量指定了Tabulated List缓冲区中显示的条目。它的值应该是一个列表,或者一个函数。</target>
        </trans-unit>
        <trans-unit id="1f21c98e32a9f3b76b68fe2c0ec081e8dc6806ef" translate="yes" xml:space="preserve">
          <source>This buffer-local variable specifies the format of the Tabulated List data. Its value should be a vector. Each element of the vector represents a data column, and should be a list &lt;code&gt;(&lt;var&gt;name&lt;/var&gt;
&lt;var&gt;width&lt;/var&gt; &lt;var&gt;sort&lt;/var&gt;)&lt;/code&gt;, where</source>
          <target state="translated">此局部缓冲区变量指定列表列表数据的格式。它的值应该是一个向量。向量的每个元素代表一个数据列，并且应该是一个列表 &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; &lt;var&gt;width&lt;/var&gt; &lt;var&gt;sort&lt;/var&gt;)&lt;/code&gt; ，其中</target>
        </trans-unit>
        <trans-unit id="7d93991750b7ab5c35f32d42a2ffeee9b4c05c0b" translate="yes" xml:space="preserve">
          <source>This buffer-local variable specifies the mapping from logical fringe indicators to the actual bitmaps displayed in the window fringes. The value is an alist of elements &lt;code&gt;(&lt;var&gt;indicator&lt;/var&gt;
. &lt;var&gt;bitmaps&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;indicator&lt;/var&gt; specifies a logical indicator type and &lt;var&gt;bitmaps&lt;/var&gt; specifies the fringe bitmaps to use for that indicator.</source>
          <target state="translated">此局部缓冲区变量指定从逻辑边缘指示符到窗口边缘中显示的实际位图的映射。该值是元件的ALIST &lt;code&gt;(&lt;var&gt;indicator&lt;/var&gt; . &lt;var&gt;bitmaps&lt;/var&gt;)&lt;/code&gt; ，其中 &lt;var&gt;indicator&lt;/var&gt; 指定一个逻辑指示器类型和 &lt;var&gt;bitmaps&lt;/var&gt; 指定的位图条纹要用于该指示器。</target>
        </trans-unit>
        <trans-unit id="95f79b46eda8b35210d2e89e82a7e8d8ef12856c" translate="yes" xml:space="preserve">
          <source>This buffer-local variable specifies the maximum width of filled lines. Its value should be an integer, which is a number of columns. All the filling, justification, and centering commands are affected by this variable, including Auto Fill mode (see &lt;a href=&quot;auto-filling#Auto-Filling&quot;&gt;Auto Filling&lt;/a&gt;).</source>
          <target state="translated">此局部缓冲区变量指定填充线的最大宽度。它的值应该是整数，即列数。所有填充，对齐和居中命令均受此变量影响，包括&amp;ldquo;自动填充&amp;rdquo;模式（请参见&amp;ldquo;&lt;a href=&quot;auto-filling#Auto-Filling&quot;&gt;自动填充&amp;rdquo;&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="f8f2592db81aaca5fc86b5802b4f2f8b03f39872" translate="yes" xml:space="preserve">
          <source>This buffer-local variable specifies whether the buffer is read-only. The buffer is read-only if this variable is non-&lt;code&gt;nil&lt;/code&gt;. However, characters that have the &lt;code&gt;inhibit-read-only&lt;/code&gt; text property can still be modified. See &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;inhibit-read-only&lt;/a&gt;.</source>
          <target state="translated">此局部缓冲区变量指定缓冲区是否为只读。如果此变量为非 &lt;code&gt;nil&lt;/code&gt; ,则缓冲区为只读。但是，仍可以修改具有 &lt;code&gt;inhibit-read-only&lt;/code&gt; 文本属性的字符。请参阅&lt;a href=&quot;special-properties#Special-Properties&quot;&gt;禁止只读&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ba4e4c7bb2e6beb986d7edbdf9f9f73ca6bc6ef6" translate="yes" xml:space="preserve">
          <source>This buffer-local variable&amp;rsquo;s value is the undo list of the current buffer. A value of &lt;code&gt;t&lt;/code&gt; disables the recording of undo information.</source>
          <target state="translated">此缓冲区局部变量的值是当前缓冲区的撤消列表。 &lt;code&gt;t&lt;/code&gt; 值禁用记录撤销信息。</target>
        </trans-unit>
        <trans-unit id="0e00182350e8c8a67e59796df018436e5b1d317d" translate="yes" xml:space="preserve">
          <source>This buffer-local variable, if non-&lt;code&gt;nil&lt;/code&gt;, specifies a string of text that appears at the beginning of normal text lines and should be disregarded when filling them. Any line that fails to start with the fill prefix is considered the start of a paragraph; so is any line that starts with the fill prefix followed by additional whitespace. Lines that start with the fill prefix but no additional whitespace are ordinary text lines that can be filled together. The resulting filled lines also start with the fill prefix.</source>
          <target state="translated">如果不是 &lt;code&gt;nil&lt;/code&gt; ，则此局部缓冲区变量指定一个字符串，该字符串出现在普通文本行的开头，并且在填充它们时应被忽略。任何以填充前缀开头的行均视为段落的开头；以填充前缀开头，后跟其他空格的任何行也是如此。以填充前缀开头但没有其他空格的行是可以填充在一起的普通文本行。结果填充线也以填充前缀开头。</target>
        </trans-unit>
        <trans-unit id="1f12b832fb97ab9906c39f3f82fb2c33f026453d" translate="yes" xml:space="preserve">
          <source>This buffer-local variable, if set to a non-&lt;code&gt;nil&lt;/code&gt; value, makes &lt;code&gt;save-buffer&lt;/code&gt; behave as if the buffer were visiting its file literally, i.e., without conversions of any kind. The command &lt;code&gt;find-file-literally&lt;/code&gt; sets this variable&amp;rsquo;s local value, but other equivalent functions and commands can do that as well, e.g., to avoid automatic addition of a newline at the end of the file. This variable is permanent local, so it is unaffected by changes of major modes.</source>
          <target state="translated">如果将此缓冲区局部变量设置为非 &lt;code&gt;nil&lt;/code&gt; 值，则使 &lt;code&gt;save-buffer&lt;/code&gt; 行为就好像缓冲区实际上是在访问其文件一样，即不进行任何类型的转换。命令 &lt;code&gt;find-file-literally&lt;/code&gt; 设置了此变量的局部值，但是其他等效函数和命令也可以这样做，例如，避免在文件末尾自动添加换行符。此变量是永久局部变量，因此不受主要模式更改的影响。</target>
        </trans-unit>
        <trans-unit id="cf2cad6b6d3bf4768a93f4a38fbba84aa555a104" translate="yes" xml:space="preserve">
          <source>This built-in variable is the keymap used as the minibuffer local keymap in the function &lt;code&gt;read-no-blanks-input&lt;/code&gt;. By default, it makes the following bindings, in addition to those of &lt;code&gt;minibuffer-local-map&lt;/code&gt;:</source>
          <target state="translated">此内置变量是在功能 &lt;code&gt;read-no-blanks-input&lt;/code&gt; 中用作迷你缓冲区本地键映射的键映射。默认情况下，除了 &lt;code&gt;minibuffer-local-map&lt;/code&gt; 的绑定之外，它还会进行以下绑定：</target>
        </trans-unit>
        <trans-unit id="8723bd0b8c12c1c24f9d8e83b7ed5a4f8794b456" translate="yes" xml:space="preserve">
          <source>This call evaluates the body of the lambda expression with the variable &lt;code&gt;a&lt;/code&gt; bound to 1, &lt;code&gt;b&lt;/code&gt; bound to 2, and &lt;code&gt;c&lt;/code&gt; bound to 3. Evaluation of the body adds these three numbers, producing the result 6; therefore, this call to the function returns the value 6.</source>
          <target state="translated">此调用使用变量 &lt;code&gt;a&lt;/code&gt; 绑定到1， &lt;code&gt;b&lt;/code&gt; 绑定到2， &lt;code&gt;c&lt;/code&gt; 绑定到3来评估lambda表达式的主体。对该主体的评估将这三个数字相加，得出结果6；因此，对函数的此调用返回值6。</target>
        </trans-unit>
        <trans-unit id="7df938cb4e7a1af5452ae3a2da0110e086da7423" translate="yes" xml:space="preserve">
          <source>This calls &lt;var&gt;map-function&lt;/var&gt; for each data element in &lt;var&gt;ewoc&lt;/var&gt; and updates those nodes for which &lt;var&gt;map-function&lt;/var&gt; returns non-&lt;code&gt;nil&lt;/code&gt;. Any &lt;var&gt;args&lt;/var&gt; are passed to &lt;var&gt;map-function&lt;/var&gt;.</source>
          <target state="translated">这个调用 &lt;var&gt;map-function&lt;/var&gt; 用于每个数据元素 &lt;var&gt;ewoc&lt;/var&gt; 并更新这些节点为哪些 &lt;var&gt;map-function&lt;/var&gt; 返回非 &lt;code&gt;nil&lt;/code&gt; 。任何 &lt;var&gt;args&lt;/var&gt; 都传递给 &lt;var&gt;map-function&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="ff5d6fa36d5b7de2c29bc06421c8c4fedddf5293" translate="yes" xml:space="preserve">
          <source>This calls &lt;var&gt;predicate&lt;/var&gt; for each data element in &lt;var&gt;ewoc&lt;/var&gt; and deletes those nodes for which &lt;var&gt;predicate&lt;/var&gt; returns &lt;code&gt;nil&lt;/code&gt;. Any &lt;var&gt;args&lt;/var&gt; are passed to &lt;var&gt;predicate&lt;/var&gt;.</source>
          <target state="translated">这为 &lt;var&gt;ewoc&lt;/var&gt; 中的每个数据元素调用 &lt;var&gt;predicate&lt;/var&gt; ，并删除 &lt;var&gt;predicate&lt;/var&gt; 为其返回 &lt;code&gt;nil&lt;/code&gt; 的那些节点。任何 &lt;var&gt;args&lt;/var&gt; 都传递给 &lt;var&gt;predicate&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="fa0b9b67826a22ee95d4084d49aa21ce9290fa0f" translate="yes" xml:space="preserve">
          <source>This calls &lt;var&gt;predicate&lt;/var&gt; for each data element in &lt;var&gt;ewoc&lt;/var&gt; and returns a list of those elements for which &lt;var&gt;predicate&lt;/var&gt; returns non-&lt;code&gt;nil&lt;/code&gt;. The elements in the list are ordered as in the buffer. Any &lt;var&gt;args&lt;/var&gt; are passed to &lt;var&gt;predicate&lt;/var&gt;.</source>
          <target state="translated">这为 &lt;var&gt;ewoc&lt;/var&gt; 中的每个数据元素调用 &lt;var&gt;predicate&lt;/var&gt; ，并返回 &lt;var&gt;predicate&lt;/var&gt; 返回非 &lt;code&gt;nil&lt;/code&gt; 的那些元素的列表。列表中的元素按缓冲区中的顺序排列。任何 &lt;var&gt;args&lt;/var&gt; 都传递给 &lt;var&gt;predicate&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="c6f9cae052c0af057cc1d5f011d50e57b115567c" translate="yes" xml:space="preserve">
          <source>This calls the &lt;code&gt;get_environment&lt;/code&gt; function using the pointer provided in the &lt;code&gt;runtime&lt;/code&gt; structure to retrieve a pointer to the</source>
          <target state="translated">这会使用 &lt;code&gt;runtime&lt;/code&gt; 结构中提供的指针来调用 &lt;code&gt;get_environment&lt;/code&gt; 函数，以检索指向该指针的指针。</target>
        </trans-unit>
        <trans-unit id="d702da8b738c83c40c883dea2c26bc538f85c010" translate="yes" xml:space="preserve">
          <source>This can be counterintuitive, in particular if &lt;var&gt;W4&lt;/var&gt; were used for displaying a buffer only temporarily (see &lt;a href=&quot;temporary-displays#Temporary-Displays&quot;&gt;Temporary Displays&lt;/a&gt;), and you want to continue working with the initial layout.</source>
          <target state="translated">这可能是违反直觉的，特别是如果 &lt;var&gt;W4&lt;/var&gt; 仅用于&lt;a href=&quot;temporary-displays#Temporary-Displays&quot;&gt;临时显示&lt;/a&gt;缓冲区（请参见临时显示），并且您想继续使用初始布局。</target>
        </trans-unit>
        <trans-unit id="7a4f216c24b473c3700bc04233588051f1f3d763" translate="yes" xml:space="preserve">
          <source>This can be customized by changing the map &lt;code&gt;Helper-help-map&lt;/code&gt;.</source>
          <target state="translated">可以通过更改地图 &lt;code&gt;Helper-help-map&lt;/code&gt; 进行自定义。</target>
        </trans-unit>
        <trans-unit id="a9fec3408eb874f74534306e5560ffc4364f881e" translate="yes" xml:space="preserve">
          <source>This can only be used for functions, and tells the compiler to use &lt;var&gt;expander&lt;/var&gt; as an optimization function. When encountering a call to the function, of the form &lt;code&gt;(&lt;var&gt;function&lt;/var&gt; &lt;var&gt;args&lt;/var&gt;&amp;hellip;)&lt;/code&gt;, the macro expander will call &lt;var&gt;expander&lt;/var&gt; with that form as well as with &lt;var&gt;args&lt;/var&gt;&amp;hellip;, and &lt;var&gt;expander&lt;/var&gt; can either return a new expression to use instead of the function call, or it can return just the form unchanged, to indicate that the function call should be left alone. &lt;var&gt;expander&lt;/var&gt; can be a symbol, or it can be a form &lt;code&gt;(lambda (&lt;var&gt;arg&lt;/var&gt;) &lt;var&gt;body&lt;/var&gt;)&lt;/code&gt; in which case &lt;var&gt;arg&lt;/var&gt; will hold the original function call expression, and the (unevaluated) arguments to the function can be accessed using the function&amp;rsquo;s formal arguments.</source>
          <target state="translated">这只能用于函数，并告诉编译器将 &lt;var&gt;expander&lt;/var&gt; 用作优化函数。遇到对形式为函数 &lt;code&gt;(&lt;var&gt;function&lt;/var&gt; &lt;var&gt;args&lt;/var&gt;&amp;hellip;)&lt;/code&gt; 调用时，宏扩展器将使用该形式以及 &lt;var&gt;args&lt;/var&gt; &amp;hellip;调用 &lt;var&gt;expander&lt;/var&gt; ，并且 &lt;var&gt;expander&lt;/var&gt; 可以返回要使用的新表达式来代替函数调用，或者它可以只返回不变的形式，以指示应单独保留函数调用。 &lt;var&gt;expander&lt;/var&gt; 可以是一个符号，也可以是一个形式 &lt;code&gt;(lambda (&lt;var&gt;arg&lt;/var&gt;) &lt;var&gt;body&lt;/var&gt;)&lt;/code&gt; &lt;var&gt;arg&lt;/var&gt; ） &lt;var&gt;body&lt;/var&gt; ），在这种情况下， &lt;var&gt;arg&lt;/var&gt; 将保留原始函数调用表达式，并且可以使用函数的形式参数来访问函数的（未求值）参数。</target>
        </trans-unit>
        <trans-unit id="d76e4e8676364aca2a2925eb23ab9724d9ecdea6" translate="yes" xml:space="preserve">
          <source>This cancels the requested action for &lt;var&gt;timer&lt;/var&gt;, which should be a timer&amp;mdash;usually, one previously returned by &lt;code&gt;run-at-time&lt;/code&gt; or &lt;code&gt;run-with-idle-timer&lt;/code&gt;. This cancels the effect of that call to one of these functions; the arrival of the specified time will not cause anything special to happen.</source>
          <target state="translated">这将取消为 &lt;var&gt;timer&lt;/var&gt; 请求的操作，该操作应为计时器，通常是 &lt;code&gt;run-at-time&lt;/code&gt; 或 &lt;code&gt;run-with-idle-timer&lt;/code&gt; 先前返回的计时器。这取消了对这些功能之一的调用的效果；指定时间的到来不会引起任何特殊情况。</target>
        </trans-unit>
        <trans-unit id="e94ed11b42bb2c5d6e6ccb611120710d2777672d" translate="yes" xml:space="preserve">
          <source>This chapter covers the special issues relating to characters and how they are stored in strings and buffers.</source>
          <target state="translated">本章涵盖了与字符有关的特殊问题,以及如何将它们存储在字符串和缓冲区中。</target>
        </trans-unit>
        <trans-unit id="5e6dc1c0b855c30b55cd1ad2a42304656c13efd2" translate="yes" xml:space="preserve">
          <source>This chapter describes a number of features related to the display that Emacs presents to the user.</source>
          <target state="translated">本章介绍了一些与Emacs呈现给用户的显示相关的功能。</target>
        </trans-unit>
        <trans-unit id="f9d44ec4230e8c98e3b0d70421a47d7d9f465cfe" translate="yes" xml:space="preserve">
          <source>This chapter describes how the runnable Emacs executable is dumped with the preloaded Lisp libraries in it, how storage is allocated, and some internal aspects of GNU Emacs that may be of interest to C programmers.</source>
          <target state="translated">本章介绍了可运行的Emacs可执行文件如何与预装的Lisp库一起转储,如何分配存储空间,以及C语言程序员可能感兴趣的GNU Emacs的一些内部问题。</target>
        </trans-unit>
        <trans-unit id="624fde145402f8d6d3fe708e7379facc34f635dc" translate="yes" xml:space="preserve">
          <source>This chapter describes how to write both major and minor modes, how to indicate them in the mode line, and how they run hooks supplied by the user. For related topics such as keymaps and syntax tables, see &lt;a href=&quot;keymaps#Keymaps&quot;&gt;Keymaps&lt;/a&gt;, and &lt;a href=&quot;syntax-tables#Syntax-Tables&quot;&gt;Syntax Tables&lt;/a&gt;.</source>
          <target state="translated">本章介绍如何编写主要和次要模式，如何在模式行中指示它们，以及它们如何运行用户提供的挂钩。有关键盘映射表和语法表等相关主题，请参见&lt;a href=&quot;keymaps#Keymaps&quot;&gt;键盘映射表&lt;/a&gt;和&lt;a href=&quot;syntax-tables#Syntax-Tables&quot;&gt;语法表&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8a73f07a25208a8d5d49ebc9c53e00d0e6c83fb7" translate="yes" xml:space="preserve">
          <source>This chapter describes the Emacs Lisp functions and variables to find, create, view, save, and otherwise work with files and directories. A few other file-related functions are described in &lt;a href=&quot;buffers#Buffers&quot;&gt;Buffers&lt;/a&gt;, and those related to backups and auto-saving are described in &lt;a href=&quot;backups-and-auto_002dsaving#Backups-and-Auto_002dSaving&quot;&gt;Backups and Auto-Saving&lt;/a&gt;.</source>
          <target state="translated">本章介绍Emacs Lisp函数和变量，以查找，创建，查看，保存以及以其他方式使用文件和目录。&lt;a href=&quot;buffers#Buffers&quot;&gt;缓冲区&lt;/a&gt;中描述了其他一些与文件相关的功能，备份和自动保存中描述了与&lt;a href=&quot;backups-and-auto_002dsaving#Backups-and-Auto_002dSaving&quot;&gt;备份和自动保存相关的功能&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7545c843ef69f6c82fc1ea31eff1598a7ea2b3fe" translate="yes" xml:space="preserve">
          <source>This chapter describes the Lisp functions for reading and printing. It also describes &lt;em&gt;streams&lt;/em&gt;, which specify where to get the text (if reading) or where to put it (if printing).</source>
          <target state="translated">本章介绍Lisp的读取和打印功能。它还描述了&lt;em&gt;流&lt;/em&gt;，该&lt;em&gt;流&lt;/em&gt;指定在哪里获取文本（如果阅读）或在哪里放置文本（如果打印）。</target>
        </trans-unit>
        <trans-unit id="22f7ace6e4e685bb92ce56087226787d9be96ca9" translate="yes" xml:space="preserve">
          <source>This chapter describes the functions and variables related to Emacs windows. See &lt;a href=&quot;frames#Frames&quot;&gt;Frames&lt;/a&gt;, for how windows are assigned an area of screen available for Emacs to use. See &lt;a href=&quot;display#Display&quot;&gt;Display&lt;/a&gt;, for information on how text is displayed in windows.</source>
          <target state="translated">本章介绍与Emacs窗口相关的功能和变量。有关如何为窗口分配Emacs可以使用的屏幕区域的信息，请参见&lt;a href=&quot;frames#Frames&quot;&gt;Frames&lt;/a&gt;。有关在Windows中如何显示文本的信息，请参见&lt;a href=&quot;display#Display&quot;&gt;显示&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d3459b2e5b0998d91d15863048a7a8c8ef91b8b9" translate="yes" xml:space="preserve">
          <source>This chapter describes the functions that deal with the text in a buffer. Most examine, insert, or delete text in the current buffer, often operating at point or on text adjacent to point. Many are interactive. All the functions that change the text provide for undoing the changes (see &lt;a href=&quot;undo#Undo&quot;&gt;Undo&lt;/a&gt;).</source>
          <target state="translated">本章介绍处理缓冲区中文本的功能。大多数检查，插入或删除当前缓冲区中的文本，通常是在点上或在与点相邻的文本上进行操作。许多是互动的。所有更改文本的功能都提供了撤消更改的功能（请参见&lt;a href=&quot;undo#Undo&quot;&gt;Undo&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="0ce20f2b5347d828084fd6cba60b6ec5ee82ff2b" translate="yes" xml:space="preserve">
          <source>This chapter describes the purpose, printed representation, and read syntax of each of the standard types in GNU Emacs Lisp. Details on how to use these types can be found in later chapters.</source>
          <target state="translated">本章描述了GNU Emacs Lisp中每个标准类型的目的、打印表示和读取语法。关于如何使用这些类型的细节可以在后面的章节中找到。</target>
        </trans-unit>
        <trans-unit id="86f185ef4f486aa57761ecc92952412adc8958cf" translate="yes" xml:space="preserve">
          <source>This chapter is about starting and getting out of Emacs, access to values in the operating system environment, and terminal input, output.</source>
          <target state="translated">本章主要介绍Emacs的启动和退出、操作系统环境下的数值访问以及终端输入、输出。</target>
        </trans-unit>
        <trans-unit id="00f4501f6e1912e4ba9feed5929100e344d32bfb" translate="yes" xml:space="preserve">
          <source>This class is used for backslash in TeX mode.</source>
          <target state="translated">该类用于TeX模式下的反斜杠。</target>
        </trans-unit>
        <trans-unit id="80d3a7c8c29e5451d6afbe84d9e7d4cd1c702c79" translate="yes" xml:space="preserve">
          <source>This code character is meaningful only at the beginning of the interactive string, and it does not look for a prompt or a newline. It is a single, isolated character.</source>
          <target state="translated">这个代码字符只有在交互式字符串的开头才有意义,它不会寻找提示符或换行符。它是一个单独的、孤立的字符。</target>
        </trans-unit>
        <trans-unit id="65e11c6537eb3dae64d6ce18fb017a203438b2e0" translate="yes" xml:space="preserve">
          <source>This code letter computes an argument without reading any input. Therefore, it does not use a prompt string, and any prompt string you supply is ignored.</source>
          <target state="translated">这个代码信在不读取任何输入的情况下计算一个参数,因此,它不使用提示符,你提供的任何提示符都会被忽略。因此,它不使用提示字符串,你提供的任何提示字符串都会被忽略。</target>
        </trans-unit>
        <trans-unit id="48852d1aa23644651ff3c065e69dbc3dadaaa7f7" translate="yes" xml:space="preserve">
          <source>This command &lt;em&gt;suspends&lt;/em&gt; a frame. For GUI frames, it calls &lt;code&gt;iconify-frame&lt;/code&gt; (see &lt;a href=&quot;visibility-of-frames#Visibility-of-Frames&quot;&gt;Visibility of Frames&lt;/a&gt;); for frames on text terminals, it calls either &lt;code&gt;suspend-emacs&lt;/code&gt; or &lt;code&gt;suspend-tty&lt;/code&gt;, depending on whether the frame is displayed on the controlling terminal device or not.</source>
          <target state="translated">此命令&lt;em&gt;挂起&lt;/em&gt;一帧。对于GUI框架，它调用 &lt;code&gt;iconify-frame&lt;/code&gt; （请参见&lt;a href=&quot;visibility-of-frames#Visibility-of-Frames&quot;&gt;框架的可见性&lt;/a&gt;）；对于文本终端上的帧，它会根据是否在控制终端设备上显示帧来调用 &lt;code&gt;suspend-emacs&lt;/code&gt; 或 &lt;code&gt;suspend-tty&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cf23ed7494ffe60a0c253320c71f24adff27e634" translate="yes" xml:space="preserve">
          <source>This command activates input method &lt;var&gt;input-method&lt;/var&gt; for the current buffer. It also sets &lt;code&gt;default-input-method&lt;/code&gt; to &lt;var&gt;input-method&lt;/var&gt;. If &lt;var&gt;input-method&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this command deactivates any input method for the current buffer.</source>
          <target state="translated">该命令激活当前缓冲区的输入法 &lt;var&gt;input-method&lt;/var&gt; 。它还将 &lt;code&gt;default-input-method&lt;/code&gt; 设置为 &lt;var&gt;input-method&lt;/var&gt; 。如果 &lt;var&gt;input-method&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，那么此命令将停用当前缓冲区的任何输入方法。</target>
        </trans-unit>
        <trans-unit id="59686f85758b5b8941bc715cb7ba63e9cd1610c4" translate="yes" xml:space="preserve">
          <source>This command adds a local rule to adjust the indentation of the current line.</source>
          <target state="translated">该命令增加了一个局部规则,用于调整当前行的缩进。</target>
        </trans-unit>
        <trans-unit id="0a7e7476526cfeca449ad69638788acc4bdbbf40" translate="yes" xml:space="preserve">
          <source>This command adds to the numeric argument for the next command. The argument &lt;var&gt;arg&lt;/var&gt; is the raw prefix argument as it was before this command; its value is negated to form the new prefix argument. Don&amp;rsquo;t call this command yourself unless you know what you are doing.</source>
          <target state="translated">该命令将添加到下一个命令的数字参数中。参数 &lt;var&gt;arg&lt;/var&gt; 是该命令之前的原始前缀参数。其值取反以形成新的prefix参数。除非您知道自己在做什么，否则不要自己调用此命令。</target>
        </trans-unit>
        <trans-unit id="74d9295bb5207f902c4cd8cbf762fbfceb95af5c" translate="yes" xml:space="preserve">
          <source>This command adds to the prefix argument for the following command. The argument &lt;var&gt;arg&lt;/var&gt; is the raw prefix argument as it was before this command; it is used to compute the updated prefix argument. Don&amp;rsquo;t call this command yourself unless you know what you are doing.</source>
          <target state="translated">此命令添加到以下命令的prefix参数中。参数 &lt;var&gt;arg&lt;/var&gt; 是该命令之前的原始前缀参数。它用于计算更新的前缀参数。除非您知道自己在做什么，否则不要自己调用此命令。</target>
        </trans-unit>
        <trans-unit id="8459d4f1dc04b4b16629ae0b5ecd274964f50c86" translate="yes" xml:space="preserve">
          <source>This command adjusts the height or width of &lt;var&gt;window&lt;/var&gt; to fit the text in it. It returns non-&lt;code&gt;nil&lt;/code&gt; if it was able to resize &lt;var&gt;window&lt;/var&gt;, and &lt;code&gt;nil&lt;/code&gt; otherwise. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window. Otherwise, it should be a live window.</source>
          <target state="translated">此命令调整 &lt;var&gt;window&lt;/var&gt; 的高度或宽度以适合其中的文本。如果能够调整 &lt;var&gt;window&lt;/var&gt; 的大小，则返回 &lt;code&gt;nil&lt;/code&gt; 否则返回 &lt;code&gt;nil&lt;/code&gt; 。如果 &lt;var&gt;window&lt;/var&gt; 省略或为 &lt;code&gt;nil&lt;/code&gt; ，则默认为所选窗口。否则，它应该是活动窗口。</target>
        </trans-unit>
        <trans-unit id="fc6cbfe7ed2009b0dfc3f99d4b4705910652bf0b" translate="yes" xml:space="preserve">
          <source>This command adjusts the size of &lt;var&gt;frame&lt;/var&gt; to display the contents of its buffer exactly. &lt;var&gt;frame&lt;/var&gt; can be any live frame and defaults to the selected one. Fitting is done only if &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s root window is live. The arguments &lt;var&gt;max-height&lt;/var&gt;, &lt;var&gt;min-height&lt;/var&gt;, &lt;var&gt;max-width&lt;/var&gt; and &lt;var&gt;min-width&lt;/var&gt; specify bounds on the new total size of &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s root window. &lt;var&gt;min-height&lt;/var&gt; and &lt;var&gt;min-width&lt;/var&gt; default to the values of &lt;code&gt;window-min-height&lt;/code&gt; and &lt;code&gt;window-min-width&lt;/code&gt; respectively.</source>
          <target state="translated">此命令调整 &lt;var&gt;frame&lt;/var&gt; 的大小以准确显示其缓冲区的内容。 &lt;var&gt;frame&lt;/var&gt; 可以是任何实时帧，并且默认为所选帧。仅当 &lt;var&gt;frame&lt;/var&gt; 的根窗口处于活动状态时，才进行拟合。参数 &lt;var&gt;max-height&lt;/var&gt; ， &lt;var&gt;min-height&lt;/var&gt; ， &lt;var&gt;max-width&lt;/var&gt; 和 &lt;var&gt;min-width&lt;/var&gt; 指定新的 &lt;var&gt;frame&lt;/var&gt; 根窗口总大小的界限。 &lt;var&gt;min-height&lt;/var&gt; 和 &lt;var&gt;min-width&lt;/var&gt; 分别默认为 &lt;code&gt;window-min-height&lt;/code&gt; 和 &lt;code&gt;window-min-width&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="895e3a435b8ba1aa97bf7a257523d9f6c68329fe" translate="yes" xml:space="preserve">
          <source>This command alphabetically sorts lines in the region between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;. If &lt;var&gt;reverse&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the sort is in reverse order.</source>
          <target state="translated">该命令按字母顺序对 &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 之间的区域中的行进行排序。如果 &lt;var&gt;reverse&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则排序为相反顺序。</target>
        </trans-unit>
        <trans-unit id="60f35140e02216a14272042d6f3929f833c1de8b" translate="yes" xml:space="preserve">
          <source>This command alphabetically sorts pages in the region between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;. If &lt;var&gt;reverse&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the sort is in reverse order.</source>
          <target state="translated">此命令按字母顺序在 &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 之间的区域中对页面进行排序。如果 &lt;var&gt;reverse&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则排序为相反顺序。</target>
        </trans-unit>
        <trans-unit id="9f89794b064275d0088c3098df7ee2268f906465" translate="yes" xml:space="preserve">
          <source>This command alphabetically sorts paragraphs in the region between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;. If &lt;var&gt;reverse&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the sort is in reverse order.</source>
          <target state="translated">此命令按字母顺序对 &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 之间的区域中的段落进行排序。如果 &lt;var&gt;reverse&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则排序为相反顺序。</target>
        </trans-unit>
        <trans-unit id="79bfff435d9a71b3c4b3fcf53e51bf55b8df9cd1" translate="yes" xml:space="preserve">
          <source>This command attempts to display &lt;var&gt;buffer-or-name&lt;/var&gt; in the selected window and make it the current buffer. It is often used interactively (as the binding of</source>
          <target state="translated">该命令尝试在选定的窗口中显示&amp;ldquo; &lt;var&gt;buffer-or-name&lt;/var&gt; &amp;rdquo;，并使其成为当前缓冲区。它通常以交互方式使用（作为</target>
        </trans-unit>
        <trans-unit id="18c4dcc1fd6c826172f3688906808481d8c1f7dd" translate="yes" xml:space="preserve">
          <source>This command attempts to reduce &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s height as much as possible while still showing its full buffer, but no less than &lt;code&gt;window-min-height&lt;/code&gt; lines. The return value is non-&lt;code&gt;nil&lt;/code&gt; if the window was resized, and &lt;code&gt;nil&lt;/code&gt; otherwise. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window. Otherwise, it should be a live window.</source>
          <target state="translated">此命令尝试在降低 &lt;var&gt;window&lt;/var&gt; 高度的同时仍显示其完整缓冲区，但不得少于 &lt;code&gt;window-min-height&lt;/code&gt; 行。返回值是不 &lt;code&gt;nil&lt;/code&gt; 如果窗口大小，以及 &lt;code&gt;nil&lt;/code&gt; 其他。如果 &lt;var&gt;window&lt;/var&gt; 省略或为 &lt;code&gt;nil&lt;/code&gt; ，则默认为所选窗口。否则，它应该是活动窗口。</target>
        </trans-unit>
        <trans-unit id="673eea01d7b257fd44b99b6857c537ccd6403f61" translate="yes" xml:space="preserve">
          <source>This command calls &lt;code&gt;auto-fill-function&lt;/code&gt; whenever that is non-&lt;code&gt;nil&lt;/code&gt; and the character inserted is in the table &lt;code&gt;auto-fill-chars&lt;/code&gt; (see &lt;a href=&quot;auto-filling#Auto-Filling&quot;&gt;Auto Filling&lt;/a&gt;).</source>
          <target state="translated">只要此命令不为 &lt;code&gt;nil&lt;/code&gt; 并且插入的字符在表 &lt;code&gt;auto-fill-chars&lt;/code&gt; 中,此命令就会调用 &lt;code&gt;auto-fill-function&lt;/code&gt; （请参见&lt;a href=&quot;auto-filling#Auto-Filling&quot;&gt;Auto Filling&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="5b985c1d8b84f28c1da6a78f8b2cc53f577963f3" translate="yes" xml:space="preserve">
          <source>This command calls &lt;code&gt;fit-window-to-buffer&lt;/code&gt; (see above) to do its work.</source>
          <target state="translated">该命令调用 &lt;code&gt;fit-window-to-buffer&lt;/code&gt; （请参见上文）以完成其工作。</target>
        </trans-unit>
        <trans-unit id="cc22573318be888f2063d86700554c0f9921604d" translate="yes" xml:space="preserve">
          <source>This command calls &lt;code&gt;self-insert-command&lt;/code&gt; to insert newlines, which may subsequently break the preceding line by calling &lt;code&gt;auto-fill-function&lt;/code&gt; (see &lt;a href=&quot;auto-filling#Auto-Filling&quot;&gt;Auto Filling&lt;/a&gt;). Typically what &lt;code&gt;auto-fill-function&lt;/code&gt; does is insert a newline; thus, the overall result in this case is to insert two newlines at different places: one at point, and another earlier in the line. &lt;code&gt;newline&lt;/code&gt; does not auto-fill if &lt;var&gt;number-of-newlines&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">该命令调用 &lt;code&gt;self-insert-command&lt;/code&gt; 插入换行符，随后可能会通过调用 &lt;code&gt;auto-fill-function&lt;/code&gt; 中断前一行（请参见&lt;a href=&quot;auto-filling#Auto-Filling&quot;&gt;Auto Filling&lt;/a&gt;）。通常， &lt;code&gt;auto-fill-function&lt;/code&gt; 作用是插入换行符；因此，这种情况下的总体结果是在不同的位置插入两个换行符：一个在点处，另一个在行中较早处。 &lt;code&gt;newline&lt;/code&gt; 不会自动填充，如果 &lt;var&gt;number-of-newlines&lt;/var&gt; 是非 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fc574e591e4e2eec7f3e45ad0bd6498afe6e7893" translate="yes" xml:space="preserve">
          <source>This command calls the function in &lt;code&gt;indent-line-function&lt;/code&gt; to indent the current line in a way appropriate for the current major mode.</source>
          <target state="translated">此命令调用 &lt;code&gt;indent-line-function&lt;/code&gt; 中的函数,以适合于当前主模式的方式缩进当前行。</target>
        </trans-unit>
        <trans-unit id="45a74130ea5b5379fa9ef34261d143fcb80a3127" translate="yes" xml:space="preserve">
          <source>This command calls the hook &lt;code&gt;kill-emacs-hook&lt;/code&gt;, then exits the Emacs process and kills it.</source>
          <target state="translated">该命令调用钩子 &lt;code&gt;kill-emacs-hook&lt;/code&gt; ，然后退出Emacs进程并杀死它。</target>
        </trans-unit>
        <trans-unit id="8c6bb4abf55581a597f716344ee1d4b7e918ce59" translate="yes" xml:space="preserve">
          <source>This command closes the most recently opened (and not yet closed) block.</source>
          <target state="translated">该命令关闭最近打开(尚未关闭)的块。</target>
        </trans-unit>
        <trans-unit id="756594fc50a4d9741af05602545285aac38ae0e4" translate="yes" xml:space="preserve">
          <source>This command considers a region of text as a single paragraph and fills it. If the region was made up of many paragraphs, the blank lines between paragraphs are removed. This function justifies as well as filling when &lt;var&gt;justify&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">该命令将文本区域视为单个段落并填充它。如果该区域由许多段落组成，则段落之间的空白行将被删除。当 &lt;var&gt;justify&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; 时，此函数将进行对齐以及填充。</target>
        </trans-unit>
        <trans-unit id="54f154b03560bc91944f1f7809150311fbbf935c" translate="yes" xml:space="preserve">
          <source>This command copies the directory named &lt;var&gt;dirname&lt;/var&gt; to &lt;var&gt;newname&lt;/var&gt;. If &lt;var&gt;newname&lt;/var&gt; is a directory name, &lt;var&gt;dirname&lt;/var&gt; will be copied to a subdirectory there. See &lt;a href=&quot;directory-names#Directory-Names&quot;&gt;Directory Names&lt;/a&gt;.</source>
          <target state="translated">此命令将名为 &lt;var&gt;dirname&lt;/var&gt; 的目录复制到 &lt;var&gt;newname&lt;/var&gt; 。如果 &lt;var&gt;newname&lt;/var&gt; 是目录名，则 &lt;var&gt;dirname&lt;/var&gt; 将被复制到该目录的子目录中。请参阅&lt;a href=&quot;directory-names#Directory-Names&quot;&gt;目录名称&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5b2aa6b0f84b36f024a16d1780fb3b2f8164a4d1" translate="yes" xml:space="preserve">
          <source>This command copies the file &lt;var&gt;oldname&lt;/var&gt; to &lt;var&gt;newname&lt;/var&gt;. An error is signaled if &lt;var&gt;oldname&lt;/var&gt; is not a regular file. If &lt;var&gt;newname&lt;/var&gt; names a directory, it copies &lt;var&gt;oldname&lt;/var&gt; into that directory, preserving its final name component.</source>
          <target state="translated">此命令将文件 &lt;var&gt;oldname&lt;/var&gt; 复制到 &lt;var&gt;newname&lt;/var&gt; 。如果 &lt;var&gt;oldname&lt;/var&gt; 不是常规文件，则表明存在错误。如果 &lt;var&gt;newname&lt;/var&gt; 为目录命名，则会将 &lt;var&gt;oldname&lt;/var&gt; 复制到该目录中，并保留其最终名称部分。</target>
        </trans-unit>
        <trans-unit id="c8ad2b5b41ccfb8b2f38182e2df30fc1c4b30c1a" translate="yes" xml:space="preserve">
          <source>This command creates a directory named &lt;var&gt;dirname&lt;/var&gt;. If &lt;var&gt;parents&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, as is always the case in an interactive call, that means to create the parent directories first, if they don&amp;rsquo;t already exist. &lt;code&gt;mkdir&lt;/code&gt; is an alias for this.</source>
          <target state="translated">此命令创建一个名为 &lt;var&gt;dirname&lt;/var&gt; 的目录。如果 &lt;var&gt;parents&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则在交互式调用中通常如此，这意味着如果父目录尚不存在，则首先创建它们。 &lt;code&gt;mkdir&lt;/code&gt; 是对此的别名。</target>
        </trans-unit>
        <trans-unit id="038aa561e9d82f4d260ddd912eb64042b635bf8c" translate="yes" xml:space="preserve">
          <source>This command creates an empty file named &lt;var&gt;filename&lt;/var&gt;. As &lt;code&gt;make-directory&lt;/code&gt;, this command creates parent directories if &lt;var&gt;parents&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;filename&lt;/var&gt; already exists, this command signals an error.</source>
          <target state="translated">此命令将创建一个名为 &lt;var&gt;filename&lt;/var&gt; 的空文件。作为 &lt;code&gt;make-directory&lt;/code&gt; ，如果 &lt;var&gt;parents&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，此命令将创建父目录。如果 &lt;var&gt;filename&lt;/var&gt; 已经存在，则此命令会发出错误信号。</target>
        </trans-unit>
        <trans-unit id="a1d4315801ce6d3f5b31ce1276e9ab8688821d79" translate="yes" xml:space="preserve">
          <source>This command decodes the text from &lt;var&gt;start&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt; according to coding system &lt;var&gt;coding-system&lt;/var&gt;. To make explicit decoding useful, the text before decoding ought to be a sequence of byte values, but both multibyte and unibyte buffers are acceptable (in the multibyte case, the raw byte values should be represented as eight-bit characters). Normally, the decoded text replaces the original text in the buffer, but the optional argument &lt;var&gt;destination&lt;/var&gt; can change that. If &lt;var&gt;destination&lt;/var&gt; is a buffer, the decoded text is inserted in that buffer after point (point does not move); if it is &lt;code&gt;t&lt;/code&gt;, the command returns the decoded text as a multibyte string without inserting it.</source>
          <target state="translated">此命令的文本从解码 &lt;var&gt;start&lt;/var&gt; 到 &lt;var&gt;end&lt;/var&gt; 根据编码系统 &lt;var&gt;coding-system&lt;/var&gt; 。为了使显式解码有用，解码之前的文本应该是一个字节值序列，但是多字节和单字节缓冲区都是可以接受的（在多字节情况下，原始字节值应表示为八位字符）。通常，解码后的文本会替换缓冲区中的原始文本，但是可选的参数 &lt;var&gt;destination&lt;/var&gt; 可以更改该文本。如果 &lt;var&gt;destination&lt;/var&gt; 是缓冲区，则解码的文本将在点之后插入（该点不移动）；如果为 &lt;code&gt;t&lt;/code&gt; ，则命令将解码后的文本作为多字节字符串返回而不插入它。</target>
        </trans-unit>
        <trans-unit id="32f4777175150fdcbe2a1a23643a82fc5a4ba066" translate="yes" xml:space="preserve">
          <source>This command deletes &lt;var&gt;count&lt;/var&gt; characters backward, changing tabs into spaces. When the next character to be deleted is a tab, it is first replaced with the proper number of spaces to preserve alignment and then one of those spaces is deleted instead of the tab. If &lt;var&gt;killp&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then the command saves the deleted characters in the kill ring.</source>
          <target state="translated">此命令向后删除 &lt;var&gt;count&lt;/var&gt; 字符，从而将制表符更改为空格。当下一个要删除的字符是一个制表符时，首先将其替换为适当数量的空格以保持对齐，然后删除其中一个空格而不是制表符。如果 &lt;var&gt;killp&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则该命令将已删除的字符保存在kill环中。</target>
        </trans-unit>
        <trans-unit id="22ea8b0a20dedb9172859d6df974ea27ab76d8a9" translate="yes" xml:space="preserve">
          <source>This command deletes &lt;var&gt;count&lt;/var&gt; characters directly after point, or before point if &lt;var&gt;count&lt;/var&gt; is negative. If &lt;var&gt;killp&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then it saves the deleted characters in the kill ring.</source>
          <target state="translated">如果 &lt;var&gt;count&lt;/var&gt; 为负，此命令 &lt;var&gt;count&lt;/var&gt; 直接在point之后或point之前删除count字符。如果 &lt;var&gt;killp&lt;/var&gt; 非 &lt;code&gt;nil&lt;/code&gt; ，则它将删除的字符保存在kill环中。</target>
        </trans-unit>
        <trans-unit id="1e29c9a0fbb23fca667005f572af80f1ee10ffe4" translate="yes" xml:space="preserve">
          <source>This command deletes &lt;var&gt;count&lt;/var&gt; characters directly before point, or after point if &lt;var&gt;count&lt;/var&gt; is negative. If &lt;var&gt;killp&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then it saves the deleted characters in the kill ring.</source>
          <target state="translated">如果 &lt;var&gt;count&lt;/var&gt; 为负数，此命令 &lt;var&gt;count&lt;/var&gt; 直接删除点之前或之后的计数字符。如果 &lt;var&gt;killp&lt;/var&gt; 非 &lt;code&gt;nil&lt;/code&gt; ，则它将删除的字符保存在kill环中。</target>
        </trans-unit>
        <trans-unit id="ca7108ce8a70186ad1084ad0d0dc8c98134c3c53" translate="yes" xml:space="preserve">
          <source>This command deletes all frames on &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s terminal, except &lt;var&gt;frame&lt;/var&gt;. If &lt;var&gt;frame&lt;/var&gt; uses another frame&amp;rsquo;s minibuffer, that minibuffer frame is left untouched. The argument &lt;var&gt;frame&lt;/var&gt; must specify a live frame and defaults to the selected frame. Internally, this command works by calling &lt;code&gt;delete-frame&lt;/code&gt; with &lt;var&gt;force&lt;/var&gt;&lt;code&gt;nil&lt;/code&gt; for all frames that shall be deleted.</source>
          <target state="translated">此命令删除 &lt;var&gt;frame&lt;/var&gt; 终端上除 &lt;var&gt;frame&lt;/var&gt; 之外的所有帧。如果 &lt;var&gt;frame&lt;/var&gt; 使用另一个帧的微型缓冲区，则该微型缓冲区帧将保持不变。参数 &lt;var&gt;frame&lt;/var&gt; 必须指定一个实时框架，并且默认为所选框架。在内部，此命令通过对所有应 &lt;code&gt;delete-frame&lt;/code&gt; 以 &lt;var&gt;force&lt;/var&gt; &lt;code&gt;nil&lt;/code&gt; 调用delete-frame起作用。</target>
        </trans-unit>
        <trans-unit id="a801baba837fbae2db848bbcdf043c44b92a62ee" translate="yes" xml:space="preserve">
          <source>This command deletes the directory named &lt;var&gt;dirname&lt;/var&gt;. The function &lt;code&gt;delete-file&lt;/code&gt; does not work for files that are directories; you must use &lt;code&gt;delete-directory&lt;/code&gt; for them. If &lt;var&gt;recursive&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, and the directory contains any files, &lt;code&gt;delete-directory&lt;/code&gt; signals an error. If recursive is non-&lt;code&gt;nil&lt;/code&gt;, there is no error merely because the directory or its files are deleted by some other process before &lt;code&gt;delete-directory&lt;/code&gt; gets to them.</source>
          <target state="translated">此命令删除名为 &lt;var&gt;dirname&lt;/var&gt; 的目录。该功能 &lt;code&gt;delete-file&lt;/code&gt; 不适用于目录文件。您必须为它们使用 &lt;code&gt;delete-directory&lt;/code&gt; 。如果 &lt;var&gt;recursive&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，并且目录包含任何文件，则 &lt;code&gt;delete-directory&lt;/code&gt; 指示错误。如果递归为非 &lt;code&gt;nil&lt;/code&gt; ，则不会出现错误，这仅仅是因为目录或目录的文件在 &lt;code&gt;delete-directory&lt;/code&gt; 到达它们之前已被其他进程删除了。</target>
        </trans-unit>
        <trans-unit id="b6a1626313c1e8a44d5e1bf542d0077364da6eff" translate="yes" xml:space="preserve">
          <source>This command deletes the file &lt;var&gt;filename&lt;/var&gt;. If the file has multiple names, it continues to exist under the other names. If &lt;var&gt;filename&lt;/var&gt; is a symbolic link, &lt;code&gt;delete-file&lt;/code&gt; deletes only the symbolic link and not its target.</source>
          <target state="translated">此命令删除文件 &lt;var&gt;filename&lt;/var&gt; 。如果文件具有多个名称，则该文件将继续以其他名称存在。如果 &lt;var&gt;filename&lt;/var&gt; 是符号链接，则 &lt;code&gt;delete-file&lt;/code&gt; 仅删除符号链接，而不删除其目标。</target>
        </trans-unit>
        <trans-unit id="a94a016d509b74c3bce4b176ef112169da75d61e" translate="yes" xml:space="preserve">
          <source>This command deletes the text between positions &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; in the current buffer, and returns &lt;code&gt;nil&lt;/code&gt;. If point was inside the deleted region, its value afterward is &lt;var&gt;start&lt;/var&gt;. Otherwise, point relocates with the surrounding text, as markers do.</source>
          <target state="translated">此命令删除当前缓冲区中位置 &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 之间的文本，并返回 &lt;code&gt;nil&lt;/code&gt; 。如果point在删除的区域内，则其后的值为 &lt;var&gt;start&lt;/var&gt; 。否则，标记将与周围的文本一起重定位。</target>
        </trans-unit>
        <trans-unit id="cca5913b83b419877e4d8ab720ce6c7df7f9acdb" translate="yes" xml:space="preserve">
          <source>This command deletes whitespace characters after the last non-whitespace character in each line in the region.</source>
          <target state="translated">该命令删除区域内每行中最后一个非空格字符后的空白字符。</target>
        </trans-unit>
        <trans-unit id="dddaa17447520ba09b411289d6048689899f464d" translate="yes" xml:space="preserve">
          <source>This command displays a description of the contents of the current buffer&amp;rsquo;s case table.</source>
          <target state="translated">此命令显示当前缓冲区的条件表内容的描述。</target>
        </trans-unit>
        <trans-unit id="7c346a82a085542926f91f7935abc73545129526" translate="yes" xml:space="preserve">
          <source>This command displays a description of the current display table in a help buffer.</source>
          <target state="translated">该命令在帮助缓冲区中显示当前显示表的描述。</target>
        </trans-unit>
        <trans-unit id="683746dd8591743f5682ffbbc29ba3b571485977" translate="yes" xml:space="preserve">
          <source>This command displays a list of characters in the character set &lt;var&gt;charset&lt;/var&gt;.</source>
          <target state="translated">此命令显示字符集 &lt;var&gt;charset&lt;/var&gt; 中的字符列表。</target>
        </trans-unit>
        <trans-unit id="3a0ecda5eade2dd5d8e8952f216dbbf48cc36d7a" translate="yes" xml:space="preserve">
          <source>This command displays a listing of all living processes. In addition, it finally deletes any process whose status was &amp;lsquo;</source>
          <target state="translated">此命令显示所有活动进程的列表。此外，它最终会删除状态为&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="8d52c25e9d936625f4ddc58e3711cc9e74f3a430" translate="yes" xml:space="preserve">
          <source>This command displays the contents of the syntax table of &lt;var&gt;buffer&lt;/var&gt; (by default, the current buffer) in a help buffer.</source>
          <target state="translated">此命令在帮助缓冲区中显示 &lt;var&gt;buffer&lt;/var&gt; 语法表的内容（默认情况下为当前缓冲区）。</target>
        </trans-unit>
        <trans-unit id="f078da243cd24929fce755d874cfbebed7ee19c0" translate="yes" xml:space="preserve">
          <source>This command displays the disassembled code for &lt;var&gt;object&lt;/var&gt;. In interactive use, or if &lt;var&gt;buffer-or-name&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or omitted, the output goes in a buffer named</source>
          <target state="translated">此命令显示 &lt;var&gt;object&lt;/var&gt; 的反汇编代码。在交互式使用中，或者如果 &lt;var&gt;buffer-or-name&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; 或省略，则输出将进入名为</target>
        </trans-unit>
        <trans-unit id="2762876090466956700e42ae9e7b100c9424e047" translate="yes" xml:space="preserve">
          <source>This command displays the documentation of the current buffer&amp;rsquo;s major mode and minor modes. It uses the &lt;code&gt;documentation&lt;/code&gt; function to retrieve the documentation strings of the major and minor mode commands (see &lt;a href=&quot;accessing-documentation#Accessing-Documentation&quot;&gt;Accessing Documentation&lt;/a&gt;).</source>
          <target state="translated">此命令显示当前缓冲区的主要模式和次要模式的文档。它使用 &lt;code&gt;documentation&lt;/code&gt; 功能来检索主要和次要模式命令的文档字符串（请参阅&lt;a href=&quot;accessing-documentation#Accessing-Documentation&quot;&gt;访问文档&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="906a9d0a67ebfe25157f280b4d00f819df007911" translate="yes" xml:space="preserve">
          <source>This command displays the frequency count data for each line of the current definition.</source>
          <target state="translated">该命令用于显示当前定义中每行的频率计数数据。</target>
        </trans-unit>
        <trans-unit id="1e3b49c3a1c9795b93c5c5418a1c0d3eff8cf69e" translate="yes" xml:space="preserve">
          <source>This command displays the previous buffer in &lt;var&gt;window&lt;/var&gt;. The argument &lt;var&gt;window&lt;/var&gt; should be a live window or &lt;code&gt;nil&lt;/code&gt; (meaning the selected window). If the optional argument &lt;var&gt;bury-or-kill&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this means that the buffer currently shown in &lt;var&gt;window&lt;/var&gt; is about to be buried or killed and consequently should not be switched to in future invocations of this command.</source>
          <target state="translated">此命令在 &lt;var&gt;window&lt;/var&gt; 中显示前一个缓冲区。参数 &lt;var&gt;window&lt;/var&gt; 应为活动窗口或 &lt;code&gt;nil&lt;/code&gt; （表示所选窗口）。如果可选参数 &lt;var&gt;bury-or-kill&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则意味着 &lt;var&gt;window&lt;/var&gt; 当前显示的缓冲区将被掩埋或杀死，因此不应在以后调用此命令时将其切换到该状态。</target>
        </trans-unit>
        <trans-unit id="16105a84850f7950a0920c4e78ab171286e4f734" translate="yes" xml:space="preserve">
          <source>This command displays the rules that are used to indent the current line.</source>
          <target state="translated">该命令显示用于缩进当前行的规则。</target>
        </trans-unit>
        <trans-unit id="6b7280ebc9500d23d64f114ba464e9b849225f10" translate="yes" xml:space="preserve">
          <source>This command displays what is contained in register &lt;var&gt;reg&lt;/var&gt;.</source>
          <target state="translated">此命令显示寄存器 &lt;var&gt;reg&lt;/var&gt; 中包含的内容。</target>
        </trans-unit>
        <trans-unit id="8dde6d022e9a211cc45bb6e82118d5f40d92a727" translate="yes" xml:space="preserve">
          <source>This command does not follow symbolic links. If &lt;var&gt;filename&lt;/var&gt; is a symbolic link, this command renames the symbolic link, not the file it points to. If &lt;var&gt;newname&lt;/var&gt; is a symbolic link, its directory entry is replaced, not the directory entry it points to.</source>
          <target state="translated">该命令不遵循符号链接。如果 &lt;var&gt;filename&lt;/var&gt; 是符号链接，则此命令将重命名符号链接，而不是它指向的文件。如果 &lt;var&gt;newname&lt;/var&gt; 是符号链接，则替换其目录条目，而不是它指向的目录条目。</target>
        </trans-unit>
        <trans-unit id="8b72b7c4c4fbff1834710fd64352ed0aad18bb23" translate="yes" xml:space="preserve">
          <source>This command does not run the hook &lt;code&gt;post-self-insert-hook&lt;/code&gt; unless called interactively or &lt;var&gt;interactive&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">除非以交互方式调用或 &lt;var&gt;interactive&lt;/var&gt; 非 &lt;code&gt;nil&lt;/code&gt; ,否则此命令不会运行hook &lt;code&gt;post-self-insert-hook&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ceb0e4da10375df635738b622ce9b4a706e8b83" translate="yes" xml:space="preserve">
          <source>This command does nothing if &lt;var&gt;filename&lt;/var&gt; and &lt;var&gt;newname&lt;/var&gt; are the same directory entry, i.e., if they refer to the same parent directory and give the same name within that directory. Otherwise, if &lt;var&gt;filename&lt;/var&gt; and &lt;var&gt;newname&lt;/var&gt; name the same file, this command does nothing on POSIX-conforming systems, and removes &lt;var&gt;filename&lt;/var&gt; on some non-POSIX systems.</source>
          <target state="translated">如果 &lt;var&gt;filename&lt;/var&gt; 和 &lt;var&gt;newname&lt;/var&gt; 是相同的目录条目，即，如果它们引用相同的父目录并在该目录中给出相同的名称，则此命令不执行任何操作。否则，如果 &lt;var&gt;filename&lt;/var&gt; 和 &lt;var&gt;newname&lt;/var&gt; 命名相同的文件，则此命令在符合POSIX的系统上不执行任何操作，并在某些非POSIX系统上删除 &lt;var&gt;filename&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="215a1477f2c72075a1ef839f3f35a9c187a95e3b" translate="yes" xml:space="preserve">
          <source>This command does nothing if the window is already too short to display all of its buffer, or if any of the buffer is scrolled off-screen, or if the window is the only live window in its frame.</source>
          <target state="translated">如果窗口已经太短,无法显示所有的缓冲区,或者任何缓冲区被滚动到屏幕外,或者窗口是其框架中唯一的实时窗口,则该命令不做任何操作。</target>
        </trans-unit>
        <trans-unit id="966b0ed68ad81002249062c92710838398fcfe4a" translate="yes" xml:space="preserve">
          <source>This command enables recording undo information for buffer &lt;var&gt;buffer-or-name&lt;/var&gt;, so that subsequent changes can be undone. If no argument is supplied, then the current buffer is used. This function does nothing if undo recording is already enabled in the buffer. It returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此命令启用记录缓冲区 &lt;var&gt;buffer-or-name&lt;/var&gt; 的撤消信息，以便可以撤消后续更改。如果未提供任何参数，则使用当前缓冲区。如果缓冲区中已启用撤消记录，则此功能不执行任何操作。返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5a82ddcac78077fdf6491a021c70da5be6b883bc" translate="yes" xml:space="preserve">
          <source>This command encodes the text from &lt;var&gt;start&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt; according to coding system &lt;var&gt;coding-system&lt;/var&gt;. Normally, the encoded text replaces the original text in the buffer, but the optional argument &lt;var&gt;destination&lt;/var&gt; can change that. If &lt;var&gt;destination&lt;/var&gt; is a buffer, the encoded text is inserted in that buffer after point (point does not move); if it is &lt;code&gt;t&lt;/code&gt;, the command returns the encoded text as a unibyte string without inserting it.</source>
          <target state="translated">该命令从编码文本 &lt;var&gt;start&lt;/var&gt; 到 &lt;var&gt;end&lt;/var&gt; 根据编码系统 &lt;var&gt;coding-system&lt;/var&gt; 。通常，编码的文本会替换缓冲区中的原始文本，但是可选的参数 &lt;var&gt;destination&lt;/var&gt; 可以更改此内容。如果 &lt;var&gt;destination&lt;/var&gt; 是缓冲区，则编码的文本将在点之后插入（该点不移动）；如果为 &lt;code&gt;t&lt;/code&gt; ，则命令将编码的文本作为单字节字符串返回而不插入它。</target>
        </trans-unit>
        <trans-unit id="ef5406097f423d50f3e4cf92882d1c513ab70d87" translate="yes" xml:space="preserve">
          <source>This command erases the editable contents of the minibuffer (that is, everything except the prompt), if a minibuffer is current. Otherwise, it erases the entire current buffer.</source>
          <target state="translated">如果当前有一个迷你缓冲区,这条命令将删除迷你缓冲区的可编辑内容(即除了提示音以外的所有内容)。否则,将删除整个当前缓冲区的内容。</target>
        </trans-unit>
        <trans-unit id="6f45f70a9223f5d68b032e25b623e5f92da9b0d3" translate="yes" xml:space="preserve">
          <source>This command exits the active minibuffer after inserting the last character typed on the keyboard (found in &lt;code&gt;last-command-event&lt;/code&gt;; see &lt;a href=&quot;command-loop-info#Command-Loop-Info&quot;&gt;Command Loop Info&lt;/a&gt;).</source>
          <target state="translated">在插入键盘上键入的最后一个字符（位于 &lt;code&gt;last-command-event&lt;/code&gt; 中；请参阅&amp;ldquo;&lt;a href=&quot;command-loop-info#Command-Loop-Info&quot;&gt;命令循环信息&amp;rdquo;&lt;/a&gt;）后，此命令退出活动的微型缓冲区。</target>
        </trans-unit>
        <trans-unit id="56bee02febe888f30922da274fbb0924fce22169" translate="yes" xml:space="preserve">
          <source>This command exits the active minibuffer. It is normally bound to keys in minibuffer local keymaps.</source>
          <target state="translated">该命令退出活动中的minibuffer,通常会绑定到minibuffer本地键图中的键。它通常与minibuffer本地键图中的键绑定。</target>
        </trans-unit>
        <trans-unit id="9960e68dba13beeea2d45213224bda3bc09c78cb" translate="yes" xml:space="preserve">
          <source>This command expands the abbrev before point, if any. If point does not follow an abbrev, this command does nothing. To do the expansion, it calls the function that is the value of the &lt;code&gt;abbrev-expand-function&lt;/code&gt; variable, with no arguments, and returns whatever that function does.</source>
          <target state="translated">如果有，此命令将扩展前一个缩写。如果point不跟随缩写，则此命令不执行任何操作。要进行扩展，它将调用 &lt;code&gt;abbrev-expand-function&lt;/code&gt; 变量的值的函数（不带参数），并返回该函数执行的操作。</target>
        </trans-unit>
        <trans-unit id="78ee150b79a2f4408d7171f2996a0806c6f522bc" translate="yes" xml:space="preserve">
          <source>This command fills each of the paragraphs in the region from &lt;var&gt;start&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt;. It justifies as well if &lt;var&gt;justify&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此命令填充每个段落的区域，从 &lt;var&gt;start&lt;/var&gt; 到 &lt;var&gt;end&lt;/var&gt; 。如果 &lt;var&gt;justify&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ,它也可以进行对齐。</target>
        </trans-unit>
        <trans-unit id="0b3e65ed2b1a543af31c994850fab42cc5f6ca5a" translate="yes" xml:space="preserve">
          <source>This command fills each paragraph in the region according to its individual fill prefix. Thus, if the lines of a paragraph were indented with spaces, the filled paragraph will remain indented in the same fashion.</source>
          <target state="translated">该命令根据区域内每个段落的填充前缀来填充。因此,如果一个段落的行数是用空格缩进的,那么被填充的段落将保持同样的缩进方式。</target>
        </trans-unit>
        <trans-unit id="0bec39ae3f928d4a3feaac0b7e8a0b32dca18131" translate="yes" xml:space="preserve">
          <source>This command fills the paragraph at or after point. If &lt;var&gt;justify&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, each line is justified as well. It uses the ordinary paragraph motion commands to find paragraph boundaries. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Paragraphs.html#Paragraphs&quot;&gt;Paragraphs&lt;/a&gt; in</source>
          <target state="translated">此命令在该点或之后填充该段落。如果 &lt;var&gt;justify&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则每一行也将被对齐。它使用普通的段落运动命令来查找段落边界。见&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Paragraphs.html#Paragraphs&quot;&gt;段落&lt;/a&gt;中</target>
        </trans-unit>
        <trans-unit id="2acc7ffa982f60daf275e8c14e7552f325a34ebe" translate="yes" xml:space="preserve">
          <source>This command finds the file &lt;var&gt;file&lt;/var&gt;, converting it according to format &lt;var&gt;format&lt;/var&gt;. It also makes &lt;var&gt;format&lt;/var&gt; the default if the buffer is saved later.</source>
          <target state="translated">此命令查找文件 &lt;var&gt;file&lt;/var&gt; ，并根据格式 &lt;var&gt;format&lt;/var&gt; 将其转换。如果以后保存缓冲区，它也会使 &lt;var&gt;format&lt;/var&gt; 成为默认格式。</target>
        </trans-unit>
        <trans-unit id="496a4488eb4e6d86a049f91696897547b2057806" translate="yes" xml:space="preserve">
          <source>This command finds the precise file name for library &lt;var&gt;library&lt;/var&gt;. It searches for the library in the same way &lt;code&gt;load&lt;/code&gt; does, and the argument &lt;var&gt;nosuffix&lt;/var&gt; has the same meaning as in &lt;code&gt;load&lt;/code&gt;: don&amp;rsquo;t add suffixes &amp;lsquo;</source>
          <target state="translated">此命令查找库 &lt;var&gt;library&lt;/var&gt; 的精确文件名。它搜索以同样的方式库 &lt;code&gt;load&lt;/code&gt; 确实，和参数 &lt;var&gt;nosuffix&lt;/var&gt; 的含义相同 &lt;code&gt;load&lt;/code&gt; ：不加后缀&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="7088c7eb415b5eeea76627a8dbd42f70950ab725" translate="yes" xml:space="preserve">
          <source>This command indents each nonblank line starting between &lt;var&gt;start&lt;/var&gt; (inclusive) and &lt;var&gt;end&lt;/var&gt; (exclusive). If &lt;var&gt;to-column&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;indent-region&lt;/code&gt; indents each nonblank line by calling the current mode&amp;rsquo;s indentation function, the value of &lt;code&gt;indent-line-function&lt;/code&gt;.</source>
          <target state="translated">此命令缩进从 &lt;var&gt;start&lt;/var&gt; （包括）和 &lt;var&gt;end&lt;/var&gt; （不包括）之间的每条非空白行。如果 &lt;var&gt;to-column&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;indent-region&lt;/code&gt; 通过调用当前模式的缩进函数 &lt;code&gt;indent-line-function&lt;/code&gt; 的值来缩进每条非空白行。</target>
        </trans-unit>
        <trans-unit id="5a9dc457190e631972e795830f311f13a8cd116d" translate="yes" xml:space="preserve">
          <source>This command indents the current line like the previous nonblank line, by calling &lt;code&gt;indent-relative&lt;/code&gt; with &lt;code&gt;t&lt;/code&gt; as the &lt;var&gt;first-only&lt;/var&gt; argument. The return value is unpredictable.</source>
          <target state="translated">该命令通过调用以 &lt;code&gt;t&lt;/code&gt; 为第 &lt;var&gt;first-only&lt;/var&gt; 参数的 &lt;code&gt;indent-relative&lt;/code&gt; 来缩进当前行，就像上一个非空白行一样。返回值是不可预测的。</target>
        </trans-unit>
        <trans-unit id="990ea483ed9c77e9c4b7e9d0a04803fc31bdbeb3" translate="yes" xml:space="preserve">
          <source>This command indents to the left margin if that is not zero. See &lt;a href=&quot;margins#Margins&quot;&gt;Margins&lt;/a&gt;.</source>
          <target state="translated">如果该命令不为零，则该命令会向左缩进。参见&lt;a href=&quot;margins#Margins&quot;&gt;边距&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b299a297e353537b61beb782c88c67e04c9405d5" translate="yes" xml:space="preserve">
          <source>This command inserts &lt;var&gt;count&lt;/var&gt; instances of &lt;var&gt;character&lt;/var&gt; into the current buffer before point. The argument &lt;var&gt;count&lt;/var&gt; must be an integer, and &lt;var&gt;character&lt;/var&gt; must be a character.</source>
          <target state="translated">该命令将 &lt;var&gt;character&lt;/var&gt; &lt;var&gt;count&lt;/var&gt; 实例插入到点之前的当前缓冲区中。参数 &lt;var&gt;count&lt;/var&gt; 必须是整数，而 &lt;var&gt;character&lt;/var&gt; 必须是字符。</target>
        </trans-unit>
        <trans-unit id="3c0b68d54ca5426fce25a0ace8e5b8bf44050795" translate="yes" xml:space="preserve">
          <source>This command inserts before point the text at the front of the kill ring. It sets the mark at the beginning of that text, using &lt;code&gt;push-mark&lt;/code&gt; (see &lt;a href=&quot;the-mark#The-Mark&quot;&gt;The Mark&lt;/a&gt;), and puts point at the end.</source>
          <target state="translated">该命令将文本插入到终止环前面。它使用 &lt;code&gt;push-mark&lt;/code&gt; （请参见&lt;a href=&quot;the-mark#The-Mark&quot;&gt;The Mark&lt;/a&gt;）在该文本的开头设置标记，并在结尾处放置标记。</target>
        </trans-unit>
        <trans-unit id="00cb850812ecd2a392a86a27a8e2ac9630649afe" translate="yes" xml:space="preserve">
          <source>This command inserts contents of register &lt;var&gt;reg&lt;/var&gt; into the current buffer.</source>
          <target state="translated">此命令将寄存器 &lt;var&gt;reg&lt;/var&gt; 的内容插入当前缓冲区。</target>
        </trans-unit>
        <trans-unit id="b5823cba999dd07db3971854e8b20896e5e06742" translate="yes" xml:space="preserve">
          <source>This command inserts newlines into the current buffer before point. If &lt;var&gt;number-of-newlines&lt;/var&gt; is supplied, that many newline characters are inserted. In an interactive call, &lt;var&gt;number-of-newlines&lt;/var&gt; is the numeric prefix argument.</source>
          <target state="translated">该命令将换行符插入到当前缓冲区之前。如果 &lt;var&gt;number-of-newlines&lt;/var&gt; 被提供时，许多新行字符插入。在交互式呼叫中， &lt;var&gt;number-of-newlines&lt;/var&gt; 是数字前缀参数。</target>
        </trans-unit>
        <trans-unit id="10d91e2db2ec210a0ecc91241ecef7992c6f3ac3" translate="yes" xml:space="preserve">
          <source>This command inserts spaces between the words of the current line so that the line ends exactly at &lt;code&gt;fill-column&lt;/code&gt;. It returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此命令在当前行的单词之间插入空格，以便该行恰好在 &lt;code&gt;fill-column&lt;/code&gt; 处结束。返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6b0cd33fa3471773723d5fc01a50786b892b7a90" translate="yes" xml:space="preserve">
          <source>This command inserts spaces or tabs before point, up to the next tab stop column defined by &lt;code&gt;tab-stop-list&lt;/code&gt;.</source>
          <target state="translated">该命令将在空格之前插入空格或制表符，直到下一个由 &lt;code&gt;tab-stop-list&lt;/code&gt; 定义的制表符停止列。</target>
        </trans-unit>
        <trans-unit id="135878bb1fa11119f45ff9a414a7db8bfe0c0784" translate="yes" xml:space="preserve">
          <source>This command inserts the character &lt;var&gt;char&lt;/var&gt; (the last character typed); it does so &lt;var&gt;count&lt;/var&gt; times, before point, and returns &lt;code&gt;nil&lt;/code&gt;. Most printing characters are bound to this command. In routine use, &lt;code&gt;self-insert-command&lt;/code&gt; is the most frequently called function in Emacs, but programs rarely use it except to install it on a keymap.</source>
          <target state="translated">该命令插入字符 &lt;var&gt;char&lt;/var&gt; （最后键入的字符）；它会在点之前 &lt;var&gt;count&lt;/var&gt; 时间，并返回 &lt;code&gt;nil&lt;/code&gt; 。大多数打印字符都绑定到此命令。在日常使用中， &lt;code&gt;self-insert-command&lt;/code&gt; 是Emacs中最常调用的函数，但是程序很少使用它，除非将其安装在键盘映射上。</target>
        </trans-unit>
        <trans-unit id="9626d7b3e3b091a37ee5ebbf01c44cecd8ac2fd6" translate="yes" xml:space="preserve">
          <source>This command inserts the contents of file &lt;var&gt;file&lt;/var&gt;, converting it according to format &lt;var&gt;format&lt;/var&gt;. If &lt;var&gt;beg&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; are non-&lt;code&gt;nil&lt;/code&gt;, they specify which part of the file to read, as in &lt;code&gt;insert-file-contents&lt;/code&gt; (see &lt;a href=&quot;reading-from-files#Reading-from-Files&quot;&gt;Reading from Files&lt;/a&gt;).</source>
          <target state="translated">此命令将插入文件 &lt;var&gt;file&lt;/var&gt; 的内容，并根据格式 &lt;var&gt;format&lt;/var&gt; 对其进行转换。如果 &lt;var&gt;beg&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则它们指定要读取文件的哪一部分，如 &lt;code&gt;insert-file-contents&lt;/code&gt; 中一样（请参阅&lt;a href=&quot;reading-from-files#Reading-from-Files&quot;&gt;从文件读取&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="da7021fdc034c60b00dcf1ab5f2bc90527eb6799" translate="yes" xml:space="preserve">
          <source>This command inserts the entire accessible contents of &lt;var&gt;from-buffer-or-name&lt;/var&gt; (which must exist) into the current buffer after point. It leaves the mark after the inserted text. The value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此命令将point之后的 &lt;var&gt;from-buffer-or-name&lt;/var&gt; 的所有可访问内容（必须存在）插入到当前缓冲区中。它在插入的文本之后留下标记。该值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="88e1677d378687ba4ac004484580576a9429d773" translate="yes" xml:space="preserve">
          <source>This command inserts whitespace at point, extending to the same column as the next &lt;em&gt;indent point&lt;/em&gt; of the previous nonblank line. An indent point is a non-whitespace character following whitespace. The next indent point is the first one at a column greater than the current column of point. For example, if point is underneath and to the left of the first non-blank character of a line of text, it moves to that column by inserting whitespace.</source>
          <target state="translated">此命令在点插入空格，并延伸到与上一个非空白行的下一个&lt;em&gt;缩进点&lt;/em&gt;相同的列。缩进点是空格后面的非空格字符。下一个缩进点是列的第一个缩进点，该列大于当前点的列。例如，如果点在文本行的第一个非空白字符的下方和左侧，则通过插入空格将其移至该列。</target>
        </trans-unit>
        <trans-unit id="9595ecd60bd448bf2daea0ea991b68b101ac3102" translate="yes" xml:space="preserve">
          <source>This command is identical to &lt;code&gt;word-search-backward&lt;/code&gt;, except that the beginning or the end of &lt;var&gt;string&lt;/var&gt; need not match a word boundary, unless &lt;var&gt;string&lt;/var&gt; begins or ends in whitespace.</source>
          <target state="translated">此命令与 &lt;code&gt;word-search-backward&lt;/code&gt; 相同，区别在于 &lt;var&gt;string&lt;/var&gt; 的开头或结尾不必与单词边界匹配，除非 &lt;var&gt;string&lt;/var&gt; 以空格开头或结尾。</target>
        </trans-unit>
        <trans-unit id="58d41366864bbff2a5b943d6b2e3fe42436c078a" translate="yes" xml:space="preserve">
          <source>This command is identical to &lt;code&gt;word-search-forward&lt;/code&gt;, except that the beginning or the end of &lt;var&gt;string&lt;/var&gt; need not match a word boundary, unless &lt;var&gt;string&lt;/var&gt; begins or ends in whitespace. For instance, searching for &amp;lsquo;</source>
          <target state="translated">该命令与 &lt;code&gt;word-search-forward&lt;/code&gt; 相同，区别在于 &lt;var&gt;string&lt;/var&gt; 的开头或结尾不必与单词边界匹配，除非 &lt;var&gt;string&lt;/var&gt; 的开头或结尾以空格开头。例如，搜索&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="ed953efc17ba150660976b3a7ae8e39f29a1f27a" translate="yes" xml:space="preserve">
          <source>This command is like &lt;code&gt;down-list&lt;/code&gt; but it also pays attention to nesting of tokens other than parentheses, such as &lt;code&gt;begin...end&lt;/code&gt;.</source>
          <target state="translated">该命令就像 &lt;code&gt;down-list&lt;/code&gt; 一样，但是它也要注意除括号之外的标记的嵌套，例如 &lt;code&gt;begin...end&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="90fafcf0ce43e375742f52a0d7669e6be587582c" translate="yes" xml:space="preserve">
          <source>This command loads the file &lt;var&gt;filename&lt;/var&gt;. If &lt;var&gt;filename&lt;/var&gt; is a relative file name, then the current default directory is assumed. This command does not use &lt;code&gt;load-path&lt;/code&gt;, and does not append suffixes. However, it does look for compressed versions (if Auto Compression Mode is enabled). Use this command if you wish to specify precisely the file name to load.</source>
          <target state="translated">此命令加载文件 &lt;var&gt;filename&lt;/var&gt; 。如果 &lt;var&gt;filename&lt;/var&gt; 是相对文件名，则采用当前的默认目录。此命令不使用 &lt;code&gt;load-path&lt;/code&gt; ，并且不附加后缀。但是，它会查找压缩版本（如果启用了&amp;ldquo;自动压缩模式&amp;rdquo;）。如果您希望精确指定要加载的文件名，请使用此命令。</target>
        </trans-unit>
        <trans-unit id="f2935f28ba5712dfbbb71ecbcf2657b64610540c" translate="yes" xml:space="preserve">
          <source>This command loads the library named &lt;var&gt;library&lt;/var&gt;. It is equivalent to &lt;code&gt;load&lt;/code&gt;, except for the way it reads its argument interactively. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Lisp-Libraries.html#Lisp-Libraries&quot;&gt;Lisp Libraries&lt;/a&gt; in</source>
          <target state="translated">此命令将加载名为 &lt;var&gt;library&lt;/var&gt; 的库。它等效于 &lt;code&gt;load&lt;/code&gt; ，只是它以交互方式读取其参数的方式。见&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Lisp-Libraries.html#Lisp-Libraries&quot;&gt;Lisp的图书馆&lt;/a&gt;中</target>
        </trans-unit>
        <trans-unit id="cef39c045e00a0f5acb130f922e0ab1680aa3f4f" translate="yes" xml:space="preserve">
          <source>This command makes &lt;var&gt;buffer-or-name&lt;/var&gt; appear in some window, without selecting the window or making the buffer current. The argument &lt;var&gt;buffer-or-name&lt;/var&gt; must be a buffer or the name of an existing buffer. The return value is the window chosen to display the buffer, or &lt;code&gt;nil&lt;/code&gt; if no suitable window was found.</source>
          <target state="translated">此命令使&amp;ldquo; &lt;var&gt;buffer-or-name&lt;/var&gt; 出现在某个窗口中，而无需选择该窗口或使该缓冲区为当前状态。参数 &lt;var&gt;buffer-or-name&lt;/var&gt; 必须是缓冲区或现有缓冲区的名称。返回值是选择显示缓冲区的窗口，如果找不到合适的窗口，则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="230b6284a7b0d716c80f10b4addf825eacbaeb1a" translate="yes" xml:space="preserve">
          <source>This command makes a symbolic link to &lt;var&gt;target&lt;/var&gt;, named &lt;var&gt;linkname&lt;/var&gt;. This is like the shell command &amp;lsquo;</source>
          <target state="translated">此命令建立到 &lt;var&gt;target&lt;/var&gt; 的符号链接，名为 &lt;var&gt;linkname&lt;/var&gt; 。这就像shell命令'</target>
        </trans-unit>
        <trans-unit id="1289d6efb469369728dd95ac27321e796c44ac18" translate="yes" xml:space="preserve">
          <source>This command marks the buffer as modified, since it does not (as far as Emacs knows) match the contents of &lt;var&gt;filename&lt;/var&gt;, even if it matched the former visited file. It also renames the buffer to correspond to the new file name, unless the new name is already in use.</source>
          <target state="translated">该命令将缓冲区标记为已修改，因为（与Emacs所知的一样）缓冲区不匹配 &lt;var&gt;filename&lt;/var&gt; 的内容，即使它与先前访问的文件匹配也是如此。除非已经使用了新名称，否则还将重命名缓冲区以与新文件名相对应。</target>
        </trans-unit>
        <trans-unit id="3045463093bc030acf63701d5fa42bd3099cd946" translate="yes" xml:space="preserve">
          <source>This command marks the current buffer as unmodified, and not needing to be saved. If &lt;var&gt;arg&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it marks the buffer as modified, so that it will be saved at the next suitable occasion. Interactively, &lt;var&gt;arg&lt;/var&gt; is the prefix argument.</source>
          <target state="translated">此命令将当前缓冲区标记为未修改，并且不需要保存。如果 &lt;var&gt;arg&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则将缓冲区标记为已修改，以便在下一个合适的时间将其保存。交互式地， &lt;var&gt;arg&lt;/var&gt; 是前缀参数。</target>
        </trans-unit>
        <trans-unit id="83dce7265fe49cc7961dc06b31c244e25c921259" translate="yes" xml:space="preserve">
          <source>This command marks the current location of point as the beginning of an abbrev. The next call to &lt;code&gt;expand-abbrev&lt;/code&gt; will use the text from here to point (where it is then) as the abbrev to expand, rather than using the previous word as usual.</source>
          <target state="translated">此命令将点的当前位置标记为缩写的起点。下次对 &lt;code&gt;expand-abbrev&lt;/code&gt; 的调用将使用此处的文本指向（此时的位置）作为扩展的缩写，而不是像往常一样使用前一个单词。</target>
        </trans-unit>
        <trans-unit id="e6b4c7abace5f19e4e74417132ebc0b612ae42f7" translate="yes" xml:space="preserve">
          <source>This command moves point backward &lt;var&gt;arg&lt;/var&gt; lines and then to the first nonblank character on that line. It returns &lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;arg&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to 1.</source>
          <target state="translated">此命令将点向后移动 &lt;var&gt;arg&lt;/var&gt; 行，然后移至该行的第一个非空白字符。返回 &lt;code&gt;nil&lt;/code&gt; 。如果省略 &lt;var&gt;arg&lt;/var&gt; 或 &lt;code&gt;nil&lt;/code&gt; ，则默认为1。</target>
        </trans-unit>
        <trans-unit id="72f9b5cc81ad8b1d9723183c58f4b81888dd722f" translate="yes" xml:space="preserve">
          <source>This command moves point forward &lt;var&gt;arg&lt;/var&gt; lines and then to the first nonblank character on that line. It returns &lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;arg&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to 1.</source>
          <target state="translated">此命令将点向前 &lt;var&gt;arg&lt;/var&gt; 行移动，然后移至该行上的第一个非空白字符。返回 &lt;code&gt;nil&lt;/code&gt; 。如果省略 &lt;var&gt;arg&lt;/var&gt; 或 &lt;code&gt;nil&lt;/code&gt; ，则默认为1。</target>
        </trans-unit>
        <trans-unit id="54e975e6175492e7858c03b57a5e94deab998c6a" translate="yes" xml:space="preserve">
          <source>This command moves point to the first non-whitespace character in the current line (which is the line in which point is located). It returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此命令将点移动到当前行（该点所在的行）中的第一个非空白字符。返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="16bea2b736885b9c1690ddce930c3c97f115aced" translate="yes" xml:space="preserve">
          <source>This command performs abbrev expansion if Abbrev mode is enabled and the inserted character does not have word-constituent syntax. (See &lt;a href=&quot;abbrevs#Abbrevs&quot;&gt;Abbrevs&lt;/a&gt;, and &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;Syntax Class Table&lt;/a&gt;.) It is also responsible for calling &lt;code&gt;blink-paren-function&lt;/code&gt; when the inserted character has close parenthesis syntax (see &lt;a href=&quot;blinking#Blinking&quot;&gt;Blinking&lt;/a&gt;).</source>
          <target state="translated">如果启用了Abbrev模式，并且插入的字符没有词构成语法，则此命令将执行abbrev扩展。（请参阅&lt;a href=&quot;abbrevs#Abbrevs&quot;&gt;Abbrevs&lt;/a&gt;和&lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;语法类表&lt;/a&gt;。）当插入的字符具有紧密的括号语法时，它还负责调用 &lt;code&gt;blink-paren-function&lt;/code&gt; （请参见&lt;a href=&quot;blinking#Blinking&quot;&gt;闪烁&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="e69e1e968d5bd8894bf4aa234a5af4025b9c34ec" translate="yes" xml:space="preserve">
          <source>This command performs several complex steps to find a window to display in. These steps are described by means of &lt;em&gt;display actions&lt;/em&gt;, which have the form &lt;code&gt;(&lt;var&gt;functions&lt;/var&gt; . &lt;var&gt;alist&lt;/var&gt;)&lt;/code&gt;. Here, &lt;var&gt;functions&lt;/var&gt; is either a single function or a list of functions, referred to as &amp;ldquo;action functions&amp;rdquo; (see &lt;a href=&quot;buffer-display-action-functions#Buffer-Display-Action-Functions&quot;&gt;Buffer Display Action Functions&lt;/a&gt;); and &lt;var&gt;alist&lt;/var&gt; is an association list, referred to as &amp;ldquo;action alist&amp;rdquo; (see &lt;a href=&quot;buffer-display-action-alists#Buffer-Display-Action-Alists&quot;&gt;Buffer Display Action Alists&lt;/a&gt;). See &lt;a href=&quot;the-zen-of-buffer-display#The-Zen-of-Buffer-Display&quot;&gt;The Zen of Buffer Display&lt;/a&gt;, for samples of display actions.</source>
          <target state="translated">该命令执行几个复杂的步骤，以找到一个窗口中显示。这些步骤借助于说明&lt;em&gt;显示动作&lt;/em&gt;，其具有形式 &lt;code&gt;(&lt;var&gt;functions&lt;/var&gt; . &lt;var&gt;alist&lt;/var&gt;)&lt;/code&gt; 。在这里， &lt;var&gt;functions&lt;/var&gt; 可以是单个功能，也可以是功能列表，称为&amp;ldquo;动作功能&amp;rdquo;（请参阅​​&amp;ldquo;&lt;a href=&quot;buffer-display-action-functions#Buffer-Display-Action-Functions&quot;&gt;缓冲区显示动作功能&amp;rdquo;&lt;/a&gt;）；和 &lt;var&gt;alist&lt;/var&gt; 是一个关联列表，称为&amp;ldquo;动作ALIST&amp;rdquo;（见&lt;a href=&quot;buffer-display-action-alists#Buffer-Display-Action-Alists&quot;&gt;缓冲区显示动作Alists&lt;/a&gt;）。有关显示操作的示例，请参见&lt;a href=&quot;the-zen-of-buffer-display#The-Zen-of-Buffer-Display&quot;&gt;缓冲区显示的Zen&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ac874fec4a2255555483d76cfda857b73f19b6f5" translate="yes" xml:space="preserve">
          <source>This command pops up a window displaying a help buffer containing a listing of all of the key bindings from both the local and global keymaps. It works by calling &lt;code&gt;describe-bindings&lt;/code&gt;.</source>
          <target state="translated">该命令会弹出一个窗口，显示一个帮助缓冲区，其中包含本地和全局键映射中所有键绑定的列表。它通过调用 &lt;code&gt;describe-bindings&lt;/code&gt; 起作用。</target>
        </trans-unit>
        <trans-unit id="5723fae69ad70eaec1a0c94cc1880e06995dbf6e" translate="yes" xml:space="preserve">
          <source>This command provides help for the current mode. It prompts the user in the minibuffer with the message &amp;lsquo;</source>
          <target state="translated">该命令为当前模式提供帮助。它将在迷你缓冲区中提示用户&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="3d5429dbf77aa466883c3c347ea5afc4d4ecb447" translate="yes" xml:space="preserve">
          <source>This command puts &lt;var&gt;buffer-or-name&lt;/var&gt; at the end of the buffer list, without changing the order of any of the other buffers on the list. This buffer therefore becomes the least desirable candidate for &lt;code&gt;other-buffer&lt;/code&gt; to return. The argument can be either a buffer itself or the name of one.</source>
          <target state="translated">此命令将 &lt;var&gt;buffer-or-name&lt;/var&gt; 放在缓冲区列表的末尾，而不更改列表上其他缓冲区的顺序。因此，该缓冲区成为 &lt;code&gt;other-buffer&lt;/code&gt; 返回的最不希望的候选对象。参数可以是缓冲区本身，也可以是名称。</target>
        </trans-unit>
        <trans-unit id="fc70666f0de62aefc6b885233548b561b4ad9a48" translate="yes" xml:space="preserve">
          <source>This command puts a &lt;code&gt;charset&lt;/code&gt; text property on the decoded text. The value of the property states the character set used to decode the original text.</source>
          <target state="translated">此命令将 &lt;code&gt;charset&lt;/code&gt; 文本属性放在解码的文本上。该属性的值表示用于解码原始文本的字符集。</target>
        </trans-unit>
        <trans-unit id="6de88c91142fa60f7a754c756b7132dd95fde0b0" translate="yes" xml:space="preserve">
          <source>This command quits &lt;var&gt;window&lt;/var&gt; and buries its buffer. The argument &lt;var&gt;window&lt;/var&gt; must be a live window and defaults to the selected one. With prefix argument &lt;var&gt;kill&lt;/var&gt; non-&lt;code&gt;nil&lt;/code&gt;, it kills the buffer instead of burying it. It calls the function &lt;code&gt;quit-restore-window&lt;/code&gt; described next to deal with the window and its buffer.</source>
          <target state="translated">此命令退出 &lt;var&gt;window&lt;/var&gt; 并掩埋其缓冲区。参数 &lt;var&gt;window&lt;/var&gt; 必须是活动窗口，并且默认为所选窗口。使用前缀参数 &lt;var&gt;kill&lt;/var&gt; non- &lt;code&gt;nil&lt;/code&gt; ，它将杀死缓冲区而不是将其掩埋。它调用 &lt;code&gt;quit-restore-window&lt;/code&gt; 描述的quit-restore-window函数来处理窗口及其缓冲区。</target>
        </trans-unit>
        <trans-unit id="7784be5e054a212086b929e5c18f79147958b099" translate="yes" xml:space="preserve">
          <source>This command reads input and specifies a prefix argument for the following command. Don&amp;rsquo;t call this command yourself unless you know what you are doing.</source>
          <target state="translated">该命令读取输入并为以下命令指定前缀参数。除非您知道自己在做什么，否则不要自己调用此命令。</target>
        </trans-unit>
        <trans-unit id="1591295b8cfc29c22db263b3bad15c3dee78fff3" translate="yes" xml:space="preserve">
          <source>This command reads the defun containing point, compiles it, and evaluates the result. If you use this on a defun that is actually a function definition, the effect is to install a compiled version of that function.</source>
          <target state="translated">这个命令读取包含点的defun,编译它,并评估结果。如果你在一个实际上是函数定义的defun上使用这个命令,效果是安装该函数的编译版本。</target>
        </trans-unit>
        <trans-unit id="ccfd5aea208043148d6cc8208a6715303f29ede5" translate="yes" xml:space="preserve">
          <source>This command recompiles every &amp;lsquo;</source>
          <target state="translated">该命令将重新编译每个'</target>
        </trans-unit>
        <trans-unit id="9751089f918672ad55bc34859638929401a63127" translate="yes" xml:space="preserve">
          <source>This command reindents the current line, inserts a newline at point, and then indents the new line (the one following the newline just inserted). It does indentation on both lines by calling &lt;code&gt;indent-according-to-mode&lt;/code&gt;.</source>
          <target state="translated">此命令使当前行缩进，在点处插入换行符，然后使新行缩进（刚插入的换行符之后的那一行）。它通过调用 &lt;code&gt;indent-according-to-mode&lt;/code&gt; 在两行上都进行缩进。</target>
        </trans-unit>
        <trans-unit id="674d87b8e0fd1f4a4a927563f934f31afe0923bb" translate="yes" xml:space="preserve">
          <source>This command renames the file &lt;var&gt;filename&lt;/var&gt; as &lt;var&gt;newname&lt;/var&gt;.</source>
          <target state="translated">此命令将文件 &lt;var&gt;filename&lt;/var&gt; 重命名为 &lt;var&gt;newname&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="33cf144a77ee4443b03cc309d47171aef5c0b36b" translate="yes" xml:space="preserve">
          <source>This command replaces &lt;var&gt;buffer-or-name&lt;/var&gt; with some other buffer, in all windows displaying it. &lt;var&gt;buffer-or-name&lt;/var&gt; should be a buffer, or the name of an existing buffer; if omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the current buffer.</source>
          <target state="translated">在所有显示缓冲区的窗口中，此命令将 &lt;var&gt;buffer-or-name&lt;/var&gt; 替换为其他缓冲区。 &lt;var&gt;buffer-or-name&lt;/var&gt; 应该是一个缓冲区，或者是一个现有缓冲区的名称；如果省略或为 &lt;code&gt;nil&lt;/code&gt; ，则默认为当前缓冲区。</target>
        </trans-unit>
        <trans-unit id="f0d050a5b45aa2c2f46e017a12604b72c2821556" translate="yes" xml:space="preserve">
          <source>This command replaces any spaces and tabs around point with a single space, or &lt;var&gt;n&lt;/var&gt; spaces if &lt;var&gt;n&lt;/var&gt; is specified. It returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此命令用单个空格替换点周围的任何空格和制表符；如果指定了 &lt;var&gt;n&lt;/var&gt; ,则替换 &lt;var&gt;n&lt;/var&gt; 个空格。返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e9518563dd9b2c45fb46443171d7c29cc191c74d" translate="yes" xml:space="preserve">
          <source>This command replaces the buffer text with the text of the visited file on disk. This action undoes all changes since the file was visited or saved.</source>
          <target state="translated">该命令将缓冲区文本替换为磁盘上被访问文件的文本。该操作可撤销自文件被访问或保存以来的所有更改。</target>
        </trans-unit>
        <trans-unit id="22808ff36144900f2e5e944e00da7f623fd4b3a9" translate="yes" xml:space="preserve">
          <source>This command replaces the just-yanked entry from the kill ring with a different entry from the kill ring.</source>
          <target state="translated">该命令将刚刚从杀戒中拽出的条目替换为杀戒中的不同条目。</target>
        </trans-unit>
        <trans-unit id="07ac52ca608a413584040db481dee6b468476618" translate="yes" xml:space="preserve">
          <source>This command replaces the minibuffer contents with the value of the &lt;var&gt;n&lt;/var&gt;th more recent history element. The position in the history can go beyond the current position and invoke &amp;ldquo;future history&amp;rdquo; (see &lt;a href=&quot;text-from-minibuffer#Text-from-Minibuffer&quot;&gt;Text from Minibuffer&lt;/a&gt;).</source>
          <target state="translated">此命令用第 &lt;var&gt;n&lt;/var&gt; 个最近的history元素的值替换minibuffer的内容。历史记录中的位置可以超出当前位置，并调用&amp;ldquo;未来历史记录&amp;rdquo;（请参见&lt;a href=&quot;text-from-minibuffer#Text-from-Minibuffer&quot;&gt;Minibuffer中的Text&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="13cd76f72c08b167d7fb003a1c860df5865ff580" translate="yes" xml:space="preserve">
          <source>This command replaces the minibuffer contents with the value of the &lt;var&gt;n&lt;/var&gt;th next (newer) history element that completes the current contents of the minibuffer before the point.</source>
          <target state="translated">此命令用第 &lt;var&gt;n&lt;/var&gt; 个下一个（较新的）历史记录元素的值替换微型缓冲区的内容，该历史记录元素将完成该点之前的微型缓冲区的当前内容。</target>
        </trans-unit>
        <trans-unit id="b3e0669734868d90d1fcc758500f408c04bc7dfd" translate="yes" xml:space="preserve">
          <source>This command replaces the minibuffer contents with the value of the &lt;var&gt;n&lt;/var&gt;th next (newer) history element that matches &lt;var&gt;pattern&lt;/var&gt; (a regular expression).</source>
          <target state="translated">此命令将迷你缓冲区的内容替换为与 &lt;var&gt;pattern&lt;/var&gt; （正则表达式）匹配的第 &lt;var&gt;n&lt;/var&gt; 个next（较新）历史记录元素的值。</target>
        </trans-unit>
        <trans-unit id="3b282fe8a23854b6e15eced034c6b71d3945b917" translate="yes" xml:space="preserve">
          <source>This command replaces the minibuffer contents with the value of the &lt;var&gt;n&lt;/var&gt;th previous (older) history element that completes the current contents of the minibuffer before the point.</source>
          <target state="translated">此命令用第 &lt;var&gt;n&lt;/var&gt; 个先前（较旧的）历史记录元素的值替换微型缓冲区的内容，该历史记录元素将完成该点之前微型缓冲区的当前内容。</target>
        </trans-unit>
        <trans-unit id="497734350baee3d7a9cc50f04dce49e9cd162e22" translate="yes" xml:space="preserve">
          <source>This command replaces the minibuffer contents with the value of the &lt;var&gt;n&lt;/var&gt;th previous (older) history element that matches &lt;var&gt;pattern&lt;/var&gt; (a regular expression).</source>
          <target state="translated">此命令将迷你缓冲区内容替换为与 &lt;var&gt;pattern&lt;/var&gt; （正则表达式）匹配的第 &lt;var&gt;n&lt;/var&gt; 个先前（较旧）历史记录元素的值。</target>
        </trans-unit>
        <trans-unit id="9f32df32b75fee1a1b696fe1b671ad61199effd0" translate="yes" xml:space="preserve">
          <source>This command replaces the minibuffer contents with the value of the &lt;var&gt;n&lt;/var&gt;th previous (older) history element.</source>
          <target state="translated">此命令用第 &lt;var&gt;n&lt;/var&gt; 个先前（旧）历史记录元素的值替换迷你缓冲区的内容。</target>
        </trans-unit>
        <trans-unit id="638e9bd64e02db086d2bae52aaade55f7482e7f0" translate="yes" xml:space="preserve">
          <source>This command returns &lt;code&gt;t&lt;/code&gt; if there were no errors and &lt;code&gt;nil&lt;/code&gt; otherwise. When called interactively, it prompts for the file name.</source>
          <target state="translated">如果没有错误，则此命令返回 &lt;code&gt;t&lt;/code&gt; ，否则返回 &lt;code&gt;nil&lt;/code&gt; 。交互式调用时，提示输入文件名。</target>
        </trans-unit>
        <trans-unit id="10ca3b92e36af6ad1335e500f3c9780ba8e9a634" translate="yes" xml:space="preserve">
          <source>This command runs a garbage collection, and returns information on the amount of space in use. (Garbage collection can also occur spontaneously if you use more than &lt;code&gt;gc-cons-threshold&lt;/code&gt; bytes of Lisp data since the previous garbage collection.)</source>
          <target state="translated">此命令运行垃圾回收，并返回有关正在使用的空间量的信息。（如果自上次垃圾回收以来使用的Lisp数据的 &lt;code&gt;gc-cons-threshold&lt;/code&gt; 个字节以上，垃圾回收也会自发进行。）</target>
        </trans-unit>
        <trans-unit id="287189d05b8e5e37d32c497a6b1eee7be4d183d7" translate="yes" xml:space="preserve">
          <source>This command saves some modified file-visiting buffers. Normally it asks the user about each buffer. But if &lt;var&gt;save-silently-p&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it saves all the file-visiting buffers without querying the user.</source>
          <target state="translated">该命令保存一些修改后的文件访问缓冲区。通常，它向用户询问每个缓冲区。但是，如果 &lt;var&gt;save-silently-p&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，它将保存所有文件访问缓冲区，而无需查询用户。</target>
        </trans-unit>
        <trans-unit id="a65db190be7f6c671adcc98a7f3f5116e59141fd" translate="yes" xml:space="preserve">
          <source>This command selects a buffer visiting the file &lt;var&gt;filename&lt;/var&gt;, but does so in a window other than the selected window. It may use another existing window or split a window; see &lt;a href=&quot;switching-buffers#Switching-Buffers&quot;&gt;Switching Buffers&lt;/a&gt;.</source>
          <target state="translated">该命令选择一个访问文件 &lt;var&gt;filename&lt;/var&gt; 的缓冲区，但是在选定窗口之外的其他窗口中执行此操作。它可以使用另一个现有窗口或拆分一个窗口。请参阅&lt;a href=&quot;switching-buffers#Switching-Buffers&quot;&gt;切换缓冲区&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="619c7615c5651d8ad33d34daff2f42c9a21daef4" translate="yes" xml:space="preserve">
          <source>This command selects a buffer visiting the file &lt;var&gt;filename&lt;/var&gt;, like &lt;code&gt;find-file&lt;/code&gt;, but it marks the buffer as read-only. See &lt;a href=&quot;read-only-buffers#Read-Only-Buffers&quot;&gt;Read Only Buffers&lt;/a&gt;, for related functions and variables.</source>
          <target state="translated">此命令选择访问文件 &lt;var&gt;filename&lt;/var&gt; 的缓冲区，例如 &lt;code&gt;find-file&lt;/code&gt; ，但它将缓冲区标记为只读。有关相关功能和变量，请参见&lt;a href=&quot;read-only-buffers#Read-Only-Buffers&quot;&gt;只读缓冲区&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="37e929336c842c198502c93ddeffe557c6b40269" translate="yes" xml:space="preserve">
          <source>This command selects a buffer visiting the file &lt;var&gt;filename&lt;/var&gt;, using an existing buffer if there is one, and otherwise creating a new buffer and reading the file into it. It also returns that buffer.</source>
          <target state="translated">此命令选择一个访问文件文件 &lt;var&gt;filename&lt;/var&gt; 的缓冲区，如果有，则使用现有缓冲区，否则创建一个新缓冲区并将文件读入其中。它还返回该缓冲区。</target>
        </trans-unit>
        <trans-unit id="13ded09804e080074b521082674aed70b9290aa1" translate="yes" xml:space="preserve">
          <source>This command sets the value of the environment variable named &lt;var&gt;variable&lt;/var&gt; to &lt;var&gt;value&lt;/var&gt;. &lt;var&gt;variable&lt;/var&gt; should be a string. Internally, Emacs Lisp can handle any string. However, normally &lt;var&gt;variable&lt;/var&gt; should be a valid shell identifier, that is, a sequence of letters, digits and underscores, starting with a letter or underscore. Otherwise, errors may occur if subprocesses of Emacs try to access the value of &lt;var&gt;variable&lt;/var&gt;. If &lt;var&gt;value&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt; (or, interactively, with a prefix argument), &lt;code&gt;setenv&lt;/code&gt; removes &lt;var&gt;variable&lt;/var&gt; from the environment. Otherwise, &lt;var&gt;value&lt;/var&gt; should be a string.</source>
          <target state="translated">此命令将名为 &lt;var&gt;variable&lt;/var&gt; 的环境变量的值设置为 &lt;var&gt;value&lt;/var&gt; 。 &lt;var&gt;variable&lt;/var&gt; 应为字符串。在内部，Emacs Lisp可以处理任何字符串。但是，通常 &lt;var&gt;variable&lt;/var&gt; 应该是有效的外壳标识符，即由字母，数字和下划线组成的序列，以字母或下划线开头。否则，如果Emacs的子进程尝试访问 &lt;var&gt;variable&lt;/var&gt; 的值，则可能会发生错误。如果 &lt;var&gt;value&lt;/var&gt; 省略或为 &lt;code&gt;nil&lt;/code&gt; （或者交互地，带有一个前缀参数），则 &lt;code&gt;setenv&lt;/code&gt; 从环境中删除 &lt;var&gt;variable&lt;/var&gt; 。否则， &lt;var&gt;value&lt;/var&gt; 应为字符串。</target>
        </trans-unit>
        <trans-unit id="8fcaeef993ea25251e9368bd64870310e08df302" translate="yes" xml:space="preserve">
          <source>This command shows a list of &lt;em&gt;shadowed&lt;/em&gt; Emacs Lisp files. A shadowed file is one that will not normally be loaded, despite being in a directory on &lt;code&gt;load-path&lt;/code&gt;, due to the existence of another similarly-named file in a directory earlier on &lt;code&gt;load-path&lt;/code&gt;.</source>
          <target state="translated">此命令显示&lt;em&gt;阴影的&lt;/em&gt;Emacs Lisp文件列表。阴影文件是尽管位于 &lt;code&gt;load-path&lt;/code&gt; 上的目录中，但通常不会被加载的文件，这是由于在 &lt;code&gt;load-path&lt;/code&gt; 较早的目录中存在另一个名称相似的文件。</target>
        </trans-unit>
        <trans-unit id="07f6c3981498b51aac23952451390d803e768897" translate="yes" xml:space="preserve">
          <source>This command sorts lines in the region between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;, comparing them alphabetically by the &lt;var&gt;field&lt;/var&gt;th field of each line. Fields are separated by whitespace and numbered starting from 1. If &lt;var&gt;field&lt;/var&gt; is negative, sorting is by the -&lt;var&gt;field&lt;/var&gt;th field from the end of the line. This command is useful for sorting tables.</source>
          <target state="translated">此命令在 &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 之间的区域中对行进行排序，并按每行的 &lt;var&gt;field&lt;/var&gt; th的字母顺序对它们进行比较。字段由空格分开和编号从1开始。如果 &lt;var&gt;field&lt;/var&gt; 是否定的，排序是由- &lt;var&gt;field&lt;/var&gt; 从行的末尾个字段。此命令对表排序很有用。</target>
        </trans-unit>
        <trans-unit id="3019d8e29e6476b8ff59ceed7b700968370b929b" translate="yes" xml:space="preserve">
          <source>This command sorts lines in the region between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;, comparing them numerically by the &lt;var&gt;field&lt;/var&gt;th field of each line. Fields are separated by whitespace and numbered starting from 1. The specified field must contain a number in each line of the region. Numbers starting with 0 are treated as octal, and numbers starting with &amp;lsquo;</source>
          <target state="translated">这个命令在排序之间的区域线 &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; ，通过数字比较它们 &lt;var&gt;field&lt;/var&gt; 的每一行的第字段。字段由空格分隔，并从1开始编号。指定的字段在区域的每一行中必须包含一个数字。以0开头的数字被视为八进制，以'开头的数字被视为</target>
        </trans-unit>
        <trans-unit id="3f75fc7ca83d71510b5e60c2231077f6130bda3c" translate="yes" xml:space="preserve">
          <source>This command sorts the lines in the region between &lt;var&gt;beg&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;, comparing them alphabetically by a certain range of columns. The column positions of &lt;var&gt;beg&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; bound the range of columns to sort on.</source>
          <target state="translated">此命令对 &lt;var&gt;beg&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 之间的区域中的行进行排序，并按一定范围的列按字母顺序比较它们。 &lt;var&gt;beg&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 的列位置限制了要进行排序的列的范围。</target>
        </trans-unit>
        <trans-unit id="57757a00ef15c31f9fc056499bcdca26426aeaa5" translate="yes" xml:space="preserve">
          <source>This command sorts the region between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; alphabetically as specified by &lt;var&gt;record-regexp&lt;/var&gt; and &lt;var&gt;key-regexp&lt;/var&gt;. If &lt;var&gt;reverse&lt;/var&gt; is a negative integer, then sorting is in reverse order.</source>
          <target state="translated">此命令按 &lt;var&gt;record-regexp&lt;/var&gt; 和 &lt;var&gt;key-regexp&lt;/var&gt; 的字母顺序对 &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 之间的区域进行排序。如果 &lt;var&gt;reverse&lt;/var&gt; 是一个负整数，则排序顺序相反。</target>
        </trans-unit>
        <trans-unit id="ba41cb2c6960acb24c793517b69fd12158f503c0" translate="yes" xml:space="preserve">
          <source>This command specifies &lt;var&gt;coding-system&lt;/var&gt; as the coding system to use for decoding keyboard input from &lt;var&gt;terminal&lt;/var&gt;. If &lt;var&gt;coding-system&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, that means not to decode keyboard input. If &lt;var&gt;terminal&lt;/var&gt; is a frame, it means that frame&amp;rsquo;s terminal; if it is &lt;code&gt;nil&lt;/code&gt;, that means the currently selected frame&amp;rsquo;s terminal. See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;.</source>
          <target state="translated">该命令指定 &lt;var&gt;coding-system&lt;/var&gt; 作为编码系统以用于从解码键盘输入 &lt;var&gt;terminal&lt;/var&gt; 。如果 &lt;var&gt;coding-system&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则表示不解码键盘输入。如果 &lt;var&gt;terminal&lt;/var&gt; 是一个框架，则表示该框架的终端；如果为 &lt;code&gt;nil&lt;/code&gt; ，则表示当前选定帧的终端。请参阅&lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;多个终端&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0dc215892711b17131d8d46b78cbf66e212449eb" translate="yes" xml:space="preserve">
          <source>This command specifies &lt;var&gt;coding-system&lt;/var&gt; as the coding system to use for encoding terminal output from &lt;var&gt;terminal&lt;/var&gt;. If &lt;var&gt;coding-system&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, that means not to encode terminal output. If &lt;var&gt;terminal&lt;/var&gt; is a frame, it means that frame&amp;rsquo;s terminal; if it is &lt;code&gt;nil&lt;/code&gt;, that means the currently selected frame&amp;rsquo;s terminal.</source>
          <target state="translated">该命令指定 &lt;var&gt;coding-system&lt;/var&gt; 作为编码系统使用从编码端输出 &lt;var&gt;terminal&lt;/var&gt; 。如果 &lt;var&gt;coding-system&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则表示不对终端输出进行编码。如果 &lt;var&gt;terminal&lt;/var&gt; 是一个框架，则表示该框架的终端；如果为 &lt;code&gt;nil&lt;/code&gt; ，则表示当前选定帧的终端。</target>
        </trans-unit>
        <trans-unit id="31ef5d19b3155f5becd62fb28fc0818272b9cc71" translate="yes" xml:space="preserve">
          <source>This command swaps the states of the two live windows &lt;var&gt;window-1&lt;/var&gt; and &lt;var&gt;window-2&lt;/var&gt;. &lt;var&gt;window-1&lt;/var&gt; must specify a live window and defaults to the selected one. &lt;var&gt;window-2&lt;/var&gt; must specify a live window and defaults to the window following &lt;var&gt;window-1&lt;/var&gt; in the cyclic ordering of windows, excluding minibuffer windows and including live windows on all visible frames.</source>
          <target state="translated">此命令交换两个活动窗口 &lt;var&gt;window-1&lt;/var&gt; 和 &lt;var&gt;window-2&lt;/var&gt; 的状态。 &lt;var&gt;window-1&lt;/var&gt; 必须指定一个实时窗口，并且默认为选定的窗口。 &lt;var&gt;window-2&lt;/var&gt; 必须指定一个实时窗口，并且按照 &lt;var&gt;window-1&lt;/var&gt; 的循环顺序默认为window-1之后的窗口，不包括小型缓冲区窗口，并且包括所有可见帧上的实时窗口。</target>
        </trans-unit>
        <trans-unit id="38ad262b9ef6f144a88897489a62c92c0533d472" translate="yes" xml:space="preserve">
          <source>This command switches to the last buffer in the local buffer list of the selected frame. More precisely, it calls the function &lt;code&gt;switch-to-buffer&lt;/code&gt; (see &lt;a href=&quot;switching-buffers#Switching-Buffers&quot;&gt;Switching Buffers&lt;/a&gt;), to display the buffer returned by &lt;code&gt;last-buffer&lt;/code&gt; (see above), in the selected window.</source>
          <target state="translated">该命令切换到所选帧的本地缓冲区列表中的最后一个缓冲区。更准确地说，它在所选窗口中调用功能 &lt;code&gt;switch-to-buffer&lt;/code&gt; （请参阅&lt;a href=&quot;switching-buffers#Switching-Buffers&quot;&gt;Switching Buffers&lt;/a&gt;），以显示 &lt;code&gt;last-buffer&lt;/code&gt; 返回的缓冲区（请参见上文）。</target>
        </trans-unit>
        <trans-unit id="cfb86fe983df33f50f05c06e7ced705595b9ec16" translate="yes" xml:space="preserve">
          <source>This command switches to the next buffer in &lt;var&gt;window&lt;/var&gt;, thus undoing the effect of the last &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; command in &lt;var&gt;window&lt;/var&gt;. The argument &lt;var&gt;window&lt;/var&gt; must be a live window and defaults to the selected one.</source>
          <target state="translated">该命令切换到在接下来的缓冲器 &lt;var&gt;window&lt;/var&gt; ，从而撤消最后的效果 &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; 命令 &lt;var&gt;window&lt;/var&gt; 。参数 &lt;var&gt;window&lt;/var&gt; 必须是活动窗口，并且默认为所选窗口。</target>
        </trans-unit>
        <trans-unit id="d9ffcd53e229520bbe0937ce47720e3e3f705fc8" translate="yes" xml:space="preserve">
          <source>This command toggles side windows on the specified &lt;var&gt;frame&lt;/var&gt;. The optional argument &lt;var&gt;frame&lt;/var&gt; must be a live frame and defaults to the selected one.</source>
          <target state="translated">此命令在指定 &lt;var&gt;frame&lt;/var&gt; 上切换侧窗。可选参数 &lt;var&gt;frame&lt;/var&gt; 必须是实时框架，并且默认为所选框架。</target>
        </trans-unit>
        <trans-unit id="bc39e2355c8315301a176946b4646d703991a6f2" translate="yes" xml:space="preserve">
          <source>This command tries to work out appropriate settings to produce your preferred style of indentation. Simply call the command while visiting a file that is indented with your style.</source>
          <target state="translated">这条命令试图通过适当的设置来产生你喜欢的缩进风格。只需在访问一个以你的风格缩进的文件时调用该命令即可。</target>
        </trans-unit>
        <trans-unit id="aec6ebd98eae587585dc1ea9fa515c8692ebbf2e" translate="yes" xml:space="preserve">
          <source>This command unloads the library that provided feature &lt;var&gt;feature&lt;/var&gt;. It undefines all functions, macros, and variables defined in that library with &lt;code&gt;defun&lt;/code&gt;, &lt;code&gt;defalias&lt;/code&gt;, &lt;code&gt;defsubst&lt;/code&gt;, &lt;code&gt;defmacro&lt;/code&gt;, &lt;code&gt;defconst&lt;/code&gt;, &lt;code&gt;defvar&lt;/code&gt;, and &lt;code&gt;defcustom&lt;/code&gt;. It then restores any autoloads formerly associated with those symbols. (Loading saves these in the &lt;code&gt;autoload&lt;/code&gt; property of the symbol.)</source>
          <target state="translated">此命令将卸载提供功能 &lt;var&gt;feature&lt;/var&gt; 的库。它取消定义的所有功能，宏和在库中定义使用变量 &lt;code&gt;defun&lt;/code&gt; 定义， &lt;code&gt;defalias&lt;/code&gt; ， &lt;code&gt;defsubst&lt;/code&gt; ， &lt;code&gt;defmacro&lt;/code&gt; ， &lt;code&gt;defconst&lt;/code&gt; ， &lt;code&gt;defvar&lt;/code&gt; 和 &lt;code&gt;defcustom&lt;/code&gt; 。然后，它将恢复以前与这些符号关联的所有自动加载。（加载会将它们保存在元件的 &lt;code&gt;autoload&lt;/code&gt; 属性中。）</target>
        </trans-unit>
        <trans-unit id="356e5adce275e326509a202c8c9b173cedf5f1de" translate="yes" xml:space="preserve">
          <source>This command uses the functions &lt;code&gt;posn-window&lt;/code&gt; and &lt;code&gt;posn-point&lt;/code&gt; to determine where the click occurred, and &lt;code&gt;dired-get-file-for-visit&lt;/code&gt; to determine which file to visit.</source>
          <target state="translated">该命令使用 &lt;code&gt;posn-window&lt;/code&gt; 和 &lt;code&gt;posn-point&lt;/code&gt; 函数确定单击发生的位置，并使用 &lt;code&gt;dired-get-file-for-visit&lt;/code&gt; 确定要访问的文件。</target>
        </trans-unit>
        <trans-unit id="70fe8bc0bd2afe94a6c2200d117768d0b7bd40a2" translate="yes" xml:space="preserve">
          <source>This command visits &lt;var&gt;filename&lt;/var&gt;, like &lt;code&gt;find-file&lt;/code&gt; does, but it does not perform any format conversions (see &lt;a href=&quot;format-conversion#Format-Conversion&quot;&gt;Format Conversion&lt;/a&gt;), character code conversions (see &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Coding Systems&lt;/a&gt;), or end-of-line conversions (see &lt;a href=&quot;coding-system-basics#Coding-System-Basics&quot;&gt;End of line conversion&lt;/a&gt;). The buffer visiting the file is made unibyte, and its major mode is Fundamental mode, regardless of the file name. File local variable specifications in the file (see &lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;File Local Variables&lt;/a&gt;) are ignored, and automatic decompression and adding a newline at the end of the file due to &lt;code&gt;require-final-newline&lt;/code&gt; (see &lt;a href=&quot;saving-buffers#Saving-Buffers&quot;&gt;require-final-newline&lt;/a&gt;) are also disabled.</source>
          <target state="translated">该命令访问 &lt;var&gt;filename&lt;/var&gt; ，就像 &lt;code&gt;find-file&lt;/code&gt; 一样，但是它不执行任何格式转换（请参阅&lt;a href=&quot;format-conversion#Format-Conversion&quot;&gt;Format Conversion&lt;/a&gt;），字符代码转换（请参见&lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Coding Systems&lt;/a&gt;）或行&lt;a href=&quot;coding-system-basics#Coding-System-Basics&quot;&gt;尾&lt;/a&gt;转换（请参见行尾转换）。访问文件的缓冲区的大小为unibyte，无论文件名如何，其主要模式均为&amp;ldquo;基本&amp;rdquo;模式。文件中的文件局部变量规范（请参阅&lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;文件局部变量&lt;/a&gt;）将被忽略，并且由于 &lt;code&gt;require-final-newline&lt;/code&gt; （请参见&lt;a href=&quot;saving-buffers#Saving-Buffers&quot;&gt;require-final-newline&lt;/a&gt;）而导致的自动解压缩和在文件末尾添加换行符也被禁用。</target>
        </trans-unit>
        <trans-unit id="cc4dc7bbf64c1061c70eb1b72dd4950577a5fd5f" translate="yes" xml:space="preserve">
          <source>This command writes the current buffer contents into the file &lt;var&gt;file&lt;/var&gt; in a format based on &lt;var&gt;format&lt;/var&gt;, which is a list of format names. It constructs the actual format starting from &lt;var&gt;format&lt;/var&gt;, then appending any elements from the value of &lt;code&gt;buffer-file-format&lt;/code&gt; with a non-&lt;code&gt;nil&lt;/code&gt;&lt;var&gt;preserve&lt;/var&gt; flag (see above), if they are not already present in &lt;var&gt;format&lt;/var&gt;. It then updates &lt;code&gt;buffer-file-format&lt;/code&gt; with this format, making it the default for future saves. Except for the &lt;var&gt;format&lt;/var&gt; argument, this command is similar to &lt;code&gt;write-file&lt;/code&gt;. In particular, &lt;var&gt;confirm&lt;/var&gt; has the same meaning and interactive treatment as the corresponding argument to &lt;code&gt;write-file&lt;/code&gt;. See &lt;a href=&quot;saving-buffers#Definition-of-write_002dfile&quot;&gt;Definition of write-file&lt;/a&gt;.</source>
          <target state="translated">此命令以基于 &lt;var&gt;format&lt;/var&gt; 的格式将当前缓冲区内容写入文件 &lt;var&gt;file&lt;/var&gt; ，该格式是格式名称的列表。它构造的实际格式从开始 &lt;var&gt;format&lt;/var&gt; ，然后从附加的价值的任何元件 &lt;code&gt;buffer-file-format&lt;/code&gt; 与非 &lt;code&gt;nil&lt;/code&gt; &lt;var&gt;preserve&lt;/var&gt; 标志（见上文），如果它们不已经存在于 &lt;var&gt;format&lt;/var&gt; 。然后，它将使用此格式更新 &lt;code&gt;buffer-file-format&lt;/code&gt; 格式，使其成为以后保存的默认文件格式。除了 &lt;var&gt;format&lt;/var&gt; 参数之外，此命令类似于 &lt;code&gt;write-file&lt;/code&gt; 。特别要 &lt;var&gt;confirm&lt;/var&gt; 与 &lt;code&gt;write-file&lt;/code&gt; 的相应参数具有相同的含义和交互处理。请参阅&lt;a href=&quot;saving-buffers#Definition-of-write_002dfile&quot;&gt;写入文件的定义&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="231ec5f5ccc3d6dde477ef14115ec1745ff1897f" translate="yes" xml:space="preserve">
          <source>This command, bound to</source>
          <target state="translated">这个命令,绑定到</target>
        </trans-unit>
        <trans-unit id="1c3338397e232f86b2750514859093fc8810288c" translate="yes" xml:space="preserve">
          <source>This command, which is the default binding for</source>
          <target state="translated">该命令是</target>
        </trans-unit>
        <trans-unit id="b5a33db16e2d6add492eed0394d609b8c28b88b4" translate="yes" xml:space="preserve">
          <source>This completely replaces the old function with the new one. The old function can of course be recovered if you later call &lt;code&gt;remove-function&lt;/code&gt;.</source>
          <target state="translated">这将旧功能完全替换为新功能。如果您以后调用 &lt;code&gt;remove-function&lt;/code&gt; ，当然可以恢复旧功能。</target>
        </trans-unit>
        <trans-unit id="c78019f6748a3a6dfca00bef66b7291ea1529488" translate="yes" xml:space="preserve">
          <source>This constant is the name of the file where Emacs expects to find the directory-local variables. The name of the file is</source>
          <target state="translated">这个常量是Emacs期望在其中找到目录本地变量的文件名。该文件的名称是</target>
        </trans-unit>
        <trans-unit id="cb3b8895def2bfbb6c4dd8d0eb4984894e99c3df" translate="yes" xml:space="preserve">
          <source>This construct displays a message in the echo area temporarily, during the execution of &lt;var&gt;body&lt;/var&gt;. It displays &lt;var&gt;message&lt;/var&gt;, executes &lt;var&gt;body&lt;/var&gt;, then returns the value of the last body form while restoring the previous echo area contents.</source>
          <target state="translated">在执行 &lt;var&gt;body&lt;/var&gt; 的过程中，此构造会在回显区域中临时显示一条消息。它显示 &lt;var&gt;message&lt;/var&gt; ，执行 &lt;var&gt;body&lt;/var&gt; ，然后在恢复先前回显区域内容的同时返回最后一个body形式的值。</target>
        </trans-unit>
        <trans-unit id="19e009e83502b67dc27aa2e568013fdd27a55bfb" translate="yes" xml:space="preserve">
          <source>This construct does not actually match an argument. The element following &lt;code&gt;:name&lt;/code&gt; should be a symbol; it is used as an additional name component for the definition. You can use this to add a unique, static component to the name of the definition. It may be used more than once.</source>
          <target state="translated">该构造实际上与参数不匹配。 &lt;code&gt;:name&lt;/code&gt; 之后的元素应为符号；它用作定义的附加名称组件。您可以使用它向定义名称添加唯一的静态组件。可能会多次使用。</target>
        </trans-unit>
        <trans-unit id="48f87892a7b85d73b302dd7a6522316e48ec0085" translate="yes" xml:space="preserve">
          <source>This construct executes &lt;var&gt;body&lt;/var&gt; once for each element of &lt;var&gt;list&lt;/var&gt;, binding the variable &lt;var&gt;var&lt;/var&gt; locally to hold the current element. Then it returns the value of evaluating &lt;var&gt;result&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;result&lt;/var&gt; is omitted. For example, here is how you could use &lt;code&gt;dolist&lt;/code&gt; to define the &lt;code&gt;reverse&lt;/code&gt; function:</source>
          <target state="translated">此构造对 &lt;var&gt;list&lt;/var&gt; 的每个元素执行一次 &lt;var&gt;body&lt;/var&gt; ，在本地绑定变量 &lt;var&gt;var&lt;/var&gt; 来保存当前元素。然后，它返回计算的值 &lt;var&gt;result&lt;/var&gt; ，或 &lt;code&gt;nil&lt;/code&gt; 如果 &lt;var&gt;result&lt;/var&gt; 被省略。例如，以下是使用 &lt;code&gt;dolist&lt;/code&gt; 定义 &lt;code&gt;reverse&lt;/code&gt; 函数的方法：</target>
        </trans-unit>
        <trans-unit id="5edeb3c65e633a355ce3aad85a8fef27095ea9cb" translate="yes" xml:space="preserve">
          <source>This construct executes &lt;var&gt;body&lt;/var&gt; once for each integer from 0 (inclusive) to &lt;var&gt;count&lt;/var&gt; (exclusive), binding the variable &lt;var&gt;var&lt;/var&gt; to the integer for the current iteration. Then it returns the value of evaluating &lt;var&gt;result&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;result&lt;/var&gt; is omitted. Use of &lt;var&gt;result&lt;/var&gt; is deprecated. Here is an example of using &lt;code&gt;dotimes&lt;/code&gt; to do something 100 times:</source>
          <target state="translated">此构造对从0（含）到 &lt;var&gt;count&lt;/var&gt; （不包括）的每个整数执行一次 &lt;var&gt;body&lt;/var&gt; ，将变量 &lt;var&gt;var&lt;/var&gt; 绑定到当前迭代的整数。然后，它返回计算的值 &lt;var&gt;result&lt;/var&gt; ，或 &lt;code&gt;nil&lt;/code&gt; 如果 &lt;var&gt;result&lt;/var&gt; 被省略。不建议使用 &lt;var&gt;result&lt;/var&gt; 。这是一个使用 &lt;code&gt;dotimes&lt;/code&gt; 做100次的示例：</target>
        </trans-unit>
        <trans-unit id="729255fd2a9e62ab0803f3c02c4b17ced59d0e9e" translate="yes" xml:space="preserve">
          <source>This construct executes &lt;var&gt;body&lt;/var&gt;, ignoring any errors that occur during its execution. If the execution is without error, &lt;code&gt;ignore-errors&lt;/code&gt; returns the value of the last form in &lt;var&gt;body&lt;/var&gt;; otherwise, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此构造执行 &lt;var&gt;body&lt;/var&gt; ，而忽略其执行期间发生的任何错误。如果执行没有错误，则 &lt;code&gt;ignore-errors&lt;/code&gt; 将返回 &lt;var&gt;body&lt;/var&gt; 中最后一个形式的值；否则，返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7fe97e88530edbe7ffd947ec1877e85b28490bc0" translate="yes" xml:space="preserve">
          <source>This construct runs the &lt;var&gt;body&lt;/var&gt; forms and returns the value of the last one&amp;mdash;but only if no input arrives. If any input arrives during the execution of the &lt;var&gt;body&lt;/var&gt; forms, it aborts them (working much like a quit). The &lt;code&gt;while-no-input&lt;/code&gt; form returns &lt;code&gt;nil&lt;/code&gt; if aborted by a real quit, and returns &lt;code&gt;t&lt;/code&gt; if aborted by arrival of other input.</source>
          <target state="translated">该构造运行 &lt;var&gt;body&lt;/var&gt; 形式并返回最后一个形式的值，但仅当没有输入到达时才返回。如果在执行 &lt;var&gt;body&lt;/var&gt; 表单期间有任何输入到达，它将中止它们（非常像退出）。的 &lt;code&gt;while-no-input&lt;/code&gt; 形式返回 &lt;code&gt;nil&lt;/code&gt; 如果中止通过实际退出，并返回 &lt;code&gt;t&lt;/code&gt; 如果由其它输入的到达中止。</target>
        </trans-unit>
        <trans-unit id="5db1b36ddb8cefe12158ea887c23f8581f528854" translate="yes" xml:space="preserve">
          <source>This constructs and returns a new ewoc, with no nodes (and thus no data elements). &lt;var&gt;pretty-printer&lt;/var&gt; should be a function that takes one argument, a data element of the sort you plan to use in this ewoc, and inserts its textual description at point using &lt;code&gt;insert&lt;/code&gt; (and never &lt;code&gt;insert-before-markers&lt;/code&gt;, because that would interfere with the Ewoc package&amp;rsquo;s internal mechanisms).</source>
          <target state="translated">这将构造并返回没有节点（因此没有数据元素）的新ewoc。 &lt;var&gt;pretty-printer&lt;/var&gt; 应该是一个函数，该函数接受一个参数，这是您计划在此ewoc中使用的数据元素，并使用 &lt;code&gt;insert&lt;/code&gt; （永远不要 &lt;code&gt;insert-before-markers&lt;/code&gt; )将其文本描述插入到该点，因为这会干扰Ewoc软件包的内部机制）。</target>
        </trans-unit>
        <trans-unit id="441d920027c6093e76edc8e411782a53d6bb5e30" translate="yes" xml:space="preserve">
          <source>This controls the way Edebug treats macro arguments with no explicit Edebug specification. If it is &lt;code&gt;nil&lt;/code&gt; (the default), none of the arguments is instrumented for evaluation. Otherwise, all arguments are instrumented.</source>
          <target state="translated">这可以控制Edebug在没有明确的Edebug规范的情况下对待宏参数的方式。如果它为 &lt;code&gt;nil&lt;/code&gt; （默认值），则不会对任何参数进行评估。否则，将检测所有参数。</target>
        </trans-unit>
        <trans-unit id="1a02ef040a510f44b26c35aeb75b50ba1b7bdde8" translate="yes" xml:space="preserve">
          <source>This convenience macro marks the function &lt;var&gt;obsolete-name&lt;/var&gt; obsolete and also defines it as an alias for the function &lt;var&gt;current-name&lt;/var&gt;. It is equivalent to the following:</source>
          <target state="translated">此便利宏将功能 &lt;var&gt;obsolete-name&lt;/var&gt; 标记为过时，并将其定义为功能 &lt;var&gt;current-name&lt;/var&gt; 的别名。它等效于以下内容：</target>
        </trans-unit>
        <trans-unit id="58832b1d25d27190f05819990c90bc4cfbcc3a90" translate="yes" xml:space="preserve">
          <source>This conversion applies only to characters, not to function keys or other input events; thus,</source>
          <target state="translated">这种转换只适用于字符,不适用于功能键或其他输入事件;因此。</target>
        </trans-unit>
        <trans-unit id="79546043fcba05c53c168bdc77fbb653585fc00b" translate="yes" xml:space="preserve">
          <source>This convert the unibyte character &lt;var&gt;char&lt;/var&gt; to a multibyte character, assuming &lt;var&gt;char&lt;/var&gt; is either</source>
          <target state="translated">假设 &lt;var&gt;char&lt;/var&gt; 为以下任一字符，它将单字节字符 &lt;var&gt;char&lt;/var&gt; 转换为多字节字符</target>
        </trans-unit>
        <trans-unit id="cac58ff91ecd012d9aad90d0f0a1004caffe50f4" translate="yes" xml:space="preserve">
          <source>This converts the multibyte character &lt;var&gt;char&lt;/var&gt; to a unibyte character, and returns that character. If &lt;var&gt;char&lt;/var&gt; is neither</source>
          <target state="translated">这会将多字节字符 &lt;var&gt;char&lt;/var&gt; 转换为单字节字符，然后返回该字符。如果 &lt;var&gt;char&lt;/var&gt; 都不是</target>
        </trans-unit>
        <trans-unit id="6cd8dd35aa5e580db302a8a9ecc6bc6acb3d465f" translate="yes" xml:space="preserve">
          <source>This corresponds to &lt;code&gt;__attribute__&amp;nbsp;((__noinline__))&lt;/code&gt; attribute of GCC, which prevents the function from being considered for inlining. This might be needed, e.g., to countermand effects of link-time optimizations on stack-based variables.</source>
          <target state="translated">这对应于GCC的 &lt;code&gt;__attribute__&amp;nbsp;((__noinline__))&lt;/code&gt; 属性，可防止考虑将函数内联。例如，可能需要这样做来抵消链接时优化对基于堆栈的变量的影响。</target>
        </trans-unit>
        <trans-unit id="65593ddaa7a83e6841f2adf0699dc9186e0f9090" translate="yes" xml:space="preserve">
          <source>This could be buffer-local to do something special for specific files. If you change it, you may need to change &lt;code&gt;backup-file-name-p&lt;/code&gt; and &lt;code&gt;file-name-sans-versions&lt;/code&gt; too.</source>
          <target state="translated">这可能是局部于缓冲区的，以对特定文件进行特殊处理。如果更改它，则可能还需要更改 &lt;code&gt;backup-file-name-p&lt;/code&gt; 和 &lt;code&gt;file-name-sans-versions&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a566ed5cac8786dd67797d3a0d120ea76183719e" translate="yes" xml:space="preserve">
          <source>This could be implemented with multiple buffers (kept in sync when the user edits the text), or with narrowing (see &lt;a href=&quot;narrowing#Narrowing&quot;&gt;Narrowing&lt;/a&gt;). But these alternatives might sometimes become tedious or prohibitively expensive, especially if each type of text requires expensive buffer-global operations in order to provide correct display and editing commands.</source>
          <target state="translated">这可以通过多个缓冲区（在用户编辑文本时保持同步）或缩小（请参见&lt;a href=&quot;narrowing#Narrowing&quot;&gt;Narrowing&lt;/a&gt;）来实现。但是这些替代方法有时可能变得乏味或昂贵，特别是如果每​​种类型的文本都需要昂贵的缓冲区全局操作以提供正确的显示和编辑命令时，尤其如此。</target>
        </trans-unit>
        <trans-unit id="f394b60e38b5599682704674137ba41a07c7b541" translate="yes" xml:space="preserve">
          <source>This creates an uninterned symbol named &lt;code&gt;max&lt;/code&gt; and puts it in the expansion instead of the usual interned symbol &lt;code&gt;max&lt;/code&gt; that appears in expressions ordinarily.</source>
          <target state="translated">这将创建一个名为uninterned符号 &lt;code&gt;max&lt;/code&gt; 的扩张，而不是通常的实习标志，并把它 &lt;code&gt;max&lt;/code&gt; 出现在表达式中一般。</target>
        </trans-unit>
        <trans-unit id="7aeb8bdf71d865646040e73e725aecf3fd6800e0" translate="yes" xml:space="preserve">
          <source>This creates and returns a display table. The table initially has &lt;code&gt;nil&lt;/code&gt; in all elements.</source>
          <target state="translated">这将创建并返回一个显示表。该表最初在所有元素中都为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="776e4b68583132ebfa42a8a0e9f9b4feb850568e" translate="yes" xml:space="preserve">
          <source>This creates and returns an empty category table. In an empty category table, no categories have been allocated, and no characters belong to any categories.</source>
          <target state="translated">这将创建并返回一个空类别表。在一个空的类别表中,没有分配任何类别,也没有任何字符属于任何类别。</target>
        </trans-unit>
        <trans-unit id="e1c8b5645bc9119e30c1142a0bf9ab49e40da845" translate="yes" xml:space="preserve">
          <source>This creates and returns an indirect buffer named &lt;var&gt;name&lt;/var&gt; whose base buffer is &lt;var&gt;base-buffer&lt;/var&gt;. The argument &lt;var&gt;base-buffer&lt;/var&gt; may be a live buffer or the name (a string) of an existing buffer. If &lt;var&gt;name&lt;/var&gt; is the name of an existing buffer, an error is signaled.</source>
          <target state="translated">这将创建并返回一个名为 &lt;var&gt;name&lt;/var&gt; 的间接缓冲区，其基本缓冲区是 &lt;var&gt;base-buffer&lt;/var&gt; 。参数 &lt;var&gt;base-buffer&lt;/var&gt; 可以是活动缓冲区，也可以是现有缓冲区的名称（字符串）。如果 &lt;var&gt;name&lt;/var&gt; 是现有缓冲区的名称，则会发出错误信号。</target>
        </trans-unit>
        <trans-unit id="15b1ed7c7974555a78f9a8cdd2241db7107cd225" translate="yes" xml:space="preserve">
          <source>This creates and returns an xwidget object. If &lt;var&gt;buffer&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the current buffer. If &lt;var&gt;buffer&lt;/var&gt; names a buffer that doesn&amp;rsquo;t exist, it will be created. The &lt;var&gt;type&lt;/var&gt; identifies the type of the xwidget component, it can be one of the following:</source>
          <target state="translated">这将创建并返回一个xwidget对象。如果省略 &lt;var&gt;buffer&lt;/var&gt; 或 &lt;code&gt;nil&lt;/code&gt; ，则默认为当前缓冲区。如果 &lt;var&gt;buffer&lt;/var&gt; 命名为不存在的缓冲区，则会创建该缓冲区。该 &lt;var&gt;type&lt;/var&gt; 标识xwidget组件的类型，它可以是以下之一：</target>
        </trans-unit>
        <trans-unit id="96eaebac0f2f915eb1298d8f003d34d0fc4b82d3" translate="yes" xml:space="preserve">
          <source>This customizable option holds the default frame parameters used for displaying tooltips. Any font and color parameters are ignored, and the corresponding attributes of the &lt;code&gt;tooltip&lt;/code&gt; face are used instead. If &lt;code&gt;left&lt;/code&gt; or &lt;code&gt;top&lt;/code&gt; parameters are included, they are used as absolute frame-relative coordinates where the tooltip should be shown. (Mouse-relative position of the tooltip can be customized using the variables described in &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Tooltips.html#Tooltips&quot;&gt;Tooltips&lt;/a&gt; in</source>
          <target state="translated">此可自定义的选项保存用于显示工具提示的默认框架参数。忽略任何字体和颜色参数，而改用 &lt;code&gt;tooltip&lt;/code&gt; 面的相应属性。如果包含 &lt;code&gt;left&lt;/code&gt; 或 &lt;code&gt;top&lt;/code&gt; 参数，它们将用作显示工具提示的绝对帧相对坐标。 （可以使用&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Tooltips.html#Tooltips&quot;&gt;工具提示&lt;/a&gt;中的变量自定义工具提示的鼠标相对位置</target>
        </trans-unit>
        <trans-unit id="e32676621b26be88214ba41100c3be58060e2082" translate="yes" xml:space="preserve">
          <source>This customization type is similar to &lt;code&gt;alist&lt;/code&gt; (see above), except that (i) the information is stored as a property list, (see &lt;a href=&quot;property-lists#Property-Lists&quot;&gt;Property Lists&lt;/a&gt;), and (ii) &lt;var&gt;key-type&lt;/var&gt;, if omitted, defaults to &lt;code&gt;symbol&lt;/code&gt; rather than &lt;code&gt;sexp&lt;/code&gt;.</source>
          <target state="translated">此自定义类型类似于 &lt;code&gt;alist&lt;/code&gt; （请参见上文），不同之处在于（i）信息存储为属性列表（请参阅&lt;a href=&quot;property-lists#Property-Lists&quot;&gt;属性列表&lt;/a&gt;），并且（ii） &lt;var&gt;key-type&lt;/var&gt; （如果省略）默认为 &lt;code&gt;symbol&lt;/code&gt; 而不是 &lt;code&gt;sexp&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="61ef043faf532a08fb5accd37a8605a58e78e8e0" translate="yes" xml:space="preserve">
          <source>This defines a global toggle named &lt;var&gt;global-mode&lt;/var&gt; whose meaning is to enable or disable the buffer-local minor mode &lt;var&gt;mode&lt;/var&gt; in all buffers. It also executes the &lt;var&gt;body&lt;/var&gt; forms. To turn on the minor mode in a buffer, it uses the function &lt;var&gt;turn-on&lt;/var&gt;; to turn off the minor mode, it calls &lt;var&gt;mode&lt;/var&gt; with -1 as argument.</source>
          <target state="translated">这定义了一个全局命名拨动 &lt;var&gt;global-mode&lt;/var&gt; ，其意义是启用或禁用缓冲区局部轻微模式 &lt;var&gt;mode&lt;/var&gt; 在所有的缓冲区。它还执行 &lt;var&gt;body&lt;/var&gt; 形式。要在缓冲区中打开次要模式，它使用功能 &lt;var&gt;turn-on&lt;/var&gt; ；要关闭次要模式，它将以-1作为参数调用 &lt;var&gt;mode&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="f8af97490ad006efd7dedc92ffa9b688078ca86f" translate="yes" xml:space="preserve">
          <source>This defines a minor mode named &amp;ldquo;Hungry mode&amp;rdquo;, a command named &lt;code&gt;hungry-mode&lt;/code&gt; to toggle it, a variable named &lt;code&gt;hungry-mode&lt;/code&gt; which indicates whether the mode is enabled, and a variable named &lt;code&gt;hungry-mode-map&lt;/code&gt; which holds the keymap that is active when the mode is enabled. It initializes the keymap with a key binding for</source>
          <target state="translated">这定义了一个名为&amp;ldquo;饿模式&amp;rdquo;次要模式，命令名为 &lt;code&gt;hungry-mode&lt;/code&gt; 切换它，可变名为 &lt;code&gt;hungry-mode&lt;/code&gt; 指示模式是否被启用，并且可变名为 &lt;code&gt;hungry-mode-map&lt;/code&gt; 保持所述键映射是启用该模式时激活。它使用一个键绑定来初始化键映射</target>
        </trans-unit>
        <trans-unit id="25b921cab86c0a9d48be338a53d51fa2582ea497" translate="yes" xml:space="preserve">
          <source>This defines a single Lisp form which is evaluated after the mode hooks have run. It should not be quoted.</source>
          <target state="translated">这定义了一个单一的Lisp形式,它在模式钩子运行后被评估。它不应该被引用。</target>
        </trans-unit>
        <trans-unit id="a9ccae35dc95201daddf035a3127e41baa5ade46" translate="yes" xml:space="preserve">
          <source>This defines four comment-delimiting sequences:</source>
          <target state="translated">这定义了四个注释分隔序列。</target>
        </trans-unit>
        <trans-unit id="61c8f0ccafaa8d4d7b6ac3320bcf8e246b6593b9" translate="yes" xml:space="preserve">
          <source>This defines the customization option &lt;var&gt;global-mode&lt;/var&gt; (see &lt;a href=&quot;customization#Customization&quot;&gt;Customization&lt;/a&gt;), which can be toggled in the Customize interface to turn the minor mode on and off. As with &lt;code&gt;define-minor-mode&lt;/code&gt;, you should ensure that the &lt;code&gt;define-globalized-minor-mode&lt;/code&gt; form is evaluated each time Emacs starts, for example by providing a &lt;code&gt;:require&lt;/code&gt; keyword.</source>
          <target state="translated">这定义了定制选项 &lt;var&gt;global-mode&lt;/var&gt; （请参阅&lt;a href=&quot;customization#Customization&quot;&gt;Customization&lt;/a&gt;），可以在Customize界面中切换该选项以打开和关闭次要模式。与 &lt;code&gt;define-minor-mode&lt;/code&gt; 一样，您应确保每次Emacs启动时都对 &lt;code&gt;define-globalized-minor-mode&lt;/code&gt; 形式进行评估，例如通过提供 &lt;code&gt;:require&lt;/code&gt; 关键字。</target>
        </trans-unit>
        <trans-unit id="0654c2fe1757cc99313b9ee8d9bde98f4406d6ec" translate="yes" xml:space="preserve">
          <source>This deletes each node in &lt;var&gt;nodes&lt;/var&gt; from &lt;var&gt;ewoc&lt;/var&gt;.</source>
          <target state="translated">这将删除中的每个节点 &lt;var&gt;nodes&lt;/var&gt; 从 &lt;var&gt;ewoc&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="42d97322be035858edbad1a9d48f7b8d2178c424" translate="yes" xml:space="preserve">
          <source>This deletes the file named &lt;var&gt;filename&lt;/var&gt;, catching any error and returning &lt;code&gt;nil&lt;/code&gt; if an error occurs. (You can use the macro &lt;code&gt;ignore-errors&lt;/code&gt; for a simple case like this; see below.)</source>
          <target state="translated">这将删除名为 &lt;var&gt;filename&lt;/var&gt; 的文件，捕获任何错误，如果发生错误，则返回 &lt;code&gt;nil&lt;/code&gt; 。（对于这种简单情况，您可以使用宏 &lt;code&gt;ignore-errors&lt;/code&gt; ；请参见下文。）</target>
        </trans-unit>
        <trans-unit id="40c2d1f86da44e947b5c2bd5c7621c71f7d4692c" translate="yes" xml:space="preserve">
          <source>This determines the node in &lt;var&gt;ewoc&lt;/var&gt; which contains point (or &lt;var&gt;pos&lt;/var&gt; if specified), and returns that node. If &lt;var&gt;ewoc&lt;/var&gt; has no nodes, it returns &lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;pos&lt;/var&gt; is before the first node, it returns the first node; if &lt;var&gt;pos&lt;/var&gt; is after the last node, it returns the last node. The optional third arg &lt;var&gt;guess&lt;/var&gt; should be a node that is likely to be near &lt;var&gt;pos&lt;/var&gt;; this doesn&amp;rsquo;t alter the result, but makes the function run faster.</source>
          <target state="translated">这将确定 &lt;var&gt;ewoc&lt;/var&gt; 中包含点（或 &lt;var&gt;pos&lt;/var&gt; ,如果已指定）的节点，并返回该节点。如果 &lt;var&gt;ewoc&lt;/var&gt; 没有节点，则返回 &lt;code&gt;nil&lt;/code&gt; 。如果 &lt;var&gt;pos&lt;/var&gt; 在第一个节点之前，则返回第一个节点；否则，返回第一个节点。如果 &lt;var&gt;pos&lt;/var&gt; 在最后一个节点之后，则返回最后一个节点。可选的第三个参数 &lt;var&gt;guess&lt;/var&gt; 应该是一个可能位于 &lt;var&gt;pos&lt;/var&gt; 附近的节点; 这不会改变结果，但是会使函数运行更快。</target>
        </trans-unit>
        <trans-unit id="19360270f62f12bc6a373a7cb78889f2c4a7b650" translate="yes" xml:space="preserve">
          <source>This differs from ordinary syntax such as this</source>
          <target state="translated">这与普通的语法不同,比如这个</target>
        </trans-unit>
        <trans-unit id="7269a995a026e6157e1f1ebb99d0283d69ea4f8f" translate="yes" xml:space="preserve">
          <source>This display action specifies the fallback behavior for &lt;code&gt;display-buffer&lt;/code&gt; if no other display actions are given.</source>
          <target state="translated">如果未给出其他显示操作，则此显示操作将指定 &lt;code&gt;display-buffer&lt;/code&gt; 的后备行为。</target>
        </trans-unit>
        <trans-unit id="b8689d2faeec8c24b11323876ebe042c75f4be39" translate="yes" xml:space="preserve">
          <source>This display specification affects all the space characters within the text that has the specification. It displays all of these spaces &lt;var&gt;factor&lt;/var&gt; times as wide as normal. The element &lt;var&gt;factor&lt;/var&gt; should be an integer or float. Characters other than spaces are not affected at all; in particular, this has no effect on tab characters.</source>
          <target state="translated">此显示规范会影响具有该规范的文本中的所有空格字符。它显示所有这些空间 &lt;var&gt;factor&lt;/var&gt; 时间与正常一样宽。元素 &lt;var&gt;factor&lt;/var&gt; 应为整数或浮点数。除空格外的其他字符完全不受影响；特别是，这对制表符无效。</target>
        </trans-unit>
        <trans-unit id="592cefd94a03b4739baef199b154e396c1ef073d" translate="yes" xml:space="preserve">
          <source>This display specification makes the text taller or shorter. Here are the possibilities for &lt;var&gt;height&lt;/var&gt;:</source>
          <target state="translated">此显示规范使文本变高或变短。这是 &lt;var&gt;height&lt;/var&gt; 的可能性：</target>
        </trans-unit>
        <trans-unit id="36a3ea4223936b8a16479fbc53763ae4b8a71d99" translate="yes" xml:space="preserve">
          <source>This display specification on any character of a line of text causes the specified &lt;var&gt;bitmap&lt;/var&gt; be displayed in the left or right fringes for that line, instead of the characters that have the display specification. The optional &lt;var&gt;face&lt;/var&gt; specifies the face whose colors are to be used for the bitmap display. See &lt;a href=&quot;fringe-bitmaps#Fringe-Bitmaps&quot;&gt;Fringe Bitmaps&lt;/a&gt;, for the details.</source>
          <target state="translated">在一行文本的任何字符上的此显示规范将导致指定的 &lt;var&gt;bitmap&lt;/var&gt; 显示在该行的左或右边缘，而不是具有显示规范的字符。可选 &lt;var&gt;face&lt;/var&gt; 指定其颜色将用于位图显示的面。有关详细信息，请参见&lt;a href=&quot;fringe-bitmaps#Fringe-Bitmaps&quot;&gt;边缘位图&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="93cf65c9a0445a80ca8a8165521ce7ee2fd04b18" translate="yes" xml:space="preserve">
          <source>This does for the size parameters &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt; what the &lt;code&gt;user-position&lt;/code&gt; parameter (see &lt;a href=&quot;position-parameters#Position-Parameters&quot;&gt;user-position&lt;/a&gt;) does for the position parameters &lt;code&gt;top&lt;/code&gt; and &lt;code&gt;left&lt;/code&gt;.</source>
          <target state="translated">对于大小参数 &lt;code&gt;height&lt;/code&gt; 和 &lt;code&gt;width&lt;/code&gt; ,这与 &lt;code&gt;user-position&lt;/code&gt; 参数（请参阅&lt;a href=&quot;position-parameters#Position-Parameters&quot;&gt;user-position&lt;/a&gt;）对位置参数 &lt;code&gt;top&lt;/code&gt; 和 &lt;code&gt;left&lt;/code&gt; 的作用相同。</target>
        </trans-unit>
        <trans-unit id="38712cb66f1b52401b8eeac29a5ad9b91c46b923" translate="yes" xml:space="preserve">
          <source>This does not depend on one of the libraries linked to Emacs.</source>
          <target state="translated">这并不依赖于Emacs所链接的某个库。</target>
        </trans-unit>
        <trans-unit id="13166b5b8bd0e09ebf367e7317f249e78ab03831" translate="yes" xml:space="preserve">
          <source>This either tries to split the window at the bottom of the frame or the frame&amp;rsquo;s root window, or to reuse an existing window at the bottom of the selected frame.</source>
          <target state="translated">这要么尝试拆分框架底部的窗口或框架的根窗口，要么重用所选框架底部的现有窗口。</target>
        </trans-unit>
        <trans-unit id="6508c390fad6127b900c1ed90f5801b40662d322" translate="yes" xml:space="preserve">
          <source>This element is a boundary. The elements between two boundaries are called a &lt;em&gt;change group&lt;/em&gt;; normally, each change group corresponds to one keyboard command, and undo commands normally undo an entire group as a unit.</source>
          <target state="translated">这个元素是一个边界。两个边界之间的元素称为&lt;em&gt;变更组&lt;/em&gt;；通常，每个更改组对应一个键盘命令，而撤消命令通常会将整个组撤消为一个单元。</target>
        </trans-unit>
        <trans-unit id="e54b773d4f02d66db9663356d9f794f2138e5279" translate="yes" xml:space="preserve">
          <source>This element of &lt;var&gt;spec&lt;/var&gt; doesn&amp;rsquo;t match any terminal; instead, it specifies defaults that apply to all terminals. This element, if used, must be the first element of &lt;var&gt;spec&lt;/var&gt;. Each of the following elements can override any or all of these defaults.</source>
          <target state="translated">此 &lt;var&gt;spec&lt;/var&gt; 元素与任何终端都不匹配；相反，它指定适用于所有终端的默认值。如果使用此元素，则必须是 &lt;var&gt;spec&lt;/var&gt; 的第一个元素。以下每个元素都可以覆盖所有这些默认值。</target>
        </trans-unit>
        <trans-unit id="307e77b079ef7349c14d6f5197aa13acf3da80fc" translate="yes" xml:space="preserve">
          <source>This element of &lt;var&gt;spec&lt;/var&gt; matches all terminals. Therefore, any subsequent elements of &lt;var&gt;spec&lt;/var&gt; are never used. Normally &lt;code&gt;t&lt;/code&gt; is used in the last (or only) element of &lt;var&gt;spec&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;spec&lt;/var&gt; 该元素与所有端子匹配。因此，绝不使用任何后续的 &lt;var&gt;spec&lt;/var&gt; 元素。通常， &lt;code&gt;t&lt;/code&gt; 用于 &lt;var&gt;spec&lt;/var&gt; 的最后一个（或唯一）元素。</target>
        </trans-unit>
        <trans-unit id="f44b269dc35504667b8fd5dfc82cea359e827180" translate="yes" xml:space="preserve">
          <source>This entry is similar to the &lt;code&gt;window-height&lt;/code&gt; entry described before, but used to adjust the chosen window&amp;rsquo;s width instead. The value can be one of the following:</source>
          <target state="translated">该条目类似于前面描述的 &lt;code&gt;window-height&lt;/code&gt; 条目，但用于调整所选窗口的宽度。该值可以是以下之一：</target>
        </trans-unit>
        <trans-unit id="44b7f094fb9e2b284f706f57d35c08d71bf8c5c3" translate="yes" xml:space="preserve">
          <source>This error can be handled through any of its condition names. This example handles &lt;code&gt;new-error&lt;/code&gt; and any other errors in the class &lt;code&gt;my-own-errors&lt;/code&gt;:</source>
          <target state="translated">可以通过任何条件名称来处理此错误。此示例处理类 &lt;code&gt;my-own-errors&lt;/code&gt; 中的 &lt;code&gt;new-error&lt;/code&gt; 和其他任何错误：</target>
        </trans-unit>
        <trans-unit id="720b7aaa94a82d01c4794fe20d63e61b139885dd" translate="yes" xml:space="preserve">
          <source>This error has several condition names: &lt;code&gt;new-error&lt;/code&gt;, the narrowest classification; &lt;code&gt;my-own-errors&lt;/code&gt;, which we imagine is a wider classification; and all the conditions of &lt;code&gt;my-own-errors&lt;/code&gt; which should include &lt;code&gt;error&lt;/code&gt;, which is the widest of all.</source>
          <target state="translated">该错误具有多个条件名称： &lt;code&gt;new-error&lt;/code&gt; ，最窄的分类； &lt;code&gt;my-own-errors&lt;/code&gt; ，我们想象是一个更广泛的分类；以及 &lt;code&gt;my-own-errors&lt;/code&gt; 所有条件，其中应包括 &lt;code&gt;error&lt;/code&gt; ，这是最广泛的条件。</target>
        </trans-unit>
        <trans-unit id="46f76051817e74eb67edb4d63ff61ecd701e1276" translate="yes" xml:space="preserve">
          <source>This evaluates the arguments &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;(* 2 3)&lt;/code&gt;, and &lt;code&gt;(- 5
4)&lt;/code&gt; from left to right. Then it applies the lambda expression to the argument values 1, 6 and 1 to produce the value 8.</source>
          <target state="translated">这从左到右计算参数 &lt;code&gt;1&lt;/code&gt; ， &lt;code&gt;(* 2 3)&lt;/code&gt; 和 &lt;code&gt;(- 5 4)&lt;/code&gt; 。然后将lambda表达式应用于参数值1、6和1以产生值8。</target>
        </trans-unit>
        <trans-unit id="69c1c748bf3cd5a287abc63381636360fa27e7db" translate="yes" xml:space="preserve">
          <source>This example affects only C mode proper. To add the same patterns to C mode &lt;em&gt;and&lt;/em&gt; all modes derived from it, do this instead:</source>
          <target state="translated">本示例仅影响C模式。要将相同的模式添加到C模式&lt;em&gt;以及&lt;/em&gt;从该模式派生的所有模式，请执行以下操作：</target>
        </trans-unit>
        <trans-unit id="5384ed028486d0b91b0394b48e1cb533ea34ce58" translate="yes" xml:space="preserve">
          <source>This example can be extended to be a color selection widget (in other words, the &amp;ldquo;controller&amp;rdquo; part of the &amp;ldquo;model&amp;ndash;view&amp;ndash;controller&amp;rdquo; design paradigm) by defining commands to modify &lt;code&gt;colorcomp-data&lt;/code&gt; and to finish the selection process, and a keymap to tie it all together conveniently.</source>
          <target state="translated">通过定义修改 &lt;code&gt;colorcomp-data&lt;/code&gt; 并完成选择过程的命令，可以将该示例扩展为颜色选择小部件（换句话说，是&amp;ldquo;模型-视图-控制器&amp;rdquo;设计范例的&amp;ldquo;控制器&amp;rdquo;部分）。键图，将它们方便地结合在一起。</target>
        </trans-unit>
        <trans-unit id="df08f64e57d04de8aaa9e8c787229bb4af344be9" translate="yes" xml:space="preserve">
          <source>This example creates a hash table whose keys are strings that are compared case-insensitively.</source>
          <target state="translated">这个例子创建了一个哈希表,它的键是不区分大小写的字符串。</target>
        </trans-unit>
        <trans-unit id="f1a5216565ce67155ee836de4737ae2e0b658c35" translate="yes" xml:space="preserve">
          <source>This example creates a sparse keymap and makes a number of bindings in it:</source>
          <target state="translated">这个例子创建了一个稀疏的keymap,并在其中做了许多绑定。</target>
        </trans-unit>
        <trans-unit id="c10cacdf2de04ef95f61acc180ccc22f0b05e92b" translate="yes" xml:space="preserve">
          <source>This example has a small bug: if the user types</source>
          <target state="translated">这个例子有一个小错误:如果用户输入</target>
        </trans-unit>
        <trans-unit id="cbee9460ee0719dec38b54326085d108517447be" translate="yes" xml:space="preserve">
          <source>This example initializes the value of &lt;code&gt;bar&lt;/code&gt; to &lt;code&gt;23&lt;/code&gt;, and gives it a documentation string:</source>
          <target state="translated">本示例将 &lt;code&gt;bar&lt;/code&gt; 的值初始化为 &lt;code&gt;23&lt;/code&gt; ，并为其提供文档字符串：</target>
        </trans-unit>
        <trans-unit id="67e8773626193e784e2ea64066293bd3b65f7fb7" translate="yes" xml:space="preserve">
          <source>This example shows how &lt;code&gt;copy-alist&lt;/code&gt; makes it possible to change the associations of one copy without affecting the other:</source>
          <target state="translated">此示例说明了 &lt;code&gt;copy-alist&lt;/code&gt; 助手如何在不影响另一个副本的情况下更改一个副本的关联：</target>
        </trans-unit>
        <trans-unit id="960576953dddb4f1d23f0b9aa313e71228f26d76" translate="yes" xml:space="preserve">
          <source>This example shows how to convert the window-relative coordinates in the text area of a window into frame-relative coordinates:</source>
          <target state="translated">这个例子展示了如何将窗口文本区域的窗口相关坐标转换为框架相关坐标。</target>
        </trans-unit>
        <trans-unit id="0bed23725454106589c0f1789605a60658a8b116" translate="yes" xml:space="preserve">
          <source>This executes &lt;var&gt;body&lt;/var&gt; normally, except any buffer changes it makes do not trigger the calls to &lt;code&gt;before-change-functions&lt;/code&gt; and &lt;code&gt;after-change-functions&lt;/code&gt;. Instead there is a single call of each of these hooks for the region enclosed by &lt;var&gt;beg&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;, the parameters supplied to &lt;code&gt;after-change-functions&lt;/code&gt; reflecting the changes made to the size of the region by &lt;var&gt;body&lt;/var&gt;.</source>
          <target state="translated">这个执行 &lt;var&gt;body&lt;/var&gt; 正常，但任何缓冲改变它使不触发对来电 &lt;code&gt;before-change-functions&lt;/code&gt; 和 &lt;code&gt;after-change-functions&lt;/code&gt; 。取而代之的是，对于由 &lt;var&gt;beg&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 包围的区域，每个钩子仅调用一次，提供给 &lt;code&gt;after-change-functions&lt;/code&gt; 的参数反映了 &lt;var&gt;body&lt;/var&gt; 对区域大小所做的更改。</target>
        </trans-unit>
        <trans-unit id="97a99daef0e09aadad6a1edb95c2efaf5e43925d" translate="yes" xml:space="preserve">
          <source>This exists as a separate function so that you can redefine it to customize the naming convention for auto-save files. Be sure to change &lt;code&gt;auto-save-file-name-p&lt;/code&gt; in a corresponding way.</source>
          <target state="translated">它作为一个单独的函数存在，因此您可以重新定义它以自定义自动保存文件的命名约定。确保以相应的方式更改 &lt;code&gt;auto-save-file-name-p&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="83ac2665fcb7f52cf7b79acb847f017da9c9ded9" translate="yes" xml:space="preserve">
          <source>This extracts the data encapsulated by &lt;var&gt;node&lt;/var&gt; and returns it.</source>
          <target state="translated">这将提取 &lt;var&gt;node&lt;/var&gt; 封装的数据并返回。</target>
        </trans-unit>
        <trans-unit id="30d143d6a1708406abec26b984fa5693fbea22dd" translate="yes" xml:space="preserve">
          <source>This feature has a drawback: if you delete, move, or alter the compiled file (such as by compiling a new version), Emacs may no longer be able to access the documentation string of previously-loaded functions or variables. Such a problem normally only occurs if you build Emacs yourself, and happen to edit and/or recompile the Lisp source files. To solve it, just reload each file after recompilation.</source>
          <target state="translated">这个功能有一个缺点:如果你删除、移动或改变编译后的文件(比如编译一个新的版本),Emacs可能不再能够访问之前加载的函数或变量的文档串。这样的问题通常只发生在你自己构建Emacs,并且恰好编辑和/或重新编译Lisp源文件的情况下。要解决这个问题,只要在重新编译后重新加载每个文件即可。</target>
        </trans-unit>
        <trans-unit id="b1b235c150a1d977f48eb3bd46de4ada97a7551a" translate="yes" xml:space="preserve">
          <source>This feature is particularly useful for macro definitions, since the arguments written in a macro definition often do not correspond to the way users think of the parts of the macro call.</source>
          <target state="translated">这个功能对宏定义特别有用,因为宏定义中写的参数往往与用户对宏调用部分的想法不一致。</target>
        </trans-unit>
        <trans-unit id="05244ec22d7bb68a0e405d823ab136f1bab8c8f8" translate="yes" xml:space="preserve">
          <source>This feature is typically used to give word syntax to characters which normally have symbol syntax, and thus to simplify &lt;code&gt;imenu-generic-expression&lt;/code&gt; and speed up matching. For example, Fortran mode uses it this way:</source>
          <target state="translated">此功能通常用于为通常具有符号语法的字符赋予单词语法，从而简化 &lt;code&gt;imenu-generic-expression&lt;/code&gt; 并加快匹配速度。例如，Fortran模式以这种方式使用它：</target>
        </trans-unit>
        <trans-unit id="1c756af06b78daa5071e0e816f76e8d18db82de0" translate="yes" xml:space="preserve">
          <source>This feature is used in the mode line and for other active text.</source>
          <target state="translated">此功能在模式行和其他活动文本中使用。</target>
        </trans-unit>
        <trans-unit id="d0cc127f9ed89a0052cb078c44752f47ce7ae748" translate="yes" xml:space="preserve">
          <source>This field contains flags indicating that certain variables are local in this buffer. Such variables are declared in the C code using &lt;code&gt;DEFVAR_PER_BUFFER&lt;/code&gt;, and their buffer-local bindings are stored in fields in the buffer structure itself. (Some of these fields are described in this table.)</source>
          <target state="translated">该字段包含标志，指示某些变量在此缓冲区中是本地的。此类变量使用 &lt;code&gt;DEFVAR_PER_BUFFER&lt;/code&gt; 在C代码中声明，并且它们的缓冲区局部绑定存储在缓冲区结构本身的字段中。（此表中描述了其中一些字段。）</target>
        </trans-unit>
        <trans-unit id="fdaffa88c0149b338fbb30614684d73e20ce7a4d" translate="yes" xml:space="preserve">
          <source>This field contains the value of &lt;code&gt;cursor_off_p&lt;/code&gt; as of the time of the last redisplay.</source>
          <target state="translated">该字段包含上次重新显示时的 &lt;code&gt;cursor_off_p&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="25df1e8281ce04573d0c7a47654f62f6ead766ae" translate="yes" xml:space="preserve">
          <source>This field holds the current overlay center position. See &lt;a href=&quot;managing-overlays#Managing-Overlays&quot;&gt;Managing Overlays&lt;/a&gt;.</source>
          <target state="translated">该字段保存当前叠加中心位置。请参阅&lt;a href=&quot;managing-overlays#Managing-Overlays&quot;&gt;管理叠加层&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="53fae5326fb6152954c070db1d8b82e97b1478f7" translate="yes" xml:space="preserve">
          <source>This field is non-zero if the cursor is physically on.</source>
          <target state="translated">如果光标在物理上,该字段为非零。</target>
        </trans-unit>
        <trans-unit id="1d317714cd86b2e5c16957c75986c0b66b779bc1" translate="yes" xml:space="preserve">
          <source>This field is set to a non-zero value if &lt;code&gt;window_end_pos&lt;/code&gt; and &lt;code&gt;window_end_vpos&lt;/code&gt; are truly valid. This is zero if nontrivial redisplay is pre-empted, since in that case the display that &lt;code&gt;window_end_pos&lt;/code&gt; was computed for did not get onto the screen.</source>
          <target state="translated">如果 &lt;code&gt;window_end_pos&lt;/code&gt; 和 &lt;code&gt;window_end_vpos&lt;/code&gt; 真正有效，则此字段设置为非零值。如果抢占非平凡的重新显示，则该值为零，因为在这种情况下，计算 &lt;code&gt;window_end_pos&lt;/code&gt; 的显示没有进入屏幕。</target>
        </trans-unit>
        <trans-unit id="6b26cb64b7c663711e8795ccea986462e9c7367e" translate="yes" xml:space="preserve">
          <source>This flag causes any padding specified by the width to be inserted on the right rather than the left.</source>
          <target state="translated">该标志使任何由宽度指定的填充物被插入到右边而不是左边。</target>
        </trans-unit>
        <trans-unit id="5278a8a106127e8fc495b187df39a6337cc62e1b" translate="yes" xml:space="preserve">
          <source>This flag causes any padding specified by the width to consist of &amp;lsquo;</source>
          <target state="translated">此标志会导致宽度指定的所有填充均由'</target>
        </trans-unit>
        <trans-unit id="5dd359a766179c85de84888aadbae58262df5709" translate="yes" xml:space="preserve">
          <source>This flag causes the substitution to be truncated on the left to the given width, if specified.</source>
          <target state="translated">如果指定了,这个标志会使替换在左边被截断到给定的宽度。</target>
        </trans-unit>
        <trans-unit id="4e61e85dae038fb0c3a44fdb662be1a054d209df" translate="yes" xml:space="preserve">
          <source>This flag causes the substitution to be truncated on the right to the given width, if specified.</source>
          <target state="translated">如果指定了,这个标志会使替换在右边被截断到给定的宽度。</target>
        </trans-unit>
        <trans-unit id="802456f2a422be0cbf38e1946b06bb9ed99ba1c4" translate="yes" xml:space="preserve">
          <source>This flag converts the substituted text to lower case (see &lt;a href=&quot;case-conversion#Case-Conversion&quot;&gt;Case Conversion&lt;/a&gt;).</source>
          <target state="translated">此标志将替换的文本转换为小写（请参见&lt;a href=&quot;case-conversion#Case-Conversion&quot;&gt;Case Conversion&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="c3743c5c43d5db77d585873a04220c975872ceeb" translate="yes" xml:space="preserve">
          <source>This flag converts the substituted text to upper case (see &lt;a href=&quot;case-conversion#Case-Conversion&quot;&gt;Case Conversion&lt;/a&gt;).</source>
          <target state="translated">该标志将替换的文本转换为大写（请参阅&lt;a href=&quot;case-conversion#Case-Conversion&quot;&gt;Case Conversion&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="def6909cec139f656b6eb03bda4bd9fcdf92962d" translate="yes" xml:space="preserve">
          <source>This flag indicates that narrowing has changed in the buffer. See &lt;a href=&quot;narrowing#Narrowing&quot;&gt;Narrowing&lt;/a&gt;.</source>
          <target state="translated">该标志指示缓冲区中的变窄已更改。请参阅&lt;a href=&quot;narrowing#Narrowing&quot;&gt;缩小&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ea1149fc15f86d73e215992b24665aef4bf65888" translate="yes" xml:space="preserve">
          <source>This flag indicates that redisplay optimizations should not be used to display this buffer.</source>
          <target state="translated">该标志表示不应使用重新显示优化来显示该缓冲区。</target>
        </trans-unit>
        <trans-unit id="3e34e60de1451f315119342439e2c2ea69a78715" translate="yes" xml:space="preserve">
          <source>This flag is &lt;code&gt;t&lt;/code&gt; while loading all of the basic functions for building Emacs initially (allowing those functions to be shareable and non-collectible). Dumping Emacs as an executable always writes &lt;code&gt;nil&lt;/code&gt; in this variable, regardless of the value it actually has before and after dumping.</source>
          <target state="translated">在最初加载用于构建Emacs的所有基本功能时（允许这些功能可共享和不可收集），此标志为 &lt;code&gt;t&lt;/code&gt; 。不管将Emacs作为可执行文件进行转储，始终将 &lt;code&gt;nil&lt;/code&gt; 写入此变量，无论其在转储之前和之后实际具有什么值。</target>
        </trans-unit>
        <trans-unit id="ba39cdb2bb11024ced7b8ee0a40f5f800d6c1008" translate="yes" xml:space="preserve">
          <source>This form affects the sorting order for combining applicable methods. Normally, when two methods are compared during combination, method arguments are examined left to right, and the first method whose argument specializer is more specific will come before the other one. The order defined by this form overrides that, and the arguments are examined according to their order in this form, and not left to right.</source>
          <target state="translated">这种形式会影响组合适用方法的排序顺序。通常情况下,当两个方法在组合过程中进行比较时,方法的参数会从左到右进行检查,并且参数特殊化程度较高的第一个方法会排在另一个方法之前。这个表格所定义的顺序推翻了这一点,参数是按照这个表格中的顺序来检查的,而不是从左到右。</target>
        </trans-unit>
        <trans-unit id="e4fb70066384e0cceb907663b752d4b769967338" translate="yes" xml:space="preserve">
          <source>This form defines a method like &lt;code&gt;cl-defmethod&lt;/code&gt; does.</source>
          <target state="translated">这种形式定义了一种类似于 &lt;code&gt;cl-defmethod&lt;/code&gt; 的方法。</target>
        </trans-unit>
        <trans-unit id="dc35ed413d87b4336d4e89f97b486782c7451f45" translate="yes" xml:space="preserve">
          <source>This form is rarely used and is now deprecated. Instead, you should write it as:</source>
          <target state="translated">这种形式很少使用,现在已经废弃了。相反,你应该把它写成:</target>
        </trans-unit>
        <trans-unit id="3cc0709efb5d18fcc8207dee6c21b0fb2f81ad06" translate="yes" xml:space="preserve">
          <source>This form marks &lt;var&gt;body&lt;/var&gt; to be evaluated at compile time but not when the compiled program is loaded. The result of evaluation by the compiler becomes a constant which appears in the compiled program. If you load the source file, rather than compiling it, &lt;var&gt;body&lt;/var&gt; is evaluated normally.</source>
          <target state="translated">此表单标记要在编译时评估的 &lt;var&gt;body&lt;/var&gt; ，但不会在加载已编译程序时评估。编译器评估的结果成为一个常数，该常数出现在已编译程序中。如果加载源文件而不是对其进行编译，则将正常评估 &lt;var&gt;body&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="5f5b9f825f6d02cc105c9167357458e31c828971" translate="yes" xml:space="preserve">
          <source>This form marks &lt;var&gt;body&lt;/var&gt; to be evaluated both when you compile the containing code and when you run it (whether compiled or not).</source>
          <target state="translated">当您编译包含的代码以及运行它（无论是否编译）时，此表单都将标记要评估的 &lt;var&gt;body&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="4ef27658ff0fd12e7246ce32efccf1049fa02588" translate="yes" xml:space="preserve">
          <source>This frame parameter controls the way the cursor looks.</source>
          <target state="translated">这个框架参数控制光标的外观。</target>
        </trans-unit>
        <trans-unit id="8a2c5f40810a1a8231285c1733ba11c594e6dc71" translate="yes" xml:space="preserve">
          <source>This function (un-)marks the height of window &lt;var&gt;window&lt;/var&gt; as preserved for future resize operations. &lt;var&gt;window&lt;/var&gt; must be a live window and defaults to the selected one. If the optional argument &lt;var&gt;horizontal&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it (un-)marks the width of &lt;var&gt;window&lt;/var&gt; as preserved.</source>
          <target state="translated">该功能（未）标记窗口的高度 &lt;var&gt;window&lt;/var&gt; 作为保存未来大小调整操作。 &lt;var&gt;window&lt;/var&gt; 必须是活动窗口，并且默认为选定的窗口。如果可选参数 &lt;var&gt;horizontal&lt;/var&gt; 为non- &lt;code&gt;nil&lt;/code&gt; ，则（取消）将 &lt;var&gt;window&lt;/var&gt; 的宽度标记为保留。</target>
        </trans-unit>
        <trans-unit id="bcece730ecf0a8d569339f3baf4dfd3ec0f72dff" translate="yes" xml:space="preserve">
          <source>This function &lt;em&gt;warps the mouse&lt;/em&gt; to position &lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt; in frame &lt;var&gt;frame&lt;/var&gt;. The arguments &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; are integers, giving the position in multiples of the default character size of &lt;var&gt;frame&lt;/var&gt; (see &lt;a href=&quot;frame-font#Frame-Font&quot;&gt;Frame Font&lt;/a&gt;) relative to the native position of &lt;var&gt;frame&lt;/var&gt; (see &lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;Frame Geometry&lt;/a&gt;).</source>
          <target state="translated">此函数&lt;em&gt;使鼠标扭曲&lt;/em&gt;以将 &lt;var&gt;x&lt;/var&gt; ， &lt;var&gt;y&lt;/var&gt; 放置在 &lt;var&gt;frame&lt;/var&gt; 。参数 &lt;var&gt;x&lt;/var&gt; 和 &lt;var&gt;y&lt;/var&gt; 是整数，相对于 &lt;var&gt;frame&lt;/var&gt; 的原始位置（请参见&lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;Frame Geometry&lt;/a&gt;），以 &lt;var&gt;frame&lt;/var&gt; 默认字符大小（请参见&lt;a href=&quot;frame-font#Frame-Font&quot;&gt;Frame Font&lt;/a&gt;）的倍数给出位置。</target>
        </trans-unit>
        <trans-unit id="40f8f13963b860d49b39d37d44a140b524c4b400" translate="yes" xml:space="preserve">
          <source>This function aborts the command that requested the innermost recursive edit (including minibuffer input), by signaling &lt;code&gt;quit&lt;/code&gt; after exiting the recursive edit. Its definition is effectively &lt;code&gt;(throw 'exit t)&lt;/code&gt;. See &lt;a href=&quot;quitting#Quitting&quot;&gt;Quitting&lt;/a&gt;.</source>
          <target state="translated">该函数通过退出递归编辑后发出 &lt;code&gt;quit&lt;/code&gt; 信号，从而中止请求最内部递归编辑的命令（包括微型缓冲区输入）。它的定义是有效的 &lt;code&gt;(throw 'exit t)&lt;/code&gt; 。请参阅&lt;a href=&quot;quitting#Quitting&quot;&gt;退出&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c9ea6f9e8e69fd1bab46baef53c35082a8cfc602" translate="yes" xml:space="preserve">
          <source>This function accepts all the changes in the change group specified by &lt;var&gt;handle&lt;/var&gt;, making them final.</source>
          <target state="translated">此函数接受 &lt;var&gt;handle&lt;/var&gt; 指定的更改组中的所有更改，使其成为最终更改。</target>
        </trans-unit>
        <trans-unit id="4bf8acf7f09114f2eeb6b01cc81a40eb393fbc16" translate="yes" xml:space="preserve">
          <source>This function accesses selections set up by Emacs or by other programs. It takes two optional arguments, &lt;var&gt;type&lt;/var&gt; and &lt;var&gt;data-type&lt;/var&gt;. The default for &lt;var&gt;type&lt;/var&gt;, the selection type, is &lt;code&gt;PRIMARY&lt;/code&gt;.</source>
          <target state="translated">此功能访问由Emacs或其他程序设置的选择。它带有两个可选参数， &lt;var&gt;type&lt;/var&gt; 和 &lt;var&gt;data-type&lt;/var&gt; 。 &lt;var&gt;type&lt;/var&gt; （选择类型）的默认值为 &lt;code&gt;PRIMARY&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1ed9d525857b861dc6984133623fd7ce8241ee1a" translate="yes" xml:space="preserve">
          <source>This function activates the change group that &lt;var&gt;handle&lt;/var&gt; designates.</source>
          <target state="translated">此功能激活 &lt;var&gt;handle&lt;/var&gt; 指定的更改组。</target>
        </trans-unit>
        <trans-unit id="07db88ac865436a1611a4b9e83f3964d1e4e650b" translate="yes" xml:space="preserve">
          <source>This function acts like &lt;code&gt;eq&lt;/code&gt; except when both arguments are numbers. It compares numbers by type and numeric value, so that &lt;code&gt;(eql 1.0 1)&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;, but &lt;code&gt;(eql 1.0 1.0)&lt;/code&gt; and &lt;code&gt;(eql 1 1)&lt;/code&gt; both return &lt;code&gt;t&lt;/code&gt;. This can be used to compare large integers as well as small ones.</source>
          <target state="translated">除了两个参数均为数字外，此函数的作用类似于 &lt;code&gt;eq&lt;/code&gt; 。它按类型和数值比较数字，因此 &lt;code&gt;(eql 1.0 1)&lt;/code&gt; 返回 &lt;code&gt;nil&lt;/code&gt; ，但是 &lt;code&gt;(eql 1.0 1.0)&lt;/code&gt; 和 &lt;code&gt;(eql 1 1)&lt;/code&gt; 都返回 &lt;code&gt;t&lt;/code&gt; 。这可用于比较大整数和小整数。</target>
        </trans-unit>
        <trans-unit id="a9b2e93490bd346a5c929fa510651bda9b3be379" translate="yes" xml:space="preserve">
          <source>This function acts like &lt;code&gt;format&lt;/code&gt;, except it also converts any grave accents (</source>
          <target state="translated">此函数的作用类似于 &lt;code&gt;format&lt;/code&gt; ，除了它还可以转换任何重音符号（</target>
        </trans-unit>
        <trans-unit id="46299dd4ffb3a1d1b9978c5603d1f8a982a7b271" translate="yes" xml:space="preserve">
          <source>This function acts on the text between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;, adding the face &lt;var&gt;face&lt;/var&gt; to the &lt;code&gt;face&lt;/code&gt; text property. &lt;var&gt;face&lt;/var&gt; should be a valid value for the &lt;code&gt;face&lt;/code&gt; property (see &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Special Properties&lt;/a&gt;), such as a face name or an anonymous face (see &lt;a href=&quot;faces#Faces&quot;&gt;Faces&lt;/a&gt;).</source>
          <target state="translated">此函数作用于 &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 之间的文本，将face &lt;var&gt;face&lt;/var&gt; 添加到 &lt;code&gt;face&lt;/code&gt; text属性。 &lt;var&gt;face&lt;/var&gt; 应该是 &lt;code&gt;face&lt;/code&gt; 属性（请参见&lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Special Properties&lt;/a&gt;）的有效值，例如面孔名称或匿名面孔（请参见&lt;a href=&quot;faces#Faces&quot;&gt;Faces&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="9add35bd8e77d7a770af37272de3cbd3c5d5a302" translate="yes" xml:space="preserve">
          <source>This function actually uses the minibuffer, but does not allow editing of the answer. The cursor moves to the minibuffer while the question is being asked.</source>
          <target state="translated">该函数实际上使用了迷你缓冲区,但不允许编辑答案。在提问的同时,光标会移动到迷你缓冲区。</target>
        </trans-unit>
        <trans-unit id="3b7bb87451820fffacb0fab9bbfdf96cf4401834" translate="yes" xml:space="preserve">
          <source>This function adds &lt;var&gt;keymap&lt;/var&gt; as a &lt;em&gt;transient&lt;/em&gt; keymap, which takes precedence over other keymaps for one (or more) subsequent keys.</source>
          <target state="translated">此函数将键 &lt;var&gt;keymap&lt;/var&gt; 添加为&lt;em&gt;临时键&lt;/em&gt;映射，该键映射优先于一个（或多个）后续键的其他键映射。</target>
        </trans-unit>
        <trans-unit id="4b526c5936ea25c138e70ca51a6efbc8affbb24b" translate="yes" xml:space="preserve">
          <source>This function adds &lt;var&gt;rules&lt;/var&gt; as indentation rules for the current buffer. These add to any mode-specific rules defined by the &lt;code&gt;smie-config&lt;/code&gt; option. To specify custom indentation rules for a specific file, add an entry to the file&amp;rsquo;s local variables of the form: &lt;code&gt;eval: (smie-config-local '(&lt;var&gt;rules&lt;/var&gt;))&lt;/code&gt;.</source>
          <target state="translated">此函数将 &lt;var&gt;rules&lt;/var&gt; 添加为当前缓冲区的缩进规则。这些将添加到 &lt;code&gt;smie-config&lt;/code&gt; 选项定义的任何特定于模式的规则。要为特定文件指定自定义缩进规则，请在文件的本地变量中添加以下条目： &lt;code&gt;eval: (smie-config-local '(&lt;var&gt;rules&lt;/var&gt;))&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="97647ddbf1d6ec9209e109ed55b3f010c55f6dde" translate="yes" xml:space="preserve">
          <source>This function adds a new element &lt;var&gt;newelt&lt;/var&gt;, if it isn&amp;rsquo;t the empty string, to the history list stored in the variable &lt;var&gt;history-var&lt;/var&gt;, and returns the updated history list. It limits the list length to the value of &lt;var&gt;maxelt&lt;/var&gt; (if non-&lt;code&gt;nil&lt;/code&gt;) or &lt;code&gt;history-length&lt;/code&gt; (described below). The possible values of &lt;var&gt;maxelt&lt;/var&gt; have the same meaning as the values of &lt;code&gt;history-length&lt;/code&gt;. &lt;var&gt;history-var&lt;/var&gt; cannot refer to a lexical variable.</source>
          <target state="translated">如果不是空字符串，此函数将新元素 &lt;var&gt;newelt&lt;/var&gt; 添加到存储在变量 &lt;var&gt;history-var&lt;/var&gt; 中的历史记录列表中，并返回更新的历史记录列表。它限制了列表长度，它的值 &lt;var&gt;maxelt&lt;/var&gt; （如果非 &lt;code&gt;nil&lt;/code&gt; ）或 &lt;code&gt;history-length&lt;/code&gt; （下面描述）。 &lt;var&gt;maxelt&lt;/var&gt; 的可能值与 &lt;code&gt;history-length&lt;/code&gt; 的值具有相同的含义。 &lt;var&gt;history-var&lt;/var&gt; 不能引用词法变量。</target>
        </trans-unit>
        <trans-unit id="deb9f2a42b842ac50764e6f1bfd937d8064b5f72" translate="yes" xml:space="preserve">
          <source>This function adds an item to the tool bar by modifying &lt;code&gt;tool-bar-map&lt;/code&gt;. The image to use is defined by &lt;var&gt;icon&lt;/var&gt;, which is the base name of an XPM, XBM or PBM image file to be located by &lt;code&gt;find-image&lt;/code&gt;. Given a value &amp;lsquo;</source>
          <target state="translated">此功能通过修改 &lt;code&gt;tool-bar-map&lt;/code&gt; 将项目添加到工具栏。要使用的图像由 &lt;var&gt;icon&lt;/var&gt; 定义，icon是将通过 &lt;code&gt;find-image&lt;/code&gt; 定位的XPM，XBM或PBM图像文件的基本名称。给定一个值'</target>
        </trans-unit>
        <trans-unit id="0ebca6721ed3fa98cfa9e5c46f15c3141bffd15b" translate="yes" xml:space="preserve">
          <source>This function adds highlighting &lt;var&gt;keywords&lt;/var&gt;, for the current buffer or for major mode &lt;var&gt;mode&lt;/var&gt;. The argument &lt;var&gt;keywords&lt;/var&gt; should be a list with the same format as the variable &lt;code&gt;font-lock-keywords&lt;/code&gt;.</source>
          <target state="translated">此函数为当前缓冲区或主模式 &lt;var&gt;mode&lt;/var&gt; 添加突出显示 &lt;var&gt;keywords&lt;/var&gt; 。参数 &lt;var&gt;keywords&lt;/var&gt; 应该是与变量 &lt;code&gt;font-lock-keywords&lt;/code&gt; 格式相同的列表。</target>
        </trans-unit>
        <trans-unit id="b70adf191cfc5d67153bf0fd00ff553ea1352179" translate="yes" xml:space="preserve">
          <source>This function adds its arguments together. When given no arguments, &lt;code&gt;+&lt;/code&gt; returns 0.</source>
          <target state="translated">此函数将其参数加在一起。如果未提供任何参数，则 &lt;code&gt;+&lt;/code&gt; 返回0。</target>
        </trans-unit>
        <trans-unit id="803c0bc4e0ed515905b77def70944666207e64b0" translate="yes" xml:space="preserve">
          <source>This function adds or overrides text properties for the text between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; in the string or buffer &lt;var&gt;object&lt;/var&gt;. If &lt;var&gt;object&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it defaults to the current buffer.</source>
          <target state="translated">此函数在字符串或缓冲区 &lt;var&gt;object&lt;/var&gt; &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 之间添加或覆盖文本的文本属性。如果 &lt;var&gt;object&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则默认为当前缓冲区。</target>
        </trans-unit>
        <trans-unit id="9989271b225e7f750e77b8c7c89508a4a1e0be74" translate="yes" xml:space="preserve">
          <source>This function adds the element &lt;var&gt;element&lt;/var&gt; to &lt;code&gt;buffer-invisibility-spec&lt;/code&gt;. If &lt;code&gt;buffer-invisibility-spec&lt;/code&gt; was &lt;code&gt;t&lt;/code&gt;, it changes to a list, &lt;code&gt;(t)&lt;/code&gt;, so that text whose &lt;code&gt;invisible&lt;/code&gt; property is &lt;code&gt;t&lt;/code&gt; remains invisible.</source>
          <target state="translated">此函数将element &lt;var&gt;element&lt;/var&gt; 添加到 &lt;code&gt;buffer-invisibility-spec&lt;/code&gt; 中。如果 &lt;code&gt;buffer-invisibility-spec&lt;/code&gt; 是 &lt;code&gt;t&lt;/code&gt; ，它将更改为列表 &lt;code&gt;(t)&lt;/code&gt; ，因此其 &lt;code&gt;invisible&lt;/code&gt; 属性为 &lt;code&gt;t&lt;/code&gt; 的文本将保持不可见。</target>
        </trans-unit>
        <trans-unit id="c07b8ebb5627985d894e21ffca92d00b07480866" translate="yes" xml:space="preserve">
          <source>This function adds the face spec in &lt;var&gt;specs&lt;/var&gt; as relative remappings for face &lt;var&gt;face&lt;/var&gt; in the current buffer. The remaining arguments, &lt;var&gt;specs&lt;/var&gt;, should form either a list of face names, or a property list of attribute/value pairs.</source>
          <target state="translated">此功能将在面部规格 &lt;var&gt;specs&lt;/var&gt; 作为用于面部相对重新映射 &lt;var&gt;face&lt;/var&gt; 在当前缓冲区。其余参数 &lt;var&gt;specs&lt;/var&gt; 应当形成面孔名称列表或属性/值对的属性列表。</target>
        </trans-unit>
        <trans-unit id="d04052051735ae3e0e977a90a4d965a6d964ef68" translate="yes" xml:space="preserve">
          <source>This function adjusts the current buffer&amp;rsquo;s auto-save file name if the visited file name has changed. It also renames an existing auto-save file, if it was made in the current Emacs session. If the visited file name has not changed, this function does nothing.</source>
          <target state="translated">如果访问的文件名已更改，此功能将调整当前缓冲区的自动保存文件名。如果它是在当前Emacs会话中创建的，它还会重命名现有的自动保存文件。如果访问的文件名未更改，则此功能不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="5f57687a61ee8dd8b6bb5dd575ae468a268a7e81" translate="yes" xml:space="preserve">
          <source>This function adjusts the indentation at the beginning of the current line to the value specified by the variable &lt;code&gt;left-margin&lt;/code&gt;. (That may involve either inserting or deleting whitespace.) This function is value of &lt;code&gt;indent-line-function&lt;/code&gt; in Paragraph-Indent Text mode.</source>
          <target state="translated">此函数将当前行开头的缩进调整为变量 &lt;code&gt;left-margin&lt;/code&gt; 指定的值。（这可能涉及插入或删除空格。）此函数是&amp;ldquo;段落缩进文本&amp;rdquo;模式下 &lt;code&gt;indent-line-function&lt;/code&gt; 功能的值。</target>
        </trans-unit>
        <trans-unit id="283b3120d2b1e5ecb8dfd7ac5ef6f6a005aee91f" translate="yes" xml:space="preserve">
          <source>This function allows Emacs to read pending output from processes. The output is given to their filter functions. If &lt;var&gt;process&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; then this function does not return until some output has been received from &lt;var&gt;process&lt;/var&gt; or &lt;var&gt;process&lt;/var&gt; has closed the connection.</source>
          <target state="translated">此功能使Emacs可以从进程中读取挂起的输出。输出将提供给它们的过滤器功能。如果 &lt;var&gt;process&lt;/var&gt; 是不 &lt;code&gt;nil&lt;/code&gt; ，则此函数不返回，直到一些输出已经从接收 &lt;var&gt;process&lt;/var&gt; 或 &lt;var&gt;process&lt;/var&gt; 已关闭了连接。</target>
        </trans-unit>
        <trans-unit id="cf26ba184068b28fd0896ca94a81e5de77617765" translate="yes" xml:space="preserve">
          <source>This function allows you to arrange that Emacs will ask the user for confirmation before exiting or before killing a buffer that has &lt;var&gt;xwidget&lt;/var&gt; associated with it. If &lt;var&gt;flag&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, Emacs will query the user, otherwise it will not.</source>
          <target state="translated">此功能使您可以安排Emacs在退出之前或杀死与 &lt;var&gt;xwidget&lt;/var&gt; 关联的缓冲区之前要求用户进行确认。如果 &lt;var&gt;flag&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则Emacs将查询用户，否则将不查询。</target>
        </trans-unit>
        <trans-unit id="bf335bd121a8eca0c5f6759fc3858e78f1f657e4" translate="yes" xml:space="preserve">
          <source>This function also defines &lt;var&gt;face&lt;/var&gt; as a valid face name if it is not already one, and (re)calculates its attributes on existing frames.</source>
          <target state="translated">此功能还将人 &lt;var&gt;face&lt;/var&gt; 定义为有效的人脸名称（如果尚未使用的话），并在现有帧上（重新）计算其属性。</target>
        </trans-unit>
        <trans-unit id="37609ce54a5ff7f294bf84ea4de78cdf2ae18a2b" translate="yes" xml:space="preserve">
          <source>This function also forces an update of the menu bar and frame title.</source>
          <target state="translated">该功能还可以强制更新菜单栏和框架标题。</target>
        </trans-unit>
        <trans-unit id="45bab2ec30f25c2982006b7a098ab0411cb5a640" translate="yes" xml:space="preserve">
          <source>This function also resets certain other information pertaining to the buffer: it sets the local keymap to &lt;code&gt;nil&lt;/code&gt;, the syntax table to the value of &lt;code&gt;(standard-syntax-table)&lt;/code&gt;, the case table to &lt;code&gt;(standard-case-table)&lt;/code&gt;, and the abbrev table to the value of &lt;code&gt;fundamental-mode-abbrev-table&lt;/code&gt;.</source>
          <target state="translated">此函数还重置与缓冲区有关的某些其他信息：它将本地键映射设置为 &lt;code&gt;nil&lt;/code&gt; ，语法表设置为 &lt;code&gt;(standard-syntax-table)&lt;/code&gt; 的值，case表设置为 &lt;code&gt;(standard-case-table)&lt;/code&gt; ，并且缩写表到 &lt;code&gt;fundamental-mode-abbrev-table&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f470a37c4713be355f21bcf33f0e9306fad6c932" translate="yes" xml:space="preserve">
          <source>This function also sets &lt;var&gt;symbol&lt;/var&gt; as a variable, with the keymap as its value. But if &lt;var&gt;mapvar&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it sets &lt;var&gt;mapvar&lt;/var&gt; as a variable instead.</source>
          <target state="translated">此函数还将 &lt;var&gt;symbol&lt;/var&gt; 设置为变量，并以键映射表为其值。但是，如果 &lt;var&gt;mapvar&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则会将 &lt;var&gt;mapvar&lt;/var&gt; 设置为变量。</target>
        </trans-unit>
        <trans-unit id="2f67f09d25df27f6839ecb450a57eb93e2f6d8ae" translate="yes" xml:space="preserve">
          <source>This function also signals an error if the buffer is an indirect buffer. An indirect buffer always inherits the representation of its base buffer.</source>
          <target state="translated">如果缓冲区是间接缓冲区,这个函数也会发出错误信号。间接缓冲区总是继承其基本缓冲区的表示方式。</target>
        </trans-unit>
        <trans-unit id="bfa25a7a5563eb87e60e338899232ea47f96f2b2" translate="yes" xml:space="preserve">
          <source>This function alters part of the contents of the string &lt;var&gt;string&lt;/var&gt;, by storing &lt;var&gt;obj&lt;/var&gt; starting at index &lt;var&gt;idx&lt;/var&gt;. The argument &lt;var&gt;obj&lt;/var&gt; may be either a character or a (smaller) string.</source>
          <target state="translated">的字符串的内容，此功能涂改部分 &lt;var&gt;string&lt;/var&gt; ，通过存储 &lt;var&gt;obj&lt;/var&gt; 开始于索引 &lt;var&gt;idx&lt;/var&gt; 。参数 &lt;var&gt;obj&lt;/var&gt; 可以是字符，也可以是（较小的）字符串。</target>
        </trans-unit>
        <trans-unit id="5f3b9f6d880286305d2f483406ba368f2e1181c2" translate="yes" xml:space="preserve">
          <source>This function alters the frame &lt;var&gt;frame&lt;/var&gt; based on the elements of &lt;var&gt;alist&lt;/var&gt;. Each element of &lt;var&gt;alist&lt;/var&gt; has the form &lt;code&gt;(&lt;var&gt;parm&lt;/var&gt; . &lt;var&gt;value&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;parm&lt;/var&gt; is a symbol naming a parameter. If you don&amp;rsquo;t mention a parameter in &lt;var&gt;alist&lt;/var&gt;, its value doesn&amp;rsquo;t change. If &lt;var&gt;frame&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected frame.</source>
          <target state="translated">该功能改变帧 &lt;var&gt;frame&lt;/var&gt; 基础上的元素 &lt;var&gt;alist&lt;/var&gt; 。中的每个元素 &lt;var&gt;alist&lt;/var&gt; 具有形式 &lt;code&gt;(&lt;var&gt;parm&lt;/var&gt; . &lt;var&gt;value&lt;/var&gt;)&lt;/code&gt; ，其中 &lt;var&gt;parm&lt;/var&gt; 是一个符号命名的参数。如果您在 &lt;var&gt;alist&lt;/var&gt; 未提及参数，则其值不会改变。如果 &lt;var&gt;frame&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则默认为选定的帧。</target>
        </trans-unit>
        <trans-unit id="f1a3eb59953468bf3d67cbe0c4bab0730f9d16e5" translate="yes" xml:space="preserve">
          <source>This function alters the frame parameters of all existing frames according to &lt;var&gt;alist&lt;/var&gt;, then modifies &lt;code&gt;default-frame-alist&lt;/code&gt; (and, if necessary, &lt;code&gt;initial-frame-alist&lt;/code&gt;) to apply the same parameter values to frames that will be created henceforth.</source>
          <target state="translated">此函数根据 &lt;var&gt;alist&lt;/var&gt; 更改所有现有帧的帧参数，然后修改 &lt;code&gt;default-frame-alist&lt;/code&gt; （以及，如有必要， &lt;code&gt;initial-frame-alist&lt;/code&gt; ）以将相同的参数值应用于以后将创建的帧。</target>
        </trans-unit>
        <trans-unit id="55474dce8bede7fa41aaf8f090d61568d07cd19b" translate="yes" xml:space="preserve">
          <source>This function always returns &lt;code&gt;nil&lt;/code&gt;. The old syntax information in the table for this character is discarded.</source>
          <target state="translated">此函数始终返回 &lt;code&gt;nil&lt;/code&gt; 。表中该字符的旧语法信息将被丢弃。</target>
        </trans-unit>
        <trans-unit id="826a68e61e26d3dc2018817360ef52a0d95760b2" translate="yes" xml:space="preserve">
          <source>This function animates &lt;var&gt;image&lt;/var&gt;. The optional integer &lt;var&gt;index&lt;/var&gt; specifies the frame from which to start (default 0). The optional argument &lt;var&gt;limit&lt;/var&gt; controls the length of the animation. If omitted or &lt;code&gt;nil&lt;/code&gt;, the image animates once only; if &lt;code&gt;t&lt;/code&gt; it loops forever; if a number animation stops after that many seconds.</source>
          <target state="translated">此功能可对 &lt;var&gt;image&lt;/var&gt; 动画处理。可选的整数 &lt;var&gt;index&lt;/var&gt; 指定从其开始的帧（默认为0）。可选参数 &lt;var&gt;limit&lt;/var&gt; 控制动画的长度。如果省略或为 &lt;code&gt;nil&lt;/code&gt; ，则图像仅动画一次。如果 &lt;code&gt;t&lt;/code&gt; 持续循环; 如果数字动画在那几秒钟后停止。</target>
        </trans-unit>
        <trans-unit id="0967994b7dbfe229674d04294e461f7c265e6b60" translate="yes" xml:space="preserve">
          <source>This function announces that &lt;var&gt;feature&lt;/var&gt; is now loaded, or being loaded, into the current Emacs session. This means that the facilities associated with &lt;var&gt;feature&lt;/var&gt; are or will be available for other Lisp programs.</source>
          <target state="translated">此功能宣布该 &lt;var&gt;feature&lt;/var&gt; 现在已加载或正在加载到当前Emacs会话中。这意味着与 &lt;var&gt;feature&lt;/var&gt; 关联的设施已经或将可用于其他Lisp程序。</target>
        </trans-unit>
        <trans-unit id="72f5b49aa6d8edb55e7989428323cef4e38a7981" translate="yes" xml:space="preserve">
          <source>This function appends the contents of the region delimited by &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; in the current buffer to the end of file &lt;var&gt;filename&lt;/var&gt;. If that file does not exist, it is created. This function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此函数将当前缓冲区中以 &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 分隔的区域的内容附加到文件 &lt;var&gt;filename&lt;/var&gt; 的末尾。如果该文件不存在，则会创建它。该函数返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7b4b6643bdc4c569692300a096eaa54226cc5318" translate="yes" xml:space="preserve">
          <source>This function appends the text &lt;var&gt;string&lt;/var&gt; to the first entry in the kill ring and makes the yanking pointer point to the combined entry. Normally &lt;var&gt;string&lt;/var&gt; goes at the end of the entry, but if &lt;var&gt;before-p&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it goes at the beginning. This function calls &lt;code&gt;kill-new&lt;/code&gt; as a subroutine, thus causing the values of &lt;code&gt;interprogram-cut-function&lt;/code&gt; and possibly &lt;code&gt;interprogram-paste-function&lt;/code&gt; (see below) to be invoked by extension.</source>
          <target state="translated">此函数将文本 &lt;var&gt;string&lt;/var&gt; 附加到kill环中的第一个条目，并使猛拉指针指向组合的条目。通常， &lt;var&gt;string&lt;/var&gt; 位于条目的末尾，但是如果 &lt;var&gt;before-p&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则它位于开头。此函数将 &lt;code&gt;kill-new&lt;/code&gt; 作为子例程调用，从而导致扩展调用 &lt;code&gt;interprogram-cut-function&lt;/code&gt; 和可能的 &lt;code&gt;interprogram-paste-function&lt;/code&gt; （请参见下文）的值。</target>
        </trans-unit>
        <trans-unit id="4239bc8a7e12e62696801af1e048981138c6cec6" translate="yes" xml:space="preserve">
          <source>This function applies &lt;var&gt;function&lt;/var&gt; to each element of &lt;var&gt;sequence&lt;/var&gt; in turn (presumably for side effects), and returns &lt;var&gt;sequence&lt;/var&gt;.</source>
          <target state="translated">这个功能适用于 &lt;var&gt;function&lt;/var&gt; 到的每个元件 &lt;var&gt;sequence&lt;/var&gt; 反过来（大概为副作用），并且返回 &lt;var&gt;sequence&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="2d35ac6e9b6fd226737cb9705d3c9df454deb9e6" translate="yes" xml:space="preserve">
          <source>This function applies &lt;var&gt;function&lt;/var&gt; to each element of &lt;var&gt;sequence&lt;/var&gt;, like &lt;code&gt;mapcar&lt;/code&gt;, but instead of collecting the results into a list, it returns a single list with all the elements of the results (which must be lists), by altering the results (using &lt;code&gt;nconc&lt;/code&gt;; see &lt;a href=&quot;rearrangement#Rearrangement&quot;&gt;Rearrangement&lt;/a&gt;). Like with &lt;code&gt;mapcar&lt;/code&gt;, &lt;var&gt;sequence&lt;/var&gt; can be of any type except a char-table.</source>
          <target state="translated">这个功能适用于 &lt;var&gt;function&lt;/var&gt; 到的每个元素 &lt;var&gt;sequence&lt;/var&gt; ，象 &lt;code&gt;mapcar&lt;/code&gt; ，但不是收集的结果到一个列表中，则返回所有的结果的元件（其必须是列表）的单个列表，通过改变结果（使用 &lt;code&gt;nconc&lt;/code&gt; ;请参阅&lt;a href=&quot;rearrangement#Rearrangement&quot;&gt;重新排列&lt;/a&gt;）。就像 &lt;code&gt;mapcar&lt;/code&gt; 一样， &lt;var&gt;sequence&lt;/var&gt; 可以是char表以外的任何类型。</target>
        </trans-unit>
        <trans-unit id="b1c3772768e1cb0f5aa3ea648b08795849720d0c" translate="yes" xml:space="preserve">
          <source>This function applies &lt;var&gt;spec&lt;/var&gt; as a face spec for &lt;code&gt;face&lt;/code&gt;. &lt;var&gt;spec&lt;/var&gt; should be a face spec, as described in the above documentation for &lt;code&gt;defface&lt;/code&gt;.</source>
          <target state="translated">此功能适用于 &lt;var&gt;spec&lt;/var&gt; 为面部规范的 &lt;code&gt;face&lt;/code&gt; 。 &lt;var&gt;spec&lt;/var&gt; 应该是面部规范，如上述 &lt;code&gt;defface&lt;/code&gt; 的文档中所述。</target>
        </trans-unit>
        <trans-unit id="1eb67707006b5a85fc68b00651580e8633b2915b" translate="yes" xml:space="preserve">
          <source>This function applies a translation table to the characters in the buffer between positions &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;.</source>
          <target state="translated">此功能将转换表应用于位置 &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 之间的缓冲区中的字符。</target>
        </trans-unit>
        <trans-unit id="de65326c220ae4ef4349c37201370510fd36aea5" translate="yes" xml:space="preserve">
          <source>This function arranges for &lt;var&gt;watch-function&lt;/var&gt; to be called whenever &lt;var&gt;symbol&lt;/var&gt; is modified. Modifications through aliases (see &lt;a href=&quot;variable-aliases#Variable-Aliases&quot;&gt;Variable Aliases&lt;/a&gt;) will have the same effect.</source>
          <target state="translated">修改 &lt;var&gt;symbol&lt;/var&gt; 后，此函数安排调用 &lt;var&gt;watch-function&lt;/var&gt; 。通过别名进行的修改（请参见&lt;a href=&quot;variable-aliases#Variable-Aliases&quot;&gt;变量别名&lt;/a&gt;）将具有相同的效果。</target>
        </trans-unit>
        <trans-unit id="8e72ff71cadb59169a335198abe5d69882854f36" translate="yes" xml:space="preserve">
          <source>This function arranges for the debugger to be called whenever &lt;var&gt;variable&lt;/var&gt; is modified.</source>
          <target state="translated">修改 &lt;var&gt;variable&lt;/var&gt; 后，此函数安排调用调试器。</target>
        </trans-unit>
        <trans-unit id="acd470cf7d8172fe867cc56b5d3d629b62b83db0" translate="yes" xml:space="preserve">
          <source>This function asks the user a question, expecting input in the minibuffer. It returns &lt;code&gt;t&lt;/code&gt; if the user enters &amp;lsquo;</source>
          <target state="translated">该函数向用户询问一个问题，希望在迷你缓冲区中输入。如果用户输入&amp;ldquo; ，则返回 &lt;code&gt;t&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c511618a8bcd18a156a4ebdec967bc65d5a89422" translate="yes" xml:space="preserve">
          <source>This function asks the user a question, expecting input in the minibuffer. It returns &lt;code&gt;t&lt;/code&gt; if the user types</source>
          <target state="translated">该函数向用户询问一个问题，希望在迷你缓冲区中输入。如果用户输入则返回 &lt;code&gt;t&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a6a45e25fa7cc4f87747729f9c53ffa39831209f" translate="yes" xml:space="preserve">
          <source>This function asks the user a series of questions, reading a single-character answer in the echo area for each one.</source>
          <target state="translated">该功能向用户提出一系列问题,在回音区读取每个问题的单字符答案。</target>
        </trans-unit>
        <trans-unit id="1386738f8749573a53305a8dcc03715d2bc078f5" translate="yes" xml:space="preserve">
          <source>This function assigns &lt;var&gt;class&lt;/var&gt; to all the files in &lt;code&gt;directory&lt;/code&gt; and its subdirectories. Thereafter, all the variable settings specified for &lt;var&gt;class&lt;/var&gt; will be applied to any visited file in &lt;var&gt;directory&lt;/var&gt; and its children. &lt;var&gt;class&lt;/var&gt; must have been already defined by &lt;code&gt;dir-locals-set-class-variables&lt;/code&gt;.</source>
          <target state="translated">此函数将 &lt;var&gt;class&lt;/var&gt; 分配给 &lt;code&gt;directory&lt;/code&gt; 及其子目录中的所有文件。此后，为 &lt;var&gt;class&lt;/var&gt; 指定的所有变量设置将应用于 &lt;var&gt;directory&lt;/var&gt; 及其子目录中的任何已访问文件。 &lt;var&gt;class&lt;/var&gt; 必须已经由 &lt;code&gt;dir-locals-set-class-variables&lt;/code&gt; 定义。</target>
        </trans-unit>
        <trans-unit id="ded3336ee747552b9df4826ac4a5d24623ad4e04" translate="yes" xml:space="preserve">
          <source>This function assigns &lt;var&gt;profiles&lt;/var&gt;, which are symbols, to all remote connections identified by &lt;var&gt;criteria&lt;/var&gt;. &lt;var&gt;criteria&lt;/var&gt; is a plist identifying a connection and the application using this connection. Property names might be &lt;code&gt;:application&lt;/code&gt;, &lt;code&gt;:protocol&lt;/code&gt;, &lt;code&gt;:user&lt;/code&gt; and &lt;code&gt;:machine&lt;/code&gt;. The property value of &lt;code&gt;:application&lt;/code&gt; is a symbol, all other property values are strings. All properties are optional; if &lt;var&gt;criteria&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it always applies. Example:</source>
          <target state="translated">此功能将 &lt;var&gt;profiles&lt;/var&gt; （即符号）分配给由 &lt;var&gt;criteria&lt;/var&gt; 标识的所有远程连接。 &lt;var&gt;criteria&lt;/var&gt; 是一个plist，用于标识连接以及使用该连接的应用程序。属性名称可能是 &lt;code&gt;:application&lt;/code&gt; ， &lt;code&gt;:protocol&lt;/code&gt; ， &lt;code&gt;:user&lt;/code&gt; 和 &lt;code&gt;:machine&lt;/code&gt; 。 &lt;code&gt;:application&lt;/code&gt; 的属性值是一个符号，所有其他属性值是字符串。所有属性都是可选的；如果 &lt;var&gt;criteria&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则始终适用。例：</target>
        </trans-unit>
        <trans-unit id="439a567966bbada3620c5a871bbdbef0d06493b7" translate="yes" xml:space="preserve">
          <source>This function associates &lt;var&gt;sentinel&lt;/var&gt; with &lt;var&gt;process&lt;/var&gt;. If &lt;var&gt;sentinel&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, then the process will have the default sentinel, which inserts a message in the process&amp;rsquo;s buffer when the process status changes.</source>
          <target state="translated">此功能将 &lt;var&gt;sentinel&lt;/var&gt; 与 &lt;var&gt;process&lt;/var&gt; 关联。如果 &lt;var&gt;sentinel&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则该进程将具有默认的哨兵，当进程状态更改时，它将在进程的缓冲区中插入一条消息。</target>
        </trans-unit>
        <trans-unit id="1096a583f698faa4eb718e093160984efaf64843" translate="yes" xml:space="preserve">
          <source>This function associates the color name &lt;var&gt;name&lt;/var&gt; with color number &lt;var&gt;number&lt;/var&gt; on the terminal.</source>
          <target state="translated">该功能相关联的颜色名称 &lt;var&gt;name&lt;/var&gt; 与色号 &lt;var&gt;number&lt;/var&gt; 在终端上。</target>
        </trans-unit>
        <trans-unit id="e3ae78a1f68bdfe0e4cbf3cc1cf7cc2b156acde5" translate="yes" xml:space="preserve">
          <source>This function attempts to give all windows on the selected frame approximately the same share of the screen area. Full-width or full-height windows are not given more space than other windows.</source>
          <target state="translated">此功能试图给所选框架上的所有窗口提供大致相同的屏幕区域份额。全宽或全高的窗口不会比其他窗口获得更多的空间。</target>
        </trans-unit>
        <trans-unit id="f3bcc3ee850866c0fffcaf099cde8903944e0c4c" translate="yes" xml:space="preserve">
          <source>This function attempts to keep point, markers, text properties, and overlays in the current buffer intact. One potential case where this behavior is useful is external code formatting programs: they typically write the reformatted text into a temporary buffer or file, and using &lt;code&gt;delete-region&lt;/code&gt; and &lt;code&gt;insert-buffer-substring&lt;/code&gt; would destroy these properties. However, the latter combination is typically faster (See &lt;a href=&quot;deletion#Deletion&quot;&gt;Deletion&lt;/a&gt;, and &lt;a href=&quot;insertion#Insertion&quot;&gt;Insertion&lt;/a&gt;).</source>
          <target state="translated">此函数尝试保持当前缓冲区中的点，标记，文本属性和覆盖图不变。这种行为有用的一种潜在情况是外部代码格式化程序：它们通常将重新格式化的文本写入临时缓冲区或文件中，并且使用 &lt;code&gt;delete-region&lt;/code&gt; 和 &lt;code&gt;insert-buffer-substring&lt;/code&gt; 会破坏这些属性。但是，后者的组合通常更快（请参见&lt;a href=&quot;deletion#Deletion&quot;&gt;Deletion&lt;/a&gt;和&lt;a href=&quot;insertion#Insertion&quot;&gt;Insertion&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="1911e07f9047017317f10d8f050384cab29aaa1f" translate="yes" xml:space="preserve">
          <source>This function attempts to make &lt;var&gt;window&lt;/var&gt; as large as possible, in both dimensions, without resizing its frame or deleting other windows. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window.</source>
          <target state="translated">此函数试图在不改变其框架大小或删除其他窗口的情况下，使 &lt;var&gt;window&lt;/var&gt; 在两个维度上尽可能大。如果 &lt;var&gt;window&lt;/var&gt; 省略或为 &lt;code&gt;nil&lt;/code&gt; ，则默认为所选窗口。</target>
        </trans-unit>
        <trans-unit id="35f2b233f1d585e694aa5dfcd78a197e11d4d89a" translate="yes" xml:space="preserve">
          <source>This function attempts to make &lt;var&gt;window&lt;/var&gt; as small as possible, in both dimensions, without deleting it or resizing its frame. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window.</source>
          <target state="translated">此函数试图在不删除 &lt;var&gt;window&lt;/var&gt; 或调整窗口框架大小的情况下，使窗口在两个维度上都尽可能小。如果 &lt;var&gt;window&lt;/var&gt; 省略或为 &lt;code&gt;nil&lt;/code&gt; ，则默认为所选窗口。</target>
        </trans-unit>
        <trans-unit id="b23abdf7c6f489bc23826919a92070345aea0a72" translate="yes" xml:space="preserve">
          <source>This function auto-saves all buffers that need to be auto-saved. It saves all buffers for which auto-saving is enabled and that have been changed since the previous auto-save.</source>
          <target state="translated">该功能自动保存所有需要自动保存的缓冲区。它保存所有启用了自动保存功能的缓冲区,并且自上次自动保存后发生了变化。</target>
        </trans-unit>
        <trans-unit id="fc85e4a1c9b182563a3f4a35ba0acde86dc4c46a" translate="yes" xml:space="preserve">
          <source>This function balances windows in a way that gives more space to full-width and/or full-height windows. If &lt;var&gt;window-or-frame&lt;/var&gt; specifies a frame, it balances all windows on that frame. If &lt;var&gt;window-or-frame&lt;/var&gt; specifies a window, it balances only that window and its siblings (see &lt;a href=&quot;windows-and-frames#Windows-and-Frames&quot;&gt;Windows and Frames&lt;/a&gt;).</source>
          <target state="translated">此功能以给全宽和/或全高窗口留出更多空间的方式平衡窗口。如果&amp;ldquo; &lt;var&gt;window-or-frame&lt;/var&gt; 指定了框架，则它将平衡该框架上的所有窗口。如果 &lt;var&gt;window-or-frame&lt;/var&gt; 指定一个窗口，则仅平衡该窗口及其同级窗口（请参见&lt;a href=&quot;windows-and-frames#Windows-and-Frames&quot;&gt;Windows和Frames&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="8d8d3ca16001bd519fbd308317ed1a8be178f437" translate="yes" xml:space="preserve">
          <source>This function beeps, or flashes the screen (see &lt;code&gt;visible-bell&lt;/code&gt; below). It also terminates any keyboard macro currently executing unless &lt;var&gt;do-not-terminate&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此功能会发出哔声或闪烁屏幕（请参阅下面的 &lt;code&gt;visible-bell&lt;/code&gt; ）。它还会终止当前正在执行的所有键盘宏，除非 &lt;var&gt;do-not-terminate&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3ff292221ef899ef612111410550ec5e84c130c7" translate="yes" xml:space="preserve">
          <source>This function behaves exactly like &lt;code&gt;error&lt;/code&gt;, except that it uses the error symbol &lt;code&gt;user-error&lt;/code&gt; rather than &lt;code&gt;error&lt;/code&gt;. As the name suggests, this is intended to report errors on the part of the user, rather than errors in the code itself. For example, if you try to use the command &lt;code&gt;Info-history-back&lt;/code&gt; (</source>
          <target state="translated">此函数的行为与 &lt;code&gt;error&lt;/code&gt; 完全相同，不同之处在于它使用错误符号 &lt;code&gt;user-error&lt;/code&gt; 而不是 &lt;code&gt;error&lt;/code&gt; 。顾名思义，这旨在报告用户方面的错误，而不是代码本身的错误。例如，如果您尝试使用命令 &lt;code&gt;Info-history-back&lt;/code&gt; （</target>
        </trans-unit>
        <trans-unit id="0a3a5682f2af5897ff191aa1d0e3be9bede33499" translate="yes" xml:space="preserve">
          <source>This function behaves like &lt;code&gt;custom-initialize-set&lt;/code&gt;, but it delays the actual initialization to the next Emacs start. This should be used in files that are preloaded (or for autoloaded variables), so that the initialization is done in the run-time context rather than the build-time context. This also has the side-effect that the (delayed) initialization is performed with the &lt;code&gt;:set&lt;/code&gt; function. See &lt;a href=&quot;building-emacs#Building-Emacs&quot;&gt;Building Emacs&lt;/a&gt;.</source>
          <target state="translated">该函数的行为类似于 &lt;code&gt;custom-initialize-set&lt;/code&gt; ，但是它将实际的初始化延迟到下一次Emacs启动。应该在预加载的文件（或自动加载的变量）中使用此文件，以便在运行时上下文而不是在构建时上下文中完成初始化。这也具有使用 &lt;code&gt;:set&lt;/code&gt; 函数执行（延迟）初始化的副作用。请参阅&lt;a href=&quot;building-emacs#Building-Emacs&quot;&gt;构建Emacs&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="af96d322e164b004457b48bee402bcd096416332" translate="yes" xml:space="preserve">
          <source>This function behaves like &lt;code&gt;equal&lt;/code&gt; in all cases but also requires that for two strings to be equal, they have the same text properties.</source>
          <target state="translated">在所有情况下，此函数的行为均 &lt;code&gt;equal&lt;/code&gt; ，但还要求两个字符串相等，它们具有相同的文本属性。</target>
        </trans-unit>
        <trans-unit id="ca3b72e7b43c7fc58841701418556d75f3cb6fc2" translate="yes" xml:space="preserve">
          <source>This function browses the specified &lt;var&gt;uri&lt;/var&gt; in the given &lt;var&gt;xwidget&lt;/var&gt;. The &lt;var&gt;uri&lt;/var&gt; is a string that specifies the name of a file or a URL.</source>
          <target state="translated">此函数在给定的 &lt;var&gt;xwidget&lt;/var&gt; 中浏览指定的 &lt;var&gt;uri&lt;/var&gt; 。该 &lt;var&gt;uri&lt;/var&gt; 是一个字符串，它指定一个文件或URL的名称。</target>
        </trans-unit>
        <trans-unit id="6565fe8d7642fc3de8b3c4b49600210dcbad04ac" translate="yes" xml:space="preserve">
          <source>This function builds a &lt;em&gt;prec2&lt;/em&gt; table from a table of precedences &lt;var&gt;precs&lt;/var&gt;. &lt;var&gt;precs&lt;/var&gt; should be a list, sorted by precedence (for example &lt;code&gt;&quot;+&quot;&lt;/code&gt; will come before &lt;code&gt;&quot;*&quot;&lt;/code&gt;), of elements of the form &lt;code&gt;(&lt;var&gt;assoc&lt;/var&gt; &lt;var&gt;op&lt;/var&gt; ...)&lt;/code&gt;, where each &lt;var&gt;op&lt;/var&gt; is a token that acts as an operator; &lt;var&gt;assoc&lt;/var&gt; is their associativity, which can be either &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;assoc&lt;/code&gt;, or &lt;code&gt;nonassoc&lt;/code&gt;. All operators in a given element share the same precedence level and associativity.</source>
          <target state="translated">此函数根据优先级 &lt;var&gt;precs&lt;/var&gt; 表构建&lt;em&gt;prec2&lt;/em&gt;表。 &lt;var&gt;precs&lt;/var&gt; 应该是形式 &lt;code&gt;(&lt;var&gt;assoc&lt;/var&gt; &lt;var&gt;op&lt;/var&gt; ...)&lt;/code&gt; &lt;var&gt;assoc&lt;/var&gt; &lt;var&gt;op&lt;/var&gt; ...）的元素的列表，该列表按优先级排序（例如 &lt;code&gt;&quot;+&quot;&lt;/code&gt; 在 &lt;code&gt;&quot;*&quot;&lt;/code&gt; 之前），其中每个 &lt;var&gt;op&lt;/var&gt; 是充当运算符的标记； &lt;var&gt;assoc&lt;/var&gt; 是它们的关联性，可以是 &lt;code&gt;left&lt;/code&gt; ， &lt;code&gt;right&lt;/code&gt; ， &lt;code&gt;assoc&lt;/code&gt; 或 &lt;code&gt;nonassoc&lt;/code&gt; 。给定元素中的所有运算符都具有相同的优先级和关联性。</target>
        </trans-unit>
        <trans-unit id="1b51bc6e106b8e23530ca082a5db223c3af4e0c4" translate="yes" xml:space="preserve">
          <source>This function byte-compiles the function definition of &lt;var&gt;symbol&lt;/var&gt;, replacing the previous definition with the compiled one. The function definition of &lt;var&gt;symbol&lt;/var&gt; must be the actual code for the function; &lt;code&gt;byte-compile&lt;/code&gt; does not handle function indirection. The return value is the byte-code function object which is the compiled definition of &lt;var&gt;symbol&lt;/var&gt; (see &lt;a href=&quot;byte_002dcode-objects#Byte_002dCode-Objects&quot;&gt;Byte-Code Objects&lt;/a&gt;).</source>
          <target state="translated">此函数按字节编译 &lt;var&gt;symbol&lt;/var&gt; 的函数定义，用已编译的定义替换以前的定义。 &lt;var&gt;symbol&lt;/var&gt; 的功能定义必须是该功能的实际代码； &lt;code&gt;byte-compile&lt;/code&gt; 不处理函数间接寻址。返回值是字节码功能对象，它是 &lt;var&gt;symbol&lt;/var&gt; 的编译定义（请参见&lt;a href=&quot;byte_002dcode-objects#Byte_002dCode-Objects&quot;&gt;Byte-Code Objects&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="58dbbedddc985589878e0d2af7300367367b6f41" translate="yes" xml:space="preserve">
          <source>This function calculates the dimensions of the largest empty rectangle that can be inscribed in the specified &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s text area. &lt;var&gt;window&lt;/var&gt; must be a live window and defaults to the selected one.</source>
          <target state="translated">此函数计算可以在指定 &lt;var&gt;window&lt;/var&gt; 的文本区域内刻出的最大空白矩形的尺寸。 &lt;var&gt;window&lt;/var&gt; 必须是活动窗口，并且默认为选定的窗口。</target>
        </trans-unit>
        <trans-unit id="ba72cf6062793468aad230446fa4d17bf997509b" translate="yes" xml:space="preserve">
          <source>This function calculates the pixel dimensions of each line displayed in the specified &lt;var&gt;window&lt;/var&gt;. It does so by walking &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s current glyph matrix&amp;mdash;a matrix storing the glyph (see &lt;a href=&quot;glyphs#Glyphs&quot;&gt;Glyphs&lt;/a&gt;) of each buffer character currently displayed in &lt;var&gt;window&lt;/var&gt;. If successful, it returns a list of cons pairs representing the x- and y-coordinates of the lower right corner of the last character of each line. Coordinates are measured in pixels from an origin (0, 0) at the top-left corner of &lt;var&gt;window&lt;/var&gt;. &lt;var&gt;window&lt;/var&gt; must be a live window and defaults to the selected one.</source>
          <target state="translated">此函数计算指定 &lt;var&gt;window&lt;/var&gt; 显示的每行的像素尺寸。它是通过移动 &lt;var&gt;window&lt;/var&gt; 的当前字形矩阵（存储当前显示在 &lt;var&gt;window&lt;/var&gt; 中的每个缓冲字符的字形（请参见&lt;a href=&quot;glyphs#Glyphs&quot;&gt;字形&lt;/a&gt;）的矩阵）来实现的。如果成功，它将返回一个cons对列表，它们代表每行最后一个字符右下角的x和y坐标。坐标以距 &lt;var&gt;window&lt;/var&gt; 左上角的原点（0，0）的像素为单位进行测量。 &lt;var&gt;window&lt;/var&gt; 必须是活动窗口，并且默认为选定的窗口。</target>
        </trans-unit>
        <trans-unit id="0e51c66274036d618c90f8effd48d6a002399b1b" translate="yes" xml:space="preserve">
          <source>This function calls &lt;code&gt;describe-bindings&lt;/code&gt; to display a list of all the subcommands of the prefix key of the most recent key sequence. The prefix described consists of all but the last event of that key sequence. (The last event is, presumably, the help character.)</source>
          <target state="translated">此函数调用 &lt;code&gt;describe-bindings&lt;/code&gt; 以显示最新键序列的前缀键的所有子命令的列表。所描述的前缀由该键序列的所有（最后一个事件）组成。（最后一个事件大概是帮助角色。）</target>
        </trans-unit>
        <trans-unit id="0c7434b528b427b395f4fd38e52b1e8a896cfd89" translate="yes" xml:space="preserve">
          <source>This function calls &lt;code&gt;progress-reporter-update&lt;/code&gt;, so the first message is printed immediately.</source>
          <target state="translated">此函数调用 &lt;code&gt;progress-reporter-update&lt;/code&gt; ，因此第一条消息将立即打印出来。</target>
        </trans-unit>
        <trans-unit id="38848b0928341ad6ede5fe0568bd029f5b30515e" translate="yes" xml:space="preserve">
          <source>This function calls &lt;code&gt;replace-buffer-in-windows&lt;/code&gt; for cleaning up all windows currently displaying the buffer to be killed.</source>
          <target state="translated">此函数调用 &lt;code&gt;replace-buffer-in-windows&lt;/code&gt; 来清除当前显示要杀死的缓冲区的所有窗口。</target>
        </trans-unit>
        <trans-unit id="11724efe2ff0c491736a280c8b24b31aae6f66b1" translate="yes" xml:space="preserve">
          <source>This function calls &lt;var&gt;function&lt;/var&gt; once for each of the associations in &lt;var&gt;table&lt;/var&gt;. The function &lt;var&gt;function&lt;/var&gt; should accept two arguments&amp;mdash;a &lt;var&gt;key&lt;/var&gt; listed in &lt;var&gt;table&lt;/var&gt;, and its associated &lt;var&gt;value&lt;/var&gt;. &lt;code&gt;maphash&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此函数为 &lt;var&gt;table&lt;/var&gt; 中的每个关联调用一次 &lt;var&gt;function&lt;/var&gt; 。该函数 &lt;var&gt;function&lt;/var&gt; 应该接受两个参数，一个 &lt;var&gt;key&lt;/var&gt; 中列出 &lt;var&gt;table&lt;/var&gt; 及其关联 &lt;var&gt;value&lt;/var&gt; 。 &lt;code&gt;maphash&lt;/code&gt; 返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="333c365e2bcb3639c7a57e0c3d10f9d9eeb9ba2b" translate="yes" xml:space="preserve">
          <source>This function calls &lt;var&gt;function&lt;/var&gt; once with each symbol in the obarray &lt;var&gt;obarray&lt;/var&gt;. Then it returns &lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;obarray&lt;/var&gt; is omitted, it defaults to the value of &lt;code&gt;obarray&lt;/code&gt;, the standard obarray for ordinary symbols.</source>
          <target state="translated">此函数对obarray &lt;var&gt;obarray&lt;/var&gt; 中的每个符号调用一次 &lt;var&gt;function&lt;/var&gt; 。然后返回 &lt;code&gt;nil&lt;/code&gt; 。如果省略 &lt;var&gt;obarray&lt;/var&gt; ，则默认值为 &lt;code&gt;obarray&lt;/code&gt; 的值（普通符号的标准obarray）。</target>
        </trans-unit>
        <trans-unit id="a9fa740195e686e04b2f695015c29cc303bed6f3" translate="yes" xml:space="preserve">
          <source>This function calls &lt;var&gt;program&lt;/var&gt; and waits for it to finish.</source>
          <target state="translated">该函数调用 &lt;var&gt;program&lt;/var&gt; 并等待其完成。</target>
        </trans-unit>
        <trans-unit id="9f7663bce42615c5a1363320cf1b6553cdaa46f2" translate="yes" xml:space="preserve">
          <source>This function calls its argument &lt;var&gt;function&lt;/var&gt; for each element of &lt;var&gt;char-table&lt;/var&gt; that has a non-&lt;code&gt;nil&lt;/code&gt; value. The call to &lt;var&gt;function&lt;/var&gt; is with two arguments, a key and a value. The key is a possible &lt;var&gt;range&lt;/var&gt; argument for &lt;code&gt;char-table-range&lt;/code&gt;&amp;mdash;either a valid character or a cons cell &lt;code&gt;(&lt;var&gt;from&lt;/var&gt; . &lt;var&gt;to&lt;/var&gt;)&lt;/code&gt;, specifying a range of characters that share the same value. The value is what &lt;code&gt;(char-table-range &lt;var&gt;char-table&lt;/var&gt; &lt;var&gt;key&lt;/var&gt;)&lt;/code&gt; returns.</source>
          <target state="translated">此函数针对具有非 &lt;code&gt;nil&lt;/code&gt; 值的 &lt;var&gt;char-table&lt;/var&gt; 的每个元素调用其参数 &lt;var&gt;function&lt;/var&gt; 。对 &lt;var&gt;function&lt;/var&gt; 的调用有两个参数，一个键和一个值。键是 &lt;code&gt;char-table-range&lt;/code&gt; 的可能 &lt;var&gt;range&lt;/var&gt; 参数-有效字符或cons单元格 &lt;code&gt;(&lt;var&gt;from&lt;/var&gt; . &lt;var&gt;to&lt;/var&gt;)&lt;/code&gt; &lt;var&gt;from&lt;/var&gt; 。 &lt;var&gt;to&lt;/var&gt; ），指定共享相同值的字符范围。该值是 &lt;code&gt;(char-table-range &lt;var&gt;char-table&lt;/var&gt; &lt;var&gt;key&lt;/var&gt;)&lt;/code&gt; &lt;var&gt;char-table&lt;/var&gt; &lt;var&gt;key&lt;/var&gt; ）返回的值。</target>
        </trans-unit>
        <trans-unit id="e2d39d4245ea953b6c03bb7a74be65f2111faf98" translate="yes" xml:space="preserve">
          <source>This function calls the function &lt;var&gt;fun&lt;/var&gt; once for each live window, with the window as the argument.</source>
          <target state="translated">该函数以窗口为参数，为每个活动窗口调用一次 &lt;var&gt;fun&lt;/var&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="d9657b6203a8f764b5c56ebbfc825cb844478422" translate="yes" xml:space="preserve">
          <source>This function calls the function &lt;var&gt;predicate&lt;/var&gt; for each of the windows in the cyclic order of windows in turn, passing it the window as an argument. If the predicate returns non-&lt;code&gt;nil&lt;/code&gt; for any window, this function stops and returns that window. If no such window is found, the return value is &lt;var&gt;default&lt;/var&gt; (which defaults to &lt;code&gt;nil&lt;/code&gt;).</source>
          <target state="translated">此函数按窗口的循环顺序依次调用每个窗口的函数 &lt;var&gt;predicate&lt;/var&gt; ，并将该窗口作为参数传递给它。如果断言返回非 &lt;code&gt;nil&lt;/code&gt; 任何窗口，此功能将停止并返回该窗口。如果找不到这样的窗口，则返回值为 &lt;var&gt;default&lt;/var&gt; （默认为 &lt;code&gt;nil&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="708c1309721b1c0f149f7d2312324af9348cb6d9" translate="yes" xml:space="preserve">
          <source>This function calls the interactively callable function &lt;var&gt;command&lt;/var&gt;, providing arguments according to its interactive calling specifications. It returns whatever &lt;var&gt;command&lt;/var&gt; returns.</source>
          <target state="translated">该函数调用交互式可调用函数 &lt;var&gt;command&lt;/var&gt; ，并根据其交互式调用规范提供参数。它返回任何 &lt;var&gt;command&lt;/var&gt; 返回。</target>
        </trans-unit>
        <trans-unit id="6026201df119b1eaf16d1f1c6ef16e3d7bf43084" translate="yes" xml:space="preserve">
          <source>This function calls the specified &lt;var&gt;func&lt;/var&gt; passing it &lt;var&gt;nargs&lt;/var&gt; arguments from the array pointed to by &lt;var&gt;args&lt;/var&gt;. The argument &lt;var&gt;func&lt;/var&gt; can be a function symbol (e.g., returned by &lt;code&gt;intern&lt;/code&gt; described above), a module function returned by &lt;code&gt;make_function&lt;/code&gt; (see &lt;a href=&quot;module-functions#Module-Functions&quot;&gt;Module Functions&lt;/a&gt;), a subroutine written in C, etc. If &lt;var&gt;nargs&lt;/var&gt; is zero, &lt;var&gt;args&lt;/var&gt; can be a &lt;code&gt;NULL&lt;/code&gt; pointer.</source>
          <target state="translated">该函数调用指定的 &lt;var&gt;func&lt;/var&gt; ，从 &lt;var&gt;args&lt;/var&gt; 指向的数组中传递 &lt;var&gt;nargs&lt;/var&gt; 参数。参数 &lt;var&gt;func&lt;/var&gt; 可以是函数符号（例如，由上述的 &lt;code&gt;intern&lt;/code&gt; 返回），由 &lt;code&gt;make_function&lt;/code&gt; 返回的模块函数（请参见&lt;a href=&quot;module-functions#Module-Functions&quot;&gt;Module Functions&lt;/a&gt;），用C编写的子例程等。如果 &lt;var&gt;nargs&lt;/var&gt; 为零，则 &lt;var&gt;args&lt;/var&gt; 可以为 &lt;code&gt;NULL&lt;/code&gt; 指针。</target>
        </trans-unit>
        <trans-unit id="c049f14e0b6666963e4ec8ce86792a24885b4cb6" translate="yes" xml:space="preserve">
          <source>This function can also be called interactively. In that case, it prints a message reporting the number of lines, words, and characters in the buffer, or in the region if the region is active.</source>
          <target state="translated">这个函数也可以被交互式调用,在这种情况下,它会打印一条消息,报告缓冲区中的行数、字数和字符数。在这种情况下,它会打印一条消息,报告缓冲区中的行数、字数和字符数,如果该区域处于活动状态,则报告该区域中的行数、字数和字符数。</target>
        </trans-unit>
        <trans-unit id="51c54bee55f87d0a2be16a8a5a2c9be8f612bfee" translate="yes" xml:space="preserve">
          <source>This function can be called before an amalgamating command. It removes the previous &lt;code&gt;undo-boundary&lt;/code&gt; if a series of such calls have been made.</source>
          <target state="translated">可以在合并命令之前调用此函数。如果进行了一系列此类调用，它将删除先前的 &lt;code&gt;undo-boundary&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="df4f49d21440d1153bf1036a702981a94f5196e8" translate="yes" xml:space="preserve">
          <source>This function can be used to initialize the local keymap of a major mode for which insertion of text is not desirable. But usually such a mode should be derived from &lt;code&gt;special-mode&lt;/code&gt; (see &lt;a href=&quot;basic-major-modes#Basic-Major-Modes&quot;&gt;Basic Major Modes&lt;/a&gt;); then its keymap will automatically inherit from &lt;code&gt;special-mode-map&lt;/code&gt;, which is already suppressed. Here is how &lt;code&gt;special-mode-map&lt;/code&gt; is defined:</source>
          <target state="translated">此功能可用于初始化不需要插入文本的主要模式的本地键盘映射。但是通常这种模式应该从 &lt;code&gt;special-mode&lt;/code&gt; 派生（请参见&lt;a href=&quot;basic-major-modes#Basic-Major-Modes&quot;&gt;基本主要模式&lt;/a&gt;）；然后其键映射将自动从 &lt;code&gt;special-mode-map&lt;/code&gt; 继承，该映射已被取消。这是 &lt;code&gt;special-mode-map&lt;/code&gt; 的定义方式：</target>
        </trans-unit>
        <trans-unit id="be74eec3452d11d0176e37ed21b512bdf1eb22c2" translate="yes" xml:space="preserve">
          <source>This function can be used to transpose stretches of text:</source>
          <target state="translated">此功能可用于转换文本的长度。</target>
        </trans-unit>
        <trans-unit id="197f6679cb3ca88b1a4655c88c49b28d088d5627" translate="yes" xml:space="preserve">
          <source>This function can be useful as an output stream when debugging. It writes &lt;var&gt;character&lt;/var&gt; to the standard error stream.</source>
          <target state="translated">调试时，此功能可用作输出流。它将 &lt;var&gt;character&lt;/var&gt; 写入标准错误流。</target>
        </trans-unit>
        <trans-unit id="c86ffcbcc5f0b36e1cefc4186607fc1c394c0fe9" translate="yes" xml:space="preserve">
          <source>This function can indicate there are no more sort records by leaving point at the end of the buffer.</source>
          <target state="translated">这个函数可以通过在缓冲区末尾留点来表示没有更多的排序记录。</target>
        </trans-unit>
        <trans-unit id="d16e2d06844ba5f689f62688e4c3ba9cf1b79431" translate="yes" xml:space="preserve">
          <source>This function cancels and undoes all the changes in the change group specified by &lt;var&gt;handle&lt;/var&gt;.</source>
          <target state="translated">此功能取消并撤消 &lt;var&gt;handle&lt;/var&gt; 指定的更改组中的所有更改。</target>
        </trans-unit>
        <trans-unit id="85e6d5637ca515e9970407cc96b9ed5acbc70b91" translate="yes" xml:space="preserve">
          <source>This function cancels any narrowing in the current buffer, so that the entire contents are accessible. This is called &lt;em&gt;widening&lt;/em&gt;. It is equivalent to the following expression:</source>
          <target state="translated">此功能取消了当前缓冲区中的任何缩小，从而可以访问全部内容。这称为&lt;em&gt;扩大&lt;/em&gt;。它等效于以下表达式：</target>
        </trans-unit>
        <trans-unit id="aca02809e6ca5d0f5704c010f281a569f37b9d26" translate="yes" xml:space="preserve">
          <source>This function cannot be used in an Emacs that was already dumped. This function is deprecated, and by default Emacs is built without &lt;code&gt;unexec&lt;/code&gt; support so this function is not available.</source>
          <target state="translated">在已转储的Emacs中不能使用此功能。不建议使用此功能，并且默认情况下，Emacs的构建没有 &lt;code&gt;unexec&lt;/code&gt; 支持，因此该功能不可用。</target>
        </trans-unit>
        <trans-unit id="d6862d9f011c28238585e423fb0003d9a3c85d4a" translate="yes" xml:space="preserve">
          <source>This function cannot tell whether the comments it traverses are embedded within a string. If they look like comments, it treats them as comments.</source>
          <target state="translated">这个函数不能判断它遍历的注释是否嵌入到一个字符串中。如果它们看起来像注释,它就把它们当作注释来处理。</target>
        </trans-unit>
        <trans-unit id="bc06d29126920d369fe3dd2dbf2dd7f17e1b48fe" translate="yes" xml:space="preserve">
          <source>This function capitalizes &lt;var&gt;count&lt;/var&gt; words after point, moving point over as it does. To capitalize means to convert each word&amp;rsquo;s first character to upper case and convert the rest of each word to lower case. If &lt;var&gt;count&lt;/var&gt; is negative, the function capitalizes the -&lt;var&gt;count&lt;/var&gt; previous words but does not move point. The value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此功能在点之后大写 &lt;var&gt;count&lt;/var&gt; ，并以此移动点。大写表示将每个单词的第一个字符转换为大写字母，然后将每个单词的其余字符转换为小写字母。如果 &lt;var&gt;count&lt;/var&gt; 为负，该函数将大写 &lt;var&gt;count&lt;/var&gt; 前面的单词，但不移动点。该值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9d4a014eb3c50b3c0c03861600f49c23114f2af5" translate="yes" xml:space="preserve">
          <source>This function capitalizes all words in the region defined by &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;. To capitalize means to convert each word&amp;rsquo;s first character to upper case and convert the rest of each word to lower case. The function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此函数将由 &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 定义的区域中的所有单词大写。大写表示将每个单词的第一个字符转换为大写字母，然后将每个单词的其余字符转换为小写字母。该函数返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1c0ebaf53d2d45563bdffeb5dd181592b579c85a" translate="yes" xml:space="preserve">
          <source>This function capitalizes strings or characters. If &lt;var&gt;string-or-char&lt;/var&gt; is a string, the function returns a new string whose contents are a copy of &lt;var&gt;string-or-char&lt;/var&gt; in which each word has been capitalized. This means that the first character of each word is converted to upper case, and the rest are converted to lower case.</source>
          <target state="translated">此函数将字符串或字符大写。如果 &lt;var&gt;string-or-char&lt;/var&gt; 是一个字符串，则该函数返回一个新字符串，其内容是 &lt;var&gt;string-or-char&lt;/var&gt; 的副本，其中每个单词都大写。这意味着每个单词的第一个字符将转换为大写，其余的将转换为小写。</target>
        </trans-unit>
        <trans-unit id="f44d2a9276aece55b507fe01ce5beb8c630be2ed" translate="yes" xml:space="preserve">
          <source>This function causes the browser widget specified by &lt;var&gt;xwidget&lt;/var&gt; to execute the specified JavaScript &lt;code&gt;script&lt;/code&gt;.</source>
          <target state="translated">此功能使 &lt;var&gt;xwidget&lt;/var&gt; 指定的浏览器小部件执行指定的JavaScript &lt;code&gt;script&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8bad284717417a9939835167bd83a93fb9ec2309" translate="yes" xml:space="preserve">
          <source>This function changes the contents of the full keymap &lt;var&gt;keymap&lt;/var&gt; by remapping &lt;code&gt;self-insert-command&lt;/code&gt; to the command &lt;code&gt;undefined&lt;/code&gt; (see &lt;a href=&quot;remapping-commands#Remapping-Commands&quot;&gt;Remapping Commands&lt;/a&gt;). This has the effect of undefining all printing characters, thus making ordinary insertion of text impossible. &lt;code&gt;suppress-keymap&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此函数通过将 &lt;code&gt;self-insert-command&lt;/code&gt; 重新映射为 &lt;code&gt;undefined&lt;/code&gt; 命令来更改完整keymap &lt;var&gt;keymap&lt;/var&gt; 的内容（请参阅&lt;a href=&quot;remapping-commands#Remapping-Commands&quot;&gt;Remapping Commands&lt;/a&gt;）。这具有取消定义所有打印字符的效果，因此无法正常插入文本。 &lt;code&gt;suppress-keymap&lt;/code&gt; 返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="36f2fbb5685a5ae009ff2b89267c15f544b6a5af" translate="yes" xml:space="preserve">
          <source>This function changes the finalizer of the &lt;code&gt;user-ptr&lt;/code&gt; object represented by &lt;var&gt;val&lt;/var&gt; to be &lt;var&gt;fin&lt;/var&gt;. If &lt;var&gt;fin&lt;/var&gt; is a &lt;code&gt;NULL&lt;/code&gt; pointer, the &lt;code&gt;user-ptr&lt;/code&gt; object will have no finalizer.</source>
          <target state="translated">此函数将 &lt;var&gt;val&lt;/var&gt; 表示的 &lt;code&gt;user-ptr&lt;/code&gt; 对象的终结器更改为 &lt;var&gt;fin&lt;/var&gt; 。如果 &lt;var&gt;fin&lt;/var&gt; 是 &lt;code&gt;NULL&lt;/code&gt; 指针，则 &lt;code&gt;user-ptr&lt;/code&gt; 对象将没有终结器。</target>
        </trans-unit>
        <trans-unit id="3823849d7c5498e0245942dc16f153ec79790970" translate="yes" xml:space="preserve">
          <source>This function changes the tabulated list entry at point, setting &lt;var&gt;col&lt;/var&gt; to &lt;var&gt;desc&lt;/var&gt;. &lt;var&gt;col&lt;/var&gt; is the column number to change, or the name of the column to change. &lt;var&gt;desc&lt;/var&gt; is the new column descriptor, which is inserted via &lt;code&gt;tabulated-list-print-col&lt;/code&gt;.</source>
          <target state="translated">此功能在点更改列表列表条目，将 &lt;var&gt;col&lt;/var&gt; 设置为 &lt;var&gt;desc&lt;/var&gt; 。 &lt;var&gt;col&lt;/var&gt; 是要更改的列号，或要更改的列的名称。 &lt;var&gt;desc&lt;/var&gt; 是新的列描述符，它通过 &lt;code&gt;tabulated-list-print-col&lt;/code&gt; 插入。</target>
        </trans-unit>
        <trans-unit id="e3d0a9295df703f0dbef307fa6311054894421f6" translate="yes" xml:space="preserve">
          <source>This function checks the file contents against the defined file formats, and converts the file contents if appropriate and also calls the functions in the list &lt;code&gt;after-insert-file-functions&lt;/code&gt;. See &lt;a href=&quot;format-conversion#Format-Conversion&quot;&gt;Format Conversion&lt;/a&gt;. Normally, one of the functions in the &lt;code&gt;after-insert-file-functions&lt;/code&gt; list determines the coding system (see &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Coding Systems&lt;/a&gt;) used for decoding the file&amp;rsquo;s contents, including end-of-line conversion. However, if the file contains null bytes, it is by default visited without any code conversions. See &lt;a href=&quot;lisp-and-coding-systems#Lisp-and-Coding-Systems&quot;&gt;inhibit-nul-byte-detection&lt;/a&gt;.</source>
          <target state="translated">该函数根据定义的文件格式检查文件内容，并在适当时转换文件内容，并在 &lt;code&gt;after-insert-file-functions&lt;/code&gt; 列表中调用这些函数。请参阅&lt;a href=&quot;format-conversion#Format-Conversion&quot;&gt;格式转换&lt;/a&gt;。通常， &lt;code&gt;after-insert-file-functions&lt;/code&gt; 列表中的功能之一确定用于解码文件内容（包括行尾转换）的编码系统（请参阅&lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;编码系统&lt;/a&gt;）。但是，如果文件包含空字节，则默认情况下将对其进行访问而无需进行任何代码转换。请参阅&lt;a href=&quot;lisp-and-coding-systems#Lisp-and-Coding-Systems&quot;&gt;禁止字节检测&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="88a96aa2697363d8add3552b2953ddbfffec23cb" translate="yes" xml:space="preserve">
          <source>This function checks the validity of &lt;var&gt;coding-system&lt;/var&gt;. If that is valid, it returns &lt;var&gt;coding-system&lt;/var&gt;. If &lt;var&gt;coding-system&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the function return &lt;code&gt;nil&lt;/code&gt;. For any other values, it signals an error whose &lt;code&gt;error-symbol&lt;/code&gt; is &lt;code&gt;coding-system-error&lt;/code&gt; (see &lt;a href=&quot;signaling-errors#Signaling-Errors&quot;&gt;signal&lt;/a&gt;).</source>
          <target state="translated">此功能检查 &lt;var&gt;coding-system&lt;/var&gt; 的有效性。如果有效，则返回 &lt;var&gt;coding-system&lt;/var&gt; 。如果 &lt;var&gt;coding-system&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则函数返回 &lt;code&gt;nil&lt;/code&gt; 。对于任何其他值，它表示一个错误，其 &lt;code&gt;error-symbol&lt;/code&gt; 是 &lt;code&gt;coding-system-error&lt;/code&gt; （请参阅&lt;a href=&quot;signaling-errors#Signaling-Errors&quot;&gt;信号&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="ff9f73184b14d3789b4d1e6f4b8bbd07f7c61143" translate="yes" xml:space="preserve">
          <source>This function checks whether &lt;var&gt;feature&lt;/var&gt; is present in the current Emacs session (using &lt;code&gt;(featurep &lt;var&gt;feature&lt;/var&gt;)&lt;/code&gt;; see below). The argument &lt;var&gt;feature&lt;/var&gt; must be a symbol.</source>
          <target state="translated">该函数检查当前Emacs会话中是否存在 &lt;var&gt;feature&lt;/var&gt; （使用 &lt;code&gt;(featurep &lt;var&gt;feature&lt;/var&gt;)&lt;/code&gt; ；请参见下文）。参数 &lt;var&gt;feature&lt;/var&gt; 必须是符号。</target>
        </trans-unit>
        <trans-unit id="4be69b13bdf8b6481ccb7195ec5a30f577c71667" translate="yes" xml:space="preserve">
          <source>This function checks whether &lt;var&gt;sequence1&lt;/var&gt; and &lt;var&gt;sequence2&lt;/var&gt; contain the same elements, regardless of the order. If the optional argument &lt;var&gt;testfn&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it is a function of two arguments to use instead of the default &lt;code&gt;equal&lt;/code&gt;.</source>
          <target state="translated">此函数检查 &lt;var&gt;sequence1&lt;/var&gt; 和 &lt;var&gt;sequence2&lt;/var&gt; 是否包含相同的元素，而与顺序无关。如果可选参数 &lt;var&gt;testfn&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则它是两个参数的函数，而不是默认的 &lt;code&gt;equal&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4b5e3ee47fca60568dceedb79a0f4165f46dfa07" translate="yes" xml:space="preserve">
          <source>This function checks whether a window &lt;var&gt;window&lt;/var&gt; occupies the frame relative coordinates &lt;var&gt;coordinates&lt;/var&gt;, and if so, which part of the window that is. &lt;var&gt;window&lt;/var&gt; should be a live window.</source>
          <target state="translated">此函数检查窗口 &lt;var&gt;window&lt;/var&gt; 是否占据框架的相对 &lt;var&gt;coordinates&lt;/var&gt; ，如果是，则检查窗口的哪一部分。 &lt;var&gt;window&lt;/var&gt; 应该是活动窗口。</target>
        </trans-unit>
        <trans-unit id="0093114ce08d1c87de3c8bea211bd8e8e8bafd88" translate="yes" xml:space="preserve">
          <source>This function checks whether coding systems in the list &lt;code&gt;coding-system-list&lt;/code&gt; can encode all the characters in the region between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;. If all of the coding systems in the list can encode the specified text, the function returns &lt;code&gt;nil&lt;/code&gt;. If some coding systems cannot encode some of the characters, the value is an alist, each element of which has the form &lt;code&gt;(&lt;var&gt;coding-system1&lt;/var&gt; &lt;var&gt;pos1&lt;/var&gt; &lt;var&gt;pos2&lt;/var&gt; &amp;hellip;)&lt;/code&gt;, meaning that &lt;var&gt;coding-system1&lt;/var&gt; cannot encode characters at buffer positions &lt;var&gt;pos1&lt;/var&gt;, &lt;var&gt;pos2&lt;/var&gt;, &lt;small&gt;...&lt;/small&gt;.</source>
          <target state="translated">此功能检查列表 &lt;code&gt;coding-system-list&lt;/code&gt; 中的编码系统是否可以对 &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 之间的区域中的所有字符进行编码。如果列表中的所有编码系统都可以对指定的文本进行编码，则该函数返回 &lt;code&gt;nil&lt;/code&gt; 。如果某些编码系统无法对某些字符进行编码，则该值是一个列表，其每个元素均采用 &lt;code&gt;(&lt;var&gt;coding-system1&lt;/var&gt; &lt;var&gt;pos1&lt;/var&gt; &lt;var&gt;pos2&lt;/var&gt; &amp;hellip;)&lt;/code&gt; 形式，这意味着 &lt;var&gt;coding-system1&lt;/var&gt; 无法对缓冲区位置 &lt;var&gt;pos1&lt;/var&gt; ， &lt;var&gt;pos2&lt;/var&gt; ，&lt;small&gt;...&lt;/small&gt;处的字符进行编码&lt;small&gt;。 。&lt;/small&gt;。</target>
        </trans-unit>
        <trans-unit id="48bbd385883b860f0fe733726275084cca5e4045" translate="yes" xml:space="preserve">
          <source>This function chooses a plausible coding system for decoding the text from &lt;var&gt;start&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt;. This text should be a byte sequence, i.e., unibyte text or multibyte text with only</source>
          <target state="translated">该功能选择一个合理的编码系统的文本解码从 &lt;var&gt;start&lt;/var&gt; 到 &lt;var&gt;end&lt;/var&gt; 。此文本应为字节序列，即单字节文本或多字节文本，仅包含</target>
        </trans-unit>
        <trans-unit id="e92dd05af078b7c6619479f99c6915105c13d04f" translate="yes" xml:space="preserve">
          <source>This function clears all tags from the padding area in the current buffer.</source>
          <target state="translated">该函数清除当前缓冲区中所有标签的填充区域。</target>
        </trans-unit>
        <trans-unit id="e08d77ace26a1da1b72f8e270ea9c88fc75a7c86" translate="yes" xml:space="preserve">
          <source>This function clears an image cache, removing all the images stored in it. If &lt;var&gt;filter&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it clears the cache for the selected frame. If &lt;var&gt;filter&lt;/var&gt; is a frame, it clears the cache for that frame. If &lt;var&gt;filter&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, all image caches are cleared. Otherwise, &lt;var&gt;filter&lt;/var&gt; is taken to be a file name, and all images associated with that file name are removed from all image caches.</source>
          <target state="translated">此功能清除图像缓存，删除其中存储的所有图像。如果 &lt;var&gt;filter&lt;/var&gt; 省略或为 &lt;code&gt;nil&lt;/code&gt; ，则清除所选帧的缓存。如果 &lt;var&gt;filter&lt;/var&gt; 是一帧，它将清除该帧的缓存。如果 &lt;var&gt;filter&lt;/var&gt; 为 &lt;code&gt;t&lt;/code&gt; ，则清除所有图像缓存。否则，将 &lt;var&gt;filter&lt;/var&gt; 作为文件名，并从所有图像缓存中删除与该文件名关联的所有图像。</target>
        </trans-unit>
        <trans-unit id="0bb1988a1dba8506377b988fafd01a77998e3685" translate="yes" xml:space="preserve">
          <source>This function clears and redisplays all visible frames.</source>
          <target state="translated">此功能可清除并重新显示所有可见的框架。</target>
        </trans-unit>
        <trans-unit id="00c956077128ca0993717eb23d4d9f5416719f6b" translate="yes" xml:space="preserve">
          <source>This function clears and redisplays frame &lt;var&gt;frame&lt;/var&gt;. If &lt;var&gt;frame&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it redraws the selected frame.</source>
          <target state="translated">此功能清除并重新显示 &lt;var&gt;frame&lt;/var&gt; 。如果省略 &lt;var&gt;frame&lt;/var&gt; 或 &lt;code&gt;nil&lt;/code&gt; ，它将重新绘制所选的框架。</target>
        </trans-unit>
        <trans-unit id="bee3cb583a7c59bb273547bda2f8cbc5a79c8229" translate="yes" xml:space="preserve">
          <source>This function clears out the record of the last modification time of the file being visited by the current buffer. As a result, the next attempt to save this buffer will not complain of a discrepancy in file modification times.</source>
          <target state="translated">这个功能清除了当前缓冲区所访问的文件的最后修改时间的记录,因此,下一次尝试保存这个缓冲区时,不会抱怨文件修改时间的差异。因此,下一次尝试保存这个缓冲区时,不会抱怨文件修改时间不一致。</target>
        </trans-unit>
        <trans-unit id="3060a69479b02be0e975b9582949ab1ac97d85c1" translate="yes" xml:space="preserve">
          <source>This function clears the pending nonlocal exit conditions and data from &lt;var&gt;env&lt;/var&gt;. After calling it, the module</source>
          <target state="translated">此函数从 &lt;var&gt;env&lt;/var&gt; 清除挂起的非本地退出条件和数据。调用后，模块</target>
        </trans-unit>
        <trans-unit id="8f7e5427bf38884b44e2e51ab2819c587f2b4009" translate="yes" xml:space="preserve">
          <source>This function clears the table of defined colors for a text terminal.</source>
          <target state="translated">该函数清除文本终端的定义颜色表。</target>
        </trans-unit>
        <trans-unit id="5c32281f9d21be19333ed3ff71d217ace70d4a19" translate="yes" xml:space="preserve">
          <source>This function closes a notification with identifier &lt;var&gt;id&lt;/var&gt;. &lt;var&gt;bus&lt;/var&gt; can be a string denoting a D-Bus connection, the default is &lt;code&gt;:session&lt;/code&gt;.</source>
          <target state="translated">此函数关闭标识符为 &lt;var&gt;id&lt;/var&gt; 的通知。 &lt;var&gt;bus&lt;/var&gt; 可以是表示D-Bus连接的字符串，默认值为 &lt;code&gt;:session&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9a745e063d28aa86713ef30ab5d0016b27d3e4da" translate="yes" xml:space="preserve">
          <source>This function closes the connection to display &lt;var&gt;display&lt;/var&gt;. Before you can do this, you must first delete all the frames that were open on that display (see &lt;a href=&quot;deleting-frames#Deleting-Frames&quot;&gt;Deleting Frames&lt;/a&gt;).</source>
          <target state="translated">该功能关闭，以显示连接 &lt;var&gt;display&lt;/var&gt; 。在执行此操作之前，必须首先删除该显示器上打开的所有框架（请参阅&amp;ldquo;&lt;a href=&quot;deleting-frames#Deleting-Frames&quot;&gt;删除框架&amp;rdquo;&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="3e0b6d0d98bf0d18b76cb8c96931febc86eb0283" translate="yes" xml:space="preserve">
          <source>This function collects applicable connection-local variables associated with &lt;var&gt;criteria&lt;/var&gt; in &lt;code&gt;connection-local-variables-alist&lt;/code&gt;, without applying them. Example:</source>
          <target state="translated">此功能收集与相关应用连接的局部变量 &lt;var&gt;criteria&lt;/var&gt; 在 &lt;code&gt;connection-local-variables-alist&lt;/code&gt; ，而不应用它们。例：</target>
        </trans-unit>
        <trans-unit id="a5f2cbb8b2da3d3c58cb447a71d60b0917ba7a4b" translate="yes" xml:space="preserve">
          <source>This function compares a specified part of &lt;var&gt;string1&lt;/var&gt; with a specified part of &lt;var&gt;string2&lt;/var&gt;. The specified part of &lt;var&gt;string1&lt;/var&gt; runs from index &lt;var&gt;start1&lt;/var&gt; (inclusive) up to index &lt;var&gt;end1&lt;/var&gt; (exclusive); &lt;code&gt;nil&lt;/code&gt; for &lt;var&gt;start1&lt;/var&gt; means the start of the string, while &lt;code&gt;nil&lt;/code&gt; for &lt;var&gt;end1&lt;/var&gt; means the length of the string. Likewise, the specified part of &lt;var&gt;string2&lt;/var&gt; runs from index &lt;var&gt;start2&lt;/var&gt; up to index &lt;var&gt;end2&lt;/var&gt;.</source>
          <target state="translated">此函数将 &lt;var&gt;string1&lt;/var&gt; 的指定部分与 &lt;var&gt;string2&lt;/var&gt; 的指定部分进行比较。 &lt;var&gt;string1&lt;/var&gt; &lt;var&gt;start1&lt;/var&gt; 的指定部分从索引start1（含）开始到索引 &lt;var&gt;end1&lt;/var&gt; （不含）； &lt;code&gt;nil&lt;/code&gt; 为 &lt;var&gt;start1&lt;/var&gt; 装置中的字符串的开头，而 &lt;code&gt;nil&lt;/code&gt; 为 &lt;var&gt;end1&lt;/var&gt; 装置字符串的长度。同样， &lt;var&gt;string2&lt;/var&gt; 的指定部分从索引 &lt;var&gt;start2&lt;/var&gt; 一直到索引 &lt;var&gt;end2&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="a9aef49fc24cfd15fd641dc26e422b78872aaf3e" translate="yes" xml:space="preserve">
          <source>This function compares strings lexicographically, except it treats sequences of numerical characters as if they comprised a base-ten number, and then compares the numbers. So &amp;lsquo;</source>
          <target state="translated">此函数按字典顺序比较字符串，除了它将数字字符序列视为包含十进制数的数字，然后比较数字。所以</target>
        </trans-unit>
        <trans-unit id="9034e147ae2fe7be500b89dffbb10f53c4559803" translate="yes" xml:space="preserve">
          <source>This function compares two strings a character at a time. It scans both the strings at the same time to find the first pair of corresponding characters that do not match. If the lesser character of these two is the character from &lt;var&gt;string1&lt;/var&gt;, then &lt;var&gt;string1&lt;/var&gt; is less, and this function returns &lt;code&gt;t&lt;/code&gt;. If the lesser character is the one from &lt;var&gt;string2&lt;/var&gt;, then &lt;var&gt;string1&lt;/var&gt; is greater, and this function returns &lt;code&gt;nil&lt;/code&gt;. If the two strings match entirely, the value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此功能一次比较两个字符串一个字符。它同时扫描两个字符串，以查找第一对不匹配的对应字符。如果这两个的较小字符是 &lt;var&gt;string1&lt;/var&gt; 中的字符，则 &lt;var&gt;string1&lt;/var&gt; 较小，并且此函数返回 &lt;code&gt;t&lt;/code&gt; 。如果较小的字符是 &lt;var&gt;string2&lt;/var&gt; 中的那个，则 &lt;var&gt;string1&lt;/var&gt; 较大，并且此函数返回 &lt;code&gt;nil&lt;/code&gt; 。如果两个字符串完全匹配，则值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8c2f9fdbef44b9334df7df941797433fe0a9f929" translate="yes" xml:space="preserve">
          <source>This function compares two window configurations as regards the structure of windows, but ignores the values of point and the saved scrolling positions&amp;mdash;it can return &lt;code&gt;t&lt;/code&gt; even if those aspects differ.</source>
          <target state="translated">此函数比较两个窗口在窗口结构方面的配置，但是忽略point和保存的滚动位置的值-即使这些方面不同，它也可以返回 &lt;code&gt;t&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5ec97384413e26b14db3042cb150998e759231c6" translate="yes" xml:space="preserve">
          <source>This function compares what &lt;var&gt;buffer&lt;/var&gt; (by default, the current-buffer) has recorded for the modification time of its visited file against the actual modification time of the file as recorded by the operating system. The two should be the same unless some other process has written the file since Emacs visited or saved it.</source>
          <target state="translated">此函数将为访问文件的修改时间记录的 &lt;var&gt;buffer&lt;/var&gt; （默认情况下为当前缓冲区）与操作系统记录的文件的实际修改时间进行比较。除非自Emacs访问或保存文件以来，其他过程已写入文件，否则两者应相同。</target>
        </trans-unit>
        <trans-unit id="c83d94c6b4aed094cff30137ca18eeb913c13ac9" translate="yes" xml:space="preserve">
          <source>This function compiles a file of Lisp code named &lt;var&gt;filename&lt;/var&gt; into a file of byte-code. The output file&amp;rsquo;s name is made by changing the &amp;lsquo;</source>
          <target state="translated">此函数将名为 &lt;var&gt;filename&lt;/var&gt; 的Lisp代码文件编译为字节代码文件。输出文件的名称是通过更改&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="9ff26f5c877255414616a98408a7c2311408a1aa" translate="yes" xml:space="preserve">
          <source>This function completely replaces the text property list for the text between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; in the string or buffer &lt;var&gt;object&lt;/var&gt;. If &lt;var&gt;object&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it defaults to the current buffer.</source>
          <target state="translated">此函数完全替换字符串或缓冲区 &lt;var&gt;object&lt;/var&gt; &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 之间的文本的文本属性列表。如果 &lt;var&gt;object&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则默认为当前缓冲区。</target>
        </trans-unit>
        <trans-unit id="96e5dd8c088a37e664134a9b6d1058179d2a41ee" translate="yes" xml:space="preserve">
          <source>This function completes the file name &lt;var&gt;filename&lt;/var&gt; in directory &lt;var&gt;directory&lt;/var&gt;. It returns the longest prefix common to all file names in directory &lt;var&gt;directory&lt;/var&gt; that start with &lt;var&gt;filename&lt;/var&gt;. If &lt;var&gt;predicate&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; then it ignores possible completions that don&amp;rsquo;t satisfy &lt;var&gt;predicate&lt;/var&gt;, after calling that function with one argument, the expanded absolute file name.</source>
          <target state="translated">此功能完成目录 &lt;var&gt;directory&lt;/var&gt; 中的文件名 &lt;var&gt;filename&lt;/var&gt; 。它返回 &lt;var&gt;directory&lt;/var&gt; 中以 &lt;var&gt;filename&lt;/var&gt; 开头的所有文件名共有的最长前缀。如果 &lt;var&gt;predicate&lt;/var&gt; 是不 &lt;code&gt;nil&lt;/code&gt; 则忽略不满足可能的补全 &lt;var&gt;predicate&lt;/var&gt; ，调用该函数有一个参数，扩展的绝对文件名之后。</target>
        </trans-unit>
        <trans-unit id="89697381d81d2b533d98ac549ea2fac24cad4a9b" translate="yes" xml:space="preserve">
          <source>This function completes the minibuffer contents as far as possible.</source>
          <target state="translated">该函数尽可能地完成minibuffer的内容。</target>
        </trans-unit>
        <trans-unit id="f65e2c60aa526439854986136550b909686ed2ea" translate="yes" xml:space="preserve">
          <source>This function completes the minibuffer contents by at most a single word. Even if the minibuffer contents have only one completion, &lt;code&gt;minibuffer-complete-word&lt;/code&gt; does not add any characters beyond the first character that is not a word constituent. See &lt;a href=&quot;syntax-tables#Syntax-Tables&quot;&gt;Syntax Tables&lt;/a&gt;.</source>
          <target state="translated">此功能最多用一个单词完成微型缓冲区的内容。即使minibuffer内容只有一个补 &lt;code&gt;minibuffer-complete-word&lt;/code&gt; ，minibuffer-complete-word也不会在第一个字符以外的字符之外添加任何字符。请参阅&lt;a href=&quot;syntax-tables#Syntax-Tables&quot;&gt;语法表&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e5f99a4ea128fe021c030d5d486d31c0bc6723d4" translate="yes" xml:space="preserve">
          <source>This function completes the minibuffer contents, and exits if confirmation is not required, i.e., if &lt;code&gt;minibuffer-completion-confirm&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;. If confirmation &lt;em&gt;is&lt;/em&gt; required, it is given by repeating this command immediately&amp;mdash;the command is programmed to work without confirmation when run twice in succession.</source>
          <target state="translated">此函数完成迷你缓冲区的内容，如果不需要确认，即 &lt;code&gt;minibuffer-completion-confirm&lt;/code&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则退出。如果确认&lt;em&gt;是&lt;/em&gt;必需的，它是通过连续运行两次时，重复此命令立即-命令编程工作没有给予确认。</target>
        </trans-unit>
        <trans-unit id="b2a58d63f1c49b5bc24866684235f7841db04eba" translate="yes" xml:space="preserve">
          <source>This function completes the text in the current buffer between the positions &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;, using &lt;var&gt;collection&lt;/var&gt;. The argument &lt;var&gt;collection&lt;/var&gt; has the same meaning as in &lt;code&gt;try-completion&lt;/code&gt; (see &lt;a href=&quot;basic-completion#Basic-Completion&quot;&gt;Basic Completion&lt;/a&gt;).</source>
          <target state="translated">此函数使用 &lt;var&gt;collection&lt;/var&gt; 完成当前缓冲区中位置 &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 之间的文本。参数 &lt;var&gt;collection&lt;/var&gt; 的含义与 &lt;code&gt;try-completion&lt;/code&gt; 中的含义相同（请参见&lt;a href=&quot;basic-completion#Basic-Completion&quot;&gt;Basic Completion&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="0d1a5a3778131495c3c5ca116a07f78182f8f709" translate="yes" xml:space="preserve">
          <source>This function computes and sets &lt;code&gt;header-line-format&lt;/code&gt; for the Tabulated List buffer (see &lt;a href=&quot;header-lines#Header-Lines&quot;&gt;Header Lines&lt;/a&gt;), and assigns a keymap to the header line to allow sorting entries by clicking on column headers.</source>
          <target state="translated">此函数计算并设置列表列表缓冲区的&lt;a href=&quot;header-lines#Header-Lines&quot;&gt;标题行&lt;/a&gt; &lt;code&gt;header-line-format&lt;/code&gt; （请参见标题行），并为标题行分配一个键映射，以允许通过单击列标题来对条目进行排序。</target>
        </trans-unit>
        <trans-unit id="78c2d01ec980279b7b58d31009ca74eb586b1822" translate="yes" xml:space="preserve">
          <source>This function computes the file name for a new backup file for &lt;var&gt;filename&lt;/var&gt;. It may also propose certain existing backup files for deletion. &lt;code&gt;find-backup-file-name&lt;/code&gt; returns a list whose &lt;small&gt;CAR&lt;/small&gt; is the name for the new backup file and whose &lt;small&gt;CDR&lt;/small&gt; is a list of backup files whose deletion is proposed. The value can also be &lt;code&gt;nil&lt;/code&gt;, which means not to make a backup.</source>
          <target state="translated">此函数为 &lt;var&gt;filename&lt;/var&gt; 的新备份文件计算文件名。它还可能会建议删除某些现有的备份文件。 &lt;code&gt;find-backup-file-name&lt;/code&gt; 返回一个列表，该列表的&lt;small&gt;CAR&lt;/small&gt;是新备份文件的名称，而&lt;small&gt;CDR&lt;/small&gt;是建议删除的备份文件的列表。该值也可以为 &lt;code&gt;nil&lt;/code&gt; ，这意味着不进行备份。</target>
        </trans-unit>
        <trans-unit id="15cfed84063ac5b06746e9180517a26ec66a11a3" translate="yes" xml:space="preserve">
          <source>This function concatenates &lt;var&gt;list-of-strings&lt;/var&gt; into a single string, quoting each string as necessary. It also sticks the &lt;var&gt;separator&lt;/var&gt; string between each pair of strings; if &lt;var&gt;separator&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to &lt;code&gt;&quot; &quot;&lt;/code&gt;. The return value is the resulting string.</source>
          <target state="translated">此函数将字符串 &lt;var&gt;list-of-strings&lt;/var&gt; 串联为单个字符串，并根据需要引用每个字符串。它还将 &lt;var&gt;separator&lt;/var&gt; 字符串粘贴在每对字符串之间。如果 &lt;var&gt;separator&lt;/var&gt; 被省略或 &lt;code&gt;nil&lt;/code&gt; ，则默认为 &lt;code&gt;&quot; &quot;&lt;/code&gt; 。返回值是结果字符串。</target>
        </trans-unit>
        <trans-unit id="9fd9b3f2732fc488731684e8b7a04dcea87dd0c7" translate="yes" xml:space="preserve">
          <source>This function concatenates all its argument &lt;var&gt;bytes&lt;/var&gt; and makes the result a unibyte string.</source>
          <target state="translated">此函数连接其所有参数 &lt;var&gt;bytes&lt;/var&gt; ，并使结果成为单字节字符串。</target>
        </trans-unit>
        <trans-unit id="0f609cc62af27e58ae79537191c5454848740175" translate="yes" xml:space="preserve">
          <source>This function configures a serial port connection. Arguments are specified as keyword/argument pairs. Attributes that are not given are re-initialized from the process&amp;rsquo;s current configuration (available via the function &lt;code&gt;process-contact&lt;/code&gt;), or set to reasonable default values. The following arguments are defined:</source>
          <target state="translated">此功能配置串行端口连接。参数被指定为关键字/参数对。未指定的属性会从流程的当前配置（可通过 &lt;code&gt;process-contact&lt;/code&gt; 函数获得）中重新初始化，或设置为合理的默认值。定义了以下参数：</target>
        </trans-unit>
        <trans-unit id="ae1aa50ca602dad0456661afa9b0b54a5f48f045" translate="yes" xml:space="preserve">
          <source>This function considers only vertical scrolling. If &lt;var&gt;position&lt;/var&gt; is out of view only because &lt;var&gt;window&lt;/var&gt; has been scrolled horizontally, &lt;code&gt;pos-visible-in-window-p&lt;/code&gt; returns non-&lt;code&gt;nil&lt;/code&gt; anyway. See &lt;a href=&quot;horizontal-scrolling#Horizontal-Scrolling&quot;&gt;Horizontal Scrolling&lt;/a&gt;.</source>
          <target state="translated">此功能仅考虑垂直滚动。如果仅由于 &lt;var&gt;window&lt;/var&gt; 已水平滚动而无法看到 &lt;var&gt;position&lt;/var&gt; ，则 &lt;code&gt;pos-visible-in-window-p&lt;/code&gt; 无论如何都将返回 &lt;code&gt;nil&lt;/code&gt; 。请参阅&lt;a href=&quot;horizontal-scrolling#Horizontal-Scrolling&quot;&gt;水平滚动&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cde355012f0c4eafa46f2543db211450f70a05d3" translate="yes" xml:space="preserve">
          <source>This function constrains &lt;var&gt;new-pos&lt;/var&gt; to the field that &lt;var&gt;old-pos&lt;/var&gt; belongs to&amp;mdash;in other words, it returns the position closest to &lt;var&gt;new-pos&lt;/var&gt; that is in the same field as &lt;var&gt;old-pos&lt;/var&gt;.</source>
          <target state="translated">此函数将 &lt;var&gt;new-pos&lt;/var&gt; 限制在 &lt;var&gt;old-pos&lt;/var&gt; 所属的字段中，换句话说，它返回与 &lt;var&gt;old-pos&lt;/var&gt; 相同字段中最接近 &lt;var&gt;new-pos&lt;/var&gt; 的位置。</target>
        </trans-unit>
        <trans-unit id="c035e2921cfe0f74be7de8b7fe58236fd3e77fcf" translate="yes" xml:space="preserve">
          <source>This function constructs a copy of &lt;var&gt;table&lt;/var&gt; and returns it. If &lt;var&gt;table&lt;/var&gt; is not supplied (or is &lt;code&gt;nil&lt;/code&gt;), it returns a copy of the standard category table. Otherwise, an error is signaled if &lt;var&gt;table&lt;/var&gt; is not a category table.</source>
          <target state="translated">此函数构造 &lt;var&gt;table&lt;/var&gt; 的副本并返回它。如果未提供 &lt;var&gt;table&lt;/var&gt; （或为 &lt;code&gt;nil&lt;/code&gt; ），则返回标准类别表的副本。否则，如果 &lt;var&gt;table&lt;/var&gt; 不是类别表，则会发出错误信号。</target>
        </trans-unit>
        <trans-unit id="7f85e738f572dd42f45a76a6fb1310f9fd67cd0e" translate="yes" xml:space="preserve">
          <source>This function constructs a copy of &lt;var&gt;table&lt;/var&gt; and returns it. If &lt;var&gt;table&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it returns a copy of the standard syntax table. Otherwise, an error is signaled if &lt;var&gt;table&lt;/var&gt; is not a syntax table.</source>
          <target state="translated">此函数构造 &lt;var&gt;table&lt;/var&gt; 的副本并返回它。如果 &lt;var&gt;table&lt;/var&gt; 被省略或为 &lt;code&gt;nil&lt;/code&gt; ，则返回标准语法表的副本。否则，如果 &lt;var&gt;table&lt;/var&gt; 不是语法表，则会发出错误信号。</target>
        </trans-unit>
        <trans-unit id="b4c244f7aa08244e0deec64e00a96009dfa82c42" translate="yes" xml:space="preserve">
          <source>This function constructs and returns a byte-code function object with &lt;var&gt;elements&lt;/var&gt; as its elements.</source>
          <target state="translated">该函数构造并返回一个以 &lt;var&gt;elements&lt;/var&gt; 为元素的字节码函数对象。</target>
        </trans-unit>
        <trans-unit id="874c9d04892ed512e0cb9599abc452937e886429" translate="yes" xml:space="preserve">
          <source>This function converts &lt;var&gt;filename&lt;/var&gt; to an absolute file name. If &lt;var&gt;directory&lt;/var&gt; is supplied, it is the default directory to start with if &lt;var&gt;filename&lt;/var&gt; is relative and does not start with &amp;lsquo;</source>
          <target state="translated">此函数将 &lt;var&gt;filename&lt;/var&gt; 转换为绝对文件名。如果提供了 &lt;var&gt;directory&lt;/var&gt; ，则它是默认目录（如果 &lt;var&gt;filename&lt;/var&gt; 是相对文件名而不是以'。开头）</target>
        </trans-unit>
        <trans-unit id="c6f04cb2dcd8552a3a5f7e94e0e1f5fad1b2ccf9" translate="yes" xml:space="preserve">
          <source>This function converts &lt;var&gt;string-or-char&lt;/var&gt;, which should be either a character or a string, to lower case.</source>
          <target state="translated">此函数将应为字符或字符串的 &lt;var&gt;string-or-char&lt;/var&gt; 转换为小写。</target>
        </trans-unit>
        <trans-unit id="0f989624fd0c758de426f10a05d50246e948f9a2" translate="yes" xml:space="preserve">
          <source>This function converts &lt;var&gt;string-or-char&lt;/var&gt;, which should be either a character or a string, to upper case.</source>
          <target state="translated">此函数将应为字符或字符串的 &lt;var&gt;string-or-char&lt;/var&gt; 转换为大写。</target>
        </trans-unit>
        <trans-unit id="08deea44cd6426f83ec6d17a664425ce999fa824" translate="yes" xml:space="preserve">
          <source>This function converts &lt;var&gt;time&lt;/var&gt; (or the current time, if &lt;var&gt;time&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;) to a string according to &lt;var&gt;format-string&lt;/var&gt;. The conversion uses the time zone rule &lt;var&gt;zone&lt;/var&gt;, which defaults to the current time zone rule. See &lt;a href=&quot;time-zone-rules#Time-Zone-Rules&quot;&gt;Time Zone Rules&lt;/a&gt;. The argument &lt;var&gt;format-string&lt;/var&gt; may contain &amp;lsquo;</source>
          <target state="translated">此函数根据 &lt;var&gt;format-string&lt;/var&gt; 将 &lt;var&gt;time&lt;/var&gt; （或当前时间，如果省略 &lt;var&gt;time&lt;/var&gt; 或 &lt;code&gt;nil&lt;/code&gt; ）转换为字符串。转换使用时区规则 &lt;var&gt;zone&lt;/var&gt; ，默认为当前时区规则。请参阅&lt;a href=&quot;time-zone-rules#Time-Zone-Rules&quot;&gt;时区规则&lt;/a&gt;。参数 &lt;var&gt;format-string&lt;/var&gt; 可以包含'</target>
        </trans-unit>
        <trans-unit id="af54ecd47221b1061345a45468c6a95ba1e4a90a" translate="yes" xml:space="preserve">
          <source>This function converts &lt;var&gt;time&lt;/var&gt; to a Lisp timestamp. It can act as the inverse of &lt;code&gt;decode-time&lt;/code&gt;.</source>
          <target state="translated">此函数将 &lt;var&gt;time&lt;/var&gt; 转换为Lisp时间戳。它可以作为 &lt;code&gt;decode-time&lt;/code&gt; 的倒数。</target>
        </trans-unit>
        <trans-unit id="9556989e13e1c87dd87a2475ba3e7fcedc6ef511" translate="yes" xml:space="preserve">
          <source>This function converts &lt;var&gt;window&lt;/var&gt; into an atomic window. The specified &lt;var&gt;window&lt;/var&gt; must be an internal window. All this function does is to set the &lt;code&gt;window-atom&lt;/code&gt; parameter of each descendant of &lt;var&gt;window&lt;/var&gt; to &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">此函数将 &lt;var&gt;window&lt;/var&gt; 转换为原子窗口。指定的 &lt;var&gt;window&lt;/var&gt; 必须是内部窗口。所有这个函数是设置 &lt;code&gt;window-atom&lt;/code&gt; 的各后代的参数 &lt;var&gt;window&lt;/var&gt; 到 &lt;code&gt;t&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4394d3a4e8f2f4b04cb0e1e7a5b3b08994faeb8e" translate="yes" xml:space="preserve">
          <source>This function converts a byte of character data into a unibyte string. See &lt;a href=&quot;converting-representations#Converting-Representations&quot;&gt;Converting Representations&lt;/a&gt;.</source>
          <target state="translated">此函数将字符数据的一个字节转换为一个单字节字符串。请参见&lt;a href=&quot;converting-representations#Converting-Representations&quot;&gt;转换制图表达&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e992f1f964d96bc49a9789e01d65667cbdb109b6" translate="yes" xml:space="preserve">
          <source>This function converts a list of modifier names and a basic event type to an event type which specifies all of them. The basic event type must be the last element of the list. For example,</source>
          <target state="translated">该函数将修饰符名称和基本事件类型的列表转换为指定所有修饰符的事件类型。基本事件类型必须是列表的最后一个元素。例如</target>
        </trans-unit>
        <trans-unit id="fa293dfea4e94d45e0f4b45c62d0d21f401f60f1" translate="yes" xml:space="preserve">
          <source>This function converts a string into a list. See &lt;a href=&quot;building-lists#Building-Lists&quot;&gt;Building Lists&lt;/a&gt;.</source>
          <target state="translated">此函数将字符串转换为列表。请参阅&lt;a href=&quot;building-lists#Building-Lists&quot;&gt;建筑清单&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ba7cf90ea9020c057e351af979b4627a28943977" translate="yes" xml:space="preserve">
          <source>This function converts a string into a vector. See &lt;a href=&quot;vector-functions#Vector-Functions&quot;&gt;Vector Functions&lt;/a&gt;.</source>
          <target state="translated">此函数将字符串转换为向量。请参见&lt;a href=&quot;vector-functions#Vector-Functions&quot;&gt;向量函数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="de39ac156148bc00d8eba5104462a121e553a0c8" translate="yes" xml:space="preserve">
          <source>This function converts a symbolic file mode specification in &lt;var&gt;modes&lt;/var&gt; into the equivalent integer. If the symbolic specification is based on an existing file, that file&amp;rsquo;s mode bits are taken from the optional argument &lt;var&gt;base-modes&lt;/var&gt;; if that argument is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to 0, i.e., no access rights at all.</source>
          <target state="translated">该函数将在一个符号文件模式指定 &lt;var&gt;modes&lt;/var&gt; 转换为等效的整数。如果符号规范基于现有文件，则该文件的模式位取自可选参数 &lt;var&gt;base-modes&lt;/var&gt; ；如果忽略该参数或 &lt;code&gt;nil&lt;/code&gt; ，则默认为0，即完全没有访问权限。</target>
        </trans-unit>
        <trans-unit id="d030cf650429694dcbd23523e917ca3d9b38b644" translate="yes" xml:space="preserve">
          <source>This function converts a time value into a Lisp timestamp.</source>
          <target state="translated">该函数将一个时间值转换为Lisp时间戳。</target>
        </trans-unit>
        <trans-unit id="b42ea5d4ccf2ef27bcafdca8857b96e0ec80b9ba" translate="yes" xml:space="preserve">
          <source>This function converts a time value into calendrical information. If you don&amp;rsquo;t specify &lt;var&gt;time&lt;/var&gt;, it decodes the current time, and similarly &lt;var&gt;zone&lt;/var&gt; defaults to the current time zone rule. See &lt;a href=&quot;time-zone-rules#Time-Zone-Rules&quot;&gt;Time Zone Rules&lt;/a&gt;. The operating system limits the range of time and zone values.</source>
          <target state="translated">此功能将时间值转换为日历信息。如果您未指定 &lt;var&gt;time&lt;/var&gt; ，它将解码当前时间，同样， &lt;var&gt;zone&lt;/var&gt; 默认为当前时区规则。请参阅&lt;a href=&quot;time-zone-rules#Time-Zone-Rules&quot;&gt;时区规则&lt;/a&gt;。操作系统限制时间和区域值的范围。</target>
        </trans-unit>
        <trans-unit id="2f969c70e3311439ebe20fadc0eaec66bb09a12b" translate="yes" xml:space="preserve">
          <source>This function converts a vector or a list into a string. See &lt;a href=&quot;creating-strings#Creating-Strings&quot;&gt;Creating Strings&lt;/a&gt;.</source>
          <target state="translated">此函数将向量或列表转换为字符串。请参阅&lt;a href=&quot;creating-strings#Creating-Strings&quot;&gt;创建字符串&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3e6336c33752f31d6b7b5c1c515a347a8aa0a924" translate="yes" xml:space="preserve">
          <source>This function converts all of the letters in the region defined by &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; to lower case. The function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此函数将由 &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 定义的区域中的所有字母都转换为小写。该函数返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a9a4398a0eb5df16a14bbdabef0a9c25aa4c8dca" translate="yes" xml:space="preserve">
          <source>This function converts all of the letters in the region defined by &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; to upper case. The function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此函数将由 &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 定义的区域中的所有字母都转换为大写。该函数返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e8e8fdf0444ef662f70cfc701373fe0e12fe9b20" translate="yes" xml:space="preserve">
          <source>This function converts its argument &lt;var&gt;seconds&lt;/var&gt; into a string of years, days, hours, etc., according to &lt;var&gt;format-string&lt;/var&gt;. The argument &lt;var&gt;format-string&lt;/var&gt; may contain &amp;lsquo;</source>
          <target state="translated">此函数根据 &lt;var&gt;format-string&lt;/var&gt; ，将其参数 &lt;var&gt;seconds&lt;/var&gt; 转换为年份，天数，小时数等字符串。参数 &lt;var&gt;format-string&lt;/var&gt; 可以包含'</target>
        </trans-unit>
        <trans-unit id="86a9053d2989039c47d4dcf75a4f96fffa040ae3" translate="yes" xml:space="preserve">
          <source>This function converts the &lt;var&gt;count&lt;/var&gt; words after point to all lower case, moving point over as it does. If &lt;var&gt;count&lt;/var&gt; is negative, it converts the -&lt;var&gt;count&lt;/var&gt; previous words but does not move point. The value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">该功能将点后的 &lt;var&gt;count&lt;/var&gt; 转换为所有小写字母，并以此将点移到上方。如果 &lt;var&gt;count&lt;/var&gt; 为负，它将转换 &lt;var&gt;count&lt;/var&gt; 前一个单词，但不移动点。该值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cac8af14fb95a5540d55eb853b73fc1a4069ee83" translate="yes" xml:space="preserve">
          <source>This function converts the &lt;var&gt;count&lt;/var&gt; words after point to all upper case, moving point over as it does. If &lt;var&gt;count&lt;/var&gt; is negative, it converts the -&lt;var&gt;count&lt;/var&gt; previous words but does not move point. The value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此功能将点后的 &lt;var&gt;count&lt;/var&gt; 转换为所有大写字母，并以此移动点。如果 &lt;var&gt;count&lt;/var&gt; 为负，它将转换 &lt;var&gt;count&lt;/var&gt; 前一个单词，但不移动点。该值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="062f3332d58edfbeada8443df59348c0b2e03c21" translate="yes" xml:space="preserve">
          <source>This function converts the Lisp representation of a network address to a string.</source>
          <target state="translated">该函数将Lisp表示的网络地址转换为字符串。</target>
        </trans-unit>
        <trans-unit id="359414babccfce31742287145cb81207c3f0a60a" translate="yes" xml:space="preserve">
          <source>This function converts the category set &lt;var&gt;category-set&lt;/var&gt; into a string containing the characters that designate the categories that are members of the set.</source>
          <target state="translated">此函数将类别集 &lt;var&gt;category-set&lt;/var&gt; 转换为一个字符串，该字符串包含指定属于该集合成员的类别的字符。</target>
        </trans-unit>
        <trans-unit id="222c0635402e22f63d2e19252b80a4006a515fdf" translate="yes" xml:space="preserve">
          <source>This function converts the region from &lt;var&gt;beg&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt; from base 64 code into the corresponding decoded text. It returns the length of the decoded text.</source>
          <target state="translated">此功能将基本区域代码从 &lt;var&gt;beg&lt;/var&gt; 到 &lt;var&gt;end&lt;/var&gt; 的区域转换为相应的解码文本。它返回解码文本的长度。</target>
        </trans-unit>
        <trans-unit id="c5d4159748c6f5ed11333f8afa2f8e02a7c10cee" translate="yes" xml:space="preserve">
          <source>This function converts the region from &lt;var&gt;beg&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt; into base 64 code. It returns the length of the encoded text. An error is signaled if a character in the region is multibyte, i.e., in a multibyte buffer the region must contain only characters from the charsets &lt;code&gt;ascii&lt;/code&gt;, &lt;code&gt;eight-bit-control&lt;/code&gt; and &lt;code&gt;eight-bit-graphic&lt;/code&gt;.</source>
          <target state="translated">此函数将区域从 &lt;var&gt;beg&lt;/var&gt; 转换为 &lt;var&gt;end&lt;/var&gt; 至base 64代码。它返回编码文本的长度。如果该区域中的字符是多字节的，则会发出错误信号，即，在多字节缓冲区中，该区域必须仅包含字符集 &lt;code&gt;ascii&lt;/code&gt; ， &lt;code&gt;eight-bit-control&lt;/code&gt; 和 &lt;code&gt;eight-bit-graphic&lt;/code&gt; 的字符。</target>
        </trans-unit>
        <trans-unit id="27da589d75e12703d9b8345613fc7d8ec3e352e7" translate="yes" xml:space="preserve">
          <source>This function converts the sequence &lt;var&gt;sequence&lt;/var&gt; into a sequence of type &lt;var&gt;type&lt;/var&gt;. &lt;var&gt;type&lt;/var&gt; can be one of the following symbols: &lt;code&gt;vector&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt; or &lt;code&gt;list&lt;/code&gt;.</source>
          <target state="translated">此函数将序列 &lt;var&gt;sequence&lt;/var&gt; 转换为type &lt;var&gt;type&lt;/var&gt; 的序列。 &lt;var&gt;type&lt;/var&gt; 可以是以下符号之一： &lt;code&gt;vector&lt;/code&gt; ， &lt;code&gt;string&lt;/code&gt; 或 &lt;code&gt;list&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a450d2efa54e77616fbd5d26e99b08469e6ca74d" translate="yes" xml:space="preserve">
          <source>This function converts the string &lt;var&gt;string&lt;/var&gt; from base 64 code into the corresponding decoded text. It returns a unibyte string containing the decoded text.</source>
          <target state="translated">此函数将 &lt;var&gt;string&lt;/var&gt; 从基本64代码转换为相应的解码文本。它返回包含解码文本的单字节字符串。</target>
        </trans-unit>
        <trans-unit id="02598df53b09eaff6e4270202cb83707188dc533" translate="yes" xml:space="preserve">
          <source>This function converts the string &lt;var&gt;string&lt;/var&gt; into base 64 code. It returns a string containing the encoded text. As for &lt;code&gt;base64-encode-region&lt;/code&gt;, an error is signaled if a character in the string is multibyte.</source>
          <target state="translated">这个函数转换字符串 &lt;var&gt;string&lt;/var&gt; 入底座64的代码。它返回一个包含编码文本的字符串。对于 &lt;code&gt;base64-encode-region&lt;/code&gt; ，如果字符串中的字符为多字节，则将指示错误。</target>
        </trans-unit>
        <trans-unit id="9b37cca380a96ff521cab51131ab757cfa6eae3e" translate="yes" xml:space="preserve">
          <source>This function converts the string or vector &lt;var&gt;key&lt;/var&gt; to a list of individual events, which you can put in &lt;code&gt;unread-command-events&lt;/code&gt;.</source>
          <target state="translated">此函数将字符串或向量 &lt;var&gt;key&lt;/var&gt; 转换为单个事件的列表，您可以将其放入 &lt;code&gt;unread-command-events&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="f001050e70298d6ec962a0626dbda0a35b830508" translate="yes" xml:space="preserve">
          <source>This function converts the text &lt;var&gt;keyseq-text&lt;/var&gt; (a string constant) into a key sequence (a string or vector constant). The contents of &lt;var&gt;keyseq-text&lt;/var&gt; should use the same syntax as in the buffer invoked by the</source>
          <target state="translated">此函数将文本 &lt;var&gt;keyseq-text&lt;/var&gt; （字符串常量）转换为键序列（字符串或向量常量）。 &lt;var&gt;keyseq-text&lt;/var&gt; 的内容应使用与关键字调用的缓冲区相同的语法。</target>
        </trans-unit>
        <trans-unit id="fe2af2ee8e43bb67213200069f07caef5315b672" translate="yes" xml:space="preserve">
          <source>This function copies &lt;var&gt;string&lt;/var&gt; and searches it for matches for &lt;var&gt;regexp&lt;/var&gt;, and replaces them with &lt;var&gt;rep&lt;/var&gt;. It returns the modified copy. If &lt;var&gt;start&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the search for matches starts at that index in &lt;var&gt;string&lt;/var&gt;, and the returned value does not include the first &lt;var&gt;start&lt;/var&gt; characters of &lt;var&gt;string&lt;/var&gt;. To get the whole transformed string, concatenate the first &lt;var&gt;start&lt;/var&gt; characters of &lt;var&gt;string&lt;/var&gt; with the return value.</source>
          <target state="translated">此函数复制 &lt;var&gt;string&lt;/var&gt; 并在其中搜索 &lt;var&gt;regexp&lt;/var&gt; 的匹配项，然后将它们替换为 &lt;var&gt;rep&lt;/var&gt; 。它返回修改后的副本。如果 &lt;var&gt;start&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则搜索匹配项将从 &lt;var&gt;string&lt;/var&gt; 中的该索引开始，并且返回值不包含 &lt;var&gt;string&lt;/var&gt; 的第一个 &lt;var&gt;start&lt;/var&gt; 字符。为了让整个变换的串，连接第一 &lt;var&gt;start&lt;/var&gt; 的字符 &lt;var&gt;string&lt;/var&gt; 与返回值。</target>
        </trans-unit>
        <trans-unit id="51e5f325841e460853d8b05b54f5976696115725" translate="yes" xml:space="preserve">
          <source>This function copies file &lt;var&gt;filename&lt;/var&gt; to an ordinary non-magic file on the local machine, if it isn&amp;rsquo;t on the local machine already. Magic file names should handle the &lt;code&gt;file-local-copy&lt;/code&gt; operation if they refer to files on other machines. A magic file name that is used for other purposes than remote file access should not handle &lt;code&gt;file-local-copy&lt;/code&gt;; then this function will treat the file as local.</source>
          <target state="translated">此功能将文件 &lt;var&gt;filename&lt;/var&gt; 复制到本地计算机上的普通非魔术文件（如果尚未在本地计算机上）。魔术文件名如果引用其他计算机上的 &lt;code&gt;file-local-copy&lt;/code&gt; 则应处理文件本地复制操作。用于远程文件访问以外的其他目的的魔术文件名不应处理 &lt;code&gt;file-local-copy&lt;/code&gt; ;那么此功能会将文件视为本地文件。</target>
        </trans-unit>
        <trans-unit id="4d71eef7c1798851e7a2d2a53cf748479d7454c9" translate="yes" xml:space="preserve">
          <source>This function copies the sign of &lt;var&gt;x2&lt;/var&gt; to the value of &lt;var&gt;x1&lt;/var&gt;, and returns the result. &lt;var&gt;x1&lt;/var&gt; and &lt;var&gt;x2&lt;/var&gt; must be floating point.</source>
          <target state="translated">此函数将 &lt;var&gt;x2&lt;/var&gt; 的符号复制到 &lt;var&gt;x1&lt;/var&gt; 的值，并返回结果。 &lt;var&gt;x1&lt;/var&gt; 和 &lt;var&gt;x2&lt;/var&gt; 必须是浮点数。</target>
        </trans-unit>
        <trans-unit id="cdcd7718f4e0db41253c7648be016dfbe77d1427" translate="yes" xml:space="preserve">
          <source>This function creates a</source>
          <target state="translated">这个函数创建了一个</target>
        </trans-unit>
        <trans-unit id="37af52e12ffb883947a0241d5e5fc903cdf887df" translate="yes" xml:space="preserve">
          <source>This function creates a bidirectional pipe which can be attached to a child process. This is useful with the &lt;code&gt;:stderr&lt;/code&gt; keyword of &lt;code&gt;make-process&lt;/code&gt;. The function returns a process object.</source>
          <target state="translated">此函数创建可以连接到子进程的双向管道。这对 &lt;code&gt;make-process&lt;/code&gt; 的 &lt;code&gt;:stderr&lt;/code&gt; 关键字很有用。该函数返回一个过程对象。</target>
        </trans-unit>
        <trans-unit id="7cc3af8ffb20d8eaafcaa12e0ec7566fc8b04eb7" translate="yes" xml:space="preserve">
          <source>This function creates a buffer-local binding in the current buffer for &lt;var&gt;variable&lt;/var&gt; (a symbol). Other buffers are not affected. The value returned is &lt;var&gt;variable&lt;/var&gt;.</source>
          <target state="translated">此函数在当前缓冲区中为 &lt;var&gt;variable&lt;/var&gt; （符号）创建缓冲区局部绑定。其他缓冲区不受影响。返回的值是 &lt;var&gt;variable&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="d7404d032182753fbb61946df90b9ddbd5442f67" translate="yes" xml:space="preserve">
          <source>This function creates a list of &lt;var&gt;length&lt;/var&gt; elements, in which each element is &lt;var&gt;object&lt;/var&gt;. Compare &lt;code&gt;make-list&lt;/code&gt; with &lt;code&gt;make-string&lt;/code&gt; (see &lt;a href=&quot;creating-strings#Creating-Strings&quot;&gt;Creating Strings&lt;/a&gt;).</source>
          <target state="translated">此函数创建一个 &lt;var&gt;length&lt;/var&gt; 元素列表，其中每个元素都是 &lt;var&gt;object&lt;/var&gt; 。将 &lt;code&gt;make-list&lt;/code&gt; 与 &lt;code&gt;make-string&lt;/code&gt; 进行比较（请参阅&lt;a href=&quot;creating-strings#Creating-Strings&quot;&gt;创建字符串&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="cadb41c353181fcd60943def05424f6e383348e1" translate="yes" xml:space="preserve">
          <source>This function creates a list of the possible completions of the current minibuffer contents. It works by calling &lt;code&gt;all-completions&lt;/code&gt; using the value of the variable &lt;code&gt;minibuffer-completion-table&lt;/code&gt; as the &lt;var&gt;collection&lt;/var&gt; argument, and the value of &lt;code&gt;minibuffer-completion-predicate&lt;/code&gt; as the &lt;var&gt;predicate&lt;/var&gt; argument. The list of completions is displayed as text in a buffer named</source>
          <target state="translated">此函数创建当前迷你缓冲区内容可能完成的列表。它通过使用变量 &lt;code&gt;minibuffer-completion-table&lt;/code&gt; 的值作为 &lt;var&gt;collection&lt;/var&gt; 参数，并使用 &lt;code&gt;minibuffer-completion-predicate&lt;/code&gt; 的值作为 &lt;var&gt;predicate&lt;/var&gt; 参数来调用 &lt;code&gt;all-completions&lt;/code&gt; 。完成列表以文本形式显示在名为的缓冲区中</target>
        </trans-unit>
        <trans-unit id="65f946d0e00117b79a9e660edc9fec28d1d3ab61" translate="yes" xml:space="preserve">
          <source>This function creates a list with &lt;var&gt;objects&lt;/var&gt; as its elements. The resulting list is always &lt;code&gt;nil&lt;/code&gt;-terminated. If no &lt;var&gt;objects&lt;/var&gt; are given, the empty list is returned.</source>
          <target state="translated">该函数创建一个以 &lt;var&gt;objects&lt;/var&gt; 为元素的列表。结果列表始终为 &lt;code&gt;nil&lt;/code&gt; 终止。如果没有给出 &lt;var&gt;objects&lt;/var&gt; ，则返回空列表。</target>
        </trans-unit>
        <trans-unit id="416ae54fad353d6bf85c7f9a263a40780f8df4f6" translate="yes" xml:space="preserve">
          <source>This function creates a listing of all current key bindings, and displays it in a buffer named</source>
          <target state="translated">该函数创建一个当前所有键绑定的列表,并将其显示在一个名为</target>
        </trans-unit>
        <trans-unit id="2409b78bcbd59a3bc4cf9535cfe30274683154ed" translate="yes" xml:space="preserve">
          <source>This function creates a network connection or server and returns the process object that represents it. The arguments &lt;var&gt;args&lt;/var&gt; are a list of keyword/argument pairs. Omitting a keyword is always equivalent to specifying it with value &lt;code&gt;nil&lt;/code&gt;, except for &lt;code&gt;:coding&lt;/code&gt;, &lt;code&gt;:filter-multibyte&lt;/code&gt;, and &lt;code&gt;:reuseaddr&lt;/code&gt;. Here are the meaningful keywords (those corresponding to network options are listed in the following section):</source>
          <target state="translated">此函数创建网络连接或服务器，并返回代表它的过程对象。参数 &lt;var&gt;args&lt;/var&gt; 是关键字/参数对的列表。除了 &lt;code&gt;:coding&lt;/code&gt; ， &lt;code&gt;:filter-multibyte&lt;/code&gt; 和 &lt;code&gt;:reuseaddr&lt;/code&gt; 之外，省略关键字总是等同于使用 &lt;code&gt;nil&lt;/code&gt; 值来指定。这是有意义的关键字（与网络选项相对应的关键字在以下部分中列出）：</target>
        </trans-unit>
        <trans-unit id="482fbe7c2279d7b9dc41fe6cc6f0cd063ffbfb94" translate="yes" xml:space="preserve">
          <source>This function creates a new frame, and displays the buffer in that frame&amp;rsquo;s window. It actually performs the frame creation by calling the function specified in &lt;code&gt;pop-up-frame-function&lt;/code&gt; (see &lt;a href=&quot;choosing-window-options#Choosing-Window-Options&quot;&gt;Choosing Window Options&lt;/a&gt;). If &lt;var&gt;alist&lt;/var&gt; contains a &lt;code&gt;pop-up-frame-parameters&lt;/code&gt; entry, the associated value is added to the newly created frame&amp;rsquo;s parameters.</source>
          <target state="translated">此函数创建一个新框架，并在该框架的窗口中显示缓冲区。实际上，它是通过调用 &lt;code&gt;pop-up-frame-function&lt;/code&gt; 中指定的函数来执行框架创建的（请参阅&lt;a href=&quot;choosing-window-options#Choosing-Window-Options&quot;&gt;选择窗口选项&lt;/a&gt;）。如果 &lt;var&gt;alist&lt;/var&gt; 包含一个 &lt;code&gt;pop-up-frame-parameters&lt;/code&gt; 条目，则将关联的值添加到新创建的框架的参数中。</target>
        </trans-unit>
        <trans-unit id="b52e15e1556c244566f6db3e6c32a0879f170e5c" translate="yes" xml:space="preserve">
          <source>This function creates a new hash table according to the specified arguments. The arguments should consist of alternating keywords (particular symbols recognized specially) and values corresponding to them.</source>
          <target state="translated">这个函数根据指定的参数创建一个新的哈希表。参数应该由交替的关键字(特殊识别的符号)和对应的值组成。</target>
        </trans-unit>
        <trans-unit id="c80202af3d2806e8c78c020b4842a0574f1e38f4" translate="yes" xml:space="preserve">
          <source>This function creates a new live window next to the window &lt;var&gt;window&lt;/var&gt;. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window. That window is split, and reduced in size. The space is taken up by the new window, which is returned.</source>
          <target state="translated">此功能在窗口 &lt;var&gt;window&lt;/var&gt; 旁边创建一个新的活动窗口。如果 &lt;var&gt;window&lt;/var&gt; 省略或为 &lt;code&gt;nil&lt;/code&gt; ，则默认为所选窗口。该窗口被拆分，并减小了尺寸。该空间由新窗口占用，并返回。</target>
        </trans-unit>
        <trans-unit id="4d43f3e4ac040f6f2c7182f8c98940643d51ec8f" translate="yes" xml:space="preserve">
          <source>This function creates a new sequence whose elements are the elements of &lt;var&gt;sequence&lt;/var&gt;, but in reverse order. The original argument &lt;var&gt;sequence&lt;/var&gt; is &lt;em&gt;not&lt;/em&gt; altered. Note that char-tables cannot be reversed.</source>
          <target state="translated">该函数创建一个新的序列，其元素的元素 &lt;var&gt;sequence&lt;/var&gt; ，但以相反的顺序。原来的参数 &lt;var&gt;sequence&lt;/var&gt; 是&lt;em&gt;不能&lt;/em&gt;改变的。请注意，不能反转char表。</target>
        </trans-unit>
        <trans-unit id="a99a5d28a1e9a727cd5fb40c95efa766b1b2aa25" translate="yes" xml:space="preserve">
          <source>This function creates a new syntax table. If &lt;var&gt;table&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the parent of the new syntax table is &lt;var&gt;table&lt;/var&gt;; otherwise, the parent is the standard syntax table.</source>
          <target state="translated">此函数创建一个新的语法表。如果 &lt;var&gt;table&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则新语法表的父级为 &lt;var&gt;table&lt;/var&gt; ; 否则，父级是标准语法表。</target>
        </trans-unit>
        <trans-unit id="4b98eeba141c882ae23d506b9f00793c85f94936" translate="yes" xml:space="preserve">
          <source>This function creates a process and a buffer. Arguments are specified as keyword/argument pairs. Here&amp;rsquo;s the list of the meaningful keywords, with the first two (&lt;var&gt;port&lt;/var&gt; and &lt;var&gt;speed&lt;/var&gt;) being mandatory:</source>
          <target state="translated">此函数创建一个进程和一个缓冲区。参数被指定为关键字/参数对。这是有意义的关键字的列表，前两个关键字（ &lt;var&gt;port&lt;/var&gt; 和 &lt;var&gt;speed&lt;/var&gt; ）是强制性的：</target>
        </trans-unit>
        <trans-unit id="b994a272bc988cf1ef9636454ae9c2120b871697" translate="yes" xml:space="preserve">
          <source>This function creates a suitably named buffer for visiting &lt;var&gt;filename&lt;/var&gt;, and returns it. It uses &lt;var&gt;filename&lt;/var&gt; (sans directory) as the name if that name is free; otherwise, it appends a string such as &amp;lsquo;</source>
          <target state="translated">此函数为访问 &lt;var&gt;filename&lt;/var&gt; 创建一个适当命名的缓冲区，并返回该缓冲区。如果该名称是免费的，它将使用 &lt;var&gt;filename&lt;/var&gt; （无目录）作为名称。否则，它会附加一个字符串，例如'</target>
        </trans-unit>
        <trans-unit id="db055f24aacbb1ec4d973336ec030eeac91b694e" translate="yes" xml:space="preserve">
          <source>This function creates a temporary file and returns its name. Emacs creates the temporary file&amp;rsquo;s name by adding to &lt;var&gt;prefix&lt;/var&gt; some random characters that are different in each Emacs job. The result is guaranteed to be a newly created file, containing &lt;var&gt;text&lt;/var&gt; if that&amp;rsquo;s given as a string and empty otherwise. On MS-DOS, this function can truncate &lt;var&gt;prefix&lt;/var&gt; to fit into the 8+3 file-name limits. If &lt;var&gt;prefix&lt;/var&gt; is a relative file name, it is expanded against &lt;code&gt;temporary-file-directory&lt;/code&gt;.</source>
          <target state="translated">此函数创建一个临时文件并返回其名称。Emacs通过在每个Emacs作业中添加一些不同的随机字符作为 &lt;var&gt;prefix&lt;/var&gt; 来创建临时文件的名称。保证结果是一个新创建的文件，如果以字符串形式给出，则包含 &lt;var&gt;text&lt;/var&gt; ，否则为空。在MS-DOS上，此函数可以截断 &lt;var&gt;prefix&lt;/var&gt; 以适合8 + 3文件名限制。如果 &lt;var&gt;prefix&lt;/var&gt; 是相对文件名，则将其扩展为 &lt;code&gt;temporary-file-directory&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4e9bdcc97c643032a97159919aa9b762f29eeebc" translate="yes" xml:space="preserve">
          <source>This function creates an Emacs string from C text string pointed by &lt;var&gt;str&lt;/var&gt; whose length in bytes, not including the terminating null byte, is &lt;var&gt;strlen&lt;/var&gt;. The original string in &lt;var&gt;str&lt;/var&gt; can be either an</source>
          <target state="translated">该函数从 &lt;var&gt;str&lt;/var&gt; 指向的C文本字符串中创建一个Emacs字符串，其字符串长度（不包括终止的空字节）为 &lt;var&gt;strlen&lt;/var&gt; 。 &lt;var&gt;str&lt;/var&gt; 中的原始字符串可以是</target>
        </trans-unit>
        <trans-unit id="5959cc4559bb22d8ee089c861eb242b28919d891" translate="yes" xml:space="preserve">
          <source>This function creates and returns a &lt;code&gt;user-ptr&lt;/code&gt; object which wraps the C pointer &lt;var&gt;ptr&lt;/var&gt;. The finalizer function &lt;var&gt;fin&lt;/var&gt; can be a &lt;code&gt;NULL&lt;/code&gt; pointer (meaning no finalizer), or it can be a function of the following signature:</source>
          <target state="translated">此函数创建并返回一个包装C指针 &lt;var&gt;ptr&lt;/var&gt; 的 &lt;code&gt;user-ptr&lt;/code&gt; 对象。终结器函数 &lt;var&gt;fin&lt;/var&gt; 可以是 &lt;code&gt;NULL&lt;/code&gt; 指针（表示没有终结器），也可以是以下签名的函数：</target>
        </trans-unit>
        <trans-unit id="59745ad21a235e214aeb13cca0a7040c616077db" translate="yes" xml:space="preserve">
          <source>This function creates and returns a bool-vector whose elements are the arguments, &lt;var&gt;objects&lt;/var&gt;.</source>
          <target state="translated">该函数创建并返回一个布尔向量，其元素是参数 &lt;var&gt;objects&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="449e9da9c82272e6b197c43a797ea855c453021b" translate="yes" xml:space="preserve">
          <source>This function creates and returns a copy of &lt;var&gt;table&lt;/var&gt;. Only the table itself is copied&amp;mdash;the keys and values are shared.</source>
          <target state="translated">此函数创建并返回 &lt;var&gt;table&lt;/var&gt; 的副本。仅复制表本身，共享键和值。</target>
        </trans-unit>
        <trans-unit id="1bb5f1c75cc6d716b9fc08892c8dea9f3bd4da73" translate="yes" xml:space="preserve">
          <source>This function creates and returns a new frame on &lt;var&gt;display&lt;/var&gt;, taking the other frame parameters from the alist &lt;var&gt;parameters&lt;/var&gt;. &lt;var&gt;display&lt;/var&gt; should be the name of an X display (a string).</source>
          <target state="translated">该函数创建并返回一个新的 &lt;var&gt;display&lt;/var&gt; 帧，并从alist &lt;var&gt;parameters&lt;/var&gt; 获取其他帧参数。 &lt;var&gt;display&lt;/var&gt; 应该是X显示的名称（字符串）。</target>
        </trans-unit>
        <trans-unit id="6b68440be7129d7734a8df8e6d73959684ac61ee" translate="yes" xml:space="preserve">
          <source>This function creates and returns a new frame on &lt;var&gt;monitor&lt;/var&gt; located on &lt;var&gt;display&lt;/var&gt;, taking the other frame parameters from the alist &lt;var&gt;parameters&lt;/var&gt;. &lt;var&gt;monitor&lt;/var&gt; should be the name of the physical monitor, the same string as returned by the function &lt;code&gt;display-monitor-attributes-list&lt;/code&gt; in the attribute &lt;code&gt;name&lt;/code&gt;. &lt;var&gt;display&lt;/var&gt; should be the name of an X display (a string).</source>
          <target state="translated">此函数从alist &lt;var&gt;parameters&lt;/var&gt; 获取其他帧参数，然后在 &lt;var&gt;display&lt;/var&gt; 上的 &lt;var&gt;monitor&lt;/var&gt; 上创建并返回新帧。 &lt;var&gt;monitor&lt;/var&gt; 应该是物理监视器的名称，与属性 &lt;code&gt;name&lt;/code&gt; 中的函数 &lt;code&gt;display-monitor-attributes-list&lt;/code&gt; 返回的字符串相同。 &lt;var&gt;display&lt;/var&gt; 应该是X显示的名称（字符串）。</target>
        </trans-unit>
        <trans-unit id="bd23f063ac47b8196895f6fdefc217f968295d6f" translate="yes" xml:space="preserve">
          <source>This function creates and returns a new frame, displaying the current buffer.</source>
          <target state="translated">该函数创建并返回一个新的框架,显示当前的缓冲区。</target>
        </trans-unit>
        <trans-unit id="b8dd074487e687f8b06ba9d87275959b741345c5" translate="yes" xml:space="preserve">
          <source>This function creates and returns a new full keymap. That keymap contains a char-table (see &lt;a href=&quot;char_002dtables#Char_002dTables&quot;&gt;Char-Tables&lt;/a&gt;) with slots for all characters without modifiers. The new keymap initially binds all these characters to &lt;code&gt;nil&lt;/code&gt;, and does not bind any other kind of event. The argument &lt;var&gt;prompt&lt;/var&gt; specifies a prompt string, as in &lt;code&gt;make-sparse-keymap&lt;/code&gt;.</source>
          <target state="translated">该函数创建并返回一个新的完整键盘映射。该键映射包含一个char-table（请参见&lt;a href=&quot;char_002dtables#Char_002dTables&quot;&gt;Char-Tables&lt;/a&gt;），该表具有用于所有不带修饰符的字符的插槽。新的键盘映射最初将所有这些字符绑定到 &lt;code&gt;nil&lt;/code&gt; ，而不绑定任何其他类型的事件。 &lt;var&gt;prompt&lt;/var&gt; 参数指定提示字符串，如 &lt;code&gt;make-sparse-keymap&lt;/code&gt; 所示。</target>
        </trans-unit>
        <trans-unit id="72f732f4400aef025baab876624e05b34a1eb403" translate="yes" xml:space="preserve">
          <source>This function creates and returns a new indirect buffer that shares the current buffer&amp;rsquo;s base buffer and copies the rest of the current buffer&amp;rsquo;s attributes. (If the current buffer is not indirect, it is used as the base buffer.)</source>
          <target state="translated">该函数创建并返回一个新的间接缓冲区，该缓冲区共享当前缓冲区的基本缓冲区，并复制当前缓冲区的其余属性。（如果当前缓冲区不是间接的，则将其用作基本缓冲区。）</target>
        </trans-unit>
        <trans-unit id="42708ab7c96a05d7b6b218bfbbde837d2da2f7ff" translate="yes" xml:space="preserve">
          <source>This function creates and returns a new sparse keymap with no entries. (A sparse keymap is the kind of keymap you usually want.) The new keymap does not contain a char-table, unlike &lt;code&gt;make-keymap&lt;/code&gt;, and does not bind any events.</source>
          <target state="translated">此函数创建并返回没有任何条目的新的稀疏键映射。（稀疏的keymap是您通常需要的那种keymap。）与 &lt;code&gt;make-keymap&lt;/code&gt; 不同，新的keymap不包含char-table ，并且不绑定任何事件。</target>
        </trans-unit>
        <trans-unit id="4f0076ff846cc3a7e8e51b7b27c0b9c24a7c3563" translate="yes" xml:space="preserve">
          <source>This function creates and returns a new, empty abbrev table&amp;mdash;an obarray containing no symbols. It is a vector filled with zeros. &lt;var&gt;props&lt;/var&gt; is a property list that is applied to the new table (see &lt;a href=&quot;abbrev-table-properties#Abbrev-Table-Properties&quot;&gt;Abbrev Table Properties&lt;/a&gt;).</source>
          <target state="translated">此函数创建并返回一个新的空缩写表-一个不包含符号的obarray。它是一个用零填充的向量。 &lt;var&gt;props&lt;/var&gt; 是应用于新表的属性列表（请参阅&lt;a href=&quot;abbrev-table-properties#Abbrev-Table-Properties&quot;&gt;Abbrev表属性&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="1df5c7389edfe93dda9f7dacb55305b12c2e78d3" translate="yes" xml:space="preserve">
          <source>This function creates and returns a progress reporter object, which you will use as an argument for the other functions listed below. The idea is to precompute as much data as possible to make progress reporting very fast.</source>
          <target state="translated">这个函数创建并返回一个进度报告对象,你将使用它作为下面列出的其他函数的参数。我们的想法是尽可能多地预计算数据,使进度报告的速度非常快。</target>
        </trans-unit>
        <trans-unit id="44bde2354361088b7baee014dbddde380ffdace6" translate="yes" xml:space="preserve">
          <source>This function creates and returns a record whose type is &lt;var&gt;type&lt;/var&gt; and remaining slots are the rest of the arguments, &lt;var&gt;objects&lt;/var&gt;.</source>
          <target state="translated">该函数创建并返回一条记录，其类型为 &lt;var&gt;type&lt;/var&gt; ，其余插槽为其余参数 &lt;var&gt;objects&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="c164be87f7b86348c909c873c4b54a87a9c318d9" translate="yes" xml:space="preserve">
          <source>This function creates and returns a transaction queue communicating with &lt;var&gt;process&lt;/var&gt;. The argument &lt;var&gt;process&lt;/var&gt; should be a subprocess capable of sending and receiving streams of bytes. It may be a child process, or it may be a TCP connection to a server, possibly on another machine.</source>
          <target state="translated">此函数创建并返回与 &lt;var&gt;process&lt;/var&gt; 通信的事务队列。参数 &lt;var&gt;process&lt;/var&gt; 应该是能够发送和接收字节流的子进程。它可以是子进程，也可以是与服务器（可能在另一台计算机上）的TCP连接。</target>
        </trans-unit>
        <trans-unit id="7f39207dde0842d8665011cceaacad52846dee27" translate="yes" xml:space="preserve">
          <source>This function creates and returns a vector whose elements are the arguments, &lt;var&gt;objects&lt;/var&gt;.</source>
          <target state="translated">该函数创建并返回一个向量，该向量的元素为参数， &lt;var&gt;objects&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="dd712963faf3dbecad84651e45747d02a561e877" translate="yes" xml:space="preserve">
          <source>This function creates and returns an image descriptor which uses the data in &lt;var&gt;file-or-data&lt;/var&gt;. &lt;var&gt;file-or-data&lt;/var&gt; can be a file name or a string containing the image data; &lt;var&gt;data-p&lt;/var&gt; should be &lt;code&gt;nil&lt;/code&gt; for the former case, non-&lt;code&gt;nil&lt;/code&gt; for the latter case.</source>
          <target state="translated">此函数创建并返回使用 &lt;var&gt;file-or-data&lt;/var&gt; 数据中的数据的图像描述符。 &lt;var&gt;file-or-data&lt;/var&gt; 可以是文件名或包含图像数据的字符串； &lt;var&gt;data-p&lt;/var&gt; 应该 &lt;code&gt;nil&lt;/code&gt; 为前者的情况下，非 &lt;code&gt;nil&lt;/code&gt; 为后者的情况。</target>
        </trans-unit>
        <trans-unit id="9858d9377c82e05742bfd43c4f8df0f4077feca7" translate="yes" xml:space="preserve">
          <source>This function creates and returns an overlay that belongs to &lt;var&gt;buffer&lt;/var&gt; and ranges from &lt;var&gt;start&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt;. Both &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; must specify buffer positions; they may be integers or markers. If &lt;var&gt;buffer&lt;/var&gt; is omitted, the overlay is created in the current buffer.</source>
          <target state="translated">此函数创建并返回一个属于 &lt;var&gt;buffer&lt;/var&gt; 的覆盖，范围从 &lt;var&gt;start&lt;/var&gt; 到 &lt;var&gt;end&lt;/var&gt; 。双方 &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 必须指定缓冲区的位置; 它们可以是整数或标记。如果省略 &lt;var&gt;buffer&lt;/var&gt; ，则在当前缓冲区中创建叠加层。</target>
        </trans-unit>
        <trans-unit id="8d40bb5f729f0ec136ded556de86c46dff5946e2" translate="yes" xml:space="preserve">
          <source>This function decodes a character that is assigned a &lt;var&gt;code-point&lt;/var&gt; in &lt;var&gt;charset&lt;/var&gt;, to the corresponding Emacs character, and returns it. If &lt;var&gt;charset&lt;/var&gt; doesn&amp;rsquo;t contain a character of that code point, the value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此函数将在 &lt;var&gt;charset&lt;/var&gt; 中分配了 &lt;var&gt;code-point&lt;/var&gt; 的字符解码为相应的Emacs字符，然后将其返回。如果 &lt;var&gt;charset&lt;/var&gt; 不包含该代码点的字符，则值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="538821c2ec3b053d4531ee8be389062c0ba1c1ad" translate="yes" xml:space="preserve">
          <source>This function decodes the text from &lt;var&gt;from&lt;/var&gt; to &lt;var&gt;to&lt;/var&gt; as if it were being read from file &lt;var&gt;filename&lt;/var&gt; using &lt;code&gt;insert-file-contents&lt;/code&gt; using the rest of the arguments provided.</source>
          <target state="translated">此函数将文本从 &lt;var&gt;from&lt;/var&gt; 解码为 &lt;var&gt;to&lt;/var&gt; 就像使用提供的其余参数使用 &lt;code&gt;insert-file-contents&lt;/code&gt; 从文件 &lt;var&gt;filename&lt;/var&gt; 读取文本一样。</target>
        </trans-unit>
        <trans-unit id="22e6d9e456b19a94f642cdfd34b0dd0f4faeda6c" translate="yes" xml:space="preserve">
          <source>This function decodes the text in &lt;var&gt;string&lt;/var&gt; according to &lt;var&gt;coding-system&lt;/var&gt;. It returns a new string containing the decoded text, except when &lt;var&gt;nocopy&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, in which case the function may return &lt;var&gt;string&lt;/var&gt; itself if the decoding operation is trivial. To make explicit decoding useful, the contents of &lt;var&gt;string&lt;/var&gt; ought to be a unibyte string with a sequence of byte values, but a multibyte string is also acceptable (assuming it contains 8-bit bytes in their multibyte form).</source>
          <target state="translated">此函数根据 &lt;var&gt;coding-system&lt;/var&gt; 对 &lt;var&gt;string&lt;/var&gt; 的文本进行解码。它返回一个包含解码文本的新字符串，除非 &lt;var&gt;nocopy&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，否则，如果解码操作很简单，则函数可能会返回 &lt;var&gt;string&lt;/var&gt; 本身。为了使显式解码有用， &lt;var&gt;string&lt;/var&gt; 的内容应该是具有字节值序列的单字节字符串，但是也可以使用多字节字符串（假设它包含多字节形式的8位字节）。</target>
        </trans-unit>
        <trans-unit id="5e83fee11d671bf11c3a87c1c0178b36066c1cdd" translate="yes" xml:space="preserve">
          <source>This function decompresses the region between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;, using built-in zlib decompression. The region should contain data that were compressed with gzip or zlib. On success, the function replaces the contents of the region with the decompressed data. If &lt;var&gt;allow-partial&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or omitted, then on failure, the function leaves the region unchanged and returns &lt;code&gt;nil&lt;/code&gt;. Otherwise, it returns the number of bytes that were not decompressed and replaces the region text by whatever data was successfully decompressed. This function can be called only in unibyte buffers.</source>
          <target state="translated">此函数使用内置的zlib解压缩来解压缩 &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 之间的区域。该区域应包含使用gzip或zlib压缩的数据。成功后，该函数将用解压缩的数据替换区域的内容。如果 &lt;var&gt;allow-partial&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; 或被省略，则在失败时，函数将使区域保持不变并返回 &lt;code&gt;nil&lt;/code&gt; 。否则，它将返回未解压缩的字节数，并用成功解压缩的任何数据替换区域文本。只能在单字节缓冲区中调用此函数。</target>
        </trans-unit>
        <trans-unit id="682d948e60a50841dfdf077715c174577e9b77df" translate="yes" xml:space="preserve">
          <source>This function defines &lt;var&gt;tabname&lt;/var&gt; (a symbol) as an abbrev table name, i.e., as a variable whose value is an abbrev table. It defines abbrevs in the table according to &lt;var&gt;definitions&lt;/var&gt;, a list of elements of the form &lt;code&gt;(&lt;var&gt;abbrevname&lt;/var&gt; &lt;var&gt;expansion&lt;/var&gt;
[&lt;var&gt;hook&lt;/var&gt;] [&lt;var&gt;props&lt;/var&gt;...])&lt;/code&gt;. These elements are passed as arguments to &lt;code&gt;define-abbrev&lt;/code&gt;.</source>
          <target state="translated">此函数将 &lt;var&gt;tabname&lt;/var&gt; 符名称（符号）定义为缩写表名称，即，其值为缩写表的变量。它根据 &lt;var&gt;definitions&lt;/var&gt; 在表中定义缩写，形式为元素列表 &lt;code&gt;(&lt;var&gt;abbrevname&lt;/var&gt; &lt;var&gt;expansion&lt;/var&gt; [&lt;var&gt;hook&lt;/var&gt;] [&lt;var&gt;props&lt;/var&gt;...])&lt;/code&gt; 。这些元素作为参数传递给 &lt;code&gt;define-abbrev&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a8be0eaa29365b707bb70a17a0d18f0da96be246" translate="yes" xml:space="preserve">
          <source>This function defines a local menu bar item named &lt;var&gt;name&lt;/var&gt; to run Imenu.</source>
          <target state="translated">此函数定义一个名为 &lt;var&gt;name&lt;/var&gt; 的本地菜单栏项目以运行Imenu。</target>
        </trans-unit>
        <trans-unit id="8da443b3ec364a54e2db62282432b68dbf49350e" translate="yes" xml:space="preserve">
          <source>This function defines a new category, with name &lt;var&gt;char&lt;/var&gt; and documentation &lt;var&gt;docstring&lt;/var&gt;, for the category table &lt;var&gt;table&lt;/var&gt;.</source>
          <target state="translated">此函数为类别表 &lt;var&gt;table&lt;/var&gt; 定义了一个新类别，名称为 &lt;var&gt;char&lt;/var&gt; 和documentation &lt;var&gt;docstring&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="7ff5c0ef6eb02f7bce89525055ee8dd5aa03ef07" translate="yes" xml:space="preserve">
          <source>This function defines a new fontset according to the specification string &lt;var&gt;fontset-spec&lt;/var&gt;. The string should have this format:</source>
          <target state="translated">此函数根据规范字符串 &lt;var&gt;fontset-spec&lt;/var&gt; 定义新的字体集。字符串应具有以下格式：</target>
        </trans-unit>
        <trans-unit id="9c1e9a6ef9bd8c074dbe00860a2a41554c575090" translate="yes" xml:space="preserve">
          <source>This function defines a new hash table test, named &lt;var&gt;name&lt;/var&gt;.</source>
          <target state="translated">此函数定义了一个名为 &lt;var&gt;name&lt;/var&gt; 的新哈希表测试。</target>
        </trans-unit>
        <trans-unit id="39212533675a840db9d62668367e2fda931a1093" translate="yes" xml:space="preserve">
          <source>This function defines a package. &lt;var&gt;name&lt;/var&gt; is the package name, a string. &lt;var&gt;version&lt;/var&gt; is the version, as a string of a form that can be understood by the function &lt;code&gt;version-to-list&lt;/code&gt;. &lt;var&gt;docstring&lt;/var&gt; is the brief description.</source>
          <target state="translated">此函数定义一个包。 &lt;var&gt;name&lt;/var&gt; 是程序包名称，一个字符串。 &lt;var&gt;version&lt;/var&gt; 是版本，是形式的字符串，可以由 &lt;code&gt;version-to-list&lt;/code&gt; 函数理解。 &lt;var&gt;docstring&lt;/var&gt; 是简短描述。</target>
        </trans-unit>
        <trans-unit id="06963c9c5d701c102ec9b7953ff482621977e302" translate="yes" xml:space="preserve">
          <source>This function defines a set of variable settings for the connection &lt;var&gt;profile&lt;/var&gt;, which is a symbol. You can later assign the connection profile to one or more remote connections, and Emacs will apply those variable settings to all process buffers for those connections. The list in &lt;var&gt;variables&lt;/var&gt; is an alist of the form &lt;code&gt;(&lt;var&gt;name&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;value&lt;/var&gt;)&lt;/code&gt;. Example:</source>
          <target state="translated">此功能为连接 &lt;var&gt;profile&lt;/var&gt; 定义了一组变量设置，它是一个符号。您可以稍后将连接配置文件分配给一个或多个远程连接，Emacs会将这些变量设置应用于这些连接的所有进程缓冲区。 &lt;var&gt;variables&lt;/var&gt; 的列表是形式 &lt;code&gt;(&lt;var&gt;name&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;value&lt;/var&gt;)&lt;/code&gt; 。例：</target>
        </trans-unit>
        <trans-unit id="9cf7c1c189dc1e1eeefde0ce2bbaea1a5f64ea87" translate="yes" xml:space="preserve">
          <source>This function defines a set of variable settings for the named &lt;var&gt;class&lt;/var&gt;, which is a symbol. You can later assign the class to one or more directories, and Emacs will apply those variable settings to all files in those directories. The list in &lt;var&gt;variables&lt;/var&gt; can be of one of the two forms: &lt;code&gt;(&lt;var&gt;major-mode&lt;/var&gt; . &lt;var&gt;alist&lt;/var&gt;)&lt;/code&gt; or &lt;code&gt;(&lt;var&gt;directory&lt;/var&gt; . &lt;var&gt;list&lt;/var&gt;)&lt;/code&gt;. With the first form, if the file&amp;rsquo;s buffer turns on a mode that is derived from &lt;var&gt;major-mode&lt;/var&gt;, then all the variables in the associated &lt;var&gt;alist&lt;/var&gt; are applied; &lt;var&gt;alist&lt;/var&gt; should be of the form &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; . &lt;var&gt;value&lt;/var&gt;)&lt;/code&gt;. A special value &lt;code&gt;nil&lt;/code&gt; for &lt;var&gt;major-mode&lt;/var&gt; means the settings are applicable to any mode. In &lt;var&gt;alist&lt;/var&gt;, you can use a special &lt;var&gt;name&lt;/var&gt;: &lt;code&gt;subdirs&lt;/code&gt;. If the associated value is &lt;code&gt;nil&lt;/code&gt;, the alist is only applied to files in the relevant directory, not to those in any subdirectories.</source>
          <target state="translated">该函数为命名 &lt;var&gt;class&lt;/var&gt; 定义了一组变量设置，即符号。您可以稍后将类分配给一个或多个目录，Emacs会将这些变量设置应用于这些目录中的所有文件。列表中的 &lt;var&gt;variables&lt;/var&gt; 可以是两种形式之一： &lt;code&gt;(&lt;var&gt;major-mode&lt;/var&gt; . &lt;var&gt;alist&lt;/var&gt;)&lt;/code&gt; 或 &lt;code&gt;(&lt;var&gt;directory&lt;/var&gt; . &lt;var&gt;list&lt;/var&gt;)&lt;/code&gt; 。与第一形式中，如果对从导出的模式文件的缓冲圈 &lt;var&gt;major-mode&lt;/var&gt; ，然后在相关的所有变量 &lt;var&gt;alist&lt;/var&gt; 被施加; &lt;var&gt;alist&lt;/var&gt; 的形式 &lt;code&gt;(&lt;var&gt;name&lt;/var&gt; . &lt;var&gt;value&lt;/var&gt;)&lt;/code&gt; 。一个特殊的值 &lt;code&gt;nil&lt;/code&gt; 的 &lt;var&gt;major-mode&lt;/var&gt; 是指设置适用于任何模式。在 &lt;var&gt;alist&lt;/var&gt; ，可以使用特殊 &lt;var&gt;name&lt;/var&gt; ： &lt;code&gt;subdirs&lt;/code&gt; 。如果关联值为 &lt;code&gt;nil&lt;/code&gt; ，则列表仅应用于相关目录中的文件，而不应用于任何子目录中的文件。</target>
        </trans-unit>
        <trans-unit id="faec04c194731266469903b852c6341ea36345c6" translate="yes" xml:space="preserve">
          <source>This function defines an abbrev named &lt;var&gt;name&lt;/var&gt;, in &lt;var&gt;abbrev-table&lt;/var&gt;, to expand to &lt;var&gt;expansion&lt;/var&gt; and call &lt;var&gt;hook&lt;/var&gt;, with properties &lt;var&gt;props&lt;/var&gt; (see &lt;a href=&quot;abbrev-properties#Abbrev-Properties&quot;&gt;Abbrev Properties&lt;/a&gt;). The return value is &lt;var&gt;name&lt;/var&gt;. The &lt;code&gt;:system&lt;/code&gt; property in &lt;var&gt;props&lt;/var&gt; is treated specially here: if it has the value &lt;code&gt;force&lt;/code&gt;, then it will overwrite an existing definition even for a non-system abbrev of the same name.</source>
          <target state="translated">此函数在 &lt;var&gt;abbrev-table&lt;/var&gt; 中定义了一个名为 &lt;var&gt;name&lt;/var&gt; 的缩写，以使用属性 &lt;var&gt;props&lt;/var&gt; 扩展为 &lt;var&gt;expansion&lt;/var&gt; 并调用 &lt;var&gt;hook&lt;/var&gt; （请参见&lt;a href=&quot;abbrev-properties#Abbrev-Properties&quot;&gt;Abbrev Properties&lt;/a&gt;）。返回值为 &lt;var&gt;name&lt;/var&gt; 。 &lt;var&gt;props&lt;/var&gt; 中的 &lt;code&gt;:system&lt;/code&gt; 属性在这里经过特殊处理：如果它具有值 &lt;code&gt;force&lt;/code&gt; ，那么即使对于同名的非系统缩写，它也会覆盖现有的定义。</target>
        </trans-unit>
        <trans-unit id="b64ce113e54cf1ca7b1a7a040f03e44f54061eee" translate="yes" xml:space="preserve">
          <source>This function defines the function (or macro) named &lt;var&gt;function&lt;/var&gt; so as to load automatically from &lt;var&gt;filename&lt;/var&gt;. The string &lt;var&gt;filename&lt;/var&gt; specifies the file to load to get the real definition of &lt;var&gt;function&lt;/var&gt;.</source>
          <target state="translated">该函数定义了命名为 &lt;var&gt;function&lt;/var&gt; 的函数（或宏），以便从 &lt;var&gt;filename&lt;/var&gt; 中自动加载。字符串 &lt;var&gt;filename&lt;/var&gt; 指定要加载的文件，以获取 &lt;var&gt;function&lt;/var&gt; 的真实定义。</target>
        </trans-unit>
        <trans-unit id="d7839509e681231a82355725be2c1f90eb16c520" translate="yes" xml:space="preserve">
          <source>This function defines the symbol &lt;var&gt;bitmap&lt;/var&gt; as a new fringe bitmap, or replaces an existing bitmap with that name.</source>
          <target state="translated">此函数将符号 &lt;var&gt;bitmap&lt;/var&gt; 定义为新的条纹位图，或用该名称替换现有的位图。</target>
        </trans-unit>
        <trans-unit id="ba650ae4421a05ceff8ae8ab0d4e26a17faf9f78" translate="yes" xml:space="preserve">
          <source>This function defines the symbol &lt;var&gt;name&lt;/var&gt; as a function, with definition &lt;var&gt;definition&lt;/var&gt; (which can be any valid Lisp function). Its return value is &lt;em&gt;undefined&lt;/em&gt;.</source>
          <target state="translated">该函数将符号 &lt;var&gt;name&lt;/var&gt; 定义为具有定义 &lt;var&gt;definition&lt;/var&gt; 的函数（可以是任何有效的Lisp函数）。其返回值是&lt;em&gt;undefined&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="241af73e43bbbcc9ae37914bf9768b12235dbcde" translate="yes" xml:space="preserve">
          <source>This function defines the symbol &lt;var&gt;new-alias&lt;/var&gt; as a variable alias for symbol &lt;var&gt;base-variable&lt;/var&gt;. This means that retrieving the value of &lt;var&gt;new-alias&lt;/var&gt; returns the value of &lt;var&gt;base-variable&lt;/var&gt;, and changing the value of &lt;var&gt;new-alias&lt;/var&gt; changes the value of &lt;var&gt;base-variable&lt;/var&gt;. The two aliased variable names always share the same value and the same bindings.</source>
          <target state="translated">此函数将符号 &lt;var&gt;new-alias&lt;/var&gt; 定义为symbol &lt;var&gt;base-variable&lt;/var&gt; 的变量别名。这意味着检索 &lt;var&gt;new-alias&lt;/var&gt; 的值将返回 &lt;var&gt;base-variable&lt;/var&gt; 的值，而更改 &lt;var&gt;new-alias&lt;/var&gt; 的值将更改 &lt;var&gt;base-variable&lt;/var&gt; 的值。这两个别名变量名始终共享相同的值和相同的绑定。</target>
        </trans-unit>
        <trans-unit id="867f06138cc23b947830a31d334a9f8a4863a2cc" translate="yes" xml:space="preserve">
          <source>This function delays the initialization of &lt;var&gt;symbol&lt;/var&gt; to the next Emacs start. You normally use this function by specifying it as the &lt;code&gt;:initialize&lt;/code&gt; property of a customizable variable. (The argument &lt;var&gt;value&lt;/var&gt; is unused, and is provided only for compatibility with the form Custom expects.)</source>
          <target state="translated">此功能将 &lt;var&gt;symbol&lt;/var&gt; 的初始化延迟到下一次Emacs开始。您通常通过将其指定为可自定义变量的 &lt;code&gt;:initialize&lt;/code&gt; 属性来使用此函数。（参数 &lt;var&gt;value&lt;/var&gt; 未使用，仅为了与Custom Custom期望的格式兼容而提供。）</target>
        </trans-unit>
        <trans-unit id="b7c68a096f47a2935f90baf033e208a99aee57df" translate="yes" xml:space="preserve">
          <source>This function deletes &lt;var&gt;overlay&lt;/var&gt;. The overlay continues to exist as a Lisp object, and its property list is unchanged, but it ceases to be attached to the buffer it belonged to, and ceases to have any effect on display.</source>
          <target state="translated">此功能删除 &lt;var&gt;overlay&lt;/var&gt; 。叠加层继续作为Lisp对象存在，并且其属性列表不变，但是它不再附加到它所属的缓冲区，并且不再对显示产生任何影响。</target>
        </trans-unit>
        <trans-unit id="4aa48bc253fff0c2b56e64bed71cf2fb2c06cde1" translate="yes" xml:space="preserve">
          <source>This function deletes &lt;var&gt;symbol&lt;/var&gt; from the obarray &lt;var&gt;obarray&lt;/var&gt;. If &lt;code&gt;symbol&lt;/code&gt; is not actually in the obarray, &lt;code&gt;unintern&lt;/code&gt; does nothing. If &lt;var&gt;obarray&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the current obarray is used.</source>
          <target state="translated">该函数从obarray &lt;var&gt;obarray&lt;/var&gt; 中删除 &lt;var&gt;symbol&lt;/var&gt; 。如果 &lt;code&gt;symbol&lt;/code&gt; 实际上不在数组中，则 &lt;code&gt;unintern&lt;/code&gt; 不执行任何操作。如果 &lt;var&gt;obarray&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则使用当前的obarray。</target>
        </trans-unit>
        <trans-unit id="3a986330f1b1a59991f2bfe835ef34608c545971" translate="yes" xml:space="preserve">
          <source>This function deletes a process, killing it with a &lt;code&gt;SIGKILL&lt;/code&gt; signal if the process was running a program. The argument may be a process, the name of a process, a buffer, or the name of a buffer. (A buffer or buffer-name stands for the process that &lt;code&gt;get-buffer-process&lt;/code&gt; returns.) Calling &lt;code&gt;delete-process&lt;/code&gt; on a running process terminates it, updates the process status, and runs the sentinel immediately. If the process has already terminated, calling &lt;code&gt;delete-process&lt;/code&gt; has no effect on its status, or on the running of its sentinel (which will happen sooner or later).</source>
          <target state="translated">此函数删除进程，如果进程正在运行程序，则使用 &lt;code&gt;SIGKILL&lt;/code&gt; 信号将其杀死。参数可以是进程，进程名称，缓冲区或缓冲区名称。 （缓冲区或缓冲区名称代表 &lt;code&gt;get-buffer-process&lt;/code&gt; 返回的进程。）在正在运行 &lt;code&gt;delete-process&lt;/code&gt; 上调用delete- process会终止该进程，更新进程状态并立即运行哨兵。如果该进程已经终止，则调用 &lt;code&gt;delete-process&lt;/code&gt; 对其状态或其前哨的运行（迟早会发生）没有影响。</target>
        </trans-unit>
        <trans-unit id="2eded1311b490a6b75dac56d658cb61752456359" translate="yes" xml:space="preserve">
          <source>This function deletes all frames on &lt;var&gt;terminal&lt;/var&gt; and frees the resources used by it. It runs the abnormal hook &lt;code&gt;delete-terminal-functions&lt;/code&gt;, passing &lt;var&gt;terminal&lt;/var&gt; as the argument to each function.</source>
          <target state="translated">此功能删除 &lt;var&gt;terminal&lt;/var&gt; 上的所有帧并释放其使用的资源。它运行异常的hook &lt;code&gt;delete-terminal-functions&lt;/code&gt; ，将 &lt;var&gt;terminal&lt;/var&gt; 作为参数传递给每个函数。</target>
        </trans-unit>
        <trans-unit id="a25141ce20c1fc18086d2295f1fe79e74e5b6ba5" translate="yes" xml:space="preserve">
          <source>This function deletes all spaces and tabs around point. It returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此功能删除点周围的所有空格和制表符。返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b22952b5cd905759352be377eb159eda8b9cd4d8" translate="yes" xml:space="preserve">
          <source>This function deletes all windows showing &lt;var&gt;buffer-or-name&lt;/var&gt;, by calling &lt;code&gt;delete-window&lt;/code&gt; on those windows. &lt;var&gt;buffer-or-name&lt;/var&gt; should be a buffer, or the name of a buffer; if omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the current buffer. If there are no windows showing the specified buffer, this function does nothing. If the specified buffer is a minibuffer, an error is signaled.</source>
          <target state="translated">此功能通过在所有显示 &lt;var&gt;buffer-or-name&lt;/var&gt; &lt;code&gt;delete-window&lt;/code&gt; 上调用delete-window来删除这些窗口。 &lt;var&gt;buffer-or-name&lt;/var&gt; 应该是一个缓冲区，或者是缓冲区的名称；如果省略或为 &lt;code&gt;nil&lt;/code&gt; ，则默认为当前缓冲区。如果没有窗口显示指定的缓冲区，则此功能不执行任何操作。如果指定的缓冲区是迷你缓冲区，则会发出错误信号。</target>
        </trans-unit>
        <trans-unit id="c773fe6b85da4b8a00ead383daa3374cbaa03c2c" translate="yes" xml:space="preserve">
          <source>This function deletes blank lines surrounding point. If point is on a blank line with one or more blank lines before or after it, then all but one of them are deleted. If point is on an isolated blank line, then it is deleted. If point is on a nonblank line, the command deletes all blank lines immediately following it.</source>
          <target state="translated">此功能删除点周围的空行。如果点在一条空行上,前后有一条或多条空行,那么除了一条以外,其余的空行都被删除。如果点在一条孤立的空行上,则删除该空行。如果点在一个非空行上,则命令删除紧随其后的所有空行。</target>
        </trans-unit>
        <trans-unit id="0c6de7e4c574d8678210e2591d235f5186a413b0" translate="yes" xml:space="preserve">
          <source>This function deletes from &lt;var&gt;alist&lt;/var&gt; all the elements whose &lt;small&gt;CAR&lt;/small&gt; is &lt;code&gt;eq&lt;/code&gt; to &lt;var&gt;key&lt;/var&gt;, much as if you used &lt;code&gt;delq&lt;/code&gt; to delete each such element one by one. It returns the shortened alist, and often modifies the original list structure of &lt;var&gt;alist&lt;/var&gt;. For correct results, use the return value of &lt;code&gt;assq-delete-all&lt;/code&gt; rather than looking at the saved value of &lt;var&gt;alist&lt;/var&gt;.</source>
          <target state="translated">从这个函数删除 &lt;var&gt;alist&lt;/var&gt; 所有那些元素&lt;small&gt;CAR&lt;/small&gt;是 &lt;code&gt;eq&lt;/code&gt; 到 &lt;var&gt;key&lt;/var&gt; ，就像如果你使用 &lt;code&gt;delq&lt;/code&gt; 删除由每一个这样的元素之一。它返回缩短ALIST，并经常修改的原始列表结构 &lt;var&gt;alist&lt;/var&gt; 。为了获得正确的结果，请使用 &lt;code&gt;assq-delete-all&lt;/code&gt; 的返回值，而不要查看 &lt;var&gt;alist&lt;/var&gt; 的保存值。</target>
        </trans-unit>
        <trans-unit id="a6a1f28ce3b286fe40eade16534850cf2cf7af7a" translate="yes" xml:space="preserve">
          <source>This function deletes from &lt;var&gt;alist&lt;/var&gt; all the elements whose &lt;small&gt;CDR&lt;/small&gt; is &lt;code&gt;eq&lt;/code&gt; to &lt;var&gt;value&lt;/var&gt;. It returns the shortened alist, and often modifies the original list structure of &lt;var&gt;alist&lt;/var&gt;. &lt;code&gt;rassq-delete-all&lt;/code&gt; is like &lt;code&gt;assq-delete-all&lt;/code&gt; except that it compares the &lt;small&gt;CDR&lt;/small&gt; of each &lt;var&gt;alist&lt;/var&gt; association instead of the &lt;small&gt;CAR&lt;/small&gt;.</source>
          <target state="translated">从这个函数删除 &lt;var&gt;alist&lt;/var&gt; 所有那些元素&lt;small&gt;CDR&lt;/small&gt;是 &lt;code&gt;eq&lt;/code&gt; 要 &lt;var&gt;value&lt;/var&gt; 。它返回缩短ALIST，并经常修改的原始列表结构 &lt;var&gt;alist&lt;/var&gt; 。 &lt;code&gt;rassq-delete-all&lt;/code&gt; 与 &lt;code&gt;assq-delete-all&lt;/code&gt; 一样,只不过它比较每个 &lt;var&gt;alist&lt;/var&gt; 关联的&lt;small&gt;CDR&lt;/small&gt;而不是&lt;small&gt;CAR&lt;/small&gt;。&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e44dae3ab7df97403d687733d2cb6d3d1b389c5c" translate="yes" xml:space="preserve">
          <source>This function deletes specified text properties from the text between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; in the string or buffer &lt;var&gt;object&lt;/var&gt;. If &lt;var&gt;object&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it defaults to the current buffer.</source>
          <target state="translated">此函数从字符串或缓冲区 &lt;var&gt;object&lt;/var&gt; &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 之间的文本中删除指定的文本属性。如果 &lt;var&gt;object&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则默认为当前缓冲区。</target>
        </trans-unit>
        <trans-unit id="ebc7f2fa4888b95603a55882f0d1923392a23c68" translate="yes" xml:space="preserve">
          <source>This function deletes the buffer-local binding (if any) for &lt;var&gt;variable&lt;/var&gt; (a symbol) in the current buffer. As a result, the default binding of &lt;var&gt;variable&lt;/var&gt; becomes visible in this buffer. This typically results in a change in the value of &lt;var&gt;variable&lt;/var&gt;, since the default value is usually different from the buffer-local value just eliminated.</source>
          <target state="translated">此函数删除当前缓冲区中 &lt;var&gt;variable&lt;/var&gt; （符号）的缓冲区本地绑定（如果有）。结果， &lt;var&gt;variable&lt;/var&gt; 的默认绑定在此缓冲区中变为可见。这通常会导致 &lt;var&gt;variable&lt;/var&gt; 的值发生变化，因为默认值通常与刚刚消除的局部缓冲区值不同。</target>
        </trans-unit>
        <trans-unit id="65e05e2e60149a6f5270fd4956d1873e4211cc50" translate="yes" xml:space="preserve">
          <source>This function deletes the current buffer&amp;rsquo;s auto-save file if &lt;code&gt;delete-auto-save-files&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;. It is called every time a buffer is saved.</source>
          <target state="translated">如果 &lt;code&gt;delete-auto-save-files&lt;/code&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ,则此函数将删除当前缓冲区的自动保存文件。每次保存缓冲区时都会调用它。</target>
        </trans-unit>
        <trans-unit id="0cbd0b5a1d6b380094c3b28d4488f8f67e955d2a" translate="yes" xml:space="preserve">
          <source>This function deletes the entire text of the current buffer (&lt;em&gt;not&lt;/em&gt; just the accessible portion), leaving it empty. If the buffer is read-only, it signals a &lt;code&gt;buffer-read-only&lt;/code&gt; error; if some of the text in it is read-only, it signals a &lt;code&gt;text-read-only&lt;/code&gt; error. Otherwise, it deletes the text without asking for any confirmation. It returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此函数删除当前缓冲区的整个文本（&lt;em&gt;而&lt;/em&gt;不仅仅是可访问部分），将其保留为空。如果缓冲区是只读的，则表示 &lt;code&gt;buffer-read-only&lt;/code&gt; 错误；如果其中的某些文本是只读的，则表示 &lt;code&gt;text-read-only&lt;/code&gt; 错误。否则，它将删除文本而不要求任何确认。返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6e81a8ff03ef50332d3121648c49bd9e21de8cf7" translate="yes" xml:space="preserve">
          <source>This function deletes the entry at point.</source>
          <target state="translated">此功能删除点的条目。</target>
        </trans-unit>
        <trans-unit id="ec9a54be0d0e87a03f1a074dbb499071099163c7" translate="yes" xml:space="preserve">
          <source>This function deletes the frame &lt;var&gt;frame&lt;/var&gt;. The argument &lt;var&gt;frame&lt;/var&gt; must specify a live frame (see below) and defaults to the selected frame.</source>
          <target state="translated">此功能删除 &lt;var&gt;frame&lt;/var&gt; 。参数 &lt;var&gt;frame&lt;/var&gt; 必须指定一个实时框架（请参见下文），并且默认为所选框架。</target>
        </trans-unit>
        <trans-unit id="98a5914369bed1abd5b9ed6cfac8426cbfd99dcc" translate="yes" xml:space="preserve">
          <source>This function deletes the text between positions &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; in the current buffer, and returns a string containing the text just deleted.</source>
          <target state="translated">此函数删除当前缓冲区中 &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 位置之间的文本，并返回包含刚删除的文本的字符串。</target>
        </trans-unit>
        <trans-unit id="39e960078b366831bc92f73e84820f9fb8103b09" translate="yes" xml:space="preserve">
          <source>This function deletes the text of the field specified by &lt;var&gt;pos&lt;/var&gt;.</source>
          <target state="translated">此函数删除 &lt;var&gt;pos&lt;/var&gt; 指定的字段的文本。</target>
        </trans-unit>
        <trans-unit id="665c8fde5fba88ca75178c1492080f5a7f76f637" translate="yes" xml:space="preserve">
          <source>This function describes the category specifications in the current category table. It inserts the descriptions in a buffer, and then displays that buffer. If &lt;var&gt;buffer-or-name&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it describes the category table of that buffer instead.</source>
          <target state="translated">此功能描述当前类别表中的类别规格。它将描述插入缓冲区中，然后显示该缓冲区。如果 &lt;var&gt;buffer-or-name&lt;/var&gt; 为non- &lt;code&gt;nil&lt;/code&gt; ，则改为描述该缓冲区的类别表。</target>
        </trans-unit>
        <trans-unit id="67c3cd512cd46b7af48452e079681adccc41c42b" translate="yes" xml:space="preserve">
          <source>This function destroys the fringe bitmap identified by &lt;var&gt;bitmap&lt;/var&gt;. If &lt;var&gt;bitmap&lt;/var&gt; identifies a standard fringe bitmap, it actually restores the standard definition of that bitmap, instead of eliminating it entirely.</source>
          <target state="translated">此功能销毁由bitmap标识的边缘位 &lt;var&gt;bitmap&lt;/var&gt; 。如果 &lt;var&gt;bitmap&lt;/var&gt; 标识了标准边缘位图，则它实际上将恢复该位图的标准定义，而不是完全消除它。</target>
        </trans-unit>
        <trans-unit id="f56fa1db79f32a161d110ca6c081fe480399104b" translate="yes" xml:space="preserve">
          <source>This function destructively removes all &lt;code&gt;equal&lt;/code&gt; duplicates from &lt;var&gt;list&lt;/var&gt;, stores the result in &lt;var&gt;list&lt;/var&gt; and returns it. Of several &lt;code&gt;equal&lt;/code&gt; occurrences of an element in &lt;var&gt;list&lt;/var&gt;, &lt;code&gt;delete-dups&lt;/code&gt; keeps the first one.</source>
          <target state="translated">此函数以破坏性的方式从 &lt;var&gt;list&lt;/var&gt; 删除所有 &lt;code&gt;equal&lt;/code&gt; 重复项，将结果存储在 &lt;var&gt;list&lt;/var&gt; 并返回。几个 &lt;code&gt;equal&lt;/code&gt; 在一个元素出现 &lt;var&gt;list&lt;/var&gt; ， &lt;code&gt;delete-dups&lt;/code&gt; 保持第一位。</target>
        </trans-unit>
        <trans-unit id="406e9fff52bcecf7604ddb22d61cc6cb033ff7ed" translate="yes" xml:space="preserve">
          <source>This function destructively removes all elements &lt;code&gt;eq&lt;/code&gt; to &lt;var&gt;object&lt;/var&gt; from &lt;var&gt;list&lt;/var&gt;, and returns the resulting list. The letter &amp;lsquo;</source>
          <target state="translated">此函数破坏性移除所有元素 &lt;code&gt;eq&lt;/code&gt; 到 &lt;var&gt;object&lt;/var&gt; 从 &lt;var&gt;list&lt;/var&gt; ，并返回生成的列表。字母'</target>
        </trans-unit>
        <trans-unit id="c9013590bfc668217366c5b1ef88adbd49027ea9" translate="yes" xml:space="preserve">
          <source>This function determines the responsible VC backend of the given &lt;var&gt;file&lt;/var&gt;. For example, if</source>
          <target state="translated">此函数确定给定 &lt;var&gt;file&lt;/var&gt; 的负责VC后端。例如，如果</target>
        </trans-unit>
        <trans-unit id="c1d5e60ae074c5c44688b8c62392a85d416e09a4" translate="yes" xml:space="preserve">
          <source>This function determines whether any command input is currently available to be read. It returns immediately, with value &lt;code&gt;t&lt;/code&gt; if there is available input, &lt;code&gt;nil&lt;/code&gt; otherwise. On rare occasions it may return &lt;code&gt;t&lt;/code&gt; when no input is available.</source>
          <target state="translated">此功能确定当前是否可以读取任何命令输入。它立即返回，如果有可用输入，则返回值 &lt;code&gt;t&lt;/code&gt; ，否则返回 &lt;code&gt;nil&lt;/code&gt; 。在极少数情况下，如果没有可用的输入，它可能会返回 &lt;code&gt;t&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3c1599c3b0d99eeae3cc3db565bcb11a8c1beab1" translate="yes" xml:space="preserve">
          <source>This function determines whether the text in the current buffer directly following point matches the regular expression &lt;var&gt;regexp&lt;/var&gt;. &amp;ldquo;Directly following&amp;rdquo; means precisely that: the search is &amp;ldquo;anchored&amp;rdquo; and it can succeed only starting with the first character following point. The result is &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">此函数确定当前缓冲区中紧随其后的文本是否与正则表达式 &lt;var&gt;regexp&lt;/var&gt; 相匹配。&amp;ldquo;直接跟随&amp;rdquo;精确地表示：搜索是&amp;ldquo;锚定的&amp;rdquo;，并且只有从第一个字符跟随点开始才能成功。如果是，则结果为 &lt;code&gt;t&lt;/code&gt; ，否则为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="de88f55cf8a58f44acce372c90bff63c4365aa54" translate="yes" xml:space="preserve">
          <source>This function disables the Custom theme named &lt;var&gt;theme&lt;/var&gt;. The theme remains loaded, so that a subsequent call to &lt;code&gt;enable-theme&lt;/code&gt; will re-enable it.</source>
          <target state="translated">此功能禁用名为 &lt;var&gt;theme&lt;/var&gt; 的自定义主题。主题保持加载状态，以便随后对 &lt;code&gt;enable-theme&lt;/code&gt; 的调用将重新启用它。</target>
        </trans-unit>
        <trans-unit id="aea34f686d675cce544698bbb38560ec6c6c78ff" translate="yes" xml:space="preserve">
          <source>This function discards text properties, regardless of the value of &lt;code&gt;minibuffer-allow-text-properties&lt;/code&gt;.</source>
          <target state="translated">无论 &lt;code&gt;minibuffer-allow-text-properties&lt;/code&gt; 的值如何，此函数都将丢弃文本属性。</target>
        </trans-unit>
        <trans-unit id="691cab3ec10c362d521d557c4b4e94fe09bc5916" translate="yes" xml:space="preserve">
          <source>This function discards the contents of the terminal input buffer and cancels any keyboard macro that might be in the process of definition. It returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此函数丢弃终端输入缓冲区的内容，并取消可能正在定义过程中的所有键盘宏。返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="07b2c8a19a13e83c6fda40ebea0c658d73ee59f8" translate="yes" xml:space="preserve">
          <source>This function discards the undo list of &lt;var&gt;buffer-or-name&lt;/var&gt;, and disables further recording of undo information. As a result, it is no longer possible to undo either previous changes or any subsequent changes. If the undo list of &lt;var&gt;buffer-or-name&lt;/var&gt; is already disabled, this function has no effect.</source>
          <target state="translated">该功能将丢弃 &lt;var&gt;buffer-or-name&lt;/var&gt; 的撤消列表，并禁止进一步记录撤消信息。结果，将无法撤消先前的更改或任何后续的更改。如果 &lt;var&gt;buffer-or-name&lt;/var&gt; 的撤消列表已被禁用，则此功能无效。</target>
        </trans-unit>
        <trans-unit id="07ffa70365a85a8ae67acf4c96ab6dde2d5f0414" translate="yes" xml:space="preserve">
          <source>This function displays &lt;var&gt;buffer&lt;/var&gt; in a side window of the selected frame. It returns the window used for displaying &lt;var&gt;buffer&lt;/var&gt;, &lt;code&gt;nil&lt;/code&gt; if no such window can be found or created.</source>
          <target state="translated">此功能在所选框架的侧窗中显示 &lt;var&gt;buffer&lt;/var&gt; 。它返回用于显示 &lt;var&gt;buffer&lt;/var&gt; 的窗口，如果找不到或创建这样的窗口，则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5a772aa6b8557b1f80bbdf908ae27071d6f43d3b" translate="yes" xml:space="preserve">
          <source>This function displays &lt;var&gt;completions&lt;/var&gt; to the stream in &lt;code&gt;standard-output&lt;/code&gt;, usually a buffer. (See &lt;a href=&quot;read-and-print#Read-and-Print&quot;&gt;Read and Print&lt;/a&gt;, for more information about streams.) The argument &lt;var&gt;completions&lt;/var&gt; is normally a list of completions just returned by &lt;code&gt;all-completions&lt;/code&gt;, but it does not have to be. Each element may be a symbol or a string, either of which is simply printed. It can also be a list of two strings, which is printed as if the strings were concatenated. The first of the two strings is the actual completion, the second string serves as annotation.</source>
          <target state="translated">此函数在 &lt;code&gt;standard-output&lt;/code&gt; （通常是缓冲区）中显示流的 &lt;var&gt;completions&lt;/var&gt; 。 （有关流的更多信息，请参见&lt;a href=&quot;read-and-print#Read-and-Print&quot;&gt;Read and Print&lt;/a&gt;。）参数 &lt;var&gt;completions&lt;/var&gt; 通常是 &lt;code&gt;all-completions&lt;/code&gt; 返回的完成列表，但不一定如此。每个元素可以是符号或字符串，可以简单地打印其中的任何一个。它也可以是两个字符串的列表，就像字符串被串联在一起一样打印。两个字符串中的第一个是实际完成，第二个字符串用作注释。</target>
        </trans-unit>
        <trans-unit id="11450a09c728eadb159e2447a6c4fda0feeec2eb" translate="yes" xml:space="preserve">
          <source>This function displays &lt;var&gt;string&lt;/var&gt; temporarily at the end of the minibuffer text, for a few seconds, or until the next input event arrives, whichever comes first. The variable &lt;code&gt;minibuffer-message-timeout&lt;/code&gt; specifies the number of seconds to wait in the absence of input. It defaults to 2. If &lt;var&gt;args&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the actual message is obtained by passing &lt;var&gt;string&lt;/var&gt; and &lt;var&gt;args&lt;/var&gt; through &lt;code&gt;format-message&lt;/code&gt;. See &lt;a href=&quot;formatting-strings#Formatting-Strings&quot;&gt;Formatting Strings&lt;/a&gt;.</source>
          <target state="translated">此函数在微型缓冲区文本的末尾临时显示 &lt;var&gt;string&lt;/var&gt; ，持续几秒钟，或者直到下一个输入事件到达为止，以先到者为准。变量 &lt;code&gt;minibuffer-message-timeout&lt;/code&gt; 指定在没有输入的情况下等待的秒数。默认值为2。如果 &lt;var&gt;args&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则通过将 &lt;var&gt;string&lt;/var&gt; 和 &lt;var&gt;args&lt;/var&gt; 传递给 &lt;code&gt;format-message&lt;/code&gt; 获得实际的消息。请参阅&lt;a href=&quot;formatting-strings#Formatting-Strings&quot;&gt;格式化字符串&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cc762f98379dbaa6209ec962aa4c0277567eb184" translate="yes" xml:space="preserve">
          <source>This function displays a description of the display table &lt;var&gt;display-table&lt;/var&gt; in a help buffer.</source>
          <target state="translated">此功能在帮助缓冲区中显示显示表 &lt;var&gt;display-table&lt;/var&gt; 的描述。</target>
        </trans-unit>
        <trans-unit id="a33c330efcbd0f5ca0a1d003af781424d22dd17d" translate="yes" xml:space="preserve">
          <source>This function displays a message in the echo area. &lt;var&gt;format-string&lt;/var&gt; is a format string, and &lt;var&gt;arguments&lt;/var&gt; are the objects for its format specifications, like in the &lt;code&gt;format-message&lt;/code&gt; function (see &lt;a href=&quot;formatting-strings#Formatting-Strings&quot;&gt;Formatting Strings&lt;/a&gt;). The resulting formatted string is displayed in the echo area; if it contains &lt;code&gt;face&lt;/code&gt; text properties, it is displayed with the specified faces (see &lt;a href=&quot;faces#Faces&quot;&gt;Faces&lt;/a&gt;). The string is also added to the</source>
          <target state="translated">此功能在回显区域显示一条消息。 &lt;var&gt;format-string&lt;/var&gt; 是格式字符串， &lt;var&gt;arguments&lt;/var&gt; 是其格式规范的对象，例如 &lt;code&gt;format-message&lt;/code&gt; 函数（请参阅&lt;a href=&quot;formatting-strings#Formatting-Strings&quot;&gt;Formatting Strings&lt;/a&gt;）。生成的格式化字符串显示在回显区域中。如果包含 &lt;code&gt;face&lt;/code&gt; 文本属性，则显示指定的面部（请参见&lt;a href=&quot;faces#Faces&quot;&gt;Faces&lt;/a&gt;）。字符串也被添加到</target>
        </trans-unit>
        <trans-unit id="6b5a575622ec61ff75b5256bbb4c2f74edbbc7f9" translate="yes" xml:space="preserve">
          <source>This function displays a message like &lt;code&gt;message&lt;/code&gt;, but may display it in a dialog box instead of the echo area. If this function is called in a command that was invoked using the mouse&amp;mdash;more precisely, if &lt;code&gt;last-nonmenu-event&lt;/code&gt; (see &lt;a href=&quot;command-loop-info#Command-Loop-Info&quot;&gt;Command Loop Info&lt;/a&gt;) is either &lt;code&gt;nil&lt;/code&gt; or a list&amp;mdash;then it uses a dialog box or pop-up menu to display the message. Otherwise, it uses the echo area. (This is the same criterion that &lt;code&gt;y-or-n-p&lt;/code&gt; uses to make a similar decision; see &lt;a href=&quot;yes_002dor_002dno-queries#Yes_002dor_002dNo-Queries&quot;&gt;Yes-or-No Queries&lt;/a&gt;.)</source>
          <target state="translated">此功能显示类似 &lt;code&gt;message&lt;/code&gt; 的消息，但可以在对话框中而不是回显区域中显示。如果在使用鼠标调用的命令中调用了此函数-更确切地说，如果 &lt;code&gt;last-nonmenu-event&lt;/code&gt; （请参见&lt;a href=&quot;command-loop-info#Command-Loop-Info&quot;&gt;Command Loop Info&lt;/a&gt;）为 &lt;code&gt;nil&lt;/code&gt; 或列表，则它将使用对话框或弹出菜单来显示消息。否则，它将使用回声区域。 （这是 &lt;code&gt;y-or-n-p&lt;/code&gt; 用来做出类似决定的相同标准；请参阅&lt;a href=&quot;yes_002dor_002dno-queries#Yes_002dor_002dNo-Queries&quot;&gt;是或否查询&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="5c931333ca4f51446cc07248ea32a3c663c7ef7c" translate="yes" xml:space="preserve">
          <source>This function displays a message like &lt;code&gt;message&lt;/code&gt;, but uses a dialog box (or a pop-up menu) whenever that is possible. If it is impossible to use a dialog box or pop-up menu, because the terminal does not support them, then &lt;code&gt;message-box&lt;/code&gt; uses the echo area, like &lt;code&gt;message&lt;/code&gt;.</source>
          <target state="translated">此功能显示类似 &lt;code&gt;message&lt;/code&gt; 的消息，但在可能的情况下使用对话框（或弹出菜单）。如果由于终端不支持而无法使用对话框或弹出菜单，则 &lt;code&gt;message-box&lt;/code&gt; 使用echo区域，例如 &lt;code&gt;message&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="47e1a294354a03c6ac03f0b5805c17606f8fb2e9" translate="yes" xml:space="preserve">
          <source>This function displays a pop-up dialog box and returns an indication of what selection the user makes. The argument &lt;var&gt;contents&lt;/var&gt; specifies the alternatives to offer; it has this format:</source>
          <target state="translated">此功能显示一个弹出对话框，并返回用户进行选择的指示。参数 &lt;var&gt;contents&lt;/var&gt; 指定了提供的替代方案；它具有以下格式：</target>
        </trans-unit>
        <trans-unit id="cd031b81f6a39bd76d9562d33ff43b232c1fff02" translate="yes" xml:space="preserve">
          <source>This function displays a pop-up menu and returns an indication of what selection the user makes.</source>
          <target state="translated">该函数显示一个弹出式菜单,并返回用户所做选择的指示。</target>
        </trans-unit>
        <trans-unit id="edb4f050366b00dbaab26bb985b84d86d52c62a8" translate="yes" xml:space="preserve">
          <source>This function displays an MS-Windows tray notification as specified by &lt;var&gt;params&lt;/var&gt;. MS-Windows tray notifications are displayed in a balloon from an icon in the notification area of the taskbar.</source>
          <target state="translated">此功能显示由 &lt;var&gt;params&lt;/var&gt; 指定的MS-Windows托盘通知。MS-Windows托盘通知从任务栏通知区域中的图标显示在气球中。</target>
        </trans-unit>
        <trans-unit id="f6430d39bef5c137459f23c3bef79e96ac9e579a" translate="yes" xml:space="preserve">
          <source>This function displays the buffer specified by &lt;var&gt;buffer-or-name&lt;/var&gt; in a new frame. It uses the function &lt;code&gt;pop-to-buffer&lt;/code&gt; internally (see below).</source>
          <target state="translated">此函数在新帧中显示由 &lt;var&gt;buffer-or-name&lt;/var&gt; 指定的缓冲区。它在内部使用 &lt;code&gt;pop-to-buffer&lt;/code&gt; 功能（见下文）。</target>
        </trans-unit>
        <trans-unit id="1a5d1db9eb92ae20a9d5a6708abaf5f6264b1827" translate="yes" xml:space="preserve">
          <source>This function displays the buffer specified by &lt;var&gt;buffer-or-name&lt;/var&gt; in some window other than the selected window. It uses the function &lt;code&gt;pop-to-buffer&lt;/code&gt; internally (see below).</source>
          <target state="translated">此功能在选定窗口以外的某些窗口中显示由 &lt;var&gt;buffer-or-name&lt;/var&gt; 指定的缓冲区。它在内部使用 &lt;code&gt;pop-to-buffer&lt;/code&gt; 功能（见下文）。</target>
        </trans-unit>
        <trans-unit id="0c1df81bfd14534ee9db8acc6be778b68275428c" translate="yes" xml:space="preserve">
          <source>This function displays the message &lt;var&gt;message&lt;/var&gt;, which may be either a string or a buffer. If it is shorter than the maximum height of the echo area, as defined by &lt;code&gt;max-mini-window-height&lt;/code&gt;, it is displayed in the echo area, using &lt;code&gt;message&lt;/code&gt;. Otherwise, &lt;code&gt;display-buffer&lt;/code&gt; is used to show it in a pop-up buffer.</source>
          <target state="translated">此函数显示消息 &lt;var&gt;message&lt;/var&gt; ，它可以是字符串或缓冲区。如果它小于回声区域的最大高度（如 &lt;code&gt;max-mini-window-height&lt;/code&gt; 所定义），则使用 &lt;code&gt;message&lt;/code&gt; 将其显示在回声区域中。否则，将使用 &lt;code&gt;display-buffer&lt;/code&gt; 将其显示在弹出缓冲区中。</target>
        </trans-unit>
        <trans-unit id="ff36aece885413f411780f8d5fb5966616c7fe43" translate="yes" xml:space="preserve">
          <source>This function displays warning or advisory messages in various peculiar cases, unless the optional argument &lt;var&gt;nowarn&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;. For example, if it needs to create a buffer, and there is no file named &lt;var&gt;filename&lt;/var&gt;, it displays the message &amp;lsquo;</source>
          <target state="translated">除非可选参数 &lt;var&gt;nowarn&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，否则此函数将在各种特殊情况下显示警告或建议消息。例如，如果需要创建缓冲区，并且没有名为 &lt;var&gt;filename&lt;/var&gt; 的文件，则显示消息&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="698bf35dab732d0a22abe1ca39f2769b26a9617c" translate="yes" xml:space="preserve">
          <source>This function does not always allocate a new string. Callers are advised not rely on the result being a new string nor on it being &lt;code&gt;eq&lt;/code&gt; to an existing string.</source>
          <target state="translated">此函数并不总是分配新的字符串。建议调用者不要依赖结果为新字符串，也不要依赖于现有字符串的 &lt;code&gt;eq&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="74b2cb7015961f5df871ed278347a83d92987bbb" translate="yes" xml:space="preserve">
          <source>This function does not bind &lt;code&gt;undo-in-progress&lt;/code&gt;.</source>
          <target state="translated">此功能不绑定 &lt;code&gt;undo-in-progress&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fc36816e826444570c444dbabb85c0fb4d5e663d" translate="yes" xml:space="preserve">
          <source>This function does not compute the hash directly from the internal representation of &lt;var&gt;object&lt;/var&gt;&amp;rsquo;s text (see &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Text Representations&lt;/a&gt;). Instead, it encodes the text using a coding system (see &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Coding Systems&lt;/a&gt;), and computes the hash from that encoded text. If &lt;var&gt;object&lt;/var&gt; is a buffer, the coding system used is the one which would be chosen by default for writing the text into a file. If &lt;var&gt;object&lt;/var&gt; is a string, the user&amp;rsquo;s preferred coding system is used (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Recognize-Coding.html#Recognize-Coding&quot;&gt;Recognize Coding&lt;/a&gt; in</source>
          <target state="translated">此函数不会直接根据 &lt;var&gt;object&lt;/var&gt; 文本的内部表示来计算哈希（请参见&lt;a href=&quot;text-representations#Text-Representations&quot;&gt;文本表示&lt;/a&gt;）。取而代之的是，它使用编码系统（请参阅&lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Coding Systems&lt;/a&gt;）对文本进行编码，并根据该编码后的文本计算哈希值。如果 &lt;var&gt;object&lt;/var&gt; 是缓冲区，则使用的编码系统是默认选择的编码系统，用于将文本写入文件。如果 &lt;var&gt;object&lt;/var&gt; 是一个字符串，用户的优选的编码系统被使用（见&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Recognize-Coding.html#Recognize-Coding&quot;&gt;识别编码&lt;/a&gt;在</target>
        </trans-unit>
        <trans-unit id="2a9b7828342a57919a718cace81dfd3faa4f5c11" translate="yes" xml:space="preserve">
          <source>This function does not convert unibyte character codes 128 through 255 to multibyte characters, not even if the current buffer is a multibyte buffer. See &lt;a href=&quot;converting-representations#Converting-Representations&quot;&gt;Converting Representations&lt;/a&gt;.</source>
          <target state="translated">即使当前缓冲区是多字节缓冲区，此函数也不会将128到255的单字节字符代码转换为多字节字符。请参见&lt;a href=&quot;converting-representations#Converting-Representations&quot;&gt;转换制图表达&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e489c43f6386b63034a5480b7fcd68835882f265" translate="yes" xml:space="preserve">
          <source>This function does not delete any of &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s child frames (see &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;). If &lt;var&gt;frame&lt;/var&gt; is a child frame, it deletes &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s siblings only.</source>
          <target state="translated">此功能不会删除任何 &lt;var&gt;frame&lt;/var&gt; 的子框架（请参见&lt;a href=&quot;child-frames#Child-Frames&quot;&gt;子框架&lt;/a&gt;）。如果 &lt;var&gt;frame&lt;/var&gt; 是子框架，则只会删除 &lt;var&gt;frame&lt;/var&gt; 的兄弟姐妹。</target>
        </trans-unit>
        <trans-unit id="2777b714f040609dc0c2323e82f37a4dd64dd46c" translate="yes" xml:space="preserve">
          <source>This function does not display the buffer in any window, so the user cannot necessarily see the buffer. But Lisp programs will now operate on it.</source>
          <target state="translated">这个函数不会在任何窗口中显示缓冲区,所以用户不一定能看到缓冲区。但现在Lisp程序将对其进行操作。</target>
        </trans-unit>
        <trans-unit id="122bef82eeec1101e5c58958caafc9ca13f4a090" translate="yes" xml:space="preserve">
          <source>This function does not do a redisplay immediately; Emacs does that as it waits for input, or when the function &lt;code&gt;redisplay&lt;/code&gt; is called.</source>
          <target state="translated">此功能不会立即重新显示；Emacs在等待输入或调用函数 &lt;code&gt;redisplay&lt;/code&gt; 时执行此操作。</target>
        </trans-unit>
        <trans-unit id="0019543845c75e764794fc65b8e8ed110bc2a16f" translate="yes" xml:space="preserve">
          <source>This function does not expand environment variables. Only &lt;code&gt;substitute-in-file-name&lt;/code&gt; does that. See &lt;a href=&quot;file-name-expansion#Definition-of-substitute_002din_002dfile_002dname&quot;&gt;Definition of substitute-in-file-name&lt;/a&gt;.</source>
          <target state="translated">此函数不会扩展环境变量。只有 &lt;code&gt;substitute-in-file-name&lt;/code&gt; 做到这一点。请参阅&amp;ldquo;&lt;a href=&quot;file-name-expansion#Definition-of-substitute_002din_002dfile_002dname&quot;&gt;文件中替代名称&amp;rdquo;的定义&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7f807e27bf2d141816a3e1413a9ea7f32af703aa" translate="yes" xml:space="preserve">
          <source>This function does not follow symbolic links.</source>
          <target state="translated">该功能不遵循符号链接。</target>
        </trans-unit>
        <trans-unit id="9b080dea42c33ee8f7092da141061fd032eaa75d" translate="yes" xml:space="preserve">
          <source>This function does not move point across a field boundary (see &lt;a href=&quot;fields#Fields&quot;&gt;Fields&lt;/a&gt;) unless doing so would move beyond there to a different line; therefore, if &lt;var&gt;count&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or 1, and point starts at a field boundary, point does not move. To ignore field boundaries, bind &lt;code&gt;inhibit-field-text-motion&lt;/code&gt; to &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">除非这样做会超出该范围移动到另一条线，否则此函数不会跨字段边界移动点（请参见&lt;a href=&quot;fields#Fields&quot;&gt;Fields&lt;/a&gt;）。因此，如果 &lt;var&gt;count&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; 或1，并且点在字段边界处开始，则点不会移动。要忽略字段边界，请将 &lt;code&gt;inhibit-field-text-motion&lt;/code&gt; 绑定到 &lt;code&gt;t&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d7727a951cc8ae3ca2bd1aee843c49be7e3a2315" translate="yes" xml:space="preserve">
          <source>This function does not move point across a field boundary (see &lt;a href=&quot;fields#Fields&quot;&gt;Fields&lt;/a&gt;) unless doing so would move beyond there to a different line; therefore, if &lt;var&gt;count&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or 1, and point starts at a field boundary, point does not move. To ignore field boundaries, either bind &lt;code&gt;inhibit-field-text-motion&lt;/code&gt; to &lt;code&gt;t&lt;/code&gt;, or use the &lt;code&gt;forward-line&lt;/code&gt; function instead. For instance, &lt;code&gt;(forward-line 0)&lt;/code&gt; does the same thing as &lt;code&gt;(beginning-of-line)&lt;/code&gt;, except that it ignores field boundaries.</source>
          <target state="translated">除非这样做会超出该范围移动到另一条线，否则此函数不会跨字段边界移动点（请参见&lt;a href=&quot;fields#Fields&quot;&gt;Fields&lt;/a&gt;）。因此，如果 &lt;var&gt;count&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; 或1，并且点在字段边界处开始，则点不会移动。要忽略字段边界，可以将 &lt;code&gt;inhibit-field-text-motion&lt;/code&gt; 绑定到 &lt;code&gt;t&lt;/code&gt; ，或者使用 &lt;code&gt;forward-line&lt;/code&gt; 功能。例如， &lt;code&gt;(forward-line 0)&lt;/code&gt; 与 &lt;code&gt;(beginning-of-line)&lt;/code&gt; 做相同的事情，除了它忽略字段边界。</target>
        </trans-unit>
        <trans-unit id="8a376ab76b4268d72435943b41d27e0b10156847" translate="yes" xml:space="preserve">
          <source>This function does not move point, but it does update the match data. See &lt;a href=&quot;match-data#Match-Data&quot;&gt;Match Data&lt;/a&gt;. If you need to test for a match without modifying the match data, use &lt;code&gt;looking-at-p&lt;/code&gt;, described below.</source>
          <target state="translated">此功能不会移动点，但会更新匹配数据。请参阅&lt;a href=&quot;match-data#Match-Data&quot;&gt;匹配数据&lt;/a&gt;。如果您需要测试匹配项而不修改匹配数据，请使用以下所述的 &lt;code&gt;looking-at-p&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="492e68f73768afc8c23b0ad306165934009086b0" translate="yes" xml:space="preserve">
          <source>This function does not return a window whose &lt;code&gt;no-other-window&lt;/code&gt; parameter is non-&lt;code&gt;nil&lt;/code&gt; (see &lt;a href=&quot;window-parameters#Window-Parameters&quot;&gt;Window Parameters&lt;/a&gt;). If the nearest window&amp;rsquo;s &lt;code&gt;no-other-window&lt;/code&gt; parameter is non-&lt;code&gt;nil&lt;/code&gt;, this function tries to find another window in the indicated direction whose &lt;code&gt;no-other-window&lt;/code&gt; parameter is &lt;code&gt;nil&lt;/code&gt;. If the optional argument &lt;var&gt;ignore&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, a window may be returned even if its &lt;code&gt;no-other-window&lt;/code&gt; parameter is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此函数不会返回 &lt;code&gt;no-other-window&lt;/code&gt; 参数为 &lt;code&gt;nil&lt;/code&gt; 的&lt;a href=&quot;window-parameters#Window-Parameters&quot;&gt;窗口&lt;/a&gt;（请参见Window Parameters）。如果最近的窗口的 &lt;code&gt;no-other-window&lt;/code&gt; 参数为 &lt;code&gt;nil&lt;/code&gt; ，则此函数尝试沿指示的方向查找另一个窗口，其 &lt;code&gt;no-other-window&lt;/code&gt; 参数为 &lt;code&gt;nil&lt;/code&gt; 。如果可选参数 &lt;var&gt;ignore&lt;/var&gt; 是非 &lt;code&gt;nil&lt;/code&gt; ，一个窗口可以返回即使它 &lt;code&gt;no-other-window&lt;/code&gt; 的参数是不 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="14b153f585d42cbd613426c81cb7afb6ac6fc9f7" translate="yes" xml:space="preserve">
          <source>This function does not select a window that has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;no-other-window&lt;/code&gt; window parameter (see &lt;a href=&quot;window-parameters#Window-Parameters&quot;&gt;Window Parameters&lt;/a&gt;), provided that &lt;code&gt;ignore-window-parameters&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;ignore-window-parameters&lt;/code&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则此函数不会选择具有非 &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;no-other-window&lt;/code&gt; 窗口参数的窗口（请参见&lt;a href=&quot;window-parameters#Window-Parameters&quot;&gt;Window Parameters&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="16ab22a6ff098e30bc2ba92a546ad39298b42d22" translate="yes" xml:space="preserve">
          <source>This function does not try to invoke file name handlers for &lt;var&gt;program&lt;/var&gt; or for the rest of &lt;var&gt;args&lt;/var&gt;. For that reason, if &lt;var&gt;program&lt;/var&gt; or any of &lt;var&gt;args&lt;/var&gt; use the remote-file syntax (see &lt;a href=&quot;magic-file-names#Magic-File-Names&quot;&gt;Magic File Names&lt;/a&gt;), they must be converted either to file names relative to &lt;code&gt;default-directory&lt;/code&gt;, or to names that identify the files locally on the remote host, by running them through &lt;code&gt;file-local-name&lt;/code&gt;.</source>
          <target state="translated">此函数不会尝试为 &lt;var&gt;program&lt;/var&gt; 或 &lt;var&gt;args&lt;/var&gt; 的其余部分调用文件名处理程序。因此，如果 &lt;var&gt;program&lt;/var&gt; 或任何 &lt;var&gt;args&lt;/var&gt; 使用远程文件语法（请参见&lt;a href=&quot;magic-file-names#Magic-File-Names&quot;&gt;Magic File Names&lt;/a&gt;），则必须将它们转换为相对于 &lt;code&gt;default-directory&lt;/code&gt; 的文件名，或者转换为标识远程主机本地本地文件的名称，通过 &lt;code&gt;file-local-name&lt;/code&gt; 运行它们。</target>
        </trans-unit>
        <trans-unit id="ccb0c85871c767b3bbf133b5888bcb9fc7116fe6" translate="yes" xml:space="preserve">
          <source>This function does not work for dotted lists. Trying to copy a circular list may cause an infinite loop.</source>
          <target state="translated">该函数不适用于点阵列表。试图复制循环列表可能会导致无限循环。</target>
        </trans-unit>
        <trans-unit id="5de19385bbfee97ee2b8a413b9ec9199004e5a9d" translate="yes" xml:space="preserve">
          <source>This function does the main work of reporting progress of your operation. It displays the message of &lt;var&gt;reporter&lt;/var&gt;, followed by progress percentage determined by &lt;var&gt;value&lt;/var&gt;. If percentage is zero, or close enough according to the &lt;var&gt;min-change&lt;/var&gt; and &lt;var&gt;min-time&lt;/var&gt; arguments, then it is omitted from the output.</source>
          <target state="translated">此功能执行报告操作进度的主要工作。它显示的消息 &lt;var&gt;reporter&lt;/var&gt; ，接着通过确定的进度百分比 &lt;var&gt;value&lt;/var&gt; 。如果百分比为零，或者根据 &lt;var&gt;min-change&lt;/var&gt; 和 &lt;var&gt;min-time&lt;/var&gt; 参数足够接近，则在输出中将其省略。</target>
        </trans-unit>
        <trans-unit id="95ac8c545353bf4f7c39dd8911b32f26aeff643c" translate="yes" xml:space="preserve">
          <source>This function dumps the current state of Emacs into a dump file &lt;var&gt;to-file&lt;/var&gt;, using the &lt;code&gt;pdump&lt;/code&gt; method. Normally, the dump file is called</source>
          <target state="translated">此函数使用 &lt;code&gt;pdump&lt;/code&gt; 方法将Emacs的当前状态转储到转储文件 &lt;var&gt;to-file&lt;/var&gt; 中。通常，转储文件称为</target>
        </trans-unit>
        <trans-unit id="7d810f9f7459e1475a856c2b26c05e40ac1f7f72" translate="yes" xml:space="preserve">
          <source>This function dumps the current state of Emacs into an executable file &lt;var&gt;to-file&lt;/var&gt;, using the &lt;code&gt;unexec&lt;/code&gt; method. It takes symbols from &lt;var&gt;from-file&lt;/var&gt; (this is normally the executable file</source>
          <target state="translated">此函数使用 &lt;code&gt;unexec&lt;/code&gt; 方法将Emacs的当前状态转储到可执行文件 &lt;var&gt;to-file&lt;/var&gt; 中。它 &lt;var&gt;from-file&lt;/var&gt; 获取符号（通常是可执行文件</target>
        </trans-unit>
        <trans-unit id="69098c698a4fecf4761cc6c48ba667da003dec45" translate="yes" xml:space="preserve">
          <source>This function eliminates all the buffer-local variable bindings of the current buffer except for variables marked as permanent and local hook functions that have a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;permanent-local-hook&lt;/code&gt; property (see &lt;a href=&quot;setting-hooks#Setting-Hooks&quot;&gt;Setting Hooks&lt;/a&gt;). As a result, the buffer will see the default values of most variables.</source>
          <target state="translated">该函数消除了当前缓冲区的所有缓冲区局部变量绑定，但标记为具有非 &lt;code&gt;nil&lt;/code&gt; able &lt;code&gt;permanent-local-hook&lt;/code&gt; 属性的永久和局部钩子函数的变量除外（请参见&lt;a href=&quot;setting-hooks#Setting-Hooks&quot;&gt;设置钩子&lt;/a&gt;）。结果，缓冲区将看到大多数变量的默认值。</target>
        </trans-unit>
        <trans-unit id="9d1ea641996f33c976c8f457eb763e024f6b703b" translate="yes" xml:space="preserve">
          <source>This function empties out the table of events for &lt;code&gt;this-command-keys&lt;/code&gt; to return. Unless &lt;var&gt;keep-record&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it also empties the records that the function &lt;code&gt;recent-keys&lt;/code&gt; (see &lt;a href=&quot;recording-input#Recording-Input&quot;&gt;Recording Input&lt;/a&gt;) will subsequently return. This is useful after reading a password, to prevent the password from echoing inadvertently as part of the next command in certain cases.</source>
          <target state="translated">此函数清空事件表，以便 &lt;code&gt;this-command-keys&lt;/code&gt; 返回。除非 &lt;var&gt;keep-record&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，否则它还会清空函数 &lt;code&gt;recent-keys&lt;/code&gt; （请参见&lt;a href=&quot;recording-input#Recording-Input&quot;&gt;Recording Input&lt;/a&gt;）随后将返回的记录。读取密码后，此功能很有用，以防止在某些情况下密码作为下一个命令的一部分意外回显。</target>
        </trans-unit>
        <trans-unit id="89a04adf828d457bc23c46e14c9e1e98f1ac0633" translate="yes" xml:space="preserve">
          <source>This function empties out the value cell of &lt;var&gt;symbol&lt;/var&gt;, making the variable void. It returns &lt;var&gt;symbol&lt;/var&gt;.</source>
          <target state="translated">该函数清空 &lt;var&gt;symbol&lt;/var&gt; 的值单元格，使变量无效。它返回 &lt;var&gt;symbol&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="edce160802ec529bb459f552aa6bb57e8021a9f4" translate="yes" xml:space="preserve">
          <source>This function enables the Custom theme named &lt;var&gt;theme&lt;/var&gt;. It signals an error if no such theme has been loaded.</source>
          <target state="translated">此功能启用名为 &lt;var&gt;theme&lt;/var&gt; 的自定义主题。如果尚未加载这样的主题，则会发出错误消息。</target>
        </trans-unit>
        <trans-unit id="2d91d6174e887c3ecc6dc6d7120673f8299f190e" translate="yes" xml:space="preserve">
          <source>This function encodes the text in &lt;var&gt;string&lt;/var&gt; according to coding system &lt;var&gt;coding-system&lt;/var&gt;. It returns a new string containing the encoded text, except when &lt;var&gt;nocopy&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, in which case the function may return &lt;var&gt;string&lt;/var&gt; itself if the encoding operation is trivial. The result of encoding is a unibyte string.</source>
          <target state="translated">此函数根据编码系统 &lt;var&gt;coding-system&lt;/var&gt; 将文本编码为 &lt;var&gt;string&lt;/var&gt; 。它返回一个包含编码文本的新字符串，除非 &lt;var&gt;nocopy&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，否则，如果编码操作很简单，则函数可能会返回 &lt;var&gt;string&lt;/var&gt; 本身。编码的结果是一个单字节字符串。</target>
        </trans-unit>
        <trans-unit id="a5935028ad6787f8c34a7f7c11d0dd8a9da3360b" translate="yes" xml:space="preserve">
          <source>This function enters an association for &lt;var&gt;key&lt;/var&gt; in &lt;var&gt;table&lt;/var&gt;, with value &lt;var&gt;value&lt;/var&gt;. If &lt;var&gt;key&lt;/var&gt; already has an association in &lt;var&gt;table&lt;/var&gt;, &lt;var&gt;value&lt;/var&gt; replaces the old associated value.</source>
          <target state="translated">该功能进入用于关联 &lt;var&gt;key&lt;/var&gt; 在 &lt;var&gt;table&lt;/var&gt; ，具有值 &lt;var&gt;value&lt;/var&gt; 。如果 &lt;var&gt;key&lt;/var&gt; 已在 &lt;var&gt;table&lt;/var&gt; 中具有关联，则 &lt;var&gt;value&lt;/var&gt; 替换旧的关联值。</target>
        </trans-unit>
        <trans-unit id="0c85aa44f391c1dcfc863bf0ced2e910ac9f3056" translate="yes" xml:space="preserve">
          <source>This function enters the debugger. It switches buffers to a buffer named</source>
          <target state="translated">该函数进入调试器。它将缓冲区切换到一个名为</target>
        </trans-unit>
        <trans-unit id="6ef4d3d71f55ff550219a7386a661d019026f07a" translate="yes" xml:space="preserve">
          <source>This function establishes the proper major mode and buffer-local variable bindings for the current buffer. It calls &lt;code&gt;set-auto-mode&lt;/code&gt; (see below). As of Emacs 26.1, it no longer runs &lt;code&gt;hack-local-variables&lt;/code&gt;, this now being done in &lt;code&gt;run-mode-hooks&lt;/code&gt; at the initialization of major modes (see &lt;a href=&quot;mode-hooks#Mode-Hooks&quot;&gt;Mode Hooks&lt;/a&gt;).</source>
          <target state="translated">此函数为当前缓冲区建立适当的主模式和缓冲区局部变量绑定。它称为 &lt;code&gt;set-auto-mode&lt;/code&gt; （见下文）。从Emacs 26.1开始，它不再运行 &lt;code&gt;hack-local-variables&lt;/code&gt; ，现在这是在主要模式初始化时以 &lt;code&gt;run-mode-hooks&lt;/code&gt; 进行的（请参见&lt;a href=&quot;mode-hooks#Mode-Hooks&quot;&gt;Mode Hooks&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="6bd2f57fb22f17edf842ae4c294afe5ead7208e4" translate="yes" xml:space="preserve">
          <source>This function evaluates the forms in the current buffer in the region defined by the positions &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;. It reads forms from the region and calls &lt;code&gt;eval&lt;/code&gt; on them until the end of the region is reached, or until an error is signaled and not handled.</source>
          <target state="translated">此函数在位置 &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 定义的区域中评估当前缓冲区中的形式。它从该区域读取表单，并在它们上调用 &lt;code&gt;eval&lt;/code&gt; ，直到到达该区域的末尾，或者直到发出错误信号并对其进行处理为止。</target>
        </trans-unit>
        <trans-unit id="499319ea5101c7a9547f738fe64007844a28c37c" translate="yes" xml:space="preserve">
          <source>This function exchanges two nonoverlapping portions of the buffer (if they overlap, the function signals an error). Arguments &lt;var&gt;start1&lt;/var&gt; and &lt;var&gt;end1&lt;/var&gt; specify the bounds of one portion and arguments &lt;var&gt;start2&lt;/var&gt; and &lt;var&gt;end2&lt;/var&gt; specify the bounds of the other portion.</source>
          <target state="translated">此函数交换缓冲区的两个非重叠部分（如果它们重叠，则该函数将发出错误信号）。参数 &lt;var&gt;start1&lt;/var&gt; 和 &lt;var&gt;end1&lt;/var&gt; 指定一个部分的边界，参数 &lt;var&gt;start2&lt;/var&gt; 和 &lt;var&gt;end2&lt;/var&gt; 指定另一部分的边界。</target>
        </trans-unit>
        <trans-unit id="2253d8c65af3867f826adf966d829eb7201fa13b" translate="yes" xml:space="preserve">
          <source>This function executes &lt;var&gt;command&lt;/var&gt; (a string) as a shell command, then returns the command&amp;rsquo;s output as a string.</source>
          <target state="translated">此函数将 &lt;var&gt;command&lt;/var&gt; （字符串）作为shell命令执行，然后以字符串形式返回命令的输出。</target>
        </trans-unit>
        <trans-unit id="2c74139eb2be1f749bdd6863f6cfdaed6857d52b" translate="yes" xml:space="preserve">
          <source>This function executes &lt;var&gt;command&lt;/var&gt;. The argument &lt;var&gt;command&lt;/var&gt; must satisfy the &lt;code&gt;commandp&lt;/code&gt; predicate; i.e., it must be an interactively callable function or a keyboard macro.</source>
          <target state="translated">该函数执行 &lt;var&gt;command&lt;/var&gt; 。参数 &lt;var&gt;command&lt;/var&gt; 必须满足 &lt;code&gt;commandp&lt;/code&gt; 谓词；即，它必须是可交互调用的功能或键盘宏。</target>
        </trans-unit>
        <trans-unit id="c6a5607e8b9c48006dbd500a0f2bc228a7e15102" translate="yes" xml:space="preserve">
          <source>This function executes &lt;var&gt;kbdmacro&lt;/var&gt; as a sequence of events. If &lt;var&gt;kbdmacro&lt;/var&gt; is a string or vector, then the events in it are executed exactly as if they had been input by the user. The sequence is &lt;em&gt;not&lt;/em&gt; expected to be a single key sequence; normally a keyboard macro definition consists of several key sequences concatenated.</source>
          <target state="translated">此函数将 &lt;var&gt;kbdmacro&lt;/var&gt; 作为事件序列执行。如果 &lt;var&gt;kbdmacro&lt;/var&gt; 是字符串或向量，则将完全按照用户输入的方式执行其中的事件。该序列&lt;em&gt;不应&lt;/em&gt;是单个键序列；通常，键盘宏定义由多个键序列组成。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
