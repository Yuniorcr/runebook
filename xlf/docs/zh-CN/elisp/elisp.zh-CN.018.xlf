<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="elisp">
    <body>
      <group id="elisp">
        <trans-unit id="4503518694cd70c179b89667db5fbfa45a4ca6ee" translate="yes" xml:space="preserve">
          <source>This function returns the value of property &lt;var&gt;prop&lt;/var&gt; recorded in &lt;var&gt;overlay&lt;/var&gt;, if any. If &lt;var&gt;overlay&lt;/var&gt; does not record any value for that property, but it does have a &lt;code&gt;category&lt;/code&gt; property which is a symbol, that symbol&amp;rsquo;s &lt;var&gt;prop&lt;/var&gt; property is used. Otherwise, the value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">该函数返回属性的值， &lt;var&gt;prop&lt;/var&gt; 记录 &lt;var&gt;overlay&lt;/var&gt; ，如果有的话。如果 &lt;var&gt;overlay&lt;/var&gt; 没有为该属性记录任何值，但是它确实有一个 &lt;code&gt;category&lt;/code&gt; 属性（即符号），则使用该符号的 &lt;var&gt;prop&lt;/var&gt; 属性。否则，值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9105c62b4a1d926ff38d1299ab93e35a2919fbef" translate="yes" xml:space="preserve">
          <source>This function returns the value of the &lt;var&gt;attribute&lt;/var&gt; attribute for &lt;var&gt;face&lt;/var&gt; on &lt;var&gt;frame&lt;/var&gt;.</source>
          <target state="translated">该函数返回的值 &lt;var&gt;attribute&lt;/var&gt; 对属性 &lt;var&gt;face&lt;/var&gt; 上 &lt;var&gt;frame&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="6f176e389d315b7a50953798859f34149626cfa9" translate="yes" xml:space="preserve">
          <source>This function returns the value of the &lt;var&gt;prop&lt;/var&gt; property of the character after position &lt;var&gt;pos&lt;/var&gt; in &lt;var&gt;object&lt;/var&gt; (a buffer or string). The argument &lt;var&gt;object&lt;/var&gt; is optional and defaults to the current buffer.</source>
          <target state="translated">该函数返回的值 &lt;var&gt;prop&lt;/var&gt; 的字符的属性位置之后 &lt;var&gt;pos&lt;/var&gt; 在 &lt;var&gt;object&lt;/var&gt; （一个缓冲或字符串）。参数 &lt;var&gt;object&lt;/var&gt; 是可选的，默认为当前缓冲区。</target>
        </trans-unit>
        <trans-unit id="075b90eab5894af9f4f9e464071663474ab35f5e" translate="yes" xml:space="preserve">
          <source>This function returns the value of the &lt;var&gt;propname&lt;/var&gt; property of &lt;var&gt;process&lt;/var&gt;.</source>
          <target state="translated">此函数返回 &lt;var&gt;process&lt;/var&gt; 的 &lt;var&gt;propname&lt;/var&gt; 属性的值。</target>
        </trans-unit>
        <trans-unit id="efe0c4a40bdb5d84b5dbe72cf3d0a28c7f0953c3" translate="yes" xml:space="preserve">
          <source>This function returns the value of the environment variable &lt;var&gt;var&lt;/var&gt;, as a string. &lt;var&gt;var&lt;/var&gt; should be a string. If &lt;var&gt;var&lt;/var&gt; is undefined in the environment, &lt;code&gt;getenv&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;. It returns &amp;lsquo;</source>
          <target state="translated">此函数以字符串形式返回环境变量 &lt;var&gt;var&lt;/var&gt; 的值。 &lt;var&gt;var&lt;/var&gt; 应该是一个字符串。如果在环境中未定义 &lt;var&gt;var&lt;/var&gt; ，则 &lt;code&gt;getenv&lt;/code&gt; 返回 &lt;code&gt;nil&lt;/code&gt; 。它返回&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="39c748e2e7e72fdd72180e9a6638188ec110add9" translate="yes" xml:space="preserve">
          <source>This function returns the value of the extra slot &lt;var&gt;slot&lt;/var&gt; of &lt;var&gt;display-table&lt;/var&gt;. The argument &lt;var&gt;slot&lt;/var&gt; may be a number from 0 to 5 inclusive, or a slot name (symbol). Valid symbols are &lt;code&gt;truncation&lt;/code&gt;, &lt;code&gt;wrap&lt;/code&gt;, &lt;code&gt;escape&lt;/code&gt;, &lt;code&gt;control&lt;/code&gt;, &lt;code&gt;selective-display&lt;/code&gt;, and &lt;code&gt;vertical-border&lt;/code&gt;.</source>
          <target state="translated">该函数返回额外的插槽的值 &lt;var&gt;slot&lt;/var&gt; 的 &lt;var&gt;display-table&lt;/var&gt; 。参数 &lt;var&gt;slot&lt;/var&gt; 可以是0到5（含）之间的数字，也可以是槽名称（符号）。有效符号是 &lt;code&gt;truncation&lt;/code&gt; ， &lt;code&gt;wrap&lt;/code&gt; ， &lt;code&gt;escape&lt;/code&gt; ， &lt;code&gt;control&lt;/code&gt; ， &lt;code&gt;selective-display&lt;/code&gt; 和 &lt;code&gt;vertical-border&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8f18f61450a43d462a561ffc70c6e978f59599cd" translate="yes" xml:space="preserve">
          <source>This function returns the value of the font property &lt;var&gt;property&lt;/var&gt; for &lt;var&gt;font&lt;/var&gt;.</source>
          <target state="translated">该函数返回字体属性的值 &lt;var&gt;property&lt;/var&gt; 的 &lt;var&gt;font&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="807f10a670239e77b2b4ba9807ad2d2cce606160" translate="yes" xml:space="preserve">
          <source>This function returns the value of the parameter &lt;var&gt;parameter&lt;/var&gt; (a symbol) of &lt;var&gt;frame&lt;/var&gt;. If &lt;var&gt;frame&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it returns the selected frame&amp;rsquo;s parameter. If &lt;var&gt;frame&lt;/var&gt; has no setting for &lt;var&gt;parameter&lt;/var&gt;, this function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此函数返回 &lt;var&gt;frame&lt;/var&gt; 的参数 &lt;var&gt;parameter&lt;/var&gt; （符号）的值。如果 &lt;var&gt;frame&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则返回所选框架的参数。如果 &lt;var&gt;frame&lt;/var&gt; 没有为 &lt;var&gt;parameter&lt;/var&gt; 设置，则此函数返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b26c2939bb42dd35ee0dd656bb0ea4d91ecf670d" translate="yes" xml:space="preserve">
          <source>This function returns the value of the parameter &lt;var&gt;parameter&lt;/var&gt; (a symbol) of &lt;var&gt;terminal&lt;/var&gt;. If &lt;var&gt;terminal&lt;/var&gt; has no setting for &lt;var&gt;parameter&lt;/var&gt;, this function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此函数返回 &lt;var&gt;terminal&lt;/var&gt; 的参数 &lt;var&gt;parameter&lt;/var&gt; （符号）的值。如果 &lt;var&gt;terminal&lt;/var&gt; 没有 &lt;var&gt;parameter&lt;/var&gt; 设置，则此函数返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="187556a30a5cf4c0aa76a9f53b09b09697b19161" translate="yes" xml:space="preserve">
          <source>This function returns the value of the property named &lt;var&gt;property&lt;/var&gt; in &lt;var&gt;symbol&lt;/var&gt;&amp;rsquo;s property list. If there is no such property, it returns &lt;code&gt;nil&lt;/code&gt;. Thus, there is no distinction between a value of &lt;code&gt;nil&lt;/code&gt; and the absence of the property.</source>
          <target state="translated">该函数返回指定属性的值 &lt;var&gt;property&lt;/var&gt; 的 &lt;var&gt;symbol&lt;/var&gt; 的属性列表。如果没有这样的属性，则返回 &lt;code&gt;nil&lt;/code&gt; 。因此，在 &lt;code&gt;nil&lt;/code&gt; 值和不存在该属性之间没有区别。</target>
        </trans-unit>
        <trans-unit id="259529c91d319fcd710ed729be8071776d0524ef" translate="yes" xml:space="preserve">
          <source>This function returns the value of the variable &lt;code&gt;sentence-end&lt;/code&gt;, if non-&lt;code&gt;nil&lt;/code&gt;. Otherwise it returns a default value based on the values of the variables &lt;code&gt;sentence-end-double-space&lt;/code&gt; (see &lt;a href=&quot;filling#Definition-of-sentence_002dend_002ddouble_002dspace&quot;&gt;Definition of sentence-end-double-space&lt;/a&gt;), &lt;code&gt;sentence-end-without-period&lt;/code&gt;, and &lt;code&gt;sentence-end-without-space&lt;/code&gt;.</source>
          <target state="translated">此函数返回变量 &lt;code&gt;sentence-end&lt;/code&gt; 的值（如果非 &lt;code&gt;nil&lt;/code&gt; )。否则，它将基于变量 &lt;code&gt;sentence-end-double-space&lt;/code&gt; （请参见&lt;a href=&quot;filling#Definition-of-sentence_002dend_002ddouble_002dspace&quot;&gt;句子结尾双倍空格的定义&lt;/a&gt;）， &lt;code&gt;sentence-end-without-period&lt;/code&gt; 和 &lt;code&gt;sentence-end-without-space&lt;/code&gt; 的值返回默认值。</target>
        </trans-unit>
        <trans-unit id="945d25c8c6599043456fe57ba30b826d73620568" translate="yes" xml:space="preserve">
          <source>This function returns the value referred to by the first slot of the cons cell &lt;var&gt;cons-cell&lt;/var&gt;. In other words, it returns the &lt;small&gt;CAR&lt;/small&gt; of &lt;var&gt;cons-cell&lt;/var&gt;.</source>
          <target state="translated">此函数返回由cons cell &lt;var&gt;cons-cell&lt;/var&gt; 的第一个插槽引用的值。换句话说，它返回&lt;small&gt;CAR&lt;/small&gt;的 &lt;var&gt;cons-cell&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="bdd9e3e659fc1a94f6e09bba836ad3d694cfda8a" translate="yes" xml:space="preserve">
          <source>This function returns the value referred to by the second slot of the cons cell &lt;var&gt;cons-cell&lt;/var&gt;. In other words, it returns the &lt;small&gt;CDR&lt;/small&gt; of &lt;var&gt;cons-cell&lt;/var&gt;.</source>
          <target state="translated">此函数返回由cons cell &lt;var&gt;cons-cell&lt;/var&gt; 的第二个槽引用的值。换句话说，它返回的&lt;small&gt;CDR&lt;/small&gt;的 &lt;var&gt;cons-cell&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="4df1821298fd235648893b93d47d1974f41e5d9a" translate="yes" xml:space="preserve">
          <source>This function returns the value stored in &lt;var&gt;symbol&lt;/var&gt;&amp;rsquo;s value cell. This is where the variable&amp;rsquo;s current (dynamic) value is stored. If the variable has no local binding, this is simply its global value. If the variable is void, a &lt;code&gt;void-variable&lt;/code&gt; error is signaled.</source>
          <target state="translated">此函数返回存储在交易 &lt;var&gt;symbol&lt;/var&gt; 的值单元格中的值。在此存储变量的当前（动态）值。如果变量没有本地绑定，则这只是其全局值。如果变量为空，则发出 &lt;code&gt;void-variable&lt;/code&gt; 错误信号。</target>
        </trans-unit>
        <trans-unit id="5e997d0377f2d644978d79629dc832ca0eb37117" translate="yes" xml:space="preserve">
          <source>This function returns the variable at the end of the chain of aliases of &lt;var&gt;variable&lt;/var&gt;. If &lt;var&gt;variable&lt;/var&gt; is not a symbol, or if &lt;var&gt;variable&lt;/var&gt; is not defined as an alias, the function returns &lt;var&gt;variable&lt;/var&gt;.</source>
          <target state="translated">此函数在variable别名链的末尾返回 &lt;var&gt;variable&lt;/var&gt; 。如果 &lt;var&gt;variable&lt;/var&gt; 不是符号，或者未将 &lt;var&gt;variable&lt;/var&gt; 定义为别名，则该函数返回 &lt;var&gt;variable&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="064749a45c343bd22332467a38b5ef53e503fd35" translate="yes" xml:space="preserve">
          <source>This function returns the vendor that provided the window system software (as a string). On GNU and Unix systems this really means whoever distributes the X server. On MS-Windows this is the vendor ID string of the Windows OS (Microsoft).</source>
          <target state="translated">这个函数返回提供窗口系统软件的厂商(作为一个字符串)。在GNU和Unix系统中,这实际上是指发行X服务器的厂商。在MS-Windows系统中,这是Windows操作系统(Microsoft)的供应商ID字符串。</target>
        </trans-unit>
        <trans-unit id="e075bebc78123dcd82e85e5a87586b5aa637a1e8" translate="yes" xml:space="preserve">
          <source>This function returns the visibility status of frame &lt;var&gt;frame&lt;/var&gt;. The value is &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;frame&lt;/var&gt; is visible, &lt;code&gt;nil&lt;/code&gt; if it is invisible, and &lt;code&gt;icon&lt;/code&gt; if it is iconified.</source>
          <target state="translated">此函数返回框架 &lt;var&gt;frame&lt;/var&gt; 的可见性状态。如果 &lt;var&gt;frame&lt;/var&gt; 可见，则值为 &lt;code&gt;t&lt;/code&gt; ;如果框架不可见，则值为 &lt;code&gt;nil&lt;/code&gt; ;如果 &lt;code&gt;icon&lt;/code&gt; 则为icon。</target>
        </trans-unit>
        <trans-unit id="2129c2bfd0bfc38492f31aab67eef0fa79465208" translate="yes" xml:space="preserve">
          <source>This function returns the visual class for the screen. The value is one of the symbols &lt;code&gt;static-gray&lt;/code&gt; (a limited, unchangeable number of grays), &lt;code&gt;gray-scale&lt;/code&gt; (a full range of grays), &lt;code&gt;static-color&lt;/code&gt; (a limited, unchangeable number of colors), &lt;code&gt;pseudo-color&lt;/code&gt; (a limited number of colors), &lt;code&gt;true-color&lt;/code&gt; (a full range of colors), and &lt;code&gt;direct-color&lt;/code&gt; (a full range of colors).</source>
          <target state="translated">此函数返回屏幕的可视类。该值是以下符号之一： &lt;code&gt;static-gray&lt;/code&gt; （有限的，不变的灰色数量）， &lt;code&gt;gray-scale&lt;/code&gt; （灰度的全部范围）， &lt;code&gt;static-color&lt;/code&gt; （有限的，不变的颜色数量）， &lt;code&gt;pseudo-color&lt;/code&gt; （有限的颜色数）， &lt;code&gt;true-color&lt;/code&gt; （所有颜色）和 &lt;code&gt;direct-color&lt;/code&gt; （所有颜色）。</target>
        </trans-unit>
        <trans-unit id="7bf8fcbc9cc0d7cbbe960444ab1ba60cf298f72e" translate="yes" xml:space="preserve">
          <source>This function returns the width in columns of the character &lt;var&gt;char&lt;/var&gt;, if it were displayed in the current buffer (i.e., taking into account the buffer&amp;rsquo;s display table, if any; see &lt;a href=&quot;display-tables#Display-Tables&quot;&gt;Display Tables&lt;/a&gt;). The width of a tab character is usually &lt;code&gt;tab-width&lt;/code&gt; (see &lt;a href=&quot;usual-display#Usual-Display&quot;&gt;Usual Display&lt;/a&gt;).</source>
          <target state="translated">如果此字符显示在当前缓冲区中，则此函数返回字符 &lt;var&gt;char&lt;/var&gt; 的宽度（即，考虑到缓冲区的显示表，如果有的话；请参见&lt;a href=&quot;display-tables#Display-Tables&quot;&gt;Display Tables&lt;/a&gt;）。制表符 &lt;code&gt;tab-width&lt;/code&gt; 通常为制表符宽度（请参见&amp;ldquo;&lt;a href=&quot;usual-display#Usual-Display&quot;&gt;常规显示&amp;rdquo;&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="b179e9f08e5080729738b01a0f996158e17cd03e" translate="yes" xml:space="preserve">
          <source>This function returns the width in columns of the string &lt;var&gt;string&lt;/var&gt;, if it were displayed in the current buffer and the selected window.</source>
          <target state="translated">该函数在字符串的列返回宽度 &lt;var&gt;string&lt;/var&gt; ，如果它是在当前的缓冲器和所选择的窗口中显示。</target>
        </trans-unit>
        <trans-unit id="1142d5ef359853a5707ca8cc82ffea17a21a4f67" translate="yes" xml:space="preserve">
          <source>This function returns the width in pixels of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s vertical scrollbar.</source>
          <target state="translated">此函数返回 &lt;var&gt;window&lt;/var&gt; 垂直滚动条的宽度（以像素为单位）。</target>
        </trans-unit>
        <trans-unit id="2013a42f7bb928380dac0141954c409c7fa0072b" translate="yes" xml:space="preserve">
          <source>This function returns the width of the left and right margins of &lt;var&gt;window&lt;/var&gt; as a cons cell of the form &lt;code&gt;(&lt;var&gt;left&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;right&lt;/var&gt;)&lt;/code&gt;. If one of the two marginal areas does not exist, its width is returned as &lt;code&gt;nil&lt;/code&gt;; if neither of the two margins exist, the function returns &lt;code&gt;(nil)&lt;/code&gt;. If &lt;var&gt;window&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the selected window is used.</source>
          <target state="translated">此函数返回的左，右边界的宽度 &lt;var&gt;window&lt;/var&gt; 作为以下形式的cons单元 &lt;code&gt;(&lt;var&gt;left&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;right&lt;/var&gt;)&lt;/code&gt; 。如果两个边缘区域之一不存在，则其宽度返回 &lt;code&gt;nil&lt;/code&gt; ；如果两个边距都不存在，则函数返回 &lt;code&gt;(nil)&lt;/code&gt; 。如果 &lt;var&gt;window&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则使用选定的窗口。</target>
        </trans-unit>
        <trans-unit id="d0907d637cfb28a01d5841278d9e6427c7acc3ea" translate="yes" xml:space="preserve">
          <source>This function returns the width of the screen in millimeters, or &lt;code&gt;nil&lt;/code&gt; if Emacs cannot get that information.</source>
          <target state="translated">此函数返回以毫米为单位的屏幕宽度；如果Emacs无法获取该信息，则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3306e398def2a60c093691413e06937f50a33f5f" translate="yes" xml:space="preserve">
          <source>This function returns the width of the screen in pixels. On a character terminal, it gives the width in characters.</source>
          <target state="translated">该函数以像素为单位返回屏幕的宽度。在字符终端上,它以字符为单位给出宽度。</target>
        </trans-unit>
        <trans-unit id="0dd338d49309a6c82003ef50ca101781abcd92b8" translate="yes" xml:space="preserve">
          <source>This function returns the width of vertical scroll bars of &lt;var&gt;frame&lt;/var&gt; in pixels.</source>
          <target state="translated">此函数返回 &lt;var&gt;frame&lt;/var&gt; 的垂直滚动条的宽度（以像素为单位）。</target>
        </trans-unit>
        <trans-unit id="2a84448916a239459fa1a5f8802453916c5c7328" translate="yes" xml:space="preserve">
          <source>This function returns the width of window &lt;var&gt;window&lt;/var&gt; in pixels. &lt;var&gt;window&lt;/var&gt; must be a valid window and defaults to the selected one.</source>
          <target state="translated">该函数返回窗口的宽度 &lt;var&gt;window&lt;/var&gt; 中的像素。 &lt;var&gt;window&lt;/var&gt; 必须是有效窗口，并且默认为所选窗口。</target>
        </trans-unit>
        <trans-unit id="9de541ee6587ff17236cfe047c744b909aab7a17" translate="yes" xml:space="preserve">
          <source>This function returns the width used for displaying the line numbers in the selected window. If the optional argument &lt;var&gt;pixelwise&lt;/var&gt; is the symbol &lt;code&gt;columns&lt;/code&gt;, the return value is a float number of the frame&amp;rsquo;s canonical columns; if &lt;var&gt;pixelwise&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt; or any other non-&lt;code&gt;nil&lt;/code&gt; value, the value is an integer and is measured in pixels. If &lt;var&gt;pixelwise&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, the value is the integer number of columns of the font defined for the &lt;code&gt;line-number&lt;/code&gt; face, and doesn&amp;rsquo;t include the 2 columns used to pad the numbers on display. If line numbers are not displayed in the selected window, the value is zero regardless of the value of &lt;var&gt;pixelwise&lt;/var&gt;. Use &lt;code&gt;with-selected-window&lt;/code&gt; (see &lt;a href=&quot;selecting-windows#Selecting-Windows&quot;&gt;Selecting Windows&lt;/a&gt;) if you need this information about another window.</source>
          <target state="translated">此函数返回用于在所选窗口中显示行号的宽度。如果可选参数 &lt;var&gt;pixelwise&lt;/var&gt; 是符号 &lt;code&gt;columns&lt;/code&gt; ，则返回值为框架规范列的浮点数；否则，返回值为0。如果 &lt;var&gt;pixelwise&lt;/var&gt; 是 &lt;code&gt;t&lt;/code&gt; 或任何其它非 &lt;code&gt;nil&lt;/code&gt; 值，则该值是一个整数，以像素为单位进行测量。如果 &lt;var&gt;pixelwise&lt;/var&gt; 或 &lt;code&gt;nil&lt;/code&gt; ，则该值是为 &lt;code&gt;line-number&lt;/code&gt; 面定义的字体的整数列数，并且不包括用于填充显示数字的2列。如果在所选窗口中未显示行号，则该值将为零，而不管 &lt;var&gt;pixelwise&lt;/var&gt; 方向的值如何。如果需要有关另一个窗口的此信息，请使用 &lt;code&gt;with-selected-window&lt;/code&gt; （请参阅&amp;ldquo;&lt;a href=&quot;selecting-windows#Selecting-Windows&quot;&gt;选择Windows&amp;rdquo;&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="8b1470ff1170f7e314656753917758e7d8a18fb2" translate="yes" xml:space="preserve">
          <source>This function returns the width, in columns, of the body of window &lt;var&gt;window&lt;/var&gt;. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window; otherwise it must be a live window.</source>
          <target state="translated">此函数返回window &lt;var&gt;window&lt;/var&gt; 主体的宽度（以列为单位）。如果省略 &lt;var&gt;window&lt;/var&gt; 或 &lt;code&gt;nil&lt;/code&gt; ，则默认为所选窗口；否则为false。否则，它必须是活动窗口。</target>
        </trans-unit>
        <trans-unit id="21f66e4bfbae323395e78a8b0cf8256aab5cb5d0" translate="yes" xml:space="preserve">
          <source>This function returns the window of the currently active minibuffer, or &lt;code&gt;nil&lt;/code&gt; if there is no active minibuffer.</source>
          <target state="translated">此函数返回当前活动小缓冲区的窗口，如果没有活动小缓冲区，则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a60231c1877eb302888f245f7b22383ebfcec0e9" translate="yes" xml:space="preserve">
          <source>This function returns the window on &lt;var&gt;frame&lt;/var&gt; that is selected within that frame. &lt;var&gt;frame&lt;/var&gt; should be a live frame; if omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected frame.</source>
          <target state="translated">该函数返回在窗口 &lt;var&gt;frame&lt;/var&gt; 是该帧内选择。 &lt;var&gt;frame&lt;/var&gt; 应为实时框架；如果省略或为 &lt;code&gt;nil&lt;/code&gt; ，则默认为选定的帧。</target>
        </trans-unit>
        <trans-unit id="6a661210e2a61073e2823333889f5484457f844a" translate="yes" xml:space="preserve">
          <source>This function returns the window that was selected just before the minibuffer window was selected. If the selected window is not a minibuffer window, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此函数返回选择迷你缓冲区窗口之前选择的窗口。如果所选窗口不是迷你缓冲区窗口，则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="94d12ad6c5c22c00edb73203d48adbcaadd7b708" translate="yes" xml:space="preserve">
          <source>This function returns the window with the largest area (height times width). The optional argument &lt;var&gt;all-frames&lt;/var&gt; specifies the windows to search, and has the same meaning as in &lt;code&gt;next-window&lt;/code&gt;.</source>
          <target state="translated">此函数返回面积最大（高度乘以宽度）的窗口。可选参数 &lt;var&gt;all-frames&lt;/var&gt; 指定要搜索的窗口，其含义与 &lt;code&gt;next-window&lt;/code&gt; 中的含义相同。</target>
        </trans-unit>
        <trans-unit id="9fbd3d7f0c06908cdb8522c47e7975e8ca260464" translate="yes" xml:space="preserve">
          <source>This function returns, as a string, the text matched in the last search or match operation. It returns the entire text if &lt;var&gt;count&lt;/var&gt; is zero, or just the portion corresponding to the &lt;var&gt;count&lt;/var&gt;th parenthetical subexpression, if &lt;var&gt;count&lt;/var&gt; is positive.</source>
          <target state="translated">该函数以字符串的形式返回上一次搜索或匹配操作中匹配的文本。如果它返回整个文本 &lt;var&gt;count&lt;/var&gt; 是零，或对应于刚刚所述部分的 &lt;var&gt;count&lt;/var&gt; 个括号子表达式，如果 &lt;var&gt;count&lt;/var&gt; 是正的。</target>
        </trans-unit>
        <trans-unit id="7fd6d52adddbbd5d91f3887b835c21c14b2ea3d6" translate="yes" xml:space="preserve">
          <source>This function reverses the order of the elements of &lt;var&gt;sequence&lt;/var&gt;. Unlike &lt;code&gt;reverse&lt;/code&gt; the original &lt;var&gt;sequence&lt;/var&gt; may be modified.</source>
          <target state="translated">此函数反转 &lt;var&gt;sequence&lt;/var&gt; 元素的顺序。不同于 &lt;code&gt;reverse&lt;/code&gt; &lt;var&gt;sequence&lt;/var&gt; 可以修改原始序列。</target>
        </trans-unit>
        <trans-unit id="98315ee8a1b9e67ab0ab383791e14c62d8854661" translate="yes" xml:space="preserve">
          <source>This function rounds &lt;var&gt;float&lt;/var&gt; to the nearest integral value, and returns that value as a floating-point number. Rounding a value equidistant between two integers returns the even integer.</source>
          <target state="translated">此函数将 &lt;var&gt;float&lt;/var&gt; 舍入到最接近的整数值，然后将该值作为浮点数返回。对两个整数之间等距的值取整将返回偶数整数。</target>
        </trans-unit>
        <trans-unit id="13aa397acbbaec84fbe490588b8ff633ff7ba12d" translate="yes" xml:space="preserve">
          <source>This function rounds &lt;var&gt;float&lt;/var&gt; to the next higher integral value, and returns that value as a floating-point number.</source>
          <target state="translated">此函数将 &lt;var&gt;float&lt;/var&gt; 入到下一个更高的整数值，然后将该值作为浮点数返回。</target>
        </trans-unit>
        <trans-unit id="429cf327bccffa5e35a7f4a691e24f83baaa5ff4" translate="yes" xml:space="preserve">
          <source>This function rounds &lt;var&gt;float&lt;/var&gt; to the next lower integral value, and returns that value as a floating-point number.</source>
          <target state="translated">此函数将 &lt;var&gt;float&lt;/var&gt; 入到下一个较低的整数值，并将该值作为浮点数返回。</target>
        </trans-unit>
        <trans-unit id="f8d16e0c592b9fbe5194a5feb17be76e41734d46" translate="yes" xml:space="preserve">
          <source>This function rounds &lt;var&gt;float&lt;/var&gt; towards zero to an integral value, and returns that value as a floating-point number.</source>
          <target state="translated">此函数将 &lt;var&gt;float&lt;/var&gt; 向零舍入为整数值，然后将该值作为浮点数返回。</target>
        </trans-unit>
        <trans-unit id="da140e5ea89fd629df1abd5959a8a330768dbfd8" translate="yes" xml:space="preserve">
          <source>This function runs &lt;code&gt;byte-compile-file&lt;/code&gt; on files specified on the command line. This function must be used only in a batch execution of Emacs, as it kills Emacs on completion. An error in one file does not prevent processing of subsequent files, but no output file will be generated for it, and the Emacs process will terminate with a nonzero status code.</source>
          <target state="translated">此函数在命令行上指定 &lt;code&gt;byte-compile-file&lt;/code&gt; 上运行字节编译文件。此功能只能在批处理Emacs中使用，因为它会在完成时杀死Emacs。一个文件中的错误不会阻止后续文件的处理，但是不会为其生成任何输出文件，并且Emacs进程将以非零状态代码终止。</target>
        </trans-unit>
        <trans-unit id="a317f0d5d49216f9538a8bf8585f2c937b1a000d" translate="yes" xml:space="preserve">
          <source>This function runs &lt;var&gt;program&lt;/var&gt;, waits for it to finish, and returns its output as a list of strings. Each string in the list holds a single line of text output by the program; the end-of-line characters are stripped from each line. The arguments beyond &lt;var&gt;program&lt;/var&gt;, &lt;var&gt;args&lt;/var&gt;, are strings that specify command-line arguments with which to run the program.</source>
          <target state="translated">此函数运行 &lt;var&gt;program&lt;/var&gt; ，等待它完成，然后将其输出作为字符串列表返回。列表中的每个字符串都包含程序输出的一行文本。行尾字符从每行中删除。除了参数 &lt;var&gt;program&lt;/var&gt; ， &lt;var&gt;args&lt;/var&gt; ，是指定命令行参数用来运行程序的字符串。</target>
        </trans-unit>
        <trans-unit id="9611efc90955cf251c81a500281c038ed1b75f2c" translate="yes" xml:space="preserve">
          <source>This function runs an abnormal hook by calling all the hook functions in &lt;var&gt;hook&lt;/var&gt;, passing each one the arguments &lt;var&gt;args&lt;/var&gt;.</source>
          <target state="translated">此功能通过调用中的所有钩功能运行的异常钩 &lt;var&gt;hook&lt;/var&gt; ，通过每一个所述参数 &lt;var&gt;args&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="27586fd3faafbdf5c8bd48003a9e03e2e8021db8" translate="yes" xml:space="preserve">
          <source>This function runs an abnormal hook by calling each hook function in turn, stopping if one of them fails by returning &lt;code&gt;nil&lt;/code&gt;. Each hook function is passed the arguments &lt;var&gt;args&lt;/var&gt;. If this function stops because one of the hook functions fails, it returns &lt;code&gt;nil&lt;/code&gt;; otherwise it returns a non-&lt;code&gt;nil&lt;/code&gt; value.</source>
          <target state="translated">该函数通过依次调用每个钩子函数来运行异常钩子，如果其中之一失败则通过返回 &lt;code&gt;nil&lt;/code&gt; 停止运行。每个钩子函数都传递参数 &lt;var&gt;args&lt;/var&gt; 。如果此函数由于挂钩函数之一失败而停止，则返回 &lt;code&gt;nil&lt;/code&gt; 。否则返回一个非 &lt;code&gt;nil&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="5bfd164e131ce3c2cc13bf5d4f69f3f2445a2766" translate="yes" xml:space="preserve">
          <source>This function runs an abnormal hook by calling each hook function, stopping if one of them succeeds by returning a non-&lt;code&gt;nil&lt;/code&gt; value. Each hook function is passed the arguments &lt;var&gt;args&lt;/var&gt;. If this function stops because one of the hook functions returns a non-&lt;code&gt;nil&lt;/code&gt; value, it returns that value; otherwise it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">该函数通过调用每个钩子函数来运行异常钩子，如果其中一个钩子函数通过返回非 &lt;code&gt;nil&lt;/code&gt; 成功则停止运行。每个钩子函数都传递参数 &lt;var&gt;args&lt;/var&gt; 。如果该功能停止，因为的钩功能之一返回非 &lt;code&gt;nil&lt;/code&gt; 值，则返回该值; 否则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6a41f556a3282d76137da7e42fb03282f0f616df" translate="yes" xml:space="preserve">
          <source>This function runs the hook &lt;code&gt;suspend-tty-functions&lt;/code&gt;, passing the terminal object as an argument to each function.</source>
          <target state="translated">该函数运行hook hook &lt;code&gt;suspend-tty-functions&lt;/code&gt; ，将终端对象作为参数传递给每个函数。</target>
        </trans-unit>
        <trans-unit id="e5e49602f0470609a81e7e9d4740ac18eee575a2" translate="yes" xml:space="preserve">
          <source>This function saves the contents of the current buffer in its visited file if the buffer has been modified since it was last visited or saved. Otherwise it does nothing.</source>
          <target state="translated">如果当前缓冲区自上次访问或保存后被修改,则该函数将当前缓冲区的内容保存在其访问的文件中。否则,它什么也不做。</target>
        </trans-unit>
        <trans-unit id="598b8df0e195913316dc0f2166e5c95848549cf0" translate="yes" xml:space="preserve">
          <source>This function saves the stretch of text between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; on the kill ring (including text properties), but does not delete the text from the buffer. However, if the optional argument &lt;var&gt;region&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the function ignores &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;, and saves the current region instead. It always returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此功能保存 &lt;var&gt;end&lt;/var&gt; 环上 &lt;var&gt;start&lt;/var&gt; 和结束之间的文本段（包括文本属性），但不会从缓冲区中删除文本。但是，如果可选参数 &lt;var&gt;region&lt;/var&gt; 为non- &lt;code&gt;nil&lt;/code&gt; ，则该函数将忽略 &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; ，而是保存当前区域。它总是返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dcb854934d8368b0f9aa4e5fca3fe7ff45373e43" translate="yes" xml:space="preserve">
          <source>This function scans &lt;var&gt;string&lt;/var&gt; for the above special sequences and replaces them by what they stand for, returning the result as a string. This permits display of documentation that refers accurately to the user&amp;rsquo;s own customized key bindings.</source>
          <target state="translated">此函数扫描 &lt;var&gt;string&lt;/var&gt; 以查找上面的特殊序列，并用它们代表的序列替换它们，并将结果作为字符串返回。这样可以显示准确引用用户自己的自定义键绑定的文档。</target>
        </trans-unit>
        <trans-unit id="7d4207d36c030f700c82c397cf0bf32d1c7fae49" translate="yes" xml:space="preserve">
          <source>This function scans forward &lt;var&gt;count&lt;/var&gt; balanced parenthetical groupings from position &lt;var&gt;from&lt;/var&gt;. It returns the position where the scan stops. If &lt;var&gt;count&lt;/var&gt; is negative, the scan moves backwards.</source>
          <target state="translated">此功能向前扫描 &lt;var&gt;count&lt;/var&gt; 从位置平衡括号分组 &lt;var&gt;from&lt;/var&gt; 。它返回扫描停止的位置。如果 &lt;var&gt;count&lt;/var&gt; 为负，则扫描向后移动。</target>
        </trans-unit>
        <trans-unit id="a103b6e868b4eb82f7508c6562eaf551c0deb87c" translate="yes" xml:space="preserve">
          <source>This function scans forward &lt;var&gt;count&lt;/var&gt; sexps from position &lt;var&gt;from&lt;/var&gt;. It returns the position where the scan stops. If &lt;var&gt;count&lt;/var&gt; is negative, the scan moves backwards.</source>
          <target state="translated">此功能从中扫描从位置 &lt;var&gt;from&lt;/var&gt; 前向 &lt;var&gt;count&lt;/var&gt; 性。它返回扫描停止的位置。如果 &lt;var&gt;count&lt;/var&gt; 为负，则扫描向后移动。</target>
        </trans-unit>
        <trans-unit id="279b055442c1cfbc5a74b09dba8744fa449ee180" translate="yes" xml:space="preserve">
          <source>This function scans the current buffer, calculating screen positions. It scans the buffer forward from position &lt;var&gt;from&lt;/var&gt;, assuming that is at screen coordinates &lt;var&gt;frompos&lt;/var&gt;, to position &lt;var&gt;to&lt;/var&gt; or coordinates &lt;var&gt;topos&lt;/var&gt;, whichever comes first. It returns the ending buffer position and screen coordinates.</source>
          <target state="translated">此功能扫描当前缓冲区，计算屏幕位置。它假定 &lt;var&gt;from&lt;/var&gt; 屏幕坐标 &lt;var&gt;frompos&lt;/var&gt; 到位置 &lt;var&gt;to&lt;/var&gt; 或坐标 &lt;var&gt;topos&lt;/var&gt; ，以先到者为准，从位置from向前扫描缓冲区。它返回结束缓冲区的位置和屏幕坐标。</target>
        </trans-unit>
        <trans-unit id="10e3f9c3ca85e09b27b3959dcfd170bd9e5560f7" translate="yes" xml:space="preserve">
          <source>This function scrolls backward by &lt;var&gt;count&lt;/var&gt; lines in the selected window.</source>
          <target state="translated">此功能向后滚动选定窗口中的 &lt;var&gt;count&lt;/var&gt; 线。</target>
        </trans-unit>
        <trans-unit id="6c3b4bf99587dfc832aefc4fc3af668df6edbf52" translate="yes" xml:space="preserve">
          <source>This function scrolls forward by &lt;var&gt;count&lt;/var&gt; lines in the selected window.</source>
          <target state="translated">此功能在所选窗口中按 &lt;var&gt;count&lt;/var&gt; 线向前滚动。</target>
        </trans-unit>
        <trans-unit id="cf8ed50ed32aa4b9aa839f68e03bfd91d6a12fe8" translate="yes" xml:space="preserve">
          <source>This function scrolls the selected window &lt;var&gt;count&lt;/var&gt; columns to the left (or to the right if &lt;var&gt;count&lt;/var&gt; is negative). The default for &lt;var&gt;count&lt;/var&gt; is the window width, minus 2.</source>
          <target state="translated">此功能将选定的窗口 &lt;var&gt;count&lt;/var&gt; 列向左滚动（如果 &lt;var&gt;count&lt;/var&gt; 为负，则向右滚动）。 &lt;var&gt;count&lt;/var&gt; 的默认值为窗口宽度减2。</target>
        </trans-unit>
        <trans-unit id="2158ced399977ac9880ac70d13283ef7fddc60a9" translate="yes" xml:space="preserve">
          <source>This function scrolls the selected window &lt;var&gt;count&lt;/var&gt; columns to the right (or to the left if &lt;var&gt;count&lt;/var&gt; is negative). The default for &lt;var&gt;count&lt;/var&gt; is the window width, minus 2. Aside from the direction of scrolling, this works just like &lt;code&gt;scroll-left&lt;/code&gt;.</source>
          <target state="translated">此功能将选定的窗口 &lt;var&gt;count&lt;/var&gt; 列向右滚动（如果 &lt;var&gt;count&lt;/var&gt; 为负，则向左滚动）。 &lt;var&gt;count&lt;/var&gt; 的默认值是窗口宽度减2。除滚动方向外，它的工作方式与 &lt;code&gt;scroll-left&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="dc7d85440a05ce45ae2c4cb19651e110bda5d0f9" translate="yes" xml:space="preserve">
          <source>This function scrolls the text in another window downward &lt;var&gt;count&lt;/var&gt; lines. Negative values of &lt;var&gt;count&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt;, are handled as in &lt;code&gt;scroll-down&lt;/code&gt;. In other respects, it behaves the same way as &lt;code&gt;scroll-other-window&lt;/code&gt; does.</source>
          <target state="translated">此功能在另一个窗口中向下滚动 &lt;var&gt;count&lt;/var&gt; 行中的文本。 &lt;var&gt;count&lt;/var&gt; 的负值或 &lt;code&gt;nil&lt;/code&gt; 像 &lt;code&gt;scroll-down&lt;/code&gt; 一样处理。在其他方面，它的行为与&amp;ldquo; &lt;code&gt;scroll-other-window&lt;/code&gt; &amp;rdquo;相同。</target>
        </trans-unit>
        <trans-unit id="67e6b35f1c11b8ecd41d9f3faa3d46c904856584" translate="yes" xml:space="preserve">
          <source>This function scrolls the text in another window upward &lt;var&gt;count&lt;/var&gt; lines. Negative values of &lt;var&gt;count&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt;, are handled as in &lt;code&gt;scroll-up&lt;/code&gt;.</source>
          <target state="translated">此功能在滚动另一个窗口上方的文字 &lt;var&gt;count&lt;/var&gt; 行。 &lt;var&gt;count&lt;/var&gt; 的负值或 &lt;code&gt;nil&lt;/code&gt; 像 &lt;code&gt;scroll-up&lt;/code&gt; 一样处理。</target>
        </trans-unit>
        <trans-unit id="cd207780f03f7286b628f2fbe94da4d778ded320" translate="yes" xml:space="preserve">
          <source>This function scrolls the text in the selected window so that point is displayed at a specified vertical position within the window. It does not move point with respect to the text.</source>
          <target state="translated">该函数滚动所选窗口中的文本,使该点显示在窗口内指定的垂直位置。它不移动点相对于文本的位置。</target>
        </trans-unit>
        <trans-unit id="8d80045b64d9461a2fe9b2780d43c9db12ed1f48" translate="yes" xml:space="preserve">
          <source>This function searches &lt;var&gt;alist&lt;/var&gt; for a match for &lt;var&gt;key&lt;/var&gt;. For each element of &lt;var&gt;alist&lt;/var&gt;, it compares the element (if it is an atom) or the element&amp;rsquo;s &lt;small&gt;CAR&lt;/small&gt; (if it is a cons) against &lt;var&gt;key&lt;/var&gt;, by calling &lt;var&gt;test&lt;/var&gt; with two arguments: the element or its &lt;small&gt;CAR&lt;/small&gt;, and &lt;var&gt;key&lt;/var&gt;. The arguments are passed in that order so that you can get useful results using &lt;code&gt;string-match&lt;/code&gt; with an alist that contains regular expressions (see &lt;a href=&quot;regexp-search#Regexp-Search&quot;&gt;Regexp Search&lt;/a&gt;). If &lt;var&gt;test&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;equal&lt;/code&gt; is used for comparison.</source>
          <target state="translated">此功能搜索 &lt;var&gt;alist&lt;/var&gt; 的比赛为 &lt;var&gt;key&lt;/var&gt; 。对于 &lt;var&gt;alist&lt;/var&gt; 的每个元素，它通过调用带有两个参数的 &lt;var&gt;test&lt;/var&gt; 来比较元素（如果它是一个原子）或元素的&lt;small&gt;CAR&lt;/small&gt;（如果它是一个缺点）与 &lt;var&gt;key&lt;/var&gt; 的比较：元素或它的&lt;small&gt;CAR&lt;/small&gt;以及 &lt;var&gt;key&lt;/var&gt; 。参数按该顺序传递，以便您可以使用 &lt;code&gt;string-match&lt;/code&gt; 和包含正则表达式的列表来获得有用的结果（请参阅&lt;a href=&quot;regexp-search#Regexp-Search&quot;&gt;Regexp Search&lt;/a&gt;）。如果省略了 &lt;var&gt;test&lt;/var&gt; 或 &lt;code&gt;nil&lt;/code&gt; ，则将 &lt;code&gt;equal&lt;/code&gt; 用作比较。&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="86ef95c55274561c315ba8350ecf1307039e6865" translate="yes" xml:space="preserve">
          <source>This function searches backward from point for &lt;var&gt;string&lt;/var&gt;. It is like &lt;code&gt;search-forward&lt;/code&gt;, except that it searches backwards rather than forwards. Backward searches leave point at the beginning of the match.</source>
          <target state="translated">此函数从点向后搜索 &lt;var&gt;string&lt;/var&gt; 。类似于 &lt;code&gt;search-forward&lt;/code&gt; ，除了它向后搜索而不是向前搜索。向后搜索将点留在比赛开始时。</target>
        </trans-unit>
        <trans-unit id="2589ceacba5232bdcc8be99c7f33893e15161b15" translate="yes" xml:space="preserve">
          <source>This function searches backward from point for a word match to &lt;var&gt;string&lt;/var&gt;. This function is just like &lt;code&gt;word-search-forward&lt;/code&gt; except that it searches backward and normally leaves point at the beginning of the match.</source>
          <target state="translated">此函数从点向后搜索与 &lt;var&gt;string&lt;/var&gt; 匹配的单词。该功能与 &lt;code&gt;word-search-forward&lt;/code&gt; 一样，只是它向后搜索，并且通常在比赛开始时将点留在原点。</target>
        </trans-unit>
        <trans-unit id="15a62f00e0ffa8cad8901aa2d8bd87f075935f4a" translate="yes" xml:space="preserve">
          <source>This function searches backward in the current buffer for a string of text that is matched by the regular expression &lt;var&gt;regexp&lt;/var&gt;, leaving point at the beginning of the first text found.</source>
          <target state="translated">此函数在当前缓冲区中向后搜索与正则表达式 &lt;var&gt;regexp&lt;/var&gt; 匹配的文本字符串，将点保留在找到的第一个文本的开头。</target>
        </trans-unit>
        <trans-unit id="fe406801dc8596f717b941d13936a5095afdff96" translate="yes" xml:space="preserve">
          <source>This function searches for a file whose name is &lt;var&gt;filename&lt;/var&gt; in a list of directories given by &lt;var&gt;path&lt;/var&gt;, trying the suffixes in &lt;var&gt;suffixes&lt;/var&gt;. If it finds such a file, it returns the file&amp;rsquo;s absolute file name (see &lt;a href=&quot;relative-file-names#Relative-File-Names&quot;&gt;Relative File Names&lt;/a&gt;); otherwise it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">该函数在 &lt;var&gt;path&lt;/var&gt; 给出的目录列表中搜索名称为 &lt;var&gt;filename&lt;/var&gt; 的文件，并尝试使用 &lt;var&gt;suffixes&lt;/var&gt; 。如果找到了这样的文件，它将返回文件的绝对文件名（请参阅&amp;ldquo;&lt;a href=&quot;relative-file-names#Relative-File-Names&quot;&gt;相对文件名&amp;rdquo;&lt;/a&gt;）。否则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4c0baa20ddc38b60f9dcb504c4990926f07c67d9" translate="yes" xml:space="preserve">
          <source>This function searches for the executable file of the named &lt;var&gt;program&lt;/var&gt; and returns the absolute file name of the executable, including its file-name extensions, if any. It returns &lt;code&gt;nil&lt;/code&gt; if the file is not found. The function searches in all the directories in &lt;code&gt;exec-path&lt;/code&gt;, and tries all the file-name extensions in &lt;code&gt;exec-suffixes&lt;/code&gt; (see &lt;a href=&quot;subprocess-creation#Subprocess-Creation&quot;&gt;Subprocess Creation&lt;/a&gt;).</source>
          <target state="translated">此函数搜索命名 &lt;var&gt;program&lt;/var&gt; 的可执行文件，并返回可执行文件的绝对文件名，包括其文件扩展名（如果有）。如果找不到该文件，则返回 &lt;code&gt;nil&lt;/code&gt; 。该函数在 &lt;code&gt;exec-path&lt;/code&gt; 中的所有目录中进行搜索，并在 &lt;code&gt;exec-suffixes&lt;/code&gt; 中尝试所有文件扩展名（请参阅&lt;a href=&quot;subprocess-creation#Subprocess-Creation&quot;&gt;Subprocess Creation&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="21e3a40a381cff1497414ae83056601f63bbb85c" translate="yes" xml:space="preserve">
          <source>This function searches forward from point for a word match for &lt;var&gt;string&lt;/var&gt;. If it finds a match, it sets point to the end of the match found, and returns the new value of point.</source>
          <target state="translated">此函数从点向前搜索匹配 &lt;var&gt;string&lt;/var&gt; 的单词。如果找到匹配项，则将point设置为找到的匹配项的末尾，并返回point的新值。</target>
        </trans-unit>
        <trans-unit id="86ff0ead1b6cedd956de2d5159fdc8de7f5802b1" translate="yes" xml:space="preserve">
          <source>This function searches forward from point for an exact match for &lt;var&gt;string&lt;/var&gt;. If successful, it sets point to the end of the occurrence found, and returns the new value of point. If no match is found, the value and side effects depend on &lt;var&gt;noerror&lt;/var&gt; (see below).</source>
          <target state="translated">此函数从点开始向前搜索 &lt;var&gt;string&lt;/var&gt; 的精确匹配项。如果成功，它将point设置为找到的事件的结尾，并返回point的新值。如果找不到匹配项，则其值和副作用取决于 &lt;var&gt;noerror&lt;/var&gt; （请参见下文）。</target>
        </trans-unit>
        <trans-unit id="0f5ff776ab59c65f2d5955b64ad2456860e06c46" translate="yes" xml:space="preserve">
          <source>This function searches forward in the current buffer for a string of text that is matched by the regular expression &lt;var&gt;regexp&lt;/var&gt;. The function skips over any amount of text that is not matched by &lt;var&gt;regexp&lt;/var&gt;, and leaves point at the end of the first match found. It returns the new value of point.</source>
          <target state="translated">此函数在当前缓冲区中向前搜索与正则表达式 &lt;var&gt;regexp&lt;/var&gt; 匹配的文本字符串。该函数将跳过 &lt;var&gt;regexp&lt;/var&gt; 不匹配的任何文本量，并将点留在找到的第一个匹配项的末尾。它返回point的新值。</target>
        </trans-unit>
        <trans-unit id="5d9bf99d5cdf805630c56fd316b30678b5c2c7e3" translate="yes" xml:space="preserve">
          <source>This function selects &lt;var&gt;frame&lt;/var&gt;, raises it (should it happen to be obscured by other frames) and tries to give it the window system&amp;rsquo;s focus. On a text terminal, the next redisplay displays the new frame on the entire terminal screen. The optional argument &lt;var&gt;norecord&lt;/var&gt; has the same meaning as for &lt;code&gt;select-frame&lt;/code&gt; (see below). The return value of this function is not significant.</source>
          <target state="translated">此函数选择 &lt;var&gt;frame&lt;/var&gt; ，将其升高（如果它正好被其他框架遮盖），然后尝试将其赋予窗口系统焦点。在文本终端上，下一次重新显示将在整个终端屏幕上显示新的框架。可选参数 &lt;var&gt;norecord&lt;/var&gt; 与 &lt;code&gt;select-frame&lt;/code&gt; 的含义相同（请参见下文）。该函数的返回值不重要。</target>
        </trans-unit>
        <trans-unit id="1b93cf30745c70d3b36cb3b5a0f92d3c8e43861a" translate="yes" xml:space="preserve">
          <source>This function selects a coding system for encoding specified text, asking the user to choose if necessary. Normally the specified text is the text in the current buffer between &lt;var&gt;from&lt;/var&gt; and &lt;var&gt;to&lt;/var&gt;. If &lt;var&gt;from&lt;/var&gt; is a string, the string specifies the text to encode, and &lt;var&gt;to&lt;/var&gt; is ignored.</source>
          <target state="translated">此功能选择用于编码指定文本的编码系统，要求用户选择是否需要。通常，指定的文本是当前缓冲区中 &lt;var&gt;from&lt;/var&gt; 和 &lt;var&gt;to&lt;/var&gt; 之间的文本。如果 &lt;var&gt;from&lt;/var&gt; 是字符串，则该字符串指定要编码的文本，并且 &lt;var&gt;to&lt;/var&gt; 被忽略。</target>
        </trans-unit>
        <trans-unit id="2ba4a9b3162c044926007835d1d4beeb3a4aa5dd" translate="yes" xml:space="preserve">
          <source>This function selects a field&amp;rsquo;s data from the nested alist &lt;var&gt;struct&lt;/var&gt;. Usually &lt;var&gt;struct&lt;/var&gt; was returned by &lt;code&gt;bindat-unpack&lt;/code&gt;. If &lt;var&gt;name&lt;/var&gt; corresponds to just one argument, that means to extract a top-level field value. Multiple &lt;var&gt;name&lt;/var&gt; arguments specify repeated lookup of sub-structures. An integer name acts as an array index.</source>
          <target state="translated">此函数从嵌套的alist &lt;var&gt;struct&lt;/var&gt; 选择字段的数据。通常 &lt;var&gt;struct&lt;/var&gt; 是由 &lt;code&gt;bindat-unpack&lt;/code&gt; 返回的。如果 &lt;var&gt;name&lt;/var&gt; 仅对应一个参数，则意味着提取顶级字段值。多个 &lt;var&gt;name&lt;/var&gt; 参数指定重复查找子结构。整数名称充当数组索引。</target>
        </trans-unit>
        <trans-unit id="854faeed04dfb1786422e9a9d79df43884a5a6fc" translate="yes" xml:space="preserve">
          <source>This function selects a live window, one &lt;var&gt;count&lt;/var&gt; places from the selected window in the cyclic ordering of windows. If &lt;var&gt;count&lt;/var&gt; is a positive number, it skips &lt;var&gt;count&lt;/var&gt; windows forwards; if &lt;var&gt;count&lt;/var&gt; is negative, it skips -&lt;var&gt;count&lt;/var&gt; windows backwards; if &lt;var&gt;count&lt;/var&gt; is zero, that simply re-selects the selected window. When called interactively, &lt;var&gt;count&lt;/var&gt; is the numeric prefix argument.</source>
          <target state="translated">此功能选择一个实时窗口，该窗口以循环的顺序从所选窗口 &lt;var&gt;count&lt;/var&gt; 一个。如果 &lt;var&gt;count&lt;/var&gt; 为正数，则向前跳过 &lt;var&gt;count&lt;/var&gt; 窗口；如果 &lt;var&gt;count&lt;/var&gt; 为负，则跳过-向后 &lt;var&gt;count&lt;/var&gt; 窗口；如果 &lt;var&gt;count&lt;/var&gt; 为零，则只需重新选择选定的窗口。交互调用时， &lt;var&gt;count&lt;/var&gt; 是数字前缀参数。</target>
        </trans-unit>
        <trans-unit id="d87e4356db00e03d8be4110fd77b6382a7fb5f7b" translate="yes" xml:space="preserve">
          <source>This function selects and sets the major mode that is appropriate for the current buffer. It bases its decision (in order of precedence) on the &amp;lsquo;</source>
          <target state="translated">此功能选择并设置适合当前缓冲区的主模式。它的决定（按优先顺序）基于&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="ca8b6c7abd38e5ed34ff834123c348a7d34d20f0" translate="yes" xml:space="preserve">
          <source>This function selects frame &lt;var&gt;frame&lt;/var&gt;, temporarily disregarding the focus of the X server if any. The selection of &lt;var&gt;frame&lt;/var&gt; lasts until the next time the user does something to select a different frame, or until the next time this function is called. (If you are using a window system, the previously selected frame may be restored as the selected frame after return to the command loop, because it still may have the window system&amp;rsquo;s input focus.)</source>
          <target state="translated">该功能选择帧 &lt;var&gt;frame&lt;/var&gt; ，暂时忽视X服务器如果任何的焦点。 &lt;var&gt;frame&lt;/var&gt; 的选择一直持续到用户下一次选择其他帧的操作或下次调用此函数为止。（如果使用的是窗口系统，则先前选择的框架可能会返回到命令循环后恢复为所选框架，因为它仍可能具有窗口系统的输入焦点。）</target>
        </trans-unit>
        <trans-unit id="e7051d9388a8372a7ca13c2c2aecd882b2584b86" translate="yes" xml:space="preserve">
          <source>This function sends &lt;var&gt;process&lt;/var&gt; the contents of &lt;var&gt;string&lt;/var&gt; as standard input. It returns &lt;code&gt;nil&lt;/code&gt;. For example, to make a Shell buffer list files:</source>
          <target state="translated">此函数将 &lt;var&gt;string&lt;/var&gt; 的内容作为标准输入发送给 &lt;var&gt;process&lt;/var&gt; 。返回 &lt;code&gt;nil&lt;/code&gt; 。例如，要制作一个Shell缓冲区列表文件：</target>
        </trans-unit>
        <trans-unit id="729e89000884992a96c8546849feddc47a86dd78" translate="yes" xml:space="preserve">
          <source>This function sends &lt;var&gt;string&lt;/var&gt; to &lt;var&gt;terminal&lt;/var&gt; without alteration. Control characters in &lt;var&gt;string&lt;/var&gt; have terminal-dependent effects. (If you need to display non-ASCII text on the terminal, encode it using one of the functions described in &lt;a href=&quot;explicit-encoding#Explicit-Encoding&quot;&gt;Explicit Encoding&lt;/a&gt;.) This function operates only on text terminals. &lt;var&gt;terminal&lt;/var&gt; may be a terminal object, a frame, or &lt;code&gt;nil&lt;/code&gt; for the selected frame&amp;rsquo;s terminal. In batch mode, &lt;var&gt;string&lt;/var&gt; is sent to &lt;code&gt;stdout&lt;/code&gt; when &lt;var&gt;terminal&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">该函数将 &lt;var&gt;string&lt;/var&gt; 直接发送到 &lt;var&gt;terminal&lt;/var&gt; 。 &lt;var&gt;string&lt;/var&gt; 控制字符具有与终端有关的效果。 （如果需要在终端上显示非ASCII文本，请使用&amp;ldquo;&lt;a href=&quot;explicit-encoding#Explicit-Encoding&quot;&gt;显式编码&amp;rdquo;中&lt;/a&gt;描述的功能之一对其进行编码。）此功能仅在文本终端上起作用。 &lt;var&gt;terminal&lt;/var&gt; 可以是终端对象，框架或所选框架终端的 &lt;code&gt;nil&lt;/code&gt; 。在批处理模式下，当 &lt;var&gt;terminal&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; 时， &lt;var&gt;string&lt;/var&gt; 将发送到 &lt;code&gt;stdout&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="931b025fd308ae043ad515b68ea59de28c73eb02" translate="yes" xml:space="preserve">
          <source>This function sends a notification to the desktop via D-Bus, consisting of the parameters specified by the &lt;var&gt;params&lt;/var&gt; arguments. These arguments should consist of alternating keyword and value pairs. The supported keywords and values are as follows:</source>
          <target state="translated">此函数通过D-Bus向桌面发送通知，该通知由 &lt;var&gt;params&lt;/var&gt; 参数指定的参数组成。这些参数应由交替的关键字和值对组成。支持的关键字和值如下：</target>
        </trans-unit>
        <trans-unit id="3e7bc510b1d9657207dfba79f655692f0913950a" translate="yes" xml:space="preserve">
          <source>This function sends a signal to process &lt;var&gt;process&lt;/var&gt;. The argument &lt;var&gt;signal&lt;/var&gt; specifies which signal to send; it should be an integer, or a symbol whose name is a signal.</source>
          <target state="translated">该功能向处理 &lt;var&gt;process&lt;/var&gt; 发送信号。参数 &lt;var&gt;signal&lt;/var&gt; 指定发送哪个信号；它应该是整数，或者是名称为信号的符号。</target>
        </trans-unit>
        <trans-unit id="61f1dd6544deb530ab113d36a1201d765d7c9621" translate="yes" xml:space="preserve">
          <source>This function sends a transaction to queue &lt;var&gt;queue&lt;/var&gt;. Specifying the queue has the effect of specifying the subprocess to talk to.</source>
          <target state="translated">此函数将事务发送到队列 &lt;var&gt;queue&lt;/var&gt; 。指定队列具有指定要交谈的子流程的效果。</target>
        </trans-unit>
        <trans-unit id="f9bfc477f6919c4dd54ed20f09c99e1bd4714c75" translate="yes" xml:space="preserve">
          <source>This function sends the signal &lt;code&gt;SIGQUIT&lt;/code&gt; to the process &lt;var&gt;process&lt;/var&gt;. This signal is the one sent by the quit character (usually</source>
          <target state="translated">该函数将信号 &lt;code&gt;SIGQUIT&lt;/code&gt; 发送到处理 &lt;var&gt;process&lt;/var&gt; 。此信号是退出字符发送的信号（通常是</target>
        </trans-unit>
        <trans-unit id="57abe80a4e9637c06fa334bde358806a416d5f6e" translate="yes" xml:space="preserve">
          <source>This function sends the text from &lt;var&gt;start&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt; as standard input to a process running &lt;var&gt;program&lt;/var&gt;. It deletes the text sent if &lt;var&gt;delete&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;; this is useful when &lt;var&gt;destination&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, to insert the output in the current buffer in place of the input.</source>
          <target state="translated">这个功能发送从文本 &lt;var&gt;start&lt;/var&gt; 到 &lt;var&gt;end&lt;/var&gt; 作为标准输入到一个进程中运行 &lt;var&gt;program&lt;/var&gt; 。它删除发送，如果文本 &lt;var&gt;delete&lt;/var&gt; 是非 &lt;code&gt;nil&lt;/code&gt; ;当 &lt;var&gt;destination&lt;/var&gt; 为 &lt;code&gt;t&lt;/code&gt; 时，这很有用，可以将输出插入到当前缓冲区中，以代替输入。</target>
        </trans-unit>
        <trans-unit id="ba8174a686bdaa317578e096c8a85e26305df50e" translate="yes" xml:space="preserve">
          <source>This function sends the text from &lt;var&gt;start&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt; as standard input to an inferior shell running &lt;var&gt;command&lt;/var&gt;. This function is similar than &lt;code&gt;call-process-region&lt;/code&gt;, with process being a shell. The arguments &lt;code&gt;delete&lt;/code&gt;, &lt;code&gt;destination&lt;/code&gt; and the return value are like in &lt;code&gt;call-process-region&lt;/code&gt;. Note that this function doesn&amp;rsquo;t accept additional arguments.</source>
          <target state="translated">这个功能发送从文本 &lt;var&gt;start&lt;/var&gt; 到 &lt;var&gt;end&lt;/var&gt; 作为标准输入到一个下壳运行 &lt;var&gt;command&lt;/var&gt; 。此功能类似于 &lt;code&gt;call-process-region&lt;/code&gt; ，其中process是一个shell。参数 &lt;code&gt;delete&lt;/code&gt; ， &lt;code&gt;destination&lt;/code&gt; 和返回值类似于 &lt;code&gt;call-process-region&lt;/code&gt; 。请注意，此函数不接受其他参数。</target>
        </trans-unit>
        <trans-unit id="e6d631043267da531eafcdf87917aa51984043a7" translate="yes" xml:space="preserve">
          <source>This function sends the text in the region defined by &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; as standard input to &lt;var&gt;process&lt;/var&gt;.</source>
          <target state="translated">此函数将在 &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 定义的区域中的文本发送为 &lt;var&gt;process&lt;/var&gt; 的标准输入。</target>
        </trans-unit>
        <trans-unit id="c3ff652c9cefcc4cda0cdcd9ca276ae180e78c0b" translate="yes" xml:space="preserve">
          <source>This function separates the elements of &lt;var&gt;sequence&lt;/var&gt; into an alist whose keys are the result of applying &lt;var&gt;function&lt;/var&gt; to each element of &lt;var&gt;sequence&lt;/var&gt;. Keys are compared using &lt;code&gt;equal&lt;/code&gt;.</source>
          <target state="translated">此函数将 &lt;var&gt;sequence&lt;/var&gt; 的元素分隔为一个列表，其键是对每个 &lt;var&gt;sequence&lt;/var&gt; 元素应用 &lt;var&gt;function&lt;/var&gt; 的结果。使用 &lt;code&gt;equal&lt;/code&gt; 比较键。</target>
        </trans-unit>
        <trans-unit id="198c107c1316ee16214b3b5bf1ad21a0282680bb" translate="yes" xml:space="preserve">
          <source>This function sets &lt;code&gt;enable-multibyte-characters&lt;/code&gt; to record which representation is in use. It also adjusts various data in the buffer (including overlays, text properties and markers) so that they cover the same text as they did before.</source>
          <target state="translated">此函数设置 &lt;code&gt;enable-multibyte-characters&lt;/code&gt; 来记录正在使用的表示形式。它还会调整缓冲区中的各种数据（包括覆盖，文本属性和标记），以使它们覆盖与以前相同的文本。</target>
        </trans-unit>
        <trans-unit id="38db8d5d0b14e5fcf34e7ad6d7eed9ccaf560ff5" translate="yes" xml:space="preserve">
          <source>This function sets &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s window state change flag if &lt;var&gt;arg&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; and resets it otherwise. &lt;var&gt;frame&lt;/var&gt; must be a live frame and defaults to the selected one.</source>
          <target state="translated">这个函数设置 &lt;var&gt;frame&lt;/var&gt; 的窗口状态改变标志如果 &lt;var&gt;arg&lt;/var&gt; 是非 &lt;code&gt;nil&lt;/code&gt; 和否则，复位它。 &lt;var&gt;frame&lt;/var&gt; 必须是实时帧，并且默认为所选帧。</target>
        </trans-unit>
        <trans-unit id="185316fe3bdf798d473ccd31e762ce5375b8c920" translate="yes" xml:space="preserve">
          <source>This function sets &lt;var&gt;property&lt;/var&gt; of &lt;var&gt;function&lt;/var&gt; to &lt;var&gt;value&lt;/var&gt;. &lt;var&gt;function&lt;/var&gt; should be a symbol. This function is preferred to calling &lt;code&gt;put&lt;/code&gt; for setting properties of a function, because it will allow us some day to implement remapping of old properties to new ones.</source>
          <target state="translated">该功能可设置 &lt;var&gt;property&lt;/var&gt; 的 &lt;var&gt;function&lt;/var&gt; ，以 &lt;var&gt;value&lt;/var&gt; 。 &lt;var&gt;function&lt;/var&gt; 应该是一个符号。此函数优于调用 &lt;code&gt;put&lt;/code&gt; 来设置函数的属性，因为它将使我们有一天能够实现将旧属性重新映射为新属性。</target>
        </trans-unit>
        <trans-unit id="ae2697c8f107bbd3d1e782f909d8f40d74488d80" translate="yes" xml:space="preserve">
          <source>This function sets &lt;var&gt;symbol&lt;/var&gt;&amp;rsquo;s property list to &lt;var&gt;plist&lt;/var&gt;. Normally, &lt;var&gt;plist&lt;/var&gt; should be a well-formed property list, but this is not enforced. The return value is &lt;var&gt;plist&lt;/var&gt;.</source>
          <target state="translated">此功能将 &lt;var&gt;symbol&lt;/var&gt; 的属性列表设置为 &lt;var&gt;plist&lt;/var&gt; 。通常， &lt;var&gt;plist&lt;/var&gt; 应该是格式正确的属性列表，但这不是强制性的。返回值为 &lt;var&gt;plist&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="04c98837dcbee57bf0edcdd44b78b672d2aea93c" translate="yes" xml:space="preserve">
          <source>This function sets &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s previous buffers to the value of &lt;var&gt;prev-buffers&lt;/var&gt;. The argument &lt;var&gt;window&lt;/var&gt; must be a live window and defaults to the selected one. The argument &lt;var&gt;prev-buffers&lt;/var&gt; should be a list of the same form as that returned by &lt;code&gt;window-prev-buffers&lt;/code&gt;.</source>
          <target state="translated">此函数将 &lt;var&gt;window&lt;/var&gt; 的先前缓冲区设置为 &lt;var&gt;prev-buffers&lt;/var&gt; 的值。参数 &lt;var&gt;window&lt;/var&gt; 必须是活动窗口，并且默认为所选窗口。参数 &lt;var&gt;prev-buffers&lt;/var&gt; 应该是与 &lt;code&gt;window-prev-buffers&lt;/code&gt; 返回的形式相同的列表。</target>
        </trans-unit>
        <trans-unit id="96dc71440be002ad9dfdbcc602de3ea5e6a10b8b" translate="yes" xml:space="preserve">
          <source>This function sets &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s value of &lt;var&gt;parameter&lt;/var&gt; to &lt;var&gt;value&lt;/var&gt; and returns &lt;var&gt;value&lt;/var&gt;. The default for &lt;var&gt;window&lt;/var&gt; is the selected window.</source>
          <target state="translated">此函数将 &lt;var&gt;window&lt;/var&gt; 的 &lt;var&gt;parameter&lt;/var&gt; &lt;var&gt;value&lt;/var&gt; 设置为value并返回 &lt;var&gt;value&lt;/var&gt; 。 &lt;var&gt;window&lt;/var&gt; 的默认值为选定的窗口。</target>
        </trans-unit>
        <trans-unit id="95364a7df69f3c257f53ef31901ba13af2d26bbb" translate="yes" xml:space="preserve">
          <source>This function sets &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s vertical scroll position to &lt;var&gt;lines&lt;/var&gt;. If &lt;var&gt;window&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the selected window is used. The argument &lt;var&gt;lines&lt;/var&gt; should be zero or positive; if not, it is taken as zero.</source>
          <target state="translated">此功能可将 &lt;var&gt;window&lt;/var&gt; 的垂直滚动位置设置为 &lt;var&gt;lines&lt;/var&gt; 。如果 &lt;var&gt;window&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则使用选定的窗口。参数 &lt;var&gt;lines&lt;/var&gt; 应为零或正；如果不是，则视为零。</target>
        </trans-unit>
        <trans-unit id="7b4a0fad7bd34a59f597431d205b7d12e946aa28" translate="yes" xml:space="preserve">
          <source>This function sets a window-system selection. It takes two arguments: a selection type &lt;var&gt;type&lt;/var&gt;, and the value to assign to it, &lt;var&gt;data&lt;/var&gt;.</source>
          <target state="translated">此功能设置窗口系统选择。它带有两个参数：选择类型 &lt;var&gt;type&lt;/var&gt; 和要为其分配的值 &lt;var&gt;data&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="a455f3607009635f3fcfc2b2aeb99bb7f4951fad" translate="yes" xml:space="preserve">
          <source>This function sets horizontal scrolling of &lt;var&gt;window&lt;/var&gt;. The value of &lt;var&gt;columns&lt;/var&gt; specifies the amount of scrolling, in terms of columns from the left margin (right margin in right-to-left paragraphs). The argument &lt;var&gt;columns&lt;/var&gt; should be zero or positive; if not, it is taken as zero. Fractional values of &lt;var&gt;columns&lt;/var&gt; are not supported at present.</source>
          <target state="translated">此功能设置 &lt;var&gt;window&lt;/var&gt; 水平滚动。 &lt;var&gt;columns&lt;/var&gt; 的值指定从左页边距（从右到左的段落中的右页边距）的列的滚动量。参数 &lt;var&gt;columns&lt;/var&gt; 应为零或正。如果不是，则视为零。目前不支持 &lt;var&gt;columns&lt;/var&gt; 分数值。</target>
        </trans-unit>
        <trans-unit id="2691fc741caac070bb7961b94fe98d08a049a90a" translate="yes" xml:space="preserve">
          <source>This function sets one or more attributes of &lt;var&gt;face&lt;/var&gt; for &lt;var&gt;frame&lt;/var&gt;. The attributes specifies in this way override the face spec(s) belonging to &lt;var&gt;face&lt;/var&gt;.</source>
          <target state="translated">此功能为 &lt;var&gt;frame&lt;/var&gt; 设置 &lt;var&gt;face&lt;/var&gt; 一个或多个属性。以这种方式指定的属性将覆盖属于 &lt;var&gt;face&lt;/var&gt; 的面部规范。</target>
        </trans-unit>
        <trans-unit id="6d032676039653f52fabf726805867a29f18005e" translate="yes" xml:space="preserve">
          <source>This function sets or modifies a network option for network process &lt;var&gt;process&lt;/var&gt;. The accepted options and values are as for &lt;code&gt;make-network-process&lt;/code&gt;. If &lt;var&gt;no-error&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function returns &lt;code&gt;nil&lt;/code&gt; instead of signaling an error if &lt;var&gt;option&lt;/var&gt; is not a supported option. If the function successfully completes, it returns &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">此功能设置或修改网络处理 &lt;var&gt;process&lt;/var&gt; 的网络选项。可接受的选项和值与 &lt;code&gt;make-network-process&lt;/code&gt; 相同。如果 &lt;var&gt;no-error&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则如果 &lt;var&gt;option&lt;/var&gt; 不是受支持的选项，则此函数返回 &lt;code&gt;nil&lt;/code&gt; 而不是发出错误信号。如果函数成功完成，则返回 &lt;code&gt;t&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a09056770339ed6e3896bc0f8270829f5aed9093" translate="yes" xml:space="preserve">
          <source>This function sets point in the current buffer to the value &lt;var&gt;position&lt;/var&gt;.</source>
          <target state="translated">该函数将当前缓冲区中的点设置为值 &lt;var&gt;position&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="24569c05a9e6a190b75a9b1cf25e78030e614d61" translate="yes" xml:space="preserve">
          <source>This function sets the &lt;em&gt;combination limit&lt;/em&gt; of the window &lt;var&gt;window&lt;/var&gt; to &lt;var&gt;limit&lt;/var&gt;. This value can be retrieved via the function &lt;code&gt;window-combination-limit&lt;/code&gt;. See below for its effects; note that it is only meaningful for internal windows. The &lt;code&gt;split-window&lt;/code&gt; function automatically calls this function, passing it &lt;code&gt;t&lt;/code&gt; as &lt;var&gt;limit&lt;/var&gt;, provided the value of the variable &lt;code&gt;window-combination-limit&lt;/code&gt; is &lt;code&gt;t&lt;/code&gt; when it is called.</source>
          <target state="translated">这个函数设置&lt;em&gt;组合限制&lt;/em&gt;窗口的 &lt;var&gt;window&lt;/var&gt; 来 &lt;var&gt;limit&lt;/var&gt; 。可以通过 &lt;code&gt;window-combination-limit&lt;/code&gt; 函数检索该值。见下面的效果。请注意，它仅对内部窗口有意义。所述 &lt;code&gt;split-window&lt;/code&gt; 函数自动调用此函数，传递 &lt;code&gt;t&lt;/code&gt; 作为 &lt;var&gt;limit&lt;/var&gt; ，提供的变量的值 &lt;code&gt;window-combination-limit&lt;/code&gt; 是 &lt;code&gt;t&lt;/code&gt; ，当它被调用。</target>
        </trans-unit>
        <trans-unit id="9ad1968d81a7be405ee4e8faa839e8d7781a073e" translate="yes" xml:space="preserve">
          <source>This function sets the &lt;em&gt;file mode&lt;/em&gt; (or &lt;em&gt;permissions&lt;/em&gt;) of &lt;var&gt;filename&lt;/var&gt; to &lt;var&gt;mode&lt;/var&gt;. This function follows symbolic links.</source>
          <target state="translated">此函数将 &lt;var&gt;filename&lt;/var&gt; 的&lt;em&gt;文件模式&lt;/em&gt;（或&lt;em&gt;权限&lt;/em&gt;）设置为 &lt;var&gt;mode&lt;/var&gt; 。此功能遵循符号链接。</target>
        </trans-unit>
        <trans-unit id="894edf2814268e95297fea0090f5c3ee1a19e55b" translate="yes" xml:space="preserve">
          <source>This function sets the &lt;var&gt;index&lt;/var&gt;th element of &lt;var&gt;array&lt;/var&gt; to be &lt;var&gt;object&lt;/var&gt;. It returns &lt;var&gt;object&lt;/var&gt;.</source>
          <target state="translated">这个函数设置 &lt;var&gt;index&lt;/var&gt; 的第i个元素 &lt;var&gt;array&lt;/var&gt; 为 &lt;var&gt;object&lt;/var&gt; 。它返回 &lt;var&gt;object&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="3db3cbcd3a9c0df821c1baa1d992a14e6ae7e4ef" translate="yes" xml:space="preserve">
          <source>This function sets the &lt;var&gt;prop&lt;/var&gt; property to &lt;var&gt;value&lt;/var&gt; for the text between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; in the string or buffer &lt;var&gt;object&lt;/var&gt;. If &lt;var&gt;object&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it defaults to the current buffer.</source>
          <target state="translated">此函数将 &lt;var&gt;prop&lt;/var&gt; 属性设置为字符串或缓冲区 &lt;var&gt;object&lt;/var&gt; &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 之间的文本的 &lt;var&gt;value&lt;/var&gt; 。如果 &lt;var&gt;object&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则默认为当前缓冲区。</target>
        </trans-unit>
        <trans-unit id="e8747da81d65b47ec8dc236636dc6894a2448ef8" translate="yes" xml:space="preserve">
          <source>This function sets the &lt;var&gt;propname&lt;/var&gt; property of &lt;var&gt;charset&lt;/var&gt; to the given &lt;var&gt;value&lt;/var&gt;.</source>
          <target state="translated">此函数将 &lt;var&gt;charset&lt;/var&gt; 的 &lt;var&gt;propname&lt;/var&gt; 属性设置为给定 &lt;var&gt;value&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="2dc9dbdede25628c36f5c5ffaba6b04adc24fa1c" translate="yes" xml:space="preserve">
          <source>This function sets the Access Control List for &lt;var&gt;filename&lt;/var&gt; to &lt;var&gt;acl&lt;/var&gt;. The &lt;var&gt;acl&lt;/var&gt; argument should have the same form returned by the function &lt;code&gt;file-acl&lt;/code&gt;. See &lt;a href=&quot;extended-attributes#Extended-Attributes&quot;&gt;Extended Attributes&lt;/a&gt;.</source>
          <target state="translated">这个函数设置访问控制列表 &lt;var&gt;filename&lt;/var&gt; 来 &lt;var&gt;acl&lt;/var&gt; 。该 &lt;var&gt;acl&lt;/var&gt; 参数应该由该函数返回的形式相同 &lt;code&gt;file-acl&lt;/code&gt; 。请参阅&lt;a href=&quot;extended-attributes#Extended-Attributes&quot;&gt;扩展属性&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d6dc2bb322377c867ec980ee6ae90e41feb0b758" translate="yes" xml:space="preserve">
          <source>This function sets the C pointer embedded in the &lt;code&gt;user-ptr&lt;/code&gt; object represented by &lt;var&gt;value&lt;/var&gt; to &lt;var&gt;ptr&lt;/var&gt;.</source>
          <target state="translated">此函数将嵌入在由 &lt;var&gt;value&lt;/var&gt; 表示的 &lt;code&gt;user-ptr&lt;/code&gt; 对象中的C指针设置为 &lt;var&gt;ptr&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="c60c34f44a7a27ac4e9c2daa42a523e271c4415c" translate="yes" xml:space="preserve">
          <source>This function sets the Emacs-recognized extended file attributes for &lt;code&gt;filename&lt;/code&gt;. The second argument &lt;var&gt;attribute-alist&lt;/var&gt; should be an alist of the same form returned by &lt;code&gt;file-extended-attributes&lt;/code&gt;. The return value is &lt;code&gt;t&lt;/code&gt; if the attributes are successfully set, otherwise it is &lt;code&gt;nil&lt;/code&gt;. See &lt;a href=&quot;extended-attributes#Extended-Attributes&quot;&gt;Extended Attributes&lt;/a&gt;.</source>
          <target state="translated">此函数将Emacs识别的扩展文件属性设置为 &lt;code&gt;filename&lt;/code&gt; 。第二个参数 &lt;var&gt;attribute-alist&lt;/var&gt; 应该是 &lt;code&gt;file-extended-attributes&lt;/code&gt; 返回的相同形式的列表。如果属性设置成功，则返回值为 &lt;code&gt;t&lt;/code&gt; ，否则为 &lt;code&gt;nil&lt;/code&gt; 。请参阅&lt;a href=&quot;extended-attributes#Extended-Attributes&quot;&gt;扩展属性&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="76f5b2231c3bd0857bda4500395ec579d7002ebf" translate="yes" xml:space="preserve">
          <source>This function sets the SELinux security context for &lt;var&gt;filename&lt;/var&gt; to &lt;var&gt;context&lt;/var&gt;. The &lt;var&gt;context&lt;/var&gt; argument should be a list &lt;code&gt;(&lt;var&gt;user&lt;/var&gt; &lt;var&gt;role&lt;/var&gt; &lt;var&gt;type&lt;/var&gt; &lt;var&gt;range&lt;/var&gt;)&lt;/code&gt;, where each element is a string. See &lt;a href=&quot;extended-attributes#Extended-Attributes&quot;&gt;Extended Attributes&lt;/a&gt;.</source>
          <target state="translated">此函数将SELinux安全上下文的 &lt;var&gt;filename&lt;/var&gt; 为 &lt;var&gt;context&lt;/var&gt; 。的 &lt;var&gt;context&lt;/var&gt; 参数应该是一个列表 &lt;code&gt;(&lt;var&gt;user&lt;/var&gt; &lt;var&gt;role&lt;/var&gt; &lt;var&gt;type&lt;/var&gt; &lt;var&gt;range&lt;/var&gt;)&lt;/code&gt; ，其中每个元素是一个字符串。请参阅&lt;a href=&quot;extended-attributes#Extended-Attributes&quot;&gt;扩展属性&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="aa3771987747d26afa321f6b694b7946c3677e4e" translate="yes" xml:space="preserve">
          <source>This function sets the access and modification times of &lt;var&gt;filename&lt;/var&gt; to &lt;var&gt;time&lt;/var&gt;. The return value is &lt;code&gt;t&lt;/code&gt; if the times are successfully set, otherwise it is &lt;code&gt;nil&lt;/code&gt;. &lt;var&gt;time&lt;/var&gt; defaults to the current time and must be a time value (see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;).</source>
          <target state="translated">此函数将 &lt;var&gt;filename&lt;/var&gt; 的访问和修改时间设置为 &lt;var&gt;time&lt;/var&gt; 。如果成功设置了时间，则返回值为 &lt;code&gt;t&lt;/code&gt; ，否则为 &lt;code&gt;nil&lt;/code&gt; 。 &lt;var&gt;time&lt;/var&gt; 默认为当前时间，并且必须为时间值（请参见&lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="47f2d6313d96f9b0745cdb73f6a8c3da02eb9ed3" translate="yes" xml:space="preserve">
          <source>This function sets the accessible portion of the current buffer to include just the current page. An optional first argument &lt;var&gt;move-count&lt;/var&gt; non-&lt;code&gt;nil&lt;/code&gt; means to move forward or backward by &lt;var&gt;move-count&lt;/var&gt; pages and then narrow to one page. The variable &lt;code&gt;page-delimiter&lt;/code&gt; specifies where pages start and end (see &lt;a href=&quot;standard-regexps#Standard-Regexps&quot;&gt;Standard Regexps&lt;/a&gt;).</source>
          <target state="translated">此函数将当前缓冲区的可访问部分设置为仅包括当前页面。可选的第一个参数 &lt;var&gt;move-count&lt;/var&gt; 不 &lt;code&gt;nil&lt;/code&gt; 手段中向前或向后移动 &lt;var&gt;move-count&lt;/var&gt; 页面，然后缩小到一个页面。变量 &lt;code&gt;page-delimiter&lt;/code&gt; 指定页面的开始和结束位置（请参见&lt;a href=&quot;standard-regexps#Standard-Regexps&quot;&gt;Standard Regexps&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="2e612ca403bca38f0c1bdcfd957110e240fb5565" translate="yes" xml:space="preserve">
          <source>This function sets the accessible portion of the current buffer to start at &lt;var&gt;start&lt;/var&gt; and end at &lt;var&gt;end&lt;/var&gt;. Both arguments should be character positions.</source>
          <target state="translated">此函数将当前缓冲区的可访问部分设置为从 &lt;var&gt;start&lt;/var&gt; 开始，到 &lt;var&gt;end&lt;/var&gt; 结束。两个参数都应该是字符位置。</target>
        </trans-unit>
        <trans-unit id="a380ca37b7eadc09d46bf7eca0da28b0c371828e" translate="yes" xml:space="preserve">
          <source>This function sets the base remapping of &lt;var&gt;face&lt;/var&gt; in the current buffer to &lt;var&gt;specs&lt;/var&gt;. If &lt;var&gt;specs&lt;/var&gt; is empty, the default base remapping is restored, similar to calling &lt;code&gt;face-remap-reset-base&lt;/code&gt; (see below); note that this is different from &lt;var&gt;specs&lt;/var&gt; containing a single value &lt;code&gt;nil&lt;/code&gt;, which has the opposite result (the global definition of &lt;var&gt;face&lt;/var&gt; is ignored).</source>
          <target state="translated">此函数将当前缓冲区中 &lt;var&gt;face&lt;/var&gt; 的基本重映射设置为 &lt;var&gt;specs&lt;/var&gt; 。如果 &lt;var&gt;specs&lt;/var&gt; 为空，则恢复默认的基本重映射，类似于调用 &lt;code&gt;face-remap-reset-base&lt;/code&gt; （请参见下文）；请注意，这与包含单个值 &lt;code&gt;nil&lt;/code&gt; 的 &lt;var&gt;specs&lt;/var&gt; 不同，后者的结果相反（忽略 &lt;var&gt;face&lt;/var&gt; 的全局定义）。</target>
        </trans-unit>
        <trans-unit id="77e8b31efcdb8939a7766a5264d619fc95c0e96e" translate="yes" xml:space="preserve">
          <source>This function sets the base remapping of &lt;var&gt;face&lt;/var&gt; to its default value, which inherits from &lt;var&gt;face&lt;/var&gt;&amp;rsquo;s global definition.</source>
          <target state="translated">此函数将人 &lt;var&gt;face&lt;/var&gt; 的基本重映射设置为其默认值，该默认值继承自人 &lt;var&gt;face&lt;/var&gt; 的全局定义。</target>
        </trans-unit>
        <trans-unit id="ebb95607e6b50257ccae939ab2c8aa2da4f1c1b5" translate="yes" xml:space="preserve">
          <source>This function sets the binding for &lt;var&gt;key&lt;/var&gt; in &lt;var&gt;keymap&lt;/var&gt;. (If &lt;var&gt;key&lt;/var&gt; is more than one event long, the change is actually made in another keymap reached from &lt;var&gt;keymap&lt;/var&gt;.) The argument &lt;var&gt;binding&lt;/var&gt; can be any Lisp object, but only certain types are meaningful. (For a list of meaningful types, see &lt;a href=&quot;key-lookup#Key-Lookup&quot;&gt;Key Lookup&lt;/a&gt;.) The value returned by &lt;code&gt;define-key&lt;/code&gt; is &lt;var&gt;binding&lt;/var&gt;.</source>
          <target state="translated">此功能设置为绑定 &lt;var&gt;key&lt;/var&gt; 的 &lt;var&gt;keymap&lt;/var&gt; 。（如果 &lt;var&gt;key&lt;/var&gt; 长于一个事件长，则更改实际上是在从 &lt;var&gt;keymap&lt;/var&gt; 到达的另一个keymap中进行的。）参数 &lt;var&gt;binding&lt;/var&gt; 可以是任何Lisp对象，但是只有某些类型才有意义。（有关有意义的类型的列表，请参见&lt;a href=&quot;key-lookup#Key-Lookup&quot;&gt;Key Lookup&lt;/a&gt;。） &lt;code&gt;define-key&lt;/code&gt; 返回的值是 &lt;var&gt;binding&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="c5972870ac008dc5ea5e72291038289594f93470" translate="yes" xml:space="preserve">
          <source>This function sets the binding of &lt;var&gt;key&lt;/var&gt; in the current global map to &lt;var&gt;binding&lt;/var&gt;.</source>
          <target state="translated">此函数将当前全局映射中的 &lt;var&gt;key&lt;/var&gt; 绑定设置为 &lt;var&gt;binding&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="a6fac0dc347c58ef12731886abbe64fc8c1af622" translate="yes" xml:space="preserve">
          <source>This function sets the binding of &lt;var&gt;key&lt;/var&gt; in the current local keymap to &lt;var&gt;binding&lt;/var&gt;.</source>
          <target state="translated">此函数将当前本地 &lt;var&gt;key&lt;/var&gt; 映射中的键绑定设置为 &lt;var&gt;binding&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="47a09db14b556c9c785678dc6d2f2942700a3fef" translate="yes" xml:space="preserve">
          <source>This function sets the buffer associated with &lt;var&gt;process&lt;/var&gt; to &lt;var&gt;buffer&lt;/var&gt;. If &lt;var&gt;buffer&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the process becomes associated with no buffer.</source>
          <target state="translated">此函数将与 &lt;var&gt;process&lt;/var&gt; 关联的缓冲区设置为 &lt;var&gt;buffer&lt;/var&gt; 。如果 &lt;var&gt;buffer&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则该过程不与任何缓冲区关联。</target>
        </trans-unit>
        <trans-unit id="3d10326c95927a931f13440e7844bb6ed76c546a" translate="yes" xml:space="preserve">
          <source>This function sets the buffer major mode, and parses local variables (see &lt;a href=&quot;auto-major-mode#Auto-Major-Mode&quot;&gt;Auto Major Mode&lt;/a&gt;). It is called by &lt;code&gt;find-file-noselect&lt;/code&gt; and by the default revert function (see &lt;a href=&quot;reverting#Reverting&quot;&gt;Reverting&lt;/a&gt;).</source>
          <target state="translated">此函数设置缓冲区主模式，并解析局部变量（请参见&lt;a href=&quot;auto-major-mode#Auto-Major-Mode&quot;&gt;自动主模式&lt;/a&gt;）。它是由被称为 &lt;code&gt;find-file-noselect&lt;/code&gt; 和默认的还原功能（参见&lt;a href=&quot;reverting#Reverting&quot;&gt;还原&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="b24eecc002950857672fd643cb572d1fec097a1e" translate="yes" xml:space="preserve">
          <source>This function sets the contents of register &lt;var&gt;reg&lt;/var&gt; to &lt;var&gt;value&lt;/var&gt;. A register can be set to any value, but the other register functions expect only certain data types. The return value is &lt;var&gt;value&lt;/var&gt;.</source>
          <target state="translated">此函数将寄存器 &lt;var&gt;reg&lt;/var&gt; 的内容设置为 &lt;var&gt;value&lt;/var&gt; 。寄存器可以设置为任何值，但是其他寄存器功能仅需要某些数据类型。返回值是 &lt;var&gt;value&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="7d1db1c8636056dc9c8dcf7fd6b28bf2e658f3d9" translate="yes" xml:space="preserve">
          <source>This function sets the current buffer&amp;rsquo;s mark to &lt;var&gt;position&lt;/var&gt;, and pushes a copy of the previous mark onto &lt;code&gt;mark-ring&lt;/code&gt;. If &lt;var&gt;position&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, then the value of point is used.</source>
          <target state="translated">此功能将当前缓冲区的标记设置到 &lt;var&gt;position&lt;/var&gt; ，并将上一个标记的副本推入 &lt;code&gt;mark-ring&lt;/code&gt; 。如果 &lt;var&gt;position&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则使用point的值。</target>
        </trans-unit>
        <trans-unit id="c9188f08d4d0de2dc3d968c34756665ced1f3af4" translate="yes" xml:space="preserve">
          <source>This function sets the debug-on-exit flag of the stack frame &lt;var&gt;level&lt;/var&gt; levels down the stack, giving it the value &lt;var&gt;flag&lt;/var&gt;. If &lt;var&gt;flag&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this will cause the debugger to be entered when that frame later exits. Even a nonlocal exit through that frame will enter the debugger.</source>
          <target state="translated">此函数将堆栈帧 &lt;var&gt;level&lt;/var&gt; 的退出调试标志设置为向下堆栈级别，并为其赋予value &lt;var&gt;flag&lt;/var&gt; 。如果 &lt;var&gt;flag&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，这将导致稍后退出该帧时进入调试器。即使通过该帧的非本地出口也将进入调试器。</target>
        </trans-unit>
        <trans-unit id="308e7294f331e155466bb85e91f2747e3d32e79a" translate="yes" xml:space="preserve">
          <source>This function sets the default permissions for new files created by Emacs and its subprocesses. Every file created with Emacs initially has these permissions, or a subset of them (&lt;code&gt;write-region&lt;/code&gt; will not grant execute permissions even if the default file permissions allow execution). On GNU and other POSIX-like systems, the default permissions are given by the bitwise complement of the &amp;lsquo;</source>
          <target state="translated">此功能为Emacs及其子进程创建的新文件设置默认权限。使用Emacs创建的每个文件最初都具有这些权限或它们的一部分（即使默认文件权限允许执行， &lt;code&gt;write-region&lt;/code&gt; 也不会授予执行权限）。在GNU和其他类似POSIX的系统上，默认权限由'</target>
        </trans-unit>
        <trans-unit id="3b83873a5445a410d77405199b5187de63fcc6c7" translate="yes" xml:space="preserve">
          <source>This function sets the display table of &lt;var&gt;window&lt;/var&gt; to &lt;var&gt;table&lt;/var&gt;. The argument &lt;var&gt;table&lt;/var&gt; should be either a display table or &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此功能将 &lt;var&gt;window&lt;/var&gt; 的显示表设置为 &lt;var&gt;table&lt;/var&gt; 。参数 &lt;var&gt;table&lt;/var&gt; 应该是显示表或 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4a7a7f2249d7d6cd2355d17a2251e2fb4f1f7098" translate="yes" xml:space="preserve">
          <source>This function sets the display-start position of &lt;var&gt;window&lt;/var&gt; to &lt;var&gt;position&lt;/var&gt; in &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s buffer. It returns &lt;var&gt;position&lt;/var&gt;.</source>
          <target state="translated">这个函数设置的显示开始位置 &lt;var&gt;window&lt;/var&gt; 到 &lt;var&gt;position&lt;/var&gt; 在 &lt;var&gt;window&lt;/var&gt; 的缓冲液中。它返回 &lt;var&gt;position&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="97ae9459f8d5e9fb33d39a21b359887306326b23" translate="yes" xml:space="preserve">
          <source>This function sets the frame parameter &lt;var&gt;parm&lt;/var&gt; to the specified &lt;var&gt;value&lt;/var&gt;. If &lt;var&gt;frame&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected frame.</source>
          <target state="translated">此函数将帧参数 &lt;var&gt;parm&lt;/var&gt; 设置为指定 &lt;var&gt;value&lt;/var&gt; 。如果 &lt;var&gt;frame&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则默认为选定的帧。</target>
        </trans-unit>
        <trans-unit id="c97ef40bf03d8f1aea1070300ccec8136c47b4db" translate="yes" xml:space="preserve">
          <source>This function sets the fringe widths of window &lt;var&gt;window&lt;/var&gt;. If &lt;var&gt;window&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the selected window is used.</source>
          <target state="translated">此功能设置窗口的边缘宽度 &lt;var&gt;window&lt;/var&gt; 。如果 &lt;var&gt;window&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则使用选定的窗口。</target>
        </trans-unit>
        <trans-unit id="83ecc4a6cd4aa994edd5a6447e7a78b8e6ff227f" translate="yes" xml:space="preserve">
          <source>This function sets the insertion type of marker &lt;var&gt;marker&lt;/var&gt; to &lt;var&gt;type&lt;/var&gt;. If &lt;var&gt;type&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, &lt;var&gt;marker&lt;/var&gt; will advance when text is inserted at its position. If &lt;var&gt;type&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;marker&lt;/var&gt; does not advance when text is inserted there.</source>
          <target state="translated">此功能将标记 &lt;var&gt;marker&lt;/var&gt; 的插入类型设置为 &lt;var&gt;type&lt;/var&gt; 。如果 &lt;var&gt;type&lt;/var&gt; 为 &lt;code&gt;t&lt;/code&gt; ，则将文本插入其位置时 &lt;var&gt;marker&lt;/var&gt; 会前进。如果 &lt;var&gt;type&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则在其中插入文本时 &lt;var&gt;marker&lt;/var&gt; 不会前进。</target>
        </trans-unit>
        <trans-unit id="4a6f47655132ae6e464a121fb49b79ed0583df94" translate="yes" xml:space="preserve">
          <source>This function sets the major mode of &lt;var&gt;buffer&lt;/var&gt; to the default value of &lt;code&gt;major-mode&lt;/code&gt;; if that is &lt;code&gt;nil&lt;/code&gt;, it uses the current buffer&amp;rsquo;s major mode (if that is suitable). As an exception, if &lt;var&gt;buffer&lt;/var&gt;&amp;rsquo;s name is</source>
          <target state="translated">该函数将 &lt;var&gt;buffer&lt;/var&gt; 的主模式设置为默认值 &lt;code&gt;major-mode&lt;/code&gt; ；如果为 &lt;code&gt;nil&lt;/code&gt; ，则使用当前缓冲区的主模式（如果合适）。作为例外，如果 &lt;var&gt;buffer&lt;/var&gt; 的名称是</target>
        </trans-unit>
        <trans-unit id="e71767525b2252ad6e9d8e738b9dc78da825e49e" translate="yes" xml:space="preserve">
          <source>This function sets the mark to &lt;var&gt;position&lt;/var&gt;, and activates the mark. The old value of the mark is &lt;em&gt;not&lt;/em&gt; pushed onto the mark ring.</source>
          <target state="translated">此功能将标记设置为 &lt;var&gt;position&lt;/var&gt; 并激活标记。标记的旧值&lt;em&gt;不会&lt;/em&gt;推入标记环。</target>
        </trans-unit>
        <trans-unit id="589fb91eb0f177f688c981a6a3fbede785b0fea5" translate="yes" xml:space="preserve">
          <source>This function sets the match data from the elements of &lt;var&gt;match-list&lt;/var&gt;, which should be a list that was the value of a previous call to &lt;code&gt;match-data&lt;/code&gt;. (More precisely, anything that has the same format will work.)</source>
          <target state="translated">此函数根据 &lt;var&gt;match-list&lt;/var&gt; 的元素设置匹配数据，该元素应该是一个列表，该列表是先前对 &lt;code&gt;match-data&lt;/code&gt; 的调用的值。（更确切地说，任何具有相同格式的东西都可以使用。）</target>
        </trans-unit>
        <trans-unit id="97eaf47c7114898820304792ea697d536d3b0560" translate="yes" xml:space="preserve">
          <source>This function sets the mode for reading keyboard input. If &lt;var&gt;interrupt&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then Emacs uses input interrupts. If it is &lt;code&gt;nil&lt;/code&gt;, then it uses &lt;small&gt;CBREAK&lt;/small&gt; mode. The default setting is system-dependent. Some systems always use &lt;small&gt;CBREAK&lt;/small&gt; mode regardless of what is specified.</source>
          <target state="translated">此功能设置读取键盘输入的模式。如果 &lt;var&gt;interrupt&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则Emacs使用输入中断。如果为 &lt;code&gt;nil&lt;/code&gt; ，则使用&lt;small&gt;CBREAK&lt;/small&gt;模式。默认设置取决于系统。某些系统始终使用&lt;small&gt;CBREAK&lt;/small&gt;模式，无论指定了什么。</target>
        </trans-unit>
        <trans-unit id="71d84482e16ce0fca0f8b33b252a44e942e9320d" translate="yes" xml:space="preserve">
          <source>This function sets the next buffer list of &lt;var&gt;window&lt;/var&gt; to &lt;var&gt;next-buffers&lt;/var&gt;. The &lt;var&gt;window&lt;/var&gt; argument should be a live window or &lt;code&gt;nil&lt;/code&gt; (meaning the selected window). The argument &lt;var&gt;next-buffers&lt;/var&gt; should be a list of buffers.</source>
          <target state="translated">此函数将 &lt;var&gt;window&lt;/var&gt; 的下一个缓冲区列表设置为 &lt;var&gt;next-buffers&lt;/var&gt; 。的 &lt;var&gt;window&lt;/var&gt; 参数应该是一个实时窗口或 &lt;code&gt;nil&lt;/code&gt; （表示所选择的窗口）。参数 &lt;var&gt;next-buffers&lt;/var&gt; 应该是缓冲区列表。</target>
        </trans-unit>
        <trans-unit id="1e59169e890a9ecd1a2a2f870ffce961d6f3f694" translate="yes" xml:space="preserve">
          <source>This function sets the outer frame position of &lt;var&gt;frame&lt;/var&gt; to (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;). The latter arguments specify pixels and normally count from the origin at the position (0, 0) of &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s display. For child frames, they count from the native position of &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s parent frame.</source>
          <target state="translated">这个函数设置的外框的位置 &lt;var&gt;frame&lt;/var&gt; 到（ &lt;var&gt;x&lt;/var&gt; ， &lt;var&gt;y&lt;/var&gt; ）。后一个参数指定像素，通常从 &lt;var&gt;frame&lt;/var&gt; 显示位置（0，0）的原点开始计数。对于子框架，它们从 &lt;var&gt;frame&lt;/var&gt; 的父框架的原始位置开始计数。</target>
        </trans-unit>
        <trans-unit id="b853c72596a6f7e79f4e7715b920798e076661d4" translate="yes" xml:space="preserve">
          <source>This function sets the parameter &lt;var&gt;parameter&lt;/var&gt; of &lt;var&gt;terminal&lt;/var&gt; to the specified &lt;var&gt;value&lt;/var&gt;, and returns the previous value of that parameter.</source>
          <target state="translated">这个函数设置参数 &lt;var&gt;parameter&lt;/var&gt; 的 &lt;var&gt;terminal&lt;/var&gt; 到指定的 &lt;var&gt;value&lt;/var&gt; ，并返回该参数的先前值。</target>
        </trans-unit>
        <trans-unit id="9bc74143c0437eaedf4fc4df9dc051546f90821a" translate="yes" xml:space="preserve">
          <source>This function sets the parent of &lt;var&gt;char-table&lt;/var&gt; to &lt;var&gt;new-parent&lt;/var&gt;.</source>
          <target state="translated">此函数将 &lt;var&gt;char-table&lt;/var&gt; 的父级设置为 &lt;var&gt;new-parent&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="2e167469cf19c5707d1af22ed0b80a70f576bbfa" translate="yes" xml:space="preserve">
          <source>This function sets the process plist of &lt;var&gt;process&lt;/var&gt; to &lt;var&gt;plist&lt;/var&gt;.</source>
          <target state="translated">此功能设置的过程中的plist &lt;var&gt;process&lt;/var&gt; 到 &lt;var&gt;plist&lt;/var&gt; 中。</target>
        </trans-unit>
        <trans-unit id="0d543e1a094238616d2188e17ad03134a1ee4411" translate="yes" xml:space="preserve">
          <source>This function sets the query flag of &lt;var&gt;process&lt;/var&gt; to &lt;var&gt;flag&lt;/var&gt;. It returns &lt;var&gt;flag&lt;/var&gt;.</source>
          <target state="translated">此功能将 &lt;var&gt;process&lt;/var&gt; 的查询标志设置为 &lt;var&gt;flag&lt;/var&gt; 。它返回 &lt;var&gt;flag&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="916bd48de6eb7abd4ec728e71d1b6170590bf5d7" translate="yes" xml:space="preserve">
          <source>This function sets the size of the text area of &lt;var&gt;frame&lt;/var&gt;, measured in terms of the canonical height and width of a character on &lt;var&gt;frame&lt;/var&gt; (see &lt;a href=&quot;frame-font#Frame-Font&quot;&gt;Frame Font&lt;/a&gt;).</source>
          <target state="translated">这个函数设置的文本区域的尺寸 &lt;var&gt;frame&lt;/var&gt; ，在字符的在典型的高度和宽度来测量 &lt;var&gt;frame&lt;/var&gt; （参见&lt;a href=&quot;frame-font#Frame-Font&quot;&gt;框架字体&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="f8094fee061f71bdabaf198f0b56d7fc77e912d2" translate="yes" xml:space="preserve">
          <source>This function sets the syntax entry for &lt;var&gt;char&lt;/var&gt; according to &lt;var&gt;syntax-descriptor&lt;/var&gt;. &lt;var&gt;char&lt;/var&gt; must be a character, or a cons cell of the form &lt;code&gt;(&lt;var&gt;min&lt;/var&gt; . &lt;var&gt;max&lt;/var&gt;)&lt;/code&gt;; in the latter case, the function sets the syntax entries for all characters in the range between &lt;var&gt;min&lt;/var&gt; and &lt;var&gt;max&lt;/var&gt;, inclusive.</source>
          <target state="translated">该函数根据 &lt;var&gt;syntax-descriptor&lt;/var&gt; 为 &lt;var&gt;char&lt;/var&gt; 设置语法条目。 &lt;var&gt;char&lt;/var&gt; 必须是字符，或形式的cons单元 &lt;code&gt;(&lt;var&gt;min&lt;/var&gt; . &lt;var&gt;max&lt;/var&gt;)&lt;/code&gt; &lt;var&gt;min&lt;/var&gt; 。 &lt;var&gt;max&lt;/var&gt; ） ; 在后一种情况下，该函数为 &lt;var&gt;min&lt;/var&gt; 和 &lt;var&gt;max&lt;/var&gt; （含）之间的所有字符设置语法条目。</target>
        </trans-unit>
        <trans-unit id="15cacc785cffbd6ba5dd6a505175b1909a53195b" translate="yes" xml:space="preserve">
          <source>This function sets the top-level default value of &lt;var&gt;symbol&lt;/var&gt; to the specified &lt;var&gt;value&lt;/var&gt;. This comes in handy when you want to set the global value of &lt;var&gt;symbol&lt;/var&gt; regardless of whether your code runs in the context of &lt;var&gt;symbol&lt;/var&gt;&amp;rsquo;s let-binding.</source>
          <target state="translated">此函数将 &lt;var&gt;symbol&lt;/var&gt; 的顶级默认值设置为指定 &lt;var&gt;value&lt;/var&gt; 。无论您的代码是否在 &lt;var&gt;symbol&lt;/var&gt; 的let-binding上下文中运行，都希望设置 &lt;var&gt;symbol&lt;/var&gt; 的全局值时，这非常方便。</target>
        </trans-unit>
        <trans-unit id="2ca1f232e220a0f426853c4e8ca3f00deec1c67d" translate="yes" xml:space="preserve">
          <source>This function sets the value in &lt;var&gt;char-table&lt;/var&gt; for a range of characters &lt;var&gt;range&lt;/var&gt;. Here are the possibilities for &lt;var&gt;range&lt;/var&gt;:</source>
          <target state="translated">此函数在 &lt;var&gt;char-table&lt;/var&gt; 中设置字符 &lt;var&gt;range&lt;/var&gt; range的值。这是 &lt;var&gt;range&lt;/var&gt; 的可能性：</target>
        </trans-unit>
        <trans-unit id="40312ec11bf1a1affa5e36677924516dec94a851" translate="yes" xml:space="preserve">
          <source>This function sets the value of property &lt;var&gt;prop&lt;/var&gt; recorded in &lt;var&gt;overlay&lt;/var&gt; to &lt;var&gt;value&lt;/var&gt;. It returns &lt;var&gt;value&lt;/var&gt;.</source>
          <target state="translated">此函数将 &lt;var&gt;overlay&lt;/var&gt; 记录的属性 &lt;var&gt;prop&lt;/var&gt; 的值设置为 &lt;var&gt;value&lt;/var&gt; 。它返回 &lt;var&gt;value&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="63a2e42444159d8b3af48388e6700473f7f5af7f" translate="yes" xml:space="preserve">
          <source>This function sets the value of the &lt;var&gt;propname&lt;/var&gt; property of &lt;var&gt;process&lt;/var&gt; to &lt;var&gt;value&lt;/var&gt;.</source>
          <target state="translated">此函数将 &lt;var&gt;process&lt;/var&gt; 的 &lt;var&gt;propname&lt;/var&gt; 属性的值设置为 &lt;var&gt;value&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="b80e7d0b563deda386317e1e61de5bf86afc19e2" translate="yes" xml:space="preserve">
          <source>This function sets the variable &lt;var&gt;symbol&lt;/var&gt; by consing &lt;var&gt;element&lt;/var&gt; onto the old value, if &lt;var&gt;element&lt;/var&gt; is not already a member of that value. It returns the resulting list, whether updated or not. The value of &lt;var&gt;symbol&lt;/var&gt; had better be a list already before the call. &lt;code&gt;add-to-list&lt;/code&gt; uses &lt;var&gt;compare-fn&lt;/var&gt; to compare &lt;var&gt;element&lt;/var&gt; against existing list members; if &lt;var&gt;compare-fn&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it uses &lt;code&gt;equal&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;var&gt;element&lt;/var&gt; 尚未成为该值的成员，则此函数通过将 &lt;var&gt;element&lt;/var&gt; 设置为旧值来设置变量 &lt;var&gt;symbol&lt;/var&gt; 。它返回结果列表，无论是否更新。 &lt;var&gt;symbol&lt;/var&gt; 的值最好是调用之前已经存在的列表。 &lt;code&gt;add-to-list&lt;/code&gt; 使用 &lt;var&gt;compare-fn&lt;/var&gt; 将 &lt;var&gt;element&lt;/var&gt; 与现有列表成员进行比较；如果 &lt;var&gt;compare-fn&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则使用 &lt;code&gt;equal&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4111ab980658cbdea5847db8ee945f965ead81a7" translate="yes" xml:space="preserve">
          <source>This function sets the variable &lt;var&gt;symbol&lt;/var&gt; by inserting &lt;var&gt;element&lt;/var&gt; into the old value, which must be a list, at the position specified by &lt;var&gt;order&lt;/var&gt;. If &lt;var&gt;element&lt;/var&gt; is already a member of the list, its position in the list is adjusted according to &lt;var&gt;order&lt;/var&gt;. Membership is tested using &lt;code&gt;eq&lt;/code&gt;. This function returns the resulting list, whether updated or not.</source>
          <target state="translated">该函数通过在 &lt;var&gt;order&lt;/var&gt; 所指定的位置将 &lt;var&gt;element&lt;/var&gt; 插入到旧值（必须是列表）中来设置变量 &lt;var&gt;symbol&lt;/var&gt; 。如果 &lt;var&gt;element&lt;/var&gt; 已经是列表的成员，则根据 &lt;var&gt;order&lt;/var&gt; 调整其在列表中的位置。成员资格使用 &lt;code&gt;eq&lt;/code&gt; 进行测试。此函数返回结果列表，无论是否更新。</target>
        </trans-unit>
        <trans-unit id="1a53708dabb9acb24f509efb0eba613cef1c0a47" translate="yes" xml:space="preserve">
          <source>This function sets the width and/or height and the types of scroll bars for window &lt;var&gt;window&lt;/var&gt;. If &lt;var&gt;window&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the selected window is used.</source>
          <target state="translated">这个函数设置的宽度和/或高度和用于窗口的类型的滚动条 &lt;var&gt;window&lt;/var&gt; 。如果 &lt;var&gt;window&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则使用选定的窗口。</target>
        </trans-unit>
        <trans-unit id="92962232edaa7371b2896baae28c32d4053ade9c" translate="yes" xml:space="preserve">
          <source>This function sets the width of the text area of &lt;var&gt;frame&lt;/var&gt;, measured in characters. The argument &lt;var&gt;pretend&lt;/var&gt; has the same meaning as in &lt;code&gt;set-frame-height&lt;/code&gt;.</source>
          <target state="translated">此功能设置 &lt;var&gt;frame&lt;/var&gt; 文本区域的宽度，以字符为单位。 &lt;var&gt;pretend&lt;/var&gt; 参数与 &lt;code&gt;set-frame-height&lt;/code&gt; 中的含义相同。</target>
        </trans-unit>
        <trans-unit id="71924053f128c77b1c4f334e88dd7a53ba22b670" translate="yes" xml:space="preserve">
          <source>This function sets up a change group for buffer &lt;var&gt;buffer&lt;/var&gt;, which defaults to the current buffer. It returns a handle that represents the change group. You must use this handle to activate the change group and subsequently to finish it.</source>
          <target state="translated">此功能为缓冲区 &lt;var&gt;buffer&lt;/var&gt; 设置更改组，默认情况下为当前缓冲区。它返回代表变更组的句柄。您必须使用此句柄来激活更改组并随后完成它。</target>
        </trans-unit>
        <trans-unit id="ec7709fbb0a1662486c5ae1309111b94eabfa9e8" translate="yes" xml:space="preserve">
          <source>This function should be called when the operation is finished. It prints the message of &lt;var&gt;reporter&lt;/var&gt; followed by word &amp;lsquo;</source>
          <target state="translated">操作完成后应调用此函数。它打印 &lt;var&gt;reporter&lt;/var&gt; 的消息，后跟单词&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="d53aa3744aa3f3c1b0f811b35d5fccb6542fef70" translate="yes" xml:space="preserve">
          <source>This function should fontify the current buffer&amp;rsquo;s accessible portion, by calling the function specified by &lt;code&gt;font-lock-fontify-buffer-function&lt;/code&gt;.</source>
          <target state="translated">该函数应通过调用 &lt;code&gt;font-lock-fontify-buffer-function&lt;/code&gt; 指定的函数来字体化当前缓冲区的可访问部分。</target>
        </trans-unit>
        <trans-unit id="13a46cffeee7400374d4e2293fe5e808000e973c" translate="yes" xml:space="preserve">
          <source>This function should make sure the region between &lt;var&gt;beg&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; has been fontified. The optional arguments &lt;var&gt;beg&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; default to the beginning and the end of the buffer&amp;rsquo;s accessible portion. Calls the function specified by &lt;code&gt;font-lock-ensure-function&lt;/code&gt;.</source>
          <target state="translated">此功能应确保 &lt;var&gt;beg&lt;/var&gt; be和 &lt;var&gt;end&lt;/var&gt; 之间的区域已被设置字体。可选参数 &lt;var&gt;beg&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 默认为缓冲区可访问部分的开头和结尾。调用 &lt;code&gt;font-lock-ensure-function&lt;/code&gt; 指定的函数。</target>
        </trans-unit>
        <trans-unit id="71fa298bb06145061fe858cb2b0e31275d92bd6d" translate="yes" xml:space="preserve">
          <source>This function should mark the fontification of the region between &lt;var&gt;beg&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; as outdated. If not specified or &lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;beg&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; default to the beginning and end of the buffer&amp;rsquo;s accessible portion. Calls the function specified by &lt;code&gt;font-lock-flush-function&lt;/code&gt;.</source>
          <target state="translated">此功能应将 &lt;var&gt;beg&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 之间的区域的字体标记为过时。如果未指定或 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;var&gt;beg&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 缺省为缓冲区可访问部分的开始和结束。调用 &lt;code&gt;font-lock-flush-function&lt;/code&gt; 指定的函数。</target>
        </trans-unit>
        <trans-unit id="f237d11806f7f9c5598c61dcaea0921f6c3f435e" translate="yes" xml:space="preserve">
          <source>This function signals a &lt;code&gt;buffer-read-only&lt;/code&gt; error if the current buffer is read-only. If the text at &lt;var&gt;position&lt;/var&gt; (which defaults to point) has the &lt;code&gt;inhibit-read-only&lt;/code&gt; text property set, the error will not be raised.</source>
          <target state="translated">如果当前缓冲区是只读的，则此函数会发出 &lt;code&gt;buffer-read-only&lt;/code&gt; 错误的信号。如果 &lt;var&gt;position&lt;/var&gt; 处的文本（默认为点）设置了 &lt;code&gt;inhibit-read-only&lt;/code&gt; 文本属性，则不会引发错误。</target>
        </trans-unit>
        <trans-unit id="e3a37433a9d0257f28b8924b7f8996c03854d3a7" translate="yes" xml:space="preserve">
          <source>This function signals a &lt;code&gt;cyclic-variable-indirection&lt;/code&gt; error if there is a loop in the chain of symbols.</source>
          <target state="translated">如果符号链中存在循环，则此函数会发出 &lt;code&gt;cyclic-variable-indirection&lt;/code&gt; 错误。</target>
        </trans-unit>
        <trans-unit id="ad9ce45bdf623ffc5bdaf6d3320de31dd03d0be0" translate="yes" xml:space="preserve">
          <source>This function signals an error if the buffer is narrowed, since the narrowing might have occurred in the middle of multibyte character sequences.</source>
          <target state="translated">如果缓冲区被缩小,该函数发出错误信号,因为缩小可能发生在多字节字符序列的中间。</target>
        </trans-unit>
        <trans-unit id="d657ed0fa038e4144b320e056dad2ce3b259dc83" translate="yes" xml:space="preserve">
          <source>This function signals an error named by &lt;var&gt;error-symbol&lt;/var&gt;. The argument &lt;var&gt;data&lt;/var&gt; is a list of additional Lisp objects relevant to the circumstances of the error.</source>
          <target state="translated">该函数发出错误信号，称为 &lt;var&gt;error-symbol&lt;/var&gt; 。参数 &lt;var&gt;data&lt;/var&gt; 是与错误情况相关的其他Lisp对象的列表。</target>
        </trans-unit>
        <trans-unit id="e0c30c758c92166bfc85d9d039660b87a5e6c2a2" translate="yes" xml:space="preserve">
          <source>This function signals an error with an error message constructed by applying &lt;code&gt;format-message&lt;/code&gt; (see &lt;a href=&quot;formatting-strings#Formatting-Strings&quot;&gt;Formatting Strings&lt;/a&gt;) to &lt;var&gt;format-string&lt;/var&gt; and &lt;var&gt;args&lt;/var&gt;.</source>
          <target state="translated">此函数通过将 &lt;code&gt;format-message&lt;/code&gt; （请参阅&lt;a href=&quot;formatting-strings#Formatting-Strings&quot;&gt;Formatting Strings&lt;/a&gt;）应用于 &lt;var&gt;format-string&lt;/var&gt; 和 &lt;var&gt;args&lt;/var&gt; 构造的错误消息来发出错误消息。</target>
        </trans-unit>
        <trans-unit id="6899cd0dfcf69c4a2bf69551795704ea8a5ba97d" translate="yes" xml:space="preserve">
          <source>This function signals the &lt;code&gt;quit&lt;/code&gt; condition with &lt;code&gt;(signal 'quit
nil)&lt;/code&gt;. This is the same thing that quitting does. (See &lt;code&gt;signal&lt;/code&gt; in &lt;a href=&quot;errors#Errors&quot;&gt;Errors&lt;/a&gt;.)</source>
          <target state="translated">该函数用 &lt;code&gt;(signal 'quit nil)&lt;/code&gt; 指示 &lt;code&gt;quit&lt;/code&gt; 条件。这和戒烟一样。（参见 &lt;code&gt;signal&lt;/code&gt; 中&lt;a href=&quot;errors#Errors&quot;&gt;的错误&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="0d36d627261dd4e408ddcaa87aa02fc3c3b72b06" translate="yes" xml:space="preserve">
          <source>This function signals the error represented by &lt;var&gt;error&lt;/var&gt; with the specified error data &lt;var&gt;data&lt;/var&gt;. The module function should return soon after calling this function. This function could be useful, e.g., for signaling errors from module functions to Emacs.</source>
          <target state="translated">该功能使用指定的错误数据 &lt;var&gt;data&lt;/var&gt; 表示错误所代表的 &lt;var&gt;error&lt;/var&gt; 。调用此函数后，模块函数应立即返回。此功能可能有用，例如，用于从模块功能向Emacs发送错误信号。</target>
        </trans-unit>
        <trans-unit id="90c974b13e8dc22f833e6a73ea6c119a044ea13e" translate="yes" xml:space="preserve">
          <source>This function simply evaluates the result of a call to &lt;code&gt;read-minibuffer&lt;/code&gt;:</source>
          <target state="translated">此函数仅评估对 &lt;code&gt;read-minibuffer&lt;/code&gt; 的调用结果：</target>
        </trans-unit>
        <trans-unit id="410a97766eec8dfabbf86b07735dfd8852ca2d63" translate="yes" xml:space="preserve">
          <source>This function simply pauses for &lt;var&gt;seconds&lt;/var&gt; seconds without updating the display. It pays no attention to available input. It returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此功能只需暂停 &lt;var&gt;seconds&lt;/var&gt; 秒钟，而无需更新显示。它不关注可用的输入。返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="21d35e9fb086ce275086e8a2c555187abe136eb7" translate="yes" xml:space="preserve">
          <source>This function sorts &lt;var&gt;sequence&lt;/var&gt; stably. Note that this function doesn&amp;rsquo;t work for all sequences; it may be used only for lists and vectors. If &lt;var&gt;sequence&lt;/var&gt; is a list, it is modified destructively. This functions returns the sorted &lt;var&gt;sequence&lt;/var&gt; and compares elements using &lt;var&gt;predicate&lt;/var&gt;. A stable sort is one in which elements with equal sort keys maintain their relative order before and after the sort. Stability is important when successive sorts are used to order elements according to different criteria.</source>
          <target state="translated">此功能稳定地排序 &lt;var&gt;sequence&lt;/var&gt; 。请注意，此功能不适用于所有序列。它只能用于列表和向量。如果 &lt;var&gt;sequence&lt;/var&gt; 是列表，则将对其进行破坏性的修改。此函数返回排序后的 &lt;var&gt;sequence&lt;/var&gt; 并使用 &lt;var&gt;predicate&lt;/var&gt; 比较元素。稳定排序是一种具有相同排序键的元素在排序前后保持其相对顺序的排序。当使用连续排序根据不同标准对元素进行排序时，稳定性很重要。</target>
        </trans-unit>
        <trans-unit id="44856e67f52758758839924c38ca6145b82b817d" translate="yes" xml:space="preserve">
          <source>This function specifies &lt;var&gt;window&lt;/var&gt; as the minibuffer window to use. This affects where the minibuffer is displayed if you put text in it without invoking the usual minibuffer commands. It has no effect on the usual minibuffer input functions because they all start by choosing the minibuffer window according to the selected frame.</source>
          <target state="translated">此函数将 &lt;var&gt;window&lt;/var&gt; 指定为要使用的迷你缓冲区窗口。如果您在不调用常规minibuffer命令的情况下将文本放入其中，就会影响显示该缓冲区的位置。它对通常的小缓冲区输入功能没有影响，因为它们全部都是根据所选帧选择小缓冲区窗口开始的。</target>
        </trans-unit>
        <trans-unit id="8e31c36fa02ac3fd5c62b796e8278fc255cccbc6" translate="yes" xml:space="preserve">
          <source>This function specifies a pair of corresponding letters, one upper case and one lower case.</source>
          <target state="translated">该函数指定一对对应的字母,一个大写,一个小写。</target>
        </trans-unit>
        <trans-unit id="73628c0bed95c08645238d207277e9e5e467efeb" translate="yes" xml:space="preserve">
          <source>This function specifies the Custom theme &lt;var&gt;theme&lt;/var&gt;&amp;rsquo;s face settings. &lt;var&gt;theme&lt;/var&gt; should be a symbol. Each argument in &lt;var&gt;args&lt;/var&gt; should be a list of the form</source>
          <target state="translated">此功能指定自定义主题 &lt;var&gt;theme&lt;/var&gt; 的脸部设置。 &lt;var&gt;theme&lt;/var&gt; 应该是一个象征。 &lt;var&gt;args&lt;/var&gt; 中的每个参数应为以下形式的列表：</target>
        </trans-unit>
        <trans-unit id="9a0e030950f28c84f095f999ed67addf53b49aab" translate="yes" xml:space="preserve">
          <source>This function specifies the Custom theme &lt;var&gt;theme&lt;/var&gt;&amp;rsquo;s variable settings. &lt;var&gt;theme&lt;/var&gt; should be a symbol. Each argument in &lt;var&gt;args&lt;/var&gt; should be a list of the form</source>
          <target state="translated">此功能指定自定义主题 &lt;var&gt;theme&lt;/var&gt; 的变量设置。 &lt;var&gt;theme&lt;/var&gt; 应该是一个象征。 &lt;var&gt;args&lt;/var&gt; 中的每个参数应为以下形式的列表：</target>
        </trans-unit>
        <trans-unit id="99a9605590004bfb9983548f07f076c53b0abbde" translate="yes" xml:space="preserve">
          <source>This function specifies the argument list &lt;var&gt;signature&lt;/var&gt; as the correct way to call &lt;var&gt;function&lt;/var&gt;. This causes the Emacs byte compiler to issue a warning whenever it comes across an Emacs Lisp program that calls &lt;var&gt;function&lt;/var&gt; any other way (however, it will still allow the code to be byte compiled). &lt;var&gt;when&lt;/var&gt; should be a string indicating when the variable was first made obsolete (usually a version number string).</source>
          <target state="translated">此函数将参数列表 &lt;var&gt;signature&lt;/var&gt; 指定为调用 &lt;var&gt;function&lt;/var&gt; 的正确方法。这会导致Emacs字节编译器在遇到以任何其他方式调用 &lt;var&gt;function&lt;/var&gt; 的Emacs Lisp程序时发出警告（但是，仍将允许对代码进行字节编译）。 &lt;var&gt;when&lt;/var&gt; 是一个字符串，它指示变量何时首次过时（通常是版本号字符串）。</target>
        </trans-unit>
        <trans-unit id="93cd0705cac9e3a4d568885d91fc33383cc0b676" translate="yes" xml:space="preserve">
          <source>This function specifies the coding systems to use for subsequent output from and input to &lt;var&gt;process&lt;/var&gt;. It will use &lt;var&gt;decoding-system&lt;/var&gt; to decode subprocess output, and &lt;var&gt;encoding-system&lt;/var&gt; to encode subprocess input.</source>
          <target state="translated">此函数指定编码系统，以用于后续来自 &lt;var&gt;process&lt;/var&gt; 输出以及过程的输入。它将使用 &lt;var&gt;decoding-system&lt;/var&gt; 对子流程输出进行解码，并使用 &lt;var&gt;encoding-system&lt;/var&gt; 对子流程输入进行编码。</target>
        </trans-unit>
        <trans-unit id="b7456411126ca29b870a96d1157b0c99cc3c87aa" translate="yes" xml:space="preserve">
          <source>This function specifies the margin widths for window &lt;var&gt;window&lt;/var&gt;, in character cell units. The argument &lt;var&gt;left&lt;/var&gt; controls the left margin, and &lt;var&gt;right&lt;/var&gt; controls the right margin (default &lt;code&gt;0&lt;/code&gt;).</source>
          <target state="translated">此函数以字符单元为单位指定窗口 &lt;var&gt;window&lt;/var&gt; 的边距宽度。参数 &lt;var&gt;left&lt;/var&gt; 控制左边距，而 &lt;var&gt;right&lt;/var&gt; 控制右边距（默认 &lt;code&gt;0&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="cfd357ba5847ff197c38f2834ab0b28ca79194cf" translate="yes" xml:space="preserve">
          <source>This function splits &lt;var&gt;string&lt;/var&gt; into substrings at matches for the regular expression &lt;var&gt;separators&lt;/var&gt;, like &lt;code&gt;split-string&lt;/code&gt; does (see &lt;a href=&quot;creating-strings#Creating-Strings&quot;&gt;Creating Strings&lt;/a&gt;); in addition, it removes quoting from the substrings. It then makes a list of the substrings and returns it.</source>
          <target state="translated">该函数在匹配正则表达式 &lt;var&gt;separators&lt;/var&gt; 将 &lt;var&gt;string&lt;/var&gt; 拆分为子字符串，就像 &lt;code&gt;split-string&lt;/code&gt; 一样（请参见&lt;a href=&quot;creating-strings#Creating-Strings&quot;&gt;创建字符串&lt;/a&gt;）；另外，它从子字符串中删除引用。然后，它列出子字符串并返回。</target>
        </trans-unit>
        <trans-unit id="ca61723920bf62189efd5901f4cb0a7d58235aef" translate="yes" xml:space="preserve">
          <source>This function splits &lt;var&gt;string&lt;/var&gt; into substrings based on the regular expression &lt;var&gt;separators&lt;/var&gt; (see &lt;a href=&quot;regular-expressions#Regular-Expressions&quot;&gt;Regular Expressions&lt;/a&gt;). Each match for &lt;var&gt;separators&lt;/var&gt; defines a splitting point; the substrings between splitting points are made into a list, which is returned.</source>
          <target state="translated">此函数根据正则表达式 &lt;var&gt;separators&lt;/var&gt; 将 &lt;var&gt;string&lt;/var&gt; 拆分为子字符串（请参见&lt;a href=&quot;regular-expressions#Regular-Expressions&quot;&gt;正则表达式&lt;/a&gt;）。每个 &lt;var&gt;separators&lt;/var&gt; 匹配都定义一个分割点；分割点之间的子字符串组成一个列表，然后返回。</target>
        </trans-unit>
        <trans-unit id="16184ac30d366ba7e0e7cd7b5d2786b3f8a7ee30" translate="yes" xml:space="preserve">
          <source>This function splits the selected window into two side-by-side windows, putting the selected window on the left. If &lt;var&gt;size&lt;/var&gt; is positive, the left window gets &lt;var&gt;size&lt;/var&gt; columns; if &lt;var&gt;size&lt;/var&gt; is negative, the right window gets -&lt;var&gt;size&lt;/var&gt; columns.</source>
          <target state="translated">此功能将所选窗口分为两个并排窗口，将所选窗口放在左侧。如果 &lt;var&gt;size&lt;/var&gt; 为正，则左窗口将显示 &lt;var&gt;size&lt;/var&gt; 列；否则，为0。如果 &lt;var&gt;size&lt;/var&gt; 为负，在右边的窗口获取- &lt;var&gt;size&lt;/var&gt; 列。</target>
        </trans-unit>
        <trans-unit id="7f2f9d7a92cae81e5bf4e5ebb0339954e97c6f8a" translate="yes" xml:space="preserve">
          <source>This function splits the selected window into two windows, one above the other, leaving the upper window selected. If &lt;var&gt;size&lt;/var&gt; is positive, the upper window gets &lt;var&gt;size&lt;/var&gt; lines; if &lt;var&gt;size&lt;/var&gt; is negative, the lower window gets -&lt;var&gt;size&lt;/var&gt; lines.</source>
          <target state="translated">此功能将选定的窗口分为两个窗口，一个在另一个窗口上方，而上一个窗口保持选中状态。如果 &lt;var&gt;size&lt;/var&gt; 为正，则上部窗口将显示 &lt;var&gt;size&lt;/var&gt; 线；否则，将显示尺寸线。如果 &lt;var&gt;size&lt;/var&gt; 为负，下窗口得到- &lt;var&gt;size&lt;/var&gt; 线。</target>
        </trans-unit>
        <trans-unit id="70f860aae420608432f16a68f9507c030a6f2bf0" translate="yes" xml:space="preserve">
          <source>This function stops Emacs and returns control to the superior process. If and when the superior process resumes Emacs, &lt;code&gt;suspend-emacs&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt; to its caller in Lisp.</source>
          <target state="translated">此功能停止Emacs并将控制权返回到上级进程。如果并且当上级进程恢复Emacs时， &lt;code&gt;suspend-emacs&lt;/code&gt; 将 &lt;code&gt;nil&lt;/code&gt; 返回给Lisp中的调用者。</target>
        </trans-unit>
        <trans-unit id="96dc57f0fe40c0037be35a60b8c3f97b80944403" translate="yes" xml:space="preserve">
          <source>This function stops the specified &lt;var&gt;process&lt;/var&gt;. If it is a real subprocess running a program, it sends the signal &lt;code&gt;SIGTSTP&lt;/code&gt; to that subprocess. If &lt;var&gt;process&lt;/var&gt; represents a network, serial, or pipe connection, this function inhibits handling of the incoming data from the connection; for a network server, this means not accepting new connections. Use &lt;code&gt;continue-process&lt;/code&gt; to resume normal execution.</source>
          <target state="translated">此功能停止指定的 &lt;var&gt;process&lt;/var&gt; 。如果它是运行程序的实际子进程，则它将信号 &lt;code&gt;SIGTSTP&lt;/code&gt; 发送到该子进程。如果 &lt;var&gt;process&lt;/var&gt; 代表网络，串行或管道连接，则此功能禁止处理来自连接的传入数据；对于网络服务器，这意味着不接受新连接。使用 &lt;code&gt;continue-process&lt;/code&gt; 恢复正常执行。</target>
        </trans-unit>
        <trans-unit id="07f23b4a366f8c9c6b95d3ec402619dcc44bddd7" translate="yes" xml:space="preserve">
          <source>This function stores &lt;var&gt;definition&lt;/var&gt; in the function cell of &lt;var&gt;symbol&lt;/var&gt;. The result is &lt;var&gt;definition&lt;/var&gt;. Normally &lt;var&gt;definition&lt;/var&gt; should be a function or the name of a function, but this is not checked. The argument &lt;var&gt;symbol&lt;/var&gt; is an ordinary evaluated argument.</source>
          <target state="translated">该函数将 &lt;var&gt;definition&lt;/var&gt; 存储在 &lt;var&gt;symbol&lt;/var&gt; 的函数单元中。结果就是 &lt;var&gt;definition&lt;/var&gt; 。通常， &lt;var&gt;definition&lt;/var&gt; 应该是一个函数或一个函数的名称，但这不会被选中。参数 &lt;var&gt;symbol&lt;/var&gt; 是普通的求值参数。</target>
        </trans-unit>
        <trans-unit id="bb7d1a47d2c4ec64baeb5315985767cadddc7ca6" translate="yes" xml:space="preserve">
          <source>This function stores &lt;var&gt;object&lt;/var&gt; as the new &lt;small&gt;CAR&lt;/small&gt; of &lt;var&gt;cons&lt;/var&gt;, replacing its previous &lt;small&gt;CAR&lt;/small&gt;. In other words, it changes the &lt;small&gt;CAR&lt;/small&gt; slot of &lt;var&gt;cons&lt;/var&gt; to refer to &lt;var&gt;object&lt;/var&gt;. It returns the value &lt;var&gt;object&lt;/var&gt;. For example:</source>
          <target state="translated">此功能将把 &lt;var&gt;object&lt;/var&gt; 作为新的&lt;small&gt;CAR&lt;/small&gt;的 &lt;var&gt;cons&lt;/var&gt; ，取代以前的&lt;small&gt;CAR&lt;/small&gt;。换句话说，它将 &lt;var&gt;cons&lt;/var&gt; 的&lt;small&gt;CAR&lt;/small&gt;插槽更改为引用 &lt;var&gt;object&lt;/var&gt; 。它返回值 &lt;var&gt;object&lt;/var&gt; 。例如：</target>
        </trans-unit>
        <trans-unit id="c08fe7f266038cf14b62dbf539646605eef52c5e" translate="yes" xml:space="preserve">
          <source>This function stores &lt;var&gt;object&lt;/var&gt; as the new &lt;small&gt;CDR&lt;/small&gt; of &lt;var&gt;cons&lt;/var&gt;, replacing its previous &lt;small&gt;CDR&lt;/small&gt;. In other words, it changes the &lt;small&gt;CDR&lt;/small&gt; slot of &lt;var&gt;cons&lt;/var&gt; to refer to &lt;var&gt;object&lt;/var&gt;. It returns the value &lt;var&gt;object&lt;/var&gt;.</source>
          <target state="translated">此功能将把 &lt;var&gt;object&lt;/var&gt; 作为新的&lt;small&gt;CDR&lt;/small&gt;的 &lt;var&gt;cons&lt;/var&gt; ，取代先前的&lt;small&gt;CDR&lt;/small&gt;。换句话说，它将 &lt;var&gt;cons&lt;/var&gt; 的&lt;small&gt;CDR&lt;/small&gt;插槽更改为引用 &lt;var&gt;object&lt;/var&gt; 。它返回值 &lt;var&gt;object&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="3c261fa1fc4ae1def15df2f4a8286e2151bb80ee" translate="yes" xml:space="preserve">
          <source>This function stores &lt;var&gt;value&lt;/var&gt; as the value of the property &lt;var&gt;propname&lt;/var&gt; for the character &lt;var&gt;char&lt;/var&gt;.</source>
          <target state="translated">此函数将 &lt;var&gt;value&lt;/var&gt; 存储为字符 &lt;var&gt;char&lt;/var&gt; 的属性 &lt;var&gt;propname&lt;/var&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="971d2ea15f0da38a819fc0d1aee361e1166f61c0" translate="yes" xml:space="preserve">
          <source>This function stores &lt;var&gt;value&lt;/var&gt; in extra slot &lt;var&gt;n&lt;/var&gt; (zero based) of &lt;var&gt;char-table&lt;/var&gt;.</source>
          <target state="translated">此函数将 &lt;var&gt;value&lt;/var&gt; 存储在 &lt;var&gt;char-table&lt;/var&gt; 的额外插槽 &lt;var&gt;n&lt;/var&gt; （从零开始）中。</target>
        </trans-unit>
        <trans-unit id="a7541c462692c6515985e2f1d73946bc08fee15b" translate="yes" xml:space="preserve">
          <source>This function stores &lt;var&gt;value&lt;/var&gt; in the element of &lt;var&gt;vector&lt;/var&gt; whose index is &lt;var&gt;index&lt;/var&gt;. It raises the &lt;code&gt;args-out-of-range&lt;/code&gt; error condition if the value of &lt;var&gt;index&lt;/var&gt; is invalid.</source>
          <target state="translated">此函数将 &lt;var&gt;value&lt;/var&gt; 存储在索引为 &lt;var&gt;index&lt;/var&gt; 的 &lt;var&gt;vector&lt;/var&gt; 元素中。如果 &lt;var&gt;index&lt;/var&gt; 的值无效，则会引发 &lt;code&gt;args-out-of-range&lt;/code&gt; 错误条件。</target>
        </trans-unit>
        <trans-unit id="16c7659273a0207936277e69b6b955556bcae2c0" translate="yes" xml:space="preserve">
          <source>This function stores &lt;var&gt;value&lt;/var&gt; in the extra slot &lt;var&gt;slot&lt;/var&gt; of &lt;var&gt;display-table&lt;/var&gt;. The argument &lt;var&gt;slot&lt;/var&gt; may be a number from 0 to 5 inclusive, or a slot name (symbol). Valid symbols are &lt;code&gt;truncation&lt;/code&gt;, &lt;code&gt;wrap&lt;/code&gt;, &lt;code&gt;escape&lt;/code&gt;, &lt;code&gt;control&lt;/code&gt;, &lt;code&gt;selective-display&lt;/code&gt;, and &lt;code&gt;vertical-border&lt;/code&gt;.</source>
          <target state="translated">此函数将 &lt;var&gt;value&lt;/var&gt; 存储在 &lt;var&gt;display-table&lt;/var&gt; 的额外插槽 &lt;var&gt;slot&lt;/var&gt; 中。参数 &lt;var&gt;slot&lt;/var&gt; 可以是0到5（含）之间的数字，也可以是槽名称（符号）。有效符号是 &lt;code&gt;truncation&lt;/code&gt; ， &lt;code&gt;wrap&lt;/code&gt; ， &lt;code&gt;escape&lt;/code&gt; ， &lt;code&gt;control&lt;/code&gt; ， &lt;code&gt;selective-display&lt;/code&gt; 和 &lt;code&gt;vertical-border&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c5ed2f65a8b3cf694f27819b254331806e1a5012" translate="yes" xml:space="preserve">
          <source>This function stores the UTF-8 encoded text of a Lisp string specified by &lt;var&gt;arg&lt;/var&gt; in the array of &lt;code&gt;char&lt;/code&gt; pointed by &lt;var&gt;buf&lt;/var&gt;, which should have enough space to hold at least &lt;code&gt;*&lt;var&gt;len&lt;/var&gt;&lt;/code&gt; bytes, including the terminating null byte. The argument &lt;var&gt;len&lt;/var&gt; must not be a &lt;code&gt;NULL&lt;/code&gt; pointer, and, when the function is called, it should point to a value that specifies the size of &lt;var&gt;buf&lt;/var&gt; in bytes.</source>
          <target state="translated">该函数存储由指定一个Lisp字符串的UTF-8编码的文本 &lt;var&gt;arg&lt;/var&gt; 阵列中的 &lt;code&gt;char&lt;/code&gt; 指出由 &lt;var&gt;buf&lt;/var&gt; ，这应该有足够的空间来容纳至少 &lt;code&gt;*&lt;var&gt;len&lt;/var&gt;&lt;/code&gt; 个字节，包括终止空字节。参数 &lt;var&gt;len&lt;/var&gt; 不能为 &lt;code&gt;NULL&lt;/code&gt; 指针，并且在调用该函数时，它应指向一个指定 &lt;var&gt;buf&lt;/var&gt; 大小（以字节为单位）的值。</target>
        </trans-unit>
        <trans-unit id="630b27c76886d6fcb8ae10ea151ea4d623a738b0" translate="yes" xml:space="preserve">
          <source>This function supports two types of quoting: enclosing a whole string in double quotes &lt;code&gt;&quot;&amp;hellip;&quot;&lt;/code&gt;, and quoting individual characters with a backslash escape &amp;lsquo;</source>
          <target state="translated">此函数支持两种类型的引号：将整个字符串括在双引号 &lt;code&gt;&quot;&amp;hellip;&quot;&lt;/code&gt; ，并用反斜杠转义&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="bd247bf82030471e5dd6bd55c689c446343681ad" translate="yes" xml:space="preserve">
          <source>This function swaps the text of the current buffer and that of its argument &lt;var&gt;buffer&lt;/var&gt;. It signals an error if one of the two buffers is an indirect buffer (see &lt;a href=&quot;indirect-buffers#Indirect-Buffers&quot;&gt;Indirect Buffers&lt;/a&gt;) or is a base buffer of an indirect buffer.</source>
          <target state="translated">此函数交换当前缓冲区的文本及其参数 &lt;var&gt;buffer&lt;/var&gt; 的文本。如果两个缓冲区之一是间接缓冲区（请参见&lt;a href=&quot;indirect-buffers#Indirect-Buffers&quot;&gt;Indirect Buffers&lt;/a&gt;）或间接缓冲区的基本缓冲区，则它将发出错误消息。</target>
        </trans-unit>
        <trans-unit id="d0028e395451e0dca1cade0c01ef32a22585e56c" translate="yes" xml:space="preserve">
          <source>This function switches &lt;var&gt;image&lt;/var&gt; to frame number &lt;var&gt;n&lt;/var&gt;. It replaces a frame number outside the valid range with that of the end of the range, unless &lt;var&gt;nocheck&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;image&lt;/var&gt; does not contain a frame with the specified number, the image displays as a hollow box.</source>
          <target state="translated">此功能将 &lt;var&gt;image&lt;/var&gt; 切换到帧号 &lt;var&gt;n&lt;/var&gt; 。除非 &lt;var&gt;nocheck&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，否则它将用有效范围之外的帧号替换范围的末尾。如果 &lt;var&gt;image&lt;/var&gt; 不包含具有指定编号的框架，则图像显示为空心框。</target>
        </trans-unit>
        <trans-unit id="d0c47be812e5da02bba74b2039d70c752c2a32d3" translate="yes" xml:space="preserve">
          <source>This function takes a &lt;code&gt;double&lt;/code&gt; argument &lt;var&gt;d&lt;/var&gt; and returns the corresponding Emacs floating-point value.</source>
          <target state="translated">此函数使用 &lt;code&gt;double&lt;/code&gt; 精度参数 &lt;var&gt;d&lt;/var&gt; 并返回相应的Emacs浮点值。</target>
        </trans-unit>
        <trans-unit id="cb7728f69cd5d214a8e62342e5ef40ef4c5f52c8" translate="yes" xml:space="preserve">
          <source>This function takes a &lt;em&gt;prec2&lt;/em&gt; grammar &lt;var&gt;table&lt;/var&gt; and returns an alist suitable for use in &lt;code&gt;smie-setup&lt;/code&gt;. The &lt;em&gt;prec2&lt;/em&gt;&lt;var&gt;table&lt;/var&gt; is itself meant to be built by one of the functions below.</source>
          <target state="translated">此函数获取&lt;em&gt;prec2&lt;/em&gt;语法 &lt;var&gt;table&lt;/var&gt; 并返回适合在 &lt;code&gt;smie-setup&lt;/code&gt; 中使用的列表。该&lt;em&gt;prec2&lt;/em&gt; &lt;var&gt;table&lt;/var&gt; 本身旨在通过下面的功能之一来构建。</target>
        </trans-unit>
        <trans-unit id="3ed16a739f28a4a598a044df30c6d9befd0525bf" translate="yes" xml:space="preserve">
          <source>This function takes a decoded time structure and adds &lt;var&gt;delta&lt;/var&gt; (also a decoded time structure) to it. Elements in &lt;var&gt;delta&lt;/var&gt; that are &lt;code&gt;nil&lt;/code&gt; are ignored.</source>
          <target state="translated">此函数采用解码的时间结构，并向其添加 &lt;var&gt;delta&lt;/var&gt; （也是解码的时间结构）。 &lt;var&gt;delta&lt;/var&gt; 中为 &lt;code&gt;nil&lt;/code&gt; 的元素将被忽略。</target>
        </trans-unit>
        <trans-unit id="83fe18443f123612b9dd2e6fae4f154156871d89" translate="yes" xml:space="preserve">
          <source>This function takes a search path string such as the value of the &lt;code&gt;PATH&lt;/code&gt; environment variable, and splits it at the separators, returning a list of directories. &lt;code&gt;nil&lt;/code&gt; in this list means the current directory. Although the function&amp;rsquo;s name says &amp;ldquo;colon&amp;rdquo;, it actually uses the value of &lt;code&gt;path-separator&lt;/code&gt;.</source>
          <target state="translated">此函数采用搜索路径字符串（例如 &lt;code&gt;PATH&lt;/code&gt; 环境变量的值），并在分隔符处将其分割，返回目录列表。此列表中的 &lt;code&gt;nil&lt;/code&gt; 表示当前目录。尽管函数名称为&amp;ldquo;冒号&amp;rdquo;，但实际上使用的是 &lt;code&gt;path-separator&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="a874cce8e01bf2953b84c13ece649958fb7e4913" translate="yes" xml:space="preserve">
          <source>This function takes an integer argument &lt;var&gt;n&lt;/var&gt; and returns the corresponding &lt;code&gt;emacs_value&lt;/code&gt; object. It returns either a fixnum or a bignum depending on whether the value of &lt;var&gt;n&lt;/var&gt; is inside the limits set by &lt;code&gt;most-negative-fixnum&lt;/code&gt; and &lt;code&gt;most-positive-fixnum&lt;/code&gt; (see &lt;a href=&quot;integer-basics#Integer-Basics&quot;&gt;Integer Basics&lt;/a&gt;).</source>
          <target state="translated">此函数采用整数参数 &lt;var&gt;n&lt;/var&gt; 并返回相应的 &lt;code&gt;emacs_value&lt;/code&gt; 对象。根据 &lt;var&gt;n&lt;/var&gt; 的值是否在 &lt;code&gt;most-negative-fixnum&lt;/code&gt; 和 &lt;code&gt;most-positive-fixnum&lt;/code&gt; 设置的限制之内，它返回一个fixnum或bignum （请参阅&lt;a href=&quot;integer-basics#Integer-Basics&quot;&gt;Integer Basics&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="a1f78b7b4226332d4d5703ed01188a6ffb4fa704" translate="yes" xml:space="preserve">
          <source>This function takes one or more normal hook variable names as arguments, and runs each hook in turn. Each argument should be a symbol that is a normal hook variable. These arguments are processed in the order specified.</source>
          <target state="translated">这个函数接受一个或多个普通钩子变量名作为参数,并依次运行每个钩子。每个参数应该是一个正常钩子变量的符号。这些参数按照指定的顺序进行处理。</target>
        </trans-unit>
        <trans-unit id="a7828711d6b475a4d56a3d656ef4a42d86a01a05" translate="yes" xml:space="preserve">
          <source>This function takes several &lt;em&gt;prec2&lt;/em&gt;&lt;var&gt;tables&lt;/var&gt; and merges them into a new &lt;em&gt;prec2&lt;/em&gt; table.</source>
          <target state="translated">此函数需要几个&lt;em&gt;prec2&lt;/em&gt; &lt;var&gt;tables&lt;/var&gt; 并将它们合并到一个新的&lt;em&gt;prec2&lt;/em&gt;表中。</target>
        </trans-unit>
        <trans-unit id="e6cbefd59af326e24706f814510f12ae067848a4" translate="yes" xml:space="preserve">
          <source>This function tells Font Lock mode to run the Lisp function &lt;var&gt;function&lt;/var&gt; any time it has to fontify or refontify part of the current buffer. It calls &lt;var&gt;function&lt;/var&gt; before calling the default fontification functions, and gives it two arguments, &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;, which specify the region to be fontified or refontified.</source>
          <target state="translated">这个函数告诉字体锁定模式运行Lisp函数 &lt;var&gt;function&lt;/var&gt; 它具有fontify或当前缓冲区的refontify一部分的任何时间。它在调用默认字体化 &lt;var&gt;function&lt;/var&gt; 之前先调用function，并为其提供两个参数 &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; ，它们指定要字体化或重新字体化的区域。</target>
        </trans-unit>
        <trans-unit id="7c5a38df2971586fea43db654867a497e98cde6d" translate="yes" xml:space="preserve">
          <source>This function tests for the falsehood of &lt;var&gt;condition&lt;/var&gt;. It returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;condition&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, and &lt;code&gt;nil&lt;/code&gt; otherwise. The function &lt;code&gt;not&lt;/code&gt; is identical to &lt;code&gt;null&lt;/code&gt;, and we recommend using the name &lt;code&gt;null&lt;/code&gt; if you are testing for an empty list.</source>
          <target state="translated">这个函数测试的虚假 &lt;var&gt;condition&lt;/var&gt; 。如果 &lt;var&gt;condition&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则返回 &lt;code&gt;t&lt;/code&gt; ，否则返回 &lt;code&gt;nil&lt;/code&gt; 。该函数与 &lt;code&gt;null&lt;/code&gt; &lt;code&gt;not&lt;/code&gt; 相同，如果要测试一个空列表，建议使用名称 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9c0364e332c4d07d41dde3f53bb505600cde2ea1" translate="yes" xml:space="preserve">
          <source>This function tests to see whether &lt;var&gt;object&lt;/var&gt; is a member of &lt;var&gt;list&lt;/var&gt;. If it is, &lt;code&gt;memq&lt;/code&gt; returns a list starting with the first occurrence of &lt;var&gt;object&lt;/var&gt;. Otherwise, it returns &lt;code&gt;nil&lt;/code&gt;. The letter &amp;lsquo;</source>
          <target state="translated">此函数进行测试以查看 &lt;var&gt;object&lt;/var&gt; 是否为 &lt;var&gt;list&lt;/var&gt; 的成员。如果是，则 &lt;code&gt;memq&lt;/code&gt; 返回一个列表，该列表从 &lt;var&gt;object&lt;/var&gt; 的第一次出现开始。否则，它返回 &lt;code&gt;nil&lt;/code&gt; 。字母'</target>
        </trans-unit>
        <trans-unit id="b8f214400d5e4bd3fdd1e4b5595459f1e893fbef" translate="yes" xml:space="preserve">
          <source>This function tests whether &lt;var&gt;filename&lt;/var&gt; is a remote file. If &lt;var&gt;filename&lt;/var&gt; is local (not remote), the return value is &lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;filename&lt;/var&gt; is indeed remote, the return value is a string that identifies the remote system.</source>
          <target state="translated">此函数测试 &lt;var&gt;filename&lt;/var&gt; 是否为远程文件。如果 &lt;var&gt;filename&lt;/var&gt; 是本地文件（不是远程文件），则返回值为 &lt;code&gt;nil&lt;/code&gt; 。如果 &lt;var&gt;filename&lt;/var&gt; 确实是远程文件，则返回值是一个标识远程系统的字符串。</target>
        </trans-unit>
        <trans-unit id="166b6295a4af8c329ff135a323923c73a4a9005a" translate="yes" xml:space="preserve">
          <source>This function tests whether all its arguments are numerically equal, and returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">此函数测试其所有参数是否在数值上相等，如果是，则返回 &lt;code&gt;t&lt;/code&gt; ，否则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7ff8a88a68c6fbf38aec8250607ce1d92a938174" translate="yes" xml:space="preserve">
          <source>This function tests whether each argument is greater than or equal to the following argument. It returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">此函数测试每个参数是否大于或等于以下参数。如果是，则返回 &lt;code&gt;t&lt;/code&gt; ，否则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="53d4414676443d823cea925b110cc4855e1f8b40" translate="yes" xml:space="preserve">
          <source>This function tests whether each argument is less than or equal to the following argument. It returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">此函数测试每个参数是否小于或等于以下参数。如果是，则返回 &lt;code&gt;t&lt;/code&gt; ，否则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4b4bac363f682ea3eddf0da72721e4fe61accbdf" translate="yes" xml:space="preserve">
          <source>This function tests whether each argument is strictly greater than the following argument. It returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">此函数测试每个自变量是否严格大于以下自变量。如果是，则返回 &lt;code&gt;t&lt;/code&gt; ，否则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a6a062da58806d2a8fa5bb609fc972c58f9946f7" translate="yes" xml:space="preserve">
          <source>This function tests whether each argument is strictly less than the following argument. It returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">此函数测试每个参数是否严格小于以下参数。如果是，则返回 &lt;code&gt;t&lt;/code&gt; ，否则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="02adba9730538e774beb1a3df0c8231325254531" translate="yes" xml:space="preserve">
          <source>This function tests whether its arguments are numerically equal, and returns &lt;code&gt;t&lt;/code&gt; if they are not, and &lt;code&gt;nil&lt;/code&gt; if they are.</source>
          <target state="translated">此函数测试其参数在数值上是否相等，如果不相等则返回 &lt;code&gt;t&lt;/code&gt; ,如果不相等则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b7cf4e5aa539a1ff43fac64027ef87896c817d69" translate="yes" xml:space="preserve">
          <source>This function tests whether the Lisp object represented by &lt;var&gt;val&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;; it returns &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; accordingly.</source>
          <target state="translated">此函数测试 &lt;var&gt;val&lt;/var&gt; 表示的Lisp对象是否为 &lt;code&gt;nil&lt;/code&gt; ；它相应地返回 &lt;code&gt;true&lt;/code&gt; 或 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3af851ea00a187c2d1d3760c74c4773a109204df" translate="yes" xml:space="preserve">
          <source>This function throws to the Lisp &lt;code&gt;catch&lt;/code&gt; symbol represented by &lt;var&gt;tag&lt;/var&gt;, passing it &lt;var&gt;value&lt;/var&gt; as the value to return. Your module function should in general return soon after calling this function. One use of this function is when you want to re-throw a non-local exit from one of the called</source>
          <target state="translated">此函数抛出以 &lt;var&gt;tag&lt;/var&gt; 表示的Lisp &lt;code&gt;catch&lt;/code&gt; 符号，并将其 &lt;var&gt;value&lt;/var&gt; 作为要返回的值。通常，您的模块函数应在调用此函数后立即返回。此功能的一种用法是当您要从被调用的其中一个重新抛出非本地出口时</target>
        </trans-unit>
        <trans-unit id="8521a4059027fdbc02f10dd9a2630501e9dfc2a0" translate="yes" xml:space="preserve">
          <source>This function tries immediately to redisplay. The optional argument &lt;var&gt;force&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, forces the redisplay to be performed, instead of being preempted if input is pending.</source>
          <target state="translated">此功能尝试立即重新显示。可选参数 &lt;var&gt;force&lt;/var&gt; ，如果为非 &lt;code&gt;nil&lt;/code&gt; ，则强制执行重新显示，而不是在输入待处理时被抢占。</target>
        </trans-unit>
        <trans-unit id="94eb72ee58d11703e96707e483ace3e221567d45" translate="yes" xml:space="preserve">
          <source>This function tries to determine a suitable coding system for &lt;var&gt;filename&lt;/var&gt;. It examines the buffer visiting the named file, using the variables documented above in sequence, until it finds a match for one of the rules specified by these variables. It then returns a cons cell of the form &lt;code&gt;(&lt;var&gt;coding&lt;/var&gt; . &lt;var&gt;source&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;coding&lt;/var&gt; is the coding system to use and &lt;var&gt;source&lt;/var&gt; is a symbol, one of &lt;code&gt;auto-coding-alist&lt;/code&gt;, &lt;code&gt;auto-coding-regexp-alist&lt;/code&gt;, &lt;code&gt;:coding&lt;/code&gt;, or &lt;code&gt;auto-coding-functions&lt;/code&gt;, indicating which one supplied the matching rule. The value &lt;code&gt;:coding&lt;/code&gt; means the coding system was specified by the &lt;code&gt;coding:&lt;/code&gt; tag in the file (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Specify-Coding.html#Specify-Coding&quot;&gt;coding tag&lt;/a&gt; in</source>
          <target state="translated">此函数试图为 &lt;var&gt;filename&lt;/var&gt; 确定合适的编码系统。它使用上面顺序记录的变量检查访问命名文件的缓冲区，直到找到与这些变量指定的规则之一匹配的对象。然后，它返回形式的cons单元 &lt;code&gt;(&lt;var&gt;coding&lt;/var&gt; . &lt;var&gt;source&lt;/var&gt;)&lt;/code&gt; ，其中 &lt;var&gt;coding&lt;/var&gt; 是编码系统，以使用和 &lt;var&gt;source&lt;/var&gt; 是一个符号，一个 &lt;code&gt;auto-coding-alist&lt;/code&gt; ， &lt;code&gt;auto-coding-regexp-alist&lt;/code&gt; ， &lt;code&gt;:coding&lt;/code&gt; ，或 &lt;code&gt;auto-coding-functions&lt;/code&gt; ，指示哪一个提供了匹配规则。值 &lt;code&gt;:coding&lt;/code&gt; 装置的编码系统是由指定的 &lt;code&gt;coding:&lt;/code&gt; 标签在文件中（参见&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Specify-Coding.html#Specify-Coding&quot;&gt;编码标签&lt;/a&gt;在</target>
        </trans-unit>
        <trans-unit id="b7d3c21b956e5305b485992993d4fa8cb2c00b94" translate="yes" xml:space="preserve">
          <source>This function tries to display &lt;var&gt;buffer&lt;/var&gt; at a location specified by &lt;var&gt;alist&lt;/var&gt;. For this purpose, &lt;var&gt;alist&lt;/var&gt; should contain a &lt;code&gt;direction&lt;/code&gt; entry whose value is one of &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;above&lt;/code&gt; (or &lt;code&gt;up&lt;/code&gt;), &lt;code&gt;right&lt;/code&gt; and &lt;code&gt;below&lt;/code&gt; (or &lt;code&gt;down&lt;/code&gt;). Other values are usually interpreted as &lt;code&gt;below&lt;/code&gt;.</source>
          <target state="translated">此函数尝试在 &lt;var&gt;alist&lt;/var&gt; 指定的位置显示 &lt;var&gt;buffer&lt;/var&gt; 。为此， &lt;var&gt;alist&lt;/var&gt; 应包含一个 &lt;code&gt;direction&lt;/code&gt; 条目，其值应为 &lt;code&gt;left&lt;/code&gt; ， &lt;code&gt;above&lt;/code&gt; （或 &lt;code&gt;up&lt;/code&gt; ）， &lt;code&gt;right&lt;/code&gt; 和 &lt;code&gt;below&lt;/code&gt; （或 &lt;code&gt;down&lt;/code&gt; ）之一。其他值通常解释 &lt;code&gt;below&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="16359c1241f769d5786f7e49ca6abe50fb64a7c7" translate="yes" xml:space="preserve">
          <source>This function tries to display &lt;var&gt;buffer&lt;/var&gt; by choosing an existing window and displaying the buffer in that window. It can fail if all windows are dedicated to other buffers (see &lt;a href=&quot;dedicated-windows#Dedicated-Windows&quot;&gt;Dedicated Windows&lt;/a&gt;).</source>
          <target state="translated">此功能尝试通过选择现有窗口并在该窗口中显示 &lt;var&gt;buffer&lt;/var&gt; 来显示缓冲区。如果所有窗口都专用于其他缓冲区，则会失败（请参阅&lt;a href=&quot;dedicated-windows#Dedicated-Windows&quot;&gt;专用Windows&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="a1f5805eb9f122fd8d225a2f9de528405b30b983" translate="yes" xml:space="preserve">
          <source>This function tries to display &lt;var&gt;buffer&lt;/var&gt; by finding a frame that meets a predicate (by default any frame other than the selected frame).</source>
          <target state="translated">该函数尝试通过找到符合谓词的帧（默认情况下，除了选定帧以外的任何帧）来显示 &lt;var&gt;buffer&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="8412a8065d8a055dfcb7ac837ea6d70076c1c538" translate="yes" xml:space="preserve">
          <source>This function tries to display &lt;var&gt;buffer&lt;/var&gt; by finding a window that is already displaying it. Windows on the selected frame are preferred to windows on other frames.</source>
          <target state="translated">该函数尝试通过查找已经显示 &lt;var&gt;buffer&lt;/var&gt; 的窗口来显示缓冲区。所选框架上的窗口优于其他框架上的窗口。</target>
        </trans-unit>
        <trans-unit id="2cc04374af94b0104430ba547edb5a026d1dfe8e" translate="yes" xml:space="preserve">
          <source>This function tries to display &lt;var&gt;buffer&lt;/var&gt; by finding a window that is displaying a buffer in a given mode.</source>
          <target state="translated">该函数尝试通过查找在给定模式下显示 &lt;var&gt;buffer&lt;/var&gt; 的窗口来显示缓冲区。</target>
        </trans-unit>
        <trans-unit id="3bc0e8fac57bf562dfac0c627b407c346c91a217" translate="yes" xml:space="preserve">
          <source>This function tries to display &lt;var&gt;buffer&lt;/var&gt; by splitting the largest or least recently-used window (usually located on the selected frame). It actually performs the split by calling the function specified by &lt;code&gt;split-window-preferred-function&lt;/code&gt; (see &lt;a href=&quot;choosing-window-options#Choosing-Window-Options&quot;&gt;Choosing Window Options&lt;/a&gt;).</source>
          <target state="translated">此功能试图通过分割最大或最近最少使用的窗口（通常位于所选帧上）来显示 &lt;var&gt;buffer&lt;/var&gt; 。实际上，它是通过调用 &lt;code&gt;split-window-preferred-function&lt;/code&gt; 指定的函数来执行拆分的（请参见&lt;a href=&quot;choosing-window-options#Choosing-Window-Options&quot;&gt;选择窗口选项&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="db7c34f74cd84db5056e9e631f376a6e75f0bf4a" translate="yes" xml:space="preserve">
          <source>This function tries to display &lt;var&gt;buffer&lt;/var&gt; in a child frame (see &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;) of the selected frame, either reusing an existing child frame or by making a new one. If &lt;var&gt;alist&lt;/var&gt; has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;child-frame-parameters&lt;/code&gt; entry, the corresponding value is an alist of frame parameters to give the new frame. A &lt;code&gt;parent-frame&lt;/code&gt; parameter specifying the selected frame is provided by default. If the child frame should become the child of another frame, a corresponding entry must be added to &lt;var&gt;alist&lt;/var&gt;.</source>
          <target state="translated">此函数尝试重用现有的子帧或制作一个新的子帧，以在选定帧的子帧（请参见&lt;a href=&quot;child-frames#Child-Frames&quot;&gt;子帧&lt;/a&gt;）中显示 &lt;var&gt;buffer&lt;/var&gt; 。如果 &lt;var&gt;alist&lt;/var&gt; 有非 &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;child-frame-parameters&lt;/code&gt; 项，相应的值是帧参数的ALIST给新的框架。甲 &lt;code&gt;parent-frame&lt;/code&gt; 参数，指定所选择的帧被默认提供。如果子框架应成为另一个框架的子框架，则必须将相应的条目添加到 &lt;var&gt;alist&lt;/var&gt; 中。</target>
        </trans-unit>
        <trans-unit id="84b96441c8471492f51d49bb83e0ea12b7216510" translate="yes" xml:space="preserve">
          <source>This function tries to display &lt;var&gt;buffer&lt;/var&gt; in a new window that will be combined with an existing window to form an atomic window. If the existing window is already part of an atomic window, it adds the new window to that atomic window.</source>
          <target state="translated">此函数尝试在新窗口中显示 &lt;var&gt;buffer&lt;/var&gt; ，该缓冲区将与现有窗口组合以形成原子窗口。如果现有窗口已经是原子窗口的一部分，则会将新窗口添加到该原子窗口。</target>
        </trans-unit>
        <trans-unit id="8196c0e752557162a072276196961441d0edc105" translate="yes" xml:space="preserve">
          <source>This function tries to display &lt;var&gt;buffer&lt;/var&gt; in a window at the bottom of the selected frame.</source>
          <target state="translated">此功能尝试在选定帧底部的窗口中显示 &lt;var&gt;buffer&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="6795d9ec8a53a35004568d02a0345bac27f98b4d" translate="yes" xml:space="preserve">
          <source>This function tries to display &lt;var&gt;buffer&lt;/var&gt; in a window below the selected window. If there is a window below the selected one and that window already displays &lt;var&gt;buffer&lt;/var&gt;, it reuses that window.</source>
          <target state="translated">此功能尝试在所选窗口下方的窗口中显示 &lt;var&gt;buffer&lt;/var&gt; 。如果所选窗口下方有一个窗口，并且该窗口已显示 &lt;var&gt;buffer&lt;/var&gt; ，则它将重用该窗口。</target>
        </trans-unit>
        <trans-unit id="2fc7cb5b157ca8e5fd7dd2f9a6bcf6651eab8e05" translate="yes" xml:space="preserve">
          <source>This function tries to display &lt;var&gt;buffer&lt;/var&gt; in a window where it was displayed previously.</source>
          <target state="translated">该函数试图在先前显示的窗口中显示 &lt;var&gt;buffer&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="5a33527f3aebc46eaa9ca4905455ba32bccc9caa" translate="yes" xml:space="preserve">
          <source>This function tries to display &lt;var&gt;buffer&lt;/var&gt; in the selected window. It fails if the selected window is a minibuffer window or is dedicated to another buffer (see &lt;a href=&quot;dedicated-windows#Dedicated-Windows&quot;&gt;Dedicated Windows&lt;/a&gt;). It also fails if &lt;var&gt;alist&lt;/var&gt; has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;inhibit-same-window&lt;/code&gt; entry.</source>
          <target state="translated">此功能尝试在所选窗口中显示 &lt;var&gt;buffer&lt;/var&gt; 。如果所选窗口是微型缓冲区窗口或专用于另一个缓冲区，则失败（请参见&amp;ldquo;&lt;a href=&quot;dedicated-windows#Dedicated-Windows&quot;&gt;专用窗口&amp;rdquo;&lt;/a&gt;）。如果它也没有 &lt;var&gt;alist&lt;/var&gt; 具有非 &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;inhibit-same-window&lt;/code&gt; 录入。</target>
        </trans-unit>
        <trans-unit id="0957da040de107e2b1b6c3ef5e08567a77ad9c26" translate="yes" xml:space="preserve">
          <source>This function tries to resize windows adjacent to the edge that is moved. If this is not possible for some reason (e.g., if that adjacent window is fixed-size), it may resize other windows.</source>
          <target state="translated">这个函数试图调整与被移动的边缘相邻的窗口的大小。如果由于某些原因无法做到这一点(例如,如果相邻的窗口是固定大小的),它可能会调整其他窗口的大小。</target>
        </trans-unit>
        <trans-unit id="a77658bc899a49ec26ec09bf59f8efb85c20c633" translate="yes" xml:space="preserve">
          <source>This function tries to return a relative name that is equivalent to &lt;var&gt;filename&lt;/var&gt;, assuming the result will be interpreted relative to &lt;var&gt;directory&lt;/var&gt; (an absolute directory name or directory file name). If &lt;var&gt;directory&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the current buffer&amp;rsquo;s default directory.</source>
          <target state="translated">假定结果将相对于 &lt;var&gt;directory&lt;/var&gt; 进行解释（绝对目录名或目录文件名），则此函数尝试返回与 &lt;var&gt;filename&lt;/var&gt; 等效的相对名称。如果省略了 &lt;var&gt;directory&lt;/var&gt; 或 &lt;code&gt;nil&lt;/code&gt; ，则默认为当前缓冲区的默认目录。</target>
        </trans-unit>
        <trans-unit id="f958e66d372ec015745e5022dd2f4c7f0dd09230" translate="yes" xml:space="preserve">
          <source>This function tries to split &lt;var&gt;window&lt;/var&gt; and return the newly created window. If &lt;var&gt;window&lt;/var&gt; cannot be split, it returns &lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window.</source>
          <target state="translated">此函数尝试拆分 &lt;var&gt;window&lt;/var&gt; 并返回新创建的窗口。如果 &lt;var&gt;window&lt;/var&gt; 无法拆分，则返回 &lt;code&gt;nil&lt;/code&gt; 。如果 &lt;var&gt;window&lt;/var&gt; 省略或为 &lt;code&gt;nil&lt;/code&gt; ，则默认为所选窗口。</target>
        </trans-unit>
        <trans-unit id="62277f2e85da796456a779d7b57a9626e62eade0" translate="yes" xml:space="preserve">
          <source>This function undefines all the abbrevs in &lt;var&gt;abbrev-table&lt;/var&gt;, leaving it empty.</source>
          <target state="translated">此函数在 &lt;var&gt;abbrev-table&lt;/var&gt; 中取消定义所有缩写，将其保留为空。</target>
        </trans-unit>
        <trans-unit id="ba452830bd8d706054923bd3e8875be107b08977" translate="yes" xml:space="preserve">
          <source>This function undoes the effect of &lt;code&gt;debug-on-entry&lt;/code&gt; on &lt;var&gt;function-name&lt;/var&gt;. When called interactively, it prompts for &lt;var&gt;function-name&lt;/var&gt; in the minibuffer. If &lt;var&gt;function-name&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it cancels break-on-entry for all functions. Calling &lt;code&gt;cancel-debug-on-entry&lt;/code&gt; does nothing to a function which is not currently set up to break on entry.</source>
          <target state="translated">此函数取消对 &lt;var&gt;function-name&lt;/var&gt; &lt;code&gt;debug-on-entry&lt;/code&gt; 。当以交互方式调用时，它会提示在迷你缓冲区中输入 &lt;var&gt;function-name&lt;/var&gt; 。如果省略了 &lt;var&gt;function-name&lt;/var&gt; 或 &lt;code&gt;nil&lt;/code&gt; ，则它将取消所有功能的进入中断。调用 &lt;code&gt;cancel-debug-on-entry&lt;/code&gt; 不会对当前未设置为在进入时中断的函数没有任何作用。</target>
        </trans-unit>
        <trans-unit id="d15af1eab01cc544378c9d97e1a49ce36285a8f6" translate="yes" xml:space="preserve">
          <source>This function undoes the effect of &lt;code&gt;debug-on-variable-change&lt;/code&gt; on &lt;var&gt;variable&lt;/var&gt;. When called interactively, it prompts for &lt;var&gt;variable&lt;/var&gt; in the minibuffer. If &lt;var&gt;variable&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it cancels break-on-change for all variables. Calling &lt;code&gt;cancel-debug-on-variable-change&lt;/code&gt; does nothing to a variable which is not currently set up to break on change.</source>
          <target state="translated">此功能撤销的效果 &lt;code&gt;debug-on-variable-change&lt;/code&gt; 的 &lt;var&gt;variable&lt;/var&gt; 。交互式调用时，它会提示在迷你缓冲区中输入 &lt;var&gt;variable&lt;/var&gt; 。如果 &lt;var&gt;variable&lt;/var&gt; 被省略或为 &lt;code&gt;nil&lt;/code&gt; ，则它会取消所有变量的变更时中断。调用 &lt;code&gt;cancel-debug-on-variable-change&lt;/code&gt; 不会对当前未设置为在更改时中断的变量没有任何作用。</target>
        </trans-unit>
        <trans-unit id="b9b040e232da8637c2a97347f045caa8ed4ce96d" translate="yes" xml:space="preserve">
          <source>This function unlocks the file being visited in the current buffer, if the buffer is modified. If the buffer is not modified, then the file should not be locked, so this function does nothing. It also does nothing if the current buffer is not visiting a file, or is not locked.</source>
          <target state="translated">如果缓冲区被修改,那么这个函数将解锁当前缓冲区中被访问的文件。如果缓冲区没有被修改,那么文件不应该被锁定,所以这个函数不做任何事情。如果当前缓冲区没有访问文件,或者没有被锁定,那么这个函数也不会做任何事情。</target>
        </trans-unit>
        <trans-unit id="9cf5017363459e788210546e832bb7be24c1e148" translate="yes" xml:space="preserve">
          <source>This function unpacks data from the unibyte string or byte array &lt;code&gt;bindat-raw&lt;/code&gt; according to &lt;var&gt;spec&lt;/var&gt;. Normally, this starts unpacking at the beginning of the byte array, but if &lt;var&gt;bindat-idx&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it specifies a zero-based starting position to use instead.</source>
          <target state="translated">此函数根据 &lt;var&gt;spec&lt;/var&gt; 从单字节字符串或字节数组 &lt;code&gt;bindat-raw&lt;/code&gt; 解压缩数据。通常，这从字节数组的开头开始解包，但是如果 &lt;var&gt;bindat-idx&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，它将指定从零开始的起始位置。</target>
        </trans-unit>
        <trans-unit id="db0871a0f9eae053d05fefe7a89eb225cb481f26" translate="yes" xml:space="preserve">
          <source>This function updates the buffer&amp;rsquo;s record of the last modification time of the visited file, to the value specified by &lt;var&gt;time&lt;/var&gt; if &lt;var&gt;time&lt;/var&gt; is not &lt;code&gt;nil&lt;/code&gt;, and otherwise to the last modification time of the visited file.</source>
          <target state="translated">此功能更新的访问文件的最后修改时间缓冲的纪录，由指定的值 &lt;var&gt;time&lt;/var&gt; ，如果 &lt;var&gt;time&lt;/var&gt; 不 &lt;code&gt;nil&lt;/code&gt; ，否则在访问文件的最后修改时间。</target>
        </trans-unit>
        <trans-unit id="b496643d69b6fb9f8d5a4ffc179c7accc7082abd" translate="yes" xml:space="preserve">
          <source>This function updates the cross reference data in the</source>
          <target state="translated">这个函数更新了</target>
        </trans-unit>
        <trans-unit id="83252f52748782b59d699b18a2ad0d2736e606ce" translate="yes" xml:space="preserve">
          <source>This function used to be called &lt;code&gt;x-color-defined-p&lt;/code&gt;, and that name is still supported as an alias.</source>
          <target state="translated">该函数以前称为 &lt;code&gt;x-color-defined-p&lt;/code&gt; ，并且仍支持该名称作为别名。</target>
        </trans-unit>
        <trans-unit id="c674e23234b420eea66e8cb46b0db0cfc9cda0ad" translate="yes" xml:space="preserve">
          <source>This function used to be called &lt;code&gt;x-color-values&lt;/code&gt;, and that name is still supported as an alias.</source>
          <target state="translated">该函数以前称为 &lt;code&gt;x-color-values&lt;/code&gt; ，并且仍支持该名称作为别名。</target>
        </trans-unit>
        <trans-unit id="4f1164bde1bddbc301accaa26b8d796fa8f9f49f" translate="yes" xml:space="preserve">
          <source>This function used to be called &lt;code&gt;x-defined-colors&lt;/code&gt;, and that name is still supported as an alias.</source>
          <target state="translated">该函数以前称为 &lt;code&gt;x-defined-colors&lt;/code&gt; ，并且仍支持该名称作为别名。</target>
        </trans-unit>
        <trans-unit id="357b8baff8633266c25e29586c524324d26327a3" translate="yes" xml:space="preserve">
          <source>This function uses &lt;code&gt;completion-regexp-list&lt;/code&gt; in the same way that &lt;code&gt;try-completion&lt;/code&gt; does.</source>
          <target state="translated">此功能使用 &lt;code&gt;try-completion&lt;/code&gt; 相同的方式使用 &lt;code&gt;completion-regexp-list&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2bc19944ff338237a3addd5825fd961ef80a9925" translate="yes" xml:space="preserve">
          <source>This function uses &lt;code&gt;minibuffer-local-shell-command-map&lt;/code&gt; as the keymap for minibuffer input. The &lt;var&gt;history&lt;/var&gt; argument specifies the history list to use; if is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to &lt;code&gt;shell-command-history&lt;/code&gt; (see &lt;a href=&quot;minibuffer-history#Minibuffer-History&quot;&gt;shell-command-history&lt;/a&gt;). The optional argument &lt;var&gt;initial&lt;/var&gt; specifies the initial content of the minibuffer (see &lt;a href=&quot;initial-input#Initial-Input&quot;&gt;Initial Input&lt;/a&gt;). The rest of &lt;var&gt;args&lt;/var&gt;, if present, are used as the &lt;var&gt;default&lt;/var&gt; and &lt;var&gt;inherit-input-method&lt;/var&gt; arguments in &lt;code&gt;read-from-minibuffer&lt;/code&gt; (see &lt;a href=&quot;text-from-minibuffer#Text-from-Minibuffer&quot;&gt;Text from Minibuffer&lt;/a&gt;).</source>
          <target state="translated">此功能使用 &lt;code&gt;minibuffer-local-shell-command-map&lt;/code&gt; 作为minibuffer输入的键盘映射。在 &lt;var&gt;history&lt;/var&gt; 参数指定了历史列表使用;如果被省略或 &lt;code&gt;nil&lt;/code&gt; ，则默认为 &lt;code&gt;shell-command-history&lt;/code&gt; （请参阅&lt;a href=&quot;minibuffer-history#Minibuffer-History&quot;&gt;shell-command-history&lt;/a&gt;）。可选参数 &lt;var&gt;initial&lt;/var&gt; 指定迷你缓冲区的初始内容（请参阅&lt;a href=&quot;initial-input#Initial-Input&quot;&gt;Initial Input&lt;/a&gt;）。的其余部分 &lt;var&gt;args&lt;/var&gt; ，如果存在的话，被用作 &lt;var&gt;default&lt;/var&gt; 和 &lt;var&gt;inherit-input-method&lt;/var&gt; 中的参数 &lt;code&gt;read-from-minibuffer&lt;/code&gt; （见&lt;a href=&quot;text-from-minibuffer#Text-from-Minibuffer&quot;&gt;从迷你缓冲区文本&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="b5a6b376f87beee7f24ad9d483479685f39a4d98" translate="yes" xml:space="preserve">
          <source>This function uses &lt;code&gt;read-key&lt;/code&gt; to read and return a single character. It ignores any input that is not a member of &lt;var&gt;chars&lt;/var&gt;, a list of accepted characters. Optionally, it will also ignore keyboard-quit events while it is waiting for valid input. If you bind &lt;code&gt;help-form&lt;/code&gt; (see &lt;a href=&quot;help-functions#Help-Functions&quot;&gt;Help Functions&lt;/a&gt;) to a non-&lt;code&gt;nil&lt;/code&gt; value while calling &lt;code&gt;read-char-choice&lt;/code&gt;, then pressing &lt;code&gt;help-char&lt;/code&gt; causes it to evaluate &lt;code&gt;help-form&lt;/code&gt; and display the result. It then continues to wait for a valid input character, or keyboard-quit.</source>
          <target state="translated">此功能使用 &lt;code&gt;read-key&lt;/code&gt; 读取并返回单个字符。它会忽略不是 &lt;var&gt;chars&lt;/var&gt; 成员（接受的字符列表）的任何输入。 （可选）在等待有效输入时，它还将忽略键盘退出事件。如果在调用 &lt;code&gt;read-char-choice&lt;/code&gt; 时将 &lt;code&gt;help-form&lt;/code&gt; （请参阅&amp;ldquo;&lt;a href=&quot;help-functions#Help-Functions&quot;&gt;帮助功能&amp;rdquo;&lt;/a&gt;）绑定到非 &lt;code&gt;nil&lt;/code&gt; 值，则按 &lt;code&gt;help-char&lt;/code&gt; 会使它评估 &lt;code&gt;help-form&lt;/code&gt; 并显示结果。然后，它继续等待有效的输入字符或键盘退出。</target>
        </trans-unit>
        <trans-unit id="b1749d72cf03b7c1f511808903fa3ab3b06ad267" translate="yes" xml:space="preserve">
          <source>This function uses &lt;code&gt;replace-match&lt;/code&gt; to do the replacement, and it passes the optional arguments &lt;var&gt;fixedcase&lt;/var&gt;, &lt;var&gt;literal&lt;/var&gt; and &lt;var&gt;subexp&lt;/var&gt; along to &lt;code&gt;replace-match&lt;/code&gt;.</source>
          <target state="translated">该函数使用 &lt;code&gt;replace-match&lt;/code&gt; 进行替换，并将可选参数 &lt;var&gt;fixedcase&lt;/var&gt; ， &lt;var&gt;literal&lt;/var&gt; 和 &lt;var&gt;subexp&lt;/var&gt; 传递给 &lt;code&gt;replace-match&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aa17e8da855b187a35c221791374fd3be2279ca6" translate="yes" xml:space="preserve">
          <source>This function uses one of two functions to search for the next occurrence of &lt;var&gt;from-string&lt;/var&gt;. These functions are specified by the values of two variables: &lt;code&gt;replace-re-search-function&lt;/code&gt; and &lt;code&gt;replace-search-function&lt;/code&gt;. The former is called when the argument &lt;var&gt;regexp-flag&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the latter when it is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此函数使用两个函数之一来搜索下一个 &lt;var&gt;from-string&lt;/var&gt; 。这些函数由两个变量的值指定： &lt;code&gt;replace-re-search-function&lt;/code&gt; 和 &lt;code&gt;replace-search-function&lt;/code&gt; 。当参数前者称为 &lt;var&gt;regexp-flag&lt;/var&gt; 是不 &lt;code&gt;nil&lt;/code&gt; 时，它是，后者 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="32fb46b1bff0b78843f14be0f794e31cefa0dec3" translate="yes" xml:space="preserve">
          <source>This function uses the C library function &lt;code&gt;strftime&lt;/code&gt; (see &lt;a href=&quot;http://www.gnu.org/software/libc/manual/html_node/Formatting-Calendar-Time.html#Formatting-Calendar-Time&quot;&gt;Formatting Calendar Time&lt;/a&gt; in</source>
          <target state="translated">该函数使用C库函数 &lt;code&gt;strftime&lt;/code&gt; 的（见&lt;a href=&quot;http://www.gnu.org/software/libc/manual/html_node/Formatting-Calendar-Time.html#Formatting-Calendar-Time&quot;&gt;格式日历时间&lt;/a&gt;在</target>
        </trans-unit>
        <trans-unit id="07d8d6409993365bd35302a047f685e5bb577b8b" translate="yes" xml:space="preserve">
          <source>This function uses the minibuffer to read and return a single character. Optionally, it ignores any input that is not a member of &lt;var&gt;chars&lt;/var&gt;, a list of accepted characters. The &lt;var&gt;history&lt;/var&gt; argument specifies the history list symbol to use; if it is omitted or &lt;code&gt;nil&lt;/code&gt;, this function doesn&amp;rsquo;t use the history.</source>
          <target state="translated">此函数使用微型缓冲区读取并返回单个字符。（可选）它忽略不是 &lt;var&gt;chars&lt;/var&gt; 成员（接受的字符列表）的任何输入。在 &lt;var&gt;history&lt;/var&gt; 参数指定了历史列表符号来使用; 如果省略或为 &lt;code&gt;nil&lt;/code&gt; ，则此函数不使用历史记录。</target>
        </trans-unit>
        <trans-unit id="412674ef9e8f74b9c857d3838d7d370dc1e1e19c" translate="yes" xml:space="preserve">
          <source>This function warps the mouse like &lt;code&gt;set-mouse-position&lt;/code&gt; except that &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; are in units of pixels rather than units of characters.</source>
          <target state="translated">此功能使鼠标像 &lt;code&gt;set-mouse-position&lt;/code&gt; 一样扭曲鼠标，只是 &lt;var&gt;x&lt;/var&gt; 和 &lt;var&gt;y&lt;/var&gt; 以像素为单位而不是字符为单位。</target>
        </trans-unit>
        <trans-unit id="c8ee4b71d2d67c57c6a2540c373498cb26883da4" translate="yes" xml:space="preserve">
          <source>This function will normally skip directories, so if you want it to find directories, make sure the &lt;var&gt;predicate&lt;/var&gt; function returns &lt;code&gt;dir-ok&lt;/code&gt; for them. For example:</source>
          <target state="translated">该函数通常会跳过目录，因此，如果您希望它查找目录，请确保 &lt;var&gt;predicate&lt;/var&gt; 函数为它们返回 &lt;code&gt;dir-ok&lt;/code&gt; 。例如：</target>
        </trans-unit>
        <trans-unit id="59714ca8611c4a6a7e76698da9144596c934dfbf" translate="yes" xml:space="preserve">
          <source>This function will tell you whether a &lt;var&gt;process&lt;/var&gt;, which must not be a connection but a real subprocess, has given control of its terminal to a child process of its own. If this is true, the function returns the numeric ID of the foreground process group of &lt;var&gt;process&lt;/var&gt;; it returns &lt;code&gt;nil&lt;/code&gt; if Emacs can be certain that this is not so. The value is &lt;code&gt;t&lt;/code&gt; if Emacs cannot tell whether this is true. This function signals an error if &lt;var&gt;process&lt;/var&gt; is a network, serial, or pipe connection, or is the subprocess is not active.</source>
          <target state="translated">该函数将告诉您某个 &lt;var&gt;process&lt;/var&gt; （该进程一定不是连接，而必须是一个真正的子进程）是否已将其终端的控制权交给了自己的子进程。如果这是真的，则该函数返回的前台进程组的数字ID &lt;var&gt;process&lt;/var&gt; ;如果Emacs可以确定不是，则返回 &lt;code&gt;nil&lt;/code&gt; 。如果Emacs无法确定是否为真，则值为 &lt;code&gt;t&lt;/code&gt; 。如果 &lt;var&gt;process&lt;/var&gt; 是网络，串行或管道连接，或者子进程未激活，则此功能会发出错误消息。</target>
        </trans-unit>
        <trans-unit id="927d5cb8c138b67a9e94c33cd010d79946a06b7a" translate="yes" xml:space="preserve">
          <source>This function will try to delete &lt;var&gt;window&lt;/var&gt; if and only if (1) the first element of its &lt;code&gt;quit-restore&lt;/code&gt; parameter is either &lt;code&gt;window&lt;/code&gt; or &lt;code&gt;frame&lt;/code&gt;, (2) the window has no history of previously-displayed buffers and (3) the fourth element of the &lt;code&gt;quit-restore&lt;/code&gt; parameter specifies the buffer currently displayed in &lt;var&gt;window&lt;/var&gt;. If &lt;var&gt;window&lt;/var&gt; is part of an atomic window (see &lt;a href=&quot;atomic-windows#Atomic-Windows&quot;&gt;Atomic Windows&lt;/a&gt;), it will try to delete the root of that atomic window instead. In either case, it tries to avoid signaling an error when &lt;var&gt;window&lt;/var&gt; cannot be deleted.</source>
          <target state="translated">当且仅当（1）其 &lt;code&gt;quit-restore&lt;/code&gt; 参数的第一个元素是 &lt;code&gt;window&lt;/code&gt; 或 &lt;code&gt;frame&lt;/code&gt; ，（2）该窗口没有先前显示的缓冲区的历史记录，以及（3）的第四个元素时，此函数才会尝试删除 &lt;var&gt;window&lt;/var&gt; 。在 &lt;code&gt;quit-restore&lt;/code&gt; 参数指定当前显示在缓冲 &lt;var&gt;window&lt;/var&gt; 。如果 &lt;var&gt;window&lt;/var&gt; 是原子窗口的一部分（请参阅&lt;a href=&quot;atomic-windows#Atomic-Windows&quot;&gt;Atomic Windows&lt;/a&gt;），它将尝试删除该原子窗口的根。在任何一种情况下，当无法删除 &lt;var&gt;window&lt;/var&gt; 时，它都会尝试避免发出错误信号。</target>
        </trans-unit>
        <trans-unit id="377e25bd4af565486ae27cd15a6ba6040034c3e2" translate="yes" xml:space="preserve">
          <source>This function works by adding and removing &lt;var&gt;keymap&lt;/var&gt; from the variable &lt;code&gt;overriding-terminal-local-map&lt;/code&gt;, which takes precedence over all other active keymaps (see &lt;a href=&quot;searching-keymaps#Searching-Keymaps&quot;&gt;Searching Keymaps&lt;/a&gt;).</source>
          <target state="translated">通过从变量 &lt;code&gt;overriding-terminal-local-map&lt;/code&gt; 中添加和删​​除键 &lt;var&gt;keymap&lt;/var&gt; 来工作此功能，该变量优先于所有其他活动键映射（请参阅&amp;ldquo;&lt;a href=&quot;searching-keymaps#Searching-Keymaps&quot;&gt;搜索键映射&amp;rdquo;&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="046c68f4f8923b49584148b0455a8183b768181f" translate="yes" xml:space="preserve">
          <source>This function works by calling &lt;code&gt;call-process&lt;/code&gt;, so program output is decoded in the same way as for &lt;code&gt;call-process&lt;/code&gt;.</source>
          <target state="translated">该函数通过调用 &lt;code&gt;call-process&lt;/code&gt; 起作用，因此程序输出的解码方式与 &lt;code&gt;call-process&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="11a9c6584081a09b4de9292967ee0b9074a875cd" translate="yes" xml:space="preserve">
          <source>This function works by calling the &lt;code&gt;read-from-minibuffer&lt;/code&gt; function:</source>
          <target state="translated">此函数通过调用 &lt;code&gt;read-from-minibuffer&lt;/code&gt; 函数起作用：</target>
        </trans-unit>
        <trans-unit id="e144c825c6f2bacdf9f3d3d89e1cb3a4413ae936" translate="yes" xml:space="preserve">
          <source>This function works by walking the alist stored in &lt;code&gt;file-local-variables-alist&lt;/code&gt; and applying each local variable in turn. It calls &lt;code&gt;before-hack-local-variables-hook&lt;/code&gt; and &lt;code&gt;hack-local-variables-hook&lt;/code&gt; before and after applying the variables, respectively. It only calls the before-hook if the alist is non-&lt;code&gt;nil&lt;/code&gt;; it always calls the other hook. This function ignores a &amp;lsquo;</source>
          <target state="translated">该功能通过遍历存储在 &lt;code&gt;file-local-variables-alist&lt;/code&gt; 中的列表并依次应用每个局部变量来工作。在应用变量之前和之后，它分别调用 &lt;code&gt;before-hack-local-variables-hook&lt;/code&gt; 和 &lt;code&gt;hack-local-variables-hook&lt;/code&gt; 。如果alist为非 &lt;code&gt;nil&lt;/code&gt; ，则仅调用前钩。它总是调用另一个钩子。此功能会忽略&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="97e8d180f6870c8d1176eae52e480e7c456dcf24" translate="yes" xml:space="preserve">
          <source>This function works like &lt;code&gt;assoc&lt;/code&gt;, except that &lt;var&gt;key&lt;/var&gt; must be a string or symbol, and comparison is done using &lt;code&gt;compare-strings&lt;/code&gt;. Symbols are converted to strings before testing. If &lt;var&gt;case-fold&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;key&lt;/var&gt; and the elements of &lt;var&gt;alist&lt;/var&gt; are converted to upper-case before comparison. Unlike &lt;code&gt;assoc&lt;/code&gt;, this function can also match elements of the alist that are strings or symbols rather than conses. In particular, &lt;var&gt;alist&lt;/var&gt; can be a list of strings or symbols rather than an actual alist. See &lt;a href=&quot;association-lists#Association-Lists&quot;&gt;Association Lists&lt;/a&gt;.</source>
          <target state="translated">此功能与 &lt;code&gt;assoc&lt;/code&gt; 相似，但 &lt;var&gt;key&lt;/var&gt; 必须是字符串或符号，并且使用 &lt;code&gt;compare-strings&lt;/code&gt; 进行比较。测试前将符号转换为字符串。如果 &lt;var&gt;case-fold&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则在比较之前， &lt;var&gt;key&lt;/var&gt; 和 &lt;var&gt;alist&lt;/var&gt; 的元素将转换为大写。与 &lt;code&gt;assoc&lt;/code&gt; 不同，此函数还可以匹配列表或字符串或符号而不是cons的元素。特别是， &lt;var&gt;alist&lt;/var&gt; 可以是字符串或符号的列表，而不是实际的ALIST。请参阅&lt;a href=&quot;association-lists#Association-Lists&quot;&gt;关联列表&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c22c44c427f12fb995b62050100fa642c6dcfc58" translate="yes" xml:space="preserve">
          <source>This function works like &lt;code&gt;funcall&lt;/code&gt; (see &lt;a href=&quot;calling-functions#Calling-Functions&quot;&gt;Calling Functions&lt;/a&gt;), but it makes the call look like an interactive invocation: a call to &lt;code&gt;called-interactively-p&lt;/code&gt; inside &lt;var&gt;function&lt;/var&gt; will return &lt;code&gt;t&lt;/code&gt;. If &lt;var&gt;function&lt;/var&gt; is not a command, it is called without signaling an error.</source>
          <target state="translated">该函数的工作方式类似于 &lt;code&gt;funcall&lt;/code&gt; （请参见&lt;a href=&quot;calling-functions#Calling-Functions&quot;&gt;调用函数&lt;/a&gt;），但是它使调用看起来像是交互式调用：内部 &lt;var&gt;function&lt;/var&gt; 对 &lt;code&gt;called-interactively-p&lt;/code&gt; 调用-interactively -p的调用将返回 &lt;code&gt;t&lt;/code&gt; 。如果 &lt;var&gt;function&lt;/var&gt; 不是命令，则调用该函数时不会发出错误信号。</target>
        </trans-unit>
        <trans-unit id="a92da63b837fc6e3dfb0506021d5ce7e67e43f9a" translate="yes" xml:space="preserve">
          <source>This function works like &lt;code&gt;fundamental-mode&lt;/code&gt;, in that it kills all buffer-local variables, but it also records the major mode in effect, so that it could subsequently be restored. This function and &lt;code&gt;major-mode-restore&lt;/code&gt; (described next) are useful when you need to put a buffer under some specialized mode other than the one Emacs chooses for it automatically (see &lt;a href=&quot;auto-major-mode#Auto-Major-Mode&quot;&gt;Auto Major Mode&lt;/a&gt;), but would also like to be able to switch back to the original mode later.</source>
          <target state="translated">此函数的工作方式与 &lt;code&gt;fundamental-mode&lt;/code&gt; ，因为它杀死了所有缓冲区局部变量，但是它也记录了有效的main模式，因此可以随后对其进行恢复。当您需要将缓冲区置于某种特殊模式下（而不是Emacs为它自动选择的一种&lt;a href=&quot;auto-major-mode#Auto-Major-Mode&quot;&gt;模式时&lt;/a&gt;，请参见自动主模式），此功能和 &lt;code&gt;major-mode-restore&lt;/code&gt; （如下所述）很有用，但是您还希望能够切换稍后返回原始模式。</target>
        </trans-unit>
        <trans-unit id="9eaa9113d08e85a0341a522e2bd0ccc24f28f836" translate="yes" xml:space="preserve">
          <source>This function works like &lt;code&gt;insert-file-contents&lt;/code&gt; except that it does not run &lt;code&gt;after-insert-file-functions&lt;/code&gt;, and does not do format decoding, character code conversion, automatic uncompression, and so on.</source>
          <target state="translated">该函数的作用类似于 &lt;code&gt;insert-file-contents&lt;/code&gt; 不同之处在于它不运行 &lt;code&gt;after-insert-file-functions&lt;/code&gt; ，并且不进行格式解码，字符代码转换，自动解压缩等。</target>
        </trans-unit>
        <trans-unit id="a5fc3058747e77452887cefce371bd81bf71ed72" translate="yes" xml:space="preserve">
          <source>This function works like &lt;code&gt;insert&lt;/code&gt;, except that it processes the text in &lt;var&gt;string&lt;/var&gt; according to the &lt;code&gt;yank-handler&lt;/code&gt; text property, as well as the variables &lt;code&gt;yank-handled-properties&lt;/code&gt; and &lt;code&gt;yank-excluded-properties&lt;/code&gt; (see below), before inserting the result into the current buffer.</source>
          <target state="translated">此函数的作用类似于 &lt;code&gt;insert&lt;/code&gt; ，不同之处在于，在将结果插入到 &lt;var&gt;string&lt;/var&gt; ，它根据 &lt;code&gt;yank-handler&lt;/code&gt; 文本属性以及变量 &lt;code&gt;yank-handled-properties&lt;/code&gt; 和 &lt;code&gt;yank-excluded-properties&lt;/code&gt; （请参见下文）处理字符串中的文本。当前缓冲区。</target>
        </trans-unit>
        <trans-unit id="0e98782712e5b5698ffe9fe3d962c1e8beaf60be" translate="yes" xml:space="preserve">
          <source>This function works only on the controlling terminal of the Emacs session; to relinquish control of other tty devices, use &lt;code&gt;suspend-tty&lt;/code&gt; (see below). If the Emacs session uses more than one terminal, you must delete the frames on all the other terminals before suspending Emacs, or this function signals an error. See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;.</source>
          <target state="translated">此功能仅在Emacs会话的控制终端上起作用；要放弃对其他tty设备的控制，请使用 &lt;code&gt;suspend-tty&lt;/code&gt; （请参见下文）。如果Emacs会话使用多个终端，则必须在挂起Emacs之前删除所有其他终端上的帧，否则此功能将指示错误。请参阅&lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;多个终端&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5ff8ecf56302291134dca6ec8b90433cdb8868d3" translate="yes" xml:space="preserve">
          <source>This function works similar to &lt;code&gt;buffer-substring&lt;/code&gt; (see &lt;a href=&quot;buffer-contents#Buffer-Contents&quot;&gt;Buffer Contents&lt;/a&gt;), but it prepends and appends to the copied text bidi directional control characters necessary to preserve the visual appearance of the text when it is inserted at another place. Optional argument &lt;var&gt;no-properties&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, means remove the text properties from the copy of the text.</source>
          <target state="translated">此函数的工作方式类似于 &lt;code&gt;buffer-substring&lt;/code&gt; （请参见&lt;a href=&quot;buffer-contents#Buffer-Contents&quot;&gt;Buffer Contents&lt;/a&gt;），但是它在复制的文本之前附加并附加了双向控制字符，以保持在另一位置插入文本时的视觉外观。可选参数 &lt;var&gt;no-properties&lt;/var&gt; ，如果为非 &lt;code&gt;nil&lt;/code&gt; ，则表示从文本副本中删除文本属性。</target>
        </trans-unit>
        <trans-unit id="b0834d836bf1dbadd83e82e2e3aac9edcaaaacb7" translate="yes" xml:space="preserve">
          <source>This function writes the current buffer into file &lt;var&gt;filename&lt;/var&gt;, makes the buffer visit that file, and marks it not modified. Then it renames the buffer based on &lt;var&gt;filename&lt;/var&gt;, appending a string like &amp;lsquo;</source>
          <target state="translated">此函数将当前缓冲区写入文件 &lt;var&gt;filename&lt;/var&gt; ，使缓冲区访问该文件，并将其标记为未修改。然后，它根据 &lt;var&gt;filename&lt;/var&gt; 重命名缓冲区，并添加一个字符串，例如'</target>
        </trans-unit>
        <trans-unit id="67140601dd6e6976d3cc21284b7dc5ba62488ce6" translate="yes" xml:space="preserve">
          <source>This function writes the region delimited by &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; in the current buffer into the file specified by &lt;var&gt;filename&lt;/var&gt;.</source>
          <target state="translated">此函数将当前缓冲区中由 &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 定界的区域写入 &lt;var&gt;filename&lt;/var&gt; 指定的文件中。</target>
        </trans-unit>
        <trans-unit id="5eec5a148847215f6daa983cdd6dbbad37e0abe1" translate="yes" xml:space="preserve">
          <source>This function, when called from within the lexical body of a primary or an &lt;code&gt;:around&lt;/code&gt; auxiliary method, returns non-&lt;code&gt;nil&lt;/code&gt; if there is a next method to call.</source>
          <target state="translated">从主要方法或 &lt;code&gt;:around&lt;/code&gt; 辅助方法的词法主体中调用此函数时，如果有下一个要调用的方法，则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ecaddbd52cc2f447f7f4d8fd2be4f6a3445c4a60" translate="yes" xml:space="preserve">
          <source>This function, which is available since Emacs 27, extracts the integer value of &lt;var&gt;arg&lt;/var&gt;. The value of &lt;var&gt;arg&lt;/var&gt; must be an integer (fixnum or bignum). If &lt;var&gt;sign&lt;/var&gt; is not &lt;code&gt;NULL&lt;/code&gt;, it stores the sign of &lt;var&gt;arg&lt;/var&gt; (-1, 0, or +1) into &lt;code&gt;*sign&lt;/code&gt;. The magnitude is stored into &lt;var&gt;magnitude&lt;/var&gt; as follows. If &lt;var&gt;count&lt;/var&gt; and &lt;var&gt;magnitude&lt;/var&gt; are both non-&lt;code&gt;NULL&lt;/code&gt;, then &lt;var&gt;magnitude&lt;/var&gt; must point to an array of at least &lt;code&gt;*count&lt;/code&gt;&lt;code&gt;unsigned long&lt;/code&gt; elements. If &lt;var&gt;magnitude&lt;/var&gt; is large enough to hold the magnitude of &lt;var&gt;arg&lt;/var&gt;, then this function writes the magnitude into the &lt;var&gt;magnitude&lt;/var&gt; array in little-endian form, stores the number of array elements written into &lt;code&gt;*count&lt;/code&gt;, and returns &lt;code&gt;true&lt;/code&gt;. If &lt;var&gt;magnitude&lt;/var&gt; is not large enough, it stores the required array size into &lt;code&gt;*count&lt;/code&gt;, signals an error, and returns &lt;code&gt;false&lt;/code&gt;. If &lt;var&gt;count&lt;/var&gt; is not &lt;code&gt;NULL&lt;/code&gt; and &lt;var&gt;magnitude&lt;/var&gt; is &lt;code&gt;NULL&lt;/code&gt;, then the function stores the required array size into &lt;code&gt;*count&lt;/code&gt; and returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">从Emacs 27开始可用的此函数提取 &lt;var&gt;arg&lt;/var&gt; 的整数值。 &lt;var&gt;arg&lt;/var&gt; 的值必须是整数（fixnum或bignum）。如果 &lt;var&gt;sign&lt;/var&gt; 不为 &lt;code&gt;NULL&lt;/code&gt; ，它将 &lt;var&gt;arg&lt;/var&gt; （-1、0或+1）的符号存储到 &lt;code&gt;*sign&lt;/code&gt; 中。将该幅度存储为以下 &lt;var&gt;magnitude&lt;/var&gt; 。如果 &lt;var&gt;count&lt;/var&gt; 和 &lt;var&gt;magnitude&lt;/var&gt; 都不为 &lt;code&gt;NULL&lt;/code&gt; ，则 &lt;var&gt;magnitude&lt;/var&gt; 必须指向至少 &lt;code&gt;*count&lt;/code&gt; 个 &lt;code&gt;unsigned long&lt;/code&gt; 元素的数组。如果 &lt;var&gt;magnitude&lt;/var&gt; 足够大以容纳 &lt;var&gt;arg&lt;/var&gt; 的大小，然后此函数以小尾数形式将 &lt;var&gt;magnitude&lt;/var&gt; 写入量级数组，存储写入 &lt;code&gt;*count&lt;/code&gt; 的数组元素的数量，并返回 &lt;code&gt;true&lt;/code&gt; 。如果 &lt;var&gt;magnitude&lt;/var&gt; 不够大，它将所需的数组大小存储到 &lt;code&gt;*count&lt;/code&gt; 中，表示错误，并返回 &lt;code&gt;false&lt;/code&gt; 。如果 &lt;var&gt;count&lt;/var&gt; 不为 &lt;code&gt;NULL&lt;/code&gt; 且 &lt;var&gt;magnitude&lt;/var&gt; 为 &lt;code&gt;NULL&lt;/code&gt; ，则该函数将所需的数组大小存储到 &lt;code&gt;*count&lt;/code&gt; 中,并返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6faac83d6eccae013ba28dbc157a4bf098657401" translate="yes" xml:space="preserve">
          <source>This function, which is available since Emacs 27, interprets &lt;var&gt;time&lt;/var&gt; as an Emacs Lisp time value and returns the corresponding &lt;code&gt;struct timespec&lt;/code&gt;. See &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;. &lt;code&gt;struct timespec&lt;/code&gt; represents a timestamp with nanosecond precision. It has the following members:</source>
          <target state="translated">此功能自Emacs 27起可用，它将 &lt;var&gt;time&lt;/var&gt; 解释为Emacs Lisp时间值，并返回相应的 &lt;code&gt;struct timespec&lt;/code&gt; 。请参阅&lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;时间&lt;/a&gt;。 &lt;code&gt;struct timespec&lt;/code&gt; 表示具有纳秒精度的时间戳。它具有以下成员：</target>
        </trans-unit>
        <trans-unit id="d7a9ff9916af1c294cd4d519bbb6c454f3ed88da" translate="yes" xml:space="preserve">
          <source>This function, which is available since Emacs 27, takes a &lt;code&gt;struct
timespec&lt;/code&gt; argument &lt;var&gt;time&lt;/var&gt; and returns the corresponding Emacs timestamp as a pair &lt;code&gt;(&lt;var&gt;ticks&lt;/var&gt; . &lt;var&gt;hz&lt;/var&gt;)&lt;/code&gt;. See &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;. The return value represents exactly the same timestamp as &lt;var&gt;time&lt;/var&gt;: all input values are representable, and there is never a loss of precision. &lt;code&gt;&lt;var&gt;time&lt;/var&gt;.tv_sec&lt;/code&gt; and &lt;code&gt;&lt;var&gt;time&lt;/var&gt;.tv_nsec&lt;/code&gt; can be arbitrary values. In particular, there&amp;rsquo;s no requirement that &lt;var&gt;time&lt;/var&gt; be normalized. This means that &lt;code&gt;&lt;var&gt;time&lt;/var&gt;.tv_nsec&lt;/code&gt; can be negative or larger than 999,999,999.</source>
          <target state="translated">此函数，这是因为Emacs的27可用的，需要一个 &lt;code&gt;struct timespec&lt;/code&gt; 参数 &lt;var&gt;time&lt;/var&gt; 并返回相应的Emacs时间戳作为一对 &lt;code&gt;(&lt;var&gt;ticks&lt;/var&gt; . &lt;var&gt;hz&lt;/var&gt;)&lt;/code&gt; 。请参阅&lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;时间&lt;/a&gt;。返回值表示的时间戳与 &lt;var&gt;time&lt;/var&gt; 完全相同：所有输入值都是可表示的，并且永远不会损失精度。 &lt;code&gt;&lt;var&gt;time&lt;/var&gt;.tv_sec&lt;/code&gt; 和 &lt;code&gt;&lt;var&gt;time&lt;/var&gt;.tv_nsec&lt;/code&gt; 可以是任意值。特别是，没有 &lt;var&gt;time&lt;/var&gt; 标准化的要求。这意味着 &lt;code&gt;&lt;var&gt;time&lt;/var&gt;.tv_nsec&lt;/code&gt; 可以为负或大于999,999,999。</target>
        </trans-unit>
        <trans-unit id="1847b4c01dca1eeacaab5140ef27e18f81cc6670" translate="yes" xml:space="preserve">
          <source>This function, which is available since Emacs 27, takes an arbitrary-sized integer argument and returns a corresponding &lt;code&gt;emacs_value&lt;/code&gt; object. The &lt;var&gt;sign&lt;/var&gt; argument gives the sign of the return value. If &lt;var&gt;sign&lt;/var&gt; is nonzero, then &lt;var&gt;magnitude&lt;/var&gt; must point to an array of at least &lt;var&gt;count&lt;/var&gt; elements specifying the little-endian magnitude of the return value.</source>
          <target state="translated">此函数自Emacs 27起可用，它接受任意大小的整数参数并返回相应的 &lt;code&gt;emacs_value&lt;/code&gt; 对象。该 &lt;var&gt;sign&lt;/var&gt; 参数给出返回值的符号。如果 &lt;var&gt;sign&lt;/var&gt; 不为零，则 &lt;var&gt;magnitude&lt;/var&gt; 必须指向至少一个 &lt;var&gt;count&lt;/var&gt; 元素的数组，这些数组指定返回值的小端序幅度。</target>
        </trans-unit>
        <trans-unit id="a833cfd74bbb04febdde953baf2bd3532c6d904c" translate="yes" xml:space="preserve">
          <source>This functions returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s window state change flag is set and &lt;code&gt;nil&lt;/code&gt; otherwise. &lt;var&gt;frame&lt;/var&gt; must be a live frame and defaults to the selected one.</source>
          <target state="translated">如果设置了 &lt;var&gt;frame&lt;/var&gt; 的窗口状态更改标志，则此函数返回 &lt;code&gt;t&lt;/code&gt; ,否则返回 &lt;code&gt;nil&lt;/code&gt; 。 &lt;var&gt;frame&lt;/var&gt; 必须是实时帧，并且默认为所选帧。</target>
        </trans-unit>
        <trans-unit id="f3c7971b829a0cecba2092251d8f11a20e415670" translate="yes" xml:space="preserve">
          <source>This functions returns an amount of total system memory and how much of it is free. On an unsupported system, the value may be &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此函数返回总的系统内存量以及其中的可用空间。在不受支持的系统上，该值可能为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4e42c67d4013b9ebcfd49ca97c2b842edf44a260" translate="yes" xml:space="preserve">
          <source>This functions returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;ancestor&lt;/var&gt; is an ancestor of &lt;var&gt;descendant&lt;/var&gt;. &lt;var&gt;ancestor&lt;/var&gt; is an ancestor of &lt;var&gt;descendant&lt;/var&gt; when it is either &lt;var&gt;descendant&lt;/var&gt;&amp;rsquo;s parent frame or it is an ancestor of &lt;var&gt;descendant&lt;/var&gt;&amp;rsquo;s parent frame. Both, &lt;var&gt;ancestor&lt;/var&gt; and &lt;var&gt;descendant&lt;/var&gt; must specify live frames.</source>
          <target state="translated">如果 &lt;var&gt;ancestor&lt;/var&gt; 是 &lt;var&gt;descendant&lt;/var&gt; 的祖先，则此函数返回 &lt;code&gt;nil&lt;/code&gt; 。 &lt;var&gt;ancestor&lt;/var&gt; 是祖先 &lt;var&gt;descendant&lt;/var&gt; 时，它要么是 &lt;var&gt;descendant&lt;/var&gt; 的父框架或它的祖先 &lt;var&gt;descendant&lt;/var&gt; 的父帧s。无论， &lt;var&gt;ancestor&lt;/var&gt; 和 &lt;var&gt;descendant&lt;/var&gt; 必须指定现场帧。</target>
        </trans-unit>
        <trans-unit id="be38eb1c4dd9326eba12e874ba843b68c6f73850" translate="yes" xml:space="preserve">
          <source>This functions returns the root of the atomic window &lt;var&gt;window&lt;/var&gt; is a part of. The specified &lt;var&gt;window&lt;/var&gt; must be a valid window and defaults to the selected one. It returns &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;window&lt;/var&gt; is not part of an atomic window.</source>
          <target state="translated">此函数返回原子窗口 &lt;var&gt;window&lt;/var&gt; 的一部分的根。指定的 &lt;var&gt;window&lt;/var&gt; 必须是有效窗口，并且默认为所选窗口。如果 &lt;var&gt;window&lt;/var&gt; 不是原子窗口的一部分，则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9c94511ce5c269e923a9cf9867c9eb2d7be8025b" translate="yes" xml:space="preserve">
          <source>This functions returns the use time of window &lt;var&gt;window&lt;/var&gt;. &lt;var&gt;window&lt;/var&gt; must be a live window and defaults to the selected one.</source>
          <target state="translated">该函数返回window &lt;var&gt;window&lt;/var&gt; 的使用时间。 &lt;var&gt;window&lt;/var&gt; 必须是活动窗口，并且默认为选定的窗口。</target>
        </trans-unit>
        <trans-unit id="5e6e6d42bab460c31f6699b137ee982c58e94b4e" translate="yes" xml:space="preserve">
          <source>This gives a name to the advice, which &lt;code&gt;remove-function&lt;/code&gt; can use to identify which function to remove. Typically used when &lt;var&gt;function&lt;/var&gt; is an anonymous function.</source>
          <target state="translated">这为建议提供了名称， &lt;code&gt;remove-function&lt;/code&gt; 可用于标识要删除的功能。通常在 &lt;var&gt;function&lt;/var&gt; 为匿名函数时使用。</target>
        </trans-unit>
        <trans-unit id="6eb3e727d20600ecf15f9bddabc9c7d3826bb7ed" translate="yes" xml:space="preserve">
          <source>This gives the module functions names so that Lisp code could call it by that name. We describe how to do this in &lt;a href=&quot;module-functions#Module-Functions&quot;&gt;Module Functions&lt;/a&gt; below.</source>
          <target state="translated">这为模块函数指定了名称，以便Lisp代码可以使用该名称进行调用。我们将在下面的&lt;a href=&quot;module-functions#Module-Functions&quot;&gt;模块功能&lt;/a&gt;中介绍如何执行此操作。</target>
        </trans-unit>
        <trans-unit id="362f5cec2c326a4848177c9c221e4f5d7042a16e" translate="yes" xml:space="preserve">
          <source>This has a locale-specific meaning. In the default locale (named &amp;lsquo;</source>
          <target state="translated">这具有特定于语言环境的含义。在默认语言环境（名为&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="92b35c7b2fffe5bacfb3bd63a586a08286df761c" translate="yes" xml:space="preserve">
          <source>This has all the same advantages as putting the initialization inside the &lt;code&gt;defvar&lt;/code&gt;, except that you must type</source>
          <target state="translated">这与将初始化放入 &lt;code&gt;defvar&lt;/code&gt; 中具有所有相同的优点，除了必须键入</target>
        </trans-unit>
        <trans-unit id="67f1db2792730aa31bf14981bf4c385fe7e347f1" translate="yes" xml:space="preserve">
          <source>This has the same value as &lt;code&gt;this-command&lt;/code&gt; except when command remapping occurs (see &lt;a href=&quot;remapping-commands#Remapping-Commands&quot;&gt;Remapping Commands&lt;/a&gt;). In that case, &lt;code&gt;this-command&lt;/code&gt; gives the command actually run (the result of remapping), and &lt;code&gt;this-original-command&lt;/code&gt; gives the command that was specified to run but remapped into another command.</source>
          <target state="translated">除发生命令重新映射外， &lt;code&gt;this-command&lt;/code&gt; 值与此命令相同（请参阅&lt;a href=&quot;remapping-commands#Remapping-Commands&quot;&gt;重新映射命令&lt;/a&gt;）。在这种情况下， &lt;code&gt;this-command&lt;/code&gt; 给出实际运行的命令（重新映射的结果），而 &lt;code&gt;this-original-command&lt;/code&gt; 给出指定运行但重新映射为另一命令的命令。</target>
        </trans-unit>
        <trans-unit id="40c881199f24c02215c7d793a78040dbbb53e0c7" translate="yes" xml:space="preserve">
          <source>This history list is actually a special case of minibuffer history (see &lt;a href=&quot;minibuffer-history#Minibuffer-History&quot;&gt;Minibuffer History&lt;/a&gt;), with one special twist: the elements are expressions rather than strings.</source>
          <target state="translated">此历史记录列表实际上是&lt;a href=&quot;minibuffer-history#Minibuffer-History&quot;&gt;minibuffer历史记录的&lt;/a&gt;一种特殊情况（请参阅Minibuffer History），但有一个特殊的变化：元素是表达式而不是字符串。</target>
        </trans-unit>
        <trans-unit id="8bcca11757ad5593baa86f3970bcb3a6003e7840" translate="yes" xml:space="preserve">
          <source>This holds the email address of the user who is using Emacs.</source>
          <target state="translated">这里保存着正在使用Emacs的用户的电子邮件地址。</target>
        </trans-unit>
        <trans-unit id="1d8bba7a7ee6a7b33a5138a9859c48441b52fdd9" translate="yes" xml:space="preserve">
          <source>This hook is also run when Emacs first enters the command loop (at which point &lt;code&gt;this-command&lt;/code&gt; and &lt;code&gt;last-command&lt;/code&gt; are both &lt;code&gt;nil&lt;/code&gt;).</source>
          <target state="translated">当Emacs第一次进入命令循环时，此钩子也会运行（此时， &lt;code&gt;this-command&lt;/code&gt; 和 &lt;code&gt;last-command&lt;/code&gt; 均为 &lt;code&gt;nil&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="abff04f1fc8b5a5670bcf5df4395d261f51d8643" translate="yes" xml:space="preserve">
          <source>This hook is run just before redisplay. It is called once in each window that is about to be redisplayed, with &lt;code&gt;current-buffer&lt;/code&gt; set to the buffer displayed in that window.</source>
          <target state="translated">该挂钩在重新显示之前运行。在每个将要重新显示的窗口中调用一次， &lt;code&gt;current-buffer&lt;/code&gt; 设置为该窗口中显示的缓冲区。</target>
        </trans-unit>
        <trans-unit id="c8d427de10ebc1d86ecdf97026f2ffdc370659b5" translate="yes" xml:space="preserve">
          <source>This hook is used for automatically assigning faces to text in the buffer. It is part of the implementation of Jit-Lock mode, used by Font-Lock.</source>
          <target state="translated">这个钩子用于自动为缓冲区中的文本分配面。它是实现Jit-Lock模式的一部分,被Font-Lock使用。</target>
        </trans-unit>
        <trans-unit id="0df53fd7768ddf8d6cf8226757bb41e09d4e965e" translate="yes" xml:space="preserve">
          <source>This hook specifies the functions that are run when an Emacs frame is moved (assigned a new position) by the window-system or window manager. The functions are run with one argument, the frame that moved. For a child frame (see &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;), the functions are run only when the position of the frame changes in relation to that of its parent frame.</source>
          <target state="translated">该挂钩指定窗口系统或窗口管理器移动Emacs框架（分配新位置）时运行的功能。这些函数使用一个参数（移动的框架）运行。对于子框架（请参阅&lt;a href=&quot;child-frames#Child-Frames&quot;&gt;子框架&lt;/a&gt;），仅当框架的位置相对于其父框架的位置发生变化时，才运行功能。</target>
        </trans-unit>
        <trans-unit id="bca2ecc6b29b81e4da85f93160adc2cd1266f9f4" translate="yes" xml:space="preserve">
          <source>This identifier string can include a host name and a user name, as well as characters designating the method used to access the remote system. For example, the remote identifier string for the filename &lt;code&gt;/sudo::/some/file&lt;/code&gt; is &lt;code&gt;/sudo:root@localhost:&lt;/code&gt;.</source>
          <target state="translated">该标识符字符串可以包括主机名和用户名，以及指定用于访问远程系统的方法的字符。例如，对于文件名远程标识符串 &lt;code&gt;/sudo::/some/file&lt;/code&gt; 是 &lt;code&gt;/sudo:root@localhost:&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5f3704ace63c19c6746f28269631768748065f91" translate="yes" xml:space="preserve">
          <source>This imaginary special form implements a loop that executes the &lt;var&gt;body&lt;/var&gt; forms and then increments the variable &lt;var&gt;var&lt;/var&gt; on each iteration. On the first iteration, the variable has the value &lt;var&gt;from&lt;/var&gt;; on subsequent iterations, it is incremented by one (or by &lt;var&gt;inc&lt;/var&gt; if that is given). The loop exits before executing &lt;var&gt;body&lt;/var&gt; if &lt;var&gt;var&lt;/var&gt; equals &lt;var&gt;to&lt;/var&gt;. Here is an example:</source>
          <target state="translated">这个假想的特殊形式实现了一个循环，该循环执行 &lt;var&gt;body&lt;/var&gt; 形式，然后在每次迭代中递增变量 &lt;var&gt;var&lt;/var&gt; 。在第一次迭代中，变量具有值 &lt;var&gt;from&lt;/var&gt; ; 在随后的迭代中，它会增加1（如果有，则增加 &lt;var&gt;inc&lt;/var&gt; ）。如果 &lt;var&gt;var&lt;/var&gt; 等于 &lt;var&gt;to&lt;/var&gt; 则循环在执行 &lt;var&gt;body&lt;/var&gt; 之前退出。这是一个例子：</target>
        </trans-unit>
        <trans-unit id="2030f1153563e9a57018bf6725c74d3f6a5c6eba" translate="yes" xml:space="preserve">
          <source>This insert a button with the label &lt;var&gt;label&lt;/var&gt; at point, and returns it.</source>
          <target state="translated">这将插入带有标签 &lt;var&gt;label&lt;/var&gt; 的按钮，然后将其返回。</target>
        </trans-unit>
        <trans-unit id="516ffb9f41d576630207d825fa1678bf965f0da0" translate="yes" xml:space="preserve">
          <source>This inserts &lt;var&gt;object&lt;/var&gt; into &lt;var&gt;ring&lt;/var&gt;, making it the newest element, and returns &lt;var&gt;object&lt;/var&gt;.</source>
          <target state="translated">这会将 &lt;var&gt;object&lt;/var&gt; 插入 &lt;var&gt;ring&lt;/var&gt; 中，使其成为最新的元素，然后返回 &lt;var&gt;object&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="e206d808989125d625a9c34521abd5c21cd7b7b5" translate="yes" xml:space="preserve">
          <source>This inserts &lt;var&gt;object&lt;/var&gt; into &lt;var&gt;ring&lt;/var&gt;, treating it as the oldest element. The return value is not significant.</source>
          <target state="translated">这会将 &lt;var&gt;object&lt;/var&gt; 插入 &lt;var&gt;ring&lt;/var&gt; ，将其视为最旧的元素。返回值不重要。</target>
        </trans-unit>
        <trans-unit id="81e970d901aca4a8592ed45c5fbed74f40774f4d" translate="yes" xml:space="preserve">
          <source>This inserts a button with the label &lt;var&gt;label&lt;/var&gt; at point, using text properties.</source>
          <target state="translated">这会使用文本属性插入一个带有标签 &lt;var&gt;label&lt;/var&gt; 的按钮。</target>
        </trans-unit>
        <trans-unit id="956036dde35997f66fc9a54defc9c1de32e7d2c5" translate="yes" xml:space="preserve">
          <source>This is a &lt;em&gt;mouse position list&lt;/em&gt; specifying where the mouse click occurred; see below for details.</source>
          <target state="translated">这是一个&lt;em&gt;鼠标位置列表，&lt;/em&gt;用于指定鼠标单击发生的位置。有关详情，请参见下文。</target>
        </trans-unit>
        <trans-unit id="d582e5067abdfe817383421e2918b0b7eb2ff332" translate="yes" xml:space="preserve">
          <source>This is a C variable name to use for a structure that holds the data for the subr object that represents the function in Lisp. This structure conveys the Lisp symbol name to the initialization routine that will create the symbol and store the subr object as its definition. By convention, this name is always &lt;var&gt;fname&lt;/var&gt; with &amp;lsquo;</source>
          <target state="translated">这是一个C变量名，用于一个结构，该结构保存表示Lisp中函数的subr对象的数据。该结构将Lisp符号名称传达给初始化例程，该例程将创建符号并将subr对象存储为其定义。按照惯例，此名称始终为 &lt;var&gt;fname&lt;/var&gt; 并带有'</target>
        </trans-unit>
        <trans-unit id="81c4de4d1166a983cacedc98d34cede6ff7b0201" translate="yes" xml:space="preserve">
          <source>This is a comment-end sequence for &amp;ldquo;a&amp;rdquo; style, because the newline character does not have the &amp;lsquo;</source>
          <target state="translated">这是&amp;ldquo; a&amp;rdquo;样式的注释结尾序列，因为换行符没有'</target>
        </trans-unit>
        <trans-unit id="7dcf689ef6eb6551f81813bfd663406e5ae5909d" translate="yes" xml:space="preserve">
          <source>This is a comment-end sequence for &amp;ldquo;b&amp;rdquo; style because the first character, &amp;lsquo;</source>
          <target state="translated">这是&amp;ldquo; b&amp;rdquo;样式的注释结尾序列，因为第一个字符&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="7ae79e218d6d77ea7782e63e93ac66c7a88be45f" translate="yes" xml:space="preserve">
          <source>This is a comment-start sequence for &amp;ldquo;a&amp;rdquo; style because the second character, &amp;lsquo;</source>
          <target state="translated">这是&amp;ldquo; a&amp;rdquo;样式的注释开始序列，因为第二个字符&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="753d131ec0adef108b74b35fb4d5fc6c9faccf10" translate="yes" xml:space="preserve">
          <source>This is a comment-start sequence for &amp;ldquo;b&amp;rdquo; style because the second character, &amp;lsquo;</source>
          <target state="translated">这是&amp;ldquo; b&amp;rdquo;样式的注释开始序列，因为第二个字符&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="59b9e7b3df7ee25f1623cf93ef398d724a34b0b3" translate="yes" xml:space="preserve">
          <source>This is a convenience command meant to be used when developing font locking for a mode, and should not be called from Lisp code. It recomputes all the relevant variables and then calls &lt;code&gt;font-lock-fontify-region&lt;/code&gt; on the entire buffer.</source>
          <target state="translated">这是一个便捷命令，应在开发模式的字体锁定时使用，不应从Lisp代码中调用。它重新计算所有相关变量，然后在整个缓冲区上调用 &lt;code&gt;font-lock-fontify-region&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="052d58146383e43862a05d4d9186d400bf0eff60" translate="yes" xml:space="preserve">
          <source>This is a convenience macro that works the same way as &lt;code&gt;dotimes&lt;/code&gt; does, but also reports loop progress using the functions described above. It allows you to save some typing. The argument &lt;var&gt;reporter-or-message&lt;/var&gt; can be either a string or a progress reporter object.</source>
          <target state="translated">这是一个便利宏，其工作方式与 &lt;code&gt;dotimes&lt;/code&gt; 相同，但也使用上述功能报告循环进度。它允许您保存一些键入。自变量&amp;ldquo; &lt;var&gt;reporter-or-message&lt;/var&gt; 可以是字符串，也可以是进度报告器对象。</target>
        </trans-unit>
        <trans-unit id="6c0af3a6130d49db496a7a6745b82e5740854f18" translate="yes" xml:space="preserve">
          <source>This is a generalized variable (see &lt;a href=&quot;generalized-variables#Generalized-Variables&quot;&gt;Generalized Variables&lt;/a&gt;) that can be used to change a value with &lt;code&gt;setf&lt;/code&gt;. When using it to set a value, optional argument &lt;var&gt;remove&lt;/var&gt; non-&lt;code&gt;nil&lt;/code&gt; means to remove &lt;var&gt;key&lt;/var&gt;&amp;rsquo;s association from &lt;var&gt;alist&lt;/var&gt; if the new value is &lt;code&gt;eql&lt;/code&gt; to &lt;var&gt;default&lt;/var&gt;.</source>
          <target state="translated">这是一个通用变量（请参见&amp;ldquo;&lt;a href=&quot;generalized-variables#Generalized-Variables&quot;&gt;通用变量&amp;rdquo;&lt;/a&gt;），可用于使用 &lt;code&gt;setf&lt;/code&gt; 更改值。当使用它来设置的值，可选参数 &lt;var&gt;remove&lt;/var&gt; 非 &lt;code&gt;nil&lt;/code&gt; 手段，以除去 &lt;var&gt;key&lt;/var&gt; 从的关联 &lt;var&gt;alist&lt;/var&gt; 如果新的值是 &lt;code&gt;eql&lt;/code&gt; 到 &lt;var&gt;default&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="2b4191a6a518b773a7296edbd7c57a26cfe0fbad" translate="yes" xml:space="preserve">
          <source>This is a list of regular expressions. If a file has a name matching an element of this list, then it is not scanned for any form of file-local variable. For examples of why you might want to use this, see &lt;a href=&quot;auto-major-mode#Auto-Major-Mode&quot;&gt;Auto Major Mode&lt;/a&gt;.</source>
          <target state="translated">这是一个正则表达式列表。如果文件的名称与该列表的元素匹配，则不会扫描文件的任何形式的文件局部变量。有关为什么要使用此功能的示例，请参见&amp;ldquo;&lt;a href=&quot;auto-major-mode#Auto-Major-Mode&quot;&gt;自动专业模式&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="12b4398140878f6bd68245bb21c80f306e3982a4" translate="yes" xml:space="preserve">
          <source>This is a list of regular expressions. The completion functions only consider a completion acceptable if it matches all regular expressions in this list, with &lt;code&gt;case-fold-search&lt;/code&gt; (see &lt;a href=&quot;searching-and-case#Searching-and-Case&quot;&gt;Searching and Case&lt;/a&gt;) bound to the value of &lt;code&gt;completion-ignore-case&lt;/code&gt;.</source>
          <target state="translated">这是一个正则表达式列表。如果完成功能与该列表中的所有正则表达式匹配，并且将 &lt;code&gt;case-fold-search&lt;/code&gt; （请参阅&lt;a href=&quot;searching-and-case#Searching-and-Case&quot;&gt;Searching和Case&lt;/a&gt;）绑定到 &lt;code&gt;completion-ignore-case&lt;/code&gt; 的值，则完成功能才认为可以接受。</target>
        </trans-unit>
        <trans-unit id="52283f1e1d151bc990dba736688a582b7e3b30da" translate="yes" xml:space="preserve">
          <source>This is a list of suffixes indicating (compiled or source) Emacs Lisp files. It should not include the empty string. &lt;code&gt;load&lt;/code&gt; uses these suffixes in order when it appends Lisp suffixes to the specified file name. The standard value is &lt;code&gt;(&quot;.elc&quot; &quot;.el&quot;)&lt;/code&gt; which produces the behavior described in the previous section.</source>
          <target state="translated">这是指示（已编译或源代码）Emacs Lisp文件的后缀列表。它不应包含空字符串。当将Lisp后缀附加到指定的文件名时， &lt;code&gt;load&lt;/code&gt; 按顺序使用这些后缀。标准值是 &lt;code&gt;(&quot;.elc&quot; &quot;.el&quot;)&lt;/code&gt; ，它会产生上一节中描述的行为。</target>
        </trans-unit>
        <trans-unit id="10f331544ab235b9d5c7159edf27649dd51a4f4b" translate="yes" xml:space="preserve">
          <source>This is a list of suffixes that indicate representations of the same file. This list should normally start with the empty string. When &lt;code&gt;load&lt;/code&gt; searches for a file it appends the suffixes in this list, in order, to the file name, before searching for another file.</source>
          <target state="translated">这是指示相同文件表示形式的后缀列表。该列表通常应以空字符串开头。当 &lt;code&gt;load&lt;/code&gt; 为一个文件，其追加后缀在这份名单中，按顺序的文件名，搜索其他文件之前搜索。</target>
        </trans-unit>
        <trans-unit id="3352c91ea05e211996fe137d8629ef46a503b4a7" translate="yes" xml:space="preserve">
          <source>This is a list of symbols whose values are abbrev tables. &lt;code&gt;define-abbrev-table&lt;/code&gt; adds the new abbrev table name to this list.</source>
          <target state="translated">这是符号列表，其值是缩写表。 &lt;code&gt;define-abbrev-table&lt;/code&gt; 将新的缩写表名称添加到此列表中。</target>
        </trans-unit>
        <trans-unit id="baeb56bbdacec64127820fef3bed4ca6d82941bf" translate="yes" xml:space="preserve">
          <source>This is a no-brainer for people working with multiple frames&amp;mdash;the frame showing the buffer will automatically raise and get focus unless an &lt;code&gt;inhibit-switch-frame&lt;/code&gt; entry forbids it. For single frame users this task can be considerably more difficult. In particular, &lt;code&gt;display-buffer-pop-up-window&lt;/code&gt; and &lt;code&gt;display-buffer-use-some-window&lt;/code&gt; can become obtrusive in this regard. They split or use a seemingly arbitrary (often the largest or least recently used) window, distracting the user&amp;rsquo;s attention.</source>
          <target state="translated">这对于处理多个帧的人员来说是不费吹灰之力的-显示缓冲区的帧将自动升起并获得焦点，除非 &lt;code&gt;inhibit-switch-frame&lt;/code&gt; 输入禁止它。对于单帧用户，此任务可能要困难得多。特别地，在这方面， &lt;code&gt;display-buffer-pop-up-window&lt;/code&gt; 和 &lt;code&gt;display-buffer-use-some-window&lt;/code&gt; 可能变得令人讨厌。他们拆分或使用看似随意的窗口（通常是最大的窗口或最近最少使用的窗口），从而分散了用户的注意力。</target>
        </trans-unit>
        <trans-unit id="38d85830663d07546ecb90e9b63ef75a9c042a1d" translate="yes" xml:space="preserve">
          <source>This is a normal hook run by &lt;code&gt;kill-buffer&lt;/code&gt; after asking all the questions it is going to ask, just before actually killing the buffer. The buffer to be killed is current when the hook functions run. See &lt;a href=&quot;hooks#Hooks&quot;&gt;Hooks&lt;/a&gt;. This variable is a permanent local, so its local binding is not cleared by changing major modes.</source>
          <target state="translated">这是 &lt;code&gt;kill-buffer&lt;/code&gt; 在询问所有要问的问题之后（实际上是在杀死kill之前）运行的正常钩子。挂钩函数运行时，要终止的缓冲区是当前的。参见&lt;a href=&quot;hooks#Hooks&quot;&gt;挂钩&lt;/a&gt;。此变量是永久本地变量，因此无法通过更改主要模式来清除其本地绑定。</target>
        </trans-unit>
        <trans-unit id="805e61efe27710ed07f0182d61d7410acee4e80d" translate="yes" xml:space="preserve">
          <source>This is a normal hook run by &lt;code&gt;run-mode-hooks&lt;/code&gt;. It is run at the very end of every properly-written major mode command.</source>
          <target state="translated">这是 &lt;code&gt;run-mode-hooks&lt;/code&gt; 钩子运行的普通钩子。它在每个正确编写的主模式命令的最后运行。</target>
        </trans-unit>
        <trans-unit id="07bbaab22f46b3b504640becfed9adca0563313c" translate="yes" xml:space="preserve">
          <source>This is a normal hook run by &lt;code&gt;run-mode-hooks&lt;/code&gt;. It is run before the mode hooks.</source>
          <target state="translated">这是 &lt;code&gt;run-mode-hooks&lt;/code&gt; 钩子运行的普通钩子。它在模式挂钩之前运行。</target>
        </trans-unit>
        <trans-unit id="6b2354afd15e7976df677686fe20cb5d7be48399" translate="yes" xml:space="preserve">
          <source>This is a normal hook run whenever the buffer list changes. Functions (implicitly) running this hook are &lt;code&gt;get-buffer-create&lt;/code&gt; (see &lt;a href=&quot;creating-buffers#Creating-Buffers&quot;&gt;Creating Buffers&lt;/a&gt;), &lt;code&gt;rename-buffer&lt;/code&gt; (see &lt;a href=&quot;buffer-names#Buffer-Names&quot;&gt;Buffer Names&lt;/a&gt;), &lt;code&gt;kill-buffer&lt;/code&gt; (see &lt;a href=&quot;killing-buffers#Killing-Buffers&quot;&gt;Killing Buffers&lt;/a&gt;), &lt;code&gt;bury-buffer&lt;/code&gt; (see above) and &lt;code&gt;select-window&lt;/code&gt; (see &lt;a href=&quot;selecting-windows#Selecting-Windows&quot;&gt;Selecting Windows&lt;/a&gt;).</source>
          <target state="translated">每当缓冲区列表更改时，这都是正常的挂接运行。运行此钩子的函数（隐式）是 &lt;code&gt;get-buffer-create&lt;/code&gt; （请参阅&lt;a href=&quot;creating-buffers#Creating-Buffers&quot;&gt;创建缓冲区&lt;/a&gt;）， &lt;code&gt;rename-buffer&lt;/code&gt; （请参见&lt;a href=&quot;buffer-names#Buffer-Names&quot;&gt;缓冲区名称&lt;/a&gt;）， &lt;code&gt;kill-buffer&lt;/code&gt; （请参见&lt;a href=&quot;killing-buffers#Killing-Buffers&quot;&gt;Killing Buffers&lt;/a&gt;）， &lt;code&gt;bury-buffer&lt;/code&gt; （请参见上文）和 &lt;code&gt;select-window&lt;/code&gt; （请参见）。&lt;a href=&quot;selecting-windows#Selecting-Windows&quot;&gt;选择Windows&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="3d638ccc079fda6d21d216451af722b5fc46a550" translate="yes" xml:space="preserve">
          <source>This is a normal hook that is run at the end of garbage collection. Garbage collection is inhibited while the hook functions run, so be careful writing them.</source>
          <target state="translated">这是一个普通的钩子,是在垃圾收集结束时运行的。在钩子函数运行的时候,垃圾收集会被抑制,所以要小心编写。</target>
        </trans-unit>
        <trans-unit id="a07c03922c741fbfe3e2813b9c6045e88aa95ee3" translate="yes" xml:space="preserve">
          <source>This is a normal hook that is run whenever the minibuffer is entered. See &lt;a href=&quot;hooks#Hooks&quot;&gt;Hooks&lt;/a&gt;.</source>
          <target state="translated">这是一个普通的钩子，只要输入了迷你缓冲区，就会运行该钩子。参见&lt;a href=&quot;hooks#Hooks&quot;&gt;挂钩&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1c3cc4019228e95b32d148b948e444f0763f87c1" translate="yes" xml:space="preserve">
          <source>This is a normal hook that is run whenever the minibuffer is exited. See &lt;a href=&quot;hooks#Hooks&quot;&gt;Hooks&lt;/a&gt;.</source>
          <target state="translated">这是一个普通的钩子，只要退出了迷你缓冲区，就会运行该钩子。参见&lt;a href=&quot;hooks#Hooks&quot;&gt;挂钩&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="86360e71edc42f07ab6de3f34505df6c33bb2b99" translate="yes" xml:space="preserve">
          <source>This is a normal hook which is run by the Emacs command loop, after &lt;code&gt;post-command-hook&lt;/code&gt;, in order to process and display delayed warnings.</source>
          <target state="translated">这是一个普通的钩子，由Emacs命令循环在 &lt;code&gt;post-command-hook&lt;/code&gt; 之后运行，以处理和显示延迟的警告。</target>
        </trans-unit>
        <trans-unit id="1950abbae5cc55f415241b94ad808d5c9cc564d2" translate="yes" xml:space="preserve">
          <source>This is a permanent local, so that changing the major mode does not lose its value. Major modes should not set this variable&amp;mdash;they should set &lt;code&gt;make-backup-files&lt;/code&gt; instead.</source>
          <target state="translated">这是一个永久性本地，因此更改主要模式不会失去其价值。主要模式不应设置此变量，而应设置 &lt;code&gt;make-backup-files&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1d07872408457fb9d736d9fcefd8f6157086ae55" translate="yes" xml:space="preserve">
          <source>This is a raw data image format that describes the width, height, rowstride, whether there is an alpha channel, bits per sample, channels and image data, respectively.</source>
          <target state="translated">这是一种原始数据的图像格式,它分别描述了宽度、高度、行距、是否有alpha通道、每个样本的位数、通道和图像数据。</target>
        </trans-unit>
        <trans-unit id="cec88e6c8ce0a5823382d342b71b9f3690ed5e70" translate="yes" xml:space="preserve">
          <source>This is a shortcut for &lt;code&gt;function&lt;/code&gt;, see &lt;a href=&quot;anonymous-functions#Anonymous-Functions&quot;&gt;Anonymous Functions&lt;/a&gt;.</source>
          <target state="translated">这是 &lt;code&gt;function&lt;/code&gt; 的快捷方式，请参阅&lt;a href=&quot;anonymous-functions#Anonymous-Functions&quot;&gt;匿名函数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5c6e177bfc518fea9ec21fce671ef3a5268eab29" translate="yes" xml:space="preserve">
          <source>This is a simple menu item with help string &lt;var&gt;help-string&lt;/var&gt;.</source>
          <target state="translated">这是一个简单的菜单项，带有帮助字符串 &lt;var&gt;help-string&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="539993eac73cc0e0326d0ae7545c5c54b5ee6d9c" translate="yes" xml:space="preserve">
          <source>This is a simplified interface to the &lt;code&gt;read-from-minibuffer&lt;/code&gt; function, and passes the value of the &lt;code&gt;minibuffer-local-ns-map&lt;/code&gt; keymap as the &lt;var&gt;keymap&lt;/var&gt; argument for that function. Since the keymap &lt;code&gt;minibuffer-local-ns-map&lt;/code&gt; does not rebind</source>
          <target state="translated">这是 &lt;code&gt;read-from-minibuffer&lt;/code&gt; 函数的简化接口，并将 &lt;code&gt;minibuffer-local-ns-map&lt;/code&gt; 键映射的值作为该函数的 &lt;var&gt;keymap&lt;/var&gt; 参数传递。由于键映射 &lt;code&gt;minibuffer-local-ns-map&lt;/code&gt; 不重新绑定</target>
        </trans-unit>
        <trans-unit id="c1acce88ca7be96b6566b025ae7b3ea29fbe6b0b" translate="yes" xml:space="preserve">
          <source>This is a simplified interface to the &lt;code&gt;read-from-minibuffer&lt;/code&gt; function:</source>
          <target state="translated">这是 &lt;code&gt;read-from-minibuffer&lt;/code&gt; 功能的简化接口：</target>
        </trans-unit>
        <trans-unit id="af3f54f6a3480a921837c109f5e17463a352bc58" translate="yes" xml:space="preserve">
          <source>This is a sparse keymap that simply unbinds</source>
          <target state="translated">这是一个稀疏的键图,它只是简单地解开了</target>
        </trans-unit>
        <trans-unit id="5f72af18d4c43a811889768a82ca4a11d87bac2b" translate="yes" xml:space="preserve">
          <source>This is a subcategory of &lt;code&gt;file-error&lt;/code&gt;, which results from problems handling a compressed file. See &lt;a href=&quot;how-programs-do-loading#How-Programs-Do-Loading&quot;&gt;How Programs Do Loading&lt;/a&gt;.</source>
          <target state="translated">这是 &lt;code&gt;file-error&lt;/code&gt; 的子类别，它是由于处理压缩文件时出现问题而导致的。请参阅&lt;a href=&quot;how-programs-do-loading#How-Programs-Do-Loading&quot;&gt;程序如何加载&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e9c215e0297777da007fdfe8487cbc205cb69db4" translate="yes" xml:space="preserve">
          <source>This is a subcategory of &lt;code&gt;file-error&lt;/code&gt;, which results from problems in accessing a remote file using ftp. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Remote-Files.html#Remote-Files&quot;&gt;Remote Files&lt;/a&gt; in</source>
          <target state="translated">这是 &lt;code&gt;file-error&lt;/code&gt; 的子类别，它是由使用ftp访问远程文件引起的问题导致的。见&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Remote-Files.html#Remote-Files&quot;&gt;远程文件&lt;/a&gt;中</target>
        </trans-unit>
        <trans-unit id="2d95a5005896f0fd6da23d493759199537edf7ff" translate="yes" xml:space="preserve">
          <source>This is a subcategory of &lt;code&gt;file-error&lt;/code&gt;. It happens, when a file could not be watched for changes. See &lt;a href=&quot;file-notifications#File-Notifications&quot;&gt;File Notifications&lt;/a&gt;.</source>
          <target state="translated">这是 &lt;code&gt;file-error&lt;/code&gt; 的子类别。当无法监视文件更改时，就会发生这种情况。请参阅&lt;a href=&quot;file-notifications#File-Notifications&quot;&gt;文件通知&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d5c1feb94f04dd72015ac7e9f4bacc06c354aa43" translate="yes" xml:space="preserve">
          <source>This is a subcategory of &lt;code&gt;file-error&lt;/code&gt;. It occurs when &lt;code&gt;copy-file&lt;/code&gt; tries and fails to set the last-modification time of the output file. See &lt;a href=&quot;changing-files#Changing-Files&quot;&gt;Changing Files&lt;/a&gt;.</source>
          <target state="translated">这是 &lt;code&gt;file-error&lt;/code&gt; 的子类别。当 &lt;code&gt;copy-file&lt;/code&gt; 尝试但未能设置输出文件的最后修改时间时，会发生这种情况。请参阅&lt;a href=&quot;changing-files#Changing-Files&quot;&gt;更改文件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="39c246be12e23ec2c493d51bd423c192eded0867" translate="yes" xml:space="preserve">
          <source>This is a subcategory of &lt;code&gt;file-error&lt;/code&gt;. It occurs when an operation attempts to act on a file that is missing. See &lt;a href=&quot;changing-files#Changing-Files&quot;&gt;Changing Files&lt;/a&gt;.</source>
          <target state="translated">这是 &lt;code&gt;file-error&lt;/code&gt; 的子类别。当操作尝试对丢失的文件执行操作时，会发生这种情况。请参阅&lt;a href=&quot;changing-files#Changing-Files&quot;&gt;更改文件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a84e7250547b416754bf38c85e032217e9a75452" translate="yes" xml:space="preserve">
          <source>This is a subcategory of &lt;code&gt;file-error&lt;/code&gt;. See &lt;a href=&quot;file-locks#File-Locks&quot;&gt;File Locks&lt;/a&gt;.</source>
          <target state="translated">这是 &lt;code&gt;file-error&lt;/code&gt; 的子类别。请参阅&lt;a href=&quot;file-locks#File-Locks&quot;&gt;文件锁&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="26cf074c2ccf51b91710093c90c3f7bf290979d3" translate="yes" xml:space="preserve">
          <source>This is a subcategory of &lt;code&gt;file-error&lt;/code&gt;. See &lt;a href=&quot;modification-time#Modification-Time&quot;&gt;Modification Time&lt;/a&gt;.</source>
          <target state="translated">这是 &lt;code&gt;file-error&lt;/code&gt; 的子类别。请参阅&lt;a href=&quot;modification-time#Modification-Time&quot;&gt;修改时间&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cb45b797ef4ee3e1d99242c5fc795eca8c133b81" translate="yes" xml:space="preserve">
          <source>This is a subcategory of &lt;code&gt;file-error&lt;/code&gt;. See &lt;a href=&quot;writing-to-files#Writing-to-Files&quot;&gt;Writing to Files&lt;/a&gt;.</source>
          <target state="translated">这是 &lt;code&gt;file-error&lt;/code&gt; 的子类别。请参阅&lt;a href=&quot;writing-to-files#Writing-to-Files&quot;&gt;写入文件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9812da0e30c44ae24bdbfe2f7b2ecf6d2d527668" translate="yes" xml:space="preserve">
          <source>This is a symbol that indicates which mouse button was used. It is one of the symbols &lt;code&gt;mouse-1&lt;/code&gt;, &lt;code&gt;mouse-2&lt;/code&gt;, &amp;hellip;, where the buttons are numbered left to right.</source>
          <target state="translated">这是一个符号，指示使用了哪个鼠标按钮。它是符号 &lt;code&gt;mouse-1&lt;/code&gt; ， &lt;code&gt;mouse-2&lt;/code&gt; ，...之一，其中按钮从左到右编号。</target>
        </trans-unit>
        <trans-unit id="e07aa19d85daa49cb21be82f3483df4602aa009f" translate="yes" xml:space="preserve">
          <source>This is a synonym for &amp;lsquo;</source>
          <target state="translated">这是&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="620906d35586347b4b396e9e011be9137f149b96" translate="yes" xml:space="preserve">
          <source>This is a synonym for &lt;code&gt;ding&lt;/code&gt;.</source>
          <target state="translated">这是 &lt;code&gt;ding&lt;/code&gt; 的同义词。</target>
        </trans-unit>
        <trans-unit id="1199748624f884b6275d3b54f37b4f95836abf62" translate="yes" xml:space="preserve">
          <source>This is a variant of &lt;code&gt;if&lt;/code&gt; where there are no &lt;var&gt;else-forms&lt;/var&gt;, and possibly several &lt;var&gt;then-forms&lt;/var&gt;. In particular,</source>
          <target state="translated">这是 &lt;code&gt;if&lt;/code&gt; 如果没有 &lt;var&gt;else-forms&lt;/var&gt; ，可能没有几个 &lt;var&gt;then-forms&lt;/var&gt; 一种变体。特别是，</target>
        </trans-unit>
        <trans-unit id="3f02e69a78cba25101767a7e65d19970ee30a8c8" translate="yes" xml:space="preserve">
          <source>This is a variant of &lt;code&gt;if&lt;/code&gt; where there is no &lt;var&gt;then-form&lt;/var&gt;:</source>
          <target state="translated">这是 &lt;code&gt;if&lt;/code&gt; &lt;var&gt;then-form&lt;/var&gt; 不存在的一种变体：</target>
        </trans-unit>
        <trans-unit id="4145fac0510f8eb9ca2938306fb5319e1b852696" translate="yes" xml:space="preserve">
          <source>This is a version of &lt;code&gt;butlast&lt;/code&gt; that works by destructively modifying the &lt;code&gt;cdr&lt;/code&gt; of the appropriate element, rather than making a copy of the list.</source>
          <target state="translated">这是 &lt;code&gt;butlast&lt;/code&gt; 的一个版本，其作用是破坏性地修改适当元素的 &lt;code&gt;cdr&lt;/code&gt; ，而不是复制列表。</target>
        </trans-unit>
        <trans-unit id="403a7d1032c2d6f47e966bab0c435f14226e15c0" translate="yes" xml:space="preserve">
          <source>This is a wrapper for &lt;code&gt;completion-table-dynamic&lt;/code&gt; that saves the last argument-result pair. This means that multiple lookups with the same argument only need to call &lt;var&gt;function&lt;/var&gt; once. This can be useful when a slow operation is involved, such as calling an external process.</source>
          <target state="translated">这是 &lt;code&gt;completion-table-dynamic&lt;/code&gt; 的包装，它保存了最后一个参数-结果对。这意味着具有相同参数的多个查找仅需要调用一次 &lt;var&gt;function&lt;/var&gt; 。当涉及到缓慢的操作（例如调用外部进程）时，此功能很有用。</target>
        </trans-unit>
        <trans-unit id="3ad9a8e226625c52c4ba5fceef61539d6720d143" translate="yes" xml:space="preserve">
          <source>This is allowed only immediately after a &lt;code&gt;yank&lt;/code&gt; or another &lt;code&gt;yank-pop&lt;/code&gt;. At such a time, the region contains text that was just inserted by yanking. &lt;code&gt;yank-pop&lt;/code&gt; deletes that text and inserts in its place a different piece of killed text. It does not add the deleted text to the kill ring, since it is already in the kill ring somewhere. It does however rotate the kill ring to place the newly yanked string at the front.</source>
          <target state="translated">仅在发出 &lt;code&gt;yank&lt;/code&gt; 或其他 &lt;code&gt;yank-pop&lt;/code&gt; 之后立即允许这样做。此时，该区域包含刚通过拉动插入的文本。 &lt;code&gt;yank-pop&lt;/code&gt; 删除该文本，并在其位置插入另一条被杀死的文本。它不会将已删除的文本添加到kill环中，因为它已经在kill环中的某个位置。但是，它确实旋转了杀伤环，将新拉出的弦线放置在前面。</target>
        </trans-unit>
        <trans-unit id="5891b52707f6e897eea5d5c669d27102b1004a4f" translate="yes" xml:space="preserve">
          <source>This is an Emacs face controlling how buttons of this type are displayed; by default this is the &lt;code&gt;button&lt;/code&gt; face.</source>
          <target state="translated">这是一张Emacs面孔，用于控制这种按钮的显示方式。默认情况下，这是 &lt;code&gt;button&lt;/code&gt; 面。</target>
        </trans-unit>
        <trans-unit id="32b7ac28c78c48c0c1ceb24509c21a78cbe55429" translate="yes" xml:space="preserve">
          <source>This is an additional face which controls appearance during mouse-overs (merged with the usual button face); by default this is the usual Emacs &lt;code&gt;highlight&lt;/code&gt; face.</source>
          <target state="translated">这是一个附加的面孔，用于控制鼠标悬停时的外观（与通常的按钮面孔合并）；默认情况下，这是通常的Emacs高 &lt;code&gt;highlight&lt;/code&gt; 脸部。</target>
        </trans-unit>
        <trans-unit id="5afa9b586ea9ca5fc144fe6d39eae28d297b8df8" translate="yes" xml:space="preserve">
          <source>This is an alist of dynamic libraries and external library files implementing them.</source>
          <target state="translated">这是一个动态库和实现它们的外部库文件的列表。</target>
        </trans-unit>
        <trans-unit id="3eff5816e0cdb3e6f0a4663c990d1b91e8101b13" translate="yes" xml:space="preserve">
          <source>This is an alist specifying default values of frame parameters for all Emacs frames&amp;mdash;the first frame, and subsequent frames. When using the X Window System, you can get the same results by means of X resources in many cases.</source>
          <target state="translated">这是一个清单，用于指定所有Emacs框架（第一个框架和后续框架）的框架参数的默认值。使用X窗口系统时，在许多情况下，您可以通过X资源获得相同的结果。</target>
        </trans-unit>
        <trans-unit id="0a08ddd5a44ca86041fbb4541ee9d2d0a4d56813" translate="yes" xml:space="preserve">
          <source>This is an extensible undo item, which is undone by calling &lt;var&gt;funname&lt;/var&gt; with arguments &lt;var&gt;args&lt;/var&gt;.</source>
          <target state="translated">这是可扩展的撤消项，可以通过使用参数 &lt;var&gt;args&lt;/var&gt; 调用 &lt;var&gt;funname&lt;/var&gt; 来撤消。</target>
        </trans-unit>
        <trans-unit id="3d5230b0361e691994e1df15fe93fd93c1b9b7df" translate="yes" xml:space="preserve">
          <source>This is an extensible undo item, which records a change limited to the range &lt;var&gt;beg&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt;, which increased the size of the buffer by &lt;var&gt;delta&lt;/var&gt; characters. It is undone by calling &lt;var&gt;funname&lt;/var&gt; with arguments &lt;var&gt;args&lt;/var&gt;.</source>
          <target state="translated">这是一个可扩展的撤消项，其中记录的变化范围限制为 &lt;var&gt;beg&lt;/var&gt; 到 &lt;var&gt;end&lt;/var&gt; ，它通过增加缓冲器的尺寸 &lt;var&gt;delta&lt;/var&gt; 的字符。通过使用参数 &lt;var&gt;args&lt;/var&gt; 调用 &lt;var&gt;funname&lt;/var&gt; 可以撤消该操作。</target>
        </trans-unit>
        <trans-unit id="05829727f91e304bdb97c9ea1edc3248d4a08474" translate="yes" xml:space="preserve">
          <source>This is an interactive specification, a string such as might be used as the argument of &lt;code&gt;interactive&lt;/code&gt; in a Lisp function (see &lt;a href=&quot;using-interactive#Using-Interactive&quot;&gt;Using Interactive&lt;/a&gt;). In the case of &lt;code&gt;or&lt;/code&gt;, it is &lt;code&gt;0&lt;/code&gt; (a null pointer), indicating that &lt;code&gt;or&lt;/code&gt; cannot be called interactively. A value of &lt;code&gt;&quot;&quot;&lt;/code&gt; indicates a function that should receive no arguments when called interactively. If the value begins with a &amp;lsquo;</source>
          <target state="translated">这是一个交互式规范，例如Lisp函数中的字符串可能用作 &lt;code&gt;interactive&lt;/code&gt; 的参数（请参阅&lt;a href=&quot;using-interactive#Using-Interactive&quot;&gt;使用交互式&lt;/a&gt;）。在 &lt;code&gt;or&lt;/code&gt; 的情况下，它为 &lt;code&gt;0&lt;/code&gt; （空指针），指示 &lt;code&gt;or&lt;/code&gt; 不能被交互式调用。值 &lt;code&gt;&quot;&quot;&lt;/code&gt; 表示以交互方式调用时不应接收任何参数的函数。如果值以'开头</target>
        </trans-unit>
        <trans-unit id="84fc6d55ee48e8d014d448e4863ba7e73c412c01" translate="yes" xml:space="preserve">
          <source>This is an unsigned integer type, used as the element type for the magnitude arrays for the big integer conversion functions. The type is guaranteed to have unique object representations, i.e., no padding bits.</source>
          <target state="translated">这是一个无符号的整数类型,作为大整数转换函数的幅度数组的元素类型。该类型保证有唯一的对象表示,即没有填充位。</target>
        </trans-unit>
        <trans-unit id="132dc00444b133cbc6f506c8039288020aaabf46" translate="yes" xml:space="preserve">
          <source>This is another convenience macro that works the same way as &lt;code&gt;dolist&lt;/code&gt; does, but also reports loop progress using the functions described above. As in &lt;code&gt;dotimes-with-progress-reporter&lt;/code&gt;, &lt;code&gt;reporter-or-message&lt;/code&gt; can be a progress reporter or a string. You can rewrite the previous example with this macro as follows:</source>
          <target state="translated">这是另一个便利宏，其功能与 &lt;code&gt;dolist&lt;/code&gt; 相同，但也使用上述功能报告循环进度。就像在 &lt;code&gt;dotimes-with-progress-reporter&lt;/code&gt; ， &lt;code&gt;reporter-or-message&lt;/code&gt; 可以是进度报告者或字符串。您可以使用以下宏重写前面的示例，如下所示：</target>
        </trans-unit>
        <trans-unit id="a8c60d4e1ad0cedd5e25dc2bfc92f663416bd656" translate="yes" xml:space="preserve">
          <source>This is another name for &lt;code&gt;set-marker&lt;/code&gt;.</source>
          <target state="translated">这是 &lt;code&gt;set-marker&lt;/code&gt; 的另一个名称。</target>
        </trans-unit>
        <trans-unit id="10a3f71d2fd56ea0b16ec0616246367064ad9f0f" translate="yes" xml:space="preserve">
          <source>This is computed as &lt;code&gt;z&lt;/code&gt; minus the buffer position of the last glyph in the current matrix of the window. The value is only valid if &lt;code&gt;window_end_valid&lt;/code&gt; is non-zero.</source>
          <target state="translated">计算方式为 &lt;code&gt;z&lt;/code&gt; 减去窗口当前矩阵中最后一个字形的缓冲区位置。仅当 &lt;code&gt;window_end_valid&lt;/code&gt; 不为零时，该值才有效。</target>
        </trans-unit>
        <trans-unit id="60ac1fd13d843b0faaaa408330eda9f9fe2bb405" translate="yes" xml:space="preserve">
          <source>This is convenient, if the meaning of a double click somehow builds on the meaning of a single click&amp;mdash;which is recommended user interface design practice for double clicks.</source>
          <target state="translated">如果双击的含义以某种方式建立在单击的含义上，则这很方便-这是建议的双击用户界面设计实践。</target>
        </trans-unit>
        <trans-unit id="0e75165bd6c0c435e57a13f622ac0560e9f8aea5" translate="yes" xml:space="preserve">
          <source>This is equivalent to</source>
          <target state="translated">这相当于</target>
        </trans-unit>
        <trans-unit id="d3b4193b38de49e89a5720e5f1b85c4bfb6ca94a" translate="yes" xml:space="preserve">
          <source>This is equivalent to specifying &lt;var&gt;init-value&lt;/var&gt; positionally.</source>
          <target state="translated">这等效于在位置上指定 &lt;var&gt;init-value&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="d6ccd13378dfdbfee1da75331b690f9ccbb0ac31" translate="yes" xml:space="preserve">
          <source>This is equivalent to specifying &lt;var&gt;keymap&lt;/var&gt; positionally.</source>
          <target state="translated">这等效于指定位置的 &lt;var&gt;keymap&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="a4797cb24e0fd3906d4e5c7d3793c44e3acaa28d" translate="yes" xml:space="preserve">
          <source>This is equivalent to specifying &lt;var&gt;lighter&lt;/var&gt; positionally.</source>
          <target state="translated">这等效于指定 &lt;var&gt;lighter&lt;/var&gt; 位置。</target>
        </trans-unit>
        <trans-unit id="37f2c35875bb838f1536318b6c281a2cbff98557" translate="yes" xml:space="preserve">
          <source>This is exactly the same as &lt;code&gt;run-at-time&lt;/code&gt; (so see that definition for an explanation of the parameters; &lt;var&gt;secs&lt;/var&gt; is passed as &lt;var&gt;time&lt;/var&gt; to that function), but is meant to be used when the delay is specified in seconds.</source>
          <target state="translated">这与 &lt;code&gt;run-at-time&lt;/code&gt; 完全相同（因此，请参阅该定义以获取有关参数的说明； &lt;var&gt;secs&lt;/var&gt; 将作为 &lt;var&gt;time&lt;/var&gt; 传递给该函数），但应在以秒为单位指定延迟时使用。</target>
        </trans-unit>
        <trans-unit id="7372acff1de024d834cbce8756247354158e8aeb" translate="yes" xml:space="preserve">
          <source>This is for the sake of filesystems that have the concept of a superroot above the root directory</source>
          <target state="translated">这是为了那些在根目录上面有超级根概念的文件系统考虑的</target>
        </trans-unit>
        <trans-unit id="fd9bc2079ac2a71c6fcb711d2240e058b0676b89" translate="yes" xml:space="preserve">
          <source>This is just like &lt;code&gt;forward-char&lt;/code&gt; except that it moves in the opposite direction.</source>
          <target state="translated">就像 &lt;code&gt;forward-char&lt;/code&gt; 只不过它朝相反的方向移动。</target>
        </trans-unit>
        <trans-unit id="53415e6c148d53c51f1f9c7d0c90a8c057c564fa" translate="yes" xml:space="preserve">
          <source>This is just like &lt;code&gt;text-property-search-backward&lt;/code&gt;, but searches backward instead. Point is placed at the beginning of the matched region instead of the end, though.</source>
          <target state="translated">就像 &lt;code&gt;text-property-search-backward&lt;/code&gt; 一样，但是向后搜索。但是，点位于匹配区域的开头而不是结尾。</target>
        </trans-unit>
        <trans-unit id="fa0e9b932e7b1979c715502e6765745bbb6b8fef" translate="yes" xml:space="preserve">
          <source>This is like &amp;lsquo;</source>
          <target state="translated">这就像</target>
        </trans-unit>
        <trans-unit id="99d08ba26d4c45172d07c3abbadf64c076ad5caf" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;buffer-substring&lt;/code&gt;, except that it does not copy text properties, just the characters themselves. See &lt;a href=&quot;text-properties#Text-Properties&quot;&gt;Text Properties&lt;/a&gt;.</source>
          <target state="translated">就像 &lt;code&gt;buffer-substring&lt;/code&gt; 一样，除了它不复制文本属性，而只是复制字符本身。请参阅&lt;a href=&quot;text-properties#Text-Properties&quot;&gt;文本属性&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e89667a9f313dde559c6df8e54fd3171dcc357d9" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;get-char-property&lt;/code&gt;, but gives extra information about the overlay that the property value comes from.</source>
          <target state="translated">这类似于 &lt;code&gt;get-char-property&lt;/code&gt; ，但提供了有关属性值来自的叠加层的更多信息。</target>
        </trans-unit>
        <trans-unit id="436841bd131be24a48e32bd2750651d955f52ad5" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;get-file-buffer&lt;/code&gt;, except that it can return any buffer visiting the file &lt;em&gt;possibly under a different name&lt;/em&gt;. That is, the buffer&amp;rsquo;s &lt;code&gt;buffer-file-name&lt;/code&gt; does not need to match the expansion of &lt;var&gt;filename&lt;/var&gt; exactly, it only needs to refer to the same file. If &lt;var&gt;predicate&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it should be a function of one argument, a buffer visiting &lt;var&gt;filename&lt;/var&gt;. The buffer is only considered a suitable return value if &lt;var&gt;predicate&lt;/var&gt; returns non-&lt;code&gt;nil&lt;/code&gt;. If it can not find a suitable buffer to return, &lt;code&gt;find-buffer-visiting&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">这类似于 &lt;code&gt;get-file-buffer&lt;/code&gt; ，不同之处在于它可以返回访问文件的任何缓冲区（&lt;em&gt;可能使用其他名称）&lt;/em&gt;。也就是说，缓冲区的 &lt;code&gt;buffer-file-name&lt;/code&gt; 不需要完全匹配 &lt;var&gt;filename&lt;/var&gt; 的扩展名，它只需要引用同一文件即可。如果 &lt;var&gt;predicate&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则它应该是一个参数的函数，一个访问 &lt;var&gt;filename&lt;/var&gt; 的缓冲区。如果 &lt;var&gt;predicate&lt;/var&gt; 返回non- &lt;code&gt;nil&lt;/code&gt; ,则仅将缓冲区视为合适的返回值。如果找不到合适的缓冲区返回，则 &lt;code&gt;find-buffer-visiting&lt;/code&gt; 返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5dd79526444e25b1cfeecb5749e143d7022aa627" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;indent-rigidly&lt;/code&gt;, except that it doesn&amp;rsquo;t alter lines that start within strings or comments.</source>
          <target state="translated">就像 &lt;code&gt;indent-rigidly&lt;/code&gt; 一样，除了它不改变以字符串或注释开头的行。</target>
        </trans-unit>
        <trans-unit id="85b11594dda9bd84d7f6be1416908f106502654b" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;insert-buffer-substring&lt;/code&gt; except that it does not copy any text properties.</source>
          <target state="translated">这类似于 &lt;code&gt;insert-buffer-substring&lt;/code&gt; ,除了它不复制任何文本属性。</target>
        </trans-unit>
        <trans-unit id="d43e97c14640b28935ae7739c8ef0412b5e02c36" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;looking-at&lt;/code&gt; except that it performs the full backtracking specified by the POSIX standard for regular expression matching.</source>
          <target state="translated">就像 &lt;code&gt;looking-at&lt;/code&gt; 一样，除了它执行POSIX标准为正则表达式匹配指定的完整回溯。</target>
        </trans-unit>
        <trans-unit id="e186261242e430a5d913b4e01eb3d971cdf7ebb9" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;minibuffer-contents&lt;/code&gt;, except that it does not copy text properties, just the characters themselves. See &lt;a href=&quot;text-properties#Text-Properties&quot;&gt;Text Properties&lt;/a&gt;.</source>
          <target state="translated">就像 &lt;code&gt;minibuffer-contents&lt;/code&gt; 一样，除了它不复制文本属性，而只是复制字符本身。请参阅&lt;a href=&quot;text-properties#Text-Properties&quot;&gt;文本属性&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f224c0b5f7594edd8638ef5f71fbf09196363387" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;next-char-property-change&lt;/code&gt;, but scans back from &lt;var&gt;pos&lt;/var&gt; instead of forward, and returns the minimum buffer position if no change is found.</source>
          <target state="translated">这类似于 &lt;code&gt;next-char-property-change&lt;/code&gt; ，但是从 &lt;var&gt;pos&lt;/var&gt; 扫描而不是向前扫描，如果未找到更改，则返回最小缓冲区位置。</target>
        </trans-unit>
        <trans-unit id="f1c3592da81c9007bdce681edaf24baa510fe25c" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;next-property-change&lt;/code&gt; except that it considers overlay properties as well as text properties, and if no change is found before the end of the buffer, it returns the maximum buffer position rather than &lt;code&gt;nil&lt;/code&gt; (in this sense, it resembles the corresponding overlay function &lt;code&gt;next-overlay-change&lt;/code&gt;, rather than &lt;code&gt;next-property-change&lt;/code&gt;). There is no &lt;var&gt;object&lt;/var&gt; operand because this function operates only on the current buffer. It returns the next address at which either kind of property changes.</source>
          <target state="translated">这类似于 &lt;code&gt;next-property-change&lt;/code&gt; 不同之处在于它同时考虑了覆盖属性和文本属性，并且如果在缓冲区结束之前未找到任何更改，则它将返回最大缓冲区位置而不是 &lt;code&gt;nil&lt;/code&gt; （在这种情况下，它类似于对应的叠加功能 &lt;code&gt;next-overlay-change&lt;/code&gt; ，而不是 &lt;code&gt;next-property-change&lt;/code&gt; ）。没有 &lt;var&gt;object&lt;/var&gt; 操作数，因为此函数仅在当前缓冲区上操作。它返回下一种地址，在该地址上任何一种属性都会更改。</target>
        </trans-unit>
        <trans-unit id="b4191809c394b93b9faa1cf8d4f5fef2999f60c6" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;next-property-change&lt;/code&gt;, but scans back from &lt;var&gt;pos&lt;/var&gt; instead of forward. If the value is non-&lt;code&gt;nil&lt;/code&gt;, it is a position less than or equal to &lt;var&gt;pos&lt;/var&gt;; it equals &lt;var&gt;pos&lt;/var&gt; only if &lt;var&gt;limit&lt;/var&gt; equals &lt;var&gt;pos&lt;/var&gt;.</source>
          <target state="translated">这就像 &lt;code&gt;next-property-change&lt;/code&gt; ，但是从 &lt;var&gt;pos&lt;/var&gt; 扫描而不是向前扫描。如果该值不为 &lt;code&gt;nil&lt;/code&gt; ，则其位置小于或等于 &lt;var&gt;pos&lt;/var&gt; ；它等于 &lt;var&gt;pos&lt;/var&gt; 只有 &lt;var&gt;limit&lt;/var&gt; 等于 &lt;var&gt;pos&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="f5f370c14e6de2e6853c08ddbeedfe2bc0465f9e" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;next-single-char-property-change&lt;/code&gt;, but scans back from &lt;var&gt;pos&lt;/var&gt; instead of forward, and returns the minimum valid position in &lt;var&gt;object&lt;/var&gt; if no change is found.</source>
          <target state="translated">这类似于 &lt;code&gt;next-single-char-property-change&lt;/code&gt; ，但是从 &lt;var&gt;pos&lt;/var&gt; 扫描而不是向前扫描，如果未找到更改，则返回 &lt;var&gt;object&lt;/var&gt; 的最小有效位置。</target>
        </trans-unit>
        <trans-unit id="b4c5ddfdd4e88bfbfa1aac3a9acd9c4777aaec54" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;next-single-property-change&lt;/code&gt; except that it considers overlay properties as well as text properties, and if no change is found before the end of the &lt;var&gt;object&lt;/var&gt;, it returns the maximum valid position in &lt;var&gt;object&lt;/var&gt; rather than &lt;code&gt;nil&lt;/code&gt;. Unlike &lt;code&gt;next-char-property-change&lt;/code&gt;, this function &lt;em&gt;does&lt;/em&gt; have an &lt;var&gt;object&lt;/var&gt; operand; if &lt;var&gt;object&lt;/var&gt; is not a buffer, only text-properties are considered.</source>
          <target state="translated">这就好比 &lt;code&gt;next-single-property-change&lt;/code&gt; 不同的是它认为的覆盖性能以及文本属性，如果没有变化是在年底前找到 &lt;var&gt;object&lt;/var&gt; ，则返回的最大有效位置 &lt;var&gt;object&lt;/var&gt; ，而不是 &lt;code&gt;nil&lt;/code&gt; 。与 &lt;code&gt;next-char-property-change&lt;/code&gt; 不同，此函数&lt;em&gt;的确&lt;/em&gt;具有 &lt;var&gt;object&lt;/var&gt; 操作数。如果 &lt;var&gt;object&lt;/var&gt; 不是缓冲区，则仅考虑text-properties。</target>
        </trans-unit>
        <trans-unit id="4848490c4632438743fbf401d88ff8f17f9445fd" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;next-single-property-change&lt;/code&gt;, but scans back from &lt;var&gt;pos&lt;/var&gt; instead of forward. If the value is non-&lt;code&gt;nil&lt;/code&gt;, it is a position less than or equal to &lt;var&gt;pos&lt;/var&gt;; it equals &lt;var&gt;pos&lt;/var&gt; only if &lt;var&gt;limit&lt;/var&gt; equals &lt;var&gt;pos&lt;/var&gt;.</source>
          <target state="translated">这类似于 &lt;code&gt;next-single-property-change&lt;/code&gt; ，但从 &lt;var&gt;pos&lt;/var&gt; 扫描而不是向前扫描。如果该值不为 &lt;code&gt;nil&lt;/code&gt; ，则其位置小于或等于 &lt;var&gt;pos&lt;/var&gt; ；它等于 &lt;var&gt;pos&lt;/var&gt; 只有 &lt;var&gt;limit&lt;/var&gt; 等于 &lt;var&gt;pos&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="94882ec2784795d03f894d91e81c50023b35a3dc" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;re-search-backward&lt;/code&gt; except that it performs the full backtracking specified by the POSIX standard for regular expression matching.</source>
          <target state="translated">这类似于 &lt;code&gt;re-search-backward&lt;/code&gt; ,除了它执行POSIX标准指定的用于正则表达式匹配的完整回溯。</target>
        </trans-unit>
        <trans-unit id="d0da2601bec1f3e5cfb9064ffc4ff54dce0cd7cd" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;re-search-forward&lt;/code&gt; except that it performs the full backtracking specified by the POSIX standard for regular expression matching.</source>
          <target state="translated">这类似于 &lt;code&gt;re-search-forward&lt;/code&gt; 只是它执行POSIX标准为正则表达式匹配指定的完整回溯。</target>
        </trans-unit>
        <trans-unit id="c02381a39ed8dd68932c911385907b1c4d341426" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;read-key-sequence&lt;/code&gt; except that it always returns the key sequence as a vector, never as a string. See &lt;a href=&quot;strings-of-events#Strings-of-Events&quot;&gt;Strings of Events&lt;/a&gt;.</source>
          <target state="translated">这与 &lt;code&gt;read-key-sequence&lt;/code&gt; 相似，不同之处在于它始终将键序列作为向量而不是字符串返回。请参阅&lt;a href=&quot;strings-of-events#Strings-of-Events&quot;&gt;事件字符串&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="826e11f6eec5fc21c6a5ea503714d5ce5d3c21fe" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;string-match&lt;/code&gt; except that it performs the full backtracking specified by the POSIX standard for regular expression matching.</source>
          <target state="translated">这类似于 &lt;code&gt;string-match&lt;/code&gt; 除了它执行POSIX标准为正则表达式匹配指定的完整回溯。</target>
        </trans-unit>
        <trans-unit id="df614ce1d552ba92bda6df3d63dc888585eb690c" translate="yes" xml:space="preserve">
          <source>This is like &lt;code&gt;thunk-let&lt;/code&gt; but any expression in &lt;var&gt;bindings&lt;/var&gt; is allowed to refer to preceding bindings in this &lt;code&gt;thunk-let*&lt;/code&gt; form. Using this macro requires &lt;code&gt;lexical-binding&lt;/code&gt;.</source>
          <target state="translated">这就像 &lt;code&gt;thunk-let&lt;/code&gt; ,但是 &lt;var&gt;bindings&lt;/var&gt; 任何表达式都可以引用此 &lt;code&gt;thunk-let*&lt;/code&gt; 形式的先前绑定。使用此宏需要 &lt;code&gt;lexical-binding&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="34b310c08760b47150542f4e5ed94706ea6c4d86" translate="yes" xml:space="preserve">
          <source>This is like the &lt;code&gt;:case-fixed&lt;/code&gt; abbrev property except that it applies to all abbrevs in the table.</source>
          <target state="translated">就像 &lt;code&gt;:case-fixed&lt;/code&gt; abbrev属性一样，除了它适用于表中的所有缩写。</target>
        </trans-unit>
        <trans-unit id="6a4f9ed34aa3b893ef5215e1e1e15733a8207f90" translate="yes" xml:space="preserve">
          <source>This is like the &lt;code&gt;:enable-function&lt;/code&gt; abbrev property except that it applies to all abbrevs in the table. It is used before even trying to find the abbrev before point, so it can dynamically modify the abbrev table.</source>
          <target state="translated">类似于 &lt;code&gt;:enable-function&lt;/code&gt; abbrev属性，不同之处在于它适用于表中的所有缩写。它甚至在试图找到前一个缩写之前就使用过，因此它可以动态地修改缩写表。</target>
        </trans-unit>
        <trans-unit id="350c64c70e76e9e4caeaa13b4f3df2165981c1ed" translate="yes" xml:space="preserve">
          <source>This is meaningful only for certain types, currently including &lt;code&gt;hook&lt;/code&gt;, &lt;code&gt;plist&lt;/code&gt; and &lt;code&gt;alist&lt;/code&gt;. See the definition of the individual types for a description of how to use &lt;code&gt;:options&lt;/code&gt;.</source>
          <target state="translated">仅对于某些类型（当前包括 &lt;code&gt;hook&lt;/code&gt; ， &lt;code&gt;plist&lt;/code&gt; 和 &lt;code&gt;alist&lt;/code&gt; ）有意义。有关如何使用 &lt;code&gt;:options&lt;/code&gt; 的说明，请参见各个类型的定义。</target>
        </trans-unit>
        <trans-unit id="a393ffc69a5c4aa6e10ed375dafd00e3cfb03a0f" translate="yes" xml:space="preserve">
          <source>This is not a normal hook because the values of the functions are used, and in many cases only some of the functions are called.</source>
          <target state="translated">这不是一个正常的钩子,因为使用的是函数的值,很多情况下只调用了部分函数。</target>
        </trans-unit>
        <trans-unit id="7fd0025b3700aa925387621e925fa3d3dde46b1f" translate="yes" xml:space="preserve">
          <source>This is not an exhaustive list, it only covers the more general hooks. For example, every major mode defines a hook named &amp;lsquo;</source>
          <target state="translated">这不是一个详尽的清单，仅涵盖了更通用的钩子。例如，每个主要模式都定义了一个名为'</target>
        </trans-unit>
        <trans-unit id="03250d5aa731772bdc8eea9fd068454a1d5a9bca" translate="yes" xml:space="preserve">
          <source>This is not completely equivalent because it can evaluate &lt;var&gt;arg1&lt;/var&gt; or &lt;var&gt;arg2&lt;/var&gt; twice. By contrast, &lt;code&gt;(or &lt;var&gt;arg1&lt;/var&gt; &lt;var&gt;arg2&lt;/var&gt;
&lt;var&gt;arg3&lt;/var&gt;)&lt;/code&gt; never evaluates any argument more than once.</source>
          <target state="translated">这并不完全等效，因为它可以两次评估 &lt;var&gt;arg1&lt;/var&gt; 或 &lt;var&gt;arg2&lt;/var&gt; 。相比之下， &lt;code&gt;(or &lt;var&gt;arg1&lt;/var&gt; &lt;var&gt;arg2&lt;/var&gt; &lt;var&gt;arg3&lt;/var&gt;)&lt;/code&gt; 对任何参数的求和都不会超过一次。</target>
        </trans-unit>
        <trans-unit id="acb411e478bcba8c1fe56867bc93cbc8df4d1dff" translate="yes" xml:space="preserve">
          <source>This is often good for code that&amp;rsquo;s only a fallback for compatibility with other versions of Emacs.</source>
          <target state="translated">这通常对代码有益，而这些代码只是与其他版本的Emacs兼容的后备。</target>
        </trans-unit>
        <trans-unit id="a4426af0bd4d059601abc817c43755785ce0a999" translate="yes" xml:space="preserve">
          <source>This is represented either as a URI (&amp;lsquo;</source>
          <target state="translated">这可以表示为URI（'</target>
        </trans-unit>
        <trans-unit id="6867b54e10bb974c20025f3f660fe4bba4dfb022" translate="yes" xml:space="preserve">
          <source>This is set to 1 during redisplay when this window must be updated.</source>
          <target state="translated">在重新显示期间,当必须更新该窗口时,该值被设置为1。</target>
        </trans-unit>
        <trans-unit id="957f8c2bc553538244d6cc4314d095b9e689ad04" translate="yes" xml:space="preserve">
          <source>This is shown in the buffer created by</source>
          <target state="translated">缓冲区中显示的是由</target>
        </trans-unit>
        <trans-unit id="c051f5d03fb2296f46c510780afd0bb6a7d86d61" translate="yes" xml:space="preserve">
          <source>This is shown when the package is listed in the Package Menu. It should occupy a single line, ideally in 36 characters or less.</source>
          <target state="translated">当软件包被列在 &quot;软件包菜单 &quot;中时,就会显示出这个信息。它应该占一行,最好是36个字符或更少。</target>
        </trans-unit>
        <trans-unit id="b4b2ba11f4c17a87d0a1efa4d7f9a5472fc9d061" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;action&lt;/code&gt;, and when present, will be used instead of &lt;code&gt;action&lt;/code&gt; for button invocations resulting from mouse-clicks (instead of the user hitting</source>
          <target state="translated">这类似于 &lt;code&gt;action&lt;/code&gt; ，和当存在时，将被用来代替 &lt;code&gt;action&lt;/code&gt; 从鼠标点击按钮导致调用（而不是用户击球</target>
        </trans-unit>
        <trans-unit id="788b0f74839888d01741f681ba25035dd4198883" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;choice&lt;/code&gt;, except that the choices are displayed using radio buttons rather than a menu. This has the advantage of displaying documentation for the choices when applicable and so is often a good choice for a choice between constant functions (&lt;code&gt;function-item&lt;/code&gt; customization types).</source>
          <target state="translated">这类似于 &lt;code&gt;choice&lt;/code&gt; ，不同之处在于选择是使用单选按钮而不是菜单显示的。这样具有的优势是在适用时显示选择的文档，因此通常是在恒定函数（ &lt;code&gt;function-item&lt;/code&gt; 定制类型）之间进行选择的不错选择。</target>
        </trans-unit>
        <trans-unit id="4e96069698032d138ba0c11ebf7490bdc28c28fe" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;directory-files&lt;/code&gt; in deciding which files to report on and how to report their names. However, instead of returning a list of file names, it returns for each file a list &lt;code&gt;(&lt;var&gt;filename&lt;/var&gt; . &lt;var&gt;attributes&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;attributes&lt;/var&gt; is what &lt;code&gt;file-attributes&lt;/code&gt; returns for that file. The optional argument &lt;var&gt;id-format&lt;/var&gt; has the same meaning as the corresponding argument to &lt;code&gt;file-attributes&lt;/code&gt; (see &lt;a href=&quot;file-attributes#Definition-of-file_002dattributes&quot;&gt;Definition of file-attributes&lt;/a&gt;).</source>
          <target state="translated">在确定要报告哪些文件以及如何报告其名称方面，这类似于 &lt;code&gt;directory-files&lt;/code&gt; 。然而，而不是返回文件名列表，它返回每个文件的列表 &lt;code&gt;(&lt;var&gt;filename&lt;/var&gt; . &lt;var&gt;attributes&lt;/var&gt;)&lt;/code&gt; ，其中 &lt;var&gt;attributes&lt;/var&gt; 是什么 &lt;code&gt;file-attributes&lt;/code&gt; 该文件的回报。可选参数 &lt;var&gt;id-format&lt;/var&gt; 与 &lt;code&gt;file-attributes&lt;/code&gt; 的相应参数具有相同的含义（请参阅&lt;a href=&quot;file-attributes#Definition-of-file_002dattributes&quot;&gt;file-attributes的定义&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="d147532a259703926ad8424d25ebde544378f018" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;eval-region&lt;/code&gt;, but the arguments provide different optional features. &lt;code&gt;eval-buffer&lt;/code&gt; operates on the entire accessible portion of buffer &lt;var&gt;buffer-or-name&lt;/var&gt; (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Narrowing.html#Narrowing&quot;&gt;Narrowing&lt;/a&gt; in</source>
          <target state="translated">这类似于 &lt;code&gt;eval-region&lt;/code&gt; ，但是参数提供了不同的可选功能。 &lt;code&gt;eval-buffer&lt;/code&gt; 上缓冲的整个可访问部分操作 &lt;var&gt;buffer-or-name&lt;/var&gt; （参见&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Narrowing.html#Narrowing&quot;&gt;缩小&lt;/a&gt;在</target>
        </trans-unit>
        <trans-unit id="3ab36335de4d2ca642eb7a73a27cf1fea0cf908b" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;ewoc-refresh&lt;/code&gt;, except that only &lt;var&gt;nodes&lt;/var&gt; in &lt;var&gt;ewoc&lt;/var&gt; are updated instead of the entire set.</source>
          <target state="translated">这类似于 &lt;code&gt;ewoc-refresh&lt;/code&gt; ，但只有 &lt;var&gt;nodes&lt;/var&gt; 在 &lt;var&gt;ewoc&lt;/var&gt; 被更新，而不是整个集。</target>
        </trans-unit>
        <trans-unit id="071624cc7a405f83147f7238cb97c9e536d1d4bc" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;force_start&lt;/code&gt;, but the next redisplay will only obey it if point stays visible.</source>
          <target state="translated">这类似于 &lt;code&gt;force_start&lt;/code&gt; ，但是仅当点保持可见时，才进行下一次重新显示。</target>
        </trans-unit>
        <trans-unit id="0c0d72d7db7aa28768d39fb84f4daa9541f10b3d" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;let&lt;/code&gt; (see &lt;a href=&quot;local-variables#Local-Variables&quot;&gt;Local Variables&lt;/a&gt;): it sets up local variables as specified by &lt;var&gt;bindings&lt;/var&gt;, and then evaluates &lt;var&gt;body&lt;/var&gt; with those bindings in effect. Each element of &lt;var&gt;bindings&lt;/var&gt; should be either a symbol or a list of the form &lt;code&gt;(&lt;var&gt;var&lt;/var&gt;&amp;nbsp;&lt;var&gt;expr&lt;/var&gt;)&lt;/code&gt;; the result is to evaluate &lt;var&gt;expr&lt;/var&gt; and bind &lt;var&gt;var&lt;/var&gt; to the result. The tail of &lt;var&gt;bindings&lt;/var&gt; can be either &lt;code&gt;nil&lt;/code&gt; or a symbol which should hold a list of arguments, in which case each argument is evaluated, and the symbol is bound to the resulting list.</source>
          <target state="translated">这类似于 &lt;code&gt;let&lt;/code&gt; （请参见&lt;a href=&quot;local-variables#Local-Variables&quot;&gt;Local Variables&lt;/a&gt;）：它设置 &lt;var&gt;bindings&lt;/var&gt; 指定的局部变量，然后使用有效的那些绑定来评估 &lt;var&gt;body&lt;/var&gt; 。 &lt;var&gt;bindings&lt;/var&gt; 每个元素应为符号或形式为 &lt;code&gt;(&lt;var&gt;var&lt;/var&gt;&amp;nbsp;&lt;var&gt;expr&lt;/var&gt;)&lt;/code&gt; 的列表；结果是评估 &lt;var&gt;expr&lt;/var&gt; 并将 &lt;var&gt;var&lt;/var&gt; 绑定到结果。 &lt;var&gt;bindings&lt;/var&gt; 的尾部可以为 &lt;code&gt;nil&lt;/code&gt; 或应包含参数列表的符号，在这种情况下，将评估每个参数，并将符号绑定到结果列表。</target>
        </trans-unit>
        <trans-unit id="6972e5c3397c18efdbdfe782c91288421ed8ea0e" translate="yes" xml:space="preserve">
          <source>This is successful when there are no more arguments to match at the current argument list level; otherwise it fails. See sublist specifications and the backquote example.</source>
          <target state="translated">当当前参数列表级别没有更多的参数可以匹配时,此操作成功;否则失败。参见子列表规范和反引号示例。</target>
        </trans-unit>
        <trans-unit id="5164ae1e3cbd498c426b475c98a20978f02fa306" translate="yes" xml:space="preserve">
          <source>This is the</source>
          <target state="translated">这就是</target>
        </trans-unit>
        <trans-unit id="2180873b27de165f770563ca634195e2da011072" translate="yes" xml:space="preserve">
          <source>This is the &lt;code&gt;abbrev-symbol&lt;/code&gt; of the most recent abbrev expanded. This information is left by &lt;code&gt;expand-abbrev&lt;/code&gt; for the sake of the &lt;code&gt;unexpand-abbrev&lt;/code&gt; command (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Expanding-Abbrevs.html#Expanding-Abbrevs&quot;&gt;Expanding Abbrevs&lt;/a&gt; in</source>
          <target state="translated">这是最近扩展的 &lt;code&gt;abbrev-symbol&lt;/code&gt; 。此信息由左 &lt;code&gt;expand-abbrev&lt;/code&gt; 为着想 &lt;code&gt;unexpand-abbrev&lt;/code&gt; 命令（见&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Expanding-Abbrevs.html#Expanding-Abbrevs&quot;&gt;扩大Abbrevs&lt;/a&gt;在</target>
        </trans-unit>
        <trans-unit id="ee8f78616eff16279484642ce7f3f5e546449369" translate="yes" xml:space="preserve">
          <source>This is the C function name for this function. This is the name that is used in C code for calling the function. The name is, by convention, &amp;lsquo;</source>
          <target state="translated">这是此函数的C函数名称。这是在C代码中用于调用该函数的名称。按照惯例，该名称为&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="0e7631d5794c9ec12c76756418cbc63e4165f7ba" translate="yes" xml:space="preserve">
          <source>This is the abbrev table for mode-independent abbrevs. The abbrevs defined in it apply to all buffers. Each buffer may also have a local abbrev table, whose abbrev definitions take precedence over those in the global table.</source>
          <target state="translated">这是与模式无关的缩略语表。它所定义的缩写适用于所有缓冲区,每个缓冲区也可以有本地缩写表,其缩写定义优先于全局表。每个缓冲区也可以有一个本地缩写表,其缩写定义优先于全局表中的定义。</target>
        </trans-unit>
        <trans-unit id="3c523709cb7c5024477bee4729413d33dfff3e89" translate="yes" xml:space="preserve">
          <source>This is the basic function for evaluating an expression. It evaluates &lt;var&gt;form&lt;/var&gt; in the current environment, and returns the result. The type of the &lt;var&gt;form&lt;/var&gt; object determines how it is evaluated. See &lt;a href=&quot;forms#Forms&quot;&gt;Forms&lt;/a&gt;.</source>
          <target state="translated">这是评估表达式的基本功能。它评估当前环境中的 &lt;var&gt;form&lt;/var&gt; ，并返回结果。 &lt;var&gt;form&lt;/var&gt; 对象的类型确定如何评估它。见&lt;a href=&quot;forms#Forms&quot;&gt;表格&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bd01e94d17ab080a99e8638997693afb17244e31" translate="yes" xml:space="preserve">
          <source>This is the basic function for undoing elements of an undo list. It undoes the first &lt;var&gt;count&lt;/var&gt; elements of &lt;var&gt;list&lt;/var&gt;, returning the rest of &lt;var&gt;list&lt;/var&gt;.</source>
          <target state="translated">这是撤消撤消列表元素的基本功能。它撤消第一 &lt;var&gt;count&lt;/var&gt; 的元素 &lt;var&gt;list&lt;/var&gt; ，返回其余 &lt;var&gt;list&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="5edc23af104076b999a3160ccb924d02cdc49953" translate="yes" xml:space="preserve">
          <source>This is the command bound to</source>
          <target state="translated">这是绑定到</target>
        </trans-unit>
        <trans-unit id="1a1f4f970d0839d66261280186ed2bffd09be10b" translate="yes" xml:space="preserve">
          <source>This is the default file name for reading and saving abbrevs. By default, Emacs will look for</source>
          <target state="translated">这是读取和保存缩写的默认文件名。默认情况下,Emacs 会寻找</target>
        </trans-unit>
        <trans-unit id="3ac1c0a010df315e398404dba2b20fde641ad886" translate="yes" xml:space="preserve">
          <source>This is the default local keymap for reading from the minibuffer. By default, it makes the following bindings:</source>
          <target state="translated">这是默认的用于读取minibuffer的本地键图。默认情况下,它进行以下绑定。</target>
        </trans-unit>
        <trans-unit id="d401506332b2e0b6c73cafdead87e20857817be0" translate="yes" xml:space="preserve">
          <source>This is the default translation table for decoding. If a coding systems specifies its own translation tables, the table that is the value of this variable, if non-&lt;code&gt;nil&lt;/code&gt;, is applied after them.</source>
          <target state="translated">这是用于解码的默认转换表。如果编码系统指定了自己的翻译表，也就是这个变量的值的表，如果不 &lt;code&gt;nil&lt;/code&gt; ，之后应用。</target>
        </trans-unit>
        <trans-unit id="0391cdc8080687f7d9e25d7cee6807f2974b303f" translate="yes" xml:space="preserve">
          <source>This is the default translation table for encoding. If a coding systems specifies its own translation tables, the table that is the value of this variable, if non-&lt;code&gt;nil&lt;/code&gt;, is applied after them.</source>
          <target state="translated">这是编码的默认转换表。如果编码系统指定了自己的翻译表，也就是这个变量的值的表，如果不 &lt;code&gt;nil&lt;/code&gt; ，之后应用。</target>
        </trans-unit>
        <trans-unit id="8ff7696e0b2dcaaf5d9a83aa5bfff3d3338f56fd" translate="yes" xml:space="preserve">
          <source>This is the documentation string. It uses C comment syntax rather than C string syntax because comment syntax requires nothing special to include multiple lines. The &amp;lsquo;</source>
          <target state="translated">这是文档字符串。它使用C注释语法而不是C字符串语法，因为注释语法不需要特殊的内容即可包含多行。'</target>
        </trans-unit>
        <trans-unit id="ba1bc11285ca3ad6a244d1d3f63cb12bd61035a6" translate="yes" xml:space="preserve">
          <source>This is the exact expansion text of the most recent abbrev expanded, after case conversion (if any). Its value is &lt;code&gt;nil&lt;/code&gt; if the abbrev has already been unexpanded. This contains information left by &lt;code&gt;expand-abbrev&lt;/code&gt; for the sake of the &lt;code&gt;unexpand-abbrev&lt;/code&gt; command.</source>
          <target state="translated">这是大小写转换后（如果有）的最新缩写的确切扩展文本。如果缩写已经展开，则其值为 &lt;code&gt;nil&lt;/code&gt; 。它包含为执行 &lt;code&gt;unexpand-abbrev&lt;/code&gt; 命令而由 &lt;code&gt;expand-abbrev&lt;/code&gt; 留下的信息。</target>
        </trans-unit>
        <trans-unit id="060ce1d372419ec3a7177fd85251e7258d7b9130" translate="yes" xml:space="preserve">
          <source>This is the exponential function; it returns &lt;em&gt;e&lt;/em&gt; to the power &lt;var&gt;arg&lt;/var&gt;.</source>
          <target state="translated">这是指数函数；它返回&lt;em&gt;e&lt;/em&gt;到幂 &lt;var&gt;arg&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="1c5a3373b574b2d101802192b77f8998ef8a201d" translate="yes" xml:space="preserve">
          <source>This is the face used for drawing the first pixel of a divider that is at least three pixels wide. To obtain a solid appearance, set this to the same value used for the &lt;code&gt;window-divider&lt;/code&gt; face.</source>
          <target state="translated">这是用于绘制至少三个像素宽的分隔线的第一个像素的面。要获得立体外观，请将其设置为与 &lt;code&gt;window-divider&lt;/code&gt; 面相同的值。</target>
        </trans-unit>
        <trans-unit id="e6082d13ab0522b6c4da76ffdd8e94b61f2396f8" translate="yes" xml:space="preserve">
          <source>This is the face used for drawing the last pixel of a divider that is at least three pixels wide. To obtain a solid appearance, set this to the same value used for the &lt;code&gt;window-divider&lt;/code&gt; face.</source>
          <target state="translated">这是用于绘制至少三个像素宽的分隔线的最后一个像素的面。要获得立体外观，请将其设置为与 &lt;code&gt;window-divider&lt;/code&gt; 面相同的值。</target>
        </trans-unit>
        <trans-unit id="5ca86d81de089f241f9bce6155e404c269ae806a" translate="yes" xml:space="preserve">
          <source>This is the last time that the window was selected. The function &lt;code&gt;get-lru-window&lt;/code&gt; uses this field.</source>
          <target state="translated">这是最后一次选择窗口。函数 &lt;code&gt;get-lru-window&lt;/code&gt; 使用此字段。</target>
        </trans-unit>
        <trans-unit id="79177d72d10fb21d4c423cd713d0ac76ece2bd48" translate="yes" xml:space="preserve">
          <source>This is the last window that was selected with this buffer in it, or &lt;code&gt;nil&lt;/code&gt; if that window no longer displays this buffer.</source>
          <target state="translated">这是在其中选择此缓冲区的最后一个窗口；如果该窗口不再显示该缓冲区，则为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dacccea37445b400ef6fd93c9b5449cdb37bfe67" translate="yes" xml:space="preserve">
          <source>This is the local abbrev table used in Fundamental mode; in other words, it is the local abbrev table in all buffers in Fundamental mode.</source>
          <target state="translated">这是在Fundamental模式下使用的本地缩写表,换句话说,它是Fundamental模式下所有缓冲区的本地缩写表。</target>
        </trans-unit>
        <trans-unit id="18aea94860a7a9d49b1d6a68460bba6401f70214" translate="yes" xml:space="preserve">
          <source>This is the local abbrev table used in Lisp mode. It is the parent of the local abbrev table used in Emacs Lisp mode. See &lt;a href=&quot;abbrev-table-properties#Abbrev-Table-Properties&quot;&gt;Abbrev Table Properties&lt;/a&gt;.</source>
          <target state="translated">这是在Lisp模式下使用的本地缩写表。它是Emacs Lisp模式下使用的本地缩写表的父级。请参阅&lt;a href=&quot;abbrev-table-properties#Abbrev-Table-Properties&quot;&gt;Abbrev表属性&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1a3ef773d17842f24c2eff807ced040674cdf64e" translate="yes" xml:space="preserve">
          <source>This is the local abbrev table used in Text mode.</source>
          <target state="translated">这是在文本模式下使用的本地缩写表。</target>
        </trans-unit>
        <trans-unit id="861277d86f49449eac7c9131ef2a7a22729ce720" translate="yes" xml:space="preserve">
          <source>This is the location of the most recent abbrev expanded. This contains information left by &lt;code&gt;expand-abbrev&lt;/code&gt; for the sake of the &lt;code&gt;unexpand-abbrev&lt;/code&gt; command.</source>
          <target state="translated">这是最新缩写的位置。它包含为执行 &lt;code&gt;unexpand-abbrev&lt;/code&gt; 命令而由 &lt;code&gt;expand-abbrev&lt;/code&gt; 留下的信息。</target>
        </trans-unit>
        <trans-unit id="f395743344cd27fb23721228430ca1ee2862497e" translate="yes" xml:space="preserve">
          <source>This is the major mode command for Fundamental mode. Unlike other mode commands, it does &lt;em&gt;not&lt;/em&gt; run any mode hooks (see &lt;a href=&quot;major-mode-conventions#Major-Mode-Conventions&quot;&gt;Major Mode Conventions&lt;/a&gt;), since you are not supposed to customize this mode.</source>
          <target state="translated">这是基本模式的主要模式命令。不同于其他模式的命令，它并&lt;em&gt;没有&lt;/em&gt;运行任何模式挂钩（见&lt;a href=&quot;major-mode-conventions#Major-Mode-Conventions&quot;&gt;主要方式约定&lt;/a&gt;），因为你不应该自定义此模式。</target>
        </trans-unit>
        <trans-unit id="ace17aa35f7381424427bf2537be21491ab6b400" translate="yes" xml:space="preserve">
          <source>This is the major mode used in inactive minibuffers. It uses keymap &lt;code&gt;minibuffer-inactive-mode-map&lt;/code&gt;. This can be useful if the minibuffer is in a separate frame. See &lt;a href=&quot;minibuffers-and-frames#Minibuffers-and-Frames&quot;&gt;Minibuffers and Frames&lt;/a&gt;.</source>
          <target state="translated">这是非活动微型缓冲区中使用的主要模式。它使用keymap &lt;code&gt;minibuffer-inactive-mode-map&lt;/code&gt; 。如果小型缓冲区位于单独的帧中，这将很有用。请参阅&lt;a href=&quot;minibuffers-and-frames#Minibuffers-and-Frames&quot;&gt;最小缓冲区和帧&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="eabab2989ca075fa64bea21443c12a9e426416af" translate="yes" xml:space="preserve">
          <source>This is the maximum number of arguments that the function accepts, if there is a fixed maximum. Alternatively, it can be &lt;code&gt;UNEVALLED&lt;/code&gt;, indicating a special form that receives unevaluated arguments, or &lt;code&gt;MANY&lt;/code&gt;, indicating an unlimited number of evaluated arguments (the equivalent of &lt;code&gt;&amp;amp;rest&lt;/code&gt;). Both &lt;code&gt;UNEVALLED&lt;/code&gt; and &lt;code&gt;MANY&lt;/code&gt; are macros. If &lt;var&gt;max&lt;/var&gt; is a number, it must be more than &lt;var&gt;min&lt;/var&gt; but less than 8.</source>
          <target state="translated">这是函数接受的最大参数数量（如果有固定的最大值）。或者，它可以是 &lt;code&gt;UNEVALLED&lt;/code&gt; ，表示接收未评估参数的特殊形式，或者可以是 &lt;code&gt;MANY&lt;/code&gt; ，表示不受限制数量的评估参数（与 &lt;code&gt;&amp;amp;rest&lt;/code&gt; 等效）。无论 &lt;code&gt;UNEVALLED&lt;/code&gt; 和 &lt;code&gt;MANY&lt;/code&gt; 是宏。如果 &lt;var&gt;max&lt;/var&gt; 是一个数字，则必须大于 &lt;var&gt;min&lt;/var&gt; 但小于8。</target>
        </trans-unit>
        <trans-unit id="b7f77ff184987e29e59b6b15235c322c6e149e19" translate="yes" xml:space="preserve">
          <source>This is the mechanism, how Tramp implements &lt;code&gt;interrupt-process&lt;/code&gt;.</source>
          <target state="translated">这是Tramp实现 &lt;code&gt;interrupt-process&lt;/code&gt; 的机制。</target>
        </trans-unit>
        <trans-unit id="8093786592590fe333b219fb1554b9d18e418bc0" translate="yes" xml:space="preserve">
          <source>This is the minimum number of arguments that the function requires. The function &lt;code&gt;or&lt;/code&gt; allows a minimum of zero arguments.</source>
          <target state="translated">这是函数所需的最少参数数目。该函数 &lt;code&gt;or&lt;/code&gt; 允许至少零个参数。</target>
        </trans-unit>
        <trans-unit id="48b2a8f0369bc6389e8c8f8198f68b775a51fb22" translate="yes" xml:space="preserve">
          <source>This is the mode command for Auto Save mode, a buffer-local minor mode. When Auto Save mode is enabled, auto-saving is enabled in the buffer. The calling convention is the same as for other minor mode commands (see &lt;a href=&quot;minor-mode-conventions#Minor-Mode-Conventions&quot;&gt;Minor Mode Conventions&lt;/a&gt;).</source>
          <target state="translated">这是自动保存模式（本地缓冲区次要模式）的模式命令。启用自动保存模式后，将在缓冲区中启用自动保存。调用约定与其他次要模式命令相同（请参见&lt;a href=&quot;minor-mode-conventions#Minor-Mode-Conventions&quot;&gt;次要模式约定&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="376f985e3ccb8e362301736a9bde6295a248f015" translate="yes" xml:space="preserve">
          <source>This is the mode command for Read Only minor mode, a buffer-local minor mode. When the mode is enabled, &lt;code&gt;buffer-read-only&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt; in the buffer; when disabled, &lt;code&gt;buffer-read-only&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt; in the buffer. The calling convention is the same as for other minor mode commands (see &lt;a href=&quot;minor-mode-conventions#Minor-Mode-Conventions&quot;&gt;Minor Mode Conventions&lt;/a&gt;).</source>
          <target state="translated">这是只读次要模式（缓冲区本地次要模式）的模式命令。启用该模式时， &lt;code&gt;buffer-read-only&lt;/code&gt; 在缓冲区中为 &lt;code&gt;nil&lt;/code&gt; ；否则为0。禁用时， &lt;code&gt;buffer-read-only&lt;/code&gt; 在缓冲区中为 &lt;code&gt;nil&lt;/code&gt; 。调用约定与其他次要模式命令相同（请参见&lt;a href=&quot;minor-mode-conventions#Minor-Mode-Conventions&quot;&gt;次要模式约定&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="ff2d57755388ba15a040fc3ff8136317bff9ef17" translate="yes" xml:space="preserve">
          <source>This is the most general composite type construct. The value may be any Lisp object that satisfies one of &lt;var&gt;criteria&lt;/var&gt;. &lt;var&gt;criteria&lt;/var&gt; should be a list, and each element should be one of these possibilities:</source>
          <target state="translated">这是最通用的复合类型构造。该值可以是满足 &lt;var&gt;criteria&lt;/var&gt; 之一的任何Lisp对象。 &lt;var&gt;criteria&lt;/var&gt; 应该是一个列表，每个元素应该是以下可能性之一：</target>
        </trans-unit>
        <trans-unit id="7d928ba7225b20194a4e742b5686cbeb4d8e8cd8" translate="yes" xml:space="preserve">
          <source>This is the name of the Lisp symbol to define as the function name; in the example above, it is &lt;code&gt;or&lt;/code&gt;.</source>
          <target state="translated">这是Lisp符号的名称，定义为函数名称；在上面的示例中，它是 &lt;code&gt;or&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c7ce4a96dcfbbf417a5515c79558a45d727d8b69" translate="yes" xml:space="preserve">
          <source>This is the name of the serial port. On Unix and GNU systems, this is a file name such as</source>
          <target state="translated">这是串口的名称。在Unix和GNU系统中,这是一个文件名,如</target>
        </trans-unit>
        <trans-unit id="6195a15a6a8376e9066802943fcbe1887a28b33c" translate="yes" xml:space="preserve">
          <source>This is the number of columns that the display in the window is scrolled horizontally to the left. Normally, this is 0. When only the current line is hscrolled, this describes how much the current line is scrolled.</source>
          <target state="translated">这是窗口中显示向左水平滚动的列数,通常为0。通常情况下,这个值为0,当只滚动当前行时,这个值描述了当前行的滚动程度。</target>
        </trans-unit>
        <trans-unit id="ccb362e8890c8dc7c6b4dd90e2d5c7affca9cdad" translate="yes" xml:space="preserve">
          <source>This is the number of rapid repeated presses so far of the same mouse button. See &lt;a href=&quot;repeat-events#Repeat-Events&quot;&gt;Repeat Events&lt;/a&gt;.</source>
          <target state="translated">这是到目前为止同一鼠标按钮快速重复按下的次数。请参阅&lt;a href=&quot;repeat-events#Repeat-Events&quot;&gt;重复事件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="152c6c5ff46b2d57f3702b8643ad5b3fd0fa9cff" translate="yes" xml:space="preserve">
          <source>This is the only valid way to change the endpoints of an overlay. Do not try modifying the markers in the overlay by hand, as that fails to update other vital data structures and can cause some overlays to be lost.</source>
          <target state="translated">这是更改覆盖图端点的唯一有效方法。不要尝试用手修改叠加中的标记,因为这样做无法更新其他重要的数据结构,并可能导致一些叠加丢失。</target>
        </trans-unit>
        <trans-unit id="9e818853e17046ec822acccf394ea56b21547df0" translate="yes" xml:space="preserve">
          <source>This is the regular expression describing line-beginnings that separate pages. The default value is &lt;code&gt;&quot;^\014&quot;&lt;/code&gt; (i.e., &lt;code&gt;&quot;^^L&quot;&lt;/code&gt; or &lt;code&gt;&quot;^\C-l&quot;&lt;/code&gt;); this matches a line that starts with a formfeed character.</source>
          <target state="translated">这是描述分隔页面的行开头的正则表达式。默认值为 &lt;code&gt;&quot;^\014&quot;&lt;/code&gt; （即 &lt;code&gt;&quot;^^L&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;^\C-l&quot;&lt;/code&gt; ）；这与以换页符开头的行匹配。</target>
        </trans-unit>
        <trans-unit id="ef9dc4f2029c4c23dfd2d883356ad4a5524a9429" translate="yes" xml:space="preserve">
          <source>This is the regular expression for recognizing the beginning of a line that separates paragraphs. (If you change this, you may have to change &lt;code&gt;paragraph-start&lt;/code&gt; also.) The default value is &lt;code&gt;&quot;[&amp;nbsp;\t\f]*$&quot;&lt;/code&gt;, which matches a line that consists entirely of spaces, tabs, and form feeds (after its left margin).</source>
          <target state="translated">这是用于识别分隔段落的行的开头的正则表达式。（如果更改此选项，则可能还必须更改 &lt;code&gt;paragraph-start&lt;/code&gt; 。）默认值为 &lt;code&gt;&quot;[&amp;nbsp;\t\f]*$&quot;&lt;/code&gt; ，它匹配的行完全由空格，制表符和换页符组成（在其后左边距）。</target>
        </trans-unit>
        <trans-unit id="14169eccf058eb3e9106c91e3eeed00bce347148" translate="yes" xml:space="preserve">
          <source>This is the regular expression for recognizing the beginning of a line that starts &lt;em&gt;or&lt;/em&gt; separates paragraphs. The default value is &lt;code&gt;&quot;\f\\|[&amp;nbsp;\t]*$&quot;&lt;/code&gt;, which matches a line containing only whitespace or starting with a form feed (after its left margin).</source>
          <target state="translated">这是用于识别开始&lt;em&gt;或&lt;/em&gt;分隔段落的行首的正则表达式。默认值为 &lt;code&gt;&quot;\f\\|[&amp;nbsp;\t]*$&quot;&lt;/code&gt; ，它与仅包含空格或以换页开头（在其左边距之后）的行匹配。</target>
        </trans-unit>
        <trans-unit id="a0c0d898779738c507e70e28b25f015c92b6136b" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;(car (car &lt;var&gt;cons-cell&lt;/var&gt;))&lt;/code&gt;.</source>
          <target state="translated">这与 &lt;code&gt;(car (car &lt;var&gt;cons-cell&lt;/var&gt;))&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1dec8ab013682df56cb72d3cee81ea3421bcd721" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;(car (cdr &lt;var&gt;cons-cell&lt;/var&gt;))&lt;/code&gt; or &lt;code&gt;(nth 1 &lt;var&gt;cons-cell&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">这与 &lt;code&gt;(car (cdr &lt;var&gt;cons-cell&lt;/var&gt;))&lt;/code&gt; 或 &lt;code&gt;(nth 1 &lt;var&gt;cons-cell&lt;/var&gt;)&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="07d411bf2c660ed51c61291f8b6a7b659aada3ec" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;(cdr (car &lt;var&gt;cons-cell&lt;/var&gt;))&lt;/code&gt;.</source>
          <target state="translated">这与 &lt;code&gt;(cdr (car &lt;var&gt;cons-cell&lt;/var&gt;))&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="292187d529ba7d31de0638670f15fe461485ab91" translate="yes" xml:space="preserve">
          <source>This is the same as &lt;code&gt;(cdr (cdr &lt;var&gt;cons-cell&lt;/var&gt;))&lt;/code&gt; or &lt;code&gt;(nthcdr 2 &lt;var&gt;cons-cell&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">这与 &lt;code&gt;(cdr (cdr &lt;var&gt;cons-cell&lt;/var&gt;))&lt;/code&gt; 或 &lt;code&gt;(nthcdr 2 &lt;var&gt;cons-cell&lt;/var&gt;)&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="0e19ce93bf7b37edfba316c893cc348f7dd03583" translate="yes" xml:space="preserve">
          <source>This is the same as no property&amp;mdash;use the standard indentation pattern.</source>
          <target state="translated">这与没有属性相同，请使用标准的缩进模式。</target>
        </trans-unit>
        <trans-unit id="a15feebe30b7e3e45adb8ff4c691e329282143e8" translate="yes" xml:space="preserve">
          <source>This is the soft limit for the acceptable size of an undo list. The change group at which this size is exceeded is the last one kept.</source>
          <target state="translated">这是撤销列表可接受大小的软限制。超过这个大小的变更组是最后保留的变更组。</target>
        </trans-unit>
        <trans-unit id="9a671f80aca89266fae2db990311441d4c4c6b1a" translate="yes" xml:space="preserve">
          <source>This is the symbol &lt;code&gt;vertical-scroll-bar&lt;/code&gt;.</source>
          <target state="translated">这是符号 &lt;code&gt;vertical-scroll-bar&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f1fbd7fb3c9f8101ea1faa6a62faecfce025a2e8" translate="yes" xml:space="preserve">
          <source>This is the upper limit for the acceptable size of an undo list. The change group at which this size is exceeded is discarded itself (along with all older change groups). There is one exception: the very latest change group is only discarded if it exceeds &lt;code&gt;undo-outer-limit&lt;/code&gt;.</source>
          <target state="translated">这是撤消列表可接受大小的上限。超过此大小的变更组将被自身丢弃（以及所有旧的变更组）。有一个例外：仅当最新的更改组超过 &lt;code&gt;undo-outer-limit&lt;/code&gt; 时,才会丢弃它。</target>
        </trans-unit>
        <trans-unit id="a4cc5a81c5b084984ed088f83e7f2697063f32d8" translate="yes" xml:space="preserve">
          <source>This is the value of point in the current buffer when this window is selected; when it is not selected, it retains its previous value.</source>
          <target state="translated">当本窗口被选中时,这是当前缓冲区中点的值;当未被选中时,则保留之前的值。</target>
        </trans-unit>
        <trans-unit id="423417762f6aa3330cc365bfd528db72f28df157" translate="yes" xml:space="preserve">
          <source>This is used for convenience and equals to &lt;code&gt;sizeof (char)&lt;/code&gt;.</source>
          <target state="translated">为方便起见，它等于 &lt;code&gt;sizeof (char)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ee31970b5f1fdac89c5f778fb86c8e1080cd6ff9" translate="yes" xml:space="preserve">
          <source>This is used when defining a function or macro which itself will be used to define entities like functions, macros, or variables. It indicates that the &lt;var&gt;n&lt;/var&gt;th argument, if any, should be considered as a documentation string.</source>
          <target state="translated">当定义一个函数或宏时，将使用它本身来定义诸如函数，宏或变量之类的实体。它指示第 &lt;var&gt;n&lt;/var&gt; 个参数（如果有）应视为文档字符串。</target>
        </trans-unit>
        <trans-unit id="b514ab09a266bb6df1bfbc536f26517e4414fb02" translate="yes" xml:space="preserve">
          <source>This is useful for creating private files, for example.</source>
          <target state="translated">这对于创建私人文件很有用,例如。</target>
        </trans-unit>
        <trans-unit id="866343c2b8bfe95e45965d000cb118b1f57008a3" translate="yes" xml:space="preserve">
          <source>This is useful for customizable options that are defined before their value could be computed correctly. For example, during startup Emacs calls this function for some user options that were defined in pre-loaded Emacs Lisp files, but whose initial values depend on information available only at run-time.</source>
          <target state="translated">这对于那些在其值被正确计算之前定义的可定制选项是很有用的。例如,在启动过程中,Emacs会调用这个函数来处理一些在预先加载的Emacs Lisp文件中定义的用户选项,但这些选项的初始值只取决于运行时的信息。</target>
        </trans-unit>
        <trans-unit id="b3e760a5e89ad084376779f2141e7164f8a35204" translate="yes" xml:space="preserve">
          <source>This is useful for running a subprocess; every subprocess must have a non-magic directory to serve as its current directory, and this function is a good way to come up with one.</source>
          <target state="translated">这对运行子进程很有用,每个子进程都必须有一个非魔法目录作为它的当前目录,这个函数是一个很好的方法。</target>
        </trans-unit>
        <trans-unit id="728aef88857a9046971c33c2a6d4cedfa41537de" translate="yes" xml:space="preserve">
          <source>This is useful mainly if you expect to change the file, and you want Emacs sessions that have already loaded it to keep working when the file changes.</source>
          <target state="translated">这主要是在你希望改变文件,并希望已经加载了文件的Emacs会话在文件改变时继续工作的时候有用。</target>
        </trans-unit>
        <trans-unit id="f5fd3494988d166f15654252d52829ff89a4ff31" translate="yes" xml:space="preserve">
          <source>This is useful not only for indenting regions of unindented text, but also for indenting regions of formatted code. For example, if &lt;var&gt;count&lt;/var&gt; is 3, this command adds 3 columns of indentation to every line that begins in the specified region.</source>
          <target state="translated">这不仅对于缩进未缩进文本的区域很有用，而且对于缩进格式化代码的区域也是有用的。例如，如果 &lt;var&gt;count&lt;/var&gt; 为3，则此命令向在指定区域开始的每一行添加3列缩进。</target>
        </trans-unit>
        <trans-unit id="e023a8e76b368c9ee76c884e2055089af92b66a6" translate="yes" xml:space="preserve">
          <source>This is valid for macros only. When stepping through the macro with Edebug, use &lt;var&gt;edebug-form-spec&lt;/var&gt;. See &lt;a href=&quot;instrumenting-macro-calls#Instrumenting-Macro-Calls&quot;&gt;Instrumenting Macro Calls&lt;/a&gt;.</source>
          <target state="translated">这仅对宏有效。使用 &lt;var&gt;edebug-form-spec&lt;/var&gt; 逐步浏览宏时，请使用edebug-form-spec。请参阅检测&lt;a href=&quot;instrumenting-macro-calls#Instrumenting-Macro-Calls&quot;&gt;宏调用&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b80b6274750aae65ca38e0dd4e8b9fe8f5e0f865" translate="yes" xml:space="preserve">
          <source>This keymap is used by &lt;code&gt;read-shell-command&lt;/code&gt; for completing command and file names that are part of a shell command. It uses &lt;code&gt;minibuffer-local-map&lt;/code&gt; as its parent keymap, and binds</source>
          <target state="translated">&lt;code&gt;read-shell-command&lt;/code&gt; 使用此键映射来完成作为shell命令一部分的命令和文件名。它使用 &lt;code&gt;minibuffer-local-map&lt;/code&gt; 作为其父键映射，并绑定</target>
        </trans-unit>
        <trans-unit id="88249230dfa1461ddb1420acb36091ec3f70b0f6" translate="yes" xml:space="preserve">
          <source>This keymap should be stored permanently in a global variable named &lt;code&gt;&lt;var&gt;modename&lt;/var&gt;-mode-map&lt;/code&gt;. Normally the library that defines the mode sets this variable.</source>
          <target state="translated">此键盘映射应该永久存储在名为 &lt;code&gt;&lt;var&gt;modename&lt;/var&gt;-mode-map&lt;/code&gt; 的全局变量中。通常，定义模式的库会设置此变量。</target>
        </trans-unit>
        <trans-unit id="4680fcd405dac3250ebef10c358794f36382d314" translate="yes" xml:space="preserve">
          <source>This keyword specifies that the item was first introduced in &lt;var&gt;package&lt;/var&gt; version &lt;var&gt;version&lt;/var&gt;, or that its meaning or default value was changed in that version. This keyword takes priority over &lt;code&gt;:version&lt;/code&gt;.</source>
          <target state="translated">此关键字指定该项目最初是在 &lt;var&gt;package&lt;/var&gt; 版本 &lt;var&gt;version&lt;/var&gt; 中引入的，或者在该版本中更改了其含义或默认值。此关键字的优先级高于 &lt;code&gt;:version&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="06717c0c1628edbad88aa49559c6e4c2c1c2190c" translate="yes" xml:space="preserve">
          <source>This keyword specifies that the item was first introduced in Emacs version &lt;var&gt;version&lt;/var&gt;, or that its default value was changed in that version. The value &lt;var&gt;version&lt;/var&gt; must be a string.</source>
          <target state="translated">此关键字指定该项目最初是在Emacs版本 &lt;var&gt;version&lt;/var&gt; 中引入的，或者在该版本中更改了其默认值。值 &lt;var&gt;version&lt;/var&gt; 必须是字符串。</target>
        </trans-unit>
        <trans-unit id="33843d9b6330214735b425409f4f8af78ec03941" translate="yes" xml:space="preserve">
          <source>This kind of display specification is an image descriptor (see &lt;a href=&quot;image-descriptors#Image-Descriptors&quot;&gt;Image Descriptors&lt;/a&gt;). When used as a display specification, it means to display the image instead of the text that has the display specification.</source>
          <target state="translated">这种显示规范是图像描述符（请参阅&lt;a href=&quot;image-descriptors#Image-Descriptors&quot;&gt;Image Descriptors&lt;/a&gt;）。当用作显示规范时，它意味着显示图像而不是具有显示规范的文本。</target>
        </trans-unit>
        <trans-unit id="7faaa9ffec418842a1ea32cff679d797acd62bdf" translate="yes" xml:space="preserve">
          <source>This kind of display specification raises or lowers the text it applies to, relative to the baseline of the line. It is mainly meant to support display of subscripts and superscripts.</source>
          <target state="translated">这种显示规范可以提高或降低它所适用的文本,相对于行的基线。它主要是为了支持下标和上标的显示。</target>
        </trans-unit>
        <trans-unit id="86f8bcb12625f70473593a24e87217ea7d15f84c" translate="yes" xml:space="preserve">
          <source>This kind of element enables undo limited to a region to determine whether the element pertains to that region.</source>
          <target state="translated">这种元素可以使undo限定在一个区域内,以确定该元素是否与该区域有关。</target>
        </trans-unit>
        <trans-unit id="0198e4d62031d63b971fe601bbcb5036427c502d" translate="yes" xml:space="preserve">
          <source>This kind of element indicates how to delete text that was inserted. Upon insertion, the text occupied the range &lt;var&gt;beg&lt;/var&gt;&amp;ndash;&lt;var&gt;end&lt;/var&gt; in the buffer.</source>
          <target state="translated">这种元素指示如何删除插入的文本。插入后，文本占据了 &lt;var&gt;beg&lt;/var&gt; 的范围-在缓冲区中 &lt;var&gt;end&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="2031537916062292c8d162859f7c94066f2bd7be" translate="yes" xml:space="preserve">
          <source>This kind of element indicates how to reinsert text that was deleted. The deleted text itself is the string &lt;var&gt;text&lt;/var&gt;. The place to reinsert it is &lt;code&gt;(abs &lt;var&gt;position&lt;/var&gt;)&lt;/code&gt;. If &lt;var&gt;position&lt;/var&gt; is positive, point was at the beginning of the deleted text, otherwise it was at the end. Zero or more (&lt;var&gt;marker&lt;/var&gt; . &lt;var&gt;adjustment&lt;/var&gt;) elements follow immediately after this element.</source>
          <target state="translated">这种元素指示如何重新插入已删除的文本。删除的文本本身就是字符串 &lt;var&gt;text&lt;/var&gt; 。重新插入的 &lt;code&gt;(abs &lt;var&gt;position&lt;/var&gt;)&lt;/code&gt; 是（绝对位置）。如果 &lt;var&gt;position&lt;/var&gt; 为正，则点位于已删除文本的开头，否则位于结尾。零个或多个（ &lt;var&gt;marker&lt;/var&gt; 。 &lt;var&gt;adjustment&lt;/var&gt; ）元素紧随该元素之后。</target>
        </trans-unit>
        <trans-unit id="6a92ac9457f3eba6f70af9b4039c809a618422d3" translate="yes" xml:space="preserve">
          <source>This kind of element indicates that an unmodified buffer became modified. A &lt;var&gt;time-flag&lt;/var&gt; that is a non-integer Lisp timestamp represents the visited file&amp;rsquo;s modification time as of when it was previously visited or saved, using the same format as &lt;code&gt;current-time&lt;/code&gt;; see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;. A &lt;var&gt;time-flag&lt;/var&gt; of 0 means the buffer does not correspond to any file; -1 means the visited file previously did not exist. &lt;code&gt;primitive-undo&lt;/code&gt; uses these values to determine whether to mark the buffer as unmodified once again; it does so only if the file&amp;rsquo;s status matches that of &lt;var&gt;time-flag&lt;/var&gt;.</source>
          <target state="translated">这种元素表示未修改的缓冲区已被修改。甲 &lt;var&gt;time-flag&lt;/var&gt; 是一个非整数的Lisp时间戳表示被访问的文件的修改时间当它先前被访问的或保存时，使用相同的格式的 &lt;code&gt;current-time&lt;/code&gt; ;看到&lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;一天中的时间&lt;/a&gt;。甲 &lt;var&gt;time-flag&lt;/var&gt; 的0表示的缓冲器不对应于任何文件; -1表示以前访问的文件不存在。 &lt;code&gt;primitive-undo&lt;/code&gt; 使用这些值来确定是否再次将缓冲区标记为未修改。仅当文件的状态与 &lt;var&gt;time-flag&lt;/var&gt; 匹配时才这样做。</target>
        </trans-unit>
        <trans-unit id="6026d55330e076e1b5e8302cb8cc0503f89740ae" translate="yes" xml:space="preserve">
          <source>This kind of element is similar to a char-table: the element whose index is &lt;var&gt;c&lt;/var&gt; is the binding for the character &lt;var&gt;c&lt;/var&gt;. Since the range of characters that can be bound this way is limited by the vector size, and vector creation allocates space for all character codes from 0 up, this format should not be used except for creating menu keymaps (see &lt;a href=&quot;menu-keymaps#Menu-Keymaps&quot;&gt;Menu Keymaps&lt;/a&gt;), where the bindings themselves don&amp;rsquo;t matter.</source>
          <target state="translated">这种元素类似于char-table：索引为 &lt;var&gt;c&lt;/var&gt; 的元素是字符 &lt;var&gt;c&lt;/var&gt; 的绑定。由于可以通过这种方式绑定的字符范围受到矢量大小的限制，并且矢量创建会为从0到0的所有字符代码分配空间，因此，除了创建菜单键盘映射（请参见&lt;a href=&quot;menu-keymaps#Menu-Keymaps&quot;&gt;Menu Keymaps&lt;/a&gt;）外，不应使用此格式。绑定本身并不重要。</target>
        </trans-unit>
        <trans-unit id="670442b4a298391446965e2e0895cc456c3f0e10" translate="yes" xml:space="preserve">
          <source>This kind of element records a change in a text property. Here&amp;rsquo;s how you might undo the change:</source>
          <target state="translated">这种元素记录了text属性中的更改。您可以通过以下方式撤消更改：</target>
        </trans-unit>
        <trans-unit id="7a313669cfb4c507d72ba3c18fb6c15e01e8a702" translate="yes" xml:space="preserve">
          <source>This kind of element records a previous value of point; undoing this element moves point to &lt;var&gt;position&lt;/var&gt;. Ordinary cursor motion does not make any sort of undo record, but deletion operations use these entries to record where point was before the command.</source>
          <target state="translated">这种元素记录点的先前值；撤消此元素会将点移动到 &lt;var&gt;position&lt;/var&gt; 。普通光标移动不会进行任何类型的撤消记录，但是删除操作使用这些条目来记录命令之前的点。</target>
        </trans-unit>
        <trans-unit id="74aca0d37d9ae71f2d1cc20e0acfc59942c4d78e" translate="yes" xml:space="preserve">
          <source>This kind of element records the fact that the marker &lt;var&gt;marker&lt;/var&gt; was relocated due to deletion of surrounding text, and that it moved &lt;var&gt;adjustment&lt;/var&gt; character positions. If the marker&amp;rsquo;s location is consistent with the (&lt;var&gt;text&lt;/var&gt; . &lt;var&gt;position&lt;/var&gt;) element preceding it in the undo list, then undoing this element moves &lt;var&gt;marker&lt;/var&gt; - &lt;var&gt;adjustment&lt;/var&gt; characters.</source>
          <target state="translated">这种元素记录了以下事实：标记 &lt;var&gt;marker&lt;/var&gt; 由于周围文本的删除而被重新定位，并且移动了 &lt;var&gt;adjustment&lt;/var&gt; 字符的位置。如果标记的位置是与（一致 &lt;var&gt;text&lt;/var&gt; 。 &lt;var&gt;position&lt;/var&gt; ）元件之前它在撤消列表中，则撤消该元件运动 &lt;var&gt;marker&lt;/var&gt; - &lt;var&gt;adjustment&lt;/var&gt; 字符。</target>
        </trans-unit>
        <trans-unit id="3cb3be606e59ed5b9c0a50d64b8e0f0ec983558d" translate="yes" xml:space="preserve">
          <source>This kind of event indicates that the user deiconified &lt;var&gt;frame&lt;/var&gt; using the window manager. Its standard definition is &lt;code&gt;ignore&lt;/code&gt;; since the frame has already been made visible, Emacs has no work to do.</source>
          <target state="translated">此类事件表示用户使用窗口管理器取消 &lt;var&gt;frame&lt;/var&gt; 。其标准定义为 &lt;code&gt;ignore&lt;/code&gt; ; 由于框架已经可见，因此Emacs无需做任何工作。</target>
        </trans-unit>
        <trans-unit id="b0389f029b5476e406f25371cd11ca9df6cb583e" translate="yes" xml:space="preserve">
          <source>This kind of event indicates that the user gave the window manager a command to delete a particular window, which happens to be an Emacs frame.</source>
          <target state="translated">这种事件表明,用户给窗口管理器下达了删除某个窗口的命令,而这个窗口恰好是一个Emacs框架。</target>
        </trans-unit>
        <trans-unit id="7952efff4e739b3c0fa91b6b94148a84a46261a0" translate="yes" xml:space="preserve">
          <source>This kind of event indicates that the user iconified &lt;var&gt;frame&lt;/var&gt; using the window manager. Its standard definition is &lt;code&gt;ignore&lt;/code&gt;; since the frame has already been iconified, Emacs has no work to do. The purpose of this event type is so that you can keep track of such events if you want to.</source>
          <target state="translated">此类事件表示用户使用窗口管理器将 &lt;var&gt;frame&lt;/var&gt; 图标化。其标准定义为 &lt;code&gt;ignore&lt;/code&gt; ; 由于已对框架进行了图标化，因此Emacs无需执行任何操作。此事件类型的目的是使您可以随时跟踪此类事件。</target>
        </trans-unit>
        <trans-unit id="cd97f54fd15bd9de60fe7a8f9b207a534d4fa1e6" translate="yes" xml:space="preserve">
          <source>This kind of event is generated on MS-Windows when the input language has changed. This typically means that the keyboard keys will send to Emacs characters from a different language. The generated event has this form:</source>
          <target state="translated">当输入语言发生变化时,MS-Windows上就会产生这种事件,通常这意味着键盘键会向Emacs发送不同语言的字符。这通常意味着键盘键将向Emacs发送不同语言的字符。生成的事件有这样的形式。</target>
        </trans-unit>
        <trans-unit id="ab75f1664758616d85499184fa4d2d74ea113655" translate="yes" xml:space="preserve">
          <source>This kind of event is generated only on some kinds of systems. On some systems, &lt;code&gt;mouse-4&lt;/code&gt; and &lt;code&gt;mouse-5&lt;/code&gt; are used instead. For portable code, use the variables &lt;code&gt;mouse-wheel-up-event&lt;/code&gt; and &lt;code&gt;mouse-wheel-down-event&lt;/code&gt; defined in</source>
          <target state="translated">此类事件仅在某些系统上生成。在某些系统上，改用 &lt;code&gt;mouse-4&lt;/code&gt; 和 &lt;code&gt;mouse-5&lt;/code&gt; 。对于便携式代码，使用变量 &lt;code&gt;mouse-wheel-up-event&lt;/code&gt; 和 &lt;code&gt;mouse-wheel-down-event&lt;/code&gt; 中所定义</target>
        </trans-unit>
        <trans-unit id="b769a495f9f3470b8b57a9af6ad31527bc09db20" translate="yes" xml:space="preserve">
          <source>This kind of event is generated when a group of files is selected in an application outside of Emacs, and then dragged and dropped onto an Emacs frame.</source>
          <target state="translated">当在Emacs以外的应用程序中选择一组文件,然后将其拖放到Emacs框架上时,就会产生这种事件。</target>
        </trans-unit>
        <trans-unit id="0a898ee417796d3b1ed596e28a0f7497567803e8" translate="yes" xml:space="preserve">
          <source>This kind of event is generated when a mouse pointer moves onto a portion of buffer text which has a &lt;code&gt;help-echo&lt;/code&gt; text property. The generated event has this form:</source>
          <target state="translated">当鼠标指针移到具有 &lt;code&gt;help-echo&lt;/code&gt; 文本属性的缓冲区文本的一部分上时，会生成这种事件。生成的事件具有以下形式：</target>
        </trans-unit>
        <trans-unit id="762fa25cd888c23ec4fd2eb17c0edbbe84de587e" translate="yes" xml:space="preserve">
          <source>This kind of event is generated, at present, only on some kinds of systems.</source>
          <target state="translated">这种事件的产生,目前只在某些种类的系统上。</target>
        </trans-unit>
        <trans-unit id="152b0ea6afc5e3668f3d8fd8ad4c72aca4a2bd59" translate="yes" xml:space="preserve">
          <source>This kind of input is used by commands such as &lt;code&gt;describe-key&lt;/code&gt; and &lt;code&gt;global-set-key&lt;/code&gt;.</source>
          <target state="translated">这种输入由诸如 &lt;code&gt;describe-key&lt;/code&gt; 和 &lt;code&gt;global-set-key&lt;/code&gt; 之类的命令使用。</target>
        </trans-unit>
        <trans-unit id="d8cd7e1bad968c38ed996dde43c44175da0393db" translate="yes" xml:space="preserve">
          <source>This last application is not a consequence of the idea of a parenthetical grouping; it is a separate feature that was assigned as a second meaning to the same &amp;lsquo;</source>
          <target state="translated">最后的应用不是括号分组的思想的结果；它是一个单独的功能，被分配给同一&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="945eebdaa1b234786ebd37b08ded017f1f541ffc" translate="yes" xml:space="preserve">
          <source>This last example shows that while the precedence order of action functions is fixed, as described in &lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;Choosing Window&lt;/a&gt;, an action alist entry specified by a display action ranked lower in that order can affect the execution of a higher ranked display action.</source>
          <target state="translated">最后一个示例显示，虽然动作功能的优先顺序是固定的，如&amp;ldquo;&lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;选择窗口&amp;rdquo;中所述&lt;/a&gt;，但是由按该顺序排列的较低显示动作指定的动作清单条目可能会影响较高排名的显示动作的执行。</target>
        </trans-unit>
        <trans-unit id="d08e2fc4d861b226b6fd5475d079f142eba7c3bc" translate="yes" xml:space="preserve">
          <source>This limit, with the associated error when it is exceeded, is one way Emacs Lisp avoids infinite recursion on an ill-defined function. If you increase the value of &lt;code&gt;max-lisp-eval-depth&lt;/code&gt; too much, such code can cause stack overflow instead. On some systems, this overflow can be handled. In that case, normal Lisp evaluation is interrupted and control is transferred back to the top level command loop (&lt;code&gt;top-level&lt;/code&gt;). Note that there is no way to enter Emacs Lisp debugger in this situation. See &lt;a href=&quot;error-debugging#Error-Debugging&quot;&gt;Error Debugging&lt;/a&gt;.</source>
          <target state="translated">此限制以及超过该限制时的相关错误是Emacs Lisp避免对定义不明确的函数进行无限递归的一种方式。如果过多增加 &lt;code&gt;max-lisp-eval-depth&lt;/code&gt; 的值，则此类代码可能会导致堆栈溢出。在某些系统上，可以处理此溢出。在这种情况下，正常的Lisp评估会中断，并将控制权转移回顶层命令循环（ &lt;code&gt;top-level&lt;/code&gt; ）。请注意，在这种情况下无法进入Emacs Lisp调试器。请参阅&lt;a href=&quot;error-debugging#Error-Debugging&quot;&gt;错误调试&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bcc8007c7808126b523ec31d5e48b3565a52f3b5" translate="yes" xml:space="preserve">
          <source>This limit, with the associated error when it is exceeded, is one way that Lisp avoids infinite recursion on an ill-defined function. &lt;code&gt;max-lisp-eval-depth&lt;/code&gt; provides another limit on depth of nesting. See &lt;a href=&quot;eval#Definition-of-max_002dlisp_002deval_002ddepth&quot;&gt;Eval&lt;/a&gt;.</source>
          <target state="translated">此限制以及超过该限制时的相关错误是Lisp避免对定义不明确的函数进行无限递归的一种方式。 &lt;code&gt;max-lisp-eval-depth&lt;/code&gt; 提供了嵌套深度的另一个限制。参见&lt;a href=&quot;eval#Definition-of-max_002dlisp_002deval_002ddepth&quot;&gt;Eval&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4d78e690f62161bc69da4b0989efd209c5bdb08c" translate="yes" xml:space="preserve">
          <source>This list contains one format definition for each defined file format. Each format definition is a list of this form:</source>
          <target state="translated">这个列表包含了每个定义文件格式的一个格式定义。每个格式定义都是这样的列表。</target>
        </trans-unit>
        <trans-unit id="df354d8c21824cc6e8ce1f7f3d36ad96df9240d1" translate="yes" xml:space="preserve">
          <source>This list defines the meaning and severity order of the warning severity levels. Each element defines one severity level, and they are arranged in order of decreasing severity.</source>
          <target state="translated">该列表定义了警告严重程度级别的含义和严重程度顺序。每个元素定义一个严重程度级别,它们按严重程度递减的顺序排列。</target>
        </trans-unit>
        <trans-unit id="3e2500a44049d519ddab4c6e86d75accf0d1a9e7" translate="yes" xml:space="preserve">
          <source>This list specifies which warning types should not be displayed immediately for the user. Each element of the list should be a list of symbols. If its elements match the first elements in a warning type, then that warning is not displayed immediately.</source>
          <target state="translated">这个列表指定了哪些警告类型不应该立即为用户显示。列表中的每个元素应该是一个符号列表。如果它的元素与警告类型中的第一个元素相匹配,那么该警告就不会立即显示。</target>
        </trans-unit>
        <trans-unit id="2a489bb904f4efa05b56db344d7277e660987478" translate="yes" xml:space="preserve">
          <source>This list specifies which warning types should not be logged in the warnings buffer. Each element of the list should be a list of symbols. If it matches the first few elements in a warning type, then that warning is not logged.</source>
          <target state="translated">这个列表指定了哪些警告类型不应该被记录在警告缓冲区中。列表中的每个元素应该是一个符号列表。如果它与警告类型中的前几个元素相匹配,那么该警告就不会被记录。</target>
        </trans-unit>
        <trans-unit id="1ad164428461f53ec9c5402b74b2aab4081066a7" translate="yes" xml:space="preserve">
          <source>This macro adds the quotation prefix &amp;lsquo;</source>
          <target state="translated">此宏添加引号前缀'</target>
        </trans-unit>
        <trans-unit id="7dd4c963005c973585b291aa5d7643be1547b0bc" translate="yes" xml:space="preserve">
          <source>This macro allows for more complex &lt;code&gt;setf&lt;/code&gt; expansions than the previous form. You may need to use this form, for example, if there is no simple setter function to call, or if there is one but it requires different arguments to the place form.</source>
          <target state="translated">与以前的形式相比，该宏允许更复杂的 &lt;code&gt;setf&lt;/code&gt; 扩展。例如，如果没有要调用的简单的setter函数，或者如果有一个但需要与场所表单不同的参数，则可能需要使用此表单。</target>
        </trans-unit>
        <trans-unit id="758f1ec089d15ebe80a8c17241dfb12b51b48fa5" translate="yes" xml:space="preserve">
          <source>This macro arranges to evaluate &lt;var&gt;body&lt;/var&gt; at the end of loading the file &lt;var&gt;library&lt;/var&gt;, each time &lt;var&gt;library&lt;/var&gt; is loaded. If &lt;var&gt;library&lt;/var&gt; is already loaded, it evaluates &lt;var&gt;body&lt;/var&gt; right away.</source>
          <target state="translated">这个宏整理，以评估 &lt;var&gt;body&lt;/var&gt; 在加载文件的末尾 &lt;var&gt;library&lt;/var&gt; ，每次 &lt;var&gt;library&lt;/var&gt; 被加载。如果 &lt;var&gt;library&lt;/var&gt; 已经加载，它将立即评估 &lt;var&gt;body&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="c57467ea7cad180121107de2e88fb6ef9897e91e" translate="yes" xml:space="preserve">
          <source>This macro binds the variables defined in &lt;var&gt;var-sequence&lt;/var&gt; to the values that are the corresponding elements of &lt;var&gt;val-sequence&lt;/var&gt;. This is known as &lt;em&gt;destructuring binding&lt;/em&gt;. The elements of &lt;var&gt;var-sequence&lt;/var&gt; can themselves include sequences, allowing for nested destructuring.</source>
          <target state="translated">此宏将 &lt;var&gt;var-sequence&lt;/var&gt; 中定义的变量绑定到 &lt;var&gt;val-sequence&lt;/var&gt; 的相应元素的值。这称为&lt;em&gt;解构绑定&lt;/em&gt;。 &lt;var&gt;var-sequence&lt;/var&gt; 的元素本身可以包含序列，从而允许嵌套解构。</target>
        </trans-unit>
        <trans-unit id="6f711b665c2a8ce453cb2ebda16137c0492020c9" translate="yes" xml:space="preserve">
          <source>This macro changes neither the ordering of recently selected windows nor the buffer list.</source>
          <target state="translated">这个宏既不改变最近选择的窗口的顺序,也不改变缓冲区列表。</target>
        </trans-unit>
        <trans-unit id="336ca36b3e60f284ef8f4d857ab0f0bc6028697b" translate="yes" xml:space="preserve">
          <source>This macro creates a new list whose &lt;small&gt;CAR&lt;/small&gt; is &lt;var&gt;element&lt;/var&gt; and whose &lt;small&gt;CDR&lt;/small&gt; is the list specified by &lt;var&gt;listname&lt;/var&gt;, and saves that list in &lt;var&gt;listname&lt;/var&gt;. In the simplest case, &lt;var&gt;listname&lt;/var&gt; is an unquoted symbol naming a list, and this macro is equivalent to &lt;code&gt;(setq&amp;nbsp;&lt;var&gt;listname&lt;/var&gt;&amp;nbsp;(cons&amp;nbsp;&lt;var&gt;element&lt;/var&gt;&amp;nbsp;&lt;var&gt;listname&lt;/var&gt;))&lt;/code&gt;.</source>
          <target state="translated">该宏创建一个新列表，其&lt;small&gt;CAR&lt;/small&gt;为 &lt;var&gt;element&lt;/var&gt; 并且&lt;small&gt;CDR&lt;/small&gt;为 &lt;var&gt;listname&lt;/var&gt; 指定的列表，并将该列表保存在 &lt;var&gt;listname&lt;/var&gt; 中。在最简单的情况下， &lt;var&gt;listname&lt;/var&gt; 是命名列表的不带引号的符号，并且此宏等效于 &lt;code&gt;(setq&amp;nbsp;&lt;var&gt;listname&lt;/var&gt;&amp;nbsp;(cons&amp;nbsp;&lt;var&gt;element&lt;/var&gt;&amp;nbsp;&lt;var&gt;listname&lt;/var&gt;))&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="40bbfc75de3d0eb2da70ce732701a0dd875cf1fc" translate="yes" xml:space="preserve">
          <source>This macro declares &lt;var&gt;face&lt;/var&gt; as a named face whose default face spec is given by &lt;var&gt;spec&lt;/var&gt;. You should not quote the symbol &lt;var&gt;face&lt;/var&gt;, and it should not end in &amp;lsquo;</source>
          <target state="translated">这个宏声明 &lt;var&gt;face&lt;/var&gt; 作为命名脸部其默认脸规范由给定 &lt;var&gt;spec&lt;/var&gt; 。您不应该引用符号 &lt;var&gt;face&lt;/var&gt; ，也不能以'结尾</target>
        </trans-unit>
        <trans-unit id="9f34b7009b683930f8acb38d1a8798313c8a8307" translate="yes" xml:space="preserve">
          <source>This macro declares &lt;var&gt;option&lt;/var&gt; as a user option (i.e., a customizable variable). You should not quote &lt;var&gt;option&lt;/var&gt;.</source>
          <target state="translated">该宏将 &lt;var&gt;option&lt;/var&gt; 声明为用户选项（即，可自定义的变量）。您不应该引用 &lt;var&gt;option&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="2dfe746bac95bbefea5c1811fe5a6eda9b910ee0" translate="yes" xml:space="preserve">
          <source>This macro declares &lt;var&gt;theme&lt;/var&gt; (a symbol) as the name of a Custom theme. The optional argument &lt;var&gt;doc&lt;/var&gt; should be a string describing the theme; this is the description shown when the user invokes the &lt;code&gt;describe-theme&lt;/code&gt; command or types</source>
          <target state="translated">此宏将 &lt;var&gt;theme&lt;/var&gt; （符号）声明为自定义主题的名称。可选参数 &lt;var&gt;doc&lt;/var&gt; 应该是描述主题的字符串；这是用户调用 &lt;code&gt;describe-theme&lt;/code&gt; 命令或类型时显示的描述</target>
        </trans-unit>
        <trans-unit id="4518c52ab2f4211c21f7c20ef2c1d6d61487464c" translate="yes" xml:space="preserve">
          <source>This macro declares that the theme named &lt;var&gt;theme&lt;/var&gt; has been fully specified.</source>
          <target state="translated">此宏声明已完全指定名为 &lt;var&gt;theme&lt;/var&gt; 的主题。</target>
        </trans-unit>
        <trans-unit id="e51efd2a81640a3eaa23b7ac36af0f12627a503f" translate="yes" xml:space="preserve">
          <source>This macro defines &lt;code&gt;obsolete-face&lt;/code&gt; as an alias for &lt;var&gt;current-face&lt;/var&gt;, and also marks it as obsolete, indicating that it may be removed in future. &lt;var&gt;when&lt;/var&gt; should be a string indicating when &lt;code&gt;obsolete-face&lt;/code&gt; was made obsolete (usually a version number string).</source>
          <target state="translated">此宏将 &lt;code&gt;obsolete-face&lt;/code&gt; 定义为 &lt;var&gt;current-face&lt;/var&gt; 的别名，并且还将其标记为过时的，表示将来可能会删除它。 &lt;var&gt;when&lt;/var&gt; 应该是一个指示 &lt;code&gt;obsolete-face&lt;/code&gt; 字体（通常是版本号字符串）。</target>
        </trans-unit>
        <trans-unit id="af478a0091278edd21c33f699593f63d6a3b16e9" translate="yes" xml:space="preserve">
          <source>This macro defines &lt;var&gt;symbol&lt;/var&gt; as an image name. The arguments &lt;var&gt;specs&lt;/var&gt; is a list which specifies how to display the image. The third argument, &lt;var&gt;doc&lt;/var&gt;, is an optional documentation string.</source>
          <target state="translated">该宏将 &lt;var&gt;symbol&lt;/var&gt; 定义为图像名称。参数 &lt;var&gt;specs&lt;/var&gt; 是一个指定如何显示图像的列表。第三个参数 &lt;var&gt;doc&lt;/var&gt; 是可选的文档字符串。</target>
        </trans-unit>
        <trans-unit id="7eca1fac075588092c93c9ef94fd2185bba6a5ed" translate="yes" xml:space="preserve">
          <source>This macro defines &lt;var&gt;variable&lt;/var&gt; as a variable with initial value &lt;var&gt;value&lt;/var&gt; and &lt;var&gt;docstring&lt;/var&gt;, and marks it as automatically buffer-local. It is equivalent to calling &lt;code&gt;defvar&lt;/code&gt; followed by &lt;code&gt;make-variable-buffer-local&lt;/code&gt;. &lt;var&gt;variable&lt;/var&gt; should be an unquoted symbol.</source>
          <target state="translated">此宏将 &lt;var&gt;variable&lt;/var&gt; 定义为具有初始值 &lt;var&gt;value&lt;/var&gt; 和 &lt;var&gt;docstring&lt;/var&gt; 的变量，并将其标记为自动本地缓冲区。它等效于调用 &lt;code&gt;defvar&lt;/code&gt; ,然后调用 &lt;code&gt;make-variable-buffer-local&lt;/code&gt; 。 &lt;var&gt;variable&lt;/var&gt; 应为未加引号的符号。</target>
        </trans-unit>
        <trans-unit id="d064b45275a2c98f8eb0eefcc1a0a5b56ffc1c2e" translate="yes" xml:space="preserve">
          <source>This macro defines &lt;var&gt;variant&lt;/var&gt; as a major mode command, using &lt;var&gt;name&lt;/var&gt; as the string form of the mode name. &lt;var&gt;variant&lt;/var&gt; and &lt;var&gt;parent&lt;/var&gt; should be unquoted symbols.</source>
          <target state="translated">这个宏定义 &lt;var&gt;variant&lt;/var&gt; 作为主要模式的命令，使用 &lt;var&gt;name&lt;/var&gt; 作为模式名称的字符串形式。 &lt;var&gt;variant&lt;/var&gt; 和 &lt;var&gt;parent&lt;/var&gt; 应未加引号</target>
        </trans-unit>
        <trans-unit id="e880807d5cb4a8f957d3faabeec3ce262fd66e92" translate="yes" xml:space="preserve">
          <source>This macro defines a generic function with the specified &lt;var&gt;name&lt;/var&gt; and &lt;var&gt;arguments&lt;/var&gt;. If &lt;var&gt;body&lt;/var&gt; is present, it provides the default implementation. If &lt;var&gt;documentation&lt;/var&gt; is present (it should always be), it specifies the documentation string for the generic function, in the form &lt;code&gt;(:documentation &lt;var&gt;docstring&lt;/var&gt;)&lt;/code&gt;. The optional &lt;var&gt;options-and-methods&lt;/var&gt; can be one of the following forms:</source>
          <target state="translated">该宏定义具有指定 &lt;var&gt;name&lt;/var&gt; 和 &lt;var&gt;arguments&lt;/var&gt; 的泛型函数。如果存在 &lt;var&gt;body&lt;/var&gt; ，它将提供默认实现。如果存在 &lt;var&gt;documentation&lt;/var&gt; （应该始终存在），它将以 &lt;code&gt;(:documentation &lt;var&gt;docstring&lt;/var&gt;)&lt;/code&gt; 的形式指定通用函数的文档字符串。可选的 &lt;var&gt;options-and-methods&lt;/var&gt; 可以是以下形式之一：</target>
        </trans-unit>
        <trans-unit id="a1581bdfea49b7d91c21dea9fde0735a6274156d" translate="yes" xml:space="preserve">
          <source>This macro defines a generic mode command named &lt;var&gt;mode&lt;/var&gt; (a symbol, not quoted). The optional argument &lt;var&gt;docstring&lt;/var&gt; is the documentation for the mode command. If you do not supply it, &lt;code&gt;define-generic-mode&lt;/code&gt; generates one by default.</source>
          <target state="translated">该宏定义了一个名为 &lt;var&gt;mode&lt;/var&gt; 的通用模式命令（一个符号，未加引号）。可选参数 &lt;var&gt;docstring&lt;/var&gt; 是mode命令的文档。如果您不提供它，则默认情况下 &lt;code&gt;define-generic-mode&lt;/code&gt; 会生成一个。</target>
        </trans-unit>
        <trans-unit id="fc780370bfdcea66201ad2e2e48a85cad452cdef" translate="yes" xml:space="preserve">
          <source>This macro defines a help command named &lt;var&gt;fname&lt;/var&gt; that acts like a prefix key that shows a list of the subcommands it offers.</source>
          <target state="translated">该宏定义了一个名为 &lt;var&gt;fname&lt;/var&gt; 的帮助命令，该命令的作用类似于一个前缀键，该前缀键显示了它提供的子命令的列表。</target>
        </trans-unit>
        <trans-unit id="ccb93ffc23f150e9bd4d87e556589184b1606d91" translate="yes" xml:space="preserve">
          <source>This macro defines a new minor mode whose name is &lt;var&gt;mode&lt;/var&gt; (a symbol). It defines a command named &lt;var&gt;mode&lt;/var&gt; to toggle the minor mode, with &lt;var&gt;doc&lt;/var&gt; as its documentation string.</source>
          <target state="translated">该宏定义了一个新的次要模式，其名称为 &lt;var&gt;mode&lt;/var&gt; （符号）。它定义了一个名为 &lt;var&gt;mode&lt;/var&gt; 的命令来切换次要模式，并以 &lt;var&gt;doc&lt;/var&gt; 作为其文档字符串。</target>
        </trans-unit>
        <trans-unit id="b5d66b480e164cdf0b5c545618b56e07bcfa1492" translate="yes" xml:space="preserve">
          <source>This macro defines a particular implementation for the generic function called &lt;var&gt;name&lt;/var&gt;. The implementation code is given by &lt;var&gt;body&lt;/var&gt;. If present, &lt;var&gt;docstring&lt;/var&gt; is the documentation string for the method. The &lt;var&gt;arguments&lt;/var&gt; list, which must be identical in all the methods that implement a generic function, and must match the argument list of that function, provides argument specializers of the form &lt;code&gt;(&lt;var&gt;arg&lt;/var&gt; &lt;var&gt;spec&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;arg&lt;/var&gt; is the argument name as specified in the &lt;code&gt;cl-defgeneric&lt;/code&gt; call, and &lt;var&gt;spec&lt;/var&gt; is one of the following specializer forms:</source>
          <target state="translated">该宏为名为 &lt;var&gt;name&lt;/var&gt; 的泛型函数定义了一种特定的实现。实现代码由 &lt;var&gt;body&lt;/var&gt; 给出。 &lt;var&gt;docstring&lt;/var&gt; （如果存在）是该方法的文档字符串。的 &lt;var&gt;arguments&lt;/var&gt; 列表，它必须是在所有实现的通用功能，并且必须在该函数的参数列表匹配的方法是相同的，提供的形式的参数specializers &lt;code&gt;(&lt;var&gt;arg&lt;/var&gt; &lt;var&gt;spec&lt;/var&gt;)&lt;/code&gt; ，其中 &lt;var&gt;arg&lt;/var&gt; 是如在指定的参数名称 &lt;code&gt;cl-defgeneric&lt;/code&gt; 调用，并且 &lt;var&gt;spec&lt;/var&gt; 是以下专门化形式之一：</target>
        </trans-unit>
        <trans-unit id="1bf762513226f9e0d0c76fe0ab01e192966cff40" translate="yes" xml:space="preserve">
          <source>This macro defines a piece of advice and adds it to the function named &lt;var&gt;symbol&lt;/var&gt;. The advice is an anonymous function if &lt;var&gt;name&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or a function named &lt;code&gt;symbol@name&lt;/code&gt;. See &lt;code&gt;advice-add&lt;/code&gt; for explanation of other arguments.</source>
          <target state="translated">该宏定义了一条建议，并将其添加到名为 &lt;var&gt;symbol&lt;/var&gt; 的函数中。如果 &lt;var&gt;name&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ,则该建议为匿名函数，或者为 &lt;code&gt;symbol@name&lt;/code&gt; 。有关其他参数的说明，请参见 &lt;code&gt;advice-add&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="df2969a08f4547b130e03b348f89af4cba3fe3fe" translate="yes" xml:space="preserve">
          <source>This macro defines a pop-up menu and/or menu bar submenu, whose contents are given by &lt;var&gt;menu&lt;/var&gt;.</source>
          <target state="translated">该宏定义了一个弹出菜单和/或菜单栏子菜单，其内容由 &lt;var&gt;menu&lt;/var&gt; 给出。</target>
        </trans-unit>
        <trans-unit id="bd6879d6f7772948c4277202d4a6fc769b411940" translate="yes" xml:space="preserve">
          <source>This macro defines an inline function. Its syntax is exactly the same as &lt;code&gt;defun&lt;/code&gt; (see &lt;a href=&quot;defining-functions#Defining-Functions&quot;&gt;Defining Functions&lt;/a&gt;).</source>
          <target state="translated">该宏定义了一个内联函数。其语法与 &lt;code&gt;defun&lt;/code&gt; 完全相同（请参见&lt;a href=&quot;defining-functions#Defining-Functions&quot;&gt;定义函数&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="0ddeba2369fd28d40fefa3dde64629d58a6b1f8a" translate="yes" xml:space="preserve">
          <source>This macro does not call &lt;code&gt;temp-buffer-show-function&lt;/code&gt;. Rather, it passes the &lt;var&gt;action&lt;/var&gt; argument to &lt;code&gt;display-buffer&lt;/code&gt; (see &lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;Choosing Window&lt;/a&gt;) in order to display the buffer.</source>
          <target state="translated">此宏不会调用 &lt;code&gt;temp-buffer-show-function&lt;/code&gt; 。而是将 &lt;var&gt;action&lt;/var&gt; 参数传递给 &lt;code&gt;display-buffer&lt;/code&gt; （请参见&lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;选择Window&lt;/a&gt;）以显示缓冲区。</target>
        </trans-unit>
        <trans-unit id="d8b213d179e92ff57cb3f968b254741602508713" translate="yes" xml:space="preserve">
          <source>This macro does not save or restore anything about the sizes, arrangement or contents of windows; therefore, if &lt;var&gt;forms&lt;/var&gt; change them, the change persists. If the previously selected window of some frame is no longer live at the time of exit from &lt;var&gt;forms&lt;/var&gt;, that frame&amp;rsquo;s selected window is left alone. If the previously selected window is no longer live, then whatever window is selected at the end of &lt;var&gt;forms&lt;/var&gt; remains selected. The current buffer is restored if and only if it is still live when exiting &lt;var&gt;forms&lt;/var&gt;.</source>
          <target state="translated">该宏不会保存或恢复有关窗口的大小，排列或内容的任何内容；因此，如果 &lt;var&gt;forms&lt;/var&gt; 更改了它们，则更改仍然存在。如果从 &lt;var&gt;forms&lt;/var&gt; 退出时某个框架的先前选择的窗口不再存在，则将该框架的选定窗口保留下来。如果先前选择的窗口不再活动，则在 &lt;var&gt;forms&lt;/var&gt; 末尾选择的任何窗口都将保持选中状态。当前缓冲区仅在退出 &lt;var&gt;forms&lt;/var&gt; 时仍处于活动状态时才被恢复。</target>
        </trans-unit>
        <trans-unit id="ae86586511d482808422d2e50c0a731fbe37e34b" translate="yes" xml:space="preserve">
          <source>This macro enables you to easily define &lt;code&gt;setf&lt;/code&gt; methods for simple cases. &lt;var&gt;name&lt;/var&gt; is the name of a function, macro, or special form. You can use this macro whenever &lt;var&gt;name&lt;/var&gt; has a directly corresponding &lt;var&gt;setter&lt;/var&gt; function that updates it, e.g., &lt;code&gt;(gv-define-simple-setter car setcar)&lt;/code&gt;.</source>
          <target state="translated">通过此宏，您可以轻松地为简单情况定义 &lt;code&gt;setf&lt;/code&gt; 方法。 &lt;var&gt;name&lt;/var&gt; 是函数，宏或特殊形式的名称。只要 &lt;var&gt;name&lt;/var&gt; 具有直接对应的 &lt;var&gt;setter&lt;/var&gt; 函数来对其进行更新，例如 &lt;code&gt;(gv-define-simple-setter car setcar)&lt;/code&gt; ，就可以使用此宏。</target>
        </trans-unit>
        <trans-unit id="1fb902944dc65c2f932044169c8fcd9b76aaa264" translate="yes" xml:space="preserve">
          <source>This macro evaluates &lt;var&gt;body&lt;/var&gt; like &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt; (see &lt;a href=&quot;temporary-displays#Temporary-Displays&quot;&gt;Temporary Displays&lt;/a&gt;), inserting any output produced by its forms into a buffer specified by &lt;var&gt;buffer-or-name&lt;/var&gt;, which can be a buffer or the name of a buffer. (Frequently, &lt;var&gt;buffer-or-name&lt;/var&gt; is the value returned by the function &lt;code&gt;help-buffer&lt;/code&gt;.) This macro puts the specified buffer into Help mode and displays a message telling the user how to quit and scroll the help window. It selects the help window if the current value of the user option &lt;code&gt;help-window-select&lt;/code&gt; has been set accordingly. It returns the last value in &lt;var&gt;body&lt;/var&gt;.</source>
          <target state="translated">此宏对 &lt;var&gt;body&lt;/var&gt; 评估类似于 &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt; （请参阅&lt;a href=&quot;temporary-displays#Temporary-Displays&quot;&gt;临时显示&lt;/a&gt;），将其形式产生的所有输出插入到 &lt;var&gt;buffer-or-name&lt;/var&gt; 指定的缓冲区中，该缓冲区可以是一个缓冲区或一个缓冲区的名称。 （通常， &lt;var&gt;buffer-or-name&lt;/var&gt; 是 &lt;code&gt;help-buffer&lt;/code&gt; 函数返回的值。）此宏将指定的缓冲区置于&amp;ldquo;帮助&amp;rdquo;模式，并显示一条消息，告诉用户如何退出和滚动帮助窗口。如果已经相应设置了用户选项 &lt;code&gt;help-window-select&lt;/code&gt; 的当前值，它将选择帮助窗口。它返回 &lt;var&gt;body&lt;/var&gt; 中的最后一个值。</target>
        </trans-unit>
        <trans-unit id="6f61480d39d1ecb235b2cc0fd2383304353fc547" translate="yes" xml:space="preserve">
          <source>This macro evaluates &lt;var&gt;form&lt;/var&gt; and stores it in &lt;var&gt;place&lt;/var&gt;, which must be a valid generalized variable form. If there are several &lt;var&gt;place&lt;/var&gt; and &lt;var&gt;form&lt;/var&gt; pairs, the assignments are done sequentially just as with &lt;code&gt;setq&lt;/code&gt;. &lt;code&gt;setf&lt;/code&gt; returns the value of the last &lt;var&gt;form&lt;/var&gt;.</source>
          <target state="translated">此宏评估 &lt;var&gt;form&lt;/var&gt; 并将其存储在 &lt;var&gt;place&lt;/var&gt; ，该形式必须是有效的广义变量形式。如果存在多个 &lt;var&gt;place&lt;/var&gt; 和 &lt;var&gt;form&lt;/var&gt; 对，则分配将与 &lt;code&gt;setq&lt;/code&gt; 一样顺序进行。 &lt;code&gt;setf&lt;/code&gt; 返回最后一个 &lt;var&gt;form&lt;/var&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="7abb8da61962a11ab49639b003be6d8bb328d07a" translate="yes" xml:space="preserve">
          <source>This macro evaluates the &lt;var&gt;body&lt;/var&gt; forms with the default permissions for new files temporarily set to &lt;var&gt;modes&lt;/var&gt; (whose value is as for &lt;code&gt;set-file-modes&lt;/code&gt; above). When finished, it restores the original default file permissions, and returns the value of the last form in &lt;var&gt;body&lt;/var&gt;.</source>
          <target state="translated">这个宏评估 &lt;var&gt;body&lt;/var&gt; 形式与临时设置为新文件的默认权限 &lt;var&gt;modes&lt;/var&gt; （其值作为 &lt;code&gt;set-file-modes&lt;/code&gt; 上图）。完成后，它将恢复原始的默认文件权限，并返回 &lt;var&gt;body&lt;/var&gt; 中最后一个表单的值。</target>
        </trans-unit>
        <trans-unit id="b129de8793865baa627dc72e801c91e5f70bb260" translate="yes" xml:space="preserve">
          <source>This macro executes &lt;var&gt;body&lt;/var&gt; after arranging for the specified &lt;var&gt;function&lt;/var&gt; to be called via &lt;code&gt;minibuffer-setup-hook&lt;/code&gt;. By default, &lt;var&gt;function&lt;/var&gt; is called before the other functions in the &lt;code&gt;minibuffer-setup-hook&lt;/code&gt; list, but if &lt;var&gt;function&lt;/var&gt; is of the form &lt;code&gt;(:append&amp;nbsp;&lt;var&gt;func&lt;/var&gt;)&lt;/code&gt;, &lt;var&gt;func&lt;/var&gt; will be called &lt;em&gt;after&lt;/em&gt; the other hook functions.</source>
          <target state="translated">该宏在安排了要通过 &lt;code&gt;minibuffer-setup-hook&lt;/code&gt; 调用的指定 &lt;var&gt;function&lt;/var&gt; 之后执行 &lt;var&gt;body&lt;/var&gt; 。默认情况下， &lt;var&gt;function&lt;/var&gt; 在 &lt;code&gt;minibuffer-setup-hook&lt;/code&gt; 列表中的其他函数之前被调用，但是如果 &lt;var&gt;function&lt;/var&gt; 的形式为 &lt;code&gt;(:append&amp;nbsp;&lt;var&gt;func&lt;/var&gt;)&lt;/code&gt; &lt;var&gt;func&lt;/var&gt; ），则 &lt;var&gt;func&lt;/var&gt; 将在其他钩子函数&lt;em&gt;之后&lt;/em&gt;被调用。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="27e32e2f6b35805b4a22fbfa454e0d6c350e2f0c" translate="yes" xml:space="preserve">
          <source>This macro executes &lt;var&gt;body&lt;/var&gt; forms in sequence, but allows quitting, at least locally, within &lt;var&gt;body&lt;/var&gt; even if &lt;code&gt;inhibit-quit&lt;/code&gt; was non-&lt;code&gt;nil&lt;/code&gt; outside this construct. It returns the value of the last form in &lt;var&gt;body&lt;/var&gt;, unless exited by quitting, in which case it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">该宏执行 &lt;var&gt;body&lt;/var&gt; 形式的序列，但允许退出，至少在局部，内 &lt;var&gt;body&lt;/var&gt; 即使 &lt;code&gt;inhibit-quit&lt;/code&gt; 是不 &lt;code&gt;nil&lt;/code&gt; 这个结构之外。它返回 &lt;var&gt;body&lt;/var&gt; 中最后一个形式的值，除非通过退出退出，否则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4079406b3a31f1f7d3beeb0e88719167b46392b2" translate="yes" xml:space="preserve">
          <source>This macro executes &lt;var&gt;body&lt;/var&gt; using &lt;var&gt;table&lt;/var&gt; as the current syntax table. It returns the value of the last form in &lt;var&gt;body&lt;/var&gt;, after restoring the old current syntax table.</source>
          <target state="translated">该宏使用 &lt;var&gt;table&lt;/var&gt; 作为当前语法表来执行 &lt;var&gt;body&lt;/var&gt; 。恢复旧的当前语法表后，它返回 &lt;var&gt;body&lt;/var&gt; 中最后一个形式的值。</target>
        </trans-unit>
        <trans-unit id="a87f12335539ef121c88feeedfb11d453188e0d7" translate="yes" xml:space="preserve">
          <source>This macro executes &lt;var&gt;body&lt;/var&gt;, but tells all &lt;code&gt;run-mode-hooks&lt;/code&gt; calls during the execution of &lt;var&gt;body&lt;/var&gt; to delay running their hooks. The hooks will actually run during the next call to &lt;code&gt;run-mode-hooks&lt;/code&gt; after the end of the &lt;code&gt;delay-mode-hooks&lt;/code&gt; construct.</source>
          <target state="translated">该宏执行 &lt;var&gt;body&lt;/var&gt; ，但是在 &lt;var&gt;body&lt;/var&gt; 执行期间告诉所有 &lt;code&gt;run-mode-hooks&lt;/code&gt; 调用以延迟其钩子的运行。这些钩子实际上将在 &lt;code&gt;delay-mode-hooks&lt;/code&gt; 构造结束后的下一次对 &lt;code&gt;run-mode-hooks&lt;/code&gt; 的调用中运行。</target>
        </trans-unit>
        <trans-unit id="3be2fcb384655deb63d77c707b73dc06109fc91b" translate="yes" xml:space="preserve">
          <source>This macro executes &lt;var&gt;body&lt;/var&gt;, like &lt;code&gt;progn&lt;/code&gt; does (see &lt;a href=&quot;sequencing#Sequencing&quot;&gt;progn&lt;/a&gt;), with &lt;var&gt;coding-systems&lt;/var&gt; at the front of the priority list for coding systems. &lt;var&gt;coding-systems&lt;/var&gt; should be a list of coding systems to prefer during execution of &lt;var&gt;body&lt;/var&gt;.</source>
          <target state="translated">该宏执行 &lt;var&gt;body&lt;/var&gt; ，像 &lt;code&gt;progn&lt;/code&gt; 这个呢（见&lt;a href=&quot;sequencing#Sequencing&quot;&gt;progn这个&lt;/a&gt;），用 &lt;var&gt;coding-systems&lt;/var&gt; 的编码系统优先级列表的前面。 &lt;var&gt;coding-systems&lt;/var&gt; 应该是在 &lt;var&gt;body&lt;/var&gt; 执行期间更喜欢的编码系统列表。</target>
        </trans-unit>
        <trans-unit id="7ae966482029b97e67b7005a2ce5f7d6b14afae5" translate="yes" xml:space="preserve">
          <source>This macro executes &lt;var&gt;body&lt;/var&gt;, saving and restoring the match data around it. The return value is the value of the last form in &lt;var&gt;body&lt;/var&gt;.</source>
          <target state="translated">该宏执行 &lt;var&gt;body&lt;/var&gt; ，并保存和恢复周围的匹配数据。返回值是 &lt;var&gt;body&lt;/var&gt; 中最后一个形式的值。</target>
        </trans-unit>
        <trans-unit id="f640cea389a3967eacb832ab28e86e3a59cb68ee" translate="yes" xml:space="preserve">
          <source>This macro executes &lt;var&gt;body&lt;/var&gt;, with generation of mouse motion events enabled. Typically, &lt;var&gt;body&lt;/var&gt; would use &lt;code&gt;read-event&lt;/code&gt; to read the motion events and modify the display accordingly. See &lt;a href=&quot;motion-events#Motion-Events&quot;&gt;Motion Events&lt;/a&gt;, for the format of mouse motion events.</source>
          <target state="translated">该宏执行 &lt;var&gt;body&lt;/var&gt; ，并且启用了鼠标运动事件的生成。通常， &lt;var&gt;body&lt;/var&gt; 将使用 &lt;code&gt;read-event&lt;/code&gt; 来读取运动事件并相应地修改显示。见&lt;a href=&quot;motion-events#Motion-Events&quot;&gt;运动事件&lt;/a&gt;，对于鼠标移动事件的格式。</target>
        </trans-unit>
        <trans-unit id="8745bde0573038b4f2bad95e7448ff5307d09cbc" translate="yes" xml:space="preserve">
          <source>This macro executes the &lt;var&gt;body&lt;/var&gt; forms with &lt;code&gt;standard-output&lt;/code&gt; set up to feed output into a string. Then it returns that string.</source>
          <target state="translated">此宏通过设置 &lt;code&gt;standard-output&lt;/code&gt; 来执行 &lt;var&gt;body&lt;/var&gt; 形式，以将输出馈送到字符串中。然后返回该字符串。</target>
        </trans-unit>
        <trans-unit id="ac571b79dcf83497cdc095b4b88a5f08d1b0feda" translate="yes" xml:space="preserve">
          <source>This macro expands the form &lt;code&gt;(setf (&lt;var&gt;name&lt;/var&gt; &lt;var&gt;args&lt;/var&gt;&amp;hellip;) &lt;var&gt;value&lt;/var&gt;)&lt;/code&gt; by first binding the &lt;code&gt;setf&lt;/code&gt; argument forms &lt;code&gt;(&lt;var&gt;value&lt;/var&gt; &lt;var&gt;args&lt;/var&gt;&amp;hellip;)&lt;/code&gt; according to &lt;var&gt;arglist&lt;/var&gt;, and then executing &lt;var&gt;body&lt;/var&gt;. &lt;var&gt;body&lt;/var&gt; should return a Lisp form that does the assignment, and finally returns the value that was set. An example of using this macro is:</source>
          <target state="translated">该宏通过首先根据 &lt;var&gt;arglist&lt;/var&gt; 绑定 &lt;code&gt;setf&lt;/code&gt; 参数形式 &lt;code&gt;(&lt;var&gt;value&lt;/var&gt; &lt;var&gt;args&lt;/var&gt;&amp;hellip;)&lt;/code&gt; &lt;var&gt;value&lt;/var&gt; &lt;var&gt;args&lt;/var&gt; &amp;hellip;），然后执行 &lt;var&gt;body&lt;/var&gt; 来扩展形式 &lt;code&gt;(setf (&lt;var&gt;name&lt;/var&gt; &lt;var&gt;args&lt;/var&gt;&amp;hellip;) &lt;var&gt;value&lt;/var&gt;)&lt;/code&gt; 。 &lt;var&gt;body&lt;/var&gt; 应该返回一个执行任务的Lisp表单，最后返回设置的值。使用此宏的一个示例是：</target>
        </trans-unit>
        <trans-unit id="d7975753990e004132a21e45f607c6a80990bd7b" translate="yes" xml:space="preserve">
          <source>This macro expands to a constant expression specifying the maximum possible value for an &lt;code&gt;emacs_limb_t&lt;/code&gt; object. The expression is suitable for use in &lt;code&gt;#if&lt;/code&gt;.</source>
          <target state="translated">该宏扩展为一个常量表达式，为 &lt;code&gt;emacs_limb_t&lt;/code&gt; 对象指定最大可能值。该表达式适合在 &lt;code&gt;#if&lt;/code&gt; 中使用。</target>
        </trans-unit>
        <trans-unit id="e60951e2d0ea406aacfcfbca8044c42e0c4d8865" translate="yes" xml:space="preserve">
          <source>This macro expands, if appropriate, into a call to &lt;code&gt;set-buffer-multibyte&lt;/code&gt; that will be executed when the compiled program is actually run.</source>
          <target state="translated">如果合适，此宏可扩展为对 &lt;code&gt;set-buffer-multibyte&lt;/code&gt; 的调用，该调用将在编译程序实际运行时执行。</target>
        </trans-unit>
        <trans-unit id="dfcf74ca1d7f576cf6dad74cd20210b20966a147" translate="yes" xml:space="preserve">
          <source>This macro ignores its arguments and evaluates to &lt;code&gt;nil&lt;/code&gt;; it has no run-time effect. However, when a &lt;code&gt;declare&lt;/code&gt; form occurs in the &lt;var&gt;declare&lt;/var&gt; argument of a &lt;code&gt;defun&lt;/code&gt; or &lt;code&gt;defsubst&lt;/code&gt; function definition (see &lt;a href=&quot;defining-functions#Defining-Functions&quot;&gt;Defining Functions&lt;/a&gt;) or a &lt;code&gt;defmacro&lt;/code&gt; macro definition (see &lt;a href=&quot;defining-macros#Defining-Macros&quot;&gt;Defining Macros&lt;/a&gt;), it appends the properties specified by &lt;var&gt;specs&lt;/var&gt; to the function or macro. This work is specially performed by &lt;code&gt;defun&lt;/code&gt;, &lt;code&gt;defsubst&lt;/code&gt;, and &lt;code&gt;defmacro&lt;/code&gt;.</source>
          <target state="translated">这个宏忽略它的参数并计算为 &lt;code&gt;nil&lt;/code&gt; ; 它没有运行时效果。然而，当 &lt;code&gt;declare&lt;/code&gt; 表格中发生 &lt;var&gt;declare&lt;/var&gt; 一个的参数 &lt;code&gt;defun&lt;/code&gt; 定义或 &lt;code&gt;defsubst&lt;/code&gt; 函数定义（见&lt;a href=&quot;defining-functions#Defining-Functions&quot;&gt;函数定义&lt;/a&gt;）或 &lt;code&gt;defmacro&lt;/code&gt; 宏定义（见&lt;a href=&quot;defining-macros#Defining-Macros&quot;&gt;定义宏&lt;/a&gt;），它通过附加指定的属性 &lt;var&gt;specs&lt;/var&gt; 的功能或宏。这项工作是由专门进行 &lt;code&gt;defun&lt;/code&gt; 定义， &lt;code&gt;defsubst&lt;/code&gt; 和 &lt;code&gt;defmacro&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fde95a9f8f52ccfb477529a522c6da3d80c48947" translate="yes" xml:space="preserve">
          <source>This macro is analogous to &lt;code&gt;let&lt;/code&gt; but creates &amp;ldquo;lazy&amp;rdquo; variable bindings. Any binding has the form &lt;code&gt;(&lt;var&gt;symbol&lt;/var&gt;&amp;nbsp;&lt;var&gt;value-form&lt;/var&gt;)&lt;/code&gt;. Unlike &lt;code&gt;let&lt;/code&gt;, the evaluation of any &lt;var&gt;value-form&lt;/var&gt; is deferred until the binding of the according &lt;var&gt;symbol&lt;/var&gt; is used for the first time when evaluating the &lt;var&gt;forms&lt;/var&gt;. Any &lt;var&gt;value-form&lt;/var&gt; is evaluated at most once. Using this macro requires &lt;code&gt;lexical-binding&lt;/code&gt;.</source>
          <target state="translated">该宏类似于 &lt;code&gt;let&lt;/code&gt; ,但是创建了&amp;ldquo;惰性&amp;rdquo;变量绑定。任何绑定都具有形式 &lt;code&gt;(&lt;var&gt;symbol&lt;/var&gt;&amp;nbsp;&lt;var&gt;value-form&lt;/var&gt;)&lt;/code&gt; 。与 &lt;code&gt;let&lt;/code&gt; 不同，对任何 &lt;var&gt;value-form&lt;/var&gt; 的评估都将推迟到对 &lt;var&gt;forms&lt;/var&gt; 评估时第一次使用相应 &lt;var&gt;symbol&lt;/var&gt; 的绑定。任何 &lt;var&gt;value-form&lt;/var&gt; 最多只能评估一次。使用此宏需要 &lt;code&gt;lexical-binding&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="240dcb5abf7ca46c0582e74a1ff5a3636c413914" translate="yes" xml:space="preserve">
          <source>This macro is like &lt;code&gt;dolist&lt;/code&gt; (see &lt;a href=&quot;iteration#Iteration&quot;&gt;dolist&lt;/a&gt;), except that &lt;var&gt;sequence&lt;/var&gt; can be a list, vector or string. This is primarily useful for side-effects.</source>
          <target state="translated">此宏类似于 &lt;code&gt;dolist&lt;/code&gt; （请参见&lt;a href=&quot;iteration#Iteration&quot;&gt;dolist&lt;/a&gt;），不同之处在于 &lt;var&gt;sequence&lt;/var&gt; 可以是列表，向量或字符串。这主要用于副作用。</target>
        </trans-unit>
        <trans-unit id="0b40c16c0c4b7a44ed78164f4e17c79e9f8efc88" translate="yes" xml:space="preserve">
          <source>This macro is like &lt;code&gt;ignore-errors&lt;/code&gt;, but will only ignore the specific error condition specified.</source>
          <target state="translated">该宏就像 &lt;code&gt;ignore-errors&lt;/code&gt; 一样，但是只会忽略指定的特定错误条件。</target>
        </trans-unit>
        <trans-unit id="adc365839652648d99b231687a1c47add543bb61" translate="yes" xml:space="preserve">
          <source>This macro is like &lt;code&gt;save-excursion&lt;/code&gt;, but also saves and restores the mark location and &lt;code&gt;mark-active&lt;/code&gt;. This macro does what &lt;code&gt;save-excursion&lt;/code&gt; did before Emacs 25.1.</source>
          <target state="translated">该宏就像 &lt;code&gt;save-excursion&lt;/code&gt; 一样，但是也保存和恢复标记位置和 &lt;code&gt;mark-active&lt;/code&gt; 。这个宏完成了Emacs 25.1之前 &lt;code&gt;save-excursion&lt;/code&gt; 的工作。</target>
        </trans-unit>
        <trans-unit id="9c8d159bb45571cc00a640c67ecde9318447b2a3" translate="yes" xml:space="preserve">
          <source>This macro is like &lt;code&gt;with-current-buffer-window&lt;/code&gt; but unlike that displays the buffer specified by &lt;var&gt;buffer-or-name&lt;/var&gt;&lt;em&gt;before&lt;/em&gt; running &lt;var&gt;body&lt;/var&gt;.</source>
          <target state="translated">该宏类似于 &lt;code&gt;with-current-buffer-window&lt;/code&gt; ,但与之不同的是，它&lt;em&gt;在&lt;/em&gt;运行 &lt;var&gt;body&lt;/var&gt; &lt;em&gt;之前&lt;/em&gt;显示由 &lt;var&gt;buffer-or-name&lt;/var&gt; 指定的缓冲区。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c9c606e79e4f7d9aac9955c81c88d2abfd952ab5" translate="yes" xml:space="preserve">
          <source>This macro is like &lt;code&gt;with-temp-buffer-window&lt;/code&gt; but unlike that makes the buffer specified by &lt;var&gt;buffer-or-name&lt;/var&gt; current for running &lt;var&gt;body&lt;/var&gt;.</source>
          <target state="translated">这个宏就像 &lt;code&gt;with-temp-buffer-window&lt;/code&gt; 一样，但是与之不同的是，它使当前运行中 &lt;var&gt;body&lt;/var&gt; &lt;var&gt;buffer-or-name&lt;/var&gt; 由buffer-or-name指定。</target>
        </trans-unit>
        <trans-unit id="6038dcc9b2f50c57eda40b8b7d329c70ed7fdd8b" translate="yes" xml:space="preserve">
          <source>This macro is like a milder version of &lt;code&gt;ignore-errors&lt;/code&gt;. Rather than suppressing errors altogether, it converts them into messages. It uses the string &lt;var&gt;format&lt;/var&gt; to format the message. &lt;var&gt;format&lt;/var&gt; should contain a single &amp;lsquo;</source>
          <target state="translated">这个宏就像一个温和的 &lt;code&gt;ignore-errors&lt;/code&gt; 版本。与其完全抑制错误，不如将错误转换为消息。它使用字符串 &lt;var&gt;format&lt;/var&gt; 来格式化消息。 &lt;var&gt;format&lt;/var&gt; 应包含一个'</target>
        </trans-unit>
        <trans-unit id="1089adde9cb8e7b3d276f051078a571a9f5f568a" translate="yes" xml:space="preserve">
          <source>This macro is mainly useful in functions that can be called from timers, process filters, process sentinels, &lt;code&gt;pre-command-hook&lt;/code&gt;, &lt;code&gt;post-command-hook&lt;/code&gt;, and other places where &lt;code&gt;inhibit-quit&lt;/code&gt; is normally bound to &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">该宏主要用于可从计时器，进程过滤器，进程标记， &lt;code&gt;pre-command-hook&lt;/code&gt; ， &lt;code&gt;post-command-hook&lt;/code&gt; 以及其他通常将 &lt;code&gt;inhibit-quit&lt;/code&gt; 绑定到 &lt;code&gt;t&lt;/code&gt; 的地方调用的函数。</target>
        </trans-unit>
        <trans-unit id="e51efa738bfd57738b122e9bf0d44a2c76376e14" translate="yes" xml:space="preserve">
          <source>This macro is similar to &lt;code&gt;rx-let&lt;/code&gt;, except that the &lt;var&gt;bindings&lt;/var&gt; argument is evaluated (and thus needs to be quoted if it is a list literal), and the definitions are substituted at run time, which is required for &lt;code&gt;rx-to-string&lt;/code&gt; to work. Example:</source>
          <target state="translated">此宏类似于 &lt;code&gt;rx-let&lt;/code&gt; ，除了 &lt;var&gt;bindings&lt;/var&gt; 参数计算（并因此需要，如果它是一个列表字面被引用），和定义在运行时，这是需要被取代的 &lt;code&gt;rx-to-string&lt;/code&gt; 到工作。例：</target>
        </trans-unit>
        <trans-unit id="872ab3045f15ef8d0982acc9508a187db02ee5b8" translate="yes" xml:space="preserve">
          <source>This macro is similar to &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt;. Like that construct, it executes &lt;var&gt;body&lt;/var&gt; while arranging to insert any output it prints into the buffer named &lt;var&gt;buffer-or-name&lt;/var&gt; and displays that buffer in some window. Unlike &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt;, however, it does not automatically switch that buffer to Help mode.</source>
          <target state="translated">此宏类似于 &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt; 。像该构造一样，它在执行 &lt;var&gt;body&lt;/var&gt; 的同时安排将其打印的所有输出插入名为 &lt;var&gt;buffer-or-name&lt;/var&gt; 的缓冲区，并在某个窗口中显示该缓冲区。但是，与 &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt; 不同，它不会自动将该缓冲区切换到帮助模式。</target>
        </trans-unit>
        <trans-unit id="502593387f4dd3152d313e067601e6d922f59e20" translate="yes" xml:space="preserve">
          <source>This macro is the handy way to add the advice &lt;var&gt;function&lt;/var&gt; to the function stored in &lt;var&gt;place&lt;/var&gt; (see &lt;a href=&quot;generalized-variables#Generalized-Variables&quot;&gt;Generalized Variables&lt;/a&gt;).</source>
          <target state="translated">该宏是将建议 &lt;var&gt;function&lt;/var&gt; 添加到 &lt;var&gt;place&lt;/var&gt; 存储的功能的便捷方法（请参见&lt;a href=&quot;generalized-variables#Generalized-Variables&quot;&gt;通用变量&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="898ca937f667c623cfe6374eeb5823fc4a782653" translate="yes" xml:space="preserve">
          <source>This macro is the simplest and safest way to evaluate forms while holding a mutex. It acquires &lt;var&gt;mutex&lt;/var&gt;, invokes &lt;var&gt;body&lt;/var&gt;, and then releases &lt;var&gt;mutex&lt;/var&gt;. It returns the result of &lt;var&gt;body&lt;/var&gt;.</source>
          <target state="translated">该宏是持有互斥体时评估表单的最简单，最安全的方法。它获取 &lt;var&gt;mutex&lt;/var&gt; ，调用 &lt;var&gt;body&lt;/var&gt; ，然后释放 &lt;var&gt;mutex&lt;/var&gt; 。它返回 &lt;var&gt;body&lt;/var&gt; 的结果。</target>
        </trans-unit>
        <trans-unit id="c57d845f68f572ad0dc1d29a18d8a2eefbb811b0" translate="yes" xml:space="preserve">
          <source>This macro is used in the command &lt;code&gt;help-for-help&lt;/code&gt; which is the binding of</source>
          <target state="translated">此宏在命令 &lt;code&gt;help-for-help&lt;/code&gt; 中使用，该命令是</target>
        </trans-unit>
        <trans-unit id="874301f3bae1355172b9f78c913283a4f918e535" translate="yes" xml:space="preserve">
          <source>This macro is useful when a function makes a possibly large number of repetitive changes to the buffer, and the change hooks would otherwise take a long time to run, were they to be run for each individual buffer modification. Emacs itself uses this macro, for example, in the commands &lt;code&gt;comment-region&lt;/code&gt; and &lt;code&gt;uncomment-region&lt;/code&gt;.</source>
          <target state="translated">当函数可能对缓冲区进行大量重复更改时，如果要为每个单独的缓冲区修改运行更改挂钩，否则更改挂钩将花费很长时间，因此此宏很有用。Emacs本身例如在命令 &lt;code&gt;comment-region&lt;/code&gt; 和 &lt;code&gt;uncomment-region&lt;/code&gt; 中使用此宏。</target>
        </trans-unit>
        <trans-unit id="ab579982465b6c0abfa804fafecbc12d00aafa32" translate="yes" xml:space="preserve">
          <source>This macro marks the variable &lt;var&gt;obsolete-name&lt;/var&gt; as obsolete and also makes it an alias for the variable &lt;var&gt;current-name&lt;/var&gt;. It is equivalent to the following:</source>
          <target state="translated">该宏将变量 &lt;var&gt;obsolete-name&lt;/var&gt; 标记为过时，并且使它成为变量 &lt;var&gt;current-name&lt;/var&gt; 的别名。它等效于以下内容：</target>
        </trans-unit>
        <trans-unit id="c10b428bbf4c831a02afbd670c89c65a2bf0ac8a" translate="yes" xml:space="preserve">
          <source>This macro provides a convenient way to examine the &lt;small&gt;CAR&lt;/small&gt; of a list, and take it off the list, all at once. It operates on the list stored in &lt;var&gt;listname&lt;/var&gt;. It removes the first element from the list, saves the &lt;small&gt;CDR&lt;/small&gt; into &lt;var&gt;listname&lt;/var&gt;, then returns the removed element.</source>
          <target state="translated">此宏提供了一种方便的方法来一次检查列表的&lt;small&gt;CAR&lt;/small&gt;，并将其从列表中删除。它对存储在 &lt;var&gt;listname&lt;/var&gt; 中的列表进行操作。它从列表中删除第一个元素，将&lt;small&gt;CDR&lt;/small&gt;保存到 &lt;var&gt;listname&lt;/var&gt; 中，然后返回删除的元素。</target>
        </trans-unit>
        <trans-unit id="5ce1c46667c8342bd53b8c8d00223a597902d3a7" translate="yes" xml:space="preserve">
          <source>This macro provides a way to initialize the variable &lt;var&gt;var&lt;/var&gt; as a collection for completion in a lazy way, not computing its actual contents until they are first needed. You use this macro to produce a value that you store in &lt;var&gt;var&lt;/var&gt;. The actual computation of the proper value is done the first time you do completion using &lt;var&gt;var&lt;/var&gt;. It is done by calling &lt;var&gt;fun&lt;/var&gt; with no arguments. The value &lt;var&gt;fun&lt;/var&gt; returns becomes the permanent value of &lt;var&gt;var&lt;/var&gt;.</source>
          <target state="translated">该宏提供了一种将变量 &lt;var&gt;var&lt;/var&gt; 初始化为集合的方式，可以通过惰性方式完成，而不是在首次需要时才计算其实际内容。您可以使用此宏产生一个值，并将其存储在 &lt;var&gt;var&lt;/var&gt; 中。正确的值的实际计算是在您第一次使用 &lt;var&gt;var&lt;/var&gt; 完成时进行的。这是通过不带任何参数调用 &lt;var&gt;fun&lt;/var&gt; 来完成的。值 &lt;var&gt;fun&lt;/var&gt; 的回报成为永久值 &lt;var&gt;var&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="ab58e2ead360b8247d087db896d63e6217aa1f18" translate="yes" xml:space="preserve">
          <source>This macro records the selected frame, as well as the selected window of each frame, executes &lt;var&gt;forms&lt;/var&gt; in sequence, then restores the earlier selected frame and windows. It also saves and restores the current buffer. It returns the value of the last form in &lt;var&gt;forms&lt;/var&gt;.</source>
          <target state="translated">该宏记录选定的框架以及每个框架的选定窗口，依次执行 &lt;var&gt;forms&lt;/var&gt; ，然后还原先前选定的框架和窗口。它还保存并恢复当前缓冲区。它返回的最后形式的价值 &lt;var&gt;forms&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="987da63b6119b2ab29ca07d3632561ba48057dc6" translate="yes" xml:space="preserve">
          <source>This macro records the window configuration of the selected frame, executes &lt;var&gt;forms&lt;/var&gt; in sequence, then restores the earlier window configuration. The return value is the value of the final form in &lt;var&gt;forms&lt;/var&gt;.</source>
          <target state="translated">该宏记录所选框架的窗口配置，按顺序执行 &lt;var&gt;forms&lt;/var&gt; ，然后恢复先前的窗口配置。返回值是在最后形式的价值 &lt;var&gt;forms&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="20fd0804b7873bc25fc74435b03ebaf4d380e109" translate="yes" xml:space="preserve">
          <source>This macro removes &lt;var&gt;function&lt;/var&gt; from the function stored in &lt;var&gt;place&lt;/var&gt;. This only works if &lt;var&gt;function&lt;/var&gt; was added to &lt;var&gt;place&lt;/var&gt; using &lt;code&gt;add-function&lt;/code&gt;.</source>
          <target state="translated">这个宏移除了 &lt;var&gt;function&lt;/var&gt; 从存储在功能 &lt;var&gt;place&lt;/var&gt; 。如果这种方法只适用 &lt;var&gt;function&lt;/var&gt; 被添加到 &lt;var&gt;place&lt;/var&gt; 使用 &lt;code&gt;add-function&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="942af90fbe13d4c3f86fa73a97ddc4ba8207ba72" translate="yes" xml:space="preserve">
          <source>This macro removes the quotation prefix &amp;lsquo;</source>
          <target state="translated">此宏删除引号前缀'</target>
        </trans-unit>
        <trans-unit id="8e9efbf46d1cb164cf2735c755c967a131313218" translate="yes" xml:space="preserve">
          <source>This macro requests additional trace information around the execution of the &lt;var&gt;body&lt;/var&gt; forms. The argument &lt;var&gt;string&lt;/var&gt; specifies text to put in the trace buffer, after the &amp;lsquo;</source>
          <target state="translated">该宏请求有关 &lt;var&gt;body&lt;/var&gt; 窗体执行的其他跟踪信息。参数 &lt;var&gt;string&lt;/var&gt; 指定在&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="2419fc1905805628d557d71d598f621c48e6c92c" translate="yes" xml:space="preserve">
          <source>This macro returns an anonymous function with argument list &lt;var&gt;args&lt;/var&gt;, documentation string &lt;var&gt;doc&lt;/var&gt; (if any), interactive spec &lt;var&gt;interactive&lt;/var&gt; (if any), and body forms given by &lt;var&gt;body&lt;/var&gt;.</source>
          <target state="translated">此宏返回带有参数列表 &lt;var&gt;args&lt;/var&gt; ，文档字符串 &lt;var&gt;doc&lt;/var&gt; （如果有），交互式spec &lt;var&gt;interactive&lt;/var&gt; （如果有）以及body给出的 &lt;var&gt;body&lt;/var&gt; 形式的匿名函数。</target>
        </trans-unit>
        <trans-unit id="26b9ff57a359c8313aaa645fe66cf2eb57e004e7" translate="yes" xml:space="preserve">
          <source>This macro returns non-&lt;code&gt;nil&lt;/code&gt;, when &lt;var&gt;name&lt;/var&gt; is quoted with the prefix &amp;lsquo;</source>
          <target state="translated">当 &lt;var&gt;name&lt;/var&gt; 以前缀'引起来时，此宏返回non- &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9cd61259063df009ae5712eff83e0b3891fd958e" translate="yes" xml:space="preserve">
          <source>This macro selects &lt;var&gt;window&lt;/var&gt;, executes &lt;var&gt;forms&lt;/var&gt; in sequence, then restores the previously selected window and current buffer. The ordering of recently selected windows and the buffer list remain unchanged unless you deliberately change them within &lt;var&gt;forms&lt;/var&gt;; for example, by calling &lt;code&gt;select-window&lt;/code&gt; with argument &lt;var&gt;norecord&lt;/var&gt;&lt;code&gt;nil&lt;/code&gt;. Hence, this macro is the preferred way to temporarily work with &lt;var&gt;window&lt;/var&gt; as the selected window without needlessly running &lt;code&gt;buffer-list-update-hook&lt;/code&gt;.</source>
          <target state="translated">该宏选择 &lt;var&gt;window&lt;/var&gt; ，依次执行 &lt;var&gt;forms&lt;/var&gt; ，然后恢复先前选择的窗口和当前缓冲区。除非您在 &lt;var&gt;forms&lt;/var&gt; 有意更改它们，否则最近选择的窗口和缓冲区列表的顺序保持不变。例如，通过使用参数 &lt;var&gt;norecord&lt;/var&gt; &lt;code&gt;nil&lt;/code&gt; 调用 &lt;code&gt;select-window&lt;/code&gt; 。因此，此宏是暂时将 &lt;var&gt;window&lt;/var&gt; 作为选定窗口使用而无需不必要地运行 &lt;code&gt;buffer-list-update-hook&lt;/code&gt; 的首选方法。</target>
        </trans-unit>
        <trans-unit id="693f5bba499a97927946aee22ad2ce605cde26d4" translate="yes" xml:space="preserve">
          <source>This macro translates a call of the form</source>
          <target state="translated">这个宏翻译了一个形式为</target>
        </trans-unit>
        <trans-unit id="afcfd0f6f554ea88595caf452762d1743094941c" translate="yes" xml:space="preserve">
          <source>This macro uses the normal hooks &lt;code&gt;temp-buffer-window-setup-hook&lt;/code&gt; and &lt;code&gt;temp-buffer-window-show-hook&lt;/code&gt; in place of the analogous hooks run by &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt;.</source>
          <target state="translated">此宏使用普通的钩子 &lt;code&gt;temp-buffer-window-setup-hook&lt;/code&gt; 和 &lt;code&gt;temp-buffer-window-show-hook&lt;/code&gt; 来代替 &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt; 运行的类似钩子。</target>
        </trans-unit>
        <trans-unit id="064759caf85aa25c2df19fde3cf3ab10e1777e01" translate="yes" xml:space="preserve">
          <source>This macro works by setting a timer to run after &lt;var&gt;seconds&lt;/var&gt; seconds. If &lt;var&gt;body&lt;/var&gt; finishes before that time, it cancels the timer. If the timer actually runs, it terminates execution of &lt;var&gt;body&lt;/var&gt;, then executes &lt;var&gt;timeout-forms&lt;/var&gt;.</source>
          <target state="translated">该宏通过将计时器设置为在 &lt;var&gt;seconds&lt;/var&gt; 秒后运行来工作。如果 &lt;var&gt;body&lt;/var&gt; 在该时间之前完成，它将取消计时器。如果计时器实际运行，则它将终止 &lt;var&gt;body&lt;/var&gt; 的执行，然后执行 &lt;var&gt;timeout-forms&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="3892f820e9a17dbaa7cc95cfd9869c0bb731d0ee" translate="yes" xml:space="preserve">
          <source>This makes &lt;var&gt;string&lt;/var&gt; a unibyte string and clears its contents to zeros. It may also change &lt;var&gt;string&lt;/var&gt;&amp;rsquo;s length.</source>
          <target state="translated">这使 &lt;var&gt;string&lt;/var&gt; 成为一个单字节字符串，并将其内容清除为零。它还可能会更改 &lt;var&gt;string&lt;/var&gt; 的长度。</target>
        </trans-unit>
        <trans-unit id="5e2725b5bd51cadb99ca0430032fd2f4aa193e7c" translate="yes" xml:space="preserve">
          <source>This makes a button from &lt;var&gt;beg&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt; in the current buffer, and returns it.</source>
          <target state="translated">这会使按钮从 &lt;var&gt;beg&lt;/var&gt; 到 &lt;var&gt;end&lt;/var&gt; 在当前缓冲区中返回。</target>
        </trans-unit>
        <trans-unit id="178b6f8f62a6a518fa32a1bdbc0465a4aa9f1180" translate="yes" xml:space="preserve">
          <source>This makes a button from &lt;var&gt;beg&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt; in the current buffer, using text properties.</source>
          <target state="translated">这将使用文本属性在当前缓冲区 &lt;var&gt;beg&lt;/var&gt; 按钮从开始到 &lt;var&gt;end&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="5651846c659c680234340318e7dc35101e13768c" translate="yes" xml:space="preserve">
          <source>This makes a list whose second element is the list itself. Here&amp;rsquo;s how you can see that it really works:</source>
          <target state="translated">这将创建一个列表，其第二个元素是列表本身。您可以通过以下方式看到它确实有效：</target>
        </trans-unit>
        <trans-unit id="0408162eef9330f20a098ee431f7e3ac39f5d957" translate="yes" xml:space="preserve">
          <source>This makes the symbol &lt;code&gt;module-func&lt;/code&gt; known to Emacs by calling &lt;code&gt;env-&amp;gt;intern&lt;/code&gt;, then invokes &lt;code&gt;defalias&lt;/code&gt; from Emacs to bind the function to that symbol. Note that it is possible to use &lt;code&gt;fset&lt;/code&gt; instead of &lt;code&gt;defalias&lt;/code&gt;; the differences are described in &lt;a href=&quot;defining-functions#Defining-Functions&quot;&gt;defalias&lt;/a&gt;.</source>
          <target state="translated">这通过调用 &lt;code&gt;env-&amp;gt;intern&lt;/code&gt; 使符号 &lt;code&gt;module-func&lt;/code&gt; 对于Emacs来说是已知的，然后从Emacs调用 &lt;code&gt;defalias&lt;/code&gt; 将函数绑定到该符号。注意，可以使用 &lt;code&gt;fset&lt;/code&gt; 代替 &lt;code&gt;defalias&lt;/code&gt; ; 差异以&lt;a href=&quot;defining-functions#Defining-Functions&quot;&gt;defalias&lt;/a&gt;描述。</target>
        </trans-unit>
        <trans-unit id="838829e28dbb8585aa17882aa090c569e767909f" translate="yes" xml:space="preserve">
          <source>This manual has gone through numerous drafts. It is nearly complete but not flawless. There are a few topics that are not covered, either because we consider them secondary (such as most of the individual modes) or because they are yet to be written. Because we are not able to deal with them completely, we have left out several parts intentionally.</source>
          <target state="translated">这本手册经过了无数次的起草。它几乎是完整的,但并非完美无缺。有几个主题没有涉及到,要么是因为我们认为它们是次要的(如大多数单独的模式),要么是因为它们还没有写出来。因为我们无法完全处理这些问题,所以故意省略了几个部分。</target>
        </trans-unit>
        <trans-unit id="936a07e8905fb23f7ca42e3e3a559bacae6b739d" translate="yes" xml:space="preserve">
          <source>This manual was originally written by Robert Krawitz, Bil Lewis, Dan LaLiberte, Richard M. Stallman and Chris Welty, the volunteers of the GNU manual group, in an effort extending over several years. Robert J. Chassell helped to review and edit the manual, with the support of the Defense Advanced Research Projects Agency, ARPA Order 6082, arranged by Warren A. Hunt, Jr. of Computational Logic, Inc. Additional sections have since been written by Miles Bader, Lars Brinkhoff, Chong Yidong, Kenichi Handa, Lute Kamstra, Juri Linkov, Glenn Morris, Thien-Thi Nguyen, Dan Nicolaescu, Martin Rudalics, Kim F. Storm, Luc Teirlinck, and Eli Zaretskii, and others.</source>
          <target state="translated">这本手册最初是由GNU手册组的志愿者Robert Krawitz、Bil Lewis、Dan LaLiberte、Richard M.Stallman和Chris Welty经过几年的努力编写的。Robert J.Chassell在国防高级研究计划局ARPA 6082命令的支持下,由计算逻辑公司的Warren A.Hunt,Jr.安排,帮助审查和编辑了这本手册。此后,Miles Bader、Lars Brinkhoff、Chong Yidong、Kenichi Handa、Lute Kamstra、Juri Linkov、Glenn Morris、Thien-Thi Nguyen、Dan Nicolaescu、Martin Rudalics、Kim F.Storm、Luc Teirlinck和Eli Zaretskii等人又编写了其他章节。</target>
        </trans-unit>
        <trans-unit id="0ba70434d315a0d715393f13ea4aaff0d3bf4583" translate="yes" xml:space="preserve">
          <source>This matches &amp;lsquo;</source>
          <target state="translated">这与&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="c46f49a56c7bf9f506bb49f94594440cbde72778" translate="yes" xml:space="preserve">
          <source>This matches a lambda list&amp;mdash;the argument list of a lambda expression.</source>
          <target state="translated">这与lambda列表（lambda表达式的参数列表）匹配。</target>
        </trans-unit>
        <trans-unit id="52e79e8c6bec8d676fcd7f3a8075520d1530185f" translate="yes" xml:space="preserve">
          <source>This matches any</source>
          <target state="translated">这与任何</target>
        </trans-unit>
        <trans-unit id="2e852b2f8e5a993e44ad62b3fb9595b6e1163b55" translate="yes" xml:space="preserve">
          <source>This matches any character that has whitespace syntax (see &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;Syntax Class Table&lt;/a&gt;).</source>
          <target state="translated">这与具有空格语法的任何字符匹配（请参见&lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;语法类表&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="316120a480b1bb306d8dbc88c4f4275dae109009" translate="yes" xml:space="preserve">
          <source>This matches any character that has word syntax (see &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;Syntax Class Table&lt;/a&gt;).</source>
          <target state="translated">这与具有单词语法的任何字符匹配（请参见&lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;语法类表&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="ca176ae8d8f18411fc057bf55270a1faea9b10fa" translate="yes" xml:space="preserve">
          <source>This matches any character whose code is in the range 0&amp;ndash;31.</source>
          <target state="translated">它与代码在0-31范围内的任何字符匹配。</target>
        </trans-unit>
        <trans-unit id="3f883f8024251058915976b3937efaf03a1e481e" translate="yes" xml:space="preserve">
          <source>This matches any letter or digit. For multibyte characters, it matches characters whose Unicode &amp;lsquo;</source>
          <target state="translated">这匹配任何字母或数字。对于多字节字符，它与Unicode'</target>
        </trans-unit>
        <trans-unit id="1385fab752bcd45ac517e44ad8fbc4c35fb6064c" translate="yes" xml:space="preserve">
          <source>This matches any letter. For multibyte characters, it matches characters whose Unicode &amp;lsquo;</source>
          <target state="translated">这匹配任何字母。对于多字节字符，它与Unicode'</target>
        </trans-unit>
        <trans-unit id="14a7a5d964c03d3026f6e2829a00347d764fdf41" translate="yes" xml:space="preserve">
          <source>This matches any lower-case letter, as determined by the current case table (see &lt;a href=&quot;case-tables#Case-Tables&quot;&gt;Case Tables&lt;/a&gt;). If &lt;code&gt;case-fold-search&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this also matches any upper-case letter.</source>
          <target state="translated">这匹配由当前案例表确定的任何小写字母（请参阅&lt;a href=&quot;case-tables#Case-Tables&quot;&gt;案例表&lt;/a&gt;）。如果 &lt;code&gt;case-fold-search&lt;/code&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则它也匹配任何大写字母。</target>
        </trans-unit>
        <trans-unit id="c3df37610dad534b18b780c61d1f193b1376f968" translate="yes" xml:space="preserve">
          <source>This matches any multibyte character (see &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Text Representations&lt;/a&gt;).</source>
          <target state="translated">这匹配任何多字节字符（请参见&lt;a href=&quot;text-representations#Text-Representations&quot;&gt;文本表示形式&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="180d6f1f6fc758b03b399a24a591e25561158664" translate="yes" xml:space="preserve">
          <source>This matches any non-</source>
          <target state="translated">这与任何非</target>
        </trans-unit>
        <trans-unit id="7ee7c620c06b045fadb810117b84c21104619363" translate="yes" xml:space="preserve">
          <source>This matches any printing character&amp;mdash;either whitespace, or a graphic character matched by &amp;lsquo;</source>
          <target state="translated">这会匹配任何打印字符，无论是空格还是带'的图形字符</target>
        </trans-unit>
        <trans-unit id="6880ce3e7aa6cea71ff5c3336291254d0e10f5c1" translate="yes" xml:space="preserve">
          <source>This matches any punctuation character. (At present, for multibyte characters, it matches anything that has non-word syntax.)</source>
          <target state="translated">它可以匹配任何标点符号。(目前,对于多字节字符,它匹配任何非单词语法的字符。)</target>
        </trans-unit>
        <trans-unit id="c10e0e88a037e8963b3f03135b0914b802e5a530" translate="yes" xml:space="preserve">
          <source>This matches any unibyte character (see &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Text Representations&lt;/a&gt;).</source>
          <target state="translated">这与任何单字节字符匹配（请参阅&lt;a href=&quot;text-representations#Text-Representations&quot;&gt;文本表示形式&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="79fea95b9a80da155639878b00fbb1df62448d0d" translate="yes" xml:space="preserve">
          <source>This matches any upper-case letter, as determined by the current case table (see &lt;a href=&quot;case-tables#Case-Tables&quot;&gt;Case Tables&lt;/a&gt;). If &lt;code&gt;case-fold-search&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this also matches any lower-case letter.</source>
          <target state="translated">这匹配由当前案例表确定的任何大写字母（请参阅&lt;a href=&quot;case-tables#Case-Tables&quot;&gt;案例表&lt;/a&gt;）。如果 &lt;code&gt;case-fold-search&lt;/code&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则它也匹配任何小写字母。</target>
        </trans-unit>
        <trans-unit id="437945e5b8a6162ae935b450bc0acae72307707b" translate="yes" xml:space="preserve">
          <source>This matches graphic characters&amp;mdash;everything except whitespace,</source>
          <target state="translated">这与图形字符匹配-除空格，</target>
        </trans-unit>
        <trans-unit id="43814bc77c4368fa9c2f3682191fb2810d888916" translate="yes" xml:space="preserve">
          <source>This matches horizontal whitespace, as defined by Annex C of the Unicode Technical Standard #18. In particular, it matches spaces, tabs, and other characters whose Unicode &amp;lsquo;</source>
          <target state="translated">这与Unicode技术标准＃18的附件C定义的水平空白匹配。特别是，它匹配空格，制表符和其他字符，这些字符的Unicode'</target>
        </trans-unit>
        <trans-unit id="3d4d3406a6b16fae009d3964eb81351e9fd3c382" translate="yes" xml:space="preserve">
          <source>This matches the hexadecimal digits: &amp;lsquo;</source>
          <target state="translated">这与十六进制数字匹配：</target>
        </trans-unit>
        <trans-unit id="e7f9f6ac537d2eb761590b38000c721a4f3bc69d" translate="yes" xml:space="preserve">
          <source>This matches values such as &lt;code&gt;(baz)&lt;/code&gt;, &lt;code&gt;(baz foo)&lt;/code&gt;, &lt;code&gt;(baz bar)&lt;/code&gt; and &lt;code&gt;(baz foo bar)&lt;/code&gt;.</source>
          <target state="translated">这匹配诸如 &lt;code&gt;(baz)&lt;/code&gt; ， &lt;code&gt;(baz foo)&lt;/code&gt; ， &lt;code&gt;(baz bar)&lt;/code&gt; 和 &lt;code&gt;(baz foo bar)&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="c152df7cdf2a432680992178732eee215ebba867" translate="yes" xml:space="preserve">
          <source>This means that &lt;code&gt;display-buffer&lt;/code&gt; makes a new parent window when it splits a window and is passed a &lt;code&gt;window-height&lt;/code&gt; or &lt;code&gt;window-width&lt;/code&gt; entry in the &lt;var&gt;alist&lt;/var&gt; argument (see &lt;a href=&quot;buffer-display-action-functions#Buffer-Display-Action-Functions&quot;&gt;Buffer Display Action Functions&lt;/a&gt;). Otherwise, window splitting behaves as for a value of &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">这意味着 &lt;code&gt;display-buffer&lt;/code&gt; 在分割窗口并在 &lt;var&gt;alist&lt;/var&gt; 参数中传递 &lt;code&gt;window-height&lt;/code&gt; 或 &lt;code&gt;window-width&lt;/code&gt; 条目时会创建一个新的父窗口（请参见&lt;a href=&quot;buffer-display-action-functions#Buffer-Display-Action-Functions&quot;&gt;Buffer Display Action Functions&lt;/a&gt;）。否则，窗口分割的行为与 &lt;code&gt;nil&lt;/code&gt; 的值相同。</target>
        </trans-unit>
        <trans-unit id="a39978cf9a358cc964ad492e4a59a24d0e55ba44" translate="yes" xml:space="preserve">
          <source>This means that a frame whose focus is redirected to itself is treated differently from a frame whose focus is not redirected. &lt;code&gt;select-frame&lt;/code&gt; affects the former but not the latter.</source>
          <target state="translated">这意味着将焦点重定向到自身的框架与焦点未重定向的框架区别对待。 &lt;code&gt;select-frame&lt;/code&gt; 影响前者，但不影响后者。</target>
        </trans-unit>
        <trans-unit id="3f2afd96003a7534243f6ef3a6c70f84953b139c" translate="yes" xml:space="preserve">
          <source>This means that if &lt;var&gt;window&lt;/var&gt; is not deleted, its buffer is moved to the end of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s list of previous buffers, so it&amp;rsquo;s less likely that a future invocation of &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; will switch to it. Also, it moves the buffer to the end of the frame&amp;rsquo;s buffer list.</source>
          <target state="translated">这意味着如果不删除 &lt;var&gt;window&lt;/var&gt; ，则其缓冲区将移至 &lt;var&gt;window&lt;/var&gt; 先前缓冲区列表的末尾，因此将来调用 &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; 切换到该窗口的可能性较小。同样，它将缓冲区移到帧缓冲区列表的末尾。</target>
        </trans-unit>
        <trans-unit id="5b907046048fbd095bef74db32285a45463e5a54" translate="yes" xml:space="preserve">
          <source>This means that if &lt;var&gt;window&lt;/var&gt; is not deleted, its buffer is removed from &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s list of previous buffers. Also, it moves the buffer to the end of the frame&amp;rsquo;s buffer list. This value provides the most reliable remedy to not have &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; switch to this buffer again without killing the buffer.</source>
          <target state="translated">这意味着，如果不删除 &lt;var&gt;window&lt;/var&gt; ，则其 &lt;var&gt;window&lt;/var&gt; 的缓冲区将从窗口的先前缓冲区列表中删除。同样，它将缓冲区移到帧缓冲区列表的末尾。此值提供了最可靠的补救方法， &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; 不终止缓冲区的情况下，不再切换到上一个缓冲区。</target>
        </trans-unit>
        <trans-unit id="d300a849b8bb86290b9bbd4abca8fa07cc020b65" translate="yes" xml:space="preserve">
          <source>This means that in order to move the mouse pointer to the position of point in the selected window, it&amp;rsquo;s sufficient to write:</source>
          <target state="translated">这意味着为了将鼠标指针移动到所选窗口中点的位置，只需编写以下内容：</target>
        </trans-unit>
        <trans-unit id="092387ab37ec254568f359f9586d6303660f6148" translate="yes" xml:space="preserve">
          <source>This means that splitting a window always creates a new parent window. Thus, if the value of this variable is at all times &lt;code&gt;t&lt;/code&gt;, then at all times every window tree is a binary tree (a tree where each window except the root window has exactly one sibling).</source>
          <target state="translated">这意味着拆分窗口将始终创建一个新的父窗口。因此，如果此变量的值始终为 &lt;code&gt;t&lt;/code&gt; ，则每个窗口树始终都是二叉树（一棵树，其中除根窗口之外的每个窗口都具有一个同级树）。</target>
        </trans-unit>
        <trans-unit id="c45ee702dfaf599f3e1c29e75b01eae3cb365655" translate="yes" xml:space="preserve">
          <source>This means that the basic groups of functions that alter the window structure treat an atomic window like a live one, thus preserving the internal structure of the atomic window.</source>
          <target state="translated">这意味着改变窗口结构的基本函数组把原子窗口当作一个活窗口,从而保留了原子窗口的内部结构。</target>
        </trans-unit>
        <trans-unit id="1a37188790b9c83fd2de8bfc5e5c0b691a7187b4" translate="yes" xml:space="preserve">
          <source>This means that the new live window is allowed to share the existing parent window, if one exists, provided the split occurs in the same direction as the existing window combination (otherwise, a new internal window is created anyway).</source>
          <target state="translated">这意味着新的实时窗口被允许共享现有的父窗口(如果存在的话),前提是分割发生在与现有窗口组合相同的方向上(否则,无论如何都会创建一个新的内部窗口)。</target>
        </trans-unit>
        <trans-unit id="b2203e9c7795f45a3a1af151be5f65dc7be6f190" translate="yes" xml:space="preserve">
          <source>This means that the parameter is saved unconditionally by both &lt;code&gt;current-window-configuration&lt;/code&gt; and &lt;code&gt;window-state-get&lt;/code&gt;. This value should not be used for parameters whose values do not have a read syntax. Otherwise, invoking &lt;code&gt;window-state-put&lt;/code&gt; in another session may fail with an &lt;code&gt;invalid-read-syntax&lt;/code&gt; error.</source>
          <target state="translated">这意味着该参数由 &lt;code&gt;current-window-configuration&lt;/code&gt; 和 &lt;code&gt;window-state-get&lt;/code&gt; 都无条件保存。此值不应用于其值不具有读取语法的参数。否则，在另一个会话中调用 &lt;code&gt;window-state-put&lt;/code&gt; 可能会失败，并显示一个 &lt;code&gt;invalid-read-syntax&lt;/code&gt; 错误。</target>
        </trans-unit>
        <trans-unit id="a02cc2f333ea94096516c648dfdf278fc95f2cf0" translate="yes" xml:space="preserve">
          <source>This means that when &lt;code&gt;display-buffer&lt;/code&gt; (see &lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;Choosing Window&lt;/a&gt;) splits a window it always makes a new parent window. Otherwise, window splitting behaves as for &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">这意味着，当 &lt;code&gt;display-buffer&lt;/code&gt; （请参见&lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;选择窗口&lt;/a&gt;）拆分一个窗口时，它总是创建一个新的父窗口。否则，窗口分割的行为与 &lt;code&gt;nil&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="09304a977990e2e05b2f4bbfcb9fcfbd14544f18" translate="yes" xml:space="preserve">
          <source>This means that you can make sure that the garbage collector will not run during a certain portion of a Lisp program by calling the garbage collector explicitly just before it (provided that portion of the program does not use so much space as to force a second garbage collection).</source>
          <target state="translated">这意味着你可以通过在Lisp程序的某个部分之前显式地调用垃圾收集器来确保垃圾收集器不会在该程序的某个部分运行(前提是该部分程序没有使用太多的空间来强制进行第二次垃圾收集)。</target>
        </trans-unit>
        <trans-unit id="ac3f7637f4e9e2e46013206eca24ad296b80682f" translate="yes" xml:space="preserve">
          <source>This means that, while &lt;code&gt;input-decode-map&lt;/code&gt; and &lt;code&gt;key-translation-map&lt;/code&gt; apply regardless of whether the original key sequence would have a binding, the presence of such a binding can still prevent translation from taking place. For example, let us return to our VT100 example above and add a binding for</source>
          <target state="translated">这意味着，尽管不管原始键序列是否具有绑定都适用 &lt;code&gt;input-decode-map&lt;/code&gt; 和 &lt;code&gt;key-translation-map&lt;/code&gt; ，但是这种绑定的存在仍然可以防止翻译的发生。例如，让我们回到上面的VT100示例，并为</target>
        </trans-unit>
        <trans-unit id="8a16b5c7314a1c5f6279d547d1290a0dad1cba49" translate="yes" xml:space="preserve">
          <source>This means to kill &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s buffer.</source>
          <target state="translated">这意味着杀死 &lt;var&gt;window&lt;/var&gt; 的缓冲区。</target>
        </trans-unit>
        <trans-unit id="996beee1789ab59f84adf4b81fe1a5cafea594ce" translate="yes" xml:space="preserve">
          <source>This means to not deal with the buffer in any particular way. As a consequence, if &lt;var&gt;window&lt;/var&gt; is not deleted, invoking &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; will usually show the buffer again.</source>
          <target state="translated">这意味着不要以任何特定方式处理缓冲区。因此，如果未删除 &lt;var&gt;window&lt;/var&gt; ，则调用 &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; 通常会再次显示该缓冲区。</target>
        </trans-unit>
        <trans-unit id="08d6fdd594fe3e215d317c018bba3b98caca83d6" translate="yes" xml:space="preserve">
          <source>This means to use a font that is &lt;var&gt;n&lt;/var&gt; steps larger. A &lt;em&gt;step&lt;/em&gt; is defined by the set of available fonts&amp;mdash;specifically, those that match what was otherwise specified for this text, in all attributes except height. Each size for which a suitable font is available counts as another step. &lt;var&gt;n&lt;/var&gt; should be an integer.</source>
          <target state="translated">这意味着使用的字体要大 &lt;var&gt;n&lt;/var&gt; 步。一个&lt;em&gt;步骤&lt;/em&gt;是通过一组可用的定义的字体，特别是，那些什么，否则这个文本规定，除了高度的所有属性相匹配。可以使用其合适字体的每种尺寸都计入下一步。 &lt;var&gt;n&lt;/var&gt; 应该是整数。</target>
        </trans-unit>
        <trans-unit id="4c5f0dec3d5185fd28e5174bfd57e5414e93d908" translate="yes" xml:space="preserve">
          <source>This means to use a font that is &lt;var&gt;n&lt;/var&gt; steps smaller.</source>
          <target state="translated">这意味着使用的字体要小 &lt;var&gt;n&lt;/var&gt; 步。</target>
        </trans-unit>
        <trans-unit id="8e16ea0deda4b9d4b78d5b962617a18009e97536" translate="yes" xml:space="preserve">
          <source>This mechanism works invisibly, and Lisp code should never be affected by the gap&amp;rsquo;s current location, but these functions are available for getting information about the gap status.</source>
          <target state="translated">这种机制是不可见的，Lisp代码永远不会受到间隙的当前位置的影响，但是这些功能可用于获取有关间隙状态的信息。</target>
        </trans-unit>
        <trans-unit id="201defb8c308b9edefca0d7ec6b5172a1aff31d7" translate="yes" xml:space="preserve">
          <source>This method causes &lt;code&gt;temacs&lt;/code&gt; to dump out an executable program, called</source>
          <target state="translated">此方法使 &lt;code&gt;temacs&lt;/code&gt; 转储一个可执行程序，称为</target>
        </trans-unit>
        <trans-unit id="c30b8e29d79cd89a73047ae48d6333627d393d98" translate="yes" xml:space="preserve">
          <source>This method has several benefits. First, if the user quits while loading the file, the variable is either still uninitialized or initialized properly, never in-between. If it is still uninitialized, reloading the file will initialize it properly. Second, reloading the file once the variable is initialized will not alter it; that is important if the user has run hooks to alter part of the contents (such as, to rebind keys). Third, evaluating the &lt;code&gt;defvar&lt;/code&gt; form with</source>
          <target state="translated">这种方法有几个好处。首先，如果用户在加载文件时退出，则该变量仍未初始化或已正确初始化，切勿介于两者之间。如果仍未初始化，重新加载文件将正确初始化它。其次，一旦变量被初始化就重新加载文件不会改变它。如果用户使用运行钩子来更改部分内容（例如重新绑定键），则这一点很重要。三，评估 &lt;code&gt;defvar&lt;/code&gt; 形式</target>
        </trans-unit>
        <trans-unit id="e581c11712cc79e666659ff354300fee9e44599b" translate="yes" xml:space="preserve">
          <source>This minor mode mainly serves as a wrapper for &lt;code&gt;buffer-read-only&lt;/code&gt;; unlike most minor modes, there is no separate &lt;code&gt;read-only-mode&lt;/code&gt; variable. Even when Read Only mode is disabled, characters with non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;read-only&lt;/code&gt; text properties remain read-only. To temporarily ignore all read-only states, bind &lt;code&gt;inhibit-read-only&lt;/code&gt;, as described above.</source>
          <target state="translated">这种次要模式主要用作 &lt;code&gt;buffer-read-only&lt;/code&gt; 的包装器；与大多数次要模式不同，没有单独的 &lt;code&gt;read-only-mode&lt;/code&gt; 变量。即使被禁用只读模式，与非字符 &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;read-only&lt;/code&gt; 文本属性保持只读。要暂时忽略所有只读状态， &lt;code&gt;inhibit-read-only&lt;/code&gt; 如上所述绑定bind -read-only。</target>
        </trans-unit>
        <trans-unit id="e8faa9a939da70b6b89f73a193ac2b0b0e839517" translate="yes" xml:space="preserve">
          <source>This moves forward one line and continues moving by lines until it reaches an empty line. It is peculiar in that the &lt;code&gt;while&lt;/code&gt; has no body, just the end test (which also does the real work of moving point).</source>
          <target state="translated">这将向前移动一行，并继续逐行移动，直到到达空行。特殊之处在于， &lt;code&gt;while&lt;/code&gt; 没有主体，但只有结束测试（也可以完成移动点的实际工作）。</target>
        </trans-unit>
        <trans-unit id="e368693096f133bc6b460050bac1789c9cb09435" translate="yes" xml:space="preserve">
          <source>This moves point to the start of &lt;var&gt;node&lt;/var&gt; in &lt;var&gt;ewoc&lt;/var&gt;.</source>
          <target state="translated">这将指向 &lt;var&gt;ewoc&lt;/var&gt; 中 &lt;var&gt;node&lt;/var&gt; 的起点。</target>
        </trans-unit>
        <trans-unit id="f71107569dfacd57223d7d8a484d87ab7260c477" translate="yes" xml:space="preserve">
          <source>This normal hook is run by &lt;code&gt;kill-emacs&lt;/code&gt;, before it kills Emacs.</source>
          <target state="translated">该正常的挂钩由 &lt;code&gt;kill-emacs&lt;/code&gt; 运行，然后将其杀死Emacs。</target>
        </trans-unit>
        <trans-unit id="0baf2d709c443a0bd2878c6da3e14cf0b6c35221" translate="yes" xml:space="preserve">
          <source>This normal hook is run by &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt; after displaying the temporary buffer. When the hook runs, the temporary buffer is current, and the window it was displayed in is selected.</source>
          <target state="translated">在显示临时缓冲区后，此常规挂钩由 &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt; 运行。挂钩运行时，临时缓冲区是当前的，并选择了其中显示的窗口。</target>
        </trans-unit>
        <trans-unit id="c58f69d92308146819276289bdeca727eb29ffe7" translate="yes" xml:space="preserve">
          <source>This normal hook is run by &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt; before evaluating &lt;var&gt;body&lt;/var&gt;. When the hook runs, the temporary buffer is current. This hook is normally set up with a function to put the buffer in Help mode.</source>
          <target state="translated">在评估 &lt;var&gt;body&lt;/var&gt; 之前，此常规挂钩由 &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt; 运行。挂钩运行时，临时缓冲区是当前的。通常，此钩子设置有将缓冲区置于&amp;ldquo;帮助&amp;rdquo;模式的功能。</target>
        </trans-unit>
        <trans-unit id="73efc4d58d9742177491042c2f37b4c4f2e11365" translate="yes" xml:space="preserve">
          <source>This normal hook is run by redisplay to update the menu bar contents, before redisplaying the menu bar. You can use it to update menus whose contents should vary. Since this hook is run frequently, we advise you to ensure that the functions it calls do not take much time in the usual case.</source>
          <target state="translated">这个正常的钩子由redisplay运行,以更新菜单栏的内容,然后再重新显示菜单栏。你可以用它来更新内容应该变化的菜单。由于这个钩子运行频繁,我们建议你确保它调用的函数在通常情况下不会花费太多时间。</target>
        </trans-unit>
        <trans-unit id="26a7490816dcb1bd9b7d01397918b75b12401532" translate="yes" xml:space="preserve">
          <source>This normal hook is run by the default &lt;code&gt;revert-buffer-function&lt;/code&gt; after inserting the modified contents. A custom &lt;code&gt;revert-buffer-function&lt;/code&gt; may or may not run this hook.</source>
          <target state="translated">插入修改后的内容后，默认的 &lt;code&gt;revert-buffer-function&lt;/code&gt; 将运行此正常的挂钩。自定义的 &lt;code&gt;revert-buffer-function&lt;/code&gt; 可能会也可能不会运行此挂钩。</target>
        </trans-unit>
        <trans-unit id="9fabcf4d3195170ffc3de0cdddbda38a1b760045" translate="yes" xml:space="preserve">
          <source>This normal hook is run by the default &lt;code&gt;revert-buffer-function&lt;/code&gt; before inserting the modified contents. A custom &lt;code&gt;revert-buffer-function&lt;/code&gt; may or may not run this hook.</source>
          <target state="translated">在插入修改后的内容之前，此默认的挂钩由默认的 &lt;code&gt;revert-buffer-function&lt;/code&gt; 运行。自定义的 &lt;code&gt;revert-buffer-function&lt;/code&gt; 可能会也可能不会运行此挂钩。</target>
        </trans-unit>
        <trans-unit id="3db8aa6bc4943b6665387d18c5b883d2efed1404" translate="yes" xml:space="preserve">
          <source>This normal hook is run by the editor command loop after it executes each command (including commands terminated prematurely by quitting or by errors). At that time, &lt;code&gt;this-command&lt;/code&gt; refers to the command that just ran, and &lt;code&gt;last-command&lt;/code&gt; refers to the command before that.</source>
          <target state="translated">在执行每个命令（包括因退出或错误而过早终止的命令）后，此常规挂钩由编辑器命令循环运行。当时， &lt;code&gt;this-command&lt;/code&gt; 指的是刚刚运行的命令， &lt;code&gt;last-command&lt;/code&gt; 指的是之前运行的命令。</target>
        </trans-unit>
        <trans-unit id="b7503df730af207114347e84693a81974cf2339e" translate="yes" xml:space="preserve">
          <source>This normal hook is run by the editor command loop before it executes each command. At that time, &lt;code&gt;this-command&lt;/code&gt; contains the command that is about to run, and &lt;code&gt;last-command&lt;/code&gt; describes the previous command. See &lt;a href=&quot;command-loop-info#Command-Loop-Info&quot;&gt;Command Loop Info&lt;/a&gt;.</source>
          <target state="translated">在执行每个命令之前，此常规挂钩由编辑器命令循环运行。那时， &lt;code&gt;this-command&lt;/code&gt; 包含将要运行 &lt;code&gt;last-command&lt;/code&gt; ，而last-command描述前一个命令。请参阅&lt;a href=&quot;command-loop-info#Command-Loop-Info&quot;&gt;命令循环信息&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a9ae2b0c68f9fc2606cdf633f67755c853f95b0c" translate="yes" xml:space="preserve">
          <source>This normal hook is run prior to reverting a Tabulated List buffer. A derived mode can add a function to this hook to recompute &lt;code&gt;tabulated-list-entries&lt;/code&gt;.</source>
          <target state="translated">在还原&amp;ldquo;列表列表&amp;rdquo;缓冲区之前，将运行此常规挂钩。派生模式可以向此挂钩添加函数以重新计算 &lt;code&gt;tabulated-list-entries&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="75bf909bef25e666a4076c50b2d0595881bdfecd" translate="yes" xml:space="preserve">
          <source>This normal hook is run when a keyboard macro terminates, regardless of what caused it to terminate (reaching the macro end or an error which ended the macro prematurely).</source>
          <target state="translated">当一个键盘宏终止时,不管是什么原因导致它终止(到达宏的终点或错误导致宏过早结束),都会运行这个普通钩子。</target>
        </trans-unit>
        <trans-unit id="b110726c237d2745ddc2a7c6988fbcf1289c469c" translate="yes" xml:space="preserve">
          <source>This normal hook is run whenever an auto-save is about to happen.</source>
          <target state="translated">每当自动保存即将发生时,就会运行这个正常的钩子。</target>
        </trans-unit>
        <trans-unit id="7cd1f9c30f5785cc4189b3e73fba5bc203487c6c" translate="yes" xml:space="preserve">
          <source>This normal hook is run whenever the echo area is cleared&amp;mdash;either by &lt;code&gt;(message nil)&lt;/code&gt; or for any other reason.</source>
          <target state="translated">每当通过 &lt;code&gt;(message nil)&lt;/code&gt; 或任何其他原因清除回声区域时，都会运行此正常的挂钩。</target>
        </trans-unit>
        <trans-unit id="753a4beb363049d4d513ba83bd3eb542cce1981b" translate="yes" xml:space="preserve">
          <source>This normal hook is run, once, just after handling the command line arguments. In batch mode, Emacs does not run this hook.</source>
          <target state="translated">这个正常的钩子会被运行一次,就在处理完命令行参数之后。在批处理模式下,Emacs不运行这个钩子。</target>
        </trans-unit>
        <trans-unit id="f4cc994b7c49e616c9e0a1d1fd9e6a0930276d7a" translate="yes" xml:space="preserve">
          <source>This normal hook is run, once, just after loading all the init files (</source>
          <target state="translated">这个正常的钩子只运行一次,就在加载完所有init文件之后(</target>
        </trans-unit>
        <trans-unit id="c6ae3813d360f8d587d430f4af6518d7db096b6f" translate="yes" xml:space="preserve">
          <source>This normal hook is run, once, just before loading all the init files (</source>
          <target state="translated">这个正常的钩子被运行一次,就在加载所有init文件之前(</target>
        </trans-unit>
        <trans-unit id="d59da32b6a9dcbf1c10d142ee024736429ffe715" translate="yes" xml:space="preserve">
          <source>This normal hook is very similar to &lt;code&gt;emacs-startup-hook&lt;/code&gt;. The only difference is that it runs slightly later, after setting of the frame parameters. See &lt;a href=&quot;startup-summary#Startup-Summary&quot;&gt;window-setup-hook&lt;/a&gt;.</source>
          <target state="translated">这个普通的钩子与 &lt;code&gt;emacs-startup-hook&lt;/code&gt; 非常相似。唯一的区别是，在设置帧参数后，它会稍晚运行。请参阅&lt;a href=&quot;startup-summary#Startup-Summary&quot;&gt;window-setup-hook&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="36a8c991ce775c04d048c66fed1cda172bbf6546" translate="yes" xml:space="preserve">
          <source>This normal hook runs after a buffer has been saved in its visited file.</source>
          <target state="translated">这个正常的钩子在缓冲区被保存在其访问的文件中后运行。</target>
        </trans-unit>
        <trans-unit id="9d8b4e8365aebd12ddafe74eb3fdaad8c5f9d1b0" translate="yes" xml:space="preserve">
          <source>This normal hook runs before a buffer is saved in its visited file, regardless of whether that is done normally or by one of the hooks described above. For instance, the</source>
          <target state="translated">这个正常的钩子在缓冲区被保存到它的访问文件中之前就会运行,不管是正常的还是通过上面描述的钩子来完成。例如</target>
        </trans-unit>
        <trans-unit id="51a181a3ec9bee7a303e436d073e58bbf25c3260" translate="yes" xml:space="preserve">
          <source>This obsolete variable is a wrapper hook, whose members should be functions that accept four arguments: &lt;var&gt;fun&lt;/var&gt;, &lt;var&gt;start&lt;/var&gt;, &lt;var&gt;end&lt;/var&gt;, and &lt;var&gt;delete&lt;/var&gt;. &lt;var&gt;fun&lt;/var&gt; is a function that takes three arguments (&lt;var&gt;start&lt;/var&gt;, &lt;var&gt;end&lt;/var&gt;, and &lt;var&gt;delete&lt;/var&gt;), and returns a string. In both cases, the &lt;var&gt;start&lt;/var&gt;, &lt;var&gt;end&lt;/var&gt;, and &lt;var&gt;delete&lt;/var&gt; arguments are the same as those of &lt;code&gt;filter-buffer-substring&lt;/code&gt;.</source>
          <target state="translated">这个过时的变量是包装钩，其成员应该是接受四个参数的函数： &lt;var&gt;fun&lt;/var&gt; ， &lt;var&gt;start&lt;/var&gt; ， &lt;var&gt;end&lt;/var&gt; 和 &lt;var&gt;delete&lt;/var&gt; 。 &lt;var&gt;fun&lt;/var&gt; 是一个带有三个参数（ &lt;var&gt;start&lt;/var&gt; ， &lt;var&gt;end&lt;/var&gt; 和 &lt;var&gt;delete&lt;/var&gt; ）并返回字符串的函数。在这两种情况下， &lt;var&gt;start&lt;/var&gt; ， &lt;var&gt;end&lt;/var&gt; 和 &lt;var&gt;delete&lt;/var&gt; 参数与 &lt;code&gt;filter-buffer-substring&lt;/code&gt; 的参数相同。</target>
        </trans-unit>
        <trans-unit id="dead3931c339dc6fa12fd52dd9c6c2de9e54205c" translate="yes" xml:space="preserve">
          <source>This once was the usual way to copy a list, before the function &lt;code&gt;copy-sequence&lt;/code&gt; was invented. See &lt;a href=&quot;sequences-arrays-vectors#Sequences-Arrays-Vectors&quot;&gt;Sequences Arrays Vectors&lt;/a&gt;.</source>
          <target state="translated">在发明函数 &lt;code&gt;copy-sequence&lt;/code&gt; 之前，这曾经是复制列表的常用方法。请参阅&lt;a href=&quot;sequences-arrays-vectors#Sequences-Arrays-Vectors&quot;&gt;序列数组向量&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7ce3d6db3e78067603018173c2dffb158427b0a1" translate="yes" xml:space="preserve">
          <source>This option affects all scroll commands that have a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;scroll-command&lt;/code&gt; symbol property.</source>
          <target state="translated">此选项会影响所有具有非 &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;scroll-command&lt;/code&gt; 符号属性的滚动命令。</target>
        </trans-unit>
        <trans-unit id="bf5c5fa9ccfcc09a86ef723f4dcb8912650960d3" translate="yes" xml:space="preserve">
          <source>This option can be used to specify margins around frames to be fit by &lt;code&gt;fit-frame-to-buffer&lt;/code&gt;. Such margins can be useful to avoid, for example, that the resized frame overlaps the taskbar or parts of its parent frame.</source>
          <target state="translated">此选项可用于指定适合 &lt;code&gt;fit-frame-to-buffer&lt;/code&gt; 的框架周围的边距。此类边距可用于避免例如调整大小的框架与任务栏或其父框架的一部分重叠。</target>
        </trans-unit>
        <trans-unit id="d76f5ca2631dbc037c76c48a63e6140c6d86529c" translate="yes" xml:space="preserve">
          <source>This option does not affect non-interactive calls of &lt;code&gt;switch-to-buffer&lt;/code&gt;.</source>
          <target state="translated">此选项不影响 &lt;code&gt;switch-to-buffer&lt;/code&gt; 的非交互式调用。</target>
        </trans-unit>
        <trans-unit id="16d83acf464974bb4f070de60579326fe9ad6d12" translate="yes" xml:space="preserve">
          <source>This option informs Emacs whether and how the window manager transfers focus when you move the mouse pointer into a frame. It can have three meaningful values:</source>
          <target state="translated">这个选项告知Emacs,当你把鼠标指针移动到一个框架中时,窗口管理器是否以及如何转移焦点。它可以有三个有意义的值。</target>
        </trans-unit>
        <trans-unit id="b173cc7d82799b8c4c9c7af5fa5f4a535f336fae" translate="yes" xml:space="preserve">
          <source>This option is mainly intended for debugging. Garbage collection is inhibited while the question is asked, which means that Emacs might leak memory if the user waits too long before answering the question.</source>
          <target state="translated">这个选项主要是为了调试。在提问时,垃圾收集会被抑制,这意味着如果用户在回答问题前等待太久,Emacs可能会泄漏内存。</target>
        </trans-unit>
        <trans-unit id="0037da3a90bd2feee25788d0d4e95600fb5ae1ce" translate="yes" xml:space="preserve">
          <source>This option is provided for backward compatibility only. Note, that when &lt;code&gt;display-buffer-pop-up-frame&lt;/code&gt; calls the function specified by &lt;code&gt;pop-up-frame-function&lt;/code&gt;, it prepends the value of all &lt;code&gt;pop-up-frame-parameters&lt;/code&gt; action alist entries to &lt;code&gt;pop-up-frame-alist&lt;/code&gt; so that the values specified by the action alist entry effectively override any corresponding values of &lt;code&gt;pop-up-frame-alist&lt;/code&gt;.</source>
          <target state="translated">提供此选项仅是为了向后兼容。请注意，当 &lt;code&gt;display-buffer-pop-up-frame&lt;/code&gt; 调用 &lt;code&gt;pop-up-frame-function&lt;/code&gt; function指定的函数时，它将所有 &lt;code&gt;pop-up-frame-parameters&lt;/code&gt; 操作列表项的值附加到 &lt;code&gt;pop-up-frame-alist&lt;/code&gt; 以便由动作alist条目指定的值有效地覆盖 &lt;code&gt;pop-up-frame-alist&lt;/code&gt; 的任何相应值。</target>
        </trans-unit>
        <trans-unit id="9e379278631b4765a5fd528ea637b79bdf3155f7" translate="yes" xml:space="preserve">
          <source>This option is used in &lt;code&gt;mode-line-position&lt;/code&gt;. Its value specifies both the buffer percentage to display (one of &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;&quot;%o&quot;&lt;/code&gt;, &lt;code&gt;&quot;%p&quot;&lt;/code&gt;, &lt;code&gt;&quot;%P&quot;&lt;/code&gt; or &lt;code&gt;&quot;%q&quot;&lt;/code&gt;, see &lt;a href=&quot;_0025_002dconstructs#g_t_0025_002dConstructs&quot;&gt;%-Constructs&lt;/a&gt;) and a width to space-fill or truncate to. You are recommended to set this option with the &lt;code&gt;customize-variable&lt;/code&gt; facility.</source>
          <target state="translated">此选项用于 &lt;code&gt;mode-line-position&lt;/code&gt; 。它的值既指定要显示的缓冲区百分比（ &lt;code&gt;nil&lt;/code&gt; ， &lt;code&gt;&quot;%o&quot;&lt;/code&gt; ， &lt;code&gt;&quot;%p&quot;&lt;/code&gt; ， &lt;code&gt;&quot;%P&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;%q&quot;&lt;/code&gt; ，请参见&lt;a href=&quot;_0025_002dconstructs#g_t_0025_002dConstructs&quot;&gt;％-Constructs&lt;/a&gt;）以及要填充或截断的宽度。建议您使用 &lt;code&gt;customize-variable&lt;/code&gt; 工具设置此选项。</target>
        </trans-unit>
        <trans-unit id="a8358b294367da2180f0277c0a18cd993a73cfe6" translate="yes" xml:space="preserve">
          <source>This option is useful on platforms that have problems with curved quotes. You can customize it freely according to your personal preference.</source>
          <target state="translated">这个选项在有曲线报价问题的平台上很有用。你可以根据个人喜好自由定制。</target>
        </trans-unit>
        <trans-unit id="a411ded73feeaae0425ccb08272069ef03900c86" translate="yes" xml:space="preserve">
          <source>This option lets you customize indentation on a per-mode basis. It is an alist with elements of the form &lt;code&gt;(&lt;var&gt;mode&lt;/var&gt; . &lt;var&gt;rules&lt;/var&gt;)&lt;/code&gt;. For the precise form of rules, see the variable&amp;rsquo;s documentation; but you may find it easier to use the command &lt;code&gt;smie-config-guess&lt;/code&gt;.</source>
          <target state="translated">此选项使您可以按模式自定义缩进。它是一个列表形式的元素 &lt;code&gt;(&lt;var&gt;mode&lt;/var&gt; . &lt;var&gt;rules&lt;/var&gt;)&lt;/code&gt; 。有关规则的确切形式，请参见变量的文档；但是您可能会发现使用命令 &lt;code&gt;smie-config-guess&lt;/code&gt; 更容易。</target>
        </trans-unit>
        <trans-unit id="6e7a38f77aeea47ef5d040cf78350591308ca5be" translate="yes" xml:space="preserve">
          <source>This option provides a maximum height for resizing minibuffer windows automatically. A floating-point number specifies a fraction of the frame&amp;rsquo;s height; an integer specifies the maximum number of lines. The default value is 0.25.</source>
          <target state="translated">此选项为自动调整小型缓冲区窗口的大小提供了最大高度。浮点数指定框架高度的一部分；整数指定最大行数。默认值为0.25。</target>
        </trans-unit>
        <trans-unit id="8fe1a9afc8a03d9ff94fcb0299265cb0a1c2f9ee" translate="yes" xml:space="preserve">
          <source>This option specifies how &lt;code&gt;backward-delete-char-untabify&lt;/code&gt; should deal with whitespace. Possible values include &lt;code&gt;untabify&lt;/code&gt;, the default, meaning convert a tab to many spaces and delete one; &lt;code&gt;hungry&lt;/code&gt;, meaning delete all tabs and spaces before point with one command; &lt;code&gt;all&lt;/code&gt; meaning delete all tabs, spaces and newlines before point, and &lt;code&gt;nil&lt;/code&gt;, meaning do nothing special for whitespace characters.</source>
          <target state="translated">此选项指定 &lt;code&gt;backward-delete-char-untabify&lt;/code&gt; 应如何处理空格。可能的值包括默认值 &lt;code&gt;untabify&lt;/code&gt; ，这意味着将一个制表符转换为多个空格并删除一个空格。 &lt;code&gt;hungry&lt;/code&gt; ，意思是用一个命令删除点之前的所有制表符和空格； &lt;code&gt;all&lt;/code&gt; 表示删除point之前的所有制表符，空格和换行符，以及 &lt;code&gt;nil&lt;/code&gt; ，表示对空格字符无特殊要求。</target>
        </trans-unit>
        <trans-unit id="7d48f2ba33a1fc5f4d6084da918c77858dbe03e4" translate="yes" xml:space="preserve">
          <source>This option specifies how many seconds to wait between execution steps in trace mode or continue mode. The default is 1 second.</source>
          <target state="translated">这个选项指定了在跟踪模式或继续模式下执行步骤之间的等待时间。默认为1秒。</target>
        </trans-unit>
        <trans-unit id="ef38927aca8e6621415e3f21404c9dfd6e465910" translate="yes" xml:space="preserve">
          <source>This option specifies size boundaries for &lt;code&gt;fit-frame-to-buffer&lt;/code&gt;. It specifies the total maximum and minimum lines and maximum and minimum columns of the root window of any frame that shall be fit to its buffer. If any of these values is non-&lt;code&gt;nil&lt;/code&gt;, it overrides the corresponding argument of &lt;code&gt;fit-frame-to-buffer&lt;/code&gt;.</source>
          <target state="translated">此选项指定 &lt;code&gt;fit-frame-to-buffer&lt;/code&gt; 的大小边界。它指定了要适合其缓冲区的任何帧的根窗口的总最大和最小行以及最大和最小列。如果这些值中的任何一个都不为 &lt;code&gt;nil&lt;/code&gt; ，它将覆盖 &lt;code&gt;fit-frame-to-buffer&lt;/code&gt; 的相应参数。</target>
        </trans-unit>
        <trans-unit id="0a398ebe6b398d579cfefbf13eeb12898c5de010" translate="yes" xml:space="preserve">
          <source>This option specifies the maximum height (in lines) of a window displaying a temporary buffer when &lt;code&gt;temp-buffer-resize-mode&lt;/code&gt; is enabled. It can also be a function to be called to choose the height for such a buffer. It gets one argument, the buffer, and should return a positive integer. At the time the function is called, the window to be resized is selected.</source>
          <target state="translated">启用 &lt;code&gt;temp-buffer-resize-mode&lt;/code&gt; 时，此选项指定显示临时缓冲区的窗口的最大高度（以行为单位）。选择此类缓冲区的高度也可以是调用该函数的功能。它得到一个参数，即缓冲区，并应返回一个正整数。在调用该函数时，将选择要调整大小的窗口。</target>
        </trans-unit>
        <trans-unit id="2689c8ebebdcc3bf380aa454d50991f1cae09ef3" translate="yes" xml:space="preserve">
          <source>This option specifies the maximum number of side windows on each side of a frame. The value is a list of four elements specifying the number of side window slots on (in this order) the left, top, right and bottom of each frame. If an element is a number, it means to display at most that many windows on the corresponding side. If an element is &lt;code&gt;nil&lt;/code&gt;, it means there&amp;rsquo;s no bound on the number of slots on that side.</source>
          <target state="translated">此选项指定框架每一侧的最大侧窗数量。该值是四个元素的列表，这些元素指定（按此顺序）每帧左，上，右和下的侧窗插槽数。如果一个元素是数字，则意味着在对应的一侧最多显示多个窗口。如果元素为 &lt;code&gt;nil&lt;/code&gt; ，则表示该侧的插槽数没有限制。</target>
        </trans-unit>
        <trans-unit id="518a1b8715e666885718e10e9bbb38bd757f5335" translate="yes" xml:space="preserve">
          <source>This option specifies the maximum width of a window (in columns) displaying a temporary buffer when &lt;code&gt;temp-buffer-resize-mode&lt;/code&gt; is enabled. It can also be a function to be called to choose the width for such a buffer. It gets one argument, the buffer, and should return a positive integer. At the time the function is called, the window to be resized is selected.</source>
          <target state="translated">启用 &lt;code&gt;temp-buffer-resize-mode&lt;/code&gt; 时，此选项指定显示临时缓冲区的窗口的最大宽度（以列为单位）。选择此类缓冲区的宽度也可以称为调用该函数。它得到一个参数，即缓冲区，并应返回一个正整数。在调用该函数时，将选择要调整大小的窗口。</target>
        </trans-unit>
        <trans-unit id="b0fc46dfe9e419b3d58f1af045c2293b20891851" translate="yes" xml:space="preserve">
          <source>This option specifies the minimum total height, in lines, of any window. Its value has to accommodate at least one text line as well as a mode and header line, a horizontal scroll bar and a bottom divider, if present.</source>
          <target state="translated">这个选项指定了任何窗口的最小总高度,以行为单位,它的值必须至少能容纳一个文本行、模式和标题行、水平滚动条和底部分隔线(如果有)。它的值必须至少容纳一个文本行、模式行和标题行、水平滚动条和底部分隔线(如果存在)。</target>
        </trans-unit>
        <trans-unit id="d79bb3e94cfb84949f915995f8f6099465cdf86e" translate="yes" xml:space="preserve">
          <source>This option specifies the minimum total width, in columns, of any window. Its value has to accommodate two text columns as well as margins, fringes, a scroll bar and a right divider, if present.</source>
          <target state="translated">这个选项指定任何窗口的最小总宽度,以列为单位。它的值必须能容纳两列文本,以及边框、边框、滚动条和右侧分隔线(如果有)。</target>
        </trans-unit>
        <trans-unit id="7faa7f8ecf58b148dd60015874e826d645801901" translate="yes" xml:space="preserve">
          <source>This option specifies the size of the scroll margin&amp;mdash;a minimum number of lines between point and the top or bottom of a window. Whenever point gets within this many lines of the top or bottom of the window, redisplay scrolls the text automatically (if possible) to move point out of the margin, closer to the center of the window.</source>
          <target state="translated">此选项指定滚动边距的大小-点与窗口顶部或底部之间的最小行数。每当点进入窗口顶部或底部的许多行内时，重新显示都会自动滚动文本（如果可能），以将点移出边缘，更靠近窗口中心。</target>
        </trans-unit>
        <trans-unit id="fcfa0eafad34f75a4200b32331fbb07597c951b8" translate="yes" xml:space="preserve">
          <source>This option specifies whether minibuffer windows are resized automatically. The default value is &lt;code&gt;grow-only&lt;/code&gt;, which means that a minibuffer window by default expands automatically to accommodate the text it displays and shrinks back to one line as soon as the minibuffer gets empty. If the value is &lt;code&gt;t&lt;/code&gt;, Emacs will always try to fit the height of a minibuffer window to the text it displays (with a minimum of one line). If the value is &lt;code&gt;nil&lt;/code&gt;, a minibuffer window never changes size automatically. In that case the window resizing commands (see &lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;Resizing Windows&lt;/a&gt;) can be used to adjust its height.</source>
          <target state="translated">此选项指定是否自动调整小型缓冲区窗口的大小。缺省值是 &lt;code&gt;grow-only&lt;/code&gt; ，这意味着默认情况下，迷你缓冲区窗口会自动扩展以适应它显示的文本，并且一旦迷你缓冲区变空，它就会缩小到一行。如果值为 &lt;code&gt;t&lt;/code&gt; ，则Emacs将始终尝试使小型缓冲区窗口的高度适合其显示的文本（至少一行）。如果值为 &lt;code&gt;nil&lt;/code&gt; ，则迷你缓冲区窗口将永远不会自动更改大小。在这种情况下，可以使用窗口调整大小命令（请参阅&lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;调整&lt;/a&gt;窗口大小）来调整其高度。</target>
        </trans-unit>
        <trans-unit id="ab21c497415b9203a78b72235917a548ee8789a1" translate="yes" xml:space="preserve">
          <source>This option specifies whether top/bottom side windows should appear in reverse order. When this is &lt;code&gt;nil&lt;/code&gt;, side windows on the top and bottom of a frame are always drawn from left to right with increasing slot values. When this is &lt;code&gt;t&lt;/code&gt;, the drawing order is reversed and side windows on the top and bottom of a frame are drawn from right to left with increasing slot values.</source>
          <target state="translated">此选项指定顶部/底部侧面窗口是否应以相反的顺序出现。如果为 &lt;code&gt;nil&lt;/code&gt; ，则始终从左到右以递增的插槽值绘制框架顶部和底部的侧窗。当该值为 &lt;code&gt;t&lt;/code&gt; 时，绘制顺序相反，并且框的顶部和底部的侧窗从右到左以递增的插槽值绘制。</target>
        </trans-unit>
        <trans-unit id="7e243199acfe508d45a5f7708f9306930cfd4f7e" translate="yes" xml:space="preserve">
          <source>This option tells Emacs how to proceed when it is asked to iconify a child frame. If it is &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;iconify-frame&lt;/code&gt; will do nothing when invoked on a child frame. If it is &lt;code&gt;iconify-top-level&lt;/code&gt;, Emacs will try to iconify the top-level frame that is the ancestor of this child frame instead. If it is &lt;code&gt;make-invisible&lt;/code&gt;, Emacs will try to make this child frame invisible instead of iconifying it.</source>
          <target state="translated">当要求其图标化子框架时，此选项告诉Emacs如何进行。如果为 &lt;code&gt;nil&lt;/code&gt; ， &lt;code&gt;iconify-frame&lt;/code&gt; 在子框架上调用iconify-frame时将不执行任何操作。如果它是 &lt;code&gt;iconify-top-level&lt;/code&gt; ，那么Emacs会尝试将它作为此子框架的祖先的顶级框架进行图标化。如果它是 &lt;code&gt;make-invisible&lt;/code&gt; ，则Emacs将尝试使此子框架变为不可见，而不是对其进行图标化。</target>
        </trans-unit>
        <trans-unit id="b91fe0561bb18f03cb7dd3350041b29023cfad30" translate="yes" xml:space="preserve">
          <source>This option, if non-&lt;code&gt;nil&lt;/code&gt;, allows &lt;code&gt;switch-to-buffer&lt;/code&gt; to proceed when called interactively and the selected window is strongly dedicated to its buffer.</source>
          <target state="translated">如果此选项为非 &lt;code&gt;nil&lt;/code&gt; ，则允许在交互调用时 &lt;code&gt;switch-to-buffer&lt;/code&gt; ，并且所选窗口强烈专用于其缓冲区。</target>
        </trans-unit>
        <trans-unit id="9e973d14ccef7d3d65e0649b81a644dd1137cce9" translate="yes" xml:space="preserve">
          <source>This optional keyword specifies a single Lisp form to evaluate as the final act of the mode function, after the mode hooks have been run. It should not be quoted. Since the form might be evaluated after the mode function has terminated, it should not access any element of the mode function&amp;rsquo;s local state. An &lt;code&gt;:after-hook&lt;/code&gt; form is useful for setting up aspects of the mode which depend on the user&amp;rsquo;s settings, which in turn may have been changed in a mode hook.</source>
          <target state="translated">在运行模式挂钩之后，此可选关键字指定一个单独的Lisp形式来评估为模式功能的最终行为。不应该引用它。由于可能在模式函数终止后评估表单，因此它不应访问模式函数的本地状态的任何元素。一 &lt;code&gt;:after-hook&lt;/code&gt; 形式是建立依赖于用户的设置，这反过来又可以在挂机模式已经改变了模式的多个方面。</target>
        </trans-unit>
        <trans-unit id="616387e9652c464e7d0287d8be1c9709ca9a1767" translate="yes" xml:space="preserve">
          <source>This overwrites the default &lt;var&gt;base-spec&lt;/var&gt;, which inherits the global face definition, so it is up to the caller to add such inheritance if so desired.</source>
          <target state="translated">这将覆盖默认的 &lt;var&gt;base-spec&lt;/var&gt; ，后者继承了全局人脸定义，因此调用者可以根据需要添加此类继承。</target>
        </trans-unit>
        <trans-unit id="2c4dc62a8a3a43e3e0eaef58b3528a6e18f739da" translate="yes" xml:space="preserve">
          <source>This parameter affects the execution of &lt;code&gt;delete-other-windows&lt;/code&gt; (see &lt;a href=&quot;deleting-windows#Deleting-Windows&quot;&gt;Deleting Windows&lt;/a&gt;).</source>
          <target state="translated">此参数影响 &lt;code&gt;delete-other-windows&lt;/code&gt; 的执行（请参阅&lt;a href=&quot;deleting-windows#Deleting-Windows&quot;&gt;Deleting Windows&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="2a4efd9541357acbf3c43c226c8f3987d945364d" translate="yes" xml:space="preserve">
          <source>This parameter affects the execution of &lt;code&gt;delete-window&lt;/code&gt; (see &lt;a href=&quot;deleting-windows#Deleting-Windows&quot;&gt;Deleting Windows&lt;/a&gt;).</source>
          <target state="translated">此参数会影响 &lt;code&gt;delete-window&lt;/code&gt; 的执行（请参阅&lt;a href=&quot;deleting-windows#Deleting-Windows&quot;&gt;Deleting Windows&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="bd8f7ec30406c313972f18b1d09bf9a9f9d54784" translate="yes" xml:space="preserve">
          <source>This parameter affects the execution of &lt;code&gt;other-window&lt;/code&gt; (see &lt;a href=&quot;cyclic-window-ordering#Cyclic-Window-Ordering&quot;&gt;Cyclic Window Ordering&lt;/a&gt;).</source>
          <target state="translated">此参数影响 &lt;code&gt;other-window&lt;/code&gt; 的执行（请参见&lt;a href=&quot;cyclic-window-ordering#Cyclic-Window-Ordering&quot;&gt;循环窗口顺序&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="cc6801035b43919034dd11c0e815cccb70b6fbd1" translate="yes" xml:space="preserve">
          <source>This parameter affects the execution of &lt;code&gt;split-window&lt;/code&gt; (see &lt;a href=&quot;splitting-windows#Splitting-Windows&quot;&gt;Splitting Windows&lt;/a&gt;).</source>
          <target state="translated">此参数影响 &lt;code&gt;split-window&lt;/code&gt; 的执行（请参阅&lt;a href=&quot;splitting-windows#Splitting-Windows&quot;&gt;拆分Windows&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="88ade6028e119b8df99d838f95f477147afc2c5a" translate="yes" xml:space="preserve">
          <source>This parameter allows to override the value of the option &lt;code&gt;fit-frame-to-buffer-margins&lt;/code&gt; when fitting this frame to the buffer of its root window with &lt;code&gt;fit-frame-to-buffer&lt;/code&gt; (see &lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;Resizing Windows&lt;/a&gt;).</source>
          <target state="translated">当使用 &lt;code&gt;fit-frame-to-buffer&lt;/code&gt; 使该框架适合其根窗口缓冲区时，此参数允许覆盖 &lt;code&gt;fit-frame-to-buffer-margins&lt;/code&gt; 选项的值（请参见&lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;调整Windows的大小&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="c4bd7fce2467e11911b0874c7b90e56b035cf6fb" translate="yes" xml:space="preserve">
          <source>This parameter allows to override the value of the option &lt;code&gt;fit-frame-to-buffer-sizes&lt;/code&gt; when fitting this frame to the buffer of its root window with &lt;code&gt;fit-frame-to-buffer&lt;/code&gt; (see &lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;Resizing Windows&lt;/a&gt;).</source>
          <target state="translated">当使用 &lt;code&gt;fit-frame-to-buffer&lt;/code&gt; 使该框架适合其根窗口的缓冲区时，此参数允许覆盖 &lt;code&gt;fit-frame-to-buffer-sizes&lt;/code&gt; 选项的值（请参见&lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;调整Windows的大小&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="c21c193bfbb68b93b62637ef90d1f2d20f1c2550" translate="yes" xml:space="preserve">
          <source>This parameter describes the range of possible colors that can be used in this frame. Its value is &lt;code&gt;color&lt;/code&gt;, &lt;code&gt;grayscale&lt;/code&gt; or &lt;code&gt;mono&lt;/code&gt;.</source>
          <target state="translated">此参数描述了可以在此框架中使用的可能颜色的范围。其值为 &lt;code&gt;color&lt;/code&gt; ， &lt;code&gt;grayscale&lt;/code&gt; 或 &lt;code&gt;mono&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="97b1d210e1cd42fdd941ba1e33e2869d415ab72e" translate="yes" xml:space="preserve">
          <source>This parameter is currently meaningful for child frames (see &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;) only. If it is non-&lt;code&gt;nil&lt;/code&gt;, then Emacs will try to keep the frame&amp;rsquo;s size (width and height) ratios (see &lt;a href=&quot;size-parameters#Size-Parameters&quot;&gt;Size Parameters&lt;/a&gt;) as well as its left and right position ratios (see &lt;a href=&quot;position-parameters#Position-Parameters&quot;&gt;Position Parameters&lt;/a&gt;) unaltered whenever its parent frame is resized.</source>
          <target state="translated">当前，此参数仅对子框架有意义（请参阅&lt;a href=&quot;child-frames#Child-Frames&quot;&gt;子框架&lt;/a&gt;）。如果它不是 &lt;code&gt;nil&lt;/code&gt; ，则每当调整其父框架的大小时，Emacs都会尝试保持框架的大小（宽度和高度）比率（请参见&lt;a href=&quot;size-parameters#Size-Parameters&quot;&gt;Size Parameters&lt;/a&gt;）以及其左右位置比率（请参见&lt;a href=&quot;position-parameters#Position-Parameters&quot;&gt;Position Parameters&lt;/a&gt;）保持不变。</target>
        </trans-unit>
        <trans-unit id="04ba41bff9a2d8316aa977a084c6c8d4d506d306" translate="yes" xml:space="preserve">
          <source>This parameter is either &lt;code&gt;dark&lt;/code&gt; or &lt;code&gt;light&lt;/code&gt;, according to whether the background color is a light one or a dark one.</source>
          <target state="translated">根据背景色是浅色还是深色，此参数可以是 &lt;code&gt;dark&lt;/code&gt; 或 &lt;code&gt;light&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bd1a2b12c68b609de177b3c151a1def942c648d9" translate="yes" xml:space="preserve">
          <source>This parameter is installed by the buffer display functions (see &lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;Choosing Window&lt;/a&gt;) and consulted by &lt;code&gt;quit-restore-window&lt;/code&gt; (see &lt;a href=&quot;quitting-windows#Quitting-Windows&quot;&gt;Quitting Windows&lt;/a&gt;). It is a list of four elements, see the description of &lt;code&gt;quit-restore-window&lt;/code&gt; in &lt;a href=&quot;quitting-windows#Quitting-Windows&quot;&gt;Quitting Windows&lt;/a&gt; for details.</source>
          <target state="translated">此参数由缓冲区显示功能安装（请参阅&lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;选择窗口&lt;/a&gt;），并由 &lt;code&gt;quit-restore-window&lt;/code&gt; （请参阅&lt;a href=&quot;quitting-windows#Quitting-Windows&quot;&gt;退出Windows&lt;/a&gt;）进行查阅。这是四个元素的列表，请参阅的说明 &lt;code&gt;quit-restore-window&lt;/code&gt; 中&lt;a href=&quot;quitting-windows#Quitting-Windows&quot;&gt;退出Windows&lt;/a&gt;的详细信息。</target>
        </trans-unit>
        <trans-unit id="485f27bfbde0345cca6052e79624581796703498" translate="yes" xml:space="preserve">
          <source>This parameter is used internally for implementing atomic windows, see &lt;a href=&quot;atomic-windows#Atomic-Windows&quot;&gt;Atomic Windows&lt;/a&gt;.</source>
          <target state="translated">此参数在内部用于实现原子窗口，请参阅&lt;a href=&quot;atomic-windows#Atomic-Windows&quot;&gt;Atomic Windows&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5407f7bc49e45028fc2c8784f40634d0185010ae" translate="yes" xml:space="preserve">
          <source>This parameter marks the window as not deletable by &lt;code&gt;delete-other-windows&lt;/code&gt; (see &lt;a href=&quot;deleting-windows#Deleting-Windows&quot;&gt;Deleting Windows&lt;/a&gt;).</source>
          <target state="translated">此参数将窗口标记为不可通过 &lt;code&gt;delete-other-windows&lt;/code&gt; &lt;a href=&quot;deleting-windows#Deleting-Windows&quot;&gt;删除&lt;/a&gt;（请参见Deleting Windows）。</target>
        </trans-unit>
        <trans-unit id="c388a7c37f8c092efed8313ef334c889b57c063c" translate="yes" xml:space="preserve">
          <source>This parameter marks the window as not selectable by &lt;code&gt;other-window&lt;/code&gt; (see &lt;a href=&quot;cyclic-window-ordering#Cyclic-Window-Ordering&quot;&gt;Cyclic Window Ordering&lt;/a&gt;).</source>
          <target state="translated">此参数将窗口标记为无法由 &lt;code&gt;other-window&lt;/code&gt; （请参见&lt;a href=&quot;cyclic-window-ordering#Cyclic-Window-Ordering&quot;&gt;循环窗口排序&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="f6514b7fc5f20bb9d55d77d4a1001fc16e996382" translate="yes" xml:space="preserve">
          <source>This parameter overrides the terminal&amp;rsquo;s color support as given by the system&amp;rsquo;s terminal capabilities database in that this parameter&amp;rsquo;s value specifies the color mode to use on a text terminal. The value can be either a symbol or a number. A number specifies the number of colors to use (and, indirectly, what commands to issue to produce each color). For example, &lt;code&gt;(tty-color-mode . 8)&lt;/code&gt; specifies use of the ANSI escape sequences for 8 standard text colors. A value of -1 turns off color support.</source>
          <target state="translated">此参数将覆盖系统的终端功能数据库提供的终端颜色支持，因为该参数的值指定了在文本终端上使用的颜色模式。该值可以是符号或数字。数字指定要使用的颜色数量（以及间接发出用于产生每种颜色的命令）。例如， &lt;code&gt;(tty-color-mode . 8)&lt;/code&gt; 指定对8种标准文本颜色使用ANSI转义序列。值-1关闭颜色支持。</target>
        </trans-unit>
        <trans-unit id="bd8509745ba6765cbc1907061264796d7663c212" translate="yes" xml:space="preserve">
          <source>This parameter replaces the value of the buffer-local variable &lt;code&gt;header-line-format&lt;/code&gt; (see &lt;a href=&quot;mode-line-basics#Mode-Line-Basics&quot;&gt;Mode Line Basics&lt;/a&gt;) of this window&amp;rsquo;s buffer whenever this window is displayed. The symbol &lt;code&gt;none&lt;/code&gt; means to suppress display of a header line for this window. Display and contents of the header line on other windows showing this buffer are not affected.</source>
          <target state="translated">每当显示此窗口时，此参数都会替换此窗口缓冲区的局部缓冲区变量 &lt;code&gt;header-line-format&lt;/code&gt; 的值（请参见&lt;a href=&quot;mode-line-basics#Mode-Line-Basics&quot;&gt;Mode Line Basics&lt;/a&gt;）。符号 &lt;code&gt;none&lt;/code&gt; 表示禁止显示该窗口的标题行。其他窗口上显示此缓冲区的标题行的显示和内容不受影响。</target>
        </trans-unit>
        <trans-unit id="2ec699ec9c8e7519372ba47de1ea0fe4ba54710b" translate="yes" xml:space="preserve">
          <source>This parameter replaces the value of the buffer-local variable &lt;code&gt;mode-line-format&lt;/code&gt; (see &lt;a href=&quot;mode-line-basics#Mode-Line-Basics&quot;&gt;Mode Line Basics&lt;/a&gt;) of this window&amp;rsquo;s buffer whenever this window is displayed. The symbol &lt;code&gt;none&lt;/code&gt; means to suppress display of a mode line for this window. Display and contents of the mode line on other windows showing this buffer are not affected.</source>
          <target state="translated">每当显示此窗口时，此参数都会替换该窗口的缓冲区的局部缓冲区变量 &lt;code&gt;mode-line-format&lt;/code&gt; 的值（请参见&lt;a href=&quot;mode-line-basics#Mode-Line-Basics&quot;&gt;Mode Line Basics&lt;/a&gt;）。符号 &lt;code&gt;none&lt;/code&gt; 表示禁止显示该窗口的模式行。其他窗口上显示此缓冲区的模式行的显示和内容不受影响。</target>
        </trans-unit>
        <trans-unit id="ea07d88807fca81810b36713d8feafdd8c4cb0f5" translate="yes" xml:space="preserve">
          <source>This parameter replaces the value of the buffer-local variable &lt;code&gt;tab-line-format&lt;/code&gt; (see &lt;a href=&quot;mode-line-basics#Mode-Line-Basics&quot;&gt;Mode Line Basics&lt;/a&gt;) of this window&amp;rsquo;s buffer whenever this window is displayed. The symbol &lt;code&gt;none&lt;/code&gt; means to suppress display of a tab line for this window. Display and contents of the tab line on other windows showing this buffer are not affected.</source>
          <target state="translated">每当显示此窗口时，此参数都会替换该窗口缓冲区的局部缓冲区变量 &lt;code&gt;tab-line-format&lt;/code&gt; 的值（请参见&lt;a href=&quot;mode-line-basics#Mode-Line-Basics&quot;&gt;Mode Line Basics&lt;/a&gt;）。符号 &lt;code&gt;none&lt;/code&gt; 表示禁止显示此窗口的选项卡行。其他窗口上显示该缓冲区的选项卡行的显示和内容不受影响。</target>
        </trans-unit>
        <trans-unit id="41c00b41d6d137508c8d8ab39ab98ef1c2585357" translate="yes" xml:space="preserve">
          <source>This parameter specifies a buffer, a direction where &lt;code&gt;nil&lt;/code&gt; means vertical and &lt;code&gt;t&lt;/code&gt; horizontal, and a size in pixels. If this window displays the specified buffer and its size in the indicated direction equals the size specified by this parameter, then Emacs will try to preserve the size of this window in the indicated direction. This parameter is installed and updated by the function &lt;code&gt;window-preserve-size&lt;/code&gt; (see &lt;a href=&quot;preserving-window-sizes#Preserving-Window-Sizes&quot;&gt;Preserving Window Sizes&lt;/a&gt;).</source>
          <target state="translated">此参数指定缓冲区，方向（其中 &lt;code&gt;nil&lt;/code&gt; 表示垂直和 &lt;code&gt;t&lt;/code&gt; 水平）以及大小（以像素为单位）。如果此窗口显示指定的缓冲区，并且其在指示方向上的大小等于此参数指定的大小，则Emacs将尝试在指示方向上保留此窗口的大小。该参数由 &lt;code&gt;window-preserve-size&lt;/code&gt; 功能安装和更新（请参见&amp;ldquo;&lt;a href=&quot;preserving-window-sizes#Preserving-Window-Sizes&quot;&gt;保留窗口尺寸&amp;rdquo;&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="4852787081058fd92ee5a74912af6016072c67fe" translate="yes" xml:space="preserve">
          <source>This parameter specifies a relative position of the frame&amp;rsquo;s window-system window in the stacking (Z-) order of the frame&amp;rsquo;s display.</source>
          <target state="translated">此参数指定框架的窗口系统窗口在框架显示的堆叠（Z-）顺序中的相对位置。</target>
        </trans-unit>
        <trans-unit id="60b30bc5fd34f7ee39bf385de781a443f02c1a56" translate="yes" xml:space="preserve">
          <source>This parameter specifies the desired fullscreen state of the frame after invoking the &lt;code&gt;toggle-frame-fullscreen&lt;/code&gt; command (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Frame-Commands.html#Frame-Commands&quot;&gt;Frame Commands&lt;/a&gt; in</source>
          <target state="translated">此参数指定调用之后的帧的期望的全屏状态 &lt;code&gt;toggle-frame-fullscreen&lt;/code&gt; 命令（参照&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Frame-Commands.html#Frame-Commands&quot;&gt;帧的命令&lt;/a&gt;在</target>
        </trans-unit>
        <trans-unit id="13db171be7a96dd431263ef790763257e7812873" translate="yes" xml:space="preserve">
          <source>This parameter specifies the height of the frame. It works just like &lt;code&gt;width&lt;/code&gt;, except vertically instead of horizontally.</source>
          <target state="translated">此参数指定框架的高度。它的工作原理与 &lt;code&gt;width&lt;/code&gt; 一样，只是垂直而不是水平。</target>
        </trans-unit>
        <trans-unit id="220ad6679b282431f44117a1a4f2876c1d9b616b" translate="yes" xml:space="preserve">
          <source>This parameter specifies the minimum native height (see &lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;Frame Geometry&lt;/a&gt;) of the frame, in characters. Normally, the functions that establish a frame&amp;rsquo;s initial size or resize a frame make sure that all the frame&amp;rsquo;s windows, horizontal scroll bars and dividers, mode and header lines, the echo area and the internal menu and tool bar can be displayed. This parameter, if non-&lt;code&gt;nil&lt;/code&gt; allows to make a frame smaller than that with the consequence that any components that do not fit will be clipped by the window manager.</source>
          <target state="translated">此参数以字符为单位指定&lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;框架&lt;/a&gt;的最小本机高度（请参见&amp;ldquo;框架几何&amp;rdquo;）。通常，用于确定框架初始尺寸或调整框架尺寸的功能确保可以显示所有框架窗口，水平滚动条和分隔线，模式和标题行，回显区域以及内部菜单和工具栏。如果此参数不为 &lt;code&gt;nil&lt;/code&gt; ，则允许使该框架的尺寸小于该尺寸，从而导致窗口管理器将裁剪任何不合适的组件。</target>
        </trans-unit>
        <trans-unit id="500401d99a4f98be993f7474e83ddea78b4bf383" translate="yes" xml:space="preserve">
          <source>This parameter specifies the minimum native width (see &lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;Frame Geometry&lt;/a&gt;) of the frame, in characters. Normally, the functions that establish a frame&amp;rsquo;s initial width or resize a frame horizontally make sure that all the frame&amp;rsquo;s windows, vertical scroll bars, fringes, margins and vertical dividers can be displayed. This parameter, if non-&lt;code&gt;nil&lt;/code&gt; allows to make a frame narrower than that with the consequence that any components that do not fit will be clipped by the window manager.</source>
          <target state="translated">此参数以字符为单位指定&lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;框架&lt;/a&gt;的最小本机宽度（请参见&amp;ldquo;框架几何&amp;rdquo;）。通常，用于建立框架初始宽度或水平调整框架大小的功能可确保显示所有框架窗口，垂直滚动条，条纹，边距和垂直分隔线。如果此参数不为 &lt;code&gt;nil&lt;/code&gt; ，则使该框架比该框架更窄，其结果是，窗口管理器将裁剪掉所有不合适的组件。</target>
        </trans-unit>
        <trans-unit id="16827b14a99ac4bd190dd9494af238eb8c88ecc3" translate="yes" xml:space="preserve">
          <source>This parameter specifies the opacity of the frame, on graphical displays that support variable opacity. It should be an integer between 0 and 100, where 0 means completely transparent and 100 means completely opaque. It can also have a &lt;code&gt;nil&lt;/code&gt; value, which tells Emacs not to set the frame opacity (leaving it to the window manager).</source>
          <target state="translated">此参数在支持可变不透明度的图形显示中指定框架的不透明度。它应该是0到100之间的整数，其中0表示完全透明，而100表示​​完全不透明。它也可以具有 &lt;code&gt;nil&lt;/code&gt; 值，该值告诉Emacs不要设置框架的不透明度（将其保留给窗口管理器）。</target>
        </trans-unit>
        <trans-unit id="dc3c010df2704242bd62337c6c4e53615d7539d7" translate="yes" xml:space="preserve">
          <source>This parameter specifies the width of the frame. It can be specified as in the following ways:</source>
          <target state="translated">该参数指定了框架的宽度。可以用以下方式指定。</target>
        </trans-unit>
        <trans-unit id="1813e6bc72a721928d2e936309adfea83df18dd3" translate="yes" xml:space="preserve">
          <source>This parameter specifies the window that this one has been cloned from. It is installed by &lt;code&gt;window-state-get&lt;/code&gt; (see &lt;a href=&quot;window-configurations#Window-Configurations&quot;&gt;Window Configurations&lt;/a&gt;).</source>
          <target state="translated">此参数指定从中克隆该窗口的窗口。它是通过 &lt;code&gt;window-state-get&lt;/code&gt; 安装的（请参见&lt;a href=&quot;window-configurations#Window-Configurations&quot;&gt;Window Configurations&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="a4ae7f76a8aa426d1a2e65e02eeabd44a78f7d1d" translate="yes" xml:space="preserve">
          <source>This parameter specifies whether to maximize the frame&amp;rsquo;s width, height or both. Its value can be &lt;code&gt;fullwidth&lt;/code&gt;, &lt;code&gt;fullheight&lt;/code&gt;, &lt;code&gt;fullboth&lt;/code&gt;, or &lt;code&gt;maximized&lt;/code&gt;. A &lt;em&gt;fullwidth&lt;/em&gt; frame is as wide as possible, a &lt;em&gt;fullheight&lt;/em&gt; frame is as tall as possible, and a &lt;em&gt;fullboth&lt;/em&gt; frame is both as wide and as tall as possible. A &lt;em&gt;maximized&lt;/em&gt; frame is like a &amp;ldquo;fullboth&amp;rdquo; frame, except that it usually keeps its title bar and the buttons for resizing and closing the frame. Also, maximized frames typically avoid hiding any task bar or panels displayed on the desktop. A &amp;ldquo;fullboth&amp;rdquo; frame, on the other hand, usually omits the title bar and occupies the entire available screen space.</source>
          <target state="translated">此参数指定是否最大化框架的宽度，高度或两者。其值可以是 &lt;code&gt;fullwidth&lt;/code&gt; ， &lt;code&gt;fullheight&lt;/code&gt; ， &lt;code&gt;fullboth&lt;/code&gt; ，或 &lt;code&gt;maximized&lt;/code&gt; 。甲&lt;em&gt;全角&lt;/em&gt;帧是尽可能宽，一个&lt;em&gt;fullheight&lt;/em&gt;帧是一样高可能的，并且一个&lt;em&gt;fullboth&lt;/em&gt;帧是既作为宽和高大越好。一个&lt;em&gt;最大化&lt;/em&gt;框架类似于&amp;ldquo;全幅&amp;rdquo;框架，不同之处在于它通常保留其标题栏和用于调整和关闭框架大小的按钮。同样，最大化的框架通常可以避免隐藏桌面上显示的任何任务栏或面板。另一方面，&amp;ldquo;全幅&amp;rdquo;框架通常会省略标题栏，并占据整个可用屏幕空间。</target>
        </trans-unit>
        <trans-unit id="b10d0af1350bf93c04231e48aba6ae152932aaab" translate="yes" xml:space="preserve">
          <source>This parameter takes effect when the frame is created. If specified as &lt;code&gt;nil&lt;/code&gt;, Emacs will try to set it to the minibuffer window of &lt;code&gt;default-minibuffer-frame&lt;/code&gt; (see &lt;a href=&quot;minibuffers-and-frames#Minibuffers-and-Frames&quot;&gt;Minibuffers and Frames&lt;/a&gt;). For an existing frame, this parameter can be used exclusively to specify another minibuffer window. It is not allowed to change it from a minibuffer window to &lt;code&gt;t&lt;/code&gt; and vice-versa, or from &lt;code&gt;t&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt;. If the parameter specifies a minibuffer window already, setting it to &lt;code&gt;nil&lt;/code&gt; has no effect.</source>
          <target state="translated">该参数在创建框架时生效。如果指定为 &lt;code&gt;nil&lt;/code&gt; ，Emacs将尝试将其设置为 &lt;code&gt;default-minibuffer-frame&lt;/code&gt; &lt;a href=&quot;minibuffers-and-frames#Minibuffers-and-Frames&quot;&gt;minibuffer &lt;/a&gt;-frame的minibuffer窗口（请参阅Minibuffers和Frames）。对于现有帧，此参数可以专门用于指定另一个小型缓冲区窗口。不允许将其从minibuffer窗口更改为 &lt;code&gt;t&lt;/code&gt; ，反之亦然，或从 &lt;code&gt;t&lt;/code&gt; 更改为 &lt;code&gt;nil&lt;/code&gt; 。如果参数已经指定了一个迷你缓冲区窗口，则将其设置为 &lt;code&gt;nil&lt;/code&gt; 无效。</target>
        </trans-unit>
        <trans-unit id="56b3a07615de410a1b6fd8e5fd08c25e5c1592b4" translate="yes" xml:space="preserve">
          <source>This parameter was introduced in Emacs version 25.1 to support applications that use large margins to center buffer text within a window and should be used, with due care, exclusively by those applications. It might be replaced by an improved solution in future versions of Emacs.</source>
          <target state="translated">这个参数是在Emacs 25.1版本中引入的,目的是支持那些在窗口内使用大页边距将缓冲区文本居中的应用程序,并且应该谨慎使用,只由这些应用程序使用。在Emacs的未来版本中,它可能会被一个改进的解决方案所取代。</target>
        </trans-unit>
        <trans-unit id="fba2e2a45f18cc9ffd9a266943bf1427c2983e79" translate="yes" xml:space="preserve">
          <source>This predicate (whose name comes from the phrase &amp;ldquo;natural number&amp;rdquo;) tests to see whether its argument is a nonnegative integer, and returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise. 0 is considered non-negative.</source>
          <target state="translated">该谓词（其名称来自短语&amp;ldquo;自然数&amp;rdquo;）进行测试以查看其参数是否为非负整数，如果是，则返回 &lt;code&gt;t&lt;/code&gt; ，否则返回 &lt;code&gt;nil&lt;/code&gt; 。0被认为是非负数。</target>
        </trans-unit>
        <trans-unit id="083a57f120b4debea450b8a7f3fd187085477c9e" translate="yes" xml:space="preserve">
          <source>This predicate function does what &lt;code&gt;string-match&lt;/code&gt; does, but it avoids modifying the match data.</source>
          <target state="translated">该谓词函数执行 &lt;code&gt;string-match&lt;/code&gt; 操作，但是避免修改匹配数据。</target>
        </trans-unit>
        <trans-unit id="975fd9a6c95dbfb2260b5cd3bc2a1d38647b0145" translate="yes" xml:space="preserve">
          <source>This predicate function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;code&gt;object&lt;/code&gt; is a timer.</source>
          <target state="translated">如果 &lt;code&gt;object&lt;/code&gt; 是计时器，则此谓词函数将返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c3272cdf7a150380c9807fbff4d704899004de96" translate="yes" xml:space="preserve">
          <source>This predicate function returns non-&lt;code&gt;nil&lt;/code&gt; if the mouse pointer displayed on &lt;var&gt;frame&lt;/var&gt; is visible; otherwise it returns &lt;code&gt;nil&lt;/code&gt;. &lt;var&gt;frame&lt;/var&gt; omitted or &lt;code&gt;nil&lt;/code&gt; means the selected frame. This is useful when &lt;code&gt;make-pointer-invisible&lt;/code&gt; is set to &lt;code&gt;t&lt;/code&gt;: it allows you to know if the pointer has been hidden. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Mouse-Avoidance.html#Mouse-Avoidance&quot;&gt;Mouse Avoidance&lt;/a&gt; in</source>
          <target state="translated">如果显示在 &lt;var&gt;frame&lt;/var&gt; 上的鼠标指针可见，则该谓词函数将返回 &lt;code&gt;nil&lt;/code&gt; ;否则，该函数将返回nil。否则返回 &lt;code&gt;nil&lt;/code&gt; 。 &lt;var&gt;frame&lt;/var&gt; 省略或 &lt;code&gt;nil&lt;/code&gt; 手段所选择的帧。当 &lt;code&gt;make-pointer-invisible&lt;/code&gt; 设置为 &lt;code&gt;t&lt;/code&gt; 时，这很有用：它使您知道指针是否已隐藏。见&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Mouse-Avoidance.html#Mouse-Avoidance&quot;&gt;鼠标避免&lt;/a&gt;在</target>
        </trans-unit>
        <trans-unit id="b7cb8638f40c2ebb4006a81e5d23a398f6d9a6ba" translate="yes" xml:space="preserve">
          <source>This predicate function works like &lt;code&gt;looking-at&lt;/code&gt;, but without updating the match data.</source>
          <target state="translated">该谓词功能的作用类似于 &lt;code&gt;looking-at&lt;/code&gt; ，但不更新匹配数据。</target>
        </trans-unit>
        <trans-unit id="c34cbf123174b83ec291ccd467b7b6256fea9713" translate="yes" xml:space="preserve">
          <source>This predicate returns &lt;code&gt;t&lt;/code&gt; if its floating-point argument is a NaN, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">如果谓词的浮点参数为NaN，则该谓词返回 &lt;code&gt;t&lt;/code&gt; ，否则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0991978cdd6e9b0d75671e2a04242a041730f9c0" translate="yes" xml:space="preserve">
          <source>This predicate returns a non-&lt;code&gt;nil&lt;/code&gt; value if &lt;var&gt;object&lt;/var&gt; is a frame, and &lt;code&gt;nil&lt;/code&gt; otherwise. For a frame, the value indicates which kind of display the frame uses:</source>
          <target state="translated">如果 &lt;var&gt;object&lt;/var&gt; 是一帧，则该谓词返回非 &lt;code&gt;nil&lt;/code&gt; 值，否则返回 &lt;code&gt;nil&lt;/code&gt; 。对于框架，该值指示框架使用哪种显示类型：</target>
        </trans-unit>
        <trans-unit id="85090501de9da9f291cf5d05c9059f78e364b791" translate="yes" xml:space="preserve">
          <source>This predicate returns a non-&lt;code&gt;nil&lt;/code&gt; value if &lt;var&gt;object&lt;/var&gt; is a terminal that is live (i.e., not deleted), and &lt;code&gt;nil&lt;/code&gt; otherwise. For live terminals, the return value indicates what kind of frames are displayed on that terminal; the list of possible values is the same as for &lt;code&gt;framep&lt;/code&gt; above.</source>
          <target state="translated">如果 &lt;var&gt;object&lt;/var&gt; 是活动的（即未删除）终端，则该谓词返回非 &lt;code&gt;nil&lt;/code&gt; 值，否则返回 &lt;code&gt;nil&lt;/code&gt; 。对于带电终端，返回值指示该终端上显示的帧类型。可能值的列表与上述 &lt;code&gt;framep&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="d9bdba95a4f5cf68ca65087e39da58a56f8bf3e1" translate="yes" xml:space="preserve">
          <source>This predicate returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a valid case table.</source>
          <target state="translated">如果 &lt;var&gt;object&lt;/var&gt; 是有效的case表，则该谓词返回non- &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7ae94733e1d2813ba78d314bee6a03223350d3e6" translate="yes" xml:space="preserve">
          <source>This predicate tests whether its argument is a large integer, and returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise. Unlike small integers, large integers can be &lt;code&gt;=&lt;/code&gt; or &lt;code&gt;eql&lt;/code&gt; even if they are not &lt;code&gt;eq&lt;/code&gt;.</source>
          <target state="translated">该谓词测试其参数是否为大整数，如果是，则返回 &lt;code&gt;t&lt;/code&gt; ，否则返回 &lt;code&gt;nil&lt;/code&gt; 。与小整数不同，即使不是 &lt;code&gt;eq&lt;/code&gt; ，大整数也可以是 &lt;code&gt;=&lt;/code&gt; 或 &lt;code&gt;eql&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="df6be79cd38e82ff9d7aa739bb616d881052dda6" translate="yes" xml:space="preserve">
          <source>This predicate tests whether its argument is a macro, and returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">该谓词测试其参数是否为宏，如果是，则返回 &lt;code&gt;t&lt;/code&gt; ，否则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2e6ccc250cf7f27c5f8a814295bb7bc70bea5bf7" translate="yes" xml:space="preserve">
          <source>This predicate tests whether its argument is a number (either integer or floating point), and returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">该谓词测试其参数是否为数字（整数或浮点数），如果是则返回 &lt;code&gt;t&lt;/code&gt; ，否则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d36d6cbe9b4ffbc373b0ff581f77a7b4b0b0935f" translate="yes" xml:space="preserve">
          <source>This predicate tests whether its argument is a small integer, and returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise. Small integers can be compared with &lt;code&gt;eq&lt;/code&gt;.</source>
          <target state="translated">该谓词测试其参数是否为小整数，如果是，则返回 &lt;code&gt;t&lt;/code&gt; ，否则返回 &lt;code&gt;nil&lt;/code&gt; 。小整数可以与 &lt;code&gt;eq&lt;/code&gt; 比较。</target>
        </trans-unit>
        <trans-unit id="875aca54c98227124ec4e47efb7bb7fe7187c801" translate="yes" xml:space="preserve">
          <source>This predicate tests whether its argument is a special form, and returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">该谓词测试其参数是否为特殊形式，如果是，则返回 &lt;code&gt;t&lt;/code&gt; ，否则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b0de1c35b3d732b0e53e8ab7ca4c0ce2316934f9" translate="yes" xml:space="preserve">
          <source>This predicate tests whether its argument is an integer, and returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">该谓词测试其参数是否为整数，如果是，则返回 &lt;code&gt;t&lt;/code&gt; ，否则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a8c027dd49f25a17849b4d7dd4317de706a4199a" translate="yes" xml:space="preserve">
          <source>This predicate tests whether its argument is floating point and returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">该谓词测试其参数是否为浮点，如果是则返回 &lt;code&gt;t&lt;/code&gt; ，否则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9272c9e1efdebef53407afb0f474969eb591636a" translate="yes" xml:space="preserve">
          <source>This predicate tests whether its argument is zero, and returns &lt;code&gt;t&lt;/code&gt; if so, &lt;code&gt;nil&lt;/code&gt; otherwise. The argument must be a number.</source>
          <target state="translated">该谓词测试其参数是否为零，如果 &lt;code&gt;nil&lt;/code&gt; 则返回 &lt;code&gt;t&lt;/code&gt; ，否则返回nil。参数必须是数字。</target>
        </trans-unit>
        <trans-unit id="c51e0987531445179cbfcfdcf7213070d7cfd77c" translate="yes" xml:space="preserve">
          <source>This property activates various features that change the way text is displayed. For example, it can make text appear taller or shorter, higher or lower, wider or narrow, or replaced with an image. See &lt;a href=&quot;display-property#Display-Property&quot;&gt;Display Property&lt;/a&gt;.</source>
          <target state="translated">此属性激活各种功能，这些功能可以更改文本的显示方式。例如，它可以使文本看起来更高或更短，更高或更低，更宽或更窄，或者被图像替换。请参阅&lt;a href=&quot;display-property#Display-Property&quot;&gt;显示属性&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d3477c9c8be33921d208326a3410a1a7e6d7ea2d" translate="yes" xml:space="preserve">
          <source>This property activates various features that change the way text is displayed. For example, it can make text appear taller or shorter, higher or lower, wider or narrower, or replaced with an image. See &lt;a href=&quot;display-property#Display-Property&quot;&gt;Display Property&lt;/a&gt;.</source>
          <target state="translated">此属性激活各种功能，这些功能可以更改文本的显示方式。例如，它可以使文本显得更高或更低，更高或更低，更宽或更窄，或者被图像替代。请参阅&lt;a href=&quot;display-property#Display-Property&quot;&gt;显示属性&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9c929b443b54b5e414ee61f71f93112e679c76e8" translate="yes" xml:space="preserve">
          <source>This property controls the appearance of the text (see &lt;a href=&quot;faces#Faces&quot;&gt;Faces&lt;/a&gt;). The value of the property can be the following:</source>
          <target state="translated">此属性控制文本的外观（请参见&lt;a href=&quot;faces#Faces&quot;&gt;Faces&lt;/a&gt;）。该属性的值可以如下：</target>
        </trans-unit>
        <trans-unit id="c2d0f0229ae518416429a0156978b4e4bcfd36ca" translate="yes" xml:space="preserve">
          <source>This property counts the number of times the abbrev has been expanded. If not explicitly set, it is initialized to 0 by &lt;code&gt;define-abbrev&lt;/code&gt;.</source>
          <target state="translated">此属性计算缩写的扩展次数。如果未显式设置，则通过 &lt;code&gt;define-abbrev&lt;/code&gt; 将其初始化为0 。</target>
        </trans-unit>
        <trans-unit id="26ccd3469a95d8c74efa36977201cf82aa7ae80d" translate="yes" xml:space="preserve">
          <source>This property holds a counter incremented each time a new abbrev is added to the table.</source>
          <target state="translated">此属性拥有一个计数器,每次向表中添加新的缩写时都会递增。</target>
        </trans-unit>
        <trans-unit id="75f0fe2db504e09636b38095072fe2193000513e" translate="yes" xml:space="preserve">
          <source>This property holds a list of tables from which to inherit other abbrevs.</source>
          <target state="translated">此属性保存了一个表的列表,从中可以继承其他缩写。</target>
        </trans-unit>
        <trans-unit id="a9a30015f883285db73ea9d4d7efbf8906c78ce5" translate="yes" xml:space="preserve">
          <source>This property is used instead of &lt;code&gt;face&lt;/code&gt; when the mouse is on or near the character. For this purpose, &amp;ldquo;near&amp;rdquo; means that all text between the character and where the mouse is have the same &lt;code&gt;mouse-face&lt;/code&gt; property value.</source>
          <target state="translated">当鼠标在角色上或角色附近时，使用此属性代替 &lt;code&gt;face&lt;/code&gt; 。为此，&amp;ldquo;附近&amp;rdquo;是指字符与鼠标所在位置之间的所有文本都具有相同的 &lt;code&gt;mouse-face&lt;/code&gt; 属性值。</target>
        </trans-unit>
        <trans-unit id="f8d26fcf101ce57ae35fa5f66db3d8f1dd7f79b8" translate="yes" xml:space="preserve">
          <source>This property is used instead of &lt;code&gt;face&lt;/code&gt; when the mouse is within the range of the overlay. However, Emacs ignores all face attributes from this property that alter the text size (e.g., &lt;code&gt;:height&lt;/code&gt;, &lt;code&gt;:weight&lt;/code&gt;, and &lt;code&gt;:slant&lt;/code&gt;). Those attributes are always the same as in the unhighlighted text.</source>
          <target state="translated">当鼠标在覆盖范围内时，使用此属性代替 &lt;code&gt;face&lt;/code&gt; 。但是，Emacs会忽略此属性中所有更改文字大小的面部属性（例如 &lt;code&gt;:height&lt;/code&gt; ， &lt;code&gt;:weight&lt;/code&gt; 和 &lt;code&gt;:slant&lt;/code&gt; ）。这些属性始终与未突出显示的文本相同。</target>
        </trans-unit>
        <trans-unit id="dce37fb61fbd51bb4f6a980899fd7011d0682f35" translate="yes" xml:space="preserve">
          <source>This property list associates &lt;code&gt;pine&lt;/code&gt; with &lt;code&gt;cones&lt;/code&gt;, &lt;code&gt;numbers&lt;/code&gt; with &lt;code&gt;(1 2 3)&lt;/code&gt;, and &lt;code&gt;color&lt;/code&gt; with &lt;code&gt;&quot;blue&quot;&lt;/code&gt;. The property names and values can be any Lisp objects, but the names are usually symbols (as they are in this example).</source>
          <target state="translated">此属性列表将 &lt;code&gt;pine&lt;/code&gt; 与 &lt;code&gt;cones&lt;/code&gt; 关联， &lt;code&gt;numbers&lt;/code&gt; 与 &lt;code&gt;(1 2 3)&lt;/code&gt; 关联， &lt;code&gt;color&lt;/code&gt; 与 &lt;code&gt;&quot;blue&quot;&lt;/code&gt; 关联。属性名称和值可以是任何Lisp对象，但名称通常是符号（如本例中所示）。</target>
        </trans-unit>
        <trans-unit id="88cf656c745cc043e16b90433b2e4752ad16ceb3" translate="yes" xml:space="preserve">
          <source>This property provides a way to compute the menu item dynamically. The property value &lt;var&gt;filter-fn&lt;/var&gt; should be a function of one argument; when it is called, its argument will be &lt;var&gt;real-binding&lt;/var&gt;. The function should return the binding to use instead.</source>
          <target state="translated">此属性提供一种动态计算菜单项的方法。属性值 &lt;var&gt;filter-fn&lt;/var&gt; 应该是一个参数的函数；当它被调用时，其参数将是 &lt;var&gt;real-binding&lt;/var&gt; 。该函数应返回绑定以代替使用。</target>
        </trans-unit>
        <trans-unit id="46b7a8e42c2f354bec6dab05317844063bb34d06" translate="yes" xml:space="preserve">
          <source>This property provides a way to define radio buttons and toggle buttons. The &lt;small&gt;CAR&lt;/small&gt;, &lt;var&gt;type&lt;/var&gt;, says which: it should be &lt;code&gt;:toggle&lt;/code&gt; or &lt;code&gt;:radio&lt;/code&gt;. The &lt;small&gt;CDR&lt;/small&gt;, &lt;var&gt;selected&lt;/var&gt;, should be a form; the result of evaluating it says whether this button is currently selected.</source>
          <target state="translated">此属性提供了一种定义单选按钮和切换按钮的方法。该&lt;small&gt;CAR&lt;/small&gt;， &lt;var&gt;type&lt;/var&gt; ，说其：它应该是 &lt;code&gt;:toggle&lt;/code&gt; 或 &lt;code&gt;:radio&lt;/code&gt; 。的&lt;small&gt;CDR&lt;/small&gt;， &lt;var&gt;selected&lt;/var&gt; ，应该是一个形式; 评估结果表明当前是否已选择此按钮。</target>
        </trans-unit>
        <trans-unit id="5c039cc9e1ce7ea1e1f753eae18d311864902e76" translate="yes" xml:space="preserve">
          <source>This property says whether the text is ready for display. If &lt;code&gt;nil&lt;/code&gt;, Emacs&amp;rsquo;s redisplay routine calls the functions in &lt;code&gt;fontification-functions&lt;/code&gt; (see &lt;a href=&quot;auto-faces#Auto-Faces&quot;&gt;Auto Faces&lt;/a&gt;) to prepare this part of the buffer before it is displayed. It is used internally by the just-in-time font locking code.</source>
          <target state="translated">此属性说明文本是否已准备好显示。如果为 &lt;code&gt;nil&lt;/code&gt; ，则Emacs的重新显示例程将调用 &lt;code&gt;fontification-functions&lt;/code&gt; 中的函数（请参阅&lt;a href=&quot;auto-faces#Auto-Faces&quot;&gt;Auto Faces&lt;/a&gt;）以在显示缓冲区之前准备好该部分。即时字体锁定代码在内部使用它。</target>
        </trans-unit>
        <trans-unit id="e41f6cf9480ecee9a630942d6c931b6041ac5def" translate="yes" xml:space="preserve">
          <source>This property specifies a display spec to prepend to each continuation line at display-time. See &lt;a href=&quot;truncation#Truncation&quot;&gt;Truncation&lt;/a&gt;.</source>
          <target state="translated">此属性指定显示规范，以在显示时附加到每个续行。请参阅&lt;a href=&quot;truncation#Truncation&quot;&gt;截断&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9e5b1b0f4f375b3c40e6a0fb938ae855cf4466bc" translate="yes" xml:space="preserve">
          <source>This property specifies a display spec to prepend to each non-continuation line at display-time. See &lt;a href=&quot;truncation#Truncation&quot;&gt;Truncation&lt;/a&gt;.</source>
          <target state="translated">此属性指定显示规范，以在显示时附加到每个非连续行。请参阅&lt;a href=&quot;truncation#Truncation&quot;&gt;截断&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="319a7e9cfddcea8ca06fbb8d6a7298c8d54e9c87" translate="yes" xml:space="preserve">
          <source>This property specifies a value for the &lt;code&gt;face&lt;/code&gt; property that Font Lock mode should apply to the underlying text. It is one of the fontification methods used by Font Lock mode, and is useful for special modes that implement their own highlighting. See &lt;a href=&quot;precalculated-fontification#Precalculated-Fontification&quot;&gt;Precalculated Fontification&lt;/a&gt;. When Font Lock mode is disabled, &lt;code&gt;font-lock-face&lt;/code&gt; has no effect.</source>
          <target state="translated">此属性为字体锁定模式应应用于基础文本的 &lt;code&gt;face&lt;/code&gt; 属性指定一个值。它是&amp;ldquo;字体锁定&amp;rdquo;模式使用的字体化方法之一，对于实现自己突出显示的特殊模式很有用。请参见&lt;a href=&quot;precalculated-fontification#Precalculated-Fontification&quot;&gt;预先计算的字体&lt;/a&gt;。禁用字体锁定模式时， &lt;code&gt;font-lock-face&lt;/code&gt; 无效。</target>
        </trans-unit>
        <trans-unit id="066470928867b322b764e30f2cfb5f731df9751c" translate="yes" xml:space="preserve">
          <source>This property specifies an extra left margin for filling this part of the text.</source>
          <target state="translated">此属性指定了填充这部分文字的额外左页边距。</target>
        </trans-unit>
        <trans-unit id="4560e12e07587ef9a98a362cfe089438cdead139" translate="yes" xml:space="preserve">
          <source>This property specifies an extra right margin for filling this part of the text.</source>
          <target state="translated">此属性指定了填充这部分文字的额外右边距。</target>
        </trans-unit>
        <trans-unit id="b0fb91642f6d350e77e1b6d7a9f207e326502091" translate="yes" xml:space="preserve">
          <source>This property specifies that &lt;var&gt;string&lt;/var&gt; is the string to display as the keyboard equivalent for this menu item. You can use the &amp;lsquo;</source>
          <target state="translated">此属性指定 &lt;var&gt;string&lt;/var&gt; 是要显示为此菜单项的等效键盘的字符串。您可以使用&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="947b8a604b5f02e33ab66249b17e2cc68f23f437" translate="yes" xml:space="preserve">
          <source>This property specifies the style of justification for filling this part of the text.</source>
          <target state="translated">该属性指定了这部分文字的填充方式。</target>
        </trans-unit>
        <trans-unit id="408ee042972bd5e487a5441e49dca7c8524b81af" translate="yes" xml:space="preserve">
          <source>This property specifies which key sequence to display as keyboard equivalent. Before Emacs displays &lt;var&gt;key-sequence&lt;/var&gt; in the menu, it verifies that &lt;var&gt;key-sequence&lt;/var&gt; is really equivalent to this menu item, so it only has an effect if you specify a correct key sequence. Specifying &lt;code&gt;nil&lt;/code&gt; for &lt;var&gt;key-sequence&lt;/var&gt; is equivalent to the &lt;code&gt;:key-sequence&lt;/code&gt; attribute being absent.</source>
          <target state="translated">此属性指定将哪个键序列显示为等效的键盘。在Emacs在菜单中显示 &lt;var&gt;key-sequence&lt;/var&gt; 之前，它会验证 &lt;var&gt;key-sequence&lt;/var&gt; 确实等效于此菜单项，因此，只有指定正确的键序列，它才有效。指定 &lt;code&gt;nil&lt;/code&gt; 作为 &lt;var&gt;key-sequence&lt;/var&gt; 等效于 &lt;code&gt;:key-sequence&lt;/code&gt; 属性不存在。</target>
        </trans-unit>
        <trans-unit id="0c6e3b1e15429e92390803b7d2c89e1a1a17ced3" translate="yes" xml:space="preserve">
          <source>This property tells incremental search how to make an invisible overlay visible, permanently, if the final match overlaps it. See &lt;a href=&quot;invisible-text#Invisible-Text&quot;&gt;Invisible Text&lt;/a&gt;.</source>
          <target state="translated">如果最终匹配项重叠，则此属性告诉增量搜索如何永久显示不可见的叠加层。请参阅&lt;a href=&quot;invisible-text#Invisible-Text&quot;&gt;不可见文本&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ee0adec20553cd3733d41294342ce226b98fce90" translate="yes" xml:space="preserve">
          <source>This property tells incremental search how to make an invisible overlay visible, temporarily, during the search. See &lt;a href=&quot;invisible-text#Invisible-Text&quot;&gt;Invisible Text&lt;/a&gt;.</source>
          <target state="translated">此属性告诉增量搜索在搜索过程中如何临时使不可见的叠加层可见。请参阅&lt;a href=&quot;invisible-text#Invisible-Text&quot;&gt;不可见文本&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="941f2f9aa0981f31c10bd01f541a1c4ff07ba32a" translate="yes" xml:space="preserve">
          <source>This property value specifies the preferred key binding, when showing documentation, for the named function. See &lt;a href=&quot;keys-in-documentation#Keys-in-Documentation&quot;&gt;Keys in Documentation&lt;/a&gt;.</source>
          <target state="translated">显示文档时，此属性值指定命名函数的首选键绑定。请参阅&lt;a href=&quot;keys-in-documentation#Keys-in-Documentation&quot;&gt;文档中的键&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f12f6f4471f7bf40f3d10d34706aad2568066452" translate="yes" xml:space="preserve">
          <source>This property works like &lt;code&gt;keymap&lt;/code&gt; except that it specifies a keymap to use &lt;em&gt;instead of&lt;/em&gt; the buffer&amp;rsquo;s local map. For most purposes (perhaps all purposes), it is better to use the &lt;code&gt;keymap&lt;/code&gt; property.</source>
          <target state="translated">该属性的作用类似于 &lt;code&gt;keymap&lt;/code&gt; ,不同之处在于它指定了要使用的keymap&lt;em&gt;而不是&lt;/em&gt;缓冲区的本地映射。对于大多数目的（也许是所有目的），最好使用 &lt;code&gt;keymap&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="8038d88cf2b7af9745ca5759eec1c75551d60028" translate="yes" xml:space="preserve">
          <source>This property&amp;rsquo;s value determines the priority of the overlay. If you want to specify a priority value, use either &lt;code&gt;nil&lt;/code&gt; (or zero), or a positive integer. Any other value has undefined behavior.</source>
          <target state="translated">此属性的值确定叠加层的优先级。如果要指定优先级值，请使用 &lt;code&gt;nil&lt;/code&gt; （或零）或正整数。任何其他值都有未定义的行为。</target>
        </trans-unit>
        <trans-unit id="d8263b3cc2b75bb93edef1e1b2526768c8c3168b" translate="yes" xml:space="preserve">
          <source>This property&amp;rsquo;s value is a list of functions to be called before and after inserting text right at the beginning of the overlay. The calling conventions are the same as for the &lt;code&gt;modification-hooks&lt;/code&gt; functions.</source>
          <target state="translated">该属性的值是在叠加层开始处插入文本之前和之后要调用的函数的列表。调用约定与 &lt;code&gt;modification-hooks&lt;/code&gt; 函数相同。</target>
        </trans-unit>
        <trans-unit id="56741a519a731d9740cceebca5333924ea138fd8" translate="yes" xml:space="preserve">
          <source>This property&amp;rsquo;s value is a list of functions to be called before and after inserting text right at the end of the overlay. The calling conventions are the same as for the &lt;code&gt;modification-hooks&lt;/code&gt; functions.</source>
          <target state="translated">该属性的值是在叠加层末尾插入文本之前和之后要调用的函数的列表。调用约定与 &lt;code&gt;modification-hooks&lt;/code&gt; 函数相同。</target>
        </trans-unit>
        <trans-unit id="27865c20e8f49f56c94074bbe90cba6c46543ebf" translate="yes" xml:space="preserve">
          <source>This property&amp;rsquo;s value is a list of functions to be called if any character within the overlay is changed or if text is inserted strictly within the overlay.</source>
          <target state="translated">如果覆盖层中的任何字符被更改，或者如果文本严格插入覆盖层中，则此属性的值是要调用的函数的列表。</target>
        </trans-unit>
        <trans-unit id="0cfeea5194bb36721262145ee6f4de77c36e25c5" translate="yes" xml:space="preserve">
          <source>This property&amp;rsquo;s value is a string to add to the display at the beginning of the overlay. The string does not appear in the buffer in any sense&amp;mdash;only on the screen.</source>
          <target state="translated">此属性的值是要添加到覆盖图开头处的显示字符串。该字符串在任何意义上都不会出现在缓冲区中，仅出现在屏幕上。</target>
        </trans-unit>
        <trans-unit id="3207cdeae20e8ef35aa044ca30d684ad9f36d36b" translate="yes" xml:space="preserve">
          <source>This property&amp;rsquo;s value is a string to add to the display at the end of the overlay. The string does not appear in the buffer in any sense&amp;mdash;only on the screen.</source>
          <target state="translated">此属性的值是要添加到叠加层末尾显示中的字符串。该字符串在任何意义上都不会出现在缓冲区中，仅出现在屏幕上。</target>
        </trans-unit>
        <trans-unit id="6da911c299714acdfed8889a1653a73a467fdb2c" translate="yes" xml:space="preserve">
          <source>This regular expression contains four parts in succession and can be deciphered as follows:</source>
          <target state="translated">这个正则表达式先后包含四个部分,可以解读如下。</target>
        </trans-unit>
        <trans-unit id="b0f82443a5d9f2bfa2fd7c397d643a48a6003cf9" translate="yes" xml:space="preserve">
          <source>This removes only images that were put into &lt;var&gt;buffer&lt;/var&gt; the way &lt;code&gt;put-image&lt;/code&gt; does it, not images that were inserted with &lt;code&gt;insert-image&lt;/code&gt; or in other ways.</source>
          <target state="translated">这只会删除以 &lt;code&gt;put-image&lt;/code&gt; 方式放入 &lt;var&gt;buffer&lt;/var&gt; 的图像，而不会删除通过 &lt;code&gt;insert-image&lt;/code&gt; 或其他方式插入的图像。</target>
        </trans-unit>
        <trans-unit id="05984eb823fb3287757b3d43c54bdca6f0f899c4" translate="yes" xml:space="preserve">
          <source>This removes the element &lt;var&gt;element&lt;/var&gt; from &lt;code&gt;buffer-invisibility-spec&lt;/code&gt;. This does nothing if &lt;var&gt;element&lt;/var&gt; is not in the list.</source>
          <target state="translated">这将从 &lt;code&gt;buffer-invisibility-spec&lt;/code&gt; 中删除element &lt;var&gt;element&lt;/var&gt; 。如果 &lt;var&gt;element&lt;/var&gt; 不在列表中，则不会执行任何操作。</target>
        </trans-unit>
        <trans-unit id="09049b7883acb5c8f9aedb6fbc9b34cc69720da3" translate="yes" xml:space="preserve">
          <source>This replaces the default variable &lt;var&gt;mode&lt;/var&gt;, used to store the state of the mode. If you specify this, the &lt;var&gt;mode&lt;/var&gt; variable is not defined, and any &lt;var&gt;init-value&lt;/var&gt; argument is unused. &lt;var&gt;place&lt;/var&gt; can be a different named variable (which you must define yourself), or anything that can be used with the &lt;code&gt;setf&lt;/code&gt; function (see &lt;a href=&quot;generalized-variables#Generalized-Variables&quot;&gt;Generalized Variables&lt;/a&gt;). &lt;var&gt;place&lt;/var&gt; can also be a cons &lt;code&gt;(&lt;var&gt;get&lt;/var&gt; . &lt;var&gt;set&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;get&lt;/var&gt; is an expression that returns the current state, and &lt;var&gt;set&lt;/var&gt; is a function of one argument (a state) that sets it.</source>
          <target state="translated">这将替换默认变量 &lt;var&gt;mode&lt;/var&gt; ，该默认变量用于存储模式的状态。如果指定此选项，则未定义 &lt;var&gt;mode&lt;/var&gt; 变量，并且未使用任何 &lt;var&gt;init-value&lt;/var&gt; 参数。 &lt;var&gt;place&lt;/var&gt; 可以是一个不同的命名变量（必须自己定义），也可以是 &lt;code&gt;setf&lt;/code&gt; 函数可以使用的任何&lt;a href=&quot;generalized-variables#Generalized-Variables&quot;&gt;变量&lt;/a&gt;（请参见通用变量）。 &lt;var&gt;place&lt;/var&gt; 也可以是一个缺点 &lt;code&gt;(&lt;var&gt;get&lt;/var&gt; . &lt;var&gt;set&lt;/var&gt;)&lt;/code&gt; ，其中 &lt;var&gt;get&lt;/var&gt; 是返回当前状态，和一个表达式 &lt;var&gt;set&lt;/var&gt; 是一个参数（的状态），设置它的功能。</target>
        </trans-unit>
        <trans-unit id="2015f79f8a897ef9eec56c5f2889f1fd17b12d51" translate="yes" xml:space="preserve">
          <source>This represents a file to visit and a position in it; jumping to this value visits file &lt;var&gt;filename&lt;/var&gt; and goes to buffer position &lt;var&gt;position&lt;/var&gt;. Restoring this type of position asks the user for confirmation first.</source>
          <target state="translated">这表示要访问的文件及其中的位置；跳转到该值将访问文件文件 &lt;var&gt;filename&lt;/var&gt; ，然后转到缓冲区 &lt;var&gt;position&lt;/var&gt; 。恢复这种类型的位置首先要求用户确认。</target>
        </trans-unit>
        <trans-unit id="6e311e23ab12fc0f5ff77cf2c9dd596c8e6e5898" translate="yes" xml:space="preserve">
          <source>This represents a file to visit; jumping to this value visits file &lt;var&gt;filename&lt;/var&gt;.</source>
          <target state="translated">这表示要访问的文件；跳转到该值将访问文件 &lt;var&gt;filename&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="a41393dc89c086ec33aa75ec86f0b399f61aa5c0" translate="yes" xml:space="preserve">
          <source>This represents a frame configuration to restore, and a position to jump to in the current buffer.</source>
          <target state="translated">这代表了要恢复的帧配置,以及当前缓冲区中要跳转到的位置。</target>
        </trans-unit>
        <trans-unit id="26e426a26b1412c44b93ace1b6b3fcab4875fc28" translate="yes" xml:space="preserve">
          <source>This represents a window configuration to restore in one frame, and a position to jump to in the current buffer.</source>
          <target state="translated">这代表了一帧中要还原的窗口配置,以及当前缓冲区中要跳转到的位置。</target>
        </trans-unit>
        <trans-unit id="da81931882d07d70809d38c360b246cdb2dd7253" translate="yes" xml:space="preserve">
          <source>This results in the &lt;code&gt;lisp-indent-function&lt;/code&gt; property being set on the macro name.</source>
          <target state="translated">这导致在宏名称上设置了 &lt;code&gt;lisp-indent-function&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="37aa442144924bd9453ae9ecc7153598bb70f218" translate="yes" xml:space="preserve">
          <source>This returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;charcode&lt;/var&gt; is a valid character, and &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">如果 &lt;var&gt;charcode&lt;/var&gt; 是有效字符，则返回 &lt;code&gt;t&lt;/code&gt; ，否则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a3b912b3bf43b1998f3778c748f8e7993ae43646" translate="yes" xml:space="preserve">
          <source>This returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;color&lt;/var&gt; is a shade of gray, as defined on &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s display. If &lt;var&gt;frame&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, the question applies to the selected frame. If &lt;var&gt;color&lt;/var&gt; is not a valid color name, this function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;var&gt;color&lt;/var&gt; 是灰色的阴影，则返回 &lt;code&gt;t&lt;/code&gt; ，该颜色是在 &lt;var&gt;frame&lt;/var&gt; 的显示屏上定义的。如果省略 &lt;var&gt;frame&lt;/var&gt; 或 &lt;code&gt;nil&lt;/code&gt; ，则该问题适用于所选框架。如果 &lt;var&gt;color&lt;/var&gt; 不是有效的颜色名称，则此函数返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5ce1b95c5cf80fb93a3c901f405cc5d55ad4c92f" translate="yes" xml:space="preserve">
          <source>This returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;frame&lt;/var&gt; can really display the color &lt;var&gt;color&lt;/var&gt; (or at least something close to it). If &lt;var&gt;frame&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, the question applies to the selected frame.</source>
          <target state="translated">如果 &lt;var&gt;frame&lt;/var&gt; 可以真正显示 &lt;var&gt;color&lt;/var&gt; （或至少接近颜色），则返回 &lt;code&gt;t&lt;/code&gt; 。如果省略 &lt;var&gt;frame&lt;/var&gt; 或 &lt;code&gt;nil&lt;/code&gt; ，则该问题适用于所选框架。</target>
        </trans-unit>
        <trans-unit id="0868a58613e40d068044d92b2fcbe0318c821d31" translate="yes" xml:space="preserve">
          <source>This returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a bool-vector, and &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">如果 &lt;var&gt;object&lt;/var&gt; 是布尔向量，则返回 &lt;code&gt;t&lt;/code&gt; ,否则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0c839e2aa1a81e65848892fbef5edab950e41345" translate="yes" xml:space="preserve">
          <source>This returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a ring, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">如果 &lt;var&gt;object&lt;/var&gt; 是一个环，则返回 &lt;code&gt;t&lt;/code&gt; ，否则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4381c449d15b921805dbbd14f45e8923f0831d98" translate="yes" xml:space="preserve">
          <source>This returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a valid bitmap specification, suitable for use with &lt;code&gt;:stipple&lt;/code&gt; (see above). It returns &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">如果 &lt;var&gt;object&lt;/var&gt; 是有效的位图规范，则返回 &lt;code&gt;t&lt;/code&gt; ，该规范适合与 &lt;code&gt;:stipple&lt;/code&gt; 一起使用（请参见上文）。否则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7cf4b639cca363b302dd23f893bca560d01cd331" translate="yes" xml:space="preserve">
          <source>This returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;ring&lt;/var&gt; is empty, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">如果 &lt;var&gt;ring&lt;/var&gt; 为空，则返回 &lt;code&gt;t&lt;/code&gt; ，否则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="93817d8e919378ef8c20ba57745cdf9326d1c731" translate="yes" xml:space="preserve">
          <source>This returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;t1&lt;/var&gt; and &lt;var&gt;t2&lt;/var&gt; are equal time values. The result is &lt;code&gt;nil&lt;/code&gt; if either argument is a NaN.</source>
          <target state="translated">如果 &lt;var&gt;t1&lt;/var&gt; 和 &lt;var&gt;t2&lt;/var&gt; 是相等的时间值，则返回 &lt;code&gt;t&lt;/code&gt; 。如果任一自变量为NaN，则结果为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5edc74eb24a3425cda6dd10a21109bb768d1efdb" translate="yes" xml:space="preserve">
          <source>This returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;variable&lt;/var&gt; either has a buffer-local value in buffer &lt;var&gt;buffer&lt;/var&gt;, or is automatically buffer-local. Otherwise, it returns &lt;code&gt;nil&lt;/code&gt;. If omitted or &lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;buffer&lt;/var&gt; defaults to the current buffer.</source>
          <target state="translated">如果 &lt;var&gt;variable&lt;/var&gt; 在buffer &lt;var&gt;buffer&lt;/var&gt; 中具有本地缓冲区值，或者自动为本地缓冲区，则返回 &lt;code&gt;t&lt;/code&gt; 。否则，它返回 &lt;code&gt;nil&lt;/code&gt; 。如果省略或为 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;var&gt;buffer&lt;/var&gt; 默认为当前缓冲区。</target>
        </trans-unit>
        <trans-unit id="e86cfc93101aae6a4a6d9773191c1862b7d898d4" translate="yes" xml:space="preserve">
          <source>This returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;variable&lt;/var&gt; is buffer-local in buffer &lt;var&gt;buffer&lt;/var&gt; (which defaults to the current buffer); otherwise, &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;var&gt;variable&lt;/var&gt; 在缓冲区 &lt;var&gt;buffer&lt;/var&gt; 是本地缓冲区（默认为当前缓冲区），则返回 &lt;code&gt;t&lt;/code&gt; ；否则，为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="96866d4aec251ac68263fe50d85d77f85a84a7be" translate="yes" xml:space="preserve">
          <source>This returns &lt;code&gt;t&lt;/code&gt; if the faces &lt;var&gt;face1&lt;/var&gt; and &lt;var&gt;face2&lt;/var&gt; have the same attributes for display.</source>
          <target state="translated">如果人脸 &lt;var&gt;face1&lt;/var&gt; 和 &lt;var&gt;face2&lt;/var&gt; 具有相同的显示属性，则返回 &lt;code&gt;t&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d5224ca5851b00f960a5d63196e913a15a3c578a" translate="yes" xml:space="preserve">
          <source>This returns &lt;code&gt;t&lt;/code&gt; if time value &lt;var&gt;t1&lt;/var&gt; is less than time value &lt;var&gt;t2&lt;/var&gt;. The result is &lt;code&gt;nil&lt;/code&gt; if either argument is a NaN.</source>
          <target state="translated">如果时间值 &lt;var&gt;t1&lt;/var&gt; 小于时间值 &lt;var&gt;t2&lt;/var&gt; ,则返回 &lt;code&gt;t&lt;/code&gt; 。如果任一自变量为NaN，则结果为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ff8f0193f83cccc9ccc816f2dd5208de39cd29c1" translate="yes" xml:space="preserve">
          <source>This returns &lt;var&gt;number&lt;/var&gt; converted to floating point. If &lt;var&gt;number&lt;/var&gt; is already floating point, &lt;code&gt;float&lt;/code&gt; returns it unchanged.</source>
          <target state="translated">这将返回转换为浮点数的 &lt;var&gt;number&lt;/var&gt; 。如果 &lt;var&gt;number&lt;/var&gt; 已经是浮点数，则 &lt;code&gt;float&lt;/code&gt; 不变。</target>
        </trans-unit>
        <trans-unit id="f0d7fc8515dadfd4753d2f97902ec306a70efc45" translate="yes" xml:space="preserve">
          <source>This returns &lt;var&gt;number&lt;/var&gt;, converted to an integer by rounding downward (towards negative infinity).</source>
          <target state="translated">这将返回 &lt;var&gt;number&lt;/var&gt; ，通过向下舍入（朝负无穷大）将其转换为整数。</target>
        </trans-unit>
        <trans-unit id="9c11d272f5c65c378bcf9409cfcb71769bf2ae18" translate="yes" xml:space="preserve">
          <source>This returns &lt;var&gt;number&lt;/var&gt;, converted to an integer by rounding towards the nearest integer. Rounding a value equidistant between two integers returns the even integer.</source>
          <target state="translated">这将返回 &lt;var&gt;number&lt;/var&gt; ，通过四舍五入到最接近的整数将其转换为整数。对两个整数之间等距的值取整将返回偶数整数。</target>
        </trans-unit>
        <trans-unit id="e51762dba4a28b5f779343d3d77db63b0d1b518d" translate="yes" xml:space="preserve">
          <source>This returns &lt;var&gt;number&lt;/var&gt;, converted to an integer by rounding towards zero.</source>
          <target state="translated">这将返回 &lt;var&gt;number&lt;/var&gt; ，通过四舍五入将其转换为整数。</target>
        </trans-unit>
        <trans-unit id="e5d4a48f691122ae7d772af433c63d6b5c91b607" translate="yes" xml:space="preserve">
          <source>This returns &lt;var&gt;number&lt;/var&gt;, converted to an integer by rounding upward (towards positive infinity).</source>
          <target state="translated">这将返回 &lt;var&gt;number&lt;/var&gt; ，通过向上舍入（朝正无穷大）将其转换为整数。</target>
        </trans-unit>
        <trans-unit id="01f9e7cc335a6ab502fc49af5808a89e82fec2c9" translate="yes" xml:space="preserve">
          <source>This returns a cons cell &lt;code&gt;(&lt;var&gt;header&lt;/var&gt; . &lt;var&gt;footer&lt;/var&gt;)&lt;/code&gt; made from &lt;var&gt;ewoc&lt;/var&gt;&amp;rsquo;s header and footer.</source>
          <target state="translated">这将返回一个由 &lt;var&gt;ewoc&lt;/var&gt; 的页眉和页脚制成的con单元格 &lt;code&gt;(&lt;var&gt;header&lt;/var&gt; . &lt;var&gt;footer&lt;/var&gt;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="875e8657e61f397cced1836bbd86218971239aaa" translate="yes" xml:space="preserve">
          <source>This returns a copy of the property list of &lt;var&gt;overlay&lt;/var&gt;.</source>
          <target state="translated">这将返回 &lt;var&gt;overlay&lt;/var&gt; 属性列表的副本。</target>
        </trans-unit>
        <trans-unit id="d2dfe75954a08588ee6aad547b96e70c9c8e4f55" translate="yes" xml:space="preserve">
          <source>This returns a list of numbers that count the number of objects created in this Emacs session. Each of these counters increments for a certain kind of object. See the documentation string for details.</source>
          <target state="translated">这将返回一个数字列表,用来统计在这个Emacs会话中创建的对象数量。这些计数器中的每一个都是针对某类对象递增的。详情请看文档串。</target>
        </trans-unit>
        <trans-unit id="34776a3e64916dcadab81611ff9cb8a4bf02d987" translate="yes" xml:space="preserve">
          <source>This returns a list of the objects in &lt;var&gt;ring&lt;/var&gt;, in order, newest first.</source>
          <target state="translated">这将按先后顺序返回 &lt;var&gt;ring&lt;/var&gt; 中的对象列表。</target>
        </trans-unit>
        <trans-unit id="1ab43147f4b9862f2aa75a726f9a6d8e463c64c5" translate="yes" xml:space="preserve">
          <source>This returns a new ring capable of holding &lt;var&gt;size&lt;/var&gt; objects. &lt;var&gt;size&lt;/var&gt; should be an integer.</source>
          <target state="translated">这将返回一个能够容纳 &lt;var&gt;size&lt;/var&gt; 对象的新环。 &lt;var&gt;size&lt;/var&gt; 应为整数。</target>
        </trans-unit>
        <trans-unit id="3c3fcee6583b9eac5dbc4f56e3dde99738094d49" translate="yes" xml:space="preserve">
          <source>This returns a new ring which is a copy of &lt;var&gt;ring&lt;/var&gt;. The new ring contains the same (&lt;code&gt;eq&lt;/code&gt;) objects as &lt;var&gt;ring&lt;/var&gt;.</source>
          <target state="translated">这将返回一个新的环，该环副本 &lt;var&gt;ring&lt;/var&gt; 。新环包含相同的（ &lt;code&gt;eq&lt;/code&gt; ）对象作为 &lt;var&gt;ring&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="65c036754d1c25427b168d7cfe14e5946ace79df" translate="yes" xml:space="preserve">
          <source>This returns a string containing the characters &lt;var&gt;characters&lt;/var&gt;.</source>
          <target state="translated">这将返回一个包含字符 &lt;var&gt;characters&lt;/var&gt; 的字符串。</target>
        </trans-unit>
        <trans-unit id="71fe748e7f3eccf5e0946dd6c3d2ca6c89894819" translate="yes" xml:space="preserve">
          <source>This returns an Emacs function created from the C function &lt;var&gt;func&lt;/var&gt;, whose signature is as described for &lt;code&gt;module_func&lt;/code&gt; above (assumed here to be &lt;code&gt;typedef&lt;/code&gt;&amp;rsquo;ed as &lt;code&gt;subr&lt;/code&gt;). The arguments &lt;var&gt;min_arity&lt;/var&gt; and &lt;var&gt;max_arity&lt;/var&gt; specify the minimum and maximum number of arguments that &lt;var&gt;func&lt;/var&gt; can accept. The &lt;var&gt;max_arity&lt;/var&gt; argument can have the special value &lt;code&gt;emacs_variadic_function&lt;/code&gt;, which makes the function accept an unlimited number of arguments, like the &lt;code&gt;&amp;amp;rest&lt;/code&gt; keyword in Lisp (see &lt;a href=&quot;argument-list#Argument-List&quot;&gt;Argument List&lt;/a&gt;).</source>
          <target state="translated">此返回从C函数创建一个Emacs功能 &lt;var&gt;func&lt;/var&gt; ，其签名是作为用于描述 &lt;code&gt;module_func&lt;/code&gt; 上述（这里假定为 &lt;code&gt;typedef&lt;/code&gt; &amp;ldquo;ED作为 &lt;code&gt;subr&lt;/code&gt; ）。参数 &lt;var&gt;min_arity&lt;/var&gt; 和 &lt;var&gt;max_arity&lt;/var&gt; 指定 &lt;var&gt;func&lt;/var&gt; 可以接受的参数的最小和最大数目。该 &lt;var&gt;max_arity&lt;/var&gt; 参数可以有特殊值 &lt;code&gt;emacs_variadic_function&lt;/code&gt; ，这使得该函数接受的参数的数量不受限制，如同 &lt;code&gt;&amp;amp;rest&lt;/code&gt; Lisp的关键字（见&lt;a href=&quot;argument-list#Argument-List&quot;&gt;参数列表&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="eb3c5059729c336a838c733be57db4f22559a1c8" translate="yes" xml:space="preserve">
          <source>This returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;plist&lt;/var&gt; contains the given &lt;var&gt;property&lt;/var&gt;. Unlike &lt;code&gt;plist-get&lt;/code&gt;, this allows you to distinguish between a missing property and a property with the value &lt;code&gt;nil&lt;/code&gt;. The value is actually the tail of &lt;var&gt;plist&lt;/var&gt; whose &lt;code&gt;car&lt;/code&gt; is &lt;var&gt;property&lt;/var&gt;.</source>
          <target state="translated">这将返回非 &lt;code&gt;nil&lt;/code&gt; 如果 &lt;var&gt;plist&lt;/var&gt; 中包含给定的 &lt;var&gt;property&lt;/var&gt; 。与 &lt;code&gt;plist-get&lt;/code&gt; 不同，这允许您区分缺少的属性和值为 &lt;code&gt;nil&lt;/code&gt; 的属性。该值实际上是 &lt;var&gt;plist&lt;/var&gt; 的尾巴，其 &lt;code&gt;car&lt;/code&gt; 是 &lt;var&gt;property&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="7a90e16286f3932a9285396931964137921b9664" translate="yes" xml:space="preserve">
          <source>This returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;table&lt;/var&gt; is a hash table object.</source>
          <target state="translated">如果 &lt;var&gt;table&lt;/var&gt; 是哈希表对象，则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3c249527629f267214e5f4beaf93b8d756af18d0" translate="yes" xml:space="preserve">
          <source>This returns non-&lt;code&gt;nil&lt;/code&gt; if the face &lt;var&gt;face&lt;/var&gt; displays differently from the default face.</source>
          <target state="translated">如果人 &lt;var&gt;face&lt;/var&gt; 与默认人脸的显示方式不同，则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5629e5b680a27cdb23ea681c6f881e46eb7bb56e" translate="yes" xml:space="preserve">
          <source>This returns the &lt;var&gt;test&lt;/var&gt; value that was given when &lt;var&gt;table&lt;/var&gt; was created, to specify how to hash and compare keys. See &lt;code&gt;make-hash-table&lt;/code&gt; (see &lt;a href=&quot;creating-hash#Creating-Hash&quot;&gt;Creating Hash&lt;/a&gt;).</source>
          <target state="translated">这将返回创建 &lt;var&gt;table&lt;/var&gt; 时给出的 &lt;var&gt;test&lt;/var&gt; 值，以指定如何散列和比较键。请参见 &lt;code&gt;make-hash-table&lt;/code&gt; （请参阅&lt;a href=&quot;creating-hash#Creating-Hash&quot;&gt;创建哈希&lt;/a&gt;表）。</target>
        </trans-unit>
        <trans-unit id="948a541c5e80832dd928ff0eefae22ea67d67224" translate="yes" xml:space="preserve">
          <source>This returns the buffer where &lt;var&gt;ewoc&lt;/var&gt; maintains its text.</source>
          <target state="translated">这将返回 &lt;var&gt;ewoc&lt;/var&gt; 维护其文本的缓冲区。</target>
        </trans-unit>
        <trans-unit id="b092859812c67464305558a0b0aabc8e7e01ea4f" translate="yes" xml:space="preserve">
          <source>This returns the current nominal size of &lt;var&gt;table&lt;/var&gt;.</source>
          <target state="translated">这将返回 &lt;var&gt;table&lt;/var&gt; 的当前名义大小。</target>
        </trans-unit>
        <trans-unit id="c182f48a42a48a0a68382bf348910d68bdd3c053" translate="yes" xml:space="preserve">
          <source>This returns the day number within the year corresponding to &lt;var&gt;time-value&lt;/var&gt;, assuming the default time zone. The operating system limits the range of time and zone values.</source>
          <target state="translated">假设默认时区，则返回对应于 &lt;var&gt;time-value&lt;/var&gt; 的年份中的天数。操作系统限制时间和区域值的范围。</target>
        </trans-unit>
        <trans-unit id="463decc3d5accbbb9fdafa3bab2497b85927aff3" translate="yes" xml:space="preserve">
          <source>This returns the ending position of &lt;var&gt;event&lt;/var&gt;.</source>
          <target state="translated">这将返回 &lt;var&gt;event&lt;/var&gt; 的结束位置。</target>
        </trans-unit>
        <trans-unit id="4fe847f75aeb7d71dc6eee13922e14782e4a5e09" translate="yes" xml:space="preserve">
          <source>This returns the list of active keymaps that would be used by the command loop in the current circumstances to look up a key sequence. Normally it ignores &lt;code&gt;overriding-local-map&lt;/code&gt; and &lt;code&gt;overriding-terminal-local-map&lt;/code&gt;, but if &lt;var&gt;olp&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; then it pays attention to them. &lt;var&gt;position&lt;/var&gt; can optionally be either an event position as returned by &lt;code&gt;event-start&lt;/code&gt; or a buffer position, and may change the keymaps as described for &lt;code&gt;key-binding&lt;/code&gt;.</source>
          <target state="translated">这将返回活动键映射的列表，当前情况下命令循环将使用该键映射来查找键序列。通常，它会忽略 &lt;code&gt;overriding-local-map&lt;/code&gt; 和 &lt;var&gt;olp&lt;/var&gt; &lt;code&gt;overriding-terminal-local-map&lt;/code&gt; ，但是如果olp为非 &lt;code&gt;nil&lt;/code&gt; ,那么它将关注它们。 &lt;var&gt;position&lt;/var&gt; 可以选择是由 &lt;code&gt;event-start&lt;/code&gt; 返回的事件位置，也可以是缓冲区位置，并且可以按 &lt;code&gt;key-binding&lt;/code&gt; 所述更改keymap 。</target>
        </trans-unit>
        <trans-unit id="a331e4a8856270a8b8d7626f94c5661a9ce28807" translate="yes" xml:space="preserve">
          <source>This returns the maximum capacity of the &lt;var&gt;ring&lt;/var&gt;.</source>
          <target state="translated">这将返回 &lt;var&gt;ring&lt;/var&gt; 的最大容量。</target>
        </trans-unit>
        <trans-unit id="c4fc9fd0b9ec71660e9f92070e585e203e7e5de2" translate="yes" xml:space="preserve">
          <source>This returns the node in &lt;var&gt;ewoc&lt;/var&gt; found at zero-based index &lt;var&gt;n&lt;/var&gt;. A negative &lt;var&gt;n&lt;/var&gt; means count from the end. &lt;code&gt;ewoc-nth&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;n&lt;/var&gt; is out of range.</source>
          <target state="translated">这将返回 &lt;var&gt;ewoc&lt;/var&gt; 中位于从零开始的索引 &lt;var&gt;n&lt;/var&gt; 处的节点。负 &lt;var&gt;n&lt;/var&gt; 表示从头算起。如果 &lt;var&gt;n&lt;/var&gt; 超出范围，则 &lt;code&gt;ewoc-nth&lt;/code&gt; 返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7e7a3da817b8e3a470765907355d6d350d1839da" translate="yes" xml:space="preserve">
          <source>This returns the number of objects that &lt;var&gt;ring&lt;/var&gt; currently contains. The value will never exceed that returned by &lt;code&gt;ring-size&lt;/code&gt;.</source>
          <target state="translated">这将返回的对象是数量 &lt;var&gt;ring&lt;/var&gt; 目前包含。该值永远不会超过 &lt;code&gt;ring-size&lt;/code&gt; 返回的值。</target>
        </trans-unit>
        <trans-unit id="dd47362369e96dc2315d2331cfd8a022e182eb49" translate="yes" xml:space="preserve">
          <source>This returns the object in &lt;var&gt;ring&lt;/var&gt; found at index &lt;var&gt;index&lt;/var&gt;. &lt;var&gt;index&lt;/var&gt; may be negative or greater than the ring length. If &lt;var&gt;ring&lt;/var&gt; is empty, &lt;code&gt;ring-ref&lt;/code&gt; signals an error.</source>
          <target state="translated">这将返回索引为 &lt;var&gt;index&lt;/var&gt; 的 &lt;var&gt;ring&lt;/var&gt; 中的对象。 &lt;var&gt;index&lt;/var&gt; 可以为负或大于环长度。如果 &lt;var&gt;ring&lt;/var&gt; 为空，则 &lt;code&gt;ring-ref&lt;/code&gt; 会发出错误信号。</target>
        </trans-unit>
        <trans-unit id="1cadd800bec673dff8f3880281742d609319ad1a" translate="yes" xml:space="preserve">
          <source>This returns the object in the function cell of &lt;var&gt;symbol&lt;/var&gt;. It does not check that the returned object is a legitimate function.</source>
          <target state="translated">这将返回 &lt;var&gt;symbol&lt;/var&gt; 的功能单元中的对象。它不检查返回的对象是否是合法函数。</target>
        </trans-unit>
        <trans-unit id="b623b4fc462df87e734be3cd1b41ffc061a3ffb2" translate="yes" xml:space="preserve">
          <source>This returns the parent keymap of &lt;var&gt;keymap&lt;/var&gt;. If &lt;var&gt;keymap&lt;/var&gt; has no parent, &lt;code&gt;keymap-parent&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">这将返回keymap的父级 &lt;var&gt;keymap&lt;/var&gt; 。如果 &lt;var&gt;keymap&lt;/var&gt; 没有父级，则 &lt;code&gt;keymap-parent&lt;/code&gt; 返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f63e4bcd0b52bd6e4af0e6223f745f38357e3c5d" translate="yes" xml:space="preserve">
          <source>This returns the query flag of &lt;var&gt;process&lt;/var&gt;.</source>
          <target state="translated">这将返回 &lt;var&gt;process&lt;/var&gt; 的查询标志。</target>
        </trans-unit>
        <trans-unit id="c534efd2a0b3fc9e8d278f2977804f08e175cb60" translate="yes" xml:space="preserve">
          <source>This returns the rehash size of &lt;var&gt;table&lt;/var&gt;.</source>
          <target state="translated">这将返回 &lt;var&gt;table&lt;/var&gt; 的重新哈希大小。</target>
        </trans-unit>
        <trans-unit id="4bfb3a5eb062d29cdc825f788c9a91b5fe96bc03" translate="yes" xml:space="preserve">
          <source>This returns the rehash threshold of &lt;var&gt;table&lt;/var&gt;.</source>
          <target state="translated">这将返回 &lt;var&gt;table&lt;/var&gt; 的重新哈希阈值。</target>
        </trans-unit>
        <trans-unit id="53c9242b0ac9332f65b31c12052ac39dd627993e" translate="yes" xml:space="preserve">
          <source>This returns the square root of &lt;var&gt;arg&lt;/var&gt;. If &lt;var&gt;arg&lt;/var&gt; is finite and less than zero, &lt;code&gt;sqrt&lt;/code&gt; returns a NaN.</source>
          <target state="translated">这将返回 &lt;var&gt;arg&lt;/var&gt; 的平方根。如果 &lt;var&gt;arg&lt;/var&gt; 是有限的且小于零，则 &lt;code&gt;sqrt&lt;/code&gt; 返回NaN。</target>
        </trans-unit>
        <trans-unit id="74fca6aa74c9b0151073019f84401084c8b675fc" translate="yes" xml:space="preserve">
          <source>This returns the standard case table.</source>
          <target state="translated">这将返回标准案例表。</target>
        </trans-unit>
        <trans-unit id="6fef992f2f7f68cd981b77499b5f90098175b79e" translate="yes" xml:space="preserve">
          <source>This returns the start position of &lt;var&gt;node&lt;/var&gt;.</source>
          <target state="translated">这将返回 &lt;var&gt;node&lt;/var&gt; 的开始位置。</target>
        </trans-unit>
        <trans-unit id="e39dbdd0ceb66840ace5fbcfbb2be6ad8b917f75" translate="yes" xml:space="preserve">
          <source>This returns the starting position of &lt;var&gt;event&lt;/var&gt;.</source>
          <target state="translated">这将返回 &lt;var&gt;event&lt;/var&gt; 的起始位置。</target>
        </trans-unit>
        <trans-unit id="9f04e322ee80c2dcb64c9abf54e9c39edb40b5a8" translate="yes" xml:space="preserve">
          <source>This returns the sum of two time values, using the same conversion rules as &lt;code&gt;time-subtract&lt;/code&gt;. One argument should represent a time difference rather than a point in time, as a time value that is often just a single number of elapsed seconds. Here is how to add a number of seconds to a time value:</source>
          <target state="translated">这将使用与 &lt;code&gt;time-subtract&lt;/code&gt; 相同的转换规则返回两个时间值的总和。一个参数应该表示一个时差，而不是一个时间点，因为时间值通常仅是经过的秒数。这是在时间值上增加秒数的方法：</target>
        </trans-unit>
        <trans-unit id="352062e69b75de0569ad21f6c3d66388bc6a6013" translate="yes" xml:space="preserve">
          <source>This returns the time difference &lt;var&gt;t1&lt;/var&gt; - &lt;var&gt;t2&lt;/var&gt; between two time values, as a Lisp time value. The result is exact and its clock resolution is no worse than the worse of its two arguments&amp;rsquo; resolutions. The result is floating-point only if it is infinite or a NaN. If you need the difference in units of elapsed seconds, you can convert it with &lt;code&gt;time-convert&lt;/code&gt; or &lt;code&gt;float-time&lt;/code&gt;. See &lt;a href=&quot;time-conversion#Time-Conversion&quot;&gt;Time Conversion&lt;/a&gt;.</source>
          <target state="translated">这将两个时间值之间的时间差 &lt;var&gt;t1&lt;/var&gt; - &lt;var&gt;t2&lt;/var&gt; 作为Lisp时间值返回。结果是准确的，其时钟分辨率不比其两个参数的分辨率差。仅当结果为无穷大或NaN时，结果才为浮点数。如果需要以秒为单位的差异，则可以将其转换为 &lt;code&gt;time-convert&lt;/code&gt; 或 &lt;code&gt;float-time&lt;/code&gt; 。请参阅&lt;a href=&quot;time-conversion#Time-Conversion&quot;&gt;时间转换&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0075db4b2bc852afc323a3227f9d65b375602309" translate="yes" xml:space="preserve">
          <source>This returns the value of the &lt;code&gt;justification&lt;/code&gt; text property at point, or the variable &lt;code&gt;default-justification&lt;/code&gt; if there is no such text property. However, it returns &lt;code&gt;nil&lt;/code&gt; rather than &lt;code&gt;none&lt;/code&gt; to mean &amp;ldquo;don&amp;rsquo;t justify&amp;rdquo;.</source>
          <target state="translated">这将返回点处 &lt;code&gt;justification&lt;/code&gt; 文本属性的值，或者如果没有此类文本属性，则返回变量 &lt;code&gt;default-justification&lt;/code&gt; 。但是，它返回 &lt;code&gt;nil&lt;/code&gt; 而不是 &lt;code&gt;none&lt;/code&gt; 表示&amp;ldquo;不合理&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="ab6a14cacac282454ab76339669d0b9cccbe739e" translate="yes" xml:space="preserve">
          <source>This returns the value of the &lt;var&gt;property&lt;/var&gt; property stored in the property list &lt;var&gt;plist&lt;/var&gt;. It accepts a malformed &lt;var&gt;plist&lt;/var&gt; argument. If &lt;var&gt;property&lt;/var&gt; is not found in the &lt;var&gt;plist&lt;/var&gt;, it returns &lt;code&gt;nil&lt;/code&gt;. For example,</source>
          <target state="translated">这将返回的值 &lt;var&gt;property&lt;/var&gt; 存储在属性列表属性 &lt;var&gt;plist&lt;/var&gt; 。它接受格式错误的 &lt;var&gt;plist&lt;/var&gt; 参数。如果在 &lt;var&gt;plist&lt;/var&gt; 中找不到 &lt;var&gt;property&lt;/var&gt; ，则返回 &lt;code&gt;nil&lt;/code&gt; 。例如，</target>
        </trans-unit>
        <trans-unit id="1ba933afc263d6d34f28a95c674057b51925c84a" translate="yes" xml:space="preserve">
          <source>This returns the value specified in &lt;var&gt;char-table&lt;/var&gt; for a range of characters &lt;var&gt;range&lt;/var&gt;. Here are the possibilities for &lt;var&gt;range&lt;/var&gt;:</source>
          <target state="translated">这将返回在 &lt;var&gt;char-table&lt;/var&gt; 中为字符 &lt;var&gt;range&lt;/var&gt; 指定的值。这是 &lt;var&gt;range&lt;/var&gt; 的可能性：</target>
        </trans-unit>
        <trans-unit id="ea9e5a8aa8bc095203d3523c6532bc04fa6c436c" translate="yes" xml:space="preserve">
          <source>This rule also applies to carriage return (character code 13), if that character appears in the buffer. But carriage returns usually do not appear in buffer text; they are eliminated as part of end-of-line conversion (see &lt;a href=&quot;coding-system-basics#Coding-System-Basics&quot;&gt;Coding System Basics&lt;/a&gt;).</source>
          <target state="translated">如果该字符出现在缓冲区中，则此规则也适用于回车（字符代码13）。但是回车符通常不会出现在缓冲区文本中；作为行尾转换的一部分，它们被消除（请参阅《&lt;a href=&quot;coding-system-basics#Coding-System-Basics&quot;&gt;编码系统基础知识》&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="87d7d27eb0f1ccf7ed91e2ad7708b90110efb461" translate="yes" xml:space="preserve">
          <source>This runs &lt;code&gt;window-scroll-functions&lt;/code&gt;, followed by &lt;code&gt;window-configuration-change-hook&lt;/code&gt;. See &lt;a href=&quot;window-hooks#Window-Hooks&quot;&gt;Window Hooks&lt;/a&gt;.</source>
          <target state="translated">这将运行 &lt;code&gt;window-scroll-functions&lt;/code&gt; ，然后运行window- &lt;code&gt;window-configuration-change-hook&lt;/code&gt; 。请参阅&lt;a href=&quot;window-hooks#Window-Hooks&quot;&gt;窗钩&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9de5c37aceb2f9334cb7face8e382ba6e1e682c1" translate="yes" xml:space="preserve">
          <source>This says that &lt;code&gt;shell-mode&lt;/code&gt; is defined in</source>
          <target state="translated">这表示 &lt;code&gt;shell-mode&lt;/code&gt; 是在</target>
        </trans-unit>
        <trans-unit id="e6088724bb93f951c4eb6c7ed08477b700f19a1d" translate="yes" xml:space="preserve">
          <source>This says to load the image from file &lt;var&gt;file&lt;/var&gt;. If &lt;var&gt;file&lt;/var&gt; is not an absolute file name, it is expanded relative to the</source>
          <target state="translated">这表示从文件 &lt;var&gt;file&lt;/var&gt; 加载图像。如果 &lt;var&gt;file&lt;/var&gt; 不是绝对文件名，则相对于</target>
        </trans-unit>
        <trans-unit id="136b0d51fa7856677cf7da4c7bdb2a0a2ce50013" translate="yes" xml:space="preserve">
          <source>This section describes additional variables that a major mode can set by means of &lt;var&gt;other-vars&lt;/var&gt; in &lt;code&gt;font-lock-defaults&lt;/code&gt; (see &lt;a href=&quot;font-lock-basics#Font-Lock-Basics&quot;&gt;Font Lock Basics&lt;/a&gt;).</source>
          <target state="translated">本节描述了额外的变量，一个主要模式可以借助于设置 &lt;var&gt;other-vars&lt;/var&gt; 在 &lt;code&gt;font-lock-defaults&lt;/code&gt; （参见&lt;a href=&quot;font-lock-basics#Font-Lock-Basics&quot;&gt;字体锁定基础&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="c97ca81df1d4e4851cc25d5aec68a427c578eb8d" translate="yes" xml:space="preserve">
          <source>This section describes all the simple customization types. For several of these customization types, the customization widget provides inline completion with</source>
          <target state="translated">本节介绍所有简单的自定义类型。对于其中的几种自定义类型,自定义小组件提供了内联完成与</target>
        </trans-unit>
        <trans-unit id="5757862d6dd39ad2e4194259236662bc74bd9d6e" translate="yes" xml:space="preserve">
          <source>This section describes alternative search functions which perform the full backtracking specified by the POSIX standard for regular expression matching. They continue backtracking until they have tried all possibilities and found all matches, so they can report the longest match, as required by POSIX. This is much slower, so use these functions only when you really need the longest match.</source>
          <target state="translated">本节介绍了替代性的搜索函数,这些函数执行POSIX标准规定的正则表达式匹配的完全回溯。它们继续回溯,直到它们尝试了所有的可能性并找到了所有的匹配,所以它们可以按照POSIX的要求报告最长的匹配。这要慢得多,所以只有在真正需要最长匹配的时候才使用这些函数。</target>
        </trans-unit>
        <trans-unit id="93dc64212efd2722e65d07586262634c4e25e3ac" translate="yes" xml:space="preserve">
          <source>This section describes commands that indent all the lines in the region. They return unpredictable values.</source>
          <target state="translated">本节介绍了在区域内缩进所有行的命令。它们会返回不可预测的值。</target>
        </trans-unit>
        <trans-unit id="2836810fdb20390b10f1c0ccfec312382f01b6f4" translate="yes" xml:space="preserve">
          <source>This section describes constructs that are often used together with &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;cond&lt;/code&gt; to express complicated conditions. The constructs &lt;code&gt;and&lt;/code&gt; and &lt;code&gt;or&lt;/code&gt; can also be used individually as kinds of multiple conditional constructs.</source>
          <target state="translated">本节描述了经常与 &lt;code&gt;if&lt;/code&gt; 和 &lt;code&gt;cond&lt;/code&gt; 一起使用以表示复杂条件的构造。构造 &lt;code&gt;and&lt;/code&gt; 和 &lt;code&gt;or&lt;/code&gt; 也可以单独用作多种条件构造。</target>
        </trans-unit>
        <trans-unit id="2939de5f07655fb6039ef8dda64c5825f7b065a1" translate="yes" xml:space="preserve">
          <source>This section describes convenient functions for accessing the data in a mouse button or motion event. Keyboard event data can be accessed using the same functions, but data elements that aren&amp;rsquo;t applicable to keyboard events are zero or &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">本节介绍在鼠标按钮或运动事件中访问数据的便捷功能。可以使用相同的功能访问键盘事件数据，但是不适用于键盘事件的数据元素为0或 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="607a7b0b48aab5be8e32f53128987e928331b4c0" translate="yes" xml:space="preserve">
          <source>This section describes facilities for asking the user more complex questions or several similar questions.</source>
          <target state="translated">本节介绍了向用户提出更复杂的问题或几个类似问题的设施。</target>
        </trans-unit>
        <trans-unit id="79ddc32d7e3c06a192c262ce01223ee6d9001053" translate="yes" xml:space="preserve">
          <source>This section describes functions and variables for recording or manipulating terminal input. See &lt;a href=&quot;display#Display&quot;&gt;Display&lt;/a&gt;, for related functions.</source>
          <target state="translated">本节介绍了用于记录或操作终端输入的功能和变量。有关相关功能，请参见&lt;a href=&quot;display#Display&quot;&gt;显示&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2d5a3c334236891680f1d194252d09fa33b318e0" translate="yes" xml:space="preserve">
          <source>This section describes functions and variables used internally by the debugger.</source>
          <target state="translated">本节介绍调试器内部使用的函数和变量。</target>
        </trans-unit>
        <trans-unit id="cef4dede957fdb3aabc4a03f1c4e3b6e01c9fb30" translate="yes" xml:space="preserve">
          <source>This section describes functions for converting between characters, strings and integers. &lt;code&gt;format&lt;/code&gt; (see &lt;a href=&quot;formatting-strings#Formatting-Strings&quot;&gt;Formatting Strings&lt;/a&gt;) and &lt;code&gt;prin1-to-string&lt;/code&gt; (see &lt;a href=&quot;output-functions#Output-Functions&quot;&gt;Output Functions&lt;/a&gt;) can also convert Lisp objects into strings. &lt;code&gt;read-from-string&lt;/code&gt; (see &lt;a href=&quot;input-functions#Input-Functions&quot;&gt;Input Functions&lt;/a&gt;) can convert a string representation of a Lisp object into an object. The functions &lt;code&gt;string-to-multibyte&lt;/code&gt; and &lt;code&gt;string-to-unibyte&lt;/code&gt; convert the text representation of a string (see &lt;a href=&quot;converting-representations#Converting-Representations&quot;&gt;Converting Representations&lt;/a&gt;).</source>
          <target state="translated">本节介绍在字符，字符串和整数之间转换的函数。 &lt;code&gt;format&lt;/code&gt; （请参阅&lt;a href=&quot;formatting-strings#Formatting-Strings&quot;&gt;格式化字符串&lt;/a&gt;）和 &lt;code&gt;prin1-to-string&lt;/code&gt; （请参见&lt;a href=&quot;output-functions#Output-Functions&quot;&gt;输出函数&lt;/a&gt;）也可以将Lisp对象转换为字符串。 &lt;code&gt;read-from-string&lt;/code&gt; （请参阅&lt;a href=&quot;input-functions#Input-Functions&quot;&gt;输入函数&lt;/a&gt;）可以将Lisp对象的字符串表示形式转换为对象。 &lt;code&gt;string-to-multibyte&lt;/code&gt; 和 &lt;code&gt;string-to-unibyte&lt;/code&gt; 到单字节功能&lt;a href=&quot;converting-representations#Converting-Representations&quot;&gt;可转换&lt;/a&gt;字符串的文本表示形式（请参阅转换表示形式）。</target>
        </trans-unit>
        <trans-unit id="35cbe2c2fb4ed671dbe4014681b6b2d86a7db664" translate="yes" xml:space="preserve">
          <source>This section describes functions for creating a new window by &lt;em&gt;splitting&lt;/em&gt; an existing one. Note that some windows are special in the sense that these functions may fail to split them as described here. Examples of such windows are side windows (see &lt;a href=&quot;side-windows#Side-Windows&quot;&gt;Side Windows&lt;/a&gt;) and atomic windows (see &lt;a href=&quot;atomic-windows#Atomic-Windows&quot;&gt;Atomic Windows&lt;/a&gt;).</source>
          <target state="translated">本节介绍通过&lt;em&gt;拆分&lt;/em&gt;现有窗口来创建新窗口的功能。请注意，某些窗口在某些意义上是特殊的，因为这些功能可能无法按此处所述将它们分开。这样的窗口的示例是侧面窗（请参阅&lt;a href=&quot;side-windows#Side-Windows&quot;&gt;Side Windows&lt;/a&gt;）和原子窗（请参阅&lt;a href=&quot;atomic-windows#Atomic-Windows&quot;&gt;Atomic Windows&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="47818cf56fc4f7e8903a6ce34c77610b7b955042" translate="yes" xml:space="preserve">
          <source>This section describes functions for directly accessing and modifying the attributes of a named face.</source>
          <target state="translated">本节介绍了直接访问和修改命名面的属性的函数。</target>
        </trans-unit>
        <trans-unit id="141033a3273f41ed06dd6b3e27f17379eac30a59" translate="yes" xml:space="preserve">
          <source>This section describes functions for moving across characters that have certain syntax classes.</source>
          <target state="translated">本节介绍了用于在具有特定语法类的字符之间移动的功能。</target>
        </trans-unit>
        <trans-unit id="06f7a77fcec2e0268be02cf39a4935cae6c8e26e" translate="yes" xml:space="preserve">
          <source>This section describes functions for parsing and scanning balanced expressions. We will refer to such expressions as &lt;em&gt;sexps&lt;/em&gt;, following the terminology of Lisp, even though these functions can act on languages other than Lisp. Basically, a sexp is either a balanced parenthetical grouping, a string, or a symbol (i.e., a sequence of characters whose syntax is either word constituent or symbol constituent). However, characters in the expression prefix syntax class (see &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;Syntax Class Table&lt;/a&gt;) are treated as part of the sexp if they appear next to it.</source>
          <target state="translated">本节介绍解析和扫描平衡表达式的函数。我们将使用Lisp的术语将此类表达式称为&lt;em&gt;sexps&lt;/em&gt;，即使这些功能可以对Lisp以外的语言起作用。基本上，sexp可以是平衡的括号组，字符串或符号（即，其语法为单词组成或符号组成的字符序列）。然而，在表达式前缀语法类的字符（见&lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;语法类表&lt;/a&gt;）被视为在SEXP的一部分，如果它们出现在它旁边。</target>
        </trans-unit>
        <trans-unit id="57d33f2538dacfd6efddb8fce2fddea46960a01f" translate="yes" xml:space="preserve">
          <source>This section describes functions for reading Lisp objects with the minibuffer.</source>
          <target state="translated">本节介绍了使用迷你缓冲区读取Lisp对象的功能。</target>
        </trans-unit>
        <trans-unit id="b42b78d5eec9408bd106c897f6c7b50efeb38b04" translate="yes" xml:space="preserve">
          <source>This section describes functions for resizing a window without changing the size of its frame. Because live windows do not overlap, these functions are meaningful only on frames that contain two or more windows: resizing a window also changes the size of a neighboring window. If there is just one window on a frame, its size cannot be changed except by resizing the frame (see &lt;a href=&quot;frame-size#Frame-Size&quot;&gt;Frame Size&lt;/a&gt;).</source>
          <target state="translated">本节介绍在不更改窗口框架大小的情况下调整窗口大小的功能。由于活动窗口不会重叠，因此这些功能仅在包含两个或多个窗口的框架上才有意义：调整窗口大小还会更改相邻窗口的大小。如果框架上只有一个窗口，则只能通过调整框架的大小来更改其大小（请参见&lt;a href=&quot;frame-size#Frame-Size&quot;&gt;Frame Size&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="c7eb332ef0c83ed8145dea770111e02c1fc7db05" translate="yes" xml:space="preserve">
          <source>This section describes functions that accept any kind of sequence.</source>
          <target state="translated">本节介绍了接受任何类型序列的函数。</target>
        </trans-unit>
        <trans-unit id="f9af78a410b908ce8ce944214cddbcacca84c3b5" translate="yes" xml:space="preserve">
          <source>This section describes functions that allow a Lisp program to convert any portion of the text in the buffer into a string.</source>
          <target state="translated">本节介绍了允许Lisp程序将缓冲区中的任何部分文本转换为字符串的函数。</target>
        </trans-unit>
        <trans-unit id="985654ce26f2910ad902a31cfac301e6b2b4cda1" translate="yes" xml:space="preserve">
          <source>This section describes functions that report positions of and within a window. Most of these functions report positions relative to an origin at the native position of the window&amp;rsquo;s frame (see &lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;Frame Geometry&lt;/a&gt;). Some functions report positions relative to the origin of the display of the window&amp;rsquo;s frame. In any case, the origin has the coordinates (0, 0) and X and Y coordinates increase rightward and downward respectively.</source>
          <target state="translated">本节介绍报告窗口位置和窗口内部的功能。这些功能大多数都报告相对于窗口框架原始位置的原点的位置（请参见&lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;框架几何&lt;/a&gt;）。某些功能报告相对于窗口框架显示原点的位置。无论如何，原点的坐标为（0，0），X和Y坐标分别向右和向下增加。</target>
        </trans-unit>
        <trans-unit id="43de4fdfa66a4fc976e043188f0db1074fb72a6b" translate="yes" xml:space="preserve">
          <source>This section describes functions to read and change the parameter values of a terminal. They all accept as their argument either a terminal or a frame; the latter means use that frame&amp;rsquo;s terminal. An argument of &lt;code&gt;nil&lt;/code&gt; means the selected frame&amp;rsquo;s terminal.</source>
          <target state="translated">本节介绍读取和更改端子的参数值​​的功能。他们都接受终端或框架作为论点。后者意味着使用该框架的终端。参数 &lt;code&gt;nil&lt;/code&gt; 表示所选帧的终端。</target>
        </trans-unit>
        <trans-unit id="d830681066b97fc59528b1103233882bc7f7f540" translate="yes" xml:space="preserve">
          <source>This section describes functions used to ask the user a yes-or-no question. The function &lt;code&gt;y-or-n-p&lt;/code&gt; can be answered with a single character; it is useful for questions where an inadvertent wrong answer will not have serious consequences. &lt;code&gt;yes-or-no-p&lt;/code&gt; is suitable for more momentous questions, since it requires three or four characters to answer.</source>
          <target state="translated">本节介绍了用于向用户询问是或否问题的功能。函数 &lt;code&gt;y-or-n-p&lt;/code&gt; 可以用单个字符回答；对于无意中错误回答不会造成严重后果的问题很有用。 &lt;code&gt;yes-or-no-p&lt;/code&gt; 适用于更重要的问题，因为它需要三个或四个字符才能回答。</target>
        </trans-unit>
        <trans-unit id="eb39a938eae6ae2876ea62342933b25512356802" translate="yes" xml:space="preserve">
          <source>This section describes functions used to scan all the current keymaps for the sake of printing help information.</source>
          <target state="translated">本节介绍了用于扫描当前所有键鼠图的功能,以便打印帮助信息。</target>
        </trans-unit>
        <trans-unit id="9afe702fe12b669b1b195f12f0598f5be106c8e5" translate="yes" xml:space="preserve">
          <source>This section describes high-level functions for switching to a specified buffer in some window. In general, &amp;ldquo;switching to a buffer&amp;rdquo; means to (1) show the buffer in some window, (2) make that window the selected window (and its frame the selected frame), and (3) make the buffer the current buffer.</source>
          <target state="translated">本节介绍在某些窗口中切换到指定缓冲区的高级功能。通常，&amp;ldquo;切换到缓冲区&amp;rdquo;是指（1）在某个窗口中显示缓冲区，（2）使该窗口成为所选窗口（及其框架成为所选帧），以及（3）使该缓冲区成为当前缓冲区。</target>
        </trans-unit>
        <trans-unit id="6ec332a9dc15d948615fa251bfa0a29716242a29" translate="yes" xml:space="preserve">
          <source>This section describes higher-level commands for deleting text, commands intended primarily for the user but useful also in Lisp programs.</source>
          <target state="translated">本节介绍了用于删除文本的高级命令,这些命令主要针对用户,但在Lisp程序中也很有用。</target>
        </trans-unit>
        <trans-unit id="8ac4fa32fe571f6948a8178f90f4bb7fc08258e2" translate="yes" xml:space="preserve">
          <source>This section describes higher-level commands for inserting text, commands intended primarily for the user but useful also in Lisp programs.</source>
          <target state="translated">本节介绍了用于插入文本的高级命令,这些命令主要是为用户准备的,但在Lisp程序中也很有用。</target>
        </trans-unit>
        <trans-unit id="4e4c785134d9f7da88d1b434b45ae65e4efca867" translate="yes" xml:space="preserve">
          <source>This section describes higher-level commands for yanking, which are intended primarily for the user but useful also in Lisp programs. Both &lt;code&gt;yank&lt;/code&gt; and &lt;code&gt;yank-pop&lt;/code&gt; honor the &lt;code&gt;yank-excluded-properties&lt;/code&gt; variable and &lt;code&gt;yank-handler&lt;/code&gt; text property (see &lt;a href=&quot;yanking#Yanking&quot;&gt;Yanking&lt;/a&gt;).</source>
          <target state="translated">本节描述了用于拉动的高级命令，这些命令主要供用户使用，但在Lisp程序中也很有用。无论 &lt;code&gt;yank&lt;/code&gt; 和 &lt;code&gt;yank-pop&lt;/code&gt; 荣誉 &lt;code&gt;yank-excluded-properties&lt;/code&gt; 变量， &lt;code&gt;yank-handler&lt;/code&gt; 文本属性（见&lt;a href=&quot;yanking#Yanking&quot;&gt;猛拉&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="0244187d4fb46d383ef8949507c568b3fd5eea49" translate="yes" xml:space="preserve">
          <source>This section describes how Lisp programs can take action after a window has been scrolled or other window modifications occurred. We first consider the case where a window shows a different part of its buffer.</source>
          <target state="translated">本节介绍了Lisp程序如何在窗口被滚动或发生其他窗口修改后采取行动。我们首先考虑窗口显示其缓冲区不同部分的情况。</target>
        </trans-unit>
        <trans-unit id="e042e288acb20b51a94bf664d993271c1f22c403" translate="yes" xml:space="preserve">
          <source>This section describes how characters are actually displayed by Emacs. Typically, a character is displayed as a &lt;em&gt;glyph&lt;/em&gt; (a graphical symbol which occupies one character position on the screen), whose appearance corresponds to the character itself. For example, the character &amp;lsquo;</source>
          <target state="translated">本节描述Emacs如何实际显示字符。通常，字符显示为&lt;em&gt;字形&lt;/em&gt;（在屏幕上占据一个字符位置的图形符号），其外观与字符本身相对应。例如，字符&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="f97182452a5c5bafb05df99573bec827f80e1eb1" translate="yes" xml:space="preserve">
          <source>This section describes how to change the position of an existing marker. When you do this, be sure you know whether the marker is used outside of your program, and, if so, what effects will result from moving it&amp;mdash;otherwise, confusing things may happen in other parts of Emacs.</source>
          <target state="translated">本节介绍如何更改现有标记的位置。执行此操作时，请确保您知道标记是否在程序外部使用，如果是，则将其移动会产生什么效果-否则，Emacs的其他部分可能会发生混乱。</target>
        </trans-unit>
        <trans-unit id="724d41af9e73d940223262ab6060a0e9edeed8ab" translate="yes" xml:space="preserve">
          <source>This section describes how to control the contents of the mode line and header line. We include it in this chapter because much of the information displayed in the mode line relates to the enabled major and minor modes.</source>
          <target state="translated">本节介绍了如何控制模式行和标题行的内容。我们在本章中加入了这一内容,因为模式行中显示的许多信息都与所启用的大调和小调有关。</target>
        </trans-unit>
        <trans-unit id="fa59843e7588f790eb908bfe744bb4959c5b641f" translate="yes" xml:space="preserve">
          <source>This section describes how to create and manipulate abbrev tables.</source>
          <target state="translated">本节介绍如何创建和操作缩写表。</target>
        </trans-unit>
        <trans-unit id="0deb6b47df17ceb642f9f9ef7e0cee0ba90849e4" translate="yes" xml:space="preserve">
          <source>This section describes how to define new forms that &lt;code&gt;setf&lt;/code&gt; can operate on.</source>
          <target state="translated">本节介绍如何定义 &lt;code&gt;setf&lt;/code&gt; 可以操作的新形式。</target>
        </trans-unit>
        <trans-unit id="5130c4e9532836c110b2ee9852e4b59bdeac3db0" translate="yes" xml:space="preserve">
          <source>This section describes how to distinguish various kinds of files, such as directories, symbolic links, and ordinary files.</source>
          <target state="translated">本节介绍如何区分各种文件,如目录、符号链接和普通文件。</target>
        </trans-unit>
        <trans-unit id="c8d97a2246f8dcd1a3f21c002a35a9f6eab51d97" translate="yes" xml:space="preserve">
          <source>This section describes how to enable and disable undo information for a given buffer. It also explains how the undo list is truncated automatically so it doesn&amp;rsquo;t get too big.</source>
          <target state="translated">本节介绍如何启用和禁用给定缓冲区的撤消信息。它还说明了撤消列表是如何自动截断的，因此不会太大。</target>
        </trans-unit>
        <trans-unit id="3a3b0a73264d1667956883717ec0d0e370cc4520" translate="yes" xml:space="preserve">
          <source>This section describes how to make Emacs ring the bell (or blink the screen) to attract the user&amp;rsquo;s attention. Be conservative about how often you do this; frequent bells can become irritating. Also be careful not to use just beeping when signaling an error is more appropriate (see &lt;a href=&quot;errors#Errors&quot;&gt;Errors&lt;/a&gt;).</source>
          <target state="translated">本节介绍如何使Emacs响铃（或使屏幕闪烁）以吸引用户的注意。对您执行此操作的频率保持保守；频繁的响铃会变得令人讨厌。另外，请注意不要在提示错误时仅使用提示音（请参见&lt;a href=&quot;errors#Errors&quot;&gt;错误&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="d2c3552281b567522a1e00f11b308775f58e423f" translate="yes" xml:space="preserve">
          <source>This section describes how to pack and unpack arrays of bytes, usually for binary network protocols. These functions convert byte arrays to alists, and vice versa. The byte array can be represented as a unibyte string or as a vector of integers, while the alist associates symbols either with fixed-size objects or with recursive sub-alists. To use the functions referred to in this section, load the &lt;code&gt;bindat&lt;/code&gt; library.</source>
          <target state="translated">本节介绍如何打包和解压缩字节数组，通常用于二进制网络协议。这些函数将字节数组转换为alist，反之亦然。字节数组可以表示为单字节字符串或整数向量，而alist则将符号与固定大小的对象或与递归子警报相关联。要使用本节中提到的功能，请加载 &lt;code&gt;bindat&lt;/code&gt; 库。</target>
        </trans-unit>
        <trans-unit id="bfe27e074a15789c4e33522757c8995e465b0cef" translate="yes" xml:space="preserve">
          <source>This section describes how to peek ahead at events without using them up, how to check for pending input, and how to discard pending input. See also the function &lt;code&gt;read-passwd&lt;/code&gt; (see &lt;a href=&quot;reading-a-password#Reading-a-Password&quot;&gt;Reading a Password&lt;/a&gt;).</source>
          <target state="translated">本节介绍如何在不耗尽事件的情况下预先查看事件，如何检查未决输入以及如何丢弃未决输入。另请参见 &lt;code&gt;read-passwd&lt;/code&gt; 函数（请参阅&lt;a href=&quot;reading-a-password#Reading-a-Password&quot;&gt;阅读密码&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="150d31cc898a87275de4dfed3e78035a72b41855" translate="yes" xml:space="preserve">
          <source>This section describes how to write the &lt;code&gt;interactive&lt;/code&gt; form that makes a Lisp function an interactively-callable command, and how to examine a command&amp;rsquo;s &lt;code&gt;interactive&lt;/code&gt; form.</source>
          <target state="translated">本节将介绍如何编写的 &lt;code&gt;interactive&lt;/code&gt; 形式，使一个Lisp功能的交互可调用的命令，以及如何检查命令的 &lt;code&gt;interactive&lt;/code&gt; 形式。</target>
        </trans-unit>
        <trans-unit id="1218dff17b77ab7b4b54536daebee4816069f53b" translate="yes" xml:space="preserve">
          <source>This section describes low-level functions for examining and setting the contents of windows. See &lt;a href=&quot;switching-buffers#Switching-Buffers&quot;&gt;Switching Buffers&lt;/a&gt;, for higher-level functions for displaying a specific buffer in a window.</source>
          <target state="translated">本节介绍用于检查和设置窗口内容的低级功能。有关在窗口中显示特定缓冲区的高级功能，请参见&lt;a href=&quot;switching-buffers#Switching-Buffers&quot;&gt;切换缓冲区&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2b24a3c10ef1ebe7b7d767138f5d1aba660799e7" translate="yes" xml:space="preserve">
          <source>This section describes low-level subroutines for completing a file name. For higher level functions, see &lt;a href=&quot;reading-file-names#Reading-File-Names&quot;&gt;Reading File Names&lt;/a&gt;.</source>
          <target state="translated">本节介绍用于完成文件名的低级子例程。有关更高级别的功能，请参见&lt;a href=&quot;reading-file-names#Reading-File-Names&quot;&gt;读取文件名&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9d66065bf9aca24a2d19e5005f325822b8c7f678" translate="yes" xml:space="preserve">
          <source>This section describes lower-level functions Emacs uses to find or create a window for displaying a specified buffer. The common workhorse of these functions is &lt;code&gt;display-buffer&lt;/code&gt; which eventually handles all incoming requests for buffer display (see &lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;Choosing Window&lt;/a&gt;).</source>
          <target state="translated">本节介绍Emacs用于查找或创建用于显示指定缓冲区的窗口的较低级功能。这些功能的共同作用是 &lt;code&gt;display-buffer&lt;/code&gt; ，它最终处理所有传入的缓冲区显示请求（请参阅&lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;选择窗口&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="cce6b6a6c3c83928852ccf09cb10c900d8680af9" translate="yes" xml:space="preserve">
          <source>This section describes simple point-motion functions that operate based on parsing expressions.</source>
          <target state="translated">本节介绍基于解析表达式操作的简单点动函数。</target>
        </trans-unit>
        <trans-unit id="387317e8a0a757eb7b94002eefc169e50440251d" translate="yes" xml:space="preserve">
          <source>This section describes some commands meant for use in the minibuffer.</source>
          <target state="translated">本节介绍了一些用于迷你缓冲区的命令。</target>
        </trans-unit>
        <trans-unit id="00e4b81b2956553bfa3ccde5e2d44cc3f7878d4e" translate="yes" xml:space="preserve">
          <source>This section describes some convenient interactive interfaces for changing key bindings. They work by calling &lt;code&gt;define-key&lt;/code&gt;.</source>
          <target state="translated">本节介绍一些方便的交互式界面，用于更改键绑定。它们通过调用 &lt;code&gt;define-key&lt;/code&gt; 来工作。</target>
        </trans-unit>
        <trans-unit id="47bad1cd798afdfe34fb8983742532e84dbfd4f4" translate="yes" xml:space="preserve">
          <source>This section describes some of the functions and variables for querying and using X resources, or their equivalent on your operating system. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/X-Resources.html#X-Resources&quot;&gt;X Resources&lt;/a&gt; in</source>
          <target state="translated">本节介绍了一些用于查询和使用X资源的功能和变量，或它们在操作系统上的等效功能。请参阅&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/X-Resources.html#X-Resources&quot;&gt;相关的X资源&lt;/a&gt;中</target>
        </trans-unit>
        <trans-unit id="e8f463133552be76f9660f5367852dbd00a58249" translate="yes" xml:space="preserve">
          <source>This section describes some variables that hold regular expressions used for certain purposes in editing:</source>
          <target state="translated">本节介绍了一些变量,这些变量包含了编辑中用于某些目的的正则表达式。</target>
        </trans-unit>
        <trans-unit id="f7d186c866c28a5e49c16d8f602fe882757c3d19" translate="yes" xml:space="preserve">
          <source>This section describes the Emacs module</source>
          <target state="translated">本节介绍Emacs模块</target>
        </trans-unit>
        <trans-unit id="3b61f2b467eac767a29db433892f50ef3a87d728" translate="yes" xml:space="preserve">
          <source>This section describes the Lisp functions and variables that pertain to reading.</source>
          <target state="translated">本节介绍了与读取有关的Lisp函数和变量。</target>
        </trans-unit>
        <trans-unit id="57153f0cacaafd0f58f6f0f7cc9ee983fd95bfdb" translate="yes" xml:space="preserve">
          <source>This section describes the Lisp functions for printing Lisp objects&amp;mdash;converting objects into their printed representation.</source>
          <target state="translated">本节介绍了用于打印Lisp对象的Lisp函数-将对象转换为其打印表示。</target>
        </trans-unit>
        <trans-unit id="c00e2ae6dff436e62ada923a09680d42ee5cf78d" translate="yes" xml:space="preserve">
          <source>This section describes the basic interface for reading from the minibuffer with completion.</source>
          <target state="translated">本节介绍了从minibuffer中读取完成的基本界面。</target>
        </trans-unit>
        <trans-unit id="0c6319d42a6efafee3901e82d96aa39cb80ae4ef" translate="yes" xml:space="preserve">
          <source>This section describes the functions for accessing and storing associations in a hash table. In general, any Lisp object can be used as a hash key, unless the comparison method imposes limits. Any Lisp object can also be used as the value.</source>
          <target state="translated">本节描述了在哈希表中访问和存储关联的函数。一般来说,任何Lisp对象都可以用作哈希键,除非比较方法有限制。任何Lisp对象也可以用作值。</target>
        </trans-unit>
        <trans-unit id="9ba6b7689a29c354d422d2b9766be0a645aba40c" translate="yes" xml:space="preserve">
          <source>This section describes the functions for accessing the components of a marker object.</source>
          <target state="translated">本节介绍访问标记对象组件的功能。</target>
        </trans-unit>
        <trans-unit id="e7585c7802cf5f671245e39bc0a21968c91eb8ff" translate="yes" xml:space="preserve">
          <source>This section describes the functions for getting detailed information about a file, including the owner and group numbers, the number of names, the inode number, the size, and the times of access and modification.</source>
          <target state="translated">本节介绍了获取文件详细信息的功能,包括文件的所有者和组号、名字的数量、inode号、大小以及访问和修改的时间。</target>
        </trans-unit>
        <trans-unit id="e0f5401eb4de70698ee08f0c9741c5ab0b1e12a0" translate="yes" xml:space="preserve">
          <source>This section describes the functions for retrieving various types of information about files (or directories or symbolic links), such as whether a file is readable or writable, and its size. These functions all take arguments which are file names. Except where noted, these arguments need to specify existing files, or an error is signaled.</source>
          <target state="translated">本节介绍了用于检索有关文件(或目录或符号链接)的各种类型信息的函数,如文件是否可读或可写,以及文件的大小。这些函数的参数都是文件名。除非有说明,这些参数需要指定现有的文件,否则就会发出错误信号。</target>
        </trans-unit>
        <trans-unit id="c10c26d607ccec55c2e5f7140ee66c4e54bc9885" translate="yes" xml:space="preserve">
          <source>This section describes the functions normally used to visit files. For historical reasons, these functions have names starting with &amp;lsquo;</source>
          <target state="translated">本节介绍通常用于访问文件的功能。由于历史原因，这些函数的名称以&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="48c3a78a041a9e814520021863360bcfa75470b6" translate="yes" xml:space="preserve">
          <source>This section describes the functions to create, delete and move overlays, and to examine their contents. Overlay changes are not recorded in the buffer&amp;rsquo;s undo list, since the overlays are not part of the buffer&amp;rsquo;s contents.</source>
          <target state="translated">本节介绍创建，删除和移动覆盖图以及检查其内容的功能。覆盖更改不会记录在缓冲区的撤消列表中，因为覆盖不属于缓冲区内容的一部分。</target>
        </trans-unit>
        <trans-unit id="812370f1b7b93b3d0db054508fcfed78371f1938" translate="yes" xml:space="preserve">
          <source>This section describes the higher-level convenience functions for reading certain sorts of names with completion.</source>
          <target state="translated">本节介绍了用于读取某些种类的名称与完成的上层便利函数。</target>
        </trans-unit>
        <trans-unit id="75088aebc2a98d56641066d8d18014147f81e6ae" translate="yes" xml:space="preserve">
          <source>This section describes the keymaps, commands and user options used in the minibuffer to do completion.</source>
          <target state="translated">本节介绍了minibuffer中用来做完成的键图、命令和用户选项。</target>
        </trans-unit>
        <trans-unit id="37356dcd063b0ed07b1b0b5d582d678d288fb6fd" translate="yes" xml:space="preserve">
          <source>This section describes the mechanism by which Emacs shows a matching open parenthesis when the user inserts a close parenthesis.</source>
          <target state="translated">本节介绍了Emacs在用户插入闭合括号时显示匹配的开放括号的机制。</target>
        </trans-unit>
        <trans-unit id="40c660a7c361a8150a37bd3ff80cca078ea350f0" translate="yes" xml:space="preserve">
          <source>This section describes the primitive functions used to count and insert indentation. The functions in the following sections use these primitives. See &lt;a href=&quot;size-of-displayed-text#Size-of-Displayed-Text&quot;&gt;Size of Displayed Text&lt;/a&gt;, for related functions.</source>
          <target state="translated">本节介绍用于计数和插入缩进的原始函数。以下各节中的函数使用这些原语。有关相关功能，请参见&lt;a href=&quot;size-of-displayed-text#Size-of-Displayed-Text&quot;&gt;显示文本的大小&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="de6d56383c6730b1286c874377ff16084425dd0d" translate="yes" xml:space="preserve">
          <source>This section describes the standard functions for displaying messages in the echo area.</source>
          <target state="translated">本节介绍在回音区显示信息的标准功能。</target>
        </trans-unit>
        <trans-unit id="285a66b80e772ca86f72f7b2368906f74deb731b" translate="yes" xml:space="preserve">
          <source>This section describes the two primitives for creating buffers. &lt;code&gt;get-buffer-create&lt;/code&gt; creates a buffer if it finds no existing buffer with the specified name; &lt;code&gt;generate-new-buffer&lt;/code&gt; always creates a new buffer and gives it a unique name.</source>
          <target state="translated">本节描述了用于创建缓冲区的两个原语。如果没有找到指定名称的现有缓冲区，则 &lt;code&gt;get-buffer-create&lt;/code&gt; 会创建一个缓冲区； &lt;code&gt;generate-new-buffer&lt;/code&gt; 始终创建一个新缓冲区并为其指定一个唯一名称。</target>
        </trans-unit>
        <trans-unit id="0789513534d147c3f5d4c93a12b51253baf58490" translate="yes" xml:space="preserve">
          <source>This section describes the window parameters that can be used to associate additional information with windows.</source>
          <target state="translated">本节介绍了可用于与窗口关联的附加信息的窗口参数。</target>
        </trans-unit>
        <trans-unit id="8c31a7430b6a18b9a95ff129d9d711314130c97f" translate="yes" xml:space="preserve">
          <source>This section describes two commands that indent the current line based on the contents of previous lines.</source>
          <target state="translated">本节介绍了两个基于前几行内容缩进当前行的命令。</target>
        </trans-unit>
        <trans-unit id="4c855fc414099b3af430915906080cdcfbec4adb" translate="yes" xml:space="preserve">
          <source>This section describes variables incorporated by the standard value of &lt;code&gt;mode-line-format&lt;/code&gt; into the text of the mode line. There is nothing inherently special about these variables; any other variables could have the same effects on the mode line if the value of &lt;code&gt;mode-line-format&lt;/code&gt; is changed to use them. However, various parts of Emacs set these variables on the understanding that they will control parts of the mode line; therefore, practically speaking, it is essential for the mode line to use them. Also see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Optional-Mode-Line.html#Optional-Mode-Line&quot;&gt;Optional Mode Line&lt;/a&gt; in</source>
          <target state="translated">本节描述了通过 &lt;code&gt;mode-line-format&lt;/code&gt; 的标准值合并到模式行文本中的变量。这些变量天生就没有什么特别之处。如果将 &lt;code&gt;mode-line-format&lt;/code&gt; 的值更改为使用它们，则任何其他变量可能会对模式行产生相同的影响。但是，Emacs的各个部分在理解它们将控制模式行的各个部分的情况下设置这些变量。因此，实际上，对于模式行来说，使用它们至关重要。另请参阅&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Optional-Mode-Line.html#Optional-Mode-Line&quot;&gt;可选的模式行&lt;/a&gt;中</target>
        </trans-unit>
        <trans-unit id="64ed9022a196b8909f39a1b1327583441fa14d2e" translate="yes" xml:space="preserve">
          <source>This section describes variables that specify the default coding system for certain files or when running certain subprograms, and the function that I/O operations use to access them.</source>
          <target state="translated">本节介绍了指定某些文件或运行某些子程序时的默认编码系统的变量,以及I/O操作用来访问它们的函数。</target>
        </trans-unit>
        <trans-unit id="46de66764c4cc059a12eb0309664143c34388a7a" translate="yes" xml:space="preserve">
          <source>This section describes what Emacs does when it is started, and how you can customize these actions.</source>
          <target state="translated">本节介绍Emacs启动时的操作,以及如何自定义这些操作。</target>
        </trans-unit>
        <trans-unit id="903047fb180ad2c618ff526c82c10722d15a2387" translate="yes" xml:space="preserve">
          <source>This section explains how to determine the current time and time zone.</source>
          <target state="translated">本节介绍如何确定当前时间和时区。</target>
        </trans-unit>
        <trans-unit id="5a3df5ede6e0c1467262e624d345d71f7c0d0ff4" translate="yes" xml:space="preserve">
          <source>This section explains how to search for a file in a list of directories (a &lt;em&gt;path&lt;/em&gt;), or for an executable file in the standard list of executable file directories.</source>
          <target state="translated">本节说明如何在目录列表（&lt;em&gt;path&lt;/em&gt;）中搜索文件，或在可执行文件目录的标准列表中搜索可执行文件。</target>
        </trans-unit>
        <trans-unit id="8e4623a46744ca037324529de282cc3752690ceb" translate="yes" xml:space="preserve">
          <source>This section explains how to use the match data to find out what was matched by the last search or match operation, if it succeeded.</source>
          <target state="translated">这一节解释了如何使用匹配数据来找出最后一次搜索或匹配操作所匹配的内容,如果成功的话。</target>
        </trans-unit>
        <trans-unit id="2d4bfabf48ae37fe06981f061c05255124ae8a0f" translate="yes" xml:space="preserve">
          <source>This section explains the mechanism for user-specified tab stops and the mechanisms that use and set them. The name &amp;ldquo;tab stops&amp;rdquo; is used because the feature is similar to that of the tab stops on a typewriter. The feature works by inserting an appropriate number of spaces and tab characters to reach the next tab stop column; it does not affect the display of tab characters in the buffer (see &lt;a href=&quot;usual-display#Usual-Display&quot;&gt;Usual Display&lt;/a&gt;). Note that the</source>
          <target state="translated">本节说明了用户指定的制表位停止的机制以及使用和设置它们的机制。之所以使用名称&amp;ldquo;制表位&amp;rdquo;是因为该功能类似于打字机上的制表位。该功能通过插入适当数量的空格和制表符到达下一个制表位列来起作用。它不会影响标签字符在缓冲区中的&lt;a href=&quot;usual-display#Usual-Display&quot;&gt;显示&lt;/a&gt;（请参阅&amp;ldquo;常规显示&amp;rdquo;）。请注意</target>
        </trans-unit>
        <trans-unit id="7656dde734144a6f98b51ff38b0cc35f415fa7dc" translate="yes" xml:space="preserve">
          <source>This section explains the notational conventions that are used in this manual. You may want to skip this section and refer back to it later.</source>
          <target state="translated">本节解释了本手册中使用的符号约定。你可能想跳过本节,以后再参考。</target>
        </trans-unit>
        <trans-unit id="595a2fe62cf2d2c2a6763fbb1f5b0609ab732357" translate="yes" xml:space="preserve">
          <source>This section explains the steps involved in building the Emacs executable. You don&amp;rsquo;t have to know this material to build and install Emacs, since the makefiles do all these things automatically. This information is pertinent to Emacs developers.</source>
          <target state="translated">本节说明了构建Emacs可执行文件所涉及的步骤。您无需了解此材料即可构建和安装Emacs，因为makefile会自动执行所有这些操作。此信息与Emacs开发人员有关。</target>
        </trans-unit>
        <trans-unit id="cc6551c37ad72024ef368cf4f395f00c33e26ffb" translate="yes" xml:space="preserve">
          <source>This sets the &lt;code&gt;:extend&lt;/code&gt; attribute of &lt;var&gt;face&lt;/var&gt; to &lt;var&gt;extend&lt;/var&gt;.</source>
          <target state="translated">这会将 &lt;var&gt;face&lt;/var&gt; 的 &lt;code&gt;:extend&lt;/code&gt; 属性设置为 &lt;var&gt;extend&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="d8130e3c260f42143e05830c8c2d04a003020396" translate="yes" xml:space="preserve">
          <source>This sets the &lt;code&gt;:inverse-video&lt;/code&gt; attribute of &lt;var&gt;face&lt;/var&gt; to &lt;var&gt;inverse-video-p&lt;/var&gt;.</source>
          <target state="translated">这会将 &lt;var&gt;face&lt;/var&gt; 的 &lt;code&gt;:inverse-video&lt;/code&gt; 属性设置为 &lt;var&gt;inverse-video-p&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="ab58c5ba739ca3b78ee8a04908dd595bbe8cd577" translate="yes" xml:space="preserve">
          <source>This sets the &lt;code&gt;:slant&lt;/code&gt; attribute of &lt;var&gt;face&lt;/var&gt; to &lt;var&gt;normal&lt;/var&gt; if &lt;var&gt;italic-p&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, and to &lt;var&gt;italic&lt;/var&gt; otherwise.</source>
          <target state="translated">如果 &lt;var&gt;italic-p&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则将 &lt;var&gt;face&lt;/var&gt; 的 &lt;code&gt;:slant&lt;/code&gt; 属性设置为 &lt;var&gt;normal&lt;/var&gt; ，否则将其设置为 &lt;var&gt;italic&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="aae429b5a51966b6940b72ca36d3c8e55baa9215" translate="yes" xml:space="preserve">
          <source>This sets the &lt;code&gt;:stipple&lt;/code&gt; attribute of &lt;var&gt;face&lt;/var&gt; to &lt;var&gt;pattern&lt;/var&gt;.</source>
          <target state="translated">这会将 &lt;var&gt;face&lt;/var&gt; 的 &lt;code&gt;:stipple&lt;/code&gt; 属性设置为 &lt;var&gt;pattern&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="dc51e75c68faa56f689729fe626d755b66ac4aa7" translate="yes" xml:space="preserve">
          <source>This sets the &lt;code&gt;:underline&lt;/code&gt; attribute of &lt;var&gt;face&lt;/var&gt; to &lt;var&gt;underline&lt;/var&gt;.</source>
          <target state="translated">这会将 &lt;var&gt;face&lt;/var&gt; 的 &lt;code&gt;:underline&lt;/code&gt; 属性设置为 &lt;var&gt;underline&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="cc3dd036b1f402f5fde0a7cbdfd4a1cf7d832477" translate="yes" xml:space="preserve">
          <source>This sets the &lt;code&gt;:weight&lt;/code&gt; attribute of &lt;var&gt;face&lt;/var&gt; to &lt;var&gt;normal&lt;/var&gt; if &lt;var&gt;bold-p&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, and to &lt;var&gt;bold&lt;/var&gt; otherwise.</source>
          <target state="translated">如果 &lt;var&gt;bold-p&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则将 &lt;var&gt;face&lt;/var&gt; 的 &lt;code&gt;:weight&lt;/code&gt; 属性设置为 &lt;var&gt;normal&lt;/var&gt; ，否则将其设置为 &lt;var&gt;bold&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="a90b31704ed0556eac3260ae834080377e2cf271" translate="yes" xml:space="preserve">
          <source>This sets the &lt;code&gt;left-margin&lt;/code&gt; property on the text from &lt;var&gt;from&lt;/var&gt; to &lt;var&gt;to&lt;/var&gt; to the value &lt;var&gt;margin&lt;/var&gt;. If Auto Fill mode is enabled, this command also refills the region to fit the new margin.</source>
          <target state="translated">这会将文本的 &lt;code&gt;left-margin&lt;/code&gt; 属性设置为 &lt;var&gt;from&lt;/var&gt; 到 &lt;var&gt;to&lt;/var&gt; 到value &lt;var&gt;margin&lt;/var&gt; 。如果启用了自动填充模式，此命令还将重新填充区域以适合新的边距。</target>
        </trans-unit>
        <trans-unit id="d1ee0ea030d6b5e60fbecf46e23b88fa2c2a9600" translate="yes" xml:space="preserve">
          <source>This sets the &lt;code&gt;right-margin&lt;/code&gt; property on the text from &lt;var&gt;from&lt;/var&gt; to &lt;var&gt;to&lt;/var&gt; to the value &lt;var&gt;margin&lt;/var&gt;. If Auto Fill mode is enabled, this command also refills the region to fit the new margin.</source>
          <target state="translated">这会将文本上的 &lt;code&gt;right-margin&lt;/code&gt; 属性设置为 &lt;var&gt;from&lt;/var&gt; 到 &lt;var&gt;to&lt;/var&gt; 到value &lt;var&gt;margin&lt;/var&gt; 。如果启用了自动填充模式，此命令还将重新填充区域以适合新的边距。</target>
        </trans-unit>
        <trans-unit id="f73862b238b47e68dd753897ce88766db86396f4" translate="yes" xml:space="preserve">
          <source>This sets the current buffer&amp;rsquo;s case table to &lt;var&gt;table&lt;/var&gt;.</source>
          <target state="translated">这会将当前缓冲区的case表设置为 &lt;var&gt;table&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="80548e91ba60b7200de2595a22b9c550cdcd3d22" translate="yes" xml:space="preserve">
          <source>This sets the data encapsulated by &lt;var&gt;node&lt;/var&gt; to &lt;var&gt;data&lt;/var&gt;.</source>
          <target state="translated">这会将 &lt;var&gt;node&lt;/var&gt; 封装的数据设置为 &lt;var&gt;data&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="c88140b2b937c3f191e83a4184a47abc4068cb6d" translate="yes" xml:space="preserve">
          <source>This sets the default font to &lt;var&gt;font&lt;/var&gt;. When called interactively, it prompts for the name of a font, and uses that font on the selected frame. When called from Lisp, &lt;var&gt;font&lt;/var&gt; should be a font name (a string), a font object, font entity, or a font spec.</source>
          <target state="translated">这会将默认字体设置为 &lt;var&gt;font&lt;/var&gt; 。当以交互方式调用时，它提示输入字体名称，并在所选框架上使用该字体。从Lisp调用时， &lt;var&gt;font&lt;/var&gt; 应该是字体名称（字符串），字体对象，字体实体或字体规范。</target>
        </trans-unit>
        <trans-unit id="9d634cf9fbe27ab76656fdf6f42e627e63c40c88" translate="yes" xml:space="preserve">
          <source>This sets the face for the fringe bitmap &lt;var&gt;bitmap&lt;/var&gt; to &lt;var&gt;face&lt;/var&gt;. If &lt;var&gt;face&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it selects the &lt;code&gt;fringe&lt;/code&gt; face. The bitmap&amp;rsquo;s face controls the color to draw it in.</source>
          <target state="translated">这会将边缘位 &lt;var&gt;bitmap&lt;/var&gt; 位图的面设置为 &lt;var&gt;face&lt;/var&gt; 。如果 &lt;var&gt;face&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则选择 &lt;code&gt;fringe&lt;/code&gt; 脸。位图的表面控制着颜色的绘制。</target>
        </trans-unit>
        <trans-unit id="1c5a72da0843442603e016c15b83b60edada19c7" translate="yes" xml:space="preserve">
          <source>This sets the header and footer of &lt;var&gt;ewoc&lt;/var&gt; to the strings &lt;var&gt;header&lt;/var&gt; and &lt;var&gt;footer&lt;/var&gt;, respectively.</source>
          <target state="translated">这将 &lt;var&gt;ewoc&lt;/var&gt; 的 &lt;var&gt;header&lt;/var&gt; 和 &lt;var&gt;footer&lt;/var&gt; 分别设置为字符串header和footer。</target>
        </trans-unit>
        <trans-unit id="04391319040686e843d56c5f21cecccf5cd326eb" translate="yes" xml:space="preserve">
          <source>This sets the parent keymap of &lt;var&gt;keymap&lt;/var&gt; to &lt;var&gt;parent&lt;/var&gt;, and returns &lt;var&gt;parent&lt;/var&gt;. If &lt;var&gt;parent&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this function gives &lt;var&gt;keymap&lt;/var&gt; no parent at all.</source>
          <target state="translated">这会将 &lt;var&gt;keymap&lt;/var&gt; 的父级keymap设置为 &lt;var&gt;parent&lt;/var&gt; ，并返回 &lt;var&gt;parent&lt;/var&gt; 。如果 &lt;var&gt;parent&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则此函数完全不给 &lt;var&gt;keymap&lt;/var&gt; 父项。</target>
        </trans-unit>
        <trans-unit id="5fd1d959bf3eee4035314d15ad7dcc57aa8e0c7c" translate="yes" xml:space="preserve">
          <source>This sets up a timer that calls the function &lt;var&gt;function&lt;/var&gt; with arguments &lt;var&gt;args&lt;/var&gt; at time &lt;var&gt;time&lt;/var&gt;. If &lt;var&gt;repeat&lt;/var&gt; is a number (integer or floating point), the timer is scheduled to run again every &lt;var&gt;repeat&lt;/var&gt; seconds after &lt;var&gt;time&lt;/var&gt;. If &lt;var&gt;repeat&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the timer runs only once.</source>
          <target state="translated">这将设置调用该函数的定时器 &lt;var&gt;function&lt;/var&gt; 与参数 &lt;var&gt;args&lt;/var&gt; 在时间 &lt;var&gt;time&lt;/var&gt; 。如果 &lt;var&gt;repeat&lt;/var&gt; 是一个数字（整数或浮点数），则定时器计划在 &lt;var&gt;time&lt;/var&gt; 之后每 &lt;var&gt;repeat&lt;/var&gt; 几秒钟再次运行一次。如果 &lt;var&gt;repeat&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则计时器仅运行一次。</target>
        </trans-unit>
        <trans-unit id="0d746b10f65277e46c48ffc8379f07a74da098ed" translate="yes" xml:space="preserve">
          <source>This setting will cause &lt;code&gt;display-buffer&lt;/code&gt; to first try to find a window showing the buffer on a visible or iconified frame and, if no such frame exists, pop up a new frame. You can observe this behavior on a graphical system by typing</source>
          <target state="translated">此设置将导致 &lt;code&gt;display-buffer&lt;/code&gt; 首先尝试在可见或图标化的框架上找到一个显示缓冲区的窗口，如果不存在这样的框架，则弹出一个新框架。您可以通过在图形系统上输入以下内容来观察此行为：</target>
        </trans-unit>
        <trans-unit id="e4c48ab26b54a2b63a4fc53550334fbca5ebfb47" translate="yes" xml:space="preserve">
          <source>This should be a number, where values higher than 1 means to increase the size, and lower means to decrease the size, by multiplying both the width and height. For instance, a value of 0.25 will make the image a quarter size of what it originally was. If the scaling makes the image larger than specified by &lt;code&gt;:max-width&lt;/code&gt; or &lt;code&gt;:max-height&lt;/code&gt;, the resulting size will not exceed those two values. If both &lt;code&gt;:scale&lt;/code&gt; and &lt;code&gt;:height&lt;/code&gt;/&lt;code&gt;:width&lt;/code&gt; are specified, the height/width will be adjusted by the specified scaling factor.</source>
          <target state="translated">这应该是一个数字，其中值大于1表示通过增大宽度和高度来增大尺寸，而值小于1表示减小尺寸。例如，值为0.25将使图像的大小变为原始大小的四分之一。如果缩放使图像大于 &lt;code&gt;:max-width&lt;/code&gt; 或 &lt;code&gt;:max-height&lt;/code&gt; 所指定的大小，则结果大小将不超过这两个值。如果同时指定 &lt;code&gt;:scale&lt;/code&gt; 和 &lt;code&gt;:height&lt;/code&gt; / &lt;code&gt;:width&lt;/code&gt; ，则高度/宽度将通过指定的缩放系数进行调整。</target>
        </trans-unit>
        <trans-unit id="ca351ac6c1fcb484569ed8051d8b192cce01a187" translate="yes" xml:space="preserve">
          <source>This shows the symmetry of the lowest-level operations; reading and writing handle things in opposite order. The rest of this section describes the two facilities surrounding the three variables named above, as well as some related functions. &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Coding Systems&lt;/a&gt;, for details on character encoding and decoding.</source>
          <target state="translated">这显示了最低级别操作的对称性；阅读和写作以相反的顺序处理事物。本节的其余部分描述了围绕上述三个变量的两种功能以及一些相关功能。&lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;编码系统&lt;/a&gt;，有关字符编码和解码的详细信息。</target>
        </trans-unit>
        <trans-unit id="2e3159399b391899969ef053a921d0c0eddf8f82" translate="yes" xml:space="preserve">
          <source>This simple expression is placed in a separate function to make it easy to redefine for customization.</source>
          <target state="translated">这个简单的表达式被放置在一个单独的函数中,以便于重新定义进行定制。</target>
        </trans-unit>
        <trans-unit id="584276a26501f4379ac07846055e032002721c0a" translate="yes" xml:space="preserve">
          <source>This situation is best understood in the context of converting text properties during &lt;code&gt;write-region&lt;/code&gt;. For example, the character at position 42 in a buffer is &amp;lsquo;</source>
          <target state="translated">在 &lt;code&gt;write-region&lt;/code&gt; 期间转换文本属性的上下文中，可以最好地理解这种情况。例如，缓冲区中位置42处的字符是'</target>
        </trans-unit>
        <trans-unit id="64982cd3f5798a3266f75f2afef44d0de9678e82" translate="yes" xml:space="preserve">
          <source>This sort of element specifies several &lt;var&gt;highlighter&lt;/var&gt; lists for a single &lt;var&gt;matcher&lt;/var&gt;. A &lt;var&gt;highlighter&lt;/var&gt; list can be of the type &lt;var&gt;subexp-highlighter&lt;/var&gt; or &lt;var&gt;anchored-highlighter&lt;/var&gt; as described above.</source>
          <target state="translated">这种元素为单个 &lt;var&gt;matcher&lt;/var&gt; 指定了多个 &lt;var&gt;highlighter&lt;/var&gt; 列表。甲 &lt;var&gt;highlighter&lt;/var&gt; 列表可以是所述类型的 &lt;var&gt;subexp-highlighter&lt;/var&gt; 或 &lt;var&gt;anchored-highlighter&lt;/var&gt; 如上所述。</target>
        </trans-unit>
        <trans-unit id="ce9211df654da30cc4c774e536fa2f8e48ebc6b3" translate="yes" xml:space="preserve">
          <source>This special form declares that a function is a command, and that it may therefore be called interactively (via</source>
          <target state="translated">这个特殊形式声明一个函数是一个命令,因此它可以被交互式调用(通过</target>
        </trans-unit>
        <trans-unit id="28dd7b27677277ba15ffcea1d4402a691396d24f" translate="yes" xml:space="preserve">
          <source>This special form defines &lt;var&gt;symbol&lt;/var&gt; as a value and initializes it. It informs a person reading your code that &lt;var&gt;symbol&lt;/var&gt; has a standard global value, established here, that should not be changed by the user or by other programs. Note that &lt;var&gt;symbol&lt;/var&gt; is not evaluated; the symbol to be defined must appear explicitly in the &lt;code&gt;defconst&lt;/code&gt;.</source>
          <target state="translated">这种特殊形式将 &lt;var&gt;symbol&lt;/var&gt; 定义为值并对其进行初始化。它会通知正在阅读您的代码的人该 &lt;var&gt;symbol&lt;/var&gt; 具有此处定义的标准全局值，该值不应由用户或其他程序更改。请注意，未评估 &lt;var&gt;symbol&lt;/var&gt; ；要定义的符号必须显式出现在 &lt;code&gt;defconst&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="44c5c12c983baac190e9ec9f02642c715903a677" translate="yes" xml:space="preserve">
          <source>This special form defines &lt;var&gt;symbol&lt;/var&gt; as a variable. Note that &lt;var&gt;symbol&lt;/var&gt; is not evaluated; the symbol to be defined should appear explicitly in the &lt;code&gt;defvar&lt;/code&gt; form. The variable is marked as &lt;em&gt;special&lt;/em&gt;, meaning that it should always be dynamically bound (see &lt;a href=&quot;variable-scoping#Variable-Scoping&quot;&gt;Variable Scoping&lt;/a&gt;).</source>
          <target state="translated">这种特殊形式将 &lt;var&gt;symbol&lt;/var&gt; 定义为变量。请注意，未评估 &lt;var&gt;symbol&lt;/var&gt; ；要定义的符号应以 &lt;code&gt;defvar&lt;/code&gt; 形式显式出现。将该变量标记为&lt;em&gt;special&lt;/em&gt;，这意味着应该始终将其动态绑定（请参见&lt;a href=&quot;variable-scoping#Variable-Scoping&quot;&gt;Variable Scoping&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="aef7bf0c67cbe574cae7cb7cced475c660e0388d" translate="yes" xml:space="preserve">
          <source>This special form establishes the error handlers &lt;var&gt;handlers&lt;/var&gt; around the execution of &lt;var&gt;protected-form&lt;/var&gt;. If &lt;var&gt;protected-form&lt;/var&gt; executes without error, the value it returns becomes the value of the &lt;code&gt;condition-case&lt;/code&gt; form; in this case, the &lt;code&gt;condition-case&lt;/code&gt; has no effect. The &lt;code&gt;condition-case&lt;/code&gt; form makes a difference when an error occurs during &lt;var&gt;protected-form&lt;/var&gt;.</source>
          <target state="translated">这种特殊形式在执行 &lt;var&gt;protected-form&lt;/var&gt; 时建立了错误处理 &lt;var&gt;handlers&lt;/var&gt; 处理程序。如果 &lt;var&gt;protected-form&lt;/var&gt; 执行没有错误，则它返回的值将成为 &lt;code&gt;condition-case&lt;/code&gt; 形式的值；在这种情况下， &lt;code&gt;condition-case&lt;/code&gt; 无效。的 &lt;code&gt;condition-case&lt;/code&gt; 形式有差别时期间发生错误 &lt;var&gt;protected-form&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="5b82c5527174a8c879580e2c4c03d52282e1cc4d" translate="yes" xml:space="preserve">
          <source>This special form evaluates &lt;var&gt;form1&lt;/var&gt; and all of the &lt;var&gt;forms&lt;/var&gt;, in textual order, returning the result of &lt;var&gt;form1&lt;/var&gt;.</source>
          <target state="translated">此特殊形式按文本顺序评估 &lt;var&gt;form1&lt;/var&gt; 和所有 &lt;var&gt;forms&lt;/var&gt; ，并返回 &lt;var&gt;form1&lt;/var&gt; 的结果。</target>
        </trans-unit>
        <trans-unit id="264a11e6a2d63044cc3557eb49b8c98b48f173e4" translate="yes" xml:space="preserve">
          <source>This special form evaluates &lt;var&gt;form1&lt;/var&gt;, &lt;var&gt;form2&lt;/var&gt;, and all of the following &lt;var&gt;forms&lt;/var&gt;, in textual order, returning the result of &lt;var&gt;form2&lt;/var&gt;.</source>
          <target state="translated">此特殊形式按文本顺序评估 &lt;var&gt;form1&lt;/var&gt; ， &lt;var&gt;form2&lt;/var&gt; 和以下所有 &lt;var&gt;forms&lt;/var&gt; ，并返回 &lt;var&gt;form2&lt;/var&gt; 的结果。</target>
        </trans-unit>
        <trans-unit id="cb99abb8e0181d4d27838d8be018a6b83c5d7d2e" translate="yes" xml:space="preserve">
          <source>This special form evaluates all of the &lt;var&gt;forms&lt;/var&gt;, in textual order, returning the result of the final form.</source>
          <target state="translated">这种特殊形式按文本顺序评估所有 &lt;var&gt;forms&lt;/var&gt; ，并返回最终形式的结果。</target>
        </trans-unit>
        <trans-unit id="d0978706853a1b24de3d942777b01b642f856ba1" translate="yes" xml:space="preserve">
          <source>This special form gives each &lt;var&gt;symbol&lt;/var&gt; a new default value, which is the result of evaluating the corresponding &lt;var&gt;form&lt;/var&gt;. It does not evaluate &lt;var&gt;symbol&lt;/var&gt;, but does evaluate &lt;var&gt;form&lt;/var&gt;. The value of the &lt;code&gt;setq-default&lt;/code&gt; form is the value of the last &lt;var&gt;form&lt;/var&gt;.</source>
          <target state="translated">这种特殊形式为每个 &lt;var&gt;symbol&lt;/var&gt; 了一个新的默认值，这是评估相应 &lt;var&gt;form&lt;/var&gt; 的结果。它不评估 &lt;var&gt;symbol&lt;/var&gt; ，但评估 &lt;var&gt;form&lt;/var&gt; 。该值 &lt;code&gt;setq-default&lt;/code&gt; 格式是最后的价值 &lt;var&gt;form&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="3c676779da66f5ffe35440dff400bd9502ca2be7" translate="yes" xml:space="preserve">
          <source>This special form is like &lt;code&gt;let*&lt;/code&gt;, but all the variables are bound before any of the local values are computed. The values are then assigned to the locally bound variables. This is only useful when lexical binding is in effect, and you want to create closures that refer to bindings that would otherwise not yet be in effect when using &lt;code&gt;let*&lt;/code&gt;.</source>
          <target state="translated">这种特殊形式类似于 &lt;code&gt;let*&lt;/code&gt; ，但是所有变量在计算任何局部值之前都已绑定。然后将这些值分配给本地绑定的变量。这仅在词法绑定生效并且您要创建引用引用的闭包时才有用，否则在使用 &lt;code&gt;let*&lt;/code&gt; 时绑定将无效。</target>
        </trans-unit>
        <trans-unit id="a6a29db6dbf25f40b7c3f2e5454d38aa2ec66ed8" translate="yes" xml:space="preserve">
          <source>This special form is like &lt;code&gt;let&lt;/code&gt;, but it binds each variable right after computing its local value, before computing the local value for the next variable. Therefore, an expression in &lt;var&gt;bindings&lt;/var&gt; can refer to the preceding symbols bound in this &lt;code&gt;let*&lt;/code&gt; form. Compare the following example with the example above for &lt;code&gt;let&lt;/code&gt;.</source>
          <target state="translated">这种特殊形式类似于 &lt;code&gt;let&lt;/code&gt; ，但是它在计算每个变量的局部值之后，在计算下一个变量的局部值之前立即绑定每个变量。因此， &lt;var&gt;bindings&lt;/var&gt; 的表达式可以引用以 &lt;code&gt;let*&lt;/code&gt; 形式绑定的前面的符号。将以下示例与上述 &lt;code&gt;let&lt;/code&gt; 的示例进行比较。</target>
        </trans-unit>
        <trans-unit id="16ed39c262cfc01a3b86e18e6247c39ca8fc1d45" translate="yes" xml:space="preserve">
          <source>This special form is the most common method of changing a variable&amp;rsquo;s value. Each &lt;var&gt;symbol&lt;/var&gt; is given a new value, which is the result of evaluating the corresponding &lt;var&gt;form&lt;/var&gt;. The current binding of the symbol is changed.</source>
          <target state="translated">这种特殊形式是更改变量值的最常用方法。每个 &lt;var&gt;symbol&lt;/var&gt; 都有一个新值，该值是评估相应 &lt;var&gt;form&lt;/var&gt; 的结果。符号的当前绑定已更改。</target>
        </trans-unit>
        <trans-unit id="a33e53aa9f331f7cfc924713142588561b38eb8c" translate="yes" xml:space="preserve">
          <source>This special form returns &lt;var&gt;function-object&lt;/var&gt; without evaluating it. In this, it is similar to &lt;code&gt;quote&lt;/code&gt; (see &lt;a href=&quot;quoting#Quoting&quot;&gt;Quoting&lt;/a&gt;). But unlike &lt;code&gt;quote&lt;/code&gt;, it also serves as a note to the Emacs evaluator and byte-compiler that &lt;var&gt;function-object&lt;/var&gt; is intended to be used as a function. Assuming &lt;var&gt;function-object&lt;/var&gt; is a valid lambda expression, this has two effects:</source>
          <target state="translated">这种特殊形式返回 &lt;var&gt;function-object&lt;/var&gt; 而不对其求值。在此，它类似于 &lt;code&gt;quote&lt;/code&gt; （请参阅&lt;a href=&quot;quoting#Quoting&quot;&gt;引用&lt;/a&gt;）。但是与 &lt;code&gt;quote&lt;/code&gt; 不同，它还为Emacs评估程序和字节编译器提供了一个注释，即 &lt;var&gt;function-object&lt;/var&gt; 旨在用作函数。假设 &lt;var&gt;function-object&lt;/var&gt; 是有效的lambda表达式，则有两个作用：</target>
        </trans-unit>
        <trans-unit id="91207eb1ac837c15393b1238eabb01fa5a18c2de" translate="yes" xml:space="preserve">
          <source>This special form returns &lt;var&gt;object&lt;/var&gt;, without evaluating it. The returned value might be shared and should not be modified. See &lt;a href=&quot;self_002devaluating-forms#Self_002dEvaluating-Forms&quot;&gt;Self-Evaluating Forms&lt;/a&gt;.</source>
          <target state="translated">这种特殊形式返回 &lt;var&gt;object&lt;/var&gt; ，而不对其求值。返回的值可能是共享的，不应修改。请参阅&lt;a href=&quot;self_002devaluating-forms#Self_002dEvaluating-Forms&quot;&gt;自我评估表格&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e263baabd2d21b25cf9933e4bfe225bb216dcf20" translate="yes" xml:space="preserve">
          <source>This special form saves the current bounds of the accessible portion, evaluates the &lt;var&gt;body&lt;/var&gt; forms, and finally restores the saved bounds, thus restoring the same state of narrowing (or absence thereof) formerly in effect. The state of narrowing is restored even in the event of an abnormal exit via &lt;code&gt;throw&lt;/code&gt; or error (see &lt;a href=&quot;nonlocal-exits#Nonlocal-Exits&quot;&gt;Nonlocal Exits&lt;/a&gt;). Therefore, this construct is a clean way to narrow a buffer temporarily.</source>
          <target state="translated">这种特殊形式保存了可访问部分的当前边界，评估了 &lt;var&gt;body&lt;/var&gt; 形态，最后恢复了所保存的边界，从而恢复了以前有效的缩小状态（或缩小状态）。即使通过 &lt;code&gt;throw&lt;/code&gt; 或错误异常退出（参见&amp;ldquo;&lt;a href=&quot;nonlocal-exits#Nonlocal-Exits&quot;&gt;非本地退出&amp;rdquo;&lt;/a&gt;），也会恢复变窄的状态。因此，此构造是暂时缩小缓冲区的一种干净方法。</target>
        </trans-unit>
        <trans-unit id="5cc6973e4a1690df87e779d2a83831c124d6fe90" translate="yes" xml:space="preserve">
          <source>This special form saves the identity of the current buffer and the value of point in it, evaluates &lt;var&gt;body&lt;/var&gt;, and finally restores the buffer and its saved value of point. Both saved values are restored even in case of an abnormal exit via &lt;code&gt;throw&lt;/code&gt; or error (see &lt;a href=&quot;nonlocal-exits#Nonlocal-Exits&quot;&gt;Nonlocal Exits&lt;/a&gt;).</source>
          <target state="translated">这种特殊形式保存当前缓冲区的标识和其中的point值，评估 &lt;var&gt;body&lt;/var&gt; ，最后恢复缓冲区及其保存的point值。即使通过 &lt;code&gt;throw&lt;/code&gt; 或错误异常退出（参见&amp;ldquo;&lt;a href=&quot;nonlocal-exits#Nonlocal-Exits&quot;&gt;非本地退出&amp;rdquo;&lt;/a&gt;），也会恢复两个保存的值。</target>
        </trans-unit>
        <trans-unit id="cd6c4fcda7a2089f2d7f8d8eff82a403a84ab6ae" translate="yes" xml:space="preserve">
          <source>This special form sets up local bindings for a certain set of variables, as specified by &lt;var&gt;bindings&lt;/var&gt;, and then evaluates all of the &lt;var&gt;forms&lt;/var&gt; in textual order. Its return value is the value of the last form in &lt;var&gt;forms&lt;/var&gt;. The local bindings set up by &lt;code&gt;let&lt;/code&gt; will be in effect only within the body of &lt;var&gt;forms&lt;/var&gt;.</source>
          <target state="translated">这种特殊形式为由 &lt;var&gt;bindings&lt;/var&gt; 指定的一组特定变量设置局部绑定，然后以文本顺序评估所有 &lt;var&gt;forms&lt;/var&gt; 。它的返回值是最后一种形式的价值 &lt;var&gt;forms&lt;/var&gt; 。 &lt;code&gt;let&lt;/code&gt; 建立的局部绑定仅在 &lt;var&gt;forms&lt;/var&gt; 主体内有效。</target>
        </trans-unit>
        <trans-unit id="8ba16b0c0709545a810b20f23771ee985821abb5" translate="yes" xml:space="preserve">
          <source>This special property records a list of functions that react to cursor motion. Each function in the list is called, just before redisplay, with 3 arguments: the affected window, the previous known position of the cursor, and one of the symbols &lt;code&gt;entered&lt;/code&gt; or &lt;code&gt;left&lt;/code&gt;, depending on whether the cursor is entering the text that has this property or leaving it. The functions are called only when the minor mode &lt;code&gt;cursor-sensor-mode&lt;/code&gt; is turned on.</source>
          <target state="translated">此特殊属性记录了对光标运动做出反应的函数列表。在重新显示之前，将使用3个参数调用列表中的每个函数：受影响的窗口，光标的先前已知位置以及所 &lt;code&gt;entered&lt;/code&gt; 或 &lt;code&gt;left&lt;/code&gt; 的符号之一，具体取决于光标是否正在输入具有此属性的文本或离开它。仅在次要模式 &lt;code&gt;cursor-sensor-mode&lt;/code&gt; 打开时调用这些功能。</target>
        </trans-unit>
        <trans-unit id="97d8e4b9e4535b8ad3a6ea6a3461c5a524fe91be" translate="yes" xml:space="preserve">
          <source>This specializer requires the argument be &lt;code&gt;eql&lt;/code&gt; to the given &lt;var&gt;object&lt;/var&gt;.</source>
          <target state="translated">这个专门 &lt;code&gt;eql&lt;/code&gt; 要求参数等于给定 &lt;var&gt;object&lt;/var&gt; eql。</target>
        </trans-unit>
        <trans-unit id="8e463a055dfec13e57cff30b0d309557a0007f63" translate="yes" xml:space="preserve">
          <source>This specializer requires the argument to be of the given &lt;var&gt;type&lt;/var&gt;, one of the types from the type hierarchy described below.</source>
          <target state="translated">此专门化程序要求参数为给定 &lt;var&gt;type&lt;/var&gt; ，这是下面描述的类型层次结构中的一种。</target>
        </trans-unit>
        <trans-unit id="c82c41eac63a3e2908a3e1f1922a6ead4ab20220" translate="yes" xml:space="preserve">
          <source>This specification together with &lt;code&gt;image&lt;/code&gt; specifies a &lt;em&gt;slice&lt;/em&gt; (a partial area) of the image to display. The elements &lt;var&gt;y&lt;/var&gt; and &lt;var&gt;x&lt;/var&gt; specify the top left corner of the slice, within the image; &lt;var&gt;width&lt;/var&gt; and &lt;var&gt;height&lt;/var&gt; specify the width and height of the slice. Integers are numbers of pixels. A floating-point number in the range 0.0&amp;ndash;1.0 stands for that fraction of the width or height of the entire image.</source>
          <target state="translated">这连同说明书 &lt;code&gt;image&lt;/code&gt; 指定一个&lt;em&gt;切片&lt;/em&gt;图像以显示的（部分区域）。元素 &lt;var&gt;y&lt;/var&gt; 和 &lt;var&gt;x&lt;/var&gt; 指定图像中切片的左上角； &lt;var&gt;width&lt;/var&gt; 和 &lt;var&gt;height&lt;/var&gt; 指定切片的宽度和高度。整数是像素数。0.0-1.0范围内的浮点数代表整个图像的宽度或高度的一部分。</target>
        </trans-unit>
        <trans-unit id="603bee7cf5faa4b185cf146adf2053aaf175fade" translate="yes" xml:space="preserve">
          <source>This specifies &lt;code&gt;display-buffer-alist&lt;/code&gt; entries (see &lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;Choosing Window&lt;/a&gt;) for buffers with fixed names. In particular, it asks for showing</source>
          <target state="translated">这将指定具有固定名称 &lt;code&gt;display-buffer-alist&lt;/code&gt; 条目（请参阅&lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;选择窗口&lt;/a&gt;）。特别是它要求显示</target>
        </trans-unit>
        <trans-unit id="08c2b1fdcea51a014ac8acf0cd667967e92d4c87" translate="yes" xml:space="preserve">
          <source>This specifies a &lt;code&gt;completion-boundaries&lt;/code&gt; operation. The function should return &lt;code&gt;(boundaries &lt;var&gt;start&lt;/var&gt; . &lt;var&gt;end&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;start&lt;/var&gt; is the position of the beginning boundary in the specified string, and &lt;var&gt;end&lt;/var&gt; is the position of the end boundary in &lt;var&gt;suffix&lt;/var&gt;.</source>
          <target state="translated">这指定 &lt;code&gt;completion-boundaries&lt;/code&gt; 操作。该函数将返回 &lt;code&gt;(boundaries &lt;var&gt;start&lt;/var&gt; . &lt;var&gt;end&lt;/var&gt;)&lt;/code&gt; ，在那里 &lt;var&gt;start&lt;/var&gt; 是开始边界的指定字符串中的位置，并 &lt;var&gt;end&lt;/var&gt; 为最终边界的位置 &lt;var&gt;suffix&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="008094b58d31ed22d08e10e2f1857317a76409ef" translate="yes" xml:space="preserve">
          <source>This specifies a &lt;code&gt;test-completion&lt;/code&gt; operation. The function should return &lt;code&gt;t&lt;/code&gt; if the specified string is an exact match for some completion alternative; &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">这指定了 &lt;code&gt;test-completion&lt;/code&gt; 操作。如果指定的字符串与某些完成替代完全匹配，则函数应返回 &lt;code&gt;t&lt;/code&gt; ;否则，返回0 。否则 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fc4b46d1ccd6ed412576e73946e870435c93aabe" translate="yes" xml:space="preserve">
          <source>This specifies a &lt;code&gt;try-completion&lt;/code&gt; operation. The function should return &lt;code&gt;nil&lt;/code&gt; if there are no matches; it should return &lt;code&gt;t&lt;/code&gt; if the specified string is a unique and exact match; and it should return the longest common prefix substring of all matches otherwise.</source>
          <target state="translated">这指定了 &lt;code&gt;try-completion&lt;/code&gt; 操作。如果没有匹配项，该函数应返回 &lt;code&gt;nil&lt;/code&gt; ；如果指定的字符串是唯一且完全匹配的字符串，则应返回 &lt;code&gt;t&lt;/code&gt; ；并应返回所有匹配项中最长的公共前缀子字符串。</target>
        </trans-unit>
        <trans-unit id="ce6c2cebbed4f94eb1f2b1e4c5cc7e35ad712e34" translate="yes" xml:space="preserve">
          <source>This specifies a &lt;em&gt;default key binding&lt;/em&gt;; any event not bound by other elements of the keymap is given &lt;var&gt;binding&lt;/var&gt; as its binding. Default bindings allow a keymap to bind all possible event types without having to enumerate all of them. A keymap that has a default binding completely masks any lower-precedence keymap, except for events explicitly bound to &lt;code&gt;nil&lt;/code&gt; (see below).</source>
          <target state="translated">这指定了&lt;em&gt;默认的键绑定&lt;/em&gt;；不受键映射表其他元素约束的任何事件都将被 &lt;var&gt;binding&lt;/var&gt; 为其绑定。默认绑定允许键映射绑定所有可能的事件类型，而不必枚举所有事件类型。具有默认绑定的键映射会完全掩盖任何优先级较低的键映射，但显式绑定为 &lt;code&gt;nil&lt;/code&gt; 的事件除外（请参见下文）。</target>
        </trans-unit>
        <trans-unit id="b1591cb7fa920771f20d99fc9c87c33dd446a04e" translate="yes" xml:space="preserve">
          <source>This specifies a binding which is also a simple menu item that displays as &lt;var&gt;item-name&lt;/var&gt; in the menu. See &lt;a href=&quot;simple-menu-items#Simple-Menu-Items&quot;&gt;Simple Menu Items&lt;/a&gt;.</source>
          <target state="translated">这指定了一个绑定，它也是一个简单的菜单项，在菜单中显示为 &lt;var&gt;item-name&lt;/var&gt; 。请参阅&lt;a href=&quot;simple-menu-items#Simple-Menu-Items&quot;&gt;简单菜单项&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cbdb2a8248313643bdd6bdff1df0b66eda0349c3" translate="yes" xml:space="preserve">
          <source>This specifies a binding which is also an extended menu item. This allows use of other features. See &lt;a href=&quot;extended-menu-items#Extended-Menu-Items&quot;&gt;Extended Menu Items&lt;/a&gt;.</source>
          <target state="translated">这指定一个绑定，它也是一个扩展菜单项。这允许使用其他功能。请参阅&lt;a href=&quot;extended-menu-items#Extended-Menu-Items&quot;&gt;扩展菜单项&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c7c26887681428ea3c0030e96ac728026adffd5a" translate="yes" xml:space="preserve">
          <source>This specifies a buffer or a string as described above, but an optional range can be specified with &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;.</source>
          <target state="translated">如上所述，这指定了缓冲区或字符串，但是可以使用 &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 指定可选范围。</target>
        </trans-unit>
        <trans-unit id="8754fe872cbff2346f1a6701ecb39512d99130a4" translate="yes" xml:space="preserve">
          <source>This specifies a conversion algorithm that should be applied to the image before it is displayed; the value, &lt;var&gt;algorithm&lt;/var&gt;, specifies which algorithm.</source>
          <target state="translated">这指定了在显示图像之前应将其应用于图像的转换算法。值 &lt;var&gt;algorithm&lt;/var&gt; ，指定使用哪种算法。</target>
        </trans-unit>
        <trans-unit id="ec2378a6a4e4f5f35a38fa225e37a4f493c8e458" translate="yes" xml:space="preserve">
          <source>This specifies a delay in seconds after which auto-selection triggers. The window under the mouse pointer is selected after the mouse has remained in it for the entire duration of the delay.</source>
          <target state="translated">指定自动选择触发的延迟时间,以秒为单位。在整个延迟时间内,鼠标停留在鼠标指针下的窗口,就会被选中。</target>
        </trans-unit>
        <trans-unit id="420eaeb6676c9efeacc1606fc52cb8a3ad89406f" translate="yes" xml:space="preserve">
          <source>This specifies a hint for how many associations you plan to store in the hash table. If you know the approximate number, you can make things a little more efficient by specifying it this way. If you specify too small a size, the hash table will grow automatically when necessary, but doing that takes some extra time.</source>
          <target state="translated">这指定了一个提示,说明你计划在哈希表中存储多少关联。如果你知道大概的数量,你可以通过这样指定来提高效率。如果你指定的大小太小,哈希表会在必要时自动增长,但这样做需要一些额外的时间。</target>
        </trans-unit>
        <trans-unit id="0d542d82ff452e212946b1ada7c8919996460c66" translate="yes" xml:space="preserve">
          <source>This specifies a request for information about the state of the current completion. The return value should have the form &lt;code&gt;(metadata . &lt;var&gt;alist&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;alist&lt;/var&gt; is an alist whose elements are described below.</source>
          <target state="translated">这指定了有关当前完成状态信息的请求。返回值应具有的形式 &lt;code&gt;(metadata . &lt;var&gt;alist&lt;/var&gt;)&lt;/code&gt; ，其中 &lt;var&gt;alist&lt;/var&gt; 是ALIST其元素描述如下。</target>
        </trans-unit>
        <trans-unit id="d4d061f49a452c6a4cb447e2e21da5d60c7677ca" translate="yes" xml:space="preserve">
          <source>This specifies a specific pointer shape when the mouse pointer is over this text or image. See &lt;a href=&quot;pointer-shape#Pointer-Shape&quot;&gt;Pointer Shape&lt;/a&gt;, for possible pointer shapes.</source>
          <target state="translated">当鼠标指针悬停在此文本或图像上时，这将指定特定的指针形状。见&lt;a href=&quot;pointer-shape#Pointer-Shape&quot;&gt;光标形状&lt;/a&gt;，为可能的指针形状。</target>
        </trans-unit>
        <trans-unit id="43834e1e2123ce5d60aa2e3d2145d5b8d214e4ad" translate="yes" xml:space="preserve">
          <source>This specifies an &lt;code&gt;all-completions&lt;/code&gt; operation. The function should return a list of all possible completions of the specified string.</source>
          <target state="translated">这指定了 &lt;code&gt;all-completions&lt;/code&gt; 操作。该函数应返回指定字符串所有可能完成的列表。</target>
        </trans-unit>
        <trans-unit id="4e4bc6c301646426b8d2d7bade697a36650e543a" translate="yes" xml:space="preserve">
          <source>This specifies how loud to play the sound. It should be a number in the range of 0 to 1. The default is to use whatever volume has been specified before.</source>
          <target state="translated">指定播放声音的音量,它应该是0到1的范围内的数字。默认情况下,使用之前指定的音量。</target>
        </trans-unit>
        <trans-unit id="636a06ca0cbd154e22bd2aed442fa25383c8080c" translate="yes" xml:space="preserve">
          <source>This specifies how many pixels to add as an extra margin around the image. The value, &lt;var&gt;margin&lt;/var&gt;, must be a non-negative number, or a pair &lt;code&gt;(&lt;var&gt;x&lt;/var&gt; . &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; of such numbers. If it is a pair, &lt;var&gt;x&lt;/var&gt; specifies how many pixels to add horizontally, and &lt;var&gt;y&lt;/var&gt; specifies how many pixels to add vertically. If &lt;code&gt;:margin&lt;/code&gt; is not specified, the default is zero.</source>
          <target state="translated">这指定要添加多少像素作为图像周围的额外空白。值， &lt;var&gt;margin&lt;/var&gt; ，必须是一个非负的数，或一对 &lt;code&gt;(&lt;var&gt;x&lt;/var&gt; . &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; 这样的数字。如果为一对，则 &lt;var&gt;x&lt;/var&gt; 指定水平要添加多少像素， &lt;var&gt;y&lt;/var&gt; 指定垂直要添加多少像素。如果未指定 &lt;code&gt;:margin&lt;/code&gt; ，则默认值为零。</target>
        </trans-unit>
        <trans-unit id="ac7dbfa3b693d7da04a20deacef5e42a4f5dd096" translate="yes" xml:space="preserve">
          <source>This specifies how to order the advice, should several pieces of advice be present. By default, the depth is 0. A depth of 100 indicates that this piece of advice should be kept as deep as possible, whereas a depth of -100 indicates that it should stay as the outermost piece. When two pieces of advice specify the same depth, the most recently added one will be outermost.</source>
          <target state="translated">这指定了在有多条建议的情况下如何排序。默认情况下,深度为0,深度为100表示这条建议应该尽可能地保留,而深度为-100表示它应该作为最外层。当两篇建议指定相同的深度时,最近添加的那篇将是最外层的。</target>
        </trans-unit>
        <trans-unit id="80eab38c19033a28010b8322a79585bc2263eed4" translate="yes" xml:space="preserve">
          <source>This specifies one binding, for events of type &lt;var&gt;type&lt;/var&gt;. Each ordinary binding applies to events of a particular &lt;em&gt;event type&lt;/em&gt;, which is always a character or a symbol. See &lt;a href=&quot;classifying-events#Classifying-Events&quot;&gt;Classifying Events&lt;/a&gt;. In this kind of binding, &lt;var&gt;binding&lt;/var&gt; is a command.</source>
          <target state="translated">这为type &lt;var&gt;type&lt;/var&gt; 事件指定一个绑定。每个普通绑定都适用于特定&lt;em&gt;事件类型的&lt;/em&gt;事件，该&lt;em&gt;事件类型&lt;/em&gt;始终是字符或符号。请参阅&lt;a href=&quot;classifying-events#Classifying-Events&quot;&gt;分类事件&lt;/a&gt;。在这种绑定中， &lt;var&gt;binding&lt;/var&gt; 是命令。</target>
        </trans-unit>
        <trans-unit id="3b09d5a5fd5d8456fe425afcc9a7b5eddd4a5049" translate="yes" xml:space="preserve">
          <source>This specifies the amount of the image&amp;rsquo;s height to use for its ascent&amp;mdash;that is, the part above the baseline. The value, &lt;var&gt;ascent&lt;/var&gt;, must be a number in the range 0 to 100, or the symbol &lt;code&gt;center&lt;/code&gt;.</source>
          <target state="translated">这指定用于图像上升的图像高度量，即基线以上的部分。值 &lt;var&gt;ascent&lt;/var&gt; 必须是0到100范围内的数字或符号 &lt;code&gt;center&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="16ee6a4b9a9e9e0999d2f53b7f0854dcff245228" translate="yes" xml:space="preserve">
          <source>This specifies the criterion for when the hash table is full (so it should be made larger). The value, &lt;var&gt;threshold&lt;/var&gt;, should be a positive floating-point number, no greater than 1. The hash table is full whenever the actual number of entries exceeds the nominal size multiplied by an approximation to this value. The default for &lt;var&gt;threshold&lt;/var&gt; is 0.8125.</source>
          <target state="translated">这指定了哈希表何时已满的标准（因此应使其变大）。价值， &lt;var&gt;threshold&lt;/var&gt; ，应该是正的浮点数，不大于1，哈希表已满每当条目的实际数目超过标称尺寸乘以近似为这个值。 &lt;var&gt;threshold&lt;/var&gt; 的默认值为0.8125。</target>
        </trans-unit>
        <trans-unit id="80e656fda6f3abfec4b701bcf321f0a84418d9fd" translate="yes" xml:space="preserve">
          <source>This specifies the file containing the sound to play. If the file name is not absolute, it is expanded against the directory &lt;code&gt;data-directory&lt;/code&gt;.</source>
          <target state="translated">这指定包含要播放的声音的文件。如果文件名不是绝对文件名，则将其扩展到目录 &lt;code&gt;data-directory&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e0e00dec6d1703f97c6b4cb314ea0b91b9b5c3f9" translate="yes" xml:space="preserve">
          <source>This specifies the method of key lookup for this hash table. The default is &lt;code&gt;eql&lt;/code&gt;; &lt;code&gt;eq&lt;/code&gt; and &lt;code&gt;equal&lt;/code&gt; are other alternatives:</source>
          <target state="translated">这指定了此哈希表的键查找方法。默认值为 &lt;code&gt;eql&lt;/code&gt; ; &lt;code&gt;eq&lt;/code&gt; 和 &lt;code&gt;equal&lt;/code&gt; 是其他选择：</target>
        </trans-unit>
        <trans-unit id="02f66248031d6c07808e4997b2b86d55abbdd724" translate="yes" xml:space="preserve">
          <source>This specifies the name of the desktop filename representing the calling program, like &amp;lsquo;</source>
          <target state="translated">这将指定代表调用程序的桌面文件名的名称，例如&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="4b2119186627a5ff369dc726d7edc0ee7f5e9ce4" translate="yes" xml:space="preserve">
          <source>This specifies the pointer shape when the mouse pointer is over this image. See &lt;a href=&quot;pointer-shape#Pointer-Shape&quot;&gt;Pointer Shape&lt;/a&gt;, for available pointer shapes.</source>
          <target state="translated">当鼠标指针悬停在此图像上时，这将指定指针形状。见&lt;a href=&quot;pointer-shape#Pointer-Shape&quot;&gt;光标形状&lt;/a&gt;，可用指针的形状。</target>
        </trans-unit>
        <trans-unit id="2e46c3d1f2e901a34a06d424a73afc21b9b3e211" translate="yes" xml:space="preserve">
          <source>This specifies the position of the left frame edge relative to the left edge of its display or parent frame. The integer &lt;var&gt;pos&lt;/var&gt; may be positive or negative; a negative value specifies a position outside the screen or parent frame or on a monitor other than the primary one (for multi-monitor displays).</source>
          <target state="translated">这指定了左框架边缘相对于其显示或父框架的左边缘的位置。整数 &lt;var&gt;pos&lt;/var&gt; 可以是正数或负数；负值指定屏幕或父框架之外或主显示器以外的其他显示器上的位置（用于多显示器显示）。</target>
        </trans-unit>
        <trans-unit id="957429b50e3085c529b603ab0ba338f67841d193" translate="yes" xml:space="preserve">
          <source>This specifies the position of the right frame edge relative to the right edge of the display or parent frame. The integer &lt;var&gt;pos&lt;/var&gt; may be positive or negative; a negative value specifies a position outside the screen or parent frame or on a monitor other than the primary one (for multi-monitor displays).</source>
          <target state="translated">这指定了右框架边缘相对于显示器或父框架的右边缘的位置。整数 &lt;var&gt;pos&lt;/var&gt; 可以是正数或负数；负值指定屏幕或父框架之外或主显示器以外的其他显示器上的位置（用于多显示器显示）。</target>
        </trans-unit>
        <trans-unit id="4907b0f80b9cc6eaa461804718a3518fa0e9a301" translate="yes" xml:space="preserve">
          <source>This specifies the raw image data. Each image descriptor must have either &lt;code&gt;:data&lt;/code&gt; or &lt;code&gt;:file&lt;/code&gt;, but not both.</source>
          <target state="translated">这指定了原始图像数据。每个图像描述符必须具有 &lt;code&gt;:data&lt;/code&gt; 或 &lt;code&gt;:file&lt;/code&gt; ，但不能两者都具有。</target>
        </trans-unit>
        <trans-unit id="1d7b6dbb2d56faacdaa4ae079c64a9dab06fd918" translate="yes" xml:space="preserve">
          <source>This specifies the sound to play without need to refer to a file. The value, &lt;var&gt;data&lt;/var&gt;, should be a string containing the same bytes as a sound file. We recommend using a unibyte string.</source>
          <target state="translated">这指定了无需参考文件即可播放的声音。值 &lt;var&gt;data&lt;/var&gt; 应该是一个字符串，其中包含与声音文件相同的字节。我们建议使用单字节字符串。</target>
        </trans-unit>
        <trans-unit id="cfff7690d010381cc8efe398693dc495791b7cbb" translate="yes" xml:space="preserve">
          <source>This specifies the system device on which to play the sound, as a string. The default device is system-dependent.</source>
          <target state="translated">指定播放声音的系统设备,作为一个字符串。默认的设备与系统有关。</target>
        </trans-unit>
        <trans-unit id="12405c5a16df3c4cdd1ee941936ed75b73ff085f" translate="yes" xml:space="preserve">
          <source>This stands for &amp;lsquo;</source>
          <target state="translated">这代表&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="5a953af8aa164ab5f8d58298d2321db2ec0308df" translate="yes" xml:space="preserve">
          <source>This stands for a newline.</source>
          <target state="translated">这代表一个新行。</target>
        </trans-unit>
        <trans-unit id="9b0016aa8b716c6af855126075823f4252e7ec78" translate="yes" xml:space="preserve">
          <source>This stands for a single &amp;lsquo;</source>
          <target state="translated">这代表一个'</target>
        </trans-unit>
        <trans-unit id="0e917109cff73a7b823395ab21db7224d5f7916a" translate="yes" xml:space="preserve">
          <source>This stands for a tab character.</source>
          <target state="translated">这代表一个制表符。</target>
        </trans-unit>
        <trans-unit id="3a7a2d671e051c239370ec053c15f604bdabbddc" translate="yes" xml:space="preserve">
          <source>This stands for itself (for compatibility with &lt;code&gt;replace-regexp&lt;/code&gt; and related commands; see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Regexp-Replace.html#Regexp-Replace&quot;&gt;Regexp Replace&lt;/a&gt; in</source>
          <target state="translated">这本身就代表（为了与 &lt;code&gt;replace-regexp&lt;/code&gt; 和相关命令兼容；请参见中的&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Regexp-Replace.html#Regexp-Replace&quot;&gt;Regexp Replace&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3387e4f79d8cd590967097ff5b127243b7b1ed8f" translate="yes" xml:space="preserve">
          <source>This stands for the ISO 8601 date format, which is like &amp;lsquo;</source>
          <target state="translated">这代表ISO 8601日期格式，例如&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="edd29e424029ff0854d7cfa739b245a5eec7b500" translate="yes" xml:space="preserve">
          <source>This stands for the abbreviated name of the day of week.</source>
          <target state="translated">这代表的是星期几的缩写名称。</target>
        </trans-unit>
        <trans-unit id="bc9222c1841aeb4cbf336678d516197d20ceac01" translate="yes" xml:space="preserve">
          <source>This stands for the abbreviated name of the month.</source>
          <target state="translated">这代表着月份的缩写名称。</target>
        </trans-unit>
        <trans-unit id="8b449135807d1a7f8bad8de5a1ec22c38595cd1d" translate="yes" xml:space="preserve">
          <source>This stands for the calendar quarter (1&amp;ndash;4).</source>
          <target state="translated">这代表日历季度（1-4）。</target>
        </trans-unit>
        <trans-unit id="3dd560747b9d649e7854d9c75acc46622ee0a66a" translate="yes" xml:space="preserve">
          <source>This stands for the century, that is, the year divided by 100, truncated toward zero. The default field width is 2.</source>
          <target state="translated">代表世纪,即年份除以100,截断为零。默认字段宽度为2。</target>
        </trans-unit>
        <trans-unit id="ae227701e35d35c1d29a843a26717ba68366fc3a" translate="yes" xml:space="preserve">
          <source>This stands for the day of month, blank-padded.</source>
          <target state="translated">这代表的是月日,空白填充。</target>
        </trans-unit>
        <trans-unit id="49b285e0dbd8927bb3605f6adff88ee0e560d820" translate="yes" xml:space="preserve">
          <source>This stands for the day of month, zero-padded.</source>
          <target state="translated">这代表的是月日,零垫。</target>
        </trans-unit>
        <trans-unit id="064771e0212f52eaf6bb077d5c89e012dbbf7e9a" translate="yes" xml:space="preserve">
          <source>This stands for the day of the year (001&amp;ndash;366).</source>
          <target state="translated">这代表一年中的某一天（001&amp;ndash;366）。</target>
        </trans-unit>
        <trans-unit id="3def3d214ee2f920b6f973c46db794c165bad230" translate="yes" xml:space="preserve">
          <source>This stands for the entire text being replaced.</source>
          <target state="translated">这代表整个文本被替换。</target>
        </trans-unit>
        <trans-unit id="97a3f005bc528071dc94bda474d65907b2f15eb6" translate="yes" xml:space="preserve">
          <source>This stands for the full name of the day of week.</source>
          <target state="translated">这代表着周天的全称。</target>
        </trans-unit>
        <trans-unit id="5ad4f46ba0d97d78d7b8729757ef4ae745b1d4bd" translate="yes" xml:space="preserve">
          <source>This stands for the full name of the month.</source>
          <target state="translated">这代表的是本月的全称。</target>
        </trans-unit>
        <trans-unit id="968fede9c0f20efacabdfce884cba8aed4ae107c" translate="yes" xml:space="preserve">
          <source>This stands for the hour (0&amp;ndash;23), blank padded.</source>
          <target state="translated">这代表小时（0&amp;ndash;23），空白填充。</target>
        </trans-unit>
        <trans-unit id="ea6d60d5b7ddf9d7445311728c02de86ae7c5e80" translate="yes" xml:space="preserve">
          <source>This stands for the hour (00&amp;ndash;23).</source>
          <target state="translated">这代表小时（00-23）。</target>
        </trans-unit>
        <trans-unit id="5e456b0ab7b5e4d1a8c3aaef0985bd7177d01aa9" translate="yes" xml:space="preserve">
          <source>This stands for the hour (01&amp;ndash;12).</source>
          <target state="translated">这代表小时（01&amp;ndash;12）。</target>
        </trans-unit>
        <trans-unit id="704f5f4a59d6eecbbc9520f49b5d500586687258" translate="yes" xml:space="preserve">
          <source>This stands for the hour (1&amp;ndash;12), blank padded.</source>
          <target state="translated">这代表小时（1&amp;ndash;12），空白填充。</target>
        </trans-unit>
        <trans-unit id="d9c549197fb5ee38e6fe7635c9fe0a9cd461efcc" translate="yes" xml:space="preserve">
          <source>This stands for the integer number of seconds since the epoch.</source>
          <target state="translated">这代表了自纪元以来的整数秒数。</target>
        </trans-unit>
        <trans-unit id="5088832e60d39beb8ff508ab8c2650dbec32f8aa" translate="yes" xml:space="preserve">
          <source>This stands for the minute (00&amp;ndash;59).</source>
          <target state="translated">这代表分钟（00&amp;ndash;59）。</target>
        </trans-unit>
        <trans-unit id="39797223f5511ac56dcc1624ce5474a859de6052" translate="yes" xml:space="preserve">
          <source>This stands for the month (01&amp;ndash;12).</source>
          <target state="translated">这代表月份（01-12）。</target>
        </trans-unit>
        <trans-unit id="04dfcba9a2dd5c7e09acacd439a11e31c0e060ed" translate="yes" xml:space="preserve">
          <source>This stands for the nanoseconds (000000000&amp;ndash;999999999). To ask for fewer digits, use &amp;lsquo;</source>
          <target state="translated">这代表纳秒（000000000&amp;ndash;999999999）。要减少位数，请使用&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="3db94f8a20bfee370c172a8d80873aac1a581572" translate="yes" xml:space="preserve">
          <source>This stands for the numeric day of week (0&amp;ndash;6). Sunday is day 0.</source>
          <target state="translated">这代表星期的数字天（0&amp;ndash;6）。星期日是第0天。</target>
        </trans-unit>
        <trans-unit id="177650152cc80e4212fa464ec5e952c230ed4210" translate="yes" xml:space="preserve">
          <source>This stands for the numeric day of week (1&amp;ndash;7). Monday is day 1.</source>
          <target state="translated">这代表星期的数字天（1&amp;ndash;7）。星期一是第一天。</target>
        </trans-unit>
        <trans-unit id="c083941f6ca04d443d5cb2cafb5019b62a031e61" translate="yes" xml:space="preserve">
          <source>This stands for the second (00&amp;ndash;59, or 00&amp;ndash;60 on platforms that support leap seconds).</source>
          <target state="translated">这代表秒（在支持leap秒的平台上为00&amp;ndash;59或00&amp;ndash;60）。</target>
        </trans-unit>
        <trans-unit id="0c4c0c2b67f5e5924f94befd6929b445660d9af1" translate="yes" xml:space="preserve">
          <source>This stands for the text that matched the &lt;var&gt;n&lt;/var&gt;th subexpression in the original regexp. Subexpressions are those expressions grouped inside &amp;lsquo;</source>
          <target state="translated">这代表与原始 &lt;var&gt;n&lt;/var&gt; 表达式中的第n个子表达式匹配的文本。子表达式是分组在&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="c18f82e02830c17a25eb0725b6975c2c63575303" translate="yes" xml:space="preserve">
          <source>This stands for the time zone abbreviation (e.g., &amp;lsquo;</source>
          <target state="translated">这代表时区缩写（例如，&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="fbb40385db73e63604136e8b321108475638c373" translate="yes" xml:space="preserve">
          <source>This stands for the time zone numerical offset. The &amp;lsquo;</source>
          <target state="translated">这代表时区数字偏移量。'</target>
        </trans-unit>
        <trans-unit id="5b19d340158d0c3da63219de4486245a577e2083" translate="yes" xml:space="preserve">
          <source>This stands for the week of the year (01&amp;ndash;52), assuming that weeks start on Monday.</source>
          <target state="translated">假设一周从星期一开始，则代表一年中的一周（01-52）。</target>
        </trans-unit>
        <trans-unit id="dfce6f25ec1e050917792e0e39e9c33fb54d05e1" translate="yes" xml:space="preserve">
          <source>This stands for the week of the year (01&amp;ndash;52), assuming that weeks start on Sunday.</source>
          <target state="translated">假设一周从星期日开始，则代表一年中的一周（01-52）。</target>
        </trans-unit>
        <trans-unit id="b8029306811fc4956c9103561527aa3510617784" translate="yes" xml:space="preserve">
          <source>This stands for the week of the year according to ISO 8601.</source>
          <target state="translated">根据ISO 8601,这代表一年中的一周。</target>
        </trans-unit>
        <trans-unit id="90f60c021a9289d1ed10fd708c351cdcc2c3e640" translate="yes" xml:space="preserve">
          <source>This stands for the year corresponding to the ISO week within the century.</source>
          <target state="translated">这代表本世纪内ISO周对应的年份。</target>
        </trans-unit>
        <trans-unit id="734051b8f4d85dc4b7973e61ba1e5de2940277d3" translate="yes" xml:space="preserve">
          <source>This stands for the year corresponding to the ISO week.</source>
          <target state="translated">这代表与ISO周相对应的年份。</target>
        </trans-unit>
        <trans-unit id="a481e48ac8618a686937c594d2ec24c50c7933f5" translate="yes" xml:space="preserve">
          <source>This stands for the year with century.</source>
          <target state="translated">这代表着年与世纪。</target>
        </trans-unit>
        <trans-unit id="c52be8e987612c175ad50ad027d72af938ebf6fd" translate="yes" xml:space="preserve">
          <source>This stands for the year without century (00&amp;ndash;99).</source>
          <target state="translated">这表示没有世纪的年份（00-99）。</target>
        </trans-unit>
        <trans-unit id="c0a812dcbe35e574bb3ff47b98fb24acf995d335" translate="yes" xml:space="preserve">
          <source>This state of affairs might occur after</source>
          <target state="translated">这种情况可能发生在</target>
        </trans-unit>
        <trans-unit id="e50845c7ef4403d40df2b32bcbb76644f015f186" translate="yes" xml:space="preserve">
          <source>This stores &lt;var&gt;value&lt;/var&gt; as the value of the &lt;var&gt;property&lt;/var&gt; property in the property list &lt;var&gt;plist&lt;/var&gt;. It may modify &lt;var&gt;plist&lt;/var&gt; destructively, or it may construct a new list structure without altering the old. The function returns the modified property list, so you can store that back in the place where you got &lt;var&gt;plist&lt;/var&gt;. For example,</source>
          <target state="translated">该商店 &lt;var&gt;value&lt;/var&gt; 作为价值 &lt;var&gt;property&lt;/var&gt; 在属性列表属性 &lt;var&gt;plist&lt;/var&gt; 。它可能会破坏性地修改 &lt;var&gt;plist&lt;/var&gt; ，或者可能会构造一个新的列表结构而不更改旧的列表结构。该函数返回修改后的属性列表，因此您可以将其存储回 &lt;var&gt;plist&lt;/var&gt; 的位置。例如，</target>
        </trans-unit>
        <trans-unit id="f3388ba5c690beee5edfd9f9d5bdd75d7848169a" translate="yes" xml:space="preserve">
          <source>This string will be inserted in the buffer to represent the value corresponding to the type. The following &amp;lsquo;</source>
          <target state="translated">该字符串将插入缓冲区以表示与类型相对应的值。以下 '</target>
        </trans-unit>
        <trans-unit id="c5a4d7c65fc7ec810b86841ea2eaacf36a447f37" translate="yes" xml:space="preserve">
          <source>This subsection describes &lt;em&gt;backquote-style patterns&lt;/em&gt;, a set of builtin patterns that eases structural matching. For background, see &lt;a href=&quot;pattern_002dmatching-conditional#Pattern_002dMatching-Conditional&quot;&gt;Pattern-Matching Conditional&lt;/a&gt;.</source>
          <target state="translated">本小节描述了&lt;em&gt;反引号样式的模式&lt;/em&gt;，这是一组简化结构匹配的内置模式。有关背景，请参见&lt;a href=&quot;pattern_002dmatching-conditional#Pattern_002dMatching-Conditional&quot;&gt;模式匹配条件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="154429dc78dfad816a4ac29212ae25a5e888cd76" translate="yes" xml:space="preserve">
          <source>This subsection describes a few convenience functions provided by the module</source>
          <target state="translated">本小节介绍了模块提供的一些方便的功能。</target>
        </trans-unit>
        <trans-unit id="86b5aca2b6065ce4c3a174a66d3a2bbe1b407627" translate="yes" xml:space="preserve">
          <source>This swaps the foreground and background colors of face &lt;var&gt;face&lt;/var&gt;.</source>
          <target state="translated">这交换了face &lt;var&gt;face&lt;/var&gt; 的前景色和背景色。</target>
        </trans-unit>
        <trans-unit id="3f649cbd02b8cfad82bd467b806fc29a75e8a69a" translate="yes" xml:space="preserve">
          <source>This symbol also serves as the event type of the event. Key bindings describe events by their types; thus, if there is a key binding for &lt;code&gt;mouse-1&lt;/code&gt;, that binding would apply to all events whose &lt;var&gt;event-type&lt;/var&gt; is &lt;code&gt;mouse-1&lt;/code&gt;.</source>
          <target state="translated">此符号也用作事件的事件类型。键绑定按事件的类型描述事件。因此，如果存在 &lt;code&gt;mouse-1&lt;/code&gt; 的键绑定，则该绑定将应用于 &lt;var&gt;event-type&lt;/var&gt; 为 &lt;code&gt;mouse-1&lt;/code&gt; 的所有事件。</target>
        </trans-unit>
        <trans-unit id="e9217dccc658d2b4111ac58407c42c117df57d7a" translate="yes" xml:space="preserve">
          <source>This symbol is not a function; its function definition cell holds the keymap known as &lt;code&gt;help-map&lt;/code&gt;. It is defined in</source>
          <target state="translated">该符号不是功能；它的功能定义单元格保存着称为 &lt;code&gt;help-map&lt;/code&gt; 的键映射。它在</target>
        </trans-unit>
        <trans-unit id="673f6e4af0c96f767d81720847bed4fb616b129e" translate="yes" xml:space="preserve">
          <source>This syntax class can be designated by either &amp;lsquo;&amp;rsquo; or &amp;lsquo;</source>
          <target state="translated">可以使用''或'指定该语法类</target>
        </trans-unit>
        <trans-unit id="ef814764713d6b4efc3e07483964d8fd17bda004" translate="yes" xml:space="preserve">
          <source>This syntax class does not specify a particular syntax. It says to look in the standard syntax table to find the syntax of this character.</source>
          <target state="translated">这个语法类没有规定特定的语法。它说要在标准语法表中寻找这个字符的语法。</target>
        </trans-unit>
        <trans-unit id="fe0fd84ab9486a7e5129fc03483d021c695e5e96" translate="yes" xml:space="preserve">
          <source>This syntax class is primarily meant for use with the &lt;code&gt;syntax-table&lt;/code&gt; text property (see &lt;a href=&quot;syntax-properties#Syntax-Properties&quot;&gt;Syntax Properties&lt;/a&gt;). You can mark any range of characters as forming a comment, by giving the first and last characters of the range &lt;code&gt;syntax-table&lt;/code&gt; properties identifying them as generic comment delimiters.</source>
          <target state="translated">该语法类主要用于 &lt;code&gt;syntax-table&lt;/code&gt; text属性（请参阅&lt;a href=&quot;syntax-properties#Syntax-Properties&quot;&gt;语法属性&lt;/a&gt;）。您可以通过提供范围 &lt;code&gt;syntax-table&lt;/code&gt; 属性的第一个和最后一个字符来将它们标识为通用注释定界符，从而将任何范围的字符标记为注释。</target>
        </trans-unit>
        <trans-unit id="cb55ccc90a19d9543bebe0f564333ab2f4125de1" translate="yes" xml:space="preserve">
          <source>This syntax class is primarily meant for use with the &lt;code&gt;syntax-table&lt;/code&gt; text property (see &lt;a href=&quot;syntax-properties#Syntax-Properties&quot;&gt;Syntax Properties&lt;/a&gt;). You can mark any range of characters as forming a string constant, by giving the first and last characters of the range &lt;code&gt;syntax-table&lt;/code&gt; properties identifying them as generic string delimiters.</source>
          <target state="translated">该语法类主要用于 &lt;code&gt;syntax-table&lt;/code&gt; text属性（请参阅&lt;a href=&quot;syntax-properties#Syntax-Properties&quot;&gt;语法属性&lt;/a&gt;）。通过提供范围 &lt;code&gt;syntax-table&lt;/code&gt; 属性的第一个和最后一个字符以将它们标识为通用字符串定界符，可以将任何范围的字符标记为字符串常量。</target>
        </trans-unit>
        <trans-unit id="58f07cd6c95c32700a7e121f78af542732c60dcf" translate="yes" xml:space="preserve">
          <source>This tells Emacs that new buffers created while the current buffer is in Funny mode should not be put in Funny mode, even though the default value of &lt;code&gt;major-mode&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;. By default, the value of &lt;code&gt;nil&lt;/code&gt; for &lt;code&gt;major-mode&lt;/code&gt; means to use the current buffer&amp;rsquo;s major mode when creating new buffers (see &lt;a href=&quot;auto-major-mode#Auto-Major-Mode&quot;&gt;Auto Major Mode&lt;/a&gt;), but with such &lt;code&gt;special&lt;/code&gt; modes, Fundamental mode is used instead. Modes such as Dired, Rmail, and Buffer List use this feature.</source>
          <target state="translated">这告诉Emacs的，虽然目前缓冲区是滑稽的模式不应该被放在趣味模式，即使默认值创建新的缓冲区 &lt;code&gt;major-mode&lt;/code&gt; 是 &lt;code&gt;nil&lt;/code&gt; 。默认情况下，值 &lt;code&gt;nil&lt;/code&gt; 的 &lt;code&gt;major-mode&lt;/code&gt; 创建新的缓冲区时，是指用当前缓冲区的主要模式（见&lt;a href=&quot;auto-major-mode#Auto-Major-Mode&quot;&gt;自动主要方式&lt;/a&gt;），但这种 &lt;code&gt;special&lt;/code&gt; 模式，基本模式来代替。 Dired，Rmail和Buffer List等模式使用此功能。</target>
        </trans-unit>
        <trans-unit id="bde260e27250cfd753a3c4b7e603c2a76b516f62" translate="yes" xml:space="preserve">
          <source>This tells on which side the tool bar on &lt;var&gt;frame&lt;/var&gt; is and can be one of &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt; or &lt;code&gt;bottom&lt;/code&gt;. The only toolkit that currently supports a value other than &lt;code&gt;top&lt;/code&gt; is GTK+.</source>
          <target state="translated">这告诉 &lt;var&gt;frame&lt;/var&gt; 上的工具栏在哪一侧，可以是 &lt;code&gt;left&lt;/code&gt; ， &lt;code&gt;top&lt;/code&gt; ， &lt;code&gt;right&lt;/code&gt; 或 &lt;code&gt;bottom&lt;/code&gt; 。当前唯一支持 &lt;code&gt;top&lt;/code&gt; 以外的值的工具包是GTK +。</target>
        </trans-unit>
        <trans-unit id="32b8cf45acd383d2dbdafc81124a283377a4b40a" translate="yes" xml:space="preserve">
          <source>This terminal-local variable is the translate table for keyboard characters. It lets you reshuffle the keys on the keyboard without changing any command bindings. Its value is normally a char-table, or else &lt;code&gt;nil&lt;/code&gt;. (It can also be a string or vector, but this is considered obsolete.)</source>
          <target state="translated">此本地终端变量是键盘字符的转换表。它使您可以重新排列键盘上的键，而无需更改任何命令绑定。它的值通常是一个char表，否则为 &lt;code&gt;nil&lt;/code&gt; 。（它也可以是字符串或向量，但这已被淘汰。）</target>
        </trans-unit>
        <trans-unit id="6c1f17a39e214c3fc1899b7de28e5d36f79d9112" translate="yes" xml:space="preserve">
          <source>This terminal-local variable tells Lisp programs what window system Emacs is using for displaying the frame. The possible values are</source>
          <target state="translated">这个终端本地变量告诉Lisp程序Emacs使用什么窗口系统来显示框架。可能的值有</target>
        </trans-unit>
        <trans-unit id="fd7cffc1adb6bc8407cfad443279f6431bbea02f" translate="yes" xml:space="preserve">
          <source>This text property is used to display a sequence of characters as a single glyph composed from components. But the value of the property itself is completely internal to Emacs and should not be manipulated directly by, for instance, &lt;code&gt;put-text-property&lt;/code&gt;.</source>
          <target state="translated">此文本属性用于将字符序列显示为由组件组成的单个字形。但是该属性本身的值完全在Emacs内部，并且不应直接由 &lt;code&gt;put-text-property&lt;/code&gt; 操纵。</target>
        </trans-unit>
        <trans-unit id="f8c4748eb4bcc830914ab5965b177f8a79c96393" translate="yes" xml:space="preserve">
          <source>This text property tells where to display temporary messages in an active minibuffer. Specifically, the first character of the minibuffer text which has this property will have the temporary message displayed before it. The default is to display temporary messages at the end of the minibuffer text. This text property is used by the function that is the default value of &lt;code&gt;set-message-function&lt;/code&gt; (see &lt;a href=&quot;displaying-messages#Displaying-Messages&quot;&gt;Displaying Messages&lt;/a&gt;).</source>
          <target state="translated">此文本属性指示在活动迷你缓冲区中的何处显示临时消息。具体来说，具有此属性的迷你缓冲区文本的第一个字符将在其前面显示临时消息。默认设置是在迷你缓冲区文本的末尾显示临时消息。函数使用此文本属性，该属性是 &lt;code&gt;set-message-function&lt;/code&gt; 的默认值（请参阅&lt;a href=&quot;displaying-messages#Displaying-Messages&quot;&gt;显示消息&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="80d3f28d900c71c4a56a870fd0dd86a495abb863" translate="yes" xml:space="preserve">
          <source>This translation of one event into two happens only for characters, not for other kinds of input events. Thus,</source>
          <target state="translated">这种将一个事件转化为两个事件的情况只发生在字符上,而不是其他类型的输入事件。因此:</target>
        </trans-unit>
        <trans-unit id="4042fd2a7bbc1fbf60ab85450aadd81afe2c53ef" translate="yes" xml:space="preserve">
          <source>This user option provides a convenient way to set &lt;code&gt;glyphless-char-display&lt;/code&gt; for groups of similar characters. Do not set its value directly from Lisp code; the value takes effect only via a custom &lt;code&gt;:set&lt;/code&gt; function (see &lt;a href=&quot;variable-definitions#Variable-Definitions&quot;&gt;Variable Definitions&lt;/a&gt;), which updates &lt;code&gt;glyphless-char-display&lt;/code&gt;.</source>
          <target state="translated">此用户选项提供了一种方便的方式来为相似字符组设置 &lt;code&gt;glyphless-char-display&lt;/code&gt; 。不要直接通过Lisp代码设置其值；该值仅通过自定义 &lt;code&gt;:set&lt;/code&gt; 函数（请参见&amp;ldquo;&lt;a href=&quot;variable-definitions#Variable-Definitions&quot;&gt;变量定义&amp;rdquo;&lt;/a&gt;） &lt;code&gt;glyphless-char-display&lt;/code&gt; ，该函数更新glyphless-char-display。</target>
        </trans-unit>
        <trans-unit id="9c43441b638e24d3c31e405be655f435a0b96c1e" translate="yes" xml:space="preserve">
          <source>This user option specifies the minimum severity level that should be logged in the warnings buffer. The default is &lt;code&gt;:warning&lt;/code&gt;, which means to log all warnings except &lt;code&gt;:debug&lt;/code&gt; warnings.</source>
          <target state="translated">此用户选项指定应在警告缓冲区中记录的最低严重性级别。默认值为 &lt;code&gt;:warning&lt;/code&gt; ，表示记录除 &lt;code&gt;:debug&lt;/code&gt; 警告以外的所有警告。</target>
        </trans-unit>
        <trans-unit id="e64c878b26925434e6a40e0303b5fb803eb4cc51" translate="yes" xml:space="preserve">
          <source>This user option specifies the minimum severity level that should be shown immediately to the user. The default is &lt;code&gt;:warning&lt;/code&gt;, which means to immediately display all warnings except &lt;code&gt;:debug&lt;/code&gt; warnings.</source>
          <target state="translated">此用户选项指定应立即向用户显示的最低严重性级别。默认值为 &lt;code&gt;:warning&lt;/code&gt; ，表示立即显示除 &lt;code&gt;:debug&lt;/code&gt; 警告以外的所有警告。</target>
        </trans-unit>
        <trans-unit id="b5b9b2cc09e34e60fa27afe3f2f9df4ee68dc6f1" translate="yes" xml:space="preserve">
          <source>This value is currently unused.</source>
          <target state="translated">该值目前未使用。</target>
        </trans-unit>
        <trans-unit id="d0808294a46fd7a89020048de1c201288dc7edcf" translate="yes" xml:space="preserve">
          <source>This value means the parameter is saved neither by &lt;code&gt;window-state-get&lt;/code&gt; nor by &lt;code&gt;current-window-configuration&lt;/code&gt;.</source>
          <target state="translated">该值表示既不通过 &lt;code&gt;window-state-get&lt;/code&gt; 也不通过 &lt;code&gt;current-window-configuration&lt;/code&gt; 保存该参数。</target>
        </trans-unit>
        <trans-unit id="4bfc68b6ab18e3fede182d98877be70af1835e06" translate="yes" xml:space="preserve">
          <source>This value specifies that the parameter is saved by &lt;code&gt;current-window-configuration&lt;/code&gt; and (provided its &lt;var&gt;writable&lt;/var&gt; argument is &lt;code&gt;nil&lt;/code&gt;) by &lt;code&gt;window-state-get&lt;/code&gt;.</source>
          <target state="translated">该值指定该参数由 &lt;code&gt;current-window-configuration&lt;/code&gt; 保存，并且（如果其 &lt;var&gt;writable&lt;/var&gt; 参数为 &lt;code&gt;nil&lt;/code&gt; ）由 &lt;code&gt;window-state-get&lt;/code&gt; 保存。</target>
        </trans-unit>
        <trans-unit id="396365e7ff81be1272c7622f94ceb6bdf3a10927" translate="yes" xml:space="preserve">
          <source>This variable (if non-&lt;code&gt;nil&lt;/code&gt;) specifies a file for recording the names of all the auto-save files. Each time Emacs does auto-saving, it writes two lines into this file for each buffer that has auto-saving enabled. The first line gives the name of the visited file (it&amp;rsquo;s empty if the buffer has none), and the second gives the name of the auto-save file.</source>
          <target state="translated">该变量（如果为non- &lt;code&gt;nil&lt;/code&gt; ,则指定一个文件）用于记录所有自动保存文件的名称。每次Emacs进行自动保存时，都会为启用了自动保存的每个缓冲区在此文件中写入两行。第一行给出了被访问文件的名称（如果缓冲区没有缓冲区，则为空），第二行给出了自动保存文件的名称。</target>
        </trans-unit>
        <trans-unit id="8af93758c6ea4b3157635acdea90f48aa7e3a4b4" translate="yes" xml:space="preserve">
          <source>This variable affects the behavior of &lt;code&gt;forward-word&lt;/code&gt; and &lt;code&gt;backward-word&lt;/code&gt;, and everything that uses them. If it is non-&lt;code&gt;nil&lt;/code&gt;, then characters in the escape and character-quote syntax classes count as part of words. Otherwise, they do not.</source>
          <target state="translated">此变量影响 &lt;code&gt;forward-word&lt;/code&gt; 和 &lt;code&gt;backward-word&lt;/code&gt; 以及使用它们的所有内容的行为。如果它不是 &lt;code&gt;nil&lt;/code&gt; ，则转义和字符引用语法类中的字符将算作单词的一部分。否则，他们不会。</target>
        </trans-unit>
        <trans-unit id="fc51974be5abb325d7e9dd33a53d17599959c4e2" translate="yes" xml:space="preserve">
          <source>This variable affects the behavior of &lt;code&gt;forward-word&lt;/code&gt; and &lt;code&gt;backward-word&lt;/code&gt;, and everything that uses them. Its value is a char-table (see &lt;a href=&quot;char_002dtables#Char_002dTables&quot;&gt;Char-Tables&lt;/a&gt;) of functions to search for word boundaries. If a character has a non-&lt;code&gt;nil&lt;/code&gt; entry in this table, then when a word starts or ends with that character, the corresponding function will be called with 2 arguments: &lt;var&gt;pos&lt;/var&gt; and &lt;var&gt;limit&lt;/var&gt;. The function should return the position of the other word boundary. Specifically, if &lt;var&gt;pos&lt;/var&gt; is smaller than &lt;var&gt;limit&lt;/var&gt;, then &lt;var&gt;pos&lt;/var&gt; is at the beginning of a word, and the function should return the position after the last character of the word; otherwise, &lt;var&gt;pos&lt;/var&gt; is at the last character of a word, and the function should return the position of that word&amp;rsquo;s first character.</source>
          <target state="translated">此变量影响 &lt;code&gt;forward-word&lt;/code&gt; 和 &lt;code&gt;backward-word&lt;/code&gt; 以及使用它们的所有内容的行为。它的值是用于搜索单词边界的函数的字符表（请参见&lt;a href=&quot;char_002dtables#Char_002dTables&quot;&gt;Char-Tables&lt;/a&gt;）。如果角色有一个非 &lt;code&gt;nil&lt;/code&gt; ：此表中的条目，那么当一个字开始，结束与该字符，相应的功能将被以2个参数称为 &lt;var&gt;pos&lt;/var&gt; 和 &lt;var&gt;limit&lt;/var&gt; 。该函数应返回另一个单词边界的位置。具体来说，如果 &lt;var&gt;pos&lt;/var&gt; 小于 &lt;var&gt;limit&lt;/var&gt; ，则 &lt;var&gt;pos&lt;/var&gt; 在单词的开头，并且函数应返回单词最后一个字符之后的位置；除此以外， &lt;var&gt;pos&lt;/var&gt; 在单词的最后一个字符处，该函数应返回该单词的第一个字符的位置。</target>
        </trans-unit>
        <trans-unit id="b6a24ba7e7a7fe338c696f697deb90284730b3b9" translate="yes" xml:space="preserve">
          <source>This variable affects the print functions &lt;code&gt;prin1&lt;/code&gt; and &lt;code&gt;print&lt;/code&gt; that print with quoting. It does not affect &lt;code&gt;princ&lt;/code&gt;. Here is an example using &lt;code&gt;prin1&lt;/code&gt;:</source>
          <target state="translated">这个变量会影响打印功能 &lt;code&gt;prin1&lt;/code&gt; 和 &lt;code&gt;print&lt;/code&gt; 的打印使用引号。它不影响 &lt;code&gt;princ&lt;/code&gt; 。这是使用 &lt;code&gt;prin1&lt;/code&gt; 的示例：</target>
        </trans-unit>
        <trans-unit id="6afefb9044b50bb998d4fab4b655e075f7420cab" translate="yes" xml:space="preserve">
          <source>This variable allow setting which special events &lt;code&gt;while-no-input&lt;/code&gt; should ignore. It is a list of event symbols (see &lt;a href=&quot;event-examples#Event-Examples&quot;&gt;Event Examples&lt;/a&gt;).</source>
          <target state="translated">此变量允许设置 &lt;code&gt;while-no-input&lt;/code&gt; 特殊事件应忽略的事件。它是事件符号的列表（请参阅&lt;a href=&quot;event-examples#Event-Examples&quot;&gt;事件示例&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="7b537327c14ead258a3541adaa1376e0ca95e3ea" translate="yes" xml:space="preserve">
          <source>This variable allows major modes to override the key bindings for particular minor modes. The elements of this alist look like the elements of &lt;code&gt;minor-mode-map-alist&lt;/code&gt;: &lt;code&gt;(&lt;var&gt;variable&lt;/var&gt;
. &lt;var&gt;keymap&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">此变量允许主要模式覆盖特定次要模式的键绑定。此ALIST样子的元件的元件 &lt;code&gt;minor-mode-map-alist&lt;/code&gt; ： &lt;code&gt;(&lt;var&gt;variable&lt;/var&gt; . &lt;var&gt;keymap&lt;/var&gt;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="530af1cea5e9f2c8bddfe1ad4730aec6c3806310" translate="yes" xml:space="preserve">
          <source>This variable allows the user to specify the dimensions of graphical displays returned by &lt;code&gt;display-mm-height&lt;/code&gt; and &lt;code&gt;display-mm-width&lt;/code&gt; in case the system provides incorrect values.</source>
          <target state="translated">如果系统提供了不正确的值，则该变量允许用户指定由 &lt;code&gt;display-mm-height&lt;/code&gt; 和 &lt;code&gt;display-mm-width&lt;/code&gt; 返回的图形显示的尺寸。</target>
        </trans-unit>
        <trans-unit id="638c9ca74c10e3a9ffe0efaa9db9b416b31d0f88" translate="yes" xml:space="preserve">
          <source>This variable alters the action of &lt;code&gt;fill-individual-paragraphs&lt;/code&gt; as described above.</source>
          <target state="translated">如上所述，此变量会更改 &lt;code&gt;fill-individual-paragraphs&lt;/code&gt; 的作用。</target>
        </trans-unit>
        <trans-unit id="3b607c668560c735b23877aee893242dff7ec052" translate="yes" xml:space="preserve">
          <source>This variable automatically becomes buffer-local when set.</source>
          <target state="translated">当设置时,这个变量会自动成为缓冲区本地变量。</target>
        </trans-unit>
        <trans-unit id="cc32379074d162cca56e22d0efa11b26935e4821" translate="yes" xml:space="preserve">
          <source>This variable can be buffer-local.</source>
          <target state="translated">这个变量可以是缓冲区本地的。</target>
        </trans-unit>
        <trans-unit id="79db4611e6e1a7f4ff38923fb56fd4fa3c0112fa" translate="yes" xml:space="preserve">
          <source>This variable can be used to customize the behavior of the</source>
          <target state="translated">这个变量可以用来自定义函数的行为。</target>
        </trans-unit>
        <trans-unit id="6a51d16aca34c2aebf4460ccbddbca97f87926c2" translate="yes" xml:space="preserve">
          <source>This variable contains a list of type symbols for image formats which are potentially supported in the current configuration.</source>
          <target state="translated">这个变量包含当前配置中可能支持的图像格式的类型符号列表。</target>
        </trans-unit>
        <trans-unit id="c036ffaeed03edc809a86a2cee550de0fdd25651" translate="yes" xml:space="preserve">
          <source>This variable contains a regexp that is guaranteed not to match any string at all. It is particularly useful as default value for variables that may be set to a pattern that actually matches something.</source>
          <target state="translated">这个变量包含了一个regexp,它保证不会匹配任何字符串。它作为变量的默认值特别有用,因为这些变量可能会被设置为一个实际匹配的模式。</target>
        </trans-unit>
        <trans-unit id="83869bf511c19ccf200615448ea094eb8264fd05" translate="yes" xml:space="preserve">
          <source>This variable contains an association list of file name patterns (regular expressions) and corresponding major mode commands. Usually, the file name patterns test for suffixes, such as &amp;lsquo;</source>
          <target state="translated">此变量包含文件名模式（正则表达式）和相应的主模式命令的关联列表。通常，文件名模式会测试后缀，例如&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="e804e8c8b587ca36a6d3e32c7a05dc988aeb0175" translate="yes" xml:space="preserve">
          <source>This variable contains the default global keymap that maps Emacs keyboard input to commands. The global keymap is normally this keymap. The default global keymap is a full keymap that binds &lt;code&gt;self-insert-command&lt;/code&gt; to all of the printing characters.</source>
          <target state="translated">此变量包含将Emacs键盘输入映射到命令的默认全局键盘映射。全局键盘映射通常是此键盘映射。默认的全局键盘映射是一个完整的键盘映射，它将 &lt;code&gt;self-insert-command&lt;/code&gt; 绑定到所有打印字符。</target>
        </trans-unit>
        <trans-unit id="e4be09f34ec123990f2c0246a3f4862a2359ec9f" translate="yes" xml:space="preserve">
          <source>This variable contains the string or vector that defines the keyboard macro that is currently executing. It is &lt;code&gt;nil&lt;/code&gt; if no macro is currently executing. A command can test this variable so as to behave differently when run from an executing macro. Do not set this variable yourself.</source>
          <target state="translated">此变量包含定义当前正在执行的键盘宏的字符串或向量。如果当前没有宏在执行，则为 &lt;code&gt;nil&lt;/code&gt; 。命令可以测试此变量，以便在从正在执行的宏中运行时表现不同。不要自己设置此变量。</target>
        </trans-unit>
        <trans-unit id="7e6d774a84f545c518048f0a484c668d776d9a21" translate="yes" xml:space="preserve">
          <source>This variable contains the total number of garbage collections done so far in this Emacs session.</source>
          <target state="translated">这个变量包含了到目前为止在这个Emacs会话中完成的垃圾收集总数。</target>
        </trans-unit>
        <trans-unit id="59f6be89e0adfe21082faa223671481442a9e882" translate="yes" xml:space="preserve">
          <source>This variable contains the total number of seconds of elapsed time during garbage collection so far in this Emacs session, as a floating-point number.</source>
          <target state="translated">这个变量包含了在这个Emacs会话中,到目前为止,垃圾收集过程中的总耗时秒数,是一个浮点数。</target>
        </trans-unit>
        <trans-unit id="50d408442d8079d9f6115134b3b5c66138abfe92" translate="yes" xml:space="preserve">
          <source>This variable controls automatic deletion of processes that have terminated (due to calling &lt;code&gt;exit&lt;/code&gt; or to a signal). If it is &lt;code&gt;nil&lt;/code&gt;, then they continue to exist until the user runs &lt;code&gt;list-processes&lt;/code&gt;. Otherwise, they are deleted immediately after they exit.</source>
          <target state="translated">此变量控制已终止进程的自动删除（由于调用 &lt;code&gt;exit&lt;/code&gt; 或信号）。如果为 &lt;code&gt;nil&lt;/code&gt; ，则它们将继续存在，直到用户运行 &lt;code&gt;list-processes&lt;/code&gt; 为止。否则，它们将在退出后立即删除。</target>
        </trans-unit>
        <trans-unit id="9f1368d3656eb83cf1871e0b34b8f8be4582bf2e" translate="yes" xml:space="preserve">
          <source>This variable controls how &lt;code&gt;recenter-top-bottom&lt;/code&gt; behaves when called with no argument. The default value is &lt;code&gt;(middle top
bottom)&lt;/code&gt;, which means that successive calls of &lt;code&gt;recenter-top-bottom&lt;/code&gt; with no argument cycle between placing point at the middle, top, and bottom of the window.</source>
          <target state="translated">此变量控制不带参数调用时的 &lt;code&gt;recenter-top-bottom&lt;/code&gt; 行为。默认值为 &lt;code&gt;(middle top bottom)&lt;/code&gt; ，这意味着连续调用 &lt;code&gt;recenter-top-bottom&lt;/code&gt; 时，在窗口的中间，顶部和底部之间的放置点之间没有参数循环。</target>
        </trans-unit>
        <trans-unit id="dd2f55287cae06926037fbae5d83d066c0d39908" translate="yes" xml:space="preserve">
          <source>This variable controls how scrolling is done automatically when point moves off the screen (or into the scroll margin). If the value is a positive integer &lt;var&gt;n&lt;/var&gt;, then redisplay scrolls the text up to &lt;var&gt;n&lt;/var&gt; lines in either direction, if that will bring point back into proper view. This behavior is called &lt;em&gt;conservative scrolling&lt;/em&gt;. Otherwise, scrolling happens in the usual way, under the control of other variables such as &lt;code&gt;scroll-up-aggressively&lt;/code&gt; and &lt;code&gt;scroll-down-aggressively&lt;/code&gt;.</source>
          <target state="translated">当点移出屏幕（或移入滚动边距）时，此变量控制如何自动完成滚动。如果该值为正整数 &lt;var&gt;n&lt;/var&gt; ，则重新显示会将文本沿任一方向向上滚动到 &lt;var&gt;n&lt;/var&gt; 行，如果这样会使点回到正确的视图。这种行为称为&lt;em&gt;保守滚动&lt;/em&gt;。否则，滚动发生在通常的方式，其他变量，如控制下 &lt;code&gt;scroll-up-aggressively&lt;/code&gt; 和 &lt;code&gt;scroll-down-aggressively&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="366a8ab116129b00f2c6cd35a8a114c7dc0c97b9" translate="yes" xml:space="preserve">
          <source>This variable controls line truncation in &lt;em&gt;partial-width&lt;/em&gt; windows. A partial-width window is one that does not occupy the entire frame width (see &lt;a href=&quot;splitting-windows#Splitting-Windows&quot;&gt;Splitting Windows&lt;/a&gt;). If the value is &lt;code&gt;nil&lt;/code&gt;, line truncation is determined by the variable &lt;code&gt;truncate-lines&lt;/code&gt; (see above). If the value is an integer &lt;var&gt;n&lt;/var&gt;, lines are truncated if the partial-width window has fewer than &lt;var&gt;n&lt;/var&gt; columns, regardless of the value of &lt;code&gt;truncate-lines&lt;/code&gt;; if the partial-width window has &lt;var&gt;n&lt;/var&gt; or more columns, line truncation is determined by &lt;code&gt;truncate-lines&lt;/code&gt;. For any other non-&lt;code&gt;nil&lt;/code&gt; value, lines are truncated in every partial-width window, regardless of the value of &lt;code&gt;truncate-lines&lt;/code&gt;.</source>
          <target state="translated">此变量控制&lt;em&gt;部分宽度&lt;/em&gt;窗口中的行截断。部分宽度窗口是一个不占据整个框架宽度的窗口（请参阅&lt;a href=&quot;splitting-windows#Splitting-Windows&quot;&gt;拆分窗口&lt;/a&gt;）。如果值为 &lt;code&gt;nil&lt;/code&gt; ，则行截断由变量 &lt;code&gt;truncate-lines&lt;/code&gt; 确定（请参见上文）。如果值是整数 &lt;var&gt;n&lt;/var&gt; ，则无论部分宽度窗口的列数少于 &lt;var&gt;n&lt;/var&gt; 列，都将 &lt;code&gt;truncate-lines&lt;/code&gt; ，而不管truncate-lines的值如何；如果部分宽度窗口具有 &lt;var&gt;n&lt;/var&gt; 列或更多列，则行截断由 &lt;code&gt;truncate-lines&lt;/code&gt; 确定。对于任何其他非 &lt;code&gt;nil&lt;/code&gt; 值，无论 &lt;code&gt;truncate-lines&lt;/code&gt; 的值如何，在每个部分宽度的窗口中行都会被截断。</target>
        </trans-unit>
        <trans-unit id="ec8d4a2a0c45b38bcb6700c9a2108cb5ab4130dd" translate="yes" xml:space="preserve">
          <source>This variable controls printing of &amp;lsquo;charset&amp;rsquo; text property on printing a string. The value should be &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;t&lt;/code&gt;, or &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="translated">此变量控制在打印字符串时打印&amp;ldquo;字符集&amp;rdquo;文本属性。该值应为 &lt;code&gt;nil&lt;/code&gt; ， &lt;code&gt;t&lt;/code&gt; 或 &lt;code&gt;default&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ddab823b28c28e86db35ce74b222db2e26efcedb" translate="yes" xml:space="preserve">
          <source>This variable controls processing of &amp;lsquo;</source>
          <target state="translated">此变量控制对&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="54c6f7b5b68437535cb932d55639d9d12f77049e" translate="yes" xml:space="preserve">
          <source>This variable controls the display of the startup echo area message. You can suppress the startup echo area message by adding text with this form to your init file:</source>
          <target state="translated">这个变量控制启动回音区消息的显示。您可以通过在您的init文件中添加带有此表单的文本来抑制启动回音区消息。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
