<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="elisp">
    <body>
      <group id="elisp">
        <trans-unit id="03e85f9d7f00ac8f062c08dcfe544b25b136aa87" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;window-configuration-type#Window-Configuration-Type&quot;&gt;Window Configuration Type&lt;/a&gt;:</source>
          <target state="translated">&amp;bull;&lt;a href=&quot;window-configuration-type#Window-Configuration-Type&quot;&gt;窗口配置类型&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="415f0c380ab740163438bbdcba65517c91c2576c" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;window-configurations#Window-Configurations&quot;&gt;Window Configurations&lt;/a&gt;:</source>
          <target state="translated">&amp;bull;&lt;a href=&quot;window-configurations#Window-Configurations&quot;&gt;窗口配置&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="3d1cc7b88cc02e9315e205428f84326456ea25d9" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;window-dividers#Window-Dividers&quot;&gt;Window Dividers&lt;/a&gt;:</source>
          <target state="translated">&amp;bull;&lt;a href=&quot;window-dividers#Window-Dividers&quot;&gt;窗分隔线&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="9b1446db81b6364c2cc0c5ae5e92fdf9fbfb73dd" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;window-frame-parameters#Window-Frame-Parameters&quot;&gt;Window Frame Parameters&lt;/a&gt;:</source>
          <target state="translated">&amp;bull;&lt;a href=&quot;window-frame-parameters#Window-Frame-Parameters&quot;&gt;窗框参数&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="a8595a9e926350370374660e1b9a9baeaf338a60" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;window-history#Window-History&quot;&gt;Window History&lt;/a&gt;:</source>
          <target state="translated">&amp;bull;&lt;a href=&quot;window-history#Window-History&quot;&gt;窗口历史记录&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="aee484a2f7b2dcc907f762bfb626ee965d79683b" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;window-hooks#Window-Hooks&quot;&gt;Window Hooks&lt;/a&gt;:</source>
          <target state="translated">&amp;bull;&lt;a href=&quot;window-hooks#Window-Hooks&quot;&gt;窗钩&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="035044a74dfcb10b57719505e339ebf10b145e19" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;window-internals#Window-Internals&quot;&gt;Window Internals&lt;/a&gt;:</source>
          <target state="translated">&amp;bull;&lt;a href=&quot;window-internals#Window-Internals&quot;&gt;窗口内部&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="3231677fbbd081c52db1b183b0369e55315306c2" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;window-parameters#Window-Parameters&quot;&gt;Window Parameters&lt;/a&gt;:</source>
          <target state="translated">&amp;bull;&lt;a href=&quot;window-parameters#Window-Parameters&quot;&gt;窗口参数&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="5de91ae547eb79705c20d7fc8dbcea5bc617d941" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;window-point#Window-Point&quot;&gt;Window Point&lt;/a&gt;:</source>
          <target state="translated">&amp;bull;&lt;a href=&quot;window-point#Window-Point&quot;&gt;窗口点&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="df2ecf3e4327185030ed843e85fcc5ac760b8ff8" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;window-sizes#Window-Sizes&quot;&gt;Window Sizes&lt;/a&gt;:</source>
          <target state="translated">&amp;bull;&lt;a href=&quot;window-sizes#Window-Sizes&quot;&gt;窗口大小&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="d4c0b226a4b0cf5ecae75c94e441cec8bac8312c" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;window-start-and-end#Window-Start-and-End&quot;&gt;Window Start and End&lt;/a&gt;:</source>
          <target state="translated">&amp;bull;&lt;a href=&quot;window-start-and-end#Window-Start-and-End&quot;&gt;窗口的开始和结束&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="a3bcf74cb8631439798f437a3719a635dc1b6a88" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;window-system-selections#Window-System-Selections&quot;&gt;Window System Selections&lt;/a&gt;:</source>
          <target state="translated">&amp;bull;&lt;a href=&quot;window-system-selections#Window-System-Selections&quot;&gt;窗口系统选择&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="38b649f0f3c778e3365887a78412ed278dc8f66d" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;window-systems#Window-Systems&quot;&gt;Window Systems&lt;/a&gt;:</source>
          <target state="translated">&amp;bull;&lt;a href=&quot;window-systems#Window-Systems&quot;&gt;窗户系统&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="d139b9b7a33a4f26c13bcb55d7116a8fd870b9c0" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;window-type#Window-Type&quot;&gt;Window Type&lt;/a&gt;:</source>
          <target state="translated">&amp;bull;&lt;a href=&quot;window-type#Window-Type&quot;&gt;窗口类型&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="d7215df0f0d5daa2052ffc45a9c19ca32448218f" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;windows-and-frames#Windows-and-Frames&quot;&gt;Windows and Frames&lt;/a&gt;:</source>
          <target state="translated">&amp;bull;&lt;a href=&quot;windows-and-frames#Windows-and-Frames&quot;&gt;窗户和框架&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="6a541b7f9cf08683be6ba3c638fee3f6b55d67c8" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;word-motion#Word-Motion&quot;&gt;Word Motion&lt;/a&gt;:</source>
          <target state="translated">&amp;bull;&lt;a href=&quot;word-motion#Word-Motion&quot;&gt;文字运动&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="20db2177e8708a8c4efd6bf2ff98d659507bb2cf" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;writing-dynamic-modules#Writing-Dynamic-Modules&quot;&gt;Writing Dynamic Modules&lt;/a&gt;:</source>
          <target state="translated">&amp;bull;&lt;a href=&quot;writing-dynamic-modules#Writing-Dynamic-Modules&quot;&gt;编写动态模块&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="0365e184296f633c0945a188a35131957a796b48" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;writing-emacs-primitives#Writing-Emacs-Primitives&quot;&gt;Writing Emacs Primitives&lt;/a&gt;:</source>
          <target state="translated">&amp;bull;&lt;a href=&quot;writing-emacs-primitives#Writing-Emacs-Primitives&quot;&gt;编写Emacs原语&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="f4dfdf0243e804bfa357a22a8c338f342299dc19" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;writing-to-files#Writing-to-Files&quot;&gt;Writing to Files&lt;/a&gt;:</source>
          <target state="translated">&amp;bull;&lt;a href=&quot;writing-to-files#Writing-to-Files&quot;&gt;写入文件&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="c4869eedd1dc14ad148d4e53064bab697fb01b28" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;wrong-time#Wrong-Time&quot;&gt;Wrong Time&lt;/a&gt;:</source>
          <target state="translated">&amp;bull;&lt;a href=&quot;wrong-time#Wrong-Time&quot;&gt;错误的时间&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="c2310446889bb8837b301ca8fffd1c8af688f89d" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;x11-keysyms#X11-Keysyms&quot;&gt;X11 Keysyms&lt;/a&gt;:</source>
          <target state="translated">&amp;bull; &lt;a href=&quot;x11-keysyms#X11-Keysyms&quot;&gt;X11键符号&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="2fd0ce640e2df2ddbdf1b394eda2dc53d8811175" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;xbm-images#XBM-Images&quot;&gt;XBM Images&lt;/a&gt;:</source>
          <target state="translated">&amp;bull; &lt;a href=&quot;xbm-images#XBM-Images&quot;&gt;XBM图片&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="3cc064a3897f57d821e331d20ddf7926d9479ad5" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;xpm-images#XPM-Images&quot;&gt;XPM Images&lt;/a&gt;:</source>
          <target state="translated">&amp;bull; &lt;a href=&quot;xpm-images#XPM-Images&quot;&gt;XPM图片&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="49f72c265914e127a26244b2bc873fd01ef3e9f0" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;xwidgets#Xwidgets&quot;&gt;Xwidgets&lt;/a&gt;:</source>
          <target state="translated">&amp;bull; &lt;a href=&quot;xwidgets#Xwidgets&quot;&gt;Xwidgets&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="8c7aff3b3a9e8690377f4e1f9c215a5d60ef2406" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;yank-commands#Yank-Commands&quot;&gt;Yank Commands&lt;/a&gt;:</source>
          <target state="translated">&amp;bull; &lt;a href=&quot;yank-commands#Yank-Commands&quot;&gt;Yank命令&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="7ca0e7e82572c7be034a3e59c1039d65db790256" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;yanking#Yanking&quot;&gt;Yanking&lt;/a&gt;:</source>
          <target state="translated">&amp;bull; &lt;a href=&quot;yanking#Yanking&quot;&gt;Yanking&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="b1f05b7b3f8572f87a606a97bdc9d421c2751bdd" translate="yes" xml:space="preserve">
          <source>&amp;bull; &lt;a href=&quot;yes_002dor_002dno-queries#Yes_002dor_002dNo-Queries&quot;&gt;Yes-or-No Queries&lt;/a&gt;:</source>
          <target state="translated">&amp;bull;&lt;a href=&quot;yes_002dor_002dno-queries#Yes_002dor_002dNo-Queries&quot;&gt;是或否查询&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="bfd190aabb29247e4b592c851a5990857551a7f6" translate="yes" xml:space="preserve">
          <source>&amp;equiv;</source>
          <target state="translated">&amp;equiv;</target>
        </trans-unit>
        <trans-unit id="03c7b3d3b9655eace132158a150dcd952feb9a0a" translate="yes" xml:space="preserve">
          <source>&amp;gt;</source>
          <target state="translated">&amp;gt;</target>
        </trans-unit>
        <trans-unit id="bd855de81a8ada57c0160e9ec0d49f1815670c8a" translate="yes" xml:space="preserve">
          <source>&amp;gt;=</source>
          <target state="translated">&amp;gt;=</target>
        </trans-unit>
        <trans-unit id="839e4a2006b278a93c4dc0f1936567078302c3f3" translate="yes" xml:space="preserve">
          <source>&amp;hellip;</source>
          <target state="translated">&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="55e0002737af0ebaff88beadf86bf66d5ade273a" translate="yes" xml:space="preserve">
          <source>&amp;hellip;-command</source>
          <target state="translated">&amp;hellip;-command</target>
        </trans-unit>
        <trans-unit id="3c4b9d72a275526c8b7b65a59b830bcc8b221710" translate="yes" xml:space="preserve">
          <source>&amp;hellip;-flag</source>
          <target state="translated">&amp;hellip;-flag</target>
        </trans-unit>
        <trans-unit id="73e253c7c43a104566debe1924c0a38d10781d17" translate="yes" xml:space="preserve">
          <source>&amp;hellip;-form</source>
          <target state="translated">&amp;hellip;-form</target>
        </trans-unit>
        <trans-unit id="827baec0d2afbf5d362d3203ad9baab0792bb2ae" translate="yes" xml:space="preserve">
          <source>&amp;hellip;-forms</source>
          <target state="translated">&amp;hellip;-forms</target>
        </trans-unit>
        <trans-unit id="0bf50ce0ae3dae3320e59fdef40dd7d9d1fbf73e" translate="yes" xml:space="preserve">
          <source>&amp;hellip;-function</source>
          <target state="translated">&amp;hellip;-function</target>
        </trans-unit>
        <trans-unit id="617af4b329c4b250c119e44be92f9c1e7ed9ad55" translate="yes" xml:space="preserve">
          <source>&amp;hellip;-functions</source>
          <target state="translated">&amp;hellip;-functions</target>
        </trans-unit>
        <trans-unit id="0a608ad9d5b0cb7c4e592e3d47fd2eddc4b796d3" translate="yes" xml:space="preserve">
          <source>&amp;hellip;-hook</source>
          <target state="translated">&amp;hellip;-hook</target>
        </trans-unit>
        <trans-unit id="d497c3b280241d987af300ddadaef84a9b105f0d" translate="yes" xml:space="preserve">
          <source>&amp;hellip;-internal</source>
          <target state="translated">&amp;hellip;-internal</target>
        </trans-unit>
        <trans-unit id="b6114d8d12c565a43a055c465f54018819d42cd3" translate="yes" xml:space="preserve">
          <source>&amp;hellip;-predicate</source>
          <target state="translated">&amp;hellip;-predicate</target>
        </trans-unit>
        <trans-unit id="7538c6474b8983106ec5a3411d34b25ae7f828ac" translate="yes" xml:space="preserve">
          <source>&amp;hellip;-program</source>
          <target state="translated">&amp;hellip;-program</target>
        </trans-unit>
        <trans-unit id="fd8f4ea47c3e0fd23213fa644c5d65fb2c367ecc" translate="yes" xml:space="preserve">
          <source>&amp;hellip;-switches</source>
          <target state="translated">&amp;hellip;-switches</target>
        </trans-unit>
        <trans-unit id="127c5c3c33d794f8577ee09de43e9a365775bf69" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Asking the question&amp;rdquo; means printing &lt;var&gt;prompt&lt;/var&gt; in the minibuffer, followed by the string &amp;lsquo;</source>
          <target state="translated">&amp;ldquo;问问题&amp;rdquo;是指在微型缓冲区中打印 &lt;var&gt;prompt&lt;/var&gt; ，后跟字符串'</target>
        </trans-unit>
        <trans-unit id="66c5d69663443cd5315c3b45e21666c3e98dced0" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Moving one word&amp;rdquo; means moving until point crosses a word-constituent character, which indicates the beginning of a word, and then continue moving until the word ends. By default, characters that begin and end words, known as &lt;em&gt;word boundaries&lt;/em&gt;, are defined by the current buffer&amp;rsquo;s syntax table (see &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;Syntax Class Table&lt;/a&gt;), but modes can override that by setting up a suitable &lt;code&gt;find-word-boundary-function-table&lt;/code&gt;, described below. Characters that belong to different scripts (as defined by &lt;code&gt;char-script-table&lt;/code&gt;), also define a word boundary (see &lt;a href=&quot;character-properties#Character-Properties&quot;&gt;Character Properties&lt;/a&gt;). In any case, this function cannot move point past the boundary of the accessible portion of the buffer, or across a field boundary (see &lt;a href=&quot;fields#Fields&quot;&gt;Fields&lt;/a&gt;). The most common case of a field boundary is the end of the prompt in the minibuffer.</source>
          <target state="translated">&amp;ldquo;移动一个单词&amp;rdquo;是指移动直到点越过表示单词开头的单词组成字符，然后继续移动直到单词结束。默认情况下，由当前缓冲区的语法表（请参见&lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;语法类表&lt;/a&gt;）定义以&lt;em&gt;单词&lt;/em&gt;开头和结尾的字符（称为&lt;em&gt;单词边界&lt;/em&gt;），但是模式可以通过设置合适的 &lt;code&gt;find-word-boundary-function-table&lt;/code&gt; 来覆盖它，如下面所描述的。属于不同脚本的 &lt;code&gt;char-script-table&lt;/code&gt; （由char-script-table定义）也定义了单词边界（请参见&lt;a href=&quot;character-properties#Character-Properties&quot;&gt;Character Properties&lt;/a&gt;）。在任何情况下，该功能不能移动点过去缓冲器的可接近部分的边界，或跨越场边界（参见&lt;a href=&quot;fields#Fields&quot;&gt;字段&lt;/a&gt;）。字段边界最常见的情况是迷你缓冲区中提示的结尾。</target>
        </trans-unit>
        <trans-unit id="1567ebc6b7de65d05c7c7ee9ebc5ed0678a1df45" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Potentially&amp;rdquo; means that Emacs knows about the image types, not necessarily that they can be used (for example, they could depend on unavailable dynamic libraries). To know which image types are really available, use &lt;code&gt;image-type-available-p&lt;/code&gt;.</source>
          <target state="translated">&amp;ldquo;可能&amp;rdquo;表示Emacs知道图像类型，但不一定知道可以使用它们（例如，它们可能取决于不可用的动态库）。要知道哪些图像类型真正可用，请使用 &lt;code&gt;image-type-available-p&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="20e5ab259ecbce12a1a5405dc13f1146c0c2aac9" translate="yes" xml:space="preserve">
          <source>&amp;lowast;</source>
          <target state="translated">&amp;lowast;</target>
        </trans-unit>
        <trans-unit id="900fd13b4e78138fa5c8437d4820c6cb910a7517" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;</source>
          <target state="translated">&amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="dbe46c56ae1db5f504494850ad1b2873c0b57fc2" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;foo</source>
          <target state="translated">&amp;lsquo;foo</target>
        </trans-unit>
        <trans-unit id="b9847042aa1dbbcd2aa72f59cb3a8740e0312660" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;like this&amp;rsquo;</source>
          <target state="translated">'像这样'</target>
        </trans-unit>
        <trans-unit id="5d2c1a80d8c17e5a143aee09c29a86838f18ab02" translate="yes" xml:space="preserve">
          <source>&amp;lt;</source>
          <target state="translated">&amp;lt;</target>
        </trans-unit>
        <trans-unit id="e3b9f11fca4507aafd71385bac17a306be3f77a9" translate="yes" xml:space="preserve">
          <source>&amp;lt;&amp;hellip;&amp;gt;</source>
          <target state="translated">&amp;lt;&amp;hellip;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="037fc9a552493e786bcd7aed89b2148f48d87642" translate="yes" xml:space="preserve">
          <source>&amp;lt;&lt;var&gt;a&lt;/var&gt;.&lt;var&gt;b&lt;/var&gt;.&lt;var&gt;c&lt;/var&gt;.&lt;var&gt;d&lt;/var&gt;:&lt;var&gt;p&lt;/var&gt;&amp;gt;</source>
          <target state="translated">&amp;lt;&lt;var&gt;a&lt;/var&gt;.&lt;var&gt;b&lt;/var&gt;.&lt;var&gt;c&lt;/var&gt;.&lt;var&gt;d&lt;/var&gt;:&lt;var&gt;p&lt;/var&gt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="5b3395a82316d36df5276272d419f8e788574abe" translate="yes" xml:space="preserve">
          <source>&amp;lt;&lt;var&gt;n&lt;/var&gt;&amp;gt;</source>
          <target state="translated">&amp;lt;&lt;var&gt;n&lt;/var&gt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="31c40125b3296ddaed4f32be58c0e7076909e006" translate="yes" xml:space="preserve">
          <source>&amp;lt;&lt;var&gt;nnn&lt;/var&gt;&amp;gt;</source>
          <target state="translated">&amp;lt;&lt;var&gt;nnn&lt;/var&gt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="dab86dd68ddaa4a7434b78f1b7a70c9ae75568fb" translate="yes" xml:space="preserve">
          <source>&amp;lt;=</source>
          <target state="translated">&amp;lt;=</target>
        </trans-unit>
        <trans-unit id="1dad44b0bd95ca9b08a1589ba3500d158e72224e" translate="yes" xml:space="preserve">
          <source>&amp;lt;file name&amp;gt;</source>
          <target state="translated">&amp;lt;文件名&amp;gt;</target>
        </trans-unit>
        <trans-unit id="1ec6c3128c94109cafe2815d651f5fd02f53c59c" translate="yes" xml:space="preserve">
          <source>&amp;lt;file name&amp;gt;.sig</source>
          <target state="translated">&amp;lt;文件名&amp;gt; .sig</target>
        </trans-unit>
        <trans-unit id="1db4b0bab71d1e71e08cab39b56283befad95546" translate="yes" xml:space="preserve">
          <source>&amp;lt;package name&amp;gt;-readme.txt</source>
          <target state="translated">&amp;lt;程序包名称&amp;gt; -readme.txt</target>
        </trans-unit>
        <trans-unit id="a30aebfc404b1b2536c6298ba67c2466b8744524" translate="yes" xml:space="preserve">
          <source>&amp;lt;stdalign.h&amp;gt;</source>
          <target state="translated">&amp;lt;stdalign.h&amp;gt;</target>
        </trans-unit>
        <trans-unit id="154fae0e3298f7750f432093b9d49314208fb5ce" translate="yes" xml:space="preserve">
          <source>&amp;mdash;they don&amp;rsquo;t correspond to any character. The Unicode Standard defines default values of properties for such codepoints; they are mentioned below for each property.</source>
          <target state="translated">-它们不对应任何字符。Unicode标准定义了此类代码点的属性的默认值。以下是每个属性的说明。</target>
        </trans-unit>
        <trans-unit id="ecdbd96f5533c54585e2516c1c1c53f748158ebf" translate="yes" xml:space="preserve">
          <source>&amp;rArr;</source>
          <target state="translated">&amp;rArr;</target>
        </trans-unit>
        <trans-unit id="4466f5ea01bad40a521f3168b5b7a9dbde092776" translate="yes" xml:space="preserve">
          <source>&amp;rarr;</source>
          <target state="translated">&amp;rarr;</target>
        </trans-unit>
        <trans-unit id="05c2d1fbe28d7fb9be1b5d7de9b1b069520d7548" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;</source>
          <target state="translated">&amp;rsquo;</target>
        </trans-unit>
        <trans-unit id="66ad1843713658733d26a95ba12ff1d29e6b3c14" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; &amp;ldquo;variable&amp;rdquo; in a file local variables list.</source>
          <target state="translated">文件本地变量列表中的&amp;ldquo;变量&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="3171ec0701159b9ad5dc63d0acc338c76201d8ec" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; &amp;ldquo;variable&amp;rdquo; is also a potential loophole, so Emacs normally asks for confirmation before handling it.</source>
          <target state="translated">&amp;ldquo;&amp;ldquo;变量&amp;rdquo;也是潜在的漏洞，因此Emacs通常会在处理之前要求确认。</target>
        </trans-unit>
        <trans-unit id="48e2cf8821bdbc9f249ef6255eae02692f5ee494" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (&lt;code&gt;&quot;[^\\]&quot;&lt;/code&gt; for Lisp string syntax), which matches any single character except a backslash.</source>
          <target state="translated">'（对于Lisp字符串语法，为 &lt;code&gt;&quot;[^\\]&quot;&lt;/code&gt; ），与除反斜杠之外的任何单个字符匹配。</target>
        </trans-unit>
        <trans-unit id="bc49ba903e8cc761548ddd0913ce0a4d016a47c8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (&lt;code&gt;file-attribute-modes&lt;/code&gt;).</source>
          <target state="translated">'（ &lt;code&gt;file-attribute-modes&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="2cd09c029dab28a24c9a88c5a89d99dacfad70ba" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (Period)</source>
          <target state="translated">'（句号）</target>
        </trans-unit>
        <trans-unit id="288acbc250d2d18a015a2c7a7b6b97af117f87e7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (a display table can specify a glyph to use instead of &amp;lsquo;</source>
          <target state="translated">'（显示表可以指定要使用的字形，而不是'</target>
        </trans-unit>
        <trans-unit id="9f4885d9ce3dea00cedc414f1eea97e16907f58c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (and the stronger &amp;lsquo;</source>
          <target state="translated">'（以及更强大的'</target>
        </trans-unit>
        <trans-unit id="424ce5e4e502233e49d39362b7cfd5a04e24505d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (backslash and space) to terminate the escape sequence. For example, &amp;lsquo;</source>
          <target state="translated">'（反斜杠和空格）终止转义序列。例如， '</target>
        </trans-unit>
        <trans-unit id="ddf7430c97a29b56b3c63d1b97e02c5d64942c11" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (character code 97) is displayed as &amp;lsquo;</source>
          <target state="translated">'（字符代码97）显示为'</target>
        </trans-unit>
        <trans-unit id="56225b914e269e1db6e63220042d5540b1c01bb6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (dot)</source>
          <target state="translated">'（点）</target>
        </trans-unit>
        <trans-unit id="dc10e063e86587ced80b5215820c7ffbe013611f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (followed by optional whitespace), the function adds &amp;lsquo;</source>
          <target state="translated">'（后跟可选的空格），该函数将添加'</target>
        </trans-unit>
        <trans-unit id="0d4e55fab12776ec3c9a5643f78a6661dd645f09" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (for example)</source>
          <target state="translated">' （例如）</target>
        </trans-unit>
        <trans-unit id="92aacff825801e7ae6bec7e730e1a1fc77cbaef4" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (greedy), &amp;lsquo;</source>
          <target state="translated">'（贪婪），'</target>
        </trans-unit>
        <trans-unit id="1621f3a530776619e57b5653280dad30fef22ffe" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (i.e., punctuation, matching character slot unused, first character of a comment-starter, second character of a comment-ender).</source>
          <target state="translated">'（即标点符号，未使用的匹配字符槽，注释启动器的第一个字符，注释提供者的第二个字符）。</target>
        </trans-unit>
        <trans-unit id="7c6a5dd054a873ec7b16702bab22994904a58cc1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (military time), and &amp;lsquo;</source>
          <target state="translated">'（军事时间），和'</target>
        </trans-unit>
        <trans-unit id="847cbf5bbf966944190e93304905b7e214c0ce53" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (non-greedy)</source>
          <target state="translated">'（非贪婪）</target>
        </trans-unit>
        <trans-unit id="5c8a458003477aaefe01135843752ad1f7c2d68d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (non-greedy).</source>
          <target state="translated">'（非贪婪）。</target>
        </trans-unit>
        <trans-unit id="83fef044ca64bc0b3fd93201094e4a6ceb7ee9c6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (only reversed, since we used &lt;code&gt;push&lt;/code&gt;).</source>
          <target state="translated">'（由于我们使用了 &lt;code&gt;push&lt;/code&gt; ，因此仅反转了）。</target>
        </trans-unit>
        <trans-unit id="b42cabd0ba9f80f9f6393ad0cfa5a1d565fa9de0" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (or &amp;lsquo;</source>
          <target state="translated">' （要么 '</target>
        </trans-unit>
        <trans-unit id="db11053e80e8d51b1a16cd20784b66d8c7bebaec" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (or the deprecated suffix &amp;lsquo;</source>
          <target state="translated">'（或已弃用的后缀'</target>
        </trans-unit>
        <trans-unit id="179141f3b217afa5caf2cbe9cb72f61495cb022f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (possibly extended with a compression suffix) or the shared-library extension, unless it contains an explicit directory name.</source>
          <target state="translated">'（可能带有压缩后缀）或共享库扩展名，除非它包含显式目录名。</target>
        </trans-unit>
        <trans-unit id="cedc92290ba28727ece08300f92b93b6998f9846" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (see &lt;a href=&quot;_0025_002dconstructs#g_t_0025_002dConstructs&quot;&gt;%-Constructs&lt;/a&gt;). This is normally the case when Emacs is not using a window system, and can only display one frame at a time. See &lt;a href=&quot;frame-titles#Frame-Titles&quot;&gt;Frame Titles&lt;/a&gt;.</source>
          <target state="translated">'（请参见&lt;a href=&quot;_0025_002dconstructs#g_t_0025_002dConstructs&quot;&gt;％-Constructs&lt;/a&gt;）。当Emacs不使用窗口系统并且一次只能显示一帧时，通常是这种情况。请参阅&lt;a href=&quot;frame-titles#Frame-Titles&quot;&gt;框架标题&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="546e34ab3684645ce16762b570bd0a0e649dafc8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (see &lt;a href=&quot;backquote#Backquote&quot;&gt;Backquote&lt;/a&gt;), which is used to quote only part of a list, while computing and substituting other parts.</source>
          <target state="translated">'（请参阅&lt;a href=&quot;backquote#Backquote&quot;&gt;Backquote&lt;/a&gt;），它仅用于引用列表的一部分，而用于计算和替换其他部分。</target>
        </trans-unit>
        <trans-unit id="9fbb45a85255e42f61f4cce80f1a312cceff4e02" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (see &lt;a href=&quot;directory-names#Directory-Names&quot;&gt;Directory Names&lt;/a&gt;). For example, if the old name is</source>
          <target state="translated">'（请参阅&lt;a href=&quot;directory-names#Directory-Names&quot;&gt;目录名称&lt;/a&gt;）。例如，如果旧名称是</target>
        </trans-unit>
        <trans-unit id="ad1d2453cfa79fbd3af52afeedda9b0479725f1e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (see &lt;a href=&quot;directory-names#abbreviate_002dfile_002dname&quot;&gt;abbreviate-file-name&lt;/a&gt;), and a relative one does not. On MS-DOS and MS-Windows, an absolute file name starts with a slash or a backslash, or with a drive specification &amp;lsquo;</source>
          <target state="translated">'（请参阅&lt;a href=&quot;directory-names#abbreviate_002dfile_002dname&quot;&gt;缩写文件名&lt;/a&gt;），而相对的则没有。在MS-DOS和MS-Windows上，绝对文件名以斜杠或反斜杠开头，或者以驱动器规范'</target>
        </trans-unit>
        <trans-unit id="535e1778ed9d3fb5bf3f42153705104bd441380c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (see &lt;a href=&quot;symbol-type#Symbol-Type&quot;&gt;Symbol Type&lt;/a&gt;).</source>
          <target state="translated">'（请参见&lt;a href=&quot;symbol-type#Symbol-Type&quot;&gt;符号类型&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="6c99bee4c76c8e5b26a68129b299f68fbe8506ec" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (see below).</source>
          <target state="translated">' （见下文）。</target>
        </trans-unit>
        <trans-unit id="8b480c3a6e43dfa7f7c1e6046d6a2e4aae5e3a38" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (subexpressions in sequence).</source>
          <target state="translated">'（顺序的子表达式）。</target>
        </trans-unit>
        <trans-unit id="a9ae002965caf5a2f42e6f4f0dcee1c57b06b8c8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (such as &lt;code&gt;&amp;amp;optional&lt;/code&gt;).</source>
          <target state="translated">'（例如 &lt;code&gt;&amp;amp;optional&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="5ae840ed1977e265e201f3ea7d08f075e5d901c2" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (that would be redundant). The argument &lt;var&gt;doc&lt;/var&gt; is a documentation string for the face. The additional &lt;var&gt;keyword&lt;/var&gt; arguments have the same meanings as in &lt;code&gt;defgroup&lt;/code&gt; and &lt;code&gt;defcustom&lt;/code&gt; (see &lt;a href=&quot;common-keywords#Common-Keywords&quot;&gt;Common Keywords&lt;/a&gt;).</source>
          <target state="translated">'（那将是多余的）。 &lt;var&gt;doc&lt;/var&gt; 参数是面部的文档字符串。附加 &lt;var&gt;keyword&lt;/var&gt; 参数的含义与 &lt;code&gt;defgroup&lt;/code&gt; 和 &lt;code&gt;defcustom&lt;/code&gt; 中的含义相同（请参阅&lt;a href=&quot;common-keywords#Common-Keywords&quot;&gt;通用关键字&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="b943e68b8fcb2232f2e0ea92aae8ea61b5b42b5b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (the word &amp;lsquo;</source>
          <target state="translated">' （这个单词 '</target>
        </trans-unit>
        <trans-unit id="0221e7f7c55b6b8a61383b6edf2f93ea57d26b5a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (these are called &lt;em&gt;keywords&lt;/em&gt;). These symbols cannot be rebound, nor can their values be changed. Any attempt to set or bind &lt;code&gt;nil&lt;/code&gt; or &lt;code&gt;t&lt;/code&gt; signals a &lt;code&gt;setting-constant&lt;/code&gt; error. The same is true for a keyword (a symbol whose name starts with &amp;lsquo;</source>
          <target state="translated">'（这些称为&lt;em&gt;关键字&lt;/em&gt;）。这些符号不能反弹，也不能更改其值。任何设置或绑定 &lt;code&gt;nil&lt;/code&gt; 或 &lt;code&gt;t&lt;/code&gt; 的尝试都表示 &lt;code&gt;setting-constant&lt;/code&gt; 错误。关键字也是如此（名称以&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="290d894abaae2e415e32f7054e6a59e878c19f1e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (this is often appropriate when matching programming-language keywords and the like).</source>
          <target state="translated">'（在匹配编程语言关键字等时通常是适当的）。</target>
        </trans-unit>
        <trans-unit id="b20258646d0bd3b406ad77bc7723b9e7ec54a293" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (those are called &lt;em&gt;keywords&lt;/em&gt;). See &lt;a href=&quot;constant-variables#Constant-Variables&quot;&gt;Constant Variables&lt;/a&gt;.</source>
          <target state="translated">'（称为&lt;em&gt;关键字&lt;/em&gt;）。请参阅&lt;a href=&quot;constant-variables#Constant-Variables&quot;&gt;常量变量&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="eb7795af977e42373a97fa91d7601ee73dbaf0a6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (used for quoting), the comma, &amp;lsquo;</source>
          <target state="translated">'（用于引用），逗号，</target>
        </trans-unit>
        <trans-unit id="25364199edfbec43d6442378787413448f50e0df" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (used in macros), and &amp;lsquo;</source>
          <target state="translated">&amp;rdquo;（用于宏）和&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="797fabb6a14a2e06f4d7985bdee5190608a35c3c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (used in the read syntax for certain data types).</source>
          <target state="translated">'（用于某些数据类型的读取语法）。</target>
        </trans-unit>
        <trans-unit id="edd7f4ad761c0b15b7abf82671297e2807e2c6c5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (where &lt;var&gt;instance&lt;/var&gt; is the name under which Emacs was invoked), and using &amp;lsquo;</source>
          <target state="translated">'（其中 &lt;var&gt;instance&lt;/var&gt; 是调用Emacs的名称），并使用'</target>
        </trans-unit>
        <trans-unit id="5e8b0d99abaef87512ad30463468a83a8a9e9c25" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; (which matches any single character that is not a square bracket), followed by a literal &amp;lsquo;</source>
          <target state="translated">'（与非方括号的任何单个字符匹配），后接文字'</target>
        </trans-unit>
        <trans-unit id="fe39fcd45acb9045ff9e60d33cc20b7f54fe86d7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; Unicode property (see &lt;a href=&quot;character-properties#Character-Properties&quot;&gt;bidi-class&lt;/a&gt;).</source>
          <target state="translated">'Unicode属性（请参见&lt;a href=&quot;character-properties#Character-Properties&quot;&gt;biddi-class&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="009f5242e52568463c63af2fbe544fa87b009eb5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; according to this predicate, even if &amp;lsquo;</source>
          <target state="translated">根据此谓词，即使&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="4f669d3296b9ae2cac8803b672613c7b646986ef" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; act as modifiers when used after any flags and field widths in a &amp;lsquo;</source>
          <target state="translated">'在'中的任何标志和字段宽度之后使用时，充当修饰符</target>
        </trans-unit>
        <trans-unit id="15c4f2d76a47bfd27b17bbed855750fddff39fb8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; after an expression, or on the last character of a variable. To simplify the display, a count is not shown if it is equal to the count of an earlier expression on the same line.</source>
          <target state="translated">在表达式之后或变量的最后一个字符上。为了简化显示，如果计数等于同一行上较早表达式的计数，则不显示该计数。</target>
        </trans-unit>
        <trans-unit id="e18aab417098460640546845fe4f0de89b0e1986" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; against the string &amp;lsquo;</source>
          <target state="translated">'反对字符串'</target>
        </trans-unit>
        <trans-unit id="577353a774e02e377313cbd5258fc758732bdfa8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; also has special meaning in the read syntax of Lisp strings (see &lt;a href=&quot;string-type#String-Type&quot;&gt;String Type&lt;/a&gt;), and must be quoted with &amp;lsquo;</source>
          <target state="translated">'在Lisp字符串的读取语法中也具有特殊含义（请参见&lt;a href=&quot;string-type#String-Type&quot;&gt;String Type&lt;/a&gt;），并且必须用'</target>
        </trans-unit>
        <trans-unit id="5744380a421a4193659eaa88125a285008f66d5e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; also matches upper-case letters.</source>
          <target state="translated">'也匹配大写字母。</target>
        </trans-unit>
        <trans-unit id="81f44daab7ad651ae48091994c30fd8577937762" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; also self-evaluates in the same way; likewise, its value ordinarily cannot be changed. See &lt;a href=&quot;constant-variables#Constant-Variables&quot;&gt;Constant Variables&lt;/a&gt;.</source>
          <target state="translated">也以同样的方式进行自我评估；同样，其值通常无法更改。请参阅&lt;a href=&quot;constant-variables#Constant-Variables&quot;&gt;常量变量&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fc31ced975aa379697fb0851a7d736c665e468a7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; alternative that wasn&amp;rsquo;t used or a repetition that repeated zero times.</source>
          <target state="translated">'未被使用的替代方案或重复次数重复零次的重复。</target>
        </trans-unit>
        <trans-unit id="c1a74ffb0dc4dc7e4c743a8920b27f5524948f77" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; alternatives for other operations. Thus, the regular expression &amp;lsquo;</source>
          <target state="translated">'其他操作的替代方案。因此，正则表达式&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="1b2cbbbf4e466dbeed4b392c50613382ceec151c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; always applies to the &lt;em&gt;smallest&lt;/em&gt; possible preceding expression. Thus, &amp;lsquo;</source>
          <target state="translated">'始终适用于&lt;em&gt;最小&lt;/em&gt;的前置表达式。因此，</target>
        </trans-unit>
        <trans-unit id="492195ee73c10e6ff600cddd309e3309bbf18930" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; always fails to match, and &amp;lsquo;</source>
          <target state="translated">'总是不匹配，并且'</target>
        </trans-unit>
        <trans-unit id="db984dac3ea4c40350c99f39817ec3464d6adf1d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and &amp;lsquo;</source>
          <target state="translated">'和'</target>
        </trans-unit>
        <trans-unit id="508503a9e2a05cfc1a6ff5daaaf46331d0447994" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and (after subtracting 6) the &amp;lsquo;</source>
          <target state="translated">和（减去6后）</target>
        </trans-unit>
        <trans-unit id="327a4fbd6d63f9a637e1b43664518f89a4c9ad3b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and any field number, you can put certain &lt;em&gt;flag characters&lt;/em&gt;.</source>
          <target state="translated">'和任何字段编号，您可以放置​​某些&lt;em&gt;标志字符&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="b9aab084e2297ff3e467ec0192310693b03e868c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and balancing &amp;lsquo;</source>
          <target state="translated">和平衡</target>
        </trans-unit>
        <trans-unit id="0da286f89f5103c076755e052918a78dd35af032" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and convert the result to an absolute name using &lt;code&gt;expand-file-name&lt;/code&gt; (see &lt;a href=&quot;file-name-expansion#File-Name-Expansion&quot;&gt;File Name Expansion&lt;/a&gt;). This function converts absolute file names to relative names:</source>
          <target state="translated">'，然后使用 &lt;code&gt;expand-file-name&lt;/code&gt; 将结果转换为绝对名称（请参见&lt;a href=&quot;file-name-expansion#File-Name-Expansion&quot;&gt;File Name Expansion&lt;/a&gt;）。此函数将绝对文件名转换为相对名：</target>
        </trans-unit>
        <trans-unit id="baa616ebd8df11244e914c0a299b17750d209788" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and ending with an alphabetic letter such as &amp;lsquo;</source>
          <target state="translated">'，并以字母开头，例如'</target>
        </trans-unit>
        <trans-unit id="79175cb0ff520e44fb8e6a542a984c3a0eceeee7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and ends with &amp;lsquo;</source>
          <target state="translated">'并以'结尾</target>
        </trans-unit>
        <trans-unit id="c2fcf8b620f3fdf5b52d2b37a68369b92fe7521f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and formfeeds are printed as &amp;lsquo;</source>
          <target state="translated">'，换页信息打印为'</target>
        </trans-unit>
        <trans-unit id="bd2fbaf99b92497ff77fe9085f15c33bfebe50c9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and if &lt;var&gt;user&lt;/var&gt; is a valid login name, it expands to &lt;var&gt;user&lt;/var&gt;&amp;rsquo;s home directory. If you do not want this expansion for a relative &lt;var&gt;filename&lt;/var&gt; that might begin with a literal &amp;lsquo;</source>
          <target state="translated">&amp;rdquo;，如果 &lt;var&gt;user&lt;/var&gt; 是有效的登录名，它将扩展到 &lt;var&gt;user&lt;/var&gt; 的主目录。如果您不希望这种扩展以相对的 &lt;var&gt;filename&lt;/var&gt; 开头，则该文件名可能以文字&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="ddbe212092a3850a6592ebfd9def86080b3cc6a6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and is terminated by &amp;lsquo;</source>
          <target state="translated">'，并以'结尾</target>
        </trans-unit>
        <trans-unit id="90485833f1091e44ff644a3bd643f887a7ed7491" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and no other string. (It does &lt;em&gt;not&lt;/em&gt; match the string &amp;lsquo;</source>
          <target state="translated">'，没有其他字符串。（它&lt;em&gt;不&lt;/em&gt;匹配字符串&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="3f1a1ce48abc8bd6dcd260b86ac4ee2fcb976110" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and nothing else. &amp;lsquo;</source>
          <target state="translated">'，仅此而已。'</target>
        </trans-unit>
        <trans-unit id="021529858e53a43870675359b472a92ddc6d8040" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and repetition constructs, but they continue this only until they find &lt;em&gt;some&lt;/em&gt; match. Then they succeed and report the first match found.</source>
          <target state="translated">&amp;ldquo;和重复结构，但他们继续这样只有等到他们发现&lt;em&gt;了一些&lt;/em&gt;比赛。然后他们成功并报告找到的第一个比赛。</target>
        </trans-unit>
        <trans-unit id="7af7761459cf1ff05cd2ae488989fd2c8f6d9bfc" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and return &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">并返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2d3237545fe9ec84fc3498a7ecd7047d9e3ce90e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and set &lt;var&gt;key-regexp&lt;/var&gt; to &amp;lsquo;</source>
          <target state="translated">并将 &lt;var&gt;key-regexp&lt;/var&gt; 设置为'</target>
        </trans-unit>
        <trans-unit id="99e18431d36f8701544ec32fc691661acde42b69" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and that it does not use a value. For example, &lt;code&gt;(format &quot;%% %d&quot; 30)&lt;/code&gt; returns &lt;code&gt;&quot;% 30&quot;&lt;/code&gt;.</source>
          <target state="translated">&amp;rdquo;，并且它不使用值。例如， &lt;code&gt;(format &quot;%% %d&quot; 30)&lt;/code&gt; 返回 &lt;code&gt;&quot;% 30&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fa11802d92e8c341644e83302e57832f8ff69486" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and the &amp;lsquo;</source>
          <target state="translated">和</target>
        </trans-unit>
        <trans-unit id="7fedb197efda3051edb4aab2a2779281afab7a08" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and the newline).</source>
          <target state="translated">'和换行符）。</target>
        </trans-unit>
        <trans-unit id="43e0fda5cf1f0baa6dd47d16a1cf435b967ee6c6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and the newline). The function skips all letters and spaces, but not newlines.</source>
          <target state="translated">'和换行符）。该函数将跳过所有字母和空格，但不跳过换行符。</target>
        </trans-unit>
        <trans-unit id="247f1aa738740a7dd22ec6d782476124ec59835a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and then &amp;lsquo;</source>
          <target state="translated">' 接着 '</target>
        </trans-unit>
        <trans-unit id="c0f9c9b1704fc28364e58d29c4d471c435cba2ff" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and there is no</source>
          <target state="translated">'而且没有</target>
        </trans-unit>
        <trans-unit id="b951d99e0dfb67a30a002cf5928920d3032ade5c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and there is only &amp;lsquo;</source>
          <target state="translated">'只有'</target>
        </trans-unit>
        <trans-unit id="ae4d9be3cce71811fc61c530e4bf942939a13c96" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and to &amp;lsquo;</source>
          <target state="translated">' 并 '</target>
        </trans-unit>
        <trans-unit id="4527582eca518ba12b5c935b4134aac1268ac714" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; and truncating to three characters after the &amp;lsquo;</source>
          <target state="translated">'，并在'后截断为三个字符</target>
        </trans-unit>
        <trans-unit id="89f26838e683b3b65b002ddddf5fd6ebcd8e2c7e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; appear in the echo area during loading unless &lt;var&gt;nomessage&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">除非 &lt;var&gt;nomessage&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ,否则在加载过程中将在回显区域中显示&amp;ldquo;&amp;rdquo; 。</target>
        </trans-unit>
        <trans-unit id="8c56dec29890ea600e9b5aa180c92ec30bb2bd73" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; appearing as a name component, call &lt;code&gt;file-truename&lt;/code&gt; without prior direct or indirect calls to &lt;code&gt;expand-file-name&lt;/code&gt;. Otherwise, the file name component immediately preceding &amp;lsquo;</source>
          <target state="translated">&amp;rdquo;作为名称组成部分，调用 &lt;code&gt;file-truename&lt;/code&gt; ,而无需事先直接或间接调用 &lt;code&gt;expand-file-name&lt;/code&gt; 。否则，紧接在&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="ebc0bde22a1ebb5515ba33e674f9363fd1fcbee2" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; appearing as name components. This results in a sort of canonical name for the file. A file does not always have a unique truename; the number of distinct truenames a file has is equal to the number of hard links to the file. However, truenames are useful because they eliminate symbolic links as a cause of name variation.</source>
          <target state="translated">'作为名称成分出现。这将为文件提供某种规范名称。文件并不总是具有唯一的真实名称。文件具有的不同真名的数量等于指向该文件的硬链接的数量。但是，真实名称很有用，因为它们消除了符号链接，从而导致名称变化。</target>
        </trans-unit>
        <trans-unit id="3e8ec1766e925a3b991fa020e1194ff01608836c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; appears at the beginning of the string, and if the command was invoked through &lt;em&gt;shift-translation&lt;/em&gt;, set the mark and activate the region temporarily, or extend an already active region, before the command is run. If the command was invoked without shift-translation, and the region is temporarily active, deactivate the region before the command is run. Shift-translation is controlled on the user level by &lt;code&gt;shift-select-mode&lt;/code&gt;; see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Shift-Selection.html#Shift-Selection&quot;&gt;Shift Selection&lt;/a&gt; in</source>
          <target state="translated">'出现在字符串的开头，如果在运行命令之前通过&lt;em&gt;shift-translation&lt;/em&gt;调用了该命令，请设置标记并临时激活该区域，或者扩展一个已经处于活动状态的区域。如果在不进行平移的情况下调用了该命令，并且该区域暂时处于活动状态，请在运行该命令之前停用该区域。Shift-translation是通过 &lt;code&gt;shift-select-mode&lt;/code&gt; 在用户级别上控制的；看到&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Shift-Selection.html#Shift-Selection&quot;&gt;换档选择&lt;/a&gt;在</target>
        </trans-unit>
        <trans-unit id="b65a8cf6478558a372a3d356f3fcfc07aa18da09" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; appears at the beginning of the string, and if the key sequence used to invoke the command includes any mouse events, then the window associated with the first of those events is selected before the command is run.</source>
          <target state="translated">'出现在字符串的开头，并且如果用于调用命令的键序列包含任何鼠标事件，则在运行命令之前，将选择与那些事件中的第一个相关的窗口。</target>
        </trans-unit>
        <trans-unit id="1ce319931b4caa56e5a4283b1cd7191423d41c4e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; appears at the beginning of the string, then an error is signaled if the buffer is read-only.</source>
          <target state="translated">'出现在字符串的开头，如果缓冲区是只读的，则会发出错误信号。</target>
        </trans-unit>
        <trans-unit id="8f50c6189461d2b2f5ede79f600d6b45dcb65e56" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; appears immediately after another &amp;lsquo;</source>
          <target state="translated">&amp;ldquo;立即出现&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="a593561295c25cec0686925c263d54b149086755" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; appears in &lt;var&gt;replacement&lt;/var&gt;, then it must be part of one of the following sequences:</source>
          <target state="translated">'出现在 &lt;var&gt;replacement&lt;/var&gt; ，则它必须是以下序列之一的一部分：</target>
        </trans-unit>
        <trans-unit id="1a6ae001aefa2d13ada5377db62c3de347f7a3db" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; appended. If such a file exists, it is loaded. If there is no file by that name, then &lt;code&gt;load&lt;/code&gt; looks for a file named</source>
          <target state="translated">&amp;rdquo;。如果存在这样的文件，则将其加载。如果没有该名称的文件，则 &lt;code&gt;load&lt;/code&gt; 将查找名为</target>
        </trans-unit>
        <trans-unit id="118ad287732c3ec7c4882a00216cdc28e2d8db4d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; applies to the largest possible surrounding expressions. Only a surrounding &amp;lsquo;</source>
          <target state="translated">'适用于尽可能大的周围表达式。只有周围的'</target>
        </trans-unit>
        <trans-unit id="f202db6fbdbbdb468fd12f93e1537d7259dba9f6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; are also considered risky.</source>
          <target state="translated">也被认为是有风险的。</target>
        </trans-unit>
        <trans-unit id="e2115cc6fa452250ecedb1acb5c1518b982ef761" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; are comments. You want to use Text mode abbrevs for those lines. The regular local abbrev table, &lt;code&gt;foo-mode-abbrev-table&lt;/code&gt; is appropriate for all other lines. See &lt;a href=&quot;standard-abbrev-tables#Standard-Abbrev-Tables&quot;&gt;Standard Abbrev Tables&lt;/a&gt;, for the definitions of &lt;code&gt;local-abbrev-table&lt;/code&gt; and &lt;code&gt;text-mode-abbrev-table&lt;/code&gt;. See &lt;a href=&quot;advising-functions#Advising-Functions&quot;&gt;Advising Functions&lt;/a&gt;, for details of &lt;code&gt;add-function&lt;/code&gt;.</source>
          <target state="translated">'是评论。您想对这些行使用文本模式缩写。常规本地缩写表 &lt;code&gt;foo-mode-abbrev-table&lt;/code&gt; 适用于所有其他行。有关 &lt;code&gt;local-abbrev-table&lt;/code&gt; 和 &lt;code&gt;text-mode-abbrev-table&lt;/code&gt; 的定义，请参见&lt;a href=&quot;standard-abbrev-tables#Standard-Abbrev-Tables&quot;&gt;标准Abbrev表&lt;/a&gt;。有关 &lt;code&gt;add-function&lt;/code&gt; 详细信息，请参见&lt;a href=&quot;advising-functions#Advising-Functions&quot;&gt;建议功能&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5c8fb015d740c91579b7ded517e78763c6d721a9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; are described by a single line.</source>
          <target state="translated">用单行描述。</target>
        </trans-unit>
        <trans-unit id="604ce82486dd944d232102dac03151482f50b413" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; are five ways of writing a floating-point number whose value is 1500. They are all equivalent.</source>
          <target state="translated">'是写入值为1500的浮点数的五种方法。它们都是等效的。</target>
        </trans-unit>
        <trans-unit id="8227e2fa50c66aded206d8f8cf46d294d39a9906" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; are five ways of writing a floating-point number whose value is 1500. They are all equivalent. Like Common Lisp, Emacs Lisp requires at least one digit after any decimal point in a floating-point number; &amp;lsquo;</source>
          <target state="translated">'是写入值为1500的浮点数的五种方法。它们都是等效的。与Common Lisp一样，Emacs Lisp要求浮点数中的小数点后至少一位。'</target>
        </trans-unit>
        <trans-unit id="8123359dddfa5c001f5a58773cb06a1c1eaa8390" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; are identical: they stand for the same object, the symbol &lt;code&gt;nil&lt;/code&gt;. The different ways of writing the symbol are intended entirely for human readers. After the Lisp reader has read either &amp;lsquo;</source>
          <target state="translated">'是相同的：它们代表相同的对象，符号 &lt;code&gt;nil&lt;/code&gt; 。书写符号的不同方式完全供人类读者使用。Lisp阅读器读取以下任一内容后：</target>
        </trans-unit>
        <trans-unit id="f54e5b2c44249d3d8785b7a822c24a0f536e589f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; are included, and &amp;lsquo;</source>
          <target state="translated">包括在内，并且</target>
        </trans-unit>
        <trans-unit id="6fd60d3ccea9c46fd6f16e5edda306eb18ee673c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; are less often used but also require no special punctuation. Any other characters may be included in a symbol&amp;rsquo;s name by escaping them with a backslash. In contrast to its use in strings, however, a backslash in the name of a symbol simply quotes the single character that follows the backslash. For example, in a string, &amp;lsquo;</source>
          <target state="translated">较少使用，但也不需要特殊的标点符号。通过用反斜杠转义，可以将其他任何字符包含在符号名称中。但是，与其在字符串中使用相反，符号名称中的反斜杠只是引用了反斜杠后面的单个字符。例如，在字符串中，&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="d4b853ee2c7f99c4e62509082a7dd1643fbbdeaa" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; are not affected by &lt;code&gt;search-spaces-regexp&lt;/code&gt;.</source>
          <target state="translated">'不受 &lt;code&gt;search-spaces-regexp&lt;/code&gt; 的影响。</target>
        </trans-unit>
        <trans-unit id="8bc32668d784ad2f2ae6fd14726948f56aabfb3f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; are not special there).</source>
          <target state="translated">'那里并不特殊）。</target>
        </trans-unit>
        <trans-unit id="69bc91c5318fbf77227c1ef2adeddbb6da909565" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; are not used without a check, typically at configuration time, and the Emacs build procedure provides a substitute implementation if necessary. Some C11 features, such as anonymous structures and unions, are too difficult to emulate, so they are avoided entirely.</source>
          <target state="translated">通常在配置时不检查就不会使用'，并且Emacs构建过程在必要时提供了替代实现。某些C11功能（例如匿名结构和联合）很难模拟，因此可以完全避免。</target>
        </trans-unit>
        <trans-unit id="3ac949cb5261b5173f6488d28e70930719ea262d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; are present, the &amp;lsquo;</source>
          <target state="translated">'存在，'</target>
        </trans-unit>
        <trans-unit id="1af52a5f700a05d4b905a61acaf355b40c2419f5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; are related by case-conversion, they should have the same canonical equivalent character (which should be either &amp;lsquo;</source>
          <target state="translated">'通过大小写转换相关，它们应具有相同的规范等效字符（应为'</target>
        </trans-unit>
        <trans-unit id="7d86d133258798e410e1e77697ab8bd7adf5b529" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; are simplified to their canonical form:</source>
          <target state="translated">'简化为规范形式：</target>
        </trans-unit>
        <trans-unit id="aca1f53c80c56da79bef0ccc4d2b59e57a45f1c3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; are supplied, try to upgrade to an encrypted connection via</source>
          <target state="translated">提供，请尝试通过升级到加密连接</target>
        </trans-unit>
        <trans-unit id="b77499b49fe35e7e37442358274ccb42cec2ca70" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; are treated as hexadecimal.</source>
          <target state="translated">'视为十六进制。</target>
        </trans-unit>
        <trans-unit id="93e2cdf6227923b44c1d22b7763dce83038e110f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; are used to describe comment delimiters. The digit flags are used for comment delimiters made up of 2 characters. They indicate that a character can &lt;em&gt;also&lt;/em&gt; be part of a comment sequence, in addition to the syntactic properties associated with its character class. The flags are independent of the class and each other for the sake of characters such as &amp;lsquo;</source>
          <target state="translated">'用于描述注释定界符。数字标志用于由2个字符组成的注释定界符。它们指示一个字符，除了与其字符类关联的句法属性外，&lt;em&gt;还&lt;/em&gt;可以是注释序列的一部分。这些标志与类无关，并且出于诸如'</target>
        </trans-unit>
        <trans-unit id="5257b174575eff29e85a5aacd2c432f8e3f7001c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; are used to qualify the corresponding comment delimiter.</source>
          <target state="translated">'用于限定相应的注释定界符。</target>
        </trans-unit>
        <trans-unit id="321dd44a8abe77dbfe2b3e98ca9aa0d3221453ec" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; are usually &lt;em&gt;abnormal hooks&lt;/em&gt; (some old code may also use the deprecated &amp;lsquo;</source>
          <target state="translated">'通常是&lt;em&gt;异常的钩子&lt;/em&gt;（某些旧代码也可能使用不推荐使用的'</target>
        </trans-unit>
        <trans-unit id="c383756bbc973cca9d09cfd350fc1b4ba148ee37" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; are valid read syntax for the character</source>
          <target state="translated">'是该字符的有效读取语法</target>
        </trans-unit>
        <trans-unit id="0aae17f19e8930715b75ae5218e2f6cc638e46b3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; argument prevents &lt;code&gt;temacs&lt;/code&gt; from trying to initialize any of its data on the terminal, so that the tables of terminal information are empty in the dumped Emacs.) This method is also known as &lt;em&gt;unexec&lt;/em&gt;, because it produces a program file from a running process, and thus is in some sense the opposite of executing a program to start a process. Although this method was the way that Emacs traditionally saved its state, it is now deprecated.</source>
          <target state="translated">'参数可防止 &lt;code&gt;temacs&lt;/code&gt; 尝试在终端上初始化其任何数据，从而使终端信息表在转储的Emacs中为空。）此方法也称为&lt;em&gt;unexec&lt;/em&gt;，因为它从正在运行的进程中生成程序文件，因此在某种意义上与执行程序以启动进程相反。尽管此方法是Emacs传统上保存状态的方法，但现在已弃用。</target>
        </trans-unit>
        <trans-unit id="27924b7f8f3659c402eb0d72e17c1a332adfc0a0" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; argument to get the up-event that was discarded (if any) after &amp;lsquo;</source>
          <target state="translated">'参数以获取在'之后被丢弃的事件（如果有）</target>
        </trans-unit>
        <trans-unit id="0c92ce7a76dcb5d065edf08b4093c02368db0781" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; as a designator character always stands for escape character syntax, regardless of whether the &amp;lsquo;</source>
          <target state="translated">&amp;ldquo;&amp;rdquo;作为指定字符始终代表转义字符语法，无论&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="b77e04ef4b66e5fd50844e90f33f697f49586411" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; as a line of text at the top of the buffer.</source>
          <target state="translated">'作为缓冲区顶部的一行文本。</target>
        </trans-unit>
        <trans-unit id="c9e70687ee5c8e3a1744e1cbce62c7f6661bce3c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; as a prompt. (It would be better to take the prompt from the events used to invoke &lt;code&gt;execute-extended-command&lt;/code&gt;, but that is painful to implement.) A description of the value of the prefix argument, if any, also becomes part of the prompt.</source>
          <target state="translated">提示。（最好从用于调用 &lt;code&gt;execute-extended-command&lt;/code&gt; 的事件中获取提示，但这很难实现。）对prefix参数值的描述（如果有的话）也将成为提示的一部分。</target>
        </trans-unit>
        <trans-unit id="1f228695dc603516a34530149b4e5121c738ff11" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; as a separate word.</source>
          <target state="translated">'作为一个单独的词。</target>
        </trans-unit>
        <trans-unit id="e6120cd8b2fbac7c542717f87c17c3bffd3dc683" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; as a separate word. &amp;lsquo;</source>
          <target state="translated">'作为一个单独的词。'</target>
        </trans-unit>
        <trans-unit id="d3a2591a458e355ad7fec90cff33b85c44761259" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; as directory separators.</source>
          <target state="translated">'作为目录分隔符。</target>
        </trans-unit>
        <trans-unit id="71198f20e0c8c1dc076c446098f0c5767070c5ea" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; as keywords.</source>
          <target state="translated">'作为关键字。</target>
        </trans-unit>
        <trans-unit id="482e5fb76e9043d0c0eb0660b0477ed7a6947f37" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; as ordinary since there is no preceding expression on which the &amp;lsquo;</source>
          <target state="translated">'，因为没有前面的表达式，</target>
        </trans-unit>
        <trans-unit id="343d43642dcf2e6ab419a2a1c0b2e0ea3ffe3eb0" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; as the class.</source>
          <target state="translated">作为班级。</target>
        </trans-unit>
        <trans-unit id="2f57b66c871499626d93936a95531675f4dcf975" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; as the coding system with which to visit or save a file. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Text-Coding.html#Text-Coding&quot;&gt;Specifying a Coding System for File Text&lt;/a&gt; in</source>
          <target state="translated">'作为用于访问或保存文件的编码系统。请参见《&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Text-Coding.html#Text-Coding&quot;&gt;为文件文本指定编码系统》&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c6cfdf2d8ed3977b4c868f2f791e857b0b6e8347" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; as the current buffer. We assume that buffer &amp;lsquo;</source>
          <target state="translated">'作为当前缓冲区。我们假设缓冲区'</target>
        </trans-unit>
        <trans-unit id="6c0a00b3d88593f9b381a92f96ebce2e8fafb03b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; as the first character in the symbol name will be bound. Finding the keys is done with &lt;code&gt;assq&lt;/code&gt;, and the &lt;code&gt;cdr&lt;/code&gt; of the return value of this &lt;code&gt;assq&lt;/code&gt; is assigned as the value for the binding.</source>
          <target state="translated">'作为符号名称中的第一个字符将被绑定。查找关键字是使用 &lt;code&gt;assq&lt;/code&gt; 完成的，并将此 &lt;code&gt;assq&lt;/code&gt; 返回值的 &lt;code&gt;cdr&lt;/code&gt; 分配为绑定的值。</target>
        </trans-unit>
        <trans-unit id="99d29cbd60f85684a1962658b99cbda3ff670b02" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; as the top line in the buffer.</source>
          <target state="translated">'作为缓冲区的第一行。</target>
        </trans-unit>
        <trans-unit id="59e883f998af40fe432b0b4f3d4bb76892bb0b41" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; assumes none of the environment variables have &amp;lsquo;</source>
          <target state="translated">'假设所有环境变量都没有'</target>
        </trans-unit>
        <trans-unit id="6712fe290fb96f31da4fd0ec2fbb6cbf65b166e0" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; at the beginning of an item string is omitted when the menu label is displayed, and has no other effect.</source>
          <target state="translated">显示菜单标签时，将省略项目字符串开头的'，并且没有其他效果。</target>
        </trans-unit>
        <trans-unit id="353a606510a25c4189f802b036bb8fda207fc65b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; at the beginning of the name to force interpretation as a symbol.) The characters &amp;lsquo;</source>
          <target state="translated">名称开头的'强制将其解释为符号。）字符'</target>
        </trans-unit>
        <trans-unit id="e3b2fe16e7144766bb792a8cf8ac0eb4dc5fca99" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; at the beginning of this sentence or the first &amp;lsquo;</source>
          <target state="translated">在此句子的开头或第一句</target>
        </trans-unit>
        <trans-unit id="7a458b3a56d4dcac32516e5c242dcb242d303290" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; at the beginning.&lt;a href=&quot;#FOOT1&quot; name=&quot;DOCF1&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;</source>
          <target state="translated">一开始。&lt;a href=&quot;#FOOT1&quot; name=&quot;DOCF1&quot;&gt;&lt;sup&gt;1个&lt;/sup&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8c1cdbaa61f053e162f772264854db40e29721f3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; at the end indicates that the immediately preceding regular expression (a character alternative, in this case) may be repeated zero or more times.</source>
          <target state="translated">末尾的'表示前一个正则表达式（在这种情况下为字符替换）可以重复零次或更多次。</target>
        </trans-unit>
        <trans-unit id="780e1d53f801411d133606df2fd44863e2d71323" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; at the end of a line that is followed by hidden text. This example is a continuation of the previous one.</source>
          <target state="translated">'，然后是隐藏文字。这个例子是前一个例子的延续。</target>
        </trans-unit>
        <trans-unit id="0073273586ba687ce65b600b551e2e1f332744fc" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; at the proper place, and type</source>
          <target state="translated">在适当的位置，然后键入</target>
        </trans-unit>
        <trans-unit id="48098c5c7a51a970226595b17cba205eec0f996b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; before an expression or the &amp;lsquo;</source>
          <target state="translated">&amp;rdquo;之前的表达式或&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="f8cb1492f53723c854828b1c829c4fa8d0bb950b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; before making a plain connection, then this parameter could be something like &amp;lsquo;</source>
          <target state="translated">'在进行普通连接之前，此参数可能类似于'</target>
        </trans-unit>
        <trans-unit id="737b81b601c125186fac023ceb8348fa67c55c6c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; before nonnegative year numbers with more than four digits, &amp;lsquo;</source>
          <target state="translated">&amp;ldquo;在大于四位数的非负年份数字之前，&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="c8d3aaa26e8b8eafff86d4458dd0e1c515ab8601" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; before the opening &amp;lsquo;</source>
          <target state="translated">'开幕前'</target>
        </trans-unit>
        <trans-unit id="b6ade00eb0d6f65cccb39ce2d6bc2fbddbad69dc" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; begins a &lt;em&gt;complemented character alternative&lt;/em&gt;. This matches any character except the ones specified. Thus, &amp;lsquo;</source>
          <target state="translated">'开始&lt;em&gt;补充角色选择&lt;/em&gt;。匹配指定字符以外的任何字符。因此，</target>
        </trans-unit>
        <trans-unit id="5f6d78a45e40f35f67dc486da793536076533846" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; begins a comment, but in C mode, it terminates a statement. To support these variations, the syntax table is local to each buffer. Typically, each major mode has its own syntax table, which it installs in all buffers that use that mode. For example, the variable &lt;code&gt;emacs-lisp-mode-syntax-table&lt;/code&gt; holds the syntax table used by Emacs Lisp mode, and &lt;code&gt;c-mode-syntax-table&lt;/code&gt; holds the syntax table used by C mode. Changing a major mode&amp;rsquo;s syntax table alters the syntax in all of that mode&amp;rsquo;s buffers, as well as in any buffers subsequently put in that mode. Occasionally, several similar modes share one syntax table. See &lt;a href=&quot;example-major-modes#Example-Major-Modes&quot;&gt;Example Major Modes&lt;/a&gt;, for an example of how to set up a syntax table.</source>
          <target state="translated">'开始注释，但是在C模式下，它终止一条语句。为了支持这些变体，语法表对于每个缓冲区都是本地的。通常，每个主要模式都有其自己的语法表，它将安装在使用该模式的所有缓冲区中。例如，变量 &lt;code&gt;emacs-lisp-mode-syntax-table&lt;/code&gt; 保存Emacs Lisp模式使用的语法表，而 &lt;code&gt;c-mode-syntax-table&lt;/code&gt; 保存C模式使用的语法表。更改主要模式的语法表会更改该模式的所有缓冲区以及随后放入该模式的所有缓冲区的语法。有时，几种类似的模式共享一个语法表。有关如何设置语法表的示例，请参见&lt;a href=&quot;example-major-modes#Example-Major-Modes&quot;&gt;示例主要模式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b61cdb240ed3c5cfc81e4da1e936257039b9db2e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; belongs to this class in both C and Lisp. (In C, it is used thus only inside strings, but it turns out to cause no trouble to treat it this way throughout C code.)</source>
          <target state="translated">在C和Lisp中都属于此类。（因此，在C语言中，仅在字符串内部使用它，但事实证明，在整个C代码中以这种方式处理它不会造成任何麻烦。）</target>
        </trans-unit>
        <trans-unit id="2cb37013e936ae00401d8a005e184151a40fb56d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; between them. Thus, &amp;lsquo;</source>
          <target state="translated">' 它们之间。因此，</target>
        </trans-unit>
        <trans-unit id="972edce46d63dafc165883e8b37f3bf2676a3b79" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; buffer.</source>
          <target state="translated">' 缓冲。</target>
        </trans-unit>
        <trans-unit id="5d1887a3953c81c38d3a397b9d4b433d4f6ffebc" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; but is slightly greater than 1/10.</source>
          <target state="translated">'，但略大于1/10。</target>
        </trans-unit>
        <trans-unit id="4afc4a6f88775dfaccd67a8428a1256c20778acc" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; but matches only at the end of a line (or the end of the accessible portion of the buffer). Thus, &amp;lsquo;</source>
          <target state="translated">'，但仅在行尾（或缓冲区的可访问部分的末尾）匹配。因此，</target>
        </trans-unit>
        <trans-unit id="c814a4c2425281503dfa29b94a443bba238f5a74" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; but no other string.</source>
          <target state="translated">'，但没有其他字符串。</target>
        </trans-unit>
        <trans-unit id="c1511ed758c2eab8b05923945a7ed1e3922b8559" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; but no user named &amp;lsquo;</source>
          <target state="translated">'，但没有用户名为'</target>
        </trans-unit>
        <trans-unit id="010d722d4e4566fc05d8582626d2d0e11b8e91b5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; but not the string &amp;lsquo;</source>
          <target state="translated">'但不是字符串'</target>
        </trans-unit>
        <trans-unit id="60db1f54efc74f259de4d769d48e0d019f180dcb" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; buttons for adding more elements or removing elements.</source>
          <target state="translated">'按钮，用于添加更多元素或删除元素。</target>
        </trans-unit>
        <trans-unit id="fca2a1b46f232f9b263b618d7a16d86a37e50a0c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; buttons is cleared.</source>
          <target state="translated">'按钮被清除。</target>
        </trans-unit>
        <trans-unit id="d048c0f4f80c1d2d5eaa292a2276f3b2d23b084e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; buttons. Most commands that use the</source>
          <target state="translated">' 纽扣。大多数使用</target>
        </trans-unit>
        <trans-unit id="d76ee2e57deb5720c6464869da82b3bea0294404" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; by itself at the end of a character alternative. For example, although &amp;lsquo;</source>
          <target state="translated">'本身位于替代字符的末尾。例如，尽管&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="f9988145bb5f1e29df0129c5e08106e390392663" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; can act. It is poor practice to depend on this behavior; quote the special character anyway, regardless of where it appears.</source>
          <target state="translated">可以行动。依靠这种行为是不明智的做法。无论出现在何处，都应引用特殊字符。</target>
        </trans-unit>
        <trans-unit id="d4939f22243b4fb108fb32a219337f3eed051521" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; can appear at the beginning of a character alternative or as the upper bound of a range, it is better style to put &amp;lsquo;</source>
          <target state="translated">'可以出现在替代字符的开头，也可以出现在范围的上限，最好使用'</target>
        </trans-unit>
        <trans-unit id="d91691910c0c30a32a4c97de099f465dd248f0cc" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; can be completed.</source>
          <target state="translated">'可以完成。</target>
        </trans-unit>
        <trans-unit id="d7c1e2b7f4841b767a31da4e4ec3c7e6f3721d13" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; can be continued onto the next line by escaping the newline with &amp;lsquo;</source>
          <target state="translated">可以通过使用'换行符转义继续到下一行</target>
        </trans-unit>
        <trans-unit id="ef746faddb8f48a09d0cd9875993ed45ed085a9f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; can be mixed with numbered specifications.</source>
          <target state="translated">可以与编号规格混合使用。</target>
        </trans-unit>
        <trans-unit id="dc59af0338238089f989c756a132b0538980195a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; can be omitted). The compiler takes for granted that that file really defines the function, and does not check.</source>
          <target state="translated">'可以省略）。编译器理所当然地认为该文件确实定义了该函数，并且不进行检查。</target>
        </trans-unit>
        <trans-unit id="89b580c6344418bebc098740011755267715a04f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; can be preceded by one, two, or three colons; if plain &amp;lsquo;</source>
          <target state="translated">可以在前面加上一个，两个或三个冒号；如果简单</target>
        </trans-unit>
        <trans-unit id="eadcaf72286f019a9fcf57aadfb2f5255a12188b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; can be specified as below:</source>
          <target state="translated">可以指定如下：</target>
        </trans-unit>
        <trans-unit id="4bc91ac4dbf2b590de83064bdf5c79f4494f314e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; can be used only at the beginning of the regular expression, or after &amp;lsquo;</source>
          <target state="translated">'只能在正则表达式的开头或'之后使用</target>
        </trans-unit>
        <trans-unit id="72ba700a6cf4dad4ec38460b710154d3ca6e18f5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; can be used only at the end of the regular expression, or before &amp;lsquo;</source>
          <target state="translated">'只能在正则表达式的末尾或'</target>
        </trans-unit>
        <trans-unit id="ad5af02beeebc6a4653d0da6dab1c4b8df4ed06d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; can match the null string in infinitely many ways, so it causes an infinite loop. To avoid these problems, check nested repetitions carefully, to make sure that they do not cause combinatorial explosions in backtracking.</source>
          <target state="translated">'可以以多种方式匹配空字符串，因此会导致无限循环。为避免这些问题，请仔细检查嵌套的重复项，以确保它们不会在回溯中引起组合爆炸。</target>
        </trans-unit>
        <trans-unit id="455b913b743153f5e8c30c8d141c496e9cfc1685" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; can mishandle NaNs and can lose precision and type, and &amp;lsquo;</source>
          <target state="translated">'可能会误处理NaN，并可能丢失精度和类型，并且'</target>
        </trans-unit>
        <trans-unit id="8a590f2b9d7745d2f9521604847d0781d0bbf420" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; can mishandle negative integers. See &lt;a href=&quot;input-functions#Input-Functions&quot;&gt;Input Functions&lt;/a&gt;.</source>
          <target state="translated">'会误处理负整数。请参阅&lt;a href=&quot;input-functions#Input-Functions&quot;&gt;输入函数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dafb38d98964d8f67b5057847b1c243511764692" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; cannot match &amp;lsquo;</source>
          <target state="translated">&amp;ldquo;无法匹配&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="24b3b7306c0cd587a7c17f71e1f8ca7616db5156" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; causes Emacs to run noninteractively. In this mode, Emacs does not read commands from the terminal, it does not alter the terminal modes, and it does not expect to be outputting to an erasable screen. The idea is that you specify Lisp programs to run; when they are finished, Emacs should exit. The way to specify the programs to run is with &amp;lsquo;</source>
          <target state="translated">'导致Emacs非交互式运行。在这种模式下，Emacs不会从终端读取命令，它不会更改终端模式，并且不会期望输出到可擦除屏幕。这个想法是您指定要运行的Lisp程序。完成后，Emacs应该退出。指定要运行的程序的方式是使用&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="76b611104dc9e6a6b8de4a319204b9d340b562be" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; causes any padding inserted by the width, if specified, to be inserted on the right rather than the left. If both &amp;lsquo;</source>
          <target state="translated">'导致按宽度插入的任何填充（如果指定）将插入右侧而不是左侧。如果两者都</target>
        </trans-unit>
        <trans-unit id="207c9f1b3f981c23ba6e4ca996ef94f40ced1f45" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; character actually has that syntax in the current syntax table. See &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;Syntax Class Table&lt;/a&gt;, for a list of syntax classes and their designator characters.</source>
          <target state="translated">'字符实际上在当前语法表中具有该语法。有关&lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;语法类&lt;/a&gt;及其指示符的列表，请参见语法类表。</target>
        </trans-unit>
        <trans-unit id="5d7d35e4b75771eb910f211279940f259093b193" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; character in its &lt;code&gt;interactive&lt;/code&gt; spec is invoked, before the command itself is executed (see &lt;a href=&quot;interactive-codes#Interactive-Codes&quot;&gt;^&lt;/a&gt;).</source>
          <target state="translated">在执行命令本身之前，将调用其 &lt;code&gt;interactive&lt;/code&gt; 规范中的'字符（请参阅&lt;a href=&quot;interactive-codes#Interactive-Codes&quot;&gt;^&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="8d2ab82eb70d18c112a661590b728d62d6f980a7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; character is &amp;lsquo;</source>
          <target state="translated">&amp;ldquo;字符是&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="4cbfa92faa4afd47786f51bdf876bf4b3ffe1326" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; character matches any single character. Case is ignored when matching font names.</source>
          <target state="translated">字符匹配任何单个字符。匹配字体名称时忽略大小写。</target>
        </trans-unit>
        <trans-unit id="eab23ce77ddb610a093d1b53633e4af4ca504166" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; character matches any substring, and the &amp;lsquo;</source>
          <target state="translated">'字符匹配任何子字符串，而'</target>
        </trans-unit>
        <trans-unit id="b95555c0a4b80b53f4d749ed29753037a6b53629" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; character used in the printed representations of objects with no read representation, has nothing to do with hash tables. See &lt;a href=&quot;printed-representation#Printed-Representation&quot;&gt;Printed Representation&lt;/a&gt;.)</source>
          <target state="translated">在没有读取表示形式的对象的打印表示形式中使用的'字符与哈希表无关。请参阅&lt;a href=&quot;printed-representation#Printed-Representation&quot;&gt;印刷表示&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="6427feb738743c5d2257b422949e6f0dfe5c01ad" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; character with a dash &amp;lsquo;</source>
          <target state="translated">&amp;ldquo;带破折号的字符&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="cc32b0657736c97a1a39ad818518e451327ca725" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; character. If some of the modifiers cannot be reflected in the character code, &lt;code&gt;read-char&lt;/code&gt; leaves the unresolved modifier bits set in the returned event. For example, if the user types</source>
          <target state="translated">字符。如果某些修饰符无法反映在字符代码中，则 &lt;code&gt;read-char&lt;/code&gt; 会将未解析的修饰符位保留在返回的事件中。例如，如果用户键入</target>
        </trans-unit>
        <trans-unit id="5f8c49c96c5b6c9e7ff31ba5210f25cc0e4247a2" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; character. The function includes in the prompt the possible responses in &lt;var&gt;answers&lt;/var&gt; by appending them to the end of &lt;var&gt;question&lt;/var&gt;. The possible responses are provided in &lt;var&gt;answers&lt;/var&gt; as an alist whose elements are of the following form:</source>
          <target state="translated">字符。该功能在提示包括在可能的回答 &lt;var&gt;answers&lt;/var&gt; 被他们追加到结束 &lt;var&gt;question&lt;/var&gt; 。可能的 &lt;var&gt;answers&lt;/var&gt; 以清单的形式提供在答案中，其元素具有以下形式：</target>
        </trans-unit>
        <trans-unit id="bfdc527d56ed43c7ac622de888f18baa6f25871b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; characters (see &lt;a href=&quot;comments#Comments&quot;&gt;Comments&lt;/a&gt;).</source>
          <target state="translated">'个字符（请参阅&lt;a href=&quot;comments#Comments&quot;&gt;注释&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="837caec4da69ae65c61891a264b40fdd7f4f7387" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; characters (see &lt;a href=&quot;comments#Comments&quot;&gt;Comments&lt;/a&gt;). This is used in byte-compiled files, and is not meant to be used in Emacs Lisp source files.</source>
          <target state="translated">'个字符（请参阅&lt;a href=&quot;comments#Comments&quot;&gt;注释&lt;/a&gt;）。它在字节编译文件中使用，而不是在Emacs Lisp源文件中使用。</target>
        </trans-unit>
        <trans-unit id="40a0cb8e1b406ec642b8e7a63eb41b2bb9acb3c4" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; characters appear where necessary before special characters.</source>
          <target state="translated">'字符会在需要的特殊字符之前出现。</target>
        </trans-unit>
        <trans-unit id="f12b4e42180838700555599784714962b0dbdf2e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; characters as format specifications, you should &lt;em&gt;never&lt;/em&gt; pass an arbitrary string as the first argument. This is particularly true when the string is generated by some Lisp code. Unless the string is &lt;em&gt;known&lt;/em&gt; to never include any &amp;lsquo;</source>
          <target state="translated">'字符作为格式规范，则&lt;em&gt;永远不要&lt;/em&gt;传递任意字符串作为第一个参数。当字符串由某些Lisp代码生成时，尤其如此。除非&lt;em&gt;已知&lt;/em&gt;该字符串从不包含任何'</target>
        </trans-unit>
        <trans-unit id="527f296119faf3a6b276660de1062ac41ae355c4" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; characters as having punctuation syntax (see &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;Syntax Class Table&lt;/a&gt;), and binds</source>
          <target state="translated">'个具有标点符号语法的字符（请参见&lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;语法类表&lt;/a&gt;），并绑定</target>
        </trans-unit>
        <trans-unit id="678d283e76dd55b4dcd84ec12555c174517f1ed7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; characters instead of spaces.</source>
          <target state="translated">'个字符而不是空格。</target>
        </trans-unit>
        <trans-unit id="5363fd93483cac5baf805bf1b0a735aa4a85da46" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; characters instead of spaces. This flag is ignored for non-numerical specification characters like &amp;lsquo;</source>
          <target state="translated">'个字符而不是空格。对于非数字规范字符（例如&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="3d0a8d23f16cf0032596eb27847468987afba806" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; characters or &amp;lsquo;</source>
          <target state="translated">'字符或'</target>
        </trans-unit>
        <trans-unit id="b3594111ba0ecafb65048987063d85f660226b2b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; characters that enclose the class name are part of the name, so a regular expression using these classes needs one more pair of brackets. For example, a regular expression matching a sequence of one or more letters and digits would be &amp;lsquo;</source>
          <target state="translated">包含类名称的'字符是名称的一部分，因此使用这些类的正则表达式需要再加上一对括号。例如，与一个或多个字母和数字序列匹配的正则表达式为'</target>
        </trans-unit>
        <trans-unit id="89c233272a8554bd40f4eaed30a08449832250ed" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; characters to prevent subsequent incorrect results.</source>
          <target state="translated">'字符，以防止随后出现不正确的结果。</target>
        </trans-unit>
        <trans-unit id="c8435efd5724e3e1e478a29b41315286c61ca4d0" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; characters, and &amp;lsquo;</source>
          <target state="translated">'字符和'</target>
        </trans-unit>
        <trans-unit id="192c42d97615bb98ad0e034a255a8a3d003d2e48" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; characters, and symbols appear without &amp;lsquo;</source>
          <target state="translated">'字符和符号不带'</target>
        </trans-unit>
        <trans-unit id="f5160feb1befbb5792410becb607fc37171d9f89" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; characters, pass &lt;code&gt;&quot;%s&quot;&lt;/code&gt;, described below, as the first argument, and the string as the second, like this:</source>
          <target state="translated">'个字符，将如下所述的 &lt;code&gt;&quot;%s&quot;&lt;/code&gt; 作为第一个参数传递，将字符串作为第二个参数传递，如下所示：</target>
        </trans-unit>
        <trans-unit id="8b77cee5b6563a4de6ac77cb077be15ddbbf2a2f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; characters.</source>
          <target state="translated">'个字符。</target>
        </trans-unit>
        <trans-unit id="6e99b143b986c613902ac390529d3cb29755b49b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; characters. For unassigned codepoints, the value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">'个字符。对于未分配的代码点，该值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b40c78d379d0db9711301cce01ce3f243b30c572" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; code character.</source>
          <target state="translated">'代码字符。</target>
        </trans-unit>
        <trans-unit id="c308006ab1d703e2247a3d0f277a432605ac1076" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; command-line options were specified.</source>
          <target state="translated">'指定了命令行选项。</target>
        </trans-unit>
        <trans-unit id="2a165fa4001872456de7d47871c6e5514134638c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; commands sent through the connection. The value of &lt;code&gt;nil&lt;/code&gt; for &lt;var&gt;speed&lt;/var&gt; is valid only for connections that were already opened by a previous call to &lt;code&gt;make-serial-process&lt;/code&gt; or &lt;code&gt;serial-term&lt;/code&gt;.</source>
          <target state="translated">通过连接发送的命令。值 &lt;code&gt;nil&lt;/code&gt; 的 &lt;var&gt;speed&lt;/var&gt; 只为那些已经由以前的调用打开的连接是有效的 &lt;code&gt;make-serial-process&lt;/code&gt; 或 &lt;code&gt;serial-term&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9233cb0afed24a43fd899b6e0b1b057332405b8b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; component can remain in the output:</source>
          <target state="translated">'组件可以保留在输出中：</target>
        </trans-unit>
        <trans-unit id="9a04d2d2adbf5c45326202275c2c5de900e7f03d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; concluded.</source>
          <target state="translated">' 结论。</target>
        </trans-unit>
        <trans-unit id="72f930f55bbfcba394f4e628c19456940ece7497" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; connection.</source>
          <target state="translated">连接。</target>
        </trans-unit>
        <trans-unit id="82873e05db414d218046b8f3fabdfd5ec660bf4e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; consists of the complemented character alternative &amp;lsquo;</source>
          <target state="translated">'包含替代字符'</target>
        </trans-unit>
        <trans-unit id="ad9154a17e0aac5b0527d1980e86b585508ffac8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; construct because, in practice, there was usually no conflict between the two meanings. But occasionally there is a conflict, and that led to the introduction of shy groups.</source>
          <target state="translated">之所以构造它，是因为在实践中，这两种含义之间通常没有冲突。但是偶尔会有冲突，这导致了害羞团体的引入。</target>
        </trans-unit>
        <trans-unit id="f1a985d4f574bce864bf4368958c345fc3542699" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; construct by matching, immediately, as many repetitions as can be found. Then it continues with the rest of the pattern. If that fails, backtracking occurs, discarding some of the matches of the &amp;lsquo;</source>
          <target state="translated">通过立即匹配尽可能多的重复序列来构建。然后，继续进行其余的模式。如果失败，则会发生回溯，并丢弃&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="77b90b1c32d51efe9034181e56be40c7d764287b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; construct matches more than once (which can happen, for instance, if it is followed by &amp;lsquo;</source>
          <target state="translated">'结构会多次匹配（例如，如果后面跟'</target>
        </trans-unit>
        <trans-unit id="1130d990613770867e04d17ced8ba136908af9d7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; construct never matches anything. To use an artificial example, &amp;lsquo;</source>
          <target state="translated">结构永远不会匹配任何东西。举一个人工的例子，&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="a65899090d45e166a19990779e47f027497cad1e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; construct substitutes the value of &lt;code&gt;global-mode-string&lt;/code&gt;, but that is obsolete, since the variable is included in the mode line from &lt;code&gt;mode-line-format&lt;/code&gt;.</source>
          <target state="translated">'结构替换了 &lt;code&gt;global-mode-string&lt;/code&gt; 的值，但这已经过时了，因为变量已包含在 &lt;code&gt;mode-line-format&lt;/code&gt; 的模式行中。</target>
        </trans-unit>
        <trans-unit id="d97b7cd37c9edcb2fdc6ef4a28b8f6b3f404085c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; construct, which skips the next &lt;var&gt;count&lt;/var&gt; characters, is useful for program-generated comments containing binary data. The Emacs Lisp byte compiler uses this in its output files (see &lt;a href=&quot;byte-compilation#Byte-Compilation&quot;&gt;Byte Compilation&lt;/a&gt;). It isn&amp;rsquo;t meant for source files, however.</source>
          <target state="translated">'构造，它跳过下一个 &lt;var&gt;count&lt;/var&gt; 字符，对于包含二进制数据的程序生成的注释很有用。Emacs Lisp字节编译器在其输出文件中使用它（请参阅&lt;a href=&quot;byte-compilation#Byte-Compilation&quot;&gt;Byte Compilation&lt;/a&gt;）。但是，它并不适用于源文件。</target>
        </trans-unit>
        <trans-unit id="b6dd7466daba9cbfc241101eb12abc4b21df91fe" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; construct, which stands for the name of this file, as a string. Do not use these constructs in Lisp source files; they are not designed to be clear to humans reading the file.</source>
          <target state="translated">'结构，代表此文件的名称，为字符串。不要在Lisp源文件中使用这些构造。它们的设计目的不是让人们阅读文件时很清楚。</target>
        </trans-unit>
        <trans-unit id="aff70e1236c7ada1af36786575e284eaf597b37e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; construct: treat the second line as the start of a &lt;em&gt;body&lt;/em&gt;.</source>
          <target state="translated">'结构：将第二行视为&lt;em&gt;主体&lt;/em&gt;的起点。</target>
        </trans-unit>
        <trans-unit id="9bc24c1488111b71a66865851fdd440f53f7c76e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; constructs are ignored. See &lt;a href=&quot;mode-line-data#Mode-Line-Data&quot;&gt;Mode Line Data&lt;/a&gt;.</source>
          <target state="translated">的构造将被忽略。请参见&lt;a href=&quot;mode-line-data#Mode-Line-Data&quot;&gt;模式行数据&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a7751ea682d8bcb703696dda872236e4589659a3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; constructs.</source>
          <target state="translated">' 结构体。</target>
        </trans-unit>
        <trans-unit id="9641d30bfb8ed5dfe23b1da562e24e1092613789" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; control whether and where to find the init file; &amp;lsquo;</source>
          <target state="translated">'控制是否以及在哪里找到初始化文件；'</target>
        </trans-unit>
        <trans-unit id="b333f4a31359342f6a1dac4bb5c7235a9d2113e9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; could take hours before it ultimately fails. Emacs must try each way of grouping the &amp;lsquo;</source>
          <target state="translated">可能要花几个小时才能最终失败。Emacs必须尝试将&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="f4a28ad8c59d2e0e562deb102a7172f79a609879" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; delimiters that begin and end the comment are not part of the documentation string.</source>
          <target state="translated">注释开头和结尾的定界符不是文档字符串的一部分。</target>
        </trans-unit>
        <trans-unit id="ea07e7509a6000c25d8f6e4fae8f6b2803df6863" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; documentation construct in &lt;var&gt;string&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;string&lt;/var&gt; 的文档结构。</target>
        </trans-unit>
        <trans-unit id="9db7d23aae3572437b132d34cab720a8a185a1b6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; does match &amp;lsquo;</source>
          <target state="translated">'确实匹配'</target>
        </trans-unit>
        <trans-unit id="fdab41e7787c350c9d0dc86425878107b2d3cdcd" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; does not match the word &amp;lsquo;</source>
          <target state="translated">'与单词不匹配'</target>
        </trans-unit>
        <trans-unit id="997e5bfd11bbfc477d39ab873e3fa3ba7d25ca7d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; does not terminate it, and &amp;lsquo;</source>
          <target state="translated">'不终止它，并且'</target>
        </trans-unit>
        <trans-unit id="93a5f5eb3bd4107973a92c79a57cdd775276cb72" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; does not understand (e.g., &lt;code&gt;defstruct&lt;/code&gt; and some other macros). In such cases, you can pass a non-&lt;code&gt;nil&lt;/code&gt;&lt;var&gt;fileonly&lt;/var&gt; argument to &lt;code&gt;declare-function&lt;/code&gt;, meaning to only check that the file exists, not that it actually defines the function. Note that to do this without having to specify an argument list, you should set the &lt;var&gt;arglist&lt;/var&gt; argument to &lt;code&gt;t&lt;/code&gt; (because &lt;code&gt;nil&lt;/code&gt; means an empty argument list, as opposed to an unspecified one).</source>
          <target state="translated">'无法理解（例如 &lt;code&gt;defstruct&lt;/code&gt; 和其他宏）。在这种情况下，你可以通过一个非 &lt;code&gt;nil&lt;/code&gt; &lt;var&gt;fileonly&lt;/var&gt; 参数 &lt;code&gt;declare-function&lt;/code&gt; ，这意味着只检查文件是否存在，而不是它实际上定义的功能。请注意，要执行此操作而不必指定参数列表，应将 &lt;var&gt;arglist&lt;/var&gt; 参数设置为 &lt;code&gt;t&lt;/code&gt; （因为 &lt;code&gt;nil&lt;/code&gt; 表示空的参数列表，而不是未指定的参数列表）。</target>
        </trans-unit>
        <trans-unit id="1b9bc7e59c2e45dbc08353a2483132fd02e19d3f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; does, then evaluates the form so that its value becomes the argument for the command. Prompt.</source>
          <target state="translated">'，然后求值该窗体，使其值成为命令的参数。提示。</target>
        </trans-unit>
        <trans-unit id="909cae0d38b302e8668f6698aefe2a9dcc1c7b5a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; doesn&amp;rsquo;t count as the beginning of an extension. Thus,</source>
          <target state="translated">'不算作扩展名的开始。从而，</target>
        </trans-unit>
        <trans-unit id="0db4416a8673938e603ab36217df8a0d2209df2f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; doesn&amp;rsquo;t disable format conversion, uncompression, or auto mode selection.</source>
          <target state="translated">'不会禁用格式转换，解压缩或自动模式选择。</target>
        </trans-unit>
        <trans-unit id="12b2ba3c75fa9584ca4f234db436788267dc9f92" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; element if it specifies the same major mode as the buffer already has.</source>
          <target state="translated">'元素，如果它指定与缓冲区已经具有的相同的主模式。</target>
        </trans-unit>
        <trans-unit id="b054b9af9236f71de3bcab289f661de15c94bf91" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; enclose a character class inside a character alternative. Any other character appearing in a regular expression is ordinary, unless a &amp;lsquo;</source>
          <target state="translated">'将字符类包含在字符替代中。正则表达式中出现的其他任何字符都是普通字符，除非'</target>
        </trans-unit>
        <trans-unit id="c2e78890a6d1dbc2f1a90b1473ea8c9b114a0a84" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; ensures that the padding consists of &amp;lsquo;</source>
          <target state="translated">'确保填充物由'</target>
        </trans-unit>
        <trans-unit id="74fb6864bd031031751cf27bd56ba31e75a1e957" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; error.</source>
          <target state="translated">错误。</target>
        </trans-unit>
        <trans-unit id="d79c837aeca9436531b94abe66c85b592e0b79cd" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; escapes are available for use in &lt;var&gt;format-string&lt;/var&gt;:</source>
          <target state="translated">'转义 &lt;var&gt;format-string&lt;/var&gt; 可以在format-string中使用：</target>
        </trans-unit>
        <trans-unit id="5e07daa0b60881f422be295054af8483799c5fba" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; except it suppresses trailing instances of &amp;lsquo;</source>
          <target state="translated">'，除了会抑制尾随'</target>
        </trans-unit>
        <trans-unit id="c3bf72f24683499cc0354e1a7b1f90c0e56c4cd7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; except that any flags or field width override the &amp;lsquo;</source>
          <target state="translated">'，除非任何标志或字段宽度覆盖'</target>
        </trans-unit>
        <trans-unit id="5f789cc15c6232b4beb16ea7eb5040df570d2de5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; except that it must match the preceding expression at least once. So, for example, &amp;lsquo;</source>
          <target state="translated">'，但必须至少与前面的表达式匹配一次。因此，例如，</target>
        </trans-unit>
        <trans-unit id="5d70b13ab69d055c698b6d9a6582962f7b12f786" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; except that it must match the preceding expression either once or not at all. For example, &amp;lsquo;</source>
          <target state="translated">'，但必须一次或完全不匹配前面的表达式。例如， '</target>
        </trans-unit>
        <trans-unit id="7ea0e985f8692da016bc06581645fc5450d21c49" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; exist,</source>
          <target state="translated">存在</target>
        </trans-unit>
        <trans-unit id="411dbb5a7c6a157726268ed410217c1ccfe169cb" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; file exists but is older than the &amp;lsquo;</source>
          <target state="translated">'文件存在，但比'</target>
        </trans-unit>
        <trans-unit id="7f78afef1c163d989cbebb27aeba2a51eb3250d5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; file has no corresponding &amp;lsquo;</source>
          <target state="translated">&amp;ldquo;文件没有对应的&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="2a56cbe17c274c7dd4bb6069c35c351dd32123c7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; file in &lt;var&gt;directory&lt;/var&gt; (or its subdirectories) that needs recompilation. A file needs recompilation if a &amp;lsquo;</source>
          <target state="translated">在&amp;ldquo;文件 &lt;var&gt;directory&lt;/var&gt; （或其子目录），需要重新编译。如果&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="2893a28e9a2c55183be2d847ee71c4d47a376215" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; file that has a &amp;lsquo;</source>
          <target state="translated">具有&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="d8f680b8150f3e898bacbbfd48e4bcb172c4215f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; file, &lt;var&gt;flag&lt;/var&gt; says what to do. If it is &lt;code&gt;nil&lt;/code&gt;, this command ignores these files. If &lt;var&gt;flag&lt;/var&gt; is 0, it compiles them. If it is neither &lt;code&gt;nil&lt;/code&gt; nor 0, it asks the user whether to compile each such file, and asks about each subdirectory as well.</source>
          <target state="translated">'文件， &lt;var&gt;flag&lt;/var&gt; 说明要做什么。如果为 &lt;code&gt;nil&lt;/code&gt; ，则此命令将忽略这些文件。如果 &lt;var&gt;flag&lt;/var&gt; 为0，则编译它们。如果它既不是 &lt;code&gt;nil&lt;/code&gt; 也不是0，则询问用户是否编译每个这样的文件，并询问每个子目录。</target>
        </trans-unit>
        <trans-unit id="895d361cd57fc37a743eedf2d554328ef1dd5123" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; file.</source>
          <target state="translated">文件。</target>
        </trans-unit>
        <trans-unit id="7831bf4bdd2bd1f4e71d3e196a6b39a30d0dc440" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; first tries to match all three &amp;lsquo;</source>
          <target state="translated">&amp;ldquo;首先尝试匹配所有三个&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="1697cc772413722bdc27a3ad366fdbcb64bffe22" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; flag is ignored.</source>
          <target state="translated">'标志将被忽略。</target>
        </trans-unit>
        <trans-unit id="1d8fbf3b5c916f184a6cdcf7b45e953787590d69" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; flag means include a decimal point even if the precision is zero. For &amp;lsquo;</source>
          <target state="translated">'标志表示即使精度为零，也应包含小数点。对于</target>
        </trans-unit>
        <trans-unit id="82fa6105b0d3d2eaebf9189a99338f1934c58d7e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; flag, but still pad with &lt;em&gt;spaces&lt;/em&gt;.</source>
          <target state="translated">'标志，但仍要留&lt;em&gt;空格&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="c852f11eae5935f1bcb1f3459b9eee069da434c3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; flag.</source>
          <target state="translated">的标志。</target>
        </trans-unit>
        <trans-unit id="193bf12078a65ec07299222414a99b757d0b6613" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; followed by &lt;var&gt;digit&lt;/var&gt; to match that same text, whatever it may have been.</source>
          <target state="translated">'，后跟 &lt;var&gt;digit&lt;/var&gt; 以匹配相同的文本，无论可能是什么。</target>
        </trans-unit>
        <trans-unit id="99962e41a63929f88d327c0456939247075c140a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; followed by a &amp;lsquo;</source>
          <target state="translated">'后跟一个'</target>
        </trans-unit>
        <trans-unit id="933f77cc5da23246b4c5c9ddc6c36fdb72c395d3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; followed by a dash has a different meaning&amp;mdash;it applies the Super modifier to the following character.) Thus,</source>
          <target state="translated">'后跟破折号的含义不同-将超级修饰符应用于以下字符。）因此，</target>
        </trans-unit>
        <trans-unit id="4cf2af5099109983e79da0f5e0da269d9e4312f4" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; followed by a digit, and &amp;lsquo;</source>
          <target state="translated">'后跟一个数字，然后'</target>
        </trans-unit>
        <trans-unit id="b9861cd6de235e766911a9aaeaa0ea0e380ee76d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; followed by a digit-string. For the floating-point specifications (&amp;lsquo;</source>
          <target state="translated">'后跟一个数字字符串。对于浮点规格（'</target>
        </trans-unit>
        <trans-unit id="1ea514747282026e0a7688e1271c181f87262988" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; followed by a list beginning with &amp;lsquo;</source>
          <target state="translated">'，后跟一个以'开头的列表</target>
        </trans-unit>
        <trans-unit id="e0b8bd63c817eed7054b47e3cb897d5228d4d890" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; followed by a list specifying the contents. The first list element must be the record type. The following elements are the record slots.</source>
          <target state="translated">'，后跟指定内容的列表。第一个列表元素必须是记录类型。以下元素是记录槽。</target>
        </trans-unit>
        <trans-unit id="0c1e9b580901b9ff44337b3256cb9906a877c4c5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; followed by a list specifying the hash table properties and contents. See &lt;a href=&quot;creating-hash#Creating-Hash&quot;&gt;Creating Hash&lt;/a&gt;. (Hash notation, the initial &amp;lsquo;</source>
          <target state="translated">'，后跟一个指定哈希表属性和内容的列表。请参阅&lt;a href=&quot;creating-hash#Creating-Hash&quot;&gt;创建哈希&lt;/a&gt;。（哈希符号，首字母为&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="3ed59adcb971c42f2a76b4ce556a14b700f94e5a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; followed by a radix indication followed by one or more digits. The radix indications are &amp;lsquo;</source>
          <target state="translated">'，后跟一个基数指示，后跟一个或多个数字。基数指示为&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="811f2f9c62e859afa231c9f79f89db150ce6304b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; followed by any character matches only that character. However, there are several exceptions: certain sequences starting with &amp;lsquo;</source>
          <target state="translated">'，后跟任何字符，仅与该字符匹配。但是，有几种例外情况：某些序列以'</target>
        </trans-unit>
        <trans-unit id="088c203eb35ca9aadbd9148cf4bf4106f863347e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; followed by the error signaled and any arguments to &lt;code&gt;signal&lt;/code&gt;. For example,</source>
          <target state="translated">'随后用信号通知错误和任何参数 &lt;code&gt;signal&lt;/code&gt; 。例如，</target>
        </trans-unit>
        <trans-unit id="b981a61cebc1e081a6c95b0693e28c52860c1273" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; followed by the length. The string constant that follows actually specifies the contents of the bool-vector as a bitmap&amp;mdash;each character in the string contains 8 bits, which specify the next 8 elements of the bool-vector (1 stands for &lt;code&gt;t&lt;/code&gt;, and 0 for &lt;code&gt;nil&lt;/code&gt;). The least significant bits of the character correspond to the lowest indices in the bool-vector.</source>
          <target state="translated">'，然后是长度。后面的字符串常量实际上将bool-vector的内容指定为位图-字符串中的每个字符包含8位，这些位指定bool-vector的后8个元素（1代表 &lt;code&gt;t&lt;/code&gt; ，0代表 &lt;code&gt;nil&lt;/code&gt; ）。字符的最低有效位对应于布尔向量中的最低索引。</target>
        </trans-unit>
        <trans-unit id="fafefae50d27e1f617734532d66d7e932fab07e6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; following the count for an expression says that the expression has returned the same value each time it was evaluated. In other words, it is not yet covered for coverage testing purposes.</source>
          <target state="translated">表达式的计数之后的'表示该表达式每次被求值都返回相同的值。换句话说，出于覆盖率测试目的，尚未涵盖该内容。</target>
        </trans-unit>
        <trans-unit id="1486728da01c2819f9b6ac3a49b5bb7f13382c8e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for 10^3, &amp;lsquo;</source>
          <target state="translated">'为10 ^ 3，'</target>
        </trans-unit>
        <trans-unit id="3901fc2ce26fe6333201c45410ebfc9e9bff240a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for 10^6, &amp;lsquo;</source>
          <target state="translated">'为10 ^ 6，'</target>
        </trans-unit>
        <trans-unit id="cac864cc22483f5d59a8a19927f5561b988e98fa" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for 10^9, etc., to abbreviate.</source>
          <target state="translated">'代表10 ^ 9等。</target>
        </trans-unit>
        <trans-unit id="0a5860940c90037a2ed69ee1f0af2ea5bd907f06" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for China Standard Time or for U.S. Central Standard Time. Both elements can change when daylight saving time begins or ends; if the user has specified a time zone that does not use a seasonal time adjustment, then the value is constant through time.</source>
          <target state="translated">'用于中国标准时间或美国中央标准时间。当夏令时开始或结束时，这两个元素都可以更改；如果用户指定的时区不使用季节性时间调整，则该值在整个时间都是恒定的。</target>
        </trans-unit>
        <trans-unit id="80f38e0f3906303dd24b0b875402610b98c50cb5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for Chinese characters or &amp;lsquo;</source>
          <target state="translated">'代表汉字或'</target>
        </trans-unit>
        <trans-unit id="6e8c1dce9b851d36224021538b5f5fee75a0408b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for Greek characters in the standard category table. You can see the list of all the currently defined categories with</source>
          <target state="translated">'表示标准类别表中的希腊字符。您可以使用以下命令查看所有当前定义的类别的列表</target>
        </trans-unit>
        <trans-unit id="6e041979ac74a06fdb1eaadd94ee81c56d8f2cf4" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for IPv4 or &amp;lsquo;</source>
          <target state="translated">&amp;ldquo;用于IPv4或&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="321ef4db2c026856480ec662f82e980d6dc82f3b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for IPv6. Note that on some operating systems, listening on &amp;lsquo;</source>
          <target state="translated">代表IPv6。请注意，在某些操作系统上，</target>
        </trans-unit>
        <trans-unit id="d646f0f981cc6db3325106373d0d570e045084f7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for a backslash as part of the string, &amp;lsquo;</source>
          <target state="translated">'作为字符串的一部分的反斜杠，'</target>
        </trans-unit>
        <trans-unit id="05e037827ff70125202b76a9a083bc21a50bf1c4" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for a newline.</source>
          <target state="translated">'换行。</target>
        </trans-unit>
        <trans-unit id="d35abf5f1a74c960e117e6dc6c3295473cb470dd" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for a tab and &amp;lsquo;</source>
          <target state="translated">&amp;ldquo;用于标签和&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="53b8d0aa796623a1e8241598e559a57eab24c34d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for all characters belonging to the charset &lt;code&gt;japanese-jisx0208&lt;/code&gt;.</source>
          <target state="translated">'表示属于charset &lt;code&gt;japanese-jisx0208&lt;/code&gt; 的所有字符。</target>
        </trans-unit>
        <trans-unit id="35cd8deed70890b3a92a2c467fc4c42106853448" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for binary, &amp;lsquo;</source>
          <target state="translated">'代表二进制'</target>
        </trans-unit>
        <trans-unit id="d80656a68e9a7e551114aba972aaac0859ab3fc6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for both of them).</source>
          <target state="translated">&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="19ca0d9a992f2a162ea1d3d89c1a1a8ba5b89e47" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for both of them, or &amp;lsquo;</source>
          <target state="translated">&amp;ldquo;对于他们两个，还是&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="009693825eda04b200da2f91720554f601000505" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for each character in the password. If you want to apply another character to hide the password, let-bind the variable &lt;code&gt;read-hide-char&lt;/code&gt; with that character.</source>
          <target state="translated">'代表密码中的每个字符。如果要应用其他字符来隐藏密码，则将变量 &lt;code&gt;read-hide-char&lt;/code&gt; 与该字符绑定。</target>
        </trans-unit>
        <trans-unit id="8840ff155eea7ab40fd21c42ea7509914c5c847e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for each editing level. See &lt;a href=&quot;recursive-editing#Recursive-Editing&quot;&gt;Recursive Editing&lt;/a&gt;.</source>
          <target state="translated">'代表每个编辑级别。请参阅&lt;a href=&quot;recursive-editing#Recursive-Editing&quot;&gt;递归编辑&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e98da4a337d562323295d1a4e5e06c1c620b829f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for each recursive editing level (not counting minibuffer levels).</source>
          <target state="translated">'用于每个递归编辑级别（不计算最小缓冲区级别）。</target>
        </trans-unit>
        <trans-unit id="9cae2135ebed9dbcd12eef399c084d13fed85bd1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for hex, and &amp;lsquo;</source>
          <target state="translated">'代表十六进制，和'</target>
        </trans-unit>
        <trans-unit id="1a8805b2fa97d48da8c1689619862668dc593204" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for microseconds, etc. Any excess digits are discarded, without rounding.</source>
          <target state="translated">'（以毫秒为单位），等等。所有多余的数字都将被舍弃，而不进行舍入。</target>
        </trans-unit>
        <trans-unit id="1edb3d27c2e6e44c86fd1c2da036eab21663a02c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for milliseconds, &amp;lsquo;</source>
          <target state="translated">&amp;ldquo;毫秒&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="ded285b327e56736571a899aa2af9702b74c4af5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for modifiers alt, control, hyper, meta, shift and super, just as you would with function keys.</source>
          <target state="translated">'用于修饰符alt，control，hyper，meta，shift和super，就像使用功能键一样。</target>
        </trans-unit>
        <trans-unit id="4182b5058dd7fbe7a229a5e7a0aa8a7bba04f114" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for mouse events and for special system events (see &lt;a href=&quot;misc-events#Misc-Events&quot;&gt;Misc Events&lt;/a&gt;). The event list that the command receives depends on the event. See &lt;a href=&quot;input-events#Input-Events&quot;&gt;Input Events&lt;/a&gt;, which describes the forms of the list for each event in the corresponding subsections.</source>
          <target state="translated">'用于鼠标事件和特殊系统事件（请参阅&lt;a href=&quot;misc-events#Misc-Events&quot;&gt;其他事件&lt;/a&gt;）。命令接收的事件列表取决于事件。请参阅&amp;ldquo;&lt;a href=&quot;input-events#Input-Events&quot;&gt;输入事件&amp;rdquo;&lt;/a&gt;，在相应的小节中描述了每个事件的列表形式。</target>
        </trans-unit>
        <trans-unit id="affb635e884a4589b67a1fc2252356a0272271f5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for octal, &amp;lsquo;</source>
          <target state="translated">'代表八进制，'</target>
        </trans-unit>
        <trans-unit id="55b855790ebed904cd030227cdae00e541884e51" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for open parenthesis, etc. To represent whitespace syntax, use either &amp;lsquo;</source>
          <target state="translated">'，用于开括号等。要表示空格语法，请使用'</target>
        </trans-unit>
        <trans-unit id="3ae97f975ff9362176c6a04682d3aa3e286f7f89" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for radix &lt;var&gt;radix&lt;/var&gt;. Thus, &amp;lsquo;</source>
          <target state="translated">'为 &lt;var&gt;radix&lt;/var&gt; 。因此，</target>
        </trans-unit>
        <trans-unit id="94b3860e4730313415af41e4a5c7b4b29de35a41" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for the character</source>
          <target state="translated">'代表角色</target>
        </trans-unit>
        <trans-unit id="1c8218ac75fcbc53721e8844832eefc248cbad01" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for the host name and &amp;lsquo;</source>
          <target state="translated">'代表主机名，'</target>
        </trans-unit>
        <trans-unit id="8bc6e6286c28c56fb3b2df13cf606d6a11c85818" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for the port number. For instance, if you want to first ssh to &amp;lsquo;</source>
          <target state="translated">'为端口号。例如，如果您要先SSH到'</target>
        </trans-unit>
        <trans-unit id="5de8b32e69b7232791cb6d4eb5a68bb6f1d582a5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for the sake of uniqueness. It inserts the directory listing at the end of the buffer &amp;lsquo;</source>
          <target state="translated">为了独特。它将目录列表插入到缓冲区的末尾'</target>
        </trans-unit>
        <trans-unit id="d63480dc6bb71c67a26d0d9f70c13dba57f2c94d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for the user&amp;rsquo;s home directory if the argument names a file in the home directory or one of its subdirectories. If the home directory is a root directory, it is not replaced with &amp;lsquo;</source>
          <target state="translated">如果自变量在主目录或其子目录之一中命名文件，则为用户的主目录。如果主目录是根目录，则不会替换为&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="181dda12681a51970663a81c801f04c54a36cd64" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for whitespace, &amp;lsquo;</source>
          <target state="translated">&amp;ldquo;用于空格，&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="bb72a19aea5241ef20990a3881e953dbc16a5a9d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; for word constituent, &amp;lsquo;</source>
          <target state="translated">&amp;ldquo;对于单词构成，&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="78c5ea124cdbecabbac70cb3c050c81390007fcd" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; from the beginning of the whole regular expression. The first subexpression is numbered 1, the second 2, and so on. Only regular expressions can have subexpressions&amp;mdash;after a simple string search, the only information available is about the entire match.</source>
          <target state="translated">从整个正则表达式开始。第一个子表达式编号为1，第二个子编号依次类推。只有正则表达式可以具有子表达式-在简单的字符串搜索之后，唯一可用的信息是有关整个匹配项的信息。</target>
        </trans-unit>
        <trans-unit id="d8c733ced233ebc0113b22ea5047d592f041c51b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; from the file &lt;var&gt;name&lt;/var&gt;, if any. If &lt;var&gt;name&lt;/var&gt; is a remote file name, the local part of &lt;var&gt;name&lt;/var&gt; is unquoted.</source>
          <target state="translated">从文件' &lt;var&gt;name&lt;/var&gt; ，如果有的话。如果 &lt;var&gt;name&lt;/var&gt; 是一个远程文件名，当地部分 &lt;var&gt;name&lt;/var&gt; 是加引号。</target>
        </trans-unit>
        <trans-unit id="9ba9a9dfee15f9465bcf87f02ebcc2563e86f7b8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; from the menu of alternatives, that specifies the value &lt;code&gt;foo&lt;/code&gt;; but any other value (not &lt;code&gt;t&lt;/code&gt;, &lt;code&gt;nil&lt;/code&gt; or &lt;code&gt;foo&lt;/code&gt;) displays as &amp;lsquo;</source>
          <target state="translated">'从替代菜单中，指定值 &lt;code&gt;foo&lt;/code&gt; ；但其他任何值（不是 &lt;code&gt;t&lt;/code&gt; ， &lt;code&gt;nil&lt;/code&gt; 或 &lt;code&gt;foo&lt;/code&gt; ）都显示为&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="94d0cc601c9b9c5fbc75f786a652d311b324bbe1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; functions also perform a kind of searching. See &lt;a href=&quot;skipping-characters#Skipping-Characters&quot;&gt;Skipping Characters&lt;/a&gt;. To search for changes in character properties, see &lt;a href=&quot;property-search#Property-Search&quot;&gt;Property Search&lt;/a&gt;.</source>
          <target state="translated">函数还执行一种搜索。请参阅&lt;a href=&quot;skipping-characters#Skipping-Characters&quot;&gt;跳过字符&lt;/a&gt;。要搜索字符属性的更改，请参见&amp;ldquo;&lt;a href=&quot;property-search#Property-Search&quot;&gt;属性搜索&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="759eed83f203c73ed8da9860fc1c5e0e315e20b1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; gets an element from an array and &amp;lsquo;</source>
          <target state="translated">'从数组中获取一个元素，然后'</target>
        </trans-unit>
        <trans-unit id="241f64b7c00229861d9fa6be7dd86b923560f23c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; gets events that are lists, so you can look at the data in the lists. See &lt;a href=&quot;input-events#Input-Events&quot;&gt;Input Events&lt;/a&gt;. No I/O.</source>
          <target state="translated">会获取列表中的事件，因此您可以查看列表中的数据。请参阅&lt;a href=&quot;input-events#Input-Events&quot;&gt;输入事件&lt;/a&gt;。没有I / O。</target>
        </trans-unit>
        <trans-unit id="75cd84a4b517cc2929ced2a8a99f8183186c8a23" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; gives the name to an object, and &amp;lsquo;</source>
          <target state="translated">'为对象指定名称，然后'</target>
        </trans-unit>
        <trans-unit id="4abf6e9baec4567ee8f3dd1c65afbef436758430" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; grouping can limit the grouping power of &amp;lsquo;</source>
          <target state="translated">'分组会限制'</target>
        </trans-unit>
        <trans-unit id="5a00b89adc9a936084d8a6b8ab8fc10ef3346c99" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; has a repeating &amp;lsquo;</source>
          <target state="translated">'有重复'</target>
        </trans-unit>
        <trans-unit id="2ab3233ccc723599017bf80bb6e1d2ca2c6fa2e2" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; has been expanded, an absolute file name starts with a &amp;lsquo;</source>
          <target state="translated">'已扩展，绝对文件名以'</target>
        </trans-unit>
        <trans-unit id="bb5d59ab940c1bda7977be493314b22f5efcc3c5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; has only 3 letters, and needs 4 blank spaces as padding. In the second case, the string &lt;code&gt;&quot;specification&quot;&lt;/code&gt; is 13 letters wide but is not truncated.</source>
          <target state="translated">'只有3个字母，并且需要4个空格作为填充。在第二种情况下，字符串 &lt;code&gt;&quot;specification&quot;&lt;/code&gt; 为13个字母宽，但不会被截断。</target>
        </trans-unit>
        <trans-unit id="1762ee0a19d45a6820c4873b556be4137c275ff7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; have single functions as their values.</source>
          <target state="translated">具有单一功能作为其价值。</target>
        </trans-unit>
        <trans-unit id="7affe7d0f4c0f033844df2552228e7fd4ff94778" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; header otherwise. One or the other &lt;em&gt;must&lt;/em&gt; be present. Here, the version number is 1.3.</source>
          <target state="translated">'标头，否则。一个或另一个&lt;em&gt;必须&lt;/em&gt;存在。在这里，版本号是1.3。</target>
        </trans-unit>
        <trans-unit id="a58029aa61658192d0cdfd63809853776f451a7f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; header should contain at least one standard keyword from the &lt;code&gt;finder-known-keywords&lt;/code&gt; list.</source>
          <target state="translated">'标头应至少包含 &lt;code&gt;finder-known-keywords&lt;/code&gt; 列表中的一个标准关键字。</target>
        </trans-unit>
        <trans-unit id="0e320c35533c66c358c9b86e27a217173c1dfd10" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; header, if it exists, or from the &amp;lsquo;</source>
          <target state="translated">'标头（如果存在），或来自'</target>
        </trans-unit>
        <trans-unit id="3d369fc0fdf731ed52fb6959d57c0a0d952df17f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; header, that is used as the package dependencies. In the above example, the package depends on the &amp;lsquo;</source>
          <target state="translated">'标头，用作包依赖项。在上面的示例中，软件包取决于&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="b34bd223f7ffee06e883d4ad26ee72148bd44ab1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; header, you could say something like this:</source>
          <target state="translated">'标头，您可以这样说：</target>
        </trans-unit>
        <trans-unit id="d3eb7135c81465e42e0e6964178e729a3ea2dbc1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; header. If the header is omitted, the package has no dependencies.</source>
          <target state="translated">'标头。如果省略标题，则程序包没有依赖项。</target>
        </trans-unit>
        <trans-unit id="0d5b97c7499cdeaa166e55f86ab4a7071db81a94" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; headers are optional, but recommended. The command &lt;code&gt;describe-package&lt;/code&gt; uses these to add links to its output. The &amp;lsquo;</source>
          <target state="translated">'标头是可选的，但建议使用。命令 &lt;code&gt;describe-package&lt;/code&gt; 使用这些命令将链接添加到其输出。'</target>
        </trans-unit>
        <trans-unit id="ee5b8e23e96768b41389a18b696ee6bed3b3f247" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; identifies an additional prefix character for Lisp syntax. These characters are treated as whitespace when they appear between expressions. When they appear within an expression, they are handled according to their usual syntax classes.</source>
          <target state="translated">'标识Lisp语法的其他前缀字符。当这些字符出现在表达式之间时，它们被视为空格。当它们出现在表达式中时，将根据其常规语法类对其进行处理。</target>
        </trans-unit>
        <trans-unit id="1dd01fd8efeeb1dfa66bcf844b972ca4314d55ad" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; identifies the comment that follows as the documentation string. The &amp;lsquo;</source>
          <target state="translated">'将后面的注释标识为文档字符串。'</target>
        </trans-unit>
        <trans-unit id="4256c3372e5c57227785d60062bb1a4e2c4e15f0" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; if &lt;var&gt;command&lt;/var&gt; has no key bindings.</source>
          <target state="translated">'如果 &lt;var&gt;command&lt;/var&gt; 没有键绑定。</target>
        </trans-unit>
        <trans-unit id="e59317c9f6a520dde792764a342abf7151e8fbdd" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; if &lt;var&gt;var&lt;/var&gt; is set but null. Within Emacs, a list of environment variables and their values is kept in the variable &lt;code&gt;process-environment&lt;/code&gt;.</source>
          <target state="translated">'如果设置了 &lt;var&gt;var&lt;/var&gt; 但为null。在Emacs中，环境变量及其值的列表保存在变量 &lt;code&gt;process-environment&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="6ec1629fd8c7e965080a56a46c805486b76cd446" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; if necessary to make a unique buffer name. It does most of this work by calling &lt;code&gt;set-visited-file-name&lt;/code&gt; (see &lt;a href=&quot;buffer-file-name#Buffer-File-Name&quot;&gt;Buffer File Name&lt;/a&gt;) and &lt;code&gt;save-buffer&lt;/code&gt;.</source>
          <target state="translated">'，以在需要时创建唯一的缓冲区名称。它通过调用 &lt;code&gt;set-visited-file-name&lt;/code&gt; （请参阅&lt;a href=&quot;buffer-file-name#Buffer-File-Name&quot;&gt;Buffer File Name&lt;/a&gt;）和 &lt;code&gt;save-buffer&lt;/code&gt; 来完成大部分工作。</target>
        </trans-unit>
        <trans-unit id="79b0b5675df6a50bbeedcfcde2516a9d0cd43e74" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; if the buffer is modified (see &lt;code&gt;buffer-modified-p&lt;/code&gt;);  &amp;lsquo;</source>
          <target state="translated">'如果缓冲区被修改（请参见 &lt;code&gt;buffer-modified-p&lt;/code&gt; ）；'</target>
        </trans-unit>
        <trans-unit id="59558dcbc38e0e426e0c960512e5d5cdec2cbc2e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; if the buffer is modified, &amp;lsquo;</source>
          <target state="translated">'如果缓冲区被修改，'</target>
        </trans-unit>
        <trans-unit id="9b1677e2a907296c716dc0e2c36256e00f8c1d1d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; if the buffer is modified, and &amp;lsquo;</source>
          <target state="translated">'如果缓冲区已修改，则'</target>
        </trans-unit>
        <trans-unit id="e7c804b269f5f5f125b78d52c1b0369493d9a483" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; if the buffer is not modified, &amp;lsquo;</source>
          <target state="translated">'如果缓冲区未修改，'</target>
        </trans-unit>
        <trans-unit id="ae5d1df7f7054f3a6a3f9f6499e29b8c1f8760b3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; if the buffer is read only (see &lt;code&gt;buffer-read-only&lt;/code&gt;);  &amp;lsquo;</source>
          <target state="translated">'如果缓冲区是只读的（请参阅 &lt;code&gt;buffer-read-only&lt;/code&gt; ）；否则为false 。'</target>
        </trans-unit>
        <trans-unit id="e2d982c59c38a551fb85897fb01120c6a8f69fbf" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; if the buffer is read only and modified.</source>
          <target state="translated">'如果缓冲区是只读的且已修改。</target>
        </trans-unit>
        <trans-unit id="a81693d1f271f71cc189595c7f46680a539aec5f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; if the buffer is read only, and &amp;lsquo;</source>
          <target state="translated">'如果缓冲区是只读的，则'</target>
        </trans-unit>
        <trans-unit id="bf8838899bcb7e9c7ec59dd3765b31422c62089e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; if the limits are exceeded. For instance, a system may not support years before 1970, or years before 1901, or years far in the future. You can convert a time value into a human-readable string using &lt;code&gt;format-time-string&lt;/code&gt;, into a Lisp timestamp using &lt;code&gt;time-convert&lt;/code&gt;, and into other forms using &lt;code&gt;decode-time&lt;/code&gt; and &lt;code&gt;float-time&lt;/code&gt;. These functions are described in the following sections.</source>
          <target state="translated">'如果超出限制。例如，一个系统可能不支持1970年之前的年份，或1901年之前的年份，或未来的几年。您可以使用 &lt;code&gt;format-time-string&lt;/code&gt; 将时间值转换为人类可读的字符串，使用 &lt;code&gt;time-convert&lt;/code&gt; 将时间值转换为Lisp时间戳，并使用 &lt;code&gt;decode-time&lt;/code&gt; 和 &lt;code&gt;float-time&lt;/code&gt; 转换为其他形式。这些功能在以下各节中介绍。</target>
        </trans-unit>
        <trans-unit id="0436e30863c4be505ddf5661cdbee00e637b7884" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; if the top of the buffer is visible on screen; or &amp;lsquo;</source>
          <target state="translated">'如果缓冲区的顶部在屏幕上可见；要么 '</target>
        </trans-unit>
        <trans-unit id="106534ed8655eef82955613d5d977f5e46468ea3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in &amp;lsquo;</source>
          <target state="translated">'在'</target>
        </trans-unit>
        <trans-unit id="41a34d600cecbce780ae09d2d9d5b238eaaff77e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in &lt;code&gt;delq&lt;/code&gt; says that it uses &lt;code&gt;eq&lt;/code&gt; to compare &lt;var&gt;object&lt;/var&gt; against the elements of the list, like &lt;code&gt;memq&lt;/code&gt; and &lt;code&gt;remq&lt;/code&gt;.</source>
          <target state="translated">'在 &lt;code&gt;delq&lt;/code&gt; 中表示，它使用 &lt;code&gt;eq&lt;/code&gt; 将 &lt;var&gt;object&lt;/var&gt; 与列表中的元素进行比较，例如 &lt;code&gt;memq&lt;/code&gt; 和 &lt;code&gt;remq&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b7b3949f12ecba9c07c2c9835ba455572ebe00f0" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in &lt;code&gt;memq&lt;/code&gt; says that it uses &lt;code&gt;eq&lt;/code&gt; to compare &lt;var&gt;object&lt;/var&gt; against the elements of the list. For example:</source>
          <target state="translated">&lt;code&gt;memq&lt;/code&gt; 中的'表示它使用 &lt;code&gt;eq&lt;/code&gt; 将 &lt;var&gt;object&lt;/var&gt; 与列表中的元素进行比较。例如：</target>
        </trans-unit>
        <trans-unit id="dce56f39131f43304d8d4e64e4498be4bb376510" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in &lt;code&gt;remq&lt;/code&gt; says that it uses &lt;code&gt;eq&lt;/code&gt; to compare &lt;var&gt;object&lt;/var&gt; against the elements of &lt;code&gt;list&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;remq&lt;/code&gt; 中说，它使用 &lt;code&gt;eq&lt;/code&gt; 将 &lt;var&gt;object&lt;/var&gt; 与 &lt;code&gt;list&lt;/code&gt; 的元素进行比较。</target>
        </trans-unit>
        <trans-unit id="aa892e13a7a3b394e5bd41c08119b43b35f892bb" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in &lt;code&gt;setq&lt;/code&gt; stands for &amp;ldquo;quoted&amp;rdquo;.</source>
          <target state="translated">&lt;code&gt;setq&lt;/code&gt; 中的'代表&amp;ldquo;已引用&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="d482e05a433731e35ea00bf0116eb2815bc43a74" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in &lt;var&gt;relfile&lt;/var&gt;, which may not be what you want. See &lt;a href=&quot;file-name-expansion#File-Name-Expansion&quot;&gt;File Name Expansion&lt;/a&gt;.</source>
          <target state="translated">'在 &lt;var&gt;relfile&lt;/var&gt; 中，可能不是您想要的。请参阅&lt;a href=&quot;file-name-expansion#File-Name-Expansion&quot;&gt;文件名扩展&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="be39c9e788e1ad854c6e65a4e58e88089179d38a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in &lt;var&gt;string&lt;/var&gt;, the &lt;code&gt;format&lt;/code&gt; function replaces it with the printed representation of one of the values to be formatted (one of the arguments &lt;var&gt;objects&lt;/var&gt;). For example:</source>
          <target state="translated">'在 &lt;var&gt;string&lt;/var&gt; ， &lt;code&gt;format&lt;/code&gt; 函数将其替换为要格式化的值之一（参数 &lt;var&gt;objects&lt;/var&gt; ）的打印表示形式。例如：</target>
        </trans-unit>
        <trans-unit id="3120b4ec60cd39291616a064887d45baf06a7676" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in &lt;var&gt;template&lt;/var&gt; are left verbatim in the output, including their text properties, if any.</source>
          <target state="translated">&lt;var&gt;template&lt;/var&gt; 中的'保留在输出中，包括它们的文本属性（如果有）。</target>
        </trans-unit>
        <trans-unit id="8395fb9bd867b010aeca60648a6116fa9c1ac662" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in C mode is &lt;code&gt;&quot;. 23&quot;&lt;/code&gt; (i.e., punctuation, matching character slot unused, second character of a comment-starter, first character of a comment-ender), and the entry for &amp;lsquo;</source>
          <target state="translated">在C模式下， &lt;code&gt;&quot;. 23&quot;&lt;/code&gt; 为&amp;ldquo;。23&amp;rdquo;（即标点符号，未使用的匹配字符槽，注释起始符的第二个字符，注释提供者的第一个字符），以及'</target>
        </trans-unit>
        <trans-unit id="96877e8a95ea66a2f70283e09f73c14a7b332dde" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in C mode, which is a punctuation character, &lt;em&gt;and&lt;/em&gt; the second character of a start-of-comment sequence (&amp;lsquo;</source>
          <target state="translated">'在C模式下，它是标点符号，&lt;em&gt;以及&lt;/em&gt;注释开始序列的第二个字符（'</target>
        </trans-unit>
        <trans-unit id="10b1fc07d718ba1c3cd1323556d76c338815b758" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in C.</source>
          <target state="translated">在C中。</target>
        </trans-unit>
        <trans-unit id="54e366fef475e999fa969928eac46cc851cb7bfd" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in C. On most terminals, this inherits from &lt;code&gt;font-lock-comment-face&lt;/code&gt;.</source>
          <target state="translated">在C中。在大多数终端上，这是从 &lt;code&gt;font-lock-comment-face&lt;/code&gt; 继承的。</target>
        </trans-unit>
        <trans-unit id="cf1e13c280fec7c0035ff972e0ea089c49ef63e7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in Emacs Lisp and &amp;lsquo;</source>
          <target state="translated">在Emacs Lisp和</target>
        </trans-unit>
        <trans-unit id="30a218e19a3ac3b9fbca88cf208696c98ca316a9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in Lisp mode, which may be part of a symbol name even though they are not part of English words. In standard C, the only non-word-constituent character that is valid in symbols is underscore (&amp;lsquo;</source>
          <target state="translated">在Lisp模式下，即使它们不是英语单词的一部分，也可能是符号名称的一部分。在标准C中，在符号中唯一有效的非单词组成字符是下划线（'</target>
        </trans-unit>
        <trans-unit id="a6b6aaededb5d44e7a8d3f68eddb81943b29e41d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in a backquote construct (see &lt;a href=&quot;backquote#Backquote&quot;&gt;Backquote&lt;/a&gt;).</source>
          <target state="translated">在反引号构造中（请参见&lt;a href=&quot;backquote#Backquote&quot;&gt;Backquote&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="a5c5c839667f302a312b337c21e02842e11993ac" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in a character alternative, put it at the beginning. To include &amp;lsquo;</source>
          <target state="translated">&amp;rdquo;，将其放在开头。包括 '</target>
        </trans-unit>
        <trans-unit id="e4a064f9ca258335857d1e76bb92f76686f42dd3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in a header-line aligns with the first text column in the text area. When the window displays line numbers, the text is considered to start where the space used for line-number display ends.</source>
          <target state="translated">标题行中的'与文本区域中的第一个文本列对齐。当窗口显示行号时，该文本被认为从行号显示空间结束处开始。</target>
        </trans-unit>
        <trans-unit id="63b3af5e98c6ffa3681dc4e53d33267bfb1a4410" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in a local variables section. With that designator, the file will unconditionally be interpreted as unibyte. This can matter when making keybindings to non-</source>
          <target state="translated">'在局部变量部分。使用该指定符，文件将无条件地解释为unibyte。在对非</target>
        </trans-unit>
        <trans-unit id="000aea18a9f4ec7189ee32179201b4108d4dcb8c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in a regular expression except that &amp;lsquo;</source>
          <target state="translated">以正则表达式表示，但&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="fdc52ba1b684eff507174903c31b434b386efd69" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in a string constant (even for an</source>
          <target state="translated">'在字符串常量中（即使对于</target>
        </trans-unit>
        <trans-unit id="9923585923d132e6364cb87c6ed0c8b7e0fae773" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in a string constant is just like backslash-newline; it does not contribute any character to the string, but it does terminate any preceding hex escape.</source>
          <target state="translated">字符串常量中的'就像反斜杠换行符；它不会为字符串贡献任何字符，但是会终止任何先前的十六进制转义。</target>
        </trans-unit>
        <trans-unit id="781e22f88236cc89d399a0e6a5e40405404dd765" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in a string in which &lt;code&gt;%&lt;/code&gt;-constructs are allowed.</source>
          <target state="translated">在允许 &lt;code&gt;%&lt;/code&gt; -constructs的字符串中。</target>
        </trans-unit>
        <trans-unit id="88cdb29bc95a87d14f7586c2f038419392234437" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in a string, it produces a code in the range of 128 to 255&amp;mdash;the same code that you get if you modify the corresponding keyboard event to put it in the string. Thus, meta events in strings work consistently regardless of how they get into the strings.</source>
          <target state="translated">'，它会产生一个介于128到255之间的代码-与修改相应的键盘事件以将其放入字符串时所获得的代码相同。因此，字符串中的元事件不管它们如何进入字符串都始终如一地工作。</target>
        </trans-unit>
        <trans-unit id="633c06c24432b0e1d1f8972736b3aaf23b3d249d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in addition to appending a tilde:</source>
          <target state="translated">'除了附加波浪号：</target>
        </trans-unit>
        <trans-unit id="0fce0e475e4eecf18ed954c1cadb6dc9f0b03e9b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in an environment variable&amp;rsquo;s value could lead to repeated substitution. Therefore, programs that call this function and put the output where it will be passed to this function need to double all &amp;lsquo;</source>
          <target state="translated">在环境变量中的值可能导致重复替换。因此，调用此函数并将输出传递给该函数的程序需要将所有&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="65b60e5a6d8d5083ccc674d3996a6956b4d197ce" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in between form an expression that matches anything that either &lt;var&gt;a&lt;/var&gt; or &lt;var&gt;b&lt;/var&gt; matches.</source>
          <target state="translated">'之间形成一个表达式，该表达式匹配 &lt;var&gt;a&lt;/var&gt; 或 &lt;var&gt;b&lt;/var&gt; 匹配的任何内容。</target>
        </trans-unit>
        <trans-unit id="a4de30b56b6f51498e43147def4c55566ec5523a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in evaluating an expression indicates an excess of open parentheses (or square brackets). The reader detects this imbalance at the end of the file, but it cannot figure out where the close parenthesis should have been. Likewise, &amp;lsquo;</source>
          <target state="translated">计算表达式中的'表示多余的括号（或方括号）。读者可以在文件末尾检测到这种不平衡，但是无法弄清楚右括号应该在哪里。同样，&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="8570aa62a2b423ece43aa13c01252cba5f6d63ac" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in its name). &lt;code&gt;kill-region&lt;/code&gt; puts the newly killed text in a new element at the beginning of the kill ring or adds it to the most recent element. It determines automatically (using &lt;code&gt;last-command&lt;/code&gt;) whether the previous command was a kill command, and if so appends the killed text to the most recent entry.</source>
          <target state="translated">&amp;rdquo;）。 &lt;code&gt;kill-region&lt;/code&gt; 将新杀死的文本放在kill环开头的新元素中，或将其添加到最新元素。它会自动（使用 &lt;code&gt;last-command&lt;/code&gt; ）确定上一个命令是否为kill命令，如果是，则将被杀死的文本追加到最新条目。</target>
        </trans-unit>
        <trans-unit id="bcb1c1068c57cbae64a0c3fdf1a988c4af1b3100" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in string constants to stand for meta characters, especially in arguments to &lt;code&gt;define-key&lt;/code&gt; and similar functions, and key sequences and sequences of events were always represented as strings.</source>
          <target state="translated">'在字符串常量中代表元字符，特别是在 &lt;code&gt;define-key&lt;/code&gt; 和类似函数的参数中，并且键序列和事件序列始终表示为字符串。</target>
        </trans-unit>
        <trans-unit id="9a954e64a6c0cffdbdd4ae3c65e713b9f9adfe1a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in string constants, there are special rules for including certain meta characters in a string. Here are the rules for interpreting a string as a sequence of input characters:</source>
          <target state="translated">在字符串常量中，有一些特殊的规则将某些元字符包含在字符串中。以下是将字符串解释为输入字符序列的规则：</target>
        </trans-unit>
        <trans-unit id="e2c21b82a61031ebbbf3185aac79cfc4e7ed7896" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in that space occupied by various window manager features (docks, taskbars, etc.) may be excluded from the work area. Whether or not such features actually subtract from the work area depends on the platform and environment. Again, if the monitor is not the primary monitor, some of the coordinates might be negative.</source>
          <target state="translated">因为各种窗口管理器功能（码头，任务栏等）占用的空间可能会从工作区域中排除。这些功能是否实际从工作区域中减去取决于平台和环境。同样，如果监视器不是主监视器，则某些坐标可能为负。</target>
        </trans-unit>
        <trans-unit id="9eb500f756053662de9b20453bd565bec9ca27ab" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in that value.</source>
          <target state="translated">的价值。</target>
        </trans-unit>
        <trans-unit id="4d7ed95dc2af6610e884d149eac9c321a14787f6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the &amp;lsquo;</source>
          <target state="translated">' 在里面 '</target>
        </trans-unit>
        <trans-unit id="875e6fee9e7416544b87ec0e71c21e45c35e4c81" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the &lt;var&gt;family&lt;/var&gt; field, and the font specification for Chinese GB2312 characters has a wild card &amp;lsquo;</source>
          <target state="translated">在&amp;ldquo; &lt;var&gt;family&lt;/var&gt; 字段中，并且中文GB2312字符的字体规范中带有通配符&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="c049a5f401761144d793506a11286c21b240ac88" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the &lt;var&gt;family&lt;/var&gt; field.</source>
          <target state="translated">在 &lt;var&gt;family&lt;/var&gt; 领域。</target>
        </trans-unit>
        <trans-unit id="1f583a565e54581e92772e796ec1e3303899058c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the &lt;var&gt;family&lt;/var&gt; field. In such a case, &amp;lsquo;</source>
          <target state="translated">在 &lt;var&gt;family&lt;/var&gt; 领域。在这种情况下， '</target>
        </trans-unit>
        <trans-unit id="92e2f67cfc55143c378fceeac767eda593b9a8fd" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the Customize interface, that takes effect by writing a &lt;code&gt;custom-set-variables&lt;/code&gt; and/or a &lt;code&gt;custom-set-faces&lt;/code&gt; form into the custom file, to be evaluated the next time Emacs starts.</source>
          <target state="translated">在Customize界面中，通过将 &lt;code&gt;custom-set-variables&lt;/code&gt; 和/或 &lt;code&gt;custom-set-faces&lt;/code&gt; 形式写入自定义文件中生效，以在下次Emacs启动时对其进行评估。</target>
        </trans-unit>
        <trans-unit id="890670bd8b8fd3511ac171718660ae68f43b304a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the current buffer; then in this example the two substrings are &amp;lsquo;</source>
          <target state="translated">'在当前缓冲区中；那么在此示例中，两个子字符串为&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="6aaaded0659dc4987cfc62546014aedfd3521fa4" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the customization buffer and enters the built-in Info reader on &lt;var&gt;info-node&lt;/var&gt;.</source>
          <target state="translated">'进入自定义缓冲区，然后在 &lt;var&gt;info-node&lt;/var&gt; 上输入内置的Info阅读器。</target>
        </trans-unit>
        <trans-unit id="24aa140a46f4f8b190ae78f6283e65c992763b30" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the drawing above) is the &lt;em&gt;outer position&lt;/em&gt; of the frame. The outer position of a graphical frame is also referred to as &amp;ldquo;the position&amp;rdquo; of the frame because it usually remains unchanged on its display whenever the frame is resized or its layout is changed.</source>
          <target state="translated">上图中的&amp;ldquo;&amp;rdquo;是框架的&lt;em&gt;外部位置&lt;/em&gt;。图形框架的外部位置也称为框架的&amp;ldquo;位置&amp;rdquo;，因为每当调整框架大小或更改其布局时，它通常在其显示器上保持不变。</target>
        </trans-unit>
        <trans-unit id="7a9c78fd3c4f8ee5170a3e77857ff850e7c94ad3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the echo area while auto-saving is going on. However, if &lt;var&gt;no-message&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the message is inhibited.</source>
          <target state="translated">自动保存正在进行时，在回显区域中。但是，如果 &lt;var&gt;no-message&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则禁止该消息。</target>
        </trans-unit>
        <trans-unit id="779fcc1d08cb136df482480d84404fab1f227168" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the echo area, and leaves the buffer empty.</source>
          <target state="translated">在回显区域中，并将缓冲区留空。</target>
        </trans-unit>
        <trans-unit id="0cadb9230d10e904e9c59b9fa15240b6970ab233" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the echo area, and then the user types</source>
          <target state="translated">在回显区域中，然后用户键入</target>
        </trans-unit>
        <trans-unit id="20050135fca43c50e92d5a4a603d60392c30f0b1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the echo area.</source>
          <target state="translated">在回显区域。</target>
        </trans-unit>
        <trans-unit id="6f8a0e97bd73e97d68482747c215e7097a17b633" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the echo area. This message is inhibited if &lt;var&gt;visit&lt;/var&gt; is neither &lt;code&gt;t&lt;/code&gt; nor &lt;code&gt;nil&lt;/code&gt; nor a string, or if Emacs is operating in batch mode (see &lt;a href=&quot;batch-mode#Batch-Mode&quot;&gt;Batch Mode&lt;/a&gt;). This feature is useful for programs that use files for internal purposes, files that the user does not need to know about.</source>
          <target state="translated">在回显区域。如果 &lt;var&gt;visit&lt;/var&gt; 既不是 &lt;code&gt;t&lt;/code&gt; 也不是 &lt;code&gt;nil&lt;/code&gt; 也不是字符串，或者Emacs在批处理模式下运行（请参见&lt;a href=&quot;batch-mode#Batch-Mode&quot;&gt;Batch Mode&lt;/a&gt;），则将禁止此消息。此功能对于将文件用于内部目的（用户不需要知道的文件）的程序很有用。</target>
        </trans-unit>
        <trans-unit id="ec6e0dfd97f45989b91af7c060ad8cc76b148143" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the first line. For the second invocation, point is directly after the &amp;lsquo;</source>
          <target state="translated">在第一行。对于第二次调用，点直接位于&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="6c3393830908f0af8f8a601ddc5f3460cef27348" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the fourth example is escaped to prevent it from being read as a number. This is not necessary in the sixth example because the rest of the name makes it invalid as a number.</source>
          <target state="translated">第四个示例中的'被转义以防止将其读取为数字。在第六个示例中，这不是必需的，因为名称的其余部分使它作为数字无效。</target>
        </trans-unit>
        <trans-unit id="d394b0a95c541c0bf6cc9ca00426ba739ea28ea8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the last name component (minus any version/backup part).</source>
          <target state="translated">'在姓氏部分中（减去任何版本/备份部分）。</target>
        </trans-unit>
        <trans-unit id="573dbd62c28cd8421d8c6736cd9bfecb9e9aaabd" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the menu bar) to assign faces explicitly to text in the buffer.</source>
          <target state="translated">菜单栏中的'）可将面孔明确分配给缓冲区中的文本。</target>
        </trans-unit>
        <trans-unit id="f8f4119429ab8897e6024ce418e246bf8a3b9711" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the replacement text.</source>
          <target state="translated">在替换文字中。</target>
        </trans-unit>
        <trans-unit id="b95087c7540f674dec674912214aa598e3f0982a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the rightmost column of the window indicates truncation; a &amp;lsquo;</source>
          <target state="translated">窗口最右列中的'表示截断；一种 '</target>
        </trans-unit>
        <trans-unit id="69e629e42a15deb89ecd3181145dfc0f61de27dc" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the same example.</source>
          <target state="translated">在同一示例中。</target>
        </trans-unit>
        <trans-unit id="23df226aad9e2159b9baea01f6a8030391de378e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the same way that &lt;code&gt;expand-file-name&lt;/code&gt; does.</source>
          <target state="translated">'与 &lt;code&gt;expand-file-name&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="4525b8ef193e0515ed18873ff6e02ce9778b2321" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the top line of the buffer, followed by the value being returned.</source>
          <target state="translated">在缓冲区的第一行中，然后是要返回的值。</target>
        </trans-unit>
        <trans-unit id="fa133d21380bf052a80feaae40c1452184cc9cd9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the two last examples is the backup part, not an extension.</source>
          <target state="translated">最后两个示例中的'是备份部分，而不是扩展部分。</target>
        </trans-unit>
        <trans-unit id="6b82746a34c52ab40e2e73173473586efe078c01" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the usage part of the documentation string is replaced with the function&amp;rsquo;s name when the various help functions (see &lt;a href=&quot;help-functions#Help-Functions&quot;&gt;Help Functions&lt;/a&gt;) display it.</source>
          <target state="translated">当各种帮助功能（请参阅&amp;ldquo;&lt;a href=&quot;help-functions#Help-Functions&quot;&gt;帮助功能&amp;rdquo;&lt;/a&gt;）显示时，文档字符串的用法部分中的'将替换为该功能的名称。</target>
        </trans-unit>
        <trans-unit id="1082fc2aa19dfc05fb05e5d747af24e5f166f9c1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in the word &amp;lsquo;</source>
          <target state="translated">'在单词'</target>
        </trans-unit>
        <trans-unit id="5612419bec63cc46e369a1a1f90e7cba39a4a1e0" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in their interactive form. See &lt;a href=&quot;interactive-codes#Interactive-Codes&quot;&gt;Code Characters for interactive&lt;/a&gt;.) Its value controls whether &lt;code&gt;read-file-name&lt;/code&gt; starts by placing the name of the default directory in the minibuffer, plus the initial file name, if any. If the value of this variable is &lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;read-file-name&lt;/code&gt; does not place any initial input in the minibuffer (unless you specify initial input with the &lt;var&gt;initial&lt;/var&gt; argument). In that case, the default directory is still used for completion of relative file names, but is not displayed.</source>
          <target state="translated">'以其互动形式。请参见&lt;a href=&quot;interactive-codes#Interactive-Codes&quot;&gt;代码字符以进行交互&lt;/a&gt;。）其值控制是否通过将默认目录的名称放入迷你缓冲区以及初始文件名（如果有）来开始 &lt;code&gt;read-file-name&lt;/code&gt; 文件名。如果此变量的值为 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;read-file-name&lt;/code&gt; 不会在迷你缓冲区中放置任何初始输入（除非您使用 &lt;var&gt;initial&lt;/var&gt; 参数指定初始输入）。在这种情况下，默认目录仍用于完成相对文件名，但不会显示。</target>
        </trans-unit>
        <trans-unit id="68b819b1a9ff341e382541d611e734e023101810" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in their name. By contrast, the functions whose names start with &amp;lsquo;</source>
          <target state="translated">以他们的名字。相比之下，名称以&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="2e78b30d4488553192a4145e92e06f213b2e97f2" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; in their name. See &lt;a href=&quot;shell-arguments#Shell-Arguments&quot;&gt;Shell Arguments&lt;/a&gt;. Typically it is safer to use &lt;code&gt;call-process&lt;/code&gt; than a subshell. See &lt;a href=&quot;synchronous-processes#Synchronous-Processes&quot;&gt;Synchronous Processes&lt;/a&gt;. And it is safer yet to use builtin Emacs functions; for example, use &lt;code&gt;(rename-file &quot;&lt;var&gt;a&lt;/var&gt;&quot; &quot;&lt;var&gt;b&lt;/var&gt;&quot; t)&lt;/code&gt; instead of invoking &lt;code&gt;mv&lt;/code&gt;. See &lt;a href=&quot;changing-files#Changing-Files&quot;&gt;Changing Files&lt;/a&gt;.</source>
          <target state="translated">以他们的名字。请参阅&lt;a href=&quot;shell-arguments#Shell-Arguments&quot;&gt;Shell参数&lt;/a&gt;。通常，使用 &lt;code&gt;call-process&lt;/code&gt; 比使用子shell更安全。请参阅&lt;a href=&quot;synchronous-processes#Synchronous-Processes&quot;&gt;同步过程&lt;/a&gt;。而且，使用内置的Emacs函数更安全。例如，使用 &lt;code&gt;(rename-file &quot;&lt;var&gt;a&lt;/var&gt;&quot; &quot;&lt;var&gt;b&lt;/var&gt;&quot; t)&lt;/code&gt; 而不是调用 &lt;code&gt;mv&lt;/code&gt; 。请参阅&lt;a href=&quot;changing-files#Changing-Files&quot;&gt;更改文件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="367624ba958ecc1e496e3325f2ef81bdd9077b12" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; indicates a recursive reference to the object at level 0 of the current print operation:</source>
          <target state="translated">'表示对当前打印操作级别0处的对象的递归引用：</target>
        </trans-unit>
        <trans-unit id="88294f45104cb11a2b93f29f3f82449bdacecf66" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; indicates an excess close parenthesis or missing open parenthesis, but does not say where the missing parenthesis belongs. How, then, to find what to change?</source>
          <target state="translated">'表示多余的圆括号或缺少的圆括号，但未说明丢失的圆括号所属的位置。那么，如何找到要改变的东西？</target>
        </trans-unit>
        <trans-unit id="d736202b8f2b75b4460c680fff30b26a5571488f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; indicates the location of point. (The symbol for point, of course, is not part of the text in the buffer; it indicates the place &lt;em&gt;between&lt;/em&gt; two characters where point is currently located.)</source>
          <target state="translated">'表示点的位置。（当然，点符号不是缓冲区文本的一部分；它指示点当前所在的两个字符&lt;em&gt;之间的&lt;/em&gt;位置。）</target>
        </trans-unit>
        <trans-unit id="24c421060921b8f941dce6836aa30c7664f4011a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; inserts a plus sign before a nonnegative number, so that it always has a sign. A space character as flag inserts a space before a nonnegative number. (Otherwise, nonnegative numbers start with the first digit.) These flags are useful for ensuring that nonnegative and negative numbers use the same number of columns. They are ignored except for &amp;lsquo;</source>
          <target state="translated">'在非负数之前插入加号，因此它始终带有一个正号。空格字符为标志在非负数之前插入空格。（否则，非负数以第一位数字开头。）这些标志对于确保非负数和负数使用相同的列数很有用。除了'</target>
        </trans-unit>
        <trans-unit id="9b395a7db58c1258511c5db2d975502ef2239245" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; inside of the argument to backquote indicates a value that isn&amp;rsquo;t constant. The Emacs Lisp evaluator evaluates the argument of &amp;lsquo;</source>
          <target state="translated">反引号参数中的'表示值不是恒定的。Emacs Lisp评估程序评估'</target>
        </trans-unit>
        <trans-unit id="8abd10c5b240d14b3bd5a19999e341072b313fb5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; instead of &amp;lsquo;</source>
          <target state="translated">' 代替 '</target>
        </trans-unit>
        <trans-unit id="23e62232a9d64c14a3585fb36c95dd44a5de08c4" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; instead of just &amp;lsquo;</source>
          <target state="translated">'而不只是'</target>
        </trans-unit>
        <trans-unit id="11828cb4eae1753964f547bb6f462463a3f3d411" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; instead of recursively printing an object already being printed. For example, here &amp;lsquo;</source>
          <target state="translated">'而不是递归地打印已经打印过的对象。例如，这里的</target>
        </trans-unit>
        <trans-unit id="b995f785171e05d8995e3b9330e838342bc906d9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; interactive code. See &lt;a href=&quot;interactive-codes#Interactive-Codes&quot;&gt;Interactive Codes&lt;/a&gt;.</source>
          <target state="translated">交互式代码。请参阅&lt;a href=&quot;interactive-codes#Interactive-Codes&quot;&gt;交互式代码&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b29c2922e274a1bf7cc8be9ddfd1b748426dc69b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; into &amp;lsquo;</source>
          <target state="translated">'成'</target>
        </trans-unit>
        <trans-unit id="87a01f2ca3b92480a893548913dc7d98fb06ca2f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; into the output, &amp;lsquo;</source>
          <target state="translated">'进入输出，'</target>
        </trans-unit>
        <trans-unit id="54aef35cad2173f4257f6e80be17e645ad3612db" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; into the output, and &amp;lsquo;</source>
          <target state="translated">'进入输出，然后'</target>
        </trans-unit>
        <trans-unit id="522cc75da24e9fc36f72fbd6d68222d1bcec1164" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; into the output.</source>
          <target state="translated">'进入输出。</target>
        </trans-unit>
        <trans-unit id="d498237e7bee8417df15f236f1f36e946e350154" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is &amp;ldquo;smaller&amp;rdquo; than &amp;lsquo;</source>
          <target state="translated">&amp;ldquo;比&amp;rdquo;&amp;ldquo;小&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="c3abfb5164bc6aa4b0dba97ce731128dfcbe740f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is &amp;lsquo;</source>
          <target state="translated">'是'</target>
        </trans-unit>
        <trans-unit id="f9227b981f8759c6d908d6226483bdc01a160f85" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is -1. Therefore, &amp;lsquo;</source>
          <target state="translated">'是-1。因此，</target>
        </trans-unit>
        <trans-unit id="22cb852484a3ed66695238ba951873923061092a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is -2, and the index for &amp;lsquo;</source>
          <target state="translated">'为-2，而'的索引</target>
        </trans-unit>
        <trans-unit id="afafc17f4e8511135316787d9bc6d90b6b415ec9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is -3, the index for &amp;lsquo;</source>
          <target state="translated">'是-3，'的索引</target>
        </trans-unit>
        <trans-unit id="5aed518e8ee5ff66868ca615b458032e89d85c32" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is 0, the index for &amp;lsquo;</source>
          <target state="translated">'为0，'的索引</target>
        </trans-unit>
        <trans-unit id="d4bc39cde35f2fe72d99798cb119b3dfb16011c2" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is 1, and the index for &amp;lsquo;</source>
          <target state="translated">'为1，而'的索引</target>
        </trans-unit>
        <trans-unit id="9d7bb5c754520f82cfebb07c61b47169a3f8390e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is 111 and &amp;lsquo;</source>
          <target state="translated">'是111和'</target>
        </trans-unit>
        <trans-unit id="1d46dcde0c0c367dfc483fbdef9ca01871631aa6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is 2. The index 3&amp;mdash;which is the fourth character in the string&amp;mdash;marks the character position up to which the substring is copied. Thus, &amp;lsquo;</source>
          <target state="translated">'是2。索引3（它是字符串中的第四个字符）标记了子字符串要复制到的字符位置。因此，</target>
        </trans-unit>
        <trans-unit id="fee81936e9b4e784f3998fd21bf9035c5c231de5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is &lt;code&gt;&quot;\\\\&quot;&lt;/code&gt;.</source>
          <target state="translated">'是 &lt;code&gt;&quot;\\\\&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c51e3412d1ac85d8ac2da432e25cfca565f71702" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is &lt;code&gt;(4 . 41)&lt;/code&gt;. 41 is the character code for &amp;lsquo;</source>
          <target state="translated">'是 &lt;code&gt;(4 . 41)&lt;/code&gt; 。41是&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="340e9aea173250d8bbaac8d8950c8d67b37217a0" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is a &amp;lsquo;</source>
          <target state="translated">'是'</target>
        </trans-unit>
        <trans-unit id="4003421de780ed5cf94ed14a5bf5a874db903d41" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is a regular expression that matches only &amp;lsquo;</source>
          <target state="translated">'是仅匹配'的正则表达式</target>
        </trans-unit>
        <trans-unit id="509a63376f144b7a6e92661a781212600bbaac83" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is a regular expression that matches the string &amp;lsquo;</source>
          <target state="translated">'是与字符串'相匹配的正则表达式</target>
        </trans-unit>
        <trans-unit id="7828f1964252a0521c88e38fb5aae45d05815d42" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is a symbolic link to the directory &amp;lsquo;</source>
          <target state="translated">&amp;ldquo;是指向目录的符号链接&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="20aa9ce58b89f15f45a9da4743ba1387fb24a4ac" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is allowed at deeper levels of the list structure also. For example:</source>
          <target state="translated">在列表结构的更深层次也允许使用'。例如：</target>
        </trans-unit>
        <trans-unit id="ea48d3738466fd96ce9a82c87ce5af72c7fde947" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is allowed in &amp;lsquo;</source>
          <target state="translated">允许在&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="28157f1210768cf6701a9a08d484ec5bd6ef2a85" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is also considered a match. This applies to regular expressions, too; thus, &amp;lsquo;</source>
          <target state="translated">'也被认为是比赛。这也适用于正则表达式；因此，</target>
        </trans-unit>
        <trans-unit id="70bf3c006e3498f442f4164a8c0736b03ac1310d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is an integer, not a floating-point number.</source>
          <target state="translated">'是整数，不是浮点数。</target>
        </trans-unit>
        <trans-unit id="ca8c7dd05989a0d8ef4097877e318ce1baa808c4" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is automatically considered risky. The variables &amp;lsquo;</source>
          <target state="translated">会自动被认为具有风险。变量&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="384b12997849ddd3ef116107c32e44d9791b5c43" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is better style; and although &amp;lsquo;</source>
          <target state="translated">'是更好的风格；尽管&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="403acf9c457e7e0cc17f003ab2903e884329cc57" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is clearer.</source>
          <target state="translated">'比较清楚。</target>
        </trans-unit>
        <trans-unit id="fe30c8b7ead8959fa45e2186fd53dfc98a043722" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is concerned.</source>
          <target state="translated">' 被关注到。</target>
        </trans-unit>
        <trans-unit id="4d0c497cc63611d5b00b4dac15067a50a645008e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is copied from the string &lt;code&gt;&quot;abcdefg&quot;&lt;/code&gt;.</source>
          <target state="translated">从字符串 &lt;code&gt;&quot;abcdefg&quot;&lt;/code&gt; 复制。</target>
        </trans-unit>
        <trans-unit id="24f1863bc3936529f9683e1e25f85e1ae9310969" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is created immediately). Meanwhile, the second process is started, and given the name &amp;lsquo;</source>
          <target state="translated">'将立即创建）。同时，第二个过程开始，并命名为&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="7c1ccc5216dc84830669c3b2d17b1cdeb8788995" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is current.</source>
          <target state="translated">'是最新的。</target>
        </trans-unit>
        <trans-unit id="ac3d70f8d50d9b6eb912afd8db54a938ffe2aaf8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is equivalent to &amp;lsquo;</source>
          <target state="translated">'等价于'</target>
        </trans-unit>
        <trans-unit id="cdb19e9bf915276245fb627b15038b23fcb9992a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is equivalent to &lt;code&gt;?&amp;agrave;&lt;/code&gt; and denotes the Unicode character U+00E0. To simplify entering multi-line strings, you can replace spaces in the names by non-empty sequences of whitespace (e.g., newlines).</source>
          <target state="translated">'等效于 &lt;code&gt;?&amp;agrave;&lt;/code&gt; ，表示Unicode字符U + 00E0。为了简化多行字符串的输入，您可以用非空的空白序列（例如，换行符）替换名称中的空格。</target>
        </trans-unit>
        <trans-unit id="c91b4d9cf9922fa27ac0e821e4aaa5dccaf7616b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is excluded.</source>
          <target state="translated">'不包括在内。</target>
        </trans-unit>
        <trans-unit id="673ad73d493b4ae1de178f3d95626e78c764a0df" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is expanded and leading &amp;lsquo;</source>
          <target state="translated">'扩展并领先'</target>
        </trans-unit>
        <trans-unit id="1635b83ddf50e2684993c62531ba1cd247dc2444" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is harmless in modes where a left margin is never used.</source>
          <target state="translated">'在从不使用左边距的模式下无害。</target>
        </trans-unit>
        <trans-unit id="78e70be81437f4427a741141e32f9d92807f040b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is initially empty.</source>
          <target state="translated">'最初是空的。</target>
        </trans-unit>
        <trans-unit id="3acd035b095bf19cc37871791ae65b5751b1f038" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is invalid, and so is a string that ends with a single &amp;lsquo;</source>
          <target state="translated">'是无效的，以单个'结尾的字符串也是无效的</target>
        </trans-unit>
        <trans-unit id="c078afcb3175cdadeb27ef90d4e61fa02ea5c902" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is less clear than &amp;lsquo;</source>
          <target state="translated">&amp;ldquo;不如&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="11e7f66493115de70de64c528dee537a25618e0e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is lexicographically &amp;ldquo;smaller&amp;rdquo; than &amp;lsquo;</source>
          <target state="translated">在字典上比&amp;ldquo;小&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="dc2b806f54031baf39689ed0fdb1624c237e75d5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is like &amp;lsquo;</source>
          <target state="translated">' 就好像 '</target>
        </trans-unit>
        <trans-unit id="2976bd162925c0c6508f9e52b6d51fadd7087073" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is likewise ignored.</source>
          <target state="translated">同样被忽略。</target>
        </trans-unit>
        <trans-unit id="3a77004409a526f3e97f88af5049ea6a36fa42ec" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is lower case.) No I/O.</source>
          <target state="translated">'为小写。）无I / O。</target>
        </trans-unit>
        <trans-unit id="3d2f7c65f3f197291568bd8a06bc92d57a325f97" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is matched by three of the alist &lt;small&gt;CAR&lt;/small&gt;s. All of the matches begin with the characters &amp;lsquo;</source>
          <target state="translated">'与三个有名的&lt;small&gt;CAR&lt;/small&gt;匹配。所有比赛都以字符&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="ed1fe997acb6c25303091be10f599559c9e45d4c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is meant for use in character constants; in string constants, just write the space.</source>
          <target state="translated">'用于字符常量；在字符串常量中，只需写空格。</target>
        </trans-unit>
        <trans-unit id="1e9bba80763798a209de71c33406ed8a7d7ff3e6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is more explicit.</source>
          <target state="translated">'更明确。</target>
        </trans-unit>
        <trans-unit id="ce58dc4440ef3cb2f6299ef60ab067e76c8ec7fe" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is no longer special (except when it starts a character class) but &amp;lsquo;</source>
          <target state="translated">'不再是特殊的（除了启动字符类时除外），而是'</target>
        </trans-unit>
        <trans-unit id="d1f56972790db062d353f5280c4b34a0f1be3627" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is not a special character, so it is ordinary, and therefore &amp;lsquo;</source>
          <target state="translated">'不是特殊字符，所以很普通，因此'</target>
        </trans-unit>
        <trans-unit id="68d67adf289837793c6ac754d1c95e2a9dcc4193" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is not added.</source>
          <target state="translated">'未添加。</target>
        </trans-unit>
        <trans-unit id="400c3166dd89591584668dbbff23a26c47e063cf" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is not echoed after Emacs is suspended. But it is read and executed by the shell.</source>
          <target state="translated">Emacs挂起后不会回显'。但是它是由外壳读取并执行的。</target>
        </trans-unit>
        <trans-unit id="c6bab50331ccfc798cea5da23c3b8e816c5a3834" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is not special here.</source>
          <target state="translated">'在这里不特别。</target>
        </trans-unit>
        <trans-unit id="35e1e7b5bf62a78fbcdc18ffdb27dc6dfa97b47f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is not special in a character alternative unless it is the first character. The character following the &amp;lsquo;</source>
          <target state="translated">除非是第一个字符，否则在替代字符中并不特殊。'之后的字符</target>
        </trans-unit>
        <trans-unit id="ccd125a4eae3d8fb215d3df9880605b5cac90126" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is not special inside a character alternative, it can never remove the special meaning of &amp;lsquo;</source>
          <target state="translated">'在字符替代项内不是特殊的，它永远无法消除'的特殊含义</target>
        </trans-unit>
        <trans-unit id="6e11ba8f1f3d3db27dfee06a53b2061de369d64a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is not used in Emacs Lisp, but it is used in Common Lisp. C also has two string quote characters: double-quote for strings, and apostrophe (&amp;lsquo;</source>
          <target state="translated">'在Emacs Lisp中不使用，但在Common Lisp中使用。C还具有两个字符串引号字符：字符串的双引号和撇号（'</target>
        </trans-unit>
        <trans-unit id="d56c4664c80faa71d8e547bbf91f33b00c9f00d6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is often unreadable. Here are some examples:</source>
          <target state="translated">通常是不可读的。这里有些例子：</target>
        </trans-unit>
        <trans-unit id="fe2e6244334d6ea28ad9785816295b1804b21c55" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is replaced by &amp;lsquo;</source>
          <target state="translated">'替换为'</target>
        </trans-unit>
        <trans-unit id="820b4d2a0fa09ab5b9be3ac83016605de5371286" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is replaced with &amp;lsquo;</source>
          <target state="translated">'替换为'</target>
        </trans-unit>
        <trans-unit id="0de23168336b0d854a9ce59ec29ca35b274f50c0" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is required if the function has an unlimited number of arguments.</source>
          <target state="translated">如果函数具有无限数量的参数，则需要'。</target>
        </trans-unit>
        <trans-unit id="fa601f4dda239c8ba0ae662f0b8a4391031c4829" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is special again and a &amp;lsquo;</source>
          <target state="translated">再次很特别，</target>
        </trans-unit>
        <trans-unit id="62f0edf75cac5828cd5189b444d2aff43f84d729" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is special and &amp;lsquo;</source>
          <target state="translated">'很特别，'</target>
        </trans-unit>
        <trans-unit id="162634062d9897d086922bf0c348d77c91b58ad7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is special if it ends a character alternative (see later). The character &amp;lsquo;</source>
          <target state="translated">如果结束一个替代字符，则'是特殊的（请参阅下文）。人物 '</target>
        </trans-unit>
        <trans-unit id="fc5b65309f24c5c423eca62a2fbab5a5dd75989f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is special inside a character alternative. A &amp;lsquo;</source>
          <target state="translated">'在字符替换里面很特殊。一种 '</target>
        </trans-unit>
        <trans-unit id="9726f58a2bb5d76a5a2f5535ea3673b5ea0fe33d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is special, unless it immediately follows the special &amp;lsquo;</source>
          <target state="translated">'是特殊的，除非它紧跟特殊'</target>
        </trans-unit>
        <trans-unit id="d36c3633c48d2a34efe2bdd33512e3b2bb1f34fe" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is stripped in the &lt;var&gt;target&lt;/var&gt; string.</source>
          <target state="translated">'被剥离到 &lt;var&gt;target&lt;/var&gt; 字符串中。</target>
        </trans-unit>
        <trans-unit id="e326a91217033ddbee42978ba9a517c9eb17fddd" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is the character</source>
          <target state="translated">'是字符</target>
        </trans-unit>
        <trans-unit id="0a7c5cd1edc965030be238b8b00b178a8034ebea" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is the character with code 0.</source>
          <target state="translated">'是代码为0的字符。</target>
        </trans-unit>
        <trans-unit id="aeea9bc324309416a4c99e0f2aa4b44f2b188365" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is the only URI schema supported right now) or a name in a freedesktop.org-compliant icon theme from &amp;lsquo;</source>
          <target state="translated">&amp;ldquo;是目前唯一受支持的URI模式），或者是来自freedesktop.org的图标主题中的名称（来自&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="bb2feefbfc5a9910ebf6d5e0ffc3433ce6f5741b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is the pane label. If Emacs is compiled without X toolkit support, or if a menu is displayed on a text terminal, menu panes are not used; in that case, a &amp;lsquo;</source>
          <target state="translated">'是窗格标签。如果Emacs是在没有X工具包支持的情况下编译的，或者在文本终端上显示菜单，则不使用菜单窗格；在这种情况下，</target>
        </trans-unit>
        <trans-unit id="d3b1cea2bacb110c8bc8ecd7512fa7ac32efe0d0" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is the prefix to substitute an environment variable value. If the input contains &amp;lsquo;</source>
          <target state="translated">'是替换环境变量值的前缀。如果输入包含&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="f6ccf36e110259a6e435bc7978e6e023e90267b6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is the printed representation for an interned symbol whose name is an empty string. Furthermore, &amp;lsquo;</source>
          <target state="translated">'是名称为空字符串的嵌入式符号的打印表示形式。此外，</target>
        </trans-unit>
        <trans-unit id="c8ade1fd4c331ae90bfc52343cd1757de912522f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is the printed representation for an uninterned symbol whose name is &lt;var&gt;foo&lt;/var&gt;. (Normally, the Lisp reader interns all symbols; see &lt;a href=&quot;creating-symbols#Creating-Symbols&quot;&gt;Creating Symbols&lt;/a&gt;.)</source>
          <target state="translated">'是名称为 &lt;var&gt;foo&lt;/var&gt; 的未中断符号的打印表示。（通常，Lisp阅读器会插入所有符号；请参阅&lt;a href=&quot;creating-symbols#Creating-Symbols&quot;&gt;创建符号&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="1dce214ab935a6830c957397896ba237de24f480" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is the read syntax for a cons cell whose &lt;small&gt;CAR&lt;/small&gt; is &lt;code&gt;a&lt;/code&gt; and whose &lt;small&gt;CDR&lt;/small&gt; is the number 5.</source>
          <target state="translated">'是一个cons单元的读语法，该单元的&lt;small&gt;CAR&lt;/small&gt;为 &lt;code&gt;a&lt;/code&gt; ，&lt;small&gt;CDR&lt;/small&gt;为5。</target>
        </trans-unit>
        <trans-unit id="038644cfaa5082c5fa364bd04d3985485c2b7faf" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is the same as &amp;lsquo;</source>
          <target state="translated">' 是相同的 '</target>
        </trans-unit>
        <trans-unit id="1a397343cee3bfb008ec608d273846414790ac94" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is the starting list count:</source>
          <target state="translated">'是起始列表计数：</target>
        </trans-unit>
        <trans-unit id="d5cd8a3202ea3c887411631ef500ec8b50f51d20" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is the way to write the open-paren character. Likewise, if the character is &amp;lsquo;</source>
          <target state="translated">'是书写开放字符的方式。同样，如果字符为&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="b0979bd6bdd62223dddf46955754eb8fe9ca3eb5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is too short). Both of those begin with the string &amp;lsquo;</source>
          <target state="translated">'太短）。两者都以字符串'</target>
        </trans-unit>
        <trans-unit id="53d81175c31b046b38f7885d4998dbb79fbc198d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is treated as if it were first (in other words, &amp;lsquo;</source>
          <target state="translated">'被视为第一（换句话说，'</target>
        </trans-unit>
        <trans-unit id="58fa3ca9aa94def726e00cd4ff0e36b67483b1a2" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is treated specially. If a &amp;lsquo;</source>
          <target state="translated">'特地对待。如果一个 '</target>
        </trans-unit>
        <trans-unit id="704a0f3c068b5c3a85050dff83aa92bde306cb6d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is undefined and can&amp;rsquo;t match anything. But it can match &amp;lsquo;</source>
          <target state="translated">'是未定义的，不能匹配任何内容。但它可以匹配&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="6e47eef5e6bc570277d8ee62fa0f58044c94f8c7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is upper case.) No I/O.</source>
          <target state="translated">'为大写。）无I / O。</target>
        </trans-unit>
        <trans-unit id="91bdfbf6e3875a125cbbff4469a5b86023d44be0" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is used to avoid confusing the Emacs motion commands.) The calling convention specified in this way appears in help messages in place of the one derived from the actual arguments of the function.</source>
          <target state="translated">'用于避免混淆Emacs运动命令。）以这种方式指定的调用约定出现在帮助消息中，而不是从函数的实际参数派生的约定。</target>
        </trans-unit>
        <trans-unit id="d8472adda6ff2888c022896cdc8b521126ba16d7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is used. See &lt;a href=&quot;signaling-errors#Definition-of-signal&quot;&gt;Definition of signal&lt;/a&gt;.</source>
          <target state="translated">' 用来。请参阅&lt;a href=&quot;signaling-errors#Definition-of-signal&quot;&gt;信号的定义&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4dc29ef87002bedee6c562b5bb672a803452cd8d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is valid, &amp;lsquo;</source>
          <target state="translated">' 已验证， '</target>
        </trans-unit>
        <trans-unit id="19762136dce095273e2593b20f62d4f63c67dff0" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; is written as &amp;lsquo;</source>
          <target state="translated">'写为'</target>
        </trans-unit>
        <trans-unit id="d41e1906c39cf7321f4937eee3fa6f85de7777fd" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; it may be reformatted, with undesirable results. Instead, use &lt;code&gt;(error &quot;%s&quot;
&lt;var&gt;string&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">可能会重新格式化，但结果不理想。而是使用 &lt;code&gt;(error &quot;%s&quot; &lt;var&gt;string&lt;/var&gt;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0919b1e26b967ff72695ecb3db57c721bfa75172" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; it may be reformatted, with undesirable results. Instead, use &lt;code&gt;(message
&quot;%s&quot; &lt;var&gt;string&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">可能会重新格式化，但结果不理想。而是使用 &lt;code&gt;(message &quot;%s&quot; &lt;var&gt;string&lt;/var&gt;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e6ae20b3327fe4e5b898dd2f6da72c551ea6ba01" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; itself are also copied, but those of the object take priority.</source>
          <target state="translated">'本身也被复制，但是对象的优先。</target>
        </trans-unit>
        <trans-unit id="de348be0975f54cd51aa2128c3d28f73b56fdbca" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; itself does not appear in the echo area.</source>
          <target state="translated">'本身不会出现在回声区域中。</target>
        </trans-unit>
        <trans-unit id="175912a67450457c4afbb9711c8565c5da711e0c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; labels and &amp;lsquo;</source>
          <target state="translated">'标签和'</target>
        </trans-unit>
        <trans-unit id="feb1eb8c6393e8c73095f64490e9be2ae7a57a63" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; left to match, so this try fails. The next alternative is for &amp;lsquo;</source>
          <target state="translated">'匹配，因此此尝试失败。下一个选择是</target>
        </trans-unit>
        <trans-unit id="f60e08a87eb663632e1df3d9999e2e94eb4d16f9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; level is normally the same as level 1. It is used when &lt;code&gt;font-lock-maximum-decoration&lt;/code&gt; has a &lt;code&gt;nil&lt;/code&gt; value. See &lt;a href=&quot;levels-of-font-lock#Levels-of-Font-Lock&quot;&gt;Levels of Font Lock&lt;/a&gt;.</source>
          <target state="translated">'level通常与1级相同。当 &lt;code&gt;font-lock-maximum-decoration&lt;/code&gt; 的值为 &lt;code&gt;nil&lt;/code&gt; 时使用。请参阅&lt;a href=&quot;levels-of-font-lock#Levels-of-Font-Lock&quot;&gt;字体锁定级别&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9af53348df52711604fb932fdfa9669adff33030" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; level of fontification, the next symbol level 1 fontification, the next level 2, and so on. The &amp;lsquo;</source>
          <target state="translated">'字体级别，下一个符号级别1字体，下一个级别2，依此类推。'</target>
        </trans-unit>
        <trans-unit id="ad8a19c6c8a22a5cce4a4214827648d7b3981847" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; like one of type &amp;lsquo;</source>
          <target state="translated">'像一种类型'</target>
        </trans-unit>
        <trans-unit id="2113b65d4db46fb7e318576b43874765d9c43ba3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; line (using &lt;code&gt;interpreter-mode-alist&lt;/code&gt;), on the text at the beginning of the buffer (using &lt;code&gt;magic-mode-alist&lt;/code&gt;), and finally on the visited file name (using &lt;code&gt;auto-mode-alist&lt;/code&gt;). See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Choosing-Modes.html#Choosing-Modes&quot;&gt;How Major Modes are Chosen&lt;/a&gt; in</source>
          <target state="translated">'行（使用 &lt;code&gt;interpreter-mode-alist&lt;/code&gt; ），在缓冲区开头的文本上（使用 &lt;code&gt;magic-mode-alist&lt;/code&gt; ），最后在访问的文件名上（使用 &lt;code&gt;auto-mode-alist&lt;/code&gt; ）。请参阅&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Choosing-Modes.html#Choosing-Modes&quot;&gt;如何主要模式被选择&lt;/a&gt;的</target>
        </trans-unit>
        <trans-unit id="4c150d15183d3ee27616803eb8424e0fa3f5737c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; line or at the end of the file. The variable &lt;code&gt;enable-local-variables&lt;/code&gt; controls whether to do so. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/File-Variables.html#File-Variables&quot;&gt;Local Variables in Files&lt;/a&gt; in</source>
          <target state="translated">'行或文件末尾。变量 &lt;code&gt;enable-local-variables&lt;/code&gt; 控制是否这样做。请参见&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/File-Variables.html#File-Variables&quot;&gt;中的文件&lt;/a&gt;中的局部变量</target>
        </trans-unit>
        <trans-unit id="a915c013be926df2da690c878ccecf9a00409577" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; line or the local variables list are ignored, and the other settings are applied. If &lt;var&gt;handle-mode&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, all the file local variables are set.</source>
          <target state="translated">'行或局部变量列表将被忽略，并应用其他设置。如果 &lt;var&gt;handle-mode&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则设置所有文件局部变量。</target>
        </trans-unit>
        <trans-unit id="3b5631d4200df156b834d7dda77e88e1432e8c0e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; line or the local variables list specifies one, and &lt;code&gt;nil&lt;/code&gt; otherwise. It does not set the mode or any other file-local variable. If &lt;var&gt;handle-mode&lt;/var&gt; has any value other than &lt;code&gt;nil&lt;/code&gt; or &lt;code&gt;t&lt;/code&gt;, any settings of &amp;lsquo;</source>
          <target state="translated">'行或局部变量列表指定一个，否则为 &lt;code&gt;nil&lt;/code&gt; 。它不会设置模式或任何其他文件本地变量。如果 &lt;var&gt;handle-mode&lt;/var&gt; 的值不是 &lt;code&gt;nil&lt;/code&gt; 或 &lt;code&gt;t&lt;/code&gt; ，则任何'</target>
        </trans-unit>
        <trans-unit id="54bd1877bfbfc23f5641b80f273522907ec89aee" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; line, as well as the leading comment characters in the commentary itself.)</source>
          <target state="translated">'行，以及评论本身中的前导评论字符。）</target>
        </trans-unit>
        <trans-unit id="178854747c9bbea35d551e55f65ebd1b5c62acdc" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; line, on any &amp;lsquo;</source>
          <target state="translated">'在任何'</target>
        </trans-unit>
        <trans-unit id="f884e0629d08d6e32dc896c3303314c964b876b1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; line, or near the end of the file, for any mode tag.</source>
          <target state="translated">'行或文件末尾附近的任何模式标签。</target>
        </trans-unit>
        <trans-unit id="d3c71d3e9e102729c5fc3200b585e93328d92365" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; line. &lt;code&gt;set-auto-mode&lt;/code&gt; does that, also taking &lt;code&gt;enable-local-variables&lt;/code&gt; into account (see &lt;a href=&quot;auto-major-mode#Auto-Major-Mode&quot;&gt;Auto Major Mode&lt;/a&gt;).</source>
          <target state="translated">'行。 &lt;code&gt;set-auto-mode&lt;/code&gt; 可以做到这一点，同时还要考虑 &lt;code&gt;enable-local-variables&lt;/code&gt; （请参阅&lt;a href=&quot;auto-major-mode#Auto-Major-Mode&quot;&gt;Auto Major Mode&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="7bff6caee8800706ab06b3524fcade0ecd5d9566" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; line. Its value is an alist with elements of the form &lt;code&gt;(&lt;var&gt;regexp&lt;/var&gt; . &lt;var&gt;mode&lt;/var&gt;)&lt;/code&gt;; this says to use mode &lt;var&gt;mode&lt;/var&gt; if the file specifies an interpreter which matches &lt;code&gt;\\`&lt;var&gt;regexp&lt;/var&gt;\\'&lt;/code&gt;. For example, one of the default elements is &lt;code&gt;(&quot;python[0-9.]*&quot; . python-mode)&lt;/code&gt;.</source>
          <target state="translated">'行。它的值是与以下形式的元素的ALIST &lt;code&gt;(&lt;var&gt;regexp&lt;/var&gt; . &lt;var&gt;mode&lt;/var&gt;)&lt;/code&gt; ; 这表示如果文件指定了与 &lt;code&gt;\\`&lt;var&gt;regexp&lt;/var&gt;\\'&lt;/code&gt; &lt;var&gt;regexp&lt;/var&gt; \\'匹配的解释器，则使用模式 &lt;var&gt;mode&lt;/var&gt; 。例如，默认元素之一是 &lt;code&gt;(&quot;python[0-9.]*&quot; . python-mode)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3a5f1041e487981b5f9b52ce255eb5c43674ec4b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; lines or local variables lists in files being visited. A value of &lt;code&gt;t&lt;/code&gt; means process them unconditionally; &lt;code&gt;nil&lt;/code&gt; means ignore them; anything else means ask the user what to do for each file. The default value is &lt;code&gt;maybe&lt;/code&gt;.</source>
          <target state="translated">'行或局部变量在要访问的文件中列出。 &lt;code&gt;t&lt;/code&gt; 值表示无条件处理它们； &lt;code&gt;nil&lt;/code&gt; 意味着忽略它们；其他任何方法都意味着询问用户对每个文件做什么。默认值 &lt;code&gt;maybe&lt;/code&gt; 是。</target>
        </trans-unit>
        <trans-unit id="d1ec4d6e13800d9da30c82c79878494a1a0ff9a9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; literally.</source>
          <target state="translated">从字面上看。</target>
        </trans-unit>
        <trans-unit id="74f008ef8e139675465fca72d719680179644473" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; literally. There are no characters with special meaning, unlike in string regexps.</source>
          <target state="translated">从字面上看。与字符串正则表达式不同，没有特殊含义的字符。</target>
        </trans-unit>
        <trans-unit id="e08b22bed0f02d1fab86b95ea089ae164e77d65f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; local variable in the &amp;lsquo;</source>
          <target state="translated">'中的局部变量</target>
        </trans-unit>
        <trans-unit id="83ea15dd1533d02a07b921ba06eec4898c23d595" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; local variable near the end of a file, on the &amp;lsquo;</source>
          <target state="translated">'位于文件末尾的本地变量，位于'</target>
        </trans-unit>
        <trans-unit id="fd4733940f675dc6a79b838fd161a249bbd64060" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches &amp;lsquo;</source>
          <target state="translated">' 火柴 '</target>
        </trans-unit>
        <trans-unit id="b264329fc0c545c4c70d0f1f5af6be983d8e3e92" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches a &amp;lsquo;</source>
          <target state="translated">'匹配'</target>
        </trans-unit>
        <trans-unit id="a8552c44486f126ade2449f530358c7c19e1ec53" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches a string of one &amp;lsquo;</source>
          <target state="translated">'匹配一个字符串'</target>
        </trans-unit>
        <trans-unit id="17e7b84599d394be5ee6471f89264954e8628df5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches all characters &lt;em&gt;except&lt;/em&gt; ASCII letters and digits.</source>
          <target state="translated">'匹配&lt;em&gt;除&lt;/em&gt;ASCII字母和数字&lt;em&gt;外的&lt;/em&gt;所有字符。</target>
        </trans-unit>
        <trans-unit id="294aa4be8d0ff8c89288ef0e319e2caa0ef19ad8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches all three of these special characters. You cannot use &amp;lsquo;</source>
          <target state="translated">'匹配所有这三个特殊字符。您不能使用&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="c1389f7346bfb348d0bb9c06adffe885e3ec29f7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches all three strings.</source>
          <target state="translated">'匹配所有三个字符串。</target>
        </trans-unit>
        <trans-unit id="f1f0d1deae19f58febbb1d537f0b52e0162536a7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches any</source>
          <target state="translated">'匹配任何</target>
        </trans-unit>
        <trans-unit id="0c53d2ade6e13283c99679316175bbf7459a8ccf" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches any character, including newline. However, a reversed range should always be from the letter &amp;lsquo;</source>
          <target state="translated">'匹配任何字符，包括换行符。但是，反向范围应始终从字母&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="9ddfdc0fe6523ac99a79fd09a3045cb9e9b9c2bf" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches any digit, as well as &amp;lsquo;</source>
          <target state="translated">'匹配任何数字，以及'</target>
        </trans-unit>
        <trans-unit id="2c293d27bb4c97a9bcc525ed1eb05e3efaea1cbe" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches any lower-case</source>
          <target state="translated">'匹配任何小写字母</target>
        </trans-unit>
        <trans-unit id="96654b579a952f7d53fba4f4bd32b0aedf530bdd" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches any newline-free string that is composed of two identical halves. The &amp;lsquo;</source>
          <target state="translated">'匹配由两个相同的两半组成的任何无换行的字符串。'</target>
        </trans-unit>
        <trans-unit id="ac1a32efde596fdd486ffb81b7783ad10b2b5ba6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches any non-</source>
          <target state="translated">'匹配任何非</target>
        </trans-unit>
        <trans-unit id="b0b3d00af5b0c16a25908fcf7d2de55c0ba06961" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches any number of &amp;lsquo;</source>
          <target state="translated">'匹配任意数量的'</target>
        </trans-unit>
        <trans-unit id="0637debf36412f536b11fc3ca78671e8915b0e9a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches any occurrence of &amp;lsquo;</source>
          <target state="translated">'匹配任何出现的'</target>
        </trans-unit>
        <trans-unit id="6eb7fe231bb7871032ddc960c23bf7423a1f7675" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches any string composed of just &amp;lsquo;</source>
          <target state="translated">'匹配仅由'组成的任何字符串</target>
        </trans-unit>
        <trans-unit id="43c98413b4eee7806522468b3ac46c96c7e1a216" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches at the beginning of the buffer (or string) only if a symbol-constituent character follows.</source>
          <target state="translated">'仅在后面有符号组成的字符时才在缓冲区（或字符串）的开头匹配。</target>
        </trans-unit>
        <trans-unit id="05c3a2fc74da4a597e4793ebff454c4a4eef7688" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches at the beginning of the buffer (or string) only if a word-constituent character follows.</source>
          <target state="translated">'仅在后面有单词组成的字符时才在缓冲区（或字符串）的开头匹配。</target>
        </trans-unit>
        <trans-unit id="c4d641489ad2d1c4292618d0cad2a5025905d98f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches at the beginning of the string or after a newline character.</source>
          <target state="translated">'在字符串开头或换行符后匹配。</target>
        </trans-unit>
        <trans-unit id="b1477b3a9226dfe1efe3022ff36d644ef3762a13" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches at the beginning or end of the buffer (or string) regardless of what text appears next to it.</source>
          <target state="translated">'匹配缓冲区（或字符串）的开头或结尾，而不管其旁边显示什么文本。</target>
        </trans-unit>
        <trans-unit id="daec0aa6e852548c762064870cca1e235e071884" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches at the end of the buffer (or string) only if the contents end with a symbol-constituent character.</source>
          <target state="translated">'仅在内容以符号组成的字符结尾时才在缓冲区（或字符串）的末尾匹配。</target>
        </trans-unit>
        <trans-unit id="125b9068b1a8ea37d93c2695fbdd7149d8fae615" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches at the end of the buffer (or string) only if the contents end with a word-constituent character.</source>
          <target state="translated">'仅在内容以单词组成的字符结尾时才在缓冲区（或字符串）的末尾匹配。</target>
        </trans-unit>
        <trans-unit id="07a214ad78b8eac47137312d416eab542c3c39c4" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches at the end of the string or before a newline character.</source>
          <target state="translated">'在字符串末尾或换行符前匹配。</target>
        </trans-unit>
        <trans-unit id="0ead1717225ccad2a526bcb251b8b3db8eac4cf2" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches either &amp;lsquo;</source>
          <target state="translated">'匹配'</target>
        </trans-unit>
        <trans-unit id="6e141fd122b27cf46985e62468b73e7795dd6404" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches either one &amp;lsquo;</source>
          <target state="translated">&amp;ldquo;匹配一个&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="acaba64446380add50c125375f2756d49a1db29a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches only ASCII letters, even outside the C or POSIX locale.</source>
          <target state="translated">'即使在C或POSIX语言环境之外，也仅匹配ASCII字母。</target>
        </trans-unit>
        <trans-unit id="b8f009c35f1db00d09ad3dbd87f368e865307525" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches string such as &amp;lsquo;</source>
          <target state="translated">'匹配诸如'</target>
        </trans-unit>
        <trans-unit id="5b517d364aa6e997733965346f12e796b3972264" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches the empty string, but only at the beginning of a line in the text being matched (or the beginning of the accessible portion of the buffer). Otherwise it fails to match anything. Thus, &amp;lsquo;</source>
          <target state="translated">'匹配空字符串，但仅匹配文本中一行的开头（或缓冲区可访问部分的开头）。否则，它将无法匹配任何内容。因此，</target>
        </trans-unit>
        <trans-unit id="edbf5fb2bde6df6b209cc67502eacbccb247d31d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches the first half, which may be anything, but the &amp;lsquo;</source>
          <target state="translated">'匹配前半部分，可能是任何东西，但'</target>
        </trans-unit>
        <trans-unit id="1e17b3c51402b2cef4651bd936e4059170abca14" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches the string &amp;lsquo;</source>
          <target state="translated">'匹配字符串'</target>
        </trans-unit>
        <trans-unit id="6e0dadb6b2846d03cc6bc0a7f4c75c87c53f3321" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches the strings &amp;lsquo;</source>
          <target state="translated">'匹配字符串'</target>
        </trans-unit>
        <trans-unit id="5e95d23076884d4c5b49982a66ce30bb3d482492" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; matches the whole string; but the regular expression &amp;lsquo;</source>
          <target state="translated">'匹配整个字符串；但是正则表达式'</target>
        </trans-unit>
        <trans-unit id="718db940cd7b0671976f68f3a0e662573b99a08f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; may be absent.</source>
          <target state="translated">'可能不存在。</target>
        </trans-unit>
        <trans-unit id="86b51b1492ca1577d3b9cdc1913f801542474d5b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; meaning Universal Time.</source>
          <target state="translated">'表示世界时间。</target>
        </trans-unit>
        <trans-unit id="44d64f62f81ef6965ee911104b948f23f5e2a021" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; means &lt;var&gt;c&lt;/var&gt; is the second character of such a sequence.</source>
          <target state="translated">'表示 &lt;var&gt;c&lt;/var&gt; 是此类序列的第二个字符。</target>
        </trans-unit>
        <trans-unit id="34b1ab210febc7526e23a4f3326455b54b986ffa" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; means &lt;var&gt;c&lt;/var&gt; is the start of a two-character comment-end sequence.</source>
          <target state="translated">'表示 &lt;var&gt;c&lt;/var&gt; 是两个字符的注释结束序列的开始。</target>
        </trans-unit>
        <trans-unit id="7acbb8ff84ed65dc805339e6bf730ff98a6e2848" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; means &lt;var&gt;c&lt;/var&gt; is the start of a two-character comment-start sequence.</source>
          <target state="translated">'表示 &lt;var&gt;c&lt;/var&gt; 是两个字符的注释开始序列的开始。</target>
        </trans-unit>
        <trans-unit id="a7dfd59e1f2ed42738d2fab363719f884a91a44e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; means that &lt;var&gt;c&lt;/var&gt; as a comment delimiter belongs to the alternative &amp;ldquo;b&amp;rdquo; comment style. For a two-character comment starter, this flag is only significant on the second char, and for a 2-character comment ender it is only significant on the first char.</source>
          <target state="translated">'表示 &lt;var&gt;c&lt;/var&gt; 作为注释定界符属于替代的&amp;ldquo; b&amp;rdquo;注释样式。对于两个字符的注释启动器，此标志仅在第二个字符上有效，对于两个字符的注释提供者，此标志仅在第一个字符上有效。</target>
        </trans-unit>
        <trans-unit id="86ab2b219dbbca9b3e02f4641a558ba0434ca241" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; means that &lt;var&gt;c&lt;/var&gt; as a comment delimiter belongs to the alternative &amp;ldquo;c&amp;rdquo; comment style. For a two-character comment delimiter, &amp;lsquo;</source>
          <target state="translated">'表示 &lt;var&gt;c&lt;/var&gt; 作为注释定界符属于替代的&amp;ldquo; c&amp;rdquo;注释样式。对于两个字符的注释定界符，&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="215e954c8804b0f1297a992964c3e1bd522d2762" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; means that &lt;var&gt;optional-arg&lt;/var&gt; is optional and &amp;lsquo;</source>
          <target state="translated">'表示 &lt;var&gt;optional-arg&lt;/var&gt; 是可选的，而'</target>
        </trans-unit>
        <trans-unit id="d4d236a29df33a2ddffd1a28d970d131eb4255dc" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; means that the following character is a control character and &amp;lsquo;</source>
          <target state="translated">'表示后面的字符是控制字符，而'</target>
        </trans-unit>
        <trans-unit id="4f1afbf791bd451277513b2e3e3d6381dfa2149d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; means that the following character is a meta character. Thus, the string &lt;code&gt;&quot;\M-x&quot;&lt;/code&gt; is read as containing a single</source>
          <target state="translated">'表示后面的字符是元字符。因此，字符串 &lt;code&gt;&quot;\M-x&quot;&lt;/code&gt; 被视为包含单个</target>
        </trans-unit>
        <trans-unit id="c2d5024e1b645dbf6fa17efa834cb71ebd6a3696" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; means to decrease the size by 40%. The default is 20%.</source>
          <target state="translated">表示将尺寸减小40％。默认值为20％。</target>
        </trans-unit>
        <trans-unit id="48bfde35c330137d92341faead16d982b4480466" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; means to increase the size by 40%. The default is 20%.</source>
          <target state="translated">表示将尺寸增加40％。默认值为20％。</target>
        </trans-unit>
        <trans-unit id="fbe2428f1b1960fbdcd62020a852b09469ae49a5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; means to pad this with zeros to 3 positions, &amp;lsquo;</source>
          <target state="translated">'表示将零填充到3个位置，'</target>
        </trans-unit>
        <trans-unit id="8ba4edc322a51e49d1ae0fc74bcef52906aa171a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; means to use the current locale&amp;rsquo;s alternative representation of numbers, instead of the ordinary decimal digits. This is allowed with most letters, all the ones that output numbers.</source>
          <target state="translated">'表示使用当前语言环境的数字替代表示形式，而不是普通的十进制数字。大多数字母都允许这样做，所有字母都可以输出数字。</target>
        </trans-unit>
        <trans-unit id="ca84a1083a7441d555e1efe80deba59009304d6e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; menu (under &amp;lsquo;</source>
          <target state="translated">'菜单（在'</target>
        </trans-unit>
        <trans-unit id="ee9e3ecbcef3d6b6885b1747234e0d35b512b954" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; menu bar item. The main reason to suppress a global menu bar item is to regain space for mode-specific items.</source>
          <target state="translated">'菜单栏项。禁止显示全局菜单栏项目的主要原因是为特定于模式的项目重新获得空间。</target>
        </trans-unit>
        <trans-unit id="347829944a3f24d8e08b958220e651146a155942" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; menu bar item:</source>
          <target state="translated">'菜单栏项：</target>
        </trans-unit>
        <trans-unit id="ae6791e92fc256978f6f0f36c748b35aabab6c14" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; menu in the menu bar, and it uses the extended menu item format (see &lt;a href=&quot;extended-menu-items#Extended-Menu-Items&quot;&gt;Extended Menu Items&lt;/a&gt;). First we create the keymap, and give it a name:</source>
          <target state="translated">菜单栏中的'菜单，它使用扩展菜单项格式（请参阅&lt;a href=&quot;extended-menu-items#Extended-Menu-Items&quot;&gt;扩展菜单项&lt;/a&gt;）。首先，我们创建键盘映射，并为其命名：</target>
        </trans-unit>
        <trans-unit id="b49a75bc61bfa620cf82e0167cae826b87881c0d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; menu item normally appears at the end of the menu bar, following local menu items.</source>
          <target state="translated">'菜单项通常显示在菜单栏的末尾，紧随本地菜单项。</target>
        </trans-unit>
        <trans-unit id="78b41d2a04230429de9527fac941033146511cc7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; menu of Shell mode, after the item &lt;code&gt;break&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt; 后，在Shell模式的'菜单中：</target>
        </trans-unit>
        <trans-unit id="f161b19f209158a0672caf11e5d5a7e3104e1d2d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; merely quotes the letter &amp;lsquo;</source>
          <target state="translated">&amp;ldquo;仅引用字母&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="bb187ab38f8c46760fecdabfabe14322af8e158f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; message is displayed unless &lt;var&gt;nomsg&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">除非 &lt;var&gt;nomsg&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ,否则显示消息。</target>
        </trans-unit>
        <trans-unit id="010ea9c58dd482491fbcdbaabf85cd811851b7ce" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; method. For all other connection methods, runtime tests are performed.</source>
          <target state="translated">' 方法。对于所有其他连接方法，将执行运行时测试。</target>
        </trans-unit>
        <trans-unit id="d350f1a2716f7a8f9b2e5f19ec69f8f40d5cd2a0" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; more than once in a single command&amp;rsquo;s interactive specification. If the key sequence that invoked the command has &lt;var&gt;n&lt;/var&gt; events that are lists, the &lt;var&gt;n&lt;/var&gt;th &amp;lsquo;</source>
          <target state="translated">在单个命令的交互式规范中不止一次。如果调用命令的按键序列具有 &lt;var&gt;n&lt;/var&gt; 事件是列表中， &lt;var&gt;n&lt;/var&gt; 日&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="0cb689ebaee5a5b4252a1ee92c3308b32d6d2c45" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; must be a place where an additional form can be evaluated and its value ignored. (If the value of &lt;code&gt;(debug)&lt;/code&gt; isn&amp;rsquo;t ignored, it will alter the execution of the program!) The most common suitable places are inside a &lt;code&gt;progn&lt;/code&gt; or an implicit &lt;code&gt;progn&lt;/code&gt; (see &lt;a href=&quot;sequencing#Sequencing&quot;&gt;Sequencing&lt;/a&gt;).</source>
          <target state="translated">'必须是可以评估其他形式且其值被忽略的地方。（如果不忽略 &lt;code&gt;(debug)&lt;/code&gt; 的值，它将改变程序的执行！）最常见的合适位置是在 &lt;code&gt;progn&lt;/code&gt; 或隐式 &lt;code&gt;progn&lt;/code&gt; 中（请参见&lt;a href=&quot;sequencing#Sequencing&quot;&gt;Sequencing&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="d03c3f207325be73f1eecd6c52e5512446794f55" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; must be doubled when written in a string in Emacs Lisp.</source>
          <target state="translated">在Emacs Lisp中以字符串编写时，必须将其加倍。</target>
        </trans-unit>
        <trans-unit id="01229be91d4fc10e776acdd80860c098341c2bb7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; never uses the prefix argument. Prompt.</source>
          <target state="translated">'从不使用prefix参数。提示。</target>
        </trans-unit>
        <trans-unit id="4f70b9c7058bd4fd58315f6b441a0708a4bf9218" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; nor flag &amp;lsquo;</source>
          <target state="translated">'也不标记'</target>
        </trans-unit>
        <trans-unit id="b26981e2f0b12cfa1593262e15794c6489dfed68" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; normally do not save text for yanking (though they can still be undone); these are deletion functions.</source>
          <target state="translated">'通常不保存文本以备不时之需（尽管仍然可以撤消）；这些是删除功能。</target>
        </trans-unit>
        <trans-unit id="b9d849e5afe353f3961ad3e41c33a21421a153b3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; normally pads to two positions.</source>
          <target state="translated">通常会垫到两个位置。</target>
        </trans-unit>
        <trans-unit id="544040af7d71cc17795062d8e1ce670211367a51" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; not.</source>
          <target state="translated">不是。</target>
        </trans-unit>
        <trans-unit id="dbcb8505b5498ef978265695320ec6dda3077dba" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; not. This lasts until the first unquoted &amp;lsquo;</source>
          <target state="translated">不是。一直持续到第一个未加引号的'</target>
        </trans-unit>
        <trans-unit id="12de9bd14b449570330f1c1e02ef7fd233b084e7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; notation labels the structure that follows it with the label &amp;lsquo;</source>
          <target state="translated">'符号在标签后面的结构上加上标签'</target>
        </trans-unit>
        <trans-unit id="ffaf2beb40eda6b07d55cffcca1164795755324c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; notation references the previously labeled structure. This notation is used for any shared elements of lists or vectors.</source>
          <target state="translated">符号表示先前标记的结构。此符号用于列表或向量的任何共享元素。</target>
        </trans-unit>
        <trans-unit id="2d64795183cac722cd88955ee6835ff5abd7458c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; notation.)</source>
          <target state="translated">'）。</target>
        </trans-unit>
        <trans-unit id="5a926f8ae24946423b6898217dcf427d14e0d88e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; occur after case conversion, if any. Therefore, the strings they substitute are never case-converted.</source>
          <target state="translated">'在大小写转换后（如果有）发生。因此，它们替换的字符串永远不会进行大小写转换。</target>
        </trans-unit>
        <trans-unit id="66a9b72c7961d6e41cdd7c9d8fac6eed1e19b0d4" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; of &amp;lsquo;</source>
          <target state="translated">的&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="095416c1d9816555112d6686a892effbe74654e8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; on GNU and other POSIX-like systems; MS-Windows and MS-DOS recognize both the forward slash and the backslash &amp;lsquo;</source>
          <target state="translated">在GNU和其他类似POSIX的系统上；MS-Windows和MS-DOS都能识别正斜杠和反斜杠'</target>
        </trans-unit>
        <trans-unit id="f4b9057e3e330be2a7337b5f850f02f6e35c82ec" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; on GNU/Linux, that supports complex text layout for scripts which need that. The value must be a list of the form</source>
          <target state="translated">'在GNU / Linux上，支持需要脚本的复杂文本布局。该值必须是以下形式的列表</target>
        </trans-unit>
        <trans-unit id="42694ac85c225404d7a9ec6b4bfec2f8da6028bb" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; on a comment delimiter character specifies that this kind of comment can be nested. Inside such a comment, only comments of the same style will be recognized. For a two-character comment delimiter, &amp;lsquo;</source>
          <target state="translated">注释分隔符上的'表示可以嵌套这种注释。在此类注释中，将仅识别相同样式的注释。对于两个字符的注释定界符，&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="32f268519034a92dbfa88dc7a1eb3c296b87292d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; on either character makes it nestable.</source>
          <target state="translated">每个字符上的'使其可嵌套。</target>
        </trans-unit>
        <trans-unit id="bf672452a6d47e5e5cdc2f4acf39618af46d821d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; on either character makes it of style &amp;ldquo;c&amp;rdquo;.</source>
          <target state="translated">每个字符上的'使其样式为&amp;ldquo; c&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="61c1b1841845a83d5eac8567f4c796d3035086b9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; on the rightmost column indicates a line that wraps. (The display table can specify alternate characters to use for this; see &lt;a href=&quot;display-tables#Display-Tables&quot;&gt;Display Tables&lt;/a&gt;).</source>
          <target state="translated">最右边一列的'表示换行。（显示表可以为此指定备用字符；请参阅&lt;a href=&quot;display-tables#Display-Tables&quot;&gt;显示表&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="70d0175dbbe8a38bd90d58db87d6226f35ecf565" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; only for a modified read-only buffer. See &lt;a href=&quot;buffer-modification#Buffer-Modification&quot;&gt;Buffer Modification&lt;/a&gt;.</source>
          <target state="translated">'仅适用于修改后的只读缓冲区。请参阅&lt;a href=&quot;buffer-modification#Buffer-Modification&quot;&gt;缓冲区修改&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9133b2a75178d009fb279829df6fe382596d0bb4" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; option (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Initial-Options.html#Initial-Options&quot;&gt;Initial Options&lt;/a&gt; in</source>
          <target state="translated">'选项（见&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Initial-Options.html#Initial-Options&quot;&gt;初始选项&lt;/a&gt;中</target>
        </trans-unit>
        <trans-unit id="89ca5e0b8c7096366d5103ea6883183f29175d01" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; option is just passed on to &lt;code&gt;insert-directory-program&lt;/code&gt;, as any other option.</source>
          <target state="translated">选项与其他任何选项一样，仅传递给 &lt;code&gt;insert-directory-program&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b121cd4ff8c953305afc28dc9d4962972bbbb685" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; option to &lt;code&gt;ls&lt;/code&gt; says to describe a directory itself as a file, rather than showing its contents.)</source>
          <target state="translated">' &lt;code&gt;ls&lt;/code&gt; 选项表示将目录本身描述为文件，而不是显示其内容。）</target>
        </trans-unit>
        <trans-unit id="3798b7e6993c4a7e2c48540ad518ce083c518fd1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; option was specified, Emacs looks for the init file in that user&amp;rsquo;s home directory instead.</source>
          <target state="translated">指定了'选项，Emacs会在该用户的主目录中查找init文件。</target>
        </trans-unit>
        <trans-unit id="54d8d5b8e371c1ed89423f41206be0fef01c7f01" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; option was used, then Lisp packages should not load any customization files or user profile.</source>
          <target state="translated">使用'选项，则Lisp软件包不应加载任何自定义文件或用户配置文件。</target>
        </trans-unit>
        <trans-unit id="e7b4dbca616b2ed8cc7b52cc556e65b50922d1f1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; option).</source>
          <target state="translated">' 选项）。</target>
        </trans-unit>
        <trans-unit id="5629dd57aa9a6a7ddef712fe4371ffda6cea9154" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; option, &lt;code&gt;insert-directory&lt;/code&gt; treats it specially, for the sake of dired. However, the normally equivalent short &amp;lsquo;</source>
          <target state="translated">'选项， &lt;code&gt;insert-directory&lt;/code&gt; 为了避免麻烦特别对待它。但是，通常等价的短'</target>
        </trans-unit>
        <trans-unit id="d75c38e2074e4830f8d154559133298f83048f9a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; option.</source>
          <target state="translated">' 选项。</target>
        </trans-unit>
        <trans-unit id="c6a093c07146df74d608747c3cf75985ec62f50d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; or</source>
          <target state="translated">' 要么</target>
        </trans-unit>
        <trans-unit id="c051371f8937469bcb7c2e99a74ceea414f863fe" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; or &amp;lsquo;</source>
          <target state="translated">' 要么 '</target>
        </trans-unit>
        <trans-unit id="077a92dddff7b2f1f571d9884a039cf2b16f1116" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; or a &amp;lsquo;</source>
          <target state="translated">'或'</target>
        </trans-unit>
        <trans-unit id="04335302a8671fd65edefddab6ed803acfdbcfc6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; or a final &amp;lsquo;</source>
          <target state="translated">'或决赛'</target>
        </trans-unit>
        <trans-unit id="29dd0197099105c3c4c1966f445b14f264d1858f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; or a space character. See &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;Syntax Class Table&lt;/a&gt;, for a list of syntax codes and the characters that stand for them.</source>
          <target state="translated">'或空格字符。有关语法代码和代表它们的字符的列表，请参见&lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;语法类表&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="486480c795cd7bd1531aa6d8b0313fb062590858" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; or an integer string like &amp;lsquo;</source>
          <target state="translated">'或类似'的整数字符串</target>
        </trans-unit>
        <trans-unit id="8f19bb5422524ce5947f4298520b65422af6a1e1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; or more at the end of a line.</source>
          <target state="translated">'或更多在行尾。</target>
        </trans-unit>
        <trans-unit id="fca6c61bc6bc00460cdbc335374d3be5ab17409e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; or one &amp;lsquo;</source>
          <target state="translated">&amp;ldquo;或一个&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="6668e68f2e880c9d326e3c1dc1d53e55c2e7859b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; or period. However, the ending character of one range should not be the starting point of another one; for example, &amp;lsquo;</source>
          <target state="translated">或期间。但是，一个范围的结束字符不应作为另一范围的起点；例如， '</target>
        </trans-unit>
        <trans-unit id="216fefe74ac0145ce416f525763d39e28c2d2d79" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; or that &amp;lsquo;</source>
          <target state="translated">' 或者那个 '</target>
        </trans-unit>
        <trans-unit id="70f133a0836fde45b20e98860e7efb8a2086b367" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; otherwise.</source>
          <target state="translated">' 除此以外。</target>
        </trans-unit>
        <trans-unit id="46cf0e824efb593198d3d2f785d219abeb52044b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; otherwise. See &lt;a href=&quot;buffer-modification#Buffer-Modification&quot;&gt;Buffer Modification&lt;/a&gt;.</source>
          <target state="translated">' 除此以外。请参阅&lt;a href=&quot;buffer-modification#Buffer-Modification&quot;&gt;缓冲区修改&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b76791b82d6bd10cfe71a0297807810c4f6fe396" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; otherwise. This differs from &amp;lsquo;</source>
          <target state="translated">' 除此以外。这与&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="652193fe95f48ffd669ff421b5bcacbccbdfdead" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; package, version 1.0 or higher. See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/elisp/Library-Headers.html#Library-Headers&quot;&gt;Library Headers&lt;/a&gt;, for a description of the &amp;lsquo;</source>
          <target state="translated">'软件包，版本1.0或更高版本。见&lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/elisp/Library-Headers.html#Library-Headers&quot;&gt;库头&lt;/a&gt;，为'的说明</target>
        </trans-unit>
        <trans-unit id="8b34e15406aa977d406034ff41682e3b170553cd" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; pads with blanks, &amp;lsquo;</source>
          <target state="translated">'垫有空白'</target>
        </trans-unit>
        <trans-unit id="bf731df80c868747aafe439e86a43b5185fc2a82" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; pads with zeros and also puts &amp;lsquo;</source>
          <target state="translated">'用零填充，也放'</target>
        </trans-unit>
        <trans-unit id="d6d07d69825434df6d52c014d63ac5a457fe2519" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; pads with zeros, &amp;lsquo;</source>
          <target state="translated">'用零填充，'</target>
        </trans-unit>
        <trans-unit id="b4cba6e5d1e8e0928608effa2ba12ebf8b6edc50" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; pads with zeros, because that is how &amp;lsquo;</source>
          <target state="translated">'用零填充，因为这就是'</target>
        </trans-unit>
        <trans-unit id="60c55b5c91fb20216ff33d8b40ba243abc5f98b2" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; parenthesis grouping in &lt;var&gt;record-regexp&lt;/var&gt; is the sort key.</source>
          <target state="translated">&lt;var&gt;record-regexp&lt;/var&gt; 中的括号分组是排序键。</target>
        </trans-unit>
        <trans-unit id="8a2c2f24b1e5b7329e56dfc1f9b2e7fdc9de9b3e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; pattern. For these reasons, both these file extensions are members of the list &lt;code&gt;inhibit-local-variables-regexps&lt;/code&gt;. Add patterns to this list to prevent Emacs searching them for local variables of any kind (not just mode specifiers).</source>
          <target state="translated">模式。由于这些原因，这两个文件扩展名都是 &lt;code&gt;inhibit-local-variables-regexps&lt;/code&gt; 。在此列表中添加模式，以防止Emacs在它们中搜索任何类型的局部变量（而不仅仅是模式说明符）。</target>
        </trans-unit>
        <trans-unit id="bf5d2e5e4c3a3bd0bcf027a317606663fa3e716d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; precedes it.</source>
          <target state="translated">'优先于此。</target>
        </trans-unit>
        <trans-unit id="555dac212b7e50742fe2a952c64d60bd4156c199" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; prefix follows modifier key prefixes such as &amp;lsquo;</source>
          <target state="translated">'前缀后跟修饰符前缀，例如'</target>
        </trans-unit>
        <trans-unit id="f24cb7ff797afc905a543ea276971f42fd7adbc9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; prefix follows the modifier key prefixes such as &amp;lsquo;</source>
          <target state="translated">'前缀紧跟修饰键前缀，例如'</target>
        </trans-unit>
        <trans-unit id="4866cbc96ea0e6d9c21fb354b1cc9d7a10dd6c84" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; prepended to the Lisp name, with all dashes (&amp;lsquo;</source>
          <target state="translated">'在Lisp名称前加上所有破折号（'</target>
        </trans-unit>
        <trans-unit id="583ff272b7d9f789e634e3c3c6ba53e1f3aaa169" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; prompts the user with &amp;lsquo;</source>
          <target state="translated">'以'提示用户</target>
        </trans-unit>
        <trans-unit id="ee01bf272a276165afb1530b7bc5a39914739352" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; property (see &lt;a href=&quot;character-properties#Character-Properties&quot;&gt;Character Properties&lt;/a&gt;) indicates they are alphabetic characters.</source>
          <target state="translated">'属性（请参阅&amp;ldquo;&lt;a href=&quot;character-properties#Character-Properties&quot;&gt;字符属性&amp;rdquo;&lt;/a&gt;）指示它们是字母字符。</target>
        </trans-unit>
        <trans-unit id="65af1bfe6bbdccc9d21b00819c583907c5184825" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; property (see &lt;a href=&quot;character-properties#Character-Properties&quot;&gt;Character Properties&lt;/a&gt;) indicates they are alphabetic or decimal number characters.</source>
          <target state="translated">'属性（请参阅&amp;ldquo;&lt;a href=&quot;character-properties#Character-Properties&quot;&gt;字符属性&amp;rdquo;&lt;/a&gt;）表示它们是字母或十进制数字字符。</target>
        </trans-unit>
        <trans-unit id="9578be96f22bde7c099791d5feffbd5d0286d5ff" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; property (see &lt;a href=&quot;character-properties#Character-Properties&quot;&gt;Character Properties&lt;/a&gt;) indicates they are spacing separators.</source>
          <target state="translated">'属性（请参见&lt;a href=&quot;character-properties#Character-Properties&quot;&gt;Character Properties&lt;/a&gt;）指示它们是间距分隔符。</target>
        </trans-unit>
        <trans-unit id="aab0d89acaf5ad3d62f30e71825d5fefe77ba942" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; property (see &lt;a href=&quot;character-properties#Character-Properties&quot;&gt;Character Properties&lt;/a&gt;).</source>
          <target state="translated">'属性（请参见&lt;a href=&quot;character-properties#Character-Properties&quot;&gt;角色属性&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="3227d3d1e3024f21c3d02dfb3126771139114ba4" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; property (see &lt;a href=&quot;overlay-properties#Overlay-Properties&quot;&gt;evaporate property&lt;/a&gt;).</source>
          <target state="translated">属性（请参阅&lt;a href=&quot;overlay-properties#Overlay-Properties&quot;&gt;蒸发属性&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="8440551b1ce2ea9070450f0e1556aed2e7aa03cc" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; property indicates that they are alphabetic or decimal digits.</source>
          <target state="translated">'属性表示它们是字母或十进制数字。</target>
        </trans-unit>
        <trans-unit id="7213e6f0e55fe9470a91c7799238e0faeb9850f9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; property indicates that they are alphabetic.</source>
          <target state="translated">'属性表示它们是字母。</target>
        </trans-unit>
        <trans-unit id="5b1bd23c8716aedc52634bf794989e8732ef6dfa" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; property indicates that they are spacing separators.</source>
          <target state="translated">'属性表示它们是空格分隔符。</target>
        </trans-unit>
        <trans-unit id="09958adfd8af3eaf45bb2204cd25c0cd49ebd43c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; property.</source>
          <target state="translated">的财产。</target>
        </trans-unit>
        <trans-unit id="22a4877a02dff396a4f394d6c7cbbf5fe4e2c686" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; provides &lt;code&gt;nil&lt;/code&gt; as the argument value. Completion, Existing, Prompt.</source>
          <target state="translated">'提供 &lt;code&gt;nil&lt;/code&gt; 作为参数值。完成，现有，提示。</target>
        </trans-unit>
        <trans-unit id="675b174675a996a3325cff1b6009854b4e597596" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; provides &lt;code&gt;nil&lt;/code&gt; as the argument. No I/O.</source>
          <target state="translated">'提供 &lt;code&gt;nil&lt;/code&gt; 作为参数。没有I / O。</target>
        </trans-unit>
        <trans-unit id="cc7e306e95fa301a4044617f1e30f8a666a9fa0b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; provides the &lt;var&gt;n&lt;/var&gt;th such event. Events that are not lists, such as function keys and</source>
          <target state="translated">'提供第 &lt;var&gt;n&lt;/var&gt; 个此类事件。不是列表的事件，例如功能键和</target>
        </trans-unit>
        <trans-unit id="939a3e012feafd7b061e44dffb23a49156875ab9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; puts &amp;lsquo;</source>
          <target state="translated">放</target>
        </trans-unit>
        <trans-unit id="e70b56a75170ba739a4982997114487b15016a31" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; quotes &amp;lsquo;</source>
          <target state="translated">引号</target>
        </trans-unit>
        <trans-unit id="f74638a9490f724fd9478fa8a39d5bca3de30eab" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; quotes special characters, &amp;lsquo;</source>
          <target state="translated">'引号，'</target>
        </trans-unit>
        <trans-unit id="5e247fbdbc23a0ada1c57fcf515c0d7157cc5953" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; quotes.</source>
          <target state="translated">报价。</target>
        </trans-unit>
        <trans-unit id="defa7344a1649b93a1b43c1af97fa03cea56040a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; rather than &amp;lsquo;</source>
          <target state="translated">' 而不是 '</target>
        </trans-unit>
        <trans-unit id="0e63d19d5c13d20747308773afdd581cbda8ab5b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; rather than the likely-intended four characters.</source>
          <target state="translated">而不是可能的四个字符。</target>
        </trans-unit>
        <trans-unit id="c199ce06a9106f79e10b3c857e8ba62ecb8782c8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; read a down-event. If no up-event has been discarded, &amp;lsquo;</source>
          <target state="translated">读了一个低落的事件。如果没有事件被丢弃，&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="c8bc9fee9ccde74836c91ff7040568b6f22901ff" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; reader macro (but not when interpreting) is closer to what &lt;code&gt;eval-when-compile&lt;/code&gt; does.</source>
          <target state="translated">读者宏（但在解释时则不是）更接近 &lt;code&gt;eval-when-compile&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b77bea9c0f34fc08da63988fd47f42ffbbf54f12" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; reads &lt;var&gt;integer&lt;/var&gt; in binary, and &amp;lsquo;</source>
          <target state="translated">'以二进制读取 &lt;var&gt;integer&lt;/var&gt; ，并且'</target>
        </trans-unit>
        <trans-unit id="4a977382ce35c3c33cdc854b9bddc945b825b35c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; reads &lt;var&gt;integer&lt;/var&gt; in radix &lt;var&gt;radix&lt;/var&gt;. Allowed values of &lt;var&gt;radix&lt;/var&gt; run from 2 to 36, and allowed digits are the first &lt;var&gt;radix&lt;/var&gt; characters taken from &amp;lsquo;</source>
          <target state="translated">'读取基数为 &lt;var&gt;radix&lt;/var&gt; &lt;var&gt;integer&lt;/var&gt; 。允许的 &lt;var&gt;radix&lt;/var&gt; 范围是2到36，允许的数字是取自'的第一个 &lt;var&gt;radix&lt;/var&gt; 字符</target>
        </trans-unit>
        <trans-unit id="189124fc2a4c9be730f7347dbfe98fca6d3ba4bd" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; reads a key sequence that ends with a down-event, it also reads and discards the following up-event. You can get access to that up-event with the &amp;lsquo;</source>
          <target state="translated">'读取以down事件结尾的键序列，它还读取并丢弃随后的up事件。您可以使用&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="f518ec2f9ee04bce047dc1cea910142445c78e78" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; reads as &amp;lsquo;</source>
          <target state="translated">读为</target>
        </trans-unit>
        <trans-unit id="571a2c67a40c68b8fa8e0a799d32129450f39fe3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; references. Don&amp;rsquo;t set this variable with &lt;code&gt;setq&lt;/code&gt;; you should only bind it temporarily to &lt;code&gt;t&lt;/code&gt; with &lt;code&gt;let&lt;/code&gt;. When you do that, you should also bind &lt;code&gt;print-number-table&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">引用。不要使用 &lt;code&gt;setq&lt;/code&gt; 设置此变量；您只应使用 &lt;code&gt;let&lt;/code&gt; 临时将其绑定到 &lt;code&gt;t&lt;/code&gt; 。这样做时，还应该将 &lt;code&gt;print-number-table&lt;/code&gt; 绑定到 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3e421379dbf061654d9083253ed737bd50a79bb9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; replaced with &amp;lsquo;</source>
          <target state="translated">'替换为'</target>
        </trans-unit>
        <trans-unit id="581d3d96609cdb849f61aaa8bdd7e71319166e96" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; represent the same integer, and &amp;lsquo;</source>
          <target state="translated">'代表相同的整数，'</target>
        </trans-unit>
        <trans-unit id="41ee2da6c26ebcde2f624144aac95aca73d5c7e0" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; represent the same list. Reading will accept any of the alternatives, but printing must choose one of them.</source>
          <target state="translated">'代表相同的列表。阅读可以接受任何一种选择，但是打印必须选择其中一种。</target>
        </trans-unit>
        <trans-unit id="9106dfbfae17116b90a82bc2ffe1f7b3626dbedd" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; represented as a binary number (&amp;lsquo;</source>
          <target state="translated">'表示为二进制数字（'</target>
        </trans-unit>
        <trans-unit id="a54412dad20c8eb983993f1770db22c76c6b2f9c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; represented as a hexadecimal number (&amp;lsquo;</source>
          <target state="translated">'表示为十六进制数字（'</target>
        </trans-unit>
        <trans-unit id="58f28672130d4604ca4fedb13890488cb1472d2c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; represented as an octal number (&amp;lsquo;</source>
          <target state="translated">'表示为八进制数字（'</target>
        </trans-unit>
        <trans-unit id="f8a45278993bdb03350144cd8a95644067202eba" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; represents</source>
          <target state="translated">' 代表</target>
        </trans-unit>
        <trans-unit id="2a12c9ddbda29611054438962fb9864cf85a92cf" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; represents a tab character; in the name of a symbol, however, &amp;lsquo;</source>
          <target state="translated">'代表制表符；但是，以符号的名义，</target>
        </trans-unit>
        <trans-unit id="594d4097cb43505af332eaeb9b897109bdfb958f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; represents one character, &amp;lsquo;</source>
          <target state="translated">&amp;ldquo;代表一个字符，&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="c0eec8e912e03fd7d1194f437a47e875d21ea955" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; represents that object, so when reading back the object, they will be the same object instead of copies (see &lt;a href=&quot;circular-objects#Circular-Objects&quot;&gt;Circular Objects&lt;/a&gt;).</source>
          <target state="translated">'表示该对象，因此在读回该对象时，它们将是同一对象，而不是副本（请参见&lt;a href=&quot;circular-objects#Circular-Objects&quot;&gt;循环对象&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="e28015aab9920bad92ad95464421d2431c3ffa09" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; represents the shifted-control-o character.</source>
          <target state="translated">'表示Shift-Control-o字符。</target>
        </trans-unit>
        <trans-unit id="98fa870529761a5797fca87309df19496a6314e7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; represents the space character.) Numerically, the bit values are 2**22 for alt, 2**23 for super and 2**24 for hyper.</source>
          <target state="translated">'表示空格字符。）在数字上，alt的位值为2 ** 22，super的位为2 ** 23，hyper的位为2 ** 24。</target>
        </trans-unit>
        <trans-unit id="f2b9e4bcb93f349f09b6112ed1913d20e28cdf70" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; respectively. See &lt;a href=&quot;low_002dlevel-font#Low_002dLevel-Font&quot;&gt;Low-Level Font&lt;/a&gt;, for a description of these Lisp objects.</source>
          <target state="translated">' 分别。有关这些Lisp对象的描述，请参见&lt;a href=&quot;low_002dlevel-font#Low_002dLevel-Font&quot;&gt;低级字体&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="139bb6039497390060931971fb52f4d5d99e56a9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; resumes from where searching for &amp;lsquo;</source>
          <target state="translated">'从寻找位置恢复</target>
        </trans-unit>
        <trans-unit id="35b99da3d9cfe3ed3226ae2162f70fe8692616b3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; reverses the case of letters.</source>
          <target state="translated">'颠倒字母的大小写。</target>
        </trans-unit>
        <trans-unit id="738eb4e4969146ffb255e77193e934b252299a48" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; says to load &lt;var&gt;user&lt;/var&gt;&amp;rsquo;s init file instead of yours. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Entering-Emacs.html#Entering-Emacs&quot;&gt;Entering Emacs&lt;/a&gt; in</source>
          <target state="translated">'表示要加载 &lt;var&gt;user&lt;/var&gt; 的init文件而不是您的init文件。请参阅在中&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Entering-Emacs.html#Entering-Emacs&quot;&gt;输入Emacs&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9987f29e007db9fdc1b7639ff00f84b41c956487" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; section).</source>
          <target state="translated">' 部分）。</target>
        </trans-unit>
        <trans-unit id="d034ee4d5f76fa35c04ad0797ce07d721729e100" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; section, this section is used as the long description. (When displaying the description, Emacs omits the &amp;lsquo;</source>
          <target state="translated">'部分，此部分用作详细说明。（显示说明时，Emacs省略了&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="57ce281b19d067a18ad410e01ede9a3b1bbecd64" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; sequences in this documentation string.</source>
          <target state="translated">'在此文档字符串中的序列。</target>
        </trans-unit>
        <trans-unit id="6001034cee4b297f5ebbd4b211bbfc0fdbba7415" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; set, the resulting style is called the &amp;ldquo;a&amp;rdquo; style.</source>
          <target state="translated">设置后，生成的样式称为&amp;ldquo; a&amp;rdquo;样式。</target>
        </trans-unit>
        <trans-unit id="67ee16f83b6c06a1206352bba3c7e19bf51f5d81" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; sets the command&amp;rsquo;s first argument to the raw command prefix (see &lt;a href=&quot;prefix-command-arguments#Prefix-Command-Arguments&quot;&gt;Prefix Command Arguments&lt;/a&gt;). &amp;lsquo;</source>
          <target state="translated">'将命令的第一个参数设置为原始命令前缀（请参见&lt;a href=&quot;prefix-command-arguments#Prefix-Command-Arguments&quot;&gt;Prefix Command Arguments&lt;/a&gt;）。'</target>
        </trans-unit>
        <trans-unit id="ea2863c19bd454eafef2c5bc946ecf70f86a21e5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; should be avoided, because it matches only &amp;lsquo;</source>
          <target state="translated">'应该避免，因为它只匹配'</target>
        </trans-unit>
        <trans-unit id="3827805c5d1a506b821841f322eb5008d3c42e9d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; should be avoided.</source>
          <target state="translated">' 应该避免。</target>
        </trans-unit>
        <trans-unit id="24ba4712baa1131e4bccb1d7757e1a3504265a67" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; shows only the first three characters of the representation for &lt;var&gt;object&lt;/var&gt;. For other specification characters, the effect of precision is what the local library functions of the &lt;code&gt;printf&lt;/code&gt; family produce.</source>
          <target state="translated">'仅显示 &lt;var&gt;object&lt;/var&gt; 表示形式的前三个字符。对于其他规范字符，精度的影响是 &lt;code&gt;printf&lt;/code&gt; 系列的本地库函数产生的结果。</target>
        </trans-unit>
        <trans-unit id="c076e4e6569b3aec9ea266ec18a7fc1d27b1f442" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; signals an error.</source>
          <target state="translated">'表示错误。</target>
        </trans-unit>
        <trans-unit id="2884f7083c56548b3db993d1b0c9ee925bd712bb" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; signature, such as shell and Perl scripts, are also considered executable. Directories are also reported as executable, for compatibility with POSIX. These conventions are also followed by &lt;code&gt;file-attributes&lt;/code&gt; (see &lt;a href=&quot;file-attributes#File-Attributes&quot;&gt;File Attributes&lt;/a&gt;).</source>
          <target state="translated">签名（例如shell和Perl脚本）也被认为是可执行的。目录也报告为可执行文件，以与POSIX兼容。这些约定后面还带有 &lt;code&gt;file-attributes&lt;/code&gt; （请参阅&lt;a href=&quot;file-attributes#File-Attributes&quot;&gt;文件属性&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="a2b8a099ac457cff258c6e72d0ee549d2b566f0e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; so as not to include that information.</source>
          <target state="translated">以免包含该信息。</target>
        </trans-unit>
        <trans-unit id="8c8fbbd75341e06aed8d5217cd074fab01a897ad" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; so it stands for &amp;lsquo;</source>
          <target state="translated">'所以代表'</target>
        </trans-unit>
        <trans-unit id="2c5d75f45cd314d6763c0bc12950592a1ae9ced7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; specification to find the beginning and end of the region. This lets other Lisp programs specify the bounds explicitly as arguments. See &lt;a href=&quot;interactive-codes#Interactive-Codes&quot;&gt;Interactive Codes&lt;/a&gt;.</source>
          <target state="translated">'规范查找该区域的开始和结束。这使其他Lisp程序可以将边界明确指定为参数。请参阅&lt;a href=&quot;interactive-codes#Interactive-Codes&quot;&gt;交互式代码&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="185e72d81ab6bd4ea26f5a3134de293461aaa7e4" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; specification. This provides the values of point and the mark as arguments to the command in an interactive call, but permits other Lisp programs to specify arguments explicitly. See &lt;a href=&quot;interactive-codes#Interactive-Codes&quot;&gt;Interactive Codes&lt;/a&gt;.</source>
          <target state="translated">规格。这将点和标记的值作为交互式调用中命令的参数提供，但是允许其他Lisp程序显式指定参数。请参阅&lt;a href=&quot;interactive-codes#Interactive-Codes&quot;&gt;交互式代码&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6f5b544c09298590202fffaac0179d8938ff9386" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; specifies a minimum width of 7. In the first case, the string inserted in place of &amp;lsquo;</source>
          <target state="translated">'指定的最小宽度为7。在第一种情况下，插入的字符串代替了'</target>
        </trans-unit>
        <trans-unit id="ca6a05604f0ed32c74f1a98ed8f0366e8f0b91af" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; specifies an alternate form which depends on the format in use. For &amp;lsquo;</source>
          <target state="translated">'指定了一种替代形式，具体取决于使用的格式。对于</target>
        </trans-unit>
        <trans-unit id="d14ff4aadb33190a94d29881f65b7d831cdbcf42" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; specifies the number of seconds since the minute; &amp;lsquo;</source>
          <target state="translated">'指定自分钟起的秒数；'</target>
        </trans-unit>
        <trans-unit id="d8a4d1e6de51592dd8e34402ca4d960cbe1659a9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; specifies the rules used in New York from 1987 through 2006. All systems support the string &amp;lsquo;</source>
          <target state="translated">'指定1987年至2006年在纽约使用的规则。所有系统都支持字符串'</target>
        </trans-unit>
        <trans-unit id="e699d88171d6267c5b0089f4841a6b51fc558fc6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; specifies the time zone and daylight saving time history for locations near New York City. GNU and most other systems support POSIX-style &lt;code&gt;TZ&lt;/code&gt; strings, e.g., &amp;lsquo;</source>
          <target state="translated">'指定纽约市附近位置的时区和夏令时历史。GNU和大多数其他系统都支持POSIX风格的 &lt;code&gt;TZ&lt;/code&gt; 字符串，例如&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="abdf6e560f8267c9de5c98e074ed1a17cd945921" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; specifies using the current locale&amp;rsquo;s alternative version of the date and time. In a Japanese locale, for example, &lt;code&gt;%Ex&lt;/code&gt; might yield a date format based on the Japanese Emperors&amp;rsquo; reigns. &amp;lsquo;</source>
          <target state="translated">'使用当前语言环境的日期和时间的替代版本进行指定。例如，在日语语言环境中， &lt;code&gt;%Ex&lt;/code&gt; 可能会根据日本天皇的统治时期产生一种日期格式。'</target>
        </trans-unit>
        <trans-unit id="2f01962b8d7bbe4ceafc2ee0619b352f30ef0293" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; specifies which font to use (in this fontset) for one particular character set. Here, &lt;var&gt;charset&lt;/var&gt; is the name of a character set, and &lt;var&gt;font&lt;/var&gt; is the font to use for that character set. You can use this construct any number of times in the specification string.</source>
          <target state="translated">'指定用于一个特定字符集的字体（在此字体集中）。在这里， &lt;var&gt;charset&lt;/var&gt; 是字符集的名称， &lt;var&gt;font&lt;/var&gt; 是用于该字符集的字体。您可以在规范字符串中多次使用此构造。</target>
        </trans-unit>
        <trans-unit id="1af57b36daf9bbab85c1d6aab7801303a450080f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; stands for</source>
          <target state="translated">' 代表</target>
        </trans-unit>
        <trans-unit id="3f77b91c30a3d55044b432a8c79262b81f7739ab" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; stands for &amp;lsquo;</source>
          <target state="translated">' 代表 '</target>
        </trans-unit>
        <trans-unit id="aea904a13ad436cab74e64ef36423b6bb4333f05" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; stands for a conceptually infinite number of bits that match the leading bit; here, an infinite number of 0 bits. Later examples also use this &amp;lsquo;</source>
          <target state="translated">'表示在概念上与前导位匹配的无数位；在这里，无限个0位。后面的示例也使用此&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="825661551b2e305f4ffdc7d01bd8311514b87650" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; stands for a double-quote as part of the string, &amp;lsquo;</source>
          <target state="translated">'表示字符串中双引号，'</target>
        </trans-unit>
        <trans-unit id="6f8b26b062bc292a142a487deb1620bd2c1f6161" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; stands for ten to the second power, and that is multiplied by 1.5. Integer computations are exact. Floating-point computations often involve rounding errors, as the numbers have a fixed amount of precision.</source>
          <target state="translated">'代表10到第二次幂，乘以1.5。整数计算是精确的。浮点计算经常涉及舍入误差，因为数字的精度是固定的。</target>
        </trans-unit>
        <trans-unit id="4c8be83bc7ae968ee470f6f8e9ab11446043043e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; stands for zero or more arguments. Parentheses are used when several arguments are grouped into additional levels of list structure. Here is an example:</source>
          <target state="translated">'代表零个或多个参数。当几个自变量组合到列表结构的其他级别时，将使用括号。这是一个例子：</target>
        </trans-unit>
        <trans-unit id="da9f88006c6df540dd1a6562f684dfae668efc9c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; starts at the end of the match of &amp;lsquo;</source>
          <target state="translated">'在'比赛结束时开始</target>
        </trans-unit>
        <trans-unit id="d6620f72bde4b8b25b567ca2e6ffa29802d75882" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; stores an element using the same notation. Just as certain forms like &lt;code&gt;a[i]&lt;/code&gt; can be lvalues in C, there is a set of forms that can be generalized variables in Lisp.</source>
          <target state="translated">'使用相同的符号存储元素。就像 &lt;code&gt;a[i]&lt;/code&gt; 某些形式在C中可以是左值一样，在Lisp中也有一组形式可以是广义变量。</target>
        </trans-unit>
        <trans-unit id="10616b00dee4482423205affc9cea7e2449a8649" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; strings.</source>
          <target state="translated">的字符串。</target>
        </trans-unit>
        <trans-unit id="c767884f3b3c2e80626a67b9e4ac8c1a8bd274d9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; submenu in the &amp;lsquo;</source>
          <target state="translated">'子菜单</target>
        </trans-unit>
        <trans-unit id="7aae75d7a79bc4f5d6c7ee9b67e2d47846ad522e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; substituted with matched groups. Arguments &lt;var&gt;replacement&lt;/var&gt; and optional &lt;var&gt;fixedcase&lt;/var&gt;, &lt;var&gt;literal&lt;/var&gt;, &lt;var&gt;string&lt;/var&gt; and &lt;var&gt;subexp&lt;/var&gt; have the same meaning as for &lt;code&gt;replace-match&lt;/code&gt;.</source>
          <target state="translated">'替换为匹配的组。参数 &lt;var&gt;replacement&lt;/var&gt; 和可选 &lt;var&gt;fixedcase&lt;/var&gt; ， &lt;var&gt;literal&lt;/var&gt; ， &lt;var&gt;string&lt;/var&gt; 和 &lt;var&gt;subexp&lt;/var&gt; 的含义为同一 &lt;code&gt;replace-match&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e377fa383770537551bd15905f48f76948f4376c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; suffix (possibly extended with a compression suffix); a file whose name is just &lt;var&gt;feature&lt;/var&gt; won&amp;rsquo;t be used. (The variable &lt;code&gt;load-suffixes&lt;/code&gt; specifies the exact required Lisp suffixes.)</source>
          <target state="translated">后缀（可能以压缩后缀扩展）；不会使用名称仅为 &lt;var&gt;feature&lt;/var&gt; 的文件。（变量 &lt;code&gt;load-suffixes&lt;/code&gt; 指定所需的确切Lisp后缀。）</target>
        </trans-unit>
        <trans-unit id="5542b28100fb1bd974efbd2103fb7a44549e78cf" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; suffix into &amp;lsquo;</source>
          <target state="translated">'后缀成'</target>
        </trans-unit>
        <trans-unit id="52cf1f7aca1ff2cb18e711edc49f8c0a95403130" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; suffix); their values are lists of functions, but these functions are called in a special way (they are passed arguments, or their return values are used). The variables whose names end in &amp;lsquo;</source>
          <target state="translated">后缀）；它们的值是函数列表，但是这些函数以特殊的方式调用（它们是传递的参数，或者使用了它们的返回值）。名称以'结尾的变量</target>
        </trans-unit>
        <trans-unit id="baf547531142ea77731fd1217c0f1617242cc6aa" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; suffixes.</source>
          <target state="translated">的后缀。</target>
        </trans-unit>
        <trans-unit id="3124057609a582cbce668ec29e871b4886b5276e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; suppresses padding, &amp;lsquo;</source>
          <target state="translated">&amp;ldquo;抑制填充，&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="855e9c1c70059d951cc7892e4af983c19abfff53" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; switches.</source>
          <target state="translated">开关。</target>
        </trans-unit>
        <trans-unit id="4335f7f0e6d447601bb197b80cf04c8b8888422f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; symbol at the left-hand side, you can expand that line by typing</source>
          <target state="translated">'符号在左侧，您可以通过键入以下内容来扩展该行</target>
        </trans-unit>
        <trans-unit id="f71864dc8d7b4b37b99a868bb8e1cd5beabe2c8e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; syntax (see &lt;a href=&quot;backquote#Backquote&quot;&gt;Backquote&lt;/a&gt;). For example:</source>
          <target state="translated">语法（请参见&lt;a href=&quot;backquote#Backquote&quot;&gt;Backquote&lt;/a&gt;）。例如：</target>
        </trans-unit>
        <trans-unit id="3b2a710c0e29aad75e0fe571dc2015731a81a334" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; syntax to indicate a meta character in a string constant, this sets the 2**7 bit of the character in the string. If the string is used in &lt;code&gt;define-key&lt;/code&gt; or &lt;code&gt;lookup-key&lt;/code&gt;, this numeric code is translated into the equivalent meta character. See &lt;a href=&quot;character-type#Character-Type&quot;&gt;Character Type&lt;/a&gt;.</source>
          <target state="translated">'语法表示字符串常量中的元字符，这将设置字符串中字符的2 ** 7位。如果该字符串用于 &lt;code&gt;define-key&lt;/code&gt; 或 &lt;code&gt;lookup-key&lt;/code&gt; ，则此数字代码将转换为等效的元字符。请参阅&lt;a href=&quot;character-type#Character-Type&quot;&gt;字符类型&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="20f3c6c6648bb2f7a7e5540e6e6b2aac635dbed3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; syntax, those facilities won&amp;rsquo;t work.</source>
          <target state="translated">语法，这些功能将无法使用。</target>
        </trans-unit>
        <trans-unit id="be8cd956e8c29618e37ab8bfa10aae893837d975" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; syntax. Which one you use does not affect the meaning of the program, but may guide the understanding of people who read it.</source>
          <target state="translated">' 句法。您使用哪一个不会影响程序的含义，但可能会引导理解该程序的人。</target>
        </trans-unit>
        <trans-unit id="69b8dd310b55861377ef473df7392627ef5b37a0" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; syntax; for control characters in keyboard input, we prefer the &amp;lsquo;</source>
          <target state="translated">' 句法; 对于键盘输入中的控制字符，我们更喜欢使用&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="6cebde34e2931b31c5f57d7af4eb126076cc68d3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; tag, that takes precedence, so these functions won&amp;rsquo;t be called.</source>
          <target state="translated">'标签，该标签具有优先权，因此不会调用这些函数。</target>
        </trans-unit>
        <trans-unit id="388ef96582d73bb736bc0d52d1b9a2f1f82c8529" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; takes precedence.</source>
          <target state="translated">'优先。</target>
        </trans-unit>
        <trans-unit id="3234ffb0227d98aa048b09db21db8ed2aefe72ed" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; tells the caller that the need for reverting was not checked, but that reverting the buffer is fast. It also tells Auto Revert not to print any revert messages, even if &lt;code&gt;auto-revert-verbose&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;. This is important, as getting revert messages every &lt;code&gt;auto-revert-interval&lt;/code&gt; seconds can be very annoying. The information provided by this return value could also be useful if the function is consulted for purposes other than auto-reverting.</source>
          <target state="translated">'告诉调用者未检查是否需要还原，但是还原缓冲区很快。它还会告诉&amp;ldquo;自动还原&amp;rdquo;不要打印任何还原消息，即使 &lt;code&gt;auto-revert-verbose&lt;/code&gt; 为非 &lt;code&gt;nil&lt;/code&gt; 。这很重要，因为 &lt;code&gt;auto-revert-interval&lt;/code&gt; 秒钟的自动还原间隔时间获取一条还原消息可能会很烦人。如果出于除自动恢复之外的目的咨询了此功能，则此返回值提供的信息也可能很有用。</target>
        </trans-unit>
        <trans-unit id="5691494359351e39ed1bc769dfe74447927acd73" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; that both enters and leaves math mode.</source>
          <target state="translated">既进入又退出数学模式的'。</target>
        </trans-unit>
        <trans-unit id="7c5cec56a5b6c687837f17a0e57312cb0b36ba11" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; that does not end a character class. This ends the character alternative and restores the ordinary syntax of regular expressions; an unquoted &amp;lsquo;</source>
          <target state="translated">'不结束字符类。这样就结束了替代字符并恢复了正则表达式的普通语法。不加引号的'</target>
        </trans-unit>
        <trans-unit id="fe51f828d89f2d247ca20c5d6e2b0fe99b906d20" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; that follows must match the same exact text.</source>
          <target state="translated">后面的'必须与完全相同的文本匹配。</target>
        </trans-unit>
        <trans-unit id="837bb1fdb2a24fcc41831348725c360328dbd844" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; that have special meanings. Here is a table of the special &amp;lsquo;</source>
          <target state="translated">具有特殊含义。这是一张特殊的表</target>
        </trans-unit>
        <trans-unit id="c011ffe01c008db1b3d7dc11d5fad3dc83ff4c69" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; that means that Edebug knows where the source code for the frame is located. Use</source>
          <target state="translated">'表示Edebug知道框架源代码的位置。采用</target>
        </trans-unit>
        <trans-unit id="f399fd594ee66f69a12794262be03a799245ea09" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; that occur in regular expressions close a character alternative and hence are special. However, occasionally a regular expression may try to match a complex pattern of literal &amp;lsquo;</source>
          <target state="translated">正则表达式中出现的'会关闭字符替代，因此很特殊。但是，有时正则表达式可能会尝试匹配文字'</target>
        </trans-unit>
        <trans-unit id="c2676b494a123f7d6467edf89f6a074a41ab7631" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; that occurs at the beginning of a line.</source>
          <target state="translated">'出现在行首。</target>
        </trans-unit>
        <trans-unit id="67cc82810089a3be070e25d1410ab25b938616c7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; that permits the whole expression to match is &amp;lsquo;</source>
          <target state="translated">'允许整个表达式匹配的'</target>
        </trans-unit>
        <trans-unit id="337e44f09ec175d2367672df8828082114e29cc9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; that specifies the port number directly. For a server, it can also be &lt;code&gt;t&lt;/code&gt;, which means to let the system select an unused port number.</source>
          <target state="translated">'直接指定端口号。对于服务器，它也可以是 &lt;code&gt;t&lt;/code&gt; ，这意味着让系统选择一个未使用的端口号。</target>
        </trans-unit>
        <trans-unit id="08c8266e34135bf02587d248d177daa67776570f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; that translates to a port number, or an integer like &amp;lsquo;</source>
          <target state="translated">'表示端口号或类似'的整数</target>
        </trans-unit>
        <trans-unit id="ef6fed6549190b0d965e5cf7e0fced517211eb29" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; through &amp;lsquo;</source>
          <target state="translated">'通过'</target>
        </trans-unit>
        <trans-unit id="1c96ef5db986721c2692b006a74b2645ab6ec4d7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to &amp;lsquo;</source>
          <target state="translated">' 至 '</target>
        </trans-unit>
        <trans-unit id="1fbaa1a5cbd7b06a7b60e28d1fdaaf59254290d0" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to &lt;var&gt;filename&lt;/var&gt;.</source>
          <target state="translated">'到 &lt;var&gt;filename&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="de0e73f2fecb5ec00dbb007a2ec1001afbb0f085" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to a directory file name that does not already end in &amp;lsquo;</source>
          <target state="translated">'至尚未以'结尾的目录文件名</target>
        </trans-unit>
        <trans-unit id="4bec36c0a01539d8a5d522ca50f75807d6c3923e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to anchor the match. Most often, the paragraph commands do check for a match only at the beginning of a line, which means that &amp;lsquo;</source>
          <target state="translated">'来固定比赛。最常见的是，段命令仅在行的开头进行匹配检查，这意味着&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="f72731b36931105de36d122a933c076791842b8a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to avoid confusing the Emacs commands for editing Lisp code. You should also add a backslash before Unicode characters which resemble the previously mentioned</source>
          <target state="translated">以免混淆Emacs命令来编辑Lisp代码。您还应该在Unicode字符之前添加一个反斜杠，该字符类似于前面提到的</target>
        </trans-unit>
        <trans-unit id="40c4b4aef798faaf4f947f07b14993886fb2e25b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to distinguish them from the ordinary help functions.</source>
          <target state="translated">以区别于普通的帮助功能。</target>
        </trans-unit>
        <trans-unit id="7eaa456bedf68b61633834ea5ceefa0c4840dc3a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to encourage this. You can also add a backslash before whitespace characters such as space, tab, newline and formfeed. However, it is cleaner to use one of the easily readable escape sequences, such as &amp;lsquo;</source>
          <target state="translated">以鼓励这一点。您还可以在空格字符（例如空格，制表符，换行符和换页符）之前添加反斜杠。但是，使用一种易于阅读的转义序列（例如&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="93f39c19a746daa977773d444b10785c672cf535" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to enter the name of an existing buffer, which becomes the second and final argument.</source>
          <target state="translated">'输入现有缓冲区的名称，该名称将成为第二个也是最后一个参数。</target>
        </trans-unit>
        <trans-unit id="a6e12e91adde194f55011fdcf2dc72ee6a35c47e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to escape these three characters, since &amp;lsquo;</source>
          <target state="translated">'逃脱这三个字符，因为'</target>
        </trans-unit>
        <trans-unit id="b651cce6a3b11d6713eb94a727d12bd1305455e3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to get an unused name. See also &lt;a href=&quot;creating-buffers#Creating-Buffers&quot;&gt;Creating Buffers&lt;/a&gt;. Note that the</source>
          <target state="translated">'以获取未使用的名称。另请参见&lt;a href=&quot;creating-buffers#Creating-Buffers&quot;&gt;创建缓冲区&lt;/a&gt;。请注意</target>
        </trans-unit>
        <trans-unit id="8125279c0c70dec6fc2b0e478eb7ec098bebf5bb" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to get the regular expression &amp;lsquo;</source>
          <target state="translated">'获取正则表达式'</target>
        </trans-unit>
        <trans-unit id="4c1df7f2ef4455bd74521b1af25dddfd066ca67b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to include previous argument values (starting with the first argument) in the prompt. This is done using &lt;code&gt;format-message&lt;/code&gt; (see &lt;a href=&quot;formatting-strings#Formatting-Strings&quot;&gt;Formatting Strings&lt;/a&gt;). For example, here is how you could read the name of an existing buffer followed by a new name to give to that buffer:</source>
          <target state="translated">'，以在提示中包含先前的参数值（从第一个参数开始）。这是使用 &lt;code&gt;format-message&lt;/code&gt; 完成的（请参阅&lt;a href=&quot;formatting-strings#Formatting-Strings&quot;&gt;Formatting Strings&lt;/a&gt;）。例如，这是您如何读取现有缓冲区的名称，然后读取新名称以赋予该缓冲区的方式：</target>
        </trans-unit>
        <trans-unit id="4af85a06e77851340c307acd78a79eb01b528a8c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to make it clear that it is not a typo; for example, &amp;lsquo;</source>
          <target state="translated">明确指出这不是错字；例如， '</target>
        </trans-unit>
        <trans-unit id="59fb4405e0f561119860d5e00c181a940f01bf69" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to match only two &amp;lsquo;</source>
          <target state="translated">'只匹配两个'</target>
        </trans-unit>
        <trans-unit id="e40f63628ea31a783fe25d944b57bf3718fbacb7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to modify aspects of the substitution.</source>
          <target state="translated">修改替代方面。</target>
        </trans-unit>
        <trans-unit id="6e0eebe6473304691cfb867291815ac3013a8336" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to operate on. Thus, &amp;lsquo;</source>
          <target state="translated">进行操作。因此，</target>
        </trans-unit>
        <trans-unit id="c32c3a2723d46d49b1de22357d2f9ace29500719" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to pad with spaces to 3 positions. Plain &amp;lsquo;</source>
          <target state="translated">'将空格填充到3个位置。普通的</target>
        </trans-unit>
        <trans-unit id="8598fe93064166e0f6cc3efffb703454ce679443" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to prevent clashes. This will not work correctly if your filesystem truncates the resulting name.</source>
          <target state="translated">以防止冲突。如果您的文件系统截断了结果名称，则该方法将无法正常工作。</target>
        </trans-unit>
        <trans-unit id="9c41d9b8e20a792f5937641bd2c555083bb51341" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to produce an explicitly numbered group.</source>
          <target state="translated">以产生显式编号的组。</target>
        </trans-unit>
        <trans-unit id="748064e670ffd3fda5cab1334f574838f25880f6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to quote a single &amp;lsquo;</source>
          <target state="translated">'引号'</target>
        </trans-unit>
        <trans-unit id="47abbf881886d322f2b2e6e009f1ad7add21153a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to quote it: &amp;lsquo;</source>
          <target state="translated">'引用：'</target>
        </trans-unit>
        <trans-unit id="92532dc29b7a5e551acbaba0808d199c1662ec8e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to refer to the text matched by the corresponding grouping constructs.</source>
          <target state="translated">'表示由相应分组结构匹配的文本。</target>
        </trans-unit>
        <trans-unit id="edb4c75a0470775b9fa6017925232194e232eae1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to saving a non-file buffer is asked to specify the file name to use. The &lt;code&gt;save-buffers-kill-emacs&lt;/code&gt; function passes the value &lt;code&gt;t&lt;/code&gt; for &lt;var&gt;pred&lt;/var&gt;.</source>
          <target state="translated">'保存非文件缓冲区被要求指定要使用的文件名。的 &lt;code&gt;save-buffers-kill-emacs&lt;/code&gt; 函数传递值 &lt;code&gt;t&lt;/code&gt; 用于 &lt;var&gt;pred&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="b6ac871afe1ce9ee251485fdc6ba803f72d43e1a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to specify a minimum field width. If the width is less, the field is padded to that width. Purely numeric constructs (&amp;lsquo;</source>
          <target state="translated">'以指定最小字段宽度。如果宽度较小，则将字段填充为该宽度。纯数字结构（'</target>
        </trans-unit>
        <trans-unit id="31461638d6c8c2557f66615f99e8f5796623cfdd" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to specify where to put the warning type information, or it can omit the &amp;lsquo;</source>
          <target state="translated">'以指定将警告类型信息放置在何处，也可以省略'</target>
        </trans-unit>
        <trans-unit id="f8bfa332b465ff832eb6522c0f3fcc1ac5d58f56" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to the end of &lt;var&gt;filename&lt;/var&gt;.</source>
          <target state="translated">'到 &lt;var&gt;filename&lt;/var&gt; 的末尾。</target>
        </trans-unit>
        <trans-unit id="84649512eefc30142a6bbc461a623ad5259aa9cc" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to the end, preceded by the default return value (see below), if that is non-empty.</source>
          <target state="translated">'，最后是默认返回值（请参见下文）（如果该值非空）。</target>
        </trans-unit>
        <trans-unit id="e36951caa38e41c242015bf2138390a3b3030d4a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to the file &lt;var&gt;name&lt;/var&gt;. For a local file &lt;var&gt;name&lt;/var&gt;, it prefixes &lt;var&gt;name&lt;/var&gt; with &amp;lsquo;</source>
          <target state="translated">文件 &lt;var&gt;name&lt;/var&gt; 。对于本地文件 &lt;var&gt;name&lt;/var&gt; ，它在 &lt;var&gt;name&lt;/var&gt; 添加'</target>
        </trans-unit>
        <trans-unit id="cb56bc23bddad0560016cd43fff26d2ffcb417bd" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to the letter &amp;lsquo;</source>
          <target state="translated">'到信'</target>
        </trans-unit>
        <trans-unit id="28d938f667314e25fca28b963a1dd7fa5a300e21" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; to the specified name &lt;var&gt;library&lt;/var&gt;.</source>
          <target state="translated">'到指定的名称 &lt;var&gt;library&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="288fc71fcd2c329917ae1ff5f20fc3c78b805433" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; together with octal character codes (see below), with &amp;lsquo;</source>
          <target state="translated">'以及八进制字符代码（请参见下文），并带有'</target>
        </trans-unit>
        <trans-unit id="2a92c7cbdd555f69e74be17eeef83d74de911c1c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; treats &amp;lsquo;</source>
          <target state="translated">对待</target>
        </trans-unit>
        <trans-unit id="892789607539307a6b91299d73faafa844d8eea8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; until the first non-zero conversion is encountered. For example, the default format used by &lt;code&gt;emacs-uptime&lt;/code&gt; (see &lt;a href=&quot;processor-run-time#Processor-Run-Time&quot;&gt;emacs-uptime&lt;/a&gt;) &lt;code&gt;&quot;%Y,&amp;nbsp;%D,&amp;nbsp;%H,&amp;nbsp;%M,&amp;nbsp;%z%S&quot;&lt;/code&gt; means that the number of seconds will always be produced, but years, days, hours, and minutes will only be shown if they are non-zero.</source>
          <target state="translated">直到遇到第一个非零转换。例如， &lt;code&gt;emacs-uptime&lt;/code&gt; 使用的默认格式（请参阅&lt;a href=&quot;processor-run-time#Processor-Run-Time&quot;&gt;emacs-uptime&lt;/a&gt;） &lt;code&gt;&quot;%Y,&amp;nbsp;%D,&amp;nbsp;%H,&amp;nbsp;%M,&amp;nbsp;%z%S&quot;&lt;/code&gt; 表示将始终产生秒数，但年份，天数，小时和分钟仅在非零时显示。</target>
        </trans-unit>
        <trans-unit id="caf424476f05096caec27a29e6b75a7510c8e7b8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; upper-cases letters, and &amp;lsquo;</source>
          <target state="translated">'大写字母和'</target>
        </trans-unit>
        <trans-unit id="3499a75561c9dbbbf470451e5237774be453e7e8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; uses lower case and &amp;lsquo;</source>
          <target state="translated">'使用小写字母和'</target>
        </trans-unit>
        <trans-unit id="a71b8c8eacb0826e27acaa32053f7fa084b05c61" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; uses upper case. The object can also be a floating-point number that is formatted as an integer, dropping any fraction.</source>
          <target state="translated">'使用大写。该对象也可以是浮点数，其格式为整数，不包括任何小数。</target>
        </trans-unit>
        <trans-unit id="edb0309decdb07ea141eca5bd8b5910537ff71f8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; value, i.e. each bit that is set in the argument &lt;var&gt;mode&lt;/var&gt; will be &lt;em&gt;reset&lt;/em&gt; in the default permissions with which Emacs creates files.</source>
          <target state="translated">值，即在参数 &lt;var&gt;mode&lt;/var&gt; 设置的每个位都将以Emacs创建文件的默认权限&lt;em&gt;重置&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="d09097c0b1cf7352c121757e581ab340874001bb" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; was specified.</source>
          <target state="translated">已指定。</target>
        </trans-unit>
        <trans-unit id="49b9b7fd1318f4016f7d800be5d14329716ce91f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; we get:</source>
          <target state="translated">'我们得到：</target>
        </trans-unit>
        <trans-unit id="826cdde19c9f960f07fda6ae214d32a1b07dd661" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; were specified.</source>
          <target state="translated">已指定。</target>
        </trans-unit>
        <trans-unit id="b08d3c8483cc6a2908f98080f2f42824623cda2b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; were specified. If the &amp;lsquo;</source>
          <target state="translated">已指定。如果&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="632ed7026a65788ccf78496b8792b6d68d69387e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; when applied to the string &amp;lsquo;</source>
          <target state="translated">'应用于字符串时</target>
        </trans-unit>
        <trans-unit id="222184bd234de4196da4c66e656f0a7213ab5c45" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; when narrowing is in effect; nothing otherwise (see &lt;code&gt;narrow-to-region&lt;/code&gt; in &lt;a href=&quot;narrowing#Narrowing&quot;&gt;Narrowing&lt;/a&gt;).</source>
          <target state="translated">'收窄生效时；否则没有其他内容（请参见&amp;ldquo; &lt;code&gt;narrow-to-region&lt;/code&gt; 中的&amp;ldquo;&lt;a href=&quot;narrowing#Narrowing&quot;&gt;缩小&lt;/a&gt;到区域&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="3ead0c568213ef43431254c72c501e4d335b20ae" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; where &lt;var&gt;user&lt;/var&gt; is a valid login name. In the following examples, assume that there is a user named &amp;lsquo;</source>
          <target state="translated">'，其中 &lt;var&gt;user&lt;/var&gt; 是有效的登录名。在以下示例中，假设有一个名为&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="411ebaab07ec42088e3a16e0f9cb019f484e1f00" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; which have</source>
          <target state="translated">' 其中有</target>
        </trans-unit>
        <trans-unit id="b3a019a9c5ba51b255e4a07f4be0a8ff5ad210bd" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; will also listen on IPv4, so attempting to then listen separately on IPv4 will result in &lt;code&gt;EADDRINUSE&lt;/code&gt; errors (&amp;lsquo;</source>
          <target state="translated">'也会侦听IPv4，因此尝试分别侦听IPv4会导致 &lt;code&gt;EADDRINUSE&lt;/code&gt; 错误（'</target>
        </trans-unit>
        <trans-unit id="534e96c935f83edc99aefe8d22534f29e7bef3d2" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; will be simplified away before &lt;code&gt;file-truename&lt;/code&gt; is called. To eliminate the need for a call to &lt;code&gt;expand-file-name&lt;/code&gt;, &lt;code&gt;file-truename&lt;/code&gt; handles &amp;lsquo;</source>
          <target state="translated">'将在调用 &lt;code&gt;file-truename&lt;/code&gt; 之前简化。为了消除对 &lt;code&gt;expand-file-name&lt;/code&gt; 的调用， &lt;code&gt;file-truename&lt;/code&gt; 处理'</target>
        </trans-unit>
        <trans-unit id="4f42be525ef96b592b1822c827c9d6af0d95f0f4" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; with a number; shorter numbers will be padded with blanks. An optional period before the width requests zero-padding instead. For example, &lt;code&gt;&quot;%.3Y&quot;&lt;/code&gt; might produce &lt;code&gt;&quot;004 years&quot;&lt;/code&gt;.</source>
          <target state="translated">'带数字；较短的数字将用空格填充。宽度之前的可选时间段要求零填充。例如， &lt;code&gt;&quot;%.3Y&quot;&lt;/code&gt; 可能会产生 &lt;code&gt;&quot;004 years&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ead5863ef381c47f30d418577fffd5673a55ef39" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; with a text property &lt;code&gt;foo&lt;/code&gt;. If the conversion for &lt;code&gt;foo&lt;/code&gt; is done by inserting into the buffer, say, &amp;lsquo;</source>
          <target state="translated">'带有文本属性 &lt;code&gt;foo&lt;/code&gt; 。如果 &lt;code&gt;foo&lt;/code&gt; 的转换是通过插入缓冲区完成的，则说&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="2642272e9601bcc2acf6db8f56895469727cc48e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; with a value that names one character set. For the</source>
          <target state="translated">'，其值指定一个字符集。为了</target>
        </trans-unit>
        <trans-unit id="1b29111d2ea0a17133c6447720aca7202698a4d6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; with another &amp;lsquo;</source>
          <target state="translated">' 和另外一个 '</target>
        </trans-unit>
        <trans-unit id="623fa15e1c8dc82973d518026b6a1aca0a2e0e4a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; with grave accent. &amp;lsquo;</source>
          <target state="translated">口音很重。'</target>
        </trans-unit>
        <trans-unit id="f7f26767532c48864c68ffa5e07cb54fd5842dbe" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; with no following &amp;lsquo;</source>
          <target state="translated">&amp;ldquo;没有关注者&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="6ab5d53ef2ad7f0a13b455a2a948c27bd5de99f2" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; with the Meta modifier bit set. This value is not a valid character code: it fails the &lt;code&gt;characterp&lt;/code&gt; test (see &lt;a href=&quot;character-codes#Character-Codes&quot;&gt;Character Codes&lt;/a&gt;). Use &lt;code&gt;event-basic-type&lt;/code&gt; (see &lt;a href=&quot;classifying-events#Classifying-Events&quot;&gt;Classifying Events&lt;/a&gt;) to recover the character code with the modifier bits removed; use &lt;code&gt;event-modifiers&lt;/code&gt; to test for modifiers in the character event returned by &lt;code&gt;read-char&lt;/code&gt;.</source>
          <target state="translated">'，并设置了元修饰符。该值不是有效的字符代码：它无法通过 &lt;code&gt;characterp&lt;/code&gt; 测试（请参阅&amp;ldquo;&lt;a href=&quot;character-codes#Character-Codes&quot;&gt;字符代码&amp;rdquo;&lt;/a&gt;）。使用 &lt;code&gt;event-basic-type&lt;/code&gt; （请参阅对&lt;a href=&quot;classifying-events#Classifying-Events&quot;&gt;事件进行分类&lt;/a&gt;）恢复删除了修饰符位的字符代码；使用 &lt;code&gt;event-modifiers&lt;/code&gt; 修饰符在 &lt;code&gt;read-char&lt;/code&gt; 返回的字符事件中测试修饰符。</target>
        </trans-unit>
        <trans-unit id="9a887615c2a4bc089c26d55bcdbb3774a77d9f21" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; with the appropriate directory.</source>
          <target state="translated">与适当的目录。</target>
        </trans-unit>
        <trans-unit id="7445b32446b1369fc752b6c22b2ed9f445d4bb62" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; won&amp;rsquo;t work properly, and &amp;lsquo;</source>
          <target state="translated">'不能正常工作，并且'</target>
        </trans-unit>
        <trans-unit id="abd5493f4e151e7f73b49fe5e6804e43c8776b47" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; would be incorrect. However, a &amp;lsquo;</source>
          <target state="translated">'将是不正确的。但是，</target>
        </trans-unit>
        <trans-unit id="595625c67d7ff58c27a327004a426d86e80ec20c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; would be superfluous. When there is a nonzero left margin, they accept matches that start after the left margin. In that case, a &amp;lsquo;</source>
          <target state="translated">'将是多余的。当左边距为非零时，它们接受从左边距开始的匹配。在这种情况下，</target>
        </trans-unit>
        <trans-unit id="65fa6eb071e53450b57c4e58474fdeb9a32bf2b8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo; would match &amp;lsquo;</source>
          <target state="translated">&amp;ldquo;会匹配&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="ae1831d468602fdf7493ace2e8e08b0b07fde15d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;&amp;mdash;does not become part of the string; i.e., the Lisp reader ignores an escaped newline while reading a string. An escaped space &amp;lsquo;</source>
          <target state="translated">'-不成为字符串的一部分；即，Lisp阅读器在读取字符串时会忽略转义的换行符。一个逃脱的空间</target>
        </trans-unit>
        <trans-unit id="30e316448df02cbb38e390f7434fc8adb6e950f8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;&amp;mdash;if the same character occurs in two different places, the two occurrences in general have different properties.</source>
          <target state="translated">'-如果相同的字符出现在两个不同的位置，则这两个出现通常具有不同的属性。</target>
        </trans-unit>
        <trans-unit id="6b385e8b04b9c5da3e5aa19e043d4cfe69f446a1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;&amp;mdash;this is how to include a literal &amp;lsquo;</source>
          <target state="translated">'-这是如何包含文字'</target>
        </trans-unit>
        <trans-unit id="9e94b8c01d259c248dbbf9ee6c460cb05e81e039" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;&amp;ndash;&amp;lsquo;</source>
          <target state="translated">&amp;rsquo;&amp;ndash;&amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="e1628d96a320a1d73e33067769e59198bf606849" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) and octal escape sequences (&amp;lsquo;</source>
          <target state="translated">'）和八进制转义序列（'</target>
        </trans-unit>
        <trans-unit id="2ada1bfe0d1c55b5a14f5e36e865a508e5ad99b9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) and vertical bar (&amp;lsquo;</source>
          <target state="translated">'）和竖线（'</target>
        </trans-unit>
        <trans-unit id="cf7faa6c926c99c331f466fc7b4b1f1d2704a06d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) appear in the initial text. See &lt;a href=&quot;output-functions#Output-Functions&quot;&gt;Output Functions&lt;/a&gt;.</source>
          <target state="translated">'）出现在初始文本中。请参见&lt;a href=&quot;output-functions#Output-Functions&quot;&gt;输出函数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2800e5bb9addb48d806259a356ab0b37f0e70aac" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) are classified as parenthesis characters.</source>
          <target state="translated">'）被归类为括号字符。</target>
        </trans-unit>
        <trans-unit id="78f9cd2346b7b1ce84f10f6fd3a54ef3e0d424cf" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) are displayed literally.</source>
          <target state="translated">'）按字面显示。</target>
        </trans-unit>
        <trans-unit id="931214108d5e53d40be3e5d25484a201dc23a13d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) are not allowed.</source>
          <target state="translated">'） 不允许。</target>
        </trans-unit>
        <trans-unit id="2c8e411a8187dfcd8b71e94b6a457693ecbef587" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) are padded by inserting spaces to the left, and others are padded by inserting spaces to the right.</source>
          <target state="translated">'）通过在左侧插入空格来填充，其他的通过在右侧插入空格来填充。</target>
        </trans-unit>
        <trans-unit id="1af826b0f40b6e66bce5f2a9e3434acf5f668219" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) construct.</source>
          <target state="translated">'）构造。</target>
        </trans-unit>
        <trans-unit id="e01512635ee43516d8a9a6f84df5ac449ae9a89b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) followed by a Lisp object (in read syntax) expands to a list whose first element is &lt;code&gt;quote&lt;/code&gt;, and whose second element is the object. Thus, the read syntax &lt;code&gt;'x&lt;/code&gt; is an abbreviation for &lt;code&gt;(quote x)&lt;/code&gt;.</source>
          <target state="translated">'），然后是Lisp对象（以读取语法），将扩展为一个列表，该列表的第一个元素为 &lt;code&gt;quote&lt;/code&gt; ，第二个元素为该对象。因此，读取语法 &lt;code&gt;'x&lt;/code&gt; 是 &lt;code&gt;(quote x)&lt;/code&gt; 的缩写。</target>
        </trans-unit>
        <trans-unit id="81c18dfbc171088b2b6ef88343851dc479e755be" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) for character constants.</source>
          <target state="translated">'）表示字符常量。</target>
        </trans-unit>
        <trans-unit id="cecad4099033a0ad51cd07d2347dbbb6c0ce9e76" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) giving details of the problem, but it still loads the file, just leaving the macro unexpanded for now. You may wish to restructure your code so that this does not happen. Loading a compiled file does not cause macroexpansion, because this should already have happened during compilation. See &lt;a href=&quot;compiling-macros#Compiling-Macros&quot;&gt;Compiling Macros&lt;/a&gt;.</source>
          <target state="translated">'）提供了问题的详细信息，但仍会加载文件，只是暂时不扩展宏。您可能希望重组代码，以免发生这种情况。加载已编译的文件不会引起宏扩展，因为这在编译期间已经发生。请参阅&lt;a href=&quot;compiling-macros#Compiling-Macros&quot;&gt;编译宏&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="02920b936c56fa09eafc2216e90457438e7d80d3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) in string constants. &lt;strong&gt;But beware:&lt;/strong&gt; If a string constant contains hexadecimal or octal escape sequences, and these escape sequences all specify unibyte characters (i.e., less than 256), and there are no other literal non-</source>
          <target state="translated">'）的字符串常量。&lt;strong&gt;但请注意：&lt;/strong&gt;如果字符串常量包含十六进制或八进制转义序列，并且这些转义序列均指定单字节字符（即，小于256个），并且没有其他文字非</target>
        </trans-unit>
        <trans-unit id="987b209fdd9adaebcb5b4a5b49ff6f61599ef78d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) in the Lisp name changed to underscores. Thus, to call this function from C code, call &lt;code&gt;For&lt;/code&gt;.</source>
          <target state="translated">'）中Lisp名称更改为下划线。因此，要从C代码中调用此函数，请调用 &lt;code&gt;For&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="75d850c0c734aa54116da42de8824fc37d47a4f3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) is a possible auto-save file name. The argument &lt;var&gt;filename&lt;/var&gt; should not contain a directory part.</source>
          <target state="translated">'）是可能的自动保存文件名。参数 &lt;var&gt;filename&lt;/var&gt; 不应包含目录部分。</target>
        </trans-unit>
        <trans-unit id="97b718479f7fd7010058e75501f9fa1c3631cc0e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) is called a &lt;em&gt;keyword symbol&lt;/em&gt;. These symbols automatically act as constants, and are normally used only by comparing an unknown symbol with a few specific alternatives. See &lt;a href=&quot;constant-variables#Constant-Variables&quot;&gt;Constant Variables&lt;/a&gt;.</source>
          <target state="translated">'）称为&lt;em&gt;关键字符号&lt;/em&gt;。这些符号自动充当常量，通常仅通过将未知符号与一些特定的替代方案进行比较来使用。请参阅&lt;a href=&quot;constant-variables#Constant-Variables&quot;&gt;常量变量&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c2b25303342f57c6c6903103e99e6483a2f0a9a0" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) or Sun Audio format (&amp;lsquo;</source>
          <target state="translated">'）或Sun音频格式（'</target>
        </trans-unit>
        <trans-unit id="a83f19522fffcb3424e00f18f018e94dea0f1964" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) precede the number and its exponent. For example, &amp;lsquo;</source>
          <target state="translated">'）在数字及其指数之前。例如， '</target>
        </trans-unit>
        <trans-unit id="5ee82abd247c66071157e10ad5962c65fc2b9921" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) prepended and appended to it. This function does not look at the variable &lt;code&gt;auto-save-visited-file-name&lt;/code&gt; (described below); callers of this function should check that variable first.</source>
          <target state="translated">'）之前和之后。该函数不查看变量 &lt;code&gt;auto-save-visited-file-name&lt;/code&gt; （如下所述）。此函数的调用者应首先检查该变量。</target>
        </trans-unit>
        <trans-unit id="5f36439a1c90c1192fe619d7430e206cee219956" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) says not to load an init file, while &amp;lsquo;</source>
          <target state="translated">'）说不加载初始化文件，而'</target>
        </trans-unit>
        <trans-unit id="7906464c78490eb7dbe4bd8093d5cc632a6472fd" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) starts a comment and a newline or formfeed ends one.</source>
          <target state="translated">'）开始注释，换行符或换页符结束。</target>
        </trans-unit>
        <trans-unit id="c380a929b0fbfed7b21f8789cf9ae5ca36d9d257" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) starts a comment if it is not within a string or character constant. The comment continues to the end of line. The Lisp reader discards comments; they do not become part of the Lisp objects which represent the program within the Lisp system.</source>
          <target state="translated">'）如果注释不在字符串或字符常量内，则开始注释。注释继续到行尾。Lisp阅读器丢弃评论；它们不会成为代表Lisp系统中程序的Lisp对象的一部分。</target>
        </trans-unit>
        <trans-unit id="09c9c375c40df32852a4f0b042c06198acffb6a1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;) syntax class, i.e., their syntax is inherited from the parent table (see &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;Syntax Class Table&lt;/a&gt;).</source>
          <target state="translated">'）语法类，即其语法是从父表继承的（请参见&lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;语法类表&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="a1a860c4f51fc8563b1f5c3aa5bd30c702e9a489" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;), &lt;em&gt;and&lt;/em&gt; the first character of an end-of-comment sequence (&amp;lsquo;</source>
          <target state="translated">'），&lt;em&gt;以及&lt;/em&gt;注释结束序列的第一个字符（'</target>
        </trans-unit>
        <trans-unit id="12a83d6043ae77e6e82f05af392f54c31c8ab6c8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;), Emacs loads neither your personal init file nor the default init file.</source>
          <target state="translated">'），Emacs既不会加载您的个人初始化文件，也不会加载默认的初始化文件。</target>
        </trans-unit>
        <trans-unit id="2712fe912516b58ce3ff3a54d553d11f2d5445df" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;), and it introduces additional special constructs.</source>
          <target state="translated">'），并引入了其他特殊构造。</target>
        </trans-unit>
        <trans-unit id="696d805df02402823ccdf3dbec1f088c9ba9e7cc" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;), and the beginning of the match for the first subexpression is at the 13th character (&amp;lsquo;</source>
          <target state="translated">'），并且第一个子表达式的匹配开始处在第13个字符（'</target>
        </trans-unit>
        <trans-unit id="20f9978ffd20367da06832b5ae6815a656dd5e8b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;), but the details of punctuation and spacing are ignored (searching for &amp;lsquo;</source>
          <target state="translated">'），但标点符号和空格的详细信息将被忽略（搜索&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="2ad724ed78c0e49fcedc4d8192e444887bed5945" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;), if it is interned in the standard obarray, except that setting such a symbol to itself is not an error.</source>
          <target state="translated">'），如果它被插入标准的obarray中，除了将这样的符号设置为自身不是错误。</target>
        </trans-unit>
        <trans-unit id="f4cf90ef77d63a806d05ebfb8c742c0bf1f612a0" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;), it is equivalent to &amp;lsquo;</source>
          <target state="translated">'），等同于'</target>
        </trans-unit>
        <trans-unit id="0ab41b38ca3d0aedf8f77be90d90ea12636c2a97" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;), only the last match is recorded.</source>
          <target state="translated">'），仅记录最后的比赛。</target>
        </trans-unit>
        <trans-unit id="3914d7be43e2aee9e83e3f25009f8e3873162599" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;), or that greatly changes the meaning of other text, like &amp;lsquo;</source>
          <target state="translated">'），否则将大大改变其他文本的含义，例如'</target>
        </trans-unit>
        <trans-unit id="b8e60e2943d58c82fbc8007f162c814565dc4f7f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;), plus those listed in &lt;code&gt;unload-feature-special-hooks&lt;/code&gt;, as well as &lt;code&gt;auto-mode-alist&lt;/code&gt;. This is to prevent Emacs from ceasing to function because important hooks refer to functions that are no longer defined.</source>
          <target state="translated">'），以及在 &lt;code&gt;unload-feature-special-hooks&lt;/code&gt; 中以及 &lt;code&gt;auto-mode-alist&lt;/code&gt; 中列出的内容。这是为了防止Emacs停止使用功能，因为重要的钩子引用了不再定义的功能。</target>
        </trans-unit>
        <trans-unit id="c39c40dc54d95f8b4b6097b9b9a4cb0c4e740d4a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;), the precision specifies how many digits following the decimal point to show; if zero, the decimal-point itself is also omitted. For &amp;lsquo;</source>
          <target state="translated">'），精度指定要显示的小数点后几位数；如果为零，则小数点本身也将被省略。对于</target>
        </trans-unit>
        <trans-unit id="b1384fe0c31b5149aeb485dfa12fc6e40b1ee80a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;).</source>
          <target state="translated">&amp;rsquo;).</target>
        </trans-unit>
        <trans-unit id="8bbc3578566c634244844e6b969bb2dcb2e59fb9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;). &amp;lsquo;</source>
          <target state="translated">'）。'</target>
        </trans-unit>
        <trans-unit id="af979cb0d0cd64b722f99465069129a2fe26eb1c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;). &lt;code&gt;cat&lt;/code&gt; copies its standard input into its standard output. Since the argument &lt;var&gt;destination&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, this output is inserted in the current buffer.</source>
          <target state="translated">'）。 &lt;code&gt;cat&lt;/code&gt; 将其标准输入复制到其标准输出中。由于参数 &lt;var&gt;destination&lt;/var&gt; 是 &lt;code&gt;t&lt;/code&gt; ，因此此输出将插入当前缓冲区中。</target>
        </trans-unit>
        <trans-unit id="c68dc4ae0e6d986a71bfd6c3643e5ebbf09caa5c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;). But if &lt;var&gt;missing-ok&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;load&lt;/code&gt; just returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">'）。但是，如果 &lt;var&gt;missing-ok&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，那么 &lt;code&gt;load&lt;/code&gt; 只会返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2df7b5be0531fd3efcf2cb272072aa67c6d72f64" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;). Each release of a package should be accompanied by an increase in the version number so that it will be recognized as an upgrade by users querying the package archive.</source>
          <target state="translated">'）。软件包的每个发行版都应伴随着版本号的增加，以便用户查询软件包归档文件将其识别为升级。</target>
        </trans-unit>
        <trans-unit id="166adf5b7c951505c700cfe06cfcbe8dc77781d7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;). On graphical terminals, Emacs by default uses curved arrows in the fringes to indicate continuation, so the display table has no effect, unless you disable the fringes.</source>
          <target state="translated">'）。在图形终端上，Emacs默认情况下在条纹中使用弯曲的箭头指示连续，因此除非禁用了条纹，否则显示表无效。</target>
        </trans-unit>
        <trans-unit id="cd3fbf018437e03b91c00df93322bbfedd9db447" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;). See &lt;a href=&quot;display-tables#Display-Tables&quot;&gt;Display Tables&lt;/a&gt;.</source>
          <target state="translated">'）。请参阅&lt;a href=&quot;display-tables#Display-Tables&quot;&gt;显示表&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a8b5aa9d187a754060e77c13a362bd9254fff14a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;). See &lt;a href=&quot;glyphs#Glyphs&quot;&gt;Glyphs&lt;/a&gt;. On graphical terminals, Emacs by default uses arrows in the fringes to indicate truncation, so the display table has no effect, unless you disable the fringes (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Fringes.html#Fringes&quot;&gt;Window Fringes&lt;/a&gt; in</source>
          <target state="translated">'）。参见&lt;a href=&quot;glyphs#Glyphs&quot;&gt;字形&lt;/a&gt;。上的图形终端，Emacs的默认用途在条纹箭头指示截断，所以显示表没有任何影响，除非在禁用条纹（见&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Fringes.html#Fringes&quot;&gt;窗口条纹&lt;/a&gt;在</target>
        </trans-unit>
        <trans-unit id="b4be67c5b758ddc02a3f5b61b51d03830715efde" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;). See &lt;a href=&quot;motion-and-syntax#Motion-and-Syntax&quot;&gt;Motion and Syntax&lt;/a&gt;.</source>
          <target state="translated">'）。请参阅&lt;a href=&quot;motion-and-syntax#Motion-and-Syntax&quot;&gt;运动和语法&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d08c021839e737438272feaca72be14f215533bb" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;). See &lt;a href=&quot;selective-display#Selective-Display&quot;&gt;Selective Display&lt;/a&gt;.</source>
          <target state="translated">'）。请参阅&lt;a href=&quot;selective-display#Selective-Display&quot;&gt;选择性显示&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="75fb6e2a921debc251db3b6545a4b259d2b1c0e8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;). See &lt;a href=&quot;splitting-windows#Splitting-Windows&quot;&gt;Splitting Windows&lt;/a&gt;. This currently has effect only on text terminals; on graphical terminals, if vertical scroll bars are supported and in use, a scroll bar separates the two windows, and if there are no vertical scroll bars and no dividers (see &lt;a href=&quot;window-dividers#Window-Dividers&quot;&gt;Window Dividers&lt;/a&gt;), Emacs uses a thin line to indicate the border.</source>
          <target state="translated">'）。请参阅&lt;a href=&quot;splitting-windows#Splitting-Windows&quot;&gt;分割Windows&lt;/a&gt;。目前这仅对文本终端有效；在图形终端上，如果支持并使用垂直滚动条，则滚动条将两个窗口分隔开，并且如果没有垂直滚动条和分隔线（请参见&lt;a href=&quot;window-dividers#Window-Dividers&quot;&gt;Window Dividers&lt;/a&gt;），Emacs将使用细线指示边框。</target>
        </trans-unit>
        <trans-unit id="6a5f2f12c8721402eaa23c5ff209cbfc17f6b805" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;). The flags &amp;lsquo;</source>
          <target state="translated">'）。旗帜'</target>
        </trans-unit>
        <trans-unit id="77355f92ca528b086526811e4049b496417dee45" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;). This can interfere with code that requires ordinary</source>
          <target state="translated">'）。这会干扰需要普通代码的代码</target>
        </trans-unit>
        <trans-unit id="71c1842324fb68dbb3b18a8929f8297c9e75db86" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;). This is usually also the symbol prefix used in the program (see &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/elisp/Coding-Conventions.html#Coding-Conventions&quot;&gt;Coding Conventions&lt;/a&gt;).</source>
          <target state="translated">'）。通常，它也是程序中使用的符号前缀（请参阅&lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/elisp/Coding-Conventions.html#Coding-Conventions&quot;&gt;编码约定&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="5ccb7c25efe30fe61d3171bc5a486229d7216da1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;); a space specifies that there is no matching character. Then come characters specifying additional syntax properties (see &lt;a href=&quot;syntax-flags#Syntax-Flags&quot;&gt;Syntax Flags&lt;/a&gt;).</source>
          <target state="translated">'）; 空格表示没有匹配的字符。然后是指定其他语法属性的字符（请参见&lt;a href=&quot;syntax-flags#Syntax-Flags&quot;&gt;语法标志&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="244db31c10b5706b3c258bf53be68945f3f34895" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;); e.g., the</source>
          <target state="translated">'）; 例如，</target>
        </trans-unit>
        <trans-unit id="d9b93a89ea96064978297ef1411940f8df5fe34b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;,</source>
          <target state="translated">&amp;rsquo;,</target>
        </trans-unit>
        <trans-unit id="5539094fa0b03be2ecf5d76b2f76c3ceb8adb603" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, &amp;lsquo;</source>
          <target state="translated">'，'</target>
        </trans-unit>
        <trans-unit id="df3e9f4ba8549a3d06de0749585f0e61d7ccf284" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, &lt;code&gt;nil&lt;/code&gt; if the user types &amp;lsquo;</source>
          <target state="translated">'，如果用户键入' &lt;code&gt;nil&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="27acaac084b979f3b1b97668327c9bc00d6cf94f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, &lt;code&gt;read-event&lt;/code&gt; does not display any message to indicate it is waiting for input; instead, it prompts by echoing: it displays descriptions of the events that led to or were read by the current command. See &lt;a href=&quot;the-echo-area#The-Echo-Area&quot;&gt;The Echo Area&lt;/a&gt;.</source>
          <target state="translated">'， &lt;code&gt;read-event&lt;/code&gt; 不显示任何消息以指示它正在等待输入；而是通过回显来提示：它显示导致当前命令或由当前命令读取的事件的描述。参见&lt;a href=&quot;the-echo-area#The-Echo-Area&quot;&gt;回声区&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="23b792ae62caef6b854c659a112519dd81079931" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, Lisp syntax requires you to quote each &amp;lsquo;</source>
          <target state="translated">'，Lisp语法要求您引用每个'</target>
        </trans-unit>
        <trans-unit id="b4a59f9e4b8f8dbbb0e60397aaedd8e3ed369857" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, a descriptive string (typically the type name followed by the name of the object), and a closing &amp;lsquo;</source>
          <target state="translated">'，描述性字符串（通常是类型名称，后跟对象名称），并以'</target>
        </trans-unit>
        <trans-unit id="2a9f3a0f3fc8dbfd78260be83e1a0118520974b9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, a meta character turns into a string starting with &amp;lsquo;</source>
          <target state="translated">'，则元字符变成以'开头的字符串</target>
        </trans-unit>
        <trans-unit id="097e5ed2eff306899394e192af415539f6c697b1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, add to &lt;code&gt;initial-frame-alist&lt;/code&gt;; the others add to &lt;code&gt;default-frame-alist&lt;/code&gt;. see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Emacs-Invocation.html#Emacs-Invocation&quot;&gt;Command Line Arguments for Emacs Invocation&lt;/a&gt; in</source>
          <target state="translated">'，添加到 &lt;code&gt;initial-frame-alist&lt;/code&gt; ；其他添加到 &lt;code&gt;default-frame-alist&lt;/code&gt; 。看到&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Emacs-Invocation.html#Emacs-Invocation&quot;&gt;Emacs的调用命令行参数&lt;/a&gt;中</target>
        </trans-unit>
        <trans-unit id="0ba94342316333b349754d7726774e8ca376b951" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, after which we are in a character alternative; &amp;lsquo;</source>
          <target state="translated">'，之后我们可以选择其他字符；'</target>
        </trans-unit>
        <trans-unit id="b4c2b924dddb74784fdc00cbc01bb9d353155e30" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and &amp;lsquo;</source>
          <target state="translated">'和'</target>
        </trans-unit>
        <trans-unit id="7507c3107d93398f1a3a42efd8facb7f4eefb5bb" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and &lt;code&gt;^&lt;/code&gt; together; the order does not matter. Actual reading of arguments is controlled by the rest of the prompt string (starting with the first character that is not &amp;lsquo;</source>
          <target state="translated">'和 &lt;code&gt;^&lt;/code&gt; 在一起；顺序无关紧要。参数的实际读取是由提示字符串的其余部分控制的（从第一个非'字符开始）</target>
        </trans-unit>
        <trans-unit id="4600a372b88397972a67a000d46a8d5d0d5b556f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and all of them begin with the word &amp;lsquo;</source>
          <target state="translated">'，而且所有这些都以单词'</target>
        </trans-unit>
        <trans-unit id="c464e6c66edda8293effb3ee2951104596116a54" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and exists for compatibility, so that you could pass it to functions that expect a display name.</source>
          <target state="translated">'，并且为了兼容而存在，因此您可以将其传递给需要显示名称的函数。</target>
        </trans-unit>
        <trans-unit id="f7e6a0f2ddcdbb0932b97022122ad3be50874d2b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and if both flags are used, &amp;lsquo;</source>
          <target state="translated">'，如果同时使用了两个标志，则'</target>
        </trans-unit>
        <trans-unit id="3f48614723a7e93ea40757016784be77dd496780" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and it cannot be changed. Minibuffers are displayed only in special windows used only for minibuffers; these windows always appear at the bottom of a frame. (Sometimes frames have no minibuffer window, and sometimes a special kind of frame contains nothing but a minibuffer window; see &lt;a href=&quot;minibuffers-and-frames#Minibuffers-and-Frames&quot;&gt;Minibuffers and Frames&lt;/a&gt;.)</source>
          <target state="translated">'，并且无法更改。迷你缓冲区仅在专用于迷你缓冲区的特殊窗口中显示；这些窗口始终显示在框架的底部。（有时帧没有迷你缓冲区窗口，有时一种特殊的帧只包含一个迷你缓冲区窗口；请参阅&amp;ldquo;迷你缓冲区&lt;a href=&quot;minibuffers-and-frames#Minibuffers-and-Frames&quot;&gt;和帧&amp;rdquo;&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="5083f0a9380e592d4d3feb9b9eff708af9c2f377" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and it makes no difference if there are trailing spaces in the preceding line.</source>
          <target state="translated">'，并且在前一行中是否有尾随空格也没有区别。</target>
        </trans-unit>
        <trans-unit id="5e8c4b2f52bb7a282a1eab0f72359c044de4182a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and likewise for each set of equivalent characters.)</source>
          <target state="translated">'，并且同样适用于每组等效字符。）</target>
        </trans-unit>
        <trans-unit id="b07014d84e3e4b2451b512c382577e06fef80aea" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and nothing else. &amp;lsquo;</source>
          <target state="translated">'，仅此而已。'</target>
        </trans-unit>
        <trans-unit id="e59d6865633c50fce2fae557747a34250af5da84" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and puts the value in the list structure:</source>
          <target state="translated">'，并将值放在列表结构中：</target>
        </trans-unit>
        <trans-unit id="5f5edae4aa262f2bc5176fcfb06ee918cbf5ce15" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and reading that text produces a list (but not the same list) with elements &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">&amp;rdquo;，然后阅读该文本会生成一个包含元素 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 的列表（但不是同一列表）。</target>
        </trans-unit>
        <trans-unit id="399c4fe374d27da23ed459e3f0b74183918742fc" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and reading that text returns the symbol &lt;code&gt;foo&lt;/code&gt;. Printing a list whose elements are &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; produces the text &amp;lsquo;</source>
          <target state="translated">&amp;rdquo;，读取该文本将返回符号 &lt;code&gt;foo&lt;/code&gt; 。打印元素为 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 的列表会产生文本'</target>
        </trans-unit>
        <trans-unit id="162c4fa7cd580fb02ea9b7ec21a851a124045518" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and repeats the request.</source>
          <target state="translated">&amp;rsquo;, and repeats the request.</target>
        </trans-unit>
        <trans-unit id="21e26494476ef1b6fb7e594c6bd540333f1a5ef7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and searching for subsequent instances of &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, and searching for subsequent instances of &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="361c5abac6e6f661cfe4930a08d506bfa694cec7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and so on). For making key bindings with &lt;code&gt;define-key&lt;/code&gt;, you can use lists such as &lt;code&gt;(control hyper ?x)&lt;/code&gt; to specify the characters (see &lt;a href=&quot;changing-key-bindings#Changing-Key-Bindings&quot;&gt;Changing Key Bindings&lt;/a&gt;). The function &lt;code&gt;event-convert-list&lt;/code&gt; converts such a list into an event type (see &lt;a href=&quot;classifying-events#Classifying-Events&quot;&gt;Classifying Events&lt;/a&gt;).</source>
          <target state="translated">&amp;rsquo;, and so on). For making key bindings with &lt;code&gt;define-key&lt;/code&gt; , you can use lists such as &lt;code&gt;(control hyper ?x)&lt;/code&gt; to specify the characters (see &lt;a href=&quot;changing-key-bindings#Changing-Key-Bindings&quot;&gt;Changing Key Bindings&lt;/a&gt;). The function &lt;code&gt;event-convert-list&lt;/code&gt; converts such a list into an event type (see &lt;a href=&quot;classifying-events#Classifying-Events&quot;&gt;Classifying Events&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="609fd798d1c7d9d0fb0f69d017ef98b2923d946f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and so on.</source>
          <target state="translated">&amp;rsquo;, and so on.</target>
        </trans-unit>
        <trans-unit id="60588d4161391aeb0b298e91356209936039bdf9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and space, tab, etc., appear as &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, and space, tab, etc., appear as &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="ba27f2dc083575807a9e85e1ed54fe7135c4dc45" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and the &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, and the &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="96f154f55463581317f08eea3fb8ece521806d67" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and the class is &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, and the class is &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="d2934060178bab17730e6827836cad89feebedb4" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and the constructs &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, and the constructs &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="b46d0e4b793605bbcac0948eee13618b319d26f7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and the hexadecimal character code. Thus, &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, and the hexadecimal character code. Thus, &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="840b77e202945e4e26604678ce01e934d3fd90b0" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and the others are digit characters representing the character code in octal. (A display table can specify a glyph to use instead of &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, and the others are digit characters representing the character code in octal. (A display table can specify a glyph to use instead of &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="5c978fbc7c65257c70271e3e92fca193c622a393" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and the second is &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, and the second is &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="e468f3e68cca32638e6fb4d51f350ded372d26d2" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and then provides assistance in finding out what the key bindings are, and what the mode is intended for. It returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&amp;rsquo;, and then provides assistance in finding out what the key bindings are, and what the mode is intended for. It returns &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5c4de5bb8974d13b31c30bf5f6ffb705f73c4f51" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and then types</source>
          <target state="translated">&amp;rsquo;, and then types</target>
        </trans-unit>
        <trans-unit id="2d18e8834f14830b4930260bc33e5f18af73b427" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and to format just nonnegative integers you can also use &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, and to format just nonnegative integers you can also use &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="259481542e2ccfb8e2e8bed8c7792c4b1741ba41" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, and you should add a backslash before any of the characters &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, and you should add a backslash before any of the characters &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="d84d4b31b0a62a2e0f01a16d5313bb486905f729" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, any edits previously made in the buffer are lost.</source>
          <target state="translated">&amp;rsquo;, any edits previously made in the buffer are lost.</target>
        </trans-unit>
        <trans-unit id="3862e086cc3fbd5e98336c0827d406317d7d8075" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, applied to that same string, matches just &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, applied to that same string, matches just &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="2ded37fdb7807cd0b2a20bd5c7f09731bf81070a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, are interpreted as usual in &lt;code&gt;exec-path&lt;/code&gt;, but environment variable substitutions (&amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, are interpreted as usual in &lt;code&gt;exec-path&lt;/code&gt; , but environment variable substitutions (&amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="3e4d4715755215a66d86ca37f92ade06fae4b47f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, are not hardwired, and are specified by the keymap &lt;code&gt;query-replace-map&lt;/code&gt; (see &lt;a href=&quot;search-and-replace#Search-and-Replace&quot;&gt;Search and Replace&lt;/a&gt;). In particular, if the user enters the special responses &lt;code&gt;recenter&lt;/code&gt;, &lt;code&gt;scroll-up&lt;/code&gt;, &lt;code&gt;scroll-down&lt;/code&gt;, &lt;code&gt;scroll-other-window&lt;/code&gt;, or &lt;code&gt;scroll-other-window-down&lt;/code&gt; (respectively bound to</source>
          <target state="translated">&amp;rsquo;, are not hardwired, and are specified by the keymap &lt;code&gt;query-replace-map&lt;/code&gt; (see &lt;a href=&quot;search-and-replace#Search-and-Replace&quot;&gt;Search and Replace&lt;/a&gt;). In particular, if the user enters the special responses &lt;code&gt;recenter&lt;/code&gt; , &lt;code&gt;scroll-up&lt;/code&gt; , &lt;code&gt;scroll-down&lt;/code&gt; , &lt;code&gt;scroll-other-window&lt;/code&gt; , or &lt;code&gt;scroll-other-window-down&lt;/code&gt; (respectively bound to</target>
        </trans-unit>
        <trans-unit id="9dd84280385d00bd2b1ee68b082b112bdc0fd428" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, as appropriate.</source>
          <target state="translated">&amp;rsquo;, as appropriate.</target>
        </trans-unit>
        <trans-unit id="dd6a2805f2f963b0be3ba8b33bfea7dbaf2bae7a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, as well as non-</source>
          <target state="translated">&amp;rsquo;, as well as non-</target>
        </trans-unit>
        <trans-unit id="cf71817d582852c22bf34174bab7285f97e98138" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, because the first alternative matches &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, because the first alternative matches &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="a5eeb7e27e20f7c95143b3f5f98bd9accad35990" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, because this does not make the result shorter on many systems.</source>
          <target state="translated">&amp;rsquo;, because this does not make the result shorter on many systems.</target>
        </trans-unit>
        <trans-unit id="e7319ec80359dd64367acbbf52a52abc5b0ac7ac" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, before the first process finishes. Then it finishes, and a message to that effect is inserted in the buffer. Much later, the first process finishes, and another message is inserted in the buffer for it.</source>
          <target state="translated">&amp;rsquo;, before the first process finishes. Then it finishes, and a message to that effect is inserted in the buffer. Much later, the first process finishes, and another message is inserted in the buffer for it.</target>
        </trans-unit>
        <trans-unit id="62687524905fd3217ebef6a7f3a08f508131933b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, but does not match &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, but does not match &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="c52ad5539e65fef0eeef4cf635e079ab241e2ec1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, but doesn&amp;rsquo;t trigger the debugger, like &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, but doesn&amp;rsquo;t trigger the debugger, like &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="5f09cbf589014435dbb7b986c44c06fb63bbac75" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, but if the documentation string is more than one line, add a button to control whether to show all of it or just the first line.</source>
          <target state="translated">&amp;rsquo;, but if the documentation string is more than one line, add a button to control whether to show all of it or just the first line.</target>
        </trans-unit>
        <trans-unit id="7ceba937bfc9a96b6a099111312d4ae79763a04d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, but including the end-of-line format.</source>
          <target state="translated">&amp;rsquo;, but including the end-of-line format.</target>
        </trans-unit>
        <trans-unit id="859b879cb4a6f1a71cb6973d20358a673fa9d9ec" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, but it does match a &lt;em&gt;part&lt;/em&gt; of that string.) Likewise, &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, but it does match a &lt;em&gt;part&lt;/em&gt; of that string.) Likewise, &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="e7b9f80d7801c176927afa59dcd8c02d42b70f17" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, but not in all, so no more than &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, but not in all, so no more than &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="0142711131c20a9b6c8bfc476c54fc1f255841b5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, but the size is printed in a more readable way by using &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, but the size is printed in a more readable way by using &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="87d19d6b140356263751c838f6a12d58195bff82" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, but this need not be the case. An ordinary element of the alist looks like &lt;code&gt;(&lt;var&gt;regexp&lt;/var&gt; .  &lt;var&gt;mode-function&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">&amp;rsquo;, but this need not be the case. An ordinary element of the alist looks like &lt;code&gt;(&lt;var&gt;regexp&lt;/var&gt; . &lt;var&gt;mode-function&lt;/var&gt;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9bc318f345b18ef1218daf8d3548ccfa3e2fe847" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, but used when bootstrapping Emacs with the &lt;code&gt;unexec&lt;/code&gt; method.</source>
          <target state="translated">&amp;rsquo;, but used when bootstrapping Emacs with the &lt;code&gt;unexec&lt;/code&gt; method.</target>
        </trans-unit>
        <trans-unit id="dda3dbfad9ce80bdcd98c7d7577e074881ef817a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, but used while &lt;em&gt;bootstrapping&lt;/em&gt; Emacs, when no previous Emacs binary and no</source>
          <target state="translated">&amp;rsquo;, but used while &lt;em&gt;bootstrapping&lt;/em&gt; Emacs, when no previous Emacs binary and no</target>
        </trans-unit>
        <trans-unit id="6edf9c6e42cb1b8af0583036aa2a27ff0ea91717" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, calling &lt;code&gt;replace-match&lt;/code&gt; with 1 as &lt;var&gt;subexp&lt;/var&gt; means to replace just the text that matched &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, calling &lt;code&gt;replace-match&lt;/code&gt; with 1 as &lt;var&gt;subexp&lt;/var&gt; means to replace just the text that matched &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="4c61544a2ca1c94566789e3f17496259ce0ca65d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, contains &lt;code&gt;control&lt;/code&gt;, even though reading such an event via &lt;code&gt;read-char&lt;/code&gt; will return the value 1 with the control modifier bit removed.</source>
          <target state="translated">&amp;rsquo;, contains &lt;code&gt;control&lt;/code&gt; , even though reading such an event via &lt;code&gt;read-char&lt;/code&gt; will return the value 1 with the control modifier bit removed.</target>
        </trans-unit>
        <trans-unit id="26718c8e3e230761411b4e6694bd329645c493d6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, does not have the &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, does not have the &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="7f3284e26aa04e7ac21bbc46bc429686b975f1ed" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, e.g. use &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, e.g. use &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="33d5eb9b39c7958f64baa156603face69d362adc" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, e.g., &lt;code&gt;bury-buffer-internal&lt;/code&gt;. Emacs code contributed before 2018 may follow other internal-use naming conventions, which are being phased out.</source>
          <target state="translated">&amp;rsquo;, e.g., &lt;code&gt;bury-buffer-internal&lt;/code&gt; . Emacs code contributed before 2018 may follow other internal-use naming conventions, which are being phased out.</target>
        </trans-unit>
        <trans-unit id="5899fa884bf6a23ef37e4ff79b3a5d5a62adf694" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, etc.</source>
          <target state="translated">&amp;rsquo;, etc.</target>
        </trans-unit>
        <trans-unit id="4b72eac989215486a1a51108725f3a7d0efc53ec" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, etc. A function key symbol appears inside angle brackets &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, etc. A function key symbol appears inside angle brackets &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="5b75f27279a8328cc1ea5e9c24e09f83535108b7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, etc.) are not recognized; use &lt;code&gt;substitute-in-file-name&lt;/code&gt; to perform them (see &lt;a href=&quot;file-name-expansion#File-Name-Expansion&quot;&gt;File Name Expansion&lt;/a&gt;). &lt;code&gt;nil&lt;/code&gt; in this list refers to &lt;code&gt;default-directory&lt;/code&gt;.</source>
          <target state="translated">&amp;rsquo;, etc.) are not recognized; use &lt;code&gt;substitute-in-file-name&lt;/code&gt; to perform them (see &lt;a href=&quot;file-name-expansion#File-Name-Expansion&quot;&gt;File Name Expansion&lt;/a&gt;). &lt;code&gt;nil&lt;/code&gt; in this list refers to &lt;code&gt;default-directory&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7813427aade80c1314ac6927d6793b1321a0a1e9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, etc.) has been modified most recently.</source>
          <target state="translated">&amp;rsquo;, etc.) has been modified most recently.</target>
        </trans-unit>
        <trans-unit id="a44d89b0939008a6b5d0726a80bd725ce696b317" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, etc.) to be unique.</source>
          <target state="translated">&amp;rsquo;, etc.) to be unique.</target>
        </trans-unit>
        <trans-unit id="3471a058ca997cbc925d62756d5891f72374258b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, etc., are allowed; use</source>
          <target state="translated">&amp;rsquo;, etc., are allowed; use</target>
        </trans-unit>
        <trans-unit id="b0eff0a73f03d758217829a28766d07feef2eaf1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, etc., with any number (zero or more) of &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, etc., with any number (zero or more) of &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="72aa9b4cba8dc77e0788decce34009e8d7ff4e3f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, even in comments, and another to fontify the words &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, even in comments, and another to fontify the words &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="6cadb9c9597504f595d438bea28b6197fcf2461a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, except that it suppresses, for the last input event in the key sequence, the conversions that are normally used (when necessary) to convert an undefined key into a defined one.</source>
          <target state="translated">&amp;rsquo;, except that it suppresses, for the last input event in the key sequence, the conversions that are normally used (when necessary) to convert an undefined key into a defined one.</target>
        </trans-unit>
        <trans-unit id="b559bdf2c4948c3101eba4777f23ae665f33d458" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, followed by a literal dollar sign &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, followed by a literal dollar sign &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="a670724dd2089632f9f5dfa64baf70a0beaec53d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, followed by the function name and argument values. A function exit record consists of &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, followed by the function name and argument values. A function exit record consists of &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="71e626d7e00f88fbc99772a03efd0bbd3f2d6bdc" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, followed by the function name and result of the function.</source>
          <target state="translated">&amp;rsquo;, followed by the function name and result of the function.</target>
        </trans-unit>
        <trans-unit id="ef1dbf1340b0ad5e609277891c75820552596dc1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, followed by the original error message.</source>
          <target state="translated">&amp;rsquo;, followed by the original error message.</target>
        </trans-unit>
        <trans-unit id="7cbc2be0f94402568f184a400397666ec97e5f28" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, has the &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, has the &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="a90beacfb62e7aff19d5941f65c4681b9680491f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, hyperlinks, or images. Special HTML characters must be encoded, as &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, hyperlinks, or images. Special HTML characters must be encoded, as &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="8ff967d1e85ab5b812b2b0a3d0719cd5dec1c057" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, if it is necessary to ensure that a postfix operator appended to it will apply to the whole expression.</source>
          <target state="translated">&amp;rsquo;, if it is necessary to ensure that a postfix operator appended to it will apply to the whole expression.</target>
        </trans-unit>
        <trans-unit id="42e580d8888181b0569cb8f8f481c65766ed18f5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, if necessary to ensure that a postfix operator appended to it will apply to the whole expression.</source>
          <target state="translated">&amp;rsquo;, if necessary to ensure that a postfix operator appended to it will apply to the whole expression.</target>
        </trans-unit>
        <trans-unit id="9fd91eff8d33cb0a712338a9b0255efc6b408b19" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, in which the first three characters have a &lt;code&gt;face&lt;/code&gt; property with value &lt;code&gt;bold&lt;/code&gt;, and the last three have a &lt;code&gt;face&lt;/code&gt; property with value &lt;code&gt;italic&lt;/code&gt;. (The fourth character has no text properties, so its property list is &lt;code&gt;nil&lt;/code&gt;. It is not actually necessary to mention ranges with &lt;code&gt;nil&lt;/code&gt; as the property list, since any characters not mentioned in any range will default to having no properties.)</source>
          <target state="translated">&amp;rsquo;, in which the first three characters have a &lt;code&gt;face&lt;/code&gt; property with value &lt;code&gt;bold&lt;/code&gt; , and the last three have a &lt;code&gt;face&lt;/code&gt; property with value &lt;code&gt;italic&lt;/code&gt; . (The fourth character has no text properties, so its property list is &lt;code&gt;nil&lt;/code&gt; . It is not actually necessary to mention ranges with &lt;code&gt;nil&lt;/code&gt; as the property list, since any characters not mentioned in any range will default to having no properties.)</target>
        </trans-unit>
        <trans-unit id="fd62f65ccd385e61ef3117c8c0554dba8febc645" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, instead of an actual whitespace character such as a tab or a space. (If you do write backslash followed by a space, you should write an extra space after the character constant to separate it from the following text.)</source>
          <target state="translated">&amp;rsquo;, instead of an actual whitespace character such as a tab or a space. (If you do write backslash followed by a space, you should write an extra space after the character constant to separate it from the following text.)</target>
        </trans-unit>
        <trans-unit id="8ea7e8bd5804f3451344697353520850d00e1e77" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, interned in the standard obarray, and returns &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">&amp;rsquo;, interned in the standard obarray, and returns &lt;code&gt;nil&lt;/code&gt; otherwise.</target>
        </trans-unit>
        <trans-unit id="a8112eb688b9a06c9b61586ff27364c1c6d1efd3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, irrespective of where that text goes. The value returned by evaluating the form follows on a separate line with &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, irrespective of where that text goes. The value returned by evaluating the form follows on a separate line with &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="557a6be7e9046670afa396beb457e3eb865089c0" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, is a prefix key whose definition is the sparse keymap &lt;code&gt;(keymap (83 . center-paragraph)
(115 . foo))&lt;/code&gt;.</source>
          <target state="translated">&amp;rsquo;, is a prefix key whose definition is the sparse keymap &lt;code&gt;(keymap (83 . center-paragraph) (115 . foo))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9c8930179e5be49afb68b72ce3dc35efd148fa1b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, it adds &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, it adds &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="854289abca9f8e32f3c539d916a84aba1820a429" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, it always includes a decimal point, and also forces any trailing zeros after the decimal point to be left in place where they would otherwise be removed.</source>
          <target state="translated">&amp;rsquo;, it always includes a decimal point, and also forces any trailing zeros after the decimal point to be left in place where they would otherwise be removed.</target>
        </trans-unit>
        <trans-unit id="209a2bdfe4cef518986af06a47970f2f9571e9e1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, it ensures that the result begins with a &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, it ensures that the result begins with a &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="1cfc47c32f0b164cd7e9624c6d6b7ca0369854bc" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, it expands to your home directory, which is typically specified by the value of the &lt;code&gt;HOME&lt;/code&gt; environment variable (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/General-Variables.html#General-Variables&quot;&gt;General Variables&lt;/a&gt; in</source>
          <target state="translated">&amp;rsquo;, it expands to your home directory, which is typically specified by the value of the &lt;code&gt;HOME&lt;/code&gt; environment variable (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/General-Variables.html#General-Variables&quot;&gt;General Variables&lt;/a&gt; in</target>
        </trans-unit>
        <trans-unit id="f8eb5aeea81c17bc738eba82be2498ff2ad544ae" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, it is treated as an HTTP(S) URL, and packages are downloaded from this archive via HTTP(S) (as is the case for the default GNU archive).</source>
          <target state="translated">&amp;rsquo;, it is treated as an HTTP(S) URL, and packages are downloaded from this archive via HTTP(S) (as is the case for the default GNU archive).</target>
        </trans-unit>
        <trans-unit id="f19355987aea63506d06dbaef16efeea45edcce9" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, it prefixes nonzero results with &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, it prefixes nonzero results with &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="ddb0c1584f2dd17d31e5dace7a41d6aef83b9d85" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, it responds by displaying these prompts, with a brief pause between them:</source>
          <target state="translated">&amp;rsquo;, it responds by displaying these prompts, with a brief pause between them:</target>
        </trans-unit>
        <trans-unit id="a44e87f688870f275f8756f192b14ddd8822ef3f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, it signals a directory. The elements which do &lt;em&gt;not&lt;/em&gt; end in a slash will never match a directory; thus, the above value will not filter out a directory named</source>
          <target state="translated">&amp;rsquo;, it signals a directory. The elements which do &lt;em&gt;not&lt;/em&gt; end in a slash will never match a directory; thus, the above value will not filter out a directory named</target>
        </trans-unit>
        <trans-unit id="ec16eb7b0c1cb9c8607690b91d25398c8caf393a" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, just as in the &lt;code&gt;lambda&lt;/code&gt; case. It also marks the stack frame for that function so that it will invoke the debugger when exited.</source>
          <target state="translated">&amp;rsquo;, just as in the &lt;code&gt;lambda&lt;/code&gt; case. It also marks the stack frame for that function so that it will invoke the debugger when exited.</target>
        </trans-unit>
        <trans-unit id="83092682c6a59fa344aca66d9ba9aaa7e1ccd9f8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, just like &lt;code&gt;foo&lt;/code&gt;.</source>
          <target state="translated">&amp;rsquo;, just like &lt;code&gt;foo&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d203181767dc37e11a2f6d26507baf1fdd7187cc" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, just like the &lt;code&gt;DISPLAY&lt;/code&gt; environment variable. See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;, for more details about display names.</source>
          <target state="translated">&amp;rsquo;, just like the &lt;code&gt;DISPLAY&lt;/code&gt; environment variable. See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;, for more details about display names.</target>
        </trans-unit>
        <trans-unit id="a266aeed89e5fa57fed340244a45960f77e7691f" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, not &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, not &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="baff3f4810431dfaf416e663468b15734a511eee" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, not a repeating &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, not a repeating &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="12808fdbb4df64a0d98e5d152321dc1940847ee6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, on a line by itself, just before the real definition of the function in its autoloadable source file. The command</source>
          <target state="translated">&amp;rsquo;, on a line by itself, just before the real definition of the function in its autoloadable source file. The command</target>
        </trans-unit>
        <trans-unit id="4dccfe9d8e373780189a9d807e3e807e20ad8ef7" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, on some operating systems). Here is an example of how to set &lt;code&gt;EMACSLOADPATH&lt;/code&gt; variable (from a &lt;code&gt;sh&lt;/code&gt;-style shell):</source>
          <target state="translated">&amp;rsquo;, on some operating systems). Here is an example of how to set &lt;code&gt;EMACSLOADPATH&lt;/code&gt; variable (from a &lt;code&gt;sh&lt;/code&gt; -style shell):</target>
        </trans-unit>
        <trans-unit id="f307dbc595c36b91f1275e80e0395cbaf3c6504c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, or &amp;lsquo;</source>
          <target state="translated">'， 要么 '</target>
        </trans-unit>
        <trans-unit id="29deaee94adb830817c01ea0a980e084a12109ed" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, or as &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, or as &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="9fe2680d738987448bf60b3b2a0b793a2e0f2ca5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, or is &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, or is &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="4b66dabd0d4854d0d4dcae65bf54578dba111bef" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, or might contain shell metacharacters like &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, or might contain shell metacharacters like &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="bca920cdc554383444bb3b6111e0a125ab56934e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, or with any other syntax for a character. Thus, you can write</source>
          <target state="translated">&amp;rsquo;, or with any other syntax for a character. Thus, you can write</target>
        </trans-unit>
        <trans-unit id="fd629104c213567c8b9b59cea5c4ac24d9e33891" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, otherwise it is &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, otherwise it is &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="932f9ad086811ac69de73094d20fdfc55cd1613d" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, put it anywhere but at the beginning. To include &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, put it anywhere but at the beginning. To include &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="ac95d1c364a19e6fb93d67835c657da7c1f099a3" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, put it at the end. Thus, &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, put it at the end. Thus, &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="eb1825d9bb4f80cd4b0eddca59742dda79ee843c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, respectively.</source>
          <target state="translated">&amp;rsquo;, respectively.</target>
        </trans-unit>
        <trans-unit id="ece817085c311045c341994b91039d3691810f09" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, respectively. (&amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, respectively. (&amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="7caf85ba2ce09d88ab0f5bef4bba21a8182b427c" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, respectively. Commands are simply functions that may be called interactively; macros process their arguments differently from functions (the arguments are not evaluated), but are presented the same way.</source>
          <target state="translated">&amp;rsquo;, respectively. Commands are simply functions that may be called interactively; macros process their arguments differently from functions (the arguments are not evaluated), but are presented the same way.</target>
        </trans-unit>
        <trans-unit id="b55241cd025410601c89de1a217371d0596cf8fb" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, say,</source>
          <target state="translated">&amp;rsquo;, say,</target>
        </trans-unit>
        <trans-unit id="3b8962283218f8939e13b86964ef267e637c6084" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, so if you specify a code point higher than that, Emacs signals an error.</source>
          <target state="translated">&amp;rsquo;, so if you specify a code point higher than that, Emacs signals an error.</target>
        </trans-unit>
        <trans-unit id="7631bcd28615461a5ac383b81747b98e37b04894" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, so that is the result. In the second example, there is only one possible match, and it is exact, so the return value is &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">&amp;rsquo;, so that is the result. In the second example, there is only one possible match, and it is exact, so the return value is &lt;code&gt;t&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="35656c1f675569c7fc5da83ac95612bcdbd042ed" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, so that name is the value.</source>
          <target state="translated">&amp;rsquo;, so that name is the value.</target>
        </trans-unit>
        <trans-unit id="7d924ec8513fd883b0d6beb8f2e9a44a4ff32cf8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, so there can be up to 8 different comment styles, each one named by the set of its flags. Each comment delimiter has a style and only matches comment delimiters of the same style. Thus if a comment starts with the comment-start sequence of style &amp;ldquo;bn&amp;rdquo;, it will extend until the next matching comment-end sequence of style &amp;ldquo;bn&amp;rdquo;. When the set of flags has neither flag &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, so there can be up to 8 different comment styles, each one named by the set of its flags. Each comment delimiter has a style and only matches comment delimiters of the same style. Thus if a comment starts with the comment-start sequence of style &amp;ldquo;bn&amp;rdquo;, it will extend until the next matching comment-end sequence of style &amp;ldquo;bn&amp;rdquo;. When the set of flags has neither flag &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="d696b5a7c5b206ec83795d9be662c3758e1de7d8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, that &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, that &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="866e14327fe9e8c1b6ba4037e3a8483924e20e54" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, that indicates it is probably an &lt;em&gt;abnormal hook&lt;/em&gt;. That means the hook functions are called with arguments, or their return values are used in some way. The hook&amp;rsquo;s documentation says how the functions are called. You can use &lt;code&gt;add-hook&lt;/code&gt; to add a function to an abnormal hook, but you must write the function to follow the hook&amp;rsquo;s calling convention. By convention, abnormal hook names end in &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, that indicates it is probably an &lt;em&gt;abnormal hook&lt;/em&gt;. That means the hook functions are called with arguments, or their return values are used in some way. The hook&amp;rsquo;s documentation says how the functions are called. You can use &lt;code&gt;add-hook&lt;/code&gt; to add a function to an abnormal hook, but you must write the function to follow the hook&amp;rsquo;s calling convention. By convention, abnormal hook names end in &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="853a694e67280628e5b76a9284a39d5522f57fd1" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, that is converted to &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, that is converted to &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="e8d7fa8ce9d022e453d0adeb216bada67b751fb8" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, that tells you it is normal. We try to make all hooks normal, as much as possible, so that you can use them in a uniform way.</source>
          <target state="translated">&amp;rsquo;, that tells you it is normal. We try to make all hooks normal, as much as possible, so that you can use them in a uniform way.</target>
        </trans-unit>
        <trans-unit id="e2eb2a6258c791792b7bf3dda00569c106401394" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, the &amp;lsquo;</source>
          <target state="translated">'，'</target>
        </trans-unit>
        <trans-unit id="62e55f6f017857e9057f15f60589334a4b5a8c6e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, the function discards everything before it (up through the immediately preceding &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, the function discards everything before it (up through the immediately preceding &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="85d87d3c3517809647aa4617f6597bc82cb23f09" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, the function is intended for internal use and the first part names the file defining the function. For example, a function named &lt;code&gt;vc-git--rev-parse&lt;/code&gt; is an internal function defined in</source>
          <target state="translated">&amp;rsquo;, the function is intended for internal use and the first part names the file defining the function. For example, a function named &lt;code&gt;vc-git--rev-parse&lt;/code&gt; is an internal function defined in</target>
        </trans-unit>
        <trans-unit id="3a7d0a305d524183e3f69a672129983d7d75d0c5" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, the precision specifies how many significant digits to show (significant digits are the first digit before the decimal point and all the digits after it). If the precision of %g is zero or unspecified, it is treated as 1. For &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, the precision specifies how many significant digits to show (significant digits are the first digit before the decimal point and all the digits after it). If the precision of %g is zero or unspecified, it is treated as 1. For &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="decb2e4702d70d45ef3b95a6bd64411a38df276e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, the precision truncates the string to the given width, so &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, the precision truncates the string to the given width, so &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="2cb17eb545b962e04c970c0ebfa55bffa9715562" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, the rest of the line is treated as the argument list for documentation purposes. This way, you can use different argument names in the documentation string from the ones used in the C code. &amp;lsquo;</source>
          <target state="translated">&amp;rsquo;, the rest of the line is treated as the argument list for documentation purposes. This way, you can use different argument names in the documentation string from the ones used in the C code. &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="9189b2404d248d7a2ad6625ed4367651c520966b" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, the return value will be &amp;lsquo;</source>
          <target state="translated">'，则返回值为'</target>
        </trans-unit>
        <trans-unit id="aea06e406ebe66d4bfe0190ee8c59dce5e33f240" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, the string is evaluated as a Lisp form. For example:</source>
          <target state="translated">'，该字符串将以Lisp形式进行评估。例如：</target>
        </trans-unit>
        <trans-unit id="ec5acb6796d089d53f0bd9f5fb99b7120e3b9a49" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, then &amp;lsquo;</source>
          <target state="translated">'， 然后 '</target>
        </trans-unit>
        <trans-unit id="073ff7bbc11ef3c90dbe7af4086e720077d0e7d6" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, then it will be checked if it is found, otherwise skipped without error.</source>
          <target state="translated">'，则将检查是否找到了它，否则将跳过而不会出现错误。</target>
        </trans-unit>
        <trans-unit id="9c73c5b2b3d990a4a1b53b499086d9e1166ecff2" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, then its value is just a single function, not a list of functions. &lt;code&gt;add-hook&lt;/code&gt; cannot be used to modify such a &lt;em&gt;single function hook&lt;/em&gt;, and you have to use &lt;code&gt;add-function&lt;/code&gt; instead (see &lt;a href=&quot;advising-functions#Advising-Functions&quot;&gt;Advising Functions&lt;/a&gt;).</source>
          <target state="translated">'，那么它的值只是一个函数，而不是函数列表。 &lt;code&gt;add-hook&lt;/code&gt; 不能用于修改这样的&lt;em&gt;单个函数hook&lt;/em&gt;，而必须改用 &lt;code&gt;add-function&lt;/code&gt; （请参阅&lt;a href=&quot;advising-functions#Advising-Functions&quot;&gt;Advising函数&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="a3347ecb11e71dfb31d9a228f924667affdd799e" translate="yes" xml:space="preserve">
          <source>&amp;rsquo;, then that changes the character at position 42 from &amp;lsquo;</source>
          <target state="translated">'，然后将位置42处的字符从'</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
