<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="elisp">
    <body>
      <group id="elisp">
        <trans-unit id="4b9cf3df1b0b0c02a5c5b5532b8272bf71f1ed02" translate="yes" xml:space="preserve">
          <source>This function executes the forms in &lt;var&gt;body&lt;/var&gt; while arranging to insert any output they print into the buffer named &lt;var&gt;buffer-name&lt;/var&gt;, which is first created if necessary, and put into Help mode. (See the similar form &lt;code&gt;with-temp-buffer-window&lt;/code&gt; below.) Finally, the buffer is displayed in some window, but that window is not selected.</source>
          <target state="translated">此函数在安排将其打印的所有输出插入名为 &lt;var&gt;buffer-name&lt;/var&gt; 的缓冲区时执行 &lt;var&gt;body&lt;/var&gt; 的表单，该缓冲区在必要时首先创建，然后进入帮助模式。（请参见下面的 &lt;code&gt;with-temp-buffer-window&lt;/code&gt; 类似形式。）最后，缓冲区显示在某个窗口中，但未选中该窗口。</target>
        </trans-unit>
        <trans-unit id="5de49d1feea5d11b0ce037aef855f644fc8985ef" translate="yes" xml:space="preserve">
          <source>This function executes the shell command &lt;var&gt;command&lt;/var&gt; synchronously. The other arguments are handled as in &lt;code&gt;call-process&lt;/code&gt;. An old calling convention allowed passing any number of additional arguments after &lt;var&gt;display&lt;/var&gt;, which were concatenated to &lt;var&gt;command&lt;/var&gt;; this is still supported, but strongly discouraged.</source>
          <target state="translated">此功能同步执行shell命令 &lt;var&gt;command&lt;/var&gt; 。其他参数的处理方式与 &lt;code&gt;call-process&lt;/code&gt; 相同。一个旧的调用约定允许在 &lt;var&gt;display&lt;/var&gt; 之后传递任意数量的附加参数，这些附加参数连接到 &lt;var&gt;command&lt;/var&gt; ; 仍然支持，但强烈建议不要这样做。</target>
        </trans-unit>
        <trans-unit id="7d9057dde9954ce5139e85128af04ceb303e19e8" translate="yes" xml:space="preserve">
          <source>This function executes the specified &lt;var&gt;script&lt;/var&gt; like &lt;code&gt;xwidget-webkit-execute-script&lt;/code&gt; does, but it also returns the script&amp;rsquo;s return value as a string. If &lt;var&gt;script&lt;/var&gt; doesn&amp;rsquo;t return a value, this function returns &lt;var&gt;default&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;default&lt;/var&gt; was omitted.</source>
          <target state="translated">该函数像 &lt;code&gt;xwidget-webkit-execute-script&lt;/code&gt; &lt;var&gt;script&lt;/var&gt; 一样执行指定的脚本，但是它还以字符串形式返回脚本的返回值。如果 &lt;var&gt;script&lt;/var&gt; 没有返回值，则此函数返回 &lt;var&gt;default&lt;/var&gt; ，如果省略 &lt;var&gt;default&lt;/var&gt; 则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8cedc57eb19cd8cc2be16e35ee1659c138276da2" translate="yes" xml:space="preserve">
          <source>This function exists so that you can customize it if you wish to change the naming convention for auto-save files. If you redefine it, be sure to redefine the function &lt;code&gt;make-auto-save-file-name&lt;/code&gt; correspondingly.</source>
          <target state="translated">存在此功能的目的是，如果您想更改自动保存文件的命名约定，则可以对其进行自定义。如果重新定义它，请确保相应地重新定义函数 &lt;code&gt;make-auto-save-file-name&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="086828fcf4dd1d64a395f8cfff35eac9baf8cfab" translate="yes" xml:space="preserve">
          <source>This function exits all recursive editing levels; it does not return a value, as it jumps completely out of any computation directly back to the main command loop.</source>
          <target state="translated">这个函数退出所有递归编辑级别,它不返回一个值,因为它完全跳出了任何计算直接回到主命令循环。</target>
        </trans-unit>
        <trans-unit id="c5e5981403de33f9a1ca1e32a693b15dbfea2a07" translate="yes" xml:space="preserve">
          <source>This function exits from the innermost recursive edit (including minibuffer input). Its definition is effectively &lt;code&gt;(throw 'exit
nil)&lt;/code&gt;.</source>
          <target state="translated">此函数从最里面的递归编辑（包括迷你缓冲区输入）退出。它的定义是有效的 &lt;code&gt;(throw 'exit nil)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0df6a37125b5552a1078859f2c3ab0b7dad4463f" translate="yes" xml:space="preserve">
          <source>This function expands &lt;var&gt;form&lt;/var&gt;, if it is a macro call. If the result is another macro call, it is expanded in turn, until something which is not a macro call results. That is the value returned by &lt;code&gt;macroexpand&lt;/code&gt;. If &lt;var&gt;form&lt;/var&gt; is not a macro call to begin with, it is returned as given.</source>
          <target state="translated">如果是宏调用，则此函数扩展 &lt;var&gt;form&lt;/var&gt; 。如果结果是另一个宏调用，则将其依次展开，直到产生不是宏调用的内容。那是 &lt;code&gt;macroexpand&lt;/code&gt; 返回的值。如果 &lt;var&gt;form&lt;/var&gt; 不是开始的宏调用，则按给定形式返回。</target>
        </trans-unit>
        <trans-unit id="114164f026d451f6dc1ae99c37b0882a8b219a03" translate="yes" xml:space="preserve">
          <source>This function expands macros like &lt;code&gt;macroexpand&lt;/code&gt;, but it only performs one step of the expansion: if the result is another macro call, &lt;code&gt;macroexpand-1&lt;/code&gt; will not expand it.</source>
          <target state="translated">此函数可扩展宏，例如 &lt;code&gt;macroexpand&lt;/code&gt; ，但仅执行扩展的一个步骤：如果结果是另一个宏调用，则 &lt;code&gt;macroexpand-1&lt;/code&gt; 不会对其进行扩展。</target>
        </trans-unit>
        <trans-unit id="39fe461b5ad946860ee413db52f2bfb13157fd6b" translate="yes" xml:space="preserve">
          <source>This function expands the wildcard pattern &lt;var&gt;pattern&lt;/var&gt;, returning a list of file names that match it.</source>
          <target state="translated">该函数扩展通配符模式 &lt;var&gt;pattern&lt;/var&gt; ，返回与其匹配的文件名列表。</target>
        </trans-unit>
        <trans-unit id="81ea65ff4066c4409ff9b916da60dde173fa31ca" translate="yes" xml:space="preserve">
          <source>This function extracts the C pointer from the Lisp object represented by &lt;var&gt;val&lt;/var&gt;.</source>
          <target state="translated">此函数从 &lt;var&gt;val&lt;/var&gt; 表示的Lisp对象中提取C指针。</target>
        </trans-unit>
        <trans-unit id="62068d23c0479a1a36320a1f177cb6e84fed41e8" translate="yes" xml:space="preserve">
          <source>This function extracts, from parser state &lt;var&gt;state&lt;/var&gt;, the last position scanned in the parse which was at top level in grammatical structure. &amp;ldquo;At top level&amp;rdquo; means outside of any parentheses, comments, or strings.</source>
          <target state="translated">此函数的提取物，来自解析器的状态 &lt;var&gt;state&lt;/var&gt; ，最后的位置，其中是在语法结构顶层解析扫描。&amp;ldquo;顶层&amp;rdquo;是指任何括号，注释或字符串之外的内容。</target>
        </trans-unit>
        <trans-unit id="0d34081a34c436f00654b5b9fc2068bfacba9525" translate="yes" xml:space="preserve">
          <source>This function fails if no window can be split. More often than not, this happens because no window is large enough to allow splitting. Setting &lt;code&gt;split-height-threshold&lt;/code&gt; or &lt;code&gt;split-width-threshold&lt;/code&gt; to lower values may help in this regard. Splitting also fails when the selected frame has an &lt;code&gt;unsplittable&lt;/code&gt; frame parameter; see &lt;a href=&quot;buffer-parameters#Buffer-Parameters&quot;&gt;Buffer Parameters&lt;/a&gt;.</source>
          <target state="translated">如果无法分割窗口，此功能将失败。经常发生这种情况是因为没有足够大的窗口允许拆分。在这方面，将 &lt;code&gt;split-height-threshold&lt;/code&gt; 或 &lt;code&gt;split-width-threshold&lt;/code&gt; 设置为较低值可能会有所帮助。当所选择的帧具有分裂也失败 &lt;code&gt;unsplittable&lt;/code&gt; 帧参数; 请参见&lt;a href=&quot;buffer-parameters#Buffer-Parameters&quot;&gt;缓冲区参数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e78e63ce27bec2577b6d7533f94e5df3a8b46212" translate="yes" xml:space="preserve">
          <source>This function fills the array &lt;var&gt;array&lt;/var&gt; with &lt;var&gt;object&lt;/var&gt;, so that each element of &lt;var&gt;array&lt;/var&gt; is &lt;var&gt;object&lt;/var&gt;. It returns &lt;var&gt;array&lt;/var&gt;.</source>
          <target state="translated">此函数用 &lt;var&gt;object&lt;/var&gt; 填充数组 &lt;var&gt;array&lt;/var&gt; ，以便 &lt;var&gt;array&lt;/var&gt; 的每个元素都是 &lt;var&gt;object&lt;/var&gt; 。它返回 &lt;var&gt;array&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="8d0809461e25d24f9dc5f2e4e767fdfaa72c6a03" translate="yes" xml:space="preserve">
          <source>This function filters the buffer text between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; using a function specified by the variable &lt;code&gt;filter-buffer-substring-function&lt;/code&gt;, and returns the result.</source>
          <target state="translated">此函数使用变量 &lt;code&gt;filter-buffer-substring-function&lt;/code&gt; 指定的函数在 &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 之间过滤缓冲区文本，并返回结果。</target>
        </trans-unit>
        <trans-unit id="b1ce3659d48c5ee30fd0aae4621d63011d6dfa00" translate="yes" xml:space="preserve">
          <source>This function finds all meaningful symbols whose names contain a match for the apropos pattern &lt;var&gt;pattern&lt;/var&gt;. An apropos pattern is either a word to match, a space-separated list of words of which at least two must match, or a regular expression (if any special regular expression characters occur). A symbol is meaningful if it has a definition as a function, variable, or face, or has properties.</source>
          <target state="translated">该函数查找名称中包含与apropos模式 &lt;var&gt;pattern&lt;/var&gt; 匹配的所有有意义的符号。适当的模式是要匹配的单词，以空格分隔的单词列表（其中至少两个单词必须匹配）或正则表达式（如果出现任何特殊的正则表达式字符）。如果符号具有作为函数，变量或面的定义或具有属性，则该符号有意义。</target>
        </trans-unit>
        <trans-unit id="06f18ec830cc427a92c47e15b09e62f2ae1e7f77" translate="yes" xml:space="preserve">
          <source>This function finds and opens a file of Lisp code, evaluates all the forms in it, and closes the file.</source>
          <target state="translated">该函数找到并打开一个Lisp代码文件,评估其中的所有表格,并关闭该文件。</target>
        </trans-unit>
        <trans-unit id="52ab5d514f36c6011f89f3cb0b3e4ac1a06d82da" translate="yes" xml:space="preserve">
          <source>This function finds the closest color to &lt;var&gt;color&lt;/var&gt; among the known colors supported for &lt;var&gt;display&lt;/var&gt; and returns its index (an integer). If the name &lt;var&gt;color&lt;/var&gt; is not defined, the value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此函数在 &lt;var&gt;display&lt;/var&gt; 支持的已知颜色中找到最接近颜色的 &lt;var&gt;color&lt;/var&gt; ，并返回其索引（整数）。如果未定义名称 &lt;var&gt;color&lt;/var&gt; ，则值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aefec23f42782f8de304c8a670e123447b49f532" translate="yes" xml:space="preserve">
          <source>This function finds the closest color, among the known colors supported for &lt;var&gt;display&lt;/var&gt;, to that described by the rgb value &lt;var&gt;rgb&lt;/var&gt; (a list of color values). The return value is an element of &lt;code&gt;tty-color-alist&lt;/code&gt;.</source>
          <target state="translated">此功能在支持 &lt;var&gt;display&lt;/var&gt; 的已知颜色中找到与rgb值 &lt;var&gt;rgb&lt;/var&gt; （颜色值列表）描述的颜色最接近的颜色。返回值是 &lt;code&gt;tty-color-alist&lt;/code&gt; 的元素。</target>
        </trans-unit>
        <trans-unit id="126e67dcc3a58836f3fb3818f0434d423a4d5d28" translate="yes" xml:space="preserve">
          <source>This function first tries to reuse a window in the specified direction that already shows &lt;var&gt;buffer&lt;/var&gt;. If no such window exists, it tries to split the reference window in order to produce a new window in the specified direction. If this fails as well, it will try to display &lt;var&gt;buffer&lt;/var&gt; in an existing window in the specified direction. In either case, the window chosen will appear on the side of the reference window specified by the &lt;code&gt;direction&lt;/code&gt; entry, sharing at least one edge with the reference window.</source>
          <target state="translated">此函数首先尝试在已显示 &lt;var&gt;buffer&lt;/var&gt; 的指定方向上重用窗口。如果不存在这样的窗口，它将尝试拆分参考窗口，以便沿指定方向生成新窗口。如果同样失败，它将尝试在指定方向的现有窗口中显示 &lt;var&gt;buffer&lt;/var&gt; 。无论哪种情况，所选的窗口都将出现在 &lt;code&gt;direction&lt;/code&gt; 输入所指定的参考窗口的一侧，与参考窗口共享至少一条边。</target>
        </trans-unit>
        <trans-unit id="2ec14a666c7c2161444c9a00ac8eb855d19a536d" translate="yes" xml:space="preserve">
          <source>This function flushes the cache used by &lt;code&gt;syntax-ppss&lt;/code&gt;, starting at position &lt;var&gt;beg&lt;/var&gt;. The remaining arguments, &lt;var&gt;ignored-args&lt;/var&gt;, are ignored; this function accepts them so that it can be directly used on hooks such as &lt;code&gt;before-change-functions&lt;/code&gt; (see &lt;a href=&quot;change-hooks#Change-Hooks&quot;&gt;Change Hooks&lt;/a&gt;).</source>
          <target state="translated">此功能从 &lt;var&gt;beg&lt;/var&gt; 开始刷新 &lt;code&gt;syntax-ppss&lt;/code&gt; 使用的缓存。剩下的参数 &lt;var&gt;ignored-args&lt;/var&gt; 被忽略；此函数接受它们，以便可以将其直接用于钩子，例如 &lt;code&gt;before-change-functions&lt;/code&gt; （请参见&lt;a href=&quot;change-hooks#Change-Hooks&quot;&gt;Change Hooks&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="145dfafb7285ee17c96d79d8d5f412547326b463" translate="yes" xml:space="preserve">
          <source>This function follows symbolic links, except that it does not follow a dangling symbolic link to create &lt;var&gt;newname&lt;/var&gt;.</source>
          <target state="translated">此函数遵循符号链接，只是它不遵循悬空的符号链接来创建 &lt;var&gt;newname&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="2b733a0daf20e408d3ae9ecdf12b55c259daf58e" translate="yes" xml:space="preserve">
          <source>This function follows symbolic links, starting with &lt;var&gt;filename&lt;/var&gt;, until it finds a file name which is not the name of a symbolic link. Then it returns that file name. This function does &lt;em&gt;not&lt;/em&gt; follow symbolic links at the level of parent directories.</source>
          <target state="translated">此函数遵循符号链接，从 &lt;var&gt;filename&lt;/var&gt; 开始，直到找到不是符号链接名称的文件名。然后，它返回该文件名。此功能&lt;em&gt;不&lt;/em&gt;遵循在父目录的级别符号链接。</target>
        </trans-unit>
        <trans-unit id="d521bd6d7312bc2960128c940ad2462dfd8657b8" translate="yes" xml:space="preserve">
          <source>This function forces Emacs to update the current buffer&amp;rsquo;s mode line and header line, based on the latest values of all relevant variables, during its next redisplay cycle. If the optional argument &lt;var&gt;all&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it forces an update for all mode lines and header lines.</source>
          <target state="translated">此功能强制Emacs在下一个重新显示周期内，根据所有相关变量的最新值来更新当前缓冲区的模式行和标题行。如果可选参数 &lt;var&gt;all&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则将强制更新所有模式行和标题行。</target>
        </trans-unit>
        <trans-unit id="627dde0e52cce75b7b6423bad4a7f073cc5543a2" translate="yes" xml:space="preserve">
          <source>This function forces some or all windows to be updated the next time Emacs does a redisplay. If &lt;var&gt;object&lt;/var&gt; is a window, that window is to be updated. If &lt;var&gt;object&lt;/var&gt; is a buffer or buffer name, all windows displaying that buffer are to be updated. If &lt;var&gt;object&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; (or omitted), all windows are to be updated.</source>
          <target state="translated">下次Emacs重新显示时，此功能将强制更新部分或所有窗口。如果 &lt;var&gt;object&lt;/var&gt; 是一个窗口，则该窗口将被更新。如果 &lt;var&gt;object&lt;/var&gt; 是缓冲区或缓冲区名称，则将更新所有显示该缓冲区的窗口。如果 &lt;var&gt;object&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; （或省略），则将更新所有窗口。</target>
        </trans-unit>
        <trans-unit id="631c6a562e73565da1b4ba925ab1116a5e4ded8f" translate="yes" xml:space="preserve">
          <source>This function formats a line of text according to &lt;var&gt;format&lt;/var&gt; as if it were generating the mode line for &lt;var&gt;window&lt;/var&gt;, but it also returns the text as a string. The argument &lt;var&gt;window&lt;/var&gt; defaults to the selected window. If &lt;var&gt;buffer&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, all the information used is taken from &lt;var&gt;buffer&lt;/var&gt;; by default, it comes from &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s buffer.</source>
          <target state="translated">此函数根据 &lt;var&gt;format&lt;/var&gt; 来格式化一行文本，就好像它正在为 &lt;var&gt;window&lt;/var&gt; 生成模式行一样，但是它也将文本作为字符串返回。参数 &lt;var&gt;window&lt;/var&gt; 默认为所选窗口。如果 &lt;var&gt;buffer&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则所有使用的信息均取自 &lt;var&gt;buffer&lt;/var&gt; ; 默认情况下，它来自 &lt;var&gt;window&lt;/var&gt; 的缓冲区。</target>
        </trans-unit>
        <trans-unit id="5c1d26a06eb0118065695dc1608bb7e53d58f4ce" translate="yes" xml:space="preserve">
          <source>This function frees the &lt;var&gt;global_value&lt;/var&gt; previously created by &lt;code&gt;make_global_ref&lt;/code&gt;. The &lt;var&gt;global_value&lt;/var&gt; is no longer valid after the call. Your module code should pair each call to &lt;code&gt;make_global_ref&lt;/code&gt; with the corresponding &lt;code&gt;free_global_ref&lt;/code&gt;.</source>
          <target state="translated">该函数释放的 &lt;var&gt;global_value&lt;/var&gt; 以前创建 &lt;code&gt;make_global_ref&lt;/code&gt; 。该 &lt;var&gt;global_value&lt;/var&gt; 不再是通话后有效。您的模块代码应将对 &lt;code&gt;make_global_ref&lt;/code&gt; 的每个调用与相应的 &lt;code&gt;free_global_ref&lt;/code&gt; 配对。</target>
        </trans-unit>
        <trans-unit id="9967ab1aff10124dd6d3f15f37e5280e738e2e1e" translate="yes" xml:space="preserve">
          <source>This function generalizes &lt;code&gt;aref&lt;/code&gt; (see &lt;a href=&quot;array-functions#Array-Functions&quot;&gt;Array Functions&lt;/a&gt;) and &lt;code&gt;nth&lt;/code&gt; (see &lt;a href=&quot;list-elements#Definition-of-nth&quot;&gt;Definition of nth&lt;/a&gt;).</source>
          <target state="translated">该函数概括了 &lt;code&gt;aref&lt;/code&gt; （请参见&lt;a href=&quot;array-functions#Array-Functions&quot;&gt;Array Functions&lt;/a&gt;）和 &lt;code&gt;nth&lt;/code&gt; （请参见&lt;a href=&quot;list-elements#Definition-of-nth&quot;&gt;nth的定义&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="bdb6bfb9e7c01026a181275c02e683d0137bf5c4" translate="yes" xml:space="preserve">
          <source>This function generates a string that might be a unique file name. The name starts with &lt;var&gt;base-name&lt;/var&gt;, and has several random characters appended to it, which are different in each Emacs job. It is like &lt;code&gt;make-temp-file&lt;/code&gt; except that (i) it just constructs a name and does not create a file, (ii) &lt;var&gt;base-name&lt;/var&gt; should be an absolute file name that is not magic, and (iii) if the returned file name is magic, it might name an existing file. See &lt;a href=&quot;magic-file-names#Magic-File-Names&quot;&gt;Magic File Names&lt;/a&gt;.</source>
          <target state="translated">此函数生成的字符串可能是唯一的文件名。该名称以 &lt;var&gt;base-name&lt;/var&gt; name开头，并附加了几个随机字符，在每个Emacs作业中都不同。就像 &lt;code&gt;make-temp-file&lt;/code&gt; 一样,除了（i）它只是构造一个名称而不创建文件，（ii） &lt;var&gt;base-name&lt;/var&gt; 应该是一个绝对的文件名，而不是magic，以及（iii）如果返回的文件名称是魔术，它可以命名现有文件。请参阅&lt;a href=&quot;magic-file-names#Magic-File-Names&quot;&gt;魔术文件名&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="10a4ca00e488bfcfae566973ba99df04a0432866" translate="yes" xml:space="preserve">
          <source>This function gives &lt;var&gt;frame&lt;/var&gt; the focus of the X server without necessarily raising it. &lt;var&gt;frame&lt;/var&gt;&lt;code&gt;nil&lt;/code&gt; means use the selected frame. Under X, the optional argument &lt;var&gt;noactivate&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, means to avoid making &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s window-system window the &amp;ldquo;active&amp;rdquo; window which should insist a bit more on avoiding to raise &lt;var&gt;frame&lt;/var&gt; above other frames.</source>
          <target state="translated">此功能使 &lt;var&gt;frame&lt;/var&gt; 成为X服务器的焦点，而不必提高它。 &lt;var&gt;frame&lt;/var&gt; &lt;code&gt;nil&lt;/code&gt; 表示使用选定的帧。在X下，可选参数 &lt;var&gt;noactivate&lt;/var&gt; （如果为非 &lt;code&gt;nil&lt;/code&gt; ）表示避免将 &lt;var&gt;frame&lt;/var&gt; 的窗口系统窗口设置为&amp;ldquo;活动&amp;rdquo;窗口，该窗口应更多地坚持避免将 &lt;var&gt;frame&lt;/var&gt; 升高到其他框架之上。</target>
        </trans-unit>
        <trans-unit id="d83546e6b886b63d4101c6a9727565c860c7d5df" translate="yes" xml:space="preserve">
          <source>This function gives &lt;var&gt;process&lt;/var&gt; the filter function &lt;var&gt;filter&lt;/var&gt;. If &lt;var&gt;filter&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it gives the process the default filter, which inserts the process output into the process buffer.</source>
          <target state="translated">该函数给 &lt;var&gt;process&lt;/var&gt; 过滤器函数 &lt;var&gt;filter&lt;/var&gt; 。如果 &lt;var&gt;filter&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，它将为流程提供默认过滤器，该默认过滤器会将流程输出插入流程缓冲区。</target>
        </trans-unit>
        <trans-unit id="4d10715e82bf9d4065c1184eb382f32735a25298" translate="yes" xml:space="preserve">
          <source>This function gives each of the first ten characters in the buffer a &lt;code&gt;display&lt;/code&gt; property which is a string &lt;code&gt;&quot;A&quot;&lt;/code&gt;, but they don&amp;rsquo;t all get the same string object. The first two characters get the same string object, so they are replaced with one &amp;lsquo;</source>
          <target state="translated">此函数为缓冲区中的前十个字符中的每个字符提供 &lt;code&gt;display&lt;/code&gt; 属性，该属性是字符串 &lt;code&gt;&quot;A&quot;&lt;/code&gt; ，但它们并非都获得相同的字符串对象。前两个字符使用相同的字符串对象，因此将它们替换为一个'</target>
        </trans-unit>
        <trans-unit id="c29ab035af64bec706f9a7de02fb7370526d711b" translate="yes" xml:space="preserve">
          <source>This function gives the file named &lt;var&gt;oldname&lt;/var&gt; the additional name &lt;var&gt;newname&lt;/var&gt;. This means that &lt;var&gt;newname&lt;/var&gt; becomes a new hard link to &lt;var&gt;oldname&lt;/var&gt;.</source>
          <target state="translated">此功能为名为 &lt;var&gt;oldname&lt;/var&gt; 的文件提供了附加名称 &lt;var&gt;newname&lt;/var&gt; 。这意味着 &lt;var&gt;newname&lt;/var&gt; 成为到 &lt;var&gt;oldname&lt;/var&gt; 的新硬链接。</target>
        </trans-unit>
        <trans-unit id="08f1c4225edbb83f8b2d8a141bbd8b0f58d2314a" translate="yes" xml:space="preserve">
          <source>This function handles &lt;var&gt;window&lt;/var&gt; and its buffer after quitting. The optional argument &lt;var&gt;window&lt;/var&gt; must be a live window and defaults to the selected one. The function&amp;rsquo;s behavior is determined by the four elements of the list specified by &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s &lt;code&gt;quit-restore&lt;/code&gt; parameter (see &lt;a href=&quot;window-parameters#Window-Parameters&quot;&gt;Window Parameters&lt;/a&gt;).</source>
          <target state="translated">退出后，此函数处理 &lt;var&gt;window&lt;/var&gt; 及其缓冲区。可选参数 &lt;var&gt;window&lt;/var&gt; 必须是实时窗口，并且默认为所选窗口。该函数的行为由 &lt;var&gt;window&lt;/var&gt; 的 &lt;code&gt;quit-restore&lt;/code&gt; 参数（请参见&lt;a href=&quot;window-parameters#Window-Parameters&quot;&gt;Window Parameters&lt;/a&gt;）指定的列表的四个元素决定。</target>
        </trans-unit>
        <trans-unit id="d2151a9232fdf21ae1c1873f59be26bf18ee384d" translate="yes" xml:space="preserve">
          <source>This function handles a switch-frame event, which Emacs generates for itself upon focus notification or under various other circumstances involving an input event arriving at a different frame from the last event. Do not invoke this function yourself.</source>
          <target state="translated">这个函数处理一个切换帧事件,Emacs在焦点通知时或在其他各种情况下为自己生成一个与上次事件不同的输入事件。不要自己调用这个函数。</target>
        </trans-unit>
        <trans-unit id="68bda77014790d5c08c7e44081766ff53580d935" translate="yes" xml:space="preserve">
          <source>This function handles focus-in events from window systems and terminals that support explicit focus notifications. It updates the per-frame focus flags that &lt;code&gt;frame-focus-state&lt;/code&gt; queries and calls &lt;code&gt;after-focus-change-function&lt;/code&gt;. In addition, it generates a &lt;code&gt;switch-frame&lt;/code&gt; event in order to switch the Emacs notion of the selected frame to the frame most recently focused in some terminal. It&amp;rsquo;s important to note that this switching of the Emacs selected frame to the most recently focused frame does not mean that other frames do not continue to have the focus in their respective terminals. Do not invoke this function yourself: instead, attach logic to &lt;code&gt;after-focus-change-function&lt;/code&gt;.</source>
          <target state="translated">此功能处理来自支持显式焦点通知的窗口系统和终端的焦点进入事件。它更新了每帧焦点标志，这些标志用于 &lt;code&gt;frame-focus-state&lt;/code&gt; 查询并调用 &lt;code&gt;after-focus-change-function&lt;/code&gt; 。此外，它还会生成一个 &lt;code&gt;switch-frame&lt;/code&gt; 事件，以便将所选帧的Emacs概念切换到某个终端中最近关注的帧。重要的是要注意，将Emacs选择的帧切换到最近关注的帧并不意味着其他帧不会继续在其各自的终端中保持焦点。不要自己调用此函数：而是将逻辑附加到 &lt;code&gt;after-focus-change-function&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5d882d4018b2219a2d03648adeb8ed02390f2742" translate="yes" xml:space="preserve">
          <source>This function has a side effect: it adds a buffer-local entry to &lt;code&gt;before-change-functions&lt;/code&gt; (see &lt;a href=&quot;change-hooks#Change-Hooks&quot;&gt;Change Hooks&lt;/a&gt;) for &lt;code&gt;syntax-ppss-flush-cache&lt;/code&gt; (see below). This entry keeps the cache consistent as the buffer is modified. However, the cache might not be updated if &lt;code&gt;syntax-ppss&lt;/code&gt; is called while &lt;code&gt;before-change-functions&lt;/code&gt; is temporarily let-bound, or if the buffer is modified without running the hook, such as when using &lt;code&gt;inhibit-modification-hooks&lt;/code&gt;. In those cases, it is necessary to call &lt;code&gt;syntax-ppss-flush-cache&lt;/code&gt; explicitly.</source>
          <target state="translated">此函数有一个副作用：它为 &lt;code&gt;syntax-ppss-flush-cache&lt;/code&gt; （请参见下文）向&amp;ldquo; &lt;code&gt;before-change-functions&lt;/code&gt; &amp;rdquo;（请参见&lt;a href=&quot;change-hooks#Change-Hooks&quot;&gt;Change Hooks&lt;/a&gt;）添加一个缓冲区本地条目。修改缓冲区时，该条目使缓存保持一致。但是，高速缓存可能不被更新，如果 &lt;code&gt;syntax-ppss&lt;/code&gt; 时调用了 &lt;code&gt;before-change-functions&lt;/code&gt; 暂时让结合的，或如果缓冲器不运行钩，修饰，当使用作为 &lt;code&gt;inhibit-modification-hooks&lt;/code&gt; 。在这些情况下，必须显式调用 &lt;code&gt;syntax-ppss-flush-cache&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e0824cfd1439ba10d6d88aef3812eb45de815dfa" translate="yes" xml:space="preserve">
          <source>This function has no effect on text terminal frames.</source>
          <target state="translated">该功能对文本终端框架没有影响。</target>
        </trans-unit>
        <trans-unit id="8978ba472d552e252a780efbc46da901cab70ba5" translate="yes" xml:space="preserve">
          <source>This function iconifies frame &lt;var&gt;frame&lt;/var&gt;. If you omit &lt;var&gt;frame&lt;/var&gt;, it iconifies the selected frame. This usually makes all child frames of &lt;var&gt;frame&lt;/var&gt; (and their descendants) invisible (see &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;).</source>
          <target state="translated">此功能图标化 &lt;var&gt;frame&lt;/var&gt; 。如果省略 &lt;var&gt;frame&lt;/var&gt; ，它将图标选定的帧。这通常会使 &lt;var&gt;frame&lt;/var&gt; （及其子孙）的所有子框架不可见（请参阅&lt;a href=&quot;child-frames#Child-Frames&quot;&gt;子框架&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="819084b34d6a057fb40328da89e4b33628ad0574" translate="yes" xml:space="preserve">
          <source>This function ignores any &lt;var&gt;arguments&lt;/var&gt; and returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此函数忽略任何 &lt;var&gt;arguments&lt;/var&gt; 并返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b526cac4e06399e3f12085e626ad1b398f107b5f" translate="yes" xml:space="preserve">
          <source>This function ignores case when comparing characters if &lt;code&gt;case-fold-search&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;. It always ignores text properties.</source>
          <target state="translated">如果 &lt;code&gt;case-fold-search&lt;/code&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则比较字符时此函数将忽略大小写。它总是忽略文本属性。</target>
        </trans-unit>
        <trans-unit id="3ff1e70c4605f3fdd4577da745b091c1b7ed1b59" translate="yes" xml:space="preserve">
          <source>This function implements the heart of Adaptive Fill mode; it chooses a fill prefix based on the text between &lt;var&gt;from&lt;/var&gt; and &lt;var&gt;to&lt;/var&gt;, typically the start and end of a paragraph. It does this by looking at the first two lines of the paragraph, based on the variables described below.</source>
          <target state="translated">该功能实现了自适应填充模式的核心。它根据 &lt;var&gt;from&lt;/var&gt; 和 &lt;var&gt;to&lt;/var&gt; 之间的文本选择填充前缀，通常是段落的开始和结尾。它通过基于以下描述的变量查看段落的前两行来完成此操作。</target>
        </trans-unit>
        <trans-unit id="56104aa49bec3784f8629173be5e71912c5ba94d" translate="yes" xml:space="preserve">
          <source>This function implements the shift-selection behavior of point-motion commands. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Shift-Selection.html#Shift-Selection&quot;&gt;Shift Selection&lt;/a&gt; in</source>
          <target state="translated">该功能实现了点运动命令的换档选择行为。见&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Shift-Selection.html#Shift-Selection&quot;&gt;换档选择&lt;/a&gt;在</target>
        </trans-unit>
        <trans-unit id="7888fb2a45f81d5b0d9a7609a6679bc2016b1b9d" translate="yes" xml:space="preserve">
          <source>This function indents all lines starting between &lt;var&gt;start&lt;/var&gt; (inclusive) and &lt;var&gt;end&lt;/var&gt; (exclusive) sideways by &lt;var&gt;count&lt;/var&gt; columns. This preserves the shape of the affected region, moving it as a rigid unit.</source>
          <target state="translated">此功能通过 &lt;var&gt;count&lt;/var&gt; 列缩进从 &lt;var&gt;start&lt;/var&gt; （包括）到 &lt;var&gt;end&lt;/var&gt; （不包括）之间的所有行。这样可以保留受影响区域的形状，将其作为刚性单元移动。</target>
        </trans-unit>
        <trans-unit id="7e8ab43b3aa351ccfdad28bf018028ca424156fb" translate="yes" xml:space="preserve">
          <source>This function indents from point with tabs and spaces until &lt;var&gt;column&lt;/var&gt; is reached. If &lt;var&gt;minimum&lt;/var&gt; is specified and non-&lt;code&gt;nil&lt;/code&gt;, then at least that many spaces are inserted even if this requires going beyond &lt;var&gt;column&lt;/var&gt;. Otherwise the function does nothing if point is already beyond &lt;var&gt;column&lt;/var&gt;. The value is the column at which the inserted indentation ends.</source>
          <target state="translated">此函数从带有制表符和空格的点开始缩进，直到到达 &lt;var&gt;column&lt;/var&gt; 为止。如果指定了 &lt;var&gt;minimum&lt;/var&gt; 且非 &lt;code&gt;nil&lt;/code&gt; ，则即使需要超出 &lt;var&gt;column&lt;/var&gt; ，也至少插入了许多空格。否则，如果point已经超出 &lt;var&gt;column&lt;/var&gt; ,则该函数不执行任何操作。该值是插入的缩进结束的列。</target>
        </trans-unit>
        <trans-unit id="6e5af5a47567020e880c204104c9e136106a4f97" translate="yes" xml:space="preserve">
          <source>This function initializes Emacs&amp;rsquo; internal record of which packages are installed, and then calls &lt;code&gt;package-activate-all&lt;/code&gt;.</source>
          <target state="translated">该函数初始化Emacs的内部记录，以记录安装了哪些软件包，然后调用 &lt;code&gt;package-activate-all&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4cad7eeaac99e5f48c9120bc2c6873ca39e3419e" translate="yes" xml:space="preserve">
          <source>This function inserts (in the current buffer) a directory listing for directory &lt;var&gt;file&lt;/var&gt;, formatted with &lt;code&gt;ls&lt;/code&gt; according to &lt;var&gt;switches&lt;/var&gt;. It leaves point after the inserted text. &lt;var&gt;switches&lt;/var&gt; may be a string of options, or a list of strings representing individual options.</source>
          <target state="translated">此函数插入​​（在当前缓冲区中）目录 &lt;var&gt;file&lt;/var&gt; 的目录列表，并根据 &lt;var&gt;switches&lt;/var&gt; 为 &lt;code&gt;ls&lt;/code&gt; 格式。它在插入的文本之后留点。 &lt;var&gt;switches&lt;/var&gt; 可以是选项字符串，也可以是代表各个选项的字符串列表。</target>
        </trans-unit>
        <trans-unit id="cf67375be4193f2e648d51a925b81574880812a8" translate="yes" xml:space="preserve">
          <source>This function inserts &lt;var&gt;image&lt;/var&gt; in the current buffer at point, like &lt;code&gt;insert-image&lt;/code&gt;, but splits the image into &lt;var&gt;rows&lt;/var&gt;x&lt;var&gt;cols&lt;/var&gt; equally sized slices.</source>
          <target state="translated">此函数插入 &lt;var&gt;image&lt;/var&gt; 中的点，像当前缓冲区 &lt;code&gt;insert-image&lt;/code&gt; ，但分割图像分成 &lt;var&gt;rows&lt;/var&gt; X &lt;var&gt;cols&lt;/var&gt; 相等大小的切片。</target>
        </trans-unit>
        <trans-unit id="3f12e33fc829eabc610e4aae6ef8381c6855eb8e" translate="yes" xml:space="preserve">
          <source>This function inserts &lt;var&gt;image&lt;/var&gt; in the current buffer at point. The value &lt;var&gt;image&lt;/var&gt; should be an image descriptor; it could be a value returned by &lt;code&gt;create-image&lt;/code&gt;, or the value of a symbol defined with &lt;code&gt;defimage&lt;/code&gt;. The argument &lt;var&gt;string&lt;/var&gt; specifies the text to put in the buffer to hold the image. If it is omitted or &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;insert-image&lt;/code&gt; uses &lt;code&gt;&quot; &quot;&lt;/code&gt; by default.</source>
          <target state="translated">该函数将 &lt;var&gt;image&lt;/var&gt; 插入当前缓冲区中的点。值 &lt;var&gt;image&lt;/var&gt; 应该是图像描述符；它可以是 &lt;code&gt;create-image&lt;/code&gt; 返回的值，也可以是 &lt;code&gt;defimage&lt;/code&gt; 定义的符号的值。参数 &lt;var&gt;string&lt;/var&gt; 指定要放入缓冲区以保存图像的文本。如果省略或为 &lt;code&gt;nil&lt;/code&gt; ，则默认情况下， &lt;code&gt;insert-image&lt;/code&gt; 使用 &lt;code&gt;&quot; &quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f37597d9ce47cd322fce96c165e2e910704afcc6" translate="yes" xml:space="preserve">
          <source>This function inserts a newline, then indents the new line (the one following the newline just inserted) according to the major mode. It does indentation by calling &lt;code&gt;indent-according-to-mode&lt;/code&gt;.</source>
          <target state="translated">此函数插入​​一个换行符，然后根据主模式缩进新行（刚插入的换行符之后的行）。它通过调用 &lt;code&gt;indent-according-to-mode&lt;/code&gt; 来进行缩进。</target>
        </trans-unit>
        <trans-unit id="ec603de6186549ffda747dc5bc0a68a8a0ec2ecf" translate="yes" xml:space="preserve">
          <source>This function inserts a portion of buffer &lt;var&gt;from-buffer-or-name&lt;/var&gt; into the current buffer before point. The text inserted is the region between &lt;var&gt;start&lt;/var&gt; (inclusive) and &lt;var&gt;end&lt;/var&gt; (exclusive). (These arguments default to the beginning and end of the accessible portion of that buffer.) This function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">该函数将缓冲区 &lt;var&gt;from-buffer-or-name&lt;/var&gt; 的一部分插入到point之前的当前缓冲区中。插入的文本是介于 &lt;var&gt;start&lt;/var&gt; （包括）和 &lt;var&gt;end&lt;/var&gt; （排除）之间的区域。（这些参数默认为该缓冲区可访问部分的开头和结尾。）此函数返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9f8569bfa77023e495fbcc0b00de1466ebe0c796" translate="yes" xml:space="preserve">
          <source>This function inserts before point a description of the abbrev table named &lt;var&gt;name&lt;/var&gt;. The argument &lt;var&gt;name&lt;/var&gt; is a symbol whose value is an abbrev table.</source>
          <target state="translated">该函数在前面插入名为 &lt;var&gt;name&lt;/var&gt; 的缩写表的描述。参数 &lt;var&gt;name&lt;/var&gt; 是一个符号，其值是一个缩写表。</target>
        </trans-unit>
        <trans-unit id="9eee79c4dc87a1776541c414270042d0fecc2cd7" translate="yes" xml:space="preserve">
          <source>This function inserts text in the trace buffer. It computes the text with &lt;code&gt;(apply 'format &lt;var&gt;format-string&lt;/var&gt; &lt;var&gt;format-args&lt;/var&gt;)&lt;/code&gt;. It also appends a newline to separate entries.</source>
          <target state="translated">此函数在跟踪缓冲区中插入文本。它使用 &lt;code&gt;(apply 'format &lt;var&gt;format-string&lt;/var&gt; &lt;var&gt;format-args&lt;/var&gt;)&lt;/code&gt; 计算文本。它还将换行符追加到单独的条目。</target>
        </trans-unit>
        <trans-unit id="67d5561e47f40500a3bf932aad227a47e1c5d051" translate="yes" xml:space="preserve">
          <source>This function inserts the JSON representation of &lt;var&gt;object&lt;/var&gt; into the current buffer before point. The argument &lt;var&gt;args&lt;/var&gt; are interpreted as in &lt;code&gt;json-parse-string&lt;/code&gt;.</source>
          <target state="translated">该函数将 &lt;var&gt;object&lt;/var&gt; 的JSON表示形式插入到point之前的当前缓冲区中。参数 &lt;var&gt;args&lt;/var&gt; 解释为 &lt;code&gt;json-parse-string&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="063fd075d9fb14b62f88b1f037469a50fdd5bd44" translate="yes" xml:space="preserve">
          <source>This function inserts the abbrev expansion of &lt;code&gt;abbrev&lt;/code&gt;, replacing the text between &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt;. If &lt;code&gt;start&lt;/code&gt; is omitted, it defaults to point. &lt;code&gt;name&lt;/code&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, should be the name by which this abbrev was found (a string); it is used to figure out whether to adjust the capitalization of the expansion. The function returns &lt;code&gt;abbrev&lt;/code&gt; if the abbrev was successfully inserted, otherwise it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">该功能用于插入的缩写扩展 &lt;code&gt;abbrev&lt;/code&gt; ，替换之间的文本 &lt;code&gt;start&lt;/code&gt; 和 &lt;code&gt;end&lt;/code&gt; 。如果省略 &lt;code&gt;start&lt;/code&gt; ，则默认为指向。 &lt;code&gt;name&lt;/code&gt; （如果非 &lt;code&gt;nil&lt;/code&gt; ）应该是找到此缩写的名称（字符串）；用于确定是否要调整扩展的大小写。如果成功插入了缩写，该函数将返回 &lt;code&gt;abbrev&lt;/code&gt; ，否则将返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f0d7c9b6bc1e9c789fb65d491e4b15e8e20a1e13" translate="yes" xml:space="preserve">
          <source>This function inserts the completion text directly into the current buffer. Unlike &lt;code&gt;completing-read&lt;/code&gt; (see &lt;a href=&quot;minibuffer-completion#Minibuffer-Completion&quot;&gt;Minibuffer Completion&lt;/a&gt;), it does not activate the minibuffer.</source>
          <target state="translated">该函数将完成文本直接插入当前缓冲区。与 &lt;code&gt;completing-read&lt;/code&gt; （请参阅&lt;a href=&quot;minibuffer-completion#Minibuffer-Completion&quot;&gt;Minibuffer完成&lt;/a&gt;）不同，它不会激活minibuffer。</target>
        </trans-unit>
        <trans-unit id="cbd029046f4f5e891a3e6551188d94e92adba88a" translate="yes" xml:space="preserve">
          <source>This function inserts the contents of file &lt;var&gt;filename&lt;/var&gt; into the current buffer after point. It returns a list of the absolute file name and the length of the data inserted. An error is signaled if &lt;var&gt;filename&lt;/var&gt; is not the name of a file that can be read.</source>
          <target state="translated">该函数将文件 &lt;var&gt;filename&lt;/var&gt; 的内容插入到当前缓冲区之后。它返回绝对文件名和插入的数据长度的列表。如果 &lt;var&gt;filename&lt;/var&gt; 不是可读取文件的名称，则表明存在错误。</target>
        </trans-unit>
        <trans-unit id="584aa879d48490b94795a860827124ea70cee88c" translate="yes" xml:space="preserve">
          <source>This function inserts the strings and/or characters &lt;var&gt;args&lt;/var&gt; into the current buffer, at point, moving point forward. An error is signaled unless all &lt;var&gt;args&lt;/var&gt; are either strings or characters. The value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">该函数将字符串和/或字符 &lt;var&gt;args&lt;/var&gt; 插入到当前缓冲区中，向前移动一点。除非所有 &lt;var&gt;args&lt;/var&gt; 均为字符串或字符，否则将指示错误。该值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5b7522c0a5c898aa80cefe50930dd3f14828acc8" translate="yes" xml:space="preserve">
          <source>This function inserts the strings and/or characters &lt;var&gt;args&lt;/var&gt; into the current buffer, at point, moving point forward. In other words, it inserts the text before point. An error is signaled unless all &lt;var&gt;args&lt;/var&gt; are either strings or characters. The value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">该函数将字符串和/或字符 &lt;var&gt;args&lt;/var&gt; 插入到当前缓冲区中，向前移动一点。换句话说，它在点之前插入文本。除非所有 &lt;var&gt;args&lt;/var&gt; 均为字符串或字符，否则将指示错误。该值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="708bdcea7a657a76dfc1148194cc343f856fc464" translate="yes" xml:space="preserve">
          <source>This function installs the &lt;code&gt;window-side&lt;/code&gt; and &lt;code&gt;window-slot&lt;/code&gt; parameters (see &lt;a href=&quot;window-parameters#Window-Parameters&quot;&gt;Window Parameters&lt;/a&gt;) and makes them persistent. It does not install any other window parameters unless they have been explicitly provided via a &lt;code&gt;window-parameters&lt;/code&gt; entry in &lt;var&gt;alist&lt;/var&gt;.</source>
          <target state="translated">此函数将安装 &lt;code&gt;window-side&lt;/code&gt; 和 &lt;code&gt;window-slot&lt;/code&gt; 参数（请参见&lt;a href=&quot;window-parameters#Window-Parameters&quot;&gt;Window Parameters&lt;/a&gt;）并使它们持久化。除非已经通过 &lt;var&gt;alist&lt;/var&gt; 中的 &lt;code&gt;window-parameters&lt;/code&gt; 条目明确提供了这些参数，否则它不会安装任何其他窗口参数。</target>
        </trans-unit>
        <trans-unit id="6fee14f1a8caebbb465e4a29bb4cf774a5187f13" translate="yes" xml:space="preserve">
          <source>This function installs the face customizations specified by &lt;var&gt;args&lt;/var&gt;. Each argument in &lt;var&gt;args&lt;/var&gt; should have the form</source>
          <target state="translated">此函数安装 &lt;var&gt;args&lt;/var&gt; 指定的面部自定义。 &lt;var&gt;args&lt;/var&gt; 中的每个参数都应采用以下形式：</target>
        </trans-unit>
        <trans-unit id="0679cb2cb6aee8e88eb2f30f3eaf18d8a3811ee7" translate="yes" xml:space="preserve">
          <source>This function installs the variable customizations specified by &lt;var&gt;args&lt;/var&gt;. Each argument in &lt;var&gt;args&lt;/var&gt; should have the form</source>
          <target state="translated">此函数安装由 &lt;var&gt;args&lt;/var&gt; 指定的变量定制。 &lt;var&gt;args&lt;/var&gt; 中的每个参数都应采用以下形式：</target>
        </trans-unit>
        <trans-unit id="7a26fbb204d7cd49853908cf19053d3989b57233" translate="yes" xml:space="preserve">
          <source>This function interrupts the process &lt;var&gt;process&lt;/var&gt; by sending the signal &lt;code&gt;SIGINT&lt;/code&gt;. Outside of Emacs, typing the interrupt character (normally</source>
          <target state="translated">该函数通过发送信号 &lt;code&gt;SIGINT&lt;/code&gt; 中断处理 &lt;var&gt;process&lt;/var&gt; 。在Emacs之外，键入中断字符（通常是</target>
        </trans-unit>
        <trans-unit id="26d7c0d36ec035a3fbfa067bd7a4360e7a8f4a04" translate="yes" xml:space="preserve">
          <source>This function invokes the editor command loop. It is called automatically by the initialization of Emacs, to let the user begin editing. When called from a Lisp program, it enters a recursive editing level.</source>
          <target state="translated">这个函数调用编辑器命令循环。Emacs初始化时自动调用它,让用户开始编辑。当从Lisp程序中调用时,它会进入一个递归的编辑级别。</target>
        </trans-unit>
        <trans-unit id="7a5b2cbc925055c1cee0a2d751830da90f69f157" translate="yes" xml:space="preserve">
          <source>This function is a command because it is sometimes useful to kill one buffer-local variable interactively, just as it is useful to create buffer-local variables interactively.</source>
          <target state="translated">这个函数是一个命令,因为有时交互式地杀死一个缓冲区-局部变量是有用的,就像交互式地创建缓冲区-局部变量一样。</target>
        </trans-unit>
        <trans-unit id="4345e07ad24698651ab8bd29361bfa9c40014137" translate="yes" xml:space="preserve">
          <source>This function is a convenience for defining tool bar items which are consistent with existing menu bar bindings. The binding of &lt;var&gt;command&lt;/var&gt; is looked up in the menu bar in &lt;var&gt;map&lt;/var&gt; (default &lt;code&gt;global-map&lt;/code&gt;) and modified to add an image specification for &lt;var&gt;icon&lt;/var&gt;, which is found in the same way as by &lt;code&gt;tool-bar-add-item&lt;/code&gt;. The resulting binding is then placed in &lt;code&gt;tool-bar-map&lt;/code&gt;, so use this function only for global tool bar items.</source>
          <target state="translated">此功能为定义与现有菜单栏绑定一致的工具栏项目提供了便利。在 &lt;var&gt;map&lt;/var&gt; 的菜单栏中查找 &lt;var&gt;command&lt;/var&gt; 的绑定（默认为 &lt;code&gt;global-map&lt;/code&gt; ），并对其进行修改以添加 &lt;var&gt;icon&lt;/var&gt; 的图像规范，该规范的使用方式与 &lt;code&gt;tool-bar-add-item&lt;/code&gt; 相同。然后将生成的绑定放置在 &lt;code&gt;tool-bar-map&lt;/code&gt; 中，因此仅将此功能用于全局工具栏项。</target>
        </trans-unit>
        <trans-unit id="8bdeebd0cf82435f8595bcd49e691535c6ceda3d" translate="yes" xml:space="preserve">
          <source>This function is a convenient way to write a function that can act as a programmed completion function. The argument &lt;var&gt;function&lt;/var&gt; should be a function that takes one argument, a string, and returns a completion table (see &lt;a href=&quot;basic-completion#Basic-Completion&quot;&gt;Basic Completion&lt;/a&gt;) containing all the possible completions. The table returned by &lt;var&gt;function&lt;/var&gt; can also include elements that don&amp;rsquo;t match the string argument; they are automatically filtered out by &lt;code&gt;completion-table-dynamic&lt;/code&gt;. In particular, &lt;var&gt;function&lt;/var&gt; can ignore its argument and return a full list of all possible completions. You can think of &lt;code&gt;completion-table-dynamic&lt;/code&gt; as a transducer between &lt;var&gt;function&lt;/var&gt; and the interface for programmed completion functions.</source>
          <target state="translated">该函数是编写可用作编程完成函数的函数的便捷方式。参数 &lt;var&gt;function&lt;/var&gt; 应该是一个接受一个参数，一个字符串并返回包含所有可能的&lt;a href=&quot;basic-completion#Basic-Completion&quot;&gt;补&lt;/a&gt;全的补全表（请参见Basic Completion）的函数。 &lt;var&gt;function&lt;/var&gt; 返回的表还可以包含与字符串参数不匹配的元素；它们会由 &lt;code&gt;completion-table-dynamic&lt;/code&gt; 自动过滤掉。特别是， &lt;var&gt;function&lt;/var&gt; 可以忽略其参数，并返回所有可能完成的完整列表。您可以将 &lt;code&gt;completion-table-dynamic&lt;/code&gt; 视为 &lt;var&gt;function&lt;/var&gt; 之间的转换器 以及用于编程完成功能的界面。</target>
        </trans-unit>
        <trans-unit id="f9e62fe26778ab8b324dae02dc669b5c03131d7a" translate="yes" xml:space="preserve">
          <source>This function is a higher-level wrapper around &lt;code&gt;make-process&lt;/code&gt;, exposing an interface that is similar to &lt;code&gt;call-process&lt;/code&gt;. It creates a new asynchronous subprocess and starts the specified &lt;var&gt;program&lt;/var&gt; running in it. It returns a process object that stands for the new subprocess in Lisp. The argument &lt;var&gt;name&lt;/var&gt; specifies the name for the process object; as with &lt;code&gt;make-process&lt;/code&gt;, it is modified if necessary to make it unique. The buffer &lt;var&gt;buffer-or-name&lt;/var&gt; is the buffer to associate with the process.</source>
          <target state="translated">此函数是 &lt;code&gt;make-process&lt;/code&gt; 的高级包装，它公开了一个类似于 &lt;code&gt;call-process&lt;/code&gt; 的接口。它创建一个新的异步子进程并启动其中运行的指定 &lt;var&gt;program&lt;/var&gt; 。它返回一个过程对象，该对象代表Lisp中的新子过程。参数 &lt;var&gt;name&lt;/var&gt; 指定过程对象的名称；与 &lt;code&gt;make-process&lt;/code&gt; 一样，如有必要对其进行修改以使其唯一。缓冲区 &lt;var&gt;buffer-or-name&lt;/var&gt; 是与进程关联的缓冲区。</target>
        </trans-unit>
        <trans-unit id="87c24a259810f2a9c8967b6cbea8c3e38cbb138a" translate="yes" xml:space="preserve">
          <source>This function is a no-op except while Emacs is being built and dumped; it is usually called only in preloaded Lisp files.</source>
          <target state="translated">这个函数是一个无操作的函数,除非Emacs正在构建和转储,它通常只在预加载的Lisp文件中被调用。</target>
        </trans-unit>
        <trans-unit id="3e98ac602e0883707f8e68b832a2d0011951bace" translate="yes" xml:space="preserve">
          <source>This function is a subroutine used by the &lt;code&gt;where-is&lt;/code&gt; command (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Help.html#Help&quot;&gt;Help&lt;/a&gt; in</source>
          <target state="translated">此功能是通过使用子程序的 &lt;code&gt;where-is&lt;/code&gt; 命令（请参阅&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Help.html#Help&quot;&gt;帮助&lt;/a&gt;中</target>
        </trans-unit>
        <trans-unit id="2c4915cab70ef66c95e1415061b6b1cde17e6672" translate="yes" xml:space="preserve">
          <source>This function is an alternative interface to playing a sound &lt;var&gt;file&lt;/var&gt; specifying an optional &lt;var&gt;volume&lt;/var&gt; and &lt;var&gt;device&lt;/var&gt;.</source>
          <target state="translated">该功能是播放指定可选 &lt;var&gt;volume&lt;/var&gt; 和 &lt;var&gt;device&lt;/var&gt; 的声音 &lt;var&gt;file&lt;/var&gt; 的替代接口。</target>
        </trans-unit>
        <trans-unit id="3ac23d83b963497cbe059c96fa42554054e29b9e" translate="yes" xml:space="preserve">
          <source>This function is an extension of the variable &lt;code&gt;exec-path&lt;/code&gt;. If &lt;code&gt;default-directory&lt;/code&gt; indicates a remote directory, this function returns a list of directories used for searching programs on the respective remote host. In case of a local &lt;code&gt;default-directory&lt;/code&gt;, the function returns just the value of the variable &lt;code&gt;exec-path&lt;/code&gt;.</source>
          <target state="translated">此函数是变量 &lt;code&gt;exec-path&lt;/code&gt; 的扩展。如果 &lt;code&gt;default-directory&lt;/code&gt; 指示远程目录，则此函数返回用于在相应远程主机上搜索程序的目录列表。如果是本地 &lt;code&gt;default-directory&lt;/code&gt; ，则该函数仅返回变量 &lt;code&gt;exec-path&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="c93d9db02b7cec3c928a415058246d9a2a5a2c55" translate="yes" xml:space="preserve">
          <source>This function is an extension point that code can use to receive a notification that focus has changed.</source>
          <target state="translated">这个函数是一个扩展点,代码可以用来接收焦点改变的通知。</target>
        </trans-unit>
        <trans-unit id="48d3516572eafc91dad7ddf1b2e60cc93e8f6a84" translate="yes" xml:space="preserve">
          <source>This function is analogous to &lt;code&gt;re-search-forward&lt;/code&gt;, but they are not simple mirror images. &lt;code&gt;re-search-forward&lt;/code&gt; finds the match whose beginning is as close as possible to the starting point. If &lt;code&gt;re-search-backward&lt;/code&gt; were a perfect mirror image, it would find the match whose end is as close as possible. However, in fact it finds the match whose beginning is as close as possible (and yet ends before the starting point). The reason for this is that matching a regular expression at a given spot always works from beginning to end, and starts at a specified beginning position.</source>
          <target state="translated">此功能类似于 &lt;code&gt;re-search-forward&lt;/code&gt; ，但它们不是简单的镜像。 &lt;code&gt;re-search-forward&lt;/code&gt; 查找匹配的起点尽可能接近起点的匹配。如果 &lt;code&gt;re-search-backward&lt;/code&gt; 是完美的镜像，它将找到末端尽可能接近的匹配项。但是，实际上，它会找到起点尽可能接近（但在起点之前结束）的比赛。这是因为在给定位置匹配正则表达式始终从头到尾都有效，并且从指定的开始位置开始。</target>
        </trans-unit>
        <trans-unit id="983af4e8b196fdba72e0b5f1bf38de58a8ac5987" translate="yes" xml:space="preserve">
          <source>This function is called automatically by Emacs on the proper occasions. It exists so you can customize Emacs by redefining it. See the file</source>
          <target state="translated">这个函数会在适当的场合被Emacs自动调用。它的存在是为了让你可以通过重新定义它来定制Emacs。参见文件</target>
        </trans-unit>
        <trans-unit id="61bf93bcf6d1ce9aefe35e00d28b7c2e4c80c961" translate="yes" xml:space="preserve">
          <source>This function is called by &lt;code&gt;minibuffer-completion-help&lt;/code&gt;. A common way to use it is together with &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt;, like this:</source>
          <target state="translated">&lt;code&gt;minibuffer-completion-help&lt;/code&gt; 调用此函数。常见的使用方法是将它 &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt; 一起使用，如下所示：</target>
        </trans-unit>
        <trans-unit id="09da3f2f6d0b651257183f94622f06ece28669b5" translate="yes" xml:space="preserve">
          <source>This function is called in &lt;code&gt;set-visited-file-name&lt;/code&gt; and other exceptional places where the usual test to avoid overwriting a changed file should not be done.</source>
          <target state="translated">在 &lt;code&gt;set-visited-file-name&lt;/code&gt; 和其他例外的地方调用此函数，在这些地方不应进行通常的测试以避免覆盖已更改的文件。</target>
        </trans-unit>
        <trans-unit id="15a48bae8d64858380ffbddfcd132b36ac09fb80" translate="yes" xml:space="preserve">
          <source>This function is called when the user tries to modify &lt;var&gt;file&lt;/var&gt;, but it is locked by another user named &lt;var&gt;other-user&lt;/var&gt;. The default definition of this function asks the user to say what to do. The value this function returns determines what Emacs does next:</source>
          <target state="translated">当用户尝试修改 &lt;var&gt;file&lt;/var&gt; 时，将调用此函数，但该函数已被另一个名为 &lt;var&gt;other-user&lt;/var&gt; 的用户锁定。此功能的默认定义要求用户说出要做什么。此函数返回的值确定Emacs接下来要做的事情：</target>
        </trans-unit>
        <trans-unit id="bdb911abe39762c0b99df025cddc76387f46369c" translate="yes" xml:space="preserve">
          <source>This function is called with no arguments when Emacs notices that the set of focused frames may have changed. Code wanting to do something when frame focus changes should use &lt;code&gt;add-function&lt;/code&gt; to add a function to this one, and in this added function, re-scan the set of focused frames, calling &lt;code&gt;frame-focus-state&lt;/code&gt; to retrieve the last known focus state of each frame. Focus events are delivered asynchronously, and frame input focus according to an external system may not correspond to the notion of the Emacs selected frame. Multiple frames may appear to have input focus simultaneously due to focus event delivery differences, the presence of multiple Emacs terminals, and other factors, and code should be robust in the face of this situation.</source>
          <target state="translated">当Emacs注意到聚焦框架集可能已更改时，将不带任何参数地调用此函数。想要在更改框架焦点时执行某些操作的代码应使用 &lt;code&gt;add-function&lt;/code&gt; 向该函数添加一个函数，然后在此添加的函数中，重新扫描聚焦框架集，调用 &lt;code&gt;frame-focus-state&lt;/code&gt; 来检索上一个已知的聚焦状态每帧。焦点事件是异步传递的，根据外部系统的框架输入焦点可能与Emacs选定框架的概念不符。由于焦点事​​件传递差异，多个Emacs终端的存在以及其他因素，多个帧可能看起来同时具有输入焦点，并且面对这种情况，代码应该健壮。</target>
        </trans-unit>
        <trans-unit id="737b7ae12587ba7e2fa4ccdc45475c486e28fb0c" translate="yes" xml:space="preserve">
          <source>This function is equivalent to &lt;code&gt;equal&lt;/code&gt; for comparing two strings (see &lt;a href=&quot;equality-predicates#Equality-Predicates&quot;&gt;Equality Predicates&lt;/a&gt;). In particular, the text properties of the two strings are ignored; use &lt;code&gt;equal-including-properties&lt;/code&gt; if you need to distinguish between strings that differ only in their text properties. However, unlike &lt;code&gt;equal&lt;/code&gt;, if either argument is not a string or symbol, &lt;code&gt;string=&lt;/code&gt; signals an error.</source>
          <target state="translated">此函数等效于比较两个字符串（请参阅 &lt;code&gt;equal&lt;/code&gt; &lt;a href=&quot;equality-predicates#Equality-Predicates&quot;&gt;Predicates&lt;/a&gt;）。特别是，两个字符串的文本属性将被忽略。如果您需要区分仅文本属性不同的字符串，请使用 &lt;code&gt;equal-including-properties&lt;/code&gt; properties。但是，与 &lt;code&gt;equal&lt;/code&gt; 不同，如果其中一个参数不是字符串或符号，则 &lt;code&gt;string=&lt;/code&gt; 表示错误。</target>
        </trans-unit>
        <trans-unit id="a77082b43454e1e2434525d9704fbe3a90c4cedf" translate="yes" xml:space="preserve">
          <source>This function is equivalent to using &lt;code&gt;define-key&lt;/code&gt; as follows:</source>
          <target state="translated">此功能等效于如下使用 &lt;code&gt;define-key&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="e590ccd83bae1970e4701aab5c890c196f3ddcc8" translate="yes" xml:space="preserve">
          <source>This function is handy for scaling a position on a scroll bar into a buffer position. Here&amp;rsquo;s how to do that:</source>
          <target state="translated">此功能对于将滚动条上的位置缩放到缓冲区位置非常方便。这样做的方法如下：</target>
        </trans-unit>
        <trans-unit id="657a6abd663dca4ef403963daecef549bd387469" translate="yes" xml:space="preserve">
          <source>This function is identical to &lt;code&gt;get&lt;/code&gt;, except that if &lt;var&gt;symbol&lt;/var&gt; is the name of a function alias, it looks in the property list of the symbol naming the actual function. See &lt;a href=&quot;defining-functions#Defining-Functions&quot;&gt;Defining Functions&lt;/a&gt;. If the optional argument &lt;var&gt;autoload&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, and &lt;var&gt;symbol&lt;/var&gt; is auto-loaded, this function will try to autoload it, since autoloading might set &lt;var&gt;property&lt;/var&gt; of &lt;var&gt;symbol&lt;/var&gt;. If &lt;var&gt;autoload&lt;/var&gt; is the symbol &lt;code&gt;macro&lt;/code&gt;, only try autoloading if &lt;var&gt;symbol&lt;/var&gt; is an auto-loaded macro.</source>
          <target state="translated">此函数与 &lt;code&gt;get&lt;/code&gt; 相同，除了如果 &lt;var&gt;symbol&lt;/var&gt; 是函数别名的名称，它将在命名实际函数的symbol的属性列表中查找。请参阅&lt;a href=&quot;defining-functions#Defining-Functions&quot;&gt;定义函数&lt;/a&gt;。如果可选参数 &lt;var&gt;autoload&lt;/var&gt; 是不 &lt;code&gt;nil&lt;/code&gt; ，而 &lt;var&gt;symbol&lt;/var&gt; 是自动加载，此功能会尝试自动加载它，因为自动加载可以设置 &lt;var&gt;property&lt;/var&gt; 的 &lt;var&gt;symbol&lt;/var&gt; 。如果 &lt;var&gt;autoload&lt;/var&gt; 是symbol &lt;code&gt;macro&lt;/code&gt; ，则只有在 &lt;var&gt;symbol&lt;/var&gt; 是自动加载的宏时才尝试自动加载。</target>
        </trans-unit>
        <trans-unit id="a2aa27f157cba38d2ec53a7e95ea580563efe609" translate="yes" xml:space="preserve">
          <source>This function is intended to produce output that is readable by people, not by &lt;code&gt;read&lt;/code&gt;, so it doesn&amp;rsquo;t insert quoting characters and doesn&amp;rsquo;t put double-quotes around the contents of strings. It does not add any spacing between calls.</source>
          <target state="translated">此函数旨在产生可被人们读取的输出，而不是被 &lt;code&gt;read&lt;/code&gt; 读取的输出，因此它不会插入引号，也不会在字符串的内容两边加上双引号。它不会在调用之间添加任何间隔。</target>
        </trans-unit>
        <trans-unit id="2eeb60cd2a0b9cec91c89ea8445e1cb0a1c8fadd" translate="yes" xml:space="preserve">
          <source>This function is just like &lt;code&gt;forward-word&lt;/code&gt;, except that it moves backward until encountering the front of a word, rather than forward.</source>
          <target state="translated">此功能类似于 &lt;code&gt;forward-word&lt;/code&gt; ，只是它向后移动直到遇到单词的开头，而不是向前移动。</target>
        </trans-unit>
        <trans-unit id="bb8eac161240e9108cffc575f87b3bbf5e4bae81" translate="yes" xml:space="preserve">
          <source>This function is just like &lt;code&gt;up-list&lt;/code&gt;, but with a negated argument.</source>
          <target state="translated">此函数就像 &lt;code&gt;up-list&lt;/code&gt; 一样，但参数取反。</target>
        </trans-unit>
        <trans-unit id="eb054ed6d148bb70a97fe1b6541c60b3b215d2dc" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;assoc&lt;/code&gt; in that it returns the first association for &lt;var&gt;key&lt;/var&gt; in &lt;var&gt;alist&lt;/var&gt;, but it makes the comparison using &lt;code&gt;eq&lt;/code&gt;. &lt;code&gt;assq&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt; if no association in &lt;var&gt;alist&lt;/var&gt; has a &lt;small&gt;CAR&lt;/small&gt;&lt;code&gt;eq&lt;/code&gt; to &lt;var&gt;key&lt;/var&gt;. This function is used more often than &lt;code&gt;assoc&lt;/code&gt;, since &lt;code&gt;eq&lt;/code&gt; is faster than &lt;code&gt;equal&lt;/code&gt; and most alists use symbols as keys. See &lt;a href=&quot;equality-predicates#Equality-Predicates&quot;&gt;Equality Predicates&lt;/a&gt;.</source>
          <target state="translated">这个功能就像 &lt;code&gt;assoc&lt;/code&gt; 命令，它会返回第一个联想 &lt;var&gt;key&lt;/var&gt; 在 &lt;var&gt;alist&lt;/var&gt; ，但它使用使得比较 &lt;code&gt;eq&lt;/code&gt; 。如果 &lt;var&gt;alist&lt;/var&gt; 中的任何关联都没有 &lt;var&gt;key&lt;/var&gt; 的&lt;small&gt;CAR &lt;/small&gt; &lt;code&gt;eq&lt;/code&gt; ，则 &lt;code&gt;assq&lt;/code&gt; 返回 &lt;code&gt;nil&lt;/code&gt; 。该函数的使用频率比 &lt;code&gt;assoc&lt;/code&gt; 更高，因为 &lt;code&gt;eq&lt;/code&gt; 比 &lt;code&gt;equal&lt;/code&gt; 更快，并且大多数列表使用符号作为键。请参阅&lt;a href=&quot;equality-predicates#Equality-Predicates&quot;&gt;等式谓词&lt;/a&gt;。&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="4ea60e1ae863b782f88f8842efe2b9ff019a158a" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;assq-delete-all&lt;/code&gt; except that it accepts an optional argument &lt;var&gt;test&lt;/var&gt;, a predicate function to compare the keys in &lt;var&gt;alist&lt;/var&gt;. If omitted or &lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;test&lt;/var&gt; defaults to &lt;code&gt;equal&lt;/code&gt;. As &lt;code&gt;assq-delete-all&lt;/code&gt;, this function often modifies the original list structure of &lt;var&gt;alist&lt;/var&gt;.</source>
          <target state="translated">该函数类似于 &lt;code&gt;assq-delete-all&lt;/code&gt; ,不同之处在于它接受可选的参数 &lt;var&gt;test&lt;/var&gt; ，即用于比较 &lt;var&gt;alist&lt;/var&gt; 中的键的谓词函数。如果省略或 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;var&gt;test&lt;/var&gt; 默认为 &lt;code&gt;equal&lt;/code&gt; 。作为 &lt;code&gt;assq-delete-all&lt;/code&gt; ，此功能通常会修改 &lt;var&gt;alist&lt;/var&gt; 的原始列表结构。</target>
        </trans-unit>
        <trans-unit id="febc844768d8b56a11a67d4fbd5f4494b585a06f" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;backward-word&lt;/code&gt;, but it is not affected by &lt;code&gt;find-word-boundary-function-table&lt;/code&gt;. Like with &lt;code&gt;forward-word-strictly&lt;/code&gt;, use this function instead of &lt;code&gt;backward-word&lt;/code&gt; when movement by words should only consider syntax tables.</source>
          <target state="translated">此功能类似于 &lt;code&gt;backward-word&lt;/code&gt; ，但不受 &lt;code&gt;find-word-boundary-function-table&lt;/code&gt; 影响。与 &lt;code&gt;forward-word-strictly&lt;/code&gt; 使用前向单词一样，当按单词移动仅应考虑语法表时，请使用此函数代替后 &lt;code&gt;backward-word&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f418ebc79920995b5a0d39eacf1b187360245075" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;base64-encode-region&lt;/code&gt;, but it implements the URL variant of base 64 encoding, per RFC 4648, and it doesn&amp;rsquo;t insert newline characters into the encoded text, so the output is just one long line.</source>
          <target state="translated">此功能类似于 &lt;code&gt;base64-encode-region&lt;/code&gt; ，但是它根据RFC 4648实现base 64编码的URL变体，并且不会在编码的文本中插入换行符，因此输出仅是一长行。</target>
        </trans-unit>
        <trans-unit id="b407ac2ec7181f27e6621e4d22f6c15e6c2fe661" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;call-process-shell-command&lt;/code&gt;, but uses &lt;code&gt;process-file&lt;/code&gt; internally. Depending on &lt;code&gt;default-directory&lt;/code&gt;, &lt;var&gt;command&lt;/var&gt; can be executed also on remote hosts. An old calling convention allowed passing any number of additional arguments after &lt;var&gt;display&lt;/var&gt;, which were concatenated to &lt;var&gt;command&lt;/var&gt;; this is still supported, but strongly discouraged.</source>
          <target state="translated">此功能类似于 &lt;code&gt;call-process-shell-command&lt;/code&gt; ，但在内部使用 &lt;code&gt;process-file&lt;/code&gt; 。根据 &lt;code&gt;default-directory&lt;/code&gt; ， &lt;var&gt;command&lt;/var&gt; 也可以在远程主机上执行。一个旧的调用约定允许在 &lt;var&gt;display&lt;/var&gt; 之后传递任意数量的附加参数，这些附加参数连接到 &lt;var&gt;command&lt;/var&gt; ; 仍然支持，但强烈建议不要这样做。</target>
        </trans-unit>
        <trans-unit id="51cd4bba67018cad3c23d379da369c133b85d190" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;detect-coding-region&lt;/code&gt; except that it operates on the contents of &lt;var&gt;string&lt;/var&gt; instead of bytes in the buffer.</source>
          <target state="translated">该功能类似于 &lt;code&gt;detect-coding-region&lt;/code&gt; ，但是它对 &lt;var&gt;string&lt;/var&gt; 的内容（而不是缓冲区中的字节）进行操作。</target>
        </trans-unit>
        <trans-unit id="d5b0e272ddd3b5001497d1a89df8e32a9c9a93cb" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;forward-word&lt;/code&gt;, but it is not affected by &lt;code&gt;find-word-boundary-function-table&lt;/code&gt;. Lisp programs that should not change behavior when word movement is modified by modes which set that table, such as &lt;code&gt;subword-mode&lt;/code&gt;, should use this function instead of &lt;code&gt;forward-word&lt;/code&gt;.</source>
          <target state="translated">此功能类似于 &lt;code&gt;forward-word&lt;/code&gt; ，但不受 &lt;code&gt;find-word-boundary-function-table&lt;/code&gt; 的影响。Lisp程序在设置该表 &lt;code&gt;subword-mode&lt;/code&gt; （如subword-mode）修改字移动时不应更改行为，应使用此功能代替 &lt;code&gt;forward-word&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cfd9715724c00ce9bd1ded7a0b453bca9f33c860" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;get-char-property&lt;/code&gt;, except that it pays attention to properties&amp;rsquo; stickiness and overlays&amp;rsquo; advancement settings instead of the property of the character at (i.e., right after) &lt;var&gt;position&lt;/var&gt;.</source>
          <target state="translated">此函数类似于 &lt;code&gt;get-char-property&lt;/code&gt; ，除了它关注属性的粘性和覆盖的前进设置，而不是 &lt;var&gt;position&lt;/var&gt; （即紧随其后）的字符的属性。</target>
        </trans-unit>
        <trans-unit id="d67eca1ffd7744c6b6801232ca5ecf2d06b8d1e3" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;get-lru-window&lt;/code&gt;, but it returns the most recently used window instead. The meaning of the arguments is the same as described for &lt;code&gt;get-lru-window&lt;/code&gt;.</source>
          <target state="translated">此函数类似于 &lt;code&gt;get-lru-window&lt;/code&gt; ，但它返回最近使用的窗口。参数的含义与对 &lt;code&gt;get-lru-window&lt;/code&gt; 的描述相同。</target>
        </trans-unit>
        <trans-unit id="7254e34733fc78f9926111144e20c1e144369f10" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;get-text-property&lt;/code&gt;, except that it checks overlays first and then text properties. See &lt;a href=&quot;overlays#Overlays&quot;&gt;Overlays&lt;/a&gt;.</source>
          <target state="translated">此功能类似于 &lt;code&gt;get-text-property&lt;/code&gt; ，除了它先检查覆盖图，然后再检查文本属性。请参见&lt;a href=&quot;overlays#Overlays&quot;&gt;叠加&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="83a863c5b063e5a26cec6d446f3052e10dbf9e03" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;match-beginning&lt;/code&gt; except that it returns the position of the end of the match, rather than the position of the beginning.</source>
          <target state="translated">此函数类似于 &lt;code&gt;match-beginning&lt;/code&gt; 但它返回比赛结束的位置，而不是比赛开始的位置。</target>
        </trans-unit>
        <trans-unit id="b34f44fc938bc5e0dc1330ee376936ccb9058155" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;match-string&lt;/code&gt; except that the result has no text properties.</source>
          <target state="translated">此函数类似于 &lt;code&gt;match-string&lt;/code&gt; ，但结果没有文本属性。</target>
        </trans-unit>
        <trans-unit id="42846bd880abf78a2f797515e5eb79b77e6c4bbf" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;member&lt;/code&gt;, except that &lt;var&gt;object&lt;/var&gt; should be a string and that it ignores differences in letter-case and text representation: upper-case and lower-case letters are treated as equal, and unibyte strings are converted to multibyte prior to comparison.</source>
          <target state="translated">此函数与 &lt;code&gt;member&lt;/code&gt; 相似，不同之处在于 &lt;var&gt;object&lt;/var&gt; 应该是字符串，并且忽略大小写和文本表示形式上的差异：大写字母和小写字母被视为相等，并且在比较之前将单字节字符串转换为多字节。</target>
        </trans-unit>
        <trans-unit id="b32d33e48e8a1368ceb962a56b432672edc2ec39" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;mouse-position&lt;/code&gt; except that it returns coordinates in units of pixels rather than units of characters.</source>
          <target state="translated">此函数类似于 &lt;code&gt;mouse-position&lt;/code&gt; 除了它以像素为单位而不是字符为单位返回坐标。</target>
        </trans-unit>
        <trans-unit id="380028fe703d237083b028a5d4b3e48345cb7881" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;move-to-window-line&lt;/code&gt;, except that when the selected window is a part of a group of windows (see &lt;a href=&quot;basic-windows#Window-Group&quot;&gt;Window Group&lt;/a&gt;), &lt;code&gt;move-to-window-group-line&lt;/code&gt; will move to a position with respect to the entire group, not just the single window. This condition holds when the buffer local variable &lt;code&gt;move-to-window-group-line-function&lt;/code&gt; is set to a function. In this case, &lt;code&gt;move-to-window-group-line&lt;/code&gt; calls the function with the argument &lt;var&gt;count&lt;/var&gt;, then returns its result.</source>
          <target state="translated">此功能是像 &lt;code&gt;move-to-window-line&lt;/code&gt; ，不同之处在于当被选择窗口是窗口组的一部分（见&lt;a href=&quot;basic-windows#Window-Group&quot;&gt;窗口组&lt;/a&gt;）， &lt;code&gt;move-to-window-group-line&lt;/code&gt; 将移动到一个位置相对于所述整个小组，而不仅仅是单个窗口。当缓冲区局部变量 &lt;code&gt;move-to-window-group-line-function&lt;/code&gt; 设置为一个函数时，此条件成立。在这种情况下， &lt;code&gt;move-to-window-group-line&lt;/code&gt; 用参数 &lt;var&gt;count&lt;/var&gt; 调用该函数，然后返回其结果。</target>
        </trans-unit>
        <trans-unit id="f292a4643ee179431fe06f46973315aba67bf8e3" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;pos-visible-in-window-p&lt;/code&gt;, except that when &lt;var&gt;window&lt;/var&gt; is a part of a group of windows (see &lt;a href=&quot;basic-windows#Window-Group&quot;&gt;Window Group&lt;/a&gt;), &lt;code&gt;pos-visible-in-window-group-p&lt;/code&gt; tests the visibility of &lt;var&gt;pos&lt;/var&gt; in the entire group, not just in the single &lt;var&gt;window&lt;/var&gt;. This condition holds when the buffer local variable &lt;code&gt;pos-visible-in-window-group-p-function&lt;/code&gt; is set to a function. In this case &lt;code&gt;pos-visible-in-window-group-p&lt;/code&gt; calls the function with the three arguments &lt;var&gt;position&lt;/var&gt;, &lt;var&gt;window&lt;/var&gt;, and &lt;var&gt;partially&lt;/var&gt;, then returns its result. The arguments &lt;var&gt;position&lt;/var&gt; and &lt;var&gt;partially&lt;/var&gt; have the same meaning as in &lt;code&gt;pos-visible-in-window-p&lt;/code&gt;.</source>
          <target state="translated">此功能类似于 &lt;code&gt;pos-visible-in-window-p&lt;/code&gt; ，不同之处在于，当 &lt;var&gt;window&lt;/var&gt; 是一组窗口的一部分（请参见&lt;a href=&quot;basic-windows#Window-Group&quot;&gt;Window Group&lt;/a&gt;）时， &lt;code&gt;pos-visible-in-window-group-p&lt;/code&gt; 测试 &lt;var&gt;pos&lt;/var&gt; 在窗口组中的可见性。整个小组，而不仅仅是在单个 &lt;var&gt;window&lt;/var&gt; 。当缓冲区局部变量 &lt;code&gt;pos-visible-in-window-group-p-function&lt;/code&gt; 设置为函数时，此条件成立。在这种情况下， &lt;code&gt;pos-visible-in-window-group-p&lt;/code&gt; 调用具有三个参数 &lt;var&gt;position&lt;/var&gt; ， &lt;var&gt;window&lt;/var&gt; 和 &lt;var&gt;partially&lt;/var&gt; 的函数，然后返回其结果。参数 &lt;var&gt;position&lt;/var&gt; 和 &lt;var&gt;partially&lt;/var&gt; 具有与 &lt;code&gt;pos-visible-in-window-p&lt;/code&gt; 中相同的含义。</target>
        </trans-unit>
        <trans-unit id="423f27721b5ae02a5d90bff9e04c645421a6a62b" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;read-char&lt;/code&gt;, except that if the first character read is an octal digit (0&amp;ndash;7), it reads any number of octal digits (but stopping if a non-octal digit is found), and returns the character represented by that numeric character code. If the character that terminates the sequence of octal digits is</source>
          <target state="translated">此功能类似于 &lt;code&gt;read-char&lt;/code&gt; ，不同之处在于，如果读取的第一个字符是八进制数字（0-7），则它将读取任意数量的八进制数字（但如果找到非八进制数字则停止显示），并返回表示的字符通过该数字字符代码。如果终止八进制数字序列的字符是</target>
        </trans-unit>
        <trans-unit id="c924d6c6cbfc2ec082eff3cf16212f06c552c316" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;read-file-name&lt;/code&gt; but allows only directory names as completion alternatives.</source>
          <target state="translated">此功能类似于 &lt;code&gt;read-file-name&lt;/code&gt; 但仅允许目录名称作为完成方式。</target>
        </trans-unit>
        <trans-unit id="6607d19de1d8ab44a34d32383eed51a4b79a51d3" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;recenter&lt;/code&gt;, except that when the selected window is part of a group of windows (see &lt;a href=&quot;basic-windows#Window-Group&quot;&gt;Window Group&lt;/a&gt;), &lt;code&gt;recenter-window-group&lt;/code&gt; scrolls the entire group. This condition holds when the buffer local variable &lt;code&gt;recenter-window-group-function&lt;/code&gt; is set to a function. In this case, &lt;code&gt;recenter-window-group&lt;/code&gt; calls the function with the argument &lt;var&gt;count&lt;/var&gt;, then returns its result. The argument &lt;var&gt;count&lt;/var&gt; has the same meaning as in &lt;code&gt;recenter&lt;/code&gt;, but with respect to the entire window group.</source>
          <target state="translated">此功能类似于 &lt;code&gt;recenter&lt;/code&gt; ，只是当所选窗口是一组窗口的一部分（请参见&lt;a href=&quot;basic-windows#Window-Group&quot;&gt;Window Group&lt;/a&gt;）时， &lt;code&gt;recenter-window-group&lt;/code&gt; 滚动整个组。当缓冲区局部变量&amp;ldquo; &lt;code&gt;recenter-window-group-function&lt;/code&gt; 设置为一个函数时，此条件成立。在这种情况下， &lt;code&gt;recenter-window-group&lt;/code&gt; 使用参数 &lt;var&gt;count&lt;/var&gt; 调用该函数，然后返回其结果。参数 &lt;var&gt;count&lt;/var&gt; 的含义与 &lt;code&gt;recenter&lt;/code&gt; 含义相同，但对于整个窗口组而言。</target>
        </trans-unit>
        <trans-unit id="44cd62b853205e55dbce43933dc4356ca992f4b6" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;set-window-start&lt;/code&gt;, except that when &lt;var&gt;window&lt;/var&gt; is a part of a group of windows (see &lt;a href=&quot;basic-windows#Window-Group&quot;&gt;Window Group&lt;/a&gt;), &lt;code&gt;set-window-group-start&lt;/code&gt; sets the start position of the entire group. This condition holds when the buffer local variable &lt;code&gt;set-window-group-start-function&lt;/code&gt; is set to a function. In this case, &lt;code&gt;set-window-group-start&lt;/code&gt; calls the function with the three arguments &lt;var&gt;window&lt;/var&gt;, &lt;var&gt;position&lt;/var&gt;, and &lt;var&gt;noforce&lt;/var&gt;, then returns its result. The arguments &lt;var&gt;position&lt;/var&gt; and &lt;var&gt;noforce&lt;/var&gt; in this function have the same meaning as in &lt;code&gt;set-window-start&lt;/code&gt;.</source>
          <target state="translated">此功能类似于 &lt;code&gt;set-window-start&lt;/code&gt; ，不同之处在于，当 &lt;var&gt;window&lt;/var&gt; 是一组窗口的一部分（请参见&lt;a href=&quot;basic-windows#Window-Group&quot;&gt;Window Group&lt;/a&gt;）时， &lt;code&gt;set-window-group-start&lt;/code&gt; 设置整个组的开始位置。当缓冲区局部变量 &lt;code&gt;set-window-group-start-function&lt;/code&gt; 设置为一个函数时，此条件成立。在这种情况下， &lt;code&gt;set-window-group-start&lt;/code&gt; 使用三个参数 &lt;var&gt;window&lt;/var&gt; ， &lt;var&gt;position&lt;/var&gt; 和 &lt;var&gt;noforce&lt;/var&gt; 调用该函数，然后返回其结果。此函数中的参数 &lt;var&gt;position&lt;/var&gt; 和 &lt;var&gt;noforce&lt;/var&gt; 与 &lt;code&gt;set-window-start&lt;/code&gt; 中的含义相同。</target>
        </trans-unit>
        <trans-unit id="b5465b6b852758d9e6ca920114899a7d2d298e51" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;setq-default&lt;/code&gt;, except that &lt;var&gt;symbol&lt;/var&gt; is an ordinary evaluated argument.</source>
          <target state="translated">此函数类似于 &lt;code&gt;setq-default&lt;/code&gt; ，除了 &lt;var&gt;symbol&lt;/var&gt; 是一个普通的求值参数。</target>
        </trans-unit>
        <trans-unit id="afb5d392f40e935a703019b10560894ac9a5348c" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;start-process-shell-command&lt;/code&gt;, but uses &lt;code&gt;start-file-process&lt;/code&gt; internally. Because of this, &lt;var&gt;command&lt;/var&gt; can also be executed on remote hosts, depending on &lt;code&gt;default-directory&lt;/code&gt;.</source>
          <target state="translated">此功能类似于 &lt;code&gt;start-process-shell-command&lt;/code&gt; ，但在内部使用 &lt;code&gt;start-file-process&lt;/code&gt; 。因此，还可以在远程主机上执行 &lt;var&gt;command&lt;/var&gt; ，具体取决于 &lt;code&gt;default-directory&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="61d85e7f110eeb6fb821d8770f83e826220cf336" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;start-process&lt;/code&gt;, except that it uses a shell to execute the specified &lt;var&gt;command&lt;/var&gt;. The argument &lt;var&gt;command&lt;/var&gt; is a shell command string. The variable &lt;code&gt;shell-file-name&lt;/code&gt; specifies which shell to use.</source>
          <target state="translated">该函数类似于 &lt;code&gt;start-process&lt;/code&gt; ，不同之处在于它使用外壳程序执行指定的 &lt;var&gt;command&lt;/var&gt; 。参数 &lt;var&gt;command&lt;/var&gt; 是外壳命令字符串。变量 &lt;code&gt;shell-file-name&lt;/code&gt; 指定要使用的shell。</target>
        </trans-unit>
        <trans-unit id="a309cc52d1d3ed0a53185cb807573667a666b5e6" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;window-end&lt;/code&gt;, except that when &lt;var&gt;window&lt;/var&gt; is a part of a group of windows (see &lt;a href=&quot;basic-windows#Window-Group&quot;&gt;Window Group&lt;/a&gt;), &lt;code&gt;window-group-end&lt;/code&gt; returns the end position of the entire group. This condition holds when the buffer local variable &lt;code&gt;window-group-end-function&lt;/code&gt; is set to a function. In this case, &lt;code&gt;window-group-end&lt;/code&gt; calls the function with the two arguments &lt;var&gt;window&lt;/var&gt; and &lt;var&gt;update&lt;/var&gt;, then returns its result. The argument &lt;var&gt;update&lt;/var&gt; has the same meaning as in &lt;code&gt;window-end&lt;/code&gt;.</source>
          <target state="translated">此函数类似于 &lt;code&gt;window-end&lt;/code&gt; ，不同之处在于，当 &lt;var&gt;window&lt;/var&gt; 是一组窗口的一部分（请参见&lt;a href=&quot;basic-windows#Window-Group&quot;&gt;Window Group&lt;/a&gt;）时， &lt;code&gt;window-group-end&lt;/code&gt; 返回整个组的结束位置。当缓冲区局部变量 &lt;code&gt;window-group-end-function&lt;/code&gt; 设置为函数时，此条件成立。在这种情况下， &lt;code&gt;window-group-end&lt;/code&gt; 使用两个参数 &lt;var&gt;window&lt;/var&gt; 和 &lt;var&gt;update&lt;/var&gt; 调用该函数，然后返回其结果。参数 &lt;var&gt;update&lt;/var&gt; 具有与 &lt;code&gt;window-end&lt;/code&gt; 中相同的含义。</target>
        </trans-unit>
        <trans-unit id="2722e598d95ea8f8914c4f9997629363c2d0f1cd" translate="yes" xml:space="preserve">
          <source>This function is like &lt;code&gt;window-start&lt;/code&gt;, except that when &lt;var&gt;window&lt;/var&gt; is a part of a group of windows (see &lt;a href=&quot;basic-windows#Window-Group&quot;&gt;Window Group&lt;/a&gt;), &lt;code&gt;window-group-start&lt;/code&gt; returns the start position of the entire group. This condition holds when the buffer local variable &lt;code&gt;window-group-start-function&lt;/code&gt; is set to a function. In this case, &lt;code&gt;window-group-start&lt;/code&gt; calls the function with the single argument &lt;var&gt;window&lt;/var&gt;, then returns its result.</source>
          <target state="translated">此功能类似于 &lt;code&gt;window-start&lt;/code&gt; ，不同之处在于，当 &lt;var&gt;window&lt;/var&gt; 是一组窗口的一部分（请参见&lt;a href=&quot;basic-windows#Window-Group&quot;&gt;Window Group&lt;/a&gt;）时， &lt;code&gt;window-group-start&lt;/code&gt; 返回整个组的开始位置。当缓冲区局部变量 &lt;code&gt;window-group-start-function&lt;/code&gt; 设置为函数时，此条件成立。在这种情况下， &lt;code&gt;window-group-start&lt;/code&gt; 使用单个参数 &lt;var&gt;window&lt;/var&gt; 调用该函数，然后返回其结果。</target>
        </trans-unit>
        <trans-unit id="f124246f81644e7e0334bb1a2e407f297dfd0e8e" translate="yes" xml:space="preserve">
          <source>This function is meaningless on operating systems where multiple names for one file are not allowed. Some systems implement multiple names by copying the file instead.</source>
          <target state="translated">在不允许一个文件有多个名字的操作系统上,这个功能是没有意义的。有些系统通过复制文件来实现多名字。</target>
        </trans-unit>
        <trans-unit id="17d4e37d01326a32f6c6a0fffbe6947dcdf2b1d4" translate="yes" xml:space="preserve">
          <source>This function is modelled after &lt;code&gt;search-forward&lt;/code&gt; and friends in that it moves point, but it returns a structure that describes the match instead of returning it in &lt;code&gt;match-beginning&lt;/code&gt; and friends.</source>
          <target state="translated">此函数是根据 &lt;code&gt;search-forward&lt;/code&gt; 和友人建模的，它移动点，但是它返回一个描述比赛的结构，而不是在 &lt;code&gt;match-beginning&lt;/code&gt; 和友人中返回它。</target>
        </trans-unit>
        <trans-unit id="33c8e895f6340e37d35e4f180a08341797cafe5f" translate="yes" xml:space="preserve">
          <source>This function is not analogous to the C operator &lt;code&gt;++&lt;/code&gt;&amp;mdash;it does not increment a variable. It just computes a sum. Thus, if we continue,</source>
          <target state="translated">此函数与C运算符 &lt;code&gt;++&lt;/code&gt; 类似-它不会增加变量。它只是计算总和。因此，如果我们继续，</target>
        </trans-unit>
        <trans-unit id="25d79ed81d463a98d69a8e6098821c6475a2a263" translate="yes" xml:space="preserve">
          <source>This function is not available on systems that don&amp;rsquo;t support symbolic links.</source>
          <target state="translated">该功能在不支持符号链接的系统上不可用。</target>
        </trans-unit>
        <trans-unit id="d34b72dc83629e1f214bd593c386394e8b0d1958" translate="yes" xml:space="preserve">
          <source>This function is not meaningful on text terminals.</source>
          <target state="translated">此功能在文本终端上没有意义。</target>
        </trans-unit>
        <trans-unit id="60e5d4050a886d9b2b2af737388d8b7d3d7aad42" translate="yes" xml:space="preserve">
          <source>This function is similar to &lt;code&gt;assq&lt;/code&gt;. It finds the first association &lt;code&gt;(&lt;var&gt;key&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;value&lt;/var&gt;)&lt;/code&gt; by comparing &lt;var&gt;key&lt;/var&gt; with &lt;var&gt;alist&lt;/var&gt; elements, and, if found, returns the &lt;var&gt;value&lt;/var&gt; of that association. If no association is found, the function returns &lt;var&gt;default&lt;/var&gt;. Comparison of &lt;var&gt;key&lt;/var&gt; against &lt;var&gt;alist&lt;/var&gt; elements uses the function specified by &lt;var&gt;testfn&lt;/var&gt;, defaulting to &lt;code&gt;eq&lt;/code&gt;.</source>
          <target state="translated">此功能类似于 &lt;code&gt;assq&lt;/code&gt; 。找到的第一个相关联 &lt;code&gt;(&lt;var&gt;key&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;value&lt;/var&gt;)&lt;/code&gt; ，通过比较 &lt;var&gt;key&lt;/var&gt; 与 &lt;var&gt;alist&lt;/var&gt; 元件，并且，如果找到，则返回 &lt;var&gt;value&lt;/var&gt; 该关联的。如果未找到关联，则该函数返回 &lt;var&gt;default&lt;/var&gt; 。 &lt;var&gt;key&lt;/var&gt; 与 &lt;var&gt;alist&lt;/var&gt; 元素的比较使用 &lt;var&gt;testfn&lt;/var&gt; 指定的功能，默认为 &lt;code&gt;eq&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cbcb2c40531f5fcd149c03c41ebb6ebf617b03ed" translate="yes" xml:space="preserve">
          <source>This function is similar to &lt;code&gt;make-temp-file&lt;/code&gt;, but it creates a temporary file as close as possible to &lt;code&gt;default-directory&lt;/code&gt;. If &lt;var&gt;prefix&lt;/var&gt; is a relative file name, and &lt;code&gt;default-directory&lt;/code&gt; is a remote file name or located on a mounted file systems, the temporary file is created in the directory returned by the function &lt;code&gt;temporary-file-directory&lt;/code&gt;. Otherwise, the function &lt;code&gt;make-temp-file&lt;/code&gt; is used. &lt;var&gt;prefix&lt;/var&gt;, &lt;var&gt;dir-flag&lt;/var&gt; and &lt;var&gt;suffix&lt;/var&gt; have the same meaning as in &lt;code&gt;make-temp-file&lt;/code&gt;.</source>
          <target state="translated">此功能类似于 &lt;code&gt;make-temp-file&lt;/code&gt; ，但是它会创建一个尽可能接近 &lt;code&gt;default-directory&lt;/code&gt; 的临时文件。如果 &lt;var&gt;prefix&lt;/var&gt; 是一个相对文件名，并且 &lt;code&gt;default-directory&lt;/code&gt; 是一个远程文件名，或者位于已安装的文件系统上，则该临时文件将在函数 &lt;code&gt;temporary-file-directory&lt;/code&gt; 返回的目录中创建。否则，将使用 &lt;code&gt;make-temp-file&lt;/code&gt; 函数。 &lt;var&gt;prefix&lt;/var&gt; ， &lt;var&gt;dir-flag&lt;/var&gt; 和 &lt;var&gt;suffix&lt;/var&gt; 的含义与 &lt;code&gt;make-temp-file&lt;/code&gt; 中的含义相同。</target>
        </trans-unit>
        <trans-unit id="e2100bef9b9dc3e518ec1d066f636f9510aea5d1" translate="yes" xml:space="preserve">
          <source>This function is similar to &lt;code&gt;make-translation-table&lt;/code&gt; but returns a complex translation table rather than a simple one-to-one mapping. Each element of &lt;var&gt;alist&lt;/var&gt; is of the form &lt;code&gt;(&lt;var&gt;from&lt;/var&gt;
. &lt;var&gt;to&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;from&lt;/var&gt; and &lt;var&gt;to&lt;/var&gt; are either characters or vectors specifying a sequence of characters. If &lt;var&gt;from&lt;/var&gt; is a character, that character is translated to &lt;var&gt;to&lt;/var&gt; (i.e., to a character or a character sequence). If &lt;var&gt;from&lt;/var&gt; is a vector of characters, that sequence is translated to &lt;var&gt;to&lt;/var&gt;. The returned table has a translation table for reverse mapping in the first extra slot, and the maximum length of all the &lt;var&gt;from&lt;/var&gt; character sequences in the second extra slot.</source>
          <target state="translated">此函数类似于 &lt;code&gt;make-translation-table&lt;/code&gt; ,但返回复杂的转换表，而不是简单的一对一映射。的每个元素 &lt;var&gt;alist&lt;/var&gt; 的形式为 &lt;code&gt;(&lt;var&gt;from&lt;/var&gt; . &lt;var&gt;to&lt;/var&gt;)&lt;/code&gt; ，其中 &lt;var&gt;from&lt;/var&gt; 和 &lt;var&gt;to&lt;/var&gt; 要么字符或矢量指定的字符序列。如果 &lt;var&gt;from&lt;/var&gt; 是一个字符，则将该字符转换 &lt;var&gt;to&lt;/var&gt; （即，转换为一个字符或一个字符序列）。如果 &lt;var&gt;from&lt;/var&gt; 是字符的向量，则该序列将转换 &lt;var&gt;to&lt;/var&gt; 。返回的表在第一个额外的插槽中具有用于反向映射的转换表，而在第二个额外的插槽中具有所有 &lt;var&gt;from&lt;/var&gt; 字符序列的最大长度。</target>
        </trans-unit>
        <trans-unit id="2043e560d5613ff4133144d3c5343d01f48e1e44" translate="yes" xml:space="preserve">
          <source>This function is similar to &lt;code&gt;position-bytes&lt;/code&gt;, but instead of byte position in the current buffer it returns the offset from the beginning of the current buffer&amp;rsquo;s file of the byte that corresponds to the given character &lt;var&gt;position&lt;/var&gt; in the buffer. The conversion requires to know how the text is encoded in the buffer&amp;rsquo;s file; this is what the &lt;var&gt;coding-system&lt;/var&gt; argument is for, defaulting to the value of &lt;code&gt;buffer-file-coding-system&lt;/code&gt;. The optional argument &lt;var&gt;quality&lt;/var&gt; specifies how accurate the result should be; it should be one of the following:</source>
          <target state="translated">此函数类似于 &lt;code&gt;position-bytes&lt;/code&gt; ，但是不是当前缓冲区中的字节位置，它返回当前缓冲区文件开头与该缓冲区中给定字符 &lt;var&gt;position&lt;/var&gt; 相对应的字节的偏移量。转换需要知道文本在缓冲区文件中的编码方式。这就是 &lt;var&gt;coding-system&lt;/var&gt; 参数的用途，默认为 &lt;code&gt;buffer-file-coding-system&lt;/code&gt; 的值。可选的参数 &lt;var&gt;quality&lt;/var&gt; 指定结果的准确性。它应该是以下之一：</target>
        </trans-unit>
        <trans-unit id="3c45bf377dca5fd77d58569b261191101541e772" translate="yes" xml:space="preserve">
          <source>This function is similar to &lt;code&gt;progress-reporter-update&lt;/code&gt; except that it prints a message in the echo area unconditionally.</source>
          <target state="translated">此功能类似于 &lt;code&gt;progress-reporter-update&lt;/code&gt; ,不同之处在于它无条件地在回显区域中打印一条消息。</target>
        </trans-unit>
        <trans-unit id="1947e078c24a60f411a662e1b2f4049123877b42" translate="yes" xml:space="preserve">
          <source>This function is similar to &lt;code&gt;seq-sort&lt;/code&gt;, but the elements of &lt;var&gt;sequence&lt;/var&gt; are transformed by applying &lt;var&gt;function&lt;/var&gt; on them before being sorted. &lt;var&gt;function&lt;/var&gt; is a function of one argument.</source>
          <target state="translated">此功能类似于 &lt;code&gt;seq-sort&lt;/code&gt; ，但是 &lt;var&gt;sequence&lt;/var&gt; 的元素是通过在对其进行排序之前对其应用 &lt;var&gt;function&lt;/var&gt; 来进行转换的。 &lt;var&gt;function&lt;/var&gt; 是一个参数的函数。</target>
        </trans-unit>
        <trans-unit id="03e2e31797b4ea6201bbb47256a6440f3d6a511a" translate="yes" xml:space="preserve">
          <source>This function is the basic low-level primitive for starting asynchronous subprocesses. It returns a process object representing the subprocess. Compared to the more high-level &lt;code&gt;start-process&lt;/code&gt;, described below, it takes keyword arguments, is more flexible, and allows to specify process filters and sentinels in a single call.</source>
          <target state="translated">此函数是用于启动异步子流程的基本低级原语。它返回代表子流程的流程对象。与下面描述的更高级的 &lt;code&gt;start-process&lt;/code&gt; 相比，它采用关键字参数，更灵活，并且允许在单个调用中指定进程过滤器和标记。</target>
        </trans-unit>
        <trans-unit id="0202a5b181ff280f0a1e376052278754fd262dcb" translate="yes" xml:space="preserve">
          <source>This function is the cleanest way to examine all the bindings in a keymap.</source>
          <target state="translated">这个函数是检查键图中所有绑定的最简洁的方法。</target>
        </trans-unit>
        <trans-unit id="a1040f637ee62ebc5ce9594e038f541e724aaca5" translate="yes" xml:space="preserve">
          <source>This function is the composition of &lt;code&gt;file-name-sans-extension&lt;/code&gt; and &lt;code&gt;file-name-nondirectory&lt;/code&gt;. For example,</source>
          <target state="translated">此功能由 &lt;code&gt;file-name-sans-extension&lt;/code&gt; 和 &lt;code&gt;file-name-nondirectory&lt;/code&gt; 组成。例如，</target>
        </trans-unit>
        <trans-unit id="071bf4abb89ece2d10bf2979329e40da70f717a0" translate="yes" xml:space="preserve">
          <source>This function is the default value of &lt;code&gt;blink-paren-function&lt;/code&gt;. It assumes that point follows a character with close parenthesis syntax and applies the appropriate effect momentarily to the matching opening character. If that character is not already on the screen, it displays the character&amp;rsquo;s context in the echo area. To avoid long delays, this function does not search farther than &lt;code&gt;blink-matching-paren-distance&lt;/code&gt; characters.</source>
          <target state="translated">此功能是 &lt;code&gt;blink-paren-function&lt;/code&gt; 的默认值。假定该点紧跟在具有紧密括号语法的字符之后，并立即将适当的效果应用于匹配的开头字符。如果该字符尚未出现在屏幕上，它将在回显区域中显示该字符的上下文。为避免长时间延迟，此功能的搜索范围不会超过 &lt;code&gt;blink-matching-paren-distance&lt;/code&gt; 字符。</target>
        </trans-unit>
        <trans-unit id="75c66f982292a50169390f725152f5312e50a787" translate="yes" xml:space="preserve">
          <source>This function is the delayed counterpart to &lt;code&gt;display-warning&lt;/code&gt; (see &lt;a href=&quot;warning-basics#Warning-Basics&quot;&gt;Warning Basics&lt;/a&gt;), and it is called with the same arguments. The warning message is queued into &lt;code&gt;delayed-warnings-list&lt;/code&gt;.</source>
          <target state="translated">此函数是 &lt;code&gt;display-warning&lt;/code&gt; 的延迟对等函数（请参见&lt;a href=&quot;warning-basics#Warning-Basics&quot;&gt;Warning Basics&lt;/a&gt;），并且使用相同的参数调用它。该警告消息已排队到 &lt;code&gt;delayed-warnings-list&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="18eac0da716b827eb9dde1b5aabe0d80f59c9554" translate="yes" xml:space="preserve">
          <source>This function is the general text-sorting routine that subdivides a buffer into records and then sorts them. Most of the commands in this section use this function.</source>
          <target state="translated">这个函数是一般的文本排序例程,它将一个缓冲区细分为记录,然后进行排序。本节中的大部分命令都使用这个函数。</target>
        </trans-unit>
        <trans-unit id="fa0f6a51f4811ae1090deef7223f1714375fa109" translate="yes" xml:space="preserve">
          <source>This function is the guts of &lt;code&gt;query-replace&lt;/code&gt; and related commands. It searches for occurrences of &lt;var&gt;from-string&lt;/var&gt; in the text between positions &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; and replaces some or all of them. If &lt;var&gt;start&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; (or omitted), point is used instead, and the end of the buffer&amp;rsquo;s accessible portion is used for &lt;var&gt;end&lt;/var&gt;. (If the optional argument &lt;var&gt;backward&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the search starts at &lt;var&gt;end&lt;/var&gt; and goes backward.)</source>
          <target state="translated">此功能是 &lt;code&gt;query-replace&lt;/code&gt; 及相关命令的核心。它在位置 &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 之间的文本中搜索&amp;ldquo; &lt;var&gt;from-string&lt;/var&gt; &amp;rdquo;的出现，并替换其中的一些或全部。如果 &lt;var&gt;start&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; （或省略），则使用point代替，并将缓冲区的可访问部分的 &lt;var&gt;end&lt;/var&gt; 用作end。 （如果 &lt;var&gt;backward&lt;/var&gt; 可选参数为非 &lt;code&gt;nil&lt;/code&gt; ，则搜索从 &lt;var&gt;end&lt;/var&gt; 开始并向后进行。）</target>
        </trans-unit>
        <trans-unit id="583e7379927ed3126d80429cf3d9f23f997c4de7" translate="yes" xml:space="preserve">
          <source>This function is the guts of all the file-visiting functions. It returns a buffer visiting the file &lt;var&gt;filename&lt;/var&gt;. You may make the buffer current or display it in a window if you wish, but this function does not do so.</source>
          <target state="translated">此功能是所有文件访问功能的核心。它返回一个访问文件 &lt;var&gt;filename&lt;/var&gt; 的缓冲区。您可以将缓冲区设置为当前状态，也可以根据需要在窗口中显示它，但是此功能不这样做。</target>
        </trans-unit>
        <trans-unit id="1e943eae916a56fc004b81c59c5354d07f9bec1c" translate="yes" xml:space="preserve">
          <source>This function is the handy way to add function &lt;var&gt;function&lt;/var&gt; to hook variable &lt;var&gt;hook&lt;/var&gt;. You can use it for abnormal hooks as well as for normal hooks. &lt;var&gt;function&lt;/var&gt; can be any Lisp function that can accept the proper number of arguments for &lt;var&gt;hook&lt;/var&gt;. For example,</source>
          <target state="translated">此功能是添加功能方便的方法， &lt;var&gt;function&lt;/var&gt; 挂钩变量 &lt;var&gt;hook&lt;/var&gt; 。您可以将其用于异常钩子以及普通钩子。 &lt;var&gt;function&lt;/var&gt; 可以是任何Lisp函数，它可以接受适当数量的 &lt;var&gt;hook&lt;/var&gt; 参数。例如，</target>
        </trans-unit>
        <trans-unit id="eaf8f506e507be6d21f071afe7673979c28d9ec0" translate="yes" xml:space="preserve">
          <source>This function is the most basic function for building new list structure. It creates a new cons cell, making &lt;var&gt;object1&lt;/var&gt; the &lt;small&gt;CAR&lt;/small&gt;, and &lt;var&gt;object2&lt;/var&gt; the &lt;small&gt;CDR&lt;/small&gt;. It then returns the new cons cell. The arguments &lt;var&gt;object1&lt;/var&gt; and &lt;var&gt;object2&lt;/var&gt; may be any Lisp objects, but most often &lt;var&gt;object2&lt;/var&gt; is a list.</source>
          <target state="translated">此功能是构建新列表结构的最基本功能。它创建一个新的con单元格，使 &lt;var&gt;object1&lt;/var&gt; 为&lt;small&gt;CAR&lt;/small&gt;，而 &lt;var&gt;object2&lt;/var&gt; 为&lt;small&gt;CDR&lt;/small&gt;。然后，它返回新的cons单元格。参数 &lt;var&gt;object1&lt;/var&gt; 和 &lt;var&gt;object2&lt;/var&gt; 可以是任何Lisp对象，但最常见的是 &lt;var&gt;object2&lt;/var&gt; 是列表。</target>
        </trans-unit>
        <trans-unit id="0385f7e2ce1a926badee5da80eecc4ceba32ebb8" translate="yes" xml:space="preserve">
          <source>This function is the most general way to get input from the minibuffer. By default, it accepts arbitrary text and returns it as a string; however, if &lt;var&gt;read&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then it uses &lt;code&gt;read&lt;/code&gt; to convert the text into a Lisp object (see &lt;a href=&quot;input-functions#Input-Functions&quot;&gt;Input Functions&lt;/a&gt;).</source>
          <target state="translated">此功能是从迷你缓冲区获取输入的最通用方法。默认情况下，它接受任意文本并以字符串形式返回；但是，如果 &lt;var&gt;read&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则它将使用 &lt;code&gt;read&lt;/code&gt; 将文本转换为Lisp对象（请参见&lt;a href=&quot;input-functions#Input-Functions&quot;&gt;Input Functions&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="5e6ccf48321746b97b668fbc56aa7b9822ea8fba" translate="yes" xml:space="preserve">
          <source>This function is the non-destructive counterpart of &lt;code&gt;delete&lt;/code&gt;. It returns a copy of &lt;code&gt;sequence&lt;/code&gt;, a list, vector, or string, with elements &lt;code&gt;equal&lt;/code&gt; to &lt;code&gt;object&lt;/code&gt; removed. For example:</source>
          <target state="translated">此功能是 &lt;code&gt;delete&lt;/code&gt; 的非破坏性对应物。它返回的一个副本 &lt;code&gt;sequence&lt;/code&gt; ，列表，载体，或串，包含元素 &lt;code&gt;equal&lt;/code&gt; 给 &lt;code&gt;object&lt;/code&gt; 去除。例如：</target>
        </trans-unit>
        <trans-unit id="515c4b8685ba3c619ac1e8f1e2890460d439f01c" translate="yes" xml:space="preserve">
          <source>This function is the opposite of &lt;code&gt;listp&lt;/code&gt;: it returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is not a list. Otherwise, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此函数与 &lt;code&gt;listp&lt;/code&gt; 相反：如果 &lt;var&gt;object&lt;/var&gt; 不是列表，则返回 &lt;code&gt;t&lt;/code&gt; 。否则，它返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7750905676c7b8df730501b2e7a52515c954e625" translate="yes" xml:space="preserve">
          <source>This function is the same as &lt;code&gt;libxml-parse-html-region&lt;/code&gt;, except that it parses the text as XML rather than HTML (so it is stricter about syntax).</source>
          <target state="translated">此函数与 &lt;code&gt;libxml-parse-html-region&lt;/code&gt; 相同，不同之处在于它将文本解析为XML而不是HTML（因此语法更为严格）。</target>
        </trans-unit>
        <trans-unit id="988a8ce536cec6d1bd5e78eeec163bf89ccb0e37" translate="yes" xml:space="preserve">
          <source>This function is unlike the other insertion functions in that it relocates markers initially pointing at the insertion point, to point after the inserted text. If an overlay begins at the insertion point, the inserted text falls outside the overlay; if a nonempty overlay ends at the insertion point, the inserted text falls inside that overlay.</source>
          <target state="translated">这个函数与其他插入函数不同,它将最初指向插入点的标记重新定位到插入文本之后。如果一个覆盖层从插入点开始,插入的文字就落在覆盖层之外;如果一个非空覆盖层在插入点结束,插入的文字就落在该覆盖层之内。</target>
        </trans-unit>
        <trans-unit id="be04074c7a9d83fbea02fdbb6469d86a4f96e0bd" translate="yes" xml:space="preserve">
          <source>This function is used by &lt;code&gt;find-file-noselect&lt;/code&gt;. It uses &lt;code&gt;generate-new-buffer&lt;/code&gt; (see &lt;a href=&quot;creating-buffers#Creating-Buffers&quot;&gt;Creating Buffers&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;find-file-noselect&lt;/code&gt; 使用此功能。它使用了 &lt;code&gt;generate-new-buffer&lt;/code&gt; （请参阅&lt;a href=&quot;creating-buffers#Creating-Buffers&quot;&gt;创建缓冲区&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="833ac6c197eb42f56f0da4e28bc7732d9f9c4ff4" translate="yes" xml:space="preserve">
          <source>This function is used for making non-global tool bar items. Use it like &lt;code&gt;tool-bar-add-item-from-menu&lt;/code&gt; except that &lt;var&gt;in-map&lt;/var&gt; specifies the local map to make the definition in. The argument &lt;var&gt;from-map&lt;/var&gt; is like the &lt;var&gt;map&lt;/var&gt; argument of &lt;code&gt;tool-bar-add-item-from-menu&lt;/code&gt;.</source>
          <target state="translated">此功能用于制作非全局工具栏项目。使用它像 &lt;code&gt;tool-bar-add-item-from-menu&lt;/code&gt; ，除了 &lt;var&gt;in-map&lt;/var&gt; 指定的本地地图，使定义该参数 &lt;var&gt;from-map&lt;/var&gt; 就像是 &lt;var&gt;map&lt;/var&gt; 的论点 &lt;code&gt;tool-bar-add-item-from-menu&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="054ac6c3f16a80157852f2247bb4afc23f6c0175" translate="yes" xml:space="preserve">
          <source>This function is used mainly for operating on keyboard macros, but it can also be used as a rough inverse for &lt;code&gt;key-description&lt;/code&gt;. You call it with a string containing key descriptions, separated by spaces; it returns a string or vector containing the corresponding events. (This may or may not be a single valid key sequence, depending on what events you use; see &lt;a href=&quot;key-sequences#Key-Sequences&quot;&gt;Key Sequences&lt;/a&gt;.) If &lt;var&gt;need-vector&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the return value is always a vector.</source>
          <target state="translated">此函数主要用于在键盘宏上进行操作，但也可以用作 &lt;code&gt;key-description&lt;/code&gt; 的粗略逆运算。您可以使用包含键描述的字符串来调用它，并用空格分隔；它返回包含相应事件的字符串或向量。 （根据您使用的事件，这可能是一个有效键序列，也可能不是一个有效键序列；请参阅&lt;a href=&quot;key-sequences#Key-Sequences&quot;&gt;键序列&lt;/a&gt;。）如果 &lt;var&gt;need-vector&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则返回值始终是一个向量。</target>
        </trans-unit>
        <trans-unit id="0f47a9840881e51b0ddab6debab8a2b86b4ca1a5" translate="yes" xml:space="preserve">
          <source>This function is used only by the debugger.</source>
          <target state="translated">此功能仅由调试器使用。</target>
        </trans-unit>
        <trans-unit id="bea487a88364aa3c8c96921d442179387ed5e92a" translate="yes" xml:space="preserve">
          <source>This function is used to ask a user how to proceed after an attempt to modify a buffer visiting file &lt;var&gt;filename&lt;/var&gt; when the file is newer than the buffer text. Emacs detects this because the modification time of the file on disk is newer than the last save-time and its contents have changed. This means some other program has probably altered the file.</source>
          <target state="translated">此功能用于询问用户，当文件比缓冲区文本新时，尝试修改缓冲区访问文件的文件 &lt;var&gt;filename&lt;/var&gt; 后该如何继续。 Emacs会检测到此问题，因为磁盘上文件的修改时间比上次保存时间新，并且其内容已更改。这意味着其他程序可能已更改了文件。</target>
        </trans-unit>
        <trans-unit id="cedffea6fb1e82cb915a884797656ab6fb360424" translate="yes" xml:space="preserve">
          <source>This function is used to open a &lt;em&gt;termscript file&lt;/em&gt; that will record all the characters sent by Emacs to the terminal. It returns &lt;code&gt;nil&lt;/code&gt;. Termscript files are useful for investigating problems where Emacs garbles the screen, problems that are due to incorrect Termcap entries or to undesirable settings of terminal options more often than to actual Emacs bugs. Once you are certain which characters were actually output, you can determine reliably whether they correspond to the Termcap specifications in use.</source>
          <target state="translated">此功能用于打开一个&lt;em&gt;termscript文件&lt;/em&gt;，该&lt;em&gt;文件&lt;/em&gt;将记录Emacs发送到终端的所有字符。返回 &lt;code&gt;nil&lt;/code&gt; 。Termscript文件对于调查Emacs出现屏幕乱码的问题，由于Termcap条目不正确或由于终端选项的不良设置而不是实际Emacs错误引起的问题很有用。一旦确定了实际输出的字符，就可以可靠地确定它们是否与所使用的Termcap规范相对应。</target>
        </trans-unit>
        <trans-unit id="292fc363baa4a4c79b7cfa85647cf63b30afbd38" translate="yes" xml:space="preserve">
          <source>This function is used to perform hostname lookups on &lt;var&gt;name&lt;/var&gt;, which is expected to be an ASCII-only string, otherwise an error is signaled. Call &lt;code&gt;puny-encode-domain&lt;/code&gt; on &lt;var&gt;name&lt;/var&gt; first if you wish to lookup internationalized hostnames.</source>
          <target state="translated">此函数用于在 &lt;var&gt;name&lt;/var&gt; 上执行主机名查找，该名称应为纯ASCII字符串，否则会发出错误信号。如果要查找国际化的主机 &lt;var&gt;name&lt;/var&gt; 请先在名称上调用 &lt;code&gt;puny-encode-domain&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ba63deac739c39c5b402b4def5eb47fbf60033d" translate="yes" xml:space="preserve">
          <source>This function is used when building Emacs, just before the runnable Emacs is dumped. It finds the positions of the documentation strings stored in the file &lt;var&gt;filename&lt;/var&gt;, and records those positions into memory in the function definitions and variable property lists. See &lt;a href=&quot;building-emacs#Building-Emacs&quot;&gt;Building Emacs&lt;/a&gt;.</source>
          <target state="translated">在转储可运行的Emacs之前，在构建Emacs时使用此功能。它找到存储在文件 &lt;var&gt;filename&lt;/var&gt; 中的文档字符串的位置，并将这些位置记录到函数定义和变量属性列表中的内存中。请参阅&lt;a href=&quot;building-emacs#Building-Emacs&quot;&gt;构建Emacs&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4e66b38753b731aa48f4d0b918fa41fbb75b9836" translate="yes" xml:space="preserve">
          <source>This function is useful if the buffer was not read from the file normally, or if the file itself has been changed for some known benign reason.</source>
          <target state="translated">如果缓冲区没有正常从文件中读取,或者文件本身因为一些已知的良性原因被改变,这个函数就很有用。</target>
        </trans-unit>
        <trans-unit id="fa2794d68b09153fad1d26623fa90ac615093833" translate="yes" xml:space="preserve">
          <source>This function itself does not make the new frame the selected frame. See &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;. The previously selected frame remains selected. On graphical terminals, however, the windowing system may select the new frame for its own reasons.</source>
          <target state="translated">此功能本身不会使新帧成为所选帧。请参阅&lt;a href=&quot;input-focus#Input-Focus&quot;&gt;输入焦点&lt;/a&gt;。先前选择的帧保持选中状态。但是，在图形终端上，窗口系统可能会出于自身原因选择新框架。</target>
        </trans-unit>
        <trans-unit id="b2b8ddd1552584c2eb2c6dad6102d8735314e807" translate="yes" xml:space="preserve">
          <source>This function joins the line point is on to the previous line, deleting any whitespace at the join and in some cases replacing it with one space. If &lt;var&gt;join-following-p&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;delete-indentation&lt;/code&gt; joins this line to the following line instead. Otherwise, if &lt;var&gt;beg&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; are non-&lt;code&gt;nil&lt;/code&gt;, this function joins all lines in the region they define.</source>
          <target state="translated">此函数将线点连接到上一行，删除连接处的所有空格，并在某些情况下将其替换为一个空格。如果 &lt;var&gt;join-following-p&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;delete-indentation&lt;/code&gt; 会将这一行连接到下一行。否则，如果 &lt;var&gt;beg&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则此函数将连接它们定义的区域中的所有行。</target>
        </trans-unit>
        <trans-unit id="225d5196925af5c0cd1a2d0925e9e365c61d151b" translate="yes" xml:space="preserve">
          <source>This function kills the buffer &lt;var&gt;buffer-or-name&lt;/var&gt;, freeing all its memory for other uses or to be returned to the operating system. If &lt;var&gt;buffer-or-name&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or omitted, it kills the current buffer.</source>
          <target state="translated">该函数终止缓冲区 &lt;var&gt;buffer-or-name&lt;/var&gt; ，释放其所有内存以用于其他用途或返回给操作系统。如果 &lt;var&gt;buffer-or-name&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; 或省略，它将杀死当前缓冲区。</target>
        </trans-unit>
        <trans-unit id="3fa88896e5e801bab628f8b066b0b6aca2a2eff0" translate="yes" xml:space="preserve">
          <source>This function kills the process &lt;var&gt;process&lt;/var&gt; by sending the signal &lt;code&gt;SIGKILL&lt;/code&gt;. This signal kills the subprocess immediately, and cannot be handled by the subprocess.</source>
          <target state="translated">该函数通过发送信号 &lt;code&gt;SIGKILL&lt;/code&gt; 终止 &lt;var&gt;process&lt;/var&gt; 。该信号立即杀死子进程，并且该子进程无法处理。</target>
        </trans-unit>
        <trans-unit id="e4fc7373deee855c021e696f3cc1620363733bb3" translate="yes" xml:space="preserve">
          <source>This function kills the stretch of text between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;; but if the optional argument &lt;var&gt;region&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it ignores &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;, and kills the text in the current region instead. The text is deleted but saved in the kill ring, along with its text properties. The value is always &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">这个函数消除了 &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 之间的文本延伸; 但是，如果可选参数 &lt;var&gt;region&lt;/var&gt; 为non- &lt;code&gt;nil&lt;/code&gt; ，它将忽略 &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; ，并杀死当前区域中的文本。文本将被删除，但连同其文本属性一起保存在kill环中。该值始终为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6156a82790a09a2218e54f22a9360039b5077632" translate="yes" xml:space="preserve">
          <source>This function leaves the buffer contents unchanged when viewed as a sequence of bytes. As a consequence, it can change the contents viewed as characters; for instance, a sequence of three bytes which is treated as one character in multibyte representation will count as three characters in unibyte representation. Eight-bit characters representing raw bytes are an exception. They are represented by one byte in a unibyte buffer, but when the buffer is set to multibyte, they are converted to two-byte sequences, and vice versa.</source>
          <target state="translated">当缓冲区的内容被视为字节序列时,该函数保持不变,因此,它可以改变被视为字符的内容。例如,一个由三个字节组成的序列在多字节表示时被视为一个字符,而在单字节表示时则被视为三个字符。代表原始字节的八位字符是一个例外。它们在单字节缓冲区中由一个字节表示,但当缓冲区设置为多字节时,它们将被转换为两个字节的序列,反之亦然。</target>
        </trans-unit>
        <trans-unit id="575c6110fe6258bff18e22e2087576bbda03768d" translate="yes" xml:space="preserve">
          <source>This function lets you compare portions of the text in a buffer, without copying them into strings first.</source>
          <target state="translated">这个函数可以让你比较缓冲区中的部分文本,而不需要先将它们复制到字符串中。</target>
        </trans-unit>
        <trans-unit id="a9be00bfd4c17b376996c83668ee2d69d02b4c12" translate="yes" xml:space="preserve">
          <source>This function lets you compare two substrings of the same buffer or two different buffers. The first three arguments specify one substring, giving a buffer (or a buffer name) and two positions within the buffer. The last three arguments specify the other substring in the same way. You can use &lt;code&gt;nil&lt;/code&gt; for &lt;var&gt;buffer1&lt;/var&gt;, &lt;var&gt;buffer2&lt;/var&gt;, or both to stand for the current buffer.</source>
          <target state="translated">此函数使您可以比较同一缓冲区或两个不同缓冲区的两个子字符串。前三个参数指定一个子字符串，给出一个缓冲区（或缓冲区名称）以及缓冲区内的两个位置。最后三个参数以相同的方式指定另一个子字符串。您可以将 &lt;code&gt;nil&lt;/code&gt; 用作 &lt;var&gt;buffer1&lt;/var&gt; ， &lt;var&gt;buffer2&lt;/var&gt; 或两者都代表当前缓冲区。</target>
        </trans-unit>
        <trans-unit id="c7cc2f71b5ee48535b41c427de6c79709eaae272" translate="yes" xml:space="preserve">
          <source>This function lets you cycle conveniently through all the frames on a specific terminal from an arbitrary starting point. It returns the frame following &lt;var&gt;frame&lt;/var&gt;, in the list of all live frames, on &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s terminal. The argument &lt;var&gt;frame&lt;/var&gt; must specify a live frame and defaults to the selected frame. It never returns a frame whose &lt;code&gt;no-other-frame&lt;/code&gt; parameter (see &lt;a href=&quot;frame-interaction-parameters#Frame-Interaction-Parameters&quot;&gt;Frame Interaction Parameters&lt;/a&gt;) is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此功能使您可以从任意起点方便地循环浏览特定终端上的所有帧。它会在 &lt;var&gt;frame&lt;/var&gt; 的终端上返回所有活动帧列表中的下一 &lt;var&gt;frame&lt;/var&gt; 。参数 &lt;var&gt;frame&lt;/var&gt; 必须指定一个实时框架，并且默认为所选框架。它从不返回 &lt;code&gt;no-other-frame&lt;/code&gt; 参数（请参阅&lt;a href=&quot;frame-interaction-parameters#Frame-Interaction-Parameters&quot;&gt;Frame Interaction Parameters&lt;/a&gt;）为 &lt;code&gt;nil&lt;/code&gt; 的帧。</target>
        </trans-unit>
        <trans-unit id="5dda756950cf97b5b76fe1b6b607179ef599a454" translate="yes" xml:space="preserve">
          <source>This function lets you specify the grammar using a BNF notation. It accepts a &lt;var&gt;bnf&lt;/var&gt; description of the grammar along with a set of conflict resolution rules &lt;var&gt;resolvers&lt;/var&gt;, and returns a &lt;em&gt;prec2&lt;/em&gt; table.</source>
          <target state="translated">此功能使您可以使用BNF表示法指定语法。它接受语法的 &lt;var&gt;bnf&lt;/var&gt; 描述以及一组冲突解决规则 &lt;var&gt;resolvers&lt;/var&gt; ，并返回&lt;em&gt;prec2&lt;/em&gt;表。</target>
        </trans-unit>
        <trans-unit id="cc14d70677b18cb72a2ef78db08f50252fda302e" translate="yes" xml:space="preserve">
          <source>This function lets you take the &lt;small&gt;CAR&lt;/small&gt; of a cons cell while avoiding errors for other data types. It returns the &lt;small&gt;CAR&lt;/small&gt; of &lt;var&gt;object&lt;/var&gt; if &lt;var&gt;object&lt;/var&gt; is a cons cell, &lt;code&gt;nil&lt;/code&gt; otherwise. This is in contrast to &lt;code&gt;car&lt;/code&gt;, which signals an error if &lt;var&gt;object&lt;/var&gt; is not a list.</source>
          <target state="translated">此功能使您可以使用cons单元的&lt;small&gt;CAR&lt;/small&gt;，同时避免其他数据类型的错误。它返回&lt;small&gt;CAR&lt;/small&gt;的 &lt;var&gt;object&lt;/var&gt; ，如果 &lt;var&gt;object&lt;/var&gt; 是一个利弊细胞， &lt;code&gt;nil&lt;/code&gt; 其他。这与 &lt;code&gt;car&lt;/code&gt; 相反，car表示如果 &lt;var&gt;object&lt;/var&gt; 不是列表，则错误。</target>
        </trans-unit>
        <trans-unit id="22061ec14a542fe8324af72aa640f7a4e7a2e2bb" translate="yes" xml:space="preserve">
          <source>This function lets you take the &lt;small&gt;CDR&lt;/small&gt; of a cons cell while avoiding errors for other data types. It returns the &lt;small&gt;CDR&lt;/small&gt; of &lt;var&gt;object&lt;/var&gt; if &lt;var&gt;object&lt;/var&gt; is a cons cell, &lt;code&gt;nil&lt;/code&gt; otherwise. This is in contrast to &lt;code&gt;cdr&lt;/code&gt;, which signals an error if &lt;var&gt;object&lt;/var&gt; is not a list.</source>
          <target state="translated">此功能使您可以获取cons单元格的&lt;small&gt;CDR&lt;/small&gt;，同时避免其他数据类型的错误。它返回&lt;small&gt;CDR&lt;/small&gt;的 &lt;var&gt;object&lt;/var&gt; ，如果 &lt;var&gt;object&lt;/var&gt; 是一个利弊细胞， &lt;code&gt;nil&lt;/code&gt; 其他。这与 &lt;code&gt;cdr&lt;/code&gt; 相反，cdr会在 &lt;var&gt;object&lt;/var&gt; 不是列表时发出错误消息。</target>
        </trans-unit>
        <trans-unit id="f38ab8a2219073c8cf33791f6480210dcc827e6e" translate="yes" xml:space="preserve">
          <source>This function loads the Custom theme named &lt;var&gt;theme&lt;/var&gt; from its source file, looking for the source file in the directories specified by the variable &lt;code&gt;custom-theme-load-path&lt;/code&gt;. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Custom-Themes.html#Custom-Themes&quot;&gt;Custom Themes&lt;/a&gt; in</source>
          <target state="translated">此函数从其源文件中加载名为 &lt;var&gt;theme&lt;/var&gt; 的Custom主题，在变量 &lt;code&gt;custom-theme-load-path&lt;/code&gt; 指定的目录中查找源文件。见&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Custom-Themes.html#Custom-Themes&quot;&gt;自定义主题&lt;/a&gt;中</target>
        </trans-unit>
        <trans-unit id="35cf4a114b62213579c08756e0af599bc20cf6bc" translate="yes" xml:space="preserve">
          <source>This function locks the file &lt;var&gt;filename&lt;/var&gt;, if the current buffer is modified. The argument &lt;var&gt;filename&lt;/var&gt; defaults to the current buffer&amp;rsquo;s visited file. Nothing is done if the current buffer is not visiting a file, or is not modified, or if the option &lt;code&gt;create-lockfiles&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果修改了当前缓冲区，此函数将锁定文件 &lt;var&gt;filename&lt;/var&gt; 。参数 &lt;var&gt;filename&lt;/var&gt; 默认为当前缓冲区的访问文件。如果当前缓冲区未访问文件或未修改，或者选项 &lt;code&gt;create-lockfiles&lt;/code&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="06675599cb04d6c7015811dbc48d59051402a126" translate="yes" xml:space="preserve">
          <source>This function looks at the text of the specified &lt;var&gt;object&lt;/var&gt; between positions &lt;var&gt;from&lt;/var&gt; (inclusive) and &lt;var&gt;to&lt;/var&gt; (exclusive), and returns the first position where it finds a strong left-to-right character whose directional properties were forced to display the character as right-to-left, or for a strong right-to-left character that was forced to display as left-to-right. If it finds no such characters in the specified region of text, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此函数查看指定 &lt;var&gt;object&lt;/var&gt; &lt;var&gt;from&lt;/var&gt; （包括） &lt;var&gt;to&lt;/var&gt; （到）之间的位置的文本，并返回第一个位置，在该位置找到一个从左到右的强字符，其方向属性被迫将字符显示为右-从左到右，或者对于强壮的从右到左字符，被迫显示为从左到右。如果在指定的文本区域中找不到此类字符，则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f1609cb3d5a67938fa9a7d9db3fcc26cf173b73d" translate="yes" xml:space="preserve">
          <source>This function looks for connection-local variables according to &lt;var&gt;criteria&lt;/var&gt;, and immediately applies them in the current buffer.</source>
          <target state="translated">此函数根据 &lt;var&gt;criteria&lt;/var&gt; 查找连接局部变量，并立即将其应用于当前缓冲区。</target>
        </trans-unit>
        <trans-unit id="14ecbe3abbb11fd5dde5fe0313d29a1c511f409e" translate="yes" xml:space="preserve">
          <source>This function looks for directory-local variables, and immediately applies them in the current buffer. It is intended to be called in the mode commands for non-file buffers, such as Dired buffers, to let them obey directory-local variable settings. For non-file buffers, Emacs looks for directory-local variables in &lt;code&gt;default-directory&lt;/code&gt; and its parent directories.</source>
          <target state="translated">该函数查找目录局部变量，并立即将其应用于当前缓冲区。打算在非文件缓冲区（例如Dired缓冲区）的模式命令中调用它，以使它们服从目录局部变量设置。对于非文件缓冲区，Emacs在 &lt;code&gt;default-directory&lt;/code&gt; 及其父目录中查找目录局部变量。</target>
        </trans-unit>
        <trans-unit id="bc295c3e87fb4f6223ab3ee1000e87fd0df5bf54" translate="yes" xml:space="preserve">
          <source>This function looks up &lt;var&gt;key&lt;/var&gt; in &lt;var&gt;table&lt;/var&gt;, and returns its associated &lt;var&gt;value&lt;/var&gt;&amp;mdash;or &lt;var&gt;default&lt;/var&gt;, if &lt;var&gt;key&lt;/var&gt; has no association in &lt;var&gt;table&lt;/var&gt;.</source>
          <target state="translated">此函数在 &lt;var&gt;table&lt;/var&gt; 中查找 &lt;var&gt;key&lt;/var&gt; ，并返回其关联 &lt;var&gt;value&lt;/var&gt; -如果 &lt;var&gt;key&lt;/var&gt; 在 &lt;var&gt;table&lt;/var&gt; 中没有关联，则返回 &lt;var&gt;default&lt;/var&gt; 值。</target>
        </trans-unit>
        <trans-unit id="6b0df4e12632df0b9254c90a2fdf8ef2747b37e6" translate="yes" xml:space="preserve">
          <source>This function lowers frame &lt;var&gt;frame&lt;/var&gt; (default, the selected frame) below all other frames belonging to the same or a higher z-group as &lt;var&gt;frame&lt;/var&gt;. If &lt;var&gt;frame&lt;/var&gt; is a child frame (see &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;), this lowers &lt;var&gt;frame&lt;/var&gt; below all other child frames of its parent.</source>
          <target state="translated">此功能降低帧 &lt;var&gt;frame&lt;/var&gt; （默认情况下，所选择的帧）下面属于相同或较高的Z基团的所有其它帧 &lt;var&gt;frame&lt;/var&gt; 。如果 &lt;var&gt;frame&lt;/var&gt; 是子帧（见&lt;a href=&quot;child-frames#Child-Frames&quot;&gt;子框架&lt;/a&gt;），这降低了 &lt;var&gt;frame&lt;/var&gt; 之下其父的所有其他子帧。</target>
        </trans-unit>
        <trans-unit id="22c9c4d9843cab17121e93cd53f85654891fe35e" translate="yes" xml:space="preserve">
          <source>This function makes &lt;var&gt;buffer-or-name&lt;/var&gt; the current buffer and displays it in some window, preferably not the window currently selected. It then selects the displaying window. If that window is on a different graphical frame, that frame is given input focus if possible (see &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;).</source>
          <target state="translated">此功能使&amp;ldquo; &lt;var&gt;buffer-or-name&lt;/var&gt; &amp;rdquo;成为当前缓冲区，并在某个窗口中显示它，最好不在当前选定的窗口中显示。然后选择显示窗口。如果该窗口位于其他图形框架上，则在可能的情况下为该框架提供输入焦点（请参见&lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="ac93b5b66daebaabc63ce1380141b6d9fdf9a1d0" translate="yes" xml:space="preserve">
          <source>This function makes &lt;var&gt;buffer-or-name&lt;/var&gt; the current buffer. &lt;var&gt;buffer-or-name&lt;/var&gt; must be an existing buffer or the name of an existing buffer. The return value is the buffer made current.</source>
          <target state="translated">此功能使 &lt;var&gt;buffer-or-name&lt;/var&gt; 为当前缓冲区。 &lt;var&gt;buffer-or-name&lt;/var&gt; 必须是现有缓冲区或现有缓冲区的名称。返回值是当前的缓冲区。</target>
        </trans-unit>
        <trans-unit id="456a66d4107c57a2793734c988a5d73a71ea301a" translate="yes" xml:space="preserve">
          <source>This function makes &lt;var&gt;char&lt;/var&gt; case-invariant, with syntax &lt;var&gt;syntax&lt;/var&gt;.</source>
          <target state="translated">此函数使用语法 &lt;var&gt;syntax&lt;/var&gt; 使 &lt;var&gt;char&lt;/var&gt; 不变。</target>
        </trans-unit>
        <trans-unit id="c516e66ce171f307db7e705b27bc1ee892d22ea5" translate="yes" xml:space="preserve">
          <source>This function makes &lt;var&gt;charsets&lt;/var&gt; the highest priority character sets.</source>
          <target state="translated">此功能使 &lt;var&gt;charsets&lt;/var&gt; 具有最高优先级的字符集。</target>
        </trans-unit>
        <trans-unit id="fd3cafe261afc6e8d95d65d7dc78f6d1b7afbfd2" translate="yes" xml:space="preserve">
          <source>This function makes &lt;var&gt;keymap&lt;/var&gt; the new current global keymap. It returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此功能使 &lt;var&gt;keymap&lt;/var&gt; 成为新的当前全局键盘映射。返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4af3a9ff2a228675f7e08968d977f09f12510231" translate="yes" xml:space="preserve">
          <source>This function makes &lt;var&gt;keymap&lt;/var&gt; the new local keymap of the current buffer. If &lt;var&gt;keymap&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, then the buffer has no local keymap. &lt;code&gt;use-local-map&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;. Most major mode commands use this function.</source>
          <target state="translated">此功能使键 &lt;var&gt;keymap&lt;/var&gt; 成为当前缓冲区的新本地键映射。如果 &lt;var&gt;keymap&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则缓冲区没有本地键映射。 &lt;code&gt;use-local-map&lt;/code&gt; 返回 &lt;code&gt;nil&lt;/code&gt; 。大多数主要模式命令都使用此功能。</target>
        </trans-unit>
        <trans-unit id="8c1749d870609b3bade7ea42bd0ade793f0398ce" translate="yes" xml:space="preserve">
          <source>This function makes &lt;var&gt;process&lt;/var&gt; see an end-of-file in its input. The</source>
          <target state="translated">此功能使 &lt;var&gt;process&lt;/var&gt; 在其输入中看到文件结尾。的</target>
        </trans-unit>
        <trans-unit id="fe76ba944050611126615fe655ef8dcab5345002" translate="yes" xml:space="preserve">
          <source>This function makes &lt;var&gt;symbol&lt;/var&gt;&amp;rsquo;s function cell void, so that a subsequent attempt to access this cell will cause a &lt;code&gt;void-function&lt;/code&gt; error. It returns &lt;var&gt;symbol&lt;/var&gt;. (See also &lt;code&gt;makunbound&lt;/code&gt;, in &lt;a href=&quot;void-variables#Void-Variables&quot;&gt;Void Variables&lt;/a&gt;.)</source>
          <target state="translated">此功能会使 &lt;var&gt;symbol&lt;/var&gt; 的功能单元格无效，因此，随后尝试访问此单元格将导致 &lt;code&gt;void-function&lt;/code&gt; 错误。它返回 &lt;var&gt;symbol&lt;/var&gt; 。（参见 &lt;code&gt;makunbound&lt;/code&gt; ，在&lt;a href=&quot;void-variables#Void-Variables&quot;&gt;虚空变量&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="5ba515bcb4e93cb65ecc2fe1455cb72712846809" translate="yes" xml:space="preserve">
          <source>This function makes &lt;var&gt;table&lt;/var&gt; the category table for the current buffer. It returns &lt;var&gt;table&lt;/var&gt;.</source>
          <target state="translated">此功能使 &lt;var&gt;table&lt;/var&gt; 成为当前缓冲区的类别表。它返回 &lt;var&gt;table&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="792b793e94877cf109e9a97bb12ea73d0948ebc1" translate="yes" xml:space="preserve">
          <source>This function makes &lt;var&gt;table&lt;/var&gt; the standard case table, so that it will be used in any buffers created subsequently.</source>
          <target state="translated">此功能使 &lt;var&gt;table&lt;/var&gt; 成为标准案例表格，以便它将在随后创建的所有缓冲区中使用。</target>
        </trans-unit>
        <trans-unit id="e6e348f53e5361b5b69bf91912469bd5ba7fc19e" translate="yes" xml:space="preserve">
          <source>This function makes &lt;var&gt;table&lt;/var&gt; the syntax table for the current buffer. It returns &lt;var&gt;table&lt;/var&gt;.</source>
          <target state="translated">此函数使 &lt;var&gt;table&lt;/var&gt; 成为当前缓冲区的语法表。它返回 &lt;var&gt;table&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="db1db24e1ee0045d2799754695c2b72861c76ea8" translate="yes" xml:space="preserve">
          <source>This function makes &lt;var&gt;window&lt;/var&gt; display &lt;var&gt;buffer-or-name&lt;/var&gt;. &lt;var&gt;window&lt;/var&gt; should be a live window; if &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window. &lt;var&gt;buffer-or-name&lt;/var&gt; should be a buffer, or the name of an existing buffer. This function does not change which window is selected, nor does it directly change which buffer is current (see &lt;a href=&quot;current-buffer#Current-Buffer&quot;&gt;Current Buffer&lt;/a&gt;). Its return value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此功能使 &lt;var&gt;window&lt;/var&gt; 显示 &lt;var&gt;buffer-or-name&lt;/var&gt; 。 &lt;var&gt;window&lt;/var&gt; 应该是活动窗口；如果为 &lt;code&gt;nil&lt;/code&gt; ，则默认为所选窗口。 &lt;var&gt;buffer-or-name&lt;/var&gt; 应该是一个缓冲区，或者是一个现有缓冲区的名称。此函数不会更改选择哪个窗口，也不会直接更改哪个缓冲区是当前的（请参见&lt;a href=&quot;current-buffer#Current-Buffer&quot;&gt;Current Buffer&lt;/a&gt;）。它的返回值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="30bfeed6726fd625b9c4a0855f6ccb6a2f2effeb" translate="yes" xml:space="preserve">
          <source>This function makes &lt;var&gt;window&lt;/var&gt; fill its frame, deleting other windows as necessary. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window. An error is signaled if &lt;var&gt;window&lt;/var&gt; is a side window (see &lt;a href=&quot;side-windows#Side-Windows&quot;&gt;Side Windows&lt;/a&gt;). If &lt;var&gt;window&lt;/var&gt; is part of an atomic window (see &lt;a href=&quot;atomic-windows#Atomic-Windows&quot;&gt;Atomic Windows&lt;/a&gt;), this function tries to make the root of that atomic window fill its frame. The return value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此功能使 &lt;var&gt;window&lt;/var&gt; 填充其框架，并根据需要删除其他窗口。如果 &lt;var&gt;window&lt;/var&gt; 省略或为 &lt;code&gt;nil&lt;/code&gt; ，则默认为所选窗口。如果 &lt;var&gt;window&lt;/var&gt; 是一个侧窗（请参见&lt;a href=&quot;side-windows#Side-Windows&quot;&gt;Side Windows&lt;/a&gt;），则指示一个错误。如果 &lt;var&gt;window&lt;/var&gt; 是原子窗口的一部分（请参阅&lt;a href=&quot;atomic-windows#Atomic-Windows&quot;&gt;Atomic Windows&lt;/a&gt;），则此函数尝试使该原子窗口的根填充其框架。返回值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c3f76a86b820e42a1010cd793d05e7b466b125cb" translate="yes" xml:space="preserve">
          <source>This function makes &lt;var&gt;window&lt;/var&gt; the selected window and the window selected within its frame (see &lt;a href=&quot;basic-windows#Basic-Windows&quot;&gt;Basic Windows&lt;/a&gt;), and selects that frame. It also makes &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s buffer (see &lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;Buffers and Windows&lt;/a&gt;) current and sets that buffer&amp;rsquo;s value of &lt;code&gt;point&lt;/code&gt; to the value of &lt;code&gt;window-point&lt;/code&gt; (see &lt;a href=&quot;window-point#Window-Point&quot;&gt;Window Point&lt;/a&gt;) in &lt;var&gt;window&lt;/var&gt;. &lt;var&gt;window&lt;/var&gt; must be a live window. The return value is &lt;var&gt;window&lt;/var&gt;.</source>
          <target state="translated">此功能使 &lt;var&gt;window&lt;/var&gt; 成为所选窗口，并在其框架内选择窗口（请参见&lt;a href=&quot;basic-windows#Basic-Windows&quot;&gt;Basic Windows&lt;/a&gt;），然后选择该框架。这也使得 &lt;var&gt;window&lt;/var&gt; 的缓冲区（见&lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;缓冲区和窗口&lt;/a&gt;）当前并设置缓冲的价值 &lt;code&gt;point&lt;/code&gt; 的值设置为 &lt;code&gt;window-point&lt;/code&gt; （见&lt;a href=&quot;window-point#Window-Point&quot;&gt;窗口点&lt;/a&gt;）的 &lt;var&gt;window&lt;/var&gt; 。 &lt;var&gt;window&lt;/var&gt; 必须是活动窗口。返回值为 &lt;var&gt;window&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="a47086199a69064a8c75969e5a791c1e45214bee" translate="yes" xml:space="preserve">
          <source>This function makes &lt;var&gt;window&lt;/var&gt; the window selected within the frame &lt;var&gt;frame&lt;/var&gt;. &lt;var&gt;frame&lt;/var&gt; should be a live frame; if &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected frame. &lt;var&gt;window&lt;/var&gt; should be a live window; if &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window.</source>
          <target state="translated">此功能使 &lt;var&gt;window&lt;/var&gt; 的框架内选择的窗口 &lt;var&gt;frame&lt;/var&gt; 。 &lt;var&gt;frame&lt;/var&gt; 应为实时框架；如果为 &lt;code&gt;nil&lt;/code&gt; ，则默认为选定的帧。 &lt;var&gt;window&lt;/var&gt; 应该是活动窗口；如果为 &lt;code&gt;nil&lt;/code&gt; ，则默认为所选窗口。</target>
        </trans-unit>
        <trans-unit id="a223ffcc323beffacdf72bc735717e1df45d8252" translate="yes" xml:space="preserve">
          <source>This function makes a backup of the file visited by the current buffer, if appropriate. It is called by &lt;code&gt;save-buffer&lt;/code&gt; before saving the buffer the first time.</source>
          <target state="translated">如果合适，此功能将备份当前缓冲区访问的文件。在第一次 &lt;code&gt;save-buffer&lt;/code&gt; 之前，保存缓冲区会调用它。</target>
        </trans-unit>
        <trans-unit id="b4f7bbdf78902e155a5390b958d1755baebc606f" translate="yes" xml:space="preserve">
          <source>This function makes a copy in pure storage of &lt;var&gt;object&lt;/var&gt;, and returns it. It copies a string by simply making a new string with the same characters, but without text properties, in pure storage. It recursively copies the contents of vectors and cons cells. It does not make copies of other objects such as symbols, but just returns them unchanged. It signals an error if asked to copy markers.</source>
          <target state="translated">此函数在 &lt;var&gt;object&lt;/var&gt; 的纯存储中创建一个副本，并将其返回。它通过在纯存储中简单地制作一个具有相同字符但没有文本属性的新字符串来复制字符串。它递归复制vector和cons单元的内容。它不会复制其他对象（例如符号），而只是将它们返回原样。如果要求复制标记，则表示错误。</target>
        </trans-unit>
        <trans-unit id="392b5db678a717806b2bda451acc8d14d898a182" translate="yes" xml:space="preserve">
          <source>This function makes characters &lt;var&gt;l&lt;/var&gt; and &lt;var&gt;r&lt;/var&gt; a matching pair of case-invariant delimiters.</source>
          <target state="translated">此功能使字符 &lt;var&gt;l&lt;/var&gt; 和 &lt;var&gt;r&lt;/var&gt; 成为一对匹配的大小写不变定界符。</target>
        </trans-unit>
        <trans-unit id="e01f8ed37723ffb7de1e6308a28e177cf72720b9" translate="yes" xml:space="preserve">
          <source>This function makes frame &lt;var&gt;frame&lt;/var&gt; invisible. If you omit &lt;var&gt;frame&lt;/var&gt;, it makes the selected frame invisible. Usually, this makes all child frames of &lt;var&gt;frame&lt;/var&gt; (and their descendants) invisible too (see &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;).</source>
          <target state="translated">此功能使 &lt;var&gt;frame&lt;/var&gt; 不可见。如果省略 &lt;var&gt;frame&lt;/var&gt; ，则使选定的框架不可见。通常，这也使框架的所有子 &lt;var&gt;frame&lt;/var&gt; （及其子代）也不可见（请参阅&lt;a href=&quot;child-frames#Child-Frames&quot;&gt;子框架&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="d25400023cf05cc2f1b602d761f0a29748856373" translate="yes" xml:space="preserve">
          <source>This function makes frame &lt;var&gt;frame&lt;/var&gt; visible. If you omit &lt;var&gt;frame&lt;/var&gt;, it makes the selected frame visible. This does not raise the frame, but you can do that with &lt;code&gt;raise-frame&lt;/code&gt; if you wish (see &lt;a href=&quot;raising-and-lowering#Raising-and-Lowering&quot;&gt;Raising and Lowering&lt;/a&gt;).</source>
          <target state="translated">此功能使 &lt;var&gt;frame&lt;/var&gt; 可见。如果省略 &lt;var&gt;frame&lt;/var&gt; ，则使选定的帧可见。这不会抬高框架，但是您可以根据需要使用 &lt;code&gt;raise-frame&lt;/code&gt; （请参见&amp;ldquo;&lt;a href=&quot;raising-and-lowering#Raising-and-Lowering&quot;&gt;升高和降低&amp;rdquo;&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="e2a8f08df0204bf6e068fa5cd46b15356db49ed8" translate="yes" xml:space="preserve">
          <source>This function makes the byte compiler warn that the variable &lt;var&gt;obsolete-name&lt;/var&gt; is obsolete. If &lt;var&gt;current-name&lt;/var&gt; is a symbol, it is the variable&amp;rsquo;s new name; then the warning message says to use &lt;var&gt;current-name&lt;/var&gt; instead of &lt;var&gt;obsolete-name&lt;/var&gt;. If &lt;var&gt;current-name&lt;/var&gt; is a string, this is the message and there is no replacement variable. &lt;var&gt;when&lt;/var&gt; should be a string indicating when the variable was first made obsolete (usually a version number string).</source>
          <target state="translated">此函数使字节编译器警告变量 &lt;var&gt;obsolete-name&lt;/var&gt; 已过时。如果 &lt;var&gt;current-name&lt;/var&gt; 是符号，则它是变量的新名称；然后警告消息说使用 &lt;var&gt;current-name&lt;/var&gt; 而不是 &lt;var&gt;obsolete-name&lt;/var&gt; 。如果 &lt;var&gt;current-name&lt;/var&gt; 是字符串，则为消息，并且没有替换变量。 &lt;var&gt;when&lt;/var&gt; 是一个字符串，它指示变量何时首次过时（通常是版本号字符串）。</target>
        </trans-unit>
        <trans-unit id="2c3fa9b6be0128ab7df1bae9c4b587998fd22b62" translate="yes" xml:space="preserve">
          <source>This function makes the packages available to the current session. The user option &lt;code&gt;package-load-list&lt;/code&gt; specifies which packages to make available; by default, all installed packages are made available. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Package-Installation.html#Package-Installation&quot;&gt;Package Installation&lt;/a&gt; in</source>
          <target state="translated">此功能使程序包可用于当前会话。用户选项 &lt;code&gt;package-load-list&lt;/code&gt; 指定要使哪些软件包可用。默认情况下，所有已安装的软件包均可用。见&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Package-Installation.html#Package-Installation&quot;&gt;软件包安装&lt;/a&gt;在</target>
        </trans-unit>
        <trans-unit id="3e880c77358b7e1933de105e331a350fe94e7be5" translate="yes" xml:space="preserve">
          <source>This function marks &lt;var&gt;obsolete-name&lt;/var&gt; as obsolete. &lt;var&gt;obsolete-name&lt;/var&gt; should be a symbol naming a function or macro, or an alias for a function or macro.</source>
          <target state="translated">此功能将 &lt;var&gt;obsolete-name&lt;/var&gt; 标记为过时。 &lt;var&gt;obsolete-name&lt;/var&gt; 应该是命名函数或宏的符号，或者是函数或宏的别名。</target>
        </trans-unit>
        <trans-unit id="56c276bb4301973cb3f66f9fe498c7c1f6f42623" translate="yes" xml:space="preserve">
          <source>This function marks &lt;var&gt;variable&lt;/var&gt; (a symbol) automatically buffer-local, so that any subsequent attempt to set it will make it local to the current buffer at the time. Unlike &lt;code&gt;make-local-variable&lt;/code&gt;, with which it is often confused, this cannot be undone, and affects the behavior of the variable in all buffers.</source>
          <target state="translated">此函数将 &lt;var&gt;variable&lt;/var&gt; （符号）自动标记为本地缓冲区，以便随后进行的任何尝试将其设置为当前缓冲区都本地。与 &lt;code&gt;make-local-variable&lt;/code&gt; 不同，make-local-variable经常与之混淆，它无法撤消，并且会影响所有缓冲区中变量的行为。</target>
        </trans-unit>
        <trans-unit id="31ca95061d1c363390eed538ba5c903610a19bbe" translate="yes" xml:space="preserve">
          <source>This function marks &lt;var&gt;window&lt;/var&gt; as dedicated to its buffer if &lt;var&gt;flag&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, and non-dedicated otherwise.</source>
          <target state="translated">如果 &lt;var&gt;flag&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则此函数将 &lt;var&gt;window&lt;/var&gt; 标记为专用于其缓冲区，否则为非专用。</target>
        </trans-unit>
        <trans-unit id="54abb8146717319fb9ce85a7c1a9e4b14f8253d1" translate="yes" xml:space="preserve">
          <source>This function marks the current buffer as auto-saved. The buffer will not be auto-saved again until the buffer text is changed again. The function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此功能将当前缓冲区标记为自动保存。直到再次更改缓冲区文本后，缓冲区才会再次自动保存。该函数返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="56f1f70a243bce78428c7d9f0ec9a3c1683c4780" translate="yes" xml:space="preserve">
          <source>This function marks the current buffer as modified if &lt;var&gt;flag&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, or as unmodified if the flag is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">该功能标记，如果作为改性当前缓冲区 &lt;var&gt;flag&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，或者作为未改性如果该标志是 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0542163c98a55c5297538d9961d9b38a525ad5c5" translate="yes" xml:space="preserve">
          <source>This function may be called in arbitrary contexts, including from inside &lt;code&gt;read-event&lt;/code&gt;, so take the same care as you might when writing a process filter.</source>
          <target state="translated">可以在任意上下文中调用此函数，包括从 &lt;code&gt;read-event&lt;/code&gt; 内部调用，因此与编写进程过滤器时要格外小心。</target>
        </trans-unit>
        <trans-unit id="dc9fc08d70ec17fa9428fb57cc61401eaed67092" translate="yes" xml:space="preserve">
          <source>This function may instead signal a &lt;code&gt;file-locked&lt;/code&gt; error, in which case the change that the user was about to make does not take place.</source>
          <target state="translated">该功能可能会发信号通知 &lt;code&gt;file-locked&lt;/code&gt; 错误，在这种情况下，用户要进行的更改不会发生。</target>
        </trans-unit>
        <trans-unit id="cbb2fd444d462a95e469f97c1ef2803cb3e9d6ed" translate="yes" xml:space="preserve">
          <source>This function modifies &lt;code&gt;keyboard-translate-table&lt;/code&gt; to translate character code &lt;var&gt;from&lt;/var&gt; into character code &lt;var&gt;to&lt;/var&gt;. It creates the keyboard translate table if necessary.</source>
          <target state="translated">此功能修改了 &lt;code&gt;keyboard-translate-table&lt;/code&gt; ，将字符代码 &lt;var&gt;from&lt;/var&gt; 转换 &lt;var&gt;to&lt;/var&gt; 。如有必要，它将创建键盘翻译表。</target>
        </trans-unit>
        <trans-unit id="3f65398368a39c59b0ee145d6563e34fd1dc738a" translate="yes" xml:space="preserve">
          <source>This function modifies the category set of &lt;var&gt;char&lt;/var&gt; in category table &lt;var&gt;table&lt;/var&gt; (which defaults to the current buffer&amp;rsquo;s category table). &lt;var&gt;char&lt;/var&gt; can be a character, or a cons cell of the form &lt;code&gt;(&lt;var&gt;min&lt;/var&gt; . &lt;var&gt;max&lt;/var&gt;)&lt;/code&gt;; in the latter case, the function modifies the category sets of all characters in the range between &lt;var&gt;min&lt;/var&gt; and &lt;var&gt;max&lt;/var&gt;, inclusive.</source>
          <target state="translated">此函数修改类别集的 &lt;var&gt;char&lt;/var&gt; 在类别表 &lt;var&gt;table&lt;/var&gt; （其默认为当前缓冲区的类别表）。 &lt;var&gt;char&lt;/var&gt; 可以是字符，或形式的cons单元 &lt;code&gt;(&lt;var&gt;min&lt;/var&gt; . &lt;var&gt;max&lt;/var&gt;)&lt;/code&gt; ; 在后一种情况下，该函数会修改介于 &lt;var&gt;min&lt;/var&gt; 和 &lt;var&gt;max&lt;/var&gt; 之间（包括两端）的所有字符的类别集。</target>
        </trans-unit>
        <trans-unit id="185290f0f79c7c281cb93e1dfa7b2b579d3958f1" translate="yes" xml:space="preserve">
          <source>This function modifies the existing fontset &lt;var&gt;name&lt;/var&gt; to use the font matching with &lt;var&gt;font-spec&lt;/var&gt; for the specified &lt;var&gt;character&lt;/var&gt;.</source>
          <target state="translated">此函数修改现有的字体集 &lt;var&gt;name&lt;/var&gt; ，以对指定 &lt;var&gt;character&lt;/var&gt; 使用与 &lt;var&gt;font-spec&lt;/var&gt; 匹配的字体。</target>
        </trans-unit>
        <trans-unit id="81241728bbbc53a4cf1073b98dbd8ef76607a530" translate="yes" xml:space="preserve">
          <source>This function momentarily displays &lt;var&gt;string&lt;/var&gt; in the current buffer at &lt;var&gt;position&lt;/var&gt;. It has no effect on the undo list or on the buffer&amp;rsquo;s modification status.</source>
          <target state="translated">此函数会在当前缓冲区的 &lt;var&gt;position&lt;/var&gt; 处暂时显示 &lt;var&gt;string&lt;/var&gt; 。它对撤消列表或缓冲区的修改状态没有影响。</target>
        </trans-unit>
        <trans-unit id="dba78ab6ba542b9c635a74c736b8cf9f6745fb25" translate="yes" xml:space="preserve">
          <source>This function moves &lt;var&gt;marker&lt;/var&gt; to &lt;var&gt;position&lt;/var&gt; in &lt;var&gt;buffer&lt;/var&gt;. If &lt;var&gt;buffer&lt;/var&gt; is not provided, it defaults to the current buffer.</source>
          <target state="translated">这个函数将移动 &lt;var&gt;marker&lt;/var&gt; 向 &lt;var&gt;position&lt;/var&gt; 中 &lt;var&gt;buffer&lt;/var&gt; 。如果未提供 &lt;var&gt;buffer&lt;/var&gt; ，则默认为当前缓冲区。</target>
        </trans-unit>
        <trans-unit id="62f440d0f6fc3f93cc512fa17613acb65e479c47" translate="yes" xml:space="preserve">
          <source>This function moves &lt;var&gt;overlay&lt;/var&gt; to &lt;var&gt;buffer&lt;/var&gt;, and places its bounds at &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;. Both arguments &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; must specify buffer positions; they may be integers or markers.</source>
          <target state="translated">此函数将 &lt;var&gt;overlay&lt;/var&gt; 移动到 &lt;var&gt;buffer&lt;/var&gt; ，并将其边界放在 &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 。参数 &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 必须指定缓冲区位置。它们可以是整数或标记。</target>
        </trans-unit>
        <trans-unit id="0786429af3a6a95dd29a42832df5bde93bff87ef" translate="yes" xml:space="preserve">
          <source>This function moves &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s bottom edge by &lt;var&gt;delta&lt;/var&gt; lines. If optional argument &lt;var&gt;horizontal&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it instead moves the right edge by &lt;var&gt;delta&lt;/var&gt; columns. If &lt;var&gt;window&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window.</source>
          <target state="translated">此功能可将 &lt;var&gt;window&lt;/var&gt; 的底部边缘按 &lt;var&gt;delta&lt;/var&gt; 线移动。如果可选参数 &lt;var&gt;horizontal&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则改为将右边缘移动 &lt;var&gt;delta&lt;/var&gt; 列。如果 &lt;var&gt;window&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则默认为所选窗口。</target>
        </trans-unit>
        <trans-unit id="f2ed42b4e2cd42ffdb61502b806dd8a21b6bd179" translate="yes" xml:space="preserve">
          <source>This function moves back to the &lt;var&gt;arg&lt;/var&gt;th beginning of a defun. If &lt;var&gt;arg&lt;/var&gt; is negative, this actually moves forward, but it still moves to the beginning of a defun, not to the end of one. &lt;var&gt;arg&lt;/var&gt; defaults to 1.</source>
          <target state="translated">此功能移回到定义的第 &lt;var&gt;arg&lt;/var&gt; 个开头。如果 &lt;var&gt;arg&lt;/var&gt; 为负，则它实际上向前移动，但它仍移动到defun的开头，而不是到defun的结尾。 &lt;var&gt;arg&lt;/var&gt; 默认为1。</target>
        </trans-unit>
        <trans-unit id="f564b01b13b1cfb06b48d4ba51db86a70fd36b43" translate="yes" xml:space="preserve">
          <source>This function moves backward across &lt;var&gt;arg&lt;/var&gt; (default 1) balanced expressions.</source>
          <target state="translated">此函数在 &lt;var&gt;arg&lt;/var&gt; （默认值为1）平衡表达式之间向后移动。</target>
        </trans-unit>
        <trans-unit id="a92bf76d4cdd92afe7de0f5b0defb90dd440e5e6" translate="yes" xml:space="preserve">
          <source>This function moves backward across &lt;var&gt;arg&lt;/var&gt; (default 1) balanced groups of parentheses. (Other syntactic entities such as words or paired string quotes are ignored.)</source>
          <target state="translated">此函数在 &lt;var&gt;arg&lt;/var&gt; （默认为1）平衡的括号组中向后移动。（其他语法实体，如单词或成对的字符串引号将被忽略。）</target>
        </trans-unit>
        <trans-unit id="2ef8928ce6154d2d8032728fde31d63921fd9167" translate="yes" xml:space="preserve">
          <source>This function moves forward across &lt;var&gt;arg&lt;/var&gt; (default 1) balanced expressions. Balanced expressions include both those delimited by parentheses and other kinds, such as words and string constants. See &lt;a href=&quot;parsing-expressions#Parsing-Expressions&quot;&gt;Parsing Expressions&lt;/a&gt;. For example,</source>
          <target state="translated">此函数在 &lt;var&gt;arg&lt;/var&gt; （默认为1）平衡表达式之间前进。平衡表达式包括用括号和其他类型（例如单词和字符串常量）定界的表达式。请参阅&lt;a href=&quot;parsing-expressions#Parsing-Expressions&quot;&gt;解析表达式&lt;/a&gt;。例如，</target>
        </trans-unit>
        <trans-unit id="8c49a0d0469def5619471c08af7c8e944723c220" translate="yes" xml:space="preserve">
          <source>This function moves forward across &lt;var&gt;arg&lt;/var&gt; (default 1) balanced groups of parentheses. (Other syntactic entities such as words or paired string quotes are ignored.)</source>
          <target state="translated">此函数在 &lt;var&gt;arg&lt;/var&gt; （默认为1）个平衡的括号组中前进。（其他语法实体，如单词或成对的字符串引号将被忽略。）</target>
        </trans-unit>
        <trans-unit id="c7afe1a0092e1128e81fb307a7c69db4aaa74981" translate="yes" xml:space="preserve">
          <source>This function moves forward into &lt;var&gt;arg&lt;/var&gt; (default 1) levels of parentheses. A negative argument means move backward but still go deeper in parentheses (-&lt;var&gt;arg&lt;/var&gt; levels).</source>
          <target state="translated">此函数前进到 &lt;var&gt;arg&lt;/var&gt; 级别（默认为1）的括号中。否定的参数表示向后移动，但括号中的深度仍然更深（ &lt;var&gt;arg&lt;/var&gt; 级）。</target>
        </trans-unit>
        <trans-unit id="64a532780501e8d0b75b251c2da8a4d7d5b86b55" translate="yes" xml:space="preserve">
          <source>This function moves forward out of &lt;var&gt;arg&lt;/var&gt; (default 1) levels of parentheses. A negative argument means move backward but still to a less deep spot. If &lt;var&gt;escape-strings&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; (as it is interactively), move out of enclosing strings as well. If &lt;var&gt;no-syntax-crossing&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; (as it is interactively), prefer to break out of any enclosing string instead of moving to the start of a list broken across multiple strings. On error, location of point is unspecified.</source>
          <target state="translated">此函数移出括号的 &lt;var&gt;arg&lt;/var&gt; （默认值为1）级别。否定论点意味着后退，但仍然没有那么深。如果 &lt;var&gt;escape-strings&lt;/var&gt; 是非 &lt;code&gt;nil&lt;/code&gt; （因为它是交互），移动到封闭的字符串为好。如果 &lt;var&gt;no-syntax-crossing&lt;/var&gt; 是非 &lt;code&gt;nil&lt;/code&gt; （因为它是交互），喜欢打破任何封闭的字符串，而不是移动在多个串碎列表的开始了。错误时，未指定点的位置。</target>
        </trans-unit>
        <trans-unit id="b2bfa57be5d9dc4422269573eda69a85d36c8943" translate="yes" xml:space="preserve">
          <source>This function moves forward to the &lt;var&gt;arg&lt;/var&gt;th end of a defun. If &lt;var&gt;arg&lt;/var&gt; is negative, this actually moves backward, but it still moves to the end of a defun, not to the beginning of one. &lt;var&gt;arg&lt;/var&gt; defaults to 1.</source>
          <target state="translated">此功能将前进至定义的第 &lt;var&gt;arg&lt;/var&gt; 端。如果 &lt;var&gt;arg&lt;/var&gt; 为负，则它实际上向后移动，但仍会移动到defun的末尾，而不是到defun的开头。 &lt;var&gt;arg&lt;/var&gt; 默认为1。</target>
        </trans-unit>
        <trans-unit id="1b0d7ac832339c9ac44670c3bd075a94a90f8501" translate="yes" xml:space="preserve">
          <source>This function moves point &lt;var&gt;count&lt;/var&gt; characters forward, towards the end of the buffer (or backward, towards the beginning of the buffer, if &lt;var&gt;count&lt;/var&gt; is negative). If &lt;var&gt;count&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the default is 1.</source>
          <target state="translated">此功能将点 &lt;var&gt;count&lt;/var&gt; 字符向前移动到缓冲区的末尾（如果 &lt;var&gt;count&lt;/var&gt; 为负，则向后移动到缓冲区的开头）。如果 &lt;var&gt;count&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则默认值为1。</target>
        </trans-unit>
        <trans-unit id="a3d8ceb42f18987be169049b443605cc560e26ed" translate="yes" xml:space="preserve">
          <source>This function moves point backward across characters whose syntax classes are mentioned in &lt;var&gt;syntaxes&lt;/var&gt;. It stops when it encounters the beginning of the buffer, or position &lt;var&gt;limit&lt;/var&gt; (if specified), or a character it is not supposed to skip.</source>
          <target state="translated">这个功能移动点对面，其语法类中提到的人物落后的 &lt;var&gt;syntaxes&lt;/var&gt; 。当遇到缓冲区的开头，位置 &lt;var&gt;limit&lt;/var&gt; （如果指定）或不应该跳过的字符时，它将停止。</target>
        </trans-unit>
        <trans-unit id="163e53641a97982181e95a72128ebc7c18edc3ab" translate="yes" xml:space="preserve">
          <source>This function moves point backward over any number of characters with expression prefix syntax. This includes both characters in the expression prefix syntax class, and characters with the &amp;lsquo;</source>
          <target state="translated">此函数使用表达式前缀语法将点向后移到任意数量的字符上。这包括表达式前缀语法类中的字符和带有'</target>
        </trans-unit>
        <trans-unit id="c9b63f87fa1abaf9e9315fdea1bb29418b48f652" translate="yes" xml:space="preserve">
          <source>This function moves point backward, skipping characters that match &lt;var&gt;character-set&lt;/var&gt;, until &lt;var&gt;limit&lt;/var&gt;. It is just like &lt;code&gt;skip-chars-forward&lt;/code&gt; except for the direction of motion.</source>
          <target state="translated">此功能将点向后移动，跳过与 &lt;var&gt;character-set&lt;/var&gt; 匹配的字符，直到 &lt;var&gt;limit&lt;/var&gt; 为止。除了运动的方向外，它就像 &lt;code&gt;skip-chars-forward&lt;/code&gt; 一样。</target>
        </trans-unit>
        <trans-unit id="b39451fc7669ed3d4fa66ea2b4d602953955e0a4" translate="yes" xml:space="preserve">
          <source>This function moves point forward &lt;var&gt;count&lt;/var&gt; lines, to the beginning of the line following that. If &lt;var&gt;count&lt;/var&gt; is negative, it moves point -&lt;var&gt;count&lt;/var&gt; lines backward, to the beginning of a line preceding that. If &lt;var&gt;count&lt;/var&gt; is zero, it moves point to the beginning of the current line. If &lt;var&gt;count&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, that means 1.</source>
          <target state="translated">此功能将点向前 &lt;var&gt;count&lt;/var&gt; 线移动到其后的行的开头。如果 &lt;var&gt;count&lt;/var&gt; 为负，则将点- &lt;var&gt;count&lt;/var&gt; 线向后移动，到其前一行的开头。如果 &lt;var&gt;count&lt;/var&gt; 为零，它将移动点到当前行的开头。如果 &lt;var&gt;count&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则表示1。</target>
        </trans-unit>
        <trans-unit id="04dbae29704dce2212f32814a38bfd618273b4bd" translate="yes" xml:space="preserve">
          <source>This function moves point forward &lt;var&gt;count&lt;/var&gt; words (or backward if &lt;var&gt;count&lt;/var&gt; is negative). If &lt;var&gt;count&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to 1. In an interactive call, &lt;var&gt;count&lt;/var&gt; is specified by the numeric prefix argument.</source>
          <target state="translated">此功能将点向前移动 &lt;var&gt;count&lt;/var&gt; （如果 &lt;var&gt;count&lt;/var&gt; 为负，则向后移动）。如果 &lt;var&gt;count&lt;/var&gt; 省略或为 &lt;code&gt;nil&lt;/code&gt; ，则默认为1。在交互式调用中， &lt;var&gt;count&lt;/var&gt; 由数字前缀参数指定。</target>
        </trans-unit>
        <trans-unit id="52be5629b9edfd673d22bdfc5e8f09c8256435d8" translate="yes" xml:space="preserve">
          <source>This function moves point forward across &lt;var&gt;count&lt;/var&gt; complete comments (that is, including the starting delimiter and the terminating delimiter if any), plus any whitespace encountered on the way. It moves backward if &lt;var&gt;count&lt;/var&gt; is negative. If it encounters anything other than a comment or whitespace, it stops, leaving point at the place where it stopped. This includes (for instance) finding the end of a comment when moving forward and expecting the beginning of one. The function also stops immediately after moving over the specified number of complete comments. If &lt;var&gt;count&lt;/var&gt; comments are found as expected, with nothing except whitespace between them, it returns &lt;code&gt;t&lt;/code&gt;; otherwise it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此函数将点在 &lt;var&gt;count&lt;/var&gt; 完整注释（即包括起始定界符和终止定界符，如果有的话）以及途中遇到的任何空白之间向前移动。如果 &lt;var&gt;count&lt;/var&gt; 为负，则向后移动。如果遇到注释或空格以外的任何内容，它将停止，并在停止的地方留下点。例如，这包括在前进时查找注释的结尾并期望注释的开始。移动完指定数量的完整注释后，该功能也会立即停止。如果发现 &lt;var&gt;count&lt;/var&gt; 注释符合预期，并且它们之间没有空格，则返回 &lt;code&gt;t&lt;/code&gt; ；否则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2c5243160818f8727f05e101816d67307afdb6ef" translate="yes" xml:space="preserve">
          <source>This function moves point forward across characters having syntax classes mentioned in &lt;var&gt;syntaxes&lt;/var&gt; (a string of syntax class characters). It stops when it encounters the end of the buffer, or position &lt;var&gt;limit&lt;/var&gt; (if specified), or a character it is not supposed to skip.</source>
          <target state="translated">该功能将跨语法具有在 &lt;var&gt;syntaxes&lt;/var&gt; 提到的语法类的字符（一串语法类字符）向前移动。当遇到缓冲区末尾，位置 &lt;var&gt;limit&lt;/var&gt; （如果指定）或不应该跳过的字符时，它将停止。</target>
        </trans-unit>
        <trans-unit id="64ad6571345e45c38a762203c41be03b3686a1af" translate="yes" xml:space="preserve">
          <source>This function moves point in the current buffer forward, skipping over a given set of characters. It examines the character following point, then advances point if the character matches &lt;var&gt;character-set&lt;/var&gt;. This continues until it reaches a character that does not match. The function returns the number of characters moved over.</source>
          <target state="translated">此函数向前移动当前缓冲区中的点，跳过给定的字符集。它检查字符的跟随点，如果字符与 &lt;var&gt;character-set&lt;/var&gt; 匹配，则前进点。这一直持续到到达不匹配的字符为止。该函数返回移出的字符数。</target>
        </trans-unit>
        <trans-unit id="c86aaae5f6dc7ef7e2b93a19eb1cbecaef0780e0" translate="yes" xml:space="preserve">
          <source>This function moves point of the currently selected window to the buffer position that appears immediately to the right or to the left of point on the screen. If &lt;var&gt;direction&lt;/var&gt; is positive, point will move one screen position to the right, otherwise it will move one screen position to the left. Note that, depending on the surrounding bidirectional context, this could potentially move point many buffer positions away. If invoked at the end of a screen line, the function moves point to the rightmost or leftmost screen position of the next or previous screen line, as appropriate for the value of &lt;var&gt;direction&lt;/var&gt;.</source>
          <target state="translated">此功能将当前所选窗口的点移动到缓冲区位置，该位置立即出现在屏幕上该点的右侧或左侧。如果 &lt;var&gt;direction&lt;/var&gt; 为正，则点将向右移动一个屏幕位置，否则它将向左移动一个屏幕位置。请注意，根据周围的双向上下文，这可能会将点移动许多缓冲区位置。如果在屏幕行的末尾调用该函数，则该点将移动到下一个或上一个屏幕行的最右边或最左边的屏幕位置，以适应 &lt;var&gt;direction&lt;/var&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="06ba4502fc10cfb4fefa5d8c6c3309a107facddb" translate="yes" xml:space="preserve">
          <source>This function moves point to &lt;var&gt;column&lt;/var&gt; in the current line. The calculation of &lt;var&gt;column&lt;/var&gt; takes into account the widths of the displayed representations of the characters between the start of the line and point.</source>
          <target state="translated">此功能将点移动到当前行中的 &lt;var&gt;column&lt;/var&gt; 。 &lt;var&gt;column&lt;/var&gt; 的计算考虑了在行的起点和点之间显示的字符表示形式的宽度。</target>
        </trans-unit>
        <trans-unit id="eaf1c3bf9b9cc2b4fe15ad721f578a47271914e0" translate="yes" xml:space="preserve">
          <source>This function moves point to the beginning of the buffer (or the limits of the accessible portion, when narrowing is in effect), setting the mark at the previous position (except in Transient Mark mode, if the mark is already active, it does not set the mark.)</source>
          <target state="translated">该功能将点移动到缓冲区的起始点(或可访问部分的极限,当窄化有效时),将标记设置在前一个位置(除了在瞬时标记模式下,如果标记已经激活,则不设置标记)。</target>
        </trans-unit>
        <trans-unit id="87cadd55969715d0d0389d2020990aaf5d2566b8" translate="yes" xml:space="preserve">
          <source>This function moves point to the beginning of the current line. With an argument &lt;var&gt;count&lt;/var&gt; not &lt;code&gt;nil&lt;/code&gt; or 1, it moves forward &lt;var&gt;count&lt;/var&gt;-1 lines and then to the beginning of the line.</source>
          <target state="translated">此功能将点移动到当前行的开头。有参数 &lt;var&gt;count&lt;/var&gt; 不 &lt;code&gt;nil&lt;/code&gt; 或1，它向前移动时 &lt;var&gt;count&lt;/var&gt; -1行，然后到行的开头。</target>
        </trans-unit>
        <trans-unit id="f146b9836385a0735cc1a5c28193196956f8ce8b" translate="yes" xml:space="preserve">
          <source>This function moves point to the end of the buffer (or the limits of the accessible portion, when narrowing is in effect), setting the mark at the previous position (except in Transient Mark mode when the mark is already active). If &lt;var&gt;n&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then it puts point &lt;var&gt;n&lt;/var&gt; tenths of the way from the end of the accessible portion of the buffer.</source>
          <target state="translated">此功能将点移到缓冲区的末端（或在变窄生效时，即可访问部分的限制），将标记设置在先前位置（在标记已处于活动状态的瞬变标记模式下除外）。如果 &lt;var&gt;n&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则它将点 &lt;var&gt;n&lt;/var&gt; 放在缓冲区可访问部分的末尾。</target>
        </trans-unit>
        <trans-unit id="9554ff61c8a1847b0f6089790b6f72afa91646e6" translate="yes" xml:space="preserve">
          <source>This function moves point to the end of the current line. With an argument &lt;var&gt;count&lt;/var&gt; not &lt;code&gt;nil&lt;/code&gt; or 1, it moves forward &lt;var&gt;count&lt;/var&gt;-1 lines and then to the end of the line.</source>
          <target state="translated">此功能将点移动到当前行的末尾。有参数 &lt;var&gt;count&lt;/var&gt; 不 &lt;code&gt;nil&lt;/code&gt; 或1，它向前移动时 &lt;var&gt;count&lt;/var&gt; -1行，然后到行的结尾。</target>
        </trans-unit>
        <trans-unit id="215e58278e9f463d10d11f99468326d8ad878b42" translate="yes" xml:space="preserve">
          <source>This function moves point to the left margin of the current line. The column moved to is determined by calling the function &lt;code&gt;current-left-margin&lt;/code&gt;. If the argument &lt;var&gt;n&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;move-to-left-margin&lt;/code&gt; moves forward &lt;var&gt;n&lt;/var&gt;-1 lines first.</source>
          <target state="translated">此功能将点移动到当前行的左边距。通过调用函数 &lt;code&gt;current-left-margin&lt;/code&gt; 确定移至的列。如果参数 &lt;var&gt;n&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;code&gt;move-to-left-margin&lt;/code&gt; 移动将首先向前 &lt;var&gt;n&lt;/var&gt; -1行。</target>
        </trans-unit>
        <trans-unit id="e047d5adde5bed5d461527f13195ac9adcfff9dc" translate="yes" xml:space="preserve">
          <source>This function moves point to the start of the screen line &lt;var&gt;count&lt;/var&gt; screen lines down from the screen line containing point. If &lt;var&gt;count&lt;/var&gt; is negative, it moves up instead.</source>
          <target state="translated">此功能将点从屏幕线包含点向下移动到屏幕线 &lt;var&gt;count&lt;/var&gt; 屏幕线的起点。如果 &lt;var&gt;count&lt;/var&gt; 为负，则向上移动。</target>
        </trans-unit>
        <trans-unit id="4d72e2b2b29da9a9913b34bbcc80485e582563ba" translate="yes" xml:space="preserve">
          <source>This function moves point with respect to the text currently displayed in the selected window. It moves point to the beginning of the screen line &lt;var&gt;count&lt;/var&gt; screen lines from the top of the window; zero means the topmost line. If &lt;var&gt;count&lt;/var&gt; is negative, that specifies a position -&lt;var&gt;count&lt;/var&gt; lines from the bottom (or the last line of the buffer, if the buffer ends above the specified screen position); thus, &lt;var&gt;count&lt;/var&gt; of -1 specifies the last fully visible screen line of the window.</source>
          <target state="translated">此功能相对于所选窗口中当前显示的文本移动点。它从窗口顶部将点移到屏幕线 &lt;var&gt;count&lt;/var&gt; 屏幕线的开头；零表示最上一行。如果 &lt;var&gt;count&lt;/var&gt; 为负，则指定位置-从底部开始 &lt;var&gt;count&lt;/var&gt; （如果缓冲区结束于指定的屏幕位置上方，则从缓冲区的最后一行开始计数）；因此， &lt;var&gt;count&lt;/var&gt; -1指定窗口的最后一个完全可见的屏幕行。</target>
        </trans-unit>
        <trans-unit id="00500b9e1bf839d4c8d033e6bcb66a3a49e5236f" translate="yes" xml:space="preserve">
          <source>This function moves the mouse cursor to the position (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;). The coordinates &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; are interpreted in pixels relative to a position (0, 0) of the selected frame&amp;rsquo;s display.</source>
          <target state="translated">此功能将鼠标光标移动到位置（ &lt;var&gt;x&lt;/var&gt; ， &lt;var&gt;y&lt;/var&gt; ）。坐标 &lt;var&gt;x&lt;/var&gt; 和 &lt;var&gt;y&lt;/var&gt; 以像素为单位相对于所选帧的显示位置（0，0）进行解释。</target>
        </trans-unit>
        <trans-unit id="461f7ca5809112ee00ed61e3e96d0dccfa66beaf" translate="yes" xml:space="preserve">
          <source>This function multiplies (in effect) &lt;var&gt;ratio&lt;/var&gt; by &lt;var&gt;total&lt;/var&gt;, rounding the result to an integer. The argument &lt;var&gt;ratio&lt;/var&gt; is not a number, but rather a pair &lt;code&gt;(&lt;var&gt;num&lt;/var&gt; . &lt;var&gt;denom&lt;/var&gt;)&lt;/code&gt;&amp;mdash;typically a value returned by &lt;code&gt;scroll-bar-event-ratio&lt;/code&gt;.</source>
          <target state="translated">此函数相乘（实际上） &lt;var&gt;ratio&lt;/var&gt; 由 &lt;var&gt;total&lt;/var&gt; ，结果舍入成整数。该参数 &lt;var&gt;ratio&lt;/var&gt; 不是数字，而是一对 &lt;code&gt;(&lt;var&gt;num&lt;/var&gt; . &lt;var&gt;denom&lt;/var&gt;)&lt;/code&gt; -通常由返回的值 &lt;code&gt;scroll-bar-event-ratio&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a06826909c8a40a97043561addbda420a33a6d2f" translate="yes" xml:space="preserve">
          <source>This function multiplies its arguments together, and returns the product. When given no arguments, &lt;code&gt;*&lt;/code&gt; returns 1.</source>
          <target state="translated">此函数将其参数相乘，然后返回乘积。如果不提供任何参数，则 &lt;code&gt;*&lt;/code&gt; 返回1。</target>
        </trans-unit>
        <trans-unit id="866d465270dd4ee2e24fd18d48bce084cb9bc29d" translate="yes" xml:space="preserve">
          <source>This function obeys the usual rules that determine when a window may be split (see &lt;a href=&quot;splitting-windows#Splitting-Windows&quot;&gt;Splitting Windows&lt;/a&gt;). It first tries to split by placing the new window below, subject to the restriction imposed by &lt;code&gt;split-height-threshold&lt;/code&gt; (see below), in addition to any other restrictions. If that fails, it tries to split by placing the new window to the right, subject to &lt;code&gt;split-width-threshold&lt;/code&gt; (see below). If that also fails, and the window is the only window on its frame, this function again tries to split and place the new window below, disregarding &lt;code&gt;split-height-threshold&lt;/code&gt;. If this fails as well, this function gives up and returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此函数遵循确定何时可以分割窗口的常规规则（请参阅&lt;a href=&quot;splitting-windows#Splitting-Windows&quot;&gt;分割窗口&lt;/a&gt;）。它首先尝试通过将新窗口放在下面进行 &lt;code&gt;split-height-threshold&lt;/code&gt; ，除其他限制外，还要遵守split-height-threshold施加的限制（请参阅下文）。如果失败，它将尝试通过将新窗口放置在右侧（取决于 &lt;code&gt;split-width-threshold&lt;/code&gt; ）来拆分（请参见下文）。如果该操作也失败了，并且该窗口是其框架中的唯一窗口，则此函数将再次尝试拆分新窗口并将其放置在下面，而不管 &lt;code&gt;split-height-threshold&lt;/code&gt; 。如果同样失败，则此函数放弃并返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="95912866e6978ee6644e0c47718ebc735e3024a0" translate="yes" xml:space="preserve">
          <source>This function opens a &lt;em&gt;dribble file&lt;/em&gt; named &lt;var&gt;filename&lt;/var&gt;. When a dribble file is open, each input event from the keyboard or mouse (but not those from keyboard macros) is written in that file. A non-character event is expressed using its printed representation surrounded by &amp;lsquo;</source>
          <target state="translated">此函数将打开一个名为 &lt;var&gt;filename&lt;/var&gt; 的&lt;em&gt;运球文件&lt;/em&gt;。打开运球文件时，来自键盘或鼠标的每个输入事件（但不是来自键盘宏的输入事件）都写入该文件中。非字符事件使用其打印的表示形式并用'括起来</target>
        </trans-unit>
        <trans-unit id="a94f5a48d081181ff685a71571f2170bd6960afd" translate="yes" xml:space="preserve">
          <source>This function opens a TCP connection, with optional encryption, and returns a process object that represents the connection.</source>
          <target state="translated">该函数打开一个TCP连接,并可选择加密,返回一个代表连接的进程对象。</target>
        </trans-unit>
        <trans-unit id="67e4456d9dd93d44e94f084321e874159e98a6dd" translate="yes" xml:space="preserve">
          <source>This function opens a connection to the X display &lt;var&gt;display&lt;/var&gt;, without creating a frame on that display. Normally, Emacs Lisp programs need not call this function, as &lt;code&gt;make-frame-on-display&lt;/code&gt; calls it automatically. The only reason for calling it is to check whether communication can be established with a given X display.</source>
          <target state="translated">此功能将打开与X显示器 &lt;var&gt;display&lt;/var&gt; 的连接，而无需在该显示器上创建框架。通常，Emacs Lisp程序不需要调用此函数，因为 &lt;code&gt;make-frame-on-display&lt;/code&gt; 会自动调用它。调用它的唯一原因是检查是否可以通过给定的X显示器建立通信。</target>
        </trans-unit>
        <trans-unit id="d0a6d36aaa461b09f46b5593dfaae5205de77626" translate="yes" xml:space="preserve">
          <source>This function operates on each frame&amp;rsquo;s &lt;code&gt;buffer-list&lt;/code&gt; parameter as well as the fundamental buffer list; therefore, the buffer that you bury will come last in the value of &lt;code&gt;(buffer-list &lt;var&gt;frame&lt;/var&gt;)&lt;/code&gt; and in the value of &lt;code&gt;(buffer-list)&lt;/code&gt;. In addition, it also puts the buffer at the end of the list of buffers of the selected window (see &lt;a href=&quot;window-history#Window-History&quot;&gt;Window History&lt;/a&gt;) provided it is shown in that window.</source>
          <target state="translated">该函数对每个帧的 &lt;code&gt;buffer-list&lt;/code&gt; 参数以及基本缓冲区列表进行操作。因此，您埋入的缓冲区将在 &lt;code&gt;(buffer-list &lt;var&gt;frame&lt;/var&gt;)&lt;/code&gt; 的值和 &lt;code&gt;(buffer-list)&lt;/code&gt; 的值中排在最后。另外，如果在该窗口中显示该缓冲区，它还将把该缓冲区放在所选窗口的缓冲区列表的末尾（请参见&lt;a href=&quot;window-history#Window-History&quot;&gt;Window History&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="fc862d1b7ad75559941ff7df35f60387a25142e6" translate="yes" xml:space="preserve">
          <source>This function outputs &lt;var&gt;character&lt;/var&gt; to &lt;var&gt;stream&lt;/var&gt;. It returns &lt;var&gt;character&lt;/var&gt;.</source>
          <target state="translated">此函数将 &lt;var&gt;character&lt;/var&gt; 输出到 &lt;var&gt;stream&lt;/var&gt; 。它返回 &lt;var&gt;character&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="5401ec32447d9de2e885ed772d62e0b62eeec921" translate="yes" xml:space="preserve">
          <source>This function outputs &lt;var&gt;object&lt;/var&gt; to &lt;var&gt;stream&lt;/var&gt;, just like &lt;code&gt;prin1&lt;/code&gt;, but does it in a prettier way. That is, it&amp;rsquo;ll indent and fill the object to make it more readable for humans.</source>
          <target state="translated">该函数将 &lt;var&gt;object&lt;/var&gt; 输出到 &lt;var&gt;stream&lt;/var&gt; ，就像 &lt;code&gt;prin1&lt;/code&gt; 一样，但是以更漂亮的方式实现。也就是说，它将缩进并填充对象，以使其对人类更具可读性。</target>
        </trans-unit>
        <trans-unit id="23ad01f44ed000694d0fd8cdef665e1b9035e40c" translate="yes" xml:space="preserve">
          <source>This function outputs a newline to &lt;var&gt;stream&lt;/var&gt;. The name stands for &amp;ldquo;terminate print&amp;rdquo;. If &lt;var&gt;ensure&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; no newline is printed if &lt;var&gt;stream&lt;/var&gt; is already at the beginning of a line. Note in this case &lt;var&gt;stream&lt;/var&gt; can not be a function and an error is signaled if it is. This function returns &lt;code&gt;t&lt;/code&gt; if a newline is printed.</source>
          <target state="translated">此函数输出一个换行符以 &lt;var&gt;stream&lt;/var&gt; 。该名称代表&amp;ldquo;终止打印&amp;rdquo;。如果 &lt;var&gt;ensure&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，如果没有换行打印 &lt;var&gt;stream&lt;/var&gt; 是已经在一行的开头。请注意，在这种情况下， &lt;var&gt;stream&lt;/var&gt; 不能用作函数，如果是，则会发出错误信号。如果打印换行符，此函数返回 &lt;code&gt;t&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9680d7bba137e28e05760a4f089d90b748b420bf" translate="yes" xml:space="preserve">
          <source>This function outputs the printed representation of &lt;var&gt;object&lt;/var&gt; to &lt;var&gt;stream&lt;/var&gt;. It does not print newlines to separate output as &lt;code&gt;print&lt;/code&gt; does, but it does use quoting characters just like &lt;code&gt;print&lt;/code&gt;. It returns &lt;var&gt;object&lt;/var&gt;.</source>
          <target state="translated">此函数将 &lt;var&gt;object&lt;/var&gt; 的打印表示输出到 &lt;var&gt;stream&lt;/var&gt; 。它不会像 &lt;code&gt;print&lt;/code&gt; 那样打印换行符来分隔输出，但是它确实像 &lt;code&gt;print&lt;/code&gt; 一样使用引号字符。它返回 &lt;var&gt;object&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="2a133f4e438ec04cdcc90756ac22740960751fa3" translate="yes" xml:space="preserve">
          <source>This function outputs the printed representation of &lt;var&gt;object&lt;/var&gt; to &lt;var&gt;stream&lt;/var&gt;. It returns &lt;var&gt;object&lt;/var&gt;.</source>
          <target state="translated">此函数将 &lt;var&gt;object&lt;/var&gt; 的打印表示输出到 &lt;var&gt;stream&lt;/var&gt; 。它返回 &lt;var&gt;object&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="10d9cddbc9e1a16e0dceee452079e5076d9b9b3a" translate="yes" xml:space="preserve">
          <source>This function parses a sexp in the current buffer starting at &lt;var&gt;start&lt;/var&gt;, not scanning past &lt;var&gt;limit&lt;/var&gt;. It stops at position &lt;var&gt;limit&lt;/var&gt; or when certain criteria described below are met, and sets point to the location where parsing stops. It returns a parser state describing the status of the parse at the point where it stops.</source>
          <target state="translated">此函数从 &lt;var&gt;start&lt;/var&gt; 解析当前缓冲区中的sexp ，而不扫描超出 &lt;var&gt;limit&lt;/var&gt; 。它在位置 &lt;var&gt;limit&lt;/var&gt; 处停止或在满足以下某些条件时停止，并设置为指向解析停止的位置。它返回一个解析器状态，该状态描述了解析在停止点的状态。</target>
        </trans-unit>
        <trans-unit id="5cb8e49f6a961a8c232f5ceb0451195a255216e5" translate="yes" xml:space="preserve">
          <source>This function parses the JSON value in &lt;var&gt;string&lt;/var&gt;, which must be a Lisp string. If &lt;var&gt;string&lt;/var&gt; doesn&amp;rsquo;t contain a valid JSON object, this function signals the &lt;code&gt;json-parse-error&lt;/code&gt; error.</source>
          <target state="translated">此函数解析 &lt;var&gt;string&lt;/var&gt; 中的JSON值，该值必须是Lisp字符串。如果 &lt;var&gt;string&lt;/var&gt; 不包含有效的JSON对象，则此函数会发出 &lt;code&gt;json-parse-error&lt;/code&gt; 错误。</target>
        </trans-unit>
        <trans-unit id="00ec09c2bbba882317cb73118cba10bef50fe149" translate="yes" xml:space="preserve">
          <source>This function parses the command line that Emacs was called with, processes it, and (amongst other things) loads the user&amp;rsquo;s init file and displays the startup messages.</source>
          <target state="translated">此函数解析调用Emacs的命令行，对其进行处理，以及（除其他事项外）加载用户的init文件并显示启动消息。</target>
        </trans-unit>
        <trans-unit id="02e1e5057597d44b03081ebf14a8004091b75b43" translate="yes" xml:space="preserve">
          <source>This function parses the text between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; as HTML, and returns a list representing the HTML &lt;em&gt;parse tree&lt;/em&gt;. It attempts to handle real-world HTML by robustly coping with syntax mistakes.</source>
          <target state="translated">此函数将 &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 之间的文本解析为HTML，并返回一个表示HTML&lt;em&gt;解析树&lt;/em&gt;的列表。它试图通过可靠地应对语法错误来处理现实世界中的HTML。</target>
        </trans-unit>
        <trans-unit id="0cfa728d1e7f009715d9406da1b0b48e24606d4d" translate="yes" xml:space="preserve">
          <source>This function parses the time-string &lt;var&gt;string&lt;/var&gt; and returns the corresponding Lisp timestamp. The argument &lt;var&gt;string&lt;/var&gt; should represent a date-time, and should be in one of the forms recognized by &lt;code&gt;parse-time-string&lt;/code&gt; (see below). This function assumes Universal Time if &lt;var&gt;string&lt;/var&gt; lacks explicit time zone information. The operating system limits the range of time and zone values.</source>
          <target state="translated">此函数解析时间 &lt;var&gt;string&lt;/var&gt; 并返回相应的Lisp时间戳。参数 &lt;var&gt;string&lt;/var&gt; 应代表日期时间，并应采用 &lt;code&gt;parse-time-string&lt;/code&gt; 识别的格式之一（请参见下文）。如果 &lt;var&gt;string&lt;/var&gt; 缺少明确的时区信息，则此函数假定为&amp;ldquo;通用时间&amp;rdquo; 。操作系统限制时间和区域值的范围。</target>
        </trans-unit>
        <trans-unit id="dd324d4892a8cdbe2ecbe6d5524beb7db5ce3e0b" translate="yes" xml:space="preserve">
          <source>This function parses the time-string &lt;var&gt;string&lt;/var&gt; into a list of the following form:</source>
          <target state="translated">此函数将时间字符串 &lt;var&gt;string&lt;/var&gt; 解析为以下形式的列表：</target>
        </trans-unit>
        <trans-unit id="1f6d8bfba4ef1e2ec105269540222adb4ca31ee2" translate="yes" xml:space="preserve">
          <source>This function parses, and binds or evaluates as appropriate, any local variables specified by the contents of the current buffer. The variable &lt;code&gt;enable-local-variables&lt;/code&gt; has its effect here. However, this function does not look for the &amp;lsquo;</source>
          <target state="translated">该函数将解析，绑定或评估由当前缓冲区的内容指定的任何局部变量。变量 &lt;code&gt;enable-local-variables&lt;/code&gt; 在这里起作用。但是，此功能不会查找&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="84d6da43a7bd68f3b9a90c2d98ec6b495b2c093f" translate="yes" xml:space="preserve">
          <source>This function performs a replacement operation on a buffer or string.</source>
          <target state="translated">这个函数对一个缓冲区或字符串进行替换操作。</target>
        </trans-unit>
        <trans-unit id="1cd9ca554a31b04b3eb83e98866dd814566a9273" translate="yes" xml:space="preserve">
          <source>This function performs redisplay (provided there is no pending input from the user), then waits &lt;var&gt;seconds&lt;/var&gt; seconds, or until input is available. The usual purpose of &lt;code&gt;sit-for&lt;/code&gt; is to give the user time to read text that you display. The value is &lt;code&gt;t&lt;/code&gt; if &lt;code&gt;sit-for&lt;/code&gt; waited the full time with no input arriving (see &lt;a href=&quot;event-input-misc#Event-Input-Misc&quot;&gt;Event Input Misc&lt;/a&gt;). Otherwise, the value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此功能执行重新显示（假设没有来自用户的未决输入），然后等待 &lt;var&gt;seconds&lt;/var&gt; 秒钟或直到输入可用。 &lt;code&gt;sit-for&lt;/code&gt; 的通常目的是使用户有时间阅读所显示的文本。如果 &lt;code&gt;sit-for&lt;/code&gt; 等待了整整时间而没有输入到达，则该值为 &lt;code&gt;t&lt;/code&gt; （请参阅&lt;a href=&quot;event-input-misc#Event-Input-Misc&quot;&gt;事件输入杂项&lt;/a&gt;）。否则，值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="62366abec0e3811678ce3bc441b63d7e1ffc60c9" translate="yes" xml:space="preserve">
          <source>This function performs the loading specified by &lt;var&gt;autoload&lt;/var&gt;, which should be an autoload object. The optional argument &lt;var&gt;name&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, should be a symbol whose function value is &lt;var&gt;autoload&lt;/var&gt;; in that case, the return value of this function is the symbol&amp;rsquo;s new function value. If the value of the optional argument &lt;var&gt;macro-only&lt;/var&gt; is &lt;code&gt;macro&lt;/code&gt;, this function avoids loading a function, only a macro.</source>
          <target state="translated">此函数执行 &lt;var&gt;autoload&lt;/var&gt; 指定的加载，应该是autoload对象。可选参数 &lt;var&gt;name&lt;/var&gt; （如果为非 &lt;code&gt;nil&lt;/code&gt; ）应为符号，其功能值为 &lt;var&gt;autoload&lt;/var&gt; ；在这种情况下，此函数的返回值是符号的新函数值。如果可选参数 &lt;var&gt;macro-only&lt;/var&gt; 的值是 &lt;code&gt;macro&lt;/code&gt; ，则此函数避免加载仅宏的函数。</target>
        </trans-unit>
        <trans-unit id="c43d63fe7d0798766de84aff032ec767af39c561" translate="yes" xml:space="preserve">
          <source>This function places a boundary element in the undo list. The undo command stops at such a boundary, and successive undo commands undo to earlier and earlier boundaries. This function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此函数将边界元素放置在撤消列表中。撤消命令在这样的边界处停止，并且连续的撤消命令撤消到越来越早的边界。该函数返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="95fbb6ea33088107e8e6fe9acc0c4143e090a8b7" translate="yes" xml:space="preserve">
          <source>This function plays a specified sound. The argument, &lt;var&gt;sound&lt;/var&gt;, has the form &lt;code&gt;(sound &lt;var&gt;properties&lt;/var&gt;...)&lt;/code&gt;, where the &lt;var&gt;properties&lt;/var&gt; consist of alternating keywords (particular symbols recognized specially) and values corresponding to them.</source>
          <target state="translated">此功能播放指定的声音。参数 &lt;var&gt;sound&lt;/var&gt; 具有形式 &lt;code&gt;(sound &lt;var&gt;properties&lt;/var&gt;...)&lt;/code&gt; ，其中 &lt;var&gt;properties&lt;/var&gt; 由交替的关键字（特殊识别的特殊符号）和与之对应的值组成。</target>
        </trans-unit>
        <trans-unit id="719c7a9e8fa38fd95292d9bf8e47ad1d5d097f61" translate="yes" xml:space="preserve">
          <source>This function pops off the top element of &lt;code&gt;mark-ring&lt;/code&gt; and makes that mark become the buffer&amp;rsquo;s actual mark. This does not move point in the buffer, and it does nothing if &lt;code&gt;mark-ring&lt;/code&gt; is empty. It deactivates the mark.</source>
          <target state="translated">此功能弹出 &lt;code&gt;mark-ring&lt;/code&gt; 的顶部元素，并使该标记成为缓冲区的实际标记。这不会在缓冲区中移动点，并且如果 &lt;code&gt;mark-ring&lt;/code&gt; 为空，则不会执行任何操作。禁用标记。</target>
        </trans-unit>
        <trans-unit id="e1279c4027241bb081cb01116d7116880ca493a4" translate="yes" xml:space="preserve">
          <source>This function populates the current buffer with entries. It should be called by the listing command. It erases the buffer, sorts the entries specified by &lt;code&gt;tabulated-list-entries&lt;/code&gt; according to &lt;code&gt;tabulated-list-sort-key&lt;/code&gt;, then calls the function specified by &lt;code&gt;tabulated-list-printer&lt;/code&gt; to insert each entry.</source>
          <target state="translated">此函数使用条目填充当前缓冲区。它应该由listing命令调用。它擦除缓冲区，根据 &lt;code&gt;tabulated-list-sort-key&lt;/code&gt; 对由 &lt;code&gt;tabulated-list-entries&lt;/code&gt; entries指定的条目进行排序，然后调用由 &lt;code&gt;tabulated-list-printer&lt;/code&gt; 指定的函数以插入每个条目。</target>
        </trans-unit>
        <trans-unit id="594cfb3a6cf7f18187c5d2c875a38a8f9857651b" translate="yes" xml:space="preserve">
          <source>This function positions point in &lt;var&gt;window&lt;/var&gt; at position &lt;var&gt;position&lt;/var&gt; in &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s buffer. It returns &lt;var&gt;position&lt;/var&gt;.</source>
          <target state="translated">此函数将 &lt;var&gt;window&lt;/var&gt; 中的点 &lt;var&gt;position&lt;/var&gt; 在 &lt;var&gt;window&lt;/var&gt; 缓冲区中的位置。它返回 &lt;var&gt;position&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="4a60743241d301f6a13e8bdb01b22535313af1bf" translate="yes" xml:space="preserve">
          <source>This function prepares &lt;var&gt;symbol&lt;/var&gt; for use as a prefix key&amp;rsquo;s binding: it creates a sparse keymap and stores it as &lt;var&gt;symbol&lt;/var&gt;&amp;rsquo;s function definition. Subsequently binding a key sequence to &lt;var&gt;symbol&lt;/var&gt; will make that key sequence into a prefix key. The return value is &lt;code&gt;symbol&lt;/code&gt;.</source>
          <target state="translated">此函数准备将 &lt;var&gt;symbol&lt;/var&gt; 用作前缀键的绑定：它会创建一个稀疏的键映射，并将其存储为 &lt;var&gt;symbol&lt;/var&gt; 的函数定义。随后将键序列绑定到 &lt;var&gt;symbol&lt;/var&gt; 将使该键序列成为前缀键。返回值为 &lt;code&gt;symbol&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bfc00d0aedfe9d2ce34bd11f8e9cee9ae5588e34" translate="yes" xml:space="preserve">
          <source>This function prints a trace of Lisp function calls currently active. The trace is identical to the one that &lt;code&gt;debug&lt;/code&gt; would show in the</source>
          <target state="translated">此函数打印当前活动的Lisp函数调用的痕迹。跟踪与 &lt;code&gt;debug&lt;/code&gt; 将在跟踪中显示的跟踪相同。</target>
        </trans-unit>
        <trans-unit id="cb28ff49d2e7b3aba0ea56594adc0932299a2408" translate="yes" xml:space="preserve">
          <source>This function processes files synchronously in a separate process. It is similar to &lt;code&gt;call-process&lt;/code&gt;, but may invoke a file name handler based on the value of the variable &lt;code&gt;default-directory&lt;/code&gt;, which specifies the current working directory of the subprocess.</source>
          <target state="translated">此功能在单独的过程中同步处理文件。它类似于 &lt;code&gt;call-process&lt;/code&gt; ，但是可以基于变量 &lt;code&gt;default-directory&lt;/code&gt; 的值来调用文件名处理程序，该变量指定子进程的当前工作目录。</target>
        </trans-unit>
        <trans-unit id="dfa3fe2b8482b2b55df9895099e429b31d0eb76a" translate="yes" xml:space="preserve">
          <source>This function processes pending input events. It returns &lt;code&gt;emacs_process_input_quit&lt;/code&gt; if the user wants to quit or an error occurred while processing signals. In that case, we recommend that your module function aborts any on-going processing and returns as soon as possible. If the module code may continue running, &lt;code&gt;process_input&lt;/code&gt; returns &lt;code&gt;emacs_process_input_continue&lt;/code&gt;. The return value is &lt;code&gt;emacs_process_input_continue&lt;/code&gt; if and only if there is no pending nonlocal exit in &lt;code&gt;env&lt;/code&gt;. If the module continues after calling &lt;code&gt;process_input&lt;/code&gt;, global state such as variable values and buffer content may have been modified in arbitrary ways.</source>
          <target state="translated">此函数处理未决的输入事件。如果用户要退出或在处理信号时发生错误，它将返回 &lt;code&gt;emacs_process_input_quit&lt;/code&gt; 。在这种情况下，我们建议您的模块函数中止所有正在进行的处理并尽快返回。如果模块代码可以继续运行，则 &lt;code&gt;process_input&lt;/code&gt; 返回 &lt;code&gt;emacs_process_input_continue&lt;/code&gt; 。当且仅当 &lt;code&gt;env&lt;/code&gt; 中没有未决的非本地出口时，返回值为 &lt;code&gt;emacs_process_input_continue&lt;/code&gt; 。如果模块在调用 &lt;code&gt;process_input&lt;/code&gt; 之后继续运行，则可能已以任意方式修改了全局状态（例如变量值和缓冲区内容）。</target>
        </trans-unit>
        <trans-unit id="d616ffa32a4fb948d12ad95721952cbbd7b0578f" translate="yes" xml:space="preserve">
          <source>This function prompts the user with text in &lt;var&gt;question&lt;/var&gt;, which should end in the &amp;lsquo;</source>
          <target state="translated">此功能提示用户输入有 &lt;var&gt;question&lt;/var&gt; 文本，该文本应以&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="127ce04cbf1088a475ef67f56a52f16e918bba16" translate="yes" xml:space="preserve">
          <source>This function provides a convenient way to find an image satisfying one of a list of image specifications &lt;var&gt;specs&lt;/var&gt;.</source>
          <target state="translated">该功能提供了一种便捷的方式找到图像规范列表的图像满足一个 &lt;var&gt;specs&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="5b8b2aed4dbdea9ef3577f34e399131e2a99bd7a" translate="yes" xml:space="preserve">
          <source>This function provides an easy way to make a private coding system that maps each byte to a specific character. You can specify the returned table and the reverse translation table using the properties &lt;code&gt;:decode-translation-table&lt;/code&gt; and &lt;code&gt;:encode-translation-table&lt;/code&gt; respectively in the &lt;var&gt;props&lt;/var&gt; argument to &lt;code&gt;define-coding-system&lt;/code&gt;.</source>
          <target state="translated">此功能提供了一种简单的方法来制作将每个字节映射到特定字符的专用编码系统。您可以分别在 &lt;code&gt;define-coding-system&lt;/code&gt; 的 &lt;var&gt;props&lt;/var&gt; 参数中使用属性 &lt;code&gt;:decode-translation-table&lt;/code&gt; 和 &lt;code&gt;:encode-translation-table&lt;/code&gt; 来指定返回的表和反向翻译表。</target>
        </trans-unit>
        <trans-unit id="a84dfb0cbd5d4086dfea617d423a2920f8b1b98f" translate="yes" xml:space="preserve">
          <source>This function provides information about the argument list of the specified &lt;var&gt;function&lt;/var&gt;. The returned value is a cons cell of the form &lt;code&gt;(&lt;var&gt;min&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;max&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;min&lt;/var&gt; is the minimum number of arguments, and &lt;var&gt;max&lt;/var&gt; is either the maximum number of arguments, or the symbol &lt;code&gt;many&lt;/code&gt; for functions with &lt;code&gt;&amp;amp;rest&lt;/code&gt; arguments, or the symbol &lt;code&gt;unevalled&lt;/code&gt; if &lt;var&gt;function&lt;/var&gt; is a special form.</source>
          <target state="translated">此函数提供有关指定 &lt;var&gt;function&lt;/var&gt; 的参数列表的信息。返回的值是形式的cons单元 &lt;code&gt;(&lt;var&gt;min&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;max&lt;/var&gt;)&lt;/code&gt; ，其中 &lt;var&gt;min&lt;/var&gt; 是参数的最小数量，并且 &lt;var&gt;max&lt;/var&gt; 是任一参数的最大数目，或码元 &lt;code&gt;many&lt;/code&gt; 与函数 &lt;code&gt;&amp;amp;rest&lt;/code&gt; 参数，或符号 &lt;code&gt;unevalled&lt;/code&gt; 如果 &lt;var&gt;function&lt;/var&gt; 是一种特殊形式。</target>
        </trans-unit>
        <trans-unit id="e2a0bb9d4605d9598d4bbbe0cb5ba0df2512176e" translate="yes" xml:space="preserve">
          <source>This function pushes the text &lt;var&gt;string&lt;/var&gt; onto the kill ring and makes the yanking pointer point to it. It discards the oldest entry if appropriate. It also invokes the values of &lt;code&gt;interprogram-paste-function&lt;/code&gt; (subject to the user option &lt;code&gt;save-interprogram-paste-before-kill&lt;/code&gt;) and &lt;code&gt;interprogram-cut-function&lt;/code&gt; (see below).</source>
          <target state="translated">此函数将文本 &lt;var&gt;string&lt;/var&gt; 推到kill环上，并使猛拉指针指向该字符串。如果合适，它将丢弃最早的条目。它还调用程序 &lt;code&gt;interprogram-paste-function&lt;/code&gt; （取决于用户选项 &lt;code&gt;save-interprogram-paste-before-kill&lt;/code&gt; ）和程序 &lt;code&gt;interprogram-cut-function&lt;/code&gt; （请参见下文）的值。</target>
        </trans-unit>
        <trans-unit id="e7a7abe4c600e801cf3b01e879a2e73c8b898dec" translate="yes" xml:space="preserve">
          <source>This function puts &lt;var&gt;coding-systems&lt;/var&gt; at the beginning of the priority list for coding systems, thus making their priority higher than all the rest.</source>
          <target state="translated">此功能将 &lt;var&gt;coding-systems&lt;/var&gt; 置于编码系统优先级列表的开头，因此使其优先级高于所有其他系统。</target>
        </trans-unit>
        <trans-unit id="beca1601c3b51917a2ee6a3205606bb6e50881a5" translate="yes" xml:space="preserve">
          <source>This function puts &lt;var&gt;tag&lt;/var&gt; in the padding area of the current line. The padding area can be empty space at the beginning of the line, the width of which is governed by &lt;code&gt;tabulated-list-padding&lt;/code&gt;. &lt;var&gt;tag&lt;/var&gt; should be a string, with a length less than or equal to &lt;code&gt;tabulated-list-padding&lt;/code&gt;. If &lt;var&gt;advance&lt;/var&gt; is non-nil, this function advances point by one line.</source>
          <target state="translated">此功能将 &lt;var&gt;tag&lt;/var&gt; 放置在当前行的填充区域中。填充区域可以是行开头的空白区域，其宽度由 &lt;code&gt;tabulated-list-padding&lt;/code&gt; 决定。 &lt;var&gt;tag&lt;/var&gt; 应该是一个字符串，其长度小于或等于 &lt;code&gt;tabulated-list-padding&lt;/code&gt; 。如果 &lt;var&gt;advance&lt;/var&gt; 不为零，则此功能将前进一点。</target>
        </trans-unit>
        <trans-unit id="d7597c84b90ebf7a32086778288b320d4d6ba96f" translate="yes" xml:space="preserve">
          <source>This function puts &lt;var&gt;value&lt;/var&gt; in the value cell of &lt;var&gt;symbol&lt;/var&gt;. Since it is a function rather than a special form, the expression written for &lt;var&gt;symbol&lt;/var&gt; is evaluated to obtain the symbol to set. The return value is &lt;var&gt;value&lt;/var&gt;.</source>
          <target state="translated">此函数将 &lt;var&gt;value&lt;/var&gt; 放在 &lt;var&gt;symbol&lt;/var&gt; 的值单元格中。由于它是函数而不是特殊形式，因此对为 &lt;var&gt;symbol&lt;/var&gt; 编写的表达式进行求值以获得要设置的符号。返回值是 &lt;var&gt;value&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="af5d818474d9b290e41a3e89d80e2224a3d0ec93" translate="yes" xml:space="preserve">
          <source>This function puts &lt;var&gt;value&lt;/var&gt; onto &lt;var&gt;symbol&lt;/var&gt;&amp;rsquo;s property list under the property name &lt;var&gt;property&lt;/var&gt;, replacing any previous property value. The &lt;code&gt;put&lt;/code&gt; function returns &lt;var&gt;value&lt;/var&gt;.</source>
          <target state="translated">此函数将 &lt;var&gt;value&lt;/var&gt; 放在属性名称 &lt;var&gt;property&lt;/var&gt; 下的 &lt;var&gt;symbol&lt;/var&gt; 的属性列表中，替换以前的任何属性值。该 &lt;code&gt;put&lt;/code&gt; 函数返回 &lt;var&gt;value&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="8ca9a37056f89d719e454da2055dcc998625782d" translate="yes" xml:space="preserve">
          <source>This function puts a &lt;code&gt;charset&lt;/code&gt; text property on the decoded text. The value of the property states the character set used to decode the original text:</source>
          <target state="translated">此函数在解码的文本上放置一个 &lt;code&gt;charset&lt;/code&gt; 文本属性。该属性的值表示用于解码原始文本的字符集：</target>
        </trans-unit>
        <trans-unit id="d3c0b178061d3147f5a42110c13e20dbf4f35263" translate="yes" xml:space="preserve">
          <source>This function puts element of the minibuffer history in the minibuffer. The argument &lt;var&gt;nabs&lt;/var&gt; specifies the absolute history position in descending order, where 0 means the current element and a positive number &lt;var&gt;n&lt;/var&gt; means the &lt;var&gt;n&lt;/var&gt;th previous element. NABS being a negative number -&lt;var&gt;n&lt;/var&gt; means the &lt;var&gt;n&lt;/var&gt;th entry of &amp;ldquo;future history.&amp;rdquo;</source>
          <target state="translated">此函数将迷你缓冲区历史记录中的元素放入迷你缓冲区中。参数 &lt;var&gt;nabs&lt;/var&gt; 以降序指定绝对历史位置，其中0表示当前元素，正数 &lt;var&gt;n&lt;/var&gt; 表示第 &lt;var&gt;n&lt;/var&gt; 个前一个元素。NABS为负数 &lt;var&gt;n&lt;/var&gt; 表示&amp;ldquo;未来历史&amp;rdquo;的第 &lt;var&gt;n&lt;/var&gt; 个条目。</target>
        </trans-unit>
        <trans-unit id="867079fc2b10bd75aa27cae46c8c8e0bc3982368" translate="yes" xml:space="preserve">
          <source>This function puts image &lt;var&gt;image&lt;/var&gt; in front of &lt;var&gt;pos&lt;/var&gt; in the current buffer. The argument &lt;var&gt;pos&lt;/var&gt; should be an integer or a marker. It specifies the buffer position where the image should appear. The argument &lt;var&gt;string&lt;/var&gt; specifies the text that should hold the image as an alternative to the default.</source>
          <target state="translated">此功能将图像 &lt;var&gt;image&lt;/var&gt; 放置在当前缓冲区的 &lt;var&gt;pos&lt;/var&gt; 前面。 &lt;var&gt;pos&lt;/var&gt; 参数应为整数或标记。它指定图像应出现的缓冲区位置。参数 &lt;var&gt;string&lt;/var&gt; 指定应保留图像的文本，以替代默认值。</target>
        </trans-unit>
        <trans-unit id="ad95740b88052ea2176c78c83440d8eb4b6f2f55" translate="yes" xml:space="preserve">
          <source>This function puts the window state &lt;var&gt;state&lt;/var&gt; into &lt;var&gt;window&lt;/var&gt;. The argument &lt;var&gt;state&lt;/var&gt; should be the state of a window returned by an earlier invocation of &lt;code&gt;window-state-get&lt;/code&gt;, see above. The optional argument &lt;var&gt;window&lt;/var&gt; can be either a live window or an internal window (see &lt;a href=&quot;windows-and-frames#Windows-and-Frames&quot;&gt;Windows and Frames&lt;/a&gt;). If &lt;var&gt;window&lt;/var&gt; is not a live window, it is replaced by a new live window created on the same frame before putting &lt;var&gt;state&lt;/var&gt; into it. If &lt;var&gt;window&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it puts the window state into a new window.</source>
          <target state="translated">此函数将窗口 &lt;var&gt;state&lt;/var&gt; 置于 &lt;var&gt;window&lt;/var&gt; 。参数 &lt;var&gt;state&lt;/var&gt; 应该是先前调用 &lt;code&gt;window-state-get&lt;/code&gt; 所返回的窗口状态，请参见上文。可选参数 &lt;var&gt;window&lt;/var&gt; 可以是实时窗口或内部窗口（请参见&lt;a href=&quot;windows-and-frames#Windows-and-Frames&quot;&gt;Windows和Frames&lt;/a&gt;）。如果 &lt;var&gt;window&lt;/var&gt; 不是活动窗口，则将其置于 &lt;var&gt;state&lt;/var&gt; 之前在同一帧上创建的新活动窗口中将其替换。如果 &lt;var&gt;window&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则将窗口状态放入新窗口。</target>
        </trans-unit>
        <trans-unit id="4e352b3d817666797ea87a97b670cae9c9f6e754" translate="yes" xml:space="preserve">
          <source>This function raises frame &lt;var&gt;frame&lt;/var&gt; (default, the selected frame) above all other frames belonging to the same or a lower z-group as &lt;var&gt;frame&lt;/var&gt;. If &lt;var&gt;frame&lt;/var&gt; is invisible or iconified, this makes it visible. If &lt;var&gt;frame&lt;/var&gt; is a child frame (see &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;), this raises &lt;var&gt;frame&lt;/var&gt; above all other child frames of its parent.</source>
          <target state="translated">此函数引发帧 &lt;var&gt;frame&lt;/var&gt; 以上属于相同或较低的z组的所有其他帧（默认情况下，所选择的帧） &lt;var&gt;frame&lt;/var&gt; 。如果 &lt;var&gt;frame&lt;/var&gt; 不可见或图标化，则使其可见。如果 &lt;var&gt;frame&lt;/var&gt; 是一个子框架（请参见&lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;），则它将框架提升到其父框架的所有其他子 &lt;var&gt;frame&lt;/var&gt; 之上。</target>
        </trans-unit>
        <trans-unit id="5840e146bf5e31edd45500c0a92926d0ceff7616" translate="yes" xml:space="preserve">
          <source>This function re-evaluates the standard value of &lt;var&gt;symbol&lt;/var&gt;, which should be a user option declared via &lt;code&gt;defcustom&lt;/code&gt;. If the variable was customized, this function re-evaluates the saved value instead. Then it sets the user option to that value (using the option&amp;rsquo;s &lt;code&gt;:set&lt;/code&gt; property if that is defined).</source>
          <target state="translated">此函数重新评估 &lt;var&gt;symbol&lt;/var&gt; 的标准值，该标准值应该是通过 &lt;code&gt;defcustom&lt;/code&gt; 声明的用户选项。如果自定义变量，则此函数将重新评估保存的值。然后，它将用户选项设置为该值（如果已定义，则使用选项的 &lt;code&gt;:set&lt;/code&gt; 属性）。</target>
        </trans-unit>
        <trans-unit id="e1c7b961df4b0d9bdcf4cce4625908947c0ce3c8" translate="yes" xml:space="preserve">
          <source>This function reads a Lisp expression in the minibuffer, evaluates it, then returns the result. The difference between this command and &lt;code&gt;eval-minibuffer&lt;/code&gt; is that here the initial &lt;var&gt;form&lt;/var&gt; is not optional and it is treated as a Lisp object to be converted to printed representation rather than as a string of text. It is printed with &lt;code&gt;prin1&lt;/code&gt;, so if it is a string, double-quote characters (&amp;lsquo;</source>
          <target state="translated">此函数读取微型缓冲区中的Lisp表达式，对其求值，然后返回结果。此命令与 &lt;code&gt;eval-minibuffer&lt;/code&gt; 之间的区别在于，此处的初始 &lt;var&gt;form&lt;/var&gt; 不是可选的，它被视为要转换为打印表示形式的Lisp对象，而不是文本字符串。它使用 &lt;code&gt;prin1&lt;/code&gt; 打印，因此，如果是字符串，请使用双引号字符（'</target>
        </trans-unit>
        <trans-unit id="8375dc7cd2356a6c3ec455735b02e4b682c8fdbf" translate="yes" xml:space="preserve">
          <source>This function reads a Lisp expression using the minibuffer, evaluates it, then returns the result. The arguments &lt;var&gt;prompt&lt;/var&gt; and &lt;var&gt;initial&lt;/var&gt; are used as in &lt;code&gt;read-from-minibuffer&lt;/code&gt;.</source>
          <target state="translated">此函数使用微型缓冲区读取Lisp表达式，对其求值，然后返回结果。参数 &lt;var&gt;prompt&lt;/var&gt; 和 &lt;var&gt;initial&lt;/var&gt; 用于 &lt;code&gt;read-from-minibuffer&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="23521e70faa1247f5f38b89824014939968d5e75" translate="yes" xml:space="preserve">
          <source>This function reads a Lisp object using the minibuffer, and returns it without evaluating it. The arguments &lt;var&gt;prompt&lt;/var&gt; and &lt;var&gt;initial&lt;/var&gt; are used as in &lt;code&gt;read-from-minibuffer&lt;/code&gt;.</source>
          <target state="translated">该函数使用迷你缓冲区读取Lisp对象，并返回它而不对其求值。参数 &lt;var&gt;prompt&lt;/var&gt; 和 &lt;var&gt;initial&lt;/var&gt; 用于 &lt;code&gt;read-from-minibuffer&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="ee04099a241b0306b16d4e3f000471e695d47776" translate="yes" xml:space="preserve">
          <source>This function reads a coding system using the minibuffer, prompting with string &lt;var&gt;prompt&lt;/var&gt;, and returns the coding system name as a symbol. If the user enters null input, &lt;var&gt;default&lt;/var&gt; specifies which coding system to return. It should be a symbol or a string.</source>
          <target state="translated">此函数使用小型缓冲区读取编码系统，并以字符串 &lt;var&gt;prompt&lt;/var&gt; ，并以符号形式返回编码系统名称。如果用户输入空输入，则 &lt;var&gt;default&lt;/var&gt; 指定要返回的编码系统。它应该是符号或字符串。</target>
        </trans-unit>
        <trans-unit id="993c875f2167adda7fed84609e27f4c1c22ef9a1" translate="yes" xml:space="preserve">
          <source>This function reads a coding system using the minibuffer, prompting with string &lt;var&gt;prompt&lt;/var&gt;, and returns the coding system name as a symbol. If the user tries to enter null input, it asks the user to try again. See &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Coding Systems&lt;/a&gt;.</source>
          <target state="translated">此函数使用小型缓冲区读取编码系统，并以字符串 &lt;var&gt;prompt&lt;/var&gt; ，并以符号形式返回编码系统名称。如果用户尝试输入空输入，它将要求用户再次尝试。请参阅&lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;编码系统&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4df2f8f457e47b2bc979935fe769a1495fe3b14f" translate="yes" xml:space="preserve">
          <source>This function reads a command name from the minibuffer using &lt;code&gt;completing-read&lt;/code&gt; (see &lt;a href=&quot;completion#Completion&quot;&gt;Completion&lt;/a&gt;). Then it uses &lt;code&gt;command-execute&lt;/code&gt; to call the specified command. Whatever that command returns becomes the value of &lt;code&gt;execute-extended-command&lt;/code&gt;.</source>
          <target state="translated">此函数使用 &lt;code&gt;completing-read&lt;/code&gt; 从迷你缓冲区读取命令名称（请参阅&lt;a href=&quot;completion#Completion&quot;&gt;Completion&lt;/a&gt;）。然后，它使用 &lt;code&gt;command-execute&lt;/code&gt; 来调用指定的命令。该命令返回的值将成为 &lt;code&gt;execute-extended-command&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="69766455794bcfa316579ef75b6abb4ca09416c4" translate="yes" xml:space="preserve">
          <source>This function reads a file name, prompting with &lt;var&gt;prompt&lt;/var&gt; and providing completion.</source>
          <target state="translated">此函数读取文件名，并通过提示进行 &lt;var&gt;prompt&lt;/var&gt; 并提供完成信息。</target>
        </trans-unit>
        <trans-unit id="705404c327d9312dfe4df41ce5b458ebf28c40a8" translate="yes" xml:space="preserve">
          <source>This function reads a key sequence and returns it as a string or vector. It keeps reading events until it has accumulated a complete key sequence; that is, enough to specify a non-prefix command using the currently active keymaps. (Remember that a key sequence that starts with a mouse event is read using the keymaps of the buffer in the window that the mouse was in, not the current buffer.)</source>
          <target state="translated">这个函数读取一个密钥序列并以字符串或向量的形式返回。它不断地读取事件,直到积累了一个完整的键序,也就是说,足够使用当前活动的键位图来指定一个非前缀命令。(请记住,一个以鼠标事件开始的键序列是使用鼠标所在窗口的缓冲区的键映射来读取的,而不是当前缓冲区。)</target>
        </trans-unit>
        <trans-unit id="410a5702681d05065cf777f4af00e1c27ffa2cb4" translate="yes" xml:space="preserve">
          <source>This function reads a password, prompting with &lt;var&gt;prompt&lt;/var&gt;. It does not echo the password as the user types it; instead, it echoes &amp;lsquo;</source>
          <target state="translated">此函数读取密码，并 &lt;var&gt;prompt&lt;/var&gt; 。用户输入密码时，它不会回显密码。相反，它回显&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="90ae472dc75aaea402bb04f3805e42a724b71f5e" translate="yes" xml:space="preserve">
          <source>This function reads a regular expression as a string from the minibuffer and returns it. If the minibuffer prompt string &lt;var&gt;prompt&lt;/var&gt; does not end in &amp;lsquo;</source>
          <target state="translated">此函数从迷你缓冲区读取正则表达式作为字符串并将其返回。如果minibuffer提示字符串 &lt;var&gt;prompt&lt;/var&gt; 未以'结尾</target>
        </trans-unit>
        <trans-unit id="030acae5e3582745bfb15b94fd78e7002df493c0" translate="yes" xml:space="preserve">
          <source>This function reads a set of file mode bits from the minibuffer. The first optional argument &lt;var&gt;prompt&lt;/var&gt; specifies a non-default prompt. Second second optional argument &lt;var&gt;base-file&lt;/var&gt; is the name of a file on whose permissions to base the mode bits that this function returns, if what the user types specifies mode bits relative to permissions of an existing file.</source>
          <target state="translated">此函数从迷你缓冲区读取一组文件模式位。第一个可选的参数 &lt;var&gt;prompt&lt;/var&gt; 指定了非默认提示。第二个第二个可选参数 &lt;var&gt;base-file&lt;/var&gt; 是文件的名称，如果用户键入的内容指定了相对于现有文件的权限的模式位，则该文件的权限是此函数返回的模式位的基础。</target>
        </trans-unit>
        <trans-unit id="6d079e32c4c085ef24041ba62eefad89c38584d0" translate="yes" xml:space="preserve">
          <source>This function reads a shell command from the minibuffer, prompting with &lt;var&gt;prompt&lt;/var&gt; and providing intelligent completion. It completes the first word of the command using candidates that are appropriate for command names, and the rest of the command words as file names.</source>
          <target state="translated">此函数从微型缓冲区读取shell命令，并通过提示进行 &lt;var&gt;prompt&lt;/var&gt; 并提供智能完成。它使用适合于命令名称的候选项来完成命令的第一个单词，其余的命令单词作为文件名。</target>
        </trans-unit>
        <trans-unit id="6b33c0e7398c5a841945f947dc390e12f8204368" translate="yes" xml:space="preserve">
          <source>This function reads a single key. It is intermediate between &lt;code&gt;read-key-sequence&lt;/code&gt; and &lt;code&gt;read-event&lt;/code&gt;. Unlike the former, it reads a single key, not a key sequence. Unlike the latter, it does not return a raw event, but decodes and translates the user input according to &lt;code&gt;input-decode-map&lt;/code&gt;, &lt;code&gt;local-function-key-map&lt;/code&gt;, and &lt;code&gt;key-translation-map&lt;/code&gt; (see &lt;a href=&quot;translation-keymaps#Translation-Keymaps&quot;&gt;Translation Keymaps&lt;/a&gt;).</source>
          <target state="translated">此功能读取单个键。它介于 &lt;code&gt;read-key-sequence&lt;/code&gt; 和 &lt;code&gt;read-event&lt;/code&gt; 之间。与前者不同，它读取单个键，而不是键序列。与后者不同，它不返回原始事件，而是根据 &lt;code&gt;input-decode-map&lt;/code&gt; ， &lt;code&gt;local-function-key-map&lt;/code&gt; 和 &lt;code&gt;key-translation-map&lt;/code&gt; 解码和转换用户输入（请参见&lt;a href=&quot;translation-keymaps#Translation-Keymaps&quot;&gt;Translation Keymaps&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="a3a8b19fdeda3b920cd241c1705dd1ad6315c139" translate="yes" xml:space="preserve">
          <source>This function reads a string from the minibuffer and returns it. The arguments &lt;var&gt;prompt&lt;/var&gt;, &lt;var&gt;initial&lt;/var&gt;, &lt;var&gt;history&lt;/var&gt; and &lt;var&gt;inherit-input-method&lt;/var&gt; are used as in &lt;code&gt;read-from-minibuffer&lt;/code&gt;. The keymap used is &lt;code&gt;minibuffer-local-map&lt;/code&gt;.</source>
          <target state="translated">此函数从迷你缓冲区读取一个字符串并返回它。的参数 &lt;var&gt;prompt&lt;/var&gt; ， &lt;var&gt;initial&lt;/var&gt; ， &lt;var&gt;history&lt;/var&gt; 和 &lt;var&gt;inherit-input-method&lt;/var&gt; 被用作 &lt;code&gt;read-from-minibuffer&lt;/code&gt; 。使用的键映射是 &lt;code&gt;minibuffer-local-map&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8c8223306c9781441f5040422128473ce90779ac" translate="yes" xml:space="preserve">
          <source>This function reads a string from the minibuffer, but does not allow whitespace characters as part of the input: instead, those characters terminate the input. The arguments &lt;var&gt;prompt&lt;/var&gt;, &lt;var&gt;initial&lt;/var&gt;, and &lt;var&gt;inherit-input-method&lt;/var&gt; are used as in &lt;code&gt;read-from-minibuffer&lt;/code&gt;.</source>
          <target state="translated">此函数从微型缓冲区读取一个字符串，但不允许空白字符作为输入的一部分：相反，这些字符终止输入。 &lt;var&gt;prompt&lt;/var&gt; ， &lt;var&gt;initial&lt;/var&gt; 和 &lt;var&gt;inherit-input-method&lt;/var&gt; 的参数与 &lt;code&gt;read-from-minibuffer&lt;/code&gt; 中读取一样使用。</target>
        </trans-unit>
        <trans-unit id="3910b53909e9f65fa172c8d200634e30135434c1" translate="yes" xml:space="preserve">
          <source>This function reads a string in the minibuffer, assisting the user by providing completion. It activates the minibuffer with prompt &lt;var&gt;prompt&lt;/var&gt;, which must be a string.</source>
          <target state="translated">此函数读取迷你缓冲区中的字符串，通过提供完成功能来帮助用户。它使用提示 &lt;var&gt;prompt&lt;/var&gt; 激活微型缓冲区，提示必须为字符串。</target>
        </trans-unit>
        <trans-unit id="37360039215b2dc59076c3d11efdca0772ca7c0a" translate="yes" xml:space="preserve">
          <source>This function reads a string that is a color specification, either the color&amp;rsquo;s name or an RGB hex value such as &lt;code&gt;#RRRGGGBBB&lt;/code&gt;. It prompts with &lt;var&gt;prompt&lt;/var&gt; (default: &lt;code&gt;&quot;Color (name or #RGB triplet):&quot;&lt;/code&gt;) and provides completion for color names, but not for hex RGB values. In addition to names of standard colors, completion candidates include the foreground and background colors at point.</source>
          <target state="translated">此函数读取作为颜色规范的字符串，该字符串可以是颜色名称，也可以是RGB十六进制值，例如 &lt;code&gt;#RRRGGGBBB&lt;/code&gt; 。它带有 &lt;var&gt;prompt&lt;/var&gt; （默认： &lt;code&gt;&quot;Color (name or #RGB triplet):&quot;&lt;/code&gt; ）），并提供颜色名称的完成，但不提供十六进制RGB值。除了标准颜色的名称外，完成候选还包括该点的前景色和背景色。</target>
        </trans-unit>
        <trans-unit id="d9db9ec9513be122bbdfb05b58b1abfc4f461a86" translate="yes" xml:space="preserve">
          <source>This function reads abbrev definitions from a file named &lt;var&gt;filename&lt;/var&gt;, previously written with &lt;code&gt;write-abbrev-file&lt;/code&gt;. If &lt;var&gt;filename&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, the file specified in &lt;code&gt;abbrev-file-name&lt;/code&gt; is used.</source>
          <target state="translated">此函数从先前使用 &lt;code&gt;write-abbrev-file&lt;/code&gt; 写入的名为 &lt;var&gt;filename&lt;/var&gt; 的文件中读取abbrev定义。如果 &lt;var&gt;filename&lt;/var&gt; 省略或 &lt;code&gt;nil&lt;/code&gt; ，则使用 &lt;code&gt;abbrev-file-name&lt;/code&gt; 中指定的文件。</target>
        </trans-unit>
        <trans-unit id="99d0b020f9b68903158c83af0d1d3d42a52bc279" translate="yes" xml:space="preserve">
          <source>This function reads an input method name with the minibuffer, prompting with &lt;var&gt;prompt&lt;/var&gt;. If &lt;var&gt;default&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that is returned by default, if the user enters empty input. However, if &lt;var&gt;inhibit-null&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, empty input signals an error.</source>
          <target state="translated">此函数使用minibuffer读取输入法名称，并以 &lt;var&gt;prompt&lt;/var&gt; 。如果 &lt;var&gt;default&lt;/var&gt; 为non- &lt;code&gt;nil&lt;/code&gt; ，则在用户输入空输入的情况下默认返回。然而，如果 &lt;var&gt;inhibit-null&lt;/var&gt; 是非 &lt;code&gt;nil&lt;/code&gt; ，空输入信号的误差。</target>
        </trans-unit>
        <trans-unit id="c2d01aca49c9816eeea821c866a25e532ae55513" translate="yes" xml:space="preserve">
          <source>This function reads and returns a character input event. If the user generates an event which is not a character (i.e., a mouse click or function key event), &lt;code&gt;read-char&lt;/code&gt; signals an error. The arguments work as in &lt;code&gt;read-event&lt;/code&gt;.</source>
          <target state="translated">该函数读取并返回一个字符输入事件。如果用户生成的事件不是字符（例如，鼠标单击或功能键事件），则 &lt;code&gt;read-char&lt;/code&gt; 表示错误。参数的作用与 &lt;code&gt;read-event&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="1a42ed12fda5f42a9b2a7257eda25e697227ab4f" translate="yes" xml:space="preserve">
          <source>This function reads and returns a character input event. If the user generates an event which is not a character event, &lt;code&gt;read-char-exclusive&lt;/code&gt; ignores it and reads another event, until it gets a character. The arguments work as in &lt;code&gt;read-event&lt;/code&gt;. The returned value may include modifier bits, as with &lt;code&gt;read-char&lt;/code&gt;.</source>
          <target state="translated">该函数读取并返回一个字符输入事件。如果用户生成的事件不是字符事件，则 &lt;code&gt;read-char-exclusive&lt;/code&gt; 将忽略该事件并读取另一个事件，直到获得字符为止。参数的作用与 &lt;code&gt;read-event&lt;/code&gt; 相同。与 &lt;code&gt;read-char&lt;/code&gt; 一样，返回值可能包含修饰符位。</target>
        </trans-unit>
        <trans-unit id="a73ab9c90b192a880dd6987698ce2dad370f1a26" translate="yes" xml:space="preserve">
          <source>This function reads and returns a register name, prompting with &lt;var&gt;prompt&lt;/var&gt; and possibly showing a preview of the existing registers and their contents. The preview is shown in a temporary window, after the delay specified by the user option &lt;code&gt;register-preview-delay&lt;/code&gt;, if its value and &lt;code&gt;register-alist&lt;/code&gt; are both non-&lt;code&gt;nil&lt;/code&gt;. The preview is also shown if the user requests help (e.g., by typing the help character). We recommend that all interactive commands which read register names use this function.</source>
          <target state="translated">该函数读取并返回寄存器名称，并通过 &lt;var&gt;prompt&lt;/var&gt; 并可能显示现有寄存器及其内容的预览。如果用户选项 &lt;code&gt;register-preview-delay&lt;/code&gt; 指定了延迟，并且预览的值和 &lt;code&gt;register-alist&lt;/code&gt; 均为non - &lt;code&gt;nil&lt;/code&gt; ，则预览将在一个临时窗口中显示。如果用户请求帮助（例如，通过键入帮助字符），也会显示预览。我们建议所有读取寄存器名称的交互式命令都使用此功能。</target>
        </trans-unit>
        <trans-unit id="f7a512400790bfa09e3030b8a3c55d0b5a43ebca" translate="yes" xml:space="preserve">
          <source>This function reads and returns the next event of command input, waiting if necessary until an event is available.</source>
          <target state="translated">该函数读取并返回命令输入的下一个事件,必要时等待,直到有事件可用。</target>
        </trans-unit>
        <trans-unit id="d04438056dbd8754b4b2b92d8c14b09754aa413b" translate="yes" xml:space="preserve">
          <source>This function reads one textual Lisp expression from &lt;var&gt;stream&lt;/var&gt;, returning it as a Lisp object. This is the basic Lisp input function.</source>
          <target state="translated">此函数从 &lt;var&gt;stream&lt;/var&gt; 读取一个文本Lisp表达式，并将其作为Lisp对象返回。这是基本的Lisp输入功能。</target>
        </trans-unit>
        <trans-unit id="63f4ae4c60a67b13935d576918376440012ec46e" translate="yes" xml:space="preserve">
          <source>This function reads the &lt;code&gt;.dir-locals.el&lt;/code&gt; file and stores the directory-local variables in &lt;code&gt;file-local-variables-alist&lt;/code&gt; that is local to the buffer visiting any file in the directory, without applying them. It also stores the directory-local settings in &lt;code&gt;dir-locals-class-alist&lt;/code&gt;, where it defines a special class for the directory in which</source>
          <target state="translated">此函数读取 &lt;code&gt;.dir-locals.el&lt;/code&gt; 文件，并将目录本地变量存储在 &lt;code&gt;file-local-variables-alist&lt;/code&gt; 本地变量-alist中，该本地变量位于访问目录中任何文件的缓冲区的本地，而不应用它们。它还将目录本地设置存储在 &lt;code&gt;dir-locals-class-alist&lt;/code&gt; 中，在其中为目录定义特殊类，其中</target>
        </trans-unit>
        <trans-unit id="c85fcc29acf59eed48da49945e963aebc852daa5" translate="yes" xml:space="preserve">
          <source>This function reads the first textual Lisp expression from the text in &lt;var&gt;string&lt;/var&gt;. It returns a cons cell whose &lt;small&gt;CAR&lt;/small&gt; is that expression, and whose &lt;small&gt;CDR&lt;/small&gt; is an integer giving the position of the next remaining character in the string (i.e., the first one not read).</source>
          <target state="translated">此函数从 &lt;var&gt;string&lt;/var&gt; 中的文本读取第一个Lisp文本表达式。它返回一个cons单元格，其&lt;small&gt;CAR&lt;/small&gt;是该表达式，并且其&lt;small&gt;CDR&lt;/small&gt;是一个整数，给出字符串中下一个剩余字符的位置（即，第一个未读取的字符）。</target>
        </trans-unit>
        <trans-unit id="2a5ebd0e573c8fac9572408552fa51293a9ef935" translate="yes" xml:space="preserve">
          <source>This function reads the name of a buffer and returns it as a string. It prompts with &lt;var&gt;prompt&lt;/var&gt;. The argument &lt;var&gt;default&lt;/var&gt; is the default name to use, the value to return if the user exits with an empty minibuffer. If non-&lt;code&gt;nil&lt;/code&gt;, it should be a string, a list of strings, or a buffer. If it is a list, the default value is the first element of this list. It is mentioned in the prompt, but is not inserted in the minibuffer as initial input.</source>
          <target state="translated">此函数读取缓冲区的名称，并将其作为字符串返回。它用 &lt;var&gt;prompt&lt;/var&gt; 。参数 &lt;var&gt;default&lt;/var&gt; 是要使用的默认名称，如果用户使用空的迷你缓冲区退出，则返回该值。如果为非 &lt;code&gt;nil&lt;/code&gt; ，则应为字符串，字符串列表或缓冲区。如果是列表，则默认值为该列表的第一个元素。它在提示中被提及，但是没有作为初始输入插入到迷你缓冲区中。</target>
        </trans-unit>
        <trans-unit id="60fcca64cdbd934cf243c3a7fa48f5cdd8c24374" translate="yes" xml:space="preserve">
          <source>This function reads the name of a command and returns it as a Lisp symbol. The argument &lt;var&gt;prompt&lt;/var&gt; is used as in &lt;code&gt;read-from-minibuffer&lt;/code&gt;. Recall that a command is anything for which &lt;code&gt;commandp&lt;/code&gt; returns &lt;code&gt;t&lt;/code&gt;, and a command name is a symbol for which &lt;code&gt;commandp&lt;/code&gt; returns &lt;code&gt;t&lt;/code&gt;. See &lt;a href=&quot;interactive-call#Interactive-Call&quot;&gt;Interactive Call&lt;/a&gt;.</source>
          <target state="translated">该函数读取命令名称，并将其作为Lisp符号返回。参数 &lt;var&gt;prompt&lt;/var&gt; 与 &lt;code&gt;read-from-minibuffer&lt;/code&gt; 一样。回想一下，命令是 &lt;code&gt;commandp&lt;/code&gt; 返回 &lt;code&gt;t&lt;/code&gt; 的任何内容，命令名称是 &lt;code&gt;commandp&lt;/code&gt; 返回 &lt;code&gt;t&lt;/code&gt; 的符号。请参阅&amp;ldquo;&lt;a href=&quot;interactive-call#Interactive-Call&quot;&gt;交互式呼叫&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fab9b78ff71c7712ada5520bcc76eba6089780cf" translate="yes" xml:space="preserve">
          <source>This function reads the name of a customizable variable and returns it as a symbol. Its arguments have the same form as those of &lt;code&gt;read-command&lt;/code&gt;. It behaves just like &lt;code&gt;read-command&lt;/code&gt;, except that it uses the predicate &lt;code&gt;custom-variable-p&lt;/code&gt; instead of &lt;code&gt;commandp&lt;/code&gt;.</source>
          <target state="translated">此函数读取可自定义变量的名称，并将其作为符号返回。其参数与 &lt;code&gt;read-command&lt;/code&gt; 的形式相同。除了使用谓词 &lt;code&gt;custom-variable-p&lt;/code&gt; 代替 &lt;code&gt;commandp&lt;/code&gt; 之外，它的行为与 &lt;code&gt;read-command&lt;/code&gt; 相似。</target>
        </trans-unit>
        <trans-unit id="89fa2b038d5a5d1adaf4f6fc09cd90c88af60277" translate="yes" xml:space="preserve">
          <source>This function reads the next JSON value from the current buffer, starting at point. It moves point to the position immediately after the value if contains a valid JSON object; otherwise it signals the &lt;code&gt;json-parse-error&lt;/code&gt; error and doesn&amp;rsquo;t move point. The arguments &lt;var&gt;args&lt;/var&gt; are interpreted as in &lt;code&gt;json-parse-string&lt;/code&gt;.</source>
          <target state="translated">此函数从点开始从当前缓冲区读取下一个JSON值。如果包含有效的JSON对象，它将移动到该值之后的位置。否则，它会发出 &lt;code&gt;json-parse-error&lt;/code&gt; 错误并且不会移动点。参数 &lt;var&gt;args&lt;/var&gt; 解释为 &lt;code&gt;json-parse-string&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="02b53ea7fa7a263a44454107e239954579f5a14b" translate="yes" xml:space="preserve">
          <source>This function recenters the overlays of the current buffer around position &lt;var&gt;pos&lt;/var&gt;. That makes overlay lookup faster for positions near &lt;var&gt;pos&lt;/var&gt;, but slower for positions far away from &lt;var&gt;pos&lt;/var&gt;.</source>
          <target state="translated">此函数将当前缓冲区的叠加点重新定位在位置 &lt;var&gt;pos&lt;/var&gt; 周围。这样可以使 &lt;var&gt;pos&lt;/var&gt; 位置附近的叠加查找更快，而远离 &lt;var&gt;pos&lt;/var&gt; 位置的覆盖查找较慢。</target>
        </trans-unit>
        <trans-unit id="d52455a588f773b4c2676c22e1d56331ef4f2f13" translate="yes" xml:space="preserve">
          <source>This function redirects focus from &lt;var&gt;frame&lt;/var&gt; to &lt;var&gt;focus-frame&lt;/var&gt;. This means that &lt;var&gt;focus-frame&lt;/var&gt; will receive subsequent keystrokes and events intended for &lt;var&gt;frame&lt;/var&gt;. After such an event, the value of &lt;code&gt;last-event-frame&lt;/code&gt; will be &lt;var&gt;focus-frame&lt;/var&gt;. Also, switch-frame events specifying &lt;var&gt;frame&lt;/var&gt; will instead select &lt;var&gt;focus-frame&lt;/var&gt;.</source>
          <target state="translated">此功能将焦点从 &lt;var&gt;frame&lt;/var&gt; 重定向到 &lt;var&gt;focus-frame&lt;/var&gt; 。这意味着 &lt;var&gt;focus-frame&lt;/var&gt; 将接收针对 &lt;var&gt;frame&lt;/var&gt; 的后续击键和事件。发生此类事件后， &lt;code&gt;last-event-frame&lt;/code&gt; 的值将为 &lt;var&gt;focus-frame&lt;/var&gt; 。同样，指定 &lt;var&gt;frame&lt;/var&gt; 的switch-frame事件将改为选择 &lt;var&gt;focus-frame&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="7b6298ffab83d5b48140f28bb45c9ab80db50a0a" translate="yes" xml:space="preserve">
          <source>This function regenerates the text of &lt;var&gt;ewoc&lt;/var&gt;. It works by deleting the text between the header and the footer, i.e., all the data elements&amp;rsquo; representations, and then calling the pretty-printer function for each node, one by one, in order.</source>
          <target state="translated">此函数重新生成 &lt;var&gt;ewoc&lt;/var&gt; 的文本。它的工作原理是删除页眉和页脚之间的文本（即所有数据元素的表示形式），然后依次依次为每个节点调用pretty-printer函数。</target>
        </trans-unit>
        <trans-unit id="cfd6bf077c5b2a9d99474c60643eb2aebd9ba984" translate="yes" xml:space="preserve">
          <source>This function removes &lt;var&gt;function&lt;/var&gt; from the hook variable &lt;var&gt;hook&lt;/var&gt;. It compares &lt;var&gt;function&lt;/var&gt; with elements of &lt;var&gt;hook&lt;/var&gt; using &lt;code&gt;equal&lt;/code&gt;, so it works for both symbols and lambda expressions.</source>
          <target state="translated">该函数从钩子变量 &lt;var&gt;hook&lt;/var&gt; 中删除 &lt;var&gt;function&lt;/var&gt; 。它使用 &lt;code&gt;equal&lt;/code&gt; 来比较 &lt;var&gt;function&lt;/var&gt; 和 &lt;var&gt;hook&lt;/var&gt; 元素，因此它适用于符号和lambda表达式。</target>
        </trans-unit>
        <trans-unit id="dbf7ef881c8930f8b915aa3f0b4fb8eb27f99aaf" translate="yes" xml:space="preserve">
          <source>This function removes &lt;var&gt;keywords&lt;/var&gt; from &lt;code&gt;font-lock-keywords&lt;/code&gt; for the current buffer or for major mode &lt;var&gt;mode&lt;/var&gt;. As in &lt;code&gt;font-lock-add-keywords&lt;/code&gt;, &lt;var&gt;mode&lt;/var&gt; should be a major mode command name or &lt;code&gt;nil&lt;/code&gt;. All the caveats and requirements for &lt;code&gt;font-lock-add-keywords&lt;/code&gt; apply here too. The argument &lt;var&gt;keywords&lt;/var&gt; must exactly match the one used by the corresponding &lt;code&gt;font-lock-add-keywords&lt;/code&gt;.</source>
          <target state="translated">这个函数删除 &lt;var&gt;keywords&lt;/var&gt; 从 &lt;code&gt;font-lock-keywords&lt;/code&gt; 当前缓冲区或主要模式 &lt;var&gt;mode&lt;/var&gt; 。就像在 &lt;code&gt;font-lock-add-keywords&lt;/code&gt; 中一样， &lt;var&gt;mode&lt;/var&gt; 应该是主模式命令名或 &lt;code&gt;nil&lt;/code&gt; 。 &lt;code&gt;font-lock-add-keywords&lt;/code&gt; 所有警告和要求也适用于此。参数 &lt;var&gt;keywords&lt;/var&gt; 必须与相应的 &lt;code&gt;font-lock-add-keywords&lt;/code&gt; 使用的参数完全匹配。</target>
        </trans-unit>
        <trans-unit id="1680ca69b1362c52b00e0a6ba8ae9504f28465bc" translate="yes" xml:space="preserve">
          <source>This function removes &lt;var&gt;watch-function&lt;/var&gt; from &lt;var&gt;symbol&lt;/var&gt;&amp;rsquo;s list of watchers.</source>
          <target state="translated">此功能从 &lt;var&gt;symbol&lt;/var&gt; 的观察者列表中删除 &lt;var&gt;watch-function&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="4f5c022434cbe6bb085a65d4232d959f2f5ce07c" translate="yes" xml:space="preserve">
          <source>This function removes &lt;var&gt;window&lt;/var&gt; from display and returns &lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window.</source>
          <target state="translated">此函数从显示中删除 &lt;var&gt;window&lt;/var&gt; 并返回 &lt;code&gt;nil&lt;/code&gt; 。如果 &lt;var&gt;window&lt;/var&gt; 省略或为 &lt;code&gt;nil&lt;/code&gt; ，则默认为所选窗口。</target>
        </trans-unit>
        <trans-unit id="b5b4c854904b0794e2c3165050e7f66ad1f31c86" translate="yes" xml:space="preserve">
          <source>This function removes a relative remapping previously added by &lt;code&gt;face-remap-add-relative&lt;/code&gt;. &lt;var&gt;cookie&lt;/var&gt; should be the Lisp object returned by &lt;code&gt;face-remap-add-relative&lt;/code&gt; when the remapping was added.</source>
          <target state="translated">此函数删除先前由 &lt;code&gt;face-remap-add-relative&lt;/code&gt; 添加的相对重映射。 &lt;var&gt;cookie&lt;/var&gt; 应该是 &lt;code&gt;face-remap-add-relative&lt;/code&gt; 时face-remap-add-relative返回的Lisp对象。</target>
        </trans-unit>
        <trans-unit id="7d34fc68ac207e292821980126e258f35bb0f378" translate="yes" xml:space="preserve">
          <source>This function removes all elements &lt;code&gt;equal&lt;/code&gt; to &lt;var&gt;object&lt;/var&gt; from &lt;var&gt;sequence&lt;/var&gt;, and returns the resulting sequence.</source>
          <target state="translated">此函数从 &lt;var&gt;sequence&lt;/var&gt; 中删除所有与 &lt;var&gt;object&lt;/var&gt; &lt;code&gt;equal&lt;/code&gt; 元素，并返回结果序列。</target>
        </trans-unit>
        <trans-unit id="f39c79e2cee21bc915f66c37a7cb928f7d6c598c" translate="yes" xml:space="preserve">
          <source>This function removes all the associations from hash table &lt;var&gt;table&lt;/var&gt;, so that it becomes empty. This is also called &lt;em&gt;clearing&lt;/em&gt; the hash table.</source>
          <target state="translated">此函数从哈希表 &lt;var&gt;table&lt;/var&gt; 中删除所有关联，因此它变为空。这也称为&lt;em&gt;清除&lt;/em&gt;哈希表。</target>
        </trans-unit>
        <trans-unit id="e5a98c2b9ec6bf50de6f4da4a9421d858f8c3b7d" translate="yes" xml:space="preserve">
          <source>This function removes all the overlays between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; whose property &lt;var&gt;name&lt;/var&gt; has the value &lt;var&gt;value&lt;/var&gt;. It can move the endpoints of the overlays in the region, or split them.</source>
          <target state="translated">此功能删除所有的叠加 &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; ，其属性 &lt;var&gt;name&lt;/var&gt; 的值是 &lt;var&gt;value&lt;/var&gt; 。它可以在区域中移动叠加层的端点，也可以拆分它们。</target>
        </trans-unit>
        <trans-unit id="2faeec5ec6b17779c14905afd408f74830700eb9" translate="yes" xml:space="preserve">
          <source>This function removes images in &lt;var&gt;buffer&lt;/var&gt; between positions &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;. If &lt;var&gt;buffer&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, images are removed from the current buffer.</source>
          <target state="translated">此功能删除位置 &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 之间的 &lt;var&gt;buffer&lt;/var&gt; 中的图像。如果省略 &lt;var&gt;buffer&lt;/var&gt; 或 &lt;code&gt;nil&lt;/code&gt; ，则从当前缓冲区中删除图像。</target>
        </trans-unit>
        <trans-unit id="4ace46a5550a9703d4343ba58be19228a5f05655" translate="yes" xml:space="preserve">
          <source>This function removes left margin indentation from the text between &lt;var&gt;from&lt;/var&gt; and &lt;var&gt;to&lt;/var&gt;. The amount of indentation to delete is determined by calling &lt;code&gt;current-left-margin&lt;/code&gt;. In no case does this function delete non-whitespace. If &lt;var&gt;from&lt;/var&gt; and &lt;var&gt;to&lt;/var&gt; are omitted, they default to the whole buffer.</source>
          <target state="translated">此功能从 &lt;var&gt;from&lt;/var&gt; 和 &lt;var&gt;to&lt;/var&gt; 之间的文本中删除左边距缩进。通过调用 &lt;code&gt;current-left-margin&lt;/code&gt; 确定要删除的缩进量。此函数在任何情况下都不会删除非空白。如果 &lt;var&gt;from&lt;/var&gt; 和 &lt;var&gt;to&lt;/var&gt; 被省略，就默认为整个缓冲区。</target>
        </trans-unit>
        <trans-unit id="22b947e5afed6153af15f49300fe368023b8b4a4" translate="yes" xml:space="preserve">
          <source>This function removes the association for &lt;var&gt;key&lt;/var&gt; from &lt;var&gt;table&lt;/var&gt;, if there is one. If &lt;var&gt;key&lt;/var&gt; has no association, &lt;code&gt;remhash&lt;/code&gt; does nothing.</source>
          <target state="translated">此功能从 &lt;var&gt;table&lt;/var&gt; 删除 &lt;var&gt;key&lt;/var&gt; 的关联（如果有）。如果 &lt;var&gt;key&lt;/var&gt; 没有关联，则 &lt;code&gt;remhash&lt;/code&gt; 不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="1a5669699584ec96c68a79c3afd525b0a4fc86a6" translate="yes" xml:space="preserve">
          <source>This function removes the binding of &lt;var&gt;key&lt;/var&gt; from the current global map.</source>
          <target state="translated">此函数从当前全局映射中删除 &lt;var&gt;key&lt;/var&gt; 的绑定。</target>
        </trans-unit>
        <trans-unit id="746b11d07210c75af518564d1a19d4b7bb7e4c1c" translate="yes" xml:space="preserve">
          <source>This function removes the binding of &lt;var&gt;key&lt;/var&gt; from the current local map.</source>
          <target state="translated">此功能从当前本地地图中删除 &lt;var&gt;key&lt;/var&gt; 的绑定。</target>
        </trans-unit>
        <trans-unit id="1d56d85933f37f1fca8e5d70f7fd5b286af17ca2" translate="yes" xml:space="preserve">
          <source>This function removes the image with specification &lt;var&gt;spec&lt;/var&gt; from the image cache of frame &lt;var&gt;frame&lt;/var&gt;. Image specifications are compared using &lt;code&gt;equal&lt;/code&gt;. If &lt;var&gt;frame&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected frame. If &lt;var&gt;frame&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, the image is flushed on all existing frames.</source>
          <target state="translated">此功能从帧 &lt;var&gt;frame&lt;/var&gt; 的图像缓存中删除具有规范 &lt;var&gt;spec&lt;/var&gt; 的图像。使用 &lt;code&gt;equal&lt;/code&gt; 比较图像规格。如果 &lt;var&gt;frame&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则默认为选定的帧。如果 &lt;var&gt;frame&lt;/var&gt; 为 &lt;code&gt;t&lt;/code&gt; ，则在所有现有帧上刷新图像。</target>
        </trans-unit>
        <trans-unit id="431a3695282aff7b977ac8d39fe6b4a14dd00302" translate="yes" xml:space="preserve">
          <source>This function removes the tray notification given by its unique &lt;var&gt;id&lt;/var&gt;.</source>
          <target state="translated">此功能删除其唯一 &lt;var&gt;id&lt;/var&gt; 给出的托盘通知。</target>
        </trans-unit>
        <trans-unit id="7954522cd89bcccd3d75db48760fef5ee1a32dd6" translate="yes" xml:space="preserve">
          <source>This function renames the current buffer to &lt;var&gt;newname&lt;/var&gt;. An error is signaled if &lt;var&gt;newname&lt;/var&gt; is not a string.</source>
          <target state="translated">此函数将当前缓冲区重命名为 &lt;var&gt;newname&lt;/var&gt; 。如果 &lt;var&gt;newname&lt;/var&gt; 不是字符串，则指示错误。</target>
        </trans-unit>
        <trans-unit id="f3b16604c972bba6a42f983e33cad9e266ca9e2b" translate="yes" xml:space="preserve">
          <source>This function renders the parsed HTML in &lt;var&gt;dom&lt;/var&gt; into the current buffer. The argument &lt;var&gt;dom&lt;/var&gt; should be a list as generated by &lt;code&gt;libxml-parse-html-region&lt;/code&gt;. This function is, e.g., used by &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/eww/index.html#Top&quot;&gt;EWW&lt;/a&gt; in</source>
          <target state="translated">此函数将解析后的 &lt;var&gt;dom&lt;/var&gt; in HTML呈现到当前缓冲区中。 &lt;var&gt;dom&lt;/var&gt; 参数应该是由 &lt;code&gt;libxml-parse-html-region&lt;/code&gt; 生成的列表。例如，此功能由&lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/eww/index.html#Top&quot;&gt;EWW&lt;/a&gt;在</target>
        </trans-unit>
        <trans-unit id="693b9f310a6bbf2b9c6eeb41bdb789e358cedd1d" translate="yes" xml:space="preserve">
          <source>This function reopens the terminal device, re-initializes it, and redraws it with that terminal&amp;rsquo;s selected frame. It then runs the hook &lt;code&gt;resume-tty-functions&lt;/code&gt;, passing the terminal object as an argument to each function.</source>
          <target state="translated">此功能将重新打开终端设备，将其重新初始化，并使用该终端的选定帧对其进行重画。然后，它运行hook &lt;code&gt;resume-tty-functions&lt;/code&gt; ，将终端对象作为参数传递给每个函数。</target>
        </trans-unit>
        <trans-unit id="d8757c8dbce8fa01ba9bf0fe29bfe6e73923905d" translate="yes" xml:space="preserve">
          <source>This function replaces &lt;var&gt;olddef&lt;/var&gt; with &lt;var&gt;newdef&lt;/var&gt; for any keys in &lt;var&gt;keymap&lt;/var&gt; that were bound to &lt;var&gt;olddef&lt;/var&gt;. In other words, &lt;var&gt;olddef&lt;/var&gt; is replaced with &lt;var&gt;newdef&lt;/var&gt; wherever it appears. The function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此函数替换 &lt;var&gt;olddef&lt;/var&gt; 与 &lt;var&gt;newdef&lt;/var&gt; 在任何键 &lt;var&gt;keymap&lt;/var&gt; 是注定要 &lt;var&gt;olddef&lt;/var&gt; 。换句话说，无论出现在何处， &lt;var&gt;olddef&lt;/var&gt; 都会被 &lt;var&gt;newdef&lt;/var&gt; 替换。该函数返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8fdd552a5b02f66fbca39c64f7e08294ba542692" translate="yes" xml:space="preserve">
          <source>This function replaces all occurrences of the character &lt;var&gt;old-char&lt;/var&gt; with the character &lt;var&gt;new-char&lt;/var&gt; in the region of the current buffer defined by &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;.</source>
          <target state="translated">此函数在由 &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 定义的当前缓冲区区域中，将所有出现的 &lt;var&gt;old-char&lt;/var&gt; 替换为 &lt;var&gt;new-char&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="6c50a3e212a9ce200305f0d1fe0982d8e66b4bbc" translate="yes" xml:space="preserve">
          <source>This function replaces all or part of the text matched by the last search. It works by means of the match data.</source>
          <target state="translated">该功能可替换上次搜索所匹配的全部或部分文本。它通过匹配数据工作。</target>
        </trans-unit>
        <trans-unit id="e8175df12fee2400ea7cbe9d0eddde6e9a5b6d90" translate="yes" xml:space="preserve">
          <source>This function replaces all the horizontal whitespace surrounding point with either one space or no space, according to the context. It returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">根据上下文，此功能用一个空格或一个空格替换所有水平空白点。返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="62150ee966ba1478ce433c3225e1494610830bc1" translate="yes" xml:space="preserve">
          <source>This function replaces environment variable references in &lt;var&gt;filename&lt;/var&gt; with the environment variable values. Following standard Unix shell syntax, &amp;lsquo;</source>
          <target state="translated">此函数用环境变量值替换 &lt;var&gt;filename&lt;/var&gt; 环境变量引用。遵循标准的Unix Shell语法，</target>
        </trans-unit>
        <trans-unit id="a437f0a9fdadd124cd26c155f1b561e821a9bce4" translate="yes" xml:space="preserve">
          <source>This function replaces the accessible portion of the current buffer with the accessible portion of the buffer &lt;var&gt;source&lt;/var&gt;. &lt;var&gt;source&lt;/var&gt; may either be a buffer object or the name of a buffer. When &lt;code&gt;replace-buffer-contents&lt;/code&gt; succeeds, the text of the accessible portion of the current buffer will be equal to the text of the accessible portion of the &lt;var&gt;source&lt;/var&gt; buffer.</source>
          <target state="translated">此函数用缓冲区 &lt;var&gt;source&lt;/var&gt; 的可访问部分替换当前缓冲区的可访问部分。 &lt;var&gt;source&lt;/var&gt; 可以是缓冲区对象，也可以是缓冲区的名称。当 &lt;code&gt;replace-buffer-contents&lt;/code&gt; 成功时，当前缓冲区的可访问部分的文本将等于 &lt;var&gt;source&lt;/var&gt; 缓冲区的可访问部分的文本。</target>
        </trans-unit>
        <trans-unit id="779566d70cfe04467f75194f846d3acf5ec066c8" translate="yes" xml:space="preserve">
          <source>This function replaces the property list of &lt;var&gt;xwidget&lt;/var&gt; with a new property list given by &lt;var&gt;plist&lt;/var&gt;.</source>
          <target state="translated">此函数用 &lt;var&gt;plist&lt;/var&gt; 给出的新属性列表替换 &lt;var&gt;xwidget&lt;/var&gt; 的属性列表。</target>
        </trans-unit>
        <trans-unit id="d5338d8d0cae2418e75d77c7909c1e572b27cddd" translate="yes" xml:space="preserve">
          <source>This function replaces the region between &lt;var&gt;beg&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; using the given &lt;var&gt;replace-fn&lt;/var&gt;. The function &lt;var&gt;replace-fn&lt;/var&gt; is run in the current buffer narrowed to the specified region and it should return either a string or a buffer replacing the region.</source>
          <target state="translated">此函数使用给定的 &lt;var&gt;replace-fn&lt;/var&gt; 替换 &lt;var&gt;beg&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 之间的区域。函数 &lt;var&gt;replace-fn&lt;/var&gt; 在缩小到指定区域的当前缓冲区中运行，它应该返回字符串或替换该区域的缓冲区。</target>
        </trans-unit>
        <trans-unit id="6c386d8bbac22382afc8e75e16f6af6496a6d621" translate="yes" xml:space="preserve">
          <source>This function reports a warning using the value of &lt;code&gt;(format-message
&lt;var&gt;message&lt;/var&gt; &lt;var&gt;args&lt;/var&gt;...)&lt;/code&gt; as the message in the</source>
          <target state="translated">该功能使用报告的值警告 &lt;code&gt;(format-message &lt;var&gt;message&lt;/var&gt; &lt;var&gt;args&lt;/var&gt;...)&lt;/code&gt; 作为消息</target>
        </trans-unit>
        <trans-unit id="3bdc6d456a207a09dc07584bc51e494ebcd8d335" translate="yes" xml:space="preserve">
          <source>This function reports a warning using the value of &lt;code&gt;(format-message
&lt;var&gt;message&lt;/var&gt; &lt;var&gt;args&lt;/var&gt;...)&lt;/code&gt; as the message, &lt;code&gt;(emacs)&lt;/code&gt; as the type, and &lt;code&gt;:warning&lt;/code&gt; as the severity level. It exists for compatibility only; we recommend not using it, because you should specify a specific warning type.</source>
          <target state="translated">该函数使用 &lt;code&gt;(format-message &lt;var&gt;message&lt;/var&gt; &lt;var&gt;args&lt;/var&gt;...)&lt;/code&gt; 作为消息， &lt;code&gt;(emacs)&lt;/code&gt; 作为类型以及 &lt;code&gt;:warning&lt;/code&gt; 作为严重性级别来报告警告。它仅出于兼容性目的存在。我们建议您不要使用它，因为您应该指定特定的警告类型。</target>
        </trans-unit>
        <trans-unit id="69d39e6c5888fd66a8fabdb58e75d9f4d5751943" translate="yes" xml:space="preserve">
          <source>This function reports a warning, using &lt;var&gt;message&lt;/var&gt; as the message and &lt;var&gt;type&lt;/var&gt; as the warning type. &lt;var&gt;level&lt;/var&gt; should be the severity level, with &lt;code&gt;:warning&lt;/code&gt; being the default.</source>
          <target state="translated">此功能使用 &lt;var&gt;message&lt;/var&gt; 作为消息并 &lt;var&gt;type&lt;/var&gt; 作为警告类型来报告警告。 &lt;var&gt;level&lt;/var&gt; 应该是严重性级别，默认为 &lt;code&gt;:warning&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b2ed768e66d856254b338771fb3b98214f4776f9" translate="yes" xml:space="preserve">
          <source>This function reports the current insertion type of &lt;var&gt;marker&lt;/var&gt;.</source>
          <target state="translated">此功能报告 &lt;var&gt;marker&lt;/var&gt; 的当前插入类型。</target>
        </trans-unit>
        <trans-unit id="ff2a592890e135a26dfc7c9b3e4450af065ae093" translate="yes" xml:space="preserve">
          <source>This function reports the scroll bar type for window &lt;var&gt;window&lt;/var&gt;. The value is a cons cell &lt;code&gt;(&lt;var&gt;vertical-type&lt;/var&gt; .
&lt;var&gt;horizontal-type&lt;/var&gt;)&lt;/code&gt;. Unlike &lt;code&gt;window-scroll-bars&lt;/code&gt;, this reports the scroll bar type actually used, once frame defaults and &lt;code&gt;scroll-bar-mode&lt;/code&gt; are taken into account.</source>
          <target state="translated">此功能报告窗口 &lt;var&gt;window&lt;/var&gt; 的滚动条类型。该值为cons单元格 &lt;code&gt;(&lt;var&gt;vertical-type&lt;/var&gt; . &lt;var&gt;horizontal-type&lt;/var&gt;)&lt;/code&gt; 。与 &lt;code&gt;window-scroll-bars&lt;/code&gt; 不同，它会报告实际使用的滚动条类型，一旦考虑了帧默认设置和 &lt;code&gt;scroll-bar-mode&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="feee688ecde52724cc270c5a5fa818e35828c83f" translate="yes" xml:space="preserve">
          <source>This function reports the scroll bar types for frame &lt;var&gt;frame&lt;/var&gt;. The value is a cons cell &lt;code&gt;(&lt;var&gt;vertical-type&lt;/var&gt; .
&lt;var&gt;horizontal-type&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;vertical-type&lt;/var&gt; is either &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, or &lt;code&gt;nil&lt;/code&gt; (which means no vertical scroll bar.) &lt;var&gt;horizontal-type&lt;/var&gt; is either &lt;code&gt;bottom&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt; (which means no horizontal scroll bar).</source>
          <target state="translated">这个函数报告滚动条类型的帧 &lt;var&gt;frame&lt;/var&gt; 。该值是一个cons单元 &lt;code&gt;(&lt;var&gt;vertical-type&lt;/var&gt; . &lt;var&gt;horizontal-type&lt;/var&gt;)&lt;/code&gt; ，其中 &lt;var&gt;vertical-type&lt;/var&gt; 要么 &lt;code&gt;left&lt;/code&gt; ， &lt;code&gt;right&lt;/code&gt; ，或 &lt;code&gt;nil&lt;/code&gt; （这意味着没有垂直滚动条。） &lt;var&gt;horizontal-type&lt;/var&gt; 或者是 &lt;code&gt;bottom&lt;/code&gt; 或 &lt;code&gt;nil&lt;/code&gt; （即无水平滚动条）。</target>
        </trans-unit>
        <trans-unit id="72d44d791ece7005dabf3862f3f3ebd1fb388f10" translate="yes" xml:space="preserve">
          <source>This function reports whether a color name is meaningful. It returns &lt;code&gt;t&lt;/code&gt; if so; otherwise, &lt;code&gt;nil&lt;/code&gt;. The argument &lt;var&gt;frame&lt;/var&gt; says which frame&amp;rsquo;s display to ask about; if &lt;var&gt;frame&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, the selected frame is used.</source>
          <target state="translated">此功能报告颜色名称是否有意义。如果是，则返回 &lt;code&gt;t&lt;/code&gt; ；否则返回t。否则，为 &lt;code&gt;nil&lt;/code&gt; 。参数 &lt;var&gt;frame&lt;/var&gt; 说明询问哪个框架；如果省略 &lt;var&gt;frame&lt;/var&gt; 或 &lt;code&gt;nil&lt;/code&gt; ，则使用选定的帧。</target>
        </trans-unit>
        <trans-unit id="27d404483cd911abc158c15cc8b1b52957f97e88" translate="yes" xml:space="preserve">
          <source>This function requests &lt;var&gt;function-name&lt;/var&gt; to invoke the debugger each time it is called.</source>
          <target state="translated">每次调用此函数时，该函数都会请求 &lt;var&gt;function-name&lt;/var&gt; 来调用调试器。</target>
        </trans-unit>
        <trans-unit id="5ed7bd62ca1a1338056458ede4338e01d53dc799" translate="yes" xml:space="preserve">
          <source>This function resembles &lt;code&gt;insert-buffer-substring&lt;/code&gt;, except that it processes the text according to &lt;code&gt;yank-handled-properties&lt;/code&gt; and &lt;code&gt;yank-excluded-properties&lt;/code&gt;. (It does not handle the &lt;code&gt;yank-handler&lt;/code&gt; property, which does not normally occur in buffer text anyway.)</source>
          <target state="translated">该函数类似于 &lt;code&gt;insert-buffer-substring&lt;/code&gt; ，除了它根据 &lt;code&gt;yank-handled-properties&lt;/code&gt; 和 &lt;code&gt;yank-excluded-properties&lt;/code&gt; 处理文本。（它不处理 &lt;code&gt;yank-handler&lt;/code&gt; 属性，该属性通常不会在缓冲区文本中出现。）</target>
        </trans-unit>
        <trans-unit id="c341abcb38b0764660281b2ce9ce3450df1c6f41" translate="yes" xml:space="preserve">
          <source>This function resizes &lt;var&gt;window&lt;/var&gt; by &lt;var&gt;delta&lt;/var&gt; increments. If &lt;var&gt;horizontal&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it changes the height by &lt;var&gt;delta&lt;/var&gt; lines; otherwise, it changes the width by &lt;var&gt;delta&lt;/var&gt; columns. A positive &lt;var&gt;delta&lt;/var&gt; means to enlarge the window, and a negative &lt;var&gt;delta&lt;/var&gt; means to shrink it.</source>
          <target state="translated">此函数按 &lt;var&gt;delta&lt;/var&gt; 增量调整 &lt;var&gt;window&lt;/var&gt; 大小。如果 &lt;var&gt;horizontal&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则它会通过 &lt;var&gt;delta&lt;/var&gt; 线更改高度；否则，它将按 &lt;var&gt;delta&lt;/var&gt; 列更改宽度。正 &lt;var&gt;delta&lt;/var&gt; 表示扩大窗口，负 &lt;var&gt;delta&lt;/var&gt; 表示缩小窗口。</target>
        </trans-unit>
        <trans-unit id="4859c426d6d82c4e50f29f8c85ef005878cf45c1" translate="yes" xml:space="preserve">
          <source>This function resizes the specified &lt;var&gt;xwidget&lt;/var&gt; to the size &lt;var&gt;width&lt;/var&gt;x&lt;var&gt;height&lt;/var&gt; pixels.</source>
          <target state="translated">此函数将指定的 &lt;var&gt;xwidget&lt;/var&gt; 的大小调整为size &lt;var&gt;width&lt;/var&gt; x &lt;var&gt;height&lt;/var&gt; 像素。</target>
        </trans-unit>
        <trans-unit id="ec7eb3d9404fd838076e94969df882d8127cb5bb" translate="yes" xml:space="preserve">
          <source>This function resizes the text area of &lt;var&gt;frame&lt;/var&gt; to a height of &lt;var&gt;height&lt;/var&gt; lines. The sizes of existing windows in &lt;var&gt;frame&lt;/var&gt; are altered proportionally to fit.</source>
          <target state="translated">此功能将 &lt;var&gt;frame&lt;/var&gt; 的文本区域调整为 &lt;var&gt;height&lt;/var&gt; 线的高度。 &lt;var&gt;frame&lt;/var&gt; 中现有窗口的大小会按比例更改以适合。</target>
        </trans-unit>
        <trans-unit id="95c31d580e34882fead34a53db81fce107bff516" translate="yes" xml:space="preserve">
          <source>This function respects &lt;var&gt;min-change&lt;/var&gt; and &lt;var&gt;min-time&lt;/var&gt; as passed to &lt;code&gt;make-progress-reporter&lt;/code&gt; and so does not output new messages on every invocation. It is thus very fast and normally you should not try to reduce the number of calls to it: resulting overhead will most likely negate your effort.</source>
          <target state="translated">此函数遵守传递给 &lt;code&gt;make-progress-reporter&lt;/code&gt; 的 &lt;var&gt;min-change&lt;/var&gt; 和 &lt;var&gt;min-time&lt;/var&gt; ，因此不会在每次调用时输出新消息。因此，它非常快，通常您不应该尝试减少对其的调用次数：产生的开销很可能会抵消您的工作量。</target>
        </trans-unit>
        <trans-unit id="a855d4fe3f68cf1c266c16182242d3ddceb684cc" translate="yes" xml:space="preserve">
          <source>This function restacks &lt;var&gt;frame1&lt;/var&gt; below &lt;var&gt;frame2&lt;/var&gt;. This implies that if both frames are visible and their display areas overlap, &lt;var&gt;frame2&lt;/var&gt; will (partially) obscure &lt;var&gt;frame1&lt;/var&gt;. If the optional third argument &lt;var&gt;above&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function restacks &lt;var&gt;frame1&lt;/var&gt; above &lt;var&gt;frame2&lt;/var&gt;. This means that if both frames are visible and their display areas overlap, &lt;var&gt;frame1&lt;/var&gt; will (partially) obscure &lt;var&gt;frame2&lt;/var&gt;.</source>
          <target state="translated">此功能restacks &lt;var&gt;frame1&lt;/var&gt; 以下 &lt;var&gt;frame2&lt;/var&gt; 。这意味着如果两个框架都可见并且它们的显示区域重叠，则 &lt;var&gt;frame2&lt;/var&gt; 将（部分）遮盖 &lt;var&gt;frame1&lt;/var&gt; 。如果可选的第三个参数 &lt;var&gt;above&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，此函数restacks &lt;var&gt;frame1&lt;/var&gt; 上述 &lt;var&gt;frame2&lt;/var&gt; 。这意味着，如果两个框架都可见并且它们的显示区域重叠，则 &lt;var&gt;frame1&lt;/var&gt; 将（部分）遮盖 &lt;var&gt;frame2&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="88c33262490db74ade8d75dc96c9a902bb1f407d" translate="yes" xml:space="preserve">
          <source>This function restores the configuration of windows and buffers as specified by &lt;var&gt;configuration&lt;/var&gt;, for the frame that &lt;var&gt;configuration&lt;/var&gt; was created for, regardless of whether that frame is selected or not. The argument &lt;var&gt;configuration&lt;/var&gt; must be a value that was previously returned by &lt;code&gt;current-window-configuration&lt;/code&gt; for that frame.</source>
          <target state="translated">此函数将为 &lt;var&gt;configuration&lt;/var&gt; 创建的框架恢复由configuration指定的窗口和缓冲区的 &lt;var&gt;configuration&lt;/var&gt; ，而不管是否选择了该框架。参数 &lt;var&gt;configuration&lt;/var&gt; 必须是该 &lt;code&gt;current-window-configuration&lt;/code&gt; 先前返回的值。</target>
        </trans-unit>
        <trans-unit id="7d94485d22c6c9da77798de4f8b04ce04292fabf" translate="yes" xml:space="preserve">
          <source>This function restores the major mode recorded by &lt;code&gt;major-mode-suspend&lt;/code&gt;. If no major mode was recorded, this function calls &lt;code&gt;normal-mode&lt;/code&gt; (see &lt;a href=&quot;auto-major-mode#Auto-Major-Mode&quot;&gt;normal-mode&lt;/a&gt;), but tries to force it not to choose any modes in &lt;var&gt;avoided-modes&lt;/var&gt;, if that argument is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此功能恢复由 &lt;code&gt;major-mode-suspend&lt;/code&gt; 记录的主要模式。如果未记录任何主要模式，则此函数将调用 &lt;code&gt;normal-mode&lt;/code&gt; （请参见&lt;a href=&quot;auto-major-mode#Auto-Major-Mode&quot;&gt;normal-mode&lt;/a&gt;），但是如果该参数为非 &lt;code&gt;nil&lt;/code&gt; ，则将强制其不要选择 &lt;var&gt;avoided-modes&lt;/var&gt; 任何模式。</target>
        </trans-unit>
        <trans-unit id="5157ca4fc71fe8d46e84c5feb81524fd20b9f11c" translate="yes" xml:space="preserve">
          <source>This function restores the state of frames described in &lt;var&gt;configuration&lt;/var&gt;. However, this function does not restore deleted frames.</source>
          <target state="translated">此功能恢复 &lt;var&gt;configuration&lt;/var&gt; 描述的帧的状态。但是，此功能不会恢复已删除的帧。</target>
        </trans-unit>
        <trans-unit id="e7ce71a9865a4ebd8153c8e3e5d9e1f8705b5e2b" translate="yes" xml:space="preserve">
          <source>This function resumes execution of the process &lt;var&gt;process&lt;/var&gt;. If it is a real subprocess running a program, it sends the signal &lt;code&gt;SIGCONT&lt;/code&gt; to that subprocess; this presumes that &lt;var&gt;process&lt;/var&gt; was stopped previously. If &lt;var&gt;process&lt;/var&gt; represents a network, serial, or pipe connection, this function resumes handling of the incoming data from the connection. For serial connections, data that arrived during the time the process was stopped might be lost.</source>
          <target state="translated">此功能恢复进程的执行 &lt;var&gt;process&lt;/var&gt; 。如果它是运行程序的实际子进程，则它将信号 &lt;code&gt;SIGCONT&lt;/code&gt; 发送到该子进程；否则，它会向该子进程发送信号。这假定该 &lt;var&gt;process&lt;/var&gt; 先前已停止。如果 &lt;var&gt;process&lt;/var&gt; 代表网络，串行或管道连接，则此功能恢复对来自连接的传入数据的处理。对于串行连接，在过程停止期间到达的数据可能会丢失。</target>
        </trans-unit>
        <trans-unit id="c9aa92e45214989b0e1206208ed425833d84e88e" translate="yes" xml:space="preserve">
          <source>This function resumes the previously suspended terminal device &lt;var&gt;tty&lt;/var&gt;; where &lt;var&gt;tty&lt;/var&gt; has the same possible values as it does for &lt;code&gt;suspend-tty&lt;/code&gt;.</source>
          <target state="translated">该函数恢复先前挂起的终端设备 &lt;var&gt;tty&lt;/var&gt; ；其中 &lt;var&gt;tty&lt;/var&gt; 具有与 &lt;code&gt;suspend-tty&lt;/code&gt; 相同的可能值。</target>
        </trans-unit>
        <trans-unit id="ba739975e1d6335204af863c553777aa8be9d348" translate="yes" xml:space="preserve">
          <source>This function retrieves the last known focus state of &lt;var&gt;frame&lt;/var&gt;.</source>
          <target state="translated">此函数检索 &lt;var&gt;frame&lt;/var&gt; 的最后一个已知聚焦状态。</target>
        </trans-unit>
        <trans-unit id="ca17f7b26776043ce0c14cb3763c3179808ed7eb" translate="yes" xml:space="preserve">
          <source>This function return a non-&lt;code&gt;nil&lt;/code&gt; value if &lt;var&gt;theme&lt;/var&gt; (a symbol) is the name of a Custom theme (i.e., a Custom theme which has been loaded into Emacs, whether or not the theme is enabled). Otherwise, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">这个函数返回一个非 &lt;code&gt;nil&lt;/code&gt; 值，如果 &lt;var&gt;theme&lt;/var&gt; （符号）是一个自定义主题的名称（即，它已经被加载到Emacs，题材是否被启用自定义主题）。否则，它返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c409c0bb3de3d3546c83df166d066b8af7a70fd8" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;(point-max)&lt;/code&gt; if &lt;var&gt;flag&lt;/var&gt; is greater than 0, &lt;code&gt;(point-min)&lt;/code&gt; otherwise. The argument &lt;var&gt;flag&lt;/var&gt; must be a number.</source>
          <target state="translated">如果 &lt;var&gt;flag&lt;/var&gt; 大于0，则此函数返回 &lt;code&gt;(point-max)&lt;/code&gt; &lt;code&gt;(point-min)&lt;/code&gt; 否则返回（最小点数）。参数 &lt;var&gt;flag&lt;/var&gt; 必须是数字。</target>
        </trans-unit>
        <trans-unit id="9cebed10f044e604d94803a3cd15475e8672e179" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;nil&lt;/code&gt; for extensionless file names such as</source>
          <target state="translated">对于 &lt;code&gt;nil&lt;/code&gt; 扩展名的文件名，该函数返回nil，例如</target>
        </trans-unit>
        <trans-unit id="40bba1e24fc40636492c49f264cceea9a4f3441a" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;frame&lt;/var&gt; has no parent frame.</source>
          <target state="translated">如果 &lt;var&gt;frame&lt;/var&gt; 没有父框架，则此函数返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="99ff149ecdf8af19c2303c209c6d76399c3aa4fc" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;nil&lt;/code&gt; if the current glyph matrix of &lt;var&gt;window&lt;/var&gt; is not up-to-date which usually happens when Emacs is busy, for example, when processing a command. The value should be retrievable though when this function is run from an idle timer with a delay of zero seconds.</source>
          <target state="translated">如果 &lt;var&gt;window&lt;/var&gt; 的当前字形矩阵不是最新的，则此函数返回 &lt;code&gt;nil&lt;/code&gt; ，这通常在Emacs忙时（例如，在处理命令时）发生。从空闲计时器以零秒的延迟运行此功能时，该值应该是可检索的。</target>
        </trans-unit>
        <trans-unit id="1809dcdc0fb3a304b3f2e03dc1900347c59bc009" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;nil&lt;/code&gt; if the file &lt;var&gt;filename&lt;/var&gt; is not locked. It returns &lt;code&gt;t&lt;/code&gt; if it is locked by this Emacs process, and it returns the name of the user who has locked it if it is locked by some other job.</source>
          <target state="translated">如果文件 &lt;var&gt;filename&lt;/var&gt; 未锁定，则此函数返回 &lt;code&gt;nil&lt;/code&gt; 。如果它被此Emacs进程锁定，则返回 &lt;code&gt;t&lt;/code&gt; ;如果被其他作业锁定，则返回锁定它的用户名。</target>
        </trans-unit>
        <trans-unit id="665ca15a961e565a3a250c639458fa0f6bb31cb3" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;nil&lt;/code&gt; if the final symbol is unbound. It signals a &lt;code&gt;cyclic-function-indirection&lt;/code&gt; error if there is a loop in the chain of symbols.</source>
          <target state="translated">如果最终符号未绑定，则此函数返回 &lt;code&gt;nil&lt;/code&gt; 。如果符号链中存在循环，则会发出循环 &lt;code&gt;cyclic-function-indirection&lt;/code&gt; 错误的信号。</target>
        </trans-unit>
        <trans-unit id="b28488841deac0b54e900fc3daf659b42fe221a0" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;nil&lt;/code&gt; on decryption error, and signals a Lisp error if the &lt;var&gt;cipher&lt;/var&gt; or &lt;var&gt;key&lt;/var&gt;, &lt;var&gt;iv&lt;/var&gt;, or &lt;var&gt;input&lt;/var&gt; are invalid, or if &lt;var&gt;aead_auth&lt;/var&gt; was specified with an AEAD cipher and was invalid.</source>
          <target state="translated">如果解密错误，此函数返回 &lt;code&gt;nil&lt;/code&gt; ，如果 &lt;var&gt;cipher&lt;/var&gt; 或 &lt;var&gt;key&lt;/var&gt; ， &lt;var&gt;iv&lt;/var&gt; 或 &lt;var&gt;input&lt;/var&gt; 无效，或者使用AEAD密码指定了 &lt;var&gt;aead_auth&lt;/var&gt; 且无效，则该函数将发出Lisp错误信号。</target>
        </trans-unit>
        <trans-unit id="47d3cdb39726f9d6aa6f298cbd007b34e3e3e64c" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;nil&lt;/code&gt; on error, and signals a Lisp error if the &lt;var&gt;cipher&lt;/var&gt; or &lt;var&gt;key&lt;/var&gt;, &lt;var&gt;iv&lt;/var&gt;, or &lt;var&gt;input&lt;/var&gt; are invalid, or if &lt;var&gt;aead_auth&lt;/var&gt; was specified with an AEAD cipher and was invalid.</source>
          <target state="translated">如果错误，则此函数返回 &lt;code&gt;nil&lt;/code&gt; ，如果 &lt;var&gt;cipher&lt;/var&gt; 或 &lt;var&gt;key&lt;/var&gt; ， &lt;var&gt;iv&lt;/var&gt; 或 &lt;var&gt;input&lt;/var&gt; 无效，或者使用AEAD密码指定 &lt;var&gt;aead_auth&lt;/var&gt; 且无效，则发出Lisp错误。</target>
        </trans-unit>
        <trans-unit id="fa44cde7dbe67e52f23c7bfe35c5f9ff3b7ac2ef" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;nil&lt;/code&gt; on error, and signals a Lisp error if the &lt;var&gt;digest-method&lt;/var&gt; or &lt;var&gt;input&lt;/var&gt; are invalid. On success, it returns a list of a binary string (the output) and the IV used.</source>
          <target state="translated">该函数在出错时返回 &lt;code&gt;nil&lt;/code&gt; ，如果 &lt;var&gt;digest-method&lt;/var&gt; 或 &lt;var&gt;input&lt;/var&gt; 无效，则发出Lisp错误信号。成功后，它将返回一个二进制字符串（输出）和所用IV的列表。</target>
        </trans-unit>
        <trans-unit id="15316ea51ac471ed29fd8105ac3beaa247bf0fd6" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;nil&lt;/code&gt; on error, and signals a Lisp error if the &lt;var&gt;hash-method&lt;/var&gt; or &lt;var&gt;key&lt;/var&gt; or &lt;var&gt;input&lt;/var&gt; are invalid.</source>
          <target state="translated">该函数在出错时返回 &lt;code&gt;nil&lt;/code&gt; ，如果 &lt;var&gt;hash-method&lt;/var&gt; 或 &lt;var&gt;key&lt;/var&gt; 或 &lt;var&gt;input&lt;/var&gt; 无效，则发出Lisp错误信号。</target>
        </trans-unit>
        <trans-unit id="b433b14d3253551b57b997a36613ee3f67318729" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;display&lt;/var&gt; can display images. Windowed displays ought in principle to handle images, but some systems lack the support for that. On a display that does not support images, Emacs cannot display a tool bar.</source>
          <target state="translated">如果 &lt;var&gt;display&lt;/var&gt; 可以显示图像，则此函数返回 &lt;code&gt;t&lt;/code&gt; 。窗口显示原则上应该可以处理图像，但是某些系统对此不提供支持。在不支持图像的显示器上，Emacs无法显示工具栏。</target>
        </trans-unit>
        <trans-unit id="5cd66cc830f711f5a995d2149fd2e73cdbbfd0a4" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;display&lt;/var&gt; has a mouse available, &lt;code&gt;nil&lt;/code&gt; if not.</source>
          <target state="translated">如果 &lt;var&gt;display&lt;/var&gt; 有可用的鼠标，则此函数返回 &lt;code&gt;t&lt;/code&gt; ;否则，返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="822ab8d4f35dce4f1223b4496bf42e74f81133a7" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;display&lt;/var&gt; is a graphic display capable of displaying several frames and several different fonts at once. This is true for displays that use a window system such as X, and false for text terminals.</source>
          <target state="translated">如果 &lt;var&gt;display&lt;/var&gt; 是能够同时显示多个框架和几种不同字体的图形显示，则此函数返回 &lt;code&gt;t&lt;/code&gt; 。对于使用诸如X的窗口系统的显示器，这是正确的，而对于文本终端，则为false。</target>
        </trans-unit>
        <trans-unit id="28280fad6acf0278727007912a8cbc900939ccad" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;display&lt;/var&gt; supports selections. Windowed displays normally support selections, but they may also be supported in some other cases.</source>
          <target state="translated">如果 &lt;var&gt;display&lt;/var&gt; 支持选择，则此函数返回 &lt;code&gt;t&lt;/code&gt; 。窗口显示通常支持选择，但在某些其他情况下也可能支持。</target>
        </trans-unit>
        <trans-unit id="c2633435fb5f7354b4ed830c6bf290f880ba8a09" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;feature&lt;/var&gt; has been provided in the current Emacs session (i.e., if &lt;var&gt;feature&lt;/var&gt; is a member of &lt;code&gt;features&lt;/code&gt;.) If &lt;var&gt;subfeature&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then the function returns &lt;code&gt;t&lt;/code&gt; only if that subfeature is provided as well (i.e., if &lt;var&gt;subfeature&lt;/var&gt; is a member of the &lt;code&gt;subfeature&lt;/code&gt; property of the &lt;var&gt;feature&lt;/var&gt; symbol.)</source>
          <target state="translated">如果当前Emacs会话中已提供 &lt;var&gt;feature&lt;/var&gt; 则该函数返回 &lt;code&gt;t&lt;/code&gt; （即，如果 &lt;var&gt;feature&lt;/var&gt; 是 &lt;code&gt;features&lt;/code&gt; 的成员。）如果 &lt;var&gt;subfeature&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则仅当也提供了该子功能时，该函数才返回 &lt;code&gt;t&lt;/code&gt; 。 &lt;var&gt;subfeature&lt;/var&gt; 是成员 &lt;code&gt;subfeature&lt;/code&gt; 的的属性 &lt;var&gt;feature&lt;/var&gt; 符号）。</target>
        </trans-unit>
        <trans-unit id="bc816ac21773058c432b88c2ae5469cf69da0a4c" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;file&lt;/var&gt; is a file in directory &lt;var&gt;dir&lt;/var&gt;, or in a subdirectory of &lt;var&gt;dir&lt;/var&gt;. It also returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;file&lt;/var&gt; and &lt;var&gt;dir&lt;/var&gt; are the same directory. It compares the truenames of the two directories. If &lt;var&gt;dir&lt;/var&gt; does not name an existing directory, the return value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">该函数返回 &lt;code&gt;t&lt;/code&gt; 如果 &lt;var&gt;file&lt;/var&gt; 是目录中的文件 &lt;var&gt;dir&lt;/var&gt; ，或者在子目录 &lt;var&gt;dir&lt;/var&gt; 。如果 &lt;var&gt;file&lt;/var&gt; 和 &lt;var&gt;dir&lt;/var&gt; 是同一目录，则还返回 &lt;code&gt;t&lt;/code&gt; 。它比较两个目录的真实名称。如果 &lt;var&gt;dir&lt;/var&gt; 未命名现有目录，则返回值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="72e57620a685d2366b4734862d5355458bada47b" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;filename&lt;/var&gt; is the name of an existing directory. It returns &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;filename&lt;/var&gt; does not name a directory, or if there is trouble determining whether it is a directory. This function follows symbolic links.</source>
          <target state="translated">如果 &lt;var&gt;filename&lt;/var&gt; 是现有目录的名称，则此函数返回 &lt;code&gt;t&lt;/code&gt; 。如果 &lt;var&gt;filename&lt;/var&gt; 没有为目录命名，或者在确定它是否为目录时遇到麻烦，则返回 &lt;code&gt;nil&lt;/code&gt; 。此功能遵循符号链接。</target>
        </trans-unit>
        <trans-unit id="c503b2d8cbbe11212b8a5ffd4e8cd51af0cce6cb" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object1&lt;/var&gt; and &lt;var&gt;object2&lt;/var&gt; are the same object, and &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">如果 &lt;var&gt;object1&lt;/var&gt; 和 &lt;var&gt;object2&lt;/var&gt; 是同一对象，则此函数返回 &lt;code&gt;t&lt;/code&gt; ,否则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="29dd84ebbc4a3a0a8b148bbc59a6ca1b882e0b46" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object1&lt;/var&gt; and &lt;var&gt;object2&lt;/var&gt; have equal components, and &lt;code&gt;nil&lt;/code&gt; otherwise. Whereas &lt;code&gt;eq&lt;/code&gt; tests if its arguments are the same object, &lt;code&gt;equal&lt;/code&gt; looks inside nonidentical arguments to see if their elements or contents are the same. So, if two objects are &lt;code&gt;eq&lt;/code&gt;, they are &lt;code&gt;equal&lt;/code&gt;, but the converse is not always true.</source>
          <target state="translated">如果 &lt;var&gt;object1&lt;/var&gt; 和 &lt;var&gt;object2&lt;/var&gt; 具有相等的分量，则此函数返回 &lt;code&gt;t&lt;/code&gt; ,否则返回 &lt;code&gt;nil&lt;/code&gt; 。而 &lt;code&gt;eq&lt;/code&gt; 测试，如果它的参数是同一个对象， &lt;code&gt;equal&lt;/code&gt; 不完全相同的参数里面长相，看看他们的元素和内容都是一样的。因此，如果两个对象是 &lt;code&gt;eq&lt;/code&gt; ，则它们 &lt;code&gt;equal&lt;/code&gt; ，但是反之并不总是正确的。</target>
        </trans-unit>
        <trans-unit id="cc5e847e839a679f3d4f90fe19d37cd62365f410" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, and returns &lt;code&gt;nil&lt;/code&gt; otherwise. This function is identical to &lt;code&gt;not&lt;/code&gt;, but as a matter of clarity we use &lt;code&gt;null&lt;/code&gt; when &lt;var&gt;object&lt;/var&gt; is considered a list and &lt;code&gt;not&lt;/code&gt; when it is considered a truth value (see &lt;code&gt;not&lt;/code&gt; in &lt;a href=&quot;combining-conditions#Combining-Conditions&quot;&gt;Combining Conditions&lt;/a&gt;).</source>
          <target state="translated">如果 &lt;var&gt;object&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则此函数返回 &lt;code&gt;t&lt;/code&gt; ，否则返回 &lt;code&gt;nil&lt;/code&gt; 。此功能是相同的 &lt;code&gt;not&lt;/code&gt; ，而是清晰的问题，我们使用 &lt;code&gt;null&lt;/code&gt; 当 &lt;var&gt;object&lt;/var&gt; 被认为是一个列表，并 &lt;code&gt;not&lt;/code&gt; 当它被认为是真值（见 &lt;code&gt;not&lt;/code&gt; 在&lt;a href=&quot;combining-conditions#Combining-Conditions&quot;&gt;合并的条件&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="7ec8fbb989a0b856bbfa2d2be7387a3514db1600" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a buffer, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">如果 &lt;var&gt;object&lt;/var&gt; 是缓冲区，则此函数返回 &lt;code&gt;t&lt;/code&gt; ，否则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="73aa02dbc99c3f8528c963a84377fea719406153" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a built-in function (i.e., a Lisp primitive).</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a built-in function (i.e., a Lisp primitive).</target>
        </trans-unit>
        <trans-unit id="ce560a7f284af2f35d915582cac38e823a4875d8" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a byte-code function. For example:</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a byte-code function. For example:</target>
        </trans-unit>
        <trans-unit id="f6069daae8e79c8e066f120dcc78ce6688f87bd3" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a category table, otherwise &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a category table, otherwise &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0902644a963263e4aec9ef617529296ec950d18b" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a char-table, and &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a char-table, and &lt;code&gt;nil&lt;/code&gt; otherwise.</target>
        </trans-unit>
        <trans-unit id="89b49f06a8258e4bd56f292d69c25e07a719c1a8" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a coding system name or &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a coding system name or &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b77ff3e8b71dd2d4ac85d9663726c9b0542a6c6b" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a command. Otherwise, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a command. Otherwise, it returns &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2dcd385a104e86c5d28546df66160e31a0acee33" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a cons cell or &lt;code&gt;nil&lt;/code&gt;. Otherwise, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a cons cell or &lt;code&gt;nil&lt;/code&gt; . Otherwise, it returns &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="13b1c130f7fd87af4d081b2256887577505c3bce" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a cons cell, &lt;code&gt;nil&lt;/code&gt; otherwise. &lt;code&gt;nil&lt;/code&gt; is not a cons cell, although it &lt;em&gt;is&lt;/em&gt; a list.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a cons cell, &lt;code&gt;nil&lt;/code&gt; otherwise. &lt;code&gt;nil&lt;/code&gt; is not a cons cell, although it &lt;em&gt;is&lt;/em&gt; a list.</target>
        </trans-unit>
        <trans-unit id="1a995a4ea9db50a1cbd8b793611270a9128f2c97" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a keymap, &lt;code&gt;nil&lt;/code&gt; otherwise. More precisely, this function tests for a list whose &lt;small&gt;CAR&lt;/small&gt; is &lt;code&gt;keymap&lt;/code&gt;, or for a symbol whose function definition satisfies &lt;code&gt;keymapp&lt;/code&gt;.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a keymap, &lt;code&gt;nil&lt;/code&gt; otherwise. More precisely, this function tests for a list whose &lt;small&gt;CAR&lt;/small&gt; is &lt;code&gt;keymap&lt;/code&gt; , or for a symbol whose function definition satisfies &lt;code&gt;keymapp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2cda0ec46e06f888a16ef2eae4b98ae0088ffaa7" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a list, vector, string, bool-vector, or char-table, &lt;code&gt;nil&lt;/code&gt; otherwise. See also &lt;code&gt;seqp&lt;/code&gt; below.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a list, vector, string, bool-vector, or char-table, &lt;code&gt;nil&lt;/code&gt; otherwise. See also &lt;code&gt;seqp&lt;/code&gt; below.</target>
        </trans-unit>
        <trans-unit id="7fcf7a43584626518b8efbc89e93d30cfd18cd99" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a live buffer (a buffer which has not been killed), &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a live buffer (a buffer which has not been killed), &lt;code&gt;nil&lt;/code&gt; otherwise.</target>
        </trans-unit>
        <trans-unit id="c586f84ce4101a1518884f4dfb049741c2e68242" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a live window and &lt;code&gt;nil&lt;/code&gt; otherwise. A live window is one that displays a buffer.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a live window and &lt;code&gt;nil&lt;/code&gt; otherwise. A live window is one that displays a buffer.</target>
        </trans-unit>
        <trans-unit id="0b74fc844af30bdeddc6086687d1f628a17d57c3" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a live window, or an internal window in a window tree. Otherwise, it returns &lt;code&gt;nil&lt;/code&gt;, including for the case where &lt;var&gt;object&lt;/var&gt; is a deleted window.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a live window, or an internal window in a window tree. Otherwise, it returns &lt;code&gt;nil&lt;/code&gt; , including for the case where &lt;var&gt;object&lt;/var&gt; is a deleted window.</target>
        </trans-unit>
        <trans-unit id="cb0cd755cacf6ff2253132374368a65d93ce5468" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a marker, &lt;code&gt;nil&lt;/code&gt; otherwise. Note that integers are not markers, even though many functions will accept either a marker or an integer.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a marker, &lt;code&gt;nil&lt;/code&gt; otherwise. Note that integers are not markers, even though many functions will accept either a marker or an integer.</target>
        </trans-unit>
        <trans-unit id="b787ca7a6a56aa17047588a4876d85936bec4b90" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a number (either integer or floating point) or a marker, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a number (either integer or floating point) or a marker, &lt;code&gt;nil&lt;/code&gt; otherwise.</target>
        </trans-unit>
        <trans-unit id="401038d4fbe39e5d508d5e9b70176d02095f14a6" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a record.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a record.</target>
        </trans-unit>
        <trans-unit id="bc73152b0a09dd2998266c0b97f76970ca2be6d7" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a string or &lt;code&gt;nil&lt;/code&gt;. It returns &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a string or &lt;code&gt;nil&lt;/code&gt; . It returns &lt;code&gt;nil&lt;/code&gt; otherwise.</target>
        </trans-unit>
        <trans-unit id="15583d836b088142dd4ebd834c2247ca0f00f730" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a string or a character (i.e., an integer), &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a string or a character (i.e., an integer), &lt;code&gt;nil&lt;/code&gt; otherwise.</target>
        </trans-unit>
        <trans-unit id="a77ef16f1143f1a2c3264e3a7ce26c2b88a40a76" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a string, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a string, &lt;code&gt;nil&lt;/code&gt; otherwise.</target>
        </trans-unit>
        <trans-unit id="2f16d760d2d5da8521651cc14f644c4d674ca31a" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a symbol, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a symbol, &lt;code&gt;nil&lt;/code&gt; otherwise.</target>
        </trans-unit>
        <trans-unit id="431e8cb5738bfdb7266698c8a2100233aac2f515" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a syntax table.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a syntax table.</target>
        </trans-unit>
        <trans-unit id="ac478bd021abd38a2144115bd7ecffd98beca50c" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a vector.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a vector.</target>
        </trans-unit>
        <trans-unit id="f04f5608148adca5abddf24ef835551483a9cbfc" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a window (whether or not it displays a buffer). Otherwise, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a window (whether or not it displays a buffer). Otherwise, it returns &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="779dadf34d56f0b9496d5022c4752a217e50c030" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a window configuration.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a window configuration.</target>
        </trans-unit>
        <trans-unit id="081b43809571303e5a5a468747c81910fa880284" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is an array (i.e., a vector, a string, a bool-vector or a char-table).</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is an array (i.e., a vector, a string, a bool-vector or a char-table).</target>
        </trans-unit>
        <trans-unit id="f06d729c4b82d89e2a7da72710e5679352be3eac" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is an atom, &lt;code&gt;nil&lt;/code&gt; otherwise. All objects except cons cells are atoms. The symbol &lt;code&gt;nil&lt;/code&gt; is an atom and is also a list; it is the only Lisp object that is both.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is an atom, &lt;code&gt;nil&lt;/code&gt; otherwise. All objects except cons cells are atoms. The symbol &lt;code&gt;nil&lt;/code&gt; is an atom and is also a list; it is the only Lisp object that is both.</target>
        </trans-unit>
        <trans-unit id="fbddbb6fa8d78e5b0dbef7c6d334f97a6866850b" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is an integer or a marker, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is an integer or a marker, &lt;code&gt;nil&lt;/code&gt; otherwise.</target>
        </trans-unit>
        <trans-unit id="843156dc17aa12dfb5a0991519fb705e2fedb9e3" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is an overlay.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is an overlay.</target>
        </trans-unit>
        <trans-unit id="f43df371eae5a37235fdc8bbb22ac677d4422c2e" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is an xwidget, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is an xwidget, &lt;code&gt;nil&lt;/code&gt; otherwise.</target>
        </trans-unit>
        <trans-unit id="3fe954f1114594787b8e2892b1f70a2009100db3" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is any kind of function, i.e., can be passed to &lt;code&gt;funcall&lt;/code&gt;. Note that &lt;code&gt;functionp&lt;/code&gt; returns &lt;code&gt;t&lt;/code&gt; for symbols that are function names, and returns &lt;code&gt;nil&lt;/code&gt; for special forms.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is any kind of function, i.e., can be passed to &lt;code&gt;funcall&lt;/code&gt; . Note that &lt;code&gt;functionp&lt;/code&gt; returns &lt;code&gt;t&lt;/code&gt; for symbols that are function names, and returns &lt;code&gt;nil&lt;/code&gt; for special forms.</target>
        </trans-unit>
        <trans-unit id="a351f2eae58b34dbdbc1d2642122b8b33e47432f" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; represents a condition variable, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; represents a condition variable, &lt;code&gt;nil&lt;/code&gt; otherwise.</target>
        </trans-unit>
        <trans-unit id="3650be4954852e424baa89c9669cf67757afc803" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; represents an Emacs mutex, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; represents an Emacs mutex, &lt;code&gt;nil&lt;/code&gt; otherwise.</target>
        </trans-unit>
        <trans-unit id="7d922c4ccea5062a63df782c842da942108f7090" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; represents an Emacs process object, &lt;code&gt;nil&lt;/code&gt; otherwise. The process object can represent a subprocess running a program or a connection of any supported type.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; represents an Emacs process object, &lt;code&gt;nil&lt;/code&gt; otherwise. The process object can represent a subprocess running a program or a connection of any supported type.</target>
        </trans-unit>
        <trans-unit id="a1e898020ed668a1abe81070f31ba88b6328125d" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; represents an Emacs thread, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; represents an Emacs thread, &lt;code&gt;nil&lt;/code&gt; otherwise.</target>
        </trans-unit>
        <trans-unit id="2c60da72f0432402711b491b3a764b7642f7652b" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;regexp&lt;/var&gt; matches the text immediately before point (i.e., ending at point), and &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;regexp&lt;/var&gt; matches the text immediately before point (i.e., ending at point), and &lt;code&gt;nil&lt;/code&gt; otherwise.</target>
        </trans-unit>
        <trans-unit id="c792d563c4f703ec7a1a10ae6a9b66b58096da21" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;string1&lt;/var&gt; and &lt;var&gt;string2&lt;/var&gt; are equal with respect to collation rules. A collation rule is not only determined by the lexicographic order of the characters contained in &lt;var&gt;string1&lt;/var&gt; and &lt;var&gt;string2&lt;/var&gt;, but also further rules about relations between these characters. Usually, it is defined by the &lt;var&gt;locale&lt;/var&gt; environment Emacs is running with.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;string1&lt;/var&gt; and &lt;var&gt;string2&lt;/var&gt; are equal with respect to collation rules. A collation rule is not only determined by the lexicographic order of the characters contained in &lt;var&gt;string1&lt;/var&gt; and &lt;var&gt;string2&lt;/var&gt; , but also further rules about relations between these characters. Usually, it is defined by the &lt;var&gt;locale&lt;/var&gt; environment Emacs is running with.</target>
        </trans-unit>
        <trans-unit id="5b78f961be3e67c5c75d4f12e817a868b62dec1b" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;string1&lt;/var&gt; is less than &lt;var&gt;string2&lt;/var&gt; in collation order. A collation order is not only determined by the lexicographic order of the characters contained in &lt;var&gt;string1&lt;/var&gt; and &lt;var&gt;string2&lt;/var&gt;, but also further rules about relations between these characters. Usually, it is defined by the &lt;var&gt;locale&lt;/var&gt; environment Emacs is running with.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;string1&lt;/var&gt; is less than &lt;var&gt;string2&lt;/var&gt; in collation order. A collation order is not only determined by the lexicographic order of the characters contained in &lt;var&gt;string1&lt;/var&gt; and &lt;var&gt;string2&lt;/var&gt; , but also further rules about relations between these characters. Usually, it is defined by the &lt;var&gt;locale&lt;/var&gt; environment Emacs is running with.</target>
        </trans-unit>
        <trans-unit id="e21d4ed2921c9ca316a7724ef85fa046c618fde1" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;variable&lt;/var&gt; (a symbol) is not void, and &lt;code&gt;nil&lt;/code&gt; if it is void.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;variable&lt;/var&gt; (a symbol) is not void, and &lt;code&gt;nil&lt;/code&gt; if it is void.</target>
        </trans-unit>
        <trans-unit id="c60e02c922de1bd2c0fec4e03eda4a90e930f190" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;window&lt;/var&gt; is a minibuffer window. &lt;var&gt;window&lt;/var&gt; defaults to the selected window.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;window&lt;/var&gt; is a minibuffer window. &lt;var&gt;window&lt;/var&gt; defaults to the selected window.</target>
        </trans-unit>
        <trans-unit id="99baaf08579fe8fc9fe2d66fd22893f30ad8c1b5" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;window&lt;/var&gt; is located at &lt;var&gt;side&lt;/var&gt; of its containing frame. The argument &lt;var&gt;window&lt;/var&gt; must be a valid window and defaults to the selected one. The argument &lt;var&gt;side&lt;/var&gt; can be any of the symbols &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt; or &lt;code&gt;bottom&lt;/code&gt;. The default value &lt;code&gt;nil&lt;/code&gt; is handled like &lt;code&gt;bottom&lt;/code&gt;.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;window&lt;/var&gt; is located at &lt;var&gt;side&lt;/var&gt; of its containing frame. The argument &lt;var&gt;window&lt;/var&gt; must be a valid window and defaults to the selected one. The argument &lt;var&gt;side&lt;/var&gt; can be any of the symbols &lt;code&gt;left&lt;/code&gt; , &lt;code&gt;top&lt;/code&gt; , &lt;code&gt;right&lt;/code&gt; or &lt;code&gt;bottom&lt;/code&gt; . The default value &lt;code&gt;nil&lt;/code&gt; is handled like &lt;code&gt;bottom&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0c454ea6d2845a7642da3c0db67514ee9ab561bf" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;year&lt;/var&gt; is a leap year.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if &lt;var&gt;year&lt;/var&gt; is a leap year.</target>
        </trans-unit>
        <trans-unit id="fc2bb29a2f4052f45ebcf3c83edf63b0ace38fd7" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if Emacs ought to be able to display &lt;var&gt;char&lt;/var&gt;. More precisely, if the selected frame&amp;rsquo;s fontset has a font to display the character set that &lt;var&gt;char&lt;/var&gt; belongs to.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if Emacs ought to be able to display &lt;var&gt;char&lt;/var&gt; . More precisely, if the selected frame&amp;rsquo;s fontset has a font to display the character set that &lt;var&gt;char&lt;/var&gt; belongs to.</target>
        </trans-unit>
        <trans-unit id="fdc1db49a41cde009745324dc550207dbee92549" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if Transient Mark mode is enabled, the mark is active, and there is a valid region in the buffer. This function is intended to be used by commands that operate on the region, instead of on text near point, when the mark is active.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if Transient Mark mode is enabled, the mark is active, and there is a valid region in the buffer. This function is intended to be used by commands that operate on the region, instead of on text near point, when the mark is active.</target>
        </trans-unit>
        <trans-unit id="11e9e78e21b8ea6901428d9178f177ccd68c450f" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if a file named &lt;var&gt;filename&lt;/var&gt; appears to exist. This does not mean you can necessarily read the file, only that you can probably find out its attributes. (On GNU and other POSIX-like systems, this is true if the file exists and you have execute permission on the containing directories, regardless of the permissions of the file itself.)</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if a file named &lt;var&gt;filename&lt;/var&gt; appears to exist. This does not mean you can necessarily read the file, only that you can probably find out its attributes. (On GNU and other POSIX-like systems, this is true if the file exists and you have execute permission on the containing directories, regardless of the permissions of the file itself.)</target>
        </trans-unit>
        <trans-unit id="bcab7730a2179501aed1e97c646ca6633d84c1c1" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if a file named &lt;var&gt;filename&lt;/var&gt; exists and you can execute it. It returns &lt;code&gt;nil&lt;/code&gt; otherwise. On GNU and other POSIX-like systems, if the file is a directory, execute permission means you can check the existence and attributes of files inside the directory, and open those files if their modes permit.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if a file named &lt;var&gt;filename&lt;/var&gt; exists and you can execute it. It returns &lt;code&gt;nil&lt;/code&gt; otherwise. On GNU and other POSIX-like systems, if the file is a directory, execute permission means you can check the existence and attributes of files inside the directory, and open those files if their modes permit.</target>
        </trans-unit>
        <trans-unit id="25f1188491843dd0c76898edf6fd5944f73f64b8" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if a file named &lt;var&gt;filename&lt;/var&gt; exists and you can read it. It returns &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if a file named &lt;var&gt;filename&lt;/var&gt; exists and you can read it. It returns &lt;code&gt;nil&lt;/code&gt; otherwise.</target>
        </trans-unit>
        <trans-unit id="e32702f4cdd64bb421481499ee15548a5826078c" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if deleting the file &lt;var&gt;filename&lt;/var&gt; and then creating it anew would keep the file&amp;rsquo;s owner unchanged. It also returns &lt;code&gt;t&lt;/code&gt; for nonexistent files.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if deleting the file &lt;var&gt;filename&lt;/var&gt; and then creating it anew would keep the file&amp;rsquo;s owner unchanged. It also returns &lt;code&gt;t&lt;/code&gt; for nonexistent files.</target>
        </trans-unit>
        <trans-unit id="f63c0053d20fb2b4e88e41c1b47a7ff502b3415a" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if file &lt;var&gt;filename&lt;/var&gt; is an absolute file name, &lt;code&gt;nil&lt;/code&gt; otherwise. A file name is considered to be absolute if its first component is &amp;lsquo;</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if file &lt;var&gt;filename&lt;/var&gt; is an absolute file name, &lt;code&gt;nil&lt;/code&gt; otherwise. A file name is considered to be absolute if its first component is &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="1d23fb6011b52c6cf48afb4339afb397f6f43cd4" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if image &lt;var&gt;spec&lt;/var&gt; has a mask bitmap. &lt;var&gt;frame&lt;/var&gt; is the frame on which the image will be displayed. &lt;var&gt;frame&lt;/var&gt;&lt;code&gt;nil&lt;/code&gt; or omitted means to use the selected frame (see &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;).</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if image &lt;var&gt;spec&lt;/var&gt; has a mask bitmap. &lt;var&gt;frame&lt;/var&gt; is the frame on which the image will be displayed. &lt;var&gt;frame&lt;/var&gt; &lt;code&gt;nil&lt;/code&gt; or omitted means to use the selected frame (see &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="c06074c891fff3054db50692cab0f6a1e3cde8bc" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if it actually killed the buffer. It returns &lt;code&gt;nil&lt;/code&gt; if the user refuses to confirm or if &lt;var&gt;buffer-or-name&lt;/var&gt; was already dead.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if it actually killed the buffer. It returns &lt;code&gt;nil&lt;/code&gt; if the user refuses to confirm or if &lt;var&gt;buffer-or-name&lt;/var&gt; was already dead.</target>
        </trans-unit>
        <trans-unit id="0cde105cf135c2a32f2e4109cb7fada52bdc9cf4" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if its argument is a &lt;code&gt;user-ptr&lt;/code&gt; object.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if its argument is a &lt;code&gt;user-ptr&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="15e648bf23255ae6046ad734474fb9914e182230" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if point is at the beginning of a line. See &lt;a href=&quot;text-lines#Text-Lines&quot;&gt;Text Lines&lt;/a&gt;. The beginning of the buffer (or of its accessible portion) always counts as the beginning of a line.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if point is at the beginning of a line. See &lt;a href=&quot;text-lines#Text-Lines&quot;&gt;Text Lines&lt;/a&gt;. The beginning of the buffer (or of its accessible portion) always counts as the beginning of a line.</target>
        </trans-unit>
        <trans-unit id="5b3aa23024e03f6812a287fd25c9dabcd2d1bc0a" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if point is at the beginning of the buffer. If narrowing is in effect, this means the beginning of the accessible portion of the text. See also &lt;code&gt;point-min&lt;/code&gt; in &lt;a href=&quot;point#Point&quot;&gt;Point&lt;/a&gt;.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if point is at the beginning of the buffer. If narrowing is in effect, this means the beginning of the accessible portion of the text. See also &lt;code&gt;point-min&lt;/code&gt; in &lt;a href=&quot;point#Point&quot;&gt;Point&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="b6faeb80842f9c937a6b67220abb7913cf443fd4" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if point is at the end of a line. The end of the buffer (or of its accessible portion) is always considered the end of a line.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if point is at the end of a line. The end of the buffer (or of its accessible portion) is always considered the end of a line.</target>
        </trans-unit>
        <trans-unit id="7d64fbc72ff09a83e94695c91d1fc779274eab32" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if point is at the end of the buffer. If narrowing is in effect, this means the end of accessible portion of the text. See also &lt;code&gt;point-max&lt;/code&gt; in See &lt;a href=&quot;point#Point&quot;&gt;Point&lt;/a&gt;.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if point is at the end of the buffer. If narrowing is in effect, this means the end of accessible portion of the text. See also &lt;code&gt;point-max&lt;/code&gt; in See &lt;a href=&quot;point#Point&quot;&gt;Point&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="12583b13ba52c65dc576014c70865ec1977fe794" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if popup menus are supported on &lt;var&gt;display&lt;/var&gt;, &lt;code&gt;nil&lt;/code&gt; if not. Support for popup menus requires that the mouse be available, since the menu is popped up by clicking the mouse on some portion of the Emacs display.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if popup menus are supported on &lt;var&gt;display&lt;/var&gt; , &lt;code&gt;nil&lt;/code&gt; if not. Support for popup menus requires that the mouse be available, since the menu is popped up by clicking the mouse on some portion of the Emacs display.</target>
        </trans-unit>
        <trans-unit id="3c45676237a70c9373298e1a10b3ba0f2a8be008" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if the arguments represent the same character, &lt;code&gt;nil&lt;/code&gt; otherwise. This function ignores differences in case if &lt;code&gt;case-fold-search&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if the arguments represent the same character, &lt;code&gt;nil&lt;/code&gt; otherwise. This function ignores differences in case if &lt;code&gt;case-fold-search&lt;/code&gt; is non- &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a3d4bd28ebc0370c18d8cb25a3c37311ec49f27e" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if the buffer &lt;var&gt;buffer&lt;/var&gt; has been modified since it was last read in from a file or saved, or &lt;code&gt;nil&lt;/code&gt; otherwise. If &lt;var&gt;buffer&lt;/var&gt; is not supplied, the current buffer is tested.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if the buffer &lt;var&gt;buffer&lt;/var&gt; has been modified since it was last read in from a file or saved, or &lt;code&gt;nil&lt;/code&gt; otherwise. If &lt;var&gt;buffer&lt;/var&gt; is not supplied, the current buffer is tested.</target>
        </trans-unit>
        <trans-unit id="74d9707e21509533443a272de40defda55ee674f" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if the characters of the two strings match exactly. Symbols are also allowed as arguments, in which case the symbol names are used. Case is always significant, regardless of &lt;code&gt;case-fold-search&lt;/code&gt;.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if the characters of the two strings match exactly. Symbols are also allowed as arguments, in which case the symbol names are used. Case is always significant, regardless of &lt;code&gt;case-fold-search&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0f1ee55be1fdb351c75f12ad6287f27d6ac9f409" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if the current buffer has been auto-saved since the last time it was read in or saved.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if the current buffer has been auto-saved since the last time it was read in or saved.</target>
        </trans-unit>
        <trans-unit id="c4545c3355cd22f95c272a21f47b27c6a1ec4790" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if the file &lt;var&gt;filename1&lt;/var&gt; is newer than file &lt;var&gt;filename2&lt;/var&gt;. If &lt;var&gt;filename1&lt;/var&gt; does not exist, it returns &lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;filename1&lt;/var&gt; does exist, but &lt;var&gt;filename2&lt;/var&gt; does not, it returns &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if the file &lt;var&gt;filename1&lt;/var&gt; is newer than file &lt;var&gt;filename2&lt;/var&gt; . If &lt;var&gt;filename1&lt;/var&gt; does not exist, it returns &lt;code&gt;nil&lt;/code&gt; . If &lt;var&gt;filename1&lt;/var&gt; does exist, but &lt;var&gt;filename2&lt;/var&gt; does not, it returns &lt;code&gt;t&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7a207a78ef7c0687705477b67a8a7015f82b3e6f" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if the file &lt;var&gt;filename&lt;/var&gt; can be written or created by you, and &lt;code&gt;nil&lt;/code&gt; otherwise. A file is writable if the file exists and you can write it. It is creatable if it does not exist, but its parent directory does exist and you can write in that directory.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if the file &lt;var&gt;filename&lt;/var&gt; can be written or created by you, and &lt;code&gt;nil&lt;/code&gt; otherwise. A file is writable if the file exists and you can write it. It is creatable if it does not exist, but its parent directory does exist and you can write in that directory.</target>
        </trans-unit>
        <trans-unit id="8d1b88fbe2915d03fc30f3b1f01a8a5097a44bf2" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if the file &lt;var&gt;filename&lt;/var&gt; exists and is a regular file (not a directory, named pipe, terminal, or other I/O device). It returns &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;filename&lt;/var&gt; does not exist or is not a regular file, or if there is trouble determining whether it is a regular file. This function follows symbolic links.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if the file &lt;var&gt;filename&lt;/var&gt; exists and is a regular file (not a directory, named pipe, terminal, or other I/O device). It returns &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;filename&lt;/var&gt; does not exist or is not a regular file, or if there is trouble determining whether it is a regular file. This function follows symbolic links.</target>
        </trans-unit>
        <trans-unit id="712e788674a648fb78b0241c5b698f061ea4687e" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if the files &lt;var&gt;file1&lt;/var&gt; and &lt;var&gt;file2&lt;/var&gt; name the same file. This is similar to comparing their truenames, except that remote file names are also handled in an appropriate manner. If &lt;var&gt;file1&lt;/var&gt; or &lt;var&gt;file2&lt;/var&gt; does not exist, the return value is unspecified.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if the files &lt;var&gt;file1&lt;/var&gt; and &lt;var&gt;file2&lt;/var&gt; name the same file. This is similar to comparing their truenames, except that remote file names are also handled in an appropriate manner. If &lt;var&gt;file1&lt;/var&gt; or &lt;var&gt;file2&lt;/var&gt; does not exist, the return value is unspecified.</target>
        </trans-unit>
        <trans-unit id="71e95d3faec286a4aec6799a53c5a044b733f0fa" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if the screen can display shades of gray. (All color displays can do this.)</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if the screen can display shades of gray. (All color displays can do this.)</target>
        </trans-unit>
        <trans-unit id="01c6aa3bb89086725475a995fdac99da4c048043" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if the screen is a color screen. It used to be called &lt;code&gt;x-display-color-p&lt;/code&gt;, and that name is still supported as an alias.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if the screen is a color screen. It used to be called &lt;code&gt;x-display-color-p&lt;/code&gt; , and that name is still supported as an alias.</target>
        </trans-unit>
        <trans-unit id="a658ecdd2a7da22021a035ac7c7ec8f6d5212d55" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if the selected window is the only live window, and &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if the selected window is the only live window, and &lt;code&gt;nil&lt;/code&gt; otherwise.</target>
        </trans-unit>
        <trans-unit id="e6976e0d8b9034067d4569c6576de640b8f71941" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if the symbol has an object in its function cell, &lt;code&gt;nil&lt;/code&gt; otherwise. It does not check that the object is a legitimate function.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if the symbol has an object in its function cell, &lt;code&gt;nil&lt;/code&gt; otherwise. It does not check that the object is a legitimate function.</target>
        </trans-unit>
        <trans-unit id="6ff47bbc552a2354c103f82af312645fc92f19e9" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; if you have permission to open existing files in the directory whose name as a file is &lt;var&gt;dirname&lt;/var&gt;; otherwise (e.g., if there is no such directory), it returns &lt;code&gt;nil&lt;/code&gt;. The value of &lt;var&gt;dirname&lt;/var&gt; may be either a directory name (such as</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; if you have permission to open existing files in the directory whose name as a file is &lt;var&gt;dirname&lt;/var&gt; ; otherwise (e.g., if there is no such directory), it returns &lt;code&gt;nil&lt;/code&gt; . The value of &lt;var&gt;dirname&lt;/var&gt; may be either a directory name (such as</target>
        </trans-unit>
        <trans-unit id="64b8b57d01ee2bb3733b81b9844e5d61e9ee8820" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;t&lt;/code&gt; when the calling function was called using &lt;code&gt;call-interactively&lt;/code&gt;.</source>
          <target state="translated">This function returns &lt;code&gt;t&lt;/code&gt; when the calling function was called using &lt;code&gt;call-interactively&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="57cd5bee4d4dda7796b1d48647a6ab4a185a6364" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;true&lt;/code&gt; if the Lisp objects represented by &lt;var&gt;val1&lt;/var&gt; and &lt;var&gt;val2&lt;/var&gt; are identical, &lt;code&gt;false&lt;/code&gt; otherwise. This is the same as the Lisp function &lt;code&gt;eq&lt;/code&gt; (see &lt;a href=&quot;equality-predicates#Equality-Predicates&quot;&gt;Equality Predicates&lt;/a&gt;), but avoids the need to intern the objects represented by the arguments.</source>
          <target state="translated">This function returns &lt;code&gt;true&lt;/code&gt; if the Lisp objects represented by &lt;var&gt;val1&lt;/var&gt; and &lt;var&gt;val2&lt;/var&gt; are identical, &lt;code&gt;false&lt;/code&gt; otherwise. This is the same as the Lisp function &lt;code&gt;eq&lt;/code&gt; (see &lt;a href=&quot;equality-predicates#Equality-Predicates&quot;&gt;Equality Predicates&lt;/a&gt;), but avoids the need to intern the objects represented by the arguments.</target>
        </trans-unit>
        <trans-unit id="762e475f3a128f1fe74e97d90424eb119aa13c40" translate="yes" xml:space="preserve">
          <source>This function returns &lt;code&gt;true&lt;/code&gt; if the user wants to quit. In that case, we recommend that your module function aborts any on-going processing and returns as soon as possible. In most cases, use &lt;code&gt;process_input&lt;/code&gt; instead.</source>
          <target state="translated">This function returns &lt;code&gt;true&lt;/code&gt; if the user wants to quit. In that case, we recommend that your module function aborts any on-going processing and returns as soon as possible. In most cases, use &lt;code&gt;process_input&lt;/code&gt; instead.</target>
        </trans-unit>
        <trans-unit id="cc6f7fb13b4ba82ebc28a77c8933242881aeadae" translate="yes" xml:space="preserve">
          <source>This function returns &lt;var&gt;argument&lt;/var&gt; and has no side effects.</source>
          <target state="translated">This function returns &lt;var&gt;argument&lt;/var&gt; and has no side effects.</target>
        </trans-unit>
        <trans-unit id="99c9d85041a2440b484a8c63fe44caa574d84781" translate="yes" xml:space="preserve">
          <source>This function returns &lt;var&gt;base-variable&lt;/var&gt;.</source>
          <target state="translated">This function returns &lt;var&gt;base-variable&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="2237577b51368bd5ad978ca0df9800b0c989e318" translate="yes" xml:space="preserve">
          <source>This function returns &lt;var&gt;buffer&lt;/var&gt;&amp;rsquo;s character-change modification-count. Changes to text properties leave this counter unchanged; however, each time text is inserted or removed from the buffer, the counter is reset to the value that would be returned by &lt;code&gt;buffer-modified-tick&lt;/code&gt;. By comparing the values returned by two &lt;code&gt;buffer-chars-modified-tick&lt;/code&gt; calls, you can tell whether a character change occurred in that buffer in between the calls. If &lt;var&gt;buffer&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; (or omitted), the current buffer is used.</source>
          <target state="translated">This function returns &lt;var&gt;buffer&lt;/var&gt; &amp;rsquo;s character-change modification-count. Changes to text properties leave this counter unchanged; however, each time text is inserted or removed from the buffer, the counter is reset to the value that would be returned by &lt;code&gt;buffer-modified-tick&lt;/code&gt; . By comparing the values returned by two &lt;code&gt;buffer-chars-modified-tick&lt;/code&gt; calls, you can tell whether a character change occurred in that buffer in between the calls. If &lt;var&gt;buffer&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; (or omitted), the current buffer is used.</target>
        </trans-unit>
        <trans-unit id="75378fc9cd0d8e018f3fe9abab8bf9ac22ea2e51" translate="yes" xml:space="preserve">
          <source>This function returns &lt;var&gt;buffer&lt;/var&gt;&amp;rsquo;s modification-count. This is a counter that increments every time the buffer is modified. If &lt;var&gt;buffer&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; (or omitted), the current buffer is used.</source>
          <target state="translated">This function returns &lt;var&gt;buffer&lt;/var&gt; &amp;rsquo;s modification-count. This is a counter that increments every time the buffer is modified. If &lt;var&gt;buffer&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; (or omitted), the current buffer is used.</target>
        </trans-unit>
        <trans-unit id="98a2cc8513983ff886a63cee32466d4e22820dab" translate="yes" xml:space="preserve">
          <source>This function returns &lt;var&gt;data&lt;/var&gt;.</source>
          <target state="translated">This function returns &lt;var&gt;data&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="ca31e866ad6325924c745fa1e1668467d2f168d3" translate="yes" xml:space="preserve">
          <source>This function returns &lt;var&gt;delta&lt;/var&gt; if the size of &lt;var&gt;window&lt;/var&gt; can be changed vertically by &lt;var&gt;delta&lt;/var&gt; lines. If the optional argument &lt;var&gt;horizontal&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it instead returns &lt;var&gt;delta&lt;/var&gt; if &lt;var&gt;window&lt;/var&gt; can be resized horizontally by &lt;var&gt;delta&lt;/var&gt; columns. It does not actually change the window size.</source>
          <target state="translated">This function returns &lt;var&gt;delta&lt;/var&gt; if the size of &lt;var&gt;window&lt;/var&gt; can be changed vertically by &lt;var&gt;delta&lt;/var&gt; lines. If the optional argument &lt;var&gt;horizontal&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , it instead returns &lt;var&gt;delta&lt;/var&gt; if &lt;var&gt;window&lt;/var&gt; can be resized horizontally by &lt;var&gt;delta&lt;/var&gt; columns. It does not actually change the window size.</target>
        </trans-unit>
        <trans-unit id="c80c7cb0aead050d36995ca603ec0cb7d4930671" translate="yes" xml:space="preserve">
          <source>This function returns &lt;var&gt;filename&lt;/var&gt; minus its extension, if any. The version/backup part, if present, is only removed if the file has an extension. For example,</source>
          <target state="translated">This function returns &lt;var&gt;filename&lt;/var&gt; minus its extension, if any. The version/backup part, if present, is only removed if the file has an extension. For example,</target>
        </trans-unit>
        <trans-unit id="74b20fcbe72c73a481ac3619ea66bc8762e036a9" translate="yes" xml:space="preserve">
          <source>This function returns &lt;var&gt;filename&lt;/var&gt; with any file version numbers, backup version numbers, or trailing tildes discarded.</source>
          <target state="translated">This function returns &lt;var&gt;filename&lt;/var&gt; with any file version numbers, backup version numbers, or trailing tildes discarded.</target>
        </trans-unit>
        <trans-unit id="119cb3248ce758f332f9f99319f0bab6a767c39a" translate="yes" xml:space="preserve">
          <source>This function returns &lt;var&gt;filename&lt;/var&gt;&amp;rsquo;s final extension, if any, after applying &lt;code&gt;file-name-sans-versions&lt;/code&gt; to remove any version/backup part. The extension, in a file name, is the part that follows the last &amp;lsquo;</source>
          <target state="translated">This function returns &lt;var&gt;filename&lt;/var&gt; &amp;rsquo;s final extension, if any, after applying &lt;code&gt;file-name-sans-versions&lt;/code&gt; to remove any version/backup part. The extension, in a file name, is the part that follows the last &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="550e3f909a903b8c7b1bf86f20b28a60976a00f9" translate="yes" xml:space="preserve">
          <source>This function returns &lt;var&gt;frame&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;frame&lt;/var&gt; has been deleted.</source>
          <target state="translated">This function returns &lt;var&gt;frame&lt;/var&gt; , or &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;frame&lt;/var&gt; has been deleted.</target>
        </trans-unit>
        <trans-unit id="741d4855dfbe25fcfd0f79e5303cc6f6a97bd05c" translate="yes" xml:space="preserve">
          <source>This function returns &lt;var&gt;number-or-marker&lt;/var&gt; minus 1.</source>
          <target state="translated">This function returns &lt;var&gt;number-or-marker&lt;/var&gt; minus 1.</target>
        </trans-unit>
        <trans-unit id="ea652122a239d4955c6f57210504ade0dcac80f4" translate="yes" xml:space="preserve">
          <source>This function returns &lt;var&gt;number-or-marker&lt;/var&gt; plus 1. For example,</source>
          <target state="translated">This function returns &lt;var&gt;number-or-marker&lt;/var&gt; plus 1. For example,</target>
        </trans-unit>
        <trans-unit id="d13cffe36a180c9be2d83357832b9b2f67b2cb55" translate="yes" xml:space="preserve">
          <source>This function returns &lt;var&gt;symbol&lt;/var&gt;&amp;rsquo;s default value. This is the value that is seen in buffers and frames that do not have their own values for this variable. If &lt;var&gt;symbol&lt;/var&gt; is not buffer-local, this is equivalent to &lt;code&gt;symbol-value&lt;/code&gt; (see &lt;a href=&quot;accessing-variables#Accessing-Variables&quot;&gt;Accessing Variables&lt;/a&gt;).</source>
          <target state="translated">This function returns &lt;var&gt;symbol&lt;/var&gt; &amp;rsquo;s default value. This is the value that is seen in buffers and frames that do not have their own values for this variable. If &lt;var&gt;symbol&lt;/var&gt; is not buffer-local, this is equivalent to &lt;code&gt;symbol-value&lt;/code&gt; (see &lt;a href=&quot;accessing-variables#Accessing-Variables&quot;&gt;Accessing Variables&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="69df0a715ad1efc826d30e24515c02c685c000d1" translate="yes" xml:space="preserve">
          <source>This function returns &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s display table, or &lt;code&gt;nil&lt;/code&gt; if there is none. The default for &lt;var&gt;window&lt;/var&gt; is the selected window.</source>
          <target state="translated">This function returns &lt;var&gt;window&lt;/var&gt; &amp;rsquo;s display table, or &lt;code&gt;nil&lt;/code&gt; if there is none. The default for &lt;var&gt;window&lt;/var&gt; is the selected window.</target>
        </trans-unit>
        <trans-unit id="959021d141cb503d8fd0190dde181298324421c3" translate="yes" xml:space="preserve">
          <source>This function returns &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s value for &lt;var&gt;parameter&lt;/var&gt;. The default for &lt;var&gt;window&lt;/var&gt; is the selected window. If &lt;var&gt;window&lt;/var&gt; has no setting for &lt;var&gt;parameter&lt;/var&gt;, this function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">This function returns &lt;var&gt;window&lt;/var&gt; &amp;rsquo;s value for &lt;var&gt;parameter&lt;/var&gt; . The default for &lt;var&gt;window&lt;/var&gt; is the selected window. If &lt;var&gt;window&lt;/var&gt; has no setting for &lt;var&gt;parameter&lt;/var&gt; , this function returns &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="736469f13c5e8aa3db112442ae872e3e19668a60" translate="yes" xml:space="preserve">
          <source>This function returns &lt;var&gt;x&lt;/var&gt; raised to power &lt;var&gt;y&lt;/var&gt;. If both arguments are integers and &lt;var&gt;y&lt;/var&gt; is nonnegative, the result is an integer; in this case, overflow signals an error, so watch out. If &lt;var&gt;x&lt;/var&gt; is a finite negative number and &lt;var&gt;y&lt;/var&gt; is a finite non-integer, &lt;code&gt;expt&lt;/code&gt; returns a NaN.</source>
          <target state="translated">This function returns &lt;var&gt;x&lt;/var&gt; raised to power &lt;var&gt;y&lt;/var&gt; . If both arguments are integers and &lt;var&gt;y&lt;/var&gt; is nonnegative, the result is an integer; in this case, overflow signals an error, so watch out. If &lt;var&gt;x&lt;/var&gt; is a finite negative number and &lt;var&gt;y&lt;/var&gt; is a finite non-integer, &lt;code&gt;expt&lt;/code&gt; returns a NaN.</target>
        </trans-unit>
        <trans-unit id="af6fa282c5ba633d5f8047ef4b86d3477e0f01c8" translate="yes" xml:space="preserve">
          <source>This function returns a &amp;ldquo;flattened&amp;rdquo; copy of &lt;var&gt;tree&lt;/var&gt;, that is, a list containing all the non-&lt;code&gt;nil&lt;/code&gt; terminal nodes, or leaves, of the tree of cons cells rooted at &lt;var&gt;tree&lt;/var&gt;. Leaves in the returned list are in the same order as in &lt;var&gt;tree&lt;/var&gt;.</source>
          <target state="translated">This function returns a &amp;ldquo;flattened&amp;rdquo; copy of &lt;var&gt;tree&lt;/var&gt; , that is, a list containing all the non- &lt;code&gt;nil&lt;/code&gt; terminal nodes, or leaves, of the tree of cons cells rooted at &lt;var&gt;tree&lt;/var&gt; . Leaves in the returned list are in the same order as in &lt;var&gt;tree&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="b135cad344b381010a82bf119fc9ffa80e15ed72" translate="yes" xml:space="preserve">
          <source>This function returns a buffer named &lt;var&gt;buffer-or-name&lt;/var&gt;. The buffer returned does not become the current buffer&amp;mdash;this function does not change which buffer is current.</source>
          <target state="translated">This function returns a buffer named &lt;var&gt;buffer-or-name&lt;/var&gt; . The buffer returned does not become the current buffer&amp;mdash;this function does not change which buffer is current.</target>
        </trans-unit>
        <trans-unit id="431b2a16b1fb1ce25728058391eb8bb801eb198a" translate="yes" xml:space="preserve">
          <source>This function returns a byte array packed according to &lt;var&gt;spec&lt;/var&gt; from the data in the alist &lt;var&gt;struct&lt;/var&gt;. It normally creates and fills a new byte array starting at the beginning. However, if &lt;var&gt;bindat-raw&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it specifies a pre-allocated unibyte string or vector to pack into. If &lt;var&gt;bindat-idx&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it specifies the starting offset for packing into &lt;code&gt;bindat-raw&lt;/code&gt;.</source>
          <target state="translated">This function returns a byte array packed according to &lt;var&gt;spec&lt;/var&gt; from the data in the alist &lt;var&gt;struct&lt;/var&gt; . It normally creates and fills a new byte array starting at the beginning. However, if &lt;var&gt;bindat-raw&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , it specifies a pre-allocated unibyte string or vector to pack into. If &lt;var&gt;bindat-idx&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , it specifies the starting offset for packing into &lt;code&gt;bindat-raw&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="58b4506fef4cff7a16e2f3e039b83098aa6623d2" translate="yes" xml:space="preserve">
          <source>This function returns a category name (a character) which is not currently defined in &lt;var&gt;table&lt;/var&gt;. If all possible categories are in use in &lt;var&gt;table&lt;/var&gt;, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">This function returns a category name (a character) which is not currently defined in &lt;var&gt;table&lt;/var&gt; . If all possible categories are in use in &lt;var&gt;table&lt;/var&gt; , it returns &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7e4dfe8681cd637bc5c711d18de3404bf0ddd5ba" translate="yes" xml:space="preserve">
          <source>This function returns a coding system which is like &lt;var&gt;coding-system&lt;/var&gt; except for its eol conversion, which is specified by &lt;code&gt;eol-type&lt;/code&gt;. &lt;var&gt;eol-type&lt;/var&gt; should be &lt;code&gt;unix&lt;/code&gt;, &lt;code&gt;dos&lt;/code&gt;, &lt;code&gt;mac&lt;/code&gt;, or &lt;code&gt;nil&lt;/code&gt;. If it is &lt;code&gt;nil&lt;/code&gt;, the returned coding system determines the end-of-line conversion from the data.</source>
          <target state="translated">This function returns a coding system which is like &lt;var&gt;coding-system&lt;/var&gt; except for its eol conversion, which is specified by &lt;code&gt;eol-type&lt;/code&gt; . &lt;var&gt;eol-type&lt;/var&gt; should be &lt;code&gt;unix&lt;/code&gt; , &lt;code&gt;dos&lt;/code&gt; , &lt;code&gt;mac&lt;/code&gt; , or &lt;code&gt;nil&lt;/code&gt; . If it is &lt;code&gt;nil&lt;/code&gt; , the returned coding system determines the end-of-line conversion from the data.</target>
        </trans-unit>
        <trans-unit id="d573dd395702655f02e68bda06d9e0752cf44060" translate="yes" xml:space="preserve">
          <source>This function returns a coding system which uses the end-of-line conversion of &lt;var&gt;eol-coding&lt;/var&gt;, and the text conversion of &lt;var&gt;text-coding&lt;/var&gt;. If &lt;var&gt;text-coding&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it returns &lt;code&gt;undecided&lt;/code&gt;, or one of its variants according to &lt;var&gt;eol-coding&lt;/var&gt;.</source>
          <target state="translated">This function returns a coding system which uses the end-of-line conversion of &lt;var&gt;eol-coding&lt;/var&gt; , and the text conversion of &lt;var&gt;text-coding&lt;/var&gt; . If &lt;var&gt;text-coding&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; , it returns &lt;code&gt;undecided&lt;/code&gt; , or one of its variants according to &lt;var&gt;eol-coding&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="bcfe4de043ce6f1d186d53048811952d3006b8f6" translate="yes" xml:space="preserve">
          <source>This function returns a cons cell (&lt;var&gt;x&lt;/var&gt; . &lt;var&gt;y&lt;/var&gt;) of the coordinates of the mouse cursor position in pixels, relative to a position (0, 0) of the selected frame&amp;rsquo;s display.</source>
          <target state="translated">This function returns a cons cell ( &lt;var&gt;x&lt;/var&gt; . &lt;var&gt;y&lt;/var&gt; ) of the coordinates of the mouse cursor position in pixels, relative to a position (0, 0) of the selected frame&amp;rsquo;s display.</target>
        </trans-unit>
        <trans-unit id="2aa732f27f3acd1750c1f65bb88cb4bae3b0eabf" translate="yes" xml:space="preserve">
          <source>This function returns a cons cell &lt;code&gt;(&lt;var&gt;col&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&amp;nbsp;&lt;var&gt;row&lt;/var&gt;)&lt;/code&gt;, containing the estimated column and row corresponding to buffer position described by &lt;var&gt;position&lt;/var&gt;. The return value is given in units of the frame&amp;rsquo;s default character width and default line height (including spacing), as computed from the &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; values corresponding to &lt;var&gt;position&lt;/var&gt;. (So, if the actual characters have non-default sizes, the actual row and column may differ from these computed values.)</source>
          <target state="translated">This function returns a cons cell &lt;code&gt;(&lt;var&gt;col&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&amp;nbsp;&lt;var&gt;row&lt;/var&gt;)&lt;/code&gt; , containing the estimated column and row corresponding to buffer position described by &lt;var&gt;position&lt;/var&gt; . The return value is given in units of the frame&amp;rsquo;s default character width and default line height (including spacing), as computed from the &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; values corresponding to &lt;var&gt;position&lt;/var&gt; . (So, if the actual characters have non-default sizes, the actual row and column may differ from these computed values.)</target>
        </trans-unit>
        <trans-unit id="11b8f13ac2d9f1405c4d6120e705843077c8687e" translate="yes" xml:space="preserve">
          <source>This function returns a cons cell &lt;code&gt;(&lt;var&gt;decode&lt;/var&gt; . &lt;var&gt;encode&lt;/var&gt;)&lt;/code&gt;, describing the coding systems in use for decoding output from, and encoding input to, &lt;var&gt;process&lt;/var&gt; (see &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Coding Systems&lt;/a&gt;).</source>
          <target state="translated">This function returns a cons cell &lt;code&gt;(&lt;var&gt;decode&lt;/var&gt; . &lt;var&gt;encode&lt;/var&gt;)&lt;/code&gt; , describing the coding systems in use for decoding output from, and encoding input to, &lt;var&gt;process&lt;/var&gt; (see &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Coding Systems&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="4f89f67ab404758aff0602adfe80b04225382557" translate="yes" xml:space="preserve">
          <source>This function returns a cons cell &lt;code&gt;(&lt;var&gt;s&lt;/var&gt; . &lt;var&gt;e&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;s&lt;/var&gt; and &lt;var&gt;e&lt;/var&gt; are respectively the significand and exponent of the floating-point number &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="translated">This function returns a cons cell &lt;code&gt;(&lt;var&gt;s&lt;/var&gt; . &lt;var&gt;e&lt;/var&gt;)&lt;/code&gt; , where &lt;var&gt;s&lt;/var&gt; and &lt;var&gt;e&lt;/var&gt; are respectively the significand and exponent of the floating-point number &lt;var&gt;x&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="79d5a813e21b18a2854f110bb5aecb371fe0f951" translate="yes" xml:space="preserve">
          <source>This function returns a copy of &lt;var&gt;abbrev-table&lt;/var&gt;&amp;mdash;a new abbrev table containing the same abbrev definitions. It does &lt;em&gt;not&lt;/em&gt; copy any property lists; only the names, values, and functions.</source>
          <target state="translated">This function returns a copy of &lt;var&gt;abbrev-table&lt;/var&gt; &amp;mdash;a new abbrev table containing the same abbrev definitions. It does &lt;em&gt;not&lt;/em&gt; copy any property lists; only the names, values, and functions.</target>
        </trans-unit>
        <trans-unit id="5fec4285fa060dfefcd6fb7e0b5ccfdc231f49cd" translate="yes" xml:space="preserve">
          <source>This function returns a copy of &lt;var&gt;keymap&lt;/var&gt;. This is almost never needed. If you want a keymap that&amp;rsquo;s like another yet with a few changes, you should use map inheritance rather than copying. I.e., something like:</source>
          <target state="translated">This function returns a copy of &lt;var&gt;keymap&lt;/var&gt; . This is almost never needed. If you want a keymap that&amp;rsquo;s like another yet with a few changes, you should use map inheritance rather than copying. I.e., something like:</target>
        </trans-unit>
        <trans-unit id="16f65ca1330e50cfcf84ed5032fb2ff78a4866d7" translate="yes" xml:space="preserve">
          <source>This function returns a copy of &lt;var&gt;list&lt;/var&gt;, with all elements removed which are &lt;code&gt;eq&lt;/code&gt; to &lt;var&gt;object&lt;/var&gt;. The letter &amp;lsquo;</source>
          <target state="translated">此函数返回 &lt;var&gt;list&lt;/var&gt; 的副本，其中删除了所有与 &lt;var&gt;object&lt;/var&gt; &lt;code&gt;eq&lt;/code&gt; 相同的元素。字母'</target>
        </trans-unit>
        <trans-unit id="8db68d319bed54d08cb770b979cf5f5e7281c74c" translate="yes" xml:space="preserve">
          <source>This function returns a copy of &lt;var&gt;overlay&lt;/var&gt;. The copy has the same endpoints and properties as &lt;var&gt;overlay&lt;/var&gt;. However, the marker insertion type for the start of the overlay and for the end of the overlay are set to their default values (see &lt;a href=&quot;marker-insertion-types#Marker-Insertion-Types&quot;&gt;Marker Insertion Types&lt;/a&gt;).</source>
          <target state="translated">此函数返回 &lt;var&gt;overlay&lt;/var&gt; 的副本。该副本具有与 &lt;var&gt;overlay&lt;/var&gt; 相同的端点和属性。但是，叠加层开始和叠加层结束处的&lt;a href=&quot;marker-insertion-types#Marker-Insertion-Types&quot;&gt;标记插入类型&lt;/a&gt;被设置为其默认值（请参见标记插入类型）。</target>
        </trans-unit>
        <trans-unit id="1236e898e148224098bb84bde5b8af2189364ae2" translate="yes" xml:space="preserve">
          <source>This function returns a copy of &lt;var&gt;seqr&lt;/var&gt;, which should be either a sequence or a record. The copy is the same type of object as the original, and it has the same elements in the same order. However, if &lt;var&gt;seqr&lt;/var&gt; is empty, like a string or a vector of zero length, the value returned by this function might not be a copy, but an empty object of the same type and identical to &lt;var&gt;seqr&lt;/var&gt;.</source>
          <target state="translated">此函数返回 &lt;var&gt;seqr&lt;/var&gt; 的副本，该副本应该是序列或记录。副本是与原始对象相同的对象类型，并且具有相同的元素且顺序相同。但是，如果 &lt;var&gt;seqr&lt;/var&gt; 为空，例如字符串或长度为零的向量，则此函数返回的值可能不是副本，而是与 &lt;var&gt;seqr&lt;/var&gt; 相同类型且相同的空对象。</target>
        </trans-unit>
        <trans-unit id="2136d5ce06c25f4f15c70492397af72367f6a56e" translate="yes" xml:space="preserve">
          <source>This function returns a copy of &lt;var&gt;sequence&lt;/var&gt; that is sorted according to &lt;var&gt;function&lt;/var&gt;, a function of two arguments that returns non-&lt;code&gt;nil&lt;/code&gt; if the first argument should sort before the second.</source>
          <target state="translated">该函数返回的副本 &lt;var&gt;sequence&lt;/var&gt; 是按照排序的 &lt;var&gt;function&lt;/var&gt; ，两个参数的函数，返回非 &lt;code&gt;nil&lt;/code&gt; 如果第一个参数应排在第二个之前。</target>
        </trans-unit>
        <trans-unit id="a4a114e8397d0238ddb6836c366c6acc8a4595f9" translate="yes" xml:space="preserve">
          <source>This function returns a copy of &lt;var&gt;string&lt;/var&gt; with the text properties &lt;var&gt;properties&lt;/var&gt; added. These properties apply to all the characters in the string that is returned. Here is an example that constructs a string with a &lt;code&gt;face&lt;/code&gt; property and a &lt;code&gt;mouse-face&lt;/code&gt; property:</source>
          <target state="translated">此函数返回添加了文本属性 &lt;var&gt;properties&lt;/var&gt; 的 &lt;var&gt;string&lt;/var&gt; 副本。这些属性适用于返回的字符串中的所有字符。这是一个使用 &lt;code&gt;face&lt;/code&gt; 属性和 &lt;code&gt;mouse-face&lt;/code&gt; 属性构造字符串的示例：</target>
        </trans-unit>
        <trans-unit id="7ccb64ba9a1addad7fa6c2f5b9da8617726cb9ce" translate="yes" xml:space="preserve">
          <source>This function returns a copy of the tree &lt;var&gt;tree&lt;/var&gt;. If &lt;var&gt;tree&lt;/var&gt; is a cons cell, this makes a new cons cell with the same &lt;small&gt;CAR&lt;/small&gt; and &lt;small&gt;CDR&lt;/small&gt;, then recursively copies the &lt;small&gt;CAR&lt;/small&gt; and &lt;small&gt;CDR&lt;/small&gt; in the same way.</source>
          <target state="translated">该函数返回树的副本 &lt;var&gt;tree&lt;/var&gt; 。如果 &lt;var&gt;tree&lt;/var&gt; 是一个cons单元，则将创建一个具有相同&lt;small&gt;CAR&lt;/small&gt;和&lt;small&gt;CDR&lt;/small&gt;的新cons单元，然后以相同的方式递归复制&lt;small&gt;CAR&lt;/small&gt;和&lt;small&gt;CDR&lt;/small&gt;。</target>
        </trans-unit>
        <trans-unit id="0e2eaa312782de2b637dd4127d25549cd80078a3" translate="yes" xml:space="preserve">
          <source>This function returns a description of the position of the mouse. The value looks like &lt;code&gt;(&lt;var&gt;frame&lt;/var&gt; &lt;var&gt;x&lt;/var&gt; . &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; are integers giving the (possibly rounded) position in multiples of the default character size of &lt;var&gt;frame&lt;/var&gt; (see &lt;a href=&quot;frame-font#Frame-Font&quot;&gt;Frame Font&lt;/a&gt;) relative to the native position of &lt;var&gt;frame&lt;/var&gt; (see &lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;Frame Geometry&lt;/a&gt;).</source>
          <target state="translated">此函数返回鼠标位置的描述。值看起来像 &lt;code&gt;(&lt;var&gt;frame&lt;/var&gt; &lt;var&gt;x&lt;/var&gt; . &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; ，其中 &lt;var&gt;x&lt;/var&gt; 和 &lt;var&gt;y&lt;/var&gt; 是整数让步的缺省字符大小的倍数（可能圆形）位置 &lt;var&gt;frame&lt;/var&gt; （见&lt;a href=&quot;frame-font#Frame-Font&quot;&gt;框字体&lt;/a&gt;）相对于天然位置 &lt;var&gt;frame&lt;/var&gt; （见&lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;车架几何&lt;/a&gt;） 。</target>
        </trans-unit>
        <trans-unit id="acabdfd3d6ffd701c6ff36862a3b8cbb0928e77f" translate="yes" xml:space="preserve">
          <source>This function returns a file name based on &lt;var&gt;filename&lt;/var&gt;, which fits the conventions of the current operating system.</source>
          <target state="translated">此函数返回基于 &lt;var&gt;filename&lt;/var&gt; 的文件名，该文件名符合当前操作系统的约定。</target>
        </trans-unit>
        <trans-unit id="a1d9182ce690da3397a57ba7f07d11938c638347" translate="yes" xml:space="preserve">
          <source>This function returns a font entity that best matches the font spec &lt;var&gt;font-spec&lt;/var&gt; on frame &lt;var&gt;frame&lt;/var&gt;. If &lt;var&gt;frame&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected frame.</source>
          <target state="translated">此函数返回最匹配frame &lt;var&gt;frame&lt;/var&gt; 上的字体规范 &lt;var&gt;font-spec&lt;/var&gt; 的字体实体。如果 &lt;var&gt;frame&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则默认为选定的帧。</target>
        </trans-unit>
        <trans-unit id="2c04a76233944f70946356e358b76a4b4d174bb5" translate="yes" xml:space="preserve">
          <source>This function returns a frame configuration list that describes the current arrangement of frames and their contents.</source>
          <target state="translated">该函数返回一个帧配置列表,该列表描述了当前帧的排列及其内容。</target>
        </trans-unit>
        <trans-unit id="62d769ddeda0a7939575082389b2f6e82b28283f" translate="yes" xml:space="preserve">
          <source>This function returns a global reference for &lt;var&gt;value&lt;/var&gt;.</source>
          <target state="translated">此函数返回 &lt;var&gt;value&lt;/var&gt; 的全局引用。</target>
        </trans-unit>
        <trans-unit id="c8f369df9e22940959012d0f4ecdee834f067ef9" translate="yes" xml:space="preserve">
          <source>This function returns a glyph code representing char &lt;var&gt;char&lt;/var&gt; with face &lt;var&gt;face&lt;/var&gt;. If &lt;var&gt;face&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, the glyph uses the default face; in that case, the glyph code is an integer. If &lt;var&gt;face&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the glyph code is not necessarily an integer object.</source>
          <target state="translated">此函数返回表示带有face &lt;var&gt;face&lt;/var&gt; 的char &lt;var&gt;char&lt;/var&gt; 的字形代码。如果省略 &lt;var&gt;face&lt;/var&gt; 或 &lt;code&gt;nil&lt;/code&gt; ，则字形使用默认的face；否则，使用默认的face。在这种情况下，字形代码是整数。如果 &lt;var&gt;face&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则字形代码不一定是整数对象。</target>
        </trans-unit>
        <trans-unit id="d7c495e02da214321ea81b78a2fec12682331a6b" translate="yes" xml:space="preserve">
          <source>This function returns a hash code for Lisp object &lt;var&gt;obj&lt;/var&gt; suitable for &lt;code&gt;eql&lt;/code&gt; comparison. I.e. it reflects identity of &lt;var&gt;obj&lt;/var&gt; except for the case where the object is a bignum or a float number, in which case a hash code is generated for the value.</source>
          <target state="translated">此函数返回适用于 &lt;code&gt;eql&lt;/code&gt; 比较的Lisp对象 &lt;var&gt;obj&lt;/var&gt; 的哈希码。即，除了对象是大数字或浮点数的情况外，它反映 &lt;var&gt;obj&lt;/var&gt; 的身份，在这种情况下，将为该值生成哈希码。</target>
        </trans-unit>
        <trans-unit id="3d24740cd5689f4c054ec43578b250dbe709fad8" translate="yes" xml:space="preserve">
          <source>This function returns a hash code for Lisp object &lt;var&gt;obj&lt;/var&gt;. Its result reflects identity of &lt;var&gt;obj&lt;/var&gt;, but not its contents.</source>
          <target state="translated">此函数返回Lisp对象 &lt;var&gt;obj&lt;/var&gt; 的哈希码。其结果反映 &lt;var&gt;obj&lt;/var&gt; 的身份，但不反映其内容。</target>
        </trans-unit>
        <trans-unit id="cdd05760d2c87e131e93d430b35cb1c6c10af1a2" translate="yes" xml:space="preserve">
          <source>This function returns a hash code for Lisp object &lt;var&gt;obj&lt;/var&gt;. This is an integer that reflects the contents of &lt;var&gt;obj&lt;/var&gt; and the other Lisp objects it points to.</source>
          <target state="translated">此函数返回Lisp对象 &lt;var&gt;obj&lt;/var&gt; 的哈希码。这是一个整数，反映 &lt;var&gt;obj&lt;/var&gt; 及其指向的其他Lisp对象的内容。</target>
        </trans-unit>
        <trans-unit id="a8322864db7f300fb277f17348bca59226ef581c" translate="yes" xml:space="preserve">
          <source>This function returns a hash for &lt;var&gt;object&lt;/var&gt;. The argument &lt;var&gt;algorithm&lt;/var&gt; is a symbol stating which hash to compute: one of &lt;code&gt;md5&lt;/code&gt;, &lt;code&gt;sha1&lt;/code&gt;, &lt;code&gt;sha224&lt;/code&gt;, &lt;code&gt;sha256&lt;/code&gt;, &lt;code&gt;sha384&lt;/code&gt; or &lt;code&gt;sha512&lt;/code&gt;. The argument &lt;var&gt;object&lt;/var&gt; should be a buffer or a string.</source>
          <target state="translated">此函数返回 &lt;var&gt;object&lt;/var&gt; 的哈希值。参数 &lt;var&gt;algorithm&lt;/var&gt; 是一个符号，指出要计算的哈希值： &lt;code&gt;md5&lt;/code&gt; ， &lt;code&gt;sha1&lt;/code&gt; ， &lt;code&gt;sha224&lt;/code&gt; ， &lt;code&gt;sha256&lt;/code&gt; ， &lt;code&gt;sha384&lt;/code&gt; 或 &lt;code&gt;sha512&lt;/code&gt; 之一。参数 &lt;var&gt;object&lt;/var&gt; 应该是缓冲区或字符串。</target>
        </trans-unit>
        <trans-unit id="4e03eb9914aba51eff1477435df97a59c7ae86cc" translate="yes" xml:space="preserve">
          <source>This function returns a list containing all the elements of &lt;var&gt;lists&lt;/var&gt;. Unlike &lt;code&gt;append&lt;/code&gt; (see &lt;a href=&quot;building-lists#Building-Lists&quot;&gt;Building Lists&lt;/a&gt;), the &lt;var&gt;lists&lt;/var&gt; are &lt;em&gt;not&lt;/em&gt; copied. Instead, the last &lt;small&gt;CDR&lt;/small&gt; of each of the &lt;var&gt;lists&lt;/var&gt; is changed to refer to the following list. The last of the &lt;var&gt;lists&lt;/var&gt; is not altered. For example:</source>
          <target state="translated">此函数返回一个包含list的所有元素的 &lt;var&gt;lists&lt;/var&gt; 。不同于 &lt;code&gt;append&lt;/code&gt; （见&lt;a href=&quot;building-lists#Building-Lists&quot;&gt;的楼宇名单&lt;/a&gt;），该 &lt;var&gt;lists&lt;/var&gt; 是&lt;em&gt;不&lt;/em&gt;被复制。而是，每个 &lt;var&gt;lists&lt;/var&gt; 的最后一个&lt;small&gt;CDR&lt;/small&gt;更改为引用以下列表。 &lt;var&gt;lists&lt;/var&gt; 的最后一个没有改变。例如：</target>
        </trans-unit>
        <trans-unit id="afbc4ae5a38b74d5d9dd7883986fea9c7bb0466a" translate="yes" xml:space="preserve">
          <source>This function returns a list containing all the elements of &lt;var&gt;sequences&lt;/var&gt;. The &lt;var&gt;sequences&lt;/var&gt; may be lists, vectors, bool-vectors, or strings, but the last one should usually be a list. All arguments except the last one are copied, so none of the arguments is altered. (See &lt;code&gt;nconc&lt;/code&gt; in &lt;a href=&quot;rearrangement#Rearrangement&quot;&gt;Rearrangement&lt;/a&gt;, for a way to join lists with no copying.)</source>
          <target state="translated">此函数返回包含 &lt;var&gt;sequences&lt;/var&gt; 所有元素的列表。该 &lt;var&gt;sequences&lt;/var&gt; 可以是列表，向量，布尔向量或字符串，但最后一个通常应该是一个列表。复制除最后一个参数以外的所有参数，因此所有参数均未更改。（见 &lt;code&gt;nconc&lt;/code&gt; 在&lt;a href=&quot;rearrangement#Rearrangement&quot;&gt;重排&lt;/a&gt;，换一种方式加入名单没有复制。）</target>
        </trans-unit>
        <trans-unit id="3cf6790b28a05431e10f6dceba078d01c9ba5e7a" translate="yes" xml:space="preserve">
          <source>This function returns a list describing the available fonts for family &lt;var&gt;family&lt;/var&gt; on &lt;var&gt;frame&lt;/var&gt;. If &lt;var&gt;family&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, this list applies to all families, and therefore, it contains all available fonts. Otherwise, &lt;var&gt;family&lt;/var&gt; must be a string; it may contain the wildcards &amp;lsquo;</source>
          <target state="translated">此函数返回一个列表，描述 &lt;var&gt;frame&lt;/var&gt; 上家庭 &lt;var&gt;family&lt;/var&gt; 可用的字体。如果省略 &lt;var&gt;family&lt;/var&gt; 或 &lt;code&gt;nil&lt;/code&gt; ，则此列表适用于所有家族，因此，它包含所有可用字体。否则， &lt;var&gt;family&lt;/var&gt; 必须是字符串。它可能包含通配符'</target>
        </trans-unit>
        <trans-unit id="8cc994fa4d73d7c9e1995b198a995f89347617c2" translate="yes" xml:space="preserve">
          <source>This function returns a list describing the buffer-local variables in buffer &lt;var&gt;buffer&lt;/var&gt;. (If &lt;var&gt;buffer&lt;/var&gt; is omitted, the current buffer is used.) Normally, each list element has the form &lt;code&gt;(&lt;var&gt;sym&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;val&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;sym&lt;/var&gt; is a buffer-local variable (a symbol) and &lt;var&gt;val&lt;/var&gt; is its buffer-local value. But when a variable&amp;rsquo;s buffer-local binding in &lt;var&gt;buffer&lt;/var&gt; is void, its list element is just &lt;var&gt;sym&lt;/var&gt;.</source>
          <target state="translated">这个函数返回描述缓冲区的缓冲区局部变量列表 &lt;var&gt;buffer&lt;/var&gt; 。 （如果 &lt;var&gt;buffer&lt;/var&gt; 被省略，则使用当前缓冲器中。）通常，每个列表元素的形式为 &lt;code&gt;(&lt;var&gt;sym&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;val&lt;/var&gt;)&lt;/code&gt; ，其中， &lt;var&gt;sym&lt;/var&gt; 是一个缓冲区局部变量（符号）和 &lt;var&gt;val&lt;/var&gt; 是它的缓冲器局部值。但是，当变量在 &lt;var&gt;buffer&lt;/var&gt; 中的缓冲区局部绑定无效时，其列表元素就是 &lt;var&gt;sym&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="24a9a148db001aaafe212b30a9d514cd19776d38" translate="yes" xml:space="preserve">
          <source>This function returns a list describing the network interfaces of the machine you are using. The value is an alist whose elements have the form &lt;code&gt;(&lt;var&gt;ifname&lt;/var&gt; . &lt;var&gt;address&lt;/var&gt;)&lt;/code&gt;. &lt;var&gt;ifname&lt;/var&gt; is a string naming the interface, &lt;var&gt;address&lt;/var&gt; has the same form as the &lt;var&gt;local-address&lt;/var&gt; and &lt;var&gt;remote-address&lt;/var&gt; arguments to &lt;code&gt;make-network-process&lt;/code&gt;, i.e. a vector of integers. By default both IPv4 and IPv6 addresses are returned if possible.</source>
          <target state="translated">此函数返回一个列表，描述您正在使用的计算机的网络接口。该值是一个ALIST其元素具有形式 &lt;code&gt;(&lt;var&gt;ifname&lt;/var&gt; . &lt;var&gt;address&lt;/var&gt;)&lt;/code&gt; 。 &lt;var&gt;ifname&lt;/var&gt; 是一个命名接口的字符串， &lt;var&gt;address&lt;/var&gt; 与 &lt;code&gt;make-network-process&lt;/code&gt; 的 &lt;var&gt;local-address&lt;/var&gt; 和 &lt;var&gt;remote-address&lt;/var&gt; 参数具有相同的形式，即整数的向量。默认情况下，如果可能，将同时返回IPv4和IPv6地址。</target>
        </trans-unit>
        <trans-unit id="c06c0e87ef5b06869cd4a872d11786fb839b4703" translate="yes" xml:space="preserve">
          <source>This function returns a list describing the time zone that the user is in.</source>
          <target state="translated">该函数返回一个描述用户所在时区的列表。</target>
        </trans-unit>
        <trans-unit id="630c1e9c314ce9bd36f4c188b13d66b105960a3b" translate="yes" xml:space="preserve">
          <source>This function returns a list of Emacs&amp;rsquo; frames, in Z (stacking) order (see &lt;a href=&quot;raising-and-lowering#Raising-and-Lowering&quot;&gt;Raising and Lowering&lt;/a&gt;). The optional argument &lt;var&gt;display&lt;/var&gt; specifies which display to poll. &lt;var&gt;display&lt;/var&gt; should be either a frame or a display name (a string). If omitted or &lt;code&gt;nil&lt;/code&gt;, that stands for the selected frame&amp;rsquo;s display. It returns &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;display&lt;/var&gt; contains no Emacs frame.</source>
          <target state="translated">此函数以Z（堆叠）顺序返回Emacs帧的列表（请参阅&amp;ldquo;&lt;a href=&quot;raising-and-lowering#Raising-and-Lowering&quot;&gt;升高和降低&amp;rdquo;&lt;/a&gt;）。可选参数 &lt;var&gt;display&lt;/var&gt; 指定要轮询的显示。 &lt;var&gt;display&lt;/var&gt; 应该是框架或显示名称（字符串）。如果省略或为 &lt;code&gt;nil&lt;/code&gt; ，则表示所选帧的显示。如果 &lt;var&gt;display&lt;/var&gt; 包含Emacs框架，则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ca86bb995c1deb052a7fbed9abe397bf4cb994a1" translate="yes" xml:space="preserve">
          <source>This function returns a list of all coding system names (symbols). If &lt;var&gt;base-only&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the value includes only the base coding systems. Otherwise, it includes alias and variant coding systems as well.</source>
          <target state="translated">该函数返回所有编码系统名称（符号）的列表。如果 &lt;var&gt;base-only&lt;/var&gt; 为non - &lt;code&gt;nil&lt;/code&gt; ，则该值仅包含基本编码系统。否则，它还包括别名和变体编码系统。</target>
        </trans-unit>
        <trans-unit id="9b0125aa1df44fda3f998e993eee542695077da1" translate="yes" xml:space="preserve">
          <source>This function returns a list of all defined character sets ordered by their priority. If &lt;var&gt;highestp&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the function returns a single character set of the highest priority.</source>
          <target state="translated">此函数返回所有已定义字符集的列表，这些列表按其优先级排序。如果 &lt;var&gt;highestp&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则该函数返回具有最高优先级的单个字符集。</target>
        </trans-unit>
        <trans-unit id="88cc206b0a29deb278210f375731ebc8e5c9988c" translate="yes" xml:space="preserve">
          <source>This function returns a list of all defined face names.</source>
          <target state="translated">该函数返回所有定义的面名列表。</target>
        </trans-unit>
        <trans-unit id="4de1ab26e600c1ca58f0e0c3ed09d91cec3633e0" translate="yes" xml:space="preserve">
          <source>This function returns a list of all font entities that match the font spec &lt;var&gt;font-spec&lt;/var&gt;.</source>
          <target state="translated">此函数返回与font spec &lt;var&gt;font-spec&lt;/var&gt; 匹配的所有字体实体的列表。</target>
        </trans-unit>
        <trans-unit id="e0f0152b3a5177c95554b7ed2e66fdefbe7eeaa8" translate="yes" xml:space="preserve">
          <source>This function returns a list of all live terminal objects.</source>
          <target state="translated">该函数返回所有实时终端对象的列表。</target>
        </trans-unit>
        <trans-unit id="0369cf6182f12c7ebac338898236658f1ba7e6ab" translate="yes" xml:space="preserve">
          <source>This function returns a list of all possible completions for a file whose name starts with &lt;var&gt;partial-filename&lt;/var&gt; in directory &lt;var&gt;directory&lt;/var&gt;. The order of the completions is the order of the files in the directory, which is unpredictable and conveys no useful information.</source>
          <target state="translated">此函数返回名称以directory &lt;var&gt;directory&lt;/var&gt; &lt;var&gt;partial-filename&lt;/var&gt; 开头的文件的所有可能完成的列表。完成的顺序是目录中文件的顺序，这是不可预测的，并且不会传达有用的信息。</target>
        </trans-unit>
        <trans-unit id="6d696eac3b43a861793747d708c6dcea0872fd7c" translate="yes" xml:space="preserve">
          <source>This function returns a list of all possible completions of &lt;var&gt;string&lt;/var&gt;. The arguments to this function are the same as those of &lt;code&gt;try-completion&lt;/code&gt;, and it uses &lt;code&gt;completion-regexp-list&lt;/code&gt; in the same way that &lt;code&gt;try-completion&lt;/code&gt; does.</source>
          <target state="translated">此函数返回 &lt;var&gt;string&lt;/var&gt; 的所有可能完成的列表。此函数的参数与 &lt;code&gt;try-completion&lt;/code&gt; 的参数相同，并且它以与 &lt;code&gt;try-completion&lt;/code&gt; 相同的方式使用 &lt;code&gt;completion-regexp-list&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5fd50079232de7411ee1fd1b779080e909c53931" translate="yes" xml:space="preserve">
          <source>This function returns a list of all processes that have not been deleted.</source>
          <target state="translated">该函数返回所有未被删除的进程列表。</target>
        </trans-unit>
        <trans-unit id="760de8dfd1abaeaa02e56b2704131eb1657391e6" translate="yes" xml:space="preserve">
          <source>This function returns a list of all the active minor mode bindings of &lt;var&gt;key&lt;/var&gt;. More precisely, it returns an alist of pairs &lt;code&gt;(&lt;var&gt;modename&lt;/var&gt; . &lt;var&gt;binding&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;modename&lt;/var&gt; is the variable that enables the minor mode, and &lt;var&gt;binding&lt;/var&gt; is &lt;var&gt;key&lt;/var&gt;&amp;rsquo;s binding in that mode. If &lt;var&gt;key&lt;/var&gt; has no minor-mode bindings, the value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此函数返回 &lt;var&gt;key&lt;/var&gt; 的所有活动次要模式绑定的列表。更确切地说，它返回对一个ALIST &lt;code&gt;(&lt;var&gt;modename&lt;/var&gt; . &lt;var&gt;binding&lt;/var&gt;)&lt;/code&gt; ，其中 &lt;var&gt;modename&lt;/var&gt; 是使得次要模式的变量，并且 &lt;var&gt;binding&lt;/var&gt; 是 &lt;var&gt;key&lt;/var&gt; 的在该模式下的结合。如果 &lt;var&gt;key&lt;/var&gt; 没有次要模式绑定，则值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a547e641fade29c0b87d9b137ef3da07ea3cb053" translate="yes" xml:space="preserve">
          <source>This function returns a list of all the elements in &lt;var&gt;sequence&lt;/var&gt; for which &lt;var&gt;predicate&lt;/var&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此功能将所有的元素列表 &lt;var&gt;sequence&lt;/var&gt; 为其 &lt;var&gt;predicate&lt;/var&gt; 的回报 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="473283dc5fabc579395201b3babbebc295a7f7c6" translate="yes" xml:space="preserve">
          <source>This function returns a list of all the elements in &lt;var&gt;sequence&lt;/var&gt; for which &lt;var&gt;predicate&lt;/var&gt; returns non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此函数按 &lt;var&gt;sequence&lt;/var&gt; 返回所有元素的列表， &lt;var&gt;predicate&lt;/var&gt; 为其返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3af13423952bfb1d311657a64fec7e34264564cd" translate="yes" xml:space="preserve">
          <source>This function returns a list of all the keymaps that can be reached (via zero or more prefix keys) from &lt;var&gt;keymap&lt;/var&gt;. The value is an association list with elements of the form &lt;code&gt;(&lt;var&gt;key&lt;/var&gt; .
&lt;var&gt;map&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;key&lt;/var&gt; is a prefix key whose definition in &lt;var&gt;keymap&lt;/var&gt; is &lt;var&gt;map&lt;/var&gt;.</source>
          <target state="translated">此函数返回可以从 &lt;var&gt;keymap&lt;/var&gt; 到达（通过零个或多个前缀键）的所有键映射的列表。该值是一个关联列表与以下形式的元件 &lt;code&gt;(&lt;var&gt;key&lt;/var&gt; . &lt;var&gt;map&lt;/var&gt;)&lt;/code&gt; ，其中， &lt;var&gt;key&lt;/var&gt; 是一个前缀键，其定义在 &lt;var&gt;keymap&lt;/var&gt; 是 &lt;var&gt;map&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="63834de6be60bd3de2b1a831b013172a3bfb0c06" translate="yes" xml:space="preserve">
          <source>This function returns a list of all the live frames, i.e., those that have not been deleted. It is analogous to &lt;code&gt;buffer-list&lt;/code&gt; for buffers, and includes frames on all terminals. The list that you get is newly created, so modifying the list doesn&amp;rsquo;t have any effect on the internals of Emacs.</source>
          <target state="translated">该函数返回所有实时帧的列表，即尚未删除的实时帧。它类似于 &lt;code&gt;buffer-list&lt;/code&gt; ，并且在所有终端上都包含帧。您获得的列表是新创建的，因此修改列表不会对Emacs的内部产生任何影响。</target>
        </trans-unit>
        <trans-unit id="3efa5848b55816391d35c91d2dfc6e1629de7643" translate="yes" xml:space="preserve">
          <source>This function returns a list of all the overlays that cover the character at position &lt;var&gt;pos&lt;/var&gt; in the current buffer. If &lt;var&gt;sorted&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the list is in decreasing order of priority, otherwise it is in no particular order. An overlay contains position &lt;var&gt;pos&lt;/var&gt; if it begins at or before &lt;var&gt;pos&lt;/var&gt;, and ends after &lt;var&gt;pos&lt;/var&gt;.</source>
          <target state="translated">此函数返回覆盖当前缓冲区中位置 &lt;var&gt;pos&lt;/var&gt; 处的字符的所有覆盖的列表。如果 &lt;var&gt;sorted&lt;/var&gt; 为non- &lt;code&gt;nil&lt;/code&gt; ，则列表按优先级从高到低顺序排列，否则按特定顺序排列。叠加层包含位置 &lt;var&gt;pos&lt;/var&gt; (如果它开始于 &lt;var&gt;pos&lt;/var&gt; 或在pos之前，结束于 &lt;var&gt;pos&lt;/var&gt; )。</target>
        </trans-unit>
        <trans-unit id="aed882bbc7be80ab2804fa6e6095513a90ec0bce" translate="yes" xml:space="preserve">
          <source>This function returns a list of all the processes running on the system. Each process is identified by its</source>
          <target state="translated">该函数返回系统上运行的所有进程的列表。每个进程由它的</target>
        </trans-unit>
        <trans-unit id="c53073c10a213f780b73f815cc10793bc2df4a6f" translate="yes" xml:space="preserve">
          <source>This function returns a list of all windows currently displaying &lt;var&gt;buffer-or-name&lt;/var&gt;. &lt;var&gt;buffer-or-name&lt;/var&gt; should be a buffer or the name of an existing buffer. If omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the current buffer. If the currently selected window displays &lt;var&gt;buffer-or-name&lt;/var&gt;, it will be the first in the list returned by this function.</source>
          <target state="translated">此函数返回当前显示 &lt;var&gt;buffer-or-name&lt;/var&gt; 的所有窗口的列表。 &lt;var&gt;buffer-or-name&lt;/var&gt; 应该是缓冲区或现有缓冲区的名称。如果省略或为 &lt;code&gt;nil&lt;/code&gt; ，则默认为当前缓冲区。如果当前选择的窗口显示 &lt;var&gt;buffer-or-name&lt;/var&gt; ，它将是此函数返回的列表中的第一个。</target>
        </trans-unit>
        <trans-unit id="a06e17e476fdd17af55fa34264de9f3ae07fbf75" translate="yes" xml:space="preserve">
          <source>This function returns a list of attributes of file &lt;var&gt;filename&lt;/var&gt;. If the specified file does not exist, it returns &lt;code&gt;nil&lt;/code&gt;. This function does not follow symbolic links. The optional parameter &lt;var&gt;id-format&lt;/var&gt; specifies the preferred format of attributes</source>
          <target state="translated">此函数返回文件 &lt;var&gt;filename&lt;/var&gt; 的属性列表。如果指定的文件不存在，则返回 &lt;code&gt;nil&lt;/code&gt; 。此功能不遵循符号链接。可选参数 &lt;var&gt;id-format&lt;/var&gt; 指定属性的首选格式</target>
        </trans-unit>
        <trans-unit id="b8952006a9bc191a86d4bf2a6ad70324bd29cc5e" translate="yes" xml:space="preserve">
          <source>This function returns a list of available font family names. The optional argument &lt;var&gt;frame&lt;/var&gt; specifies the frame on which the text is to be displayed; if it is &lt;code&gt;nil&lt;/code&gt;, the selected frame is used.</source>
          <target state="translated">此函数返回可用字体系列名称的列表。可选参数 &lt;var&gt;frame&lt;/var&gt; 指定要在其上显示文本的框；如果为 &lt;code&gt;nil&lt;/code&gt; ，则使用选定的帧。</target>
        </trans-unit>
        <trans-unit id="6edea58fce1d45816446b89df404df8f7d5f82c7" translate="yes" xml:space="preserve">
          <source>This function returns a list of available font names that match &lt;var&gt;name&lt;/var&gt;. &lt;var&gt;name&lt;/var&gt; should be a string containing a font name in either the Fontconfig, GTK+, or XLFD format (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Fonts.html#Fonts&quot;&gt;Fonts&lt;/a&gt; in</source>
          <target state="translated">此函数返回与 &lt;var&gt;name&lt;/var&gt; 匹配的可用字体名称的列表。 &lt;var&gt;name&lt;/var&gt; 应在任一Fontconfig的，GTK +，或XLFD格式包含的字体名称的字符串（参见&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Fonts.html#Fonts&quot;&gt;字体&lt;/a&gt;中</target>
        </trans-unit>
        <trans-unit id="bdcc4831f469a1dd78e39987fd417b6b5b3176da" translate="yes" xml:space="preserve">
          <source>This function returns a list of character sets of highest priority that contain characters in &lt;var&gt;string&lt;/var&gt;. It is just like &lt;code&gt;find-charset-region&lt;/code&gt;, except that it applies to the contents of &lt;var&gt;string&lt;/var&gt; instead of part of the current buffer.</source>
          <target state="translated">此函数返回包含 &lt;var&gt;string&lt;/var&gt; 中的字符的最高优先级的字符集列表。就像 &lt;code&gt;find-charset-region&lt;/code&gt; 一样，除了它适用于 &lt;var&gt;string&lt;/var&gt; 的内容而不是当前缓冲区的一部分。</target>
        </trans-unit>
        <trans-unit id="7e997f5be8b38fa46a4872b388ccb293832a3379" translate="yes" xml:space="preserve">
          <source>This function returns a list of coding systems that could be used to encode a text between &lt;var&gt;from&lt;/var&gt; and &lt;var&gt;to&lt;/var&gt;. All coding systems in the list can safely encode any multibyte characters in that portion of the text.</source>
          <target state="translated">此函数返回可用于在 &lt;var&gt;from&lt;/var&gt; 和 &lt;var&gt;to&lt;/var&gt; 之间编码文本的编码系统列表。列表中的所有编码系统都可以安全地编码文本那部分中的任何多字节字符。</target>
        </trans-unit>
        <trans-unit id="41493c31ddf9ac8e54046377b91fde4a1f178539" translate="yes" xml:space="preserve">
          <source>This function returns a list of coding systems that could be used to encode all the character sets in the list &lt;var&gt;charsets&lt;/var&gt;.</source>
          <target state="translated">此函数返回一个编码系统列表，可用于对列表 &lt;var&gt;charsets&lt;/var&gt; 集中的所有字符集进行编码。</target>
        </trans-unit>
        <trans-unit id="f18e82b5721b132d33458f5e1541487c536145cb" translate="yes" xml:space="preserve">
          <source>This function returns a list of coding systems that could be used to encode the text of &lt;var&gt;string&lt;/var&gt;. All coding systems in the list can safely encode any multibyte characters in &lt;var&gt;string&lt;/var&gt;. If the text contains no multibyte characters, this returns the list &lt;code&gt;(undecided)&lt;/code&gt;.</source>
          <target state="translated">此函数返回可用于编码 &lt;var&gt;string&lt;/var&gt; 文本的编码系统列表。列表中的所有编码系统都可以安全地对 &lt;var&gt;string&lt;/var&gt; 中的任何多字节字符进行编码。如果文本不包含多字节字符，则返回列表 &lt;code&gt;(undecided)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="36348d3cad2e148f0c9a5670384fae97c6fa39df" translate="yes" xml:space="preserve">
          <source>This function returns a list of face attributes corresponding to &lt;var&gt;font&lt;/var&gt;. The optional argument &lt;var&gt;frame&lt;/var&gt; specifies the frame on which the font is to be displayed. If it is &lt;code&gt;nil&lt;/code&gt;, the selected frame is used. The return value has the form</source>
          <target state="translated">此函数返回对应于 &lt;var&gt;font&lt;/var&gt; 的面部属性列表。可选参数 &lt;var&gt;frame&lt;/var&gt; 指定要在其上显示字体的框。如果为 &lt;code&gt;nil&lt;/code&gt; ，则使用选定的帧。返回值的形式为</target>
        </trans-unit>
        <trans-unit id="fdd9e166a1ff217046ec8c70d4deeb49deabcbeb" translate="yes" xml:space="preserve">
          <source>This function returns a list of image file extensions supported by the current ImageMagick installation. Each list element is a symbol representing an internal ImageMagick name for an image type, such as &lt;code&gt;BMP&lt;/code&gt; for</source>
          <target state="translated">此函数返回当前ImageMagick安装支持的图像文件扩展名列表。每个列表元素是用于将图像类型表示内部ImageMagick的名称的符号，如 &lt;code&gt;BMP&lt;/code&gt; 为</target>
        </trans-unit>
        <trans-unit id="f9093d2205e945bbba5039073fc9c07e2ecf5974" translate="yes" xml:space="preserve">
          <source>This function returns a list of just the currently visible frames. See &lt;a href=&quot;visibility-of-frames#Visibility-of-Frames&quot;&gt;Visibility of Frames&lt;/a&gt;. Frames on text terminals always count as visible, even though only the selected one is actually displayed.</source>
          <target state="translated">此函数返回仅当前可见帧的列表。请参阅&lt;a href=&quot;visibility-of-frames#Visibility-of-Frames&quot;&gt;框架的可见性&lt;/a&gt;。文本终端上的框架始终算作可见的，即使实际上仅显示所选的框架。</target>
        </trans-unit>
        <trans-unit id="d5b80c7c5f101ada6638a0d665cc882c1a0b436f" translate="yes" xml:space="preserve">
          <source>This function returns a list of live windows belonging to the frame &lt;var&gt;frame&lt;/var&gt;. If &lt;var&gt;frame&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected frame.</source>
          <target state="translated">此函数返回属于框架 &lt;var&gt;frame&lt;/var&gt; 的活动窗口的列表。如果省略 &lt;var&gt;frame&lt;/var&gt; 或 &lt;code&gt;nil&lt;/code&gt; ，则默认为所选框架。</target>
        </trans-unit>
        <trans-unit id="1938a8fcbe3c65b89da731a2f03feb4a7f21f7a8" translate="yes" xml:space="preserve">
          <source>This function returns a list of numbers starting with &lt;var&gt;from&lt;/var&gt; and incrementing by &lt;var&gt;separation&lt;/var&gt;, and ending at or just before &lt;var&gt;to&lt;/var&gt;. &lt;var&gt;separation&lt;/var&gt; can be positive or negative and defaults to 1. If &lt;var&gt;to&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or numerically equal to &lt;var&gt;from&lt;/var&gt;, the value is the one-element list &lt;code&gt;(&lt;var&gt;from&lt;/var&gt;)&lt;/code&gt;. If &lt;var&gt;to&lt;/var&gt; is less than &lt;var&gt;from&lt;/var&gt; with a positive &lt;var&gt;separation&lt;/var&gt;, or greater than &lt;var&gt;from&lt;/var&gt; with a negative &lt;var&gt;separation&lt;/var&gt;, the value is &lt;code&gt;nil&lt;/code&gt; because those arguments specify an empty sequence.</source>
          <target state="translated">此函数返回一个数字列表，该数字从 &lt;var&gt;from&lt;/var&gt; 开始并以 &lt;var&gt;separation&lt;/var&gt; 符递增，并在 &lt;var&gt;to&lt;/var&gt; 之前或恰好在to之前结束。 &lt;var&gt;separation&lt;/var&gt; 可以为正或负，默认为1。如果 &lt;var&gt;to&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; 或在数值上等于 &lt;var&gt;from&lt;/var&gt; ，则该值为一元素列表 &lt;code&gt;(&lt;var&gt;from&lt;/var&gt;)&lt;/code&gt; 。如果 &lt;var&gt;to&lt;/var&gt; 小于 &lt;var&gt;from&lt;/var&gt; 具有正 &lt;var&gt;separation&lt;/var&gt; ，或大于 &lt;var&gt;from&lt;/var&gt; 带负 &lt;var&gt;separation&lt;/var&gt; ，则该值是 &lt;code&gt;nil&lt;/code&gt; ，因为这些参数指定一个空序列。</target>
        </trans-unit>
        <trans-unit id="bc5d51607c700b6affff9c390b12068fba99ac09" translate="yes" xml:space="preserve">
          <source>This function returns a list of physical monitor attributes on &lt;var&gt;display&lt;/var&gt;, which can be a display name (a string), a terminal, or a frame; if omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected frame&amp;rsquo;s display. Each element of the list is an association list, representing the attributes of a physical monitor. The first element corresponds to the primary monitor. The attribute keys and values are:</source>
          <target state="translated">此函数返回 &lt;var&gt;display&lt;/var&gt; 上的物理监视器属性的列表，这些属性可以是显示名称（字符串），终端或框架。如果省略或为 &lt;code&gt;nil&lt;/code&gt; ，则默认为所选帧的显示。列表的每个元素都是一个关联列表，代表物理监视器的属性。第一个元素对应于主监视器。属性键和值是：</target>
        </trans-unit>
        <trans-unit id="3a7550b023c3b1e2b177488b5ee5ce7719b216dc" translate="yes" xml:space="preserve">
          <source>This function returns a list of pixel coordinates for the edges of &lt;var&gt;window&lt;/var&gt;. Calling &lt;code&gt;(window-pixel-edges window)&lt;/code&gt; is equivalent to calling &lt;code&gt;(window-edges window nil nil t)&lt;/code&gt;, see above.</source>
          <target state="translated">此函数返回 &lt;var&gt;window&lt;/var&gt; 边缘的像素坐标列表。调用 &lt;code&gt;(window-pixel-edges window)&lt;/code&gt; 等效于调用 &lt;code&gt;(window-edges window nil nil t)&lt;/code&gt; ，请参见上文。</target>
        </trans-unit>
        <trans-unit id="c5bcccf7653f94949fa6807bc985cf02abf6129b" translate="yes" xml:space="preserve">
          <source>This function returns a list of positions (markers or integers) that record all the information on the text that the last search matched. Element zero is the position of the beginning of the match for the whole expression; element one is the position of the end of the match for the expression. The next two elements are the positions of the beginning and end of the match for the first subexpression, and so on. In general, element number 2&lt;var&gt;n&lt;/var&gt; corresponds to &lt;code&gt;(match-beginning &lt;var&gt;n&lt;/var&gt;)&lt;/code&gt;; and element number 2&lt;var&gt;n&lt;/var&gt; + 1 corresponds to &lt;code&gt;(match-end &lt;var&gt;n&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">此函数返回一个位置列表（标记或整数），该列表记录了上一次搜索匹配的文本上的所有信息。元素零是整个表达式的匹配开始位置；元素之一是表达式匹配结束的位置。接下来的两个元素是第一个子表达式的匹配开始和结束的位置，依此类推。通常，元素编号2 &lt;var&gt;n&lt;/var&gt; 对应于 &lt;code&gt;(match-beginning &lt;var&gt;n&lt;/var&gt;)&lt;/code&gt; ;元素编号2 &lt;var&gt;n&lt;/var&gt; +1对应于 &lt;code&gt;(match-end &lt;var&gt;n&lt;/var&gt;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3803200f67823d1a70ea66bab0671b3a8d8d90db" translate="yes" xml:space="preserve">
          <source>This function returns a list of strings, listing the names of user groups on the system. If Emacs cannot retrieve this information, the return value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">该函数返回一个字符串列表，列出系统上用户组的名称。如果Emacs无法检索此信息，则返回值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="92c16407e725cc5bd035a092a9a97f67b5733f25" translate="yes" xml:space="preserve">
          <source>This function returns a list of strings, listing the user names on the system. If Emacs cannot retrieve this information, the return value is a list containing just the value of &lt;code&gt;user-real-login-name&lt;/code&gt;.</source>
          <target state="translated">该函数返回一个字符串列表，列出系统上的用户名。如果Emacs无法检索此信息，则返回值是仅包含 &lt;code&gt;user-real-login-name&lt;/code&gt; 值的列表。</target>
        </trans-unit>
        <trans-unit id="fa01384083cfead8d0e3b438cbc0777b5c0a5e9d" translate="yes" xml:space="preserve">
          <source>This function returns a list of symbols representing algorithms that &lt;code&gt;secure-hash&lt;/code&gt; can use.</source>
          <target state="translated">此函数返回代表 &lt;code&gt;secure-hash&lt;/code&gt; 可以使用的算法的符号列表。</target>
        </trans-unit>
        <trans-unit id="2f7dd91779875f40b3feac634b571ca77b06878a" translate="yes" xml:space="preserve">
          <source>This function returns a list of the character sets of highest priority that contain characters in the current buffer between positions &lt;var&gt;beg&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;.</source>
          <target state="translated">此函数返回优先级最高的字符集列表，这些列表包含当前缓冲区中 &lt;var&gt;beg&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 之间的字符。</target>
        </trans-unit>
        <trans-unit id="03b14a3736bc35bf0f4f1cf004cb5e99993a3392" translate="yes" xml:space="preserve">
          <source>This function returns a list of the color names that are defined and supported on frame &lt;var&gt;frame&lt;/var&gt; (default, the selected frame). If &lt;var&gt;frame&lt;/var&gt; does not support colors, the value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">该函数返回一个被定义和支持框架上的色彩名称的列表 &lt;var&gt;frame&lt;/var&gt; （默认情况下，所选择的帧）。如果 &lt;var&gt;frame&lt;/var&gt; 不支持颜色，则值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="73053d724485d4cd4d7ced517b99b9650a137f7e" translate="yes" xml:space="preserve">
          <source>This function returns a list of the edge coordinates of &lt;var&gt;window&lt;/var&gt;. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window.</source>
          <target state="translated">此函数返回 &lt;var&gt;window&lt;/var&gt; 边缘坐标的列表。如果 &lt;var&gt;window&lt;/var&gt; 省略或为 &lt;code&gt;nil&lt;/code&gt; ，则默认为所选窗口。</target>
        </trans-unit>
        <trans-unit id="036441f56e3ae4e4e6a273858277656a4160fb5d" translate="yes" xml:space="preserve">
          <source>This function returns a list of the elements of &lt;var&gt;sequence&lt;/var&gt; grouped into sub-sequences of length &lt;var&gt;n&lt;/var&gt;. The last sequence may contain less elements than &lt;var&gt;n&lt;/var&gt;. &lt;var&gt;n&lt;/var&gt; must be an integer. If &lt;var&gt;n&lt;/var&gt; is a negative integer or 0, the return value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此函数返回 &lt;var&gt;sequence&lt;/var&gt; 元素的列表，这些元素被分组为长度为 &lt;var&gt;n&lt;/var&gt; 的子序列。最后一个序列可以包含少于 &lt;var&gt;n&lt;/var&gt; 的元素。 &lt;var&gt;n&lt;/var&gt; 必须为整数。如果 &lt;var&gt;n&lt;/var&gt; 为负整数或0，则返回值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="71db04e5a4a339a8b304d08a6e5c6569fec46111" translate="yes" xml:space="preserve">
          <source>This function returns a list of the elements of &lt;var&gt;sequence&lt;/var&gt; with duplicates removed. If the optional argument &lt;var&gt;function&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it is a function of two arguments to use instead of the default &lt;code&gt;equal&lt;/code&gt;.</source>
          <target state="translated">此函数返回已删除重复项的 &lt;var&gt;sequence&lt;/var&gt; 元素列表。如果可选参数 &lt;var&gt;function&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则它是使用两个参数的函数，而不是默认的 &lt;code&gt;equal&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c72622f68088dba6e15392561f13d4c5c59c7f6a" translate="yes" xml:space="preserve">
          <source>This function returns a list of the elements that appear both in &lt;var&gt;sequence1&lt;/var&gt; and &lt;var&gt;sequence2&lt;/var&gt;. If the optional argument &lt;var&gt;function&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it is a function of two arguments to use to compare elements instead of the default &lt;code&gt;equal&lt;/code&gt;.</source>
          <target state="translated">此函数返回出现在 &lt;var&gt;sequence1&lt;/var&gt; 和 &lt;var&gt;sequence2&lt;/var&gt; 中的元素的列表。如果可选参数 &lt;var&gt;function&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则它是两个参数的函数，用于比较元素而不是默认的 &lt;code&gt;equal&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8fe92292902960b9b8dae8671d4e09ff19728159" translate="yes" xml:space="preserve">
          <source>This function returns a list of the elements that appear in &lt;var&gt;sequence1&lt;/var&gt; but not in &lt;var&gt;sequence2&lt;/var&gt;. If the optional argument &lt;var&gt;function&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it is a function of two arguments to use to compare elements instead of the default &lt;code&gt;equal&lt;/code&gt;.</source>
          <target state="translated">该函数返回一个出现在元素列表 &lt;var&gt;sequence1&lt;/var&gt; ，但不是在 &lt;var&gt;sequence2&lt;/var&gt; 。如果可选参数 &lt;var&gt;function&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则它是两个参数的函数，用于比较元素而不是默认的 &lt;code&gt;equal&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c733852fa3cacdcd5b25cd1832f0a97aa3247144" translate="yes" xml:space="preserve">
          <source>This function returns a list of the form &lt;code&gt;(&lt;var&gt;width&lt;/var&gt;
&lt;var&gt;columns&lt;/var&gt; &lt;var&gt;vertical-type&lt;/var&gt; &lt;var&gt;height&lt;/var&gt; &lt;var&gt;lines&lt;/var&gt;
&lt;var&gt;horizontal-type&lt;/var&gt; &lt;var&gt;persistent&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">此函数返回以下形式的列表 &lt;code&gt;(&lt;var&gt;width&lt;/var&gt; &lt;var&gt;columns&lt;/var&gt; &lt;var&gt;vertical-type&lt;/var&gt; &lt;var&gt;height&lt;/var&gt; &lt;var&gt;lines&lt;/var&gt; &lt;var&gt;horizontal-type&lt;/var&gt; &lt;var&gt;persistent&lt;/var&gt;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="52a3d08db3001d6f819079329e1c41d59bd2dbd0" translate="yes" xml:space="preserve">
          <source>This function returns a list of the keymaps of currently enabled minor modes.</source>
          <target state="translated">该函数返回当前启用的小调模式的键位图列表。</target>
        </trans-unit>
        <trans-unit id="141584219ad787c6c05c779f17d4a14aaac6cc00" translate="yes" xml:space="preserve">
          <source>This function returns a list of the modifiers that &lt;var&gt;event&lt;/var&gt; has. The modifiers are symbols; they include &lt;code&gt;shift&lt;/code&gt;, &lt;code&gt;control&lt;/code&gt;, &lt;code&gt;meta&lt;/code&gt;, &lt;code&gt;alt&lt;/code&gt;, &lt;code&gt;hyper&lt;/code&gt; and &lt;code&gt;super&lt;/code&gt;. In addition, the modifiers list of a mouse event symbol always contains one of &lt;code&gt;click&lt;/code&gt;, &lt;code&gt;drag&lt;/code&gt;, and &lt;code&gt;down&lt;/code&gt;. For double or triple events, it also contains &lt;code&gt;double&lt;/code&gt; or &lt;code&gt;triple&lt;/code&gt;.</source>
          <target state="translated">此函数返回 &lt;var&gt;event&lt;/var&gt; 具有的修饰符的列表。修饰符是符号；它们包括 &lt;code&gt;shift&lt;/code&gt; ， &lt;code&gt;control&lt;/code&gt; ， &lt;code&gt;meta&lt;/code&gt; ， &lt;code&gt;alt&lt;/code&gt; ， &lt;code&gt;hyper&lt;/code&gt; 和 &lt;code&gt;super&lt;/code&gt; 。此外，鼠标事件符号的修饰符列表始终包含 &lt;code&gt;click&lt;/code&gt; ， &lt;code&gt;drag&lt;/code&gt; 和 &lt;code&gt;down&lt;/code&gt; 之一。对于两次或三次事件，它还包含 &lt;code&gt;double&lt;/code&gt; 或 &lt;code&gt;triple&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="477497a412a81cb5638327ef01966bb3f7877761" translate="yes" xml:space="preserve">
          <source>This function returns a list of the names of the files in the directory &lt;var&gt;directory&lt;/var&gt;. By default, the list is in alphabetical order.</source>
          <target state="translated">此函数返回目录 &lt;var&gt;directory&lt;/var&gt; 中文件名的列表。默认情况下，列表按字母顺序排列。</target>
        </trans-unit>
        <trans-unit id="300947bce763181aa97455c52764d6aad5cfc8fc" translate="yes" xml:space="preserve">
          <source>This function returns a list of the overlays that overlap the region &lt;var&gt;beg&lt;/var&gt; through &lt;var&gt;end&lt;/var&gt;. An overlay overlaps with a region if it contains one or more characters in the region; empty overlays (see &lt;a href=&quot;managing-overlays#Managing-Overlays&quot;&gt;empty overlay&lt;/a&gt;) overlap if they are at &lt;var&gt;beg&lt;/var&gt;, strictly between &lt;var&gt;beg&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;, or at &lt;var&gt;end&lt;/var&gt; when &lt;var&gt;end&lt;/var&gt; denotes the position at the end of the buffer.</source>
          <target state="translated">此函数返回一个覆盖区域的列表，这些区域与从 &lt;var&gt;end&lt;/var&gt; 到 &lt;var&gt;beg&lt;/var&gt; 的区域重叠。如果覆盖层在一个区域中包含一个或多个字符，则该覆盖层与该区域重叠；空重叠（见&lt;a href=&quot;managing-overlays#Managing-Overlays&quot;&gt;空覆盖&lt;/a&gt;）重叠如果他们是在 &lt;var&gt;beg&lt;/var&gt; ，严格之间 &lt;var&gt;beg&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; ，或者在 &lt;var&gt;end&lt;/var&gt; 时 &lt;var&gt;end&lt;/var&gt; 表示在缓冲器的末端的位置。</target>
        </trans-unit>
        <trans-unit id="79f4b464ac316f96de06744f0fec30389792a0c2" translate="yes" xml:space="preserve">
          <source>This function returns a list of xwidget objects associated with the &lt;var&gt;buffer&lt;/var&gt;, which can be specified as a buffer object or a name of an existing buffer, a string. The value is &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;buffer&lt;/var&gt; contains no xwidgets.</source>
          <target state="translated">此函数返回与 &lt;var&gt;buffer&lt;/var&gt; 关联的xwidget对象的列表，可以将其指定为缓冲区对象或现有缓冲区的名称（字符串）。如果 &lt;var&gt;buffer&lt;/var&gt; 不包含xwidgets，则该值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b882a96ace8721d892e55d65f71ca2a7cd815933" translate="yes" xml:space="preserve">
          <source>This function returns a list representing the window tree for frame &lt;var&gt;frame&lt;/var&gt;. If &lt;var&gt;frame&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected frame.</source>
          <target state="translated">此函数返回一个列表，该列表表示框架 &lt;var&gt;frame&lt;/var&gt; 的窗口树。如果省略 &lt;var&gt;frame&lt;/var&gt; 或 &lt;code&gt;nil&lt;/code&gt; ，则默认为所选框架。</target>
        </trans-unit>
        <trans-unit id="e228febd51574a0495297443f31b5a6d3b5f274a" translate="yes" xml:space="preserve">
          <source>This function returns a list specifying the previous contents of &lt;var&gt;window&lt;/var&gt;. The optional argument &lt;var&gt;window&lt;/var&gt; should be a live window and defaults to the selected one.</source>
          <target state="translated">此函数返回一个列表，该列表指定 &lt;var&gt;window&lt;/var&gt; 的先前内容。可选参数 &lt;var&gt;window&lt;/var&gt; 应为实时窗口，默认为所选窗口。</target>
        </trans-unit>
        <trans-unit id="f5b6a4b5fc6eee459fda6cd7d73e30a3cf406b3d" translate="yes" xml:space="preserve">
          <source>This function returns a list that indicates which X displays Emacs has a connection to. The elements of the list are strings, and each one is a display name.</source>
          <target state="translated">这个函数返回一个列表,表示Emacs与哪些X显示器有连接。列表中的元素是字符串,每个元素都是一个显示名称。</target>
        </trans-unit>
        <trans-unit id="c9f2cef3df64843fc120fa8a891c09707d183853" translate="yes" xml:space="preserve">
          <source>This function returns a live window which is heuristically the least recently used. The optional argument &lt;var&gt;all-frames&lt;/var&gt; has the same meaning as in &lt;code&gt;next-window&lt;/code&gt;.</source>
          <target state="translated">此函数返回一个实时窗口，该窗口启发式地是最近最少使用的窗口。可选参数 &lt;var&gt;all-frames&lt;/var&gt; 与 &lt;code&gt;next-window&lt;/code&gt; 中的含义相同。</target>
        </trans-unit>
        <trans-unit id="80477f39c8b3aa9d70e3f53fbffc728722e96ae9" translate="yes" xml:space="preserve">
          <source>This function returns a live window, the one following &lt;var&gt;window&lt;/var&gt; in the cyclic ordering of windows. &lt;var&gt;window&lt;/var&gt; should be a live window; if omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window.</source>
          <target state="translated">此函数返回一个活动窗口，即 &lt;var&gt;window&lt;/var&gt; 的循环顺序中的下一个窗口。 &lt;var&gt;window&lt;/var&gt; 应该是活动窗口；如果省略或为 &lt;code&gt;nil&lt;/code&gt; ，则默认为所选窗口。</target>
        </trans-unit>
        <trans-unit id="bf995a5af8ef36daf8da535c306242fa54592f6b" translate="yes" xml:space="preserve">
          <source>This function returns a live window, the one preceding &lt;var&gt;window&lt;/var&gt; in the cyclic ordering of windows. The other arguments are handled like in &lt;code&gt;next-window&lt;/code&gt;.</source>
          <target state="translated">此函数返回一个实时窗口，即 &lt;var&gt;window&lt;/var&gt; 的循环顺序中的前一个窗口。其他参数的处理方式类似于 &lt;code&gt;next-window&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="adfdf60a06994086cbf1c5942d8c071b8c9f2057" translate="yes" xml:space="preserve">
          <source>This function returns a multibyte string containing the same sequence of characters as &lt;var&gt;string&lt;/var&gt;. If &lt;var&gt;string&lt;/var&gt; is a multibyte string, it is returned unchanged. The function assumes that &lt;var&gt;string&lt;/var&gt; includes only</source>
          <target state="translated">该函数返回一个包含字符的相同序列的多字节字符串 &lt;var&gt;string&lt;/var&gt; 。如果 &lt;var&gt;string&lt;/var&gt; 是多字节字符串，则返回原样。该函数假定 &lt;var&gt;string&lt;/var&gt; 仅包含</target>
        </trans-unit>
        <trans-unit id="e5dd0de5b87150243ab57a0bdbb8062526303bc6" translate="yes" xml:space="preserve">
          <source>This function returns a name that would be unique for a new buffer&amp;mdash;but does not create the buffer. It starts with &lt;var&gt;starting-name&lt;/var&gt;, and produces a name not currently in use for any buffer by appending a number inside of &amp;lsquo;</source>
          <target state="translated">该函数返回的名称对于新缓冲区将是唯一的，但不会创建该缓冲区。它以 &lt;var&gt;starting-name&lt;/var&gt; 开头，并通过在'后面附加一个数字来产生当前未用于任何缓冲区的名称。</target>
        </trans-unit>
        <trans-unit id="af559cbd3f6c0576d1ed1e5f59f11385960f1bc6" translate="yes" xml:space="preserve">
          <source>This function returns a new Lisp string which contains the JSON representation of &lt;var&gt;object&lt;/var&gt;. The argument &lt;var&gt;args&lt;/var&gt; is a list of keyword/argument pairs. The following keywords are accepted:</source>
          <target state="translated">此函数返回一个新的Lisp字符串，其中包含 &lt;var&gt;object&lt;/var&gt; 的JSON表示形式。参数 &lt;var&gt;args&lt;/var&gt; 是关键字/参数对的列表。接受以下关键字：</target>
        </trans-unit>
        <trans-unit id="9ff7c4309c671cd50bba1ea42220fbe9b2ca37c4" translate="yes" xml:space="preserve">
          <source>This function returns a new category set&amp;mdash;a bool-vector&amp;mdash;whose initial contents are the categories listed in the string &lt;var&gt;categories&lt;/var&gt;. The elements of &lt;var&gt;categories&lt;/var&gt; should be category names; the new category set has &lt;code&gt;t&lt;/code&gt; for each of those categories, and &lt;code&gt;nil&lt;/code&gt; for all other categories.</source>
          <target state="translated">此函数返回一个新的类别集（布尔向量），其初始内容为字符串 &lt;var&gt;categories&lt;/var&gt; 列出的类别。 &lt;var&gt;categories&lt;/var&gt; 的元素应为类别名称；新类别集的每个类别都有 &lt;code&gt;t&lt;/code&gt; ，所有其他类别都为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1485c88a189d9ecd530666315c29a212080417d0" translate="yes" xml:space="preserve">
          <source>This function returns a new function which, when called, will call &lt;var&gt;func&lt;/var&gt; with the list of arguments composed from &lt;var&gt;args&lt;/var&gt; and additional arguments specified at the time of the call. If &lt;var&gt;func&lt;/var&gt; accepts &lt;var&gt;n&lt;/var&gt; arguments, then a call to &lt;code&gt;apply-partially&lt;/code&gt; with &lt;code&gt;&lt;var&gt;m&lt;/var&gt;&amp;nbsp;&amp;lt;&amp;nbsp;&lt;var&gt;n&lt;/var&gt;&lt;/code&gt; arguments will produce a new function of &lt;code&gt;&lt;var&gt;n&lt;/var&gt;&amp;nbsp;-&amp;nbsp;&lt;var&gt;m&lt;/var&gt;&lt;/code&gt; arguments.</source>
          <target state="translated">此函数返回一个新函数，该函数在被调用时将调用 &lt;var&gt;func&lt;/var&gt; ，该函数具有由 &lt;var&gt;args&lt;/var&gt; 组成的参数列表以及在调用时指定的其他参数。如果 &lt;var&gt;func&lt;/var&gt; 接受 &lt;var&gt;n&lt;/var&gt; 个参数，则使用 &lt;code&gt;&lt;var&gt;m&lt;/var&gt;&amp;nbsp;&amp;lt;&amp;nbsp;&lt;var&gt;n&lt;/var&gt;&lt;/code&gt; &amp;nbsp;&amp;lt;&amp;nbsp; &lt;var&gt;n&lt;/var&gt; 个参数 &lt;code&gt;apply-partially&lt;/code&gt; 的调用将产生 &lt;code&gt;&lt;var&gt;n&lt;/var&gt;&amp;nbsp;-&amp;nbsp;&lt;var&gt;m&lt;/var&gt;&lt;/code&gt; &amp;nbsp;-&amp;nbsp; &lt;var&gt;m&lt;/var&gt; 个参数的新函数。</target>
        </trans-unit>
        <trans-unit id="7f808efa3c54759a66e253192a78cfd5f89aa9df" translate="yes" xml:space="preserve">
          <source>This function returns a new keymap composed of the existing keymap(s) &lt;var&gt;maps&lt;/var&gt;, and optionally inheriting from a parent keymap &lt;var&gt;parent&lt;/var&gt;. &lt;var&gt;maps&lt;/var&gt; can be a single keymap or a list of more than one. When looking up a key in the resulting new map, Emacs searches in each of the &lt;var&gt;maps&lt;/var&gt; in turn, and then in &lt;var&gt;parent&lt;/var&gt;, stopping at the first match. A &lt;code&gt;nil&lt;/code&gt; binding in any one of &lt;var&gt;maps&lt;/var&gt; overrides any binding in &lt;var&gt;parent&lt;/var&gt;, but it does not override any non-&lt;code&gt;nil&lt;/code&gt; binding in any other of the &lt;var&gt;maps&lt;/var&gt;.</source>
          <target state="translated">该函数返回现有的键映射（S）组成的新的键映射 &lt;var&gt;maps&lt;/var&gt; ，以及任选地从父键映射继承 &lt;var&gt;parent&lt;/var&gt; 。 &lt;var&gt;maps&lt;/var&gt; 可以是单个键映射，也可以是多个列表。在生成的新地图中查找关键字时，Emacs依次搜索每个 &lt;var&gt;maps&lt;/var&gt; ，然后在 &lt;var&gt;parent&lt;/var&gt; 中搜索，直到第一个匹配项为止。一 &lt;code&gt;nil&lt;/code&gt; 中的任何一个结合 &lt;var&gt;maps&lt;/var&gt; 覆盖在任何约束力的 &lt;var&gt;parent&lt;/var&gt; ，但它并没有覆盖任何非 &lt;code&gt;nil&lt;/code&gt; 任何其他的结合 &lt;var&gt;maps&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="e8c941f46c8ad29a0c8a47adafab07b9b6e616cc" translate="yes" xml:space="preserve">
          <source>This function returns a new marker that points to the beginning of the accessible portion of the buffer. This will be the beginning of the buffer unless narrowing is in effect. See &lt;a href=&quot;narrowing#Narrowing&quot;&gt;Narrowing&lt;/a&gt;.</source>
          <target state="translated">该函数返回一个新的标记，该标记指向缓冲区的可访问部分的开头。除非生效，否则这将是缓冲区的开始。请参阅&lt;a href=&quot;narrowing#Narrowing&quot;&gt;缩小&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6e8b6f33ce6a689de2100d395c76bee3c3fa6651" translate="yes" xml:space="preserve">
          <source>This function returns a new marker that points to the end of the accessible portion of the buffer. This will be the end of the buffer unless narrowing is in effect. See &lt;a href=&quot;narrowing#Narrowing&quot;&gt;Narrowing&lt;/a&gt;.</source>
          <target state="translated">该函数返回一个新的标记，该标记指向缓冲区的可访问部分的末尾。除非生效，否则这将是缓冲区的结尾。请参阅&lt;a href=&quot;narrowing#Narrowing&quot;&gt;缩小&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9e1a3d0a34a7d3b9f63933d81bda922b5a132650" translate="yes" xml:space="preserve">
          <source>This function returns a new marker that points to the present position of point in the current buffer. See &lt;a href=&quot;point#Point&quot;&gt;Point&lt;/a&gt;. For an example, see &lt;code&gt;copy-marker&lt;/code&gt;, below.</source>
          <target state="translated">该函数返回一个新的标记，该标记指向当前缓冲区中点的当前位置。参见&lt;a href=&quot;point#Point&quot;&gt;Point&lt;/a&gt;。有关示例，请参见下面的 &lt;code&gt;copy-marker&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f79dda4fe9c17e733e5eb8431319647b80858aa6" translate="yes" xml:space="preserve">
          <source>This function returns a new object representing &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s current window configuration. The default for &lt;var&gt;frame&lt;/var&gt; is the selected frame. The variable &lt;code&gt;window-persistent-parameters&lt;/code&gt; specifies which window parameters (if any) are saved by this function. See &lt;a href=&quot;window-parameters#Window-Parameters&quot;&gt;Window Parameters&lt;/a&gt;.</source>
          <target state="translated">此函数返回代表 &lt;var&gt;frame&lt;/var&gt; 当前窗口配置的新对象。 &lt;var&gt;frame&lt;/var&gt; 的默认值为所选框架。变量 &lt;code&gt;window-persistent-parameters&lt;/code&gt; 指定此函数保存哪些窗口参数（如果有）。请参阅&lt;a href=&quot;window-parameters#Window-Parameters&quot;&gt;窗口参数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5f58d9fba73f3b413ad4fad2d8fe8c111580eb01" translate="yes" xml:space="preserve">
          <source>This function returns a new record with type &lt;var&gt;type&lt;/var&gt; and &lt;var&gt;length&lt;/var&gt; more slots, each initialized to &lt;var&gt;object&lt;/var&gt;.</source>
          <target state="translated">此函数返回类型为 &lt;var&gt;type&lt;/var&gt; 且 &lt;var&gt;length&lt;/var&gt; slot更长的新记录，每个记录都初始化为 &lt;var&gt;object&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="c04892a7be7db7f15103d07272ae3bb016196f28" translate="yes" xml:space="preserve">
          <source>This function returns a new string containing one character, &lt;var&gt;character&lt;/var&gt;. This function is semi-obsolete because the function &lt;code&gt;string&lt;/code&gt; is more general. See &lt;a href=&quot;creating-strings#Creating-Strings&quot;&gt;Creating Strings&lt;/a&gt;.</source>
          <target state="translated">此函数返回一个包含一个字符 &lt;var&gt;character&lt;/var&gt; 的新字符串。该函数是半淘汰的，因为函数 &lt;code&gt;string&lt;/code&gt; 更为通用。请参阅&lt;a href=&quot;creating-strings#Creating-Strings&quot;&gt;创建字符串&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d8b1995111b6862337f09aedaac2f7f0bb6142f6" translate="yes" xml:space="preserve">
          <source>This function returns a new string which consists of those characters from &lt;var&gt;string&lt;/var&gt; in the range from (and including) the character at the index &lt;var&gt;start&lt;/var&gt; up to (but excluding) the character at the index &lt;var&gt;end&lt;/var&gt;. The first character is at index zero. With one argument, this function just copies &lt;var&gt;string&lt;/var&gt;.</source>
          <target state="translated">该函数返回其由这些字符从一个新的字符串 &lt;var&gt;string&lt;/var&gt; 在从范围内（并包括）的索引中的字符 &lt;var&gt;start&lt;/var&gt; 直到（但不包括）在索引中的字符 &lt;var&gt;end&lt;/var&gt; 。第一个字符在索引零处。使用一个参数，此函数仅复制 &lt;var&gt;string&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="6690a429f01a60dd34108769d390d7b2160aa887" translate="yes" xml:space="preserve">
          <source>This function returns a new vector consisting of &lt;var&gt;length&lt;/var&gt; elements, each initialized to &lt;var&gt;object&lt;/var&gt;.</source>
          <target state="translated">此函数返回一个新的向量，该向量由 &lt;var&gt;length&lt;/var&gt; 元素组成，每个元素都初始化为 &lt;var&gt;object&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="e837af72d27c36255507ab3f76e911a063b2fe63" translate="yes" xml:space="preserve">
          <source>This function returns a new vector containing all the elements of &lt;var&gt;sequences&lt;/var&gt;. The arguments &lt;var&gt;sequences&lt;/var&gt; may be proper lists, vectors, strings or bool-vectors. If no &lt;var&gt;sequences&lt;/var&gt; are given, the empty vector is returned.</source>
          <target state="translated">此函数返回一个新矢量，其中包含 &lt;var&gt;sequences&lt;/var&gt; 所有元素。参数 &lt;var&gt;sequences&lt;/var&gt; 可以是适当的列表，向量，字符串或布尔向量。如果没有给出 &lt;var&gt;sequences&lt;/var&gt; ，则返回空向量。</target>
        </trans-unit>
        <trans-unit id="1280d0dad8dedaef4a1bc18449ec69dd17d40ea5" translate="yes" xml:space="preserve">
          <source>This function returns a newly created marker that does not point anywhere.</source>
          <target state="translated">这个函数返回一个新创建的不指向任何地方的标记。</target>
        </trans-unit>
        <trans-unit id="e64784d577591f9bcf6d76e9478f8714941750f0" translate="yes" xml:space="preserve">
          <source>This function returns a newly created, empty buffer, but does not make it current. The name of the buffer is generated by passing &lt;var&gt;name&lt;/var&gt; to the function &lt;code&gt;generate-new-buffer-name&lt;/code&gt; (see &lt;a href=&quot;buffer-names#Buffer-Names&quot;&gt;Buffer Names&lt;/a&gt;). Thus, if there is no buffer named &lt;var&gt;name&lt;/var&gt;, then that is the name of the new buffer; if that name is in use, a suffix of the form &amp;lsquo;</source>
          <target state="translated">该函数返回一个新创建的空缓冲区，但不会使其成为当前缓冲区。缓冲区的名称是通过将 &lt;var&gt;name&lt;/var&gt; 传递给函数 &lt;code&gt;generate-new-buffer-name&lt;/code&gt; 生成的（请参阅&amp;ldquo;&lt;a href=&quot;buffer-names#Buffer-Names&quot;&gt;缓冲区名称&amp;rdquo;&lt;/a&gt;）。因此，如果没有名为 &lt;var&gt;name&lt;/var&gt; 的缓冲区，则为新缓冲区的名称。如果使用了该名称，则后缀为'</target>
        </trans-unit>
        <trans-unit id="3f536fa772b7ad902da2f6162c35cdab77dea648" translate="yes" xml:space="preserve">
          <source>This function returns a newly-allocated, uninterned symbol whose name is &lt;var&gt;name&lt;/var&gt; (which must be a string). Its value and function definition are void, and its property list is &lt;code&gt;nil&lt;/code&gt;. In the example below, the value of &lt;code&gt;sym&lt;/code&gt; is not &lt;code&gt;eq&lt;/code&gt; to &lt;code&gt;foo&lt;/code&gt; because it is a distinct uninterned symbol whose name is also &amp;lsquo;</source>
          <target state="translated">此函数返回名称为 &lt;var&gt;name&lt;/var&gt; （必须为字符串）的新分配的，未保留的符号。其值和函数定义为void，其属性列表为 &lt;code&gt;nil&lt;/code&gt; 。在以下示例中， &lt;code&gt;sym&lt;/code&gt; 的值不是 &lt;code&gt;foo&lt;/code&gt; 的 &lt;code&gt;eq&lt;/code&gt; ，因为它是一个独特的未中断符号，其名称也为'</target>
        </trans-unit>
        <trans-unit id="32f44e9cc63cb48b9eb39be5d4046025b547e176" translate="yes" xml:space="preserve">
          <source>This function returns a non-&lt;code&gt;nil&lt;/code&gt; value if &lt;var&gt;filename&lt;/var&gt; is a possible name for a backup file. It just checks the name, not whether a file with the name &lt;var&gt;filename&lt;/var&gt; exists.</source>
          <target state="translated">如果 &lt;var&gt;filename&lt;/var&gt; 是备份文件的可能名称，则此函数返回非 &lt;code&gt;nil&lt;/code&gt; 值。它只是检查名称，而不检查名称为 &lt;var&gt;filename&lt;/var&gt; 的文件是否存在。</target>
        </trans-unit>
        <trans-unit id="4ff1c46d6bb734b7388adee86c259455ed72038f" translate="yes" xml:space="preserve">
          <source>This function returns a non-&lt;code&gt;nil&lt;/code&gt; value if &lt;var&gt;filename&lt;/var&gt; is a string that could be the name of an auto-save file. It assumes the usual naming convention for auto-save files: a name that begins and ends with hash marks (&amp;lsquo;</source>
          <target state="translated">如果 &lt;var&gt;filename&lt;/var&gt; 是一个可以作为自动保存文件名的字符串，则此函数返回非 &lt;code&gt;nil&lt;/code&gt; 值。它假定了自动保存文件的惯用命名约定：名称以井号（。</target>
        </trans-unit>
        <trans-unit id="ae58f4be7ddaefc5b75b1f759ccee8efc24264f0" translate="yes" xml:space="preserve">
          <source>This function returns a non-&lt;code&gt;nil&lt;/code&gt; value if &lt;var&gt;object&lt;/var&gt; is a named face: a Lisp symbol or string which serves as a face name. Otherwise, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;var&gt;object&lt;/var&gt; 是已命名的面孔，则此函数将返回非 &lt;code&gt;nil&lt;/code&gt; 值：用作面孔名称的Lisp符号或字符串。否则，它返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d4123054fe06f368fce96acc40e109e29c65d252" translate="yes" xml:space="preserve">
          <source>This function returns a non-&lt;code&gt;nil&lt;/code&gt; value if &lt;var&gt;object&lt;/var&gt; is an abbrev table.</source>
          <target state="translated">如果 &lt;var&gt;object&lt;/var&gt; 是一个缩写表，此函数将返回一个非 &lt;code&gt;nil&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="f882a4ced1b43cd6d03f93026ab380883f47da18" translate="yes" xml:space="preserve">
          <source>This function returns a non-&lt;code&gt;nil&lt;/code&gt; value if and only if &lt;var&gt;window&lt;/var&gt; is part of a vertical combination. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected one.</source>
          <target state="translated">当且仅当 &lt;var&gt;window&lt;/var&gt; 是垂直组合的一部分时，此函数才返回非 &lt;code&gt;nil&lt;/code&gt; 值。如果 &lt;var&gt;window&lt;/var&gt; 省略或为 &lt;code&gt;nil&lt;/code&gt; ，则默认为选定的窗口。</target>
        </trans-unit>
        <trans-unit id="e398a5c714939d364280e7b1c8c30c9b899feddb" translate="yes" xml:space="preserve">
          <source>This function returns a non-&lt;code&gt;nil&lt;/code&gt; value if the &lt;code&gt;:slant&lt;/code&gt; attribute of &lt;var&gt;face&lt;/var&gt; is &lt;code&gt;italic&lt;/code&gt; or &lt;code&gt;oblique&lt;/code&gt;, and &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">如果 &lt;var&gt;face&lt;/var&gt; 的 &lt;code&gt;:slant&lt;/code&gt; 属性为 &lt;code&gt;italic&lt;/code&gt; 或 &lt;code&gt;oblique&lt;/code&gt; ，则此函数返回一个非 &lt;code&gt;nil&lt;/code&gt; 值，否则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7f84700f5a0b63dd9d5d285aba89f5de4707a3b1" translate="yes" xml:space="preserve">
          <source>This function returns a non-&lt;code&gt;nil&lt;/code&gt; value if the &lt;code&gt;:weight&lt;/code&gt; attribute of &lt;var&gt;face&lt;/var&gt; is bolder than normal (i.e., one of &lt;code&gt;semi-bold&lt;/code&gt;, &lt;code&gt;bold&lt;/code&gt;, &lt;code&gt;extra-bold&lt;/code&gt;, or &lt;code&gt;ultra-bold&lt;/code&gt;). Otherwise, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;var&gt;face&lt;/var&gt; 的 &lt;code&gt;:weight&lt;/code&gt; 属性比正常 &lt;code&gt;semi-bold&lt;/code&gt; （即，Half-bold， &lt;code&gt;bold&lt;/code&gt; ， &lt;code&gt;extra-bold&lt;/code&gt; 或 &lt;code&gt;ultra-bold&lt;/code&gt; 之一），此函数将返回一个非 &lt;code&gt;nil&lt;/code&gt; 值。否则，它返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="78769ad86da07df201ca306f3755aed7ec97e6c4" translate="yes" xml:space="preserve">
          <source>This function returns a nondeleted process associated with the buffer specified by &lt;var&gt;buffer-or-name&lt;/var&gt;. If there are several processes associated with it, this function chooses one (currently, the one most recently created, but don&amp;rsquo;t count on that). Deletion of a process (see &lt;code&gt;delete-process&lt;/code&gt;) makes it ineligible for this function to return.</source>
          <target state="translated">此函数返回与 &lt;var&gt;buffer-or-name&lt;/var&gt; 指定的缓冲区关联的未删除进程。如果有多个与之关联的进程，则此函数选择一个（当前为最近创建的一个，但不要指望）。删除进程（请参阅 &lt;code&gt;delete-process&lt;/code&gt; ）使该函数不符合返回条件。</target>
        </trans-unit>
        <trans-unit id="674ae0573e7ac049b711fa0a6f8b253c3d3ba8f5" translate="yes" xml:space="preserve">
          <source>This function returns a notification id, an integer, which can be used to manipulate the notification item with &lt;code&gt;notifications-close-notification&lt;/code&gt; or the &lt;code&gt;:replaces-id&lt;/code&gt; argument of another &lt;code&gt;notifications-notify&lt;/code&gt; call. For example:</source>
          <target state="translated">此函数返回一个通知ID（整数），可用于通过 &lt;code&gt;notifications-close-notification&lt;/code&gt; 或另一个 &lt;code&gt;notifications-notify&lt;/code&gt; 调用的 &lt;code&gt;:replaces-id&lt;/code&gt; 参数来操作通知项。例如：</target>
        </trans-unit>
        <trans-unit id="1380e0e5d886fdb04e35cb1e0a017e4c9a548740" translate="yes" xml:space="preserve">
          <source>This function returns a position list for position &lt;var&gt;pos&lt;/var&gt; in &lt;var&gt;window&lt;/var&gt;. &lt;var&gt;pos&lt;/var&gt; defaults to point in &lt;var&gt;window&lt;/var&gt;; &lt;var&gt;window&lt;/var&gt; defaults to the selected window.</source>
          <target state="translated">该函数返回位置的位置列表 &lt;var&gt;pos&lt;/var&gt; 的 &lt;var&gt;window&lt;/var&gt; 。 &lt;var&gt;pos&lt;/var&gt; 默认指向 &lt;var&gt;window&lt;/var&gt; ; &lt;var&gt;window&lt;/var&gt; 默认为所选窗口。</target>
        </trans-unit>
        <trans-unit id="3c56570281b7c2efbcfcb2aeb7ac74d4c7f717cb" translate="yes" xml:space="preserve">
          <source>This function returns a pseudo-random integer. Repeated calls return a series of pseudo-random integers.</source>
          <target state="translated">该函数返回一个伪随机整数。重复调用会返回一系列伪随机整数。</target>
        </trans-unit>
        <trans-unit id="759fc0706bb9eac67a116766d74096d40847a37f" translate="yes" xml:space="preserve">
          <source>This function returns a regular expression matching a character in the list of characters &lt;var&gt;chars&lt;/var&gt;.</source>
          <target state="translated">此函数返回与字符 &lt;var&gt;chars&lt;/var&gt; 列表中的字符匹配的正则表达式。</target>
        </trans-unit>
        <trans-unit id="9b9f51013607f0a85d2e22cd22814dd75586068a" translate="yes" xml:space="preserve">
          <source>This function returns a regular expression whose only exact match is &lt;var&gt;string&lt;/var&gt;. Using this regular expression in &lt;code&gt;looking-at&lt;/code&gt; will succeed only if the next characters in the buffer are &lt;var&gt;string&lt;/var&gt;; using it in a search function will succeed if the text being searched contains &lt;var&gt;string&lt;/var&gt;. See &lt;a href=&quot;regexp-search#Regexp-Search&quot;&gt;Regexp Search&lt;/a&gt;.</source>
          <target state="translated">此函数返回一个唯一匹配为 &lt;var&gt;string&lt;/var&gt; 的正则表达式。仅当缓冲区中的下一个字符为 &lt;var&gt;string&lt;/var&gt; 时，在 &lt;code&gt;looking-at&lt;/code&gt; 使用此正则表达式才会成功；如果要搜索的文本包含 &lt;var&gt;string&lt;/var&gt; 则将其用于搜索功能将成功。请参阅正则&lt;a href=&quot;regexp-search#Regexp-Search&quot;&gt;表达式搜索&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a46f4ba295c5e4ef0a168fe080fb496124ffc86a" translate="yes" xml:space="preserve">
          <source>This function returns a sequence of type &lt;var&gt;type&lt;/var&gt; made of the concatenation of &lt;var&gt;sequences&lt;/var&gt;. &lt;var&gt;type&lt;/var&gt; may be: &lt;code&gt;vector&lt;/code&gt;, &lt;code&gt;list&lt;/code&gt; or &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">此函数返回由序列的串联组成的类型为 &lt;var&gt;type&lt;/var&gt; 的 &lt;var&gt;sequences&lt;/var&gt; 。 &lt;var&gt;type&lt;/var&gt; 可以是： &lt;code&gt;vector&lt;/code&gt; ， &lt;code&gt;list&lt;/code&gt; 或 &lt;code&gt;string&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="970f44cbfc9e0f5ee7e45da156231bdf87e76a13" translate="yes" xml:space="preserve">
          <source>This function returns a string consisting of the characters in the arguments passed to it (along with their text properties, if any). The arguments may be strings, lists of numbers, or vectors of numbers; they are not themselves changed. If &lt;code&gt;concat&lt;/code&gt; receives no arguments, it returns an empty string.</source>
          <target state="translated">该函数返回一个字符串，该字符串包含传递给它的参数中的字符（以及它们的文本属性，如果有的话）。参数可以是字符串，数字列表或数字向量。他们自己并没有改变。如果 &lt;code&gt;concat&lt;/code&gt; 没有收到任何参数，它将返回一个空字符串。</target>
        </trans-unit>
        <trans-unit id="0184c0f2b962177205aec154fa9def622045be1c" translate="yes" xml:space="preserve">
          <source>This function returns a string consisting of the printed base-ten representation of &lt;var&gt;number&lt;/var&gt;. The returned value starts with a minus sign if the argument is negative.</source>
          <target state="translated">此函数返回一个字符串，该字符串由 &lt;var&gt;number&lt;/var&gt; 的打印后十进制表示形式组成。如果参数为负，则返回的值以减号开头。</target>
        </trans-unit>
        <trans-unit id="6ae4b511449470b38bd88321d62c6c83e451c5cc" translate="yes" xml:space="preserve">
          <source>This function returns a string containing a copy of the text of the region defined by positions &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; in the current buffer. If the arguments are not positions in the accessible portion of the buffer, &lt;code&gt;buffer-substring&lt;/code&gt; signals an &lt;code&gt;args-out-of-range&lt;/code&gt; error.</source>
          <target state="translated">此函数返回一个字符串，该字符串包含当前缓冲区中 &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 位置所定义的区域文本的副本。如果参数不在缓冲区可访问部分中的位置，则 &lt;code&gt;buffer-substring&lt;/code&gt; 发出 &lt;code&gt;args-out-of-range&lt;/code&gt; 错误的信号。</target>
        </trans-unit>
        <trans-unit id="96b61e3373be79ab74f238c1d86def0c3013feba" translate="yes" xml:space="preserve">
          <source>This function returns a string containing the Emacs standard notation for the input events in &lt;var&gt;sequence&lt;/var&gt;. If &lt;var&gt;prefix&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it is a sequence of input events leading up to &lt;var&gt;sequence&lt;/var&gt; and is included in the return value. Both arguments may be strings, vectors or lists. See &lt;a href=&quot;input-events#Input-Events&quot;&gt;Input Events&lt;/a&gt;, for more information about valid events.</source>
          <target state="translated">此函数按 &lt;var&gt;sequence&lt;/var&gt; 返回包含输入事件的Emacs标准表示法的字符串。如果 &lt;var&gt;prefix&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则它是导致事件进入 &lt;var&gt;sequence&lt;/var&gt; 的一系列输入事件，并包含在返回值中。这两个参数都可以是字符串，向量或列表。有关有效事件的更多信息，请参见&lt;a href=&quot;input-events#Input-Events&quot;&gt;输入&lt;/a&gt;事件。</target>
        </trans-unit>
        <trans-unit id="64ae28a2441e036baf8d39bf44b681e539af4f85" translate="yes" xml:space="preserve">
          <source>This function returns a string containing the text that &lt;code&gt;prin1&lt;/code&gt; would have printed for the same argument.</source>
          <target state="translated">该函数返回一个字符串，其中包含 &lt;code&gt;prin1&lt;/code&gt; 将为相同参数打印的文本。</target>
        </trans-unit>
        <trans-unit id="df7ea262425f6df1405c4cb3b9b8831733d7eb7d" translate="yes" xml:space="preserve">
          <source>This function returns a string describing &lt;var&gt;character&lt;/var&gt; in the standard Emacs notation for characters that can appear in text&amp;mdash;similar to &lt;code&gt;single-key-description&lt;/code&gt;, except that the argument must be a valid character code that passes a &lt;code&gt;characterp&lt;/code&gt; test (see &lt;a href=&quot;character-codes#Character-Codes&quot;&gt;Character Codes&lt;/a&gt;). The function produces descriptions of control characters with a leading caret (which is how Emacs usually displays control characters in buffers). Characters with modifier bits will cause this function to signal an error (</source>
          <target state="translated">该函数返回描述字符串 &lt;var&gt;character&lt;/var&gt; 为可出现在文本类似于字符在标准的Emacs符号 &lt;code&gt;single-key-description&lt;/code&gt; ，除了参数必须是穿过的一个有效字符码 &lt;code&gt;characterp&lt;/code&gt; 试验（见&lt;a href=&quot;character-codes#Character-Codes&quot;&gt;字符代码&lt;/a&gt;）。该函数使用前导插入符号生成控制字符的描述（这是Emacs通常在缓冲区中显示控制字符的方式）。具有修饰符位的字符将导致此功能发出错误信号（</target>
        </trans-unit>
        <trans-unit id="925de6aa4ae2691a3389dcff76193993b3b4d6ea" translate="yes" xml:space="preserve">
          <source>This function returns a string describing &lt;var&gt;event&lt;/var&gt; in the standard Emacs notation for keyboard input. A normal printing character appears as itself, but a control character turns into a string starting with &amp;lsquo;</source>
          <target state="translated">此函数以标准Emacs表示法返回一个描述 &lt;var&gt;event&lt;/var&gt; 的字符串，用于键盘输入。正常的打印字符本身会出现，但是控制字符会变成以'开头的字符串</target>
        </trans-unit>
        <trans-unit id="e1ae822258c47dccc33385218ca9c90ad60f9fd3" translate="yes" xml:space="preserve">
          <source>This function returns a string describing the version of Emacs that is running. It is useful to include this string in bug reports.</source>
          <target state="translated">这个函数返回一个描述正在运行的Emacs版本的字符串。在错误报告中包含这个字符串是很有用的。</target>
        </trans-unit>
        <trans-unit id="d6a58c23f794afd166d91f838cdae85043eb7528" translate="yes" xml:space="preserve">
          <source>This function returns a string equal to &lt;var&gt;string&lt;/var&gt;, replacing any format specifications with encodings of the corresponding &lt;var&gt;objects&lt;/var&gt;. The arguments &lt;var&gt;objects&lt;/var&gt; are the computed values to be formatted.</source>
          <target state="translated">此函数返回一个等于 &lt;var&gt;string&lt;/var&gt; 的字符串，用相应 &lt;var&gt;objects&lt;/var&gt; 编码替换任何格式规范。参数 &lt;var&gt;objects&lt;/var&gt; 是要格式化的计算值。</target>
        </trans-unit>
        <trans-unit id="2ac349769bab94e1576989333edf179c0599d72c" translate="yes" xml:space="preserve">
          <source>This function returns a string made up of &lt;var&gt;count&lt;/var&gt; repetitions of &lt;var&gt;character&lt;/var&gt;. If &lt;var&gt;count&lt;/var&gt; is negative, an error is signaled.</source>
          <target state="translated">此函数返回由 &lt;var&gt;character&lt;/var&gt; 的 &lt;var&gt;count&lt;/var&gt; 重复组成的字符串。如果 &lt;var&gt;count&lt;/var&gt; 为负，则表明存在错误。</target>
        </trans-unit>
        <trans-unit id="08200ebc3bb0117a3be3ae9d9661fb425f7b4747" translate="yes" xml:space="preserve">
          <source>This function returns a string or vector containing the key sequence that invoked the present command, plus any previous commands that generated the prefix argument for this command. Any events read by the command using &lt;code&gt;read-event&lt;/code&gt; without a timeout get tacked on to the end.</source>
          <target state="translated">该函数返回一个字符串或向量，其中包含调用当前命令的键序列以及生成该命令的前缀参数的所有先前命令。该命令使用 &lt;code&gt;read-event&lt;/code&gt; 读取的任何事件均不超时，将被附加到结尾。</target>
        </trans-unit>
        <trans-unit id="cddb518d200c0940a82717c64820894041ae40bf" translate="yes" xml:space="preserve">
          <source>This function returns a string produced from the format string &lt;var&gt;template&lt;/var&gt; according to conversions specified in &lt;var&gt;spec-alist&lt;/var&gt;, which is an alist (see &lt;a href=&quot;association-lists#Association-Lists&quot;&gt;Association Lists&lt;/a&gt;) of the form &lt;code&gt;(&lt;var&gt;letter&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;replacement&lt;/var&gt;)&lt;/code&gt;. Each specification &lt;code&gt;%&lt;var&gt;letter&lt;/var&gt;&lt;/code&gt; in &lt;var&gt;template&lt;/var&gt; will be replaced by &lt;var&gt;replacement&lt;/var&gt; when formatting the resulting string.</source>
          <target state="translated">此函数根据 &lt;var&gt;spec-alist&lt;/var&gt; 中指定的转换返回从格式字符串 &lt;var&gt;template&lt;/var&gt; 生成的字符串，该规范是形式为 &lt;code&gt;(&lt;var&gt;letter&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;replacement&lt;/var&gt;)&lt;/code&gt; &lt;var&gt;letter&lt;/var&gt; &amp;nbsp;。&amp;nbsp; &lt;var&gt;replacement&lt;/var&gt; ）的&lt;a href=&quot;association-lists#Association-Lists&quot;&gt;列表&lt;/a&gt;（请参阅关联列表）。每种规格 &lt;code&gt;%&lt;var&gt;letter&lt;/var&gt;&lt;/code&gt; &lt;var&gt;letter&lt;/var&gt; 中 &lt;var&gt;template&lt;/var&gt; 将被替换为 &lt;var&gt;replacement&lt;/var&gt; 格式生成的字符串时。</target>
        </trans-unit>
        <trans-unit id="c4dd16068046b47fe84705f033cd106e0577ecd8" translate="yes" xml:space="preserve">
          <source>This function returns a string representing &lt;var&gt;dirname&lt;/var&gt; in a form that the operating system will interpret as the name of a file (a directory file name). On most systems, this means removing the final directory separators from the string, unless the string consists entirely of directory separators.</source>
          <target state="translated">此函数以操作系统会将其解释为文件名（目录文件名）的形式返回代表 &lt;var&gt;dirname&lt;/var&gt; 的字符串。在大多数系统上，这意味着从字符串中删除最终目录分隔符，除非字符串完全由目录分隔符组成。</target>
        </trans-unit>
        <trans-unit id="ac6d324ce6571f8907ce83b4c6a1840a0b47d08d" translate="yes" xml:space="preserve">
          <source>This function returns a string representing &lt;var&gt;filename&lt;/var&gt; in a form that the operating system will interpret as the name of a directory (a directory name). On most systems, this means appending a slash to the string (if it does not already end in one).</source>
          <target state="translated">此函数以操作系统会将其解释为目录名（目录名）的形式返回表示 &lt;var&gt;filename&lt;/var&gt; 的字符串。在大多数系统上，这意味着在字符串后面加上斜杠（如果还没有以1结尾）。</target>
        </trans-unit>
        <trans-unit id="a240ea8860f8a04dc69164c9d79ed71721341812" translate="yes" xml:space="preserve">
          <source>This function returns a string representing the Emacs &lt;em&gt;uptime&lt;/em&gt;&amp;mdash;the elapsed wall-clock time this instance of Emacs is running. The string is formatted by &lt;code&gt;format-seconds&lt;/code&gt; according to the optional argument &lt;var&gt;format&lt;/var&gt;. For the available format descriptors, see &lt;a href=&quot;time-parsing#Time-Parsing&quot;&gt;format-seconds&lt;/a&gt;. If &lt;var&gt;format&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or omitted, it defaults to &lt;code&gt;&quot;%Y, %D, %H, %M,
%z%S&quot;&lt;/code&gt;.</source>
          <target state="translated">此函数返回一个表示Emacs&lt;em&gt;正常运行时间&lt;/em&gt;的字符串，该&lt;em&gt;时间&lt;/em&gt;是Emacs实例正在运行的挂钟时间。字符串根据可选参数 &lt;var&gt;format&lt;/var&gt; 以 &lt;code&gt;format-seconds&lt;/code&gt; 格式格式化。有关可用的格式描述符，请参见&lt;a href=&quot;time-parsing#Time-Parsing&quot;&gt;format-seconds&lt;/a&gt;。如果 &lt;var&gt;format&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; 或省略，则默认为 &lt;code&gt;&quot;%Y, %D, %H, %M, %z%S&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="42f6fca8593a74ad52159eb1b774648dac497e41" translate="yes" xml:space="preserve">
          <source>This function returns a string that is the name to use for a non-numbered backup file for file &lt;var&gt;filename&lt;/var&gt;. On Unix, this is just &lt;var&gt;filename&lt;/var&gt; with a tilde appended.</source>
          <target state="translated">此函数返回一个字符串，该字符串是用于文件 &lt;var&gt;filename&lt;/var&gt; 的非编号备份文件的名称。在Unix上，这只是附加了波浪号的 &lt;var&gt;filename&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="2770872a5d2cbcf9576cf51c3306ec38fa18549e" translate="yes" xml:space="preserve">
          <source>This function returns a string that represents, in shell syntax, an argument whose actual contents are &lt;var&gt;argument&lt;/var&gt;. It should work reliably to concatenate the return value into a shell command and then pass it to a shell for execution.</source>
          <target state="translated">该函数返回一个字符串，该字符串以shell语法表示一个参数，其实际内容为 &lt;var&gt;argument&lt;/var&gt; s。它应该可靠地工作，以将返回值连接到shell命令，然后将其传递给shell执行。</target>
        </trans-unit>
        <trans-unit id="273c6a3f1c307aba5dfedc3db7ed1d4776cb9a03" translate="yes" xml:space="preserve">
          <source>This function returns a subset of &lt;var&gt;sequence&lt;/var&gt; from &lt;var&gt;start&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt;, both integers (&lt;var&gt;end&lt;/var&gt; defaults to the last element). If &lt;var&gt;start&lt;/var&gt; or &lt;var&gt;end&lt;/var&gt; is negative, it counts from the end of &lt;var&gt;sequence&lt;/var&gt;.</source>
          <target state="translated">此函数返回的子集 &lt;var&gt;sequence&lt;/var&gt; 从 &lt;var&gt;start&lt;/var&gt; 到 &lt;var&gt;end&lt;/var&gt; ，无论整数（ &lt;var&gt;end&lt;/var&gt; 默认为最后一个元素）。如果 &lt;var&gt;start&lt;/var&gt; 或 &lt;var&gt;end&lt;/var&gt; 为负，则从 &lt;var&gt;sequence&lt;/var&gt; 的末尾开始计数。</target>
        </trans-unit>
        <trans-unit id="44368fa6e52e45720ab82e1c9ad5ad70b5c2ec8c" translate="yes" xml:space="preserve">
          <source>This function returns a suitable coding system for file &lt;var&gt;filename&lt;/var&gt;. It uses &lt;code&gt;find-auto-coding&lt;/code&gt; to find the coding system. If no coding system could be determined, the function returns &lt;code&gt;nil&lt;/code&gt;. The meaning of the argument &lt;var&gt;size&lt;/var&gt; is like in &lt;code&gt;find-auto-coding&lt;/code&gt;.</source>
          <target state="translated">该函数返回一个适合文件 &lt;var&gt;filename&lt;/var&gt; 编码系统。它使用 &lt;code&gt;find-auto-coding&lt;/code&gt; 来查找编码系统。如果无法确定编码系统，则该函数返回 &lt;code&gt;nil&lt;/code&gt; 。参数 &lt;var&gt;size&lt;/var&gt; 的含义类似于 &lt;code&gt;find-auto-coding&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9d29bef58b86d34d1bd163f30c47e824b9af9634" translate="yes" xml:space="preserve">
          <source>This function returns a suitable search path for images used by the Lisp package &lt;var&gt;library&lt;/var&gt;.</source>
          <target state="translated">该函数为Lisp软件包 &lt;var&gt;library&lt;/var&gt; 使用的图像返回合适的搜索路径。</target>
        </trans-unit>
        <trans-unit id="7063bb301499aa8bfa63acd381392672a7260935" translate="yes" xml:space="preserve">
          <source>This function returns a symbol naming the primitive type of &lt;var&gt;object&lt;/var&gt;. The value is one of the symbols &lt;code&gt;bool-vector&lt;/code&gt;, &lt;code&gt;buffer&lt;/code&gt;, &lt;code&gt;char-table&lt;/code&gt;, &lt;code&gt;compiled-function&lt;/code&gt;, &lt;code&gt;condition-variable&lt;/code&gt;, &lt;code&gt;cons&lt;/code&gt;, &lt;code&gt;finalizer&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;font-entity&lt;/code&gt;, &lt;code&gt;font-object&lt;/code&gt;, &lt;code&gt;font-spec&lt;/code&gt;, &lt;code&gt;frame&lt;/code&gt;, &lt;code&gt;hash-table&lt;/code&gt;, &lt;code&gt;integer&lt;/code&gt;, &lt;code&gt;marker&lt;/code&gt;, &lt;code&gt;mutex&lt;/code&gt;, &lt;code&gt;overlay&lt;/code&gt;, &lt;code&gt;process&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt;, &lt;code&gt;subr&lt;/code&gt;, &lt;code&gt;symbol&lt;/code&gt;, &lt;code&gt;thread&lt;/code&gt;, &lt;code&gt;vector&lt;/code&gt;, &lt;code&gt;window&lt;/code&gt;, or &lt;code&gt;window-configuration&lt;/code&gt;. However, if &lt;var&gt;object&lt;/var&gt; is a record, the type specified by its first slot is returned; &lt;a href=&quot;records#Records&quot;&gt;Records&lt;/a&gt;.</source>
          <target state="translated">此函数返回一个命名 &lt;var&gt;object&lt;/var&gt; 原始类型的符号。该值是以下符号之一： &lt;code&gt;bool-vector&lt;/code&gt; ， &lt;code&gt;buffer&lt;/code&gt; ， &lt;code&gt;char-table&lt;/code&gt; ， &lt;code&gt;compiled-function&lt;/code&gt; ， &lt;code&gt;condition-variable&lt;/code&gt; ， &lt;code&gt;cons&lt;/code&gt; ， &lt;code&gt;finalizer&lt;/code&gt; ， &lt;code&gt;float&lt;/code&gt; ， &lt;code&gt;font-entity&lt;/code&gt; ， &lt;code&gt;font-object&lt;/code&gt; ， &lt;code&gt;font-spec&lt;/code&gt; ， &lt;code&gt;frame&lt;/code&gt; ， &lt;code&gt;hash-table&lt;/code&gt; ， &lt;code&gt;integer&lt;/code&gt; ， &lt;code&gt;marker&lt;/code&gt; ， &lt;code&gt;mutex&lt;/code&gt; ， &lt;code&gt;overlay&lt;/code&gt; ， &lt;code&gt;process&lt;/code&gt; ， &lt;code&gt;string&lt;/code&gt; ， &lt;code&gt;subr&lt;/code&gt; ， &lt;code&gt;symbol&lt;/code&gt; ， &lt;code&gt;thread&lt;/code&gt; ， &lt;code&gt;vector&lt;/code&gt; ， &lt;code&gt;window&lt;/code&gt; 或 &lt;code&gt;window-configuration&lt;/code&gt; 。但是，如果 &lt;var&gt;object&lt;/var&gt; 是一条记录，则返回其第一个插槽指定的类型；否则，返回false。&lt;a href=&quot;records#Records&quot;&gt;记录&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="94becbae5ab04354e82f37b34cff5e832a237fc9" translate="yes" xml:space="preserve">
          <source>This function returns a symbol using &lt;code&gt;make-symbol&lt;/code&gt;, whose name is made by appending &lt;code&gt;gensym-counter&lt;/code&gt; to &lt;var&gt;prefix&lt;/var&gt;. The prefix defaults to &lt;code&gt;&quot;g&quot;&lt;/code&gt;.</source>
          <target state="translated">此函数使用 &lt;code&gt;make-symbol&lt;/code&gt; 返回一个符号，其名称是通过将 &lt;code&gt;gensym-counter&lt;/code&gt; 附加到 &lt;var&gt;prefix&lt;/var&gt; 来完成的。前缀默认为 &lt;code&gt;&quot;g&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9d12671d99ca723ab7b84be0c58aaa976a89a9d9" translate="yes" xml:space="preserve">
          <source>This function returns a symbol whose name tells what window system is used for displaying &lt;var&gt;frame&lt;/var&gt; (which defaults to the currently selected frame). The list of possible symbols it returns is the same one documented for the variable &lt;code&gt;window-system&lt;/code&gt; above.</source>
          <target state="translated">此函数返回一个符号，其名称告诉您使用哪个窗口系统显示 &lt;var&gt;frame&lt;/var&gt; （默认为当前选定的框架）。它返回的可能符号列表与上面针对可变 &lt;code&gt;window-system&lt;/code&gt; 记录的符号列表相同。</target>
        </trans-unit>
        <trans-unit id="c5715c93d9a70b4dd0aa0624f375f2dff96d825f" translate="yes" xml:space="preserve">
          <source>This function returns a terminal whose device name is given by &lt;var&gt;device&lt;/var&gt;. If &lt;var&gt;device&lt;/var&gt; is a string, it can be either the file name of a terminal device, or the name of an X display of the form &amp;lsquo;</source>
          <target state="translated">此函数返回一个终端，其设备名称由 &lt;var&gt;device&lt;/var&gt; 给出。如果 &lt;var&gt;device&lt;/var&gt; 是字符串，则可以是终端设备的文件名，也可以是形式为'</target>
        </trans-unit>
        <trans-unit id="47062b73691a0d576711088c72d57db267ec8e48" translate="yes" xml:space="preserve">
          <source>This function returns a translation table based on the argument &lt;var&gt;translations&lt;/var&gt;. Each element of &lt;var&gt;translations&lt;/var&gt; should be a list of elements of the form &lt;code&gt;(&lt;var&gt;from&lt;/var&gt; . &lt;var&gt;to&lt;/var&gt;)&lt;/code&gt;; this says to translate the character &lt;var&gt;from&lt;/var&gt; into &lt;var&gt;to&lt;/var&gt;.</source>
          <target state="translated">此函数基于参数 &lt;var&gt;translations&lt;/var&gt; 返回转换表。中的每个元素 &lt;var&gt;translations&lt;/var&gt; 应该是这样的形式的元素的列表 &lt;code&gt;(&lt;var&gt;from&lt;/var&gt; . &lt;var&gt;to&lt;/var&gt;)&lt;/code&gt; ; 这表示将字符 &lt;var&gt;from&lt;/var&gt; 转换 &lt;var&gt;to&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="e5f190a9d85b3cebe443f112ea70c521f9e0dae2" translate="yes" xml:space="preserve">
          <source>This function returns a translation table made from &lt;var&gt;vec&lt;/var&gt; that is an array of 256 elements to map bytes (values 0 through #xFF) to characters. Elements may be &lt;code&gt;nil&lt;/code&gt; for untranslated bytes. The returned table has a translation table for reverse mapping in the first extra slot, and the value &lt;code&gt;1&lt;/code&gt; in the second extra slot.</source>
          <target state="translated">此函数返回由 &lt;var&gt;vec&lt;/var&gt; 制成的转换表，该表是256个元素的数组，用于将字节（值0到#xFF）映射到字符。对于未翻译的字节，元素可以为 &lt;code&gt;nil&lt;/code&gt; 。返回的表在第一个额外的插槽中具有用于反向映射的转换表，在第二个额外的插槽中具有值 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ac8aec7b8332a3a20008ac9db71aa699eb44ebb4" translate="yes" xml:space="preserve">
          <source>This function returns a two-level deep copy of &lt;var&gt;alist&lt;/var&gt;: it creates a new copy of each association, so that you can alter the associations of the new alist without changing the old one.</source>
          <target state="translated">此函数返回 &lt;var&gt;alist&lt;/var&gt; 的两层深层副本：它将为每个关联创建一个新副本，以便您可以更改新alist的关联而无需更改旧列表。</target>
        </trans-unit>
        <trans-unit id="70a4b137c0022a55425921ca1dbd9e2ae73f218d" translate="yes" xml:space="preserve">
          <source>This function returns a unibyte string containing a single byte of character data, &lt;var&gt;byte&lt;/var&gt;. It signals an error if &lt;var&gt;byte&lt;/var&gt; is not an integer between 0 and 255.</source>
          <target state="translated">此函数返回一个单字节字符串，其中包含字符数据的单个字节 &lt;var&gt;byte&lt;/var&gt; 。如果 &lt;var&gt;byte&lt;/var&gt; 不是0到255之间的整数，则会发出错误消息。</target>
        </trans-unit>
        <trans-unit id="a91a028df0d1ad9f5bce49c97ff788649196255b" translate="yes" xml:space="preserve">
          <source>This function returns a unibyte string containing the same sequence of characters as &lt;var&gt;string&lt;/var&gt;. It signals an error if &lt;var&gt;string&lt;/var&gt; contains a non-</source>
          <target state="translated">该函数返回一个包含字符的相同序列的unibyte字符串 &lt;var&gt;string&lt;/var&gt; 。如果 &lt;var&gt;string&lt;/var&gt; 包含非</target>
        </trans-unit>
        <trans-unit id="3c5c34e41e05a3af93f6773c80990795f106b330" translate="yes" xml:space="preserve">
          <source>This function returns a value that describes what &lt;var&gt;color&lt;/var&gt; should ideally look like on &lt;var&gt;frame&lt;/var&gt;. If &lt;var&gt;color&lt;/var&gt; is defined, the value is a list of three integers, which give the amount of red, the amount of green, and the amount of blue. Each integer ranges in principle from 0 to 65535, but some displays may not use the full range. This three-element list is called the &lt;em&gt;rgb values&lt;/em&gt; of the color.</source>
          <target state="translated">此函数返回一个值，该值描述理想情况下 &lt;var&gt;frame&lt;/var&gt; 上应显示的 &lt;var&gt;color&lt;/var&gt; 。如果定义了 &lt;var&gt;color&lt;/var&gt; ，则该值为三个整数的列表，分别给出红色，绿色和蓝色的数量。每个整数原则上都在0到65535之间，但是某些显示可能不会使用整个范围。此三元素列表称为颜色的&lt;em&gt;rgb值&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e6ddca92148068bf6e13c214d59e7f3770b42f94" translate="yes" xml:space="preserve">
          <source>This function returns a vector containing the last 300 input events from the keyboard or mouse. All input events are included, whether or not they were used as parts of key sequences. Thus, you always get the last 300 input events, not counting events generated by keyboard macros. (These are excluded because they are less interesting for debugging; it should be enough to see the events that invoked the macros.)</source>
          <target state="translated">这个函数返回一个包含最近300个键盘或鼠标输入事件的向量。所有的输入事件都包含在内,无论它们是否作为键序的一部分使用。因此,你总是能得到最后300个输入事件,不包括键盘宏产生的事件。(这些事件被排除在外,因为它们对调试不那么有趣;看到调用宏的事件就足够了。)</target>
        </trans-unit>
        <trans-unit id="baaced068460db6364994bcbf6203ae76b23f796" translate="yes" xml:space="preserve">
          <source>This function returns all but the first &lt;var&gt;n&lt;/var&gt; (an integer) elements of &lt;var&gt;sequence&lt;/var&gt;. If &lt;var&gt;n&lt;/var&gt; is negative or zero, the result is &lt;var&gt;sequence&lt;/var&gt;.</source>
          <target state="translated">该函数返回 &lt;var&gt;sequence&lt;/var&gt; 的除前 &lt;var&gt;n&lt;/var&gt; 个（整数）元素外的所有元素。如果 &lt;var&gt;n&lt;/var&gt; 为负或零，则结果为 &lt;var&gt;sequence&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="bf2c05eb97070f160135ec9e2b3f0c89b07433ee" translate="yes" xml:space="preserve">
          <source>This function returns all parameters of &lt;var&gt;window&lt;/var&gt; and their values. The default for &lt;var&gt;window&lt;/var&gt; is the selected window. The return value is either &lt;code&gt;nil&lt;/code&gt;, or an association list whose elements have the form &lt;code&gt;(&lt;var&gt;parameter&lt;/var&gt; . &lt;var&gt;value&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">此函数返回 &lt;var&gt;window&lt;/var&gt; 的所有参数及其值。 &lt;var&gt;window&lt;/var&gt; 的默认值为选定的窗口。返回值是 &lt;code&gt;nil&lt;/code&gt; ，或一个关联列表，其元素具有形式 &lt;code&gt;(&lt;var&gt;parameter&lt;/var&gt; . &lt;var&gt;value&lt;/var&gt;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b6f25a4088d641311424e0b833052aed20b43bf2" translate="yes" xml:space="preserve">
          <source>This function returns an &lt;em&gt;SVG object&lt;/em&gt;, a Lisp data structure that specifies an SVG image, and all the following functions work on that structure. The argument &lt;var&gt;svg&lt;/var&gt; in the following functions specifies such an SVG object.</source>
          <target state="translated">该函数返回一个&lt;em&gt;SVG对象&lt;/em&gt;，一个指定SVG图像的Lisp数据结构，以下所有函数均在该结构上工作。以下函数中的参数 &lt;var&gt;svg&lt;/var&gt; 指定了这样的SVG对象。</target>
        </trans-unit>
        <trans-unit id="c2f7e15f8dc6d8ad842fd7a24cf6e39e51bec4b1" translate="yes" xml:space="preserve">
          <source>This function returns an MD5 hash. It is semi-obsolete, since for most purposes it is equivalent to calling &lt;code&gt;secure-hash&lt;/code&gt; with &lt;code&gt;md5&lt;/code&gt; as the &lt;var&gt;algorithm&lt;/var&gt; argument. The &lt;var&gt;object&lt;/var&gt;, &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; arguments have the same meanings as in &lt;code&gt;secure-hash&lt;/code&gt;.</source>
          <target state="translated">此函数返回MD5哈希。它已过时，因为在大多数情况下，它等效于以 &lt;code&gt;md5&lt;/code&gt; 作为 &lt;var&gt;algorithm&lt;/var&gt; 参数调用 &lt;code&gt;secure-hash&lt;/code&gt; 。的 &lt;var&gt;object&lt;/var&gt; ， &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 参数具有相同的含义，在 &lt;code&gt;secure-hash&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b62560d4c1d2a703179e8ff3d14bb5d35bb2637d" translate="yes" xml:space="preserve">
          <source>This function returns an abbreviated form of &lt;var&gt;filename&lt;/var&gt;. It applies the abbreviations specified in &lt;code&gt;directory-abbrev-alist&lt;/code&gt; (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/File-Aliases.html#File-Aliases&quot;&gt;File Aliases&lt;/a&gt; in</source>
          <target state="translated">此函数返回 &lt;var&gt;filename&lt;/var&gt; 的缩写形式。它适用于指定的缩写 &lt;code&gt;directory-abbrev-alist&lt;/code&gt; （请参阅&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/File-Aliases.html#File-Aliases&quot;&gt;文件中的别名&lt;/a&gt;在</target>
        </trans-unit>
        <trans-unit id="0881c663ee0b7b059964b6e1a563481c8a4100db" translate="yes" xml:space="preserve">
          <source>This function returns an absolute file name for an Emacs-specific configuration or data file. The argument</source>
          <target state="translated">此函数返回Emacs特定配置或数据文件的绝对文件名。参数</target>
        </trans-unit>
        <trans-unit id="3fe408025df2b203941f939fbb71a9d593cb6940" translate="yes" xml:space="preserve">
          <source>This function returns an alist listing all the parameters of &lt;var&gt;terminal&lt;/var&gt; and their values.</source>
          <target state="translated">此函数返回一个列表，列出所有 &lt;var&gt;terminal&lt;/var&gt; 参数及其值。</target>
        </trans-unit>
        <trans-unit id="1e12959799cfad19f10471e4762b1634fd72e77c" translate="yes" xml:space="preserve">
          <source>This function returns an alist of attributes for the process specified by its process ID &lt;var&gt;pid&lt;/var&gt;. Each association in the alist is of the form &lt;code&gt;(&lt;var&gt;key&lt;/var&gt; . &lt;var&gt;value&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;key&lt;/var&gt; designates the attribute and &lt;var&gt;value&lt;/var&gt; is the value of that attribute. The various attribute &lt;var&gt;key&lt;/var&gt;s that this function can return are listed below. Not all platforms support all of these attributes; if an attribute is not supported, its association will not appear in the returned alist.</source>
          <target state="translated">此函数返回由其进程ID &lt;var&gt;pid&lt;/var&gt; 指定的进程的属性列表。在ALIST每个关联的形式为 &lt;code&gt;(&lt;var&gt;key&lt;/var&gt; . &lt;var&gt;value&lt;/var&gt;)&lt;/code&gt; ，其中， &lt;var&gt;key&lt;/var&gt; 指定属性和 &lt;var&gt;value&lt;/var&gt; 是该属性的值。下面列出了此函数可以返回的各种属性 &lt;var&gt;key&lt;/var&gt; 。并非所有平台都支持所有这些属性。如果不支持属性，则其关联将不会出现在返回的列表中。</target>
        </trans-unit>
        <trans-unit id="296078e45cee4f262e0246e6e34ca035a358f16f" translate="yes" xml:space="preserve">
          <source>This function returns an alist of attributes of &lt;var&gt;face&lt;/var&gt;. The elements of the result are name-value pairs of the form &lt;code&gt;(&lt;var&gt;attr-name&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;attr-value&lt;/var&gt;)&lt;/code&gt;. Optional argument &lt;var&gt;frame&lt;/var&gt; specifies the frame whose definition of &lt;var&gt;face&lt;/var&gt; to return; if omitted or &lt;code&gt;nil&lt;/code&gt;, the returned value describes the default attributes of &lt;var&gt;face&lt;/var&gt; for newly created frames.</source>
          <target state="translated">此函数返回 &lt;var&gt;face&lt;/var&gt; 属性列表。结果的元件的形式为的名称-值对 &lt;code&gt;(&lt;var&gt;attr-name&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;attr-value&lt;/var&gt;)&lt;/code&gt; 。可选参数 &lt;var&gt;frame&lt;/var&gt; 指定要返回其 &lt;var&gt;face&lt;/var&gt; 定义的框架；如果省略或为 &lt;code&gt;nil&lt;/code&gt; ，则返回值描述新创建的帧的 &lt;var&gt;face&lt;/var&gt; 的默认属性。</target>
        </trans-unit>
        <trans-unit id="5d65d05478cd30ffe0b39b4dda7003dd3f37991a" translate="yes" xml:space="preserve">
          <source>This function returns an alist of the Emacs-recognized extended attributes of file &lt;var&gt;filename&lt;/var&gt;. Currently, it serves as a convenient way to retrieve both the ACL and SELinux context; you can then call the function &lt;code&gt;set-file-extended-attributes&lt;/code&gt;, with the returned alist as its second argument, to apply the same file access attributes to another file (see &lt;a href=&quot;changing-files#Changing-Files&quot;&gt;Changing Files&lt;/a&gt;).</source>
          <target state="translated">此函数返回文件 &lt;var&gt;filename&lt;/var&gt; 的Emacs认可的扩展属性列表。当前，它是检索ACL和SELinux上下文的便捷方法。然后，您可以调用函数 &lt;code&gt;set-file-extended-attributes&lt;/code&gt; ，并将返回的清单作为第二个参数，以将相同的文件访问属性应用于另一个文件（请参阅&lt;a href=&quot;changing-files#Changing-Files&quot;&gt;更改文件&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="145011402d96a3120894f8e5abe9aee28ab1acb4" translate="yes" xml:space="preserve">
          <source>This function returns an alist recording the known colors supported by a text terminal.</source>
          <target state="translated">该函数返回一个列表,记录文本终端支持的已知颜色。</target>
        </trans-unit>
        <trans-unit id="1cdc699f67b9a7451c27e7964427e22b16e4e51f" translate="yes" xml:space="preserve">
          <source>This function returns an efficient regular expression that will match any of the strings in the list &lt;var&gt;strings&lt;/var&gt;. This is useful when you need to make matching or searching as fast as possible&amp;mdash;for example, for Font Lock mode&lt;a href=&quot;#FOOT20&quot; name=&quot;DOCF20&quot;&gt;&lt;sup&gt;20&lt;/sup&gt;&lt;/a&gt;.</source>
          <target state="translated">该函数返回一个有效的正则表达式，该表达式将匹配列表 &lt;var&gt;strings&lt;/var&gt; 中的任何字符串。当您需要尽可能快地进行匹配或搜索时（例如对于字体锁定模式&lt;a href=&quot;#FOOT20&quot; name=&quot;DOCF20&quot;&gt;&lt;sup&gt;20）&lt;/sup&gt;&lt;/a&gt;，这很有用。</target>
        </trans-unit>
        <trans-unit id="341e53c8233df1976607629ff9276e436bd7caa2" translate="yes" xml:space="preserve">
          <source>This function returns an element of &lt;var&gt;sequence&lt;/var&gt; taken at random.</source>
          <target state="translated">此函数返回随机获取的 &lt;var&gt;sequence&lt;/var&gt; 元素。</target>
        </trans-unit>
        <trans-unit id="f6b03cb7837e092d624067308c8ebc0efa948eb1" translate="yes" xml:space="preserve">
          <source>This function returns an estimate of the total amount of bytes of virtual memory that Emacs is currently using, divided by 1024. You can use this to get a general idea of how your actions affect the memory usage.</source>
          <target state="translated">这个函数返回Emacs当前使用的虚拟内存的总字节数的估计值,除以1024。你可以用它来了解你的行为对内存使用的影响。</target>
        </trans-unit>
        <trans-unit id="abb2d0b1e9e7dcc71fb654b20b5c81d59fac7a57" translate="yes" xml:space="preserve">
          <source>This function returns an interned Emacs symbol whose name is &lt;var&gt;name&lt;/var&gt;, which should be an</source>
          <target state="translated">此函数返回一个名称为 &lt;var&gt;name&lt;/var&gt; 的嵌入式Emacs符号，该符号应为</target>
        </trans-unit>
        <trans-unit id="de062cb2cab858e994bee9b7b2e76e5e8bd8bd1d" translate="yes" xml:space="preserve">
          <source>This function returns either the total height in lines or the total width in columns of the window &lt;var&gt;window&lt;/var&gt;. If &lt;var&gt;horizontal&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, this is equivalent to calling &lt;code&gt;window-total-height&lt;/code&gt; for &lt;var&gt;window&lt;/var&gt;; otherwise it is equivalent to calling &lt;code&gt;window-total-width&lt;/code&gt; for &lt;var&gt;window&lt;/var&gt;. The optional argument &lt;var&gt;round&lt;/var&gt; behaves as it does for &lt;code&gt;window-total-height&lt;/code&gt;.</source>
          <target state="translated">此函数返回在线的总高度或在窗口的列的总宽度 &lt;var&gt;window&lt;/var&gt; 。如果省略 &lt;var&gt;horizontal&lt;/var&gt; 或 &lt;code&gt;nil&lt;/code&gt; ，则等效于为 &lt;var&gt;window&lt;/var&gt; 调用 &lt;code&gt;window-total-height&lt;/code&gt; ；否则，等效于为 &lt;var&gt;window&lt;/var&gt; 调用 &lt;code&gt;window-total-width&lt;/code&gt; 。可选参数 &lt;var&gt;round&lt;/var&gt; 的行为与 &lt;code&gt;window-total-height&lt;/code&gt; 的行为相同。</target>
        </trans-unit>
        <trans-unit id="29e92bca8e4680c820b4d93070c113914610d7b8" translate="yes" xml:space="preserve">
          <source>This function returns face of glyph code &lt;var&gt;glyph&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;glyph&lt;/var&gt; uses the default face.</source>
          <target state="translated">此函数返回字形代码 &lt;var&gt;glyph&lt;/var&gt; 的面孔；如果 &lt;var&gt;glyph&lt;/var&gt; 使用默认面孔，则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7b3f6a3ad1f01b0d2dac246891c2fabb32283012" translate="yes" xml:space="preserve">
          <source>This function returns geometric attributes of &lt;var&gt;frame&lt;/var&gt;. The return value is an association list of the attributes listed below. All coordinate, height and width values are integers counting pixels. Note that if &lt;var&gt;frame&lt;/var&gt; has not been mapped yet, (see &lt;a href=&quot;visibility-of-frames#Visibility-of-Frames&quot;&gt;Visibility of Frames&lt;/a&gt;) some of the return values may only represent approximations of the actual values&amp;mdash;those that can be seen after the frame has been mapped.</source>
          <target state="translated">此函数返回 &lt;var&gt;frame&lt;/var&gt; 的几何属性。返回值是下面列出的属性的关联列表。所有坐标，高度和宽度值都是计算像素的整数。请注意，如果尚未映射 &lt;var&gt;frame&lt;/var&gt; （请参见&lt;a href=&quot;visibility-of-frames#Visibility-of-Frames&quot;&gt;框架的可见性&lt;/a&gt;），则某些返回值可能仅表示实际值的近似值-在映射框架后可以看到的实际值。</target>
        </trans-unit>
        <trans-unit id="5bcb0fba81f7b05c5aeb65d9e6a9c63608028c9f" translate="yes" xml:space="preserve">
          <source>This function returns information about a &lt;var&gt;font-object&lt;/var&gt;. (This is in contrast to &lt;code&gt;font-info&lt;/code&gt;, which takes the font name, a string, as its argument.)</source>
          <target state="translated">此函数返回有关 &lt;var&gt;font-object&lt;/var&gt; 的信息。（这与 &lt;code&gt;font-info&lt;/code&gt; 相反，后者使用字体名称（字符串）作为参数。）</target>
        </trans-unit>
        <trans-unit id="b13cade0e78f04b5d6c6198d45903b357690d2ef" translate="yes" xml:space="preserve">
          <source>This function returns information about a font specified by its &lt;var&gt;name&lt;/var&gt;, a string, as it is used on &lt;var&gt;frame&lt;/var&gt;. If &lt;var&gt;frame&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected frame.</source>
          <target state="translated">此函数返回有关由其 &lt;var&gt;name&lt;/var&gt; （字符串）指定的字体的信息，该信息用于 &lt;var&gt;frame&lt;/var&gt; 。如果省略 &lt;var&gt;frame&lt;/var&gt; 或 &lt;code&gt;nil&lt;/code&gt; ，则默认为所选框架。</target>
        </trans-unit>
        <trans-unit id="f9b544c453bf7b02465dd90ef65c8257ee58a583" translate="yes" xml:space="preserve">
          <source>This function returns information about how a network, a serial, or a pipe connection was set up. When &lt;var&gt;key&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it returns &lt;code&gt;(&lt;var&gt;hostname&lt;/var&gt; &lt;var&gt;service&lt;/var&gt;)&lt;/code&gt; for a network connection, &lt;code&gt;(&lt;var&gt;port&lt;/var&gt; &lt;var&gt;speed&lt;/var&gt;)&lt;/code&gt; for a serial connection, and &lt;code&gt;t&lt;/code&gt; for a pipe connection. For an ordinary child process, this function always returns &lt;code&gt;t&lt;/code&gt; when called with a &lt;code&gt;nil&lt;/code&gt;&lt;var&gt;key&lt;/var&gt;.</source>
          <target state="translated">此函数返回有关如何建立网络，串行或管道连接的信息。当 &lt;var&gt;key&lt;/var&gt; 是 &lt;code&gt;nil&lt;/code&gt; ，则返回 &lt;code&gt;(&lt;var&gt;hostname&lt;/var&gt; &lt;var&gt;service&lt;/var&gt;)&lt;/code&gt; 进行网络连接， &lt;code&gt;(&lt;var&gt;port&lt;/var&gt; &lt;var&gt;speed&lt;/var&gt;)&lt;/code&gt; 为串行连接，并 &lt;code&gt;t&lt;/code&gt; 用于管连接。对于普通的子进程，使用 &lt;code&gt;nil&lt;/code&gt; &lt;var&gt;key&lt;/var&gt; 调用时，此函数始终返回 &lt;code&gt;t&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cc935eaf0c9cc4c9aaf4a2959614741a13abbee5" translate="yes" xml:space="preserve">
          <source>This function returns information about the fringes of a window &lt;var&gt;window&lt;/var&gt;. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, the selected window is used. The value has the form &lt;code&gt;(&lt;var&gt;left-width&lt;/var&gt;
&lt;var&gt;right-width&lt;/var&gt; &lt;var&gt;outside-margins&lt;/var&gt; &lt;var&gt;persistent&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">此函数返回有关窗口 &lt;var&gt;window&lt;/var&gt; 边缘的信息。如果省略 &lt;var&gt;window&lt;/var&gt; 或 &lt;code&gt;nil&lt;/code&gt; ，则使用所选窗口。值的形式 &lt;code&gt;(&lt;var&gt;left-width&lt;/var&gt; &lt;var&gt;right-width&lt;/var&gt; &lt;var&gt;outside-margins&lt;/var&gt; &lt;var&gt;persistent&lt;/var&gt;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d6ea75372864248289f171e5524eaf5b6bec548a" translate="yes" xml:space="preserve">
          <source>This function returns information about the network interface named &lt;var&gt;ifname&lt;/var&gt;. The value is a list of the form &lt;code&gt;(&lt;var&gt;addr&lt;/var&gt; &lt;var&gt;bcast&lt;/var&gt; &lt;var&gt;netmask&lt;/var&gt; &lt;var&gt;hwaddr&lt;/var&gt; &lt;var&gt;flags&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">此函数返回有关名为 &lt;var&gt;ifname&lt;/var&gt; 的网络接口的信息。该值是形式的列表 &lt;code&gt;(&lt;var&gt;addr&lt;/var&gt; &lt;var&gt;bcast&lt;/var&gt; &lt;var&gt;netmask&lt;/var&gt; &lt;var&gt;hwaddr&lt;/var&gt; &lt;var&gt;flags&lt;/var&gt;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3708f7e00a84362d02ba7f121820b363d0d447f2" translate="yes" xml:space="preserve">
          <source>This function returns its argument &lt;var&gt;string&lt;/var&gt;, possibly modified, such that the result can be safely concatenated with another string, or juxtaposed with another string in a buffer, without disrupting the relative layout of this string and the next one on display. If the string returned by this function is displayed as part of a left-to-right paragraph, it will always appear on display to the left of the text that follows it. The function works by examining the characters of its argument, and if any of those characters could cause reordering on display, the function appends the</source>
          <target state="translated">此函数返回其参数 &lt;var&gt;string&lt;/var&gt; （可能已修改），以使结果可以安全地与另一个字符串连接，或与另一个字符串并置在缓冲区中，而不会破坏该字符串与下一个字符串的相对布局。如果此函数返回的字符串显示为从左到右的段落的一部分，它将始终显示在其后面的文本的左侧。该函数通过检查其自变量的字符来工作，如果这些字符中的任何一个可能导致显示重新排序，则该函数将附加</target>
        </trans-unit>
        <trans-unit id="ef426a141f067516eb92a5c474f4003d16855673" translate="yes" xml:space="preserve">
          <source>This function returns locale data &lt;var&gt;item&lt;/var&gt; for the current POSIX locale, if available. &lt;var&gt;item&lt;/var&gt; should be one of these symbols:</source>
          <target state="translated">如果可用，此函数返回当前POSIX语言环境的语言环境数据 &lt;var&gt;item&lt;/var&gt; 。 &lt;var&gt;item&lt;/var&gt; 应为以下符号之一：</target>
        </trans-unit>
        <trans-unit id="b9e695add21fe33c602a70360f0dd065dc090326" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;arg&lt;/var&gt; is a customizable variable. A customizable variable is either a variable that has a &lt;code&gt;standard-value&lt;/code&gt; or &lt;code&gt;custom-autoload&lt;/code&gt; property (usually meaning it was declared with &lt;code&gt;defcustom&lt;/code&gt;), or an alias for another customizable variable.</source>
          <target state="translated">该函数返回非 &lt;code&gt;nil&lt;/code&gt; 如果 &lt;var&gt;arg&lt;/var&gt; 是一个可定制的变量。可自定义变量是具有 &lt;code&gt;standard-value&lt;/code&gt; 或 &lt;code&gt;custom-autoload&lt;/code&gt; 属性的变量（通常意味着已使用 &lt;code&gt;defcustom&lt;/code&gt; 声明），或者是另一个可自定义变量的别名。</target>
        </trans-unit>
        <trans-unit id="8aa11d8bf8f849245fe98293c0262974f32ed90b" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;buffer-or-name&lt;/var&gt; is a minibuffer. If &lt;var&gt;buffer-or-name&lt;/var&gt; is omitted, it tests the current buffer.</source>
          <target state="translated">如果 &lt;var&gt;buffer-or-name&lt;/var&gt; 是minibuffer，则此函数返回non - &lt;code&gt;nil&lt;/code&gt; 。如果省略 &lt;var&gt;buffer-or-name&lt;/var&gt; ，它将测试当前缓冲区。</target>
        </trans-unit>
        <trans-unit id="5f6520bbf2dcd8d060aa6060b125aa17eddae5bc" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;filename&lt;/var&gt; ends with a directory separator character. This is the forward slash &amp;lsquo;</source>
          <target state="translated">如果 &lt;var&gt;filename&lt;/var&gt; 以目录分隔符结尾，则此函数返回 &lt;code&gt;nil&lt;/code&gt; 。这是正斜线'</target>
        </trans-unit>
        <trans-unit id="7a396752bc9a14412da5056d40e8f468fe238b81" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;frame&lt;/var&gt; is currently being rendered with double buffering. &lt;var&gt;frame&lt;/var&gt; defaults to the selected frame.</source>
          <target state="translated">该函数返回非 &lt;code&gt;nil&lt;/code&gt; 如果 &lt;var&gt;frame&lt;/var&gt; 当前正在与双缓冲呈现。 &lt;var&gt;frame&lt;/var&gt; 默认为所选框架。</target>
        </trans-unit>
        <trans-unit id="53bcb36636dd486626e6f74640f70bcae634d8d3" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;frame&lt;/var&gt; supports image scaling and rotation. &lt;var&gt;frame&lt;/var&gt;&lt;code&gt;nil&lt;/code&gt; or omitted means to use the selected frame (see &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;). The returned list includes symbols that indicate which image transform operations are supported:</source>
          <target state="translated">如果 &lt;var&gt;frame&lt;/var&gt; 支持图像缩放和旋转，则此函数返回 &lt;code&gt;nil&lt;/code&gt; 。 &lt;var&gt;frame&lt;/var&gt; &lt;code&gt;nil&lt;/code&gt; 或省略表示使用所选框架的方法（请参阅&lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;）。返回的列表包括指示支持哪些图像变换操作的符号：</target>
        </trans-unit>
        <trans-unit id="41632af4cec9a752ca5c9f75a38b0d9e3996a2a0" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;image&lt;/var&gt; contains more than one frame. The actual return value is a cons &lt;code&gt;(&lt;var&gt;nimages&lt;/var&gt;
. &lt;var&gt;delay&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;nimages&lt;/var&gt; is the number of frames and &lt;var&gt;delay&lt;/var&gt; is the delay in seconds between them, or &lt;code&gt;nil&lt;/code&gt; if the image does not specify a delay. Images that are intended to be animated usually specify a frame delay, whereas ones that are intended to be treated as multiple pages do not.</source>
          <target state="translated">如果 &lt;var&gt;image&lt;/var&gt; 包含多个帧，则此函数返回 &lt;code&gt;nil&lt;/code&gt; 。实际的返回值是一个缺点 &lt;code&gt;(&lt;var&gt;nimages&lt;/var&gt; . &lt;var&gt;delay&lt;/var&gt;)&lt;/code&gt; &lt;var&gt;nimages&lt;/var&gt; 。 &lt;var&gt;delay&lt;/var&gt; ），其中 &lt;var&gt;nimages&lt;/var&gt; 是帧的数目和 &lt;var&gt;delay&lt;/var&gt; 是在它们之间，或秒为单位的延迟 &lt;code&gt;nil&lt;/code&gt; 如果图像没有指定的延迟。打算动画处理的图像通常会指定帧延迟，而打算被视为多页的图像则不会。</target>
        </trans-unit>
        <trans-unit id="efb66229a469c693f7501b2b843d1ac041b31d50" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a mouse movement event. See &lt;a href=&quot;motion-events#Motion-Events&quot;&gt;Motion Events&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;var&gt;object&lt;/var&gt; 是鼠标移动事件，则此函数返回 &lt;code&gt;nil&lt;/code&gt; 。请参阅&lt;a href=&quot;motion-events#Motion-Events&quot;&gt;运动事件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e7b381ffeef1b7d4f8e80e1931e332a1b9a366af" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a mouse position list, in the format documented in &lt;a href=&quot;click-events#Click-Events&quot;&gt;Click Events&lt;/a&gt;); and &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">该函数返回非 &lt;code&gt;nil&lt;/code&gt; 如果 &lt;var&gt;object&lt;/var&gt; 是小鼠位置列表，在中记录的格式&lt;a href=&quot;click-events#Click-Events&quot;&gt;单击事件&lt;/a&gt;）; 并且 &lt;code&gt;nil&lt;/code&gt; 其他。</target>
        </trans-unit>
        <trans-unit id="3648ce14c6229b89b8efe55b38dc73cd803b6a74" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is a sequence (a list or array), or any additional type of sequence defined via</source>
          <target state="translated">如果 &lt;var&gt;object&lt;/var&gt; 是序列（列表或数组）或通过定义的任何其他类型的序列，则此函数返回non- &lt;code&gt;nil&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1d4d1f6002bafb8afdf2e8609b373eb3bd2bf5ca" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is an autoload object. For example, to check if &lt;code&gt;run-prolog&lt;/code&gt; is defined as an autoloaded function, evaluate</source>
          <target state="translated">该函数返回非 &lt;code&gt;nil&lt;/code&gt; 如果 &lt;var&gt;object&lt;/var&gt; 是一个自动加载对象。例如，要检查 &lt;code&gt;run-prolog&lt;/code&gt; 是否定义为自动加载的函数，请评估</target>
        </trans-unit>
        <trans-unit id="c327cfad723c60d1fb2168da1393ce231b524a32" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;object&lt;/var&gt; is an input event or event type.</source>
          <target state="translated">如果 &lt;var&gt;object&lt;/var&gt; 是输入事件或事件类型，则此函数返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c83357872fa47b1fc98a554938a9c86cfdfa3bcc" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;position&lt;/var&gt; is within the range of text currently visible on the screen in &lt;var&gt;window&lt;/var&gt;. It returns &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;position&lt;/var&gt; is scrolled vertically out of view. Locations that are partially obscured are not considered visible unless &lt;var&gt;partially&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;. The argument &lt;var&gt;position&lt;/var&gt; defaults to the current position of point in &lt;var&gt;window&lt;/var&gt;; &lt;var&gt;window&lt;/var&gt; defaults to the selected window. If &lt;var&gt;position&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, that means to check either the first visible position of the last screen line in &lt;var&gt;window&lt;/var&gt;, or the end-of-buffer position, whichever comes first.</source>
          <target state="translated">如果 &lt;var&gt;position&lt;/var&gt; 在 &lt;var&gt;window&lt;/var&gt; 屏幕上当前可见的文本范围内，则此函数返回 &lt;code&gt;nil&lt;/code&gt; 。如果将 &lt;var&gt;position&lt;/var&gt; 垂直滚动到视线之外，则返回 &lt;code&gt;nil&lt;/code&gt; 。除非 &lt;var&gt;partially&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ,否则部分被遮挡的位置不会被视为可见。参数 &lt;var&gt;position&lt;/var&gt; 默认为 &lt;var&gt;window&lt;/var&gt; 中点的当前位置; &lt;var&gt;window&lt;/var&gt; 默认为所选窗口。如果 &lt;var&gt;position&lt;/var&gt; 为 &lt;code&gt;t&lt;/code&gt; ，则意味着检查 &lt;var&gt;window&lt;/var&gt; 最后一条屏幕线的第一个可见位置或缓冲区结尾位置，以先到者为准。</target>
        </trans-unit>
        <trans-unit id="7714e51a61f825905b9eaf03b84521fbbfc31858" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;process&lt;/var&gt; is alive. A process is considered alive if its status is &lt;code&gt;run&lt;/code&gt;, &lt;code&gt;open&lt;/code&gt;, &lt;code&gt;listen&lt;/code&gt;, &lt;code&gt;connect&lt;/code&gt; or &lt;code&gt;stop&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;var&gt;process&lt;/var&gt; &lt;code&gt;nil&lt;/code&gt; 则此函数返回nil。如果某个进程的状态为 &lt;code&gt;run&lt;/code&gt; ， &lt;code&gt;open&lt;/code&gt; ， &lt;code&gt;listen&lt;/code&gt; ， &lt;code&gt;connect&lt;/code&gt; 或 &lt;code&gt;stop&lt;/code&gt; ，则该进程被认为是活动的。</target>
        </trans-unit>
        <trans-unit id="207dadb6618b6b4e3ffe9faf590cfeb68c10efd2" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;sequence&lt;/var&gt; is empty.</source>
          <target state="translated">该函数返回非 &lt;code&gt;nil&lt;/code&gt; 如果 &lt;var&gt;sequence&lt;/var&gt; 是空的。</target>
        </trans-unit>
        <trans-unit id="2e1789b173f534cdc1aa310751ef9b721f0c9e26" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;string1&lt;/var&gt; is a prefix of &lt;var&gt;string2&lt;/var&gt;; i.e., if &lt;var&gt;string2&lt;/var&gt; starts with &lt;var&gt;string1&lt;/var&gt;. If the optional argument &lt;var&gt;ignore-case&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the comparison ignores case differences.</source>
          <target state="translated">该函数返回非 &lt;code&gt;nil&lt;/code&gt; 如果 &lt;var&gt;string1&lt;/var&gt; 是的前缀 &lt;var&gt;string2&lt;/var&gt; ; 即，如果 &lt;var&gt;string2&lt;/var&gt; 以 &lt;var&gt;string1&lt;/var&gt; 开头。如果可选参数 &lt;var&gt;ignore-case&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则比较将忽略大小写差异。</target>
        </trans-unit>
        <trans-unit id="f43b22825b402f86178ee9dfa01b45416aabab3b" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;string&lt;/var&gt; is a valid completion alternative specified by &lt;var&gt;collection&lt;/var&gt; and &lt;var&gt;predicate&lt;/var&gt;. The arguments are the same as in &lt;code&gt;try-completion&lt;/code&gt;. For instance, if &lt;var&gt;collection&lt;/var&gt; is a list of strings, this is true if &lt;var&gt;string&lt;/var&gt; appears in the list and &lt;var&gt;predicate&lt;/var&gt; is satisfied.</source>
          <target state="translated">该函数返回非 &lt;code&gt;nil&lt;/code&gt; 如果 &lt;var&gt;string&lt;/var&gt; 是通过指定一个有效的替代完成 &lt;var&gt;collection&lt;/var&gt; 和 &lt;var&gt;predicate&lt;/var&gt; 。参数与 &lt;code&gt;try-completion&lt;/code&gt; 中的参数相同。例如，如果 &lt;var&gt;collection&lt;/var&gt; 是一个字符串列表，则如果 &lt;var&gt;string&lt;/var&gt; 出现在列表中并且满足 &lt;var&gt;predicate&lt;/var&gt; ，则为true 。</target>
        </trans-unit>
        <trans-unit id="134afd8803c0d88362d452150766ae923b0d0010" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;suffix&lt;/var&gt; is a suffix of &lt;var&gt;string&lt;/var&gt;; i.e., if &lt;var&gt;string&lt;/var&gt; ends with &lt;var&gt;suffix&lt;/var&gt;. If the optional argument &lt;var&gt;ignore-case&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the comparison ignores case differences.</source>
          <target state="translated">如果 &lt;var&gt;suffix&lt;/var&gt; 是 &lt;var&gt;string&lt;/var&gt; 的后缀，则此函数返回 &lt;code&gt;nil&lt;/code&gt; 否则，返回0。即，如果 &lt;var&gt;string&lt;/var&gt; 以 &lt;var&gt;suffix&lt;/var&gt; 结尾。如果可选参数 &lt;var&gt;ignore-case&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则比较将忽略大小写差异。</target>
        </trans-unit>
        <trans-unit id="f60b87a3ec6d1516dc262a65ae48310685efed51" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;sym&lt;/var&gt; is a risky variable, based on the above criteria.</source>
          <target state="translated">该函数返回非 &lt;code&gt;nil&lt;/code&gt; 如果 &lt;var&gt;sym&lt;/var&gt; 是有风险的变量，根据上述标准。</target>
        </trans-unit>
        <trans-unit id="24d285146bf207a6aba2acfa476e2a46a64df642" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;symbol&lt;/var&gt; is a special variable (i.e., it has a &lt;code&gt;defvar&lt;/code&gt;, &lt;code&gt;defcustom&lt;/code&gt;, or &lt;code&gt;defconst&lt;/code&gt; variable definition). Otherwise, the return value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此函数返回非 &lt;code&gt;nil&lt;/code&gt; 如果 &lt;var&gt;symbol&lt;/var&gt; 是一个特殊的变量（即，它有一个 &lt;code&gt;defvar&lt;/code&gt; ， &lt;code&gt;defcustom&lt;/code&gt; ，或 &lt;code&gt;defconst&lt;/code&gt; 变量定义）。否则，返回值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0ea1c6700a4ae8c16c7c9cc6f2cef5712acdc60d" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;tty&lt;/var&gt; is the controlling terminal of the Emacs session; &lt;var&gt;tty&lt;/var&gt; can be a terminal object, a frame (meaning the terminal for that frame), or &lt;code&gt;nil&lt;/code&gt; (meaning the terminal for the selected frame).</source>
          <target state="translated">如果 &lt;var&gt;tty&lt;/var&gt; 是Emacs会话的控制终端，则此函数返回 &lt;code&gt;nil&lt;/code&gt; 否则返回false。 &lt;var&gt;tty&lt;/var&gt; 可以是终端对象，框架（表示该框架的终端）或 &lt;code&gt;nil&lt;/code&gt; （表示所选框架的终端）。</target>
        </trans-unit>
        <trans-unit id="0abb7d884b4edb5765e8dd74d93937f3f692fb31" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;value&lt;/var&gt;, when used as the value of the face attribute &lt;var&gt;attribute&lt;/var&gt;, is relative. This means it would modify, rather than completely override, any value that comes from a subsequent face in the face list or that is inherited from another face.</source>
          <target state="translated">如果 &lt;var&gt;value&lt;/var&gt; 用作face属性 &lt;var&gt;attribute&lt;/var&gt; 的值是相对的，则此函数返回 &lt;code&gt;nil&lt;/code&gt; 。这意味着它将修改而不是完全覆盖来自面列表中后续面的值或从另一面继承的任何值。</target>
        </trans-unit>
        <trans-unit id="f927c9da31282b3cb4f4502a9f8e7158c19dd73e" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;window&lt;/var&gt; has no other window above or below it in its frame. More precisely, this means that the total height of &lt;var&gt;window&lt;/var&gt; equals the total height of the root window on that frame. The minibuffer window does not count in this regard. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window.</source>
          <target state="translated">如果 &lt;var&gt;window&lt;/var&gt; 在其框架中的上方或下方没有其他窗口，则此函数返回 &lt;code&gt;nil&lt;/code&gt; 。更确切地说，这意味着 &lt;var&gt;window&lt;/var&gt; 的总高度等于该框架上根窗口的总高度。在这方面，迷你缓冲区窗口不计算在内。如果 &lt;var&gt;window&lt;/var&gt; 省略或为 &lt;code&gt;nil&lt;/code&gt; ，则默认为所选窗口。</target>
        </trans-unit>
        <trans-unit id="742a04bbb438eb6b72cbd7304bd59e997eebb475" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;window&lt;/var&gt; has no other window to the left or right in its frame, i.e., its total width equals that of the root window on that frame. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window.</source>
          <target state="translated">如果 &lt;var&gt;window&lt;/var&gt; 在其框架中的左边或右边没有其他窗口，即该窗口的总宽度等于该框架上的根窗口的宽度，则此函数返回 &lt;code&gt;nil&lt;/code&gt; 。如果 &lt;var&gt;window&lt;/var&gt; 省略或为 &lt;code&gt;nil&lt;/code&gt; ，则默认为所选窗口。</target>
        </trans-unit>
        <trans-unit id="8811c3d948b109027d3335fb7ffe65ec9e88dc46" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;window&lt;/var&gt; is dedicated to its buffer and &lt;code&gt;nil&lt;/code&gt; otherwise. More precisely, the return value is the value assigned by the last call of &lt;code&gt;set-window-dedicated-p&lt;/code&gt; for &lt;var&gt;window&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt; if that function was never called with &lt;var&gt;window&lt;/var&gt; as its argument. The default for &lt;var&gt;window&lt;/var&gt; is the selected window.</source>
          <target state="translated">如果 &lt;var&gt;window&lt;/var&gt; 专用于其缓冲区，则此函数返回non- &lt;code&gt;nil&lt;/code&gt; ,否则返回 &lt;code&gt;nil&lt;/code&gt; 。更准确地说，返回值是最后一次调用 &lt;code&gt;set-window-dedicated-p&lt;/code&gt; 为 &lt;var&gt;window&lt;/var&gt; 分配的值，或者如果从未以 &lt;var&gt;window&lt;/var&gt; 作为其参数调用该函数，则返回 &lt;code&gt;nil&lt;/code&gt; 。 &lt;var&gt;window&lt;/var&gt; 的默认值为选定的窗口。</target>
        </trans-unit>
        <trans-unit id="201a541be5713d4ec74eacd0b87c88f38da2e53c" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;window&lt;/var&gt; shows the currently active minibuffer.</source>
          <target state="translated">该函数返回非 &lt;code&gt;nil&lt;/code&gt; 如果 &lt;var&gt;window&lt;/var&gt; 显示当前的小缓冲区。</target>
        </trans-unit>
        <trans-unit id="91b0834e10f16952e8601e3bb8466611f65470c4" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if all the face attributes in &lt;var&gt;attributes&lt;/var&gt; are supported (see &lt;a href=&quot;face-attributes#Face-Attributes&quot;&gt;Face Attributes&lt;/a&gt;).</source>
          <target state="translated">该函数返回非 &lt;code&gt;nil&lt;/code&gt; 如果所有在脸上属性 &lt;var&gt;attributes&lt;/var&gt; 的支持（见&lt;a href=&quot;face-attributes#Face-Attributes&quot;&gt;面部属性&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="d644b00ee9b421231ffa39cf38cbf5eb65cf136e" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if applying &lt;var&gt;predicate&lt;/var&gt; to every element of &lt;var&gt;sequence&lt;/var&gt; returns non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">该函数返回非 &lt;code&gt;nil&lt;/code&gt; 如果施加 &lt;var&gt;predicate&lt;/var&gt; 到的每个元素 &lt;var&gt;sequence&lt;/var&gt; 返回非 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c11797b8f8bd201af4c5bc47afcdd3220dae049b" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if at least one character between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; does not have a property &lt;var&gt;prop&lt;/var&gt; with value &lt;var&gt;value&lt;/var&gt;. More precisely, it returns the position of the first such character. Otherwise, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 之间的至少一个字符不具有值为 &lt;var&gt;value&lt;/var&gt; 的属性 &lt;var&gt;prop&lt;/var&gt; ，则此函数返回 &lt;code&gt;nil&lt;/code&gt; 。更准确地说，它返回第一个此类字符的位置。否则，它返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cd99d27293506cb495b0dcd3c07993a8f5bfe380" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if at least one character between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; has a property &lt;var&gt;prop&lt;/var&gt; whose value is &lt;var&gt;value&lt;/var&gt;. More precisely, it returns the position of the first such character. Otherwise, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 之间的至少一个字符具有其值为 &lt;var&gt;value&lt;/var&gt; 的属性 &lt;var&gt;prop&lt;/var&gt; ，则此函数返回 &lt;code&gt;nil&lt;/code&gt; 。更准确地说，它返回第一个此类字符的位置。否则，它返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3a1578deeecfb551dbfe2963aa4b0d7d3fab8f9b" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if at least one element in &lt;var&gt;sequence&lt;/var&gt; is equal to &lt;var&gt;elt&lt;/var&gt;. If the optional argument &lt;var&gt;function&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it is a function of two arguments to use instead of the default &lt;code&gt;equal&lt;/code&gt;.</source>
          <target state="translated">该函数返回非 &lt;code&gt;nil&lt;/code&gt; 如果在至少一个元件 &lt;var&gt;sequence&lt;/var&gt; 是等于 &lt;var&gt;elt&lt;/var&gt; 。如果可选参数 &lt;var&gt;function&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则它是使用两个参数的函数，而不是默认的 &lt;code&gt;equal&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="949e2e86800f9139a5e4fafe8d227f37b26e2970" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if built-in libxml2 support is available in this Emacs session.</source>
          <target state="translated">该函数返回非 &lt;code&gt;nil&lt;/code&gt; 如果内置libxml2的支持，在此Emacs会话可用。</target>
        </trans-unit>
        <trans-unit id="41fa028d4b8aaa45c937e4f54f4269bac4555b0d" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if built-in zlib decompression is available.</source>
          <target state="translated">该函数返回非 &lt;code&gt;nil&lt;/code&gt; 如果内置的zlib压缩可用。</target>
        </trans-unit>
        <trans-unit id="4772f02c0a061ae8252bcab8e7e829b87216b346" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if face &lt;var&gt;face&lt;/var&gt; specifies a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;:extend&lt;/code&gt; attribute.</source>
          <target state="translated">如果face &lt;var&gt;face&lt;/var&gt; 指定了non- &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;:extend&lt;/code&gt; 属性，则此函数返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="61e1460248286bb3587b4828d9a3494a82700d0f" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if face &lt;var&gt;face&lt;/var&gt; specifies a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;:inverse-video&lt;/code&gt; attribute.</source>
          <target state="translated">如果face &lt;var&gt;face&lt;/var&gt; 指定了非 &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;:inverse-video&lt;/code&gt; 属性，则此函数返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2bbbf970f2a6400166a34f460085b0c5a1c4f448" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if face &lt;var&gt;face&lt;/var&gt; specifies a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;:underline&lt;/code&gt; attribute.</source>
          <target state="translated">如果face &lt;var&gt;face&lt;/var&gt; 指定了非 &lt;code&gt;nil&lt;/code&gt; &lt;code&gt;:underline&lt;/code&gt; 属性，则此函数返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="505ff3b34fbb5fbfe1a0f89b5a32c90486dd3b8f" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if images of type &lt;var&gt;type&lt;/var&gt; can be loaded and displayed. &lt;var&gt;type&lt;/var&gt; must be an image type symbol.</source>
          <target state="translated">如果可以加载和显示类型为 &lt;var&gt;type&lt;/var&gt; 的图像，此函数将返回 &lt;code&gt;nil&lt;/code&gt; 。 &lt;var&gt;type&lt;/var&gt; 必须是图像类型符号。</target>
        </trans-unit>
        <trans-unit id="e039ec57f83cafc3ae072799916400a653bc6972" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if it is safe to give &lt;var&gt;sym&lt;/var&gt; the value &lt;var&gt;val&lt;/var&gt;, based on the above criteria.</source>
          <target state="translated">该函数返回非 &lt;code&gt;nil&lt;/code&gt; 如果它是安全的给 &lt;var&gt;sym&lt;/var&gt; 值 &lt;var&gt;val&lt;/var&gt; ，基于上述标准。</target>
        </trans-unit>
        <trans-unit id="2a210d47fcd343f867f35bfc64aad0e3ea5a9250" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if position &lt;var&gt;pos&lt;/var&gt; in the current buffer is on a link. &lt;var&gt;pos&lt;/var&gt; can also be a mouse event location, as returned by &lt;code&gt;event-start&lt;/code&gt; (see &lt;a href=&quot;accessing-mouse#Accessing-Mouse&quot;&gt;Accessing Mouse&lt;/a&gt;).</source>
          <target state="translated">如果当前缓冲区中的位置 &lt;var&gt;pos&lt;/var&gt; 在链接上，则此函数返回 &lt;code&gt;nil&lt;/code&gt; 。 &lt;var&gt;pos&lt;/var&gt; 也可以是鼠标事件的位置，由 &lt;code&gt;event-start&lt;/code&gt; 返回（请参阅&amp;ldquo;&lt;a href=&quot;accessing-mouse#Accessing-Mouse&quot;&gt;访问鼠标&amp;rdquo;&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="044563235cbd13eed13a71622896c21cdadea2fe" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if the buffer is narrowed, and &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">该函数返回非 &lt;code&gt;nil&lt;/code&gt; 如果缓冲区变窄， &lt;code&gt;nil&lt;/code&gt; 其他。</target>
        </trans-unit>
        <trans-unit id="b7af26370e73bed62d430b34daa7970b03cf0593" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if the current major mode is derived from any of the major modes given by the symbols &lt;var&gt;modes&lt;/var&gt;.</source>
          <target state="translated">该函数返回非 &lt;code&gt;nil&lt;/code&gt; 如果当前主要模式从任何由符号给出的主要模式的衍生 &lt;var&gt;modes&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="d44ce9236c497cc909b7c557bc46e8799d3ebebd" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if the display supports the SaveUnder feature. That feature is used by pop-up windows to save the pixels they obscure, so that they can pop down quickly.</source>
          <target state="translated">如果显示器支持SaveUnder功能，此函数将返回 &lt;code&gt;nil&lt;/code&gt; 。弹出窗口使用该功能来保存它们模糊的像素，以便它们可以快速弹出。</target>
        </trans-unit>
        <trans-unit id="3748a1f34eadba5e6a3069e99c71b519a9132585" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; if the frame &lt;var&gt;frame&lt;/var&gt; has not been deleted. The possible non-&lt;code&gt;nil&lt;/code&gt; return values are like those of &lt;code&gt;framep&lt;/code&gt;. See &lt;a href=&quot;frames#Frames&quot;&gt;Frames&lt;/a&gt;.</source>
          <target state="translated">该函数返回非 &lt;code&gt;nil&lt;/code&gt; 如果帧 &lt;var&gt;frame&lt;/var&gt; 未被删除。可能的非 &lt;code&gt;nil&lt;/code&gt; 返回值是像那些 &lt;code&gt;framep&lt;/code&gt; 。请参阅&lt;a href=&quot;frames#Frames&quot;&gt;框架&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0accbb86a11d41a315f2b8c5d8c383fa97bc6c20" translate="yes" xml:space="preserve">
          <source>This function returns non-&lt;code&gt;nil&lt;/code&gt; when the inner width or height of &lt;var&gt;frame&lt;/var&gt; has changed since &lt;code&gt;window-size-change-functions&lt;/code&gt; was run the last time for &lt;var&gt;frame&lt;/var&gt;. It always returns &lt;code&gt;nil&lt;/code&gt; immediately after running &lt;code&gt;window-size-change-functions&lt;/code&gt; for &lt;var&gt;frame&lt;/var&gt;.</source>
          <target state="translated">自从上次为 &lt;var&gt;frame&lt;/var&gt; 运行 &lt;code&gt;window-size-change-functions&lt;/code&gt; 以来，当 &lt;var&gt;frame&lt;/var&gt; 的内部宽度或高度发生更改时，此函数返回 &lt;code&gt;nil&lt;/code&gt; 。在为 &lt;var&gt;frame&lt;/var&gt; 运行 &lt;code&gt;window-size-change-functions&lt;/code&gt; 之后，它总是立即返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="93eb4720acdb03950d04cf999b78e20aae3ffcc1" translate="yes" xml:space="preserve">
          <source>This function returns position information corresponding to pixel coordinates &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; in a specified frame or window, &lt;var&gt;frame-or-window&lt;/var&gt;, which defaults to the selected window. The coordinates &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; are relative to the frame or window used. If &lt;var&gt;whole&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the coordinates are relative to the window text area, otherwise they are relative to the entire window area including scroll bars, margins and fringes.</source>
          <target state="translated">这对应于像素坐标的函数返回的位置信息 &lt;var&gt;x&lt;/var&gt; 和 &lt;var&gt;y&lt;/var&gt; 在指定的帧或窗口， &lt;var&gt;frame-or-window&lt;/var&gt; ，默认为所选择的窗口。坐标 &lt;var&gt;x&lt;/var&gt; 和 &lt;var&gt;y&lt;/var&gt; 相对于所使用的框架或窗口。如果 &lt;var&gt;whole&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则坐标是相对于窗口文本区域的坐标，否则它们是相对于整个窗口区域的坐标，包括滚动条，边距和边缘。</target>
        </trans-unit>
        <trans-unit id="5d4042eb03bec9be5bf905046879eb4692c13cf5" translate="yes" xml:space="preserve">
          <source>This function returns the</source>
          <target state="translated">该函数返回</target>
        </trans-unit>
        <trans-unit id="296f5c4779549b6e12459370e83a41b2056e248b" translate="yes" xml:space="preserve">
          <source>This function returns the &lt;code&gt;interactive&lt;/code&gt; form of &lt;var&gt;function&lt;/var&gt;. If &lt;var&gt;function&lt;/var&gt; is an interactively callable function (see &lt;a href=&quot;interactive-call#Interactive-Call&quot;&gt;Interactive Call&lt;/a&gt;), the value is the command&amp;rsquo;s &lt;code&gt;interactive&lt;/code&gt; form &lt;code&gt;(interactive &lt;var&gt;spec&lt;/var&gt;)&lt;/code&gt;, which specifies how to compute its arguments. Otherwise, the value is &lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;function&lt;/var&gt; is a symbol, its function definition is used.</source>
          <target state="translated">该函数返回 &lt;code&gt;interactive&lt;/code&gt; 的形式 &lt;var&gt;function&lt;/var&gt; 。如果 &lt;var&gt;function&lt;/var&gt; 是一个可交互调用的函数（请参见&lt;a href=&quot;interactive-call#Interactive-Call&quot;&gt;Interactive Call&lt;/a&gt;），则该值为命令的 &lt;code&gt;interactive&lt;/code&gt; 形式 &lt;code&gt;(interactive &lt;var&gt;spec&lt;/var&gt;)&lt;/code&gt; ，该形式指定如何计算其参数。否则，值为 &lt;code&gt;nil&lt;/code&gt; 。如果 &lt;var&gt;function&lt;/var&gt; 是符号，则使用其功能定义。</target>
        </trans-unit>
        <trans-unit id="28b864b673c99e88fce00ac9881c72d8487c2106" translate="yes" xml:space="preserve">
          <source>This function returns the &lt;em&gt;Hamming weight&lt;/em&gt; of &lt;var&gt;integer&lt;/var&gt;: the number of ones in the binary representation of &lt;var&gt;integer&lt;/var&gt;. If &lt;var&gt;integer&lt;/var&gt; is negative, it returns the number of zero bits in its two&amp;rsquo;s complement binary representation. The result is always nonnegative.</source>
          <target state="translated">该函数返回&lt;em&gt;汉明权重&lt;/em&gt;的 &lt;var&gt;integer&lt;/var&gt; ：在那些的二进制表示的数量 &lt;var&gt;integer&lt;/var&gt; 。如果 &lt;var&gt;integer&lt;/var&gt; 为负数，则返回其二进制补码二进制表示形式中的零位数。结果总是非负的。</target>
        </trans-unit>
        <trans-unit id="d8c2b2a40491e50e2e12ebe40b8b153f19327364" translate="yes" xml:space="preserve">
          <source>This function returns the &lt;em&gt;Levenshtein distance&lt;/em&gt; between the source string &lt;var&gt;string1&lt;/var&gt; and the target string &lt;var&gt;string2&lt;/var&gt;. The Levenshtein distance is the number of single-character changes&amp;mdash;deletions, insertions, or replacements&amp;mdash;required to transform the source string into the target string; it is one possible definition of the &lt;em&gt;edit distance&lt;/em&gt; between strings.</source>
          <target state="translated">此函数返回源字符串 &lt;var&gt;string1&lt;/var&gt; 和目标字符串 &lt;var&gt;string2&lt;/var&gt; 之间的&lt;em&gt;Levenshtein距离&lt;/em&gt;。Levenshtein距离是将源字符串转换为目标字符串所需的单字符更改（删除，插入或替换）的数量。这是字符串之间&lt;em&gt;编辑距离的&lt;/em&gt;一种可能定义。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f3dbab1951ed56db1a647cf9e57bcef93892f79c" translate="yes" xml:space="preserve">
          <source>This function returns the &lt;em&gt;face number&lt;/em&gt; of face &lt;var&gt;face&lt;/var&gt;. This is a number that uniquely identifies a face at low levels within Emacs. It is seldom necessary to refer to a face by its face number. However, functions that manipulate glyphs, such as &lt;code&gt;make-glyph-code&lt;/code&gt; and &lt;code&gt;glyph-face&lt;/code&gt; (see &lt;a href=&quot;glyphs#Glyphs&quot;&gt;Glyphs&lt;/a&gt;) access the face numbers internally. Note that the face number is stored as the value of the &lt;code&gt;face&lt;/code&gt; property of the face symbol, so we recommend not to set that property of a face to any value of your own.</source>
          <target state="translated">此函数返回face &lt;var&gt;face&lt;/var&gt; 的&lt;em&gt;面部编号&lt;/em&gt;。这是一个数字，可在Emacs中唯一标识低级面孔。很少需要通过其面部编号来引用该面部。但是，操纵字形的函数（例如 &lt;code&gt;make-glyph-code&lt;/code&gt; 和 &lt;code&gt;glyph-face&lt;/code&gt; （请参见&lt;a href=&quot;glyphs#Glyphs&quot;&gt;Glyphs&lt;/a&gt;））在内部访问面号。请注意，面部编号存储为面部符号的 &lt;code&gt;face&lt;/code&gt; 属性的值，因此我们建议不要将面部的属性设置为您自己的任何值。</target>
        </trans-unit>
        <trans-unit id="b0af74a01ed57ed1e03e0f60a0c6af6a83c1e8b7" translate="yes" xml:space="preserve">
          <source>This function returns the &lt;em&gt;local part&lt;/em&gt; of &lt;var&gt;filename&lt;/var&gt;. This is the part of the file&amp;rsquo;s name that identifies it on the remote host, and is typically obtained by removing from the remote file name the parts that specify the remote host and the method of accessing it. For example:</source>
          <target state="translated">该函数返回&lt;em&gt;本地部分&lt;/em&gt;的 &lt;var&gt;filename&lt;/var&gt; 。这是在远程主机上标识该文件的文件名的一部分，通常是通过从远程文件名中删除指定远程主机的部分及其访问方法来获得的。例如：</target>
        </trans-unit>
        <trans-unit id="786c5c68c44d83e542c7f9f14def9741b1c4f895" translate="yes" xml:space="preserve">
          <source>This function returns the &lt;em&gt;mode bits&lt;/em&gt; of &lt;var&gt;filename&lt;/var&gt;&amp;mdash;an integer summarizing its read, write, and execution permissions. This function follows symbolic links. If the file does not exist, the return value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">该函数返回&lt;em&gt;模式位&lt;/em&gt;的 &lt;var&gt;filename&lt;/var&gt; -an整数总结它的读，写和执行权限。此功能遵循符号链接。如果文件不存在，则返回值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ab8471c6de48dd5c13977975e515e2a5f8fbc13" translate="yes" xml:space="preserve">
          <source>This function returns the &lt;em&gt;top-level&lt;/em&gt; default value of &lt;var&gt;symbol&lt;/var&gt;, which is its value outside of any let-binding.</source>
          <target state="translated">此函数返回 &lt;var&gt;symbol&lt;/var&gt; 的&lt;em&gt;顶级&lt;/em&gt;默认值，该默认值是任何let绑定之外的值。</target>
        </trans-unit>
        <trans-unit id="a98a7d5ddea298048e009510c48ac89bf40b6502" translate="yes" xml:space="preserve">
          <source>This function returns the &lt;var&gt;index&lt;/var&gt;th element of the array or record &lt;var&gt;arr&lt;/var&gt;. The first element is at index zero.</source>
          <target state="translated">该函数返回 &lt;var&gt;index&lt;/var&gt; 的阵列或记录的第i个元素 &lt;var&gt;arr&lt;/var&gt; 。第一个元素的索引为零。</target>
        </trans-unit>
        <trans-unit id="0683caf5383e9397bcd419a4b90f73dcef523dc8" translate="yes" xml:space="preserve">
          <source>This function returns the &lt;var&gt;n&lt;/var&gt;th &lt;small&gt;CDR&lt;/small&gt; of &lt;var&gt;list&lt;/var&gt;. In other words, it skips past the first &lt;var&gt;n&lt;/var&gt; links of &lt;var&gt;list&lt;/var&gt; and returns what follows.</source>
          <target state="translated">该函数返回 &lt;var&gt;n&lt;/var&gt; 个&lt;small&gt;CDR&lt;/small&gt;的 &lt;var&gt;list&lt;/var&gt; 。换句话说，它跳过 &lt;var&gt;list&lt;/var&gt; 的前 &lt;var&gt;n&lt;/var&gt; 个链接，并返回后面的内容。</target>
        </trans-unit>
        <trans-unit id="630c3d871ee290cdb7883b95786334b814e3a064" translate="yes" xml:space="preserve">
          <source>This function returns the &lt;var&gt;n&lt;/var&gt;th element of &lt;var&gt;list&lt;/var&gt;. Elements are numbered starting with zero, so the &lt;small&gt;CAR&lt;/small&gt; of &lt;var&gt;list&lt;/var&gt; is element number zero. If the length of &lt;var&gt;list&lt;/var&gt; is &lt;var&gt;n&lt;/var&gt; or less, the value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此函数返回 &lt;var&gt;list&lt;/var&gt; 的第 &lt;var&gt;n&lt;/var&gt; 个元素。元件编号从零开始，所以&lt;small&gt;CAR&lt;/small&gt;的 &lt;var&gt;list&lt;/var&gt; 是元素数为零。如果 &lt;var&gt;list&lt;/var&gt; 的长度为 &lt;var&gt;n&lt;/var&gt; 或更小，则值为 &lt;code&gt;nil&lt;/code&gt; 。&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="7f0c3439ae6658bbd2d139e3ee0f0fce0b9250f7" translate="yes" xml:space="preserve">
          <source>This function returns the &lt;var&gt;weak&lt;/var&gt; value that was specified for hash table &lt;var&gt;table&lt;/var&gt;.</source>
          <target state="translated">此函数返回为哈希表 &lt;var&gt;table&lt;/var&gt; 指定的 &lt;var&gt;weak&lt;/var&gt; 值。</target>
        </trans-unit>
        <trans-unit id="9c9ebef52ec13dc5c6b401ead5a033531d39039b" translate="yes" xml:space="preserve">
          <source>This function returns the ACL for the file &lt;var&gt;filename&lt;/var&gt;. The exact Lisp representation of the ACL is unspecified (and may change in future Emacs versions), but it is the same as what &lt;code&gt;set-file-acl&lt;/code&gt; takes for its &lt;var&gt;acl&lt;/var&gt; argument (see &lt;a href=&quot;changing-files#Changing-Files&quot;&gt;Changing Files&lt;/a&gt;).</source>
          <target state="translated">此函数返回文件 &lt;var&gt;filename&lt;/var&gt; 的ACL 。ACL的确切Lisp表示形式未指定（并且可能会在将来的Emacs版本中更改），但与 &lt;code&gt;set-file-acl&lt;/code&gt; 对其 &lt;var&gt;acl&lt;/var&gt; 参数采用的表示形式相同（请参阅&lt;a href=&quot;changing-files#Changing-Files&quot;&gt;更改文件&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="e99663c6851e6cfe8bf1cb28e37e02cee4dadc48" translate="yes" xml:space="preserve">
          <source>This function returns the SELinux context of the file &lt;var&gt;filename&lt;/var&gt;, as a list of the form &lt;code&gt;(&lt;var&gt;user&lt;/var&gt; &lt;var&gt;role&lt;/var&gt; &lt;var&gt;type&lt;/var&gt;
&lt;var&gt;range&lt;/var&gt;)&lt;/code&gt;. The list elements are the context&amp;rsquo;s user, role, type, and range respectively, as Lisp strings; see the SELinux documentation for details about what these actually mean. The return value has the same form as what &lt;code&gt;set-file-selinux-context&lt;/code&gt; takes for its &lt;var&gt;context&lt;/var&gt; argument (see &lt;a href=&quot;changing-files#Changing-Files&quot;&gt;Changing Files&lt;/a&gt;).</source>
          <target state="translated">该函数返回文件 &lt;var&gt;filename&lt;/var&gt; 的SELinux上下文，形式为列表 &lt;code&gt;(&lt;var&gt;user&lt;/var&gt; &lt;var&gt;role&lt;/var&gt; &lt;var&gt;type&lt;/var&gt; &lt;var&gt;range&lt;/var&gt;)&lt;/code&gt; 。列表元素分别是上下文的用户，角色，类型和范围（以Lisp字符串表示）；有关这些含义的详细信息，请参见SELinux文档。返回值的格式与 &lt;code&gt;set-file-selinux-context&lt;/code&gt; 的 &lt;var&gt;context&lt;/var&gt; 参数所采用的格式相同（请参见&lt;a href=&quot;changing-files#Changing-Files&quot;&gt;更改文件&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="1553c175ef8ca142001d515107b419980a267691" translate="yes" xml:space="preserve">
          <source>This function returns the XLFD (X Logical Font Descriptor), a string, matching &lt;var&gt;font&lt;/var&gt;. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Fonts.html#Fonts&quot;&gt;Fonts&lt;/a&gt; in</source>
          <target state="translated">此函数返回XLFD（X逻辑字体描述符），它是一个与 &lt;var&gt;font&lt;/var&gt; 匹配的字符串。见&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Fonts.html#Fonts&quot;&gt;字体&lt;/a&gt;在</target>
        </trans-unit>
        <trans-unit id="42cad79530600aaa4faf096708f908612e7048b6" translate="yes" xml:space="preserve">
          <source>This function returns the absolute edges of the outer, native or inner frame of &lt;var&gt;frame&lt;/var&gt;. &lt;var&gt;frame&lt;/var&gt; must be a live frame and defaults to the selected one. The returned list has the form &lt;code&gt;(&lt;var&gt;left&lt;/var&gt;&amp;nbsp;&lt;var&gt;top&lt;/var&gt;&amp;nbsp;&lt;var&gt;right&lt;/var&gt;&amp;nbsp;&lt;var&gt;bottom&lt;/var&gt;)&lt;/code&gt; where all values are in pixels relative to the origin of &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s display. For terminal frames the values returned for &lt;var&gt;left&lt;/var&gt; and &lt;var&gt;top&lt;/var&gt; are always zero.</source>
          <target state="translated">此函数返回的外，天然的或内框架的绝对边缘 &lt;var&gt;frame&lt;/var&gt; 。 &lt;var&gt;frame&lt;/var&gt; 必须是实时帧，并且默认为所选帧。返回的列表的形式为 &lt;code&gt;(&lt;var&gt;left&lt;/var&gt;&amp;nbsp;&lt;var&gt;top&lt;/var&gt;&amp;nbsp;&lt;var&gt;right&lt;/var&gt;&amp;nbsp;&lt;var&gt;bottom&lt;/var&gt;)&lt;/code&gt; ，其中所有的值以像素为单位相对于原点 &lt;var&gt;frame&lt;/var&gt; 的显示。对于端子框架，返回的 &lt;var&gt;left&lt;/var&gt; 和 &lt;var&gt;top&lt;/var&gt; 值始终为零。</target>
        </trans-unit>
        <trans-unit id="d1ea3fdbee40a9e5c65ea5416a8ee0d9486c4d25" translate="yes" xml:space="preserve">
          <source>This function returns the absolute file name of the file that &lt;var&gt;buffer&lt;/var&gt; is visiting. If &lt;var&gt;buffer&lt;/var&gt; is not visiting any file, &lt;code&gt;buffer-file-name&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;buffer&lt;/var&gt; is not supplied, it defaults to the current buffer.</source>
          <target state="translated">此函数返回 &lt;var&gt;buffer&lt;/var&gt; 正在访问的文件的绝对文件名。如果 &lt;var&gt;buffer&lt;/var&gt; 不访问任何文件，则 &lt;code&gt;buffer-file-name&lt;/code&gt; 返回 &lt;code&gt;nil&lt;/code&gt; 。如果未提供 &lt;var&gt;buffer&lt;/var&gt; ，则默认为当前缓冲区。</target>
        </trans-unit>
        <trans-unit id="548cc12e40024b5d5a688a33cf095664c3a5d52b" translate="yes" xml:space="preserve">
          <source>This function returns the absolute value of &lt;var&gt;number&lt;/var&gt;.</source>
          <target state="translated">此函数返回 &lt;var&gt;number&lt;/var&gt; 的绝对值。</target>
        </trans-unit>
        <trans-unit id="31a7ef7be3e0f025df2b310e4e557e05d1d410cf" translate="yes" xml:space="preserve">
          <source>This function returns the actual number of entries in &lt;var&gt;table&lt;/var&gt;.</source>
          <target state="translated">此函数返回 &lt;var&gt;table&lt;/var&gt; 中的实际条目数。</target>
        </trans-unit>
        <trans-unit id="820d512616e53d2ae86c8c0d9d41ceba3072aabf" translate="yes" xml:space="preserve">
          <source>This function returns the alist of the GnuTLS MAC algorithms.</source>
          <target state="translated">该函数返回GnuTLS MAC算法的列表。</target>
        </trans-unit>
        <trans-unit id="5f36c8a0de9ef61b84d941bfe76ad4793b8e2357" translate="yes" xml:space="preserve">
          <source>This function returns the alist of the GnuTLS ciphers.</source>
          <target state="translated">这个函数返回GnuTLS密码的列表。</target>
        </trans-unit>
        <trans-unit id="9f17ba4c5a952b7eceecb4595e8e88924f1b61f1" translate="yes" xml:space="preserve">
          <source>This function returns the alist of the GnuTLS digest algorithms.</source>
          <target state="translated">该函数返回GnuTLS摘要算法的列表。</target>
        </trans-unit>
        <trans-unit id="166076fb7e002186f4de4692e514bf3c2cd0be81" translate="yes" xml:space="preserve">
          <source>This function returns the associated buffer of the specified &lt;var&gt;process&lt;/var&gt;.</source>
          <target state="translated">该函数返回指定 &lt;var&gt;process&lt;/var&gt; 的关联缓冲区。</target>
        </trans-unit>
        <trans-unit id="281901165d168f3d17298bcd396dbf366c885458" translate="yes" xml:space="preserve">
          <source>This function returns the attributes of &lt;var&gt;xwidget&lt;/var&gt; as a vector of the form &lt;code&gt;[&lt;var&gt;type&lt;/var&gt; &lt;var&gt;title&lt;/var&gt; &lt;var&gt;width&lt;/var&gt; &lt;var&gt;height&lt;/var&gt;]&lt;/code&gt;. The attributes are usually determined by &lt;code&gt;make-xwidget&lt;/code&gt; when the xwidget is created.</source>
          <target state="translated">此函数以 &lt;code&gt;[&lt;var&gt;type&lt;/var&gt; &lt;var&gt;title&lt;/var&gt; &lt;var&gt;width&lt;/var&gt; &lt;var&gt;height&lt;/var&gt;]&lt;/code&gt; &lt;var&gt;type&lt;/var&gt; &lt;var&gt;title&lt;/var&gt; &lt;var&gt;width&lt;/var&gt; &lt;var&gt;height&lt;/var&gt; ]形式的向量返回 &lt;var&gt;xwidget&lt;/var&gt; 的属性。创建 &lt;code&gt;make-xwidget&lt;/code&gt; 时，属性通常由make-xwidget确定。</target>
        </trans-unit>
        <trans-unit id="d7501805b4f6fd00b7d65b4978b1514511d49499" translate="yes" xml:space="preserve">
          <source>This function returns the attributes of the physical monitor dominating (see above) &lt;var&gt;frame&lt;/var&gt;, which defaults to the selected frame.</source>
          <target state="translated">此函数返回物理监视器主导（请参见上文） &lt;var&gt;frame&lt;/var&gt; 的属性，该框架默认为所选框架。</target>
        </trans-unit>
        <trans-unit id="d7735993f75241e9e95c63b265ce318a0bf65b57" translate="yes" xml:space="preserve">
          <source>This function returns the average width in pixels for the font used by &lt;var&gt;face&lt;/var&gt; in &lt;var&gt;window&lt;/var&gt;. The specified &lt;var&gt;window&lt;/var&gt; must be a live window. If &lt;code&gt;nil&lt;/code&gt; or omitted, &lt;var&gt;window&lt;/var&gt; defaults to the selected window, and &lt;var&gt;face&lt;/var&gt; defaults to the default face in &lt;var&gt;window&lt;/var&gt;.</source>
          <target state="translated">该函数返回在对于所使用的字体的像素的平均宽度 &lt;var&gt;face&lt;/var&gt; 中 &lt;var&gt;window&lt;/var&gt; 。指定的 &lt;var&gt;window&lt;/var&gt; 必须是活动窗口。如果为 &lt;code&gt;nil&lt;/code&gt; 或省略，则 &lt;var&gt;window&lt;/var&gt; 默认为所选窗口， &lt;var&gt;face&lt;/var&gt; 默认为 &lt;var&gt;window&lt;/var&gt; 中的默认face 。</target>
        </trans-unit>
        <trans-unit id="9e131f61dcaadaffd100d139064ba0c5fd540931" translate="yes" xml:space="preserve">
          <source>This function returns the average width in pixels of the font used by the current buffer&amp;rsquo;s default face, as that face is defined for the selected frame.</source>
          <target state="translated">此函数返回当前缓冲区默认面使用的字体的平均宽度（以像素为单位），因为该面是为选定帧定义的。</target>
        </trans-unit>
        <trans-unit id="d8972ac4ce1a7c836527e69b2e97a31850082ff6" translate="yes" xml:space="preserve">
          <source>This function returns the backing store capability of the display. Backing store means recording the pixels of windows (and parts of windows) that are not exposed, so that when exposed they can be displayed very quickly.</source>
          <target state="translated">该函数返回显示器的后置存储能力。背驰存储是指记录未暴露的窗口(和窗口的一部分)的像素,以便在暴露时可以很快地显示出来。</target>
        </trans-unit>
        <trans-unit id="dc34cf061f26557671c9fe10db07aeb20654bafc" translate="yes" xml:space="preserve">
          <source>This function returns the base buffer of &lt;var&gt;buffer&lt;/var&gt;, which defaults to the current buffer. If &lt;var&gt;buffer&lt;/var&gt; is not indirect, the value is &lt;code&gt;nil&lt;/code&gt;. Otherwise, the value is another buffer, which is never an indirect buffer.</source>
          <target state="translated">此函数返回buffer的基本 &lt;var&gt;buffer&lt;/var&gt; ，默认为当前缓冲区。如果 &lt;var&gt;buffer&lt;/var&gt; 不是间接的，则值为 &lt;code&gt;nil&lt;/code&gt; 。否则，该值是另一个缓冲区，永远不会是间接缓冲区。</target>
        </trans-unit>
        <trans-unit id="7ecbc72942fdd729626afb1317794a58462ec438" translate="yes" xml:space="preserve">
          <source>This function returns the beginning of the field specified by &lt;var&gt;pos&lt;/var&gt;.</source>
          <target state="translated">此函数返回 &lt;var&gt;pos&lt;/var&gt; 指定的字段的开头。</target>
        </trans-unit>
        <trans-unit id="7f8b395877082b26e6f1f0e32deb37d158e46aa9" translate="yes" xml:space="preserve">
          <source>This function returns the binary exponent of &lt;var&gt;x&lt;/var&gt;. More precisely, if &lt;var&gt;x&lt;/var&gt; is finite and nonzero, the value is the logarithm base 2 of &lt;em&gt;|x|&lt;/em&gt;, rounded down to an integer. If &lt;var&gt;x&lt;/var&gt; is zero or infinite, the value is infinity; if &lt;var&gt;x&lt;/var&gt; is a NaN, the value is a NaN.</source>
          <target state="translated">此函数返回 &lt;var&gt;x&lt;/var&gt; 的二进制指数。更准确地说，如果 &lt;var&gt;x&lt;/var&gt; 为有限且非零，则该值为&lt;em&gt;| x |&lt;/em&gt;的对数以2为底&lt;em&gt;。&lt;/em&gt;，四舍五入为整数。如果 &lt;var&gt;x&lt;/var&gt; 为零或无穷大，则值为无穷大；如果 &lt;var&gt;x&lt;/var&gt; 是NaN，则值是NaN。</target>
        </trans-unit>
        <trans-unit id="6dcc26f70d974d52f14218ae0dc79f88d04489a0" translate="yes" xml:space="preserve">
          <source>This function returns the binding for &lt;var&gt;key&lt;/var&gt; according to the current active keymaps. The result is &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;key&lt;/var&gt; is undefined in the keymaps.</source>
          <target state="translated">此函数根据当前活动的 &lt;var&gt;key&lt;/var&gt; 映射返回按键的绑定。如果 &lt;var&gt;key&lt;/var&gt; 映射中未定义键，则结果为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2af0225aa63791cdd4b386d9d8b7b28effbc41e4" translate="yes" xml:space="preserve">
          <source>This function returns the binding for &lt;var&gt;key&lt;/var&gt; in the current local keymap, or &lt;code&gt;nil&lt;/code&gt; if it is undefined there.</source>
          <target state="translated">此函数返回当前本地 &lt;var&gt;key&lt;/var&gt; 映射中键的绑定，如果在此未定义，则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b9d7aa3c0f5b2918b9ca5e15d9299eb1dd8bacc8" translate="yes" xml:space="preserve">
          <source>This function returns the binding for command &lt;var&gt;key&lt;/var&gt; in the current global keymap, or &lt;code&gt;nil&lt;/code&gt; if it is undefined there.</source>
          <target state="translated">此函数返回当前全局 &lt;var&gt;key&lt;/var&gt; 映射中命令键的绑定，如果在此未定义，则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fdb82f5afd008c1436403f21c57fbc7fbe2c773a" translate="yes" xml:space="preserve">
          <source>This function returns the bitwise AND of the arguments: the &lt;var&gt;n&lt;/var&gt;th bit is 1 in the result if, and only if, the &lt;var&gt;n&lt;/var&gt;th bit is 1 in all the arguments.</source>
          <target state="translated">此函数返回参数的按位与：仅当且仅当所有参数中的第 &lt;var&gt;n&lt;/var&gt; 位为1时，结果中的第 &lt;var&gt;n&lt;/var&gt; 位为1。</target>
        </trans-unit>
        <trans-unit id="b941b8d327e01d011862f0b94e37f863841bf42c" translate="yes" xml:space="preserve">
          <source>This function returns the bitwise complement of its argument: the &lt;var&gt;n&lt;/var&gt;th bit is one in the result if, and only if, the &lt;var&gt;n&lt;/var&gt;th bit is zero in &lt;var&gt;integer&lt;/var&gt;, and vice-versa. The result equals -1 - &lt;var&gt;integer&lt;/var&gt;.</source>
          <target state="translated">此函数返回其参数的按位补码：当且仅当 &lt;var&gt;integer&lt;/var&gt; 第 &lt;var&gt;n&lt;/var&gt; 位为零时，结果中的第 &lt;var&gt;n&lt;/var&gt; 位为1，反之亦然。结果等于-1- &lt;var&gt;integer&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="6c9312fc26aa0ee40755f7b85566a46eb21c7690" translate="yes" xml:space="preserve">
          <source>This function returns the bitwise exclusive OR of its arguments: the &lt;var&gt;n&lt;/var&gt;th bit is 1 in the result if, and only if, the &lt;var&gt;n&lt;/var&gt;th bit is 1 in an odd number of the arguments. If there are no arguments, the result is 0, which is an identity element for this operation. If &lt;code&gt;logxor&lt;/code&gt; is passed just one argument, it returns that argument.</source>
          <target state="translated">此函数返回其参数的按位异或：仅当且仅当奇数个参数中的第 &lt;var&gt;n&lt;/var&gt; 位为1时，结果中的第 &lt;var&gt;n&lt;/var&gt; 位为1。如果没有参数，则结果为0，这是此操作的标识元素。如果 &lt;code&gt;logxor&lt;/code&gt; 传递给一个参数，它将返回该参数。</target>
        </trans-unit>
        <trans-unit id="b1cd887dd90ecc455b6c4a77e07d5e0d4c4423ac" translate="yes" xml:space="preserve">
          <source>This function returns the bitwise inclusive OR of its arguments: the &lt;var&gt;n&lt;/var&gt;th bit is 1 in the result if, and only if, the &lt;var&gt;n&lt;/var&gt;th bit is 1 in at least one of the arguments. If there are no arguments, the result is 0, which is an identity element for this operation. If &lt;code&gt;logior&lt;/code&gt; is passed just one argument, it returns that argument.</source>
          <target state="translated">此函数返回其参数的按位或运算符：当且仅当在至少一个参数中第 &lt;var&gt;n&lt;/var&gt; 位为1时，结果中的第 &lt;var&gt;n&lt;/var&gt; 位为1。如果没有参数，则结果为0，这是此操作的标识元素。如果 &lt;code&gt;logior&lt;/code&gt; 传递logior一个参数，它将返回该参数。</target>
        </trans-unit>
        <trans-unit id="55cce47c98b3cd72fa3886debba72b1076dd7815" translate="yes" xml:space="preserve">
          <source>This function returns the body height or body width of &lt;var&gt;window&lt;/var&gt;. If &lt;var&gt;horizontal&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it is equivalent to calling &lt;code&gt;window-body-height&lt;/code&gt; for &lt;var&gt;window&lt;/var&gt;; otherwise it is equivalent to calling &lt;code&gt;window-body-width&lt;/code&gt;. In either case, the optional argument &lt;var&gt;pixelwise&lt;/var&gt; is passed to the function called.</source>
          <target state="translated">此函数返回 &lt;var&gt;window&lt;/var&gt; 的主体高度或主体宽度。如果省略了 &lt;var&gt;horizontal&lt;/var&gt; 或 &lt;code&gt;nil&lt;/code&gt; ，则等效于为 &lt;var&gt;window&lt;/var&gt; 调用 &lt;code&gt;window-body-height&lt;/code&gt; ；否则等效于调用 &lt;code&gt;window-body-width&lt;/code&gt; 。在这两种情况下，可选参数 &lt;var&gt;pixelwise&lt;/var&gt; 都将传递给调用的函数。</target>
        </trans-unit>
        <trans-unit id="3bf3cfabffc5775c39cd6285cc6a534c0b73e657" translate="yes" xml:space="preserve">
          <source>This function returns the boolean exclusive-or of &lt;var&gt;condition1&lt;/var&gt; and &lt;var&gt;condition2&lt;/var&gt;. That is, &lt;code&gt;xor&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt; if either both arguments are &lt;code&gt;nil&lt;/code&gt;, or both are non-&lt;code&gt;nil&lt;/code&gt;. Otherwise, it returns the value of that argument which is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此函数返回 &lt;var&gt;condition1&lt;/var&gt; 和 &lt;var&gt;condition2&lt;/var&gt; 的布尔异或。也就是说， &lt;code&gt;xor&lt;/code&gt; 返回 &lt;code&gt;nil&lt;/code&gt; 如果任一两个参数都是 &lt;code&gt;nil&lt;/code&gt; ，或者两者都是非 &lt;code&gt;nil&lt;/code&gt; 。否则，它将返回该参数的值non- &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cc93eaaff15e70ffdd038a065b2ad2025262192b" translate="yes" xml:space="preserve">
          <source>This function returns the boundaries of the field on which &lt;var&gt;collection&lt;/var&gt; will operate, assuming that &lt;var&gt;string&lt;/var&gt; holds the text before point and &lt;var&gt;suffix&lt;/var&gt; holds the text after point.</source>
          <target state="translated">该函数返回 &lt;var&gt;collection&lt;/var&gt; 将在其上进行操作的字段的边界，假设 &lt;var&gt;string&lt;/var&gt; 将字符串保存在point之前，而 &lt;var&gt;suffix&lt;/var&gt; 将文本保存在point之后。</target>
        </trans-unit>
        <trans-unit id="9276b51d17375688f40c1938021b291a49b856be" translate="yes" xml:space="preserve">
          <source>This function returns the buffer list, including all buffers, even those whose names begin with a space. The elements are actual buffers, not their names.</source>
          <target state="translated">该函数返回缓冲区列表,包括所有缓冲区,即使是那些名字以空格开头的缓冲区。这些元素是实际的缓冲区,而不是它们的名字。</target>
        </trans-unit>
        <trans-unit id="73b50a6c6dc68030647e6e9fe391fc17ed30a312" translate="yes" xml:space="preserve">
          <source>This function returns the buffer of &lt;var&gt;xwidget&lt;/var&gt;.</source>
          <target state="translated">此函数返回 &lt;var&gt;xwidget&lt;/var&gt; 的缓冲区。</target>
        </trans-unit>
        <trans-unit id="d8bb1890ea69eace59cf39e43f3f88ac65e90ee9" translate="yes" xml:space="preserve">
          <source>This function returns the buffer over which &lt;var&gt;event&lt;/var&gt; occurred. Call it with the argument of the function from &lt;code&gt;tooltip-functions&lt;/code&gt; to obtain the buffer whose text triggered the tooltip. Note that the event might occur not over a buffer (e.g., over the tool bar), in which case this function will return &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此函数返回发生 &lt;var&gt;event&lt;/var&gt; 的缓冲区。使用 &lt;code&gt;tooltip-functions&lt;/code&gt; 中的函数参数调用它，以获取其文本触发了工具提示的缓冲区。请注意，该事件可能不会发生在缓冲区上方（例如，在工具栏上方），在这种情况下，此函数将返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="228abb5e5198bff7eb07cbce60eed757affb43c9" translate="yes" xml:space="preserve">
          <source>This function returns the buffer position corresponding to a file position specified by &lt;var&gt;byte&lt;/var&gt;, a zero-base byte offset from the file&amp;rsquo;s beginning. The function performs the conversion opposite to what &lt;code&gt;bufferpos-to-filepos&lt;/code&gt; does. Optional arguments &lt;var&gt;quality&lt;/var&gt; and &lt;var&gt;coding-system&lt;/var&gt; have the same meaning and values as for &lt;code&gt;bufferpos-to-filepos&lt;/code&gt;.</source>
          <target state="translated">此函数返回与 &lt;var&gt;byte&lt;/var&gt; 指定的文件位置相对应的缓冲区位置，byte从文件开头偏移零个字节。该函数执行与 &lt;code&gt;bufferpos-to-filepos&lt;/code&gt; 相反的转换。可选参数 &lt;var&gt;quality&lt;/var&gt; 和 &lt;code&gt;bufferpos-to-filepos&lt;/code&gt; &lt;var&gt;coding-system&lt;/var&gt; 具有与bufferpos-to-filepos相同的含义和值。</target>
        </trans-unit>
        <trans-unit id="0da0d41b3aefdf17b77bf28030d5ccbbd8f036db" translate="yes" xml:space="preserve">
          <source>This function returns the buffer position of the next beginning or end of an overlay, after &lt;var&gt;pos&lt;/var&gt;. If there is none, it returns &lt;code&gt;(point-max)&lt;/code&gt;.</source>
          <target state="translated">此函数返回 &lt;var&gt;pos&lt;/var&gt; 之后下一个覆盖图的下一个起点或终点的缓冲区位置。如果没有，则返回 &lt;code&gt;(point-max)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="505e1a822d8ab772a3c43b32c684e926ffb915b4" translate="yes" xml:space="preserve">
          <source>This function returns the buffer position of the previous beginning or end of an overlay, before &lt;var&gt;pos&lt;/var&gt;. If there is none, it returns &lt;code&gt;(point-min)&lt;/code&gt;.</source>
          <target state="translated">此函数返回 &lt;var&gt;pos&lt;/var&gt; 之前上一个覆盖图的开头或结尾的缓冲区位置。如果没有，则返回 &lt;code&gt;(point-min)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c35b8eada813f5d4d5cf883e978d0fced417163a" translate="yes" xml:space="preserve">
          <source>This function returns the buffer shown in &lt;var&gt;window&lt;/var&gt; at the last time window change functions were run for &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s frame. If it returns &lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;window&lt;/var&gt; has been created after that. If it returns &lt;code&gt;t&lt;/code&gt;, &lt;var&gt;window&lt;/var&gt; was not shown at that time but has been restored from a previously saved window configuration afterwards. Otherwise, the return value is the buffer shown by &lt;code&gt;window&lt;/code&gt; at that time.</source>
          <target state="translated">该函数返回在所示的缓冲器 &lt;var&gt;window&lt;/var&gt; 在最后的时间窗的改变功能进行了运行 &lt;var&gt;window&lt;/var&gt; 的框架上。如果返回 &lt;code&gt;nil&lt;/code&gt; ，则此后已创建 &lt;var&gt;window&lt;/var&gt; 。如果返回 &lt;code&gt;t&lt;/code&gt; ，则该 &lt;var&gt;window&lt;/var&gt; 当时未显示，但之后已从先前保存的窗口配置中恢复。否则，返回值是当时 &lt;code&gt;window&lt;/code&gt; 显示的缓冲区。</target>
        </trans-unit>
        <trans-unit id="f207ea234927993bddc13a73eabd00b28319c83c" translate="yes" xml:space="preserve">
          <source>This function returns the buffer specified by &lt;var&gt;buffer-or-name&lt;/var&gt;. If &lt;var&gt;buffer-or-name&lt;/var&gt; is a string and there is no buffer with that name, the value is &lt;code&gt;nil&lt;/code&gt;. If &lt;var&gt;buffer-or-name&lt;/var&gt; is a buffer, it is returned as given; that is not very useful, so the argument is usually a name. For example:</source>
          <target state="translated">此函数返回由 &lt;var&gt;buffer-or-name&lt;/var&gt; 指定的缓冲区。如果 &lt;var&gt;buffer-or-name&lt;/var&gt; 是字符串，并且没有使用该名称的缓冲区，则值为 &lt;code&gt;nil&lt;/code&gt; 。如果 &lt;var&gt;buffer-or-name&lt;/var&gt; 是一个缓冲区，则按给定的值返回；否则，返回false。那不是很有用，因此参数通常是一个名称。例如：</target>
        </trans-unit>
        <trans-unit id="2edb4d729a1125ca4f5005a2a392f11b3c2f31b3" translate="yes" xml:space="preserve">
          <source>This function returns the buffer that &lt;var&gt;marker&lt;/var&gt; points into, or &lt;code&gt;nil&lt;/code&gt; if it points nowhere.</source>
          <target state="translated">该函数返回 &lt;var&gt;marker&lt;/var&gt; 指向的缓冲区，如果指向无处，则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="794e1543e565851d5c11ce9c314a07e50d29d023" translate="yes" xml:space="preserve">
          <source>This function returns the buffer that &lt;var&gt;overlay&lt;/var&gt; belongs to. It returns &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;overlay&lt;/var&gt; has been deleted.</source>
          <target state="translated">此函数返回 &lt;var&gt;overlay&lt;/var&gt; 所属的缓冲区。如果 &lt;var&gt;overlay&lt;/var&gt; 已删除，则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d01d92ea20a798dce7eda439fbf2a67a502741fc" translate="yes" xml:space="preserve">
          <source>This function returns the buffer that &lt;var&gt;window&lt;/var&gt; is displaying. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt; it defaults to the selected window. If &lt;var&gt;window&lt;/var&gt; is an internal window, this function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此函数返回 &lt;var&gt;window&lt;/var&gt; 正在显示的缓冲区。如果省略 &lt;var&gt;window&lt;/var&gt; 或 &lt;code&gt;nil&lt;/code&gt; ,则默认为所选窗口。如果 &lt;var&gt;window&lt;/var&gt; 是内部窗口，则此函数返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="23a8a3cd9e8c76ead8f9733817e8cb2ca14490d3" translate="yes" xml:space="preserve">
          <source>This function returns the buffer visiting file &lt;var&gt;filename&lt;/var&gt;. If there is no such buffer, it returns &lt;code&gt;nil&lt;/code&gt;. The argument &lt;var&gt;filename&lt;/var&gt;, which must be a string, is expanded (see &lt;a href=&quot;file-name-expansion#File-Name-Expansion&quot;&gt;File Name Expansion&lt;/a&gt;), then compared against the visited file names of all live buffers. Note that the buffer&amp;rsquo;s &lt;code&gt;buffer-file-name&lt;/code&gt; must match the expansion of &lt;var&gt;filename&lt;/var&gt; exactly. This function will not recognize other names for the same file.</source>
          <target state="translated">该函数返回缓冲区访问文件 &lt;var&gt;filename&lt;/var&gt; 。如果没有这样的缓冲区，则返回 &lt;code&gt;nil&lt;/code&gt; 。扩展参数 &lt;var&gt;filename&lt;/var&gt; （必须是字符串）（请参阅&lt;a href=&quot;file-name-expansion#File-Name-Expansion&quot;&gt;File Name Expansion&lt;/a&gt;），然后将其与所有活动缓冲区的已访问文件名进行比较。请注意，缓冲区的 &lt;code&gt;buffer-file-name&lt;/code&gt; 必须与文件名的扩展 &lt;var&gt;filename&lt;/var&gt; 完全匹配。此功能将无法识别同一文件的其他名称。</target>
        </trans-unit>
        <trans-unit id="393334152133cc9793ac8f3f912ef22bc203bfd3" translate="yes" xml:space="preserve">
          <source>This function returns the buffer-local binding of &lt;var&gt;variable&lt;/var&gt; (a symbol) in buffer &lt;var&gt;buffer&lt;/var&gt;. If &lt;var&gt;variable&lt;/var&gt; does not have a buffer-local binding in buffer &lt;var&gt;buffer&lt;/var&gt;, it returns the default value (see &lt;a href=&quot;default-value#Default-Value&quot;&gt;Default Value&lt;/a&gt;) of &lt;var&gt;variable&lt;/var&gt; instead.</source>
          <target state="translated">该函数返回缓冲器局部结合 &lt;var&gt;variable&lt;/var&gt; 在缓冲液（一个符号） &lt;var&gt;buffer&lt;/var&gt; 。如果 &lt;var&gt;variable&lt;/var&gt; 在buffer &lt;var&gt;buffer&lt;/var&gt; 中没有本地缓冲区绑定，则它将返回 &lt;var&gt;variable&lt;/var&gt; 的默认值（请参见&lt;a href=&quot;default-value#Default-Value&quot;&gt;Default Value&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="c054a71b573ee03e371d843f5a44a431bde61b1f" translate="yes" xml:space="preserve">
          <source>This function returns the byte at character position &lt;var&gt;pos&lt;/var&gt; in the current buffer. If the current buffer is unibyte, this is literally the byte at that position. If the buffer is multibyte, byte values of</source>
          <target state="translated">此函数返回当前缓冲区中字符位置 &lt;var&gt;pos&lt;/var&gt; 处的字节。如果当前缓冲区是unibyte，则实际上是该位置的字节。如果缓冲区为多字节，则字节值为</target>
        </trans-unit>
        <trans-unit id="54832f061265be6d011cde62a49f7e79503845eb" translate="yes" xml:space="preserve">
          <source>This function returns the category set for character &lt;var&gt;char&lt;/var&gt; in the current buffer&amp;rsquo;s category table. This is the bool-vector which records which categories the character &lt;var&gt;char&lt;/var&gt; belongs to. The function &lt;code&gt;char-category-set&lt;/code&gt; does not allocate storage, because it returns the same bool-vector that exists in the category table.</source>
          <target state="translated">此函数返回当前缓冲区的类别表中字符 &lt;var&gt;char&lt;/var&gt; 的类别集。这是布尔向量，它记录字符 &lt;var&gt;char&lt;/var&gt; 属于哪些类别。函数 &lt;code&gt;char-category-set&lt;/code&gt; 不分配存储空间，因为它返回的类别表中存在相同的bool-vector。</target>
        </trans-unit>
        <trans-unit id="0e464309ce1a0fa942568411b2096100447696e9" translate="yes" xml:space="preserve">
          <source>This function returns the character following point in the current buffer. This is similar to &lt;code&gt;(char-after (point))&lt;/code&gt;. However, if point is at the end of the buffer, then &lt;code&gt;following-char&lt;/code&gt; returns 0.</source>
          <target state="translated">此函数返回当前缓冲区中的字符跟随点。这类似于 &lt;code&gt;(char-after (point))&lt;/code&gt; 。但是，如果point在缓冲区的末尾，则 &lt;code&gt;following-char&lt;/code&gt; 返回0。</target>
        </trans-unit>
        <trans-unit id="860131af9bef67556be9087b7e73990200e62428" translate="yes" xml:space="preserve">
          <source>This function returns the character in the current buffer at (i.e., immediately after) position &lt;var&gt;position&lt;/var&gt;. If &lt;var&gt;position&lt;/var&gt; is out of range for this purpose, either before the beginning of the buffer, or at or beyond the end, then the value is &lt;code&gt;nil&lt;/code&gt;. The default for &lt;var&gt;position&lt;/var&gt; is point.</source>
          <target state="translated">此函数在position &lt;var&gt;position&lt;/var&gt; （即紧随其后）返回当前缓冲区中的字符。如果为此目的， &lt;var&gt;position&lt;/var&gt; 超出了范围，则是在缓冲区的开始之前，或者在结束处或结束之后，则该值为 &lt;code&gt;nil&lt;/code&gt; 。 &lt;var&gt;position&lt;/var&gt; 的默认值为point。</target>
        </trans-unit>
        <trans-unit id="9942a3ece43bdc3f774637acc3730cf2d36e9ca6" translate="yes" xml:space="preserve">
          <source>This function returns the character in the current buffer immediately before position &lt;var&gt;position&lt;/var&gt;. If &lt;var&gt;position&lt;/var&gt; is out of range for this purpose, either at or before the beginning of the buffer, or beyond the end, then the value is &lt;code&gt;nil&lt;/code&gt;. The default for &lt;var&gt;position&lt;/var&gt; is point.</source>
          <target state="translated">此函数返回位置 &lt;var&gt;position&lt;/var&gt; 之前的当前缓冲区中的字符。如果为此目的， &lt;var&gt;position&lt;/var&gt; 超出了范围，则是在缓冲区的开头或之前，或者在结尾之外，则该值为 &lt;code&gt;nil&lt;/code&gt; 。 &lt;var&gt;position&lt;/var&gt; 的默认值为point。</target>
        </trans-unit>
        <trans-unit id="0b5bc7aca0c68f650574584abd803fa26b5bbbb7" translate="yes" xml:space="preserve">
          <source>This function returns the character of glyph code &lt;var&gt;glyph&lt;/var&gt;.</source>
          <target state="translated">此函数返回字形代码 &lt;var&gt;glyph&lt;/var&gt; 的字符。</target>
        </trans-unit>
        <trans-unit id="af70b2b22e7f479746848c63ad72de7b50b912ba" translate="yes" xml:space="preserve">
          <source>This function returns the character preceding point in the current buffer. See above, under &lt;code&gt;following-char&lt;/code&gt;, for an example. If point is at the beginning of the buffer, &lt;code&gt;preceding-char&lt;/code&gt; returns 0.</source>
          <target state="translated">此函数返回当前缓冲区中的字符前一点。有关示例，请参见上文，在 &lt;code&gt;following-char&lt;/code&gt; 下。如果point在缓冲区的开头，则 &lt;code&gt;preceding-char&lt;/code&gt; 返回0。</target>
        </trans-unit>
        <trans-unit id="dcf5ddba9780ca9498f530d93503bd9e4349bafd" translate="yes" xml:space="preserve">
          <source>This function returns the character whose Unicode name is &lt;var&gt;string&lt;/var&gt;. If &lt;var&gt;ignore-case&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, case is ignored in &lt;var&gt;string&lt;/var&gt;. This function returns &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;string&lt;/var&gt; does not name a character.</source>
          <target state="translated">此函数返回Unicode名称为 &lt;var&gt;string&lt;/var&gt; 的字符。如果 &lt;var&gt;ignore-case&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则在 &lt;var&gt;string&lt;/var&gt; 中忽略case 。如果 &lt;var&gt;string&lt;/var&gt; 未命名字符，则此函数返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b53ba3447cb8ecbd614b1acfd769d74cbaf71a95" translate="yes" xml:space="preserve">
          <source>This function returns the charset of highest priority containing the character at position &lt;var&gt;pos&lt;/var&gt; in the current buffer. If &lt;var&gt;pos&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the current value of point. If &lt;var&gt;pos&lt;/var&gt; is out of range, the value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此函数返回包含当前缓冲区中位置 &lt;var&gt;pos&lt;/var&gt; 处的字符的最高优先级字符集。如果 &lt;var&gt;pos&lt;/var&gt; 省略或为 &lt;code&gt;nil&lt;/code&gt; ，则默认为point的当前值。如果 &lt;var&gt;pos&lt;/var&gt; 超出范围，则值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3ec1b95ff12149b402c74247411bcfcbb9961db4" translate="yes" xml:space="preserve">
          <source>This function returns the code point assigned to the character &lt;var&gt;char&lt;/var&gt; in &lt;var&gt;charset&lt;/var&gt;. If &lt;var&gt;charset&lt;/var&gt; doesn&amp;rsquo;t have a codepoint for &lt;var&gt;char&lt;/var&gt;, the value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">该函数返回指定的字符代码点 &lt;var&gt;char&lt;/var&gt; 的 &lt;var&gt;charset&lt;/var&gt; 。如果 &lt;var&gt;charset&lt;/var&gt; 没有 &lt;var&gt;char&lt;/var&gt; 的代码点，则值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9e55ed7826316699571a3522f67e0858a505a880" translate="yes" xml:space="preserve">
          <source>This function returns the coding system that is in use for encoding terminal output from &lt;var&gt;terminal&lt;/var&gt;. A value of &lt;code&gt;no-conversion&lt;/code&gt; means no encoding is done. If &lt;var&gt;terminal&lt;/var&gt; is a frame, it means that frame&amp;rsquo;s terminal; if it is &lt;code&gt;nil&lt;/code&gt;, that means the currently selected frame&amp;rsquo;s terminal.</source>
          <target state="translated">该函数返回用于对来自 &lt;var&gt;terminal&lt;/var&gt; 输出的终端进行编码的编码系统。 &lt;code&gt;no-conversion&lt;/code&gt; 值表示不进行编码。如果 &lt;var&gt;terminal&lt;/var&gt; 是一个框架，则表示该框架的终端；如果为 &lt;code&gt;nil&lt;/code&gt; ，则表示当前选定帧的终端。</target>
        </trans-unit>
        <trans-unit id="c1ce001a7ab985d6d17830d9dbd5cc9820d77fa9" translate="yes" xml:space="preserve">
          <source>This function returns the coding system to use (by default) for performing &lt;var&gt;operation&lt;/var&gt; with &lt;var&gt;arguments&lt;/var&gt;. The value has this form:</source>
          <target state="translated">该函数返回执行的编码系统使用（默认）， &lt;var&gt;operation&lt;/var&gt; 与 &lt;var&gt;arguments&lt;/var&gt; 。该值具有以下形式：</target>
        </trans-unit>
        <trans-unit id="0743ffd0ec3f7f3285592123749c8c1f6e9bcc21" translate="yes" xml:space="preserve">
          <source>This function returns the coding system used for decoding keyboard input from &lt;var&gt;terminal&lt;/var&gt;. A value of &lt;code&gt;no-conversion&lt;/code&gt; means no decoding is done. If &lt;var&gt;terminal&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it means the selected frame&amp;rsquo;s terminal. See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;.</source>
          <target state="translated">此函数返回用于解码来自 &lt;var&gt;terminal&lt;/var&gt; 的键盘输入的编码系统。 &lt;code&gt;no-conversion&lt;/code&gt; 值表示不进行解码。如果 &lt;var&gt;terminal&lt;/var&gt; 省略或为 &lt;code&gt;nil&lt;/code&gt; ，则表示所选帧的端子。请参阅&lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;多个终端&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="325677e13672640bb0f70ae0e30b6be69bd6142b" translate="yes" xml:space="preserve">
          <source>This function returns the combination limit for &lt;var&gt;window&lt;/var&gt;.</source>
          <target state="translated">此函数返回 &lt;var&gt;window&lt;/var&gt; 的组合限制。</target>
        </trans-unit>
        <trans-unit id="a43200aba68114ea5997111d4c9ebcf19e2c45cc" translate="yes" xml:space="preserve">
          <source>This function returns the command that was executed to start &lt;var&gt;process&lt;/var&gt;. This is a list of strings, the first string being the program executed and the rest of the strings being the arguments that were given to the program. For a network, serial, or pipe connection, this is either &lt;code&gt;nil&lt;/code&gt;, which means the process is running or &lt;code&gt;t&lt;/code&gt; (process is stopped).</source>
          <target state="translated">此函数返回已启动以启动 &lt;var&gt;process&lt;/var&gt; 的命令。这是一个字符串列表，第一个字符串是执行的程序，其余字符串是提供给程序的参数。对于网络，串行或管道连接，该值为 &lt;code&gt;nil&lt;/code&gt; ，表示进程正在运行或为 &lt;code&gt;t&lt;/code&gt; （进程已停止）。</target>
        </trans-unit>
        <trans-unit id="e361e6786be2f1382c44b532a802b6d0460743b0" translate="yes" xml:space="preserve">
          <source>This function returns the contents of extra slot &lt;var&gt;n&lt;/var&gt; (zero based) of &lt;var&gt;char-table&lt;/var&gt;. The number of extra slots in a char-table is determined by its subtype.</source>
          <target state="translated">此函数返回 &lt;var&gt;char-table&lt;/var&gt; 的额外插槽 &lt;var&gt;n&lt;/var&gt; （从零开始）的内容。字符表中额外插槽的数量由其子类型决定。</target>
        </trans-unit>
        <trans-unit id="51b4cd04217b6ceb23d0c15fa9c08934e9444d53" translate="yes" xml:space="preserve">
          <source>This function returns the contents of the entire accessible portion of the current buffer, as a string.</source>
          <target state="translated">该函数以字符串的形式返回当前缓冲区的全部可访问部分的内容。</target>
        </trans-unit>
        <trans-unit id="a7ca20c47ee46a9be56691ccb80bd8d9bcfac932" translate="yes" xml:space="preserve">
          <source>This function returns the contents of the field specified by &lt;var&gt;pos&lt;/var&gt;, as a string, discarding text properties.</source>
          <target state="translated">此函数以字符串形式返回 &lt;var&gt;pos&lt;/var&gt; 指定的字段的内容，并丢弃文本属性。</target>
        </trans-unit>
        <trans-unit id="08d1f22afa5d4658cd97fa3595d61e62cc5d2a19" translate="yes" xml:space="preserve">
          <source>This function returns the contents of the field specified by &lt;var&gt;pos&lt;/var&gt;, as a string.</source>
          <target state="translated">此函数以字符串形式返回 &lt;var&gt;pos&lt;/var&gt; 指定的字段的内容。</target>
        </trans-unit>
        <trans-unit id="4d190583371f14a9a5b5b27ed2fcb3f925699b5b" translate="yes" xml:space="preserve">
          <source>This function returns the contents of the register &lt;var&gt;reg&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt; if it has no contents.</source>
          <target state="translated">此函数返回寄存器 &lt;var&gt;reg&lt;/var&gt; 的内容，如果没有内容，则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="036016283bc9e72b9d0ebf9a817f1f314e1fa778" translate="yes" xml:space="preserve">
          <source>This function returns the current 1-minute, 5-minute, and 15-minute system load averages, in a list. The load average indicates the number of processes trying to run on the system.</source>
          <target state="translated">该函数以列表形式返回当前1分钟、5分钟和15分钟的系统负载平均值。负载平均值表示系统中试图运行的进程数。</target>
        </trans-unit>
        <trans-unit id="e13cc27f66cc2eae68142d6cf32117780e8cee96" translate="yes" xml:space="preserve">
          <source>This function returns the current buffer&amp;rsquo;s case table.</source>
          <target state="translated">此函数返回当前缓冲区的案例表。</target>
        </trans-unit>
        <trans-unit id="5dbd62bb295b31420250d992087a051f16a66d2d" translate="yes" xml:space="preserve">
          <source>This function returns the current buffer&amp;rsquo;s category table.</source>
          <target state="translated">此函数返回当前缓冲区的类别表。</target>
        </trans-unit>
        <trans-unit id="3daf85c5d4467c6b3e4dec9953cfc5cc9e809ed4" translate="yes" xml:space="preserve">
          <source>This function returns the current buffer&amp;rsquo;s local keymap, or &lt;code&gt;nil&lt;/code&gt; if it has none. In the following example, the keymap for the</source>
          <target state="translated">此函数返回当前缓冲区的本地键映射，如果没有，则返回 &lt;code&gt;nil&lt;/code&gt; 。在以下示例中，</target>
        </trans-unit>
        <trans-unit id="e152d463b3ee5bcd346e8191450c99e2326e6317" translate="yes" xml:space="preserve">
          <source>This function returns the current buffer&amp;rsquo;s mark position as an integer, or &lt;code&gt;nil&lt;/code&gt; if no mark has ever been set in this buffer.</source>
          <target state="translated">此函数以整数形式返回当前缓冲区的标记位置，如果此缓冲区中未设置任何标记，则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="071b5c745e1b4cbebd18da0d5cc071bdb2d3d763" translate="yes" xml:space="preserve">
          <source>This function returns the current buffer&amp;rsquo;s recorded last file modification time, as a Lisp timestamp (see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;).</source>
          <target state="translated">此函数返回当前缓冲区记录的最后文件修改时间，以Lisp时间戳记（请参见&lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="34fa25aa31f0c7a8c65b92b947c1fd977d054d5e" translate="yes" xml:space="preserve">
          <source>This function returns the current buffer.</source>
          <target state="translated">该函数返回当前的缓冲区。</target>
        </trans-unit>
        <trans-unit id="6de0c8fe70e6dcce9175a638e7a9de3df3739a69" translate="yes" xml:space="preserve">
          <source>This function returns the current depth of activations of the minibuffer, a nonnegative integer. If no minibuffers are active, it returns zero.</source>
          <target state="translated">该函数返回当前迷你缓冲区的激活深度,是一个非负整数。如果没有激活迷你缓冲区,则返回0。</target>
        </trans-unit>
        <trans-unit id="7370f39d58467bf8cdff8f4d2ab4f4001955c955" translate="yes" xml:space="preserve">
          <source>This function returns the current depth of recursive edits. When no recursive edit is active, it returns 0.</source>
          <target state="translated">该函数返回当前递归编辑的深度。当没有递归编辑活动时,返回0。</target>
        </trans-unit>
        <trans-unit id="a334674a89fb41b9fcd6b53a64d5ad922baccc89" translate="yes" xml:space="preserve">
          <source>This function returns the current display-width of the minibuffer prompt, if a minibuffer is current. Otherwise, it returns zero.</source>
          <target state="translated">如果当前有minibuffer,则该函数返回minibuffer提示的当前显示宽度。否则,返回零。</target>
        </trans-unit>
        <trans-unit id="209b485644b04066203a24ff4577cfb5245a869b" translate="yes" xml:space="preserve">
          <source>This function returns the current gap position in the current buffer.</source>
          <target state="translated">该函数返回当前缓冲区的间隙位置。</target>
        </trans-unit>
        <trans-unit id="3ff30ac7c69083cf1d2964b3d394667666d3c4cc" translate="yes" xml:space="preserve">
          <source>This function returns the current gap size of the current buffer.</source>
          <target state="translated">该函数返回当前缓冲区的间隙大小。</target>
        </trans-unit>
        <trans-unit id="833c2fcc632bff2bad7660b9f568c4ff6a32100e" translate="yes" xml:space="preserve">
          <source>This function returns the current global keymap. This is the same as the value of &lt;code&gt;global-map&lt;/code&gt; unless you change one or the other. The return value is a reference, not a copy; if you use &lt;code&gt;define-key&lt;/code&gt; or other functions on it you will alter global bindings.</source>
          <target state="translated">此函数返回当前的全局键盘映射。除非您更改一个或另一个，否则它与 &lt;code&gt;global-map&lt;/code&gt; 的值相同。返回值是参考，而不是副本；如果在其上使用 &lt;code&gt;define-key&lt;/code&gt; 或其他功能，则将更改全局绑定。</target>
        </trans-unit>
        <trans-unit id="26c70a70ba76e43557db185bd2ad9d5818d3cc64" translate="yes" xml:space="preserve">
          <source>This function returns the current mode for reading keyboard input. It returns a list, corresponding to the arguments of &lt;code&gt;set-input-mode&lt;/code&gt;, of the form &lt;code&gt;(&lt;var&gt;interrupt&lt;/var&gt; &lt;var&gt;flow&lt;/var&gt; &lt;var&gt;meta&lt;/var&gt; &lt;var&gt;quit&lt;/var&gt;)&lt;/code&gt; in which:</source>
          <target state="translated">此功能返回当前模式以读取键盘输入。它返回一个列表，对应于参数 &lt;code&gt;set-input-mode&lt;/code&gt; 的形式的， &lt;code&gt;(&lt;var&gt;interrupt&lt;/var&gt; &lt;var&gt;flow&lt;/var&gt; &lt;var&gt;meta&lt;/var&gt; &lt;var&gt;quit&lt;/var&gt;)&lt;/code&gt; ，其中：</target>
        </trans-unit>
        <trans-unit id="e1344ac7bde80ba58c001475e91eab9d2db82002" translate="yes" xml:space="preserve">
          <source>This function returns the current position of point in &lt;var&gt;window&lt;/var&gt;. For a nonselected window, this is the value point would have (in that window&amp;rsquo;s buffer) if that window were selected. The default for &lt;var&gt;window&lt;/var&gt; is the selected window.</source>
          <target state="translated">此函数返回point在 &lt;var&gt;window&lt;/var&gt; 中的当前位置。对于未选择的窗口，这是（如果在该窗口的缓冲区中）选择了该值点。 &lt;var&gt;window&lt;/var&gt; 的默认值为选定的窗口。</target>
        </trans-unit>
        <trans-unit id="751f513a99f55339dad26fb989328ccf79258934" translate="yes" xml:space="preserve">
          <source>This function returns the current position of the end of the minibuffer prompt, if a minibuffer is current. Otherwise, it returns the minimum valid buffer position.</source>
          <target state="translated">如果当前有迷你缓冲区,该函数返回迷你缓冲区提示的当前位置。否则,返回最小有效缓冲区位置。</target>
        </trans-unit>
        <trans-unit id="992ba8735ecc11b86b373afefd4569d02d036e4f" translate="yes" xml:space="preserve">
          <source>This function returns the current setting of &lt;var&gt;xwidget&lt;/var&gt;s query-on-exit flag, either &lt;code&gt;t&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此函数返回 &lt;var&gt;xwidget&lt;/var&gt; 的退出查询查询标志的当前设置，即 &lt;code&gt;t&lt;/code&gt; 或 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1605343bd112024f01e36fdd2b7a0f35af5c105a" translate="yes" xml:space="preserve">
          <source>This function returns the current syntax table, which is the table for the current buffer.</source>
          <target state="translated">该函数返回当前的语法表,即当前缓冲区的表。</target>
        </trans-unit>
        <trans-unit id="e842e0bd67d2217ef8c641978cbb8a3025a7d741" translate="yes" xml:space="preserve">
          <source>This function returns the current time and date as a human-readable string. The format does not vary for the initial part of the string, which contains the day of week, month, day of month, and time of day in that order: the number of characters used for these fields is always the same, although (unless you require English weekday or month abbreviations regardless of locale) it is typically more convenient to use &lt;code&gt;format-time-string&lt;/code&gt; than to extract fields from the output of &lt;code&gt;current-time-string&lt;/code&gt;, as the year might not have exactly four digits, and additional information may some day be added at the end.</source>
          <target state="translated">此函数以人类可读的字符串形式返回当前时间和日期。字符串的开头部分的格式没有变化，该字符串的开头顺序是星期几，月几，月几日和一天中的时间：尽管这些字段的字符数始终相同，但是（除非您需要英语工作日或月份的缩写，而不论语言环境如何）通常，使用 &lt;code&gt;format-time-string&lt;/code&gt; 比从 &lt;code&gt;current-time-string&lt;/code&gt; 的输出中提取字段更方便，因为年份可能不完全是四位数，并且还包含其他信息可能会在最后一天添加。</target>
        </trans-unit>
        <trans-unit id="11d21eb47763f40dc08c6ce5486695add274fc05" translate="yes" xml:space="preserve">
          <source>This function returns the current time as a Lisp timestamp. Although the timestamp takes the form &lt;code&gt;(&lt;var&gt;high&lt;/var&gt; &lt;var&gt;low&lt;/var&gt;
&lt;var&gt;micro&lt;/var&gt; &lt;var&gt;pico&lt;/var&gt;)&lt;/code&gt; in the current Emacs release, this is planned to change in a future Emacs version. You can use the &lt;code&gt;time-convert&lt;/code&gt; function to convert a timestamp to some other form. See &lt;a href=&quot;time-conversion#Time-Conversion&quot;&gt;Time Conversion&lt;/a&gt;.</source>
          <target state="translated">此函数以Lisp时间戳记返回当前时间。尽管当前Emacs发行版中的时间戳为 &lt;code&gt;(&lt;var&gt;high&lt;/var&gt; &lt;var&gt;low&lt;/var&gt; &lt;var&gt;micro&lt;/var&gt; &lt;var&gt;pico&lt;/var&gt;)&lt;/code&gt; 形式，但计划在将来的Emacs版本中对此进行更改。您可以使用 &lt;code&gt;time-convert&lt;/code&gt; 功能将时间戳转换为其他形式。请参阅&lt;a href=&quot;time-conversion#Time-Conversion&quot;&gt;时间转换&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7ca5ec02b954d66722e99a53f808d75186728b45" translate="yes" xml:space="preserve">
          <source>This function returns the current time as a floating-point number of seconds since the epoch. The optional argument &lt;var&gt;time&lt;/var&gt;, if given, specifies a time to convert instead of the current time.</source>
          <target state="translated">该函数返回当前时间，以自该纪元以来的秒数为浮点数。如果提供了可选参数 &lt;var&gt;time&lt;/var&gt; ，则它指定要转换的时间而不是当前时间。</target>
        </trans-unit>
        <trans-unit id="3cdfbc19f8cf7af647e35d7ae671e98f2d3cf48a" translate="yes" xml:space="preserve">
          <source>This function returns the current vertical scroll position of &lt;var&gt;window&lt;/var&gt;. The default for &lt;var&gt;window&lt;/var&gt; is the selected window. If &lt;var&gt;pixels-p&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the return value is measured in pixels, rather than in units of the normal line height.</source>
          <target state="translated">此函数返回 &lt;var&gt;window&lt;/var&gt; 的当前垂直滚动位置。 &lt;var&gt;window&lt;/var&gt; 的默认值为选定的窗口。如果 &lt;var&gt;pixels-p&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则返回值以像素为单位，而不是以法线高度为单位。</target>
        </trans-unit>
        <trans-unit id="be5e68c64217e84f1b2c0c7fe28c08bca9ac2808" translate="yes" xml:space="preserve">
          <source>This function returns the default file permissions, as an integer.</source>
          <target state="translated">该函数以整数形式返回默认的文件权限。</target>
        </trans-unit>
        <trans-unit id="97e11024b259a242d14c35f6dd960baf950af365" translate="yes" xml:space="preserve">
          <source>This function returns the definition of &lt;var&gt;key&lt;/var&gt; in &lt;var&gt;keymap&lt;/var&gt;. All the other functions described in this chapter that look up keys use &lt;code&gt;lookup-key&lt;/code&gt;. Here are examples:</source>
          <target state="translated">该函数返回的定义 &lt;var&gt;key&lt;/var&gt; 的 &lt;var&gt;keymap&lt;/var&gt; 。本章介绍的所有其他 &lt;code&gt;lookup-key&lt;/code&gt; 键功能都使用lookup-key。以下是示例：</target>
        </trans-unit>
        <trans-unit id="2f739cdbbd570ba0edc9915bf8af43d87ca4fa1a" translate="yes" xml:space="preserve">
          <source>This function returns the description string of property &lt;var&gt;prop&lt;/var&gt;&amp;rsquo;s &lt;var&gt;value&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;value&lt;/var&gt; has no description.</source>
          <target state="translated">此函数返回属性 &lt;var&gt;prop&lt;/var&gt; 的 &lt;var&gt;value&lt;/var&gt; 的描述字符串，如果 &lt;var&gt;value&lt;/var&gt; 没有描述，则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4ee0b0fd37c8632a51aeb77ca02b41916b83393c" translate="yes" xml:space="preserve">
          <source>This function returns the desired size of &lt;var&gt;xwidget&lt;/var&gt; as a list of the form &lt;code&gt;(&lt;var&gt;width&lt;/var&gt; &lt;var&gt;height&lt;/var&gt;)&lt;/code&gt;. The dimensions are in pixels.</source>
          <target state="translated">此函数以表格形式 &lt;code&gt;(&lt;var&gt;width&lt;/var&gt; &lt;var&gt;height&lt;/var&gt;)&lt;/code&gt; &lt;var&gt;width&lt;/var&gt; &lt;var&gt;height&lt;/var&gt; ）返回所需的 &lt;var&gt;xwidget&lt;/var&gt; 大小。尺寸以像素为单位。</target>
        </trans-unit>
        <trans-unit id="ec709832d7f29efd2a39da7d7b7850b9b4e4ba43" translate="yes" xml:space="preserve">
          <source>This function returns the directory part of &lt;var&gt;filename&lt;/var&gt;, as a directory name (see &lt;a href=&quot;directory-names#Directory-Names&quot;&gt;Directory Names&lt;/a&gt;), or &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;filename&lt;/var&gt; does not include a directory part.</source>
          <target state="translated">此函数以 &lt;var&gt;filename&lt;/var&gt; 返回filename的目录部分（请参阅&lt;a href=&quot;directory-names#Directory-Names&quot;&gt;Directory Names&lt;/a&gt;），如果 &lt;var&gt;filename&lt;/var&gt; 不包括目录部分，则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="59860987f598c545f8b9bcfff6b6cb72ee9cf742" translate="yes" xml:space="preserve">
          <source>This function returns the display-start position of window &lt;var&gt;window&lt;/var&gt;. If &lt;var&gt;window&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the selected window is used.</source>
          <target state="translated">此函数返回window &lt;var&gt;window&lt;/var&gt; 的显示开始位置。如果 &lt;var&gt;window&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则使用选定的窗口。</target>
        </trans-unit>
        <trans-unit id="ab178d94e8f4fb5e6083c60bc48ddb8e3dd39f3f" translate="yes" xml:space="preserve">
          <source>This function returns the documentation string of &lt;var&gt;face&lt;/var&gt; as a face.</source>
          <target state="translated">此函数返回 &lt;var&gt;face&lt;/var&gt; 的文档字符串作为face。</target>
        </trans-unit>
        <trans-unit id="2c9338686cd667d4140b47ca28366cb415af65d5" translate="yes" xml:space="preserve">
          <source>This function returns the documentation string of &lt;var&gt;function&lt;/var&gt;. It handles macros, named keyboard macros, and special forms, as well as ordinary functions.</source>
          <target state="translated">该函数返回的文档字符串 &lt;var&gt;function&lt;/var&gt; 。它处理宏，命名的键盘宏，特殊形式以及普通功能。</target>
        </trans-unit>
        <trans-unit id="9a5d7c2e9adbaf842be004af9fde2fca9aab1694" translate="yes" xml:space="preserve">
          <source>This function returns the documentation string of category &lt;var&gt;category&lt;/var&gt; in category table &lt;var&gt;table&lt;/var&gt;.</source>
          <target state="translated">此函数返回类别表 &lt;var&gt;table&lt;/var&gt; 中类别 &lt;var&gt;category&lt;/var&gt; 的文档字符串。</target>
        </trans-unit>
        <trans-unit id="327a3b4e00f0bceaa751aba50d642a7d9761e4fb" translate="yes" xml:space="preserve">
          <source>This function returns the documentation string of face &lt;var&gt;face&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt; if none was specified for it.</source>
          <target state="translated">该函数返回脸上的文档字符串 &lt;var&gt;face&lt;/var&gt; ，或者 &lt;code&gt;nil&lt;/code&gt; 如果它没有指定。</target>
        </trans-unit>
        <trans-unit id="44ca6c7c32b626eecea9eac10588223d2fbbdf0e" translate="yes" xml:space="preserve">
          <source>This function returns the documentation string recorded in &lt;var&gt;symbol&lt;/var&gt;&amp;rsquo;s property list under property &lt;var&gt;property&lt;/var&gt;. It is most often used to look up the documentation strings of variables, for which &lt;var&gt;property&lt;/var&gt; is &lt;code&gt;variable-documentation&lt;/code&gt;. However, it can also be used to look up other kinds of documentation, such as for customization groups (but for function documentation, use the &lt;code&gt;documentation&lt;/code&gt; function, below).</source>
          <target state="translated">此函数返回记录在 &lt;var&gt;symbol&lt;/var&gt; 的属性列表中property &lt;var&gt;property&lt;/var&gt; 下的文档字符串。它最常用于查找变量的文档字符串，其 &lt;var&gt;property&lt;/var&gt; 为 &lt;code&gt;variable-documentation&lt;/code&gt; 。但是，它也可以用于查找其他类型的文档，例如用于自定义组（但对于功能文档，请使用下面的 &lt;code&gt;documentation&lt;/code&gt; 功能）。</target>
        </trans-unit>
        <trans-unit id="e0df81ba5e6bc53780f0fe1d51243f759d4b6f88" translate="yes" xml:space="preserve">
          <source>This function returns the duration of the Emacs initialization (see &lt;a href=&quot;startup-summary#Startup-Summary&quot;&gt;Startup Summary&lt;/a&gt;) in seconds, as a string. When called interactively, it prints the duration in the echo area.</source>
          <target state="translated">该函数以字符串形式返回Emacs初始化的持续时间（请参阅&amp;ldquo;&lt;a href=&quot;startup-summary#Startup-Summary&quot;&gt;启动摘要&amp;rdquo;&lt;/a&gt;），以秒为单位。当以交互方式调用时，它将在回显区域中打印持续时间。</target>
        </trans-unit>
        <trans-unit id="38b3cddbbabb464b6eb77ec3e81f45128adbfa99" translate="yes" xml:space="preserve">
          <source>This function returns the edges of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s body (see &lt;a href=&quot;window-sizes#Window-Sizes&quot;&gt;Window Sizes&lt;/a&gt;). Calling &lt;code&gt;(window-body-edges window)&lt;/code&gt; is equivalent to calling &lt;code&gt;(window-edges window t)&lt;/code&gt;, see above.</source>
          <target state="translated">此函数返回 &lt;var&gt;window&lt;/var&gt; 主体的边缘（请参见&amp;ldquo;&lt;a href=&quot;window-sizes#Window-Sizes&quot;&gt;窗口大小&amp;rdquo;&lt;/a&gt;）。调用 &lt;code&gt;(window-body-edges window)&lt;/code&gt; 等同于调用 &lt;code&gt;(window-edges window t)&lt;/code&gt; ，请参见上文。</target>
        </trans-unit>
        <trans-unit id="58070afd7694244fe81996f6471589588178736e" translate="yes" xml:space="preserve">
          <source>This function returns the editable contents of the minibuffer (that is, everything except the prompt) as a string, if a minibuffer is current. Otherwise, it returns the entire contents of the current buffer.</source>
          <target state="translated">如果当前有minibuffer,这个函数以字符串的形式返回minibuffer的可编辑内容(即除了提示音之外的所有内容)。否则,返回当前缓冲区的全部内容。</target>
        </trans-unit>
        <trans-unit id="e638fe6a028a6bff342276840c7e3ff3d05bf0c0" translate="yes" xml:space="preserve">
          <source>This function returns the effective</source>
          <target state="translated">该函数返回有效的</target>
        </trans-unit>
        <trans-unit id="cd81ea108b713689f09872a877b08ad9b1d0ac6b" translate="yes" xml:space="preserve">
          <source>This function returns the element of &lt;var&gt;sequence&lt;/var&gt; at the specified &lt;var&gt;index&lt;/var&gt;, which is an integer whose valid value range is zero to one less than the length of &lt;var&gt;sequence&lt;/var&gt;. For out-of-range values on built-in sequence types, &lt;code&gt;seq-elt&lt;/code&gt; behaves like &lt;code&gt;elt&lt;/code&gt;. For the details, see &lt;a href=&quot;#Definition-of-elt&quot;&gt;Definition of elt&lt;/a&gt;.</source>
          <target state="translated">该函数返回指定 &lt;var&gt;index&lt;/var&gt; 处的 &lt;var&gt;sequence&lt;/var&gt; 元素，该元素是一个整数，其有效值范围比 &lt;var&gt;sequence&lt;/var&gt; 的长度小零至一。对于内置序列类型上的超出范围的值， &lt;code&gt;seq-elt&lt;/code&gt; 的行为类似于 &lt;code&gt;elt&lt;/code&gt; 。有关详细信息，请参见&lt;a href=&quot;#Definition-of-elt&quot;&gt;elt的定义&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2fac05d0665f3e7289256897ffadb2e8c525f3b6" translate="yes" xml:space="preserve">
          <source>This function returns the element of &lt;var&gt;sequence&lt;/var&gt; indexed by &lt;var&gt;index&lt;/var&gt;. Legitimate values of &lt;var&gt;index&lt;/var&gt; are integers ranging from 0 up to one less than the length of &lt;var&gt;sequence&lt;/var&gt;. If &lt;var&gt;sequence&lt;/var&gt; is a list, out-of-range values behave as for &lt;code&gt;nth&lt;/code&gt;. See &lt;a href=&quot;list-elements#Definition-of-nth&quot;&gt;Definition of nth&lt;/a&gt;. Otherwise, out-of-range values trigger an &lt;code&gt;args-out-of-range&lt;/code&gt; error.</source>
          <target state="translated">此函数返回由 &lt;var&gt;index&lt;/var&gt; 索引的 &lt;var&gt;sequence&lt;/var&gt; 元素。 &lt;var&gt;index&lt;/var&gt; 的合法值为整数，范围从0到小于 &lt;var&gt;sequence&lt;/var&gt; 长度的一。如果 &lt;var&gt;sequence&lt;/var&gt; 是一个列表，则超出范围的值的行为与 &lt;code&gt;nth&lt;/code&gt; 相同。参见&lt;a href=&quot;list-elements#Definition-of-nth&quot;&gt;nth的定义&lt;/a&gt;。否则，超出范围的值将触发 &lt;code&gt;args-out-of-range&lt;/code&gt; 错误。</target>
        </trans-unit>
        <trans-unit id="28ce8efdc853d4287db41074739ff8355b51257a" translate="yes" xml:space="preserve">
          <source>This function returns the element of &lt;var&gt;vector&lt;/var&gt; at &lt;var&gt;index&lt;/var&gt;. The &lt;var&gt;index&lt;/var&gt; of the first vector element is zero. The function raises the &lt;code&gt;args-out-of-range&lt;/code&gt; error condition if the value of &lt;var&gt;index&lt;/var&gt; is invalid. To extract C data from the value the function returns, use the other extraction functions described here, as appropriate for the Lisp data type stored in that element of the vector.</source>
          <target state="translated">此函数返回 &lt;var&gt;index&lt;/var&gt; 处的 &lt;var&gt;vector&lt;/var&gt; 元素。第一个向量元素的 &lt;var&gt;index&lt;/var&gt; 为零。如果 &lt;var&gt;index&lt;/var&gt; 的值无效，该函数将引发 &lt;code&gt;args-out-of-range&lt;/code&gt; 错误条件。要从函数返回的值中提取C数据，请使用此处描述的其他提取函数，以适合于存储在向量元素中的Lisp数据类型。</target>
        </trans-unit>
        <trans-unit id="6022d2828c80147f6e11b916ee6104d854bd2464" translate="yes" xml:space="preserve">
          <source>This function returns the end of the field specified by &lt;var&gt;pos&lt;/var&gt;.</source>
          <target state="translated">此函数返回 &lt;var&gt;pos&lt;/var&gt; 指定的字段的结尾。</target>
        </trans-unit>
        <trans-unit id="7659b2084cd98566701b3862fef309771ca48c1a" translate="yes" xml:space="preserve">
          <source>This function returns the entire property list of the character at &lt;var&gt;position&lt;/var&gt; in the string or buffer &lt;var&gt;object&lt;/var&gt;. If &lt;var&gt;object&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it defaults to the current buffer.</source>
          <target state="translated">此函数返回字符串或缓冲区 &lt;var&gt;object&lt;/var&gt; 某个 &lt;var&gt;position&lt;/var&gt; 的字符的整个属性列表。如果 &lt;var&gt;object&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则默认为当前缓冲区。</target>
        </trans-unit>
        <trans-unit id="61e315374159d80512d1d1fa8018d6cb504dc1f0" translate="yes" xml:space="preserve">
          <source>This function returns the error message string for a given error descriptor. It is useful if you want to handle an error by printing the usual error message for that error. See &lt;a href=&quot;signaling-errors#Definition-of-signal&quot;&gt;Definition of signal&lt;/a&gt;.</source>
          <target state="translated">此函数返回给定错误描述符的错误消息字符串。如果您想通过为该错误打印通常的错误消息来处理错误，这将很有用。请参阅&lt;a href=&quot;signaling-errors#Definition-of-signal&quot;&gt;信号的定义&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6c2c91976a5994aa96bd2490bd1a12e016e17d5d" translate="yes" xml:space="preserve">
          <source>This function returns the exit status of &lt;var&gt;process&lt;/var&gt; or the signal number that killed it. (Use the result of &lt;code&gt;process-status&lt;/code&gt; to determine which of those it is.) If &lt;var&gt;process&lt;/var&gt; has not yet terminated, the value is 0. For network, serial, and pipe connections that are already closed, the value is either 0 or 256, depending on whether the connection was closed normally or abnormally.</source>
          <target state="translated">该函数返回 &lt;var&gt;process&lt;/var&gt; 的退出状态或杀死该进程的信号号。（使用 &lt;code&gt;process-status&lt;/code&gt; 的结果确定是哪个。）如果 &lt;var&gt;process&lt;/var&gt; 尚未终止，则值为0。对于已经关闭的网络，串行和管道连接，该值为0或256，取决于连接是正常关闭还是异常关闭。</target>
        </trans-unit>
        <trans-unit id="7a2e5cf18e7b6e92bd1e9a29600a7899256e05e0" translate="yes" xml:space="preserve">
          <source>This function returns the file name of the device used by &lt;var&gt;terminal&lt;/var&gt;. If &lt;var&gt;terminal&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected frame&amp;rsquo;s terminal. &lt;var&gt;terminal&lt;/var&gt; can also be a frame, meaning that frame&amp;rsquo;s terminal.</source>
          <target state="translated">此函数返回 &lt;var&gt;terminal&lt;/var&gt; 使用的设备的文件名。如果 &lt;var&gt;terminal&lt;/var&gt; 省略或为 &lt;code&gt;nil&lt;/code&gt; ，则默认为所选框架的端子。 &lt;var&gt;terminal&lt;/var&gt; 也可以是框架，表示框架的终端。</target>
        </trans-unit>
        <trans-unit id="ce753c3d111c8762d1ec95c52fd5c78e276e4613" translate="yes" xml:space="preserve">
          <source>This function returns the file name to use for auto-saving the current buffer. This is just the file name with hash marks (&amp;lsquo;</source>
          <target state="translated">此函数返回用于自动保存当前缓冲区的文件名。这只是带有井号的文件名（'</target>
        </trans-unit>
        <trans-unit id="92a57e3434293cf77f0c329bfa05076d69a74772" translate="yes" xml:space="preserve">
          <source>This function returns the filter function of &lt;var&gt;process&lt;/var&gt;.</source>
          <target state="translated">此函数返回 &lt;var&gt;process&lt;/var&gt; 的filter函数。</target>
        </trans-unit>
        <trans-unit id="304b5206fd666ead7f032e6ac3d96504496e950b" translate="yes" xml:space="preserve">
          <source>This function returns the finalizer of the &lt;code&gt;user-ptr&lt;/code&gt; object represented by &lt;var&gt;val&lt;/var&gt;, or &lt;code&gt;NULL&lt;/code&gt; if it doesn&amp;rsquo;t have a finalizer.</source>
          <target state="translated">该函数返回的终结 &lt;code&gt;user-ptr&lt;/code&gt; 对象表示由 &lt;var&gt;val&lt;/var&gt; ，或 &lt;code&gt;NULL&lt;/code&gt; ，如果它不具有一个终结。</target>
        </trans-unit>
        <trans-unit id="1b9f75e6bcd14cc29ffe2ff084be5d52b71ada59" translate="yes" xml:space="preserve">
          <source>This function returns the first &lt;var&gt;n&lt;/var&gt; (an integer) elements of &lt;var&gt;sequence&lt;/var&gt;. If &lt;var&gt;n&lt;/var&gt; is negative or zero, the result is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此函数返回 &lt;var&gt;sequence&lt;/var&gt; 的前 &lt;var&gt;n&lt;/var&gt; 个（整数）元素。如果 &lt;var&gt;n&lt;/var&gt; 为负或零，则结果为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="95622997e2b0f3b75d62c3dca83e2bc97f957b78" translate="yes" xml:space="preserve">
          <source>This function returns the first association for &lt;var&gt;key&lt;/var&gt; in &lt;var&gt;alist&lt;/var&gt;, comparing &lt;var&gt;key&lt;/var&gt; against the alist elements using &lt;var&gt;testfn&lt;/var&gt; if it is non-&lt;code&gt;nil&lt;/code&gt; and &lt;code&gt;equal&lt;/code&gt; otherwise (see &lt;a href=&quot;equality-predicates#Equality-Predicates&quot;&gt;Equality Predicates&lt;/a&gt;). It returns &lt;code&gt;nil&lt;/code&gt; if no association in &lt;var&gt;alist&lt;/var&gt; has a &lt;small&gt;CAR&lt;/small&gt; equal to &lt;var&gt;key&lt;/var&gt;. For example:</source>
          <target state="translated">该函数返回第一关联 &lt;var&gt;key&lt;/var&gt; 在 &lt;var&gt;alist&lt;/var&gt; ，比较 &lt;var&gt;key&lt;/var&gt; 使用针对ALIST元件 &lt;var&gt;testfn&lt;/var&gt; 如果它是不 &lt;code&gt;nil&lt;/code&gt; 和 &lt;code&gt;equal&lt;/code&gt; 否则（见&lt;a href=&quot;equality-predicates#Equality-Predicates&quot;&gt;等式谓词&lt;/a&gt;）。它返回 &lt;code&gt;nil&lt;/code&gt; 如果没有关联 &lt;var&gt;alist&lt;/var&gt; 有&lt;small&gt;CAR&lt;/small&gt;等于 &lt;var&gt;key&lt;/var&gt; 。例如：</target>
        </trans-unit>
        <trans-unit id="a59d32287b03585a74766375fd8a5ff0d403725f" translate="yes" xml:space="preserve">
          <source>This function returns the first association with value &lt;var&gt;value&lt;/var&gt; in &lt;var&gt;alist&lt;/var&gt;. It returns &lt;code&gt;nil&lt;/code&gt; if no association in &lt;var&gt;alist&lt;/var&gt; has a &lt;small&gt;CDR&lt;/small&gt;&lt;code&gt;eq&lt;/code&gt; to &lt;var&gt;value&lt;/var&gt;.</source>
          <target state="translated">该函数返回值为第一关联 &lt;var&gt;value&lt;/var&gt; 在 &lt;var&gt;alist&lt;/var&gt; 。它返回 &lt;code&gt;nil&lt;/code&gt; 如果没有关联 &lt;var&gt;alist&lt;/var&gt; 有&lt;small&gt;CDR &lt;/small&gt; &lt;code&gt;eq&lt;/code&gt; 来 &lt;var&gt;value&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="dfded93f515ac53b4d2da06b96ed2c8afb045470" translate="yes" xml:space="preserve">
          <source>This function returns the first association with value &lt;var&gt;value&lt;/var&gt; in &lt;var&gt;alist&lt;/var&gt;. It returns &lt;code&gt;nil&lt;/code&gt; if no association in &lt;var&gt;alist&lt;/var&gt; has a &lt;small&gt;CDR&lt;/small&gt;&lt;code&gt;equal&lt;/code&gt; to &lt;var&gt;value&lt;/var&gt;.</source>
          <target state="translated">该函数返回值为第一关联 &lt;var&gt;value&lt;/var&gt; 在 &lt;var&gt;alist&lt;/var&gt; 。它返回 &lt;code&gt;nil&lt;/code&gt; 如果没有关联 &lt;var&gt;alist&lt;/var&gt; 有&lt;small&gt;CDR&lt;/small&gt; &lt;code&gt;equal&lt;/code&gt; 给 &lt;var&gt;value&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="f8a4a19cfbcbd3ccf25a4968ef106de94c924b21" translate="yes" xml:space="preserve">
          <source>This function returns the first buffer in the buffer list other than &lt;var&gt;buffer&lt;/var&gt;. Usually, this is the buffer appearing in the most recently selected window (in frame &lt;var&gt;frame&lt;/var&gt; or else the selected frame, see &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;), aside from &lt;var&gt;buffer&lt;/var&gt;. Buffers whose names start with a space are not considered at all.</source>
          <target state="translated">此函数返回缓冲区列表中除 &lt;var&gt;buffer&lt;/var&gt; 之外的第一个缓冲区。通常，这是缓冲区出现在最近选定的窗口（帧 &lt;var&gt;frame&lt;/var&gt; 或者所选择的框架，见&lt;a href=&quot;input-focus#Input-Focus&quot;&gt;输入焦点&lt;/a&gt;），除了 &lt;var&gt;buffer&lt;/var&gt; 。完全不考虑名称以空格开头的缓冲区。</target>
        </trans-unit>
        <trans-unit id="e6437afb7eb6fe5caad1bf29e3b3333d83166b00" translate="yes" xml:space="preserve">
          <source>This function returns the first character in &lt;var&gt;string&lt;/var&gt;. This mostly identical to &lt;code&gt;(aref string 0)&lt;/code&gt;, except that it returns 0 if the string is empty. (The value is also 0 when the first character of &lt;var&gt;string&lt;/var&gt; is the null character,</source>
          <target state="translated">此函数返回 &lt;var&gt;string&lt;/var&gt; 中的第一个字符。这与 &lt;code&gt;(aref string 0)&lt;/code&gt; 基本相同，不同之处在于，如果字符串为空，则返回0。（当 &lt;var&gt;string&lt;/var&gt; 的第一个字符为空字符时，该值也为0 ，</target>
        </trans-unit>
        <trans-unit id="18eface75d6bdfc7def1421e1d4b2ed4de262259" translate="yes" xml:space="preserve">
          <source>This function returns the first child window of the internal window &lt;var&gt;window&lt;/var&gt;&amp;mdash;the topmost child window for a vertical combination, or the leftmost child window for a horizontal combination. If &lt;var&gt;window&lt;/var&gt; is a live window, the return value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">该函数返回内部窗口的第一子窗口 &lt;var&gt;window&lt;/var&gt; 用于垂直组合，或者用于水平组合最左边的子窗口-the最上面的子窗口。如果 &lt;var&gt;window&lt;/var&gt; 是活动窗口，则返回值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="026b4b1c05e3ea2e46392918a30c7f64e3c91618" translate="yes" xml:space="preserve">
          <source>This function returns the first element in &lt;var&gt;sequence&lt;/var&gt; for which &lt;var&gt;predicate&lt;/var&gt; returns non-&lt;code&gt;nil&lt;/code&gt;. If no element matches &lt;var&gt;predicate&lt;/var&gt;, the function returns &lt;var&gt;default&lt;/var&gt;.</source>
          <target state="translated">此函数按 &lt;var&gt;sequence&lt;/var&gt; 返回第一个元素， &lt;var&gt;predicate&lt;/var&gt; 为其返回 &lt;code&gt;nil&lt;/code&gt; 。如果没有元素与 &lt;var&gt;predicate&lt;/var&gt; 匹配，则该函数返回 &lt;var&gt;default&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="77752b29ea768cd78c230e1126f196d832964603" translate="yes" xml:space="preserve">
          <source>This function returns the first non-&lt;code&gt;nil&lt;/code&gt; value returned by applying &lt;var&gt;predicate&lt;/var&gt; to each element of &lt;var&gt;sequence&lt;/var&gt; in turn.</source>
          <target state="translated">该函数返回第一非 &lt;code&gt;nil&lt;/code&gt; 通过施加返回值 &lt;var&gt;predicate&lt;/var&gt; 到的每个元件 &lt;var&gt;sequence&lt;/var&gt; 反过来。</target>
        </trans-unit>
        <trans-unit id="ef766fd7b693c5f7eb0886924ccfa1095c4c58c5" translate="yes" xml:space="preserve">
          <source>This function returns the first window displaying &lt;var&gt;buffer-or-name&lt;/var&gt; in the cyclic ordering of windows, starting from the selected window (see &lt;a href=&quot;cyclic-window-ordering#Cyclic-Window-Ordering&quot;&gt;Cyclic Window Ordering&lt;/a&gt;). If no such window exists, the return value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此函数从所选窗口开始以窗口的循环顺序返回显示 &lt;var&gt;buffer-or-name&lt;/var&gt; 的第一个窗口（请参见&lt;a href=&quot;cyclic-window-ordering#Cyclic-Window-Ordering&quot;&gt;Cyclic Window Ordering&lt;/a&gt;）。如果不存在这样的窗口，则返回值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9822d9013b85df04770d47068cad1835aa1b7c55" translate="yes" xml:space="preserve">
          <source>This function returns the fractional vertical position of a scroll bar event within the scroll bar. The value is a cons cell &lt;code&gt;(&lt;var&gt;portion&lt;/var&gt; . &lt;var&gt;whole&lt;/var&gt;)&lt;/code&gt; containing two integers whose ratio is the fractional position.</source>
          <target state="translated">此函数返回滚动条事件在滚动条内的垂直小数部分。该值是一个cons单元 &lt;code&gt;(&lt;var&gt;portion&lt;/var&gt; . &lt;var&gt;whole&lt;/var&gt;)&lt;/code&gt; 包含两个整数，其比例是小数的位置。</target>
        </trans-unit>
        <trans-unit id="9b6774e07e613daf7ae531da6c39e0dd19c54972" translate="yes" xml:space="preserve">
          <source>This function returns the frame for which the window configuration &lt;var&gt;config&lt;/var&gt; was made.</source>
          <target state="translated">该函数返回该窗口配置的帧 &lt;var&gt;config&lt;/var&gt; 作出。</target>
        </trans-unit>
        <trans-unit id="4aa9bf6cd5060b888738dc1590782a333214f9e1" translate="yes" xml:space="preserve">
          <source>This function returns the frame that the window &lt;var&gt;window&lt;/var&gt; belongs to. If &lt;var&gt;window&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window.</source>
          <target state="translated">此函数返回窗口 &lt;var&gt;window&lt;/var&gt; 所属的框架。如果 &lt;var&gt;window&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则默认为所选窗口。</target>
        </trans-unit>
        <trans-unit id="502db217f16504924a36df22e5236ee8d77a9630" translate="yes" xml:space="preserve">
          <source>This function returns the fringe bitmaps of the display line containing position &lt;var&gt;pos&lt;/var&gt; in window &lt;var&gt;window&lt;/var&gt;. The return value has the form &lt;code&gt;(&lt;var&gt;left&lt;/var&gt; &lt;var&gt;right&lt;/var&gt; &lt;var&gt;ov&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;left&lt;/var&gt; is the symbol for the fringe bitmap in the left fringe (or &lt;code&gt;nil&lt;/code&gt; if no bitmap), &lt;var&gt;right&lt;/var&gt; is similar for the right fringe, and &lt;var&gt;ov&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; if there is an overlay arrow in the left fringe.</source>
          <target state="translated">此函数返回包含window &lt;var&gt;window&lt;/var&gt; 中位置 &lt;var&gt;pos&lt;/var&gt; 的显示行的边缘位图。返回值的格式为 &lt;code&gt;(&lt;var&gt;left&lt;/var&gt; &lt;var&gt;right&lt;/var&gt; &lt;var&gt;ov&lt;/var&gt;)&lt;/code&gt; &lt;var&gt;left&lt;/var&gt; &lt;var&gt;right&lt;/var&gt; &lt;var&gt;ov&lt;/var&gt; ），其中 &lt;var&gt;left&lt;/var&gt; 是左边缘的边缘位图的符号（如果没有位图，则为 &lt;code&gt;nil&lt;/code&gt; ）， &lt;var&gt;right&lt;/var&gt; 右边缘的相似，而 &lt;var&gt;ov&lt;/var&gt; 则为 &lt;code&gt;nil&lt;/code&gt; (如果有）左边缘的叠加箭头。</target>
        </trans-unit>
        <trans-unit id="dee697b8e3f2bffab7d0042854c1e83fa502cb04" translate="yes" xml:space="preserve">
          <source>This function returns the full name of the logged-in user&amp;mdash;or the value of the environment variable &lt;code&gt;NAME&lt;/code&gt;, if that is set.</source>
          <target state="translated">此函数返回已登录用户的全名，或者返回设置的环境变量 &lt;code&gt;NAME&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="bbb0e9577d85da84f269e2be661732223051c86d" translate="yes" xml:space="preserve">
          <source>This function returns the group name that corresponds to the numeric group ID &lt;var&gt;gid&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt; if there is no such group.</source>
          <target state="translated">此函数返回与数字组ID &lt;var&gt;gid&lt;/var&gt; 对应的组名；如果没有这样的组，则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="326bb1244028405a702b38cacee3e8a0e4f08e13" translate="yes" xml:space="preserve">
          <source>This function returns the handler function for file name &lt;var&gt;file&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt; if there is none. The argument &lt;var&gt;operation&lt;/var&gt; should be the operation to be performed on the file&amp;mdash;the value you will pass to the handler as its first argument when you call it. If &lt;var&gt;operation&lt;/var&gt; equals &lt;code&gt;inhibit-file-name-operation&lt;/code&gt;, or if it is not found in the &lt;code&gt;operations&lt;/code&gt; property of the handler, this function returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此函数返回文件名 &lt;var&gt;file&lt;/var&gt; 的处理函数，如果没有，则返回 &lt;code&gt;nil&lt;/code&gt; 。参数 &lt;var&gt;operation&lt;/var&gt; 应该是要在文件上执行的操作-调用该值时，它将作为第一个参数传递给处理程序。如果 &lt;var&gt;operation&lt;/var&gt; 等于 &lt;code&gt;inhibit-file-name-operation&lt;/code&gt; ，或者在处理程序的 &lt;code&gt;operations&lt;/code&gt; 属性中找不到该函数，则此函数返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c56c12bd3fe351b13525a506fb841a6a700d453f" translate="yes" xml:space="preserve">
          <source>This function returns the height in pixels for the font used by &lt;var&gt;face&lt;/var&gt; in &lt;var&gt;window&lt;/var&gt;. The specified &lt;var&gt;window&lt;/var&gt; must be a live window. If &lt;code&gt;nil&lt;/code&gt; or omitted, &lt;var&gt;window&lt;/var&gt; defaults to the selected window, and &lt;var&gt;face&lt;/var&gt; defaults to the default face in &lt;var&gt;window&lt;/var&gt;.</source>
          <target state="translated">该函数返回在对于所使用的字体的像素的高度 &lt;var&gt;face&lt;/var&gt; 中 &lt;var&gt;window&lt;/var&gt; 。指定的 &lt;var&gt;window&lt;/var&gt; 必须是活动窗口。如果为 &lt;code&gt;nil&lt;/code&gt; 或省略，则 &lt;var&gt;window&lt;/var&gt; 默认为所选窗口， &lt;var&gt;face&lt;/var&gt; 默认为 &lt;var&gt;window&lt;/var&gt; 中的默认face 。</target>
        </trans-unit>
        <trans-unit id="fc6b0c073501c98c6d5fe4ec2eeeeaf665997b2a" translate="yes" xml:space="preserve">
          <source>This function returns the height in pixels of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s header line. &lt;var&gt;window&lt;/var&gt; must be a live window and defaults to the selected one. If &lt;var&gt;window&lt;/var&gt; has no header line, the return value is zero.</source>
          <target state="translated">此函数返回 &lt;var&gt;window&lt;/var&gt; 标题行的高度（以像素为单位）。 &lt;var&gt;window&lt;/var&gt; 必须是活动窗口，并且默认为选定的窗口。如果 &lt;var&gt;window&lt;/var&gt; 没有标题行，则返回值为零。</target>
        </trans-unit>
        <trans-unit id="32c6abad6c57ebf8a592999bf4da82c667899a5d" translate="yes" xml:space="preserve">
          <source>This function returns the height in pixels of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s header line. &lt;var&gt;window&lt;/var&gt; must be a live window, and defaults to the selected window.</source>
          <target state="translated">此函数返回 &lt;var&gt;window&lt;/var&gt; 标题行的高度（以像素为单位）。 &lt;var&gt;window&lt;/var&gt; 必须是活动窗口，并且默认为所选窗口。</target>
        </trans-unit>
        <trans-unit id="55eee8aaef261e44bcd69b3c2be028f0a5db0df9" translate="yes" xml:space="preserve">
          <source>This function returns the height in pixels of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s horizontal scrollbar.</source>
          <target state="translated">此函数返回 &lt;var&gt;window&lt;/var&gt; 水平滚动条的高度（以像素为单位）。</target>
        </trans-unit>
        <trans-unit id="de02b931fd8dffba626e0585372fc684bbe14f35" translate="yes" xml:space="preserve">
          <source>This function returns the height in pixels of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s mode line. &lt;var&gt;window&lt;/var&gt; must be a live window and defaults to the selected one. If &lt;var&gt;window&lt;/var&gt; has no mode line, the return value is zero.</source>
          <target state="translated">此函数返回 &lt;var&gt;window&lt;/var&gt; 模式行的高度（以像素为单位）。 &lt;var&gt;window&lt;/var&gt; 必须是活动窗口，并且默认为选定的窗口。如果 &lt;var&gt;window&lt;/var&gt; 没有模式行，则返回值为零。</target>
        </trans-unit>
        <trans-unit id="339ed686daf816790f46d33732087adc7f55947a" translate="yes" xml:space="preserve">
          <source>This function returns the height in pixels of the font used by the current buffer&amp;rsquo;s default face, as that face is defined for the selected frame.</source>
          <target state="translated">此函数返回当前缓冲区默认面使用的字体的高度（以像素为单位），因为该面是为选定帧定义的。</target>
        </trans-unit>
        <trans-unit id="03427944aa9b71914e2df5189a7f44a902a134c0" translate="yes" xml:space="preserve">
          <source>This function returns the height in pixels of the line at point in the selected window. The value includes the line spacing of the line (see &lt;a href=&quot;line-height#Line-Height&quot;&gt;Line Height&lt;/a&gt;).</source>
          <target state="translated">此函数返回所选窗口中点的线条高度（以像素为单位）。该值包括该行的行距（请参见&lt;a href=&quot;line-height#Line-Height&quot;&gt;Line Height&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="6d49702c8ef25f8a400263ce586fa885913e23bf" translate="yes" xml:space="preserve">
          <source>This function returns the height of horizontal scroll bars of &lt;var&gt;frame&lt;/var&gt; in pixels.</source>
          <target state="translated">此函数返回 &lt;var&gt;frame&lt;/var&gt; 的水平滚动条的高度（以像素为单位）。</target>
        </trans-unit>
        <trans-unit id="9167175929772c06cd868b2a8d4249ed8aaba5dd" translate="yes" xml:space="preserve">
          <source>This function returns the height of text line &lt;var&gt;line&lt;/var&gt; in &lt;var&gt;window&lt;/var&gt;. If &lt;var&gt;line&lt;/var&gt; is one of &lt;code&gt;header-line&lt;/code&gt; or &lt;code&gt;mode-line&lt;/code&gt;, &lt;code&gt;window-line-height&lt;/code&gt; returns information about the corresponding line of the window. Otherwise, &lt;var&gt;line&lt;/var&gt; is a text line number starting from 0. A negative number counts from the end of the window. The default for &lt;var&gt;line&lt;/var&gt; is the current line in &lt;var&gt;window&lt;/var&gt;; the default for &lt;var&gt;window&lt;/var&gt; is the selected window.</source>
          <target state="translated">该函数返回文本行的高度 &lt;var&gt;line&lt;/var&gt; 的 &lt;var&gt;window&lt;/var&gt; 。如果 &lt;var&gt;line&lt;/var&gt; 是 &lt;code&gt;header-line&lt;/code&gt; 或 &lt;code&gt;mode-line&lt;/code&gt; 之一，则 &lt;code&gt;window-line-height&lt;/code&gt; 返回有关窗口相应行的信息。否则， &lt;var&gt;line&lt;/var&gt; 是从0开始的文本行号。负数从窗口结尾算起。 &lt;var&gt;line&lt;/var&gt; 的默认值是 &lt;var&gt;window&lt;/var&gt; 中的当前行； &lt;var&gt;window&lt;/var&gt; 的默认值为选定的窗口。</target>
        </trans-unit>
        <trans-unit id="95736f0dd6861f5f94594f18264f9d474b32f390" translate="yes" xml:space="preserve">
          <source>This function returns the height of the screen in millimeters, or &lt;code&gt;nil&lt;/code&gt; if Emacs cannot get that information.</source>
          <target state="translated">此函数返回以毫米为单位的屏幕高度；如果Emacs无法获取该信息，则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5bc17e79ffebc6df38232913e67b5fb308232838" translate="yes" xml:space="preserve">
          <source>This function returns the height of the screen in pixels. On a character terminal, it gives the height in characters.</source>
          <target state="translated">该函数以像素为单位返回屏幕的高度。在字符终端上,它以字符为单位给出高度。</target>
        </trans-unit>
        <trans-unit id="8b01fe4411be27c8ee04c75e8f36adfb2d8c1ce1" translate="yes" xml:space="preserve">
          <source>This function returns the height, in lines, of the body of window &lt;var&gt;window&lt;/var&gt;. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window; otherwise it must be a live window.</source>
          <target state="translated">此函数以行为单位返回window &lt;var&gt;window&lt;/var&gt; 主体的高度。如果省略 &lt;var&gt;window&lt;/var&gt; 或 &lt;code&gt;nil&lt;/code&gt; ，则默认为所选窗口；否则为false。否则，它必须是活动窗口。</target>
        </trans-unit>
        <trans-unit id="c0fdabc673b001e0ffe40f09b4f753131473d5a2" translate="yes" xml:space="preserve">
          <source>This function returns the horizontal position of point, measured in columns, counting from 0 at the left margin. The column position is the sum of the widths of all the displayed representations of the characters between the start of the current line and point.</source>
          <target state="translated">该函数返回点的水平位置,以列为单位,从左边缘的0开始计算。列的位置是当前行和点之间所有显示的字符的宽度之和。</target>
        </trans-unit>
        <trans-unit id="ddd09683add37bc0a58038706ea329cbf19c826f" translate="yes" xml:space="preserve">
          <source>This function returns the indentation of the current line, which is the horizontal position of the first nonblank character. If the contents are entirely blank, then this is the horizontal position of the end of the line.</source>
          <target state="translated">该函数返回当前行的缩进,即第一个非空白字符的水平位置。如果内容完全为空白,则为行尾的水平位置。</target>
        </trans-unit>
        <trans-unit id="7c9e8be9871eeb3679f6615e1159adaa3964085e" translate="yes" xml:space="preserve">
          <source>This function returns the index of the current frame number for &lt;var&gt;image&lt;/var&gt;, counting from 0.</source>
          <target state="translated">此函数返回 &lt;var&gt;image&lt;/var&gt; 的当前帧编号的索引，从0开始计数。</target>
        </trans-unit>
        <trans-unit id="24c9cb536797c225265fe8e7b77701a81cbfae35" translate="yes" xml:space="preserve">
          <source>This function returns the index of the first element in &lt;var&gt;sequence&lt;/var&gt; that is equal to &lt;var&gt;elt&lt;/var&gt;. If the optional argument &lt;var&gt;function&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it is a function of two arguments to use instead of the default &lt;code&gt;equal&lt;/code&gt;.</source>
          <target state="translated">此函数按 &lt;var&gt;sequence&lt;/var&gt; 返回第一个元素的索引，该索引等于 &lt;var&gt;elt&lt;/var&gt; 。如果可选参数 &lt;var&gt;function&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则它是使用两个参数的函数，而不是默认的 &lt;code&gt;equal&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="16cdb635ec08784b86fadf602f1c0d13f48dcac1" translate="yes" xml:space="preserve">
          <source>This function returns the index of the start of the first match for the regular expression &lt;var&gt;regexp&lt;/var&gt; in &lt;var&gt;string&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt; if there is no match. If &lt;var&gt;start&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the search starts at that index in &lt;var&gt;string&lt;/var&gt;.</source>
          <target state="translated">该函数返回正则表达式的第一场比赛开始的指数 &lt;var&gt;regexp&lt;/var&gt; 中 &lt;var&gt;string&lt;/var&gt; ，或 &lt;code&gt;nil&lt;/code&gt; ，如果没有匹配。如果 &lt;var&gt;start&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则搜索从 &lt;var&gt;string&lt;/var&gt; 中的该索引开始。</target>
        </trans-unit>
        <trans-unit id="53eab24d9949fd5bf80394cd2958ec6e3552346a" translate="yes" xml:space="preserve">
          <source>This function returns the integer remainder after division of &lt;var&gt;dividend&lt;/var&gt; by &lt;var&gt;divisor&lt;/var&gt;. The arguments must be integers or markers.</source>
          <target state="translated">该函数返回相除后的整数余 &lt;var&gt;dividend&lt;/var&gt; 由 &lt;var&gt;divisor&lt;/var&gt; 。参数必须是整数或标记。</target>
        </trans-unit>
        <trans-unit id="29df095e6de6b309aaa5141810a662c319e5da86" translate="yes" xml:space="preserve">
          <source>This function returns the interned symbol whose name is &lt;var&gt;name&lt;/var&gt;. If there is no such symbol in the obarray &lt;var&gt;obarray&lt;/var&gt;, &lt;code&gt;intern&lt;/code&gt; creates a new one, adds it to the obarray, and returns it. If &lt;var&gt;obarray&lt;/var&gt; is omitted, the value of the global variable &lt;code&gt;obarray&lt;/code&gt; is used.</source>
          <target state="translated">此函数返回名称为 &lt;var&gt;name&lt;/var&gt; 的嵌入式符号。如果在obarray没有这样的符号 &lt;var&gt;obarray&lt;/var&gt; ， &lt;code&gt;intern&lt;/code&gt; 创建一个新的，把它添加到obarray，并将其返回。如果 &lt;var&gt;obarray&lt;/var&gt; 被省略，全局变量的值 &lt;code&gt;obarray&lt;/code&gt; 使用。</target>
        </trans-unit>
        <trans-unit id="b96d41ed6f226d1fdc45fc8aa4b0b0caedfb5bb6" translate="yes" xml:space="preserve">
          <source>This function returns the key or mouse button that &lt;var&gt;event&lt;/var&gt; describes, with all modifiers removed. The &lt;var&gt;event&lt;/var&gt; argument is as in &lt;code&gt;event-modifiers&lt;/code&gt;. For example:</source>
          <target state="translated">此函数返回 &lt;var&gt;event&lt;/var&gt; 描述的键或鼠标按钮，并删除所有修饰符。该 &lt;var&gt;event&lt;/var&gt; 的说法是在 &lt;code&gt;event-modifiers&lt;/code&gt; 。例如：</target>
        </trans-unit>
        <trans-unit id="f354fc92e2fc92ce807f30ead963bd80312cefb0" translate="yes" xml:space="preserve">
          <source>This function returns the kind of nonlocal exit condition stored in &lt;var&gt;env&lt;/var&gt;, like &lt;code&gt;non_local_exit_check&lt;/code&gt; does, but it also returns the full information about the nonlocal exit, if any. If the return value is &lt;code&gt;emacs_funcall_exit_signal&lt;/code&gt;, the function stores the error symbol in &lt;code&gt;*&lt;var&gt;symbol&lt;/var&gt;&lt;/code&gt; and the error data in &lt;code&gt;*&lt;var&gt;data&lt;/var&gt;&lt;/code&gt; (see &lt;a href=&quot;signaling-errors#Signaling-Errors&quot;&gt;Signaling Errors&lt;/a&gt;). If the return value is &lt;code&gt;emacs_funcall_exit_throw&lt;/code&gt;, the function stores the &lt;code&gt;catch&lt;/code&gt; tag symbol in &lt;code&gt;*&lt;var&gt;symbol&lt;/var&gt;&lt;/code&gt; and the &lt;code&gt;throw&lt;/code&gt; value in &lt;code&gt;*&lt;var&gt;data&lt;/var&gt;&lt;/code&gt;. The function doesn&amp;rsquo;t store anything in memory pointed by these arguments when the return value is &lt;code&gt;emacs_funcall_exit_return&lt;/code&gt;.</source>
          <target state="translated">该函数返回存储在 &lt;var&gt;env&lt;/var&gt; 中的非本地退出条件的类型，就像 &lt;code&gt;non_local_exit_check&lt;/code&gt; 一样，但是它还会返回有关非本地退出的完整信息（如果有）。如果返回值为 &lt;code&gt;emacs_funcall_exit_signal&lt;/code&gt; ，则该函数将错误符号存储在 &lt;code&gt;*&lt;var&gt;symbol&lt;/var&gt;&lt;/code&gt; ，并将错误数据存储在 &lt;code&gt;*&lt;var&gt;data&lt;/var&gt;&lt;/code&gt; （请参见&lt;a href=&quot;signaling-errors#Signaling-Errors&quot;&gt;Signaling Errors&lt;/a&gt;）。如果返回值为 &lt;code&gt;emacs_funcall_exit_throw&lt;/code&gt; ，则该函数将 &lt;code&gt;catch&lt;/code&gt; 标签符号存储在 &lt;code&gt;*&lt;var&gt;symbol&lt;/var&gt;&lt;/code&gt; ，将 &lt;code&gt;throw&lt;/code&gt; 值存储在 &lt;code&gt;*&lt;var&gt;data&lt;/var&gt;&lt;/code&gt; 。当返回值为 &lt;code&gt;emacs_funcall_exit_return&lt;/code&gt; 时，该函数不会在这些参数所指向的内存中存储任何内容。</target>
        </trans-unit>
        <trans-unit id="2d2ef0931bfbe0faec9e62cf5339757c113e7c0a" translate="yes" xml:space="preserve">
          <source>This function returns the kind of nonlocal exit condition stored in &lt;var&gt;env&lt;/var&gt;. The possible values are:</source>
          <target state="translated">此函数返回存储在 &lt;var&gt;env&lt;/var&gt; 中的非本地退出条件的类型。可能的值为：</target>
        </trans-unit>
        <trans-unit id="c4f28b8b78b2c082c7111505d1dbaaf13770739c" translate="yes" xml:space="preserve">
          <source>This function returns the largest element of &lt;var&gt;sequence&lt;/var&gt;. The elements of &lt;var&gt;sequence&lt;/var&gt; must be numbers or markers.</source>
          <target state="translated">此函数返回 &lt;var&gt;sequence&lt;/var&gt; 的最大元素。 &lt;var&gt;sequence&lt;/var&gt; 的元素必须是数字或标记。</target>
        </trans-unit>
        <trans-unit id="7f1bff2e216d1ca04e804bd9f274100b576f6127" translate="yes" xml:space="preserve">
          <source>This function returns the largest of its arguments.</source>
          <target state="translated">该函数返回其参数中最大的一个。</target>
        </trans-unit>
        <trans-unit id="a0fd46f7a5c9bb5ef6f64b9d466e0ca1c255d826" translate="yes" xml:space="preserve">
          <source>This function returns the largest value that a valid character codepoint can have.</source>
          <target state="translated">该函数返回一个有效字符代码点的最大值。</target>
        </trans-unit>
        <trans-unit id="2051039c170c9dd6ac1f7fb9c9a4998c1a44302f" translate="yes" xml:space="preserve">
          <source>This function returns the last buffer in &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s buffer list other than &lt;var&gt;buffer&lt;/var&gt;. If &lt;var&gt;frame&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it uses the selected frame&amp;rsquo;s buffer list.</source>
          <target state="translated">此函数返回 &lt;var&gt;frame&lt;/var&gt; 的缓冲区列表中除 &lt;var&gt;buffer&lt;/var&gt; 外的最后一个缓冲区。如果省略 &lt;var&gt;frame&lt;/var&gt; 或 &lt;code&gt;nil&lt;/code&gt; ，则使用所选帧的缓冲区列表。</target>
        </trans-unit>
        <trans-unit id="f3c3271546237f25ce407fb825fb50332d5140a1" translate="yes" xml:space="preserve">
          <source>This function returns the last error form recorded when a thread exited due to an error. Each thread that exits abnormally overwrites the form stored by the previous thread&amp;rsquo;s error with a new value, so only the last one can be accessed. If &lt;var&gt;cleanup&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the stored form is reset to &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">该函数返回由于错误而退出线程时记录的最后错误形式。每个异常退出的线程都会使用新值覆盖由前一个线程的错误存储的表单，因此只能访问最后一个。如果 &lt;var&gt;cleanup&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则将存储的表单重置为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c313191f690c973401e1342832f2166eb3026e32" translate="yes" xml:space="preserve">
          <source>This function returns the last link of &lt;var&gt;list&lt;/var&gt;. The &lt;code&gt;car&lt;/code&gt; of this link is the list&amp;rsquo;s last element. If &lt;var&gt;list&lt;/var&gt; is null, &lt;code&gt;nil&lt;/code&gt; is returned. If &lt;var&gt;n&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the &lt;var&gt;n&lt;/var&gt;th-to-last link is returned instead, or the whole of &lt;var&gt;list&lt;/var&gt; if &lt;var&gt;n&lt;/var&gt; is bigger than &lt;var&gt;list&lt;/var&gt;&amp;rsquo;s length.</source>
          <target state="translated">此函数返回 &lt;var&gt;list&lt;/var&gt; 的最后一个链接。此链接的 &lt;code&gt;car&lt;/code&gt; 是列表的最后一个元素。如果 &lt;var&gt;list&lt;/var&gt; 为null，则返回 &lt;code&gt;nil&lt;/code&gt; 。如果 &lt;var&gt;n&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则返回第 &lt;var&gt;n&lt;/var&gt; 个至最后一个链接；如果 &lt;var&gt;n&lt;/var&gt; 大于 &lt;var&gt;list&lt;/var&gt; 的长度，则返回整个 &lt;var&gt;list&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="3d29a23e1fe65988f6e8c700fffc5a44d0ae4bca" translate="yes" xml:space="preserve">
          <source>This function returns the leftmost child window of &lt;var&gt;window&lt;/var&gt;, if &lt;var&gt;window&lt;/var&gt; is an internal window whose children form a horizontal combination. For any other type of window, the return value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">该函数返回的最左边的子窗口 &lt;var&gt;window&lt;/var&gt; ，如果 &lt;var&gt;window&lt;/var&gt; 是一个内部的窗口，其子女形成横向联合。对于任何其他类型的窗口，返回值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0aae028d81d7a71d19660b26659597899d209c61" translate="yes" xml:space="preserve">
          <source>This function returns the length of &lt;var&gt;list&lt;/var&gt;, with no risk of either an error or an infinite loop. It generally returns the number of distinct cons cells in the list. However, for circular lists, the value is just an upper bound; it is often too large.</source>
          <target state="translated">此函数返回 &lt;var&gt;list&lt;/var&gt; 的长度，没有错误或无限循环的风险。通常返回列表中不同cons单元的数量。但是，对于循环列表，该值只是一个上限；它通常太大。</target>
        </trans-unit>
        <trans-unit id="9406a44c2223ad65f1f6471cc53b6d92bbcf7cce" translate="yes" xml:space="preserve">
          <source>This function returns the length of &lt;var&gt;object&lt;/var&gt; if it is a proper list, &lt;code&gt;nil&lt;/code&gt; otherwise (see &lt;a href=&quot;cons-cells#Cons-Cells&quot;&gt;Cons Cells&lt;/a&gt;). In addition to satisfying &lt;code&gt;listp&lt;/code&gt;, a proper list is neither circular nor dotted.</source>
          <target state="translated">如果它是正确的列表，则此函数返回 &lt;var&gt;object&lt;/var&gt; 的长度，否则返回 &lt;code&gt;nil&lt;/code&gt; （请参见&lt;a href=&quot;cons-cells#Cons-Cells&quot;&gt;Cons Cells&lt;/a&gt;）。除了满足 &lt;code&gt;listp&lt;/code&gt; 之外，适当的列表既不是圆形的也不是虚线。</target>
        </trans-unit>
        <trans-unit id="d08ca64d6aec90cd61606d58cce1dc4b0625edf6" translate="yes" xml:space="preserve">
          <source>This function returns the line number in the current buffer corresponding to the buffer position &lt;var&gt;pos&lt;/var&gt;. If &lt;var&gt;pos&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or omitted, the current buffer position is used. If &lt;var&gt;absolute&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the default, counting starts at &lt;code&gt;(point-min)&lt;/code&gt;, so the value refers to the contents of the accessible portion of the (potentially narrowed) buffer. If &lt;var&gt;absolute&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, ignore any narrowing and return the absolute line number.</source>
          <target state="translated">此函数返回当前缓冲区中与缓冲区位置 &lt;var&gt;pos&lt;/var&gt; 相对应的行号。如果 &lt;var&gt;pos&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; 或省略，则使用当前缓冲区位置。如果 &lt;var&gt;absolute&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则默认值从 &lt;code&gt;(point-min)&lt;/code&gt; 开始计数，因此该值引用（可能变窄）的缓冲区的可访问部分的内容。如果 &lt;var&gt;absolute&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则忽略任何缩小并返回绝对行号。</target>
        </trans-unit>
        <trans-unit id="13f62917e8c8eb02a7da395a0990aedb5bbef438" translate="yes" xml:space="preserve">
          <source>This function returns the list &lt;var&gt;x&lt;/var&gt; with the last element, or the last &lt;var&gt;n&lt;/var&gt; elements, removed. If &lt;var&gt;n&lt;/var&gt; is greater than zero it makes a copy of the list so as not to damage the original list. In general, &lt;code&gt;(append (butlast &lt;var&gt;x&lt;/var&gt; &lt;var&gt;n&lt;/var&gt;)
(last &lt;var&gt;x&lt;/var&gt; &lt;var&gt;n&lt;/var&gt;))&lt;/code&gt; will return a list equal to &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="translated">此函数返回删除了最后一个元素或最后 &lt;var&gt;n&lt;/var&gt; 个元素的列表 &lt;var&gt;x&lt;/var&gt; 。如果 &lt;var&gt;n&lt;/var&gt; 大于零，则会复制该列表，以免损坏原始列表。通常， &lt;code&gt;(append (butlast &lt;var&gt;x&lt;/var&gt; &lt;var&gt;n&lt;/var&gt;) (last &lt;var&gt;x&lt;/var&gt; &lt;var&gt;n&lt;/var&gt;))&lt;/code&gt; &lt;var&gt;x&lt;/var&gt; &lt;var&gt;n&lt;/var&gt; ）（last &lt;var&gt;x&lt;/var&gt; &lt;var&gt;n&lt;/var&gt; ））将返回等于 &lt;var&gt;x&lt;/var&gt; 的列表。</target>
        </trans-unit>
        <trans-unit id="af0018598c14fad2b63dda5f19faf525e81ff14e" translate="yes" xml:space="preserve">
          <source>This function returns the list of &lt;var&gt;symbol&lt;/var&gt;&amp;rsquo;s active watcher functions.</source>
          <target state="translated">该函数返回列表 &lt;var&gt;symbol&lt;/var&gt; 活跃守望功能的。</target>
        </trans-unit>
        <trans-unit id="6cee24be3483cc3eafa433ed92a38616bfe6e6f7" translate="yes" xml:space="preserve">
          <source>This function returns the list of aliases of &lt;var&gt;coding-system&lt;/var&gt;.</source>
          <target state="translated">该函数返回 &lt;var&gt;coding-system&lt;/var&gt; 别名的列表。</target>
        </trans-unit>
        <trans-unit id="df4090dfe4f1c818f010283bcbc20fda765f366b" translate="yes" xml:space="preserve">
          <source>This function returns the list of all suffixes that &lt;code&gt;load&lt;/code&gt; should try, in order, when its &lt;var&gt;must-suffix&lt;/var&gt; argument is non-&lt;code&gt;nil&lt;/code&gt;. This takes both &lt;code&gt;load-suffixes&lt;/code&gt; and &lt;code&gt;load-file-rep-suffixes&lt;/code&gt; into account. If &lt;code&gt;load-suffixes&lt;/code&gt;, &lt;code&gt;jka-compr-load-suffixes&lt;/code&gt; and &lt;code&gt;load-file-rep-suffixes&lt;/code&gt; all have their standard values, this function returns &lt;code&gt;(&quot;.elc&quot; &quot;.elc.gz&quot; &quot;.el&quot; &quot;.el.gz&quot;)&lt;/code&gt; if Auto Compression mode is enabled and &lt;code&gt;(&quot;.elc&quot; &quot;.el&quot;)&lt;/code&gt; if Auto Compression mode is disabled.</source>
          <target state="translated">当其 &lt;var&gt;must-suffix&lt;/var&gt; 为non - &lt;code&gt;nil&lt;/code&gt; 时，此函数按顺序返回应 &lt;code&gt;load&lt;/code&gt; 的所有后缀的列表。这同时考虑了 &lt;code&gt;load-suffixes&lt;/code&gt; 和 &lt;code&gt;load-file-rep-suffixes&lt;/code&gt; 。如果 &lt;code&gt;load-suffixes&lt;/code&gt; ， &lt;code&gt;jka-compr-load-suffixes&lt;/code&gt; 和 &lt;code&gt;load-file-rep-suffixes&lt;/code&gt; 都有其标准值，则此函数返回 &lt;code&gt;(&quot;.elc&quot; &quot;.elc.gz&quot; &quot;.el&quot; &quot;.el.gz&quot;)&lt;/code&gt; 如果启用了自动压缩模式）和 &lt;code&gt;(&quot;.elc&quot; &quot;.el&quot;)&lt;/code&gt; 如果禁用了自动压缩模式）。</target>
        </trans-unit>
        <trans-unit id="44326ad30a7adbd37456929ba88f1201430622ce" translate="yes" xml:space="preserve">
          <source>This function returns the list of buffers recently re-shown in &lt;var&gt;window&lt;/var&gt; via &lt;code&gt;switch-to-prev-buffer&lt;/code&gt;. The &lt;var&gt;window&lt;/var&gt; argument must denote a live window or &lt;code&gt;nil&lt;/code&gt; (meaning the selected window).</source>
          <target state="translated">该函数通过 &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; 返回最近在 &lt;var&gt;window&lt;/var&gt; 显示的缓冲区列表。的 &lt;var&gt;window&lt;/var&gt; 参数必须表示一个实时窗口或 &lt;code&gt;nil&lt;/code&gt; （表示所选择的窗口）。</target>
        </trans-unit>
        <trans-unit id="2a21fe5cd19bf9e53ed4daabcb4838fff92e3f5b" translate="yes" xml:space="preserve">
          <source>This function returns the list of character sets (see &lt;a href=&quot;character-sets#Character-Sets&quot;&gt;Character Sets&lt;/a&gt;) supported by &lt;var&gt;coding-system&lt;/var&gt;. Some coding systems that support too many character sets to list them all yield special values:</source>
          <target state="translated">此函数返回 &lt;var&gt;coding-system&lt;/var&gt; 支持的字符集列表（请参见&lt;a href=&quot;character-sets#Character-Sets&quot;&gt;Character Sets&lt;/a&gt;）。一些支持太多字符集以无法列出字符集的编码系统会产生特殊值：</target>
        </trans-unit>
        <trans-unit id="37dd4ff1692204e3f79082aaf3bbabe42fa76ac7" translate="yes" xml:space="preserve">
          <source>This function returns the list of coding systems in the order of their current priorities. Optional argument &lt;var&gt;highestp&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, means return only the highest priority coding system.</source>
          <target state="translated">该函数以当前优先级的顺序返回编码系统列表。可选参数 &lt;var&gt;highestp&lt;/var&gt; （如果非 &lt;code&gt;nil&lt;/code&gt; ）表示仅返回最高优先级的编码系统。</target>
        </trans-unit>
        <trans-unit id="bf56d5f88acde477a3ed0f6c4aea03229872354f" translate="yes" xml:space="preserve">
          <source>This function returns the list of version numbers of the GUI window system running on &lt;var&gt;display&lt;/var&gt;, such as the X server on GNU and Unix systems. The value is a list of three integers: the major and minor version numbers of the protocol, and the distributor-specific release number of the window system software itself. On GNU and Unix systems, these are normally the version of the X protocol and the distributor-specific release number of the X server software. On MS-Windows, this is the version of the Windows OS.</source>
          <target state="translated">此函数返回在 &lt;var&gt;display&lt;/var&gt; 运行的GUI窗口系统的版本号列表，例如GNU和Unix系统上的X服务器。该值是三个整数的列表：协议的主要和次要版本号，以及窗口系统软件本身的特定于发行商的发行版号。在GNU和Unix系统上，这些通常是X协议的版本以及X服务器软件的特定于发行商的发行版号。在MS-Windows上，这是Windows OS的版本。</target>
        </trans-unit>
        <trans-unit id="15699bf64df81887b22d128720062fd68e85ab4b" translate="yes" xml:space="preserve">
          <source>This function returns the live window at the coordinates &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; given in default character sizes (see &lt;a href=&quot;frame-font#Frame-Font&quot;&gt;Frame Font&lt;/a&gt;) relative to the native position of &lt;var&gt;frame&lt;/var&gt; (see &lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;Frame Geometry&lt;/a&gt;).</source>
          <target state="translated">此函数以相对于 &lt;var&gt;frame&lt;/var&gt; 的原始位置（请参见&lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;Frame Geometry&lt;/a&gt;）的默认字符大小（请参见&lt;a href=&quot;frame-font#Frame-Font&quot;&gt;Frame Font&lt;/a&gt;）给出的坐标 &lt;var&gt;x&lt;/var&gt; 和 &lt;var&gt;y&lt;/var&gt; 返回实时窗口。</target>
        </trans-unit>
        <trans-unit id="901750ea5caee5a8476f00a3c7ff173a36efe01b" translate="yes" xml:space="preserve">
          <source>This function returns the live window at the upper left corner of the frame specified by &lt;var&gt;frame-or-window&lt;/var&gt;. The argument &lt;var&gt;frame-or-window&lt;/var&gt; must denote a window or a live frame and defaults to the selected frame. If &lt;var&gt;frame-or-window&lt;/var&gt; specifies a window, this function returns the first window on that window&amp;rsquo;s frame. Under the assumption that the frame from our canonical example is selected &lt;code&gt;(frame-first-window)&lt;/code&gt; returns &lt;var&gt;W2&lt;/var&gt;.</source>
          <target state="translated">此函数返回由 &lt;var&gt;frame-or-window&lt;/var&gt; 指定的帧的左上角的实时窗口。参数 &lt;var&gt;frame-or-window&lt;/var&gt; 必须表示一个窗口或活动框架，并且默认为选定的框架。如果 &lt;var&gt;frame-or-window&lt;/var&gt; 指定一个窗口，则此函数返回该窗口框架上的第一个窗口。假设选择了我们的典型示例中的帧 &lt;code&gt;(frame-first-window)&lt;/code&gt; ,则返回 &lt;var&gt;W2&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="00a139c21bcec1a178aaabe0cfbae8f64c6fa426" translate="yes" xml:space="preserve">
          <source>This function returns the logarithm of &lt;var&gt;arg&lt;/var&gt;, with base &lt;var&gt;base&lt;/var&gt;. If you don&amp;rsquo;t specify &lt;var&gt;base&lt;/var&gt;, the natural base &lt;em&gt;e&lt;/em&gt; is used. If &lt;var&gt;arg&lt;/var&gt; or &lt;var&gt;base&lt;/var&gt; is negative, &lt;code&gt;log&lt;/code&gt; returns a NaN.</source>
          <target state="translated">该函数返回 &lt;var&gt;arg&lt;/var&gt; 的对数，以base为 &lt;var&gt;base&lt;/var&gt; 。如果不指定 &lt;var&gt;base&lt;/var&gt; ，则使用自然的&lt;em&gt;e&lt;/em&gt;。如果 &lt;var&gt;arg&lt;/var&gt; 或 &lt;var&gt;base&lt;/var&gt; 为负，则 &lt;code&gt;log&lt;/code&gt; 返回NaN。</target>
        </trans-unit>
        <trans-unit id="2ee52791fb8d5e342eec621a33cfe866557b9f25" translate="yes" xml:space="preserve">
          <source>This function returns the longest common substring of all possible completions of &lt;var&gt;string&lt;/var&gt; in &lt;var&gt;collection&lt;/var&gt;.</source>
          <target state="translated">该函数返回的所有可能的补全最长公共子 &lt;var&gt;string&lt;/var&gt; 的 &lt;var&gt;collection&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="ff7ac408bccf3c9523565386b2c80d69f90b0dc8" translate="yes" xml:space="preserve">
          <source>This function returns the main window of the specified &lt;var&gt;frame&lt;/var&gt;. The optional argument &lt;var&gt;frame&lt;/var&gt; must be a live frame and defaults to the selected one.</source>
          <target state="translated">此函数返回指定 &lt;var&gt;frame&lt;/var&gt; 的主窗口。可选参数 &lt;var&gt;frame&lt;/var&gt; 必须是实时框架，并且默认为所选框架。</target>
        </trans-unit>
        <trans-unit id="5dc13155742d23b39b256979ae26269fba93452e" translate="yes" xml:space="preserve">
          <source>This function returns the marker that represents the current buffer&amp;rsquo;s mark. It is not a copy, it is the marker used internally. Therefore, changing this marker&amp;rsquo;s position will directly affect the buffer&amp;rsquo;s mark. Don&amp;rsquo;t do that unless that is the effect you want.</source>
          <target state="translated">此函数返回代表当前缓冲区标记的标记。它不是副本，而是内部使用的标记。因此，更改此标记的位置将直接影响缓冲区的标记。除非那是您想要的效果，否则不要这样做。</target>
        </trans-unit>
        <trans-unit id="c098c11a9198d8b2836d678b21655370dd2c9a75" translate="yes" xml:space="preserve">
          <source>This function returns the maximum accessible value of point in the current buffer. This is &lt;code&gt;(1+ (buffer-size))&lt;/code&gt;, unless narrowing is in effect, in which case it is the position of the end of the region that you narrowed to. (See &lt;a href=&quot;narrowing#Narrowing&quot;&gt;Narrowing&lt;/a&gt;.)</source>
          <target state="translated">此函数返回当前缓冲区中point的最大可访问值。这是 &lt;code&gt;(1+ (buffer-size))&lt;/code&gt; ，除非缩小效果有效，在这种情况下，它就是您缩小到的区域末端的位置。（请参阅&lt;a href=&quot;narrowing#Narrowing&quot;&gt;缩小&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="ec646246d230eb29d5d313c97bd5bb2282f00541" translate="yes" xml:space="preserve">
          <source>This function returns the meaning of &lt;var&gt;function&lt;/var&gt; as a function. If &lt;var&gt;function&lt;/var&gt; is a symbol, then it finds &lt;var&gt;function&lt;/var&gt;&amp;rsquo;s function definition and starts over with that value. If &lt;var&gt;function&lt;/var&gt; is not a symbol, then it returns &lt;var&gt;function&lt;/var&gt; itself.</source>
          <target state="translated">该函数返回 &lt;var&gt;function&lt;/var&gt; 作为函数的含义。如果 &lt;var&gt;function&lt;/var&gt; 是一个符号，则它将找到 &lt;var&gt;function&lt;/var&gt; 的函数定义并从该值重新开始。如果 &lt;var&gt;function&lt;/var&gt; 不是符号，则它将返回 &lt;var&gt;function&lt;/var&gt; 本身。</target>
        </trans-unit>
        <trans-unit id="990ed4b503400e3940213854993c83d2b194ebe2" translate="yes" xml:space="preserve">
          <source>This function returns the members of &lt;var&gt;sequence&lt;/var&gt; in order, starting from the first one for which &lt;var&gt;predicate&lt;/var&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此函数从 &lt;var&gt;predicate&lt;/var&gt; 返回 &lt;code&gt;nil&lt;/code&gt; 的第一个顺序开始按顺序返回 &lt;var&gt;sequence&lt;/var&gt; 的成员。</target>
        </trans-unit>
        <trans-unit id="86ab66dbf45de5a99e9a127c3c454d33e819318e" translate="yes" xml:space="preserve">
          <source>This function returns the members of &lt;var&gt;sequence&lt;/var&gt; in order, stopping before the first one for which &lt;var&gt;predicate&lt;/var&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此函数按 &lt;var&gt;sequence&lt;/var&gt; 返回序列的成员，在 &lt;var&gt;predicate&lt;/var&gt; 返回 &lt;code&gt;nil&lt;/code&gt; 的第一个成员之前停止。</target>
        </trans-unit>
        <trans-unit id="5903da60de78e7a5e951047eb85f66f64b03f52d" translate="yes" xml:space="preserve">
          <source>This function returns the message currently being displayed in the echo area, or &lt;code&gt;nil&lt;/code&gt; if there is none.</source>
          <target state="translated">此函数返回当前在回显区域中显示的消息，如果没有则显示 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="266852b93431d4512e6bfa5f86cb83ac2552fbcc" translate="yes" xml:space="preserve">
          <source>This function returns the minibuffer window used for frame &lt;var&gt;frame&lt;/var&gt;. If &lt;var&gt;frame&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, that stands for the selected frame.</source>
          <target state="translated">此函数返回用于frame &lt;var&gt;frame&lt;/var&gt; 的minibuffer窗口。如果 &lt;var&gt;frame&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则表示选定的帧。</target>
        </trans-unit>
        <trans-unit id="95a9b661416922947dff28360854048cc167dc85" translate="yes" xml:space="preserve">
          <source>This function returns the minimum accessible value of point in the current buffer. This is normally 1, but if narrowing is in effect, it is the position of the start of the region that you narrowed to. (See &lt;a href=&quot;narrowing#Narrowing&quot;&gt;Narrowing&lt;/a&gt;.)</source>
          <target state="translated">该函数返回当前缓冲区中点的最小可访问值。通常为1，但是如果生效变窄，它就是您缩小到的区域的开始位置。（请参阅&lt;a href=&quot;narrowing#Narrowing&quot;&gt;缩小&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="453c1b74ef5a2b8c5ed1960337fa41c897d4489c" translate="yes" xml:space="preserve">
          <source>This function returns the minimum size of &lt;var&gt;window&lt;/var&gt;. &lt;var&gt;window&lt;/var&gt; must be a valid window and defaults to the selected one. The optional argument &lt;var&gt;horizontal&lt;/var&gt; non-&lt;code&gt;nil&lt;/code&gt; means to return the minimum number of columns of &lt;var&gt;window&lt;/var&gt;; otherwise return the minimum number of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s lines.</source>
          <target state="translated">此函数返回 &lt;var&gt;window&lt;/var&gt; 的最小大小。 &lt;var&gt;window&lt;/var&gt; 必须是有效窗口，并且默认为所选窗口。可选参数 &lt;var&gt;horizontal&lt;/var&gt; non- &lt;code&gt;nil&lt;/code&gt; 表示返回 &lt;var&gt;window&lt;/var&gt; 的最小列数；否则，返回最小 &lt;var&gt;window&lt;/var&gt; 行数。</target>
        </trans-unit>
        <trans-unit id="ebf95d7c5e0652e18f768d0334ba9c04826738d5" translate="yes" xml:space="preserve">
          <source>This function returns the name actually given to the buffer.</source>
          <target state="translated">该函数返回实际赋予缓冲区的名称。</target>
        </trans-unit>
        <trans-unit id="73c6035e0412716612bf69f09a686d7b9bde74eb" translate="yes" xml:space="preserve">
          <source>This function returns the name of &lt;var&gt;buffer&lt;/var&gt; as a string. &lt;var&gt;buffer&lt;/var&gt; defaults to the current buffer.</source>
          <target state="translated">此函数以字符串形式返回 &lt;var&gt;buffer&lt;/var&gt; 的名称。 &lt;var&gt;buffer&lt;/var&gt; 默认为当前缓冲区。</target>
        </trans-unit>
        <trans-unit id="b7bdc2d9689c3160f7302d4055d3cca825911403" translate="yes" xml:space="preserve">
          <source>This function returns the name of &lt;var&gt;process&lt;/var&gt;, as a string.</source>
          <target state="translated">此函数以字符串形式返回 &lt;var&gt;process&lt;/var&gt; 的名称。</target>
        </trans-unit>
        <trans-unit id="170fb9088f98270170bc0f2b83d28bcd532013d5" translate="yes" xml:space="preserve">
          <source>This function returns the name of a directory that is not magic. For a non-magic &lt;var&gt;filename&lt;/var&gt; it returns the corresponding directory name (see &lt;a href=&quot;directory-names#Directory-Names&quot;&gt;Directory Names&lt;/a&gt;). For a magic &lt;var&gt;filename&lt;/var&gt;, it invokes the file name handler, which therefore decides what value to return. If &lt;var&gt;filename&lt;/var&gt; is not accessible from a local process, then the file name handler should indicate that by returning &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此函数返回一个非魔术目录的名称。对于非魔术 &lt;var&gt;filename&lt;/var&gt; 它将返回相应的目录名称（请参阅&lt;a href=&quot;directory-names#Directory-Names&quot;&gt;目录名称&lt;/a&gt;）。对于不可思议的 &lt;var&gt;filename&lt;/var&gt; ，它将调用文件名处理程序，该文件名处理程序因此决定要返回的值。如果无法从本地进程访问 &lt;var&gt;filename&lt;/var&gt; ，则文件名处理程序应通过返回 &lt;code&gt;nil&lt;/code&gt; 来表明这一点。</target>
        </trans-unit>
        <trans-unit id="036d252339ea542a7b3ce264b9f393cb5623dcaf" translate="yes" xml:space="preserve">
          <source>This function returns the name of the background stipple pattern of face &lt;var&gt;face&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt; if it doesn&amp;rsquo;t have one.</source>
          <target state="translated">此函数返回face &lt;var&gt;face&lt;/var&gt; 的背景点画图案的名称；如果没有，则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7e80be27fcde9dee29a88a4d194f64ed6cf7c79f" translate="yes" xml:space="preserve">
          <source>This function returns the name of the character set of highest priority that &lt;var&gt;character&lt;/var&gt; belongs to.</source>
          <target state="translated">此函数返回该 &lt;var&gt;character&lt;/var&gt; 所属的最高优先级的字符集的名称。</target>
        </trans-unit>
        <trans-unit id="2c5c272804ab9655c5ec2e693ab7e7e29eb64d9c" translate="yes" xml:space="preserve">
          <source>This function returns the name of the file that defined &lt;var&gt;symbol&lt;/var&gt;. If &lt;var&gt;type&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, then any kind of definition is acceptable. If &lt;var&gt;type&lt;/var&gt; is &lt;code&gt;defun&lt;/code&gt;, &lt;code&gt;defvar&lt;/code&gt;, or &lt;code&gt;defface&lt;/code&gt;, that specifies function definition, variable definition, or face definition only.</source>
          <target state="translated">此函数返回定义 &lt;var&gt;symbol&lt;/var&gt; 的文件的名称。如果 &lt;var&gt;type&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，那么任何定义都是可以接受的。如果 &lt;var&gt;type&lt;/var&gt; 是 &lt;code&gt;defun&lt;/code&gt; 定义， &lt;code&gt;defvar&lt;/code&gt; ，或 &lt;code&gt;defface&lt;/code&gt; ，指定函数定义，变量定义，或面定义只。</target>
        </trans-unit>
        <trans-unit id="d6ec87829b7a58b7aa332292995089c905c25784" translate="yes" xml:space="preserve">
          <source>This function returns the name of the font of face &lt;var&gt;face&lt;/var&gt;.</source>
          <target state="translated">此函数返回face &lt;var&gt;face&lt;/var&gt; 字体的名称。</target>
        </trans-unit>
        <trans-unit id="addb5aca678adc9af3eb5d36ba52496072c21940" translate="yes" xml:space="preserve">
          <source>This function returns the name of the help buffer, which is normally</source>
          <target state="translated">该函数返回帮助缓冲区的名称,通常为</target>
        </trans-unit>
        <trans-unit id="279371835c559b6fc39409ecd249fe69483ba588" translate="yes" xml:space="preserve">
          <source>This function returns the name of the machine you are running on, as a string.</source>
          <target state="translated">这个函数以字符串的形式返回你正在运行的机器名称。</target>
        </trans-unit>
        <trans-unit id="6356910e3e660841c51a0088b81e7e3b8b346bd3" translate="yes" xml:space="preserve">
          <source>This function returns the name of the most recent backup file for &lt;var&gt;filename&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt; if that file has no backup files.</source>
          <target state="translated">该函数返回最近的备份文件名 &lt;var&gt;filename&lt;/var&gt; ，或者 &lt;code&gt;nil&lt;/code&gt; ，如果该文件没有备份文件。</target>
        </trans-unit>
        <trans-unit id="c4a1f76dabd823067e65cd8cb32ab6c812713b0d" translate="yes" xml:space="preserve">
          <source>This function returns the name under which the user is logged in. It uses the environment variables &lt;code&gt;LOGNAME&lt;/code&gt; or &lt;code&gt;USER&lt;/code&gt; if either is set. Otherwise, the value is based on the effective</source>
          <target state="translated">此函数返回用户登录时使用的名称。如果设置了环境变量 &lt;code&gt;LOGNAME&lt;/code&gt; 或 &lt;code&gt;USER&lt;/code&gt; ,则使用环境变量LOGNAME或USER。否则，该值基于有效</target>
        </trans-unit>
        <trans-unit id="8b57982f8788121b53e5892d0e520ea92135b335" translate="yes" xml:space="preserve">
          <source>This function returns the nearest live window in direction &lt;var&gt;direction&lt;/var&gt; as seen from the position of &lt;code&gt;window-point&lt;/code&gt; in window &lt;var&gt;window&lt;/var&gt;. The argument &lt;var&gt;direction&lt;/var&gt; must be one of &lt;code&gt;above&lt;/code&gt;, &lt;code&gt;below&lt;/code&gt;, &lt;code&gt;left&lt;/code&gt; or &lt;code&gt;right&lt;/code&gt;. The optional argument &lt;var&gt;window&lt;/var&gt; must denote a live window and defaults to the selected one.</source>
          <target state="translated">从窗口 &lt;var&gt;window&lt;/var&gt; 中窗口 &lt;code&gt;window-point&lt;/code&gt; 的位置看，此函数返回方向 &lt;var&gt;direction&lt;/var&gt; 最近的活动窗口。参数 &lt;var&gt;direction&lt;/var&gt; 必须是 &lt;code&gt;above&lt;/code&gt; ， &lt;code&gt;below&lt;/code&gt; ， &lt;code&gt;left&lt;/code&gt; 或 &lt;code&gt;right&lt;/code&gt; 。可选参数 &lt;var&gt;window&lt;/var&gt; 必须表示一个实时窗口，并且默认为所选窗口。</target>
        </trans-unit>
        <trans-unit id="98deb37745bd8546f58f4d0d6c023e78720d45c6" translate="yes" xml:space="preserve">
          <source>This function returns the new thread.</source>
          <target state="translated">该函数返回新线程。</target>
        </trans-unit>
        <trans-unit id="716ad90df83de887d105d55e5c353a50f3174b0c" translate="yes" xml:space="preserve">
          <source>This function returns the next sibling of the window &lt;var&gt;window&lt;/var&gt;. If omitted or &lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;window&lt;/var&gt; defaults to the selected window. The return value is &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;window&lt;/var&gt; is the last child of its parent.</source>
          <target state="translated">此函数返回窗口 &lt;var&gt;window&lt;/var&gt; 的下一个同级。如果省略或为 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;var&gt;window&lt;/var&gt; 默认为所选窗口。如果 &lt;var&gt;window&lt;/var&gt; 是其父级的最后一个子级，则返回值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d1595c8fec4fb6c38a6105dfeefd1e831fc3efb1" translate="yes" xml:space="preserve">
          <source>This function returns the nondirectory part of &lt;var&gt;filename&lt;/var&gt;.</source>
          <target state="translated">此函数返回 &lt;var&gt;filename&lt;/var&gt; 的非目录部分。</target>
        </trans-unit>
        <trans-unit id="2a78773a04f6f78d4c10bd894975e829f23c5ba9" translate="yes" xml:space="preserve">
          <source>This function returns the number of bytes in &lt;var&gt;string&lt;/var&gt;. If &lt;var&gt;string&lt;/var&gt; is a multibyte string, this can be greater than &lt;code&gt;(length &lt;var&gt;string&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">此函数返回 &lt;var&gt;string&lt;/var&gt; 中的字节数。如果 &lt;var&gt;string&lt;/var&gt; 是多字节字符串，则可以大于 &lt;code&gt;(length &lt;var&gt;string&lt;/var&gt;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4660cbae0445da22c42d71db3d30011007f691c4" translate="yes" xml:space="preserve">
          <source>This function returns the number of characters displayed in the specified face &lt;var&gt;face&lt;/var&gt; in the specified window &lt;var&gt;window&lt;/var&gt; (which must be a live window). If &lt;var&gt;face&lt;/var&gt; was remapped (see &lt;a href=&quot;face-remapping#Face-Remapping&quot;&gt;Face Remapping&lt;/a&gt;), the information is returned for the remapped face. If omitted or &lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;face&lt;/var&gt; defaults to the default face, and &lt;var&gt;window&lt;/var&gt; defaults to the selected window.</source>
          <target state="translated">此函数返回显示在指定面中的字符数 &lt;var&gt;face&lt;/var&gt; 中指定的窗口 &lt;var&gt;window&lt;/var&gt; （它必须是一个活窗口）。如果 &lt;var&gt;face&lt;/var&gt; 被重新映射（见&lt;a href=&quot;face-remapping#Face-Remapping&quot;&gt;面重映&lt;/a&gt;），则返回重新映射的面部信息。如果省略或为 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;var&gt;face&lt;/var&gt; 默认为默认面， &lt;var&gt;window&lt;/var&gt; 默认为所选窗口。</target>
        </trans-unit>
        <trans-unit id="7f37ecdfc730c73f255375bbcb28fc1ea92d9647" translate="yes" xml:space="preserve">
          <source>This function returns the number of color cells the screen supports.</source>
          <target state="translated">该函数返回屏幕支持的颜色单元数。</target>
        </trans-unit>
        <trans-unit id="f990105602087f085d0fb1216a4fb8b604bad0c8" translate="yes" xml:space="preserve">
          <source>This function returns the number of consecutive button presses that led up to &lt;var&gt;event&lt;/var&gt;. If &lt;var&gt;event&lt;/var&gt; is a double-down, double-click or double-drag event, the value is 2. If &lt;var&gt;event&lt;/var&gt; is a triple event, the value is 3 or greater. If &lt;var&gt;event&lt;/var&gt; is an ordinary mouse event (not a repeat event), the value is 1.</source>
          <target state="translated">此函数返回导致 &lt;var&gt;event&lt;/var&gt; 的连续按钮按下次数。如果 &lt;var&gt;event&lt;/var&gt; 是双击，双击或双击事件，则值为2。如果 &lt;var&gt;event&lt;/var&gt; 是三项事件，则值为3或更大。如果 &lt;var&gt;event&lt;/var&gt; 是普通鼠标事件（不是重复事件），则值为1。</target>
        </trans-unit>
        <trans-unit id="54ac70f0d285ac923e6e4821df500b4b06b4a1f5" translate="yes" xml:space="preserve">
          <source>This function returns the number of days between the beginning of year 1 and &lt;var&gt;time-value&lt;/var&gt;, assuming the default time zone. The operating system limits the range of time and zone values.</source>
          <target state="translated">该函数返回从第一年开始到 &lt;var&gt;time-value&lt;/var&gt; 之间的天数（假设默认时区）。操作系统限制时间和区域值的范围。</target>
        </trans-unit>
        <trans-unit id="7a8290e2f182f826a8f8d77ae52b4857a23d6dcb" translate="yes" xml:space="preserve">
          <source>This function returns the number of elements in &lt;var&gt;sequence&lt;/var&gt; for which &lt;var&gt;predicate&lt;/var&gt; returns non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">该函数返回元件的数量在 &lt;var&gt;sequence&lt;/var&gt; 为其中 &lt;var&gt;predicate&lt;/var&gt; 返回非 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bd53ba1f2b422051879e56a877351b43104063dd" translate="yes" xml:space="preserve">
          <source>This function returns the number of elements in &lt;var&gt;sequence&lt;/var&gt;. For built-in sequence types, &lt;code&gt;seq-length&lt;/code&gt; behaves like &lt;code&gt;length&lt;/code&gt;. See &lt;a href=&quot;#Definition-of-length&quot;&gt;Definition of length&lt;/a&gt;.</source>
          <target state="translated">此函数按 &lt;var&gt;sequence&lt;/var&gt; 返回元素数。对于内置序列类型， &lt;code&gt;seq-length&lt;/code&gt; 的行为类似于 &lt;code&gt;length&lt;/code&gt; 。请参见&lt;a href=&quot;#Definition-of-length&quot;&gt;长度的定义&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bc012f3599a6d90b5500fd9b10e1e0d93cace6d0" translate="yes" xml:space="preserve">
          <source>This function returns the number of elements in &lt;var&gt;sequence&lt;/var&gt;. The function signals the &lt;code&gt;wrong-type-argument&lt;/code&gt; error if the argument is not a sequence or is a dotted list; it signals the &lt;code&gt;circular-list&lt;/code&gt; error if the argument is a circular list. For a char-table, the value returned is always one more than the maximum Emacs character code.</source>
          <target state="translated">此函数按 &lt;var&gt;sequence&lt;/var&gt; 返回元素数。如果参数不是序列或点列表，则该函数会发出 &lt;code&gt;wrong-type-argument&lt;/code&gt; 错误的信号；它标志着 &lt;code&gt;circular-list&lt;/code&gt; 如果参数是循环列表错误。对于一个字符表，返回的值总是比最大​​Emacs字符代码多一。</target>
        </trans-unit>
        <trans-unit id="47bf3b5a7435d654d99637c96c758c06790e2980" translate="yes" xml:space="preserve">
          <source>This function returns the number of elements in &lt;var&gt;vector&lt;/var&gt;.</source>
          <target state="translated">此函数返回 &lt;var&gt;vector&lt;/var&gt; 中元素的数量。</target>
        </trans-unit>
        <trans-unit id="8f871c89b50cce344d5191d8f586c00c5b111314" translate="yes" xml:space="preserve">
          <source>This function returns the number of lines between the positions &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; in the current buffer. If &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; are equal, then it returns 0. Otherwise it returns at least 1, even if &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; are on the same line. This is because the text between them, considered in isolation, must contain at least one line unless it is empty.</source>
          <target state="translated">此函数返回当前缓冲区中位置 &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 之间的行数。如果 &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 相等，则返回0。否则，即使 &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 在同一行，它至少返回1 。这是因为它们之间的文本（单独考虑）必须至少包含一行，除非它为空。</target>
        </trans-unit>
        <trans-unit id="dfaef65842c0971b65897d9dded4f0559cd49f93" translate="yes" xml:space="preserve">
          <source>This function returns the number of names (i.e., hard links) that file &lt;var&gt;filename&lt;/var&gt; has. If the file does not exist, this function returns &lt;code&gt;nil&lt;/code&gt;. Note that symbolic links have no effect on this function, because they are not considered to be names of the files they link to. This function does not follow symbolic links.</source>
          <target state="translated">此函数返回文件文件 &lt;var&gt;filename&lt;/var&gt; 具有的名称（即，硬链接）的数量。如果文件不存在，则此函数返回 &lt;code&gt;nil&lt;/code&gt; 。请注意，符号链接对此功能没有影响，因为它们不被视为链接到的文件的名称。此功能不遵循符号链接。</target>
        </trans-unit>
        <trans-unit id="385af56e8b326c5a9263a2ead611c148213ac073" translate="yes" xml:space="preserve">
          <source>This function returns the number of planes the display supports. This is typically the number of bits per pixel. For a tty display, it is log to base two of the number of colors supported.</source>
          <target state="translated">该函数返回显示器支持的平面数。这通常是每个像素的位数。对于TTY显示器,它是对数到支持的颜色数量的基数二。</target>
        </trans-unit>
        <trans-unit id="3614910cf242e1d73bedbc95d891db25fb9b713b" translate="yes" xml:space="preserve">
          <source>This function returns the number of screen lines in the text from &lt;var&gt;beg&lt;/var&gt; to &lt;var&gt;end&lt;/var&gt;. The number of screen lines may be different from the number of actual lines, due to line continuation, the display table, etc. If &lt;var&gt;beg&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; are &lt;code&gt;nil&lt;/code&gt; or omitted, they default to the beginning and end of the accessible portion of the buffer.</source>
          <target state="translated">此函数返回从 &lt;var&gt;beg&lt;/var&gt; 到 &lt;var&gt;end&lt;/var&gt; 的文本中的屏幕行数。由于行连续，显示表等原因，屏幕行的数量可能与实际行的数量不同。如果 &lt;var&gt;beg&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; 或省略，则它们默认为缓冲区可访问部分的开头和结尾。</target>
        </trans-unit>
        <trans-unit id="cdeb69a34ab9270e0cb46af9184c445f31f8fccf" translate="yes" xml:space="preserve">
          <source>This function returns the number of screens associated with the display.</source>
          <target state="translated">该函数返回与显示器相关联的屏幕数。</target>
        </trans-unit>
        <trans-unit id="cd78e4ab553abd4fa1c6862cfd0e83dacabc0e2e" translate="yes" xml:space="preserve">
          <source>This function returns the number of words between the positions &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; in the current buffer.</source>
          <target state="translated">此函数返回当前缓冲区中 &lt;var&gt;start&lt;/var&gt; 和 &lt;var&gt;end&lt;/var&gt; 位置之间的字数。</target>
        </trans-unit>
        <trans-unit id="c9b36243c6e743dccf4b2162f3f37703e74e1cff" translate="yes" xml:space="preserve">
          <source>This function returns the numeric meaning of a valid raw prefix argument value, &lt;var&gt;arg&lt;/var&gt;. The argument may be a symbol, a number, or a list. If it is &lt;code&gt;nil&lt;/code&gt;, the value 1 is returned; if it is &lt;code&gt;-&lt;/code&gt;, the value -1 is returned; if it is a number, that number is returned; if it is a list, the &lt;small&gt;CAR&lt;/small&gt; of that list (which should be a number) is returned.</source>
          <target state="translated">此函数返回有效的原始前缀参数值 &lt;var&gt;arg&lt;/var&gt; 的数字含义。参数可以是符号，数字或列表。如果为 &lt;code&gt;nil&lt;/code&gt; ，则返回值1；否则为0。如果是 &lt;code&gt;-&lt;/code&gt; ，则返回值-1；如果是数字，则返回该数字；如果是列表，则返回该列表的&lt;small&gt;CAR&lt;/small&gt;（应为数字）。</target>
        </trans-unit>
        <trans-unit id="eb161c7c5eda89aed21a66a6dd259a62c51776ac" translate="yes" xml:space="preserve">
          <source>This function returns the numeric value of the characters in &lt;var&gt;string&lt;/var&gt;. If &lt;var&gt;base&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it must be an integer between 2 and 16 (inclusive), and integers are converted in that base. If &lt;var&gt;base&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, then base ten is used. Floating-point conversion only works in base ten; we have not implemented other radices for floating-point numbers, because that would be much more work and does not seem useful. If &lt;var&gt;string&lt;/var&gt; looks like an integer but its value is too large to fit into a Lisp integer, &lt;code&gt;string-to-number&lt;/code&gt; returns a floating-point result.</source>
          <target state="translated">此函数返回 &lt;var&gt;string&lt;/var&gt; 中字符的数值。如果 &lt;var&gt;base&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则它必须是2到16（含）之间的整数，并且在该base中转换整数。如果 &lt;var&gt;base&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则使用10为底。浮点转换仅适用于基数10；我们尚未为浮点数实现其他半径，因为这将需要更多工作，而且似乎没有用。如果 &lt;var&gt;string&lt;/var&gt; 看起来像整数，但其值太大而无法容纳Lisp整数，则 &lt;code&gt;string-to-number&lt;/code&gt; 将返回浮点结果。</target>
        </trans-unit>
        <trans-unit id="1fe377088e8549d322d6b392a688ebc3423cc12c" translate="yes" xml:space="preserve">
          <source>This function returns the overall prompt string of &lt;var&gt;keymap&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt; if it has none.</source>
          <target state="translated">此函数返回 &lt;var&gt;keymap&lt;/var&gt; 的整体提示字符串，如果没有，则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6fdc1c3bd6ce721a323557de4ce54d23cdd18b08" translate="yes" xml:space="preserve">
          <source>This function returns the paragraph direction at point in the named &lt;var&gt;buffer&lt;/var&gt;. The returned value is a symbol, either &lt;code&gt;left-to-right&lt;/code&gt; or &lt;code&gt;right-to-left&lt;/code&gt;. If &lt;var&gt;buffer&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the current buffer. If the buffer-local value of the variable &lt;code&gt;bidi-paragraph-direction&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the returned value will be identical to that value; otherwise, the returned value reflects the paragraph direction determined dynamically by Emacs. For buffers whose value of &lt;code&gt;bidi-display-reordering&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt; as well as unibyte buffers, this function always returns &lt;code&gt;left-to-right&lt;/code&gt;.</source>
          <target state="translated">此函数返回命名 &lt;var&gt;buffer&lt;/var&gt; 中点处的段落方向。返回的值是一个符号， &lt;code&gt;left-to-right&lt;/code&gt; 或 &lt;code&gt;right-to-left&lt;/code&gt; 。如果省略 &lt;var&gt;buffer&lt;/var&gt; 或 &lt;code&gt;nil&lt;/code&gt; ，则默认为当前缓冲区。如果变量 &lt;code&gt;bidi-paragraph-direction&lt;/code&gt; 的局部缓冲区值是非 &lt;code&gt;nil&lt;/code&gt; ，则返回的值将与该值相同；否则，返回值反映Emacs动态确定的段落方向。对于 &lt;code&gt;bidi-display-reordering&lt;/code&gt; 值为 &lt;code&gt;nil&lt;/code&gt; 的缓冲区以及单字节缓冲区，此函数始终返回 &lt;code&gt;left-to-right&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fef18e9878ae220b5fbd7c5bf52713eaf6401bfa" translate="yes" xml:space="preserve">
          <source>This function returns the parent frame of &lt;var&gt;frame&lt;/var&gt;. The parent frame of &lt;var&gt;frame&lt;/var&gt; is the Emacs frame whose window-system window is the parent window of &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s window-system window. If such a frame exists, &lt;var&gt;frame&lt;/var&gt; is considered a child frame of that frame.</source>
          <target state="translated">此函数返回frame的父 &lt;var&gt;frame&lt;/var&gt; 。的父框架 &lt;var&gt;frame&lt;/var&gt; 是Emacs框架，其窗口系统窗口是父窗口 &lt;var&gt;frame&lt;/var&gt; 的窗口系统的窗口。如果这样的框架存在， &lt;var&gt;frame&lt;/var&gt; 被认为是框架的子框架。</target>
        </trans-unit>
        <trans-unit id="e771c30548d0d4b69691eae5f6bdbe7fdd18a2f7" translate="yes" xml:space="preserve">
          <source>This function returns the parent of &lt;var&gt;char-table&lt;/var&gt;. The parent is always either &lt;code&gt;nil&lt;/code&gt; or another char-table.</source>
          <target state="translated">此函数返回 &lt;var&gt;char-table&lt;/var&gt; 的父级。父代始终为 &lt;code&gt;nil&lt;/code&gt; 或另一个char-table。</target>
        </trans-unit>
        <trans-unit id="ef7a9b25b7b7c74c3f0b831628afd0d41a8750af" translate="yes" xml:space="preserve">
          <source>This function returns the parent window of &lt;var&gt;window&lt;/var&gt;. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window. The return value is &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;window&lt;/var&gt; has no parent (i.e., it is a minibuffer window or the root window of its frame).</source>
          <target state="translated">此函数返回window的父 &lt;var&gt;window&lt;/var&gt; 。如果 &lt;var&gt;window&lt;/var&gt; 省略或为 &lt;code&gt;nil&lt;/code&gt; ，则默认为所选窗口。如果 &lt;var&gt;window&lt;/var&gt; 没有父级，则返回值为 &lt;code&gt;nil&lt;/code&gt; （即，它是一个迷你缓冲区窗口或其框架的根窗口）。</target>
        </trans-unit>
        <trans-unit id="100c3e30d293535d9b43d4f0f75ae657207f276e" translate="yes" xml:space="preserve">
          <source>This function returns the parser state that the parser would reach at position &lt;var&gt;pos&lt;/var&gt; starting from the beginning of the visible portion of the buffer. See &lt;a href=&quot;parser-state#Parser-State&quot;&gt;Parser State&lt;/a&gt;, for a description of the parser state.</source>
          <target state="translated">此函数返回解析器的状态，解析器将从缓冲区的可见部分的开头开始到达位置 &lt;var&gt;pos&lt;/var&gt; 。有关&lt;a href=&quot;parser-state#Parser-State&quot;&gt;解析器状态&lt;/a&gt;的描述，请参见解析器状态。</target>
        </trans-unit>
        <trans-unit id="0d685977aabaad11c5aaf8445538b42897e6e0f0" translate="yes" xml:space="preserve">
          <source>This function returns the part of &lt;var&gt;string&lt;/var&gt; that fits within &lt;var&gt;width&lt;/var&gt; columns, as a new string.</source>
          <target state="translated">此函数返回适合 &lt;var&gt;width&lt;/var&gt; 列的 &lt;var&gt;string&lt;/var&gt; 部分，作为新字符串。</target>
        </trans-unit>
        <trans-unit id="2cbbadef6c02a4ca97653f94298446ff12323139" translate="yes" xml:space="preserve">
          <source>This function returns the pixel coordinates of &lt;var&gt;window&lt;/var&gt; relative to an origin at (0, 0) of the display of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s frame. Calling &lt;code&gt;(window-absolute-pixel-edges)&lt;/code&gt; is equivalent to calling &lt;code&gt;(window-edges window nil t t)&lt;/code&gt;, see above.</source>
          <target state="translated">此函数返回相对于 &lt;var&gt;window&lt;/var&gt; 帧显示的原点（0，0）的 &lt;var&gt;window&lt;/var&gt; 像素坐标。调用 &lt;code&gt;(window-absolute-pixel-edges)&lt;/code&gt; 等效于调用 &lt;code&gt;(window-edges window nil t t)&lt;/code&gt; ，请参见上文。</target>
        </trans-unit>
        <trans-unit id="22e4121d03b1669541ddcbf1ba4d35d0a4b908e0" translate="yes" xml:space="preserve">
          <source>This function returns the pixel coordinates of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s body relative to an origin at (0, 0) of the display of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s frame. Calling &lt;code&gt;(window-absolute-body-pixel-edges window)&lt;/code&gt; is equivalent to calling &lt;code&gt;(window-edges window t t t)&lt;/code&gt;, see above.</source>
          <target state="translated">此函数返回相对于 &lt;var&gt;window&lt;/var&gt; 框架显示（0，0）的原点的 &lt;var&gt;window&lt;/var&gt; 主体的像素坐标。调用 &lt;code&gt;(window-absolute-body-pixel-edges window)&lt;/code&gt; 等效于调用 &lt;code&gt;(window-edges window t t t)&lt;/code&gt; ，请参见上文。</target>
        </trans-unit>
        <trans-unit id="b460de913df0ebff88befa48d1c6842dbaa3a8c6" translate="yes" xml:space="preserve">
          <source>This function returns the pixel edges of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s body. Calling &lt;code&gt;(window-body-pixel-edges window)&lt;/code&gt; is equivalent to calling &lt;code&gt;(window-edges window t nil t)&lt;/code&gt;, see above.</source>
          <target state="translated">此函数返回 &lt;var&gt;window&lt;/var&gt; 主体的像素边缘。调用 &lt;code&gt;(window-body-pixel-edges window)&lt;/code&gt; 等同于调用 &lt;code&gt;(window-edges window t nil t)&lt;/code&gt; ，请参见上文。</target>
        </trans-unit>
        <trans-unit id="a6c12eb3f77cf3a9325000c0c58c13f9c5b1256b" translate="yes" xml:space="preserve">
          <source>This function returns the pixel height of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s text area the last time window change functions found &lt;code&gt;window&lt;/code&gt; live on its frame. It is zero if &lt;code&gt;window&lt;/code&gt; was created after that.</source>
          <target state="translated">该函数返回的像素高度 &lt;var&gt;window&lt;/var&gt; 的文本区域的最后一个时间窗口变函数发现 &lt;code&gt;window&lt;/code&gt; 现场的框架上。如果之后创建 &lt;code&gt;window&lt;/code&gt; ，则为零。</target>
        </trans-unit>
        <trans-unit id="11e13972916d944847268dec125ea07ed6376e59" translate="yes" xml:space="preserve">
          <source>This function returns the pixel width of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s text area the last time window change functions found &lt;code&gt;window&lt;/code&gt; live on its frame. It is zero if &lt;code&gt;window&lt;/code&gt; was created after that.</source>
          <target state="translated">该函数返回的像素宽度 &lt;var&gt;window&lt;/var&gt; 文本区域的最后一个时间窗口变函数发现 &lt;code&gt;window&lt;/code&gt; 现场的框架上。如果之后创建 &lt;code&gt;window&lt;/code&gt; ，则为零。</target>
        </trans-unit>
        <trans-unit id="20f9fb61dcd5e0745a216d4c4dc4e50d54e7c66c" translate="yes" xml:space="preserve">
          <source>This function returns the position at which &lt;var&gt;overlay&lt;/var&gt; ends, as an integer.</source>
          <target state="translated">此函数以整数形式返回 &lt;var&gt;overlay&lt;/var&gt; 结束的位置。</target>
        </trans-unit>
        <trans-unit id="1ab452397e74ffb205ca9503a761e134f874e0f2" translate="yes" xml:space="preserve">
          <source>This function returns the position at which &lt;var&gt;overlay&lt;/var&gt; starts, as an integer.</source>
          <target state="translated">此函数以整数形式返回 &lt;var&gt;overlay&lt;/var&gt; 开始的位置。</target>
        </trans-unit>
        <trans-unit id="b9dd0ef72770c4be928e278d390ba083f20ddb13" translate="yes" xml:space="preserve">
          <source>This function returns the position of the beginning of the region (as an integer). This is the position of either point or the mark, whichever is smaller.</source>
          <target state="translated">此函数返回区域开始的位置(为整数)。这是点或标记的位置,以较小者为准。</target>
        </trans-unit>
        <trans-unit id="dff40079cde5e10f90ec1185d975a2585ed98899" translate="yes" xml:space="preserve">
          <source>This function returns the position of the end of the region (as an integer). This is the position of either point or the mark, whichever is larger.</source>
          <target state="translated">此函数返回区域末端的位置(为整数)。这是点或标记的位置,以较大者为准。</target>
        </trans-unit>
        <trans-unit id="4ad806a07e3170fecc83462696fd0aaefe7065b6" translate="yes" xml:space="preserve">
          <source>This function returns the position that &lt;var&gt;marker&lt;/var&gt; points to, or &lt;code&gt;nil&lt;/code&gt; if it points nowhere.</source>
          <target state="translated">此函数返回 &lt;var&gt;marker&lt;/var&gt; 指向的位置，如果没有指向则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c81e5fa0ff2db59e794974e86cc520b3a5a6b267" translate="yes" xml:space="preserve">
          <source>This function returns the position where display of its buffer ends in &lt;var&gt;window&lt;/var&gt;. The default for &lt;var&gt;window&lt;/var&gt; is the selected window.</source>
          <target state="translated">此函数返回其缓冲区在 &lt;var&gt;window&lt;/var&gt; 中结束显示的位置。 &lt;var&gt;window&lt;/var&gt; 的默认值为选定的窗口。</target>
        </trans-unit>
        <trans-unit id="785521c3c1ac8a80364594b065052ca7abe1d123" translate="yes" xml:space="preserve">
          <source>This function returns the preserved height of window &lt;var&gt;window&lt;/var&gt; in pixels. &lt;var&gt;window&lt;/var&gt; must be a live window and defaults to the selected one. If the optional argument &lt;var&gt;horizontal&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it returns the preserved width of &lt;var&gt;window&lt;/var&gt;. It returns &lt;code&gt;nil&lt;/code&gt; if the size of &lt;var&gt;window&lt;/var&gt; is not preserved.</source>
          <target state="translated">该函数返回窗口的高度保存 &lt;var&gt;window&lt;/var&gt; 以像素为单位。 &lt;var&gt;window&lt;/var&gt; 必须是活动窗口，并且默认为选定的窗口。如果可选参数 &lt;var&gt;horizontal&lt;/var&gt; 为非 &lt;code&gt;nil&lt;/code&gt; ，则返回保留的 &lt;var&gt;window&lt;/var&gt; 宽度。如果未保留 &lt;var&gt;window&lt;/var&gt; 的大小，则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ba0eeb63242b01ba3179bbc92bc8134b1d1eb1bc" translate="yes" xml:space="preserve">
          <source>This function returns the previous sibling of the window &lt;var&gt;window&lt;/var&gt;. If omitted or &lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;window&lt;/var&gt; defaults to the selected window. The return value is &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;window&lt;/var&gt; is the first child of its parent.</source>
          <target state="translated">此函数返回窗口 &lt;var&gt;window&lt;/var&gt; 的上一个同级。如果省略或为 &lt;code&gt;nil&lt;/code&gt; ，则 &lt;var&gt;window&lt;/var&gt; 默认为所选窗口。如果 &lt;var&gt;window&lt;/var&gt; 是其父级的第一个子级，则返回值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2831733098dad6cdef83d31afc2d16134a9eea45" translate="yes" xml:space="preserve">
          <source>This function returns the process</source>
          <target state="translated">该函数返回过程</target>
        </trans-unit>
        <trans-unit id="3e57e45468963541bc524e131cd617f1685d66a9" translate="yes" xml:space="preserve">
          <source>This function returns the process marker for &lt;var&gt;process&lt;/var&gt;, which is the marker that says where to insert output from the process.</source>
          <target state="translated">该函数返回过程标记为 &lt;var&gt;process&lt;/var&gt; ，这是说，其中从工艺插入输出的标志物。</target>
        </trans-unit>
        <trans-unit id="7be289a6263416b52205420812ffa4cee9fcdd48" translate="yes" xml:space="preserve">
          <source>This function returns the process named &lt;var&gt;name&lt;/var&gt; (a string), or &lt;code&gt;nil&lt;/code&gt; if there is none. The argument &lt;var&gt;name&lt;/var&gt; can also be a process object, in which case it is returned.</source>
          <target state="translated">此函数返回名为 &lt;var&gt;name&lt;/var&gt; （字符串）的进程，如果没有则返回 &lt;code&gt;nil&lt;/code&gt; 。参数 &lt;var&gt;name&lt;/var&gt; 也可以是过程对象，在这种情况下将被返回。</target>
        </trans-unit>
        <trans-unit id="059c991523aee6c3af6956d21974f0498038d40a" translate="yes" xml:space="preserve">
          <source>This function returns the process plist of &lt;var&gt;process&lt;/var&gt;.</source>
          <target state="translated">该功能返回的过程中的plist &lt;var&gt;process&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="9d0d3a60b478058dce41357b62db6bc5547e4864" translate="yes" xml:space="preserve">
          <source>This function returns the processor run time used by Emacs, as a Lisp timestamp (see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;).</source>
          <target state="translated">该函数以Lisp时间戳的形式返回Emacs所使用的处理器运行时间（请参见&lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="da2baa8ba79c6d543b1823016cb688e043dda114" translate="yes" xml:space="preserve">
          <source>This function returns the prompt string of the currently active minibuffer. If no minibuffer is active, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此函数返回当前活动的迷你缓冲区的提示字符串。如果没有活动的小缓冲区，则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="69a8e582795e42f1fa7f44028dabb3fdf853c49b" translate="yes" xml:space="preserve">
          <source>This function returns the proper fill column value to use for filling the text around point. The value is the value of the &lt;code&gt;fill-column&lt;/code&gt; variable, minus the value of the &lt;code&gt;right-margin&lt;/code&gt; property of the character after point.</source>
          <target state="translated">此函数返回正确的填充列值，用于填充点周围的文本。该值是 &lt;code&gt;fill-column&lt;/code&gt; 变量的值减去点后字符的 &lt;code&gt;right-margin&lt;/code&gt; 属性的值。</target>
        </trans-unit>
        <trans-unit id="9ce47b7e3485d22dc5b1a3d17f78ae8961c1cd7a" translate="yes" xml:space="preserve">
          <source>This function returns the proper justification style to use for filling the text around point.</source>
          <target state="translated">此函数返回用于填充点周围文本的适当的对齐方式。</target>
        </trans-unit>
        <trans-unit id="53b9323d118a4efc2b8a7035d87bb9021c9aeb3d" translate="yes" xml:space="preserve">
          <source>This function returns the proper left margin value to use for filling the text around point. The value is the sum of the &lt;code&gt;left-margin&lt;/code&gt; property of the character at the start of the current line (or zero if none), and the value of the variable &lt;code&gt;left-margin&lt;/code&gt;.</source>
          <target state="translated">此函数返回正确的左边界值，以用于填充点周围的文本。该值是当前行开始处字符的 &lt;code&gt;left-margin&lt;/code&gt; 属性的值（如果没有则为零）与变量 &lt;code&gt;left-margin&lt;/code&gt; 的值之和。</target>
        </trans-unit>
        <trans-unit id="3aa2e5da082464ba8e84491c810e691665fe7cf4" translate="yes" xml:space="preserve">
          <source>This function returns the property list of &lt;var&gt;symbol&lt;/var&gt;.</source>
          <target state="translated">此函数返回 &lt;var&gt;symbol&lt;/var&gt; 的属性列表。</target>
        </trans-unit>
        <trans-unit id="561fa84f394620a8c6a818070914900ceadda51c" translate="yes" xml:space="preserve">
          <source>This function returns the property list of &lt;var&gt;xwidget&lt;/var&gt;.</source>
          <target state="translated">此函数返回 &lt;var&gt;xwidget&lt;/var&gt; 的属性列表。</target>
        </trans-unit>
        <trans-unit id="b99817a1615171d0733d556f7ffb87e59308eeb5" translate="yes" xml:space="preserve">
          <source>This function returns the property list of the character set &lt;var&gt;charset&lt;/var&gt;. Although &lt;var&gt;charset&lt;/var&gt; is a symbol, this is not the same as the property list of that symbol. Charset properties include important information about the charset, such as its documentation string, short name, etc.</source>
          <target state="translated">此函数返回字符集 &lt;var&gt;charset&lt;/var&gt; 的属性列表。尽管 &lt;var&gt;charset&lt;/var&gt; 是一个符号，但这与该符号的属性列表不同。字符集属性包括有关字符集的重要信息，例如其文档字符串，短名称等。</target>
        </trans-unit>
        <trans-unit id="2bd183c2aa69ddc14378e3202c4ac160cd6d23a6" translate="yes" xml:space="preserve">
          <source>This function returns the raw syntax descriptor for the character in the buffer after position &lt;var&gt;pos&lt;/var&gt;, taking account of syntax properties as well as the syntax table. If &lt;var&gt;pos&lt;/var&gt; is outside the buffer&amp;rsquo;s accessible portion (see &lt;a href=&quot;narrowing#Narrowing&quot;&gt;accessible portion&lt;/a&gt;), the return value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">考虑到语法属性以及语法表，此函数返回位置 &lt;var&gt;pos&lt;/var&gt; 之后缓冲区中字符的原始语法描述符。如果 &lt;var&gt;pos&lt;/var&gt; 在缓冲区的可访问部分之外（请参阅&lt;a href=&quot;narrowing#Narrowing&quot;&gt;可访问部分&lt;/a&gt;），则返回值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="74a34822626e03a55fd755b10f41d34f53eb5500" translate="yes" xml:space="preserve">
          <source>This function returns the real</source>
          <target state="translated">该函数返回实数</target>
        </trans-unit>
        <trans-unit id="67fd76c8c142c992772cdd9f22086eb3ccdd2852" translate="yes" xml:space="preserve">
          <source>This function returns the remapping for &lt;var&gt;command&lt;/var&gt; (a symbol), given the current active keymaps. If &lt;var&gt;command&lt;/var&gt; is not remapped (which is the usual situation), or not a symbol, the function returns &lt;code&gt;nil&lt;/code&gt;. &lt;code&gt;position&lt;/code&gt; can optionally specify a buffer position or an event position to determine the keymaps to use, as in &lt;code&gt;key-binding&lt;/code&gt;.</source>
          <target state="translated">给定当前活动的键盘映射，此函数返回 &lt;var&gt;command&lt;/var&gt; （符号）的重新映射。如果未重新映射 &lt;var&gt;command&lt;/var&gt; （这是通常的情况）或不是符号，则函数返回 &lt;code&gt;nil&lt;/code&gt; 。 &lt;code&gt;position&lt;/code&gt; 可以选择指定缓冲区位置或事件位置，以确定要使用的键盘映射，如 &lt;code&gt;key-binding&lt;/code&gt; 所示。</target>
        </trans-unit>
        <trans-unit id="1eb065db8c71520c23781e14db5a3e0a581fa8b4" translate="yes" xml:space="preserve">
          <source>This function returns the result of applying &lt;code&gt;seq-concatenate&lt;/code&gt; to the result of applying &lt;var&gt;function&lt;/var&gt; to each element of &lt;var&gt;sequence&lt;/var&gt;. The result is a sequence of type &lt;var&gt;type&lt;/var&gt;, or a list if &lt;var&gt;type&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">该函数返回施加的结果 &lt;code&gt;seq-concatenate&lt;/code&gt; 施加的结果 &lt;var&gt;function&lt;/var&gt; 来的每个元素 &lt;var&gt;sequence&lt;/var&gt; 。结果是类型为 &lt;var&gt;type&lt;/var&gt; 的序列，如果 &lt;var&gt;type&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ,则为列表。</target>
        </trans-unit>
        <trans-unit id="6984800682edff78636a583d856b592eca82d67e" translate="yes" xml:space="preserve">
          <source>This function returns the result of applying &lt;var&gt;function&lt;/var&gt; to each element of &lt;var&gt;sequence&lt;/var&gt; and its index within &lt;var&gt;seq&lt;/var&gt;. The returned value is a list.</source>
          <target state="translated">此函数返回对 &lt;var&gt;seq&lt;/var&gt; 中 &lt;var&gt;sequence&lt;/var&gt; 每个元素及其索引应用 &lt;var&gt;function&lt;/var&gt; 的结果。返回的值是一个列表。</target>
        </trans-unit>
        <trans-unit id="b40304cf5270aa93d7ef32d0504aae2376273ffa" translate="yes" xml:space="preserve">
          <source>This function returns the result of applying &lt;var&gt;function&lt;/var&gt; to each element of &lt;var&gt;sequence&lt;/var&gt;. The returned value is a list.</source>
          <target state="translated">该函数返回将 &lt;var&gt;function&lt;/var&gt; 应用于 &lt;var&gt;sequence&lt;/var&gt; 每个元素的结果。返回的值是一个列表。</target>
        </trans-unit>
        <trans-unit id="4d0b3002813202ca8c6717a05bc6e5b78dbd449d" translate="yes" xml:space="preserve">
          <source>This function returns the result of applying &lt;var&gt;function&lt;/var&gt; to each element of &lt;var&gt;sequences&lt;/var&gt;. The arity (see &lt;a href=&quot;what-is-a-function#What-Is-a-Function&quot;&gt;subr-arity&lt;/a&gt;) of &lt;var&gt;function&lt;/var&gt; must match the number of sequences. Mapping stops at the end of the shortest sequence, and the returned value is a list.</source>
          <target state="translated">此函数返回将 &lt;var&gt;function&lt;/var&gt; 应用于 &lt;var&gt;sequences&lt;/var&gt; 每个元素的结果。 &lt;var&gt;function&lt;/var&gt; 的arity（请参见&lt;a href=&quot;what-is-a-function#What-Is-a-Function&quot;&gt;subr-arity&lt;/a&gt;）必须匹配序列数。映射在最短序列的末尾停止，返回的值是一个列表。</target>
        </trans-unit>
        <trans-unit id="cb6e9c0e6cf8f1a4dd8133b084e6124a944d236d" translate="yes" xml:space="preserve">
          <source>This function returns the result of calling &lt;var&gt;function&lt;/var&gt; with &lt;var&gt;initial-value&lt;/var&gt; and the first element of &lt;var&gt;sequence&lt;/var&gt;, then calling &lt;var&gt;function&lt;/var&gt; with that result and the second element of &lt;var&gt;sequence&lt;/var&gt;, then with that result and the third element of &lt;var&gt;sequence&lt;/var&gt;, etc. &lt;var&gt;function&lt;/var&gt; should be a function of two arguments. If &lt;var&gt;sequence&lt;/var&gt; is empty, this returns &lt;var&gt;initial-value&lt;/var&gt; without calling &lt;var&gt;function&lt;/var&gt;.</source>
          <target state="translated">该函数返回调用的结果 &lt;var&gt;function&lt;/var&gt; 用 &lt;var&gt;initial-value&lt;/var&gt; 和的第一个元素 &lt;var&gt;sequence&lt;/var&gt; ，然后调用 &lt;var&gt;function&lt;/var&gt; 与该结果和第二元件 &lt;var&gt;sequence&lt;/var&gt; ，然后用该结果和的第三个元素 &lt;var&gt;sequence&lt;/var&gt; 等 &lt;var&gt;function&lt;/var&gt; 应该是一个功能两个论点。如果 &lt;var&gt;sequence&lt;/var&gt; 为空，则不调用 &lt;var&gt;function&lt;/var&gt; 即可返回 &lt;var&gt;initial-value&lt;/var&gt; 。</target>
        </trans-unit>
        <trans-unit id="48a768eb8d2e6505989308b6e5979448243e83e5" translate="yes" xml:space="preserve">
          <source>This function returns the result of comparing &lt;var&gt;string1&lt;/var&gt; and &lt;var&gt;string2&lt;/var&gt; in the opposite order, i.e., it is equivalent to calling &lt;code&gt;(string-lessp &lt;var&gt;string2&lt;/var&gt; &lt;var&gt;string1&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">此函数以相反的顺序返回比较 &lt;var&gt;string1&lt;/var&gt; 和 &lt;var&gt;string2&lt;/var&gt; 的结果，即等效于调用 &lt;code&gt;(string-lessp &lt;var&gt;string2&lt;/var&gt; &lt;var&gt;string1&lt;/var&gt;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="141716c6cb4d38a552c3663bc6506ddaad7f5406" translate="yes" xml:space="preserve">
          <source>This function returns the root window for &lt;var&gt;frame-or-window&lt;/var&gt;. The argument &lt;var&gt;frame-or-window&lt;/var&gt; should be either a window or a frame; if omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected frame. If &lt;var&gt;frame-or-window&lt;/var&gt; is a window, the return value is the root window of that window&amp;rsquo;s frame.</source>
          <target state="translated">此函数返回 &lt;var&gt;frame-or-window&lt;/var&gt; 的根窗口。参数 &lt;var&gt;frame-or-window&lt;/var&gt; 应该是窗口或框架。如果省略或为 &lt;code&gt;nil&lt;/code&gt; ，则默认为选定的帧。如果 &lt;var&gt;frame-or-window&lt;/var&gt; 是一个窗口，则返回值为该窗口框架的根窗口。</target>
        </trans-unit>
        <trans-unit id="0ed76f0c99a1e2324ca577f7b559fe060d2311a3" translate="yes" xml:space="preserve">
          <source>This function returns the selected frame at the last time window change functions were run.</source>
          <target state="translated">该函数返回上次运行窗口变化函数时的选定帧。</target>
        </trans-unit>
        <trans-unit id="2e3343871729ff83c83f6caf038d96ab623bf473" translate="yes" xml:space="preserve">
          <source>This function returns the selected frame.</source>
          <target state="translated">该函数返回所选框架。</target>
        </trans-unit>
        <trans-unit id="a78fa205d7c57d2e8e999dbb4c9a8e97b1c83073" translate="yes" xml:space="preserve">
          <source>This function returns the selected window (which is always a live window).</source>
          <target state="translated">该函数返回所选窗口(始终是一个实时窗口)。</target>
        </trans-unit>
        <trans-unit id="488e85bb1ba9abfaee8bdbe7fa72b0b2188a3f80" translate="yes" xml:space="preserve">
          <source>This function returns the selected window at the last time window change functions were run.</source>
          <target state="translated">该函数返回上次运行窗口变化函数时的选定窗口。</target>
        </trans-unit>
        <trans-unit id="bf11dab22c23c9cefe5c54760ace13d0e14dae6c" translate="yes" xml:space="preserve">
          <source>This function returns the selected window of &lt;var&gt;frame&lt;/var&gt; at the last time window change functions were run. If omitted or &lt;code&gt;nil&lt;/code&gt;&lt;var&gt;frame&lt;/var&gt; defaults to the selected frame.</source>
          <target state="translated">该函数在上次运行窗口更改功能时返回选定的 &lt;var&gt;frame&lt;/var&gt; 窗口。如果省略或 &lt;code&gt;nil&lt;/code&gt; &lt;var&gt;frame&lt;/var&gt; 默认为所选择的帧。</target>
        </trans-unit>
        <trans-unit id="aa29a17048358f44e3e209a4be405cea5db98def" translate="yes" xml:space="preserve">
          <source>This function returns the sentinel of &lt;var&gt;process&lt;/var&gt;.</source>
          <target state="translated">此函数返回 &lt;var&gt;process&lt;/var&gt; 的标记。</target>
        </trans-unit>
        <trans-unit id="575b6af8bf428b8470217b32bc5bcffce732e09a" translate="yes" xml:space="preserve">
          <source>This function returns the size of an image as a pair &lt;code&gt;(&lt;var&gt;width&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;height&lt;/var&gt;)&lt;/code&gt;. &lt;var&gt;spec&lt;/var&gt; is an image specification. &lt;var&gt;pixels&lt;/var&gt; non-&lt;code&gt;nil&lt;/code&gt; means return sizes measured in pixels, otherwise return sizes measured in the default character size of &lt;var&gt;frame&lt;/var&gt; (see &lt;a href=&quot;frame-font#Frame-Font&quot;&gt;Frame Font&lt;/a&gt;). &lt;var&gt;frame&lt;/var&gt; is the frame on which the image will be displayed. &lt;var&gt;frame&lt;/var&gt;&lt;code&gt;nil&lt;/code&gt; or omitted means use the selected frame (see &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;).</source>
          <target state="translated">此函数返回成对的图像大小 &lt;code&gt;(&lt;var&gt;width&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;height&lt;/var&gt;)&lt;/code&gt; 。 &lt;var&gt;spec&lt;/var&gt; 是图像规范。 &lt;var&gt;pixels&lt;/var&gt; non- &lt;code&gt;nil&lt;/code&gt; 表示返回尺寸（以像素为单位），否则返回尺寸以 &lt;var&gt;frame&lt;/var&gt; 的默认字符尺寸为单位（请参见&lt;a href=&quot;frame-font#Frame-Font&quot;&gt;Frame Font&lt;/a&gt;）。 &lt;var&gt;frame&lt;/var&gt; 是将在其上显示图像的帧。 &lt;var&gt;frame&lt;/var&gt; &lt;code&gt;nil&lt;/code&gt; 或省略表示使用选定的帧（请参阅&lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="7bf9fca9c59fce128003763f5b6825de8d5b9773" translate="yes" xml:space="preserve">
          <source>This function returns the size of the text of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s buffer in pixels. &lt;var&gt;window&lt;/var&gt; must be a live window and defaults to the selected one. The return value is a cons of the maximum pixel-width of any text line and the maximum pixel-height of all text lines. This function exists to allow Lisp programs to adjust the dimensions of &lt;var&gt;window&lt;/var&gt; to the buffer text it needs to display.</source>
          <target state="translated">此函数返回以像素为单位的 &lt;var&gt;window&lt;/var&gt; 缓冲区文本的大小。 &lt;var&gt;window&lt;/var&gt; 必须是活动窗口，并且默认为选定的窗口。返回值是任何文本行的最大像素宽度和所有文本行的最大像素高度的缺点。存在此功能是为了允许Lisp程序将 &lt;var&gt;window&lt;/var&gt; 的尺寸调整为需要显示的缓冲区文本。</target>
        </trans-unit>
        <trans-unit id="baba65332b639509864f04464608307119b9c9bd" translate="yes" xml:space="preserve">
          <source>This function returns the smallest element of &lt;var&gt;sequence&lt;/var&gt;. The elements of &lt;var&gt;sequence&lt;/var&gt; must be numbers or markers (see &lt;a href=&quot;markers#Markers&quot;&gt;Markers&lt;/a&gt;).</source>
          <target state="translated">此函数返回 &lt;var&gt;sequence&lt;/var&gt; 的最小元素。 &lt;var&gt;sequence&lt;/var&gt; 的元素必须是数字或标记（请参见&lt;a href=&quot;markers#Markers&quot;&gt;标记&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="e455a3ba3ddec8e39ba478b6a7bc8c2ef5eca654" translate="yes" xml:space="preserve">
          <source>This function returns the smallest of its arguments.</source>
          <target state="translated">此函数返回其参数中最小的一个。</target>
        </trans-unit>
        <trans-unit id="c5270baa12bca1c58f69d00b66388e6890124044" translate="yes" xml:space="preserve">
          <source>This function returns the specified property of the coding system &lt;var&gt;coding-system&lt;/var&gt;. Most coding system properties exist for internal purposes, but one that you might find useful is &lt;code&gt;:mime-charset&lt;/code&gt;. That property&amp;rsquo;s value is the name used in MIME for the character coding which this coding system can read and write. Examples:</source>
          <target state="translated">此函数返回编码系统 &lt;var&gt;coding-system&lt;/var&gt; 的指定属性。存在大多数编码系统属性是出于内部目的，但是您可能会发现有用的一个属性是 &lt;code&gt;:mime-charset&lt;/code&gt; 。该属性的值是MIME中用于此编码系统可以读取和写入的字符编码的名称。例子：</target>
        </trans-unit>
        <trans-unit id="bf8f556fbe00a131391be8e655f6b8e0f8d91c7d" translate="yes" xml:space="preserve">
          <source>This function returns the standard category table.</source>
          <target state="translated">该函数返回标准类别表。</target>
        </trans-unit>
        <trans-unit id="3fff60491da7734fd5f4efa8f77cabd606b6822f" translate="yes" xml:space="preserve">
          <source>This function returns the standard syntax table, which is the syntax table used in Fundamental mode.</source>
          <target state="translated">该函数返回标准语法表,也就是Fundamental模式下使用的语法表。</target>
        </trans-unit>
        <trans-unit id="bd0685a92700e4ab6399754fb24286c85b300602" translate="yes" xml:space="preserve">
          <source>This function returns the state of &lt;var&gt;window&lt;/var&gt; as a Lisp object. The argument &lt;var&gt;window&lt;/var&gt; must be a valid window and defaults to the root window of the selected frame.</source>
          <target state="translated">此函数以Lisp对象的形式返回 &lt;var&gt;window&lt;/var&gt; 的状态。参数 &lt;var&gt;window&lt;/var&gt; 必须是有效窗口，并且默认为所选框架的根窗口。</target>
        </trans-unit>
        <trans-unit id="fde87618b1d109e8f8df00cd96d34800bc9cf165" translate="yes" xml:space="preserve">
          <source>This function returns the status of &lt;var&gt;process-name&lt;/var&gt; as a symbol. The argument &lt;var&gt;process-name&lt;/var&gt; must be a process, a buffer, or a process name (a string).</source>
          <target state="translated">此函数以符号形式返回 &lt;var&gt;process-name&lt;/var&gt; 的状态。参数 &lt;var&gt;process-name&lt;/var&gt; 必须是进程，缓冲区或进程名称（字符串）。</target>
        </trans-unit>
        <trans-unit id="8eb668897379aa1f57b2357f159b017dc88bc2d2" translate="yes" xml:space="preserve">
          <source>This function returns the string that &lt;var&gt;abbrev&lt;/var&gt; would expand into (as defined by the abbrev tables used for the current buffer). It returns &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;abbrev&lt;/var&gt; is not a valid abbrev. The optional argument &lt;var&gt;table&lt;/var&gt; specifies the abbrev table to use, as in &lt;code&gt;abbrev-symbol&lt;/code&gt;.</source>
          <target state="translated">此函数返回 &lt;var&gt;abbrev&lt;/var&gt; 扩展成的字符串（由用于当前缓冲区的abbrev表定义）。如果 &lt;var&gt;abbrev&lt;/var&gt; 不是有效的缩写，则返回 &lt;code&gt;nil&lt;/code&gt; 。可选参数 &lt;var&gt;table&lt;/var&gt; 指定abbrev表，如 &lt;code&gt;abbrev-symbol&lt;/code&gt; 所示。</target>
        </trans-unit>
        <trans-unit id="8fee82bbc64693f6d45b44124c4434328f9b7114" translate="yes" xml:space="preserve">
          <source>This function returns the string that is &lt;var&gt;symbol&lt;/var&gt;&amp;rsquo;s name. For example:</source>
          <target state="translated">此函数返回作为 &lt;var&gt;symbol&lt;/var&gt; 名称的字符串。例如：</target>
        </trans-unit>
        <trans-unit id="e374fdab3c64fc23444fe9f43726b87a1b7149ea" translate="yes" xml:space="preserve">
          <source>This function returns the subtype symbol of &lt;var&gt;char-table&lt;/var&gt;.</source>
          <target state="translated">此函数返回 &lt;var&gt;char-table&lt;/var&gt; 的子类型symbol 。</target>
        </trans-unit>
        <trans-unit id="014a1e87b9b71d8e4c15f523944e5655e0260a25" translate="yes" xml:space="preserve">
          <source>This function returns the symbol (or word) at or near point, as a string. The return value includes no text properties.</source>
          <target state="translated">此函数以字符串形式返回点或点附近的符号(或单词)。返回值不包含文本属性。</target>
        </trans-unit>
        <trans-unit id="01afb565b2c3314e46b9c173761bd6837dfe1a60" translate="yes" xml:space="preserve">
          <source>This function returns the symbol &lt;code&gt;network&lt;/code&gt; for a network connection or server, &lt;code&gt;serial&lt;/code&gt; for a serial port connection, &lt;code&gt;pipe&lt;/code&gt; for a pipe connection, or &lt;code&gt;real&lt;/code&gt; for a subprocess created for running a program.</source>
          <target state="translated">对于网络连接或服务器，此函数返回符号 &lt;code&gt;network&lt;/code&gt; ；对于串行端口连接，返回符号 &lt;code&gt;serial&lt;/code&gt; ；对于管道连接，返回符号 &lt;code&gt;pipe&lt;/code&gt; 对于为运行程序而创建的子进程，返回 &lt;code&gt;real&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2e80a18fe11eca475dded9bf270fa71d5ebbc7e5" translate="yes" xml:space="preserve">
          <source>This function returns the symbol in &lt;var&gt;obarray&lt;/var&gt; whose name is &lt;var&gt;name&lt;/var&gt;, or &lt;code&gt;nil&lt;/code&gt; if &lt;var&gt;obarray&lt;/var&gt; has no symbol with that name. Therefore, you can use &lt;code&gt;intern-soft&lt;/code&gt; to test whether a symbol with a given name is already interned. If &lt;var&gt;obarray&lt;/var&gt; is omitted, the value of the global variable &lt;code&gt;obarray&lt;/code&gt; is used.</source>
          <target state="translated">该函数返回的符号 &lt;var&gt;obarray&lt;/var&gt; 名字是 &lt;var&gt;name&lt;/var&gt; ，或者 &lt;code&gt;nil&lt;/code&gt; 如果 &lt;var&gt;obarray&lt;/var&gt; 有该名称的符号。因此，您可以使用 &lt;code&gt;intern-soft&lt;/code&gt; 来测试具有给定名称的符号是否已经被嵌入。如果 &lt;var&gt;obarray&lt;/var&gt; 被省略，全局变量的值 &lt;code&gt;obarray&lt;/code&gt; 使用。</target>
        </trans-unit>
        <trans-unit id="79b7857cdc527649313d7cfd9af9ee5c137d4cfb" translate="yes" xml:space="preserve">
          <source>This function returns the symbol representing the abbrev named &lt;var&gt;abbrev&lt;/var&gt;. It returns &lt;code&gt;nil&lt;/code&gt; if that abbrev is not defined. The optional second argument &lt;var&gt;table&lt;/var&gt; is the abbrev table in which to look it up. If &lt;var&gt;table&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this function tries first the current buffer&amp;rsquo;s local abbrev table, and second the global abbrev table.</source>
          <target state="translated">此函数返回表示缩写的符号 &lt;var&gt;abbrev&lt;/var&gt; 。如果未定义该缩写，则返回 &lt;code&gt;nil&lt;/code&gt; 。可选的第二个参数 &lt;var&gt;table&lt;/var&gt; 是在其中查找的缩写表。如果 &lt;var&gt;table&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，此函数将首先尝试当前缓冲区的本地缩写表，然后再尝试全局缩写表。</target>
        </trans-unit>
        <trans-unit id="506f11ebcfb0610719eb5dbc25984d8632145ffe" translate="yes" xml:space="preserve">
          <source>This function returns the syntax class of &lt;var&gt;character&lt;/var&gt;, represented by its designator character (see &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;Syntax Class Table&lt;/a&gt;). This returns &lt;em&gt;only&lt;/em&gt; the class, not its matching character or syntax flags.</source>
          <target state="translated">此函数返回 &lt;var&gt;character&lt;/var&gt; 的语法类，由其指定字符表示（请参见&lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;语法类表&lt;/a&gt;）。这&lt;em&gt;仅&lt;/em&gt;返回该类，而不返回其匹配字符或语法标志。</target>
        </trans-unit>
        <trans-unit id="d5ed778893daaa0f27537ba9f0db1388c2eb6b5e" translate="yes" xml:space="preserve">
          <source>This function returns the syntax code for the raw syntax descriptor &lt;var&gt;syntax&lt;/var&gt;. More precisely, it takes the raw syntax descriptor&amp;rsquo;s &lt;var&gt;syntax-code&lt;/var&gt; component, masks off the high 16 bits which record the syntax flags, and returns the resulting integer.</source>
          <target state="translated">此函数返回原始语法描述符 &lt;var&gt;syntax&lt;/var&gt; 的语法代码。更准确地说，它采用原始语法描述符的 &lt;var&gt;syntax-code&lt;/var&gt; 组件，屏蔽记录语法标志的高16位，并返回结果整数。</target>
        </trans-unit>
        <trans-unit id="a733feeb562aa00bfc558bc6f43c759ef9b2d4e9" translate="yes" xml:space="preserve">
          <source>This function returns the terminal name that &lt;var&gt;process&lt;/var&gt; is using for its communication with Emacs&amp;mdash;or &lt;code&gt;nil&lt;/code&gt; if it is using pipes instead of a pty (see &lt;code&gt;process-connection-type&lt;/code&gt; in &lt;a href=&quot;asynchronous-processes#Asynchronous-Processes&quot;&gt;Asynchronous Processes&lt;/a&gt;). If &lt;var&gt;process&lt;/var&gt; represents a program running on a remote host, the terminal name used by that program on the remote host is provided as process property &lt;code&gt;remote-tty&lt;/code&gt;. If &lt;var&gt;process&lt;/var&gt; represents a network, serial, or pipe connection, the value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">该函数返回终端名称 &lt;var&gt;process&lt;/var&gt; 正在使用其使用Emacs-或通信 &lt;code&gt;nil&lt;/code&gt; 如果使用管道而不是一个PTY（参见 &lt;code&gt;process-connection-type&lt;/code&gt; 在&lt;a href=&quot;asynchronous-processes#Asynchronous-Processes&quot;&gt;异步进程&lt;/a&gt;）。如果 &lt;var&gt;process&lt;/var&gt; 表示在远程主机上运行的程序，则该程序在远程主机上使用的终端名将作为进程属性 &lt;code&gt;remote-tty&lt;/code&gt; 提供。如果 &lt;var&gt;process&lt;/var&gt; 表示网络，串行或管道连接，则值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="68c99cec9f11f0295ef8ad2a7e673421afd90709" translate="yes" xml:space="preserve">
          <source>This function returns the terminal object that displays &lt;var&gt;frame&lt;/var&gt;. If &lt;var&gt;frame&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or unspecified, it defaults to the selected frame.</source>
          <target state="translated">此函数返回显示 &lt;var&gt;frame&lt;/var&gt; 的终端对象。如果 &lt;var&gt;frame&lt;/var&gt; 为 &lt;code&gt;nil&lt;/code&gt; 或未指定，则默认为选定的帧。</target>
        </trans-unit>
        <trans-unit id="ee06a386876a13ad3484f4b0231197457d3f6fe5" translate="yes" xml:space="preserve">
          <source>This function returns the text that would be inserted into the buffer by &lt;code&gt;replace-match&lt;/code&gt;, but without modifying the buffer. It is useful if you want to present the user with actual replacement result, with constructs like &amp;lsquo;</source>
          <target state="translated">该函数返回将通过 &lt;code&gt;replace-match&lt;/code&gt; 插入缓冲区的文本，但不修改缓冲区。如果您想向用户提供实际的替换结果，例如&amp;ldquo;</target>
        </trans-unit>
        <trans-unit id="1d13304ad3475dee6f7218c1f54ba4ed578e98cb" translate="yes" xml:space="preserve">
          <source>This function returns the timer responsible for animating &lt;var&gt;image&lt;/var&gt;, if there is one.</source>
          <target state="translated">如果有动画，此函数返回负责动画 &lt;var&gt;image&lt;/var&gt; 的计时器。</target>
        </trans-unit>
        <trans-unit id="9ec50794f2299715bd1f75399d93dbb2b8dca64c" translate="yes" xml:space="preserve">
          <source>This function returns the title of &lt;var&gt;xwidget&lt;/var&gt; as a string.</source>
          <target state="translated">此函数以字符串形式返回 &lt;var&gt;xwidget&lt;/var&gt; 的标题。</target>
        </trans-unit>
        <trans-unit id="e72994ba77b0027fc348ea26230fed89690ab736" translate="yes" xml:space="preserve">
          <source>This function returns the top frame on &lt;var&gt;terminal&lt;/var&gt;. &lt;var&gt;terminal&lt;/var&gt; should be a terminal object, a frame (meaning that frame&amp;rsquo;s terminal), or &lt;code&gt;nil&lt;/code&gt; (meaning the selected frame&amp;rsquo;s terminal). If it does not refer to a text terminal, the return value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">此函数返回 &lt;var&gt;terminal&lt;/var&gt; 上的第一帧。 &lt;var&gt;terminal&lt;/var&gt; 应该是一个终端对象，一个框架（表示该框架的终端）或 &lt;code&gt;nil&lt;/code&gt; （表示所选框架的终端）。如果未引用文本终端，则返回值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dc7d99e1aaf6e340edc4acf0f84df738d01806b2" translate="yes" xml:space="preserve">
          <source>This function returns the topmost child window of &lt;var&gt;window&lt;/var&gt;, if &lt;var&gt;window&lt;/var&gt; is an internal window whose children form a vertical combination. For any other type of window, the return value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">该函数返回的最顶层子窗口 &lt;var&gt;window&lt;/var&gt; ，如果 &lt;var&gt;window&lt;/var&gt; 是一个内部的窗口，其子女形成垂直组合。对于任何其他类型的窗口，返回值为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="991cf23576f8717f6b1a4093ff26f0470bfba220" translate="yes" xml:space="preserve">
          <source>This function returns the total height of window &lt;var&gt;window&lt;/var&gt; in pixels. &lt;var&gt;window&lt;/var&gt; must be a valid window and defaults to the selected one.</source>
          <target state="translated">该函数返回窗口的总高度 &lt;var&gt;window&lt;/var&gt; 以像素为单位。 &lt;var&gt;window&lt;/var&gt; 必须是有效窗口，并且默认为所选窗口。</target>
        </trans-unit>
        <trans-unit id="9837cff5654abc3142fc72784e1e1533e7924252" translate="yes" xml:space="preserve">
          <source>This function returns the total height, in lines, of the window &lt;var&gt;window&lt;/var&gt;. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window. If &lt;var&gt;window&lt;/var&gt; is an internal window, the return value is the total height occupied by its descendant windows.</source>
          <target state="translated">此函数以行为单位返回window &lt;var&gt;window&lt;/var&gt; 的总高度。如果 &lt;var&gt;window&lt;/var&gt; 省略或为 &lt;code&gt;nil&lt;/code&gt; ，则默认为所选窗口。如果 &lt;var&gt;window&lt;/var&gt; 是内部窗口，则返回值是其后代窗口占用的总高度。</target>
        </trans-unit>
        <trans-unit id="af92f09f61a2a2ace37586e796e1f6b02c507f74" translate="yes" xml:space="preserve">
          <source>This function returns the total leftward horizontal scrolling of &lt;var&gt;window&lt;/var&gt;&amp;mdash;the number of columns by which the text in &lt;var&gt;window&lt;/var&gt; is scrolled left past the left margin. (In right-to-left paragraphs, the value is the total amount of the rightward scrolling instead.) The default for &lt;var&gt;window&lt;/var&gt; is the selected window.</source>
          <target state="translated">此函数返回的总的向左水平滚动 &lt;var&gt;window&lt;/var&gt; ，通过该文本列-the数目 &lt;var&gt;window&lt;/var&gt; 被滚动离开过去的左边距。（在从右到左的段落中，该值是向右滚动的总数。） &lt;var&gt;window&lt;/var&gt; 的默认值为所选窗口。</target>
        </trans-unit>
        <trans-unit id="da7cc35c84dcdc428c0ed81fef065ca43c08c5f7" translate="yes" xml:space="preserve">
          <source>This function returns the total length of the data in &lt;var&gt;struct&lt;/var&gt;, according to &lt;var&gt;spec&lt;/var&gt;.</source>
          <target state="translated">根据 &lt;var&gt;spec&lt;/var&gt; ，此函数返回 &lt;var&gt;struct&lt;/var&gt; 中数据的总长度。</target>
        </trans-unit>
        <trans-unit id="610ddc84e1cb4acd497dc79b8ae0443b8749e4ad" translate="yes" xml:space="preserve">
          <source>This function returns the total number of characters in the current buffer. In the absence of any narrowing (see &lt;a href=&quot;narrowing#Narrowing&quot;&gt;Narrowing&lt;/a&gt;), &lt;code&gt;point-max&lt;/code&gt; returns a value one larger than this.</source>
          <target state="translated">此函数返回当前缓冲区中的字符总数。在没有任何缩小的情况下（请参见&lt;a href=&quot;narrowing#Narrowing&quot;&gt;Narrowing&lt;/a&gt;）， &lt;code&gt;point-max&lt;/code&gt; 返回的值比该值大一。</target>
        </trans-unit>
        <trans-unit id="643cc59b84332b1e90e5c2b90143c3338c106772" translate="yes" xml:space="preserve">
          <source>This function returns the total number of grouping constructs (parenthesized expressions) in &lt;var&gt;regexp&lt;/var&gt;. This does not include shy groups (see &lt;a href=&quot;regexp-backslash#Regexp-Backslash&quot;&gt;Regexp Backslash&lt;/a&gt;).</source>
          <target state="translated">此函数返回 &lt;var&gt;regexp&lt;/var&gt; 中分组构造（带括号的表达式）的总数。这不包括害羞的组（请参阅&lt;a href=&quot;regexp-backslash#Regexp-Backslash&quot;&gt;Regexp反斜杠&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="67809a457e33587d2bc01ae113e994ac21b78e0a" translate="yes" xml:space="preserve">
          <source>This function returns the total pixel height of &lt;var&gt;window&lt;/var&gt; the last time window change functions found &lt;code&gt;window&lt;/code&gt; live on its frame. It is zero if &lt;code&gt;window&lt;/code&gt; was created after that.</source>
          <target state="translated">该函数返回的总像素高度 &lt;var&gt;window&lt;/var&gt; 的最后时间窗口变函数发现 &lt;code&gt;window&lt;/code&gt; 现场的框架上。如果之后创建 &lt;code&gt;window&lt;/code&gt; ，则为零。</target>
        </trans-unit>
        <trans-unit id="f933eb75b51c0ad7453181aec99bb9cbfff44aeb" translate="yes" xml:space="preserve">
          <source>This function returns the total pixel width of &lt;var&gt;window&lt;/var&gt; the last time window change functions found &lt;code&gt;window&lt;/code&gt; live on its frame. It is zero if &lt;code&gt;window&lt;/code&gt; was created after that.</source>
          <target state="translated">此函数返回的总像素宽度 &lt;var&gt;window&lt;/var&gt; 的最后时间窗口变化函数发现 &lt;code&gt;window&lt;/code&gt; 活其框架上。如果之后创建 &lt;code&gt;window&lt;/code&gt; ，则为零。</target>
        </trans-unit>
        <trans-unit id="084335eb1488040817c8eb73464d18b12ef6ae10" translate="yes" xml:space="preserve">
          <source>This function returns the total width, in columns, of the window &lt;var&gt;window&lt;/var&gt;. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it defaults to the selected window. If &lt;var&gt;window&lt;/var&gt; is internal, the return value is the total width occupied by its descendant windows.</source>
          <target state="translated">此函数返回窗口 &lt;var&gt;window&lt;/var&gt; 的总宽度（以列为单位）。如果 &lt;var&gt;window&lt;/var&gt; 省略或为 &lt;code&gt;nil&lt;/code&gt; ，则默认为所选窗口。如果 &lt;var&gt;window&lt;/var&gt; 是内部窗口，则返回值是其后代窗口占用的总宽度。</target>
        </trans-unit>
        <trans-unit id="54ecdfbf1fb14070f7777d6b1818988ee5ced393" translate="yes" xml:space="preserve">
          <source>This function returns the truename of the file &lt;var&gt;filename&lt;/var&gt;. If the argument is not an absolute file name, this function first expands it against &lt;code&gt;default-directory&lt;/code&gt;.</source>
          <target state="translated">此函数返回文件 &lt;var&gt;filename&lt;/var&gt; 的真实名称。如果参数不是绝对文件名，则此函数首先将其扩展为 &lt;code&gt;default-directory&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a6bf7fa2464282b8298f1b9eadc205e5e94ec2dd" translate="yes" xml:space="preserve">
          <source>This function returns the type of &lt;var&gt;object&lt;/var&gt; as a value that represents a symbol: &lt;code&gt;string&lt;/code&gt; for a string, &lt;code&gt;integer&lt;/code&gt; for an integer, &lt;code&gt;process&lt;/code&gt; for a process, etc. See &lt;a href=&quot;type-predicates#Type-Predicates&quot;&gt;Type Predicates&lt;/a&gt;. You can use &lt;code&gt;intern&lt;/code&gt; and &lt;code&gt;eq&lt;/code&gt; to compare against known type symbols, if your code needs to depend on the object type.</source>
          <target state="translated">此函数以表示符号的值的形式返回 &lt;var&gt;object&lt;/var&gt; 的类型： &lt;code&gt;string&lt;/code&gt; 表示字符串， &lt;code&gt;integer&lt;/code&gt; 表示整数， &lt;code&gt;process&lt;/code&gt; 表示进程，等等。请参见&lt;a href=&quot;type-predicates#Type-Predicates&quot;&gt;Type Predicates&lt;/a&gt;。如果您的代码需要依赖于对象类型，则可以使用 &lt;code&gt;intern&lt;/code&gt; 和 &lt;code&gt;eq&lt;/code&gt; 与已知类型的符号进行比较。</target>
        </trans-unit>
        <trans-unit id="174747fb732ef9b986796acd27c88b38073e9c92" translate="yes" xml:space="preserve">
          <source>This function returns the type of end-of-line (a.k.a. &lt;em&gt;eol&lt;/em&gt;) conversion used by &lt;var&gt;coding-system&lt;/var&gt;. If &lt;var&gt;coding-system&lt;/var&gt; specifies a certain eol conversion, the return value is an integer 0, 1, or 2, standing for &lt;code&gt;unix&lt;/code&gt;, &lt;code&gt;dos&lt;/code&gt;, and &lt;code&gt;mac&lt;/code&gt;, respectively. If &lt;var&gt;coding-system&lt;/var&gt; doesn&amp;rsquo;t specify eol conversion explicitly, the return value is a vector of coding systems, each one with one of the possible eol conversion types, like this:</source>
          <target state="translated">此函数返回 &lt;var&gt;coding-system&lt;/var&gt; 使用的行尾（aka &lt;em&gt;eol&lt;/em&gt;）转换的类型。如果 &lt;var&gt;coding-system&lt;/var&gt; 指定某个eol转换，则返回值为整数0、1或2，分别代表 &lt;code&gt;unix&lt;/code&gt; ， &lt;code&gt;dos&lt;/code&gt; 和 &lt;code&gt;mac&lt;/code&gt; 。如果 &lt;var&gt;coding-system&lt;/var&gt; 未明确指定eol转换，则返回值是编码系统的向量，每个系统都有一种可能的eol转换类型，如下所示：</target>
        </trans-unit>
        <trans-unit id="6655f72c07a3ad936fbd8bd0c56b9522cb3b8676" translate="yes" xml:space="preserve">
          <source>This function returns the user name corresponding to Emacs&amp;rsquo;s real</source>
          <target state="translated">该函数返回对应于Emacs实数的用户名</target>
        </trans-unit>
        <trans-unit id="7f01c6c1964b79c7038722d01418593d6408aa0b" translate="yes" xml:space="preserve">
          <source>This function returns the value of &lt;var&gt;char&lt;/var&gt;&amp;rsquo;s &lt;var&gt;propname&lt;/var&gt; property.</source>
          <target state="translated">此函数返回 &lt;var&gt;char&lt;/var&gt; 的 &lt;var&gt;propname&lt;/var&gt; 属性的值。</target>
        </trans-unit>
        <trans-unit id="bf32bd49d3e76cc464a0af6c15f38aec2532aa7f" translate="yes" xml:space="preserve">
          <source>This function returns the value of &lt;var&gt;charset&lt;/var&gt;s property &lt;var&gt;propname&lt;/var&gt;.</source>
          <target state="translated">此函数返回 &lt;var&gt;charset&lt;/var&gt; 的属性 &lt;var&gt;propname&lt;/var&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="48cd25029c7ea632ff3fff5d0e38df43e0f11c6d" translate="yes" xml:space="preserve">
          <source>This function returns the value of &lt;var&gt;dividend&lt;/var&gt; modulo &lt;var&gt;divisor&lt;/var&gt;; in other words, the remainder after division of &lt;var&gt;dividend&lt;/var&gt; by &lt;var&gt;divisor&lt;/var&gt;, but with the same sign as &lt;var&gt;divisor&lt;/var&gt;. The arguments must be numbers or markers.</source>
          <target state="translated">此函数返回的值 &lt;var&gt;dividend&lt;/var&gt; 模 &lt;var&gt;divisor&lt;/var&gt; ; 换言之，所述的除法后的余数 &lt;var&gt;dividend&lt;/var&gt; 通过 &lt;var&gt;divisor&lt;/var&gt; ，但与相同的符号 &lt;var&gt;divisor&lt;/var&gt; 。参数必须是数字或标记。</target>
        </trans-unit>
        <trans-unit id="f9eb75c6871801ebdb3b775ac8d0a3c0f0c00965" translate="yes" xml:space="preserve">
          <source>This function returns the value of a Lisp float specified by &lt;var&gt;arg&lt;/var&gt;, as a C &lt;code&gt;double&lt;/code&gt; value.</source>
          <target state="translated">此函数返回 &lt;var&gt;arg&lt;/var&gt; 指定的Lisp float的值，作为C的 &lt;code&gt;double&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="3b91128c96423ffbb64c7cb9aeb4a46dc5ce8482" translate="yes" xml:space="preserve">
          <source>This function returns the value of a Lisp integer specified by &lt;var&gt;arg&lt;/var&gt;. The C data type of the return value, &lt;code&gt;intmax_t&lt;/code&gt;, is the widest integer data type supported by the C compiler, typically &lt;code&gt;long&amp;nbsp;long&lt;/code&gt;. If the value of &lt;var&gt;arg&lt;/var&gt; doesn&amp;rsquo;t fit into an &lt;code&gt;intmax_t&lt;/code&gt;, the function signals an error using the error symbol &lt;code&gt;overflow-error&lt;/code&gt;.</source>
          <target state="translated">此函数返回由 &lt;var&gt;arg&lt;/var&gt; 指定的Lisp整数的值。返回值的C数据类型 &lt;code&gt;intmax_t&lt;/code&gt; 是C编译器支持的最宽整数数据类型，通常为 &lt;code&gt;long&amp;nbsp;long&lt;/code&gt; 。如果 &lt;var&gt;arg&lt;/var&gt; 的值不适合 &lt;code&gt;intmax_t&lt;/code&gt; ，则该函数使用错误符号 &lt;code&gt;overflow-error&lt;/code&gt; 发出错误信号。</target>
        </trans-unit>
        <trans-unit id="04a1c9675f6aff58e9694676fce55c5779624c02" translate="yes" xml:space="preserve">
          <source>This function returns the value of point in the current buffer, as an integer.</source>
          <target state="translated">该函数以整数形式返回当前缓冲区中点的值。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
