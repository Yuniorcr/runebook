<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="scikit_learn">
    <body>
      <group id="scikit_learn">
        <trans-unit id="a086385e050ccc48b203bf7e607f648fa6267ad9" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.22: &lt;code&gt;behaviour&lt;/code&gt; parameter will be deprecated in 0.22 and removed in 0.24.</source>
          <target state="translated">从0.22版开始不推荐使用： &lt;code&gt;behaviour&lt;/code&gt; 参数将在0.22 版中弃用，并在0.24版中删除。</target>
        </trans-unit>
        <trans-unit id="6928dc472102cf9e0b544e3858e7c9748b00ab75" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.22: &lt;code&gt;normalize_components&lt;/code&gt; was added and set to &lt;code&gt;False&lt;/code&gt; for backward compatibility. It would be set to &lt;code&gt;True&lt;/code&gt; from 0.22 onwards.</source>
          <target state="translated">从0.22版开始不推荐使用：添加了 &lt;code&gt;normalize_components&lt;/code&gt; 并将其设置为 &lt;code&gt;False&lt;/code&gt; ，以实现向后兼容。从0.22开始将其设置为 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="365ec1668bbeb8b1e9e1a9b39d2d030464207f7c" translate="yes" xml:space="preserve">
          <source>Deprecated, use &lt;code&gt;store_covariance&lt;/code&gt;.</source>
          <target state="translated">已弃用，请使用 &lt;code&gt;store_covariance&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="96d11eb96c416b8a83f5c4552cc8804c08b31dc7" translate="yes" xml:space="preserve">
          <source>Depth to stop the search - only paths of length &amp;lt;= cutoff are returned.</source>
          <target state="translated">停止搜索的深度-仅返回长度&amp;lt;=截止的路径。</target>
        </trans-unit>
        <trans-unit id="a9432c563991d7ab6cb3eb7e5d8977b5dbe1af43" translate="yes" xml:space="preserve">
          <source>Description of the California housing dataset.</source>
          <target state="translated">加利福尼亚州住房数据集的说明。</target>
        </trans-unit>
        <trans-unit id="a4337cc3cbb9b00c1b32dd3d3ff1a01362ea6531" translate="yes" xml:space="preserve">
          <source>Description of the Labeled Faces in the Wild (LFW) dataset.</source>
          <target state="translated">野生中的标签面孔(LFW)数据集的描述。</target>
        </trans-unit>
        <trans-unit id="59aadb568ffeaff643942dd5c6e34f6995abf353" translate="yes" xml:space="preserve">
          <source>Description of the RCV1 dataset.</source>
          <target state="translated">RCV1数据集的说明:</target>
        </trans-unit>
        <trans-unit id="302d62c3c0045bbed1c7fd3cb7519026ff98f263" translate="yes" xml:space="preserve">
          <source>Description of the forest covertype dataset.</source>
          <target state="translated">森林覆盖类型数据集的说明;</target>
        </trans-unit>
        <trans-unit id="3fc965993f459166dab22876b4cd3d3942e451be" translate="yes" xml:space="preserve">
          <source>Description of the modified Olivetti Faces Dataset.</source>
          <target state="translated">描述修改后的Olivetti面孔数据集。</target>
        </trans-unit>
        <trans-unit id="d5d943fd1b10c148c759eb17b3ec41ecb6571f5a" translate="yes" xml:space="preserve">
          <source>Desired dimensionality of output data. Must be strictly less than the number of features. The default value is useful for visualisation. For LSA, a value of 100 is recommended.</source>
          <target state="translated">输出数据的理想维度。必须严格小于特征的数量。默认值对可视化很有用。对于LSA,建议使用100的值。</target>
        </trans-unit>
        <trans-unit id="22dc66615366024f9ecbe6e5249069ec78f9afd1" translate="yes" xml:space="preserve">
          <source>Desired dtype of output.</source>
          <target state="translated">所希望的产出类型。</target>
        </trans-unit>
        <trans-unit id="f26ffa297dd30b317703dc85fce744a1c7d27fd6" translate="yes" xml:space="preserve">
          <source>Desired number of non-zero entries in the solution. If None (by default) this value is set to 10% of n_features.</source>
          <target state="translated">溶液中非零条目的数量,如果为 &quot;无&quot;(默认情况下),则设置为n_feature的10%。如果没有(默认情况下),这个值被设置为n_features的10%。</target>
        </trans-unit>
        <trans-unit id="540c46167cdc92c7ec7e62b0f001640aea74ee65" translate="yes" xml:space="preserve">
          <source>Desired range of transformed data.</source>
          <target state="translated">转化后数据的理想范围:</target>
        </trans-unit>
        <trans-unit id="a85352b61ebe9e1d40a5081f1ac8be78bacd6cd4" translate="yes" xml:space="preserve">
          <source>Despite being an unbiased estimator of the covariance matrix, the Maximum Likelihood Estimator is not a good estimator of the eigenvalues of the covariance matrix, so the precision matrix obtained from its inversion is not accurate. Sometimes, it even occurs that the empirical covariance matrix cannot be inverted for numerical reasons. To avoid such an inversion problem, a transformation of the empirical covariance matrix has been introduced: the &lt;code&gt;shrinkage&lt;/code&gt;.</source>
          <target state="translated">尽管最大似然估计器是协方差矩阵的无偏估计器，但它并不是协方差矩阵特征值的良好估计器，因此从其求逆获得的精度矩阵并不准确。有时，甚至会发生经验协方差矩阵由于数值原因而无法反转的情况。为了避免这种反演问题，引入了经验协方差矩阵的变换： &lt;code&gt;shrinkage&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="84c6856b8703fe1e4f3d5dbf57e183c565fbd4c7" translate="yes" xml:space="preserve">
          <source>Despite its simplicity, nearest neighbors has been successful in a large number of classification and regression problems, including handwritten digits and satellite image scenes. Being a non-parametric method, it is often successful in classification situations where the decision boundary is very irregular.</source>
          <target state="translated">尽管近邻法很简单,但它已经在大量的分类和回归问题中取得成功,包括手写数字和卫星图像场景。作为一种非参数方法,它通常在决策边界非常不规则的分类情况下取得成功。</target>
        </trans-unit>
        <trans-unit id="fea0eb34eb44c4a14a4648c2632a241b5d477290" translate="yes" xml:space="preserve">
          <source>Detects the soft boundary of the set of samples X.</source>
          <target state="translated">检测样本集X的软边界。</target>
        </trans-unit>
        <trans-unit id="083e51b2972e83f52198c36c815edc2c0ffcdf57" translate="yes" xml:space="preserve">
          <source>Determine scorer from user options.</source>
          <target state="translated">从用户选项中确定得分器。</target>
        </trans-unit>
        <trans-unit id="9b73011914f0bbf471ee973d8f1758f24d38803d" translate="yes" xml:space="preserve">
          <source>Determine the type of data indicated by the target.</source>
          <target state="translated">确定目标所指示的数据类型。</target>
        </trans-unit>
        <trans-unit id="31fef8b822369c9f6365181607b322c7b366604c" translate="yes" xml:space="preserve">
          <source>Determine training and test scores for varying parameter values.</source>
          <target state="translated">确定不同参数值的训练和测试分数。</target>
        </trans-unit>
        <trans-unit id="0d729dcb8b8847482dc9ee2ac91202525aebe11c" translate="yes" xml:space="preserve">
          <source>Determine whether y is monotonically correlated with x.</source>
          <target state="translated">确定y与x是否单调相关。</target>
        </trans-unit>
        <trans-unit id="752a6dbbb3de7da39a2423b310d8d476de8b3a5c" translate="yes" xml:space="preserve">
          <source>Determines cross-validated training and test scores for different training set sizes.</source>
          <target state="translated">确定不同训练集大小的交叉验证训练和测试分数。</target>
        </trans-unit>
        <trans-unit id="539f5059e7cebfb859b626494c3d49f1835e98e5" translate="yes" xml:space="preserve">
          <source>Determines random number generation for centroid initialization and random reassignment. Use an int to make the randomness deterministic. See &lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-random-state&quot;&gt;Glossary&lt;/a&gt;.</source>
          <target state="translated">确定质心初始化和随机重新分配的随机数生成。使用int可以确定随机性。请参阅&lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-random-state&quot;&gt;词汇表&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6b2cbade6021e0c9214a656f2c9a584907645a56" translate="yes" xml:space="preserve">
          <source>Determines random number generation for centroid initialization. Use an int to make the randomness deterministic. See &lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-random-state&quot;&gt;Glossary&lt;/a&gt;.</source>
          <target state="translated">确定质心初始化的随机数生成。使用int可以确定随机性。请参阅&lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-random-state&quot;&gt;词汇表&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9d855e91fa59a4185e12a01509e01384d3865156" translate="yes" xml:space="preserve">
          <source>Determines random number generation for dataset creation. Pass an int for reproducible output across multiple function calls. See &lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-random-state&quot;&gt;Glossary&lt;/a&gt;.</source>
          <target state="translated">确定用于生成数据集的随机数生成。为多个函数调用传递可重复输出的int值。请参阅&lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-random-state&quot;&gt;词汇表&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ed5cbee00b17cec402b03f9aca09aecec1aeae06" translate="yes" xml:space="preserve">
          <source>Determines random number generation for dataset noise. Pass an int for reproducible output across multiple function calls. See &lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-random-state&quot;&gt;Glossary&lt;/a&gt;.</source>
          <target state="translated">确定数据集噪声的随机数生成。为多个函数调用传递可重复输出的int值。请参阅&lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-random-state&quot;&gt;词汇表&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4715872e2549a0d767a02c34f375054f2d63dc4e" translate="yes" xml:space="preserve">
          <source>Determines random number generation for dataset shuffling and for selection of abnormal samples if &lt;code&gt;subset=&amp;rsquo;SA&amp;rsquo;&lt;/code&gt;. Pass an int for reproducible output across multiple function calls. See &lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-random-state&quot;&gt;Glossary&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;code&gt;subset=&amp;rsquo;SA&amp;rsquo;&lt;/code&gt; 确定用于数据集改组和异常样本选择的随机数生成。为多个函数调用传递可重复输出的int值。请参阅&lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-random-state&quot;&gt;词汇表&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7b073b3fb8155dbb51eeb5bd361fd401c8c380e4" translate="yes" xml:space="preserve">
          <source>Determines random number generation for dataset shuffling and noise. Pass an int for reproducible output across multiple function calls. See &lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-random-state&quot;&gt;Glossary&lt;/a&gt;.</source>
          <target state="translated">确定用于数据集改组和噪声的随机数生成。为多个函数调用传递可重复输出的int值。请参阅&lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-random-state&quot;&gt;词汇表&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1f57bcdbc9c5641e158e5cb88693da9a33440f29" translate="yes" xml:space="preserve">
          <source>Determines random number generation for dataset shuffling. Pass an int for reproducible output across multiple function calls. See &lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-random-state&quot;&gt;Glossary&lt;/a&gt;.</source>
          <target state="translated">确定用于数据集改组的随机数生成。为多个函数调用传递可重复输出的int值。请参阅&lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-random-state&quot;&gt;词汇表&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="618e8e72eeac38dd41f11cf93010540cdbddfce8" translate="yes" xml:space="preserve">
          <source>Determines the cross-validation splitting strategy. Possible inputs for cv are:</source>
          <target state="translated">确定交叉验证的分割策略。cv的可能输入是:</target>
        </trans-unit>
        <trans-unit id="b7bcd99fc96696c60a05751661de19a7eaa02e91" translate="yes" xml:space="preserve">
          <source>Determines the multi-class strategy if &lt;code&gt;y&lt;/code&gt; contains more than two classes. &lt;code&gt;&quot;ovr&quot;&lt;/code&gt; trains n_classes one-vs-rest classifiers, while &lt;code&gt;&quot;crammer_singer&quot;&lt;/code&gt; optimizes a joint objective over all classes. While &lt;code&gt;crammer_singer&lt;/code&gt; is interesting from a theoretical perspective as it is consistent, it is seldom used in practice as it rarely leads to better accuracy and is more expensive to compute. If &lt;code&gt;&quot;crammer_singer&quot;&lt;/code&gt; is chosen, the options loss, penalty and dual will be ignored.</source>
          <target state="translated">如果 &lt;code&gt;y&lt;/code&gt; 包含两个以上类别，则确定多类别策略。 &lt;code&gt;&quot;ovr&quot;&lt;/code&gt; ovr &amp;rdquo;训练n_class相对于其余的分类器，而 &lt;code&gt;&quot;crammer_singer&quot;&lt;/code&gt; 优化所有类别上的联合目标。尽管从理论上讲 &lt;code&gt;crammer_singer&lt;/code&gt; 很有趣，因为它是一致的，但实际上很少使用它，因为它很少会导致更好的准确性，并且计算起来更昂贵。如果选择 &lt;code&gt;&quot;crammer_singer&quot;&lt;/code&gt; ，则将忽略选项损失，惩罚和双重。</target>
        </trans-unit>
        <trans-unit id="f5ee5b549dfac8a0efc53a3afbf8b0c1c5765fdc" translate="yes" xml:space="preserve">
          <source>Determines whether the gradient with respect to the kernel hyperparameter is determined.</source>
          <target state="translated">确定是否确定相对于内核超参数的梯度。</target>
        </trans-unit>
        <trans-unit id="c197a75f1bb5b094c92838bd2a72b95a57febd2d" translate="yes" xml:space="preserve">
          <source>Determines whether the gradient with respect to the kernel hyperparameter is determined. Only supported when Y is None.</source>
          <target state="translated">确定是否确定相对于核超参数的梯度。仅当Y为None时支持。</target>
        </trans-unit>
        <trans-unit id="fcd1d64d92404d89148cb48304dc8e0bb18915d8" translate="yes" xml:space="preserve">
          <source>Determines whether to use cross validated predictions or true labels for the results of previous estimators in the chain. If cv is None the true labels are used when fitting. Otherwise possible inputs for cv are:</source>
          <target state="translated">确定在链中使用交叉验证的预测还是真实标签的结果,如果cv为None,则在拟合时使用真实标签。如果cv为None,则拟合时使用真实标签。否则,cv可能的输入是</target>
        </trans-unit>
        <trans-unit id="4c17aadf5117487aab7bc50cbf056caf3977cc31" translate="yes" xml:space="preserve">
          <source>Development</source>
          <target state="translated">Development</target>
        </trans-unit>
        <trans-unit id="fc8e27d98b864e7de0e03a1887f26fd72fbc9cf7" translate="yes" xml:space="preserve">
          <source>Dhillon, I. S. (2001, August). Co-clustering documents and words using bipartite spectral graph partitioning. In Proceedings of the seventh ACM SIGKDD international conference on Knowledge discovery and data mining (pp. 269-274). ACM.</source>
          <target state="translated">Dhillon,I.S.(2001年8月)。Co-clustering documents and words using bipartite spectral graph partitioning.In Proceedings of the seventh ACM SIGKDD international conference on Knowledge discovery and data mining (pp.269-274).ACM.</target>
        </trans-unit>
        <trans-unit id="881ff3dbfdbd63ef1417d3081ca403b0b4df5b89" translate="yes" xml:space="preserve">
          <source>Dhillon, Inderjit S, 2001. &lt;a href=&quot;http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.140.3011&quot;&gt;Co-clustering documents and words using bipartite spectral graph partitioning&lt;/a&gt;.</source>
          <target state="translated">Dhillon，Inderjit S，2001年。&lt;a href=&quot;http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.140.3011&quot;&gt;使用二部谱图分区对文档和单词进行聚类&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="73b219ea56bed110b57362bd3062da69a114aaee" translate="yes" xml:space="preserve">
          <source>Diabetes dataset</source>
          <target state="translated">糖尿病数据集</target>
        </trans-unit>
        <trans-unit id="35dbbf54a665dd97ff8235622ab7f38a3ff88ca2" translate="yes" xml:space="preserve">
          <source>Diagonal of kernel k(X, X)</source>
          <target state="translated">对角线或内核k(X,X)</target>
        </trans-unit>
        <trans-unit id="66215b9ec758bfb47895542f70f2c02db9d71cdc" translate="yes" xml:space="preserve">
          <source>DiceDistance</source>
          <target state="translated">DiceDistance</target>
        </trans-unit>
        <trans-unit id="40fc822f25151b6b96e2cbd1e40a4088381bbd9b" translate="yes" xml:space="preserve">
          <source>Dict with keywords passed to the &lt;code&gt;matplotlib.pyplot.plot&lt;/code&gt; call. For one-way partial dependence plots.</source>
          <target state="translated">包含传递给 &lt;code&gt;matplotlib.pyplot.plot&lt;/code&gt; 调用的关键字的字典。对于单向偏相关图。</target>
        </trans-unit>
        <trans-unit id="5cd00a2c82939b24a176076f0ef4b1674e67e33a" translate="yes" xml:space="preserve">
          <source>Dict with keywords passed to the &lt;code&gt;matplotlib.pyplot.plot&lt;/code&gt; call. For two-way partial dependence plots.</source>
          <target state="translated">包含传递给 &lt;code&gt;matplotlib.pyplot.plot&lt;/code&gt; 调用的关键字的字典。对于双向偏相关图。</target>
        </trans-unit>
        <trans-unit id="200a88f66f6fb852e71fcc2dd5d605315b0775c0" translate="yes" xml:space="preserve">
          <source>Dict with keywords passed to the figure() call. Note that all keywords not recognized above will be automatically included here.</source>
          <target state="translated">包含传递给 figure()调用的关键字的 Dict。请注意,所有上面没有识别的关键字都会自动包含在这里。</target>
        </trans-unit>
        <trans-unit id="2861d30aed34a2c42e0b2b23109c2dd396fb41e7" translate="yes" xml:space="preserve">
          <source>Dict(s) or Mapping(s) from feature names (arbitrary Python objects) to feature values (strings or convertible to dtype).</source>
          <target state="translated">Dict(s)或 Mapping(s)从特征名 (任意 Python 对象)到特征值 (字符串或可转换为 dtype)。</target>
        </trans-unit>
        <trans-unit id="87afea8edcdf0ea2ca0068629a95339c3bb26469" translate="yes" xml:space="preserve">
          <source>Dictionary learning</source>
          <target state="translated">字典学习</target>
        </trans-unit>
        <trans-unit id="023e6f50f5ffff1cc1ddaa40da5b9a84e06d66a3" translate="yes" xml:space="preserve">
          <source>Dictionary learning (&lt;a href=&quot;generated/sklearn.decomposition.dictionarylearning#sklearn.decomposition.DictionaryLearning&quot;&gt;&lt;code&gt;DictionaryLearning&lt;/code&gt;&lt;/a&gt;) is a matrix factorization problem that amounts to finding a (usually overcomplete) dictionary that will perform well at sparsely encoding the fitted data.</source>
          <target state="translated">字典学习（&lt;a href=&quot;generated/sklearn.decomposition.dictionarylearning#sklearn.decomposition.DictionaryLearning&quot;&gt; &lt;code&gt;DictionaryLearning&lt;/code&gt; &lt;/a&gt;）是一个矩阵分解问题，相当于找到一个（通常是不完整的）字典，该字典在对拟合数据进行稀疏编码时会表现良好。</target>
        </trans-unit>
        <trans-unit id="4dd375c68011ebe1655ae27a38fc9a1f10fbb210" translate="yes" xml:space="preserve">
          <source>Dictionary learning is an optimization problem solved by alternatively updating the sparse code, as a solution to multiple Lasso problems, considering the dictionary fixed, and then updating the dictionary to best fit the sparse code.</source>
          <target state="translated">字典学习是通过交替更新稀疏代码来解决的优化问题,作为多个Lasso问题的解决方案,考虑到字典固定,然后更新字典,使之最适合稀疏代码。</target>
        </trans-unit>
        <trans-unit id="323a4eda5ff544d76fedc285ff6d82ce76932dce" translate="yes" xml:space="preserve">
          <source>Dictionary of additional keyword arguments to pass to func.</source>
          <target state="translated">传递给func的附加关键字参数的字典。</target>
        </trans-unit>
        <trans-unit id="7537a8c0d4585f2f96b7424f9c0b4b9a6eb4d706" translate="yes" xml:space="preserve">
          <source>Dictionary of additional keyword arguments to pass to inverse_func.</source>
          <target state="translated">要传递给inverse_func的附加关键字参数的字典。</target>
        </trans-unit>
        <trans-unit id="f722a41d31d0dc4a62a5df8fa8aa71b725f458b0" translate="yes" xml:space="preserve">
          <source>Dictionary where the keys are parameters and values are distributions from which a parameter is to be sampled. Distributions either have to provide a &lt;code&gt;rvs&lt;/code&gt; function to sample from them, or can be given as a list of values, where a uniform distribution is assumed.</source>
          <target state="translated">字典，其中的键是参数，值是要从中采样参数的分布。分布要么必须提供 &lt;code&gt;rvs&lt;/code&gt; 函数以从中进行采样，要么可以作为值的列表给出（假定均分布）。</target>
        </trans-unit>
        <trans-unit id="ed388658489c2654bb44977dc7b93525643ae029" translate="yes" xml:space="preserve">
          <source>Dictionary with parameters names (string) as keys and distributions or lists of parameters to try. Distributions must provide a &lt;code&gt;rvs&lt;/code&gt; method for sampling (such as those from scipy.stats.distributions). If a list is given, it is sampled uniformly.</source>
          <target state="translated">以参数名称（字符串）为键的字典，并尝试使用分布或参数列表。发行版必须提供 &lt;code&gt;rvs&lt;/code&gt; 方法进行采样（例如scipy.stats.distributions中的样本）。如果给出列表，则对其进行统一采样。</target>
        </trans-unit>
        <trans-unit id="595d1776c6f51675bdb9815eb326f9ce0b65dd03" translate="yes" xml:space="preserve">
          <source>Dictionary with parameters names (string) as keys and lists of parameter settings to try as values, or a list of such dictionaries, in which case the grids spanned by each dictionary in the list are explored. This enables searching over any sequence of parameter settings.</source>
          <target state="translated">以参数名称(字符串)为键和参数设置列表为值的字典,或者是这样的字典列表,在这种情况下,列表中的每个字典所跨越的网格都会被探索。这样就可以在任何参数设置序列上进行搜索。</target>
        </trans-unit>
        <trans-unit id="71a4a3cd21b70c4ccda0ba6cbe0de3f877d60ecd" translate="yes" xml:space="preserve">
          <source>Dictionary-like object with the following attributes : &amp;lsquo;images&amp;rsquo;, the two sample images, &amp;lsquo;filenames&amp;rsquo;, the file names for the images, and &amp;lsquo;DESCR&amp;rsquo; the full description of the dataset.</source>
          <target state="translated">具有以下属性的类字典对象：&amp;ldquo;图像&amp;rdquo;，两个示例图像，&amp;ldquo;文件名&amp;rdquo;，图像的文件名和&amp;ldquo; DESCR&amp;rdquo;，表示数据集的完整描述。</target>
        </trans-unit>
        <trans-unit id="a5fd9983ff29013eda261ac2775e4eebd9f54f41" translate="yes" xml:space="preserve">
          <source>Dictionary-like object, the interesting attributes are:</source>
          <target state="translated">字典类对象,有趣的属性是。</target>
        </trans-unit>
        <trans-unit id="94f3140db819ebb1175e74ec570541325d76ac69" translate="yes" xml:space="preserve">
          <source>Dictionary-like object, the interesting attributes are: &amp;lsquo;data&amp;rsquo; and &amp;lsquo;targets&amp;rsquo;, the two multivariate datasets, with &amp;lsquo;data&amp;rsquo; corresponding to the exercise and &amp;lsquo;targets&amp;rsquo; corresponding to the physiological measurements, as well as &amp;lsquo;feature_names&amp;rsquo; and &amp;lsquo;target_names&amp;rsquo;. In addition, you will also have access to &amp;lsquo;data_filename&amp;rsquo;, the physical location of linnerud data csv dataset, and &amp;lsquo;target_filename&amp;rsquo;, the physical location of linnerud targets csv datataset (added in version &lt;code&gt;0.20&lt;/code&gt;).</source>
          <target state="translated">类似于字典的对象，有趣的属性是：&amp;ldquo;数据&amp;rdquo;和&amp;ldquo;目标&amp;rdquo;，这是两个多元数据集，其中&amp;ldquo;数据&amp;rdquo;对应于锻炼，&amp;ldquo;目标&amp;rdquo;对应于生理测量值，以及&amp;ldquo;特征名称&amp;rdquo;和&amp;ldquo;目标名称&amp;rdquo; '。此外，您还可以访问linnerud数据csv数据集的物理位置'data_filename'和linnerud目标csv数据集的物理位置'target_filename'（已在版本 &lt;code&gt;0.20&lt;/code&gt; 中添加）。</target>
        </trans-unit>
        <trans-unit id="982f01f7d9eb37554db3e3bb72ef09f0cf12d414" translate="yes" xml:space="preserve">
          <source>Dictionary-like object, the interesting attributes are: &amp;lsquo;data&amp;rsquo;, the data to learn, &amp;lsquo;images&amp;rsquo;, the images corresponding to each sample, &amp;lsquo;target&amp;rsquo;, the classification labels for each sample, &amp;lsquo;target_names&amp;rsquo;, the meaning of the labels, and &amp;lsquo;DESCR&amp;rsquo;, the full description of the dataset.</source>
          <target state="translated">类似于字典的对象，有趣的属性是：&amp;ldquo;数据&amp;rdquo;，要学习的数据，&amp;ldquo;图像&amp;rdquo;，与每个样本对应的图像，&amp;ldquo;目标&amp;rdquo;，每个样本的分类标签，&amp;ldquo; target_names&amp;rdquo;，标签的含义和&amp;ldquo; DESCR&amp;rdquo;，即数据集的完整描述。</target>
        </trans-unit>
        <trans-unit id="7e7baeed9470aae2983f30dd69e59b0d5d16f705" translate="yes" xml:space="preserve">
          <source>Dictionary-like object, the interesting attributes are: &amp;lsquo;data&amp;rsquo;, the data to learn, &amp;lsquo;target&amp;rsquo;, the classification labels, &amp;lsquo;DESCR&amp;rsquo;, the full description of the dataset, and &amp;lsquo;COL_NAMES&amp;rsquo;, the original names of the dataset columns.</source>
          <target state="translated">类似于字典的对象，有趣的属性是：&amp;ldquo;数据&amp;rdquo;，要学习的数据，&amp;ldquo;目标&amp;rdquo;，分类标签，&amp;ldquo; DESCR&amp;rdquo;，数据集的完整描述以及&amp;ldquo; COL_NAMES&amp;rdquo;，数据集列的原始名称。</target>
        </trans-unit>
        <trans-unit id="79f441fdd4254271be2b0c9f2fc0268e68d326a7" translate="yes" xml:space="preserve">
          <source>Dictionary-like object, the interesting attributes are: &amp;lsquo;data&amp;rsquo;, the data to learn, &amp;lsquo;target&amp;rsquo;, the classification labels, &amp;lsquo;target_names&amp;rsquo;, the meaning of the labels, &amp;lsquo;feature_names&amp;rsquo;, the meaning of the features, &amp;lsquo;DESCR&amp;rsquo;, the full description of the dataset, &amp;lsquo;filename&amp;rsquo;, the physical location of iris csv dataset (added in version &lt;code&gt;0.20&lt;/code&gt;).</source>
          <target state="translated">类似于字典的对象，有趣的属性是：&amp;ldquo;数据&amp;rdquo;，要学习的数据，&amp;ldquo;目标&amp;rdquo;，分类标签，&amp;ldquo; target_names&amp;rdquo;，标签的含义，&amp;ldquo; feature_names&amp;rdquo;，功能的含义，&amp;ldquo; DESCR&amp;rdquo; ，数据集的完整描述，&amp;ldquo;文件名&amp;rdquo;，iris csv数据集的物理位置（在版本 &lt;code&gt;0.20&lt;/code&gt; 中添加）。</target>
        </trans-unit>
        <trans-unit id="81ab6ebbd763e0666b19fba1bc1619a924c5fc1d" translate="yes" xml:space="preserve">
          <source>Dictionary-like object, the interesting attributes are: &amp;lsquo;data&amp;rsquo;, the data to learn, &amp;lsquo;target&amp;rsquo;, the classification labels, &amp;lsquo;target_names&amp;rsquo;, the meaning of the labels, &amp;lsquo;feature_names&amp;rsquo;, the meaning of the features, and &amp;lsquo;DESCR&amp;rsquo;, the full description of the dataset, &amp;lsquo;filename&amp;rsquo;, the physical location of breast cancer csv dataset (added in version &lt;code&gt;0.20&lt;/code&gt;).</source>
          <target state="translated">类似于字典的对象，有趣的属性是：&amp;ldquo;数据&amp;rdquo;，要学习的数据，&amp;ldquo;目标&amp;rdquo;，分类标签，&amp;ldquo; target_names&amp;rdquo;，标签的含义，&amp;ldquo; feature_names&amp;rdquo;，功能的含义和&amp;ldquo; DESCR&amp;rdquo; &amp;rdquo;，数据集的完整描述，&amp;ldquo;文件名&amp;rdquo;，乳腺癌csv数据集的物理位置（在版本 &lt;code&gt;0.20&lt;/code&gt; 中添加）。</target>
        </trans-unit>
        <trans-unit id="de4bbc965e74617e26fc170923090f3b749cd0dd" translate="yes" xml:space="preserve">
          <source>Dictionary-like object, the interesting attributes are: &amp;lsquo;data&amp;rsquo;, the data to learn, &amp;lsquo;target&amp;rsquo;, the classification labels, &amp;lsquo;target_names&amp;rsquo;, the meaning of the labels, &amp;lsquo;feature_names&amp;rsquo;, the meaning of the features, and &amp;lsquo;DESCR&amp;rsquo;, the full description of the dataset.</source>
          <target state="translated">类似于字典的对象，有趣的属性是：&amp;ldquo;数据&amp;rdquo;，要学习的数据，&amp;ldquo;目标&amp;rdquo;，分类标签，&amp;ldquo; target_names&amp;rdquo;，标签的含义，&amp;ldquo; feature_names&amp;rdquo;，功能的含义和&amp;ldquo; DESCR&amp;rdquo; '，即数据集的完整说明。</target>
        </trans-unit>
        <trans-unit id="fe0232fadd68df5b6ef131933bd83e7963292cd3" translate="yes" xml:space="preserve">
          <source>Dictionary-like object, the interesting attributes are: &amp;lsquo;data&amp;rsquo;, the data to learn, &amp;lsquo;target&amp;rsquo;, the regression target for each sample, &amp;lsquo;data_filename&amp;rsquo;, the physical location of diabetes data csv dataset, and &amp;lsquo;target_filename&amp;rsquo;, the physical location of diabetes targets csv datataset (added in version &lt;code&gt;0.20&lt;/code&gt;).</source>
          <target state="translated">类似于字典的对象，有趣的属性是：&amp;ldquo;数据&amp;rdquo;，要学习的数据，&amp;ldquo;目标&amp;rdquo;，每个样本的回归目标，&amp;ldquo; data_filename&amp;rdquo;，糖尿病数据csv数据集的物理位置以及&amp;ldquo; target_filename&amp;rdquo;，物理以csv数据集为目标的糖尿病位置（在 &lt;code&gt;0.20&lt;/code&gt; 版中添加）。</target>
        </trans-unit>
        <trans-unit id="72b88cd1f4937c98a6c2564f0d1afedbde681ae3" translate="yes" xml:space="preserve">
          <source>Dictionary-like object, the interesting attributes are: &amp;lsquo;data&amp;rsquo;, the data to learn, &amp;lsquo;target&amp;rsquo;, the regression targets, &amp;lsquo;DESCR&amp;rsquo;, the full description of the dataset, and &amp;lsquo;filename&amp;rsquo;, the physical location of boston csv dataset (added in version &lt;code&gt;0.20&lt;/code&gt;).</source>
          <target state="translated">类似于字典的对象，有趣的属性是：&amp;ldquo;数据&amp;rdquo;，要学习的数据，&amp;ldquo;目标&amp;rdquo;，回归目标，&amp;ldquo; DESCR&amp;rdquo;，数据集的完整描述以及&amp;ldquo;文件名&amp;rdquo;，波士顿CSV数据集的物理位置（在版本 &lt;code&gt;0.20&lt;/code&gt; 中添加）。</target>
        </trans-unit>
        <trans-unit id="420118bbed97b663a7a5b3f441aad7bba503a7d2" translate="yes" xml:space="preserve">
          <source>Dictionary-like object, the interesting attributes are: &amp;lsquo;filenames&amp;rsquo;, the files holding the raw to learn, &amp;lsquo;target&amp;rsquo;, the classification labels (integer index), &amp;lsquo;target_names&amp;rsquo;, the meaning of the labels, and &amp;lsquo;DESCR&amp;rsquo;, the full description of the dataset.</source>
          <target state="translated">类似于字典的对象，有趣的属性是：&amp;ldquo;文件名&amp;rdquo;，保存要学习的原始文件，&amp;ldquo;目标&amp;rdquo;，分类标签（整数索引），&amp;ldquo; target_names&amp;rdquo;，标签的含义以及&amp;ldquo; DESCR&amp;rdquo;，数据集的完整描述。</target>
        </trans-unit>
        <trans-unit id="c350fa308f6827312001728e47b60e5e40926f6f" translate="yes" xml:space="preserve">
          <source>Dictionary-like object, the interesting attributes are: either data, the raw text data to learn, or &amp;lsquo;filenames&amp;rsquo;, the files holding it, &amp;lsquo;target&amp;rsquo;, the classification labels (integer index), &amp;lsquo;target_names&amp;rsquo;, the meaning of the labels, and &amp;lsquo;DESCR&amp;rsquo;, the full description of the dataset.</source>
          <target state="translated">类似于字典的对象，有趣的属性是：数据，要学习的原始文本数据或&amp;ldquo;文件名&amp;rdquo;，保存该文件的文件，&amp;ldquo;目标&amp;rdquo;，分类标签（整数索引），&amp;ldquo; target_names&amp;rdquo;，含义标签和&amp;ldquo; DESCR&amp;rdquo;（数据集的完整说明）。</target>
        </trans-unit>
        <trans-unit id="1ff886c89af0264eb77dd9a3a1d8fc3d756cbe44" translate="yes" xml:space="preserve">
          <source>Dictionary-like object, with attributes:</source>
          <target state="translated">类似字典的对象,有属性。</target>
        </trans-unit>
        <trans-unit id="b0560ed78caed6a99f6f0a001279a6a41850c460" translate="yes" xml:space="preserve">
          <source>Differences from liblinear:</source>
          <target state="translated">与liblinear的区别。</target>
        </trans-unit>
        <trans-unit id="3103da117303f51404f29da186efdc48271ca092" translate="yes" xml:space="preserve">
          <source>Different algorithms can be used to solve the same mathematical problem. For instance the &lt;code&gt;Lasso&lt;/code&gt; object in scikit-learn solves the lasso regression problem using a &lt;a href=&quot;https://en.wikipedia.org/wiki/Coordinate_descent&quot;&gt;coordinate descent&lt;/a&gt; method, that is efficient on large datasets. However, scikit-learn also provides the &lt;a href=&quot;../../modules/generated/sklearn.linear_model.lassolars#sklearn.linear_model.LassoLars&quot;&gt;&lt;code&gt;LassoLars&lt;/code&gt;&lt;/a&gt; object using the &lt;em&gt;LARS&lt;/em&gt; algorithm, which is very efficient for problems in which the weight vector estimated is very sparse (i.e. problems with very few observations).</source>
          <target state="translated">可以使用不同的算法来解决相同的数学问题。例如，scikit-learn中的 &lt;code&gt;Lasso&lt;/code&gt; 对象使用&lt;a href=&quot;https://en.wikipedia.org/wiki/Coordinate_descent&quot;&gt;坐标下降&lt;/a&gt;法解决了套索回归问题，该方法在大型数据集上非常有效。但是，scikit-learn还使用&lt;em&gt;LARS&lt;/em&gt;算法提供了&lt;a href=&quot;../../modules/generated/sklearn.linear_model.lassolars#sklearn.linear_model.LassoLars&quot;&gt; &lt;code&gt;LassoLars&lt;/code&gt; &lt;/a&gt;对象，这对于估计的权重向量非常稀疏的问题（即，观测值很少的问题）非常有效。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4d28fb118ad33b65355f9f74d601e70cf7a8e040" translate="yes" xml:space="preserve">
          <source>Different choices for \(L\) entail different classifiers such as</source>
          <target state="translated">对/(L/L)的不同选择,需要不同的分类器,如</target>
        </trans-unit>
        <trans-unit id="646d666f4ba32de4479a771b841e5a4e8c5f6b59" translate="yes" xml:space="preserve">
          <source>Different estimators are better suited for different types of data and different problems.</source>
          <target state="translated">不同的估算器更适合不同类型的数据和不同的问题。</target>
        </trans-unit>
        <trans-unit id="dfb309c59f1d93c5142226a544791bb403b078e3" translate="yes" xml:space="preserve">
          <source>Different kernels are specified by keyword kernel at initialization:</source>
          <target state="translated">在初始化时用关键字kernel指定不同的内核。</target>
        </trans-unit>
        <trans-unit id="849ce45525e3b18045f9296e635ae1c265e92b16" translate="yes" xml:space="preserve">
          <source>Different label assignment strategies can be used, corresponding to the &lt;code&gt;assign_labels&lt;/code&gt; parameter of &lt;a href=&quot;generated/sklearn.cluster.spectralclustering#sklearn.cluster.SpectralClustering&quot;&gt;&lt;code&gt;SpectralClustering&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;&quot;kmeans&quot;&lt;/code&gt; strategy can match finer details of the data, but it can be more unstable. In particular, unless you control the &lt;code&gt;random_state&lt;/code&gt;, it may not be reproducible from run-to-run, as it depends on a random initialization. On the other hand, the &lt;code&gt;&quot;discretize&quot;&lt;/code&gt; strategy is 100% reproducible, but it tends to create parcels of fairly even and geometrical shape.</source>
          <target state="translated">可以使用与&lt;a href=&quot;generated/sklearn.cluster.spectralclustering#sklearn.cluster.SpectralClustering&quot;&gt; &lt;code&gt;SpectralClustering&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;assign_labels&lt;/code&gt; 参数相对应的不同标签分配策略。在 &lt;code&gt;&quot;kmeans&quot;&lt;/code&gt; 策略能满足数据的更精细的细节，但它可以更不稳定。特别是，除非您控制 &lt;code&gt;random_state&lt;/code&gt; ，否则它可能无法一次运行复制，因为它取决于随机初始化。另一方面， &lt;code&gt;&quot;discretize&quot;&lt;/code&gt; 策略是100％可重现的，但是它倾向于创建相当均匀和几何形状的包裹。</target>
        </trans-unit>
        <trans-unit id="096eb53055331ca141a7b6c43a4cbff3dc8e48f5" translate="yes" xml:space="preserve">
          <source>Digits Classification Exercise</source>
          <target state="translated">数字分类练习</target>
        </trans-unit>
        <trans-unit id="63e6c2a2021859d182299ccaf14f4762357f3c4e" translate="yes" xml:space="preserve">
          <source>Dimension in x axis</source>
          <target state="translated">X轴尺寸</target>
        </trans-unit>
        <trans-unit id="6eaeebf4569edb119f53e266ba3784a2d011ca8c" translate="yes" xml:space="preserve">
          <source>Dimension in y axis</source>
          <target state="translated">y轴的尺寸</target>
        </trans-unit>
        <trans-unit id="83b36b2edbfe0b8e90045515a6570b7e572217b4" translate="yes" xml:space="preserve">
          <source>Dimension in z axis</source>
          <target state="translated">以Z轴为单位的尺寸</target>
        </trans-unit>
        <trans-unit id="e36e2158c2882c11648a00f327ebbdc1863cf2ac" translate="yes" xml:space="preserve">
          <source>Dimension of the embedded space.</source>
          <target state="translated">嵌入空间的尺寸。</target>
        </trans-unit>
        <trans-unit id="2ec5e7616569e9a19068c28d6570bd89ed34b614" translate="yes" xml:space="preserve">
          <source>Dimensionality</source>
          <target state="translated">Dimensionality</target>
        </trans-unit>
        <trans-unit id="d7b1a9c266f34ce614504be6243dc5f067805ba0" translate="yes" xml:space="preserve">
          <source>Dimensionality of latent space, the number of components of &lt;code&gt;X&lt;/code&gt; that are obtained after &lt;code&gt;transform&lt;/code&gt;. If None, n_components is set to the number of features.</source>
          <target state="translated">潜在空间的维数，是 &lt;code&gt;transform&lt;/code&gt; 后获得的 &lt;code&gt;X&lt;/code&gt; 的分量数。如果为None，则将n_components设置为要素数量。</target>
        </trans-unit>
        <trans-unit id="8a5177bc08d43a95921cdb2f650122d557d86d42" translate="yes" xml:space="preserve">
          <source>Dimensionality of the target projection space.</source>
          <target state="translated">目标投影空间的尺寸。</target>
        </trans-unit>
        <trans-unit id="06a0046832d2c8160b25583b8d5fcf1457678420" translate="yes" xml:space="preserve">
          <source>Dimensionality reduction using truncated SVD (aka LSA).</source>
          <target state="translated">使用截断SVD(又名LSA)进行维度降低。</target>
        </trans-unit>
        <trans-unit id="2e9159b3799aed0b3679755cdf9860b060a355a1" translate="yes" xml:space="preserve">
          <source>Discrete SAMME AdaBoost adapts based on errors in predicted class labels whereas real SAMME.R uses the predicted class probabilities.</source>
          <target state="translated">离散的SAMME AdaBoost基于预测类标签的误差进行自适应,而真正的SAMME.R使用预测的类概率。</target>
        </trans-unit>
        <trans-unit id="791f83be7e97fed77cb690a111fa0f474c4ba67f" translate="yes" xml:space="preserve">
          <source>Discrete versus Real AdaBoost</source>
          <target state="translated">离散型与真实型AdaBoost</target>
        </trans-unit>
        <trans-unit id="c9d2b153b47f89d0125358b789c53d963e66822e" translate="yes" xml:space="preserve">
          <source>Discretization is similar to constructing histograms for continuous data. However, histograms focus on counting features which fall into particular bins, whereas discretization focuses on assigning feature values to these bins.</source>
          <target state="translated">分散化类似于为连续数据构建直方图。然而,直方图的重点是对属于特定区域的特征进行计数,而离散化的重点是对这些区域的特征值进行分配。</target>
        </trans-unit>
        <trans-unit id="39d7d42537393d7206e323059d67f698770d68c8" translate="yes" xml:space="preserve">
          <source>Discretizes the data.</source>
          <target state="translated">对数据进行分解。</target>
        </trans-unit>
        <trans-unit id="5ff647459e5f822b9e3d4e902c296576a938bd45" translate="yes" xml:space="preserve">
          <source>Discriminative Methods for Multi-labeled Classification Advances in Knowledge Discovery and Data Mining (2004), pp. 22-30 by Shantanu Godbole, Sunita Sarawagi</source>
          <target state="translated">Discriminative Methods for Multi-labeled Classification Advances in Knowledge Discovery and Data Mining (2004),pp.22-30 by Shantanu Godbole,Sunita Sarawagi.</target>
        </trans-unit>
        <trans-unit id="d53501692a8e527c4d5db44e4d3c09fd8728972b" translate="yes" xml:space="preserve">
          <source>Dispatch more data for parallel processing</source>
          <target state="translated">发送更多数据进行并行处理</target>
        </trans-unit>
        <trans-unit id="1e2c61b8caf7e08bdda68f2e1b8632aef87f004b" translate="yes" xml:space="preserve">
          <source>Display the process of the parallel execution only a fraction of time, controlled by self.verbose.</source>
          <target state="translated">显示并行执行的过程只有一小部分时间,由self.verbose控制。</target>
        </trans-unit>
        <trans-unit id="81567abc4b9f031c2d19a19619f1caf996e2ad47" translate="yes" xml:space="preserve">
          <source>Dissimilarity measure to use:</source>
          <target state="translated">异样度量要用。</target>
        </trans-unit>
        <trans-unit id="8d1cbc21fa6b259351ca546fabcd83bc2e63606b" translate="yes" xml:space="preserve">
          <source>Distance matrices are not supported.</source>
          <target state="translated">不支持距离矩阵。</target>
        </trans-unit>
        <trans-unit id="76ad4b652eecca024bd4781bc36adbbd891b6490" translate="yes" xml:space="preserve">
          <source>Distance metrics are functions &lt;code&gt;d(a, b)&lt;/code&gt; such that &lt;code&gt;d(a, b) &amp;lt; d(a, c)&lt;/code&gt; if objects &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are considered &amp;ldquo;more similar&amp;rdquo; than objects &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;c&lt;/code&gt;. Two objects exactly alike would have a distance of zero. One of the most popular examples is Euclidean distance. To be a &amp;lsquo;true&amp;rsquo; metric, it must obey the following four conditions:</source>
          <target state="translated">距离度量是函数 &lt;code&gt;d(a, b)&lt;/code&gt; ，如果对象 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 被认为比对象 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;c&lt;/code&gt; &amp;ldquo;更相似&amp;rdquo; ，则 &lt;code&gt;d(a, b) &amp;lt; d(a, c)&lt;/code&gt; 。两个完全相同的对象的距离为零。最受欢迎的例子之一是欧几里得距离。要成为&amp;ldquo;真实&amp;rdquo;指标，它必须满足以下四个条件：</target>
        </trans-unit>
        <trans-unit id="3ec78665b60c4ab74aa04c72f56fc6f7c45aff39" translate="yes" xml:space="preserve">
          <source>Distance of the samples X to the separating hyperplane.</source>
          <target state="translated">样品X到分离超平面的距离。</target>
        </trans-unit>
        <trans-unit id="9ca241e7867ca505099e37d7940a64e8bc66878d" translate="yes" xml:space="preserve">
          <source>DistanceMetric class</source>
          <target state="translated">DistanceMetric类</target>
        </trans-unit>
        <trans-unit id="b2df1b93b06a07e105bc57c97dfc3ad35b20a295" translate="yes" xml:space="preserve">
          <source>Distances between nearest points</source>
          <target state="translated">最近点之间的距离</target>
        </trans-unit>
        <trans-unit id="ca16b0863795767cdb4725b75adfa42b709a001e" translate="yes" xml:space="preserve">
          <source>Distances between points</source>
          <target state="translated">各点之间的距离</target>
        </trans-unit>
        <trans-unit id="910c53439ff83cd98a7b7e64bee8d61f0b68cb88" translate="yes" xml:space="preserve">
          <source>Do nothing and return the estimator unchanged</source>
          <target state="translated">不做任何事情,并返回估计器不变。</target>
        </trans-unit>
        <trans-unit id="c5e6ed82fe343c78c1100ad640f3a993777fa39d" translate="yes" xml:space="preserve">
          <source>Do sub-sampling or not.</source>
          <target state="translated">做次抽样与否。</target>
        </trans-unit>
        <trans-unit id="d02302084fcbb1684dafdfe21957f6fe2ca93dc0" translate="yes" xml:space="preserve">
          <source>Document topic distribution for X.</source>
          <target state="translated">X的文件主题分布。</target>
        </trans-unit>
        <trans-unit id="19b30fd1b34da1179b9e0d0928aeba4710e23f88" translate="yes" xml:space="preserve">
          <source>Document topic distribution. This argument is deprecated and is currently being ignored.</source>
          <target state="translated">文档主题分布。这个参数已经废弃,目前被忽略。</target>
        </trans-unit>
        <trans-unit id="63c0ef630b1320d196b6bcc4b6486b885c582122" translate="yes" xml:space="preserve">
          <source>Document word matrix.</source>
          <target state="translated">文件文字矩阵。</target>
        </trans-unit>
        <trans-unit id="a54272f54881f4ca4e0261492dcf2cf75b9090d3" translate="yes" xml:space="preserve">
          <source>Document-term matrix.</source>
          <target state="translated">文件术语矩阵。</target>
        </trans-unit>
        <trans-unit id="ed3fb9eef9bfcc8c025a20d9025274a2ea3f9dea" translate="yes" xml:space="preserve">
          <source>Documents without labels words at random, rather than from a base distribution.</source>
          <target state="translated">文件中没有标签的词是随机的,而不是从一个基础分布。</target>
        </trans-unit>
        <trans-unit id="a05bc80ae58eb2b1dfbe3f8217a3f18c08fef823" translate="yes" xml:space="preserve">
          <source>Does exhaustive search over a grid of parameters.</source>
          <target state="translated">在参数网格上进行详尽的搜索。</target>
        </trans-unit>
        <trans-unit id="736dd3580bc83d3483fdf7254f2eaee1114f4131" translate="yes" xml:space="preserve">
          <source>Does nothing: this transformer is stateless.</source>
          <target state="translated">什么都不做:这个变压器是无状态的。</target>
        </trans-unit>
        <trans-unit id="ccf9bf7eb21a340c914be3b7702772a7e6956633" translate="yes" xml:space="preserve">
          <source>Donald Rumsfeld</source>
          <target state="translated">唐纳德-拉姆斯菲尔德</target>
        </trans-unit>
        <trans-unit id="2f35dd46f528b80c049e27f350bbecf4a114b496" translate="yes" xml:space="preserve">
          <source>Donor:</source>
          <target state="translated">Donor:</target>
        </trans-unit>
        <trans-unit id="7a2b00e1e88a34c9dd9cbc99436883b1655b0c33" translate="yes" xml:space="preserve">
          <source>Dorin Comaniciu and Peter Meer, &amp;ldquo;Mean Shift: A robust approach toward feature space analysis&amp;rdquo;. IEEE Transactions on Pattern Analysis and Machine Intelligence. 2002. pp. 603-619.</source>
          <target state="translated">Dorin Comaniciu和Peter Meer，&amp;ldquo;均值变换：一种用于特征空间分析的可靠方法&amp;rdquo;。IEEE模式分析和机器智能交易。2002.第603-619页。</target>
        </trans-unit>
        <trans-unit id="50f4501572f268d3b6123fc3ff45a5b01ce2c18a" translate="yes" xml:space="preserve">
          <source>Dot product that handle the sparse matrix case correctly</source>
          <target state="translated">正确处理稀疏矩阵情况的点积</target>
        </trans-unit>
        <trans-unit id="09b3ef140adc2520b14b592de5689830916a9fc4" translate="yes" xml:space="preserve">
          <source>Dot-Product kernel.</source>
          <target state="translated">点产品内核。</target>
        </trans-unit>
        <trans-unit id="ddd298082ea56c7cd069818c716f9b1de66c041c" translate="yes" xml:space="preserve">
          <source>Download and use the funneled variant of the dataset.</source>
          <target state="translated">下载并使用数据集的漏斗变体。</target>
        </trans-unit>
        <trans-unit id="548c76f2027e6e65e0753970fa3dcc8c80cf0129" translate="yes" xml:space="preserve">
          <source>Download it if necessary.</source>
          <target state="translated">如有必要,请下载。</target>
        </trans-unit>
        <trans-unit id="3a59eb19c694cd163b1639a6073b8701cc70b750" translate="yes" xml:space="preserve">
          <source>Dr. William H. Wolberg, W. Nick Street, Olvi L. Mangasarian</source>
          <target state="translated">Dr.William H.Wolberg,W.Nick Street,Olvi L.Mangasarian</target>
        </trans-unit>
        <trans-unit id="8247d073dafcf1048184e75f5cf9eeceb8af4f92" translate="yes" xml:space="preserve">
          <source>Draw a topic index \(z_{di} \sim \mathrm{Multinomial}(\theta_d)\)</source>
          <target state="translated">Draw a topic index (z_{di}绘制一个主题索引(z_{di}绘制一个主题索引(z_{di}绘制一个主题索引(z_{di)))。)</target>
        </trans-unit>
        <trans-unit id="4a3ce1b5d334160b36e71f66e0943fd5cbf6541c" translate="yes" xml:space="preserve">
          <source>Draw samples from Gaussian process and evaluate at X.</source>
          <target state="translated">从高斯过程中抽取样本,在X处进行评估。</target>
        </trans-unit>
        <trans-unit id="42d0d75c88dbadde925c75efc7917926d7770d94" translate="yes" xml:space="preserve">
          <source>Draw the observed word \(w_{ij} \sim \mathrm{Multinomial}(\beta_{z_{di}})\)</source>
          <target state="translated">画出观察到的词(w_{ij}绘制sim 观察到的词(w_{ij)绘制sim 观察到的词(w_{ij)绘制sim 观察到的词(w_{ij)绘制sim 观察到的词(w_{ij)</target>
        </trans-unit>
        <trans-unit id="55f4b4be4b25a394623765230f12d8e66ac3b761" translate="yes" xml:space="preserve">
          <source>Drucker, &amp;ldquo;Improving Regressors using Boosting Techniques&amp;rdquo;, 1997.</source>
          <target state="translated">德鲁克，&amp;ldquo;使用增强技术改善回归器&amp;rdquo;，1997年。</target>
        </trans-unit>
        <trans-unit id="dcb15f7ca8dfff61a366a5ac8e4ea980f5bbab32" translate="yes" xml:space="preserve">
          <source>Drucker. &amp;ldquo;Improving Regressors using Boosting Techniques&amp;rdquo;, 1997.</source>
          <target state="translated">德鲁克 &amp;ldquo;使用增强技术改进回归器&amp;rdquo;，1997年。</target>
        </trans-unit>
        <trans-unit id="051c8afb53836cb71f599133be349d44b9735992" translate="yes" xml:space="preserve">
          <source>Dual coefficients of training data points in kernel space</source>
          <target state="translated">训练数据点在内核空间中的双重系数</target>
        </trans-unit>
        <trans-unit id="06d69f89328f3181f422b0f570c9e92b3db8b89a" translate="yes" xml:space="preserve">
          <source>Dual or primal formulation. Dual formulation is only implemented for l2 penalty with liblinear solver. Prefer dual=False when n_samples &amp;gt; n_features.</source>
          <target state="translated">对偶或原始配方。对偶公式化仅使用liblinear求解器实现l2惩罚。当n_samples&amp;gt; n_features时，首选dual = False。</target>
        </trans-unit>
        <trans-unit id="ef5575c0df42e1e4431a5818305e2ba6fb34e898" translate="yes" xml:space="preserve">
          <source>Duda, R.O., &amp;amp; Hart, P.E. (1973) Pattern Classification and Scene Analysis. (Q327.D83) John Wiley &amp;amp; Sons. ISBN 0-471-22361-1. See page 218.</source>
          <target state="translated">Duda，RO和Hart，PE（1973）模式分类和场景分析。（Q327.D83）John Wiley＆Sons。ISBN 0-471-22361-1。请参阅第218页。</target>
        </trans-unit>
        <trans-unit id="d71c7c5b836220bb9a42354ac1925ba3fb9ef51f" translate="yes" xml:space="preserve">
          <source>Due to its Bayesian nature, the variational algorithm needs more hyper- parameters than expectation-maximization, the most important of these being the concentration parameter &lt;code&gt;weight_concentration_prior&lt;/code&gt;. Specifying a low value for the concentration prior will make the model put most of the weight on few components set the remaining components weights very close to zero. High values of the concentration prior will allow a larger number of components to be active in the mixture.</source>
          <target state="translated">由于其贝叶斯性质，与期望最大化相比，变分算法需要更多的超参数，其中最重要的是浓度参数 &lt;code&gt;weight_concentration_prior&lt;/code&gt; 。为浓度先验指定一个较低的值将使模型将大部分权重放在少量组分上，而其余组分的权重则非常接近于零。先验的高浓度值将使混合物中有更多的组分具有活性。</target>
        </trans-unit>
        <trans-unit id="3138c6718048cc631c316f841d968ca126587f96" translate="yes" xml:space="preserve">
          <source>Due to the Bayesian framework, the weights found are slightly different to the ones found by &lt;a href=&quot;#ordinary-least-squares&quot;&gt;Ordinary Least Squares&lt;/a&gt;. However, Bayesian Ridge Regression is more robust to ill-posed problem.</source>
          <target state="translated">由于贝叶斯框架，发现的权重与&lt;a href=&quot;#ordinary-least-squares&quot;&gt;普通最小二乘&lt;/a&gt;的权重略有不同。但是，贝叶斯岭回归对于不适定问题更健壮。</target>
        </trans-unit>
        <trans-unit id="49a9524b2e07d57a0a9de01153477ce8688deade" translate="yes" xml:space="preserve">
          <source>Due to the few points in each dimension and the straight line that linear regression uses to follow these points as well as it can, noise on the observations will cause great variance as shown in the first plot. Every line&amp;rsquo;s slope can vary quite a bit for each prediction due to the noise induced in the observations.</source>
          <target state="translated">由于每个维度上的点很少，并且线性回归使用的直线尽可能地遵循这些点，因此观测值上的噪声将导致较大的方差，如第一个图所示。由于观测结果中的噪声，每个预测的每条线的斜率可能会发生很大的变化。</target>
        </trans-unit>
        <trans-unit id="d7f75ad397aee9bca90915766d86ad119a6da8d6" translate="yes" xml:space="preserve">
          <source>Due to the high number of iterations which grows combinatorically with the number of samples this cross-validation method can be very costly. For large datasets one should favor &lt;a href=&quot;sklearn.model_selection.kfold#sklearn.model_selection.KFold&quot;&gt;&lt;code&gt;KFold&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.model_selection.stratifiedkfold#sklearn.model_selection.StratifiedKFold&quot;&gt;&lt;code&gt;StratifiedKFold&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;sklearn.model_selection.shufflesplit#sklearn.model_selection.ShuffleSplit&quot;&gt;&lt;code&gt;ShuffleSplit&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">由于大量的迭代与样本数量一起增长，因此这种交叉验证方法可能会非常昂贵。对于大型数据集，应&lt;a href=&quot;sklearn.model_selection.kfold#sklearn.model_selection.KFold&quot;&gt; &lt;code&gt;KFold&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;sklearn.model_selection.stratifiedkfold#sklearn.model_selection.StratifiedKFold&quot;&gt; &lt;code&gt;StratifiedKFold&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;sklearn.model_selection.shufflesplit#sklearn.model_selection.ShuffleSplit&quot;&gt; &lt;code&gt;ShuffleSplit&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ffe47c7b4515e5a42962a4527ddae19a637b9b44" translate="yes" xml:space="preserve">
          <source>Due to the high number of test sets (which is the same as the number of samples) this cross-validation method can be very costly. For large datasets one should favor &lt;a href=&quot;sklearn.model_selection.kfold#sklearn.model_selection.KFold&quot;&gt;&lt;code&gt;KFold&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sklearn.model_selection.shufflesplit#sklearn.model_selection.ShuffleSplit&quot;&gt;&lt;code&gt;ShuffleSplit&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;sklearn.model_selection.stratifiedkfold#sklearn.model_selection.StratifiedKFold&quot;&gt;&lt;code&gt;StratifiedKFold&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">由于测试集数量众多（与样本数量相同），因此这种交叉验证方法可能会非常昂贵。对于大型数据集，应&lt;a href=&quot;sklearn.model_selection.kfold#sklearn.model_selection.KFold&quot;&gt; &lt;code&gt;KFold&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;sklearn.model_selection.shufflesplit#sklearn.model_selection.ShuffleSplit&quot;&gt; &lt;code&gt;ShuffleSplit&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;sklearn.model_selection.stratifiedkfold#sklearn.model_selection.StratifiedKFold&quot;&gt; &lt;code&gt;StratifiedKFold&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="96ff3687916b1e8b74bb83e6f4709efd632ce0ff" translate="yes" xml:space="preserve">
          <source>Due to the limits of human perception the size of the target feature set must be small (usually, one or two) thus the target features are usually chosen among the most important features.</source>
          <target state="translated">由于人类感知的局限性,目标特征集的大小必须很小(通常是一两个),因此目标特征通常选择在最重要的特征中。</target>
        </trans-unit>
        <trans-unit id="d53766e3e499f99ece5a4ddbfee48feead497d14" translate="yes" xml:space="preserve">
          <source>DummyClassifier is a classifier that makes predictions using simple rules.</source>
          <target state="translated">DummyClassifier是一个使用简单规则进行预测的分类器。</target>
        </trans-unit>
        <trans-unit id="443198a9d265c6dfab2e4849a4d163b9c0b41f6f" translate="yes" xml:space="preserve">
          <source>DummyRegressor is a regressor that makes predictions using simple rules.</source>
          <target state="translated">DummyRegressor是一个使用简单规则进行预测的回归器。</target>
        </trans-unit>
        <trans-unit id="6af058503f157c89b6e71b732acead145188faa8" translate="yes" xml:space="preserve">
          <source>Dump the dataset in svmlight / libsvm file format.</source>
          <target state="translated">以svmlight/libsvm文件格式转储数据集。</target>
        </trans-unit>
        <trans-unit id="c6fb2afcd94e01aae3d24447d7a7eca143afe06b" translate="yes" xml:space="preserve">
          <source>E. B. Fowkles and C. L. Mallows, 1983. &amp;ldquo;A method for comparing two hierarchical clusterings&amp;rdquo;. Journal of the American Statistical Association</source>
          <target state="translated">EB Fowkles和CL Mallows，1983年。&amp;ldquo;一种比较两个层次聚类的方法&amp;rdquo;。美国统计协会杂志</target>
        </trans-unit>
        <trans-unit id="42d4adf7fff0c1426abbab455bc9350502265226" translate="yes" xml:space="preserve">
          <source>E. B. Fowkles and C. L. Mallows, 1983. &amp;ldquo;A method for comparing two hierarchical clusterings&amp;rdquo;. Journal of the American Statistical Association. &lt;a href=&quot;http://wildfire.stat.ucla.edu/pdflibrary/fowlkes.pdf&quot;&gt;http://wildfire.stat.ucla.edu/pdflibrary/fowlkes.pdf&lt;/a&gt;</source>
          <target state="translated">EB Fowkles和CL Mallows，1983年。&amp;ldquo;一种比较两个层次聚类的方法&amp;rdquo;。美国统计协会杂志。&lt;a href=&quot;http://wildfire.stat.ucla.edu/pdflibrary/fowlkes.pdf&quot;&gt;http://wildfire.stat.ucla.edu/pdflibrary/fowlkes.pdf&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ab71a7b5d5625bd919b89f83be910ecab93850c5" translate="yes" xml:space="preserve">
          <source>E.g., if the prediction for a given sample is</source>
          <target state="translated">例如,如果给定样本的预测值是</target>
        </trans-unit>
        <trans-unit id="b3b0bdfd557f6b7a88d34ecfb7cb2aafce7efc42" translate="yes" xml:space="preserve">
          <source>EXPERIMENTAL</source>
          <target state="translated">EXPERIMENTAL</target>
        </trans-unit>
        <trans-unit id="968f48fba281675a45e237bd344cffd1b892df60" translate="yes" xml:space="preserve">
          <source>EXPERIMENTAL: some behaviors may change between releases without deprecation.</source>
          <target state="translated">实验性的:一些行为可能会在不同版本之间发生变化,而不会被废弃。</target>
        </trans-unit>
        <trans-unit id="59e7ec54961b01332639857ec1929bc7c7d12305" translate="yes" xml:space="preserve">
          <source>Each array is unique classes for one output in str/int Can be obtained by via &lt;code&gt;[np.unique(y[:, i]) for i in range(y.shape[1])]&lt;/code&gt;, where y is the target matrix of the entire dataset. This argument is required for the first call to partial_fit and can be omitted in the subsequent calls. Note that y doesn&amp;rsquo;t need to contain all labels in &lt;code&gt;classes&lt;/code&gt;.</source>
          <target state="translated">每个数组都是str / int中一个输出的唯一类，可以通过以下方式获得： &lt;code&gt;[np.unique(y[:, i]) for i in range(y.shape[1])]&lt;/code&gt; ，其中y是目标矩阵整个数据集。第一次调用partial_fit时需要此参数，并且在随后的调用中可以将其省略。注意y不需要在 &lt;code&gt;classes&lt;/code&gt; 包含所有标签。</target>
        </trans-unit>
        <trans-unit id="8e3c83e89f176aa31946a5f2860f3648b07c31ec" translate="yes" xml:space="preserve">
          <source>Each class is represented by its centroid, with test samples classified to the class with the nearest centroid.</source>
          <target state="translated">每个类用它的中心点表示,测试样本被归入中心点最近的类。</target>
        </trans-unit>
        <trans-unit id="4164651bf675dcbc97b2bc7dc85d22293003b72e" translate="yes" xml:space="preserve">
          <source>Each clustering algorithm comes in two variants: a class, that implements the &lt;code&gt;fit&lt;/code&gt; method to learn the clusters on train data, and a function, that, given train data, returns an array of integer labels corresponding to the different clusters. For the class, the labels over the training data can be found in the &lt;code&gt;labels_&lt;/code&gt; attribute.</source>
          <target state="translated">每种聚类算法都有两个变体：一个类，该类实现 &lt;code&gt;fit&lt;/code&gt; 方法以学习火车数据上的聚类；一个函数，给定火车数据，该函数返回与不同聚类相对应的整数标签数组。对于班级，可以在 &lt;code&gt;labels_&lt;/code&gt; 属性中找到训练数据上的标签。</target>
        </trans-unit>
        <trans-unit id="e2fdf3d7d042c46d707e467fdd8b54f0584fcecf" translate="yes" xml:space="preserve">
          <source>Each datapoint is a 8x8 image of a digit.</source>
          <target state="translated">每个数据点是一个数字的8x8图像。</target>
        </trans-unit>
        <trans-unit id="1024f646434d3a82cfcf60e3d21069c59b8f58f5" translate="yes" xml:space="preserve">
          <source>Each dimension represents the distance from the sample point to each cluster centroid.</source>
          <target state="translated">每个维度代表样本点到每个簇中心点的距离。</target>
        </trans-unit>
        <trans-unit id="9a026e43062352c2956a968144097ca600558bbe" translate="yes" xml:space="preserve">
          <source>Each element is an array of indices for neighbors within &lt;code&gt;radius&lt;/code&gt; of the respective query.</source>
          <target state="translated">每个元素都是相应查询 &lt;code&gt;radius&lt;/code&gt; 内的邻居的索引数组。</target>
        </trans-unit>
        <trans-unit id="65c67401278790677f03f9574462713ab4af36f9" translate="yes" xml:space="preserve">
          <source>Each element is an array representing the cosine distances to some points found within &lt;code&gt;radius&lt;/code&gt; of the respective query. Only present if &lt;code&gt;return_distance=True&lt;/code&gt;.</source>
          <target state="translated">每个元素都是一个数组，表示到相应查询 &lt;code&gt;radius&lt;/code&gt; 内找到的某些点的余弦距离。仅在 &lt;code&gt;return_distance=True&lt;/code&gt; 时存在。</target>
        </trans-unit>
        <trans-unit id="9cd7985a89bc6710b3fa93b2336c3fbf59140f9f" translate="yes" xml:space="preserve">
          <source>Each feature value should be in &lt;code&gt;range(n_values)&lt;/code&gt;</source>
          <target state="translated">每个特征值应在 &lt;code&gt;range(n_values)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4ab0c179c75e2849d2c7883837fed1f9ba4310d2" translate="yes" xml:space="preserve">
          <source>Each fold is constituted by two arrays: the first one is related to the &lt;em&gt;training set&lt;/em&gt;, and the second one to the &lt;em&gt;test set&lt;/em&gt;. Thus, one can create the training/test sets using numpy indexing:</source>
          <target state="translated">每个折叠由两个数组组成：第一个与&lt;em&gt;训练集有关&lt;/em&gt;，第二个与&lt;em&gt;测试集有关&lt;/em&gt;。因此，可以使用numpy索引创建训练/测试集：</target>
        </trans-unit>
        <trans-unit id="eb19eaacfa23b38304e45f5a8372c2032d02e15d" translate="yes" xml:space="preserve">
          <source>Each fold is then used once as a validation while the k - 1 remaining folds form the training set.</source>
          <target state="translated">然后,每个褶皱被用作一次验证,而k-1剩余的褶皱形成训练集。</target>
        </trans-unit>
        <trans-unit id="064c33ae42762128f797c086f4ad19c39cdb9753" translate="yes" xml:space="preserve">
          <source>Each iteration performs the following steps:</source>
          <target state="translated">每次迭代都要执行以下步骤。</target>
        </trans-unit>
        <trans-unit id="a5e429ef850d4c7e01d10e3b9236166112f477e3" translate="yes" xml:space="preserve">
          <source>Each model makes a prediction in the order specified by the chain using all of the available features provided to the model plus the predictions of models that are earlier in the chain.</source>
          <target state="translated">每个模型按照链条指定的顺序,利用提供给模型的所有可用特征加上链条中较早的模型的预测进行预测。</target>
        </trans-unit>
        <trans-unit id="c6715a2cf760f1038470ad03319943b7cf6a59f0" translate="yes" xml:space="preserve">
          <source>Each of the &lt;code&gt;1140&lt;/code&gt; faces is assigned to a single person id in the &lt;code&gt;target&lt;/code&gt; array:</source>
          <target state="translated">将 &lt;code&gt;1140&lt;/code&gt; 张面孔中的每张面孔分配给 &lt;code&gt;target&lt;/code&gt; 数组中的一个个人ID ：</target>
        </trans-unit>
        <trans-unit id="64d1530b2eef52e844216d1de4fc582677cb7b29" translate="yes" xml:space="preserve">
          <source>Each of the values in Cs describes the inverse of regularization strength. If Cs is as an int, then a grid of Cs values are chosen in a logarithmic scale between 1e-4 and 1e4. Like in support vector machines, smaller values specify stronger regularization.</source>
          <target state="translated">Cs中的每一个值都描述了正则化强度的倒数。如果Cs是作为一个int,那么Cs值的网格是在1e-4和1e-4之间按对数比例选择的。像在支持向量机中一样,较小的值指定较强的正则化。</target>
        </trans-unit>
        <trans-unit id="dd4bc63c164dc115706052b9522754adf8a6d835" translate="yes" xml:space="preserve">
          <source>Each picture is centered on a single face. The typical task is called Face Verification: given a pair of two pictures, a binary classifier must predict whether the two images are from the same person.</source>
          <target state="translated">每张图片都以一张人脸为中心。典型的任务叫做人脸验证:给定一对两张图片,二进制分类器必须预测这两张图片是否来自同一个人。</target>
        </trans-unit>
        <trans-unit id="8b7aa683342fe35acddc94a274ca5c50b7669557" translate="yes" xml:space="preserve">
          <source>Each row corresponding to the 8 feature values in order.</source>
          <target state="translated">每一行依次对应8个特征值。</target>
        </trans-unit>
        <trans-unit id="d41d22b07819f09d1b9148b75263c3cc37272635" translate="yes" xml:space="preserve">
          <source>Each row corresponds to 2 ravel&amp;rsquo;d face images of original size 62 x 47 pixels. Changing the &lt;code&gt;slice_&lt;/code&gt;, &lt;code&gt;resize&lt;/code&gt; or &lt;code&gt;subset&lt;/code&gt; parameters will change the shape of the output.</source>
          <target state="translated">每行对应2张原始大小为62 x 47像素的斜纹面部图像。更改 &lt;code&gt;slice_&lt;/code&gt; ， &lt;code&gt;resize&lt;/code&gt; 或 &lt;code&gt;subset&lt;/code&gt; 参数将更改输出的形状。</target>
        </trans-unit>
        <trans-unit id="ab030f68d0ae672b781765a736fcb8bc24988306" translate="yes" xml:space="preserve">
          <source>Each row corresponds to a ravelled face image of original size 62 x 47 pixels. Changing the &lt;code&gt;slice_&lt;/code&gt; or resize parameters will change the shape of the output.</source>
          <target state="translated">每行对应于原始大小为62 x 47像素的散乱的面部图像。更改 &lt;code&gt;slice_&lt;/code&gt; 或resize参数将更改输出的形状。</target>
        </trans-unit>
        <trans-unit id="167a6f7e5cb5e2ca3ec2a4e8628600a609714087" translate="yes" xml:space="preserve">
          <source>Each row corresponds to a ravelled face image of original size 64 x 64 pixels.</source>
          <target state="translated">每一行对应一个原始尺寸为64×64像素的ravelled面部图像。</target>
        </trans-unit>
        <trans-unit id="8c2e7786e52b743172efa54b5b16d07ac1a43c64" translate="yes" xml:space="preserve">
          <source>Each row corresponds to the 54 features in the dataset.</source>
          <target state="translated">每一行对应数据集中的54个特征。</target>
        </trans-unit>
        <trans-unit id="0608fc10326fcbe71e426aea7681df8dd25ba687" translate="yes" xml:space="preserve">
          <source>Each row has 2 face images corresponding to same or different person from the dataset containing 5749 people. Changing the &lt;code&gt;slice_&lt;/code&gt;, &lt;code&gt;resize&lt;/code&gt; or &lt;code&gt;subset&lt;/code&gt; parameters will change the shape of the output.</source>
          <target state="translated">每行有2张人脸图像，分别对应于包含5749人的数据集中的相同或不同的人。更改 &lt;code&gt;slice_&lt;/code&gt; ， &lt;code&gt;resize&lt;/code&gt; 或 &lt;code&gt;subset&lt;/code&gt; 参数将更改输出的形状。</target>
        </trans-unit>
        <trans-unit id="06f288cfe522a2e4d753375b96541528f0fa524f" translate="yes" xml:space="preserve">
          <source>Each row is a face image corresponding to one of the 40 subjects of the dataset.</source>
          <target state="translated">每一行都是对应于数据集40个主体之一的人脸图像。</target>
        </trans-unit>
        <trans-unit id="8266e3f62506ff3d19850c46f32c5954d01c0540" translate="yes" xml:space="preserve">
          <source>Each row is a face image corresponding to one of the 5749 people in the dataset. Changing the &lt;code&gt;slice_&lt;/code&gt; or resize parameters will change the shape of the output.</source>
          <target state="translated">每行是对应于数据集中5749个人之一的面部图像。更改 &lt;code&gt;slice_&lt;/code&gt; 或resize参数将更改输出的形状。</target>
        </trans-unit>
        <trans-unit id="591a0007b5e9b883dc451b4004f44a43daf5e58e" translate="yes" xml:space="preserve">
          <source>Each row is normalized to have unit Euclidean norm:</source>
          <target state="translated">每一行都被归一化为具有单位欧几里得法线。</target>
        </trans-unit>
        <trans-unit id="0e411d3a93e0e09c506324ca6186e056e1f3afe7" translate="yes" xml:space="preserve">
          <source>Each row of the result is the solution to a sparse coding problem. The goal is to find a sparse array &lt;code&gt;code&lt;/code&gt; such that:</source>
          <target state="translated">结果的每一行都是稀疏编码问题的解决方案。目标是找到一个稀疏数组 &lt;code&gt;code&lt;/code&gt; 例如：</target>
        </trans-unit>
        <trans-unit id="ab7ff50006811d16984238c7d5419633bd357515" translate="yes" xml:space="preserve">
          <source>Each sample (i.e. each row of the data matrix) with at least one non zero component is rescaled independently of other samples so that its norm (l1 or l2) equals one.</source>
          <target state="translated">具有至少一个非零分量的每个样本(即数据矩阵的每一行)都会独立于其他样本进行重新调整,使其规范(l1或l2)等于1。</target>
        </trans-unit>
        <trans-unit id="a17745c87b24e0c8afdfd0a5a77958ce657ec0da" translate="yes" xml:space="preserve">
          <source>Each sample goes through the decisions of each tree of the ensemble and ends up in one leaf per tree. The sample is encoded by setting feature values for these leaves to 1 and the other feature values to 0.</source>
          <target state="translated">每一个样本都要经过合集的每一棵树的决定,最后在每棵树上留下一片叶子。通过将这些叶子的特征值设置为1,其他特征值设置为0,对样本进行编码。</target>
        </trans-unit>
        <trans-unit id="4c6a2457a415b597c3cc91e918dd620a1275f37c" translate="yes" xml:space="preserve">
          <source>Each sample has a value of 1 in its categories, and 0 in others. The array has 3.15% of non zero values.</source>
          <target state="translated">每个样本在其类别中的值为1,其他类别为0。该数组有3.15%的非零值。</target>
        </trans-unit>
        <trans-unit id="f41d2aeef3f46974d95359884ff469d6b0c46406" translate="yes" xml:space="preserve">
          <source>Each subject is in a different testing fold, and the same subject is never in both testing and training. Notice that the folds do not have exactly the same size due to the imbalance in the data.</source>
          <target state="translated">每个被试都在不同的测试褶皱中,同一个被试从来没有同时在测试和训练中。注意,由于数据的不平衡,折线的大小并不完全相同。</target>
        </trans-unit>
        <trans-unit id="3814c5e052ad2dcad6019213fe8563f6a1df0d7e" translate="yes" xml:space="preserve">
          <source>Each term found by the analyzer during the fit is assigned a unique integer index corresponding to a column in the resulting matrix. This interpretation of the columns can be retrieved as follows:</source>
          <target state="translated">分析器在拟合过程中发现的每一个术语都会被分配一个唯一的整数索引,对应于结果矩阵中的一列。对各列的解释可检索如下:</target>
        </trans-unit>
        <trans-unit id="c784c7a79f31760a886b5f59ee96beb0a131119b" translate="yes" xml:space="preserve">
          <source>Each training set is thus constituted by all the samples except the ones related to a specific group.</source>
          <target state="translated">因此,每个训练集都是由除与特定组相关的样本外的所有样本构成的。</target>
        </trans-unit>
        <trans-unit id="dae8b008049f974591eec30c4959240d4f8209b6" translate="yes" xml:space="preserve">
          <source>Each transformation is plotted showing two transformed features, with the left plot showing the entire dataset, and the right zoomed-in to show the dataset without the marginal outliers. A large majority of the samples are compacted to a specific range, [0, 10] for the median income and [0, 6] for the number of households. Note that there are some marginal outliers (some blocks have more than 1200 households). Therefore, a specific pre-processing can be very beneficial depending of the application. In the following, we present some insights and behaviors of those pre-processing methods in the presence of marginal outliers.</source>
          <target state="translated">每一次变换都会绘制显示两个变换后的特征,左边的图显示整个数据集,右边的图放大显示没有边际异常值的数据集。绝大多数样本都被压缩到一个特定的范围,[0,10]为收入中位数,[0,6]为家庭数量。需要注意的是,存在一些边际离群值(有些区块的家庭数超过1200户)。因此,根据不同的应用,特定的预处理可能是非常有益的。在下文中,我们将介绍这些预处理方法在边际异常值存在时的一些见解和行为。</target>
        </trans-unit>
        <trans-unit id="1bae53b461d7018413f96668a3fd2d910ee2b893" translate="yes" xml:space="preserve">
          <source>Each tree (corresponding to a hash function) contains an array of sorted hashed values. The array representation may change in future versions.</source>
          <target state="translated">每一棵树(对应一个哈希函数)包含一个排序哈希值的数组。在未来的版本中,数组的表示方式可能会改变。</target>
        </trans-unit>
        <trans-unit id="b8856c00d9a3aabb79fa1637deda012f36e7fa79" translate="yes" xml:space="preserve">
          <source>Each value corresponds to one of the 7 forest covertypes with values ranging between 1 to 7.</source>
          <target state="translated">每个数值对应7种森林覆盖类型中的一种,数值范围在1至7之间。</target>
        </trans-unit>
        <trans-unit id="a26c4831d70efad24e98284928b0be3f89356c5f" translate="yes" xml:space="preserve">
          <source>Each value corresponds to the average house value in units of 100,000.</source>
          <target state="translated">每个数值对应的是以10万为单位的平均房价。</target>
        </trans-unit>
        <trans-unit id="b73adf6e5e81a25cfd6cba8c5ced4cc704e838bc" translate="yes" xml:space="preserve">
          <source>Early stopping of Gradient Boosting</source>
          <target state="translated">梯度提升的提前停止</target>
        </trans-unit>
        <trans-unit id="6014007b227da4f77b5dc713b793bebf2cd0edea" translate="yes" xml:space="preserve">
          <source>Early stopping of Stochastic Gradient Descent</source>
          <target state="translated">随机梯度下降的提前停止</target>
        </trans-unit>
        <trans-unit id="2bc792583ceedf45492e8c0d0973cd2a0644d35d" translate="yes" xml:space="preserve">
          <source>Early stopping support in Gradient Boosting enables us to find the least number of iterations which is sufficient to build a model that generalizes well to unseen data.</source>
          <target state="translated">梯度提升中的早期停止支持使我们能够找到最少的迭代次数,这足以建立一个能够很好地泛化到未见数据的模型。</target>
        </trans-unit>
        <trans-unit id="c1172ce796bad31f5c663d3985fad9a510e8e15e" translate="yes" xml:space="preserve">
          <source>Ease of implementation (lots of opportunities for code tuning).</source>
          <target state="translated">易于实施(代码调整的机会很多)。</target>
        </trans-unit>
        <trans-unit id="4462ff7b980578358210e9675048c742a3ff4bc9" translate="yes" xml:space="preserve">
          <source>Easier debugging:</source>
          <target state="translated">更容易调试。</target>
        </trans-unit>
        <trans-unit id="75ac2af92696ba2921b5056cf5e9a1eff59a4b01" translate="yes" xml:space="preserve">
          <source>Edges are weighted with the gradient values.</source>
          <target state="translated">边缘与梯度值加权。</target>
        </trans-unit>
        <trans-unit id="8ba8dac590ecf2463356c8435e8e1af6acf76730" translate="yes" xml:space="preserve">
          <source>Edges exist if 2 voxels are connected.</source>
          <target state="translated">如果2个体素相连,则存在边缘。</target>
        </trans-unit>
        <trans-unit id="5a7207ac6271d9c38991d58895b3903e6da79e09" translate="yes" xml:space="preserve">
          <source>Effect of transforming the targets in regression model</source>
          <target state="translated">回归模型中转换目标的影响</target>
        </trans-unit>
        <trans-unit id="eb1faf9c92cb6cd63dcd73d771eb4a992fd78969" translate="yes" xml:space="preserve">
          <source>Effective in high dimensional spaces.</source>
          <target state="translated">在高维空间有效。</target>
        </trans-unit>
        <trans-unit id="d3a0b3db22d352e74b970c8febb695e61edaa019" translate="yes" xml:space="preserve">
          <source>Efficiency.</source>
          <target state="translated">Efficiency.</target>
        </trans-unit>
        <trans-unit id="385b0226b8f5bbcade01a09fd0a299bbfc07d94b" translate="yes" xml:space="preserve">
          <source>Eg. : &amp;ldquo;Estimator, %(name)s, must be fitted before sparsifying&amp;rdquo;.</source>
          <target state="translated">例如。：&amp;ldquo;估计后必须安装％（name）s估计器&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="01078939350026f8b410482c59bb7313c6ec903e" translate="yes" xml:space="preserve">
          <source>Eg.:</source>
          <target state="translated">Eg.:</target>
        </trans-unit>
        <trans-unit id="5dc564383d25beb8fc4f819fcdd711c6f3ca626f" translate="yes" xml:space="preserve">
          <source>Eigenvalues of the centered kernel matrix in decreasing order. If &lt;code&gt;n_components&lt;/code&gt; and &lt;code&gt;remove_zero_eig&lt;/code&gt; are not set, then all values are stored.</source>
          <target state="translated">中心核矩阵的特征值以降序排列。如果未设置 &lt;code&gt;n_components&lt;/code&gt; 和 &lt;code&gt;remove_zero_eig&lt;/code&gt; ，则将存储所有值。</target>
        </trans-unit>
        <trans-unit id="27081720ebefe35ba2d13afdc0b8355c62725e18" translate="yes" xml:space="preserve">
          <source>Eigenvectors of the centered kernel matrix. If &lt;code&gt;n_components&lt;/code&gt; and &lt;code&gt;remove_zero_eig&lt;/code&gt; are not set, then all components are stored.</source>
          <target state="translated">中心核矩阵的特征向量。如果未设置 &lt;code&gt;n_components&lt;/code&gt; 和 &lt;code&gt;remove_zero_eig&lt;/code&gt; ，则将存储所有组件。</target>
        </trans-unit>
        <trans-unit id="a0766ed6f2549a1f23f041fbf9d07875cc1a353e" translate="yes" xml:space="preserve">
          <source>Either &amp;ldquo;dict&amp;rdquo; (the default) to accept dictionaries over (feature_name, value); &amp;ldquo;pair&amp;rdquo; to accept pairs of (feature_name, value); or &amp;ldquo;string&amp;rdquo; to accept single strings. feature_name should be a string, while value should be a number. In the case of &amp;ldquo;string&amp;rdquo;, a value of 1 is implied. The feature_name is hashed to find the appropriate column for the feature. The value&amp;rsquo;s sign might be flipped in the output (but see non_negative, below).</source>
          <target state="translated">&amp;ldquo; dict&amp;rdquo;（默认）可以接受超过（feature_name，value）的字典；&amp;ldquo; pair&amp;rdquo;接受对（feature_name，值）；或&amp;ldquo;字符串&amp;rdquo;以接受单个字符串。feature_name应该是字符串，而value应该是数字。在&amp;ldquo;字符串&amp;rdquo;的情况下，意味着值为1。对feature_name进行哈希处理以找到适合该功能的列。该值的符号可能会在输出中翻转（但请参见下面的non_negative）。</target>
        </trans-unit>
        <trans-unit id="43b61ec50f74983dee1facc0975c15d077edd6ba" translate="yes" xml:space="preserve">
          <source>Either a Mapping (e.g., a dict) where keys are terms and values are indices in the feature matrix, or an iterable over terms. If not given, a vocabulary is determined from the input documents.</source>
          <target state="translated">或者是一个Mapping(例如,一个dict),其中键是术语,值是特征矩阵中的索引,或者是术语的可迭代。如果没有给定,则从输入文档中确定一个词汇表。</target>
        </trans-unit>
        <trans-unit id="a93339f017ae83db4ad9f0a4618c0081c787b9aa" translate="yes" xml:space="preserve">
          <source>Either a Mapping (e.g., a dict) where keys are terms and values are indices in the feature matrix, or an iterable over terms. If not given, a vocabulary is determined from the input documents. Indices in the mapping should not be repeated and should not have any gap between 0 and the largest index.</source>
          <target state="translated">或者是一个Mapping(例如,一个dict),其中键是术语,值是特征矩阵中的索引,或者是术语的可迭代。如果没有给定,则从输入文档中确定一个词汇表。映射中的索引不应重复,并且在 0 和最大索引之间不应有任何间隙。</target>
        </trans-unit>
        <trans-unit id="e98c2abd2963e64c3c9559e91f83ef75adc21535" translate="yes" xml:space="preserve">
          <source>Elastic Net model with iterative fitting along a regularization path</source>
          <target state="translated">沿正则化路径迭代拟合的弹性网模型</target>
        </trans-unit>
        <trans-unit id="f25074919b239cbeadd47057a9e9cf3c63d1b58e" translate="yes" xml:space="preserve">
          <source>Elastic Net: \(R(w) := \frac{\rho}{2} \sum_{i=1}^{n} w_i^2 + (1-\rho) \sum_{i=1}^{n} |w_i|\), a convex combination of L2 and L1, where \(\rho\) is given by &lt;code&gt;1 - l1_ratio&lt;/code&gt;.</source>
          <target state="translated">弹性网：\（R（w）：= \ frac {\ rho} {2} \ sum_ {i = 1} ^ {n} w_i ^ 2 +（1- \ rho）\ sum_ {i = 1} ^ { n} | w_i | \），L2和L1的凸组合，其中\（\ rho \）由 &lt;code&gt;1 - l1_ratio&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d78ed3f616dd04dbdb8532279b10eba3cd950e71" translate="yes" xml:space="preserve">
          <source>Elastic net model with best model selection by cross-validation.</source>
          <target state="translated">弹性网模型,通过交叉验证选择最佳模型。</target>
        </trans-unit>
        <trans-unit id="ec5ddfaa9a97ae5a3132eaedd8d46247823f8f7e" translate="yes" xml:space="preserve">
          <source>Elastic-net is useful when there are multiple features which are correlated with one another. Lasso is likely to pick one of these at random, while elastic-net is likely to pick both.</source>
          <target state="translated">当有多个相互关联的特征时,弹性网很有用。Lasso可能会随机选取其中一个,而弹性网可能会同时选取两个。</target>
        </trans-unit>
        <trans-unit id="d42663cd533cab2c117408a66e2c754668546254" translate="yes" xml:space="preserve">
          <source>Element wise squaring of array-likes and sparse matrices.</source>
          <target state="translated">对数组相似性和稀疏矩阵进行元素智能平方。</target>
        </trans-unit>
        <trans-unit id="b2415e479cfea73a40e01dd4b998f9da03b13397" translate="yes" xml:space="preserve">
          <source>Ella Bingham and Heikki Mannila. 2001. &lt;a href=&quot;http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.24.5135&amp;amp;rep=rep1&amp;amp;type=pdf&quot;&gt;Random projection in dimensionality reduction: applications to image and text data.&lt;/a&gt; In Proceedings of the seventh ACM SIGKDD international conference on Knowledge discovery and data mining (KDD &amp;lsquo;01). ACM, New York, NY, USA, 245-250.</source>
          <target state="translated">Ella Bingham和Heikki Mannila。2001。&lt;a href=&quot;http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.24.5135&amp;amp;rep=rep1&amp;amp;type=pdf&quot;&gt;降维中的随机投影：图像和文本数据的应用。&lt;/a&gt;在第七届ACM SIGKDD有关知识发现和数据挖掘的国际会议论文集（KDD '01）中。美国纽约州纽约市，ACM，245-250。</target>
        </trans-unit>
        <trans-unit id="ea20b8f576e8d8a640bdee9af2bccf467b0e3eee" translate="yes" xml:space="preserve">
          <source>Embedding in 2D space</source>
          <target state="translated">二维空间的嵌入</target>
        </trans-unit>
        <trans-unit id="42a672b5516a4db4944c7fb1deb546000a17d934" translate="yes" xml:space="preserve">
          <source>Embedding of the training data in low-dimensional space.</source>
          <target state="translated">训练数据在低维空间的嵌入。</target>
        </trans-unit>
        <trans-unit id="ead7a0b8ed3cf136d734c834383291d94fa59f31" translate="yes" xml:space="preserve">
          <source>Embedding vectors.</source>
          <target state="translated">嵌入矢量。</target>
        </trans-unit>
        <trans-unit id="5c281bf7287800e6d112224b21a1fea8dc8a1c85" translate="yes" xml:space="preserve">
          <source>Empirical covariance (Maximum Likelihood Estimator).</source>
          <target state="translated">经验协方差(最大似然估计器)。</target>
        </trans-unit>
        <trans-unit id="1e6e9241d291d4d0fff1217036114128a7643bda" translate="yes" xml:space="preserve">
          <source>Empirical covariance from which to compute the covariance estimate.</source>
          <target state="translated">经验协方差,据此计算协方差估计。</target>
        </trans-unit>
        <trans-unit id="f0a21fe26a013028c59880861578b3e3a7a6b633" translate="yes" xml:space="preserve">
          <source>Empirical evaluation of the impact of k-means initialization</source>
          <target state="translated">k-means初始化影响的实证评价。</target>
        </trans-unit>
        <trans-unit id="344cdbd359c2821985313457f989775fa4741b62" translate="yes" xml:space="preserve">
          <source>Empirical log probability of features given a class, &lt;code&gt;P(x_i|y)&lt;/code&gt;.</source>
          <target state="translated">给定一类 &lt;code&gt;P(x_i|y)&lt;/code&gt; 的特征的经验对数概率。</target>
        </trans-unit>
        <trans-unit id="677034064329c159560030a2e9e0be4acc9ce08f" translate="yes" xml:space="preserve">
          <source>Empirical log probability of features given a class, P(x_i|y).</source>
          <target state="translated">给定一个类的特征的经验对数概率,P(x_i|y)。</target>
        </trans-unit>
        <trans-unit id="3b7ba96574c8b3524aed3812d811c06a33b79159" translate="yes" xml:space="preserve">
          <source>Empirical validation</source>
          <target state="translated">经验验证</target>
        </trans-unit>
        <trans-unit id="0553edceecae61c015d8084d1ecc99580eff1f89" translate="yes" xml:space="preserve">
          <source>Empirical weights for class complements.</source>
          <target state="translated">类补的经验权重。</target>
        </trans-unit>
        <trans-unit id="2ba97ff50243a5095a9884ce79edebeb034eabf7" translate="yes" xml:space="preserve">
          <source>Empirically, we found that SGD converges after observing approx. 10^6 training samples. Thus, a reasonable first guess for the number of iterations is &lt;code&gt;max_iter = np.ceil(10**6 / n)&lt;/code&gt;, where &lt;code&gt;n&lt;/code&gt; is the size of the training set.</source>
          <target state="translated">根据经验，我们发现SGD在观察到大约2时会收敛。10 ^ 6个训练样本。因此，对于迭代次数的合理的第一个猜测是 &lt;code&gt;max_iter = np.ceil(10**6 / n)&lt;/code&gt; ，其中 &lt;code&gt;n&lt;/code&gt; 是训练集的大小。</target>
        </trans-unit>
        <trans-unit id="f6ae79a181a46845734ede948decd8dc5c3a8e77" translate="yes" xml:space="preserve">
          <source>Empirically, we observed that &lt;code&gt;L-BFGS&lt;/code&gt; converges faster and with better solutions on small datasets. For relatively large datasets, however, &lt;code&gt;Adam&lt;/code&gt; is very robust. It usually converges quickly and gives pretty good performance. &lt;code&gt;SGD&lt;/code&gt; with momentum or nesterov&amp;rsquo;s momentum, on the other hand, can perform better than those two algorithms if learning rate is correctly tuned.</source>
          <target state="translated">根据经验，我们观察到 &lt;code&gt;L-BFGS&lt;/code&gt; 在小型数据集上收敛更快，并且具有更好的解决方案。但是，对于相对较大的数据集， &lt;code&gt;Adam&lt;/code&gt; 非常健壮。它通常会快速收敛并提供相当好的性能。另一方面，如果正确调整了学习速度，则具有动量或Nesterov动量的 &lt;code&gt;SGD&lt;/code&gt; 的性能会优于这两种算法。</target>
        </trans-unit>
        <trans-unit id="1693f14e0c9dcdf9c9b9330c24685ad927922b76" translate="yes" xml:space="preserve">
          <source>Enable inverse-document-frequency reweighting.</source>
          <target state="translated">启用反文档频率复权。</target>
        </trans-unit>
        <trans-unit id="a934f4fb3ed37777235c83bd223e77c796f370d2" translate="yes" xml:space="preserve">
          <source>Enable verbose output. If 1 then it prints progress and performance once in a while (the more trees the lower the frequency). If greater than 1 then it prints progress and performance for every tree.</source>
          <target state="translated">启用verbose输出。如果为1,则每隔一段时间打印一次进度和性能(树越多,频率越低)。如果大于1,则打印每棵树的进度和性能。</target>
        </trans-unit>
        <trans-unit id="821e8956741ab27896d91661b25adb61bc482843" translate="yes" xml:space="preserve">
          <source>Enable verbose output. If 1 then it prints the current initialization and each iteration step. If greater than 1 then it prints also the log probability and the time needed for each step.</source>
          <target state="translated">启用verbose输出。如果为1,则打印当前的初始化和每个迭代步骤。如果大于1,则同时打印对数概率和每一步所需的时间。</target>
        </trans-unit>
        <trans-unit id="63b609d986b64d6d83b9252aecbdfe3bdf281cbf" translate="yes" xml:space="preserve">
          <source>Enable verbose output. Note that this setting takes advantage of a per-process runtime setting in liblinear that, if enabled, may not work properly in a multithreaded context.</source>
          <target state="translated">启用verbose输出。请注意,此设置利用了 liblinear 中每个进程的运行时设置,如果启用该设置,可能无法在多线程上下文中正常工作。</target>
        </trans-unit>
        <trans-unit id="05a04f314824e3e220758eebf22523061bf61eff" translate="yes" xml:space="preserve">
          <source>Enable verbose output. Note that this setting takes advantage of a per-process runtime setting in libsvm that, if enabled, may not work properly in a multithreaded context.</source>
          <target state="translated">启用verbose输出。请注意,此设置利用了 libsvm 中的每进程运行时设置,如果启用,可能无法在多线程环境中正常工作。</target>
        </trans-unit>
        <trans-unit id="e011261b023f1c50a89c645c44c1b74024dcc3cb" translate="yes" xml:space="preserve">
          <source>Enabling caching triggers a clone of the transformers before fitting. Therefore, the transformer instance given to the pipeline cannot be inspected directly. In following example, accessing the &lt;code&gt;PCA&lt;/code&gt; instance &lt;code&gt;pca2&lt;/code&gt; will raise an &lt;code&gt;AttributeError&lt;/code&gt; since &lt;code&gt;pca2&lt;/code&gt; will be an unfitted transformer. Instead, use the attribute &lt;code&gt;named_steps&lt;/code&gt; to inspect estimators within the pipeline:</source>
          <target state="translated">启用缓存会在安装之前触发变压器的克隆。因此，不能直接检查提供给管道的变压器实例。在以下示例中，由于 &lt;code&gt;pca2&lt;/code&gt; 将是不适合的转换器，因此访问 &lt;code&gt;PCA&lt;/code&gt; 实例 &lt;code&gt;pca2&lt;/code&gt; 将引发 &lt;code&gt;AttributeError&lt;/code&gt; 。相反，请使用 &lt;code&gt;named_steps&lt;/code&gt; 属性检查管道中的估计量：</target>
        </trans-unit>
        <trans-unit id="5dd6dd6d528d6c56c93bfa54a880bebb6081dbd5" translate="yes" xml:space="preserve">
          <source>Encode categorical features as an integer array.</source>
          <target state="translated">将分类特征编码为一个整数组。</target>
        </trans-unit>
        <trans-unit id="867c4ef64c8b33a12905de61714cfeeb4e8608e8" translate="yes" xml:space="preserve">
          <source>Encode categorical integer features as a one-hot numeric array.</source>
          <target state="translated">将分类整数特征编码为一热数字数组。</target>
        </trans-unit>
        <trans-unit id="e83e799757efe7594c0fcb8142a529519d41a568" translate="yes" xml:space="preserve">
          <source>Encode labels with value between 0 and n_classes-1.</source>
          <target state="translated">编码标签的值在0和n_classes-1之间。</target>
        </trans-unit>
        <trans-unit id="e37ba15c8600fb409fd86ad03dd66e7f8911c969" translate="yes" xml:space="preserve">
          <source>Encode the data as a sparse combination of the dictionary atoms.</source>
          <target state="translated">将数据编码为字典原子的稀疏组合。</target>
        </trans-unit>
        <trans-unit id="17084136241c30f27f93c8c1e4a27d606f5943cf" translate="yes" xml:space="preserve">
          <source>Encode the transformed result with one-hot encoding and return a dense array. Ignored features are always stacked to the right.</source>
          <target state="translated">将变换后的结果进行一热编码,并返回一个密集的数组。忽略的特征总是堆积在右边。</target>
        </trans-unit>
        <trans-unit id="7d39110e8af477e789c712f3b453b6702a9bbf56" translate="yes" xml:space="preserve">
          <source>Encode the transformed result with one-hot encoding and return a sparse matrix. Ignored features are always stacked to the right.</source>
          <target state="translated">对变换后的结果进行一热编码,并返回一个稀疏矩阵。忽略的特征总是堆叠在右边。</target>
        </trans-unit>
        <trans-unit id="972ec9fc8cb8ed4ba719fd4c0aa6881aefe86bd3" translate="yes" xml:space="preserve">
          <source>Ensemble Classifier based on trees with optimal splits.</source>
          <target state="translated">基于树的最优分割的集合分类器。</target>
        </trans-unit>
        <trans-unit id="9c851f7ae3177a8e0af0d0d4942bf15dd9558920" translate="yes" xml:space="preserve">
          <source>Ensemble regressor using trees with optimal splits.</source>
          <target state="translated">使用具有最优分割的树的集合回归器。</target>
        </trans-unit>
        <trans-unit id="7db0496bcf6055157a6cf21d558ebc73cda8c178" translate="yes" xml:space="preserve">
          <source>Ensures that the same group is not in both testing and training sets.</source>
          <target state="translated">确保测试组和训练组中不存在同一组。</target>
        </trans-unit>
        <trans-unit id="a640ce285cc23ffca6af12eb0d10747b165e1972" translate="yes" xml:space="preserve">
          <source>Epanechnikov kernel (&lt;code&gt;kernel = 'epanechnikov'&lt;/code&gt;)</source>
          <target state="translated">Epanechnikov内核（ &lt;code&gt;kernel = 'epanechnikov'&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="9fc0cc9e69ced6f0cc0657e69f071f805ce01366" translate="yes" xml:space="preserve">
          <source>Epsilon in the epsilon-SVR model. It specifies the epsilon-tube within which no penalty is associated in the training loss function with points predicted within a distance epsilon from the actual value.</source>
          <target state="translated">epsilon-SVR模型中的epsilon。它指定了在训练损失函数中与实际值距离epsilon以内的点预测没有惩罚的epsilon管。</target>
        </trans-unit>
        <trans-unit id="4ed9a42a6e15800dfd68cb8f20c45df87e63c881" translate="yes" xml:space="preserve">
          <source>Epsilon in the epsilon-insensitive loss functions; only if &lt;code&gt;loss&lt;/code&gt; is &amp;lsquo;huber&amp;rsquo;, &amp;lsquo;epsilon_insensitive&amp;rsquo;, or &amp;lsquo;squared_epsilon_insensitive&amp;rsquo;. For &amp;lsquo;huber&amp;rsquo;, determines the threshold at which it becomes less important to get the prediction exactly right. For epsilon-insensitive, any differences between the current prediction and the correct label are ignored if they are less than this threshold.</source>
          <target state="translated">&amp;epsilon;对&amp;epsilon;不敏感的损失函数；仅当 &lt;code&gt;loss&lt;/code&gt; 为&amp;ldquo;休伯&amp;rdquo;，&amp;ldquo; epsilon_insensitive&amp;rdquo;或&amp;ldquo; squared_epsilon_insensitive&amp;rdquo;时。对于&amp;ldquo;休伯&amp;rdquo;，确定使预测正确正确变得不那么重要的阈值。对于不敏感epsilon的情况，如果当前预测和正确标签之间的任何差异小于此阈值，则将忽略它们。</target>
        </trans-unit>
        <trans-unit id="70af2dd4371948d6d8b769928023ac2a2d97b96e" translate="yes" xml:space="preserve">
          <source>Epsilon parameter in the epsilon-insensitive loss function. Note that the value of this parameter depends on the scale of the target variable y. If unsure, set &lt;code&gt;epsilon=0&lt;/code&gt;.</source>
          <target state="translated">&amp;epsilon;不敏感损失函数中的Epsilon参数。注意，该参数的值取决于目标变量y的小数位数。如果不确定，则设置 &lt;code&gt;epsilon=0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9762ffa5f832a22ef1623e77879b5aedbdb848be" translate="yes" xml:space="preserve">
          <source>Epsilon-Insensitive: (soft-margin) Support Vector Regression.</source>
          <target state="translated">Epsilon-Insensitive。(软边际)支持向量回归。</target>
        </trans-unit>
        <trans-unit id="da54edf56fce7bd7a264e3d1fa7fc6377be64a06" translate="yes" xml:space="preserve">
          <source>Epsilon-Support Vector Regression.</source>
          <target state="translated">Epsilon-Support Vector Regression.</target>
        </trans-unit>
        <trans-unit id="58cf9f02c37f4e571562d69e2ecdec4b6bdb20c0" translate="yes" xml:space="preserve">
          <source>Equal bins</source>
          <target state="translated">同等仓</target>
        </trans-unit>
        <trans-unit id="d2cc2e8e023ba60c3c1e8ce054549e2f32652dee" translate="yes" xml:space="preserve">
          <source>Equal to &lt;code&gt;X.mean(axis=0)&lt;/code&gt;.</source>
          <target state="translated">等于 &lt;code&gt;X.mean(axis=0)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9adf67fee29baa8226533c4a0c8afd8441bfb86b" translate="yes" xml:space="preserve">
          <source>Equal to n_components largest eigenvalues of the covariance matrix of X.</source>
          <target state="translated">等于x的协方差矩阵的最大特征值n_components。</target>
        </trans-unit>
        <trans-unit id="73e059c46c01fa76e170bace40b2ada745227e7c" translate="yes" xml:space="preserve">
          <source>Equal to the average of (min(n_features, n_samples) - n_components) smallest eigenvalues of the covariance matrix of X.</source>
          <target state="translated">等于X的协方差矩阵的(min(n_features,n_samples)-n_components)最小特征值的平均值。</target>
        </trans-unit>
        <trans-unit id="e9fee6328b485fc681324eec053434b95d2bfcb4" translate="yes" xml:space="preserve">
          <source>Equals the inverse of the covariance but computed with the matrix inversion lemma for efficiency.</source>
          <target state="translated">等于协方差的倒数,但为了效率,用矩阵反演法则计算。</target>
        </trans-unit>
        <trans-unit id="7c2b1db2f16fb6c956a205cc772489db886e0dc7" translate="yes" xml:space="preserve">
          <source>Equivalent for classification</source>
          <target state="translated">相当于分类</target>
        </trans-unit>
        <trans-unit id="3667ffbfed2809c2f7670413bede3adc63aa5387" translate="yes" xml:space="preserve">
          <source>Equivalent for regression</source>
          <target state="translated">等同于回归</target>
        </trans-unit>
        <trans-unit id="187e93148f8ba7389b55736d8d0ebf8b6c9f880c" translate="yes" xml:space="preserve">
          <source>Equivalent function without the estimator API.</source>
          <target state="translated">不使用估计器API的等价函数。</target>
        </trans-unit>
        <trans-unit id="3d8db9d00f471621d5dcb711e1d7f5afe2ed43e9" translate="yes" xml:space="preserve">
          <source>Equivalent to : np.log(nl.det(A)) but more robust. It returns -Inf if det(A) is non positive or is not defined.</source>
          <target state="translated">相当于:np.log(nl.det(A)),但更稳健。如果det(A)不是正数或者没有定义,则返回-Inf。</target>
        </trans-unit>
        <trans-unit id="6ee4d4d6ed3d7d39e20008553b379868177623c4" translate="yes" xml:space="preserve">
          <source>Equivalent to CountVectorizer followed by TfidfTransformer.</source>
          <target state="translated">相当于TfidfTransformer后面的CountVectorizer。</target>
        </trans-unit>
        <trans-unit id="78dad4d5371a52a9fe04cbb08bee03733fb97cc2" translate="yes" xml:space="preserve">
          <source>Equivalent to fit(X).transform(X) but more convenient.</source>
          <target state="translated">相当于fit(X).transform(X),但更方便。</target>
        </trans-unit>
        <trans-unit id="c5ff0ad39c389155a01251e7d429852bca1e1b3d" translate="yes" xml:space="preserve">
          <source>Equivalent to fit(X).transform(X), but more efficiently implemented.</source>
          <target state="translated">相当于fit(X).transform(X),但实现效率更高。</target>
        </trans-unit>
        <trans-unit id="76c6a802539723d6c4e842195e70eb54649c28ba" translate="yes" xml:space="preserve">
          <source>Erase the complete cache directory.</source>
          <target state="translated">擦除完整的缓存目录。</target>
        </trans-unit>
        <trans-unit id="7e409a71cae51b406df860e2f47a14116718ce00" translate="yes" xml:space="preserve">
          <source>Errors of all outputs are averaged with uniform weight.</source>
          <target state="translated">所有输出的误差均以统一的权重取平均值。</target>
        </trans-unit>
        <trans-unit id="37f51300347dea468db5ef715fa03dda1df565c0" translate="yes" xml:space="preserve">
          <source>Ester, M., H. P. Kriegel, J. Sander, and X. Xu, &amp;ldquo;A Density-Based Algorithm for Discovering Clusters in Large Spatial Databases with Noise&amp;rdquo;. In: Proceedings of the 2nd International Conference on Knowledge Discovery and Data Mining, Portland, OR, AAAI Press, pp. 226-231. 1996</source>
          <target state="translated">Ester，M.，HP Kriegel，J。Sander和X. Xu，&amp;ldquo;一种基于密度的算法，用于发现带有噪声的大型空间数据库中的簇&amp;rdquo;。在：俄勒冈州波特兰市第二届知识发现和数据挖掘国际会议论文集，AAAI出版社，第226-231页。 1996年</target>
        </trans-unit>
        <trans-unit id="12d42a4e3f7c76d114e185960dc4052e85176323" translate="yes" xml:space="preserve">
          <source>Estimate class weights for unbalanced datasets.</source>
          <target state="translated">估计非平衡数据集的类权重。</target>
        </trans-unit>
        <trans-unit id="77738a42a4fef499838bc5b9b8535e450fc0c81b" translate="yes" xml:space="preserve">
          <source>Estimate covariance with the Oracle Approximating Shrinkage algorithm.</source>
          <target state="translated">用Oracle近似收缩算法估计协方差。</target>
        </trans-unit>
        <trans-unit id="29a1c7677f95ee278fb2b2cce5cca193d5f13fca" translate="yes" xml:space="preserve">
          <source>Estimate log probability.</source>
          <target state="translated">估计对数概率。</target>
        </trans-unit>
        <trans-unit id="626987b46477a4ecd70879947faf6111d0671820" translate="yes" xml:space="preserve">
          <source>Estimate model parameters using X and predict the labels for X.</source>
          <target state="translated">用X估计模型参数,并预测X的标签。</target>
        </trans-unit>
        <trans-unit id="24a02427ae70131dfeef6ac34710ae63bb461df8" translate="yes" xml:space="preserve">
          <source>Estimate model parameters with the EM algorithm.</source>
          <target state="translated">用EM算法估计模型参数。</target>
        </trans-unit>
        <trans-unit id="f0c2538713100e2e63a775f980959a15758e5c20" translate="yes" xml:space="preserve">
          <source>Estimate mutual information for a continuous target variable.</source>
          <target state="translated">估计一个连续目标变量的相互信息。</target>
        </trans-unit>
        <trans-unit id="ee788dd0834f776f58eab8b4e683270ca567bb90" translate="yes" xml:space="preserve">
          <source>Estimate mutual information for a discrete target variable.</source>
          <target state="translated">估计一个离散目标变量的互信息。</target>
        </trans-unit>
        <trans-unit id="4966688bff7148f9375cbc4b0b12777c7e8549ff" translate="yes" xml:space="preserve">
          <source>Estimate probability.</source>
          <target state="translated">估计概率。</target>
        </trans-unit>
        <trans-unit id="e6f240edc3453485ce1d9624944be7d9e80f9939" translate="yes" xml:space="preserve">
          <source>Estimate sample weights by class for unbalanced datasets.</source>
          <target state="translated">按类估计非平衡数据集的样本权重。</target>
        </trans-unit>
        <trans-unit id="28bb022b0403308a30d01391bddef612941c4d9c" translate="yes" xml:space="preserve">
          <source>Estimate the bandwidth to use with the mean-shift algorithm.</source>
          <target state="translated">估算使用平均移动算法的带宽。</target>
        </trans-unit>
        <trans-unit id="d0a5c91037945dc9f602f9fc19d18a088ab1af96" translate="yes" xml:space="preserve">
          <source>Estimate the best class label for each sample in X.</source>
          <target state="translated">估计X中每个样本的最佳类标签。</target>
        </trans-unit>
        <trans-unit id="35f10d993ed914ea9a584fa6a6d51088e31ec34a" translate="yes" xml:space="preserve">
          <source>Estimate the optimal parameter lambda for each feature.</source>
          <target state="translated">估计每个特征的最佳参数lambda。</target>
        </trans-unit>
        <trans-unit id="33a932b84fcf7cd09b096514149173ce987d1de3" translate="yes" xml:space="preserve">
          <source>Estimate the support of a high-dimensional distribution.</source>
          <target state="translated">估计高维分布的支持度。</target>
        </trans-unit>
        <trans-unit id="c0d06051c8850102e07544fcda2cb347a1888024" translate="yes" xml:space="preserve">
          <source>Estimated coefficients for the linear regression problem. If multiple targets are passed during the fit (y 2D), this is a 2D array of shape (n_targets, n_features), while if only one target is passed, this is a 1D array of length n_features.</source>
          <target state="translated">估计线性回归问题的系数。如果在拟合过程中传递了多个目标(y 2D),这是一个形状为(n_targets,n_features)的2D数组,而如果只传递了一个目标,这是一个长度为n_features的1D数组。</target>
        </trans-unit>
        <trans-unit id="c51dac3db2b00a3e5d13b4bba0163b8818836700" translate="yes" xml:space="preserve">
          <source>Estimated covariance matrix</source>
          <target state="translated">估计的协方差矩阵</target>
        </trans-unit>
        <trans-unit id="f6a56143e5e823354a6ea140d9ad9a695d196915" translate="yes" xml:space="preserve">
          <source>Estimated covariance matrix.</source>
          <target state="translated">估计的协方差矩阵。</target>
        </trans-unit>
        <trans-unit id="ce8babb09f24988272d6712d02011d138ac4dd96" translate="yes" xml:space="preserve">
          <source>Estimated covariance of data.</source>
          <target state="translated">估计数据的协方差。</target>
        </trans-unit>
        <trans-unit id="0e6549fc34f70d49ad6f6f8930c7c9c99fe9fb11" translate="yes" xml:space="preserve">
          <source>Estimated intercept of regression model.</source>
          <target state="translated">回归模型的估计截距。</target>
        </trans-unit>
        <trans-unit id="49f3e460169f288e6f4c4694aa81586c50169d3c" translate="yes" xml:space="preserve">
          <source>Estimated location, i.e. the estimated mean.</source>
          <target state="translated">估计位置,即估计平均值。</target>
        </trans-unit>
        <trans-unit id="79fc989bb320040671849fdef4e54f5e32bf1bed" translate="yes" xml:space="preserve">
          <source>Estimated log probabilities.</source>
          <target state="translated">估计的对数概率。</target>
        </trans-unit>
        <trans-unit id="52ae0b35506b15c8ea435495e684137ed1345f33" translate="yes" xml:space="preserve">
          <source>Estimated mutual information between each feature and the target.</source>
          <target state="translated">估计每个特征和目标之间的相互信息。</target>
        </trans-unit>
        <trans-unit id="d00e5f9dd9545603e150c240c013a9b1a6e7dbd1" translate="yes" xml:space="preserve">
          <source>Estimated number of non-zero coefficients giving the best mean squared error over the cross-validation folds.</source>
          <target state="translated">估计的非零系数数,给出了交叉验证折线上的最佳均方误差。</target>
        </trans-unit>
        <trans-unit id="322d1fa75ba3c30435155ae59fb453e6166565fa" translate="yes" xml:space="preserve">
          <source>Estimated precision matrix (inverse covariance).</source>
          <target state="translated">估计精度矩阵(反协方差)。</target>
        </trans-unit>
        <trans-unit id="7c1713c7e9e350543f03710572cd221ee74225b9" translate="yes" xml:space="preserve">
          <source>Estimated precision of data.</source>
          <target state="translated">数据的估计精度。</target>
        </trans-unit>
        <trans-unit id="38bf28f7d9ef4c3aecd8220e7fcf0991ef268390" translate="yes" xml:space="preserve">
          <source>Estimated probabilities or decision function.</source>
          <target state="translated">估计的概率或决定函数:</target>
        </trans-unit>
        <trans-unit id="08744c85a61bbaa6f35071da2e1ec58dbc911fa6" translate="yes" xml:space="preserve">
          <source>Estimated probabilities.</source>
          <target state="translated">估计的概率:</target>
        </trans-unit>
        <trans-unit id="31f41b0d8806f4d1ac991a2d4e980a5f9811f6e4" translate="yes" xml:space="preserve">
          <source>Estimated pseudo inverse matrix.</source>
          <target state="translated">估计的伪逆矩阵。</target>
        </trans-unit>
        <trans-unit id="5f97e9fc9a17c42b498b496a92c0a8d28c92b983" translate="yes" xml:space="preserve">
          <source>Estimated pseudo inverse matrix. (stored only if store_precision is True)</source>
          <target state="translated">估计的伪反矩阵。(仅在store_precision为True时存储)</target>
        </trans-unit>
        <trans-unit id="92a71e9f8fe7c53091e68f20fa05a0e1d0b803f6" translate="yes" xml:space="preserve">
          <source>Estimated pseudo-inverse matrix. (stored only if store_precision is True)</source>
          <target state="translated">估计的伪逆矩阵。(仅在store_precision为真时存储)</target>
        </trans-unit>
        <trans-unit id="351a2a48aa75b3f672267ea261e137bd6d905714" translate="yes" xml:space="preserve">
          <source>Estimated regularization parameter</source>
          <target state="translated">估计的正则化参数</target>
        </trans-unit>
        <trans-unit id="fb9c664ca6951f49663e9330e4fa71d675f71135" translate="yes" xml:space="preserve">
          <source>Estimated regularization parameter.</source>
          <target state="translated">估计的正则化参数。</target>
        </trans-unit>
        <trans-unit id="522be5fa9ba5e4edbaac594caffaed51c78b28bf" translate="yes" xml:space="preserve">
          <source>Estimated robust covariance matrix</source>
          <target state="translated">估计的稳健协方差矩阵</target>
        </trans-unit>
        <trans-unit id="2d9d9125a66cc797d9c4d66422802791da2c7d01" translate="yes" xml:space="preserve">
          <source>Estimated robust location</source>
          <target state="translated">估计的可靠地点</target>
        </trans-unit>
        <trans-unit id="ca8d18c9de068a04ede1f42a5bfc0b7fa119ab57" translate="yes" xml:space="preserve">
          <source>Estimated target values.</source>
          <target state="translated">估计目标值:</target>
        </trans-unit>
        <trans-unit id="350cd129fc5a2a36d16bce05977fadc085c6284d" translate="yes" xml:space="preserve">
          <source>Estimated targets as returned by a classifier.</source>
          <target state="translated">分类器返回的估计目标。</target>
        </trans-unit>
        <trans-unit id="a87426d5dedb58eaa4f8e1c2aa5f5c6fa95ac9d1" translate="yes" xml:space="preserve">
          <source>Estimates Lasso and Elastic-Net regression models on a manually generated sparse signal corrupted with an additive noise. Estimated coefficients are compared with the ground-truth.</source>
          <target state="translated">在被加性噪声破坏的人工生成的稀疏信号上估计Lasso和Elastic-Net回归模型。将估计的系数与实际情况进行比较。</target>
        </trans-unit>
        <trans-unit id="545fc031a144e6d70050fdf9086d58fa9c00fd7c" translate="yes" xml:space="preserve">
          <source>Estimates the shrunk Ledoit-Wolf covariance matrix.</source>
          <target state="translated">估计缩小的Ledoit-Wolf协方差矩阵。</target>
        </trans-unit>
        <trans-unit id="252e9247fd939b2cb6c223ff81c63fbadfd554ad" translate="yes" xml:space="preserve">
          <source>Estimator must support &lt;code&gt;fit&lt;/code&gt; and &lt;code&gt;transform&lt;/code&gt;. Special-cased strings &amp;lsquo;drop&amp;rsquo; and &amp;lsquo;passthrough&amp;rsquo; are accepted as well, to indicate to drop the columns or to pass them through untransformed, respectively.</source>
          <target state="translated">估算器必须支持 &lt;code&gt;fit&lt;/code&gt; 和 &lt;code&gt;transform&lt;/code&gt; 。也接受特殊情况的字符串&amp;ldquo; drop&amp;rdquo;和&amp;ldquo; passthrough&amp;rdquo;，以指示分别删除列或将其传递给未转换的列。</target>
        </trans-unit>
        <trans-unit id="8f151c36f07126688b7b11c633d0a5229d30e281" translate="yes" xml:space="preserve">
          <source>Estimator object such as derived from &lt;code&gt;TransformerMixin&lt;/code&gt;. Cannot be set at the same time as &lt;code&gt;func&lt;/code&gt; and &lt;code&gt;inverse_func&lt;/code&gt;. If &lt;code&gt;transformer&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt; as well as &lt;code&gt;func&lt;/code&gt; and &lt;code&gt;inverse_func&lt;/code&gt;, the transformer will be an identity transformer. Note that the transformer will be cloned during fitting. Also, the transformer is restricting &lt;code&gt;y&lt;/code&gt; to be a numpy array.</source>
          <target state="translated">估计对象，例如从 &lt;code&gt;TransformerMixin&lt;/code&gt; 派生的。不能与 &lt;code&gt;func&lt;/code&gt; 和 &lt;code&gt;inverse_func&lt;/code&gt; 同时设置。如果 &lt;code&gt;transformer&lt;/code&gt; 为 &lt;code&gt;None&lt;/code&gt; 以及 &lt;code&gt;func&lt;/code&gt; 和 &lt;code&gt;inverse_func&lt;/code&gt; ，则该变压器将为标识变压器。请注意，在安装过程中将克隆变压器。同样，转换器将 &lt;code&gt;y&lt;/code&gt; 限制为一个numpy数组。</target>
        </trans-unit>
        <trans-unit id="3c5695ffb4b900852fe8e038660b232b903c14d4" translate="yes" xml:space="preserve">
          <source>Estimator object to test.</source>
          <target state="translated">要测试的估计器对象。</target>
        </trans-unit>
        <trans-unit id="2badb817a93b02b56f6c22f87116eb0b74c2846b" translate="yes" xml:space="preserve">
          <source>Estimator that was chosen by the search, i.e. estimator which gave highest score (or smallest loss if specified) on the left out data. Not available if &lt;code&gt;refit=False&lt;/code&gt;.</source>
          <target state="translated">搜索选择的估计量，即，对剩余数据给出最高得分（或最小损失，如果指定）的估计量。如果 &lt;code&gt;refit=False&lt;/code&gt; 则不可用。</target>
        </trans-unit>
        <trans-unit id="f7834a5f96e5f5cdd51270833e6f1f425a3f4c54" translate="yes" xml:space="preserve">
          <source>Estimator to check. Estimator is a class object or instance.</source>
          <target state="translated">要检查的Estimator。Estimator是一个类对象或实例。</target>
        </trans-unit>
        <trans-unit id="d52f4d3825efd220d2de6a981b23c8e26fcde5ab" translate="yes" xml:space="preserve">
          <source>Estimators</source>
          <target state="translated">Estimators</target>
        </trans-unit>
        <trans-unit id="821d45d07661e4f3b179f21c6ae30968ebac5164" translate="yes" xml:space="preserve">
          <source>Estimators objects</source>
          <target state="translated">估计员对象</target>
        </trans-unit>
        <trans-unit id="a41665d3e18187ab27fb8bf53b3bc7103150f173" translate="yes" xml:space="preserve">
          <source>Estimators used for predictions.</source>
          <target state="translated">用于预测的估计器。</target>
        </trans-unit>
        <trans-unit id="1ceba488aef46aef78b12102cb5affcadf9c4b7a" translate="yes" xml:space="preserve">
          <source>Euclidean distance between points</source>
          <target state="translated">点间欧氏距离</target>
        </trans-unit>
        <trans-unit id="40f41d7d98cb9f19b9c98c8e07642528e04e32b0" translate="yes" xml:space="preserve">
          <source>EuclideanDistance</source>
          <target state="translated">EuclideanDistance</target>
        </trans-unit>
        <trans-unit id="1d364ee9b875b64eaad236b1759f81773e877813" translate="yes" xml:space="preserve">
          <source>Eval function func with arguments &lt;code&gt;*args&lt;/code&gt; and &lt;code&gt;**kwargs&lt;/code&gt;, in the context of the memory.</source>
          <target state="translated">在内存的上下文中，带有参数 &lt;code&gt;*args&lt;/code&gt; 和 &lt;code&gt;**kwargs&lt;/code&gt; 的评估函数func 。</target>
        </trans-unit>
        <trans-unit id="27964d7a1dc90a5e8f1c6e49cc3e0b31a0dcbcc8" translate="yes" xml:space="preserve">
          <source>Evaluate a score by cross-validation</source>
          <target state="translated">通过交叉验证来评价一个分数。</target>
        </trans-unit>
        <trans-unit id="36d3aae3be564e9be1c639fcbf14d05da177e219" translate="yes" xml:space="preserve">
          <source>Evaluate metric(s) by cross-validation and also record fit/score times.</source>
          <target state="translated">通过交叉验证评估度量,并记录拟合/得分时间。</target>
        </trans-unit>
        <trans-unit id="b211038d49d5705cc19f985867e0d05d65e7b1cd" translate="yes" xml:space="preserve">
          <source>Evaluate the ability of k-means initializations strategies to make the algorithm convergence robust as measured by the relative standard deviation of the inertia of the clustering (i.e. the sum of squared distances to the nearest cluster center).</source>
          <target state="translated">评价k-means初始化策略使算法收敛稳健的能力,用聚类惯性的相对标准差(即到最近聚类中心的平方距离之和)来衡量。</target>
        </trans-unit>
        <trans-unit id="0267c2a322fb81919643f1c8b47e538a5f10ac03" translate="yes" xml:space="preserve">
          <source>Evaluate the decision_function of the models in the chain.</source>
          <target state="translated">评估链中模型的决策函数。</target>
        </trans-unit>
        <trans-unit id="0295c741298cb05bf8318055d2a93d9ed6aaae43" translate="yes" xml:space="preserve">
          <source>Evaluate the density model on the data.</source>
          <target state="translated">对数据的密度模型进行评估。</target>
        </trans-unit>
        <trans-unit id="43a2d2f2da5c5d6842a2bfba3308dda1ee4e22a1" translate="yes" xml:space="preserve">
          <source>Evaluate the kernel.</source>
          <target state="translated">评估内核。</target>
        </trans-unit>
        <trans-unit id="1b6513ff9ee162df49de8f7fa6de2010373e5777" translate="yes" xml:space="preserve">
          <source>Evaluate the performance on a held out test set.</source>
          <target state="translated">评价憋出来的一套试验品的性能。</target>
        </trans-unit>
        <trans-unit id="10964efc0d5efc6caf6a43aabd904ac43fde30bc" translate="yes" xml:space="preserve">
          <source>Evaluate the performance on some held out test set.</source>
          <target state="translated">评价一些憋出来的测试集的性能。</target>
        </trans-unit>
        <trans-unit id="87020b7922d9bcb099e44f8eda127a751d22052d" translate="yes" xml:space="preserve">
          <source>Evaluate the significance of a cross-validated score with permutations</source>
          <target state="translated">评价交叉验证分数的意义与变异。</target>
        </trans-unit>
        <trans-unit id="331f2a4c75f84e3730d4c87b6283eb71b6bffe9a" translate="yes" xml:space="preserve">
          <source>Evaluating the performance of a clustering algorithm is not as trivial as counting the number of errors or the precision and recall of a supervised classification algorithm. In particular any evaluation metric should not take the absolute values of the cluster labels into account but rather if this clustering define separations of the data similar to some ground truth set of classes or satisfying some assumption such that members belong to the same class are more similar that members of different classes according to some similarity metric.</source>
          <target state="translated">评估聚类算法的性能并不像计算错误数或监督分类算法的精度和召回率那样琐碎。特别是任何评价指标都不应该考虑聚类标签的绝对值,而应该考虑这种聚类是否定义了类似于某些类的基本真理集的数据分离,或者满足某种假设,即根据某种相似性指标,属于同一类的成员比不同类的成员更相似。</target>
        </trans-unit>
        <trans-unit id="bb2237aa639c429ff983c7018ab0995764349255" translate="yes" xml:space="preserve">
          <source>Evaluating the predictive accuracy of the model is equally easy:</source>
          <target state="translated">评估模型的预测准确性同样容易。</target>
        </trans-unit>
        <trans-unit id="ff7513853508e7c6e3aa07908df2a450a026eb88" translate="yes" xml:space="preserve">
          <source>Evaluation</source>
          <target state="translated">Evaluation</target>
        </trans-unit>
        <trans-unit id="6971a916352619eefe0f7a0b7ef86699499120a7" translate="yes" xml:space="preserve">
          <source>Evaluation of the performance on the test set</source>
          <target state="translated">评价测试集的性能</target>
        </trans-unit>
        <trans-unit id="72a89628cbe77a1879dbef64925f75f5f83b59f6" translate="yes" xml:space="preserve">
          <source>Even if you are in favorable recovery conditions, the alpha parameter chosen by cross-validation (e.g. using the &lt;a href=&quot;generated/sklearn.covariance.graphicallassocv#sklearn.covariance.GraphicalLassoCV&quot;&gt;&lt;code&gt;GraphicalLassoCV&lt;/code&gt;&lt;/a&gt; object) will lead to selecting too many edges. However, the relevant edges will have heavier weights than the irrelevant ones.</source>
          <target state="translated">即使您处于良好的恢复条件下，通过交叉验证（例如，使用&lt;a href=&quot;generated/sklearn.covariance.graphicallassocv#sklearn.covariance.GraphicalLassoCV&quot;&gt; &lt;code&gt;GraphicalLassoCV&lt;/code&gt; &lt;/a&gt;对象）选择的alpha参数也会导致选择过多的边。但是，相关边缘的权重将比无关边缘大。</target>
        </trans-unit>
        <trans-unit id="db2937cd785b1813ed693616dbcad71ea9f17b9a" translate="yes" xml:space="preserve">
          <source>Every estimator has its advantages and drawbacks. Its generalization error can be decomposed in terms of bias, variance and noise. The &lt;strong&gt;bias&lt;/strong&gt; of an estimator is its average error for different training sets. The &lt;strong&gt;variance&lt;/strong&gt; of an estimator indicates how sensitive it is to varying training sets. Noise is a property of the data.</source>
          <target state="translated">每个估算器都有其优点和缺点。其泛化误差可以根据偏差，方差和噪声进行分解。估计量的&lt;strong&gt;偏差&lt;/strong&gt;是不同训练集的平均误差。估计量的&lt;strong&gt;方差&lt;/strong&gt;表明它对变化的训练集有多敏感。噪声是数据的属性。</target>
        </trans-unit>
        <trans-unit id="af20e0e858d1856d2e40112f0c08f5b28b62db63" translate="yes" xml:space="preserve">
          <source>Example builds a swiss roll dataset and runs hierarchical clustering on their position.</source>
          <target state="translated">例子建立了一个瑞士卷数据集,并对它们的位置进行分层聚类。</target>
        </trans-unit>
        <trans-unit id="b054a27ddcb85aae660e943728ef92933fd8093d" translate="yes" xml:space="preserve">
          <source>Example of 2-fold K-Fold repeated 2 times:</source>
          <target state="translated">2倍K-Fold重复2次的例子。</target>
        </trans-unit>
        <trans-unit id="775a4099877d8eabce57834f895edd8d2c27c8f1" translate="yes" xml:space="preserve">
          <source>Example of 2-fold cross-validation on a dataset with 4 samples:</source>
          <target state="translated">在一个有4个样本的数据集上进行2倍交叉验证的例子。</target>
        </trans-unit>
        <trans-unit id="f7dec7d8533595e2fae4eb67ed4e4c4d4af0c6e2" translate="yes" xml:space="preserve">
          <source>Example of 3-split time series cross-validation on a dataset with 6 samples:</source>
          <target state="translated">在一个有6个样本的数据集上进行3-split时间序列交叉验证的例子。</target>
        </trans-unit>
        <trans-unit id="1f1035445c3ae152d4dd60951a440630e1ce8963" translate="yes" xml:space="preserve">
          <source>Example of LabelPropagation learning a complex internal structure to demonstrate &amp;ldquo;manifold learning&amp;rdquo;. The outer circle should be labeled &amp;ldquo;red&amp;rdquo; and the inner circle &amp;ldquo;blue&amp;rdquo;. Because both label groups lie inside their own distinct shape, we can see that the labels propagate correctly around the circle.</source>
          <target state="translated">LabelPropagation示例学习一个复杂的内部结构以演示&amp;ldquo;流形学习&amp;rdquo;。外圈应标记为&amp;ldquo;红色&amp;rdquo;，内圈应标记为&amp;ldquo;蓝色&amp;rdquo;。由于两个标签组都位于各自不同的形状内，因此我们可以看到标签在圆周围正确传播。</target>
        </trans-unit>
        <trans-unit id="ec09a338f4ceb5460e2b7e38e1b33e3ef7fa6d14" translate="yes" xml:space="preserve">
          <source>Example of Leave-2-Group Out:</source>
          <target state="translated">假期-2-组出的例子。</target>
        </trans-unit>
        <trans-unit id="31b95d540baeeff337f5e438360c1335d4861678" translate="yes" xml:space="preserve">
          <source>Example of Leave-2-Out on a dataset with 4 samples:</source>
          <target state="translated">在一个有4个样本的数据集上进行Leave-2-Out的例子。</target>
        </trans-unit>
        <trans-unit id="e6356d19782633901d92c08733ceff47f8b17ac8" translate="yes" xml:space="preserve">
          <source>Example of Precision-Recall metric to evaluate classifier output quality.</source>
          <target state="translated">评估分类器输出质量的Precision-Recall度量的例子。</target>
        </trans-unit>
        <trans-unit id="6cef3f8431f322d58c5687b77b862511d64cd0b0" translate="yes" xml:space="preserve">
          <source>Example of Receiver Operating Characteristic (ROC) metric to evaluate classifier output quality using cross-validation.</source>
          <target state="translated">使用交叉验证来评估分类器输出质量的接收机工作特征(ROC)度量的例子。</target>
        </trans-unit>
        <trans-unit id="f0961d91f52f411acce5b38ba8bf580ba7672bf5" translate="yes" xml:space="preserve">
          <source>Example of Receiver Operating Characteristic (ROC) metric to evaluate classifier output quality.</source>
          <target state="translated">评价分类器输出质量的接收操作特征(ROC)指标的例子。</target>
        </trans-unit>
        <trans-unit id="c672d789b35a63392eb82ffa490d03df087b80bd" translate="yes" xml:space="preserve">
          <source>Example of confusion matrix usage to evaluate the quality of the output of a classifier on the iris data set. The diagonal elements represent the number of points for which the predicted label is equal to the true label, while off-diagonal elements are those that are mislabeled by the classifier. The higher the diagonal values of the confusion matrix the better, indicating many correct predictions.</source>
          <target state="translated">混淆矩阵的使用实例,用于评估分类器在虹膜数据集上的输出质量。对角线元素代表预测标签等于真实标签的点的数量,而对角线外的元素则是被分类器标错的点。混淆矩阵的对角线值越高越好,说明有很多正确的预测。</target>
        </trans-unit>
        <trans-unit id="752de6074a0362c86d5f4fb627bab2842b8b0ae0" translate="yes" xml:space="preserve">
          <source>Example of stratified 3-fold cross-validation on a dataset with 10 samples from two slightly unbalanced classes:</source>
          <target state="translated">在一个数据集上进行分层3倍交叉验证的例子,该数据集有10个样本,来自两个略微不平衡的类。</target>
        </trans-unit>
        <trans-unit id="3da9149ad458a1c02424ad972118b43d9715130d" translate="yes" xml:space="preserve">
          <source>Example of using classifier chain on a multilabel dataset.</source>
          <target state="translated">在多标签数据集上使用分类器链的例子。</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="ee7d189b3b9a52149ec75a7f9fd3d55844ee39e2" translate="yes" xml:space="preserve">
          <source>Example: &lt;a href=&quot;../auto_examples/cluster/plot_dict_face_patches#sphx-glr-auto-examples-cluster-plot-dict-face-patches-py&quot;&gt;Online learning of a dictionary of parts of faces&lt;/a&gt;</source>
          <target state="translated">示例：&lt;a href=&quot;../auto_examples/cluster/plot_dict_face_patches#sphx-glr-auto-examples-cluster-plot-dict-face-patches-py&quot;&gt;在线学习面部字典&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="13ffa1f15cd32eb579ece27465f7130f26d617c0" translate="yes" xml:space="preserve">
          <source>Example: A demo of K-Means clustering on the handwritten digits data</source>
          <target state="translated">例子:手写数字数据的K-Means聚类演示</target>
        </trans-unit>
        <trans-unit id="1aa0ed6f1e3c17b359921a63eee814f674f5080b" translate="yes" xml:space="preserve">
          <source>Example: A demo of structured Ward hierarchical clustering on an image of coins</source>
          <target state="translated">例子。钱币图像上的结构化Ward层次聚类演示</target>
        </trans-unit>
        <trans-unit id="1a938132496d121bd8a4a9e31f447afd8526464a" translate="yes" xml:space="preserve">
          <source>Example: A demo of the Spectral Biclustering algorithm</source>
          <target state="translated">例子。频谱双聚类算法演示</target>
        </trans-unit>
        <trans-unit id="223587fccbb61c19da014d17e56be51b9b621c5e" translate="yes" xml:space="preserve">
          <source>Example: A demo of the Spectral Co-Clustering algorithm</source>
          <target state="translated">例子。频谱聚类算法的演示</target>
        </trans-unit>
        <trans-unit id="aebc2052e5577abc65ff8a9cc5068ffe5c4b0acf" translate="yes" xml:space="preserve">
          <source>Example: A demo of the mean-shift clustering algorithm</source>
          <target state="translated">例子。平均移动聚类算法的演示</target>
        </trans-unit>
        <trans-unit id="68a0ba5db3a79b980c5030dd4e310f8dfb2b4aae" translate="yes" xml:space="preserve">
          <source>Example: Adjustment for chance in clustering performance evaluation</source>
          <target state="translated">例子:在聚类绩效评估中对偶然性进行调整。在聚类绩效评估中对偶然性进行调整</target>
        </trans-unit>
        <trans-unit id="00a478b22f950ff25f5f8504d2727f511fc51c9f" translate="yes" xml:space="preserve">
          <source>Example: Agglomerative clustering with and without structure</source>
          <target state="translated">例子:有结构和无结构的聚类 有结构和无结构的聚类聚类</target>
        </trans-unit>
        <trans-unit id="eeb74b4ad59447d463a1f094f147cc4745c74a15" translate="yes" xml:space="preserve">
          <source>Example: Agglomerative clustering with different metrics</source>
          <target state="translated">例子。不同指标的聚类聚类</target>
        </trans-unit>
        <trans-unit id="1764a5822a4f536873b63922bafc73c7617a1d57" translate="yes" xml:space="preserve">
          <source>Example: Automatic Relevance Determination Regression</source>
          <target state="translated">例子。自动关联性确定回归</target>
        </trans-unit>
        <trans-unit id="99efd4ae7e49c9e19333b8f7e08a8f9cb4502f2a" translate="yes" xml:space="preserve">
          <source>Example: Bayesian Ridge Regression</source>
          <target state="translated">例子。贝叶斯岭回归</target>
        </trans-unit>
        <trans-unit id="6b96c88dc119477b46b5c4c26d963416c138c40b" translate="yes" xml:space="preserve">
          <source>Example: Beta-divergence loss functions</source>
          <target state="translated">例子:贝塔偏离损失函数</target>
        </trans-unit>
        <trans-unit id="dfd734015202b00fb9f9cbbf1ea22d8ce02b7efc" translate="yes" xml:space="preserve">
          <source>Example: Biclustering documents with the Spectral Co-clustering algorithm</source>
          <target state="translated">例子。用Spectral Co-clustering算法对文档进行双聚类处理。</target>
        </trans-unit>
        <trans-unit id="b6ba1753ca89ef63711a7bfd6dd8aee0516cea16" translate="yes" xml:space="preserve">
          <source>Example: Blind source separation using FastICA</source>
          <target state="translated">例子:使用FastICA进行盲源分离</target>
        </trans-unit>
        <trans-unit id="29d059ec80fd15a87304fc7d9d707a9db3aa2844" translate="yes" xml:space="preserve">
          <source>Example: Classification of text documents using sparse features</source>
          <target state="translated">例子。利用稀疏特征对文本文件进行分类</target>
        </trans-unit>
        <trans-unit id="af4443d01a097c53194624cce3b6cff8b512dcc5" translate="yes" xml:space="preserve">
          <source>Example: Classifier Chain</source>
          <target state="translated">例子 分类器链</target>
        </trans-unit>
        <trans-unit id="41b2d119c288ff01548847f870ddbbf235ec9774" translate="yes" xml:space="preserve">
          <source>Example: Classifier comparison</source>
          <target state="translated">例子。分类器比较</target>
        </trans-unit>
        <trans-unit id="8330987e7141a381d8daa319c2cb9b08a788e549" translate="yes" xml:space="preserve">
          <source>Example: Clustering text documents using k-means</source>
          <target state="translated">例子:使用k-means对文本文件进行聚类处理</target>
        </trans-unit>
        <trans-unit id="edfffe0f72c74899a5c34dc2a35f53194424daf4" translate="yes" xml:space="preserve">
          <source>Example: Color Quantization using K-Means</source>
          <target state="translated">例子:使用K-Means进行颜色量化。使用K-Means的颜色量化技术</target>
        </trans-unit>
        <trans-unit id="fdf59ece9d8354bf1a831ab9e77bd2512be9e8ab" translate="yes" xml:space="preserve">
          <source>Example: Column Transformer with Heterogeneous Data Sources</source>
          <target state="translated">例子:异构数据源的列式变换器</target>
        </trans-unit>
        <trans-unit id="3ee51c02827507bba4a78c8961a51beb164bcdd9" translate="yes" xml:space="preserve">
          <source>Example: Column Transformer with Mixed Types</source>
          <target state="translated">例子:混合型柱式变压器</target>
        </trans-unit>
        <trans-unit id="5a32441a1ea07ae043439cadb17991db44c4ae1a" translate="yes" xml:space="preserve">
          <source>Example: Compare BIRCH and MiniBatchKMeans</source>
          <target state="translated">例子。比较BIRCH和MiniBatchKMeans。</target>
        </trans-unit>
        <trans-unit id="ee2468086613f43ebbaf93886169e0cb0485d7d0" translate="yes" xml:space="preserve">
          <source>Example: Compare Stochastic learning strategies for MLPClassifier</source>
          <target state="translated">例子 比较MLPClassifier的随机学习策略</target>
        </trans-unit>
        <trans-unit id="882cff0557b4f9ed2a9d7f3900cf0b8582c4fe45" translate="yes" xml:space="preserve">
          <source>Example: Compare cross decomposition methods</source>
          <target state="translated">例子。比较交叉分解方法</target>
        </trans-unit>
        <trans-unit id="4df47bb395e6b82546145384b411f26b491abf1b" translate="yes" xml:space="preserve">
          <source>Example: Compare the effect of different scalers on data with outliers</source>
          <target state="translated">例子。比较不同标尺对有离群值数据的影响</target>
        </trans-unit>
        <trans-unit id="8e6be7293304f06df7a378ab1029c36681e3940e" translate="yes" xml:space="preserve">
          <source>Example: Comparing anomaly detection algorithms for outlier detection on toy datasets</source>
          <target state="translated">实例。比较玩具数据集上的异常点检测算法的异常点检测</target>
        </trans-unit>
        <trans-unit id="a13544b0fe950bd86a805cac2d171dca10787246" translate="yes" xml:space="preserve">
          <source>Example: Comparing different clustering algorithms on toy datasets</source>
          <target state="translated">例子。比较玩具数据集上的不同聚类算法</target>
        </trans-unit>
        <trans-unit id="d9aea9986f216d774ee07f61ba8fe9a59dcfe5c0" translate="yes" xml:space="preserve">
          <source>Example: Comparing different hierarchical linkage methods on toy datasets</source>
          <target state="translated">例子。比较玩具数据集的不同层次联系方法</target>
        </trans-unit>
        <trans-unit id="d4a44daf1e856c61c8c2e83ea26d29d1e821e1be" translate="yes" xml:space="preserve">
          <source>Example: Comparing random forests and the multi-output meta estimator</source>
          <target state="translated">例子。比较随机森林和多产出元估计器。</target>
        </trans-unit>
        <trans-unit id="64f74683d4732d5c0286fe2a86c4568db671eb4c" translate="yes" xml:space="preserve">
          <source>Example: Comparing randomized search and grid search for hyperparameter estimation</source>
          <target state="translated">例子:比较超参数估计的随机搜索和网格搜索</target>
        </trans-unit>
        <trans-unit id="ec445cc7b4c75edbb22692d9a9f11bfbe695964d" translate="yes" xml:space="preserve">
          <source>Example: Comparing various online solvers</source>
          <target state="translated">例子。比较各种在线解算器</target>
        </trans-unit>
        <trans-unit id="f6fcaa78c382eb8bd5c025e07ace8f9e0d0627ac" translate="yes" xml:space="preserve">
          <source>Example: Comparison of Calibration of Classifiers</source>
          <target state="translated">例子:分类器的校准比较</target>
        </trans-unit>
        <trans-unit id="6cbbc7c2c4476a954bf57d6964051e06b682ee58" translate="yes" xml:space="preserve">
          <source>Example: Comparison of F-test and mutual information</source>
          <target state="translated">例子。F检验和相互信息的比较</target>
        </trans-unit>
        <trans-unit id="7872ec2da797ca992857dff903391f831c8eeec0" translate="yes" xml:space="preserve">
          <source>Example: Comparison of LDA and PCA 2D projection of Iris dataset</source>
          <target state="translated">例子:LDA和PCA对Iris数据集的2D投影比较</target>
        </trans-unit>
        <trans-unit id="db9d261fa18500b2d41ccb36c9541ede13102b7f" translate="yes" xml:space="preserve">
          <source>Example: Comparison of Manifold Learning methods</source>
          <target state="translated">例子。歧管学习法的比较</target>
        </trans-unit>
        <trans-unit id="88026cd82d034a5d71e7ebd42b51c158100d48be" translate="yes" xml:space="preserve">
          <source>Example: Comparison of kernel ridge and Gaussian process regression</source>
          <target state="translated">例子。核脊和高斯过程回归的比较。</target>
        </trans-unit>
        <trans-unit id="3212d96c64df39331d71cc794678ec7dfac6c25f" translate="yes" xml:space="preserve">
          <source>Example: Comparison of kernel ridge regression and SVR</source>
          <target state="translated">例子。核脊回归和SVR的比较。</target>
        </trans-unit>
        <trans-unit id="96d299c9caa76e90cc9353839fb303da2af24a7c" translate="yes" xml:space="preserve">
          <source>Example: Comparison of the K-Means and MiniBatchKMeans clustering algorithms</source>
          <target state="translated">例。K-Means和MiniBatchKMeans聚类算法的比较。</target>
        </trans-unit>
        <trans-unit id="f326e86cf7842093f759d1ff6a8477fcc1275fd9" translate="yes" xml:space="preserve">
          <source>Example: Compressive sensing</source>
          <target state="translated">例子。压缩式传感</target>
        </trans-unit>
        <trans-unit id="ea42de9135aa82c4be7f11be1548bda7aacccfa4" translate="yes" xml:space="preserve">
          <source>Example: Concatenating multiple feature extraction methods</source>
          <target state="translated">例子。将多种特征提取方法连在一起</target>
        </trans-unit>
        <trans-unit id="45bb62f50642bd3ecf7dab6d6429ec2c0777d668" translate="yes" xml:space="preserve">
          <source>Example: Concentration Prior Type Analysis of Variation Bayesian Gaussian Mixture</source>
          <target state="translated">例子。浓度优先类型变异分析 贝叶斯高斯混合物</target>
        </trans-unit>
        <trans-unit id="eec231acb1242212e47002cc21b502fb5497999f" translate="yes" xml:space="preserve">
          <source>Example: Confusion matrix</source>
          <target state="translated">例如:混淆矩阵</target>
        </trans-unit>
        <trans-unit id="478c41c4885f24ae3affa06ff217fbba19070619" translate="yes" xml:space="preserve">
          <source>Example: Cross-validation on Digits Dataset Exercise</source>
          <target state="translated">例子:数字数据集的交叉验证练习 数字数据集的交叉验证练习</target>
        </trans-unit>
        <trans-unit id="731f67466c345062e9d295a8c79f85dd41d5cfde" translate="yes" xml:space="preserve">
          <source>Example: Cross-validation on diabetes Dataset Exercise</source>
          <target state="translated">例子。糖尿病数据集的交叉验证练习</target>
        </trans-unit>
        <trans-unit id="7c6b5a350bf87ab57f4d9c3b51fdbc78b11a5f71" translate="yes" xml:space="preserve">
          <source>Example: Decision Tree Regression</source>
          <target state="translated">例子:决策树回归</target>
        </trans-unit>
        <trans-unit id="240d7dd59dc118b583e8fa833a775453fc2349fb" translate="yes" xml:space="preserve">
          <source>Example: Decision Tree Regression with AdaBoost</source>
          <target state="translated">例子:决策树回归与AdaBoost</target>
        </trans-unit>
        <trans-unit id="7d3c46f1e6fd3f9f8b2f87bf630b5b8d974c3ab8" translate="yes" xml:space="preserve">
          <source>Example: Decision boundary of label propagation versus SVM on the Iris dataset</source>
          <target state="translated">例子。标签传播与SVM在Iris数据集上的决策边界比较</target>
        </trans-unit>
        <trans-unit id="10df54d1af49449032712ca96c2019c16774d5ec" translate="yes" xml:space="preserve">
          <source>Example: Demo of DBSCAN clustering algorithm</source>
          <target state="translated">例子。DBSCAN集群算法演示</target>
        </trans-unit>
        <trans-unit id="7ab29275f761e49a3abb0215005c0cd7f91997e1" translate="yes" xml:space="preserve">
          <source>Example: Demo of affinity propagation clustering algorithm</source>
          <target state="translated">实例。亲和力传播聚类算法演示</target>
        </trans-unit>
        <trans-unit id="0dee26e1acea0ed5ede1a2e45cdbfba030d460e2" translate="yes" xml:space="preserve">
          <source>Example: Demonstrating the different strategies of KBinsDiscretizer</source>
          <target state="translated">例子:演示KBinsDiscretizer的不同策略。</target>
        </trans-unit>
        <trans-unit id="10cf399dfe2dce0f7bbe925af6015fd577cf5755" translate="yes" xml:space="preserve">
          <source>Example: Demonstration of k-means assumptions</source>
          <target state="translated">例子。K-means假设的演示</target>
        </trans-unit>
        <trans-unit id="def17499c6a4561e064c30437dbadf432a195f99" translate="yes" xml:space="preserve">
          <source>Example: Demonstration of multi-metric evaluation on cross_val_score and GridSearchCV</source>
          <target state="translated">例子:在cross_val_score和GridSearchCV上演示多指标评估。</target>
        </trans-unit>
        <trans-unit id="5701a3467193f877390c630dfa7edeb94223c529" translate="yes" xml:space="preserve">
          <source>Example: Density Estimation for a Gaussian mixture</source>
          <target state="translated">例子:高斯混合物的密度估计 高斯混合物的密度估计</target>
        </trans-unit>
        <trans-unit id="2101a2f3f816693c205bfb37e8f30288929a1de5" translate="yes" xml:space="preserve">
          <source>Example: Digits Classification Exercise</source>
          <target state="translated">例子。数字分类练习</target>
        </trans-unit>
        <trans-unit id="ec7e5be797852a026e92801aa739466596b16917" translate="yes" xml:space="preserve">
          <source>Example: Discrete versus Real AdaBoost</source>
          <target state="translated">示例:离散型与真实型AdaBoost 离散型与真实型AdaBoost</target>
        </trans-unit>
        <trans-unit id="ed233a079ac7cde67bbc5fc14f70fb4bbc90b544" translate="yes" xml:space="preserve">
          <source>Example: Early stopping of Gradient Boosting</source>
          <target state="translated">例子。梯度提升的提前停止</target>
        </trans-unit>
        <trans-unit id="0d7c37df6cf764afc8fd4a643e564917d9136d1e" translate="yes" xml:space="preserve">
          <source>Example: Early stopping of Stochastic Gradient Descent</source>
          <target state="translated">例子:随机梯度下降法的早期停止。</target>
        </trans-unit>
        <trans-unit id="8921d5da3c6163ab21ee251a5f9ab2b67d3e6ca5" translate="yes" xml:space="preserve">
          <source>Example: Effect of transforming the targets in regression model</source>
          <target state="translated">例。回归模型中转换目标的效果</target>
        </trans-unit>
        <trans-unit id="541397462a051e8df12dda2ba643a27f70fdc45c" translate="yes" xml:space="preserve">
          <source>Example: Empirical evaluation of the impact of k-means initialization</source>
          <target state="translated">例。对k-means初始化影响的经验评价。</target>
        </trans-unit>
        <trans-unit id="e71304027740a1ea64d02d60022e7e9daf184ab9" translate="yes" xml:space="preserve">
          <source>Example: Explicit feature map approximation for RBF kernels</source>
          <target state="translated">例子。RBF核的显式特征图近似法</target>
        </trans-unit>
        <trans-unit id="eb24711e6e66bff6d7836e681d375d600380c764" translate="yes" xml:space="preserve">
          <source>Example: Face completion with a multi-output estimators</source>
          <target state="translated">例子:用多输出估计器完成面的工作</target>
        </trans-unit>
        <trans-unit id="f4c860526964ef958b3f52138a1dd23cf6e4eac7" translate="yes" xml:space="preserve">
          <source>Example: Faces dataset decompositions</source>
          <target state="translated">例子。面孔数据集分解</target>
        </trans-unit>
        <trans-unit id="bff7d2f38967df7bad21476a074146663ab4fb65" translate="yes" xml:space="preserve">
          <source>Example: Faces recognition example using eigenfaces and SVMs</source>
          <target state="translated">例子:使用特征面和SVM的人脸识别实例</target>
        </trans-unit>
        <trans-unit id="690d33bd14b8275293c7c5c90ddf23729999f1e0" translate="yes" xml:space="preserve">
          <source>Example: FastICA on 2D point clouds</source>
          <target state="translated">例子:二维点云上的FastICA</target>
        </trans-unit>
        <trans-unit id="81542e70e8cdf4ee5b52d054aff2f37515bf2e87" translate="yes" xml:space="preserve">
          <source>Example: Feature agglomeration</source>
          <target state="translated">例子。特征集聚</target>
        </trans-unit>
        <trans-unit id="dc6af3656e4ff70c8f2efd18f39947eac24a2c12" translate="yes" xml:space="preserve">
          <source>Example: Feature agglomeration vs. univariate selection</source>
          <target state="translated">例子。特征集聚与单变量选择的比较</target>
        </trans-unit>
        <trans-unit id="16a9dba3c8aa91cf990e07561fe9d9ccaa9f1f26" translate="yes" xml:space="preserve">
          <source>Example: Feature discretization</source>
          <target state="translated">例子:特征离散化</target>
        </trans-unit>
        <trans-unit id="2666560cf54442280e3756e0d3b67d2941e622c4" translate="yes" xml:space="preserve">
          <source>Example: Feature importances with forests of trees</source>
          <target state="translated">例子。树木森林的特征重要性</target>
        </trans-unit>
        <trans-unit id="cc226c8136e5d83f51dd5f3ca0e851f53502be3c" translate="yes" xml:space="preserve">
          <source>Example: Feature selection using SelectFromModel and LassoCV</source>
          <target state="translated">例子......使用SelectFromModel和LassoCV进行特征选择 使用SelectFromModel和LassoCV进行特征选择。</target>
        </trans-unit>
        <trans-unit id="b771478f6755fdd2e7e160afaebfad0edd2572da" translate="yes" xml:space="preserve">
          <source>Example: Feature transformations with ensembles of trees</source>
          <target state="translated">例子:树群的特征变换</target>
        </trans-unit>
        <trans-unit id="563677e1c90f6439e6c80da981c574bfa8effd0e" translate="yes" xml:space="preserve">
          <source>Example: FeatureHasher and DictVectorizer Comparison</source>
          <target state="translated">例子:FeatureHasher和DictVectorizer比较</target>
        </trans-unit>
        <trans-unit id="d0762fe9cf60d53e9510d53f7196f95f92ac841d" translate="yes" xml:space="preserve">
          <source>Example: GMM covariances</source>
          <target state="translated">例子:GMM协方差</target>
        </trans-unit>
        <trans-unit id="d9d7e4fe28ed9ed1f6bf5916b640028bd631573c" translate="yes" xml:space="preserve">
          <source>Example: Gaussian Mixture Model Ellipsoids</source>
          <target state="translated">示例:高斯混合模型椭圆体 高斯混合模型椭圆体</target>
        </trans-unit>
        <trans-unit id="09ca1a387a8c7f1d3df62a75dcaf3a29478c3645" translate="yes" xml:space="preserve">
          <source>Example: Gaussian Mixture Model Selection</source>
          <target state="translated">例子:高斯混合物模型选择</target>
        </trans-unit>
        <trans-unit id="9ca3dc73d4887b47c3a952fd3fa57b325f562df7" translate="yes" xml:space="preserve">
          <source>Example: Gaussian Mixture Model Sine Curve</source>
          <target state="translated">例:高斯混合模型 高斯混合模型正弦曲线</target>
        </trans-unit>
        <trans-unit id="812fa70e857c205db54ad4fb3ed4d059ec52779c" translate="yes" xml:space="preserve">
          <source>Example: Gaussian Processes regression</source>
          <target state="translated">例子。高斯过程回归</target>
        </trans-unit>
        <trans-unit id="cc25260b7c7fa3482832bd031526e189a54f3a9e" translate="yes" xml:space="preserve">
          <source>Example: Gaussian process classification  on iris dataset</source>
          <target state="translated">例子。虹膜数据集上的高斯过程分类。</target>
        </trans-unit>
        <trans-unit id="0363af78fab907fcf9aa9615319e2d1e265978eb" translate="yes" xml:space="preserve">
          <source>Example: Gaussian process regression  on Mauna Loa CO2 data.</source>
          <target state="translated">例子:莫纳罗亚二氧化碳数据的高斯过程回归。Mauna Loa二氧化碳数据的高斯过程回归。</target>
        </trans-unit>
        <trans-unit id="32761570e31ab82d4ed2895df734e7c7570106e3" translate="yes" xml:space="preserve">
          <source>Example: Gaussian process regression  with noise-level estimation</source>
          <target state="translated">例子:高斯过程回归与噪声水平估计 高斯过程回归与噪声水平估计。</target>
        </trans-unit>
        <trans-unit id="a8ef33e0a7015d2e8d82f5d296eb6cb1d0d22642" translate="yes" xml:space="preserve">
          <source>Example: Gradient Boosting Out-of-Bag estimates</source>
          <target state="translated">例子:梯度提升的袋外估计数</target>
        </trans-unit>
        <trans-unit id="0ff05efa9e40f0c0f1c8a181386130afe9ccb734" translate="yes" xml:space="preserve">
          <source>Example: Gradient Boosting regression</source>
          <target state="translated">例子。梯度提升回归</target>
        </trans-unit>
        <trans-unit id="903382f39a36765347ee5492e12813eeb3ea50f5" translate="yes" xml:space="preserve">
          <source>Example: Gradient Boosting regularization</source>
          <target state="translated">例子。梯度提升正则化</target>
        </trans-unit>
        <trans-unit id="17e56f0028da11fbbac98e08efff4904935b4e6a" translate="yes" xml:space="preserve">
          <source>Example: Hashing feature transformation using Totally Random Trees</source>
          <target state="translated">例子:使用完全随机树进行哈希特征转换</target>
        </trans-unit>
        <trans-unit id="5c3644f9e38c5cbb3e0615154eef616fe723d641" translate="yes" xml:space="preserve">
          <source>Example: Hierarchical clustering</source>
          <target state="translated">例子。分层聚类</target>
        </trans-unit>
        <trans-unit id="13f3e468640b09c2e6351e78d72575e4a11d1ca3" translate="yes" xml:space="preserve">
          <source>Example: HuberRegressor vs Ridge on dataset with strong outliers</source>
          <target state="translated">例子:HuberRegressor与Ridge在具有强离群值的数据集上的对比。</target>
        </trans-unit>
        <trans-unit id="3f8a14c64a7521a633e7b688924696f634934d63" translate="yes" xml:space="preserve">
          <source>Example: Illustration of Gaussian process classification  on the XOR dataset</source>
          <target state="translated">例子。XOR数据集上的高斯过程分类说明</target>
        </trans-unit>
        <trans-unit id="45ee0ad2e2c4efa8ebb2a4422af0bb55624195f9" translate="yes" xml:space="preserve">
          <source>Example: Illustration of prior and posterior Gaussian process for different kernels</source>
          <target state="translated">例子:不同核的前高斯过程和后高斯过程的说明。</target>
        </trans-unit>
        <trans-unit id="c71279908ab257810449166b0e6ca28eba491f84" translate="yes" xml:space="preserve">
          <source>Example: Image denoising using dictionary learning</source>
          <target state="translated">例子:利用字典学习进行图像去噪</target>
        </trans-unit>
        <trans-unit id="9b25eca916f2e4d3295af9420cbf7822c9e705d4" translate="yes" xml:space="preserve">
          <source>Example: Importance of Feature Scaling</source>
          <target state="translated">例子。特征缩放的重要性</target>
        </trans-unit>
        <trans-unit id="e521b1314b128db4e36930f61b90443b3412593b" translate="yes" xml:space="preserve">
          <source>Example: Imputing missing values before building an estimator</source>
          <target state="translated">例子:在建立估计器之前,计算缺失值。</target>
        </trans-unit>
        <trans-unit id="fc2a6a6332f8cdd855a5dad59fc90e4f584f5420" translate="yes" xml:space="preserve">
          <source>Example: Incremental PCA</source>
          <target state="translated">例子:增量PCA</target>
        </trans-unit>
        <trans-unit id="70776479fc6ce5b9af9ff51670d14e167a8ab1cc" translate="yes" xml:space="preserve">
          <source>Example: Iso-probability lines for Gaussian Processes classification</source>
          <target state="translated">例子。高斯过程分类的等概率线。</target>
        </trans-unit>
        <trans-unit id="87b90771430e6145adc9efbf3ec41b91b68a46e5" translate="yes" xml:space="preserve">
          <source>Example: IsolationForest example</source>
          <target state="translated">例子:隔离森林的例子</target>
        </trans-unit>
        <trans-unit id="1b2b8e54d45fd42c17e4b6305a2ea1f28f61740e" translate="yes" xml:space="preserve">
          <source>Example: Isotonic Regression</source>
          <target state="translated">例子。同位素回归</target>
        </trans-unit>
        <trans-unit id="7a3fc1c1ea430bce0c6635cafe6d13604211f66d" translate="yes" xml:space="preserve">
          <source>Example: Joint feature selection with multi-task Lasso</source>
          <target state="translated">例子:多任务Lasso的联合特征选择。</target>
        </trans-unit>
        <trans-unit id="467dd6f2936c98f6167e85989d917e5fb0105ca5" translate="yes" xml:space="preserve">
          <source>Example: K-means Clustering</source>
          <target state="translated">例子。K-means聚类</target>
        </trans-unit>
        <trans-unit id="8e3ff2f0c71c6d9dd60f76acbcd57f19ea83cc8e" translate="yes" xml:space="preserve">
          <source>Example: Kernel Density Estimate of Species Distributions</source>
          <target state="translated">例子:物种分布的核密度估计</target>
        </trans-unit>
        <trans-unit id="d70ed78e455c5fdf2db813783be80df32f8a838d" translate="yes" xml:space="preserve">
          <source>Example: Kernel Density Estimation</source>
          <target state="translated">例子。核仁密度估计</target>
        </trans-unit>
        <trans-unit id="48c15717c94336b66b4c1f6608ef560e6f2a9996" translate="yes" xml:space="preserve">
          <source>Example: Kernel PCA</source>
          <target state="translated">例子:内核PCA</target>
        </trans-unit>
        <trans-unit id="aad253a37367b87b7e1a263203992572f8b45f4a" translate="yes" xml:space="preserve">
          <source>Example: L1 Penalty and Sparsity in Logistic Regression</source>
          <target state="translated">例子:L1惩罚和逻辑回归中的稀疏性。</target>
        </trans-unit>
        <trans-unit id="651544fd3dc359bf8dc4478511efaf310bc8e701" translate="yes" xml:space="preserve">
          <source>Example: Label Propagation digits</source>
          <target state="translated">例子。标签传播位数</target>
        </trans-unit>
        <trans-unit id="01e1da3485beda1e42272afe2f70ed55b322d1b9" translate="yes" xml:space="preserve">
          <source>Example: Label Propagation digits active learning</source>
          <target state="translated">例。标签传播数字主动学习</target>
        </trans-unit>
        <trans-unit id="fac41d65c473f2924d1cfb32246ffd2089e1449a" translate="yes" xml:space="preserve">
          <source>Example: Label Propagation learning a complex structure</source>
          <target state="translated">例子。标签传播学习复杂结构</target>
        </trans-unit>
        <trans-unit id="ce1fb763831b13d9d8b6c271789b35a88b4ab784" translate="yes" xml:space="preserve">
          <source>Example: Lasso and Elastic Net</source>
          <target state="translated">例子。拉索和弹性网</target>
        </trans-unit>
        <trans-unit id="e90c00a4135f2fd30276c59998a475ad2293c045" translate="yes" xml:space="preserve">
          <source>Example: Lasso and Elastic Net for Sparse Signals</source>
          <target state="translated">例子:稀疏信号的拉索和弹性网</target>
        </trans-unit>
        <trans-unit id="5c7cd3fd0aba86a1fb17cbc00f7db50196472ea1" translate="yes" xml:space="preserve">
          <source>Example: Lasso model selection</source>
          <target state="translated">例子。拉索模型选择</target>
        </trans-unit>
        <trans-unit id="3b40a7dbcc2e58a6dee96af521d3cdc3368dbb8d" translate="yes" xml:space="preserve">
          <source>Example: Lasso on dense and sparse data</source>
          <target state="translated">例子:密集和稀疏数据的拉索 密集和稀疏数据上的Lasso。</target>
        </trans-unit>
        <trans-unit id="2322121830ea2c1fdd3e049cc0de7b6eaa4c3562" translate="yes" xml:space="preserve">
          <source>Example: Lasso path using LARS</source>
          <target state="translated">例子:使用LARS的Lasso路径</target>
        </trans-unit>
        <trans-unit id="1f3530d3e2f4dca2ac7a4de0572aa305ac8b2962" translate="yes" xml:space="preserve">
          <source>Example: Ledoit-Wolf vs OAS estimation</source>
          <target state="translated">例子:Ledoit-Wolf与OAS的估计</target>
        </trans-unit>
        <trans-unit id="db53c0c81c69aaa075fb8825de4be3a41d3d681b" translate="yes" xml:space="preserve">
          <source>Example: Libsvm GUI</source>
          <target state="translated">例子:Libsvm GUI Libsvm GUI</target>
        </trans-unit>
        <trans-unit id="260f311df3e096ef4c87aa2bccccc3626d4dae27" translate="yes" xml:space="preserve">
          <source>Example: Linear Regression Example</source>
          <target state="translated">例子:线性回归实例</target>
        </trans-unit>
        <trans-unit id="66dd24673af778357c5a1aef640420db16969526" translate="yes" xml:space="preserve">
          <source>Example: Linear and Quadratic Discriminant Analysis with covariance ellipsoid</source>
          <target state="translated">例子。线性和四元判别分析与协方差椭圆体。</target>
        </trans-unit>
        <trans-unit id="8048b02f69d2e8fe086742150fe3e0f6811b17db" translate="yes" xml:space="preserve">
          <source>Example: Logistic Regression 3-class Classifier</source>
          <target state="translated">例子:Logistic回归3类分类器</target>
        </trans-unit>
        <trans-unit id="3e5ade2062fc6633d342bc0830b2855c16a4568f" translate="yes" xml:space="preserve">
          <source>Example: Logistic function</source>
          <target state="translated">例子。Logistic函数</target>
        </trans-unit>
        <trans-unit id="69789d7e285523dad628bdbb250fd127c8f034c7" translate="yes" xml:space="preserve">
          <source>Example: MNIST classfification using multinomial logistic + L1</source>
          <target state="translated">例子:MNIST类化,使用多义逻辑+L1。MNIST类化,使用多项对数+L1法</target>
        </trans-unit>
        <trans-unit id="313a442c449fb9ff8dc0e294ace9b4b9d07a7a51" translate="yes" xml:space="preserve">
          <source>Example: Manifold Learning methods on a severed sphere</source>
          <target state="translated">例子。割裂球体上的Manifold学习方法</target>
        </trans-unit>
        <trans-unit id="a57a4cffd423b2c691cc1879121fa4938e6e9b42" translate="yes" xml:space="preserve">
          <source>Example: Manifold learning on handwritten digits</source>
          <target state="translated">例子。手写数字的歧义学习。</target>
        </trans-unit>
        <trans-unit id="127b7e086ac2faa32bc371c100eb61d82ca6612b" translate="yes" xml:space="preserve">
          <source>Example: Map data to a normal distribution</source>
          <target state="translated">例子:将数据映射到正态分布</target>
        </trans-unit>
        <trans-unit id="e31097844c59991e58658ba37545fb54e5a345fb" translate="yes" xml:space="preserve">
          <source>Example: Model Complexity Influence</source>
          <target state="translated">例子。模型复杂度的影响</target>
        </trans-unit>
        <trans-unit id="9f1cb169a883657aa0c540d31407c104e4a9dfee" translate="yes" xml:space="preserve">
          <source>Example: Model selection with Probabilistic PCA and Factor Analysis</source>
          <target state="translated">例子:用概率PCA和因子分析选择模型。</target>
        </trans-unit>
        <trans-unit id="e318dc0678b791d54b5a4be8b128f8a2d7faeb41" translate="yes" xml:space="preserve">
          <source>Example: Multi-class AdaBoosted Decision Trees</source>
          <target state="translated">例子:多类AdaBoosted决策树。</target>
        </trans-unit>
        <trans-unit id="36b847eb1efaba7f3a618d37522c38cdc7ac735d" translate="yes" xml:space="preserve">
          <source>Example: Multi-dimensional scaling</source>
          <target state="translated">例子。多维缩放</target>
        </trans-unit>
        <trans-unit id="7d4d98fa15b7c57cbeaae071fe66846dd2dbc95f" translate="yes" xml:space="preserve">
          <source>Example: Multi-output Decision Tree Regression</source>
          <target state="translated">例子:多输出决策树回归</target>
        </trans-unit>
        <trans-unit id="3a325fd6403bbd1dcd3348fb55ebf9a878174c30" translate="yes" xml:space="preserve">
          <source>Example: Multiclass sparse logisitic regression on newgroups20</source>
          <target state="translated">例子:关于新群体的多类稀疏对数回归20</target>
        </trans-unit>
        <trans-unit id="4cbd701b7e170c6a2297bd3350e1ad7f6e6f8113" translate="yes" xml:space="preserve">
          <source>Example: Multilabel classification</source>
          <target state="translated">例子。多标签分类</target>
        </trans-unit>
        <trans-unit id="78c3b92f3b9181af99abc44a5eb16ca076ede0cc" translate="yes" xml:space="preserve">
          <source>Example: Nearest Centroid Classification</source>
          <target state="translated">例子:最近中心点分类</target>
        </trans-unit>
        <trans-unit id="0dee376dd4cb78794da9b8981d74f1c197accdeb" translate="yes" xml:space="preserve">
          <source>Example: Nearest Neighbors Classification</source>
          <target state="translated">例子:最近鄰居分類</target>
        </trans-unit>
        <trans-unit id="a052da14edf3220c6ac55c904400d44610eb7fb3" translate="yes" xml:space="preserve">
          <source>Example: Nearest Neighbors regression</source>
          <target state="translated">例子:最近的邻居回归</target>
        </trans-unit>
        <trans-unit id="dea0935628ea35748c578d68121db38f094ebabe" translate="yes" xml:space="preserve">
          <source>Example: Nested versus non-nested cross-validation</source>
          <target state="translated">例子。嵌套与非嵌套交叉验证</target>
        </trans-unit>
        <trans-unit id="c4cc46ab220dbbd718b373d7430dabc55e65bcb2" translate="yes" xml:space="preserve">
          <source>Example: Non-linear SVM</source>
          <target state="translated">例子。非线性SVM</target>
        </trans-unit>
        <trans-unit id="e6f42447025e00c289011c57c95cdf50fd187003" translate="yes" xml:space="preserve">
          <source>Example: Normal and Shrinkage Linear Discriminant Analysis for classification</source>
          <target state="translated">例子。用于分类的正态和收缩线性判别分析。</target>
        </trans-unit>
        <trans-unit id="6ebcea228b63d28f1b7ee3bbb34e48b91ad7e7a6" translate="yes" xml:space="preserve">
          <source>Example: Novelty detection with Local Outlier Factor</source>
          <target state="translated">例子:利用局部离群因素进行新奇检测</target>
        </trans-unit>
        <trans-unit id="b938de1562af8c68af27f5258b7cc13769d2c841" translate="yes" xml:space="preserve">
          <source>Example: OOB Errors for Random Forests</source>
          <target state="translated">例子:随机森林的OOB错误</target>
        </trans-unit>
        <trans-unit id="6bc87938bc84299a3559987e64d2a7a9053396b8" translate="yes" xml:space="preserve">
          <source>Example: One-class SVM with non-linear kernel</source>
          <target state="translated">例子:带有非线性内核的一类SVM。</target>
        </trans-unit>
        <trans-unit id="b73e20e560156df198e99c89277f1ede469475f7" translate="yes" xml:space="preserve">
          <source>Example: Online learning of a dictionary of parts of faces</source>
          <target state="translated">例子。在线学习人脸部位词典。</target>
        </trans-unit>
        <trans-unit id="8952085509ba6c5c5817175ec7e9f338d928a358" translate="yes" xml:space="preserve">
          <source>Example: Ordinary Least Squares and Ridge Regression Variance</source>
          <target state="translated">例子:普通最小二乘法和岭回归方差 普通最小二乘法和岭回归方差法</target>
        </trans-unit>
        <trans-unit id="670aa7c8d6018620184ceecac910b75e196c736b" translate="yes" xml:space="preserve">
          <source>Example: Orthogonal Matching Pursuit</source>
          <target state="translated">例子:正交匹配追求</target>
        </trans-unit>
        <trans-unit id="39262ebeb56625cae9ab747c1ce3eb0e0db821a0" translate="yes" xml:space="preserve">
          <source>Example: Out-of-core classification of text documents</source>
          <target state="translated">例子。文本文件的核心外分类</target>
        </trans-unit>
        <trans-unit id="519ec9955c389292130bbf4c79d0f9c1b351f7c9" translate="yes" xml:space="preserve">
          <source>Example: Outlier detection on a real data set</source>
          <target state="translated">例子:在真实数据集上检测异常值</target>
        </trans-unit>
        <trans-unit id="fb1fc0371d080b9fd1afc22987de394f17f26633" translate="yes" xml:space="preserve">
          <source>Example: Outlier detection with Local Outlier Factor</source>
          <target state="translated">例子:使用局部离群因子进行离群检测</target>
        </trans-unit>
        <trans-unit id="8ecb0143098a7ce8831544ad4caed599411d7331" translate="yes" xml:space="preserve">
          <source>Example: PCA example with Iris Data-set</source>
          <target state="translated">例子:Iris数据集的PCA实例</target>
        </trans-unit>
        <trans-unit id="4df9ea0139b6213dfa2a0dafe7559dff65c40509" translate="yes" xml:space="preserve">
          <source>Example: Parameter estimation using grid search with cross-validation</source>
          <target state="translated">例子:利用网格搜索和交叉验证进行参数估计</target>
        </trans-unit>
        <trans-unit id="e5e0004afc2db3f710d3fcd00e3c9acc4a61c1f1" translate="yes" xml:space="preserve">
          <source>Example: Partial Dependence Plots</source>
          <target state="translated">例子:部分依赖性图</target>
        </trans-unit>
        <trans-unit id="c306c38b8a756aebc054360338b0d44ef819cc54" translate="yes" xml:space="preserve">
          <source>Example: Pipeline Anova SVM</source>
          <target state="translated">例子。管道Anova SVM</target>
        </trans-unit>
        <trans-unit id="f0f2b1fcd756908ce26045a71698612c20b74bdf" translate="yes" xml:space="preserve">
          <source>Example: Pipelining</source>
          <target state="translated">例子:管道化</target>
        </trans-unit>
        <trans-unit id="2fe1d869da8518d1ed4b4eb9f97f63040e29459b" translate="yes" xml:space="preserve">
          <source>Example: Pixel importances with a parallel forest of trees</source>
          <target state="translated">例子:平行树林的像素进口量</target>
        </trans-unit>
        <trans-unit id="8da035693ef1e94c304583cc23e7578f52a20aae" translate="yes" xml:space="preserve">
          <source>Example: Plot Ridge coefficients as a function of the L2 regularization</source>
          <target state="translated">示例。绘制Ridge系数作为L2正则化的函数。</target>
        </trans-unit>
        <trans-unit id="09e8b4dc4b3356d15b619bb8fdb3b316e813e07e" translate="yes" xml:space="preserve">
          <source>Example: Plot Ridge coefficients as a function of the regularization</source>
          <target state="translated">示例。绘制Ridge系数作为正则化的函数。</target>
        </trans-unit>
        <trans-unit id="75f0f125ea7b58f045f2e66512aa23557c470fde" translate="yes" xml:space="preserve">
          <source>Example: Plot class probabilities calculated by the VotingClassifier</source>
          <target state="translated">例子:绘制由VotingClassifier计算的类概率</target>
        </trans-unit>
        <trans-unit id="6b5f4cb6d0b315a37e1ee58317ebdeb9b746b046" translate="yes" xml:space="preserve">
          <source>Example: Plot classification probability</source>
          <target state="translated">例子 绘制分类概率图</target>
        </trans-unit>
        <trans-unit id="f54ef25d4122cd6f45b2bb69adb192b51abf0291" translate="yes" xml:space="preserve">
          <source>Example: Plot different SVM classifiers in the iris dataset</source>
          <target state="translated">例子。在虹膜数据集中绘制不同的SVM分类器。</target>
        </trans-unit>
        <trans-unit id="7311246afc67583aa393d3135f26772ded0e5c70" translate="yes" xml:space="preserve">
          <source>Example: Plot multi-class SGD on the iris dataset</source>
          <target state="translated">实例:在虹膜数据集上绘制多类SGD 在虹膜数据集上绘制多类SGD。</target>
        </trans-unit>
        <trans-unit id="49378f55a7bc9e734162b4ba862261b8eba38030" translate="yes" xml:space="preserve">
          <source>Example: Plot multinomial and One-vs-Rest Logistic Regression</source>
          <target state="translated">例子:绘制多项式和单对单逻辑回归图。</target>
        </trans-unit>
        <trans-unit id="2903f5ea490100b3b47b7d11ee019ef762998983" translate="yes" xml:space="preserve">
          <source>Example: Plot randomly generated classification dataset</source>
          <target state="translated">例子 绘制随机生成的分类数据集</target>
        </trans-unit>
        <trans-unit id="40207f24f64226cd373ceacc2079373f6f87bec0" translate="yes" xml:space="preserve">
          <source>Example: Plot randomly generated multilabel dataset</source>
          <target state="translated">例子。绘制随机生成的多标签数据集。</target>
        </trans-unit>
        <trans-unit id="c730744507e971b2ac94bcd5e21cb245445ee740" translate="yes" xml:space="preserve">
          <source>Example: Plot the decision boundaries of a VotingClassifier</source>
          <target state="translated">例子:绘制投票分类器的决策边界。</target>
        </trans-unit>
        <trans-unit id="20c74abdbf7c71c88f3eb7ab7d14be1d7d0791d3" translate="yes" xml:space="preserve">
          <source>Example: Plot the decision surface of a decision tree on the iris dataset</source>
          <target state="translated">例子:在虹膜数据集上绘制决策树的决策面。在虹膜数据集上绘制决策树的决策面。</target>
        </trans-unit>
        <trans-unit id="2ebffa951a85661a2f42a99c49f640c63998189a" translate="yes" xml:space="preserve">
          <source>Example: Plot the decision surfaces of ensembles of trees on the iris dataset</source>
          <target state="translated">例子:在虹膜数据集上绘制集合树的决策面。绘制虹膜数据集上的树群的决策面。</target>
        </trans-unit>
        <trans-unit id="7fb3b2f76713865521c13ff7f4fa6bc78f76a1fd" translate="yes" xml:space="preserve">
          <source>Example: Plotting Cross-Validated Predictions</source>
          <target state="translated">例子:绘制交叉验证的预测图。</target>
        </trans-unit>
        <trans-unit id="0fdbbeaf991d7062b132f1cb277b4929a668c412" translate="yes" xml:space="preserve">
          <source>Example: Plotting Learning Curves</source>
          <target state="translated">例子:绘制学习曲线</target>
        </trans-unit>
        <trans-unit id="ac2ed873e1476d136f6222853d72dc614c48e8ad" translate="yes" xml:space="preserve">
          <source>Example: Plotting Validation Curves</source>
          <target state="translated">例子:绘制验证曲线</target>
        </trans-unit>
        <trans-unit id="50e57d520a7ed6ef3299143a4180efe17ec01bf8" translate="yes" xml:space="preserve">
          <source>Example: Polynomial interpolation</source>
          <target state="translated">例子:多项式插值 多项式插值</target>
        </trans-unit>
        <trans-unit id="658afb14e7c611493cd53061825763020597f30a" translate="yes" xml:space="preserve">
          <source>Example: Precision-Recall</source>
          <target state="translated">例子。精确-召回</target>
        </trans-unit>
        <trans-unit id="20d30a5917200deaa22d66ae953b445abf6ae9cd" translate="yes" xml:space="preserve">
          <source>Example: Prediction Intervals for Gradient Boosting Regression</source>
          <target state="translated">例子:梯度提升回归的预测区间(Prediction Intervals for Gradient Boosting Regression)</target>
        </trans-unit>
        <trans-unit id="009ebff45e2bdc2832c332fa4aef6759e6578cdb" translate="yes" xml:space="preserve">
          <source>Example: Prediction Latency</source>
          <target state="translated">例子。预测延迟</target>
        </trans-unit>
        <trans-unit id="ebae6c2e23568b95db83ce30fafea6829bc2352f" translate="yes" xml:space="preserve">
          <source>Example: Principal components analysis</source>
          <target state="translated">例子:&quot;主成分分析&quot;。主成分分析</target>
        </trans-unit>
        <trans-unit id="f9368fdf8f8e5add6a4720f1bffe5c5a019ec9ec" translate="yes" xml:space="preserve">
          <source>Example: Probabilistic predictions with Gaussian process classification</source>
          <target state="translated">例子。高斯过程分类的概率预测。</target>
        </trans-unit>
        <trans-unit id="103350e39d76e57bdf2c2fa7d5d59c9dd5b51d35" translate="yes" xml:space="preserve">
          <source>Example: Probability Calibration curves</source>
          <target state="translated">例子:概率校准曲线</target>
        </trans-unit>
        <trans-unit id="5eeceb7293aa4fb57c9093bac5ef14cdff8fd758" translate="yes" xml:space="preserve">
          <source>Example: Probability Calibration for 3-class classification</source>
          <target state="translated">例子:三级分类的概率校准</target>
        </trans-unit>
        <trans-unit id="fb448294625df5041b0d9dbe55cae989b9589b8d" translate="yes" xml:space="preserve">
          <source>Example: Probability calibration of classifiers</source>
          <target state="translated">例子。分类器的概率校准</target>
        </trans-unit>
        <trans-unit id="f1e1a73bda0e6183e9debebb054f514e80d26ab8" translate="yes" xml:space="preserve">
          <source>Example: RBF SVM parameters</source>
          <target state="translated">例子。RBF SVM参数</target>
        </trans-unit>
        <trans-unit id="dc2082cec4d679ebfbc871e509ce3fbb29f084f5" translate="yes" xml:space="preserve">
          <source>Example: Receiver Operating Characteristic</source>
          <target state="translated">例子。接收器工作特性</target>
        </trans-unit>
        <trans-unit id="7895fd22c6ed3d4c9c4526cb8f0b4f9431706280" translate="yes" xml:space="preserve">
          <source>Example: Receiver Operating Characteristic  with cross validation</source>
          <target state="translated">例子。接收器工作特性与交叉验证</target>
        </trans-unit>
        <trans-unit id="c11eef28e1e9f912bf97a0f78042a8704e546177" translate="yes" xml:space="preserve">
          <source>Example: Recognizing hand-written digits</source>
          <target state="translated">例子。认识手写的数字</target>
        </trans-unit>
        <trans-unit id="15544fbcfa858d8d30aade96b50484d697d47aed" translate="yes" xml:space="preserve">
          <source>Example: Recursive feature elimination</source>
          <target state="translated">例子。递归特征消除</target>
        </trans-unit>
        <trans-unit id="4d96316ff0da9717375134fd799fcdee62db1160" translate="yes" xml:space="preserve">
          <source>Example: Recursive feature elimination with cross-validation</source>
          <target state="translated">例子。交叉验证的递归特征消除法</target>
        </trans-unit>
        <trans-unit id="67d4e7087c1a7aa14dc51eb8102bed16d9872435" translate="yes" xml:space="preserve">
          <source>Example: Regularization path of L1- Logistic Regression</source>
          <target state="translated">例子:L1-Logistic回归的正则化路径</target>
        </trans-unit>
        <trans-unit id="72a29014d2a57783042b744b6551a0b8015a3170" translate="yes" xml:space="preserve">
          <source>Example: Restricted Boltzmann Machine features for digit classification</source>
          <target state="translated">例子:用于数字分类的限制性Boltzmann机器特征。</target>
        </trans-unit>
        <trans-unit id="ad3ad9d7734771d7d2e3b17484a2873d33a89eac" translate="yes" xml:space="preserve">
          <source>Example: Robust covariance estimation and Mahalanobis distances relevance</source>
          <target state="translated">例子。稳健的协方差估计和马哈兰诺比斯距离的相关性</target>
        </trans-unit>
        <trans-unit id="e0301b44569fc9574fa25418624b9a701a556ab7" translate="yes" xml:space="preserve">
          <source>Example: Robust linear estimator fitting</source>
          <target state="translated">例子:稳健线性估计器拟合</target>
        </trans-unit>
        <trans-unit id="c2280ee8217c1f96234f65a0b8d3465bfdecc790" translate="yes" xml:space="preserve">
          <source>Example: Robust linear model estimation using RANSAC</source>
          <target state="translated">例子:使用RANSAC进行稳健线性模型估计</target>
        </trans-unit>
        <trans-unit id="1c55373cb7a8af75ce29631b50111d571b8cf761" translate="yes" xml:space="preserve">
          <source>Example: Robust vs Empirical covariance estimate</source>
          <target state="translated">例子。稳健估计与经验方差估计的比较</target>
        </trans-unit>
        <trans-unit id="d381c8d4ee96114f9b6d1a3bdd183854000cab12" translate="yes" xml:space="preserve">
          <source>Example: SGD: Maximum margin separating hyperplane</source>
          <target state="translated">例子。SGD:超平面的最大分界线</target>
        </trans-unit>
        <trans-unit id="9c92d5ae7996a4cbbc769e045216c66148ac1119" translate="yes" xml:space="preserve">
          <source>Example: SGD: Penalties</source>
          <target state="translated">例如:新元:罚金</target>
        </trans-unit>
        <trans-unit id="9ca3959887197bbe25abf7c2fd9524270feae2fa" translate="yes" xml:space="preserve">
          <source>Example: SGD: Weighted samples</source>
          <target state="translated">例子:新元:加权样品 SGD:加权样本</target>
        </trans-unit>
        <trans-unit id="7276b08e8c87e091ff4134ebe7911f784b38166b" translate="yes" xml:space="preserve">
          <source>Example: SGD: convex loss functions</source>
          <target state="translated">例:SGD:凸损失函数 SGD:凸性损失函数</target>
        </trans-unit>
        <trans-unit id="06b5ef544f73f620c6379f6167a1ef7091081b77" translate="yes" xml:space="preserve">
          <source>Example: SVM Exercise</source>
          <target state="translated">例子。SVM练习</target>
        </trans-unit>
        <trans-unit id="8f4207353d03f6ba8ba25aba41f422245a5479cf" translate="yes" xml:space="preserve">
          <source>Example: SVM Margins Example</source>
          <target state="translated">例子。SVM边际示例</target>
        </trans-unit>
        <trans-unit id="b6eed0818aa07f0f6cd122fa65cb367c57174041" translate="yes" xml:space="preserve">
          <source>Example: SVM with custom kernel</source>
          <target state="translated">例子:SVM与自定义内核 自定义内核的SVM</target>
        </trans-unit>
        <trans-unit id="4019c127d34c5e52c003e841541bcbe2de376ec6" translate="yes" xml:space="preserve">
          <source>Example: SVM-Anova</source>
          <target state="translated">例子:SVM-Annova SVM-Annova</target>
        </trans-unit>
        <trans-unit id="b8a103a18844b68eb985d5e489fbdf4ec03157c0" translate="yes" xml:space="preserve">
          <source>Example: SVM-Kernels</source>
          <target state="translated">例子:SVM-Kernels SVM-Kernels</target>
        </trans-unit>
        <trans-unit id="1392f0ab9f63705997adeda803d9c9f537737286" translate="yes" xml:space="preserve">
          <source>Example: SVM: Maximum margin separating hyperplane</source>
          <target state="translated">例子 SVM:超平面之间的最大距离</target>
        </trans-unit>
        <trans-unit id="8342e538fdd58166f11b5c7a0593c7871c5edd22" translate="yes" xml:space="preserve">
          <source>Example: SVM: Separating hyperplane for unbalanced classes</source>
          <target state="translated">例子 SVM:不平衡类的分离超平面</target>
        </trans-unit>
        <trans-unit id="91573a1d3848bcbf75fd9f55b05ea6c0ffdd369c" translate="yes" xml:space="preserve">
          <source>Example: SVM: Weighted samples</source>
          <target state="translated">例子 SVM:加权样本</target>
        </trans-unit>
        <trans-unit id="2045507ce142490f07896ad129af54ba699ec55f" translate="yes" xml:space="preserve">
          <source>Example: Sample pipeline for text feature extraction and evaluation</source>
          <target state="translated">示例。文本特征提取和评估的管道样本</target>
        </trans-unit>
        <trans-unit id="7ba4cc118aac157d0fa6e0507f452f9cd3c00541" translate="yes" xml:space="preserve">
          <source>Example: Scaling the regularization parameter for SVCs</source>
          <target state="translated">示例。缩放SVC的正则化参数</target>
        </trans-unit>
        <trans-unit id="44953aeb6f9e76300c9533fd94f07ca2d80080c4" translate="yes" xml:space="preserve">
          <source>Example: Segmenting the picture of greek coins in regions</source>
          <target state="translated">例子。将希腊钱币的图片按地区分割开来</target>
        </trans-unit>
        <trans-unit id="7548f45c34696583b836ff8104901bf1b534d25a" translate="yes" xml:space="preserve">
          <source>Example: Selecting dimensionality reduction with Pipeline and GridSearchCV</source>
          <target state="translated">例子:用Pipeline和GridSearchCV选择维度减少法</target>
        </trans-unit>
        <trans-unit id="2ad9b8ca8720783f8e47181855adeaf1c7067ca4" translate="yes" xml:space="preserve">
          <source>Example: Selecting the number of clusters with silhouette analysis on KMeans clustering</source>
          <target state="translated">例子。在KMeans聚类上用剪影分析选择聚类数量</target>
        </trans-unit>
        <trans-unit id="e306fd7e529b25a9ebab8b60bff738ec2472094a" translate="yes" xml:space="preserve">
          <source>Example: Shrinkage covariance estimation</source>
          <target state="translated">例子:收缩协方差估计。收缩协方差估计</target>
        </trans-unit>
        <trans-unit id="a63f1737026f1a66c786fe1bd0f863a2c4b535ff" translate="yes" xml:space="preserve">
          <source>Example: Simple 1D Kernel Density Estimation</source>
          <target state="translated">例子:简单的一维核密度估计</target>
        </trans-unit>
        <trans-unit id="7b7671c69c6736b434206c6aa2a9304002c9c60c" translate="yes" xml:space="preserve">
          <source>Example: Single estimator versus bagging</source>
          <target state="translated">例子。单一估算器与袋装估算器</target>
        </trans-unit>
        <trans-unit id="e2de31e32f68e56030cc21fa2e2dddd616e6c8f1" translate="yes" xml:space="preserve">
          <source>Example: Sparse coding with a precomputed dictionary</source>
          <target state="translated">例子:稀疏编码与预先计算的字典相结合</target>
        </trans-unit>
        <trans-unit id="decc576cc634eb1866c26d9273d521123790340a" translate="yes" xml:space="preserve">
          <source>Example: Sparse inverse covariance estimation</source>
          <target state="translated">例子:稀疏的反协方差估计。稀疏的反协方差估计法</target>
        </trans-unit>
        <trans-unit id="b8ab9223f7379901f8939429c98c65b0007fc7d1" translate="yes" xml:space="preserve">
          <source>Example: Sparsity Example</source>
          <target state="translated">例子。疏散性 例子:</target>
        </trans-unit>
        <trans-unit id="43404877f7783d1614d7580870b7b15aa8361107" translate="yes" xml:space="preserve">
          <source>Example: Species distribution modeling</source>
          <target state="translated">例子。物种分布建模</target>
        </trans-unit>
        <trans-unit id="0f6e62955ff2dcc9525524e47e0854e8852e31d8" translate="yes" xml:space="preserve">
          <source>Example: Spectral clustering for image segmentation</source>
          <target state="translated">例子:用于图像分割的光谱聚类</target>
        </trans-unit>
        <trans-unit id="0450c0ce8e13f19ce1015ac8627aa371f9bef850" translate="yes" xml:space="preserve">
          <source>Example: Support Vector Regression  using linear and non-linear kernels</source>
          <target state="translated">例子:使用线性和非线性核的支持向量回归法</target>
        </trans-unit>
        <trans-unit id="b9946fecbfeca7319e414299bf7b5c17b2a611e1" translate="yes" xml:space="preserve">
          <source>Example: Swiss Roll reduction with LLE</source>
          <target state="translated">例子:用LLE减少瑞士卷</target>
        </trans-unit>
        <trans-unit id="bb9a49a34df007b364d1b612d2afdc249a2d2f3d" translate="yes" xml:space="preserve">
          <source>Example: Test with permutations the significance of a classification score</source>
          <target state="translated">例子。检验分类得分的显著性。</target>
        </trans-unit>
        <trans-unit id="affdb999bdb61a333454f94ad1b0e98b716cbfe3" translate="yes" xml:space="preserve">
          <source>Example: The Digit Dataset</source>
          <target state="translated">例子。数字数据集</target>
        </trans-unit>
        <trans-unit id="3a3aafd71bbb6dd9192523f0f32169f82f26460a" translate="yes" xml:space="preserve">
          <source>Example: The Iris Dataset</source>
          <target state="translated">例子。Iris数据集</target>
        </trans-unit>
        <trans-unit id="99bae92b7730fb12714ce02b4c24fd22fbceeffd" translate="yes" xml:space="preserve">
          <source>Example: The Johnson-Lindenstrauss bound for embedding with random projections</source>
          <target state="translated">例子:随机投影下嵌入的Johnson-Lindenstrauss边界</target>
        </trans-unit>
        <trans-unit id="ca29e8a5ce642e63904d61f2449a97a4404103ae" translate="yes" xml:space="preserve">
          <source>Example: Theil-Sen Regression</source>
          <target state="translated">例子:Theil-Sen Regression Theil-Sen回归</target>
        </trans-unit>
        <trans-unit id="96d170da4480a7e09bcf683232a0734b93d8fb23" translate="yes" xml:space="preserve">
          <source>Example: Topic extraction with Non-negative Matrix Factorization and Latent Dirichlet Allocation</source>
          <target state="translated">例子:用非负矩阵因子化和Latent Dirichlet Allocation进行主题提取。</target>
        </trans-unit>
        <trans-unit id="ccc6f1ab8dcc50c96257a2023bf842984d63875e" translate="yes" xml:space="preserve">
          <source>Example: Train error vs Test error</source>
          <target state="translated">例子。训练误差与测试误差</target>
        </trans-unit>
        <trans-unit id="8a48b22e46fb7a8f705f769a9c9a1699f3c76c32" translate="yes" xml:space="preserve">
          <source>Example: Two-class AdaBoost</source>
          <target state="translated">例子。两类AdaBoost</target>
        </trans-unit>
        <trans-unit id="5ecf671f7d8c62879adde2f4ca7457c7add0e417" translate="yes" xml:space="preserve">
          <source>Example: Underfitting vs. Overfitting</source>
          <target state="translated">例子。装备不足与装备过剩</target>
        </trans-unit>
        <trans-unit id="ed10152a1e77231b7e718621238fe70f1cc1966b" translate="yes" xml:space="preserve">
          <source>Example: Understanding the decision tree structure</source>
          <target state="translated">例子。了解决策树结构</target>
        </trans-unit>
        <trans-unit id="4ab006405455b9cc24f0f3e71cddada25f897fd4" translate="yes" xml:space="preserve">
          <source>Example: Univariate Feature Selection</source>
          <target state="translated">例子:单变量特征选择</target>
        </trans-unit>
        <trans-unit id="db7d6dfb30997f47e004503d2ba5ccbcf576f398" translate="yes" xml:space="preserve">
          <source>Example: Using FunctionTransformer to select columns</source>
          <target state="translated">例子:使用FunctionTransformer选择列</target>
        </trans-unit>
        <trans-unit id="b92e202726100c3273173f1efa95c95c9086249f" translate="yes" xml:space="preserve">
          <source>Example: Using KBinsDiscretizer to discretize continuous features</source>
          <target state="translated">例子:使用KBinsDiscretizer对连续特征进行离散化处理。</target>
        </trans-unit>
        <trans-unit id="0d510f4c9667f4e0c72eaf8dacd23eb694b46733" translate="yes" xml:space="preserve">
          <source>Example: Various Agglomerative Clustering on a 2D embedding of digits</source>
          <target state="translated">例子:在数字的二维嵌入上进行各种聚合聚类</target>
        </trans-unit>
        <trans-unit id="1c9b536dbdeb074742c0431ab6b69029576a0d82" translate="yes" xml:space="preserve">
          <source>Example: Varying regularization in Multi-layer Perceptron</source>
          <target state="translated">例子:多层感知器的可变正则化功能</target>
        </trans-unit>
        <trans-unit id="31bd05ac9b5d7f1d0bace84f24e0db489b75edf5" translate="yes" xml:space="preserve">
          <source>Example: Vector Quantization Example</source>
          <target state="translated">例子:矢量量化实例</target>
        </trans-unit>
        <trans-unit id="27120bafc28a5b749270c10b9ddba43417241436" translate="yes" xml:space="preserve">
          <source>Example: Visualization of MLP weights on MNIST</source>
          <target state="translated">例子:MNIST上MLP权重的可视化。</target>
        </trans-unit>
        <trans-unit id="3dfab6ef74eb3427010cf643c92ba2abb6ab5477" translate="yes" xml:space="preserve">
          <source>Example: Visualizing cross-validation behavior in scikit-learn</source>
          <target state="translated">例子:在scikit-learn中可视化交叉验证行为。在scikit-learn中可视化交叉验证行为。</target>
        </trans-unit>
        <trans-unit id="69990d145fb98fa249a8f4c05715f02e9acf3be1" translate="yes" xml:space="preserve">
          <source>Example: Visualizing the stock market structure</source>
          <target state="translated">例子。股市结构的可视化</target>
        </trans-unit>
        <trans-unit id="50a4a04bae745676155fe2ab2f550e4c6bd4c8e5" translate="yes" xml:space="preserve">
          <source>Example: Wikipedia principal eigenvector</source>
          <target state="translated">例子。维基百科主特征向量</target>
        </trans-unit>
        <trans-unit id="c897bb3cb68076a77a14bd7c8fca8aeead9c430f" translate="yes" xml:space="preserve">
          <source>Example: t-SNE: The effect of various perplexity values on the shape</source>
          <target state="translated">例:t-SNE:不同的困惑值对形状的影响。</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="9bcd43218b606486606e6100598fe4319cdfed63" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.base.BaseEstimator&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.base.BaseEstimator&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="9cd4c0223cc1083422f17a71334421a796084a35" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.base.TransformerMixin&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.base.TransformerMixin&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="99cae127f11268aacb1a29447ac98e81ed984914" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.calibration.CalibratedClassifierCV&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.calibration.CalibratedClassifierCV&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="1a1f26ad7aeb643f2e4775d8310f5785907da0ce" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.calibration.calibration_curve&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.calibration.calibration_curve&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="35463a0c9d2df40cc64bd69c509be8a7f4317486" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.cluster.AffinityPropagation&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.cluster.AffinityPropagation&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="216b9a5e8f5593de894255796a4659def83a086f" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.cluster.AgglomerativeClustering&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.cluster.AgglomerativeClustering&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="5290cf0df105dee3c343cabc1ff6d56b29fbcfa3" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.cluster.Birch&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.cluster.Birch&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="c0c22f9effbfaea459ad1f0e933375ee54f747c1" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.cluster.DBSCAN&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.cluster.DBSCAN&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="c277640564bd075fd11035dd6c365bbcf10bd374" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.cluster.FeatureAgglomeration&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.cluster.FeatureAgglomeration&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="923ce653c2d8393aa77c9b10bfad7223271a92ef" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.cluster.KMeans&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.cluster.KMeans&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="8239771e8733c2921eef1aef7e5cff8d776350e3" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.cluster.MeanShift&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.cluster.MeanShift&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="e86e29af346e077a276594c6c1b322dafa3719a1" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.cluster.MiniBatchKMeans&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.cluster.MiniBatchKMeans&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="f7bab20dcc58909676befac1c80e5a8410815270" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.cluster.SpectralClustering&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.cluster.SpectralClustering&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="df829fcc6d47e1c84dffa2162bbbc74e5b463a01" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.cluster.affinity_propagation&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.cluster.affinity_propagation&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="0c32261ec3bcd25ce5a3788b6f5170d9f8964b6f" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.cluster.estimate_bandwidth&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.cluster.estimate_bandwidth&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="c147cdc3d5c7d8b86464201593814e6e3d80f954" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.cluster.spectral_clustering&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.cluster.spectral_clustering&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="ae808fe0d9161d07b42937c62388e03da80411bc" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.compose.ColumnTransformer&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.compose.ColumnTransformer&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="b465d91a141138fb7779ae9c09461adc53fb221e" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.compose.TransformedTargetRegressor&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.compose.TransformedTargetRegressor&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="a16190e2f097b9bd280d0c0a6408c746ca1df089" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.covariance.EllipticEnvelope&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.covariance.EllipticEnvelope&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="4d7cf99c43fda2ebc727dd478dfb79f33c902fc0" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.covariance.EmpiricalCovariance&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.covariance.EmpiricalCovariance&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="76c52ffbc1b510c9735ce3f39289eb1c2a785fde" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.covariance.GraphicalLassoCV&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.covariance.GraphicalLassoCV&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="3f64d505bdc65f6cf97316112a3d8bebe358997f" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.covariance.LedoitWolf&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.covariance.LedoitWolf&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="31461b4fe2c8cc74d6949150f5f90f72eb0e314f" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.covariance.MinCovDet&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.covariance.MinCovDet&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="b6d1413f2101843df57bec78ad98d494b05ea288" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.covariance.OAS&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.covariance.OAS&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="e71305c6e35a62a74fb307922615bb7b72d3b97d" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.covariance.ShrunkCovariance&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.covariance.ShrunkCovariance&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="96f2e50403282a7daa19bcfd4fb8a4d16df5a1d9" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.covariance.empirical_covariance&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.covariance.empirical_covariance&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="e7cf836f434a138f80d1e3fd68f7dda0f0473a03" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.covariance.ledoit_wolf&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.covariance.ledoit_wolf&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="ed7288d5839a663466d9f351c62c90c66e52c030" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.cross_decomposition.CCA&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.cross_decomposition.CCA&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="e9a52115f0f48a8fbdd81cc9306d1c590c8462e1" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.cross_decomposition.PLSCanonical&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.cross_decomposition.PLSCanonical&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="bff5ceb260f90df96a5f9bcd2f089db6d0a1e1b4" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.cross_decomposition.PLSRegression&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.cross_decomposition.PLSRegression&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="23acba5124e34c9fbc03c9a02ba9bea41c6c5253" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.datasets.dump_svmlight_file&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.datasets.dump_svmlight_file&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="620ae75313d8cd951c7c27f409a7ae2985cc517b" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.datasets.fetch_20newsgroups&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.datasets.fetch_20newsgroups&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="7fea0b5526e30a7fdae6d2571ada789c5018cf1b" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.datasets.fetch_20newsgroups_vectorized&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.datasets.fetch_20newsgroups_vectorized&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="23b8808dc279a7651a7b3f87c5230148801efa28" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.datasets.fetch_california_housing&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.datasets.fetch_california_housing&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="748989dda91a0f029f485cc5319b7e728b0a88d9" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.datasets.fetch_lfw_people&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.datasets.fetch_lfw_people&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="fc9b0f075f5f26a6395d0ac1c5ae23b19b37c1f3" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.datasets.fetch_olivetti_faces&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.datasets.fetch_olivetti_faces&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="2cc05039f4af7c179bc50cab3b12b461bfe207e7" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.datasets.fetch_openml&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.datasets.fetch_openml&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="09b90bea2183bf09181348e4e278a97a0795fa75" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.datasets.fetch_species_distributions&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.datasets.fetch_species_distributions&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="c0bf3240679723acc32e74937fc05d436477dba3" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.datasets.get_data_home&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.datasets.get_data_home&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="ea83cb5ab7d2a48db79106ed31b1506272eabe0b" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.datasets.load_boston&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.datasets.load_boston&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="f1ddcd7f8af02625953dc3a921b8314814d2e222" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.datasets.load_diabetes&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.datasets.load_diabetes&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="0a52b474aba5bf20c3b21d1d7ffbb55e729993e0" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.datasets.load_digits&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.datasets.load_digits&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="3fb460a07cd9e98a007fed0941243271eae79768" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.datasets.load_iris&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.datasets.load_iris&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="99e1211264abd1b51c0ef967d4e069c493b04044" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.datasets.load_sample_image&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.datasets.load_sample_image&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="d3dd80a5a4bae875d4da5e590c3c6fa580be6a2e" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.datasets.load_wine&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.datasets.load_wine&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="8ab16f03fd36ca7c5649f05745dc622a07b8e1ca" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.datasets.make_biclusters&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.datasets.make_biclusters&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="6a8a3ec6f7be3bd75bebd4aaa343aee36632d2b3" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.datasets.make_blobs&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.datasets.make_blobs&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="830231ff58001c5d2a10e199332710f9cee1f46f" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.datasets.make_checkerboard&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.datasets.make_checkerboard&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="e7c85d06bbf43a3e35c49913411b755af248efad" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.datasets.make_circles&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.datasets.make_circles&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="9434b8e8b2ffed9ca0234bf9387700e53940fd1f" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.datasets.make_classification&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.datasets.make_classification&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="331e3cbf9fac2048cfb70158544193a6306c2910" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.datasets.make_gaussian_quantiles&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.datasets.make_gaussian_quantiles&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="d5c471b23f1acc8450011070e00bea997bc85f39" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.datasets.make_hastie_10_2&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.datasets.make_hastie_10_2&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="410e4b83a88e73430836284fb767492225468b82" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.datasets.make_moons&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.datasets.make_moons&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="8e498d35a980550e23a248d96197db9671590361" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.datasets.make_multilabel_classification&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.datasets.make_multilabel_classification&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="ca116e0626ffef777ef587a4c5ff89256a43f8b8" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.datasets.make_regression&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.datasets.make_regression&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="66e135f13aa3dc33d580601e04abbcd4c561e588" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.datasets.make_s_curve&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.datasets.make_s_curve&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="c26538a868fc2edda71fa4c76db255832f20ad01" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.datasets.make_sparse_coded_signal&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.datasets.make_sparse_coded_signal&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="930cd48a955e0c428ef9d1bbd1ad37d99e5517f3" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.datasets.make_sparse_spd_matrix&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.datasets.make_sparse_spd_matrix&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="798842c36d8dbea419b17244368ebd88f5016147" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.datasets.make_swiss_roll&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.datasets.make_swiss_roll&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="c3a54a41ddffd88a149b08a7e04916bc2eadc6d3" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.decomposition.FactorAnalysis&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.decomposition.FactorAnalysis&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="f16b7bc8c2f7c2d18aa17dd2179bb735c5bf8212" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.decomposition.FastICA&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.decomposition.FastICA&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="6d7b8a942a5d59a616cb3c78b848c7384ca399e9" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.decomposition.IncrementalPCA&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.decomposition.IncrementalPCA&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="35d2c5c3fa03e6f6e03cfb1833e15aee07abc457" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.decomposition.KernelPCA&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.decomposition.KernelPCA&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="51871af54dc01f695fb9aaea18071edd0166a396" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.decomposition.LatentDirichletAllocation&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.decomposition.LatentDirichletAllocation&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="2fe8f3b983142f01265007bc80b2c5d6f7e93cff" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.decomposition.MiniBatchDictionaryLearning&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.decomposition.MiniBatchDictionaryLearning&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="2fb2f52d511e8c2b86b92cc24036a3a6bd92f9ed" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.decomposition.MiniBatchSparsePCA&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.decomposition.MiniBatchSparsePCA&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="5d2617126538795cc5addace45bbac23296696fc" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.decomposition.NMF&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.decomposition.NMF&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="bf652be56893b733411a1a6daff58b9250b5ef95" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.decomposition.PCA&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.decomposition.PCA&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="0498a970bfeeb6d8e39c4f2230b2390e7162fa09" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.decomposition.SparseCoder&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.decomposition.SparseCoder&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="b8ef74465377404734e6bde74bbc6de964e908c6" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.decomposition.TruncatedSVD&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.decomposition.TruncatedSVD&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="d528054dc762d2b31339cb4191976186dcf0e557" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.discriminant_analysis.LinearDiscriminantAnalysis&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.discriminant_analysis.LinearDiscriminantAnalysis&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="2623dd3cc966749ff2ddb8a4660ffd437d3817c8" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="1349794cadf04b89e96fb56ae8fa115331d9ce46" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.ensemble.AdaBoostClassifier&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.ensemble.AdaBoostClassifier&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="64c31d94f431a8d9e359e79f3289aca85c4097b2" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.ensemble.AdaBoostRegressor&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.ensemble.AdaBoostRegressor&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="294186109f71a5b835411d96acad88288ed80c01" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.ensemble.BaggingRegressor&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.ensemble.BaggingRegressor&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="86e78fd634f6ca2c203c4f387b4b414cc401f5e1" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.ensemble.IsolationForest&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.ensemble.IsolationForest&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="9fd024957399d453b85fb64c648331f250c3631f" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.ensemble.RandomTreesEmbedding&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.ensemble.RandomTreesEmbedding&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="97fe2d5a33b86cba0657f7b47d464f124a5ceae7" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.ensemble.VotingClassifier&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.ensemble.VotingClassifier&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="26347fbbb974c39e45942b0f2916e5cfe8b04fb1" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.ensemble.partial_dependence.partial_dependence&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.ensemble.partial_dependence.partial_dependence&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="b1e1bae26ad011b443c9bf84c174379ef2b998a7" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.ensemble.partial_dependence.plot_partial_dependence&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.ensemble.partial_dependence.plot_partial_dependence&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="941a2e17d0e0daa0aca5d34ea35c9e47544c2fd5" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.exceptions.ConvergenceWarning&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.exceptions.ConvergenceWarning&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="f150387e957627accaef315cdae340df538923b7" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.feature_extraction.DictVectorizer&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.feature_extraction.DictVectorizer&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="d79f1d42d4afdf9312a75cb0cbdbafe96cc70ef7" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.feature_extraction.FeatureHasher&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.feature_extraction.FeatureHasher&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="fe4d46569818c8dce0e815fe55b83372e5124578" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.feature_extraction.image.extract_patches_2d&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.feature_extraction.image.extract_patches_2d&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="5e503fe93892f9638227417e3598be06e3f0b93c" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.feature_extraction.image.reconstruct_from_patches_2d&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.feature_extraction.image.reconstruct_from_patches_2d&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="19c9a52fe66cb090bb91ad91c8ef20d8cd668a30" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.feature_extraction.text.CountVectorizer&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.feature_extraction.text.CountVectorizer&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="06a42b42fdb379fbe48455a9d6b65c808ec6c3e7" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.feature_extraction.text.HashingVectorizer&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.feature_extraction.text.HashingVectorizer&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="18c4cfa534267ae557d615de96f3f6db2b99227e" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.feature_extraction.text.TfidfTransformer&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.feature_extraction.text.TfidfTransformer&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="4cd8508face9137896182da1dcc31bacf7f1df73" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.feature_extraction.text.TfidfVectorizer&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.feature_extraction.text.TfidfVectorizer&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="aa2762a1c03801051d5ef63ffe7727470e80acbd" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.feature_selection.RFE&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.feature_selection.RFE&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="05186b5383ccc3faf3c9779b20a7e1bfb93a0e2d" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.feature_selection.RFECV&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.feature_selection.RFECV&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="9cb01308534a1cfa5a51973507e4c7fab0fe8822" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.feature_selection.SelectFromModel&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.feature_selection.SelectFromModel&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="f6cdad3c79f1b4329eb9762ff9d84e51ad95ce23" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.feature_selection.SelectKBest&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.feature_selection.SelectKBest&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="51d73be65cb9e6dde0474920930de06ecd605c25" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.feature_selection.SelectPercentile&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.feature_selection.SelectPercentile&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="8a7bdf22ff6a1b1aa4f945aa24ce815fbb089cee" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.feature_selection.chi2&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.feature_selection.chi2&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="1111d5fbf18a5f6e701874ac59dbee9163665390" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.feature_selection.f_classif&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.feature_selection.f_classif&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="5b6be9368b7665387f6fcb28c7ce0b741f7ed238" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.feature_selection.f_regression&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.feature_selection.f_regression&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="1a050a1a410e0555841f5a8493a99355fe9d12fd" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.feature_selection.mutual_info_regression&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.feature_selection.mutual_info_regression&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="9bcc3a4ca2fdac9468311dde5d6c6147ef8dbf86" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.gaussian_process.GaussianProcessClassifier&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.gaussian_process.GaussianProcessClassifier&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="49ba50988712525e4f93e899b162f8880088c661" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.gaussian_process.GaussianProcessRegressor&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.gaussian_process.GaussianProcessRegressor&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="39ff74e50cc10dd57ea622565802d2c4604cbd1e" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.gaussian_process.kernels.ConstantKernel&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.gaussian_process.kernels.ConstantKernel&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="2eb89221021978b092aea40145fd8be35688e316" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.gaussian_process.kernels.DotProduct&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.gaussian_process.kernels.DotProduct&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="3d4026ed5bae6bc4e6d3586fe20b238c2134addb" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.gaussian_process.kernels.ExpSineSquared&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.gaussian_process.kernels.ExpSineSquared&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="de62e5d53a2e941ab3270439ba8b0144cbe05886" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.gaussian_process.kernels.Matern&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.gaussian_process.kernels.Matern&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="eb0db22bbd3a318b91774b437e3290ecfce5a388" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.gaussian_process.kernels.RBF&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.gaussian_process.kernels.RBF&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="f51a94e2e72c276163e0f4717b1a1688fc06d218" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.gaussian_process.kernels.RationalQuadratic&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.gaussian_process.kernels.RationalQuadratic&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="888aa69f01c09cccbfb162545e3350fa9934d512" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.gaussian_process.kernels.WhiteKernel&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.gaussian_process.kernels.WhiteKernel&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="b2c83648c6688f654b7d2077ee7eb6038fc31d6b" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.impute.MissingIndicator&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.impute.MissingIndicator&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="424d3a6b7355035cd1c13d24954bbceca37af67b" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.impute.SimpleImputer&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.impute.SimpleImputer&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="19987f82ad5e87200bb1f51dbe8cab4511fcc272" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.isotonic.IsotonicRegression&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.isotonic.IsotonicRegression&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="df0bb57be1b2035fed380daf92a35e7013576461" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.kernel_approximation.Nystroem&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.kernel_approximation.Nystroem&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="d0513320cb99cfdffa669dfb0aca8933187e351f" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.kernel_approximation.RBFSampler&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.kernel_approximation.RBFSampler&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="eeb63527795df11938f00995e0d6d7729194194b" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.kernel_ridge.KernelRidge&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.kernel_ridge.KernelRidge&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="11fe98da8a4a641636ec3cf8bcf5ef28f7c343c0" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.linear_model.ARDRegression&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.linear_model.ARDRegression&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="fdc5ebd145baf479eac9ffa157a2181eb5d5124f" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.linear_model.BayesianRidge&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.linear_model.BayesianRidge&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="e8626933cbb0e9622c99c69b306ce82b08c44888" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.linear_model.ElasticNet&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.linear_model.ElasticNet&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="fef1a76e11f8a1330a26c168a0068e2c48d6c5fa" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.linear_model.HuberRegressor&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.linear_model.HuberRegressor&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="06120fb6a3005fcd6ddf7c8e9b46f29ec88719bd" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.linear_model.Lasso&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.linear_model.Lasso&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="1a05501d5712e352eb74340f0beda5a44636123a" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.linear_model.LinearRegression&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.linear_model.LinearRegression&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="991e1232f949d2633595a04f231fe6ea0cbfae48" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.linear_model.LogisticRegression&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.linear_model.LogisticRegression&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="9e002e20b07655a125622b5296bfd44fb8eccf24" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.linear_model.MultiTaskLasso&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.linear_model.MultiTaskLasso&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="f26510cbc4f7fb014eefe07f26c2342b3d275037" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.linear_model.OrthogonalMatchingPursuit&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.linear_model.OrthogonalMatchingPursuit&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="9451f636a7e1987f50926517ff022941da12378c" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.linear_model.PassiveAggressiveClassifier&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.linear_model.PassiveAggressiveClassifier&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="0c3d3ae7e874a0b07110bfdb751264ffa6025d0c" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.linear_model.Perceptron&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.linear_model.Perceptron&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="e43167a7d970d15ccd77fd1b4a190fe11973e5bf" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.linear_model.RANSACRegressor&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.linear_model.RANSACRegressor&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="27cdc4ad13dc7f677861d978749be7f6aecb850f" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.linear_model.Ridge&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.linear_model.Ridge&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="7f8f0f2db8bf67932a51ddcd75028e0d14703440" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.linear_model.RidgeClassifier&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.linear_model.RidgeClassifier&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="7f30c099555c0c318a43dd9d57a1eae1fa8be9d3" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.linear_model.SGDClassifier&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.linear_model.SGDClassifier&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="a19e2aeaaa5a934928aa65c0e2d5a59d2e7de79b" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.linear_model.SGDRegressor&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.linear_model.SGDRegressor&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="559656962b30fa18163d92323e281af0275bf468" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.linear_model.TheilSenRegressor&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.linear_model.TheilSenRegressor&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="aca2edba4214629edd10baafb546fd347e6c5b09" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.linear_model.enet_path&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.linear_model.enet_path&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="2fc3fa015c53f597842c2d8799ffbe6637ecd526" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.linear_model.lars_path&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.linear_model.lars_path&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="e1074dc7088eb3cd02bb567e3077db21b597a920" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.linear_model.lasso_path&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.linear_model.lasso_path&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="db142891c81ecd00afe5606dfcbca33eb80d0ba2" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.manifold.Isomap&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.manifold.Isomap&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="b38502edf4e7255132308cfe75efeb13dae59091" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.manifold.LocallyLinearEmbedding&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.manifold.LocallyLinearEmbedding&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="8ed67a5456d81f8235cdd2f789af3fe26e4eb637" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.manifold.MDS&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.manifold.MDS&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="bf593b1529570a6c5c81198741722e50c5279d3b" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.manifold.SpectralEmbedding&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.manifold.SpectralEmbedding&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="58d035747efff2c09c04d7c9b0e2fae7d5b6d082" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.manifold.TSNE&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.manifold.TSNE&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="396f81e7957c6f6dcc3d36e5e17292ca4635110a" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.manifold.locally_linear_embedding&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.manifold.locally_linear_embedding&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="1acf1996d6bbc4d71ffdc435215ce6e7ab64dca5" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.metrics.accuracy_score&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.metrics.accuracy_score&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="a738415646a01ae9e7b1d8643b25a6ddb315a9e0" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.metrics.adjusted_mutual_info_score&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.metrics.adjusted_mutual_info_score&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="3178b56c678af6322d17728c2361d7b8ce1ce49d" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.metrics.adjusted_rand_score&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.metrics.adjusted_rand_score&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="c542d13d1804286aebfa78380e59abcde17dd7fb" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.metrics.auc&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.metrics.auc&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="39b8b757f2671541c6ddd17afb5dc96084c81648" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.metrics.average_precision_score&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.metrics.average_precision_score&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="9b448e8f28ab24b6a95460f55ba81d738f071af1" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.metrics.brier_score_loss&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.metrics.brier_score_loss&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="430df3d8ca3730ea96f75b7a5539e3ad2c01cabd" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.metrics.classification_report&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.metrics.classification_report&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="90dd0671f44790638ad9c00ae230baae0e0dae2f" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.metrics.completeness_score&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.metrics.completeness_score&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="4ac56ee5f6b5f248a5e484a1b875b199603452a0" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.metrics.confusion_matrix&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.metrics.confusion_matrix&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="68d5eebcae09731b10b42b506dee6aeaa9cc59c7" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.metrics.consensus_score&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.metrics.consensus_score&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="464478420fc06efe074bfa8290cacd5fb4e16038" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.metrics.f1_score&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.metrics.f1_score&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="cf663a8a9fea84f46c652924c497be2c0b202587" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.metrics.hamming_loss&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.metrics.hamming_loss&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="05683cdf324d10bf8f04b6289f46caf2a49c8659" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.metrics.homogeneity_score&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.metrics.homogeneity_score&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="35b2b3fc91e5356538266a022149f28fc2b01b53" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.metrics.jaccard_similarity_score&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.metrics.jaccard_similarity_score&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="7efe911fa17017b7d669e2a15077df43ee2e1bb5" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.metrics.log_loss&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.metrics.log_loss&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="ff6725df824779f34957240a67603cd3320e8742" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.metrics.make_scorer&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.metrics.make_scorer&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="d540e228d74271b177289ea03fcd881277646274" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.metrics.mean_squared_error&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.metrics.mean_squared_error&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="099272f1a041a928b0769821660444bb471d81c0" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.metrics.median_absolute_error&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.metrics.median_absolute_error&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="5967929478fc74c9789ee9f8cd6fcfd7c727835d" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.metrics.mutual_info_score&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.metrics.mutual_info_score&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="375da1310cd7a8f03e46d94e6fca60e0202123e4" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.metrics.pairwise_distances&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.metrics.pairwise_distances&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="bd11a73c566c8afdfbcb6317395d30da0fc20760" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.metrics.pairwise_distances_argmin&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.metrics.pairwise_distances_argmin&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="de40bfd7cec91619f2a9a424d0b65e6738d807ef" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.metrics.precision_recall_curve&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.metrics.precision_recall_curve&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="0878cde37d21a60c68f3f33221e4ed6b1cd6c774" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.metrics.precision_score&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.metrics.precision_score&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="3d32ac05569b092741501182553a20fcbedaa366" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.metrics.r2_score&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.metrics.r2_score&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="4a60c10b2a5d18cb2c144196183836d029330c8e" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.metrics.recall_score&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.metrics.recall_score&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="d9080f00b8f05fbecd6d220a0e785d016f7a7d7e" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.metrics.roc_curve&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.metrics.roc_curve&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="e260ed7993734b0ed9002bfb6ac553a2dc4fcfd4" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.metrics.silhouette_samples&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.metrics.silhouette_samples&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="03b927541bb129b208efa55fb6e3197cc531a486" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.metrics.silhouette_score&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.metrics.silhouette_score&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="eff56be3fc139420db2c230714eae21c64b32859" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.metrics.v_measure_score&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.metrics.v_measure_score&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="3e1b939abdbbefc9b67021c1ffa10a1cd240a4e3" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.metrics.zero_one_loss&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.metrics.zero_one_loss&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="a99d751de2a38af7a9ac56c1d18729c5ed31ba1e" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.mixture.BayesianGaussianMixture&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.mixture.BayesianGaussianMixture&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="66f6572574c42ff4cf50818a9e7a56bd5d8de565" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.mixture.GaussianMixture&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.mixture.GaussianMixture&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="d338dd2eeb4d846685698366d6a1c2b0a140ee92" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.model_selection.GridSearchCV&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.model_selection.GridSearchCV&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="753f8782fdd9a98b016c1e9c8e6ecc8279ad156e" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.model_selection.GroupKFold&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.model_selection.GroupKFold&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="2471ac82e328310fed2445094e0eb20882f62c7d" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.model_selection.GroupShuffleSplit&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.model_selection.GroupShuffleSplit&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="79a7f25f8b33accd7c1ece45823d140b5165c076" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.model_selection.KFold&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.model_selection.KFold&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="9da53cc3574b0e0429d96a0bbf9285dc20092758" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.model_selection.RandomizedSearchCV&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.model_selection.RandomizedSearchCV&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="c3b01bb1cd968d6fff186e550fcdff3cb4a663c5" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.model_selection.ShuffleSplit&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.model_selection.ShuffleSplit&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="e3ac672569ff5d18c59cd993fb2b52af3a70cb3b" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.model_selection.StratifiedKFold&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.model_selection.StratifiedKFold&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="94f937d118108bbf56d117b69cfda51f345777ab" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.model_selection.StratifiedShuffleSplit&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.model_selection.StratifiedShuffleSplit&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="6d2a45b4a228c0ff26d151abb4398a317e97c2e2" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.model_selection.TimeSeriesSplit&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.model_selection.TimeSeriesSplit&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="1169f405dfa22e87cb64248f2c5b612de695b324" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.model_selection.cross_val_predict&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.model_selection.cross_val_predict&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="d1e3e38243b5c0275e9fe55822527a766daf84e5" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.model_selection.cross_val_score&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.model_selection.cross_val_score&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="64bdbb73303147fbfb7b4c72e2c5b9f862e6846a" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.model_selection.learning_curve&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.model_selection.learning_curve&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="058189237019f568402a807ff0f37d6659f730bd" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.model_selection.permutation_test_score&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.model_selection.permutation_test_score&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="a35d588868114f2ff75fd130567f7e47c8648990" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.model_selection.train_test_split&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.model_selection.train_test_split&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="c436bb41de4b1b0cbaf9f2a30c84739212eaf00c" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.model_selection.validation_curve&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.model_selection.validation_curve&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="8c90ea159f2ef33465cc5505a41ebcb13d8fa556" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.multiclass.OneVsRestClassifier&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.multiclass.OneVsRestClassifier&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="3b803ea3410b546ac8080c64d5a283e65161ec36" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.multioutput.ClassifierChain&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.multioutput.ClassifierChain&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="175a335aedce67fab5414504b5b10913957177f2" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.multioutput.MultiOutputRegressor&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.multioutput.MultiOutputRegressor&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="7e5276c814e14e2874f1abc67268ecba0a9384b5" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.naive_bayes.BernoulliNB&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.naive_bayes.BernoulliNB&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="07d68dd4fe4a915ea6b5e32e2eca6d299d857bb7" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.naive_bayes.ComplementNB&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.naive_bayes.ComplementNB&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="af3404bd8b46bee3672ba86cfbae1ef5ccc5adfa" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.naive_bayes.GaussianNB&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.naive_bayes.GaussianNB&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="141d21773d99f3975d70ea9e9ce62f28b143b5ad" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.naive_bayes.MultinomialNB&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.naive_bayes.MultinomialNB&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="5d999f3df66c782268c5cd0602cb79c507903292" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.neighbors.KNeighborsClassifier&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.neighbors.KNeighborsClassifier&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="f26682456d970fbdab48470c970d2b2cf9d0be01" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.neighbors.KNeighborsRegressor&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.neighbors.KNeighborsRegressor&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="2b0ca2d2cfcae04b6e8f648035a263800eba906a" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.neighbors.KernelDensity&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.neighbors.KernelDensity&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="135f507596f50f4128ab7f674fa719851e06ba93" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.neighbors.LocalOutlierFactor&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.neighbors.LocalOutlierFactor&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="2d07ff0ebbbb5614d7d55c03e06e43f1f3f6d8b5" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.neighbors.NearestCentroid&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.neighbors.NearestCentroid&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="9e409523b85d3bf8b35de4b9a79e58e19412df01" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.neighbors.kneighbors_graph&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.neighbors.kneighbors_graph&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="92b259d24e226f9725b7a2251b317d28f69ae1de" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.neural_network.BernoulliRBM&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.neural_network.BernoulliRBM&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="bc26545aa247592ad5cae0c82982049aecb04005" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.neural_network.MLPClassifier&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.neural_network.MLPClassifier&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="aa6ee186b720b58c48c82ddfe44e7546cce24778" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.pipeline.FeatureUnion&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.pipeline.FeatureUnion&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="998ec3583b26e3fb4a4ed0aff8fa32c106d8d3fd" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.pipeline.Pipeline&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.pipeline.Pipeline&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="ce16abd7de545850afcb200375d7496f51a99f86" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.pipeline.make_pipeline&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.pipeline.make_pipeline&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="22b8f1c3009cd0b959254500e33f171fb13ddc5e" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.pipeline.make_union&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.pipeline.make_union&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="2542a7119b1badd4a5e17e03f5405355cc7a6b4e" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.preprocessing.FunctionTransformer&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.preprocessing.FunctionTransformer&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="c5ebd1b718c2b56f55f671f8d4b702c99b6f3049" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.preprocessing.KBinsDiscretizer&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.preprocessing.KBinsDiscretizer&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="c4381d9fd377759510c6b6b975b0aef8ecf5740c" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.preprocessing.MaxAbsScaler&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.preprocessing.MaxAbsScaler&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="6c598f0cbf4e71a390fc3aa76e817310e670b681" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.preprocessing.MinMaxScaler&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.preprocessing.MinMaxScaler&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="c1bc49d9937f0e2a5f4b0d4692671125b0d008b2" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.preprocessing.Normalizer&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.preprocessing.Normalizer&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="149136e5bc700b2e0a7747b2cd498f47536f44b4" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.preprocessing.OneHotEncoder&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.preprocessing.OneHotEncoder&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="56c4939b9d0afea5d1cebbe13cfe733258c34c00" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.preprocessing.PolynomialFeatures&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.preprocessing.PolynomialFeatures&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="3a155bf7a30ca61ce1f29447001d55507068d346" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.preprocessing.PowerTransformer&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.preprocessing.PowerTransformer&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="deb84a64d1425831a8777aa592bd6255271f75f8" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.preprocessing.QuantileTransformer&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.preprocessing.QuantileTransformer&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="6a98bd8bd28f139beba8d2222e8707ab286c5640" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.preprocessing.RobustScaler&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.preprocessing.RobustScaler&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="cc6025242e9ac27ec2143cf98f98385064f91436" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.preprocessing.StandardScaler&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.preprocessing.StandardScaler&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="be97d0bdf7a32b2c8b6fa3970798bb89bf783b34" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.preprocessing.label_binarize&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.preprocessing.label_binarize&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="36fa08e3b378f54ed6dffaaf0e419793c6ba101a" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.preprocessing.minmax_scale&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.preprocessing.minmax_scale&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="69e893f40e9fcd420f194c86a5ec119b1f003520" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.preprocessing.quantile_transform&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.preprocessing.quantile_transform&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="f1b108e5d448ff373a393340cccb912e8ffb72af" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.preprocessing.scale&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.preprocessing.scale&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="955e7e901699a2db4e4172aa9ab76068eea1b92f" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.random_projection.SparseRandomProjection&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.random_projection.SparseRandomProjection&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="4c4748cf4849c5fc863bc575791af8141a34cef5" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.random_projection.johnson_lindenstrauss_min_dim&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.random_projection.johnson_lindenstrauss_min_dim&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="88c1a4bb06d05e08ee20fd615bb4b53da175dc3d" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.semi_supervised.LabelSpreading&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.semi_supervised.LabelSpreading&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="7cd962b7c530c80e05b210277444c2bad820ca1e" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.svm.LinearSVC&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.svm.LinearSVC&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="edbf5922b6f27be5c5403e10197b447705e6f9cb" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.svm.NuSVC&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.svm.NuSVC&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="12c9b218e18b941578bc9aca3c23747e42f54c1b" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.svm.NuSVR&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.svm.NuSVR&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="dea2aede79f19fb95e5148ee5c11b3c7f223323a" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.svm.OneClassSVM&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.svm.OneClassSVM&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="6bc3b4bf10642b79be6b77851a23e142b0ca36cf" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.svm.SVC&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.svm.SVC&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="c4dcb2fd7042cd90b5cd989b10ea50e9efa48d50" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.svm.SVR&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.svm.SVR&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="2a2669f574a679afac893b53b03bdb1bd3060d05" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.svm.l1_min_c&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.svm.l1_min_c&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="15e7f4eb0d23fc3ecea22ca0e3a3ebdefcef3322" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.tree.DecisionTreeClassifier&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.tree.DecisionTreeClassifier&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="65c5a0a1817f47dc4a24c72d932486e31f108484" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.tree.DecisionTreeRegressor&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.tree.DecisionTreeRegressor&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="668a018e39621dfc09781d5e1a018ed078089b72" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.utils.Memory&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.utils.Memory&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="7213df901109f2c1652eb65fa0f35fe0ff18cd9d" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.utils.check_random_state&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.utils.check_random_state&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="2865372d64705a746f4e393e76c01c0a1fae3b37" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.utils.extmath.density&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.utils.extmath.density&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="08628ee68b552a536a7e40670b9091a9987d81dc" translate="yes" xml:space="preserve">
          <source>Examples using &lt;code&gt;sklearn.utils.shuffle&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;sklearn.utils.shuffle&lt;/code&gt; 的示例</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="2c25bc9aea0135b8a44078eaa686262d861b8d2c" translate="yes" xml:space="preserve">
          <source>Exception class to raise if estimator is used before fitting.</source>
          <target state="translated">如果在拟合前使用了估计器,则引发异常类。</target>
        </trans-unit>
        <trans-unit id="7233f2cfa7da608e08349effe3a0829359d064c0" translate="yes" xml:space="preserve">
          <source>Exception.with_traceback(tb) &amp;ndash; set self.__traceback__ to tb and return self.</source>
          <target state="translated">Exception.with_traceback（tb）&amp;ndash;将self .__ traceback__设置为tb并返回self。</target>
        </trans-unit>
        <trans-unit id="adb63819e55094a1c321051667ef69bc97910b3c" translate="yes" xml:space="preserve">
          <source>Exercise 1: Language identification</source>
          <target state="translated">练习一:语言识别</target>
        </trans-unit>
        <trans-unit id="f2d31e2f590f63884cdac3b6e0353c56e95636fd" translate="yes" xml:space="preserve">
          <source>Exercise 2: Sentiment Analysis on movie reviews</source>
          <target state="translated">练习二:电影评论的情感分析</target>
        </trans-unit>
        <trans-unit id="f076754d245dfa0bb055ce293bbe18bfa8d62689" translate="yes" xml:space="preserve">
          <source>Exercise 3: CLI text classification utility</source>
          <target state="translated">练习3:CLI文本分类工具</target>
        </trans-unit>
        <trans-unit id="4dc503dafcf231e8065504c4cd9f19a0dcdfc147" translate="yes" xml:space="preserve">
          <source>Exercises</source>
          <target state="translated">Exercises</target>
        </trans-unit>
        <trans-unit id="e172501d8e170f5e501dbb7e10f621b359347edb" translate="yes" xml:space="preserve">
          <source>Exhaustive search over specified parameter values for an estimator.</source>
          <target state="translated">对估计器的指定参数值进行彻底搜索。</target>
        </trans-unit>
        <trans-unit id="a9607bbaaa4524856cf2140445f92e407ff55546" translate="yes" xml:space="preserve">
          <source>Exp-Sine-Squared kernel.</source>
          <target state="translated">Exp-Sine-Squared核。</target>
        </trans-unit>
        <trans-unit id="3b0c107b231b7c7d2dd1b666566c6604385763d3" translate="yes" xml:space="preserve">
          <source>Expected results for the top 5 most represented people in the dataset:</source>
          <target state="translated">数据集中最具代表性的前5名人员的预期结果。</target>
        </trans-unit>
        <trans-unit id="98312dc3857136b93e4f949a4e72a6712170156c" translate="yes" xml:space="preserve">
          <source>Explained variance regression score function</source>
          <target state="translated">解释方差回归得分函数</target>
        </trans-unit>
        <trans-unit id="31162dbfd1baf8644ae388945633979e4d4b742f" translate="yes" xml:space="preserve">
          <source>Explicit feature map approximation for RBF kernels</source>
          <target state="translated">RBF核的显式特征图近似法</target>
        </trans-unit>
        <trans-unit id="2139158fefd69dd7900f572f929357923b2e9c08" translate="yes" xml:space="preserve">
          <source>Exponential decay rate for estimates of first moment vector in adam, should be in [0, 1). Only used when solver=&amp;rsquo;adam&amp;rsquo;</source>
          <target state="translated">用于估计亚当中第一矩矢量的指数衰减率应为[0，1）。仅在solver ='adam'时使用</target>
        </trans-unit>
        <trans-unit id="3b517f2d5130d355e5abbd42b6b2d0de0b8022fe" translate="yes" xml:space="preserve">
          <source>Exponential decay rate for estimates of second moment vector in adam, should be in [0, 1). Only used when solver=&amp;rsquo;adam&amp;rsquo;</source>
          <target state="translated">用于估计亚当中第二矩矢量的指数衰减率应为[0，1）。仅在solver ='adam'时使用</target>
        </trans-unit>
        <trans-unit id="5be074c21803e5b45a92c260ef448b3876757aad" translate="yes" xml:space="preserve">
          <source>Exponential kernel (&lt;code&gt;kernel = 'exponential'&lt;/code&gt;)</source>
          <target state="translated">指数内核（ &lt;code&gt;kernel = 'exponential'&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="4e6d09cb3f7c099f340e3cd011063b05dd20e736" translate="yes" xml:space="preserve">
          <source>Exponential loss (&lt;code&gt;'exponential'&lt;/code&gt;): The same loss function as &lt;a href=&quot;generated/sklearn.ensemble.adaboostclassifier#sklearn.ensemble.AdaBoostClassifier&quot;&gt;&lt;code&gt;AdaBoostClassifier&lt;/code&gt;&lt;/a&gt;. Less robust to mislabeled examples than &lt;code&gt;'deviance'&lt;/code&gt;; can only be used for binary classification.</source>
          <target state="translated">指数损失（ &lt;code&gt;'exponential'&lt;/code&gt; ）：与&lt;a href=&quot;generated/sklearn.ensemble.adaboostclassifier#sklearn.ensemble.AdaBoostClassifier&quot;&gt; &lt;code&gt;AdaBoostClassifier&lt;/code&gt; &lt;/a&gt;相同的损失函数。对于标签错误的示例，其健壮性不如 &lt;code&gt;'deviance'&lt;/code&gt; ；只能用于二进制分类。</target>
        </trans-unit>
        <trans-unit id="82a5349d4a42ae4b58ce233c1fe754cf20695efd" translate="yes" xml:space="preserve">
          <source>Exponentiate kernel by given exponent.</source>
          <target state="translated">用给定的指数对内核进行指数化。</target>
        </trans-unit>
        <trans-unit id="6a1fb392b4816003f7cab8689b69b73b81fd13d1" translate="yes" xml:space="preserve">
          <source>Export a decision tree in DOT format.</source>
          <target state="translated">以DOT格式导出决策树。</target>
        </trans-unit>
        <trans-unit id="03b256629a71913d7df02c71e2c067b3de2f6cf2" translate="yes" xml:space="preserve">
          <source>External Resources, Videos and Talks</source>
          <target state="translated">外部资源、视频和讲座</target>
        </trans-unit>
        <trans-unit id="6a53253fde7542b58764813563b294277a2499e0" translate="yes" xml:space="preserve">
          <source>External Tutorials</source>
          <target state="translated">外部教程</target>
        </trans-unit>
        <trans-unit id="8d6114c0a06ffd4fdec489d603f3c2293f085d8e" translate="yes" xml:space="preserve">
          <source>Extra-trees differ from classic decision trees in the way they are built. When looking for the best split to separate the samples of a node into two groups, random splits are drawn for each of the &lt;code&gt;max_features&lt;/code&gt; randomly selected features and the best split among those is chosen. When &lt;code&gt;max_features&lt;/code&gt; is set 1, this amounts to building a totally random decision tree.</source>
          <target state="translated">额外树在构建方式上与经典决策树不同。当寻找最佳分割以将一个节点的样本分成两组时，将为每个 &lt;code&gt;max_features&lt;/code&gt; 随机选择的特征绘制随机分割，并在其中选择最佳分割。当 &lt;code&gt;max_features&lt;/code&gt; 设置为1时，这相当于建立一个完全随机的决策树。</target>
        </trans-unit>
        <trans-unit id="9955e456c4c0c464fbdd3775651693383fea52c1" translate="yes" xml:space="preserve">
          <source>Extract an ordered array of unique labels</source>
          <target state="translated">提取一个唯一标签的有序数组</target>
        </trans-unit>
        <trans-unit id="73640fcc3fc33a24884d5d906a4df64cbbe3523c" translate="yes" xml:space="preserve">
          <source>Extract token counts out of raw text documents using the vocabulary fitted with fit or the one provided to the constructor.</source>
          <target state="translated">使用适合的词汇或提供给构造函数的词汇,从原始文本文档中提取令牌数。</target>
        </trans-unit>
        <trans-unit id="752e876b40a502b1de5591e926917e4bc7914d7e" translate="yes" xml:space="preserve">
          <source>Extracting features from text files</source>
          <target state="translated">从文本文件中提取特征</target>
        </trans-unit>
        <trans-unit id="4d1d5b7b89c16041c19e08ba2433ff6ccea2c09b" translate="yes" xml:space="preserve">
          <source>Extracts patches from a collection of images</source>
          <target state="translated">从图像集合中提取补丁</target>
        </trans-unit>
        <trans-unit id="20b1f470ded66ddce46bb1f3957f49e776657ce0" translate="yes" xml:space="preserve">
          <source>F values of features.</source>
          <target state="translated">特征的F值。</target>
        </trans-unit>
        <trans-unit id="94361d25a9823c7799f46133208e1994c901281f" translate="yes" xml:space="preserve">
          <source>F-beta score of the positive class in binary classification or weighted average of the F-beta score of each class for the multiclass task.</source>
          <target state="translated">二元分类中正类的F-beta得分或多类任务中各类F-beta得分的加权平均值。</target>
        </trans-unit>
        <trans-unit id="b88bc0b15f26e6bb0b6f496fb42c5c9bb95eea78" translate="yes" xml:space="preserve">
          <source>F-value between label/feature for regression tasks.</source>
          <target state="translated">回归任务的标签/特征之间的F值。</target>
        </trans-unit>
        <trans-unit id="3ca92f821d80e2b3e5b34951989fdd6926d62950" translate="yes" xml:space="preserve">
          <source>F1 score of the positive class in binary classification or weighted average of the F1 scores of each class for the multiclass task.</source>
          <target state="translated">二元分类中正类的F1得分或多类任务中各类F1得分的加权平均值。</target>
        </trans-unit>
        <trans-unit id="03688ba6aa340b87549088aa5739944cb6b1dc73" translate="yes" xml:space="preserve">
          <source>FAQ</source>
          <target state="translated">FAQ</target>
        </trans-unit>
        <trans-unit id="761451a93e0c15b8090688d5167bdaf6518e982d" translate="yes" xml:space="preserve">
          <source>FPR test stands for False Positive Rate test. It controls the total amount of false detections.</source>
          <target state="translated">FPR测试是假阳性率测试的缩写。它控制着误检的总量。</target>
        </trans-unit>
        <trans-unit id="385b798ea2337dc2cc46e2c01984384fa2b4a883" translate="yes" xml:space="preserve">
          <source>F_beta</source>
          <target state="translated">F_beta</target>
        </trans-unit>
        <trans-unit id="272ad30c6a89ef4d06060249f8d92df03b3df406" translate="yes" xml:space="preserve">
          <source>Face completion with a multi-output estimators</source>
          <target state="translated">多输出估计器的面完成</target>
        </trans-unit>
        <trans-unit id="0507c7e4982962e832b85d06191a2b4d2bebd20a" translate="yes" xml:space="preserve">
          <source>Face recognition with eigenfaces</source>
          <target state="translated">利用特征面孔进行人脸识别</target>
        </trans-unit>
        <trans-unit id="2a0151d21d57d7f913fb01048c891608a6dbd1dd" translate="yes" xml:space="preserve">
          <source>Face, a 1024 x 768 size image of a raccoon face, is used here to illustrate how &lt;code&gt;k&lt;/code&gt;-means is used for vector quantization.</source>
          <target state="translated">人脸是浣熊脸的1024 x 768尺寸图像，在这里用于说明如何将 &lt;code&gt;k&lt;/code&gt; 均值用于矢量量化。</target>
        </trans-unit>
        <trans-unit id="e470f0e1bd32044d0ac0cbb19036da58e0de1f71" translate="yes" xml:space="preserve">
          <source>Faces dataset decompositions</source>
          <target state="translated">面部数据集分解</target>
        </trans-unit>
        <trans-unit id="05a6c8a2b029e9776dffd4a4e031ba78fd52aae9" translate="yes" xml:space="preserve">
          <source>Faces recognition example using eigenfaces and SVMs</source>
          <target state="translated">使用特征面和SVM进行人脸识别的例子</target>
        </trans-unit>
        <trans-unit id="1395bbf4ff3a0e8184103b7a1548ed436935fe5c" translate="yes" xml:space="preserve">
          <source>Factor Analysis (FA)</source>
          <target state="translated">因素分析(FA)</target>
        </trans-unit>
        <trans-unit id="ef94831c8deb9ad37fe90ab4fff5e44828bcfdae" translate="yes" xml:space="preserve">
          <source>Factor analysis &lt;em&gt;can&lt;/em&gt; produce similar components (the columns of its loading matrix) to &lt;a href=&quot;generated/sklearn.decomposition.pca#sklearn.decomposition.PCA&quot;&gt;&lt;code&gt;PCA&lt;/code&gt;&lt;/a&gt;. However, one can not make any general statements about these components (e.g. whether they are orthogonal):</source>
          <target state="translated">因子分析&lt;em&gt;可以&lt;/em&gt;产生与&lt;a href=&quot;generated/sklearn.decomposition.pca#sklearn.decomposition.PCA&quot;&gt; &lt;code&gt;PCA&lt;/code&gt; &lt;/a&gt;相似的组件（其负载矩阵的列）。但是，不能对这些组件做出任何一般性声明（例如，它们是否正交）：</target>
        </trans-unit>
        <trans-unit id="6452044c700752d1602ef512b59b643cc8ae2400" translate="yes" xml:space="preserve">
          <source>FactorAnalysis performs a maximum likelihood estimate of the so-called &lt;code&gt;loading&lt;/code&gt; matrix, the transformation of the latent variables to the observed ones, using expectation-maximization (EM).</source>
          <target state="translated">FactorAnalysis 使用期望最大化（EM）对所谓的 &lt;code&gt;loading&lt;/code&gt; 矩阵执行最大似然估计，即将潜在变量转换为观测变量。</target>
        </trans-unit>
        <trans-unit id="cf3867c5acb3e93b6681ae294efcb69608ed1285" translate="yes" xml:space="preserve">
          <source>Factorization matrix, sometimes called &amp;lsquo;dictionary&amp;rsquo;.</source>
          <target state="translated">分解矩阵，有时称为&amp;ldquo;字典&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="c37fb3c7cf083e46f6a90c90a7e2709ff0a25468" translate="yes" xml:space="preserve">
          <source>False : never precompute distances</source>
          <target state="translated">假的:从不预先计算距离。</target>
        </trans-unit>
        <trans-unit id="3b5c093eaf163ad057d3c3eb085ce8a982ff3356" translate="yes" xml:space="preserve">
          <source>False: accept both np.inf and np.nan in X.</source>
          <target state="translated">假:同时接受X中的np.inf和np.nan。</target>
        </trans-unit>
        <trans-unit id="804378d4f4edbfd6d3a924fd7282c07b3c8233b0" translate="yes" xml:space="preserve">
          <source>False: the results is casted to a signed int</source>
          <target state="translated">False:将结果转换为一个有符号的int。</target>
        </trans-unit>
        <trans-unit id="c87c316f44a57817f64366d0bec154e1f9523fd3" translate="yes" xml:space="preserve">
          <source>Fancy token-level analysis such as stemming, lemmatizing, compound splitting, filtering based on part-of-speech, etc. are not included in the scikit-learn codebase, but can be added by customizing either the tokenizer or the analyzer. Here&amp;rsquo;s a &lt;code&gt;CountVectorizer&lt;/code&gt; with a tokenizer and lemmatizer using &lt;a href=&quot;http://www.nltk.org&quot;&gt;NLTK&lt;/a&gt;:</source>
          <target state="translated">scikit-learn代码库中不包含花式令牌级分析，例如词干，词根化，复合分解，基于词性的过滤等，但可以通过自定义令牌化器或分析器来添加。这是一个使用&lt;a href=&quot;http://www.nltk.org&quot;&gt;NLTK的&lt;/a&gt;带有分词器和 &lt;code&gt;CountVectorizer&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="000599c940f606b6105f7d1916791a94094aca12" translate="yes" xml:space="preserve">
          <source>Fast computation of nearest neighbors is an active area of research in machine learning. The most naive neighbor search implementation involves the brute-force computation of distances between all pairs of points in the dataset: for \(N\) samples in \(D\) dimensions, this approach scales as \(O[D N^2]\). Efficient brute-force neighbors searches can be very competitive for small data samples. However, as the number of samples \(N\) grows, the brute-force approach quickly becomes infeasible. In the classes within &lt;a href=&quot;classes#module-sklearn.neighbors&quot;&gt;&lt;code&gt;sklearn.neighbors&lt;/code&gt;&lt;/a&gt;, brute-force neighbors searches are specified using the keyword &lt;code&gt;algorithm = 'brute'&lt;/code&gt;, and are computed using the routines available in &lt;a href=&quot;classes#module-sklearn.metrics.pairwise&quot;&gt;&lt;code&gt;sklearn.metrics.pairwise&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">最近邻的快速计算是机器学习研究的活跃领域。最幼稚的邻居搜索实现涉及数据集中所有点对之间距离的蛮力计算：对于\（D \）维中的\（N \）个样本，此方法的缩放比例为\（O [DN ^ 2] \）。对于小数据样本而言，有效的蛮力邻居搜索可能非常有竞争力。但是，随着样本数量\（N \）的增加，强力方法很快变得不可行。在&lt;a href=&quot;classes#module-sklearn.neighbors&quot;&gt; &lt;code&gt;sklearn.neighbors&lt;/code&gt; &lt;/a&gt;内的类中，使用关键字 &lt;code&gt;algorithm = 'brute'&lt;/code&gt; 指定蛮力邻居搜索，并使用&lt;a href=&quot;classes#module-sklearn.metrics.pairwise&quot;&gt; &lt;code&gt;sklearn.metrics.pairwise&lt;/code&gt; 中&lt;/a&gt;可用的例程进行计算。</target>
        </trans-unit>
        <trans-unit id="2e91ff193b9320036698a113daf46d8118a44e7d" translate="yes" xml:space="preserve">
          <source>FastICA on 2D point clouds</source>
          <target state="translated">二维点云上的FastICA</target>
        </trans-unit>
        <trans-unit id="6921319b009c74978f9e5104f25e9063c7cf2c6b" translate="yes" xml:space="preserve">
          <source>FastICA: a fast algorithm for Independent Component Analysis.</source>
          <target state="translated">FastICA:独立成分分析的快速算法。</target>
        </trans-unit>
        <trans-unit id="6fa15d231f996464c9e743e456c3d6855ab0d8f6" translate="yes" xml:space="preserve">
          <source>Fawcett T. An introduction to ROC analysis[J]. Pattern Recognition Letters, 2006, 27(8):861-874.</source>
          <target state="translated">Fawcett T.An introduction to ROC analysis[J].Pattern Recognition Letters,2006,27(8):861-874.</target>
        </trans-unit>
        <trans-unit id="77834b29664ccb5e5cc9173718797e7ec674b1ed" translate="yes" xml:space="preserve">
          <source>Feature 0 (median income in a block) and feature 5 (number of households) of the &lt;a href=&quot;http://www.dcc.fc.up.pt/~ltorgo/Regression/cal_housing.html&quot;&gt;California housing dataset&lt;/a&gt; have very different scales and contain some very large outliers. These two characteristics lead to difficulties to visualize the data and, more importantly, they can degrade the predictive performance of many machine learning algorithms. Unscaled data can also slow down or even prevent the convergence of many gradient-based estimators.</source>
          <target state="translated">&lt;a href=&quot;http://www.dcc.fc.up.pt/~ltorgo/Regression/cal_housing.html&quot;&gt;加利福尼亚住房数据集的&lt;/a&gt;特征0（中位数收入）和特征5（家庭数）具有不同的尺度，并包含一些非常大的离群值。这两个特征导致难以可视化数据，更重要的是，它们会降低许多机器学习算法的预测性能。未缩放的数据也会减慢甚至阻止许多基于梯度的估计器的收敛。</target>
        </trans-unit>
        <trans-unit id="3290cbe981e79caf9ab6f89a8812507aa114a727" translate="yes" xml:space="preserve">
          <source>Feature agglomeration</source>
          <target state="translated">特征集聚</target>
        </trans-unit>
        <trans-unit id="81f8ec148b187c97182bf2c56b5ce15909bcbae4" translate="yes" xml:space="preserve">
          <source>Feature agglomeration vs. univariate selection</source>
          <target state="translated">特征集聚VS单变量选择</target>
        </trans-unit>
        <trans-unit id="49e1dcf68a4912e92e5e7f68710255b3ca05471e" translate="yes" xml:space="preserve">
          <source>Feature discretization</source>
          <target state="translated">特征离散化</target>
        </trans-unit>
        <trans-unit id="3c43171269f5f432d869bba89f82c3b54ca0debf" translate="yes" xml:space="preserve">
          <source>Feature extraction</source>
          <target state="translated">特征提取</target>
        </trans-unit>
        <trans-unit id="aedfee8f7e4b62695a0b89930709eed1e654b00f" translate="yes" xml:space="preserve">
          <source>Feature extraction is very different from &lt;a href=&quot;feature_selection#feature-selection&quot;&gt;Feature selection&lt;/a&gt;: the former consists in transforming arbitrary data, such as text or images, into numerical features usable for machine learning. The latter is a machine learning technique applied on these features.</source>
          <target state="translated">特征提取与&lt;a href=&quot;feature_selection#feature-selection&quot;&gt;特征选择&lt;/a&gt;有很大不同：特征选择包括将任意数据（例如文本或图像）转换为可用于机器学习的数字特征。后者是应用于这些功能的机器学习技术。</target>
        </trans-unit>
        <trans-unit id="4c3a870a4e311a31f848b5314c8f3949d8e31e78" translate="yes" xml:space="preserve">
          <source>Feature hashing can be employed in document classification, but unlike &lt;a href=&quot;generated/sklearn.feature_extraction.text.countvectorizer#sklearn.feature_extraction.text.CountVectorizer&quot;&gt;&lt;code&gt;text.CountVectorizer&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/sklearn.feature_extraction.featurehasher#sklearn.feature_extraction.FeatureHasher&quot;&gt;&lt;code&gt;FeatureHasher&lt;/code&gt;&lt;/a&gt; does not do word splitting or any other preprocessing except Unicode-to-UTF-8 encoding; see &lt;a href=&quot;#hashing-vectorizer&quot;&gt;Vectorizing a large text corpus with the hashing trick&lt;/a&gt;, below, for a combined tokenizer/hasher.</source>
          <target state="translated">可以在文档分类中使用特征哈希，但与&lt;a href=&quot;generated/sklearn.feature_extraction.text.countvectorizer#sklearn.feature_extraction.text.CountVectorizer&quot;&gt; &lt;code&gt;text.CountVectorizer&lt;/code&gt; &lt;/a&gt;不同，&lt;a href=&quot;generated/sklearn.feature_extraction.featurehasher#sklearn.feature_extraction.FeatureHasher&quot;&gt; &lt;code&gt;FeatureHasher&lt;/code&gt; &lt;/a&gt;不会进行字分割或除Unicode到UTF-8编码外的任何其他预处理；请参阅下面的&lt;a href=&quot;#hashing-vectorizer&quot;&gt;使用哈希技巧对大型文本语料库进行向量化&lt;/a&gt;，以获取组合的标记器/哈希器。</target>
        </trans-unit>
        <trans-unit id="7bb8776f4e73559816ad10cf154be669f7df47cf" translate="yes" xml:space="preserve">
          <source>Feature importances with forests of trees</source>
          <target state="translated">树木森林的特点</target>
        </trans-unit>
        <trans-unit id="561e2555a0c1659bb31a6148c1abe250489ca708" translate="yes" xml:space="preserve">
          <source>Feature mappings for the samples in X.</source>
          <target state="translated">X中样本的特征映射。</target>
        </trans-unit>
        <trans-unit id="b96ff43d78f2a1f5a4e1d891c2cc36e4c380c32b" translate="yes" xml:space="preserve">
          <source>Feature matrix, for use with estimators or further transformers.</source>
          <target state="translated">特征矩阵,用于估计器或进一步的变换器。</target>
        </trans-unit>
        <trans-unit id="66d052b121f901629f4ce88124bd7cb2635fe497" translate="yes" xml:space="preserve">
          <source>Feature matrix.</source>
          <target state="translated">特征矩阵。</target>
        </trans-unit>
        <trans-unit id="975d25794ea94f600d607356398714d33388d870" translate="yes" xml:space="preserve">
          <source>Feature names of type byte string are used as-is. Unicode strings are converted to UTF-8 first, but no Unicode normalization is done. Feature values must be (finite) numbers.</source>
          <target state="translated">字节串类型的特征名按原样使用。Unicode 字符串首先被转换为 UTF-8,但不进行 Unicode 归一化。特征值必须是(有限的)数字。</target>
        </trans-unit>
        <trans-unit id="9509bbe5f8817e2ca0562d6baac6f0ad1787e1d6" translate="yes" xml:space="preserve">
          <source>Feature ranking with recursive feature elimination and cross-validated selection of the best number of features.</source>
          <target state="translated">用递归特征消除和交叉验证选择最佳特征数进行特征排序。</target>
        </trans-unit>
        <trans-unit id="f706081a8ad25e74e9a88b9e19a48d5a46a52012" translate="yes" xml:space="preserve">
          <source>Feature ranking with recursive feature elimination.</source>
          <target state="translated">特征排序与递归特征消除。</target>
        </trans-unit>
        <trans-unit id="7f17a87c5de04e39e04129e9c0737edfeafaee92" translate="yes" xml:space="preserve">
          <source>Feature scaling through standardization (or Z-score normalization) can be an important preprocessing step for many machine learning algorithms. Standardization involves rescaling the features such that they have the properties of a standard normal distribution with a mean of zero and a standard deviation of one.</source>
          <target state="translated">通过标准化(或Z-score归一化)进行特征缩放可以成为许多机器学习算法的重要预处理步骤。标准化涉及到重新调整特征,使其具有标准正态分布的特性,其平均值为零,标准偏差为1。</target>
        </trans-unit>
        <trans-unit id="3ac99400fe4169f40a977ea7007419c98db61771" translate="yes" xml:space="preserve">
          <source>Feature scores between 0 and 1 for all values of the regularization parameter. The reference article suggests &lt;code&gt;scores_&lt;/code&gt; is the max of &lt;code&gt;all_scores_&lt;/code&gt;.</source>
          <target state="translated">对于正则化参数的所有值，特征得分在0和1之间。参考文章建议 &lt;code&gt;scores_&lt;/code&gt; 是最大 &lt;code&gt;all_scores_&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aa75d746547685bebfdc2a7e366361e478fa27f0" translate="yes" xml:space="preserve">
          <source>Feature scores between 0 and 1.</source>
          <target state="translated">特征得分在0到1之间。</target>
        </trans-unit>
        <trans-unit id="afb880f1a910829f871ab84d5509ba79bf00b111" translate="yes" xml:space="preserve">
          <source>Feature selection is usually used as a pre-processing step before doing the actual learning. The recommended way to do this in scikit-learn is to use a &lt;a href=&quot;generated/sklearn.pipeline.pipeline#sklearn.pipeline.Pipeline&quot;&gt;&lt;code&gt;sklearn.pipeline.Pipeline&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">在进行实际学习之前，通常将特征选择用作预处理步骤。推荐在scikit-learn中执行此操作的方法是使用&lt;a href=&quot;generated/sklearn.pipeline.pipeline#sklearn.pipeline.Pipeline&quot;&gt; &lt;code&gt;sklearn.pipeline.Pipeline&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="5a515063a6bfb2324e04a5cb7dd1fe0bf9c9b6c2" translate="yes" xml:space="preserve">
          <source>Feature selection mode.</source>
          <target state="translated">特征选择模式。</target>
        </trans-unit>
        <trans-unit id="c9b5854c848ad0aec62ba5b490b140e3c7a1bb7d" translate="yes" xml:space="preserve">
          <source>Feature selection using SelectFromModel and LassoCV</source>
          <target state="translated">使用SelectFromModel和LassoCV进行特征选择。</target>
        </trans-unit>
        <trans-unit id="d13bfd588897e09202c5ea9fa5c11da3f65c72ad" translate="yes" xml:space="preserve">
          <source>Feature selection with sparse data</source>
          <target state="translated">稀疏数据的特征选择</target>
        </trans-unit>
        <trans-unit id="8a9e4457b64c8313be96ab86a00a0aa32201d58b" translate="yes" xml:space="preserve">
          <source>Feature selector that removes all low-variance features.</source>
          <target state="translated">去除所有低方差特征的特征选择器。</target>
        </trans-unit>
        <trans-unit id="e1b0ac4f2f2d7f5b2a31bb18d47b68f8979e7db4" translate="yes" xml:space="preserve">
          <source>Feature transformations with ensembles of trees</source>
          <target state="translated">树群的特征变换</target>
        </trans-unit>
        <trans-unit id="9a6ded29908e935164e678c6c6abd840802b0c72" translate="yes" xml:space="preserve">
          <source>Feature values below or equal to this are replaced by 0, above it by 1. Threshold may not be less than 0 for operations on sparse matrices.</source>
          <target state="translated">特征值低于或等于此值的用0代替,高于此值的用1代替,对稀疏矩阵的操作,阈值不得小于0。</target>
        </trans-unit>
        <trans-unit id="0bf4742e81f7f65623aaef302013934b401b3eb5" translate="yes" xml:space="preserve">
          <source>Feature values in training data (also required for prediction)</source>
          <target state="translated">训练数据中的特征值(也是预测所需)</target>
        </trans-unit>
        <trans-unit id="b7599b9ef6a2c582b4507f1b87929e181ce07276" translate="yes" xml:space="preserve">
          <source>Feature vectors; always 2-d.</source>
          <target state="translated">特征向量;总是二维的。</target>
        </trans-unit>
        <trans-unit id="8425332e36244b1448079ae72c3edeebff1ff3df" translate="yes" xml:space="preserve">
          <source>Feature-wise means</source>
          <target state="translated">从功能上看是指</target>
        </trans-unit>
        <trans-unit id="4dfce3abcd43918524b8cd8b96300d3efd01d1fb" translate="yes" xml:space="preserve">
          <source>Feature-wise transformation of the data.</source>
          <target state="translated">对数据进行特征化改造。</target>
        </trans-unit>
        <trans-unit id="5ce13d491431cc736ca395a68aa77c25024d518b" translate="yes" xml:space="preserve">
          <source>Feature-wise variances</source>
          <target state="translated">特征差异</target>
        </trans-unit>
        <trans-unit id="8c7ad0b456fa9bf3ae09e270340fb831f15c3f18" translate="yes" xml:space="preserve">
          <source>FeatureHasher and DictVectorizer Comparison</source>
          <target state="translated">FeatureHasher和DictVectorizer比较</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">Features</target>
        </trans-unit>
        <trans-unit id="7b144c2dee4c701c6fc61ec2c427f38a9b6c6529" translate="yes" xml:space="preserve">
          <source>Features 1 and 2 of the diabetes-dataset are fitted and plotted below. It illustrates that although feature 2 has a strong coefficient on the full model, it does not give us much regarding &lt;code&gt;y&lt;/code&gt; when compared to just feature 1</source>
          <target state="translated">拟合并绘制了糖尿病数据集的特征1和2。它说明了虽然特征2在完整模型上具有很强的系数，但是与仅特征1相比，它对 &lt;code&gt;y&lt;/code&gt; 的作用不大</target>
        </trans-unit>
        <trans-unit id="27bf161ea6af475b73d710eebe7f66e368f22dbd" translate="yes" xml:space="preserve">
          <source>Features are computed from a digitized image of a fine needle aspirate (FNA) of a breast mass. They describe characteristics of the cell nuclei present in the image.</source>
          <target state="translated">特征是从乳腺肿块的细针抽吸(FNA)数字化图像中计算出来的。它们描述了图像中存在的细胞核的特征。</target>
        </trans-unit>
        <trans-unit id="7dc73780307913b147af45ec74f5c7491dc77d15" translate="yes" xml:space="preserve">
          <source>Features got by optimizing the Huber loss.</source>
          <target state="translated">通过优化Huber损失得到的功能。</target>
        </trans-unit>
        <trans-unit id="285c7b098890786c959265d1fe4e4933df08392b" translate="yes" xml:space="preserve">
          <source>Features that do not occur in a sample (mapping) will have a zero value in the resulting array/matrix.</source>
          <target state="translated">在样本(映射)中没有出现的特征,在结果的数组/矩阵中会有一个零值。</target>
        </trans-unit>
        <trans-unit id="71724a67f7aa53e34d06b737e24512de12116bad" translate="yes" xml:space="preserve">
          <source>Features with a training-set variance lower than this threshold will be removed. The default is to keep all features with non-zero variance, i.e. remove the features that have the same value in all samples.</source>
          <target state="translated">训练集方差低于这个阈值的特征将被删除。默认情况是保留所有方差不为零的特征,即删除所有样本中数值相同的特征。</target>
        </trans-unit>
        <trans-unit id="7609c48291c2fa7cc57f1dc4a85a3683c0749b4f" translate="yes" xml:space="preserve">
          <source>Fetch an mldata.org data set</source>
          <target state="translated">获取一个mldata.org数据集。</target>
        </trans-unit>
        <trans-unit id="2b29d907c2ea7e85ef894ade96f5a9788aa198c9" translate="yes" xml:space="preserve">
          <source>Fetch dataset from openml by name or dataset id.</source>
          <target state="translated">通过名称或数据集id从openml中获取数据集。</target>
        </trans-unit>
        <trans-unit id="76c8d1e0086c4e650fc514d650a93664c1ba4aa6" translate="yes" xml:space="preserve">
          <source>Fevotte, C., &amp;amp; Idier, J. (2011). Algorithms for nonnegative matrix factorization with the beta-divergence. Neural Computation, 23(9).</source>
          <target state="translated">Fevotte，C.和Idier，J.（2011）。&amp;beta;散度的非负矩阵分解算法。神经计算，23（9）。</target>
        </trans-unit>
        <trans-unit id="07da69c9120fa48d1a8831ddfdb2e22d5f38a14c" translate="yes" xml:space="preserve">
          <source>Few clusters, even cluster size, non-flat geometry</source>
          <target state="translated">簇数少,甚至簇数少,非平面几何形状。</target>
        </trans-unit>
        <trans-unit id="ba82bf0fe9bdb74f2de9056ff08a208a0201f2e5" translate="yes" xml:space="preserve">
          <source>Field &lt;code&gt;support_vectors_&lt;/code&gt; is now empty, only indices of support vectors are stored in &lt;code&gt;support_&lt;/code&gt;</source>
          <target state="translated">字段 &lt;code&gt;support_vectors_&lt;/code&gt; 现在为空，仅支持向量的索引存储在 &lt;code&gt;support_&lt;/code&gt; 中</target>
        </trans-unit>
        <trans-unit id="63c41242bc3de30c7fa64bf90cc3aa34e5d08243" translate="yes" xml:space="preserve">
          <source>Filter: Select the p-values corresponding to Family-wise error rate</source>
          <target state="translated">滤波器。选择与家族误差率相对应的p值。</target>
        </trans-unit>
        <trans-unit id="d601967c960c718fae8a27ae10382e904525e519" translate="yes" xml:space="preserve">
          <source>Filter: Select the p-values for an estimated false discovery rate</source>
          <target state="translated">过滤器。选择估计错误发现率的p值。</target>
        </trans-unit>
        <trans-unit id="f9d7c51c4e21ffa778934e88c4ada6f78e753e59" translate="yes" xml:space="preserve">
          <source>Filter: Select the pvalues below alpha based on a FPR test.</source>
          <target state="translated">筛选。根据FPR测试选择低于alpha的p值。</target>
        </trans-unit>
        <trans-unit id="e832a73dedeb0259ac793f9ac425f8e8ee172602" translate="yes" xml:space="preserve">
          <source>Finally it is possible to discover the main topics of a corpus by relaxing the hard assignment constraint of clustering, for instance by using &lt;a href=&quot;decomposition#nmf&quot;&gt;Non-negative matrix factorization (NMF or NNMF)&lt;/a&gt;:</source>
          <target state="translated">最后，可以通过放宽聚类的硬分配约束，例如通过使用&lt;a href=&quot;decomposition#nmf&quot;&gt;非负矩阵分解（NMF或NNMF）&lt;/a&gt;来发现语料库的主要主题：</target>
        </trans-unit>
        <trans-unit id="3879f3b348e8db024fb12750b7a6d38d6bbf41c3" translate="yes" xml:space="preserve">
          <source>Finally one can also observe that for some intermediate values of &lt;code&gt;gamma&lt;/code&gt; we get equally performing models when &lt;code&gt;C&lt;/code&gt; becomes very large: it is not necessary to regularize by enforcing a larger margin. The radius of the RBF kernel alone acts as a good structural regularizer. In practice though it might still be interesting to simplify the decision function with a lower value of &lt;code&gt;C&lt;/code&gt; so as to favor models that use less memory and that are faster to predict.</source>
          <target state="translated">最后，我们还可以观察到，对于某些中间值的 &lt;code&gt;gamma&lt;/code&gt; 当 &lt;code&gt;C&lt;/code&gt; 变得非常大时，我们得到的模型性能均相同：不必通过强制执行更大的余量来进行正则化。 RBF内核的半径本身就可以充当良好的结构调整器。实际上，用较低的 &lt;code&gt;C&lt;/code&gt; 值简化决策函数以支持使用较少内存且预测速度更快的模型可能仍然很有趣。</target>
        </trans-unit>
        <trans-unit id="968616cc558da3fce60b0fa70563b382cf880868" translate="yes" xml:space="preserve">
          <source>Finally, &lt;a href=&quot;#dummy-estimators&quot;&gt;Dummy estimators&lt;/a&gt; are useful to get a baseline value of those metrics for random predictions.</source>
          <target state="translated">最后，&lt;a href=&quot;#dummy-estimators&quot;&gt;虚拟估计器&lt;/a&gt;对于获取这些度量的基准值以进行随机预测很有用。</target>
        </trans-unit>
        <trans-unit id="8f153367033a26a7113472eddd66aa5516b2f784" translate="yes" xml:space="preserve">
          <source>Finally, for 3. we have a number of options inside scikit-learn. Although not all algorithms can learn incrementally (i.e. without seeing all the instances at once), all estimators implementing the &lt;code&gt;partial_fit&lt;/code&gt; API are candidates. Actually, the ability to learn incrementally from a mini-batch of instances (sometimes called &amp;ldquo;online learning&amp;rdquo;) is key to out-of-core learning as it guarantees that at any given time there will be only a small amount of instances in the main memory. Choosing a good size for the mini-batch that balances relevancy and memory footprint could involve some tuning &lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;.</source>
          <target state="translated">最后，对于3.，我们在scikit-learn中有许多选项。尽管并非所有算法都可以增量学习（即，不能一次看到所有实例），但是所有实现 &lt;code&gt;partial_fit&lt;/code&gt; API的估计器都是候选者。实际上，从一小批实例进行增量学习的能力（有时称为&amp;ldquo;在线学习&amp;rdquo;）是核心学习的关键，因为它可以确保在任何给定的时间中仅存在少量实例。主内存。为平衡相关性和内存占用的微型批处理选择一个合适的大小可能需要一些调整&lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="02251ecbb666e2a1b9f431635bb03c5b54eb0a09" translate="yes" xml:space="preserve">
          <source>Finally, for the last data set, it is hard to say that one sample is more abnormal than another sample as they are uniformly distributed in a hypercube. Except for the &lt;code&gt;svm.OneClassSVM&lt;/code&gt; which overfits a little, all estimators present decent solutions for this situation. In such a case, it would be wise to look more closely at the scores of abnormality of the samples as a good estimator should assign similar scores to all the samples.</source>
          <target state="translated">最后，对于最后一个数据集，很难说一个样本比另一个样本异常得多，因为它们均匀分布在超立方体中。除了svm.OneClassSVM有点过 &lt;code&gt;svm.OneClassSVM&lt;/code&gt; 之外，所有估计器都针对这种情况提供了不错的解决方案。在这种情况下，明智的做法是仔细观察样本的异常分数，因为好的估算者应该为所有样本分配相似的分数。</target>
        </trans-unit>
        <trans-unit id="ced44a1e1c24bc2a905bacd41c580fdb8b398c7b" translate="yes" xml:space="preserve">
          <source>Finally, if the centered data is expected to be small enough, explicitly converting the input to an array using the &lt;code&gt;toarray&lt;/code&gt; method of sparse matrices is another option.</source>
          <target state="translated">最后，如果期望居中的数据足够小，则使用稀疏矩阵的 &lt;code&gt;toarray&lt;/code&gt; 方法将输入显式转换为数组是另一种选择。</target>
        </trans-unit>
        <trans-unit id="9b957bcce911d726f82907b30c1a02070fcadf91" translate="yes" xml:space="preserve">
          <source>Finally, note that parameters of the models have been here handpicked but that in practice they need to be adjusted. In the absence of labelled data, the problem is completely unsupervised so model selection can be a challenge.</source>
          <target state="translated">最后要注意的是,这里的模型的参数是经过精心挑选的,但在实际操作中需要调整。在没有标注数据的情况下,这个问题是完全无监督的,所以模型的选择是一个挑战。</target>
        </trans-unit>
        <trans-unit id="5d0d4410d99fc712aa6cde836179153d36f8849c" translate="yes" xml:space="preserve">
          <source>Finally, the preprocessing pipeline is integrated in a full prediction pipeline using &lt;a href=&quot;../../modules/generated/sklearn.pipeline.pipeline#sklearn.pipeline.Pipeline&quot;&gt;&lt;code&gt;sklearn.pipeline.Pipeline&lt;/code&gt;&lt;/a&gt;, together with a simple classification model.</source>
          <target state="translated">最后，使用&lt;a href=&quot;../../modules/generated/sklearn.pipeline.pipeline#sklearn.pipeline.Pipeline&quot;&gt; &lt;code&gt;sklearn.pipeline.Pipeline&lt;/code&gt; &lt;/a&gt;和简单的分类模型将预处理管道集成到完整的预测管道中。</target>
        </trans-unit>
        <trans-unit id="88dd3e3888504f660d94f91abf7147882c40ab2a" translate="yes" xml:space="preserve">
          <source>Finally, this module also features the parallel construction of the trees and the parallel computation of the predictions through the &lt;code&gt;n_jobs&lt;/code&gt; parameter. If &lt;code&gt;n_jobs=k&lt;/code&gt; then computations are partitioned into &lt;code&gt;k&lt;/code&gt; jobs, and run on &lt;code&gt;k&lt;/code&gt; cores of the machine. If &lt;code&gt;n_jobs=-1&lt;/code&gt; then all cores available on the machine are used. Note that because of inter-process communication overhead, the speedup might not be linear (i.e., using &lt;code&gt;k&lt;/code&gt; jobs will unfortunately not be &lt;code&gt;k&lt;/code&gt; times as fast). Significant speedup can still be achieved though when building a large number of trees, or when building a single tree requires a fair amount of time (e.g., on large datasets).</source>
          <target state="translated">最后，该模块还具有树的并行构造和通过 &lt;code&gt;n_jobs&lt;/code&gt; 参数的预测并行计算的功能。如果 &lt;code&gt;n_jobs=k&lt;/code&gt; ,则将计算划分为 &lt;code&gt;k&lt;/code&gt; 个作业，并在计算机的 &lt;code&gt;k&lt;/code&gt; 个内核上运行。如果 &lt;code&gt;n_jobs=-1&lt;/code&gt; ,则使用计算机上所有可用的内核。请注意，由于进程间的通信开销，加速可能不是线性的（即，不幸的是，使用 &lt;code&gt;k&lt;/code&gt; 个作业将不会是 &lt;code&gt;k&lt;/code&gt; 倍的速度）。尽管构建大量树或构建一棵树需要相当长的时间（例如，在大型数据集上），仍然可以实现显着的加速。</target>
        </trans-unit>
        <trans-unit id="f50b898f991b3ec8dadce88abad6749cb3fd8140" translate="yes" xml:space="preserve">
          <source>Finally, we have a full-fledged example of &lt;a href=&quot;../auto_examples/applications/plot_out_of_core_classification#sphx-glr-auto-examples-applications-plot-out-of-core-classification-py&quot;&gt;Out-of-core classification of text documents&lt;/a&gt;. It is aimed at providing a starting point for people wanting to build out-of-core learning systems and demonstrates most of the notions discussed above.</source>
          <target state="translated">最后，我们有一个完整&lt;a href=&quot;../auto_examples/applications/plot_out_of_core_classification#sphx-glr-auto-examples-applications-plot-out-of-core-classification-py&quot;&gt;的文本文档核心分类&lt;/a&gt;示例。它旨在为希望构建核心学习系统的人们提供一个起点，并演示了上面讨论的大多数概念。</target>
        </trans-unit>
        <trans-unit id="a40631d3e46670650e2553ca58294d12cd46b8ee" translate="yes" xml:space="preserve">
          <source>Finally, when base estimators are built on subsets of both samples and features, then the method is known as Random Patches &lt;a href=&quot;#lg2012&quot; id=&quot;id4&quot;&gt;[LG2012]&lt;/a&gt;.</source>
          <target state="translated">最后，当基于样本和特征的子集建立基本估计量时，该方法称为随机补丁&lt;a href=&quot;#lg2012&quot; id=&quot;id4&quot;&gt;[LG2012]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7185a548932a7d63b1a08d591559f9d8821b9404" translate="yes" xml:space="preserve">
          <source>Find a &amp;lsquo;safe&amp;rsquo; number of components to randomly project to</source>
          <target state="translated">查找&amp;ldquo;安全&amp;rdquo;数量的组件以随机投影到</target>
        </trans-unit>
        <trans-unit id="e40e118fb652d4dd06f307746b620728b2345e85" translate="yes" xml:space="preserve">
          <source>Find a good set of parameters using grid search.</source>
          <target state="translated">利用网格搜索找到一组好的参数。</target>
        </trans-unit>
        <trans-unit id="2ff57da6a2f73ea1d0dfc969be6516b83c61b137" translate="yes" xml:space="preserve">
          <source>Find out what the actual encoding of the text is. The file might come with a header or README that tells you the encoding, or there might be some standard encoding you can assume based on where the text comes from.</source>
          <target state="translated">找出文本的实际编码是什么。文件可能带有一个头或README,告诉你编码,或者可能有一些标准编码,你可以根据文本的来源来假设。</target>
        </trans-unit>
        <trans-unit id="c317277c718283dc0dcc7baf2d812226e24cc453" translate="yes" xml:space="preserve">
          <source>Find the minimum value of an array over positive values</source>
          <target state="translated">求一个数组在正值上的最小值。</target>
        </trans-unit>
        <trans-unit id="d95b4144f33d10b131b37a33f2e7ad7cc55860b7" translate="yes" xml:space="preserve">
          <source>Find the optimal separating hyperplane using an SVC for classes that are unbalanced.</source>
          <target state="translated">对于不平衡的类,使用SVC寻找最优分离超平面。</target>
        </trans-unit>
        <trans-unit id="1c17584736b51c43c88ae3dfa46ea2817cd1a339" translate="yes" xml:space="preserve">
          <source>Find two non-negative matrices (W, H) whose product approximates the non- negative matrix X. This factorization can be used for example for dimensionality reduction, source separation or topic extraction.</source>
          <target state="translated">找出两个非负矩阵(W,H),其乘积近似于非负矩阵X。这种因式化可用于维度减少、源分离或主题提取等。</target>
        </trans-unit>
        <trans-unit id="4daca12ed4dca9ca21325e05dde77793902b89f7" translate="yes" xml:space="preserve">
          <source>Finding a reasonable regularization parameter \(\alpha\) is best done using &lt;code&gt;GridSearchCV&lt;/code&gt;, usually in the range &lt;code&gt;10.0 ** -np.arange(1, 7)&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;GridSearchCV&lt;/code&gt; 最好找到合理的正则化参数\（\ alpha \），通常在 &lt;code&gt;10.0 ** -np.arange(1, 7)&lt;/code&gt; 范围内。</target>
        </trans-unit>
        <trans-unit id="d0410c73baea9b092d4edb9802ae4c10c09f4696" translate="yes" xml:space="preserve">
          <source>Finding a reasonable regularization term \(\alpha\) is best done using &lt;code&gt;GridSearchCV&lt;/code&gt;, usually in the range &lt;code&gt;10.0**-np.arange(1,7)&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;GridSearchCV&lt;/code&gt; 最好找到合理的正则化项\（\ alpha \），通常在 &lt;code&gt;10.0**-np.arange(1,7)&lt;/code&gt; 范围内。</target>
        </trans-unit>
        <trans-unit id="3c5a640c918941c9e6a6ecbfe984c3f4bfbed0d7" translate="yes" xml:space="preserve">
          <source>Finding help</source>
          <target state="translated">寻找帮助</target>
        </trans-unit>
        <trans-unit id="71cc727880d53ab3c238ec955595a0ded28610b7" translate="yes" xml:space="preserve">
          <source>Finding structure with randomness: Stochastic algorithms for constructing approximate matrix decompositions Halko, et al., 2009 (arXiv:909) http://arxiv.org/pdf/0909.4061</source>
          <target state="translated">寻找随机性的结构。用于构建近似矩阵分解的随机算法 Halko等人,2009年(arXiv:909)http://arxiv.org/pdf/0909.4061</target>
        </trans-unit>
        <trans-unit id="50ccb6d4c8a3bfa0951293912c0c5132106a8c89" translate="yes" xml:space="preserve">
          <source>Finding structure with randomness: Stochastic algorithms for constructing approximate matrix decompositions Halko, et al., 2009 &lt;a href=&quot;http://arxiv.org/abs/arXiv:0909.4061&quot;&gt;http://arxiv.org/abs/arXiv:0909.4061&lt;/a&gt;</source>
          <target state="translated">寻找具有随机性的结构：用于构造近似矩阵分解的随机算法Halko等，2009年&lt;a href=&quot;http://arxiv.org/abs/arXiv:0909.4061&quot;&gt;http://arxiv.org/abs/arXiv:0909.4061&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="26becafaa69af10fe9097be8fd6bf298839f5095" translate="yes" xml:space="preserve">
          <source>Finds a dictionary (a set of atoms) that can best be used to represent data using a sparse code.</source>
          <target state="translated">找到一个字典(一组原子),可以最好地使用稀疏代码来表示数据。</target>
        </trans-unit>
        <trans-unit id="bdd5a22a4b66cac66c670f6f1297e40cb6d2aae2" translate="yes" xml:space="preserve">
          <source>Finds a sparse representation of data against a fixed, precomputed dictionary.</source>
          <target state="translated">对照一个固定的、预先计算的字典,找到数据的稀疏表示。</target>
        </trans-unit>
        <trans-unit id="a5dbd88babc750758342dfe447e24f6c260c3097" translate="yes" xml:space="preserve">
          <source>Finds core samples of high density and expands clusters from them.</source>
          <target state="translated">找到高密度的核心样本,并从中扩展出集群。</target>
        </trans-unit>
        <trans-unit id="a0ac333cc4bd6a4e85a5691bb991f9cd4f114c12" translate="yes" xml:space="preserve">
          <source>Finds the K-neighbors of a point.</source>
          <target state="translated">找到一个点的K邻点。</target>
        </trans-unit>
        <trans-unit id="e7def6740e556221f1aa42003fab4e2365f3483e" translate="yes" xml:space="preserve">
          <source>Finds the K-neighbors of a point. Returns indices of and distances to the neighbors of each point.</source>
          <target state="translated">查找一个点的K-邻居。返回每个点的邻域指数和距离。</target>
        </trans-unit>
        <trans-unit id="011362db8e96e3edcb95f8fcdf5f1e0d92d5e3e2" translate="yes" xml:space="preserve">
          <source>Finds the best dictionary and the corresponding sparse code for approximating the data matrix X by solving:</source>
          <target state="translated">通过求解数据矩阵X的近似,找出最佳字典和相应的稀疏代码。</target>
        </trans-unit>
        <trans-unit id="b6f70d43205a979d509f018cfbe88e93d812b3ec" translate="yes" xml:space="preserve">
          <source>Finds the neighbors within a given radius of a point or points.</source>
          <target state="translated">在给定半径内找到一个或多个点的邻居。</target>
        </trans-unit>
        <trans-unit id="dd8ddfd214a6d88017dd4006d52b1774d72e0be7" translate="yes" xml:space="preserve">
          <source>Finds the set of sparse components that can optimally reconstruct the data. The amount of sparseness is controllable by the coefficient of the L1 penalty, given by the parameter alpha.</source>
          <target state="translated">找到能够最佳重建数据的稀疏成分集。稀疏度的大小由L1惩罚的系数控制,由参数alpha给出。</target>
        </trans-unit>
        <trans-unit id="9ce397e0f2c9f33bd1911b665e99384e26321100" translate="yes" xml:space="preserve">
          <source>Finite Gaussian mixture fit with EM.</source>
          <target state="translated">用EM进行有限高斯混合物拟合。</target>
        </trans-unit>
        <trans-unit id="fd9ae1ff1bfcac14b05b92d277d3f6074f078a31" translate="yes" xml:space="preserve">
          <source>First 10 columns are numeric predictive values</source>
          <target state="translated">前10列是数字预测值</target>
        </trans-unit>
        <trans-unit id="30250bc7520fcdac140dbcf0c3820bc484ca88d7" translate="yes" xml:space="preserve">
          <source>First example</source>
          <target state="translated">第一个例子</target>
        </trans-unit>
        <trans-unit id="7874170ffefbed5d0d1c4372827ea2aeb194c3ba" translate="yes" xml:space="preserve">
          <source>First fit an ensemble of trees (totally random trees, a random forest, or gradient boosted trees) on the training set. Then each leaf of each tree in the ensemble is assigned a fixed arbitrary feature index in a new feature space. These leaf indices are then encoded in a one-hot fashion.</source>
          <target state="translated">首先在训练集上拟合一个树的合集(完全随机树、随机森林或梯度提升树)。然后在新的特征空间中,给合集中每棵树的每片叶子分配一个固定的任意特征指数。然后将这些叶子指数以一热的方式进行编码。</target>
        </trans-unit>
        <trans-unit id="16a8cd51addf2278ba02a88d4c3026fabfe281d9" translate="yes" xml:space="preserve">
          <source>First, three examplary classifiers are initialized (&lt;code&gt;LogisticRegression&lt;/code&gt;, &lt;code&gt;GaussianNB&lt;/code&gt;, and &lt;code&gt;RandomForestClassifier&lt;/code&gt;) and used to initialize a soft-voting &lt;code&gt;VotingClassifier&lt;/code&gt; with weights &lt;code&gt;[1, 1, 5]&lt;/code&gt;, which means that the predicted probabilities of the &lt;code&gt;RandomForestClassifier&lt;/code&gt; count 5 times as much as the weights of the other classifiers when the averaged probability is calculated.</source>
          <target state="translated">首先，将初始化三个示例分类器（ &lt;code&gt;LogisticRegression&lt;/code&gt; ， &lt;code&gt;GaussianNB&lt;/code&gt; 和 &lt;code&gt;RandomForestClassifier&lt;/code&gt; ），并使用权重 &lt;code&gt;[1, 1, 5]&lt;/code&gt; &lt;code&gt;VotingClassifier&lt;/code&gt; ]初始化软投票VotingClassifier，这意味着 &lt;code&gt;RandomForestClassifier&lt;/code&gt; 的预测概率计算为权重的 5倍。计算平均概率时其他分类器的权重。</target>
        </trans-unit>
        <trans-unit id="1ea180eeb1f820255090eaa2e746ff697919b622" translate="yes" xml:space="preserve">
          <source>First, three exemplary classifiers are initialized (&lt;code&gt;DecisionTreeClassifier&lt;/code&gt;, &lt;code&gt;KNeighborsClassifier&lt;/code&gt;, and &lt;code&gt;SVC&lt;/code&gt;) and used to initialize a soft-voting &lt;code&gt;VotingClassifier&lt;/code&gt; with weights &lt;code&gt;[2, 1, 2]&lt;/code&gt;, which means that the predicted probabilities of the &lt;code&gt;DecisionTreeClassifier&lt;/code&gt; and &lt;code&gt;SVC&lt;/code&gt; count 5 times as much as the weights of the &lt;code&gt;KNeighborsClassifier&lt;/code&gt; classifier when the averaged probability is calculated.</source>
          <target state="translated">首先，初始化三个示例性分类器（ &lt;code&gt;DecisionTreeClassifier&lt;/code&gt; ， &lt;code&gt;KNeighborsClassifier&lt;/code&gt; 和 &lt;code&gt;SVC&lt;/code&gt; ）并用于初始化权重为 &lt;code&gt;[2, 1, 2]&lt;/code&gt; &lt;code&gt;VotingClassifier&lt;/code&gt; ]的软投票VotingClassifier，这意味着 &lt;code&gt;DecisionTreeClassifier&lt;/code&gt; 和 &lt;code&gt;SVC&lt;/code&gt; 的预测概率计数为5倍作为计算平均概率时的 &lt;code&gt;KNeighborsClassifier&lt;/code&gt; 分类器的权重。</target>
        </trans-unit>
        <trans-unit id="9d07cc681f72e7314cfb570248652c85d831875b" translate="yes" xml:space="preserve">
          <source>First, we must understand the structure of our data. It has 100 randomly generated input datapoints, 3 classes split unevenly across datapoints, and 10 &amp;ldquo;groups&amp;rdquo; split evenly across datapoints.</source>
          <target state="translated">首先，我们必须了解数据的结构。它具有100个随机生成的输入数据点，3个类在数据点之间不均匀地划分以及10个&amp;ldquo;组&amp;rdquo;在数据点之间均匀地划分。</target>
        </trans-unit>
        <trans-unit id="b01058ecfb06b2978590da1239a0a81618b1465b" translate="yes" xml:space="preserve">
          <source>Fisher transformation. Wikipedia. &lt;a href=&quot;https://en.wikipedia.org/wiki/Fisher_transformation&quot;&gt;https://en.wikipedia.org/wiki/Fisher_transformation&lt;/a&gt;</source>
          <target state="translated">费舍尔变换。维基百科。&lt;a href=&quot;https://en.wikipedia.org/wiki/Fisher_transformation&quot;&gt;https://zh.wikipedia.org/wiki/Fisher_transformation&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="75ec02df98bcfaf21ee3dd0abe872b47c664ba1c" translate="yes" xml:space="preserve">
          <source>Fisher, R.A. &amp;ldquo;The use of multiple measurements in taxonomic problems&amp;rdquo; Annual Eugenics, 7, Part II, 179-188 (1936); also in &amp;ldquo;Contributions to Mathematical Statistics&amp;rdquo; (John Wiley, NY, 1950).</source>
          <target state="translated">费舍尔，RA，&amp;ldquo;在分类学问题中使用多项测量&amp;rdquo;，《年度优生学》，第7部分，第179-188页，1936年；同样在&amp;ldquo;对数学统计的贡献&amp;rdquo;中（约翰&amp;middot;威利，纽约，1950年）。</target>
        </trans-unit>
        <trans-unit id="4d49737491d2fdff73fcfce78bfa3496db9aead4" translate="yes" xml:space="preserve">
          <source>Fit Gaussian Naive Bayes according to X, y</source>
          <target state="translated">根据X、y拟合高斯奈夫贝叶斯。</target>
        </trans-unit>
        <trans-unit id="5697d81dd45cef7c7ddb8bf2ab425085bcc0125d" translate="yes" xml:space="preserve">
          <source>Fit Gaussian process classification model</source>
          <target state="translated">拟合高斯过程分类模型</target>
        </trans-unit>
        <trans-unit id="87cac59f89b2fa13ce5de11220e3eeec4bd8c5cf" translate="yes" xml:space="preserve">
          <source>Fit Gaussian process regression model.</source>
          <target state="translated">拟合高斯过程回归模型。</target>
        </trans-unit>
        <trans-unit id="8eb1d823143ba03b3eb9b823b5dab8b0cf44511a" translate="yes" xml:space="preserve">
          <source>Fit Kernel Ridge regression model</source>
          <target state="translated">拟合Kernel Ridge回归模型</target>
        </trans-unit>
        <trans-unit id="62df27bb0a01d202786ab5c8f2652f91558551a4" translate="yes" xml:space="preserve">
          <source>Fit KernelCenterer</source>
          <target state="translated">Fit KernelCenter</target>
        </trans-unit>
        <trans-unit id="f97a5239f74bba940e2a0890df2d8120afcfa03c" translate="yes" xml:space="preserve">
          <source>Fit LSI model on training data X.</source>
          <target state="translated">在训练数据X上拟合LSI模型。</target>
        </trans-unit>
        <trans-unit id="c2f5d79cd7108f6536b92a8ab72454a376b81e9e" translate="yes" xml:space="preserve">
          <source>Fit LSI model to X and perform dimensionality reduction on X.</source>
          <target state="translated">将LSI模型拟合到X上,并对X进行降维。</target>
        </trans-unit>
        <trans-unit id="f79f31a7bd81775029053b8e229553093e280715" translate="yes" xml:space="preserve">
          <source>Fit LinearDiscriminantAnalysis model according to the given</source>
          <target state="translated">根据给定的LinearDiscriminantAnalysis模型拟合。</target>
        </trans-unit>
        <trans-unit id="5a914df7976c81fad1a03ac324a4632a19d9e602" translate="yes" xml:space="preserve">
          <source>Fit LinearDiscriminantAnalysis model according to the given training data and parameters.</source>
          <target state="translated">根据给定的训练数据和参数拟合LinearDiscriminantAnalysis模型。</target>
        </trans-unit>
        <trans-unit id="cb91a62a58b24a52b6e32fdd160e489a55cfbac1" translate="yes" xml:space="preserve">
          <source>Fit MultiTaskElasticNet model with coordinate descent</source>
          <target state="translated">用坐标下降法拟合MultiTaskElasticNet模型。</target>
        </trans-unit>
        <trans-unit id="07e793af99a651a8f0a47822a080e4cf194bac9b" translate="yes" xml:space="preserve">
          <source>Fit Naive Bayes classifier according to X, y</source>
          <target state="translated">根据X,y,拟合Naive Bayes分类器</target>
        </trans-unit>
        <trans-unit id="afc10844f54e485a835b4e52b36e0ebefe70c8de" translate="yes" xml:space="preserve">
          <source>Fit OneHotEncoder to X, then transform X.</source>
          <target state="translated">将OneHotEncoder适配到X上,然后对X进行变换。</target>
        </trans-unit>
        <trans-unit id="6cbc8c577214883d5f9bdf864d2a7d76e95b5a74" translate="yes" xml:space="preserve">
          <source>Fit OneHotEncoder to X.</source>
          <target state="translated">将OneHotEncoder装入X。</target>
        </trans-unit>
        <trans-unit id="7a3e15c6e4bf063bec4aa435d4748fb868286ed7" translate="yes" xml:space="preserve">
          <source>Fit Ridge and HuberRegressor on a dataset with outliers.</source>
          <target state="translated">在有离群值的数据集上拟合Ridge和HuberRegressor。</target>
        </trans-unit>
        <trans-unit id="8f8e3b0b4710ae51d90dcd69d91e33d123946d3a" translate="yes" xml:space="preserve">
          <source>Fit Ridge regression model</source>
          <target state="translated">拟合岭回归模型</target>
        </trans-unit>
        <trans-unit id="2e3e7ebdde04653523f01d0d804ccc0c533f3460" translate="yes" xml:space="preserve">
          <source>Fit Ridge regression model.</source>
          <target state="translated">拟合岭回归模型。</target>
        </trans-unit>
        <trans-unit id="74fbf563cb041ef637760be7f01def498fc1300e" translate="yes" xml:space="preserve">
          <source>Fit X into an embedded space and return that transformed output.</source>
          <target state="translated">将X拟合到一个嵌入式空间中,并返回该转换后的输出。</target>
        </trans-unit>
        <trans-unit id="97ca0bc1677dbeaefd600411062ca557eacc6754" translate="yes" xml:space="preserve">
          <source>Fit X into an embedded space.</source>
          <target state="translated">将X装入嵌入式空间。</target>
        </trans-unit>
        <trans-unit id="9b21c283121f9ec299302b1b3016dbcdb3391466" translate="yes" xml:space="preserve">
          <source>Fit a Bayesian ridge model and optimize the regularization parameters lambda (precision of the weights) and alpha (precision of the noise).</source>
          <target state="translated">拟合贝叶斯脊模型,优化正则化参数lambda(权重的精度)和alpha(噪声的精度)。</target>
        </trans-unit>
        <trans-unit id="8bec80135f416f6c22f260fc3b1ac04b4cff59ba" translate="yes" xml:space="preserve">
          <source>Fit a model to the random subset (&lt;code&gt;base_estimator.fit&lt;/code&gt;) and check whether the estimated model is valid (see &lt;code&gt;is_model_valid&lt;/code&gt;).</source>
          <target state="translated">将模型拟合到随机子集（ &lt;code&gt;base_estimator.fit&lt;/code&gt; ），然后检查估计的模型是否有效（请参见 &lt;code&gt;is_model_valid&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="ebd8c04ad061ef008e394e38c512b2d8b58287fa" translate="yes" xml:space="preserve">
          <source>Fit a semi-supervised label propagation model based</source>
          <target state="translated">拟合半监督标签传播模型,基于</target>
        </trans-unit>
        <trans-unit id="deba03b3f9d00ab1e647b43aa626a17c324cec03" translate="yes" xml:space="preserve">
          <source>Fit all the transforms one after the other and transform the data, then fit the transformed data using the final estimator.</source>
          <target state="translated">将所有的变换一一拟合,并对数据进行变换,然后使用最终估计器对变换后的数据进行拟合。</target>
        </trans-unit>
        <trans-unit id="114f8ea42731308cb5abe991bcd972d570944b6a" translate="yes" xml:space="preserve">
          <source>Fit all transformers using X.</source>
          <target state="translated">用X装好所有的变压器。</target>
        </trans-unit>
        <trans-unit id="246e8826a6bd7a4f56f132c591c766db9ce2d6b0" translate="yes" xml:space="preserve">
          <source>Fit all transformers, transform the data and concatenate results.</source>
          <target state="translated">拟合所有的变换器,变换数据,并将结果连接起来。</target>
        </trans-unit>
        <trans-unit id="922528f3171c2d46b470779ae89446b3062cf8a4" translate="yes" xml:space="preserve">
          <source>Fit estimator and transform dataset.</source>
          <target state="translated">拟合估计器和转换数据集。</target>
        </trans-unit>
        <trans-unit id="54af94e49eb61f7670851d6ef57ae7193fdff2da" translate="yes" xml:space="preserve">
          <source>Fit estimator to data.</source>
          <target state="translated">对数据进行拟合估计。</target>
        </trans-unit>
        <trans-unit id="85fa5fe8b9795ca2b319f392f4a4756a8b584c81" translate="yes" xml:space="preserve">
          <source>Fit estimator using RANSAC algorithm.</source>
          <target state="translated">使用RANSAC算法进行拟合估计。</target>
        </trans-unit>
        <trans-unit id="820a840249b34711a41e746dbc8ea00e0bef6043" translate="yes" xml:space="preserve">
          <source>Fit estimator.</source>
          <target state="translated">拟合估计器。</target>
        </trans-unit>
        <trans-unit id="c7654cec30bb319e2781e513c9f9ca93708de9b2" translate="yes" xml:space="preserve">
          <source>Fit is on grid of alphas and best alpha estimated by cross-validation.</source>
          <target state="translated">拟合度是在阿尔法的网格上,通过交叉验证估计的最佳阿尔法。</target>
        </trans-unit>
        <trans-unit id="b8cbf7d1420444207c14a8b65b5fcf478860f130" translate="yes" xml:space="preserve">
          <source>Fit label binarizer</source>
          <target state="translated">合适的标签二值机</target>
        </trans-unit>
        <trans-unit id="e7ecedc7848a8ef424a3d78854bd272e8154c780" translate="yes" xml:space="preserve">
          <source>Fit label binarizer and transform multi-class labels to binary labels.</source>
          <target state="translated">拟合标签二值化器,并将多类标签转化为二进制标签。</target>
        </trans-unit>
        <trans-unit id="c75cef45e92464b24b2d996a50f9aed44b9ef31e" translate="yes" xml:space="preserve">
          <source>Fit label encoder</source>
          <target state="translated">安装标签编码器</target>
        </trans-unit>
        <trans-unit id="5de88deba19907fdf6f6eb3678730f7aacb3c312" translate="yes" xml:space="preserve">
          <source>Fit label encoder and return encoded labels</source>
          <target state="translated">安装标签编码器并返回编码标签</target>
        </trans-unit>
        <trans-unit id="cf615a74e4f9177f1a29f39484c75ecef454ecbe" translate="yes" xml:space="preserve">
          <source>Fit linear model with Passive Aggressive algorithm.</source>
          <target state="translated">用被动进取算法拟合线性模型。</target>
        </trans-unit>
        <trans-unit id="def5054532c40485109a181ee65c06aba2df1b53" translate="yes" xml:space="preserve">
          <source>Fit linear model with Stochastic Gradient Descent.</source>
          <target state="translated">用随机梯度下降法拟合线性模型。</target>
        </trans-unit>
        <trans-unit id="80dff5f041e36b3407c4f4e7528431510ae562cc" translate="yes" xml:space="preserve">
          <source>Fit linear model with coordinate descent</source>
          <target state="translated">用坐标下降法拟合线性模型</target>
        </trans-unit>
        <trans-unit id="4a42bd8bc00e1e2eb46153b9c0e14ea2a3d30f42" translate="yes" xml:space="preserve">
          <source>Fit linear model.</source>
          <target state="translated">拟合线性模型。</target>
        </trans-unit>
        <trans-unit id="596c5db56f9a987de5f7691971fcf687d77673ec" translate="yes" xml:space="preserve">
          <source>Fit model to data.</source>
          <target state="translated">根据数据拟合模型。</target>
        </trans-unit>
        <trans-unit id="7bad9b91d21434b63dea0481c80eaf84a7cbcb25" translate="yes" xml:space="preserve">
          <source>Fit model with coordinate descent.</source>
          <target state="translated">用坐标下降法拟合模型。</target>
        </trans-unit>
        <trans-unit id="dddcb769b9b69c71c174f417fcd2a333b19f55fd" translate="yes" xml:space="preserve">
          <source>Fit regression model with Bayesian Ridge Regression.</source>
          <target state="translated">用贝叶斯岭回归法拟合回归模型。</target>
        </trans-unit>
        <trans-unit id="dda67be7d4db5d3187deb44446a3404222c185a6" translate="yes" xml:space="preserve">
          <source>Fit the ARDRegression model according to the given training data and parameters.</source>
          <target state="translated">根据给定的训练数据和参数,拟合ARDRegression模型。</target>
        </trans-unit>
        <trans-unit id="b5a680830417593aa73dd7de7fcef69c6ed24e1b" translate="yes" xml:space="preserve">
          <source>Fit the EllipticEnvelope model.</source>
          <target state="translated">拟合EllipticEnvelope模型。</target>
        </trans-unit>
        <trans-unit id="b52ba2a596ae6c033bcc7f3cf20ecd5c58d00c2f" translate="yes" xml:space="preserve">
          <source>Fit the FactorAnalysis model to X using EM</source>
          <target state="translated">利用EM对X进行FactorAnalysis模型拟合。</target>
        </trans-unit>
        <trans-unit id="6613ce48c67ddab345a10c60b764cb90b5d43667" translate="yes" xml:space="preserve">
          <source>Fit the Kernel Density model on the data.</source>
          <target state="translated">在数据上拟合内核密度模型。</target>
        </trans-unit>
        <trans-unit id="18de2bdae7f6b4aabf66891dec1f775662960310" translate="yes" xml:space="preserve">
          <source>Fit the LSH forest on the data.</source>
          <target state="translated">在数据上拟合LSH森林。</target>
        </trans-unit>
        <trans-unit id="7e835684e570bb3989f14c8abec4c77362174b02" translate="yes" xml:space="preserve">
          <source>Fit the NearestCentroid model according to the given training data.</source>
          <target state="translated">根据给定的训练数据拟合NearestCentroid模型。</target>
        </trans-unit>
        <trans-unit id="f68da32a4110559ba3f4b03666c6374bbe1b67bc" translate="yes" xml:space="preserve">
          <source>Fit the OrdinalEncoder to X.</source>
          <target state="translated">将OrdinalEncoder适合X。</target>
        </trans-unit>
        <trans-unit id="9efb3f60cfc062ba641dafe57455afe5be189469" translate="yes" xml:space="preserve">
          <source>Fit the RFE model and automatically tune the number of selected</source>
          <target state="translated">拟合RFE模型,并自动调整选择的数量。</target>
        </trans-unit>
        <trans-unit id="a1f31e1eab4986ee8b13885092428f58b3a203e9" translate="yes" xml:space="preserve">
          <source>Fit the RFE model and automatically tune the number of selected features.</source>
          <target state="translated">拟合RFE模型并自动调整所选特征的数量。</target>
        </trans-unit>
        <trans-unit id="9813edcd03393c0187279f71f7b7e90f266a7ca4" translate="yes" xml:space="preserve">
          <source>Fit the RFE model and then the underlying estimator on the selected</source>
          <target state="translated">拟合RFE模型,然后在所选的RFE模型上拟合基本估计器。</target>
        </trans-unit>
        <trans-unit id="2e888db086bdb6861e2b6c27ddb4959896a661ee" translate="yes" xml:space="preserve">
          <source>Fit the RFE model and then the underlying estimator on the selected features.</source>
          <target state="translated">拟合RFE模型,然后对选定的特征进行基本估计。</target>
        </trans-unit>
        <trans-unit id="3e8e54a78ebc1bc30d8f6371731aa34e571e1cb7" translate="yes" xml:space="preserve">
          <source>Fit the SVM model according to the given training data.</source>
          <target state="translated">根据给定的训练数据来拟合SVM模型。</target>
        </trans-unit>
        <trans-unit id="e094bb2f16b3f77c4f0ded4998dd5acef469f424" translate="yes" xml:space="preserve">
          <source>Fit the SelectFromModel meta-transformer only once.</source>
          <target state="translated">只适合SelectFromModel元变换器一次。</target>
        </trans-unit>
        <trans-unit id="4f2b5174d874ffda16493a72eb6b7d9e49692dfa" translate="yes" xml:space="preserve">
          <source>Fit the SelectFromModel meta-transformer.</source>
          <target state="translated">契合SelectFromModel元变换器。</target>
        </trans-unit>
        <trans-unit id="48df38063d696d0aeb8b0988a010338565cac757" translate="yes" xml:space="preserve">
          <source>Fit the calibrated model</source>
          <target state="translated">拟合校准模型</target>
        </trans-unit>
        <trans-unit id="548ac10033a88a7f2f90c29b16d9b1eac7c9baf8" translate="yes" xml:space="preserve">
          <source>Fit the data from X, and returns the embedded coordinates</source>
          <target state="translated">从X中拟合数据,并返回嵌入的坐标。</target>
        </trans-unit>
        <trans-unit id="855887273459477b0845aa915278722b2bfdc95e" translate="yes" xml:space="preserve">
          <source>Fit the estimators.</source>
          <target state="translated">拟合估算器。</target>
        </trans-unit>
        <trans-unit id="78a5f0fa7f9e8e8876e6f8fdd879d2a72169691e" translate="yes" xml:space="preserve">
          <source>Fit the gradient boosting model.</source>
          <target state="translated">拟合梯度提升模型。</target>
        </trans-unit>
        <trans-unit id="6951b3b9c1e77870a95debb989a3776ac4c5d6a1" translate="yes" xml:space="preserve">
          <source>Fit the hierarchical clustering on the data</source>
          <target state="translated">在数据上拟合层次聚类。</target>
        </trans-unit>
        <trans-unit id="5b5563854bcbf3fe8e972427b6550f84e6f5e44a" translate="yes" xml:space="preserve">
          <source>Fit the imputer on X.</source>
          <target state="translated">在X上装上撞击器。</target>
        </trans-unit>
        <trans-unit id="f79ad350ada74918a25b6a18b9c98a44219aea81" translate="yes" xml:space="preserve">
          <source>Fit the label sets binarizer and transform the given label sets</source>
          <target state="translated">拟合标签集二值化器并转换给定的标签集。</target>
        </trans-unit>
        <trans-unit id="aff4cb7658d810f05c33be44cd22feded7d4bab1" translate="yes" xml:space="preserve">
          <source>Fit the label sets binarizer, storing &lt;code&gt;classes_&lt;/code&gt;</source>
          <target state="translated">适合标签集二值化器，存储 &lt;code&gt;classes_&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8fe48671e323549fd93560341a4a3c7b625e4c7d" translate="yes" xml:space="preserve">
          <source>Fit the model</source>
          <target state="translated">拟合模型</target>
        </trans-unit>
        <trans-unit id="4a0fb954f184570eb54f89782d45ff6b62de8f93" translate="yes" xml:space="preserve">
          <source>Fit the model according to the given training data and parameters.</source>
          <target state="translated">根据给定的训练数据和参数来拟合模型。</target>
        </trans-unit>
        <trans-unit id="226810036d48f43519ac6362c835a5ebb75ac273" translate="yes" xml:space="preserve">
          <source>Fit the model according to the given training data.</source>
          <target state="translated">根据给定的训练数据来拟合模型。</target>
        </trans-unit>
        <trans-unit id="12dc3b0f35bd8c187f3d6ad72da28e55416ad4ec" translate="yes" xml:space="preserve">
          <source>Fit the model and recover the sources from X.</source>
          <target state="translated">拟合模型并从X中恢复来源。</target>
        </trans-unit>
        <trans-unit id="71e9ee1734e2bbf9ac4fe07ac1b6c03c04237b08" translate="yes" xml:space="preserve">
          <source>Fit the model and transform with the final estimator</source>
          <target state="translated">拟合模型,并用最终估计器进行变换。</target>
        </trans-unit>
        <trans-unit id="6b8aa0f161bb8a77dc4775ed1ee1fcfc2c406c82" translate="yes" xml:space="preserve">
          <source>Fit the model from data in X and transform X.</source>
          <target state="translated">从X中的数据拟合模型,并变换X。</target>
        </trans-unit>
        <trans-unit id="0aa179622924cc08ee70a31764d01ab49bbf6bcd" translate="yes" xml:space="preserve">
          <source>Fit the model from data in X.</source>
          <target state="translated">根据X中的数据拟合模型。</target>
        </trans-unit>
        <trans-unit id="09a244ac4f08853db4f27fa0f56ca2d8ae157c91" translate="yes" xml:space="preserve">
          <source>Fit the model to X.</source>
          <target state="translated">将模型拟合到X上。</target>
        </trans-unit>
        <trans-unit id="d8fc33348e2baabb167cc4df9e594abe384c1eb2" translate="yes" xml:space="preserve">
          <source>Fit the model to data matrix X and target y.</source>
          <target state="translated">将模型拟合到数据矩阵X和目标y上。</target>
        </trans-unit>
        <trans-unit id="a08fe1d5397b99194d7ea288b13912038b863a22" translate="yes" xml:space="preserve">
          <source>Fit the model to data matrix X and target(s) y.</source>
          <target state="translated">将模型拟合到数据矩阵X和目标y上。</target>
        </trans-unit>
        <trans-unit id="5260da8ec9e88ebba64d6137961aeb8e84b7f391" translate="yes" xml:space="preserve">
          <source>Fit the model to data matrix X and targets Y.</source>
          <target state="translated">将模型拟合到数据矩阵X和目标Y上。</target>
        </trans-unit>
        <trans-unit id="45ba17915e2e3031d1582da2d277da7f4931a4e1" translate="yes" xml:space="preserve">
          <source>Fit the model to data.</source>
          <target state="translated">根据数据拟合模型。</target>
        </trans-unit>
        <trans-unit id="afd434d49f80c8d01132ca406d4c79b805654e96" translate="yes" xml:space="preserve">
          <source>Fit the model to data. Fit a separate model for each output variable.</source>
          <target state="translated">根据数据拟合模型。为每个输出变量拟合一个单独的模型。</target>
        </trans-unit>
        <trans-unit id="cfdc299b35aa8a48c0af501e27ae7cce65e8f528" translate="yes" xml:space="preserve">
          <source>Fit the model to the data X which should contain a partial segment of the data.</source>
          <target state="translated">将模型拟合到数据X上,数据X应包含部分数据段。</target>
        </trans-unit>
        <trans-unit id="b93160749fdae6a7fa042ecb31b3787d54faa056" translate="yes" xml:space="preserve">
          <source>Fit the model to the data X.</source>
          <target state="translated">将模型与数据X拟合。</target>
        </trans-unit>
        <trans-unit id="22b95bc22aacaf67cf593094b402a5ffdf9c9f1a" translate="yes" xml:space="preserve">
          <source>Fit the model using X as training data</source>
          <target state="translated">用X作为训练数据拟合模型</target>
        </trans-unit>
        <trans-unit id="c8f2bc6ec471b46a95d660913e3db5351ccdd413" translate="yes" xml:space="preserve">
          <source>Fit the model using X as training data and y as target values</source>
          <target state="translated">将X作为训练数据,将y作为目标值来拟合模型。</target>
        </trans-unit>
        <trans-unit id="67d84010e7f659892bf337ed29c5877ed8354203" translate="yes" xml:space="preserve">
          <source>Fit the model using X as training data.</source>
          <target state="translated">以X作为训练数据拟合模型。</target>
        </trans-unit>
        <trans-unit id="3b6c346e2454cc9e9a61a017fe7c431d552c8c5b" translate="yes" xml:space="preserve">
          <source>Fit the model using X, y as training data.</source>
          <target state="translated">用X,y作为训练数据来拟合模型。</target>
        </trans-unit>
        <trans-unit id="5c7f073bf35ac36015511e86a701acdf9d1f18c6" translate="yes" xml:space="preserve">
          <source>Fit the model with X and apply the dimensionality reduction on X.</source>
          <target state="translated">用X拟合模型,并在X上应用维度降低。</target>
        </trans-unit>
        <trans-unit id="ea7ce544f3a486e6f2a49538bf4fe64bf5a8afde" translate="yes" xml:space="preserve">
          <source>Fit the model with X, using minibatches of size batch_size.</source>
          <target state="translated">用X拟合模型,使用大小为batch_size的minibatches。</target>
        </trans-unit>
        <trans-unit id="e7967bf329b3c1f757d75d92e374951929321ba7" translate="yes" xml:space="preserve">
          <source>Fit the model with X.</source>
          <target state="translated">用X来拟合模型。</target>
        </trans-unit>
        <trans-unit id="a5abbc09518b549e779e08db2e6e49f0ba32533d" translate="yes" xml:space="preserve">
          <source>Fit the random classifier.</source>
          <target state="translated">拟合随机分类器。</target>
        </trans-unit>
        <trans-unit id="30f7575e3bac8aaa2852370b548ad3f04b290586" translate="yes" xml:space="preserve">
          <source>Fit the random regressor.</source>
          <target state="translated">拟合随机回归器。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
