<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="scikit_learn">
    <body>
      <group id="scikit_learn">
        <trans-unit id="8e7a8c8acef8e25d8225bca274332d6c56e271be" translate="yes" xml:space="preserve">
          <source>Because the models in each chain are arranged randomly there is significant variation in performance among the chains. Presumably there is an optimal ordering of the classes in a chain that will yield the best performance. However we do not know that ordering a priori. Instead we can construct an voting ensemble of classifier chains by averaging the binary predictions of the chains and apply a threshold of 0.5. The Jaccard similarity score of the ensemble is greater than that of the independent models and tends to exceed the score of each chain in the ensemble (although this is not guaranteed with randomly ordered chains).</source>
          <target state="translated">由于每条链中的模型是随机排列的,所以各链之间的性能差异很大。据推测,链中的类有一个最佳排序,将产生最佳性能。然而,我们并不能先验地知道这个排序。相反,我们可以通过对分类器链的二元预测进行平均,并应用0.5的阈值来构建一个分类器链的投票集合。合集的Jaccard相似度得分大于独立模型的相似度得分,并趋向于超过合集中每条链的得分(尽管随机排序的链不能保证这一点)。</target>
        </trans-unit>
        <trans-unit id="7223d10fe616d4b0ef82e34ecf5c077bba0a2d4c" translate="yes" xml:space="preserve">
          <source>Because the number of neighbors of each point is not necessarily equal, the results for multiple query points cannot be fit in a standard data array. For efficiency, &lt;code&gt;radius_neighbors&lt;/code&gt; returns arrays of objects, where each object is a 1D array of indices or distances.</source>
          <target state="translated">因为每个点的邻居数不一定相等，所以多个查询点的结果不能适合标准数据数组。为了提高效率， &lt;code&gt;radius_neighbors&lt;/code&gt; 返回对象数组，其中每个对象都是一维索引或距离数组。</target>
        </trans-unit>
        <trans-unit id="5b27b93fd142831db995faecc3827454df4cf37d" translate="yes" xml:space="preserve">
          <source>Because the query set matches the training set, the nearest neighbor of each point is the point itself, at a distance of zero.</source>
          <target state="translated">因为查询集与训练集相匹配,所以每个点的最近邻居是点本身,距离为零。</target>
        </trans-unit>
        <trans-unit id="40a1ac9f9c5627c60c3da1e0a0050f7b91b8daf1" translate="yes" xml:space="preserve">
          <source>Because this implementation uses a flat kernel and a Ball Tree to look up members of each kernel, the complexity will tend towards O(T*n*log(n)) in lower dimensions, with n the number of samples and T the number of points. In higher dimensions the complexity will tend towards O(T*n^2).</source>
          <target state="translated">因为这个实现使用了一个平核和一个球形树来查找每个核的成员,所以在较低维度上,复杂度将趋向于O(T*n*log(n)),n是样本数,T是点的数量。在较高维度上,复杂度将趋向于O(T*n^2)。</target>
        </trans-unit>
        <trans-unit id="f3c17036de4b5ca609e4df67622292c35365a396" translate="yes" xml:space="preserve">
          <source>Behaviour of the &lt;code&gt;decision_function&lt;/code&gt; which can be either &amp;lsquo;old&amp;rsquo; or &amp;lsquo;new&amp;rsquo;. Passing &lt;code&gt;behaviour='new'&lt;/code&gt; makes the &lt;code&gt;decision_function&lt;/code&gt; change to match other anomaly detection algorithm API which will be the default behaviour in the future. As explained in details in the &lt;code&gt;offset_&lt;/code&gt; attribute documentation, the &lt;code&gt;decision_function&lt;/code&gt; becomes dependent on the contamination parameter, in such a way that 0 becomes its natural threshold to detect outliers.</source>
          <target state="translated">该行为 &lt;code&gt;decision_function&lt;/code&gt; 它可以是&amp;ldquo;老&amp;rdquo;或&amp;ldquo;新&amp;rdquo;。传递 &lt;code&gt;behaviour='new'&lt;/code&gt; 进行 &lt;code&gt;decision_function&lt;/code&gt; 更改，以匹配其他异常检测算法API，这将是将来的默认行为。如 &lt;code&gt;offset_&lt;/code&gt; attribute文档中的详细说明， &lt;code&gt;decision_function&lt;/code&gt; 依赖于污染参数，其方式是0成为检测异常值的自然阈值。</target>
        </trans-unit>
        <trans-unit id="20bc631a66b3cc1b1a3392b3fbbb196ee59f89ba" translate="yes" xml:space="preserve">
          <source>Being a forward feature selection method like &lt;a href=&quot;#least-angle-regression&quot;&gt;Least Angle Regression&lt;/a&gt;, orthogonal matching pursuit can approximate the optimum solution vector with a fixed number of non-zero elements:</source>
          <target state="translated">作为&lt;a href=&quot;#least-angle-regression&quot;&gt;最小角度回归&lt;/a&gt;等前向特征选择方法，正交匹配追踪可以使用固定数量的非零元素来逼近最优解向量：</target>
        </trans-unit>
        <trans-unit id="305fd1e902f73a5b60bc86a4bdd6b4a6ea0e533f" translate="yes" xml:space="preserve">
          <source>Below are examples of Box-Cox and Yeo-Johnson applied to various probability distributions. Note that when applied to certain distributions, the power transforms achieve very Gaussian-like results, but with others, they are ineffective. This highlights the importance of visualizing the data before and after transformation.</source>
          <target state="translated">下面是Box-Cox和Yeo-Johnson应用于各种概率分布的例子。请注意,当应用于某些分布时,幂级变换可以达到非常类似高斯的结果,但对于其他分布,它们是无效的。这凸显了在变换前后对数据进行可视化的重要性。</target>
        </trans-unit>
        <trans-unit id="15f2be220fb72bee910f5e62c59989aad06195d5" translate="yes" xml:space="preserve">
          <source>Below is a summary of the classifiers supported by scikit-learn grouped by strategy; you don&amp;rsquo;t need the meta-estimators in this class if you&amp;rsquo;re using one of these, unless you want custom multiclass behavior:</source>
          <target state="translated">以下是scikit-learn支持的分类器（按策略分组）的摘要；如果您使用的是其中之一，则不需要此类中的元估计器，除非您需要自定义多类行为：</target>
        </trans-unit>
        <trans-unit id="108ff87be25a1c1dd2316c9f1fb3ba28787755c8" translate="yes" xml:space="preserve">
          <source>Below is an example graphviz export of the above tree trained on the entire iris dataset; the results are saved in an output file &lt;code&gt;iris.pdf&lt;/code&gt;:</source>
          <target state="translated">下面是在整个虹膜数据集上训练的上述树的示例graphviz导出；结果保存在输出文件 &lt;code&gt;iris.pdf&lt;/code&gt; 中：</target>
        </trans-unit>
        <trans-unit id="f4264cf8db047b13d2c0262177f6f646451f4fbb" translate="yes" xml:space="preserve">
          <source>Below is an example of multiclass learning using Output-Codes:</source>
          <target state="translated">下面是一个使用输出代码进行多类学习的例子。</target>
        </trans-unit>
        <trans-unit id="b49bf188ea86adad6efb34f880d43936d0fc0ac2" translate="yes" xml:space="preserve">
          <source>Below is an example of multiclass learning using OvO:</source>
          <target state="translated">下面是一个使用OvO进行多类学习的例子。</target>
        </trans-unit>
        <trans-unit id="687c4cfff2712863f68152405d4b2638d130c286" translate="yes" xml:space="preserve">
          <source>Below is an example of multiclass learning using OvR:</source>
          <target state="translated">下面是一个使用OvR进行多类学习的例子。</target>
        </trans-unit>
        <trans-unit id="c80585dafc7b9164da5261a6f83e5756b02054c8" translate="yes" xml:space="preserve">
          <source>Below is an example of multioutput classification:</source>
          <target state="translated">下面是一个多输出分类的例子。</target>
        </trans-unit>
        <trans-unit id="5323f7dfcb00efe99d53b8ad7c93f56a3771bb8d" translate="yes" xml:space="preserve">
          <source>Below is an example of multioutput regression:</source>
          <target state="translated">下面是一个多产出回归的例子。</target>
        </trans-unit>
        <trans-unit id="c1920b9ad7a1724faf2c50a13254e745783c4989" translate="yes" xml:space="preserve">
          <source>Below is an example of the iris dataset, which is comprised of 4 features, projected on the 2 dimensions that explain most variance:</source>
          <target state="translated">下面是一个虹膜数据集的例子,该数据集由4个特征组成,投影在解释大部分差异的2个维度上。</target>
        </trans-unit>
        <trans-unit id="fe179d558d43e31394bc90d2c2bd912f3d7ad712" translate="yes" xml:space="preserve">
          <source>Belsley, Kuh &amp;amp; Welsch, &amp;lsquo;Regression diagnostics: Identifying Influential Data and Sources of Collinearity&amp;rsquo;, Wiley, 1980. 244-261.</source>
          <target state="translated">Belsley，Kuh＆Welsch，&amp;ldquo;回归诊断：确定共线性的影响数据和来源&amp;rdquo;，Wiley，1980年。244-261。</target>
        </trans-unit>
        <trans-unit id="fe07a59cb91f8e159239a44b010528ab1c647c88" translate="yes" xml:space="preserve">
          <source>Bergstra, J. and Bengio, Y., Random search for hyper-parameter optimization, The Journal of Machine Learning Research (2012)</source>
          <target state="translated">Bergstra,J.and Bengio,Y.,Random search for hyper-parameter optimization,The Journal of Machine Learning Research (2012)</target>
        </trans-unit>
        <trans-unit id="acb0e0e454302529b80959f07b2776ace520ba67" translate="yes" xml:space="preserve">
          <source>Bernhard Schoelkopf, Alexander J. Smola, and Klaus-Robert Mueller. 1999. Kernel principal component analysis. In Advances in kernel methods, MIT Press, Cambridge, MA, USA 327-352.</source>
          <target state="translated">Bernhard Schoelkopf,Alexander J.Smola和Klaus-Robert Mueller。1999.内核主成分分析。In Advances in kernel methods,MIT Press,Cambridge,MA,USA 327-352.</target>
        </trans-unit>
        <trans-unit id="d8b44488165a02f44f4a67e6ba1ce39e5b9c9bb9" translate="yes" xml:space="preserve">
          <source>Bernoulli Restricted Boltzmann Machine (RBM).</source>
          <target state="translated">伯努利受限波尔兹曼机(RBM)。</target>
        </trans-unit>
        <trans-unit id="5923a4b6b18db19ea579977a7a07a6737359d838" translate="yes" xml:space="preserve">
          <source>Besides scikit-learn, NumPy and SciPy also use BLAS internally, as explained earlier.</source>
          <target state="translated">除了scikit-learn,NumPy和SciPy内部也使用BLAS,前面已经解释过。</target>
        </trans-unit>
        <trans-unit id="7d9a50881bd5d34faa0a8f3ad342e9a7c84f5b08" translate="yes" xml:space="preserve">
          <source>Best fitted model (copy of the &lt;code&gt;base_estimator&lt;/code&gt; object).</source>
          <target state="translated">最佳拟合模型（ &lt;code&gt;base_estimator&lt;/code&gt; 对象的副本）。</target>
        </trans-unit>
        <trans-unit id="12a49239d2ca4095c10a87ae8e694332610beadd" translate="yes" xml:space="preserve">
          <source>Best possible score is 1.0 and it can be negative (because the model can be arbitrarily worse). A constant model that always predicts the expected value of y, disregarding the input features, would get a R^2 score of 0.0.</source>
          <target state="translated">最佳可能的分数是1.0,而且可以是负数(因为模型可以任意变坏)。一个恒定的模型,如果总是预测y的期望值,不考虑输入特征,那么R^2得分将为0.0。</target>
        </trans-unit>
        <trans-unit id="792cb529b422a1c11c9b2f8bb241ed31b32984d9" translate="yes" xml:space="preserve">
          <source>Best possible score is 1.0, lower values are worse.</source>
          <target state="translated">最好的分数是1.0,数值越低越差。</target>
        </trans-unit>
        <trans-unit id="28c6b37b189c99aed8957aff1f021f2f9f59464b" translate="yes" xml:space="preserve">
          <source>Beta-divergence loss functions</source>
          <target state="translated">β-偏离损失函数</target>
        </trans-unit>
        <trans-unit id="d2c95a0bd9e48b10416c4f3dc812e08319356fa2" translate="yes" xml:space="preserve">
          <source>Beware not to use a regression scoring function with a classification problem, you will get useless results.</source>
          <target state="translated">小心不要在分类问题上使用回归评分函数,你会得到无用的结果。</target>
        </trans-unit>
        <trans-unit id="ba237b5bed1b1a1e028b039eda8969e7ed30ca0a" translate="yes" xml:space="preserve">
          <source>Bias and variance are inherent properties of estimators and we usually have to select learning algorithms and hyperparameters so that both bias and variance are as low as possible (see &lt;a href=&quot;https://en.wikipedia.org/wiki/Bias-variance_dilemma&quot;&gt;Bias-variance dilemma&lt;/a&gt;). Another way to reduce the variance of a model is to use more training data. However, you should only collect more training data if the true function is too complex to be approximated by an estimator with a lower variance.</source>
          <target state="translated">偏差和方差是估计量的固有属性，我们通常必须选择学习算法和超参数，以使偏差和方差都尽可能低（请参见&lt;a href=&quot;https://en.wikipedia.org/wiki/Bias-variance_dilemma&quot;&gt;偏差方差难题&lt;/a&gt;）。减少模型差异的另一种方法是使用更多的训练数据。但是，仅当真实函数过于复杂而无法由方差较小的估算器近似时，才应收集更多训练数据。</target>
        </trans-unit>
        <trans-unit id="06f19409a98653c678fe6ff3c120895b283ca5ff" translate="yes" xml:space="preserve">
          <source>Bias-variance trade-off when setting the shrinkage: comparing the choices of Ledoit-Wolf and OAS estimators</source>
          <target state="translated">设置收缩率时的偏差-方差权衡:比较Ledoit-Wolf和OAS估计器的选择。</target>
        </trans-unit>
        <trans-unit id="7c5f1fb15e060b340fb270b747d162cde9961929" translate="yes" xml:space="preserve">
          <source>Bias.</source>
          <target state="translated">Bias.</target>
        </trans-unit>
        <trans-unit id="e26ae344044922af518669ed7912f3779c4b00f9" translate="yes" xml:space="preserve">
          <source>Bias:</source>
          <target state="translated">Bias:</target>
        </trans-unit>
        <trans-unit id="6b339e821e48cfc38068b641fe05c82a58e3e342" translate="yes" xml:space="preserve">
          <source>Biases of the hidden units.</source>
          <target state="translated">隐性单位的偏差。</target>
        </trans-unit>
        <trans-unit id="e50dfa9d24499c67dd80dc7ae0f62d209963644d" translate="yes" xml:space="preserve">
          <source>Biases of the visible units.</source>
          <target state="translated">可见单位的偏差。</target>
        </trans-unit>
        <trans-unit id="a252b47dd9e6fba33ce507e3a8e6ec1bb1e9c7d0" translate="yes" xml:space="preserve">
          <source>Biclustering can be performed with the module &lt;a href=&quot;classes#module-sklearn.cluster.bicluster&quot;&gt;&lt;code&gt;sklearn.cluster.bicluster&lt;/code&gt;&lt;/a&gt;. Biclustering algorithms simultaneously cluster rows and columns of a data matrix. These clusters of rows and columns are known as biclusters. Each determines a submatrix of the original data matrix with some desired properties.</source>
          <target state="translated">可以使用&lt;a href=&quot;classes#module-sklearn.cluster.bicluster&quot;&gt; &lt;code&gt;sklearn.cluster.bicluster&lt;/code&gt; &lt;/a&gt;模块进行二元组化。双簇算法同时对数据矩阵的行和列进行聚类。这些行和列的簇称为双簇。每个函数都确定具有某些所需属性的原始数据矩阵的子矩阵。</target>
        </trans-unit>
        <trans-unit id="ec46a574c9badafd039dd72d03169fe1273b5603" translate="yes" xml:space="preserve">
          <source>Biclustering documents with the Spectral Co-clustering algorithm</source>
          <target state="translated">用光谱共聚算法对文档进行双聚类处理。</target>
        </trans-unit>
        <trans-unit id="ee86c7bb4d236ce105b92fe63ada05dd4ec5870a" translate="yes" xml:space="preserve">
          <source>Biclustering has many other names in different fields including co-clustering, two-mode clustering, two-way clustering, block clustering, coupled two-way clustering, etc. The names of some algorithms, such as the Spectral Co-Clustering algorithm, reflect these alternate names.</source>
          <target state="translated">双聚类在不同领域还有很多其他的名称,包括共聚类、双模聚类、双向聚类、块聚类、耦合双向聚类等。一些算法的名称,如谱系共聚类算法,就反映了这些另类的名称。</target>
        </trans-unit>
        <trans-unit id="9dbdcbb1f58605adc858ff7ea9bd66e335bd0acc" translate="yes" xml:space="preserve">
          <source>Biclustering metrics</source>
          <target state="translated">双集群指标</target>
        </trans-unit>
        <trans-unit id="d9cf1c1fb4521641a79265f68d061558d2a8f977" translate="yes" xml:space="preserve">
          <source>Bigger is better, i.e. large values correspond to inliers.</source>
          <target state="translated">越大越好,即大值对应离群值。</target>
        </trans-unit>
        <trans-unit id="8a391f29f990251d22520f34bdb4ac600bbfd771" translate="yes" xml:space="preserve">
          <source>Bin continuous data into intervals.</source>
          <target state="translated">将连续的数据划分为区间。</target>
        </trans-unit>
        <trans-unit id="271e5dda8b524cc22b71bebf5401052359debca7" translate="yes" xml:space="preserve">
          <source>Binarization is a common operation on text count data where the analyst can decide to only consider the presence or absence of a feature rather than a quantified number of occurrences for instance.</source>
          <target state="translated">Binarization是对文本计数数据的一种常见操作,分析师可以决定只考虑特征的存在或不存在,而不是量化的出现次数,例如。</target>
        </trans-unit>
        <trans-unit id="98a952cd8923e662b6dc4cb343f8e07b8c748673" translate="yes" xml:space="preserve">
          <source>Binarize data (set feature values to 0 or 1) according to a threshold</source>
          <target state="translated">根据阈值对数据进行二值化(将特征值设置为0或1)。</target>
        </trans-unit>
        <trans-unit id="e6093920f16b7a0a90021c0a6f1b3ba3a339b537" translate="yes" xml:space="preserve">
          <source>Binarize each element of X</source>
          <target state="translated">二进制化X的每个元素</target>
        </trans-unit>
        <trans-unit id="0b5b7e155ae5a5495c55eaab6001751a5f50a1e4" translate="yes" xml:space="preserve">
          <source>Binarize labels in a one-vs-all fashion</source>
          <target state="translated">以一物降一物的方式实现标签的二元化。</target>
        </trans-unit>
        <trans-unit id="2c6db33026290c5eceb25ad459dd62fbc5de5524" translate="yes" xml:space="preserve">
          <source>Binary and multiclass labels are supported. Only in the binary case does this relate to information about true and false positives and negatives. See references below.</source>
          <target state="translated">支持二进制和多类标签。只有在二进制的情况下,才涉及到真假阳性和阴性的信息。参见下面的参考文献。</target>
        </trans-unit>
        <trans-unit id="76f6ce139477b2ff40abfa10ccd09f75138f8a5a" translate="yes" xml:space="preserve">
          <source>Binary array containing the code of each class.</source>
          <target state="translated">包含每个类的代码的二进制数组。</target>
        </trans-unit>
        <trans-unit id="d5752168a3a19813275e09ded6a3644b6b365056" translate="yes" xml:space="preserve">
          <source>Binary indicators for missing values.</source>
          <target state="translated">缺失值的二元指标。</target>
        </trans-unit>
        <trans-unit id="d20fae796db569b25a51c85d3dbd034384870434" translate="yes" xml:space="preserve">
          <source>Binary probability estimates for loss=&amp;rdquo;modified_huber&amp;rdquo; are given by (clip(decision_function(X), -1, 1) + 1) / 2. For other loss functions it is necessary to perform proper probability calibration by wrapping the classifier with &lt;a href=&quot;sklearn.calibration.calibratedclassifiercv#sklearn.calibration.CalibratedClassifierCV&quot;&gt;&lt;code&gt;sklearn.calibration.CalibratedClassifierCV&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">损失=&amp;ldquo; modified_huber&amp;rdquo;的二进制概率估计值由（clip（decision_function（X），-1，1）+ 1）/ 2给出。对于其他损失函数，有必要通过用&lt;a href=&quot;sklearn.calibration.calibratedclassifiercv#sklearn.calibration.CalibratedClassifierCV&quot;&gt; &lt;code&gt;sklearn.calibration.CalibratedClassifierCV&lt;/code&gt; &lt;/a&gt;包装分类器来执行适当的概率校准。 Calibration.CalibratedClassifierCV代替。</target>
        </trans-unit>
        <trans-unit id="e17841c821731bb47f4b19f4849e509ece4c5657" translate="yes" xml:space="preserve">
          <source>Binary targets transform to a column vector</source>
          <target state="translated">二进制目标转换为列向量</target>
        </trans-unit>
        <trans-unit id="2a2767f039bc988b0f4c4e7163ccdacd052867c1" translate="yes" xml:space="preserve">
          <source>Binding of the cross-validation routine (low-level routine)</source>
          <target state="translated">交叉验证例行程序(低级例行程序)的约束;</target>
        </trans-unit>
        <trans-unit id="64fb71b36aba4bcefad2e5d527659e300a2b2c01" translate="yes" xml:space="preserve">
          <source>Binomial deviance (&lt;code&gt;'deviance'&lt;/code&gt;): The negative binomial log-likelihood loss function for binary classification (provides probability estimates). The initial model is given by the log odds-ratio.</source>
          <target state="translated">二项式偏差（ &lt;code&gt;'deviance'&lt;/code&gt; ）：二元分类的负二项式对数似然损失函数（提供概率估计）。初始模型由对数比值比给出。</target>
        </trans-unit>
        <trans-unit id="7eef6382001e9a152cc75ac79b202341870bb6db" translate="yes" xml:space="preserve">
          <source>Birch</source>
          <target state="translated">Birch</target>
        </trans-unit>
        <trans-unit id="c8804a672e163b7d85424df4080099668af078fd" translate="yes" xml:space="preserve">
          <source>Birch does not scale very well to high dimensional data. As a rule of thumb if &lt;code&gt;n_features&lt;/code&gt; is greater than twenty, it is generally better to use MiniBatchKMeans.</source>
          <target state="translated">桦木无法很好地缩放到高维数据。根据经验，如果 &lt;code&gt;n_features&lt;/code&gt; 大于20，通常最好使用MiniBatchKMeans。</target>
        </trans-unit>
        <trans-unit id="35b99b7929918827477b2be5f13db5f62d5bed94" translate="yes" xml:space="preserve">
          <source>Bishop, Christopher M. (2006). &amp;ldquo;Pattern recognition and machine learning&amp;rdquo;. Vol. 4 No. 4. New York: Springer.</source>
          <target state="translated">主教，克里斯托弗&amp;middot;M（2006）。&amp;ldquo;模式识别和机器学习&amp;rdquo;。卷 4号。4.纽约：施普林格。</target>
        </trans-unit>
        <trans-unit id="3ee00b8c0e8ff24c1a59dc452e853cf83ab3d2bf" translate="yes" xml:space="preserve">
          <source>Blei, David M. and Michael I. Jordan. (2006). &amp;ldquo;Variational inference for Dirichlet process mixtures&amp;rdquo;. Bayesian analysis 1.1</source>
          <target state="translated">Blei，David M.和Michael I. Jordan。（2006）。&amp;ldquo; Dirichlet过程混合物的变量推论&amp;rdquo;。贝叶斯分析1.1</target>
        </trans-unit>
        <trans-unit id="66370792731dff7f31408706eed1fd3ef5297d11" translate="yes" xml:space="preserve">
          <source>Blind source separation using FastICA</source>
          <target state="translated">使用FastICA进行盲源分离</target>
        </trans-unit>
        <trans-unit id="7d44bc449c2a26374800a503f10f3d8949505f40" translate="yes" xml:space="preserve">
          <source>Blue</source>
          <target state="translated">Blue</target>
        </trans-unit>
        <trans-unit id="d1411ae3cdd27fda5ea57577c408be223f586cf0" translate="yes" xml:space="preserve">
          <source>Body mass index</source>
          <target state="translated">身体质量指数</target>
        </trans-unit>
        <trans-unit id="eeb4978eef8f0138e90d13575223e62053c06fa3" translate="yes" xml:space="preserve">
          <source>Bonus point if the utility is able to give a confidence level for its predictions.</source>
          <target state="translated">如果该实用程序能够为其预测提供一个置信度,则加分。</target>
        </trans-unit>
        <trans-unit id="3605ba73833c24e0fbda3c252c7bb0e601382c92" translate="yes" xml:space="preserve">
          <source>Boolean flag indicating wether the output of &lt;code&gt;transform&lt;/code&gt; is a sparse matrix or a dense numpy array, which depends on the output of the individual transformers and the &lt;code&gt;sparse_threshold&lt;/code&gt; keyword.</source>
          <target state="translated">布尔值标志，指示 &lt;code&gt;transform&lt;/code&gt; 的输出是稀疏矩阵还是密集的numpy数组，这取决于各个转换器的输出和 &lt;code&gt;sparse_threshold&lt;/code&gt; 关键字。</target>
        </trans-unit>
        <trans-unit id="dd883a95149825523369daab7f0f8ca0aca6e0ac" translate="yes" xml:space="preserve">
          <source>Boolean mask of inliers classified as &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">分类为 &lt;code&gt;True&lt;/code&gt; 的Inlier的布尔布尔掩码。</target>
        </trans-unit>
        <trans-unit id="d2ef2625261226f9417113c581f3bab51f99fc11" translate="yes" xml:space="preserve">
          <source>Boolean mask or indices for test set.</source>
          <target state="translated">测试集的布尔掩码或指数。</target>
        </trans-unit>
        <trans-unit id="30de559b973b97451b964227c7184d452eca2270" translate="yes" xml:space="preserve">
          <source>Boolean mask or indices for training set.</source>
          <target state="translated">训练集的布尔掩码或指数。</target>
        </trans-unit>
        <trans-unit id="a38162711f2499e7a5519304c06ab030205ccd3e" translate="yes" xml:space="preserve">
          <source>Boolean mask or list of indices (as returned by the get_support member of feature selectors).</source>
          <target state="translated">布尔掩码或索引列表(由特征选择器的get_support成员返回)。</target>
        </trans-unit>
        <trans-unit id="c3ff5ac4f1442b62c49b82219fbca08a9aaf6fc5" translate="yes" xml:space="preserve">
          <source>Boolean thresholding of array-like or scipy.sparse matrix</source>
          <target state="translated">类数组或scipy.sparse矩阵的布尔阈值化。</target>
        </trans-unit>
        <trans-unit id="52747050c0ad2a1de070c473421346e630cdac3f" translate="yes" xml:space="preserve">
          <source>Both &amp;lsquo;ascii&amp;rsquo; and &amp;lsquo;unicode&amp;rsquo; use NFKD normalization from &lt;a href=&quot;https://docs.python.org/3/library/unicodedata.html#unicodedata.normalize&quot;&gt;&lt;code&gt;unicodedata.normalize&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">'ascii'和'unicode'都使用&lt;a href=&quot;https://docs.python.org/3/library/unicodedata.html#unicodedata.normalize&quot;&gt; &lt;code&gt;unicodedata.normalize&lt;/code&gt; 中的&lt;/a&gt; NFKD规范化。</target>
        </trans-unit>
        <trans-unit id="cc08d18c56138ef4e57769f94344c2fcddc0c71c" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;../modules/generated/sklearn.datasets.make_blobs#sklearn.datasets.make_blobs&quot;&gt;&lt;code&gt;make_blobs&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../modules/generated/sklearn.datasets.make_classification#sklearn.datasets.make_classification&quot;&gt;&lt;code&gt;make_classification&lt;/code&gt;&lt;/a&gt; create multiclass datasets by allocating each class one or more normally-distributed clusters of points. &lt;a href=&quot;../modules/generated/sklearn.datasets.make_blobs#sklearn.datasets.make_blobs&quot;&gt;&lt;code&gt;make_blobs&lt;/code&gt;&lt;/a&gt; provides greater control regarding the centers and standard deviations of each cluster, and is used to demonstrate clustering. &lt;a href=&quot;../modules/generated/sklearn.datasets.make_classification#sklearn.datasets.make_classification&quot;&gt;&lt;code&gt;make_classification&lt;/code&gt;&lt;/a&gt; specialises in introducing noise by way of: correlated, redundant and uninformative features; multiple Gaussian clusters per class; and linear transformations of the feature space.</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.make_blobs#sklearn.datasets.make_blobs&quot;&gt; &lt;code&gt;make_blobs&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../modules/generated/sklearn.datasets.make_classification#sklearn.datasets.make_classification&quot;&gt; &lt;code&gt;make_classification&lt;/code&gt; &lt;/a&gt;都通过为每个类分配一个或多个正态分布的点簇来创建多类数据集。&lt;a href=&quot;../modules/generated/sklearn.datasets.make_blobs#sklearn.datasets.make_blobs&quot;&gt; &lt;code&gt;make_blobs&lt;/code&gt; &lt;/a&gt;提供有关每个聚类的中心和标准偏差的更好控制，并用于演示聚类。&lt;a href=&quot;../modules/generated/sklearn.datasets.make_classification#sklearn.datasets.make_classification&quot;&gt; &lt;code&gt;make_classification&lt;/code&gt; &lt;/a&gt;专门通过以下方式引入噪声：相关，冗余和非信息性特征；每个类别有多个高斯聚类；以及特征空间的线性变换。</target>
        </trans-unit>
        <trans-unit id="4b01e39314cd0b6e82319a49bae49952bbdf5790" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;generated/sklearn.ensemble.gradientboostingregressor#sklearn.ensemble.GradientBoostingRegressor&quot;&gt;&lt;code&gt;GradientBoostingRegressor&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.ensemble.gradientboostingclassifier#sklearn.ensemble.GradientBoostingClassifier&quot;&gt;&lt;code&gt;GradientBoostingClassifier&lt;/code&gt;&lt;/a&gt; support &lt;code&gt;warm_start=True&lt;/code&gt; which allows you to add more estimators to an already fitted model.</source>
          <target state="translated">无论&lt;a href=&quot;generated/sklearn.ensemble.gradientboostingregressor#sklearn.ensemble.GradientBoostingRegressor&quot;&gt; &lt;code&gt;GradientBoostingRegressor&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;generated/sklearn.ensemble.gradientboostingclassifier#sklearn.ensemble.GradientBoostingClassifier&quot;&gt; &lt;code&gt;GradientBoostingClassifier&lt;/code&gt; &lt;/a&gt;支持 &lt;code&gt;warm_start=True&lt;/code&gt; 该让你更估计添加到已拟合模型。</target>
        </trans-unit>
        <trans-unit id="cf6c6c4310ce5d3e1dff50dd933fcb1d3d517f90" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;generated/sklearn.neural_network.mlpregressor#sklearn.neural_network.MLPRegressor&quot;&gt;&lt;code&gt;MLPRegressor&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.neural_network.mlpclassifier#sklearn.neural_network.MLPClassifier&quot;&gt;&lt;code&gt;MLPClassifier&lt;/code&gt;&lt;/a&gt; use parameter &lt;code&gt;alpha&lt;/code&gt; for regularization (L2 regularization) term which helps in avoiding overfitting by penalizing weights with large magnitudes. Following plot displays varying decision function with value of alpha.</source>
          <target state="translated">既&lt;a href=&quot;generated/sklearn.neural_network.mlpregressor#sklearn.neural_network.MLPRegressor&quot;&gt; &lt;code&gt;MLPRegressor&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;generated/sklearn.neural_network.mlpclassifier#sklearn.neural_network.MLPClassifier&quot;&gt; &lt;code&gt;MLPClassifier&lt;/code&gt; &lt;/a&gt;使用参数 &lt;code&gt;alpha&lt;/code&gt; 为正则化（L2正则化）术语，其有助于避免通过与大幅度惩罚加权过度拟合。下图显示了具有alpha值的变化决策函数。</target>
        </trans-unit>
        <trans-unit id="b53b3117e47a61020f59f56f0ab84443cf5a1cc4" translate="yes" xml:space="preserve">
          <source>Both &lt;strong&gt;tf&lt;/strong&gt; and &lt;strong&gt;tf&amp;ndash;idf&lt;/strong&gt; can be computed as follows using &lt;a href=&quot;../../modules/generated/sklearn.feature_extraction.text.tfidftransformer#sklearn.feature_extraction.text.TfidfTransformer&quot;&gt;&lt;code&gt;TfidfTransformer&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">两个&lt;strong&gt;TF&lt;/strong&gt;和&lt;strong&gt;TF-IDF&lt;/strong&gt;可以计算使用如下&lt;a href=&quot;../../modules/generated/sklearn.feature_extraction.text.tfidftransformer#sklearn.feature_extraction.text.TfidfTransformer&quot;&gt; &lt;code&gt;TfidfTransformer&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="4bf93c5f6114d3860df00831377e70ae0b54b0c9" translate="yes" xml:space="preserve">
          <source>Both Face Verification and Face Recognition are tasks that are typically performed on the output of a model trained to perform Face Detection. The most popular model for Face Detection is called Viola-Jones and is implemented in the OpenCV library. The LFW faces were extracted by this face detector from various online websites.</source>
          <target state="translated">人脸验证和人脸识别都是典型的任务,它们都是在训练成的模型的输出上进行人脸检测。最流行的人脸检测模型叫做Viola-Jones,是在OpenCV库中实现的。LFW人脸是由该人脸检测器从各种在线网站上提取的。</target>
        </trans-unit>
        <trans-unit id="91e41139595583cca1f08b85e6f25218cb1d806a" translate="yes" xml:space="preserve">
          <source>Both LDA and QDA can be derived from simple probabilistic models which model the class conditional distribution of the data \(P(X|y=k)\) for each class \(k\). Predictions can then be obtained by using Bayes&amp;rsquo; rule:</source>
          <target state="translated">LDA和QDA都可以从简单的概率模型中得出，该模型为每个类\（k \）建模数据\（P（X | y = k）\）的类条件分布。然后可以使用贝叶斯规则获得预测：</target>
        </trans-unit>
        <trans-unit id="88ef4403ed65b61f6ce7d70445c003a80e194980" translate="yes" xml:space="preserve">
          <source>Both a large or small &lt;code&gt;leaf_size&lt;/code&gt; can lead to suboptimal query cost. For &lt;code&gt;leaf_size&lt;/code&gt; approaching 1, the overhead involved in traversing nodes can significantly slow query times. For &lt;code&gt;leaf_size&lt;/code&gt; approaching the size of the training set, queries become essentially brute force. A good compromise between these is &lt;code&gt;leaf_size = 30&lt;/code&gt;, the default value of the parameter.</source>
          <target state="translated">较大或较小的 &lt;code&gt;leaf_size&lt;/code&gt; 都可能导致查询成本欠佳。对于 &lt;code&gt;leaf_size&lt;/code&gt; 接近1的情况，遍历节点所涉及的开销可能会大大减慢查询时间。对于接近训练集大小的 &lt;code&gt;leaf_size&lt;/code&gt; ，查询本质上成为蛮力。两者之间的一个很好的折衷是参数的默认值 &lt;code&gt;leaf_size = 30&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fa5698e1f194999c5b948025698f212260de6074" translate="yes" xml:space="preserve">
          <source>Both for the &lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_lfw_people#sklearn.datasets.fetch_lfw_people&quot;&gt;&lt;code&gt;sklearn.datasets.fetch_lfw_people&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_lfw_pairs#sklearn.datasets.fetch_lfw_pairs&quot;&gt;&lt;code&gt;sklearn.datasets.fetch_lfw_pairs&lt;/code&gt;&lt;/a&gt; function it is possible to get an additional dimension with the RGB color channels by passing &lt;code&gt;color=True&lt;/code&gt;, in that case the shape will be &lt;code&gt;(2200, 2, 62, 47, 3)&lt;/code&gt;.</source>
          <target state="translated">对于&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_lfw_people#sklearn.datasets.fetch_lfw_people&quot;&gt; &lt;code&gt;sklearn.datasets.fetch_lfw_people&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_lfw_pairs#sklearn.datasets.fetch_lfw_pairs&quot;&gt; &lt;code&gt;sklearn.datasets.fetch_lfw_pairs&lt;/code&gt; &lt;/a&gt;函数，都可以通过传递 &lt;code&gt;color=True&lt;/code&gt; 获得RGB颜色通道的附加尺寸，在这种情况下，形状将为 &lt;code&gt;(2200, 2, 62, 47, 3)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f849c057a89abeca98a91c38c141c4422d4b9044" translate="yes" xml:space="preserve">
          <source>Both kernel ridge regression (KRR) and GPR learn a target function by employing internally the &amp;ldquo;kernel trick&amp;rdquo;. KRR learns a linear function in the space induced by the respective kernel which corresponds to a non-linear function in the original space. The linear function in the kernel space is chosen based on the mean-squared error loss with ridge regularization. GPR uses the kernel to define the covariance of a prior distribution over the target functions and uses the observed training data to define a likelihood function. Based on Bayes theorem, a (Gaussian) posterior distribution over target functions is defined, whose mean is used for prediction.</source>
          <target state="translated">内核岭回归（KRR）和GPR都通过内部使用&amp;ldquo;内核技巧&amp;rdquo;来学习目标函数。 KRR学习由相应内核诱导的空间中的线性函数，该函数对应于原始空间中的非线性函数。基于具有岭正则化的均方误差损失来选择内核空间中的线性函数。 GPR使用内核定义目标函数上先验分布的协方差，并使用观察到的训练数据定义似然函数。基于贝叶斯定理，定义了目标函数的（高斯）后验分布，其均值用于预测。</target>
        </trans-unit>
        <trans-unit id="23db30f840724e288d4f8f1371ac596206d41d32" translate="yes" xml:space="preserve">
          <source>Both kernel ridge regression (KRR) and Gaussian process regression (GPR) learn a target function by employing internally the &amp;ldquo;kernel trick&amp;rdquo;. KRR learns a linear function in the space induced by the respective kernel which corresponds to a non-linear function in the original space. The linear function in the kernel space is chosen based on the mean-squared error loss with ridge regularization. GPR uses the kernel to define the covariance of a prior distribution over the target functions and uses the observed training data to define a likelihood function. Based on Bayes theorem, a (Gaussian) posterior distribution over target functions is defined, whose mean is used for prediction.</source>
          <target state="translated">内核岭回归（KRR）和高斯过程回归（GPR）都通过内部采用&amp;ldquo;内核技巧&amp;rdquo;来学习目标函数。 KRR学习由相应内核诱导的空间中的线性函数，该函数对应于原始空间中的非线性函数。基于具有岭正则化的均方误差损失来选择内核空间中的线性函数。 GPR使用内核定义目标函数上先验分布的协方差，并使用观察到的训练数据定义似然函数。基于贝叶斯定理，定义了目标函数的（高斯）后验分布，其均值用于预测。</target>
        </trans-unit>
        <trans-unit id="a2ae11bd288fcc4a889903f5cd55e2c7dc5062c9" translate="yes" xml:space="preserve">
          <source>Both kernel ridge regression (KRR) and SVR learn a non-linear function by employing the kernel trick, i.e., they learn a linear function in the space induced by the respective kernel which corresponds to a non-linear function in the original space. They differ in the loss functions (ridge versus epsilon-insensitive loss). In contrast to SVR, fitting a KRR can be done in closed-form and is typically faster for medium-sized datasets. On the other hand, the learned model is non-sparse and thus slower than SVR at prediction-time.</source>
          <target state="translated">核脊回归(KRR)和SVR都是通过采用内核技巧来学习一个非线性函数,即它们在各自内核诱导的空间中学习一个线性函数,而这个线性函数对应的是原始空间中的一个非线性函数。它们在损失函数上有所不同(脊与epsilon不敏感损失)。与SVR相比,拟合KRR可以在闭合形式中完成,通常对于中等规模的数据集来说速度更快。另一方面,学习的模型是非稀疏的,因此在预测时比SVR慢。</target>
        </trans-unit>
        <trans-unit id="9f6802fa6da263e373ed1a0b728e154415b2fd58" translate="yes" xml:space="preserve">
          <source>Both kinds of calibration can fix this issue and yield nearly identical results. This shows that sigmoid calibration can deal with situations where the calibration curve of the base classifier is sigmoid (e.g., for LinearSVC) but not where it is transposed-sigmoid (e.g., Gaussian naive Bayes).</source>
          <target state="translated">两种校准都可以解决这个问题,并得到几乎相同的结果。这表明,sigmoid校准可以处理基础分类器的校准曲线是sigmoid的情况(如LinearSVC),但不能处理转置-sigmoid的情况(如Gaussian naive Bayes)。</target>
        </trans-unit>
        <trans-unit id="708135c11a370a819f586687e493e8e334b863bb" translate="yes" xml:space="preserve">
          <source>Both linear models have linear decision boundaries (intersecting hyperplanes) while the non-linear kernel models (polynomial or Gaussian RBF) have more flexible non-linear decision boundaries with shapes that depend on the kind of kernel and its parameters.</source>
          <target state="translated">两种线性模型的决策边界都是线性的(相交的超平面),而非线性内核模型(多项式或高斯RBF)的非线性决策边界更加灵活,其形状取决于内核的种类及其参数。</target>
        </trans-unit>
        <trans-unit id="fc56722e0a950bb51331dfd1a0000b2f92f9cd59" translate="yes" xml:space="preserve">
          <source>Both loaders and fetchers functions return a dictionary-like object holding at least two items: an array of shape &lt;code&gt;n_samples&lt;/code&gt; * &lt;code&gt;n_features&lt;/code&gt; with key &lt;code&gt;data&lt;/code&gt; (except for 20newsgroups) and a numpy array of length &lt;code&gt;n_samples&lt;/code&gt;, containing the target values, with key &lt;code&gt;target&lt;/code&gt;.</source>
          <target state="translated">既装载机和取程序函数返回一个类字典对象保持至少两个项目：形状的阵列 &lt;code&gt;n_samples&lt;/code&gt; * &lt;code&gt;n_features&lt;/code&gt; 与关键 &lt;code&gt;data&lt;/code&gt; （除了20newsgroups）和长度的numpy的阵列 &lt;code&gt;n_samples&lt;/code&gt; ，将含有目标值，与关键 &lt;code&gt;target&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c429ee44d91d629f81b84bf7db1e8151de09efd7" translate="yes" xml:space="preserve">
          <source>Both methods are compared in a regression problem using a BayesianRidge as supervised estimator.</source>
          <target state="translated">在使用BayesianRidge作为监督估计器的回归问题中,两种方法进行了比较。</target>
        </trans-unit>
        <trans-unit id="9c567880fbb130b2f00326a7eed156cd91692677" translate="yes" xml:space="preserve">
          <source>Both models essentially estimate a Gaussian with a low-rank covariance matrix. Because both models are probabilistic they can be integrated in more complex models, e.g. Mixture of Factor Analysers. One gets very different models (e.g. &lt;a href=&quot;generated/sklearn.decomposition.fastica#sklearn.decomposition.FastICA&quot;&gt;&lt;code&gt;FastICA&lt;/code&gt;&lt;/a&gt;) if non-Gaussian priors on the latent variables are assumed.</source>
          <target state="translated">两种模型本质上都估计具有低秩协方差矩阵的高斯模型。由于这两个模型都是概率模型，因此可以将它们集成到更复杂的模型中，例如因子分析仪的混合物。如果假设潜在变量的非高斯先验，则得到的模型会非常不同（例如&lt;a href=&quot;generated/sklearn.decomposition.fastica#sklearn.decomposition.FastICA&quot;&gt; &lt;code&gt;FastICA&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="a62e9a7de64eaa33971b5c3675cc0b062a65784c" translate="yes" xml:space="preserve">
          <source>Both models have access to five components with which to fit the data. Note that the Expectation Maximisation model will necessarily use all five components while the Variational Inference model will effectively only use as many as are needed for a good fit. Here we can see that the Expectation Maximisation model splits some components arbitrarily, because it is trying to fit too many components, while the Dirichlet Process model adapts it number of state automatically.</source>
          <target state="translated">这两种模型都可以使用五个组件来拟合数据。请注意,期望值最大化模型必然会使用所有五个组件,而变量推断模型将有效地只使用良好拟合所需的组件。在这里我们可以看到,期望最大化模型任意分割一些组件,因为它试图拟合太多的组件,而Dirichlet Process模型则自动适应它的状态数。</target>
        </trans-unit>
        <trans-unit id="5b17a14614025b8fc55b61f491f7a477ebf75742" translate="yes" xml:space="preserve">
          <source>Both scores have positive values between 0.0 and 1.0, larger values being desirable.</source>
          <target state="translated">这两个分数的正值都在0.0~1.0之间,数值越大越好。</target>
        </trans-unit>
        <trans-unit id="be67d7e7cbf7e3b7b92ab971146cc493ee899201" translate="yes" xml:space="preserve">
          <source>Box-Cox can only be applied to strictly positive data. In both methods, the transformation is parameterized by \(\lambda\), which is determined through maximum likelihood estimation. Here is an example of using Box-Cox to map samples drawn from a lognormal distribution to a normal distribution:</source>
          <target state="translated">Box-Cox只能应用于严格的正数据。在这两种方法中,变换的参数是通过最大似然估计确定的。下面是一个使用Box-Cox将样本从对数正态分布映射到正态分布的例子。</target>
        </trans-unit>
        <trans-unit id="3b31bca12137b60e3b02c5fa6fcbe997bf063055" translate="yes" xml:space="preserve">
          <source>Box-Cox requires input data to be strictly positive, while Yeo-Johnson supports both positive or negative data.</source>
          <target state="translated">Box-Cox要求输入数据严格为正,而Yeo-Johnson支持正或负数据。</target>
        </trans-unit>
        <trans-unit id="3a33122410e3d55ce36b5d7a297f38716ddc9fb2" translate="yes" xml:space="preserve">
          <source>BrayCurtisDistance</source>
          <target state="translated">BrayCurtisDistance</target>
        </trans-unit>
        <trans-unit id="9567cb56bbf5a464a471c7e7c0603402f701c1b5" translate="yes" xml:space="preserve">
          <source>Breiman, &amp;ldquo;Arcing Classifiers&amp;rdquo;, Annals of Statistics 1998.</source>
          <target state="translated">Breiman，&amp;ldquo; Arcing分类器&amp;rdquo;，《统计年鉴》，1998年。</target>
        </trans-unit>
        <trans-unit id="b92ea166bdb68582b38ba5d28898e88166331fb5" translate="yes" xml:space="preserve">
          <source>Breiman, &amp;ldquo;Random Forests&amp;rdquo;, Machine Learning, 45(1), 5-32, 2001.</source>
          <target state="translated">Breiman，&amp;ldquo;随机森林&amp;rdquo;，机器学习，45（1），5-32，2001。</target>
        </trans-unit>
        <trans-unit id="e706a24019de3d6255ea9f7b340895835c77d481" translate="yes" xml:space="preserve">
          <source>Brendan J. Frey and Delbert Dueck, &amp;ldquo;Clustering by Passing Messages Between Data Points&amp;rdquo;, Science Feb. 2007</source>
          <target state="translated">Brendan J. Frey和Delbert Dueck，&amp;ldquo;通过在数据点之间传递消息进行聚类&amp;rdquo;，《科学》，2007年2月</target>
        </trans-unit>
        <trans-unit id="91c2780c7ce208d81dbc70c79b98b19c560e01f7" translate="yes" xml:space="preserve">
          <source>Breunig, Kriegel, Ng, and Sander (2000) &lt;a href=&quot;http://www.dbs.ifi.lmu.de/Publikationen/Papers/LOF.pdf&quot;&gt;LOF: identifying density-based local outliers.&lt;/a&gt; Proc. ACM SIGMOD</source>
          <target state="translated">Breunig，Kriegel，Ng和Sander（2000）&lt;a href=&quot;http://www.dbs.ifi.lmu.de/Publikationen/Papers/LOF.pdf&quot;&gt;LOF：识别基于密度的局部离群值。&lt;/a&gt;进程 ACM SIGMOD</target>
        </trans-unit>
        <trans-unit id="b62edbfb07bbbc25ba8cf8bbc25ed044eba7bbe5" translate="yes" xml:space="preserve">
          <source>Breunig, M. M., Kriegel, H. P., Ng, R. T., &amp;amp; Sander, J. (2000, May). LOF: identifying density-based local outliers. In ACM sigmod record.</source>
          <target state="translated">Breunig，MM，Kriegel，HP，Ng，RT，＆Sander，J.（2000年5月）。LOF：确定基于密度的局部离群值。在ACM sigmod记录中。</target>
        </trans-unit>
        <trans-unit id="fb0165005c94e23be947347cfac674726ddcc8f3" translate="yes" xml:space="preserve">
          <source>Brier score</source>
          <target state="translated">Brier得分</target>
        </trans-unit>
        <trans-unit id="ce9563b2203c4e120af29d083264cdec661286f1" translate="yes" xml:space="preserve">
          <source>Brodersen, K.H.; Ong, C.S.; Stephan, K.E.; Buhmann, J.M. (2010). The balanced accuracy and its posterior distribution. Proceedings of the 20th International Conference on Pattern Recognition, 3121-24.</source>
          <target state="translated">Brodersen,K.H.;Ong,C.S.;Stephan,K.E.;Buhmann,J.M.(2010).平衡精度及其后验分布。第20届国际模式识别会议论文集,3121-24。</target>
        </trans-unit>
        <trans-unit id="3a47350b7d7cb691a01ccff5ad5d3aca87290c28" translate="yes" xml:space="preserve">
          <source>Brown</source>
          <target state="translated">Brown</target>
        </trans-unit>
        <trans-unit id="5b66173631e06f3f28d6125b3cb26a28cb7fca86" translate="yes" xml:space="preserve">
          <source>Build a Bagging ensemble of estimators from the training</source>
          <target state="translated">从训练中建立一个估计器的袋装集合。</target>
        </trans-unit>
        <trans-unit id="794678e50f47205b9017d4e509f3518d6f5fadf5" translate="yes" xml:space="preserve">
          <source>Build a Bagging ensemble of estimators from the training set (X, y).</source>
          <target state="translated">从训练集(X,y)建立一个估计器的Bagging合集。</target>
        </trans-unit>
        <trans-unit id="187f33f95926319c2456d01efd577acf94dfa6ae" translate="yes" xml:space="preserve">
          <source>Build a CF Tree for the input data.</source>
          <target state="translated">为输入的数据建立一个CF树。</target>
        </trans-unit>
        <trans-unit id="1e09fb3267f6b0d5980c9be2a9dffb892209f693" translate="yes" xml:space="preserve">
          <source>Build a boosted classifier from the training set (X, y).</source>
          <target state="translated">从训练集(X,y)建立一个提升分类器。</target>
        </trans-unit>
        <trans-unit id="bb1580cf6761f3cb6ad38eda4b239ef5f0001320" translate="yes" xml:space="preserve">
          <source>Build a boosted regressor from the training set (X, y).</source>
          <target state="translated">从训练集(X,y)建立一个提升的回归器。</target>
        </trans-unit>
        <trans-unit id="250228e6d05087ab14d0d947456ba0aa59ea7050" translate="yes" xml:space="preserve">
          <source>Build a contingency matrix describing the relationship between labels.</source>
          <target state="translated">建立一个描述标签之间关系的应急矩阵。</target>
        </trans-unit>
        <trans-unit id="d74890ceefdff850d4364b5427ecc2c4535dee78" translate="yes" xml:space="preserve">
          <source>Build a decision tree classifier from the training set (X, y).</source>
          <target state="translated">从训练集(X,y)建立一个决策树分类器。</target>
        </trans-unit>
        <trans-unit id="2b1b91e53bab7f86a619b51147d8ac61611972f5" translate="yes" xml:space="preserve">
          <source>Build a decision tree regressor from the training set (X, y).</source>
          <target state="translated">从训练集(X,y)建立决策树回归器。</target>
        </trans-unit>
        <trans-unit id="255fad2483c531d4d8beb88f94f03694ee2b25aa" translate="yes" xml:space="preserve">
          <source>Build a forest of trees from the training set (X, y).</source>
          <target state="translated">从训练集(X,y)建立一个树林。</target>
        </trans-unit>
        <trans-unit id="54ca7aba833ca6776a4b555adf51f52c37364032" translate="yes" xml:space="preserve">
          <source>Build a text report showing the main classification metrics</source>
          <target state="translated">建立一个文本报告,显示主要的分类指标。</target>
        </trans-unit>
        <trans-unit id="657256d2b304ff4131eae140a5931256c38a3879" translate="yes" xml:space="preserve">
          <source>Build or fetch the effective stop words list</source>
          <target state="translated">建立或获取有效的停顿词列表</target>
        </trans-unit>
        <trans-unit id="1696170a9053ac1d87e48bfb4ce1d22a7e994777" translate="yes" xml:space="preserve">
          <source>Building a pipeline</source>
          <target state="translated">建立一个管道</target>
        </trans-unit>
        <trans-unit id="6b9d2f152fc732c61d6802508ad1d27938fd60fa" translate="yes" xml:space="preserve">
          <source>By &lt;strong&gt;averaging&lt;/strong&gt; the estimates of predictive ability over several randomized trees one can &lt;strong&gt;reduce the variance&lt;/strong&gt; of such an estimate and use it for feature selection. This is known as the mean decrease in impurity, or MDI. Refer to &lt;a href=&quot;#l2014&quot; id=&quot;id7&quot;&gt;[L2014]&lt;/a&gt; for more information on MDI and feature importance evaluation with Random Forests.</source>
          <target state="translated">通过对几棵随机树上的预测能力估计值求&lt;strong&gt;平均&lt;/strong&gt;，可以&lt;strong&gt;减少&lt;/strong&gt;这种估计值&lt;strong&gt;的方差&lt;/strong&gt;，并将其用于特征选择。这称为杂质的平均减少量或MDI。有关随机森林的MDI和功能重要性评估的更多信息，请参见&lt;a href=&quot;#l2014&quot; id=&quot;id7&quot;&gt;[L2014]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4271aec9443f091b8f5d73284775ad1de7a16657" translate="yes" xml:space="preserve">
          <source>By contrast, in &lt;strong&gt;boosting methods&lt;/strong&gt;, base estimators are built sequentially and one tries to reduce the bias of the combined estimator. The motivation is to combine several weak models to produce a powerful ensemble.</source>
          <target state="translated">相比之下，在&lt;strong&gt;增强方法中&lt;/strong&gt;，基础估计器是按顺序构建的，并且尝试减小组合估计器的偏差。这样做的动机是结合几个弱模型以产生强大的整体。</target>
        </trans-unit>
        <trans-unit id="6c32bdf454c04c997b80ade2a7001005f06bf56a" translate="yes" xml:space="preserve">
          <source>By default \(\alpha_1 = \alpha_2 = \lambda_1 = \lambda_2 = 10^{-6}\).</source>
          <target state="translated">默认情况下((alpha_1=alpha_2=lambda_1=lambda_2=10^{-6})\。</target>
        </trans-unit>
        <trans-unit id="471aed0559b4b66da1109f2dd8bd4a3412768eaf" translate="yes" xml:space="preserve">
          <source>By default all available workers will be used (&lt;code&gt;n_jobs=-1&lt;/code&gt;) unless the caller passes an explicit value for the &lt;code&gt;n_jobs&lt;/code&gt; parameter.</source>
          <target state="translated">默认情况下，将使用所有可用的工作程序（ &lt;code&gt;n_jobs=-1&lt;/code&gt; ），除非调用者为 &lt;code&gt;n_jobs&lt;/code&gt; 参数传递一个显式值。</target>
        </trans-unit>
        <trans-unit id="5f6c87aa078eb9e4a070352402cf9ac4b38861b8" translate="yes" xml:space="preserve">
          <source>By default no shuffling occurs, including for the (stratified) K fold cross- validation performed by specifying &lt;code&gt;cv=some_integer&lt;/code&gt; to &lt;a href=&quot;generated/sklearn.model_selection.cross_val_score#sklearn.model_selection.cross_val_score&quot;&gt;&lt;code&gt;cross_val_score&lt;/code&gt;&lt;/a&gt;, grid search, etc. Keep in mind that &lt;a href=&quot;generated/sklearn.model_selection.train_test_split#sklearn.model_selection.train_test_split&quot;&gt;&lt;code&gt;train_test_split&lt;/code&gt;&lt;/a&gt; still returns a random split.</source>
          <target state="translated">默认情况下，不会发生混洗，包括通过指定 &lt;code&gt;cv=some_integer&lt;/code&gt; 到&lt;a href=&quot;generated/sklearn.model_selection.cross_val_score#sklearn.model_selection.cross_val_score&quot;&gt; &lt;code&gt;cross_val_score&lt;/code&gt; &lt;/a&gt;，网格搜索等进行的（分层）K折交叉验证。请记住，&lt;a href=&quot;generated/sklearn.model_selection.train_test_split#sklearn.model_selection.train_test_split&quot;&gt; &lt;code&gt;train_test_split&lt;/code&gt; &lt;/a&gt;仍然返回随机分割。</target>
        </trans-unit>
        <trans-unit id="e7a2fba0300cf0e1fb0a656c1e5e19ff70aee869" translate="yes" xml:space="preserve">
          <source>By default the data dir is set to a folder named &amp;lsquo;scikit_learn_data&amp;rsquo; in the user home folder.</source>
          <target state="translated">默认情况下，数据目录设置为用户主文件夹中名为&amp;ldquo; scikit_learn_data&amp;rdquo;的文件夹。</target>
        </trans-unit>
        <trans-unit id="78999f1442e19c854d03f2d5d120c491c2044f43" translate="yes" xml:space="preserve">
          <source>By default the estimator&amp;rsquo;s &lt;code&gt;score&lt;/code&gt; method is used to compute the individual scores.</source>
          <target state="translated">默认情况下，估算器的 &lt;code&gt;score&lt;/code&gt; 方法用于计算各个得分。</target>
        </trans-unit>
        <trans-unit id="4b5dc2d778b41c185a986f8e9ad3bff91cf8ed7b" translate="yes" xml:space="preserve">
          <source>By default the following backends are available:</source>
          <target state="translated">默认情况下,以下后端可用。</target>
        </trans-unit>
        <trans-unit id="c9a567aacd54237b7723e5584e83694cffe0556c" translate="yes" xml:space="preserve">
          <source>By default the gradient calculation algorithm uses Barnes-Hut approximation running in O(NlogN) time. method=&amp;rsquo;exact&amp;rsquo; will run on the slower, but exact, algorithm in O(N^2) time. The exact algorithm should be used when nearest-neighbor errors need to be better than 3%. However, the exact method cannot scale to millions of examples.</source>
          <target state="translated">默认情况下，梯度计算算法使用以O（NlogN）时间运行的Barnes-Hut逼近。method ='exact'将在O（N ^ 2）时间内以较慢但精确的算法运行。当最近邻居误差需要大于3％时，应使用精确算法。但是，确切的方法无法扩展到数百万个示例。</target>
        </trans-unit>
        <trans-unit id="572245e5c8e088605558017246250c8893d52627" translate="yes" xml:space="preserve">
          <source>By default the order will be determined by the order of columns in the label matrix Y.:</source>
          <target state="translated">默认情况下,顺序将由标签矩阵Y中列的顺序决定。</target>
        </trans-unit>
        <trans-unit id="cab46542ee630d0794253cdc9adb3976a1835662" translate="yes" xml:space="preserve">
          <source>By default the output is one-hot encoded into a sparse matrix (See &lt;a href=&quot;#preprocessing-categorical-features&quot;&gt;Encoding categorical features&lt;/a&gt;) and this can be configured with the &lt;code&gt;encode&lt;/code&gt; parameter. For each feature, the bin edges are computed during &lt;code&gt;fit&lt;/code&gt; and together with the number of bins, they will define the intervals. Therefore, for the current example, these intervals are defined as:</source>
          <target state="translated">默认情况下，将输出一键编码到稀疏矩阵中（请参阅&lt;a href=&quot;#preprocessing-categorical-features&quot;&gt;Encoding categorical features&lt;/a&gt;），并且可以使用 &lt;code&gt;encode&lt;/code&gt; 参数进行配置。对于每个特征，将在 &lt;code&gt;fit&lt;/code&gt; 过程中计算仓边，并与仓数一起定义间隔。因此，对于当前示例，这些间隔定义为：</target>
        </trans-unit>
        <trans-unit id="7638d24983f6f0c8d02846709e02c43bfb3124b9" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;generated/sklearn.decomposition.minibatchdictionarylearning#sklearn.decomposition.MiniBatchDictionaryLearning&quot;&gt;&lt;code&gt;MiniBatchDictionaryLearning&lt;/code&gt;&lt;/a&gt; divides the data into mini-batches and optimizes in an online manner by cycling over the mini-batches for the specified number of iterations. However, at the moment it does not implement a stopping condition.</source>
          <target state="translated">默认情况下，&lt;a href=&quot;generated/sklearn.decomposition.minibatchdictionarylearning#sklearn.decomposition.MiniBatchDictionaryLearning&quot;&gt; &lt;code&gt;MiniBatchDictionaryLearning&lt;/code&gt; &lt;/a&gt;将数据划分为多个迷你批，并通过在迷你批上循环指定的迭代次数以在线方式进行优化。但是，目前还没有实现停止条件。</target>
        </trans-unit>
        <trans-unit id="2eb2435c3e98faf455297cd059d456431f056aed" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;float16&lt;/code&gt; results are computed using &lt;code&gt;float32&lt;/code&gt; intermediates for extra precision.</source>
          <target state="translated">默认情况下，使用 &lt;code&gt;float32&lt;/code&gt; 中间体计算 &lt;code&gt;float16&lt;/code&gt; 结果可获得更高的精度。</target>
        </trans-unit>
        <trans-unit id="06b991078a7a86c59d05afe16f66234f800e038c" translate="yes" xml:space="preserve">
          <source>By default, LocalOutlierFactor is only meant to be used for outlier detection (novelty=False). Set novelty to True if you want to use LocalOutlierFactor for novelty detection. In this case be aware that that you should only use predict, decision_function and score_samples on new unseen data and not on the training set.</source>
          <target state="translated">默认情况下,LocalOutlierFactor只用于离群值检测(novelty=False)。如果你想使用LocalOutlierFactor进行新奇点检测,请将novelty设置为True。在这种情况下,请注意,你应该只在新的未见数据上使用predict,decision_function和score_samples,而不是训练集。</target>
        </trans-unit>
        <trans-unit id="2fb7ae3e457e09c80061e4212540f2949867d13f" translate="yes" xml:space="preserve">
          <source>By default, it performs Generalized Cross-Validation, which is a form of efficient Leave-One-Out cross-validation.</source>
          <target state="translated">默认情况下,它执行广义交叉验证,这是一种高效的留一漏一交叉验证的形式。</target>
        </trans-unit>
        <trans-unit id="76317967f826fa82a2b4a34c8b9f11ee88f99afc" translate="yes" xml:space="preserve">
          <source>By default, it performs Generalized Cross-Validation, which is a form of efficient Leave-One-Out cross-validation. Currently, only the n_features &amp;gt; n_samples case is handled efficiently.</source>
          <target state="translated">默认情况下，它执行通用交叉验证，这是一种有效的&amp;ldquo;留一法&amp;rdquo;交叉验证的形式。当前，仅有效处理n_features&amp;gt; n_samples种情况。</target>
        </trans-unit>
        <trans-unit id="7750d963aa2e941a76e470078ac6c086adc6dcda" translate="yes" xml:space="preserve">
          <source>By default, only the specified columns in &lt;code&gt;transformers&lt;/code&gt; are transformed and combined in the output, and the non-specified columns are dropped. (default of &lt;code&gt;'drop'&lt;/code&gt;). By specifying &lt;code&gt;remainder='passthrough'&lt;/code&gt;, all remaining columns that were not specified in &lt;code&gt;transformers&lt;/code&gt; will be automatically passed through. This subset of columns is concatenated with the output of the transformers. By setting &lt;code&gt;remainder&lt;/code&gt; to be an estimator, the remaining non-specified columns will use the &lt;code&gt;remainder&lt;/code&gt; estimator. The estimator must support &lt;code&gt;fit&lt;/code&gt; and &lt;code&gt;transform&lt;/code&gt;.</source>
          <target state="translated">默认情况下，仅 &lt;code&gt;transformers&lt;/code&gt; 中指定的列会在输出中进行转换和合并，未指定的列将被删除。 （默认为 &lt;code&gt;'drop'&lt;/code&gt; ）。通过指定 &lt;code&gt;remainder='passthrough'&lt;/code&gt; ，所有未在 &lt;code&gt;transformers&lt;/code&gt; 指定的列将自动通过。列的此子集与变压器的输出串联在一起。通过将 &lt;code&gt;remainder&lt;/code&gt; 设置为估算器，其余未指定的列将使用 &lt;code&gt;remainder&lt;/code&gt; 估算器。估计器必须支持 &lt;code&gt;fit&lt;/code&gt; 和 &lt;code&gt;transform&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4a782d670d6fc36b236c4a8940c016b292a90c5d" translate="yes" xml:space="preserve">
          <source>By default, parameter search uses the &lt;code&gt;score&lt;/code&gt; function of the estimator to evaluate a parameter setting. These are the &lt;a href=&quot;generated/sklearn.metrics.accuracy_score#sklearn.metrics.accuracy_score&quot;&gt;&lt;code&gt;sklearn.metrics.accuracy_score&lt;/code&gt;&lt;/a&gt; for classification and &lt;a href=&quot;generated/sklearn.metrics.r2_score#sklearn.metrics.r2_score&quot;&gt;&lt;code&gt;sklearn.metrics.r2_score&lt;/code&gt;&lt;/a&gt; for regression. For some applications, other scoring functions are better suited (for example in unbalanced classification, the accuracy score is often uninformative). An alternative scoring function can be specified via the &lt;code&gt;scoring&lt;/code&gt; parameter to &lt;a href=&quot;generated/sklearn.model_selection.gridsearchcv#sklearn.model_selection.GridSearchCV&quot;&gt;&lt;code&gt;GridSearchCV&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/sklearn.model_selection.randomizedsearchcv#sklearn.model_selection.RandomizedSearchCV&quot;&gt;&lt;code&gt;RandomizedSearchCV&lt;/code&gt;&lt;/a&gt; and many of the specialized cross-validation tools described below. See &lt;a href=&quot;model_evaluation#scoring-parameter&quot;&gt;The scoring parameter: defining model evaluation rules&lt;/a&gt; for more details.</source>
          <target state="translated">默认情况下，参数搜索使用估计器的 &lt;code&gt;score&lt;/code&gt; 功能来评估参数设置。这些是用于分类的&lt;a href=&quot;generated/sklearn.metrics.accuracy_score#sklearn.metrics.accuracy_score&quot;&gt; &lt;code&gt;sklearn.metrics.accuracy_score&lt;/code&gt; &lt;/a&gt;和用于回归的&lt;a href=&quot;generated/sklearn.metrics.r2_score#sklearn.metrics.r2_score&quot;&gt; &lt;code&gt;sklearn.metrics.r2_score&lt;/code&gt; &lt;/a&gt;。对于某些应用程序，其他计分功能更适合（例如，在不平衡分类中，准确性得分通常不具信息性）。可以通过&lt;a href=&quot;generated/sklearn.model_selection.gridsearchcv#sklearn.model_selection.GridSearchCV&quot;&gt; &lt;code&gt;GridSearchCV&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;generated/sklearn.model_selection.randomizedsearchcv#sklearn.model_selection.RandomizedSearchCV&quot;&gt; &lt;code&gt;RandomizedSearchCV&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;scoring&lt;/code&gt; 参数以及下面介绍的许多专用交叉验证工具来指定替代评分功能。有关更多详细信息，请参阅&lt;a href=&quot;model_evaluation#scoring-parameter&quot;&gt;评分参数：定义模型评估规则&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cd89643870e89d7d33668ed08a7b04e11606d0f7" translate="yes" xml:space="preserve">
          <source>By default, the &lt;a href=&quot;../../modules/generated/sklearn.model_selection.gridsearchcv#sklearn.model_selection.GridSearchCV&quot;&gt;&lt;code&gt;GridSearchCV&lt;/code&gt;&lt;/a&gt; uses a 3-fold cross-validation. However, if it detects that a classifier is passed, rather than a regressor, it uses a stratified 3-fold. The default will change to a 5-fold cross-validation in version 0.22.</source>
          <target state="translated">默认情况下，&lt;a href=&quot;../../modules/generated/sklearn.model_selection.gridsearchcv#sklearn.model_selection.GridSearchCV&quot;&gt; &lt;code&gt;GridSearchCV&lt;/code&gt; &lt;/a&gt;使用3倍交叉验证。但是，如果检测到通过了分类器而不是回归器，则使用分层的3折。默认值将在0.22版中更改为5倍交叉验证。</target>
        </trans-unit>
        <trans-unit id="aabd7b3f7cca56e260a395d6492aceaf31d56d74" translate="yes" xml:space="preserve">
          <source>By default, the encoder derives the categories based on the unique values in each feature. Alternatively, you can also specify the &lt;code&gt;categories&lt;/code&gt; manually. The OneHotEncoder previously assumed that the input features take on values in the range [0, max(values)). This behaviour is deprecated.</source>
          <target state="translated">默认情况下，编码器会根据每个功能中的唯一值得出类别。或者，您也可以手动指定 &lt;code&gt;categories&lt;/code&gt; 。OneHotEncoder先前假设输入要素的取值范围为[0，max（values））。不建议使用此行为。</target>
        </trans-unit>
        <trans-unit id="0397cff741cdca99d6793cf68ca8a230e768dce2" translate="yes" xml:space="preserve">
          <source>By default, the input is converted to an at least 2D numpy array. If the dtype of the array is object, attempt converting to float, raising on failure.</source>
          <target state="translated">默认情况下,输入的数据会被转换为至少一个2D的numpy数组。如果数组的dtype是object,则尝试转换为float,失败时引发。</target>
        </trans-unit>
        <trans-unit id="9dfabb9221fc44d77597df9d22d00887ce88c6cb" translate="yes" xml:space="preserve">
          <source>By default, the provided functions are checked at each fit to be the inverse of each other. However, it is possible to bypass this checking by setting &lt;code&gt;check_inverse&lt;/code&gt; to &lt;code&gt;False&lt;/code&gt;:</source>
          <target state="translated">默认情况下，将在每次拟合时检查提供的函数是否彼此相反。但是，可以通过将 &lt;code&gt;check_inverse&lt;/code&gt; 设置为 &lt;code&gt;False&lt;/code&gt; 来绕过此检查：</target>
        </trans-unit>
        <trans-unit id="761cb5c85c42ad01cf3595b928efe71009e68e6e" translate="yes" xml:space="preserve">
          <source>By default, the score computed at each CV iteration is the &lt;code&gt;score&lt;/code&gt; method of the estimator. It is possible to change this by using the scoring parameter:</source>
          <target state="translated">默认情况下，在每次CV迭代中计算的 &lt;code&gt;score&lt;/code&gt; 是估算器的分数方法。可以通过使用评分参数来更改此设置：</target>
        </trans-unit>
        <trans-unit id="61fe756b7e3e334c670a2007b6939f399986a294" translate="yes" xml:space="preserve">
          <source>By default, the values each feature can take is inferred automatically from the dataset and can be found in the &lt;code&gt;categories_&lt;/code&gt; attribute:</source>
          <target state="translated">默认情况下，每个功能可以采用的值是从数据集中自动推断出的，并且可以在 &lt;code&gt;categories_&lt;/code&gt; 属性中找到：</target>
        </trans-unit>
        <trans-unit id="588af344f8a3913fdf9179a25370573310fcee34" translate="yes" xml:space="preserve">
          <source>By default, zero-mean, unit-variance normalization is applied to the transformed data.</source>
          <target state="translated">默认情况下,对转换后的数据采用零均值、单位方差归一化。</target>
        </trans-unit>
        <trans-unit id="c874644c0e92eeddd8de26271a422d136d288139" translate="yes" xml:space="preserve">
          <source>By definition a confusion matrix \(C\) is such that \(C_{i, j}\) is equal to the number of observations known to be in group \(i\) but predicted to be in group \(j\).</source>
          <target state="translated">根据定义,混淆矩阵(C\)是这样的,即(C_{i,j})等于已知属于(i)组但预测属于(j)组的观测值的数量。</target>
        </trans-unit>
        <trans-unit id="7edbd0cd8c2bac6d61783ee719a48e462c1cfcf6" translate="yes" xml:space="preserve">
          <source>By definition, entry \(i, j\) in a confusion matrix is the number of observations actually in group \(i\), but predicted to be in group \(j\). Here is an example:</source>
          <target state="translated">根据定义,混淆矩阵中的条目(i,j)是指实际在组(i)中,但预测在组(j)中的观测值的数量。下面是一个例子。</target>
        </trans-unit>
        <trans-unit id="1dfab6b69e192f9e6ae185588957d2e4ef21b660" translate="yes" xml:space="preserve">
          <source>C parameter in C-Support Vector Classification</source>
          <target state="translated">C-Support Vector Classification中的C参数</target>
        </trans-unit>
        <trans-unit id="cdda2bb3aa8ccb7b0f69433506f364d34d2e9052" translate="yes" xml:space="preserve">
          <source>C parameter in C-Support Vector Classification. 1 by default.</source>
          <target state="translated">C-Support Vector Classification中的C参数。默认为1。</target>
        </trans-unit>
        <trans-unit id="613d7a720c0f1c9138a31585cc88659b028aac73" translate="yes" xml:space="preserve">
          <source>C-Support Vector Classification.</source>
          <target state="translated">C-支持向量分类。</target>
        </trans-unit>
        <trans-unit id="bd2a390d1ac4f130ef2be0118bce6d064e5c8f80" translate="yes" xml:space="preserve">
          <source>C. Kaynak (1995) Methods of Combining Multiple Classifiers and Their Applications to Handwritten Digit Recognition, MSc Thesis, Institute of Graduate Studies in Science and Engineering, Bogazici University.</source>
          <target state="translated">C.Kaynak(1995年),&quot;Methods of Combining Multiple Classifiers and Their Applications to Handwritten Digit Recognition&quot;,硕士论文,博加济奇大学科学与工程研究生院。</target>
        </trans-unit>
        <trans-unit id="da9635593b5caf5d4585f5ff3fe3cc183bfd45ee" translate="yes" xml:space="preserve">
          <source>C.D. Manning, P. Raghavan and H. Sch&amp;uuml;tze (2008). Introduction to Information Retrieval. Cambridge University Press, pp. 234-265.</source>
          <target state="translated">CD曼宁，拉格万（P. Raghavan）和许舒特（H.Sch&amp;uuml;tze）（2008）。信息检索简介。剑桥大学出版社，第234-265页。</target>
        </trans-unit>
        <trans-unit id="14a7f63b48e4cd57491d39ae8fbc9659df0b4285" translate="yes" xml:space="preserve">
          <source>C.D. Manning, P. Raghavan and H. Sch&amp;uuml;tze (2008). Introduction to Information Retrieval. Cambridge University Press. &lt;a href=&quot;http://nlp.stanford.edu/IR-book/html/htmledition/the-vector-space-model-for-scoring-1.html&quot;&gt;http://nlp.stanford.edu/IR-book/html/htmledition/the-vector-space-model-for-scoring-1.html&lt;/a&gt;</source>
          <target state="translated">CD曼宁，拉格万（P. Raghavan）和许舒（H.Sch&amp;uuml;tze）（2008）。信息检索简介。剑桥大学出版社。&lt;a href=&quot;http://nlp.stanford.edu/IR-book/html/htmledition/the-vector-space-model-for-scoring-1.html&quot;&gt;http://nlp.stanford.edu/IR-book/html/htmledition/the-vector-space-model-for-scoring-1.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7f2e75005cfe431b03b43e4219e3b46d7acd0ff4" translate="yes" xml:space="preserve">
          <source>C.D. Manning, P. Raghavan and H. Schuetze (2008). Introduction to Information Retrieval. Cambridge University Press, pp. 234-265. &lt;a href=&quot;http://nlp.stanford.edu/IR-book/html/htmledition/naive-bayes-text-classification-1.html&quot;&gt;http://nlp.stanford.edu/IR-book/html/htmledition/naive-bayes-text-classification-1.html&lt;/a&gt;</source>
          <target state="translated">CD曼宁，拉格万（P. Raghavan）和舒特（H.Schuetze）（2008）。信息检索简介。剑桥大学出版社，第234-265页。&lt;a href=&quot;http://nlp.stanford.edu/IR-book/html/htmledition/naive-bayes-text-classification-1.html&quot;&gt;http://nlp.stanford.edu/IR-book/html/htmledition/naive-bayes-text-classification-1.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="75ec24d6932a118f83e8d64145c0a2ded87f2b67" translate="yes" xml:space="preserve">
          <source>C.D. Manning, P. Raghavan and H. Schuetze (2008). Introduction to Information Retrieval. Cambridge University Press, pp. 234-265. &lt;a href=&quot;http://nlp.stanford.edu/IR-book/html/htmledition/the-bernoulli-model-1.html&quot;&gt;http://nlp.stanford.edu/IR-book/html/htmledition/the-bernoulli-model-1.html&lt;/a&gt;</source>
          <target state="translated">CD曼宁，拉格万（P. Raghavan）和舒特（H.Schuetze）（2008）。信息检索简介。剑桥大学出版社，第234-265页。&lt;a href=&quot;http://nlp.stanford.edu/IR-book/html/htmledition/the-bernoulli-model-1.html&quot;&gt;http://nlp.stanford.edu/IR-book/html/htmledition/the-bernoulli-model-1.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d19ae811e7ffeb32597a550f21eb906e9869f42b" translate="yes" xml:space="preserve">
          <source>C.D. Manning, P. Raghavan, H. Sch&amp;uuml;tze, &lt;a href=&quot;http://nlp.stanford.edu/IR-book/html/htmledition/evaluation-of-ranked-retrieval-results-1.html&quot;&gt;Introduction to Information Retrieval&lt;/a&gt;, 2008.</source>
          <target state="translated">CD Manning，P。Raghavan，H。Sch&amp;uuml;tze，&lt;a href=&quot;http://nlp.stanford.edu/IR-book/html/htmledition/evaluation-of-ranked-retrieval-results-1.html&quot;&gt;&amp;ldquo;信息检索简介&amp;rdquo;&lt;/a&gt;，2008年。</target>
        </trans-unit>
        <trans-unit id="ac35b04dfbcb3d2d718c41403e2829f9afacc158" translate="yes" xml:space="preserve">
          <source>C.M. Bishop (2006). Pattern Recognition and Machine Learning. Springer, p. 209.</source>
          <target state="translated">C.M.Bishop(2006)。Pattern Recognition and Machine Learning.Springer,p.209.</target>
        </trans-unit>
        <trans-unit id="4e28cad37c371942b28c3b9844d1c63eab0cd98c" translate="yes" xml:space="preserve">
          <source>C4.5 is the successor to ID3 and removed the restriction that features must be categorical by dynamically defining a discrete attribute (based on numerical variables) that partitions the continuous attribute value into a discrete set of intervals. C4.5 converts the trained trees (i.e. the output of the ID3 algorithm) into sets of if-then rules. These accuracy of each rule is then evaluated to determine the order in which they should be applied. Pruning is done by removing a rule&amp;rsquo;s precondition if the accuracy of the rule improves without it.</source>
          <target state="translated">C4.5是ID3的后继版本，它通过动态定义离散属性（基于数字变量）来消除要素必须分类的限制，该离散属性将连续属性值划分为离散的间隔集。C4.5将训练后的树（即ID3算法的输出）转换为if-then规则集。然后评估每个规则的这些准确性，以确定应该应用它们的顺序。如果没有规则，规则的准确性会提高，则删除规则的先决条件即可进行修剪。</target>
        </trans-unit>
        <trans-unit id="f38b90367c7c83e3cb66fb496411f772ac84712e" translate="yes" xml:space="preserve">
          <source>C5.0 is Quinlan&amp;rsquo;s latest version release under a proprietary license. It uses less memory and builds smaller rulesets than C4.5 while being more accurate.</source>
          <target state="translated">C5.0是Quinlan在专有许可下的最新版本。与C4.5相比，它使用更少的内存并构建更小的规则集，同时更加准确。</target>
        </trans-unit>
        <trans-unit id="d173d3b539a344f61d41ecea5a62c323f7d19142" translate="yes" xml:space="preserve">
          <source>CCA Canonical Correlation Analysis.</source>
          <target state="translated">CCA Canonical Correlation Analysis。</target>
        </trans-unit>
        <trans-unit id="b29de26d602ff110fad786ea8b03d97b6805af56" translate="yes" xml:space="preserve">
          <source>CCA inherits from PLS with mode=&amp;rdquo;B&amp;rdquo; and deflation_mode=&amp;rdquo;canonical&amp;rdquo;.</source>
          <target state="translated">CCA继承自具有模式=&amp;ldquo; B&amp;rdquo;和deflation_mode =&amp;ldquo;规范&amp;rdquo;的PLS。</target>
        </trans-unit>
        <trans-unit id="3b8d88f34c322c835ae4b658c65d92bfd4b52c68" translate="yes" xml:space="preserve">
          <source>CHAS Charles River dummy variable (= 1 if tract bounds river; 0 otherwise)</source>
          <target state="translated">CHAS 查尔斯河虚拟变量(=1,如果地块与河流接壤,否则为0)</target>
        </trans-unit>
        <trans-unit id="65e7931e7d9586486554e7903a3ba08da00b37e4" translate="yes" xml:space="preserve">
          <source>CRIM per capita crime rate by town</source>
          <target state="translated">CRIM 按城镇分列的人均犯罪率</target>
        </trans-unit>
        <trans-unit id="c1c39cb0e3578f55a7a5c64e876c1d8c4ac8dfba" translate="yes" xml:space="preserve">
          <source>CSR, CSC, and LIL sparse matrices are supported. COO sparse matrices are not supported.</source>
          <target state="translated">支持CSR、CSC和LIL稀疏矩阵。不支持COO稀疏矩阵。</target>
        </trans-unit>
        <trans-unit id="73f41c9b08913eecfdd5c30b35b021c1e2d148fd" translate="yes" xml:space="preserve">
          <source>Cache size for gram matrix columns (in megabytes). 100 by default.</source>
          <target state="translated">克矩阵列的缓存大小(单位:兆字节)。默认为100。</target>
        </trans-unit>
        <trans-unit id="9ff21fb5eb8a4fa17d7e155397ec6ccfabcba0a4" translate="yes" xml:space="preserve">
          <source>Caching transformers within a &lt;code&gt;Pipeline&lt;/code&gt;</source>
          <target state="translated">在 &lt;code&gt;Pipeline&lt;/code&gt; 缓存变压器</target>
        </trans-unit>
        <trans-unit id="bc2913cfd35cdeb7164299f7eca5904d9beb65fc" translate="yes" xml:space="preserve">
          <source>Calculate approximate log-likelihood as score.</source>
          <target state="translated">计算近似对数似然作为分数。</target>
        </trans-unit>
        <trans-unit id="c1ebfc4b9bd037366318ba68c2c2cca59e1e8374" translate="yes" xml:space="preserve">
          <source>Calculate approximate perplexity for data X.</source>
          <target state="translated">计算数据X的近似迷惑性。</target>
        </trans-unit>
        <trans-unit id="d43ab93e0150f4ef29d06ad998812dd6ba91c9c1" translate="yes" xml:space="preserve">
          <source>Calculate metrics for each instance, and find their average (only meaningful for multilabel classification where this differs from &lt;a href=&quot;sklearn.metrics.accuracy_score#sklearn.metrics.accuracy_score&quot;&gt;&lt;code&gt;accuracy_score&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">计算指标为每个实例，并找到他们的平均（仅适用于多标签分类有意义的地方这不同于&lt;a href=&quot;sklearn.metrics.accuracy_score#sklearn.metrics.accuracy_score&quot;&gt; &lt;code&gt;accuracy_score&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="59762e6da26cf0edea79b5cf712b11b4295f7c3a" translate="yes" xml:space="preserve">
          <source>Calculate metrics for each instance, and find their average.</source>
          <target state="translated">计算每个实例的指标,并找出其平均值。</target>
        </trans-unit>
        <trans-unit id="b0449c6e69f12738c5fc9e626586315cc55b3e5c" translate="yes" xml:space="preserve">
          <source>Calculate metrics for each label, and find their average weighted by support (the number of true instances for each label). This alters &amp;lsquo;macro&amp;rsquo; to account for label imbalance; it can result in an F-score that is not between precision and recall.</source>
          <target state="translated">计算每个标签的指标，并找到它们的平均加权权重（每个标签的真实实例数）。这改变了&amp;ldquo;宏观&amp;rdquo;以解决标签的不平衡。这可能导致F得分不在精确度和召回率之间。</target>
        </trans-unit>
        <trans-unit id="bc72c4ff58beeced2951accfefb204124157b6da" translate="yes" xml:space="preserve">
          <source>Calculate metrics for each label, and find their average, weighted by support (the number of true instances for each label).</source>
          <target state="translated">计算每个标签的度量,并找到它们的平均值,通过支持度(每个标签的真实实例数)加权。</target>
        </trans-unit>
        <trans-unit id="c9463a17edbcd91794095643439dd340e0b094af" translate="yes" xml:space="preserve">
          <source>Calculate metrics for each label, and find their unweighted mean. This does not take label imbalance into account.</source>
          <target state="translated">计算每个标签的指标,并找出它们的非加权平均值。这并没有考虑到标签的不平衡性。</target>
        </trans-unit>
        <trans-unit id="a029600dc316664ad0a95bc83365c7c5938aa93b" translate="yes" xml:space="preserve">
          <source>Calculate metrics globally by considering each element of the label indicator matrix as a label.</source>
          <target state="translated">通过将标签指标矩阵中的每个元素视为标签,在全局范围内计算指标。</target>
        </trans-unit>
        <trans-unit id="734c6eed79b78874fafa14f9d8cbb9961b3a854c" translate="yes" xml:space="preserve">
          <source>Calculate metrics globally by counting the total true positives, false negatives and false positives.</source>
          <target state="translated">通过计算总的真阳性、假阴性和假阳性来计算全球的指标。</target>
        </trans-unit>
        <trans-unit id="49fff0d8477b2f29bd766898572fb8e020082b5d" translate="yes" xml:space="preserve">
          <source>Calculates a covariance matrix shrunk on the diagonal</source>
          <target state="translated">计算对角线上收缩的协方差矩阵。</target>
        </trans-unit>
        <trans-unit id="c97307180f2f1c1353791c3b1ff02010b40d4cbc" translate="yes" xml:space="preserve">
          <source>Calculation over a dense representation, however, may leverage highly optimised vector operations and multithreading in BLAS, and tends to result in fewer CPU cache misses. So the sparsity should typically be quite high (10% non-zeros max, to be checked depending on the hardware) for the sparse input representation to be faster than the dense input representation on a machine with many CPUs and an optimized BLAS implementation.</source>
          <target state="translated">然而,在密集表示上的计算可能会利用BLAS中高度优化的向量运算和多线程,并且往往会导致较少的CPU缓存错过。所以稀疏度通常应该相当高(最大10%非零,要根据硬件情况进行检查),这样在一个有很多CPU和优化的BLAS实现的机器上,稀疏输入表示法才会比密集输入表示法快。</target>
        </trans-unit>
        <trans-unit id="45e014956dcd06fbebb0ff4f4e74840339cec9d3" translate="yes" xml:space="preserve">
          <source>Calibration curves may also be referred to as reliability diagrams.</source>
          <target state="translated">校准曲线也可称为可靠性图。</target>
        </trans-unit>
        <trans-unit id="31401e1ffef37683b0be87d21fd1f21503627cec" translate="yes" xml:space="preserve">
          <source>Calibration of predicted probabilities.</source>
          <target state="translated">预测概率的校准;</target>
        </trans-unit>
        <trans-unit id="7856654a86cde5b16676039aac5209c8ecaefca1" translate="yes" xml:space="preserve">
          <source>Calibration of the probabilities of Gaussian naive Bayes with isotonic regression can fix this issue as can be seen from the nearly diagonal calibration curve. Sigmoid calibration also improves the brier score slightly, albeit not as strongly as the non-parametric isotonic calibration. This is an intrinsic limitation of sigmoid calibration, whose parametric form assumes a sigmoid rather than a transposed-sigmoid curve. The non-parametric isotonic calibration model, however, makes no such strong assumptions and can deal with either shape, provided that there is sufficient calibration data. In general, sigmoid calibration is preferable in cases where the calibration curve is sigmoid and where there is limited calibration data, while isotonic calibration is preferable for non-sigmoid calibration curves and in situations where large amounts of data are available for calibration.</source>
          <target state="translated">用等差回归校准高斯奈夫贝叶斯的概率可以解决这个问题,从近乎对角线的校准曲线可以看出。Sigmoid校准也能略微改善brier得分,尽管不如非参数等差校准那么强烈。这是sigmoid校准的内在局限性,其参数形式假设的是一个sigmoid而不是一个转置-sigmoid曲线。而非参数化的等调校准模型则不做如此强烈的假设,只要有足够的校准数据,就可以处理任何一种形状。一般来说,在校准曲线为sigmoid和校准数据有限的情况下,最好采用sigmoid校准,而在非sigmoid校准曲线和有大量数据可供校准的情况下,最好采用等调校准。</target>
        </trans-unit>
        <trans-unit id="e448e2fb701045b0891754b1017f0e789f14b1b4" translate="yes" xml:space="preserve">
          <source>Calibration of the probabilities of Gaussian naive Bayes with isotonic regression can fix this issue as can be seen from the nearly diagonal calibration curve. Sigmoid calibration also improves the brier score slightly, albeit not as strongly as the non-parametric isotonic regression. This can be attributed to the fact that we have plenty of calibration data such that the greater flexibility of the non-parametric model can be exploited.</source>
          <target state="translated">用等差回归校准高斯奈夫贝叶斯的概率可以解决这个问题,从近似对角线的校准曲线可以看出。Sigmoid校准也能略微改善brier得分,尽管没有非参数等差回归那么强烈。这可以归因于我们有大量的校准数据,从而可以利用非参数模型的更大灵活性。</target>
        </trans-unit>
        <trans-unit id="f2044acec740f83357466f3becc0159e9bb91219" translate="yes" xml:space="preserve">
          <source>Caliński, T., &amp;amp; Harabasz, J. (1974). &amp;ldquo;A dendrite method for cluster analysis&amp;rdquo;. Communications in Statistics-theory and Methods 3: 1-27. &lt;a href=&quot;https://doi.org/10.1080/03610926.2011.560741&quot;&gt;doi:10.1080/03610926.2011.560741&lt;/a&gt;.</source>
          <target state="translated">Caliński，T.和Harabasz，J.（1974）。&amp;ldquo;用于聚类分析的枝晶方法&amp;rdquo;。统计理论与方法中的交流3：1-27。&lt;a href=&quot;https://doi.org/10.1080/03610926.2011.560741&quot;&gt;doi：10.1080 / 03610926.2011.560741&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ee0040143856684c1d5650b6daeadbe9fcd30cc1" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;partial_fit&lt;/code&gt; finally with no arguments, i.e. &lt;code&gt;brc.partial_fit()&lt;/code&gt; which performs the global clustering.</source>
          <target state="translated">最后，不带任何参数调用 &lt;code&gt;partial_fit&lt;/code&gt; ，即执行全局聚类的 &lt;code&gt;brc.partial_fit()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5c3924e2724b0e550c4db34ec6ce01c60060f6c4" translate="yes" xml:space="preserve">
          <source>Call decision_function on the estimator with the best found parameters.</source>
          <target state="translated">在估计器上调用decision_function,找到最佳参数。</target>
        </trans-unit>
        <trans-unit id="53348bd7224bca96284e199ca79d5acec328bc37" translate="yes" xml:space="preserve">
          <source>Call inverse_transform on the estimator with the best found params.</source>
          <target state="translated">用最好的参数调用估计器的inverse_transform。</target>
        </trans-unit>
        <trans-unit id="f95b1d67783c159a32e0607501cff122482de538" translate="yes" xml:space="preserve">
          <source>Call predict on the estimator with the best found parameters.</source>
          <target state="translated">调用具有最佳参数的估计器进行预测。</target>
        </trans-unit>
        <trans-unit id="22f82ec9e0c60fd69b99c746ac37e659b4a1308a" translate="yes" xml:space="preserve">
          <source>Call predict_log_proba on the estimator with the best found parameters.</source>
          <target state="translated">调用具有最佳参数的估计器的predict_log_proba。</target>
        </trans-unit>
        <trans-unit id="29c779bfb955b0ca58a4baf063c21e80c105a7ae" translate="yes" xml:space="preserve">
          <source>Call predict_proba on the estimator with the best found parameters.</source>
          <target state="translated">在估计器上调用predict_proba,得到最佳参数。</target>
        </trans-unit>
        <trans-unit id="eef266f410d282365eeaef6f6541415ad4d67585" translate="yes" xml:space="preserve">
          <source>Call self as a function.</source>
          <target state="translated">将self作为函数调用。</target>
        </trans-unit>
        <trans-unit id="57bef674295cbe681d01dc941e4cad001128adc8" translate="yes" xml:space="preserve">
          <source>Call transform on the estimator with the best found parameters.</source>
          <target state="translated">调用最佳参数估计器的变换。</target>
        </trans-unit>
        <trans-unit id="614176934b568cd32ebb8ea4c2f82b73d1a38444" translate="yes" xml:space="preserve">
          <source>Callable object that returns a scalar score; greater is better.</source>
          <target state="translated">可调用对象,返回一个标量分数,越大越好。</target>
        </trans-unit>
        <trans-unit id="dcb651e6d4faa3b4245c8f40e4d8707b32c9eb1d" translate="yes" xml:space="preserve">
          <source>Callable object to raise error.</source>
          <target state="translated">可调用对象来引发错误。</target>
        </trans-unit>
        <trans-unit id="8991d384086ead9535c455ae88bf4df30ef536f5" translate="yes" xml:space="preserve">
          <source>Callable that gets invoked every five iterations</source>
          <target state="translated">每五次迭代被调用的可调用。</target>
        </trans-unit>
        <trans-unit id="989f89e2f06845b1ad8dd3658bbcd24f60bd5528" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;fit&lt;/code&gt; on the pipeline is the same as calling &lt;code&gt;fit&lt;/code&gt; on each estimator in turn, &lt;code&gt;transform&lt;/code&gt; the input and pass it on to the next step. The pipeline has all the methods that the last estimator in the pipeline has, i.e. if the last estimator is a classifier, the &lt;a href=&quot;generated/sklearn.pipeline.pipeline#sklearn.pipeline.Pipeline&quot;&gt;&lt;code&gt;Pipeline&lt;/code&gt;&lt;/a&gt; can be used as a classifier. If the last estimator is a transformer, again, so is the pipeline.</source>
          <target state="translated">调用 &lt;code&gt;fit&lt;/code&gt; 的管道与调用 &lt;code&gt;fit&lt;/code&gt; 于依次对每个估计， &lt;code&gt;transform&lt;/code&gt; 输入和传递给下一个步骤。管道具有管道中最后一个估计器具有的所有方法，即，如果最后一个估计器是一个分类器，则可以将&lt;a href=&quot;generated/sklearn.pipeline.pipeline#sklearn.pipeline.Pipeline&quot;&gt; &lt;code&gt;Pipeline&lt;/code&gt; &lt;/a&gt;用作分类器。如果最后一个估计器是一个变压器，那么管道也是。</target>
        </trans-unit>
        <trans-unit id="646f08f4df84ff9f1818a6af6de9dca2f3b78012" translate="yes" xml:space="preserve">
          <source>Calling its fit method on a memory mapped file using &lt;code&gt;numpy.memmap&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;numpy.memmap&lt;/code&gt; 在内存映射文件上调用其fit方法。</target>
        </trans-unit>
        <trans-unit id="0173a421acdfb426c57625e63147073a745fdbd4" translate="yes" xml:space="preserve">
          <source>Can be used as part of a product-kernel where it scales the magnitude of the other factor (kernel) or as part of a sum-kernel, where it modifies the mean of the Gaussian process.</source>
          <target state="translated">可以作为乘积核的一部分使用,在这里它对其他因子(核)的大小进行缩放,或者作为和核的一部分使用,在这里它修改高斯过程的平均值。</target>
        </trans-unit>
        <trans-unit id="dd08d1c06f0e39192aeeb47e5654ed86b6be93df" translate="yes" xml:space="preserve">
          <source>Can be used for classification and regression tasks</source>
          <target state="translated">可用于分类和回归任务</target>
        </trans-unit>
        <trans-unit id="0a4c313ffe358074ba84c9452247ea382d9fa79b" translate="yes" xml:space="preserve">
          <source>Can be used to iterate over parameter value combinations with the Python built-in function iter.</source>
          <target state="translated">可以用Python内置函数iter对参数值组合进行迭代。</target>
        </trans-unit>
        <trans-unit id="7390f53376adf83562232279a70747fa5d8330a4" translate="yes" xml:space="preserve">
          <source>Can either be one of the internally supported optimizers for optimizing the kernel&amp;rsquo;s parameters, specified by a string, or an externally defined optimizer passed as a callable. If a callable is passed, it must have the signature:</source>
          <target state="translated">可以是内部支持的优化器之一，用于优化由字符串指定的内核参数，也可以是作为可调用函数传递的外部定义的优化器。如果传递了callable，则必须具有签名：</target>
        </trans-unit>
        <trans-unit id="2deb3cb3170990af772652b9f1efccfc85be2a9d" translate="yes" xml:space="preserve">
          <source>Can perform online updates to model parameters via &lt;code&gt;partial_fit&lt;/code&gt; method. For details on algorithm used to update feature means and variance online, see Stanford CS tech report STAN-CS-79-773 by Chan, Golub, and LeVeque:</source>
          <target state="translated">可以通过 &lt;code&gt;partial_fit&lt;/code&gt; 方法在线更新模型参数。有关用于在线更新特征均值和方差的算法的详细信息，请参阅Chan，Golub和LeVeque撰写的Stanford CS技术报告STAN-CS-79-773：</target>
        </trans-unit>
        <trans-unit id="aa522b385b44e317cce80e761ea1c5ec7d7b1620" translate="yes" xml:space="preserve">
          <source>Can we predict the variation in stock prices for Google over a given time frame?</source>
          <target state="translated">我们能否预测谷歌在特定时间段内的股价变化?</target>
        </trans-unit>
        <trans-unit id="73acc6bdbb8ec409e34226027ab5a58ca8f42d1f" translate="yes" xml:space="preserve">
          <source>CanberraDistance</source>
          <target state="translated">CanberraDistance</target>
        </trans-unit>
        <trans-unit id="49b2113e21eec892b75c2f53c98b7f381b55ad1b" translate="yes" xml:space="preserve">
          <source>Capability to learn models in real-time (on-line learning) using &lt;code&gt;partial_fit&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;partial_fit&lt;/code&gt; 实时学习模型（在线学习）的能力。</target>
        </trans-unit>
        <trans-unit id="58468a4c1d5041cc33246afe39de168cc63f5a73" translate="yes" xml:space="preserve">
          <source>Capability to learn non-linear models.</source>
          <target state="translated">具有学习非线性模型的能力。</target>
        </trans-unit>
        <trans-unit id="4110f3fc6cf8d96d5c887b01db311b4a4cbf81ca" translate="yes" xml:space="preserve">
          <source>Capturing in the fitted parameters noise that prevents the model to generalize to new data is called &lt;a href=&quot;https://en.wikipedia.org/wiki/Overfitting&quot;&gt;overfitting&lt;/a&gt;. The bias introduced by the ridge regression is called a &lt;a href=&quot;https://en.wikipedia.org/wiki/Regularization_%28machine_learning%29&quot;&gt;regularization&lt;/a&gt;.</source>
          <target state="translated">捕获拟合的参数噪声（使模型无法推广到新数据）称为&lt;a href=&quot;https://en.wikipedia.org/wiki/Overfitting&quot;&gt;过拟合&lt;/a&gt;。脊回归带来的偏差称为&lt;a href=&quot;https://en.wikipedia.org/wiki/Regularization_%28machine_learning%29&quot;&gt;正则化&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5a3dccd8fc67d175fd55912e88fa8a2f99098ca7" translate="yes" xml:space="preserve">
          <source>Categorical (or nominal) features stored as strings (common in pandas DataFrames) will need converting to numerical features using &lt;a href=&quot;../modules/generated/sklearn.preprocessing.onehotencoder#sklearn.preprocessing.OneHotEncoder&quot;&gt;&lt;code&gt;sklearn.preprocessing.OneHotEncoder&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../modules/generated/sklearn.preprocessing.ordinalencoder#sklearn.preprocessing.OrdinalEncoder&quot;&gt;&lt;code&gt;sklearn.preprocessing.OrdinalEncoder&lt;/code&gt;&lt;/a&gt; or similar. See &lt;a href=&quot;../modules/preprocessing#preprocessing&quot;&gt;Preprocessing data&lt;/a&gt;.</source>
          <target state="translated">存储为字符串的分类（或标称）特征（在pandas DataFrames中很常见）将需要使用&lt;a href=&quot;../modules/generated/sklearn.preprocessing.onehotencoder#sklearn.preprocessing.OneHotEncoder&quot;&gt; &lt;code&gt;sklearn.preprocessing.OneHotEncoder&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../modules/generated/sklearn.preprocessing.ordinalencoder#sklearn.preprocessing.OrdinalEncoder&quot;&gt; &lt;code&gt;sklearn.preprocessing.OrdinalEncoder&lt;/code&gt; &lt;/a&gt;或类似方法转换为数字特征。请参阅&lt;a href=&quot;../modules/preprocessing#preprocessing&quot;&gt;预处理数据&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="575c2d71520428af7e6004a380fd3183cba7b0bc" translate="yes" xml:space="preserve">
          <source>Categorical distribution for each item.</source>
          <target state="translated">每个项目的分类分布。</target>
        </trans-unit>
        <trans-unit id="fa2f6aefa1aa93e94949badc3b3c49cfdb517e4e" translate="yes" xml:space="preserve">
          <source>Categories (unique values) per feature:</source>
          <target state="translated">每个特征的类别(唯一值)。</target>
        </trans-unit>
        <trans-unit id="fea4acd669eaabba6887f6eef69fd39dac425b96" translate="yes" xml:space="preserve">
          <source>Cawley, G.C.; Talbot, N.L.C. On over-fitting in model selection and subsequent selection bias in performance evaluation. J. Mach. Learn. Res 2010,11, 2079-2107.</source>
          <target state="translated">Cawley,G.C.;Talbot,N.L.C.On over-fitting in model selection and subsequent selection bias in performance evaluation.J.Mach.Learn.Res 2010,11,2079-2107.</target>
        </trans-unit>
        <trans-unit id="37343f27bc60aa76318eb471c6663d864eb18d33" translate="yes" xml:space="preserve">
          <source>Center a kernel matrix</source>
          <target state="translated">核仁矩阵居中</target>
        </trans-unit>
        <trans-unit id="92c85605f7dc687057de4ff07789f2c5c331b523" translate="yes" xml:space="preserve">
          <source>Center and scale the data.</source>
          <target state="translated">对数据进行居中和缩放。</target>
        </trans-unit>
        <trans-unit id="67261a9fe92e37db3aa80ffe4474f09e32c1aaa8" translate="yes" xml:space="preserve">
          <source>Center kernel matrix.</source>
          <target state="translated">中心核矩阵。</target>
        </trans-unit>
        <trans-unit id="8c1a5f2de7249b3eb03373546be4427f796a8f68" translate="yes" xml:space="preserve">
          <source>Center to the mean and component wise scale to unit variance.</source>
          <target state="translated">中心到平均数,分量到单位方差的比例。</target>
        </trans-unit>
        <trans-unit id="768d69c77a53fc551c7c9910b35003bada24786d" translate="yes" xml:space="preserve">
          <source>Center to the median and component wise scale according to the interquartile range.</source>
          <target state="translated">根据四分位数范围,中心到中位数和分量级。</target>
        </trans-unit>
        <trans-unit id="c2019da712750cb4ef134ae5ca43c61c7495db06" translate="yes" xml:space="preserve">
          <source>Centering and scaling happen independently on each feature by computing the relevant statistics on the samples in the training set. Mean and standard deviation are then stored to be used on later data using the &lt;code&gt;transform&lt;/code&gt; method.</source>
          <target state="translated">通过计算训练集中样本的相关统计信息，对每个特征进行独立居中和缩放。然后存储平均值和标准偏差，以使用 &lt;code&gt;transform&lt;/code&gt; 方法在以后的数据上使用。</target>
        </trans-unit>
        <trans-unit id="852fdb74295c14b731f7c9b8bd1cf4f822a323ef" translate="yes" xml:space="preserve">
          <source>Centering and scaling happen independently on each feature by computing the relevant statistics on the samples in the training set. Median and interquartile range are then stored to be used on later data using the &lt;code&gt;transform&lt;/code&gt; method.</source>
          <target state="translated">通过计算训练集中样本的相关统计信息，对每个特征进行独立居中和缩放。然后存储中位数和四分位数范围，以使用 &lt;code&gt;transform&lt;/code&gt; 方法在以后的数据上使用。</target>
        </trans-unit>
        <trans-unit id="da048b589edab21f87ec974ad7cf55815436af21" translate="yes" xml:space="preserve">
          <source>Centering sparse data would destroy the sparseness structure in the data, and thus rarely is a sensible thing to do. However, it can make sense to scale sparse inputs, especially if features are on different scales.</source>
          <target state="translated">将稀疏数据居中会破坏数据中的稀疏性结构,因此很少是一件明智的事情。然而,对稀疏输入进行缩放是有意义的,特别是当特征在不同的尺度上时。</target>
        </trans-unit>
        <trans-unit id="f19cd2ea5ba481b1227355bae60a1490198d72fb" translate="yes" xml:space="preserve">
          <source>Centroid of each class</source>
          <target state="translated">每个班级的中心点</target>
        </trans-unit>
        <trans-unit id="43fd80a8a33d481ee61eb957589d7c324bb47a58" translate="yes" xml:space="preserve">
          <source>Centroids - To avoid recalculation linear sum / n_samples.</source>
          <target state="translated">中心点-为了避免重新计算线性和/n_samples。</target>
        </trans-unit>
        <trans-unit id="6f4bd1db21c55490738a7608eef05930e4a07af8" translate="yes" xml:space="preserve">
          <source>Centroids found at the last iteration of k-means.</source>
          <target state="translated">在k-means的最后一次迭代中发现的中心点。</target>
        </trans-unit>
        <trans-unit id="3d51d3ac8a8c1e5ad72297e2ef2a268e2598e14f" translate="yes" xml:space="preserve">
          <source>Centroids of all subclusters read directly from the leaves.</source>
          <target state="translated">直接从叶子上读取所有子簇的中心点。</target>
        </trans-unit>
        <trans-unit id="4de5ce1aad4948db300bff75de62fcdcd0c4941e" translate="yes" xml:space="preserve">
          <source>Certain input configurations can lead to singular weight matrices, for example when more than two points in the dataset are identical, or when the data is split into disjointed groups. In this case, &lt;code&gt;solver='arpack'&lt;/code&gt; will fail to find the null space. The easiest way to address this is to use &lt;code&gt;solver='dense'&lt;/code&gt; which will work on a singular matrix, though it may be very slow depending on the number of input points. Alternatively, one can attempt to understand the source of the singularity: if it is due to disjoint sets, increasing &lt;code&gt;n_neighbors&lt;/code&gt; may help. If it is due to identical points in the dataset, removing these points may help.</source>
          <target state="translated">某些输入配置会导致奇异的权重矩阵，例如，当数据集中的两个以上点相同时，或者将数据拆分为不相交的组时。在这种情况下， &lt;code&gt;solver='arpack'&lt;/code&gt; 将无法找到空空间。解决此问题的最简单方法是使用 &lt;code&gt;solver='dense'&lt;/code&gt; ，它将在奇异矩阵上运行，尽管它可能会很慢，具体取决于输入点的数量。或者，可以尝试理解奇异性的来源：如果是由于不相交集，则增加 &lt;code&gt;n_neighbors&lt;/code&gt; 可能会有所帮助。如果是由于数据集中的相同点，则删除这些点可能会有所帮助。</target>
        </trans-unit>
        <trans-unit id="e16f5e08c61efc4323f7038200eddb53c26bcf76" translate="yes" xml:space="preserve">
          <source>Change maximum number of iterations allowed</source>
          <target state="translated">改变允许的最大迭代次数</target>
        </trans-unit>
        <trans-unit id="0cf1ec958054a15d30ffc4392d6c46ad4456ece0" translate="yes" xml:space="preserve">
          <source>Change the default backend used by Parallel inside a with block.</source>
          <target state="translated">改变Parallel在with块中使用的默认后端。</target>
        </trans-unit>
        <trans-unit id="eab6f2b5fb9c18bf998cb4880bd5f1b681002ecd" translate="yes" xml:space="preserve">
          <source>Changed in version 0.17: Deprecated &lt;em&gt;decision_function_shape=&amp;rsquo;ovo&amp;rsquo; and None&lt;/em&gt;.</source>
          <target state="translated">在版本0.17中更改：不推荐使用Decision_function_shape &lt;em&gt;='ovo'和None&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="055b586f3e69075368273531f03bf49e12efacb8" translate="yes" xml:space="preserve">
          <source>Changed in version 0.17: parameter &lt;em&gt;labels&lt;/em&gt; improved for multiclass problem.</source>
          <target state="translated">在版本0.17中更改：针对多类问题改进了参数&lt;em&gt;标签&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="6cb38f48d40d30a3f75ee7b9d2a44af312192fbe" translate="yes" xml:space="preserve">
          <source>Changed in version 0.18.</source>
          <target state="translated">在0.18版本中有所改变。</target>
        </trans-unit>
        <trans-unit id="6f6126dea9582ada8721578d14e16c71a63df849" translate="yes" xml:space="preserve">
          <source>Changed in version 0.18: &lt;em&gt;doc_topic_distr&lt;/em&gt; is now normalized</source>
          <target state="translated">在版本0.18中更改：&lt;em&gt;doc_topic_distr&lt;/em&gt;现在已标准化</target>
        </trans-unit>
        <trans-unit id="fcd01bc3588ecc9666d14fa010516de3dcc84bea" translate="yes" xml:space="preserve">
          <source>Changed in version 0.18: Added float values for fractions.</source>
          <target state="translated">0.18版本的变化:增加了分数的浮点数。</target>
        </trans-unit>
        <trans-unit id="7fc856c3c064da510a218e6c7df85789f811fe7a" translate="yes" xml:space="preserve">
          <source>Changed in version 0.18: Moved from sklearn.base.</source>
          <target state="translated">0.18版本的变化:从sklearn.base.移动到了sklearn.com。</target>
        </trans-unit>
        <trans-unit id="a90feab308b07e82d498a291f6915931036e14ee" translate="yes" xml:space="preserve">
          <source>Changed in version 0.18: Moved from sklearn.cross_validation.</source>
          <target state="translated">0.18版本的变化:从sklearn.cross_validation.Cross_validation中移出。</target>
        </trans-unit>
        <trans-unit id="d0c2d95f41297a56933f19219fc2f07b1bcb158c" translate="yes" xml:space="preserve">
          <source>Changed in version 0.18: Moved from sklearn.utils.</source>
          <target state="translated">0.18版本的变化:从sklearn.utils.</target>
        </trans-unit>
        <trans-unit id="d25bc6104e55e92d1b33fda52e1ec954447bd518" translate="yes" xml:space="preserve">
          <source>Changed in version 0.18: Moved from sklearn.utils.validation, extends EfficiencyWarning.</source>
          <target state="translated">0.18版本的变化:从sklearn.utils.validation,扩展到EfficiencyWarning。</target>
        </trans-unit>
        <trans-unit id="2fa8f7852a9945c7862d216aa8ff1c0a21b0182d" translate="yes" xml:space="preserve">
          <source>Changed in version 0.18: Moved from sklearn.utils.validation.</source>
          <target state="translated">0.18版本的变化:从sklearn.utils.validation移到了sklearn.utils.validation。</target>
        </trans-unit>
        <trans-unit id="abbafa3e468fc617c9713185f5d9ee4e5372a13b" translate="yes" xml:space="preserve">
          <source>Changed in version 0.19: &lt;code&gt;store_covariances&lt;/code&gt; has been moved to main constructor as &lt;code&gt;store_covariance&lt;/code&gt;</source>
          <target state="translated">在版本0.19中更改： &lt;code&gt;store_covariances&lt;/code&gt; 已作为 &lt;code&gt;store_covariance&lt;/code&gt; 移至主构造函数</target>
        </trans-unit>
        <trans-unit id="4273942d9c5a08ad5bc5e206da69d7d9e3b6cf25" translate="yes" xml:space="preserve">
          <source>Changed in version 0.19: &lt;code&gt;tol&lt;/code&gt; has been moved to main constructor.</source>
          <target state="translated">在版本0.19中更改： &lt;code&gt;tol&lt;/code&gt; 已移至主要构造函数。</target>
        </trans-unit>
        <trans-unit id="c96cc7d641fddb55481bfaf69f6e0bf490d11120" translate="yes" xml:space="preserve">
          <source>Changed in version 0.19: &lt;em&gt;doc_topic_distr&lt;/em&gt; argument has been deprecated and is ignored because user no longer has access to unnormalized distribution</source>
          <target state="translated">在版本0.19中更改：不建议使用&lt;em&gt;doc_topic_distr&lt;/em&gt;参数，因为用户不再有权访问非规范化的分发，因此将其忽略</target>
        </trans-unit>
        <trans-unit id="e66620f548ab09ff75f433c6709ca552b6af9828" translate="yes" xml:space="preserve">
          <source>Changed in version 0.19: &lt;em&gt;store_covariance&lt;/em&gt; has been moved to main constructor.</source>
          <target state="translated">在版本0.19中更改：&lt;em&gt;store_covariance&lt;/em&gt;已移至主构造函数。</target>
        </trans-unit>
        <trans-unit id="8dad5211ce5211ba928fe68a804e62d3ea10bbaf" translate="yes" xml:space="preserve">
          <source>Changed in version 0.19: &lt;em&gt;tol&lt;/em&gt; has been moved to main constructor.</source>
          <target state="translated">在版本0.19中更改：&lt;em&gt;tol&lt;/em&gt;已移至主要构造函数。</target>
        </trans-unit>
        <trans-unit id="5fb0977fb00b91dac9196b3b062da5466c848ecf" translate="yes" xml:space="preserve">
          <source>Changed in version 0.19: Default value of multioutput is &amp;lsquo;uniform_average&amp;rsquo;.</source>
          <target state="translated">在版本0.19中更改：多输出的默认值为&amp;ldquo; uniform_average&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="2c5707239cfa5bcefb17c813a557db4fe8b02969" translate="yes" xml:space="preserve">
          <source>Changed in version 0.19: Deprecated</source>
          <target state="translated">在0.19版本中的变化:已被取消。</target>
        </trans-unit>
        <trans-unit id="1743dc5dbbab02349918b34cdf30104f5af5bcac" translate="yes" xml:space="preserve">
          <source>Changed in version 0.19: Instead of linearly interpolating between operating points, precisions are weighted by the change in recall since the last operating point.</source>
          <target state="translated">在0.19版本中改变了:不是在操作点之间进行线性插值,而是通过自上一个操作点以来的召回变化对精度进行加权。</target>
        </trans-unit>
        <trans-unit id="a3c6eb6e440e29411ac46dac3c1cae6b910bc26a" translate="yes" xml:space="preserve">
          <source>Changed in version 0.19: The &amp;ldquo;copy&amp;rdquo; parameter was removed.</source>
          <target state="translated">在版本0.19中更改：删除了&amp;ldquo;复制&amp;rdquo;参数。</target>
        </trans-unit>
        <trans-unit id="51a127943c4c6ea6a150fd80599a48859b04a97d" translate="yes" xml:space="preserve">
          <source>Changed in version 0.19: decision_function_shape is &amp;lsquo;ovr&amp;rsquo; by default.</source>
          <target state="translated">在版本0.19中更改：默认情况下Decision_function_shape为'ovr'。</target>
        </trans-unit>
        <trans-unit id="ae54d0922ff687cbddaa1ae11b357270843c5280" translate="yes" xml:space="preserve">
          <source>Changed in version 0.20: &lt;code&gt;cv&lt;/code&gt; default value if None will change from 3-fold to 5-fold in v0.22.</source>
          <target state="translated">在0.20版中进行了更改：如果 &lt;code&gt;cv&lt;/code&gt; None在v0.22中从3倍更改为5倍，则为cv默认值。</target>
        </trans-unit>
        <trans-unit id="2e6e6e6dbff5645d1524bb0c2f649326b00ce95a" translate="yes" xml:space="preserve">
          <source>Changed in version 0.20: &lt;code&gt;cv&lt;/code&gt; default value of None will change from 3-fold to 5-fold in v0.22.</source>
          <target state="translated">在版本0.20中更改：在v0.22中， &lt;code&gt;cv&lt;/code&gt; 的默认值None将从3倍更改为5倍。</target>
        </trans-unit>
        <trans-unit id="c06737aff42ecf82a620aacd70a87cca0730c272" translate="yes" xml:space="preserve">
          <source>Changed in version 0.20: &lt;code&gt;cv&lt;/code&gt; default value will change from 3-fold to 5-fold in v0.22.</source>
          <target state="translated">在0.20版中更改： &lt;code&gt;cv&lt;/code&gt; 默认值在v0.22中将从3倍更改为5倍。</target>
        </trans-unit>
        <trans-unit id="eb0e22863fa6e093c28da2990b11e7fd75ee86ee" translate="yes" xml:space="preserve">
          <source>Changed in version 0.20: &lt;code&gt;n_splits&lt;/code&gt; default value will change from 3 to 5 in v0.22.</source>
          <target state="translated">在0.20版中更改： &lt;code&gt;n_splits&lt;/code&gt; 在v0.22中默认值将从3更改为5。</target>
        </trans-unit>
        <trans-unit id="7791e3de5f388d6c6ddd7ea7293f0481617b29a6" translate="yes" xml:space="preserve">
          <source>Changed in version 0.20: Default of out_file changed from &amp;ldquo;tree.dot&amp;rdquo; to None.</source>
          <target state="translated">在0.20版中更改：out_file的默认值从&amp;ldquo; tree.dot&amp;rdquo;更改为&amp;ldquo;无&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="7d42ab8763b8311646f023ae795cac759efdd4e3" translate="yes" xml:space="preserve">
          <source>Changed in version 0.20: Default will change from &amp;lsquo;liblinear&amp;rsquo; to &amp;lsquo;lbfgs&amp;rsquo; in 0.22.</source>
          <target state="translated">在0.20版中进行了更改：默认值将在0.22版中从&amp;ldquo; liblinear&amp;rdquo;更改为&amp;ldquo; lbfgs&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="1371c21d31426a2e31497b30b2a6590de2b6b1fb" translate="yes" xml:space="preserve">
          <source>Changed in version 0.20: Default will change from &amp;lsquo;ovr&amp;rsquo; to &amp;lsquo;auto&amp;rsquo; in 0.22.</source>
          <target state="translated">在0.20版中进行了更改：在0.22版中，默认值将从'ovr'更改为'auto'。</target>
        </trans-unit>
        <trans-unit id="b526b5ba4dc2f2eee3d64e88d8b7c780b728a970" translate="yes" xml:space="preserve">
          <source>Changed in version 0.20: Fixed a wrong data point at [445, 0].</source>
          <target state="translated">0.20版本的变化:修正了[445,0]处的一个错误数据点。</target>
        </trans-unit>
        <trans-unit id="448360bc2a0ba6021254d3d3d1b021c822cf4574" translate="yes" xml:space="preserve">
          <source>Changed in version 0.20: Fixed two wrong data points according to Fisher&amp;rsquo;s paper. The new version is the same as in R, but not as in the UCI Machine Learning Repository.</source>
          <target state="translated">在0.20版中进行了更改：根据Fisher的论文，修复了两个错误的数据点。新版本与R中的版本相同，但与UCI机器学习存储库中的版本不同。</target>
        </trans-unit>
        <trans-unit id="055e4a8bd9f399bd3fc1e1383a9c15a4bbc1e6b7" translate="yes" xml:space="preserve">
          <source>Changed in version 0.20: In SciPy &amp;lt;= 1.0.0 the number of lbfgs iterations may exceed &lt;code&gt;max_iter&lt;/code&gt;. &lt;code&gt;n_iter_&lt;/code&gt; will now report at most &lt;code&gt;max_iter&lt;/code&gt;.</source>
          <target state="translated">在版本0.20中更改：在SciPy &amp;lt;= 1.0.0中，lbfgs迭代次数可能超过 &lt;code&gt;max_iter&lt;/code&gt; 。现在， &lt;code&gt;n_iter_&lt;/code&gt; 将最多报告 &lt;code&gt;max_iter&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="504f024df55b83e422110941f9e04b216e79d629" translate="yes" xml:space="preserve">
          <source>Changed in version 0.20: Parameter &lt;code&gt;iid&lt;/code&gt; will change from True to False by default in version 0.22, and will be removed in 0.24.</source>
          <target state="translated">在0.20版中更改：默认情况下，参数 &lt;code&gt;iid&lt;/code&gt; 在0.22版中将从True更改为False，在0.24版中将被删除。</target>
        </trans-unit>
        <trans-unit id="b96bf65d5491588fa772f9f528d06a0d521efc61" translate="yes" xml:space="preserve">
          <source>Changed in version 0.20: The default learning method is now &lt;code&gt;&quot;batch&quot;&lt;/code&gt;.</source>
          <target state="translated">在0.20版中更改：现在默认的学习方法是 &lt;code&gt;&quot;batch&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="51aa315e38420314e9f3478e81bc6638116bd0db" translate="yes" xml:space="preserve">
          <source>Changed in version 0.20: The default value of &lt;code&gt;contamination&lt;/code&gt; will change from 0.1 in 0.20 to &lt;code&gt;'auto'&lt;/code&gt; in 0.22.</source>
          <target state="translated">在版本0.20中更改： &lt;code&gt;contamination&lt;/code&gt; 的默认值将从0.20中 &lt;code&gt;'auto'&lt;/code&gt; 0.1更改为0.22中的&amp;ldquo;自动&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="5ad65dba4db944efe408c8ea9c740f6abe7086dd" translate="yes" xml:space="preserve">
          <source>Changed in version 0.20: The default value of &lt;code&gt;n_estimators&lt;/code&gt; will change from 10 in version 0.20 to 100 in version 0.22.</source>
          <target state="translated">在0.20版中更改： &lt;code&gt;n_estimators&lt;/code&gt; 的默认值将从0.20版中的10更改为0.22版中的100。</target>
        </trans-unit>
        <trans-unit id="4ca937e3082ecc0ae93065a90f66093228e05e66" translate="yes" xml:space="preserve">
          <source>ChebyshevDistance</source>
          <target state="translated">ChebyshevDistance</target>
        </trans-unit>
        <trans-unit id="493f1c06737f210c8ad25a3f384da4f3c3912719" translate="yes" xml:space="preserve">
          <source>Check if &lt;code&gt;y&lt;/code&gt; is in a multilabel format.</source>
          <target state="translated">检查 &lt;code&gt;y&lt;/code&gt; 是否为多标签格式。</target>
        </trans-unit>
        <trans-unit id="fc4bc4709b9aac2c9680fb3d5d6b6e87c50e5a64" translate="yes" xml:space="preserve">
          <source>Check if estimator adheres to scikit-learn conventions.</source>
          <target state="translated">检查估算器是否符合scikit-learn约定。</target>
        </trans-unit>
        <trans-unit id="3cd1fa482d6da382c02c75389d5b633bdda8e813" translate="yes" xml:space="preserve">
          <source>Check that &lt;code&gt;memory&lt;/code&gt; is joblib.Memory-like.</source>
          <target state="translated">检查 &lt;code&gt;memory&lt;/code&gt; 是否为joblib.Memory类。</target>
        </trans-unit>
        <trans-unit id="e0ba3916764af814bdbc70d2ec54ecce0dc12a65" translate="yes" xml:space="preserve">
          <source>Check that all arrays have consistent first dimensions.</source>
          <target state="translated">检查所有数组的第一维度是否一致。</target>
        </trans-unit>
        <trans-unit id="68bb61bc8a2b37fb4e529559174dcd47a957aa4b" translate="yes" xml:space="preserve">
          <source>Checks X and y for consistent length, enforces X 2d and y 1d. Standard input checks are only applied to y, such as checking that y does not have np.nan or np.inf targets. For multi-label y, set multi_output=True to allow 2d and sparse y. If the dtype of X is object, attempt converting to float, raising on failure.</source>
          <target state="translated">检查 X 和 y 的长度是否一致,执行 X 2d 和 y 1d。标准的输入检查只适用于y,例如检查y没有np.nan或np.inf目标。对于多标签的y,设置multi_output=True,允许2d和稀疏的y。如果X的dtype是object,尝试转换为float,失败时引发。</target>
        </trans-unit>
        <trans-unit id="540fd0eb9ca7ef8250a9638322bba5ce74d72a07" translate="yes" xml:space="preserve">
          <source>Checks consistent length, passes through None, and ensures that everything can be indexed by converting sparse matrices to csr and converting non-interable objects to arrays.</source>
          <target state="translated">检查一致的长度,通过None,并通过将稀疏矩阵转换为csr和将非交互对象转换为数组来确保一切都可以被索引。</target>
        </trans-unit>
        <trans-unit id="94fca86bbfd69cdc1feacf9618362066150b6375" translate="yes" xml:space="preserve">
          <source>Checks if the estimator is fitted by verifying the presence of &amp;ldquo;all_or_any&amp;rdquo; of the passed attributes and raises a NotFittedError with the given message.</source>
          <target state="translated">通过验证所传递属性的&amp;ldquo; all_or_any&amp;rdquo;是否存在来检查估计量是否合适，并使用给定消息引发NotFittedError。</target>
        </trans-unit>
        <trans-unit id="72444fe3e701eaa6e83fe51fe0c4077d93f4ed76" translate="yes" xml:space="preserve">
          <source>Checks whether all objects in arrays have the same shape or length.</source>
          <target state="translated">检查数组中所有对象是否具有相同的形状或长度。</target>
        </trans-unit>
        <trans-unit id="a3ea26df20c94337a61b4a0c8f8133cae90175e1" translate="yes" xml:space="preserve">
          <source>Checks whether the estimator&amp;rsquo;s fit method supports the given parameter.</source>
          <target state="translated">检查估计器的fit方法是否支持给定参数。</target>
        </trans-unit>
        <trans-unit id="1f9c9fcea1e8fd614bb3a3374e0bc712f3028c91" translate="yes" xml:space="preserve">
          <source>Chen et al. proposed an improvement of the Ledoit-Wolf shrinkage parameter, the OAS coefficient, whose convergence is significantly better under the assumption that the data are Gaussian.</source>
          <target state="translated">Chen等人提出了Ledoit-Wolf收缩参数的改进,即OAS系数,在数据为高斯的假设下,其收敛性明显更好。</target>
        </trans-unit>
        <trans-unit id="c95915714f118a36d90f9767a78e18264f1c7da3" translate="yes" xml:space="preserve">
          <source>Chen et al., &amp;ldquo;Shrinkage Algorithms for MMSE Covariance Estimation&amp;rdquo;, IEEE Trans. on Sign. Proc., Volume 58, Issue 10, October 2010.</source>
          <target state="translated">Chen等人，&amp;ldquo; MMSE协方差估计的收缩算法&amp;rdquo;，IEEE Trans。在标志上。Proc。，第58卷，第10期，2010年10月。</target>
        </trans-unit>
        <trans-unit id="a85c2a78a3f5923642bad6dd8ba724c840044fea" translate="yes" xml:space="preserve">
          <source>Chi-squared stats of non-negative features for classification tasks.</source>
          <target state="translated">分类任务的非负性特征的Chi平方统计。</target>
        </trans-unit>
        <trans-unit id="f005fe0025d994f8abf4e7099d305bc01a0387e7" translate="yes" xml:space="preserve">
          <source>Chins, Situps and Jumps.</source>
          <target state="translated">下巴、仰卧起坐和跳跃。</target>
        </trans-unit>
        <trans-unit id="1f53f0d102d72a503c10f29599e984481ea3e870" translate="yes" xml:space="preserve">
          <source>Chong Wang, John Paisley, 2013</source>
          <target state="translated">王翀,John Paisley,2013年</target>
        </trans-unit>
        <trans-unit id="2464e32e4b7ba5c7b47fd52f9cc42f7987f5a176" translate="yes" xml:space="preserve">
          <source>Choosing &lt;code&gt;max_features &amp;lt; n_features&lt;/code&gt; leads to a reduction of variance and an increase in bias.</source>
          <target state="translated">选择 &lt;code&gt;max_features &amp;lt; n_features&lt;/code&gt; 会导致方差减少和偏差增加。</target>
        </trans-unit>
        <trans-unit id="4701b31a10d3d38902acf3303a77e69fad46979a" translate="yes" xml:space="preserve">
          <source>Choosing the amount of shrinkage, \(\alpha\) amounts to setting a bias/variance trade-off, and is discussed below.</source>
          <target state="translated">选择收缩量/(α/α/)相当于设定一个偏差/变异的权衡,下面将讨论这个问题。</target>
        </trans-unit>
        <trans-unit id="778b898651e50e9961a7f6ee7bb17ed899527bb4" translate="yes" xml:space="preserve">
          <source>Choosing the parameters of the model</source>
          <target state="translated">选择模型的参数</target>
        </trans-unit>
        <trans-unit id="1f68e304859453b977c9f4de3b0dc7d15bfe8758" translate="yes" xml:space="preserve">
          <source>Choosing the right cross-validation object is a crucial part of fitting a model properly. There are many ways to split data into training and test sets in order to avoid model overfitting, to standardize the number of groups in test sets, etc.</source>
          <target state="translated">选择合适的交叉验证对象是正确拟合模型的关键部分。为了避免模型过拟合,将数据分成训练集和测试集,为了规范测试集的组数等,有很多方法。</target>
        </trans-unit>
        <trans-unit id="63141af8cf3aad3af4bc9ab1bee294c3a321ef61" translate="yes" xml:space="preserve">
          <source>Choosing the right estimator</source>
          <target state="translated">选择正确的估算器</target>
        </trans-unit>
        <trans-unit id="2d3ac9734d65160e9461f0bf2ba39314f740ef00" translate="yes" xml:space="preserve">
          <source>Christopher D. Manning, Prabhakar Raghavan and Hinrich Sch&amp;uuml;tze (2008), &lt;em&gt;Introduction to Information Retrieval&lt;/em&gt;, Cambridge University Press, chapter 18: &lt;a href=&quot;http://nlp.stanford.edu/IR-book/pdf/18lsi.pdf&quot;&gt;Matrix decompositions &amp;amp; latent semantic indexing&lt;/a&gt;</source>
          <target state="translated">Christopher D.Manning，Prabhakar Raghavan和HinrichSch&amp;uuml;tze（2008），&lt;em&gt;《信息检索简介》&lt;/em&gt;，剑桥大学出版社，第18章：&lt;a href=&quot;http://nlp.stanford.edu/IR-book/pdf/18lsi.pdf&quot;&gt;矩阵分解和潜在语义索引&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="40e75d15aad1eb199f3b5a1c8099753ab7bf89ae" translate="yes" xml:space="preserve">
          <source>Christopher M. Bishop: Pattern Recognition and Machine Learning, Chapter 4.3.4</source>
          <target state="translated">Christopher M.Bishop:模式识别和机器学习,第4.3.4章。</target>
        </trans-unit>
        <trans-unit id="d274ba88ebd3aaaca493451fbdfc7df2b46b1562" translate="yes" xml:space="preserve">
          <source>Christopher M. Bishop: Pattern Recognition and Machine Learning, Chapter 7.2.1</source>
          <target state="translated">Christopher M.Bishop:模式识别和机器学习,第7.2.1章。</target>
        </trans-unit>
        <trans-unit id="1c8ee1f667a8d47b16ef2e2aa695ed171b4e51ed" translate="yes" xml:space="preserve">
          <source>Cichocki, Andrzej, and P. H. A. N. Anh-Huy. &amp;ldquo;Fast local algorithms for large scale nonnegative matrix and tensor factorizations.&amp;rdquo; IEICE transactions on fundamentals of electronics, communications and computer sciences 92.3: 708-721, 2009.</source>
          <target state="translated">Cichocki，Andrzej和PHAN Anh-Huy。&amp;ldquo;用于大规模非负矩阵和张量分解的快速局部算法。&amp;rdquo; IEICE关于电子，通信和计算机科学的基础知识的交易92.3：708-721，2009年。</target>
        </trans-unit>
        <trans-unit id="8ba190f0b11eda4526d22f7b3e4e9a44bf5c61fb" translate="yes" xml:space="preserve">
          <source>Citation:</source>
          <target state="translated">Citation:</target>
        </trans-unit>
        <trans-unit id="3efb49c46d3dce0aaadd9323b878ecd2d85694b8" translate="yes" xml:space="preserve">
          <source>Clamping factor.</source>
          <target state="translated">夹紧系数。</target>
        </trans-unit>
        <trans-unit id="53b9e2aa611d84dcd87035bee7e8238e45ad3c52" translate="yes" xml:space="preserve">
          <source>Clamping factor. A value in [0, 1] that specifies the relative amount that an instance should adopt the information from its neighbors as opposed to its initial label. alpha=0 means keeping the initial label information; alpha=1 means replacing all initial information.</source>
          <target state="translated">钳制因子。在[0,1]中的一个值,它指定了一个实例相对于它的初始标签而言,应该采用邻居的信息的相对数量,α=0表示保留初始标签信息;α=1表示替换所有初始信息。</target>
        </trans-unit>
        <trans-unit id="d41dcc5a4b43f14c2162b5d47c5d1f2a922f2cb2" translate="yes" xml:space="preserve">
          <source>Class &lt;a href=&quot;generated/sklearn.neural_network.mlpclassifier#sklearn.neural_network.MLPClassifier&quot;&gt;&lt;code&gt;MLPClassifier&lt;/code&gt;&lt;/a&gt; implements a multi-layer perceptron (MLP) algorithm that trains using &lt;a href=&quot;http://ufldl.stanford.edu/wiki/index.php/Backpropagation_Algorithm&quot;&gt;Backpropagation&lt;/a&gt;.</source>
          <target state="translated">类&lt;a href=&quot;generated/sklearn.neural_network.mlpclassifier#sklearn.neural_network.MLPClassifier&quot;&gt; &lt;code&gt;MLPClassifier&lt;/code&gt; &lt;/a&gt;实现了使用列车的多层感知器（MLP）算法&lt;a href=&quot;http://ufldl.stanford.edu/wiki/index.php/Backpropagation_Algorithm&quot;&gt;反向传播&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7357582207c781d61cd98a39c2c2d151ab897124" translate="yes" xml:space="preserve">
          <source>Class &lt;a href=&quot;generated/sklearn.neural_network.mlpregressor#sklearn.neural_network.MLPRegressor&quot;&gt;&lt;code&gt;MLPRegressor&lt;/code&gt;&lt;/a&gt; implements a multi-layer perceptron (MLP) that trains using backpropagation with no activation function in the output layer, which can also be seen as using the identity function as activation function. Therefore, it uses the square error as the loss function, and the output is a set of continuous values.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.neural_network.mlpregressor#sklearn.neural_network.MLPRegressor&quot;&gt; &lt;code&gt;MLPRegressor&lt;/code&gt; &lt;/a&gt;类实现了多层感知器（MLP），该感知器使用反向传播进行训练，而输出层中没有激活函数，也可以将其视为将身份函数用作激活函数。因此，它将平方误差用作损失函数，并且输出是一组连续值。</target>
        </trans-unit>
        <trans-unit id="d761d033d83d1c6721e16b99d13d7d6d07363efd" translate="yes" xml:space="preserve">
          <source>Class Distribution:</source>
          <target state="translated">班级分布。</target>
        </trans-unit>
        <trans-unit id="e0bc3cca773afa5efbf8e12978287d502e9be158" translate="yes" xml:space="preserve">
          <source>Class balanced accuracy as described in &lt;a href=&quot;#mosley2013&quot; id=&quot;id9&quot;&gt;[Mosley2013]&lt;/a&gt;: the minimum between the precision and the recall for each class is computed. Those values are then averaged over the total number of classes to get the balanced accuracy.</source>
          <target state="translated">&lt;a href=&quot;#mosley2013&quot; id=&quot;id9&quot;&gt;[Mosley2013]中&lt;/a&gt;所述的类平衡精度：计算每个类的精度和召回率之间的最小值。然后，将这些值在总类数上取平均值，以获得平衡的准确性。</target>
        </trans-unit>
        <trans-unit id="3525afec7a042e93fcfabe9cf07433db243082e6" translate="yes" xml:space="preserve">
          <source>Class for concatenating the results of multiple transformer objects.</source>
          <target state="translated">用于连接多个变压器对象的结果的类。</target>
        </trans-unit>
        <trans-unit id="b94d7635df17c1163a2b721c969abc799894c459" translate="yes" xml:space="preserve">
          <source>Class for creating a pipeline of transforms with a final estimator.</source>
          <target state="translated">用于创建一个带有最终估计器的变换流水线的类。</target>
        </trans-unit>
        <trans-unit id="41c872ea542f47195cd5bdddbed54b544728c7e8" translate="yes" xml:space="preserve">
          <source>Class labels for each data sample.</source>
          <target state="translated">每个数据样本的类标签。</target>
        </trans-unit>
        <trans-unit id="75786fb09df045663c574b34fcc983eb08f76a3c" translate="yes" xml:space="preserve">
          <source>Class labels for each output.</source>
          <target state="translated">每个产出的类别标签。</target>
        </trans-unit>
        <trans-unit id="65ef61d56071c2ae710bb432600582cd6021aa8c" translate="yes" xml:space="preserve">
          <source>Class labels for samples in X.</source>
          <target state="translated">X中样本的类标签。</target>
        </trans-unit>
        <trans-unit id="b57c84d69e971776bb6aa878e300b647142c208e" translate="yes" xml:space="preserve">
          <source>Class labels.</source>
          <target state="translated">类标签。</target>
        </trans-unit>
        <trans-unit id="01047c182d517fca8c33605d4798c040d23b8b88" translate="yes" xml:space="preserve">
          <source>Class means.</source>
          <target state="translated">类是指:</target>
        </trans-unit>
        <trans-unit id="ff319e02f73fb21586f6b9b1671fcd2c9510c668" translate="yes" xml:space="preserve">
          <source>Class priors (sum to 1).</source>
          <target state="translated">班级先导(和为1)。</target>
        </trans-unit>
        <trans-unit id="ade206bda0f6444367fff7bbf847464a9d43da9a" translate="yes" xml:space="preserve">
          <source>Class priors.</source>
          <target state="translated">班级前辈。</target>
        </trans-unit>
        <trans-unit id="74dd2ce47acba37ebd3cab8f1116f7e6c9053edd" translate="yes" xml:space="preserve">
          <source>Class that allows combining the outputs of multiple transformer objects used on column subsets of the data into a single feature space.</source>
          <target state="translated">允许将数据列子集上使用的多个变换器对象的输出合并到一个单一的特征空间的类。</target>
        </trans-unit>
        <trans-unit id="ed1846afee3be21521286932b99e2aeae9e6414a" translate="yes" xml:space="preserve">
          <source>Classes</source>
          <target state="translated">Classes</target>
        </trans-unit>
        <trans-unit id="7ebc6162babdd045dc917aaf60a15a2d9535e8cc" translate="yes" xml:space="preserve">
          <source>Classes across all calls to partial_fit. Can be obtained by via &lt;code&gt;np.unique(y_all)&lt;/code&gt;, where y_all is the target vector of the entire dataset. This argument is required for the first call to partial_fit and can be omitted in the subsequent calls. Note that y doesn&amp;rsquo;t need to contain all labels in &lt;code&gt;classes&lt;/code&gt;.</source>
          <target state="translated">所有对partial_fit的调用中的类。可以通过 &lt;code&gt;np.unique(y_all)&lt;/code&gt; 获得，其中y_all是整个数据集的目标向量。第一次调用partial_fit时需要此参数，在随后的调用中可以将其省略。注意y不需要在 &lt;code&gt;classes&lt;/code&gt; 包含所有标签。</target>
        </trans-unit>
        <trans-unit id="4857555bdc66951800974f75b52f10772b0f8ee5" translate="yes" xml:space="preserve">
          <source>Classes across all calls to partial_fit. Can be obtained via &lt;code&gt;np.unique(y_all)&lt;/code&gt;, where y_all is the target vector of the entire dataset. This argument is only required in the first call of partial_fit and can be omitted in the subsequent calls.</source>
          <target state="translated">所有对partial_fit的调用中的类。可以通过 &lt;code&gt;np.unique(y_all)&lt;/code&gt; 获得，其中y_all是整个数据集的目标向量。仅在partial_fit的第一次调用中需要此参数，而在随后的调用中可以将其省略。</target>
        </trans-unit>
        <trans-unit id="27b0b3dd6707f0ea69d90d5a028b964df9f2fff0" translate="yes" xml:space="preserve">
          <source>Classes across all calls to partial_fit. Can be obtained via &lt;code&gt;np.unique(y_all)&lt;/code&gt;, where y_all is the target vector of the entire dataset. This argument is required for the first call to partial_fit and can be omitted in the subsequent calls. Note that y doesn&amp;rsquo;t need to contain all labels in &lt;code&gt;classes&lt;/code&gt;.</source>
          <target state="translated">所有对partial_fit的调用中的类。可以通过 &lt;code&gt;np.unique(y_all)&lt;/code&gt; 获得，其中y_all是整个数据集的目标向量。第一次调用partial_fit时需要此参数，在随后的调用中可以将其省略。注意y不需要在 &lt;code&gt;classes&lt;/code&gt; 包含所有标签。</target>
        </trans-unit>
        <trans-unit id="479424b5da4a04b44196deaa1eb360f881638e6f" translate="yes" xml:space="preserve">
          <source>Classes are not always linearly separable in feature space. The solution is to build a decision function that is not linear but may be polynomial instead. This is done using the &lt;em&gt;kernel trick&lt;/em&gt; that can be seen as creating a decision energy by positioning &lt;em&gt;kernels&lt;/em&gt; on observations:</source>
          <target state="translated">在要素空间中，类并非总是线性可分离的。解决方案是建立一个决策函数，该决策函数不是线性的，而是可以是多项式的。这是使用&lt;em&gt;内核技巧&lt;/em&gt;完成的，该&lt;em&gt;技巧&lt;/em&gt;可以看作是通过将&lt;em&gt;内核&lt;/em&gt;置于观察值&lt;em&gt;上来&lt;/em&gt;创建决策能量：</target>
        </trans-unit>
        <trans-unit id="8699bf94f01ba66cdd9d01bec915f4f9f0cc59fc" translate="yes" xml:space="preserve">
          <source>Classes included in this module are &lt;a href=&quot;generated/sklearn.cross_decomposition.plsregression#sklearn.cross_decomposition.PLSRegression&quot;&gt;&lt;code&gt;PLSRegression&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;generated/sklearn.cross_decomposition.plscanonical#sklearn.cross_decomposition.PLSCanonical&quot;&gt;&lt;code&gt;PLSCanonical&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/sklearn.cross_decomposition.cca#sklearn.cross_decomposition.CCA&quot;&gt;&lt;code&gt;CCA&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.cross_decomposition.plssvd#sklearn.cross_decomposition.PLSSVD&quot;&gt;&lt;code&gt;PLSSVD&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">此模块中包含的类是&lt;a href=&quot;generated/sklearn.cross_decomposition.plsregression#sklearn.cross_decomposition.PLSRegression&quot;&gt; &lt;code&gt;PLSRegression&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;generated/sklearn.cross_decomposition.plscanonical#sklearn.cross_decomposition.PLSCanonical&quot;&gt; &lt;code&gt;PLSCanonical&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;generated/sklearn.cross_decomposition.cca#sklearn.cross_decomposition.CCA&quot;&gt; &lt;code&gt;CCA&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;generated/sklearn.cross_decomposition.plssvd#sklearn.cross_decomposition.PLSSVD&quot;&gt; &lt;code&gt;PLSSVD&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="94c2a3189e7f7885455350c4c7a8df2d0d6ad1d1" translate="yes" xml:space="preserve">
          <source>Classification</source>
          <target state="translated">Classification</target>
        </trans-unit>
        <trans-unit id="b2bea22244f54e92d796d3807893ef8caf3acdaa" translate="yes" xml:space="preserve">
          <source>Classification error for each estimator in the boosted ensemble.</source>
          <target state="translated">提升集合中每个估计器的分类误差。</target>
        </trans-unit>
        <trans-unit id="042b5646ee9a544ec2a8a8406db311b8f3724833" translate="yes" xml:space="preserve">
          <source>Classification metrics</source>
          <target state="translated">分类指标</target>
        </trans-unit>
        <trans-unit id="4826d8566e80802c21d49e58130c1c2c4d7e9e96" translate="yes" xml:space="preserve">
          <source>Classification of text documents using sparse features</source>
          <target state="translated">利用稀疏特征对文本文档进行分类</target>
        </trans-unit>
        <trans-unit id="1f4e8e74dd78bd0cbb62af4adec68b836cd36e6b" translate="yes" xml:space="preserve">
          <source>Classification with more than 2 classes requires the induction of &lt;code&gt;n_classes&lt;/code&gt; regression trees at each iteration, thus, the total number of induced trees equals &lt;code&gt;n_classes * n_estimators&lt;/code&gt;. For datasets with a large number of classes we strongly recommend to use &lt;a href=&quot;generated/sklearn.ensemble.randomforestclassifier#sklearn.ensemble.RandomForestClassifier&quot;&gt;&lt;code&gt;RandomForestClassifier&lt;/code&gt;&lt;/a&gt; as an alternative to &lt;a href=&quot;generated/sklearn.ensemble.gradientboostingclassifier#sklearn.ensemble.GradientBoostingClassifier&quot;&gt;&lt;code&gt;GradientBoostingClassifier&lt;/code&gt;&lt;/a&gt; .</source>
          <target state="translated">具有2个以上类别的分类需要在每次迭代中归纳 &lt;code&gt;n_classes&lt;/code&gt; 个回归树，因此，诱导树的总数等于 &lt;code&gt;n_classes * n_estimators&lt;/code&gt; 。对于具有大量类的数据集，强烈建议使用&lt;a href=&quot;generated/sklearn.ensemble.randomforestclassifier#sklearn.ensemble.RandomForestClassifier&quot;&gt; &lt;code&gt;RandomForestClassifier&lt;/code&gt; &lt;/a&gt;替代&lt;a href=&quot;generated/sklearn.ensemble.gradientboostingclassifier#sklearn.ensemble.GradientBoostingClassifier&quot;&gt; &lt;code&gt;GradientBoostingClassifier&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1f289d6abb27f2ab990bd99fbdc9079b5617a8e4" translate="yes" xml:space="preserve">
          <source>Classifier Chain</source>
          <target state="translated">分级链</target>
        </trans-unit>
        <trans-unit id="8046fc358b069c4499b15db1ebc249fa07c76b54" translate="yes" xml:space="preserve">
          <source>Classifier chains (see &lt;code&gt;ClassifierChain&lt;/code&gt;) are a way of combining a number of binary classifiers into a single multi-label model that is capable of exploiting correlations among targets.</source>
          <target state="translated">分类器链（请参阅 &lt;code&gt;ClassifierChain&lt;/code&gt; ）是一种将多个二进制分类器组合到单个多标签模型中的方法，该模型能够利用目标之间的相关性。</target>
        </trans-unit>
        <trans-unit id="02fd53b2e3db145e690713b9cbc6565c3801f2ab" translate="yes" xml:space="preserve">
          <source>Classifier comparison</source>
          <target state="translated">分类器比较</target>
        </trans-unit>
        <trans-unit id="f196a38cfab19f39f84834cd6bb549a425d45a9c" translate="yes" xml:space="preserve">
          <source>Classifier implementing a vote among neighbors within a given radius</source>
          <target state="translated">分类器,实现在给定半径内的邻居之间的投票。</target>
        </trans-unit>
        <trans-unit id="0e81574fbd6b7b003852ba70a47d981ad4c390a6" translate="yes" xml:space="preserve">
          <source>Classifier implementing the k-nearest neighbors vote.</source>
          <target state="translated">分类器实现k-最近邻投票。</target>
        </trans-unit>
        <trans-unit id="1c0829a72d09f1fa92e1ffea13924182261d29f8" translate="yes" xml:space="preserve">
          <source>Classifier using Ridge regression.</source>
          <target state="translated">使用Ridge回归的分类器。</target>
        </trans-unit>
        <trans-unit id="06e5abf7ffb2ff75c41748f636f2d48103315b30" translate="yes" xml:space="preserve">
          <source>Classifiers with custom kernels behave the same way as any other classifiers, except that:</source>
          <target state="translated">使用自定义内核的分类器与其他分类器的行为方式相同,除了。</target>
        </trans-unit>
        <trans-unit id="86b8bc1f7d5c2c135942fa46bfefc2890f34c306" translate="yes" xml:space="preserve">
          <source>Classifies each output independently rather than chaining.</source>
          <target state="translated">对每个输出进行独立分类,而不是链式分类。</target>
        </trans-unit>
        <trans-unit id="9803082edfebc4fd71ba88b8d3b77912e3c4f227" translate="yes" xml:space="preserve">
          <source>Classify all data as inliers or outliers by calculating the residuals to the estimated model (&lt;code&gt;base_estimator.predict(X) - y&lt;/code&gt;) - all data samples with absolute residuals smaller than the &lt;code&gt;residual_threshold&lt;/code&gt; are considered as inliers.</source>
          <target state="translated">通过计算估计模型的残差（ &lt;code&gt;base_estimator.predict(X) - y&lt;/code&gt; ）将所有数据分类为离群值或离群值-绝对残差小于 &lt;code&gt;residual_threshold&lt;/code&gt; 阈值的所有数据样本均被视为离群值。</target>
        </trans-unit>
        <trans-unit id="6810139e9708e3a1e63e98e84f20edee3e4173da" translate="yes" xml:space="preserve">
          <source>Classifying irises:</source>
          <target state="translated">虹膜的分类。</target>
        </trans-unit>
        <trans-unit id="5374be5a73023aad58d55ae1e217c71276e35c47" translate="yes" xml:space="preserve">
          <source>Claudio Gentile. A New Approximate Maximal Margin Classification Algorithm. NIPS. 2000.</source>
          <target state="translated">Claudio Gentile.A New Approximate Maximal Margin Classification Algorithm.A New Approximate Maximal Margin Classification Algorithm.NIPS.2000.</target>
        </trans-unit>
        <trans-unit id="94a9b4917326e743c37f4afe183c7c76dad7f7b2" translate="yes" xml:space="preserve">
          <source>Clearly the order of the chain is important. The first model in the chain has no information about the other labels while the last model in the chain has features indicating the presence of all of the other labels. In general one does not know the optimal ordering of the models in the chain so typically many randomly ordered chains are fit and their predictions are averaged together.</source>
          <target state="translated">显然,链的顺序很重要。链中的第一个模型没有关于其他标签的信息,而链中的最后一个模型具有表明所有其他标签存在的特征。一般来说,人们不知道链中模型的最佳排序,所以通常会拟合许多随机排序的链,并将它们的预测结果平均在一起。</target>
        </trans-unit>
        <trans-unit id="eb13197692f424e458928561f4fa88a045453dd2" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-applications-plot-face-recognition-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-applications-plot-face-recognition-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="93ae087a111cb1a6a029de20afe6a2459477499c" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-applications-plot-model-complexity-influence-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-applications-plot-model-complexity-influence-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="7b405766f8deb917506f4677b492e14ac5e2936a" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-applications-plot-out-of-core-classification-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-applications-plot-out-of-core-classification-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="8e59fc72d6bbc7e0636590d6ca703fadcfe19571" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-applications-plot-outlier-detection-housing-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-applications-plot-outlier-detection-housing-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="ff6939f0a9998baec6df2847abf4a2b055b62c64" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-applications-plot-prediction-latency-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-applications-plot-prediction-latency-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="7587ee2049ebc4b32df0249b1f5099bf02c6397e" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-applications-plot-species-distribution-modeling-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-applications-plot-species-distribution-modeling-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="7776b8a25966c42d0cd9027e12a65dd6a25b5e00" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-applications-plot-stock-market-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-applications-plot-stock-market-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="156c0f487e56751b739ce76c1a3eda01dd438581" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-applications-plot-tomography-l1-reconstruction-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-applications-plot-tomography-l1-reconstruction-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="f92210d821edd2ac3c0fc3e3d1fe9a373ca7c431" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-applications-plot-topics-extraction-with-nmf-lda-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-applications-plot-topics-extraction-with-nmf-lda-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="d9d8f580e1f1fae1504efcc96270f87b98ec24aa" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-applications-svm-gui-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-applications-svm-gui-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="68b33e5600a8e6693d7d24fa2712cd9108ee4249" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-applications-wikipedia-principal-eigenvector-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-applications-wikipedia-principal-eigenvector-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="ee39e3ebbcf9e436cd0b7fce9f2d46d1bf03634f" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-bicluster-plot-bicluster-newsgroups-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-bicluster-plot-bicluster-newsgroups-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="6ffba177b373f6d5b00ccc9b9cec94aa4169d5f5" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-bicluster-plot-spectral-biclustering-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-bicluster-plot-spectral-biclustering-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="4d5607999aed88eb9f8976f40e38882ffb0c27af" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-bicluster-plot-spectral-coclustering-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-bicluster-plot-spectral-coclustering-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="cf30c2d7125651802e321a5b630b10d4d025a910" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-calibration-plot-calibration-curve-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-calibration-plot-calibration-curve-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="810b5e705617f0fe66518a98587dbe4e44c10335" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-calibration-plot-calibration-multiclass-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-calibration-plot-calibration-multiclass-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="7462b754d9cd16d5a60ace6d88fe08d5863efa4e" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-calibration-plot-calibration-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-calibration-plot-calibration-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="6d38b3f05dbf4c5d3e2aceedebdf3f20ef8cdfd6" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-calibration-plot-compare-calibration-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-calibration-plot-compare-calibration-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="2b77d6d7484443076e3b148aa3c8baba0a38a1bf" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-classification-plot-classification-probability-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-classification-plot-classification-probability-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="f1697552340aeff7497556faab221d536dbf5a4e" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-classification-plot-classifier-comparison-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-classification-plot-classifier-comparison-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="df165f410fa537493d511619c319a2cfa2e7aba8" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-classification-plot-digits-classification-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-classification-plot-digits-classification-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="b6b5de6a9e37d53a3a3d0c51b77607d1929a072c" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-classification-plot-lda-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-classification-plot-lda-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="3f804987f170caa44c728f8fbeb2e1ddf112a10e" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-classification-plot-lda-qda-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-classification-plot-lda-qda-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="cdb2052cec98da2ee63ae55f39b2d102f173b789" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-adjusted-for-chance-measures-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-adjusted-for-chance-measures-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="3b5b16169a24d6f6632fd6ea94aa3ed579236137" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-affinity-propagation-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-affinity-propagation-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="0d526581379178f53f346098dd9715fe8f334936" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-agglomerative-clustering-metrics-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-agglomerative-clustering-metrics-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="a83a9fb95dc936db81fb1eb15202f8c032574cad" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-agglomerative-clustering-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-agglomerative-clustering-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="0b6f68a0efd17fbfde97856d54d9563074b45e7f" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-birch-vs-minibatchkmeans-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-birch-vs-minibatchkmeans-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="6fcc606433c1b296c84e94c2000f5c41404e2eea" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-cluster-comparison-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-cluster-comparison-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="d8848c92b09a8ff0b074da39e15dbd8d6a8c5e23" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-cluster-iris-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-cluster-iris-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="a95bb6253b52bd78070a83aca415674de194b21b" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-coin-segmentation-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-coin-segmentation-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="304d737edcafbd9c86bd49b1498dcf6c5622d547" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-coin-ward-segmentation-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-coin-ward-segmentation-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="7507f8d35dce3b5f3ba08720ff364d03489d1211" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-color-quantization-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-color-quantization-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="e11e66fa2dbd8f6c5a36e6aef95cbf24b15a3878" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-dbscan-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-dbscan-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="a13a333a0563b0d65ad962648a71496bb4225682" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-dict-face-patches-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-dict-face-patches-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="456ec794e8bbbd2794074a01f4abccaa5c8f1961" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-digits-agglomeration-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-digits-agglomeration-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="e1cb99acaa846ee0ed60f70af5af55785e19696e" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-digits-linkage-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-digits-linkage-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="d48dd534545b9317080321c9c62332baeb8e95fa" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-face-compress-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-face-compress-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="f05873e402277f0ea010b952031affd92f20c47e" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-feature-agglomeration-vs-univariate-selection-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-feature-agglomeration-vs-univariate-selection-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="dec160133903e06fd3a89be98b6b340190872ad4" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-kmeans-assumptions-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-kmeans-assumptions-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="e506aacfe249db420e6f3fdcf601a2068879fed1" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-kmeans-digits-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-kmeans-digits-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="699936006da52866ccb50ec5f208e4703401f547" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-kmeans-silhouette-analysis-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-kmeans-silhouette-analysis-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="3bd773177899ddceef850669ed1b213d5b359853" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-kmeans-stability-low-dim-dense-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-kmeans-stability-low-dim-dense-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="bffa5bd546f11708a32247dd392e6b45e1c1c158" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-linkage-comparison-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-linkage-comparison-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="09003a026449b87a4af1e20331794c96f96750bb" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-mean-shift-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-mean-shift-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="af549c02667d1a6eb25e68a9cdea8fe2faf0a0f9" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-mini-batch-kmeans-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-mini-batch-kmeans-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="127d51a178eacd6aa9db601d22094d9cba300809" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-segmentation-toy-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-segmentation-toy-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="4369310e23a07ced1c2f3e06a0a1cbea070a63b3" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-ward-structured-vs-unstructured-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-cluster-plot-ward-structured-vs-unstructured-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="ab385a2bb54de5d7f6708cfb024b6a7c2aee6b34" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-compose-plot-column-transformer-mixed-types-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-compose-plot-column-transformer-mixed-types-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="594aed963392f900b207c46477cc5aabccca7951" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-compose-plot-column-transformer-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-compose-plot-column-transformer-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="0dc252eb0acedbd1af234123607d15f730c5cc2f" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-compose-plot-compare-reduction-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-compose-plot-compare-reduction-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="c113dff6cd4997280407d052b63004c691f69d19" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-compose-plot-digits-pipe-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-compose-plot-digits-pipe-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="64d22620e9a03e2ea13fae79f3fb5c59f08b2ce1" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-compose-plot-feature-union-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-compose-plot-feature-union-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="47c9d8cf85ba9c4583135d3fc647448faff4395d" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-compose-plot-transformed-target-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-compose-plot-transformed-target-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="b54e0bcf7a088750a3d58f2973811dc8d4ddcf7c" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-covariance-plot-covariance-estimation-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-covariance-plot-covariance-estimation-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="021bd73234d0a09a1fda134ccd2bff9c6e9b86db" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-covariance-plot-lw-vs-oas-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-covariance-plot-lw-vs-oas-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="95466da32a24bc16ca1d7d667638ce7220ef1546" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-covariance-plot-mahalanobis-distances-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-covariance-plot-mahalanobis-distances-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="3bf546e59df70e4126188d60490d320a74a0257a" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-covariance-plot-robust-vs-empirical-covariance-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-covariance-plot-robust-vs-empirical-covariance-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="65574dd65f647fa789411954faa46ac5d1dba46e" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-covariance-plot-sparse-cov-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-covariance-plot-sparse-cov-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="3bce73f66236e12e45dfcae7b34c9b61188446d8" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-cross-decomposition-plot-compare-cross-decomposition-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-cross-decomposition-plot-compare-cross-decomposition-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="fc8d6c1602a16475de843650d9fea090827ac352" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-datasets-plot-digits-last-image-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-datasets-plot-digits-last-image-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="98817db2b784334f9b302175d68172bf92c6702a" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-datasets-plot-iris-dataset-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-datasets-plot-iris-dataset-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="30126a5fd607d85b608b2d120aba677929a19ca8" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-datasets-plot-random-dataset-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-datasets-plot-random-dataset-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="6e55ba98ae13e5002c4569374914b587bfba8417" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-datasets-plot-random-multilabel-dataset-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-datasets-plot-random-multilabel-dataset-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="135b52aedaa24a450cbdbd056957795ed8a3c37a" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-decomposition-plot-beta-divergence-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-decomposition-plot-beta-divergence-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="450d1595c673239f18c8d42c29d45f0a2ddd1e61" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-decomposition-plot-faces-decomposition-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-decomposition-plot-faces-decomposition-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="79c64bec74a51753ca253d778e3e540666aaa22f" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-decomposition-plot-ica-blind-source-separation-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-decomposition-plot-ica-blind-source-separation-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="4e6d1d741dbb23ef8fdbe8d6f212c3a581cbf525" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-decomposition-plot-ica-vs-pca-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-decomposition-plot-ica-vs-pca-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="578c5494f33df7cf3310c2f6a904c0758dc218dd" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-decomposition-plot-image-denoising-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-decomposition-plot-image-denoising-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="2d975f78744f3a7c0106de0ace3544b8e0a477ec" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-decomposition-plot-incremental-pca-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-decomposition-plot-incremental-pca-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="a810fca62bbb5ae9da6c8ad536fb3c32770c6e49" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-decomposition-plot-kernel-pca-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-decomposition-plot-kernel-pca-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="8d29964138a966cb82e66439a9350e9dba1bce66" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-decomposition-plot-pca-3d-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-decomposition-plot-pca-3d-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="855b6a2e919fe5be8bdf9d097e00540a0e00bec0" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-decomposition-plot-pca-iris-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-decomposition-plot-pca-iris-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="d52fc36064dcdcc960047a330bd812d05bc88cb1" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-decomposition-plot-pca-vs-fa-model-selection-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-decomposition-plot-pca-vs-fa-model-selection-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="d8bbbaccd5fb9431b3389ae9e25e8d98f127bad7" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-decomposition-plot-pca-vs-lda-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-decomposition-plot-pca-vs-lda-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="64eaf43090c97cb546753dec25798e4e17d8283f" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-decomposition-plot-sparse-coding-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-decomposition-plot-sparse-coding-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="f709bc103dcfe343161cb2f3b72c75180b0da6a8" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-ensemble-plot-adaboost-hastie-10-2-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-ensemble-plot-adaboost-hastie-10-2-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="58d3d5314196ba821993c79fbda9686c30cc3dde" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-ensemble-plot-adaboost-multiclass-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-ensemble-plot-adaboost-multiclass-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="37e5b21af7ddb315661f1df7f295a8228c5b390e" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-ensemble-plot-adaboost-regression-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-ensemble-plot-adaboost-regression-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="8e9c6c2b8fe4553b67818b7dd22023d7b6a69522" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-ensemble-plot-adaboost-twoclass-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-ensemble-plot-adaboost-twoclass-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="54ec601c2d3a5657dee2f9e2ddb03b4db7a21c91" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-ensemble-plot-bias-variance-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-ensemble-plot-bias-variance-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="5f2de2a3256827727690d672cff652089bd31a55" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-ensemble-plot-ensemble-oob-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-ensemble-plot-ensemble-oob-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="e9c5c04d5d9f945ab148bfd4c4319ba147738c4e" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-ensemble-plot-feature-transformation-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-ensemble-plot-feature-transformation-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="01147fb99254b518122aac47cac1f6a815cc1f1f" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-ensemble-plot-forest-importances-faces-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-ensemble-plot-forest-importances-faces-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="b2ea691232d19ca7df6f99f827ffb767b57b519e" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-ensemble-plot-forest-importances-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-ensemble-plot-forest-importances-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="8b7b5d7b060d2a988e1d7e1b8e414a3f85a31926" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-ensemble-plot-forest-iris-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-ensemble-plot-forest-iris-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="074f79454c6e6f93330a3d1a06a1fcae2bc736c3" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-ensemble-plot-gradient-boosting-early-stopping-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-ensemble-plot-gradient-boosting-early-stopping-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="8d8603c94f4998869870714a569db675ab986795" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-ensemble-plot-gradient-boosting-oob-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-ensemble-plot-gradient-boosting-oob-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="e4d5053d7b863f417e54344ed171979d7d930748" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-ensemble-plot-gradient-boosting-quantile-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-ensemble-plot-gradient-boosting-quantile-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="2f1ce9226e4d625ab07f786a716bc4c93f3bb66d" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-ensemble-plot-gradient-boosting-regression-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-ensemble-plot-gradient-boosting-regression-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="dd1a413c4e0d1d919d153edac7c9a02ac6cdfbaa" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-ensemble-plot-gradient-boosting-regularization-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-ensemble-plot-gradient-boosting-regularization-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="997c96708828052fcfb511085c3a0163d5c9eaa6" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-ensemble-plot-isolation-forest-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-ensemble-plot-isolation-forest-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="5bf57cb67fae7425659c51043119f882860009b0" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-ensemble-plot-partial-dependence-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-ensemble-plot-partial-dependence-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="a0a1c51d3cef81e0a6f8948bf4ca682af8cc8ecd" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-ensemble-plot-random-forest-embedding-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-ensemble-plot-random-forest-embedding-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="4cbc6c0f27930f83707dda0822488d18d09e6131" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-ensemble-plot-random-forest-regression-multioutput-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-ensemble-plot-random-forest-regression-multioutput-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="95055a1cca4564c4d46f62f386d667a318fe6560" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-ensemble-plot-voting-decision-regions-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-ensemble-plot-voting-decision-regions-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="5945e7d522656e0305c6ba6432a5c82985eed543" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-ensemble-plot-voting-probas-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-ensemble-plot-voting-probas-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="e3c3c7af18ad1b14779363400ba6c212d8fa8040" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-exercises-plot-cv-diabetes-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-exercises-plot-cv-diabetes-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="c82dd054f393467e0f737cfef53ac43805d50954" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-exercises-plot-cv-digits-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-exercises-plot-cv-digits-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="7e341d24a692504a0bca0d922fbe4de514b653bf" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-exercises-plot-digits-classification-exercise-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-exercises-plot-digits-classification-exercise-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="36d1b4f828cefd6e91a18aa25e373da623084817" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-exercises-plot-iris-exercise-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-exercises-plot-iris-exercise-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="68225472247cae804371dcf2d6a50f4d67aa8a80" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-feature-selection-plot-f-test-vs-mi-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-feature-selection-plot-f-test-vs-mi-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="585d14a1c6211af7ddb45b87fda04dcf3b6af609" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-feature-selection-plot-feature-selection-pipeline-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-feature-selection-plot-feature-selection-pipeline-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="da8cd57873d4c5bc7a21b97fbb3d303f62a05f4b" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-feature-selection-plot-feature-selection-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-feature-selection-plot-feature-selection-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="1c63f16bcb2b7a0a30fac58cd35aae21944f4e86" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-feature-selection-plot-permutation-test-for-classification-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-feature-selection-plot-permutation-test-for-classification-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="79749995ebd407651c7bc4f5c6ec8e206c8ac25e" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-feature-selection-plot-rfe-digits-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-feature-selection-plot-rfe-digits-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="54ef883f79061ee846c19f5bdffe085f035150f3" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-feature-selection-plot-rfe-with-cross-validation-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-feature-selection-plot-rfe-with-cross-validation-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="1634186515f8932091e6ab53bda8001975d71919" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-feature-selection-plot-select-from-model-boston-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-feature-selection-plot-select-from-model-boston-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="a3303b3ac3fce30c4e43fc8ba3f72663e8ed76b7" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-gaussian-process-plot-compare-gpr-krr-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-gaussian-process-plot-compare-gpr-krr-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="bfd8f2362ebe2bbbd27ccbbe267a761185bc6f6f" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-gaussian-process-plot-gpc-iris-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-gaussian-process-plot-gpc-iris-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="ff3786f221b93aa4ca2e482398947a7baafb6417" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-gaussian-process-plot-gpc-isoprobability-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-gaussian-process-plot-gpc-isoprobability-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="f0252a39f61836c4ed4a9a3fa0f639174c11693e" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-gaussian-process-plot-gpc-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-gaussian-process-plot-gpc-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="0e429e75447e4f20c14f063f42044ba39b630a7d" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-gaussian-process-plot-gpc-xor-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-gaussian-process-plot-gpc-xor-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="91f6472089aa1f5701659819006772953f66b75d" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-gaussian-process-plot-gpr-co2-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-gaussian-process-plot-gpr-co2-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="78d4206024dadb63b6473cd7185f468fe195698f" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-gaussian-process-plot-gpr-noisy-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-gaussian-process-plot-gpr-noisy-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="aac8a2e2cebbd7dfe3d3c339c99766b284a73375" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-gaussian-process-plot-gpr-noisy-targets-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-gaussian-process-plot-gpr-noisy-targets-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="047e559abfd84a27a58029cbe19173d54d47da63" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-gaussian-process-plot-gpr-prior-posterior-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-gaussian-process-plot-gpr-prior-posterior-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="0f2d847d58839c4301554d48a0fabf76c07d297f" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-ard-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-ard-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="18e0a4e07140c7cd0f227ac242f48ac1a190a906" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-bayesian-ridge-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-bayesian-ridge-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="56f35b94e1d4f7da855d5e12f691b8f8b7c88e67" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-huber-vs-ridge-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-huber-vs-ridge-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="9ec8496825a7b32ea9f332cc6dcff2d77dbb514e" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-iris-logistic-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-iris-logistic-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="6e587e63d3c217df9698086c3997e8d23567288b" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-lasso-and-elasticnet-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-lasso-and-elasticnet-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="e70d7276a77ae7624de0177d9be98be307bb1fe8" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-lasso-coordinate-descent-path-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-lasso-coordinate-descent-path-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="56ceac85b799eb0d0f98fb94364a71fead26a92c" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-lasso-dense-vs-sparse-data-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-lasso-dense-vs-sparse-data-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="f68b990ce1a471a81b5d8d8bfb32c52b69e087cc" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-lasso-lars-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-lasso-lars-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="f351e685c16c72ffbef364ee0f3065b690745fa7" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-lasso-model-selection-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-lasso-model-selection-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="3a04ba67f41625aaefd3a84a2dd7dda3aa757ceb" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-logistic-l1-l2-sparsity-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-logistic-l1-l2-sparsity-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="41b0149a044e28f64dfacbf3cf83c86db18c0fbd" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-logistic-multinomial-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-logistic-multinomial-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="35a1e82c2bb4d87fc6515eea1adc9b7605b7befd" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-logistic-path-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-logistic-path-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="dbc3eae9dbc0587871e81eb63192a4e19361490f" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-logistic-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-logistic-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="7af59c6845f2c25c14f670bd32aba7e7b1f4d40f" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-multi-task-lasso-support-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-multi-task-lasso-support-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="22e5a6ad7dcd45f77f1626f152d7a550b38569df" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-ols-3d-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-ols-3d-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="f4bb175beb1a8d0304b33db927305a9ec226496b" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-ols-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-ols-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="dc56b0cbe90bfda8d816199e40e29f3922021e1c" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-ols-ridge-variance-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-ols-ridge-variance-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="54150912743f0186a89cf78ed0a4d3cda4c122d3" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-omp-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-omp-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="9c8e476aa8412a56d3609368a99222ffa324006d" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-polynomial-interpolation-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-polynomial-interpolation-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="c3df591f12d926ecca2e2aa18a74445720812c5e" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-ransac-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-ransac-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="50c2c740c1adea6b6c40c5be2dffa3cc79a957c0" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-ridge-coeffs-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-ridge-coeffs-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="7d94c8e2cdfae354f77ecd6c8f12fbf778fffd56" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-ridge-path-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-ridge-path-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="f42bffd29d1afb501016e49af94a0631203cff33" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-robust-fit-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-robust-fit-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="b197f3218229d3d5e63be2515adfaafdfc05d2ba" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-sgd-comparison-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-sgd-comparison-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="8c2b6cc740b0012850807d0f634c4151a32b6924" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-sgd-early-stopping-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-sgd-early-stopping-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="f6c3872ad34eb0db0be0bceb203b73d7639712ab" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-sgd-iris-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-sgd-iris-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="f23ae092828921e58ca7f9710de4f18bcda6ada1" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-sgd-loss-functions-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-sgd-loss-functions-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="6ef136f1a4bc2ed16960573242ece463b70d246d" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-sgd-penalties-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-sgd-penalties-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="e48d46e145548f966d11ec5c40da49d048e96a70" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-sgd-separating-hyperplane-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-sgd-separating-hyperplane-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="29953ca19c09750035406ed01c9186f89f4e6033" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-sgd-weighted-samples-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-sgd-weighted-samples-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="fd623d31049f8e982bcc0675419dcb0e4863cb8b" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-sparse-logistic-regression-20newsgroups-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-sparse-logistic-regression-20newsgroups-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="461c1bfb2d0d9e9dd1a4eb718c4a06de3505b4ab" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-sparse-logistic-regression-mnist-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-sparse-logistic-regression-mnist-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="a34fd459dc3c2b939ea996c736c7742f7b2f3a13" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-theilsen-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-linear-model-plot-theilsen-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="8fd85370278bf89a6c4e4742b304fcab151c4d5d" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-manifold-plot-compare-methods-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-manifold-plot-compare-methods-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="184181f24d36241b1746e0556e58d0c3381e3cff" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-manifold-plot-lle-digits-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-manifold-plot-lle-digits-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="0cb38d83af0000c123a03317568accf88116ebfb" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-manifold-plot-manifold-sphere-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-manifold-plot-manifold-sphere-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="2d188ac4c79603aa61197792d4c0a7732b1efe90" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-manifold-plot-mds-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-manifold-plot-mds-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="3ff4c2485634c07a67c5b4e3e9406e85d7791ed8" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-manifold-plot-swissroll-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-manifold-plot-swissroll-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="fd18a2f47e138fdc761cae734ff9334e4f6fd1e7" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-manifold-plot-t-sne-perplexity-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-manifold-plot-t-sne-perplexity-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="5c6c0faceee2b3e86b554d2e559997119b1b2164" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-mixture-plot-concentration-prior-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-mixture-plot-concentration-prior-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="1d035123f279ba0b867b4ce9d832c564d110e87a" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-mixture-plot-gmm-covariances-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-mixture-plot-gmm-covariances-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="9e401e40ef06ccd555ed34ca93433273a589124e" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-mixture-plot-gmm-pdf-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-mixture-plot-gmm-pdf-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="b1e0b12a42266749143be8ad159def92fc3430f3" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-mixture-plot-gmm-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-mixture-plot-gmm-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="50bbe25897ef184faa99bad4713c355415b98cd4" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-mixture-plot-gmm-selection-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-mixture-plot-gmm-selection-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="6d54ec6ea21320748867197102311520ef5a919c" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-mixture-plot-gmm-sin-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-mixture-plot-gmm-sin-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="9843c965297c8178e907e3df557c8a41b76c2603" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-model-selection-grid-search-text-feature-extraction-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-model-selection-grid-search-text-feature-extraction-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="101a4f721f1da61b188a5fe223923b0abb8b0981" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-model-selection-plot-confusion-matrix-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-model-selection-plot-confusion-matrix-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="bbc9f929ae4d6aa013de7edbbf70b7f52d43a211" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-model-selection-plot-cv-indices-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-model-selection-plot-cv-indices-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="50813058e92d854b1418f82cf34f8decdb751028" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-model-selection-plot-cv-predict-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-model-selection-plot-cv-predict-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="b5b127da215e1d2f6f29c1b4963670be0b6c8e19" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-model-selection-plot-grid-search-digits-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-model-selection-plot-grid-search-digits-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="59787ace07bae7d63fbe3e3ea7f277388b0e3bf7" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-model-selection-plot-learning-curve-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-model-selection-plot-learning-curve-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="5e04475ab380e2dadcec3c90ba6ac0b96cfa0fc3" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-model-selection-plot-multi-metric-evaluation-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-model-selection-plot-multi-metric-evaluation-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="348fcfb6b160335cb30e90e34a74d5e033b75804" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-model-selection-plot-nested-cross-validation-iris-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-model-selection-plot-nested-cross-validation-iris-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="a1ac869744497c7066cfb0e84e9aeefec2c55a92" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-model-selection-plot-precision-recall-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-model-selection-plot-precision-recall-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="6d31b63ac42224b40a3271126ab3d5b2b812424b" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-model-selection-plot-randomized-search-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-model-selection-plot-randomized-search-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="ba32c9bdfbfd82d515a201a1bedc45066573a8a0" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-model-selection-plot-roc-crossval-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-model-selection-plot-roc-crossval-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="909a2d6367508c324e996545251de0ef50b82c0c" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-model-selection-plot-roc-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-model-selection-plot-roc-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="25aa663debd82b86cd9d0479557451be6749e8cd" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-model-selection-plot-train-error-vs-test-error-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-model-selection-plot-train-error-vs-test-error-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="90572320b5589f40706dbfada4d88f6209e14b2b" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-model-selection-plot-underfitting-overfitting-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-model-selection-plot-underfitting-overfitting-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="4830445743fe0fde13c5e5cddea249f349867474" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-model-selection-plot-validation-curve-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-model-selection-plot-validation-curve-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="f73aa0bf73cee32a75116c3d4f4844b1488cf87b" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-multioutput-plot-classifier-chain-yeast-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-multioutput-plot-classifier-chain-yeast-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="a8427f7c6a262081e3e50abc1b08931253941c3f" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-neighbors-plot-classification-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-neighbors-plot-classification-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="8d2533665f6141bbbaf5fdfd0491f6af4bbf37f5" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-neighbors-plot-digits-kde-sampling-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-neighbors-plot-digits-kde-sampling-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="d22cd165f82b402d733cdc67216bdc20750f4ef3" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-neighbors-plot-kde-1d-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-neighbors-plot-kde-1d-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="6e89c11592ee7dbefdd88a517e1d861d9e859511" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-neighbors-plot-lof-novelty-detection-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-neighbors-plot-lof-novelty-detection-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="5183cfa3b982784941745242231e519d393ca36d" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-neighbors-plot-lof-outlier-detection-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-neighbors-plot-lof-outlier-detection-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="dcf7a38229b7da7c1be6d498d7e8d1d0902c7ee5" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-neighbors-plot-nearest-centroid-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-neighbors-plot-nearest-centroid-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="e5b8c9f0d5181d3a60731841ebe4518fa0b460e5" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-neighbors-plot-regression-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-neighbors-plot-regression-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="c45c2235ea12afddada082f7b594b099aa6e28c9" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-neighbors-plot-species-kde-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-neighbors-plot-species-kde-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="e601d7e44dbf1fb757c50f9db0bd959c3cbb10de" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-neural-networks-plot-mlp-alpha-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-neural-networks-plot-mlp-alpha-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="c3453b08b6ca03af1290fcd5313c734fb158b656" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-neural-networks-plot-mlp-training-curves-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-neural-networks-plot-mlp-training-curves-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="4b1e558decc94f33f0a818df56109d546f9be11f" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-neural-networks-plot-mnist-filters-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-neural-networks-plot-mnist-filters-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="ff7e3a56c0f243e6541d1a54aae0ca4fb5a3d4e0" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-neural-networks-plot-rbm-logistic-classification-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-neural-networks-plot-rbm-logistic-classification-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="fbd0349ccc7dd8c2cec6be81e4b75f47a0f9d6d0" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-plot-anomaly-comparison-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-plot-anomaly-comparison-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="d6d62b669ceec630e8b59c91037d7eeecaa0ef71" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-plot-isotonic-regression-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-plot-isotonic-regression-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="eee68a71329904cc974e740eb205942db654c4cc" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-plot-johnson-lindenstrauss-bound-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-plot-johnson-lindenstrauss-bound-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="c4ddbec1505fe8599c3565222393cfbf9aaf56ae" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-plot-kernel-approximation-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-plot-kernel-approximation-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="444daa6f0dc82d965842c22573960b8f15dd91ba" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-plot-kernel-ridge-regression-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-plot-kernel-ridge-regression-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="7e4b6283d37bd190b723eaae6db995012b7353de" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-plot-missing-values-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-plot-missing-values-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="37cb149d3a2bfed7619d628a25f152ddb6b117b0" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-plot-multilabel-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-plot-multilabel-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="5dc1ee8ca98af7b0eb4ab67966b5758738563d7b" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-plot-multioutput-face-completion-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-plot-multioutput-face-completion-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="af5c5140248997d010a397351fef00db2ec9436a" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-preprocessing-plot-all-scaling-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-preprocessing-plot-all-scaling-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="c139caf53175e8446d0ccc1cb2a5e71ae9cbf39c" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-preprocessing-plot-discretization-classification-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-preprocessing-plot-discretization-classification-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="a14f11d0ec73b4048e326ecb8fc8eab10f71cfda" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-preprocessing-plot-discretization-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-preprocessing-plot-discretization-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="5615569d54337c151864857af984b2d69e40ed5e" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-preprocessing-plot-discretization-strategies-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-preprocessing-plot-discretization-strategies-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="66f747f934f4ec3f8d1c43f9da070641bd3787d7" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-preprocessing-plot-function-transformer-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-preprocessing-plot-function-transformer-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="c5037de42439cbfdbab24e5c5107b301c9162988" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-preprocessing-plot-map-data-to-normal-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-preprocessing-plot-map-data-to-normal-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="8bb884f2ba768713e8f0efa1d587da8a0c02497f" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-preprocessing-plot-scaling-importance-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-preprocessing-plot-scaling-importance-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="a9d45eed177d53aad9184aea245322b1ef516561" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-semi-supervised-plot-label-propagation-digits-active-learning-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-semi-supervised-plot-label-propagation-digits-active-learning-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="5bf39b8c07f943bcc860b9366a381d2a37370892" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-semi-supervised-plot-label-propagation-digits-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-semi-supervised-plot-label-propagation-digits-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="404a50f354f5b2205099d0da0dce8b16b79a324a" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-semi-supervised-plot-label-propagation-structure-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-semi-supervised-plot-label-propagation-structure-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="71d1af177575e98affd77d479b4ef58a066ce699" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-semi-supervised-plot-label-propagation-versus-svm-iris-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-semi-supervised-plot-label-propagation-versus-svm-iris-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="a0d04b44712ae41ae0e2e45df390b0c9eda24586" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-svm-plot-custom-kernel-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-svm-plot-custom-kernel-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="43bb32453a7f7ecc5ca377a7bd960f8ccedfb425" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-svm-plot-iris-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-svm-plot-iris-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="d2060d5d7f9502f15e504f16421cc14954457282" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-svm-plot-oneclass-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-svm-plot-oneclass-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="d7f6ecb403b6f24c6b244cd4abd3a2692560fa4a" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-svm-plot-rbf-parameters-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-svm-plot-rbf-parameters-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="5a2b886e946a778be3ebb1001438dc47a2734a5c" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-svm-plot-separating-hyperplane-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-svm-plot-separating-hyperplane-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="705ab62207e46afd1971b010bcfae139d4b5ef4d" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-svm-plot-separating-hyperplane-unbalanced-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-svm-plot-separating-hyperplane-unbalanced-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="fb082a5f960964e2783cab7ca6d37d150185a7b7" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-svm-plot-svm-anova-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-svm-plot-svm-anova-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="f632f36b5885f5756d91813bb22fa44d68f03116" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-svm-plot-svm-kernels-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-svm-plot-svm-kernels-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="f73d2c4f38913b5dc8b1199295f4b9df24390e11" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-svm-plot-svm-margin-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-svm-plot-svm-margin-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="5f414656456a28060529b310ddeef34e10dd3c72" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-svm-plot-svm-nonlinear-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-svm-plot-svm-nonlinear-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="1d68df55e4099262a837e1126b5d99db60bac360" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-svm-plot-svm-regression-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-svm-plot-svm-regression-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="19c806ef111cd098eb35d9dcdc0b523ba9ddbad7" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-svm-plot-svm-scale-c-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-svm-plot-svm-scale-c-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="a8a2da54fc818cbb79c8fd75e9b0545b034deef6" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-svm-plot-weighted-samples-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-svm-plot-weighted-samples-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="6747fd2fc768f162ccaea39906630cc9ca1097a4" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-text-plot-document-classification-20newsgroups-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-text-plot-document-classification-20newsgroups-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="b3c2083af5b643469d79278f377b3883cab05791" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-text-plot-document-clustering-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-text-plot-document-clustering-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="95849f930e3f08b0c29835434dfe86614fd582c9" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-text-plot-hashing-vs-dict-vectorizer-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-text-plot-hashing-vs-dict-vectorizer-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="7448f611b7b6e4b08752d82e6df080df48107d37" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-tree-plot-iris-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-tree-plot-iris-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="d95d88175e3e7a5215a4182626998467b7697f5c" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-tree-plot-tree-regression-multioutput-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-tree-plot-tree-regression-multioutput-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="b9d31013565b92feb3c18fc5a42e70bee8563b06" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-tree-plot-tree-regression-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-tree-plot-tree-regression-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="c2fde579a9ebaee476918d5cf6cb6b7bc5e3d54b" translate="yes" xml:space="preserve">
          <source>Click &lt;a href=&quot;#sphx-glr-download-auto-examples-tree-plot-unveil-tree-structure-py&quot;&gt;here&lt;/a&gt; to download the full example code</source>
          <target state="translated">单击&lt;a href=&quot;#sphx-glr-download-auto-examples-tree-plot-unveil-tree-structure-py&quot;&gt;此处&lt;/a&gt;下载完整的示例代码</target>
        </trans-unit>
        <trans-unit id="37d26e6cb925551154557ac0f444b5fcda7a9096" translate="yes" xml:space="preserve">
          <source>Click on any estimator in the chart below to see its documentation.</source>
          <target state="translated">点击下图中的任何一个估算器都可以看到它的文档。</target>
        </trans-unit>
        <trans-unit id="29401e632e2e8bffed563fd16c191aaedc2512e1" translate="yes" xml:space="preserve">
          <source>Clone does a deep copy of the model in an estimator without actually copying attached data. It yields a new estimator with the same parameters that has not been fit on any data.</source>
          <target state="translated">克隆在估计器中对模型进行深度复制,而不实际复制附加数据。它产生了一个新的估计器,其参数相同,但没有对任何数据进行拟合。</target>
        </trans-unit>
        <trans-unit id="b2152e32f75a7e9aef9a19a71fda2700b19ab3cf" translate="yes" xml:space="preserve">
          <source>Cluster centers (if affinity != &lt;code&gt;precomputed&lt;/code&gt;).</source>
          <target state="translated">聚类中心（如果亲和力= &lt;code&gt;precomputed&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="725212db452157a463f6ad8306900f3ce8c23c0c" translate="yes" xml:space="preserve">
          <source>Cluster labels for each point in the dataset given to fit(). Noisy samples are given the label -1.</source>
          <target state="translated">给予fit()的数据集中每个点的簇标签。噪声样本的标签为-1。</target>
        </trans-unit>
        <trans-unit id="9ad2623fecce80492a4f55caa035c19bbbe1f536" translate="yes" xml:space="preserve">
          <source>Cluster labels for each point.</source>
          <target state="translated">每个点的聚类标签。</target>
        </trans-unit>
        <trans-unit id="2c78bc327e5dd6e2f343c36fc4096cffd583b1fa" translate="yes" xml:space="preserve">
          <source>Cluster labels to evaluate</source>
          <target state="translated">聚类标签评估</target>
        </trans-unit>
        <trans-unit id="e502635c70ae0703cee8505f1145cd949646ba02" translate="yes" xml:space="preserve">
          <source>Cluster quality metrics evaluated (see &lt;a href=&quot;../../modules/clustering#clustering-evaluation&quot;&gt;Clustering performance evaluation&lt;/a&gt; for definitions and discussions of the metrics):</source>
          <target state="translated">评估群集质量指标（请参阅&lt;a href=&quot;../../modules/clustering#clustering-evaluation&quot;&gt;群集性能评估&lt;/a&gt;以了解指标的定义和讨论）：</target>
        </trans-unit>
        <trans-unit id="b1c68c22e6d9048be8630800d6c67f9b3dce775d" translate="yes" xml:space="preserve">
          <source>Clustering</source>
          <target state="translated">Clustering</target>
        </trans-unit>
        <trans-unit id="a9bbba14b26decdce19d855f392008136855035b" translate="yes" xml:space="preserve">
          <source>Clustering in general and KMeans, in particular, can be seen as a way of choosing a small number of exemplars to compress the information. The problem is sometimes known as &lt;a href=&quot;https://en.wikipedia.org/wiki/Vector_quantization&quot;&gt;vector quantization&lt;/a&gt;. For instance, this can be used to posterize an image:</source>
          <target state="translated">一般而言，尤其是KMeans，聚类可以看作是选择少量样本来压缩信息的一种方式。这个问题有时被称为&lt;a href=&quot;https://en.wikipedia.org/wiki/Vector_quantization&quot;&gt;矢量量化&lt;/a&gt;。例如，这可以用于后代图像：</target>
        </trans-unit>
        <trans-unit id="2c50c2b46c34667e7117d43be1c2e562c55cc79e" translate="yes" xml:space="preserve">
          <source>Clustering metrics</source>
          <target state="translated">聚类指标</target>
        </trans-unit>
        <trans-unit id="cb1e2a02338b3b949008f68bc98e52c55e00683a" translate="yes" xml:space="preserve">
          <source>Clustering text documents using k-means</source>
          <target state="translated">使用k-means对文本文档进行聚类处理。</target>
        </trans-unit>
        <trans-unit id="30b288eb7bf9d9487de379122142320a15fdebdd" translate="yes" xml:space="preserve">
          <source>Clustering: grouping observations together</source>
          <target state="translated">聚类:将观测值分组</target>
        </trans-unit>
        <trans-unit id="0bfe1279bb4ca6a8a6faac91ac579f71387591c2" translate="yes" xml:space="preserve">
          <source>Clusters rows and columns of an array &lt;code&gt;X&lt;/code&gt; to solve the relaxed normalized cut of the bipartite graph created from &lt;code&gt;X&lt;/code&gt; as follows: the edge between row vertex &lt;code&gt;i&lt;/code&gt; and column vertex &lt;code&gt;j&lt;/code&gt; has weight &lt;code&gt;X[i, j]&lt;/code&gt;.</source>
          <target state="translated">聚类数组 &lt;code&gt;X&lt;/code&gt; 的行和列，以解决由 &lt;code&gt;X&lt;/code&gt; 创建的二部图的松弛归一化割，如下所示：行顶点 &lt;code&gt;i&lt;/code&gt; 和列顶点 &lt;code&gt;j&lt;/code&gt; 之间的边的权重 &lt;code&gt;X[i, j]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="350a9d417382f5a7f2bcf42faa6fc84d3f4afa7e" translate="yes" xml:space="preserve">
          <source>Clusters that include samples from different classes do not make for an homogeneous labeling:</source>
          <target state="translated">包括来自不同类的样本的聚类,并不能使其成为同质的标签。</target>
        </trans-unit>
        <trans-unit id="21d0a36411306b7e9c00209b2997620255f16b01" translate="yes" xml:space="preserve">
          <source>Clusters that include samples from totally different classes totally destroy the homogeneity of the labeling, hence:</source>
          <target state="translated">包括来自完全不同类的样本的聚类,完全破坏了标签的同质性,因此。</target>
        </trans-unit>
        <trans-unit id="57f75c19f5137dc6f557185550c93800f6ea9d67" translate="yes" xml:space="preserve">
          <source>Coding method is determined by the object parameter &lt;code&gt;transform_algorithm&lt;/code&gt;.</source>
          <target state="translated">编码方法由对象参数 &lt;code&gt;transform_algorithm&lt;/code&gt; 确定。</target>
        </trans-unit>
        <trans-unit id="cb06261c8cc62e921dde4b9fc02a2e1694fbdc94" translate="yes" xml:space="preserve">
          <source>Coefficient in the convex combination used for the computation of the shrunk estimate.</source>
          <target state="translated">用于计算缩减估计的凸组合中的系数。</target>
        </trans-unit>
        <trans-unit id="6eb9ce76e6c902318b5c713ea2b7eff2c5fa142d" translate="yes" xml:space="preserve">
          <source>Coefficient of the features in the decision function.</source>
          <target state="translated">决策函数中特征的系数。</target>
        </trans-unit>
        <trans-unit id="9335ac6d3dc06978e089d54594f1927d8d3f8804" translate="yes" xml:space="preserve">
          <source>Coefficients along the path</source>
          <target state="translated">沿途系数</target>
        </trans-unit>
        <trans-unit id="e3b55d1975d41b5fff4e9ad38f93f2ec5647067a" translate="yes" xml:space="preserve">
          <source>Coefficients along the path.</source>
          <target state="translated">沿途的系数。</target>
        </trans-unit>
        <trans-unit id="fa77e8a5e9f55cf9b7ee2c39f4205e6c52636e6c" translate="yes" xml:space="preserve">
          <source>Coefficients for SVs of class 0</source>
          <target state="translated">0级SV的系数。</target>
        </trans-unit>
        <trans-unit id="efe40c3306b3cb20abee8a3bbb05ce77dd6289ac" translate="yes" xml:space="preserve">
          <source>Coefficients for SVs of class 1</source>
          <target state="translated">1级SV的系数。</target>
        </trans-unit>
        <trans-unit id="52183a6d620dc4faa9df64c6b066a671ddc44334" translate="yes" xml:space="preserve">
          <source>Coefficients for SVs of class 2</source>
          <target state="translated">2级SV的系数。</target>
        </trans-unit>
        <trans-unit id="6813149dbdceb87b0be7ee92e250483c95a74879" translate="yes" xml:space="preserve">
          <source>Coefficients of the OMP solution. If &lt;code&gt;return_path=True&lt;/code&gt;, this contains the whole coefficient path. In this case its shape is (n_features, n_features) or (n_features, n_targets, n_features) and iterating over the last axis yields coefficients in increasing order of active features.</source>
          <target state="translated">OMP解决方案的系数。如果 &lt;code&gt;return_path=True&lt;/code&gt; ，则包含整个系数路径。在这种情况下，其形状为（n_features，n_features）或（n_features，n_targets，n_features），并且在最后一个轴上进行迭代会按活动特征的递增顺序生成系数。</target>
        </trans-unit>
        <trans-unit id="7bdc01aece7098feeaf5850f231ac633edb7f2c2" translate="yes" xml:space="preserve">
          <source>Coefficients of the regression model (mean of distribution)</source>
          <target state="translated">回归模型的系数(分布平均值)</target>
        </trans-unit>
        <trans-unit id="cbed83a4a186d02d70cb0dcb60b3178ac723bf2a" translate="yes" xml:space="preserve">
          <source>Coefficients of the regression model (median of distribution).</source>
          <target state="translated">回归模型的系数(分布的中位数)。</target>
        </trans-unit>
        <trans-unit id="d4c1fee826111f45d969593495dde7b9eff17e2b" translate="yes" xml:space="preserve">
          <source>Coefficients of the support vector in the decision function.</source>
          <target state="translated">决策函数中支持向量的系数。</target>
        </trans-unit>
        <trans-unit id="1226eb4494b70e162b074bc037e15db4951e7806" translate="yes" xml:space="preserve">
          <source>Coefficients of the support vector in the decision function. For multiclass, coefficient for all 1-vs-1 classifiers. The layout of the coefficients in the multiclass case is somewhat non-trivial. See the section about multi-class classification in the SVM section of the User Guide for details.</source>
          <target state="translated">决策函数中支持向量的系数。对于多类,所有1vs1分类器的系数。在多类情况下,系数的布局有些不简单。详见《用户指南》中SVM部分关于多类分类的章节。</target>
        </trans-unit>
        <trans-unit id="ce5c9f76302b8588b1cbc7696697593535bcf4f3" translate="yes" xml:space="preserve">
          <source>Coefficients of the support vectors in the decision function.</source>
          <target state="translated">决策函数中支持向量的系数。</target>
        </trans-unit>
        <trans-unit id="068c3c39532e7ff86c9deed28a1572dd082ac52a" translate="yes" xml:space="preserve">
          <source>Cohen&amp;rsquo;s kappa: a statistic that measures inter-annotator agreement.</source>
          <target state="translated">科恩的kappa：一种用于度量注释者之间协议的统计数据。</target>
        </trans-unit>
        <trans-unit id="ba1bd26308e7fd52ec2c86f5d52168d4abfa83b0" translate="yes" xml:space="preserve">
          <source>Colin Powell</source>
          <target state="translated">Colin Powell</target>
        </trans-unit>
        <trans-unit id="1d0c8304baedcf8e3a78982c2e7c0b04622bf2a0" translate="yes" xml:space="preserve">
          <source>Color</source>
          <target state="translated">Color</target>
        </trans-unit>
        <trans-unit id="342d5f07003ecbcaa7384f17d74fff74e313e190" translate="yes" xml:space="preserve">
          <source>Color Quantization using K-Means</source>
          <target state="translated">使用K-Means的色彩量化技术</target>
        </trans-unit>
        <trans-unit id="a9b6a6e6ef8e825923d9b955631bb386572228f4" translate="yes" xml:space="preserve">
          <source>Color intensity</source>
          <target state="translated">颜色强度</target>
        </trans-unit>
        <trans-unit id="62d8948d5994620b5f7a2d6fd3d05c117fe6b5c3" translate="yes" xml:space="preserve">
          <source>Colour Intensity:</source>
          <target state="translated">颜色强度。</target>
        </trans-unit>
        <trans-unit id="31fcfedc3c615b68e0fffa28e3f587d06cd50ca2" translate="yes" xml:space="preserve">
          <source>Column 11 is a quantitative measure of disease progression one year after baseline</source>
          <target state="translated">第11栏是对基线一年后疾病进展的定量测量。</target>
        </trans-unit>
        <trans-unit id="93e3433467c485aee71651937555a93de4089a44" translate="yes" xml:space="preserve">
          <source>Column Transformer with Heterogeneous Data Sources</source>
          <target state="translated">带有异构数据源的列式变换器。</target>
        </trans-unit>
        <trans-unit id="82ce278f1cee1185a9e805ad29ac10b07d02b7ba" translate="yes" xml:space="preserve">
          <source>Column Transformer with Mixed Types</source>
          <target state="translated">混合型柱式变压器</target>
        </trans-unit>
        <trans-unit id="c41c32f9dc9c2a85825fb46629a1817b487b1993" translate="yes" xml:space="preserve">
          <source>Column partition labels.</source>
          <target state="translated">栏目分区标签。</target>
        </trans-unit>
        <trans-unit id="da452718347f43443fbdff16a9782d65a8b82080" translate="yes" xml:space="preserve">
          <source>Columns which only contained missing values at &lt;code&gt;fit&lt;/code&gt; are discarded upon &lt;code&gt;transform&lt;/code&gt; if strategy is not &amp;ldquo;constant&amp;rdquo;.</source>
          <target state="translated">如果策略不是&amp;ldquo;恒定的&amp;rdquo; ，则仅包含 &lt;code&gt;fit&lt;/code&gt; 丢失值的列在 &lt;code&gt;transform&lt;/code&gt; 时将被丢弃。</target>
        </trans-unit>
        <trans-unit id="48d7b790fde41fe93fcd982a231897d25ba801fc" translate="yes" xml:space="preserve">
          <source>Combining features using this transformer has the benefit that it allows cross validation and grid searches over the whole process.</source>
          <target state="translated">使用这种变压器组合特征的好处是,它可以在整个过程中进行交叉验证和网格搜索。</target>
        </trans-unit>
        <trans-unit id="153d7a58b3a3e898fcbdd04c462af308414bd09d" translate="yes" xml:space="preserve">
          <source>Comment</source>
          <target state="translated">Comment</target>
        </trans-unit>
        <trans-unit id="7a3f2fc6905f42f51ad0dfc20b513f7776cef93e" translate="yes" xml:space="preserve">
          <source>Comment to insert at the top of the file. This should be either a Unicode string, which will be encoded as UTF-8, or an ASCII byte string. If a comment is given, then it will be preceded by one that identifies the file as having been dumped by scikit-learn. Note that not all tools grok comments in SVMlight files.</source>
          <target state="translated">在文件顶部插入的注释。这个注释应该是Unicode字符串(将被编码为UTF-8)或者ASCII字节字符串。如果给定了注释,那么它将在前面加上一个标识文件已经被scikit-learn转储的注释。注意,并不是所有的工具都能在SVMlight文件中找到注释。</target>
        </trans-unit>
        <trans-unit id="5685b712713d3a79cf8d977fe966cdbac1daa3de" translate="yes" xml:space="preserve">
          <source>Common measures of impurity are Gini</source>
          <target state="translated">衡量不纯洁度的常用指标有:吉尼</target>
        </trans-unit>
        <trans-unit id="f51ff19a9c280ec1baaac3cd946ef87f54397756" translate="yes" xml:space="preserve">
          <source>Compare BIRCH and MiniBatchKMeans</source>
          <target state="translated">比较BIRCH和MiniBatchKMeans。</target>
        </trans-unit>
        <trans-unit id="1a65c39124ce5e8429f6af5a8ec6e4c2b429532f" translate="yes" xml:space="preserve">
          <source>Compare Stochastic learning strategies for MLPClassifier</source>
          <target state="translated">比较MLPClassifier的随机学习策略。</target>
        </trans-unit>
        <trans-unit id="3e6c619e8875defda538b2e5aab30434e34d701a" translate="yes" xml:space="preserve">
          <source>Compare cross decomposition methods</source>
          <target state="translated">比较交叉分解方法</target>
        </trans-unit>
        <trans-unit id="2877762545d8e0b74ac6ff51fb978fca03ecde35" translate="yes" xml:space="preserve">
          <source>Compare fit times with and without early stopping</source>
          <target state="translated">比较有无提前停车的配合时间</target>
        </trans-unit>
        <trans-unit id="2e8237252f759490dc1fafee95b5d627d9ee70fa" translate="yes" xml:space="preserve">
          <source>Compare randomized search and grid search for optimizing hyperparameters of a random forest. All parameters that influence the learning are searched simultaneously (except for the number of estimators, which poses a time / quality tradeoff).</source>
          <target state="translated">比较随机搜索和网格搜索对随机森林超参数的优化。所有影响学习的参数都会被同时搜索(除了估计器的数量,这构成了时间/质量的权衡)。</target>
        </trans-unit>
        <trans-unit id="c95342f0ffb4a9f4e70a70acb4323533ad639f37" translate="yes" xml:space="preserve">
          <source>Compare scores with and without early stopping</source>
          <target state="translated">比较有和没有提前停止的分数</target>
        </trans-unit>
        <trans-unit id="944b7ad8d4d17d66171a898f5c8ad1c5f25b96c2" translate="yes" xml:space="preserve">
          <source>Compare the effect of different scalers on data with outliers</source>
          <target state="translated">比较不同标尺对有离群值的数据的影响。</target>
        </trans-unit>
        <trans-unit id="eb99ab38e6915362eb1ee378862c84146f6ea38b" translate="yes" xml:space="preserve">
          <source>Compared are the estimated probability using a Gaussian naive Bayes classifier without calibration, with a sigmoid calibration, and with a non-parametric isotonic calibration. One can observe that only the non-parametric model is able to provide a probability calibration that returns probabilities close to the expected 0.5 for most of the samples belonging to the middle cluster with heterogeneous labels. This results in a significantly improved Brier score.</source>
          <target state="translated">比较的是使用高斯奈夫贝叶斯分类器在没有校准的情况下,使用sigmoid校准和使用非参数同位素校准的估计概率。可以观察到,只有非参数模型能够提供一个概率校准,对于大多数属于异质标签的中间簇的样本,返回的概率接近预期的0.5。这使得Brier得分得到了显著的提高。</target>
        </trans-unit>
        <trans-unit id="e4da8dbf210db21de41b29901b47d1e254293fdb" translate="yes" xml:space="preserve">
          <source>Compared to metrics such as the subset accuracy, the Hamming loss, or the F1 score, ROC doesn&amp;rsquo;t require optimizing a threshold for each label. The &lt;a href=&quot;generated/sklearn.metrics.roc_auc_score#sklearn.metrics.roc_auc_score&quot;&gt;&lt;code&gt;roc_auc_score&lt;/code&gt;&lt;/a&gt; function can also be used in multi-class classification, if the predicted outputs have been binarized.</source>
          <target state="translated">与子集准确性，汉明损失或F1得分等指标相比，ROC不需要为每个标签优化阈值。该&lt;a href=&quot;generated/sklearn.metrics.roc_auc_score#sklearn.metrics.roc_auc_score&quot;&gt; &lt;code&gt;roc_auc_score&lt;/code&gt; &lt;/a&gt;功能也可以在多类分类中使用，如果预测的输出已被二值化。</target>
        </trans-unit>
        <trans-unit id="97691955d3c387f8277da868e3315ed2aaa338ae" translate="yes" xml:space="preserve">
          <source>Compared to the OLS (ordinary least squares) estimator, the Theil-Sen estimator is robust against outliers. It has a breakdown point of about 29.3% in case of a simple linear regression which means that it can tolerate arbitrary corrupted data (outliers) of up to 29.3% in the two-dimensional case.</source>
          <target state="translated">与OLS(普通最小二乘法)估计器相比,Theil-Sen估计器对离群值的影响很大。在简单线性回归的情况下,它的故障点约为29.3%,这意味着在二维情况下,它可以容忍高达29.3%的任意损坏数据(离群值)。</target>
        </trans-unit>
        <trans-unit id="4c4bef0a0ea831be80c527c7a4d1c24a147f3f4a" translate="yes" xml:space="preserve">
          <source>Compared to the OLS (ordinary least squares) estimator, the coefficient weights are slightly shifted toward zeros, which stabilises them.</source>
          <target state="translated">与OLS(普通最小二乘法)估计器相比,系数权重略微向零移动,使其趋于稳定。</target>
        </trans-unit>
        <trans-unit id="efb847de54981099bf6790cb334783d669798602" translate="yes" xml:space="preserve">
          <source>Compares FeatureHasher and DictVectorizer by using both to vectorize text documents.</source>
          <target state="translated">将FeatureHasher和DictVectorizer进行比较,使用两者对文本文档进行矢量化。</target>
        </trans-unit>
        <trans-unit id="2e7db6c4877b140174e269579322b7fb1682bbbd" translate="yes" xml:space="preserve">
          <source>Comparing an exact RBF kernel (left) with the approximation (right)</source>
          <target state="translated">比较精确的RBF内核(左)和近似值(右)。</target>
        </trans-unit>
        <trans-unit id="6f0b0af43f46b52f9cf06081cd58cf3f0506090a" translate="yes" xml:space="preserve">
          <source>Comparing anomaly detection algorithms for outlier detection on toy datasets</source>
          <target state="translated">比较玩具数据集上的异常点检测算法</target>
        </trans-unit>
        <trans-unit id="64fbf6bb1093b2fcc9572ff65191a3ef4bfa9ef5" translate="yes" xml:space="preserve">
          <source>Comparing different clustering algorithms on toy datasets</source>
          <target state="translated">比较玩具数据集上的不同聚类算法</target>
        </trans-unit>
        <trans-unit id="5ece1c9b7c787b7532a01298bc7e6fba1395cf42" translate="yes" xml:space="preserve">
          <source>Comparing different hierarchical linkage methods on toy datasets</source>
          <target state="translated">比较玩具数据集上的不同层次联系方法</target>
        </trans-unit>
        <trans-unit id="bda44e966ecb51fa4ecebf8c68b4658ddae06067" translate="yes" xml:space="preserve">
          <source>Comparing lasso_path and lars_path with interpolation:</source>
          <target state="translated">比较lasso_path和lars_path的插值。</target>
        </trans-unit>
        <trans-unit id="650fc467b11c67d1ddd10e8b23a040f01639eef0" translate="yes" xml:space="preserve">
          <source>Comparing random forests and the multi-output meta estimator</source>
          <target state="translated">比较随机森林和多产出元估计器。</target>
        </trans-unit>
        <trans-unit id="4cfd19b928e8ba9ba7e417667c0abad0b572ee86" translate="yes" xml:space="preserve">
          <source>Comparing randomized search and grid search for hyperparameter estimation</source>
          <target state="translated">比较随机搜索和网格搜索对超参数估计的作用</target>
        </trans-unit>
        <trans-unit id="fd7d4000c1bff8dde8199573aab1058db56bcbe4" translate="yes" xml:space="preserve">
          <source>Comparing various online solvers</source>
          <target state="translated">比较各种在线解算器</target>
        </trans-unit>
        <trans-unit id="2a4467202fa00542757b59dece21c382c130f3df" translate="yes" xml:space="preserve">
          <source>Comparison for decision boundary generated on iris dataset between Label Propagation and SVM.</source>
          <target state="translated">Label Propagation和SVM之间在虹膜数据集上生成的决策边界比较。</target>
        </trans-unit>
        <trans-unit id="ad179988a9677109af3287893e22c839aebc5786" translate="yes" xml:space="preserve">
          <source>Comparison of Calibration of Classifiers</source>
          <target state="translated">分类器的校准比较</target>
        </trans-unit>
        <trans-unit id="3c8fd248d82fde2e1d29b4a1ee1ab0253ab2b68c" translate="yes" xml:space="preserve">
          <source>Comparison of F-test and mutual information</source>
          <target state="translated">F检验和相互信息的比较</target>
        </trans-unit>
        <trans-unit id="55a1ba88146632c7359c53e34c0d861fa36e6218" translate="yes" xml:space="preserve">
          <source>Comparison of LDA and PCA 2D projection of Iris dataset</source>
          <target state="translated">Iris数据集的LDA和PCA二维投影比较</target>
        </trans-unit>
        <trans-unit id="7a6674e65290cd5be350f3632e5f0b5fd5926101" translate="yes" xml:space="preserve">
          <source>Comparison of Manifold Learning methods</source>
          <target state="translated">歧路学习法的比较</target>
        </trans-unit>
        <trans-unit id="d97b1b643868e4f0022a9c2d5d0d72a0f9511d62" translate="yes" xml:space="preserve">
          <source>Comparison of different linear SVM classifiers on a 2D projection of the iris dataset. We only consider the first 2 features of this dataset:</source>
          <target state="translated">不同线性SVM分类器在虹膜数据集的2D投影上的比较。我们只考虑该数据集的前2个特征。</target>
        </trans-unit>
        <trans-unit id="32d4cb760b38e0227ac244e0657e5593c1e73e04" translate="yes" xml:space="preserve">
          <source>Comparison of kernel ridge and Gaussian process regression</source>
          <target state="translated">核脊和高斯过程回归的比较。</target>
        </trans-unit>
        <trans-unit id="db9a0795ae990e87f96ed619be491011885a02ac" translate="yes" xml:space="preserve">
          <source>Comparison of kernel ridge regression and SVR</source>
          <target state="translated">核脊回归和SVR的比较。</target>
        </trans-unit>
        <trans-unit id="6429842b463ae527f26e74825f8ca9e320812546" translate="yes" xml:space="preserve">
          <source>Comparison of multinomial logistic L1 vs one-versus-rest L1 logistic regression to classify documents from the newgroups20 dataset. Multinomial logistic regression yields more accurate results and is faster to train on the larger scale dataset.</source>
          <target state="translated">多项式逻辑L1与单项式逻辑回归对newgroups20数据集的文档进行分类的比较。多项式逻辑回归产生了更准确的结果,并且在更大规模的数据集上训练速度更快。</target>
        </trans-unit>
        <trans-unit id="21a6bf9e236e3b78bb288eb30b0a1c6c90137f38" translate="yes" xml:space="preserve">
          <source>Comparison of the K-Means and MiniBatchKMeans clustering algorithms</source>
          <target state="translated">K-Means和MiniBatchKMeans聚类算法的比较。</target>
        </trans-unit>
        <trans-unit id="31b7e8f4742d964d31ff33bb544e439b0c0d6064" translate="yes" xml:space="preserve">
          <source>Comparison of the sparsity (percentage of zero coefficients) of solutions when L1 and L2 penalty are used for different values of C. We can see that large values of C give more freedom to the model. Conversely, smaller values of C constrain the model more. In the L1 penalty case, this leads to sparser solutions.</source>
          <target state="translated">对不同的C值采用L1和L2惩罚时,解的稀疏度(零系数的百分比)进行比较,我们可以看到,大的C值给了模型更大的自由度。反之,较小的C值对模型的约束更大。在L1惩罚的情况下,会导致解比较稀疏。</target>
        </trans-unit>
        <trans-unit id="fda18b57b9f854a134b435e73925e86baca480f2" translate="yes" xml:space="preserve">
          <source>Completeness metric of a cluster labeling given a ground truth.</source>
          <target state="translated">给定地真值的聚类标签的完备性度量。</target>
        </trans-unit>
        <trans-unit id="70a091acb2a934994fca24aa2d4fdfb1473b4fe1" translate="yes" xml:space="preserve">
          <source>Complexity of this algorithm is O(n_classes * n_features).</source>
          <target state="translated">该算法的复杂度为O(n_classes*n_features)。</target>
        </trans-unit>
        <trans-unit id="3f83cef14f650854635687ebac520776cdf0a7bb" translate="yes" xml:space="preserve">
          <source>Component labels</source>
          <target state="translated">组件标签</target>
        </trans-unit>
        <trans-unit id="4480855817ea775cd0bce703f28eb97def919b2f" translate="yes" xml:space="preserve">
          <source>Component labels.</source>
          <target state="translated">组件标签。</target>
        </trans-unit>
        <trans-unit id="89c0b90fcc55c3b0909baabc73041c2bc15183f2" translate="yes" xml:space="preserve">
          <source>Components with maximum variance.</source>
          <target state="translated">具有最大方差的成分。</target>
        </trans-unit>
        <trans-unit id="39a0c263d9bed3ac01cf77e6160bb20a2f231ca7" translate="yes" xml:space="preserve">
          <source>Compressive sensing: tomography reconstruction with L1 prior (Lasso)</source>
          <target state="translated">压缩传感:L1先导的断层重建(Lasso)。</target>
        </trans-unit>
        <trans-unit id="34d75f47b4791efd7b65e4c4eda842b2c80696ea" translate="yes" xml:space="preserve">
          <source>Compute Area Under the Curve (AUC) using the trapezoidal rule</source>
          <target state="translated">使用梯形规则计算曲线下面积(AUC)。</target>
        </trans-unit>
        <trans-unit id="648140e87a2cfdf8643a80febbad2c9fd6c126ec" translate="yes" xml:space="preserve">
          <source>Compute Area Under the Receiver Operating Characteristic Curve (ROC AUC) from prediction scores.</source>
          <target state="translated">根据预测分数计算受体工作特征曲线下面积(ROC AUC)。</target>
        </trans-unit>
        <trans-unit id="64ba0635905376fe17e80075ddcc02eed00f4504" translate="yes" xml:space="preserve">
          <source>Compute Lasso path with coordinate descent</source>
          <target state="translated">用坐标下降法计算Lasso路径。</target>
        </trans-unit>
        <trans-unit id="323d288e14d88efb9ac357a3e7b44f5f7d8d7523" translate="yes" xml:space="preserve">
          <source>Compute Least Angle Regression or Lasso path using LARS algorithm [1]</source>
          <target state="translated">利用LARS算法计算最小角度回归或Lasso路径[1]。</target>
        </trans-unit>
        <trans-unit id="08323097f8b7971c6efb3971adbd32db55c71c8e" translate="yes" xml:space="preserve">
          <source>Compute Ranking loss measure</source>
          <target state="translated">计算Ranking loss measure</target>
        </trans-unit>
        <trans-unit id="cec04e070cd6b18399a6527999cf1a28b4305d03" translate="yes" xml:space="preserve">
          <source>Compute Receiver operating characteristic (ROC)</source>
          <target state="translated">计算接收器工作特性(ROC)。</target>
        </trans-unit>
        <trans-unit id="57df440dfb131d51bfa5e78ce87296142b2a3760" translate="yes" xml:space="preserve">
          <source>Compute Receiver operating characteristic (ROC) curve</source>
          <target state="translated">计算接收机工作特性(ROC)曲线。</target>
        </trans-unit>
        <trans-unit id="a32f41d719edb67698014fc75cae6f1bc5eccd70" translate="yes" xml:space="preserve">
          <source>Compute a Logistic Regression model for a list of regularization parameters.</source>
          <target state="translated">计算正则化参数列表的Logistic回归模型。</target>
        </trans-unit>
        <trans-unit id="35502299c016e889cd43cccef723415fb9514bed" translate="yes" xml:space="preserve">
          <source>Compute a gaussian kernel density estimate:</source>
          <target state="translated">计算一个高斯核密度估计。</target>
        </trans-unit>
        <trans-unit id="feb1b9386c0594a120781854956569c0a3a2ca39" translate="yes" xml:space="preserve">
          <source>Compute a two-point auto-correlation function</source>
          <target state="translated">计算两点自动相关函数。</target>
        </trans-unit>
        <trans-unit id="efcb4a6f57ca5c2d7f2da52c278ce3b991d97d3a" translate="yes" xml:space="preserve">
          <source>Compute average precision (AP) from prediction scores</source>
          <target state="translated">根据预测分数计算平均精度(AP)。</target>
        </trans-unit>
        <trans-unit id="0856bede9cb865b7f3cf3d0e05ca8a86d9f2a02a" translate="yes" xml:space="preserve">
          <source>Compute average precision from prediction scores</source>
          <target state="translated">根据预测分数计算平均精度</target>
        </trans-unit>
        <trans-unit id="eef5901ba04fbc574f19251a1e2d86e6323324f6" translate="yes" xml:space="preserve">
          <source>Compute bicluster similarities for pairs of biclusters, one in each set, using the Jaccard index or a similar measure.</source>
          <target state="translated">使用Jaccard指数或类似的度量方法,计算一对双簇的相似性,每个集合中一个双簇。</target>
        </trans-unit>
        <trans-unit id="b0519c4faef47cc89c70461281f8e7c1c778a7f2" translate="yes" xml:space="preserve">
          <source>Compute chi-squared stats between each non-negative feature and class.</source>
          <target state="translated">计算每个非负特征和类之间的chi-squared统计。</target>
        </trans-unit>
        <trans-unit id="da5d07a0b5c16b383ae6782fb203a53efb618007" translate="yes" xml:space="preserve">
          <source>Compute cluster centers and predict cluster index for each sample.</source>
          <target state="translated">计算聚类中心并预测每个样本的聚类指数。</target>
        </trans-unit>
        <trans-unit id="ba753288d81d339b91292a09eecab61295f1c269" translate="yes" xml:space="preserve">
          <source>Compute clustering and transform X to cluster-distance space.</source>
          <target state="translated">计算聚类并将X转化为聚类-距离空间。</target>
        </trans-unit>
        <trans-unit id="2c48e62e0ecb71add78ea5f638b340ea9ae7a96f" translate="yes" xml:space="preserve">
          <source>Compute confusion matrix to evaluate the accuracy of a classification</source>
          <target state="translated">计算混淆矩阵以评估分类的准确性。</target>
        </trans-unit>
        <trans-unit id="f4a2f0e17ce976c427597ce4cb5b2418ef97ce86" translate="yes" xml:space="preserve">
          <source>Compute contingency matrix internally with sparse matrix.</source>
          <target state="translated">用稀疏矩阵内部计算应急矩阵。</target>
        </trans-unit>
        <trans-unit id="6c497f1e484e4cf517d3d44c0018464e2a4b6b5f" translate="yes" xml:space="preserve">
          <source>Compute cosine distance between samples in X and Y.</source>
          <target state="translated">计算X和Y中样本之间的余弦距离。</target>
        </trans-unit>
        <trans-unit id="cd8ed5d5e363ace2701f2e22401c535d96ca5d04" translate="yes" xml:space="preserve">
          <source>Compute cosine similarity between samples in X and Y.</source>
          <target state="translated">计算X和Y中样本之间的余弦相似度。</target>
        </trans-unit>
        <trans-unit id="d4560a64345b576351645afb04f36fa14ded030c" translate="yes" xml:space="preserve">
          <source>Compute data covariance with the FactorAnalysis model.</source>
          <target state="translated">用FactorAnalysis模型计算数据协方差。</target>
        </trans-unit>
        <trans-unit id="eda1edce67247fd794e4663b4d03c2367dfbe8a6" translate="yes" xml:space="preserve">
          <source>Compute data covariance with the generative model.</source>
          <target state="translated">用生成模型计算数据协方差。</target>
        </trans-unit>
        <trans-unit id="4c6301e615a831f83b033341982aa2f280f7d280" translate="yes" xml:space="preserve">
          <source>Compute data precision matrix with the FactorAnalysis model.</source>
          <target state="translated">用FactorAnalysis模型计算数据精度矩阵。</target>
        </trans-unit>
        <trans-unit id="211a2d68ac1ae0db6204a89d9e6f583cabd8678b" translate="yes" xml:space="preserve">
          <source>Compute data precision matrix with the generative model.</source>
          <target state="translated">用生成模型计算数据精度矩阵。</target>
        </trans-unit>
        <trans-unit id="cad8cc4d6f9da0eebf1d28149467fda3ecda9247" translate="yes" xml:space="preserve">
          <source>Compute decision function of &lt;code&gt;X&lt;/code&gt; for each boosting iteration.</source>
          <target state="translated">为每个增强迭代计算 &lt;code&gt;X&lt;/code&gt; 的决策函数。</target>
        </trans-unit>
        <trans-unit id="9f760cc519fff290f984edda45357c744cb16669" translate="yes" xml:space="preserve">
          <source>Compute decision function of &lt;code&gt;X&lt;/code&gt; for each iteration.</source>
          <target state="translated">为每次迭代计算 &lt;code&gt;X&lt;/code&gt; 的决策函数。</target>
        </trans-unit>
        <trans-unit id="94b52963ac0c27260e1db8a245e4e690701b65e6" translate="yes" xml:space="preserve">
          <source>Compute density of a sparse vector</source>
          <target state="translated">计算稀疏向量的密度。</target>
        </trans-unit>
        <trans-unit id="488214dc9ea62731f3a9fe2d6d45ffe2d6b057f1" translate="yes" xml:space="preserve">
          <source>Compute elastic net path with coordinate descent</source>
          <target state="translated">用坐标下降法计算弹性网路</target>
        </trans-unit>
        <trans-unit id="fd9d585420c42446f158168992092e012725477c" translate="yes" xml:space="preserve">
          <source>Compute how far we need to go through the ranked scores to cover all true labels. The best value is equal to the average number of labels in &lt;code&gt;y_true&lt;/code&gt; per sample.</source>
          <target state="translated">计算我们需要经过多大的分数才能覆盖所有真实标签。最佳值等于每个样本的 &lt;code&gt;y_true&lt;/code&gt; 中的平均标签数。</target>
        </trans-unit>
        <trans-unit id="afd7fa8dd1ddf010aac078dc366987ad694006e1" translate="yes" xml:space="preserve">
          <source>Compute incremental mean and variance along an axix on a CSR or CSC matrix.</source>
          <target state="translated">计算CSR或CSC矩阵沿轴线的增量均值和方差。</target>
        </trans-unit>
        <trans-unit id="299a6d66b28f9e5a7b6d236fa4d01b6e8f307634" translate="yes" xml:space="preserve">
          <source>Compute k-means clustering.</source>
          <target state="translated">计算k-means聚类。</target>
        </trans-unit>
        <trans-unit id="e41157744edbc463690f00f2ff6d4fb4787a1d4b" translate="yes" xml:space="preserve">
          <source>Compute label assignment and inertia for the complete dataset once the minibatch optimization has converged in fit.</source>
          <target state="translated">当小批量优化在拟合度上收敛后,计算完整数据集的标签分配和惯性。</target>
        </trans-unit>
        <trans-unit id="78d700515afc3c405f8535c9a91f209cc2e99a89" translate="yes" xml:space="preserve">
          <source>Compute log probabilities of possible outcomes for samples in X.</source>
          <target state="translated">计算X中样本的可能结果的对数概率。</target>
        </trans-unit>
        <trans-unit id="e51084df8dc721d952352f95ba945f7934b20893" translate="yes" xml:space="preserve">
          <source>Compute log(det(A)) for A symmetric</source>
          <target state="translated">计算A对称的对数(det(A))</target>
        </trans-unit>
        <trans-unit id="47965123071576c75e729ea5385b1461e527ad08" translate="yes" xml:space="preserve">
          <source>Compute mean and variance along an axix on a CSR or CSC matrix</source>
          <target state="translated">在CSR或CSC矩阵上沿轴线计算均值和方差。</target>
        </trans-unit>
        <trans-unit id="b2cb91853e0d20de3aea6404b44d5e52d8671a12" translate="yes" xml:space="preserve">
          <source>Compute metric or nonmetric SMACOF algorithm.</source>
          <target state="translated">计算公制或非公制SMACOF算法。</target>
        </trans-unit>
        <trans-unit id="9f7a30353db308ecc88d46161b807d06b38b6873" translate="yes" xml:space="preserve">
          <source>Compute minimum distances between one point and a set of points.</source>
          <target state="translated">计算一个点和一组点之间的最小距离。</target>
        </trans-unit>
        <trans-unit id="1d7eda993673687850b4304d7ba696ecdae2fd7f" translate="yes" xml:space="preserve">
          <source>Compute number of output features.</source>
          <target state="translated">计算输出特征的数量。</target>
        </trans-unit>
        <trans-unit id="d2de5ce9f65eda55c0c856e67c5c9c290cbf60af" translate="yes" xml:space="preserve">
          <source>Compute precision, recall, F-measure and support for each class</source>
          <target state="translated">计算每个类别的精度、召回率、F值和支持率。</target>
        </trans-unit>
        <trans-unit id="44f557d13157deac38642c97f2c503717e0dcd88" translate="yes" xml:space="preserve">
          <source>Compute precision-recall pairs for different probability thresholds</source>
          <target state="translated">计算不同概率阈值的精密度-重合度对。</target>
        </trans-unit>
        <trans-unit id="9bf6f88756fd4d3772b371a6a64d342d565006a6" translate="yes" xml:space="preserve">
          <source>Compute probabilities of possible outcomes for samples in X.</source>
          <target state="translated">计算X中样本的可能结果的概率。</target>
        </trans-unit>
        <trans-unit id="1b121308e5a3fe2788c2cb9b23d4273068836c0b" translate="yes" xml:space="preserve">
          <source>Compute ranking-based average precision</source>
          <target state="translated">计算基于排名的平均精度</target>
        </trans-unit>
        <trans-unit id="af04fade65088fcffb022a74445aa231cb29281f" translate="yes" xml:space="preserve">
          <source>Compute scores for an estimator with different values of a specified parameter. This is similar to grid search with one parameter. However, this will also compute training scores and is merely a utility for plotting the results.</source>
          <target state="translated">计算指定参数的不同值的估计器的得分。这与使用一个参数的网格搜索类似。然而,这也会计算训练分数,只是一个绘制结果的工具。</target>
        </trans-unit>
        <trans-unit id="d8abd4e14ad3352d987ae12f7980d9d10bfc192a" translate="yes" xml:space="preserve">
          <source>Compute the 32bit murmurhash3 of key at seed.</source>
          <target state="translated">计算种子处密钥的32位murmurhash3。</target>
        </trans-unit>
        <trans-unit id="7a1aeb9687c6445d1a3a5e146bafb87c2aeeecb7" translate="yes" xml:space="preserve">
          <source>Compute the ANOVA F-value for the provided sample.</source>
          <target state="translated">计算所提供样本的方差分析F值。</target>
        </trans-unit>
        <trans-unit id="b1450d71574cb342d632a447ca4b6d29b0ae527b" translate="yes" xml:space="preserve">
          <source>Compute the Brier score.</source>
          <target state="translated">计算Brier得分。</target>
        </trans-unit>
        <trans-unit id="1433a957abdd1e494d5d36011186995c347e7785" translate="yes" xml:space="preserve">
          <source>Compute the Brier score. The smaller the Brier score, the better, hence the naming with &amp;ldquo;loss&amp;rdquo;. Across all items in a set N predictions, the Brier score measures the mean squared difference between (1) the predicted probability assigned to the possible outcomes for item i, and (2) the actual outcome. Therefore, the lower the Brier score is for a set of predictions, the better the predictions are calibrated. Note that the Brier score always takes on a value between zero and one, since this is the largest possible difference between a predicted probability (which must be between zero and one) and the actual outcome (which can take on values of only 0 and 1). The Brier loss is composed of refinement loss and calibration loss. The Brier score is appropriate for binary and categorical outcomes that can be structured as true or false, but is inappropriate for ordinal variables which can take on three or more values (this is because the Brier score assumes that all possible outcomes are equivalently &amp;ldquo;distant&amp;rdquo; from one another). Which label is considered to be the positive label is controlled via the parameter pos_label, which defaults to 1. Read more in the &lt;a href=&quot;../calibration#calibration&quot;&gt;User Guide&lt;/a&gt;.</source>
          <target state="translated">计算Brier分数。 Brier分数越小越好，因此命名为&amp;ldquo; loss&amp;rdquo;。在一组N个预测中的所有项目上，Brier分数测量（1）分配给项目i可能结果的预测概率与（2）实际结果之间的均方差。因此，一组预测的Brier分数越低，则对预测的校准就越好。请注意，Brier分数始终取0到1之间的值，因为这是预测概率（必须在0到1之间）和实际结果（只能取0到1）之间的最大可能差值。 ）。布里尔损失由精制损失和校准损失组成。 Brier分数适用于可构造为真或假的二元和分类结果，但是不适用于序数变量，因为序数变量可以采用三个或更多的值（这是因为Brier评分假设所有可能的结果都彼此&amp;ldquo;相等&amp;rdquo;）。哪个标签被视为肯定标签是通过参数pos_label（默认值为1）控制的。&lt;a href=&quot;../calibration#calibration&quot;&gt;用户指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f15921f272f630af4a276423fb730602ae8cdacb" translate="yes" xml:space="preserve">
          <source>Compute the Calinski and Harabaz score.</source>
          <target state="translated">计算卡林斯基和哈拉巴兹的得分。</target>
        </trans-unit>
        <trans-unit id="c28c744138dbe08d7f31167b7b91775208e87779" translate="yes" xml:space="preserve">
          <source>Compute the F-beta score</source>
          <target state="translated">计算F-beta得分</target>
        </trans-unit>
        <trans-unit id="986b4cb44664613a3563ccecfea84ae986f20de0" translate="yes" xml:space="preserve">
          <source>Compute the F1 score, also known as balanced F-score or F-measure</source>
          <target state="translated">计算F1得分,又称平衡F分或F度量。</target>
        </trans-unit>
        <trans-unit id="6791c4384ab5ba9fc361e66b847c6c66ffb7f71f" translate="yes" xml:space="preserve">
          <source>Compute the Guttman Transform</source>
          <target state="translated">计算Guttman变换</target>
        </trans-unit>
        <trans-unit id="83d6020da7dbf6fee1b713472b48c864942c9610" translate="yes" xml:space="preserve">
          <source>Compute the L1 distances between the vectors in X and Y.</source>
          <target state="translated">计算X和Y中向量之间的L1距离。</target>
        </trans-unit>
        <trans-unit id="3eaba662e6b76d5f8383531e16f8207f14bb5111" translate="yes" xml:space="preserve">
          <source>Compute the Matthews correlation coefficient (MCC)</source>
          <target state="translated">计算马修斯相关系数(MCC)</target>
        </trans-unit>
        <trans-unit id="5bf3d72ea29cd7eb65b5c0e7af122cc9d8336dfd" translate="yes" xml:space="preserve">
          <source>Compute the Silhouette Coefficient for each sample.</source>
          <target state="translated">计算每个样本的轮廓系数。</target>
        </trans-unit>
        <trans-unit id="b24d9799869bb373fd014cbc900e11a715e9826a" translate="yes" xml:space="preserve">
          <source>Compute the area under the ROC curve</source>
          <target state="translated">计算ROC曲线下的面积</target>
        </trans-unit>
        <trans-unit id="c27697f73833b9f50c1ae272faa6ca6a07b48429" translate="yes" xml:space="preserve">
          <source>Compute the arithmetic mean along the specified axis.</source>
          <target state="translated">计算沿指定轴的算术平均值。</target>
        </trans-unit>
        <trans-unit id="da4083cd296d6d5b55ec1488ce16e41409b6d737" translate="yes" xml:space="preserve">
          <source>Compute the average Hamming loss.</source>
          <target state="translated">计算平均汉明损失。</target>
        </trans-unit>
        <trans-unit id="b86a9378d552cc0d909df12b151fe22e73b8722b" translate="yes" xml:space="preserve">
          <source>Compute the average log-likelihood of the samples</source>
          <target state="translated">计算样本的平均对数似然比。</target>
        </trans-unit>
        <trans-unit id="b9416911b968a0e326941302857ec909d51d13f3" translate="yes" xml:space="preserve">
          <source>Compute the average number of label pairs that are incorrectly ordered given y_score weighted by the size of the label set and the number of labels not in the label set.</source>
          <target state="translated">计算给定y_score后,由标签集的大小和不在标签集中的标签数量加权后,错误排序的标签对的平均数量。</target>
        </trans-unit>
        <trans-unit id="81a037183e4c2d8fc473e73161745e33322eaecd" translate="yes" xml:space="preserve">
          <source>Compute the average precision score</source>
          <target state="translated">计算平均精度分数</target>
        </trans-unit>
        <trans-unit id="b4831f6411b0abaf1d1c107f83bbff12cbadc148" translate="yes" xml:space="preserve">
          <source>Compute the balanced accuracy</source>
          <target state="translated">计算平衡精度</target>
        </trans-unit>
        <trans-unit id="e65c5f008b9722ede087ce4d4c4ca449bf9ded69" translate="yes" xml:space="preserve">
          <source>Compute the centroids on X by chunking it into mini-batches.</source>
          <target state="translated">通过将其分割成小批来计算X上的中心点。</target>
        </trans-unit>
        <trans-unit id="c89d5789841f4cbc326cb7f3da6e516cdc3f59da" translate="yes" xml:space="preserve">
          <source>Compute the decision function of &lt;code&gt;X&lt;/code&gt;.</source>
          <target state="translated">计算 &lt;code&gt;X&lt;/code&gt; 的决策函数。</target>
        </trans-unit>
        <trans-unit id="d44718d7318484973e17df798c32e8f938c4bcdd" translate="yes" xml:space="preserve">
          <source>Compute the decision function of the given observations.</source>
          <target state="translated">计算给定观测值的决策函数。</target>
        </trans-unit>
        <trans-unit id="3965823305290daffbb34551617f822504672582" translate="yes" xml:space="preserve">
          <source>Compute the distance matrix from a vector array X and optional Y.</source>
          <target state="translated">从向量数组X和可选的Y计算距离矩阵。</target>
        </trans-unit>
        <trans-unit id="4b2bf54a13c71ab685ad4985f177909adce6dce2" translate="yes" xml:space="preserve">
          <source>Compute the embedding vectors for data X</source>
          <target state="translated">计算数据X的嵌入向量。</target>
        </trans-unit>
        <trans-unit id="5132949e32f35740db4996d51f65a7fc5f78db50" translate="yes" xml:space="preserve">
          <source>Compute the embedding vectors for data X and transform X.</source>
          <target state="translated">计算数据X的嵌入向量并变换X。</target>
        </trans-unit>
        <trans-unit id="861577b7ead5df4c77d6031d2e9b320b15294491" translate="yes" xml:space="preserve">
          <source>Compute the expected mean of the latent variables. See Barber, 21.2.33 (or Bishop, 12.66).</source>
          <target state="translated">计算潜变量的预期平均值。见Barber,21.2.33(或Bishop,12.66)。</target>
        </trans-unit>
        <trans-unit id="2d40f4cca6ccb4c13170a36b0487bbebee91fd57" translate="yes" xml:space="preserve">
          <source>Compute the hidden layer activation probabilities, P(h=1|v=X).</source>
          <target state="translated">计算隐藏层激活概率,P(h=1|v=X)。</target>
        </trans-unit>
        <trans-unit id="646642ee7751bfda049cd85bc69e085a285f02b8" translate="yes" xml:space="preserve">
          <source>Compute the homogeneity and completeness and V-Measure scores at once.</source>
          <target state="translated">一次计算均匀性和完整性以及V-Measure得分。</target>
        </trans-unit>
        <trans-unit id="db4d96c82525b88f1daf8c2a3c401cfc0a354916" translate="yes" xml:space="preserve">
          <source>Compute the kernel between arrays X and optional array Y.</source>
          <target state="translated">计算数组X和可选数组Y之间的内核。</target>
        </trans-unit>
        <trans-unit id="22b7b551d836914405ce9906f60ec25cba92a929" translate="yes" xml:space="preserve">
          <source>Compute the kernel density estimate at points X with the given kernel, using the distance metric specified at tree creation.</source>
          <target state="translated">使用树创建时指定的距离度量,计算给定核在点X处的核密度估计。</target>
        </trans-unit>
        <trans-unit id="6b7c230d5f6d01d724593a4d7080bb9c4bdc1f57" translate="yes" xml:space="preserve">
          <source>Compute the laplacian kernel between X and Y.</source>
          <target state="translated">计算X和Y之间的拉普拉斯核。</target>
        </trans-unit>
        <trans-unit id="f07154d5dad19eee4c9824344a75c013c0a973be" translate="yes" xml:space="preserve">
          <source>Compute the linear kernel between X and Y.</source>
          <target state="translated">计算X和Y之间的线性核。</target>
        </trans-unit>
        <trans-unit id="5b31c4c827a71902103a7235f8c509d0248f8eab" translate="yes" xml:space="preserve">
          <source>Compute the log-likelihood of each sample</source>
          <target state="translated">计算每个样本的对数似然率。</target>
        </trans-unit>
        <trans-unit id="368392735da6e6997f197c2cdb0e4d4f00136960" translate="yes" xml:space="preserve">
          <source>Compute the maximum absolute value to be used for later scaling.</source>
          <target state="translated">计算出最大绝对值,用于以后的缩放。</target>
        </trans-unit>
        <trans-unit id="257486f0974ac974f2296b3e424b18cfddfb093f" translate="yes" xml:space="preserve">
          <source>Compute the mean Silhouette Coefficient of all samples.</source>
          <target state="translated">计算所有样本的平均轮廓系数。</target>
        </trans-unit>
        <trans-unit id="7cdc4a4d4be3f0c0e0da9a4b8524005054cf2adb" translate="yes" xml:space="preserve">
          <source>Compute the mean and std to be used for later scaling.</source>
          <target state="translated">计算平均数和标准数,以用于以后的缩放。</target>
        </trans-unit>
        <trans-unit id="708c23d631b3ad9b1deb7857c49a0eea49030b27" translate="yes" xml:space="preserve">
          <source>Compute the median and quantiles to be used for scaling.</source>
          <target state="translated">计算用于缩放的中位数和分位数。</target>
        </trans-unit>
        <trans-unit id="da0e8e8b04ade9a6bae510b7d564bbdcd0cb51aa" translate="yes" xml:space="preserve">
          <source>Compute the minimum and maximum to be used for later scaling.</source>
          <target state="translated">计算用于以后缩放的最小值和最大值。</target>
        </trans-unit>
        <trans-unit id="8d425ae5df26f638da816a0ca68839de4ce59afb" translate="yes" xml:space="preserve">
          <source>Compute the negative Mahalanobis distances.</source>
          <target state="translated">计算负的马哈兰诺比斯距离。</target>
        </trans-unit>
        <trans-unit id="0eefe20318937af590d5a14bb03965ff863b1f96" translate="yes" xml:space="preserve">
          <source>Compute the pairwise distances between X and Y</source>
          <target state="translated">计算X和Y之间的对偶距离。</target>
        </trans-unit>
        <trans-unit id="4836b9ea0a201715487df0ac44841b2f918b1443" translate="yes" xml:space="preserve">
          <source>Compute the per-sample average log-likelihood of the given data X.</source>
          <target state="translated">计算给定数据X的每样本平均对数似然。</target>
        </trans-unit>
        <trans-unit id="067400dbbb9d4c2b305dae24a86c4388035fed47" translate="yes" xml:space="preserve">
          <source>Compute the polynomial kernel between X and Y:</source>
          <target state="translated">计算X和Y之间的多项式核。</target>
        </trans-unit>
        <trans-unit id="b1a41a3de4a3e8218520785913a4a9a9fde48807" translate="yes" xml:space="preserve">
          <source>Compute the precision</source>
          <target state="translated">计算精度</target>
        </trans-unit>
        <trans-unit id="8f9898e1100aaf4cb75cc0fa3593f0481536f795" translate="yes" xml:space="preserve">
          <source>Compute the probability estimates for each single sample in X and each possible outcome seen during training (categorical distribution).</source>
          <target state="translated">计算X中每个单一样本和训练期间看到的每个可能结果的概率估计(分类分布)。</target>
        </trans-unit>
        <trans-unit id="a01fd1dfaccdd3f6b2a1c5bc979370ba9c19f7da" translate="yes" xml:space="preserve">
          <source>Compute the pseudo-likelihood of X.</source>
          <target state="translated">计算X的伪可能性。</target>
        </trans-unit>
        <trans-unit id="c55b9e93f5a053026ca57e49080e439273526412" translate="yes" xml:space="preserve">
          <source>Compute the quantiles used for transforming.</source>
          <target state="translated">计算用于变换的量子。</target>
        </trans-unit>
        <trans-unit id="6cbd9a24a82e89768edc0bbe0fbed46a157c152a" translate="yes" xml:space="preserve">
          <source>Compute the rbf (gaussian) kernel between X and Y:</source>
          <target state="translated">计算X和Y之间的rbf(高斯)核。</target>
        </trans-unit>
        <trans-unit id="3c63997962399cf8cbfd8c2dc136c7ffa6ae86d3" translate="yes" xml:space="preserve">
          <source>Compute the recall</source>
          <target state="translated">计算回收率</target>
        </trans-unit>
        <trans-unit id="e84b376d541ce1eb641ae1a7b107a73f3cc7c773" translate="yes" xml:space="preserve">
          <source>Compute the reconstruction error for the embedding.</source>
          <target state="translated">计算嵌入的重建误差。</target>
        </trans-unit>
        <trans-unit id="50319208787514a1e5adfffbca5ca4c8bbb7c7b8" translate="yes" xml:space="preserve">
          <source>Compute the segmentation of a 2D image with Ward hierarchical clustering. The clustering is spatially constrained in order for each segmented region to be in one piece.</source>
          <target state="translated">用Ward层次聚类法计算二维图像的分割。聚类是有空间约束的,以使每个分割区域都在一块。</target>
        </trans-unit>
        <trans-unit id="d63e88292882d8a3c2035093b4a5b5ce8f2a311f" translate="yes" xml:space="preserve">
          <source>Compute the sigmoid kernel between X and Y:</source>
          <target state="translated">计算X和Y之间的sigmoid核。</target>
        </trans-unit>
        <trans-unit id="5e1c74fbfcfce982c4480cd3ce1b6dd4826a403b" translate="yes" xml:space="preserve">
          <source>Compute the stress</source>
          <target state="translated">计算应力</target>
        </trans-unit>
        <trans-unit id="282c5b536f5739265e15858513765bb477403488" translate="yes" xml:space="preserve">
          <source>Compute the total log probability under the model.</source>
          <target state="translated">计算模型下的总对数概率。</target>
        </trans-unit>
        <trans-unit id="42575ce845e937240cb038905220b64cbdfb0c6a" translate="yes" xml:space="preserve">
          <source>Compute the two-point correlation function</source>
          <target state="translated">计算两点相关函数</target>
        </trans-unit>
        <trans-unit id="62fdd2409117bc1144e00337b88535ed0651bcaf" translate="yes" xml:space="preserve">
          <source>Compute the weighted log probabilities for each sample.</source>
          <target state="translated">计算每个样本的加权对数概率。</target>
        </trans-unit>
        <trans-unit id="fbc459dd34c1bd16085ff683f9ab9d502e6e86f3" translate="yes" xml:space="preserve">
          <source>Compute true and predicted probabilities for a calibration curve.</source>
          <target state="translated">计算校准曲线的真实和预测概率。</target>
        </trans-unit>
        <trans-unit id="a554e25862538e2de7adf7590105a464314e1308" translate="yes" xml:space="preserve">
          <source>Computes Lasso Path along the regularization parameter using the LARS algorithm on the diabetes dataset. Each color represents a different feature of the coefficient vector, and this is displayed as a function of the regularization parameter.</source>
          <target state="translated">在糖尿病数据集上使用LARS算法沿着正则化参数计算Lasso路径。每种颜色代表系数向量的不同特征,并显示为正则化参数的函数。</target>
        </trans-unit>
        <trans-unit id="c859aee6794b2390ebae14877873c853cd25768e" translate="yes" xml:space="preserve">
          <source>Computes a Bayesian Ridge Regression on a synthetic dataset.</source>
          <target state="translated">在合成数据集上计算贝叶斯岭回归。</target>
        </trans-unit>
        <trans-unit id="82f66e4d56f82dd7fd7456183765f2701ee341f2" translate="yes" xml:space="preserve">
          <source>Computes a Theil-Sen Regression on a synthetic dataset.</source>
          <target state="translated">在合成数据集上计算Theil-Sen回归。</target>
        </trans-unit>
        <trans-unit id="a257e9de167d61044426af14542f87d3298ec436" translate="yes" xml:space="preserve">
          <source>Computes a truncated randomized SVD</source>
          <target state="translated">计算截断的随机SVD。</target>
        </trans-unit>
        <trans-unit id="3a5fccba40d9ba6920102426670674ff62c3156e" translate="yes" xml:space="preserve">
          <source>Computes an approximate feature map using the kernel between some training points and X.</source>
          <target state="translated">利用一些训练点和X之间的内核计算近似特征图。</target>
        </trans-unit>
        <trans-unit id="0c170f7ffd6d3749e80b9ea170205aea179b3cae" translate="yes" xml:space="preserve">
          <source>Computes an orthonormal matrix whose range approximates the range of A.</source>
          <target state="translated">计算一个正交矩阵,其范围近似于A的范围。</target>
        </trans-unit>
        <trans-unit id="35d0d8e7123cb4a321139c2e30fcf0f5649e8014" translate="yes" xml:space="preserve">
          <source>Computes multidimensional scaling using the SMACOF algorithm.</source>
          <target state="translated">使用SMACOF算法计算多维缩放。</target>
        </trans-unit>
        <trans-unit id="11b6d0c028234f24d0497c809d49331e248d24da" translate="yes" xml:space="preserve">
          <source>Computes the (weighted) graph of Neighbors for points in X</source>
          <target state="translated">计算X中各点的邻居图(加权)。</target>
        </trans-unit>
        <trans-unit id="8f3e003137dd5776dd389bd7390f2f48ec93b20c" translate="yes" xml:space="preserve">
          <source>Computes the (weighted) graph of k-Neighbors for points in X</source>
          <target state="translated">计算X中各点的k-Neighbors图(加权)。</target>
        </trans-unit>
        <trans-unit id="e52fe857fbf3d25130f2949257d48594c971f443" translate="yes" xml:space="preserve">
          <source>Computes the Davies-Bouldin score.</source>
          <target state="translated">计算Davies-Bouldin得分。</target>
        </trans-unit>
        <trans-unit id="0156861b81096335244cb8db63d3d8a9da0e65c9" translate="yes" xml:space="preserve">
          <source>Computes the Maximum likelihood covariance estimator</source>
          <target state="translated">计算最大似然协方差估计器。</target>
        </trans-unit>
        <trans-unit id="ef9a56a9175c11409b91543170764c35110a5261" translate="yes" xml:space="preserve">
          <source>Computes the Mean Squared Error between two covariance estimators.</source>
          <target state="translated">计算两个协方差估计器之间的均方误差。</target>
        </trans-unit>
        <trans-unit id="a465ba19f97fd30c862e82d919ca8eeb5c5f63bf" translate="yes" xml:space="preserve">
          <source>Computes the Mean Squared Error between two covariance estimators. (In the sense of the Frobenius norm).</source>
          <target state="translated">计算两个协方差估计器之间的均方误差。在Frobenius规范的意义上)。</target>
        </trans-unit>
        <trans-unit id="5473f49ed7cdd8c26bdd88d13fbdc8c505645e67" translate="yes" xml:space="preserve">
          <source>Computes the additive chi-squared kernel between observations in X and Y</source>
          <target state="translated">计算X和Y中的观测值之间的加性齐次方核。</target>
        </trans-unit>
        <trans-unit id="7c25782b515e6d5260c8fc35dfde598ee6a3eb69" translate="yes" xml:space="preserve">
          <source>Computes the distance between every pair of samples</source>
          <target state="translated">计算每对样本之间的距离</target>
        </trans-unit>
        <trans-unit id="b52a7324f57246cbbd5bb6df8bb9f57b8d44ba8f" translate="yes" xml:space="preserve">
          <source>Computes the distances between (X[0], Y[0]), (X[1], Y[1]), etc&amp;hellip;</source>
          <target state="translated">计算（X [​​0]，Y [0]），（X [1]，Y [1]）等之间的距离&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="e7886554f1e5ef3cc4cb9ef079ae7030461bb572" translate="yes" xml:space="preserve">
          <source>Computes the distances between corresponding elements of two arrays</source>
          <target state="translated">计算两个数组中相应元素之间的距离。</target>
        </trans-unit>
        <trans-unit id="b67a0c26c63e14e0d2065edbe20b1eb27265d6e1" translate="yes" xml:space="preserve">
          <source>Computes the exponential chi-squared kernel X and Y.</source>
          <target state="translated">计算X和Y的指数齐次方核。</target>
        </trans-unit>
        <trans-unit id="3c563a26de8e8e1c270bb15cf98f6d595747840c" translate="yes" xml:space="preserve">
          <source>Computes the log-likelihood of a Gaussian data set with &lt;code&gt;self.covariance_&lt;/code&gt; as an estimator of its covariance matrix.</source>
          <target state="translated">使用 &lt;code&gt;self.covariance_&lt;/code&gt; 作为其协方差矩阵的估计值，计算高斯数据集的对数似然。</target>
        </trans-unit>
        <trans-unit id="9f5ffcd1866ec15d4ad27cd436d0fbe22cbdb7e2" translate="yes" xml:space="preserve">
          <source>Computes the paired cosine distances between X and Y</source>
          <target state="translated">计算X和Y之间的成对余弦距离。</target>
        </trans-unit>
        <trans-unit id="b8fb059c1d372cdc82b954fc529feaf43b2e3b6b" translate="yes" xml:space="preserve">
          <source>Computes the paired distances between X and Y.</source>
          <target state="translated">计算X和Y之间的配对距离。</target>
        </trans-unit>
        <trans-unit id="683a423cda2de3a8c627daf5789319dae4824e9e" translate="yes" xml:space="preserve">
          <source>Computes the paired euclidean distances between X and Y</source>
          <target state="translated">计算X和Y之间的成对欧氏距离。</target>
        </trans-unit>
        <trans-unit id="d8be4733fcbbdb9c105f67596e85fa2bebd206f1" translate="yes" xml:space="preserve">
          <source>Computes the position of the points in the embedding space</source>
          <target state="translated">计算点在嵌入空间中的位置。</target>
        </trans-unit>
        <trans-unit id="26ada34af5cccdaffe26e364c78d7033541359b3" translate="yes" xml:space="preserve">
          <source>Computes the squared Mahalanobis distances of given observations.</source>
          <target state="translated">计算给定观测值的马哈兰诺比斯距离的平方。</target>
        </trans-unit>
        <trans-unit id="0fe14fa20a118f97b78bbb776b8e138eb54dc0e1" translate="yes" xml:space="preserve">
          <source>Computing the mean in float64 is more accurate:</source>
          <target state="translated">用float64计算平均值更准确。</target>
        </trans-unit>
        <trans-unit id="1358074ee42d8284713409e2e76d82a0cfcef4b3" translate="yes" xml:space="preserve">
          <source>Concatenates results of multiple transformer objects.</source>
          <target state="translated">连接多个变压器对象的结果。</target>
        </trans-unit>
        <trans-unit id="944e271145df50f22e5e0b36ac64f5d7cfb68dcc" translate="yes" xml:space="preserve">
          <source>Concatenating multiple feature extraction methods</source>
          <target state="translated">连接多种特征提取方法</target>
        </trans-unit>
        <trans-unit id="6eb3fadf57c5ecec6d500bc4d3366784fa9e9f36" translate="yes" xml:space="preserve">
          <source>Concentration Prior Type Analysis of Variation Bayesian Gaussian Mixture</source>
          <target state="translated">集中度先验类型变异分析 贝叶斯高斯混合物</target>
        </trans-unit>
        <trans-unit id="3c17e32124bf3bc815a3f5652968b97e3235e242" translate="yes" xml:space="preserve">
          <source>Concrete density computed from when density = &amp;ldquo;auto&amp;rdquo;.</source>
          <target state="translated">从密度=&amp;ldquo;自动&amp;rdquo;时计算的混凝土密度。</target>
        </trans-unit>
        <trans-unit id="ec32407898fe465388bfebaa024e6a1c7ef6390b" translate="yes" xml:space="preserve">
          <source>Concrete number of components computed when n_components=&amp;rdquo;auto&amp;rdquo;.</source>
          <target state="translated">当n_components =&amp;ldquo; auto&amp;rdquo;时计算的具体组件数。</target>
        </trans-unit>
        <trans-unit id="938f4d7a0a8f45e5c44e2e20c379d755f7cb501f" translate="yes" xml:space="preserve">
          <source>Confidence scores per (sample, class) combination. In the binary case, confidence score for self.classes_[1] where &amp;gt;0 means this class would be predicted.</source>
          <target state="translated">每个（样本，类别）组合的置信度得分。在二进制情况下，self.classes_ [1]的置信度得分，其中&amp;gt; 0表示将预测该类。</target>
        </trans-unit>
        <trans-unit id="b5baa4a70e41997939455899e378a84a249c44a6" translate="yes" xml:space="preserve">
          <source>Confusion matrix</source>
          <target state="translated">混淆矩阵</target>
        </trans-unit>
        <trans-unit id="c9b8c5dcc385768486444a21de443c055f607a69" translate="yes" xml:space="preserve">
          <source>Connectivity constraints and single, complete or average linkage can enhance the &amp;lsquo;rich getting richer&amp;rsquo; aspect of agglomerative clustering, particularly so if they are built with &lt;a href=&quot;generated/sklearn.neighbors.kneighbors_graph#sklearn.neighbors.kneighbors_graph&quot;&gt;&lt;code&gt;sklearn.neighbors.kneighbors_graph&lt;/code&gt;&lt;/a&gt;. In the limit of a small number of clusters, they tend to give a few macroscopically occupied clusters and almost empty ones. (see the discussion in &lt;a href=&quot;../auto_examples/cluster/plot_agglomerative_clustering#sphx-glr-auto-examples-cluster-plot-agglomerative-clustering-py&quot;&gt;Agglomerative clustering with and without structure&lt;/a&gt;). Single linkage is the most brittle linkage option with regard to this issue.</source>
          <target state="translated">连接性约束和单个，完整或平均链接可以增强聚集集群的&amp;ldquo;富人致富&amp;rdquo;方面，尤其是如果它们是使用&lt;a href=&quot;generated/sklearn.neighbors.kneighbors_graph#sklearn.neighbors.kneighbors_graph&quot;&gt; &lt;code&gt;sklearn.neighbors.kneighbors_graph&lt;/code&gt; 构建的&lt;/a&gt;。在少数簇的限制下，它们倾向于给出一些宏观上占据的簇，而几乎是空的簇。 （请参阅&lt;a href=&quot;../auto_examples/cluster/plot_agglomerative_clustering#sphx-glr-auto-examples-cluster-plot-agglomerative-clustering-py&quot;&gt;带有和不带有结构的聚集聚类中&lt;/a&gt;的讨论）。就此问题而言，单联动是最脆弱的联动选项。</target>
        </trans-unit>
        <trans-unit id="960e8b6354ecbdda7823e78a171c23b9f4287c27" translate="yes" xml:space="preserve">
          <source>Connectivity matrix. Defines for each feature the neighboring features following a given structure of the data. This can be a connectivity matrix itself or a callable that transforms the data into a connectivity matrix, such as derived from kneighbors_graph. Default is None, i.e, the hierarchical clustering algorithm is unstructured.</source>
          <target state="translated">连接性矩阵。为每个特征定义给定数据结构后的相邻特征。这可以是一个连通性矩阵本身,也可以是一个将数据转换为连通性矩阵的可调用,比如从 kneighbors_graph 中导出。默认为None,即层次聚类算法是非结构化的。</target>
        </trans-unit>
        <trans-unit id="bae9fec0162adc344ae364786e112dd05134e769" translate="yes" xml:space="preserve">
          <source>Connectivity matrix. Defines for each sample the neighboring samples following a given structure of the data. This can be a connectivity matrix itself or a callable that transforms the data into a connectivity matrix, such as derived from kneighbors_graph. Default is None, i.e, the hierarchical clustering algorithm is unstructured.</source>
          <target state="translated">连接性矩阵。为每个样本定义给定数据结构后的相邻样本。这可以是一个连通性矩阵本身,也可以是一个将数据转换为连通性矩阵的callable,比如从neighbors_graph导出。默认为None,即层次聚类算法是非结构化的。</target>
        </trans-unit>
        <trans-unit id="5a7d85944898df130c5a4e55a4d87aeaabdafa94" translate="yes" xml:space="preserve">
          <source>Connectivity-constrained clustering</source>
          <target state="translated">连接性约束聚类</target>
        </trans-unit>
        <trans-unit id="5cdfc4ebe12f7bb30a3c65a259ae360efdcb6fe7" translate="yes" xml:space="preserve">
          <source>Consider a data set of \(n\) observations from the same distribution described by \(p\) features. Consider now that we add one more observation to that data set. Is the new observation so different from the others that we can doubt it is regular? (i.e. does it come from the same distribution?) Or on the contrary, is it so similar to the other that we cannot distinguish it from the original observations? This is the question addressed by the novelty detection tools and methods.</source>
          <target state="translated">考虑一个数据集,其中有来自同一分布的由特征描述的观测值(n)。现在考虑我们向该数据集增加一个观测值。新的观测值是否与其他观测值如此不同,以至于我们可以怀疑它是有规律的?(即它是否来自相同的分布?)或者相反,它是否与其他观测值如此相似,以至于我们无法将其与原始观测值区分开来? 这就是新颖性检测工具和方法所要解决的问题。</target>
        </trans-unit>
        <trans-unit id="67170de12deeb113b386be5488ecbd73db8ec98a" translate="yes" xml:space="preserve">
          <source>Consider a three class problem with class 0 having three support vectors \(v^{0}_0, v^{1}_0, v^{2}_0\) and class 1 and 2 having two support vectors \(v^{0}_1, v^{1}_1\) and \(v^{0}_2, v^{1}_2\) respectively. For each support vector \(v^{j}_i\), there are two dual coefficients. Let&amp;rsquo;s call the coefficient of support vector \(v^{j}_i\) in the classifier between classes \(i\) and \(k\)\(\alpha^{j}_{i,k}\). Then &lt;code&gt;dual_coef_&lt;/code&gt; looks like this:</source>
          <target state="translated">考虑一个三类问题，其中类别0具有三个支持向量\（v ^ {0} _0，v ^ {1} _0，v ^ {2} _0 \），类别1和2具有两个支持向量\（v ^ { 0} _1，v ^ {1} _1 \）和\（v ^ {0} _2，v ^ {1} _2 \）。对于每个支持向量\（v ^ {j} _i \），有两个对偶系数。让我们在类\（i \）和\（k \）\（\ alpha ^ {j} _ {i，k} \）之间的分类器中调用支持向量\（v ^ {j} _i \）的系数。然后， &lt;code&gt;dual_coef_&lt;/code&gt; 看起来像这样：</target>
        </trans-unit>
        <trans-unit id="36a4b96f3b397b47501af3921d5e27f6cd59b881" translate="yes" xml:space="preserve">
          <source>Consider performing dimensionality reduction (&lt;a href=&quot;decomposition#pca&quot;&gt;PCA&lt;/a&gt;, &lt;a href=&quot;decomposition#ica&quot;&gt;ICA&lt;/a&gt;, or &lt;a href=&quot;feature_selection#feature-selection&quot;&gt;Feature selection&lt;/a&gt;) beforehand to give your tree a better chance of finding features that are discriminative.</source>
          <target state="translated">请考虑预先执行降维（&lt;a href=&quot;decomposition#pca&quot;&gt;PCA&lt;/a&gt;，&lt;a href=&quot;decomposition#ica&quot;&gt;ICA&lt;/a&gt;或&amp;ldquo; &lt;a href=&quot;feature_selection#feature-selection&quot;&gt;特征选择&amp;rdquo;&lt;/a&gt;），以使您的树有更好的机会找到具有区别性的特征。</target>
        </trans-unit>
        <trans-unit id="ea35182a15f0d8c71f1bdcb0c1e66c1ac5407012" translate="yes" xml:space="preserve">
          <source>Considering the rows of X (and Y=X) as vectors, compute the distance matrix between each pair of vectors.</source>
          <target state="translated">将X(和Y=X)的行视为向量,计算每对向量之间的距离矩阵。</target>
        </trans-unit>
        <trans-unit id="04c5ef6777691e57665d4c2efbe9391f472d4f86" translate="yes" xml:space="preserve">
          <source>Constant by which the updates are multiplied. Defaults to 1.</source>
          <target state="translated">乘以更新的常数。默认值为1。</target>
        </trans-unit>
        <trans-unit id="42e3ef2e93bf997992c07da5682d23e9b4c98953" translate="yes" xml:space="preserve">
          <source>Constant in the decision function.</source>
          <target state="translated">决策函数中的常数。</target>
        </trans-unit>
        <trans-unit id="a9a01523924699b49e2ced4b931cf5b8b3a174dd" translate="yes" xml:space="preserve">
          <source>Constant kernel.</source>
          <target state="translated">恒定的内核。</target>
        </trans-unit>
        <trans-unit id="24faa3c80865d0dcaaf281042db8103611ea0c30" translate="yes" xml:space="preserve">
          <source>Constant that multiplies the L1 term. Defaults to 1.0. &lt;code&gt;alpha = 0&lt;/code&gt; is equivalent to an ordinary least square, solved by the &lt;a href=&quot;sklearn.linear_model.linearregression#sklearn.linear_model.LinearRegression&quot;&gt;&lt;code&gt;LinearRegression&lt;/code&gt;&lt;/a&gt; object. For numerical reasons, using &lt;code&gt;alpha = 0&lt;/code&gt; with the &lt;code&gt;Lasso&lt;/code&gt; object is not advised. Given this, you should use the &lt;a href=&quot;sklearn.linear_model.linearregression#sklearn.linear_model.LinearRegression&quot;&gt;&lt;code&gt;LinearRegression&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">与L1项相乘的常数。默认为1.0。 &lt;code&gt;alpha = 0&lt;/code&gt; 等效于由&lt;a href=&quot;sklearn.linear_model.linearregression#sklearn.linear_model.LinearRegression&quot;&gt; &lt;code&gt;LinearRegression&lt;/code&gt; &lt;/a&gt;对象求解的普通最小二乘。出于数字原因，不建议对 &lt;code&gt;Lasso&lt;/code&gt; 对象使用 &lt;code&gt;alpha = 0&lt;/code&gt; 。鉴于此，您应该使用&lt;a href=&quot;sklearn.linear_model.linearregression#sklearn.linear_model.LinearRegression&quot;&gt; &lt;code&gt;LinearRegression&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="cdc935c0df60afeb59f575f9959405620a2bfeb0" translate="yes" xml:space="preserve">
          <source>Constant that multiplies the L1/L2 term. Defaults to 1.0</source>
          <target state="translated">乘以L1/L2项的常数。默认值为1.0。</target>
        </trans-unit>
        <trans-unit id="22eac925dec69e3ebde95ca698523f7b72ba4d1e" translate="yes" xml:space="preserve">
          <source>Constant that multiplies the penalty term. Defaults to 1.0. &lt;code&gt;alpha = 0&lt;/code&gt; is equivalent to an ordinary least square, solved by &lt;a href=&quot;sklearn.linear_model.linearregression#sklearn.linear_model.LinearRegression&quot;&gt;&lt;code&gt;LinearRegression&lt;/code&gt;&lt;/a&gt;. For numerical reasons, using &lt;code&gt;alpha = 0&lt;/code&gt; with the LassoLars object is not advised and you should prefer the LinearRegression object.</source>
          <target state="translated">乘以惩罚项的常数。默认为1.0。 &lt;code&gt;alpha = 0&lt;/code&gt; 等效于由&lt;a href=&quot;sklearn.linear_model.linearregression#sklearn.linear_model.LinearRegression&quot;&gt; &lt;code&gt;LinearRegression&lt;/code&gt; &lt;/a&gt;求解的普通最小二乘。出于数字原因，不建议对LassoLars对象使用 &lt;code&gt;alpha = 0&lt;/code&gt; ，并且您应该首选LinearRegression对象。</target>
        </trans-unit>
        <trans-unit id="232248a28c61ab090a4f58c67af1810b071d9159" translate="yes" xml:space="preserve">
          <source>Constant that multiplies the penalty terms. Defaults to 1.0. See the notes for the exact mathematical meaning of this parameter.``alpha = 0`` is equivalent to an ordinary least square, solved by the &lt;a href=&quot;sklearn.linear_model.linearregression#sklearn.linear_model.LinearRegression&quot;&gt;&lt;code&gt;LinearRegression&lt;/code&gt;&lt;/a&gt; object. For numerical reasons, using &lt;code&gt;alpha = 0&lt;/code&gt; with the &lt;code&gt;Lasso&lt;/code&gt; object is not advised. Given this, you should use the &lt;a href=&quot;sklearn.linear_model.linearregression#sklearn.linear_model.LinearRegression&quot;&gt;&lt;code&gt;LinearRegression&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">乘以惩罚项的常数。默认为1.0。请参阅注释以获取此参数的确切数学含义.``alpha = 0''等效于由&lt;a href=&quot;sklearn.linear_model.linearregression#sklearn.linear_model.LinearRegression&quot;&gt; &lt;code&gt;LinearRegression&lt;/code&gt; &lt;/a&gt;对象求解的普通最小二乘。出于数字原因，不建议对 &lt;code&gt;Lasso&lt;/code&gt; 对象使用 &lt;code&gt;alpha = 0&lt;/code&gt; 。鉴于此，您应该使用&lt;a href=&quot;sklearn.linear_model.linearregression#sklearn.linear_model.LinearRegression&quot;&gt; &lt;code&gt;LinearRegression&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="9ab1bee52054bd0b7b6f8c606a9e2eecbfcc209e" translate="yes" xml:space="preserve">
          <source>Constant that multiplies the regularization term if regularization is used. Defaults to 0.0001</source>
          <target state="translated">如果使用正则化,则将正则化项相乘的常数。默认值为0.0001。</target>
        </trans-unit>
        <trans-unit id="4fa50dedbb2619b9e150f56cb219faf9699af8b0" translate="yes" xml:space="preserve">
          <source>Constant that multiplies the regularization term. Defaults to 0.0001 Also used to compute learning_rate when set to &amp;lsquo;optimal&amp;rsquo;.</source>
          <target state="translated">与正则项相乘的常数。默认值为0.0001，当设置为&amp;ldquo;最佳&amp;rdquo;时，也用于计算learning_rate。</target>
        </trans-unit>
        <trans-unit id="2e231ebcaef19d456f2d136a3169cf6b5e5ab53a" translate="yes" xml:space="preserve">
          <source>Constant that multiplies the regularization terms. Set it to zero to have no regularization.</source>
          <target state="translated">乘以正则化项的常数。设为零则不进行正则化。</target>
        </trans-unit>
        <trans-unit id="a8e4ac4d0f0bf92ccd94a2bb63b28792de58c788" translate="yes" xml:space="preserve">
          <source>Constants in decision function.</source>
          <target state="translated">决定函数中的常数:</target>
        </trans-unit>
        <trans-unit id="b6b4e30bd1ddeed52b207288927c19855caa56d5" translate="yes" xml:space="preserve">
          <source>Construct a ColumnTransformer from the given transformers.</source>
          <target state="translated">从给定的变换器中构造一个ColumnTransformer。</target>
        </trans-unit>
        <trans-unit id="d9876331a323decf3c627d254cc36516ce4a8ce4" translate="yes" xml:space="preserve">
          <source>Construct a FeatureUnion from the given transformers.</source>
          <target state="translated">从给定的变压器中构建一个FeatureUnion。</target>
        </trans-unit>
        <trans-unit id="d15b981a0da98a2f09ac0806b8f696ab51aad2b1" translate="yes" xml:space="preserve">
          <source>Construct a Pipeline from the given estimators.</source>
          <target state="translated">从给定的估算器中构建一个管道。</target>
        </trans-unit>
        <trans-unit id="429bdc63fc295b9433b9f61fc522ecaf27caabbe" translate="yes" xml:space="preserve">
          <source>Constructor for feature mappings. Must conform to the collections.Mapping API.</source>
          <target state="translated">特征映射的构造函数。必须符合 collections.Mapping API。</target>
        </trans-unit>
        <trans-unit id="a4e6b74e94392a37e364ca975a54a1c7c6339ef2" translate="yes" xml:space="preserve">
          <source>Constructs a new estimator with the same parameters.</source>
          <target state="translated">用相同的参数构造一个新的估计器。</target>
        </trans-unit>
        <trans-unit id="192a44c42fe34770f74fad640dcb2b271d4b0a18" translate="yes" xml:space="preserve">
          <source>Constructs a transformer from an arbitrary callable.</source>
          <target state="translated">从一个任意的callable构造一个变压器。</target>
        </trans-unit>
        <trans-unit id="897601dd4d6b38c29e62cf243ed499228c8f112c" translate="yes" xml:space="preserve">
          <source>Constructs an approximate feature map for an arbitrary kernel using a subset of the data as basis.</source>
          <target state="translated">以数据的子集为基础,为任意内核构建近似特征图。</target>
        </trans-unit>
        <trans-unit id="9143de8bc05f40da1fed32d2cbc4fbbdc5dcde6d" translate="yes" xml:space="preserve">
          <source>Contains a dictionnary of named parameters used to configure the store backend.</source>
          <target state="translated">包含用于配置商店后台的命名参数字典。</target>
        </trans-unit>
        <trans-unit id="ad4ca88187de97fbf46538cb33d10bd18d73237b" translate="yes" xml:space="preserve">
          <source>Contains all the labels for the problem. Used in multiclass hinge loss.</source>
          <target state="translated">包含问题的所有标签。用于多类铰链损失。</target>
        </trans-unit>
        <trans-unit id="f60a97228b135975d46edd18b584b359b3c54a68" translate="yes" xml:space="preserve">
          <source>Context manager for global scikit-learn configuration</source>
          <target state="translated">全局scikit-learn配置的上下文管理器。</target>
        </trans-unit>
        <trans-unit id="cea0690ef53381d15901c908c6247dc6118f3f09" translate="yes" xml:space="preserve">
          <source>Contingency matrix (&lt;a href=&quot;generated/sklearn.metrics.cluster.contingency_matrix#sklearn.metrics.cluster.contingency_matrix&quot;&gt;&lt;code&gt;sklearn.metrics.cluster.contingency_matrix&lt;/code&gt;&lt;/a&gt;) reports the intersection cardinality for every true/predicted cluster pair. The contingency matrix provides sufficient statistics for all clustering metrics where the samples are independent and identically distributed and one doesn&amp;rsquo;t need to account for some instances not being clustered.</source>
          <target state="translated">列联矩阵（&lt;a href=&quot;generated/sklearn.metrics.cluster.contingency_matrix#sklearn.metrics.cluster.contingency_matrix&quot;&gt; &lt;code&gt;sklearn.metrics.cluster.contingency_matrix&lt;/code&gt; &lt;/a&gt;）报告每个真实/预测的聚类对的交集基数。权变矩阵为所有聚类指标提供了足够的统计数据，在这些度量中样本是独立的并且分布相同，并且不需要考虑某些未聚类的实例。</target>
        </trans-unit>
        <trans-unit id="c920a2e75ecfa73b3ce1e2d3d0f4f8b98a256e09" translate="yes" xml:space="preserve">
          <source>Contingency matrix is easy to interpret for a small number of clusters, but becomes very hard to interpret for a large number of clusters.</source>
          <target state="translated">或然矩阵对于少量的聚类很容易解释,但对于大量的聚类就很难解释了。</target>
        </trans-unit>
        <trans-unit id="e3ee88da2e469ceefc30f27eec85ea97f69a3782" translate="yes" xml:space="preserve">
          <source>Continuing the example above:</source>
          <target state="translated">继续上面的例子。</target>
        </trans-unit>
        <trans-unit id="18da154a88e91bac7242fb46db447fdfc74084ce" translate="yes" xml:space="preserve">
          <source>Contours of where the penalty is equal to 1 for the three penalties L1, L2 and elastic-net.</source>
          <target state="translated">L1、L2和弹性网三种惩罚的等值线,其中惩罚等于1。</target>
        </trans-unit>
        <trans-unit id="9680c6daa52c3cb637e46a7398eda6c2d8a29b98" translate="yes" xml:space="preserve">
          <source>Contrary to inertia, &lt;strong&gt;ARI requires knowledge of the ground truth classes&lt;/strong&gt; while is almost never available in practice or requires manual assignment by human annotators (as in the supervised learning setting).</source>
          <target state="translated">与惯性相反，&lt;strong&gt;ARI需要掌握地面真理类的知识，&lt;/strong&gt;而在实践中几乎是不可用的，或者需要人工注释者手动分配（如在有监督的学习环境中）。</target>
        </trans-unit>
        <trans-unit id="341382011f0d0db781de14fb9c3eb6c776976598" translate="yes" xml:space="preserve">
          <source>Contrary to inertia, &lt;strong&gt;FMI-based measures require the knowledge of the ground truth classes&lt;/strong&gt; while almost never available in practice or requires manual assignment by human annotators (as in the supervised learning setting).</source>
          <target state="translated">与惯性相反，&lt;strong&gt;基于FMI的测度需要了解地面真相类别，&lt;/strong&gt;而&lt;strong&gt;实际上&lt;/strong&gt;却几乎不可用，或者需要人工注释者手动分配（如在有监督的学习环境中）。</target>
        </trans-unit>
        <trans-unit id="271eb0cdb861deae44485e2bc098ae5f587e9bfc" translate="yes" xml:space="preserve">
          <source>Contrary to inertia, &lt;strong&gt;MI-based measures require the knowledge of the ground truth classes&lt;/strong&gt; while almost never available in practice or requires manual assignment by human annotators (as in the supervised learning setting).</source>
          <target state="translated">与惯性相反，&lt;strong&gt;基于MI的度量要求了解地面真理类，&lt;/strong&gt;而在实践中却几乎不可用，或者需要人工注释者手动分配（如在有监督的学习环境中）。</target>
        </trans-unit>
        <trans-unit id="21f3306ef604975a85330acedaf50280324172bf" translate="yes" xml:space="preserve">
          <source>Contrary to the &lt;code&gt;fit&lt;/code&gt; method, the first call to &lt;code&gt;partial_fit&lt;/code&gt; needs to be passed the list of all the expected class labels.</source>
          <target state="translated">与 &lt;code&gt;fit&lt;/code&gt; 方法相反，对 &lt;code&gt;partial_fit&lt;/code&gt; 的第一次调用需要传递所有预期类标签的列表。</target>
        </trans-unit>
        <trans-unit id="d5af4a67deaa7119d445bef536fe7de34ba04d43" translate="yes" xml:space="preserve">
          <source>Control early stopping based on the consecutive number of mini batches that does not yield an improvement on the smoothed inertia.</source>
          <target state="translated">根据连续的小批数控制提前停车,对平滑的惯性没有产生改善。</target>
        </trans-unit>
        <trans-unit id="2514990d630c1cdd437bbfd7b02e8432cc27d86d" translate="yes" xml:space="preserve">
          <source>Control early stopping based on the relative center changes as measured by a smoothed, variance-normalized of the mean center squared position changes. This early stopping heuristics is closer to the one used for the batch variant of the algorithms but induces a slight computational and memory overhead over the inertia heuristic.</source>
          <target state="translated">根据平均中心平方位置变化的平滑化、方差归一化所测得的相对中心变化来控制早期停车。这种提前停止的启发式算法更接近于用于算法的批量变体,但比惯性启发式算法诱发了轻微的计算和内存开销。</target>
        </trans-unit>
        <trans-unit id="9380a452f7de2992a5c93c5b229806fcd0c2a887" translate="yes" xml:space="preserve">
          <source>Control the fraction of the maximum number of counts for a center to be reassigned. A higher value means that low count centers are more easily reassigned, which means that the model will take longer to converge, but should converge in a better clustering.</source>
          <target state="translated">控制一个中心被重新分配的最大计数的分数。较高的值意味着低计数中心更容易被重新分配,这意味着模型将需要更长的时间来收敛,但应该在更好的聚类中收敛。</target>
        </trans-unit>
        <trans-unit id="15091f46741b90eb3764cf94ba34530fa628ba2a" translate="yes" xml:space="preserve">
          <source>Control the pseudo random number generator used to generate the matrix at fit time. If int, random_state is the seed used by the random number generator; If RandomState instance, random_state is the random number generator; If None, the random number generator is the RandomState instance used by &lt;code&gt;np.random&lt;/code&gt;.</source>
          <target state="translated">控制用于在拟合时间生成矩阵的伪随机数生成器。如果为int，则random_state是随机数生成器使用的种子；否则为false。如果是RandomState实例，则random_state是随机数生成器；如果没有，随机数生成器所使用的RandomState实例 &lt;code&gt;np.random&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="71030f4a93c0337f3b23fe84a1fcc23e15d3934c" translate="yes" xml:space="preserve">
          <source>Controls how tight natural clusters in the original space are in the embedded space and how much space will be between them. For larger values, the space between natural clusters will be larger in the embedded space. Again, the choice of this parameter is not very critical. If the cost function increases during initial optimization, the early exaggeration factor or the learning rate might be too high.</source>
          <target state="translated">控制原始空间中的自然簇在嵌入空间中的紧密程度,以及它们之间的空间会有多大。对于较大的数值,在嵌入空间中,自然簇之间的空间会更大。同样,这个参数的选择也不是很关键。如果在初始优化过程中,成本函数增加,那么早期的夸大因子或学习率可能会过高。</target>
        </trans-unit>
        <trans-unit id="c969a527296074596b004747a340afce3aed0f03" translate="yes" xml:space="preserve">
          <source>Controls output verbosity.</source>
          <target state="translated">控制输出啰嗦。</target>
        </trans-unit>
        <trans-unit id="41dcaeda215dd5dd8916c15eb7aef0c5f9f7bc23" translate="yes" xml:space="preserve">
          <source>Controls the number of jobs that get dispatched during parallel execution. Reducing this number can be useful to avoid an explosion of memory consumption when more jobs get dispatched than CPUs can process. This parameter can be:</source>
          <target state="translated">控制在并行执行期间调度的作业数量。当分派的作业数量多于CPU所能处理的数量时,减少这个数量可以有效避免内存消耗的爆炸。这个参数可以是</target>
        </trans-unit>
        <trans-unit id="f0b7d7189338f3e9f7c47caf5a005d510dfbad16" translate="yes" xml:space="preserve">
          <source>Controls the verbosity of the imputer.</source>
          <target state="translated">控制输入法的词性。</target>
        </trans-unit>
        <trans-unit id="25f460da2a89a7aee34af5cdc4a2fa62b3d347e8" translate="yes" xml:space="preserve">
          <source>Controls the verbosity of the tree building process.</source>
          <target state="translated">控制建树过程的动词性。</target>
        </trans-unit>
        <trans-unit id="9f9c8a55e53a3381b6ef65a9a21b83c44ea6f79e" translate="yes" xml:space="preserve">
          <source>Controls the verbosity when fitting and predicting.</source>
          <target state="translated">控制拟合和预测时的动词性。</target>
        </trans-unit>
        <trans-unit id="96efe49b5c2ce31133fbf6d0aa2be91ccfbda6b5" translate="yes" xml:space="preserve">
          <source>Controls the verbosity: the higher, the more messages.</source>
          <target state="translated">控制语气:语气越高,信息越多。</target>
        </trans-unit>
        <trans-unit id="1152a26fb9c2c4303da0aef7851965ded80287aa" translate="yes" xml:space="preserve">
          <source>Controls the verbosity; the higher, the more messages. Defaults to 0.</source>
          <target state="translated">控制啰嗦程度,越高,信息越多。默认值为0。</target>
        </trans-unit>
        <trans-unit id="c225dcf750eb5fa127359ebe4d7ceac8f42643e0" translate="yes" xml:space="preserve">
          <source>Controls verbosity of output.</source>
          <target state="translated">控制输出的语气。</target>
        </trans-unit>
        <trans-unit id="93fdd602ee18e25eb2727ec789a40d6aff1320ec" translate="yes" xml:space="preserve">
          <source>Convenience and encapsulation</source>
          <target state="translated">便利和封装</target>
        </trans-unit>
        <trans-unit id="ac4c3a92187eb7d374b79b6b43ef1f5161fb5058" translate="yes" xml:space="preserve">
          <source>Convenience method; equivalent to calling fit(X) followed by predict(X).</source>
          <target state="translated">方便的方法;相当于调用fit(X),然后再调用predict(X)。</target>
        </trans-unit>
        <trans-unit id="8c705219f458dd48a3c9ac56e27e154b5e17df17" translate="yes" xml:space="preserve">
          <source>Convenient way to get row and column indicators together.</source>
          <target state="translated">方便地将行指标和列指标放在一起。</target>
        </trans-unit>
        <trans-unit id="61856b8c17a4ff32006fe4b7dcc6f96f253b2120" translate="yes" xml:space="preserve">
          <source>Conventions</source>
          <target state="translated">Conventions</target>
        </trans-unit>
        <trans-unit id="ef03e86344fffef94e6af57d8dfdb4fccd637abb" translate="yes" xml:space="preserve">
          <source>Convergence tolerance for arpack. If 0, optimal value will be chosen by arpack.</source>
          <target state="translated">arpack的收敛容忍度。如果为0,arpack将选择最佳值。</target>
        </trans-unit>
        <trans-unit id="02476ad03c7df4ea0fa69ae136afe1133a575db9" translate="yes" xml:space="preserve">
          <source>Convergence tolerance passed to arpack or lobpcg. not used if eigen_solver == &amp;lsquo;dense&amp;rsquo;.</source>
          <target state="translated">收敛容差传递给了arpack或lobpcg。如果eigen_solver =='dense'，则不使用。</target>
        </trans-unit>
        <trans-unit id="6104dafc53641be939806288c84f02c95ee6e322" translate="yes" xml:space="preserve">
          <source>Convergence tolerance: threshold to consider the system at steady state</source>
          <target state="translated">收敛容限:考虑系统处于稳定状态的阈值。</target>
        </trans-unit>
        <trans-unit id="40ea607be29a105fc8b5592f361fd424789f6536" translate="yes" xml:space="preserve">
          <source>Convert a collection of raw documents to a matrix of TF-IDF features.</source>
          <target state="translated">将原始文档集合转换为TF-IDF特征的矩阵。</target>
        </trans-unit>
        <trans-unit id="d5b52cfdf6cf721e4692c585f9819f88d5a2c9fb" translate="yes" xml:space="preserve">
          <source>Convert a collection of text documents to a matrix of token counts</source>
          <target state="translated">将文本文档集合转换为标记计数矩阵。</target>
        </trans-unit>
        <trans-unit id="8a40c374ac3dc0433fa42f33df48482c5a317f46" translate="yes" xml:space="preserve">
          <source>Convert a collection of text documents to a matrix of token occurrences</source>
          <target state="translated">将文本文档集合转换为标记出现的矩阵。</target>
        </trans-unit>
        <trans-unit id="4fecd09b30f69c1c69bb8549fcae5b9fa2a4c0f6" translate="yes" xml:space="preserve">
          <source>Convert a raw name for a data set in a mldata.org filename.</source>
          <target state="translated">转换mldata.org文件名中数据集的原始名称。</target>
        </trans-unit>
        <trans-unit id="6633a1eedcdfaaeb4750a8e3fb32acd1c7c8bbbd" translate="yes" xml:space="preserve">
          <source>Convert all characters to lowercase before tokenizing.</source>
          <target state="translated">在标记化之前,将所有字符转换为小写。</target>
        </trans-unit>
        <trans-unit id="25206b925045783624af565b3e23971592534a0b" translate="yes" xml:space="preserve">
          <source>Convert coefficient matrix to dense array format.</source>
          <target state="translated">将系数矩阵转换为密集数组格式。</target>
        </trans-unit>
        <trans-unit id="4c990c305d7f6012cd20d1af540eaf5100b63b4c" translate="yes" xml:space="preserve">
          <source>Convert coefficient matrix to sparse format.</source>
          <target state="translated">将系数矩阵转换为稀疏格式。</target>
        </trans-unit>
        <trans-unit id="5931d7de6b13c6287a7a4f8e06e5d0f8909995a2" translate="yes" xml:space="preserve">
          <source>Convert the Reduced distance to the true distance.</source>
          <target state="translated">将缩短的距离转换为真实距离。</target>
        </trans-unit>
        <trans-unit id="f418e7c207e34c024eb84f2e8b6a6db0435fa9d7" translate="yes" xml:space="preserve">
          <source>Convert the back data to the original representation.</source>
          <target state="translated">将后面的数据转换为原始表示。</target>
        </trans-unit>
        <trans-unit id="74eb4f56c30060e1142a3516415efb5c780eac8c" translate="yes" xml:space="preserve">
          <source>Convert the data back to the original representation.</source>
          <target state="translated">将数据转换回原始表示。</target>
        </trans-unit>
        <trans-unit id="68e0217f6a01f2909ea9c5a239ce6cd7c32c629a" translate="yes" xml:space="preserve">
          <source>Convert the true distance to the reduced distance.</source>
          <target state="translated">将真实距离转换为缩小的距离。</target>
        </trans-unit>
        <trans-unit id="46218cee339d3f0cc349e0c6e8abf35cd33c2084" translate="yes" xml:space="preserve">
          <source>Converts an array-like to an array of floats.</source>
          <target state="translated">将类数组转换为浮动数组。</target>
        </trans-unit>
        <trans-unit id="d4f462f38aca4bf1ac105ee1eddde501a9dcfdc4" translate="yes" xml:space="preserve">
          <source>Converts the &lt;code&gt;coef_&lt;/code&gt; member (back) to a numpy.ndarray. This is the default format of &lt;code&gt;coef_&lt;/code&gt; and is required for fitting, so calling this method is only required on models that have previously been sparsified; otherwise, it is a no-op.</source>
          <target state="translated">将 &lt;code&gt;coef_&lt;/code&gt; 成员（返回）转换为numpy.ndarray。这是 &lt;code&gt;coef_&lt;/code&gt; 的默认格式，并且是拟合所需的格式，因此仅在以前稀疏的模型上才需要调用此方法。否则，它是无操作的。</target>
        </trans-unit>
        <trans-unit id="76ebd50dd4c2e82aa7e0eb5df218e62542514a2a" translate="yes" xml:space="preserve">
          <source>Converts the &lt;code&gt;coef_&lt;/code&gt; member to a scipy.sparse matrix, which for L1-regularized models can be much more memory- and storage-efficient than the usual numpy.ndarray representation.</source>
          <target state="translated">将 &lt;code&gt;coef_&lt;/code&gt; 成员转换为scipy.sparse矩阵，对于L1规范化的模型，该矩阵可以比通常的numpy.ndarray表示具有更高的内存和存储效率。</target>
        </trans-unit>
        <trans-unit id="1a4a7cf9492d6df6e11032f8445b45932e1b6e83" translate="yes" xml:space="preserve">
          <source>Coordinate descent is an algorithm that considers each column of data at a time hence it will automatically convert the X input as a Fortran-contiguous numpy array if necessary.</source>
          <target state="translated">坐标下降是一种每次考虑每列数据的算法,因此,如果需要的话,它会自动将X输入转换为Fortran-contiguous numpy数组。</target>
        </trans-unit>
        <trans-unit id="870a5d6100d135766bc77695574da540ee893529" translate="yes" xml:space="preserve">
          <source>Coordinates of cluster centers</source>
          <target state="translated">集群中心的坐标</target>
        </trans-unit>
        <trans-unit id="8865ad37ee18260598a8fdbe7099597648bc6ec8" translate="yes" xml:space="preserve">
          <source>Coordinates of cluster centers.</source>
          <target state="translated">集群中心的坐标:</target>
        </trans-unit>
        <trans-unit id="52eda026e6a4fd2c8ccd0edc63c74f2ce35c5d2c" translate="yes" xml:space="preserve">
          <source>Coordinates of the data points to cluster. It must be noted that X will be copied if it is not C-contiguous.</source>
          <target state="translated">要聚类的数据点的坐标。必须注意的是,如果X不是C-毗连,将被复制。</target>
        </trans-unit>
        <trans-unit id="b626a199fd3ee2857afc89fd6b054868517d3ec8" translate="yes" xml:space="preserve">
          <source>Coordinates of the points in a &lt;code&gt;n_components&lt;/code&gt;-space.</source>
          <target state="translated">在该点的坐标 &lt;code&gt;n_components&lt;/code&gt; -Space。</target>
        </trans-unit>
        <trans-unit id="91685781b13c12a2deb3e87aa755ff51d8e70b91" translate="yes" xml:space="preserve">
          <source>Copy of each core sample found by training.</source>
          <target state="translated">训练发现的每个核心样本的副本。</target>
        </trans-unit>
        <trans-unit id="c9c9cf21b0df2066c0226166b5d0d772d7f7cbdb" translate="yes" xml:space="preserve">
          <source>Copy the input X or not.</source>
          <target state="translated">复制输入X或不。</target>
        </trans-unit>
        <trans-unit id="dfaf143194db75f4a3c8af4f0ccd65ef4ce9d2ca" translate="yes" xml:space="preserve">
          <source>Corrected robust covariance estimate.</source>
          <target state="translated">修正后的稳健协方差估计。</target>
        </trans-unit>
        <trans-unit id="da746b615f8bba2ec6532f8648057de38305b593" translate="yes" xml:space="preserve">
          <source>Correction using the empirical correction factor suggested by Rousseeuw and Van Driessen in &lt;a href=&quot;#r491365aeaa84-rvd&quot; id=&quot;id4&quot;&gt;[RVD]&lt;/a&gt;.</source>
          <target state="translated">使用Rousseeuw和Van Driessen在&lt;a href=&quot;#r491365aeaa84-rvd&quot; id=&quot;id4&quot;&gt;[RVD]中&lt;/a&gt;建议的经验校正因子进行校正。</target>
        </trans-unit>
        <trans-unit id="6d009fc759f0ef447bc2524869e238f14a6025a1" translate="yes" xml:space="preserve">
          <source>Correction using the empirical correction factor suggested by Rousseeuw and Van Driessen in &lt;a href=&quot;#rbb2ba44703ed-rvd&quot; id=&quot;id2&quot;&gt;[RVD]&lt;/a&gt;.</source>
          <target state="translated">使用Rousseeuw和Van Driessen在&lt;a href=&quot;#rbb2ba44703ed-rvd&quot; id=&quot;id2&quot;&gt;[RVD]中&lt;/a&gt;建议的经验校正因子进行校正。</target>
        </trans-unit>
        <trans-unit id="413c8e4cf78c497a725b45fa87d53ae37410d36c" translate="yes" xml:space="preserve">
          <source>Correctness of Kruskal&amp;rsquo;s algorithms for monotone regression with ties Leeuw, Psychometrica, 1977</source>
          <target state="translated">Kruskal的单调回归算法的正确性与联系Leeuw，Psychometrica，1977年</target>
        </trans-unit>
        <trans-unit id="b41bf640b7ac09f534da672cb5738d09926eaa90" translate="yes" xml:space="preserve">
          <source>Cosine distance is defined as 1.0 minus the cosine similarity.</source>
          <target state="translated">余弦距离定义为1.0减去余弦相似度。</target>
        </trans-unit>
        <trans-unit id="4a69b1685976d059f7f5f3c3b58c835fc4d9bbe7" translate="yes" xml:space="preserve">
          <source>Cosine kernel (&lt;code&gt;kernel = 'cosine'&lt;/code&gt;)</source>
          <target state="translated">余弦内核（ &lt;code&gt;kernel = 'cosine'&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="03abdef83323d138c5b1193431f448dc7f41be7f" translate="yes" xml:space="preserve">
          <source>Cosine similarity, or the cosine kernel, computes similarity as the normalized dot product of X and Y:</source>
          <target state="translated">余弦相似度,或余弦核,计算相似度为X和Y的归一化点积。</target>
        </trans-unit>
        <trans-unit id="eb4c4e2fd546b2295a26e1d9cacc7daea41b731c" translate="yes" xml:space="preserve">
          <source>Covariance estimator with shrinkage</source>
          <target state="translated">带收缩的协方差估计器</target>
        </trans-unit>
        <trans-unit id="4cd7773c07cb31bdb02fa913921b35d12c23a136" translate="yes" xml:space="preserve">
          <source>Covariance matrices of each class.</source>
          <target state="translated">每一类的协方差矩阵。</target>
        </trans-unit>
        <trans-unit id="690ee22b7e10a0143c1e2b27a9113bff6d9d007c" translate="yes" xml:space="preserve">
          <source>Covariance matrix (shared by all classes).</source>
          <target state="translated">协方差矩阵(所有班级共享);</target>
        </trans-unit>
        <trans-unit id="b37a6c3837c72f178d2a36d319738694928d78ed" translate="yes" xml:space="preserve">
          <source>Covariance matrix to be shrunk</source>
          <target state="translated">待缩小的协方差矩阵</target>
        </trans-unit>
        <trans-unit id="6d0b20dabf4f7b3ee5a6ff3bf69bb2efa56346b1" translate="yes" xml:space="preserve">
          <source>Covariance of joint predictive distribution a query points. Only returned when return_cov is True.</source>
          <target state="translated">查询点联合预测分布的协方差。仅当return_cov为True时返回。</target>
        </trans-unit>
        <trans-unit id="5190afaf54a2aa60fc6cc1680c4d6ea9fa0c15aa" translate="yes" xml:space="preserve">
          <source>Coverage error measure</source>
          <target state="translated">覆盖率误差测量</target>
        </trans-unit>
        <trans-unit id="a1ce1a7e24889bcdf59f7951b6cf8837acd3d88f" translate="yes" xml:space="preserve">
          <source>Create affinity matrix from negative euclidean distances, then apply affinity propagation clustering.</source>
          <target state="translated">从负欧几里得距离创建亲和矩阵,然后应用亲和传播聚类。</target>
        </trans-unit>
        <trans-unit id="c3bf2614b19362dae4689f517d95f46db3cf4346" translate="yes" xml:space="preserve">
          <source>Create multi-label data, fit, and predict</source>
          <target state="translated">创建多标签数据,拟合和预测。</target>
        </trans-unit>
        <trans-unit id="b7d1d5fb2eed2d0bb715e49ad7b07e80932ae284" translate="yes" xml:space="preserve">
          <source>Create simple data</source>
          <target state="translated">创建简单的数据</target>
        </trans-unit>
        <trans-unit id="4a065856c1c0481334ef4938ef12a8f5bc4d304d" translate="yes" xml:space="preserve">
          <source>Create the vectorizer and limit the number of features to a reasonable maximum</source>
          <target state="translated">创建向量器,并将特征数量限制在一个合理的最大值。</target>
        </trans-unit>
        <trans-unit id="0adbec8c8dbf02b3371ff754007f71561bf42301" translate="yes" xml:space="preserve">
          <source>Creates a biclustering for X.</source>
          <target state="translated">为X创建一个双聚体。</target>
        </trans-unit>
        <trans-unit id="7856321ee3dc56d2cbc15bce644a7047f932f5c6" translate="yes" xml:space="preserve">
          <source>Creates an affinity matrix for X using the selected affinity, then applies spectral clustering to this affinity matrix.</source>
          <target state="translated">使用选定的亲和力为X创建一个亲和力矩阵,然后对这个亲和力矩阵应用光谱聚类。</target>
        </trans-unit>
        <trans-unit id="cb07f3652433bfbe6b465fe320507d4abc084e8b" translate="yes" xml:space="preserve">
          <source>Creator:</source>
          <target state="translated">Creator:</target>
        </trans-unit>
        <trans-unit id="7f121527fa732b0fde8219b468e29a444aba8078" translate="yes" xml:space="preserve">
          <source>Cross decomposition algorithms find the fundamental relations between two matrices (X and Y). They are latent variable approaches to modeling the covariance structures in these two spaces. They will try to find the multidimensional direction in the X space that explains the maximum multidimensional variance direction in the Y space. PLS-regression is particularly suited when the matrix of predictors has more variables than observations, and when there is multicollinearity among X values. By contrast, standard regression will fail in these cases.</source>
          <target state="translated">交叉分解算法可以找到两个矩阵(X和Y)之间的基本关系。它们是对这两个空间的协方差结构进行建模的潜变量方法。它们将试图在X空间中找到解释Y空间中最大多维方差方向的多维方向。当预测因子矩阵的变量比观测值多,以及X值之间存在多线性时,PLS-回归特别适合。相比之下,标准回归在这些情况下会失败。</target>
        </trans-unit>
        <trans-unit id="2d1a95015d19221a6fe26a1fcf388c67446de60d" translate="yes" xml:space="preserve">
          <source>Cross validation iterators can also be used to directly perform model selection using Grid Search for the optimal hyperparameters of the model. This is the topic of the next section: &lt;a href=&quot;grid_search#grid-search&quot;&gt;Tuning the hyper-parameters of an estimator&lt;/a&gt;.</source>
          <target state="translated">交叉验证迭代器还可用于使用网格搜索直接执行模型选择，以获取模型的最佳超参数。这是下一部分的主题：&lt;a href=&quot;grid_search#grid-search&quot;&gt;调整估算器的超参数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="962a61da5257c71edaaacfe70f5141a0f037aeac" translate="yes" xml:space="preserve">
          <source>Cross-Entropy</source>
          <target state="translated">Cross-Entropy</target>
        </trans-unit>
        <trans-unit id="1e664885706da0e86f029eedb32a271a61dfe69d" translate="yes" xml:space="preserve">
          <source>Cross-validated Lasso, using the LARS algorithm</source>
          <target state="translated">交叉验证的Lasso,使用LARS算法。</target>
        </trans-unit>
        <trans-unit id="fb0e02cade19fdddca06aac4bb5dd513962c18a4" translate="yes" xml:space="preserve">
          <source>Cross-validated Least Angle Regression model</source>
          <target state="translated">交叉验证的最小角度回归模型</target>
        </trans-unit>
        <trans-unit id="1fd60a4e281718f6ed721cf27f6951e6c63cfc3e" translate="yes" xml:space="preserve">
          <source>Cross-validated Orthogonal Matching Pursuit model (OMP)</source>
          <target state="translated">交叉验证的正交匹配追求模型(OMP)</target>
        </trans-unit>
        <trans-unit id="1754937edb838fbbaf5971a351b628ddecc0ccdf" translate="yes" xml:space="preserve">
          <source>Cross-validated estimators</source>
          <target state="translated">交叉验证的估算器</target>
        </trans-unit>
        <trans-unit id="3d49597c147182d6be77303e610dda3474e80dd8" translate="yes" xml:space="preserve">
          <source>Cross-validation generators</source>
          <target state="translated">交叉验证生成器</target>
        </trans-unit>
        <trans-unit id="1280b41ecf5979bd02b54033759f4561a9913920" translate="yes" xml:space="preserve">
          <source>Cross-validation on Digits Dataset Exercise</source>
          <target state="translated">数字数据集的交叉验证练习</target>
        </trans-unit>
        <trans-unit id="eb321e1453288942c2bfc93770b5e48dd99df16b" translate="yes" xml:space="preserve">
          <source>Cross-validation on diabetes Dataset Exercise</source>
          <target state="translated">糖尿病的交叉验证 数据集运动</target>
        </trans-unit>
        <trans-unit id="de4cdb2604645ac8a47279d94733cdde149c6f73" translate="yes" xml:space="preserve">
          <source>Cross-validation to set a parameter can be done more efficiently on an algorithm-by-algorithm basis. This is why, for certain estimators, scikit-learn exposes &lt;a href=&quot;../../modules/cross_validation#cross-validation&quot;&gt;Cross-validation: evaluating estimator performance&lt;/a&gt; estimators that set their parameter automatically by cross-validation:</source>
          <target state="translated">可以在逐个算法的基础上更高效地完成交叉验证以设置参数。这就是为什么对于某些估计器，scikit-learn会显示&lt;a href=&quot;../../modules/cross_validation#cross-validation&quot;&gt;交叉验证：评估&lt;/a&gt;通过交叉验证自动设置其参数的估计器性能估计器：</target>
        </trans-unit>
        <trans-unit id="370236b79041ffa82ce53fa959c56be996450632" translate="yes" xml:space="preserve">
          <source>Cross-validation values for each alpha (if &lt;code&gt;store_cv_values=True&lt;/code&gt; and &lt;code&gt;cv=None&lt;/code&gt;). After &lt;code&gt;fit()&lt;/code&gt; has been called, this attribute will contain the mean squared errors (by default) or the values of the &lt;code&gt;{loss,score}_func&lt;/code&gt; function (if provided in the constructor).</source>
          <target state="translated">每个alpha的交叉验证值（如果 &lt;code&gt;store_cv_values=True&lt;/code&gt; 且 &lt;code&gt;cv=None&lt;/code&gt; ）。在调用 &lt;code&gt;fit()&lt;/code&gt; 之后，此属性将包含均方误差（默认情况下）或 &lt;code&gt;{loss,score}_func&lt;/code&gt; 函数的值（如果在构造函数中提供）。</target>
        </trans-unit>
        <trans-unit id="a21f3e9dbb810e53aadfa8dc698dea30ff8f027d" translate="yes" xml:space="preserve">
          <source>Cross-validation: evaluating estimator performance</source>
          <target state="translated">交叉验证:评估估算器的性能。</target>
        </trans-unit>
        <trans-unit id="4b181f1e8fef796fa5d45cd7bc2fcae70e33c41b" translate="yes" xml:space="preserve">
          <source>Current default is &amp;lsquo;auto&amp;rsquo; which uses 1 / n_features, if &lt;code&gt;gamma='scale'&lt;/code&gt; is passed then it uses 1 / (n_features * X.std()) as value of gamma. The current default of gamma, &amp;lsquo;auto&amp;rsquo;, will change to &amp;lsquo;scale&amp;rsquo; in version 0.22. &amp;lsquo;auto_deprecated&amp;rsquo;, a deprecated version of &amp;lsquo;auto&amp;rsquo; is used as a default indicating that no explicit value of gamma was passed.</source>
          <target state="translated">当前默认值为'auto'，它使用1 / n_features，如果传递了 &lt;code&gt;gamma='scale'&lt;/code&gt; ，则它将使用1 /（n_features * X.std（））作为gamma值。当前的伽玛默认值&amp;ldquo; auto&amp;rdquo;在版本0.22中将更改为&amp;ldquo; scale&amp;rdquo;。&amp;ldquo; auto_deprecated&amp;rdquo;（已弃用的&amp;ldquo; auto&amp;rdquo;版本）用作默认值，指示未传递任何明确的gamma值。</target>
        </trans-unit>
        <trans-unit id="a27dc375348af6bb37ce4a68f53bf172aba2ca3d" translate="yes" xml:space="preserve">
          <source>Current default is &lt;code&gt;'warn'&lt;/code&gt;, which behaves as &lt;code&gt;True&lt;/code&gt; in addition to raising a warning when a training score is looked up. That default will be changed to &lt;code&gt;False&lt;/code&gt; in 0.21. Computing training scores is used to get insights on how different parameter settings impact the overfitting/underfitting trade-off. However computing the scores on the training set can be computationally expensive and is not strictly required to select the parameters that yield the best generalization performance.</source>
          <target state="translated">当前默认值为 &lt;code&gt;'warn'&lt;/code&gt; ，除了在查找训练分数时发出警告外，其行为还为 &lt;code&gt;True&lt;/code&gt; 。该默认值将在0.21中更改为 &lt;code&gt;False&lt;/code&gt; 。计算培训分数用于了解不同的参数设置如何影响过拟合/欠拟合权衡。但是，在训练集上计算分数可能在计算上很昂贵，并且并非严格要求选择产生最佳泛化性能的参数。</target>
        </trans-unit>
        <trans-unit id="8962faef31b78d652283b7e4ff2329e927ac19e6" translate="yes" xml:space="preserve">
          <source>Currently only those scorer functions that return a single score can be passed inside the dict. Scorer functions that return multiple values are not permitted and will require a wrapper to return a single metric:</source>
          <target state="translated">目前,只有那些返回单个分数的scorer函数可以在dict里面传递。不允许返回多个值的scorer函数,需要一个包装器来返回一个度量值。</target>
        </trans-unit>
        <trans-unit id="76c7ed2ac6698e772f65d5a5a8aaaec7f6aadc18" translate="yes" xml:space="preserve">
          <source>Currently, &lt;a href=&quot;generated/sklearn.neural_network.mlpclassifier#sklearn.neural_network.MLPClassifier&quot;&gt;&lt;code&gt;MLPClassifier&lt;/code&gt;&lt;/a&gt; supports only the Cross-Entropy loss function, which allows probability estimates by running the &lt;code&gt;predict_proba&lt;/code&gt; method.</source>
          <target state="translated">当前，&lt;a href=&quot;generated/sklearn.neural_network.mlpclassifier#sklearn.neural_network.MLPClassifier&quot;&gt; &lt;code&gt;MLPClassifier&lt;/code&gt; &lt;/a&gt;仅支持交叉熵损失函数，该函数允许通过运行 &lt;code&gt;predict_proba&lt;/code&gt; 方法进行概率估计。</target>
        </trans-unit>
        <trans-unit id="e5614a662ae4a6e0a1c2db4e3740b32eade6b3d6" translate="yes" xml:space="preserve">
          <source>Currently, &lt;code&gt;algorithm = 'auto'&lt;/code&gt; selects &lt;code&gt;'kd_tree'&lt;/code&gt; if \(k &amp;lt; N/2\) and the &lt;code&gt;'effective_metric_'&lt;/code&gt; is in the &lt;code&gt;'VALID_METRICS'&lt;/code&gt; list of &lt;code&gt;'kd_tree'&lt;/code&gt;. It selects &lt;code&gt;'ball_tree'&lt;/code&gt; if \(k &amp;lt; N/2\) and the &lt;code&gt;'effective_metric_'&lt;/code&gt; is in the &lt;code&gt;'VALID_METRICS'&lt;/code&gt; list of &lt;code&gt;'ball_tree'&lt;/code&gt;. It selects &lt;code&gt;'brute'&lt;/code&gt; if \(k &amp;lt; N/2\) and the &lt;code&gt;'effective_metric_'&lt;/code&gt; is not in the &lt;code&gt;'VALID_METRICS'&lt;/code&gt; list of &lt;code&gt;'kd_tree'&lt;/code&gt; or &lt;code&gt;'ball_tree'&lt;/code&gt;. It selects &lt;code&gt;'brute'&lt;/code&gt; if \(k &amp;gt;= N/2\). This choice is based on the assumption that the number of query points is at least the same order as the number of training points, and that &lt;code&gt;leaf_size&lt;/code&gt; is close to its default value of &lt;code&gt;30&lt;/code&gt;.</source>
          <target state="translated">目前， &lt;code&gt;algorithm = 'auto'&lt;/code&gt; 选择 &lt;code&gt;'kd_tree'&lt;/code&gt; 如果\（K &amp;lt;N / 2 \）和 &lt;code&gt;'effective_metric_'&lt;/code&gt; 是在 &lt;code&gt;'VALID_METRICS'&lt;/code&gt; 列表 &lt;code&gt;'kd_tree'&lt;/code&gt; 。它选择 &lt;code&gt;'ball_tree'&lt;/code&gt; 如果\（K &amp;lt;N / 2 \）和 &lt;code&gt;'effective_metric_'&lt;/code&gt; 是在 &lt;code&gt;'VALID_METRICS'&lt;/code&gt; 列表 &lt;code&gt;'ball_tree'&lt;/code&gt; 。它选择 &lt;code&gt;'brute'&lt;/code&gt; 如果\（K &amp;lt;N / 2 \）和 &lt;code&gt;'effective_metric_'&lt;/code&gt; 不在 &lt;code&gt;'VALID_METRICS'&lt;/code&gt; 列表 &lt;code&gt;'kd_tree'&lt;/code&gt; 或 &lt;code&gt;'ball_tree'&lt;/code&gt; 。它选择 &lt;code&gt;'brute'&lt;/code&gt; 如果\（k&amp;gt; = N / 2 \）。该选择基于以下假设：查询点的数量至少与训练点的数量相同，并且 &lt;code&gt;leaf_size&lt;/code&gt; 接近其默认值 &lt;code&gt;30&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9f684bc457266ac05a34fb99663e74ae12daa4a4" translate="yes" xml:space="preserve">
          <source>Currently, PowerTransformer supports the Box-Cox transform and the Yeo-Johson transform. The optimal parameter for stabilizing variance and minimizing skewness is estimated through maximum likelihood.</source>
          <target state="translated">目前,PowerTransformer支持Box-Cox变换和Yeo-Johson变换。通过最大似然来估计稳定方差和最小化偏度的最佳参数。</target>
        </trans-unit>
        <trans-unit id="497ae965b12291f1522795f0bc0c9657b292bc0b" translate="yes" xml:space="preserve">
          <source>Currently, power_transform() supports the Box-Cox transform. Box-Cox requires input data to be strictly positive. The optimal parameter for stabilizing variance and minimizing skewness is estimated through maximum likelihood.</source>
          <target state="translated">目前,power_transform()支持Box-Cox变换。Box-Cox要求输入数据严格为正。稳定方差和最小化偏度的最佳参数是通过最大似然来估计的。</target>
        </trans-unit>
        <trans-unit id="019771916af0726d62d85a74fd60affc17ece3c4" translate="yes" xml:space="preserve">
          <source>Currently, the implementation is restricted to using the logistic link function. For multi-class classification, several binary one-versus rest classifiers are fitted. Note that this class thus does not implement a true multi-class Laplace approximation.</source>
          <target state="translated">目前,实现方式仅限于使用逻辑链接函数。对于多类分类,则拟合了几个二元一比休分类器。需要注意的是,该类因此没有实现真正的多类拉普拉斯近似。</target>
        </trans-unit>
        <trans-unit id="24620ce5c7b24dd26d35ebf2a19250393835114d" translate="yes" xml:space="preserve">
          <source>Currently, this is implemented only for gaussian and tophat kernels.</source>
          <target state="translated">目前,这只针对高斯和tophat核实现。</target>
        </trans-unit>
        <trans-unit id="75cda4d1050c32311d07539598e00eb719ca4927" translate="yes" xml:space="preserve">
          <source>Custom warning to capture convergence problems</source>
          <target state="translated">自定义警告以捕捉收敛问题</target>
        </trans-unit>
        <trans-unit id="a959948f1ae5eaf7eaa81434eb22661b51192ab5" translate="yes" xml:space="preserve">
          <source>Custom warning to notify potential issues with data dimensionality.</source>
          <target state="translated">自定义警告,以通知数据维度的潜在问题。</target>
        </trans-unit>
        <trans-unit id="7fd6b3fdf443a22e634e79a7cfd00e53eb193772" translate="yes" xml:space="preserve">
          <source>Customizing the vectorizer can also be useful when handling Asian languages that do not use an explicit word separator such as whitespace.</source>
          <target state="translated">自定义向量器在处理不使用明确的单词分隔符(如空格)的亚洲语言时也很有用。</target>
        </trans-unit>
        <trans-unit id="4e8035fe4467aba176d5e3fb0f76e558be72a19b" translate="yes" xml:space="preserve">
          <source>D. Achlioptas, 2001, &amp;ldquo;Database-friendly random projections&amp;rdquo;, &lt;a href=&quot;https://users.soe.ucsc.edu/~optas/papers/jl.pdf&quot;&gt;https://users.soe.ucsc.edu/~optas/papers/jl.pdf&lt;/a&gt;</source>
          <target state="translated">D. Achlioptas，2001年，&amp;ldquo;数据库友好的随机投影&amp;rdquo;，&lt;a href=&quot;https://users.soe.ucsc.edu/~optas/papers/jl.pdf&quot;&gt;https：&lt;/a&gt; //users.soe.ucsc.edu/~optas/papers/jl.pdf</target>
        </trans-unit>
        <trans-unit id="ac37b540619d1ab72bcbcd5775b2d90468903073" translate="yes" xml:space="preserve">
          <source>D. Achlioptas. 2003. &lt;a href=&quot;http://www.cs.ucsc.edu/~optas/papers/jl.pdf&quot;&gt;Database-friendly random projections: Johnson-Lindenstrauss with binary coins&lt;/a&gt;. Journal of Computer and System Sciences 66 (2003) 671&amp;ndash;687</source>
          <target state="translated">D. Achlioptas。2003年。&lt;a href=&quot;http://www.cs.ucsc.edu/~optas/papers/jl.pdf&quot;&gt;数据库友好的随机投影：Johnson-Lindenstrauss，带有二进制硬币&lt;/a&gt;。计算机与系统科学学报66（2003）671&amp;ndash;687</target>
        </trans-unit>
        <trans-unit id="a9697d0aead498c1c8e833f63c0d0cc4a3521df8" translate="yes" xml:space="preserve">
          <source>D. J. C. MacKay, Bayesian Interpolation, Computation and Neural Systems, Vol. 4, No. 3, 1992.</source>
          <target state="translated">D.J.C.MacKay,Bayesian Interpolation,Computation and Neural Systems,Vol.4,No.3,1992.</target>
        </trans-unit>
        <trans-unit id="d168ebf75ceabd44885d2c414a274a2b8f02865f" translate="yes" xml:space="preserve">
          <source>D. J. C. MacKay, Bayesian nonlinear modeling for the prediction competition, ASHRAE Transactions, 1994.</source>
          <target state="translated">D.J.C.MacKay,预测竞赛的贝叶斯非线性建模,ASHRAE Transactions,1994。</target>
        </trans-unit>
        <trans-unit id="a65141c731d1cd597cbf558077d54993da3008b2" translate="yes" xml:space="preserve">
          <source>DBSCAN</source>
          <target state="translated">DBSCAN</target>
        </trans-unit>
        <trans-unit id="e30dd314d08e34fa54731d7fa8f11e379d7e9c58" translate="yes" xml:space="preserve">
          <source>DBSCAN - Density-Based Spatial Clustering of Applications with Noise. Finds core samples of high density and expands clusters from them. Good for data which contains clusters of similar density.</source>
          <target state="translated">DBSCAN-基于密度的带噪声应用空间聚类。查找高密度的核心样本,并从中扩展聚类。适用于包含类似密度聚类的数据。</target>
        </trans-unit>
        <trans-unit id="5a290fb71d8e481c43bc5ae90244e3f9835469cf" translate="yes" xml:space="preserve">
          <source>DEPRECATED: Attribute &lt;code&gt;covariances_&lt;/code&gt; was deprecated in version 0.19 and will be removed in 0.21. Use &lt;code&gt;covariance_&lt;/code&gt; instead</source>
          <target state="translated">不推荐使用：属性 &lt;code&gt;covariances_&lt;/code&gt; 在版本0.19中已弃用，并将在版本0.21中删除。使用 &lt;code&gt;covariance_&lt;/code&gt; 代替</target>
        </trans-unit>
        <trans-unit id="30a068b8bdca934a07bd0f6747299ab1647a7fee" translate="yes" xml:space="preserve">
          <source>DEPRECATED: Attribute alpha is deprecated in 0.19 and will be removed in 0.21. See &lt;code&gt;alpha_&lt;/code&gt; instead</source>
          <target state="translated">弃用：属性alpha在0.19中已弃用，并在0.21中将其删除。改为查看 &lt;code&gt;alpha_&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4177c41e755f5ccbdaa7af2cc8bb11b545edcdc9" translate="yes" xml:space="preserve">
          <source>DEPRECATED: Attribute grid_scores was deprecated in version 0.19 and will be removed in 0.21. Use &lt;code&gt;grid_scores_&lt;/code&gt; instead</source>
          <target state="translated">不推荐使用：在版本0.19中不推荐使用grid_scores属性，并将在0.21版本中将其删除。使用 &lt;code&gt;grid_scores_&lt;/code&gt; 代替</target>
        </trans-unit>
        <trans-unit id="9b50e33575b197ac4103a78ebaef5fb72be5feb3" translate="yes" xml:space="preserve">
          <source>DEPRECATED: Attribute loss_function was deprecated in version 0.19 and will be removed in 0.21. Use &lt;code&gt;loss_function_&lt;/code&gt; instead</source>
          <target state="translated">不推荐使用：属性loss_function在版本0.19中已弃用，并将在版本0.21中删除。使用 &lt;code&gt;loss_function_&lt;/code&gt; 代替</target>
        </trans-unit>
        <trans-unit id="06db1d56529f9587460d0444f90d53accd610e30" translate="yes" xml:space="preserve">
          <source>DEPRECATED: Attribute n_features was deprecated in version 0.19 and will be removed in 0.21.</source>
          <target state="translated">已取消。属性n_features在0.19版本中被废弃,将在0.21版本中被删除。</target>
        </trans-unit>
        <trans-unit id="625ccb4a56b3a2d0a665cd18e51441e0dd8980e7" translate="yes" xml:space="preserve">
          <source>DEPRECATED: Attribute n_iter_final was deprecated in version 0.19 and will be removed in 0.21. Use &lt;code&gt;n_iter_&lt;/code&gt; instead</source>
          <target state="translated">不推荐使用：属性n_iter_final在版本0.19中已弃用，并将在版本0.21中删除。使用 &lt;code&gt;n_iter_&lt;/code&gt; 代替</target>
        </trans-unit>
        <trans-unit id="0a9704267bb07fcfb6055b840079decaacc0d8bf" translate="yes" xml:space="preserve">
          <source>DEPRECATED: Attribute rng was deprecated in version 0.19 and will be removed in 0.21.</source>
          <target state="translated">已取消。属性rng在0.19版本中被废弃,将在0.21版本中被删除。</target>
        </trans-unit>
        <trans-unit id="591de995c89dd3bff5d88c5a9a46467825e6d7b4" translate="yes" xml:space="preserve">
          <source>DEPRECATED: Attribute y_train_mean was deprecated in version 0.19 and will be removed in 0.21.</source>
          <target state="translated">已取消。属性y_train_mean在0.19版本中被废弃,将在0.21版本中被删除。</target>
        </trans-unit>
        <trans-unit id="98387a712480e38eb68052d19e2524babe2fec58" translate="yes" xml:space="preserve">
          <source>DEPRECATED: Imputer was deprecated in version 0.20 and will be removed in 0.22. Import impute.SimpleImputer from sklearn instead.</source>
          <target state="translated">废止。Imputer在0.20版本中被废弃,并将在0.22版本中被移除。从sklearn导入impute.SimpleImputer代替。</target>
        </trans-unit>
        <trans-unit id="e36eede7e0b8757e9fc918dc5b7c272d53430066" translate="yes" xml:space="preserve">
          <source>DEPRECATED: The &amp;lsquo;GraphLasso&amp;rsquo; was renamed to &amp;lsquo;GraphicalLasso&amp;rsquo; in version 0.20 and will be removed in 0.22.</source>
          <target state="translated">已弃用：&amp;ldquo; GraphLasso&amp;rdquo;在0.20版中重命名为&amp;ldquo; GraphicalLasso&amp;rdquo;，并将在0.22版中删除。</target>
        </trans-unit>
        <trans-unit id="1a38ed9c7cf8eadad97af46c991675921ba32988" translate="yes" xml:space="preserve">
          <source>DEPRECATED: The &amp;lsquo;GraphLassoCV&amp;rsquo; was renamed to &amp;lsquo;GraphicalLassoCV&amp;rsquo; in version 0.20 and will be removed in 0.22.</source>
          <target state="translated">已弃用：'GraphLassoCV'在0.20版中重命名为'GraphicalLassoCV'，并将在0.22版中删除。</target>
        </trans-unit>
        <trans-unit id="3d86399844f4f1a93e39fc4c22be31cba07369e9" translate="yes" xml:space="preserve">
          <source>DEPRECATED: The &amp;lsquo;graph_lasso&amp;rsquo; was renamed to &amp;lsquo;graphical_lasso&amp;rsquo; in version 0.20 and will be removed in 0.22.</source>
          <target state="translated">已弃用：&amp;ldquo; graph_lasso&amp;rdquo;在0.20版中已重命名为&amp;ldquo; graphical_lasso&amp;rdquo;，并将在0.22版中删除。</target>
        </trans-unit>
        <trans-unit id="6c79d8a4ae0fa353f5f7b1339def86a97bc0a4fa" translate="yes" xml:space="preserve">
          <source>DEPRECATED: The &lt;code&gt;active_features_&lt;/code&gt; attribute was deprecated in version 0.20 and will be removed 0.22.</source>
          <target state="translated">不推荐使用： &lt;code&gt;active_features_&lt;/code&gt; 属性在0.20版本中已弃用，并将被删除0.22。</target>
        </trans-unit>
        <trans-unit id="284e0ad5c8677e4e82766b1fa9ed49d7c004dcf0" translate="yes" xml:space="preserve">
          <source>DEPRECATED: The &lt;code&gt;feature_indices_&lt;/code&gt; attribute was deprecated in version 0.20 and will be removed 0.22.</source>
          <target state="translated">不推荐使用： &lt;code&gt;feature_indices_&lt;/code&gt; 属性在0.20版中已过时，将被删除0.22。</target>
        </trans-unit>
        <trans-unit id="c81f351b7f63ad5e43fefa990d1c3a175e9793e9" translate="yes" xml:space="preserve">
          <source>DEPRECATED: The &lt;code&gt;n_values_&lt;/code&gt; attribute was deprecated in version 0.20 and will be removed 0.22.</source>
          <target state="translated">弃用：该 &lt;code&gt;n_values_&lt;/code&gt; 属性在0.20版本过时，会被删除0.22。</target>
        </trans-unit>
        <trans-unit id="559341c61e78536e38c521502d41b6dfa7f14b0e" translate="yes" xml:space="preserve">
          <source>DEPRECATED: The class RandomizedLasso is deprecated in 0.19 and will be removed in 0.21.</source>
          <target state="translated">DEPRECATED:RandomizedLasso类在0.19中被废弃,并将在0.21中被删除。</target>
        </trans-unit>
        <trans-unit id="66956c66dd19a0c44dac576cbd08047b1df67be1" translate="yes" xml:space="preserve">
          <source>DEPRECATED: The class RandomizedLogisticRegression is deprecated in 0.19 and will be removed in 0.21.</source>
          <target state="translated">DEPRECATED:RandomizedLogisticRegression类在0.19中被废弃,并将在0.21中被删除。</target>
        </trans-unit>
        <trans-unit id="f8ec49ebff91cd5e2112d12399f901d5b3347976" translate="yes" xml:space="preserve">
          <source>DEPRECATED: The function lasso_stability_path is deprecated in 0.19 and will be removed in 0.21.</source>
          <target state="translated">已取消。lasso_stability_path函数在0.19中被废弃,并将在0.21中被删除。</target>
        </trans-unit>
        <trans-unit id="c0d382d35a0abf758faa7abbc67b937e9da7131b" translate="yes" xml:space="preserve">
          <source>DEPRECATED: deprecated in version 0.20 to be removed in version 0.22</source>
          <target state="translated">DEPRECATED:0.20版本中已废弃,将在0.22版本中删除。</target>
        </trans-unit>
        <trans-unit id="c9325850e40a979f6831b9aa18d8f24498d3a64a" translate="yes" xml:space="preserve">
          <source>DEPRECATED: fetch_mldata was deprecated in version 0.20 and will be removed in version 0.22</source>
          <target state="translated">DEPRECATED:fetch_mldata在0.20版本中被废弃,将在0.22版本中被移除。</target>
        </trans-unit>
        <trans-unit id="101689e0868fb0d9ad3e076cab49e313302c981e" translate="yes" xml:space="preserve">
          <source>DEPRECATED: mldata_filename was deprecated in version 0.20 and will be removed in version 0.22</source>
          <target state="translated">取消:mldata_filename在0.20版本中被取消,并将在0.22版本中被删除。</target>
        </trans-unit>
        <trans-unit id="805a519f6e380d2cd9543369c4703fc21b97f84c" translate="yes" xml:space="preserve">
          <source>DEPRECATED: since the &lt;a href=&quot;http://mlcomp.org/&quot;&gt;http://mlcomp.org/&lt;/a&gt; website will shut down in March 2017, the load_mlcomp function was deprecated in version 0.19 and will be removed in 0.21.</source>
          <target state="translated">不推荐使用：由于&lt;a href=&quot;http://mlcomp.org/&quot;&gt;http://mlcomp.org/&lt;/a&gt;网站将于2017年3月关闭，因此load_mlcomp函数在版本0.19中已弃用，在版本0.21中将被删除。</target>
        </trans-unit>
        <trans-unit id="08a8bdfa7e0f196421ada07a6fc7fe6d903a22be" translate="yes" xml:space="preserve">
          <source>DIS weighted distances to five Boston employment centres</source>
          <target state="translated">综合安全分遣队与波士顿五个就业中心的加权距离。</target>
        </trans-unit>
        <trans-unit id="a48c48a43ca8f59247f6878cec75953c89fa14b4" translate="yes" xml:space="preserve">
          <source>Damping factor (between 0.5 and 1) is the extent to which the current value is maintained relative to incoming values (weighted 1 - damping). This in order to avoid numerical oscillations when updating these values (messages).</source>
          <target state="translated">阻尼系数(在0.5和1之间)是指当前值相对于输入值的维持程度(加权1-阻尼)。这是为了避免更新这些值(信息)时出现数字振荡。</target>
        </trans-unit>
        <trans-unit id="a24e42dbb28acb5246675a2801097fc4c85bcfaf" translate="yes" xml:space="preserve">
          <source>Damping factor between 0.5 and 1.</source>
          <target state="translated">阻尼系数在0.5和1之间。</target>
        </trans-unit>
        <trans-unit id="e8a3175e69217f6336ba1a1bc904ba6ac41d22c9" translate="yes" xml:space="preserve">
          <source>Dasarathy, B.V. (1980) &amp;ldquo;Nosing Around the Neighborhood: A New System Structure and Classification Rule for Recognition in Partially Exposed Environments&amp;rdquo;. IEEE Transactions on Pattern Analysis and Machine Intelligence, Vol. PAMI-2, No. 1, 67-71.</source>
          <target state="translated">Dasarathy，BV（1980年）&amp;ldquo;在周围乱逛：在部分暴露的环境中进行识别的新系统结构和分类规则&amp;rdquo;。IEEE Transactions on Pattern Analysis and Machine Intelligence，第一卷。PAMI-2，第1号，第67-71页。</target>
        </trans-unit>
        <trans-unit id="e5e429bcc9c2e4a41a3c7a4d96203be6cb273b11" translate="yes" xml:space="preserve">
          <source>Data</source>
          <target state="translated">Data</target>
        </trans-unit>
        <trans-unit id="3d6255c027a78e297170b4e466ac388c0e2922cb" translate="yes" xml:space="preserve">
          <source>Data from which to compute the covariance estimate</source>
          <target state="translated">计算协方差估计的数据</target>
        </trans-unit>
        <trans-unit id="72cd7646b7d44a38667b84b48d7d1956574c1d3b" translate="yes" xml:space="preserve">
          <source>Data from which to sample rows or items.</source>
          <target state="translated">采样行或项目的数据。</target>
        </trans-unit>
        <trans-unit id="d26e10c2b7153d091d5f9b56a61e1dc79393e082" translate="yes" xml:space="preserve">
          <source>Data in the binned space.</source>
          <target state="translated">二进制空间中的数据。</target>
        </trans-unit>
        <trans-unit id="1c6a3d862446935ad6a452403624bb7314928467" translate="yes" xml:space="preserve">
          <source>Data in the original feature space.</source>
          <target state="translated">原始特征空间中的数据。</target>
        </trans-unit>
        <trans-unit id="37924223830c184aa62d9f2591f5c1e48c07c4b1" translate="yes" xml:space="preserve">
          <source>Data matrix</source>
          <target state="translated">数据矩阵</target>
        </trans-unit>
        <trans-unit id="3ce47658037c5b8db38eeffc6020e92d2f96f6ec" translate="yes" xml:space="preserve">
          <source>Data matrix of original shape</source>
          <target state="translated">原始形状的数据矩阵</target>
        </trans-unit>
        <trans-unit id="52f900b0d0e607bf420a999d387315174824d03e" translate="yes" xml:space="preserve">
          <source>Data matrix or, if affinity is &lt;code&gt;precomputed&lt;/code&gt;, matrix of similarities / affinities.</source>
          <target state="translated">数据矩阵，或者，如果 &lt;code&gt;precomputed&lt;/code&gt; 亲和度，则为相似度/亲和度矩阵。</target>
        </trans-unit>
        <trans-unit id="7ee08b0e6e453aee82b86a48479e7d2dd77b4145" translate="yes" xml:space="preserve">
          <source>Data matrix to be decomposed</source>
          <target state="translated">要分解的数据矩阵</target>
        </trans-unit>
        <trans-unit id="166e136e80cc5b10a1c4905e3c9c4aca1f833d68" translate="yes" xml:space="preserve">
          <source>Data matrix to be transformed by the model</source>
          <target state="translated">将由模型转换的数据矩阵</target>
        </trans-unit>
        <trans-unit id="181b556e97f0fe263d1ec67d9c4f91e3d363d743" translate="yes" xml:space="preserve">
          <source>Data matrix.</source>
          <target state="translated">数据矩阵:</target>
        </trans-unit>
        <trans-unit id="8babefea9ecc8ce9848fdbbaf642323e92b4d039" translate="yes" xml:space="preserve">
          <source>Data on which to apply mask.</source>
          <target state="translated">应用掩码的数据。</target>
        </trans-unit>
        <trans-unit id="2e10a95570df385273fdd6422b7364b68137ce4e" translate="yes" xml:space="preserve">
          <source>Data samples, where &lt;code&gt;n_samples&lt;/code&gt; is the number of samples and &lt;code&gt;n_features&lt;/code&gt; is the number of features. Must fulfill input requirements of last step of pipeline&amp;rsquo;s &lt;code&gt;inverse_transform&lt;/code&gt; method.</source>
          <target state="translated">数据样本，其中 &lt;code&gt;n_samples&lt;/code&gt; 是样本数， &lt;code&gt;n_features&lt;/code&gt; 是要素数。必须满足管道的 &lt;code&gt;inverse_transform&lt;/code&gt; 方法的最后一步的输入要求。</target>
        </trans-unit>
        <trans-unit id="34d7245ce3a08f69eae4b9f06117a566eb7fe3e1" translate="yes" xml:space="preserve">
          <source>Data to be discretized.</source>
          <target state="translated">数据要慎重。</target>
        </trans-unit>
        <trans-unit id="866619fb462cbcd93b06c8030a4c9844ed864c6f" translate="yes" xml:space="preserve">
          <source>Data to predict on. Must fulfill input requirements of first step of the pipeline.</source>
          <target state="translated">要预测的数据。必须满足流水线第一步的输入要求。</target>
        </trans-unit>
        <trans-unit id="f1d3ac35738ed77ae8f8ba57095e0836779174e4" translate="yes" xml:space="preserve">
          <source>Data to transform, where n_samples is the number of samples and n_features is the number of features.</source>
          <target state="translated">要转换的数据,其中n_samples是样本数,n_features是特征数。</target>
        </trans-unit>
        <trans-unit id="b6f395db4ae2d9426617dc82a4b31bf86bb8a1bf" translate="yes" xml:space="preserve">
          <source>Data to transform.</source>
          <target state="translated">要转换的数据。</target>
        </trans-unit>
        <trans-unit id="216e8decc05ceee2f67d29c662b4d7db2a179cd0" translate="yes" xml:space="preserve">
          <source>Data to transform. Must fulfill input requirements of first step of the pipeline.</source>
          <target state="translated">要转换的数据。必须满足流水线第一步的输入要求。</target>
        </trans-unit>
        <trans-unit id="2e0e4d4d302942732904ee9d57c462a8571aa52d" translate="yes" xml:space="preserve">
          <source>Data transformation with held out data</source>
          <target state="translated">数据转换与保留数据</target>
        </trans-unit>
        <trans-unit id="d11612b870980b209fddc937c051b6cc6955221b" translate="yes" xml:space="preserve">
          <source>Data type of dataset to be loaded. This will be the data type of the output numpy arrays &lt;code&gt;X&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">要加载的数据集的数据类型。这将是输出numpy数组 &lt;code&gt;X&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 的数据类型。</target>
        </trans-unit>
        <trans-unit id="5086b3df8975418ba7952e7c1f70cce5aa93333c" translate="yes" xml:space="preserve">
          <source>Data type of result. If None, the dtype of the input is preserved. If &amp;ldquo;numeric&amp;rdquo;, dtype is preserved unless array.dtype is object. If dtype is a list of types, conversion on the first type is only performed if the dtype of the input is not in the list.</source>
          <target state="translated">结果的数据类型。如果为None，则保留输入的dtype。如果为&amp;ldquo; numeric&amp;rdquo;，则除非array.dtype是object，否则将保留dtype。如果dtype是类型列表，则仅当输入的dtype不在列表中时，才对第一类型进行转换。</target>
        </trans-unit>
        <trans-unit id="f06a4c60ee96ee798d3dd8f622eec139c8d35f58" translate="yes" xml:space="preserve">
          <source>Data.</source>
          <target state="translated">Data.</target>
        </trans-unit>
        <trans-unit id="93a7f22476e975455983ca5ef841fe4904342acd" translate="yes" xml:space="preserve">
          <source>Datasets</source>
          <target state="translated">Datasets</target>
        </trans-unit>
        <trans-unit id="b039b7383bb3f024e42590d64fef5d3e5bd863b2" translate="yes" xml:space="preserve">
          <source>Datasets are uniquely identified by either an integer ID or by a combination of name and version (i.e. there might be multiple versions of the &amp;lsquo;iris&amp;rsquo; dataset). Please give either name or data_id (not both). In case a name is given, a version can also be provided.</source>
          <target state="translated">数据集由整数ID或名称和版本的组合唯一标识（即，&amp;ldquo; iris&amp;rdquo;数据集可能有多个版本）。请输入名称或data_id（不能同时输入两者）。如果提供了名称，也可以提供版本。</target>
        </trans-unit>
        <trans-unit id="a1f2bb950af5243d08f50ff4f0e60c213b848768" translate="yes" xml:space="preserve">
          <source>Datasets can often contain components of that require different feature extraction and processing pipelines. This scenario might occur when:</source>
          <target state="translated">数据集往往可以包含需要不同特征提取和处理管道的组件。这种情况可能发生在:</target>
        </trans-unit>
        <trans-unit id="3b78d18dfae0df145f774e7305f2c72f6e09f58b" translate="yes" xml:space="preserve">
          <source>Datasets used in machine learning tend to be very structured, and are very well-suited for tree-based queries.</source>
          <target state="translated">机器学习中使用的数据集往往是非常结构化的,非常适合基于树的查询。</target>
        </trans-unit>
        <trans-unit id="81b7d2ea42df2f5da13026da9e2cb57a3aabc441" translate="yes" xml:space="preserve">
          <source>Date:</source>
          <target state="translated">Date:</target>
        </trans-unit>
        <trans-unit id="cdb0c81b824f7c81f8d0b8d5d3e3d3e63ebcbeb1" translate="yes" xml:space="preserve">
          <source>David M. Blei, Francis Bach, 2010</source>
          <target state="translated">David M.Blei,Francis Bach,2010年。</target>
        </trans-unit>
        <trans-unit id="2f026ffdebf1680a992c847ac9cad3cf73c3acc7" translate="yes" xml:space="preserve">
          <source>David Wipf and Srikantan Nagarajan: &lt;a href=&quot;http://papers.nips.cc/paper/3372-a-new-view-of-automatic-relevance-determination.pdf&quot;&gt;A new view of automatic relevance determination&lt;/a&gt;</source>
          <target state="translated">David Wipf和Srikantan Nagarajan：&lt;a href=&quot;http://papers.nips.cc/paper/3372-a-new-view-of-automatic-relevance-determination.pdf&quot;&gt;自动相关性确定的新观点&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="27ef40e86e368fb5e430943fcc850bf217ecffc9" translate="yes" xml:space="preserve">
          <source>Davies, David L.; Bouldin, Donald W. (1979). &amp;ldquo;A Cluster Separation Measure&amp;rdquo; IEEE Transactions on Pattern Analysis and Machine Intelligence. PAMI-1 (2): 224-227. &lt;a href=&quot;http://dx.doi.org/10.1109/TPAMI.1979.4766909&quot;&gt;doi:10.1109/TPAMI.1979.4766909&lt;/a&gt;.</source>
          <target state="translated">戴维斯（David D. 博登&amp;middot;唐纳德&amp;middot;W（1979）。&amp;ldquo;群集分离度量&amp;rdquo;，关于模式分析和机器智能的IEEE事务。PAMI-1（2）：224-227。&lt;a href=&quot;http://dx.doi.org/10.1109/TPAMI.1979.4766909&quot;&gt;doi：10.1109 / TPAMI.1979.4766909&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="145122a9982548a6787a3c7fc7199fc81f4068b4" translate="yes" xml:space="preserve">
          <source>Davies, David L.; Bouldin, Donald W. (1979). &lt;a href=&quot;http://ieeexplore.ieee.org/document/4766909&quot;&gt;&amp;ldquo;A Cluster Separation Measure&amp;rdquo;&lt;/a&gt;. IEEE Transactions on Pattern Analysis and Machine Intelligence. PAMI-1 (2): 224-227</source>
          <target state="translated">戴维斯（David D. 博登&amp;middot;唐纳德&amp;middot;W（1979）。&lt;a href=&quot;http://ieeexplore.ieee.org/document/4766909&quot;&gt;&amp;ldquo;群集分离措施&amp;rdquo;&lt;/a&gt;。IEEE模式分析和机器智能交易。PAMI-1（2）：224-227</target>
        </trans-unit>
        <trans-unit id="3fcd61087e5405ff9a408ed9191b4214d1f243a8" translate="yes" xml:space="preserve">
          <source>Decision Tree Regression</source>
          <target state="translated">决策树回归</target>
        </trans-unit>
        <trans-unit id="0b2e007ddbca668da9a03694ab8364abef1d76d4" translate="yes" xml:space="preserve">
          <source>Decision Tree Regression with AdaBoost</source>
          <target state="translated">用AdaBoost进行决策树回归</target>
        </trans-unit>
        <trans-unit id="81113301b638750eb0ebbd6bcfb5cce7e260dc9e" translate="yes" xml:space="preserve">
          <source>Decision boundary of label propagation versus SVM on the Iris dataset</source>
          <target state="translated">标签传播与SVM在Iris数据集上的决策边界。</target>
        </trans-unit>
        <trans-unit id="da9db4ae75a7628f4abc221e29ec312efb80e6dd" translate="yes" xml:space="preserve">
          <source>Decision function computed with out-of-bag estimate on the training set. If n_estimators is small it might be possible that a data point was never left out during the bootstrap. In this case, &lt;code&gt;oob_decision_function_&lt;/code&gt; might contain NaN.</source>
          <target state="translated">用训练集上的实际估计值计算的决策函数。如果n_estimators小，则有可能在引导过程中从未遗漏任何数据点。在这种情况下， &lt;code&gt;oob_decision_function_&lt;/code&gt; 可能包含NaN。</target>
        </trans-unit>
        <trans-unit id="62e43a82d19d47df9696666c5b0c5fae48f4ba50" translate="yes" xml:space="preserve">
          <source>Decision function for the OneVsOneClassifier.</source>
          <target state="translated">OneVsOneClassifier的决策函数。</target>
        </trans-unit>
        <trans-unit id="50076171fdad4674a8ef80d9ea0f070376ec2bcb" translate="yes" xml:space="preserve">
          <source>Decision function of the samples. It is equal to the shifted Mahalanobis distances. The threshold for being an outlier is 0, which ensures a compatibility with other outlier detection algorithms.</source>
          <target state="translated">样本的决定函数。它等于移位的马哈兰诺比斯距离。成为离群值的阈值为0,这保证了与其他离群值检测算法的兼容性。</target>
        </trans-unit>
        <trans-unit id="48151a9aed11785a0aa4f3b80656bf108b579647" translate="yes" xml:space="preserve">
          <source>Decision function values related to each class, per sample. In the two-class case, the shape is [n_samples,], giving the log likelihood ratio of the positive class.</source>
          <target state="translated">与每个类相关的决策函数值,每个样本。在两类情况下,形状为[n_samples,],给出正类的对数似然比。</target>
        </trans-unit>
        <trans-unit id="caec253e613e2ecdf6435ae920638ba7a5ea57bf" translate="yes" xml:space="preserve">
          <source>Decision tree learners create biased trees if some classes dominate. It is therefore recommended to balance the dataset prior to fitting with the decision tree.</source>
          <target state="translated">如果某些类占主导地位,决策树学习器会创建有偏见的树。因此,建议在用决策树拟合之前对数据集进行平衡。</target>
        </trans-unit>
        <trans-unit id="1fc54e8ac2d47f23433f8ce8e08db18ea3e58b2b" translate="yes" xml:space="preserve">
          <source>Decision trees can also be applied to regression problems, using the &lt;a href=&quot;generated/sklearn.tree.decisiontreeregressor#sklearn.tree.DecisionTreeRegressor&quot;&gt;&lt;code&gt;DecisionTreeRegressor&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">使用&lt;a href=&quot;generated/sklearn.tree.decisiontreeregressor#sklearn.tree.DecisionTreeRegressor&quot;&gt; &lt;code&gt;DecisionTreeRegressor&lt;/code&gt; &lt;/a&gt;类，决策树也可以应用于回归问题。</target>
        </trans-unit>
        <trans-unit id="ecf391a5533828a262b06cd225ee7c4905ba0bd6" translate="yes" xml:space="preserve">
          <source>Decision trees can be unstable because small variations in the data might result in a completely different tree being generated. This problem is mitigated by using decision trees within an ensemble.</source>
          <target state="translated">决策树可能是不稳定的,因为数据的微小变化可能会导致生成完全不同的树。通过在一个集合中使用决策树可以缓解这个问题。</target>
        </trans-unit>
        <trans-unit id="b8067dd364292f5c89526facba24f61878038b67" translate="yes" xml:space="preserve">
          <source>Decision trees tend to overfit on data with a large number of features. Getting the right ratio of samples to number of features is important, since a tree with few samples in high dimensional space is very likely to overfit.</source>
          <target state="translated">决策树在具有大量特征的数据上倾向于过拟合。获得正确的样本与特征数的比例是很重要的,因为在高维空间中样本少的树很可能会过拟合。</target>
        </trans-unit>
        <trans-unit id="b55c43f35309f9c83e4d1b522692ebe274a7697c" translate="yes" xml:space="preserve">
          <source>Decision-tree learners can create over-complex trees that do not generalise the data well. This is called overfitting. Mechanisms such as pruning (not currently supported), setting the minimum number of samples required at a leaf node or setting the maximum depth of the tree are necessary to avoid this problem.</source>
          <target state="translated">决策树学习者可以创建过于复杂的树,不能很好地概括数据。这就是所谓的过度拟合。诸如修剪(目前不支持)、设置叶子节点所需的最小样本数或设置树的最大深度等机制是避免这一问题的必要手段。</target>
        </trans-unit>
        <trans-unit id="65e1a5e4d4af57e1fa60b4a5ac6421ab97faf6d9" translate="yes" xml:space="preserve">
          <source>Decode the input into a string of unicode symbols</source>
          <target state="translated">将输入的内容解码成一串unicode符号。</target>
        </trans-unit>
        <trans-unit id="aa08e4cccb2ffa5784056d5b60f894c7fd277edb" translate="yes" xml:space="preserve">
          <source>Decomposition / feature Extraction</source>
          <target state="translated">分解/特征提取</target>
        </trans-unit>
        <trans-unit id="9ce5b7ce28af730b5f25c8dc81f7e1a9b37b9b2c" translate="yes" xml:space="preserve">
          <source>Decompositions: from a signal to components and loadings</source>
          <target state="translated">分解:从信号到分量和载荷</target>
        </trans-unit>
        <trans-unit id="2e75c613f14e1b57fed450b7e21bd2c3f3b98028" translate="yes" xml:space="preserve">
          <source>Decorates the given function func to only compute its return value for input arguments not cached on disk.</source>
          <target state="translated">对给定的函数func进行装饰,只计算其未缓存在磁盘上的输入参数的返回值。</target>
        </trans-unit>
        <trans-unit id="001aba606916d31745e585afca635ba6daf2a4d4" translate="yes" xml:space="preserve">
          <source>Decorator to mark a function or class as deprecated.</source>
          <target state="translated">用于标记一个函数或类为废弃的装饰符。</target>
        </trans-unit>
        <trans-unit id="5e96014cdb31bdf780d54f7fcd7e259ffab62a33" translate="yes" xml:space="preserve">
          <source>Decorator used to capture the arguments of a function.</source>
          <target state="translated">用于捕捉函数参数的装饰符。</target>
        </trans-unit>
        <trans-unit id="737a81c5d04a8e80f1d8bfa4471167e371a27c19" translate="yes" xml:space="preserve">
          <source>Decreasing recall values such that element i is the recall of predictions with score &amp;gt;= thresholds[i] and the last element is 0.</source>
          <target state="translated">降低召回值，以使元素i为得分&amp;gt; = thresholds [i]且最后一个元素为0的预测的召回。</target>
        </trans-unit>
        <trans-unit id="a65712069656ca88eef26bf26d257353a482bce9" translate="yes" xml:space="preserve">
          <source>Decreasing thresholds on the decision function used to compute fpr and tpr. &lt;code&gt;thresholds[0]&lt;/code&gt; represents no instances being predicted and is arbitrarily set to &lt;code&gt;max(y_score) + 1&lt;/code&gt;.</source>
          <target state="translated">用于计算fpr和tpr的决策函数的阈值递减。 &lt;code&gt;thresholds[0]&lt;/code&gt; 表示没有实例在预测中，可以任意设置为 &lt;code&gt;max(y_score) + 1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f0110ca50d13e90fc1797e1922322c18749bac5f" translate="yes" xml:space="preserve">
          <source>Default: (25.0, 75.0) = (1st quantile, 3rd quantile) = IQR Quantile range used to calculate &lt;code&gt;scale_&lt;/code&gt;.</source>
          <target state="translated">默认值：（ &lt;code&gt;scale_&lt;/code&gt; ）=（第一分位数，第三分位数）= IQR用于计算scale_的分位数范围。</target>
        </trans-unit>
        <trans-unit id="014d885bd38361ef9d552e51a29e4a96f9d06782" translate="yes" xml:space="preserve">
          <source>Define a function to visualize cross-validation behavior</source>
          <target state="translated">定义一个函数来可视化交叉验证行为。</target>
        </trans-unit>
        <trans-unit id="f1eb27b92a6225cdd68f4f689748c274f8bc8082" translate="yes" xml:space="preserve">
          <source>Defines aggregating of multiple output scores. Array-like value defines weights used to average scores.</source>
          <target state="translated">定义多个输出分数的汇总。Array-like值定义了用于平均分数的权重。</target>
        </trans-unit>
        <trans-unit id="06c2753247ee5312ef3aba0588d108211b796ce5" translate="yes" xml:space="preserve">
          <source>Defines aggregating of multiple output scores. Array-like value defines weights used to average scores. Default is &amp;ldquo;uniform_average&amp;rdquo;.</source>
          <target state="translated">定义多个输出分数的汇总。类数组值定义用于平均分数的权重。默认值为&amp;ldquo; uniform_average&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="c5618b89379b226dd94b929f427179309d2b58a7" translate="yes" xml:space="preserve">
          <source>Defines aggregating of multiple output values. Array-like value defines weights used to average errors.</source>
          <target state="translated">定义多个输出值的聚合。Array-like值定义了用于平均误差的权重。</target>
        </trans-unit>
        <trans-unit id="6da82f056f0463f9cb8ccd320e2003d54b3cee16" translate="yes" xml:space="preserve">
          <source>Degree for poly kernels. Ignored by other kernels.</source>
          <target state="translated">多核的程度。其他内核忽略。</target>
        </trans-unit>
        <trans-unit id="f9efe6b9120bc6faaa3290784b9fdd9608b59ced" translate="yes" xml:space="preserve">
          <source>Degree of the polynomial kernel (only relevant if kernel is set to polynomial)</source>
          <target state="translated">多项式核的度数(只有当核被设置为多项式时才相关)</target>
        </trans-unit>
        <trans-unit id="3096ad879b7190fe577771b25b3fded1e7b692f0" translate="yes" xml:space="preserve">
          <source>Degree of the polynomial kernel (only relevant if kernel is set to polynomial), 3 by default.</source>
          <target state="translated">多项式核的度数(只有当核设置为多项式时才有意义),默认为3。</target>
        </trans-unit>
        <trans-unit id="540ab26d21b5cede42282aa3d2d29fd08f73e67b" translate="yes" xml:space="preserve">
          <source>Degree of the polynomial kernel function (&amp;lsquo;poly&amp;rsquo;). Ignored by all other kernels.</source>
          <target state="translated">多项式内核函数的度（&amp;ldquo; poly&amp;rdquo;）。被所有其他内核忽略。</target>
        </trans-unit>
        <trans-unit id="28ffd4105e37322b27cd7a4bc2466371b421711e" translate="yes" xml:space="preserve">
          <source>Degree of the polynomial kernel.</source>
          <target state="translated">多项式核的度。</target>
        </trans-unit>
        <trans-unit id="275a004a94191fb335eb77132e5fdae062badddc" translate="yes" xml:space="preserve">
          <source>Degree of the polynomial kernel. Ignored by other kernels.</source>
          <target state="translated">多项式核的程度。其他核忽略。</target>
        </trans-unit>
        <trans-unit id="303333d1b0ddf53df0ef31fe0c2d27e35fceb2ff" translate="yes" xml:space="preserve">
          <source>Delete all the content of the data home cache.</source>
          <target state="translated">删除数据首页缓存的所有内容。</target>
        </trans-unit>
        <trans-unit id="1e61afb71cd3c2bcf043e30768b202b1c8bf0712" translate="yes" xml:space="preserve">
          <source>Demo of DBSCAN clustering algorithm</source>
          <target state="translated">DBSCAN聚类算法演示</target>
        </trans-unit>
        <trans-unit id="bc45a5943f592fe2ef103a76a93ac0fa8a3f15b0" translate="yes" xml:space="preserve">
          <source>Demo of affinity propagation clustering algorithm</source>
          <target state="translated">亲和力传播聚类算法演示。</target>
        </trans-unit>
        <trans-unit id="da1954d4ab6aae7174ef0144820f9fd6d852a12e" translate="yes" xml:space="preserve">
          <source>Demonstrate Gradient Boosting on the Boston housing dataset.</source>
          <target state="translated">在波士顿住房数据集上演示梯度提升。</target>
        </trans-unit>
        <trans-unit id="7493b67e047ac61bd436824d2bb760d82d217b9c" translate="yes" xml:space="preserve">
          <source>Demonstrate how model complexity influences both prediction accuracy and computational performance.</source>
          <target state="translated">展示模型的复杂性如何影响预测精度和计算性能。</target>
        </trans-unit>
        <trans-unit id="8adcb7a2c2310bc06f27eaaf427bf63b80f7fccb" translate="yes" xml:space="preserve">
          <source>Demonstrate the resolution of a regression problem using a k-Nearest Neighbor and the interpolation of the target using both barycenter and constant weights.</source>
          <target state="translated">演示使用k-最近邻解决回归问题,并使用barycenter和恒定权重对目标进行插值。</target>
        </trans-unit>
        <trans-unit id="2f51f3997828729bd1ee1a34edc2039eee3733d6" translate="yes" xml:space="preserve">
          <source>Demonstrates an active learning technique to learn handwritten digits using label propagation.</source>
          <target state="translated">展示了一种利用标签传播学习手写数字的主动学习技术。</target>
        </trans-unit>
        <trans-unit id="6d9fe2318b65e202f09dce76a9c94342b5d03cd9" translate="yes" xml:space="preserve">
          <source>Demonstrates the effect of different metrics on the hierarchical clustering.</source>
          <target state="translated">展示不同指标对层次聚类的影响。</target>
        </trans-unit>
        <trans-unit id="bb817c8200b90db49aa84e7f1138af77d8b58421" translate="yes" xml:space="preserve">
          <source>Demonstrating the different strategies of KBinsDiscretizer</source>
          <target state="translated">展示KBinsDiscretizer的不同策略。</target>
        </trans-unit>
        <trans-unit id="3f5838bcdb5ddc84bd91f682e5a9ab5c8f911817" translate="yes" xml:space="preserve">
          <source>Demonstration of k-means assumptions</source>
          <target state="translated">K-means假设的证明。</target>
        </trans-unit>
        <trans-unit id="c9e46479de2b979d4dfb01fd5864433d5349a49d" translate="yes" xml:space="preserve">
          <source>Demonstration of multi-metric evaluation on cross_val_score and GridSearchCV</source>
          <target state="translated">在cross_val_score和GridSearchCV上进行多指标评价的演示。</target>
        </trans-unit>
        <trans-unit id="95524fa0b7ae4585130159f70b56711202b41a70" translate="yes" xml:space="preserve">
          <source>Demonstration of several covariances types for Gaussian mixture models.</source>
          <target state="translated">演示高斯混合物模型的几种协方差类型。</target>
        </trans-unit>
        <trans-unit id="88d8c49e9397f5a77dafc962a8f0567f9b688be5" translate="yes" xml:space="preserve">
          <source>Dengyong Zhou, Olivier Bousquet, Thomas Navin Lal, Jason Weston, Bernhard Schoelkopf. Learning with local and global consistency (2004) &lt;a href=&quot;http://citeseer.ist.psu.edu/viewdoc/summary?doi=10.1.1.115.3219&quot;&gt;http://citeseer.ist.psu.edu/viewdoc/summary?doi=10.1.1.115.3219&lt;/a&gt;</source>
          <target state="translated">Dengyong Zhou，Olivier Bousquet，Thomas Navin Lal，Jason Weston，Bernhard Schoelkopf。在本地和全球范围内进行学习（2004）&lt;a href=&quot;http://citeseer.ist.psu.edu/viewdoc/summary?doi=10.1.1.115.3219&quot;&gt;http://citeseer.ist.psu.edu/viewdoc/summary?doi=10.1.1.115.3219&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0fc1ddc9202e2007570655436777d9a6d42702a3" translate="yes" xml:space="preserve">
          <source>Density Estimation for a Gaussian mixture</source>
          <target state="translated">高斯混合物的密度估计</target>
        </trans-unit>
        <trans-unit id="afc5ffa4faa920607477241529978cd2229eea20" translate="yes" xml:space="preserve">
          <source>Density estimation is a very simple concept, and most people are already familiar with one common density estimation technique: the histogram.</source>
          <target state="translated">密度估计是一个非常简单的概念,大多数人已经熟悉一种常见的密度估计技术:直方图。</target>
        </trans-unit>
        <trans-unit id="395d249b6c1e49e0cbd474270491d7456fd12892" translate="yes" xml:space="preserve">
          <source>Density estimation walks the line between unsupervised learning, feature engineering, and data modeling. Some of the most popular and useful density estimation techniques are mixture models such as Gaussian Mixtures (&lt;a href=&quot;generated/sklearn.mixture.gaussianmixture#sklearn.mixture.GaussianMixture&quot;&gt;&lt;code&gt;sklearn.mixture.GaussianMixture&lt;/code&gt;&lt;/a&gt;), and neighbor-based approaches such as the kernel density estimate (&lt;a href=&quot;generated/sklearn.neighbors.kerneldensity#sklearn.neighbors.KernelDensity&quot;&gt;&lt;code&gt;sklearn.neighbors.KernelDensity&lt;/code&gt;&lt;/a&gt;). Gaussian Mixtures are discussed more fully in the context of &lt;a href=&quot;clustering#clustering&quot;&gt;clustering&lt;/a&gt;, because the technique is also useful as an unsupervised clustering scheme.</source>
          <target state="translated">密度估计可以在无监督学习，特征工程和数据建模之间进行划分。一些最流行和有用的密度估计技术是混合模型，例如高斯混合（&lt;a href=&quot;generated/sklearn.mixture.gaussianmixture#sklearn.mixture.GaussianMixture&quot;&gt; &lt;code&gt;sklearn.mixture.GaussianMixture&lt;/code&gt; &lt;/a&gt;）和基于邻居的方法，例如内核密度估计（&lt;a href=&quot;generated/sklearn.neighbors.kerneldensity#sklearn.neighbors.KernelDensity&quot;&gt; &lt;code&gt;sklearn.neighbors.KernelDensity&lt;/code&gt; &lt;/a&gt;）。高斯混合在&lt;a href=&quot;clustering#clustering&quot;&gt;聚类&lt;/a&gt;的背景下进行了更全面的讨论，因为该技术还可用作无监督聚类方案。</target>
        </trans-unit>
        <trans-unit id="1fe8cffa65e62666bebd7ea9aebb5ce32ff7321f" translate="yes" xml:space="preserve">
          <source>Depending on the algorithm the mini-batch size can influence results or not. SGD*, PassiveAggressive*, and discrete NaiveBayes are truly online and are not affected by batch size. Conversely, MiniBatchKMeans convergence rate is affected by the batch size. Also, its memory footprint can vary dramatically with batch size.</source>
          <target state="translated">根据算法的不同,迷你批量大小会影响结果与否。SGD*、PassiveAggressive*和离散NaiveBayes是真正的在线,不受批次大小的影响。相反,MiniBatchKMeans的收敛率会受到批次大小的影响。另外,它的内存占用也会随着批次大小而有很大的变化。</target>
        </trans-unit>
        <trans-unit id="35dd55c8b4acb88c397a1d6760699b828dcc0d37" translate="yes" xml:space="preserve">
          <source>Depending on the size of the input data, this algorithm can be much more memory efficient than a PCA.</source>
          <target state="translated">根据输入数据的大小,这种算法可以比PCA更节省内存。</target>
        </trans-unit>
        <trans-unit id="29ada2136601eca5aa1d54ec9d42902bbe973b70" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.19.</source>
          <target state="translated">自0.19版本起,已不再使用。</target>
        </trans-unit>
        <trans-unit id="474fab71d451debea692e598c2f6d78e10b56e5f" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.19: &lt;code&gt;fit_params&lt;/code&gt; as a constructor argument was deprecated in version 0.19 and will be removed in version 0.21. Pass fit parameters to the &lt;code&gt;fit&lt;/code&gt; method instead.</source>
          <target state="translated">从版本0.19 开始不推荐使用：在版本0.19中不推荐使用 &lt;code&gt;fit_params&lt;/code&gt; 作为构造函数参数，在版本0.21中将其删除。而是将fit参数传递给 &lt;code&gt;fit&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="cd99330c32aa9f19b09adb3d01538379e222212b" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.19: &lt;code&gt;min_impurity_split&lt;/code&gt; has been deprecated in favor of &lt;code&gt;min_impurity_decrease&lt;/code&gt; in 0.19 and will be removed in 0.21. Use &lt;code&gt;min_impurity_decrease&lt;/code&gt; instead.</source>
          <target state="translated">因为0.19版本不推荐使用： &lt;code&gt;min_impurity_split&lt;/code&gt; 已赞成被否决 &lt;code&gt;min_impurity_decrease&lt;/code&gt; 在0.19，并会在0.21被删除。请改用 &lt;code&gt;min_impurity_decrease&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4c11bf640a1c41ebf4c9ee55f3783053aa5ac1bf" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.19: Passing &amp;lsquo;None&amp;rsquo; to parameter &lt;code&gt;accept_sparse&lt;/code&gt; in methods is deprecated in version 0.19 &amp;ldquo;and will be removed in 0.21. Use &lt;code&gt;accept_sparse=False&lt;/code&gt; instead.</source>
          <target state="translated">从0.19 版开始不推荐使用：在方法0.19版中不 &lt;code&gt;accept_sparse&lt;/code&gt; 在方法中将 'None'传递给参数accept_sparse，并将在0.21版中删除。请改用 &lt;code&gt;accept_sparse=False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1bbc321c6a1766d97eed9cbd592d2c00834d4d6f" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.19: This option will be removed in 0.21.</source>
          <target state="translated">从0.19版本开始就不适用了:这个选项将在0.21版本中被删除。</target>
        </trans-unit>
        <trans-unit id="7737da01947e5f57b287803957fd246c7b9c5c64" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.19: This parameter will be removed in 0.21.</source>
          <target state="translated">从0.19版本开始就不适用了:这个参数将在0.21版本中删除。</target>
        </trans-unit>
        <trans-unit id="270643abbf6dad48458a77f8c2e1481b13fd56bf" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.19: This parameter will be removed in 0.21. &amp;lsquo;alpha&amp;rsquo; is fixed to zero in &amp;lsquo;LabelPropagation&amp;rsquo;.</source>
          <target state="translated">从版本0.19开始不推荐使用：在0.21中将删除此参数。在&amp;ldquo; LabelPropagation&amp;rdquo;中，&amp;ldquo; alpha&amp;rdquo;固定为零。</target>
        </trans-unit>
        <trans-unit id="b63e0755a4ea776d4d33203b5412b7585eed8c81" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.19: This parameter will be removed in 0.21. Specify &lt;code&gt;ridge_alpha&lt;/code&gt; in the &lt;code&gt;SparsePCA&lt;/code&gt; constructor.</source>
          <target state="translated">从版本0.19开始不推荐使用：在0.21中将删除此参数。在 &lt;code&gt;SparsePCA&lt;/code&gt; 构造函数中指定 &lt;code&gt;ridge_alpha&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a61167b51e62051805a1cf8e47141c055755d571" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.20: &lt;code&gt;behaviour='old'&lt;/code&gt; is deprecated in 0.20 and will not be possible in 0.22.</source>
          <target state="translated">从0.20版开始不推荐使用： &lt;code&gt;behaviour='old'&lt;/code&gt; 在0.20 版中不推荐使用，而在0.22版中则不可用。</target>
        </trans-unit>
        <trans-unit id="7f8a0638cec87436ca35f9ec9a65e3c9ac43092b" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.20: &lt;code&gt;pooling_func&lt;/code&gt; has been deprecated in 0.20 and will be removed in 0.22.</source>
          <target state="translated">从0.20版开始不推荐使用： &lt;code&gt;pooling_func&lt;/code&gt; 在0.20 版中已经弃用，并将在0.22版中删除。</target>
        </trans-unit>
        <trans-unit id="d6b8fb6842836a3ce676e2cb95ca59518b7b294d" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.20: &lt;code&gt;random_state&lt;/code&gt; has been deprecated in 0.20 and will be removed in 0.22.</source>
          <target state="translated">自版本0.20 起已弃用： &lt;code&gt;random_state&lt;/code&gt; 已在0.20中弃用，并将在0.22中删除。</target>
        </trans-unit>
        <trans-unit id="9e86d2a9a47643781b56340270e8b37187acebc0" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.20: &lt;code&gt;raw_values&lt;/code&gt; has been deprecated in 0.20 and will be removed in 0.22.</source>
          <target state="translated">自版本0.20 起已弃用： &lt;code&gt;raw_values&lt;/code&gt; 已在0.20中弃用，并将在0.22中删除。</target>
        </trans-unit>
        <trans-unit id="537eb1dfa769868cfcd61f5b817cf1aee83865e4" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.20: &lt;code&gt;validate=True&lt;/code&gt; as default will be replaced by &lt;code&gt;validate=False&lt;/code&gt; in 0.22.</source>
          <target state="translated">从版本0.20开始不推荐使用： &lt;code&gt;validate=True&lt;/code&gt; 作为默认值将在0.22中替换为 &lt;code&gt;validate=False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1da4ad0429839b19a9097e9576ca7ea14acf0545" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.20: Deprecated for removal in 0.22. Use sklearn.set_config(working_memory=&amp;hellip;) instead.</source>
          <target state="translated">从0.20版开始不推荐使用：在0.22版中不建议移除。请改用sklearn.set_config（working_memory =&amp;hellip;）。</target>
        </trans-unit>
        <trans-unit id="64e2c7846e8cfe004db5200a4e4b87e340e3eba3" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.20: Parameter &lt;code&gt;reorder&lt;/code&gt; has been deprecated in version 0.20 and will be removed in 0.22. It&amp;rsquo;s introduced for roc_auc_score (not for general use) and is no longer used there. What&amp;rsquo;s more, the result from auc will be significantly influenced if x is sorted unexpectedly due to slight floating point error (See issue #9786). Future (and default) behavior is equivalent to &lt;code&gt;reorder=False&lt;/code&gt;.</source>
          <target state="translated">从0.20版开始不推荐使用：参数 &lt;code&gt;reorder&lt;/code&gt; 在0.20版中已经弃用，并将在0.22版中删除。它是为roc_auc_score引入的（不用于一般用途），并且不再在那里使用。此外，如果x因轻微的浮点错误而意外排序，则来自auc的结果将受到显着影响（请参见问题＃9786）。未来（和默认）的行为等效于 &lt;code&gt;reorder=False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="59ad4bd84fd8572bee838f8ade797926ef8bb61c" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.20: The &lt;code&gt;categorical_features&lt;/code&gt; keyword was deprecated in version 0.20 and will be removed in 0.22. You can use the &lt;code&gt;ColumnTransformer&lt;/code&gt; instead.</source>
          <target state="translated">从0.20版开始不推荐使用： &lt;code&gt;categorical_features&lt;/code&gt; 关键字在0.20版中不再推荐使用，在0.22版中将被删除。您可以改用 &lt;code&gt;ColumnTransformer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="66846fb0fe75b4df3937bb9bb52b1bcd4782bab0" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.20: The &lt;code&gt;n_values&lt;/code&gt; keyword was deprecated in version 0.20 and will be removed in 0.22. Use &lt;code&gt;categories&lt;/code&gt; instead.</source>
          <target state="translated">从0.20版开始不推荐使用： &lt;code&gt;n_values&lt;/code&gt; 关键字在0.20版中不再推荐使用，并将在0.22版中删除。请改用 &lt;code&gt;categories&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d7c2fd1b08e7c085cda87f7098db5fd3af47bce8" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.20: The option is broken and deprecated. It will be removed in v0.22.</source>
          <target state="translated">从0.20版本开始就被废止了:这个选项已经被破坏并被废止了。它将在0.22版本中被删除。</target>
        </trans-unit>
        <trans-unit id="cbf291776b1059eca0dc931e866b26cd52b2014b" translate="yes" xml:space="preserve">
          <source>Deprecated since version 0.20: Will be removed in version 0.22</source>
          <target state="translated">从0.20版本开始就不适用了:将在0.22版本中删除。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
