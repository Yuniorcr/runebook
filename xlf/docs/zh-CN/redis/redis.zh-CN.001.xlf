<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="redis">
    <body>
      <group id="redis">
        <trans-unit id="6cbbabd0de1af9aa5bea8c5c86e71564ff432533" translate="yes" xml:space="preserve">
          <source>&quot;All-time&quot; means the maximum latency since the Redis instance was started, or the time that events were reset &lt;a href=&quot;latency-reset&quot;&gt;LATENCY RESET&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d090ece0f6a013c7b127d821779608185c9bdd43" translate="yes" xml:space="preserve">
          <source>&quot;master&quot;</source>
          <target state="translated">&quot;master&quot;</target>
        </trans-unit>
        <trans-unit id="6d0ace2f2b4d75b2aa62e7e81cf28ea7b27257b2" translate="yes" xml:space="preserve">
          <source>&quot;sentinel&quot;</source>
          <target state="translated">&quot;sentinel&quot;</target>
        </trans-unit>
        <trans-unit id="b7b37b37a23f19943025621e89ffee17065c89ed" translate="yes" xml:space="preserve">
          <source>&quot;slave&quot;</source>
          <target state="translated">&quot;slave&quot;</target>
        </trans-unit>
        <trans-unit id="d66b9359c4d9858484686c0c6a5bcc4c1dcb97a8" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2009&amp;ndash;2018 Salvatore Sanfilippo</source>
          <target state="translated">&amp;copy;2009&amp;ndash;2018 Salvatore Sanfilippo</target>
        </trans-unit>
        <trans-unit id="2d2e44552c5ed4f201c3443b31409c829c18d8f0" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2009&amp;ndash;2020 Salvatore Sanfilippo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ecfe6c066ed9ce69b42cf0699ab184e502a6d4" translate="yes" xml:space="preserve">
          <source>...continues until all replicas for this master are returned.</source>
          <target state="translated">...继续，直到返回该主服务器的所有副本。</target>
        </trans-unit>
        <trans-unit id="cf13bcbd4a73014086e21ab38322f863e7ab7f8b" translate="yes" xml:space="preserve">
          <source>1 if at least 1 HyperLogLog internal register was altered. 0 otherwise.</source>
          <target state="translated">如果至少有1个HyperLogLog内部寄存器被更改,则为1。否则为0。</target>
        </trans-unit>
        <trans-unit id="9de169c009b09b9b41734a83174207038fcfc8bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;auth&quot;&gt;AUTH&lt;/a&gt; -- Authenticate with the given password to the remote instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="298f6459896a7afbc1f87466fa10327589bc889f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bitfield&quot;&gt;BITFIELD&lt;/a&gt; is able to operate with multiple bit fields in the same command call. It takes a list of operations to perform, and returns an array of replies, where each array matches the corresponding operation in the list of arguments.</source>
          <target state="translated">&lt;a href=&quot;bitfield&quot;&gt;BITFIELD&lt;/a&gt;能够在同一命令调用中使用多个位字段进行操作。它获取要执行的操作的列表，并返回一个答复数组，其中每个数组都与参数列表中的相应操作匹配。</target>
        </trans-unit>
        <trans-unit id="1b7f3cd466d7da037528d2882227b821b5a2e2df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bitop&quot;&gt;BITOP&lt;/a&gt; is a good complement to the pattern documented in the &lt;a href=&quot;bitcount&quot;&gt;BITCOUNT&lt;/a&gt; command documentation. Different bitmaps can be combined in order to obtain a target bitmap where the population counting operation is performed.</source>
          <target state="translated">&lt;a href=&quot;bitop&quot;&gt;BITOP&lt;/a&gt;是&lt;a href=&quot;bitcount&quot;&gt;BITCOUNT&lt;/a&gt;命令文档中记录的模式的很好的补充。可以组合不同的位图以获得执行填充计数操作的目标位图。</target>
        </trans-unit>
        <trans-unit id="4ed9a216d74a14f4f5eef018eff2a38b5eb83d9b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bitop&quot;&gt;BITOP&lt;/a&gt; is a potentially slow command as it runs in O(N) time. Care should be taken when running it against long input strings.</source>
          <target state="translated">&lt;a href=&quot;bitop&quot;&gt;BITOP&lt;/a&gt;是一个可能很慢的命令，因为它以O（N）时间运行。在长输入字符串上运行时应小心。</target>
        </trans-unit>
        <trans-unit id="fcb39fa9adcb41d2b221be77d629ae144e570322" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;blmove&quot;&gt;BLMOVE&lt;/a&gt; is the blocking variant of &lt;a href=&quot;lmove&quot;&gt;LMOVE&lt;/a&gt;. When &lt;code&gt;source&lt;/code&gt; contains elements, this command behaves exactly like &lt;a href=&quot;lmove&quot;&gt;LMOVE&lt;/a&gt;. When used inside a &lt;a href=&quot;multi&quot;&gt;MULTI&lt;/a&gt;/&lt;a href=&quot;exec&quot;&gt;EXEC&lt;/a&gt; block, this command behaves exactly like &lt;a href=&quot;lmove&quot;&gt;LMOVE&lt;/a&gt;. When &lt;code&gt;source&lt;/code&gt; is empty, Redis will block the connection until another client pushes to it or until &lt;code&gt;timeout&lt;/code&gt; is reached. A &lt;code&gt;timeout&lt;/code&gt; of zero can be used to block indefinitely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47e5c8f772fa453430f8e2dfda323c8ba56c1212" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;blpop&quot;&gt;BLPOP&lt;/a&gt; can be used with pipelining (sending multiple commands and reading the replies in batch), however this setup makes sense almost solely when it is the last command of the pipeline.</source>
          <target state="translated">&lt;a href=&quot;blpop&quot;&gt;BLPOP&lt;/a&gt;可以与流水线一起使用（发送多个命令并批量读取答复），但是这种设置几乎仅在流水线的最后一个命令时才有意义。</target>
        </trans-unit>
        <trans-unit id="2319353e1b072b97b15af4a1beffb4e2e32498aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;blpop&quot;&gt;BLPOP&lt;/a&gt; guarantees to return an element from the list stored at &lt;code&gt;list2&lt;/code&gt; (since it is the first non empty list when checking &lt;code&gt;list1&lt;/code&gt;, &lt;code&gt;list2&lt;/code&gt; and &lt;code&gt;list3&lt;/code&gt; in that order).</source>
          <target state="translated">&lt;a href=&quot;blpop&quot;&gt;BLPOP&lt;/a&gt;保证从存储在 &lt;code&gt;list2&lt;/code&gt; 的列表中返回一个元素（因为按顺序检查 &lt;code&gt;list1&lt;/code&gt; ， &lt;code&gt;list2&lt;/code&gt; 和 &lt;code&gt;list3&lt;/code&gt; 时，它是第一个非空列表）。</target>
        </trans-unit>
        <trans-unit id="9f9dd7463402ad47ace1ee92bce2eb9098a0cd4c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;blpop&quot;&gt;BLPOP&lt;/a&gt; is a blocking list pop primitive. It is the blocking version of &lt;a href=&quot;lpop&quot;&gt;LPOP&lt;/a&gt; because it blocks the connection when there are no elements to pop from any of the given lists. An element is popped from the head of the first list that is non-empty, with the given keys being checked in the order that they are given.</source>
          <target state="translated">&lt;a href=&quot;blpop&quot;&gt;BLPOP&lt;/a&gt;是阻止列表弹出原语。它是&lt;a href=&quot;lpop&quot;&gt;LPOP&lt;/a&gt;的阻止版本，因为在没有任何要从任何给定列表中弹出的元素时，它会阻止连接。从第一个列表的头部弹出一个非空的元素，并以给定的键顺序检查给定的键。</target>
        </trans-unit>
        <trans-unit id="1b5186ef40193c51e3a6132e8e6cee5cf1ac30d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;brpop&quot;&gt;BRPOP&lt;/a&gt; is a blocking list pop primitive. It is the blocking version of &lt;a href=&quot;rpop&quot;&gt;RPOP&lt;/a&gt; because it blocks the connection when there are no elements to pop from any of the given lists. An element is popped from the tail of the first list that is non-empty, with the given keys being checked in the order that they are given.</source>
          <target state="translated">&lt;a href=&quot;brpop&quot;&gt;BRPOP&lt;/a&gt;是阻止列表弹出原语。它是&lt;a href=&quot;rpop&quot;&gt;RPOP&lt;/a&gt;的阻止版本，因为在没有任何要从任何给定列表中弹出的元素时，它会阻止连接。从第一个列表的尾部弹出一个非空元素，并按给定键的顺序检查给定键。</target>
        </trans-unit>
        <trans-unit id="f82e1fe35cdb39003f0819a756148b419f89ffdd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;brpoplpush&quot;&gt;BRPOPLPUSH&lt;/a&gt; is the blocking variant of &lt;a href=&quot;rpoplpush&quot;&gt;RPOPLPUSH&lt;/a&gt;. When &lt;code&gt;source&lt;/code&gt; contains elements, this command behaves exactly like &lt;a href=&quot;rpoplpush&quot;&gt;RPOPLPUSH&lt;/a&gt;. When used inside a &lt;a href=&quot;multi&quot;&gt;MULTI&lt;/a&gt;/&lt;a href=&quot;exec&quot;&gt;EXEC&lt;/a&gt; block, this command behaves exactly like &lt;a href=&quot;rpoplpush&quot;&gt;RPOPLPUSH&lt;/a&gt;. When &lt;code&gt;source&lt;/code&gt; is empty, Redis will block the connection until another client pushes to it or until &lt;code&gt;timeout&lt;/code&gt; is reached. A &lt;code&gt;timeout&lt;/code&gt; of zero can be used to block indefinitely.</source>
          <target state="translated">&lt;a href=&quot;brpoplpush&quot;&gt;BRPOPLPUSH&lt;/a&gt;是的阻挡变体&lt;a href=&quot;rpoplpush&quot;&gt;RPOPLPUSH&lt;/a&gt;。当 &lt;code&gt;source&lt;/code&gt; 包含元素时，此命令的行为与&lt;a href=&quot;rpoplpush&quot;&gt;RPOPLPUSH&lt;/a&gt;完全相同。在&lt;a href=&quot;multi&quot;&gt;MULTI&lt;/a&gt; / &lt;a href=&quot;exec&quot;&gt;EXEC&lt;/a&gt;块中使用时，此命令的行为与&lt;a href=&quot;rpoplpush&quot;&gt;RPOPLPUSH&lt;/a&gt;完全相同。当 &lt;code&gt;source&lt;/code&gt; 为空时，Redis将阻止连接，直到另一个客户端将其推送或达到 &lt;code&gt;timeout&lt;/code&gt; 为止。甲 &lt;code&gt;timeout&lt;/code&gt; 的零可以用于无限期地阻塞。</target>
        </trans-unit>
        <trans-unit id="57d1c58be2dfe8693b8c49b117f3415d9a5dcc26" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bzpopmax&quot;&gt;BZPOPMAX&lt;/a&gt; is the blocking variant of the sorted set &lt;a href=&quot;zpopmax&quot;&gt;ZPOPMAX&lt;/a&gt; primitive.</source>
          <target state="translated">&lt;a href=&quot;bzpopmax&quot;&gt;BZPOPMAX&lt;/a&gt;是排序集&lt;a href=&quot;zpopmax&quot;&gt;ZPOPMAX&lt;/a&gt;原语的阻塞变体。</target>
        </trans-unit>
        <trans-unit id="89f44ec462a3787eaa4a4b4bb72b8ffb30247ee1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bzpopmin&quot;&gt;BZPOPMIN&lt;/a&gt; is the blocking variant of the sorted set &lt;a href=&quot;zpopmin&quot;&gt;ZPOPMIN&lt;/a&gt; primitive.</source>
          <target state="translated">&lt;a href=&quot;bzpopmin&quot;&gt;BZPOPMIN&lt;/a&gt;是排序集&lt;a href=&quot;zpopmin&quot;&gt;ZPOPMIN&lt;/a&gt;原语的阻塞变体。</target>
        </trans-unit>
        <trans-unit id="5b5fc75fc0e41fd8f7844da4c69a1874efe94876" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;client-pause&quot;&gt;CLIENT PAUSE&lt;/a&gt; is a connections control command able to suspend all the Redis clients for the specified amount of time (in milliseconds).</source>
          <target state="translated">&lt;a href=&quot;client-pause&quot;&gt;CLIENT PAUSE&lt;/a&gt;是一个连接控制命令，能够将所有Redis客户端挂起指定的时间（以毫秒为单位）。</target>
        </trans-unit>
        <trans-unit id="5820f212e9cdbffad80c4b3ec9e06f08a87839b9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cluster-failover&quot;&gt;CLUSTER FAILOVER&lt;/a&gt;, unless the &lt;strong&gt;TAKEOVER&lt;/strong&gt; option is specified, does not execute a failover synchronously, it only &lt;em&gt;schedules&lt;/em&gt; a manual failover, bypassing the failure detection stage, so to check if the failover actually happened, &lt;a href=&quot;cluster-nodes&quot;&gt;CLUSTER NODES&lt;/a&gt; or other means should be used in order to verify that the state of the cluster changes after some time the command was sent.</source>
          <target state="translated">&lt;a href=&quot;cluster-failover&quot;&gt;&lt;/a&gt;除非指定了&lt;strong&gt;TAKEOVER&lt;/strong&gt;选项，否则CLUSTER FAILOVER不会同步执行故障转移，它仅&lt;em&gt;安排&lt;/em&gt;手动故障转移，绕过故障检测阶段，因此要检查故障转移是否确实发生，应使用&lt;a href=&quot;cluster-nodes&quot;&gt;CLUSTER NODES&lt;/a&gt;或其他方式进行发送命令一段时间后，请验证集群状态是否已更改。</target>
        </trans-unit>
        <trans-unit id="6df93f3c2cb3628be7571750bc31c359721a8a9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cluster-info&quot;&gt;CLUSTER INFO&lt;/a&gt; provides &lt;a href=&quot;info&quot;&gt;INFO&lt;/a&gt; style information about Redis Cluster vital parameters. The following is a sample output, followed by the description of each field reported.</source>
          <target state="translated">&lt;a href=&quot;cluster-info&quot;&gt;CLUSTER INFO&lt;/a&gt;提供有关Redis Cluster重要参数的&lt;a href=&quot;info&quot;&gt;INFO&lt;/a&gt;样式信息。以下是示例输出，然后是报告的每个字段的描述。</target>
        </trans-unit>
        <trans-unit id="05ab0833266a0e2d56f9bd65726d840ddd9f6d84" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cluster-meet&quot;&gt;CLUSTER MEET&lt;/a&gt; is used in order to connect different Redis nodes with cluster support enabled, into a working cluster.</source>
          <target state="translated">&lt;a href=&quot;cluster-meet&quot;&gt;CLUSTER MEET&lt;/a&gt;用于将启用了群集支持的不同Redis节点连接到工作群集中。</target>
        </trans-unit>
        <trans-unit id="2be70c2d8fbab0d9533c8651810517def1e38f87" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cluster-nodes&quot;&gt;CLUSTER NODES&lt;/a&gt; provides all this information, that is, the current cluster configuration of the node we are contacting, in a serialization format which happens to be exactly the same as the one used by Redis Cluster itself in order to store on disk the cluster state (however the on disk cluster state has a few additional info appended at the end).</source>
          <target state="translated">&lt;a href=&quot;cluster-nodes&quot;&gt;CLUSTER NODES&lt;/a&gt;以序列化格式提供所有这些信息，即我们正在联系的节点的当前集群配置，该格式恰好与Redis Cluster本身用来在磁盘上存储集群状态所使用的格式相同（但是磁盘上的群集状态在末尾附加了一些其他信息）。</target>
        </trans-unit>
        <trans-unit id="5a7b2b87d6fc55591b930de028a9b09209730fd9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cluster-setslot&quot;&gt;CLUSTER SETSLOT&lt;/a&gt; is responsible of changing the state of a hash slot in the receiving node in different ways. It can, depending on the subcommand used:</source>
          <target state="translated">&lt;a href=&quot;cluster-setslot&quot;&gt;CLUSTER SETSLOT&lt;/a&gt;负责以不同方式更改接收节点中哈希槽的状态。根据所使用的子命令，它可以：</target>
        </trans-unit>
        <trans-unit id="080c815556a18dd5b20cfbbccaeb8a1a935316bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cluster-slots&quot;&gt;CLUSTER SLOTS&lt;/a&gt; returns details about which cluster slots map to which Redis instances. The command is suitable to be used by Redis Cluster client libraries implementations in order to retrieve (or update when a redirection is received) the map associating cluster &lt;em&gt;hash slots&lt;/em&gt; with actual nodes network coordinates (composed of an IP address and a TCP port), so that when a command is received, it can be sent to what is likely the right instance for the keys specified in the command.</source>
          <target state="translated">&lt;a href=&quot;cluster-slots&quot;&gt;CLUSTER SLOTS&lt;/a&gt;返回有关哪些集群插槽映射到哪些Redis实例的详细信息。该命令适合Redis Cluster客户端库实现使用，以便检索（或在收到重定向时更新）将群集&lt;em&gt;哈希槽&lt;/em&gt;与实际节点网络坐标（由IP地址和TCP端口组成）相关联的映射，因此当收到命令时，可以将其发送到该命令中指定键的正确实例。</target>
        </trans-unit>
        <trans-unit id="eea3660efa2741840d4e14948a3daf43aa7906c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;command&quot;&gt;COMMAND&lt;/a&gt; shows some commands as having movablekeys meaning the entire command must be parsed to discover storage or retrieval keys. You can use &lt;a href=&quot;command-getkeys&quot;&gt;COMMAND GETKEYS&lt;/a&gt; to discover key positions directly from how Redis parses the commands.</source>
          <target state="translated">&lt;a href=&quot;command&quot;&gt;COMMAND将&lt;/a&gt;某些命令显示为具有可移动键，这意味着必须分析整个命令才能发现存储或检索键。您可以使用&lt;a href=&quot;command-getkeys&quot;&gt;COMMAND GETKEYS&lt;/a&gt;直接从Redis解析命令的方式中发现关键位置。</target>
        </trans-unit>
        <trans-unit id="489bd986cf60a756e680223a682de091c3116fb2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;command-getkeys&quot;&gt;COMMAND GETKEYS&lt;/a&gt; is a helper command to let you find the keys from a full Redis command.</source>
          <target state="translated">&lt;a href=&quot;command-getkeys&quot;&gt;COMMAND GETKEYS&lt;/a&gt;是一个帮助程序命令，可让您从完整的Redis命令中查找密钥。</target>
        </trans-unit>
        <trans-unit id="681416ad79c51f0113f1b0bbdfdbc89c2034be1b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;config-get&quot;&gt;CONFIG GET&lt;/a&gt; takes a single argument, which is a glob-style pattern. All the configuration parameters matching this parameter are reported as a list of key-value pairs. Example:</source>
          <target state="translated">&lt;a href=&quot;config-get&quot;&gt;CONFIG GET&lt;/a&gt;接受一个参数，这是一个glob样式的模式。与该参数匹配的所有配置参数均报告为键值对列表。例：</target>
        </trans-unit>
        <trans-unit id="7877824c1da22443476012437fd7bd5ad0fce7d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;copy&quot;&gt;COPY&lt;/a&gt; -- Do not remove the key from the local instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b942248ff5e8e632605cf7a19322b0ffb3e9835" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;debug-object&quot;&gt;DEBUG OBJECT&lt;/a&gt; is a debugging command that should not be used by clients. Check the &lt;a href=&quot;object&quot;&gt;OBJECT&lt;/a&gt; command instead.</source>
          <target state="translated">&lt;a href=&quot;debug-object&quot;&gt;DEBUG OBJECT&lt;/a&gt;是一个调试命令，客户端不应使用。而是检查&lt;a href=&quot;object&quot;&gt;OBJECT&lt;/a&gt;命令。</target>
        </trans-unit>
        <trans-unit id="4b0f626c24491b9a0ccd5da6245ddfb0a8879f1a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;debug-segfault&quot;&gt;DEBUG SEGFAULT&lt;/a&gt; performs an invalid memory access that crashes Redis. It is used to simulate bugs during the development.</source>
          <target state="translated">&lt;a href=&quot;debug-segfault&quot;&gt;DEBUG SEGFAULT&lt;/a&gt;执行无效的内存访问，这会使 Redis崩溃。它用于在开发过程中模拟错误。</target>
        </trans-unit>
        <trans-unit id="c25cdfe60b47993881a3589eb4168954e3c90ccd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eval&quot;&gt;EVAL&lt;/a&gt; - keys stop after &lt;code&gt;numkeys&lt;/code&gt; count arguments</source>
          <target state="translated">&lt;a href=&quot;eval&quot;&gt;EVAL&lt;/a&gt; -键停止后 &lt;code&gt;numkeys&lt;/code&gt; 计算参数</target>
        </trans-unit>
        <trans-unit id="32d306a1a945899d65731db124247cb2119ca3b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eval&quot;&gt;EVAL&lt;/a&gt; and &lt;a href=&quot;evalsha&quot;&gt;EVALSHA&lt;/a&gt; are used to evaluate scripts using the Lua interpreter built into Redis starting from version 2.6.0.</source>
          <target state="translated">&lt;a href=&quot;eval&quot;&gt;&lt;/a&gt;从2.6.0版开始，EVAL和&lt;a href=&quot;evalsha&quot;&gt;EVALSHA&lt;/a&gt;用于使用Redis内置的Lua解释器评估脚本。</target>
        </trans-unit>
        <trans-unit id="76dd713830729401bdb73704c6477a3b6aee8c2f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evalsha&quot;&gt;EVALSHA&lt;/a&gt; - keys stop after &lt;code&gt;numkeys&lt;/code&gt; count arguments</source>
          <target state="translated">&lt;a href=&quot;evalsha&quot;&gt;EVALSHA-&lt;/a&gt;在 &lt;code&gt;numkeys&lt;/code&gt; 个计数参数后，键停止</target>
        </trans-unit>
        <trans-unit id="f93b232f51da9eb1b0852dab05bb4e62e22f401f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evalsha&quot;&gt;EVALSHA&lt;/a&gt; works exactly like &lt;a href=&quot;eval&quot;&gt;EVAL&lt;/a&gt;, but instead of having a script as the first argument it has the SHA1 digest of a script. The behavior is the following:</source>
          <target state="translated">&lt;a href=&quot;evalsha&quot;&gt;EVALSHA的&lt;/a&gt;工作原理与&lt;a href=&quot;eval&quot;&gt;EVAL&lt;/a&gt;完全相同，但是它没有脚本作为第一个参数，而是具有脚本的SHA1摘要。该行为如下：</target>
        </trans-unit>
        <trans-unit id="6cfd0087ee88c2ae24709966db61c0e7ac6c4b5d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;expire&quot;&gt;EXPIRE&lt;/a&gt; would return 0 and not alter the timeout for a key with a timeout set.</source>
          <target state="translated">&lt;a href=&quot;expire&quot;&gt;EXPIRE&lt;/a&gt;将返回0，并且不会更改设置了超时的键的超时。</target>
        </trans-unit>
        <trans-unit id="1705d38419159cca69bb08cf5dadf8c85b8a1f53" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;expireat&quot;&gt;EXPIREAT&lt;/a&gt; has the same effect and semantic as &lt;a href=&quot;expire&quot;&gt;EXPIRE&lt;/a&gt;, but instead of specifying the number of seconds representing the TTL (time to live), it takes an absolute &lt;a href=&quot;http://en.wikipedia.org/wiki/Unix_time&quot;&gt;Unix timestamp&lt;/a&gt; (seconds since January 1, 1970). A timestamp in the past will delete the key immediately.</source>
          <target state="translated">&lt;a href=&quot;expireat&quot;&gt;EXPIREAT&lt;/a&gt;具有与&lt;a href=&quot;expire&quot;&gt;EXPIRE&lt;/a&gt;相同的作用和语义，但是它没有指定表示TTL（生存时间）的秒数，而是使用了绝对的&lt;a href=&quot;http://en.wikipedia.org/wiki/Unix_time&quot;&gt;Unix时间戳&lt;/a&gt;（自1970年1月1日以来的秒数）。过去的时间戳会立即删除密钥。</target>
        </trans-unit>
        <trans-unit id="c00a508fcaefc4b21a2a57ab333e66a1842a7ec0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;expireat&quot;&gt;EXPIREAT&lt;/a&gt; was introduced in order to convert relative timeouts to absolute timeouts for the AOF persistence mode. Of course, it can be used directly to specify that a given key should expire at a given time in the future.</source>
          <target state="translated">&lt;a href=&quot;expireat&quot;&gt;&lt;/a&gt;引入EXPIREAT是为了将AOF持久性模式的相对超时转换为绝对超时。当然，它可以直接用于指定给定密钥应在将来的给定时间到期。</target>
        </trans-unit>
        <trans-unit id="63424360a225a4ccb8fe41847e8110707c572538" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;get&quot;&gt;GET&lt;/a&gt; -- Return the old value stored at key, or nil when key did not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0256948e937135d52eae78e100f423a41272e11e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;get&quot;&gt;GET&lt;/a&gt; arity is 2 since the command only accepts one argument and always has the format &lt;code&gt;GET _key_&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;get&quot;&gt;GET&lt;/a&gt; arity为2，因为该命令仅接受一个参数，并且始终具有 &lt;code&gt;GET _key_&lt;/code&gt; 格式。</target>
        </trans-unit>
        <trans-unit id="862f58acc6739ebcc65838489eb263ecdd265462" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;getrange&quot;&gt;GETRANGE&lt;/a&gt; allows for random access of elements. If our time series have associated time information we can easily implement a binary search to get range combining &lt;a href=&quot;getrange&quot;&gt;GETRANGE&lt;/a&gt; with the Lua scripting engine available in Redis 2.6.</source>
          <target state="translated">&lt;a href=&quot;getrange&quot;&gt;GETRANGE&lt;/a&gt;允许元素的随机访问。如果我们的时间序列具有关联的时间信息，则我们可以轻松实现二进制搜索，以将&lt;a href=&quot;getrange&quot;&gt;GETRANGE&lt;/a&gt;与Redis 2.6中提供的Lua脚本引擎结合起来以获得范围。</target>
        </trans-unit>
        <trans-unit id="ea9de69ea3ff19d06a0fe287a311dbf94bb30a68" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;getset&quot;&gt;GETSET&lt;/a&gt; can be used together with &lt;a href=&quot;incr&quot;&gt;INCR&lt;/a&gt; for counting with atomic reset. For example: a process may call &lt;a href=&quot;incr&quot;&gt;INCR&lt;/a&gt; against the key &lt;code&gt;mycounter&lt;/code&gt; every time some event occurs, but from time to time we need to get the value of the counter and reset it to zero atomically. This can be done using &lt;code&gt;GETSET mycounter &quot;0&quot;&lt;/code&gt;:</source>
          <target state="translated">&lt;a href=&quot;getset&quot;&gt;GETSET&lt;/a&gt;可与&lt;a href=&quot;incr&quot;&gt;INCR&lt;/a&gt;一起用于原子复位计数。例如：某个事件每次发生时，进程可能会针对密钥 &lt;code&gt;mycounter&lt;/code&gt; 调用&lt;a href=&quot;incr&quot;&gt;INCR&lt;/a&gt;，但我们有时会需要获取计数器的值并将其自动重置为零。这可以使用 &lt;code&gt;GETSET mycounter &quot;0&quot;&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="2a5cb3451bd35392828ae029ba52d4629724de6e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;hscan&quot;&gt;HSCAN&lt;/a&gt; array of elements contain two elements, a field and a value, for every returned element of the Hash.</source>
          <target state="translated">&lt;a href=&quot;hscan&quot;&gt;HSCAN&lt;/a&gt;元素数组包含针对哈希的每个返回元素的两个元素，即字段和值。</target>
        </trans-unit>
        <trans-unit id="01babade069e95b8d557b3e99aa3e3618353028b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;hscan&quot;&gt;HSCAN&lt;/a&gt; iterates fields of Hash types and their associated values.</source>
          <target state="translated">&lt;a href=&quot;hscan&quot;&gt;HSCAN&lt;/a&gt;迭代Hash类型的字段及其关联的值。</target>
        </trans-unit>
        <trans-unit id="80a0ce1ddcb6cc2a005d75a343289ea68fbda569" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;Array reply&lt;/a&gt; The command returns an array of integers that correspond to the specified SHA1 digest arguments. For every corresponding SHA1 digest of a script that actually exists in the script cache, an 1 is returned, otherwise 0 is returned.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;数组回复&lt;/a&gt;该命令返回一个整数数组，该整数与指定的SHA1摘要参数相对应。对于脚本高速缓存中实际存在的脚本的每个对应的SHA1摘要，将返回1，否则返回0。</target>
        </trans-unit>
        <trans-unit id="486ba6315bca74f915f1d94b39f49b62d9fd7125" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;Array reply&lt;/a&gt;, specifically:</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;数组回复&lt;/a&gt;，特别是：</target>
        </trans-unit>
        <trans-unit id="a87373c78b3d488d21433e0636b5d549779ab143" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;Array reply&lt;/a&gt;: From 0 to &lt;em&gt;count&lt;/em&gt; key names in a Redis array reply.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;数组回复&lt;/a&gt;：从0开始&lt;em&gt;计算&lt;/em&gt; Redis数组回复中的键名。</target>
        </trans-unit>
        <trans-unit id="2cd100b3945e68b445209aaf2777f69f908fe02e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;Array reply&lt;/a&gt;: a list of ACL categories or a list of commands inside a given category. The command may return an error if an invalid category name is given as argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e072b42a4e105e7e9a3adfdf30f4ebb2f1a7a85" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;Array reply&lt;/a&gt;: a list of ACL rule definitions for the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15910fe88d88893204377b71be2fd6fe3ca99c1e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;Array reply&lt;/a&gt;: a list of ACL security events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c52429c4d95e074b8db21a25b8a8357d1a3b806" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;Array reply&lt;/a&gt;: a list of active channels, optionally matching the specified pattern.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;数组回复&lt;/a&gt;：活动通道的列表，可以选择匹配指定的模式。</target>
        </trans-unit>
        <trans-unit id="3018dbf10bce392168033eb0d2ea6d0a4a1f46cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;Array reply&lt;/a&gt;: a list of channels and number of subscribers for every channel. The format is channel, count, channel, count, ..., so the list is flat. The order in which the channels are listed is the same as the order of the channels specified in the command call.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;数组回复&lt;/a&gt;：频道列表和每个频道的订户数量。格式为通道，计数，通道，计数，...，因此列表是平坦的。列出通道的顺序与命令调用中指定的通道的顺序相同。</target>
        </trans-unit>
        <trans-unit id="f6152475682db758d2e7a96ad710b4e60c520e30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;Array reply&lt;/a&gt;: a list of server properties. The reply is a map instead of an array when RESP3 is selected. The command returns an error if the protocol requested does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63975dbc5ab6e11639a6a1c05d5503519f5e2e82" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;Array reply&lt;/a&gt;: a list of subcommands and their descriptions</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;数组回复&lt;/a&gt;：子命令及其说明的列表</target>
        </trans-unit>
        <trans-unit id="bde76633eb70f22567a63440df550e9e77183491" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;Array reply&lt;/a&gt;: a list of tracking information sections and their respective values, specifically:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d268864554befa38e947a1034b4c1845060a6854" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;Array reply&lt;/a&gt;: all elements of the set.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;数组回复&lt;/a&gt;：集合中的所有元素。</target>
        </trans-unit>
        <trans-unit id="055fe2adb91d8fcd05f658cfb380ba41915fd3ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;Array reply&lt;/a&gt;: each element being the reply to each of the commands in the atomic transaction.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;数组reply&lt;/a&gt;：每个元素是对原子事务中每个命令的答复。</target>
        </trans-unit>
        <trans-unit id="ee5ade4e24c570073b995a53e9ece62b6f69b7e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;Array reply&lt;/a&gt;: list of elements in the specified range (optionally with their scores).</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;数组回复&lt;/a&gt;：指定范围内的元素列表（可以选择分数）。</target>
        </trans-unit>
        <trans-unit id="c1eed33826c722815ff11475933335e0c3b1e741" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;Array reply&lt;/a&gt;: list of elements in the specified range (optionally with their scores, in case the &lt;code&gt;WITHSCORES&lt;/code&gt; option is given).</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;数组回复&lt;/a&gt;：指定范围内的元素列表（如果提供 &lt;code&gt;WITHSCORES&lt;/code&gt; 选项，则可以选择其分数）。</target>
        </trans-unit>
        <trans-unit id="bdc2ce41640e157fc2c6bd8b769566856e8c384e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;Array reply&lt;/a&gt;: list of elements in the specified range.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;数组回复&lt;/a&gt;：指定范围内的元素列表。</target>
        </trans-unit>
        <trans-unit id="65037bdac60d86ed70fd9dd0699a49b8ac55e271" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;Array reply&lt;/a&gt;: list of elements in the specified score range (optionally with their scores).</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;数组回复&lt;/a&gt;：指定得分范围内的元素列表（可选地包含其得分）。</target>
        </trans-unit>
        <trans-unit id="08afc65db9b918c7e1911260eaa2c288c7ffbe41" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;Array reply&lt;/a&gt;: list of elements in the specified score range.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;数组回复&lt;/a&gt;：指定分数范围内的元素列表。</target>
        </trans-unit>
        <trans-unit id="759a296030fa2eac4a37ddf409f6484f614a8176" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;Array reply&lt;/a&gt;: list of fields and their values stored in the hash, or an empty list when &lt;code&gt;key&lt;/code&gt; does not exist.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;数组回复&lt;/a&gt;：存储在哈希中的字段及其值的列表，或者当 &lt;code&gt;key&lt;/code&gt; 不存在时为空列表。</target>
        </trans-unit>
        <trans-unit id="e0db2f5dd09c16dd491b0eb27aab616d26ccd184" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;Array reply&lt;/a&gt;: list of fields in the hash, or an empty list when &lt;code&gt;key&lt;/code&gt; does not exist.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;数组回复&lt;/a&gt;：哈希中的字段列表，如果 &lt;code&gt;key&lt;/code&gt; 不存在，则为空列表。</target>
        </trans-unit>
        <trans-unit id="38f13012834a024afeeae0e85666ed89c21d7edd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;Array reply&lt;/a&gt;: list of keys from your command.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;数组回复&lt;/a&gt;：命令中的键列表。</target>
        </trans-unit>
        <trans-unit id="1bba25387d3ba730e4c4ccc6c9d34566d5f80b2e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;Array reply&lt;/a&gt;: list of keys matching &lt;code&gt;pattern&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;数组回复&lt;/a&gt;：匹配 &lt;code&gt;pattern&lt;/code&gt; 的键列表。</target>
        </trans-unit>
        <trans-unit id="4447e9d8f9b59b604c597c6ffc372b768b3d845a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;Array reply&lt;/a&gt;: list of loaded modules. Each element in the list represents a module, and is in itself a list of property names and their values. The following properties is reported for each loaded module:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7008901b9444e395b10b1891e0691aeed355ef1b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;Array reply&lt;/a&gt;: list of popped elements and scores.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;数组回复&lt;/a&gt;：弹出元素和分数列表。</target>
        </trans-unit>
        <trans-unit id="d7a9f384247f42b2ea4d443657c9b82821dfed4b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;Array reply&lt;/a&gt;: list of scores or &lt;code&gt;nil&lt;/code&gt; associated with the specified &lt;code&gt;member&lt;/code&gt; values (a double precision floating point number), represented as strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="768b79d5a771e0adb62f779546145aa9ec061e9f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;Array reply&lt;/a&gt;: list of values associated with the given fields, in the same order as they are requested.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;数组回复&lt;/a&gt;：与给定字段关联的值列表，顺序与请求顺序相同。</target>
        </trans-unit>
        <trans-unit id="edba5817ff98e74e87ffd89dbc0e584b1c4a0ea8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;Array reply&lt;/a&gt;: list of values at the specified keys.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;数组回复&lt;/a&gt;：指定键处的值列表。</target>
        </trans-unit>
        <trans-unit id="5bef410dcd9605ff27afaf5970e7a6644a6e394c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;Array reply&lt;/a&gt;: list of values in the hash, or an empty list when &lt;code&gt;key&lt;/code&gt; does not exist.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;数组回复&lt;/a&gt;：哈希中的值列表，如果 &lt;code&gt;key&lt;/code&gt; 不存在，则为空列表。</target>
        </trans-unit>
        <trans-unit id="b29b511b6a80ca57921b5542f271d7db4e4c8012" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;Array reply&lt;/a&gt;: list representing the membership of the given elements, in the same order as they are requested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d69c2de28454376870835b9ae6eb87c2b3c65ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;Array reply&lt;/a&gt;: list with members of the resulting set.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;数组回复&lt;/a&gt;：列出结果集的成员。</target>
        </trans-unit>
        <trans-unit id="f9718b402d94b04938fde9706fc952dcdcad2c30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;Array reply&lt;/a&gt;: nested list of command details.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;数组回复&lt;/a&gt;：命令详细信息的嵌套列表。</target>
        </trans-unit>
        <trans-unit id="4051935ff27edd1281b2e57032213c3ff26e7915" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;Array reply&lt;/a&gt;: nested list of command details. Commands are returned in random order.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;数组回复&lt;/a&gt;：命令详细信息的嵌套列表。命令以随机顺序返回。</target>
        </trans-unit>
        <trans-unit id="80226d2ffff944a8545c6bcef5b4ec0df2c13b6e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;Array reply&lt;/a&gt;: nested list of memory usage metrics and their values</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;数组回复&lt;/a&gt;：内存使用情况指标及其值的嵌套列表</target>
        </trans-unit>
        <trans-unit id="99d3dfaa299e9d77033d819c520407d435f3828c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;Array reply&lt;/a&gt;: nested list of slot ranges with IP/Port mappings.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;数组回复&lt;/a&gt;：带有IP /端口映射的插槽范围的嵌套列表。</target>
        </trans-unit>
        <trans-unit id="6c33d239309c3bcbd4633a726b256c771934af60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;Array reply&lt;/a&gt;: specifically:</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;数组回复&lt;/a&gt;：特别是：</target>
        </trans-unit>
        <trans-unit id="d590fc1c21dcc4e3339601855092a650609ee293" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;Array reply&lt;/a&gt;: the removed members, or &lt;code&gt;nil&lt;/code&gt; when &lt;code&gt;key&lt;/code&gt; does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cac49343a76b7d7f49ec588c88df33b8470033ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;Array reply&lt;/a&gt;: the result of intersection (optionally with their scores, in case the &lt;code&gt;WITHSCORES&lt;/code&gt; option is given).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07d675c3632f31097196516c1c9de75c8b6dd10c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;Array reply&lt;/a&gt;: the result of the difference (optionally with their scores, in case the &lt;code&gt;WITHSCORES&lt;/code&gt; option is given).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b4a4c18a58c75d77be58bc486629fce05810c92" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;Array reply&lt;/a&gt;: the result of union (optionally with their scores, in case the &lt;code&gt;WITHSCORES&lt;/code&gt; option is given).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d4edc707802ff17b22d7943be32d8fd5478cf38" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;Array reply&lt;/a&gt;: the values of the first elements, or &lt;code&gt;nil&lt;/code&gt; when &lt;code&gt;key&lt;/code&gt; does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70c5bc4b9bbfccce8d8106181933c5e8bcc80d78" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;Array reply&lt;/a&gt;: the values of the last elements, or &lt;code&gt;nil&lt;/code&gt; when &lt;code&gt;key&lt;/code&gt; does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd962df66dd0c06c471f01d57ba98c740e6db002" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;Array reply&lt;/a&gt;: where the first element is one of &lt;code&gt;master&lt;/code&gt;, &lt;code&gt;slave&lt;/code&gt;, &lt;code&gt;sentinel&lt;/code&gt; and the additional elements are role-specific as illustrated above.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;数组回复&lt;/a&gt;：第一个元素是 &lt;code&gt;master&lt;/code&gt; ， &lt;code&gt;slave&lt;/code&gt; ， &lt;code&gt;sentinel&lt;/code&gt; 之一，其他元素是特定于角色的，如上所示。</target>
        </trans-unit>
        <trans-unit id="8f9fd296564d45c8fb370985d4f39602e3fe46f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;Array reply&lt;/a&gt;: without passing the &lt;code&gt;store&lt;/code&gt; option the command returns a list of sorted elements. &lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;: when the &lt;code&gt;store&lt;/code&gt; option is specified the command returns the number of sorted elements in the destination list.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;数组回复&lt;/a&gt;：在不传递 &lt;code&gt;store&lt;/code&gt; 选项的情况下，该命令将返回已排序元素的列表。&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;整数回复&lt;/a&gt;：当指定了 &lt;code&gt;store&lt;/code&gt; 选项时，该命令将返回目标列表中已排序元素的数量。</target>
        </trans-unit>
        <trans-unit id="eb3267da4386d6eee86012ec1f53599537ae1e6f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;Bulk string reply&lt;/a&gt; (or verbatim reply when using the RESP3 protocol): the string containing the generative computer art, and a text with the Redis version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0060692d109c5852aa6b03fa7716b694d65526b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;Bulk string reply&lt;/a&gt; This command returns the SHA1 digest of the script added into the script cache.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;批量字符串答复&lt;/a&gt;此命令返回添加到脚本缓存中的脚本的SHA1摘要。</target>
        </trans-unit>
        <trans-unit id="845a3428e17cdef2c02c9f357ff17ea5bbaad601" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;Bulk string reply&lt;/a&gt;, specifically:</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;批量字符串回复&lt;/a&gt;，特别是：</target>
        </trans-unit>
        <trans-unit id="5e7fc817ca969a4aa43419d826f7c1c4eb7dd749" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;Bulk string reply&lt;/a&gt;: A map between named fields and values in the form of &lt;code&gt;&amp;lt;field&amp;gt;:&amp;lt;value&amp;gt;&lt;/code&gt; lines separated by newlines composed by the two bytes &lt;code&gt;CRLF&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;批量字符串答复&lt;/a&gt;：命名字段与值之间的映射，格式为 &lt;code&gt;&amp;lt;field&amp;gt;:&amp;lt;value&amp;gt;&lt;/code&gt; 行，由由两个字节 &lt;code&gt;CRLF&lt;/code&gt; 组成的换行符分隔。</target>
        </trans-unit>
        <trans-unit id="a4a5567225398e5bc0068ba239e91b02d4ee7cb2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;Bulk string reply&lt;/a&gt;: The connection name, or a null bulk reply if no name is set.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;批量字符串答复&lt;/a&gt;：连接名称；如果未设置名称，则返回空批量答复。</target>
        </trans-unit>
        <trans-unit id="b057bb332a67214e2a4a458e18172042e7cd632b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;Bulk string reply&lt;/a&gt;: The node id.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25762762c8c2667fa1ae9d38c2200fef10a8714b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;Bulk string reply&lt;/a&gt;: The serialized cluster configuration.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;批量字符串答复&lt;/a&gt;：序列化的集群配置。</target>
        </trans-unit>
        <trans-unit id="f5ba04d6a962501f6dbc4d2d9c2152d5b80a6dd0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;Bulk string reply&lt;/a&gt;: a unique string, as described at the &lt;a href=&quot;client-list&quot;&gt;CLIENT LIST&lt;/a&gt; page, for the current client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8291a50a03c48c7923ec73608ce7fc3f57608065" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;Bulk string reply&lt;/a&gt;: a unique string, formatted as follows:</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;批量字符串回复&lt;/a&gt;：唯一字符串，格式如下：</target>
        </trans-unit>
        <trans-unit id="86beafc65ba97e040d2555747da1b5b85fdfd2ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;Bulk string reply&lt;/a&gt;: as a collection of text lines.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;批量字符串回复&lt;/a&gt;：作为文本行的集合。</target>
        </trans-unit>
        <trans-unit id="4aea6b25841ddff2e06e954e3a51101fa16d948a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;Bulk string reply&lt;/a&gt;: by default 64 bytes string representing 256 bits of pseudorandom data. Otherwise if an argument if needed, the output string length is the number of specified bits (rounded to the next multiple of 4) divided by 4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42797546d8faff4f9aa92f89bfd2c70972447f29" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;Bulk string reply&lt;/a&gt;: the element being popped and pushed.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;批量字符串答复&lt;/a&gt;：正在弹出并推送的元素。</target>
        </trans-unit>
        <trans-unit id="d38053c5f4c5f80f17f4a7624581a88ff834bfbc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;Bulk string reply&lt;/a&gt;: the element being popped from &lt;code&gt;source&lt;/code&gt; and pushed to &lt;code&gt;destination&lt;/code&gt;. If &lt;code&gt;timeout&lt;/code&gt; is reached, a &lt;a href=&quot;https://redis.io/topics/protocol#nil-reply&quot;&gt;Null reply&lt;/a&gt; is returned.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;批量字符串答复&lt;/a&gt;：从 &lt;code&gt;source&lt;/code&gt; 弹出并推送到 &lt;code&gt;destination&lt;/code&gt; 的元素。如果 &lt;code&gt;timeout&lt;/code&gt; ，则返回&lt;a href=&quot;https://redis.io/topics/protocol#nil-reply&quot;&gt;Null答复&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="285123c9cbd50d725c88fbd823aac7aec8938410" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;Bulk string reply&lt;/a&gt;: the memory allocator's internal statistics report</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;批量字符串回复&lt;/a&gt;：内存分配器的内部统计报告</target>
        </trans-unit>
        <trans-unit id="15bbcaaf54deaa53f0973715aba543e9bb36e555" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;Bulk string reply&lt;/a&gt;: the new score of &lt;code&gt;member&lt;/code&gt; (a double precision floating point number), represented as string.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;批量字符串答复&lt;/a&gt;： &lt;code&gt;member&lt;/code&gt; 的新分数（双精度浮点数），表示为字符串。</target>
        </trans-unit>
        <trans-unit id="85742ae57c7f81e07ca0c455995ba2f2910fc525" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;Bulk string reply&lt;/a&gt;: the old value stored at &lt;code&gt;key&lt;/code&gt;, or &lt;code&gt;nil&lt;/code&gt; when &lt;code&gt;key&lt;/code&gt; did not exist.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;批量字符串答复&lt;/a&gt;：存储在 &lt;code&gt;key&lt;/code&gt; 处的旧值；如果 &lt;code&gt;key&lt;/code&gt; 不存在， &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dd8b37400f2e5614a532885ebdf5ff7e1383af0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;Bulk string reply&lt;/a&gt;: the random key, or &lt;code&gt;nil&lt;/code&gt; when the database is empty.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;批量字符串答复&lt;/a&gt;：随机键；如果数据库为空，则为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="55a29455c2a78416742f62adb4ee460239fd3430" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;Bulk string reply&lt;/a&gt;: the removed element, or &lt;code&gt;nil&lt;/code&gt; when &lt;code&gt;key&lt;/code&gt; does not exist.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;批量字符串答复&lt;/a&gt;：已删除的元素；如果 &lt;code&gt;key&lt;/code&gt; 不存在， &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fa5f1109c9374907cd359659bbf9f94905464578" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;Bulk string reply&lt;/a&gt;: the removed member, or &lt;code&gt;nil&lt;/code&gt; when &lt;code&gt;key&lt;/code&gt; does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="947373c7837eae7cf3063950a2f1e02de9ee212d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;Bulk string reply&lt;/a&gt;: the requested element, or &lt;code&gt;nil&lt;/code&gt; when &lt;code&gt;index&lt;/code&gt; is out of range.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;批量字符串答复&lt;/a&gt;：所请求的元素，或者当 &lt;code&gt;index&lt;/code&gt; 超出范围时为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fa9f8462ea5a93855e928b9e454ce50c6c8b015e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;Bulk string reply&lt;/a&gt;: the score of &lt;code&gt;member&lt;/code&gt; (a double precision floating point number), represented as string.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;批量字符串答复&lt;/a&gt;： &lt;code&gt;member&lt;/code&gt; 的分数（双精度浮点数），表示为字符串。</target>
        </trans-unit>
        <trans-unit id="b125e358844dd5fc431b939a805af62c0e066976" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;Bulk string reply&lt;/a&gt;: the serialized value.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;批量字符串答复&lt;/a&gt;：序列化的值。</target>
        </trans-unit>
        <trans-unit id="58978233fe7cee3376f9020992b67c0daf047c20" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;Bulk string reply&lt;/a&gt;: the username of the current connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f284406d16a47480c00ff3f29a794af6559d4da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;Bulk string reply&lt;/a&gt;: the value associated with &lt;code&gt;field&lt;/code&gt;, or &lt;code&gt;nil&lt;/code&gt; when &lt;code&gt;field&lt;/code&gt; is not present in the hash or &lt;code&gt;key&lt;/code&gt; does not exist.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;批量字符串答复&lt;/a&gt;：与 &lt;code&gt;field&lt;/code&gt; 关联的值，或者当散列或 &lt;code&gt;key&lt;/code&gt; 中不存在 &lt;code&gt;field&lt;/code&gt; 时为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bb82d61357603bd2a57bf74faf2351a70c08ed9a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;Bulk string reply&lt;/a&gt;: the value of &lt;code&gt;field&lt;/code&gt; after the increment.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;批量字符串回复&lt;/a&gt;：增量后的 &lt;code&gt;field&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="9b57a44119bf18997e493deb5aa780c7768245d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;Bulk string reply&lt;/a&gt;: the value of &lt;code&gt;key&lt;/code&gt; after the increment.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;批量字符串回复&lt;/a&gt;：递增后的 &lt;code&gt;key&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="af3638610829bd57d70e0e136ec5e9fe594466c6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;Bulk string reply&lt;/a&gt;: the value of &lt;code&gt;key&lt;/code&gt;, or &lt;code&gt;nil&lt;/code&gt; when &lt;code&gt;key&lt;/code&gt; does not exist.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;批量字符串答复&lt;/a&gt;： &lt;code&gt;key&lt;/code&gt; 的值，如果 &lt;code&gt;key&lt;/code&gt; 不存在，则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1524e15569af4c178d682ededb3b0454707b7e4e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;Bulk string reply&lt;/a&gt;: the value of the first element, or &lt;code&gt;nil&lt;/code&gt; when &lt;code&gt;key&lt;/code&gt; does not exist.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;批量字符串答复&lt;/a&gt;：第一个元素的值；如果 &lt;code&gt;key&lt;/code&gt; 不存在， &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e4532d2c49323033ff7d2dfb3655ebbf78d2007b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;Bulk string reply&lt;/a&gt;: the value of the last element, or &lt;code&gt;nil&lt;/code&gt; when &lt;code&gt;key&lt;/code&gt; does not exist.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;批量字符串答复&lt;/a&gt;：最后一个元素的值；如果 &lt;code&gt;key&lt;/code&gt; 不存在， &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="83c9d8c5c93abdca6de856ff75ca817401493f50" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;Bulk string reply&lt;/a&gt;: without the additional &lt;code&gt;count&lt;/code&gt; argument the command returns a Bulk Reply with the randomly selected element, or &lt;code&gt;nil&lt;/code&gt; when &lt;code&gt;key&lt;/code&gt; does not exist. &lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;Array reply&lt;/a&gt;: when the additional &lt;code&gt;count&lt;/code&gt; argument is passed the command returns an array of elements, or an empty array when &lt;code&gt;key&lt;/code&gt; does not exist.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;大容量字符串答复&lt;/a&gt;：不带附加 &lt;code&gt;count&lt;/code&gt; 参数的命令将返回带有随机选择的元素的大容量答复，如果 &lt;code&gt;key&lt;/code&gt; 不存在，则返回 &lt;code&gt;nil&lt;/code&gt; 。&lt;a href=&quot;https://redis.io/topics/protocol#array-reply&quot;&gt;数组回复&lt;/a&gt;：当传递附加的 &lt;code&gt;count&lt;/code&gt; 参数时，该命令将返回一个元素数组，或者当 &lt;code&gt;key&lt;/code&gt; 不存在时返回一个空数组。</target>
        </trans-unit>
        <trans-unit id="07759ce56341d0818583a0fb86981afc6b981c29" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;, specifically:</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;整数回复&lt;/a&gt;，特别是：</target>
        </trans-unit>
        <trans-unit id="a77fb095c0e3bb3c72b865d23eb9fa66e6d28120" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;: TTL in milliseconds, or a negative value in order to signal an error (see the description above).</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;整数回复&lt;/a&gt;：TTL（以毫秒为单位），或者为负值，以表示错误（请参见上面的描述）。</target>
        </trans-unit>
        <trans-unit id="25c5224ccb98830f9bc39a9c0aceb209659822f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;: TTL in seconds, or a negative value in order to signal an error (see the description above).</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;整数回复&lt;/a&gt;：TTL（以秒为单位），或者为负值，以表示错误（请参见上面的描述）。</target>
        </trans-unit>
        <trans-unit id="df46ee2db01a6626432daf13698e6f8ce41173c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;: The command returns the number of replicas reached by all the writes performed in the context of the current connection.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;整数回复&lt;/a&gt;：该命令返回在当前连接的上下文中执行的所有写入所达到的副本数。</target>
        </trans-unit>
        <trans-unit id="aab4d4752a553c3968b6c9e98a5396808be0ccff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;: The hash slot number.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;整数回复&lt;/a&gt;：哈希槽号。</target>
        </trans-unit>
        <trans-unit id="0503adf8c6abc2ce3ece257f521a52b790426666" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;: The number of fields that were added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89319e35389a0b857d36cb542ef3abb9f6061b45" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;: The number of keys in the specified hash slot, or an error if the hash slot is invalid.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;整数回复&lt;/a&gt;：指定哈希槽中的键数，如果哈希槽无效，则返回错误。</target>
        </trans-unit>
        <trans-unit id="946db5d1c363df4ffc29f1f9a1aabf122be9528f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;: The number of keys that were removed.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;整数回复&lt;/a&gt;：已删除的键数。</target>
        </trans-unit>
        <trans-unit id="cb035e5b6ce558134bf90c1ede2bd5b83f632811" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;: The number of keys that were touched.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;整数回复&lt;/a&gt;：触摸过的按键数。</target>
        </trans-unit>
        <trans-unit id="165a89aa6025991290c5b64bbc86bd67d32cbb50" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;: The number of keys that were unlinked.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;整数回复&lt;/a&gt;：取消链接的键数。</target>
        </trans-unit>
        <trans-unit id="ef2105f0d65369d9bdab9c96e694f2b29c3a8cbc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;: The number of users that were deleted. This number will not always match the number of arguments since certain users may not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="031ec027acdadc31294febc67ac2fa44cfd616b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;: an UNIX time stamp.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;整数回复&lt;/a&gt;：UNIX时间戳。</target>
        </trans-unit>
        <trans-unit id="a7fb20c3110dc33173cdfb855cc68302e434729d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;: number of commands returned by &lt;a href=&quot;command&quot;&gt;COMMAND&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;整数回复&lt;/a&gt;：&lt;a href=&quot;command&quot;&gt;COMMAND&lt;/a&gt;返回的命令数</target>
        </trans-unit>
        <trans-unit id="d3985645ea6533c8ff22bd0bf4c6aaa0494190e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;: number of fields in the hash, or &lt;code&gt;0&lt;/code&gt; when &lt;code&gt;key&lt;/code&gt; does not exist.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;整数回复&lt;/a&gt;：哈希中的字段数，如果 &lt;code&gt;key&lt;/code&gt; 不存在，则为 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d8a11a13b75c8454450e9f6607be3eaca099e120" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;: the ID of the client we are redirecting the notifications to. The command returns &lt;code&gt;-1&lt;/code&gt; if client tracking is not enabled, or &lt;code&gt;0&lt;/code&gt; if client tracking is enabled but we are not redirecting the notifications to any client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5320679eebca502eaa82896b5c272af8082c5d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;: the bit value stored at &lt;em&gt;offset&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;整数回复&lt;/a&gt;：以&lt;em&gt;偏移量&lt;/em&gt;存储的位值。</target>
        </trans-unit>
        <trans-unit id="730ee3041b75e97424b63378eaa1ccca403b0299" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;: the cardinality (number of elements) of the set, or &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;key&lt;/code&gt; does not exist.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;整数回复&lt;/a&gt;：集合的基数（元素数）；如果 &lt;code&gt;key&lt;/code&gt; 不存在，则返回 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9df01f443c8d7ccdeca31cbfe67e7d6710102a58" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;: the cardinality (number of elements) of the sorted set, or &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;key&lt;/code&gt; does not exist.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;整数回复&lt;/a&gt;：排序集的基数（元素数），如果 &lt;code&gt;key&lt;/code&gt; 不存在，则为 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d33f609110f9a248f5b18cee48af07aaadfe1e0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;: the length of the list after the insert operation, or &lt;code&gt;-1&lt;/code&gt; when the value &lt;code&gt;pivot&lt;/code&gt; was not found.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;整数回复&lt;/a&gt;：插入操作后列表的长度；如果找不到值 &lt;code&gt;pivot&lt;/code&gt; 则返回 &lt;code&gt;-1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="24ce1afd1e33220091d8cb4d0b2c52498ebf5cb8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;: the length of the list after the push operation.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;整数回复&lt;/a&gt;：推送操作后列表的长度。</target>
        </trans-unit>
        <trans-unit id="aa44d6a2e061a425b99d1f822db98d1c24616fb0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;: the length of the list after the push operations.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;整数回复&lt;/a&gt;：推送操作后列表的长度。</target>
        </trans-unit>
        <trans-unit id="df9eab7d23111f94bd3556cf17f936ecd2fd185d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;: the length of the list at &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;整数回复&lt;/a&gt;： &lt;code&gt;key&lt;/code&gt; 列表的长度。</target>
        </trans-unit>
        <trans-unit id="e16d810965780b280923c3ccacb26c6db64ae821" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;: the length of the string after it was modified by the command.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;整数回复&lt;/a&gt;：命令修改后的字符串长度。</target>
        </trans-unit>
        <trans-unit id="baebf23f1e7de2e112b0ad0540d84398daeef7c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;: the length of the string after the append operation.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;整数回复&lt;/a&gt;：追加操作后字符串的长度。</target>
        </trans-unit>
        <trans-unit id="13e194e430e7a65b50120ada22b947b03158b183" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;: the length of the string at &lt;code&gt;key&lt;/code&gt;, or &lt;code&gt;0&lt;/code&gt; when &lt;code&gt;key&lt;/code&gt; does not exist.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;整数回复&lt;/a&gt;： &lt;code&gt;key&lt;/code&gt; 处的字符串长度，如果 &lt;code&gt;key&lt;/code&gt; 不存在，则返回 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5d9698660c2db7d2df47dc712d9ebf3205e55376" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;: the memory usage in bytes</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;整数回复&lt;/a&gt;：以字节为单位的内存使用情况</target>
        </trans-unit>
        <trans-unit id="9a56db16d5291b4e17cbdaeb8bab2796997fd8a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;: the number of active failure reports for the node.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;整数回复&lt;/a&gt;：节点的活动故障报告数。</target>
        </trans-unit>
        <trans-unit id="32c313e17b555e77e1a9266257601f4939b7a7b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;: the number of clients killed.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;整数回复&lt;/a&gt;：被杀死的客户端数量。</target>
        </trans-unit>
        <trans-unit id="0470450d5ab6cebc374249338ed2370944378fbd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;: the number of clients that received the message.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;整数回复&lt;/a&gt;：收到消息的客户端数。</target>
        </trans-unit>
        <trans-unit id="6c7a01d231383c2c599ee1d953e9f8a58ee44d3c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;: the number of clients that received the message. Note that in a Redis Cluster, only clients that are connected to the same node as the publishing client are included in the count.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efbb0ebf86774003b900e8e13dd8994e8d673ce5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;: the number of elements in the resulting set.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;整数回复&lt;/a&gt;：结果集中元素的数量。</target>
        </trans-unit>
        <trans-unit id="cc80dd9c7a9c03dd83f05317737b8db6a47aab7b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;: the number of elements in the resulting sorted set at &lt;code&gt;destination&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;整数回复&lt;/a&gt;： &lt;code&gt;destination&lt;/code&gt; 结果排序集中的元素数。</target>
        </trans-unit>
        <trans-unit id="4c46a6c318ca1eba536aba936805b81c6b86ed3f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;: the number of elements in the specified score range.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;整数回复&lt;/a&gt;：指定分数范围内的元素数。</target>
        </trans-unit>
        <trans-unit id="6102c95e14a38b64a5b11caea6bec8853932e3ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;: the number of elements removed.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;整数回复&lt;/a&gt;：删除的元素数。</target>
        </trans-unit>
        <trans-unit id="cbe1f1b179e296fbeb060c666b659a22da90872e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;: the number of elements that were added to the set, not including all the elements already present into the set.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;整数回复&lt;/a&gt;：已添加到集合中的元素数量，不包括已经存在于集合中的所有元素。</target>
        </trans-unit>
        <trans-unit id="b5efc093745110558a0550df857be66582177f45" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;: the number of entries actually deleted.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;整数回复&lt;/a&gt;：实际删除的条目数。</target>
        </trans-unit>
        <trans-unit id="e832fcf5757b94516db65bacd8cd26a441400850" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;: the number of entries of the stream at &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;整数回复&lt;/a&gt;： &lt;code&gt;key&lt;/code&gt; 处流的条目数。</target>
        </trans-unit>
        <trans-unit id="334e3e05c796cc1a3764e2446a0324552ac609d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;: the number of event time series that were reset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="291ab5dcd91e6798ef4d9a5a65a7dd018e6d3e39" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;: the number of fields that were removed from the hash, not including specified but non existing fields.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;整数回复&lt;/a&gt;：从哈希中删除的字段数，不包括指定的但不存在的字段。</target>
        </trans-unit>
        <trans-unit id="77f7e40a02041e5db76ae97820715d75d974f786" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;: the number of members that were removed from the set, not including non existing members.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;整数回复&lt;/a&gt;：从集合中删除的成员数，不包括不存在的成员。</target>
        </trans-unit>
        <trans-unit id="ccd33e07b2c0561dcbd7abe58b97456e0b1ace2c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;: the number of patterns all the clients are subscribed to.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;整数回复&lt;/a&gt;：所有客户端已订阅的模式数。</target>
        </trans-unit>
        <trans-unit id="77d9eb64ec3170f986f37c742d2c0fc099b6dd8e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;: the number of removed elements.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;整数回复&lt;/a&gt;：已删除元素的数量。</target>
        </trans-unit>
        <trans-unit id="bbdda2e39d4da814cc4e6c4b8d01710f540cc4f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;: the original bit value stored at &lt;em&gt;offset&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;整数回复&lt;/a&gt;：将原始位值存储在&lt;em&gt;offset处&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="3ee2fed3ff2c167a200a10b83c93876ff8b10114" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;: the string length of the value associated with &lt;code&gt;field&lt;/code&gt;, or zero when &lt;code&gt;field&lt;/code&gt; is not present in the hash or &lt;code&gt;key&lt;/code&gt; does not exist at all.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;整数回复&lt;/a&gt;：与 &lt;code&gt;field&lt;/code&gt; 关联的值的字符串长度，或者当散列或 &lt;code&gt;key&lt;/code&gt; 中不存在 &lt;code&gt;field&lt;/code&gt; 时根本不为零。</target>
        </trans-unit>
        <trans-unit id="7488f83f7eab55654f7fe9268c9aabe045a7b18e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;: the value at &lt;code&gt;field&lt;/code&gt; after the increment operation.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;整数回复&lt;/a&gt;：增量操作后 &lt;code&gt;field&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="1027bb3558c2b4ba14df5ea41d0b10ef4e2fdd02" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;: the value of &lt;code&gt;key&lt;/code&gt; after the decrement</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;整数回复&lt;/a&gt;：减后的 &lt;code&gt;key&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d6bd149493b8c911e4525285ffd34585893bdc1f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;Integer reply&lt;/a&gt;: the value of &lt;code&gt;key&lt;/code&gt; after the increment</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#integer-reply&quot;&gt;整数回复&lt;/a&gt;：增量后的 &lt;code&gt;key&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7cc7de27c999708bcbeb570ac8adac852c5d672b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;Simple string reply&lt;/a&gt; on error. On success nothing is returned since the server quits and the connection is closed.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;&lt;/a&gt;对错误的简单字符串答复。成功后，由于服务器退出并且连接已关闭，因此不会返回任何内容。</target>
        </trans-unit>
        <trans-unit id="21bf305d3c19ddbfa50aa73a23fe7d2e88372fea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;Simple string reply&lt;/a&gt; or an error if the password, or username/password pair, is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d80b08e53d5f9ba47ec97437edf0c4df077d9b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;Simple string reply&lt;/a&gt;: &lt;code&gt;BUMPED&lt;/code&gt; if the epoch was incremented, or &lt;code&gt;STILL&lt;/code&gt; if the node already has the greatest config epoch in the cluster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26a4006fcc50c5a98c791a609cf4cd33d2525570" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;Simple string reply&lt;/a&gt;: &lt;code&gt;Background saving started&lt;/code&gt; if &lt;a href=&quot;bgsave&quot;&gt;BGSAVE&lt;/a&gt; started correctly or &lt;code&gt;Background saving scheduled&lt;/code&gt; when used with the &lt;code&gt;SCHEDULE&lt;/code&gt; subcommand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f816386b73353e833eec40ca190644f53fced61" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;Simple string reply&lt;/a&gt;: &lt;code&gt;OK&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0783bd35592e36785e21f2c6ba9edb12cb11d70" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;Simple string reply&lt;/a&gt;: &lt;code&gt;OK&lt;/code&gt; if &lt;a href=&quot;set&quot;&gt;SET&lt;/a&gt; was executed correctly. &lt;a href=&quot;https://redis.io/topics/protocol#bulk-string-reply&quot;&gt;Bulk string reply&lt;/a&gt;: when &lt;a href=&quot;get&quot;&gt;GET&lt;/a&gt; option is set, the old value stored at key, or nil when key did not exist. &lt;a href=&quot;https://redis.io/topics/protocol#nil-reply&quot;&gt;Null reply&lt;/a&gt;: a Null Bulk Reply is returned if the &lt;a href=&quot;set&quot;&gt;SET&lt;/a&gt; operation was not performed because the user specified the &lt;code&gt;NX&lt;/code&gt; or &lt;code&gt;XX&lt;/code&gt; option but the condition was not met or if user specified the &lt;code&gt;NX&lt;/code&gt; and &lt;a href=&quot;get&quot;&gt;GET&lt;/a&gt; options that do not met.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9137421435e7031e78d30846bad61e19e503d47" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;Simple string reply&lt;/a&gt;: &lt;code&gt;OK&lt;/code&gt; if &lt;a href=&quot;set&quot;&gt;SET&lt;/a&gt; was executed correctly. &lt;a href=&quot;https://redis.io/topics/protocol#nil-reply&quot;&gt;Null reply&lt;/a&gt;: a Null Bulk Reply is returned if the &lt;a href=&quot;set&quot;&gt;SET&lt;/a&gt; operation was not performed because the user specified the &lt;code&gt;NX&lt;/code&gt; or &lt;code&gt;XX&lt;/code&gt; option but the condition was not met.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;简单的字符串回复&lt;/a&gt;： &lt;code&gt;OK&lt;/code&gt; ，如果&lt;a href=&quot;set&quot;&gt;SET&lt;/a&gt;被正确执行。&lt;a href=&quot;https://redis.io/topics/protocol#nil-reply&quot;&gt;空回复&lt;/a&gt;：如果由于用户指定了 &lt;code&gt;NX&lt;/code&gt; 或 &lt;code&gt;XX&lt;/code&gt; 选项但不满足条件而未执行&lt;a href=&quot;set&quot;&gt;SET&lt;/a&gt;操作，则返回空批量回复。</target>
        </trans-unit>
        <trans-unit id="9233d17c9787c672ad4f7e3e80293e0e12d1a72f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;Simple string reply&lt;/a&gt;: &lt;code&gt;OK&lt;/code&gt; if &lt;a href=&quot;swapdb&quot;&gt;SWAPDB&lt;/a&gt; was executed correctly.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;简单的字符串回复&lt;/a&gt;： &lt;code&gt;OK&lt;/code&gt; ，如果&lt;a href=&quot;swapdb&quot;&gt;SWAPDB&lt;/a&gt;被正确执行。</target>
        </trans-unit>
        <trans-unit id="1c4f5580fb235cd00e31a46cb1c3620661396952" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;Simple string reply&lt;/a&gt;: &lt;code&gt;OK&lt;/code&gt; if module was loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8803af464aafc399022f190d0b084424c2277c4b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;Simple string reply&lt;/a&gt;: &lt;code&gt;OK&lt;/code&gt; if module was unloaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c01fcbe216d0b2f0ff716f18544ddbcd2fc94031" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;Simple string reply&lt;/a&gt;: &lt;code&gt;OK&lt;/code&gt; if the command was accepted and a manual failover is going to be attempted. An error if the operation cannot be executed, for example if we are talking with a node which is already a master.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;简单的字符串回复&lt;/a&gt;： &lt;code&gt;OK&lt;/code&gt; 如果命令被接受和手动故障转移将被尝试。如果无法执行该操作（例如，如果我们正在与已经是主节点的节点进行对话），则会发生错误。</target>
        </trans-unit>
        <trans-unit id="297f4fab43e0ec2423c9dfc4730472f21ff7866d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;Simple string reply&lt;/a&gt;: &lt;code&gt;OK&lt;/code&gt; if the command was executed successfully, otherwise an error is returned.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;简单字符串答复&lt;/a&gt;：如果命令已成功执行，则为 &lt;code&gt;OK&lt;/code&gt; ，否则返回错误。</target>
        </trans-unit>
        <trans-unit id="fea202f1970ef825dd4f2ad4d5812072c693d198" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;Simple string reply&lt;/a&gt;: &lt;code&gt;OK&lt;/code&gt; if the command was successful. If the address or port specified are invalid an error is returned.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;简单字符串答复&lt;/a&gt;：如果命令成功，则 &lt;code&gt;OK&lt;/code&gt; 。如果指定的地址或端口无效，则返回错误。</target>
        </trans-unit>
        <trans-unit id="c0b3a472f0028565f48745273ffdfa0dcf15fef7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;Simple string reply&lt;/a&gt;: &lt;code&gt;OK&lt;/code&gt; if the command was successful. Otherwise an error is returned.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;简单字符串答复&lt;/a&gt;：如果命令成功，则 &lt;code&gt;OK&lt;/code&gt; 。否则，将返回错误。</target>
        </trans-unit>
        <trans-unit id="22b87078fd7c99cce816e1ce9a1ebcc7178714aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;Simple string reply&lt;/a&gt;: &lt;code&gt;OK&lt;/code&gt; if the connection exists and has been closed</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;简单的字符串回复&lt;/a&gt;： &lt;code&gt;OK&lt;/code&gt; ，如果连接存在，并已被关闭</target>
        </trans-unit>
        <trans-unit id="caa068a24e4ab09fe1a9ae4419ab37a33fc39835" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;Simple string reply&lt;/a&gt;: &lt;code&gt;OK&lt;/code&gt; if the connection name was successfully set.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;简单的字符串回复&lt;/a&gt;： &lt;code&gt;OK&lt;/code&gt; ，如果连接名称设置成功。</target>
        </trans-unit>
        <trans-unit id="3b1c28a71ec28cf5153538cceaa7522beb6dafad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;Simple string reply&lt;/a&gt;: &lt;code&gt;OK&lt;/code&gt; if the connection was successfully put in tracking mode or if the tracking mode was successfully disabled. Otherwise an error is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1a5b725450b5d0f58fcd0701fc2ff091afc81c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;Simple string reply&lt;/a&gt;: &lt;code&gt;OK&lt;/code&gt; if the security log was cleared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84b95fe0a35042125178f062fee4fdce51ef67ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;Simple string reply&lt;/a&gt;: &lt;code&gt;OK&lt;/code&gt; on success.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52284d19728639ec81c3c8e6288420afde7ec5de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;Simple string reply&lt;/a&gt;: &lt;code&gt;OK&lt;/code&gt; or an error if the argument is not yes or no.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b089a3050550664e92f327d65ddfe93413662e79" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;Simple string reply&lt;/a&gt;: &lt;code&gt;OK&lt;/code&gt; or an error if the operation fails.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;简单字符串答复&lt;/a&gt;： &lt;code&gt;OK&lt;/code&gt; 或者操作失败将返回错误。</target>
        </trans-unit>
        <trans-unit id="f299cd2d528956185fa095b9e4a4352d7cf04a01" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;Simple string reply&lt;/a&gt;: &lt;code&gt;OK&lt;/code&gt; when the configuration was rewritten properly. Otherwise an error is returned.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;简单的字符串回复&lt;/a&gt;： &lt;code&gt;OK&lt;/code&gt; 当配置被正确地改写。否则，将返回错误。</target>
        </trans-unit>
        <trans-unit id="71e5863d8fc524b70c5ad7a6bb8d8819f38867d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;Simple string reply&lt;/a&gt;: &lt;code&gt;OK&lt;/code&gt; when the configuration was set properly. Otherwise an error is returned.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;简单的字符串回复&lt;/a&gt;： &lt;code&gt;OK&lt;/code&gt; 当配置了正确设置。否则，将返回错误。</target>
        </trans-unit>
        <trans-unit id="0f05c4a622a6872881aea9067061d16e81d37284" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;Simple string reply&lt;/a&gt;: &lt;code&gt;OK&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;简单的字符串回复&lt;/a&gt;： &lt;code&gt;OK&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="274f5a935602845e5384d5ae7f75c017c7a5496d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;Simple string reply&lt;/a&gt;: A simple string reply indicating that the rewriting started or is about to start ASAP, when the call is executed with success.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddbb0da6f2fcf04271523471ba1c71d314a0d241" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;Simple string reply&lt;/a&gt;: All the subcommands return &lt;code&gt;OK&lt;/code&gt; if the command was successful. Otherwise an error is returned.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;简单的字符串回复&lt;/a&gt;：如果命令成功，则所有子命令都将返回 &lt;code&gt;OK&lt;/code&gt; 。否则，将返回错误。</target>
        </trans-unit>
        <trans-unit id="e951489739af40c53bd8764f1a993d7edbf2e3c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;Simple string reply&lt;/a&gt;: The command just returns &lt;code&gt;OK&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;简单的字符串回复&lt;/a&gt;：该命令仅返回 &lt;code&gt;OK&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3203f8adedbb1ca9d14d522445cfecd10e90ec4f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;Simple string reply&lt;/a&gt;: The command returns OK on success, or &lt;code&gt;NOKEY&lt;/code&gt; if no keys were found in the source instance.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;简单字符串答复&lt;/a&gt;：命令成功返回OK，如果在源实例中未找到任何键，则返回 &lt;code&gt;NOKEY&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="21baca8a75a2e37d445a9975cd6749634079640d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;Simple string reply&lt;/a&gt;: The command returns OK on success.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;简单字符串答复&lt;/a&gt;：命令成功返回OK。</target>
        </trans-unit>
        <trans-unit id="e52b1b5063c0ac53b0ca6553e2990dc53de1b81f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;Simple string reply&lt;/a&gt;: The command returns OK or an error if the timeout is invalid.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;简单字符串答复&lt;/a&gt;：如果超时无效，该命令将返回OK或错误。</target>
        </trans-unit>
        <trans-unit id="701e711fa186a01d4b7899ec3383951b3c08d778" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;Simple string reply&lt;/a&gt;: The commands returns OK on success.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;简单字符串答复&lt;/a&gt;：命令成功返回OK。</target>
        </trans-unit>
        <trans-unit id="4ab5321b7ab4610970bf380f5c99a11fa94dd26d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;Simple string reply&lt;/a&gt;: always &lt;a href=&quot;reset&quot;&gt;RESET&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18c4bbe7b1465236f074db82dbbd64ee2984a0f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;Simple string reply&lt;/a&gt;: always &lt;code&gt;OK&lt;/code&gt; since &lt;a href=&quot;mset&quot;&gt;MSET&lt;/a&gt; can't fail.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;简单的字符串回复&lt;/a&gt;：总是 &lt;code&gt;OK&lt;/code&gt; ，因为&lt;a href=&quot;mset&quot;&gt;MSET&lt;/a&gt;不会失败。</target>
        </trans-unit>
        <trans-unit id="c987e3cf6216c6d351ff4515581a641f35117ef3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;Simple string reply&lt;/a&gt;: always &lt;code&gt;OK&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;简单的字符串回复&lt;/a&gt;：总是 &lt;code&gt;OK&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="165b0e096dabb4ed30920d49027f0c9ff291c3ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;Simple string reply&lt;/a&gt;: always OK.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;简单的字符串回复&lt;/a&gt;：总是可以的。</target>
        </trans-unit>
        <trans-unit id="79014d2c1babae62d3575c928fe5a9f54b57bf86" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;Simple string reply&lt;/a&gt;: type of &lt;code&gt;key&lt;/code&gt;, or &lt;code&gt;none&lt;/code&gt; when &lt;code&gt;key&lt;/code&gt; does not exist.</source>
          <target state="translated">&lt;a href=&quot;https://redis.io/topics/protocol#simple-string-reply&quot;&gt;简单的字符串回复&lt;/a&gt;：类型 &lt;code&gt;key&lt;/code&gt; ，或 &lt;code&gt;none&lt;/code&gt; 时， &lt;code&gt;key&lt;/code&gt; 不存在。</target>
        </trans-unit>
        <trans-unit id="6d2cb4c98790cb25c9fb170d76ecc215497e7546" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;keys&quot;&gt;KEYS&lt;/a&gt; -- If the key argument is an empty string, the command will instead migrate all the keys that follow the &lt;a href=&quot;keys&quot;&gt;KEYS&lt;/a&gt; option (see the above section for more info).</source>
          <target state="translated">&lt;a href=&quot;keys&quot;&gt;KEYS-&lt;/a&gt;如果key参数是一个空字符串，则该命令将迁移所有在&lt;a href=&quot;keys&quot;&gt;KEYS&lt;/a&gt;选项之后的键（有关更多信息，请参见上一节）。</target>
        </trans-unit>
        <trans-unit id="7d9389fca085b1a7b5e73eb5d9c032624983e1b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;latency-graph&quot;&gt;LATENCY GRAPH&lt;/a&gt; lets you intuitively understand the latency trend of an &lt;code&gt;event&lt;/code&gt; via state-of-the-art visualization. It can be used for quickly grasping the situation before resorting to means such parsing the raw data from &lt;a href=&quot;latency-history&quot;&gt;LATENCY HISTORY&lt;/a&gt; or external tooling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60632bf207016cc8f1e0b02fff4881f8cf083c3e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;lmove&quot;&gt;LMOVE&lt;/a&gt; (or &lt;a href=&quot;blmove&quot;&gt;BLMOVE&lt;/a&gt; for the blocking variant) offers a way to avoid this problem: the consumer fetches the message and at the same time pushes it into a &lt;em&gt;processing&lt;/em&gt; list. It will use the &lt;a href=&quot;lrem&quot;&gt;LREM&lt;/a&gt; command in order to remove the message from the &lt;em&gt;processing&lt;/em&gt; list once the message has been processed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8146b28b81f62433a2d744f49d9906200e53444e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mget&quot;&gt;MGET&lt;/a&gt; arity is -2 since the command accepts at a minimum one argument, but up to an unlimited number: &lt;code&gt;MGET _key1_ [key2] [key3] ...&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;mget&quot;&gt;MGET&lt;/a&gt;元数为-2，因为命令接受至少一个参数，但到无限数量： &lt;code&gt;MGET _key1_ [key2] [key3] ...&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b74d551dd48487b353459439c5810b8fa324a72f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;migrate&quot;&gt;MIGRATE&lt;/a&gt; needs to perform I/O operations and to honor the specified timeout. When there is an I/O error during the transfer or if the timeout is reached the operation is aborted and the special error - &lt;code&gt;IOERR&lt;/code&gt; returned. When this happens the following two cases are possible:</source>
          <target state="translated">&lt;a href=&quot;migrate&quot;&gt;MIGRATE&lt;/a&gt;需要执行I / O操作并遵守指定的超时。如果在传输过程中发生I / O错误，或者如果达到超时，操作将中止，并返回特殊错误 &lt;code&gt;IOERR&lt;/code&gt; 。发生这种情况时，可能出现以下两种情况：</target>
        </trans-unit>
        <trans-unit id="73d6ea01d80dd40464bdbf6f46f154e17ea759e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;monitor&quot;&gt;MONITOR&lt;/a&gt; is a debugging command that streams back every command processed by the Redis server. It can help in understanding what is happening to the database. This command can both be used via &lt;code&gt;redis-cli&lt;/code&gt; and via &lt;code&gt;telnet&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;monitor&quot;&gt;MONITOR&lt;/a&gt;是一个调试命令，可将Redis服务器处理的每个命令流回。它可以帮助您了解数据库正在发生的事情。可以通过 &lt;code&gt;redis-cli&lt;/code&gt; 和 &lt;code&gt;telnet&lt;/code&gt; 使用此命令。</target>
        </trans-unit>
        <trans-unit id="1817595e9bbb68cbb8aaf36ed867b47ba3126fa3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mset&quot;&gt;MSET&lt;/a&gt; is atomic, so all given keys are set at once. It is not possible for clients to see that some of the keys were updated while others are unchanged.</source>
          <target state="translated">&lt;a href=&quot;mset&quot;&gt;MSET&lt;/a&gt;是原子的，因此所有给定的密钥都将立即设置。客户看不到某些键已更新，而其他键未更改。</target>
        </trans-unit>
        <trans-unit id="cb35a7c5ec5b28a9e0afc29b6bf7c84dc2dcf622" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;msetnx&quot;&gt;MSETNX&lt;/a&gt; is atomic, so all given keys are set at once. It is not possible for clients to see that some of the keys were updated while others are unchanged.</source>
          <target state="translated">&lt;a href=&quot;msetnx&quot;&gt;MSETNX&lt;/a&gt;是原子的，因此所有给定的密钥都可以一次设置。客户看不到某些键已更新，而其他键未更改。</target>
        </trans-unit>
        <trans-unit id="c1941a08d38c3d75df1a1db22011b076092cc7ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;pexpireat&quot;&gt;PEXPIREAT&lt;/a&gt; has the same effect and semantic as &lt;a href=&quot;expireat&quot;&gt;EXPIREAT&lt;/a&gt;, but the Unix time at which the key will expire is specified in milliseconds instead of seconds.</source>
          <target state="translated">&lt;a href=&quot;pexpireat&quot;&gt;PEXPIREAT&lt;/a&gt;具有相同的效果和语义为&lt;a href=&quot;expireat&quot;&gt;EXPIREAT&lt;/a&gt;，但Unix时间，在这毫秒，而不是秒指定的键将到期。</target>
        </trans-unit>
        <trans-unit id="4c76a182dfa7f50418514e82401ec4d30522238a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;psetex&quot;&gt;PSETEX&lt;/a&gt; works exactly like &lt;a href=&quot;setex&quot;&gt;SETEX&lt;/a&gt; with the sole difference that the expire time is specified in milliseconds instead of seconds.</source>
          <target state="translated">&lt;a href=&quot;psetex&quot;&gt;PSETEX的&lt;/a&gt;工作&lt;a href=&quot;setex&quot;&gt;方式&lt;/a&gt;与SETEX完全相同，唯一的区别是到期时间以毫秒而不是秒为单位指定。</target>
        </trans-unit>
        <trans-unit id="74b3bd512460d9379b27d49d692678508b5e36e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;readonly&quot;&gt;READONLY&lt;/a&gt; tells a Redis Cluster replica node that the client is willing to read possibly stale data and is not interested in running write queries.</source>
          <target state="translated">&lt;a href=&quot;readonly&quot;&gt;READONLY&lt;/a&gt;告诉Redis Cluster副本节点，客户端愿意读取可能过时的数据，并且不希望运行写入查询。</target>
        </trans-unit>
        <trans-unit id="7ec5b99fb632cc347aa4c2c994ed4f7b70583c00" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;restore&quot;&gt;RESTORE&lt;/a&gt; checks the RDB version and data checksum. If they don't match an error is returned.</source>
          <target state="translated">&lt;a href=&quot;restore&quot;&gt;RESTORE&lt;/a&gt;检查RDB版本和数据校验和。如果它们不匹配，则返回错误。</target>
        </trans-unit>
        <trans-unit id="978b3891d3cbcd2e75b7d11250ec6e96a2651a96" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;restore&quot;&gt;RESTORE&lt;/a&gt; will return a &quot;Target key name is busy&quot; error when &lt;code&gt;key&lt;/code&gt; already exists unless you use the &lt;code&gt;REPLACE&lt;/code&gt; modifier (Redis 3.0 or greater).</source>
          <target state="translated">&lt;a href=&quot;restore&quot;&gt;&lt;/a&gt;如果 &lt;code&gt;key&lt;/code&gt; 已经存在，则除非使用 &lt;code&gt;REPLACE&lt;/code&gt; 修饰符（Redis 3.0或更高版本），否则RESTORE将返回&amp;ldquo;目标密钥名称正忙&amp;rdquo;错误。</target>
        </trans-unit>
        <trans-unit id="607867386bd28ac7647c1164afd60ba4bbf1ee27" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;rpoplpush&quot;&gt;RPOPLPUSH&lt;/a&gt; (or &lt;a href=&quot;brpoplpush&quot;&gt;BRPOPLPUSH&lt;/a&gt; for the blocking variant) offers a way to avoid this problem: the consumer fetches the message and at the same time pushes it into a &lt;em&gt;processing&lt;/em&gt; list. It will use the &lt;a href=&quot;lrem&quot;&gt;LREM&lt;/a&gt; command in order to remove the message from the &lt;em&gt;processing&lt;/em&gt; list once the message has been processed.</source>
          <target state="translated">&lt;a href=&quot;rpoplpush&quot;&gt;RPOPLPUSH&lt;/a&gt;（或对于阻塞变体为&lt;a href=&quot;brpoplpush&quot;&gt;BRPOPLPUSH&lt;/a&gt;）提供了一种避免此问题的方法：使用者获取消息，同时将其推入&lt;em&gt;处理&lt;/em&gt;列表。一旦&lt;em&gt;处理&lt;/em&gt;完消息，它将使用&lt;a href=&quot;lrem&quot;&gt;LREM&lt;/a&gt;命令从&lt;em&gt;处理&lt;/em&gt;列表中删除消息。</target>
        </trans-unit>
        <trans-unit id="8e85077550aa1c37d3c9aad2ca4d607b1411203e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;scan&quot;&gt;SCAN&lt;/a&gt; array of elements is a list of keys.</source>
          <target state="translated">&lt;a href=&quot;scan&quot;&gt;&lt;/a&gt;元素的SCAN数组是键的列表。</target>
        </trans-unit>
        <trans-unit id="0cdb46ca445a00b57f65dc1297a89c15d2487ed2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;scan&quot;&gt;SCAN&lt;/a&gt; family functions do not guarantee that the number of elements returned per call are in a given range. The commands are also allowed to return zero elements, and the client should not consider the iteration complete as long as the returned cursor is not zero.</source>
          <target state="translated">&lt;a href=&quot;scan&quot;&gt;SCAN&lt;/a&gt;系列功能不保证每次调用返回的元素数在给定范围内。还允许命令返回零元素，并且只要返回的游标不为零，客户端就不应认为迭代已完成。</target>
        </trans-unit>
        <trans-unit id="b5a0c19030600e5f0f42b3ad5aa1361dfd0233da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;scan&quot;&gt;SCAN&lt;/a&gt; iterates the set of keys in the currently selected Redis database.</source>
          <target state="translated">&lt;a href=&quot;scan&quot;&gt;SCAN&lt;/a&gt;迭代当前选择的Redis数据库中的密钥集。</target>
        </trans-unit>
        <trans-unit id="97aa992fd62d3a4c2a98aa824313a37db5dcc019" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;scan&quot;&gt;SCAN&lt;/a&gt;, &lt;a href=&quot;sscan&quot;&gt;SSCAN&lt;/a&gt;, &lt;a href=&quot;hscan&quot;&gt;HSCAN&lt;/a&gt; and &lt;a href=&quot;zscan&quot;&gt;ZSCAN&lt;/a&gt; return a two elements multi-bulk reply, where the first element is a string representing an unsigned 64 bit number (the cursor), and the second element is a multi-bulk with an array of elements.</source>
          <target state="translated">&lt;a href=&quot;scan&quot;&gt;SCAN&lt;/a&gt;，&lt;a href=&quot;sscan&quot;&gt;SSCAN&lt;/a&gt;，&lt;a href=&quot;hscan&quot;&gt;HSCAN&lt;/a&gt;和&lt;a href=&quot;zscan&quot;&gt;ZSCAN&lt;/a&gt;返回两个元素的多体答复，其中第一个元素是表示无符号64位数字（光标）的字符串，第二个元素是具有元素数组的多体。</target>
        </trans-unit>
        <trans-unit id="9cf84bb49b4cb754f22b3d9e765cdd491fb29676" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;setbit&quot;&gt;SETBIT&lt;/a&gt; excels at setting single bits, and can be called several times when multiple bits need to be set. To optimize this operation you can replace multiple &lt;a href=&quot;setbit&quot;&gt;SETBIT&lt;/a&gt; calls with a single call to the variadic &lt;a href=&quot;bitfield&quot;&gt;BITFIELD&lt;/a&gt; command and the use of fields of type &lt;code&gt;u1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1cc429647f3d3a6ed8373af387a43592fc0d84b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;setex&quot;&gt;SETEX&lt;/a&gt; is atomic, and can be reproduced by using the previous two commands inside an &lt;a href=&quot;multi&quot;&gt;MULTI&lt;/a&gt; / &lt;a href=&quot;exec&quot;&gt;EXEC&lt;/a&gt; block. It is provided as a faster alternative to the given sequence of operations, because this operation is very common when Redis is used as a cache.</source>
          <target state="translated">&lt;a href=&quot;setex&quot;&gt;SETEX&lt;/a&gt;是原子的，可以使用&lt;a href=&quot;multi&quot;&gt;MULTI&lt;/a&gt; / &lt;a href=&quot;exec&quot;&gt;EXEC&lt;/a&gt;块中的前两个命令来复制。它是给定操作序列的更快替代方法，因为当Redis用作缓存时，此操作非常常见。</target>
        </trans-unit>
        <trans-unit id="02287c67ea11a6ca17f48473021815844fa305b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;setrange&quot;&gt;SETRANGE&lt;/a&gt; can be used to overwrite an existing time series.</source>
          <target state="translated">&lt;a href=&quot;setrange&quot;&gt;SETRANGE&lt;/a&gt;可用于覆盖现有时间序列。</target>
        </trans-unit>
        <trans-unit id="ab683100370a7f48dded6ed5a04bf67278378c30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sort&quot;&gt;SORT&lt;/a&gt; - optional &lt;code&gt;STORE&lt;/code&gt; key, optional &lt;code&gt;BY&lt;/code&gt; weights, optional &lt;a href=&quot;get&quot;&gt;GET&lt;/a&gt; keys</source>
          <target state="translated">&lt;a href=&quot;sort&quot;&gt;排序&lt;/a&gt; -可选的 &lt;code&gt;STORE&lt;/code&gt; 键，可选的 &lt;code&gt;BY&lt;/code&gt; 权重，可选的&lt;a href=&quot;get&quot;&gt;GET&lt;/a&gt;键</target>
        </trans-unit>
        <trans-unit id="db52b28a5e89641f8e27484d33e354f10edf1b33" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sscan&quot;&gt;SSCAN&lt;/a&gt; array of elements is a list of Set members.</source>
          <target state="translated">&lt;a href=&quot;sscan&quot;&gt;SSCAN&lt;/a&gt;元素数组是Set成员的列表。</target>
        </trans-unit>
        <trans-unit id="6a0f82e61b67b9691a5093ef110457f991bde8be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sscan&quot;&gt;SSCAN&lt;/a&gt; iterates elements of Sets types.</source>
          <target state="translated">&lt;a href=&quot;sscan&quot;&gt;SSCAN&lt;/a&gt;迭代Sets类型的元素。</target>
        </trans-unit>
        <trans-unit id="5d4e6a6b49a52d866feae91c3794f3e18086c5bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;strlen&quot;&gt;STRLEN&lt;/a&gt; can be used in order to obtain the number of samples.</source>
          <target state="translated">&lt;a href=&quot;strlen&quot;&gt;&lt;/a&gt;可以使用STRLEN以获得样本数。</target>
        </trans-unit>
        <trans-unit id="b796eba8fd69116b937293d7d2d4e660bd7b1e77" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sync&quot;&gt;SYNC&lt;/a&gt;. Enable blocking synchronous debugging of Lua scripts (saves changes to data).</source>
          <target state="translated">&lt;a href=&quot;sync&quot;&gt;SYNC&lt;/a&gt;。启用阻止Lua脚本的同步调试（保存对数据的更改）。</target>
        </trans-unit>
        <trans-unit id="c8528d8f751b6eb35cec6632b6943289a674f9f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xadd&quot;&gt;XADD&lt;/a&gt; is the &lt;em&gt;only Redis command&lt;/em&gt; that can add data to a stream, but there are other commands, such as &lt;a href=&quot;xdel&quot;&gt;XDEL&lt;/a&gt; and &lt;a href=&quot;xtrim&quot;&gt;XTRIM&lt;/a&gt;, that are able to remove data from a stream.</source>
          <target state="translated">&lt;a href=&quot;xadd&quot;&gt;XADD&lt;/a&gt;是&lt;em&gt;唯一&lt;/em&gt;可以将数据添加到流的&lt;em&gt;Redis命令&lt;/em&gt;，但是还有其他命令（例如&lt;a href=&quot;xdel&quot;&gt;XDEL&lt;/a&gt;和&lt;a href=&quot;xtrim&quot;&gt;XTRIM）&lt;/a&gt;能够从流中删除数据。</target>
        </trans-unit>
        <trans-unit id="bc9cadabd9309016680c77975a8ed7b6faffec47" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xtrim&quot;&gt;XTRIM&lt;/a&gt; trims the stream to a given number of items, evicting older items (items with lower IDs) if needed. The command is conceived to accept multiple trimming strategies, however currently only a single one is implemented, which is &lt;code&gt;MAXLEN&lt;/code&gt;, and works exactly as the &lt;code&gt;MAXLEN&lt;/code&gt; option in &lt;a href=&quot;xadd&quot;&gt;XADD&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;xtrim&quot;&gt;XTRIM&lt;/a&gt;将流修剪为给定数量的项目，并根据需要逐出较旧的项目（ID较低的项目）。该命令被认为可以接受多种修整策略，但是目前仅实现了一种，即 &lt;code&gt;MAXLEN&lt;/code&gt; ，并且与 &lt;code&gt;MAXLEN&lt;/code&gt; 中的MAXLEN选项&lt;a href=&quot;xadd&quot;&gt;完全相同&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4b49a493a94294aa0802c279d2824c75a402544c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;zdiff&quot;&gt;ZDIFF&lt;/a&gt; - keys stop after &lt;code&gt;numkeys&lt;/code&gt; count arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bb97de4e13e1361a5806301bcfdbda867363de9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;zdiffstore&quot;&gt;ZDIFFSTORE&lt;/a&gt; - keys stop after &lt;code&gt;numkeys&lt;/code&gt; count arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e51a0a1a293b7ce94094c6efe1a74e0279a0a2d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;zinter&quot;&gt;ZINTER&lt;/a&gt; - keys stop when &lt;code&gt;WEIGHT&lt;/code&gt; or &lt;code&gt;AGGREGATE&lt;/code&gt; starts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc2b34b71894079f3a4247bae9140accbfa7bd62" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;zinterstore&quot;&gt;ZINTERSTORE&lt;/a&gt; - keys stop when &lt;code&gt;WEIGHT&lt;/code&gt; or &lt;code&gt;AGGREGATE&lt;/code&gt; starts</source>
          <target state="translated">&lt;a href=&quot;zinterstore&quot;&gt;ZINTERSTORE-&lt;/a&gt;当 &lt;code&gt;WEIGHT&lt;/code&gt; 或 &lt;code&gt;AGGREGATE&lt;/code&gt; 开始时，按键停止</target>
        </trans-unit>
        <trans-unit id="ac5676feae443e91e34d888dd2a02b5b7cec1f17" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;zscan&quot;&gt;ZSCAN&lt;/a&gt; array of elements contain two elements, a member and its associated score, for every returned element of the sorted set.</source>
          <target state="translated">&lt;a href=&quot;zscan&quot;&gt;ZSCAN&lt;/a&gt;元素数组包含两个元素，一个成员及其关联的分数，用于排序集中的每个返回元素。</target>
        </trans-unit>
        <trans-unit id="867ef6f9439bd439c0289c0f4680f9547800d607" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;zscan&quot;&gt;ZSCAN&lt;/a&gt; iterates elements of Sorted Set types and their associated scores.</source>
          <target state="translated">&lt;a href=&quot;zscan&quot;&gt;ZSCAN&lt;/a&gt;迭代排序集类型及其相关分数的元素。</target>
        </trans-unit>
        <trans-unit id="2d43d96fb06af73df54968ce4c53b8f01ae94f40" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;zunion&quot;&gt;ZUNION&lt;/a&gt; - keys stop when &lt;code&gt;WEIGHT&lt;/code&gt; or &lt;code&gt;AGGREGATE&lt;/code&gt; starts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6ac10c909d551bbb985cb6f990ce82f84e1591a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;zunionstore&quot;&gt;ZUNIONSTORE&lt;/a&gt; - keys stop when &lt;code&gt;WEIGHT&lt;/code&gt; or &lt;code&gt;AGGREGATE&lt;/code&gt; starts</source>
          <target state="translated">&lt;a href=&quot;zunionstore&quot;&gt;ZUNIONSTORE-&lt;/a&gt;当 &lt;code&gt;WEIGHT&lt;/code&gt; 或 &lt;code&gt;AGGREGATE&lt;/code&gt; 开始时，按键停止</target>
        </trans-unit>
        <trans-unit id="569711c63fe9cc258fbae71ad2b1717eb25ac2f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;!&amp;lt;hashedpassword&amp;gt;&lt;/code&gt;: Like &lt;code&gt;#&amp;lt;hashedpassword&amp;gt;&lt;/code&gt; but removes the password instead of adding it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="332fe64b4ba3f15b2a3cb0e2784ed0e6ae7243a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#&amp;lt;hashedpassword&amp;gt;&lt;/code&gt;: Add the specified hashed password to the list of user passwords. A Redis hashed password is hashed with SHA256 and translated into a hexadecimal string. Example: &lt;code&gt;#c3ab8ff13720e8ad9047dd39466b3c8974e592c2fa383d4a3960714caef0c4f2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8640dd4bf16306e76fc10f269c4d26da9f4dab05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;&amp;lt;pattern&amp;gt;&lt;/code&gt;: add the specified glob style pattern to the list of Pub/Sub channel patterns accessible by the user. You can add multiple channel patterns to the same user. Example: &lt;code&gt;&amp;amp;chatroom:*&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec34b944a1a531efc5d6a70281547dd46fc46b77" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;= 2.4&lt;/code&gt;: Accepts multiple &lt;code&gt;element&lt;/code&gt; arguments. In Redis versions older than 2.4 it was possible to push a single value per command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d152642caa36eab07b6d0f1d23a030be20ac3dec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;= 2.4&lt;/code&gt;: Accepts multiple &lt;code&gt;field&lt;/code&gt; arguments. Redis versions older than 2.4 can only remove a field per call.</source>
          <target state="translated">&lt;code&gt;&amp;gt;= 2.4&lt;/code&gt; ：接受多个 &lt;code&gt;field&lt;/code&gt; 参数。低于2.4的Redis版本每次调用只能删除一个字段。</target>
        </trans-unit>
        <trans-unit id="1fbd658f48bf6962eab3d8b19eba6deaf712ae92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;= 2.4&lt;/code&gt;: Accepts multiple &lt;code&gt;member&lt;/code&gt; arguments. Redis versions before 2.4 are only able to add a single member per call.</source>
          <target state="translated">&lt;code&gt;&amp;gt;= 2.4&lt;/code&gt; ：接受多个 &lt;code&gt;member&lt;/code&gt; 参数。2.4之前的Redis版本只能为每个呼叫添加一个成员。</target>
        </trans-unit>
        <trans-unit id="14a2f58a705560c76d64b68f467a11da623ed852" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;= 2.4&lt;/code&gt;: Accepts multiple &lt;code&gt;member&lt;/code&gt; arguments. Redis versions older than 2.4 can only remove a set member per call.</source>
          <target state="translated">&lt;code&gt;&amp;gt;= 2.4&lt;/code&gt; ：接受多个 &lt;code&gt;member&lt;/code&gt; 参数。低于2.4的Redis版本只能删除每个呼叫中​​的set成员。</target>
        </trans-unit>
        <trans-unit id="3b5a2fa9b3bf571b1535ff4a8ce7dd03406f55c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;= 2.4&lt;/code&gt;: Accepts multiple &lt;code&gt;value&lt;/code&gt; arguments. In Redis versions older than 2.4 it was possible to push a single value per command.</source>
          <target state="translated">&lt;code&gt;&amp;gt;= 2.4&lt;/code&gt; ：接受多个 &lt;code&gt;value&lt;/code&gt; 参数。在低于2.4的Redis版本中，可以为每个命令推送单个值。</target>
        </trans-unit>
        <trans-unit id="0a29c540f40c0d75c4bc54e4bfbd92975038350c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;= 2.4&lt;/code&gt;: Accepts multiple elements. In Redis versions older than 2.4 it was possible to add or update a single member per call.</source>
          <target state="translated">&lt;code&gt;&amp;gt;= 2.4&lt;/code&gt; ：接受多个元素。在低于2.4的Redis版本中，可以为每个呼叫添加或更新单个成员。</target>
        </trans-unit>
        <trans-unit id="b67f606f8a6a351cad41342c72792edc0e89e8ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;= 2.4&lt;/code&gt;: Accepts multiple elements. In Redis versions older than 2.4 it was possible to remove a single member per call.</source>
          <target state="translated">&lt;code&gt;&amp;gt;= 2.4&lt;/code&gt; ：接受多个元素。在低于2.4的Redis版本中，可以在每个呼叫中​​删除一个成员。</target>
        </trans-unit>
        <trans-unit id="83a71524c9706106fb9eb052fdcb51e544db835a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;= 2.6.12&lt;/code&gt;: Added the &lt;code&gt;EX&lt;/code&gt;, &lt;code&gt;PX&lt;/code&gt;, &lt;code&gt;NX&lt;/code&gt; and &lt;code&gt;XX&lt;/code&gt; options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4901af6b504f674527d7aafc65e07383610e6747" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;= 3.0.0&lt;/code&gt;: Added the &lt;a href=&quot;copy&quot;&gt;COPY&lt;/a&gt; and &lt;code&gt;REPLACE&lt;/code&gt; options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98398956d40bb196e7619d8acc034be9d44cc0f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;= 3.0.2&lt;/code&gt;: Added the &lt;code&gt;XX&lt;/code&gt;, &lt;code&gt;NX&lt;/code&gt;, &lt;code&gt;CH&lt;/code&gt; and &lt;a href=&quot;incr&quot;&gt;INCR&lt;/a&gt; options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bea5b4de3db98a2a15eb984285a0fee982b0280" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;= 3.0.6&lt;/code&gt;: Added the &lt;a href=&quot;keys&quot;&gt;KEYS&lt;/a&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40aba7a03dbfa089c6aed1328024c7117e29b74a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;= 3.2.2&lt;/code&gt;: Added the &lt;code&gt;SCHEDULE&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7a30150b3885ca3019925b58e4bfaab88614e62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;= 3.2&lt;/code&gt;: Added the &lt;code&gt;count&lt;/code&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2ea9f36d3059b4775f75d77e03a660fad36bf90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;= 4.0.7&lt;/code&gt;: Added the &lt;a href=&quot;auth&quot;&gt;AUTH&lt;/a&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ee43e07d0b4b176ae91d9e26f62a182f77684ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;= 4.0&lt;/code&gt;: Accepts multiple &lt;code&gt;element&lt;/code&gt; arguments. In Redis versions older than 4.0 it was possible to push a single value per command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f742473237dabd90ca797cdb25ef760905e85a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;= 6.0.0&lt;/code&gt;: Added ACL style (username and password).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="285c15b24d50f9f3e48ed6a2c1a1d448a2caf95d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;= 6.0.0&lt;/code&gt;: Added the &lt;code&gt;AUTH2&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7ceb02b92efdb21741cf63fa3d22015022b2274" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;= 6.0.0&lt;/code&gt;: Added the &lt;code&gt;FULL&lt;/code&gt; option to &lt;code&gt;XINFO STREAM&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4af1549a1f3069267544622dbebc69bf01104c19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;= 6.0&lt;/code&gt;: &lt;code&gt;timeout&lt;/code&gt; is interpreted as a double instead of an integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83a1cf52ae47e116a981e6ff4206d8b721834958" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;= 6.0&lt;/code&gt;: Added the &lt;code&gt;KEEPTTL&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbba973e8dfca03cd5ec41e4bdcb4b3e54ff20a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;= 6.0&lt;/code&gt;: Supports the &lt;a href=&quot;type&quot;&gt;TYPE&lt;/a&gt; subcommand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="941a1188610db2faeb638b8c15985f0d524a8dba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;= 6.2.0&lt;/code&gt;: Added the &lt;code&gt;IDLE&lt;/code&gt; option and exclusive range intervals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bee5ff6ddaeb10d7c9268ffb8c5e2f5d6a6aa77" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;= 6.2.0&lt;/code&gt;: Supports the &lt;code&gt;CREATECONSUMER&lt;/code&gt; subcommand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a11fed7b45e661ed607d2bcc6a94ecc1d4d1377f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;= 6.2&lt;/code&gt; Added exclusive ranges.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f590db2b97fea13d3ab4b184d1fc585bed0a493" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;= 6.2&lt;/code&gt;: Added Pub/Sub channel patterns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bc582c62fddb4d98b7f1f5b2bb9a37ea165377e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;= 6.2&lt;/code&gt;: Added the &lt;a href=&quot;get&quot;&gt;GET&lt;/a&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37936786fb314f252043ccc8ea194a9bc3e19ec7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;= 6.2&lt;/code&gt;: Added the &lt;code&gt;NOMKSTREAM&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c13c2057c3929dea40075ab800a2eee9e309857b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;= 6.2&lt;/code&gt;: Added the &lt;code&gt;count&lt;/code&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8cc79dae1191957c2d6bb4d0fc21ae91bdc856b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;=2.8.12&lt;/code&gt;: &lt;code&gt;ID&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="025114393bca1775c38e0037eed391d3a4acedc2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;=2.8.12&lt;/code&gt;: Added new filter format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="053f3e43d942653dcca6e33a1de3268d6fc52f16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;=2.8.12&lt;/code&gt;: Added unique client &lt;code&gt;id&lt;/code&gt; field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f05fc7c67e88ef21ca69149ea213c2d9da4e381" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;=3.2&lt;/code&gt;: Added &lt;code&gt;master&lt;/code&gt; type in for &lt;a href=&quot;type&quot;&gt;TYPE&lt;/a&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd66e14be9c4326dab6b817580b7c8c6dc5dc15d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;=5.0&lt;/code&gt;: Added optional &lt;a href=&quot;type&quot;&gt;TYPE&lt;/a&gt; filter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae5e8aedfb1df587089d638fc0eadba6ba331870" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;=5&lt;/code&gt;: Replaced &lt;code&gt;slave&lt;/code&gt;&lt;a href=&quot;type&quot;&gt;TYPE&lt;/a&gt; with &lt;code&gt;replica&lt;/code&gt;. &lt;code&gt;slave&lt;/code&gt; still supported for backward compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1141d99bccc2b2d85f9ca2cefb8c73025329be8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;=6.0&lt;/code&gt;: &lt;a href=&quot;auth&quot;&gt;AUTH&lt;/a&gt; excluded from the command's output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1218bc6a016b1c022e1fccd9fb356a89e9ee5b44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;=6.2&lt;/code&gt;: &lt;a href=&quot;reset&quot;&gt;RESET&lt;/a&gt; can be called to exit monitor mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44eefc74ec3373606d57a5ed94d056621157ef88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;=6.2&lt;/code&gt;: &lt;a href=&quot;reset&quot;&gt;RESET&lt;/a&gt; can be called to exit subscribed state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f1d046fb8f1f3658596ba0159c572bd6543afe7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;=6.2&lt;/code&gt;: &lt;code&gt;LADDR&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34add57edf900025fe772362753c4eb8ec79828b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;=6.2&lt;/code&gt;: Added &lt;code&gt;laddr&lt;/code&gt; field and the optional &lt;code&gt;ID&lt;/code&gt; filter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04a673e1856b6d7640429daf0c5e203b54cd5b0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;=6.2&lt;/code&gt;: Added the &lt;code&gt;GT&lt;/code&gt; and &lt;code&gt;LT&lt;/code&gt; options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="080406b2f8e7fa35d9b9272a2a5fe7cbfb00c193" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;password&lt;/code&gt;: Add the specified clear text password as an hashed password in the list of the users passwords. Every user can have many active passwords, so that password rotation will be simpler. The specified password is not stored as clear text inside the server. Example: &lt;code&gt;&amp;gt;mypassword&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee41dc050003d78fdddf70aef5db0bb9bf42427e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;= 3.2.0&lt;/code&gt;: Before Redis 3.2.0, an error is returned if source and destination names are the same.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efbdbb3fc6dd3be1efaae2643f1523e35adeb35e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;password&lt;/code&gt;: Like &lt;code&gt;&amp;gt;password&lt;/code&gt; but removes the password instead of adding it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a553dd659e8f61302ef140faaa0cb627da6061d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+&amp;lt;command&amp;gt;&lt;/code&gt;: add this command to the list of the commands the user can call. Example: &lt;code&gt;+zadd&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="366c735b421e331d6dd9cfdaeb07340a3779b46b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+&amp;lt;command&amp;gt;|&amp;lt;subcommand&amp;gt;&lt;/code&gt;: add the specified command to the list of the commands the user can execute, but only for the specified subcommand. Example: &lt;code&gt;+config|get&lt;/code&gt;. Generates an error if the specified command is already allowed in its full version for the specified user. Note: there is no symmetrical command to remove subcommands, you need to remove the whole command and re-add the subcommands you want to allow. This is much safer than removing subcommands, in the future Redis may add new dangerous subcommands, so configuring by subtraction is not good.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c58bb5712b69a986cedce93a7363000108c338b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+@&amp;lt;category&amp;gt;&lt;/code&gt;: add all the commands in the specified category to the list of commands the user is able to execute. Example: &lt;code&gt;+@string&lt;/code&gt; (adds all the string commands). For a list of categories check the &lt;a href=&quot;acl-cat&quot;&gt;ACL CAT&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae54e4c2c501f18d293664a0d015906848ed315b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-&amp;lt;command&amp;gt;&lt;/code&gt;. Like &lt;code&gt;+&amp;lt;command&amp;gt;&lt;/code&gt; but removes the command instead of adding it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68b30ed3ef6cc225df5d9dc21b287aea4db630d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-&lt;/code&gt; and &lt;code&gt;+&lt;/code&gt; special IDs</source>
          <target state="translated">&lt;code&gt;-&lt;/code&gt; 和 &lt;code&gt;+&lt;/code&gt; 特殊ID</target>
        </trans-unit>
        <trans-unit id="6cdf57a670cfc51e7d6fc718c299a405669305d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-@&amp;lt;category&amp;gt;&lt;/code&gt;: Like &lt;code&gt;+@&amp;lt;category&amp;gt;&lt;/code&gt; but removes all the commands in the category instead of adding them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c68c96a64ce023b34b6c30c041efc57221fd313" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; if &lt;code&gt;field&lt;/code&gt; already exists in the hash and no operation was performed.</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; 如果哈希中已经存在该 &lt;code&gt;field&lt;/code&gt; 且未执行任何操作，则为0。</target>
        </trans-unit>
        <trans-unit id="3191f65635efa576cd2bc89fae56e4d1efec7123" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; if &lt;code&gt;field&lt;/code&gt; already exists in the hash and the value was updated.</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; 如果该 &lt;code&gt;field&lt;/code&gt; 已经存在于哈希中并且值已更新，则为0。</target>
        </trans-unit>
        <trans-unit id="f60d54a05f28427b7c458dfeea13aed8c56289b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; if &lt;code&gt;key&lt;/code&gt; does not exist or does not have an associated timeout.</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; 如果 &lt;code&gt;key&lt;/code&gt; 不存在或没有关联的超时，则为0。</target>
        </trans-unit>
        <trans-unit id="0e90c08d49825baab6c37e159792566e7fe213b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; if &lt;code&gt;key&lt;/code&gt; does not exist.</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; 如果 &lt;code&gt;key&lt;/code&gt; 不存在，则为0。</target>
        </trans-unit>
        <trans-unit id="725cc7114dc7226e3481e48740555b2efda8bbe2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; if &lt;code&gt;key&lt;/code&gt; was not moved.</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; 如果 &lt;code&gt;key&lt;/code&gt; 未移动，则为0。</target>
        </trans-unit>
        <trans-unit id="d6992634edf02774fe46f2df3da515a7dcb33bc9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; if &lt;code&gt;newkey&lt;/code&gt; already exists.</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; 如果 &lt;code&gt;newkey&lt;/code&gt; 已经存在，则为0。</target>
        </trans-unit>
        <trans-unit id="07c9d718cdc5414bdeb8cbdf03823f20945c303a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; if &lt;code&gt;source&lt;/code&gt; was not copied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14262ac0700869ff357af1a9263d20742a687fd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; if no key was set (at least one key already existed).</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; 如果未设置任何键（至少一个键已经存在），则为0。</target>
        </trans-unit>
        <trans-unit id="2eca0d1ae191d0b5c68da8c00a9a39343593d08c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; if the client wasn't unblocked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2861cd3b06dcac8af5ba597b6aaf182b6746c07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; if the element is not a member of &lt;code&gt;source&lt;/code&gt; and no operation was performed.</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; 如果元素不是 &lt;code&gt;source&lt;/code&gt; 成员并且未执行任何操作，则为0。</target>
        </trans-unit>
        <trans-unit id="501932831346881f94c70b73cf0328c70169646f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; if the element is not a member of the set, or if &lt;code&gt;key&lt;/code&gt; does not exist.</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; 如果元素不是该组的成员，或者如果 &lt;code&gt;key&lt;/code&gt; 不存在。</target>
        </trans-unit>
        <trans-unit id="6407eb5e9c5935f4ed492dcb89e94f023ccdf9ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; if the hash does not contain &lt;code&gt;field&lt;/code&gt;, or &lt;code&gt;key&lt;/code&gt; does not exist.</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; 如果散列不包含 &lt;code&gt;field&lt;/code&gt; 或 &lt;code&gt;key&lt;/code&gt; 不存在，则为0。</target>
        </trans-unit>
        <trans-unit id="a38cf5b0f740f8566febdf0cbf54b8a6348e5ee7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; if the key does not exist.</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; 如果密钥不存在，则为0。</target>
        </trans-unit>
        <trans-unit id="4d32094a29f0ac2ad9de4aac6bfd6bb719d8b12a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; if the key was not set</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; 如果未设置密钥，则为0</target>
        </trans-unit>
        <trans-unit id="9112bae35f4e833d9c58ae1e088d7112f88532b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; if &lt;code&gt;field&lt;/code&gt; is a new field in the hash and &lt;code&gt;value&lt;/code&gt; was set.</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; 如果 &lt;code&gt;field&lt;/code&gt; 在哈希和一个新的字段 &lt;code&gt;value&lt;/code&gt; 被设置。</target>
        </trans-unit>
        <trans-unit id="ad304a107eee2d23e48e6c8d1661cf1988b486aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; if &lt;code&gt;key&lt;/code&gt; was moved.</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; 如果 &lt;code&gt;key&lt;/code&gt; 已移动，则为1。</target>
        </trans-unit>
        <trans-unit id="ddcb872ed9ff94749e13ac136d245a411771aa0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; if &lt;code&gt;key&lt;/code&gt; was renamed to &lt;code&gt;newkey&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; 如果将 &lt;code&gt;key&lt;/code&gt; 重命名为 &lt;code&gt;newkey&lt;/code&gt; ,则为1。</target>
        </trans-unit>
        <trans-unit id="ef10e3a8edd7061c899c9b9392d8d243fe7bb7bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; if &lt;code&gt;source&lt;/code&gt; was copied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="341d2d89bf2d4bfb6d516bebefd62ffd165f4ec3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; if the all the keys were set.</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; 如果所有键均已设置，则为1。</target>
        </trans-unit>
        <trans-unit id="f1b24187c3820176d0992932ec90c3699cbc27cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; if the client was unblocked successfully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcdd51deb57a70d0ba07630a412d7d995a6f5301" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; if the element is a member of the set.</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; 如果元素是集合的成员，则为1。</target>
        </trans-unit>
        <trans-unit id="8012d2a9e6de3d4f6aa995d8b0eb71b27ecab804" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; if the element is moved.</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; 如果元素已移动，则为1。</target>
        </trans-unit>
        <trans-unit id="0d1478b0e1e73b8b91c455906d3e90df5c5e2ca6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; if the hash contains &lt;code&gt;field&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; 如果哈希包含 &lt;code&gt;field&lt;/code&gt; ,则为1。</target>
        </trans-unit>
        <trans-unit id="4964a69975cd68bffbd62012c286e3806522a2a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; if the key exists.</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; 如果密钥存在，则为1。</target>
        </trans-unit>
        <trans-unit id="5ba5ae48b6694671ffa81ecdf4e1a12b5bc46b52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; if the key was set</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; 如果设置了键，则为1</target>
        </trans-unit>
        <trans-unit id="3506c8ce49c5ce58781eb39cc319b37e03f3f3b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; if the timeout was removed.</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; 如果超时已删除，则为1。</target>
        </trans-unit>
        <trans-unit id="39ccd17679d67dc4ecbd128f3c112d2bf236a020" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; if the timeout was set.</source>
          <target state="translated">&lt;code&gt;1&lt;/code&gt; 如果设置了超时，则为1。</target>
        </trans-unit>
        <trans-unit id="dbbf79b9bf3b6f87c5d713fb0e1055cb163dd947" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ASC&lt;/code&gt;: Sort returned items from the nearest to the farthest, relative to the center.</source>
          <target state="translated">&lt;code&gt;ASC&lt;/code&gt; ：相对于中心，从最近到最远对返回的项目进行排序。</target>
        </trans-unit>
        <trans-unit id="7ddc285586bf7c22ddf294a2870a01fa101bb68b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AUTH &amp;lt;username&amp;gt; &amp;lt;password&amp;gt;&lt;/code&gt;: directly authenticate the connection other than switching to the specified protocol. In this way there is no need to call &lt;a href=&quot;auth&quot;&gt;AUTH&lt;/a&gt; before &lt;a href=&quot;hello&quot;&gt;HELLO&lt;/a&gt; when setting up new connections. Note that the username can be set to &quot;default&quot; in order to authenticate against a server that does not use ACLs, but the simpler &lt;code&gt;requirepass&lt;/code&gt; mechanism of Redis before version 6.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5acb7c8b068cc49301cd33e4cd2d6d38317af659" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AUTH2&lt;/code&gt; -- Authenticate with the given username and password pair (Redis 6 or greater ACL auth style).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="699f4a1057411debdcb2f7f3d871232bdbab98ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BCAST&lt;/code&gt;: enable tracking in broadcasting mode. In this mode invalidation messages are reported for all the prefixes specified, regardless of the keys requested by the connection. Instead when the broadcasting mode is not enabled, Redis will track which keys are fetched using read-only commands, and will report invalidation messages only for such keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb836fd89c30980649b496a65a6cd12d77d066b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BLPOP&lt;/code&gt; inside a &lt;code&gt;MULTI&lt;/code&gt; / &lt;code&gt;EXEC&lt;/code&gt; transaction</source>
          <target state="translated">&lt;code&gt;BLPOP&lt;/code&gt; 一个内部 &lt;code&gt;MULTI&lt;/code&gt; / &lt;code&gt;EXEC&lt;/code&gt; 事务</target>
        </trans-unit>
        <trans-unit id="8260b4add06d1395315a310037f5329fadd6c1b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BYBOX&lt;/code&gt;: Search inside an axis-aligned rectangle, determined by &lt;code&gt;&amp;lt;height&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;width&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d65c7083e1c9bc6e58d2a82145fa36d7711ea76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BYRADIUS&lt;/code&gt;: Similar to &lt;a href=&quot;georadius&quot;&gt;GEORADIUS&lt;/a&gt;, search inside circular area according to given &lt;code&gt;&amp;lt;radius&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5f1a178f5cdd8cdf5152e93b36fdb7a83b660dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CLIENT KILL ADDR ip:port&lt;/code&gt;. This is exactly the same as the old three-arguments behavior.</source>
          <target state="translated">&lt;code&gt;CLIENT KILL ADDR ip:port&lt;/code&gt; 。这与旧的三参数行为完全相同。</target>
        </trans-unit>
        <trans-unit id="602320634fef925cb5009f27adc89c96fad31e12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CLIENT KILL ID client-id&lt;/code&gt;. Allows to kill a client by its unique &lt;code&gt;ID&lt;/code&gt; field, which was introduced in the &lt;a href=&quot;client-list&quot;&gt;CLIENT LIST&lt;/a&gt; command starting from Redis 2.8.12.</source>
          <target state="translated">&lt;code&gt;CLIENT KILL ID client-id&lt;/code&gt; 。允许通过其唯一 &lt;code&gt;ID&lt;/code&gt; 字段杀死客户端，该客户端ID从Redis 2.8.12开始在&lt;a href=&quot;client-list&quot;&gt;CLIENT LIST&lt;/a&gt;命令中引入。</target>
        </trans-unit>
        <trans-unit id="b8189d2f913ff843bb80f1a51af5338f680cff38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CLIENT KILL ID client-id&lt;/code&gt;. Allows to kill a client by its unique &lt;code&gt;ID&lt;/code&gt; field. Client &lt;code&gt;ID&lt;/code&gt;'s are retrieved using the &lt;a href=&quot;client-list&quot;&gt;CLIENT LIST&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdc9d941fea7fd1dcb5cca5e4eb05de354a9aa09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CLIENT KILL LADDR ip:port&lt;/code&gt;. Kill all clients connected to specified local (bind) address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55aa9e9d040d810292c5cbe0fb9ec86006c8c89e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CLIENT KILL SKIPME yes/no&lt;/code&gt;. By default this option is set to &lt;code&gt;yes&lt;/code&gt;, that is, the client calling the command will not get killed, however setting this option to &lt;code&gt;no&lt;/code&gt; will have the effect of also killing the client calling the command.</source>
          <target state="translated">&lt;code&gt;CLIENT KILL SKIPME yes/no&lt;/code&gt; 。默认情况下，此选项设置为 &lt;code&gt;yes&lt;/code&gt; ，也就是说，调用该命令的客户端不会被杀死，但是将此选项设置为 &lt;code&gt;no&lt;/code&gt; 将会同时杀死调用该命令的客户端。</target>
        </trans-unit>
        <trans-unit id="badcef26ac69c8575bee09d042bb365553b77d45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CLIENT KILL TYPE type&lt;/code&gt;, where &lt;em&gt;type&lt;/em&gt; is one of &lt;code&gt;normal&lt;/code&gt;, &lt;code&gt;master&lt;/code&gt;, &lt;code&gt;replica&lt;/code&gt; and &lt;code&gt;pubsub&lt;/code&gt;. This closes the connections of &lt;strong&gt;all the clients&lt;/strong&gt; in the specified class. Note that clients blocked into the &lt;a href=&quot;monitor&quot;&gt;MONITOR&lt;/a&gt; command are considered to belong to the &lt;code&gt;normal&lt;/code&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11752fd7703f3053fd849cf8479195d68449607c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CLIENT KILL TYPE type&lt;/code&gt;, where &lt;em&gt;type&lt;/em&gt; is one of &lt;code&gt;normal&lt;/code&gt;, &lt;code&gt;master&lt;/code&gt;, &lt;code&gt;slave&lt;/code&gt; and &lt;code&gt;pubsub&lt;/code&gt; (the &lt;code&gt;master&lt;/code&gt; type is available from v3.2). This closes the connections of &lt;strong&gt;all the clients&lt;/strong&gt; in the specified class. Note that clients blocked into the &lt;a href=&quot;monitor&quot;&gt;MONITOR&lt;/a&gt; command are considered to belong to the &lt;code&gt;normal&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;CLIENT KILL TYPE type&lt;/code&gt; ，其中&lt;em&gt;type&lt;/em&gt;是 &lt;code&gt;normal&lt;/code&gt; ， &lt;code&gt;master&lt;/code&gt; ， &lt;code&gt;slave&lt;/code&gt; 和 &lt;code&gt;pubsub&lt;/code&gt; 之一（从v3.2起可以使用 &lt;code&gt;master&lt;/code&gt; 类型）。这将关闭指定类中&lt;strong&gt;所有客户端&lt;/strong&gt;的连接。请注意，被阻塞在&lt;a href=&quot;monitor&quot;&gt;MONITOR&lt;/a&gt;命令中的客户端被认为属于 &lt;code&gt;normal&lt;/code&gt; 类。</target>
        </trans-unit>
        <trans-unit id="3e64a9e04cb696d74aa291a8da3de8594229ab57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CLIENT KILL USER username&lt;/code&gt;. Closes all the connections that are authenticated with the specified &lt;a href=&quot;https://redis.io/topics/acl&quot;&gt;ACL&lt;/a&gt; username, however it returns an error if the username does not map to an existing ACL user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fef0710bd872cf9a625ed7b0d01b954d4f4b4278" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;COPY&lt;/code&gt; -- Do not remove the key from the local instance.</source>
          <target state="translated">&lt;code&gt;COPY&lt;/code&gt; -不要从本地实例中删除密钥。</target>
        </trans-unit>
        <trans-unit id="828b06065edba3099f79eed73ccd5e091eb0282f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;COPY&lt;/code&gt; and &lt;code&gt;REPLACE&lt;/code&gt; are available only in 3.0 and above. &lt;a href=&quot;keys&quot;&gt;KEYS&lt;/a&gt; is available starting with Redis 3.0.6.</source>
          <target state="translated">&lt;code&gt;COPY&lt;/code&gt; 和 &lt;code&gt;REPLACE&lt;/code&gt; 仅在3.0及更高版本中可用。从Redis 3.0.6开始可以使用&lt;a href=&quot;keys&quot;&gt;KEYS&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4f62ca2831b2ba2e4a09d54fcced7c7ad2005546" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DESC&lt;/code&gt;: Sort returned items from the farthest to the nearest, relative to the center.</source>
          <target state="translated">&lt;code&gt;DESC&lt;/code&gt; ：相对于中心，从最远到最近对返回的项目进行排序。</target>
        </trans-unit>
        <trans-unit id="2d6218812bbcf1c765cc87c431fb22bb0bce1f6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EX&lt;/code&gt;&lt;em&gt;seconds&lt;/em&gt; -- Set the specified expire time, in seconds.</source>
          <target state="translated">&lt;code&gt;EX&lt;/code&gt; &lt;em&gt;seconds-&lt;/em&gt;设置指定的终止时间，以秒为单位。</target>
        </trans-unit>
        <trans-unit id="b3d494972651313811f4ea2e6bc9a01e6a48e42f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FLUSHALL ASYNC&lt;/code&gt; (Redis 4.0.0 or greater)</source>
          <target state="translated">&lt;code&gt;FLUSHALL ASYNC&lt;/code&gt; （Redis 4.0.0或更高版本）</target>
        </trans-unit>
        <trans-unit id="399e38e4824210c8cdff06a324d4018a9eecea21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FLUSHDB ASYNC&lt;/code&gt; (Redis 4.0.0 or greater)</source>
          <target state="translated">&lt;code&gt;FLUSHDB ASYNC&lt;/code&gt; （Redis 4.0.0或更高版本）</target>
        </trans-unit>
        <trans-unit id="f9d2f7dec2da389f490ae42cc555c3ae4e347930" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FORCE&lt;/code&gt;: Creates the pending message entry in the PEL even if certain specified IDs are not already in the PEL assigned to a different client. However the message must be exist in the stream, otherwise the IDs of non existing messages are ignored.</source>
          <target state="translated">&lt;code&gt;FORCE&lt;/code&gt; ：即使某些指定的ID在分配给其他客户端的PEL中还没有在PEL中创建挂起的消息条目。但是，消息必须在流中存在，否则将忽略不存在的消息的ID。</target>
        </trans-unit>
        <trans-unit id="2e23863487a6f1e1378cb2786068b97f8360c522" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FROMLONLAT&lt;/code&gt;: Use the given &lt;code&gt;&amp;lt;longitude&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;latitude&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0baa22a11a03f50b1ca5c9a732209609aba63e36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FROMMEMBER&lt;/code&gt;: Use the position of the given existing &lt;code&gt;&amp;lt;member&amp;gt;&lt;/code&gt; in the sorted set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fef98736f61e1a786364eb654ce1fb11f47f4232" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IDLE &amp;lt;ms&amp;gt;&lt;/code&gt;: Set the idle time (last time it was delivered) of the message. If IDLE is not specified, an IDLE of 0 is assumed, that is, the time count is reset because the message has now a new owner trying to process it.</source>
          <target state="translated">&lt;code&gt;IDLE &amp;lt;ms&amp;gt;&lt;/code&gt; ：设置消息的空闲时间（上次发送时间）。如果未指定IDLE，则将IDLE假定为0，即重置时间计数，因为该消息现在有新的所有者尝试对其进行处理。</target>
        </trans-unit>
        <trans-unit id="f02fe3441db92a399bf47bc889f6610d203389df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IMPORTING&lt;/code&gt; subcommand: Set a hash slot in &lt;em&gt;importing&lt;/em&gt; state.</source>
          <target state="translated">&lt;code&gt;IMPORTING&lt;/code&gt; 子命令：将哈希槽设置为&lt;em&gt;导入&lt;/em&gt;状态。</target>
        </trans-unit>
        <trans-unit id="2e12dd8507767dd78f37c7b15b7c53df7e1f55fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JUSTID&lt;/code&gt;: Return just an array of IDs of messages successfully claimed, without returning the actual message.</source>
          <target state="translated">&lt;code&gt;JUSTID&lt;/code&gt; ：仅返回成功声明的消息ID的数组，而不返回实际消息。</target>
        </trans-unit>
        <trans-unit id="a620f0dc88712199e17b250a803b97a96125f1da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JUSTID&lt;/code&gt;: Return just an array of IDs of messages successfully claimed, without returning the actual message. Using this option means the retry counter is not incremented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="703497b810844d3d5410af3e2c8faf26cae512df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KEEPTTL&lt;/code&gt; -- Retain the time to live associated with the key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5417b35857fc0642ff95207d9855306db80441f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MIGRATING&lt;/code&gt; subcommand: Set a hash slot in &lt;em&gt;migrating&lt;/em&gt; state.</source>
          <target state="translated">&lt;code&gt;MIGRATING&lt;/code&gt; 子命令：将哈希槽设置为&lt;em&gt;迁移&lt;/em&gt;状态。</target>
        </trans-unit>
        <trans-unit id="70764755b0a2c7ba46c7bf3843b05fe37082a3f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NO&lt;/code&gt;. Disables scripts debug mode.</source>
          <target state="translated">&lt;code&gt;NO&lt;/code&gt; 。禁用脚本调试模式。</target>
        </trans-unit>
        <trans-unit id="514412efa136bf26067924d8e9e64aeaa793f898" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NODE&lt;/code&gt; subcommand: Bind the hash slot to a different node.</source>
          <target state="translated">&lt;code&gt;NODE&lt;/code&gt; 子命令：将哈希槽绑定到其他节点。</target>
        </trans-unit>
        <trans-unit id="22139c723dca8a13892a3a0499960532b97c2112" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NOLOOP&lt;/code&gt;: don't send notifications about keys modified by this connection itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd0e3ba7650821204046fdf9c4755dd7ba904ffc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NX&lt;/code&gt; -- Only set the key if it does not already exist.</source>
          <target state="translated">&lt;code&gt;NX&lt;/code&gt; -仅在不存在的情况下设置密钥。</target>
        </trans-unit>
        <trans-unit id="99882af89cf8e3e05714f50d2c0743b952d2d3c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OBJECT ENCODING &amp;lt;key&amp;gt;&lt;/code&gt; returns the kind of internal representation used in order to store the value associated with a key.</source>
          <target state="translated">&lt;code&gt;OBJECT ENCODING &amp;lt;key&amp;gt;&lt;/code&gt; 返回用于存储与键关联的值的内部表示类型。</target>
        </trans-unit>
        <trans-unit id="ed8a8556a6d1374927ff1ce94213046f672ffd9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OBJECT FREQ &amp;lt;key&amp;gt;&lt;/code&gt; returns the logarithmic access frequency counter of the object stored at the specified key. This subcommand is available when &lt;code&gt;maxmemory-policy&lt;/code&gt; is set to an LFU policy.</source>
          <target state="translated">&lt;code&gt;OBJECT FREQ &amp;lt;key&amp;gt;&lt;/code&gt; 返回存储在指定键处的对象的对数访问频率计数器。当 &lt;code&gt;maxmemory-policy&lt;/code&gt; 设置为LFU策略时，此子命令可用。</target>
        </trans-unit>
        <trans-unit id="b6c92d5715cc621ca2953155b63f6d1040b3820c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OBJECT HELP&lt;/code&gt; returns a succinct help text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3480c780052d6d5327144f1f0dc8cf03ca4c9a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OBJECT HELP&lt;/code&gt; returns a succint help text.</source>
          <target state="translated">&lt;code&gt;OBJECT HELP&lt;/code&gt; 返回简要的帮助文本。</target>
        </trans-unit>
        <trans-unit id="2ebd6183929f50ff80b9af0e280a3646321f3699" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OBJECT IDLETIME &amp;lt;key&amp;gt;&lt;/code&gt; returns the number of seconds since the object stored at the specified key is idle (not requested by read or write operations). While the value is returned in seconds the actual resolution of this timer is 10 seconds, but may vary in future implementations. This subcommand is available when &lt;code&gt;maxmemory-policy&lt;/code&gt; is set to an LRU policy or &lt;code&gt;noeviction&lt;/code&gt; and &lt;code&gt;maxmemory&lt;/code&gt; is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="888f9bddf5ef83f498988c713f090f957d312a9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OBJECT IDLETIME &amp;lt;key&amp;gt;&lt;/code&gt; returns the number of seconds since the object stored at the specified key is idle (not requested by read or write operations). While the value is returned in seconds the actual resolution of this timer is 10 seconds, but may vary in future implementations. This subcommand is available when &lt;code&gt;maxmemory-policy&lt;/code&gt; is set to an LRU policy or &lt;code&gt;noeviction&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;OBJECT IDLETIME &amp;lt;key&amp;gt;&lt;/code&gt; 返回自存储在指定键处的对象处于空闲状态以来的秒数（读取或写入操作不请求）。虽然以秒为单位返回该值，但此计时器的实际分辨率为10秒，但在将来的实现中可能会有所不同。当 &lt;code&gt;maxmemory-policy&lt;/code&gt; 设置为LRU策略或 &lt;code&gt;noeviction&lt;/code&gt; 时，此子命令可用。</target>
        </trans-unit>
        <trans-unit id="cc2fb84c1222faa39f7ea74dcd933f7cc2ace4ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OBJECT REFCOUNT &amp;lt;key&amp;gt;&lt;/code&gt; returns the number of references of the value associated with the specified key. This command is mainly useful for debugging.</source>
          <target state="translated">&lt;code&gt;OBJECT REFCOUNT &amp;lt;key&amp;gt;&lt;/code&gt; 返回与指定键关联的值的引用数。该命令主要用于调试。</target>
        </trans-unit>
        <trans-unit id="a2453b4fb0091e83c1695ab282efa77025e36e17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OFF&lt;/code&gt;. In this mode the server will not reply to client commands.</source>
          <target state="translated">&lt;code&gt;OFF&lt;/code&gt; 。在这种模式下，服务器将不回复客户端命令。</target>
        </trans-unit>
        <trans-unit id="ee0e7c54a09f4affa491d8d7021f3854e2d54006" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ON&lt;/code&gt;. This is the default mode in which the server returns a reply to every command.</source>
          <target state="translated">&lt;code&gt;ON&lt;/code&gt; 。这是服务器返回对每个命令的答复的默认模式。</target>
        </trans-unit>
        <trans-unit id="93d22bb36d8682b6c2e087826455c7270214d890" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OPTIN&lt;/code&gt;: when broadcasting is NOT active, normally don't track keys in read only commands, unless they are called immediately after a &lt;code&gt;CLIENT CACHING yes&lt;/code&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe9812bf6fc63dca07899dad7daac170c6a78e22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OPTOUT&lt;/code&gt;: when broadcasting is NOT active, normally track keys in read only commands, unless they are called immediately after a &lt;code&gt;CLIENT CACHING no&lt;/code&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dbbf2c08733248217445e964a4b0ceae7718aae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PREFIX &amp;lt;prefix&amp;gt;&lt;/code&gt;: for broadcasting, register a given key prefix, so that notifications will be provided only for keys starting with this string. This option can be given multiple times to register multiple prefixes. If broadcasting is enabled without this option, Redis will send notifications for every key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6629a2a7ab460a79b8e2163eeb985a87da0ddcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PX&lt;/code&gt;&lt;em&gt;milliseconds&lt;/em&gt; -- Set the specified expire time, in milliseconds.</source>
          <target state="translated">&lt;code&gt;PX&lt;/code&gt; &lt;em&gt;毫秒&lt;/em&gt; -设置指定的到期时间（以毫秒为单位）。</target>
        </trans-unit>
        <trans-unit id="f0c43ea2a6c896f466d45f24e414d0e99761206b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REDIRECT &amp;lt;id&amp;gt;&lt;/code&gt;: send redirection messages to the connection with the specified ID. The connection must exist, you can get the ID of such connection using &lt;a href=&quot;client-id&quot;&gt;CLIENT ID&lt;/a&gt;. If the connection we are redirecting to is terminated, when in RESP3 mode the connection with tracking enabled will receive &lt;code&gt;tracking-redir-broken&lt;/code&gt; push messages in order to signal the condition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80297e99327c2c150c0093cfc256780a8b53c387" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REPLACE&lt;/code&gt; -- Replace existing key on the remote instance.</source>
          <target state="translated">&lt;code&gt;REPLACE&lt;/code&gt; -替换远程实例上的现有密钥。</target>
        </trans-unit>
        <trans-unit id="cc6115b3d47b177464bb118184086a7cc3fac61b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RETRYCOUNT &amp;lt;count&amp;gt;&lt;/code&gt;: Set the retry counter to the specified value. This counter is incremented every time a message is delivered again. Normally &lt;a href=&quot;xclaim&quot;&gt;XCLAIM&lt;/a&gt; does not alter this counter, which is just served to clients when the XPENDING command is called: this way clients can detect anomalies, like messages that are never processed for some reason after a big number of delivery attempts.</source>
          <target state="translated">&lt;code&gt;RETRYCOUNT &amp;lt;count&amp;gt;&lt;/code&gt; ：将重试计数器设置为指定值。每次再次传递消息时，此计数器都会增加。通常，&lt;a href=&quot;xclaim&quot;&gt;XCLAIM&lt;/a&gt;不会更改此计数器，该计数器仅在调用XPENDING命令时才提供给客户端：这样，客户端可以检测异常，例如在进行大量传递尝试后由于某些原因而从未处理过的消息。</target>
        </trans-unit>
        <trans-unit id="13ea1d19798d3a862a8b4db4f5e7da4813672d6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SETNAME &amp;lt;clientname&amp;gt;&lt;/code&gt;: this is equivalent to also call &lt;a href=&quot;client-setname&quot;&gt;CLIENT SETNAME&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ffbe13e1233b7e9c1174988bffadee0a3b98857" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SKIP&lt;/code&gt;. This mode skips the reply of command immediately after it.</source>
          <target state="translated">&lt;code&gt;SKIP&lt;/code&gt; 。此模式在其后立即跳过命令的答复。</target>
        </trans-unit>
        <trans-unit id="f1ff247a0db526f7a11f6f1afcd40dcb67292ccf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;STABLE&lt;/code&gt; subcommand: Clear any importing / migrating state from hash slot.</source>
          <target state="translated">&lt;code&gt;STABLE&lt;/code&gt; 子命令：清除哈希槽中的所有导入/迁移状态。</target>
        </trans-unit>
        <trans-unit id="22c4aa93098e2f4e9012509dce54747bfaf40373" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;STORE&lt;/code&gt;: Store the items in a sorted set populated with their geospatial information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dd2a610ee73ee9b633d0ee8607cd95468e5e519" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;STOREDIST&lt;/code&gt;: Store the items in a sorted set populated with their distance from the center as a floating point number, in the same unit specified in the radius.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3368cd450f9f6cc2baea198c405095f6d0a009a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TIME &amp;lt;ms-unix-time&amp;gt;&lt;/code&gt;: This is the same as IDLE but instead of a relative amount of milliseconds, it sets the idle time to a specific Unix time (in milliseconds). This is useful in order to rewrite the AOF file generating &lt;a href=&quot;xclaim&quot;&gt;XCLAIM&lt;/a&gt; commands.</source>
          <target state="translated">&lt;code&gt;TIME &amp;lt;ms-unix-time&amp;gt;&lt;/code&gt; ：与IDLE相同，但不是将毫秒作为相对时间，而是将空闲时间设置为特定的Unix时间（以毫秒为单位）。这对于重写生成&lt;a href=&quot;xclaim&quot;&gt;XCLAIM&lt;/a&gt;命令的AOF文件很有用。</target>
        </trans-unit>
        <trans-unit id="02d0547e91cdcd2f25342f4d6bb7cf4157a2111c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WITHCOORD&lt;/code&gt;: Also return the longitude and latitude of the matching items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f68fc34e1d6f2a26a1a2c15ca15742080415f576" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WITHCOORD&lt;/code&gt;: Also return the longitude,latitude coordinates of the matching items.</source>
          <target state="translated">&lt;code&gt;WITHCOORD&lt;/code&gt; ：还返回匹配项的经度，纬度坐标。</target>
        </trans-unit>
        <trans-unit id="f946903450488324f8831b407ef63f52beb38d66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WITHDIST&lt;/code&gt;: Also return the distance of the returned items from the specified center. The distance is returned in the same unit as specified for the radius or height and width arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72e1da1bf7742af54c060cdc9d133362fecb89c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WITHDIST&lt;/code&gt;: Also return the distance of the returned items from the specified center. The distance is returned in the same unit as the unit specified as the radius argument of the command.</source>
          <target state="translated">&lt;code&gt;WITHDIST&lt;/code&gt; ：还返回返回的项目到指定中心的距离。距离以与指定为命令的radius参数的单位相同的单位返回。</target>
        </trans-unit>
        <trans-unit id="33ca4bb6415c9fb0f6b1095fd636200907df4c73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WITHHASH&lt;/code&gt;: Also return the raw geohash-encoded sorted set score of the item, in the form of a 52 bit unsigned integer. This is only useful for low level hacks or debugging and is otherwise of little interest for the general user.</source>
          <target state="translated">&lt;code&gt;WITHHASH&lt;/code&gt; ：还以52位无符号整数的形式返回该项目的原始经过地理哈希编码的排序集得分。这仅对低级黑客或调试有用，否则对普通用户几乎没有兴趣。</target>
        </trans-unit>
        <trans-unit id="a83721d6bd94ce6aaf576b5f05c13b2637597325" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;XX&lt;/code&gt; -- Only set the key if it already exist.</source>
          <target state="translated">&lt;code&gt;XX&lt;/code&gt; -仅设置密钥（如果已存在）。</target>
        </trans-unit>
        <trans-unit id="e079471709a901605c3eb58f108833d504b6b11e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;YES&lt;/code&gt;. Enable non-blocking asynchronous debugging of Lua scripts (changes are discarded).</source>
          <target state="translated">&lt;code&gt;YES&lt;/code&gt; 。启用Lua脚本的非阻塞异步调试（更改将被丢弃）。</target>
        </trans-unit>
        <trans-unit id="a22f353861e10e014106fd90471171473f27d38b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;active_defrag_hits&lt;/code&gt;: Number of value reallocations performed by active the defragmentation process</source>
          <target state="translated">&lt;code&gt;active_defrag_hits&lt;/code&gt; ：活动碎片整理过程执行的值重新分配的数量</target>
        </trans-unit>
        <trans-unit id="7fdfcb3c13a7acba7f324056f0c4b7810d7f027b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;active_defrag_key_hits&lt;/code&gt;: Number of keys that were actively defragmented</source>
          <target state="translated">&lt;code&gt;active_defrag_key_hits&lt;/code&gt; ：主动进行碎片整理的密钥数</target>
        </trans-unit>
        <trans-unit id="f86b40e0f88f935634beee0a4d5b5a33fef34db9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;active_defrag_key_misses&lt;/code&gt;: Number of keys that were skipped by the active defragmentation process</source>
          <target state="translated">&lt;code&gt;active_defrag_key_misses&lt;/code&gt; ：活动的碎片整理过程跳过的键数</target>
        </trans-unit>
        <trans-unit id="10ba93594ceb8bd562cba3fffdd70835558dc8af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;active_defrag_misses&lt;/code&gt;: Number of aborted value reallocations started by the active defragmentation process</source>
          <target state="translated">&lt;code&gt;active_defrag_misses&lt;/code&gt; ：由活动碎片整理过程启动的中止值重新分配的数量</target>
        </trans-unit>
        <trans-unit id="4f522f6f70a7ce761d1960901b0078ee984f4d7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;active_defrag_running&lt;/code&gt;: Flag indicating if active defragmentation is active</source>
          <target state="translated">&lt;code&gt;active_defrag_running&lt;/code&gt; ：该标志指示活动碎片整理是否处于活动状态</target>
        </trans-unit>
        <trans-unit id="32a776559f2ca409db7316c86f8021c0bd6163b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;addr&lt;/code&gt;: address/port of the client</source>
          <target state="translated">&lt;code&gt;addr&lt;/code&gt; ：客户端的地址/端口</target>
        </trans-unit>
        <trans-unit id="0b418934c029a0535c7714965414f4d0cd7d9794" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;age&lt;/code&gt;: total duration of the connection in seconds</source>
          <target state="translated">&lt;code&gt;age&lt;/code&gt; ：连接的总持续时间（以秒为单位）</target>
        </trans-unit>
        <trans-unit id="cd018df00bb4d052d465c766526aefcac8623f09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;all&lt;/code&gt;: Return all sections</source>
          <target state="translated">&lt;code&gt;all&lt;/code&gt; ：返回所有部分</target>
        </trans-unit>
        <trans-unit id="aa9ab796500ad0d3b0ba45503930390c147335b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;all&lt;/code&gt;: Return all sections (excluding module generated ones)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c90da4abd839ecb47d97be4f5c0afab42b83242" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allchannels&lt;/code&gt;: alias for &lt;code&gt;&amp;amp;*&lt;/code&gt;, it allows the user to access all Pub/Sub channels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f6fd3b59ba484d4661d5ed4441f5e33e41f5630" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allcommands&lt;/code&gt;: alias of &lt;code&gt;+@all&lt;/code&gt;. Adds all the commands there are in the server, including &lt;em&gt;future commands&lt;/em&gt; loaded via module, to be executed by this user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3ec1b8e0e3dadefc8c35aa0424a28712bf48508" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allkeys&lt;/code&gt;: alias for &lt;code&gt;~*&lt;/code&gt;, it allows the user to access all the keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edddb993a22213f8ae5d530d19608128b3d90819" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aof.buffer&lt;/code&gt;: The summed size in bytes of the current and rewrite AOF buffers (see &lt;a href=&quot;info&quot;&gt;INFO&lt;/a&gt;'s &lt;code&gt;aof_buffer_length&lt;/code&gt; and &lt;code&gt;aof_rewrite_buffer_length&lt;/code&gt;, respectively)</source>
          <target state="translated">&lt;code&gt;aof.buffer&lt;/code&gt; ：当前和重写的AOF缓冲区的总大小（以字节为单位）（分别参见&lt;a href=&quot;info&quot;&gt;INFO&lt;/a&gt;的 &lt;code&gt;aof_buffer_length&lt;/code&gt; 和 &lt;code&gt;aof_rewrite_buffer_length&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="1ff4db2d3af80e789a0995ce723660c4de7d6f05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aof_base_size&lt;/code&gt;: AOF file size on latest startup or rewrite</source>
          <target state="translated">&lt;code&gt;aof_base_size&lt;/code&gt; ：最近一次启动或重写时的AOF文件大小</target>
        </trans-unit>
        <trans-unit id="8632791e26fdcef3f4a9f344241b92f2afc74dd7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aof_buffer_length&lt;/code&gt;: Size of the AOF buffer</source>
          <target state="translated">&lt;code&gt;aof_buffer_length&lt;/code&gt; ：AOF缓冲区的大小</target>
        </trans-unit>
        <trans-unit id="97014e76a8ce9b991e26a3100de786bbc394c893" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aof_current_rewrite_time_sec&lt;/code&gt;: Duration of the on-going AOF rewrite operation if any</source>
          <target state="translated">&lt;code&gt;aof_current_rewrite_time_sec&lt;/code&gt; ：正在进行的AOF重写操作的持续时间（如果有）</target>
        </trans-unit>
        <trans-unit id="ac32c8b2ccb90d460c7b5861f1d179abec9ee8da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aof_current_size&lt;/code&gt;: AOF current file size</source>
          <target state="translated">&lt;code&gt;aof_current_size&lt;/code&gt; ：AOF当前文件大小</target>
        </trans-unit>
        <trans-unit id="021a62752235de2b7c632ebf2af7a48fa5178011" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aof_delayed_fsync&lt;/code&gt;: Delayed fsync counter</source>
          <target state="translated">&lt;code&gt;aof_delayed_fsync&lt;/code&gt; ：延迟的fsync计数器</target>
        </trans-unit>
        <trans-unit id="24fd6a9ea8f45fb36a9eeb7c56056061cbe44e14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aof_enabled&lt;/code&gt;: Flag indicating AOF logging is activated</source>
          <target state="translated">&lt;code&gt;aof_enabled&lt;/code&gt; ：标志指示AOF记录已激活</target>
        </trans-unit>
        <trans-unit id="1e6a012770c4c4c182917c7ed5289c5f531614fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aof_last_bgrewrite_status&lt;/code&gt;: Status of the last AOF rewrite operation</source>
          <target state="translated">&lt;code&gt;aof_last_bgrewrite_status&lt;/code&gt; ：上一次AOF重写操作的状态</target>
        </trans-unit>
        <trans-unit id="fb606e1eef2327d509f09e01f9add96e415822d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aof_last_cow_size&lt;/code&gt;: The size in bytes of copy-on-write allocations during the last AOF rewrite operation</source>
          <target state="translated">&lt;code&gt;aof_last_cow_size&lt;/code&gt; ：上一次AOF重写操作期间写时复制分配的大小（以字节为单位）</target>
        </trans-unit>
        <trans-unit id="a5d5e6a33c8ed12d83cca0b06fbee5244ee6ba41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aof_last_rewrite_time_sec&lt;/code&gt;: Duration of the last AOF rewrite operation in seconds</source>
          <target state="translated">&lt;code&gt;aof_last_rewrite_time_sec&lt;/code&gt; ：最后一次AOF重写操作的持续时间（以秒为单位）</target>
        </trans-unit>
        <trans-unit id="c1db165470a23cb6ec719da8932a40f4ea09ab81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aof_last_write_status&lt;/code&gt;: Status of the last write operation to the AOF</source>
          <target state="translated">&lt;code&gt;aof_last_write_status&lt;/code&gt; ：对AOF的最后写入操作的状态</target>
        </trans-unit>
        <trans-unit id="cba340ede5eb173bc4558c50d221e3ab3a1765c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aof_pending_bio_fsync&lt;/code&gt;: Number of fsync pending jobs in background I/O queue</source>
          <target state="translated">&lt;code&gt;aof_pending_bio_fsync&lt;/code&gt; ：后台I / O队列中的fsync挂起作业数</target>
        </trans-unit>
        <trans-unit id="49f338748e7ef39a92b2e18297472c8ebf2461ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aof_pending_rewrite&lt;/code&gt;: Flag indicating an AOF rewrite operation will be scheduled once the on-going RDB save is complete.</source>
          <target state="translated">&lt;code&gt;aof_pending_rewrite&lt;/code&gt; ：一旦正在进行的RDB保存完成，表明将调度AOF重写操作的标志。</target>
        </trans-unit>
        <trans-unit id="4b10e1836e92feeff66d3326e4c2d7f1bf8909b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aof_rewrite_buffer_length&lt;/code&gt;: Size of the AOF rewrite buffer</source>
          <target state="translated">&lt;code&gt;aof_rewrite_buffer_length&lt;/code&gt; ：AOF重写缓冲区的大小</target>
        </trans-unit>
        <trans-unit id="90ad968000b75b18f076c4d369ff364d5516d20d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aof_rewrite_in_progress&lt;/code&gt;: Flag indicating a AOF rewrite operation is on-going</source>
          <target state="translated">&lt;code&gt;aof_rewrite_in_progress&lt;/code&gt; ：标志指示正在进行AOF重写操作</target>
        </trans-unit>
        <trans-unit id="860eb37aa85d675719b691b7665a36bac01eb96f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aof_rewrite_scheduled&lt;/code&gt;: Flag indicating an AOF rewrite operation will be scheduled once the on-going RDB save is complete.</source>
          <target state="translated">&lt;code&gt;aof_rewrite_scheduled&lt;/code&gt; ：一旦正在进行的RDB保存完成，表明将调度AOF重写操作的标志。</target>
        </trans-unit>
        <trans-unit id="8b6b438717bec11dfc97f6d4213c363347e98d05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arch_bits&lt;/code&gt;: Architecture (32 or 64 bits)</source>
          <target state="translated">&lt;code&gt;arch_bits&lt;/code&gt; ：体系结构（32或64位）</target>
        </trans-unit>
        <trans-unit id="de61b3dd6c6c85f4d89184c6aceeac1115fe7e82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;argv-mem&lt;/code&gt;: incomplete arguments for the next command (already extracted from query buffer)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c55751797332d8d9b526a675ac4969063b50b6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;atomicvar_api&lt;/code&gt;: Atomicvar API used by Redis</source>
          <target state="translated">&lt;code&gt;atomicvar_api&lt;/code&gt; ：Redis使用的Atomicvar API</target>
        </trans-unit>
        <trans-unit id="b0f927aba00ccf6192ec1758a98f6c0004f29e02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;base&lt;/code&gt; lib.</source>
          <target state="translated">&lt;code&gt;base&lt;/code&gt; 库</target>
        </trans-unit>
        <trans-unit id="666a2695cf4298e987e3316285fbfcc244e56848" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bcast&lt;/code&gt;: The client uses broadcasting mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0921bad9f229a9389c2e38e52f6a7f7b765b5aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bitop&lt;/code&gt; lib.</source>
          <target state="translated">&lt;code&gt;bitop&lt;/code&gt; 库</target>
        </trans-unit>
        <trans-unit id="63296e3f0c1fbb23ccca811926c200a7dd0df548" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;blocked_clients&lt;/code&gt;: Number of clients pending on a blocking call (&lt;a href=&quot;blpop&quot;&gt;BLPOP&lt;/a&gt;, &lt;a href=&quot;brpop&quot;&gt;BRPOP&lt;/a&gt;, &lt;a href=&quot;brpoplpush&quot;&gt;BRPOPLPUSH&lt;/a&gt;, &lt;a href=&quot;blmove&quot;&gt;BLMOVE&lt;/a&gt;, &lt;a href=&quot;bzpopmin&quot;&gt;BZPOPMIN&lt;/a&gt;, &lt;a href=&quot;bzpopmax&quot;&gt;BZPOPMAX&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a1dd8d1355938beb39d0e1c2d0f73196261de7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;blocked_clients&lt;/code&gt;: Number of clients pending on a blocking call (BLPOP, BRPOP, BRPOPLPUSH)</source>
          <target state="translated">&lt;code&gt;blocked_clients&lt;/code&gt; ：阻塞呼叫中待处理的客户端数（BLPOP，BRPOP，BRPOPLPUSH）</target>
        </trans-unit>
        <trans-unit id="bcb07e2a295cc75aa5a4558a7b7dac249c9be34c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;broken_redirect&lt;/code&gt;: The client ID used for redirection isn't valid anymore.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0568e8e24ee465f3defc197d2909c4cd2a3fe3d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;caching-no&lt;/code&gt;: The next command won't cache keys (exists only together with &lt;code&gt;optout&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b75f04c9bf76d4288aa6e6868f6bdeb65e670518" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;caching-yes&lt;/code&gt;: The next command will cache keys (exists only together with &lt;code&gt;optin&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24c0bfc56b5937facd337558991cae6163c0423d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;changes_since_last_save&lt;/code&gt; refers to the number of operations that produced some kind of changes in the dataset since the last time either &lt;a href=&quot;save&quot;&gt;SAVE&lt;/a&gt; or &lt;a href=&quot;bgsave&quot;&gt;BGSAVE&lt;/a&gt; was called.</source>
          <target state="translated">&lt;code&gt;changes_since_last_save&lt;/code&gt; 是指自上次调用&lt;a href=&quot;save&quot;&gt;SAVE&lt;/a&gt;或&lt;a href=&quot;bgsave&quot;&gt;BGSAVE&lt;/a&gt;以来在数据集中产生某种更改的操作数。</target>
        </trans-unit>
        <trans-unit id="eaf245ee0eff16f73b8a1a316441d2b1ea91df09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cjson&lt;/code&gt; lib.</source>
          <target state="translated">&lt;code&gt;cjson&lt;/code&gt; 库。</target>
        </trans-unit>
        <trans-unit id="f9f056eda18d9bc00dbfc7310df95503a7425a2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;client_biggest_input_buf&lt;/code&gt;: Biggest input buffer among current client connections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2392a37aedbf270d6b854bc28fc404b287a29ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;client_biggest_input_buf&lt;/code&gt;: biggest input buffer among current client connections</source>
          <target state="translated">&lt;code&gt;client_biggest_input_buf&lt;/code&gt; ：当前客户端连接中最大的输入缓冲区</target>
        </trans-unit>
        <trans-unit id="f0665e8241ec2d142520c43c49fa010d1acc9c9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;client_longest_output_list&lt;/code&gt;: Longest output list among current client connections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fb7b84362378176af7de8594d03749190b46118" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;client_longest_output_list&lt;/code&gt;: longest output list among current client connections</source>
          <target state="translated">&lt;code&gt;client_longest_output_list&lt;/code&gt; ：当前客户端连接中最长的输出列表</target>
        </trans-unit>
        <trans-unit id="ee177459def1e80b39c47454b8c28a9d42a4106c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;clients.normal&lt;/code&gt;: The total size in bytes of all clients overheads (output and query buffers, connection contexts)</source>
          <target state="translated">&lt;code&gt;clients.normal&lt;/code&gt; ：所有客户端开销（输出和查询缓冲区，连接上下文）的总大小（以字节为单位）</target>
        </trans-unit>
        <trans-unit id="7500227d42c34ddbac3bf8fe32d560635e9a67a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;clients.slaves&lt;/code&gt;: The total size in bytes of all replicas overheads (output and query buffers, connection contexts)</source>
          <target state="translated">&lt;code&gt;clients.slaves&lt;/code&gt; ：所有副本开销（输出和查询缓冲区，连接上下文）的总大小（以字节为单位）</target>
        </trans-unit>
        <trans-unit id="fc0bb101210ccd0cc4d7b0798c1678cd18cb6bc1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;clients&lt;/code&gt;: Client connections section</source>
          <target state="translated">&lt;code&gt;clients&lt;/code&gt; ：客户连接部分</target>
        </trans-unit>
        <trans-unit id="7e7817b93be1b11027d13683fa34fc6efffb668d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;clients_in_timeout_table&lt;/code&gt;: Number of clients in the clients timeout table</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cb155c6866c785f784b7fdb3af57862475d4bb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cluster&lt;/code&gt;: Redis Cluster section</source>
          <target state="translated">&lt;code&gt;cluster&lt;/code&gt; ：&amp;ldquo; Redis群集&amp;rdquo;部分</target>
        </trans-unit>
        <trans-unit id="8378293297e29944fc372120efa594accf2315ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cluster_connections&lt;/code&gt;: An approximation of the number of sockets used by the cluster's bus</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d26c683ca3ca4ce60da0b69dd830079349a61d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cluster_current_epoch&lt;/code&gt;: The local &lt;code&gt;Current Epoch&lt;/code&gt; variable. This is used in order to create unique increasing version numbers during fail overs.</source>
          <target state="translated">&lt;code&gt;cluster_current_epoch&lt;/code&gt; ：本地 &lt;code&gt;Current Epoch&lt;/code&gt; 变量。这是为了在故障转移期间创建唯一的递增版本号。</target>
        </trans-unit>
        <trans-unit id="70851ccf8dd13c98bda748f4a9d9fbe7bd0bd627" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cluster_enabled&lt;/code&gt;: Indicate Redis cluster is enabled</source>
          <target state="translated">&lt;code&gt;cluster_enabled&lt;/code&gt; ：指示Redis集群已启用</target>
        </trans-unit>
        <trans-unit id="7c146d936ab811cc708f993ded474e0edc533322" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cluster_known_nodes&lt;/code&gt;: The total number of known nodes in the cluster, including nodes in &lt;code&gt;HANDSHAKE&lt;/code&gt; state that may not currently be proper members of the cluster.</source>
          <target state="translated">&lt;code&gt;cluster_known_nodes&lt;/code&gt; ：集群中已知节点的总数，包括处于 &lt;code&gt;HANDSHAKE&lt;/code&gt; 状态的节点，这些节点当前可能不是集群的适当成员。</target>
        </trans-unit>
        <trans-unit id="5874cd9f6f0e68dfeae4ccb58cfe7c53dd1c21ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cluster_my_epoch&lt;/code&gt;: The &lt;code&gt;Config Epoch&lt;/code&gt; of the node we are talking with. This is the current configuration version assigned to this node.</source>
          <target state="translated">&lt;code&gt;cluster_my_epoch&lt;/code&gt; ：正在与之通信的节点的 &lt;code&gt;Config Epoch&lt;/code&gt; 。这是分配给该节点的当前配置版本。</target>
        </trans-unit>
        <trans-unit id="52095d5a5d032e4fa63b850e6af56cbcfc64296f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cluster_size&lt;/code&gt;: The number of master nodes serving at least one hash slot in the cluster.</source>
          <target state="translated">&lt;code&gt;cluster_size&lt;/code&gt; ：为群集中至少一个哈希槽服务的主节点数。</target>
        </trans-unit>
        <trans-unit id="29695410813fb33d64aa2bf6c11ffbee6c1a2a97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cluster_slots_assigned&lt;/code&gt;: Number of slots which are associated to some node (not unbound). This number should be 16384 for the node to work properly, which means that each hash slot should be mapped to a node.</source>
          <target state="translated">&lt;code&gt;cluster_slots_assigned&lt;/code&gt; ：与某个节点关联的插槽数（不是未绑定）。为了使节点正常工作，此数字应为16384，这意味着每个哈希槽都应映射到一个节点。</target>
        </trans-unit>
        <trans-unit id="6d0d7b50bc4f71b67fdfc41ee1614343e3c04545" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cluster_slots_fail&lt;/code&gt;: Number of hash slots mapping to a node in &lt;code&gt;FAIL&lt;/code&gt; state. If this number is not zero the node is not able to serve queries unless &lt;code&gt;cluster-require-full-coverage&lt;/code&gt; is set to &lt;code&gt;no&lt;/code&gt; in the configuration.</source>
          <target state="translated">&lt;code&gt;cluster_slots_fail&lt;/code&gt; ：映射到处于 &lt;code&gt;FAIL&lt;/code&gt; 状态的节点的哈希槽数。如果该数字不为零，则除非配置中 &lt;code&gt;cluster-require-full-coverage&lt;/code&gt; 设置为 &lt;code&gt;no&lt;/code&gt; ，否则该节点将无法处理查询。</target>
        </trans-unit>
        <trans-unit id="15f48639dc5fdfa9a8fdcaacb4a0ed8c20c6a278" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cluster_slots_ok&lt;/code&gt;: Number of hash slots mapping to a node not in &lt;code&gt;FAIL&lt;/code&gt; or &lt;code&gt;PFAIL&lt;/code&gt; state.</source>
          <target state="translated">&lt;code&gt;cluster_slots_ok&lt;/code&gt; ：映射到未处于 &lt;code&gt;FAIL&lt;/code&gt; 或 &lt;code&gt;PFAIL&lt;/code&gt; 状态的节点的哈希槽数。</target>
        </trans-unit>
        <trans-unit id="544cc9f0a6d42991bcd32498d341a3f39d2598e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cluster_slots_pfail&lt;/code&gt;: Number of hash slots mapping to a node in &lt;code&gt;PFAIL&lt;/code&gt; state. Note that those hash slots still work correctly, as long as the &lt;code&gt;PFAIL&lt;/code&gt; state is not promoted to &lt;code&gt;FAIL&lt;/code&gt; by the failure detection algorithm. &lt;code&gt;PFAIL&lt;/code&gt; only means that we are currently not able to talk with the node, but may be just a transient error.</source>
          <target state="translated">&lt;code&gt;cluster_slots_pfail&lt;/code&gt; ：映射到处于 &lt;code&gt;PFAIL&lt;/code&gt; 状态的节点的哈希槽数。请注意，只要故障检测算法未将 &lt;code&gt;PFAIL&lt;/code&gt; 状态提升为 &lt;code&gt;FAIL&lt;/code&gt; ，这些哈希槽仍可正常工作。 &lt;code&gt;PFAIL&lt;/code&gt; 仅表示我们当前无法与该节点通信，而可能只是暂时错误。</target>
        </trans-unit>
        <trans-unit id="81a4d3335de82f0227443fdb6b88a83036adf46b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cluster_state&lt;/code&gt;: State is &lt;code&gt;ok&lt;/code&gt; if the node is able to receive queries. &lt;code&gt;fail&lt;/code&gt; if there is at least one hash slot which is unbound (no node associated), in error state (node serving it is flagged with FAIL flag), or if the majority of masters can't be reached by this node.</source>
          <target state="translated">&lt;code&gt;cluster_state&lt;/code&gt; ：如果节点能够接收查询，则状态为 &lt;code&gt;ok&lt;/code&gt; 。 &lt;code&gt;fail&lt;/code&gt; ，如果有至少一个散列时隙是未结合的（无节点相关联），在错误的状态（节点服务它被判与失败标志），或者如果大部分的主人不能由该节点到达。</target>
        </trans-unit>
        <trans-unit id="9d84e9f158cef927bb08b9136f31b0e94588ce30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cluster_stats_messages_received&lt;/code&gt;: Number of messages received via the cluster node-to-node binary bus.</source>
          <target state="translated">&lt;code&gt;cluster_stats_messages_received&lt;/code&gt; ：通过集群节点到节点二进制总线接收的消息数。</target>
        </trans-unit>
        <trans-unit id="1d71cc79a3ac3f1f764845f93c6328f871b79130" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cluster_stats_messages_sent&lt;/code&gt;: Number of messages sent via the cluster node-to-node binary bus.</source>
          <target state="translated">&lt;code&gt;cluster_stats_messages_sent&lt;/code&gt; ：通过集群节点到节点二进制总线发送的消息数。</target>
        </trans-unit>
        <trans-unit id="ee24d8988678d8582b8f6dab777e971152f05558" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cmd&lt;/code&gt;: last command played</source>
          <target state="translated">&lt;code&gt;cmd&lt;/code&gt; ：最后播放的命令</target>
        </trans-unit>
        <trans-unit id="a709f985301e19713f2f08223d89f4f8eea4b37a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cmdstat_XXX&lt;/code&gt;: &lt;code&gt;calls=XXX,usec=XXX,usec_per_call=XXX&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cmdstat_XXX&lt;/code&gt; ： &lt;code&gt;calls=XXX,usec=XXX,usec_per_call=XXX&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="07111613af5fe8282dd6060ded0e6a723e3b5d02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cmsgpack&lt;/code&gt; lib.</source>
          <target state="translated">&lt;code&gt;cmsgpack&lt;/code&gt; 库。</target>
        </trans-unit>
        <trans-unit id="ae19fbcc7be38e64198a2ac984cfc96421cd38f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;commandstats&lt;/code&gt;: Redis command statistics</source>
          <target state="translated">&lt;code&gt;commandstats&lt;/code&gt; ：Redis命令统计信息</target>
        </trans-unit>
        <trans-unit id="2e2aec4f159efd5319b9ac9e46f9366aa72ebdb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config-epoch&lt;/code&gt;: The configuration epoch (or version) of the current node (or of the current master if the node is a replica). Each time there is a failover, a new, unique, monotonically increasing configuration epoch is created. If multiple nodes claim to serve the same hash slots, the one with higher configuration epoch wins.</source>
          <target state="translated">&lt;code&gt;config-epoch&lt;/code&gt; ：当前节点（或当前主节点，如果该节点是副本）的配置时期（或版本）。每次进行故障转移时，都会创建一个新的，唯一的，单调增加的配置时代。如果多个节点声称服务于相同的哈希槽，则赢得配置更高纪元的节点。</target>
        </trans-unit>
        <trans-unit id="d6cf11fe66e5db4592e7887d282a6081f905f74a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config_file&lt;/code&gt;: The path to the config file</source>
          <target state="translated">&lt;code&gt;config_file&lt;/code&gt; ：配置文件的路径</target>
        </trans-unit>
        <trans-unit id="ab3873ea41080a2e04cdaeb106aa6229bc655a31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;configured_hz&lt;/code&gt;: The server's configured frequency setting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bd1609e184b7224682e9575d08c34e0207cdcfc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;connected_clients&lt;/code&gt;: Number of client connections (excluding connections from replicas)</source>
          <target state="translated">&lt;code&gt;connected_clients&lt;/code&gt; ：客户端连接数（不包括来自副本的连接）</target>
        </trans-unit>
        <trans-unit id="7141ff50a3ecae86240ef375bf2a477b7bc9fc9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;connected_slaves&lt;/code&gt;: Number of connected replicas</source>
          <target state="translated">&lt;code&gt;connected_slaves&lt;/code&gt; ：已连接副本的数量</target>
        </trans-unit>
        <trans-unit id="f0c7bb8d57eab8c3c5d0e48cc57c3f859bd8790b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;count &amp;gt; 0&lt;/code&gt;: Remove elements equal to &lt;code&gt;element&lt;/code&gt; moving from head to tail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b1ff8869c8e738a4466372a8c8bf1e9bf4283a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;count &amp;gt; 0&lt;/code&gt;: Remove elements equal to &lt;code&gt;value&lt;/code&gt; moving from head to tail.</source>
          <target state="translated">&lt;code&gt;count &amp;gt; 0&lt;/code&gt; ：删除等于 &lt;code&gt;value&lt;/code&gt; 移动的值的元素。</target>
        </trans-unit>
        <trans-unit id="49ed95d45eb2dc13b9ae1282ce5ebdc9d3906990" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;count &amp;lt; 0&lt;/code&gt;: Remove elements equal to &lt;code&gt;element&lt;/code&gt; moving from tail to head.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba40b8d7058909d83882c013f4bc1e77afd98c42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;count &amp;lt; 0&lt;/code&gt;: Remove elements equal to &lt;code&gt;value&lt;/code&gt; moving from tail to head.</source>
          <target state="translated">&lt;code&gt;count &amp;lt; 0&lt;/code&gt; ：删除等于从尾到头的 &lt;code&gt;value&lt;/code&gt; 元素。</target>
        </trans-unit>
        <trans-unit id="a1c07ae420021783795b0c2dd33cb72eeef5c79c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;count = 0&lt;/code&gt;: Remove all elements equal to &lt;code&gt;element&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c040b7d8a01d8456ce09165ab044d0015f9d0f28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;count = 0&lt;/code&gt;: Remove all elements equal to &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;count = 0&lt;/code&gt; ：删除所有等于 &lt;code&gt;value&lt;/code&gt; 的元素。</target>
        </trans-unit>
        <trans-unit id="fffb19a64d186de16d9f02ae1ed78be02aa565a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cpu&lt;/code&gt;: CPU consumption statistics</source>
          <target state="translated">&lt;code&gt;cpu&lt;/code&gt; ：CPU消耗统计信息</target>
        </trans-unit>
        <trans-unit id="28e89f6000c505dd15ff4ee6498a8a5c7cf10f46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dataset.bytes&lt;/code&gt;: The size in bytes of the dataset, i.e. &lt;code&gt;overhead.total&lt;/code&gt; subtracted from &lt;code&gt;total.allocated&lt;/code&gt; (see &lt;a href=&quot;info&quot;&gt;INFO&lt;/a&gt;'s &lt;code&gt;used_memory_dataset&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;dataset.bytes&lt;/code&gt; ：在数据集中的字节大小，即 &lt;code&gt;overhead.total&lt;/code&gt; 减去 &lt;code&gt;total.allocated&lt;/code&gt; （参见&lt;a href=&quot;info&quot;&gt;INFO&lt;/a&gt;的 &lt;code&gt;used_memory_dataset&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="b1c9f5d1580b06150ed54d844305fc482f4608a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dataset.percentage&lt;/code&gt;: The percentage of &lt;code&gt;dataset.bytes&lt;/code&gt; out of the net memory usage</source>
          <target state="translated">&lt;code&gt;dataset.percentage&lt;/code&gt; ：净内存使用量中 &lt;code&gt;dataset.bytes&lt;/code&gt; 的百分比</target>
        </trans-unit>
        <trans-unit id="bac92558837e2cc0d2fca2ad2bf12fdb7afe3879" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;db&lt;/code&gt;: current database ID</source>
          <target state="translated">&lt;code&gt;db&lt;/code&gt; ：当前数据库ID</target>
        </trans-unit>
        <trans-unit id="02ada849167913c73ba9e71998348d80cbf63a02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dbXXX&lt;/code&gt;: &lt;code&gt;keys=XXX,expires=XXX&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;dbXXX&lt;/code&gt; ： &lt;code&gt;keys=XXX,expires=XXX&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e70830fd3214e8c50b4d6c6ffa87dea222cf1a85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dbXXX&lt;/code&gt;: For each of the server's databases, the overheads of the main and expiry dictionaries (&lt;code&gt;overhead.hashtable.main&lt;/code&gt; and &lt;code&gt;overhead.hashtable.expires&lt;/code&gt;, respectively) are reported in bytes</source>
          <target state="translated">&lt;code&gt;dbXXX&lt;/code&gt; ：对于每服务器的数据库中，主和到期字典的开销（ &lt;code&gt;overhead.hashtable.main&lt;/code&gt; 和 &lt;code&gt;overhead.hashtable.expires&lt;/code&gt; ，分别地）报告在字节</target>
        </trans-unit>
        <trans-unit id="219313b81a2634eda6addfea706a4c7e8ee55c8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default&lt;/code&gt;: Return only the default set of sections</source>
          <target state="translated">&lt;code&gt;default&lt;/code&gt; ：仅返回默认的一组节</target>
        </trans-unit>
        <trans-unit id="a5a4f58751c4847a68fa58ac194036166b7d5435" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;events&lt;/code&gt;: file descriptor events (see below)</source>
          <target state="translated">&lt;code&gt;events&lt;/code&gt; ：文件描述符事件（见下文）</target>
        </trans-unit>
        <trans-unit id="bc0ac6c91120d3c5b5a98bb410f8df776c3d63ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;everything&lt;/code&gt;: Includes &lt;code&gt;all&lt;/code&gt; and &lt;code&gt;modules&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8566e0b3d3d91487347cb7d465fc1c5fc2616626" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;evicted_keys&lt;/code&gt;: Number of evicted keys due to &lt;code&gt;maxmemory&lt;/code&gt; limit</source>
          <target state="translated">&lt;code&gt;evicted_keys&lt;/code&gt; ：由于 &lt;code&gt;maxmemory&lt;/code&gt; 限制而退出的密钥数</target>
        </trans-unit>
        <trans-unit id="3e721e3bc63db39fa41eef44ba732db22b942d1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;executable&lt;/code&gt;: The path to the server's executable</source>
          <target state="translated">&lt;code&gt;executable&lt;/code&gt; ：服务器可执行文件的路径</target>
        </trans-unit>
        <trans-unit id="1445bea46e8c6f8839bf45a414eef179da6b43b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expire_cycle_cpu_milliseconds&lt;/code&gt;: The cumulative amount of time spend on active expiry cycles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fddae6b7c1346bcee795c85b7caa0a8eb0c07bf4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expired_keys&lt;/code&gt;: Total number of key expiration events</source>
          <target state="translated">&lt;code&gt;expired_keys&lt;/code&gt; ：密钥过期事件总数</target>
        </trans-unit>
        <trans-unit id="f378daf38690d735e99c4533cddb27e3de9da98a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expired_stale_perc&lt;/code&gt;: The percentage of keys probably expired</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4959e2adfed6d630b2108dc7a006ae59cc0aec41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expired_time_cap_reached_count&lt;/code&gt;: The count of times that active expiry cycles have stopped early</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92de7381dc01164610e1cda0033a7229af5660db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fail&lt;/code&gt;: Node is in &lt;code&gt;FAIL&lt;/code&gt; state. It was not reachable for multiple nodes that promoted the &lt;code&gt;PFAIL&lt;/code&gt; state to &lt;code&gt;FAIL&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fail&lt;/code&gt; ：节点处于 &lt;code&gt;FAIL&lt;/code&gt; 状态。对于将 &lt;code&gt;PFAIL&lt;/code&gt; 状态提升为 &lt;code&gt;FAIL&lt;/code&gt; 的多个节点，这是无法访问的。</target>
        </trans-unit>
        <trans-unit id="c35b7b08fa3b308e4d8f1822389f662520bb59fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fail?&lt;/code&gt;: Node is in &lt;code&gt;PFAIL&lt;/code&gt; state. Not reachable for the node you are contacting, but still logically reachable (not in &lt;code&gt;FAIL&lt;/code&gt; state).</source>
          <target state="translated">&lt;code&gt;fail?&lt;/code&gt; ：节点处于 &lt;code&gt;PFAIL&lt;/code&gt; 状态。对于您正在联系的节点而言不可访问，但在逻辑上仍可访问（未处于 &lt;code&gt;FAIL&lt;/code&gt; 状态）。</target>
        </trans-unit>
        <trans-unit id="49776705e06dd4e253f073b1e1df4558b84d2624" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fd&lt;/code&gt;: file descriptor corresponding to the socket</source>
          <target state="translated">&lt;code&gt;fd&lt;/code&gt; ：套接字对应的文件描述符</target>
        </trans-unit>
        <trans-unit id="e4839b8d9abefec89230daa71bb34e7d4624d2a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;flags&lt;/code&gt;: A list of comma separated flags: &lt;code&gt;myself&lt;/code&gt;, &lt;code&gt;master&lt;/code&gt;, &lt;code&gt;slave&lt;/code&gt;, &lt;code&gt;fail?&lt;/code&gt;, &lt;code&gt;fail&lt;/code&gt;, &lt;code&gt;handshake&lt;/code&gt;, &lt;code&gt;noaddr&lt;/code&gt;, &lt;code&gt;noflags&lt;/code&gt;. Flags are explained in detail in the next section.</source>
          <target state="translated">&lt;code&gt;flags&lt;/code&gt; ：以逗号分隔的标志列表： &lt;code&gt;myself&lt;/code&gt; ， &lt;code&gt;master&lt;/code&gt; ， &lt;code&gt;slave&lt;/code&gt; ， &lt;code&gt;fail?&lt;/code&gt; ， &lt;code&gt;fail&lt;/code&gt; ， &lt;code&gt;handshake&lt;/code&gt; ， &lt;code&gt;noaddr&lt;/code&gt; ， &lt;code&gt;noflags&lt;/code&gt; 。下一节将详细说明标志。</target>
        </trans-unit>
        <trans-unit id="f3cd416356c95d4051d973688aae7ac6eba88b4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;flags&lt;/code&gt;: client flags (see below)</source>
          <target state="translated">&lt;code&gt;flags&lt;/code&gt; ：客户标志（见下文）</target>
        </trans-unit>
        <trans-unit id="df062b203c243b317d77329f74ef9fbc95ad37d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fragmentation&lt;/code&gt;: See &lt;a href=&quot;info&quot;&gt;INFO&lt;/a&gt;'s &lt;code&gt;mem_fragmentation_ratio&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;fragmentation&lt;/code&gt; ：请参阅&lt;a href=&quot;info&quot;&gt;INFO&lt;/a&gt;的 &lt;code&gt;mem_fragmentation_ratio&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6029bff55fe0c7d9bb3ddb3ebd0310dacaf55ff4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gcc_version&lt;/code&gt;: Version of the GCC compiler used to compile the Redis server</source>
          <target state="translated">&lt;code&gt;gcc_version&lt;/code&gt; ：用于编译Redis服务器的GCC编译器版本</target>
        </trans-unit>
        <trans-unit id="23a072a24cfac677fc8764a1a8c0fe1f00743a04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;h*llo&lt;/code&gt; matches &lt;code&gt;hllo&lt;/code&gt; and &lt;code&gt;heeeello&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;h*llo&lt;/code&gt; 匹配 &lt;code&gt;hllo&lt;/code&gt; 和 &lt;code&gt;heeeello&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a1845d4d0e238b7e6dc45ebcbe2292b346139d65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;h*llo&lt;/code&gt; subscribes to &lt;code&gt;hllo&lt;/code&gt; and &lt;code&gt;heeeello&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;h*llo&lt;/code&gt; 订阅 &lt;code&gt;hllo&lt;/code&gt; 和 &lt;code&gt;heeeello&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ade12d9137392f4c2bf48b6994c54aaa368233a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;h?llo&lt;/code&gt; matches &lt;code&gt;hello&lt;/code&gt;, &lt;code&gt;hallo&lt;/code&gt; and &lt;code&gt;hxllo&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;h?llo&lt;/code&gt; 匹配 &lt;code&gt;hello&lt;/code&gt; ， &lt;code&gt;hallo&lt;/code&gt; 和 &lt;code&gt;hxllo&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cd6496b33d0f1569be1935849893a999435152ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;h?llo&lt;/code&gt; subscribes to &lt;code&gt;hello&lt;/code&gt;, &lt;code&gt;hallo&lt;/code&gt; and &lt;code&gt;hxllo&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;h?llo&lt;/code&gt; 订阅 &lt;code&gt;hello&lt;/code&gt; ， &lt;code&gt;hallo&lt;/code&gt; 和 &lt;code&gt;hxllo&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dcfac43bef479b2c536e4ae578bf2a90ec0c4fab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;h[^e]llo&lt;/code&gt; matches &lt;code&gt;hallo&lt;/code&gt;, &lt;code&gt;hbllo&lt;/code&gt;, ... but not &lt;code&gt;hello&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;h[^e]llo&lt;/code&gt; 比赛 &lt;code&gt;hallo&lt;/code&gt; ， &lt;code&gt;hbllo&lt;/code&gt; ，...但不 &lt;code&gt;hello&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fadd16f48704cc1c7091cdf7ff15838506d015cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;h[a-b]llo&lt;/code&gt; matches &lt;code&gt;hallo&lt;/code&gt; and &lt;code&gt;hbllo&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;h[a-b]llo&lt;/code&gt; 匹配 &lt;code&gt;hallo&lt;/code&gt; 和 &lt;code&gt;hbllo&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bb5381a854a2cdc7b997de02f71efdd1649da762" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;h[ae]llo&lt;/code&gt; matches &lt;code&gt;hello&lt;/code&gt; and &lt;code&gt;hallo,&lt;/code&gt; but not &lt;code&gt;hillo&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;h[ae]llo&lt;/code&gt; 匹配 &lt;code&gt;hello&lt;/code&gt; 和 &lt;code&gt;hallo,&lt;/code&gt; 但不 &lt;code&gt;hillo&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a5e1fb9a42de209210d73ecbdbce60f787f2d93c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;h[ae]llo&lt;/code&gt; subscribes to &lt;code&gt;hello&lt;/code&gt; and &lt;code&gt;hallo,&lt;/code&gt; but not &lt;code&gt;hillo&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;h[ae]llo&lt;/code&gt; 订阅了 &lt;code&gt;hello&lt;/code&gt; 和 &lt;code&gt;hallo,&lt;/code&gt; 但不 &lt;code&gt;hillo&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="772949aad53f3e2d516cf0b962fffee5490a4d57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;handshake&lt;/code&gt;: Untrusted node, we are handshaking.</source>
          <target state="translated">&lt;code&gt;handshake&lt;/code&gt; ：不受信任的节点，我们正在握手。</target>
        </trans-unit>
        <trans-unit id="d0689cf551fb2b0d08b1961735f71c6e9b2bb410" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hz&lt;/code&gt;: The server's current frequency setting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="814fd3f9ef97f0a61158c442ebf3374319e7d6c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hz&lt;/code&gt;: The server's frequency setting</source>
          <target state="translated">&lt;code&gt;hz&lt;/code&gt; ：服务器的频率设置</target>
        </trans-unit>
        <trans-unit id="1022ccb50a72baa656186ea51d6417dd09b347e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id&lt;/code&gt;: The node ID, a 40 characters random string generated when a node is created and never changed again (unless &lt;code&gt;CLUSTER RESET HARD&lt;/code&gt; is used).</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; ：节点ID，这是一个40个字符的随机字符串，在创建节点时会生成，并且永远不会再次更改（除非使用 &lt;code&gt;CLUSTER RESET HARD&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="6e4cf9fe6a9736c25c012bac49c2f87bfbbd0a81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id&lt;/code&gt;: an unique 64-bit client ID (introduced in Redis 2.8.12).</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; ：唯一的64位客户端ID（在Redis 2.8.12中引入）。</target>
        </trans-unit>
        <trans-unit id="bc766ec484f27e4cc3d20ab79a21e4ce04397109" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id&lt;/code&gt;: an unique 64-bit client ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1bda4eb1cacc58fcc5d8afc9929ac1d35eed0e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;idle&lt;/code&gt;: idle time of the connection in seconds</source>
          <target state="translated">&lt;code&gt;idle&lt;/code&gt; ：连接的空闲时间（以秒为单位）</target>
        </trans-unit>
        <trans-unit id="dc37fb4e2cc65425cd389de9487907efef683281" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;instantaneous_input_kbps&lt;/code&gt;: The network's read rate per second in KB/sec</source>
          <target state="translated">&lt;code&gt;instantaneous_input_kbps&lt;/code&gt; ：每秒网络的读取速率，以KB /秒为单位</target>
        </trans-unit>
        <trans-unit id="c2bbc7260a608ea757aeacf6cecda5f317d1b4fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;instantaneous_ops_per_sec&lt;/code&gt;: Number of commands processed per second</source>
          <target state="translated">&lt;code&gt;instantaneous_ops_per_sec&lt;/code&gt; ：每秒处理的命令数</target>
        </trans-unit>
        <trans-unit id="95b684cc83a0cda570839cd2a346dc1d8416b8fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;instantaneous_output_kbps&lt;/code&gt;: The network's write rate per second in KB/sec</source>
          <target state="translated">&lt;code&gt;instantaneous_output_kbps&lt;/code&gt; ：每秒网络的写入速率，以KB /秒为单位</target>
        </trans-unit>
        <trans-unit id="f7216fccf4b8cf6baabaf30be836f2eb2f1c2c63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;io_threaded_reads_processed&lt;/code&gt;: Number of read events processed by the main and I/O threads</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8129ddc83f2b3c72b62eba59bdb942f9513b1817" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;io_threaded_writes_processed&lt;/code&gt;: Number of write events processed by the main and I/O threads</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c9ec3aa6422a854628188f9808209b697641f41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;io_threads_active&lt;/code&gt;: Flag indicating if I/O threads are active</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e23ab4305826d0584db18380ae54f96cfe85a06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ip:port&lt;/code&gt;: The node address where clients should contact the node to run queries.</source>
          <target state="translated">&lt;code&gt;ip:port&lt;/code&gt; ：客户端应与节点联系以运行查询的节点地址。</target>
        </trans-unit>
        <trans-unit id="270a88a258c3a16f513203e7b558ec2c78da586a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ip:port@cport&lt;/code&gt;: The node address where clients should contact the node to run queries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="291f0af420cf08324f52bee6ac610301d0a211a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keys.bytes-per-key&lt;/code&gt;: The ratio between &lt;strong&gt;net memory usage&lt;/strong&gt; (&lt;code&gt;total.allocated&lt;/code&gt; minus &lt;code&gt;startup.allocated&lt;/code&gt;) and &lt;code&gt;keys.count&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;keys.bytes-per-key&lt;/code&gt; ：&lt;strong&gt;净内存使用量&lt;/strong&gt;（ &lt;code&gt;total.allocated&lt;/code&gt; 减去 &lt;code&gt;startup.allocated&lt;/code&gt; ）和 &lt;code&gt;keys.count&lt;/code&gt; 之间的比率</target>
        </trans-unit>
        <trans-unit id="43dcaebeef203950604817bffeb6c8b12d81080b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keys.count&lt;/code&gt;: The total number of keys stored across all databases in the server</source>
          <target state="translated">&lt;code&gt;keys.count&lt;/code&gt; ：服务器中所有数据库中存储的密钥总数</target>
        </trans-unit>
        <trans-unit id="95824ce321d4cc94f4954a02b73345e7751f8263" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keyspace&lt;/code&gt;: Database related statistics</source>
          <target state="translated">&lt;code&gt;keyspace&lt;/code&gt; ：与数据库有关的统计信息</target>
        </trans-unit>
        <trans-unit id="938849ce8e866deafc434a8c0bbab85368d34ec7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keyspace_hits&lt;/code&gt;: Number of successful lookup of keys in the main dictionary</source>
          <target state="translated">&lt;code&gt;keyspace_hits&lt;/code&gt; ：主字典中成功查找键的次数</target>
        </trans-unit>
        <trans-unit id="5934dcbf3cf4745664c870f4876772114b7ebcad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keyspace_misses&lt;/code&gt;: Number of failed lookup of keys in the main dictionary</source>
          <target state="translated">&lt;code&gt;keyspace_misses&lt;/code&gt; ：主字典中键查找失败的次数</target>
        </trans-unit>
        <trans-unit id="5f8a41bd61bedded590e35fd39e3c92d238bb0b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;laddr&lt;/code&gt;: address/port of local address client connected to (bind address)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8248fad4d6ffdc71b385b094bafe2abbfbc52b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;latest_fork_usec&lt;/code&gt;: Duration of the latest fork operation in microseconds</source>
          <target state="translated">&lt;code&gt;latest_fork_usec&lt;/code&gt; ：最近的派生操作的持续时间（以微秒为单位）</target>
        </trans-unit>
        <trans-unit id="21cc38e61fdb4dd462416a21e8e9e6648d07e3af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lazyfree_pending_objects&lt;/code&gt;: The number of objects waiting to be freed (as a result of calling &lt;a href=&quot;unlink&quot;&gt;UNLINK&lt;/a&gt;, or &lt;a href=&quot;flushdb&quot;&gt;FLUSHDB&lt;/a&gt; and &lt;a href=&quot;flushall&quot;&gt;FLUSHALL&lt;/a&gt; with the &lt;strong&gt;ASYNC&lt;/strong&gt; option)</source>
          <target state="translated">&lt;code&gt;lazyfree_pending_objects&lt;/code&gt; ：被释放等待对象的数量（作为调用的结果&lt;a href=&quot;unlink&quot;&gt;UNLINK&lt;/a&gt;，或&lt;a href=&quot;flushdb&quot;&gt;FLUSHDB&lt;/a&gt;和&lt;a href=&quot;flushall&quot;&gt;FLUSHALL&lt;/a&gt;与&lt;strong&gt;ASYNC&lt;/strong&gt;选项）</target>
        </trans-unit>
        <trans-unit id="59ecbcb471bd0b1ba5e063f491468fad5e3173d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;link-state&lt;/code&gt;: The state of the link used for the node-to-node cluster bus. We use this link to communicate with the node. Can be &lt;code&gt;connected&lt;/code&gt; or &lt;code&gt;disconnected&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;link-state&lt;/code&gt; ：用于节点到节点集群总线的链路状态。我们使用此链接与节点进行通信。可以 &lt;code&gt;connected&lt;/code&gt; 或 &lt;code&gt;disconnected&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fe7bdbcf85b37b69d3e6e4d866b6ad86cc562465" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;loading&lt;/code&gt;: Flag indicating if the load of a dump file is on-going</source>
          <target state="translated">&lt;code&gt;loading&lt;/code&gt; ：标志，指示转储文件的加载是否正在进行</target>
        </trans-unit>
        <trans-unit id="b641e737c4c65b61073674e1872dba9aa112ba11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;loading_eta_seconds&lt;/code&gt;: ETA in seconds for the load to be complete</source>
          <target state="translated">&lt;code&gt;loading_eta_seconds&lt;/code&gt; ：完成加载所需的秒数（以秒为单位）</target>
        </trans-unit>
        <trans-unit id="905f0c0d04e1edb114d6944e2c3fc5d7d748d4df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;loading_loaded_bytes&lt;/code&gt;: Number of bytes already loaded</source>
          <target state="translated">&lt;code&gt;loading_loaded_bytes&lt;/code&gt; ：已加载的字节数</target>
        </trans-unit>
        <trans-unit id="95d85b85e583f65530a4c519f38195c7d0bf9d9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;loading_loaded_perc&lt;/code&gt;: Same value expressed as a percentage</source>
          <target state="translated">&lt;code&gt;loading_loaded_perc&lt;/code&gt; ：相同的值以百分比表示</target>
        </trans-unit>
        <trans-unit id="1a24643a4ec60a4cdfdf69f48f4893ff213957f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;loading_rdb_used_mem&lt;/code&gt;: The memory usage of the server that had generated the RDB file at the time of the file's creation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54bc84cb5d647f7d245611a75b0f4e6a47881c15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;loading_start_time&lt;/code&gt;: Epoch-based timestamp of the start of the load operation</source>
          <target state="translated">&lt;code&gt;loading_start_time&lt;/code&gt; ：加载操作开始的基于纪元的时间戳</target>
        </trans-unit>
        <trans-unit id="a2b99d44dac13ed28eaefad23e3acd32e473cff7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;loading_total_bytes&lt;/code&gt;: Total file size</source>
          <target state="translated">&lt;code&gt;loading_total_bytes&lt;/code&gt; ：文件总大小</target>
        </trans-unit>
        <trans-unit id="3f4e8e370b36fff04729036f4d5f3c0e5b332d07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;loglevel&lt;/code&gt; is one of:</source>
          <target state="translated">&lt;code&gt;loglevel&lt;/code&gt; 是以下之一：</target>
        </trans-unit>
        <trans-unit id="1f16338d15e120aaa052f8fdb78dab343eef6dd5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lru_clock&lt;/code&gt;: Clock incrementing every minute, for LRU management</source>
          <target state="translated">&lt;code&gt;lru_clock&lt;/code&gt; ：时钟每分钟递增，用于LRU管理</target>
        </trans-unit>
        <trans-unit id="5c3f6070e6ac871d998395858ad30edba81f25dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lua.caches&lt;/code&gt;: the summed size in bytes of the overheads of the Lua scripts' caches</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6ed881ede82d74c70a2a4663adcf6972b5df79d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;master&lt;/code&gt;: If the node is a replica, and the master is known, the master node ID, otherwise the &quot;-&quot; character.</source>
          <target state="translated">&lt;code&gt;master&lt;/code&gt; ：如果节点是副本，并且已知master，则为master节点ID，否则为&amp;ldquo;-&amp;rdquo;字符。</target>
        </trans-unit>
        <trans-unit id="4cc7689c421b56db103b063a107acf3446d1e601" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;master&lt;/code&gt;: Node is a master.</source>
          <target state="translated">&lt;code&gt;master&lt;/code&gt; ：节点是主节点。</target>
        </trans-unit>
        <trans-unit id="291a8ad8ba75d794172ecb8cdc800fac2e8bea69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;master_host&lt;/code&gt;: Host or IP address of the master</source>
          <target state="translated">&lt;code&gt;master_host&lt;/code&gt; ：主机的主机或IP地址</target>
        </trans-unit>
        <trans-unit id="c7b919c2a8e9e5c48b32193b06915825f05d23ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;master_last_io_seconds_ago&lt;/code&gt;: Number of seconds since the last interaction with master</source>
          <target state="translated">&lt;code&gt;master_last_io_seconds_ago&lt;/code&gt; ：自上次与master互动以来经过的秒数</target>
        </trans-unit>
        <trans-unit id="f0f3eb8f4200646143873fd144790f03d854f7af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;master_link_down_since_seconds&lt;/code&gt;: Number of seconds since the link is down</source>
          <target state="translated">&lt;code&gt;master_link_down_since_seconds&lt;/code&gt; ：链接断开后经过的秒数</target>
        </trans-unit>
        <trans-unit id="90bf7bf132f33bf3b3e67cdd40fdcc917c464460" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;master_link_status&lt;/code&gt;: Status of the link (up/down)</source>
          <target state="translated">&lt;code&gt;master_link_status&lt;/code&gt; ：链接状态（上/下）</target>
        </trans-unit>
        <trans-unit id="e58722ccd1793143cb927377948a3a1635236b9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;master_port&lt;/code&gt;: Master listening TCP port</source>
          <target state="translated">&lt;code&gt;master_port&lt;/code&gt; ：主监听TCP端口</target>
        </trans-unit>
        <trans-unit id="38536dd76b51abea55679752e904120abd772b27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;master_repl_offset&lt;/code&gt;: The server's current replication offset</source>
          <target state="translated">&lt;code&gt;master_repl_offset&lt;/code&gt; ：服务器的当前复制偏移量</target>
        </trans-unit>
        <trans-unit id="17b1b7079ccf083e09938191385ff09c723f9080" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;master_replid2&lt;/code&gt;: The secondary replication ID, used for PSYNC after a failover.</source>
          <target state="translated">&lt;code&gt;master_replid2&lt;/code&gt; ：辅助复制ID，用于故障转移后的PSYNC。</target>
        </trans-unit>
        <trans-unit id="506e20f228c9d2c1dcc44dcf716be0a8e0f527df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;master_replid&lt;/code&gt;: The replication ID of the Redis server.</source>
          <target state="translated">&lt;code&gt;master_replid&lt;/code&gt; ：Redis服务器的复制ID。</target>
        </trans-unit>
        <trans-unit id="c4bc68c43bde0af6497f05baba945f1c620a90ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;master_sync_in_progress&lt;/code&gt;: Indicate the master is syncing to the replica</source>
          <target state="translated">&lt;code&gt;master_sync_in_progress&lt;/code&gt; ：指示主数据库正在同步到副本</target>
        </trans-unit>
        <trans-unit id="b4b673ca5ed8610fe7fa1e1ffbaedb57ca7ca77b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;master_sync_last_io_seconds_ago&lt;/code&gt;: Number of seconds since last transfer I/O during a SYNC operation</source>
          <target state="translated">&lt;code&gt;master_sync_last_io_seconds_ago&lt;/code&gt; ：自SYNC操作以来最后一次传输I / O以来的秒数</target>
        </trans-unit>
        <trans-unit id="0cdd4c8cc8c79eeab8100d928843441a0c312ab7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;master_sync_left_bytes&lt;/code&gt;: Number of bytes left before syncing is complete</source>
          <target state="translated">&lt;code&gt;master_sync_left_bytes&lt;/code&gt; ：同步完成前剩余的字节数</target>
        </trans-unit>
        <trans-unit id="5680ee8ed92983ea22d11b8ce00e30f766f93a11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;master_sync_left_bytes&lt;/code&gt;: Number of bytes left before syncing is complete (may be negative when &lt;code&gt;master_sync_total_bytes&lt;/code&gt; is 0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8716ac374614f070bd6e3e58fca4cd1c5eaee16e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;master_sync_perc&lt;/code&gt;: The percentage &lt;code&gt;master_sync_read_bytes&lt;/code&gt; from &lt;code&gt;master_sync_total_bytes&lt;/code&gt;, or an approximation that uses &lt;code&gt;loading_rdb_used_mem&lt;/code&gt; when &lt;code&gt;master_sync_total_bytes&lt;/code&gt; is 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bfd156e1559140e96dbd04f463bcedd805cd572" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;master_sync_read_bytes&lt;/code&gt;: Number of bytes already transferred</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bd088fb4298efcf15162f466d0c93b7aeaae1d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;master_sync_total_bytes&lt;/code&gt;: Total number of bytes that need to be transferred. this may be 0 when the size is unknown (for example, when the &lt;code&gt;repl-diskless-sync&lt;/code&gt; configuration directive is used)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc21fdd1146fa4c4bba4073b469b7424702f89f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;math&lt;/code&gt; lib.</source>
          <target state="translated">&lt;code&gt;math&lt;/code&gt; 库</target>
        </trans-unit>
        <trans-unit id="0764a52a4b87ecc5b58c0b283ff413d29c1885fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;maxclients&lt;/code&gt;: The value of the &lt;code&gt;maxclients&lt;/code&gt; configuration directive. This is the upper limit for the sum of &lt;code&gt;connected_clients&lt;/code&gt;, &lt;code&gt;connected_slaves&lt;/code&gt; and &lt;code&gt;cluster_connections&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="264ff63840f1fd88caa997a7ac62b59d2937b34e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;maxmemory&lt;/code&gt;: The value of the &lt;code&gt;maxmemory&lt;/code&gt; configuration directive</source>
          <target state="translated">&lt;code&gt;maxmemory&lt;/code&gt; ： &lt;code&gt;maxmemory&lt;/code&gt; 配置指令的值</target>
        </trans-unit>
        <trans-unit id="817ccce83e74c3626cb40339fef4aa9b5544ef46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;maxmemory_human&lt;/code&gt;: Human readable representation of previous value</source>
          <target state="translated">&lt;code&gt;maxmemory_human&lt;/code&gt; ：先前值的人类可读表示</target>
        </trans-unit>
        <trans-unit id="b922c9f2d429df108e0acf7ffcf5d134393c6d70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;maxmemory_policy&lt;/code&gt;: The value of the &lt;code&gt;maxmemory-policy&lt;/code&gt; configuration directive</source>
          <target state="translated">&lt;code&gt;maxmemory_policy&lt;/code&gt; ： &lt;code&gt;maxmemory-policy&lt;/code&gt; 配置指令的值</target>
        </trans-unit>
        <trans-unit id="fad03613c207944468a711f3fbb7847b71f15d75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mem_allocator&lt;/code&gt;: Memory allocator, chosen at compile time</source>
          <target state="translated">&lt;code&gt;mem_allocator&lt;/code&gt; ：内存分配器，在编译时选择</target>
        </trans-unit>
        <trans-unit id="8ab1c581e26ff6762ae29f013f6d0b6a17cf2cb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mem_fragmentation_ratio&lt;/code&gt;: Ratio between &lt;code&gt;used_memory_rss&lt;/code&gt; and &lt;code&gt;used_memory&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;mem_fragmentation_ratio&lt;/code&gt; ： &lt;code&gt;used_memory_rss&lt;/code&gt; 和 &lt;code&gt;used_memory&lt;/code&gt; 之间的比率</target>
        </trans-unit>
        <trans-unit id="3edb25127130c1e1537a5ef7e8480bc9ec92b78d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;memory&lt;/code&gt;: Memory consumption related information</source>
          <target state="translated">&lt;code&gt;memory&lt;/code&gt; ：内存消耗相关信息</target>
        </trans-unit>
        <trans-unit id="2d5cca8132678950ab84bf42425da3ca0507e576" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;migrate_cached_sockets&lt;/code&gt;: The number of sockets open for &lt;a href=&quot;migrate&quot;&gt;MIGRATE&lt;/a&gt; purposes</source>
          <target state="translated">&lt;code&gt;migrate_cached_sockets&lt;/code&gt; ：为&lt;a href=&quot;migrate&quot;&gt;迁移&lt;/a&gt;目的而打开的套接字数</target>
        </trans-unit>
        <trans-unit id="3927030e50503d7ca36313f099ded40f9e7fd2a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;min&lt;/code&gt; and &lt;code&gt;max&lt;/code&gt; can be &lt;code&gt;-inf&lt;/code&gt; and &lt;code&gt;+inf&lt;/code&gt;, so that you are not required to know the highest or lowest score in the sorted set to get all elements from or up to a certain score.</source>
          <target state="translated">&lt;code&gt;min&lt;/code&gt; 和 &lt;code&gt;max&lt;/code&gt; 可以是 &lt;code&gt;-inf&lt;/code&gt; 和 &lt;code&gt;+inf&lt;/code&gt; ，因此您无需知道排序集中的最高或最低分数即可使所有元素达到或高于某个分数。</target>
        </trans-unit>
        <trans-unit id="9d1bf92a441476dd2b1a033b8bda44cfa256eb59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;min_slaves_good_slaves&lt;/code&gt;: Number of replicas currently considered good</source>
          <target state="translated">&lt;code&gt;min_slaves_good_slaves&lt;/code&gt; ：当前认为良好的副本数</target>
        </trans-unit>
        <trans-unit id="acd242d033ab51e8924a653a8f75d3dfafbfc9e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module_fork_in_progress&lt;/code&gt;: Flag indicating a module fork is on-going</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58320459c64e0ed996c72236d4b5a5df86ee37a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module_fork_last_cow_size&lt;/code&gt;: The size in bytes of copy-on-write allocations during the last module fork operation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a1c104aad8f4d4ca9cc5e8c29bf1aa0162bdc19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;modules&lt;/code&gt;: Module related sections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a769def0c3b342307b6da05fd504fd6eadb8475" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;modules&lt;/code&gt;: Modules section</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8401d9f1390c809813bc32bd3d1271ab733ce35d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;multi&lt;/code&gt;: number of commands in a MULTI/EXEC context</source>
          <target state="translated">&lt;code&gt;multi&lt;/code&gt; ：MULTI / EXEC上下文中的命令数</target>
        </trans-unit>
        <trans-unit id="2c8fa772aec46a276fd4408dcd12322cad2da9a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;multiplexing_api&lt;/code&gt;: Event loop mechanism used by Redis</source>
          <target state="translated">&lt;code&gt;multiplexing_api&lt;/code&gt; ：Redis使用的事件循环机制</target>
        </trans-unit>
        <trans-unit id="e0c9182e4b40c08e961e899a6e20a5633a6ee0f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;myself&lt;/code&gt;: The node you are contacting.</source>
          <target state="translated">&lt;code&gt;myself&lt;/code&gt; ：您正在联系的节点。</target>
        </trans-unit>
        <trans-unit id="673f1ad7800ab1ee3a2bb4c7a04456ddf63dfbc2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt;: Name of the module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a436bf2963c1a3b8c958af7c5e07240e0e482f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt;: the name set by the client with &lt;a href=&quot;client-setname&quot;&gt;CLIENT SETNAME&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; ：客户端使用&lt;a href=&quot;client-setname&quot;&gt;CLIENT SETNAME&lt;/a&gt;设置的名称</target>
        </trans-unit>
        <trans-unit id="eb42588cab8a6e41d3563bac3bf5a966ddc7f241" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;noaddr&lt;/code&gt;: No address known for this node.</source>
          <target state="translated">&lt;code&gt;noaddr&lt;/code&gt; ：该节点未知的地址。</target>
        </trans-unit>
        <trans-unit id="147657303a81d5e12d6d7c7a341010358290596f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nocommands&lt;/code&gt;: alias for &lt;code&gt;-@all&lt;/code&gt;. Removes all the commands, the user will no longer be able to execute anything.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="588a72abc4c95194bec0e3569653d6a66d738e01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;noflags&lt;/code&gt;: No flags at all.</source>
          <target state="translated">&lt;code&gt;noflags&lt;/code&gt; ：完全没有标志。</target>
        </trans-unit>
        <trans-unit id="ee7ee7abe8646a7328a6876e3d63c60a61097955" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;noloop&lt;/code&gt;: The client isn't notified about keys modified by itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2295a8f57a2ad718fc8a101a75683ddf9b1fe6f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nopass&lt;/code&gt;: the user is set as a &quot;no password&quot; user. It means that it will be possible to authenticate as such user with any password. By default, the &lt;code&gt;default&lt;/code&gt; special user is set as &quot;nopass&quot;. The &lt;code&gt;nopass&lt;/code&gt; rule will also reset all the configured passwords for the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f08264cef3e182cc26690ed1532909b6767c5de5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;obl&lt;/code&gt;: output buffer length</source>
          <target state="translated">&lt;code&gt;obl&lt;/code&gt; ：输出缓冲区长度</target>
        </trans-unit>
        <trans-unit id="6dc4e4e7860139f767e29a51e1813dfe7dbdb2fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;off&lt;/code&gt;: The connection isn't using server assisted client side caching.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="456c5347e83e30f11360f83463f2e87569342036" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;off&lt;/code&gt;: set user as not active, it will be impossible to log as this user. Please note that if a user gets disabled (set to off) after there are connections already authenticated with such a user, the connections will continue to work as expected. To also kill the old connections you can use &lt;a href=&quot;client-kill&quot;&gt;CLIENT KILL&lt;/a&gt; with the user option. An alternative is to delete the user with &lt;a href=&quot;acl-deluser&quot;&gt;ACL DELUSER&lt;/a&gt;, that will result in all the connections authenticated as the deleted user to be disconnected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbbcb3aaca80773967cf9f09226457a784353779" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;oll&lt;/code&gt;: output list length (replies are queued in this list when the buffer is full)</source>
          <target state="translated">&lt;code&gt;oll&lt;/code&gt; ：输出列表的长度（缓冲区已满时，答复在此列表中排队）</target>
        </trans-unit>
        <trans-unit id="ba0b94233ec83c276ed7965e425a12874a6f0609" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;omem&lt;/code&gt;: output buffer memory usage</source>
          <target state="translated">&lt;code&gt;omem&lt;/code&gt; ：输出缓冲区的内存使用情况</target>
        </trans-unit>
        <trans-unit id="f669ed89b0e5ee48624303cd659c30f39f6863c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;on&lt;/code&gt;: Server assisted client side caching is enabled for the connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1bf83f472040956ff3f279a1824de989115564e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;on&lt;/code&gt;: set the user as active, it will be possible to authenticate as this user using &lt;code&gt;AUTH &amp;lt;username&amp;gt; &amp;lt;password&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c1338239ac70a183c1202eac1382ef73b386842" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;optin&lt;/code&gt;: The client does not cache keys by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e0b2e7b657a790b5f539550f069ab5fd4514a37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;optout&lt;/code&gt;: The client caches keys by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13338a0bc1218b82c9be0432fdb97dd49851c228" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;os&lt;/code&gt;: Operating system hosting the Redis server</source>
          <target state="translated">&lt;code&gt;os&lt;/code&gt; ：托管Redis服务器的操作系统</target>
        </trans-unit>
        <trans-unit id="b921821db9903f46a7da2d8e5fa5fbaa99f469d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;overhead.total&lt;/code&gt;: The sum of all overheads, i.e. &lt;code&gt;startup.allocated&lt;/code&gt;, &lt;code&gt;replication.backlog&lt;/code&gt;, &lt;code&gt;clients.slaves&lt;/code&gt;, &lt;code&gt;clients.normal&lt;/code&gt;, &lt;code&gt;aof.buffer&lt;/code&gt; and those of the internal data structures that are used in managing the Redis keyspace (see &lt;a href=&quot;info&quot;&gt;INFO&lt;/a&gt;'s &lt;code&gt;used_memory_overhead&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;overhead.total&lt;/code&gt; 总和：所有间接费用之和，即： &lt;code&gt;startup.allocated&lt;/code&gt; ， &lt;code&gt;replication.backlog&lt;/code&gt; ， &lt;code&gt;clients.slaves&lt;/code&gt; ， &lt;code&gt;clients.normal&lt;/code&gt; ， &lt;code&gt;aof.buffer&lt;/code&gt; 以及用于管理Redis密钥空间的内部数据结构的总开销（请参阅&lt;a href=&quot;info&quot;&gt;INFO&lt;/a&gt;的 &lt;code&gt;used_memory_overhead&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="b66f0f12b2e6c5406228c20ed2d84087eb7179ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;peak.allocated&lt;/code&gt;: Peak memory consumed by Redis in bytes (see &lt;a href=&quot;info&quot;&gt;INFO&lt;/a&gt;'s &lt;code&gt;used_memory&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;peak.allocated&lt;/code&gt; ：Redis消耗的峰值内存（以字节为单位）（请参阅&lt;a href=&quot;info&quot;&gt;INFO&lt;/a&gt;的 &lt;code&gt;used_memory&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="09bf3c6a90b5c55437b2fe4763be03aa49b2d8b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;peak.allocated&lt;/code&gt;: Peak memory consumed by Redis in bytes (see &lt;a href=&quot;info&quot;&gt;INFO&lt;/a&gt;'s &lt;code&gt;used_memory_peak&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9104c5033ce661c1a0960c0256c747a7e1462163" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;peak.percentage&lt;/code&gt;: The percentage of &lt;code&gt;peak.allocated&lt;/code&gt; out of &lt;code&gt;total.allocated&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;peak.percentage&lt;/code&gt; ： &lt;code&gt;peak.allocated&lt;/code&gt; 在总 &lt;code&gt;total.allocated&lt;/code&gt; 中所占的百分比</target>
        </trans-unit>
        <trans-unit id="ee46e3f9df2301d2c9d9f49311b2a6be9a794102" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;persistence&lt;/code&gt;: RDB and AOF related information</source>
          <target state="translated">&lt;code&gt;persistence&lt;/code&gt; ：RDB和AOF相关信息</target>
        </trans-unit>
        <trans-unit id="340ca7ffebd56548b44ad85ca71ded648b8a9fe0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ping-sent&lt;/code&gt;: Milliseconds unix time at which the currently active ping was sent, or zero if there are no pending pings.</source>
          <target state="translated">&lt;code&gt;ping-sent&lt;/code&gt; ：当前活动的ping 发送的毫秒时间，如果没有未决的ping，则为零。</target>
        </trans-unit>
        <trans-unit id="2ce7201393232bb0529b46b4ad49ad2d100d7a0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pong-recv&lt;/code&gt;: Milliseconds unix time the last pong was received.</source>
          <target state="translated">&lt;code&gt;pong-recv&lt;/code&gt; ：接收到最后一个pong的毫秒数。</target>
        </trans-unit>
        <trans-unit id="bf141066fc22e3fcd741fa0973e91924088de0cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;process_id&lt;/code&gt;: PID of the server process</source>
          <target state="translated">&lt;code&gt;process_id&lt;/code&gt; ：服务器进程的PID</target>
        </trans-unit>
        <trans-unit id="01197709a5335bdf7b938279bba3370a78eaa4e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;psub&lt;/code&gt;: number of pattern matching subscriptions</source>
          <target state="translated">&lt;code&gt;psub&lt;/code&gt; ：模式匹配预订的数量</target>
        </trans-unit>
        <trans-unit id="5d9782c719f3108a6648d4a697460354d47034e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pubsub_channels&lt;/code&gt;: Global number of pub/sub channels with client subscriptions</source>
          <target state="translated">&lt;code&gt;pubsub_channels&lt;/code&gt; ：具有客户端订阅的发布/订阅频道的总数</target>
        </trans-unit>
        <trans-unit id="d18b3633027d3c201e4b17aacba16c5886fee7ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pubsub_patterns&lt;/code&gt;: Global number of pub/sub pattern with client subscriptions</source>
          <target state="translated">&lt;code&gt;pubsub_patterns&lt;/code&gt; ：带有客户端订阅的发布/订阅模式的全局数量</target>
        </trans-unit>
        <trans-unit id="09a490885df7985f548424c575c27793c1e801cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;qbuf-free&lt;/code&gt;: free space of the query buffer (0 means the buffer is full)</source>
          <target state="translated">&lt;code&gt;qbuf-free&lt;/code&gt; ：查询缓冲区的可用空间（0表示缓冲区已满）</target>
        </trans-unit>
        <trans-unit id="e1eb072bfc64b27b4e211a82d13ebb8cf4b88ffd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;qbuf&lt;/code&gt;: query buffer length (0 means no query pending)</source>
          <target state="translated">&lt;code&gt;qbuf&lt;/code&gt; ：查询缓冲区长度（0表示没有查询挂起）</target>
        </trans-unit>
        <trans-unit id="49c7f37dd4cd7c1eef2f06a26ec6a39e6f1f9af7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rdb_bgsave_in_progress&lt;/code&gt;: Flag indicating a RDB save is on-going</source>
          <target state="translated">&lt;code&gt;rdb_bgsave_in_progress&lt;/code&gt; ：标志指示正在进行RDB保存</target>
        </trans-unit>
        <trans-unit id="92fe7954c975428c9f5ce862a86e9e6d556669a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rdb_changes_since_last_save&lt;/code&gt; refers to the number of operations that produced some kind of changes in the dataset since the last time either &lt;a href=&quot;save&quot;&gt;SAVE&lt;/a&gt; or &lt;a href=&quot;bgsave&quot;&gt;BGSAVE&lt;/a&gt; was called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e1b0e631149e31b0f9b8d6bac185af69540b23d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rdb_changes_since_last_save&lt;/code&gt;: Number of changes since the last dump</source>
          <target state="translated">&lt;code&gt;rdb_changes_since_last_save&lt;/code&gt; ：自上次转储以来的更改数</target>
        </trans-unit>
        <trans-unit id="5e167b550eaa7334a4af54871fb995b0b3d14833" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rdb_current_bgsave_time_sec&lt;/code&gt;: Duration of the on-going RDB save operation if any</source>
          <target state="translated">&lt;code&gt;rdb_current_bgsave_time_sec&lt;/code&gt; ：正在进行的RDB保存操作的持续时间（如果有）</target>
        </trans-unit>
        <trans-unit id="846322c9f133b635731fc1ad09c1e21e41814e1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rdb_last_bgsave_status&lt;/code&gt;: Status of the last RDB save operation</source>
          <target state="translated">&lt;code&gt;rdb_last_bgsave_status&lt;/code&gt; ：上次RDB保存操作的状态</target>
        </trans-unit>
        <trans-unit id="4ec4734db22843dfa1c0c6421831771884151288" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rdb_last_bgsave_time_sec&lt;/code&gt;: Duration of the last RDB save operation in seconds</source>
          <target state="translated">&lt;code&gt;rdb_last_bgsave_time_sec&lt;/code&gt; ：上次RDB保存操作的持续时间（以秒为单位）</target>
        </trans-unit>
        <trans-unit id="be124bd94d7dd238582a9b91439d97057cfe5476" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rdb_last_cow_size&lt;/code&gt;: The size in bytes of copy-on-write allocations during the last RBD save operation</source>
          <target state="translated">&lt;code&gt;rdb_last_cow_size&lt;/code&gt; ：在上一次RBD保存操作期间写时复制分配的大小（以字节为单位）</target>
        </trans-unit>
        <trans-unit id="9fa69d32fbd56417be035fb08ca5eca0195fb799" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rdb_last_cow_size&lt;/code&gt;: The size in bytes of copy-on-write allocations during the last RDB save operation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31ec0a2188669177796fd5ed7732b24095c34872" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rdb_last_save_time&lt;/code&gt;: Epoch-based timestamp of last successful RDB save</source>
          <target state="translated">&lt;code&gt;rdb_last_save_time&lt;/code&gt; ：上次成功保存RDB的基于纪元的时间戳</target>
        </trans-unit>
        <trans-unit id="357e259918283daebf12b43ef58e7238eb19408c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;redir&lt;/code&gt;: client id of current client tracking redirection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5830999758618fbec95f0cb84ec74b9013df9939" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;redis.breakpoint and redis.debug&lt;/code&gt; function in the context of the &lt;a href=&quot;https://redis.io/topics/ldb&quot;&gt;Redis Lua debugger&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;redis.breakpoint and redis.debug&lt;/code&gt; &lt;a href=&quot;https://redis.io/topics/ldb&quot;&gt;Redis Lua调试器&lt;/a&gt;上下文中的redis.breakpoint和redis.debug函数。</target>
        </trans-unit>
        <trans-unit id="f6cfa5a17847f90f659a75435f90fdf87414f735" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;redis.call()&lt;/code&gt; is similar to &lt;code&gt;redis.pcall()&lt;/code&gt;, the only difference is that if a Redis command call will result in an error, &lt;code&gt;redis.call()&lt;/code&gt; will raise a Lua error that in turn will force &lt;a href=&quot;eval&quot;&gt;EVAL&lt;/a&gt; to return an error to the command caller, while &lt;code&gt;redis.pcall&lt;/code&gt; will trap the error and return a Lua table representing the error.</source>
          <target state="translated">&lt;code&gt;redis.call()&lt;/code&gt; 与 &lt;code&gt;redis.pcall()&lt;/code&gt; 相似，唯一的区别是，如果Redis命令调用将导致错误，则 &lt;code&gt;redis.call()&lt;/code&gt; 将引发Lua错误，进而将迫使&lt;a href=&quot;eval&quot;&gt;EVAL&lt;/a&gt;返回错误到命令调用者，而 &lt;code&gt;redis.pcall&lt;/code&gt; 将捕获错误并返回代表错误的Lua表。</target>
        </trans-unit>
        <trans-unit id="cc1c903bdb48793f0e4f48c01b73479cb762bb36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;redis.error_reply(error_string)&lt;/code&gt; returns an error reply. This function simply returns a single field table with the &lt;code&gt;err&lt;/code&gt; field set to the specified string for you.</source>
          <target state="translated">&lt;code&gt;redis.error_reply(error_string)&lt;/code&gt; 返回错误回复。此函数仅返回一个字段表，其中 &lt;code&gt;err&lt;/code&gt; 字段设置为您指定的字符串。</target>
        </trans-unit>
        <trans-unit id="ae82951de9075482aaf5f1ae88227fb45a6550f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;redis.sha1hex&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;redis.sha1hex&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="9242be04d881f15c4a713681eb55c02628ce5b41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;redis.status_reply(status_string)&lt;/code&gt; returns a status reply. This function simply returns a single field table with the &lt;code&gt;ok&lt;/code&gt; field set to the specified string for you.</source>
          <target state="translated">&lt;code&gt;redis.status_reply(status_string)&lt;/code&gt; 返回状态回复。该函数仅返回一个字段表，其中 &lt;code&gt;ok&lt;/code&gt; 字段设置为您指定的字符串。</target>
        </trans-unit>
        <trans-unit id="95dffb65f94cfa6e4df78dc1f8106938d0a2b8e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;redis_build_id&lt;/code&gt;: The build id</source>
          <target state="translated">&lt;code&gt;redis_build_id&lt;/code&gt; ：构建ID</target>
        </trans-unit>
        <trans-unit id="4a5d613bfeccb609043a3093f50079862794e426" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;redis_git_dirty&lt;/code&gt;: Git dirty flag</source>
          <target state="translated">&lt;code&gt;redis_git_dirty&lt;/code&gt; ：Git脏标志</target>
        </trans-unit>
        <trans-unit id="be06e01599e134053f70a0365a7a6ffe0b546351" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;redis_git_sha1&lt;/code&gt;: Git SHA1</source>
          <target state="translated">&lt;code&gt;redis_git_sha1&lt;/code&gt; ：Git SHA1</target>
        </trans-unit>
        <trans-unit id="f4a6779415fbc51c11e3f399963af6fe485e8883" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;redis_mode&lt;/code&gt;: The server's mode (&quot;standalone&quot;, &quot;sentinel&quot; or &quot;cluster&quot;)</source>
          <target state="translated">&lt;code&gt;redis_mode&lt;/code&gt; ：服务器的模式（&amp;ldquo;独立&amp;rdquo;，&amp;ldquo;前哨&amp;rdquo;或&amp;ldquo;集群&amp;rdquo;）</target>
        </trans-unit>
        <trans-unit id="6d0cc6894f88d6a671c3cf47afe1c3a49b400f41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;redis_version&lt;/code&gt;: Version of the Redis server</source>
          <target state="translated">&lt;code&gt;redis_version&lt;/code&gt; ：Redis服务器的版本</target>
        </trans-unit>
        <trans-unit id="9d5b407137e452587ef4b30cbb1dffa17cb34b01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rejected_connections&lt;/code&gt;: Number of connections rejected because of &lt;code&gt;maxclients&lt;/code&gt; limit</source>
          <target state="translated">&lt;code&gt;rejected_connections&lt;/code&gt; ：由于 &lt;code&gt;maxclients&lt;/code&gt; 限制而被拒绝的连接数</target>
        </trans-unit>
        <trans-unit id="9261b493db72e9a8f282354e217ba34c5ad53405" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;repl_backlog_active&lt;/code&gt;: Flag indicating replication backlog is active</source>
          <target state="translated">&lt;code&gt;repl_backlog_active&lt;/code&gt; ：标志指示复制积压处于活动状态</target>
        </trans-unit>
        <trans-unit id="f65d25f6479576d1d8b26887d1fb13af0342f5d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;repl_backlog_first_byte_offset&lt;/code&gt;: The master offset of the replication backlog buffer</source>
          <target state="translated">&lt;code&gt;repl_backlog_first_byte_offset&lt;/code&gt; ：复制积压缓冲区的主偏移量</target>
        </trans-unit>
        <trans-unit id="bd97e1abe8b7a64c9bd426b10a483c5470f1c33c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;repl_backlog_histlen&lt;/code&gt;: Size in bytes of the data in the replication backlog buffer</source>
          <target state="translated">&lt;code&gt;repl_backlog_histlen&lt;/code&gt; ：复制积压缓冲区中数据的大小（以字节为单位）</target>
        </trans-unit>
        <trans-unit id="557cd508a8f74f5840ee1e5bbbf75af8aaba9343" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;repl_backlog_size&lt;/code&gt;: Total size in bytes of the replication backlog buffer</source>
          <target state="translated">&lt;code&gt;repl_backlog_size&lt;/code&gt; ：复制积压缓冲区的总大小（以字节为单位）</target>
        </trans-unit>
        <trans-unit id="6a9727ee6cf769f12aba8b2c3ca8d9de1e46e53d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replication.backlog&lt;/code&gt;: Size in bytes of the replication backlog (see &lt;a href=&quot;info&quot;&gt;INFO&lt;/a&gt;'s &lt;code&gt;repl_backlog_active&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a057f81f3ebf543b442081cf23f0e823d88e17de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replication.backlog&lt;/code&gt;: Size in bytes of the replication backlog (see &lt;a href=&quot;info&quot;&gt;INFO&lt;/a&gt;'s &lt;code&gt;repl_backlog_size&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;replication.backlog&lt;/code&gt; ：尺寸（参见复制积压的字节&lt;a href=&quot;info&quot;&gt;INFO&lt;/a&gt;的 &lt;code&gt;repl_backlog_size&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="f1c655643163a917b01bdcd322f040536467b197" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replication&lt;/code&gt;: Master/replica replication information</source>
          <target state="translated">&lt;code&gt;replication&lt;/code&gt; ：主/副本复制信息</target>
        </trans-unit>
        <trans-unit id="65df5fcdcc1925305889fd5c54411266ece07136" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resetchannels&lt;/code&gt;: removes all channel patterns from the list of Pub/Sub channel patterns the user can access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ee2315dc5d95730b9ebcdd7878d602513446e70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resetkeys&lt;/code&gt;: removes all the key patterns from the list of key patterns the user can access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4fda8cca4271f45584288721b06d5666e8e23f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;role&lt;/code&gt;: Value is &quot;master&quot; if the instance is replica of no one, or &quot;slave&quot; if the instance is a replica of some master instance. Note that a replica can be master of another replica (chained replication).</source>
          <target state="translated">&lt;code&gt;role&lt;/code&gt; ：如果实例是任何人的副本，则值为&amp;ldquo; master&amp;rdquo;；如果实例是某个主实例的副本，则为&amp;ldquo; slave&amp;rdquo;。请注意，一个副本可以是另一个副本的主副本（链接复制）。</target>
        </trans-unit>
        <trans-unit id="8fcb9fab53582ec8f7fcfeae342be7427032711d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;run_id&lt;/code&gt;: Random value identifying the Redis server (to be used by Sentinel and Cluster)</source>
          <target state="translated">&lt;code&gt;run_id&lt;/code&gt; ：标识Redis服务器的随机值（将由Sentinel和Cluster使用）</target>
        </trans-unit>
        <trans-unit id="2fc99f4ec57868b8f80a7e424052d862184fb904" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;second_repl_offset&lt;/code&gt;: The offset up to which replication IDs are accepted</source>
          <target state="translated">&lt;code&gt;second_repl_offset&lt;/code&gt; ：接受复制ID的偏移量</target>
        </trans-unit>
        <trans-unit id="b919add2279ee146a4b3e724e618e5340f0c5330" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;server&lt;/code&gt;: General information about the Redis server</source>
          <target state="translated">&lt;code&gt;server&lt;/code&gt; ：有关Redis服务器的常规信息</target>
        </trans-unit>
        <trans-unit id="89e5096ab88aceffb8212aef7189959a6955637b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;server_time_in_usec&lt;/code&gt;: Epoch-based system time with microsecond precision</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c3e299e02d66f7763bd03b36050606a98337677" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;slave&lt;/code&gt;: Node is a replica.</source>
          <target state="translated">&lt;code&gt;slave&lt;/code&gt; ：节点是副本。</target>
        </trans-unit>
        <trans-unit id="66ad5502d3be0f9a00c02cbbbce0c3d7f5b53b2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;slaveXXX&lt;/code&gt;: id, IP address, port, state, offset, lag</source>
          <target state="translated">&lt;code&gt;slaveXXX&lt;/code&gt; ：ID，IP地址，端口，状态，偏移量，滞后</target>
        </trans-unit>
        <trans-unit id="8590a5d28341df0626cb29b0328299f2bd613561" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;slave_expires_tracked_keys&lt;/code&gt;: The number of keys tracked for expiry purposes (applicable only to writable replicas)</source>
          <target state="translated">&lt;code&gt;slave_expires_tracked_keys&lt;/code&gt; ：为到期目的而跟踪的密钥数（仅适用于可写副本）</target>
        </trans-unit>
        <trans-unit id="b5d40a447d20543abadb672f27493ec5954585cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;slave_priority&lt;/code&gt;: The priority of the instance as a candidate for failover</source>
          <target state="translated">&lt;code&gt;slave_priority&lt;/code&gt; ：实例作为故障转移候选者的优先级</target>
        </trans-unit>
        <trans-unit id="12b3222be64789eded1e9e2d87b7eebc6d362e1c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;slave_read_only&lt;/code&gt;: Flag indicating if the replica is read-only</source>
          <target state="translated">&lt;code&gt;slave_read_only&lt;/code&gt; ：标志，指示副本是否为只读</target>
        </trans-unit>
        <trans-unit id="f78e6ef30c26728d64ec819ef78cee2c7eeecb35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;slave_repl_offset&lt;/code&gt;: The replication offset of the replica instance</source>
          <target state="translated">&lt;code&gt;slave_repl_offset&lt;/code&gt; ：副本实例的复制偏移量</target>
        </trans-unit>
        <trans-unit id="0dc07283433da9c75fa880f47921ded317a31db7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;slot&lt;/code&gt;: A hash slot number or range. Starting from argument number 9, but there may be up to 16384 entries in total (limit never reached). This is the list of hash slots served by this node. If the entry is just a number, is parsed as such. If it is a range, it is in the form &lt;code&gt;start-end&lt;/code&gt;, and means that the node is responsible for all the hash slots from &lt;code&gt;start&lt;/code&gt; to &lt;code&gt;end&lt;/code&gt; including the start and end values.</source>
          <target state="translated">&lt;code&gt;slot&lt;/code&gt; ：哈希槽号或范围。从参数编号9开始，但总共可能有多达16384个条目（从未达到限制）。这是此节点服务的哈希槽的列表。如果条目只是一个数字，则将其解析为数字。如果它是一个范围，它的形式是 &lt;code&gt;start-end&lt;/code&gt; ，以及装置，该节点负责从所有散列时隙 &lt;code&gt;start&lt;/code&gt; 到 &lt;code&gt;end&lt;/code&gt; ，包括开始和结束值。</target>
        </trans-unit>
        <trans-unit id="2ad93ec63621004e682aca5fc8cc051cc1f4308d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; can also be negative numbers indicating offsets from the end of the list, where &lt;code&gt;-1&lt;/code&gt; is the last element of the list, &lt;code&gt;-2&lt;/code&gt; the penultimate element and so on.</source>
          <target state="translated">&lt;code&gt;start&lt;/code&gt; 和 &lt;code&gt;end&lt;/code&gt; 也可以是负数，指示与列表末尾的偏移量，其中 &lt;code&gt;-1&lt;/code&gt; 是列表的最后一个元素， &lt;code&gt;-2&lt;/code&gt; 是倒数第二个元素，依此类推。</target>
        </trans-unit>
        <trans-unit id="07ea2259c89c349346cf2cd869db8cb79d5f74c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;start&lt;/code&gt; and &lt;code&gt;stop&lt;/code&gt; are &lt;strong&gt;inclusive ranges&lt;/strong&gt;, so for example &lt;code&gt;ZRANGE myzset 0 1&lt;/code&gt; will return both the first and the second element of the sorted set.</source>
          <target state="translated">&lt;code&gt;start&lt;/code&gt; 和 &lt;code&gt;stop&lt;/code&gt; 是&lt;strong&gt;包含范围&lt;/strong&gt;，因此例如 &lt;code&gt;ZRANGE myzset 0 1&lt;/code&gt; 将同时返回已排序集合的第一个和第二个元素。</target>
        </trans-unit>
        <trans-unit id="0ae7b1554f80d3f51903f1dff8325a408a1c655f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;startup.allocated&lt;/code&gt;: Initial amount of memory consumed by Redis at startup in bytes (see &lt;a href=&quot;info&quot;&gt;INFO&lt;/a&gt;'s &lt;code&gt;used_memory_startup&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;startup.allocated&lt;/code&gt; ：Redis在启动时消耗的初始内存量（以字节为单位）（请参阅&lt;a href=&quot;info&quot;&gt;INFO&lt;/a&gt;的 &lt;code&gt;used_memory_startup&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="aac658ac592bbf9956f86b4bac69afd3027558df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stats&lt;/code&gt;: General statistics</source>
          <target state="translated">&lt;code&gt;stats&lt;/code&gt; ：一般统计</target>
        </trans-unit>
        <trans-unit id="dc6e6dc03a40ad7a9125f38b3e026a8f3556d050" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt; lib.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; 库</target>
        </trans-unit>
        <trans-unit id="0aa667ebb47bb2b0fe1c8159a627ad9405def74b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;struct&lt;/code&gt; lib.</source>
          <target state="translated">&lt;code&gt;struct&lt;/code&gt; 库</target>
        </trans-unit>
        <trans-unit id="cf417ec8379e7520d81488517f3183736a01c2a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sub&lt;/code&gt;: number of channel subscriptions</source>
          <target state="translated">&lt;code&gt;sub&lt;/code&gt; ：频道订阅数</target>
        </trans-unit>
        <trans-unit id="15d05077570de6f81b3d6da791243510608db5c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sync_full&lt;/code&gt;: The number of full resyncs with replicas</source>
          <target state="translated">&lt;code&gt;sync_full&lt;/code&gt; ：与副本完全重新同步的次数</target>
        </trans-unit>
        <trans-unit id="4ee5a998d34ab5cad1998f3ebf567719bea12098" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sync_partial_err&lt;/code&gt;: The number of denied partial resync requests</source>
          <target state="translated">&lt;code&gt;sync_partial_err&lt;/code&gt; ：被拒绝的部分重新同步请求的数量</target>
        </trans-unit>
        <trans-unit id="d56fb4657b9d596dc7d0384ee7df8b86b275cd39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sync_partial_ok&lt;/code&gt;: The number of accepted partial resync requests</source>
          <target state="translated">&lt;code&gt;sync_partial_ok&lt;/code&gt; ：接受的部分重新同步请求的数量</target>
        </trans-unit>
        <trans-unit id="8b77b42cf8709c944a161998b16919cbde5e9bf8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;table&lt;/code&gt; lib.</source>
          <target state="translated">&lt;code&gt;table&lt;/code&gt; 库</target>
        </trans-unit>
        <trans-unit id="5f4c32aa62999ab55968bad6e6e4efa2abf72e32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tcp_port&lt;/code&gt;: TCP/IP listen port</source>
          <target state="translated">&lt;code&gt;tcp_port&lt;/code&gt; ：TCP / IP侦听端口</target>
        </trans-unit>
        <trans-unit id="904fe5f1ac4e4db4dda479f37fe4605aa72fcf2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tot-mem&lt;/code&gt;: total memory consumed by this client in its various buffers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a498bccca27f60dfda24f1e659686e8d0e830dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;total.allocated&lt;/code&gt;: Total number of bytes allocated by Redis using its allocator (see &lt;a href=&quot;info&quot;&gt;INFO&lt;/a&gt;'s &lt;code&gt;used_memory&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;total.allocated&lt;/code&gt; ：Redis使用其分配器分配的总字节数（请参阅&lt;a href=&quot;info&quot;&gt;INFO&lt;/a&gt;的 &lt;code&gt;used_memory&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="8732c8368635afc5fa8927a34d3dccabbdb65191" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;total_commands_processed&lt;/code&gt;: Total number of commands processed by the server</source>
          <target state="translated">&lt;code&gt;total_commands_processed&lt;/code&gt; ：服务器处理的命令总数</target>
        </trans-unit>
        <trans-unit id="bba102c4ab9c62037cd444acc6a549a4b9e8ad63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;total_connections_received&lt;/code&gt;: Total number of connections accepted by the server</source>
          <target state="translated">&lt;code&gt;total_connections_received&lt;/code&gt; ：服务器接受的连接总数</target>
        </trans-unit>
        <trans-unit id="d83068e206f7307d94a9bc1022cb8ab9b5f64256" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;total_forks&lt;/code&gt;: Total number of fork operations since the server start</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddb9178a813478a27e4593a26fff3a0f64d21fbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;total_net_input_bytes&lt;/code&gt;: The total number of bytes read from the network</source>
          <target state="translated">&lt;code&gt;total_net_input_bytes&lt;/code&gt; ：从网络读取的字节总数</target>
        </trans-unit>
        <trans-unit id="f2acfa27965fd73d49ec07d748f9b3cb6e09fbe6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;total_net_output_bytes&lt;/code&gt;: The total number of bytes written to the network</source>
          <target state="translated">&lt;code&gt;total_net_output_bytes&lt;/code&gt; ：写入网络的总字节数</target>
        </trans-unit>
        <trans-unit id="b8ae6397172f63245706d6e00f0a769d888f263b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;total_reads_processed&lt;/code&gt;: Total number of read events processed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffbec4c806f626a60a4cfe6af281d77a37b8bc37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;total_system_memory&lt;/code&gt;: The total amount of memory that the Redis host has</source>
          <target state="translated">&lt;code&gt;total_system_memory&lt;/code&gt; ：Redis主机拥有的内存总量</target>
        </trans-unit>
        <trans-unit id="31873b8d2809ee8ad0f6783fbe886c044ac76c6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;total_system_memory_human&lt;/code&gt;: Human readable representation of previous value</source>
          <target state="translated">&lt;code&gt;total_system_memory_human&lt;/code&gt; ：先前值的可读形式</target>
        </trans-unit>
        <trans-unit id="fb7948dcbe177ae1b024b855cc9dfbe5390aef57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;total_writes_processed&lt;/code&gt;: Total number of write events processed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="381792f4c3048d356d56009554576a2abeb871de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tracking_clients&lt;/code&gt;: Number of clients being tracked (&lt;a href=&quot;client-tracking&quot;&gt;CLIENT TRACKING&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21568a3bfb8f0f36758dc6083f7d615df21139ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tracking_total_items&lt;/code&gt;: Number of items, that is the sum of clients number for each key, that are being tracked</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b4583ea3b802ba8a2a781314e306b345c0d006c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tracking_total_keys&lt;/code&gt;: Number of keys being tracked by the server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e748a1f26d4e4ced34d3b01cc7fdb07e64e66073" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tracking_total_prefixes&lt;/code&gt;: Number of tracked prefixes in server's prefix table (only applicable for broadcast mode)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b118b4757401e1598e87eb7b6c3f8f276db134ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unexpected_error_replies&lt;/code&gt;: Number of unexpected error replies, that are types of errors from an AOF load or replication</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db781a30ee27c1d77274c222dc88bb433b11afbc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;uptime_in_days&lt;/code&gt;: Same value expressed in days</source>
          <target state="translated">&lt;code&gt;uptime_in_days&lt;/code&gt; ：相同的值（天）</target>
        </trans-unit>
        <trans-unit id="1d3efd1a0fc42457b2846dac85051e5e87a22e7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;uptime_in_seconds&lt;/code&gt;: Number of seconds since Redis server start</source>
          <target state="translated">&lt;code&gt;uptime_in_seconds&lt;/code&gt; ：自Redis服务器启动以来的秒数</target>
        </trans-unit>
        <trans-unit id="bb5cc56d21b4b399bf28e2d4ced848cedc2a3139" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;used_cpu_sys&lt;/code&gt;: System CPU consumed by the Redis server</source>
          <target state="translated">&lt;code&gt;used_cpu_sys&lt;/code&gt; ：Redis服务器消耗的系统CPU</target>
        </trans-unit>
        <trans-unit id="6d569724d89cfda91003844b75e183bdd906bc5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;used_cpu_sys&lt;/code&gt;: System CPU consumed by the Redis server, which is the sum of system CPU consumed by all threads of the server process (main thread and background threads)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b287b02ee3142edf7304f38f36d07536453e874" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;used_cpu_sys_children&lt;/code&gt;: System CPU consumed by the background processes</source>
          <target state="translated">&lt;code&gt;used_cpu_sys_children&lt;/code&gt; ：后台进程消耗的系统CPU</target>
        </trans-unit>
        <trans-unit id="21f11ba65a2773ebe0c8ef659d6a1ffa1fd42d2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;used_cpu_sys_main_thread&lt;/code&gt;: System CPU consumed by the Redis server main thread</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3e58d3a9e668c76dc2ab457a7ac3e52ec38676e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;used_cpu_user&lt;/code&gt;: User CPU consumed by the Redis server, which is the sum of user CPU consumed by all threads of the server process (main thread and background threads)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fac00be35e10304849ab0c04bb8d430ec4729f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;used_cpu_user&lt;/code&gt;:User CPU consumed by the Redis server</source>
          <target state="translated">&lt;code&gt;used_cpu_user&lt;/code&gt; ：Redis服务器消耗的用户CPU</target>
        </trans-unit>
        <trans-unit id="32e2bdff3caa89cf5c85a6fc4f65e29f75d7cb82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;used_cpu_user_children&lt;/code&gt;: User CPU consumed by the background processes</source>
          <target state="translated">&lt;code&gt;used_cpu_user_children&lt;/code&gt; ：后台进程消耗的用户CPU</target>
        </trans-unit>
        <trans-unit id="4cc4736c16fc254bddd47233986c61235a9faf5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;used_cpu_user_main_thread&lt;/code&gt;: User CPU consumed by the Redis server main thread</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77ca1a3d5b20d2fe23c4fa22849f242d4c267b4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;used_memory&lt;/code&gt;: Total number of bytes allocated by Redis using its allocator (either standard &lt;strong&gt;libc&lt;/strong&gt;, &lt;strong&gt;jemalloc&lt;/strong&gt;, or an alternative allocator such as &lt;a href=&quot;http://code.google.com/p/google-perftools/&quot;&gt;&lt;strong&gt;tcmalloc&lt;/strong&gt;&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;used_memory&lt;/code&gt; ：Redis使用其分配器（标准&lt;strong&gt;libc&lt;/strong&gt;，&lt;strong&gt;jemalloc&lt;/strong&gt;或其他分配器，例如&lt;a href=&quot;http://code.google.com/p/google-perftools/&quot;&gt;&lt;strong&gt;tcmalloc&lt;/strong&gt;&lt;/a&gt;）分配的字节总数。</target>
        </trans-unit>
        <trans-unit id="e5edb87c5fcdf155299748be8ed3a1d847dc6cf8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;used_memory_dataset&lt;/code&gt;: The size in bytes of the dataset (&lt;code&gt;used_memory_overhead&lt;/code&gt; subtracted from &lt;code&gt;used_memory&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;used_memory_dataset&lt;/code&gt; ：数据集的大小（以字节为 &lt;code&gt;used_memory&lt;/code&gt; ）（ &lt;code&gt;used_memory_overhead&lt;/code&gt; 从used_memory中减去）</target>
        </trans-unit>
        <trans-unit id="99463f967dca2170b9430687aa7dbdadaaa6e185" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;used_memory_dataset_perc&lt;/code&gt;: The percentage of &lt;code&gt;used_memory_dataset&lt;/code&gt; out of the net memory usage (&lt;code&gt;used_memory&lt;/code&gt; minus &lt;code&gt;used_memory_startup&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;used_memory_dataset_perc&lt;/code&gt; ： &lt;code&gt;used_memory_dataset&lt;/code&gt; 在净内存使用量中所占的百分比（ &lt;code&gt;used_memory&lt;/code&gt; 减去 &lt;code&gt;used_memory_startup&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="7a873e6bb787aea94d53809b33b1786346d9947a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;used_memory_human&lt;/code&gt;: Human readable representation of previous value</source>
          <target state="translated">&lt;code&gt;used_memory_human&lt;/code&gt; ：先前值的人类可读表示形式</target>
        </trans-unit>
        <trans-unit id="fca7c10926c6d6ae012fbedbc1f22b125c98a72d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;used_memory_lua&lt;/code&gt;: Number of bytes used by the Lua engine</source>
          <target state="translated">&lt;code&gt;used_memory_lua&lt;/code&gt; ：Lua引擎使用的字节数</target>
        </trans-unit>
        <trans-unit id="7d073a6daf2616a502a610857a51fabf502e5a35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;used_memory_lua_human&lt;/code&gt;: Human readable representation of previous value</source>
          <target state="translated">&lt;code&gt;used_memory_lua_human&lt;/code&gt; ：先前值的人类可读表示</target>
        </trans-unit>
        <trans-unit id="efb76ba4512345b95521d24d896546b1f24843e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;used_memory_overhead&lt;/code&gt;: The sum in bytes of all overheads that the server allocated for managing its internal data structures</source>
          <target state="translated">&lt;code&gt;used_memory_overhead&lt;/code&gt; ：服务器分配用于管理其内部数据结构的所有开销的总和（以字节为单位）</target>
        </trans-unit>
        <trans-unit id="03d2893cfc679a9464da447794034819fd2c6f44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;used_memory_peak&lt;/code&gt;: Peak memory consumed by Redis (in bytes)</source>
          <target state="translated">&lt;code&gt;used_memory_peak&lt;/code&gt; ：Redis消耗的峰值内存（以字节为单位）</target>
        </trans-unit>
        <trans-unit id="d6ccf6b76d558573e3c0fabfcc033f5c54af17d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;used_memory_peak_human&lt;/code&gt;: Human readable representation of previous value</source>
          <target state="translated">&lt;code&gt;used_memory_peak_human&lt;/code&gt; ：先前值的可读形式</target>
        </trans-unit>
        <trans-unit id="95c64fa74f4f378fb6165e87d12311fdb312106a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;used_memory_peak_perc&lt;/code&gt;: The percentage of &lt;code&gt;used_memory_peak&lt;/code&gt; out of &lt;code&gt;used_memory&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;used_memory_peak_perc&lt;/code&gt; ： &lt;code&gt;used_memory_peak&lt;/code&gt; 在 &lt;code&gt;used_memory&lt;/code&gt; 中所占的百分比</target>
        </trans-unit>
        <trans-unit id="3f221dda83245c669bda1e05655bd3ac2e0ab5f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;used_memory_rss&lt;/code&gt;: Number of bytes that Redis allocated as seen by the operating system (a.k.a resident set size). This is the number reported by tools such as &lt;code&gt;top(1)&lt;/code&gt; and &lt;code&gt;ps(1)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;used_memory_rss&lt;/code&gt; ：操作系统看到的Redis分配的字节数（aka驻留集大小）。这是诸如 &lt;code&gt;top(1)&lt;/code&gt; 和 &lt;code&gt;ps(1)&lt;/code&gt; 之类的工具报告的数字</target>
        </trans-unit>
        <trans-unit id="56f70f47101fda30eddf5ba143e549084227ebe8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;used_memory_rss_human&lt;/code&gt;: Human readable representation of previous value</source>
          <target state="translated">&lt;code&gt;used_memory_rss_human&lt;/code&gt; ：先前值的人类可读表示</target>
        </trans-unit>
        <trans-unit id="a4a8ca1c1e26697d33b86803c2cdfbdf68e1dfc1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;used_memory_scripts&lt;/code&gt;: Number of bytes used by cached Lua scripts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aae09b8c68830c081ead70e0e60de486862382bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;used_memory_scripts_human&lt;/code&gt;: Human readable representation of previous value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b409b28ae2a01206af36cb38e85fd023946f81d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;used_memory_startup&lt;/code&gt;: Initial amount of memory consumed by Redis at startup in bytes</source>
          <target state="translated">&lt;code&gt;used_memory_startup&lt;/code&gt; ：Redis在启动时消耗的初始内存量（以字节为单位）</target>
        </trans-unit>
        <trans-unit id="d702afbca51bb1f1c0b264975ec9e9ca2a5cb291" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;user&lt;/code&gt;: the authenticated username of the client</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7666b28ecf1aaa403c4c9fe8c4cadb678a1f039" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ver&lt;/code&gt;: Version of the module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="874c4d59a169c2d53f7c3ae429f5959f57146193" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;~&amp;lt;pattern&amp;gt;&lt;/code&gt;: add the specified key pattern (glob style pattern, like in the &lt;a href=&quot;keys&quot;&gt;KEYS&lt;/a&gt; command), to the list of key patterns accessible by the user. You can add multiple key patterns to the same user. Example: &lt;code&gt;~objects:*&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0779adce6efc8480503ae1ee70342fbc671c005f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note: starting with Redis 5, scripts are always replicated as effects and not sending the script verbatim. So the following section is mostly applicable to Redis version 4 or older.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;注意：从Redis 5开始，脚本始终作为效果复制，并且不逐字发送脚本。因此，以下部分主要适用于Redis版本4或更早版本。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e19535a094281f66a7c86327ed5e3682df604f43" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note: starting with Redis 5, the replication method described in this section (scripts effects replication) is the default and does not need to be explicitly enabled.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;注意：从Redis 5开始，本节中描述的复制方法（脚本效果复制）是默认方法，不需要显式启用。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e13dca6da1f5cb034512c6f89e682ac5a816871f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;admin&lt;/em&gt; - server admin command</source>
          <target state="translated">&lt;em&gt;admin-&lt;/em&gt;服务器管理命令</target>
        </trans-unit>
        <trans-unit id="10c2f31b9cb95d52492cefe272ee0ce7e7e96172" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;asking&lt;/em&gt; - cluster related - accept even if importing</source>
          <target state="translated">&lt;em&gt;询问&lt;/em&gt; -与群集相关-即使导入也接受</target>
        </trans-unit>
        <trans-unit id="fd143e082b45bd6d7de12217c454560c80ccbc41" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;denyoom&lt;/em&gt; - reject command if currently OOM</source>
          <target state="translated">&lt;em&gt;denyoom-&lt;/em&gt;如果当前是OOM，则拒绝命令</target>
        </trans-unit>
        <trans-unit id="22208566ecb85a6f473d3a0c82c02cca1f6156aa" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;denyoom&lt;/em&gt; - reject command if currently out of memory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cc88faeccf37dd9abce525d1e16c903b5653be7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fast&lt;/em&gt; - command operates in constant or log(N) time. Used for latency monitoring.</source>
          <target state="translated">&lt;em&gt;快速&lt;/em&gt; -命令以恒定时间或log（N）时间运行。用于延迟监视。</target>
        </trans-unit>
        <trans-unit id="d7a26816637799c11c50ca22e1c31e62cfdc3324" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;loading&lt;/em&gt; - allow command while database is loading</source>
          <target state="translated">&lt;em&gt;loading-&lt;/em&gt;数据库正在加载时允许命令</target>
        </trans-unit>
        <trans-unit id="35e295b11abb30e261e118848506ada08e20c863" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;movablekeys&lt;/em&gt; - keys have no pre-determined position. You must discover keys yourself.</source>
          <target state="translated">&lt;em&gt;可移动&lt;/em&gt;键-键没有预定位置。您必须自己发现密钥。</target>
        </trans-unit>
        <trans-unit id="10bef8487cc510b84ad65623659536dca2bd88e2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;noscript&lt;/em&gt; - deny this command from scripts</source>
          <target state="translated">&lt;em&gt;noscript-&lt;/em&gt;拒绝脚本中的此命令</target>
        </trans-unit>
        <trans-unit id="22ad5604ab4408792b4dbb6841391c73eb5bcd3e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pubsub&lt;/em&gt; - pubsub-related command</source>
          <target state="translated">&lt;em&gt;pubsub-&lt;/em&gt;与pubsub相关的命令</target>
        </trans-unit>
        <trans-unit id="4657f2c9a9b6147be79ff8861078f0a1c0f21dc9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;random&lt;/em&gt; - command has random results, dangerous for scripts</source>
          <target state="translated">&lt;em&gt;random-&lt;/em&gt;命令具有随机结果，对脚本来说很危险</target>
        </trans-unit>
        <trans-unit id="3952a7346643d82eda1f83fc8f67bd7841254782" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;readonly&lt;/em&gt; - command will never modify keys</source>
          <target state="translated">&lt;em&gt;只读&lt;/em&gt; -命令将永远不会修改键</target>
        </trans-unit>
        <trans-unit id="e5695fb2252476f28d156ffb338071b2a1d167d9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;skip_monitor&lt;/em&gt; - do not show this command in MONITOR</source>
          <target state="translated">&lt;em&gt;skip_monitor-&lt;/em&gt;在MONITOR中不显示此命令</target>
        </trans-unit>
        <trans-unit id="6e820b39ec4b2576d4194864a5c8cd2ba6855b08" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sort_for_script&lt;/em&gt; - if called from script, sort output</source>
          <target state="translated">&lt;em&gt;sort_for_script-&lt;/em&gt;如果从脚本调用，则对输出进行排序</target>
        </trans-unit>
        <trans-unit id="afaa4774ab65f2ceeccfa3570797867883f640b5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;stale&lt;/em&gt; - allow command while replica has stale data</source>
          <target state="translated">&lt;em&gt;陈旧&lt;/em&gt; -副本中包含陈旧数据时允许命令</target>
        </trans-unit>
        <trans-unit id="a314df10a9c4582edc32c3810d68e266cd2ff50f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;write&lt;/em&gt; - command may result in modifications</source>
          <target state="translated">&lt;em&gt;写&lt;/em&gt; -命令可能会导致修改</target>
        </trans-unit>
        <trans-unit id="42d17eeb4be4227b8e5ddf2b0e335361a9442b96" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;A note about the word slave used in this man page and command name&lt;/strong&gt;: Starting with Redis 5 this command: starting with Redis version 5, if not for backward compatibility, the Redis project no longer uses the word slave. Please use the new command &lt;a href=&quot;cluster-replicas&quot;&gt;CLUSTER REPLICAS&lt;/a&gt;. The command &lt;a href=&quot;slaveof&quot;&gt;SLAVEOF&lt;/a&gt; will continue to work for backward compatibility.</source>
          <target state="translated">&lt;strong&gt;有关此手册页和命令名称中使用的单词slave的注释&lt;/strong&gt;：从Redis 5开始，此命令：从Redis版本5开始，如果不是为了向后兼容，则Redis项目不再使用单词slave。请使用新命令&lt;a href=&quot;cluster-replicas&quot;&gt;CLUSTER REPLICAS&lt;/a&gt;。&lt;a href=&quot;slaveof&quot;&gt;SLAVEOF&lt;/a&gt;命令将继续起作用以实现向后兼容。</target>
        </trans-unit>
        <trans-unit id="22b987b44b7a5dd2e47b2e3eea2dfc49f06df3d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;A note about the word slave used in this man page and command name&lt;/strong&gt;: Starting with Redis 5 this command: starting with Redis version 5, if not for backward compatibility, the Redis project no longer uses the word slave. Please use the new command &lt;a href=&quot;replicaof&quot;&gt;REPLICAOF&lt;/a&gt;. The command &lt;a href=&quot;slaveof&quot;&gt;SLAVEOF&lt;/a&gt; will continue to work for backward compatibility.</source>
          <target state="translated">&lt;strong&gt;有关此手册页和命令名称中使用的单词slave的注释&lt;/strong&gt;：从Redis 5开始，此命令：从Redis版本5开始，如果不是为了向后兼容，则Redis项目不再使用单词slave。请使用新命令&lt;a href=&quot;replicaof&quot;&gt;REPLICAOF&lt;/a&gt;。&lt;a href=&quot;slaveof&quot;&gt;SLAVEOF&lt;/a&gt;命令将继续起作用以实现向后兼容。</target>
        </trans-unit>
        <trans-unit id="c99b58d7712fa94ddcaaec3a2960300b8a561396" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;A note about the word slave used in this man page and command name&lt;/strong&gt;: Starting with Redis 5, if not for backward compatibility, the Redis project no longer uses the word slave. Unfortunately in this command the word slave is part of the protocol, so we'll be able to remove such occurrences only when this API will be naturally deprecated.</source>
          <target state="translated">&lt;strong&gt;有关此手册页和命令名称中使用的slave一词的注释&lt;/strong&gt;：从Redis 5开始，如果不是为了向后兼容，则Redis项目将不再使用slave一词。不幸的是，在该命令中，&amp;ldquo; slave&amp;rdquo;一词是协议的一部分，因此，只有在该API自然被弃用的情况下，我们才能删除这种情况。</target>
        </trans-unit>
        <trans-unit id="1b440152e5e3583cee378a3b1e711d099bafed4a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;A note about the word slave used in this man page&lt;/strong&gt;: Starting with Redis 5, if not for backward compatibility, the Redis project no longer uses the word slave. Unfortunately in this command the word slave is part of the protocol, so we'll be able to remove such occurrences only when this API will be naturally deprecated.</source>
          <target state="translated">&lt;strong&gt;有关此手册页中使用的slave一词的注释&lt;/strong&gt;：从Redis 5开始，如果不是为了向后兼容，则Redis项目将不再使用slave一词。不幸的是，在该命令中，&amp;ldquo; slave&amp;rdquo;一词是协议的一部分，因此，只有在该API自然被弃用的情况下，我们才能删除这种情况。</target>
        </trans-unit>
        <trans-unit id="66dc6dfb23eee314b12cd2731c54cf1fcc6f78b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Available since 1.0.0.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;自1.0.0起可用。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bafcacc0e3c7960ad2cb8f503d72f30f78ca254b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Available since 1.0.1.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;从1.0.1开始可用。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="42ef041208b3c7f6b84ee588b6d7090649da3cde" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Available since 1.0.5.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;自1.0.5起可用。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2979205dcc40ec82cc62cbda6a41df44b1490b3d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Available since 1.2.0.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;自1.2.0起可用。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="28e1ed9a5b6011c62e872df0b23f6461d63b067c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Available since 2.0.0.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;自2.0.0起可用。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2856d7513ee771916c2aaae5a59c9760f4c9ee69" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Available since 2.2.0.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;自2.2.0起可用。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="97df2e6716f64385365f3793fe17b2b2b8c49250" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Available since 2.2.12.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;自2.2.12起可用。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2af9ad13d1bc44db9e41a723957913e50bb83c15" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Available since 2.2.3.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;从2.2.3开始可用。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2604a994ca379d977a81045288fcf1fb1a12b6eb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Available since 2.4.0.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;自2.4.0起可用。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4b3e52d68eec5b69a8580d7244b4cdd30126edfc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Available since 2.6.0.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;自2.6.0起可用。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ad155abecba93e556fc2964349d42546bbd57c37" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Available since 2.6.9.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;自2.6.9起可用。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="433a172e52c0f75503c2591c44f351278b8a2f1f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Available since 2.8.0.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;自2.8.0起可用。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="32a14135298102cba37c7a031f64183e68e7a403" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Available since 2.8.12.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;自2.8.12起可用。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="070bc5f809a6dcd424c69365545356941c2c87e0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Available since 2.8.13.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;自2.8.13起可用。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eeef4c5b6e8d514cf3970118cf5eecd9fc93d806" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Available since 2.8.7.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;自2.8.7起可用。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a139b314b3eeac41f2cb4b52b420d048c12b572d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Available since 2.8.9.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;自2.8.9起可用。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="110407b93d6631c2f87c8bcf0b09b41e5dd1585a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Available since 2.9.50.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;自2.9.50起可用。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="947745c28030ed2d02d2d6bf7ae0327d4548b7d5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Available since 3.0.0.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;自3.0.0起可用。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="000c6853ef4da627b8791fda02e7112106e57268" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Available since 3.2.0.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;自3.2.0起可用。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="248abe6dbbd5bde7dfe7a190fa8676bdabbee407" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Available since 3.2.1.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;自3.2.1起可用。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7787594e7b7fa02a64ea0ac1f47edf5c68240aa7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Available since 3.2.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;自3.2起可用。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="76c11f357d1203d366fa5e186202643c7f75fe3f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Available since 4.0.0.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;自4.0.0起可用。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fb77e7f9038cd769ce8cf62ccaacda589c6f003f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Available since 5.0.0.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;自5.0.0起可用。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4f5fc2f2faeb9db58eaba5c6db1620e3f4d51b2c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Available since 6.0.0.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="349e55c27c4a1f4de3a52296d6579958bfa5b15c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Available since 6.0.6.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f864e439fc87160a12122e5c8bf4d53ad092c0a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Available since 6.2.0.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53e7321eb80df80fcb4156061a619f522a8236c9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Available since 6.2.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37ad352b4b8a994d3447d680cfa6aac8d4baddae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CH&lt;/strong&gt;: Modify the return value from the number of new elements added, to the total number of elements changed (CH is an abbreviation of &lt;em&gt;changed&lt;/em&gt;). Changed elements are &lt;strong&gt;new elements added&lt;/strong&gt; and elements already existing for which &lt;strong&gt;the score was updated&lt;/strong&gt;. So elements specified in the command line having the same score as they had in the past are not counted. Note: normally the return value of &lt;a href=&quot;zadd&quot;&gt;ZADD&lt;/a&gt; only counts the number of new elements added.</source>
          <target state="translated">&lt;strong&gt;CH&lt;/strong&gt;：修改从加入新的元素，以改变元件的总数（CH是的缩写的数目返回值&lt;em&gt;改变&lt;/em&gt;）。更改的元素是&lt;strong&gt;添加的新元素&lt;/strong&gt;以及已&lt;strong&gt;更新其分数的&lt;/strong&gt;现有元素。因此，命令行中指定的具有与过去相同分数的元素将不计算在内。注意：通常，&lt;a href=&quot;zadd&quot;&gt;ZADD&lt;/a&gt;的返回值仅计算添加的新元素的数量。</target>
        </trans-unit>
        <trans-unit id="df8c1ee6b8ea782dadcbe9b7a6f6ee7e14cd37c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ERROR&lt;/strong&gt;: both C1 and C2 acquired the lock because of the race condition.</source>
          <target state="translated">&lt;strong&gt;错误&lt;/strong&gt;：由于竞争情况，C1和C2均获得了锁定。</target>
        </trans-unit>
        <trans-unit id="a87aecd8a98bb8da49b78363fdf6ad6d0ad4ad9b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;FAIL&lt;/strong&gt;: in this mode no operation is performed on overflows or underflows detected. The corresponding return value is set to NULL to signal the condition to the caller.</source>
          <target state="translated">&lt;strong&gt;失败&lt;/strong&gt;：在此模式下，对检测到的上溢或下溢不执行任何操作。相应的返回值设置为NULL，以将条件告知调用方。</target>
        </trans-unit>
        <trans-unit id="2f2e999f961e4cb70747a82c7afe1e1ac4d14dd0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;GET&lt;/strong&gt;&lt;code&gt;&amp;lt;type&amp;gt;&lt;/code&gt;&lt;code&gt;&amp;lt;offset&amp;gt;&lt;/code&gt; -- Returns the specified bit field.</source>
          <target state="translated">&lt;strong&gt;GET &lt;/strong&gt; &lt;code&gt;&amp;lt;type&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;offset&amp;gt;&lt;/code&gt; -返回指定的位字段。</target>
        </trans-unit>
        <trans-unit id="8af4667a1aad5a84d9ec8a060984b3b9f1bdf87f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;GT&lt;/strong&gt;: Only update existing elements if the new score is &lt;strong&gt;greater than&lt;/strong&gt; the current score. This flag doesn't prevent adding new elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a95ec0f36765c66b1ab2481704998d8a28483766" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Hard reset only&lt;/strong&gt;: &lt;code&gt;currentEpoch&lt;/code&gt; and &lt;code&gt;configEpoch&lt;/code&gt; vars are set to 0.</source>
          <target state="translated">&lt;strong&gt;仅硬重置&lt;/strong&gt;： &lt;code&gt;currentEpoch&lt;/code&gt; 和 &lt;code&gt;configEpoch&lt;/code&gt; var设置为0。</target>
        </trans-unit>
        <trans-unit id="a3dd45a98f533d02befd41f941271bbba011d7a2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Hard reset only&lt;/strong&gt;: a new Node ID is generated.</source>
          <target state="translated">&lt;strong&gt;仅硬重置&lt;/strong&gt;：生成新的节点ID。</target>
        </trans-unit>
        <trans-unit id="55df25f32f77293934878d2a89f464b77726ab0c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;INCR&lt;/strong&gt;: When this option is specified &lt;a href=&quot;zadd&quot;&gt;ZADD&lt;/a&gt; acts like &lt;a href=&quot;zincrby&quot;&gt;ZINCRBY&lt;/a&gt;. Only one score-element pair can be specified in this mode.</source>
          <target state="translated">&lt;strong&gt;INCR&lt;/strong&gt;：指定此选项后，&lt;a href=&quot;zadd&quot;&gt;ZADD的&lt;/a&gt;行为类似于&lt;a href=&quot;zincrby&quot;&gt;ZINCRBY&lt;/a&gt;。在此模式下只能指定一对得分元素。</target>
        </trans-unit>
        <trans-unit id="07a043543d639e8331184b587a20bbea7427d520" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;INCRBY&lt;/strong&gt;&lt;code&gt;&amp;lt;type&amp;gt;&lt;/code&gt;&lt;code&gt;&amp;lt;offset&amp;gt;&lt;/code&gt;&lt;code&gt;&amp;lt;increment&amp;gt;&lt;/code&gt; -- Increments or decrements (if a negative increment is given) the specified bit field and returns the new value.</source>
          <target state="translated">&lt;strong&gt;INCRBY &lt;/strong&gt; &lt;code&gt;&amp;lt;type&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;offset&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;increment&amp;gt;&lt;/code&gt; -递增或递减指定的位字段（如果给出负增量），并返回新值。</target>
        </trans-unit>
        <trans-unit id="e46a2f0474829b059fcc7d34e4ee9e4caec81736" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important note:&lt;/strong&gt; avoid debugging Lua scripts using your Redis production server. Use a development server instead.</source>
          <target state="translated">&lt;strong&gt;重要说明：&lt;/strong&gt;避免使用Redis生产服务器调试Lua脚本。请改用开发服务器。</target>
        </trans-unit>
        <trans-unit id="2ce5ee9654c6340e1e4eb82e8c83ddf58293784d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Importing slot:&lt;/strong&gt;&lt;code&gt;[slot_number-&amp;lt;-importing_from_node_id]&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;导入插槽：&lt;/strong&gt; &lt;code&gt;[slot_number-&amp;lt;-importing_from_node_id]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3012a85d56005df4704a75489bb8df125742014e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Importing&lt;/strong&gt; slots are yet not part of the nodes hash slot, there is a migration in progress. The node will accept queries about these slots only if the &lt;code&gt;ASK&lt;/code&gt; command is used.</source>
          <target state="translated">&lt;strong&gt;导入&lt;/strong&gt;插槽尚未成为节点哈希插槽的一部分，正在进行迁移。仅当使用 &lt;code&gt;ASK&lt;/code&gt; 命令时，节点才会接受有关这些插槽的查询。</target>
        </trans-unit>
        <trans-unit id="6c6c8886e8352c3a3901fd75105c549ff1c8badd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;In the above code there is a race condition&lt;/strong&gt;. If for some reason the client performs the &lt;a href=&quot;incr&quot;&gt;INCR&lt;/a&gt; command but does not perform the &lt;a href=&quot;expire&quot;&gt;EXPIRE&lt;/a&gt; the key will be leaked until we'll see the same IP address again.</source>
          <target state="translated">&lt;strong&gt;在上面的代码中有一个竞争条件&lt;/strong&gt;。如果由于某种原因客户端执行&lt;a href=&quot;incr&quot;&gt;INCR&lt;/a&gt;命令但未执行&lt;a href=&quot;expire&quot;&gt;EXPIRE，&lt;/a&gt;则密钥将被泄漏，直到我们再次看到相同的IP地址为止。</target>
        </trans-unit>
        <trans-unit id="b92dd4e0a23e32e06b39907323e24eca3f233f14" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;LT&lt;/strong&gt;: Only update existing elements if the new score is &lt;strong&gt;less than&lt;/strong&gt; the current score. This flag doesn't prevent adding new elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94c28e3e21fc5ed1f5a96b1b64379cfe1c35f660" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Lua to Redis&lt;/strong&gt; conversion table specific for RESP3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="080ca67a419bf57eb4ca474c2ead958e0b17c394" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Lua to Redis&lt;/strong&gt; conversion table.</source>
          <target state="translated">&lt;strong&gt;Lua到Redis的&lt;/strong&gt;转换表。</target>
        </trans-unit>
        <trans-unit id="594305ca901fa3745571fd4ea2d83b7d124a9536" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Migrating slot:&lt;/strong&gt;&lt;code&gt;[slot_number-&amp;gt;-migrating_to_node_id]&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;迁移插槽：&lt;/strong&gt; &lt;code&gt;[slot_number-&amp;gt;-migrating_to_node_id]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="85d815f21360631a4d040aed811d832f36975a50" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Migrating&lt;/strong&gt; slots are assigned to the node, but are being migrated to some other node. The node will accept queries if all the keys in the command exist already, otherwise it will emit what is called an &lt;strong&gt;ASK redirection&lt;/strong&gt;, to force new keys creation directly in the importing node.</source>
          <target state="translated">&lt;strong&gt;迁移&lt;/strong&gt;插槽已分配给该节点，但正在迁移到其他某个节点。如果命令中的所有键都已存在，则该节点将接受查询，否则它将发出所谓的&lt;strong&gt;ASK重定向&lt;/strong&gt;，以直接在导入节点中强制创建新的键。</target>
        </trans-unit>
        <trans-unit id="eae47eb67b82e2b9fc26c6a9ac32ec815c2935e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Modules generated sections&lt;/strong&gt;: Starting with Redis 6, modules can inject their info into the &lt;a href=&quot;info&quot;&gt;INFO&lt;/a&gt; command, these are excluded by default even when the &lt;code&gt;all&lt;/code&gt; argument is provided (it will include a list of loaded modules but not their generated info fields). To get these you must use either the &lt;code&gt;modules&lt;/code&gt; argument or &lt;code&gt;everything&lt;/code&gt;.,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4542730e02f1444f396e1eecd3fb084c50899588" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NX&lt;/strong&gt;: Don't update already existing elements. Always add new elements.</source>
          <target state="translated">&lt;strong&gt;NX&lt;/strong&gt;：不要更新现有元素。始终添加新元素。</target>
        </trans-unit>
        <trans-unit id="aa921920147c16c1008783f3ee79ad9ef35d5949" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Non standard return value&lt;/strong&gt;, a bulk transfer of the data followed by &lt;a href=&quot;ping&quot;&gt;PING&lt;/a&gt; and write requests from the master.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0e14174973d3f14160192d3ec335ea216ce5838" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Non standard return value&lt;/strong&gt;, just dumps the received commands in an infinite flow.</source>
          <target state="translated">&lt;strong&gt;非标准返回值&lt;/strong&gt;，只是无限地转储接收到的命令。</target>
        </trans-unit>
        <trans-unit id="4d1b440d6bea75ebf4fddb300ea88cb48bb7d506" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note that you should not rely on the fields exact position&lt;/strong&gt;, nor on the number of fields, new fields may be added in the future. So a well behaving client should fetch the whole list, and report it to the user, for example, as a dictionary data structure. Low level clients such as C clients where the items will likely be reported back in a linear array should document that the order is undefined.</source>
          <target state="translated">&lt;strong&gt;请注意，您不应该依赖字段的确切位置&lt;/strong&gt;，也不&lt;strong&gt;应该依赖字段&lt;/strong&gt;的数量，将来可能会添加新的字段。因此，行为良好的客户端应获取整个列表，并将其作为字典数据结构报告给用户。低级客户端（例如C客户端），这些项目很可能会以线性数组形式报告回去，因此应记录订单未定义。</target>
        </trans-unit>
        <trans-unit id="bf38dc5f18a7403e0505cd57203e709ee2e82876" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note: starting with Redis 5 the project is no longer using the slave word. You can use &lt;code&gt;TYPE replica&lt;/code&gt; instead, however the old form is still supported for backward compatibility.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;注意：从Redis 5开始，项目不再使用从站字。您可以改用 &lt;code&gt;TYPE replica&lt;/code&gt; ，但是仍旧支持旧格式以实现向后兼容。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="169026e4cfeed9baf12881fcf75891516330178a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Before Redis 3.2.0, an error is returned if source and destination names are the same.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;在Redis 3.2.0之前，如果源名称和目标名称相同，则会返回错误。</target>
        </trans-unit>
        <trans-unit id="48b058dcb40890f2ca5c1f12103c9113b5379791" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The following pattern is discouraged in favor of &lt;a href=&quot;http://redis.io/topics/distlock&quot;&gt;the Redlock algorithm&lt;/a&gt; which is only a bit more complex to implement, but offers better guarantees and is fault tolerant.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;不建议使用以下模式来支持&lt;a href=&quot;http://redis.io/topics/distlock&quot;&gt;Redlock算法&lt;/a&gt;，该算法实现起来稍微复杂一些，但是提供了更好的保证，并且具有容错能力。</target>
        </trans-unit>
        <trans-unit id="4ab4a67631aaba6fc476ea51d4c52e84df19e3e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The following pattern is discouraged in favor of &lt;a href=&quot;https://redis.io/topics/distlock&quot;&gt;the Redlock algorithm&lt;/a&gt; which is only a bit more complex to implement, but offers better guarantees and is fault tolerant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7f24abd7c8c85b89a11f7b735d84e40f293c0e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; config epoch management is performed internally by the cluster, and relies on obtaining a consensus of nodes. The &lt;a href=&quot;cluster-bumpepoch&quot;&gt;CLUSTER BUMPEPOCH&lt;/a&gt; attempts to increment the config epoch &lt;strong&gt;WITHOUT&lt;/strong&gt; getting the consensus, so using it may violate the &quot;last failover wins&quot; rule. Use it with caution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f681aa7bf2619cd8d4bc82a09fca69b97fed67c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; the doctor has erratic psychological behaviors, so we recommend interacting with it carefully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f902a881b716cf0d2a0b81af7f8e227f35550c2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; the implementation for getting a range of bit offsets from a bitmap is left as an exercise to the reader.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="480b1ec2a7ba19faaf34095bd31fd8c13e719460" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; there is no &lt;strong&gt;GEODEL&lt;/strong&gt; command because you can use &lt;a href=&quot;zrem&quot;&gt;ZREM&lt;/a&gt; in order to remove elements. The Geo index structure is just a sorted set.</source>
          <target state="translated">&lt;strong&gt;注意：&lt;/strong&gt;因为您可以使用&lt;a href=&quot;zrem&quot;&gt;ZREM&lt;/a&gt;来删除元素，所以没有&lt;strong&gt;GEODEL&lt;/strong&gt;命令。地理位置索引结构只是一个排序集。</target>
        </trans-unit>
        <trans-unit id="66410825f423db9b4d7ddad345a43a6851da1c99" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: because of the high performance nature of Redis, it is possible to try a lot of passwords in parallel in very short time, so make sure to generate a strong and very long password so that this attack is infeasible.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：由于Redis的高性能，可以在很短的时间内并行尝试许多密码，因此请确保生成一个强度很高且很长的密码，这样才能避免这种攻击。</target>
        </trans-unit>
        <trans-unit id="3fb677f73a8d550c5cfe4a23e805eeca4c57f6d0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: modules can also be loaded at server startup with &lt;code&gt;loadmodule&lt;/code&gt; configuration directive in &lt;code&gt;redis.conf&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e7b910f0576d349936d98bea109218640bde9ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: this is a string operation because Redis does not have a dedicated integer type. The string stored at the key is interpreted as a base-10 &lt;strong&gt;64 bit signed integer&lt;/strong&gt; to execute the operation.</source>
          <target state="translated">&lt;strong&gt;注意&lt;/strong&gt;：这是一个字符串操作，因为Redis没有专用的整数类型。存储在密钥处的字符串被解释为以10为基数的&lt;strong&gt;64位带符号整数&lt;/strong&gt;来执行该操作。</target>
        </trans-unit>
        <trans-unit id="7154ee5b1cdc329d8b78fa7fc770d684c0e65dcb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;OVERFLOW&lt;/strong&gt;&lt;code&gt;[WRAP|SAT|FAIL]&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;OVERFLOW&lt;/strong&gt;&lt;code&gt;[WRAP|SAT|FAIL]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e175dad8e0390b7908b5360d2ccd15b75eeca63a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Please note that:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;请注意：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="244fc08d3602d62e84927c3c5d301c8034317f18" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RESP3 mode conversion rules&lt;/strong&gt;: note that the Lua engine can work in RESP3 mode using the new Redis 6 protocol. In this case there are additional conversion rules, and certain conversions are also modified compared to the RESP2 mode. Please refer to the RESP3 section of this document for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e0adc4a9b1d2414f03da39a1ef041847c8b49b1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Redis to Lua&lt;/strong&gt; conversion table specific to RESP3:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f3ee1f33563f6776e77dae5878a039952e3dce8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Redis to Lua&lt;/strong&gt; conversion table.</source>
          <target state="translated">&lt;strong&gt;Redis到Lua的&lt;/strong&gt;转换表。</target>
        </trans-unit>
        <trans-unit id="dfe05bbd1f39f62442e2cbf4bde38def83156b1c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SAT&lt;/strong&gt;: uses saturation arithmetic, that is, on underflows the value is set to the minimum integer value, and on overflows to the maximum integer value. For example incrementing an &lt;code&gt;i8&lt;/code&gt; integer starting from value 120 with an increment of 10, will result into the value 127, and further increments will always keep the value at 127. The same happens on underflows, but towards the value is blocked at the most negative value.</source>
          <target state="translated">&lt;strong&gt;SAT&lt;/strong&gt;：使用饱和算法，即在下溢时将值设置为最小整数值，在上溢时将值设置为最大整数值。例如，从值120开始的 &lt;code&gt;i8&lt;/code&gt; 整数以10的增量递增，将得到值127，并且进一步的递增将始终将值保持在127。下溢时也会发生同样的情况，但朝该值的阻塞最大为负值。</target>
        </trans-unit>
        <trans-unit id="1408628eac488c273fe94ce3069837b4615f952e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SET&lt;/strong&gt;&lt;code&gt;&amp;lt;type&amp;gt;&lt;/code&gt;&lt;code&gt;&amp;lt;offset&amp;gt;&lt;/code&gt;&lt;code&gt;&amp;lt;value&amp;gt;&lt;/code&gt; -- Set the specified bit field and returns its old value.</source>
          <target state="translated">&lt;strong&gt;SET &lt;/strong&gt; &lt;code&gt;&amp;lt;type&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;offset&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;value&amp;gt;&lt;/code&gt; -设置指定的位字段并返回其旧值。</target>
        </trans-unit>
        <trans-unit id="154c3e795e5c1982b62afd2e5d5d6ba3b9edff78" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SHUTDOWN NOSAVE&lt;/strong&gt; will prevent a DB saving operation even if one or more save points are configured. (You can think of this variant as an hypothetical &lt;strong&gt;ABORT&lt;/strong&gt; command that just stops the server).</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;即使配置了一个或多个保存点，&lt;strong&gt;SHUTDOWN NOSAVE&lt;/strong&gt;也将阻止数据库保存操作。（您可以将此变体视为假设的&lt;strong&gt;ABORT&lt;/strong&gt;命令，该命令只是停止服务器）。</target>
        </trans-unit>
        <trans-unit id="9e5c55a7d3de34798b279180cf9d3cd081c884b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SHUTDOWN SAVE&lt;/strong&gt; will force a DB saving operation even if no save points are configured.</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt;即使未配置任何保存点，&lt;strong&gt;SHUTDOWN SAVE&lt;/strong&gt;也会强制执行数据库保存操作。</target>
        </trans-unit>
        <trans-unit id="556107b8e9768c921f3dec9b00b1054a332802e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The timeout argument is interpreted as a double value specifying the maximum number of seconds to block&lt;/strong&gt;. A timeout of zero can be used to block indefinitely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4908775239d52b8a249c687e49f93d0788e39894" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The timeout argument is interpreted as an integer value specifying the maximum number of seconds to block&lt;/strong&gt;. A timeout of zero can be used to block indefinitely.</source>
          <target state="translated">&lt;strong&gt;timeout参数解释为一个整数值，该值指定要阻止的最大秒数&lt;/strong&gt;。零超时可以无限期地阻塞。</target>
        </trans-unit>
        <trans-unit id="18c64c5033a261ea8682fefd1c4d266d085bb5af" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; Depends on the script that is executed.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt;取决于执行的脚本。</target>
        </trans-unit>
        <trans-unit id="65286337fbd95f12b6dbd7609bce419657c61278" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; For LCS O(strlen(s1)*strlen(s2))</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c297bf650da1f0e475df73b56cf1ac69d632e5d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; For each stream mentioned: O(M) with M being the number of elements returned. If M is constant (e.g. always asking for the first 10 elements with COUNT), you can consider it O(1). On the other side when XREADGROUP blocks, XADD will pay the O(N) time in order to serve the N clients blocked on the stream getting new data.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt;对于提到的每个流：O（M），M为返回的元素数。如果M为常数（例如，始终使用COUNT询问前10个元素），则可以将其视为O（1）。另一方面，当XREADGROUP阻塞时，XADD将付出O（N）时间，以便为在流上阻塞的N个客户端提供新数据提供服务。</target>
        </trans-unit>
        <trans-unit id="2a32c28191aa7b2da0b44dcbfa9f224c42c1f256" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; For each stream mentioned: O(N) with N being the number of elements being returned, it means that XREAD-ing with a fixed COUNT is O(1). Note that when the BLOCK option is used, XADD will pay O(M) time in order to serve the M clients blocked on the stream getting new data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd8b5ee7f2421c47e339ced1729fc4553418147c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; For each stream mentioned: O(N) with N being the number of elements being returned, it menas that XREAD-ing with a fixed COUNT is O(1). Note that when the BLOCK option is used, XADD will pay O(M) time in order to serve the M clients blocked on the stream getting new data.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt;对于提到的每个流：O（N），其中N为要返回的元素数，它表示具有固定COUNT的XREAD-ing为O（1）。请注意，使用BLOCK选项时，XADD将花费O（M）时间，以便为在流上被阻塞的M个客户端获取新数据提供服务。</target>
        </trans-unit>
        <trans-unit id="d1fd412d03fc2b530c2b27d7b45b0385a31cf6e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(1)</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（1）</target>
        </trans-unit>
        <trans-unit id="f9f66fd7aff4a34cf1299e1361ec8ace3be42cd6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(1) amortized time considering the typical user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55633d506fbeea6161b511b8a54465821794f5cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(1) for all the currently implemented subcommands.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt;所有当前实现的子命令为O（1）。</target>
        </trans-unit>
        <trans-unit id="b44242f4720bce6423a8ffc796b452d96e431af2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(1) for all the subcommands, with the exception of the DESTROY subcommand which takes an additional O(M) time in order to delete the M entries inside the consumer group pending entries list (PEL).</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt;所有子命令为O（1），但DESTROY子命令除外，该命令花费额外的O（M）时间才能删除使用者组未决条目列表（PEL）中的M个条目。</target>
        </trans-unit>
        <trans-unit id="520d8e26a668641abf11a642c0f43432b1535181" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(1) for each element added, so O(N) to add N elements when the command is called with multiple arguments.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt;每个添加的元素为O（1），因此当使用多个参数调用命令时，O（N）要添加N个元素。</target>
        </trans-unit>
        <trans-unit id="11406908c7956944d717e43c7d0204f76e70c476" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(1) for each field/value pair added, so O(N) to add N field/value pairs when the command is called with multiple field/value pairs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eb838dfbc1d23415a7fe8a01586a99b88c8b560" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(1) for each key removed regardless of its size. Then the command does O(N) work in a different thread in order to reclaim memory, where N is the number of allocations the deleted objects where composed of.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt;删除每个密钥的O（1）大小无关。然后，该命令在不同的线程中执行O（N）以便回收内存，其中N是组成删除对象的分配数。</target>
        </trans-unit>
        <trans-unit id="0ee729ae062b27a778521924a23715d1f5a2f8c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(1) for each message ID processed.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt;每个处理的消息ID的O（1）。</target>
        </trans-unit>
        <trans-unit id="1b4eeec474e03615439c6b07161a4a898251fa48" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(1) for each single item to delete in the stream, regardless of the stream size.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt;流中要删除的每个单个项目的O（1），无论流大小如何。</target>
        </trans-unit>
        <trans-unit id="3713a469f5558b38e0174355b7bd91512dde4739" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(1) for each subcommand specified</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt;每个指定的子命令为O（1）</target>
        </trans-unit>
        <trans-unit id="e32e66d8d957b6ef84d7d5e82b7e3681ca99b974" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(1) for every call. O(N) for a complete iteration, including enough command calls for the cursor to return back to 0. N is the number of elements inside the collection.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt;每次通话O（1）。O（N）表示完整的迭代，包括足以使游标返回到0的命令调用。N是集合内元素的数量。</target>
        </trans-unit>
        <trans-unit id="bd0e3bce04476c33f576529cb977579b2c937bb1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(1) for every call. O(N) for a complete iteration, including enough command calls for the cursor to return back to 0. N is the number of elements inside the collection..</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt;每次通话O（1）。O（N）表示完整的迭代，包括足以使游标返回到0的命令调用。N是集合内元素的数量。</target>
        </trans-unit>
        <trans-unit id="8bb7886d25c8e4f04cefc6d407e66e3510ca7843" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(1) for every key.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt;每个键为O（1）。</target>
        </trans-unit>
        <trans-unit id="8224beb67608f863bcc99e832bf3c09931c63e59" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(1) since the categories and commands are a fixed set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f894f0417f03c09ee9b529c74b588869f634d1f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(1) to access the key and additional O(N*M) to serialize it, where N is the number of Redis objects composing the value and M their average size. For small string values the time complexity is thus O(1)+O(1*M) where M is small, so simply O(1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e91064b0a93173883f68e80de9b9109a1b47c2be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(1) to access the key and additional O(N*M) to serialized it, where N is the number of Redis objects composing the value and M their average size. For small string values the time complexity is thus O(1)+O(1*M) where M is small, so simply O(1).</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（1）用于访问密钥，其他O（N * M）用于对其进行序列化，其中N是组成该值的Redis对象的数量，M是它们的平均大小。因此，对于较小的字符串值，时间复杂度为O（1）+ O（1 * M），其中M很小，因此简单地为O（1）。</target>
        </trans-unit>
        <trans-unit id="eb869fdd06f1e9c7503112a8348a9c6a6c3c32da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(1) to add every element.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（1）添加每个元素。</target>
        </trans-unit>
        <trans-unit id="000e7bfc4f0d59a7eca161f93d84ccfe59e93fba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(1) to create the new key and additional O(N*M) to reconstruct the serialized value, where N is the number of Redis objects composing the value and M their average size. For small string values the time complexity is thus O(1)+O(1*M) where M is small, so simply O(1). However for sorted set values the complexity is O(N*M*log(N)) because inserting values into sorted sets is O(log(N)).</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（1）用于创建新密钥，其他O（N * M）用于重建序列化的值，其中N是组成该值的Redis对象的数量，M是其平均大小。因此，对于较小的字符串值，时间复杂度为O（1）+ O（1 * M），其中M很小，因此简单地为O（1）。但是，对于排序的集合值，复杂度为O（N * M * log（N）），因为将值插入排序的集合中为O（log（N））。</target>
        </trans-unit>
        <trans-unit id="b9a90a5fd9bab0ece6d137f9d36c393b3e901d97" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(1) with a very small average constant time when called with a single key. O(N) with N being the number of keys, and much bigger constant times, when called with multiple keys.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt;用单个键调用时O（1）的平均恒定时间非常短。O（N），其中N是键的数目，并且在使用多个键调用时，常数时间要大得多。</target>
        </trans-unit>
        <trans-unit id="c45e1943b751714517205357e597c388c0f665c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(1), not counting the time taken to copy the new string in place. Usually, this string is very small so the amortized complexity is O(1). Otherwise, complexity is O(M) with M being the length of the value argument.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（1），不计算将新字符串复制到位所需的时间。通常，此字符串非常小，因此摊销后的复杂度为O（1）。否则，复杂度为O（M），其中M为值参数的长度。</target>
        </trans-unit>
        <trans-unit id="c4b651952550615d9e490f3dbbf7dc5130247335" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(1). The amortized time complexity is O(1) assuming the appended value is small and the already present value is of any size, since the dynamic string library used by Redis will double the free space available on every reallocation.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（1）。假设附加值很小并且已经存在的值具有任意大小，则摊余时间复杂度为O（1），因为Redis使用的动态字符串库会使每个重新分配上的可用空间加倍。</target>
        </trans-unit>
        <trans-unit id="bf3b7f496a65e5522b9dc1b7e669443ace377ffa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(L + (N-K)log(N)) worst case where L is the total number of elements in all the sets, N is the size of the first set, and K is the size of the result set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0395357e538314afbb36cc7212c8f51962579675" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(M*log(N)) with N being the number of elements in the sorted set and M the number of elements to be removed.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（M * log（N）），其中N是排序集中的元素数，M是要删除的元素数。</target>
        </trans-unit>
        <trans-unit id="9067f60dde5b44b871a9347672e48a72cd2cb2ef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N)</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（N）</target>
        </trans-unit>
        <trans-unit id="04a38332e56a66ff430f83f4bbdae1e73532033c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) for the CHANNELS subcommand, where N is the number of active channels, and assuming constant time pattern matching (relatively short channels and patterns). O(N) for the NUMSUB subcommand, where N is the number of requested channels. O(1) for the NUMPAT subcommand.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; CHANNELS子命令的O（N），其中N是活动通道的数量，并假设时间模式匹配恒定（相对短的通道和模式）。NUMSUB子命令的O（N），其中N是请求的通道数。NUMPAT子命令为O（1）。</target>
        </trans-unit>
        <trans-unit id="0a446809019f44c824a87ec9581f040ffb0e32cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) to merge N HyperLogLogs, but with high constant times.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（N）以合并N个HyperLogLogs，但具有较高的恒定时间。</target>
        </trans-unit>
        <trans-unit id="b8fbb556b46eccd9ee90a7247a1e35f67f98fd2e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) when N is number of commands to look up</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt;当N为要查询的命令数时为O（N）</target>
        </trans-unit>
        <trans-unit id="7959df06155f35b6ddc9b6d1feda06302841d77a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) where N is the length of the list.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（N），其中N是列表的长度。</target>
        </trans-unit>
        <trans-unit id="72642eae05e7dab533b332c5cc7043121b4eb448" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) where N is the length of the list. Setting either the first or the last element of the list is O(1).</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（N），其中N是列表的长度。将列表的第一个或最后一个元素设置为O（1）。</target>
        </trans-unit>
        <trans-unit id="54b950ebac0582811758a19da3a9877ce7ade111" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) where N is the length of the returned string. The complexity is ultimately determined by the returned length, but because creating a substring from an existing string is very cheap, it can be considered O(1) for small strings.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（N），其中N是返回字符串的长度。复杂度最终取决于返回的长度，但是由于从现有字符串创建子字符串非常便宜，因此对于小字符串，可以将其视为O（1）。</target>
        </trans-unit>
        <trans-unit id="164650944548afb8bc10f6f390aa97a27b1dd4ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) where N is the number of arguments to the command</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（N），其中N是命令的参数数量</target>
        </trans-unit>
        <trans-unit id="35c9a29ad1b88311937abb15a8aa02d7b6b2071f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) where N is the number of bytes in the key</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（N），其中N是密钥中的字节数</target>
        </trans-unit>
        <trans-unit id="9b705627d72f2e3b0a12c1259b2f056906d3a9f6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) where N is the number of channels to subscribe to.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（N），其中N是要订阅的频道数。</target>
        </trans-unit>
        <trans-unit id="2f83e12fae75f45cf5ac83c347c3bbc7ddee079d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) where N is the number of client connections</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（N），其中N是客户端连接数</target>
        </trans-unit>
        <trans-unit id="705360038b21dac13659c6816299b035d79d167b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) where N is the number of clients already subscribed to a channel.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（N），其中N是已订阅频道的客户端数。</target>
        </trans-unit>
        <trans-unit id="c8e85a4ca3be5f0915c51a03733ebbc7a372c660" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) where N is the number of elements being checked for membership</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05df09af2b3ccd9ebe0dace8258bd85ca953d5f9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) where N is the number of elements in the list, for the average case. When searching for elements near the head or the tail of the list, or when the MAXLEN option is provided, the command may run in constant time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be1754ab1e11a40303837cf8c6d9e5080c8b4d4a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) where N is the number of elements returned</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2d78dda8ec936c399d001d400dd7443b9ee0c51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) where N is the number of elements to be removed by the operation.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（N），其中N是要由操作删除的元素数。</target>
        </trans-unit>
        <trans-unit id="0c40ac5f4e7734966548a6b28cf6b09392f66af6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) where N is the number of elements to traverse before seeing the value pivot. This means that inserting somewhere on the left end on the list (head) can be considered O(1) and inserting somewhere on the right end (tail) is O(N).</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（N），其中N是看到值枢轴之前要遍历的元素数。这意味着在列表（头）左端的某处插入可以视为O（1），而在右端（尾部）的某处插入则认为O（N）。</target>
        </trans-unit>
        <trans-unit id="dbcd7d04c52b03234566b6cffd32fc24d56f81e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) where N is the number of elements to traverse to get to the element at index. This makes asking for the first or the last element of the list O(1).</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（N）其中N是要遍历才能到达索引处元素的元素数。这使得询问列表O（1）的第一个或最后一个元素。</target>
        </trans-unit>
        <trans-unit id="42c9869d291d0c82ca12d37bfb296709124a2c13" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) where N is the number of failure reports</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（N），其中N是故障报告的数量</target>
        </trans-unit>
        <trans-unit id="1725653c90b57cbd60fa6e80c674ffbcb0e5a30e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) where N is the number of fields being requested.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（N），其中N是请求的字段数。</target>
        </trans-unit>
        <trans-unit id="29cd5bade215dc7c3978dfc57c99ee8f499e6f6e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) where N is the number of fields being set.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（N），其中N是要设置的字段数。</target>
        </trans-unit>
        <trans-unit id="ac2510981dfbc42572f4253d3ef88c1e9b86a518" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) where N is the number of fields to be removed.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（N），其中N是要删除的字段数。</target>
        </trans-unit>
        <trans-unit id="c4ed0ee74b36a8a8a6b25ad9938bab2af27ed2f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) where N is the number of keys that will be removed. When a key to remove holds a value other than a string, the individual complexity for this key is O(M) where M is the number of elements in the list, set, sorted set or hash. Removing a single key that holds a string value is O(1).</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（N），其中N是将被删除的键的数量。当要删除的键包含字符串以外的值时，此键的单个复杂度为O（M），其中M是列表，集合，排序集合或哈希中元素的数量。删除包含字符串值的单个键为O（1）。</target>
        </trans-unit>
        <trans-unit id="bbd1ae90e162108290b25dbded69c117180e0d98" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) where N is the number of keys that will be touched.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（N），其中N是将要触摸的按键数。</target>
        </trans-unit>
        <trans-unit id="fdbd2fc9b2e398ad773c3eec1b76264cf5a60db4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) where N is the number of keys to retrieve.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（N），其中N是要检索的键的数目。</target>
        </trans-unit>
        <trans-unit id="a706ce590717441a0ad18f33b5fc106e514382b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) where N is the number of keys to set.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（N），其中N是要设置的键数。</target>
        </trans-unit>
        <trans-unit id="8ccf4d49a4b3207dc0caa665856d880472789cd4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) where N is the number of known nodes. The command may execute a FLUSHALL as a side effect.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（N），其中N是已知节点的数量。该命令可能会执行FLUSHALL作为副作用。</target>
        </trans-unit>
        <trans-unit id="234fbf7057a39690aac3e744557088f824f18eb9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) where N is the number of loaded modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eb7a9409bf0369b64fc75645b3e9c14e653d7ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) where N is the number of members being requested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3fe05d26b4346f8090d8c22849f30a16797b0db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) where N is the number of members to be removed.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（N），其中N是要删除的成员数。</target>
        </trans-unit>
        <trans-unit id="19a9d92a5f1801bdae13f9bb5335a5eee87a12d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) where N is the number of patterns the client is already subscribed to.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（N），其中N是客户端已预订的模式数。</target>
        </trans-unit>
        <trans-unit id="03c2b3882ec00e832d7bf4bd77cbcd9fdcace961" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) where N is the number of samples.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（N），其中N是样本数。</target>
        </trans-unit>
        <trans-unit id="88531e925e2a262fc6e01dce7370ffcc8ffe2aa6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) where N is the set cardinality.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（N）其中N是设置的基数。</target>
        </trans-unit>
        <trans-unit id="109fedc3e56bcb827556611a78c19db5912e0c01" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) where N is the size of the hash.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（N），其中N是散列的大小。</target>
        </trans-unit>
        <trans-unit id="baf0055deddfa2f324ba5f8192d8bc7ae7177c81" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) where N is the total number of Cluster nodes</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（N），其中N是群集节点的总数</target>
        </trans-unit>
        <trans-unit id="fbc1d10e31ece6bfe12f1012df99c1c058c772dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) where N is the total number of Redis commands</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（N），其中N是Redis命令的总数</target>
        </trans-unit>
        <trans-unit id="383099b00063b0f99b6c3494f9ebddcefbd84c6f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) where N is the total number of elements in all given sets.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（N）其中N是所有给定集合中元素的总数。</target>
        </trans-unit>
        <trans-unit id="1c69bede051d8ce4bce449d586cb3cccf85a3b93" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) where N is the total number of hash slot arguments</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（N），其中N是哈希槽参数的总数</target>
        </trans-unit>
        <trans-unit id="94b9de6b87d525f4593b39b91d061f1cfc031edb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) with N being the length in bytes of the script body.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（N），N为脚本主体的字节长度。</target>
        </trans-unit>
        <trans-unit id="fbd178cb887e9efcf3828efc845699fd78801bc2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) with N being the number of elements being returned. If N is constant (e.g. always asking for the first 10 elements with COUNT), you can consider it O(1).</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（N），N为要返回的元素数。如果N为常数（例如，始终要求使用COUNT来搜索前10个元素），则可以将其视为O（1）。</target>
        </trans-unit>
        <trans-unit id="8a4fbf27d75b5b5db8cc54e6e838410633f408ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) with N being the number of elements returned, so asking for a small fixed number of entries per call is O(1). O(M), where M is the total number of entries scanned when used with the IDLE filter. When the command returns just the summary and the list of consumers is small, it runs in O(1) time; otherwise, an additional O(N) time for iterating every consumer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef329378762b4fc8582540e6f4f372d96643c0a5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) with N being the number of elements returned, so asking for a small fixed number of entries per call is O(1). When the command returns just the summary it runs in O(1) time assuming the list of consumers is small, otherwise there is additional O(N) time needed to iterate every consumer.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（N），其中N为返回的元素数，因此每次调用要求固定的条目数为O（1）。当命令仅返回摘要时，假设使用者列表很小，则它以O（1）的时间运行，否则迭代每个使用者需要额外的O（N）时间。</target>
        </trans-unit>
        <trans-unit id="218df20463938b64222d151783fb6950614cef84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) with N being the number of elements returned. If N is constant (e.g. always asking for the first 10 elements with COUNT), you can consider it O(1).</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（N），其中N为返回的元素数。如果N为常数（例如，始终要求使用COUNT来搜索前10个元素），则可以将其视为O（1）。</target>
        </trans-unit>
        <trans-unit id="b769f2671bdcb91c429c85ba7049bb785fd4c85d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) with N being the number of entries shown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59133b1321947fe750ca1f0a99b2da85624821b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) with N being the number of keys in the database, under the assumption that the key names in the database and the given pattern have limited length.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（N），其中N为数据库中密钥的数目，假设数据库中的密钥名称和给定模式的长度有限。</target>
        </trans-unit>
        <trans-unit id="e812a95d6dc88a78e988d85e0cb241d393f6a9fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) with N being the number of returned items for the subcommands CONSUMERS and GROUPS. The STREAM subcommand is O(log N) with N being the number of items in the stream.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（N），其中N是子命令CONSUMERS和GROUPS返回的项数。STREAM子命令为O（log N），N为流中的项目数。</target>
        </trans-unit>
        <trans-unit id="0811266035ec21c353438938266dc4d45fea8c09" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) with N being the number of scripts in cache</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（N），N为缓存中的脚本数</target>
        </trans-unit>
        <trans-unit id="e5c63104f4af7f67dd0af60830b19ca65f07dc0b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) with N being the number of scripts to check (so checking a single script is an O(1) operation).</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（N），其中N是要检查的脚本数（因此，检查单个脚本是O（1）操作）。</target>
        </trans-unit>
        <trans-unit id="889ce28aded8be26ce965daeccff0e7ab6d4f60c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N) worst case for collections, where N is the number of nested items. O(1) for string values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c61928ca7fc032cf39eb98cafcca19529e956ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N)+O(M log(M)) with N being the sum of the sizes of the input sorted sets, and M being the number of elements in the resulting sorted set.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（N）+ O（M log（M）），其中N是输入排序集的大小之和，M是结果排序集中的元素数。</target>
        </trans-unit>
        <trans-unit id="5968318f2f90c1bfac421db9f175d780f07bf2f7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N)+O(M*log(M)) with N being the sum of the sizes of the input sorted sets, and M being the number of elements in the resulting sorted set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb8a0bd08cfdfeed7510f4650479d4f57d5c0b6c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N), with N being the number of evicted entries. Constant times are very small however, since entries are organized in macro nodes containing multiple entries that can be released with a single deallocation.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（N），其中N是被逐出条目的数量。但是，恒定时间非常短，因为条目是在包含多个条目的宏节点中组织的，这些条目可以通过一次取消分配就可以释放。</target>
        </trans-unit>
        <trans-unit id="81239567ddd1d1735121c38772afebeabf96f377" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N). Where N is the number of configured users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="911b4fa9a8329807caa0415ac3d7022ccc3d4ce9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N). Where N is the number of password, command and pattern rules that the user has.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e59bdd3196eb6852e3eaef33a3252a3b7a0272e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N). Where N is the number of rules provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdc1b429e79e5573e78c3286268eb194772e69ad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N*K)+O(M*log(M)) worst case with N being the smallest input sorted set, K being the number of input sorted sets and M being the number of elements in the resulting sorted set.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt;最差的情况是O（N * K）+ O（M * log（M）），其中N是最小的输入排序集合，K是输入排序集合的数量，M是结果排序集合中的元素数量。</target>
        </trans-unit>
        <trans-unit id="9c1deeffbcb58501a80a1b33d7e0d5e93a0d8cb4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N*M) worst case where N is the cardinality of the smallest set and M is the number of sets.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（N * M）最坏的情况，其中N是最小集合的基数，M是集合数。</target>
        </trans-unit>
        <trans-unit id="ffa0e56b07d12c63b932eed91b324ef8dd20295d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N+M) where N is the length of the list and M is the number of elements removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95a8b0c4cc096c7df1535211118cb125332a33c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N+M) where N is the number of clients subscribed to the receiving channel and M is the total number of subscribed patterns (by any client).</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（N + M），其中N是订阅接收通道的客户端数，M是订阅模式（任何客户端）的总数。</target>
        </trans-unit>
        <trans-unit id="da631a41fc16e91a37f4f1640efce1d728beecf3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N+M) where N is the number of patterns the client is already subscribed and M is the number of total patterns subscribed in the system (by any client).</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（N + M），其中N是客户端已预订的模式数量，M是系统中（由任何客户端）预订的总模式数量。</target>
        </trans-unit>
        <trans-unit id="1545563eee39efef7fdeb146aeb9455c2e173035" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N+M*log(M)) where N is the number of elements in the list or set to sort, and M the number of returned elements. When the elements are not sorted, complexity is currently O(N) as there is a copy step that will be avoided in next releases.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（N + M * log（M）），其中N是列表中或要排序的元素的数量，M是返回的元素的数量。如果不对元素进行排序，则当前的复杂度为O（N），因为在下一版本中将避免复制步骤。</target>
        </trans-unit>
        <trans-unit id="c66a53cba15cd2af0a1695247c3a0aa36e2adc99" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N+log(M)) where N is the number of elements in the grid-aligned bounding box area around the shape provided as the filter and M is the number of items inside the shape</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e20974426ea75cce3c73bf120e5bd4311bbf1748" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(N+log(M)) where N is the number of elements inside the bounding box of the circular area delimited by center and radius and M is the number of items inside the index.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（N + log（M）），其中N是圆形区域的边界框内的元素数，该元素由中心和半径界定，M是索引内的项数。</target>
        </trans-unit>
        <trans-unit id="0b1043d56167b21d4e14680e3c1b432e7de9950b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(S+N) where S is the distance of start offset from HEAD for small lists, from nearest end (HEAD or TAIL) for large lists; and N is the number of elements in the specified range.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（S + N）其中S是小列表到HEAD的起始偏移量，大列表到最近的头（HEAD或TAIL）的起始偏移量；N是指定范围内的元素数。</target>
        </trans-unit>
        <trans-unit id="61d4a476ee392abe69dfb6f735b32eff60ec2a6b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(log N) where N is the number of client connections</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（log N），其中N是客户端连接数</target>
        </trans-unit>
        <trans-unit id="0ba9000410dc73a0148976d8f1ca327c62a7ecf4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(log N) with N being the number of messages in the PEL of the consumer group.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（log N），N为使用者组PEL中的消息数。</target>
        </trans-unit>
        <trans-unit id="cf252527ef63c0a8016e53161f0802202a141a2d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(log(N))</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（log（N））</target>
        </trans-unit>
        <trans-unit id="3617beac7c8f278492f8ebb0822d7866ef5b53bc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(log(N)) for each item added, where N is the number of elements in the sorted set.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt;添加的每一项的O（log（N）），其中N是排序集中的元素数。</target>
        </trans-unit>
        <trans-unit id="1e9100580063c1e1be14b5cd61da6a708da5cacb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(log(N)) for each member requested, where N is the number of elements in the sorted set.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt;每个请求成员的O（log（N）），其中N是排序集中的元素数。</target>
        </trans-unit>
        <trans-unit id="c3d989bc3d0022508b657a626add9ede9b35fe13" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(log(N)) where N is the number of elements in the sorted set.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（log（N）），其中N是排序集中的元素数。</target>
        </trans-unit>
        <trans-unit id="a01464fde23d7922cd3181b2d140cdc060c292b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(log(N)) where N is the number of requested keys</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（log（N）），其中N是请求的密钥数</target>
        </trans-unit>
        <trans-unit id="0b83bd68ddbd557fa31d160256ac1ba5c07dca9b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(log(N)) with N being the number of elements in the sorted set.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（log（N）），其中N为排序集中元素的数量。</target>
        </trans-unit>
        <trans-unit id="b0ee3fe339d708213eb2152cfd0edecd6a23722f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(log(N)*M) with N being the number of elements in the sorted set, and M being the number of elements popped.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（log（N）* M），其中N是排序集中元素的数量，M是弹出元素的数量。</target>
        </trans-unit>
        <trans-unit id="c8bc61ab47c6f2e5c838fde185e75f06eaede6dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(log(N)+M) with N being the number of elements in the sorted set and M the number of elements being returned. If M is constant (e.g. always asking for the first 10 elements with LIMIT), you can consider it O(log(N)).</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（log（N）+ M），N为排序集中的元素数，M为要返回的元素数。如果M为常数（例如，始终要求使用LIMIT限制前10个元素），则可以将其视为O（log（N））。</target>
        </trans-unit>
        <trans-unit id="3b6424d2e3291317641637c912123d28b25281c4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(log(N)+M) with N being the number of elements in the sorted set and M the number of elements removed by the operation.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（log（N）+ M），其中N是排序集中的元素数，M是操作删除的元素数。</target>
        </trans-unit>
        <trans-unit id="09fbbe6797234161ea410530c85be0b791fc864e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; O(log(N)+M) with N being the number of elements in the sorted set and M the number of elements returned.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt; O（log（N）+ M），其中N为排序集中的元素数，M为返回的元素数。</target>
        </trans-unit>
        <trans-unit id="6959b6340adf97e5fa73bcc0f671fd9f65774e91" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; This command actually executes a DUMP+DEL in the source instance, and a RESTORE in the target instance. See the pages of these commands for time complexity. Also an O(N) data transfer between the two instances is performed.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt;该命令实际上在源实例中执行DUMP + DEL，而在目标实例中执行RESTORE。有关时间复杂度，请参见这些命令的页面。同样，在两个实例之间执行O（N）数据传输。</target>
        </trans-unit>
        <trans-unit id="7dcb22d963fb6fc6a195b9cae66b88a740647add" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time complexity:&lt;/strong&gt; Without the count argument O(1), otherwise O(N) where N is the absolute value of the passed count.</source>
          <target state="translated">&lt;strong&gt;时间复杂度：&lt;/strong&gt;没有count参数O（1），否则为O（N），其中N是传递的计数的绝对值。</target>
        </trans-unit>
        <trans-unit id="147dce46528f2f7b067e233aa55436c61d0c2c06" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;WRAP&lt;/strong&gt;: wrap around, both with signed and unsigned integers. In the case of unsigned integers, wrapping is like performing the operation modulo the maximum value the integer can contain (the C standard behavior). With signed integers instead wrapping means that overflows restart towards the most negative value and underflows towards the most positive ones, so for example if an &lt;code&gt;i8&lt;/code&gt; integer is set to the value 127, incrementing it by 1 will yield &lt;code&gt;-128&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;WRAP&lt;/strong&gt;：使用带符号和无符号整数环绕。对于无符号整数，自动换行就像对整数可以包含的最大值进行模运算（C标准行为）。如果使用带符号整数，则换行意味着溢出会重新向最大负值开始，而下溢向最大正值开始，因此例如，如果将 &lt;code&gt;i8&lt;/code&gt; 整数设置为值127，则将其递增1将产生 &lt;code&gt;-128&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b2f3c6e6f77042ca5e13377abb0968d262d33999" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; Newer versions of Redis Cluster will output, for each Redis instance, not just the IP and port, but also the node ID as third element of the array. In future versions there could be more elements describing the node better. In general a client implementation should just rely on the fact that certain parameters are at fixed positions as specified, but more parameters may follow and should be ignored. Similarly a client library should try if possible to cope with the fact that older versions may just have the IP and port parameter.</source>
          <target state="translated">&lt;strong&gt;警告：&lt;/strong&gt;对于每个Redis实例，较新版本的Redis Cluster将不仅输出IP和端口，还将输出节点ID作为阵列的第三个元素。在将来的版本中，可能会有更多的元素更好地描述节点。通常，客户端实现应仅依赖某些参数位于指定位置的固定位置这一事实，但是可能会出现更多参数，因此应将其忽略。同样，客户端库应尽可能解决旧版本可能仅具有IP和port参数这一事实。</target>
        </trans-unit>
        <trans-unit id="60988b111418a5e08cd285cd814fba43de4b4ca0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning&lt;/strong&gt;: When setting the last possible bit (&lt;em&gt;offset&lt;/em&gt; equal to 2&lt;sup&gt;32&lt;/sup&gt; -1) and the string value stored at &lt;em&gt;key&lt;/em&gt; does not yet hold a string value, or holds a small string value, Redis needs to allocate all intermediate memory which can block the server for some time. On a 2010 MacBook Pro, setting bit number 2&lt;sup&gt;32&lt;/sup&gt; -1 (512MB allocation) takes ~300ms, setting bit number 2&lt;sup&gt;30&lt;/sup&gt; -1 (128MB allocation) takes ~80ms, setting bit number 2&lt;sup&gt;28&lt;/sup&gt; -1 (32MB allocation) takes ~30ms and setting bit number 2&lt;sup&gt;26&lt;/sup&gt; -1 (8MB allocation) takes ~8ms. Note that once this first allocation is done, subsequent calls to &lt;a href=&quot;setbit&quot;&gt;SETBIT&lt;/a&gt; for the same &lt;em&gt;key&lt;/em&gt; will not have the allocation overhead.</source>
          <target state="translated">&lt;strong&gt;警告&lt;/strong&gt;：当设置最后一个可能的位（&lt;em&gt;偏移量&lt;/em&gt;等于2 &lt;sup&gt;32&lt;/sup&gt; -1）并且存储在&lt;em&gt;key&lt;/em&gt;处的字符串值尚未保存字符串值或保存较小的字符串值时，Redis需要分配所有可能阻塞内存的中间存储器。服务器一段时间。在2010 MacBook Pro上，设置位数2 &lt;sup&gt;32&lt;/sup&gt; -1（512MB分配）需花费约300ms，设置位数2 &lt;sup&gt;30&lt;/sup&gt; -1（128MB分配）需花费〜80ms，设置位数2 &lt;sup&gt;28&lt;/sup&gt; -1（32MB分配）需花费〜30ms并将位号2 &lt;sup&gt;26&lt;/sup&gt; -1（8MB分配）设置大约需要8ms。请注意，完成第一次分配后，随后将调用同一&lt;em&gt;密钥的&lt;/em&gt;&lt;a href=&quot;setbit&quot;&gt;SETBIT&lt;/a&gt;&lt;em&gt;&lt;/em&gt; 不会有分配开销。</target>
        </trans-unit>
        <trans-unit id="1cc9feb2e460988167276c1d1f2c4a7519bea033" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning&lt;/strong&gt;: When setting the last possible byte and the string value stored at &lt;em&gt;key&lt;/em&gt; does not yet hold a string value, or holds a small string value, Redis needs to allocate all intermediate memory which can block the server for some time. On a 2010 MacBook Pro, setting byte number 536870911 (512MB allocation) takes ~300ms, setting byte number 134217728 (128MB allocation) takes ~80ms, setting bit number 33554432 (32MB allocation) takes ~30ms and setting bit number 8388608 (8MB allocation) takes ~8ms. Note that once this first allocation is done, subsequent calls to &lt;a href=&quot;setrange&quot;&gt;SETRANGE&lt;/a&gt; for the same &lt;em&gt;key&lt;/em&gt; will not have the allocation overhead.</source>
          <target state="translated">&lt;strong&gt;警告&lt;/strong&gt;：当设置最后一个可能的字节并且存储在&lt;em&gt;key&lt;/em&gt;处的字符串值尚未保存字符串值或保存较小的字符串值时，Redis需要分配所有可能阻塞服务器一段时间的中间存储器。在2010 MacBook Pro上，设置字节号536870911（分配512MB）需约300ms，设置字节号134217728（分配128MB）需约80ms，设置位号33554432（分配32MB）需约30ms，设置位号8388608（分配8MB）大约需要8ms。请注意，完成此第一次分配后，对同一&lt;em&gt;密钥的&lt;/em&gt;&lt;a href=&quot;setrange&quot;&gt;SETRANGE的&lt;/a&gt;后续调用将没有分配开销。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cc795566bfbbbe6af9c65583f2a47cdaddd23f92" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning&lt;/strong&gt;: consider &lt;a href=&quot;keys&quot;&gt;KEYS&lt;/a&gt; as a command that should only be used in production environments with extreme care. It may ruin performance when it is executed against large databases. This command is intended for debugging and special operations, such as changing your keyspace layout. Don't use &lt;a href=&quot;keys&quot;&gt;KEYS&lt;/a&gt; in your regular application code. If you're looking for a way to find keys in a subset of your keyspace, consider using &lt;a href=&quot;scan&quot;&gt;SCAN&lt;/a&gt; or &lt;a href=&quot;https://redis.io/topics/data-types#sets&quot;&gt;sets&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;警告&lt;/strong&gt;：将&lt;a href=&quot;keys&quot;&gt;KEYS&lt;/a&gt;视为命令，仅应在生产环境中格外小心使用。在大型数据库上执行时，可能会破坏性能。此命令用于调试和特殊操作，例如更改键空间布局。不要在常规应用程序代码中使用&lt;a href=&quot;keys&quot;&gt;KEYS&lt;/a&gt;。如果您正在寻找一种在键空间的子集中查找键的方法，请考虑使用&lt;a href=&quot;scan&quot;&gt;SCAN&lt;/a&gt;或&lt;a href=&quot;https://redis.io/topics/data-types#sets&quot;&gt;sets&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e8bd7e5fae76f9719ccdb7cd784632dfb7da420a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning&lt;/strong&gt;: this command was renamed to &lt;a href=&quot;getrange&quot;&gt;GETRANGE&lt;/a&gt;, it is called &lt;code&gt;SUBSTR&lt;/code&gt; in Redis versions &lt;code&gt;&amp;lt;= 2.0&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;警告&lt;/strong&gt;：此命令已重命名为&lt;a href=&quot;getrange&quot;&gt;GETRANGE&lt;/a&gt;，在Redis版本 &lt;code&gt;&amp;lt;= 2.0&lt;/code&gt; 称为 &lt;code&gt;SUBSTR&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="56894dc250c01689ce8089e2e0329a40fd8dd202" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;XX&lt;/strong&gt;: Only update elements that already exist. Never add elements.</source>
          <target state="translated">&lt;strong&gt;XX&lt;/strong&gt;：仅更新已经存在的元素。切勿添加元素。</target>
        </trans-unit>
        <trans-unit id="79f2215b8211f0266085dd38bf62ef277714a037" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;flags&lt;/strong&gt;: A list of tracking flags used by the connection. The flags and their meanings are as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bff7d4c72f517ddfeda551b647e8e7d1217bc74" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ft&lt;/strong&gt; for feet.</source>
          <target state="translated">&lt;strong&gt;英尺&lt;/strong&gt;英尺。</target>
        </trans-unit>
        <trans-unit id="8f7d99307167d9151fd26962853701edfbb5519b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;km&lt;/strong&gt; for kilometers.</source>
          <target state="translated">&lt;strong&gt;公里&lt;/strong&gt;为公里。</target>
        </trans-unit>
        <trans-unit id="39044bc6a455c022d39a0d72ae45f195d8b8c1b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;m&lt;/strong&gt; for meters.</source>
          <target state="translated">&lt;strong&gt;米&lt;/strong&gt;为米。</target>
        </trans-unit>
        <trans-unit id="38968a64d0a0bdede6ba3cbc6aaa2f8a596ba38b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mi&lt;/strong&gt; for miles.</source>
          <target state="translated">&lt;strong&gt;英里&lt;/strong&gt;数英里。</target>
        </trans-unit>
        <trans-unit id="f65ab91ff705eaf146385fb92e3f79cd354cc871" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;prefixes&lt;/strong&gt;: A list of key prefixes for which notifications are sent to the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5d5889b4f35b20aa026439c189327fda685cba3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;redirect&lt;/strong&gt;: The client ID used for notifications redirection, or -1 when none.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1d42ce2c0a6643ac20a613b522833d936ce6141" translate="yes" xml:space="preserve">
          <source>@example:</source>
          <target state="translated">@example:</target>
        </trans-unit>
        <trans-unit id="fe6b32ebf673080ac2625dc05bc8a2f62d943f4e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;nil&lt;/code&gt; multi-bulk when no element could be popped and the timeout expired.</source>
          <target state="translated">甲 &lt;code&gt;nil&lt;/code&gt; 当没有元件可以被弹出多批量和超时过期。</target>
        </trans-unit>
        <trans-unit id="f954a25307e91dd61c331fb6ced8f1d1b49d2dc9" translate="yes" xml:space="preserve">
          <source>A client can acquire the lock if the above command returns &lt;code&gt;OK&lt;/code&gt; (or retry after some time if the command returns Nil), and remove the lock just using &lt;a href=&quot;del&quot;&gt;DEL&lt;/a&gt;.</source>
          <target state="translated">如果以上命令返回 &lt;code&gt;OK&lt;/code&gt; ,则客户端可以获取锁（如果命令返回Nil，则可以在一段时间后重试），然后仅使用&lt;a href=&quot;del&quot;&gt;DEL即可&lt;/a&gt;删除该锁。</target>
        </trans-unit>
        <trans-unit id="9e66fa09299df120a7f69c64e83980359faba0b3" translate="yes" xml:space="preserve">
          <source>A client may be able to check if the operation succeeded using the &lt;a href=&quot;lastsave&quot;&gt;LASTSAVE&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1557c0a8f4b2cceda8fceff02fc1420f6f4eff1c" translate="yes" xml:space="preserve">
          <source>A client may use GETSET in order to atomically get the current counter value and reset it to zero.</source>
          <target state="translated">客户端可以使用GETSET来原子化地获取当前计数器的值并将其重置为零。</target>
        </trans-unit>
        <trans-unit id="68a796147e39e14a8a80bf764ddfd90ce6919a38" translate="yes" xml:space="preserve">
          <source>A common pattern is to call &lt;a href=&quot;script-load&quot;&gt;SCRIPT LOAD&lt;/a&gt; to load all the scripts that will appear in a pipeline, then use &lt;a href=&quot;evalsha&quot;&gt;EVALSHA&lt;/a&gt; directly inside the pipeline without any need to check for errors resulting from the script hash not being recognized.</source>
          <target state="translated">一种常见的模式是调用&lt;a href=&quot;script-load&quot;&gt;SCRIPT LOAD&lt;/a&gt;来加载将出现在管道中的所有脚本，然后直接在管道内部使用&lt;a href=&quot;evalsha&quot;&gt;EVALSHA&lt;/a&gt;，而无需检查由于无法识别脚本哈希而导致的错误。</target>
        </trans-unit>
        <trans-unit id="476c40353d34c43082faec86bb0fe02b5da4c638" translate="yes" xml:space="preserve">
          <source>A common use of &lt;a href=&quot;ltrim&quot;&gt;LTRIM&lt;/a&gt; is together with &lt;a href=&quot;lpush&quot;&gt;LPUSH&lt;/a&gt; / &lt;a href=&quot;rpush&quot;&gt;RPUSH&lt;/a&gt;. For example:</source>
          <target state="translated">&lt;a href=&quot;ltrim&quot;&gt;LTRIM&lt;/a&gt;与&lt;a href=&quot;lpush&quot;&gt;LPUSH&lt;/a&gt; / &lt;a href=&quot;rpush&quot;&gt;RPUSH&lt;/a&gt;共同使用。例如：</target>
        </trans-unit>
        <trans-unit id="2ffc2830e7247029a8f3dd963d6dc9ccb6bc1e19" translate="yes" xml:space="preserve">
          <source>A consumer can be destroyed completely by using the following form:</source>
          <target state="translated">消费者可以通过以下形式彻底销毁。</target>
        </trans-unit>
        <trans-unit id="6f4f5def69a34383d0c0ba099fdc329e197223e5" translate="yes" xml:space="preserve">
          <source>A consumer group can be destroyed completely by using the following form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39aaf38b13fe32608e93e62cb065f0bce6d7d689" translate="yes" xml:space="preserve">
          <source>A does no longer known node D (see step 3), so it starts an handshake with D.</source>
          <target state="translated">A确实不再知道节点D(见步骤3),所以它开始与D握手。</target>
        </trans-unit>
        <trans-unit id="1ff437bc625fc822edf5fa54a7c14c51cb9019e8" translate="yes" xml:space="preserve">
          <source>A few more details:</source>
          <target state="translated">还有一些细节。</target>
        </trans-unit>
        <trans-unit id="e03e2d0aaad7167505a0638399e7a4066ed67ed8" translate="yes" xml:space="preserve">
          <source>A few remarks:</source>
          <target state="translated">我想说几句。</target>
        </trans-unit>
        <trans-unit id="d21e3dd0e34aa1b90513d361d662f4d66565fe3b" translate="yes" xml:space="preserve">
          <source>A full iteration always retrieves all the elements that were present in the collection from the start to the end of a full iteration. This means that if a given element is inside the collection when an iteration is started, and is still there when an iteration terminates, then at some point &lt;a href=&quot;scan&quot;&gt;SCAN&lt;/a&gt; returned it to the user.</source>
          <target state="translated">完整迭代始终会检索从完整迭代开始到结束的集合中存在的所有元素。这意味着，如果某个给定元素在开始迭代时位于集合内，而在迭代终止时仍然存在，则&lt;a href=&quot;scan&quot;&gt;SCAN&lt;/a&gt;有时会将其返回给用户。</target>
        </trans-unit>
        <trans-unit id="5ea8259e546c110ba56b58d1a577aee64262f6ae" translate="yes" xml:space="preserve">
          <source>A full iteration never returns any element that was NOT present in the collection from the start to the end of a full iteration. So if an element was removed before the start of an iteration, and is never added back to the collection for all the time an iteration lasts, &lt;a href=&quot;scan&quot;&gt;SCAN&lt;/a&gt; ensures that this element will never be returned.</source>
          <target state="translated">从完整迭代的开始到结束，完整迭代永远不会返回集合中不存在的任何元素。因此，如果元素在迭代开始之前被删除，并且在迭代持续的所有时间内都从未添加回集合中，则&lt;a href=&quot;scan&quot;&gt;SCAN&lt;/a&gt;确保该元素永远不会返回。</target>
        </trans-unit>
        <trans-unit id="c74bd09914eb3c14414c0bb5129eab13261f0d53" translate="yes" xml:space="preserve">
          <source>A given element may be returned multiple times. It is up to the application to handle the case of duplicated elements, for example only using the returned elements in order to perform operations that are safe when re-applied multiple times.</source>
          <target state="translated">一个给定的元素可能会被多次返回。由应用程序来处理重复元素的情况,例如只使用返回的元素,以便在多次重复应用时执行安全的操作。</target>
        </trans-unit>
        <trans-unit id="32f5993390055907ef7db78baaadce5c67d04be3" translate="yes" xml:space="preserve">
          <source>A key is passively expired simply when some client tries to access it, and the key is found to be timed out.</source>
          <target state="translated">一个密钥被动地过期,只是当一些客户端试图访问它时,发现该密钥已超时。</target>
        </trans-unit>
        <trans-unit id="3e57f13b09da6c6eb207460804c98b55825c2f9d" translate="yes" xml:space="preserve">
          <source>A manual failover is a special kind of failover that is usually executed when there are no actual failures, but we wish to swap the current master with one of its replicas (which is the node we send the command to), in a safe way, without any window for data loss. It works in the following way:</source>
          <target state="translated">手动故障切换是一种特殊的故障切换,通常是在没有实际故障的情况下执行,但我们希望以安全的方式将当前主站与它的一个副本(也就是我们发送命令的节点)交换,没有任何数据丢失的窗口。它的工作方式如下。</target>
        </trans-unit>
        <trans-unit id="5eb7eb4b7c9af1e8cd4b04308f1be845c7ce2454" translate="yes" xml:space="preserve">
          <source>A multi bulk reply containing two elements:</source>
          <target state="translated">一个包含两个要素的多重批量回复。</target>
        </trans-unit>
        <trans-unit id="95185c923ff66d3971c363a0323cd29e0c25489f" translate="yes" xml:space="preserve">
          <source>A node flags another node with &lt;code&gt;PFAIL&lt;/code&gt; when the node is not reachable for a time greater than the configured &lt;em&gt;node timeout&lt;/em&gt;, which is a fundamental configuration parameter of a Redis Cluster.</source>
          <target state="translated">当某个节点在超过配置的&lt;em&gt;节点超时时间&lt;/em&gt;（该时间是Redis群集的基本配置参数）之后无法访问时，该节点将使用 &lt;code&gt;PFAIL&lt;/code&gt; 标记另一个节点。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8c45c3a601d1105d05600d28edf7cbc3726d0fee" translate="yes" xml:space="preserve">
          <source>A replica will always accept the command, assuming that:</source>
          <target state="translated">复制品将始终接受命令,假设。</target>
        </trans-unit>
        <trans-unit id="fa3bae76123b4add6aeab64ce12d553400e1ce76" translate="yes" xml:space="preserve">
          <source>A replica with AOF enabled, reconnected with its master, performed a full resynchronization, and restarted the AOF file, triggering the initial AOF creation process. In this case not completing the AOF rewrite is dangerous because the latest dataset received from the master would be lost. The new master can actually be even a different instance (if the &lt;strong&gt;REPLICAOF&lt;/strong&gt; or &lt;strong&gt;SLAVEOF&lt;/strong&gt; command was used in order to reconfigure the replica), so it is important to finish the AOF rewrite and start with the correct data set representing the data set in memory when the server was terminated.</source>
          <target state="translated">启用了AOF的副本与主副本重新连接，执行完全重新同步，然后重新启动AOF文件，从而触发了初始AOF创建过程。在这种情况下，不完成AOF重写是很危险的，因为从主服务器接收到的最新数据集将丢失。新的主服务器实际上甚至可以是另一个实例（如果使用&lt;strong&gt;REPLICAOF&lt;/strong&gt;或&lt;strong&gt;SLAVEOF&lt;/strong&gt;命令来重新配置副本），因此完成AOF重写并从代表内存中数据集的正确数据集开始非常重要。服务器已终止。</target>
        </trans-unit>
        <trans-unit id="34774babccc209638e8661b505cce11cc8900748" translate="yes" xml:space="preserve">
          <source>A similar pattern where user IDs are used instead of days is described in the article called &quot;&lt;a href=&quot;http://blog.getspool.com/2011/11/29/fast-easy-realtime-metrics-using-redis-bitmaps&quot;&gt;Fast easy realtime metrics using Redis bitmaps&lt;/a&gt;&quot;.</source>
          <target state="translated">在名为&amp;ldquo; &lt;a href=&quot;http://blog.getspool.com/2011/11/29/fast-easy-realtime-metrics-using-redis-bitmaps&quot;&gt;使用Redis位图的快速便捷实时度量&lt;/a&gt; &amp;rdquo;的文章中，介绍了使用用户ID代替天数的类似模式。</target>
        </trans-unit>
        <trans-unit id="3892260963af39063ee4c79a4c6f5fc7f079e501" translate="yes" xml:space="preserve">
          <source>A simple example follows:</source>
          <target state="translated">下面举一个简单的例子。</target>
        </trans-unit>
        <trans-unit id="7ddef64b774f3cd5fc1e62ed561def95b846b563" translate="yes" xml:space="preserve">
          <source>A stream entry ID identifies a given entry inside a stream. The &lt;a href=&quot;xadd&quot;&gt;XADD&lt;/a&gt; command will auto-generate a unique ID for you if the ID argument specified is the &lt;code&gt;*&lt;/code&gt; character (asterisk ASCII character). However, while useful only in very rare cases, it is possible to specify a well-formed ID, so that the new entry will be added exactly with the specified ID.</source>
          <target state="translated">流条目ID标识流中的给定条目。如果指定的ID参数为 &lt;code&gt;*&lt;/code&gt; 字符（星号ASCII字符），则&lt;a href=&quot;xadd&quot;&gt;XADD&lt;/a&gt;命令将为您自动生成一个唯一ID 。但是，虽然仅在极少数情况下有用，但可以指定格式正确的ID，以便将新条目与指定的ID完全一样添加。</target>
        </trans-unit>
        <trans-unit id="479cfb48bf8e24ebd7be595311042ddf37b14add" translate="yes" xml:space="preserve">
          <source>A symmetrical pattern applies to iterating the stream with &lt;a href=&quot;xrevrange&quot;&gt;XREVRANGE&lt;/a&gt;. The only difference is that the client needs to decrement the ID for the subsequent calls. When decrementing an ID with a sequence part of 0, the timestamp needs to be decremented by 1 and the sequence set to 18446744073709551615.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79fd7f6eb47e05e442bf21424b70a285e07cd4c7" translate="yes" xml:space="preserve">
          <source>A three-element multi-bulk with the first element being the name of the key where a member was popped, the second element being the score of the popped member, and the third element being the popped member itself.</source>
          <target state="translated">一个三元素的多弹体,第一个元素是弹出成员的键名,第二个元素是弹出成员的分数,第三个元素是弹出成员本身。</target>
        </trans-unit>
        <trans-unit id="dd483a4936cc58e47c6e0c862b9b256fd5f40d67" translate="yes" xml:space="preserve">
          <source>A three-element multi-bulk with the first element being the name of the key where a member was popped, the second element is the popped member itself, and the third element is the score of the popped element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30306183666392fcaecc22c35fce7e7cb3af8d67" translate="yes" xml:space="preserve">
          <source>A timeout of 0 means to block forever.</source>
          <target state="translated">超时为0,意味着永远封锁。</target>
        </trans-unit>
        <trans-unit id="a17d8e24b3173ee841bfca950e5b33f8d2311769" translate="yes" xml:space="preserve">
          <source>A two-element multi-bulk with the first element being the name of the key where an element was popped and the second element being the value of the popped element.</source>
          <target state="translated">一个双元素的多体,第一个元素是弹出元素的键名,第二个元素是弹出元素的值。</target>
        </trans-unit>
        <trans-unit id="316a7d352276951a851baa176c56bd0646785b6b" translate="yes" xml:space="preserve">
          <source>A unique progressive identifier for every slow log entry.</source>
          <target state="translated">每个慢速日志条目的唯一渐进标识符。</target>
        </trans-unit>
        <trans-unit id="15e5288f998531a56ed6ca49f3cc22bfec1a3be1" translate="yes" xml:space="preserve">
          <source>A very important part of scripting is writing scripts that are pure functions. Scripts executed in a Redis instance are, by default, propagated to replicas and to the AOF file by sending the script itself -- not the resulting commands.</source>
          <target state="translated">脚本的一个非常重要的部分是编写纯函数的脚本。在Redis实例中执行的脚本,默认情况下,通过发送脚本本身--而不是结果命令--传播到副本和AOF文件。</target>
        </trans-unit>
        <trans-unit id="3f08cc0b30779a95143aa2ad65f0531b4ad12960" translate="yes" xml:space="preserve">
          <source>ACL</source>
          <target state="translated">ACL</target>
        </trans-unit>
        <trans-unit id="bc430f327a0dfce882c15dba5919c945f0c506c4" translate="yes" xml:space="preserve">
          <source>ACL CAT  [categoryname]   List the ACL categories or the commands inside a category</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a99f2ae2af74997dec699c3ee26e8588c57d631" translate="yes" xml:space="preserve">
          <source>ACL DELUSER  username [username ...]   Remove the specified ACL users and the associated rules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d663a64f02d722e9b6dea0bd46e9eca64230b913" translate="yes" xml:space="preserve">
          <source>ACL GENPASS  [bits]   Generate a pseudorandom secure password to use for ACL users</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccd5643086b968b1f31b01ef02819987f26c5b3f" translate="yes" xml:space="preserve">
          <source>ACL GETUSER  username   Get the rules for a specific ACL user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d619439d71c4f34f055718e677b13c4a9f275fe6" translate="yes" xml:space="preserve">
          <source>ACL HELP   Show helpful text about the different subcommands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31850beea1f3f69071e6c33928156ade6e00ab45" translate="yes" xml:space="preserve">
          <source>ACL LIST   List the current ACL rules in ACL config file format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35e0627557d51800ee03c74a4ab45c1e764447ec" translate="yes" xml:space="preserve">
          <source>ACL LOAD   Reload the ACLs from the configured ACL file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7757a7da13bd653d8ee430ba3397119594c5d47" translate="yes" xml:space="preserve">
          <source>ACL LOG  [count or RESET]   List latest events denied because of ACLs in place</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cb5c1414dee386d2b8fa30e2bbdd0a6a97cfc28" translate="yes" xml:space="preserve">
          <source>ACL SAVE   Save the current ACL rules in the configured ACL file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0386be79c39f606185e4b53f1222d64719e174a0" translate="yes" xml:space="preserve">
          <source>ACL SETUSER  username [rule [rule ...]]   Modify or create the rules for a specific ACL user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27bb308c77e1daac95122fff219a2c6daae7b052" translate="yes" xml:space="preserve">
          <source>ACL USERS   List the username of all the configured ACL rules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b429eef7f087085b63c833ef1bc25427befe100" translate="yes" xml:space="preserve">
          <source>ACL WHOAMI   Return the name of the user associated to the current connection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de304c50ff9bb5fdd452722c0dd161577af28608" translate="yes" xml:space="preserve">
          <source>ACL categories are very useful in order to create ACL rules that include or exclude a large set of commands at once, without specifying every single command. For instance, the following rule will let the user &lt;code&gt;karin&lt;/code&gt; perform everything but the most dangerous operations that may affect the server stability:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cd4194a6879685c31702a0f68b0e7134e8b8f11" translate="yes" xml:space="preserve">
          <source>ACL rules are either words like &quot;on&quot;, &quot;off&quot;, &quot;reset&quot;, &quot;allkeys&quot;, or are special rules that start with a special character, and are followed by another string (without any space in between), like &quot;+SET&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46b7d0e52e6b348d0ca3dd5bb91a67c4c26f9bb9" translate="yes" xml:space="preserve">
          <source>ACL users need a solid password in order to authenticate to the server without security risks. Such password does not need to be remembered by humans, but only by computers, so it can be very long and strong (unguessable by an external attacker). The &lt;a href=&quot;acl-genpass&quot;&gt;ACL GENPASS&lt;/a&gt; command generates a password starting from /dev/urandom if available, otherwise (in systems without /dev/urandom) it uses a weaker system that is likely still better than picking a weak password by hand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="025e07020e93e25579c1a9621d736dca0c1f26de" translate="yes" xml:space="preserve">
          <source>APPEND</source>
          <target state="translated">APPEND</target>
        </trans-unit>
        <trans-unit id="909ab7e7d0327d1bb12d101958258d2a08b6daae" translate="yes" xml:space="preserve">
          <source>APPEND  key value   Append a value to a key</source>
          <target state="translated">APPEND键值 给键添加一个值。</target>
        </trans-unit>
        <trans-unit id="4a79bd00448baad864aa37f5d6d5b74bace69207" translate="yes" xml:space="preserve">
          <source>AUTH</source>
          <target state="translated">AUTH</target>
        </trans-unit>
        <trans-unit id="8a19c3946c86f4dea93819cfedf078d402be1b45" translate="yes" xml:space="preserve">
          <source>AUTH  [username] password   Authenticate to the server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffc2673c91de7fcb166409594eaaaec1f96c75c1" translate="yes" xml:space="preserve">
          <source>AUTH  password   Authenticate to the server</source>
          <target state="translated">AUTH密码 验证服务器</target>
        </trans-unit>
        <trans-unit id="043bd74983959c0554262d35de5c14a4ec21d462" translate="yes" xml:space="preserve">
          <source>Accessing a &lt;em&gt;non existing&lt;/em&gt; global variable generates a similar error.</source>
          <target state="translated">访问&lt;em&gt;不存在的&lt;/em&gt;全局变量会生成类似的错误。</target>
        </trans-unit>
        <trans-unit id="7aba5231117223c71bfb7ad628b907a035c73c59" translate="yes" xml:space="preserve">
          <source>Accessing individual elements in the time series is not hard:</source>
          <target state="translated">访问时间序列中的单个元素并不难。</target>
        </trans-unit>
        <trans-unit id="8496994d3923ed6948840c095615350a859b9bf8" translate="yes" xml:space="preserve">
          <source>Accumulate all the commands to send into the pipeline, then check for &lt;a href=&quot;eval&quot;&gt;EVAL&lt;/a&gt; commands and use the &lt;a href=&quot;script-exists&quot;&gt;SCRIPT EXISTS&lt;/a&gt; command to check if all the scripts are already defined. If not, add &lt;a href=&quot;script-load&quot;&gt;SCRIPT LOAD&lt;/a&gt; commands on top of the pipeline as required, and use &lt;a href=&quot;evalsha&quot;&gt;EVALSHA&lt;/a&gt; for all the &lt;a href=&quot;eval&quot;&gt;EVAL&lt;/a&gt; calls.</source>
          <target state="translated">累积所有要发送到管道中的命令，然后检查&lt;a href=&quot;eval&quot;&gt;EVAL&lt;/a&gt;命令并使用&lt;a href=&quot;script-exists&quot;&gt;SCRIPT EXISTS&lt;/a&gt;命令检查是否已定义所有脚本。如果不是，请根据需要在管道顶部添加&lt;a href=&quot;script-load&quot;&gt;SCRIPT LOAD&lt;/a&gt;命令，并对所有&lt;a href=&quot;eval&quot;&gt;EVAL&lt;/a&gt;调用使用&lt;a href=&quot;evalsha&quot;&gt;EVALSHA&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="331fbf87d679488dd37eba43acb4cb291a720fed" translate="yes" xml:space="preserve">
          <source>Add the specified members to the set stored at &lt;code&gt;key&lt;/code&gt;. Specified members that are already a member of this set are ignored. If &lt;code&gt;key&lt;/code&gt; does not exist, a new set is created before adding the specified members.</source>
          <target state="translated">将指定的成员添加到存储在 &lt;code&gt;key&lt;/code&gt; 的集合中。指定的已经是该集合成员的成员将被忽略。如果 &lt;code&gt;key&lt;/code&gt; 不存在，则会在添加指定成员之前创建一个新集合。</target>
        </trans-unit>
        <trans-unit id="6ea5ef09a89f93581e248dcc20539555e85c3a48" translate="yes" xml:space="preserve">
          <source>Additional examples</source>
          <target state="translated">其他例子</target>
        </trans-unit>
        <trans-unit id="d82c2de775c1d427f5a69cd870df943898595234" translate="yes" xml:space="preserve">
          <source>Additional information about streams</source>
          <target state="translated">关于溪流的补充信息</target>
        </trans-unit>
        <trans-unit id="63f2e4028cc4ac44d53adec5078f20b4aa655ee5" translate="yes" xml:space="preserve">
          <source>Additional introspective information about the server's memory can be obtained by referring to the &lt;a href=&quot;memory-stats&quot;&gt;MEMORY STATS&lt;/a&gt; command and the &lt;a href=&quot;memory-doctor&quot;&gt;MEMORY DOCTOR&lt;/a&gt;.</source>
          <target state="translated">通过参考&lt;a href=&quot;memory-stats&quot;&gt;MEMORY STATS&lt;/a&gt;命令和&lt;a href=&quot;memory-doctor&quot;&gt;MEMORY DOCTOR&lt;/a&gt;可以获得有关服务器内存的其他自省信息。</target>
        </trans-unit>
        <trans-unit id="5c068579fdb28b0028f94bb0b4e4013c53766748" translate="yes" xml:space="preserve">
          <source>Addressing with &lt;a href=&quot;get&quot;&gt;GET&lt;/a&gt; bits outside the current string length (including the case the key does not exist at all), results in the operation to be performed like the missing part all consists of bits set to 0.</source>
          <target state="translated">使用当前字符串长度之外的&lt;a href=&quot;get&quot;&gt;GET&lt;/a&gt;位进行寻址（包括键根本不存在的情况），导致执行操作就像丢失的部分都由设置为0的位组成。</target>
        </trans-unit>
        <trans-unit id="049c8196ab72e0b22baf65855e45482a2e4f33a5" translate="yes" xml:space="preserve">
          <source>Addressing with &lt;a href=&quot;set&quot;&gt;SET&lt;/a&gt; or &lt;a href=&quot;incrby&quot;&gt;INCRBY&lt;/a&gt; bits outside the current string length will enlarge the string, zero-padding it, as needed, for the minimal length needed, according to the most far bit touched.</source>
          <target state="translated">使用当前字符串长度之外的&lt;a href=&quot;set&quot;&gt;SET&lt;/a&gt;或&lt;a href=&quot;incrby&quot;&gt;INCRBY&lt;/a&gt;位寻址将扩大字符串，并根据需要将其零填充，以根据需要接触的最远的位，将其最小化。</target>
        </trans-unit>
        <trans-unit id="46ebddce5151e5408360a67a147fb399e9415717" translate="yes" xml:space="preserve">
          <source>Adds all the element arguments to the HyperLogLog data structure stored at the variable name specified as first argument.</source>
          <target state="translated">将所有元素参数添加到HyperLogLog数据结构中,存储在作为第一个参数指定的变量名处。</target>
        </trans-unit>
        <trans-unit id="0d4e52a890415189fc8fbc4fe75cf4354f3f9990" translate="yes" xml:space="preserve">
          <source>Adds all the specified members with the specified scores to the sorted set stored at &lt;code&gt;key&lt;/code&gt;. It is possible to specify multiple score / member pairs. If a specified member is already a member of the sorted set, the score is updated and the element reinserted at the right position to ensure the correct ordering.</source>
          <target state="translated">将所有具有指定分数的指定成员添加到存储在 &lt;code&gt;key&lt;/code&gt; 处的排序集中。可以指定多个分数/成员对。如果指定的成员已经是排序集中的成员，则将更新分数并在正确的位置重新插入元素，以确保正确的排序。</target>
        </trans-unit>
        <trans-unit id="9ab250d73059710f6ef408c991e35ff53cf7dd2c" translate="yes" xml:space="preserve">
          <source>Adds the specified geospatial items (latitude, longitude, name) to the specified key. Data is stored into the key as a sorted set, in a way that makes it possible to later retrieve items using a query by radius with the &lt;a href=&quot;georadius&quot;&gt;GEORADIUS&lt;/a&gt; or &lt;a href=&quot;georadiusbymember&quot;&gt;GEORADIUSBYMEMBER&lt;/a&gt; commands.</source>
          <target state="translated">将指定的地理空间项（纬度，经度，名称）添加到指定键。数据以排序集的形式存储在密钥中，该方式使得以后可以使用&lt;a href=&quot;georadius&quot;&gt;GEORADIUS&lt;/a&gt;或&lt;a href=&quot;georadiusbymember&quot;&gt;GEORADIUSBYMEMBER&lt;/a&gt;命令通过半径查询来检索项目。</target>
        </trans-unit>
        <trans-unit id="a55c334e8c8de33a282dd83cae30a6fa98652879" translate="yes" xml:space="preserve">
          <source>Advanced Pattern: accessing bitmap ranges</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7de859f0d7f7123c628115946a45405250e8beb6" translate="yes" xml:space="preserve">
          <source>Advances the cluster config epoch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="610e6e414b98337a7416af1551f4bb3d49943eed" translate="yes" xml:space="preserve">
          <source>After an &lt;a href=&quot;exec&quot;&gt;EXEC&lt;/a&gt; of a &lt;a href=&quot;multi&quot;&gt;MULTI&lt;/a&gt; block with multiple push operations against the same list.</source>
          <target state="translated">在对同一列表&lt;a href=&quot;exec&quot;&gt;执行&lt;/a&gt;多次推送操作的&lt;a href=&quot;multi&quot;&gt;MULTI&lt;/a&gt;块的EXEC之后。</target>
        </trans-unit>
        <trans-unit id="09dd535abc4afd038e1eb1f87d89a6d8d915ae74" translate="yes" xml:space="preserve">
          <source>After resetting an user, it returns back to the status it has when it was just created: non active (off rule), can't execute any command, can't access any key:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10dc2d316de1e1727affb701a924e28e6d1b2437" translate="yes" xml:space="preserve">
          <source>After running the above script, the result is that only keys A and C will be created on replicas and AOF.</source>
          <target state="translated">运行上述脚本后,结果是只在副本和AOF上创建键A和C。</target>
        </trans-unit>
        <trans-unit id="a9cef2c443353094dddf50e5f724e3879e4f3f90" translate="yes" xml:space="preserve">
          <source>All Redis commands must be analyzed before execution to determine which keys the command will operate on. In order for this to be true for &lt;a href=&quot;eval&quot;&gt;EVAL&lt;/a&gt;, keys must be passed explicitly. This is useful in many ways, but especially to make sure Redis Cluster can forward your request to the appropriate cluster node.</source>
          <target state="translated">在执行之前必须分析所有Redis命令以确定该命令将对哪些键进行操作。为了&lt;a href=&quot;eval&quot;&gt;使它&lt;/a&gt;对EVAL成立，必须显式传递键。这在许多方面很有用，但是特别是要确保Redis Cluster可以将您的请求转发到适当的群集节点。</target>
        </trans-unit>
        <trans-unit id="835b666dd0cc3c5f8fd53a30a792d6ad8b5f1dff" translate="yes" xml:space="preserve">
          <source>All the RESP2 old conversions still apply unless specified above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d589c0f60d25b33b78193aa17f49c88dffd73e4" translate="yes" xml:space="preserve">
          <source>All the RESP2 old conversions still apply.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05778e5c96e8e267630af37ad51cc812ea0ac83f" translate="yes" xml:space="preserve">
          <source>All the additional arguments should not represent key names and can be accessed by Lua using the &lt;code&gt;ARGV&lt;/code&gt; global variable, very similarly to what happens with keys (so &lt;code&gt;ARGV[1]&lt;/code&gt;, &lt;code&gt;ARGV[2]&lt;/code&gt;, ...).</source>
          <target state="translated">所有其他自变量都不应该代表键名，并且可以由Lua使用 &lt;code&gt;ARGV&lt;/code&gt; 全局变量进行访问，这与键所发生的操作非常相似（因此 &lt;code&gt;ARGV[1]&lt;/code&gt; ， &lt;code&gt;ARGV[2]&lt;/code&gt; 等）。</target>
        </trans-unit>
        <trans-unit id="b7c6bcbd8231e947ac1e852709cd03e1c6629d93" translate="yes" xml:space="preserve">
          <source>All the assigned / open slots are reset, so the slots-to-nodes mapping is totally cleared.</source>
          <target state="translated">所有分配的/开放的插槽都被重置,所以插槽到节点的映射被完全清除。</target>
        </trans-unit>
        <trans-unit id="6ccf3242033b3edb2e3d3c30395b126ac379491e" translate="yes" xml:space="preserve">
          <source>All the configuration parameters set using &lt;a href=&quot;config-set&quot;&gt;CONFIG SET&lt;/a&gt; are immediately loaded by Redis and will take effect starting with the next command executed.</source>
          <target state="translated">Redis立即加载使用&lt;a href=&quot;config-set&quot;&gt;CONFIG SET&lt;/a&gt;设置的所有配置参数，并从下一个执行的命令开始生效。</target>
        </trans-unit>
        <trans-unit id="b280d4fef57685ade0a8c1183128b72be0fff2a4" translate="yes" xml:space="preserve">
          <source>All the other nodes in the cluster are forgotten.</source>
          <target state="translated">集群中的所有其他节点都被遗忘。</target>
        </trans-unit>
        <trans-unit id="1ec77394fcab0f40f98a08ccf1bd1a099ab3feef" translate="yes" xml:space="preserve">
          <source>All the specially encoded types are automatically converted to the general type once you perform an operation that makes it impossible for Redis to retain the space saving encoding.</source>
          <target state="translated">一旦你执行了一个操作,使得Redis无法保留节省空间的编码,所有的特殊编码类型都会自动转换为一般类型。</target>
        </trans-unit>
        <trans-unit id="df39da0c50311c81c2b61ebabbda96914a971969" translate="yes" xml:space="preserve">
          <source>All the supported parameters have the same meaning of the equivalent configuration parameter used in the &lt;a href=&quot;http://github.com/antirez/redis/raw/2.8/redis.conf&quot;&gt;redis.conf&lt;/a&gt; file, with the following important differences:</source>
          <target state="translated">所有受支持的参数具有与&lt;a href=&quot;http://github.com/antirez/redis/raw/2.8/redis.conf&quot;&gt;redis.conf&lt;/a&gt;文件中使用的等效配置参数相同的含义，但有以下重要区别：</target>
        </trans-unit>
        <trans-unit id="88c113a9d8aff1bf4ece5a62c19847909b0afbe4" translate="yes" xml:space="preserve">
          <source>All the supported parameters have the same meaning of the equivalent configuration parameter used in the &lt;a href=&quot;http://github.com/redis/redis/raw/2.8/redis.conf&quot;&gt;redis.conf&lt;/a&gt; file, with the following important differences:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1452ac410057b8e4338bbb1b4de1f53561ba2ea" translate="yes" xml:space="preserve">
          <source>All the supported parameters have the same meaning of the equivalent configuration parameter used in the &lt;a href=&quot;http://github.com/redis/redis/raw/6.0/redis.conf&quot;&gt;redis.conf&lt;/a&gt; file, with the following important differences:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07d70aafc96c2b50e35694bacc42e5a300e72264" translate="yes" xml:space="preserve">
          <source>All-time maximum latency for this event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c4ef360d3e661521770b94f8bee5b5b98d0b61" translate="yes" xml:space="preserve">
          <source>Almost all modifiers can be used together. The following example will return the first 5 elements, lexicographically sorted in descending order:</source>
          <target state="translated">几乎所有的修饰词都可以一起使用。下面的例子将返回前5个元素,按降序进行词汇学排序。</target>
        </trans-unit>
        <trans-unit id="91f2b1b9e9bccb6b3010f3f9f6fb64637d594f59" translate="yes" xml:space="preserve">
          <source>Also note that this behavior is specific of &lt;a href=&quot;sscan&quot;&gt;SSCAN&lt;/a&gt;, &lt;a href=&quot;hscan&quot;&gt;HSCAN&lt;/a&gt; and &lt;a href=&quot;zscan&quot;&gt;ZSCAN&lt;/a&gt;. &lt;a href=&quot;scan&quot;&gt;SCAN&lt;/a&gt; itself never shows this behavior because the key space is always represented by hash tables.</source>
          <target state="translated">另请注意，此行为特定于&lt;a href=&quot;sscan&quot;&gt;SSCAN&lt;/a&gt;，&lt;a href=&quot;hscan&quot;&gt;HSCAN&lt;/a&gt;和&lt;a href=&quot;zscan&quot;&gt;ZSCAN&lt;/a&gt;。&lt;a href=&quot;scan&quot;&gt;SCAN&lt;/a&gt;本身从不显示此行为，因为密钥空间始终由哈希表表示。</target>
        </trans-unit>
        <trans-unit id="80f59bf42799c4d062d02c6eed9565bd78400383" translate="yes" xml:space="preserve">
          <source>Also note with &lt;a href=&quot;mget&quot;&gt;MGET&lt;/a&gt;, the -1 value for &quot;last key position&quot; means the list of keys may have unlimited length.</source>
          <target state="translated">另请注意，使用&lt;a href=&quot;mget&quot;&gt;MGET时&lt;/a&gt;，&amp;ldquo;最后一个键位置&amp;rdquo;的-1值表示键列表的长度可能不受限制。</target>
        </trans-unit>
        <trans-unit id="5157f46144d13fb21a63005bb60f24f4ce105e11" translate="yes" xml:space="preserve">
          <source>Also see &lt;a href=&quot;command-getkeys&quot;&gt;COMMAND GETKEYS&lt;/a&gt; for getting your Redis server tell you where keys are in any given command.</source>
          <target state="translated">另请参阅&lt;a href=&quot;command-getkeys&quot;&gt;COMMAND GETKEYS&lt;/a&gt;以使您的Redis服务器告诉您任何给定命令中的密钥。</target>
        </trans-unit>
        <trans-unit id="04eefa213e7d217c0e7123cc1dc6c27083f06f1b" translate="yes" xml:space="preserve">
          <source>Also there are two important rules to note:</source>
          <target state="translated">另外,还有两个重要的规则需要注意。</target>
        </trans-unit>
        <trans-unit id="253a3794bb6046fd04b2899f39397ddc5b7914e5" translate="yes" xml:space="preserve">
          <source>Also, as already mentioned, restarting a Redis instance flushes the script cache, which is not persistent. However from the point of view of the client there are only two ways to make sure a Redis instance was not restarted between two different commands.</source>
          <target state="translated">另外,如前所述,重启Redis实例会刷新脚本缓存,而脚本缓存是不持久的。然而从客户端的角度来看,只有两种方法可以确保Redis实例在两个不同的命令之间没有被重启。</target>
        </trans-unit>
        <trans-unit id="421244cf7620490324dcfc2250189d7eb0fa02a2" translate="yes" xml:space="preserve">
          <source>Also, note that once the sequence part of the last ID equals 18446744073709551615, you'll need to increment the timestamp and reset the sequence part to 0. For example, incrementing the ID &lt;code&gt;1526985685298-18446744073709551615&lt;/code&gt; should result in &lt;code&gt;1526985685299-0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea8c51c6921844728fda67e56ae9ac9b762367f1" translate="yes" xml:space="preserve">
          <source>Alters the last access time of a key(s). A key is ignored if it does not exist.</source>
          <target state="translated">更改密钥的最后访问时间。如果密钥不存在,则忽略该密钥。</target>
        </trans-unit>
        <trans-unit id="b199d3c5e6bdd12d3e1986a0a392afea94eaf2b8" translate="yes" xml:space="preserve">
          <source>Always use plain &lt;a href=&quot;eval&quot;&gt;EVAL&lt;/a&gt; when in the context of a pipeline.</source>
          <target state="translated">在管道环境中时，请始终使用纯&lt;a href=&quot;eval&quot;&gt;EVAL&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="31201176aa04df37b1e2ed06ec57bbbf2e617274" translate="yes" xml:space="preserve">
          <source>An RDB version is encoded inside the serialized value, so that different Redis versions with incompatible RDB formats will refuse to process the serialized value.</source>
          <target state="translated">RDB版本在序列化的值里面进行编码,这样不同的Redis版本,如果RDB格式不兼容,会拒绝处理序列化的值。</target>
        </trans-unit>
        <trans-unit id="1eea03e66681a82857dbef8c5c7533ecccb36fa9" translate="yes" xml:space="preserve">
          <source>An additional client may monitor the &lt;em&gt;processing&lt;/em&gt; list for items that remain there for too much time, and will push those timed out items into the queue again if needed.</source>
          <target state="translated">另一个客户端可以监视&lt;em&gt;处理&lt;/em&gt;列表中是否有太多时间保留在该列表中，并在需要时将那些超时的项目再次推入队列。</target>
        </trans-unit>
        <trans-unit id="07675d1e6396e649280fe8bed0df48043817bbfd" translate="yes" xml:space="preserve">
          <source>An already known node sends a list of nodes in the gossip section that we are not aware of. If the receiving node trusts the sending node as a known node, it will process the gossip section and send an handshake to the nodes that are still not known.</source>
          <target state="translated">一个已经已知的节点会发送一个我们不知道的八卦部分的节点列表。如果接收节点信任发送节点为已知节点,则会对八卦部分进行处理,并向仍未知道的节点发送握手。</target>
        </trans-unit>
        <trans-unit id="a452bcfbd349eeb9ee037b3cbc2821a66bfa35e2" translate="yes" xml:space="preserve">
          <source>An alternative implementation uses a single counter, but is a bit more complex to get it right without race conditions. We'll examine different variants.</source>
          <target state="translated">另一种变体的实现使用一个单一的计数器,但要想在没有竞赛条件的情况下把它弄好,就比较复杂了。我们将研究不同的变体。</target>
        </trans-unit>
        <trans-unit id="bff9693e7f02bacc6bf60b4b05563fd05ce6a13a" translate="yes" xml:space="preserve">
          <source>An array composed of three elements array representing the connected replicas. Every sub-array contains the replica IP, port, and the last acknowledged replication offset.</source>
          <target state="translated">由三个元素数组组成的数组,代表连接的复制体。每一个子数组都包含副本IP、端口和最后确认的复制偏移量。</target>
        </trans-unit>
        <trans-unit id="a4850b5a22272049075215bf5ab0daed4f790d9d" translate="yes" xml:space="preserve">
          <source>An array of master names monitored by this Sentinel instance.</source>
          <target state="translated">该Sentinel实例监控的主名称数组。</target>
        </trans-unit>
        <trans-unit id="eb58ab5ebfb56d5e2bfd8b9296c584c2ccf48594" translate="yes" xml:space="preserve">
          <source>An array of strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb9ff52a245be210db03256bc0b542759913e5e2" translate="yes" xml:space="preserve">
          <source>An entry is composed of a set of field-value pairs, it is basically a small dictionary. The field-value pairs are stored in the same order they are given by the user, and commands to read the stream such as &lt;a href=&quot;xrange&quot;&gt;XRANGE&lt;/a&gt; or &lt;a href=&quot;xread&quot;&gt;XREAD&lt;/a&gt; are guaranteed to return the fields and values exactly in the same order they were added by &lt;a href=&quot;xadd&quot;&gt;XADD&lt;/a&gt;.</source>
          <target state="translated">一个条目是由一组字段值对组成的，它基本上是一个小词典。字段值对以用户指定的顺序存储，并且保证读取流的命令（例如&lt;a href=&quot;xrange&quot;&gt;XRANGE&lt;/a&gt;或&lt;a href=&quot;xread&quot;&gt;XREAD）&lt;/a&gt;以与&lt;a href=&quot;xadd&quot;&gt;XADD&lt;/a&gt;添加的顺序完全相同的顺序返回字段和值。</target>
        </trans-unit>
        <trans-unit id="75d00cd00e1f2b13a890f0d28b95cf6fbe73de9c" translate="yes" xml:space="preserve">
          <source>An error is returned for out of range indexes.</source>
          <target state="translated">对于超出范围的索引会返回一个错误。</target>
        </trans-unit>
        <trans-unit id="e1e52880ba8cd5516094695a791c7cb25bb9cf75" translate="yes" xml:space="preserve">
          <source>An error is returned if &lt;code&gt;source&lt;/code&gt; or &lt;code&gt;destination&lt;/code&gt; does not hold a set value.</source>
          <target state="translated">如果 &lt;code&gt;source&lt;/code&gt; 或 &lt;code&gt;destination&lt;/code&gt; 不具有设置值，则返回错误。</target>
        </trans-unit>
        <trans-unit id="c6dddcbd9570408a2bf9a7b091594de5d13db0b1" translate="yes" xml:space="preserve">
          <source>An error is returned if there is already a background save running or if there is another non-background-save process running, specifically an in-progress AOF rewrite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f347bee22b5d2cb10d2901659685fcd72a034c77" translate="yes" xml:space="preserve">
          <source>An error is returned when &lt;code&gt;key&lt;/code&gt; exists and does not hold a sorted set.</source>
          <target state="translated">当 &lt;code&gt;key&lt;/code&gt; 存在且不包含排序集时，将返回错误。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
