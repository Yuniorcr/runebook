<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="haxe">
    <body>
      <group id="haxe">
        <trans-unit id="88282946dd41699067d56bc91106e02edd8a9354" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2005&amp;ndash;2018 Haxe Foundation</source>
          <target state="translated">&amp;copy;2005&amp;ndash;2018 Haxe Foundation</target>
        </trans-unit>
        <trans-unit id="34b4861f2a53f67058456ebeeebda2e13926186a" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2005&amp;ndash;2020 Haxe Foundation</source>
          <target state="translated">&amp;copy;2005&amp;ndash;2020 Haxe基金会</target>
        </trans-unit>
        <trans-unit id="4e16b4a59775a24cf88a23c5e0f69ab85de089b8" translate="yes" xml:space="preserve">
          <source>(As3) If used on a property field, the getter will be invoked. It is not possible to obtain the value directly.</source>
          <target state="translated">（As3）如果在属性字段上使用，则将调用getter。无法直接获取该值。</target>
        </trans-unit>
        <trans-unit id="747e4704c18809d129b89decd124888d473159a6" translate="yes" xml:space="preserve">
          <source>(As3) If used on a property field, the setter will be invoked. It is not possible to set the value directly.</source>
          <target state="translated">（As3）如果在属性字段上使用，则将调用setter。不能直接设置该值。</target>
        </trans-unit>
        <trans-unit id="bd14680fbe28c309faf29fe2d68a3a77961eae47" translate="yes" xml:space="preserve">
          <source>(As3) This method only returns class fields that are public.</source>
          <target state="translated">（As3）此方法仅返回公共的类字段。</target>
        </trans-unit>
        <trans-unit id="2dd1bd45f75e46bf6dc6e659bd3813a63eda9736" translate="yes" xml:space="preserve">
          <source>(As3) This method only returns instance fields that are public.</source>
          <target state="translated">（As3）此方法仅返回公共的实例字段。</target>
        </trans-unit>
        <trans-unit id="f6c64b7f157f75585c10c01d0b06b320c70299fb" translate="yes" xml:space="preserve">
          <source>(Cpp) Map does not use weak keys on ObjectMap by default.</source>
          <target state="translated">（Cpp）默认情况下，Map在ObjectMap上不使用弱键。</target>
        </trans-unit>
        <trans-unit id="57dced88622dd426ce9dd6d4c2fe29a3a48dfe55" translate="yes" xml:space="preserve">
          <source>(Php) Https (SSL) connections are allowed only if the OpenSSL extension is enabled.</source>
          <target state="translated">仅当启用OpenSSL扩展时，才允许（Php）Https（SSL）连接。</target>
        </trans-unit>
        <trans-unit id="e4026ddd1c7132208541f46155a824e8f590014f" translate="yes" xml:space="preserve">
          <source>(cs, java) Implementation detail: Do not &lt;code&gt;set()&lt;/code&gt; any new value while iterating, as it may cause a resize, which will break iteration.</source>
          <target state="translated">（cs，java）实现细节：迭代时不要 &lt;code&gt;set()&lt;/code&gt; 任何新值，因为这可能会导致调整大小，这会中断迭代。</target>
        </trans-unit>
        <trans-unit id="efbad0919e17a7824499a3008815719037202e65" translate="yes" xml:space="preserve">
          <source>(js, lua) Require the &lt;code&gt;o&lt;/code&gt; argument if &lt;code&gt;func&lt;/code&gt; does not, but should have a context. This can occur by accessing a function field natively, e.g. through &lt;code&gt;&lt;a href=&quot;reflect#field&quot;&gt;Reflect.field&lt;/a&gt;&lt;/code&gt; or by using &lt;code&gt;(object : &lt;a href=&quot;dynamic&quot;&gt;Dynamic&lt;/a&gt;).field&lt;/code&gt;. However, if &lt;code&gt;func&lt;/code&gt; has a context, &lt;code&gt;o&lt;/code&gt; is ignored like on other targets.</source>
          <target state="translated">（js，lua）如果 &lt;code&gt;func&lt;/code&gt; 不需要，则需要使用 &lt;code&gt;o&lt;/code&gt; 参数，但应具有上下文。这可以通过本地访问功能字段来实现，例如通过 &lt;code&gt;&lt;a href=&quot;reflect#field&quot;&gt;Reflect.field&lt;/a&gt;&lt;/code&gt; 或使用 &lt;code&gt;(object : &lt;a href=&quot;dynamic&quot;&gt;Dynamic&lt;/a&gt;).field&lt;/code&gt; &lt;a href=&quot;dynamic&quot;&gt;Dynamic&lt;/a&gt;）.field。但是，如果 &lt;code&gt;func&lt;/code&gt; 具有上下文，则 &lt;code&gt;o&lt;/code&gt; 与其他目标一样被忽略。</target>
        </trans-unit>
        <trans-unit id="bb206bbbdf735416f2d5328b3b87220b684755cf" translate="yes" xml:space="preserve">
          <source>(macro) Same as neko for Haxe 3. No context switching in Haxe 4.</source>
          <target state="translated">（宏）与Haxe 3的neko相同。在Haxe 4中没有上下文切换。</target>
        </trans-unit>
        <trans-unit id="fcf81e3f2beaa34f4f651258b3e22f0b55d0ad0a" translate="yes" xml:space="preserve">
          <source>(neko) Allows switching the context to &lt;code&gt;o&lt;/code&gt; in all cases.</source>
          <target state="translated">（neko）在所有情况下都允许将上下文切换为 &lt;code&gt;o&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="94246b5f7406574a39daade0be76941d9f829476" translate="yes" xml:space="preserve">
          <source>0, 0.0 or false for Int, Float and Bool respectively on static targets</source>
          <target state="translated">在静态目标上,Int、Float和Bool分别为0、0.0或false。</target>
        </trans-unit>
        <trans-unit id="4d8bb2a3bced682aa01dc08e7b2fb17c57ae632f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.sitepoint.com/web-foundations/mime-types-complete-list&quot;&gt;http://www.sitepoint.com/web-foundations/mime-types-complete-list&lt;/a&gt;/</source>
          <target state="translated">&lt;a href=&quot;http://www.sitepoint.com/web-foundations/mime-types-complete-list&quot;&gt;http://www.sitepoint.com/web-foundations/mime-types-complete-list&lt;/a&gt;/</target>
        </trans-unit>
        <trans-unit id="2c0c0d5f4da49b0305d278cf5112d108fa56f8cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;!e&lt;/code&gt; (&lt;code&gt;op = OpNot, postFix = &lt;a href=&quot;../../bool&quot;&gt;false&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;!e&lt;/code&gt; (&lt;code&gt;op = OpNot, postFix = &lt;a href=&quot;../../bool&quot;&gt;false&lt;/a&gt;&lt;/code&gt;)</target>
        </trans-unit>
        <trans-unit id="4d872f1a47fdf4d4ba4a6ddc1bb84e5daf6a6019" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;&lt;/code&gt; becomes &lt;code&gt;&amp;amp;quot&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;&quot;&lt;/code&gt; 变为 &lt;code&gt;&amp;amp;quot&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="47734bfd6de50a189a9f2c2af51f7eca9752e382" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;#039;&lt;/code&gt; becomes &lt;code&gt;'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;#039;&lt;/code&gt; 成为 &lt;code&gt;'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="291f8d069e174aced382aecf2cc555933cb608c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;&lt;/code&gt; becomes &lt;code&gt;&amp;amp;amp&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;&amp;amp;&lt;/code&gt; 成为 &lt;code&gt;&amp;amp;amp&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="6c20922728b6e6e76f5e79810e887c37dfb24c81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;amp;&lt;/code&gt; becomes &lt;code&gt;&amp;amp;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;amp;&lt;/code&gt; 成为 &lt;code&gt;&amp;amp;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3e8776f847bf0d6bdaaf4f10df6e63674c43a5fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;gt;&lt;/code&gt; becomes &lt;code&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;gt;&lt;/code&gt; 变成 &lt;code&gt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3a44818e9a83945c3b3498576287be677189609b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;lt;&lt;/code&gt; becomes &lt;code&gt;&amp;lt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;lt;&lt;/code&gt; 变成 &lt;code&gt;&amp;lt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a82fb55ad12e31a59a145e6a07ce2e913ee3c970" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;quot;&lt;/code&gt; becomes &lt;code&gt;&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;quot;&lt;/code&gt; 成为 &lt;code&gt;&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fa9d22c733bc0557432c376f35777a7c331892b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;&lt;/code&gt; becomes &lt;code&gt;&amp;amp;gt&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;&amp;gt;&lt;/code&gt; 变为 &lt;code&gt;&amp;amp;gt&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="2254e8ba9bc8da2b4d88c81edbe9cfafda6e435a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;&lt;/code&gt; becomes &lt;code&gt;&amp;amp;lt&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;&amp;lt;&lt;/code&gt; 变为 &lt;code&gt;&amp;amp;lt&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="656505c2909f7a636ae680fc2f457e90886dba58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'&lt;/code&gt; becomes &lt;code&gt;&amp;amp;#039&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;'&lt;/code&gt; 变为 &lt;code&gt;&amp;amp;#039&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="0cf7edfcb7e06c0b06d1504ee9ebc4f8583c20ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;++e&lt;/code&gt; (&lt;code&gt;op = OpIncrement, postFix = &lt;a href=&quot;../../bool&quot;&gt;false&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;++e&lt;/code&gt; (&lt;code&gt;op = OpIncrement, postFix = &lt;a href=&quot;../../bool&quot;&gt;false&lt;/a&gt;&lt;/code&gt;)</target>
        </trans-unit>
        <trans-unit id="cafc3d0d69322c79c0d3f35ffcbe2caa1efce18c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+=&lt;/code&gt;&lt;code&gt;-=&lt;/code&gt;&lt;code&gt;/=&lt;/code&gt;&lt;code&gt;*=&lt;/code&gt;&lt;code&gt;&amp;lt;&amp;lt;=&lt;/code&gt;&lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;=&lt;/code&gt; `</source>
          <target state="translated">&lt;code&gt;+=&lt;/code&gt;&lt;code&gt;-=&lt;/code&gt;&lt;code&gt;/=&lt;/code&gt;&lt;code&gt;*=&lt;/code&gt;&lt;code&gt;&amp;lt;&amp;lt;=&lt;/code&gt;&lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;=&lt;/code&gt; `</target>
        </trans-unit>
        <trans-unit id="fe857a4584383c6f4d71d883c14d95cb63de4695" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+=&lt;/code&gt;&lt;code&gt;-=&lt;/code&gt;&lt;code&gt;/=&lt;/code&gt;&lt;code&gt;*=&lt;/code&gt;&lt;code&gt;&amp;lt;&amp;lt;=&lt;/code&gt;&lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;=&lt;/code&gt;&lt;code&gt;|=&lt;/code&gt;&lt;code&gt;&amp;amp;=&lt;/code&gt;&lt;code&gt;^=&lt;/code&gt;&lt;code&gt;%=&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;+=&lt;/code&gt;&lt;code&gt;-=&lt;/code&gt;&lt;code&gt;/=&lt;/code&gt;&lt;code&gt;*=&lt;/code&gt;&lt;code&gt;&amp;lt;&amp;lt;=&lt;/code&gt;&lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;=&lt;/code&gt;&lt;code&gt;|=&lt;/code&gt;&lt;code&gt;&amp;amp;=&lt;/code&gt;&lt;code&gt;^=&lt;/code&gt;&lt;code&gt;%=&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5f8c6e86e3a77d975c58cbe31324d66549e67517" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--e&lt;/code&gt; (&lt;code&gt;op = OpDecrement, postFix = &lt;a href=&quot;../../bool&quot;&gt;false&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;--e&lt;/code&gt; (&lt;code&gt;op = OpDecrement, postFix = &lt;a href=&quot;../../bool&quot;&gt;false&lt;/a&gt;&lt;/code&gt;)</target>
        </trans-unit>
        <trans-unit id="eebd1a90f6aef877224b34bba44301f841e7d307" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-e&lt;/code&gt; (&lt;code&gt;op = OpNeg, postFix = &lt;a href=&quot;../../bool&quot;&gt;false&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;-e&lt;/code&gt; (&lt;code&gt;op = OpNeg, postFix = &lt;a href=&quot;../../bool&quot;&gt;false&lt;/a&gt;&lt;/code&gt;)</target>
        </trans-unit>
        <trans-unit id="299126460eb4266be9ec7458f0a8e6f5dd518fcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt; if the last directory separator is a backslash, &lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;false&lt;/a&gt;&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt; 如果最后的目录分隔符是反斜杠， &lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;false&lt;/a&gt;&lt;/code&gt; 否则。</target>
        </trans-unit>
        <trans-unit id="70286d3d3a6ac45ee2e20f76cd945aa60fed8aa5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt; if the unit test succesfully executed the test cases.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt; 如果单元测试成功执行了测试用例，则为 true。</target>
        </trans-unit>
        <trans-unit id="2496f90dd288bec36650e6729f6722af7c0d28cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt; when succesfully unit tested.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt; 成功进行单元测试时为 true。</target>
        </trans-unit>
        <trans-unit id="9ed540327904d3794345965ce711cb27a8756f27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt; when the unit test is executed.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt; 当执行单元测试时为 true。</target>
        </trans-unit>
        <trans-unit id="e67b0cc464a8c276a975669da29ccfd682df3e61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../../int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../../float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; literals</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../../int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../../float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 文字</target>
        </trans-unit>
        <trans-unit id="51fdde6bb4c2227b194a80ab942b315a0273f13c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;any&quot;&gt;Any&lt;/a&gt;&lt;/code&gt; is a type that is compatible with any other in both ways.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;any&quot;&gt;Any&lt;/a&gt;&lt;/code&gt; 类型都是在两种方式上都与其他任何类型兼容的类型。</target>
        </trans-unit>
        <trans-unit id="96f892a3f20c3827740b6114342a7b9c4071191a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt;&lt;/code&gt; is used to indicate a class that can be accessed using brackets. The type parameter represents the type of the elements stored.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt;&lt;/code&gt; 用于指示可以使用方括号访问的类。type参数表示存储的元素的类型。</target>
        </trans-unit>
        <trans-unit id="bf248a6bce00b0e114ea07a917ef074c63c1cecc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;date#fromString&quot;&gt;Date.fromString&lt;/a&gt;()&lt;/code&gt; by parsing from a String.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;date#fromString&quot;&gt;Date.fromString&lt;/a&gt;()&lt;/code&gt; 通过从字符串进行解析。</target>
        </trans-unit>
        <trans-unit id="0dfe412e52983d13d9254802941f88e02d0fd329" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;date#fromTime&quot;&gt;Date.fromTime&lt;/a&gt;()&lt;/code&gt; with a given timestamp or</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;date#fromTime&quot;&gt;Date.fromTime&lt;/a&gt;()&lt;/code&gt; 具有给定时间戳记的 Date.fromTime（）或</target>
        </trans-unit>
        <trans-unit id="31bf8e90413be4014fa4f7f4eba55c50119eaa92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;date#now&quot;&gt;Date.now&lt;/a&gt;()&lt;/code&gt; to obtain information about the current time,</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;date#now&quot;&gt;Date.now&lt;/a&gt;()&lt;/code&gt; 获取有关当前时间的信息，</target>
        </trans-unit>
        <trans-unit id="713018d1a57ba81d3ca24431fbd6b1ec242317a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;dynamic&quot;&gt;Dynamic&lt;/a&gt;&lt;/code&gt; is a special type which is compatible with all other types.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;dynamic&quot;&gt;Dynamic&lt;/a&gt;&lt;/code&gt; 是与所有其他类型兼容的特殊类型。</target>
        </trans-unit>
        <trans-unit id="ae975fd83b0ef570b5d41e565585ae8d2c0489c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;exception#Exception&quot;&gt;haxe.Exception&lt;/a&gt;&lt;/code&gt; is also a wildcard type to catch any exception:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;exception#Exception&quot;&gt;haxe.Exception&lt;/a&gt;&lt;/code&gt; 也是捕获任何异常的通配符类型：</target>
        </trans-unit>
        <trans-unit id="e549f11401c7d4fdbf60d327284fe4e109336952" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;null&quot;&gt;Null&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; is a wrapper that can be used to make the basic types &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;&lt;/code&gt; nullable on static targets.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;null&quot;&gt;Null&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; 是一个包装器，可用于使基本类型 &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;bool&quot;&gt;Bool&lt;/a&gt;&lt;/code&gt; 在静态目标上可为空。</target>
        </trans-unit>
        <trans-unit id="117afe24e8d4c910ebde8916f71cd25ebc9ed5c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;null&quot;&gt;Null&lt;/a&gt;&lt;/code&gt; can be useful in two cases. In order to document some methods that accept or can return a &lt;code&gt;null&lt;/code&gt; value, or for the Flash compiler and AS3 generator to distinguish between base values that can be &lt;code&gt;null&lt;/code&gt; and others that can't.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;null&quot;&gt;Null&lt;/a&gt;&lt;/code&gt; 在两种情况下， Null可能有用。为了记录一些接受或可以返回 &lt;code&gt;null&lt;/code&gt; 值的方法，或者让Flash编译器和AS3生成器区分可以为 &lt;code&gt;null&lt;/code&gt; 的基本值和其他不能为 null的值。</target>
        </trans-unit>
        <trans-unit id="194f9c15684896e7d39a022a9d5e52a3f518d82e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;posinfos#PosInfos&quot;&gt;PosInfos&lt;/a&gt;&lt;/code&gt; is a magic type which can be used to generate position information into the output for debugging use.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;posinfos#PosInfos&quot;&gt;PosInfos&lt;/a&gt;&lt;/code&gt; 是一种魔术类型，可用于将位置信息生成到输出中以供调试使用。</target>
        </trans-unit>
        <trans-unit id="2a7bf13ab822b04cdcc022e7abacd5cdb049e370" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;readonlyarray#ReadOnlyArray&quot;&gt;ReadOnlyArray&lt;/a&gt;&lt;/code&gt; is an abstract over an ordinary &lt;code&gt;&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; which only exposes APIs that don't modify the instance, hence &quot;read-only&quot;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;readonlyarray#ReadOnlyArray&quot;&gt;ReadOnlyArray&lt;/a&gt;&lt;/code&gt; 是普通 &lt;code&gt;&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; 的抽象，它仅公开不修改实例的API，因此为&amp;ldquo;只读&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="005fba8b89cf13124edcb11b2114d85f1678d846" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;std#int&quot;&gt;Std.int&lt;/a&gt;&lt;/code&gt; converts a &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; to an &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;, rounded towards 0. &lt;code&gt;&lt;a href=&quot;std#parseFloat&quot;&gt;Std.parseFloat&lt;/a&gt;&lt;/code&gt; converts a &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; to a &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;std#int&quot;&gt;Std.int&lt;/a&gt;&lt;/code&gt; 转换一个 &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 到 &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 的，圆向着0 &lt;code&gt;&lt;a href=&quot;std#parseFloat&quot;&gt;Std.parseFloat&lt;/a&gt;&lt;/code&gt; 转换一个 &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 到 &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="57add615a39497561970bb9958873f3a0695469d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;std#int&quot;&gt;Std.int&lt;/a&gt;&lt;/code&gt; converts a &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; to an &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;, rounded towards 0. &lt;code&gt;&lt;a href=&quot;std#parseInt&quot;&gt;Std.parseInt&lt;/a&gt;&lt;/code&gt; converts a &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; to an &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;std#int&quot;&gt;Std.int&lt;/a&gt;&lt;/code&gt; 转换一个 &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 到 &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 的，圆向着0 &lt;code&gt;&lt;a href=&quot;std#parseInt&quot;&gt;Std.parseInt&lt;/a&gt;&lt;/code&gt; 转换一个 &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 到 &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a79b9bc95979eba2915d88711d54b0bc3bc93622" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;template#Template&quot;&gt;Template&lt;/a&gt;&lt;/code&gt; provides a basic templating mechanism to replace values in a source String, and to have some basic logic.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;template#Template&quot;&gt;Template&lt;/a&gt;&lt;/code&gt; 提供了一种基本的模板化机制来替换源String中的值，并具有一些基本逻辑。</target>
        </trans-unit>
        <trans-unit id="1860ddb304e021d36900d7763a3d704377a06530" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NaN&lt;/code&gt; stands for &quot;Not a Number&quot;. It occurs when a mathematically incorrect operation is executed, such as taking the square root of a negative number: &lt;code&gt;&lt;a href=&quot;math#sqrt&quot;&gt;Math.sqrt&lt;/a&gt;(-1)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NaN&lt;/code&gt; 代表&amp;ldquo;不是数字&amp;rdquo;。当执行数学上不正确的运算时会发生这种情况，例如采用负数的平方根： &lt;code&gt;&lt;a href=&quot;math#sqrt&quot;&gt;Math.sqrt&lt;/a&gt;(-1)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d50957d182a0044905193b541e55ca6985e413d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertEquals(expected, actual)&lt;/code&gt;: Succeeds if &lt;code&gt;expected&lt;/code&gt; and &lt;code&gt;actual&lt;/code&gt; are equal.</source>
          <target state="translated">&lt;code&gt;assertEquals(expected, actual)&lt;/code&gt; ：如果 &lt;code&gt;expected&lt;/code&gt; 和 &lt;code&gt;actual&lt;/code&gt; 相等，则成功。</target>
        </trans-unit>
        <trans-unit id="f5bf0b433ee75c061a1a8b09d409463d1e2555d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertFalse(a)&lt;/code&gt;: Succeeds if &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;false&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;assertFalse(a)&lt;/code&gt; ：如果 &lt;code&gt;a&lt;/code&gt; 为 &lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;false&lt;/a&gt;&lt;/code&gt; ,则成功。</target>
        </trans-unit>
        <trans-unit id="dc4fd7e07a4112dde661004589d8d6c3905be450" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertTrue(a)&lt;/code&gt;: Succeeds if &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;assertTrue(a)&lt;/code&gt; ：如果 &lt;code&gt;a&lt;/code&gt; 为 &lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt; ,则成功。</target>
        </trans-unit>
        <trans-unit id="3deee8a5e9232cb9fad8125aef79d5c10cabde03" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;e++&lt;/code&gt; (&lt;code&gt;op = OpIncrement, postFix = &lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;e++&lt;/code&gt; (&lt;code&gt;op = OpIncrement, postFix = &lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt;)</target>
        </trans-unit>
        <trans-unit id="a7786fb9e9dc2e2298a59f0e3d417907a4ab5aed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;e--&lt;/code&gt; (&lt;code&gt;op = OpDecrement, postFix = &lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;e--&lt;/code&gt; (&lt;code&gt;op = OpDecrement, postFix = &lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt;)</target>
        </trans-unit>
        <trans-unit id="8eec977d66125baeef3cf48e2dfe0e361e605c9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exp(1.0)&lt;/code&gt; is approximately &lt;code&gt;2.718281828459&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;exp(1.0)&lt;/code&gt; 大约为 &lt;code&gt;2.718281828459&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b41db89aa0a190c5dff99cd1ca6daee3776f9b49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;new &lt;a href=&quot;date&quot;&gt;Date&lt;/a&gt;()&lt;/code&gt; for a specific date,</source>
          <target state="translated">&lt;code&gt;new &lt;a href=&quot;date&quot;&gt;Date&lt;/a&gt;()&lt;/code&gt; 特定日期的新Date（），</target>
        </trans-unit>
        <trans-unit id="3e346bf35e1434bda34d743bd8cd8af5025c7741" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;new &lt;a href=&quot;genericstack#GenericStack&quot;&gt;GenericStack&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../int&quot;&gt;Int&lt;/a&gt;&amp;gt;()&lt;/code&gt; generates &lt;code&gt;GenericStack_Int&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;new &lt;a href=&quot;genericstack#GenericStack&quot;&gt;GenericStack&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../int&quot;&gt;Int&lt;/a&gt;&amp;gt;()&lt;/code&gt; 生成 &lt;code&gt;GenericStack_Int&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0f8d7926e338068aac2725b4146e97035f5c3a54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;new &lt;a href=&quot;genericstack#GenericStack&quot;&gt;GenericStack&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&amp;gt;()&lt;/code&gt; generates &lt;code&gt;GenericStack_String&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;new &lt;a href=&quot;genericstack#GenericStack&quot;&gt;GenericStack&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&amp;gt;()&lt;/code&gt; 生成 &lt;code&gt;GenericStack_String&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eb87be7ccd9fc6d1caeef3a131563cc88cce08a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resolveClass(name:&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;):&lt;a href=&quot;../class&quot;&gt;Class&lt;/a&gt;&amp;lt;&lt;a href=&quot;../dynamic&quot;&gt;Dynamic&lt;/a&gt;&amp;gt;&lt;/code&gt; is called to determine a</source>
          <target state="translated">&lt;code&gt;resolveClass(name:&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;):&lt;a href=&quot;../class&quot;&gt;Class&lt;/a&gt;&amp;lt;&lt;a href=&quot;../dynamic&quot;&gt;Dynamic&lt;/a&gt;&amp;gt;&lt;/code&gt; 调用类 &amp;lt; Dynamic &amp;gt;来确定</target>
        </trans-unit>
        <trans-unit id="10959e4dc986e33645144cf601f975ddd4b5b03c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resolveEnum(name:&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;):&lt;a href=&quot;../enum&quot;&gt;Enum&lt;/a&gt;&amp;lt;&lt;a href=&quot;../dynamic&quot;&gt;Dynamic&lt;/a&gt;&amp;gt;&lt;/code&gt; is called to determine an</source>
          <target state="translated">&lt;code&gt;resolveEnum(name:&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;):&lt;a href=&quot;../enum&quot;&gt;Enum&lt;/a&gt;&amp;lt;&lt;a href=&quot;../dynamic&quot;&gt;Dynamic&lt;/a&gt;&amp;gt;&lt;/code&gt; 调用Enum &amp;lt; Dynamic &amp;gt;来确定</target>
        </trans-unit>
        <trans-unit id="1ce9c273d6e265c4ce23d0d6fdcf4b24ead5af34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;str&lt;/code&gt; is parsed into tokens, which are stored for internal use. This means that multiple &lt;code&gt;execute()&lt;/code&gt; operations on a single &lt;code&gt;&lt;a href=&quot;template#Template&quot;&gt;Template&lt;/a&gt;&lt;/code&gt; instance are more efficient than one &lt;code&gt;execute()&lt;/code&gt; operations on multiple &lt;code&gt;&lt;a href=&quot;template#Template&quot;&gt;Template&lt;/a&gt;&lt;/code&gt; instances.</source>
          <target state="translated">&lt;code&gt;str&lt;/code&gt; 被解析为令牌，这些令牌被存储以供内部使用。这意味着单个 &lt;code&gt;&lt;a href=&quot;template#Template&quot;&gt;Template&lt;/a&gt;&lt;/code&gt; 实例上的多个 &lt;code&gt;execute()&lt;/code&gt; 操作比多个 &lt;code&gt;&lt;a href=&quot;template#Template&quot;&gt;Template&lt;/a&gt;&lt;/code&gt; 实例上的一个 &lt;code&gt;execute()&lt;/code&gt; 操作更有效。</target>
        </trans-unit>
        <trans-unit id="bdd1b24fe0cfc39cd088aa8e04c86fe21fe43518" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;str&lt;/code&gt; is parsed into tokens, which are stored for internal use. This means that multiple execute() operations on a single Template instance are more efficient than one execute() operations on multiple Template instances.</source>
          <target state="translated">&lt;code&gt;str&lt;/code&gt; 被解析为令牌，这些令牌存储供内部使用。这意味着单个模板实例上的多个execute（）操作比多个模板实例上的一个execute（）操作更有效。</target>
        </trans-unit>
        <trans-unit id="e894d7052a8072419d46381a26e29e7f0b91b921" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; and the index of each Array element increases by 1.</source>
          <target state="translated">&lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; 和每个Array元素的索引增加1。</target>
        </trans-unit>
        <trans-unit id="f003c8048044763ce8318faf1539d6e6c63a6130" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; increases by 1.</source>
          <target state="translated">&lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; 增加1。</target>
        </trans-unit>
        <trans-unit id="a9d05ff113deeda58593d6d0dd6b179795238277" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;~e&lt;/code&gt; (&lt;code&gt;op = OpNegBits, postFix = &lt;a href=&quot;../../bool&quot;&gt;false&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;~e&lt;/code&gt; (&lt;code&gt;op = OpNegBits, postFix = &lt;a href=&quot;../../bool&quot;&gt;false&lt;/a&gt;&lt;/code&gt;)</target>
        </trans-unit>
        <trans-unit id="63d564d25967cf3fb3b8456621082d6a4c557262" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on all platforms&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;适用于所有平台&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b4aeec77b4d6b0436d80e1c6ec2aa9993a2e81ea" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on cpp, cs, flash, hl, java, js, macro, neko, php, python&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;适用于cpp，cs，flash，hl，java，js，宏，neko，php，python&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1e0d4f91d3ab8035610188836d096559c7ed0c7d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on cpp, cs, flash, hl, java, lua, macro, neko, php, python&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;适用于cpp，cs，flash，hl，java，lua，宏，neko，php，python&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="777312188ff1e7b77ffc4e2891e16d2465837769" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on cpp, cs, flash, hl, java, macro, neko, php, python&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;适用于cpp，cs，flash，hl，java，macro，neko，php，python&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b159ce319eb3bb1c1a9d4628daa3902a444e95ee" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on cpp, cs, flash, hl, js, lua, macro, neko, php, python&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;适用于cpp，cs，flash，hl，js，lua，macro，neko，php，python&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="754159856b49a502a270b9951c57ab5f14f61b9b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on cpp, cs, flash, java, js, lua, macro, neko, php, python&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;适用于cpp，cs，flash，java，js，lua，macro，neko，php，python&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7b01b0e24074bbe7ffc57aacff059e346d3a17ca" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on cpp, cs, flash, java, js, macro, neko, php, python&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;适用于cpp，cs，flash，java，js，macro，neko，php，python&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fa20b0db633e995697773742f19e11bfb6667f85" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on cpp, cs, hl, java, js, lua, macro, neko, php, python&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;适用于cpp，cs，hl，java，js，lua，macro，neko，php，python&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4056ca76ea00acf6fc8d27668275d310ce97a845" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on cpp, cs, hl, java, lua, macro, neko, php, python&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;在cpp，cs，hl，java，lua，macro，neko，php，python上可用&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4b7853d4cd18a75592ab6222c01da965bcd5a6ff" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on cpp, flash, hl, js, lua, macro, neko, php, python&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;适用于cpp，flash，hl，js，lua，macro，neko，php，python&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="113b9f55a7d4efa4adbb60c842d0fbf507173294" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on cpp, flash, hl, js, macro, neko, php, python&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;适用于cpp，flash，hl，js，macro，neko，php，python&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="96bc39b0b3dc3a95b5b48f51d00752dcf764ef86" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on cpp, flash, js, macro, neko, php, python&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;适用于cpp，flash，js，宏，neko，php，python&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c8d98b6d4d5e5af0fb22e884be5ca3f4001460b7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on cpp, flash, js, php, python&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;适用于cpp，flash，js，php，python&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="32542eccac4a63be14a419ac49ac48f81e316235" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on cpp, macro, neko, php&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;可用于cpp，macro，neko，php&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d57df7729ca5129257d6b05b3197c828138ada9c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on cs, cpp, java, hl&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;适用于CS，CPP，Java，HL&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d056f31da92404dabddc23426e40d8384f470ab3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on cs, hl, java&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;适用于CS，HL，Java&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2f3a310cae8d6a15047dc1f380a35a91674c11bb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on cs, java&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;在CS，Java上可用&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="09b700b95e78f6503456f88f1000ff730efcef0c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on cs, js, cpp, java, hl, flash&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;适用于CS，JS，CPP，Java，HL，Flash&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="207cb1401f5b4d186706655e4278c003b844d726" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on cs, js, neko, cpp, macro, java, lua, python, hl, flash&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;在CS，JS，NEKO，CPP，宏，Java，Lua，Python，HL，Flash上​​可用&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4ae5e4a118ef42134bd3b6c2ab6c17760b0d78ee" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on cs, php, js, cpp, macro, java, lua, python, hl, flash&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;适用于CS，PHP，JS，CPP，宏，Java，Lua，Python，HL，Flash&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3a15dd15637ade1ff5b850fc8d7d663bbccd2f91" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on cs, php, js, neko, cpp, java, lua, python, hl, flash&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;适用于CS，PHP，JS，NEKO，CPP，Java，Lua，Python，HL，Flash&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8c1a3c412d580daa80ddd0c865c60623d02d6f8a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on cs, php, js, neko, cpp, macro, java, lua, python, flash&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;适用于CS，PHP，JS，NEKO，CPP，宏，Java，Lua，Python，Flash&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4becbbc92cd32990c4c4cb293e19b7bf064cd727" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on cs, php, js, neko, cpp, macro, java, python, flash&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;适用于CS，PHP，JS，NEKO，CPP，宏，Java，Python，Flash&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a3177fb787c127ed747ee89c04901727625d3c08" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on cs, php, js, neko, cpp, macro, java, python, hl, flash&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;适用于CS，PHP，JS，NEKO，CPP，宏，Java，Python，HL，Flash&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0b5d7d1090c5b661e92ad78d2c178ba8d415fb8a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on cs, php, neko, cpp, macro, java, lua, python, hl, flash&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;在CS，PHP，NEKO，CPP，宏，Java，Lua，Python，HL，Flash上​​可用&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="937c6ac7cef599a22eac8a89b5ac8d4ba7180e3c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on cs, php, neko, cpp, macro, java, python, hl, flash&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;适用于CS，PHP，NEKO，CPP，宏，Java，Python，HL，Flash&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9b002f316e1af1398e53eb5e341523270055d17e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on cs&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;在CS上可用&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="147f5b3493c1c8c4b6c9f17c76f326c0c11bc52e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on flash, js&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;可用于Flash，JS&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2de750d2cf35aa7d92fe919a5593ee84fe9274b7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on flash&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;可用闪光灯&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fc748bd6e2d832d5dbced2628be5222a5719ec79" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on hl&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;在hl上可用&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ef96d0728629b97da1f264537abcd8faacafae71" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on java&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;在Java上可用&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1294943e8fbbab6308d9cb3ecc7eca792671c39e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on js, lua&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;可在js，lua上使用&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f758a4f654653a21994d99bf50c011ff7c508e37" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on js, macro, neko, php&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;在js，macro，neko，php上可用&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="413cc2b72f7b51634a8a6183df9d824837f115c4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on js&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;在js上可用&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="af8757b482bfb50f9bc09199d5fcf689fc90211c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on lua&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;可在lua上使用&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f5808c10312b836fee6c462c14e997ffb3dd2d92" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on macro, neko, php&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;在宏，neko，php上可用&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8fe09a8f09190c876d0ce2ddefefa8c1fb80dba8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on macro, neko&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;可用在neko宏上&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c7ae91b6778e2011e477377de101d6b2d9fd3ccb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on macro&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;在宏上可用&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5b8f9c7efa390c5a26e1cce506f8a119ffea6fdb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on neko, macro&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;可在neko，macro上使用&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8e9a5597fcb9a8dea4825b513e1b25d3c6c02ba6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on php, js, cpp, python, flash&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;适用于php，js，cpp，python，flash&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="21d34c0db159cd5c7be498e9d66d0e08bade2282" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available on php, js, neko, cpp, macro, lua, python, hl, flash&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;适用于php，js，neko，cpp，宏，lua，python，hl，flash&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="537d5ed86e563a7e47ae92e4b6666cdc0b383688" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: the callback is still invoked when generation is disabled with &lt;code&gt;--no-output&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;注意&lt;/em&gt;：使用 &lt;code&gt;--no-output&lt;/code&gt; 禁用生成时，仍将调用回调。</target>
        </trans-unit>
        <trans-unit id="cdf386cd8b95120f42fa8a31a4ab8133087ee4f7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../int&quot;&gt;Int&lt;/a&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../int&quot;&gt;Int&lt;/a&gt;&amp;gt;&lt;/code&gt; &amp;lt; &lt;a href=&quot;../../int&quot;&gt;Int&lt;/a&gt; &amp;gt;的&lt;em&gt;别名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6947b573839f1881bad0ec21323519c3fea82678" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&amp;gt;&lt;/code&gt; &amp;lt;&lt;a href=&quot;../../string&quot;&gt;字符串&lt;/a&gt;&amp;gt;的&lt;em&gt;别名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="72cbc397e8005700304ca7f65adc02dc4f6c787f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;&lt;a href=&quot;https://api.haxe.org/cpp/UInt8.html&quot;&gt;cpp.UInt8&lt;/a&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;&lt;a href=&quot;https://api.haxe.org/cpp/UInt8.html&quot;&gt;cpp.UInt8&lt;/a&gt;&amp;gt;&lt;/code&gt; &amp;lt; &lt;a href=&quot;https://api.haxe.org/cpp/UInt8.html&quot;&gt;cpp.UInt8&lt;/a&gt; &amp;gt;的&lt;em&gt;别名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="89eb22376f552eec9938ee623933b7b23cea5a27" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;&lt;a href=&quot;jsonclassfield&quot;&gt;haxe.display.JsonClassField&lt;/a&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;&lt;a href=&quot;jsonclassfield&quot;&gt;haxe.display.JsonClassField&lt;/a&gt;&amp;gt;&lt;/code&gt; &amp;lt; &lt;a href=&quot;jsonclassfield&quot;&gt;haxe.display.JsonClassField&lt;/a&gt; &amp;gt;的&lt;em&gt;别名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="496e1c0dafcf8008530f4175cd79de733e82cb3c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;&lt;a href=&quot;jsonenumfield&quot;&gt;haxe.display.JsonEnumField&lt;/a&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;&lt;a href=&quot;jsonenumfield&quot;&gt;haxe.display.JsonEnumField&lt;/a&gt;&amp;gt;&lt;/code&gt; &amp;lt; &lt;a href=&quot;jsonenumfield&quot;&gt;haxe.display.JsonEnumField&lt;/a&gt; &amp;gt;的&lt;em&gt;别名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a2ab46a77636b269db224f4428cac992ed81fffb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;&lt;a href=&quot;jsonmetadataentry&quot;&gt;haxe.display.JsonMetadataEntry&lt;/a&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;&lt;a href=&quot;jsonmetadataentry&quot;&gt;haxe.display.JsonMetadataEntry&lt;/a&gt;&amp;gt;&lt;/code&gt; &amp;lt; &lt;a href=&quot;jsonmetadataentry&quot;&gt;haxe.display.JsonMetadataEntry&lt;/a&gt; &amp;gt;的&lt;em&gt;别名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2ad800fe19586f3d2c5d09c48140f13330e99980" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;&lt;a href=&quot;jsonmoduletype&quot;&gt;haxe.display.JsonModuleType&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../dynamic&quot;&gt;Dynamic&lt;/a&gt;&amp;gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;&lt;a href=&quot;jsonmoduletype&quot;&gt;haxe.display.JsonModuleType&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../dynamic&quot;&gt;Dynamic&lt;/a&gt;&amp;gt;&amp;gt;&lt;/code&gt; &amp;lt; &lt;a href=&quot;jsonmoduletype&quot;&gt;haxe.display.JsonModuleType&lt;/a&gt; &amp;lt;&lt;a href=&quot;../../dynamic&quot;&gt;动态&lt;/a&gt;&amp;gt;&amp;gt;的&lt;em&gt;别名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ca911cdb9a2e84afcd9d88d5fb66965c62661986" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;&lt;a href=&quot;jsontype&quot;&gt;haxe.display.JsonType&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../dynamic&quot;&gt;Dynamic&lt;/a&gt;&amp;gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;&lt;a href=&quot;jsontype&quot;&gt;haxe.display.JsonType&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../dynamic&quot;&gt;Dynamic&lt;/a&gt;&amp;gt;&amp;gt;&lt;/code&gt; &amp;lt; &lt;a href=&quot;jsontype&quot;&gt;haxe.display.JsonType&lt;/a&gt; &amp;lt;&lt;a href=&quot;../../dynamic&quot;&gt;动态&lt;/a&gt;&amp;gt;&amp;gt;的&lt;em&gt;别名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="da2840d915c711da4e0c0170a520104a028359b3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;&lt;a href=&quot;jsontypeparameter&quot;&gt;haxe.display.JsonTypeParameter&lt;/a&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;&lt;a href=&quot;jsontypeparameter&quot;&gt;haxe.display.JsonTypeParameter&lt;/a&gt;&amp;gt;&lt;/code&gt; &amp;lt; &lt;a href=&quot;jsontypeparameter&quot;&gt;haxe.display.JsonTypeParameter&lt;/a&gt; &amp;gt;的&lt;em&gt;别名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="14f1fc0226264ea95d653bae3516ba9ee2f1c2e7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;&lt;a href=&quot;metadataentry&quot;&gt;haxe.macro.MetadataEntry&lt;/a&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;&lt;a href=&quot;metadataentry&quot;&gt;haxe.macro.MetadataEntry&lt;/a&gt;&amp;gt;&lt;/code&gt; &amp;lt; &lt;a href=&quot;metadataentry&quot;&gt;haxe.macro.MetadataEntry&lt;/a&gt; &amp;gt;的&lt;em&gt;别名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="52d3cc53f9077e3308ad64df75e06549734811ac" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;&lt;a href=&quot;typetree&quot;&gt;haxe.rtti.TypeTree&lt;/a&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;&lt;a href=&quot;typetree&quot;&gt;haxe.rtti.TypeTree&lt;/a&gt;&amp;gt;&lt;/code&gt; &amp;lt; &lt;a href=&quot;typetree&quot;&gt;haxe.rtti.TypeTree&lt;/a&gt; &amp;gt;的&lt;em&gt;别名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bae3344e30d9dc89ccb080c957488d800e3abf7c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;{params:&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&amp;gt;, name:&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;}&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;{params:&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&amp;gt;, name:&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;}&amp;gt;&lt;/code&gt; &amp;lt;{params：&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt; &amp;lt;&lt;a href=&quot;../../string&quot;&gt;字符串&lt;/a&gt;&amp;gt;，名称：&lt;a href=&quot;../../string&quot;&gt;字符串&lt;/a&gt;}&amp;gt;的&lt;em&gt;别名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="53580def6910e3d159d260bec1b69eb2682cd91a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;{severity:&lt;a href=&quot;haxeresponseerrorseverity&quot;&gt;haxe.display.HaxeResponseErrorSeverity&lt;/a&gt;, message:&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;, location:&lt;a href=&quot;../../null&quot;&gt;Null&lt;/a&gt;&amp;lt;&lt;a href=&quot;location&quot;&gt;haxe.display.Location&lt;/a&gt;&amp;gt;}&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;{severity:&lt;a href=&quot;haxeresponseerrorseverity&quot;&gt;haxe.display.HaxeResponseErrorSeverity&lt;/a&gt;, message:&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;, location:&lt;a href=&quot;../../null&quot;&gt;Null&lt;/a&gt;&amp;lt;&lt;a href=&quot;location&quot;&gt;haxe.display.Location&lt;/a&gt;&amp;gt;}&amp;gt;&lt;/code&gt; &amp;lt;{severity：&lt;a href=&quot;haxeresponseerrorseverity&quot;&gt;haxe.display.HaxeResponseErrorSeverity的&lt;/a&gt;&lt;em&gt;别名&lt;/em&gt;，消息：&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;，位置：&lt;a href=&quot;../../null&quot;&gt;Null&lt;/a&gt; &amp;lt; &lt;a href=&quot;location&quot;&gt;haxe.display.Location&lt;/a&gt; &amp;gt;}&amp;gt;</target>
        </trans-unit>
        <trans-unit id="9748e01bb05547b2e4587070df34885fe209b4d0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;../../dynamic&quot;&gt;Dynamic&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;../../dynamic&quot;&gt;Dynamic&lt;/a&gt;&lt;/code&gt; &lt;em&gt;别名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4f007b29e6d2e1283fd4f2c87aeeab059b013a2a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;../../null&quot;&gt;Null&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;../../null&quot;&gt;Null&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&amp;gt;&lt;/code&gt; &amp;lt;&lt;a href=&quot;../../string&quot;&gt;字符串&lt;/a&gt;&amp;gt;的&lt;em&gt;别名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7a53d563b55ec308874618aa86fb7b836f3ed146" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; &lt;em&gt;别名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bb74c52d40a85a53695fb377d6f56c54ff411572" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;access&quot;&gt;haxe.xml.Access&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;access&quot;&gt;haxe.xml.Access&lt;/a&gt;&lt;/code&gt; 的&lt;em&gt;别名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f953e8caaa3a811a6727ff4cc892eee16b19712e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;arraybufferviewdata&quot;&gt;haxe.io.ArrayBufferViewData&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;arraybufferviewdata&quot;&gt;haxe.io.ArrayBufferViewData&lt;/a&gt;&lt;/code&gt; 的&lt;em&gt;别名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d31e4d833fbee392cc9b6d2371b9a228692d0d1e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;arraybufferviewimpl&quot;&gt;haxe.io.ArrayBufferViewImpl&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;arraybufferviewimpl&quot;&gt;haxe.io.ArrayBufferViewImpl&lt;/a&gt;&lt;/code&gt; 的&lt;em&gt;别名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="62f44b6b97d8d5fd0b0069fecdfec70d161811f4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;bytesdataabstract&quot;&gt;haxe.io.BytesDataAbstract&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;bytesdataabstract&quot;&gt;haxe.io.BytesDataAbstract&lt;/a&gt;&lt;/code&gt; 的&lt;em&gt;别名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b7b24bdba29d47640bf159e7cf1139facfe03110" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;expr&quot;&gt;haxe.macro.Expr&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;expr&quot;&gt;haxe.macro.Expr&lt;/a&gt;&lt;/code&gt; 的&lt;em&gt;别名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="63a19198b8c33a9cef15f28bb40dabd37b2924c7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;haxe/ds/list&quot;&gt;haxe.ds.List&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;haxe/ds/list&quot;&gt;haxe.ds.List&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; &amp;lt;T&amp;gt;的&lt;em&gt;别名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fbc12fa1b290c6475c2c1e620b2be5c035075504" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;haxe/ds/map&quot;&gt;haxe.ds.Map&lt;/a&gt;&amp;lt;K, V&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;haxe/ds/map&quot;&gt;haxe.ds.Map&lt;/a&gt;&amp;lt;K, V&amp;gt;&lt;/code&gt; &amp;lt;K，V&amp;gt;的&lt;em&gt;别名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="238715fb84009ba339a93ec6c3d931e7786b687f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;http/httpjs&quot;&gt;haxe.http.HttpJs&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;http/httpjs&quot;&gt;haxe.http.HttpJs&lt;/a&gt;&lt;/code&gt; 的&lt;em&gt;别名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="15d670f023ea32f22cb918dcef8b56c05cd55eeb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;httpflash&quot;&gt;haxe.HttpFlash&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;httpflash&quot;&gt;haxe.HttpFlash&lt;/a&gt;&lt;/code&gt; 的&lt;em&gt;别名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2045010554a7864f94a8942ac59edcdaa3910c86" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;https://api.haxe.org/cs/NativeArray.html&quot;&gt;cs.NativeArray&lt;/a&gt;&amp;lt;&lt;a href=&quot;https://api.haxe.org/cs/UInt8.html&quot;&gt;cs.UInt8&lt;/a&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;https://api.haxe.org/cs/NativeArray.html&quot;&gt;cs.NativeArray&lt;/a&gt;&amp;lt;&lt;a href=&quot;https://api.haxe.org/cs/UInt8.html&quot;&gt;cs.UInt8&lt;/a&gt;&amp;gt;&lt;/code&gt; &amp;lt; &lt;a href=&quot;https://api.haxe.org/cs/UInt8.html&quot;&gt;cs.UInt8&lt;/a&gt; &amp;gt;的&lt;em&gt;别名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a6e35cea7235671a318c1031e08e33230919d44d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;https://api.haxe.org/flash/utils/ByteArray.html&quot;&gt;flash.utils.ByteArray&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;https://api.haxe.org/flash/utils/ByteArray.html&quot;&gt;flash.utils.ByteArray&lt;/a&gt;&lt;/code&gt; 的&lt;em&gt;别名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a0c025dc69b50aa0889416271c4962afdc48ebec" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;https://api.haxe.org/java/NativeArray.html&quot;&gt;java.NativeArray&lt;/a&gt;&amp;lt;&lt;a href=&quot;https://api.haxe.org/java/Int8.html&quot;&gt;java.Int8&lt;/a&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;https://api.haxe.org/java/NativeArray.html&quot;&gt;java.NativeArray&lt;/a&gt;&amp;lt;&lt;a href=&quot;https://api.haxe.org/java/Int8.html&quot;&gt;java.Int8&lt;/a&gt;&amp;gt;&lt;/code&gt; &amp;lt; &lt;a href=&quot;https://api.haxe.org/java/Int8.html&quot;&gt;java.Int8&lt;/a&gt; &amp;gt;的&lt;em&gt;别名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ab53b5ea50dcb390ec129b7b67f8016e6501311e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;https://api.haxe.org/js/lib/ArrayBuffer.html&quot;&gt;js.lib.ArrayBuffer&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;https://api.haxe.org/js/lib/ArrayBuffer.html&quot;&gt;js.lib.ArrayBuffer&lt;/a&gt;&lt;/code&gt; 的&lt;em&gt;别名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c15dc4bb96717aa12d5b9c0748b633dd0ee3164a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;https://api.haxe.org/js/lib/ArrayBufferView.html&quot;&gt;js.lib.ArrayBufferView&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;https://api.haxe.org/js/lib/ArrayBufferView.html&quot;&gt;js.lib.ArrayBufferView&lt;/a&gt;&lt;/code&gt; 的&lt;em&gt;别名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9e074de74ed5be2c43911df551c2bc84555f1912" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;https://api.haxe.org/js/lib/Float32Array.html&quot;&gt;js.lib.Float32Array&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;https://api.haxe.org/js/lib/Float32Array.html&quot;&gt;js.lib.Float32Array&lt;/a&gt;&lt;/code&gt; 的&lt;em&gt;别名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="12aaf928b33ae66d248b50c5c2688465ad3ef5b9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;https://api.haxe.org/js/lib/Float64Array.html&quot;&gt;js.lib.Float64Array&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;https://api.haxe.org/js/lib/Float64Array.html&quot;&gt;js.lib.Float64Array&lt;/a&gt;&lt;/code&gt; 的&lt;em&gt;别名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="eb67254802a367ae7bfa44f18515e6e9595fc769" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;https://api.haxe.org/js/lib/Int32Array.html&quot;&gt;js.lib.Int32Array&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;https://api.haxe.org/js/lib/Int32Array.html&quot;&gt;js.lib.Int32Array&lt;/a&gt;&lt;/code&gt; 的&lt;em&gt;别名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c7a55a5a92ca6c8f77646b375dd3b21e17922572" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;https://api.haxe.org/js/lib/Uint16Array.html&quot;&gt;js.lib.Uint16Array&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;https://api.haxe.org/js/lib/Uint16Array.html&quot;&gt;js.lib.Uint16Array&lt;/a&gt;&lt;/code&gt; 的&lt;em&gt;别名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ea55d048b45a772f5bb839f9ad4318cc0cfccda2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;https://api.haxe.org/js/lib/Uint32Array.html&quot;&gt;js.lib.Uint32Array&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;https://api.haxe.org/js/lib/Uint32Array.html&quot;&gt;js.lib.Uint32Array&lt;/a&gt;&lt;/code&gt; 的&lt;em&gt;别名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="357027f0ffd494e1e584cba50357a810ba75f50d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;https://api.haxe.org/js/lib/Uint8Array.html&quot;&gt;js.lib.Uint8Array&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;https://api.haxe.org/js/lib/Uint8Array.html&quot;&gt;js.lib.Uint8Array&lt;/a&gt;&lt;/code&gt; 的&lt;em&gt;别名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="22845502461587d76dea0751e610f3838be107ad" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;https://api.haxe.org/neko/NativeString.html&quot;&gt;neko.NativeString&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;https://api.haxe.org/neko/NativeString.html&quot;&gt;neko.NativeString&lt;/a&gt;&lt;/code&gt; 的&lt;em&gt;别名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d4ad564594d10b769fb2b58fe35260073c8a3118" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;https://api.haxe.org/python/Bytearray.html&quot;&gt;python.Bytearray&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;https://api.haxe.org/python/Bytearray.html&quot;&gt;python.Bytearray&lt;/a&gt;&lt;/code&gt; 的&lt;em&gt;别名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="727496e326cfbae4db34214ae52ccd9b8765d95e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;https://api.haxe.org/sys/Http.html&quot;&gt;sys.Http&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;https://api.haxe.org/sys/Http.html&quot;&gt;sys.Http&lt;/a&gt;&lt;/code&gt; 的&lt;em&gt;别名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1e21ad21e70d961081afa94ba59cb78770ed9fa8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;iterator&quot;&gt;Iterator&lt;/a&gt;&amp;lt;{value:V, key:K}&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;iterator&quot;&gt;Iterator&lt;/a&gt;&amp;lt;{value:V, key:K}&amp;gt;&lt;/code&gt; &lt;em&gt;别名&lt;/em&gt;&amp;lt;{value：V，key：K}&amp;gt;</target>
        </trans-unit>
        <trans-unit id="5f2372f49f37da8ad901d47e317fa1ff53a2d34c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;jsontodo&quot;&gt;haxe.display.JsonTodo&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;jsontodo&quot;&gt;haxe.display.JsonTodo&lt;/a&gt;&lt;/code&gt; 的&lt;em&gt;别名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="da0600e72bc0d22e6737afd2a948171abc93dfa3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;response&quot;&gt;haxe.display.Response&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&amp;gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;response&quot;&gt;haxe.display.Response&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&amp;gt;&amp;gt;&lt;/code&gt; &lt;em&gt;别名&lt;/em&gt;&amp;lt;&lt;a href=&quot;../../array&quot;&gt;数组&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../string&quot;&gt;字符串&lt;/a&gt;&amp;gt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="4139e9e32d0e1267cc3404e8345518ad047f4b65" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;response&quot;&gt;haxe.display.Response&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;&lt;a href=&quot;location&quot;&gt;haxe.display.Location&lt;/a&gt;&amp;gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;response&quot;&gt;haxe.display.Response&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;&lt;a href=&quot;location&quot;&gt;haxe.display.Location&lt;/a&gt;&amp;gt;&amp;gt;&lt;/code&gt; &lt;em&gt;别名&lt;/em&gt;&amp;lt;&lt;a href=&quot;../../array&quot;&gt;数组&lt;/a&gt;&amp;lt; &lt;a href=&quot;location&quot;&gt;haxe.display.Location&lt;/a&gt; &amp;gt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="ffbd9baee6cf610493449cdfe4607faae964ad95" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;response&quot;&gt;haxe.display.Response&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../null&quot;&gt;Null&lt;/a&gt;&amp;lt;&lt;a href=&quot;completionresponse&quot;&gt;haxe.display.CompletionResponse&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../dynamic&quot;&gt;Dynamic&lt;/a&gt;, &lt;a href=&quot;../../dynamic&quot;&gt;Dynamic&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;response&quot;&gt;haxe.display.Response&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../null&quot;&gt;Null&lt;/a&gt;&amp;lt;&lt;a href=&quot;completionresponse&quot;&gt;haxe.display.CompletionResponse&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../dynamic&quot;&gt;Dynamic&lt;/a&gt;, &lt;a href=&quot;../../dynamic&quot;&gt;Dynamic&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; &lt;em&gt;别名&lt;/em&gt;&amp;lt; &lt;a href=&quot;../../null&quot;&gt;Null&lt;/a&gt; &amp;lt; &lt;a href=&quot;completionresponse&quot;&gt;haxe.display.CompletionResponse&lt;/a&gt; &amp;lt;&lt;a href=&quot;../../dynamic&quot;&gt;动态&lt;/a&gt;，&lt;a href=&quot;../../dynamic&quot;&gt;动态&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="a4b37e88090d39660d58568a3c48578d59e1141a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;response&quot;&gt;haxe.display.Response&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../null&quot;&gt;Null&lt;/a&gt;&amp;lt;&lt;a href=&quot;hoverdisplayitemoccurence&quot;&gt;haxe.display.HoverDisplayItemOccurence&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../dynamic&quot;&gt;Dynamic&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;response&quot;&gt;haxe.display.Response&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../null&quot;&gt;Null&lt;/a&gt;&amp;lt;&lt;a href=&quot;hoverdisplayitemoccurence&quot;&gt;haxe.display.HoverDisplayItemOccurence&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../dynamic&quot;&gt;Dynamic&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; &lt;em&gt;别名&lt;/em&gt;&amp;lt; &lt;a href=&quot;../../null&quot;&gt;Null&lt;/a&gt; &amp;lt; &lt;a href=&quot;hoverdisplayitemoccurence&quot;&gt;haxe.display.HoverDisplayItemOccurence&lt;/a&gt; &amp;lt;&lt;a href=&quot;../../dynamic&quot;&gt;动态&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="d307a09f5672c31dbeb979d80b6f963889e67062" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;response&quot;&gt;haxe.display.Response&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../null&quot;&gt;Null&lt;/a&gt;&amp;lt;&lt;a href=&quot;signatureitem&quot;&gt;haxe.display.SignatureItem&lt;/a&gt;&amp;gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;response&quot;&gt;haxe.display.Response&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../null&quot;&gt;Null&lt;/a&gt;&amp;lt;&lt;a href=&quot;signatureitem&quot;&gt;haxe.display.SignatureItem&lt;/a&gt;&amp;gt;&amp;gt;&lt;/code&gt; &lt;em&gt;别名&lt;/em&gt;&amp;lt; &lt;a href=&quot;../../null&quot;&gt;Null&lt;/a&gt; &amp;lt; &lt;a href=&quot;signatureitem&quot;&gt;haxe.display.SignatureItem&lt;/a&gt; &amp;gt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="63c73b7931e133b7eb630bb3e69341d67938778b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;response&quot;&gt;haxe.display.Response&lt;/a&gt;&amp;lt;{item:&lt;a href=&quot;displayitem&quot;&gt;haxe.display.DisplayItem&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../dynamic&quot;&gt;Dynamic&lt;/a&gt;&amp;gt;}&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;response&quot;&gt;haxe.display.Response&lt;/a&gt;&amp;lt;{item:&lt;a href=&quot;displayitem&quot;&gt;haxe.display.DisplayItem&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../dynamic&quot;&gt;Dynamic&lt;/a&gt;&amp;gt;}&amp;gt;&lt;/code&gt; &lt;em&gt;别名&lt;/em&gt;&amp;lt;{item：&lt;a href=&quot;displayitem&quot;&gt;haxe.display.DisplayItem&lt;/a&gt; &amp;lt;&lt;a href=&quot;../../dynamic&quot;&gt;动态&lt;/a&gt;&amp;gt;}&amp;gt;</target>
        </trans-unit>
        <trans-unit id="c2400e64c69fded55a99bb4bbd648ff8297a7e17" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;&lt;a href=&quot;response&quot;&gt;haxe.display.Response&lt;/a&gt;&amp;lt;{protocolVersion:&lt;a href=&quot;version&quot;&gt;haxe.display.Version&lt;/a&gt;, methods:&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&amp;gt;, haxeVersion:&lt;a href=&quot;version&quot;&gt;haxe.display.Version&lt;/a&gt;}&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;response&quot;&gt;haxe.display.Response&lt;/a&gt;&amp;lt;{protocolVersion:&lt;a href=&quot;version&quot;&gt;haxe.display.Version&lt;/a&gt;, methods:&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&amp;gt;, haxeVersion:&lt;a href=&quot;version&quot;&gt;haxe.display.Version&lt;/a&gt;}&amp;gt;&lt;/code&gt; &lt;em&gt;别名&lt;/em&gt;&amp;lt;{protocolVersion：&lt;a href=&quot;version&quot;&gt;haxe.display.Version&lt;/a&gt;，方法：&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt; &amp;lt; &lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt; &amp;gt;，haxeVersion：&lt;a href=&quot;version&quot;&gt;haxe.display.Version&lt;/a&gt; }&amp;gt;</target>
        </trans-unit>
        <trans-unit id="daec7399567cc7ebd32dc95065efce7bbff09343" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;BytesDataAbstract&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;BytesDataAbstract&lt;/code&gt; 的&lt;em&gt;别名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f357e89141adfd7d29a3abc198ce26ccc9b6fc8c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;alias for &lt;/em&gt;&lt;code&gt;NativeBytesDataAbstract&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt; &lt;code&gt;NativeBytesDataAbstract&lt;/code&gt; 的&lt;em&gt;别名&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dcc6d0189a9829bde92474bed45b16ba9f9f0224" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Deprecated:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="160b1c1071a5363e3c02dd95b218b8be3a3346e0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; &quot;Std.instance() is deprecated. Use Std.downcast() instead.&quot;</source>
          <target state="translated">&lt;strong&gt;不&lt;/strong&gt;推荐&lt;strong&gt;使用：&lt;/strong&gt; &amp;ldquo;不推荐使用Std.instance（）。请改用Std.downcast（）。&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="e011c6a59c032dae2c71b94f517cd35b332cf6b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; &quot;Use Context.getLocalTVars() instead&quot;</source>
          <target state="translated">&lt;strong&gt;弃用：&lt;/strong&gt; &amp;ldquo;改用Context.getLocalTVars（）&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="6f23e33c97c742d0f6b28df63b2ce16e31af5c33" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; &quot;Use high instead&quot;</source>
          <target state="translated">&lt;strong&gt;不推荐使用：&lt;/strong&gt; &amp;ldquo;改用高价&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="ca39ebaf515da844938b0ce80a066a8cddd2582c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; &quot;Use low instead&quot;</source>
          <target state="translated">&lt;strong&gt;弃用：&lt;/strong&gt; &amp;ldquo;改用低电量&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="52b13cf71ddceb70aa16ddb4920d9288a604ead1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; &quot;haxe.Int64.is() is deprecated. Use haxe.Int64.isInt64() instead&quot;</source>
          <target state="translated">&lt;strong&gt;不&lt;/strong&gt;推荐&lt;strong&gt;使用：&lt;/strong&gt; &amp;ldquo;不推荐使用haxe.Int64.is（）。请改用haxe.Int64.isInt64（）&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="812df425102777a76392a9682d5e85fef2cb004b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; &quot;haxe.Utf8 is deprecated. Use UnicodeString instead.&quot;</source>
          <target state="translated">&lt;strong&gt;不&lt;/strong&gt;推荐&lt;strong&gt;使用：&lt;/strong&gt; &amp;ldquo;不推荐使用haxe.Utf8。请改用UnicodeString。&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="c35bccbff37a92af34c6e27a87f94d9353716921" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated:&lt;/strong&gt; &quot;readString is deprecated, use getString instead&quot;</source>
          <target state="translated">&lt;strong&gt;不&lt;/strong&gt;推荐&lt;strong&gt;使用：&lt;/strong&gt; &amp;ldquo;不推荐使用readString，请改用getString&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="9e3cacf29b6070c947cf4a504fc965d1df14de79" translate="yes" xml:space="preserve">
          <source>=&amp;amp;=^=%=`</source>
          <target state="translated">=&amp;amp;=^=%=`</target>
        </trans-unit>
        <trans-unit id="4323deaec32ee720f580c54c5bc083d0dff0a1b2" translate="yes" xml:space="preserve">
          <source>@:access(haxe.MainEvent)&lt;em&gt;Available on all platforms&lt;/em&gt;</source>
          <target state="translated">@：access（haxe.MainEvent）&lt;em&gt;在所有平台上都可用&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e715c2605ef3130f95c48a29615188189172badd" translate="yes" xml:space="preserve">
          <source>@:buildXml(&quot;&amp;lt;include name=\&quot;${HXCPP}/src/hx/libs/regexp/Build.xml\&quot;/&amp;gt;&quot;)@:coreApi&lt;em&gt;Available on all platforms&lt;/em&gt;</source>
          <target state="translated">@：buildXml（&amp;ldquo; &amp;lt;​​include name = \&amp;rdquo; $ {HXCPP} /src/hx/libs/regexp/Build.xml \&amp;ldquo; /&amp;gt;&amp;rdquo;&amp;ldquo;）@：coreApi &lt;em&gt;在所有平台上均可用&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="70096ec99737488ea9ee7061d0c8913ce16762f1" translate="yes" xml:space="preserve">
          <source>@:coreApi&lt;em&gt;Available on all platforms&lt;/em&gt;</source>
          <target state="translated">@：coreApi &lt;em&gt;在所有平台上均可用&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5daaa177a46810b2993d7d73489c318f6bf30e64" translate="yes" xml:space="preserve">
          <source>@:coreApi@:analyzer(ignore)&lt;em&gt;Available on all platforms&lt;/em&gt;</source>
          <target state="translated">@：coreApi @：analyzer（ignore）&lt;em&gt;在所有平台上都可用&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6565d96db9f2653fb8f5b8ff4debb8c0d4b1509f" translate="yes" xml:space="preserve">
          <source>@:coreApi@:buildXml(&quot;&amp;lt;include name=\&quot;${HXCPP}/src/hx/libs/zlib/Build.xml\&quot; /&amp;gt;&quot;)&lt;em&gt;Available on all platforms&lt;/em&gt;</source>
          <target state="translated">@：coreApi @：buildXml（&amp;ldquo; &amp;lt;​​include name = \&amp;rdquo; $ {HXCPP} /src/hx/libs/zlib/Build.xml \&amp;ldquo; /&amp;gt;&amp;rdquo;）&lt;em&gt;在所有平台上都可用&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="293daa01cffc84ef6079b58f32d1440d4d03d907" translate="yes" xml:space="preserve">
          <source>@:coreApi@:buildXml(&quot;&amp;lt;include name=\&quot;${HXCPP}/src/hx/libs/zlib/Build.xml\&quot;/&amp;gt;&quot;)&lt;em&gt;Available on all platforms&lt;/em&gt;</source>
          <target state="translated">@：coreApi @：buildXml（&amp;ldquo; &amp;lt;​​include name = \&amp;rdquo; $ {HXCPP} /src/hx/libs/zlib/Build.xml \&amp;ldquo; /&amp;gt;&amp;rdquo;&amp;ldquo;）&lt;em&gt;在所有平台上都可用&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b2e01e72a25c983392c4d55bfbe5d7850baf0a3c" translate="yes" xml:space="preserve">
          <source>@:expose&lt;em&gt;Available on all platforms&lt;/em&gt;</source>
          <target state="translated">@：expose &lt;em&gt;在所有平台上都可用&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="36992d44a85b8870f207c151946ad4bbb6b107b7" translate="yes" xml:space="preserve">
          <source>@:generic&lt;em&gt;Available on all platforms&lt;/em&gt;</source>
          <target state="translated">@：generic &lt;em&gt;在所有平台上均可用&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="507a233ea35324e8a6ff3bb08312615da0eb8729" translate="yes" xml:space="preserve">
          <source>@:headerClassCode(&quot;\n inline void set(Dynamic key, ::null value) { __object_hash_set(h,key,value); }\n inline void set(Dynamic key, bool value) { __object_hash_set(h,key,value); }\n inline void set(Dynamic key, char value) { __object_hash_set_int(h,key,value); }\n inline void set(Dynamic key, unsigned char value) { __object_hash_set_int(h,key,value); }\n inline void set(Dynamic key, signed char value) { __object_hash_set_int(h,key,value); }\n inline void set(Dynamic key, short value) { __object_hash_set_int(h,key,value); }\n inline void set(Dynamic key, unsigned short value) { __object_hash_set_int(h,key,value); }\n inline void set(Dynamic key, int value) { __object_hash_set_int(h,key,value); }\n inline void set(Dynamic key, unsigned int value) { __object_hash_set_int(h,key,value); }\n inline void set(Dynamic key, float value) { __object_hash_set_float(h,key,value); }\n inline void set(Dynamic key, double value) { __object_hash_set_float(h,key,value); }\n inline void set(Dynamic key, ::String value) { __object_hash_set_string(h,key,value); }\n\n\n template&amp;lt;typename V, typename H&amp;gt;\n inline void set(Dynamic key, const ::cpp::Struct&amp;lt;V,H&amp;gt; &amp;amp;value) {__object_hash_set(h,key,value); }\n template&amp;lt;typename V&amp;gt;\n inline void set(Dynamic key, const ::cpp::Function&amp;lt;V&amp;gt; &amp;amp;value) {__object_hash_set(h,key,(Dynamic)value ); }\n template&amp;lt;typename V&amp;gt;\n inline void set(Dynamic key, const ::cpp::Pointer&amp;lt;V&amp;gt; &amp;amp;value) {__object_hash_set(h,key,(Dynamic)value ); }\n\n&quot;)@:coreApi&lt;em&gt;Available on all platforms&lt;/em&gt;</source>
          <target state="translated">@：headerClassCode（&amp;ldquo; \ n内联无效集（动态键，:: null值）{__object_hash_set（h，key，value）;} \ n内联无效集（动态键，布尔值）{__object_hash_set（h，key，value ）;} \ n内联无效集（动态键，字符值）{__object_hash_set_int（h，key，value）;} \ n内联无效集（动态键，无符号字符值）{__object_hash_set_int（h，key，value）;} \ n内联无效集（动态键，带符号的char值）{__object_hash_set_int（h，key，value）;} \ n内联无效集（动态键，短值）{__object_hash_set_int（h，key，value）;} \ n内联无效集（动态键，无符号短值）{__object_hash_set_int（h，key，value）;} \ n内联无效集（动态键，int值）{__object_hash_set_int（h，key，value）;} \ n内联无效集（动态键，无符号的int值）{__object_hash_set_int（h，key，value）;} \ n内联无效集（动态键，浮点值）{__object_hash_set_float（h，key，value）; } \ n内联void集（动态键，双精度值）{__object_hash_set_float（h，key，value）; } \ n内联void集（动态键，:: String值）{__object_hash_set_string（h，key，value）; } \ n \ n \ n template &amp;lt;类型名V，类型名H&amp;gt; \ n内联无效集（动态键，const :: cpp :: Struct &amp;lt;V，H&amp;gt;＆value）{__object_hash_set（h，key，value）; } \ n template &amp;lt;类型名V&amp;gt; \ n内联无效集（动态键，const :: cpp :: Function &amp;lt;V&amp;gt;＆value）{__object_hash_set（h，key，（Dynamic）value）; } \ n template &amp;lt;类型名称V&amp;gt; \ n内联无效集（动态键，const :: cpp :: Pointer &amp;lt;V&amp;gt;＆value）{__object_hash_set（h，key，（Dynamic）value）; } \ n \ n&amp;ldquo;）@：coreApi字符串值）{__object_hash_set_string（h，key，value）; } \ n \ n \ n template &amp;lt;类型名V，类型名H&amp;gt; \ n内联无效集（动态键，const :: cpp :: Struct &amp;lt;V，H&amp;gt;＆value）{__object_hash_set（h，key，value）; } \ n template &amp;lt;类型名V&amp;gt; \ n内联无效集（动态键，const :: cpp :: Function &amp;lt;V&amp;gt;＆value）{__object_hash_set（h，key，（Dynamic）value）; } \ n template &amp;lt;typename V&amp;gt; \ n内联无效集（动态键，const :: cpp :: Pointer &amp;lt;V&amp;gt;＆value）{__object_hash_set（h，key，（Dynamic）value）; } \ n \ n&amp;ldquo;）@：coreApi字符串值）{__object_hash_set_string（h，key，value）; } \ n \ n \ n template &amp;lt;类型名V，类型名H&amp;gt; \ n内联无效集（动态键，const :: cpp :: Struct &amp;lt;V，H&amp;gt;＆value）{__object_hash_set（h，key，value）; } \ n template &amp;lt;typename V&amp;gt; \ n内联无效集（动态键，const :: cpp :: Function &amp;lt;V&amp;gt;＆value）{__object_hash_set（h，key，（Dynamic）value）; } \ n template &amp;lt;typename V&amp;gt; \ n内联无效集（动态键，const :: cpp :: Pointer &amp;lt;V&amp;gt;＆value）{__object_hash_set（h，key，（Dynamic）value）; } \ n \ n&amp;ldquo;）@：coreApi（动态）值）; } \ n template &amp;lt;类型名称V&amp;gt; \ n内联无效集（动态键，const :: cpp :: Pointer &amp;lt;V&amp;gt;＆value）{__object_hash_set（h，key，（Dynamic）value）; } \ n \ n&amp;ldquo;）@：coreApi（动态）值）; } \ n template &amp;lt;typename V&amp;gt; \ n内联无效集（动态键，const :: cpp :: Pointer &amp;lt;V&amp;gt;＆value）{__object_hash_set（h，key，（Dynamic）value）; } \ n \ n&amp;ldquo;）@：coreApi&lt;em&gt;适用于所有平台&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7115bb57aefe3f75eb9fb9650ac9596f514e2f59" translate="yes" xml:space="preserve">
          <source>@:headerClassCode(&quot;\n inline void set(Dynamic key, ::null value) { __object_hash_set(h,key,value,true); }\n inline void set(Dynamic key, bool value) { __object_hash_set(h,key,value,true); }\n inline void set(Dynamic key, char value) { __object_hash_set_int(h,key,value,true); }\n inline void set(Dynamic key, unsigned char value) { __object_hash_set_int(h,key,value,true); }\n inline void set(Dynamic key, signed char value) { __object_hash_set_int(h,key,value,true); }\n inline void set(Dynamic key, short value) { __object_hash_set_int(h,key,value,true); }\n inline void set(Dynamic key, unsigned short value) { __object_hash_set_int(h,key,value,true); }\n inline void set(Dynamic key, int value) { __object_hash_set_int(h,key,value,true); }\n inline void set(Dynamic key, unsigned int value) { __object_hash_set_int(h,key,value,true); }\n inline void set(Dynamic key, float value) { __object_hash_set_float(h,key,value,true); }\n inline void set(Dynamic key, double value) { __object_hash_set_float(h,key,value,true); }\n inline void set(Dynamic key, ::String value) { __object_hash_set_string(h,key,value,true); }\n\n template&amp;lt;typename V, typename H&amp;gt;\n inline void set(Dynamic key, const ::cpp::Struct&amp;lt;V,H&amp;gt; &amp;amp;value) {__object_hash_set(h,key,value,true); }\n template&amp;lt;typename V&amp;gt;\n inline void set(Dynamic key, const ::cpp::Pointer&amp;lt;V&amp;gt; &amp;amp;value) {__object_hash_set(h,key,(Dynamic)value,true ); }\n template&amp;lt;typename V&amp;gt;\n inline void set(Dynamic key, const ::cpp::Function&amp;lt;V&amp;gt; &amp;amp;value) {__object_hash_set(h,key,(Dynamic)value,true ); }\n&quot;)@:coreApi&lt;em&gt;Available on all platforms&lt;/em&gt;</source>
          <target state="translated">@：headerClassCode（&amp;ldquo; \ n内联无效集（动态键，:: null值）{__object_hash_set（h，key，value，true）;} \ n内联无效集（动态键，布尔值）{__object_hash_set（h，key ，value，true）;} \ n内联无效集（动态键，字符值）{__object_hash_set_int（h，key，value，true）;} \ n内联无效集（动态键，无符号字符值）{__object_hash_set_int（h， key，value，true）;} \ n内联void设置（动态键，带符号的char值）{__object_hash_set_int（h，key，value，true）;} \ n内联void设置（动态键，短值）{__object_hash_set_int（h ，key，value，true）;} \ n内联无效集（动态键，无符号短值）{__object_hash_set_int（h，key，value，true）;} \ n内联无效集（动态键，int值）{__object_hash_set_int（ h，key，value，true）;} \ n内联无效集（动态键，无符号int值）{__object_hash_set_int（h，key，value，true）;} \ n内联void集（动态键，浮点值）{__object_hash_set_float（h，key，value，true）; } \ n内联void集（动态键，双精度值）{__object_hash_set_float（h，key，value，true）; } \ n内联void集（动态键，:: String值）{__object_hash_set_string（h，key，value，true）; } \ n \ n template &amp;lt;类型名V，类型名H&amp;gt; \ n内联无效集（动态键，const :: cpp :: Struct &amp;lt;V，H&amp;gt;＆value）{__object_hash_set（h，key，value，true）; } \ n template &amp;lt;typename V&amp;gt; \ n内联无效集（动态键，const :: cpp :: Pointer &amp;lt;V&amp;gt;＆value）{__object_hash_set（h，key，（Dynamic）value，true）; } \ n template &amp;lt;类型名称V&amp;gt; \ n内联无效集（动态键，const :: cpp :: Function &amp;lt;V&amp;gt;＆value）{__object_hash_set（h，key，（Dynamic）value，true）; } \ n&amp;ldquo;）@：coreApi} \ n内联void集（动态键，双精度值）{__object_hash_set_float（h，key，value，true）; } \ n内联void集（动态键，:: String值）{__object_hash_set_string（h，key，value，true）; } \ n \ n template &amp;lt;类型名V，类型名H&amp;gt; \ n内联无效集（动态键，const :: cpp :: Struct &amp;lt;V，H&amp;gt;＆value）{__object_hash_set（h，key，value，true）; } \ n template &amp;lt;typename V&amp;gt; \ n内联无效集（动态键，const :: cpp :: Pointer &amp;lt;V&amp;gt;＆value）{__object_hash_set（h，key，（Dynamic）value，true）; } \ n template &amp;lt;类型名称V&amp;gt; \ n内联无效集（动态键，const :: cpp :: Function &amp;lt;V&amp;gt;＆value）{__object_hash_set（h，key，（Dynamic）value，true）; } \ n&amp;ldquo;）@：coreApi} \ n内联void集（动态键，双精度值）{__object_hash_set_float（h，key，value，true）; } \ n内联void集（动态键，:: String值）{__object_hash_set_string（h，key，value，true）; } \ n \ n template &amp;lt;类型名V，类型名H&amp;gt; \ n内联无效集（动态键，const :: cpp :: Struct &amp;lt;V，H&amp;gt;＆value）{__object_hash_set（h，key，value，true）; } \ n template &amp;lt;typename V&amp;gt; \ n内联无效集（动态键，const :: cpp :: Pointer &amp;lt;V&amp;gt;＆value）{__object_hash_set（h，key，（Dynamic）value，true）; } \ n template &amp;lt;类型名称V&amp;gt; \ n内联无效集（动态键，const :: cpp :: Function &amp;lt;V&amp;gt;＆value）{__object_hash_set（h，key，（Dynamic）value，true）; } \ n&amp;ldquo;）@：coreApi类型名称H&amp;gt; \ n内联无效集（动态键，const :: cpp :: Struct &amp;lt;V，H&amp;gt;＆value）{__object_hash_set（h，key，value，true）; } \ n template &amp;lt;typename V&amp;gt; \ n内联无效集（动态键，const :: cpp :: Pointer &amp;lt;V&amp;gt;＆value）{__object_hash_set（h，key，（Dynamic）value，true）; } \ n template &amp;lt;类型名称V&amp;gt; \ n内联无效集（动态键，const :: cpp :: Function &amp;lt;V&amp;gt;＆value）{__object_hash_set（h，key，（Dynamic）value，true）; } \ n&amp;ldquo;）@：coreApi类型名称H&amp;gt; \ n内联无效集（动态键，const :: cpp :: Struct &amp;lt;V，H&amp;gt;＆value）{__object_hash_set（h，key，value，true）; } \ n template &amp;lt;typename V&amp;gt; \ n内联无效集（动态键，const :: cpp :: Pointer &amp;lt;V&amp;gt;＆value）{__object_hash_set（h，key，（Dynamic）value，true）; } \ n template &amp;lt;类型名称V&amp;gt; \ n内联无效集（动态键，const :: cpp :: Function &amp;lt;V&amp;gt;＆value）{__object_hash_set（h，key，（Dynamic）value，true）; } \ n&amp;ldquo;）@：coreApi键，（动态）值，true）; } \ n&amp;ldquo;）@：coreApi键，（动态）值，true）; } \ n&amp;ldquo;）@：coreApi&lt;em&gt;适用于所有平台&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5aa7afafdb51e7e258b7b0281d7614f33907017d" translate="yes" xml:space="preserve">
          <source>@:headerClassCode(&quot;\n inline void set(String key, ::null value) { __string_hash_set(h,key,value); }\n inline void set(String key, bool value) { __string_hash_set(h,key,value); }\n inline void set(String key, char value) { __string_hash_set_int(h,key,value); }\n inline void set(String key, unsigned char value) { __string_hash_set_int(h,key,value); }\n inline void set(String key, signed char value) { __string_hash_set_int(h,key,value); }\n inline void set(String key, short value) { __string_hash_set_int(h,key,value); }\n inline void set(String key, unsigned short value) { __string_hash_set_int(h,key,value); }\n inline void set(String key, int value) { __string_hash_set_int(h,key,value); }\n inline void set(String key, unsigned int value) { __string_hash_set_int(h,key,value); }\n inline void set(String key, float value) { __string_hash_set_float(h,key,value); }\n inline void set(String key, double value) { __string_hash_set_float(h,key,value); }\n inline void set(String key, ::String value) { __string_hash_set_string(h,key,value); }\n\n template&amp;lt;typename V, typename H&amp;gt;\n inline void set(String key, const ::cpp::Struct&amp;lt;V,H&amp;gt; &amp;amp;value) {__string_hash_set(h,key,value); }\n template&amp;lt;typename V&amp;gt;\n inline void set(String key, const ::cpp::Function&amp;lt;V&amp;gt; &amp;amp;value) {__string_hash_set(h,key,(Dynamic)value ); }\n template&amp;lt;typename V&amp;gt;\n inline void set(String key, const ::cpp::Pointer&amp;lt;V&amp;gt; &amp;amp;value) {__string_hash_set(h,key,(Dynamic)value ); }\n\n template&amp;lt;typename VALUE&amp;gt;\n inline void set(Dynamic &amp;amp;key, const VALUE &amp;amp;value) { set( (String)key, value ); }\n&quot;)@:coreApi&lt;em&gt;Available on all platforms&lt;/em&gt;</source>
          <target state="translated">@：headerClassCode（&amp;ldquo; \ n内联无效集（String key，:: null value）{__string_hash_set（h，key，value）;} \ n内联无效集（String key，bool value）{__string_hash_set（h，key，value ）;} \ n内联无效集合（String key，char value）{__string_hash_set_int（h，key，value）;} \ n内联无效集合（String key，unsigned char value）{__string_hash_set_int（h，key，value）;} \ n内联无效集（字符串键，带符号的char值）{__string_hash_set_int（h，key，value）;} \ n内联无效集（字符串键，短值）{__string_hash_set_int（h，key，value）;} \ n内联void set（String key，unsigned short value）{__string_hash_set_int（h，key，value）;} \ n内联void set（String key，int value）{__string_hash_set_int（h，key，value）;} \ n内联void set（字符串键，无符号的int值）{__string_hash_set_int（h，key，value）;} \ n内联无效集（字符串键，浮点值）{__string_hash_set_float（h，key，value）; } \ n inline void set（String key，double value）{__string_hash_set_float（h，key，value）; } \ n inline void set（String key，:: String value）{__string_hash_set_string（h，key，value）; } \ n \ n template &amp;lt;类型名V，类型名H&amp;gt; \ n内联void set（String key，const :: cpp :: Struct &amp;lt;V，H&amp;gt;＆value）{__string_hash_set（h，key，value）; } \ n template &amp;lt;typename V&amp;gt; \ n内联无效集（字符串键，const :: cpp :: Function &amp;lt;V&amp;gt;＆value）{__string_hash_set（h，key，（Dynamic）value）; } \ n template &amp;lt;typename V&amp;gt; \ n内联无效集合（字符串键，const :: cpp :: Pointer &amp;lt;V&amp;gt;＆value）{__string_hash_set（h，key，（Dynamic）value）; } \ n \ n template &amp;lt;typename VALUE&amp;gt; \ n内联void set（Dynamic＆key，const VALUE＆value）{set（（String）key，value）; } \ n&amp;ldquo;）@：coreApi} \ n inline void set（String key，double value）{__string_hash_set_float（h，key，value）; } \ n inline void set（String key，:: String value）{__string_hash_set_string（h，key，value）; } \ n \ n template &amp;lt;类型名V，类型名H&amp;gt; \ n内联void set（String key，const :: cpp :: Struct &amp;lt;V，H&amp;gt;＆value）{__string_hash_set（h，key，value）; } \ n template &amp;lt;typename V&amp;gt; \ n内联无效集合（字符串键，const :: cpp :: Function &amp;lt;V&amp;gt;＆value）{__string_hash_set（h，key，（Dynamic）value）; } \ n template &amp;lt;typename V&amp;gt; \ n内联无效集合（字符串键，const :: cpp :: Pointer &amp;lt;V&amp;gt;＆value）{__string_hash_set（h，key，（Dynamic）value）; } \ n \ n template &amp;lt;typename VALUE&amp;gt; \ n内联void set（Dynamic＆key，const VALUE＆value）{set（（String）key，value）; } \ n&amp;ldquo;）@：coreApi} \ n inline void set（String key，double value）{__string_hash_set_float（h，key，value）; } \ n inline void set（String key，:: String value）{__string_hash_set_string（h，key，value）; } \ n \ n template &amp;lt;类型名V，类型名H&amp;gt; \ n内联void set（String key，const :: cpp :: Struct &amp;lt;V，H&amp;gt;＆value）{__string_hash_set（h，key，value）; } \ n template &amp;lt;typename V&amp;gt; \ n内联无效集合（字符串键，const :: cpp :: Function &amp;lt;V&amp;gt;＆value）{__string_hash_set（h，key，（Dynamic）value）; } \ n template &amp;lt;类型名称V&amp;gt; \ n内联无效集（字符串键，const :: cpp :: Pointer &amp;lt;V&amp;gt;＆value）{__string_hash_set（h，key，（Dynamic）value）; } \ n \ n template &amp;lt;typename VALUE&amp;gt; \ n内联void set（Dynamic＆key，const VALUE＆value）{set（（String）key，value）; } \ n&amp;ldquo;）@：coreApi字符串值）{__string_hash_set_string（h，key，value）; } \ n \ n template &amp;lt;类型名V，类型名H&amp;gt; \ n内联void set（String key，const :: cpp :: Struct &amp;lt;V，H&amp;gt;＆value）{__string_hash_set（h，key，value）; } \ n template &amp;lt;typename V&amp;gt; \ n内联无效集合（字符串键，const :: cpp :: Function &amp;lt;V&amp;gt;＆value）{__string_hash_set（h，key，（Dynamic）value）; } \ n template &amp;lt;typename V&amp;gt; \ n内联无效集合（字符串键，const :: cpp :: Pointer &amp;lt;V&amp;gt;＆value）{__string_hash_set（h，key，（Dynamic）value）; } \ n \ n template &amp;lt;typename VALUE&amp;gt; \ n内联void set（Dynamic＆key，const VALUE＆value）{set（（String）key，value）; } \ n&amp;ldquo;）@：coreApi字符串值）{__string_hash_set_string（h，key，value）; } \ n \ n template &amp;lt;类型名V，类型名H&amp;gt; \ n内联void set（String key，const :: cpp :: Struct &amp;lt;V，H&amp;gt;＆value）{__string_hash_set（h，key，value）; } \ n template &amp;lt;typename V&amp;gt; \ n内联无效集合（字符串键，const :: cpp :: Function &amp;lt;V&amp;gt;＆value）{__string_hash_set（h，key，（Dynamic）value）; } \ n template &amp;lt;typename V&amp;gt; \ n内联无效集（字符串键，const :: cpp :: Pointer &amp;lt;V&amp;gt;＆value）{__string_hash_set（h，key，（Dynamic）value）; } \ n \ n template &amp;lt;typename VALUE&amp;gt; \ n内联void set（Dynamic＆key，const VALUE＆value）{set（（String）key，value）; } \ n&amp;ldquo;）@：coreApi} \ n template &amp;lt;typename V&amp;gt; \ n内联无效集合（字符串键，const :: cpp :: Function &amp;lt;V&amp;gt;＆value）{__string_hash_set（h，key，（Dynamic）value）; } \ n template &amp;lt;类型名称V&amp;gt; \ n内联无效集（字符串键，const :: cpp :: Pointer &amp;lt;V&amp;gt;＆value）{__string_hash_set（h，key，（Dynamic）value）; } \ n \ n template &amp;lt;typename VALUE&amp;gt; \ n内联void set（Dynamic＆key，const VALUE＆value）{set（（String）key，value）; } \ n&amp;ldquo;）@：coreApi} \ n template &amp;lt;类型名V&amp;gt; \ n内联无效集（字符串键，const :: cpp :: Function &amp;lt;V&amp;gt;＆value）{__string_hash_set（h，key，（Dynamic）value）; } \ n template &amp;lt;typename V&amp;gt; \ n内联无效集合（字符串键，const :: cpp :: Pointer &amp;lt;V&amp;gt;＆value）{__string_hash_set（h，key，（Dynamic）value）; } \ n \ n template &amp;lt;typename VALUE&amp;gt; \ n内联void set（Dynamic＆key，const VALUE＆value）{set（（String）key，value）; } \ n&amp;ldquo;）@：coreApi核心核心&lt;em&gt;适用于所有平台&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="47d54ba664564b9b2baebceab151e4d818fd5ef2" translate="yes" xml:space="preserve">
          <source>@:headerClassCode(&quot;\n inline void set(int key, ::null value) { __int_hash_set(h,key,value); }\n inline void set(int key, bool value) { __int_hash_set(h,key,value); }\n inline void set(int key, char value) { __int_hash_set_int(h,key,value); }\n inline void set(int key, unsigned char value) { __int_hash_set_int(h,key,value); }\n inline void set(int key, signed char value) { __int_hash_set_int(h,key,value); }\n inline void set(int key, short value) { __int_hash_set_int(h,key,value); }\n inline void set(int key, unsigned short value) { __int_hash_set_int(h,key,value); }\n inline void set(int key, int value) { __int_hash_set_int(h,key,value); }\n inline void set(int key, unsigned int value) { __int_hash_set_int(h,key,value); }\n inline void set(int key, float value) { __int_hash_set_float(h,key,value); }\n inline void set(int key, double value) { __int_hash_set_float(h,key,value); }\n inline void set(int key, ::String value) { __int_hash_set_string(h,key,value); }\n\n template&amp;lt;typename V, typename H&amp;gt;\n inline void set(int key, const ::cpp::Struct&amp;lt;V,H&amp;gt; &amp;amp;value) {__int_hash_set(h,key,value); }\n template&amp;lt;typename F&amp;gt;\n inline void set(int key, const ::cpp::Function&amp;lt;F&amp;gt; &amp;amp;value) {__int_hash_set(h,key,value); }\n template&amp;lt;typename V&amp;gt;\n inline void set(int key, const ::cpp::Pointer&amp;lt;V&amp;gt; &amp;amp;value) {__int_hash_set(h,key,(Dynamic)value ); }\n\n template&amp;lt;typename VALUE&amp;gt;\n inline void set(Dynamic &amp;amp;key, const VALUE &amp;amp;value) { set( (int)key, value ); }\n&quot;)@:coreApi&lt;em&gt;Available on all platforms&lt;/em&gt;</source>
          <target state="translated">@：headerClassCode（&amp;ldquo; \ n内联无效集（int键，:: null值）{__int_hash_set（h，key，value）;} \ n内联无效集（int键，布尔值）{__int_hash_set（h，key，value ）;} \ n内联void set（int键，字符值）{__int_hash_set_int（h，key，value）;} \ n内联void set（int键，无符号字符值）{__int_hash_set_int（h，key，value）;} \ n内联无效集合（int键，带符号的char值）{__int_hash_set_int（h，key，value）;} \ n内联无效集合（int键，短值）{__int_hash_set_int（h，key，value）;} \ n内联void set（int key，unsigned short value）{__int_hash_set_int（h，key，value）;} \ n内联void set（int key，int value）{__int_hash_set_int（h，key，value）;} \ n内联void set（ int键，无符号int值）{__int_hash_set_int（h，key，value）;} \ n内联无效集（int键，浮点值）{__int_hash_set_float（h，key，value）;} \ n内联无效集（int键，double value）{__int_hash_set_float（h，key，value）; } \ n inline void set（int key，:: String value）{__int_hash_set_string（h，key，value）; } \ n \ n template &amp;lt;类型名V，类型名H&amp;gt; \ n内联无效集（int key，const :: cpp :: Struct &amp;lt;V，H&amp;gt;＆value）{__int_hash_set（h，key，value）; } \ n template &amp;lt;类型名F&amp;gt; \ n内联无效集（int键，const :: cpp :: Function &amp;lt;F&amp;gt;＆value）{__int_hash_set（h，key，value）; } \ n template &amp;lt;类型名称V&amp;gt; \ n内联无效集（int键，const :: cpp :: Pointer &amp;lt;V&amp;gt;＆value）{__int_hash_set（h，key，（Dynamic）value）; } \ n \ n template &amp;lt;typename VALUE&amp;gt; \ n内联void set（Dynamic＆key，const VALUE＆value）{set（（int）key，value）; } \ n&amp;ldquo;）@：coreApi\ n inline void set（int key，const :: cpp :: Struct &amp;lt;V，H&amp;gt;＆value）{__int_hash_set（h，key，value）; } \ n template &amp;lt;类型名F&amp;gt; \ n内联无效集（int键，const :: cpp :: Function &amp;lt;F&amp;gt;＆value）{__int_hash_set（h，key，value）; } \ n template &amp;lt;typename V&amp;gt; \ n内联无效集合（int键，const :: cpp :: Pointer &amp;lt;V&amp;gt;＆value）{__int_hash_set（h，key，（Dynamic）value）; } \ n \ n template &amp;lt;typename VALUE&amp;gt; \ n内联void set（Dynamic＆key，const VALUE＆value）{set（（int）key，value）; } \ n&amp;ldquo;）@：coreApi\ n内联void set（int键，const :: cpp :: Struct &amp;lt;V，H&amp;gt;＆value）{__int_hash_set（h，key，value）; } \ n template &amp;lt;typename F&amp;gt; \ n内联无效集（int键，const :: cpp :: Function &amp;lt;F&amp;gt;＆value）{__int_hash_set（h，key，value）; } \ n template &amp;lt;typename V&amp;gt; \ n内联无效集合（int键，const :: cpp :: Pointer &amp;lt;V&amp;gt;＆value）{__int_hash_set（h，key，（Dynamic）value）; } \ n \ n template &amp;lt;typename VALUE&amp;gt; \ n内联void set（Dynamic＆key，const VALUE＆value）{set（（int）key，value）; } \ n&amp;ldquo;）@：coreApi键，（动态）值）; } \ n \ n template &amp;lt;typename VALUE&amp;gt; \ n内联void set（Dynamic＆key，const VALUE＆value）{set（（int）key，value）; } \ n&amp;ldquo;）@：coreApi键，（动态）值）; } \ n \ n template &amp;lt;typename VALUE&amp;gt; \ n内联void set（Dynamic＆key，const VALUE＆value）{set（（int）key，value）; } \ n&amp;ldquo;）@：coreApi&lt;em&gt;适用于所有平台&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3f519a9b9c46468e0bac26270463de81294b7352" translate="yes" xml:space="preserve">
          <source>@:include(&quot;hxMath.h&quot;)&lt;em&gt;Available on all platforms&lt;/em&gt;</source>
          <target state="translated">@：include（&amp;ldquo; hxMath.h&amp;rdquo;）&lt;em&gt;在所有平台上均可用&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5b2adae5945b1152a6b0871e36e1264a3144c6a7" translate="yes" xml:space="preserve">
          <source>@:keepSub@:publicFields&lt;em&gt;Available on all platforms&lt;/em&gt;</source>
          <target state="translated">@：keepSub @：publicFields &lt;em&gt;在所有平台上均可用&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c08752e551e2e2ba935d7cf167052d0eed1ec746" translate="yes" xml:space="preserve">
          <source>@deprecated</source>
          <target state="translated">@deprecated</target>
        </trans-unit>
        <trans-unit id="91c0b572df56698ea05e100deade9fa91bdda781" translate="yes" xml:space="preserve">
          <source>@php In PHP versions prior to 5.3.1 VC 9 there may be unexpected results when performing arithmetic operations with &lt;code&gt;NaN&lt;/code&gt; on Windows, see &lt;a href=&quot;https://bugs.php.net/bug.php?id=42143&quot;&gt;https://bugs.php.net/bug.php?id=42143&lt;/a&gt;</source>
          <target state="translated">@php在5.3.1 VC 9之前的PHP版本中，在Windows上使用 &lt;code&gt;NaN&lt;/code&gt; 执行算术运算时，可能会出现意外结果，请参阅&lt;a href=&quot;https://bugs.php.net/bug.php?id=42143&quot;&gt;https://bugs.php.net/bug.php?id=42143&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c568f45c22fd32d1e164dc32bf4fd8d02b087f92" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;(e1 in e2)&lt;/code&gt; expression.</source>
          <target state="translated">一个 &lt;code&gt;(e1 in e2)&lt;/code&gt; 表达式。</target>
        </trans-unit>
        <trans-unit id="f6adf8c7073238e157f779d5e5cf3156aba8edf0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;(e:t)&lt;/code&gt; expression.</source>
          <target state="translated">甲 &lt;code&gt;(e:t)&lt;/code&gt; 的表达。</target>
        </trans-unit>
        <trans-unit id="b5454875720ccd7d6c83439a9d666d903ea9b2c7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;(econd) ? eif : eelse&lt;/code&gt; expression.</source>
          <target state="translated">一个 &lt;code&gt;(econd) ? eif : eelse&lt;/code&gt; 表达式。</target>
        </trans-unit>
        <trans-unit id="7e6e4873f4d8fc9f74da238cd58f169db3f7651e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;Bool&lt;/a&gt;&lt;/code&gt; literal.</source>
          <target state="translated">一个 &lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;Bool&lt;/a&gt;&lt;/code&gt; 文字。</target>
        </trans-unit>
        <trans-unit id="7807f1dfbc12493ac9a6f3ccfdb63b05aa3b8e4b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;../../float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; literal, represented as String to avoid precision loss.</source>
          <target state="translated">甲 &lt;code&gt;&lt;a href=&quot;../../float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 文字，表示为字符串，以避免精度损失。</target>
        </trans-unit>
        <trans-unit id="e355b1311c515264a042ab3a870f30d91e6e1bd5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; literal.</source>
          <target state="translated">一个 &lt;code&gt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 字面。</target>
        </trans-unit>
        <trans-unit id="996bf74df1277ebf7f18dcfb8389da5e5b957922" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;keyvalueiterable&quot;&gt;KeyValueIterable&lt;/a&gt;&lt;/code&gt; is a data structure which has a &lt;code&gt;keyValueIterator()&lt;/code&gt; method to iterate over key-value-pairs.</source>
          <target state="translated">甲 &lt;code&gt;&lt;a href=&quot;keyvalueiterable&quot;&gt;KeyValueIterable&lt;/a&gt;&lt;/code&gt; 是一种数据结构，其具有 &lt;code&gt;keyValueIterator()&lt;/code&gt; 以上键-值对方法进行迭代。</target>
        </trans-unit>
        <trans-unit id="69660447064d6d89d9428742646ed151e2aa5713" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;keyvalueiterator&quot;&gt;KeyValueIterator&lt;/a&gt;&lt;/code&gt; is an &lt;code&gt;&lt;a href=&quot;iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; that has a key and a value.</source>
          <target state="translated">一个 &lt;code&gt;&lt;a href=&quot;keyvalueiterator&quot;&gt;KeyValueIterator&lt;/a&gt;&lt;/code&gt; 是一个 &lt;code&gt;&lt;a href=&quot;iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; ，有一个键和一个值。</target>
        </trans-unit>
        <trans-unit id="48a2e2e79da0a94757c041f578b8d9f99fd66d7c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;@:generic&lt;/code&gt; base class.</source>
          <target state="translated">一个 &lt;code&gt;@:generic&lt;/code&gt; 基础类。</target>
        </trans-unit>
        <trans-unit id="a25eb968ec37700d20c36607b70a45a968719f1c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;@:genericBuild&lt;/code&gt; class</source>
          <target state="translated">一个 &lt;code&gt;@:genericBuild&lt;/code&gt; 类</target>
        </trans-unit>
        <trans-unit id="f49d1f1cef8482a4cbc2d827754ff6b114cdaead" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;@m e1&lt;/code&gt; expression.</source>
          <target state="translated">甲 &lt;code&gt;@m e1&lt;/code&gt; 表达。</target>
        </trans-unit>
        <trans-unit id="b0b0fd8868e94c1d4370f89a9b3b3dd3e2f34aa6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;@m e&lt;/code&gt; expression.</source>
          <target state="translated">甲 &lt;code&gt;@m e&lt;/code&gt; 表达。</target>
        </trans-unit>
        <trans-unit id="b77e120993d3c9c27d396f9e40f6aa9f359ac297" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;break&lt;/code&gt; expression.</source>
          <target state="translated">一个 &lt;code&gt;break&lt;/code&gt; 表达。</target>
        </trans-unit>
        <trans-unit id="065a14026924e491154a6e5eac8ee0522df456f1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;cast e&lt;/code&gt; or &lt;code&gt;cast (e, m)&lt;/code&gt; expression.</source>
          <target state="translated">甲 &lt;code&gt;cast e&lt;/code&gt; 或 &lt;code&gt;cast (e, m)&lt;/code&gt; 的表达。</target>
        </trans-unit>
        <trans-unit id="26d063230e4187bb6750bfa34aea3708818b5769" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;continue&lt;/code&gt; expression.</source>
          <target state="translated">一个 &lt;code&gt;continue&lt;/code&gt; 表达。</target>
        </trans-unit>
        <trans-unit id="d4c12aac5508954d663404a3e9a7982f75af32b5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;for&lt;/code&gt; expression.</source>
          <target state="translated">甲 &lt;code&gt;for&lt;/code&gt; 表达。</target>
        </trans-unit>
        <trans-unit id="4ca754b09afe6531bcc695574edae63fe1a7c786" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;return&lt;/code&gt; or &lt;code&gt;return e&lt;/code&gt; expression.</source>
          <target state="translated">甲 &lt;code&gt;return&lt;/code&gt; 或 &lt;code&gt;return e&lt;/code&gt; 表达。</target>
        </trans-unit>
        <trans-unit id="38493fa0f935a212b27333f2e8b459ff9135a915" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;throw e&lt;/code&gt; expression.</source>
          <target state="translated">甲 &lt;code&gt;throw e&lt;/code&gt; 表达。</target>
        </trans-unit>
        <trans-unit id="e2dee5eb4ef576e4baf651ef401cd326330d6c16" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;typedef&lt;/code&gt; that is an alias for an anonymous structure.</source>
          <target state="translated">一个 &lt;code&gt;typedef&lt;/code&gt; ，它是匿名结构的别名。</target>
        </trans-unit>
        <trans-unit id="6ea403460658d8fc78720b1200d5375e585c82f2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;typedef&lt;/code&gt; that is just an alias for another type.</source>
          <target state="translated">一个 &lt;code&gt;typedef&lt;/code&gt; ，它只是另一种类型的别名。</target>
        </trans-unit>
        <trans-unit id="96278714057732bba22df4c8d8c3bf20155c6090" translate="yes" xml:space="preserve">
          <source>A Haxe String is immutable, it is not possible to modify individual characters. No method of this class changes the state of &lt;code&gt;this&lt;/code&gt; String.</source>
          <target state="translated">Haxe字符串是不可变的，无法修改单个字符。此类的任何方法都不能更改 &lt;code&gt;this&lt;/code&gt; String 的状态。</target>
        </trans-unit>
        <trans-unit id="aca9f60f812aa2ca33a8e91adb6a4ea869bba954" translate="yes" xml:space="preserve">
          <source>A Map can be instantiated without explicit type parameters. Type inference will then determine the type parameters from the usage.</source>
          <target state="translated">一个Map可以在没有显式类型参数的情况下被实例化。然后,类型推理将从用法中确定类型参数。</target>
        </trans-unit>
        <trans-unit id="871ca2a7241b499e905751a96a0fdf7cab9a2a7d" translate="yes" xml:space="preserve">
          <source>A String buffer is an efficient way to build a big string by appending small elements together.</source>
          <target state="translated">字符串缓冲区是一种有效的方式,通过将小元素追加到一起来构建一个大字符串。</target>
        </trans-unit>
        <trans-unit id="8ea3089eca2aef79001b3c7de91a969b1f2238ad" translate="yes" xml:space="preserve">
          <source>A Vector is a storage of fixed size. It can be faster than Array on some targets, and is never slower.</source>
          <target state="translated">Vector是一个固定大小的存储。在某些目标上,它可以比Array快,但绝不会慢。</target>
        </trans-unit>
        <trans-unit id="cb3adc590cf3b6da3ae1e8910b85e68c04c86822" translate="yes" xml:space="preserve">
          <source>A binary operator.</source>
          <target state="translated">一个二进制运算符。</target>
        </trans-unit>
        <trans-unit id="8050f48c4b8a7979dbef2206d476cf05d399c4c7" translate="yes" xml:space="preserve">
          <source>A block declaration &lt;code&gt;{el}&lt;/code&gt;.</source>
          <target state="translated">块声明 &lt;code&gt;{el}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="89ac75429e1a570a757acb0fe6b7344e56c1d7cc" translate="yes" xml:space="preserve">
          <source>A block of expressions &lt;code&gt;{exprs}&lt;/code&gt;.</source>
          <target state="translated">表达式块 &lt;code&gt;{exprs}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="52ed57886ea7e354d2bcec6a53b17a8d3c424e25" translate="yes" xml:space="preserve">
          <source>A call &lt;code&gt;e(el)&lt;/code&gt;.</source>
          <target state="translated">呼叫 &lt;code&gt;e(el)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="14e9d30a403aaf7442fbb47763d39ad5cece1148" translate="yes" xml:space="preserve">
          <source>A call &lt;code&gt;e(params)&lt;/code&gt;.</source>
          <target state="translated">呼叫 &lt;code&gt;e(params)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="db8bc2def7fc67d83402cfead0cba28c28e0f85e" translate="yes" xml:space="preserve">
          <source>A call to &lt;code&gt;storeExpr(e)&lt;/code&gt; is equivalent to &lt;code&gt;storeTypedExpr(typeExpr(e))&lt;/code&gt; without the overhead of encoding and decoding between regular and macro runtime.</source>
          <target state="translated">调用 &lt;code&gt;storeExpr(e)&lt;/code&gt; 等效于 &lt;code&gt;storeTypedExpr(typeExpr(e))&lt;/code&gt; ,而不会在常规运行时和宏运行时之间进行编码和解码。</target>
        </trans-unit>
        <trans-unit id="e46bf2a83139d526d0573774423a60dedf1ef72d" translate="yes" xml:space="preserve">
          <source>A cell of &lt;code&gt;&lt;a href=&quot;genericstack#GenericStack&quot;&gt;haxe.ds.GenericStack&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;genericstack#GenericStack&quot;&gt;haxe.ds.GenericStack&lt;/a&gt;&lt;/code&gt; 的单元格。</target>
        </trans-unit>
        <trans-unit id="daed94f2ac905a706b0dd3637427bd93cb020f21" translate="yes" xml:space="preserve">
          <source>A character is considered to be a space character if its character code is 9,10,11,12,13 or 32.</source>
          <target state="translated">如果一个字符的字符代码是9,10,11,12,13或32,则被认为是一个空格字符。</target>
        </trans-unit>
        <trans-unit id="74404cd0f62a83be37d8e410f4bcf64a0738b89b" translate="yes" xml:space="preserve">
          <source>A class.</source>
          <target state="translated">一个班。</target>
        </trans-unit>
        <trans-unit id="bdc02230c2e9d1dd361e8229e4b548ab7305e9b7" translate="yes" xml:space="preserve">
          <source>A closed structure is considered complete. That is, no further fields can be added to it.</source>
          <target state="translated">一个封闭的结构被认为是完整的。也就是说,不能再添加其他字段。</target>
        </trans-unit>
        <trans-unit id="e3ddf5573f4090beeecd3c1d8c3d42d3b2aa3a9a" translate="yes" xml:space="preserve">
          <source>A complete documentation of the supported syntax is available at: &lt;a href=&quot;https://haxe.org/manual/std-template.html&quot;&gt;https://haxe.org/manual/std-template.html&lt;/a&gt;</source>
          <target state="translated">有关受支持语法的完整文档，请访问：&lt;a href=&quot;https://haxe.org/manual/std-template.html&quot;&gt;https&lt;/a&gt;：//haxe.org/manual/std-template.html</target>
        </trans-unit>
        <trans-unit id="c68294ed39519bfa9d0db6f1cd1ee04a548859f5" translate="yes" xml:space="preserve">
          <source>A composition of map and flatten.</source>
          <target state="translated">地图和扁平化的构成。</target>
        </trans-unit>
        <trans-unit id="b14254704c711826f58956629b234b037346cecc" translate="yes" xml:space="preserve">
          <source>A composition of map and flatten. The order of elements is preserved. If &lt;code&gt;f&lt;/code&gt; is null, the result is unspecified.</source>
          <target state="translated">地图和展平的组成。元素的顺序被保留。如果 &lt;code&gt;f&lt;/code&gt; 为null，则结果不确定。</target>
        </trans-unit>
        <trans-unit id="51ca80745a1fe9c4c475e66c6c88342e985969c8" translate="yes" xml:space="preserve">
          <source>A concrete &lt;code&gt;@:generic&lt;/code&gt; instance, referencing the original class and the applied type parameters.</source>
          <target state="translated">一个具体的 &lt;code&gt;@:generic&lt;/code&gt; 实例，它引用原始类和所应用的类型参数。</target>
        </trans-unit>
        <trans-unit id="9b9cab5f52b8a303059e8007a4b857f3c0622175" translate="yes" xml:space="preserve">
          <source>A conditional compilation flag can be set on the command line using &lt;code&gt;-D key=value&lt;/code&gt;.</source>
          <target state="translated">可以在命令行上使用 &lt;code&gt;-D key=value&lt;/code&gt; 设置条件编译标志。</target>
        </trans-unit>
        <trans-unit id="069821d546b3124dcf822a15082bf50196616556" translate="yes" xml:space="preserve">
          <source>A conditional compiler flag can be set command line using &lt;code&gt;-D key=value&lt;/code&gt;.</source>
          <target state="translated">可以使用 &lt;code&gt;-D key=value&lt;/code&gt; 在命令行中设置条件编译器标志。</target>
        </trans-unit>
        <trans-unit id="589590a07c8293e40b1ca7816c9c3553b771353a" translate="yes" xml:space="preserve">
          <source>A const structure is one that appears directly in syntax. It cannot be assigned to a smaller structure type (that is, it does not allow structural sub-typing).</source>
          <target state="translated">一个const结构是直接出现在语法中的结构。它不能被分配给较小的结构类型(也就是说,它不允许结构子类型化)。</target>
        </trans-unit>
        <trans-unit id="1bb89b7cf3850c50755499b44b4e015f168717cb" translate="yes" xml:space="preserve">
          <source>A constant.</source>
          <target state="translated">一个常数。</target>
        </trans-unit>
        <trans-unit id="cd0aecf3d364249fe1d7a5e285d3bf9a25db656f" translate="yes" xml:space="preserve">
          <source>A constructor call &lt;code&gt;new c&amp;lt;params&amp;gt;(el)&lt;/code&gt;.</source>
          <target state="translated">构造函数调用 &lt;code&gt;new c&amp;lt;params&amp;gt;(el)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a3fec292fd1d4ceea3cd014947307ef59268e7a7" translate="yes" xml:space="preserve">
          <source>A constructor call &lt;code&gt;new t(params)&lt;/code&gt;.</source>
          <target state="translated">构造函数调用 &lt;code&gt;new t(params)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1de74e40b8e843a058557818330b6483426a8613" translate="yes" xml:space="preserve">
          <source>A cross-platform signed 64-bit integer. Int64 instances can be created from two 32-bit words using &lt;code&gt;&lt;a href=&quot;int64#make&quot;&gt;Int64.make&lt;/a&gt;()&lt;/code&gt;.</source>
          <target state="translated">跨平台的有符号64位整数。可以使用 &lt;code&gt;&lt;a href=&quot;int64#make&quot;&gt;Int64.make&lt;/a&gt;()&lt;/code&gt; 从两个32位字创建Int64实例。</target>
        </trans-unit>
        <trans-unit id="55c5af888d4a43dfc4edad811b987f8280c3a6fb" translate="yes" xml:space="preserve">
          <source>A detailed explanation of the supported operations is available at &lt;a href=&quot;https://haxe.org/manual/std-regex.html&quot;&gt;https://haxe.org/manual/std-regex.html&lt;/a&gt;</source>
          <target state="translated">有关受支持的操作的详细说明，请参见&lt;a href=&quot;https://haxe.org/manual/std-regex.html&quot;&gt;https://haxe.org/manual/std-regex.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4c1071f39b1a4fee9e194b63ea2fa12fd9f1eb3a" translate="yes" xml:space="preserve">
          <source>A dynamic, rebindable method.</source>
          <target state="translated">一个动态的、可重新绑定的方法。</target>
        </trans-unit>
        <trans-unit id="3ac7939922264b44ec19458103cdc58e2668c986" translate="yes" xml:space="preserve">
          <source>A function declaration.</source>
          <target state="translated">一个函数声明。</target>
        </trans-unit>
        <trans-unit id="8791f7e6f9758b2d173a68b84f21ed966bcaeca9" translate="yes" xml:space="preserve">
          <source>A linked-list of elements. The list is composed of element container objects that are chained together. It is optimized so that adding or removing an element does not imply copying the whole list content every time.</source>
          <target state="translated">一个元素的链接列表。列表由元素容器对象组成,这些元素容器对象被链在一起。它经过优化,所以每次添加或删除一个元素都不意味着复制整个列表内容。</target>
        </trans-unit>
        <trans-unit id="db28315e7a417d675216b781cd3c1683a5969367" translate="yes" xml:space="preserve">
          <source>A list of all available resource names can be obtained from &lt;code&gt;listNames()&lt;/code&gt;.</source>
          <target state="translated">可以从 &lt;code&gt;listNames()&lt;/code&gt; 获得所有可用资源名称的列表。</target>
        </trans-unit>
        <trans-unit id="bae4b54bc10129993185c4eaf98d32e6e8ef0068" translate="yes" xml:space="preserve">
          <source>A list of all available resource names can be obtained from listNames().</source>
          <target state="translated">所有可用资源名称的列表可以从listNames()获得。</target>
        </trans-unit>
        <trans-unit id="5cea0e67c1ad6225da5e4f3fe8f73f642066b5e8" translate="yes" xml:space="preserve">
          <source>A list of function arguments identified by an argument variable &lt;code&gt;v&lt;/code&gt; and an optional initialization &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">由参数变量 &lt;code&gt;v&lt;/code&gt; 和可选的初始化 &lt;code&gt;value&lt;/code&gt; 标识的函数参数列表。</target>
        </trans-unit>
        <trans-unit id="1ec4408ef87fde2ccfbdd3b0b2e9bf1e94ef04c3" translate="yes" xml:space="preserve">
          <source>A list of function arguments identified by an argument variable `v` and an optional initialization `value`.</source>
          <target state="translated">由一个参数变量`v`和一个可选的初始化`value`确定的函数参数列表。</target>
        </trans-unit>
        <trans-unit id="24d25b024e4a1d97786adfb634642a4577f5c748" translate="yes" xml:space="preserve">
          <source>A list of function arguments.</source>
          <target state="translated">一个函数参数的列表。</target>
        </trans-unit>
        <trans-unit id="7d6ca10419069621b52fb76a65d5a887a9340bda" translate="yes" xml:space="preserve">
          <source>A list of strings representing the targets where the constructor is available.</source>
          <target state="translated">代表构造函数可用的目标的字符串列表。</target>
        </trans-unit>
        <trans-unit id="6bc914208916a908aaced78a8715bb60ff9e223e" translate="yes" xml:space="preserve">
          <source>A list of strings representing the targets where the field is available.</source>
          <target state="translated">代表可使用该字段的目标的字符串列表。</target>
        </trans-unit>
        <trans-unit id="14c510b877afbf4a4c134dea23a8a50a731631b7" translate="yes" xml:space="preserve">
          <source>A list of strings representing the targets where the type is available.</source>
          <target state="translated">代表该类型可用的目标的字符串列表。</target>
        </trans-unit>
        <trans-unit id="a67e4fd06285ba85e801ca0135888f0b9698c897" translate="yes" xml:space="preserve">
          <source>A macro method.</source>
          <target state="translated">一种宏观方法。</target>
        </trans-unit>
        <trans-unit id="2442918a6a90576098a00e1dfa5df60a155be9a4" translate="yes" xml:space="preserve">
          <source>A method</source>
          <target state="translated">一种方法</target>
        </trans-unit>
        <trans-unit id="695da28e7f9cfc3d877ad118e10a30d9fe8d0da5" translate="yes" xml:space="preserve">
          <source>A normal class.</source>
          <target state="translated">一个正常的班级。</target>
        </trans-unit>
        <trans-unit id="060bbdaf1959ec5bf2371b364fd4c344fdb3d1c3" translate="yes" xml:space="preserve">
          <source>A normal method.</source>
          <target state="translated">一种正常的方法。</target>
        </trans-unit>
        <trans-unit id="cd05a9a4960cda169bbbaf205706fdb67a5dc37b" translate="yes" xml:space="preserve">
          <source>A package, module or sub-type dot path to enable null safety for.</source>
          <target state="translated">一个包、模块或子类型的点状路径,以实现空安全。</target>
        </trans-unit>
        <trans-unit id="d3b2fe8df4ca7abce5b33cfbaa63d65f52be301f" translate="yes" xml:space="preserve">
          <source>A package, module or sub-type dot path to keep.</source>
          <target state="translated">要保留的包、模块或子类型点路径。</target>
        </trans-unit>
        <trans-unit id="37c243a55fee407e045dcc343f001f614670963f" translate="yes" xml:space="preserve">
          <source>A pure Haxe implementation of the ZLIB Inflate algorithm which allows reading compressed data without any platform-specific support.</source>
          <target state="translated">一个纯Haxe的ZLIB Inflate算法的实现,它允许读取压缩数据,而不需要任何特定平台的支持。</target>
        </trans-unit>
        <trans-unit id="f7e03f51240ef1da67acb10c5cf70d826044053f" translate="yes" xml:space="preserve">
          <source>A range in a text document expressed as (1-based) start and end positions.</source>
          <target state="translated">文本文件中的一个范围,用(基于1的)开始和结束位置表示。</target>
        </trans-unit>
        <trans-unit id="3a473135e90c6e906c28555b75d0ce5b85d1b8ee" translate="yes" xml:space="preserve">
          <source>A request string is composed of the following serialized values :</source>
          <target state="translated">一个请求字符串由以下序列化的值组成。</target>
        </trans-unit>
        <trans-unit id="27ed0d00eb63a91aacdf2b85a4aaf25a102ee8e2" translate="yes" xml:space="preserve">
          <source>A response string is composed of the following serialized values :</source>
          <target state="translated">响应字符串由以下序列化值组成。</target>
        </trans-unit>
        <trans-unit id="39484c13519e3fdf3dd451753f61fbaf27c1ff07" translate="yes" xml:space="preserve">
          <source>A scheme consists of a sequence of characters beginning with a letter and followed by any combination of letters, digits, plus (&lt;code&gt;+&lt;/code&gt;, period (&lt;code&gt;.&lt;/code&gt;), or hyphen (&lt;code&gt;-&lt;/code&gt;).</source>
          <target state="translated">方案由一系列字符组成，这些字符以字母开头，然后是字母，数字，加号（ &lt;code&gt;+&lt;/code&gt; ，句点（ &lt;code&gt;.&lt;/code&gt; ）或连字符（ &lt;code&gt;-&lt;/code&gt; ）的任意组合。</target>
        </trans-unit>
        <trans-unit id="3781668eddf4e87def1bd4a4994efbff127fe8b2" translate="yes" xml:space="preserve">
          <source>A special &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; constant which denotes an invalid number.</source>
          <target state="translated">特殊的 &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 常数，表示无效数字。</target>
        </trans-unit>
        <trans-unit id="be97adb010ccea8ee9fced56a8178e719a85931b" translate="yes" xml:space="preserve">
          <source>A special &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; constant which denotes negative infinity.</source>
          <target state="translated">特殊的 &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 常量，表示负无穷大。</target>
        </trans-unit>
        <trans-unit id="36a1b7e4d5f82e642ba7dc88389732bc6852ead6" translate="yes" xml:space="preserve">
          <source>A special &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; constant which denotes positive infinity.</source>
          <target state="translated">一个特殊的 &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 常数，表示正无穷大。</target>
        </trans-unit>
        <trans-unit id="532a44eacf5da7ab50d84a4f7b0a830772904324" translate="yes" xml:space="preserve">
          <source>A special abstract type that represents &quot;rest&quot; function argument.</source>
          <target state="translated">一个特殊的抽象类型,表示 &quot;休息 &quot;函数参数。</target>
        </trans-unit>
        <trans-unit id="54d11c2a8fc0f9a07b38c08e16d42af742bd7812" translate="yes" xml:space="preserve">
          <source>A special class for &lt;code&gt;&lt;a href=&quot;macrotype#MacroType&quot;&gt;haxe.macro.MacroType&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;macrotype#MacroType&quot;&gt;haxe.macro.MacroType&lt;/a&gt;&lt;/code&gt; 的特殊类。</target>
        </trans-unit>
        <trans-unit id="26a5396ec4cf191a8e9e7d7295da30bd366bc63f" translate="yes" xml:space="preserve">
          <source>A special kind of class to encode expressions into type parameters.</source>
          <target state="translated">一种特殊的类,将表达式编码成类型参数。</target>
        </trans-unit>
        <trans-unit id="8add64ef3642b6a28a3d3c24d02f174dd7f5fc8b" translate="yes" xml:space="preserve">
          <source>A stack of elements.</source>
          <target state="translated">一堆元素。</target>
        </trans-unit>
        <trans-unit id="5ead0a43a4863d827f27807400ca15094e3eb62e" translate="yes" xml:space="preserve">
          <source>A structurally extended class.</source>
          <target state="translated">一个结构上的扩展类。</target>
        </trans-unit>
        <trans-unit id="c2b2bf7f759040e72f0510e063bc3faa071b8584" translate="yes" xml:space="preserve">
          <source>A structure is only encoded when user requests it through &lt;code&gt;ref.get()&lt;/code&gt;.</source>
          <target state="translated">仅当用户通过 &lt;code&gt;ref.get()&lt;/code&gt; 请求结构时，才对结构进行编码。</target>
        </trans-unit>
        <trans-unit id="bfcba96145102a39924316cc530c6f078905694d" translate="yes" xml:space="preserve">
          <source>A structure that represents the constructors of an enum.</source>
          <target state="translated">一个表示枚举构造体的结构。</target>
        </trans-unit>
        <trans-unit id="e73aa2ba6b4ebf2d8a5a8031dc414c0518e13d31" translate="yes" xml:space="preserve">
          <source>A structure that represents the static fields of a class.</source>
          <target state="translated">一个表示类的静态字段的结构。</target>
        </trans-unit>
        <trans-unit id="9680fdae6a3ec620a730de189c1b8e8c6dceff4e" translate="yes" xml:space="preserve">
          <source>A structure that represents the static fields of an abstract.</source>
          <target state="translated">一个表示抽象的静态场的结构。</target>
        </trans-unit>
        <trans-unit id="48cd4241a5984a7adb42976d30e1c54b755c6ada" translate="yes" xml:space="preserve">
          <source>A tree node of &lt;code&gt;&lt;a href=&quot;balancedtree#BalancedTree&quot;&gt;haxe.ds.BalancedTree&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;balancedtree#BalancedTree&quot;&gt;haxe.ds.BalancedTree&lt;/a&gt;&lt;/code&gt; 的树节点。</target>
        </trans-unit>
        <trans-unit id="7848245855c1f23d4fc11e375e8bf37f94296d6e" translate="yes" xml:space="preserve">
          <source>A type parameter class with a set of constraints.</source>
          <target state="translated">一个带有一组约束条件的类型参数类。</target>
        </trans-unit>
        <trans-unit id="74f1d0e3dde03de3f702fb8aa830d57217949e5f" translate="yes" xml:space="preserve">
          <source>A type resolver finds a &lt;code&gt;&lt;a href=&quot;../class&quot;&gt;Class&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../enum&quot;&gt;Enum&lt;/a&gt;&lt;/code&gt; instance from a given &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;. By default, the Haxe &lt;code&gt;&lt;a href=&quot;../type&quot;&gt;Type&lt;/a&gt;&lt;/code&gt; Api is used.</source>
          <target state="translated">类型解析器从给定的 &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 中找到 &lt;code&gt;&lt;a href=&quot;../class&quot;&gt;Class&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;../enum&quot;&gt;Enum&lt;/a&gt;&lt;/code&gt; 实例。默认情况下，使用Haxe &lt;code&gt;&lt;a href=&quot;../type&quot;&gt;Type&lt;/a&gt;&lt;/code&gt; Api。</target>
        </trans-unit>
        <trans-unit id="6c3786672741a800f9be18650c1cd8c3189e0670" translate="yes" xml:space="preserve">
          <source>A type resolver must provide two methods:</source>
          <target state="translated">类型解析器必须提供两种方法。</target>
        </trans-unit>
        <trans-unit id="cfa5af6cd480c87283532735aef048e1b31d8af8" translate="yes" xml:space="preserve">
          <source>A type with the same name is already imported in the module. The fully qualified name has to be used to access it.</source>
          <target state="translated">模块中已经导入了一个同名的类型。必须使用完全限定的名称来访问它。</target>
        </trans-unit>
        <trans-unit id="e30b91ede58b910363bb434639e21b852f8e934e" translate="yes" xml:space="preserve">
          <source>A typed interface for bit flags. This is not a real object, only a typed interface for an actual Int. Each flag can be tested/set with the corresponding enum instance. Up to 32 flags can be stored that way.</source>
          <target state="translated">一个位标志的类型化接口。这不是一个真实的对象,只是一个实际Int的类型化接口。每个标志可以用相应的枚举实例进行测试/设置。最多可以存储32个标志。</target>
        </trans-unit>
        <trans-unit id="0d1a5059aa222eb40147a031ec9e6cce07bc3551" translate="yes" xml:space="preserve">
          <source>A typedef.</source>
          <target state="translated">A typedef。</target>
        </trans-unit>
        <trans-unit id="d2903d5e1dd76d94643d77f9d0a42b23731f310b" translate="yes" xml:space="preserve">
          <source>A unary operator.</source>
          <target state="translated">一个单利运算符。</target>
        </trans-unit>
        <trans-unit id="66d820d0b6b998d496c534d1cfc394504b80d213" translate="yes" xml:space="preserve">
          <source>A variable declaration &lt;code&gt;var v&lt;/code&gt; or &lt;code&gt;var v = expr&lt;/code&gt;.</source>
          <target state="translated">变量声明 &lt;code&gt;var v&lt;/code&gt; 或 &lt;code&gt;var v = expr&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="19d11c98fe53568acdd0f5cc193669becf2d52cf" translate="yes" xml:space="preserve">
          <source>A variable of property, depending on the &lt;code&gt;read&lt;/code&gt; and &lt;code&gt;write&lt;/code&gt; values.</source>
          <target state="translated">财产的变量，取决于 &lt;code&gt;read&lt;/code&gt; 和 &lt;code&gt;write&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="53c084c1bcdb475f03e39a2210288758f28a6c19" translate="yes" xml:space="preserve">
          <source>AMFConnection</source>
          <target state="translated">AMFConnection</target>
        </trans-unit>
        <trans-unit id="8da95c3112e20bafa962dd96d67921e23da58f48" translate="yes" xml:space="preserve">
          <source>AbstractType</source>
          <target state="translated">AbstractType</target>
        </trans-unit>
        <trans-unit id="dc04a3af2ea86ee424d238ac55f71cc65979ee27" translate="yes" xml:space="preserve">
          <source>Abstractdef</source>
          <target state="translated">Abstractdef</target>
        </trans-unit>
        <trans-unit id="2f81a22de0af5e9eab19326e19693f86ce612518" translate="yes" xml:space="preserve">
          <source>Access</source>
          <target state="translated">Access</target>
        </trans-unit>
        <trans-unit id="446ca7f366be7af19357b332122b9f866041cff7" translate="yes" xml:space="preserve">
          <source>Access is only allowed from the constructor.</source>
          <target state="translated">只允许从构造函数中访问。</target>
        </trans-unit>
        <trans-unit id="b1865fa06ce659bde1d7852fa91282e1bd2aa2e1" translate="yes" xml:space="preserve">
          <source>Access of field &lt;code&gt;cf&lt;/code&gt; on a class instance &lt;code&gt;c&lt;/code&gt; with type parameters &lt;code&gt;params&lt;/code&gt;.</source>
          <target state="translated">使用类型参数 &lt;code&gt;params&lt;/code&gt; 在类实例 &lt;code&gt;c&lt;/code&gt; 上访问 &lt;code&gt;cf&lt;/code&gt; 字段。</target>
        </trans-unit>
        <trans-unit id="7f4f7d5e0f29fa0ca1c1003431f517d23150bc58" translate="yes" xml:space="preserve">
          <source>Access of field &lt;code&gt;cf&lt;/code&gt; on an anonymous structure.</source>
          <target state="translated">在匿名结构上访问域 &lt;code&gt;cf&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4e74914e0c39aa2df2246bb4fef900042c0658c5" translate="yes" xml:space="preserve">
          <source>Access through accessor function (&lt;code&gt;get&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt;, &lt;code&gt;dynamic&lt;/code&gt;).</source>
          <target state="translated">通过访问器功能（ &lt;code&gt;get&lt;/code&gt; ， &lt;code&gt;set&lt;/code&gt; ， &lt;code&gt;dynamic&lt;/code&gt; ）访问。</target>
        </trans-unit>
        <trans-unit id="4631564e21f180984f0287cab5555d9a38559f9e" translate="yes" xml:space="preserve">
          <source>Access to a given attribute.</source>
          <target state="translated">对给定属性的访问。</target>
        </trans-unit>
        <trans-unit id="d9b4fa39ad9d581af8b923233b1938c87068fa1c" translate="yes" xml:space="preserve">
          <source>Access to an enum index (generated by the pattern matcher).</source>
          <target state="translated">访问一个枚举索引(由模式匹配器生成)。</target>
        </trans-unit>
        <trans-unit id="5a6290ff91d3ca437c045d950e6bf160c3076428" translate="yes" xml:space="preserve">
          <source>Access to an enum parameter (generated by the pattern matcher).</source>
          <target state="translated">访问一个枚举参数(由模式匹配器生成)。</target>
        </trans-unit>
        <trans-unit id="7aefba47a5651e9239e446457b2eab289e249039" translate="yes" xml:space="preserve">
          <source>Access to the List of elements with the given name.</source>
          <target state="translated">访问给定名称的元素列表。</target>
        </trans-unit>
        <trans-unit id="18f2b138ad83f8390514236e038edc8466333bb1" translate="yes" xml:space="preserve">
          <source>Access to the first sub element with the given name.</source>
          <target state="translated">访问带有给定名称的第一个子元素。</target>
        </trans-unit>
        <trans-unit id="04337c5dad9c1bfd9ade59209855bb8115448e19" translate="yes" xml:space="preserve">
          <source>Access(&lt;a href=&quot;../../xml&quot;&gt;Xml&lt;/a&gt;)</source>
          <target state="translated">Access(&lt;a href=&quot;../../xml&quot;&gt;Xml&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="d031bf08b0d86448380182214da42c37d35b8068" translate="yes" xml:space="preserve">
          <source>Add TestCase instances to the unit test.</source>
          <target state="translated">将TestCase实例添加到单元测试中。</target>
        </trans-unit>
        <trans-unit id="7664d4555c00130cc21286eee2120e043ae1cc6f" translate="yes" xml:space="preserve">
          <source>Add a class path where &quot;.hx&quot; source files or packages (sub-directories) can be found.</source>
          <target state="translated">添加一个可以找到&quot;.hx &quot;源文件或包(子目录)的类路径。</target>
        </trans-unit>
        <trans-unit id="dd083c57f8a788aa94f81b2ec07ec35d2b650e25" translate="yes" xml:space="preserve">
          <source>Add a pending event to be run into the main loop.</source>
          <target state="translated">添加一个待定事件,运行到主循环中。</target>
        </trans-unit>
        <trans-unit id="bf9ed11421449a7b4a71bd382d46a8b6eb4e08f5" translate="yes" xml:space="preserve">
          <source>Add metadata to a (static) field or class by name. An error is thrown when &lt;code&gt;className&lt;/code&gt; or &lt;code&gt;field&lt;/code&gt; is invalid.</source>
          <target state="translated">按名称将元数据添加到（静态）字段或类。当 &lt;code&gt;className&lt;/code&gt; 或 &lt;code&gt;field&lt;/code&gt; 无效时，将引发错误。</target>
        </trans-unit>
        <trans-unit id="cb4fb142c35527f2b62aa557bd442b052f97070f" translate="yes" xml:space="preserve">
          <source>Add the given UTF8 character code to the buffer.</source>
          <target state="translated">将给定的UTF8字符代码添加到缓冲区中。</target>
        </trans-unit>
        <trans-unit id="d2424d4237c665727d67a7905dfc0d2bc5f24d53" translate="yes" xml:space="preserve">
          <source>Additionally, decimal notation may contain a single &lt;code&gt;.&lt;/code&gt; to denote the start of the fractions.</source>
          <target state="translated">此外，十进制符号可能包含一个 &lt;code&gt;.&lt;/code&gt; 表示分数的开始。</target>
        </trans-unit>
        <trans-unit id="61ce312818c04c1497bfc959ae25d0e7b18a96f5" translate="yes" xml:space="preserve">
          <source>Adds a callback function &lt;code&gt;callback&lt;/code&gt; which is invoked after the compiler generation phase.</source>
          <target state="translated">添加一个在编译器生成阶段之后调用的回调函数 &lt;code&gt;callback&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="12ba3fa2fdc7b7251094bb6ded91bf74666499ec" translate="yes" xml:space="preserve">
          <source>Adds a callback function &lt;code&gt;callback&lt;/code&gt; which is invoked after the compiler is done typing, but before optimization. The callback receives the types which have been typed.</source>
          <target state="translated">添加一个回调函数 &lt;code&gt;callback&lt;/code&gt; ，该回调函数在编译器完成键入之后但在优化之前调用。回调接收已键入的类型。</target>
        </trans-unit>
        <trans-unit id="93fd697271ac35f1be6f14cddc88a77a28a6e3ec" translate="yes" xml:space="preserve">
          <source>Adds a callback function &lt;code&gt;callback&lt;/code&gt; which is invoked after the compiler's typing phase, just before its generation phase.</source>
          <target state="translated">添加一个回调函数 &lt;code&gt;callback&lt;/code&gt; ，该回调函数在编译器的键入阶段之后，生成阶段之前被调用。</target>
        </trans-unit>
        <trans-unit id="bd28a5e801466b57564b7217446a52da9fd47836" translate="yes" xml:space="preserve">
          <source>Adds a callback function &lt;code&gt;callback&lt;/code&gt; which is invoked when a type name cannot be resolved.</source>
          <target state="translated">添加一个回调函数 &lt;code&gt;callback&lt;/code&gt; ，该回调在无法解析类型名称时调用。</target>
        </trans-unit>
        <trans-unit id="53e8a2b0e34723424ef00098ccb02753d6c848c9" translate="yes" xml:space="preserve">
          <source>Adds a child node to the Document or Element. A child node can only be inside one given parent node, which is indicated by the &lt;code&gt;parent&lt;/code&gt; property. If the child is already inside this Document or Element, it will be moved to the last position among the Document or Element's children. If the child node was previously inside a different node, it will be moved to this Document or Element.</source>
          <target state="translated">将子节点添加到文档或元素。子节点只能在一个给定的父节点内，这由 &lt;code&gt;parent&lt;/code&gt; 属性指示。如果该子项已经在此Document或Element中，则它将移动到Document或Element的子项中的最后一个位置。如果子节点先前位于其他节点内，则它将被移至此Document或Element。</target>
        </trans-unit>
        <trans-unit id="02b3577efb00e88afa7fec5ad2739b60b3a95bab" translate="yes" xml:space="preserve">
          <source>Adds a native library depending on the platform (e.g. &lt;code&gt;-swf-lib&lt;/code&gt; for Flash).</source>
          <target state="translated">根据平台添加本地库（例如， &lt;code&gt;-swf-lib&lt;/code&gt; 用于Flash）。</target>
        </trans-unit>
        <trans-unit id="d9af2e97bdc9f555abfad96843ee253b01a364e1" translate="yes" xml:space="preserve">
          <source>Adds a trailing slash to &lt;code&gt;path&lt;/code&gt;, if it does not have one already.</source>
          <target state="translated">如果 &lt;code&gt;path&lt;/code&gt; 尚没有斜杠，则在其末尾添加斜杠。</target>
        </trans-unit>
        <trans-unit id="e4f2fe8ac7df45d146c05e479e2d6fed136e84db" translate="yes" xml:space="preserve">
          <source>Adds an argument to be passed to the native compiler (e.g. &lt;code&gt;-javac-arg&lt;/code&gt; for Java).</source>
          <target state="translated">添加一个要传递给本机编译器 &lt;code&gt;-javac-arg&lt;/code&gt; （例如，对于Java，为-javac-arg）。</target>
        </trans-unit>
        <trans-unit id="36694a7fe71e795d85b5f5004506680ee1843cba" translate="yes" xml:space="preserve">
          <source>Adds element &lt;code&gt;item&lt;/code&gt; at the beginning of &lt;code&gt;this&lt;/code&gt; List.</source>
          <target state="translated">在 &lt;code&gt;this&lt;/code&gt; 列表的开头添加元素 &lt;code&gt;item&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2b26e76dc10125f6ad9a13c709f864344d81f8d8" translate="yes" xml:space="preserve">
          <source>Adds element &lt;code&gt;item&lt;/code&gt; at the end of &lt;code&gt;this&lt;/code&gt; List.</source>
          <target state="translated">在 &lt;code&gt;this&lt;/code&gt; 列表的末尾添加元素 &lt;code&gt;item&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="52f1c55ba31c332db7c8600619283387f3e37818" translate="yes" xml:space="preserve">
          <source>Adds metadata &lt;code&gt;meta&lt;/code&gt; to all types (if &lt;code&gt;toTypes = &lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt;) or fields (if &lt;code&gt;toFields = &lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt;) whose dot-path matches &lt;code&gt;pathFilter&lt;/code&gt;.</source>
          <target state="translated">将元数据 &lt;code&gt;meta&lt;/code&gt; 添加到点路径与 &lt;code&gt;pathFilter&lt;/code&gt; 匹配的所有类型（如果 &lt;code&gt;toTypes = &lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt; ）或字段（如果 &lt;code&gt;toFields = &lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="4b65a049b449463ebb3a56ddb9aca3ae23228f6e" translate="yes" xml:space="preserve">
          <source>Adds the element &lt;code&gt;x&lt;/code&gt; at the end of &lt;code&gt;this&lt;/code&gt; Array and returns the new length of &lt;code&gt;this&lt;/code&gt; Array.</source>
          <target state="translated">添加元素 &lt;code&gt;x&lt;/code&gt; 在结束 &lt;code&gt;this&lt;/code&gt; 阵列，并返回的新长度 &lt;code&gt;this&lt;/code&gt; 阵列。</target>
        </trans-unit>
        <trans-unit id="c4383cb92c658f0ef7f0118e6ab416330e33858a" translate="yes" xml:space="preserve">
          <source>Adds the element &lt;code&gt;x&lt;/code&gt; at the start of &lt;code&gt;this&lt;/code&gt; Array.</source>
          <target state="translated">在 &lt;code&gt;this&lt;/code&gt; 数组的开头添加元素 &lt;code&gt;x&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fd8ad9b97793b7bccf04e173d542a3e89c38c916" translate="yes" xml:space="preserve">
          <source>Adds the metadata specified by &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;params&lt;/code&gt; and &lt;code&gt;pos&lt;/code&gt; to the origin of &lt;code&gt;this&lt;/code&gt; MetaAccess.</source>
          <target state="translated">将由 &lt;code&gt;name&lt;/code&gt; ， &lt;code&gt;params&lt;/code&gt; 和 &lt;code&gt;pos&lt;/code&gt; 指定的元数据添加 &lt;code&gt;this&lt;/code&gt; MetaAccess 的来源。</target>
        </trans-unit>
        <trans-unit id="a440a5124c7f52bf5554d5960fa8ba8311392bae" translate="yes" xml:space="preserve">
          <source>Adds the metadata specified by `name`, `params` and `pos` to the origin of `this` MetaAccess. Metadata names are not unique during compilation, so this method never overwrites a previous metadata. If a `Metadata` array is obtained through a call to `get`, a subsequent call to `add` has no effect on that array. If any argument is null, compilation fails with an error.</source>
          <target state="translated">将 &quot;name&quot;、&quot;params &quot;和 &quot;pos &quot;指定的元数据添加到 &quot;this &quot;MetaAccess的原点。元数据名称在编译过程中不是唯一的,所以本方法永远不会覆盖以前的元数据。如果元数据数组是通过调用 &quot;get &quot;获得的,那么后续调用 &quot;add &quot;对该数组没有影响。如果任何参数为null,编译失败,出现错误。</target>
        </trans-unit>
        <trans-unit id="15916ea228038978ff5e724cafbd80324fd51736" translate="yes" xml:space="preserve">
          <source>Adler32</source>
          <target state="translated">Adler32</target>
        </trans-unit>
        <trans-unit id="c0ec5227dbe7070ac9f604198a01afa44b7999b3" translate="yes" xml:space="preserve">
          <source>Affected types are monomorphs &lt;code&gt;TMono&lt;/code&gt; and typedefs &lt;code&gt;TType(t,pl)&lt;/code&gt;.</source>
          <target state="translated">受影响的类型是单形 &lt;code&gt;TMono&lt;/code&gt; 和typedef &lt;code&gt;TType(t,pl)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5a6439bc2fb38e6d825f43df3193095a13e325cc" translate="yes" xml:space="preserve">
          <source>Affects only the macro context.</source>
          <target state="translated">只影响宏观背景。</target>
        </trans-unit>
        <trans-unit id="4612014b9db83b9c1ce0ce79a20f7165e9dbb9a0" translate="yes" xml:space="preserve">
          <source>Affects only the normal context.</source>
          <target state="translated">只影响正常情况。</target>
        </trans-unit>
        <trans-unit id="565e3b01d50da85ce05111c38fa2f1bba9775b88" translate="yes" xml:space="preserve">
          <source>Affects the characters &lt;code&gt;A-Z&lt;/code&gt;. Other characters remain unchanged.</source>
          <target state="translated">影响字符 &lt;code&gt;A-Z&lt;/code&gt; 。其他字符保持不变。</target>
        </trans-unit>
        <trans-unit id="cfe65fa905fd32d0f653e0e256f436d1f39e6adc" translate="yes" xml:space="preserve">
          <source>Affects the characters &lt;code&gt;a-z&lt;/code&gt;. Other characters remain unchanged.</source>
          <target state="translated">影响字符 &lt;code&gt;a-z&lt;/code&gt; 。其他字符保持不变。</target>
        </trans-unit>
        <trans-unit id="76503d4c3f6fad0f5a617258c5fe2a603c6276b2" translate="yes" xml:space="preserve">
          <source>Affects the normal and macro contexts.</source>
          <target state="translated">影响正常和宏观背景。</target>
        </trans-unit>
        <trans-unit id="14b1dc8c0a1212713cfee1b2f636580db1f5df48" translate="yes" xml:space="preserve">
          <source>After calling this method, no additional invocations of &lt;code&gt;this.&lt;a href=&quot;#run&quot;&gt;run&lt;/a&gt;&lt;/code&gt; will occur.</source>
          <target state="translated">调用此方法后，将不再对此进行任何调用 &lt;code&gt;this.&lt;a href=&quot;#run&quot;&gt;run&lt;/a&gt;&lt;/code&gt; 会发生。</target>
        </trans-unit>
        <trans-unit id="7c48cd31d5501f6df66af8c2f84fa83c2ca895e9" translate="yes" xml:space="preserve">
          <source>After creating the Timer instance, it calls &lt;code&gt;this.&lt;a href=&quot;#run&quot;&gt;run&lt;/a&gt;&lt;/code&gt; repeatedly, with delays of &lt;code&gt;time_ms&lt;/code&gt; milliseconds, until &lt;code&gt;this.&lt;a href=&quot;#stop&quot;&gt;stop&lt;/a&gt;&lt;/code&gt; is called.</source>
          <target state="translated">创建Timer实例后，将调用 &lt;code&gt;this.&lt;a href=&quot;#run&quot;&gt;run&lt;/a&gt;&lt;/code&gt; 实例。重复运行，并延迟 &lt;code&gt;time_ms&lt;/code&gt; 毫秒，直到此为止 &lt;code&gt;this.&lt;a href=&quot;#stop&quot;&gt;stop&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="04259816ace1ebe56c853a8763558570c008514a" translate="yes" xml:space="preserve">
          <source>Alias</source>
          <target state="translated">Alias</target>
        </trans-unit>
        <trans-unit id="5b2016394d060ca8c9d9c9b4e75e36a481c5dc9a" translate="yes" xml:space="preserve">
          <source>All functions which read data throw &lt;code&gt;&lt;a href=&quot;eof#Eof&quot;&gt;Eof&lt;/a&gt;&lt;/code&gt; when the end of the stream is reached.</source>
          <target state="translated">到达流的末尾时，所有读取数据的函数都会抛出 &lt;code&gt;&lt;a href=&quot;eof#Eof&quot;&gt;Eof&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="239b18c5e1b3f16f3f27b12cea7c3f7cec9b35c5" translate="yes" xml:space="preserve">
          <source>All further operations with &lt;code&gt;NaN&lt;/code&gt; as an operand will result in &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="translated">以 &lt;code&gt;NaN&lt;/code&gt; 作为操作数的所有进一步运算将产生 &lt;code&gt;NaN&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="794046f2b39e7943ac912ce77efd5edf3b418520" translate="yes" xml:space="preserve">
          <source>All haxe-defined values and objects with the exception of functions can be serialized. Serialization of external/native objects is not guaranteed to work.</source>
          <target state="translated">除了函数之外,所有的hax定义的值和对象都可以被序列化。外部/本地对象的序列化不保证有效。</target>
        </trans-unit>
        <trans-unit id="c27dcf944f585bb63fa4ae9a2a56956a0c3d909b" translate="yes" xml:space="preserve">
          <source>All these methods can be called for compiler configuration macros.</source>
          <target state="translated">所有这些方法都可以调用编译器配置宏。</target>
        </trans-unit>
        <trans-unit id="7ef366cf6d4be1336bb00230f1b4603a0b9e69e9" translate="yes" xml:space="preserve">
          <source>Allocate a new Utf8 buffer using an optional bytes size.</source>
          <target state="translated">使用一个可选的字节大小分配一个新的Utf8缓冲区。</target>
        </trans-unit>
        <trans-unit id="4ba81fda85c91c12a915d5094a227d2f3e27cf6c" translate="yes" xml:space="preserve">
          <source>Allows a connection to an AMF Remoting server such as Flash Media Server or AMFPHP.</source>
          <target state="translated">允许连接到AMF Remoting服务器,如Flash Media Server或AMFPHP。</target>
        </trans-unit>
        <trans-unit id="8e7ac9ba45bb61ad6434c3f42e638c3225414800" translate="yes" xml:space="preserve">
          <source>Allows a synchronous connection to the given URL which should link to a Haxe server application.</source>
          <target state="translated">允许同步连接到给定的URL,该URL应链接到Haxe服务器应用程序。</target>
        </trans-unit>
        <trans-unit id="9d7f3fe2909f4a8c06faf454697553042972e2d4" translate="yes" xml:space="preserve">
          <source>Allows an asynchronous connection to the given URL which should link to a Haxe server application.</source>
          <target state="translated">允许异步连接到给定的URL,该URL应链接到Haxe服务器应用程序。</target>
        </trans-unit>
        <trans-unit id="b471407914af5e33fafb787e8dfb8e8da19264d0" translate="yes" xml:space="preserve">
          <source>Allows communication between platforms. This is a shared API that can be called on the connection at the client code.</source>
          <target state="translated">允许平台之间的通信。这是一个共享的API,可以在客户端代码的连接上调用。</target>
        </trans-unit>
        <trans-unit id="f6e27eb5ae9284022e77ffa592b2ab521660f627" translate="yes" xml:space="preserve">
          <source>Allows communications to a different application that runs on the same client device</source>
          <target state="translated">允许与运行在同一客户端设备上的不同应用程序进行通信。</target>
        </trans-unit>
        <trans-unit id="189c4c60d1d50b6ed0145650930ee4b94ca96c51" translate="yes" xml:space="preserve">
          <source>Allows excluding the type from compilation.</source>
          <target state="translated">允许将该类型从编译中排除。</target>
        </trans-unit>
        <trans-unit id="84f9c73110f3df02562243052a0f22e6ed6f9853" translate="yes" xml:space="preserve">
          <source>Allows one to encode/decode String and bytes using Base64 encoding.</source>
          <target state="translated">允许使用Base64编码对字符串和字节进行编码/解码。</target>
        </trans-unit>
        <trans-unit id="80fecf074b532731c16024d45db6e2265136c3df" translate="yes" xml:space="preserve">
          <source>Allows one to encode/decode String and bytes using a power of two base dictionary.</source>
          <target state="translated">允许使用2次幂的基础字典对字符串和字节进行编码/解码。</target>
        </trans-unit>
        <trans-unit id="7a92aa93e00df799173d1bc640664a58dd9d595d" translate="yes" xml:space="preserve">
          <source>Allows remoting communications over a socket connection</source>
          <target state="translated">允许通过插座连接进行远程通信</target>
        </trans-unit>
        <trans-unit id="a9235aa830c2a07edc7763794dd3fb319afc2aaa" translate="yes" xml:space="preserve">
          <source>Allows to encode/decode String and bytes using Base64 encoding.</source>
          <target state="translated">允许使用Base64编码对字符串和字节进行编码/解码。</target>
        </trans-unit>
        <trans-unit id="d2563c0066326e70b428b1c1a5454a887b93526e" translate="yes" xml:space="preserve">
          <source>Allows to encode/decode String and bytes using a power of two base dictionary.</source>
          <target state="translated">允许使用2次幂的基础字典对字符串和字节进行编码/解码。</target>
        </trans-unit>
        <trans-unit id="4fe2c3d568d6849aa043121f521d7b3db68dbfa9" translate="yes" xml:space="preserve">
          <source>Also replaces backslashes &lt;code&gt;\&lt;/code&gt; with slashes &lt;code&gt;/&lt;/code&gt; and afterwards turns multiple slashes into a single one.</source>
          <target state="translated">还将反斜杠 &lt;code&gt;\&lt;/code&gt; 替换为斜杠 &lt;code&gt;/&lt;/code&gt; ，然后将多个斜杠转换为单个斜杠。</target>
        </trans-unit>
        <trans-unit id="9e79c0a7835734dce01900cfb449931b90088392" translate="yes" xml:space="preserve">
          <source>Also replaces backslashes \ with slashes / and afterwards turns multiple slashes into a single one.</source>
          <target state="translated">还用斜线/代替反斜线/,之后将多个斜线变成一个。</target>
        </trans-unit>
        <trans-unit id="cae87fd39e429824f19908ebb93c376d57754960" translate="yes" xml:space="preserve">
          <source>Although schemes are case-insensitive, the canonical form is lowercase and documents that specify schemes must do so with lowercase letters. It is followed by a colon (&lt;code&gt;:&lt;/code&gt;).</source>
          <target state="translated">尽管方案不区分大小写，但规范格式为小写，指定方案的文档必须使用小写字母。其次是一个冒号（ &lt;code&gt;:&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="a8966341d626a5363945cadaa9a1988f8b2881ef" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;../../int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; literal.</source>
          <target state="translated">一个 &lt;code&gt;&lt;a href=&quot;../../int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 文字。</target>
        </trans-unit>
        <trans-unit id="106f5d1cad6fcf9fdced271bb105be60a9efb501" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable&lt;/a&gt;&lt;/code&gt; is a data structure which has an &lt;code&gt;iterator()&lt;/code&gt; method. See &lt;code&gt;&lt;a href=&quot;lambda&quot;&gt;Lambda&lt;/a&gt;&lt;/code&gt; for generic functions on iterable structures.</source>
          <target state="translated">一个 &lt;code&gt;&lt;a href=&quot;iterable&quot;&gt;Iterable&lt;/a&gt;&lt;/code&gt; 是一种数据结构，其具有一个 &lt;code&gt;iterator()&lt;/code&gt; 方法。有关可迭代结构的泛型函数，请参见 &lt;code&gt;&lt;a href=&quot;lambda&quot;&gt;Lambda&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="78d8316bbe2fa96cb556bcdff76e174761f9516d" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;&lt;a href=&quot;iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; is a structure that permits iteration over elements of type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;&lt;a href=&quot;iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; 是一种结构，即允许迭代以上类型的元素 &lt;code&gt;T&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fcc83c73e28547c0c63427b8ef296de06249e776" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;if (econd) eif&lt;/code&gt; or &lt;code&gt;if (econd) eif else eelse&lt;/code&gt; expression.</source>
          <target state="translated">一个 &lt;code&gt;if (econd) eif&lt;/code&gt; 或 &lt;code&gt;if (econd) eif else eelse&lt;/code&gt; 表达式。</target>
        </trans-unit>
        <trans-unit id="1d9fe40fe2c168e85177ebef9a7a0f4cd00d1300" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;if(econd) eif&lt;/code&gt; or &lt;code&gt;if(econd) eif else eelse&lt;/code&gt; expression.</source>
          <target state="translated">一个 &lt;code&gt;if(econd) eif&lt;/code&gt; 或 &lt;code&gt;if(econd) eif else eelse&lt;/code&gt; 表达式。</target>
        </trans-unit>
        <trans-unit id="4a8702bf12697df90318b543911da476908bff47" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;untyped e&lt;/code&gt; source code.</source>
          <target state="translated">未分类的 &lt;code&gt;untyped e&lt;/code&gt; 源代码。</target>
        </trans-unit>
        <trans-unit id="483388265515a2287a9c581e31d005c9192bbab6" translate="yes" xml:space="preserve">
          <source>An API to access classes and enums metadata at runtime.</source>
          <target state="translated">一个在运行时访问类和枚举元数据的API。</target>
        </trans-unit>
        <trans-unit id="b688512591554207c93956cf40f87515ae531a3f" translate="yes" xml:space="preserve">
          <source>An Array is a storage for values. You can access it using indexes or with its API.</source>
          <target state="translated">阵列是一个值的存储。你可以使用索引或使用它的API访问它。</target>
        </trans-unit>
        <trans-unit id="f5e15c69d739387c4be0a5940b82956c5f233472" translate="yes" xml:space="preserve">
          <source>An Array of package, module or sub-type dot paths to keep.</source>
          <target state="translated">要保留的包、模块或子类型点路径的数组。</target>
        </trans-unit>
        <trans-unit id="bda328219a94150683fe20b765ea2d9c2f4f37f3" translate="yes" xml:space="preserve">
          <source>An Input is an abstract reader. See other classes in the &lt;code&gt;haxe.io&lt;/code&gt; package for several possible implementations.</source>
          <target state="translated">输入是抽象的阅读器。有关几种可能的实现，请参见 &lt;code&gt;haxe.io&lt;/code&gt; 包中的其他类。</target>
        </trans-unit>
        <trans-unit id="a08874ada0be7d355f7bf37e1d9178fcf486d30f" translate="yes" xml:space="preserve">
          <source>An Option is a wrapper type which can either have a value (Some) or not a value (None).</source>
          <target state="translated">选项是一个包装类型,它可以有一个值(Some),也可以没有值(None)。</target>
        </trans-unit>
        <trans-unit id="fc076a63fd4452ab1847e65236c497d599329f34" translate="yes" xml:space="preserve">
          <source>An Output is an abstract write. A specific output implementation will only have to override the &lt;code&gt;writeByte&lt;/code&gt; and maybe the &lt;code&gt;write&lt;/code&gt;, &lt;code&gt;flush&lt;/code&gt; and &lt;code&gt;close&lt;/code&gt; methods. See &lt;code&gt;&lt;a href=&quot;https://api.haxe.org/cs/system/io/File.html#write&quot;&gt;File.write&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../../string#write&quot;&gt;String.write&lt;/a&gt;&lt;/code&gt; for two ways of creating an Output.</source>
          <target state="translated">输出是抽象写。一个特定的输出实现只需重写 &lt;code&gt;writeByte&lt;/code&gt; ，也许可以重写 &lt;code&gt;write&lt;/code&gt; ， &lt;code&gt;flush&lt;/code&gt; 和 &lt;code&gt;close&lt;/code&gt; 方法。有关创建输出的两种方式，请参见 &lt;code&gt;&lt;a href=&quot;https://api.haxe.org/cs/system/io/File.html#write&quot;&gt;File.write&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../../string#write&quot;&gt;String.write&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ab62ffa8278a1f11ea77425402fac1aca3499295" translate="yes" xml:space="preserve">
          <source>An Output is an abstract write. A specific output implementation will only have to override the &lt;code&gt;writeByte&lt;/code&gt; and maybe the &lt;code&gt;write&lt;/code&gt;, &lt;code&gt;flush&lt;/code&gt; and &lt;code&gt;close&lt;/code&gt; methods. See &lt;code&gt;&lt;a href=&quot;https://api.haxe.org/sys/io/File.html#write&quot;&gt;File.write&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../../string#write&quot;&gt;String.write&lt;/a&gt;&lt;/code&gt; for two ways of creating an Output.</source>
          <target state="translated">输出是抽象写。一个特定的输出实现将只需要重写 &lt;code&gt;writeByte&lt;/code&gt; ，也许可以重写 &lt;code&gt;write&lt;/code&gt; ， &lt;code&gt;flush&lt;/code&gt; 和 &lt;code&gt;close&lt;/code&gt; 方法。有关创建输出的两种方式，请参见 &lt;code&gt;&lt;a href=&quot;https://api.haxe.org/sys/io/File.html#write&quot;&gt;File.write&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../../string#write&quot;&gt;String.write&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7c26104e8998bf3eec9202f00245e1e7f8743551" translate="yes" xml:space="preserve">
          <source>An abstract type allowing values to be either of &lt;code&gt;T1&lt;/code&gt; or &lt;code&gt;T2&lt;/code&gt; type. Supports implicit casts from/to either types.</source>
          <target state="translated">一个抽象类型，允许值是 &lt;code&gt;T1&lt;/code&gt; 或 &lt;code&gt;T2&lt;/code&gt; 类型。支持两种类型的隐式转换。</target>
        </trans-unit>
        <trans-unit id="02e1e84923b9ae6b92bb06043fc46d84adf17ff3" translate="yes" xml:space="preserve">
          <source>An abstract type that represents a Class.</source>
          <target state="translated">一个代表Class的抽象类型。</target>
        </trans-unit>
        <trans-unit id="a327ba870d7f17528638596f90d7067ea6e66ef1" translate="yes" xml:space="preserve">
          <source>An abstract type that represents an Enum type.</source>
          <target state="translated">一个代表Enum类型的抽象类型。</target>
        </trans-unit>
        <trans-unit id="ac8a54f3049869e36ebf3673626d51f24331a11d" translate="yes" xml:space="preserve">
          <source>An abstract type that represents any enum value. See &lt;code&gt;&lt;a href=&quot;type&quot;&gt;Type&lt;/a&gt;&lt;/code&gt; for the Haxe Reflection API.</source>
          <target state="translated">代表任何枚举值的抽象类型。请参阅Haxe Reflection API的 &lt;code&gt;&lt;a href=&quot;type&quot;&gt;Type&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ad21165efcab28e34ede9a0d38f96c9f941a10c4" translate="yes" xml:space="preserve">
          <source>An abstract.</source>
          <target state="translated">一份摘要。</target>
        </trans-unit>
        <trans-unit id="a6f1e3c43d7d1c783e4d0296dc835e92880e484e" translate="yes" xml:space="preserve">
          <source>An alternative array of paths (directory names) to use to search for modules to include. Note that if you pass this argument, only the specified paths will be used for inclusion.</source>
          <target state="translated">一个由路径(目录名)组成的数组,用来搜索要包含的模块。请注意,如果你传递了这个参数,只有指定的路径才会被使用。</target>
        </trans-unit>
        <trans-unit id="d4e9db352da93d0f813b0d564f45aee1eefa76fa" translate="yes" xml:space="preserve">
          <source>An array declaration &lt;code&gt;[el]&lt;/code&gt;.</source>
          <target state="translated">数组声明 &lt;code&gt;[el]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7e04188f2b8fa472e118e1ebd657a8b0f6f14b85" translate="yes" xml:space="preserve">
          <source>An array of strings representing the names of the type parameters the field has.</source>
          <target state="translated">代表字段类型参数名称的字符串数组。</target>
        </trans-unit>
        <trans-unit id="4f0b024a809deedccc009b7b3a712324290cc2a7" translate="yes" xml:space="preserve">
          <source>An array of strings representing the names of the type parameters the type has.</source>
          <target state="translated">一个代表类型参数名称的字符串数组。</target>
        </trans-unit>
        <trans-unit id="59e1fccd0529606edb08ffac8d9c60aa4fc4038a" translate="yes" xml:space="preserve">
          <source>An array of strings representing the names of the type parameters the type has. As of Haxe 3.2.0, this does not include the constraints.</source>
          <target state="translated">一个字符串数组,代表该类型拥有的类型参数的名称。从Haxe 3.2.0开始,这不包括约束条件。</target>
        </trans-unit>
        <trans-unit id="2213e19e3ed42e9a543efb139c8bee21121184ee" translate="yes" xml:space="preserve">
          <source>An enum instance is the result of using an enum constructor. Given an &lt;code&gt;enum Color { Red; }&lt;/code&gt;, &lt;code&gt;getEnum(Red)&lt;/code&gt; returns &lt;code&gt;&lt;a href=&quot;enum&quot;&gt;Enum&lt;/a&gt;&amp;lt;Color&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">枚举实例是使用枚举构造函数的结果。给定一个 &lt;code&gt;enum Color { Red; }&lt;/code&gt; ， &lt;code&gt;getEnum(Red)&lt;/code&gt; 返回 &lt;code&gt;&lt;a href=&quot;enum&quot;&gt;Enum&lt;/a&gt;&amp;lt;Color&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e9b38445f4dc3de7ac31cd5c76fbaa9e03203388" translate="yes" xml:space="preserve">
          <source>An enum.</source>
          <target state="translated">一个枚举。</target>
        </trans-unit>
        <trans-unit id="f34cc69fb974360097f0ac7ab22adff21152e995" translate="yes" xml:space="preserve">
          <source>An exception containing arbitrary value.</source>
          <target state="translated">含有任意值的异常。</target>
        </trans-unit>
        <trans-unit id="1781c8dea722edf29c961270c700e8feb7d1d5dd" translate="yes" xml:space="preserve">
          <source>An exception is thrown if the attribute doesn't exists. Use &lt;code&gt;has&lt;/code&gt; to check the existence of an attribute.</source>
          <target state="translated">如果属性不存在，则会引发异常。使用 &lt;code&gt;has&lt;/code&gt; 检查属性的存在。</target>
        </trans-unit>
        <trans-unit id="b105febb4300bf4bba3593f20d4b4a75499b338e" translate="yes" xml:space="preserve">
          <source>An exception is thrown if the element doesn't exists. Use &lt;code&gt;hasNode&lt;/code&gt; to check the existence of a node.</source>
          <target state="translated">如果元素不存在，则会引发异常。使用 &lt;code&gt;hasNode&lt;/code&gt; 检查节点是否存在。</target>
        </trans-unit>
        <trans-unit id="286ab01e6f8bd6e5eff57a85e1e7fb9dd7ef1fdf" translate="yes" xml:space="preserve">
          <source>An exception is thrown if there is no data or if there not only data but also other nodes.</source>
          <target state="translated">如果没有数据或者不仅有数据还有其他节点,就会抛出异常。</target>
        </trans-unit>
        <trans-unit id="6da3c5bed416c2c5ebbaac21e398b7f48ef45281" translate="yes" xml:space="preserve">
          <source>An implementation class of an abstract, i.e. where all its run-time code is.</source>
          <target state="translated">一个抽象的实现类,即它所有的运行时代码都在这里。</target>
        </trans-unit>
        <trans-unit id="57c8b7747b0892a79f289e49e8fbcee595d10c30" translate="yes" xml:space="preserve">
          <source>An implementation of JSON parser in Haxe.</source>
          <target state="translated">Haxe中JSON解析器的实现。</target>
        </trans-unit>
        <trans-unit id="410d61c7d01d4e39408ca8614eca64131c5bcb3f" translate="yes" xml:space="preserve">
          <source>An implementation of JSON printer in Haxe.</source>
          <target state="translated">Haxe中JSON打印机的实现。</target>
        </trans-unit>
        <trans-unit id="22469e1c1eebd60e4cbf4f63bbf006a6d6ee3a01" translate="yes" xml:space="preserve">
          <source>An inline method.</source>
          <target state="translated">一种内联法。</target>
        </trans-unit>
        <trans-unit id="1cad455794751b0f0cb487e809a96348f47917a6" translate="yes" xml:space="preserve">
          <source>An integer value is outside its allowed range</source>
          <target state="translated">一个整数值超出了它的允许范围。</target>
        </trans-unit>
        <trans-unit id="6e9da84fd19f48f6841743375545fbe53a7bfa79" translate="yes" xml:space="preserve">
          <source>An object declaration.</source>
          <target state="translated">一个对象声明;</target>
        </trans-unit>
        <trans-unit id="b0b19b5df1d06a2f1a2fb6ae8e0ebdceb28f47f0" translate="yes" xml:space="preserve">
          <source>An open structure allows having additional fields added to it, which is used during type inference. It is closed upon unification.</source>
          <target state="translated">一个开放的结构允许添加额外的字段,这在类型推理中使用。它在统一后是封闭的。</target>
        </trans-unit>
        <trans-unit id="d8dc50fd166713cf880e6c280467ffc9df61ac97" translate="yes" xml:space="preserve">
          <source>An operation on Bytes is outside of its valid range</source>
          <target state="translated">对字节的操作超出了其有效范围。</target>
        </trans-unit>
        <trans-unit id="9dd8d54e4a8989728914588953fa56aaf9fb3e3a" translate="yes" xml:space="preserve">
          <source>An optional list of function parameter type declarations.</source>
          <target state="translated">函数参数类型声明的可选列表。</target>
        </trans-unit>
        <trans-unit id="0d31353453feddd6160bcbabd73954373085fbee" translate="yes" xml:space="preserve">
          <source>An ordered list of enum constructor names.</source>
          <target state="translated">枚举构造函数名称的有序列表。</target>
        </trans-unit>
        <trans-unit id="9131b5b6b56007e8765a4775bc4a19b6019ddc12" translate="yes" xml:space="preserve">
          <source>An unary operator &lt;code&gt;op&lt;/code&gt; on &lt;code&gt;e&lt;/code&gt;:</source>
          <target state="translated">一元运算符 &lt;code&gt;op&lt;/code&gt; 上 &lt;code&gt;e&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="d73373646f456dc9e5e6c2aafe19e7ed97af8c98" translate="yes" xml:space="preserve">
          <source>An unknown identifier.</source>
          <target state="translated">一个未知的标识符。</target>
        </trans-unit>
        <trans-unit id="ab3d5457090c628d095998c16b9edb1426c86b27" translate="yes" xml:space="preserve">
          <source>AnonStatus</source>
          <target state="translated">AnonStatus</target>
        </trans-unit>
        <trans-unit id="ff487595ac00557b04dad23cdb36e138b12199bb" translate="yes" xml:space="preserve">
          <source>AnonType</source>
          <target state="translated">AnonType</target>
        </trans-unit>
        <trans-unit id="5c695e841c469af17dd175543ae507a00fb556c7" translate="yes" xml:space="preserve">
          <source>Anonymous function</source>
          <target state="translated">匿名函数</target>
        </trans-unit>
        <trans-unit id="322444d3bb52c341f429ca0454f292dc242f315b" translate="yes" xml:space="preserve">
          <source>Any</source>
          <target state="translated">Any</target>
        </trans-unit>
        <trans-unit id="7f91a3a3d79900c1d520772113215772298ce3ba" translate="yes" xml:space="preserve">
          <source>Any call to this function takes effect when the macro is executed, not during typing. As a consequence, this function can not introduce new local variables into the macro context and may have other restrictions.</source>
          <target state="translated">对该函数的任何调用在宏执行时生效,而不是在输入过程中生效。因此,这个函数不能在宏上下文中引入新的局部变量,也可能有其他限制。</target>
        </trans-unit>
        <trans-unit id="8d698245b5a4ca669d90c3c5fd8a061538c6c5a1" translate="yes" xml:space="preserve">
          <source>Any class with matching &lt;code&gt;hasNext()&lt;/code&gt; and &lt;code&gt;next()&lt;/code&gt; fields is considered an &lt;code&gt;&lt;a href=&quot;iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; and can then be used e.g. in &lt;code&gt;for&lt;/code&gt;-loops. This makes it easy to implement custom iterators.</source>
          <target state="translated">具有 &lt;code&gt;hasNext()&lt;/code&gt; 和 &lt;code&gt;next()&lt;/code&gt; 字段匹配的任何类都被视为 &lt;code&gt;&lt;a href=&quot;iterator&quot;&gt;Iterator&lt;/a&gt;&lt;/code&gt; ，然后可以在 &lt;code&gt;for&lt;/code&gt; -loops中使用。这使实现自定义迭代器变得容易。</target>
        </trans-unit>
        <trans-unit id="16584c178255be8fdad9baf1f1c8fd7b515afbc7" translate="yes" xml:space="preserve">
          <source>Any(&lt;a href=&quot;dynamic&quot;&gt;Dynamic&lt;/a&gt;)</source>
          <target state="translated">Any(&lt;a href=&quot;dynamic&quot;&gt;Dynamic&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="025f1f66191a6ac3a06dc7b88d956a4a8e52b209" translate="yes" xml:space="preserve">
          <source>Appends &lt;code&gt;c&lt;/code&gt; to &lt;code&gt;s&lt;/code&gt; until &lt;code&gt;s.length&lt;/code&gt; is at least &lt;code&gt;l&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;c&lt;/code&gt; 附加到 &lt;code&gt;s&lt;/code&gt; ,直到 &lt;code&gt;s.length&lt;/code&gt; 至少为 &lt;code&gt;l&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3ad2c6f1821a0a3c5bf76fc477aa8a72a287d665" translate="yes" xml:space="preserve">
          <source>Appends a substring of &lt;code&gt;s&lt;/code&gt; to &lt;code&gt;this&lt;/code&gt; StringBuf.</source>
          <target state="translated">追加的子 &lt;code&gt;s&lt;/code&gt; 来 &lt;code&gt;this&lt;/code&gt; 的StringBuf。</target>
        </trans-unit>
        <trans-unit id="f37373295f3d2823f0dc5098c7c22ded66ea16c1" translate="yes" xml:space="preserve">
          <source>Appends the character identified by &lt;code&gt;c&lt;/code&gt; to &lt;code&gt;this&lt;/code&gt; StringBuf.</source>
          <target state="translated">通过追加识别的字符 &lt;code&gt;c&lt;/code&gt; 来 &lt;code&gt;this&lt;/code&gt; 的StringBuf。</target>
        </trans-unit>
        <trans-unit id="89d581df81992a14b9b5d5d964352ae05d35797e" translate="yes" xml:space="preserve">
          <source>Appends the representation of &lt;code&gt;x&lt;/code&gt; to &lt;code&gt;this&lt;/code&gt; StringBuf.</source>
          <target state="translated">追加的代表性 &lt;code&gt;x&lt;/code&gt; 来 &lt;code&gt;this&lt;/code&gt; 的StringBuf。</target>
        </trans-unit>
        <trans-unit id="d36709920bb1b972cb877e71fd9ce02f7de31236" translate="yes" xml:space="preserve">
          <source>Applies the type parameters &lt;code&gt;typeParameters&lt;/code&gt; to type &lt;code&gt;t&lt;/code&gt; with the given types &lt;code&gt;concreteTypes&lt;/code&gt;.</source>
          <target state="translated">将类型参数 &lt;code&gt;typeParameters&lt;/code&gt; 应用于类型为 &lt;code&gt;t&lt;/code&gt; 的给定类型 &lt;code&gt;concreteTypes&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="107004472b7ba4e5e31f3082ee1fb5a1239eec61" translate="yes" xml:space="preserve">
          <source>Array</source>
          <target state="translated">Array</target>
        </trans-unit>
        <trans-unit id="cbd12a239d023ee518bf08255256e27ba3b6aa6f" translate="yes" xml:space="preserve">
          <source>Array access &lt;code&gt;e1[e2]&lt;/code&gt;.</source>
          <target state="translated">数组访问 &lt;code&gt;e1[e2]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4b54e292796cec14221b3a6aee7fa3e58cdf3951" translate="yes" xml:space="preserve">
          <source>Array of &lt;code&gt;&lt;a href=&quot;typetree#TypeTree&quot;&gt;TypeTree&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;typetree#TypeTree&quot;&gt;TypeTree&lt;/a&gt;&lt;/code&gt; 的数组。</target>
        </trans-unit>
        <trans-unit id="0f0eb497b2b14ebc933d5eb57044486fa397dca1" translate="yes" xml:space="preserve">
          <source>Array of module names to ignore for inclusion.</source>
          <target state="translated">要忽略的模块名称的阵列。</target>
        </trans-unit>
        <trans-unit id="7dcca0060b8812eb1421d39b7e523e0815e0a167" translate="yes" xml:space="preserve">
          <source>Array of module names to ignore for inclusion. You can use &lt;code&gt;module*&lt;/code&gt; with a * at the end for Wildcard matching</source>
          <target state="translated">忽略包含的模块名称数组。您可以在 &lt;code&gt;module*&lt;/code&gt; 的末尾使用*进行通配符匹配</target>
        </trans-unit>
        <trans-unit id="dfe5f07935be54d26e058d11a7ad130e6ef99259" translate="yes" xml:space="preserve">
          <source>Array&amp;lt;T&amp;gt;</source>
          <target state="translated">Array&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="7f8120e970a68240bd85c0d320d5e295ae60efb1" translate="yes" xml:space="preserve">
          <source>Array.concat()</source>
          <target state="translated">Array.concat()</target>
        </trans-unit>
        <trans-unit id="a75138abbeca84f128f4be60f7c033cd747fd3e7" translate="yes" xml:space="preserve">
          <source>Array.copy()</source>
          <target state="translated">Array.copy()</target>
        </trans-unit>
        <trans-unit id="6278fc55a31e3f815cc5eeadc9d55c3efe160136" translate="yes" xml:space="preserve">
          <source>Array.filter()</source>
          <target state="translated">Array.filter()</target>
        </trans-unit>
        <trans-unit id="d075be5db68730564490268da50f3f414b85905f" translate="yes" xml:space="preserve">
          <source>Array.indexOf()</source>
          <target state="translated">Array.indexOf()</target>
        </trans-unit>
        <trans-unit id="452852518dea4c1028ee6a067649f9ec5d9dd1b1" translate="yes" xml:space="preserve">
          <source>Array.insert()</source>
          <target state="translated">Array.insert()</target>
        </trans-unit>
        <trans-unit id="fdae32b1a90b6baaab0a28fd27aa563d2f16452a" translate="yes" xml:space="preserve">
          <source>Array.iterator()</source>
          <target state="translated">Array.iterator()</target>
        </trans-unit>
        <trans-unit id="ad5c54e02e90cd598f7759ad4bc21a224892912e" translate="yes" xml:space="preserve">
          <source>Array.join()</source>
          <target state="translated">Array.join()</target>
        </trans-unit>
        <trans-unit id="61819ffd9b9922c5d1fedb13ce708f12e9295c53" translate="yes" xml:space="preserve">
          <source>Array.lastIndexOf()</source>
          <target state="translated">Array.lastIndexOf()</target>
        </trans-unit>
        <trans-unit id="fb5ce6e940582647f2fa3ae56246c93e000d7601" translate="yes" xml:space="preserve">
          <source>Array.length</source>
          <target state="translated">Array.length</target>
        </trans-unit>
        <trans-unit id="5813e7ebce82b9b8955465c2c9f8e22a90685e9e" translate="yes" xml:space="preserve">
          <source>Array.map()</source>
          <target state="translated">Array.map()</target>
        </trans-unit>
        <trans-unit id="df1d374981aa2c51195c483bb7b3f173f6629489" translate="yes" xml:space="preserve">
          <source>Array.pop()</source>
          <target state="translated">Array.pop()</target>
        </trans-unit>
        <trans-unit id="60129d3294829838426397201529a7e53ce809c4" translate="yes" xml:space="preserve">
          <source>Array.push()</source>
          <target state="translated">Array.push()</target>
        </trans-unit>
        <trans-unit id="85783f4dbd92f3720be3881ca48520f431c4591b" translate="yes" xml:space="preserve">
          <source>Array.remove()</source>
          <target state="translated">Array.remove()</target>
        </trans-unit>
        <trans-unit id="905ce0b21ef07c3d8d242c40cd6d50cce52bac38" translate="yes" xml:space="preserve">
          <source>Array.reverse()</source>
          <target state="translated">Array.reverse()</target>
        </trans-unit>
        <trans-unit id="a2d09add6195e0224926af72155b0b0a4ed3fc44" translate="yes" xml:space="preserve">
          <source>Array.shift()</source>
          <target state="translated">Array.shift()</target>
        </trans-unit>
        <trans-unit id="3d19b41c2d11ba0e8689da80ce70255eb10a2ea0" translate="yes" xml:space="preserve">
          <source>Array.slice()</source>
          <target state="translated">Array.slice()</target>
        </trans-unit>
        <trans-unit id="b6b62bc1663721a8ba2817dd79d6b63da60557a5" translate="yes" xml:space="preserve">
          <source>Array.sort()</source>
          <target state="translated">Array.sort()</target>
        </trans-unit>
        <trans-unit id="61381df54b60a85fa03a7142d959ecc2f0e20ebf" translate="yes" xml:space="preserve">
          <source>Array.splice()</source>
          <target state="translated">Array.splice()</target>
        </trans-unit>
        <trans-unit id="b33ace5b276a0af37c4557e108b877d0d75e86c6" translate="yes" xml:space="preserve">
          <source>Array.toString()</source>
          <target state="translated">Array.toString()</target>
        </trans-unit>
        <trans-unit id="fad28543e8e94ec8c87fb5f43397e1cfa8549b8f" translate="yes" xml:space="preserve">
          <source>Array.unshift()</source>
          <target state="translated">Array.unshift()</target>
        </trans-unit>
        <trans-unit id="b3f2e985db383c94521559410abfe5a507362e26" translate="yes" xml:space="preserve">
          <source>ArrayAccess</source>
          <target state="translated">ArrayAccess</target>
        </trans-unit>
        <trans-unit id="762bcaeb1a15ecbcef97165425968b6d391bf015" translate="yes" xml:space="preserve">
          <source>ArrayAccess&amp;lt;T&amp;gt;</source>
          <target state="translated">ArrayAccess&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="6d847af54d7a1f2d7fb25545e9d4c0184f36757f" translate="yes" xml:space="preserve">
          <source>ArrayBufferView(&lt;a href=&quot;arraybufferviewdata&quot;&gt;ArrayBufferViewData&lt;/a&gt;)</source>
          <target state="translated">ArrayBufferView(&lt;a href=&quot;arraybufferviewdata&quot;&gt;ArrayBufferViewData&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="d59e6d02a725828255559fdb12d4169a506cdc58" translate="yes" xml:space="preserve">
          <source>ArrayBufferViewData</source>
          <target state="translated">ArrayBufferViewData</target>
        </trans-unit>
        <trans-unit id="576df41107c6500ad92a8938b2296e6dd8ff1cd1" translate="yes" xml:space="preserve">
          <source>ArrayBufferViewImpl</source>
          <target state="translated">ArrayBufferViewImpl</target>
        </trans-unit>
        <trans-unit id="a5a3bebbf595ab54022446e8af9fae724ebbe3ba" translate="yes" xml:space="preserve">
          <source>ArrayIterator&amp;lt;T&amp;gt;</source>
          <target state="translated">ArrayIterator&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="b97e19b9d938e115e20665f16b49675cb73f3df7" translate="yes" xml:space="preserve">
          <source>ArrayKeyValueIterator&amp;lt;T&amp;gt;</source>
          <target state="translated">ArrayKeyValueIterator&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="7ca62f7c70f8e91a7204f929db6d8b286906d76a" translate="yes" xml:space="preserve">
          <source>ArraySort</source>
          <target state="translated">ArraySort</target>
        </trans-unit>
        <trans-unit id="cc5ad33c751f2ae16ae459cb20d30d269b7cc8e5" translate="yes" xml:space="preserve">
          <source>ArraySort provides a stable implementation of merge sort through its &lt;code&gt;sort&lt;/code&gt; method. It should be used instead of &lt;code&gt;&lt;a href=&quot;../../array#sort&quot;&gt;Array.sort&lt;/a&gt;&lt;/code&gt; in cases where the order of equal elements has to be retained on all targets.</source>
          <target state="translated">ArraySort通过其 &lt;code&gt;sort&lt;/code&gt; 方法提供了稳定的合并排序实现。如果必须在所有目标上保留相等元素的顺序，则应使用它而不是 &lt;code&gt;&lt;a href=&quot;../../array#sort&quot;&gt;Array.sort&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1e8a3c32c7e9b4c8f886e1bbebcdc7df95965d0d" translate="yes" xml:space="preserve">
          <source>Arrow function</source>
          <target state="translated">箭头功能</target>
        </trans-unit>
        <trans-unit id="941b370d441f4d7c5ab64a088703f6edd4b36dfe" translate="yes" xml:space="preserve">
          <source>AsVar&amp;lt;T&amp;gt;(T)</source>
          <target state="translated">AsVar&amp;lt;T&amp;gt;(T)</target>
        </trans-unit>
        <trans-unit id="c9ece17d721baa99b8d88c69dc195e86a35be52e" translate="yes" xml:space="preserve">
          <source>Assuming the function is executed on a machine in a UTC+2 timezone, &lt;code&gt;&lt;a href=&quot;date#now&quot;&gt;Date.now&lt;/a&gt;().getTimezoneOffset()&lt;/code&gt; will return &lt;code&gt;-120&lt;/code&gt;.</source>
          <target state="translated">假设函数是在UTC + 2时区的计算机上执行的，则 &lt;code&gt;&lt;a href=&quot;date#now&quot;&gt;Date.now&lt;/a&gt;().getTimezoneOffset()&lt;/code&gt; 将返回 &lt;code&gt;-120&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5867255fe0b0339f00303cec83b66d13f9675f52" translate="yes" xml:space="preserve">
          <source>AsyncAdapter</source>
          <target state="translated">AsyncAdapter</target>
        </trans-unit>
        <trans-unit id="85633a790d047637f3e2d5fad02f6c8932a98e09" translate="yes" xml:space="preserve">
          <source>AsyncConnection</source>
          <target state="translated">AsyncConnection</target>
        </trans-unit>
        <trans-unit id="7bf40a202ab7407cf6f226b75579564047cca6bb" translate="yes" xml:space="preserve">
          <source>AsyncDebugConnection</source>
          <target state="translated">AsyncDebugConnection</target>
        </trans-unit>
        <trans-unit id="be934223df991bdf0c1b6fdcfa3205b0319d2d89" translate="yes" xml:space="preserve">
          <source>AsyncProxy&amp;lt;T&amp;gt;</source>
          <target state="translated">AsyncProxy&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="b7f32def50a12a9d7502886cfd50cda17de9d212" translate="yes" xml:space="preserve">
          <source>Attrib</source>
          <target state="translated">Attrib</target>
        </trans-unit>
        <trans-unit id="be93bbecfd7ee4e70bcb3d856d9d02e48a49bfac" translate="yes" xml:space="preserve">
          <source>BalancedTree allows key-value mapping with arbitrary keys, as long as they can be ordered. By default, &lt;code&gt;&lt;a href=&quot;../../reflect#compare&quot;&gt;Reflect.compare&lt;/a&gt;&lt;/code&gt; is used in the &lt;code&gt;compare&lt;/code&gt; method, which can be overridden in subclasses.</source>
          <target state="translated">BalancedTree允许使用任意键进行键-值映射，只要可以对其进行排序即可。默认情况下，在 &lt;code&gt;compare&lt;/code&gt; 方法中使用 &lt;code&gt;&lt;a href=&quot;../../reflect#compare&quot;&gt;Reflect.compare&lt;/a&gt;&lt;/code&gt; ，可以在子类中覆盖它。</target>
        </trans-unit>
        <trans-unit id="c4d4803f2c7bd8528aa34554e4732753b83f7af5" translate="yes" xml:space="preserve">
          <source>BalancedTree&amp;lt;K, V&amp;gt;</source>
          <target state="translated">BalancedTree &amp;lt;K，V&amp;gt;</target>
        </trans-unit>
        <trans-unit id="3ec62d2c3d3fddbc81450a3665a8788eb45aebb6" translate="yes" xml:space="preserve">
          <source>Base class for exceptions.</source>
          <target state="translated">异常的基类。</target>
        </trans-unit>
        <trans-unit id="895c330ff6166a7f13701f8d9b78f313787269c8" translate="yes" xml:space="preserve">
          <source>Base64</source>
          <target state="translated">Base64</target>
        </trans-unit>
        <trans-unit id="e5e078ec036e3d4891bd273d34c38fad0bafc964" translate="yes" xml:space="preserve">
          <source>BaseCode</source>
          <target state="translated">BaseCode</target>
        </trans-unit>
        <trans-unit id="70e8126ce5599131040464a46a062a804e1fcdbc" translate="yes" xml:space="preserve">
          <source>BaseType</source>
          <target state="translated">BaseType</target>
        </trans-unit>
        <trans-unit id="9e7efb17fc1cf435e3c3c1d6452d160cfc563ed8" translate="yes" xml:space="preserve">
          <source>Basically, it wraps &lt;code&gt;&lt;a href=&quot;../reflect&quot;&gt;Reflect&lt;/a&gt;&lt;/code&gt; calls in a &lt;code&gt;&lt;a href=&quot;../map&quot;&gt;Map&lt;/a&gt;&lt;/code&gt;-like interface.</source>
          <target state="translated">基本上，它将 &lt;code&gt;&lt;a href=&quot;../reflect&quot;&gt;Reflect&lt;/a&gt;&lt;/code&gt; 调用包装在类似 &lt;code&gt;&lt;a href=&quot;../map&quot;&gt;Map&lt;/a&gt;&lt;/code&gt; 的界面中。</target>
        </trans-unit>
        <trans-unit id="46339e4480e4353390e8e419c67c21eb4f8949f9" translate="yes" xml:space="preserve">
          <source>Behaviour while reading after calling this method is unspecified.</source>
          <target state="translated">调用本方法后,读取时的行为没有说明。</target>
        </trans-unit>
        <trans-unit id="c374e186d07d39d713ee5088176224a313cff4d1" translate="yes" xml:space="preserve">
          <source>Behaviour while writing after calling this method is unspecified.</source>
          <target state="translated">调用本方法后,书写时的行为没有说明。</target>
        </trans-unit>
        <trans-unit id="316f1b48fd2067b5254195f5f4bda4f3db3487c9" translate="yes" xml:space="preserve">
          <source>Binary operator &lt;code&gt;e1 op e2&lt;/code&gt;.</source>
          <target state="translated">二进制运算符 &lt;code&gt;e1 op e2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aafca2d781b0225274269cd6bbf4d9c8d572e230" translate="yes" xml:space="preserve">
          <source>Binds &lt;code&gt;key&lt;/code&gt; to &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;key&lt;/code&gt; 绑定到 &lt;code&gt;value&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e390225f4fd512c2d435883d40dad858b694e459" translate="yes" xml:space="preserve">
          <source>Binop</source>
          <target state="translated">Binop</target>
        </trans-unit>
        <trans-unit id="daf760a167a8047cee872015a8e80002f3b67442" translate="yes" xml:space="preserve">
          <source>Bool</source>
          <target state="translated">Bool</target>
        </trans-unit>
        <trans-unit id="a7412a41fb591dba99d247eee54c2a7e035faa2d" translate="yes" xml:space="preserve">
          <source>BufferInput</source>
          <target state="translated">BufferInput</target>
        </trans-unit>
        <trans-unit id="017e82f86f7daa417882c9fa7f9dbfa00a2442bb" translate="yes" xml:space="preserve">
          <source>Build a date-time from several components</source>
          <target state="translated">从多个组件中构建一个日期时间</target>
        </trans-unit>
        <trans-unit id="6c54bd189718d94e02875a1d49feb2460c3a4b15" translate="yes" xml:space="preserve">
          <source>Build an AsyncConnection from a synchronized Connection.</source>
          <target state="translated">从同步的Connection中构建一个AsyncConnection。</target>
        </trans-unit>
        <trans-unit id="f7faa402d2c4c19ba7d95f8355b6c07cc3c07544" translate="yes" xml:space="preserve">
          <source>Builds a &lt;code&gt;&lt;a href=&quot;position#Position&quot;&gt;Position&lt;/a&gt;&lt;/code&gt; from &lt;code&gt;inf&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;inf&lt;/code&gt; 建立 &lt;code&gt;&lt;a href=&quot;position#Position&quot;&gt;Position&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="14a2632621cb43c6b952388264816bed437584e7" translate="yes" xml:space="preserve">
          <source>Builds an expression from &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;v&lt;/code&gt; 构建表达式。</target>
        </trans-unit>
        <trans-unit id="ab1c333aa7e33ee2df91d07394eb1780289ee2ce" translate="yes" xml:space="preserve">
          <source>By being specified in these documents their semantics are well known and can be depended upon. Any client can use any method and the server can be configured to support any combination of methods. If a method is unknown to an intermediate it will be treated as an unsafe and non-idempotent method. There is no limit to the number of methods that can be defined and this allows for future methods to be specified without breaking existing infrastructure.</source>
          <target state="translated">通过在这些文档中指定,它们的语义是众所周知的,可以依赖。任何客户端都可以使用任何方法,服务器也可以被配置为支持任何方法的组合。如果一个方法对中间人来说是未知的,那么它将被视为不安全和非幂等的方法。可以定义的方法数量没有限制,这允许在不破坏现有基础设施的情况下指定未来的方法。</target>
        </trans-unit>
        <trans-unit id="8153c8e9a5d7760cca37760e8f39477805c232ed" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;&lt;a href=&quot;compiler#include&quot;&gt;Compiler.include&lt;/a&gt;&lt;/code&gt; will search for modules in the directories defined with &lt;code&gt;-cp&lt;/code&gt;. If you want to specify a different set of paths to search for modules, you can use the optional argument &lt;code&gt;classPath&lt;/code&gt;.</source>
          <target state="translated">默认情况下， &lt;code&gt;&lt;a href=&quot;compiler#include&quot;&gt;Compiler.include&lt;/a&gt;&lt;/code&gt; 将在 &lt;code&gt;-cp&lt;/code&gt; 定义的目录中搜索模块。如果要指定其他路径来搜索模块，则可以使用可选参数 &lt;code&gt;classPath&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8f54d71567ca04ee57dc9ec029b852c740d145d3" translate="yes" xml:space="preserve">
          <source>By default, the callback is made before types are stored in the compilation server, if active. This means that any effect persists for the next compilation. If &lt;code&gt;persistent&lt;/code&gt; is set to &lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;false&lt;/a&gt;&lt;/code&gt;, changes to types made by the callback only affect the current compilation. If no compilation server is used, this flag has no effect.</source>
          <target state="translated">默认情况下，如果类型有效，则在类型存储在编译服务器中之前进行回调。这意味着任何影响都将持续到下一次编译。如果 &lt;code&gt;persistent&lt;/code&gt; 设置为 &lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;false&lt;/a&gt;&lt;/code&gt; ，则对回调进行的类型更改仅影响当前编译。如果未使用任何编译服务器，则此标志无效。</target>
        </trans-unit>
        <trans-unit id="a223e998755e11431caf9667f4e9795e8ba9d7a2" translate="yes" xml:space="preserve">
          <source>By default, this method replaces only the first matched substring. If the global g modifier is in place, all matched substrings are replaced.</source>
          <target state="translated">默认情况下,这个方法只替换第一个匹配的子串。如果使用了全局g修饰符,所有匹配的子串都会被替换。</target>
        </trans-unit>
        <trans-unit id="caeac8d89b6d218385fe6084323ca701db9d0fd8" translate="yes" xml:space="preserve">
          <source>By default, this method splits &lt;code&gt;s&lt;/code&gt; into two parts at the first matched substring. If the global g modifier is in place, &lt;code&gt;s&lt;/code&gt; is split at each matched substring.</source>
          <target state="translated">默认情况下，此方法在第一个匹配的子字符串处将 &lt;code&gt;s&lt;/code&gt; 分为两部分。如果有全局g修饰符，则在每个匹配的子字符串处拆分 &lt;code&gt;s&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8e5fdab92dece79d7629d6d901687613ddc6ab5a" translate="yes" xml:space="preserve">
          <source>Bytes</source>
          <target state="translated">Bytes</target>
        </trans-unit>
        <trans-unit id="559140b8450f93a25f5d0f7f9cf027cee36d9e32" translate="yes" xml:space="preserve">
          <source>BytesBuffer</source>
          <target state="translated">BytesBuffer</target>
        </trans-unit>
        <trans-unit id="7b011388821f58a18cad1bcbc5d9722e918f2f9f" translate="yes" xml:space="preserve">
          <source>BytesData</source>
          <target state="translated">BytesData</target>
        </trans-unit>
        <trans-unit id="4673495414e3a8b58642c2c241b6460bc39f1a21" translate="yes" xml:space="preserve">
          <source>BytesDataAbstract(&lt;a href=&quot;bytesdataimpl&quot;&gt;BytesDataImpl&lt;/a&gt;)</source>
          <target state="translated">BytesDataAbstract(&lt;a href=&quot;bytesdataimpl&quot;&gt;BytesDataImpl&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="7f1bcf5794798fe67bd21552a18b198323ed3fa1" translate="yes" xml:space="preserve">
          <source>BytesDataImpl</source>
          <target state="translated">BytesDataImpl</target>
        </trans-unit>
        <trans-unit id="d76cd16a89ab005f5fc93a5611c734376afd205a" translate="yes" xml:space="preserve">
          <source>BytesInput</source>
          <target state="translated">BytesInput</target>
        </trans-unit>
        <trans-unit id="263fd981287ea35a59214ad70d6ee1b0a2771055" translate="yes" xml:space="preserve">
          <source>BytesOutput</source>
          <target state="translated">BytesOutput</target>
        </trans-unit>
        <trans-unit id="9b83aee93ea1eff8bba2ed57d6eee71e23545a02" translate="yes" xml:space="preserve">
          <source>CType</source>
          <target state="translated">CType</target>
        </trans-unit>
        <trans-unit id="fab107488cc8a4195922c00bc1d25654d2ce6d31" translate="yes" xml:space="preserve">
          <source>CTypeTools</source>
          <target state="translated">CTypeTools</target>
        </trans-unit>
        <trans-unit id="45495ed8144414e6265cd3c5abe40ad86d7b578f" translate="yes" xml:space="preserve">
          <source>Calculates a Hmac of the given Bytes using a HashMethod.</source>
          <target state="translated">使用HashMethod计算给定字节的Hmac。</target>
        </trans-unit>
        <trans-unit id="e1fc976a3c5a0c6dae37899f6f0ef8462824a52b" translate="yes" xml:space="preserve">
          <source>Calculates the Adler32 of the given Bytes.</source>
          <target state="translated">计算给定字节的Adler32。</target>
        </trans-unit>
        <trans-unit id="30110574a461cd8b5f2c88a5c5ceb4c696346d39" translate="yes" xml:space="preserve">
          <source>Calculates the CRC32 of the given data bytes</source>
          <target state="translated">计算给定数据字节的CRC32。</target>
        </trans-unit>
        <trans-unit id="86014a756a7c5bae660586fa96d7b9fc75ab9fe4" translate="yes" xml:space="preserve">
          <source>Calculates the Crc32 of the given Bytes.</source>
          <target state="translated">计算给定字节的Crc32。</target>
        </trans-unit>
        <trans-unit id="1ddc14187b9291711b54a71f6b27f4cb0f273c17" translate="yes" xml:space="preserve">
          <source>Call a method &lt;code&gt;func&lt;/code&gt; with the given arguments &lt;code&gt;args&lt;/code&gt;.</source>
          <target state="translated">使用给定参数 &lt;code&gt;args&lt;/code&gt; 调用方法 &lt;code&gt;func&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="74053ca219159639be2ec56e0a01d7275c3817ca" translate="yes" xml:space="preserve">
          <source>Call a method with the given object and arguments.</source>
          <target state="translated">调用给定对象和参数的方法。</target>
        </trans-unit>
        <trans-unit id="a926f263e0442a3e1804f45589ac091f6dc67283" translate="yes" xml:space="preserve">
          <source>Call the &lt;code&gt;chars&lt;/code&gt; function for each UTF8 char of the string.</source>
          <target state="translated">为字符串的每个UTF8字符调用 &lt;code&gt;chars&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="51825cbd57d8c51e70b271e60fe3537f21a1277c" translate="yes" xml:space="preserve">
          <source>Call the event. Will do nothing if the event has been stopped.</source>
          <target state="translated">调用该事件。如果事件已经停止,将不做任何事情。</target>
        </trans-unit>
        <trans-unit id="6032a861f26f2da2ab3cb01a618204e1f16cd3e5" translate="yes" xml:space="preserve">
          <source>Call the event. Will do nothing is the event has been stopped.</source>
          <target state="translated">呼叫事件。如果事件被停止,将什么也不做。</target>
        </trans-unit>
        <trans-unit id="c880ae2dae683608578f800194affe123789856b" translate="yes" xml:space="preserve">
          <source>CallStack</source>
          <target state="translated">CallStack</target>
        </trans-unit>
        <trans-unit id="c9f8d561f5ec54aa66007e2529422e176a53acd2" translate="yes" xml:space="preserve">
          <source>CallStack(&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&amp;lt;&lt;a href=&quot;stackitem&quot;&gt;StackItem&lt;/a&gt;&amp;gt;)</source>
          <target state="translated">CallStack(&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;&amp;lt;&lt;a href=&quot;stackitem&quot;&gt;StackItem&lt;/a&gt;&amp;gt;)</target>
        </trans-unit>
        <trans-unit id="a0bc8ce0d1d2f361201db1eb2e7d7e32eca82b7e" translate="yes" xml:space="preserve">
          <source>CallStack.callStack()</source>
          <target state="translated">CallStack.callStack()</target>
        </trans-unit>
        <trans-unit id="ddeef5a25f604af8b411b5223e702ff096f6b3a7" translate="yes" xml:space="preserve">
          <source>CallStack.exceptionStack()</source>
          <target state="translated">CallStack.exceptionStack()</target>
        </trans-unit>
        <trans-unit id="e6075cd61817306feb29872adf995835923f7517" translate="yes" xml:space="preserve">
          <source>CallStack.toString()</source>
          <target state="translated">CallStack.toString()</target>
        </trans-unit>
        <trans-unit id="c63d3e3fe82ed9380d6f7112f6d76f1b3c493fcf" translate="yes" xml:space="preserve">
          <source>CallStack.wrapCallSite</source>
          <target state="translated">CallStack.wrapCallSite</target>
        </trans-unit>
        <trans-unit id="e0e632cab22ba273ef09262e7bfee448c4bfe8ca" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;f&lt;/code&gt; on all elements of &lt;code&gt;it&lt;/code&gt;, in order.</source>
          <target state="translated">依次 &lt;code&gt;it&lt;/code&gt; 所有元素调用 &lt;code&gt;f&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c49fe77968ee45673f4efa23be0dfc68473f2e07" translate="yes" xml:space="preserve">
          <source>Calls function &lt;code&gt;f&lt;/code&gt; on each component of type &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">在类型 &lt;code&gt;t&lt;/code&gt; 的每个组件上调用函数 &lt;code&gt;f&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5da33a0c6fd99ae0f2abe4d009fc7aadfd4c3d36" translate="yes" xml:space="preserve">
          <source>Calls function &lt;code&gt;f&lt;/code&gt; on each sub-expression of &lt;code&gt;e&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;e&lt;/code&gt; 的每个子表达式上调用函数 &lt;code&gt;f&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8742b5ea8dfd233aa0923eca08768c934fe9358f" translate="yes" xml:space="preserve">
          <source>Calls the function &lt;code&gt;f&lt;/code&gt; for the substring of &lt;code&gt;s&lt;/code&gt; which &lt;code&gt;this&lt;/code&gt; EReg matches and replaces that substring with the result of &lt;code&gt;f&lt;/code&gt; call.</source>
          <target state="translated">调用函数 &lt;code&gt;f&lt;/code&gt; 为的子 &lt;code&gt;s&lt;/code&gt; 这 &lt;code&gt;this&lt;/code&gt; EREG比赛，替换用的结果串 &lt;code&gt;f&lt;/code&gt; 电话。</target>
        </trans-unit>
        <trans-unit id="8fd278273c9a36bf8c10338e90fc943c268d4169" translate="yes" xml:space="preserve">
          <source>Cancels &lt;code&gt;this&lt;/code&gt; Http request if &lt;code&gt;request&lt;/code&gt; has been called and a response has not yet been received.</source>
          <target state="translated">如果已调用 &lt;code&gt;request&lt;/code&gt; 且尚未收到响应，则取消 &lt;code&gt;this&lt;/code&gt; Http请求。</target>
        </trans-unit>
        <trans-unit id="9254c4bba00f5ff69304a7921d3118fcbac7e6b8" translate="yes" xml:space="preserve">
          <source>Case</source>
          <target state="translated">Case</target>
        </trans-unit>
        <trans-unit id="a7c51e67b60b0927212f25eb1aaefb172b8a7153" translate="yes" xml:space="preserve">
          <source>Catch</source>
          <target state="translated">Catch</target>
        </trans-unit>
        <trans-unit id="d7e97259c0eabfd36dc2138cc9ad6a9553089646" translate="yes" xml:space="preserve">
          <source>Change the default JS output by using a custom generator callback</source>
          <target state="translated">通过使用自定义的生成器回调来改变默认的JS输出。</target>
        </trans-unit>
        <trans-unit id="c8db7566da3101b43c65a0b55a52c15bad33921d" translate="yes" xml:space="preserve">
          <source>Character codes of the characters that will be escaped by &lt;code&gt;quoteWinArg(_, &lt;a href=&quot;../bool&quot;&gt;true&lt;/a&gt;)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;quoteWinArg(_, &lt;a href=&quot;../bool&quot;&gt;true&lt;/a&gt;)&lt;/code&gt; 将转义的字符的字符代码。</target>
        </trans-unit>
        <trans-unit id="63e936c93b7183cf9e6aaae523554b394f213cea" translate="yes" xml:space="preserve">
          <source>Character codes of the characters that will be escaped by &lt;code&gt;quoteWinArg(_, &lt;a href=&quot;bool&quot;&gt;true&lt;/a&gt;)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;quoteWinArg(_, &lt;a href=&quot;bool&quot;&gt;true&lt;/a&gt;)&lt;/code&gt; 将转义的字符的字符代码。</target>
        </trans-unit>
        <trans-unit id="5f14496c81f539ee05b1183b7b6a2c953f250248" translate="yes" xml:space="preserve">
          <source>Character offset on a line in a document (1-based).</source>
          <target state="translated">文件中某一行的字符偏移量(基于1)。</target>
        </trans-unit>
        <trans-unit id="4b5e84be0e45d1f4cc38276a4ec0e7fdea116bcf" translate="yes" xml:space="preserve">
          <source>Check</source>
          <target state="translated">Check</target>
        </trans-unit>
        <trans-unit id="d380da0f8bc4e6f54a3d21d3863a97473d98f6cd" translate="yes" xml:space="preserve">
          <source>Check if current display position is within &lt;code&gt;pos&lt;/code&gt;.</source>
          <target state="translated">检查当前显示位置是否在 &lt;code&gt;pos&lt;/code&gt; 内。</target>
        </trans-unit>
        <trans-unit id="532ee360a8ec3c2584c6b03ded1c7170a0b2b66f" translate="yes" xml:space="preserve">
          <source>Check the existence of a sub node with the given name.</source>
          <target state="translated">检查给定名称的子节点是否存在。</target>
        </trans-unit>
        <trans-unit id="f1f5b0081ce85f9a24f2dbc916f0c2b47d8e9641" translate="yes" xml:space="preserve">
          <source>Check the existence of an attribute with the given name.</source>
          <target state="translated">检查是否存在给定名称的属性。</target>
        </trans-unit>
        <trans-unit id="f28c072a8181f8b4e3940b65b64090284c9ca6ef" translate="yes" xml:space="preserve">
          <source>Checks if object &lt;code&gt;value&lt;/code&gt; is an instance of class &lt;code&gt;c&lt;/code&gt;.</source>
          <target state="translated">检查对象 &lt;code&gt;value&lt;/code&gt; 是否是类 &lt;code&gt;c&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="84cb590a423fefa961df91b72203938789bf27d9" translate="yes" xml:space="preserve">
          <source>Checks if object &lt;code&gt;value&lt;/code&gt; is an instance of class or interface &lt;code&gt;c&lt;/code&gt;.</source>
          <target state="translated">检查对象 &lt;code&gt;value&lt;/code&gt; 是类 &lt;code&gt;c&lt;/code&gt; 还是接口c的实例。</target>
        </trans-unit>
        <trans-unit id="e8a2bfff67e7af93d178b077696873ec520f0b24" translate="yes" xml:space="preserve">
          <source>Checks if the index of enum instance &lt;code&gt;v&lt;/code&gt; is set.</source>
          <target state="translated">检查是否设置了枚举实例 &lt;code&gt;v&lt;/code&gt; 的索引。</target>
        </trans-unit>
        <trans-unit id="41ff354b2b330bd1f8a0587675e43cb32a731f33" translate="yes" xml:space="preserve">
          <source>Class</source>
          <target state="translated">Class</target>
        </trans-unit>
        <trans-unit id="1b5e53adc82e88819fa087d556334a47828eab9a" translate="yes" xml:space="preserve">
          <source>Class&amp;lt;T&amp;gt;</source>
          <target state="translated">Class&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="bf2ca85e940afd626184b2e277e102890bc7bbe3" translate="yes" xml:space="preserve">
          <source>ClassField</source>
          <target state="translated">ClassField</target>
        </trans-unit>
        <trans-unit id="bef696f4bd82b4e01a510163a5ae95ec1caf1d0e" translate="yes" xml:space="preserve">
          <source>ClassFieldOccurrence&amp;lt;T&amp;gt;</source>
          <target state="translated">ClassFieldOccurrence&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="b401929d055ebdfafe3a18155b120b824740ffc4" translate="yes" xml:space="preserve">
          <source>ClassFieldOrigin&amp;lt;T&amp;gt;</source>
          <target state="translated">ClassFieldOrigin&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="7f8e54d76904c5dfadc2e48ffa3e2a859d189466" translate="yes" xml:space="preserve">
          <source>ClassFieldOriginKind&amp;lt;T&amp;gt;(&lt;a href=&quot;../../int&quot;&gt;Int&lt;/a&gt;)</source>
          <target state="translated">ClassFieldOriginKind&amp;lt;T&amp;gt;(&lt;a href=&quot;../../int&quot;&gt;Int&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="57366a33e7e45270482a0ed5c8eb7865c8158998" translate="yes" xml:space="preserve">
          <source>ClassKind</source>
          <target state="translated">ClassKind</target>
        </trans-unit>
        <trans-unit id="40017119699a319edb9bc8bc5de28669cdad44ae" translate="yes" xml:space="preserve">
          <source>ClassType</source>
          <target state="translated">ClassType</target>
        </trans-unit>
        <trans-unit id="3458c21b1c0444c6972a1e85fe3faffd20047616" translate="yes" xml:space="preserve">
          <source>Classdef</source>
          <target state="translated">Classdef</target>
        </trans-unit>
        <trans-unit id="dbd9671dd637be8da2a0c10c3b5880cf73c56a14" translate="yes" xml:space="preserve">
          <source>Classes are created from &lt;code&gt;&lt;a href=&quot;../type#createEmptyInstance&quot;&gt;Type.createEmptyInstance&lt;/a&gt;&lt;/code&gt;, which means their constructors are not called.</source>
          <target state="translated">从 &lt;code&gt;&lt;a href=&quot;../type#createEmptyInstance&quot;&gt;Type.createEmptyInstance&lt;/a&gt;&lt;/code&gt; 创建类，这意味着未调用其构造函数。</target>
        </trans-unit>
        <trans-unit id="37c99f14fd9c62130d1b42be673ab747d1eaa9f4" translate="yes" xml:space="preserve">
          <source>Clears cached results of file lookups</source>
          <target state="translated">清理缓存的文件查找结果。</target>
        </trans-unit>
        <trans-unit id="444b40b354ac4d5eeb29d8244a00860b9f515bc6" translate="yes" xml:space="preserve">
          <source>Clears the trace output.</source>
          <target state="translated">清除跟踪输出。</target>
        </trans-unit>
        <trans-unit id="53902d380a949520068fc287951039e91c717c71" translate="yes" xml:space="preserve">
          <source>Close the input source.</source>
          <target state="translated">关闭输入源。</target>
        </trans-unit>
        <trans-unit id="5fa8bd16f775a1a3fa6d232d6e29f4c77c438bb6" translate="yes" xml:space="preserve">
          <source>Close the output.</source>
          <target state="translated">关闭输出。</target>
        </trans-unit>
        <trans-unit id="45301181867740f18c533949b9b2a5ca605cbd80" translate="yes" xml:space="preserve">
          <source>Closure field access of field &lt;code&gt;cf&lt;/code&gt; on a class instance &lt;code&gt;c&lt;/code&gt; with type parameters &lt;code&gt;params&lt;/code&gt;.</source>
          <target state="translated">对类型参数为 &lt;code&gt;params&lt;/code&gt; 的类实例 &lt;code&gt;c&lt;/code&gt; 上的 &lt;code&gt;cf&lt;/code&gt; 字段进行封闭字段访问。</target>
        </trans-unit>
        <trans-unit id="bf419e38856b779cdcd550f54bc32124e0fef1c9" translate="yes" xml:space="preserve">
          <source>Code passed in from outside the macro cannot reference anything in its context, such as local variables. However, it is possible to reference static methods.</source>
          <target state="translated">从宏外部传入的代码不能引用其上下文中的任何东西,例如局部变量。但是,可以引用静态方法。</target>
        </trans-unit>
        <trans-unit id="ef948eb6b3a4b576dc0d13fb19ad29a2533643bd" translate="yes" xml:space="preserve">
          <source>Compare &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; in unsigned mode.</source>
          <target state="translated">在无符号模式下比较 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="82826c29053e45f4f214bf736e995650b4ea2d28" translate="yes" xml:space="preserve">
          <source>Compare two UTF8 strings, character by character.</source>
          <target state="translated">比较两个UTF8字符串,一个字符一个字符。</target>
        </trans-unit>
        <trans-unit id="d85ed1cde6b9f4f309a47994c1044a7f50ae98c1" translate="yes" xml:space="preserve">
          <source>Compares &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; in signed mode. Returns a negative value if &lt;code&gt;a &amp;lt; b&lt;/code&gt;, positive if &lt;code&gt;a &amp;gt; b&lt;/code&gt;, or 0 if &lt;code&gt;a == b&lt;/code&gt;.</source>
          <target state="translated">在签名模式下比较 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 。如果 &lt;code&gt;a &amp;lt; b&lt;/code&gt; ，则返回负值；如果 &lt;code&gt;a &amp;gt; b&lt;/code&gt; ，则返回正值；如果 &lt;code&gt;a == b&lt;/code&gt; ，则返回0 。</target>
        </trans-unit>
        <trans-unit id="ceba5e45b1b70931f9e648a776ae871c08f61c95" translate="yes" xml:space="preserve">
          <source>Compares &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; in unsigned mode. Returns a negative value if &lt;code&gt;a &amp;lt; b&lt;/code&gt;, positive if &lt;code&gt;a &amp;gt; b&lt;/code&gt;, or 0 if &lt;code&gt;a == b&lt;/code&gt;.</source>
          <target state="translated">在无符号模式下比较 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 。如果 &lt;code&gt;a &amp;lt; b&lt;/code&gt; ，则返回负值；如果 &lt;code&gt;a &amp;gt; b&lt;/code&gt; ，则返回正值；如果 &lt;code&gt;a == b&lt;/code&gt; ，则返回0 。</target>
        </trans-unit>
        <trans-unit id="6c966125cd499f20eb18119c763011073e9f43ad" translate="yes" xml:space="preserve">
          <source>Compares &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">比较 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0b85d85670f5f81ce9ff63378658f5966ecbb2ab" translate="yes" xml:space="preserve">
          <source>Compares the functions &lt;code&gt;f1&lt;/code&gt; and &lt;code&gt;f2&lt;/code&gt;.</source>
          <target state="translated">比较函数 &lt;code&gt;f1&lt;/code&gt; 和 &lt;code&gt;f2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e48e7ecc32cb7b3d8cdaa03a9d64d4beb592dd28" translate="yes" xml:space="preserve">
          <source>Compilation has completed at this point and cannot be influenced anymore. However, contextual information is still available.</source>
          <target state="translated">此时编纂工作已经完成,不能再受影响。但是,背景资料仍可利用。</target>
        </trans-unit>
        <trans-unit id="512d261beae51e0f32f684d5bc45d45b94286998" translate="yes" xml:space="preserve">
          <source>Compilation server : when using the compilation server, the resource is bound to the Haxe module which calls the macro, so it will be included again if that module is reused. If this resource concerns several modules, prefix its name with a $ sign, this will bind it to the macro module instead.</source>
          <target state="translated">编译服务器:当使用编译服务器时,该资源会绑定到调用宏的Haxe模块上,所以如果该模块被重用,它将再次被包含。如果该资源涉及多个模块,请在其名称前加上$符号,这样就会将其绑定到宏模块上。</target>
        </trans-unit>
        <trans-unit id="a64be4505a029a699cbc4bb6e4dc6fb4480e69f0" translate="yes" xml:space="preserve">
          <source>Compilation server : when using the compilation server, the resource is bound to the Haxe module which calls the macro, so it will be included again if that module is reused. If this resource concerns several modules, prefix its name with a &lt;code&gt;$&lt;/code&gt; sign, this will bind it to the macro module instead.</source>
          <target state="translated">编译服务器：使用编译服务器时，资源绑定到调用宏的Haxe模块，因此，如果该模块被重用，它将再次被包含。如果此资源涉及多个模块，请在其名称前加上 &lt;code&gt;$&lt;/code&gt; 符号，这会将其绑定到宏模块。</target>
        </trans-unit>
        <trans-unit id="d605840a202b8c34d8518239d7576fd3de88fe54" translate="yes" xml:space="preserve">
          <source>CompilationServer</source>
          <target state="translated">CompilationServer</target>
        </trans-unit>
        <trans-unit id="341a20e237ff5c4b89204a3d4d8c8af5f8aa63bb" translate="yes" xml:space="preserve">
          <source>Compiler</source>
          <target state="translated">Compiler</target>
        </trans-unit>
        <trans-unit id="bcf0ebb2850c5203e3ec5b166abdcd13d72f133f" translate="yes" xml:space="preserve">
          <source>Compiler directive values are set using the &lt;code&gt;-D key=value&lt;/code&gt; command line parameter, or by calling &lt;code&gt;&lt;a href=&quot;compiler#define&quot;&gt;haxe.macro.Compiler.define&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;-D key=value&lt;/code&gt; 命令行参数或调用 &lt;code&gt;&lt;a href=&quot;compiler#define&quot;&gt;haxe.macro.Compiler.define&lt;/a&gt;&lt;/code&gt; 可以设置编译器指令值。</target>
        </trans-unit>
        <trans-unit id="3341be38c4068f766b5622be97ce7f4722383458" translate="yes" xml:space="preserve">
          <source>Compiler directives are set using the &lt;code&gt;-D&lt;/code&gt; command line parameter, or by calling &lt;code&gt;&lt;a href=&quot;compiler#define&quot;&gt;haxe.macro.Compiler.define&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;-D&lt;/code&gt; 命令行参数或通过调用 &lt;code&gt;&lt;a href=&quot;compiler#define&quot;&gt;haxe.macro.Compiler.define&lt;/a&gt;&lt;/code&gt; 来设置编译器伪指令。</target>
        </trans-unit>
        <trans-unit id="dc3cc1d93891cd5611d7b6b3fd03f3d61df5ad81" translate="yes" xml:space="preserve">
          <source>Compiler flags are set using the &lt;code&gt;-D&lt;/code&gt; command line parameter, or by calling &lt;code&gt;&lt;a href=&quot;compiler#define&quot;&gt;haxe.macro.Compiler.define&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;-D&lt;/code&gt; 命令行参数或通过调用 &lt;code&gt;&lt;a href=&quot;compiler#define&quot;&gt;haxe.macro.Compiler.define&lt;/a&gt;&lt;/code&gt; 来设置编译器标志。</target>
        </trans-unit>
        <trans-unit id="129f935326c96a45188046d680630feb5e59055b" translate="yes" xml:space="preserve">
          <source>Compiler flags values are set using the &lt;code&gt;-D key=value&lt;/code&gt; command line parameter, or by calling &lt;code&gt;&lt;a href=&quot;compiler#define&quot;&gt;haxe.macro.Compiler.define&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;-D key=value&lt;/code&gt; 命令行参数或调用 &lt;code&gt;&lt;a href=&quot;compiler#define&quot;&gt;haxe.macro.Compiler.define&lt;/a&gt;&lt;/code&gt; 可以设置编译器标志值。</target>
        </trans-unit>
        <trans-unit id="301fd958646f44a394739603fbb695ea3b5ffc6c" translate="yes" xml:space="preserve">
          <source>Compiles only if the class specified by &lt;code&gt;c&lt;/code&gt; can be assigned to the type of &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">仅当可以将 &lt;code&gt;c&lt;/code&gt; 指定的类分配给 &lt;code&gt;value&lt;/code&gt; 的类型时才编译。</target>
        </trans-unit>
        <trans-unit id="7147383df539235762fc847b2218f64834dcba91" translate="yes" xml:space="preserve">
          <source>Compiles only if the type specified by &lt;code&gt;c&lt;/code&gt; can be assigned to the type of &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">仅当可以将 &lt;code&gt;c&lt;/code&gt; 指定的类型分配给 &lt;code&gt;value&lt;/code&gt; 的类型时才进行编译。</target>
        </trans-unit>
        <trans-unit id="2ff255684a2277f806fcebf3fe338ed27857f350" translate="yes" xml:space="preserve">
          <source>Completion</source>
          <target state="translated">Completion</target>
        </trans-unit>
        <trans-unit id="94ec060ba0981d32b96d9613d4d716d42b4a9f3d" translate="yes" xml:space="preserve">
          <source>CompletionItem Resolve</source>
          <target state="translated">完成项目解决</target>
        </trans-unit>
        <trans-unit id="7c069a18779f0d6bb6f90a81b535535dbf3f9584" translate="yes" xml:space="preserve">
          <source>CompletionItemResolveParams</source>
          <target state="translated">CompletionItemResolveParams</target>
        </trans-unit>
        <trans-unit id="d67d2757c347f94a0d458dd1925263d231252e60" translate="yes" xml:space="preserve">
          <source>CompletionItemResolveResult</source>
          <target state="translated">CompletionItemResolveResult</target>
        </trans-unit>
        <trans-unit id="6806aedb99aaf22ace125a63d48faf51e4e4176b" translate="yes" xml:space="preserve">
          <source>CompletionMode&amp;lt;T&amp;gt;</source>
          <target state="translated">CompletionMode&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="227a3aae96b43f6934e8e6417e54fb9349298498" translate="yes" xml:space="preserve">
          <source>CompletionModeKind&amp;lt;T&amp;gt;(&lt;a href=&quot;../../int&quot;&gt;Int&lt;/a&gt;)</source>
          <target state="translated">CompletionModeKind&amp;lt;T&amp;gt;(&lt;a href=&quot;../../int&quot;&gt;Int&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="4b6a4b82c498f334e6e6611b253c6b8a0f57ba5d" translate="yes" xml:space="preserve">
          <source>CompletionParams</source>
          <target state="translated">CompletionParams</target>
        </trans-unit>
        <trans-unit id="bc8353f1584673c338238b7c0786dab89baab71a" translate="yes" xml:space="preserve">
          <source>CompletionResponse&amp;lt;T1, T2&amp;gt;</source>
          <target state="translated">CompletionResponse&amp;lt;T1, T2&amp;gt;</target>
        </trans-unit>
        <trans-unit id="59ec4bd2cb5ce22cc1d11edc23c5fc9559cc3d7f" translate="yes" xml:space="preserve">
          <source>CompletionResult</source>
          <target state="translated">CompletionResult</target>
        </trans-unit>
        <trans-unit id="5b123a02b401bb7b9f2149191816f41189a4d6bd" translate="yes" xml:space="preserve">
          <source>ComplexType</source>
          <target state="translated">ComplexType</target>
        </trans-unit>
        <trans-unit id="c7d1fa080174a1f37766a75c0a2c31dd28cbe85a" translate="yes" xml:space="preserve">
          <source>ComplexTypeTools</source>
          <target state="translated">ComplexTypeTools</target>
        </trans-unit>
        <trans-unit id="f5e41c09282cf7acf9139207836dfa55d9dca006" translate="yes" xml:space="preserve">
          <source>Compress</source>
          <target state="translated">Compress</target>
        </trans-unit>
        <trans-unit id="ebc947312c7cb88c198dfda2e125c2151bc2cae8" translate="yes" xml:space="preserve">
          <source>Concatenate a list of iterables. The order of elements is preserved.</source>
          <target state="translated">并联一个可迭代的列表。保留元素的顺序。</target>
        </trans-unit>
        <trans-unit id="7e753af33c5e8b0b810748b18ff7f60b83d5a7d0" translate="yes" xml:space="preserve">
          <source>Concatenate a list of lists.</source>
          <target state="translated">连接一个列表。</target>
        </trans-unit>
        <trans-unit id="726c5ace982d2a4397beb31f3bcf581f589883ad" translate="yes" xml:space="preserve">
          <source>Concatenates &lt;code&gt;c&lt;/code&gt; to &lt;code&gt;s&lt;/code&gt; until &lt;code&gt;s.length&lt;/code&gt; is at least &lt;code&gt;l&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;c&lt;/code&gt; 连接到 &lt;code&gt;s&lt;/code&gt; ,直到 &lt;code&gt;s.length&lt;/code&gt; 至少为 &lt;code&gt;l&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8851142da56fd885ce668a165b33fee7003e858d" translate="yes" xml:space="preserve">
          <source>Config</source>
          <target state="translated">Config</target>
        </trans-unit>
        <trans-unit id="1b7a53b447e599d621177ffc344e5b708827b7e7" translate="yes" xml:space="preserve">
          <source>ConfigureParams</source>
          <target state="translated">ConfigureParams</target>
        </trans-unit>
        <trans-unit id="5b30e5a630436b85386f54cb51cfe39fe83d60b7" translate="yes" xml:space="preserve">
          <source>ConfigurePrintParams</source>
          <target state="translated">ConfigurePrintParams</target>
        </trans-unit>
        <trans-unit id="6512ee1541e9a6c52d5bf7cf465332e8df25ea3c" translate="yes" xml:space="preserve">
          <source>Connection</source>
          <target state="translated">Connection</target>
        </trans-unit>
        <trans-unit id="733fd2b4c4e1bca4c7d0e3c2e1c341bcd1d34269" translate="yes" xml:space="preserve">
          <source>Constant</source>
          <target state="translated">Constant</target>
        </trans-unit>
        <trans-unit id="76ccc41ad08f9e76e8a7e4f261c218ae3a1f48ba" translate="yes" xml:space="preserve">
          <source>Construct an Int64 from two 32-bit words &lt;code&gt;high&lt;/code&gt; and &lt;code&gt;low&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;high&lt;/code&gt; 和 &lt;code&gt;low&lt;/code&gt; 两个32位字构造一个Int64 。</target>
        </trans-unit>
        <trans-unit id="9757c67e352fb58ac083c67ee63d3f4adb217b24" translate="yes" xml:space="preserve">
          <source>Constructible</source>
          <target state="translated">Constructible</target>
        </trans-unit>
        <trans-unit id="b84b50fd11a19e4f09e97bdfe8a5374a665311af" translate="yes" xml:space="preserve">
          <source>Constructible&amp;lt;T&amp;gt;(&lt;a href=&quot;../dynamic&quot;&gt;Dynamic&lt;/a&gt;)</source>
          <target state="translated">Constructible&amp;lt;T&amp;gt;(&lt;a href=&quot;../dynamic&quot;&gt;Dynamic&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="edb7861f190be64ab7c7a39786a00727bb16847d" translate="yes" xml:space="preserve">
          <source>Constructor</source>
          <target state="translated">Constructor</target>
        </trans-unit>
        <trans-unit id="45269571e115cb82aff0a2f51a5cd228001bba19" translate="yes" xml:space="preserve">
          <source>Contains an exception, which was passed to &lt;code&gt;previous&lt;/code&gt; constructor argument.</source>
          <target state="translated">包含一个异常，该异常已传递给 &lt;code&gt;previous&lt;/code&gt; 构造函数参数。</target>
        </trans-unit>
        <trans-unit id="702b9a1520640dffcacf6e327f0550252e735066" translate="yes" xml:space="preserve">
          <source>Contains type and equality checks functionalities for RTTI.</source>
          <target state="translated">包含RTTI的类型和平等检查功能。</target>
        </trans-unit>
        <trans-unit id="cc11b3a28fa30ae6d3d3ad1438824cbd5224ba5c" translate="yes" xml:space="preserve">
          <source>Context</source>
          <target state="translated">Context</target>
        </trans-unit>
        <trans-unit id="8a2c7c4eb03ca798cf6ab407f31278e3688eea7c" translate="yes" xml:space="preserve">
          <source>Context provides an API for macro programming.</source>
          <target state="translated">Context为宏编程提供了一个API。</target>
        </trans-unit>
        <trans-unit id="67108142c7f691bdfdb3f45d4959a3f0c96fcae7" translate="yes" xml:space="preserve">
          <source>ContextAll</source>
          <target state="translated">ContextAll</target>
        </trans-unit>
        <trans-unit id="a4c63664e5b124dd330df60e13ec1250b8be6c37" translate="yes" xml:space="preserve">
          <source>ContextOptions(&lt;a href=&quot;../../int&quot;&gt;Int&lt;/a&gt;)</source>
          <target state="translated">ContextOptions(&lt;a href=&quot;../../int&quot;&gt;Int&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="270ee2fc8bb20e020dbb4435fc837b5e8c1f7f1a" translate="yes" xml:space="preserve">
          <source>ContextParams</source>
          <target state="translated">ContextParams</target>
        </trans-unit>
        <trans-unit id="cda9efaeaa76eb5993efebb8174bd5be2778cd59" translate="yes" xml:space="preserve">
          <source>Convenience function which can be used as a static extension.</source>
          <target state="translated">可以作为静态扩展的方便函数。</target>
        </trans-unit>
        <trans-unit id="03663ad3c645cab152115db13d1e91a582c21142" translate="yes" xml:space="preserve">
          <source>Convert &lt;code&gt;&lt;a href=&quot;../../xml&quot;&gt;Xml&lt;/a&gt;&lt;/code&gt; to string representation.</source>
          <target state="translated">将 &lt;code&gt;&lt;a href=&quot;../../xml&quot;&gt;Xml&lt;/a&gt;&lt;/code&gt; 转换为字符串表示形式。</target>
        </trans-unit>
        <trans-unit id="f15a8062f93df66ce5c598dff88f5f2d810931ec" translate="yes" xml:space="preserve">
          <source>Convert a integer bitflag into a typed one (this is a no-op, it does not have any impact on speed).</source>
          <target state="translated">将一个整数位标志转换为一个类型化的位标志(这是一个无操作,它对速度没有任何影响)。</target>
        </trans-unit>
        <trans-unit id="9c9112cb3062b0960048204b9df76b98d4abdf98" translate="yes" xml:space="preserve">
          <source>Convert the typed bitflag into the corresponding int value (this is a no-op, it doesn't have any impact on speed).</source>
          <target state="translated">将输入的bitflag转换为相应的int值(这是一个无操作,它对速度没有任何影响)。</target>
        </trans-unit>
        <trans-unit id="b0570b573608a7fbcd62fc501718d51c09b498be" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; to an &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;, rounded towards 0.</source>
          <target state="translated">一个转换 &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 到 &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; ，向0舍入。</target>
        </trans-unit>
        <trans-unit id="e43e29d0d44fcbcd7c2bbcf28f1d56bbb8f6caad" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;&lt;a href=&quot;position#Position&quot;&gt;haxe.macro.Position&lt;/a&gt;&lt;/code&gt; to a &lt;code&gt;&lt;a href=&quot;position#Location&quot;&gt;haxe.display.Position.Location&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;&lt;a href=&quot;position#Position&quot;&gt;haxe.macro.Position&lt;/a&gt;&lt;/code&gt; 转换为 &lt;code&gt;&lt;a href=&quot;position#Location&quot;&gt;haxe.display.Position.Location&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="843920a499eb24700d16d23e1c7bce0757d0afb3" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; to a &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 转换为 &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0cb0a7cdfed9d22cc113b2e37394ec486770d005" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; to an &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">转换一个 &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 到一个 &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="781095d4763524aedd833850fc92d422ba4f70a9" translate="yes" xml:space="preserve">
          <source>Converts a number of days to a timestamp.</source>
          <target state="translated">将天数转换为时间戳。</target>
        </trans-unit>
        <trans-unit id="41e2006d37d014c10852385d0330e50b3d8513d2" translate="yes" xml:space="preserve">
          <source>Converts a number of hours to a timestamp.</source>
          <target state="translated">将小时数转换为时间戳。</target>
        </trans-unit>
        <trans-unit id="efeb3b5c296af304d0c6bf091a6dc70682535675" translate="yes" xml:space="preserve">
          <source>Converts a number of minutes to a timestamp.</source>
          <target state="translated">将分钟数转换为时间戳。</target>
        </trans-unit>
        <trans-unit id="f72992198eec7ab48e8e6da617898e0eaaff61b4" translate="yes" xml:space="preserve">
          <source>Converts a number of seconds to a timestamp.</source>
          <target state="translated">将秒数转换为时间戳。</target>
        </trans-unit>
        <trans-unit id="98cf9cfde7f1622fb735581937994ccf242dbe88" translate="yes" xml:space="preserve">
          <source>Converts a path given by package &lt;code&gt;pack&lt;/code&gt; and name &lt;code&gt;name&lt;/code&gt; to a &lt;code&gt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; separated by dots.</source>
          <target state="translated">将由给定包的路径 &lt;code&gt;pack&lt;/code&gt; 和名称 &lt;code&gt;name&lt;/code&gt; 到一个 &lt;code&gt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 分离由点。</target>
        </trans-unit>
        <trans-unit id="8f0dd215a490541e4a35766e876a3151d47c1231" translate="yes" xml:space="preserve">
          <source>Converts an array of Strings &lt;code&gt;sl&lt;/code&gt; to a field expression.</source>
          <target state="translated">将String &lt;code&gt;sl&lt;/code&gt; 数组转换为字段表达式。</target>
        </trans-unit>
        <trans-unit id="34a4cd87ae8073968557f8d4c1fc5ba9771e247b" translate="yes" xml:space="preserve">
          <source>Converts any value to a String.</source>
          <target state="translated">将任何值转换为一个字符串。</target>
        </trans-unit>
        <trans-unit id="5bfe5b7b5be3b37e87d00be68c614d06e7c368c0" translate="yes" xml:space="preserve">
          <source>Converts expression &lt;code&gt;e&lt;/code&gt; to a human-readable String representation.</source>
          <target state="translated">将表达式 &lt;code&gt;e&lt;/code&gt; 转换为人类可读的String表示形式。</target>
        </trans-unit>
        <trans-unit id="4bdcfe9a84567d99a93e468085ae6905e4f97ef8" translate="yes" xml:space="preserve">
          <source>Converts the given hexadecimal &lt;code&gt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;bytes#Bytes&quot;&gt;Bytes&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;s&lt;/code&gt; must be a string of even length consisting only of hexadecimal digits. For example: &lt;code&gt;&quot;0FDA14058916052309&quot;&lt;/code&gt;.</source>
          <target state="translated">将给定的十六进制 &lt;code&gt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 转换为 &lt;code&gt;&lt;a href=&quot;bytes#Bytes&quot;&gt;Bytes&lt;/a&gt;&lt;/code&gt; 。 &lt;code&gt;s&lt;/code&gt; 必须是仅由十六进制数字组成的偶数长度的字符串。例如： &lt;code&gt;&quot;0FDA14058916052309&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e71d969b43edb430381c19cf1d4296eb7bc0084c" translate="yes" xml:space="preserve">
          <source>Converts type &lt;code&gt;c&lt;/code&gt; to a human-readable &lt;code&gt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; representation.</source>
          <target state="translated">将类型 &lt;code&gt;c&lt;/code&gt; 转换为人类可读的 &lt;code&gt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 表示形式。</target>
        </trans-unit>
        <trans-unit id="480c9ebfc28024d3ff24c332e5cacd6384b22410" translate="yes" xml:space="preserve">
          <source>Converts type &lt;code&gt;t&lt;/code&gt; to a human-readable String representation.</source>
          <target state="translated">将类型 &lt;code&gt;t&lt;/code&gt; 转换为人类可读的String表示形式。</target>
        </trans-unit>
        <trans-unit id="47703e9ce8c06b06bd532a3d41609e483605668f" translate="yes" xml:space="preserve">
          <source>Copies &lt;code&gt;len&lt;/code&gt; bytes from &lt;code&gt;src&lt;/code&gt; into this instance.</source>
          <target state="translated">将 &lt;code&gt;len&lt;/code&gt; 个字节从 &lt;code&gt;src&lt;/code&gt; 复制到此实例中。</target>
        </trans-unit>
        <trans-unit id="672824061113f85f14b4e66f3464f72a446e84f1" translate="yes" xml:space="preserve">
          <source>Copies &lt;code&gt;length&lt;/code&gt; of elements from &lt;code&gt;src&lt;/code&gt; Vector, beginning at &lt;code&gt;srcPos&lt;/code&gt; to &lt;code&gt;dest&lt;/code&gt; Vector, beginning at &lt;code&gt;destPos&lt;/code&gt;</source>
          <target state="translated">副本 &lt;code&gt;length&lt;/code&gt; 从元素 &lt;code&gt;src&lt;/code&gt; 矢量，在开始 &lt;code&gt;srcPos&lt;/code&gt; 到 &lt;code&gt;dest&lt;/code&gt; 载体，在开始 &lt;code&gt;destPos&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a131ddcba168f57369f0e71a3ec6eb4a8ee5ca46" translate="yes" xml:space="preserve">
          <source>Copies the fields of structure &lt;code&gt;o&lt;/code&gt;.</source>
          <target state="translated">复制结构 &lt;code&gt;o&lt;/code&gt; 的字段。</target>
        </trans-unit>
        <trans-unit id="0220ef140e692ecd2d151d5ed1f728a3b4b17cca" translate="yes" xml:space="preserve">
          <source>Crc32</source>
          <target state="translated">Crc32</target>
        </trans-unit>
        <trans-unit id="effa56c80b668ff281c2ce8e4560a7096f0e95a7" translate="yes" xml:space="preserve">
          <source>Create &lt;code&gt;&lt;a href=&quot;int64#Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; from given float.</source>
          <target state="translated">从给定的float 创建 &lt;code&gt;&lt;a href=&quot;int64#Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7e2c89bc7b260377410f7024552165a16793e058" translate="yes" xml:space="preserve">
          <source>Create &lt;code&gt;&lt;a href=&quot;int64#Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; from given string.</source>
          <target state="translated">从给定的字符串创建 &lt;code&gt;&lt;a href=&quot;int64#Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a88bcd500220eb2fdc1a37e8c51a20f0429a90df" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;&lt;a href=&quot;arrayiterator#ArrayIterator&quot;&gt;ArrayIterator&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">创建一个新的 &lt;code&gt;&lt;a href=&quot;arrayiterator#ArrayIterator&quot;&gt;ArrayIterator&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="60f813224f34502da2176bd572e3a9262bf1a84d" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;&lt;a href=&quot;stringiterator#StringIterator&quot;&gt;StringIterator&lt;/a&gt;&lt;/code&gt; over String &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">创建一个新的 &lt;code&gt;&lt;a href=&quot;stringiterator#StringIterator&quot;&gt;StringIterator&lt;/a&gt;&lt;/code&gt; 在字符串 &lt;code&gt;s&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="969f731b23a2c1af9a39e2ac44d66afd15cb0585" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;&lt;a href=&quot;stringiteratorunicode#StringIteratorUnicode&quot;&gt;StringIteratorUnicode&lt;/a&gt;&lt;/code&gt; over String &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">创建一个新的 &lt;code&gt;&lt;a href=&quot;stringiteratorunicode#StringIteratorUnicode&quot;&gt;StringIteratorUnicode&lt;/a&gt;&lt;/code&gt; 在字符串 &lt;code&gt;s&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e1db595f266a17de97ba256f71a371ff5b0a20dc" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;&lt;a href=&quot;stringkeyvalueiterator#StringKeyValueIterator&quot;&gt;StringKeyValueIterator&lt;/a&gt;&lt;/code&gt; over String &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">创建一个新的 &lt;code&gt;&lt;a href=&quot;stringkeyvalueiterator#StringKeyValueIterator&quot;&gt;StringKeyValueIterator&lt;/a&gt;&lt;/code&gt; 在字符串 &lt;code&gt;s&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a6059b17e9b4f809cc4c6a67a932be314b571da0" translate="yes" xml:space="preserve">
          <source>Create a new &lt;code&gt;&lt;a href=&quot;stringkeyvalueiteratorunicode#StringKeyValueIteratorUnicode&quot;&gt;StringKeyValueIteratorUnicode&lt;/a&gt;&lt;/code&gt; over String &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">创建一个新的 &lt;code&gt;&lt;a href=&quot;stringkeyvalueiteratorunicode#StringKeyValueIteratorUnicode&quot;&gt;StringKeyValueIteratorUnicode&lt;/a&gt;&lt;/code&gt; 在字符串 &lt;code&gt;s&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bb523b7beec9fe13b070c011d548253a5e0e98c3" translate="yes" xml:space="preserve">
          <source>Create a new Exception instance.</source>
          <target state="translated">创建一个新的Exception实例。</target>
        </trans-unit>
        <trans-unit id="cf5a7968027790597e6992338d2d297cce5f0a4d" translate="yes" xml:space="preserve">
          <source>Creates a Date from the formatted string &lt;code&gt;s&lt;/code&gt;. The following formats are accepted by the function:</source>
          <target state="translated">从格式化的字符串 &lt;code&gt;s&lt;/code&gt; 创建日期。该函数接受以下格式：</target>
        </trans-unit>
        <trans-unit id="acc2d34af8c802eabe4584b8733528b6caccb099" translate="yes" xml:space="preserve">
          <source>Creates a Date from the timestamp (in milliseconds) &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">从时间戳（以毫秒为单位） &lt;code&gt;t&lt;/code&gt; 创建一个Date 。</target>
        </trans-unit>
        <trans-unit id="1d6c6c91d5781ad0fa8f98cf3911187b18b6d3be" translate="yes" xml:space="preserve">
          <source>Creates a List form Iterable &lt;code&gt;it&lt;/code&gt;.</source>
          <target state="translated">创建列表的形式可迭代 &lt;code&gt;it&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ef1ece11e7bdbfe227d937ed896673b6c522a522" translate="yes" xml:space="preserve">
          <source>Creates a MD5 of a String.</source>
          <target state="translated">创建一个字符串的MD5。</target>
        </trans-unit>
        <trans-unit id="7c259739c5a285c0c944cc7ed8508691511d4c60" translate="yes" xml:space="preserve">
          <source>Creates a Sha1 of a String.</source>
          <target state="translated">创建一个字符串的Sha1。</target>
        </trans-unit>
        <trans-unit id="e4d8b101797679ad29aee1e2aa6f39b8d81b746a" translate="yes" xml:space="preserve">
          <source>Creates a Sha224 of a String.</source>
          <target state="translated">创建一个字符串的Sha224。</target>
        </trans-unit>
        <trans-unit id="ece122feb876dddc4c6715a17a8e7e312e5bab34" translate="yes" xml:space="preserve">
          <source>Creates a Sha256 of a String.</source>
          <target state="translated">创建一个字符串的Sha256。</target>
        </trans-unit>
        <trans-unit id="c7b7ec697eb8bdd45bb95340741c311777019a90" translate="yes" xml:space="preserve">
          <source>Creates a copy from a given String.</source>
          <target state="translated">从给定的字符串中创建一个副本。</target>
        </trans-unit>
        <trans-unit id="f571473cf787b75dc1b8bb453dc9c0b538dca842" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;&lt;a href=&quot;path#Path&quot;&gt;Path&lt;/a&gt;&lt;/code&gt; instance by parsing &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">通过解析 &lt;code&gt;path&lt;/code&gt; 创建一个新的 &lt;code&gt;&lt;a href=&quot;path#Path&quot;&gt;Path&lt;/a&gt;&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="29943792594ce617283765503f1f8c2974cbf1ff" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;&lt;a href=&quot;template#Template&quot;&gt;Template&lt;/a&gt;&lt;/code&gt; instance from &lt;code&gt;str&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;str&lt;/code&gt; 创建一个新的 &lt;code&gt;&lt;a href=&quot;template#Template&quot;&gt;Template&lt;/a&gt;&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="4a035f6375715c35de9de33a2a402493176cd53c" translate="yes" xml:space="preserve">
          <source>Creates a new Array by applying function &lt;code&gt;f&lt;/code&gt; to all elements of &lt;code&gt;it&lt;/code&gt;. The order of elements is preserved. If &lt;code&gt;f&lt;/code&gt; is null, the result is unspecified.</source>
          <target state="translated">通过将函数 &lt;code&gt;f&lt;/code&gt; 应用于 &lt;code&gt;it&lt;/code&gt; 所有元素来创建一个新的Array 。元素的顺序被保留。如果 &lt;code&gt;f&lt;/code&gt; 为null，则结果不确定。</target>
        </trans-unit>
        <trans-unit id="c61f18ac112620bc0812697f75d6b6ee2068b214" translate="yes" xml:space="preserve">
          <source>Creates a new Array by applying function &lt;code&gt;f&lt;/code&gt; to all elements of &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">通过将函数 &lt;code&gt;f&lt;/code&gt; 应用于 &lt;code&gt;this&lt;/code&gt; 的所有元素来创建新的Array 。</target>
        </trans-unit>
        <trans-unit id="f6c72a6e124ffb38a45ee9021065210f6fd315cc" translate="yes" xml:space="preserve">
          <source>Creates a new Array, copy the content from the Vector to it, and returns it.</source>
          <target state="translated">创建一个新的数组,将Vector中的内容复制到该数组中,并将其返回。</target>
        </trans-unit>
        <trans-unit id="ce0f7d4af52b7c6a7411e9dd7ae9c2fde13a3f22" translate="yes" xml:space="preserve">
          <source>Creates a new Array.</source>
          <target state="translated">创建一个新的阵列。</target>
        </trans-unit>
        <trans-unit id="115531d1237928e7ed0d18f023d0e147f7282597" translate="yes" xml:space="preserve">
          <source>Creates a new BalancedTree, which is initially empty.</source>
          <target state="translated">创建一个新的BalancedTree,它最初是空的。</target>
        </trans-unit>
        <trans-unit id="62164939ae5665e9edd8ac77b06722984386700d" translate="yes" xml:space="preserve">
          <source>Creates a new HashMap.</source>
          <target state="translated">创建一个新的HashMap。</target>
        </trans-unit>
        <trans-unit id="9b1eddb06c104a4842d884bac8e898eda42a115e" translate="yes" xml:space="preserve">
          <source>Creates a new Http instance with &lt;code&gt;url&lt;/code&gt; as parameter.</source>
          <target state="translated">使用 &lt;code&gt;url&lt;/code&gt; 作为参数创建一个新的Http实例。</target>
        </trans-unit>
        <trans-unit id="eb105cbcce8add46dae026a6c18f4ed91ca8daa4" translate="yes" xml:space="preserve">
          <source>Creates a new IntMap.</source>
          <target state="translated">创建一个新的IntMap。</target>
        </trans-unit>
        <trans-unit id="a7e512f3ef0053bbda96845c440229dfd0f11151" translate="yes" xml:space="preserve">
          <source>Creates a new List by applying function &lt;code&gt;f&lt;/code&gt; to all elements of &lt;code&gt;it&lt;/code&gt;.</source>
          <target state="translated">创建应用功能的新名单 &lt;code&gt;f&lt;/code&gt; 到的所有元素 &lt;code&gt;it&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9f1ea235be54a4b30a41c5c03946b98334f92e1b" translate="yes" xml:space="preserve">
          <source>Creates a new Map.</source>
          <target state="translated">创建一个新的地图。</target>
        </trans-unit>
        <trans-unit id="17dd94b9ae6ebb3d05f15e604c92a726f51f0d43" translate="yes" xml:space="preserve">
          <source>Creates a new ObjectMap.</source>
          <target state="translated">创建一个新的ObjectMap。</target>
        </trans-unit>
        <trans-unit id="690af22bb241ea8a631340a9916a33c9fcc04fe4" translate="yes" xml:space="preserve">
          <source>Creates a new Path instance by parsing &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">通过解析 &lt;code&gt;path&lt;/code&gt; 创建一个新的Path实例。</target>
        </trans-unit>
        <trans-unit id="8ec1104536b087466d74563e737bb92e0efcb167" translate="yes" xml:space="preserve">
          <source>Creates a new Serializer instance.</source>
          <target state="translated">创建一个新的Serializer实例。</target>
        </trans-unit>
        <trans-unit id="bf841d51d0c22a2de39a41df3eff23a2058af893" translate="yes" xml:space="preserve">
          <source>Creates a new StringBuf instance.</source>
          <target state="translated">创建一个新的StringBuf实例。</target>
        </trans-unit>
        <trans-unit id="51f91400f5902dac5d8051c80d0717c11f7e3252" translate="yes" xml:space="preserve">
          <source>Creates a new StringMap.</source>
          <target state="translated">创建一个新的StringMap。</target>
        </trans-unit>
        <trans-unit id="83807621c9e7d22c7bf845f3ae6326b2a32eedbc" translate="yes" xml:space="preserve">
          <source>Creates a new Template instance from &lt;code&gt;str&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;str&lt;/code&gt; 创建一个新的Template实例。</target>
        </trans-unit>
        <trans-unit id="6e7bf4317839f24a6685d0936c5a88caff9c1182" translate="yes" xml:space="preserve">
          <source>Creates a new Unserializer instance, with its internal buffer initialized to &lt;code&gt;buf&lt;/code&gt;.</source>
          <target state="translated">创建一个新的Unserializer实例，并将其内部缓冲区初始化为 &lt;code&gt;buf&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="92519ab0b2eb2a38b8ef1707378367ce4b647c86" translate="yes" xml:space="preserve">
          <source>Creates a new Vector by applying function &lt;code&gt;f&lt;/code&gt; to all elements of &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">通过将函数 &lt;code&gt;f&lt;/code&gt; 应用于 &lt;code&gt;this&lt;/code&gt; 的所有元素来创建一个新的Vector 。</target>
        </trans-unit>
        <trans-unit id="0d26dd7c7ae874a68f3a676c31c715acc2a93a77" translate="yes" xml:space="preserve">
          <source>Creates a new Vector by copying the elements of &lt;code&gt;array&lt;/code&gt;.</source>
          <target state="translated">通过复制 &lt;code&gt;array&lt;/code&gt; 的元素创建一个新的Vector 。</target>
        </trans-unit>
        <trans-unit id="44c714a95de27ddc3255769c7a275062c98c1d6c" translate="yes" xml:space="preserve">
          <source>Creates a new Vector of length &lt;code&gt;length&lt;/code&gt;.</source>
          <target state="translated">创建一个新的Vector，它的长度为 &lt;code&gt;length&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8eb7a28c5a9535258450b3456b83d0c7f3adad1f" translate="yes" xml:space="preserve">
          <source>Creates a new WeakMap.</source>
          <target state="translated">创建一个新的WeakMap。</target>
        </trans-unit>
        <trans-unit id="37fd144f4bd06c72320d3b1ed175f23721f34678" translate="yes" xml:space="preserve">
          <source>Creates a new date object from the given arguments.</source>
          <target state="translated">从给定的参数中创建一个新的日期对象。</target>
        </trans-unit>
        <trans-unit id="6252fa98b1c0f08fa84cf6cce91a8aba5b49b615" translate="yes" xml:space="preserve">
          <source>Creates a new empty GenericStack.</source>
          <target state="translated">创建一个新的空的GenericStack。</target>
        </trans-unit>
        <trans-unit id="a170faa5db873f6672e4871d09928084bfa6a35e" translate="yes" xml:space="preserve">
          <source>Creates a new empty list.</source>
          <target state="translated">创建一个新的空列表。</target>
        </trans-unit>
        <trans-unit id="33bfaed53f594009b867956a2d41e654033d22b0" translate="yes" xml:space="preserve">
          <source>Creates a new regular expression with pattern &lt;code&gt;r&lt;/code&gt; and modifiers &lt;code&gt;opt&lt;/code&gt;.</source>
          <target state="translated">使用模式 &lt;code&gt;r&lt;/code&gt; 和修饰符 &lt;code&gt;opt&lt;/code&gt; 创建一个新的正则表达式。</target>
        </trans-unit>
        <trans-unit id="d355b40e27165f24415aadbc2b1762470e2cc29d" translate="yes" xml:space="preserve">
          <source>Creates a new structure.</source>
          <target state="translated">创建一个新的结构。</target>
        </trans-unit>
        <trans-unit id="75aeaa61b633a5dac27a033e8af573c2e9a22617" translate="yes" xml:space="preserve">
          <source>Creates a new timer that will run every &lt;code&gt;time_ms&lt;/code&gt; milliseconds.</source>
          <target state="translated">创建一个新计时器，它将每隔 &lt;code&gt;time_ms&lt;/code&gt; 毫秒运行一次。</target>
        </trans-unit>
        <trans-unit id="db4baf7da6d37f858dd6f1b59cfc3340f91da4fa" translate="yes" xml:space="preserve">
          <source>Creates a node of the given type.</source>
          <target state="translated">创建一个指定类型的节点。</target>
        </trans-unit>
        <trans-unit id="484c0c2ee9a785c1a6ecdc91682f4f4c7440d687" translate="yes" xml:space="preserve">
          <source>Creates a shallow copy of the range of &lt;code&gt;this&lt;/code&gt; Array, starting at and including &lt;code&gt;pos&lt;/code&gt;, up to but not including &lt;code&gt;end&lt;/code&gt;.</source>
          <target state="translated">创建 &lt;code&gt;this&lt;/code&gt; Array 范围的浅表副本，从 &lt;code&gt;pos&lt;/code&gt; （包括pos）开始，一直到 &lt;code&gt;end&lt;/code&gt; (但不包括end）。</target>
        </trans-unit>
        <trans-unit id="b803ccbb232c1e58fb37adfb586d47e5ddd403f2" translate="yes" xml:space="preserve">
          <source>Creates a timer which will be printed in the compilation report if &lt;code&gt;--times&lt;/code&gt; compilation argument is set.</source>
          <target state="translated">创建一个计时器，如果设置了 &lt;code&gt;--times&lt;/code&gt; 编译参数，则将在编译报告中打印该计时器。</target>
        </trans-unit>
        <trans-unit id="c28b4629111d562af400d3862b35e2bb184aabb7" translate="yes" xml:space="preserve">
          <source>Creates an Array from Iterable &lt;code&gt;it&lt;/code&gt;.</source>
          <target state="translated">创建一个从可迭代的数组 &lt;code&gt;it&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="79e1730e90c86867dbdadc905efacee4fad4cc51" translate="yes" xml:space="preserve">
          <source>Creates an instance of class &lt;code&gt;cl&lt;/code&gt;, using &lt;code&gt;args&lt;/code&gt; as arguments to the class constructor.</source>
          <target state="translated">使用 &lt;code&gt;args&lt;/code&gt; 作为类构造函数的参数创建 &lt;code&gt;cl&lt;/code&gt; 类的实例。</target>
        </trans-unit>
        <trans-unit id="94b699354ef72c2dddff5987a41faa8218ced98b" translate="yes" xml:space="preserve">
          <source>Creates an instance of class &lt;code&gt;cl&lt;/code&gt;.</source>
          <target state="translated">创建类 &lt;code&gt;cl&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="7ad4aac107a53753a1a4f44331ebb1ca98d7eb5e" translate="yes" xml:space="preserve">
          <source>Creates an instance of enum &lt;code&gt;e&lt;/code&gt; by calling its constructor &lt;code&gt;constr&lt;/code&gt; with arguments &lt;code&gt;params&lt;/code&gt;.</source>
          <target state="translated">通过使用参数 &lt;code&gt;params&lt;/code&gt; 调用其构造函数 &lt;code&gt;constr&lt;/code&gt; 来创建enum &lt;code&gt;e&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="d45c1c3e82e293f404b8bff76d1f6e749f21dec8" translate="yes" xml:space="preserve">
          <source>Creates an instance of enum &lt;code&gt;e&lt;/code&gt; by calling its constructor number &lt;code&gt;index&lt;/code&gt; with arguments &lt;code&gt;params&lt;/code&gt;.</source>
          <target state="translated">通过使用参数 &lt;code&gt;params&lt;/code&gt; 调用其构造函数编号 &lt;code&gt;index&lt;/code&gt; 来创建enum &lt;code&gt;e&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="d65f4c57261716cb45bb4362f564e23513f94c10" translate="yes" xml:space="preserve">
          <source>Cross platform UCS2 string API.</source>
          <target state="translated">跨平台的UCS2字符串API。</target>
        </trans-unit>
        <trans-unit id="295e6c1f20b9a7aa7a6a668de261d1ee6fde9f13" translate="yes" xml:space="preserve">
          <source>Cross-platform JSON API: it will automatically use the optimized native API if available. Use &lt;code&gt;-D haxeJSON&lt;/code&gt; to force usage of the Haxe implementation even if a native API is found: This will provide extra encoding features such as enums (replaced by their index) and StringMaps.</source>
          <target state="translated">跨平台JSON API：如果可用，它将自动使用优化的本机API。即使发现了本机API，也可以使用 &lt;code&gt;-D haxeJSON&lt;/code&gt; 强制使用Haxe实现：这将提供额外的编码功能，例如枚举（由其索引替换）和StringMaps。</target>
        </trans-unit>
        <trans-unit id="a374f2d39933381180f8541ff2cb4c09ed98b784" translate="yes" xml:space="preserve">
          <source>Cross-platform Xml API.</source>
          <target state="translated">跨平台的Xml API。</target>
        </trans-unit>
        <trans-unit id="a6c23b266dd4e0e8f358e9a3fea5393f98fa19b3" translate="yes" xml:space="preserve">
          <source>CtrDrbg</source>
          <target state="translated">CtrDrbg</target>
        </trans-unit>
        <trans-unit id="420f0b17aa188fb1a8d21bf822b9c8964a63e0d2" translate="yes" xml:space="preserve">
          <source>Custom exceptions should extend this class:</source>
          <target state="translated">自定义异常应该扩展这个类。</target>
        </trans-unit>
        <trans-unit id="d92a7a545646283435bc12e1d0bf6b8d939aa36a" translate="yes" xml:space="preserve">
          <source>DEPRECATED. Use &lt;code&gt;&lt;a href=&quot;std#isOfType&quot;&gt;Std.isOfType&lt;/a&gt;(v, t)&lt;/code&gt; instead.</source>
          <target state="translated">已弃用。请改用 &lt;code&gt;&lt;a href=&quot;std#isOfType&quot;&gt;Std.isOfType&lt;/a&gt;(v, t)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb9a4bc1c0c153e4e4b042a79113b815b7e3021d" translate="yes" xml:space="preserve">
          <source>Date</source>
          <target state="translated">Date</target>
        </trans-unit>
        <trans-unit id="2502795b4c66d9fa1b63eb8fb8c027a6c16b7ae2" translate="yes" xml:space="preserve">
          <source>Date.fromString()</source>
          <target state="translated">Date.fromString()</target>
        </trans-unit>
        <trans-unit id="3e71cc56d539e23a622a1edb53a75783409f8657" translate="yes" xml:space="preserve">
          <source>Date.fromTime()</source>
          <target state="translated">Date.fromTime()</target>
        </trans-unit>
        <trans-unit id="0f19d89669dd0bf67b95f6baa0e7e7cb0a564a93" translate="yes" xml:space="preserve">
          <source>Date.getDate()</source>
          <target state="translated">Date.getDate()</target>
        </trans-unit>
        <trans-unit id="e5701155ac035cc3f2c17ed06c6bdb185708a512" translate="yes" xml:space="preserve">
          <source>Date.getDay()</source>
          <target state="translated">Date.getDay()</target>
        </trans-unit>
        <trans-unit id="f77e036dc64528801be8dac5e5e09ff6b2b97f60" translate="yes" xml:space="preserve">
          <source>Date.getFullYear()</source>
          <target state="translated">Date.getFullYear()</target>
        </trans-unit>
        <trans-unit id="a52c61ba7f2bccb4e9cd266f1783902279ec8b67" translate="yes" xml:space="preserve">
          <source>Date.getHours()</source>
          <target state="translated">Date.getHours()</target>
        </trans-unit>
        <trans-unit id="730ca39b8eb51ff1b0051c3616d14086643a06cd" translate="yes" xml:space="preserve">
          <source>Date.getMinutes()</source>
          <target state="translated">Date.getMinutes()</target>
        </trans-unit>
        <trans-unit id="cb23e72e8c14992b097ba16358be43662d27c732" translate="yes" xml:space="preserve">
          <source>Date.getMonth()</source>
          <target state="translated">Date.getMonth()</target>
        </trans-unit>
        <trans-unit id="f09210bf04c54bd0d14095c7d874cd66cd6e751c" translate="yes" xml:space="preserve">
          <source>Date.getSeconds()</source>
          <target state="translated">Date.getSeconds()</target>
        </trans-unit>
        <trans-unit id="a6b45547231b3104bc9811649053fb92b7f42671" translate="yes" xml:space="preserve">
          <source>Date.getTime()</source>
          <target state="translated">Date.getTime()</target>
        </trans-unit>
        <trans-unit id="e147997e1535f78f4ad301fb40ea6b8f5108f570" translate="yes" xml:space="preserve">
          <source>Date.now()</source>
          <target state="translated">Date.now()</target>
        </trans-unit>
        <trans-unit id="a0c6ea77e1cd0d8d94c57ca8c8e54c0bd4c2158f" translate="yes" xml:space="preserve">
          <source>Date.toString()</source>
          <target state="translated">Date.toString()</target>
        </trans-unit>
        <trans-unit id="555635751c7e86483a9f6fe2df7cfcb6a8832760" translate="yes" xml:space="preserve">
          <source>DateTools</source>
          <target state="translated">DateTools</target>
        </trans-unit>
        <trans-unit id="32511aaeb8c405e0efa25c5391c53e78d307ba20" translate="yes" xml:space="preserve">
          <source>DateTools.days()</source>
          <target state="translated">DateTools.days()</target>
        </trans-unit>
        <trans-unit id="ac64133870ff477f293f250800e2a5be2bc192b7" translate="yes" xml:space="preserve">
          <source>DateTools.delta()</source>
          <target state="translated">DateTools.delta()</target>
        </trans-unit>
        <trans-unit id="5407b3c280a32654917a301e8f1e52179afdda1a" translate="yes" xml:space="preserve">
          <source>DateTools.format()</source>
          <target state="translated">DateTools.format()</target>
        </trans-unit>
        <trans-unit id="2d2635160624e675ce4aa6a55dbd29b3b1fa602b" translate="yes" xml:space="preserve">
          <source>DateTools.getMonthDays()</source>
          <target state="translated">DateTools.getMonthDays()</target>
        </trans-unit>
        <trans-unit id="50125c9a3f602ad29ef75623701911f63654cef5" translate="yes" xml:space="preserve">
          <source>DateTools.hours()</source>
          <target state="translated">DateTools.hours()</target>
        </trans-unit>
        <trans-unit id="dae1a8675567063be5a6b687561331f363ead126" translate="yes" xml:space="preserve">
          <source>DateTools.make()</source>
          <target state="translated">DateTools.make()</target>
        </trans-unit>
        <trans-unit id="0b0bbbb3667e606bc2889737163daa07ac06c608" translate="yes" xml:space="preserve">
          <source>DateTools.makeUtc()</source>
          <target state="translated">DateTools.makeUtc()</target>
        </trans-unit>
        <trans-unit id="c75f62b71aef2f58fcd8823ced37ad861b7d02d7" translate="yes" xml:space="preserve">
          <source>DateTools.minutes()</source>
          <target state="translated">DateTools.minutes()</target>
        </trans-unit>
        <trans-unit id="4d24263c2b9332c4eb4e6dd82d4d55a921d239cb" translate="yes" xml:space="preserve">
          <source>DateTools.parse()</source>
          <target state="translated">DateTools.parse()</target>
        </trans-unit>
        <trans-unit id="0b2b996fe13f1553d7a57378f9225e43f593f894" translate="yes" xml:space="preserve">
          <source>DateTools.seconds()</source>
          <target state="translated">DateTools.seconds()</target>
        </trans-unit>
        <trans-unit id="bbc5c05dfc2c220660a4aeb8c455809d22453fdc" translate="yes" xml:space="preserve">
          <source>Decode an URL using the standard format.</source>
          <target state="translated">使用标准格式对URL进行解码。</target>
        </trans-unit>
        <trans-unit id="6b0d09461f66b6635f7d94f1c02c32906ebdd7b5" translate="yes" xml:space="preserve">
          <source>Decode an UTF8 string back to an ISO string. Throw an exception if a given UTF8 character is not supported by the decoder.</source>
          <target state="translated">将一个UTF8字符串解码为ISO字符串。如果给定的UTF8字符不被解码器支持,则抛出一个异常。</target>
        </trans-unit>
        <trans-unit id="26af3905778d196856fb792c915b9e51842d6a25" translate="yes" xml:space="preserve">
          <source>DefType</source>
          <target state="translated">DefType</target>
        </trans-unit>
        <trans-unit id="f8289cccd0c29fb8405a76c1fa5f58795c665d51" translate="yes" xml:space="preserve">
          <source>Default values of constructors arguments are not guaranteed to be taken into account.</source>
          <target state="translated">构造函数参数的默认值不保证会被考虑。</target>
        </trans-unit>
        <trans-unit id="9954e10c2071b77cdeeee4eff4774d5451047817" translate="yes" xml:space="preserve">
          <source>Define</source>
          <target state="translated">Define</target>
        </trans-unit>
        <trans-unit id="66a7156e86ceacc86efa37f59bbdf78303ff6dcc" translate="yes" xml:space="preserve">
          <source>Defines a new module as &lt;code&gt;modulePath&lt;/code&gt; with several &lt;code&gt;&lt;a href=&quot;typedefinition#TypeDefinition&quot;&gt;TypeDefinition&lt;/a&gt;&lt;/code&gt;&lt;code&gt;types&lt;/code&gt;. This is analogous to defining a .hx file.</source>
          <target state="translated">将具有多个 &lt;code&gt;&lt;a href=&quot;typedefinition#TypeDefinition&quot;&gt;TypeDefinition&lt;/a&gt;&lt;/code&gt; &lt;code&gt;types&lt;/code&gt; 的新模块定义为 &lt;code&gt;modulePath&lt;/code&gt; 。这类似于定义.hx文件。</target>
        </trans-unit>
        <trans-unit id="7ffb44b0bf5991ffd8933124db8acf52f047650e" translate="yes" xml:space="preserve">
          <source>Defines a new type from &lt;code&gt;&lt;a href=&quot;typedefinition#TypeDefinition&quot;&gt;TypeDefinition&lt;/a&gt;&lt;/code&gt;&lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;&lt;a href=&quot;typedefinition#TypeDefinition&quot;&gt;TypeDefinition&lt;/a&gt;&lt;/code&gt; &lt;code&gt;t&lt;/code&gt; 定义一个新类型。</target>
        </trans-unit>
        <trans-unit id="84fe5d776eacc14be765857a529f348f735590f4" translate="yes" xml:space="preserve">
          <source>Delay the execution of the event for the given time, in seconds. If t is null, the event will be run at tick() time.</source>
          <target state="translated">延迟事件的执行时间,以秒为单位。如果t为空,则事件将在tick()时间运行。</target>
        </trans-unit>
        <trans-unit id="cc40785aa147dc4a7d72df056492d573e808874b" translate="yes" xml:space="preserve">
          <source>DelayedConnection</source>
          <target state="translated">DelayedConnection</target>
        </trans-unit>
        <trans-unit id="b19fbd6fbc0f92c748cd37dbda52e752ec8dec42" translate="yes" xml:space="preserve">
          <source>Depending on the outcome of the request, this method calls the &lt;code&gt;onStatus()&lt;/code&gt;, &lt;code&gt;onError()&lt;/code&gt; or &lt;code&gt;onData()&lt;/code&gt; callback functions.</source>
          <target state="translated">根据请求的结果，此方法调用 &lt;code&gt;onStatus()&lt;/code&gt; ， &lt;code&gt;onError()&lt;/code&gt; 或 &lt;code&gt;onData()&lt;/code&gt; 回调函数。</target>
        </trans-unit>
        <trans-unit id="3e0873b89091b3becee3e670906e351c590de196" translate="yes" xml:space="preserve">
          <source>Depending on the outcome of the request, this method calls the &lt;code&gt;onStatus()&lt;/code&gt;, &lt;code&gt;onError()&lt;/code&gt;, &lt;code&gt;onData()&lt;/code&gt; or &lt;code&gt;onBytes()&lt;/code&gt; callback functions.</source>
          <target state="translated">根据请求的结果，此方法调用 &lt;code&gt;onStatus()&lt;/code&gt; ， &lt;code&gt;onError()&lt;/code&gt; ， &lt;code&gt;onData()&lt;/code&gt; 或 &lt;code&gt;onBytes()&lt;/code&gt; 回调函数。</target>
        </trans-unit>
        <trans-unit id="a5240b97f00deff206c0545b281c4ef14ac33629" translate="yes" xml:space="preserve">
          <source>Depending on their type they can be obtained as &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; through &lt;code&gt;getString(name)&lt;/code&gt;, or as binary data through &lt;code&gt;getBytes(name)&lt;/code&gt;.</source>
          <target state="translated">根据它们的类型，可以通过 &lt;code&gt;getString(name)&lt;/code&gt; 将其获取为 &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; ，或者通过 &lt;code&gt;getBytes(name)&lt;/code&gt; 将其获取为二进制数据。</target>
        </trans-unit>
        <trans-unit id="b2d72bc3c75f01af655bd145601b41b857deedb1" translate="yes" xml:space="preserve">
          <source>Depending on their type they can be obtained as String through getString(name), or as binary data through getBytes(name).</source>
          <target state="translated">根据它们的类型,它们可以通过getString(name)获得字符串,或者通过getBytes(name)获得二进制数据。</target>
        </trans-unit>
        <trans-unit id="3e54f3055224360850f2e942676ea36ab172e83f" translate="yes" xml:space="preserve">
          <source>Detailed exception description.</source>
          <target state="translated">详细的异常说明。</target>
        </trans-unit>
        <trans-unit id="7856be2735402b5e20deec17f0a20113cfeb7368" translate="yes" xml:space="preserve">
          <source>DeterminePackage</source>
          <target state="translated">DeterminePackage</target>
        </trans-unit>
        <trans-unit id="51768eee365470b064d7c7b41317962332950c5c" translate="yes" xml:space="preserve">
          <source>DeterminePackageResult</source>
          <target state="translated">DeterminePackageResult</target>
        </trans-unit>
        <trans-unit id="a43697c3a5b843ea027619c441f97e1d73da52f6" translate="yes" xml:space="preserve">
          <source>Directly inject the file content at the call site.</source>
          <target state="translated">在调用站点直接注入文件内容。</target>
        </trans-unit>
        <trans-unit id="0e6d3c475ccde98ea3908146bf253347a3f9cc43" translate="yes" xml:space="preserve">
          <source>Disable null safety.</source>
          <target state="translated">禁用无效安全。</target>
        </trans-unit>
        <trans-unit id="ef19cbc8a701801fa1532ac065e92297fa9883b8" translate="yes" xml:space="preserve">
          <source>Disables dependency checks of the module.</source>
          <target state="translated">禁用模块的依赖性检查。</target>
        </trans-unit>
        <trans-unit id="97a89c297bf35b344332efdfeb4222c2a8743efc" translate="yes" xml:space="preserve">
          <source>Disables file modification checks, avoiding some filesystem operations.</source>
          <target state="translated">禁用文件修改检查,避免一些文件系统操作。</target>
        </trans-unit>
        <trans-unit id="5ebb3a8e66b0d7f0e18b4b41fba8fb5a14934bcf" translate="yes" xml:space="preserve">
          <source>Disables file shadowing checks. Shadowing can occur when a new file is added to a class-path that has higher priority than the class-path of the current module file.</source>
          <target state="translated">禁用文件影子检查。当一个新的文件被添加到比当前模块文件的类路径优先级更高的类路径时,就会发生阴影。</target>
        </trans-unit>
        <trans-unit id="840e1b364a32917bfd70c15b7a66a756520b0ee8" translate="yes" xml:space="preserve">
          <source>Dispatch</source>
          <target state="translated">Dispatch</target>
        </trans-unit>
        <trans-unit id="5b6cbd6babd89f0abe4e8e40db7cf8c651fcdc9f" translate="yes" xml:space="preserve">
          <source>DispatchConfig</source>
          <target state="translated">DispatchConfig</target>
        </trans-unit>
        <trans-unit id="331f33178b68e4b2c3527ce61e8f11c7ed865cbd" translate="yes" xml:space="preserve">
          <source>DispatchError</source>
          <target state="translated">DispatchError</target>
        </trans-unit>
        <trans-unit id="14584937074b8143efffa59e201c8b6918a0e1eb" translate="yes" xml:space="preserve">
          <source>DispatchRule</source>
          <target state="translated">DispatchRule</target>
        </trans-unit>
        <trans-unit id="1c70889358fd6ca7e1a99cd615db46ba5f51bc35" translate="yes" xml:space="preserve">
          <source>DisplayItem&amp;lt;T&amp;gt;</source>
          <target state="translated">DisplayItem&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="e7e8141b6af5e1534a40ca917957a6dff5fa3fa4" translate="yes" xml:space="preserve">
          <source>DisplayItemKind&amp;lt;T&amp;gt;(&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;)</source>
          <target state="translated">DisplayItemKind&amp;lt;T&amp;gt;(&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="8ed625231022f52f8e4f3a4be02c202ceea3eaf1" translate="yes" xml:space="preserve">
          <source>DisplayItemOccurrence&amp;lt;T&amp;gt;</source>
          <target state="translated">DisplayItemOccurrence&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="eb451fe0232fcedfbc4cd11f77c7ce67fde59cac" translate="yes" xml:space="preserve">
          <source>DisplayKind</source>
          <target state="translated">DisplayKind</target>
        </trans-unit>
        <trans-unit id="dc51fb359ee297358d4d47ee827629873a4c7caa" translate="yes" xml:space="preserve">
          <source>DisplayLiteral&amp;lt;T&amp;gt;</source>
          <target state="translated">DisplayLiteral&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="94091e65c32c24032f337a2cad336f583c5beaa1" translate="yes" xml:space="preserve">
          <source>DisplayLocal&amp;lt;T&amp;gt;</source>
          <target state="translated">DisplayLocal&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="9b363fdbcc671a918ee3d893a856f99756499bb9" translate="yes" xml:space="preserve">
          <source>DisplayMethods</source>
          <target state="translated">DisplayMethods</target>
        </trans-unit>
        <trans-unit id="b12a68c5f7748f84deb7d4868015fdc0dbb798c5" translate="yes" xml:space="preserve">
          <source>DisplayModuleType</source>
          <target state="translated">DisplayModuleType</target>
        </trans-unit>
        <trans-unit id="0b76178aec88b058036558b4e0ae6a8d9138e3ff" translate="yes" xml:space="preserve">
          <source>DisplayModuleTypeKind(&lt;a href=&quot;../../int&quot;&gt;Int&lt;/a&gt;)</source>
          <target state="translated">DisplayModuleTypeKind(&lt;a href=&quot;../../int&quot;&gt;Int&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="a760fbeee01b2e3e3918850f075691018b7ca836" translate="yes" xml:space="preserve">
          <source>DisplayModuleTypeParameter</source>
          <target state="translated">DisplayModuleTypeParameter</target>
        </trans-unit>
        <trans-unit id="0334d2d66165c4a341f9f334f25c2e1c841f403e" translate="yes" xml:space="preserve">
          <source>Displays a compilation error &lt;code&gt;msg&lt;/code&gt; at the given &lt;code&gt;&lt;a href=&quot;position#Position&quot;&gt;Position&lt;/a&gt;&lt;/code&gt;&lt;code&gt;pos&lt;/code&gt; and aborts the compilation.</source>
          <target state="translated">在给定的 &lt;code&gt;&lt;a href=&quot;position#Position&quot;&gt;Position&lt;/a&gt;&lt;/code&gt; &lt;code&gt;pos&lt;/code&gt; 上显示编译错误 &lt;code&gt;msg&lt;/code&gt; ，并中止编译。</target>
        </trans-unit>
        <trans-unit id="3f743efedc9ba6e4c65d4713563aaccd14c74a4b" translate="yes" xml:space="preserve">
          <source>Displays a compilation error &lt;code&gt;msg&lt;/code&gt; at the given &lt;code&gt;&lt;a href=&quot;position#Position&quot;&gt;Position&lt;/a&gt;&lt;/code&gt;&lt;code&gt;pos&lt;/code&gt; and aborts the current macro call.</source>
          <target state="translated">在给定的 &lt;code&gt;&lt;a href=&quot;position#Position&quot;&gt;Position&lt;/a&gt;&lt;/code&gt; &lt;code&gt;pos&lt;/code&gt; 上显示编译错误 &lt;code&gt;msg&lt;/code&gt; ，并中止当前的宏调用。</target>
        </trans-unit>
        <trans-unit id="cba595da603707fcdab78690487dace16d1bb83c" translate="yes" xml:space="preserve">
          <source>Displays a compilation info &lt;code&gt;msg&lt;/code&gt; at the given &lt;code&gt;&lt;a href=&quot;position#Position&quot;&gt;Position&lt;/a&gt;&lt;/code&gt;&lt;code&gt;pos&lt;/code&gt;.</source>
          <target state="translated">显示编译信息 &lt;code&gt;msg&lt;/code&gt; 在给定的 &lt;code&gt;&lt;a href=&quot;position#Position&quot;&gt;Position&lt;/a&gt;&lt;/code&gt; &lt;code&gt;pos&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f2527b1582b392164c568d38615eac209bbdb3d9" translate="yes" xml:space="preserve">
          <source>Displays a compilation warning &lt;code&gt;msg&lt;/code&gt; at the given &lt;code&gt;&lt;a href=&quot;position#Position&quot;&gt;Position&lt;/a&gt;&lt;/code&gt;&lt;code&gt;pos&lt;/code&gt;.</source>
          <target state="translated">在给定 &lt;code&gt;&lt;a href=&quot;position#Position&quot;&gt;Position&lt;/a&gt;&lt;/code&gt; &lt;code&gt;pos&lt;/code&gt; 上显示编译警告 &lt;code&gt;msg&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c6432f91eb74c971e3fbb2119939777657b6561f" translate="yes" xml:space="preserve">
          <source>Does not end with a &lt;code&gt;/&lt;/code&gt; or &lt;code&gt;\&lt;/code&gt; separator.</source>
          <target state="translated">不以 &lt;code&gt;/&lt;/code&gt; 或 &lt;code&gt;\&lt;/code&gt; 分隔符结尾。</target>
        </trans-unit>
        <trans-unit id="b42adb2a6427bf685a3827719893a2d23c0b58a7" translate="yes" xml:space="preserve">
          <source>Double quotes &lt;code&gt;&quot;&lt;/code&gt;</source>
          <target state="translated">双引号 &lt;code&gt;&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eba598515d44cf2b02bc84e472609652984461bf" translate="yes" xml:space="preserve">
          <source>Due to platform limitations, only dates in the range 1970 through 2038 are supported consistently. Some targets may support dates outside this range, depending on the OS at runtime. The &lt;code&gt;&lt;a href=&quot;date#fromTime&quot;&gt;Date.fromTime&lt;/a&gt;&lt;/code&gt; method will not work with timestamps outside the range on any target.</source>
          <target state="translated">由于平台的限制，仅一致地支持1970年到2038年之间的日期。某些目标可能支持超出此范围的日期，具体取决于运行时的操作系统。该 &lt;code&gt;&lt;a href=&quot;date#fromTime&quot;&gt;Date.fromTime&lt;/a&gt;&lt;/code&gt; 方法不会对任何目标的范围之外时间戳工作。</target>
        </trans-unit>
        <trans-unit id="ceb739dfaa883916a2f3db6aaa122bce70006b53" translate="yes" xml:space="preserve">
          <source>Dynamic</source>
          <target state="translated">Dynamic</target>
        </trans-unit>
        <trans-unit id="b6cc4d397e25fa722c4053ecf8fe1a4daa148656" translate="yes" xml:space="preserve">
          <source>Dynamic (re-)bindable access modifier.</source>
          <target state="translated">动态(再)可绑定的访问修改器。</target>
        </trans-unit>
        <trans-unit id="7a45a78611abcee636f0d9f402d439d06bdb03d5" translate="yes" xml:space="preserve">
          <source>Dynamic field access of a field named &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">名为 &lt;code&gt;s&lt;/code&gt; 的字段的动态字段访问。</target>
        </trans-unit>
        <trans-unit id="da93356b1413f56025af8bba3066db9f60ffe82d" translate="yes" xml:space="preserve">
          <source>Dynamic&amp;lt;T&amp;gt;</source>
          <target state="translated">Dynamic&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="ff9b40949157d6cf8e4158c1fc9d6e9fbc2d1ce6" translate="yes" xml:space="preserve">
          <source>DynamicAccess</source>
          <target state="translated">DynamicAccess</target>
        </trans-unit>
        <trans-unit id="875ee6c3e8577a04b4f6b74e984b6256f068498e" translate="yes" xml:space="preserve">
          <source>DynamicAccess is an abstract type for working with anonymous structures that are intended to hold collections of objects by the string key.</source>
          <target state="translated">DynamicAccess是一个抽象类型,用于处理匿名结构,其目的是通过字符串键来保存对象的集合。</target>
        </trans-unit>
        <trans-unit id="ade18ced07001fe33654d7ebdd482861101b62a8" translate="yes" xml:space="preserve">
          <source>DynamicAccess&amp;lt;T&amp;gt;(&lt;a href=&quot;../dynamic&quot;&gt;Dynamic&lt;/a&gt;&amp;lt;T&amp;gt;)</source>
          <target state="translated">DynamicAccess&amp;lt;T&amp;gt;(&lt;a href=&quot;../dynamic&quot;&gt;Dynamic&lt;/a&gt;&amp;lt;T&amp;gt;)</target>
        </trans-unit>
        <trans-unit id="4093dcd11824e02f0aff41149361d63866d81b4c" translate="yes" xml:space="preserve">
          <source>DynamicAccess.exists()</source>
          <target state="translated">DynamicAccess.exists()</target>
        </trans-unit>
        <trans-unit id="b61858923058648f3330342eb665558523064607" translate="yes" xml:space="preserve">
          <source>DynamicAccess.get()</source>
          <target state="translated">DynamicAccess.get()</target>
        </trans-unit>
        <trans-unit id="c22bdd3bc391c5af49125cc9f11f762acbde6d75" translate="yes" xml:space="preserve">
          <source>DynamicAccess.keys()</source>
          <target state="translated">DynamicAccess.keys()</target>
        </trans-unit>
        <trans-unit id="4854ee497f9e93123b76285da0dd234e42a7a54f" translate="yes" xml:space="preserve">
          <source>DynamicAccess.remove()</source>
          <target state="translated">DynamicAccess.remove()</target>
        </trans-unit>
        <trans-unit id="8301ac5705ed0d013ee234d53c322a51eef0275e" translate="yes" xml:space="preserve">
          <source>DynamicAccess.set()</source>
          <target state="translated">DynamicAccess.set()</target>
        </trans-unit>
        <trans-unit id="6a4e71c7f9989c475c55c2546a768df97baccecb" translate="yes" xml:space="preserve">
          <source>DynamicAccessIterator&amp;lt;T&amp;gt;</source>
          <target state="translated">DynamicAccessIterator&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="45bdd956167dfde76d15fe8dbb01327d6e44152c" translate="yes" xml:space="preserve">
          <source>DynamicAccessKeyValueIterator&amp;lt;T&amp;gt;</source>
          <target state="translated">DynamicAccessKeyValueIterator&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="fec44a0e36074474211d301c8d22097268fe46b9" translate="yes" xml:space="preserve">
          <source>EReg</source>
          <target state="translated">EReg</target>
        </trans-unit>
        <trans-unit id="2692bbff76cf83d0217eb6145dc7016d40317867" translate="yes" xml:space="preserve">
          <source>EReg instances can be created by calling the constructor, or with the special syntax &lt;code&gt;~/pattern/modifier&lt;/code&gt;</source>
          <target state="translated">EReg实例可以通过调用构造函数或使用特殊语法 &lt;code&gt;~/pattern/modifier&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6a85f15be907bcdde1e6694bed44957fb02d9157" translate="yes" xml:space="preserve">
          <source>EReg instances maintain an internal state, which is affected by several of its methods.</source>
          <target state="translated">EReg实例维护着一个内部状态,它受其几个方法的影响。</target>
        </trans-unit>
        <trans-unit id="8fd3f830f9dae56d714e14c3534ef9ecf656d9a4" translate="yes" xml:space="preserve">
          <source>EReg.map()</source>
          <target state="translated">EReg.map()</target>
        </trans-unit>
        <trans-unit id="844315945c461e71d2cbb4a4ca25b7fc94e15fdd" translate="yes" xml:space="preserve">
          <source>EReg.match()</source>
          <target state="translated">EReg.match()</target>
        </trans-unit>
        <trans-unit id="c9a19d5e4bb3e5c6363a686970bc71716dd3473a" translate="yes" xml:space="preserve">
          <source>EReg.matchSub()</source>
          <target state="translated">EReg.matchSub()</target>
        </trans-unit>
        <trans-unit id="d038441aef0214cad47f99ca8be2833d1d10e582" translate="yes" xml:space="preserve">
          <source>EReg.matched()</source>
          <target state="translated">EReg.matched()</target>
        </trans-unit>
        <trans-unit id="616337ae7f7626d4166029df12e0fd0b9f460be4" translate="yes" xml:space="preserve">
          <source>EReg.matchedLeft()</source>
          <target state="translated">EReg.matchedLeft()</target>
        </trans-unit>
        <trans-unit id="6ed139669903ee890f8a720234d664be21fb4c63" translate="yes" xml:space="preserve">
          <source>EReg.matchedPos()</source>
          <target state="translated">EReg.matchedPos()</target>
        </trans-unit>
        <trans-unit id="424724cdc5fd710c5b19c8eb38f011e313aa5dba" translate="yes" xml:space="preserve">
          <source>EReg.matchedRight()</source>
          <target state="translated">EReg.matchedRight()</target>
        </trans-unit>
        <trans-unit id="8a8ac3b3d61be655c38776850e2d1f09c70af9e3" translate="yes" xml:space="preserve">
          <source>EReg.replace()</source>
          <target state="translated">EReg.replace()</target>
        </trans-unit>
        <trans-unit id="217a41e1d311a5cdae84ebba76f654a7dece4f3d" translate="yes" xml:space="preserve">
          <source>EReg.split()</source>
          <target state="translated">EReg.split()</target>
        </trans-unit>
        <trans-unit id="c7612a91072e28ef5e0f4256a5e1fff52166a6c8" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;&lt;a href=&quot;serializer#Serializer&quot;&gt;Serializer&lt;/a&gt;&lt;/code&gt; instance maintains its own cache if &lt;code&gt;this.&lt;a href=&quot;#useCache&quot;&gt;useCache&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">如果每个 &lt;code&gt;&lt;a href=&quot;serializer#Serializer&quot;&gt;Serializer&lt;/a&gt;&lt;/code&gt; 实例都维护自己的缓存 &lt;code&gt;this.&lt;a href=&quot;#useCache&quot;&gt;useCache&lt;/a&gt;&lt;/code&gt; 为 &lt;code&gt;&lt;a href=&quot;../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8098f4ae3e293d69b382512cc8c2bc8180760b31" translate="yes" xml:space="preserve">
          <source>Each Serializer instance maintains its own cache if this.useCache` is true.</source>
          <target state="translated">如果this.useCache`为true,每个Serializer实例都会维护自己的缓存。</target>
        </trans-unit>
        <trans-unit id="12ec4f15441543a3136624875a0364b845f86171" translate="yes" xml:space="preserve">
          <source>Each Unserializer instance maintains its own cache.</source>
          <target state="translated">每个Unserializer实例都会维护自己的缓存。</target>
        </trans-unit>
        <trans-unit id="41217ddf6bf932c9b3b938d71fe67ca98d841873" translate="yes" xml:space="preserve">
          <source>Either represents values which are either of type &lt;code&gt;L&lt;/code&gt; (Left) or type &lt;code&gt;R&lt;/code&gt; (Right).</source>
          <target state="translated">代表 &lt;code&gt;L&lt;/code&gt; 型（左）或 &lt;code&gt;R&lt;/code&gt; 型（右）的值。</target>
        </trans-unit>
        <trans-unit id="95792dab3e1ee717026da087b89625fe36a907e3" translate="yes" xml:space="preserve">
          <source>Either&amp;lt;L, R&amp;gt;</source>
          <target state="translated">&amp;lt;L，R&amp;gt;</target>
        </trans-unit>
        <trans-unit id="dcb1b2efa1c5c7dadff21f30bed953c65eba5562" translate="yes" xml:space="preserve">
          <source>EitherType&amp;lt;T1, T2&amp;gt;(&lt;a href=&quot;../../dynamic&quot;&gt;Dynamic&lt;/a&gt;)</source>
          <target state="translated">EitherType &amp;lt;T1，T2&amp;gt;（&lt;a href=&quot;../../dynamic&quot;&gt;动态&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="adfd86b205a2d0d394e2955d44320ffb73af40dd" translate="yes" xml:space="preserve">
          <source>Elements return by &lt;code&gt;&lt;a href=&quot;callstack#CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; methods.</source>
          <target state="translated">元素通过 &lt;code&gt;&lt;a href=&quot;callstack#CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; 方法返回。</target>
        </trans-unit>
        <trans-unit id="9a91ba9c345dd631a8acd42369dbf6d825d87b96" translate="yes" xml:space="preserve">
          <source>Embed a JavaScript file at compile time (can be called by &lt;code&gt;--macro&lt;/code&gt; or within an &lt;code&gt;__init__&lt;/code&gt; method).</source>
          <target state="translated">在编译时嵌入JavaScript文件（可以由 &lt;code&gt;--macro&lt;/code&gt; 或在 &lt;code&gt;__init__&lt;/code&gt; 方法内调用）。</target>
        </trans-unit>
        <trans-unit id="da254c6b1241032da9b04f15a9bce21a875e31e8" translate="yes" xml:space="preserve">
          <source>Embed a JavaScript or Lua file at compile time (can be called by &lt;code&gt;--macro&lt;/code&gt; or within an &lt;code&gt;__init__&lt;/code&gt; method).</source>
          <target state="translated">在编译时嵌入JavaScript或Lua文件（可由 &lt;code&gt;--macro&lt;/code&gt; 调用或在 &lt;code&gt;__init__&lt;/code&gt; 方法内调用）。</target>
        </trans-unit>
        <trans-unit id="6e952912b0124405f74759351f78d81dea118a54" translate="yes" xml:space="preserve">
          <source>Empties &lt;code&gt;this&lt;/code&gt; List.</source>
          <target state="translated">清空 &lt;code&gt;this&lt;/code&gt; 列表。</target>
        </trans-unit>
        <trans-unit id="1c4da47bd000062bcb28ca50e2efeea5827f0bec" translate="yes" xml:space="preserve">
          <source>Enables null safety for a type or a package.</source>
          <target state="translated">启用类型或包的空安全。</target>
        </trans-unit>
        <trans-unit id="80c59fc5334cf2191575a07c8dd95b8a3c504f91" translate="yes" xml:space="preserve">
          <source>Encode an URL by using the standard format.</source>
          <target state="translated">使用标准格式对URL进行编码。</target>
        </trans-unit>
        <trans-unit id="097ee705f584936af92479eca1e26594b686c522" translate="yes" xml:space="preserve">
          <source>Encode the input ISO string into the corresponding UTF8 one.</source>
          <target state="translated">将输入的ISO字符串编码为相应的UTF8字符串。</target>
        </trans-unit>
        <trans-unit id="604ad10511e82c759311314a2b0569e49dfe2a6d" translate="yes" xml:space="preserve">
          <source>Encodes &lt;code&gt;n&lt;/code&gt; into a hexadecimal representation.</source>
          <target state="translated">将 &lt;code&gt;n&lt;/code&gt; 编码为十六进制表示形式。</target>
        </trans-unit>
        <trans-unit id="b984d26eb4b9800edfc1a5972d7bcb20eee6daa8" translate="yes" xml:space="preserve">
          <source>Encodes &lt;code&gt;o&lt;/code&gt;'s value and returns the resulting JSON string.</source>
          <target state="translated">编码 &lt;code&gt;o&lt;/code&gt; 的值并返回结果JSON字符串。</target>
        </trans-unit>
        <trans-unit id="65069ece18af22f2a8ba997f9a1597fa1e065d1f" translate="yes" xml:space="preserve">
          <source>Encodes the given &lt;code&gt;value&lt;/code&gt; and returns the resulting JSON string.</source>
          <target state="translated">对给定 &lt;code&gt;value&lt;/code&gt; 编码，并返回结果JSON字符串。</target>
        </trans-unit>
        <trans-unit id="5821fec7ee87050117e2081a31b307f34868a8ad" translate="yes" xml:space="preserve">
          <source>Encoding</source>
          <target state="translated">Encoding</target>
        </trans-unit>
        <trans-unit id="2b232729c524ef9ee28d2f15d4e7830e6cff69bf" translate="yes" xml:space="preserve">
          <source>End of file status can be checked by calling &lt;code&gt;&lt;a href=&quot;stringtools#isEof&quot;&gt;StringTools.isEof&lt;/a&gt;()&lt;/code&gt; with the returned value as argument.</source>
          <target state="translated">可以通过使用返回值作为参数调用 &lt;code&gt;&lt;a href=&quot;stringtools#isEof&quot;&gt;StringTools.isEof&lt;/a&gt;()&lt;/code&gt; 来检查文件结束状态。</target>
        </trans-unit>
        <trans-unit id="71f9464e04d9f246892847e8602acc62449908bc" translate="yes" xml:space="preserve">
          <source>Endianness (word byte order) used when reading numbers.</source>
          <target state="translated">读数时使用的Endianness(单词字节顺序)。</target>
        </trans-unit>
        <trans-unit id="fb8c697013ea48000ad87d4c3dc58c33c68209ff" translate="yes" xml:space="preserve">
          <source>Endianness (word byte order) used when writing numbers.</source>
          <target state="translated">写数字时使用的Endianness(字字节顺序)。</target>
        </trans-unit>
        <trans-unit id="659c924b0ac08a157d35ca4f12c37ecb9645e621" translate="yes" xml:space="preserve">
          <source>Endianness is specified by the &lt;code&gt;bigEndian&lt;/code&gt; property.</source>
          <target state="translated">字节 &lt;code&gt;bigEndian&lt;/code&gt; 由bigEndian属性指定。</target>
        </trans-unit>
        <trans-unit id="4608f79bfd37da190dbdb685823951b98e5138b2" translate="yes" xml:space="preserve">
          <source>Entropy</source>
          <target state="translated">Entropy</target>
        </trans-unit>
        <trans-unit id="19172e9e47fee4109f3d1d86c3076acdc36822f2" translate="yes" xml:space="preserve">
          <source>Entry</source>
          <target state="translated">Entry</target>
        </trans-unit>
        <trans-unit id="cb9388e4a2e7f88badae204e08bb23d349474a68" translate="yes" xml:space="preserve">
          <source>EntryPoint</source>
          <target state="translated">EntryPoint</target>
        </trans-unit>
        <trans-unit id="c9ca9b6c790a84bae49da3e4456cfb40fda85e36" translate="yes" xml:space="preserve">
          <source>EntryPoint.addThread()</source>
          <target state="translated">EntryPoint.addThread()</target>
        </trans-unit>
        <trans-unit id="9a8f2042e5b0eb4897ccce256accf7d22cdf31a7" translate="yes" xml:space="preserve">
          <source>EntryPoint.run()</source>
          <target state="translated">EntryPoint.run()</target>
        </trans-unit>
        <trans-unit id="29ab7196455f2b6f7c701a9fed55c8897ecc942d" translate="yes" xml:space="preserve">
          <source>EntryPoint.runInMainThread()</source>
          <target state="translated">EntryPoint.runInMainThread()</target>
        </trans-unit>
        <trans-unit id="71f7397b6674a5a17a37f4785354d2f89a6d47ea" translate="yes" xml:space="preserve">
          <source>EntryPoint.threadCount()</source>
          <target state="translated">EntryPoint.threadCount()</target>
        </trans-unit>
        <trans-unit id="90fb927d86ddfd15624e3887d959f1d6cac8f5ed" translate="yes" xml:space="preserve">
          <source>EntryPoint.wakeup()</source>
          <target state="translated">EntryPoint.wakeup()</target>
        </trans-unit>
        <trans-unit id="20588ae8e5c269292d35f9dfffa8f2eb3fd3c259" translate="yes" xml:space="preserve">
          <source>Enum</source>
          <target state="translated">Enum</target>
        </trans-unit>
        <trans-unit id="df185d9c0e5fb0320cc54cccf04ecde500cd7251" translate="yes" xml:space="preserve">
          <source>Enum constructor indices are preserved from Haxe syntax, so the first declared is index 0, the next index 1 etc. The methods are optimized if the enum instance is passed directly, e.g. as &lt;code&gt;has(EnumCtor)&lt;/code&gt;. Otherwise &lt;code&gt;&lt;a href=&quot;../type#enumIndex&quot;&gt;Type.enumIndex&lt;/a&gt;()&lt;/code&gt; reflection is used.</source>
          <target state="translated">Enum构造函数索引是从Haxe语法保留的，因此第一个声明的索引是索引0，下一个索引1等等。如果直接传递枚举实例（例如， &lt;code&gt;has(EnumCtor)&lt;/code&gt; ，则会优​​化方法。否则，将使用 &lt;code&gt;&lt;a href=&quot;../type#enumIndex&quot;&gt;Type.enumIndex&lt;/a&gt;()&lt;/code&gt; 反射。</target>
        </trans-unit>
        <trans-unit id="5dddd13cfb9477d06ae4a8baf0640522ec6c3e88" translate="yes" xml:space="preserve">
          <source>Enum constructor indices are preserved from Haxe syntax, so the first declared is index 0, the next index 1 etc. The methods are optimized if the enum instance is passed directly, e.g. as has(EnumCtor). Otherwise Type.enumIndex() reflection is used.</source>
          <target state="translated">枚举构造函数的索引从Haxe语法中保留下来,所以第一个声明的是索引0,下一个是索引1等等。如果直接传递枚举实例,例如以has(EnumCtor)的方式传递,那么这些方法将被优化。否则会使用Type.enumIndex()反射。</target>
        </trans-unit>
        <trans-unit id="a970348da64b6e188a02dfb82a9ce8049b9a7405" translate="yes" xml:space="preserve">
          <source>Enum&amp;lt;T&amp;gt;</source>
          <target state="translated">Enum&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="69b06764720ac75de68cfd1a7e8332b48f19ed84" translate="yes" xml:space="preserve">
          <source>EnumField</source>
          <target state="translated">EnumField</target>
        </trans-unit>
        <trans-unit id="59bcf9dccb7981d1c13d21dceb47af41ca37a68e" translate="yes" xml:space="preserve">
          <source>EnumFieldOccurrence&amp;lt;T&amp;gt;</source>
          <target state="translated">EnumFieldOccurrence&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="852428e0aba6a19f66a7977f84f4871bd13666fa" translate="yes" xml:space="preserve">
          <source>EnumFieldOrigin&amp;lt;T&amp;gt;</source>
          <target state="translated">EnumFieldOrigin&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="16394f729fa7af91a98550d72d80360246a0d839" translate="yes" xml:space="preserve">
          <source>EnumFieldOriginKind&amp;lt;T&amp;gt;(&lt;a href=&quot;../../int&quot;&gt;Int&lt;/a&gt;)</source>
          <target state="translated">EnumFieldOriginKind&amp;lt;T&amp;gt;(&lt;a href=&quot;../../int&quot;&gt;Int&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="217014dcd14b7cd1a64e0cbc989df5fb18080dd4" translate="yes" xml:space="preserve">
          <source>EnumFlags</source>
          <target state="translated">EnumFlags</target>
        </trans-unit>
        <trans-unit id="ae7e076539440c67936d46ad14aad3016805aca4" translate="yes" xml:space="preserve">
          <source>EnumFlags&amp;lt;T&amp;gt;(&lt;a href=&quot;../int&quot;&gt;Int&lt;/a&gt;)</source>
          <target state="translated">EnumFlags&amp;lt;T&amp;gt;(&lt;a href=&quot;../int&quot;&gt;Int&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="2c21c561c31a8a3b32d605002fd88cea9458cec4" translate="yes" xml:space="preserve">
          <source>EnumFlags.has()</source>
          <target state="translated">EnumFlags.has()</target>
        </trans-unit>
        <trans-unit id="88994c7ba1d66d2cc1cff6d4b786b305619aa89b" translate="yes" xml:space="preserve">
          <source>EnumFlags.ofInt()</source>
          <target state="translated">EnumFlags.ofInt()</target>
        </trans-unit>
        <trans-unit id="871bf1cfb1f0428ad87897156e135cb01a29897f" translate="yes" xml:space="preserve">
          <source>EnumFlags.set()</source>
          <target state="translated">EnumFlags.set()</target>
        </trans-unit>
        <trans-unit id="4fa6b8ecd4f446834870503895f1f9f0ea642afc" translate="yes" xml:space="preserve">
          <source>EnumFlags.toInt()</source>
          <target state="translated">EnumFlags.toInt()</target>
        </trans-unit>
        <trans-unit id="75a5890d9960bd22d8efed2accaa1af96f8d0e64" translate="yes" xml:space="preserve">
          <source>EnumFlags.unset()</source>
          <target state="translated">EnumFlags.unset()</target>
        </trans-unit>
        <trans-unit id="959c52e85ebde203ec20d08b8ae3d007c571c353" translate="yes" xml:space="preserve">
          <source>EnumTools</source>
          <target state="translated">EnumTools</target>
        </trans-unit>
        <trans-unit id="8e76c122272234454c070538cf531c57264679ac" translate="yes" xml:space="preserve">
          <source>EnumTools.createAll()</source>
          <target state="translated">EnumTools.createAll()</target>
        </trans-unit>
        <trans-unit id="eb70d16fddb6dee427cfc1778511d6660ba91a04" translate="yes" xml:space="preserve">
          <source>EnumTools.createByIndex()</source>
          <target state="translated">EnumTools.createByIndex()</target>
        </trans-unit>
        <trans-unit id="2abd36cb065921b4929ae545c1b4214b5d198228" translate="yes" xml:space="preserve">
          <source>EnumTools.createByName()</source>
          <target state="translated">EnumTools.createByName()</target>
        </trans-unit>
        <trans-unit id="33dde4ce8377aa8b17125518a31d9289e3a1590a" translate="yes" xml:space="preserve">
          <source>EnumTools.getConstructors()</source>
          <target state="translated">EnumTools.getConstructors()</target>
        </trans-unit>
        <trans-unit id="f9f50cb6fc0721ae18b145bfdba796e2f55db01a" translate="yes" xml:space="preserve">
          <source>EnumTools.getName()</source>
          <target state="translated">EnumTools.getName()</target>
        </trans-unit>
        <trans-unit id="0c9e28fe595a8813c17c13aac2f0334ebeb7d107" translate="yes" xml:space="preserve">
          <source>EnumType</source>
          <target state="translated">EnumType</target>
        </trans-unit>
        <trans-unit id="6c1f12e97714f00099156200b5b4f82c9a31c0c4" translate="yes" xml:space="preserve">
          <source>EnumValue</source>
          <target state="translated">EnumValue</target>
        </trans-unit>
        <trans-unit id="f4237d9254c0bd65cc0b9ca234e515815bfff38a" translate="yes" xml:space="preserve">
          <source>EnumValueMap allows mapping of enum value keys to arbitrary values.</source>
          <target state="translated">EnumValueMap允许将枚举值键映射到任意值。</target>
        </trans-unit>
        <trans-unit id="cf40ec40f9bf090c457ab42cd5ec953a38c44241" translate="yes" xml:space="preserve">
          <source>EnumValueMap&amp;lt;K, V&amp;gt;</source>
          <target state="translated">EnumValueMap &amp;lt;K，V&amp;gt;</target>
        </trans-unit>
        <trans-unit id="d0cd13a82f27a24bd7d3a452395ae124ce8923ef" translate="yes" xml:space="preserve">
          <source>EnumValueTools</source>
          <target state="translated">EnumValueTools</target>
        </trans-unit>
        <trans-unit id="c2d7764c0b4802fdc6629f0c1f99b5ab3bb60561" translate="yes" xml:space="preserve">
          <source>EnumValueTools.equals()</source>
          <target state="translated">EnumValueTools.equals()</target>
        </trans-unit>
        <trans-unit id="86824a242057a755ad1d72f931d21bfa101c5c33" translate="yes" xml:space="preserve">
          <source>EnumValueTools.getIndex()</source>
          <target state="translated">EnumValueTools.getIndex()</target>
        </trans-unit>
        <trans-unit id="7ff39c6303232b4b14cb60aab31d5d707e2b6300" translate="yes" xml:space="preserve">
          <source>EnumValueTools.getName()</source>
          <target state="translated">EnumValueTools.getName()</target>
        </trans-unit>
        <trans-unit id="7f7120fd285bfbeca4ca38bc22925348c685a267" translate="yes" xml:space="preserve">
          <source>EnumValueTools.getParameters()</source>
          <target state="translated">EnumValueTools.getParameters()</target>
        </trans-unit>
        <trans-unit id="6584a67d992ae90d720fac5d0ba5051e7a0a3ce4" translate="yes" xml:space="preserve">
          <source>EnumValueTools.match()</source>
          <target state="translated">EnumValueTools.match()</target>
        </trans-unit>
        <trans-unit id="7478ca19373c7fa54bd2c781b77e5dbd007e2e2c" translate="yes" xml:space="preserve">
          <source>Enumdef</source>
          <target state="translated">Enumdef</target>
        </trans-unit>
        <trans-unit id="ec3aedc215415465ba248c2b745d070af96045ef" translate="yes" xml:space="preserve">
          <source>Eof</source>
          <target state="translated">Eof</target>
        </trans-unit>
        <trans-unit id="7f2f6a15cf8da2b27e5a4af47b58e7ad71c0b3d9" translate="yes" xml:space="preserve">
          <source>Error</source>
          <target state="translated">Error</target>
        </trans-unit>
        <trans-unit id="797994933623706b450d38b94312182940a1fa2c" translate="yes" xml:space="preserve">
          <source>Escape the string &lt;code&gt;s&lt;/code&gt; for use as a part of regular expression.</source>
          <target state="translated">转义字符串 &lt;code&gt;s&lt;/code&gt; ，用作正则表达式的一部分。</target>
        </trans-unit>
        <trans-unit id="847d43d4f692fc47d875f005902fb14d3cec566d" translate="yes" xml:space="preserve">
          <source>Escapes HTML special characters of the string &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">转义字符串 &lt;code&gt;s&lt;/code&gt; 的 HTML特殊字符。</target>
        </trans-unit>
        <trans-unit id="fcb6d99f8787bb35bca746c5bb3ff31fb501a7a9" translate="yes" xml:space="preserve">
          <source>Evaluates &lt;code&gt;e&lt;/code&gt; as macro code.</source>
          <target state="translated">将 &lt;code&gt;e&lt;/code&gt; 评估为宏代码。</target>
        </trans-unit>
        <trans-unit id="5ab7721397827b925456d2a147cb5704105a62a7" translate="yes" xml:space="preserve">
          <source>Example usage:</source>
          <target state="translated">使用实例。</target>
        </trans-unit>
        <trans-unit id="118d62ec1d558a5349fc63e3bfbb04e3b9ccc376" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;~/haxe/i&lt;/code&gt;</source>
          <target state="translated">示例： &lt;code&gt;~/haxe/i&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b1dac2bdba43f0d6958b52261abdabeb315af240" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;~/haxe/i&lt;/code&gt;&lt;em&gt; The first argument &lt;em&gt;haxe&lt;/em&gt; is a string with regular expression pattern. &lt;/em&gt; The second argument &lt;em&gt;i&lt;/em&gt; is a string with regular expression flags.</source>
          <target state="translated">示例： &lt;code&gt;~/haxe/i&lt;/code&gt; &lt;em&gt;第一个参数&lt;em&gt;haxe&lt;/em&gt;是具有正则表达式模式的字符串。&lt;/em&gt;第二个参数&lt;em&gt;i&lt;/em&gt;是带有正则表达式标志的字符串。</target>
        </trans-unit>
        <trans-unit id="71da4f1a0d978fd0a8dd9554e1abbed2ee96f3b5" translate="yes" xml:space="preserve">
          <source>ExampleJSGenerator</source>
          <target state="translated">ExampleJSGenerator</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="20049bc069b0a04404c23d571b5e0b56f0660c02" translate="yes" xml:space="preserve">
          <source>Exception</source>
          <target state="translated">Exception</target>
        </trans-unit>
        <trans-unit id="93aeb320dd18ce5c777e6c94dec288bbd9bdbd15" translate="yes" xml:space="preserve">
          <source>Exception message.</source>
          <target state="translated">异常信息。</target>
        </trans-unit>
        <trans-unit id="61fbcf725e6506f08ff55ff8d9d71b806a8fdf4a" translate="yes" xml:space="preserve">
          <source>Exceptions are serialized with &lt;code&gt;serializeException&lt;/code&gt; so they will be thrown immediately when they are unserialized.</source>
          <target state="translated">异常使用serializeException进行了 &lt;code&gt;serializeException&lt;/code&gt; 因此在将其反序列化时将立即引发它们。</target>
        </trans-unit>
        <trans-unit id="db39031c9f0fe8d8245f8bd97a392f88286343dd" translate="yes" xml:space="preserve">
          <source>Exclude a specific class, enum, or all classes and enums in a package from being generated. Excluded types become &lt;code&gt;extern&lt;/code&gt;.</source>
          <target state="translated">排除生成包中的特定类，枚举或包中的所有类和枚举。排除的类型变为 &lt;code&gt;extern&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2cad5e4c316409614c41d96484eb73f9ced78742" translate="yes" xml:space="preserve">
          <source>Exclude classes and enums listed in an extern file (one per line) from being generated.</source>
          <target state="translated">排除外部文件中列出的类和枚举(每行一个)生成。</target>
        </trans-unit>
        <trans-unit id="da9b049dd9f93d13a3595b83c0460a99053d5e28" translate="yes" xml:space="preserve">
          <source>Executes &lt;code&gt;this&lt;/code&gt; Template, taking into account &lt;code&gt;context&lt;/code&gt; for replacements and &lt;code&gt;macros&lt;/code&gt; for callback functions.</source>
          <target state="translated">执行 &lt;code&gt;this&lt;/code&gt; 模板，同时考虑替换的 &lt;code&gt;context&lt;/code&gt; 和回调函数的 &lt;code&gt;macros&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e7f0ba423e8951d957ae577d7f72ebecdd439707" translate="yes" xml:space="preserve">
          <source>Executes &lt;code&gt;this&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;template#Template&quot;&gt;Template&lt;/a&gt;&lt;/code&gt;, taking into account &lt;code&gt;context&lt;/code&gt; for replacements and &lt;code&gt;macros&lt;/code&gt; for callback functions.</source>
          <target state="translated">执行 &lt;code&gt;this&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;template#Template&quot;&gt;Template&lt;/a&gt;&lt;/code&gt; ，同时考虑替换的 &lt;code&gt;context&lt;/code&gt; 和回调函数的 &lt;code&gt;macros&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a5292679ec28d35bb78fea0ab23b82968c9375a6" translate="yes" xml:space="preserve">
          <source>Expr</source>
          <target state="translated">Expr</target>
        </trans-unit>
        <trans-unit id="0e67d2ab39077340af2794c712a6e51917ff46b2" translate="yes" xml:space="preserve">
          <source>ExprArrayTools</source>
          <target state="translated">ExprArrayTools</target>
        </trans-unit>
        <trans-unit id="4dd6048a21613ac184a98bc6fa4df6762068e8fe" translate="yes" xml:space="preserve">
          <source>ExprDef</source>
          <target state="translated">ExprDef</target>
        </trans-unit>
        <trans-unit id="f161280872afc5d792441e3c1f89f3466770bf0e" translate="yes" xml:space="preserve">
          <source>ExprOf&amp;lt;T&amp;gt;</source>
          <target state="translated">ExprOf&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="e6708b573016bde041f2677f3cf2d0ee73dbf799" translate="yes" xml:space="preserve">
          <source>ExprTools</source>
          <target state="translated">ExprTools</target>
        </trans-unit>
        <trans-unit id="fc3db6ee6e722f78fb38c89c4e6ad0283cf939ae" translate="yes" xml:space="preserve">
          <source>Extern access modifier.</source>
          <target state="translated">外部访问修改器。</target>
        </trans-unit>
        <trans-unit id="b5bedf5ab9ba31e469faf7e534492347fc372217" translate="yes" xml:space="preserve">
          <source>ExternalConnection</source>
          <target state="translated">ExternalConnection</target>
        </trans-unit>
        <trans-unit id="50c1cd906f2119b6958b93e7c674c1eaa330f87c" translate="yes" xml:space="preserve">
          <source>ExtraField</source>
          <target state="translated">ExtraField</target>
        </trans-unit>
        <trans-unit id="18897cf3ceb8b07311847483a57214462259e2df" translate="yes" xml:space="preserve">
          <source>Extract an originally thrown value.</source>
          <target state="translated">提取一个原始抛出的值。</target>
        </trans-unit>
        <trans-unit id="2b7c79a6aafbb9c12425071df8d6c7a6b1cf8588" translate="yes" xml:space="preserve">
          <source>Extract metadata entries by given &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">按给定 &lt;code&gt;name&lt;/code&gt; 提取元数据条目。</target>
        </trans-unit>
        <trans-unit id="4aa321b7ec16db5dccddaecea916abf993334b47" translate="yes" xml:space="preserve">
          <source>Extract metadata entries by given `name`. If there's no metadata with such name, empty array `[]` is returned. If `name` is null, compilation fails with an error.</source>
          <target state="translated">通过给定的`name`提取元数据条目。如果没有元数据,则返回空数组`[]`。如果`name`为空,则编译失败。</target>
        </trans-unit>
        <trans-unit id="00a72a1da2e89152ad6f3b409435741b8f71e25a" translate="yes" xml:space="preserve">
          <source>Extracts the data of &lt;code&gt;this&lt;/code&gt; Vector.</source>
          <target state="translated">提取 &lt;code&gt;this&lt;/code&gt; Vector 的数据。</target>
        </trans-unit>
        <trans-unit id="6b1e825f49e15b9b7d11a9ed50b9b416e9c137e2" translate="yes" xml:space="preserve">
          <source>FPHelper</source>
          <target state="translated">FPHelper</target>
        </trans-unit>
        <trans-unit id="53edeba7041e670ebb7633b7ca3784fdc0fcc612" translate="yes" xml:space="preserve">
          <source>Failed access due to a &lt;code&gt;@:require&lt;/code&gt; metadata.</source>
          <target state="translated">由于 &lt;code&gt;@:require&lt;/code&gt; 元数据而导致访问失败。</target>
        </trans-unit>
        <trans-unit id="8db6a2f1d3b7e19e518ffa8979d7ad15359af460" translate="yes" xml:space="preserve">
          <source>Fast</source>
          <target state="translated">Fast</target>
        </trans-unit>
        <trans-unit id="c326a4660b674d2f6ea82687a1e1abae2337541f" translate="yes" xml:space="preserve">
          <source>Field</source>
          <target state="translated">Field</target>
        </trans-unit>
        <trans-unit id="d73f7b12c01b8512528d132e8f54150b84ee1082" translate="yes" xml:space="preserve">
          <source>Field access on &lt;code&gt;e.field&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;e.field&lt;/code&gt; 上进行现场访问。</target>
        </trans-unit>
        <trans-unit id="9dc3801e4eb667711897bdae9bea4a527021bde2" translate="yes" xml:space="preserve">
          <source>Field access on &lt;code&gt;e&lt;/code&gt; according to &lt;code&gt;fa&lt;/code&gt;.</source>
          <target state="translated">根据 &lt;code&gt;fa&lt;/code&gt; 在 &lt;code&gt;e&lt;/code&gt; 上进行现场访问。</target>
        </trans-unit>
        <trans-unit id="7ab33b8d090a51782269219799af5ed1f1821764" translate="yes" xml:space="preserve">
          <source>Field access to an enum constructor &lt;code&gt;ef&lt;/code&gt; of enum &lt;code&gt;e&lt;/code&gt;.</source>
          <target state="translated">对enum &lt;code&gt;e&lt;/code&gt; 的enum构造函数 &lt;code&gt;ef&lt;/code&gt; 的字段访问。</target>
        </trans-unit>
        <trans-unit id="6b388752e7d53bfed09e4768ec90932401a5b25a" translate="yes" xml:space="preserve">
          <source>FieldAccess</source>
          <target state="translated">FieldAccess</target>
        </trans-unit>
        <trans-unit id="e3da4304138dcf1c8d65584cf119733e162f3058" translate="yes" xml:space="preserve">
          <source>FieldCompletionSubject&amp;lt;T&amp;gt;</source>
          <target state="translated">FieldCompletionSubject&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="729413be94755fce8a2641b6ca14a20703827f07" translate="yes" xml:space="preserve">
          <source>FieldKind</source>
          <target state="translated">FieldKind</target>
        </trans-unit>
        <trans-unit id="3e79acae82c7c0fc75ebd1c1dae25057c8b051a0" translate="yes" xml:space="preserve">
          <source>FieldResolution</source>
          <target state="translated">FieldResolution</target>
        </trans-unit>
        <trans-unit id="79b3e5a7ea019fbf791de55508d0eff3356b75e6" translate="yes" xml:space="preserve">
          <source>FieldType</source>
          <target state="translated">FieldType</target>
        </trans-unit>
        <trans-unit id="e8b685271238adf161cffed3c91f54d97023262b" translate="yes" xml:space="preserve">
          <source>Fields</source>
          <target state="translated">Fields</target>
        </trans-unit>
        <trans-unit id="754f8944d72b4009651504200533557ffaeee4e7" translate="yes" xml:space="preserve">
          <source>FileParams</source>
          <target state="translated">FileParams</target>
        </trans-unit>
        <trans-unit id="d7decf1aa22b02ae8abf9a96849ee423eee838e4" translate="yes" xml:space="preserve">
          <source>Filter</source>
          <target state="translated">Filter</target>
        </trans-unit>
        <trans-unit id="d0d127aae60f64d4491db4441f21a719e95f61cc" translate="yes" xml:space="preserve">
          <source>Filters all current info/warning messages. Filtered out messages will not be displayed by the compiler.</source>
          <target state="translated">过滤所有当前的信息/警告信息。被过滤掉的信息将不会被编译器显示。</target>
        </trans-unit>
        <trans-unit id="8095c949ff04d7572e4d770c397cc9bd796bb151" translate="yes" xml:space="preserve">
          <source>Final access modifier. For functions, they can not be overridden. For variables, it means they can be assigned to only once.</source>
          <target state="translated">最后的访问修饰符。对于函数来说,它们不能被重写。对于变量来说,意味着它们只能被分配一次。</target>
        </trans-unit>
        <trans-unit id="8c6e356e2398338470ad46aa52f82a0138436d73" translate="yes" xml:space="preserve">
          <source>Find and install &lt;a href=&quot;https://lib.haxe.org/t/all/&quot;&gt;popular Haxe libraries&lt;/a&gt;</source>
          <target state="translated">查找并安装&lt;a href=&quot;https://lib.haxe.org/t/all/&quot;&gt;流行的Haxe库&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d45f243ab3455c5b37046762744d3328a11017a5" translate="yes" xml:space="preserve">
          <source>Find only direct references to the requested symbol. Does not look for references to parent or overriding methods.</source>
          <target state="translated">只查找对所请求的符号的直接引用。不查找对父方法或覆盖方法的引用。</target>
        </trans-unit>
        <trans-unit id="bd9e8c6614c6918e082be1b16e2cf14e06b2627f" translate="yes" xml:space="preserve">
          <source>Find references to the base field and all the overidding fields in the inheritance chain.</source>
          <target state="translated">查找基础字段和继承链中所有超标字段的引用。</target>
        </trans-unit>
        <trans-unit id="bab106e761dbaefb944966e89ad0f3a50af5514e" translate="yes" xml:space="preserve">
          <source>Find references to the requested field and references to all descendants of the requested field.</source>
          <target state="translated">查找对所请求字段的引用和对所请求字段的所有后裔的引用。</target>
        </trans-unit>
        <trans-unit id="ff9472b8298fa0a4bc1a780ae071e54f17e56fe3" translate="yes" xml:space="preserve">
          <source>FindReferences</source>
          <target state="translated">FindReferences</target>
        </trans-unit>
        <trans-unit id="b87c0531c5333a97d2170cfda63c54db4d213f11" translate="yes" xml:space="preserve">
          <source>FindReferencesKind(&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;)</source>
          <target state="translated">FindReferencesKind(&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="d528c55157e5a6d8a5af0f3d1d5de0f610cfd9b5" translate="yes" xml:space="preserve">
          <source>FindReferencesParams</source>
          <target state="translated">FindReferencesParams</target>
        </trans-unit>
        <trans-unit id="e781f197d454b09d7ab466013555313b6d08ddb7" translate="yes" xml:space="preserve">
          <source>Flash outputs the result in a new &lt;code&gt;&lt;a href=&quot;https://api.haxe.org/flash/text/TextField.html#TextField&quot;&gt;TextField&lt;/a&gt;&lt;/code&gt; on stage. JavaScript outputs the result using &lt;code&gt;console.log&lt;/code&gt;. Other targets use native &lt;code&gt;print&lt;/code&gt; to output the result.</source>
          <target state="translated">Flash将结果输出到舞台上的新 &lt;code&gt;&lt;a href=&quot;https://api.haxe.org/flash/text/TextField.html#TextField&quot;&gt;TextField&lt;/a&gt;&lt;/code&gt; 中。JavaScript使用 &lt;code&gt;console.log&lt;/code&gt; 输出结果。其他目标使用本地 &lt;code&gt;print&lt;/code&gt; 输出结果。</target>
        </trans-unit>
        <trans-unit id="b0acea8b840d7990be1b2cf6a636056e8e5f8ac3" translate="yes" xml:space="preserve">
          <source>FlashJsConnection</source>
          <target state="translated">FlashJsConnection</target>
        </trans-unit>
        <trans-unit id="0bda41944f21238884d5c8959994da848e8e7511" translate="yes" xml:space="preserve">
          <source>FlatEnum</source>
          <target state="translated">FlatEnum</target>
        </trans-unit>
        <trans-unit id="f90506d4b512ae34c88a0d4d95dbb6ff9b1a3858" translate="yes" xml:space="preserve">
          <source>FlatEnum(&lt;a href=&quot;../dynamic&quot;&gt;Dynamic&lt;/a&gt;)</source>
          <target state="translated">FlatEnum(&lt;a href=&quot;../dynamic&quot;&gt;Dynamic&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="64435fd82de7b1d614dfb9844848a48b14c6cd2c" translate="yes" xml:space="preserve">
          <source>Float</source>
          <target state="translated">Float</target>
        </trans-unit>
        <trans-unit id="11510a7777bf8197e4a83098848bb3737b35e115" translate="yes" xml:space="preserve">
          <source>Float32Array(&lt;a href=&quot;float32arraydata&quot;&gt;Float32ArrayData&lt;/a&gt;)</source>
          <target state="translated">Float32Array(&lt;a href=&quot;float32arraydata&quot;&gt;Float32ArrayData&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="844cbd246798b994fb20578356469dd69bdf50d5" translate="yes" xml:space="preserve">
          <source>Float32ArrayData</source>
          <target state="translated">Float32ArrayData</target>
        </trans-unit>
        <trans-unit id="477a8b3ad584b27da3e54e8ad06023f6ec4bfc5f" translate="yes" xml:space="preserve">
          <source>Float64Array(&lt;a href=&quot;float64arraydata&quot;&gt;Float64ArrayData&lt;/a&gt;)</source>
          <target state="translated">Float64Array(&lt;a href=&quot;float64arraydata&quot;&gt;Float64ArrayData&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="f2fb019ec64e32888998bb2e3aaf84ddcc7d7fc3" translate="yes" xml:space="preserve">
          <source>Float64ArrayData</source>
          <target state="translated">Float64ArrayData</target>
        </trans-unit>
        <trans-unit id="c412da7fb8bed1eed25e335134a9aec3cd0f28e9" translate="yes" xml:space="preserve">
          <source>Flush any buffered data.</source>
          <target state="translated">刷新任何缓冲数据。</target>
        </trans-unit>
        <trans-unit id="a8345b1143921741394df2f483d2783c74a0d7e9" translate="yes" xml:space="preserve">
          <source>FlushMode</source>
          <target state="translated">FlushMode</target>
        </trans-unit>
        <trans-unit id="9caf5d6a43b11eb51f65ff907ca9558486d39bcf" translate="yes" xml:space="preserve">
          <source>Follows a type, including abstracts' underlying implementation</source>
          <target state="translated">遵循一个类型,包括抽象的底层实现。</target>
        </trans-unit>
        <trans-unit id="be04ecbc965d028a002641c404f61fa2d930509f" translate="yes" xml:space="preserve">
          <source>Follows a type.</source>
          <target state="translated">遵循一个类型。</target>
        </trans-unit>
        <trans-unit id="609916a76f7784ae4e3c1c473c6a5460e534c7f2" translate="yes" xml:space="preserve">
          <source>Follows all typedefs of &lt;code&gt;t&lt;/code&gt; to reach the actual type.</source>
          <target state="translated">遵循 &lt;code&gt;t&lt;/code&gt; 的所有typedef以达到实际类型。</target>
        </trans-unit>
        <trans-unit id="2327544b07b3ad3e42d69747edf5990e73647c23" translate="yes" xml:space="preserve">
          <source>For all other types, the result is 0 if &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are equal. If they are not equal, the result depends on the type and is negative if:</source>
          <target state="translated">对于所有其他类型，如果 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; ，则结果为0相等。如果它们不相等，则结果取决于类型，并且在以下情况下为负数：</target>
        </trans-unit>
        <trans-unit id="9943c2131e35a39918c80fe56b7bcbe6c83502f9" translate="yes" xml:space="preserve">
          <source>For asynchronous connections, where the results are events that will be resolved later in the execution process.</source>
          <target state="translated">对于异步连接,其结果是在执行过程中稍后解决的事件。</target>
        </trans-unit>
        <trans-unit id="afb073172e32ccfb97022463548054490b47b5f5" translate="yes" xml:space="preserve">
          <source>For example, these types of structures are often created from JSON.</source>
          <target state="translated">例如,这些类型的结构通常是由JSON创建的。</target>
        </trans-unit>
        <trans-unit id="114d3c01a2e4ddc991d478cd5cfe8dbabb4a9762" translate="yes" xml:space="preserve">
          <source>For example, this is the result of -1.0 / 0.0.</source>
          <target state="translated">例如,这是-1.0/0.0的结果。</target>
        </trans-unit>
        <trans-unit id="9a53f6454abb12658c97c32ac6f8607146258608" translate="yes" xml:space="preserve">
          <source>For example, this is the result of 1.0 / 0.0.</source>
          <target state="translated">例如,这是1.0/0.0的结果。</target>
        </trans-unit>
        <trans-unit id="d89610296ec05505c3ff929ed286f1685f471684" translate="yes" xml:space="preserve">
          <source>For example, this is the result of &lt;code&gt;-1.0 / 0.0&lt;/code&gt;.</source>
          <target state="translated">例如，这是 &lt;code&gt;-1.0 / 0.0&lt;/code&gt; 的结果。</target>
        </trans-unit>
        <trans-unit id="0541ee8450e35411d1e31bc781c4bb01781d5433" translate="yes" xml:space="preserve">
          <source>For example, this is the result of &lt;code&gt;1.0 / 0.0&lt;/code&gt;.</source>
          <target state="translated">例如，这是 &lt;code&gt;1.0 / 0.0&lt;/code&gt; 的结果。</target>
        </trans-unit>
        <trans-unit id="e33c0b3eb75c5dda146848ebab4274b45f5b39fa" translate="yes" xml:space="preserve">
          <source>For measuring time differences with millisecond accuracy on all platforms, see &lt;code&gt;&lt;a href=&quot;haxe/timer#stamp&quot;&gt;haxe.Timer.stamp&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">有关在所有平台上以毫秒精度测量时差的信息，请参见 &lt;code&gt;&lt;a href=&quot;haxe/timer#stamp&quot;&gt;haxe.Timer.stamp&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="041a5dec481d6bf0724caeaa84bc135d7d9062d4" translate="yes" xml:space="preserve">
          <source>Format</source>
          <target state="translated">Format</target>
        </trans-unit>
        <trans-unit id="cec8c870b546c421e01961c0013a671c40c6e8a2" translate="yes" xml:space="preserve">
          <source>Format the date &lt;code&gt;d&lt;/code&gt; according to the format &lt;code&gt;f&lt;/code&gt;. The format is compatible with the &lt;code&gt;strftime&lt;/code&gt; standard format, except that there is no support in Flash and JS for day and months names (due to lack of proper internationalization API). On Haxe/Neko/Windows, some formats are not supported.</source>
          <target state="translated">根据格式 &lt;code&gt;f&lt;/code&gt; 格式化日期 &lt;code&gt;d&lt;/code&gt; 。该格式与 &lt;code&gt;strftime&lt;/code&gt; 标准格式兼容，但Flash和JS中不支持日期和月份名称（由于缺少适当的国际化API）。在Haxe / Neko / Windows上，不支持某些格式。</target>
        </trans-unit>
        <trans-unit id="8665517d78104de3430ce1c7dd10a34fa5ed361a" translate="yes" xml:space="preserve">
          <source>Format the output of &lt;code&gt;trace&lt;/code&gt; before printing it.</source>
          <target state="translated">在打印之前格式化 &lt;code&gt;trace&lt;/code&gt; 的输出。</target>
        </trans-unit>
        <trans-unit id="b6f9eb60c2c31ffe27453343bc4131d68e0af9fd" translate="yes" xml:space="preserve">
          <source>Formats &lt;code&gt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;&lt;code&gt;s&lt;/code&gt; using the usual interpolation rules.</source>
          <target state="translated">格式 &lt;code&gt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; &lt;code&gt;s&lt;/code&gt; 使用通常的插值规则。</target>
        </trans-unit>
        <trans-unit id="3a993dfcc1b3def3fad791df632ce384dc72a2e6" translate="yes" xml:space="preserve">
          <source>FsPath(&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;)</source>
          <target state="translated">FsPath(&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="d756173c25d6f932458b409edd979767c43cab1e" translate="yes" xml:space="preserve">
          <source>Full scale null safety for a multi-threaded environment. With this mode checking a field &lt;code&gt;!= null&lt;/code&gt; does not make it safe, because it could be changed from another thread at the same time or immediately after the check. The only nullable thing could be safe are local variables.</source>
          <target state="translated">针对多线程环境的全尺寸null安全性。在这种模式下，检查字段 &lt;code&gt;!= null&lt;/code&gt; 不会使其安全，因为它可以同时或在检查后立即从另一个线程更改。唯一可以为空的东西是安全的是局部变量。</target>
        </trans-unit>
        <trans-unit id="b12240da36f7d827dfbbc40173bf3883319e54c9" translate="yes" xml:space="preserve">
          <source>Full scale null safety. If a field is checked &lt;code&gt;!= null&lt;/code&gt; it stays safe until a call is made or any field of any object is reassigned, because that could potentially alter an object of the checked field. E.g.</source>
          <target state="translated">全面的零安全。如果选中一个字段 &lt;code&gt;!= null&lt;/code&gt; 它将保持安全，直到进行呼叫或重新分配任何对象的任何字段为止，因为这可能会更改选中字段的对象。例如</target>
        </trans-unit>
        <trans-unit id="f1e410ad1472b42cb42cc98962428637290b6706" translate="yes" xml:space="preserve">
          <source>Function</source>
          <target state="translated">Function</target>
        </trans-unit>
        <trans-unit id="04c5bdd595f13bb3daed512ae037d1fa7442cf85" translate="yes" xml:space="preserve">
          <source>Function(&lt;a href=&quot;../dynamic&quot;&gt;Dynamic&lt;/a&gt;)</source>
          <target state="translated">Function(&lt;a href=&quot;../dynamic&quot;&gt;Dynamic&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="ff905d0415b72cacc9044b1d0c15ac494008eadb" translate="yes" xml:space="preserve">
          <source>FunctionArg</source>
          <target state="translated">FunctionArg</target>
        </trans-unit>
        <trans-unit id="0bd8399d033e6e3c722f4542fb08418cc1cdabcb" translate="yes" xml:space="preserve">
          <source>FunctionArgument</source>
          <target state="translated">FunctionArgument</target>
        </trans-unit>
        <trans-unit id="bab577d5256311ef418a8706bf4756c0c52694d7" translate="yes" xml:space="preserve">
          <source>FunctionKind</source>
          <target state="translated">FunctionKind</target>
        </trans-unit>
        <trans-unit id="d6f749c7ce583485f5de17eec1610c9d8e0a65f9" translate="yes" xml:space="preserve">
          <source>Functional fold on Iterable &lt;code&gt;it&lt;/code&gt;, using function &lt;code&gt;f&lt;/code&gt; with start argument &lt;code&gt;first&lt;/code&gt;.</source>
          <target state="translated">在可迭代功能折 &lt;code&gt;it&lt;/code&gt; ，使用功能 &lt;code&gt;f&lt;/code&gt; 用start参数 &lt;code&gt;first&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f773e345831b2b72279152481cd9405009ae5811" translate="yes" xml:space="preserve">
          <source>General types</source>
          <target state="translated">一般类型</target>
        </trans-unit>
        <trans-unit id="6fc5e5c60364ae81a00cd2de906c88f9aad88d96" translate="yes" xml:space="preserve">
          <source>GenericCell&amp;lt;T&amp;gt;</source>
          <target state="translated">GenericCell&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="e956d7becbc817997c15d1620bbe4e9e59df3ca3" translate="yes" xml:space="preserve">
          <source>GenericStack&amp;lt;T&amp;gt;</source>
          <target state="translated">GenericStack&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="43471c3afaf977dfc12af97c1a82892de4fb94e1" translate="yes" xml:space="preserve">
          <source>Get information about the call stack.</source>
          <target state="translated">获取呼叫栈的信息。</target>
        </trans-unit>
        <trans-unit id="a455da17d8de7c3124e7c11b02fb09192a3017fe" translate="yes" xml:space="preserve">
          <source>Get the given attribute of an Element node. Returns &lt;code&gt;null&lt;/code&gt; if not found. Attributes are case-sensitive.</source>
          <target state="translated">获取元素节点的给定属性。如果找不到，则返回 &lt;code&gt;null&lt;/code&gt; 。属性区分大小写。</target>
        </trans-unit>
        <trans-unit id="c06b3a62280fc1a4c37fbc0b7eee4832a30cef09" translate="yes" xml:space="preserve">
          <source>Get the string representation of &lt;code&gt;&lt;a href=&quot;ctype#CType&quot;&gt;CType&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">获取 &lt;code&gt;&lt;a href=&quot;ctype#CType&quot;&gt;CType&lt;/a&gt;&lt;/code&gt; 的字符串表示形式。</target>
        </trans-unit>
        <trans-unit id="4b43106b54302757a91631c8814513b17b3a6285" translate="yes" xml:space="preserve">
          <source>Gets a list of all current compilation info/warning messages.</source>
          <target state="translated">获取当前所有编译信息/警告信息的列表。</target>
        </trans-unit>
        <trans-unit id="7279fecb37572d8cea3569f4b5097f556b1166de" translate="yes" xml:space="preserve">
          <source>Gets the type resolver of &lt;code&gt;this&lt;/code&gt; Unserializer instance.</source>
          <target state="translated">获取的类型解析 &lt;code&gt;this&lt;/code&gt; Unserializer实例。</target>
        </trans-unit>
        <trans-unit id="a56a1bcd19e8e53e270cc0ec4187052d833bb7ac" translate="yes" xml:space="preserve">
          <source>Getting Started With Haxe</source>
          <target state="translated">开始使用Haxe</target>
        </trans-unit>
        <trans-unit id="24ecd996a3c0b29dd5b2d30bde85def6391fe27d" translate="yes" xml:space="preserve">
          <source>Global replacements which are used across all &lt;code&gt;&lt;a href=&quot;template#Template&quot;&gt;Template&lt;/a&gt;&lt;/code&gt; instances. This has lower priority than the context argument of &lt;code&gt;execute()&lt;/code&gt;.</source>
          <target state="translated">在所有 &lt;code&gt;&lt;a href=&quot;template#Template&quot;&gt;Template&lt;/a&gt;&lt;/code&gt; 实例中使用的全局替换。它的优先级比 &lt;code&gt;execute()&lt;/code&gt; 的上下文参数低。</target>
        </trans-unit>
        <trans-unit id="f17d4a4d94b24a89d5fa83e7764a10b3df255bcf" translate="yes" xml:space="preserve">
          <source>Global replacements which are used across all Template instances. This has lower priority than the context argument of execute().</source>
          <target state="translated">全局替换,在所有Template实例中使用。这比execute()的上下文参数优先级低。</target>
        </trans-unit>
        <trans-unit id="8bd66b8afde98949ddb24904d908b23f61d7e7ec" translate="yes" xml:space="preserve">
          <source>GotoDefinition</source>
          <target state="translated">GotoDefinition</target>
        </trans-unit>
        <trans-unit id="0ba0a60e0e20cb544cc2de71e407a1ae5dd66ed2" translate="yes" xml:space="preserve">
          <source>GotoDefinitionResult</source>
          <target state="translated">GotoDefinitionResult</target>
        </trans-unit>
        <trans-unit id="1c3788da7fc9f3c0fa4187e3cd79960f8f667ede" translate="yes" xml:space="preserve">
          <source>GotoTypeDefinition</source>
          <target state="translated">GotoTypeDefinition</target>
        </trans-unit>
        <trans-unit id="6cc0e212ca2007a873d471d915cd868bd503d797" translate="yes" xml:space="preserve">
          <source>GotoTypeDefinitionResult</source>
          <target state="translated">GotoTypeDefinitionResult</target>
        </trans-unit>
        <trans-unit id="ed01b7948a2cba2c699544c4d030f3cad4b28232" translate="yes" xml:space="preserve">
          <source>HTML MimeType Enum</source>
          <target state="translated">HTML MimeType Enum</target>
        </trans-unit>
        <trans-unit id="d6a831ea06a1e608f9a0bbc622a69b9aefd8d730" translate="yes" xml:space="preserve">
          <source>HTTP Request Status</source>
          <target state="translated">HTTP请求状态</target>
        </trans-unit>
        <trans-unit id="030f6b36c837f216c92b4f7c672f1f2cecac943b" translate="yes" xml:space="preserve">
          <source>HTTP defines methods (sometimes referred to as &lt;em&gt;verbs&lt;/em&gt;) to indicate the desired action to be performed on the identified resource. What this resource represents, whether pre-existing data or data that is generated dynamically, depends on the implementation of the server.</source>
          <target state="translated">HTTP定义了一些方法（有时称为&lt;em&gt;动词&lt;/em&gt;）来指示要对标识的资源执行的所需操作。该资源表示的是现有数据还是动态生成的数据，取决于服务器的实现。</target>
        </trans-unit>
        <trans-unit id="fce4586d9d65ada69ddd60e08a0d42802c5ea060" translate="yes" xml:space="preserve">
          <source>Has no effect if the compilation cache is not used.</source>
          <target state="translated">如果不使用编译缓存,则没有影响。</target>
        </trans-unit>
        <trans-unit id="70f63386f973b279eb6c490ae7bc9c2d9be766c2" translate="yes" xml:space="preserve">
          <source>Hash methods for Hmac calculation.</source>
          <target state="translated">Hmac计算的哈希方法。</target>
        </trans-unit>
        <trans-unit id="707255749bd88894ac556bed03390afbf3391ab8" translate="yes" xml:space="preserve">
          <source>HashMap allows mapping of hashable objects to arbitrary values.</source>
          <target state="translated">HashMap允许将可哈希对象映射到任意值。</target>
        </trans-unit>
        <trans-unit id="6c4ad095cdf4d18db142afb7c04cebd2a5678d4b" translate="yes" xml:space="preserve">
          <source>HashMap&amp;lt;K, V&amp;gt;(HashMapData&amp;lt;K, V&amp;gt;)</source>
          <target state="translated">HashMap &amp;lt;K，V&amp;gt;（HashMapData &amp;lt;K，V&amp;gt;）</target>
        </trans-unit>
        <trans-unit id="a49ab7cab2d673178aa85342577faa7246f626e2" translate="yes" xml:space="preserve">
          <source>HashMapKeyValueIterator&amp;lt;K, V&amp;gt;</source>
          <target state="translated">HashMapKeyValueIterator&amp;lt;K, V&amp;gt;</target>
        </trans-unit>
        <trans-unit id="7080a108819410c77712d40c2ee8d140559d22a3" translate="yes" xml:space="preserve">
          <source>HashMethod</source>
          <target state="translated">HashMethod</target>
        </trans-unit>
        <trans-unit id="b86cc9f741a6ffb57c458f74200e50901a1d36b3" translate="yes" xml:space="preserve">
          <source>Haxe</source>
          <target state="translated">Haxe</target>
        </trans-unit>
        <trans-unit id="4c21330296650de2121bf2189b06abaa867d8619" translate="yes" xml:space="preserve">
          <source>Haxe API documentation</source>
          <target state="translated">Haxe API文档</target>
        </trans-unit>
        <trans-unit id="176af15f18115d62ddf04045dad6e37cccba1f64" translate="yes" xml:space="preserve">
          <source>Haxe allows expressions in concrete type parameters, e.g. &lt;code&gt;new YourType&amp;lt;[&quot;hello&quot;, &quot;world&quot;]&amp;gt;&lt;/code&gt;. In that case the value is &lt;code&gt;TPExpr&lt;/code&gt; while in the normal case it's &lt;code&gt;TPType&lt;/code&gt;.</source>
          <target state="translated">Haxe允许使用具体类型参数的表达式，例如 &lt;code&gt;new YourType&amp;lt;[&quot;hello&quot;, &quot;world&quot;]&amp;gt;&lt;/code&gt; 。在这种情况下，值为 &lt;code&gt;TPExpr&lt;/code&gt; ,而在正常情况下为 &lt;code&gt;TPType&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="00b7e20d3eefd575d806b00d65aa52943b79cc61" translate="yes" xml:space="preserve">
          <source>Haxe is an open source toolkit based on a modern, high level, strictly typed programming language, a cross-compiler, a complete cross-platform standard library and ways to access each platform's native capabilities.</source>
          <target state="translated">Haxe是一个开源工具包,它基于现代的、高水平的、严格类型化的编程语言、交叉编译器、完整的跨平台标准库以及访问每个平台本地功能的方法。</target>
        </trans-unit>
        <trans-unit id="8e9352a651531f340093de864761e1987e52807a" translate="yes" xml:space="preserve">
          <source>HaxeContextMemoryResult</source>
          <target state="translated">HaxeContextMemoryResult</target>
        </trans-unit>
        <trans-unit id="82e5e34cafbe17d909ca9db749c764571ec0938a" translate="yes" xml:space="preserve">
          <source>HaxeMemoryResult</source>
          <target state="translated">HaxeMemoryResult</target>
        </trans-unit>
        <trans-unit id="ceaa42e355069af6a196839b8ef12b8970f7afa8" translate="yes" xml:space="preserve">
          <source>HaxeModuleMemoryResult</source>
          <target state="translated">HaxeModuleMemoryResult</target>
        </trans-unit>
        <trans-unit id="a5797e7d5529b2f0c46501dee2a9c09cd0471222" translate="yes" xml:space="preserve">
          <source>HaxeNotificationMethod&amp;lt;TParams&amp;gt;(&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;)</source>
          <target state="translated">HaxeNotificationMethod&amp;lt;TParams&amp;gt;(&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="df670b4bb5489772b9f04e505bb508e97e56ee7f" translate="yes" xml:space="preserve">
          <source>HaxeRequestMethod&amp;lt;TParams, TResponse&amp;gt;(&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;)</source>
          <target state="translated">HaxeRequestMethod &amp;lt;TParams，TResponse&amp;gt;（&lt;a href=&quot;../../string&quot;&gt;字符串&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="8eadea4edd61d0d682d91974faffd5b5ee596d0c" translate="yes" xml:space="preserve">
          <source>HaxeResponseErrorData</source>
          <target state="translated">HaxeResponseErrorData</target>
        </trans-unit>
        <trans-unit id="274ca84ee61a83375ea4785d0a3f4d51322aaea9" translate="yes" xml:space="preserve">
          <source>HaxeResponseErrorSeverity(&lt;a href=&quot;../../int&quot;&gt;Int&lt;/a&gt;)</source>
          <target state="translated">HaxeResponseErrorSeverity(&lt;a href=&quot;../../int&quot;&gt;Int&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="5577d894cd3b816bb86807365e498f1c47701eef" translate="yes" xml:space="preserve">
          <source>HaxeServerContext</source>
          <target state="translated">HaxeServerContext</target>
        </trans-unit>
        <trans-unit id="0e33c1cffe6d43be4990ba443831462daa6af5e1" translate="yes" xml:space="preserve">
          <source>Helper for parsing to &lt;code&gt;&lt;a href=&quot;int64#Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; instances.</source>
          <target state="translated">用于解析为 &lt;code&gt;&lt;a href=&quot;int64#Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt; 实例的帮助器。</target>
        </trans-unit>
        <trans-unit id="8a45f22cfea10e03e03394133072c0b7335ba30d" translate="yes" xml:space="preserve">
          <source>Helper that converts between floating point and binary representation. Always works in low-endian encoding.</source>
          <target state="translated">在浮点和二进制之间转换的辅助程序。总是在低字节编码中工作。</target>
        </trans-unit>
        <trans-unit id="cc4a71065ff8ca97a2cf841b164f030229d81b91" translate="yes" xml:space="preserve">
          <source>Hmac</source>
          <target state="translated">Hmac</target>
        </trans-unit>
        <trans-unit id="270d13d82ffec2b56e6fe67c948ab7fc6e30a617" translate="yes" xml:space="preserve">
          <source>Hover</source>
          <target state="translated">Hover</target>
        </trans-unit>
        <trans-unit id="70b24c30e3587b1ab340e81751751551803b7fe3" translate="yes" xml:space="preserve">
          <source>HoverDisplayItemOccurence&amp;lt;T&amp;gt;</source>
          <target state="translated">HoverDisplayItemOccurence&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="68cfeab6c2e87fa0f4c9da1ddbbedeb54101f891" translate="yes" xml:space="preserve">
          <source>HoverExpectedNameKind(&lt;a href=&quot;../../int&quot;&gt;Int&lt;/a&gt;)</source>
          <target state="translated">HoverExpectedNameKind(&lt;a href=&quot;../../int&quot;&gt;Int&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="83a8d6c16269b0f6130dcaff9f6f6d4eb58cdc0b" translate="yes" xml:space="preserve">
          <source>HoverResult</source>
          <target state="translated">HoverResult</target>
        </trans-unit>
        <trans-unit id="4c7b87831dbdd6d98e3dab6f53ed0e7df3bed1c8" translate="yes" xml:space="preserve">
          <source>How the field name is quoted.</source>
          <target state="translated">如何引用字段名。</target>
        </trans-unit>
        <trans-unit id="fb5c6c62bf80b8c73f40fbbb8ffdc8cf06e4cb8f" translate="yes" xml:space="preserve">
          <source>Http</source>
          <target state="translated">Http</target>
        </trans-unit>
        <trans-unit id="d3338e7fbe2c6502756f9b7b59d035600e1674a0" translate="yes" xml:space="preserve">
          <source>Http.PROXY()</source>
          <target state="translated">Http.PROXY()</target>
        </trans-unit>
        <trans-unit id="f3ec7b5156d2a4f2b727af8afa30bd3cbb498e58" translate="yes" xml:space="preserve">
          <source>Http.addHeader()</source>
          <target state="translated">Http.addHeader()</target>
        </trans-unit>
        <trans-unit id="636daf3c41b834fdcfe7115f0c3fd7fd0ceb7dc6" translate="yes" xml:space="preserve">
          <source>Http.addParameter()</source>
          <target state="translated">Http.addParameter()</target>
        </trans-unit>
        <trans-unit id="dd448fc0abdb47273d0068bf0394281e0090b3b3" translate="yes" xml:space="preserve">
          <source>Http.async</source>
          <target state="translated">Http.async</target>
        </trans-unit>
        <trans-unit id="c8d33ad5979a3bf0774d63f7aa1f02b09114e70a" translate="yes" xml:space="preserve">
          <source>Http.cancel()</source>
          <target state="translated">Http.cancel()</target>
        </trans-unit>
        <trans-unit id="84aab51de8e50ac0b3093938c77b7cf3a2f33a58" translate="yes" xml:space="preserve">
          <source>Http.cnxTimeout</source>
          <target state="translated">Http.cnxTimeout</target>
        </trans-unit>
        <trans-unit id="572f57a49535d0d4de89283e5e6548051d589794" translate="yes" xml:space="preserve">
          <source>Http.customRequest()</source>
          <target state="translated">Http.customRequest()</target>
        </trans-unit>
        <trans-unit id="034573f921ea747f075b3c9d11003f8b0cecba62" translate="yes" xml:space="preserve">
          <source>Http.fileTransfer()</source>
          <target state="translated">Http.fileTransfer()</target>
        </trans-unit>
        <trans-unit id="01a7f413f46e50ff3af80726561ffb63649a520c" translate="yes" xml:space="preserve">
          <source>Http.fileTransfert()</source>
          <target state="translated">Http.fileTransfert()</target>
        </trans-unit>
        <trans-unit id="df7cb0b9d715e81687e54444246779af71b7607d" translate="yes" xml:space="preserve">
          <source>Http.noShutdown</source>
          <target state="translated">Http.noShutdown</target>
        </trans-unit>
        <trans-unit id="8d14d5456de4860b2de8e27da5dce29ef43c179b" translate="yes" xml:space="preserve">
          <source>Http.onData()</source>
          <target state="translated">Http.onData()</target>
        </trans-unit>
        <trans-unit id="81c10d0e486a278414e4807a0f04ea0f5adaa406" translate="yes" xml:space="preserve">
          <source>Http.onError()</source>
          <target state="translated">Http.onError()</target>
        </trans-unit>
        <trans-unit id="6a063785dc293083c815930c52114f2a36f0531f" translate="yes" xml:space="preserve">
          <source>Http.onStatus()</source>
          <target state="translated">Http.onStatus()</target>
        </trans-unit>
        <trans-unit id="fe7574d93e5796301a7cffc96418a85034562ac9" translate="yes" xml:space="preserve">
          <source>Http.request()</source>
          <target state="translated">Http.request()</target>
        </trans-unit>
        <trans-unit id="6fe67e9f4e207f4591e91c77a9adedbd1dccf4b8" translate="yes" xml:space="preserve">
          <source>Http.requestUrl()</source>
          <target state="translated">Http.requestUrl()</target>
        </trans-unit>
        <trans-unit id="8c70ef6e83aab6a980181fea8b56121439ee0f5b" translate="yes" xml:space="preserve">
          <source>Http.responseData</source>
          <target state="translated">Http.responseData</target>
        </trans-unit>
        <trans-unit id="89352962babe06cd9a4370a158dd75c1d27951fc" translate="yes" xml:space="preserve">
          <source>Http.responseHeaders</source>
          <target state="translated">Http.responseHeaders</target>
        </trans-unit>
        <trans-unit id="6781d7658e083dbcc64a637deb4836e135bfaf14" translate="yes" xml:space="preserve">
          <source>Http.setHeader()</source>
          <target state="translated">Http.setHeader()</target>
        </trans-unit>
        <trans-unit id="bfb852210747934c5855061304958945b8be21cf" translate="yes" xml:space="preserve">
          <source>Http.setParameter()</source>
          <target state="translated">Http.setParameter()</target>
        </trans-unit>
        <trans-unit id="9387dddd74cb837e253896fe2efe1e570a4f5d25" translate="yes" xml:space="preserve">
          <source>Http.setPostData()</source>
          <target state="translated">Http.setPostData()</target>
        </trans-unit>
        <trans-unit id="f777b3b2b8e4c1418511580ff978cd326aac6964" translate="yes" xml:space="preserve">
          <source>Http.url</source>
          <target state="translated">Http.url</target>
        </trans-unit>
        <trans-unit id="fcbf81a49e390dd267df5b8ab33c44fd37ffe5f6" translate="yes" xml:space="preserve">
          <source>Http.withCredentials</source>
          <target state="translated">Http.withCredentials</target>
        </trans-unit>
        <trans-unit id="5862000ccb06ed804f78c1ec45d448ec42c9d285" translate="yes" xml:space="preserve">
          <source>HttpAsyncConnection</source>
          <target state="translated">HttpAsyncConnection</target>
        </trans-unit>
        <trans-unit id="96eccea3963a9a93a06bc37f2e7c2e4b11b4d6fb" translate="yes" xml:space="preserve">
          <source>HttpBase</source>
          <target state="translated">HttpBase</target>
        </trans-unit>
        <trans-unit id="88ea47cf9ef65e511a762177233f48c303b521c9" translate="yes" xml:space="preserve">
          <source>HttpConnection</source>
          <target state="translated">HttpConnection</target>
        </trans-unit>
        <trans-unit id="0d18a7152942702506d248635e9bec30f17342b2" translate="yes" xml:space="preserve">
          <source>HttpFlash</source>
          <target state="translated">HttpFlash</target>
        </trans-unit>
        <trans-unit id="555c6377f4253b3bd58e180068388e37eff5341c" translate="yes" xml:space="preserve">
          <source>HttpJs</source>
          <target state="translated">HttpJs</target>
        </trans-unit>
        <trans-unit id="a79285de33888a25819d3f0a8f8ce44c80748869" translate="yes" xml:space="preserve">
          <source>HttpMethod(&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;)</source>
          <target state="translated">HttpMethod(&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="5fb6e3926e3a08f099f54394a3572e3e34e1048b" translate="yes" xml:space="preserve">
          <source>HttpStatus(&lt;a href=&quot;../../int&quot;&gt;Int&lt;/a&gt;)</source>
          <target state="translated">HttpStatus(&lt;a href=&quot;../../int&quot;&gt;Int&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="94b5e7b33a47805b78869f5cb19ae5cdbff8727e" translate="yes" xml:space="preserve">
          <source>HuffTools</source>
          <target state="translated">HuffTools</target>
        </trans-unit>
        <trans-unit id="b04107cd15a49148e2dc5aa32a53443db467af7d" translate="yes" xml:space="preserve">
          <source>Huffman</source>
          <target state="translated">Huffman</target>
        </trans-unit>
        <trans-unit id="fb3180110bbbfa946286f3d8f10fe4b56e681d9c" translate="yes" xml:space="preserve">
          <source>IMap</source>
          <target state="translated">IMap</target>
        </trans-unit>
        <trans-unit id="481642d0c5bce74db58aa0880d8ef3c7ea40f939" translate="yes" xml:space="preserve">
          <source>IMap&amp;lt;K, V&amp;gt;</source>
          <target state="translated">IMap &amp;lt;K，V&amp;gt;</target>
        </trans-unit>
        <trans-unit id="80e4d6b5648d56671ba8087cb6bacfa43f97dae8" translate="yes" xml:space="preserve">
          <source>IMap.exists()</source>
          <target state="translated">IMap.exists()</target>
        </trans-unit>
        <trans-unit id="cb9d22416c6630b232f25c45a11ae523663b41c2" translate="yes" xml:space="preserve">
          <source>IMap.get()</source>
          <target state="translated">IMap.get()</target>
        </trans-unit>
        <trans-unit id="2a2c38f8c2a46983a2b72cedf6f241fe0d9d8ea9" translate="yes" xml:space="preserve">
          <source>IMap.iterator()</source>
          <target state="translated">IMap.iterator()</target>
        </trans-unit>
        <trans-unit id="8cac7973ca46217f3101eb7a14bb3e313c3bbb3a" translate="yes" xml:space="preserve">
          <source>IMap.keys()</source>
          <target state="translated">IMap.keys()</target>
        </trans-unit>
        <trans-unit id="9f466085c74e3279872913d30c9681bc76a6570a" translate="yes" xml:space="preserve">
          <source>IMap.remove()</source>
          <target state="translated">IMap.remove()</target>
        </trans-unit>
        <trans-unit id="f4160acf245281dfaa31976d780afbe4026c3ead" translate="yes" xml:space="preserve">
          <source>IMap.set()</source>
          <target state="translated">IMap.set()</target>
        </trans-unit>
        <trans-unit id="53e8a0feeded5b3118ee07c2a58a517a7de889bd" translate="yes" xml:space="preserve">
          <source>IMap.toString()</source>
          <target state="translated">IMap.toString()</target>
        </trans-unit>
        <trans-unit id="095392f72b24b939ad95aef01a89ffc62a3a8180" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt;, big-endian is used, otherwise &lt;code&gt;little-endian&lt;/code&gt; is used.</source>
          <target state="translated">如果为 &lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt; ，则使用big-endian，否则使用 &lt;code&gt;little-endian&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8371817a3281139412ed456d9c787e6668db603d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;mainloop#MainLoop&quot;&gt;haxe.MainLoop&lt;/a&gt;&lt;/code&gt; is kept from DCE, then we will insert an &lt;code&gt;&lt;a href=&quot;entrypoint#run&quot;&gt;haxe.EntryPoint.run&lt;/a&gt;()&lt;/code&gt; call just at then end of &lt;code&gt;main()&lt;/code&gt;. This class can be redefined by custom frameworks so they can handle their own main loop logic.</source>
          <target state="translated">如果 &lt;code&gt;&lt;a href=&quot;mainloop#MainLoop&quot;&gt;haxe.MainLoop&lt;/a&gt;&lt;/code&gt; 不在DCE中，那么我们将在 &lt;code&gt;main()&lt;/code&gt; 的末尾插入一个 &lt;code&gt;&lt;a href=&quot;entrypoint#run&quot;&gt;haxe.EntryPoint.run&lt;/a&gt;()&lt;/code&gt; 调用。可以通过自定义框架重新定义此类，以便它们可以处理自己的主循环逻辑。</target>
        </trans-unit>
        <trans-unit id="806c439dda250bd2502d90c5cb41f78f00432d07" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt;, the result is &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 为 &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; ，则结果为 &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="00e54eb51273c424e2b0a824325352667d0d9649" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt;, the result is &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 为 &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; ，则结果为 &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5442c2278868e2938750c103b799d9812ac4dc23" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are null, the result is 0. If only one of them is null, the result is unspecified.</source>
          <target state="translated">如果 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 为null，则结果为0。如果只有其中一个为null，则结果不确定。</target>
        </trans-unit>
        <trans-unit id="4e6008fe52b0c70a737a17ff9e2d0c4c94e0e9fb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, the result is unspecified.</source>
          <target state="translated">如果 &lt;code&gt;a&lt;/code&gt; 为 &lt;code&gt;null&lt;/code&gt; ，则结果不确定。</target>
        </trans-unit>
        <trans-unit id="89d2b6bf49b8d9a3a5948ae3e1ba38250cc98c25" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;a&lt;/code&gt; is less than &lt;code&gt;b&lt;/code&gt;, the result is negative. If &lt;code&gt;b&lt;/code&gt; is less than &lt;code&gt;a&lt;/code&gt;, the result is positive. If &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are equal, the result is 0.</source>
          <target state="translated">如果 &lt;code&gt;a&lt;/code&gt; 小于 &lt;code&gt;b&lt;/code&gt; ，则结果为负。如果 &lt;code&gt;b&lt;/code&gt; 小于 &lt;code&gt;a&lt;/code&gt; ，则结果为正。如果 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 相等，则结果为0。</target>
        </trans-unit>
        <trans-unit id="17b119e45f77af8ee02a5f995a0db218d2f6b08d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;a&lt;/code&gt; is the empty Array &lt;code&gt;[]&lt;/code&gt;, a copy of &lt;code&gt;this&lt;/code&gt; Array is returned.</source>
          <target state="translated">如果 &lt;code&gt;a&lt;/code&gt; 为空Array &lt;code&gt;[]&lt;/code&gt; ，则返回 &lt;code&gt;this&lt;/code&gt; Array 的副本。</target>
        </trans-unit>
        <trans-unit id="20503f7a461853deccb69f99a1ead29b11f5283c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;a&lt;/code&gt; or &lt;code&gt;b&lt;/code&gt; are &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt;, the result is &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;a&lt;/code&gt; 或 &lt;code&gt;b&lt;/code&gt; 为 &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; ，则结果为 &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fa0f8ce6d8130fa16cbf8b3364a99013879b04bb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;a&lt;/code&gt; or &lt;code&gt;b&lt;/code&gt; are &lt;code&gt;NaN&lt;/code&gt;, the result is &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;a&lt;/code&gt; 或 &lt;code&gt;b&lt;/code&gt; 为 &lt;code&gt;NaN&lt;/code&gt; ，则结果为 &lt;code&gt;NaN&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="764a63dc785e94c27378fab49a19b97c8cddd465" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;a&lt;/code&gt; or &lt;code&gt;b&lt;/code&gt; are &lt;code&gt;NaN&lt;/code&gt;, the result is &lt;code&gt;NaN&lt;/code&gt;. If &lt;code&gt;a&lt;/code&gt; or &lt;code&gt;b&lt;/code&gt; are &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt;, the result is &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt;. If &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt;, the result is &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;a&lt;/code&gt; 或 &lt;code&gt;b&lt;/code&gt; 为 &lt;code&gt;NaN&lt;/code&gt; ，则结果为 &lt;code&gt;NaN&lt;/code&gt; 。如果 &lt;code&gt;a&lt;/code&gt; 或 &lt;code&gt;b&lt;/code&gt; 为 &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; ，则结果为 &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; 。如果 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 为 &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; ，则结果为 &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9b8480ffbe69ea84483fa92de20b463c64ae1107" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;a&lt;/code&gt; or &lt;code&gt;b&lt;/code&gt; are &lt;code&gt;NaN&lt;/code&gt;, the result is &lt;code&gt;NaN&lt;/code&gt;. If &lt;code&gt;a&lt;/code&gt; or &lt;code&gt;b&lt;/code&gt; are &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt;, the result is &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt;. If &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt;, the result is &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;a&lt;/code&gt; 或 &lt;code&gt;b&lt;/code&gt; 为 &lt;code&gt;NaN&lt;/code&gt; ，则结果为 &lt;code&gt;NaN&lt;/code&gt; 。如果 &lt;code&gt;a&lt;/code&gt; 或 &lt;code&gt;b&lt;/code&gt; 为 &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; ，则结果为 &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; 。如果 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 为 &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; ，则结果为 &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f98589358590dbfa176793947c3c4e60408c83a5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;a&lt;/code&gt; or &lt;code&gt;b&lt;/code&gt; are &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt;, the result is &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;a&lt;/code&gt; 或 &lt;code&gt;b&lt;/code&gt; 为 &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; ，则结果为 &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="380f0d19edd9607c0b82bca8005a8b9b544e9601" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;a&lt;/code&gt; or &lt;code&gt;b&lt;/code&gt; are &lt;code&gt;null&lt;/code&gt;, the result is unspecified.</source>
          <target state="translated">如果 &lt;code&gt;a&lt;/code&gt; 或 &lt;code&gt;b&lt;/code&gt; 为 &lt;code&gt;null&lt;/code&gt; ，则结果不确定。</target>
        </trans-unit>
        <trans-unit id="0daa590138334f95dea0bb490d5db9a66a068f6b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;a&lt;/code&gt; or &lt;code&gt;b&lt;/code&gt; are null, the result is unspecified.</source>
          <target state="translated">如果 &lt;code&gt;a&lt;/code&gt; 或 &lt;code&gt;b&lt;/code&gt; 为null，则结果不确定。</target>
        </trans-unit>
        <trans-unit id="593b7283525e77610bf630a51725331540ae951a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;a&lt;/code&gt; or &lt;code&gt;cmp&lt;/code&gt; are null, the result is unspecified.</source>
          <target state="translated">如果 &lt;code&gt;a&lt;/code&gt; 或 &lt;code&gt;cmp&lt;/code&gt; 为null，则结果不确定。</target>
        </trans-unit>
        <trans-unit id="9ca5948f43df4293bdbfc2f02d182ff4637280d4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;array&lt;/code&gt; is null, the result is unspecified.</source>
          <target state="translated">如果 &lt;code&gt;array&lt;/code&gt; 为null，则结果不确定。</target>
        </trans-unit>
        <trans-unit id="09bcd259f9fb663707cf52e33c99c934915ee6a4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;by&lt;/code&gt; contains &lt;code&gt;$1&lt;/code&gt; to &lt;code&gt;$9&lt;/code&gt;, the digit corresponds to number of a matched sub-group and its value is used instead. If no such sub-group exists, the replacement is unspecified. The string &lt;code&gt;$$&lt;/code&gt; becomes &lt;code&gt;$&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;by&lt;/code&gt; 包含 &lt;code&gt;$1&lt;/code&gt; 到 &lt;code&gt;$9&lt;/code&gt; ，则该数字对应于匹配的子组的编号，并使用其值代替。如果不存在这样的子组，则替换未指定。字符串 &lt;code&gt;$$&lt;/code&gt; 变为 &lt;code&gt;$&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8b869a484cb4b9785f3df7452da79ad302197065" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;c.length&lt;/code&gt; is 1, the resulting String length is exactly &lt;code&gt;l&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;c.length&lt;/code&gt; 为1，则得到的String长度恰好为 &lt;code&gt;l&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9eee1d7d5826a3abea015aa104858c3252d51ed0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;c1&lt;/code&gt; or &lt;code&gt;c2&lt;/code&gt; are &lt;code&gt;null&lt;/code&gt;, the result is unspecified.</source>
          <target state="translated">如果 &lt;code&gt;c1&lt;/code&gt; 或 &lt;code&gt;c2&lt;/code&gt; 为 &lt;code&gt;null&lt;/code&gt; ，则结果不确定。</target>
        </trans-unit>
        <trans-unit id="39ffe50308ab06c7a6b04bb859f4305d5c79e858" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;c&lt;/code&gt; has no package, the class name is returned.</source>
          <target state="translated">如果 &lt;code&gt;c&lt;/code&gt; 没有包，则返回类名。</target>
        </trans-unit>
        <trans-unit id="83d82f5ce895f55fb2fdfe4dfd5aaa4aa88d4c45" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;c&lt;/code&gt; has no runtime type information, e.g. because no &lt;code&gt;@:rtti&lt;/code&gt; was added, an exception of type &lt;code&gt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; is thrown.</source>
          <target state="translated">如果 &lt;code&gt;c&lt;/code&gt; 没有运行时类型信息，例如因为未添加 &lt;code&gt;@:rtti&lt;/code&gt; ，则抛出 &lt;code&gt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 类型的异常。</target>
        </trans-unit>
        <trans-unit id="40a947237916bc5d22367684896f83febd5c11f1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;c&lt;/code&gt; has no runtime type information, e.g. because no &lt;code&gt;@:rtti@&lt;/code&gt; was added, &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">如果 &lt;code&gt;c&lt;/code&gt; 没有运行时类型信息，例如因为未添加 &lt;code&gt;@:rtti@&lt;/code&gt; ，则返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5f34e2beeb4b595e343fe346463bb6e9cd980b7d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;c&lt;/code&gt; has no super class, null is returned.</source>
          <target state="translated">如果 &lt;code&gt;c&lt;/code&gt; 没有超类，则返回null。</target>
        </trans-unit>
        <trans-unit id="2135b5c37dd513dfa232c20674707f8f1a1d7da8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;c&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, the result is unspecified.</source>
          <target state="translated">如果 &lt;code&gt;c&lt;/code&gt; 为 &lt;code&gt;null&lt;/code&gt; ，则结果不确定。</target>
        </trans-unit>
        <trans-unit id="449a95450c00cb7433caa66eed42b05d2994d9fc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;c&lt;/code&gt; is inside a package, the package structure is returned dot- separated, with another dot separating the class name: &lt;code&gt;pack1.pack2.(...).packN.ClassName&lt;/code&gt; If &lt;code&gt;c&lt;/code&gt; is a sub-type of a Haxe module, that module is not part of the package structure.</source>
          <target state="translated">如果 &lt;code&gt;c&lt;/code&gt; 在包中，则返回点分隔的包结构，并用另一个点分隔类名： &lt;code&gt;pack1.pack2.(...).packN.ClassName&lt;/code&gt; 如果 &lt;code&gt;c&lt;/code&gt; 是Haxe模块的子类型，则模块不是包结构的一部分。</target>
        </trans-unit>
        <trans-unit id="52aa70545d54db8f1788ac38807f7e25e29a8ac8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;c&lt;/code&gt; is negative or has another invalid value, the result is unspecified.</source>
          <target state="translated">如果 &lt;code&gt;c&lt;/code&gt; 为负或具有另一个无效值，则结果不确定。</target>
        </trans-unit>
        <trans-unit id="94720d1c9ebfcfed65765af9c85387eaf94aec47" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;c&lt;/code&gt; is null, the result is null.</source>
          <target state="translated">如果 &lt;code&gt;c&lt;/code&gt; 为null，则结果为null。</target>
        </trans-unit>
        <trans-unit id="1ffd90be209568bfa86486c4a24a51a62f0b56a7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;c&lt;/code&gt; is null, the result is unspecified.</source>
          <target state="translated">如果 &lt;code&gt;c&lt;/code&gt; 为null，则结果不确定。</target>
        </trans-unit>
        <trans-unit id="5f55dc64b9918a7502c92c080b9c9fe80f158457" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;c&lt;/code&gt; is the empty String &lt;code&gt;&quot;&quot;&lt;/code&gt; or if &lt;code&gt;l&lt;/code&gt; does not exceed &lt;code&gt;s.length&lt;/code&gt;, &lt;code&gt;s&lt;/code&gt; is returned unchanged.</source>
          <target state="translated">如果 &lt;code&gt;c&lt;/code&gt; 是空字符串 &lt;code&gt;&quot;&quot;&lt;/code&gt; 或 &lt;code&gt;l&lt;/code&gt; 不超过 &lt;code&gt;s.length&lt;/code&gt; ，则 &lt;code&gt;s&lt;/code&gt; 不变地返回。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
